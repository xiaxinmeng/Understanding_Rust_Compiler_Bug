{"sha": "e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTA0NDFhNWJmYjI5MDgzYTUzMjMwN2JhMmIxZmQ2ZDZkMTM5NDRiYQ==", "commit": {"author": {"name": "Matthias Klose", "email": "doko@gcc.gnu.org", "date": "2008-06-28T13:29:13Z"}, "committer": {"name": "Matthias Klose", "email": "doko@gcc.gnu.org", "date": "2008-06-28T13:29:13Z"}, "message": "Import GNU Classpath (classpath-0_97_2-release).\n\nlibjava/\n\n2008-06-28  Matthias Klose  <doko@ubuntu.com>\n\n        Import GNU Classpath (classpath-0_97_2-release).\n\n        * Regenerate class and header files.\n        * Regenerate auto* files.\n        * gcj/javaprims.h: Define jobjectRefType.\n        * jni.cc (_Jv_JNI_GetObjectRefType): New (stub only).\n        (_Jv_JNIFunctions): Initialize GetObjectRefType.\n        * gnu/classpath/jdwp/VMVirtualMachine.java,\n        java/security/VMSecureRandom.java: Merge from classpath.\n        * HACKING: Fix typo.\n        * ChangeLog-2007: New file.\n        * configure.ac: Set JAVAC, pass --disable-regen-headers to classpath.\n\nlibjava/classpath/\n\n2008-06-28  Matthias Klose  <doko@ubuntu.com>\n\n        * m4/ac_prog_javac.m4: Disable check for JAVAC, when\n        not configured with --enable-java-maintainer-mode.\n        * aclocal.m4, configure: Regenerate.\n        * native/jni/gstreamer-peer/Makefile.am: Do not link with\n        libclasspathnative.\n        * native/jni/gstreamer-peer/Makefile.in: Regenerate.\n        * tools/Makefile.am, lib/Makefile.am: Use JAVAC for setting\n        JCOMPILER, drop flags not understood by gcj.\n\nFrom-SVN: r137223", "tree": {"sha": "602cd7aa7c947386134690d8e0f6b53abcdeacb9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/602cd7aa7c947386134690d8e0f6b53abcdeacb9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/comments", "author": null, "committer": null, "parents": [{"sha": "15c151967dd1cde61b79d26374f608f63a29d411", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15c151967dd1cde61b79d26374f608f63a29d411", "html_url": "https://github.com/Rust-GCC/gccrs/commit/15c151967dd1cde61b79d26374f608f63a29d411"}], "stats": {"total": 54390, "additions": 34554, "deletions": 19836}, "files": [{"sha": "d10991d0cd4f134ae0154ae1941fcbe1c5049a45", "filename": "libjava/ChangeLog", "status": "modified", "additions": 15, "deletions": 2659, "changes": 2674, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -1,3 +1,18 @@\n+2008-06-28  Matthias Klose  <doko@ubuntu.com>\n+\n+        Import GNU Classpath (classpath-0_97_2-release).\n+\n+        * Regenerate class and header files.\n+        * Regenerate auto* files.\n+\t* gcj/javaprims.h: Define jobjectRefType.\n+\t* jni.cc (_Jv_JNI_GetObjectRefType): New (stub only).\n+\t(_Jv_JNIFunctions): Initialize GetObjectRefType.\n+\t* gnu/classpath/jdwp/VMVirtualMachine.java,\n+\tjava/security/VMSecureRandom.java: Merge from classpath.\n+\t* HACKING: Fix typo.\n+\t* ChangeLog-2007: New file.\n+\t* configure.ac: Set JAVAC, pass --disable-regen-headers to classpath.\n+\n 2008-06-17  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n \n \t* configure: Regenerate.\n@@ -631,2662 +646,3 @@\n \tPR libgcj/34444\n \t* java/lang/natClass.cc (Class::getEnclosingClass): Call\n \tgetDeclaringClass().\n-\n-2007-12-22  David Daney  <ddaney@avtrex.com>\n-\n-\t* scripts/makemake.tcl (emit_bc_rule): Use $(LIBGCJ_BC_FLAGS)\n-\tinstead of -findirect-dispatch -fno-indirect-classes.\n-\t* configure.ac (libgcj-bc): New AC_ARG_ENABLE.\n-\t(SUPPRESS_LIBGCJ_BC): New AM_CONDITIONAL.\n-\t* Makefile.am (LIBGCJ_BC_FLAGS): New variable.\n-\t* Makefile.in: Regenerate.\n-\t* include/Makefile.in: Same.\n-\t* testsuite/Makefile.in: Same.\n-\t* configure: Same.\n-\t* gcj/Makefile.in: Same.\n-\t* sources.am: Same.\n-\t\n-2007-12-17  Jakub Jelinek  <jakub@redhat.com>\n-\n-\t* testsuite/Makefile.am (compile-tests): Build\n-\tlibjava.jvmti/interp/*.h with -jni rather than -cni.\n-\t* testsuite/Makefile.in: Rebuilt.\n-\n-2007-12-08  Andreas Tobler  <a.tobler@schweiz.org>\n-\n-\t* configure.host: Add bits for i?86-*-darwin9 and x86_64-*-darwin9.\n-\t* configure.ac: Add darwin-signal.h to x86_64-*-darwin9 and\n-\ti?86-*darwin9.\n-\t* configure.in: Regenerate.\n-\t* darwin.cc: Add definitions for Darwin specific functions for 64-bit.\n-\t(darwin_java_register_dyld_add_image_hook): Use this specific\n-\tfunctions.\n-\t* Makefile.am (gij_LDFLAGS): Add extra_gij_ldflags for Darwin9.\n-\t* Makefile.in: Regenerate.\n-\t* include/Makefile.in: Likewise.\n-\t* gcj/Makefile.in: Likewise.\n-\t* testsuite/Makefile.in: Likewise.\n-\t* testsuite/lib/libjava.exp (libjava_arguments): Add allow_stack_execute\n-\tfor *-*-darwin9*.\n-\n-2007-12-06  David Daney  <ddaney@avtrex.com>\n-\n-\t* interpret.cc: Replace ffi_raw with INTERP_FFI_RAW_TYPE throughout.\n-\t(ncode_closure, ffi_closure_fun): Define versions for\n-\tnon-FFI_NATIVE_RAW_API case.\n-\t* include/java-interp.h (INTERP_FFI_RAW_TYPE): Define and use to\n-\treplace\tffi_raw throughout.\n-\t* jni.cc, interpret-run.cc: Replace ffi_raw with INTERP_FFI_RAW_TYPE\n-\tthroughout.\n-\n-2007-12-06  Andreas Tobler  <a.tobler@schweiz.org>\n-\n-\t* testsuite/libjava.jni/jni.exp (gcj_jni_get_cxxflags_invocation): Make\n-\tthe testsuite multilib aware for Darwin.\n-\n-2007-12-05  Thomas Fitzsimmons  <fitzsim@redhat.com>\n-\n-\t* gnu/java/awt/peer/gtk/GdkGraphicsEnvironment.h: Regenerate.\n-\t* gnu/java/awt/peer/gtk/GtkWindowPeer.h: Likewise.\n-\t* java/awt/Component.h: Likewise.\n-\t* java/awt/Container.h: Likewise.\n-\n-2007-11-05  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\t* configure.ac: Don't run config-ml.in directly.\n-\t(multilib_arg): New.\n-\t* configure: Regenerated.\n-\n-2007-10-22  David Daney  <ddaney@avtrex.com>\n-\n-\t* include/jvm.h (_Jv_SetGCFreeSpaceDivisor): Declare new function.\n-\t* boehm.cc (_Jv_SetGCFreeSpaceDivisor): Define it.\n-\n-2007-10-18  David Daney  <ddaney@avtrex.com>\n-\n-\t* classpath/lib/gnu/java/locale/LocaleData.class: Regenerate\n-\t* classpath/lib/gnu/javax/sound/sampled/gstreamer: Add generated\n-\tfiles.\n-\t* gnu/javax/sound/sampled/gstreamer: Add generated files.\n-\t\n-2007-10-15  Maciej W. Rozycki  <macro@linux-mips.org>\n-\n-\t* configure: Regenerate following changes to ../config/tls.m4.\n-\n-2007-09-17  Tom Tromey  <tromey@redhat.com>\n-\n-\t* defineclass.cc (MAJOR_1_6): New define.\n-\t(MINOR_1_6): Likewise.\n-\t(_Jv_ClassReader::parse): Handle 1.6 bytecode.\n-\n-2007-09-12  David Daney  <ddaney@avtrex.com>\n-\n-\t* configure.host: Enable interpreter for mips64.  Enable hash\n-\tsynchronization for all mips*-*-linux* targets.\n-\t* sysdep/mips/locks.h (compare_and_swap, compare_and_swap_release) Use\n-\t__sync_bool_compare_and_swap instead of in-line asm.\n-\t(release_set, read_barrier, write_barrier): Use __sync_synchronize\n-\tinstead of in-line asm.\n-\n-2007-09-09  Andreas Tobler  <a.tobler@schweiz.org>\n-\n-\tPR libgcj/33326\n-\t* testsuite/lib/libjava.exp (libjava_arguments): Append the test spec\n-\tonly for linux targets.\n-\n-2007-09-09  Andrew Haley  <aph@redhat.com>\n-\n-\t* interpret-run.cc (invokevirtual_resolved): Nullcheck object on\n-\tTOS.\n-\n-2007-09-06  Tom Tromey  <tromey@redhat.com>\n-\n-\t* testsuite/libjava.lang/StackTrace2.jar: Rebuilt.\n-\t* testsuite/libjava.lang/StackTrace2.java (checkLine): Print file\n-\tname.\n-\n-2007-09-06  Roman Zippel  <zippel@linux-m68k.org>\n-\n-\t* sysdep/m68k/locks.h: New file.\n-\t* configure.host: Set sysdeps_dir and libgcj_interpreter for m68k.\n-\t* configure.ac: Set SIGNAL_HANDLER for m68*-*-linux*.\n-\t* configure: Regenerate.\n-\n-2007-09-05  Samuel Thibault  <samuel.thibault@ens-lyon.org>\n-\n-\t* configure.host(gnu*): Set use_libgcj_bc to yes.\n-\n-2007-09-04  Matthias Klose  <doko@ubuntu.com>\n-\n-\t* configure.ac: Do not pass --with-native-libdir to classpath.\n-\t* configure: Regenerate.\n-\n-2007-09-04  Matthias Klose  <doko@ubuntu.com>\n-\n-\tPR libgcj/33278\n-\t* configure.ac: Robustify extraction of gcj version.\n-\t* configure: Regenerate.\n-\n-2007-09-04  Andrew Haley  <aph@redhat.com>\n-\n-\tPR java/27908\n-\t* testsuite/libjava.lang/PR27908.java\n-\t({run1,run2,run3}.isRunning): New Method.\n-\t(main): Fix race condition.\n-\n-2007-08-29  Andrew Haley  <aph@redhat.com>\n-\n-\t* gnu/classpath/natVMStackWalker.cc (VMStackWalker::getCallingClass):\n-\tMake sure we're not sibcalled.\n-\t(GET_CALLING_CLASS): Define for ARM EABI.\n-\n-2007-08-22  Andrew Haley  <aph@redhat.com>\n-\n-\t* configure.host (BACKTRACESPEC): Add arm*-linux*.\n-\n-2007-08-22  Andrew Haley  <aph@redhat.com>\n-\n-\t* configure.ac (LIBSTDCXXSPEC): New.\n-\t* configure.host: Add arm*-linux* to pthread test.\n-\t* configure.ac (LIBGCJTESTSPEC): Add path to libstdc++ for ARM\n-\tEABI.\n-\t* testsuite/libjava.jni/jni.exp (gcj_jni_compile_c_to_so): Use\n-\t-fexceptions for ARM EABI.\n-\t* testsuite/lib/libjava.exp (libjava_arguments): Add libgcj-test.spec.\n-\t(libjava_invoke): Log the invocation.\n-\n-2007-08-15  Andrew Haley  <aph@redhat.com>\n-\n-\t* configure.ac (extra_ldflags): Define.\n-\t* Makefile.am: Use extra_ldflags for all executables.\n-\n-2007-08-14  Andrew Haley  <aph@redhat.com>\n-\n-\t* sysdep/arm/backtrace.h: Remove stubs for _Unwind_GetIPInfo,\n-\t_Unwind_GetRegionStart, and _Unwind_Backtrace.\n-\n-2007-07-27  Andrew Haley  <aph@redhat.com>\n-\n-\t* gnu/classpath/natVMStackWalker.cc (GET_CALLING_CLASS): Stub for\n-\tARM EABI.\n-\t* exception.cc (get_exception_header_from_ue): New.\n-\t(get_ttype_entry): ARM EABI version.\n-\t(PERSONALITY_FUNCTION): Add ARM EABI code.\n-\t* sysdep/arm/backtrace.h: New file.\n-\t* stacktrace.cc (_URC_NORMAL_STOP): New.\n-\t* configure.ac (extra_ldflags_libjava): Add libsupc++.la for ARM\n-\tEABI.\n-\t* configure.host (BACKTRACESPEC): Add arm/backtrace.h.\n-\n-2007-08-31  Matthias Klose  <doko@ubuntu.com>\n-\n-\t* classpath/lib/java/util/EnumSet*.class: Regenerate\n-\n-2007-08-30  Andreas Tobler  <a.tobler@schweiz.org>\n-\n-\t* gij.cc (version): Update Copyright year.\n-\n-2007-08-16  Samuel Thibault  <samuel.thibault@ens-lyon.org>\n-\n-\t* configure.host (gnu*): Set use_libgcj_bc to yes.\n-\n-2007-08-15  Tom Tromey  <tromey@redhat.com>\n-\n-\t* java/lang/Class.java (internalGetFields): Use LinkedHashSet.\n-\t* classpath/lib/java/lang/Class.class: Rebuilt.\n-\n-2007-08-15  Samuel Thibault  <samuel.thibault@ens-lyon.org>\n-\n-\t* java/lang/natPosixProcess.cc (sigchld_handler) [!SA_SIGINFO]: Remove\n-\t'si' and 'third' parameters.  Disable calling\n-\tpmi->old_sigaction.sa_sigaction.\n-\t(java::lang::PosixProcess*ProcessManager::init) [!SA_SIGINFO]: Set\n-\tsa.sa_handler instead of sa.sa_sigaction, don't set SA_SIGINFO flag.\n-\n-2007-08-09  Andrew Haley  <aph@redhat.com>\n-\n-\t* testsuite/lib/libjava.exp (libjava_invoke): Log the invocation.\n-\n-2007-08-08  Samuel Thibault  <samuel.thibault@ens-lyon.org>\n-\n-\t* java/net/natVMInetAddressPosix.cc\n-\t(java::net::VMInetAddress::getLocalHostname) [!MAXHOSTNAMELEN]:\n-\tAllocate buffer dynamically.\n-\n-2007-08-04  Alfred M. Szmidt  <ams@gnu.org>\n-\n-\t* java/io/natFilePosix.cc (init_native) [!MAXPATHLEN]: Define to 0.\n-\t* java/io/File.java (createTempFile): Don't truncate if the system\n-\tdoesn't have a limit on the length of a file name.\n-\t* classpath/lib/java/io/File.class: Regenerate.\n-\n-2007-08-04  Matthias Klose  <doko@ubuntu.com>\n-\n-\tImport GNU Classpath (libgcj-import-20070727).\n-\n-\t* Regenerate class and header files.\n-\t* Regenerate auto* files.\n-\n-\t* include/jvm.h:\n-\t* jni-libjvm.cc (Jv_JNI_InvokeFunctions): Rename type.\n-\t* jni.cc (_Jv_JNIFunctions, _Jv_JNI_InvokeFunctions): Likewise.\n-\t* jni.cc (_Jv_JNI_CallAnyMethodA, _Jv_JNI_CallAnyVoidMethodA,\n-\t_Jv_JNI_CallMethodA, _Jv_JNI_CallVoidMethodA,\n-\t_Jv_JNI_CallStaticMethodA, _Jv_JNI_CallStaticVoidMethodA,\n-\t_Jv_JNI_NewObjectA, _Jv_JNI_SetPrimitiveArrayRegion): Constify\n-\tjvalue parameter.\n-\t* java/lang/reflect/natMethod.cc (_Jv_CallAnyMethodA): Likewise.\n-\n-\t* java/lang/VMFloat.java (toString, parseFloat): New.\n-\n-\t* gnu/awt/xlib/XToolkit.java (setAlwaysOnTop, isModalityTypeSupported,\n-\tisModalExclusionTypeSupported): New (stub only).\n-\t* gnu/awt/xlib/XCanvasPeer.java (requestFocus): Likewise.\n-\t* gnu/awt/xlib/XFramePeer.java (updateMinimumSize, updateIconImages,\n-\tupdateFocusableWindowState, setModalBlocked, getBoundsPrivate,\n-\tsetAlwaysOnTop): Likewise.\n-\t* gnu/awt/xlib/XFontPeer.java (canDisplay): Update signature.\n-\n-\t* scripts/makemake.tcl: Ignore gnu/javax/sound/sampled/gstreamer,\n-\tignore javax.sound.sampled.spi.MixerProvider, ignore .in files.\n-\n-\t* HACKING: Mention --enable-gstreamer-peer, removal of generated files.\n-\n-2007-07-31  David Daney  <ddaney@avtrex.com>\n-\n-\t* HACKING: Document regenerating configure and aclocal.m4.\n-\n-2007-07-31  David Daney  <ddaney@avtrex.com>\n-\n-\t* configure.ac (INTERPRETER): New AM_CONDITIONAL.\n-\t* scripts/makemake.tcl (package_map): Mark jdwp and jvmti packages\n-\tas being for interpreter only.  Place interpreter related files in\n-\t'if INTERPRETER' block.\n-\t(interpreter_package_files): New list.\n-\t(interpreter_header_vars): Ditto.\n-\t(emit_package_rule_to_list): Renamed from emit_package_rule with\n-\tnew target list parameter.\n-\t(emit_package_rule): Rewritten to call emit_package_rule_to_list.\n-\t(emit_interpreter_rule): New function.\n-\t(emit_source_var): Place interpreter related files in\n-\tinterpreter_header_vars.\n-\t* Makefile.am (ACLOCAL_AMFLAGS): Add -I libltdl.\n-\t(libgcj_interpret_source_files): New variable.\n-\t(libgcj_la_SOURCES): Move jvmti.cc and  interpret.cc to\n-\tlibgcj_interpret_source_files and include\n-\tlibgcj_interpret_source_files.\n-\t(nat_jdwp_source_files): New variable.\n-\t(nat_jvmti_source_files): Ditto.\n-\t(nat_source_files): Move jdwp and jvmti related files to\n-\tnat_jdwp_source_files and nat_jvmti_source_files and include\n-\tnat_jdwp_source_files and nat_jvmti_source_files.\n-\t* Makefile.in: Regenerate.\n-\t* include/Makefile.in: Ditto.\n-\t* testsuite/Makefile.in: Ditto.\n-\t* gcj/Makefile.in: Ditto.\n-\t* sources.am: Ditto.\n-\t* configure: Ditto.\n-\t* include/config.h.in: Ditto.\n-\t* interpret.cc: Remove #ifdef INTERPRETER block.\n-\t* stacktrace.cc (UnwindTraceFn): Do not handle proxy frames if\n-\tinterpreter disabled.\n-\t* include/java-interp.h (_Jv_FrameType): Move outside of\n-\t#ifdef INTERPRETER block.\n-\t* include/execution.h (_Jv_IndirectCompiledEngine::do_get_closure_list,\n-\t_Jv_InterpreterEngine, _Jv_soleInterpreterEngine): Place in\n-\t#ifdef INTERPRETER block.\n-\t* jni.cc (jvmti.h, jvmti-int.h):  Only include if INTERPRETER is\n-\tdefined.\n-\t(_Jv_JNI_PopSystemFrame, _Jv_JNI_GetEnv): Only do jvmti processing\n-\tif INTERPRETER is defined.\n-\t* prims.cc (jvmti.h, jvmti-int.h, Jdwp.h, VMVirtualMachine.h):  Only\n-\tinclude if INTERPRETER is defined.\n-\t(defaultJdwpOptions, jdwpOptions, jvmti_agent_onload_func,\n-\tjvmti_agent_onunload_func, jvmti_agentonload, jvmti_agentonunload,\n-\tjvmti_agent_opts, load_jvmti_agent): Only define if INTERPRETER is\n-\tdefined.\n-\t(parse_x_arg): Only process 'runjdwp:' if INTERPRETER is defined.\n-\t(parse_init_args): Only process jvmti related options if\n-\tINTERPRETER is defined.\n-\t(_Jv_CreateJavaVM): Only call _Jv_JVMTI_Init if INTERPRETER is\n-\tdefined.\n-\t(_Jv_RunMain): Only do jvmti and jdwp processing if INTERPRETER is\n-\tdefined.\n-\t* link.cc (jvmti.h, jvmti-int.h):  Only include if INTERPRETER is\n-\tdefined.\n-\t(_Jv_ThrowNoClassDefFoundError, _Jv_Linker::create_error_method):\n-\tDefine if if INTERPRETER is not defined.\n-\t(_Jv_Linker::wait_for_state): Only do jvmti proccessing if\n-\tINTERPRETER is defined.\n-\t* boehm.cc (closure_list_pointer, finalize_closure_list,\n-\t_Jv_ClosureListFinalizer): Only define if INTERPRETER is\n-\tdefined.\n-\t* java/lang/natThread.cc (jvmti.h, jvmti-int.h):  Only include if\n-\tINTERPRETER is defined.\n-\t(finish_, _Jv_NotifyThreadStart): Only do jvmti proccessing if\n-\tINTERPRETER is defined.\n-\t* java/lang/Class.h (_Jv_InterpreterEngine): Move declaration\n-\tand friend declaration inside #ifdef INTERPRETER block.\n-\t* java/lang/natClass.cc (_Jv_ClosureList::releaseClosures,\n-\t_Jv_ClosureList::registerClosure, _Jv_GetInterpClassSourceFile):\n-\tOnly define if INTERPRETER is defined.\n-\t* java/lang/reflect/natVMProxy.cc (UnsupportedOperationException.h):\n-\tInclude.\n-\t(generateProxyClass): Throw UnsupportedOperationException unless\n-\tINTERPRETER is defined.\n-\n-2007-07-29  Matthias Klose  <doko@ubuntu.com>\n-\n-\t* HACKING: Document regenerating configure.\n-\n-2007-07-29  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\tPR libgcj/32929\n-\t* aclocal.m4: Regenerated.\n-\t* configure: Likewise.\n-\n-2007-07-28  Matthias Klose  <doko@ubuntu.com>\n-\n-\t* configure.ac: Encode the libgcj soversion in dbexecdir,\n-\tpass --with-native-libdir to classpath configure.\n-\t* configure: Regenerate.\n-\n-2007-07-28  Matthias Klose  <doko@ubuntu.com>\n-\n-\t* classpath/jvmti.h: Remove.\n-\n-2007-07-27  Tom Tromey  <tromey@redhat.com>\n-\n-\t* Rebuild .class files with new ecj.\n-\n-2007-07-23  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>\n-\n-\t* configure.ac (mips-sgi-irix6*): Override SYSTEMSPEC.\n-\t* configure: Regenerate.\n-\n-2007-07-16  Rask Ingemann Lambertsen  <rask@sygehus.dk>\n-\n-\tPR target/32340\n-\t* configure.host (arm*-elf | strongarm*-elf | xscale*-elf): Use the\n-\tnew sysdeps/arm directory.\n-\n-2007-07-15  Tom Tromey  <tromey@redhat.com>\n-\n-\t* java/io/File.java: Implement Comparable<File>.\n-\t(compareTo): Removed.\n-\t* java/io/File.h: Rebuilt.\n-\t* classpath/lib/java/io/File.class: Rebuilt.\n-\n-2007-07-14  Tom Tromey  <tromey@redhat.com>\n-\n-\t* Rebuilt .class files.\n-\n-2007-07-15  Andrew Haley  <aph@redhat.com>\n-\n-\t* configure.host: \n-\tarm*-linux-gnu -> arm*-linux*.\n-\n-2007-07-14  Krister Walfridsson  <cato@df.lth.se>\n-\n-\t* gnu/gcj/util/natGCInfo.cc: Use HAVE_STRERROR_R.\n-\t* configure.ac: Remove check for strerror, add check for strerror_r.\n-\t* configure: Regenerate.\n-\t* include/config.h.in: Regenerate.\n-\n-2007-07-13  Andrew Haley  <aph@redhat.com>\n-\n-\t* libgcj.ver: Add __gcj_personality_sj0.\n-\n-\t* testsuite/libjava.jvmti/jvmti-interp.exp: Likewise.\n-\t* testsuite/libjava.jni/jni.exp: Use -fdollars-in-identifiers.\n-\t* testsuite/libjava.jni/cni.exp: Use -fdollars-in-identifiers.\n-\t* testsuite/libjava.jvmti/jvmti.exp (gcj_jvmti_compile_cxx_to_o): Likewise.\n-\n-\t* gnu/classpath/natVMStackWalker.cc (getCallingClassLoader): Check\n-\tklass is non-null.\n-\t* java/lang/reflect/natField.cc (getAddr): Call\n-\t_Jv_StackTrace::GetCallingClass only if CALLER is non-null.\n-\t* java/lang/reflect/natVMProxy.cc (run_proxy): Use\n-\t_Jv_getFieldInternal to get field proxyClass.m.\n-\t(_Jv_getFieldInternal): New function.\n-\n-2007-07-11  Andrew Haley  <aph@redhat.com>\n-\n-\t* configure.host (arm*-linux-gnu): New.\n-\t* sysdep/arm/locks.h: New.\n-\n-2007-07-13  Roger Sayle  <roger@eyesopen.com>\n-\n-\t* java/lang/natPosixProcess.cc: Include <sys/time.h> before\n-\t<sys/resource.h> to restore bootstrap on powerpc-apple-darwin7.9.0.\n-\n-2007-07-12  Matthias Klose  <doko@ubuntu.com>\n-\n-\t* gnu/classpath/jdwp/util/MethodResult.h,\n-\tgnu/classpath/jdwp/value/ObjectValue.h: Regenerate.\n-\n-2007-07-11  Keith Seitz  <keiths@redhat.com>\n-\n-\t* interpret.cc (get_local_var_table) [DIRECT_THREADED]: Make sure the\n-\tmethod is compiled.\n-\t* testsuite/libjava.jvmti/interp/getlocalvartable.out: Revise\n-\tfor compiled methods.\n-\n-2007-07-10  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>\n-\n-\tPR libgcj/32651\n-\t* configure.host (mips-sgi-irix6*): Set sysdeps_dir.\n-\tDisable interpreter.\n-\t\n-2007-07-05  Andreas Tobler  <a.tobler@schweiz.org>\n-\n-\t* java/lang/natPosixProcess.cc: Reorder includes to fix compilation\n-\ton hppa2.0w-hp-hpux11.11.\n-\tRemove include of <gcj/cni.h>.\n-\n-2007-07-05  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\t* aclocal.m4: Regenerated.\n-\n-2007-07-03  Andreas Tobler  <a.tobler@schweiz.org>\n-\n-\t* java/lang/Class.h: Remove redundant 'class java::*::* declarations.\n-\n-2007-07-02  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>\n-\n-\tPR libgcj/30513\n-\t* configure.host (i[3-6]86-*): Undef sun.\n-\n-2007-06-28  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\t* testsuite/libjava.jvmti/jvmti-interp.exp (gij_jvmti_test_one):\n-\tFix a typo.\n-\n-2007-06-28  Jan Nijtmans  <nijtmans@users.sourceforge.net>\n-\n-\tPR libgcj/30999:\n-\t* jni_md.h: Add the possibility to compile jni code with.\n-\t-fvisibility=hidden. This causes all symbols to be hidden\n-\texcept the JNI functions which need to be exported.\n-\n-2007-06-28  Andreas Tobler  <a.tobler@schweiz.org>\n-\n-\t* testsuite/libjava.jvmti/jvmti-interp.exp (gij_jvmti_test_one): Pass\n-\tthe cxxldlibflags to exec_gij to have the right libstdc++ invoked.\n-\n-2007-07-21  Keith Seitz  <keiths@redhat.com>\n-\n-\t* gnu/classpath/jdwp/VMVirtualMachine.h: Regenerate.\n-\n-2007-07-20  Keith Seitz  <keiths@redhat.com>\n-\n-\t* classpath/lib/gnu/classpath/jdwp/value/StringValue.class:\n-\tRegenerate.\n-\n-2007-07-20  Keith Seitz  <keiths@redhat.com>\n-\n-\t* gnu/classpath/jdwp/VMVirtualMachine.java (executeMethod):\n-\tUpdate from reference implementation.\n-\t* gnu/classpath/jdwp/natVMVirtualMachine.cc (executeMethod):\n-\tUpdate parameter list to match new VMVirtualMachine interface.\n-\t* classpath/lib/gnu/classpath/jdwp/processor/ClassTypeCommandSet.class:\n-\tRegenerate.\n-\t* classpath/lib/gnu/classpath/jdwp/processor/\n-\tObjectReferenceCommandSet.class: Regenerate.\n-\t* classpath/lib/gnu/classpath/jdwp/value/ObjectValue.class: Regenerate.\n-\t* classpath/lib/gnu/classpath/jdwp/VMVirtualMachine.class: Regenerate.\n-\t* classpath/lib/gnu/classpath/jdwp/util/MethodResult.class: Regenerate.\n-\n-2007-06-18  Keith Seitz  <keiths@redhat.com>\n-\n-\t* gnu/gcj/jvmti/Breakpoint.java: Make abstract.\n-\t(method): Change from private to protected.\n-\t(location): Likewise.\n-\t(Breakpoint): Change argument list to take only integer type.\n-\tAdd default constructor.\n-\t(initialize_native): Renamed to ...\n-\t(_save_insn): ... this to make function more explicit.\n-\t(execute): New method.\n-\t* gnu/gcj/jvmti/Breakpoint.h: Regenerate.\n-\t* gnu/gcj/jvmti/natBreakpoint.cc (initialize_native): Rename to...\n-\t(_save_insn): ... this.\n-\t(install): Save the original instruction.\n-\t* gnu/gcj/jvmti/NormalBreakpoint.java: New file.\n-\t* gnu/gcj/jvmti/NormalBreakpoint.h: New file.\n-\t* gnu/gcj/jvmti/natNormalBreakpoint.cc: New file.\n-\t* gnu/gcj/jvmti/BreakpointManager.java (newBreakpoint):\n-\tInstantiate a NormalBreakpoint instead of Breakpoint.\n-\t* interpret-run.cc (insn_breakpoint): Remove breakpoint actions\n-\tand call Breakpoint.execute to do them.\n-\t* classpath/lib/gnu/gcj/jvmti/Breakpoint.class: Regenerate.\n-\t* classpath/lib/gnu/gcj/jvmti/BreakpointManager.class: Likewise.\n-\t* classpath/lib/gnu/gcj/jvmti/NormalBreakpoint.class: New file.\n-\t* sources.am: Regenerate.\n-\t* Makefile.am (nat_source_files): Add natNormalBreakpoint.cc.\n-\t* Makefile.in: Regenerated.\n-\n-2007-06-14  Keith Seitz  <keiths@redhat.com>\n-\n-\t* include/java-interp.h (_Jv_LocalVarTableEntry): Add union\n-\tfor bytecode_pc and direct-threaded pc.\n-\tAdd field descriptions inline.\n-\t* defineclass.cc (read_one_code_attribute): Change from\n-\tbytecode_start_pc to bytecode_pc.\n-\tRemove unused variable \"len\".\n-\t* interpret.cc (compile): Remap the variable table, too.\n-\t(get_local_var_table) [DIRECT_THREADED]: Use insn_index on the\n-\tstart location to map from pc_t to code index.\n-\n-2007-06-09  Keith Seitz  <keiths@redhat.com>\n-\n-\t* testsuite/libjava.jvmti/dummyagent.c (Agent_OnLoad):\n-\tAdd missing return value.\n-\n-2007-06-03  Matthias Klose  <doko@ubuntu.com>\n-\n-\t* java/io/natFileWin32.cc (setFilePermissions): New (stub only).\n-\t_access: Handle EXEC query, stub only.\n-\n-2007-06-03  Matthias Klose  <doko@ubuntu.com>\n-\n-\tMerged from classpath:\n-\t* gnu/java/nio/SelectorProviderImpl.java: Whitespace merge.\n-\t* java/lang/System.java(inheritedChannel): New.\n-\t* java/lang/Character.java: Remove stray`;'.\n-\t* java/net/MulticastSocket.java: Merged.\n-\t* java/text/DateFormatSymbols.java(getInstance): New, comment updates.\n-\t* java/text/Collator.java(getInstance): Merged.\n-\t* java/util/Calendar.java: New attributes ALL_STYLES, SHORT, LONG.\n-\tgetDisplayName, getDisplayNames: New.\n-\t* java/util/logging/Logger.java: Merged.\n-\t* Regenerate .class and .h files.\n-\n-2007-06-03  Matthias Klose  <doko@ubuntu.com>\n-\n-\t* java/io/File.java: Merge with classpath-0.95, new method\n-\tsetFilePermissions, new attribute EXEC.\n-\t* java/io/natFilePosix.cc (setFilePermissions): New.\n-\t_access: Handle EXEC query.\n-\t* classpath/lib/java/io/File.class, java/io/File.h: Regenerate.\n-\n-2007-06-03  Matthias Klose  <doko@ubuntu.com>\n-\n-\tImported GNU Classpath 0.95.\n-\n-\t* classpath/Makefile.in,\n-\tclasspath/native/jni/midi-dssi/Makefile.in,\n-\tclasspath/native/jni/classpath/Makefile.in,\n-\tclasspath/native/jni/Makefile.in,\n-\tclasspath/native/jni/gconf-peer/Makefile.in,\n-\tclasspath/native/jni/java-io/Makefile.in,\n-\tclasspath/native/jni/native-lib/Makefile.in,\n-\tclasspath/native/jni/java-util/Makefile.in,\n-\tclasspath/native/jni/midi-alsa/Makefile.in,\n-\tclasspath/native/jni/java-lang/Makefile.in,\n-\tclasspath/native/jni/java-nio/Makefile.in,\n-\tclasspath/native/jni/java-net/Makefile.in,\n-\tclasspath/native/jni/xmlj/Makefile.in,\n-\tclasspath/native/jni/qt-peer/Makefile.in,\n-\tclasspath/native/jni/gtk-peer/Makefile.in,\n-\tclasspath/native/Makefile.in, classpath/native/jawt/Makefile.in,\n-\tclasspath/native/fdlibm/Makefile.in,\n-\tclasspath/native/plugin/Makefile.in,\n-\tclasspath/resource/Makefile.in, classpath/scripts/Makefile.in,\n-\tclasspath/tools/Makefile.in, classpath/doc/Makefile.in,\n-\tclasspath/doc/api/Makefile.in, classpath/lib/Makefile.in,\n-\tclasspath/external/Makefile.in,\tclasspath/external/jsr166/Makefile.in,\n-\tclasspath/external/sax/Makefile.in,\n-\tclasspath/external/w3c_dom/Makefile.in,\n-\tclasspath/external/relaxngDatatype/Makefile.in,\n-\tclasspath/include/Makefile.in,\n-\tclasspath/examples/Makefile.in: Regenerate.\n-\t* classpath/config.guess, classpath/config.sub,\n-\tclasspath/ltmain.sh : Update.\n-\t* classpath/configure, classpath/depcomp, classpath/missing,\n-\tclasspath/aclocal.m4, classpath/install-sh: Regenerate.\n-\n-\t* gnu/classpath/Configuration.java (CLASSPATH_VERSION): Now 0.95.\n-\t* sources.am: Regenerate.\n-\t* Makefile.in: Regenerate.\n-\n-\t* Update the .class files and generated CNI header files, add new\n-\t.class and generated CNI header files.\n-\t* Remove generated files for removed java source files:\n-\tclasspath/gnu/java/net/BASE64.java,\n-\tclasspath/gnu/java/security/util/Base64.java,\n-\tclasspath/gnu/java/awt/peer/gtk/GThreadMutex.java,\n-\tclasspath/gnu/java/awt/peer/gtk/GThreadNativeMethodRunner.java,\n-\tclasspath/gnu/java/awt/font/autofit/Scaler.java,\n-\tclasspath/gnu/classpath/jdwp/util/Value.java,\n-\tclasspath/gnu/javax/net/ssl/Base64.java.\n-\t* Remove empty directories.\n-\n-\t* Makefile.am(nat_source_files): Add natVMOperatingSystemMXBeanImpl.cc.\n-\t* java/lang/Class.java(setAccessible): Merge from classpath.\n-\t* java/util/Locale.java: Remove.\n-\t* gnu/java/lang/management/VMOperatingSystemMXBeanImpl.java,\n-\tgnu/java/lang/management/natVMOperatingSystemMXBeanImpl.cc: New.\n-\t* gcj/javaprims.h: Update class declarations.\n-\t* scripts/classes.pl: Update usage.\n-\t* HACKING: Mention to build all peers.\n-\n-2007-06-02  Paolo Bonzini  <bonzini@gnu.org>\n-\n-\t* configure: Regenerate.\n-\n-2007-05-31  Andrew Haley  <aph@redhat.com>\n-\n-\t* java/lang/natClassLoader.cc (_Jv_NewClassFromInitializer): Clear\n-\tINTERPRETED access modifier.\n-\n-2007-05-31  Paolo Bonzini  <bonzini@gnu.org>\n-\n-\tPR libjava/32098\n-\t* configure: Regenerated.\n-\t* aclocal.m4: Regenerated.\n-\n-2007-05-30  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\tPR libjava/32098\n-\t* configure: Regenerated.\n-\n-2007-05-29  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\t* configure.ac: Don't include ../config/confsubdir.m4.\n-\t* aclocal.m4: Regenerated.\n-\t* configure: Likewise.\n-\n-2007-05-27  Paolo Bonzini  <bonzini@gnu.org>\n-\n-\tPR bootstrap/32078\n-\t* configure.ac: Include confsubdir.m4.\n-\t* configure: Regenerate.\n-\n-2007-05-24  Keith Seitz  <keiths@redhat.com>\n-\n-\t* include/java-interp.h (_Jv_InterpFrame::get_pc): Only deduct\n-\tone when pc_ptr is non-NULL.\n-\n-\t* prims.cc (parse_init_args): Enable JVMTI with agentlib\n-\tand agentpath options.\n-\n-\t* testsuite/lib/libjava.exp (exec_gij): Add new addl_flags\n-\tparameter.\n-\t* testsuite/libjava.jvmti/jvmti-interp.exp (gij_jvmti_test_one):\n-\tPass '-agentlib:dummyagent' when executing gij.\n-\t(gij_jvmti_run): Build dummy JVMTI agent before running tests,\n-\tand remove it when finished.\n-\t* testsuite/libjava.jvmti/dummyagent.c: New file.\n-\n-2007-05-23  Steve Ellcey  <sje@cup.hp.com>\n-\n-\t* Makefile.in: Regenerate.\n-\t* configure: Regenerate.\n-\t* aclocal.m4: Regenerate.\n-\t* gcj/Makefile.in: Regenerate.\n-\t* include/Makefile.in: Regenerate.\n-\t* testsuite/Makefile.in: Regenerate.\n-\n-2007-05-17  Kyle Galloway  <kgallowa@redhat.com>\n-\n-\t* classpath/gnu/classpath/jdwp/processor/ReferenceTypeCommandSet.java\n-\t(executeMethods): Remove cast to ClassReferenceTypeId.\n-\t* classpath/lib/gnu/classpath/jdwp/processor/\n-\tReferenceTypeCommandSet.class: Rebuilt.\n-\n-2007-05-17  Kyle Galloway  <kgallowa@redhat.com>\n-\n-\t* gnu/classpath/jdwp/natVMMethod.cc (getModifiers): Check for native\n-\tclasses and mark methods as native appropriately.\n-\n-2007-05-17  Kyle Galloway  <kgallowa@redhat.com>\n-\n-\t* gnu/classpath/jdwp/VMFrame.java (<init>): Add parameter for \"this\"\n-\tpointer.\n-\t* gnu/classpath/jdwp/VMFrame.h: Regenerated.\n-\t* classpath/lib/gnu/classpath/jdwp/VMFrame.class: Rebuilt.\n-\t* gnu/classpath/jdwp/natVMVirtualMachine.cc (getFrame): Use new\n-\tVMFrame constructor.\n-\n-2007-05-16  David Daney  <ddaney@avtrex.com>\n-\n-\t* include/java-stack.h (_Jv_FrameInfo): Remove union definition.\n-\t(_Jv_StackFrame): Remove commented out code.\n-\t(_Jv_UnwindState): Remove superfluous 'typedef'.\n-\t* sun/misc/natUnsafe.cc (spinlock): Add white space to quiet\n-\tcompiler warnings.\n-\t* gnu/java/lang/management/natVMMemoryPoolMXBeanImpl.cc\n-\t(getCollectionUsage): Don't declare unused parameter n.\n-\t(getMemoryManagerNames): Same.\n-\t* gnu/gcj/util/natGCInfo.cc (gc_debug_info): Remove superfluous\n-\t'typedef'.\n-\n-2007-05-16  Keith Seitz  <keiths@redhat.com>\n-\n-\t* include/java-interp.h (breakpoint_at): Declare.\n-\t* interpret.cc (breakpoint_at): New function.\n-\t* gnu/classpath/jdwp/VMVirtualMachine.java (_event_list):\n-\tNew member.\n-\t* gnu/classpath/jdwp/natVMVirtualMachine.cc (initialize):\n-\tInitialize _event_list.\n-\t(handle_single_step): If there is a breakpoint at the\n-\tlocation at which we are stopping, do not send the notification.\n-\tInstead add the event to a list of events that occur at this\n-\tlocation.\n-\t(jdwpBreakpointCB): If the event list is not empty, send\n-\twhatever events are in it and the breakpoint event in a single\n-\tnotification.\n-\tMark parameter jni_env as MAYBE_UNUSED.\n-\t* classpath/lib/gnu/classpath/jdwp/VMVirtualMachine.class:\n-\tRegenerated.\n-\t* gnu/classpath/jdwp/VMVirtualMachine.h: Regenerated.\n-\n-2007-05-15  David Daney  <ddaney@avtrex.com>\n-\n-\t* classpath/lib/javax/swing/text/html/HTMLEditorKit.class: Regenerate\n-\t* gnu/java/awt/peer/gtk/ComponentGraphics.h: Same.\n-\n-2007-05-15  Keith Seitz  <keiths@redhat.com>\n-\n-\t* interpret.cc (STOREA): Rewrite using temporary variable to\n-\tavoid double-macro expansion side-effects.\n-\t(STOREI): Likewise.\n-\t(STOREF): Likewise.\n-\t(STOREL)[SIZEOF_VOID_P == 8]: Likewise.\n-\t(STORED)[SIZEOF_VOID_P == 8]: Likewise.\n-\t(STOREL)[SIZEOF_VOID_P != 8]: Likewise.\n-\t(STORED)[SIZEOF_VOID_P != 8]: Likewise.\n-\t(POKEI): Likewise.\n-\n-2007-05-12  David Daney  <ddaney@avtrex.com>\n-\n-\tPR libgcj/29324\n-\t* include/posix-threads.h (_Jv_BlockSigchld): Declare.\n-\t(_Jv_UnBlockSigchld): Same.\n-\t* posix-threads.cc: Include posix-threads.h.\n-\t(block_sigchld) Rename to...\n-\t(_Jv_BlockSigchld) ... this.\n-\t(_Jv_UnBlockSigchld): New function.\n-\t(_Jv_InitThreads): Call _Jv_BlockSigchld in place of block_sigchld.\n-\t(_Jv_ThreadStart): Same.\n-\t* java/lang/PosixProcess$ProcessManager.h: Regenerate.\n-\t* java/lang/PosixProcess.java: Clean up imports.\n-\t(ProcessManager): Make final.\n-\t(ProcessManager.queue): Genericise and make private.\n-\t(ProcessManager.pidToProcess): Remove.\n-\t(ProcessManager.liveProcesses): New field.\n-\t(ProcessManager.reaperPID): Remove.\n-\t(ProcessManager.nativeData): New field.\n-\t(ProcessManager.removeProcessFromMap): Remove.\n-\t(ProcessManager.addProcessToMap):Remove.\n-\t(ProcessManager.addToLiveProcesses): New method.\n-\t(ProcessManager.run): Rewritten.\n-\t(ProcessManager.reap): Change method signature,\n-\t(getErrorStream): Correct formatting.\n-\t(getInputStream): Same.\n-\t(spawn): Add process to liveProcesses list.\n-\t(pid): Make package private.\n-\t* java/lang/PosixProcess.h: Regenerate.\n-\t* java/lang/natPosixProcess.cc: Include posix.h and posix-threads.h.\n-\tAdd useing namespace java::lang.\n-\t(ProcessManagerInternal): New struct.\n-\t(sigchld_handler): Rewritten.\n-\t(init): Rewritten.\n-\t(waitForSignal): Same.\n-\t(reap): Same.\n-\t(signalReaper): Same.\n-\t(nativeDestroy): Call kill as ::kill.\n-\t(nativeSpawn): Correct formatting.\n-\t* classpath/lib/java/lang/PosixProcess$EOFInputStream.class: Regenerate.\n-\t* classpath/lib/java/lang/PosixProcess.class: Same.\n-\t* classpath/lib/java/lang/PosixProcess$ProcessManager.class: Same.\n-\n-2007-05-07  Ian Lance Taylor  <iant@google.com>\n-\n-\tPR java/31842\n-\t* java/lang/natString.cc (_Jv_FormatInt): Avoid undefined signed\n-\toverflow.\n-\n-2007-05-07  Keith Seitz  <keiths@redhat.com>\n-\n-\t* classpath/lib/gnu/classpath/jdwp/Jdwp.class: Regenerate.\n-\t* classpath/lib/gnu/classpath/jdwp/Jdwp$1.class: Regenerate.\n-\t* classpath/lib/gnu/classpath/jdwp/event/Event.class:\n-\tRegenerate.\n-\t* classpath/lib/gnu/classpath/jdwp/transport/JdwpConnection.class:\n-\tRegenerate.\n-\t* gnu/classpath/jdwp/Jdwp.h: Regenerate.\n-\t* gnu/classpath/jdwp/event/Event.h: Regenerate.\n-\t* gnu/classpath/jdwp/transport/JdwpConnection.h: Regenerate.\n-\n-2007-05-04  Kyle Galloway  <kgallowa@redhat.com>\n-\n-\t* gnu/classpath/jdwp/natVMVirtualMachine.cc (getClassMethod): Change\n-\tto use JVMTI.\n-\n-2007-05-03  Keith Seitz  <keiths@redhat.com>\n-\n-\t* interpret.cc: Don't include ExceptionEvent.h.\n-\t* gnu/gcj/jvmti/natExceptionEvent.cc: Remove.\n-\t* Makefile.am (nat_source_files): Remove natExceptionEvent.cc.\n-\t* Makefile.in: Regenerated.\n-\n-2007-05-03  Keith Seitz  <keiths@redhat.com>\n-\n-\t* include/jvmti-int.h (_Jv_ReportJVMTIExceptionThrow):\n-\tDeclare.\n-\t* interpret.cc (_Jv_ReportJVMTIExceptionThrow): New function.\n-\t(find_catch_location): New function.\n-\t(REPORT_EXCEPTION): New macro.\n-\t(throw_internal_error): Use REPORT_EXCEPTION.\n-\t(throw_incompatible_class_change_error): Likewise.\n-\t(throw_null_pointer_exception): Likewise.\n-\t(throw_class_format_error): Likewise.\n-\t* interpret-run.cc (INTERP_REPORT_EXCEPTION)[DEBUG]: Set\n-\tto REPORT_EXCEPTION.\n-\t(INTERP_REPORT_EXCEPTION)[!DEBUG]: Make nop.\n-\t(insn_new): Use INTERP_REPORT_EXCEPTION.\n-\t(insn_athrow): Likewise.\n-\tRemove previous JVMTI exception notifications.\n-\tAdd JVMTI ExceptionCatch notificatin.\n-\t* jni.cc (_Jv_PopSystemFrame): Notify JVMTI clients of\n-\texception throw.\n-\t* gnu/gcj/jvmti/ExceptionEvent.java: Removed.\n-\t* gnu/gcj/jvmti/ExceptionEvent.h: Removed. \n-\t* classpath/lib/gnu/gcj/jvmti/ExceptionEvent.class: Removed.\n-\t* gnu/classpath/jdwp/natVMVirtualMachine.cc\n-\t(jdwpExceptionCB): New function.\n-\t(jdwpVMInitCB): Set Exception event handler and enable.\n-\t* sources.am: Regenerated.\n-\t* Makefile.in: Regenerated.\n-\n-2007-05-03  Thomas Fitzsimmons  <fitzsim@redhat.com>\n-\n-\thttps://bugzilla.redhat.com/bugzilla/show_bug.cgi?id=237304\n-\t* Makefile.in: Regenerate.\n-\t* scripts/makemake.tcl (scan_directory): Treat default.css as a\n-\tproperty file.\n-\t* classpath/javax/swing/text/html/default.css: Move to...\n-\t* classpath/resource/javax/swing/text/html/default.css: New file.\n-\t* classpath/javax/swing/text/html/HTMLEditorKit.java\n-\t(getStyleSheet): Throw RuntimeException when style loading fails.\n-\t* sources.am (property_files): Add\n-\tclasspath/resource/javax/swing/text/html/default.css.\n-\n-2007-05-02  Tom Tromey  <tromey@redhat.com>\n-\n-\thttps://bugzilla.redhat.com/bugzilla/show_bug.cgi?id=238755\n-\t* java/lang/natCharacter.cc (Character::getType): Handle negative\n-\tcode points.\n-\t(Character::toLowerCase): Likewise.\n-\t(Character::toUpperCase): Likewise.\n-\t(Character::digit): Likewise.\n-\t(Character::getNumericValue): Likewise.\n-\t(Character::getDirectionality): Likewise.\n-\t(Character::toTitleCase): Likewise.\n-\n-2007-04-30  Keith Seitz  <keiths@redhat.com>\n-\n-\t* interpret-run.cc (NEXT_INSN)[DEBUG]: Advance PC before\n-\texecuting the instruction.\n-\t* include/java-interp.h (_Jv_InterpFrame::get_pc): Subtract\n-\tone insn from the frame's PC. _Jv_InterpMethod::run et al\n-\twill advance the PC before executing the instruction.\n-\n-2007-04-27  Keith Seitz  <keiths@redhat.com>\n-\n-\t* classpath/lib/gnu/classpath/jdwp/Jdwp.class: Regenerated.\n-\t* classpath/lib/gnu/classpath/jdwp/event/EventManager.class:\n-\tRegenerated.\n-\t* gnu/classpath/jdwp/event/EventManager.h: Regenerated.\n-\n-2007-04-27  Keith Seitz  <keiths@redhat.com>\n-\n-\t* classpath/lib/gnu/classpath/jdwp/event/filters/\n-\tLocationOnlyFilter.class: Regenerated;\n-\t* classpath/lib/gnu/classpath/jdwp/util/Location.class:\n-\tRegenerated.\n-\t* gnu/classpath/jdwp/VMMethod.java\n-\t* classpath/lib/gnu/classpath/jdwp/VMMethod.class:\n-\tRegenerated.\n-\t* gnu/classpath/jdwp/VMMethod.h: Regenerated.\n-\t* gnu/classpath/jdwp/util/Location.h: Regenerated.\n-\n-2007-04-27  Thomas Fitzsimmons  <fitzsim@redhat.com>\n-\n-\t* gnu/java/awt/peer/gtk/CairoGraphics2D.h: Regenerate.\n-\t* gnu/java/awt/peer/gtk/ComponentGraphics.h: Regenerate.\n-\n-2007-04-25  Kyle Galloway  <kgallowa@redhat.com>\n-\n-\t* gnu/classpath/jdwp/VMIdManager.java (getObjectId): Deal with null\n-\tobjects.\n-\t(get): Deal with ObjectId of 0. \n-\n-2007-04-24  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n-\n-\tPR libgcj/31084\n-\t* java/lang/natVMProcess.cc: Include platform.h before jvm.h.\n-\n-2007-04-24  Kyle Galloway  <kgallowa@redhat.com>\n-\n-\t* gnu/classpath/jdwp/natVMVirtualMachine.java\n-\t(getThreadStatus): Implement.\n-\n-2007-04-24  Keith Seitz  <keiths@redhat.com>\n-\n-\t* headers.txt (gnu/gcj/jvmti/Breakpoint.h)[DIRECT_THREADED]:\n-\tAdd _Jv_RewriteBreakpointInsn friend declaration.\n-\t* gnu/gcj/jvmti/natBreakpoint.cc (_Jv_RewriteBreakpointInsn)\n-\t[DIRECT_THREADED]: New function.\n-\t* gnu/gcj/jvmti/Breakpoint.h: Regenerate.\n-\t* interpret-run.cc: Define new REWRITE_INSN macro.\n-\tChanged all occurrences of insn rewriting to call REWRITE_INSN.\n-\n-2007-04-23  Keith Seitz  <keiths@redhat.com>\n-\n-\t* include/no-gc.h (_Jv_IsThreadSuspended): Declare.\n-\t* include/boehm-gc.h (_Jv_IsThreadSuspended): Likewise.\n-\t* boehm.cc (_Jv_IsThreadSuspended): New function.\n-\t* nogc.cc (_Jv_IsThreadSuspended): Likewise.\n-\t* jvmti.cc (_Jv_JVMTI_GetThreadState): New function.\n-\t(_Jv_JVMTI_Interface): Define GetThreadState.\n-\n-2007-04-23  Kyle Galloway  <kgallowa@redhat.com>\n-\n-\t* include/java-interp.h (_Jv_InterpFrame): Add pointer to the\n-\tinterpreter PC.\n-\t(<init>): Add a pointer to the interpreter PC as a parameter with\n-\tdefault value NULL.\n-\t(get_pc): New method.\n-\t* interpret-run.cc: If debugging, pass a pointer to the PC when\n-\tcreating the stack frame.\n-\t* jvmti.cc (_Jv_JVMTI_GetStackTrace): Call _Jv_InterpFrame::get_pc\n-\tto get the PC.\n-\n-2007-04-23  Kyle Galloway  <kgallowa@redhat.com>\n-\n-\t* gnu/classpath/jdwp/natVMVirtualMachine.cc (getSourceFile): Check\n-\tfor null source file and throw an exception indicating this.\n-\n-2007-04-20  Keith Seitz  <keiths@redhat.com>\n-\n-\t* gnu/gcj/jvmti/BreakpointManager.java (newBreakpoint):\n-\tInstall the new breakpoint into the bytecode.\n-\t(deleteBreakpoint): Remove the breakpoint from the bytecode.\n-\t* classpath/lib/gnu/gcj/jvmti/BreakpointManager.class:\n-\tRegenerate.\n-\t* gnu/gcj/jvmti/natBreakpoint.cc (initialize_native):\n-\tDon't install the breakpoint here.\n-\n-2007-04-19  Keith Seitz  <keiths@redhat.com>\n-\n-\t* interpret-run.cc [insn_breakpoint]: Save the original\n-\tinsn for the breakpoint before posting the JVMTI notification.\n-\n-2007-04-19  Tom Tromey  <tromey@redhat.com>\n-\n-\t* gnu/javax/net/ssl/provider/SSLSocketFactoryImpl.h: Rebuilt.\n-\n-2007-04-18  Tom Tromey  <tromey@redhat.com>\n-\n-\t* Regenerated headers with new gjavah.\n-\n-2007-04-18  Andrew Haley  <aph@redhat.com>\n-\n-\t* java/lang/reflect/natVMProxy.cc (ncode_closure): Add\n-\tmethod_index.\n-\t(generateProxyClass): Add field $Proxy0.m.  Store methods array in\n-\tit.\n-\t(run_proxy): Retrieve the method to invoke from in $Proxy0.m.\n-\t* java/lang/Class.h: Remove _Jv_LookupProxyMethod.\n-\t* java/lang/natClass.cc: Likewise.\n-\t* headers.txt: Likewise.\n-\t* java/lang/reflect/Method.h: Likewise.\n-\n-2007-04-16  Andrew Haley  <aph@redhat.com>\n-\n-\t* gnu/gcj/runtime/BootClassLoader.java (getBootURLLoader): New\n-\tmethod.\n-\t(bootGetResource): Use getBootURLLoader() to load resources.\n-\t(bootGetResources): Likewise.\n-\n-\t* java/lang/reflect/natMethod.cc (Method::invoke): In invoke also\n-\tcheck that the method's declaring class is accessible.\n-\n-2007-04-10  Keith Seitz  <keiths@redhat.com>\n-\n-\t* sources.am: Regenerate.\n-\t* Makefile.in: Likewise.\n-\n-2007-04-09  Kyle Galloway  <kgallowa@redhat.com>\n-\n-\t* interpret-run.cc: If debugging, check if args is NULL before\n-\tgetting the \"this\" pointer.\n-\n-2007-04-09  Kyle Galloway  <kgallowa@redhat.com>\n-\n-\t* classpath/gnu/classpath/jdwp/value/ArrayValue.java: New file.\n-\t* classpath/lib/gnu/classpath/jdwp/value/ArrayValue.class: New file.\n-\t* gnu/classpath/jdwp/ArrayValue.h: New file.\n-\t* gnu/classpath/jdwp/natVMFrame.cc (getValue): Add array case.\n-\t(setValue): Ditto. \n-\n-2007-04-09  David Daney  <ddaney@avtrex.com>\n-\n-\tPR libgcj/23758\n-\t* java/lang/natPosixProcess.cc (nativeSpawn): Move building of\n-\tenvironment before the fork.\n-\t* testsuite/libjava.lang/Process_7.java: New test.\n-\t* testsuite/libjava.lang/Process_7.out: Its expected results.\n-\t* testsuite/libjava.lang/Process_7.jar: Generated file.\n-\n-2007-04-09  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\t* prims.cc (load_jvmti_agent): Add the missing `,'.\n-\n-2007-04-09  Kyle Galloway  <kgallowa@redhat.com>\n-\n-\t* gij.cc (main): Accept -agentlib and -agentpath options.\n-\t* prims.cc (parse_init_args): Deal with -agentlib and -agentpath.\n-\t(load_jvmti_agent): New function.\n-\n-2007-04-04  Tania Bento  <tbento@redhat.com>\n-\n-\t* java/text/DecimalFormatSymbols.java: Added the year 2007 to\n-\tCopyright information and introduced new variable, currency.\n-\t(DecimalFormatSymbols(Locale)): Define currency and intlCurrencySymbol\n-\tto \"XXX\", currencySymbol to \"?\" and localCurrency appropriately.\n-\t(getCurrency): Fixed documentation and return the value of currency.\n-\t(setCurrency): Fixed documentation and update the value of currency.\n-\t(setInternationalCurrencySymbol): Fixed documentation and update the\n-\tvalue of currency.\n-\t* java/util/Currency.java: Introduced two new variables, properties\n-\tand fractionDigits. In the static block, a properties object is\n-\tcreated and the currency resource is loaded.\n-\t(Currency(Locale)): fractionDigits is defined.\n-\t(Currency(String)): New method.\n-\t(getDefaultFractionDigits): Return the value of fractionDigits.\n-\t(getInstance(String)): Check if String is equal to \"XXX\".\n-\n-2007-04-04  Kyle Galloway  <kgallowa@redhat.com>\n-\n-\t* classpath/gnu/classpath/jdwp/util/VariableTable.java: Change longs\n-\tto ints for argCnt and slots.\n-\t(write): Replace writeLong with writeInt for the above. \n-\n-2007-04-03  Andrew Haley  <aph@redhat.com>\n-\n-\t* testsuite/libjava.lang/ProxyTest.java: New test.\n-\n-2007-04-02  Tom Tromey  <tromey@redhat.com>\n-\n-\thttp://bugzilla.redhat.com/bugzilla/show_bug.cgi?id=205157\n-\t* gnu/java/nio/channels/natFileChannelPosix.cc (mapImpl): Extend\n-\tfile, when writing, if it is too short.\n-\n-2007-04-02  Tom Tromey  <tromey@redhat.com>\n-\n-\thttps://bugzilla.redhat.com/bugzilla/show_bug.cgi?id=233406\n-\t* gnu/java/net/natPlainSocketImplPosix.cc (create): Return if\n-\talready created.\n-\t* gnu/java/net/PlainSocketImpl.java (getLocalAddress): Handle case\n-\twhere localport is -1.\n-\t(create): Now public.\n-\t* gnu/java/nio/SocketChannelImpl.java (SocketChannelImpl): Call\n-\t'create' on the socket.\n-\n-2007-04-02  Andrew Haley  <aph@redhat.com>\n-\n-\t* java/lang/reflect/natVMProxy.cc (run_proxy): Use\n-\t_Jv_LookupProxyMethod to find the Method.\n-\tIf parameter_types->length == 0, pass a null paramameter list,\n-\tnot a zero-length parameter list.\n-\t* java/lang/natClass.cc (_Jv_LookupProxyMethod): New function.\n-\t* java/lang/Class.h (_Jv_LookupProxyMethod): Declare.\n-\n-2007-04-02  Kyle Galloway  <kgallowa@redhat.com>\n-\n-\t* interpret-run.cc: Add code to properly set up variable slots\n-\twhen debugging.\n-\t* gnu/classpath/jdwp/natVMFrame.cc (checkJVMTIError): New function.\n-\t(getObjectJVMTI): New function.\n-\t(setObjectJVMTI): New function.\n-\t(getIntJVMTI): New function.\n-\t(setIntJVMTI): New function.\n-\t(getLongJVMTI): New function.\n-\t(setLongJVMTI): New function.\n-\t(getFloatJVMTI): New function.\n-\t(setFloatJVMTI): New function.\n-\t(getDoubleJVMTI): New function.\n-\t(setDoubleJVMTI): New function.\n-\t(getFrameDepth): New function.\n-\t(getValue): Implement.\n-\t(setValue): Implement. \n-\n-2007-04-02  Kyle Galloway  <kgallowa@redhat.com>\n-\n-\t* classpath/gnu/classpath/jdwp/processor/ThreadReferenceCommandSet.java\n-\t(executeResume): Call VMVirtualMachine.resumeThread.\n-\n-2007-03-29  Tom Tromey  <tromey@redhat.com>\n-\n-\tPR libgcj/29869:\n-\t* java/util/logging/LogManager.java (readConfiguration): Handle\n-\tcomma-separated 'handlers'.  Don't try to add a non-existing\n-\thandler.\n-\n-2007-03-27  Tom Tromey  <tromey@redhat.com>\n-\n-\t* sources.am, Makefile.in: Rebuilt.\n-\t* scripts/mime.types: Removed.\n-\t* scripts/MakeDefaultMimeTypes.java: Removed.\n-\t* gnu/gcj/io/MimeTypes.java: Removed.\n-\t* gnu/gcj/io/MimeTypes.h: Removed.\n-\t* gnu/gcj/io/DefaultMimeTypes.java: Removed.\n-\t* gnu/gcj/io/DefaultMimeTypes.h: Removed.\n-\n-2007-03-27  Keith Seitz  <keiths@redhat.com>\n-\n-\t* gnu/classpath/jdwp/VMFrame.java: Update from upstream\n-\tclasspath.\n-\t* gnu/classpath/jdwp/natVMFrame.cc: Likewise.\n-\t* gnu/classpath/jdwp/VMVirtualMachine.java: Likewise.\n-\t* gnu/classpath/jdwp/natVMVirtualMachine.cc: Likewise.\n-\t(initialize): Fix compiler type-punning warning.\n-\t(getAllLoadedClasses): Return empty list instead of NULL.\n-\t(getLoadRequests): Likewise.\n-\t* gnu/classpath/jdwp/exception/InvalidTagException.h: New file.\n-\t* gnu/classpath/jdwp/exception/InvalidSlotException.h: New file.\n-\t* gnu/classpath/jdwp/exception/TypeMismatchException.h: New file.\n-\t* gnu/classpath/jdwp/VMVirtualMachine.h: Rebuilt.\n-\t* gnu/classpath/jdwp/value/CharValue.h: New file.\n-\t* gnu/classpath/jdwp/value/LongValue.h: New file.\n-\t* gnu/classpath/jdwp/value/ShortValue.h: New file.\n-\t* gnu/classpath/jdwp/value/Value.h: New file.\n-\t* gnu/classpath/jdwp/value/BooleanValue.h: New file.\n-\t* gnu/classpath/jdwp/value/VoidValue.h: New file.\n-\t* gnu/classpath/jdwp/value/ByteValue.h: New file.\n-\t* gnu/classpath/jdwp/value/FloatValue.h: New file.\n-\t* gnu/classpath/jdwp/value/ObjectValue.h: New file.\n-\t* gnu/classpath/jdwp/value/StringValue.h: New file.\n-\t* gnu/classpath/jdwp/value/ValueFactory.h: New file.\n-\t* gnu/classpath/jdwp/value/IntValue.h: New file.\n-\t* gnu/classpath/jdwp/value/DoubleValue.h: New file.\n-\t* gnu/classpath/jdwp/VMFrame.h: Rebuilt.\n-\t* gnu/classpath/jdwp/id/NullObjectId.h: New file.\n-\t* gnu/classpath/jdwp/util/MethodResult.h: Rebuilt.\n-\t* gnu/classpath/jdwp/util/NullObject.h: New file.\n-\t* gnu/classpath/jdwp/util/MonitorInfo.h: New file.\n-\t* Makefile.in: Rebuilt.\n-\t* sources.am: Rebuilt.\n-\n-2006-03-26  David Daney  <ddaney@avtrex.com>\n-\n-\t* configure.ac: Remove checks for mktime, alloca, ioctl, gmtime_r,\n-\tfork, execvp, execinfo.h, pthread_mutexattr_settype,\n-\tpthread_mutexattr_setkind_np and sys/wait.h.\n-\t* Makefile.in: Regenerate.\n-\t* include/Makefile.in: Regenerate.\n-\t* include/config.h.in: Regenerate.\n-\t* testsuite/Makefile.in: Regenerate.\n-\t* configure: Regenerate.\n-\t* gcj/Makefile.in: Regenerate.\n-\n-2007-03-23  Gary Benson  <gbenson@redhat.com>\n-\n-\t* link.cc (_Jv_Linker::resolve_method_entry):\n-\tEnsure that the argument types and the return type of the\n-\tfound method match those expected by the calling method.\n-\n-2007-03-22  David Daney  <ddaney@avtrex.com>\n-\n-\tPR libgcj/31228\n-\t* configure.ac: Add checks for getrlimit and sys/resource.h.\n-\t* include/posix.h (_Jv_platform_close_on_exec): Remove.\n-\t* include/config.h.in: Regenerate.\n-\t* configure: Regenerate.\n-\t* gnu/java/nio/channels/natFileChannelPosix.cc (open): Remove call to\n-\t_Jv_platform_close_on_exec;\n-\t* gnu/java/net/natPlainSocketImplPosix.cc (create): Likewise.\n-\t(accept): Likewise.\n-\t* gnu/java/net/natPlainDatagramSocketImplPosix.cc (create):Likewise.\n-\t* java/lang/natPosixProcess.cc: Include sys/resource.h.\n-\t(nativeSpawn): Close all file descriptors.  Don't set FD_CLOEXEC on\n-\tpipes.\n-\n-2007-03-20  Andrew Haley  <aph@redhat.com>\n-\n-\t* testsuite/libjava.lang/PR31264.java: New test.\n-\n-2007-03-14  Jakub Jelinek  <jakub@redhat.com>\n-\n-\t* Makefile.am (AM_MAKEFLAGS): Pass through mandir.\n-\t* Makefile.in: Rebuilt.\n-\n-2007-03-13  Keith Seitz  <keiths@redhat.com>\n-\n-\t* include/java-interp.h (_Jv_InterpClass): Declare\n-\tfriend function _Jv_GetInterpClassSourceFile.\n-\t* java/lang/Class.h (Class): Likewise.\n-\t* java/lang/natClass.cc (_Jv_GetInterpClassSourceFile):\n-\tNew function.\n-\t* gnu/classpath/jdwp/natVMVirtualMachine.cc\n-\t(getSourceFile): Implement.\n-\n-2007-03-13  Thomas Fitzsimmons  <fitzsim@redhat.com>\n-\n-\t* Makefile.am (AM_CXXFLAGS): Define ECJ_JAR_FILE.\n-\t* classpath/configure.ac: Add --with-ecj-jar configure option.\n-\t* classpath/gnu/classpath/Configuration.java.in (ECJ_JAR): New\n-\tfield.\n-\t* classpath/INSTALL: Document --with-ecj-jar configure option and\n-\tecj jar requirement for com.sun.tools.javac support.\n-\t* classpath/tools/Makefile.am: Build decendents of com and sun\n-\tdirectories.\n-\t* configure.ac: Substitute ECJ_JAR in stub Configuration.java.\n-\t* gnu/classpath/Configuration.java,\n-\tgnu/classpath/natConfiguration.cc (ecj): New method.\n-\t(ECJ_JAR): New field.\n-\t* scripts/makemake.tcl (scan_packages): Add com directory.\n-\t* sources.am (property_files): Add\n-\tclasspath/resource/sun/rmi/rmic/messages.properties and\n-\tclasspath/resource/com/sun/tools/javac/messages.properties.\n-\t* classpath/resource/com, classpath/resource/com/sun,\n-\tclasspath/resource/com/sun/tools,\n-\tclasspath/resource/com/sun/tools/javac, classpath/resource/sun,\n-\tclasspath/resource/sun/rmi, classpath/resource/sun/rmi/rmic,\n-\tclasspath/tools/classes/com, classpath/tools/classes/com/sun,\n-\tclasspath/tools/classes/com/sun/javadoc,\n-\tclasspath/tools/classes/com/sun/tools,\n-\tclasspath/tools/classes/com/sun/tools/doclets,\n-\tclasspath/tools/classes/sun, classpath/tools/classes/sun/rmi,\n-\tclasspath/tools/classes/sun/rmi/rmic, classpath/tools/com,\n-\tclasspath/tools/com/sun, classpath/tools/com/sun/javadoc,\n-\tclasspath/tools/com/sun/tools,\n-\tclasspath/tools/com/sun/tools/doclets,\n-\tclasspath/tools/com/sun/tools/javac, classpath/tools/sun,\n-\tclasspath/tools/sun/rmi, classpath/tools/sun/rmi/rmic: New\n-\tdirectories.\n-\t* classpath/resource/com/sun/tools/javac/messages.properties,\n-\tclasspath/resource/sun/rmi/rmic/messages.properties,\n-\tclasspath/tools/classes/com/sun/javadoc/ClassDoc.class,\n-\tclasspath/tools/classes/com/sun/javadoc/ConstructorDoc.class,\n-\tclasspath/tools/classes/com/sun/javadoc/Doc.class,\n-\tclasspath/tools/classes/com/sun/javadoc/DocErrorReporter.class,\n-\tclasspath/tools/classes/com/sun/javadoc/Doclet.class,\n-\tclasspath/tools/classes/com/sun/javadoc/ExecutableMemberDoc.class,\n-\tclasspath/tools/classes/com/sun/javadoc/FieldDoc.class,\n-\tclasspath/tools/classes/com/sun/javadoc/MemberDoc.class,\n-\tclasspath/tools/classes/com/sun/javadoc/MethodDoc.class,\n-\tclasspath/tools/classes/com/sun/javadoc/PackageDoc.class,\n-\tclasspath/tools/classes/com/sun/javadoc/ParamTag.class,\n-\tclasspath/tools/classes/com/sun/javadoc/Parameter.class,\n-\tclasspath/tools/classes/com/sun/javadoc/ProgramElementDoc.class,\n-\tclasspath/tools/classes/com/sun/javadoc/RootDoc.class,\n-\tclasspath/tools/classes/com/sun/javadoc/SeeTag.class,\n-\tclasspath/tools/classes/com/sun/javadoc/SerialFieldTag.class,\n-\tclasspath/tools/classes/com/sun/javadoc/SourcePosition.class,\n-\tclasspath/tools/classes/com/sun/javadoc/Tag.class,\n-\tclasspath/tools/classes/com/sun/javadoc/ThrowsTag.class,\n-\tclasspath/tools/classes/com/sun/javadoc/Type.class,\n-\tclasspath/tools/classes/com/sun/javadoc/TypeVariable.class,\n-\tclasspath/tools/classes/com/sun/tools/doclets/Taglet.class,\n-\tclasspath/tools/classes/sun/rmi/rmic/Main.class,\n-\tclasspath/tools/classes/sun/rmi/rmic/Messages.class,\n-\tclasspath/tools/com/sun/javadoc/ClassDoc.java,\n-\tclasspath/tools/com/sun/javadoc/ConstructorDoc.java,\n-\tclasspath/tools/com/sun/javadoc/Doc.java,\n-\tclasspath/tools/com/sun/javadoc/DocErrorReporter.java,\n-\tclasspath/tools/com/sun/javadoc/Doclet.java,\n-\tclasspath/tools/com/sun/javadoc/ExecutableMemberDoc.java,\n-\tclasspath/tools/com/sun/javadoc/FieldDoc.java,\n-\tclasspath/tools/com/sun/javadoc/MemberDoc.java,\n-\tclasspath/tools/com/sun/javadoc/MethodDoc.java,\n-\tclasspath/tools/com/sun/javadoc/PackageDoc.java,\n-\tclasspath/tools/com/sun/javadoc/ParamTag.java,\n-\tclasspath/tools/com/sun/javadoc/Parameter.java,\n-\tclasspath/tools/com/sun/javadoc/ProgramElementDoc.java,\n-\tclasspath/tools/com/sun/javadoc/RootDoc.java,\n-\tclasspath/tools/com/sun/javadoc/SeeTag.java,\n-\tclasspath/tools/com/sun/javadoc/SerialFieldTag.java,\n-\tclasspath/tools/com/sun/javadoc/SourcePosition.java,\n-\tclasspath/tools/com/sun/javadoc/Tag.java,\n-\tclasspath/tools/com/sun/javadoc/ThrowsTag.java,\n-\tclasspath/tools/com/sun/javadoc/Type.java,\n-\tclasspath/tools/com/sun/javadoc/TypeVariable.java,\n-\tclasspath/tools/com/sun/tools/doclets/Taglet.java,\n-\tclasspath/tools/com/sun/tools/javac/Main.java,\n-\tclasspath/tools/com/sun/tools/javac/Messages.java,\n-\tclasspath/tools/sun/rmi/rmic/Main.java,\n-\tclasspath/tools/sun/rmi/rmic/Messages.java: New files.\n-\t* Makefile.in, classpath/Makefile.in, classpath/configure,\n-\tclasspath/doc/Makefile.in, classpath/doc/api/Makefile.in,\n-\tclasspath/examples/Makefile.in, classpath/external/Makefile.in,\n-\tclasspath/external/jsr166/Makefile.in,\n-\tclasspath/external/relaxngDatatype/Makefile.in,\n-\tclasspath/external/sax/Makefile.in,\n-\tclasspath/external/w3c_dom/Makefile.in,\n-\tclasspath/include/Makefile.in, classpath/include/config.h.in,\n-\tclasspath/lib/Makefile.in,\n-\tclasspath/lib/gnu/classpath/Configuration.class,\n-\tclasspath/native/Makefile.in, classpath/native/fdlibm/Makefile.in,\n-\tclasspath/native/jawt/Makefile.in,\n-\tclasspath/native/jni/Makefile.in,\n-\tclasspath/native/jni/classpath/Makefile.in,\n-\tclasspath/native/jni/gconf-peer/Makefile.in,\n-\tclasspath/native/jni/gtk-peer/Makefile.in,\n-\tclasspath/native/jni/java-io/Makefile.in,\n-\tclasspath/native/jni/java-lang/Makefile.in,\n-\tclasspath/native/jni/java-net/Makefile.in,\n-\tclasspath/native/jni/java-nio/Makefile.in,\n-\tclasspath/native/jni/java-util/Makefile.in,\n-\tclasspath/native/jni/midi-alsa/Makefile.in,\n-\tclasspath/native/jni/midi-dssi/Makefile.in,\n-\tclasspath/native/jni/native-lib/Makefile.in,\n-\tclasspath/native/jni/qt-peer/Makefile.in,\n-\tclasspath/native/jni/xmlj/Makefile.in,\n-\tclasspath/native/plugin/Makefile.in,\n-\tclasspath/resource/Makefile.in, classpath/scripts/Makefile.in,\n-\tclasspath/tools/Makefile.in, configure,\n-\tgnu/classpath/Configuration.h: Regenerate.\n-\n-2007-03-12  Kyle Galloway  <kgallowa@redhat.com>\n-\n-\t* jvmti.cc (_Jv_JVMTI_GetArgumentsSize): Make wide type arrays count\n-\tas a sigle slot.\n-\n-2007-03-12  Marco Trudel  <mtrudel@gmx.ch>\n-\n-\t* java/lang/natString.cc (getBytes (jstring enc)):\n-\tFixed the loop for multiple cycles, Code cleanup\n-\n-2007-03-09  Tom Tromey  <tromey@redhat.com>\n-\n-\t* sources.am, Makefile.in: Rebuilt.\n-\t* scripts/makemake.tcl (scan_directory): Allow service files to be\n-\tomitted.\n-\tOmit all XML-related service files.\n-\n-2007-03-07  Tom Tromey  <tromey@redhat.com>\n-\n-\t* configure: Rebuilt.\n-\t* configure.ac: Clear vm-tools-packages.\n-\n-2007-03-07  Mohan Embar  <gnustuff@thisiscool.com>\n-\n-\t* java/lang/Win32Process.java: Added nested class EOFInputStream.\n-\t* java/lang/natWin32Process.cc (ChildProcessPipe): Added DUMMY\n-\tenum and implementation.\n-\t(startProcess): Use redirect flag.\n-\t* classpath/lib/java/lang/Win32Process.class: Regenerated.\n-\t* classpath/lib/java/lang/Win32Process$EOFInputStream.class: New.\n-\t* gcj/javaprims.h: Regenerated.\n-\t* java/lang/Win32Process$EOFInputStream.h: New.\n-\n-2007-03-07  Andrew Haley  <aph@redhat.com>\n-\n-\t* libgcj_bc.c (JvRunMainName): Declare.\n-\n-2007-03-07  Gary Benson  <gbenson@redhat.com>\n-\n-\t* sources.am, Makefile.in: Rebuilt.\n-\n-2007-03-07  Mohan Embar  <gnustuff@thisiscool.com>\n-\n-\t* gcj/javaprims.h: Regenerated.\n-\n-2007-03-07  Alexandre Oliva  <aoliva@redhat.com>\n-\n-\t* include/jvm.h (_Jv_ClosureListFinalizer): New.\n-\t(_Jv_Linker::create_error_method): Adjust.\n-\t* boehm.cc (_Jv_ClosureListFinalizer): New.\n-\t* nogc.cc (_Jv_ClosureListFinalizer): New.\n-\t* java/lang/Class.h (class _Jv_ClosureList): New.\n-\t(class java::lang::Class): Declare it as friend.\n-\t* java/lang/natClass.cc (_Jv_ClosureList::releaseClosures): New.\n-\t(_Jv_ClosureList::registerClousure): New.\n-\t* include/execution.h (_Jv_ExecutionEngine): Add get_closure_list.\n-\t(_Jv_CompiledEngine::do_get_closure_list): New.\n-\t(_Jv_CompiledEngine::_Jv_CompiledEngine): Use it.\n-\t(_Jv_IndirectCompiledClass): Add closures.\n-\t(_Jv_IndirectCompiledEngine::get_aux_info): New.\n-\t(_Jv_IndirectCompiledEngine::do_allocate_field_initializers): Use\n-\tit.\n-\t(_Jv_IndirectCompiledEngine::do_get_closure_list): New.\n-\t(_Jv_IndirectCompiledEngine::_Jv_IndirectCompiledEngine): Use it.\n-\t(_Jv_InterpreterEngine::do_get_closure_list): Declare.\n-\t(_Jv_InterpreterEngine::_Jv_InterpreterEngine): Use it.\n-\t* interpret.cc (FFI_PREP_RAW_CLOSURE): Use _loc variants.\n-\t(node_closure): Add closure list.\n-\t(_Jv_InterpMethod::ncode): Add jclass argument.  Use\n-\tffi_closure_alloc and the separate code pointer.  Register the\n-\tclosure for finalization.\n-\t(_Jv_JNIMethod::ncode): Likewise.\n-\t(_Jv_InterpreterEngine::do_create_ncode): Pass klass to ncode.\n-\t(_Jv_InterpreterEngine::do_get_closure_list): New.\n-\t* include/java-interp.h (_Jv_InterpMethod::ncode): Adjust.\n-\t(_Jv_InterpClass): Add closures field.\n-\t(_Jv_JNIMethod::ncode): Adjust.\n-\t* defineclass.cc (_Jv_ClassReader::handleCodeAttribute): Adjust.\n-\t(_Jv_ClassReader::handleMethodsEnd): Likewise.\n-\t* link.cc (struct method_closure): Add closure list.\n-\t(_Jv_Linker::create_error_method): Add jclass argument.  Use\n-\tffi_closure_alloc and the separate code pointer.  Register the\n-\tclosure for finalization.\n-\t(_Jv_Linker::link_symbol_table): Remove outdated comment about\n-\tsharing of otable and atable.  Adjust.\n-\t* java/lang/reflect/natVMProxy.cc (ncode_closure): Add closure\n-\tlist.\n-\t(ncode): Add jclass argument.  Use ffi_closure_alloc and the\n-\tseparate code pointer.  Register the closure for finalization.\n-\t(java::lang::reflect::VMProxy::generateProxyClass): Adjust.\n-\t* testsuite/libjava.jar/TestClosureGC.java: New.\n-\t* testsuite/libjava.jar/TestClosureGC.out: New.\n-\t* testsuite/libjava.jar/TestClosureGC.xfail: New.\n-\t* testsuite/libjava.jar/TestClosureGC.jar: New.\n-\n-2007-03-06  Kyle Galloway  <kgallowa@redhat.com>\n-\n-\t* classpath/gnu/classpath/jdwp/exception/AbsentInformationException.java: New file.\n-\t* classpath/lib/gnu/classpath/jdwp/exception/AbsentInformationException.class: Ditto.\n-\t* gnu/classpath/jdwp/exception/AbsentInformationException.h: Ditto.\n-\t* gnu/classpath/jdwp/natVMMethod.cc: Add CHECK_INTERP_CLASS macro.\n-\t(VMMethod::getLineTable): Use new macro.\n-\t(VMMethod::getVariableTable): Implement.\n-\t* sources.am: Regenerated.\n-\t* Makefile.in: Ditto.\n-\n-2007-03-06  Tom Tromey  <tromey@redhat.com>\n-\n-\t* Makefile.in: Rebuilt.\n-\t* Makefile.am (bin_PROGRAMS): Added gcjh.\n-\t(gcjh_SOURCES, gcjh_LDFLAGS, gcjh_LINK, gcjh_LDADD,\n-\tgcjh_DEPENDENCIES): New variables.\n-\n-2007-03-06  Kyle Galloway  <kgallowa@redhat.com>\n-\n-\t* jvmti.cc(_Jv_JVMTI_GetLocalVariableTable): Fix _Jv_Malloc parameters.\n-\t* testsuite/libjava.jvmti/interp/natgetlocalvartable.cc\n-\t(do_getlocalvartable_tests): Add Deallocate calls to free strings.\n-\n-2007-03-05  Matthias Klose  <doko@debian.org>\n-\n-\t* Makefile.am (gij_LDFLAGS): Use dbexecdir.\n-\t* Makefile.in: Regnerate.\n-\n-2007-03-05  Mark Wielaard  <mark@klomp.org>\n-\n-\t* java/lang/Character.java: Re-merged with Classpath.\n-\t* java/lang/natString.cc (nativeCompareTo): Renamed from\n-\tcompareTo.\n-\t* java/lang/StringBuilder.java: Re-merged with Classpath.\n-\t* java/lang/String.java: Re-merged with Classpath.\n-\t(nativeCompareTo): Renamed from compareTo.\n-\t* java/lang/StringBuffer.java: Re-merged with Classpath.\n-\t* jni.cc (_Jv_JNI_GetAnyMethodID): Split calls to append.\n-\n-2007-03-05  Andrew Haley  <aph@redhat.com>\n-\n-\t* java/lang/reflect/natVMProxy.cc (ncode_closure.meth): Delete.\n-\t(generateProxyClass): Don't pass method to ncode.\n-\t(run_proxy): Call _Jv_GetReflectedMethod to find the proxy method.\n-\t* java/lang/reflect/Method.h: Rebuild.\n-\t* java/lang/reflect/Method.java (internalGetParameterTypes,\n-\tinternalGetExceptionTypes): New methods.\n-\t* headers.txt (class java/lang/reflect/Method): Declare\n-\t_Jv_GetReflectedMethod.  Be its friend.\n-\t* java/lang/natClass.cc (_Jv_GetReflectedMethod): New method.\n-\t* java/lang/Class.h: Declare it.  Be its friend.\n-\n-2007-03-05  Tom Tromey  <tromey@redhat.com>\n-\n-\t* sources.am, Makefile.in: Rebuilt.\n-\t* scripts/makemake.tcl (emit_package_rule): Don't omit\n-\tVMProcess.java.\n-\t* Makefile.am (nat_source_files): Added natVMProcess.cc.\n-\t(inner_nat_headers): Added ImmediateEOFInputStream.h.\n-\t* gcj/javaprims.h: Regenerated.\n-\t* java/lang/System.java (EnvironmentMap): Now package-private.\n-\t(EnvironmentMap(Map)): New constructor.\n-\t(EnvironmentMap.put): New method.\n-\t* java/lang/natWin32Process.cc (startProcess): Update.\n-\t* java/lang/Win32Process.java (Win32Process): Added 'redirect'\n-\targument.\n-\t(startProcess): Likewise.\n-\t* java/lang/EcosProcess.java (EcosProcess): Added 'redirect'\n-\targument.\n-\t* java/lang/natPosixProcess.cc (nativeSpawn): Handle redirection.\n-\t* java/lang/PosixProcess.java (redirect): New field.\n-\t(PosixProcess): Added 'redirect' argument.\n-\t* java/lang/natRuntime.cc (execInternal): Added 'redirect'\n-\targument to Process creation.\n-\t* java/lang/natVMProcess.cc: New file.\n-\t* java/lang/ProcessBuilder.java: Removed.\n-\t* java/lang/VMProcess.java: New file.\n-\n-2007-03-03  Andrew Haley  <aph@redhat.com>\n-\n-\t* java/lang/natClass.cc (parseAnnotationElement): Correct long\n-\tannotations to read JV_CONSTANT_Long, not JV_CONSTANT_Double.\n-\n-2007-03-02  Andrew Haley  <aph@redhat.com>\n-\n-\t* sun/reflect/annotation/AnnotationInvocationHandler.java:\n-\tGenerify in a few places.\n-\t(equals): Rewrite to use invoke on local proxy.\n-\t(deepToString): Remove most of it.\n-\t(toString): Make nonstatic.\n-\t(arrayClone): Delete.\n-\t(coerce): New method.\n-\t(invoke): Rewrite to handle gcj's structures correctly.\n-\t* java/lang/natClass.cc (getDeclaredAnnotations): Fix test for\n-\tnull loader.\n-\t* sources.am: Regenerate.\n-\t* Makefile.am: Likewise.\t\n-\n-2007-03-02  Andrew Haley  <aph@redhat.com>\n-\n-\t* sun/reflect/annotation/AnnotationInvocationHandler.java:\n-\tWhitespace only changes.\n-\n-2007-03-02  Andrew Haley  <aph@redhat.com>\n-\n-\t* sun/reflect/annotation/AnnotationInvocationHandler.java: Moved\n-\tfrom Classpath to libgcj local.\n-\n-2007-03-01  Brooks Moses  <brooks.moses@codesourcery.com>\n-\n-\t* Makefile.am: Add dummy install-pdf target.\n-\t* Makefile.in: Regenerate\n-\t* include/Makefile.in: Regenerate\n-\t* testsuite/Makefile.in: Regenerate\n-\t* gcj/Makefile.in: Regenerate\n-\n-2007-02-23  Gary Benson  <gbenson@redhat.com>\n-\n-\t* gnu/gcj/tools/gcj_dbtool/Main.java: Updated copyright year.\n-\n-2007-02-23  Gary Benson  <gbenson@redhat.com>\n-\n-\t* java/lang/VMCompiler.java\n-\t(compileClass): Don't lose zeros from within the digest.\n-\n-2007-02-22  Jakub Jelinek  <jakub@redhat.com>\n-\n-\tPR libgcj/17002\n-\tPR classpath/28550\n-\t* java/util/VMTimeZone.java (getDefaultTimeZoneId): To read\n-\t/etc/localtime, use ZoneInfo.readTZFile instead of\n-\tVMTimeZone.readtzFile.  Get better timezone name for /etc/localtime,\n-\teither if it is a symlink or through /etc/sysconfig/clock.\n-\t(readSysconfigClockFile): New static method.\n-\t(readtzFile): Removed.\n-\t* java/lang/System.java: Add gnu.java.util.zoneinfo.dir to comments.\n-\t* posix.cc (_Jv_platform_initProperties): Set\n-\tgnu.java.util.zoneinfo.dir.\n-\t* sources.am (gnu_java_util_source_files): Add\n-\tclasspath/gnu/java/util/ZoneInfo.java.\n-\t* Makefile.in: Regenerated.\n-\t* java/util/VMTimeZone.h: Regenerated.\n-\t* java/util/TimeZone.h: Regenerated.\n-\t* gnu/java/util/ZoneInfo.h: Generated.\n-\n-2007-02-22  Mohan Embar  <gnustuff@thisiscool.com>\n-\n-\t* include/win32-threads.h: Added #undef OUT.\n-\n-2007-02-21  Kyle Galloway  <kgallowa@redhat.com>\n-\n-\t* jvmti.cc (_Jv_JVMTI_GetArgumentsSize): New function.\n-\t* testsuite/libjava.jvmti/interp/getargssize.java: New test.\n-\t* testsuite/libjava.jvmti/interp/getargssize.h: Ditto.\n-\t* testsuite/libjava.jvmti/interp/getargssize.jar: Ditto.\n-\t* testsuite/libjava.jvmti/interp/getargssize.out: Ditto.\n-\t* testsuite/libjava.jvmti/interp/natgetargssize.cc: Ditto.\n-\n-2007-02-21  Gary Benson  <gbenson@redhat.com>\n-\n-\t* java/util/GregorianCalendar.java: Removed.\n-\t* sources.am, Makefile.in: Rebuilt.\n-\n-2007-02-20  Keith Seitz  <keiths@redhat.com>\n-\n-\t* gnu/classpath/jdwp/natVMVirtualMachine.cc\n-\t(jdwpClassPrepareCB): Move class status stuff to ...\n-\t(getClassStatus): ... here.\n-\n-2007-02-20  Gary Benson  <gbenson@redhat.com>\n-\n-\t* gnu/awt/xlib/XEventLoop.h: Regenerated.\n-\t* gnu/java/awt/peer/gtk/GThreadMutex.h: Likewise.\n-\t* gnu/java/rmi/server/ConnectionRunnerPool$ConnectionRunner.h:\n-\tLikewise.\n-\t* gnu/java/rmi/server/UnicastConnectionManager.h: Likewise.\n-\t* java/lang/SecurityManager.h: Likewise.\n-\t* java/lang/Thread.h: Likewise.\n-\t* java/security/VMSecureRandom$Spinner.h: Likewise.\n-\t* java/util/concurrent/atomic/AtomicBoolean.h: Likewise.\n-\t* java/util/concurrent/atomic/AtomicInteger.h: Likewise.\n-\t* java/util/concurrent/atomic/AtomicLong.h: Likewise.\n-\t* java/util/concurrent/atomic/AtomicReference.h: Likewise.\n-\t* java/util/concurrent/ConcurrentHashMap$HashEntry.h: Likewise.\n-\t* java/util/concurrent/ConcurrentHashMap$Segment.h: Likewise.\n-\t* java/util/concurrent/ConcurrentLinkedQueue.h: Likewise.\n-\t* java/util/concurrent/ConcurrentLinkedQueue$Node.h: Likewise.\n-\t* java/util/concurrent/ConcurrentSkipListMap.h: Likewise.\n-\t* java/util/concurrent/ConcurrentSkipListMap$Index.h: Likewise.\n-\t* java/util/concurrent/ConcurrentSkipListMap$Node.h: Likewise.\n-\t* java/util/concurrent/Exchanger.h: Likewise.\n-\t* java/util/concurrent/Exchanger$Node.h: Likewise.\n-\t* java/util/concurrent/FutureTask$Sync.h: Likewise.\n-\t* java/util/concurrent/LinkedBlockingQueue$Node.h: Likewise.\n-\t* java/util/concurrent/locks/AbstractQueuedLongSynchronizer.h:\n-\tLikewise.\n-\t* java/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node.h: \n-\tLikewise.\n-\t* java/util/concurrent/locks/AbstractQueuedSynchronizer.h: Likewise.\n-\t* java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.h:\n-\tLikewise.\n-\t* java/util/concurrent/ScheduledThreadPoolExecutor.h: Likewise.\n-\t* java/util/concurrent/SynchronousQueue.h: Likewise.\n-\t* java/util/concurrent/SynchronousQueue$TransferQueue.h: Likewise.\n-\t* java/util/concurrent/SynchronousQueue$TransferQueue$QNode.h:\n-\tLikewise.\n-\t* java/util/concurrent/SynchronousQueue$TransferStack.h: Likewise.\n-\t* java/util/concurrent/SynchronousQueue$TransferStack$SNode.h:\n-\tLikewise.\n-\t* java/util/concurrent/ThreadPoolExecutor.h: Likewise.\n-\t* java/util/concurrent/ThreadPoolExecutor$Worker.h: Likewise.\n-\t* java/util/logging/ErrorManager.h: Likewise.\n-\t* javax/swing/plaf/basic/BasicSpinnerUI$2.h: Likewise.\n-\t* javax/swing/plaf/basic/BasicSpinnerUI$4.h: Likewise.\n-\n-2007-02-16  Keith Seitz  <keiths@redhat.com>\n-\n-\t* gnu/classpath/jdwp/natVMVirtualMachine.cc\n-\t(get_line_table): New function.\n-\t(handle_single_step): New function.\n-\t(jdwpSingleStepCB): New function.\n-\t(jdwpVMInitCB): Define a JVMTI single step\n-\tcallback, but don't enable it until needed.\n-\n-2007-02-16  David Daney  <ddaney@avtrex.com>\n-\n-\t* java/lang/Thread.java (Thread(ThreadGroup, Runnable, String)): Pass\n-\tnew parameter constructor.\n-\t(Thread(ThreadGroup, Runnable, String, long)): Same.\n-\t(Thread(String, boolean)): New constructor.\n-\t(Thread(Thread, ThreadGroup, Runnable, String): Add parameter\n-\tnoInheritableThreadLocal, don't call\n-\tInheritableThreadLocal.newChildThread if set.\n-\t* java/lang/PosixProcess.java(ProcessManager()): Set\n-\tnoInheritableThreadLocal in super.\n-\t* java/lang/natThread.cc (_Jv_AttachCurrentThread): Pass new\n-\tparameter to Thread constructor.\n-\t(_Jv_AttachCurrentThreadAsDaemon): Same.\n-\t* java/lang/Thread.h: Regenerate.\n-\t* classpath/lib/java/lang/Thread.class: Same.\n-\t* classpath/lib/java/lang/PosixProcess$EOFInputStream.class: Same.\n-\t* classpath/lib/java/lang/PosixProcess.class: Same.\n-\t* classpath/lib/java/lang/Thread$State.class: Same.\n-\t* classpath/lib/java/lang/PosixProcess$ProcessManager.class: Same.\n-\n-2007-02-16  Kyle Galloway  <kgallowa@redhat.com>\n-\n-\t* interpret.cc: Add extra DEBUG_LOCALS_INSN calls for multi-slot\n-\tvariables to maintain type info.\n-\t* interpret-run.cc: Add local variable info to frame in the debug\n-\tinterpreter.\n-\t* jvmti.cc (getLocalFrame): New method.\n-\t(_Jv_JVMTI_GetLocalObject): New method.\n-\t(_Jv_JVMTI_GetLocallInt): New method.\n-\t(_Jv_JVMTI_GetLocalFloat): New method.\n-\t(_Jv_JVMTI_GetLocalLong): New method.\n-\t(_Jv_JVMTI_GetLocalDouble): New method.\n-\t(_Jv_JVMTI_SetLocalObject): New method.\n-\t(_Jv_JVMTI_SetLocalInt): New method.\n-\t(_Jv_JVMTI_SetLocalFloat): New method.\n-\t(_Jv_JVMTI_SetLocalLong): New method.\n-\t(_Jv_JVMTI_SetLocalDouble): New method.\n-\n-2007-02-16  Gary Benson  <gbenson@redhat.com>\n-\n-\t* gnu/gcj/tools/gcj_dbtool/Main.java\n-\t(bytesToString): Don't lose zeros from within the digest.\n-\n-2007-02-15  Andrew Haley  <aph@redhat.com>\n-\n-\t* Makefile.am (nat_source_files): Remove\n-\tjava/lang/management/natVMManagementFactory.cc.\n-\t* java/lang/Thread.java (getStackTrace): Use reflection to call\n-\tthe ManagementFactory.\n-\t* java/lang/management/VMManagementFactory.java: Remove native\n-\tmethods.\n-\t* java/lang/management/natVMManagementFactory.cc: Deleted.\n-\t* sources.am: Regnerate.\n-\t* scripts/makemake.tcl: Add new \"bcheaders\" type.\n-\tMove java/lang/management and gnu/classpath/management to \"bc\".\n-\tMove gnu/java/lang/management to \"bcheaders\".\n-\t\n-2007-02-15  Kyle Galloway  <kgallowa@redhat.com>\n-\t\n-\t* interpret.cc (_Jv_InterpMethod::check_handler): New method.\n-\t* interpret-run.cc: Change the catch section to report exception\n-\tevents and to use the new check_handler method.\n-\t* include/java-interp.h (_Jv_InterpMethod): Add check_handler.\n-\t* gnu/gcj/jvmti/ExceptionEvent.java: New file.\n-\t* gnu/gcj/jvmti/ExceptionEvent.h: New file.\n-\t* gnu/gcj/jvmti/natExceptionEvent.cc: New file.\n-\t* libjava/classpath/lib/gnu/gcj/jvmti/ExceptionEvent.class: New\n-\tfile.\n-\t* sources.am: Added ExceptionEvent.java.\n-\t* Makefile.am: Added natExceptionEvent.cc\n-\t* Makefile.in: Regenerated.\n-\t* include/Makefile.in: Regenerated.\n-\t* gcj/Makefile.in: Regenerated.\n-\n-2007-02-15  Johannes Schmidt  <jschmidt@avtrex.com>\n-\tDavid Daney  <ddaney@avtrex.com>\n-\n-\t* configure.ac: Create vm-tools-packages file.  Add \n-\tgnu/gcj/tools/gc_analyze to standard.omit and vm-tools-packages.\n-\tCheck for /proc/self/maps.\n-\t* Makefile.am (bin_PROGRAMS): Added gc-analyze.\n-\t(gc_analyze_SOURCES): New.\n-\t(gc_analyze_LDFLAGS): New.\n-\t(gc_analyze_LINK): New.\n-\t(gc_analyze_LDADD): New.\n-\t(gc_analyze_DEPENDENCIES): New.\n-\t(nat_source_files): Add gnu/gcj/util/natGCInfo.cc.\n-\t* Makefile.in: Regenerated.\n-\t* configure: Regenerated.\n-\t* include/config.h.in: Regenerated.\n-\t* sources.am: Regenerated.\n-\t* scripts/makemake.tcl: Don't include gc-analyze classes in libgcj.\n-\t* gnu/gcj/tools/gc_analyze/SymbolLookup.java: New.\n-\t* gnu/gcj/tools/gc_analyze/ObjectMap.java: New.\n-\t* gnu/gcj/tools/gc_analyze/MemoryMap.java: New.\n-\t* gnu/gcj/tools/gc_analyze/SymbolTable.java: New.\n-\t* gnu/gcj/tools/gc_analyze/BlockMap.java: New.\n-\t* gnu/gcj/tools/gc_analyze/BytePtr.java: New.\n-\t* gnu/gcj/tools/gc_analyze/ItemList.java: New.\n-\t* gnu/gcj/tools/gc_analyze/ToolPrefix.java: New.\n-\t* gnu/gcj/tools/gc_analyze/MemoryAnalyze.java: New.\n-\t* gnu/gcj/util/GCInfo.java: New.\n-\t* gnu/gcj/util/GCInfo.h: New.\n-\t* gnu/gcj/util/natGCInfo.cc: New.\n-\t* gnu/gcj/util/UtilPermission.java: New.\n-\t* gnu/gcj/util/UtilPermission.h: New.\n-\t* classpath/tools/gnu/gcj/tools/gc_analyze/SymbolTable.class: New.\n-\t* classpath/tools/gnu/gcj/tools/gc_analyze/ObjectMap$ObjectItem.class: New.\n-\t* classpath/tools/gnu/gcj/tools/gc_analyze/MemoryMap$RangeComparator.class: New.\n-\t* classpath/tools/gnu/gcj/tools/gc_analyze/BlockMap$PtrMarks.class: New.\n-\t* classpath/tools/gnu/gcj/tools/gc_analyze/MemoryMap$Range.class: New.\n-\t* classpath/tools/gnu/gcj/tools/gc_analyze/BlockMap.class: New.\n-\t* classpath/tools/gnu/gcj/tools/gc_analyze/BytePtr.class: New.\n-\t* classpath/tools/gnu/gcj/tools/gc_analyze/MemoryAnalyze$SubstringComparator.class: New.\n-\t* classpath/tools/gnu/gcj/tools/gc_analyze/ItemList.class: New.\n-\t* classpath/tools/gnu/gcj/tools/gc_analyze/ToolPrefix.class: New.\n-\t* classpath/tools/gnu/gcj/tools/gc_analyze/MemoryAnalyze.class: New.\n-\t* classpath/tools/gnu/gcj/tools/gc_analyze/MemoryAnalyze$1$Info.class: New.\n-\t* classpath/tools/gnu/gcj/tools/gc_analyze/MemoryAnalyze$1.class: New.\n-\t* classpath/tools/gnu/gcj/tools/gc_analyze/MemoryAnalyze$2.class: New.\n-\t* classpath/tools/gnu/gcj/tools/gc_analyze/MemoryAnalyze$3.class: New.\n-\t* classpath/tools/gnu/gcj/tools/gc_analyze/MemoryAnalyze$4.class: New.\n-\t* classpath/tools/gnu/gcj/tools/gc_analyze/MemoryAnalyze$OptionParser.class: New.\n-\t* classpath/tools/gnu/gcj/tools/gc_analyze/BlockMap$SizeKind.class: New.\n-\t* classpath/tools/gnu/gcj/tools/gc_analyze/SymbolLookup.class: New.\n-\t* classpath/tools/gnu/gcj/tools/gc_analyze/ObjectMap.class: New.\n-\t* classpath/tools/gnu/gcj/tools/gc_analyze/MemoryMap.class: New.\n-\t* classpath/lib/gnu/gcj/util/GCInfo.class: New.\n-\t* classpath/lib/gnu/gcj/util/UtilPermission.class: New.\n-\n-2007-02-15  David Daney  <ddaney@avtrex.com>\n-\n-\t* gnu/java/net/PlainSocketImpl.h: Regenerate.\n-\t* gnu/classpath/jdwp/VMVirtualMachine.h: Same.\n-\t* gnu/classpath/jdwp/VMFrame.h: Same.\n-\t* java/net/Socket.h: Same.\n-\t* java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.h: Same.\n-\n-2007-02-15  Kyle Galloway  <kgallowa@redhat.com>\n-\n-\t* defineclass.cc (_Jv_ClassReader::read_one_code_attribute):\n-\tAdded LocalVariableTable attribute handling.\n-\t(_Jv_ClassReader::pool_Utf8_to_char_arr): New method.\n-\t* jvmti.cc (_Jv_JVMTI_GetLocalVariableTable): New method.\n-\t* include/java-interp.h: Added local_var_table and \n-\tlocal_var_table_len fields to _Jv_InterpMethod.\n-\t(_Jv_InterpMethod::get_local_var_table): New method.\n-\t* testsuite/libjava.jvmti/interp/getlocalvartable.java: New test.\n-\t* testsuite/libjava.jvmti/interp/getlocalvartable.jar: New test.\n-\t* testsuite/libjava.jvmti/interp/getlocalvartable.out: Output\n-\tfor new test.\n-\t* testsuite/libjava.jvmti/interp/getlocalvartable.h: New test.\n-\t* testsuite/libjava.jvmti/interp/natgetlocalvartable.cc: New test.\n-\n-2007-02-15  Kyle Galloway  <kgallowa@redhat.com>\n-\n-\t* gnu/classpath/jdwp/natVMVirtualMachine (getFrames): Implement.\n-\n-2007-02-13  Keith Seitz  <keiths@redhat.com>\n-\n-\t* gnu/classpath/jdwp/natVMVirtualMachine.cc\n-\t(jdwpBreakpointCB): New function.\n-\t(jdwpVMInitCB): Define and enable the breakpoint\n-\tcallback.\n-\n-2007-02-13  Andrew Haley  <aph@redhat.com>\n-\n-\t* testsuite/libjava.lang/Divide_2.out\n-\t* testsuite/libjava.lang/Divide_2.java: New test.\n-\n-2007-02-12  Keith Seitz  <keiths@redhat.com>\n-\n-\t* jvmti.cc (_Jv_JVMTI_GetStackTrace): Remove cast\n-\tfrom jthread to Thread *; it is no longer needed.\n-\t(_Jv_JVMTI_GetFrameCount): Likewise.\n-\tFix small formatting typo.\n-\n-2007-02-12  Tom Tromey  <tromey@redhat.com>\n-\n-\t* sources.am, Makefile.in: Rebuilt.\n-\t* java/lang/Socket.java: Removed override.\n-\t* java/lang/DatagramSocket.java: Removed override.\n-\t* gnu/java/net/PlainSocketImpl.java (localSocketAddress): New\n-\tfield.\n-\t(getLocalAddress): New method.\n-\t* gnu/java/net/PlainDatagramSocketImpl.java\n-\t(PlainDatagramSocketImpl): Throws IOException.\n-\t* gnu/java/net/natPlainSocketImplPosix.cc (write): Remove\n-\t'sizeof'.\n-\t(read): Likewise.\n-\n-2007-02-09  Jakub Jelinek  <jakub@redhat.com>\n-\n-\t* java/util/VMTimeZone.java: Rewrite to handle both the old\n-\t'TZif\\0' format and the new one.\n-\t\n-2007-02-10  Andrew Haley  <aph@redhat.com>\n-\n-\tPR java/30742\n-\t* gnu/classpath/natVMStackWalker.cc (GET_CALLING_CLASS): New.\n-\t(getCallingClass): Call GET_CALLING_CLASS.\n-\t(getCallingClassLoader): Likewise.\n-\n-2007-02-10  Mohan Embar  <gnustuff@thisiscool.com>\n-\n-\t* configure: Rebuilt.\n-\t* configure.ac (GCJH): Reverted second part of patch of 2006-12-20.\n-\n-2007-02-10  Mohan Embar  <gnustuff@thisiscool.com>\n-\n-\t* Makefile.in: Rebuilt.\n-\t* Makefile.am (BUILD_ECJ1): Unify the command for renaming ecjx to\n-\tthe host's ecj1 executable.\n-\n-2007-02-09  Richard Henderson  <rth@redhat.com>\n-\n-\t* sysdep/alpha/locks.h (read_barrier): New.\n-\n-2007-02-09  Keith Seitz  <keiths@redhat.com>\n-\n-\t* gnu/classpath/jdwp/VMVirtualMachine.java\n-\t(_stepping_threads): New member.\n-\t* classpath/lib/gnu/classpath/jdwp/VMVirtualMachine.class:\n-\tRegenerated.\n-\t* gnu/classpath/jdwp/VMVirtualMachine.h:\n-\tRegenerated.\n-\t* gnu/claspath/jdwp/natVMVirtualMachine.cc\n-\t(get_request_step_filter): New function.\n-\t(DISABLE_EVENT): New macro.\n-\t(initialize): Initialize _stepping_threads.\n-\t(registerEvent): Implement EVENT_SINGLE_STEP.\n-\t(unregisterEvent): Likewise.\n-\n-2007-02-08  Keith Seitz  <keiths@redhat.com>\n-\n-\t* sources.am: Regenerate.\n-\t* Makefile.in: Regenerate.\n-\t* testsuite/Makefile.in: Regenerate.\n-\t* gcj/Makefile.in: Regenerate.\n-\t* include/Makefile.in: Regenerate.\n-\n-\t* classpath/lib/javax/management/MBeanServerFactory.class:\n-\tRegenerate.\n-\n-2007-02-08  Kyle Galloway  <kgallowa@redhat.com>\n-\n-\t* classpath/gnu/classpath/jdwp/processor/\n-\tStackFrameCommandSet.java (executeGetValues): Pass jlong instead\n-\tof ByteBuffer.\n-\t(executeSetValues): Ditto.\n-\t(executeThisObject): Ditto.\n-\t* classpath/gnu/classpath/jdwp/processor/\n-\tStackFrameCommandSet.class: Rebuilt.\n-\t* classpath/lib/gnu/classpath/jdwp/VMVirtualMachine.class:\n-\tRebuilt.\n-\t* classpath/lib/gnu/classpath/jdwp/VMFrame.class: Rebuilt.\n-\t* classpath/lib/gnu/classpath/jdwp/exception/\n-\tInvalidFrameException.java: New file.\n-\t* gnu/classpath/jdwp/VMFrame.java: Added field for thread of\n-\tframe.\n-\t(Constructor): New method.\n-\t* gnu/classpath/jdwp/VMFrame.h: Regenerated.\n-\t* gnu/classpath/jdwp/VMVirtualMachine.java\n-\t(getFrame): Changed ByteBuffer to jlong.\n-\t* gnu/classpath/jdwp/natVMVirtualMachine.cc\n-\t(getFrame): Implement.\n-\t* gnu/classpath/jdwp/VMVirtualMachine.h: Regenerated.\n-\n-2007-02-08  Kyle Galloway  <kgallowa@redhat.com>\n-\n-\t* include/java-interp.h (_Jv_InterpFrame): obj_ptr field added\n-\tto hold \"this\" pointer for frame.\n-\t(_Jv_InterpFrame::get_this_ptr): New method.\n-\t* interpret-run.cc: Copy the \"this\" pointer into obj_ptr.\n-\n-2007-02-07  Keith Seitz  <keiths@redhat.com>\n-\n-\t* include/java-interp.h (_Jv_Frame::depth):\n-\tNew function.\n-\t* jvmti.cc (_Jv_JVMTI_GetFrameCount): Use _Jv_Frame::depth.\n-\n-2007-02-07  Kyle Galloway  <kgallowa@redhat.com>\n-\n-\t* jvmti.cc (CHECK_FOR_NATIVE_METHOD): New macro.\n-\t(_Jv_JVMTI_GetMaxLocals): New method.\n-\t* include/java-interp.h\n-\t(_Jv_InterpMethod::get_max_locals): New method.\n-\n-2007-02-01 Marco Trudel <mtrudel@gmx.ch>\n-\n-\t* jni.cc (_Jv_JNI_DeleteWeakGlobalRef): Check for NULL objects.\n-\n-2007-02-07  Tom Tromey  <tromey@redhat.com>\n-\n-\t* testsuite/libjava.jni/init.c: New file.\n-\t* testsuite/libjava.jni/init.java: New file.\n-\t* testsuite/libjava.jni/init.out: New file.\n-\t* testsuite/libjava.jni/init.jar: New file.\n-\t* testsuite/libjava.jni/init.h: New file.\n-\t* testsuite/libjava.jni/init$NativeClass.h: New file.\n-\n-2007-02-07  Jakub Jelinek  <jakub@redhat.com>\n-\n-\tPR libgomp/28468\n-\t* configure: Regenerate.\n-\n-2007-02-06  Andrew Haley  <aph@redhat.com>\n-\n-\t* scripts/makemake.tcl (emit_bc_rule): Set the source filename.\n-\t* sources.am: Rebuild.\n-\n-2007-02-05  Keith Seitz  <keiths@redhat.com>\n-\n-\t* jvmti.cc (_envListLock): Change type to\n-\tReentrantReadWriteLock.\n-\t(_Jv_JVMTI_DisposeEnvironment): Switch to read/write\n-\tlock.\n-\t(check_enabled_event): Likewise.\n-\t(_Jv_GetJVMTIEnv): Likewise.\n-\t(_Jv_JVMTI_Init): Likewise.\n-\t(_Jv_JVMTI_PostEvent): Likewise. \n-\n-2007-02-05  Keith Seitz  <keiths@redhat.com>\n-\n-\t* gnu/classpath/jdwp/natVMVirtualMachine.cc\n-\t(registerEvent): Implement EVENT_BREAKPOINT.\n-\t(unregisterEvent): Likewise.\n-\t(get_request_location): New function.\n-\n-2007-02-05  Matthias Klose  <doko@debian.org>\n-\n-\ttestsuite/Makefile.am (compile-tests): Fix typo.\n-\ttestsuite/Makefile.in: Regenerate.\n-\n-2007-02-02  Kyle Galloway  <kgallowa@redhat.com>\n-\n-\t* gnu/classpath/jdwp/natVMVirtualMachine.cc (getFrameCount):\n-\tImplment.\n-\n-2007-02-02  Jakub Jelinek  <jakub@redhat.com>\n-\n-\t* configure.ac (libjava_cv_anon_version_script): New test.\n-\t(ANONVERSCRIPT): New AM_CONDITIONAL.\n-\t* configure: Rebuilt.\n-\t* Makefile.am (extra_ldflags_libjava): Link with -Wl,--version-script\n-\tif ANONVERSCRIPT.\n-\t* Makefile.in: Rebuilt.\n-\t(libgcj_la_DEPENDENCIES): Depend on libgcj.ver.\n-\t* libgcj.ver: New file.\n-\n-2007-02-01  David Daney  <ddaney@avtrex.com>\n-\n-\t* scripts/makemake.tcl: Replace gnu/xml build with build of all\n-\tits subpackages.\n-\t* sources.am: Regenerate.\n-\t* Makefile.in: Regenerate.\n-\n-2007-02-01  Tom Tromey  <tromey@redhat.com>\n-\n-\t* java/lang/ClassLoader.java (getResources): No longer final.\n-\n-2007-02-01  Tom Tromey  <tromey@redhat.com>\n-\n-\t* java/util/logging/LogManager.java (loggers): Genericized.\n-\t(addLogger): Merged.\n-\t(findAncestor): Likewise.\n-\t(getLogger): Likewise.\n-\t(getLoggerNames): Genericized.\n-\t(reset): Merged.\n-\t(getLevelProperty): Likewise.\n-\t* java/lang/reflect/Method.java (getDeclaringClass): Genericized.\n-\t* java/lang/reflect/Constructor.java (getParameterTypes):\n-\tGenericized.\n-\t(getExceptionTypes): Likewise.\n-\t(newInstance): Likewise.\n-\t* java/lang/reflect/Array.java (newInstance): Genericized.\n-\t* java/lang/Object.java (getClass): Genericized.\n-\t* java/nio/charset/spi/CharsetProvider.java (charsets):\n-\tGenericized.\n-\t* java/text/Collator.java: Implement Comparable<Object>.\n-\n-2007-02-01  Tom Tromey  <tromey@redhat.com>\n-\n-\t* java/util/Calendar.java: Implement Comparable<Calendar>.  Update\n-\tcomments.\n-\t(clear): Call complete.\n-\t(setTimeZone): Call computeTime, computeFields.\n-\t(compareTo): New method.\n-\t* java/nio/charset/Charset.java: Implement Comparable<Charset>.\n-\t(availableCharsets): Genericized.\n-\t(aliases): Likewise.\n-\t(compareTo): Changed argument type.\n-\t* java/lang/ClassLoader.java (loadClass): Genericized.\n-\t(findClass): Likewise.\n-\t(defineClass): Likewise.\n-\t(resolveClass): Likewise.\n-\t(findSystemClass): Likewise.\n-\t(setSigners): Likewise.\n-\t(findLoadedClass): Likewise.\n-\t(getResources): Likewise.\n-\t(findResources): Likewise.\n-\t(getSystemResources): Likewise.\n-\t(checkInitialized): New method.\n-\t* java/lang/Class.java (getCanonicalName): New method.\n-\n-2007-01-31  Keith Seitz  <keiths@redhat.com>\n-\n-\t* include/jvmti-int.h (JVMTI): Declare member \"enabled\".\n-\t* jvmti.cc (JVMTI): Add member \"enabled\".\n-\t(_Jv_GetJVMTIEnv): Mark JVMTI enabled.\n-\t* interpret.cc (_Jv_InterpMethod::ncode): Use JVMTI::enabled\n-\tinstead of gnu::classpath::jdwp::Jdwp::isDebugging.\n-\t(_Jv_CompileMethod): If JVMTI is enabled, use run_debug\n-\tinstead of run to compile the method.\n-\n-\t* interpret-run.cc [DEBUG] (NEXT_INSN): Add JVMTI single step\n-\tnotification.\n-\n-2007-01-31  Andreas Tobler  <a.tobler@schweiz.org>\n-\n-\t* testsuite/libjava.jvmti/jvmti-interp.exp (gij_jvmti_test_one): Add\n-\t-shared-libgcc to the cxxflaglist for Darwin.\n-\n-2007-01-31  Tom Tromey  <tromey@redhat.com>\n-\n-\t* scripts.am, Makefile.in: Rebuilt.\n-\t* scripts/makemake.tcl (gnu/javax/swing/text/html/parser): Build\n-\tas 'ordinary'.\n-\t(emit_ordinary_rule): New proc.\n-\n-2007-01-31  Keith Seitz  <keiths@redhat.com>\n-\n-\t* testsuite/libjava.jvmti/getmethodname.h: New file.\n-\t* testsuite/libjava.jvmti/getmethodname.jar: New file.\n-\n-2007-01-31  Andrew Haley  <aph@redhat.com>\n-\n-\t* prims.cc (_Jv_Abort): fflush (stderr).\n-\t* java/lang/natClassLoader.cc (_Jv_CheckABIVersion): Abort.\n-\n-2007-01-31  Tom Tromey  <tromey@redhat.com>\n-\n-\t* configure, Makefile.in: Rebuilt.\n-\t* configure.ac (JAR): Check for -@ feature.\n-\t* Makefile.am (libgcj-$(gcc_version).jar): Use find -prune.\n-\n-2007-01-31  Tom Tromey  <tromey@redhat.com>\n-\n-\tPR libgcj/30606:\n-\t* configure, include/config.h.in: Rebuilt.\n-\t* configure.ac: Check for magic_t in magic.h.\n-\t* java/net/natVMURLConnection.cc: Use HAVE_MAGIC_T.\n-\n-2007-01-30  Tom Tromey  <tromey@redhat.com>\n-\n-\t* Makefile.in: Rebuilt.\n-\t* Makefile.am (libgcj-$(gcc_version).jar): Rewrote.\n-\n-2007-01-30  Andreas Tobler  <a.tobler@schweiz.org>\n-\n-\t* testsuite/libjava.jvmti/natevents.cc (FieldModificationCB): Use a\n-\tcast to print it right.\n-\n-2007-01-29  Kaloian Doganov  <kaloian@doganov.org>\n-\n-\tPR libgcj/30600:\n-\t* gnu/gcj/convert/BytesToCharsetAdaptor.java (read): Fix call to\n-\t'limit'.\n-\n-2007-01-29  Kyle Galloway  <kgallowa@redhat.com>\n-\n-\t* include/java-interp.h:  Added _Jv_Frame class and its two\n-\tsubclasses _Jv_InterpFrame and _Jv_NativeFrame.  Also moved\n-\t_Jv_FrameType from java-stack.h.\n-\t* include/java-stack.h: Removed _Jv_FrameType.\n-\t* java/lang/Thread.java: Added frame member to hold new\n-\tcomposite frame stack.\n-\t* java/lang/Thread.h: Regenerated.\n-\t* java/lang/Thread.class: Rebuilt.\n-\t* jni.cc (_Jv_JNIMethod::call): Push a frame onto the stack when\n-\tcalling a JNI method.\n-\t* jvmti.cc (_Jv_JVMTI_GetStackTrace): New Method.\n-\t(_Jv_JVMTI_GetFrameCount): New method.\n-\t* stacktrace.cc (UnwindTraceFn): Modified to use new _Jv_Frame\n-\tclasses.\n-\t* testsuite/libjava.jvmti/interp/getstacktrace.jar: New test.\n-\t* testsuite/libjava.jvmti/interp/natgetstacktrace.cc: New test.\n-\t* testsuite/libjava.jvmti/interp/getstacktrace.h: New test.\n-\t* testsuite/libjava.jvmti/interp/getstacktrace.jar: New test.\n-\t* testsuite/libjava.jvmti/interp/getstacktrace.out: Output file\n-\tfor test. \n-\n-2007-01-29  Tom Tromey  <tromey@redhat.com>\n-\n-\t* interpret.cc (run_debug): Remove comment.\n-\t(STOREA): Reformat.\n-\t(STOREI): Likewise.\n-\t(STOREF): Likewise.\n-\t(STOREL): Likewise.\n-\t(STORED): Likewise.\n-\t(POKEI): Likewise.\n-\t(run_normal_debug): Likewise.\n-\t(run_synch_object_debug): Likewise.\n-\t(run_class_debug): Likewise.\n-\t(run_synch_class_debug): Likewise.\n-\t(get1s): Likewise.\n-\t(get1u): Likewise.\n-\t(get2u): Likewise.\n-\t(get4): Likewise.\n-\t(NULLARRAYCHECK): Likewise.\n-\t(ARRAYBOUNDSCHECK): Likewise.\n-\t* interpret-run.cc (insn_target) <breakpoint>: Tidy.\n-\n-2007-01-29  Tom Tromey  <tromey@redhat.com>\n-\n-\t* configure, Makefile.in: Rebuilt.\n-\t* Makefile.am (bin_SCRIPTS): Never install scripts/jar.\n-\t* configure.ac (BASH_JAR): Removed conditional.\n-\t(JAR): Prefer the jar found by AC_CHECK_PROGS.\n-\n-2007-01-29  Tom Tromey  <tromey@redhat.com>\n-\n-\t* Makefile.in: Rebuilt.\n-\t* Makefile.am (interpret.lo): New target.  Add -fwrap to\n-\tAM_CXXFLAGS.\n-\n-2007-01-29  Keith Seitz  <keiths@redhat.com>\n-\n-\t* include/jvmti_md.h (_CLASSPATH_VM_JVMTI_TYPES_DEFINED):\n-\tDefine.\n-\t[__GCJ_JNI_IMPL__]: Define our own JVMTI types when building\n-\tgcj. All jvmti object types now are defined to be their\n-\tcorresponding java classes.\n-\t* jvmti.cc (_Jv_JVMTI_SuspendThread): Remove casting from\n-\tjthread to Thread*.\n-\t(_Jv_JVMTI_ResumeThread): Likewise.\n-\t(_Jv_JVMTI_InterruptThread): Likewise.\n-\t(_Jv_JVMTI_SetEventNotificationMode): Likewise.\n-\t* gnu/classpath/jdwp/natVMVirtualMachine.cc\n-\t(jdwpClassPrepareCB): Likewise.\n-\t(jdwpThreadEndCB): Likewise.\n-\t(jdwpThreadStartCB): Likewise.\n-\t(jdwpVMInitCB): Likewise.\n- \n-2007-01-28  Michele Sandri  <gpointorama@gmail.com>\n-\n-\t* gnu/java/nio/channels/natFileChannelWin32.cc\n-\t(lock): Implemented.\n-\t(unlock): Implemented.\n-\n-2007-01-27  Andreas Tobler  <a.tobler@schweiz.org>\n-\n-\tPR libgcj/30513\n-\t* configure.host: Add forgottten sysdep_dir to sparc. Add a flag to\n-\tlibgcj_flags to undefine 'sun' at compile time.\n-\t* sysdep/sparc/locks.h (read_barrier): New functions for 32 and 64 bit\n-\tSparc.\n-\t(write_barrier): Likewise.\n-\n-2007-01-27  Keith Seitz  <keiths@redhat.com>\n-\n-\t* gnu/classpath/jdwp/natVMVirtualMachine.cc\n-\t(getAllClassMethods): Move error handling to ...\n-\t(throw_jvmti_error): ... here.\n-\t(jdwpClassPrepareCB): New function.\n-\t(jdwpThreadEndCB): New function.\n-\t(jdwpThreadStartCB): New function.\n-\t(jdwpVMDeathCB): New function.\n-\t(jdwpVMInitCB): Define and enable callbacks for\n-\tClassPrepare, ThreadEnd, ThreadStart, and VMDeath.\n-\n-2007-01-27  Jakub Jelinek  <jakub@redhat.com>\n-\n-\t* Makefile.am (generic_header_files): Add $(inner_nat_headers).\n-\t* testsuite/Makefile.am (check-dejaGNU): Depend on compile-tests.\n-\t(MYGCJH): New variable.\n-\t(compile-tests): New goal.\n-\t* Makefile.in: Rebuilt.\n-\t* testsuite/Makefile.in: Rebuilt.\n-\n-2007-01-26  Andrew Haley  <aph@redhat.com>\n-\n-\t* java/lang/natClass.cc (initializeClass): Re-throw\n-\tSecurityExceptions.\n-\t* java/lang/natVMClassLoader.cc (loadClass): checkPackageAccess.\n-\t* java/lang/ClassLoader.java: (loadClass): Likewise.\n-\n-2007-01-26  Tom Tromey  <tromey@redhat.com>\n-\n-\t* Updated headers.\n-\n-2007-01-25  Tom Tromey  <tromey@redhat.com>\n-\n-\tPR libgcj/29594:\n-\t* gnu/gcj/convert/Convert.java (main): Correctly handle missing\n-\tinput or output encodings.  Removed unused local variables.\n-\n-2007-01-25  Keith Seitz  <keiths@redhat.com>\n-\n-\t* include/jvmti-int.h (_Jv_GetJDWP_JVMTIEnv): Declare.\n-\t* gnu/classpath/jdwp/natVMVirtualMachine.cc\n-\t(_Jv_GetJDWP_JVMTIEnv): New function.\n-\t* gnu/classpath/jdwp/natVMMethod.cc (getName): Implement.\n-\t(getSignature): Implement.\n-\t(getModifiers): Implement.\n-\n-2007-01-25  Andrew Haley  <aph@redhat.com>\n-\n-\t* configure, Makefile.in, include/config.h.in: Rebuilt.\n-\t* Makefile.am (libgcj_la_LIBADD): Removed $(LIBMAGIC).\n-\t* configure.ac: Don't check for libmagic.\n-\t* java/net/natVMURLConnection.cc (p_magic_open, p_magic_load,\n-\tp_magic_close, p_magic_buffer): New globals.\n-\t(init): Look up 'magic' functions.\n-\t(guessContentTypeFromBuffer): Updated.\n-\n-2007-01-25  Keith Seitz  <keiths@redhat.com>\n-\n-\t* jvmti.cc (_Jv_JVMTI_GetMethodName): New function.\n-\t(_Jv_JVMTI_Interface): Define GetMethodName.\n-\t* testsuite/libjava.jvmti/getmethodname.java: New file.\n-\t* testsuite/libjava.jvmti/natgetmethodname.cc: New file.\n-\t* testsuite/libjava.jvmti/getmethodname.out: New file. \n-\n-2007-01-24  Kyle Galloway  <kgallowa@redhat.com>\n-\n-\t* libjava/testsuite/libjava.jvmti/jvmti-interp.exp: New file.\n-\t* libjava/testsuite/libjava.jvmti/interp: New folder.\n-\t* libjava/testsuite/lib/libjava.exp (exec_gij): New Method.\n-\n-2007-01-24  Keith Seitz  <keiths@redhat.com>\n-\n-\t* link.cc (_Jv_Linker::wait_for_state): Add JVMTI\n-\tCLASS_PREPARE notification.\n-\n-2007-01-24  Keith Seitz  <keiths@redhat.com>\n-\n-\t* interpret.cc: Include gnu/gcj/jvmti/Breakpoint.h,\n-\tgnu/gcj/jvmti/BreakpointManager.h, jvmti.h, and jvmti-int.h\n-\t* interpret-run.cc: Implement insn_breakpoint.\n-\n-2007-01-24  Keith Seitz  <keiths@redhat.com>\n-\n-\t* prims.cc (_Jv_RunMain): Send JVMTI event notifications\n-\tfor VM_INIT and VM_DEATH instead of the JDWP notifications.\n-\n-2007-01-24  Keith Seitz  <keiths@redhat.com>\n-\n-\t* gnu/classpath/jdwp/natVMVirtualMachine.cc\n-\t(getAllClassMethods): Implement.\n-\n-2007-01-24  Andrew Haley  <aph@redhat.com>\n-\n-\t* gnu/classpath/natVMStackWalker.cc: Call InitClass everywhere.\n-\t(getClassContext) Add a barrier to prevent GetStackWalkerStack()\n-\tfrom being sibcalled.\n-\n-2007-01-24  Andrew Haley  <aph@redhat.com>\n-\n-\t* scripts/makemake.tcl (emit_bc_rule): Set the source filename.\n-\t* sources.am: Rebuild.\n-\n-2007-01-24  Andreas Krebbel  <krebbel1@de.ibm.com>\n-\n-\t* exception.cc (parse_lsda_header, PERSONALITY_FUNCTION): Replaced\n-\t_Unwind_Word with _uleb128_t and _Unwind_SWord with _sleb128_t.\n-\n-2007-01-23  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\tPR libgcj/30550\n-\t* Makefile.am (ecjx_DEPENDENCIES): Add libgcj_bc.la if needed.\n-\t* Makefile.in: Regenerated.\n-\n-2007-01-22  Keith Seitz  <keiths@redhat.com>\n-\n-\t* gnu/classpath/jdwp/natVMVirtualMachine.cc\n-\t(getClassMethod): Implement.\n-\n-2007-01-22  Keith  Seitz  <keiths@redhat.com>\n-\n-\t* java/lang/Class.h (_Jv_GetClassStatus): Declare.\n-\t* java/lang/natClass.cc (_Jv_GetClassStatus): New function.\n-\t* jvmti.cc (_Jv_JVMTI_GetClassStatus): New function.\n-\t(_Jv_JVMTI_Interface): Define GetClassStatus.\n-\n-2007-01-22  Tom Tromey  <tromey@redhat.com>\n-\n-\t* configure: Rebuilt.\n-\t* configure.ac (GCJ): Reverted patch of 2006-12-20.\n-\n-2007-01-22  Tom Tromey  <tromey@redhat.com>\n-\n-\tPR java/29812:\n-\t* testsuite/libjava.jni/pr29812.java: New file.\n-\t* testsuite/libjava.jni/pr29812_injar.java: New file.\n-\t* testsuite/libjava.jni/pr29812_injar.jar: New file.\n-\t* testsuite/libjava.jni/pr29812.out: New file.\n-\t* testsuite/libjava.jni/pr29812_injar.c: New file.\n-\t* testsuite/libjava.jni/pr29812_injar.h: New file.\n-\t* testsuite/libjava.jni/pr29812.jar: New file.\n-\t* testsuite/libjava.jni/pr29812.c: New file.\n-\t* testsuite/libjava.jni/pr29812.h: New file.\n-\t* testsuite/libjava.jni/jni.exp (gcj_jni_get_cxxflags_invocation):\n-\tNew proc.\n-\t(gcj_jni_invocation_test_one): Use it.\n-\t(gcj_jni_pr29812): New proc.\n-\t(gcj_jni_run): Use it.\n-\t* java/lang/natRuntime.cc (_load): Push a new system frame before\n-\tcalling JNI_OnLoad.\n-\t* include/jvm.h (_Jv_JNI_PopSystemFrame): Declare.\n-\t(_Jv_GetJNIEnvNewFrameWithLoader): Likewise.\n-\t* jni.cc (struct _Jv_JNI_LocalFrame) <marker>: Now unsigned char.\n-\t<allocated_p>: Now bool.\n-\t<loader>: New field.\n-\t(_Jv_JNI_EnsureLocalCapacity): Updated.\n-\t(_Jv_JNI_NewLocalRef): Likewise.\n-\t(_Jv_JNI_NewLocalRef): Likewise.\n-\t(_Jv_JNI_PopLocalFrame): Likewise.\n-\t(_Jv_JNI_FindClass): Likewise.\n-\t(_Jv_GetJNIEnvNewFrame): Likewise.\n-\t(_Jv_JNI_AttachCurrentThread): Likewise.\n-\t(_Jv_GetJNIEnvNewFrameWithLoader): New function.\n-\t(_Jv_GetJNIEnvNewFrame): Use it.\n-\t* include/jni_md.h (_CLASSPATH_JNIENV_CONTENTS): Removed 'klass'.\n-\n-2007-01-22  Tom Tromey  <tromey@redhat.com>\n-\n-\t* libtool-version: Bump current to 9.\n-\n-2007-01-22  Andrew Haley  <aph@redhat.com>\n-\n-\t* sysdep/alpha/locks.h (write_barrier): New.\n-\n-2007-01-21  Matthias Klose  <doko@debian.org>\n-\n-\t* Makefile.am (install-exec-hook): Use transformed name.\n-\t* Makefile.in: Regenerate.\n-\n-2007-01-19  Keith Seitz  <keiths@redhat.com>\n-\n-\t* gnu/classpath/jdwp/natVMVirtualMachine.cc: Mark unused parameters\n-\tin methods and reformat.\n-\n-\t* gnu/classpath/jdwp/natVMFrame.cc: Mark unused parameters with\n-\tMAYBE_UNUSED.\n-\n-2007-01-18  Keith Seitz  <keiths@redhat.com>\n-\n-\tFrom Macro Trudel <mtrudel@gmx.ch>:\n-\t* gnu/classpath/jdwp/natVMVirtualMachine.cc (jdwpVMInitCB):\n-\tUse JNICALL.\n-\n-2007-01-18  Marco Trudel  <mtrudel@gmx.ch>\n-\n-\t* jni.cc (_Jv_JNI_FindClass): Initialize class.\n-\t* testsuite/libjava.jni/findclass2.jar: New file.\n-\t* testsuite/libjava.jni/findclass2.h: New file.\n-\t* testsuite/libjava.jni/findclass2.java: New file\n-\t* testsuite/libjava.jni/findclass2.c: New file.\n-\t* testsuite/libjava.jni/findclass2.out: New file.\n-\n-2007-01-18  Tom Tromey  <tromey@redhat.com>\n-\n-\t* configure: Rebuilt.\n-\t* configure.ac: Use multi_basedir instead of libgcj_basedir.\n-\n-2007-01-18  Gary Benson  <gbenson@redhat.com>\n-\n-\t* gnu/java/nio/natVMPipeEcos.cc:\n-\tRenamed from gnu/java/nio/natPipeImplEcos.cc.\n-\t* gnu/java/nio/natVMPipePosix.cc:\n-\tRenamed from gnu/java/nio/natPipeImplPosix.cc.\n-\t* gnu/java/nio/natVMPipeWin32.cc:\n-\tRenamed from gnu/java/nio/natPipeImplWin32.cc.\n-\t* gnu/java/nio/natVMSelectorEcos.cc:\n-\tRenamed from gnu/java/nio/natSelectorImplEcos.cc.\n-\t* gnu/java/nio/natVMSelectorPosix.cc:\n-\tRenamed from gnu/java/nio/natSelectorImplPosix.cc.\n-\t* gnu/java/nio/natVMSelectorWin32.cc:\n-\tRenamed from gnu/java/nio/natSelectorImplWin32.cc.\n-\t* java/io/natVMObjectInputStream.cc:\n-\tRenamed from java/io/natObjectInputStream.cc.\n-\t* java/lang/natVMDouble.cc:\n-\tRenamed from java/lang/natDouble.cc.\n-\t* java/lang/natVMFloat.cc:\n-\tRenamed from java/lang/natFloat.cc.\t\n-\t* Makefile.am, configure.ac: Reflect the above.\n-\t* Makefile.in, configure: Rebuilt.\n-\n-2007-01-17  Andrew Haley  <aph@redhat.com>\n-\n-\t* Makefile.in: Rebuilt.\n-\t* Makefile.am (ecjx_LDFLAGS): Pass -fbootclasspath.\n-\n-2007-01-17  Keith Seitz  <keiths@redhat.com>\n-\n-\t* java/lang/natThread.cc (finish_): Add JVMTI ThreadEnd notification.\n-\t(_Jv_NotifyThreadStart): Add JVMTI ThreadStart notification.\n-\n-2007-01-16  Jack Howarth  <howarth@bromo.med.uc.edu>\n-\n-\t* configure.ac: Use multi.m4 from aclocal rather than custom\n-\tcode.  Use multi_basedir instead libgcj_basedir.  Test for\n-\t/proc/self/exe when not cross-compiling.\n-\t* aclocal.m4: Regenerate.\n-\t* configure: Regenerate.\n-\t* Makefile.in: Regenerate.\n-\n-2007-01-17  Gary Benson  <gbenson@redhat.com>\n-\n-\t* java/nio/natVMDirectByteBufferImpl.cc:\n-\tRenamed from java/nio/natDirectByteBufferImpl.cc.\n-\t* Makefile.am: Reflect the above.\n-\t* Makefile.in: Rebuilt.\n-\t\n-2007-01-17  Marco Trudel  <mtrudel@gmx.ch>\n-\n-\t* jvmti.cc (_Jv_JVMTI_GetAllThreads): Now static.  Use JNICALL.\n-\tFixed indentation.  Removed unused variable.\n-\n-2007-01-16  Tom Tromey  <tromey@redhat.com>\n-\n-\t* java/lang/natThread.cc (finalize_native): Remove cast.\n-\t(_Jv_GetCurrentJNIEnv): Likewise.\n-\t* include/jvm.h (struct natThread) <jni_env>: Declare as\n-\t_Jv_JNIEnv*.\n-\n-2007-01-16  Keith Seitz  <keiths@redhat.com>\n-\n-\t* testsuite/libjava.jvmti/natevents.cc (FieldModificationCB): Use\n-\t%#llx instead of %d for new_value.\n-\t* testsuite/libjava.jvmti/events.out: Update expected output.\n-\t* testsuite/libjava.jvmti/events.jar: Regenerate.\n-\n-2007-01-16  Keith Seitz  <keiths@redhat.com>\n-\n-\t* gnu/classpath/jdwp/natVMVirtualMachine.cc (DEFINE_CALLBACK):\n-\tNew macro.\n-\t(ENABLE_EVENT): New macro.\n-\t(initialize): Define and enable JVMTI VM_INIT callback.\n-\t(jdwpVMInitCB): New function.\n-\n-2007-01-16  Kyle Galloway  <kgallowa@redhat.com>\n-\n-\t* jvmti.cc (_Jv_JVMTI_GetAllThreads): New function.\n-\t* testsuite/libjava.jvmti/getallthreads.java: New test.\n-\t* testsuite/libjava.jvmti/natgetallthreads.cc: Ditto.\n-\t* testsuite/libjava.jvmti/getallthreads.out: Ditto.\n-\t* testsuite/libjava.jvmti/getallthreads.h: Ditto.\n-\t* testsuite/libjava.jvmti/getallthreads.jar: Ditto. \n-\n-2007-01-15  Keith Seitz  <keiths@redhat.com>\n-\n-\t* gnu/classpath/jdwp/natVMVirtualMachine.cc (suspendThread): Use\n-\tjava.lang.StringBuilder instead of java.lang.StringBuffer.\n-\t(resumeThread): Likewise.\n-\n-2007-01-15  Gary Benson  <gbenson@redhat.com>\n-\n-\t* java/nio/MappedByteBuffer.java: Removed.\n-\t* sources.am, Makefile.in: Rebuilt.\n-\n-2007-01-15  Gary Benson  <gbenson@redhat.com>\n-\n-\t* java/net/URLClassLoader.java: Removed.\n-\t* gnu/java/net/loader/Load_gcjlib.java: New file.\n-\t* gnu/gcj/runtime/BootClassLoader.java: Ensure core\n-\tURL handler is present in static executables.\n-\t* sources.am, Makefile.in: Rebuilt.\n-\n-2007-01-14  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\t* Makefile.am (libgcj_la_LDFLAGS): Add\n-\t$(LIBGCJ_LD_SYMBOLIC_FUNCTIONS).\n-\t(libgcj_tools_la_LDFLAGS): Likewise.\n-\t(libgcj_bc_la_LDFLAGS): Likewise.\n-\t* Makefile.in: Regenerated.\n-\n-\t* configure.ac: Use ACX_PROG_LD_GNU_SYMBOLIC.  Set\n-\tLIBGCJ_LD_SYMBOLIC_FUNCTIONS to $SYMBOLIC_LDFLAGS.  Set\n-\tlibgcj_ld_symbolic to $SYMBOLIC_LDFLAGS if it isn't set.\n-\tSubstitute LIBGCJ_LD_SYMBOLIC_FUNCTIONS.\n-\t* configure: Regenerated.\n-\t* aclocal.m4: Likewise.\n-\t* gcj/Makefile.in: Likewise.\n-\t* include/Makefile.in: Likewise.\n-\t* testsuite/Makefile.in: Likewise.\n-\n-2007-01-12  Kaz Kojima  <kkojima@gcc.gnu.org>\n-\n-\t* sysdep/sh/locks.h (read_barrier): New.\n-\t(write_barrier): Likewise.\n-\n-2007-01-12  Andrew Haley  <aph@redhat.com>\n-\n-\t* include/i386-signal.h: Rewrite to use rt_sigaction.\n-\n-2007-01-11  Andrew Haley  <aph@redhat.com>\n-\n-\t* prims.cc (jdwpOptions) Fix deprecated cast from char[] constant\n-\tto char*.\n-\t* include/x86_64-signal.h (HANDLE_DIVIDE_OVERFLOW): Rewrite to fix\n-\taliasing violation.\n-\n-2007-01-10  Tom Tromey  <tromey@redhat.com>\n-\n-\t* gnu/gcj/xlib/*.h: New files.\n-\t* gnu/awt/xlib/*.h: Likewise.\n-\t* classpath/lib/gnu/gcj/xlib: New class files.\n-\t* classpath/lib/gnu/awt/xlib: Likewise.\n-\n-2007-01-10  Tom Tromey  <tromey@redhat.com>\n-\n-\t* HACKING: Various updates.\n-\n-2007-01-10  Tom Tromey  <tromey@redhat.com>\n-\n-\t* java/lang/natDouble.cc (toString): Added parens.\n-\t* gnu/gcj/io/shs.h (PROTO): Define.\n-\t* link.cc (resolve_pool_entry): Added missing braces.\n-\n-2007-01-10  H.J. Lu  <hongjiu.lu@intel.com>\n-\n-\tPR libgcj/30424\n-\t* sysdep/ia64/locks.h (read_barrier): New.\n-\t(write_barrier): New.\n-\n-2007-01-10  Gary Benson  <gbenson@redhat.com>\n-\n-\t* java/net/URL.java: Removed.\n-\t* sources.am, Makefile.in: Rebuilt.\n-\n-2007-01-10  Matthias Klose  <doko@debian.org>\n-\n-\t* Makefile.am (install-exec-hook): Support $(DESTDIR).\n-\t* Makefile.in: Regenerated.\n-\n-2007-01-05  Tom Tromey  <tromey@redhat.com>\n-\n-\t* testsuite/libjava.loader/loader.exp (gcj_loader_run): Find\n-\tdummy.class in srcdir.\n-\n-2007-01-03  Tom Tromey  <tromey@redhat.com>\n-\n-\t* testsuite/libjava.cni/cni.exp (gcj_cni_compile_cxx_to_o): Add -I\n-\tfor srcdir.\n-\n-2007-01-03  Tom Tromey  <tromey@redhat.com>\n-\n-\t* testsuite/*: Added many .jar and .h files.\n-\t* testsuite/libjava.special/special.exp\n-\t(gcj_special_try_compiler): New proc.\n-\t* testsuite/libjava.loader/loader.exp (gcj_loader_run): Don't\n-\tbytecompile source.  Search for .jar files.\n-\t(gcj_loader_test_one): Don't look for MyLoader.java.\n-\t* testsuite/libjava.jvmti/jvmti.exp (gcj_jvmti_test_one): Don't\n-\tbytecompile sources or build headers.\n-\t(gcj_jvmti_run): Look for .jar files.\n-\t* testsuite/libjava.jni/jni.exp (gcj_jni_run): Compile .jar\n-\tfiles.\n-\t(gcj_jni_test_one): Don't bytecompile sources or build headers.\n-\tSet classpath when invoking gij.\n-\t(gcj_jni_invocation_test_one): Likewise.\n-\t* testsuite/libjava.cni/cni.exp (gcj_cni_test_one): Don't build\n-\theaders or bytecompile sources.\n-\t(gcj_cni_run): Use .jar files, not .java files.\n-\t* testsuite/libjava.lang/lang.exp: Compile .jar files.\n-\n-2007-01-02  Tom Tromey  <tromey@redhat.com>\n-\n-\t* configure: Rebuilt.\n-\t* configure.ac: Check for gjar.\n-\n-2007-01-02  Tom Tromey  <tromey@redhat.com>\n-\n-\t* testsuite/libjava.jacks/jacks.exp: Removed.\n-\t* testsuite/libjava.jacks/jacks.xfail: Removed.\n-"}, {"sha": "41b7a10d94085722fcab64ddb0852bc0da2b57b9", "filename": "libjava/ChangeLog-2007", "status": "added", "additions": 2658, "deletions": 0, "changes": 2658, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2FChangeLog-2007", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2FChangeLog-2007", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog-2007?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -0,0 +1,2658 @@\n+2007-12-22  David Daney  <ddaney@avtrex.com>\n+\n+\t* scripts/makemake.tcl (emit_bc_rule): Use $(LIBGCJ_BC_FLAGS)\n+\tinstead of -findirect-dispatch -fno-indirect-classes.\n+\t* configure.ac (libgcj-bc): New AC_ARG_ENABLE.\n+\t(SUPPRESS_LIBGCJ_BC): New AM_CONDITIONAL.\n+\t* Makefile.am (LIBGCJ_BC_FLAGS): New variable.\n+\t* Makefile.in: Regenerate.\n+\t* include/Makefile.in: Same.\n+\t* testsuite/Makefile.in: Same.\n+\t* configure: Same.\n+\t* gcj/Makefile.in: Same.\n+\t* sources.am: Same.\n+\t\n+2007-12-17  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* testsuite/Makefile.am (compile-tests): Build\n+\tlibjava.jvmti/interp/*.h with -jni rather than -cni.\n+\t* testsuite/Makefile.in: Rebuilt.\n+\n+2007-12-08  Andreas Tobler  <a.tobler@schweiz.org>\n+\n+\t* configure.host: Add bits for i?86-*-darwin9 and x86_64-*-darwin9.\n+\t* configure.ac: Add darwin-signal.h to x86_64-*-darwin9 and\n+\ti?86-*darwin9.\n+\t* configure.in: Regenerate.\n+\t* darwin.cc: Add definitions for Darwin specific functions for 64-bit.\n+\t(darwin_java_register_dyld_add_image_hook): Use this specific\n+\tfunctions.\n+\t* Makefile.am (gij_LDFLAGS): Add extra_gij_ldflags for Darwin9.\n+\t* Makefile.in: Regenerate.\n+\t* include/Makefile.in: Likewise.\n+\t* gcj/Makefile.in: Likewise.\n+\t* testsuite/Makefile.in: Likewise.\n+\t* testsuite/lib/libjava.exp (libjava_arguments): Add allow_stack_execute\n+\tfor *-*-darwin9*.\n+\n+2007-12-06  David Daney  <ddaney@avtrex.com>\n+\n+\t* interpret.cc: Replace ffi_raw with INTERP_FFI_RAW_TYPE throughout.\n+\t(ncode_closure, ffi_closure_fun): Define versions for\n+\tnon-FFI_NATIVE_RAW_API case.\n+\t* include/java-interp.h (INTERP_FFI_RAW_TYPE): Define and use to\n+\treplace\tffi_raw throughout.\n+\t* jni.cc, interpret-run.cc: Replace ffi_raw with INTERP_FFI_RAW_TYPE\n+\tthroughout.\n+\n+2007-12-06  Andreas Tobler  <a.tobler@schweiz.org>\n+\n+\t* testsuite/libjava.jni/jni.exp (gcj_jni_get_cxxflags_invocation): Make\n+\tthe testsuite multilib aware for Darwin.\n+\n+2007-12-05  Thomas Fitzsimmons  <fitzsim@redhat.com>\n+\n+\t* gnu/java/awt/peer/gtk/GdkGraphicsEnvironment.h: Regenerate.\n+\t* gnu/java/awt/peer/gtk/GtkWindowPeer.h: Likewise.\n+\t* java/awt/Component.h: Likewise.\n+\t* java/awt/Container.h: Likewise.\n+\n+2007-11-05  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* configure.ac: Don't run config-ml.in directly.\n+\t(multilib_arg): New.\n+\t* configure: Regenerated.\n+\n+2007-10-22  David Daney  <ddaney@avtrex.com>\n+\n+\t* include/jvm.h (_Jv_SetGCFreeSpaceDivisor): Declare new function.\n+\t* boehm.cc (_Jv_SetGCFreeSpaceDivisor): Define it.\n+\n+2007-10-18  David Daney  <ddaney@avtrex.com>\n+\n+\t* classpath/lib/gnu/java/locale/LocaleData.class: Regenerate\n+\t* classpath/lib/gnu/javax/sound/sampled/gstreamer: Add generated\n+\tfiles.\n+\t* gnu/javax/sound/sampled/gstreamer: Add generated files.\n+\t\n+2007-10-15  Maciej W. Rozycki  <macro@linux-mips.org>\n+\n+\t* configure: Regenerate following changes to ../config/tls.m4.\n+\n+2007-09-17  Tom Tromey  <tromey@redhat.com>\n+\n+\t* defineclass.cc (MAJOR_1_6): New define.\n+\t(MINOR_1_6): Likewise.\n+\t(_Jv_ClassReader::parse): Handle 1.6 bytecode.\n+\n+2007-09-12  David Daney  <ddaney@avtrex.com>\n+\n+\t* configure.host: Enable interpreter for mips64.  Enable hash\n+\tsynchronization for all mips*-*-linux* targets.\n+\t* sysdep/mips/locks.h (compare_and_swap, compare_and_swap_release) Use\n+\t__sync_bool_compare_and_swap instead of in-line asm.\n+\t(release_set, read_barrier, write_barrier): Use __sync_synchronize\n+\tinstead of in-line asm.\n+\n+2007-09-09  Andreas Tobler  <a.tobler@schweiz.org>\n+\n+\tPR libgcj/33326\n+\t* testsuite/lib/libjava.exp (libjava_arguments): Append the test spec\n+\tonly for linux targets.\n+\n+2007-09-09  Andrew Haley  <aph@redhat.com>\n+\n+\t* interpret-run.cc (invokevirtual_resolved): Nullcheck object on\n+\tTOS.\n+\n+2007-09-06  Tom Tromey  <tromey@redhat.com>\n+\n+\t* testsuite/libjava.lang/StackTrace2.jar: Rebuilt.\n+\t* testsuite/libjava.lang/StackTrace2.java (checkLine): Print file\n+\tname.\n+\n+2007-09-06  Roman Zippel  <zippel@linux-m68k.org>\n+\n+\t* sysdep/m68k/locks.h: New file.\n+\t* configure.host: Set sysdeps_dir and libgcj_interpreter for m68k.\n+\t* configure.ac: Set SIGNAL_HANDLER for m68*-*-linux*.\n+\t* configure: Regenerate.\n+\n+2007-09-05  Samuel Thibault  <samuel.thibault@ens-lyon.org>\n+\n+\t* configure.host(gnu*): Set use_libgcj_bc to yes.\n+\n+2007-09-04  Matthias Klose  <doko@ubuntu.com>\n+\n+\t* configure.ac: Do not pass --with-native-libdir to classpath.\n+\t* configure: Regenerate.\n+\n+2007-09-04  Matthias Klose  <doko@ubuntu.com>\n+\n+\tPR libgcj/33278\n+\t* configure.ac: Robustify extraction of gcj version.\n+\t* configure: Regenerate.\n+\n+2007-09-04  Andrew Haley  <aph@redhat.com>\n+\n+\tPR java/27908\n+\t* testsuite/libjava.lang/PR27908.java\n+\t({run1,run2,run3}.isRunning): New Method.\n+\t(main): Fix race condition.\n+\n+2007-08-29  Andrew Haley  <aph@redhat.com>\n+\n+\t* gnu/classpath/natVMStackWalker.cc (VMStackWalker::getCallingClass):\n+\tMake sure we're not sibcalled.\n+\t(GET_CALLING_CLASS): Define for ARM EABI.\n+\n+2007-08-22  Andrew Haley  <aph@redhat.com>\n+\n+\t* configure.host (BACKTRACESPEC): Add arm*-linux*.\n+\n+2007-08-22  Andrew Haley  <aph@redhat.com>\n+\n+\t* configure.ac (LIBSTDCXXSPEC): New.\n+\t* configure.host: Add arm*-linux* to pthread test.\n+\t* configure.ac (LIBGCJTESTSPEC): Add path to libstdc++ for ARM\n+\tEABI.\n+\t* testsuite/libjava.jni/jni.exp (gcj_jni_compile_c_to_so): Use\n+\t-fexceptions for ARM EABI.\n+\t* testsuite/lib/libjava.exp (libjava_arguments): Add libgcj-test.spec.\n+\t(libjava_invoke): Log the invocation.\n+\n+2007-08-15  Andrew Haley  <aph@redhat.com>\n+\n+\t* configure.ac (extra_ldflags): Define.\n+\t* Makefile.am: Use extra_ldflags for all executables.\n+\n+2007-08-14  Andrew Haley  <aph@redhat.com>\n+\n+\t* sysdep/arm/backtrace.h: Remove stubs for _Unwind_GetIPInfo,\n+\t_Unwind_GetRegionStart, and _Unwind_Backtrace.\n+\n+2007-07-27  Andrew Haley  <aph@redhat.com>\n+\n+\t* gnu/classpath/natVMStackWalker.cc (GET_CALLING_CLASS): Stub for\n+\tARM EABI.\n+\t* exception.cc (get_exception_header_from_ue): New.\n+\t(get_ttype_entry): ARM EABI version.\n+\t(PERSONALITY_FUNCTION): Add ARM EABI code.\n+\t* sysdep/arm/backtrace.h: New file.\n+\t* stacktrace.cc (_URC_NORMAL_STOP): New.\n+\t* configure.ac (extra_ldflags_libjava): Add libsupc++.la for ARM\n+\tEABI.\n+\t* configure.host (BACKTRACESPEC): Add arm/backtrace.h.\n+\n+2007-08-31  Matthias Klose  <doko@ubuntu.com>\n+\n+\t* classpath/lib/java/util/EnumSet*.class: Regenerate\n+\n+2007-08-30  Andreas Tobler  <a.tobler@schweiz.org>\n+\n+\t* gij.cc (version): Update Copyright year.\n+\n+2007-08-16  Samuel Thibault  <samuel.thibault@ens-lyon.org>\n+\n+\t* configure.host (gnu*): Set use_libgcj_bc to yes.\n+\n+2007-08-15  Tom Tromey  <tromey@redhat.com>\n+\n+\t* java/lang/Class.java (internalGetFields): Use LinkedHashSet.\n+\t* classpath/lib/java/lang/Class.class: Rebuilt.\n+\n+2007-08-15  Samuel Thibault  <samuel.thibault@ens-lyon.org>\n+\n+\t* java/lang/natPosixProcess.cc (sigchld_handler) [!SA_SIGINFO]: Remove\n+\t'si' and 'third' parameters.  Disable calling\n+\tpmi->old_sigaction.sa_sigaction.\n+\t(java::lang::PosixProcess*ProcessManager::init) [!SA_SIGINFO]: Set\n+\tsa.sa_handler instead of sa.sa_sigaction, don't set SA_SIGINFO flag.\n+\n+2007-08-09  Andrew Haley  <aph@redhat.com>\n+\n+\t* testsuite/lib/libjava.exp (libjava_invoke): Log the invocation.\n+\n+2007-08-08  Samuel Thibault  <samuel.thibault@ens-lyon.org>\n+\n+\t* java/net/natVMInetAddressPosix.cc\n+\t(java::net::VMInetAddress::getLocalHostname) [!MAXHOSTNAMELEN]:\n+\tAllocate buffer dynamically.\n+\n+2007-08-04  Alfred M. Szmidt  <ams@gnu.org>\n+\n+\t* java/io/natFilePosix.cc (init_native) [!MAXPATHLEN]: Define to 0.\n+\t* java/io/File.java (createTempFile): Don't truncate if the system\n+\tdoesn't have a limit on the length of a file name.\n+\t* classpath/lib/java/io/File.class: Regenerate.\n+\n+2007-08-04  Matthias Klose  <doko@ubuntu.com>\n+\n+\tImport GNU Classpath (libgcj-import-20070727).\n+\n+\t* Regenerate class and header files.\n+\t* Regenerate auto* files.\n+\n+\t* include/jvm.h:\n+\t* jni-libjvm.cc (Jv_JNI_InvokeFunctions): Rename type.\n+\t* jni.cc (_Jv_JNIFunctions, _Jv_JNI_InvokeFunctions): Likewise.\n+\t* jni.cc (_Jv_JNI_CallAnyMethodA, _Jv_JNI_CallAnyVoidMethodA,\n+\t_Jv_JNI_CallMethodA, _Jv_JNI_CallVoidMethodA,\n+\t_Jv_JNI_CallStaticMethodA, _Jv_JNI_CallStaticVoidMethodA,\n+\t_Jv_JNI_NewObjectA, _Jv_JNI_SetPrimitiveArrayRegion): Constify\n+\tjvalue parameter.\n+\t* java/lang/reflect/natMethod.cc (_Jv_CallAnyMethodA): Likewise.\n+\n+\t* java/lang/VMFloat.java (toString, parseFloat): New.\n+\n+\t* gnu/awt/xlib/XToolkit.java (setAlwaysOnTop, isModalityTypeSupported,\n+\tisModalExclusionTypeSupported): New (stub only).\n+\t* gnu/awt/xlib/XCanvasPeer.java (requestFocus): Likewise.\n+\t* gnu/awt/xlib/XFramePeer.java (updateMinimumSize, updateIconImages,\n+\tupdateFocusableWindowState, setModalBlocked, getBoundsPrivate,\n+\tsetAlwaysOnTop): Likewise.\n+\t* gnu/awt/xlib/XFontPeer.java (canDisplay): Update signature.\n+\n+\t* scripts/makemake.tcl: Ignore gnu/javax/sound/sampled/gstreamer,\n+\tignore javax.sound.sampled.spi.MixerProvider, ignore .in files.\n+\n+\t* HACKING: Mention --enable-gstreamer-peer, removal of generated files.\n+\n+2007-07-31  David Daney  <ddaney@avtrex.com>\n+\n+\t* HACKING: Document regenerating configure and aclocal.m4.\n+\n+2007-07-31  David Daney  <ddaney@avtrex.com>\n+\n+\t* configure.ac (INTERPRETER): New AM_CONDITIONAL.\n+\t* scripts/makemake.tcl (package_map): Mark jdwp and jvmti packages\n+\tas being for interpreter only.  Place interpreter related files in\n+\t'if INTERPRETER' block.\n+\t(interpreter_package_files): New list.\n+\t(interpreter_header_vars): Ditto.\n+\t(emit_package_rule_to_list): Renamed from emit_package_rule with\n+\tnew target list parameter.\n+\t(emit_package_rule): Rewritten to call emit_package_rule_to_list.\n+\t(emit_interpreter_rule): New function.\n+\t(emit_source_var): Place interpreter related files in\n+\tinterpreter_header_vars.\n+\t* Makefile.am (ACLOCAL_AMFLAGS): Add -I libltdl.\n+\t(libgcj_interpret_source_files): New variable.\n+\t(libgcj_la_SOURCES): Move jvmti.cc and  interpret.cc to\n+\tlibgcj_interpret_source_files and include\n+\tlibgcj_interpret_source_files.\n+\t(nat_jdwp_source_files): New variable.\n+\t(nat_jvmti_source_files): Ditto.\n+\t(nat_source_files): Move jdwp and jvmti related files to\n+\tnat_jdwp_source_files and nat_jvmti_source_files and include\n+\tnat_jdwp_source_files and nat_jvmti_source_files.\n+\t* Makefile.in: Regenerate.\n+\t* include/Makefile.in: Ditto.\n+\t* testsuite/Makefile.in: Ditto.\n+\t* gcj/Makefile.in: Ditto.\n+\t* sources.am: Ditto.\n+\t* configure: Ditto.\n+\t* include/config.h.in: Ditto.\n+\t* interpret.cc: Remove #ifdef INTERPRETER block.\n+\t* stacktrace.cc (UnwindTraceFn): Do not handle proxy frames if\n+\tinterpreter disabled.\n+\t* include/java-interp.h (_Jv_FrameType): Move outside of\n+\t#ifdef INTERPRETER block.\n+\t* include/execution.h (_Jv_IndirectCompiledEngine::do_get_closure_list,\n+\t_Jv_InterpreterEngine, _Jv_soleInterpreterEngine): Place in\n+\t#ifdef INTERPRETER block.\n+\t* jni.cc (jvmti.h, jvmti-int.h):  Only include if INTERPRETER is\n+\tdefined.\n+\t(_Jv_JNI_PopSystemFrame, _Jv_JNI_GetEnv): Only do jvmti processing\n+\tif INTERPRETER is defined.\n+\t* prims.cc (jvmti.h, jvmti-int.h, Jdwp.h, VMVirtualMachine.h):  Only\n+\tinclude if INTERPRETER is defined.\n+\t(defaultJdwpOptions, jdwpOptions, jvmti_agent_onload_func,\n+\tjvmti_agent_onunload_func, jvmti_agentonload, jvmti_agentonunload,\n+\tjvmti_agent_opts, load_jvmti_agent): Only define if INTERPRETER is\n+\tdefined.\n+\t(parse_x_arg): Only process 'runjdwp:' if INTERPRETER is defined.\n+\t(parse_init_args): Only process jvmti related options if\n+\tINTERPRETER is defined.\n+\t(_Jv_CreateJavaVM): Only call _Jv_JVMTI_Init if INTERPRETER is\n+\tdefined.\n+\t(_Jv_RunMain): Only do jvmti and jdwp processing if INTERPRETER is\n+\tdefined.\n+\t* link.cc (jvmti.h, jvmti-int.h):  Only include if INTERPRETER is\n+\tdefined.\n+\t(_Jv_ThrowNoClassDefFoundError, _Jv_Linker::create_error_method):\n+\tDefine if if INTERPRETER is not defined.\n+\t(_Jv_Linker::wait_for_state): Only do jvmti proccessing if\n+\tINTERPRETER is defined.\n+\t* boehm.cc (closure_list_pointer, finalize_closure_list,\n+\t_Jv_ClosureListFinalizer): Only define if INTERPRETER is\n+\tdefined.\n+\t* java/lang/natThread.cc (jvmti.h, jvmti-int.h):  Only include if\n+\tINTERPRETER is defined.\n+\t(finish_, _Jv_NotifyThreadStart): Only do jvmti proccessing if\n+\tINTERPRETER is defined.\n+\t* java/lang/Class.h (_Jv_InterpreterEngine): Move declaration\n+\tand friend declaration inside #ifdef INTERPRETER block.\n+\t* java/lang/natClass.cc (_Jv_ClosureList::releaseClosures,\n+\t_Jv_ClosureList::registerClosure, _Jv_GetInterpClassSourceFile):\n+\tOnly define if INTERPRETER is defined.\n+\t* java/lang/reflect/natVMProxy.cc (UnsupportedOperationException.h):\n+\tInclude.\n+\t(generateProxyClass): Throw UnsupportedOperationException unless\n+\tINTERPRETER is defined.\n+\n+2007-07-29  Matthias Klose  <doko@ubuntu.com>\n+\n+\t* HACKING: Document regenerating configure.\n+\n+2007-07-29  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR libgcj/32929\n+\t* aclocal.m4: Regenerated.\n+\t* configure: Likewise.\n+\n+2007-07-28  Matthias Klose  <doko@ubuntu.com>\n+\n+\t* configure.ac: Encode the libgcj soversion in dbexecdir,\n+\tpass --with-native-libdir to classpath configure.\n+\t* configure: Regenerate.\n+\n+2007-07-28  Matthias Klose  <doko@ubuntu.com>\n+\n+\t* classpath/jvmti.h: Remove.\n+\n+2007-07-27  Tom Tromey  <tromey@redhat.com>\n+\n+\t* Rebuild .class files with new ecj.\n+\n+2007-07-23  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>\n+\n+\t* configure.ac (mips-sgi-irix6*): Override SYSTEMSPEC.\n+\t* configure: Regenerate.\n+\n+2007-07-16  Rask Ingemann Lambertsen  <rask@sygehus.dk>\n+\n+\tPR target/32340\n+\t* configure.host (arm*-elf | strongarm*-elf | xscale*-elf): Use the\n+\tnew sysdeps/arm directory.\n+\n+2007-07-15  Tom Tromey  <tromey@redhat.com>\n+\n+\t* java/io/File.java: Implement Comparable<File>.\n+\t(compareTo): Removed.\n+\t* java/io/File.h: Rebuilt.\n+\t* classpath/lib/java/io/File.class: Rebuilt.\n+\n+2007-07-14  Tom Tromey  <tromey@redhat.com>\n+\n+\t* Rebuilt .class files.\n+\n+2007-07-15  Andrew Haley  <aph@redhat.com>\n+\n+\t* configure.host: \n+\tarm*-linux-gnu -> arm*-linux*.\n+\n+2007-07-14  Krister Walfridsson  <cato@df.lth.se>\n+\n+\t* gnu/gcj/util/natGCInfo.cc: Use HAVE_STRERROR_R.\n+\t* configure.ac: Remove check for strerror, add check for strerror_r.\n+\t* configure: Regenerate.\n+\t* include/config.h.in: Regenerate.\n+\n+2007-07-13  Andrew Haley  <aph@redhat.com>\n+\n+\t* libgcj.ver: Add __gcj_personality_sj0.\n+\n+\t* testsuite/libjava.jvmti/jvmti-interp.exp: Likewise.\n+\t* testsuite/libjava.jni/jni.exp: Use -fdollars-in-identifiers.\n+\t* testsuite/libjava.jni/cni.exp: Use -fdollars-in-identifiers.\n+\t* testsuite/libjava.jvmti/jvmti.exp (gcj_jvmti_compile_cxx_to_o): Likewise.\n+\n+\t* gnu/classpath/natVMStackWalker.cc (getCallingClassLoader): Check\n+\tklass is non-null.\n+\t* java/lang/reflect/natField.cc (getAddr): Call\n+\t_Jv_StackTrace::GetCallingClass only if CALLER is non-null.\n+\t* java/lang/reflect/natVMProxy.cc (run_proxy): Use\n+\t_Jv_getFieldInternal to get field proxyClass.m.\n+\t(_Jv_getFieldInternal): New function.\n+\n+2007-07-11  Andrew Haley  <aph@redhat.com>\n+\n+\t* configure.host (arm*-linux-gnu): New.\n+\t* sysdep/arm/locks.h: New.\n+\n+2007-07-13  Roger Sayle  <roger@eyesopen.com>\n+\n+\t* java/lang/natPosixProcess.cc: Include <sys/time.h> before\n+\t<sys/resource.h> to restore bootstrap on powerpc-apple-darwin7.9.0.\n+\n+2007-07-12  Matthias Klose  <doko@ubuntu.com>\n+\n+\t* gnu/classpath/jdwp/util/MethodResult.h,\n+\tgnu/classpath/jdwp/value/ObjectValue.h: Regenerate.\n+\n+2007-07-11  Keith Seitz  <keiths@redhat.com>\n+\n+\t* interpret.cc (get_local_var_table) [DIRECT_THREADED]: Make sure the\n+\tmethod is compiled.\n+\t* testsuite/libjava.jvmti/interp/getlocalvartable.out: Revise\n+\tfor compiled methods.\n+\n+2007-07-10  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>\n+\n+\tPR libgcj/32651\n+\t* configure.host (mips-sgi-irix6*): Set sysdeps_dir.\n+\tDisable interpreter.\n+\t\n+2007-07-05  Andreas Tobler  <a.tobler@schweiz.org>\n+\n+\t* java/lang/natPosixProcess.cc: Reorder includes to fix compilation\n+\ton hppa2.0w-hp-hpux11.11.\n+\tRemove include of <gcj/cni.h>.\n+\n+2007-07-05  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* aclocal.m4: Regenerated.\n+\n+2007-07-03  Andreas Tobler  <a.tobler@schweiz.org>\n+\n+\t* java/lang/Class.h: Remove redundant 'class java::*::* declarations.\n+\n+2007-07-02  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>\n+\n+\tPR libgcj/30513\n+\t* configure.host (i[3-6]86-*): Undef sun.\n+\n+2007-06-28  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* testsuite/libjava.jvmti/jvmti-interp.exp (gij_jvmti_test_one):\n+\tFix a typo.\n+\n+2007-06-28  Jan Nijtmans  <nijtmans@users.sourceforge.net>\n+\n+\tPR libgcj/30999:\n+\t* jni_md.h: Add the possibility to compile jni code with.\n+\t-fvisibility=hidden. This causes all symbols to be hidden\n+\texcept the JNI functions which need to be exported.\n+\n+2007-06-28  Andreas Tobler  <a.tobler@schweiz.org>\n+\n+\t* testsuite/libjava.jvmti/jvmti-interp.exp (gij_jvmti_test_one): Pass\n+\tthe cxxldlibflags to exec_gij to have the right libstdc++ invoked.\n+\n+2007-07-21  Keith Seitz  <keiths@redhat.com>\n+\n+\t* gnu/classpath/jdwp/VMVirtualMachine.h: Regenerate.\n+\n+2007-07-20  Keith Seitz  <keiths@redhat.com>\n+\n+\t* classpath/lib/gnu/classpath/jdwp/value/StringValue.class:\n+\tRegenerate.\n+\n+2007-07-20  Keith Seitz  <keiths@redhat.com>\n+\n+\t* gnu/classpath/jdwp/VMVirtualMachine.java (executeMethod):\n+\tUpdate from reference implementation.\n+\t* gnu/classpath/jdwp/natVMVirtualMachine.cc (executeMethod):\n+\tUpdate parameter list to match new VMVirtualMachine interface.\n+\t* classpath/lib/gnu/classpath/jdwp/processor/ClassTypeCommandSet.class:\n+\tRegenerate.\n+\t* classpath/lib/gnu/classpath/jdwp/processor/\n+\tObjectReferenceCommandSet.class: Regenerate.\n+\t* classpath/lib/gnu/classpath/jdwp/value/ObjectValue.class: Regenerate.\n+\t* classpath/lib/gnu/classpath/jdwp/VMVirtualMachine.class: Regenerate.\n+\t* classpath/lib/gnu/classpath/jdwp/util/MethodResult.class: Regenerate.\n+\n+2007-06-18  Keith Seitz  <keiths@redhat.com>\n+\n+\t* gnu/gcj/jvmti/Breakpoint.java: Make abstract.\n+\t(method): Change from private to protected.\n+\t(location): Likewise.\n+\t(Breakpoint): Change argument list to take only integer type.\n+\tAdd default constructor.\n+\t(initialize_native): Renamed to ...\n+\t(_save_insn): ... this to make function more explicit.\n+\t(execute): New method.\n+\t* gnu/gcj/jvmti/Breakpoint.h: Regenerate.\n+\t* gnu/gcj/jvmti/natBreakpoint.cc (initialize_native): Rename to...\n+\t(_save_insn): ... this.\n+\t(install): Save the original instruction.\n+\t* gnu/gcj/jvmti/NormalBreakpoint.java: New file.\n+\t* gnu/gcj/jvmti/NormalBreakpoint.h: New file.\n+\t* gnu/gcj/jvmti/natNormalBreakpoint.cc: New file.\n+\t* gnu/gcj/jvmti/BreakpointManager.java (newBreakpoint):\n+\tInstantiate a NormalBreakpoint instead of Breakpoint.\n+\t* interpret-run.cc (insn_breakpoint): Remove breakpoint actions\n+\tand call Breakpoint.execute to do them.\n+\t* classpath/lib/gnu/gcj/jvmti/Breakpoint.class: Regenerate.\n+\t* classpath/lib/gnu/gcj/jvmti/BreakpointManager.class: Likewise.\n+\t* classpath/lib/gnu/gcj/jvmti/NormalBreakpoint.class: New file.\n+\t* sources.am: Regenerate.\n+\t* Makefile.am (nat_source_files): Add natNormalBreakpoint.cc.\n+\t* Makefile.in: Regenerated.\n+\n+2007-06-14  Keith Seitz  <keiths@redhat.com>\n+\n+\t* include/java-interp.h (_Jv_LocalVarTableEntry): Add union\n+\tfor bytecode_pc and direct-threaded pc.\n+\tAdd field descriptions inline.\n+\t* defineclass.cc (read_one_code_attribute): Change from\n+\tbytecode_start_pc to bytecode_pc.\n+\tRemove unused variable \"len\".\n+\t* interpret.cc (compile): Remap the variable table, too.\n+\t(get_local_var_table) [DIRECT_THREADED]: Use insn_index on the\n+\tstart location to map from pc_t to code index.\n+\n+2007-06-09  Keith Seitz  <keiths@redhat.com>\n+\n+\t* testsuite/libjava.jvmti/dummyagent.c (Agent_OnLoad):\n+\tAdd missing return value.\n+\n+2007-06-03  Matthias Klose  <doko@ubuntu.com>\n+\n+\t* java/io/natFileWin32.cc (setFilePermissions): New (stub only).\n+\t_access: Handle EXEC query, stub only.\n+\n+2007-06-03  Matthias Klose  <doko@ubuntu.com>\n+\n+\tMerged from classpath:\n+\t* gnu/java/nio/SelectorProviderImpl.java: Whitespace merge.\n+\t* java/lang/System.java(inheritedChannel): New.\n+\t* java/lang/Character.java: Remove stray`;'.\n+\t* java/net/MulticastSocket.java: Merged.\n+\t* java/text/DateFormatSymbols.java(getInstance): New, comment updates.\n+\t* java/text/Collator.java(getInstance): Merged.\n+\t* java/util/Calendar.java: New attributes ALL_STYLES, SHORT, LONG.\n+\tgetDisplayName, getDisplayNames: New.\n+\t* java/util/logging/Logger.java: Merged.\n+\t* Regenerate .class and .h files.\n+\n+2007-06-03  Matthias Klose  <doko@ubuntu.com>\n+\n+\t* java/io/File.java: Merge with classpath-0.95, new method\n+\tsetFilePermissions, new attribute EXEC.\n+\t* java/io/natFilePosix.cc (setFilePermissions): New.\n+\t_access: Handle EXEC query.\n+\t* classpath/lib/java/io/File.class, java/io/File.h: Regenerate.\n+\n+2007-06-03  Matthias Klose  <doko@ubuntu.com>\n+\n+\tImported GNU Classpath 0.95.\n+\n+\t* classpath/Makefile.in,\n+\tclasspath/native/jni/midi-dssi/Makefile.in,\n+\tclasspath/native/jni/classpath/Makefile.in,\n+\tclasspath/native/jni/Makefile.in,\n+\tclasspath/native/jni/gconf-peer/Makefile.in,\n+\tclasspath/native/jni/java-io/Makefile.in,\n+\tclasspath/native/jni/native-lib/Makefile.in,\n+\tclasspath/native/jni/java-util/Makefile.in,\n+\tclasspath/native/jni/midi-alsa/Makefile.in,\n+\tclasspath/native/jni/java-lang/Makefile.in,\n+\tclasspath/native/jni/java-nio/Makefile.in,\n+\tclasspath/native/jni/java-net/Makefile.in,\n+\tclasspath/native/jni/xmlj/Makefile.in,\n+\tclasspath/native/jni/qt-peer/Makefile.in,\n+\tclasspath/native/jni/gtk-peer/Makefile.in,\n+\tclasspath/native/Makefile.in, classpath/native/jawt/Makefile.in,\n+\tclasspath/native/fdlibm/Makefile.in,\n+\tclasspath/native/plugin/Makefile.in,\n+\tclasspath/resource/Makefile.in, classpath/scripts/Makefile.in,\n+\tclasspath/tools/Makefile.in, classpath/doc/Makefile.in,\n+\tclasspath/doc/api/Makefile.in, classpath/lib/Makefile.in,\n+\tclasspath/external/Makefile.in,\tclasspath/external/jsr166/Makefile.in,\n+\tclasspath/external/sax/Makefile.in,\n+\tclasspath/external/w3c_dom/Makefile.in,\n+\tclasspath/external/relaxngDatatype/Makefile.in,\n+\tclasspath/include/Makefile.in,\n+\tclasspath/examples/Makefile.in: Regenerate.\n+\t* classpath/config.guess, classpath/config.sub,\n+\tclasspath/ltmain.sh : Update.\n+\t* classpath/configure, classpath/depcomp, classpath/missing,\n+\tclasspath/aclocal.m4, classpath/install-sh: Regenerate.\n+\n+\t* gnu/classpath/Configuration.java (CLASSPATH_VERSION): Now 0.95.\n+\t* sources.am: Regenerate.\n+\t* Makefile.in: Regenerate.\n+\n+\t* Update the .class files and generated CNI header files, add new\n+\t.class and generated CNI header files.\n+\t* Remove generated files for removed java source files:\n+\tclasspath/gnu/java/net/BASE64.java,\n+\tclasspath/gnu/java/security/util/Base64.java,\n+\tclasspath/gnu/java/awt/peer/gtk/GThreadMutex.java,\n+\tclasspath/gnu/java/awt/peer/gtk/GThreadNativeMethodRunner.java,\n+\tclasspath/gnu/java/awt/font/autofit/Scaler.java,\n+\tclasspath/gnu/classpath/jdwp/util/Value.java,\n+\tclasspath/gnu/javax/net/ssl/Base64.java.\n+\t* Remove empty directories.\n+\n+\t* Makefile.am(nat_source_files): Add natVMOperatingSystemMXBeanImpl.cc.\n+\t* java/lang/Class.java(setAccessible): Merge from classpath.\n+\t* java/util/Locale.java: Remove.\n+\t* gnu/java/lang/management/VMOperatingSystemMXBeanImpl.java,\n+\tgnu/java/lang/management/natVMOperatingSystemMXBeanImpl.cc: New.\n+\t* gcj/javaprims.h: Update class declarations.\n+\t* scripts/classes.pl: Update usage.\n+\t* HACKING: Mention to build all peers.\n+\n+2007-06-02  Paolo Bonzini  <bonzini@gnu.org>\n+\n+\t* configure: Regenerate.\n+\n+2007-05-31  Andrew Haley  <aph@redhat.com>\n+\n+\t* java/lang/natClassLoader.cc (_Jv_NewClassFromInitializer): Clear\n+\tINTERPRETED access modifier.\n+\n+2007-05-31  Paolo Bonzini  <bonzini@gnu.org>\n+\n+\tPR libjava/32098\n+\t* configure: Regenerated.\n+\t* aclocal.m4: Regenerated.\n+\n+2007-05-30  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR libjava/32098\n+\t* configure: Regenerated.\n+\n+2007-05-29  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* configure.ac: Don't include ../config/confsubdir.m4.\n+\t* aclocal.m4: Regenerated.\n+\t* configure: Likewise.\n+\n+2007-05-27  Paolo Bonzini  <bonzini@gnu.org>\n+\n+\tPR bootstrap/32078\n+\t* configure.ac: Include confsubdir.m4.\n+\t* configure: Regenerate.\n+\n+2007-05-24  Keith Seitz  <keiths@redhat.com>\n+\n+\t* include/java-interp.h (_Jv_InterpFrame::get_pc): Only deduct\n+\tone when pc_ptr is non-NULL.\n+\n+\t* prims.cc (parse_init_args): Enable JVMTI with agentlib\n+\tand agentpath options.\n+\n+\t* testsuite/lib/libjava.exp (exec_gij): Add new addl_flags\n+\tparameter.\n+\t* testsuite/libjava.jvmti/jvmti-interp.exp (gij_jvmti_test_one):\n+\tPass '-agentlib:dummyagent' when executing gij.\n+\t(gij_jvmti_run): Build dummy JVMTI agent before running tests,\n+\tand remove it when finished.\n+\t* testsuite/libjava.jvmti/dummyagent.c: New file.\n+\n+2007-05-23  Steve Ellcey  <sje@cup.hp.com>\n+\n+\t* Makefile.in: Regenerate.\n+\t* configure: Regenerate.\n+\t* aclocal.m4: Regenerate.\n+\t* gcj/Makefile.in: Regenerate.\n+\t* include/Makefile.in: Regenerate.\n+\t* testsuite/Makefile.in: Regenerate.\n+\n+2007-05-17  Kyle Galloway  <kgallowa@redhat.com>\n+\n+\t* classpath/gnu/classpath/jdwp/processor/ReferenceTypeCommandSet.java\n+\t(executeMethods): Remove cast to ClassReferenceTypeId.\n+\t* classpath/lib/gnu/classpath/jdwp/processor/\n+\tReferenceTypeCommandSet.class: Rebuilt.\n+\n+2007-05-17  Kyle Galloway  <kgallowa@redhat.com>\n+\n+\t* gnu/classpath/jdwp/natVMMethod.cc (getModifiers): Check for native\n+\tclasses and mark methods as native appropriately.\n+\n+2007-05-17  Kyle Galloway  <kgallowa@redhat.com>\n+\n+\t* gnu/classpath/jdwp/VMFrame.java (<init>): Add parameter for \"this\"\n+\tpointer.\n+\t* gnu/classpath/jdwp/VMFrame.h: Regenerated.\n+\t* classpath/lib/gnu/classpath/jdwp/VMFrame.class: Rebuilt.\n+\t* gnu/classpath/jdwp/natVMVirtualMachine.cc (getFrame): Use new\n+\tVMFrame constructor.\n+\n+2007-05-16  David Daney  <ddaney@avtrex.com>\n+\n+\t* include/java-stack.h (_Jv_FrameInfo): Remove union definition.\n+\t(_Jv_StackFrame): Remove commented out code.\n+\t(_Jv_UnwindState): Remove superfluous 'typedef'.\n+\t* sun/misc/natUnsafe.cc (spinlock): Add white space to quiet\n+\tcompiler warnings.\n+\t* gnu/java/lang/management/natVMMemoryPoolMXBeanImpl.cc\n+\t(getCollectionUsage): Don't declare unused parameter n.\n+\t(getMemoryManagerNames): Same.\n+\t* gnu/gcj/util/natGCInfo.cc (gc_debug_info): Remove superfluous\n+\t'typedef'.\n+\n+2007-05-16  Keith Seitz  <keiths@redhat.com>\n+\n+\t* include/java-interp.h (breakpoint_at): Declare.\n+\t* interpret.cc (breakpoint_at): New function.\n+\t* gnu/classpath/jdwp/VMVirtualMachine.java (_event_list):\n+\tNew member.\n+\t* gnu/classpath/jdwp/natVMVirtualMachine.cc (initialize):\n+\tInitialize _event_list.\n+\t(handle_single_step): If there is a breakpoint at the\n+\tlocation at which we are stopping, do not send the notification.\n+\tInstead add the event to a list of events that occur at this\n+\tlocation.\n+\t(jdwpBreakpointCB): If the event list is not empty, send\n+\twhatever events are in it and the breakpoint event in a single\n+\tnotification.\n+\tMark parameter jni_env as MAYBE_UNUSED.\n+\t* classpath/lib/gnu/classpath/jdwp/VMVirtualMachine.class:\n+\tRegenerated.\n+\t* gnu/classpath/jdwp/VMVirtualMachine.h: Regenerated.\n+\n+2007-05-15  David Daney  <ddaney@avtrex.com>\n+\n+\t* classpath/lib/javax/swing/text/html/HTMLEditorKit.class: Regenerate\n+\t* gnu/java/awt/peer/gtk/ComponentGraphics.h: Same.\n+\n+2007-05-15  Keith Seitz  <keiths@redhat.com>\n+\n+\t* interpret.cc (STOREA): Rewrite using temporary variable to\n+\tavoid double-macro expansion side-effects.\n+\t(STOREI): Likewise.\n+\t(STOREF): Likewise.\n+\t(STOREL)[SIZEOF_VOID_P == 8]: Likewise.\n+\t(STORED)[SIZEOF_VOID_P == 8]: Likewise.\n+\t(STOREL)[SIZEOF_VOID_P != 8]: Likewise.\n+\t(STORED)[SIZEOF_VOID_P != 8]: Likewise.\n+\t(POKEI): Likewise.\n+\n+2007-05-12  David Daney  <ddaney@avtrex.com>\n+\n+\tPR libgcj/29324\n+\t* include/posix-threads.h (_Jv_BlockSigchld): Declare.\n+\t(_Jv_UnBlockSigchld): Same.\n+\t* posix-threads.cc: Include posix-threads.h.\n+\t(block_sigchld) Rename to...\n+\t(_Jv_BlockSigchld) ... this.\n+\t(_Jv_UnBlockSigchld): New function.\n+\t(_Jv_InitThreads): Call _Jv_BlockSigchld in place of block_sigchld.\n+\t(_Jv_ThreadStart): Same.\n+\t* java/lang/PosixProcess$ProcessManager.h: Regenerate.\n+\t* java/lang/PosixProcess.java: Clean up imports.\n+\t(ProcessManager): Make final.\n+\t(ProcessManager.queue): Genericise and make private.\n+\t(ProcessManager.pidToProcess): Remove.\n+\t(ProcessManager.liveProcesses): New field.\n+\t(ProcessManager.reaperPID): Remove.\n+\t(ProcessManager.nativeData): New field.\n+\t(ProcessManager.removeProcessFromMap): Remove.\n+\t(ProcessManager.addProcessToMap):Remove.\n+\t(ProcessManager.addToLiveProcesses): New method.\n+\t(ProcessManager.run): Rewritten.\n+\t(ProcessManager.reap): Change method signature,\n+\t(getErrorStream): Correct formatting.\n+\t(getInputStream): Same.\n+\t(spawn): Add process to liveProcesses list.\n+\t(pid): Make package private.\n+\t* java/lang/PosixProcess.h: Regenerate.\n+\t* java/lang/natPosixProcess.cc: Include posix.h and posix-threads.h.\n+\tAdd useing namespace java::lang.\n+\t(ProcessManagerInternal): New struct.\n+\t(sigchld_handler): Rewritten.\n+\t(init): Rewritten.\n+\t(waitForSignal): Same.\n+\t(reap): Same.\n+\t(signalReaper): Same.\n+\t(nativeDestroy): Call kill as ::kill.\n+\t(nativeSpawn): Correct formatting.\n+\t* classpath/lib/java/lang/PosixProcess$EOFInputStream.class: Regenerate.\n+\t* classpath/lib/java/lang/PosixProcess.class: Same.\n+\t* classpath/lib/java/lang/PosixProcess$ProcessManager.class: Same.\n+\n+2007-05-07  Ian Lance Taylor  <iant@google.com>\n+\n+\tPR java/31842\n+\t* java/lang/natString.cc (_Jv_FormatInt): Avoid undefined signed\n+\toverflow.\n+\n+2007-05-07  Keith Seitz  <keiths@redhat.com>\n+\n+\t* classpath/lib/gnu/classpath/jdwp/Jdwp.class: Regenerate.\n+\t* classpath/lib/gnu/classpath/jdwp/Jdwp$1.class: Regenerate.\n+\t* classpath/lib/gnu/classpath/jdwp/event/Event.class:\n+\tRegenerate.\n+\t* classpath/lib/gnu/classpath/jdwp/transport/JdwpConnection.class:\n+\tRegenerate.\n+\t* gnu/classpath/jdwp/Jdwp.h: Regenerate.\n+\t* gnu/classpath/jdwp/event/Event.h: Regenerate.\n+\t* gnu/classpath/jdwp/transport/JdwpConnection.h: Regenerate.\n+\n+2007-05-04  Kyle Galloway  <kgallowa@redhat.com>\n+\n+\t* gnu/classpath/jdwp/natVMVirtualMachine.cc (getClassMethod): Change\n+\tto use JVMTI.\n+\n+2007-05-03  Keith Seitz  <keiths@redhat.com>\n+\n+\t* interpret.cc: Don't include ExceptionEvent.h.\n+\t* gnu/gcj/jvmti/natExceptionEvent.cc: Remove.\n+\t* Makefile.am (nat_source_files): Remove natExceptionEvent.cc.\n+\t* Makefile.in: Regenerated.\n+\n+2007-05-03  Keith Seitz  <keiths@redhat.com>\n+\n+\t* include/jvmti-int.h (_Jv_ReportJVMTIExceptionThrow):\n+\tDeclare.\n+\t* interpret.cc (_Jv_ReportJVMTIExceptionThrow): New function.\n+\t(find_catch_location): New function.\n+\t(REPORT_EXCEPTION): New macro.\n+\t(throw_internal_error): Use REPORT_EXCEPTION.\n+\t(throw_incompatible_class_change_error): Likewise.\n+\t(throw_null_pointer_exception): Likewise.\n+\t(throw_class_format_error): Likewise.\n+\t* interpret-run.cc (INTERP_REPORT_EXCEPTION)[DEBUG]: Set\n+\tto REPORT_EXCEPTION.\n+\t(INTERP_REPORT_EXCEPTION)[!DEBUG]: Make nop.\n+\t(insn_new): Use INTERP_REPORT_EXCEPTION.\n+\t(insn_athrow): Likewise.\n+\tRemove previous JVMTI exception notifications.\n+\tAdd JVMTI ExceptionCatch notificatin.\n+\t* jni.cc (_Jv_PopSystemFrame): Notify JVMTI clients of\n+\texception throw.\n+\t* gnu/gcj/jvmti/ExceptionEvent.java: Removed.\n+\t* gnu/gcj/jvmti/ExceptionEvent.h: Removed. \n+\t* classpath/lib/gnu/gcj/jvmti/ExceptionEvent.class: Removed.\n+\t* gnu/classpath/jdwp/natVMVirtualMachine.cc\n+\t(jdwpExceptionCB): New function.\n+\t(jdwpVMInitCB): Set Exception event handler and enable.\n+\t* sources.am: Regenerated.\n+\t* Makefile.in: Regenerated.\n+\n+2007-05-03  Thomas Fitzsimmons  <fitzsim@redhat.com>\n+\n+\thttps://bugzilla.redhat.com/bugzilla/show_bug.cgi?id=237304\n+\t* Makefile.in: Regenerate.\n+\t* scripts/makemake.tcl (scan_directory): Treat default.css as a\n+\tproperty file.\n+\t* classpath/javax/swing/text/html/default.css: Move to...\n+\t* classpath/resource/javax/swing/text/html/default.css: New file.\n+\t* classpath/javax/swing/text/html/HTMLEditorKit.java\n+\t(getStyleSheet): Throw RuntimeException when style loading fails.\n+\t* sources.am (property_files): Add\n+\tclasspath/resource/javax/swing/text/html/default.css.\n+\n+2007-05-02  Tom Tromey  <tromey@redhat.com>\n+\n+\thttps://bugzilla.redhat.com/bugzilla/show_bug.cgi?id=238755\n+\t* java/lang/natCharacter.cc (Character::getType): Handle negative\n+\tcode points.\n+\t(Character::toLowerCase): Likewise.\n+\t(Character::toUpperCase): Likewise.\n+\t(Character::digit): Likewise.\n+\t(Character::getNumericValue): Likewise.\n+\t(Character::getDirectionality): Likewise.\n+\t(Character::toTitleCase): Likewise.\n+\n+2007-04-30  Keith Seitz  <keiths@redhat.com>\n+\n+\t* interpret-run.cc (NEXT_INSN)[DEBUG]: Advance PC before\n+\texecuting the instruction.\n+\t* include/java-interp.h (_Jv_InterpFrame::get_pc): Subtract\n+\tone insn from the frame's PC. _Jv_InterpMethod::run et al\n+\twill advance the PC before executing the instruction.\n+\n+2007-04-27  Keith Seitz  <keiths@redhat.com>\n+\n+\t* classpath/lib/gnu/classpath/jdwp/Jdwp.class: Regenerated.\n+\t* classpath/lib/gnu/classpath/jdwp/event/EventManager.class:\n+\tRegenerated.\n+\t* gnu/classpath/jdwp/event/EventManager.h: Regenerated.\n+\n+2007-04-27  Keith Seitz  <keiths@redhat.com>\n+\n+\t* classpath/lib/gnu/classpath/jdwp/event/filters/\n+\tLocationOnlyFilter.class: Regenerated;\n+\t* classpath/lib/gnu/classpath/jdwp/util/Location.class:\n+\tRegenerated.\n+\t* gnu/classpath/jdwp/VMMethod.java\n+\t* classpath/lib/gnu/classpath/jdwp/VMMethod.class:\n+\tRegenerated.\n+\t* gnu/classpath/jdwp/VMMethod.h: Regenerated.\n+\t* gnu/classpath/jdwp/util/Location.h: Regenerated.\n+\n+2007-04-27  Thomas Fitzsimmons  <fitzsim@redhat.com>\n+\n+\t* gnu/java/awt/peer/gtk/CairoGraphics2D.h: Regenerate.\n+\t* gnu/java/awt/peer/gtk/ComponentGraphics.h: Regenerate.\n+\n+2007-04-25  Kyle Galloway  <kgallowa@redhat.com>\n+\n+\t* gnu/classpath/jdwp/VMIdManager.java (getObjectId): Deal with null\n+\tobjects.\n+\t(get): Deal with ObjectId of 0. \n+\n+2007-04-24  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n+\n+\tPR libgcj/31084\n+\t* java/lang/natVMProcess.cc: Include platform.h before jvm.h.\n+\n+2007-04-24  Kyle Galloway  <kgallowa@redhat.com>\n+\n+\t* gnu/classpath/jdwp/natVMVirtualMachine.java\n+\t(getThreadStatus): Implement.\n+\n+2007-04-24  Keith Seitz  <keiths@redhat.com>\n+\n+\t* headers.txt (gnu/gcj/jvmti/Breakpoint.h)[DIRECT_THREADED]:\n+\tAdd _Jv_RewriteBreakpointInsn friend declaration.\n+\t* gnu/gcj/jvmti/natBreakpoint.cc (_Jv_RewriteBreakpointInsn)\n+\t[DIRECT_THREADED]: New function.\n+\t* gnu/gcj/jvmti/Breakpoint.h: Regenerate.\n+\t* interpret-run.cc: Define new REWRITE_INSN macro.\n+\tChanged all occurrences of insn rewriting to call REWRITE_INSN.\n+\n+2007-04-23  Keith Seitz  <keiths@redhat.com>\n+\n+\t* include/no-gc.h (_Jv_IsThreadSuspended): Declare.\n+\t* include/boehm-gc.h (_Jv_IsThreadSuspended): Likewise.\n+\t* boehm.cc (_Jv_IsThreadSuspended): New function.\n+\t* nogc.cc (_Jv_IsThreadSuspended): Likewise.\n+\t* jvmti.cc (_Jv_JVMTI_GetThreadState): New function.\n+\t(_Jv_JVMTI_Interface): Define GetThreadState.\n+\n+2007-04-23  Kyle Galloway  <kgallowa@redhat.com>\n+\n+\t* include/java-interp.h (_Jv_InterpFrame): Add pointer to the\n+\tinterpreter PC.\n+\t(<init>): Add a pointer to the interpreter PC as a parameter with\n+\tdefault value NULL.\n+\t(get_pc): New method.\n+\t* interpret-run.cc: If debugging, pass a pointer to the PC when\n+\tcreating the stack frame.\n+\t* jvmti.cc (_Jv_JVMTI_GetStackTrace): Call _Jv_InterpFrame::get_pc\n+\tto get the PC.\n+\n+2007-04-23  Kyle Galloway  <kgallowa@redhat.com>\n+\n+\t* gnu/classpath/jdwp/natVMVirtualMachine.cc (getSourceFile): Check\n+\tfor null source file and throw an exception indicating this.\n+\n+2007-04-20  Keith Seitz  <keiths@redhat.com>\n+\n+\t* gnu/gcj/jvmti/BreakpointManager.java (newBreakpoint):\n+\tInstall the new breakpoint into the bytecode.\n+\t(deleteBreakpoint): Remove the breakpoint from the bytecode.\n+\t* classpath/lib/gnu/gcj/jvmti/BreakpointManager.class:\n+\tRegenerate.\n+\t* gnu/gcj/jvmti/natBreakpoint.cc (initialize_native):\n+\tDon't install the breakpoint here.\n+\n+2007-04-19  Keith Seitz  <keiths@redhat.com>\n+\n+\t* interpret-run.cc [insn_breakpoint]: Save the original\n+\tinsn for the breakpoint before posting the JVMTI notification.\n+\n+2007-04-19  Tom Tromey  <tromey@redhat.com>\n+\n+\t* gnu/javax/net/ssl/provider/SSLSocketFactoryImpl.h: Rebuilt.\n+\n+2007-04-18  Tom Tromey  <tromey@redhat.com>\n+\n+\t* Regenerated headers with new gjavah.\n+\n+2007-04-18  Andrew Haley  <aph@redhat.com>\n+\n+\t* java/lang/reflect/natVMProxy.cc (ncode_closure): Add\n+\tmethod_index.\n+\t(generateProxyClass): Add field $Proxy0.m.  Store methods array in\n+\tit.\n+\t(run_proxy): Retrieve the method to invoke from in $Proxy0.m.\n+\t* java/lang/Class.h: Remove _Jv_LookupProxyMethod.\n+\t* java/lang/natClass.cc: Likewise.\n+\t* headers.txt: Likewise.\n+\t* java/lang/reflect/Method.h: Likewise.\n+\n+2007-04-16  Andrew Haley  <aph@redhat.com>\n+\n+\t* gnu/gcj/runtime/BootClassLoader.java (getBootURLLoader): New\n+\tmethod.\n+\t(bootGetResource): Use getBootURLLoader() to load resources.\n+\t(bootGetResources): Likewise.\n+\n+\t* java/lang/reflect/natMethod.cc (Method::invoke): In invoke also\n+\tcheck that the method's declaring class is accessible.\n+\n+2007-04-10  Keith Seitz  <keiths@redhat.com>\n+\n+\t* sources.am: Regenerate.\n+\t* Makefile.in: Likewise.\n+\n+2007-04-09  Kyle Galloway  <kgallowa@redhat.com>\n+\n+\t* interpret-run.cc: If debugging, check if args is NULL before\n+\tgetting the \"this\" pointer.\n+\n+2007-04-09  Kyle Galloway  <kgallowa@redhat.com>\n+\n+\t* classpath/gnu/classpath/jdwp/value/ArrayValue.java: New file.\n+\t* classpath/lib/gnu/classpath/jdwp/value/ArrayValue.class: New file.\n+\t* gnu/classpath/jdwp/ArrayValue.h: New file.\n+\t* gnu/classpath/jdwp/natVMFrame.cc (getValue): Add array case.\n+\t(setValue): Ditto. \n+\n+2007-04-09  David Daney  <ddaney@avtrex.com>\n+\n+\tPR libgcj/23758\n+\t* java/lang/natPosixProcess.cc (nativeSpawn): Move building of\n+\tenvironment before the fork.\n+\t* testsuite/libjava.lang/Process_7.java: New test.\n+\t* testsuite/libjava.lang/Process_7.out: Its expected results.\n+\t* testsuite/libjava.lang/Process_7.jar: Generated file.\n+\n+2007-04-09  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* prims.cc (load_jvmti_agent): Add the missing `,'.\n+\n+2007-04-09  Kyle Galloway  <kgallowa@redhat.com>\n+\n+\t* gij.cc (main): Accept -agentlib and -agentpath options.\n+\t* prims.cc (parse_init_args): Deal with -agentlib and -agentpath.\n+\t(load_jvmti_agent): New function.\n+\n+2007-04-04  Tania Bento  <tbento@redhat.com>\n+\n+\t* java/text/DecimalFormatSymbols.java: Added the year 2007 to\n+\tCopyright information and introduced new variable, currency.\n+\t(DecimalFormatSymbols(Locale)): Define currency and intlCurrencySymbol\n+\tto \"XXX\", currencySymbol to \"?\" and localCurrency appropriately.\n+\t(getCurrency): Fixed documentation and return the value of currency.\n+\t(setCurrency): Fixed documentation and update the value of currency.\n+\t(setInternationalCurrencySymbol): Fixed documentation and update the\n+\tvalue of currency.\n+\t* java/util/Currency.java: Introduced two new variables, properties\n+\tand fractionDigits. In the static block, a properties object is\n+\tcreated and the currency resource is loaded.\n+\t(Currency(Locale)): fractionDigits is defined.\n+\t(Currency(String)): New method.\n+\t(getDefaultFractionDigits): Return the value of fractionDigits.\n+\t(getInstance(String)): Check if String is equal to \"XXX\".\n+\n+2007-04-04  Kyle Galloway  <kgallowa@redhat.com>\n+\n+\t* classpath/gnu/classpath/jdwp/util/VariableTable.java: Change longs\n+\tto ints for argCnt and slots.\n+\t(write): Replace writeLong with writeInt for the above. \n+\n+2007-04-03  Andrew Haley  <aph@redhat.com>\n+\n+\t* testsuite/libjava.lang/ProxyTest.java: New test.\n+\n+2007-04-02  Tom Tromey  <tromey@redhat.com>\n+\n+\thttp://bugzilla.redhat.com/bugzilla/show_bug.cgi?id=205157\n+\t* gnu/java/nio/channels/natFileChannelPosix.cc (mapImpl): Extend\n+\tfile, when writing, if it is too short.\n+\n+2007-04-02  Tom Tromey  <tromey@redhat.com>\n+\n+\thttps://bugzilla.redhat.com/bugzilla/show_bug.cgi?id=233406\n+\t* gnu/java/net/natPlainSocketImplPosix.cc (create): Return if\n+\talready created.\n+\t* gnu/java/net/PlainSocketImpl.java (getLocalAddress): Handle case\n+\twhere localport is -1.\n+\t(create): Now public.\n+\t* gnu/java/nio/SocketChannelImpl.java (SocketChannelImpl): Call\n+\t'create' on the socket.\n+\n+2007-04-02  Andrew Haley  <aph@redhat.com>\n+\n+\t* java/lang/reflect/natVMProxy.cc (run_proxy): Use\n+\t_Jv_LookupProxyMethod to find the Method.\n+\tIf parameter_types->length == 0, pass a null paramameter list,\n+\tnot a zero-length parameter list.\n+\t* java/lang/natClass.cc (_Jv_LookupProxyMethod): New function.\n+\t* java/lang/Class.h (_Jv_LookupProxyMethod): Declare.\n+\n+2007-04-02  Kyle Galloway  <kgallowa@redhat.com>\n+\n+\t* interpret-run.cc: Add code to properly set up variable slots\n+\twhen debugging.\n+\t* gnu/classpath/jdwp/natVMFrame.cc (checkJVMTIError): New function.\n+\t(getObjectJVMTI): New function.\n+\t(setObjectJVMTI): New function.\n+\t(getIntJVMTI): New function.\n+\t(setIntJVMTI): New function.\n+\t(getLongJVMTI): New function.\n+\t(setLongJVMTI): New function.\n+\t(getFloatJVMTI): New function.\n+\t(setFloatJVMTI): New function.\n+\t(getDoubleJVMTI): New function.\n+\t(setDoubleJVMTI): New function.\n+\t(getFrameDepth): New function.\n+\t(getValue): Implement.\n+\t(setValue): Implement. \n+\n+2007-04-02  Kyle Galloway  <kgallowa@redhat.com>\n+\n+\t* classpath/gnu/classpath/jdwp/processor/ThreadReferenceCommandSet.java\n+\t(executeResume): Call VMVirtualMachine.resumeThread.\n+\n+2007-03-29  Tom Tromey  <tromey@redhat.com>\n+\n+\tPR libgcj/29869:\n+\t* java/util/logging/LogManager.java (readConfiguration): Handle\n+\tcomma-separated 'handlers'.  Don't try to add a non-existing\n+\thandler.\n+\n+2007-03-27  Tom Tromey  <tromey@redhat.com>\n+\n+\t* sources.am, Makefile.in: Rebuilt.\n+\t* scripts/mime.types: Removed.\n+\t* scripts/MakeDefaultMimeTypes.java: Removed.\n+\t* gnu/gcj/io/MimeTypes.java: Removed.\n+\t* gnu/gcj/io/MimeTypes.h: Removed.\n+\t* gnu/gcj/io/DefaultMimeTypes.java: Removed.\n+\t* gnu/gcj/io/DefaultMimeTypes.h: Removed.\n+\n+2007-03-27  Keith Seitz  <keiths@redhat.com>\n+\n+\t* gnu/classpath/jdwp/VMFrame.java: Update from upstream\n+\tclasspath.\n+\t* gnu/classpath/jdwp/natVMFrame.cc: Likewise.\n+\t* gnu/classpath/jdwp/VMVirtualMachine.java: Likewise.\n+\t* gnu/classpath/jdwp/natVMVirtualMachine.cc: Likewise.\n+\t(initialize): Fix compiler type-punning warning.\n+\t(getAllLoadedClasses): Return empty list instead of NULL.\n+\t(getLoadRequests): Likewise.\n+\t* gnu/classpath/jdwp/exception/InvalidTagException.h: New file.\n+\t* gnu/classpath/jdwp/exception/InvalidSlotException.h: New file.\n+\t* gnu/classpath/jdwp/exception/TypeMismatchException.h: New file.\n+\t* gnu/classpath/jdwp/VMVirtualMachine.h: Rebuilt.\n+\t* gnu/classpath/jdwp/value/CharValue.h: New file.\n+\t* gnu/classpath/jdwp/value/LongValue.h: New file.\n+\t* gnu/classpath/jdwp/value/ShortValue.h: New file.\n+\t* gnu/classpath/jdwp/value/Value.h: New file.\n+\t* gnu/classpath/jdwp/value/BooleanValue.h: New file.\n+\t* gnu/classpath/jdwp/value/VoidValue.h: New file.\n+\t* gnu/classpath/jdwp/value/ByteValue.h: New file.\n+\t* gnu/classpath/jdwp/value/FloatValue.h: New file.\n+\t* gnu/classpath/jdwp/value/ObjectValue.h: New file.\n+\t* gnu/classpath/jdwp/value/StringValue.h: New file.\n+\t* gnu/classpath/jdwp/value/ValueFactory.h: New file.\n+\t* gnu/classpath/jdwp/value/IntValue.h: New file.\n+\t* gnu/classpath/jdwp/value/DoubleValue.h: New file.\n+\t* gnu/classpath/jdwp/VMFrame.h: Rebuilt.\n+\t* gnu/classpath/jdwp/id/NullObjectId.h: New file.\n+\t* gnu/classpath/jdwp/util/MethodResult.h: Rebuilt.\n+\t* gnu/classpath/jdwp/util/NullObject.h: New file.\n+\t* gnu/classpath/jdwp/util/MonitorInfo.h: New file.\n+\t* Makefile.in: Rebuilt.\n+\t* sources.am: Rebuilt.\n+\n+2006-03-26  David Daney  <ddaney@avtrex.com>\n+\n+\t* configure.ac: Remove checks for mktime, alloca, ioctl, gmtime_r,\n+\tfork, execvp, execinfo.h, pthread_mutexattr_settype,\n+\tpthread_mutexattr_setkind_np and sys/wait.h.\n+\t* Makefile.in: Regenerate.\n+\t* include/Makefile.in: Regenerate.\n+\t* include/config.h.in: Regenerate.\n+\t* testsuite/Makefile.in: Regenerate.\n+\t* configure: Regenerate.\n+\t* gcj/Makefile.in: Regenerate.\n+\n+2007-03-23  Gary Benson  <gbenson@redhat.com>\n+\n+\t* link.cc (_Jv_Linker::resolve_method_entry):\n+\tEnsure that the argument types and the return type of the\n+\tfound method match those expected by the calling method.\n+\n+2007-03-22  David Daney  <ddaney@avtrex.com>\n+\n+\tPR libgcj/31228\n+\t* configure.ac: Add checks for getrlimit and sys/resource.h.\n+\t* include/posix.h (_Jv_platform_close_on_exec): Remove.\n+\t* include/config.h.in: Regenerate.\n+\t* configure: Regenerate.\n+\t* gnu/java/nio/channels/natFileChannelPosix.cc (open): Remove call to\n+\t_Jv_platform_close_on_exec;\n+\t* gnu/java/net/natPlainSocketImplPosix.cc (create): Likewise.\n+\t(accept): Likewise.\n+\t* gnu/java/net/natPlainDatagramSocketImplPosix.cc (create):Likewise.\n+\t* java/lang/natPosixProcess.cc: Include sys/resource.h.\n+\t(nativeSpawn): Close all file descriptors.  Don't set FD_CLOEXEC on\n+\tpipes.\n+\n+2007-03-20  Andrew Haley  <aph@redhat.com>\n+\n+\t* testsuite/libjava.lang/PR31264.java: New test.\n+\n+2007-03-14  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* Makefile.am (AM_MAKEFLAGS): Pass through mandir.\n+\t* Makefile.in: Rebuilt.\n+\n+2007-03-13  Keith Seitz  <keiths@redhat.com>\n+\n+\t* include/java-interp.h (_Jv_InterpClass): Declare\n+\tfriend function _Jv_GetInterpClassSourceFile.\n+\t* java/lang/Class.h (Class): Likewise.\n+\t* java/lang/natClass.cc (_Jv_GetInterpClassSourceFile):\n+\tNew function.\n+\t* gnu/classpath/jdwp/natVMVirtualMachine.cc\n+\t(getSourceFile): Implement.\n+\n+2007-03-13  Thomas Fitzsimmons  <fitzsim@redhat.com>\n+\n+\t* Makefile.am (AM_CXXFLAGS): Define ECJ_JAR_FILE.\n+\t* classpath/configure.ac: Add --with-ecj-jar configure option.\n+\t* classpath/gnu/classpath/Configuration.java.in (ECJ_JAR): New\n+\tfield.\n+\t* classpath/INSTALL: Document --with-ecj-jar configure option and\n+\tecj jar requirement for com.sun.tools.javac support.\n+\t* classpath/tools/Makefile.am: Build decendents of com and sun\n+\tdirectories.\n+\t* configure.ac: Substitute ECJ_JAR in stub Configuration.java.\n+\t* gnu/classpath/Configuration.java,\n+\tgnu/classpath/natConfiguration.cc (ecj): New method.\n+\t(ECJ_JAR): New field.\n+\t* scripts/makemake.tcl (scan_packages): Add com directory.\n+\t* sources.am (property_files): Add\n+\tclasspath/resource/sun/rmi/rmic/messages.properties and\n+\tclasspath/resource/com/sun/tools/javac/messages.properties.\n+\t* classpath/resource/com, classpath/resource/com/sun,\n+\tclasspath/resource/com/sun/tools,\n+\tclasspath/resource/com/sun/tools/javac, classpath/resource/sun,\n+\tclasspath/resource/sun/rmi, classpath/resource/sun/rmi/rmic,\n+\tclasspath/tools/classes/com, classpath/tools/classes/com/sun,\n+\tclasspath/tools/classes/com/sun/javadoc,\n+\tclasspath/tools/classes/com/sun/tools,\n+\tclasspath/tools/classes/com/sun/tools/doclets,\n+\tclasspath/tools/classes/sun, classpath/tools/classes/sun/rmi,\n+\tclasspath/tools/classes/sun/rmi/rmic, classpath/tools/com,\n+\tclasspath/tools/com/sun, classpath/tools/com/sun/javadoc,\n+\tclasspath/tools/com/sun/tools,\n+\tclasspath/tools/com/sun/tools/doclets,\n+\tclasspath/tools/com/sun/tools/javac, classpath/tools/sun,\n+\tclasspath/tools/sun/rmi, classpath/tools/sun/rmi/rmic: New\n+\tdirectories.\n+\t* classpath/resource/com/sun/tools/javac/messages.properties,\n+\tclasspath/resource/sun/rmi/rmic/messages.properties,\n+\tclasspath/tools/classes/com/sun/javadoc/ClassDoc.class,\n+\tclasspath/tools/classes/com/sun/javadoc/ConstructorDoc.class,\n+\tclasspath/tools/classes/com/sun/javadoc/Doc.class,\n+\tclasspath/tools/classes/com/sun/javadoc/DocErrorReporter.class,\n+\tclasspath/tools/classes/com/sun/javadoc/Doclet.class,\n+\tclasspath/tools/classes/com/sun/javadoc/ExecutableMemberDoc.class,\n+\tclasspath/tools/classes/com/sun/javadoc/FieldDoc.class,\n+\tclasspath/tools/classes/com/sun/javadoc/MemberDoc.class,\n+\tclasspath/tools/classes/com/sun/javadoc/MethodDoc.class,\n+\tclasspath/tools/classes/com/sun/javadoc/PackageDoc.class,\n+\tclasspath/tools/classes/com/sun/javadoc/ParamTag.class,\n+\tclasspath/tools/classes/com/sun/javadoc/Parameter.class,\n+\tclasspath/tools/classes/com/sun/javadoc/ProgramElementDoc.class,\n+\tclasspath/tools/classes/com/sun/javadoc/RootDoc.class,\n+\tclasspath/tools/classes/com/sun/javadoc/SeeTag.class,\n+\tclasspath/tools/classes/com/sun/javadoc/SerialFieldTag.class,\n+\tclasspath/tools/classes/com/sun/javadoc/SourcePosition.class,\n+\tclasspath/tools/classes/com/sun/javadoc/Tag.class,\n+\tclasspath/tools/classes/com/sun/javadoc/ThrowsTag.class,\n+\tclasspath/tools/classes/com/sun/javadoc/Type.class,\n+\tclasspath/tools/classes/com/sun/javadoc/TypeVariable.class,\n+\tclasspath/tools/classes/com/sun/tools/doclets/Taglet.class,\n+\tclasspath/tools/classes/sun/rmi/rmic/Main.class,\n+\tclasspath/tools/classes/sun/rmi/rmic/Messages.class,\n+\tclasspath/tools/com/sun/javadoc/ClassDoc.java,\n+\tclasspath/tools/com/sun/javadoc/ConstructorDoc.java,\n+\tclasspath/tools/com/sun/javadoc/Doc.java,\n+\tclasspath/tools/com/sun/javadoc/DocErrorReporter.java,\n+\tclasspath/tools/com/sun/javadoc/Doclet.java,\n+\tclasspath/tools/com/sun/javadoc/ExecutableMemberDoc.java,\n+\tclasspath/tools/com/sun/javadoc/FieldDoc.java,\n+\tclasspath/tools/com/sun/javadoc/MemberDoc.java,\n+\tclasspath/tools/com/sun/javadoc/MethodDoc.java,\n+\tclasspath/tools/com/sun/javadoc/PackageDoc.java,\n+\tclasspath/tools/com/sun/javadoc/ParamTag.java,\n+\tclasspath/tools/com/sun/javadoc/Parameter.java,\n+\tclasspath/tools/com/sun/javadoc/ProgramElementDoc.java,\n+\tclasspath/tools/com/sun/javadoc/RootDoc.java,\n+\tclasspath/tools/com/sun/javadoc/SeeTag.java,\n+\tclasspath/tools/com/sun/javadoc/SerialFieldTag.java,\n+\tclasspath/tools/com/sun/javadoc/SourcePosition.java,\n+\tclasspath/tools/com/sun/javadoc/Tag.java,\n+\tclasspath/tools/com/sun/javadoc/ThrowsTag.java,\n+\tclasspath/tools/com/sun/javadoc/Type.java,\n+\tclasspath/tools/com/sun/javadoc/TypeVariable.java,\n+\tclasspath/tools/com/sun/tools/doclets/Taglet.java,\n+\tclasspath/tools/com/sun/tools/javac/Main.java,\n+\tclasspath/tools/com/sun/tools/javac/Messages.java,\n+\tclasspath/tools/sun/rmi/rmic/Main.java,\n+\tclasspath/tools/sun/rmi/rmic/Messages.java: New files.\n+\t* Makefile.in, classpath/Makefile.in, classpath/configure,\n+\tclasspath/doc/Makefile.in, classpath/doc/api/Makefile.in,\n+\tclasspath/examples/Makefile.in, classpath/external/Makefile.in,\n+\tclasspath/external/jsr166/Makefile.in,\n+\tclasspath/external/relaxngDatatype/Makefile.in,\n+\tclasspath/external/sax/Makefile.in,\n+\tclasspath/external/w3c_dom/Makefile.in,\n+\tclasspath/include/Makefile.in, classpath/include/config.h.in,\n+\tclasspath/lib/Makefile.in,\n+\tclasspath/lib/gnu/classpath/Configuration.class,\n+\tclasspath/native/Makefile.in, classpath/native/fdlibm/Makefile.in,\n+\tclasspath/native/jawt/Makefile.in,\n+\tclasspath/native/jni/Makefile.in,\n+\tclasspath/native/jni/classpath/Makefile.in,\n+\tclasspath/native/jni/gconf-peer/Makefile.in,\n+\tclasspath/native/jni/gtk-peer/Makefile.in,\n+\tclasspath/native/jni/java-io/Makefile.in,\n+\tclasspath/native/jni/java-lang/Makefile.in,\n+\tclasspath/native/jni/java-net/Makefile.in,\n+\tclasspath/native/jni/java-nio/Makefile.in,\n+\tclasspath/native/jni/java-util/Makefile.in,\n+\tclasspath/native/jni/midi-alsa/Makefile.in,\n+\tclasspath/native/jni/midi-dssi/Makefile.in,\n+\tclasspath/native/jni/native-lib/Makefile.in,\n+\tclasspath/native/jni/qt-peer/Makefile.in,\n+\tclasspath/native/jni/xmlj/Makefile.in,\n+\tclasspath/native/plugin/Makefile.in,\n+\tclasspath/resource/Makefile.in, classpath/scripts/Makefile.in,\n+\tclasspath/tools/Makefile.in, configure,\n+\tgnu/classpath/Configuration.h: Regenerate.\n+\n+2007-03-12  Kyle Galloway  <kgallowa@redhat.com>\n+\n+\t* jvmti.cc (_Jv_JVMTI_GetArgumentsSize): Make wide type arrays count\n+\tas a sigle slot.\n+\n+2007-03-12  Marco Trudel  <mtrudel@gmx.ch>\n+\n+\t* java/lang/natString.cc (getBytes (jstring enc)):\n+\tFixed the loop for multiple cycles, Code cleanup\n+\n+2007-03-09  Tom Tromey  <tromey@redhat.com>\n+\n+\t* sources.am, Makefile.in: Rebuilt.\n+\t* scripts/makemake.tcl (scan_directory): Allow service files to be\n+\tomitted.\n+\tOmit all XML-related service files.\n+\n+2007-03-07  Tom Tromey  <tromey@redhat.com>\n+\n+\t* configure: Rebuilt.\n+\t* configure.ac: Clear vm-tools-packages.\n+\n+2007-03-07  Mohan Embar  <gnustuff@thisiscool.com>\n+\n+\t* java/lang/Win32Process.java: Added nested class EOFInputStream.\n+\t* java/lang/natWin32Process.cc (ChildProcessPipe): Added DUMMY\n+\tenum and implementation.\n+\t(startProcess): Use redirect flag.\n+\t* classpath/lib/java/lang/Win32Process.class: Regenerated.\n+\t* classpath/lib/java/lang/Win32Process$EOFInputStream.class: New.\n+\t* gcj/javaprims.h: Regenerated.\n+\t* java/lang/Win32Process$EOFInputStream.h: New.\n+\n+2007-03-07  Andrew Haley  <aph@redhat.com>\n+\n+\t* libgcj_bc.c (JvRunMainName): Declare.\n+\n+2007-03-07  Gary Benson  <gbenson@redhat.com>\n+\n+\t* sources.am, Makefile.in: Rebuilt.\n+\n+2007-03-07  Mohan Embar  <gnustuff@thisiscool.com>\n+\n+\t* gcj/javaprims.h: Regenerated.\n+\n+2007-03-07  Alexandre Oliva  <aoliva@redhat.com>\n+\n+\t* include/jvm.h (_Jv_ClosureListFinalizer): New.\n+\t(_Jv_Linker::create_error_method): Adjust.\n+\t* boehm.cc (_Jv_ClosureListFinalizer): New.\n+\t* nogc.cc (_Jv_ClosureListFinalizer): New.\n+\t* java/lang/Class.h (class _Jv_ClosureList): New.\n+\t(class java::lang::Class): Declare it as friend.\n+\t* java/lang/natClass.cc (_Jv_ClosureList::releaseClosures): New.\n+\t(_Jv_ClosureList::registerClousure): New.\n+\t* include/execution.h (_Jv_ExecutionEngine): Add get_closure_list.\n+\t(_Jv_CompiledEngine::do_get_closure_list): New.\n+\t(_Jv_CompiledEngine::_Jv_CompiledEngine): Use it.\n+\t(_Jv_IndirectCompiledClass): Add closures.\n+\t(_Jv_IndirectCompiledEngine::get_aux_info): New.\n+\t(_Jv_IndirectCompiledEngine::do_allocate_field_initializers): Use\n+\tit.\n+\t(_Jv_IndirectCompiledEngine::do_get_closure_list): New.\n+\t(_Jv_IndirectCompiledEngine::_Jv_IndirectCompiledEngine): Use it.\n+\t(_Jv_InterpreterEngine::do_get_closure_list): Declare.\n+\t(_Jv_InterpreterEngine::_Jv_InterpreterEngine): Use it.\n+\t* interpret.cc (FFI_PREP_RAW_CLOSURE): Use _loc variants.\n+\t(node_closure): Add closure list.\n+\t(_Jv_InterpMethod::ncode): Add jclass argument.  Use\n+\tffi_closure_alloc and the separate code pointer.  Register the\n+\tclosure for finalization.\n+\t(_Jv_JNIMethod::ncode): Likewise.\n+\t(_Jv_InterpreterEngine::do_create_ncode): Pass klass to ncode.\n+\t(_Jv_InterpreterEngine::do_get_closure_list): New.\n+\t* include/java-interp.h (_Jv_InterpMethod::ncode): Adjust.\n+\t(_Jv_InterpClass): Add closures field.\n+\t(_Jv_JNIMethod::ncode): Adjust.\n+\t* defineclass.cc (_Jv_ClassReader::handleCodeAttribute): Adjust.\n+\t(_Jv_ClassReader::handleMethodsEnd): Likewise.\n+\t* link.cc (struct method_closure): Add closure list.\n+\t(_Jv_Linker::create_error_method): Add jclass argument.  Use\n+\tffi_closure_alloc and the separate code pointer.  Register the\n+\tclosure for finalization.\n+\t(_Jv_Linker::link_symbol_table): Remove outdated comment about\n+\tsharing of otable and atable.  Adjust.\n+\t* java/lang/reflect/natVMProxy.cc (ncode_closure): Add closure\n+\tlist.\n+\t(ncode): Add jclass argument.  Use ffi_closure_alloc and the\n+\tseparate code pointer.  Register the closure for finalization.\n+\t(java::lang::reflect::VMProxy::generateProxyClass): Adjust.\n+\t* testsuite/libjava.jar/TestClosureGC.java: New.\n+\t* testsuite/libjava.jar/TestClosureGC.out: New.\n+\t* testsuite/libjava.jar/TestClosureGC.xfail: New.\n+\t* testsuite/libjava.jar/TestClosureGC.jar: New.\n+\n+2007-03-06  Kyle Galloway  <kgallowa@redhat.com>\n+\n+\t* classpath/gnu/classpath/jdwp/exception/AbsentInformationException.java: New file.\n+\t* classpath/lib/gnu/classpath/jdwp/exception/AbsentInformationException.class: Ditto.\n+\t* gnu/classpath/jdwp/exception/AbsentInformationException.h: Ditto.\n+\t* gnu/classpath/jdwp/natVMMethod.cc: Add CHECK_INTERP_CLASS macro.\n+\t(VMMethod::getLineTable): Use new macro.\n+\t(VMMethod::getVariableTable): Implement.\n+\t* sources.am: Regenerated.\n+\t* Makefile.in: Ditto.\n+\n+2007-03-06  Tom Tromey  <tromey@redhat.com>\n+\n+\t* Makefile.in: Rebuilt.\n+\t* Makefile.am (bin_PROGRAMS): Added gcjh.\n+\t(gcjh_SOURCES, gcjh_LDFLAGS, gcjh_LINK, gcjh_LDADD,\n+\tgcjh_DEPENDENCIES): New variables.\n+\n+2007-03-06  Kyle Galloway  <kgallowa@redhat.com>\n+\n+\t* jvmti.cc(_Jv_JVMTI_GetLocalVariableTable): Fix _Jv_Malloc parameters.\n+\t* testsuite/libjava.jvmti/interp/natgetlocalvartable.cc\n+\t(do_getlocalvartable_tests): Add Deallocate calls to free strings.\n+\n+2007-03-05  Matthias Klose  <doko@debian.org>\n+\n+\t* Makefile.am (gij_LDFLAGS): Use dbexecdir.\n+\t* Makefile.in: Regnerate.\n+\n+2007-03-05  Mark Wielaard  <mark@klomp.org>\n+\n+\t* java/lang/Character.java: Re-merged with Classpath.\n+\t* java/lang/natString.cc (nativeCompareTo): Renamed from\n+\tcompareTo.\n+\t* java/lang/StringBuilder.java: Re-merged with Classpath.\n+\t* java/lang/String.java: Re-merged with Classpath.\n+\t(nativeCompareTo): Renamed from compareTo.\n+\t* java/lang/StringBuffer.java: Re-merged with Classpath.\n+\t* jni.cc (_Jv_JNI_GetAnyMethodID): Split calls to append.\n+\n+2007-03-05  Andrew Haley  <aph@redhat.com>\n+\n+\t* java/lang/reflect/natVMProxy.cc (ncode_closure.meth): Delete.\n+\t(generateProxyClass): Don't pass method to ncode.\n+\t(run_proxy): Call _Jv_GetReflectedMethod to find the proxy method.\n+\t* java/lang/reflect/Method.h: Rebuild.\n+\t* java/lang/reflect/Method.java (internalGetParameterTypes,\n+\tinternalGetExceptionTypes): New methods.\n+\t* headers.txt (class java/lang/reflect/Method): Declare\n+\t_Jv_GetReflectedMethod.  Be its friend.\n+\t* java/lang/natClass.cc (_Jv_GetReflectedMethod): New method.\n+\t* java/lang/Class.h: Declare it.  Be its friend.\n+\n+2007-03-05  Tom Tromey  <tromey@redhat.com>\n+\n+\t* sources.am, Makefile.in: Rebuilt.\n+\t* scripts/makemake.tcl (emit_package_rule): Don't omit\n+\tVMProcess.java.\n+\t* Makefile.am (nat_source_files): Added natVMProcess.cc.\n+\t(inner_nat_headers): Added ImmediateEOFInputStream.h.\n+\t* gcj/javaprims.h: Regenerated.\n+\t* java/lang/System.java (EnvironmentMap): Now package-private.\n+\t(EnvironmentMap(Map)): New constructor.\n+\t(EnvironmentMap.put): New method.\n+\t* java/lang/natWin32Process.cc (startProcess): Update.\n+\t* java/lang/Win32Process.java (Win32Process): Added 'redirect'\n+\targument.\n+\t(startProcess): Likewise.\n+\t* java/lang/EcosProcess.java (EcosProcess): Added 'redirect'\n+\targument.\n+\t* java/lang/natPosixProcess.cc (nativeSpawn): Handle redirection.\n+\t* java/lang/PosixProcess.java (redirect): New field.\n+\t(PosixProcess): Added 'redirect' argument.\n+\t* java/lang/natRuntime.cc (execInternal): Added 'redirect'\n+\targument to Process creation.\n+\t* java/lang/natVMProcess.cc: New file.\n+\t* java/lang/ProcessBuilder.java: Removed.\n+\t* java/lang/VMProcess.java: New file.\n+\n+2007-03-03  Andrew Haley  <aph@redhat.com>\n+\n+\t* java/lang/natClass.cc (parseAnnotationElement): Correct long\n+\tannotations to read JV_CONSTANT_Long, not JV_CONSTANT_Double.\n+\n+2007-03-02  Andrew Haley  <aph@redhat.com>\n+\n+\t* sun/reflect/annotation/AnnotationInvocationHandler.java:\n+\tGenerify in a few places.\n+\t(equals): Rewrite to use invoke on local proxy.\n+\t(deepToString): Remove most of it.\n+\t(toString): Make nonstatic.\n+\t(arrayClone): Delete.\n+\t(coerce): New method.\n+\t(invoke): Rewrite to handle gcj's structures correctly.\n+\t* java/lang/natClass.cc (getDeclaredAnnotations): Fix test for\n+\tnull loader.\n+\t* sources.am: Regenerate.\n+\t* Makefile.am: Likewise.\t\n+\n+2007-03-02  Andrew Haley  <aph@redhat.com>\n+\n+\t* sun/reflect/annotation/AnnotationInvocationHandler.java:\n+\tWhitespace only changes.\n+\n+2007-03-02  Andrew Haley  <aph@redhat.com>\n+\n+\t* sun/reflect/annotation/AnnotationInvocationHandler.java: Moved\n+\tfrom Classpath to libgcj local.\n+\n+2007-03-01  Brooks Moses  <brooks.moses@codesourcery.com>\n+\n+\t* Makefile.am: Add dummy install-pdf target.\n+\t* Makefile.in: Regenerate\n+\t* include/Makefile.in: Regenerate\n+\t* testsuite/Makefile.in: Regenerate\n+\t* gcj/Makefile.in: Regenerate\n+\n+2007-02-23  Gary Benson  <gbenson@redhat.com>\n+\n+\t* gnu/gcj/tools/gcj_dbtool/Main.java: Updated copyright year.\n+\n+2007-02-23  Gary Benson  <gbenson@redhat.com>\n+\n+\t* java/lang/VMCompiler.java\n+\t(compileClass): Don't lose zeros from within the digest.\n+\n+2007-02-22  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR libgcj/17002\n+\tPR classpath/28550\n+\t* java/util/VMTimeZone.java (getDefaultTimeZoneId): To read\n+\t/etc/localtime, use ZoneInfo.readTZFile instead of\n+\tVMTimeZone.readtzFile.  Get better timezone name for /etc/localtime,\n+\teither if it is a symlink or through /etc/sysconfig/clock.\n+\t(readSysconfigClockFile): New static method.\n+\t(readtzFile): Removed.\n+\t* java/lang/System.java: Add gnu.java.util.zoneinfo.dir to comments.\n+\t* posix.cc (_Jv_platform_initProperties): Set\n+\tgnu.java.util.zoneinfo.dir.\n+\t* sources.am (gnu_java_util_source_files): Add\n+\tclasspath/gnu/java/util/ZoneInfo.java.\n+\t* Makefile.in: Regenerated.\n+\t* java/util/VMTimeZone.h: Regenerated.\n+\t* java/util/TimeZone.h: Regenerated.\n+\t* gnu/java/util/ZoneInfo.h: Generated.\n+\n+2007-02-22  Mohan Embar  <gnustuff@thisiscool.com>\n+\n+\t* include/win32-threads.h: Added #undef OUT.\n+\n+2007-02-21  Kyle Galloway  <kgallowa@redhat.com>\n+\n+\t* jvmti.cc (_Jv_JVMTI_GetArgumentsSize): New function.\n+\t* testsuite/libjava.jvmti/interp/getargssize.java: New test.\n+\t* testsuite/libjava.jvmti/interp/getargssize.h: Ditto.\n+\t* testsuite/libjava.jvmti/interp/getargssize.jar: Ditto.\n+\t* testsuite/libjava.jvmti/interp/getargssize.out: Ditto.\n+\t* testsuite/libjava.jvmti/interp/natgetargssize.cc: Ditto.\n+\n+2007-02-21  Gary Benson  <gbenson@redhat.com>\n+\n+\t* java/util/GregorianCalendar.java: Removed.\n+\t* sources.am, Makefile.in: Rebuilt.\n+\n+2007-02-20  Keith Seitz  <keiths@redhat.com>\n+\n+\t* gnu/classpath/jdwp/natVMVirtualMachine.cc\n+\t(jdwpClassPrepareCB): Move class status stuff to ...\n+\t(getClassStatus): ... here.\n+\n+2007-02-20  Gary Benson  <gbenson@redhat.com>\n+\n+\t* gnu/awt/xlib/XEventLoop.h: Regenerated.\n+\t* gnu/java/awt/peer/gtk/GThreadMutex.h: Likewise.\n+\t* gnu/java/rmi/server/ConnectionRunnerPool$ConnectionRunner.h:\n+\tLikewise.\n+\t* gnu/java/rmi/server/UnicastConnectionManager.h: Likewise.\n+\t* java/lang/SecurityManager.h: Likewise.\n+\t* java/lang/Thread.h: Likewise.\n+\t* java/security/VMSecureRandom$Spinner.h: Likewise.\n+\t* java/util/concurrent/atomic/AtomicBoolean.h: Likewise.\n+\t* java/util/concurrent/atomic/AtomicInteger.h: Likewise.\n+\t* java/util/concurrent/atomic/AtomicLong.h: Likewise.\n+\t* java/util/concurrent/atomic/AtomicReference.h: Likewise.\n+\t* java/util/concurrent/ConcurrentHashMap$HashEntry.h: Likewise.\n+\t* java/util/concurrent/ConcurrentHashMap$Segment.h: Likewise.\n+\t* java/util/concurrent/ConcurrentLinkedQueue.h: Likewise.\n+\t* java/util/concurrent/ConcurrentLinkedQueue$Node.h: Likewise.\n+\t* java/util/concurrent/ConcurrentSkipListMap.h: Likewise.\n+\t* java/util/concurrent/ConcurrentSkipListMap$Index.h: Likewise.\n+\t* java/util/concurrent/ConcurrentSkipListMap$Node.h: Likewise.\n+\t* java/util/concurrent/Exchanger.h: Likewise.\n+\t* java/util/concurrent/Exchanger$Node.h: Likewise.\n+\t* java/util/concurrent/FutureTask$Sync.h: Likewise.\n+\t* java/util/concurrent/LinkedBlockingQueue$Node.h: Likewise.\n+\t* java/util/concurrent/locks/AbstractQueuedLongSynchronizer.h:\n+\tLikewise.\n+\t* java/util/concurrent/locks/AbstractQueuedLongSynchronizer$Node.h: \n+\tLikewise.\n+\t* java/util/concurrent/locks/AbstractQueuedSynchronizer.h: Likewise.\n+\t* java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.h:\n+\tLikewise.\n+\t* java/util/concurrent/ScheduledThreadPoolExecutor.h: Likewise.\n+\t* java/util/concurrent/SynchronousQueue.h: Likewise.\n+\t* java/util/concurrent/SynchronousQueue$TransferQueue.h: Likewise.\n+\t* java/util/concurrent/SynchronousQueue$TransferQueue$QNode.h:\n+\tLikewise.\n+\t* java/util/concurrent/SynchronousQueue$TransferStack.h: Likewise.\n+\t* java/util/concurrent/SynchronousQueue$TransferStack$SNode.h:\n+\tLikewise.\n+\t* java/util/concurrent/ThreadPoolExecutor.h: Likewise.\n+\t* java/util/concurrent/ThreadPoolExecutor$Worker.h: Likewise.\n+\t* java/util/logging/ErrorManager.h: Likewise.\n+\t* javax/swing/plaf/basic/BasicSpinnerUI$2.h: Likewise.\n+\t* javax/swing/plaf/basic/BasicSpinnerUI$4.h: Likewise.\n+\n+2007-02-16  Keith Seitz  <keiths@redhat.com>\n+\n+\t* gnu/classpath/jdwp/natVMVirtualMachine.cc\n+\t(get_line_table): New function.\n+\t(handle_single_step): New function.\n+\t(jdwpSingleStepCB): New function.\n+\t(jdwpVMInitCB): Define a JVMTI single step\n+\tcallback, but don't enable it until needed.\n+\n+2007-02-16  David Daney  <ddaney@avtrex.com>\n+\n+\t* java/lang/Thread.java (Thread(ThreadGroup, Runnable, String)): Pass\n+\tnew parameter constructor.\n+\t(Thread(ThreadGroup, Runnable, String, long)): Same.\n+\t(Thread(String, boolean)): New constructor.\n+\t(Thread(Thread, ThreadGroup, Runnable, String): Add parameter\n+\tnoInheritableThreadLocal, don't call\n+\tInheritableThreadLocal.newChildThread if set.\n+\t* java/lang/PosixProcess.java(ProcessManager()): Set\n+\tnoInheritableThreadLocal in super.\n+\t* java/lang/natThread.cc (_Jv_AttachCurrentThread): Pass new\n+\tparameter to Thread constructor.\n+\t(_Jv_AttachCurrentThreadAsDaemon): Same.\n+\t* java/lang/Thread.h: Regenerate.\n+\t* classpath/lib/java/lang/Thread.class: Same.\n+\t* classpath/lib/java/lang/PosixProcess$EOFInputStream.class: Same.\n+\t* classpath/lib/java/lang/PosixProcess.class: Same.\n+\t* classpath/lib/java/lang/Thread$State.class: Same.\n+\t* classpath/lib/java/lang/PosixProcess$ProcessManager.class: Same.\n+\n+2007-02-16  Kyle Galloway  <kgallowa@redhat.com>\n+\n+\t* interpret.cc: Add extra DEBUG_LOCALS_INSN calls for multi-slot\n+\tvariables to maintain type info.\n+\t* interpret-run.cc: Add local variable info to frame in the debug\n+\tinterpreter.\n+\t* jvmti.cc (getLocalFrame): New method.\n+\t(_Jv_JVMTI_GetLocalObject): New method.\n+\t(_Jv_JVMTI_GetLocallInt): New method.\n+\t(_Jv_JVMTI_GetLocalFloat): New method.\n+\t(_Jv_JVMTI_GetLocalLong): New method.\n+\t(_Jv_JVMTI_GetLocalDouble): New method.\n+\t(_Jv_JVMTI_SetLocalObject): New method.\n+\t(_Jv_JVMTI_SetLocalInt): New method.\n+\t(_Jv_JVMTI_SetLocalFloat): New method.\n+\t(_Jv_JVMTI_SetLocalLong): New method.\n+\t(_Jv_JVMTI_SetLocalDouble): New method.\n+\n+2007-02-16  Gary Benson  <gbenson@redhat.com>\n+\n+\t* gnu/gcj/tools/gcj_dbtool/Main.java\n+\t(bytesToString): Don't lose zeros from within the digest.\n+\n+2007-02-15  Andrew Haley  <aph@redhat.com>\n+\n+\t* Makefile.am (nat_source_files): Remove\n+\tjava/lang/management/natVMManagementFactory.cc.\n+\t* java/lang/Thread.java (getStackTrace): Use reflection to call\n+\tthe ManagementFactory.\n+\t* java/lang/management/VMManagementFactory.java: Remove native\n+\tmethods.\n+\t* java/lang/management/natVMManagementFactory.cc: Deleted.\n+\t* sources.am: Regnerate.\n+\t* scripts/makemake.tcl: Add new \"bcheaders\" type.\n+\tMove java/lang/management and gnu/classpath/management to \"bc\".\n+\tMove gnu/java/lang/management to \"bcheaders\".\n+\t\n+2007-02-15  Kyle Galloway  <kgallowa@redhat.com>\n+\t\n+\t* interpret.cc (_Jv_InterpMethod::check_handler): New method.\n+\t* interpret-run.cc: Change the catch section to report exception\n+\tevents and to use the new check_handler method.\n+\t* include/java-interp.h (_Jv_InterpMethod): Add check_handler.\n+\t* gnu/gcj/jvmti/ExceptionEvent.java: New file.\n+\t* gnu/gcj/jvmti/ExceptionEvent.h: New file.\n+\t* gnu/gcj/jvmti/natExceptionEvent.cc: New file.\n+\t* libjava/classpath/lib/gnu/gcj/jvmti/ExceptionEvent.class: New\n+\tfile.\n+\t* sources.am: Added ExceptionEvent.java.\n+\t* Makefile.am: Added natExceptionEvent.cc\n+\t* Makefile.in: Regenerated.\n+\t* include/Makefile.in: Regenerated.\n+\t* gcj/Makefile.in: Regenerated.\n+\n+2007-02-15  Johannes Schmidt  <jschmidt@avtrex.com>\n+\tDavid Daney  <ddaney@avtrex.com>\n+\n+\t* configure.ac: Create vm-tools-packages file.  Add \n+\tgnu/gcj/tools/gc_analyze to standard.omit and vm-tools-packages.\n+\tCheck for /proc/self/maps.\n+\t* Makefile.am (bin_PROGRAMS): Added gc-analyze.\n+\t(gc_analyze_SOURCES): New.\n+\t(gc_analyze_LDFLAGS): New.\n+\t(gc_analyze_LINK): New.\n+\t(gc_analyze_LDADD): New.\n+\t(gc_analyze_DEPENDENCIES): New.\n+\t(nat_source_files): Add gnu/gcj/util/natGCInfo.cc.\n+\t* Makefile.in: Regenerated.\n+\t* configure: Regenerated.\n+\t* include/config.h.in: Regenerated.\n+\t* sources.am: Regenerated.\n+\t* scripts/makemake.tcl: Don't include gc-analyze classes in libgcj.\n+\t* gnu/gcj/tools/gc_analyze/SymbolLookup.java: New.\n+\t* gnu/gcj/tools/gc_analyze/ObjectMap.java: New.\n+\t* gnu/gcj/tools/gc_analyze/MemoryMap.java: New.\n+\t* gnu/gcj/tools/gc_analyze/SymbolTable.java: New.\n+\t* gnu/gcj/tools/gc_analyze/BlockMap.java: New.\n+\t* gnu/gcj/tools/gc_analyze/BytePtr.java: New.\n+\t* gnu/gcj/tools/gc_analyze/ItemList.java: New.\n+\t* gnu/gcj/tools/gc_analyze/ToolPrefix.java: New.\n+\t* gnu/gcj/tools/gc_analyze/MemoryAnalyze.java: New.\n+\t* gnu/gcj/util/GCInfo.java: New.\n+\t* gnu/gcj/util/GCInfo.h: New.\n+\t* gnu/gcj/util/natGCInfo.cc: New.\n+\t* gnu/gcj/util/UtilPermission.java: New.\n+\t* gnu/gcj/util/UtilPermission.h: New.\n+\t* classpath/tools/gnu/gcj/tools/gc_analyze/SymbolTable.class: New.\n+\t* classpath/tools/gnu/gcj/tools/gc_analyze/ObjectMap$ObjectItem.class: New.\n+\t* classpath/tools/gnu/gcj/tools/gc_analyze/MemoryMap$RangeComparator.class: New.\n+\t* classpath/tools/gnu/gcj/tools/gc_analyze/BlockMap$PtrMarks.class: New.\n+\t* classpath/tools/gnu/gcj/tools/gc_analyze/MemoryMap$Range.class: New.\n+\t* classpath/tools/gnu/gcj/tools/gc_analyze/BlockMap.class: New.\n+\t* classpath/tools/gnu/gcj/tools/gc_analyze/BytePtr.class: New.\n+\t* classpath/tools/gnu/gcj/tools/gc_analyze/MemoryAnalyze$SubstringComparator.class: New.\n+\t* classpath/tools/gnu/gcj/tools/gc_analyze/ItemList.class: New.\n+\t* classpath/tools/gnu/gcj/tools/gc_analyze/ToolPrefix.class: New.\n+\t* classpath/tools/gnu/gcj/tools/gc_analyze/MemoryAnalyze.class: New.\n+\t* classpath/tools/gnu/gcj/tools/gc_analyze/MemoryAnalyze$1$Info.class: New.\n+\t* classpath/tools/gnu/gcj/tools/gc_analyze/MemoryAnalyze$1.class: New.\n+\t* classpath/tools/gnu/gcj/tools/gc_analyze/MemoryAnalyze$2.class: New.\n+\t* classpath/tools/gnu/gcj/tools/gc_analyze/MemoryAnalyze$3.class: New.\n+\t* classpath/tools/gnu/gcj/tools/gc_analyze/MemoryAnalyze$4.class: New.\n+\t* classpath/tools/gnu/gcj/tools/gc_analyze/MemoryAnalyze$OptionParser.class: New.\n+\t* classpath/tools/gnu/gcj/tools/gc_analyze/BlockMap$SizeKind.class: New.\n+\t* classpath/tools/gnu/gcj/tools/gc_analyze/SymbolLookup.class: New.\n+\t* classpath/tools/gnu/gcj/tools/gc_analyze/ObjectMap.class: New.\n+\t* classpath/tools/gnu/gcj/tools/gc_analyze/MemoryMap.class: New.\n+\t* classpath/lib/gnu/gcj/util/GCInfo.class: New.\n+\t* classpath/lib/gnu/gcj/util/UtilPermission.class: New.\n+\n+2007-02-15  David Daney  <ddaney@avtrex.com>\n+\n+\t* gnu/java/net/PlainSocketImpl.h: Regenerate.\n+\t* gnu/classpath/jdwp/VMVirtualMachine.h: Same.\n+\t* gnu/classpath/jdwp/VMFrame.h: Same.\n+\t* java/net/Socket.h: Same.\n+\t* java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.h: Same.\n+\n+2007-02-15  Kyle Galloway  <kgallowa@redhat.com>\n+\n+\t* defineclass.cc (_Jv_ClassReader::read_one_code_attribute):\n+\tAdded LocalVariableTable attribute handling.\n+\t(_Jv_ClassReader::pool_Utf8_to_char_arr): New method.\n+\t* jvmti.cc (_Jv_JVMTI_GetLocalVariableTable): New method.\n+\t* include/java-interp.h: Added local_var_table and \n+\tlocal_var_table_len fields to _Jv_InterpMethod.\n+\t(_Jv_InterpMethod::get_local_var_table): New method.\n+\t* testsuite/libjava.jvmti/interp/getlocalvartable.java: New test.\n+\t* testsuite/libjava.jvmti/interp/getlocalvartable.jar: New test.\n+\t* testsuite/libjava.jvmti/interp/getlocalvartable.out: Output\n+\tfor new test.\n+\t* testsuite/libjava.jvmti/interp/getlocalvartable.h: New test.\n+\t* testsuite/libjava.jvmti/interp/natgetlocalvartable.cc: New test.\n+\n+2007-02-15  Kyle Galloway  <kgallowa@redhat.com>\n+\n+\t* gnu/classpath/jdwp/natVMVirtualMachine (getFrames): Implement.\n+\n+2007-02-13  Keith Seitz  <keiths@redhat.com>\n+\n+\t* gnu/classpath/jdwp/natVMVirtualMachine.cc\n+\t(jdwpBreakpointCB): New function.\n+\t(jdwpVMInitCB): Define and enable the breakpoint\n+\tcallback.\n+\n+2007-02-13  Andrew Haley  <aph@redhat.com>\n+\n+\t* testsuite/libjava.lang/Divide_2.out\n+\t* testsuite/libjava.lang/Divide_2.java: New test.\n+\n+2007-02-12  Keith Seitz  <keiths@redhat.com>\n+\n+\t* jvmti.cc (_Jv_JVMTI_GetStackTrace): Remove cast\n+\tfrom jthread to Thread *; it is no longer needed.\n+\t(_Jv_JVMTI_GetFrameCount): Likewise.\n+\tFix small formatting typo.\n+\n+2007-02-12  Tom Tromey  <tromey@redhat.com>\n+\n+\t* sources.am, Makefile.in: Rebuilt.\n+\t* java/lang/Socket.java: Removed override.\n+\t* java/lang/DatagramSocket.java: Removed override.\n+\t* gnu/java/net/PlainSocketImpl.java (localSocketAddress): New\n+\tfield.\n+\t(getLocalAddress): New method.\n+\t* gnu/java/net/PlainDatagramSocketImpl.java\n+\t(PlainDatagramSocketImpl): Throws IOException.\n+\t* gnu/java/net/natPlainSocketImplPosix.cc (write): Remove\n+\t'sizeof'.\n+\t(read): Likewise.\n+\n+2007-02-09  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* java/util/VMTimeZone.java: Rewrite to handle both the old\n+\t'TZif\\0' format and the new one.\n+\t\n+2007-02-10  Andrew Haley  <aph@redhat.com>\n+\n+\tPR java/30742\n+\t* gnu/classpath/natVMStackWalker.cc (GET_CALLING_CLASS): New.\n+\t(getCallingClass): Call GET_CALLING_CLASS.\n+\t(getCallingClassLoader): Likewise.\n+\n+2007-02-10  Mohan Embar  <gnustuff@thisiscool.com>\n+\n+\t* configure: Rebuilt.\n+\t* configure.ac (GCJH): Reverted second part of patch of 2006-12-20.\n+\n+2007-02-10  Mohan Embar  <gnustuff@thisiscool.com>\n+\n+\t* Makefile.in: Rebuilt.\n+\t* Makefile.am (BUILD_ECJ1): Unify the command for renaming ecjx to\n+\tthe host's ecj1 executable.\n+\n+2007-02-09  Richard Henderson  <rth@redhat.com>\n+\n+\t* sysdep/alpha/locks.h (read_barrier): New.\n+\n+2007-02-09  Keith Seitz  <keiths@redhat.com>\n+\n+\t* gnu/classpath/jdwp/VMVirtualMachine.java\n+\t(_stepping_threads): New member.\n+\t* classpath/lib/gnu/classpath/jdwp/VMVirtualMachine.class:\n+\tRegenerated.\n+\t* gnu/classpath/jdwp/VMVirtualMachine.h:\n+\tRegenerated.\n+\t* gnu/claspath/jdwp/natVMVirtualMachine.cc\n+\t(get_request_step_filter): New function.\n+\t(DISABLE_EVENT): New macro.\n+\t(initialize): Initialize _stepping_threads.\n+\t(registerEvent): Implement EVENT_SINGLE_STEP.\n+\t(unregisterEvent): Likewise.\n+\n+2007-02-08  Keith Seitz  <keiths@redhat.com>\n+\n+\t* sources.am: Regenerate.\n+\t* Makefile.in: Regenerate.\n+\t* testsuite/Makefile.in: Regenerate.\n+\t* gcj/Makefile.in: Regenerate.\n+\t* include/Makefile.in: Regenerate.\n+\n+\t* classpath/lib/javax/management/MBeanServerFactory.class:\n+\tRegenerate.\n+\n+2007-02-08  Kyle Galloway  <kgallowa@redhat.com>\n+\n+\t* classpath/gnu/classpath/jdwp/processor/\n+\tStackFrameCommandSet.java (executeGetValues): Pass jlong instead\n+\tof ByteBuffer.\n+\t(executeSetValues): Ditto.\n+\t(executeThisObject): Ditto.\n+\t* classpath/gnu/classpath/jdwp/processor/\n+\tStackFrameCommandSet.class: Rebuilt.\n+\t* classpath/lib/gnu/classpath/jdwp/VMVirtualMachine.class:\n+\tRebuilt.\n+\t* classpath/lib/gnu/classpath/jdwp/VMFrame.class: Rebuilt.\n+\t* classpath/lib/gnu/classpath/jdwp/exception/\n+\tInvalidFrameException.java: New file.\n+\t* gnu/classpath/jdwp/VMFrame.java: Added field for thread of\n+\tframe.\n+\t(Constructor): New method.\n+\t* gnu/classpath/jdwp/VMFrame.h: Regenerated.\n+\t* gnu/classpath/jdwp/VMVirtualMachine.java\n+\t(getFrame): Changed ByteBuffer to jlong.\n+\t* gnu/classpath/jdwp/natVMVirtualMachine.cc\n+\t(getFrame): Implement.\n+\t* gnu/classpath/jdwp/VMVirtualMachine.h: Regenerated.\n+\n+2007-02-08  Kyle Galloway  <kgallowa@redhat.com>\n+\n+\t* include/java-interp.h (_Jv_InterpFrame): obj_ptr field added\n+\tto hold \"this\" pointer for frame.\n+\t(_Jv_InterpFrame::get_this_ptr): New method.\n+\t* interpret-run.cc: Copy the \"this\" pointer into obj_ptr.\n+\n+2007-02-07  Keith Seitz  <keiths@redhat.com>\n+\n+\t* include/java-interp.h (_Jv_Frame::depth):\n+\tNew function.\n+\t* jvmti.cc (_Jv_JVMTI_GetFrameCount): Use _Jv_Frame::depth.\n+\n+2007-02-07  Kyle Galloway  <kgallowa@redhat.com>\n+\n+\t* jvmti.cc (CHECK_FOR_NATIVE_METHOD): New macro.\n+\t(_Jv_JVMTI_GetMaxLocals): New method.\n+\t* include/java-interp.h\n+\t(_Jv_InterpMethod::get_max_locals): New method.\n+\n+2007-02-01 Marco Trudel <mtrudel@gmx.ch>\n+\n+\t* jni.cc (_Jv_JNI_DeleteWeakGlobalRef): Check for NULL objects.\n+\n+2007-02-07  Tom Tromey  <tromey@redhat.com>\n+\n+\t* testsuite/libjava.jni/init.c: New file.\n+\t* testsuite/libjava.jni/init.java: New file.\n+\t* testsuite/libjava.jni/init.out: New file.\n+\t* testsuite/libjava.jni/init.jar: New file.\n+\t* testsuite/libjava.jni/init.h: New file.\n+\t* testsuite/libjava.jni/init$NativeClass.h: New file.\n+\n+2007-02-07  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR libgomp/28468\n+\t* configure: Regenerate.\n+\n+2007-02-06  Andrew Haley  <aph@redhat.com>\n+\n+\t* scripts/makemake.tcl (emit_bc_rule): Set the source filename.\n+\t* sources.am: Rebuild.\n+\n+2007-02-05  Keith Seitz  <keiths@redhat.com>\n+\n+\t* jvmti.cc (_envListLock): Change type to\n+\tReentrantReadWriteLock.\n+\t(_Jv_JVMTI_DisposeEnvironment): Switch to read/write\n+\tlock.\n+\t(check_enabled_event): Likewise.\n+\t(_Jv_GetJVMTIEnv): Likewise.\n+\t(_Jv_JVMTI_Init): Likewise.\n+\t(_Jv_JVMTI_PostEvent): Likewise. \n+\n+2007-02-05  Keith Seitz  <keiths@redhat.com>\n+\n+\t* gnu/classpath/jdwp/natVMVirtualMachine.cc\n+\t(registerEvent): Implement EVENT_BREAKPOINT.\n+\t(unregisterEvent): Likewise.\n+\t(get_request_location): New function.\n+\n+2007-02-05  Matthias Klose  <doko@debian.org>\n+\n+\ttestsuite/Makefile.am (compile-tests): Fix typo.\n+\ttestsuite/Makefile.in: Regenerate.\n+\n+2007-02-02  Kyle Galloway  <kgallowa@redhat.com>\n+\n+\t* gnu/classpath/jdwp/natVMVirtualMachine.cc (getFrameCount):\n+\tImplment.\n+\n+2007-02-02  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* configure.ac (libjava_cv_anon_version_script): New test.\n+\t(ANONVERSCRIPT): New AM_CONDITIONAL.\n+\t* configure: Rebuilt.\n+\t* Makefile.am (extra_ldflags_libjava): Link with -Wl,--version-script\n+\tif ANONVERSCRIPT.\n+\t* Makefile.in: Rebuilt.\n+\t(libgcj_la_DEPENDENCIES): Depend on libgcj.ver.\n+\t* libgcj.ver: New file.\n+\n+2007-02-01  David Daney  <ddaney@avtrex.com>\n+\n+\t* scripts/makemake.tcl: Replace gnu/xml build with build of all\n+\tits subpackages.\n+\t* sources.am: Regenerate.\n+\t* Makefile.in: Regenerate.\n+\n+2007-02-01  Tom Tromey  <tromey@redhat.com>\n+\n+\t* java/lang/ClassLoader.java (getResources): No longer final.\n+\n+2007-02-01  Tom Tromey  <tromey@redhat.com>\n+\n+\t* java/util/logging/LogManager.java (loggers): Genericized.\n+\t(addLogger): Merged.\n+\t(findAncestor): Likewise.\n+\t(getLogger): Likewise.\n+\t(getLoggerNames): Genericized.\n+\t(reset): Merged.\n+\t(getLevelProperty): Likewise.\n+\t* java/lang/reflect/Method.java (getDeclaringClass): Genericized.\n+\t* java/lang/reflect/Constructor.java (getParameterTypes):\n+\tGenericized.\n+\t(getExceptionTypes): Likewise.\n+\t(newInstance): Likewise.\n+\t* java/lang/reflect/Array.java (newInstance): Genericized.\n+\t* java/lang/Object.java (getClass): Genericized.\n+\t* java/nio/charset/spi/CharsetProvider.java (charsets):\n+\tGenericized.\n+\t* java/text/Collator.java: Implement Comparable<Object>.\n+\n+2007-02-01  Tom Tromey  <tromey@redhat.com>\n+\n+\t* java/util/Calendar.java: Implement Comparable<Calendar>.  Update\n+\tcomments.\n+\t(clear): Call complete.\n+\t(setTimeZone): Call computeTime, computeFields.\n+\t(compareTo): New method.\n+\t* java/nio/charset/Charset.java: Implement Comparable<Charset>.\n+\t(availableCharsets): Genericized.\n+\t(aliases): Likewise.\n+\t(compareTo): Changed argument type.\n+\t* java/lang/ClassLoader.java (loadClass): Genericized.\n+\t(findClass): Likewise.\n+\t(defineClass): Likewise.\n+\t(resolveClass): Likewise.\n+\t(findSystemClass): Likewise.\n+\t(setSigners): Likewise.\n+\t(findLoadedClass): Likewise.\n+\t(getResources): Likewise.\n+\t(findResources): Likewise.\n+\t(getSystemResources): Likewise.\n+\t(checkInitialized): New method.\n+\t* java/lang/Class.java (getCanonicalName): New method.\n+\n+2007-01-31  Keith Seitz  <keiths@redhat.com>\n+\n+\t* include/jvmti-int.h (JVMTI): Declare member \"enabled\".\n+\t* jvmti.cc (JVMTI): Add member \"enabled\".\n+\t(_Jv_GetJVMTIEnv): Mark JVMTI enabled.\n+\t* interpret.cc (_Jv_InterpMethod::ncode): Use JVMTI::enabled\n+\tinstead of gnu::classpath::jdwp::Jdwp::isDebugging.\n+\t(_Jv_CompileMethod): If JVMTI is enabled, use run_debug\n+\tinstead of run to compile the method.\n+\n+\t* interpret-run.cc [DEBUG] (NEXT_INSN): Add JVMTI single step\n+\tnotification.\n+\n+2007-01-31  Andreas Tobler  <a.tobler@schweiz.org>\n+\n+\t* testsuite/libjava.jvmti/jvmti-interp.exp (gij_jvmti_test_one): Add\n+\t-shared-libgcc to the cxxflaglist for Darwin.\n+\n+2007-01-31  Tom Tromey  <tromey@redhat.com>\n+\n+\t* scripts.am, Makefile.in: Rebuilt.\n+\t* scripts/makemake.tcl (gnu/javax/swing/text/html/parser): Build\n+\tas 'ordinary'.\n+\t(emit_ordinary_rule): New proc.\n+\n+2007-01-31  Keith Seitz  <keiths@redhat.com>\n+\n+\t* testsuite/libjava.jvmti/getmethodname.h: New file.\n+\t* testsuite/libjava.jvmti/getmethodname.jar: New file.\n+\n+2007-01-31  Andrew Haley  <aph@redhat.com>\n+\n+\t* prims.cc (_Jv_Abort): fflush (stderr).\n+\t* java/lang/natClassLoader.cc (_Jv_CheckABIVersion): Abort.\n+\n+2007-01-31  Tom Tromey  <tromey@redhat.com>\n+\n+\t* configure, Makefile.in: Rebuilt.\n+\t* configure.ac (JAR): Check for -@ feature.\n+\t* Makefile.am (libgcj-$(gcc_version).jar): Use find -prune.\n+\n+2007-01-31  Tom Tromey  <tromey@redhat.com>\n+\n+\tPR libgcj/30606:\n+\t* configure, include/config.h.in: Rebuilt.\n+\t* configure.ac: Check for magic_t in magic.h.\n+\t* java/net/natVMURLConnection.cc: Use HAVE_MAGIC_T.\n+\n+2007-01-30  Tom Tromey  <tromey@redhat.com>\n+\n+\t* Makefile.in: Rebuilt.\n+\t* Makefile.am (libgcj-$(gcc_version).jar): Rewrote.\n+\n+2007-01-30  Andreas Tobler  <a.tobler@schweiz.org>\n+\n+\t* testsuite/libjava.jvmti/natevents.cc (FieldModificationCB): Use a\n+\tcast to print it right.\n+\n+2007-01-29  Kaloian Doganov  <kaloian@doganov.org>\n+\n+\tPR libgcj/30600:\n+\t* gnu/gcj/convert/BytesToCharsetAdaptor.java (read): Fix call to\n+\t'limit'.\n+\n+2007-01-29  Kyle Galloway  <kgallowa@redhat.com>\n+\n+\t* include/java-interp.h:  Added _Jv_Frame class and its two\n+\tsubclasses _Jv_InterpFrame and _Jv_NativeFrame.  Also moved\n+\t_Jv_FrameType from java-stack.h.\n+\t* include/java-stack.h: Removed _Jv_FrameType.\n+\t* java/lang/Thread.java: Added frame member to hold new\n+\tcomposite frame stack.\n+\t* java/lang/Thread.h: Regenerated.\n+\t* java/lang/Thread.class: Rebuilt.\n+\t* jni.cc (_Jv_JNIMethod::call): Push a frame onto the stack when\n+\tcalling a JNI method.\n+\t* jvmti.cc (_Jv_JVMTI_GetStackTrace): New Method.\n+\t(_Jv_JVMTI_GetFrameCount): New method.\n+\t* stacktrace.cc (UnwindTraceFn): Modified to use new _Jv_Frame\n+\tclasses.\n+\t* testsuite/libjava.jvmti/interp/getstacktrace.jar: New test.\n+\t* testsuite/libjava.jvmti/interp/natgetstacktrace.cc: New test.\n+\t* testsuite/libjava.jvmti/interp/getstacktrace.h: New test.\n+\t* testsuite/libjava.jvmti/interp/getstacktrace.jar: New test.\n+\t* testsuite/libjava.jvmti/interp/getstacktrace.out: Output file\n+\tfor test. \n+\n+2007-01-29  Tom Tromey  <tromey@redhat.com>\n+\n+\t* interpret.cc (run_debug): Remove comment.\n+\t(STOREA): Reformat.\n+\t(STOREI): Likewise.\n+\t(STOREF): Likewise.\n+\t(STOREL): Likewise.\n+\t(STORED): Likewise.\n+\t(POKEI): Likewise.\n+\t(run_normal_debug): Likewise.\n+\t(run_synch_object_debug): Likewise.\n+\t(run_class_debug): Likewise.\n+\t(run_synch_class_debug): Likewise.\n+\t(get1s): Likewise.\n+\t(get1u): Likewise.\n+\t(get2u): Likewise.\n+\t(get4): Likewise.\n+\t(NULLARRAYCHECK): Likewise.\n+\t(ARRAYBOUNDSCHECK): Likewise.\n+\t* interpret-run.cc (insn_target) <breakpoint>: Tidy.\n+\n+2007-01-29  Tom Tromey  <tromey@redhat.com>\n+\n+\t* configure, Makefile.in: Rebuilt.\n+\t* Makefile.am (bin_SCRIPTS): Never install scripts/jar.\n+\t* configure.ac (BASH_JAR): Removed conditional.\n+\t(JAR): Prefer the jar found by AC_CHECK_PROGS.\n+\n+2007-01-29  Tom Tromey  <tromey@redhat.com>\n+\n+\t* Makefile.in: Rebuilt.\n+\t* Makefile.am (interpret.lo): New target.  Add -fwrap to\n+\tAM_CXXFLAGS.\n+\n+2007-01-29  Keith Seitz  <keiths@redhat.com>\n+\n+\t* include/jvmti_md.h (_CLASSPATH_VM_JVMTI_TYPES_DEFINED):\n+\tDefine.\n+\t[__GCJ_JNI_IMPL__]: Define our own JVMTI types when building\n+\tgcj. All jvmti object types now are defined to be their\n+\tcorresponding java classes.\n+\t* jvmti.cc (_Jv_JVMTI_SuspendThread): Remove casting from\n+\tjthread to Thread*.\n+\t(_Jv_JVMTI_ResumeThread): Likewise.\n+\t(_Jv_JVMTI_InterruptThread): Likewise.\n+\t(_Jv_JVMTI_SetEventNotificationMode): Likewise.\n+\t* gnu/classpath/jdwp/natVMVirtualMachine.cc\n+\t(jdwpClassPrepareCB): Likewise.\n+\t(jdwpThreadEndCB): Likewise.\n+\t(jdwpThreadStartCB): Likewise.\n+\t(jdwpVMInitCB): Likewise.\n+ \n+2007-01-28  Michele Sandri  <gpointorama@gmail.com>\n+\n+\t* gnu/java/nio/channels/natFileChannelWin32.cc\n+\t(lock): Implemented.\n+\t(unlock): Implemented.\n+\n+2007-01-27  Andreas Tobler  <a.tobler@schweiz.org>\n+\n+\tPR libgcj/30513\n+\t* configure.host: Add forgottten sysdep_dir to sparc. Add a flag to\n+\tlibgcj_flags to undefine 'sun' at compile time.\n+\t* sysdep/sparc/locks.h (read_barrier): New functions for 32 and 64 bit\n+\tSparc.\n+\t(write_barrier): Likewise.\n+\n+2007-01-27  Keith Seitz  <keiths@redhat.com>\n+\n+\t* gnu/classpath/jdwp/natVMVirtualMachine.cc\n+\t(getAllClassMethods): Move error handling to ...\n+\t(throw_jvmti_error): ... here.\n+\t(jdwpClassPrepareCB): New function.\n+\t(jdwpThreadEndCB): New function.\n+\t(jdwpThreadStartCB): New function.\n+\t(jdwpVMDeathCB): New function.\n+\t(jdwpVMInitCB): Define and enable callbacks for\n+\tClassPrepare, ThreadEnd, ThreadStart, and VMDeath.\n+\n+2007-01-27  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* Makefile.am (generic_header_files): Add $(inner_nat_headers).\n+\t* testsuite/Makefile.am (check-dejaGNU): Depend on compile-tests.\n+\t(MYGCJH): New variable.\n+\t(compile-tests): New goal.\n+\t* Makefile.in: Rebuilt.\n+\t* testsuite/Makefile.in: Rebuilt.\n+\n+2007-01-26  Andrew Haley  <aph@redhat.com>\n+\n+\t* java/lang/natClass.cc (initializeClass): Re-throw\n+\tSecurityExceptions.\n+\t* java/lang/natVMClassLoader.cc (loadClass): checkPackageAccess.\n+\t* java/lang/ClassLoader.java: (loadClass): Likewise.\n+\n+2007-01-26  Tom Tromey  <tromey@redhat.com>\n+\n+\t* Updated headers.\n+\n+2007-01-25  Tom Tromey  <tromey@redhat.com>\n+\n+\tPR libgcj/29594:\n+\t* gnu/gcj/convert/Convert.java (main): Correctly handle missing\n+\tinput or output encodings.  Removed unused local variables.\n+\n+2007-01-25  Keith Seitz  <keiths@redhat.com>\n+\n+\t* include/jvmti-int.h (_Jv_GetJDWP_JVMTIEnv): Declare.\n+\t* gnu/classpath/jdwp/natVMVirtualMachine.cc\n+\t(_Jv_GetJDWP_JVMTIEnv): New function.\n+\t* gnu/classpath/jdwp/natVMMethod.cc (getName): Implement.\n+\t(getSignature): Implement.\n+\t(getModifiers): Implement.\n+\n+2007-01-25  Andrew Haley  <aph@redhat.com>\n+\n+\t* configure, Makefile.in, include/config.h.in: Rebuilt.\n+\t* Makefile.am (libgcj_la_LIBADD): Removed $(LIBMAGIC).\n+\t* configure.ac: Don't check for libmagic.\n+\t* java/net/natVMURLConnection.cc (p_magic_open, p_magic_load,\n+\tp_magic_close, p_magic_buffer): New globals.\n+\t(init): Look up 'magic' functions.\n+\t(guessContentTypeFromBuffer): Updated.\n+\n+2007-01-25  Keith Seitz  <keiths@redhat.com>\n+\n+\t* jvmti.cc (_Jv_JVMTI_GetMethodName): New function.\n+\t(_Jv_JVMTI_Interface): Define GetMethodName.\n+\t* testsuite/libjava.jvmti/getmethodname.java: New file.\n+\t* testsuite/libjava.jvmti/natgetmethodname.cc: New file.\n+\t* testsuite/libjava.jvmti/getmethodname.out: New file. \n+\n+2007-01-24  Kyle Galloway  <kgallowa@redhat.com>\n+\n+\t* libjava/testsuite/libjava.jvmti/jvmti-interp.exp: New file.\n+\t* libjava/testsuite/libjava.jvmti/interp: New folder.\n+\t* libjava/testsuite/lib/libjava.exp (exec_gij): New Method.\n+\n+2007-01-24  Keith Seitz  <keiths@redhat.com>\n+\n+\t* link.cc (_Jv_Linker::wait_for_state): Add JVMTI\n+\tCLASS_PREPARE notification.\n+\n+2007-01-24  Keith Seitz  <keiths@redhat.com>\n+\n+\t* interpret.cc: Include gnu/gcj/jvmti/Breakpoint.h,\n+\tgnu/gcj/jvmti/BreakpointManager.h, jvmti.h, and jvmti-int.h\n+\t* interpret-run.cc: Implement insn_breakpoint.\n+\n+2007-01-24  Keith Seitz  <keiths@redhat.com>\n+\n+\t* prims.cc (_Jv_RunMain): Send JVMTI event notifications\n+\tfor VM_INIT and VM_DEATH instead of the JDWP notifications.\n+\n+2007-01-24  Keith Seitz  <keiths@redhat.com>\n+\n+\t* gnu/classpath/jdwp/natVMVirtualMachine.cc\n+\t(getAllClassMethods): Implement.\n+\n+2007-01-24  Andrew Haley  <aph@redhat.com>\n+\n+\t* gnu/classpath/natVMStackWalker.cc: Call InitClass everywhere.\n+\t(getClassContext) Add a barrier to prevent GetStackWalkerStack()\n+\tfrom being sibcalled.\n+\n+2007-01-24  Andrew Haley  <aph@redhat.com>\n+\n+\t* scripts/makemake.tcl (emit_bc_rule): Set the source filename.\n+\t* sources.am: Rebuild.\n+\n+2007-01-24  Andreas Krebbel  <krebbel1@de.ibm.com>\n+\n+\t* exception.cc (parse_lsda_header, PERSONALITY_FUNCTION): Replaced\n+\t_Unwind_Word with _uleb128_t and _Unwind_SWord with _sleb128_t.\n+\n+2007-01-23  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR libgcj/30550\n+\t* Makefile.am (ecjx_DEPENDENCIES): Add libgcj_bc.la if needed.\n+\t* Makefile.in: Regenerated.\n+\n+2007-01-22  Keith Seitz  <keiths@redhat.com>\n+\n+\t* gnu/classpath/jdwp/natVMVirtualMachine.cc\n+\t(getClassMethod): Implement.\n+\n+2007-01-22  Keith  Seitz  <keiths@redhat.com>\n+\n+\t* java/lang/Class.h (_Jv_GetClassStatus): Declare.\n+\t* java/lang/natClass.cc (_Jv_GetClassStatus): New function.\n+\t* jvmti.cc (_Jv_JVMTI_GetClassStatus): New function.\n+\t(_Jv_JVMTI_Interface): Define GetClassStatus.\n+\n+2007-01-22  Tom Tromey  <tromey@redhat.com>\n+\n+\t* configure: Rebuilt.\n+\t* configure.ac (GCJ): Reverted patch of 2006-12-20.\n+\n+2007-01-22  Tom Tromey  <tromey@redhat.com>\n+\n+\tPR java/29812:\n+\t* testsuite/libjava.jni/pr29812.java: New file.\n+\t* testsuite/libjava.jni/pr29812_injar.java: New file.\n+\t* testsuite/libjava.jni/pr29812_injar.jar: New file.\n+\t* testsuite/libjava.jni/pr29812.out: New file.\n+\t* testsuite/libjava.jni/pr29812_injar.c: New file.\n+\t* testsuite/libjava.jni/pr29812_injar.h: New file.\n+\t* testsuite/libjava.jni/pr29812.jar: New file.\n+\t* testsuite/libjava.jni/pr29812.c: New file.\n+\t* testsuite/libjava.jni/pr29812.h: New file.\n+\t* testsuite/libjava.jni/jni.exp (gcj_jni_get_cxxflags_invocation):\n+\tNew proc.\n+\t(gcj_jni_invocation_test_one): Use it.\n+\t(gcj_jni_pr29812): New proc.\n+\t(gcj_jni_run): Use it.\n+\t* java/lang/natRuntime.cc (_load): Push a new system frame before\n+\tcalling JNI_OnLoad.\n+\t* include/jvm.h (_Jv_JNI_PopSystemFrame): Declare.\n+\t(_Jv_GetJNIEnvNewFrameWithLoader): Likewise.\n+\t* jni.cc (struct _Jv_JNI_LocalFrame) <marker>: Now unsigned char.\n+\t<allocated_p>: Now bool.\n+\t<loader>: New field.\n+\t(_Jv_JNI_EnsureLocalCapacity): Updated.\n+\t(_Jv_JNI_NewLocalRef): Likewise.\n+\t(_Jv_JNI_NewLocalRef): Likewise.\n+\t(_Jv_JNI_PopLocalFrame): Likewise.\n+\t(_Jv_JNI_FindClass): Likewise.\n+\t(_Jv_GetJNIEnvNewFrame): Likewise.\n+\t(_Jv_JNI_AttachCurrentThread): Likewise.\n+\t(_Jv_GetJNIEnvNewFrameWithLoader): New function.\n+\t(_Jv_GetJNIEnvNewFrame): Use it.\n+\t* include/jni_md.h (_CLASSPATH_JNIENV_CONTENTS): Removed 'klass'.\n+\n+2007-01-22  Tom Tromey  <tromey@redhat.com>\n+\n+\t* libtool-version: Bump current to 9.\n+\n+2007-01-22  Andrew Haley  <aph@redhat.com>\n+\n+\t* sysdep/alpha/locks.h (write_barrier): New.\n+\n+2007-01-21  Matthias Klose  <doko@debian.org>\n+\n+\t* Makefile.am (install-exec-hook): Use transformed name.\n+\t* Makefile.in: Regenerate.\n+\n+2007-01-19  Keith Seitz  <keiths@redhat.com>\n+\n+\t* gnu/classpath/jdwp/natVMVirtualMachine.cc: Mark unused parameters\n+\tin methods and reformat.\n+\n+\t* gnu/classpath/jdwp/natVMFrame.cc: Mark unused parameters with\n+\tMAYBE_UNUSED.\n+\n+2007-01-18  Keith Seitz  <keiths@redhat.com>\n+\n+\tFrom Macro Trudel <mtrudel@gmx.ch>:\n+\t* gnu/classpath/jdwp/natVMVirtualMachine.cc (jdwpVMInitCB):\n+\tUse JNICALL.\n+\n+2007-01-18  Marco Trudel  <mtrudel@gmx.ch>\n+\n+\t* jni.cc (_Jv_JNI_FindClass): Initialize class.\n+\t* testsuite/libjava.jni/findclass2.jar: New file.\n+\t* testsuite/libjava.jni/findclass2.h: New file.\n+\t* testsuite/libjava.jni/findclass2.java: New file\n+\t* testsuite/libjava.jni/findclass2.c: New file.\n+\t* testsuite/libjava.jni/findclass2.out: New file.\n+\n+2007-01-18  Tom Tromey  <tromey@redhat.com>\n+\n+\t* configure: Rebuilt.\n+\t* configure.ac: Use multi_basedir instead of libgcj_basedir.\n+\n+2007-01-18  Gary Benson  <gbenson@redhat.com>\n+\n+\t* gnu/java/nio/natVMPipeEcos.cc:\n+\tRenamed from gnu/java/nio/natPipeImplEcos.cc.\n+\t* gnu/java/nio/natVMPipePosix.cc:\n+\tRenamed from gnu/java/nio/natPipeImplPosix.cc.\n+\t* gnu/java/nio/natVMPipeWin32.cc:\n+\tRenamed from gnu/java/nio/natPipeImplWin32.cc.\n+\t* gnu/java/nio/natVMSelectorEcos.cc:\n+\tRenamed from gnu/java/nio/natSelectorImplEcos.cc.\n+\t* gnu/java/nio/natVMSelectorPosix.cc:\n+\tRenamed from gnu/java/nio/natSelectorImplPosix.cc.\n+\t* gnu/java/nio/natVMSelectorWin32.cc:\n+\tRenamed from gnu/java/nio/natSelectorImplWin32.cc.\n+\t* java/io/natVMObjectInputStream.cc:\n+\tRenamed from java/io/natObjectInputStream.cc.\n+\t* java/lang/natVMDouble.cc:\n+\tRenamed from java/lang/natDouble.cc.\n+\t* java/lang/natVMFloat.cc:\n+\tRenamed from java/lang/natFloat.cc.\t\n+\t* Makefile.am, configure.ac: Reflect the above.\n+\t* Makefile.in, configure: Rebuilt.\n+\n+2007-01-17  Andrew Haley  <aph@redhat.com>\n+\n+\t* Makefile.in: Rebuilt.\n+\t* Makefile.am (ecjx_LDFLAGS): Pass -fbootclasspath.\n+\n+2007-01-17  Keith Seitz  <keiths@redhat.com>\n+\n+\t* java/lang/natThread.cc (finish_): Add JVMTI ThreadEnd notification.\n+\t(_Jv_NotifyThreadStart): Add JVMTI ThreadStart notification.\n+\n+2007-01-16  Jack Howarth  <howarth@bromo.med.uc.edu>\n+\n+\t* configure.ac: Use multi.m4 from aclocal rather than custom\n+\tcode.  Use multi_basedir instead libgcj_basedir.  Test for\n+\t/proc/self/exe when not cross-compiling.\n+\t* aclocal.m4: Regenerate.\n+\t* configure: Regenerate.\n+\t* Makefile.in: Regenerate.\n+\n+2007-01-17  Gary Benson  <gbenson@redhat.com>\n+\n+\t* java/nio/natVMDirectByteBufferImpl.cc:\n+\tRenamed from java/nio/natDirectByteBufferImpl.cc.\n+\t* Makefile.am: Reflect the above.\n+\t* Makefile.in: Rebuilt.\n+\t\n+2007-01-17  Marco Trudel  <mtrudel@gmx.ch>\n+\n+\t* jvmti.cc (_Jv_JVMTI_GetAllThreads): Now static.  Use JNICALL.\n+\tFixed indentation.  Removed unused variable.\n+\n+2007-01-16  Tom Tromey  <tromey@redhat.com>\n+\n+\t* java/lang/natThread.cc (finalize_native): Remove cast.\n+\t(_Jv_GetCurrentJNIEnv): Likewise.\n+\t* include/jvm.h (struct natThread) <jni_env>: Declare as\n+\t_Jv_JNIEnv*.\n+\n+2007-01-16  Keith Seitz  <keiths@redhat.com>\n+\n+\t* testsuite/libjava.jvmti/natevents.cc (FieldModificationCB): Use\n+\t%#llx instead of %d for new_value.\n+\t* testsuite/libjava.jvmti/events.out: Update expected output.\n+\t* testsuite/libjava.jvmti/events.jar: Regenerate.\n+\n+2007-01-16  Keith Seitz  <keiths@redhat.com>\n+\n+\t* gnu/classpath/jdwp/natVMVirtualMachine.cc (DEFINE_CALLBACK):\n+\tNew macro.\n+\t(ENABLE_EVENT): New macro.\n+\t(initialize): Define and enable JVMTI VM_INIT callback.\n+\t(jdwpVMInitCB): New function.\n+\n+2007-01-16  Kyle Galloway  <kgallowa@redhat.com>\n+\n+\t* jvmti.cc (_Jv_JVMTI_GetAllThreads): New function.\n+\t* testsuite/libjava.jvmti/getallthreads.java: New test.\n+\t* testsuite/libjava.jvmti/natgetallthreads.cc: Ditto.\n+\t* testsuite/libjava.jvmti/getallthreads.out: Ditto.\n+\t* testsuite/libjava.jvmti/getallthreads.h: Ditto.\n+\t* testsuite/libjava.jvmti/getallthreads.jar: Ditto. \n+\n+2007-01-15  Keith Seitz  <keiths@redhat.com>\n+\n+\t* gnu/classpath/jdwp/natVMVirtualMachine.cc (suspendThread): Use\n+\tjava.lang.StringBuilder instead of java.lang.StringBuffer.\n+\t(resumeThread): Likewise.\n+\n+2007-01-15  Gary Benson  <gbenson@redhat.com>\n+\n+\t* java/nio/MappedByteBuffer.java: Removed.\n+\t* sources.am, Makefile.in: Rebuilt.\n+\n+2007-01-15  Gary Benson  <gbenson@redhat.com>\n+\n+\t* java/net/URLClassLoader.java: Removed.\n+\t* gnu/java/net/loader/Load_gcjlib.java: New file.\n+\t* gnu/gcj/runtime/BootClassLoader.java: Ensure core\n+\tURL handler is present in static executables.\n+\t* sources.am, Makefile.in: Rebuilt.\n+\n+2007-01-14  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* Makefile.am (libgcj_la_LDFLAGS): Add\n+\t$(LIBGCJ_LD_SYMBOLIC_FUNCTIONS).\n+\t(libgcj_tools_la_LDFLAGS): Likewise.\n+\t(libgcj_bc_la_LDFLAGS): Likewise.\n+\t* Makefile.in: Regenerated.\n+\n+\t* configure.ac: Use ACX_PROG_LD_GNU_SYMBOLIC.  Set\n+\tLIBGCJ_LD_SYMBOLIC_FUNCTIONS to $SYMBOLIC_LDFLAGS.  Set\n+\tlibgcj_ld_symbolic to $SYMBOLIC_LDFLAGS if it isn't set.\n+\tSubstitute LIBGCJ_LD_SYMBOLIC_FUNCTIONS.\n+\t* configure: Regenerated.\n+\t* aclocal.m4: Likewise.\n+\t* gcj/Makefile.in: Likewise.\n+\t* include/Makefile.in: Likewise.\n+\t* testsuite/Makefile.in: Likewise.\n+\n+2007-01-12  Kaz Kojima  <kkojima@gcc.gnu.org>\n+\n+\t* sysdep/sh/locks.h (read_barrier): New.\n+\t(write_barrier): Likewise.\n+\n+2007-01-12  Andrew Haley  <aph@redhat.com>\n+\n+\t* include/i386-signal.h: Rewrite to use rt_sigaction.\n+\n+2007-01-11  Andrew Haley  <aph@redhat.com>\n+\n+\t* prims.cc (jdwpOptions) Fix deprecated cast from char[] constant\n+\tto char*.\n+\t* include/x86_64-signal.h (HANDLE_DIVIDE_OVERFLOW): Rewrite to fix\n+\taliasing violation.\n+\n+2007-01-10  Tom Tromey  <tromey@redhat.com>\n+\n+\t* gnu/gcj/xlib/*.h: New files.\n+\t* gnu/awt/xlib/*.h: Likewise.\n+\t* classpath/lib/gnu/gcj/xlib: New class files.\n+\t* classpath/lib/gnu/awt/xlib: Likewise.\n+\n+2007-01-10  Tom Tromey  <tromey@redhat.com>\n+\n+\t* HACKING: Various updates.\n+\n+2007-01-10  Tom Tromey  <tromey@redhat.com>\n+\n+\t* java/lang/natDouble.cc (toString): Added parens.\n+\t* gnu/gcj/io/shs.h (PROTO): Define.\n+\t* link.cc (resolve_pool_entry): Added missing braces.\n+\n+2007-01-10  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR libgcj/30424\n+\t* sysdep/ia64/locks.h (read_barrier): New.\n+\t(write_barrier): New.\n+\n+2007-01-10  Gary Benson  <gbenson@redhat.com>\n+\n+\t* java/net/URL.java: Removed.\n+\t* sources.am, Makefile.in: Rebuilt.\n+\n+2007-01-10  Matthias Klose  <doko@debian.org>\n+\n+\t* Makefile.am (install-exec-hook): Support $(DESTDIR).\n+\t* Makefile.in: Regenerated.\n+\n+2007-01-05  Tom Tromey  <tromey@redhat.com>\n+\n+\t* testsuite/libjava.loader/loader.exp (gcj_loader_run): Find\n+\tdummy.class in srcdir.\n+\n+2007-01-03  Tom Tromey  <tromey@redhat.com>\n+\n+\t* testsuite/libjava.cni/cni.exp (gcj_cni_compile_cxx_to_o): Add -I\n+\tfor srcdir.\n+\n+2007-01-03  Tom Tromey  <tromey@redhat.com>\n+\n+\t* testsuite/*: Added many .jar and .h files.\n+\t* testsuite/libjava.special/special.exp\n+\t(gcj_special_try_compiler): New proc.\n+\t* testsuite/libjava.loader/loader.exp (gcj_loader_run): Don't\n+\tbytecompile source.  Search for .jar files.\n+\t(gcj_loader_test_one): Don't look for MyLoader.java.\n+\t* testsuite/libjava.jvmti/jvmti.exp (gcj_jvmti_test_one): Don't\n+\tbytecompile sources or build headers.\n+\t(gcj_jvmti_run): Look for .jar files.\n+\t* testsuite/libjava.jni/jni.exp (gcj_jni_run): Compile .jar\n+\tfiles.\n+\t(gcj_jni_test_one): Don't bytecompile sources or build headers.\n+\tSet classpath when invoking gij.\n+\t(gcj_jni_invocation_test_one): Likewise.\n+\t* testsuite/libjava.cni/cni.exp (gcj_cni_test_one): Don't build\n+\theaders or bytecompile sources.\n+\t(gcj_cni_run): Use .jar files, not .java files.\n+\t* testsuite/libjava.lang/lang.exp: Compile .jar files.\n+\n+2007-01-02  Tom Tromey  <tromey@redhat.com>\n+\n+\t* configure: Rebuilt.\n+\t* configure.ac: Check for gjar.\n+\n+2007-01-02  Tom Tromey  <tromey@redhat.com>\n+\n+\t* testsuite/libjava.jacks/jacks.exp: Removed.\n+\t* testsuite/libjava.jacks/jacks.xfail: Removed.\n+"}, {"sha": "c42c692cef7496096458d2168e596cbdf37f59c9", "filename": "libjava/Makefile.in", "status": "modified", "additions": 73, "deletions": 27, "changes": 100, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.in?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -167,11 +167,11 @@ libgcj_tools_la_OBJECTS = $(am_libgcj_tools_la_OBJECTS)\n @INTERPRETER_TRUE@\tgnu/classpath/jdwp/util.lo \\\n @INTERPRETER_TRUE@\tgnu/classpath/jdwp/value.lo gnu/gcj/jvmti.lo\n am__DEPENDENCIES_2 = gnu/awt.lo gnu/awt/j2d.lo gnu/classpath.lo \\\n-\tgnu/classpath/debug.lo gnu/gcj.lo gnu/gcj/convert.lo \\\n-\tgnu/gcj/io.lo gnu/gcj/runtime.lo gnu/gcj/util.lo \\\n-\tgnu/java/awt.lo gnu/java/awt/color.lo gnu/java/awt/dnd.lo \\\n-\tgnu/java/awt/font.lo gnu/java/awt/font/autofit.lo \\\n-\tgnu/java/awt/font/opentype.lo \\\n+\tgnu/classpath/debug.lo gnu/classpath/toolkit.lo gnu/gcj.lo \\\n+\tgnu/gcj/convert.lo gnu/gcj/io.lo gnu/gcj/runtime.lo \\\n+\tgnu/gcj/util.lo gnu/java/awt.lo gnu/java/awt/color.lo \\\n+\tgnu/java/awt/dnd.lo gnu/java/awt/font.lo \\\n+\tgnu/java/awt/font/autofit.lo gnu/java/awt/font/opentype.lo \\\n \tgnu/java/awt/font/opentype/truetype.lo gnu/java/awt/image.lo \\\n \tgnu/java/awt/java2d.lo gnu/java/awt/peer.lo \\\n \tgnu/java/awt/peer/headless.lo gnu/java/awt/print.lo \\\n@@ -259,7 +259,8 @@ am__DEPENDENCIES_2 = gnu/awt.lo gnu/awt/j2d.lo gnu/classpath.lo \\\n \tjavax/accessibility.lo javax/activity.lo javax/crypto.lo \\\n \tjavax/crypto/interfaces.lo javax/crypto/spec.lo \\\n \tjavax/management.lo javax/management/loading.lo \\\n-\tjavax/management/openmbean.lo javax/naming.lo \\\n+\tjavax/management/openmbean.lo javax/management/remote.lo \\\n+\tjavax/management/remote/rmi.lo javax/naming.lo \\\n \tjavax/naming/directory.lo javax/naming/event.lo \\\n \tjavax/naming/ldap.lo javax/naming/spi.lo javax/net.lo \\\n \tjavax/net/ssl.lo javax/print.lo javax/print/attribute.lo \\\n@@ -278,7 +279,7 @@ am__DEPENDENCIES_2 = gnu/awt.lo gnu/awt/j2d.lo gnu/classpath.lo \\\n \tjavax/swing/table.lo javax/swing/text.lo \\\n \tjavax/swing/text/html.lo javax/swing/text/html/parser.lo \\\n \tjavax/swing/text/rtf.lo javax/swing/tree.lo \\\n-\tjavax/swing/undo.lo javax/transaction.lo \\\n+\tjavax/swing/undo.lo javax/tools.lo javax/transaction.lo \\\n \tjavax/transaction/xa.lo org/ietf/jgss.lo sun/awt.lo \\\n \tsun/misc.lo sun/reflect.lo sun/reflect/annotation.lo \\\n \tsun/reflect/misc.lo $(am__DEPENDENCIES_1)\n@@ -1352,6 +1353,10 @@ classpath/gnu/classpath/jdwp/value/ValueFactory.java \\\n classpath/gnu/classpath/jdwp/value/VoidValue.java\n \n gnu_classpath_jdwp_value_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(gnu_classpath_jdwp_value_source_files)))\n+gnu_classpath_toolkit_source_files = \\\n+classpath/gnu/classpath/toolkit/DefaultDaemonThreadFactory.java\n+\n+gnu_classpath_toolkit_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(gnu_classpath_toolkit_source_files)))\n gnu_gcj_source_files = \\\n gnu/gcj/Core.java \\\n gnu/gcj/RawData.java \\\n@@ -1488,7 +1493,8 @@ classpath/gnu/java/awt/dnd/peer/gtk/GtkDropTargetPeer.java\n gnu_java_awt_font_source_files = \\\n classpath/gnu/java/awt/font/FontDelegate.java \\\n classpath/gnu/java/awt/font/FontFactory.java \\\n-classpath/gnu/java/awt/font/GNUGlyphVector.java\n+classpath/gnu/java/awt/font/GNUGlyphVector.java \\\n+classpath/gnu/java/awt/font/OpenTypeFontPeer.java\n \n gnu_java_awt_font_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(gnu_java_awt_font_source_files)))\n gnu_java_awt_font_autofit_source_files = \\\n@@ -1533,6 +1539,8 @@ classpath/gnu/java/awt/font/opentype/truetype/ZonePathIterator.java\n \n gnu_java_awt_font_opentype_truetype_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(gnu_java_awt_font_opentype_truetype_source_files)))\n gnu_java_awt_image_source_files = \\\n+classpath/gnu/java/awt/image/AsyncImage.java \\\n+classpath/gnu/java/awt/image/ImageConverter.java \\\n classpath/gnu/java/awt/image/ImageDecoder.java \\\n classpath/gnu/java/awt/image/XBMDecoder.java\n \n@@ -1544,6 +1552,7 @@ classpath/gnu/java/awt/java2d/AlphaCompositeContext.java \\\n classpath/gnu/java/awt/java2d/CubicSegment.java \\\n classpath/gnu/java/awt/java2d/ImagePaint.java \\\n classpath/gnu/java/awt/java2d/LineSegment.java \\\n+classpath/gnu/java/awt/java2d/PixelCoverage.java \\\n classpath/gnu/java/awt/java2d/Pixelizer.java \\\n classpath/gnu/java/awt/java2d/PolyEdge.java \\\n classpath/gnu/java/awt/java2d/PolyEdgeComparator.java \\\n@@ -1554,6 +1563,8 @@ classpath/gnu/java/awt/java2d/ScanlineConverter.java \\\n classpath/gnu/java/awt/java2d/ScanlineCoverage.java \\\n classpath/gnu/java/awt/java2d/Segment.java \\\n classpath/gnu/java/awt/java2d/ShapeCache.java \\\n+classpath/gnu/java/awt/java2d/ShapeWrapper.java \\\n+classpath/gnu/java/awt/java2d/TextCacheKey.java \\\n classpath/gnu/java/awt/java2d/TexturePaintContext.java\n \n gnu_java_awt_java2d_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(gnu_java_awt_java2d_source_files)))\n@@ -1690,12 +1701,11 @@ classpath/gnu/java/awt/peer/swing/SwingWindowPeer.java\n \n gnu_java_awt_peer_x_source_files = \\\n classpath/gnu/java/awt/peer/x/GLGraphics.java \\\n-classpath/gnu/java/awt/peer/x/ImageConverter.java \\\n classpath/gnu/java/awt/peer/x/KeyboardMapping.java \\\n classpath/gnu/java/awt/peer/x/PixmapVolatileImage.java \\\n classpath/gnu/java/awt/peer/x/XDialogPeer.java \\\n classpath/gnu/java/awt/peer/x/XEventPump.java \\\n-classpath/gnu/java/awt/peer/x/XFontPeer2.java \\\n+classpath/gnu/java/awt/peer/x/XFontPeer.java \\\n classpath/gnu/java/awt/peer/x/XFramePeer.java \\\n classpath/gnu/java/awt/peer/x/XGraphics2D.java \\\n classpath/gnu/java/awt/peer/x/XGraphicsConfiguration.java \\\n@@ -1991,6 +2001,8 @@ gnu/java/nio/channels/FileChannelImpl.java\n gnu_java_nio_channels_header_files = $(patsubst %.java,%.h,$(gnu_java_nio_channels_source_files))\n gnu_java_nio_charset_source_files = \\\n classpath/gnu/java/nio/charset/ByteCharset.java \\\n+classpath/gnu/java/nio/charset/ByteDecodeLoopHelper.java \\\n+classpath/gnu/java/nio/charset/ByteEncodeLoopHelper.java \\\n classpath/gnu/java/nio/charset/Cp424.java \\\n classpath/gnu/java/nio/charset/Cp437.java \\\n classpath/gnu/java/nio/charset/Cp737.java \\\n@@ -2347,6 +2359,7 @@ gnu_java_util_source_files = \\\n classpath/gnu/java/util/Base64.java \\\n classpath/gnu/java/util/DoubleEnumeration.java \\\n classpath/gnu/java/util/EmptyEnumeration.java \\\n+classpath/gnu/java/util/LRUCache.java \\\n classpath/gnu/java/util/WeakIdentityHashMap.java \\\n classpath/gnu/java/util/ZoneInfo.java\n \n@@ -5296,6 +5309,16 @@ classpath/javax/management/openmbean/TabularDataSupport.java \\\n classpath/javax/management/openmbean/TabularType.java\n \n javax_management_openmbean_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(javax_management_openmbean_source_files)))\n+javax_management_remote_source_files = \\\n+classpath/javax/management/remote/NotificationResult.java \\\n+classpath/javax/management/remote/TargetedNotification.java\n+\n+javax_management_remote_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(javax_management_remote_source_files)))\n+javax_management_remote_rmi_source_files = \\\n+classpath/javax/management/remote/rmi/RMIConnection.java \\\n+classpath/javax/management/remote/rmi/RMIServer.java\n+\n+javax_management_remote_rmi_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(javax_management_remote_rmi_source_files)))\n javax_naming_source_files = \\\n classpath/javax/naming/AuthenticationException.java \\\n classpath/javax/naming/AuthenticationNotSupportedException.java \\\n@@ -6328,6 +6351,12 @@ classpath/javax/swing/undo/UndoableEdit.java \\\n classpath/javax/swing/undo/UndoableEditSupport.java\n \n javax_swing_undo_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(javax_swing_undo_source_files)))\n+javax_tools_source_files = \\\n+classpath/javax/tools/Diagnostic.java \\\n+classpath/javax/tools/DiagnosticListener.java \\\n+classpath/javax/tools/FileObject.java\n+\n+javax_tools_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(javax_tools_source_files)))\n javax_transaction_source_files = \\\n classpath/javax/transaction/HeuristicCommitException.java \\\n classpath/javax/transaction/HeuristicMixedException.java \\\n@@ -7260,6 +7289,7 @@ all_packages_source_files = \\\n   gnu/awt/j2d.list \\\n   gnu/classpath.list \\\n   gnu/classpath/debug.list \\\n+  gnu/classpath/toolkit.list \\\n   gnu/gcj.list \\\n   gnu/gcj/convert.list \\\n   gnu/gcj/io.list \\\n@@ -7450,6 +7480,8 @@ all_packages_source_files = \\\n   javax/management.list \\\n   javax/management/loading.list \\\n   javax/management/openmbean.list \\\n+  javax/management/remote.list \\\n+  javax/management/remote/rmi.list \\\n   javax/naming.list \\\n   javax/naming/directory.list \\\n   javax/naming/event.list \\\n@@ -7491,6 +7523,7 @@ all_packages_source_files = \\\n   javax/swing/text/rtf.list \\\n   javax/swing/tree.list \\\n   javax/swing/undo.list \\\n+  javax/tools.list \\\n   javax/transaction.list \\\n   javax/transaction/xa.list \\\n   org/ietf/jgss.list \\\n@@ -7506,6 +7539,7 @@ ordinary_header_files = \\\n   $(gnu_awt_j2d_header_files) \\\n   $(gnu_classpath_header_files) \\\n   $(gnu_classpath_debug_header_files) \\\n+  $(gnu_classpath_toolkit_header_files) \\\n   $(gnu_gcj_header_files) \\\n   $(gnu_gcj_convert_header_files) \\\n   $(gnu_gcj_io_header_files) \\\n@@ -7693,6 +7727,8 @@ ordinary_header_files = \\\n   $(javax_management_header_files) \\\n   $(javax_management_loading_header_files) \\\n   $(javax_management_openmbean_header_files) \\\n+  $(javax_management_remote_header_files) \\\n+  $(javax_management_remote_rmi_header_files) \\\n   $(javax_naming_header_files) \\\n   $(javax_naming_directory_header_files) \\\n   $(javax_naming_event_header_files) \\\n@@ -7734,6 +7770,7 @@ ordinary_header_files = \\\n   $(javax_swing_text_rtf_header_files) \\\n   $(javax_swing_tree_header_files) \\\n   $(javax_swing_undo_header_files) \\\n+  $(javax_tools_header_files) \\\n   $(javax_transaction_header_files) \\\n   $(javax_transaction_xa_header_files) \\\n   $(org_ietf_jgss_header_files) \\\n@@ -7784,23 +7821,10 @@ bc_objects = \\\n   org-xml.lo\n \n property_files = \\\n-  classpath/resource/gnu/classpath/tools/appletviewer/messages.properties \\\n-  classpath/resource/gnu/classpath/tools/common/Messages.properties \\\n-  classpath/resource/gnu/classpath/tools/getopt/Messages.properties \\\n-  classpath/resource/gnu/classpath/tools/jar/messages.properties \\\n-  classpath/resource/gnu/classpath/tools/jarsigner/MessageBundle.properties \\\n-  classpath/resource/gnu/classpath/tools/jarsigner/messages.properties \\\n-  classpath/resource/gnu/classpath/tools/keytool/MessageBundle.properties \\\n-  classpath/resource/gnu/classpath/tools/keytool/messages.properties \\\n-  classpath/resource/gnu/classpath/tools/native2ascii/messages.properties \\\n-  classpath/resource/gnu/classpath/tools/orbd/messages.properties \\\n-  classpath/resource/gnu/classpath/tools/rmic/messages.properties \\\n-  classpath/resource/gnu/classpath/tools/rmid/messages.properties \\\n-  classpath/resource/gnu/classpath/tools/rmiregistry/messages.properties \\\n-  classpath/resource/gnu/classpath/tools/serialver/messages.properties \\\n-  classpath/resource/gnu/classpath/tools/tnameserv/messages.properties \\\n+  classpath/resource/gnu/java/awt/font/fonts.properties \\\n   classpath/resource/gnu/java/awt/peer/gtk/font.properties \\\n   classpath/resource/gnu/java/awt/peer/x/fonts.properties \\\n+  classpath/resource/gnu/java/awt/peer/x/xfonts.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_aa.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_aa_DJ.properties \\\n@@ -8081,8 +8105,6 @@ property_files = \\\n   classpath/resource/javax/imageio/plugins/jpeg/MessagesBundle.properties \\\n   classpath/resource/javax/swing/text/html/default.css \\\n   classpath/resource/org/ietf/jgss/MessagesBundle.properties \\\n-  classpath/resource/sun/rmi/rmic/messages.properties \\\n-  classpath/resource/com/sun/tools/javac/messages.properties \\\n   classpath/resource/META-INF/services/java.util.prefs.PreferencesFactory \\\n   classpath/resource/META-INF/services/java.util.prefs.PreferencesFactory.in \\\n   classpath/resource/META-INF/services/javax.sound.midi.spi.MidiDeviceProvider \\\n@@ -10424,6 +10446,12 @@ gnu/classpath/jdwp/value.list: $(gnu_classpath_jdwp_value_source_files)\n \n -include gnu/classpath/jdwp/value.deps\n \n+gnu/classpath/toolkit.list: $(gnu_classpath_toolkit_source_files)\n+\t@$(mkinstalldirs) $(dir $@)\n+\techo $(srcdir)/classpath/lib/gnu/classpath/toolkit/*.class > gnu/classpath/toolkit.list\n+\n+-include gnu/classpath/toolkit.deps\n+\n gnu/gcj.list: $(gnu_gcj_source_files)\n \t@$(mkinstalldirs) $(dir $@)\n \techo $(srcdir)/classpath/lib/gnu/gcj/*.class > gnu/gcj.list\n@@ -11692,6 +11720,18 @@ javax/management/openmbean.list: $(javax_management_openmbean_source_files)\n \n -include javax/management/openmbean.deps\n \n+javax/management/remote.list: $(javax_management_remote_source_files)\n+\t@$(mkinstalldirs) $(dir $@)\n+\techo $(srcdir)/classpath/lib/javax/management/remote/*.class > javax/management/remote.list\n+\n+-include javax/management/remote.deps\n+\n+javax/management/remote/rmi.list: $(javax_management_remote_rmi_source_files)\n+\t@$(mkinstalldirs) $(dir $@)\n+\techo $(srcdir)/classpath/lib/javax/management/remote/rmi/*.class > javax/management/remote/rmi.list\n+\n+-include javax/management/remote/rmi.deps\n+\n javax/naming.list: $(javax_naming_source_files)\n \t@$(mkinstalldirs) $(dir $@)\n \techo $(srcdir)/classpath/lib/javax/naming/*.class > javax/naming.list\n@@ -11943,6 +11983,12 @@ javax/swing/undo.list: $(javax_swing_undo_source_files)\n \n -include javax/swing/undo.deps\n \n+javax/tools.list: $(javax_tools_source_files)\n+\t@$(mkinstalldirs) $(dir $@)\n+\techo $(srcdir)/classpath/lib/javax/tools/*.class > javax/tools.list\n+\n+-include javax/tools.deps\n+\n javax/transaction.list: $(javax_transaction_source_files)\n \t@$(mkinstalldirs) $(dir $@)\n \techo $(srcdir)/classpath/lib/javax/transaction/*.class > javax/transaction.list"}, {"sha": "096db242f4424ea41db24e11eba38baabde406f2", "filename": "libjava/aclocal.m4", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Faclocal.m4?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -350,7 +350,7 @@ AC_DEFUN([AM_OUTPUT_DEPENDENCY_COMMANDS],\n # with or without modifications, as long as this notice is preserved.\n \n AC_DEFUN([AM_PROG_GCJ],[\n-AC_CHECK_PROGS(GCJ, [gcj gcj-3.2 gcj-3.1 gcj-3.0 gcj-2.95], gcj)\n+AC_CHECK_PROGS(GCJ, gcj, gcj)\n test -z \"$GCJ\" && AC_MSG_ERROR([no acceptable gcj found in \\$PATH])\n if test \"x${GCJFLAGS-unset}\" = xunset; then\n    GCJFLAGS=\"-g -O2\""}, {"sha": "be17176a6f07795d844487f3f857462d07e98353", "filename": "libjava/classpath/AUTHORS", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2FAUTHORS", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2FAUTHORS", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2FAUTHORS?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -39,7 +39,9 @@ Bryce McKinlay (bryce@waitaki.otago.ac.nz)\n Audrius Meskauskas (audriusa@Bioinformatics.org)\n Raif S. Naffah (raif@swiftdsl.com.au)\n Aaron M. Renn (arenn@urbanophile.com)\n+Ian Rogers (ian.rogers@manchester.ac.uk)\n Andrew Selkirk (aselkirk@sympatico.ca)\n+Robert Schuster (robertschuster@fsfe.org)\n Christian Thalinger (twisti@complang.tuwien.ac.at)\n Andreas Tobler (a.tobler@schweiz.org)\n Mario Torre (neugens@limasoftware.net)"}, {"sha": "10a167cb08c4ad576440a0d46ae4f15e5a666954", "filename": "libjava/classpath/ChangeLog", "status": "modified", "additions": 1012, "deletions": 3507, "changes": 4519, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2FChangeLog?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba"}, {"sha": "821ff98e811de72bfe5d025fbaafc0050a3ae5c4", "filename": "libjava/classpath/ChangeLog-2007", "status": "added", "additions": 4810, "deletions": 0, "changes": 4810, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2FChangeLog-2007", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2FChangeLog-2007", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2FChangeLog-2007?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba"}, {"sha": "010aad3ebb07944688d4719fd95fa444f5b7fc3a", "filename": "libjava/classpath/ChangeLog.gcj", "status": "modified", "additions": 93, "deletions": 0, "changes": 93, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2FChangeLog.gcj", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2FChangeLog.gcj", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2FChangeLog.gcj?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -1,3 +1,14 @@\n+2008-06-28  Matthias Klose  <doko@ubuntu.com>\n+\n+\t* m4/ac_prog_javac.m4: Disable check for JAVAC, when\n+\tnot configured with --enable-java-maintainer-mode.\n+\t* aclocal.m4, configure: Regenerate.\n+\t* native/jni/gstreamer-peer/Makefile.am: Do not link with\n+\tlibclasspathnative.\n+\t* native/jni/gstreamer-peer/Makefile.in: Regenerate.\n+\t* tools/Makefile.am, lib/Makefile.am: Use JAVAC for setting\n+\tJCOMPILER, drop flags not understood by gcj.\n+\n 2008-06-24  Tom Tromey  <tromey@redhat.com>\n \n \tPR libgcj/32198:\n@@ -6,13 +17,85 @@\n \t* tools/gnu/classpath/tools/rmic/SourceGiopRmicCompiler.class:\n         Rebuilt.\n \n+2008-04-18  Paolo Bonzini  <bonzini@gnu.org>\n+\n+\tPR bootstrap/35457\n+\t* aclocal.m4: Regenerate.\n+\t* configure: Regenerate.\n+\n+2008-04-18  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n+\n+\t* lib/gen-classlist.sh.in: Avoid grepping each omission, by\n+\tbuilding an awk script with a hash for literal files, and\n+\tawk regular expressions for the rest.\n+\t* configure.ac: Call AC_PROG_AWK.\n+\t* configure: Regenerate.\n+\n+\t* m4/gcc_attribute.m4 (GCC_ATTRIBUTE): Fix cache variable name.\n+\t* tools/Makefile.am (gappletviewer, gjarsigner, gkeytool, gjar)\n+\t(gnative2ascii, gserialver, gjavah, grmiregistry, gtnameserv)\n+\t(gorbd, grmid, grmic) [!CREATE_WRAPPERS]: Add stub dependencies\n+\tfor these scripts, to trick automake into hiding the respective\n+\trules for the programs below the CREATE_WRAPPERS conditional.\n+\t* aclocal.m4: Regenerate.\n+\t* configure: Likewise.\n+\t* Makefile.in: Likewise.\n+\t* native/jni/Makefile.in: Likewise.\n+\t* native/jni/classpath/Makefile.in: Likewise.\n+\t* native/jni/gstreamer-peer/Makefile.in: Likewise.\n+\t* native/jni/midi-dssi/Makefile.in: Likewise.\n+\t* native/jni/gconf-peer/Makefile.in: Likewise.\n+\t* native/jni/java-io/Makefile.in: Likewise.\n+\t* native/jni/native-lib/Makefile.in: Likewise.\n+\t* native/jni/java-util/Makefile.in: Likewise.\n+\t* native/jni/java-lang/Makefile.in: Likewise.\n+\t* native/jni/midi-alsa/Makefile.in: Likewise.\n+\t* native/jni/java-nio/Makefile.in: Likewise.\n+\t* native/jni/java-net/Makefile.in: Likewise.\n+\t* native/jni/xmlj/Makefile.in: Likewise.\n+\t* native/jni/qt-peer/Makefile.in: Likewise.\n+\t* native/jni/gtk-peer/Makefile.in: Likewise.\n+\t* native/Makefile.in: Likewise.\n+\t* native/jawt/Makefile.in: Likewise.\n+\t* native/fdlibm/Makefile.in: Likewise.\n+\t* native/plugin/Makefile.in: Likewise.\n+\t* resource/Makefile.in: Likewise.\n+\t* scripts/Makefile.in: Likewise.\n+\t* tools/Makefile.in: Likewise.\n+\t* doc/Makefile.in: Likewise.\n+\t* doc/api/Makefile.in: Likewise.\n+\t* lib/Makefile.in: Likewise.\n+\t* external/Makefile.in: Likewise.\n+\t* external/jsr166/Makefile.in: Likewise.\n+\t* external/sax/Makefile.in: Likewise.\n+\t* external/w3c_dom/Makefile.in: Likewise.\n+\t* external/relaxngDatatype/Makefile.in: Likewise.\n+\t* include/Makefile.in: Likewise.\n+\t* examples/Makefile.in: Likewise.\n+\n 2008-04-17  Tom Tromey  <tromey@redhat.com>\n \n \tPR libgcj/35950:\n \t* tools/gnu/classpath/tools/jar/Entry.java: New version from\n \tClasspath.\n \t* tools/classes/gnu/classpath/tools/jar/Entry.class: Update.\n \n+2008-03-10  Jim Meyering  <meyering@redhat.com>\n+\n+\tDon't leak upon failed realloc.\n+\t* native/jni/classpath/jcl.c (JCL_realloc): Upon failed realloc,\n+\tfree the original buffer before throwing the exception.\n+\n+2008-03-09  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n+\n+\t* doc/cp-hacking.texinfo: Fix spacing after periods.\n+\t* doc/cp-tools.texinfo: Likewise.\n+\t* doc/cp-vmintegration.texinfo: Likewise.\n+\n+\t* doc/cp-hacking.texinfo: Fix some typos.\n+\t* doc/cp-tools.texinfo: Likewise.\n+\t* doc/cp-vmintegration.texinfo: Likewise.\n+\n 2008-03-02  Jakub Jelinek  <jakub@redhat.com>\n \n \t* gnu/java/rmi/registry/RegistryImpl.java (version): Update\n@@ -42,6 +125,16 @@\n \t* tools/classes/gnu/classpath/tools/native2ascii/Native2ASCII$3.class:\n \tAdded.\n \n+2008-01-27  Bernhard Fischer  <rep.dot.nop@gmail.com>\n+\n+\t* java/util/SimpleTimeZone.java (SimpleTimeZone): Fix typo in comment.\n+\t* gnu/CORBA/GIOP/v1_2/RequestHeader.java (RequestHeader): Fix typo in\n+\texception message.\n+\n+2008-01-27  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n+\n+\t* doc/README.jaxp: Fix typos.\n+\n 2007-09-04  Matthias Klose  <doko@ubuntu.com>\n \n \t* configure.ac: Append libgcj soversion to nativeexeclibdir."}, {"sha": "d3c5b40a94091285c27361905f591af64c1f7b21", "filename": "libjava/classpath/INSTALL", "status": "modified", "additions": 27, "deletions": 26, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2FINSTALL", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2FINSTALL", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2FINSTALL?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -1,16 +1,19 @@\n Installation Instructions\n *************************\n \n-Copyright (C) 1994, 1995, 1996, 1999, 2000, 2001, 2002, 2004, 2005 Free\n-Software Foundation, Inc.\n+Copyright (C) 1994, 1995, 1996, 1999, 2000, 2001, 2002, 2004, 2005,\n+2006, 2007 Free Software Foundation, Inc.\n \n This file is free documentation; the Free Software Foundation gives\n unlimited permission to copy, distribute and modify it.\n \n Basic Installation\n ==================\n \n-These are generic installation instructions.\n+Briefly, the shell commands `./configure; make; make install' should\n+configure, build, and install this package.  The following\n+more-detailed instructions are generic; see the `README' file for\n+instructions specific to this package.\n \n    The `configure' shell script attempts to guess correct values for\n various system-dependent variables used during compilation.  It uses\n@@ -23,9 +26,9 @@ debugging `configure').\n \n    It can also use an optional file (typically called `config.cache'\n and enabled with `--cache-file=config.cache' or simply `-C') that saves\n-the results of its tests to speed up reconfiguring.  (Caching is\n+the results of its tests to speed up reconfiguring.  Caching is\n disabled by default to prevent problems with accidental use of stale\n-cache files.)\n+cache files.\n \n    If you need to do unusual things to compile the package, please try\n to figure out how `configure' could check whether to do them, and mail\n@@ -35,20 +38,17 @@ some point `config.cache' contains results you don't want to keep, you\n may remove or edit it.\n \n    The file `configure.ac' (or `configure.in') is used to create\n-`configure' by a program called `autoconf'.  You only need\n-`configure.ac' if you want to change it or regenerate `configure' using\n-a newer version of `autoconf'.\n+`configure' by a program called `autoconf'.  You need `configure.ac' if\n+you want to change it or regenerate `configure' using a newer version\n+of `autoconf'.\n \n The simplest way to compile this package is:\n \n   1. `cd' to the directory containing the package's source code and type\n-     `./configure' to configure the package for your system.  If you're\n-     using `csh' on an old version of System V, you might need to type\n-     `sh ./configure' instead to prevent `csh' from trying to execute\n-     `configure' itself.\n+     `./configure' to configure the package for your system.\n \n-     Running `configure' takes awhile.  While running, it prints some\n-     messages telling which features it is checking for.\n+     Running `configure' might take a while.  While running, it prints\n+     some messages telling which features it is checking for.\n \n   2. Type `make' to compile the package.\n \n@@ -67,6 +67,9 @@ The simplest way to compile this package is:\n      all sorts of other programs in order to regenerate files that came\n      with the distribution.\n \n+  6. Often, you can also type `make uninstall' to remove the installed\n+     files again.\n+\n Compilers and Options\n =====================\n \n@@ -78,7 +81,7 @@ details on some of the pertinent environment variables.\n by setting variables in the command line or in the environment.  Here\n is an example:\n \n-     ./configure CC=c89 CFLAGS=-O2 LIBS=-lposix\n+     ./configure CC=c99 CFLAGS=-g LIBS=-lposix\n \n    *Note Defining Variables::, for more details.\n \n@@ -87,17 +90,15 @@ Compiling For Multiple Architectures\n \n You can compile the package for more than one kind of computer at the\n same time, by placing the object files for each architecture in their\n-own directory.  To do this, you must use a version of `make' that\n-supports the `VPATH' variable, such as GNU `make'.  `cd' to the\n+own directory.  To do this, you can use GNU `make'.  `cd' to the\n directory where you want the object files and executables to go and run\n the `configure' script.  `configure' automatically checks for the\n source code in the directory that `configure' is in and in `..'.\n \n-   If you have to use a `make' that does not support the `VPATH'\n-variable, you have to compile the package for one architecture at a\n-time in the source code directory.  After you have installed the\n-package for one architecture, use `make distclean' before reconfiguring\n-for another architecture.\n+   With a non-GNU `make', it is safer to compile the package for one\n+architecture at a time in the source code directory.  After you have\n+installed the package for one architecture, use `make distclean' before\n+reconfiguring for another architecture.\n \n Installation Names\n ==================\n@@ -190,12 +191,12 @@ them in the `configure' command line, using `VAR=value'.  For example:\n      ./configure CC=/usr/local2/bin/gcc\n \n causes the specified `gcc' to be used as the C compiler (unless it is\n-overridden in the site shell script).  Here is a another example:\n+overridden in the site shell script).\n \n-     /bin/bash ./configure CONFIG_SHELL=/bin/bash\n+Unfortunately, this technique does not work for `CONFIG_SHELL' due to\n+an Autoconf bug.  Until the bug is fixed you can use this workaround:\n \n-Here the `CONFIG_SHELL=/bin/bash' operand causes subsequent\n-configuration-related scripts to be executed by `/bin/bash'.\n+     CONFIG_SHELL=/bin/bash /bin/bash ./configure CONFIG_SHELL=/bin/bash\n \n `configure' Invocation\n ======================"}, {"sha": "fec369bad7f5df2b4789de4767cd48b33c1b9c3b", "filename": "libjava/classpath/Makefile.am", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2FMakefile.am?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -1,6 +1,7 @@\n ## Input file for automake to generate the Makefile.in used by configure\n \n # lib first, to compile .class files before native code, last examples\n+## GCJ LOCAL: unconditionally build tools subdur\n SUBDIRS = lib doc external include native resource scripts tools $(EXAMPLESDIR)\n DIST_SUBDIRS = lib doc external include native resource scripts tools examples\n \n@@ -15,7 +16,8 @@ EXTRA_DIST = HACKING BUGS THANKYOU mauve-classpath LICENSE \\\n              ChangeLog.gnujaxp.1 ChangeLog.gnujaxp.2 ChangeLog.libxmlj \\\n \t     autogen.sh\n \n-#DISTCHECK_CONFIGURE_FLAGS = --enable-gjdoc\n+DISTCHECK_CONFIGURE_FLAGS = --with-gjdoc --enable-gstreamer-peer \\\n+\t--enable-xmlj --enable-qt-peer\n \n dist-hook:\n \t-$(mkinstalldirs) $(distdir)/include"}, {"sha": "73e52f364c2b818f1e3bccaf0af14fce6512734b", "filename": "libjava/classpath/Makefile.in", "status": "modified", "additions": 7, "deletions": 21, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2FMakefile.in?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -67,6 +67,8 @@ am__aclocal_m4_deps = $(top_srcdir)/../../config/depstand.m4 \\\n \t$(top_srcdir)/../../ltoptions.m4 \\\n \t$(top_srcdir)/../../ltsugar.m4 \\\n \t$(top_srcdir)/../../ltversion.m4 \\\n+\t$(top_srcdir)/m4/ac_prog_javac.m4 \\\n+\t$(top_srcdir)/m4/ac_prog_javac_works.m4 \\\n \t$(top_srcdir)/m4/acattribute.m4 $(top_srcdir)/m4/accross.m4 \\\n \t$(top_srcdir)/m4/acinclude.m4 \\\n \t$(top_srcdir)/m4/ax_create_stdint_h.m4 \\\n@@ -177,7 +179,6 @@ DUMPBIN = @DUMPBIN@\n ECHO_C = @ECHO_C@\n ECHO_N = @ECHO_N@\n ECHO_T = @ECHO_T@\n-ECJ = @ECJ@\n ECJ_JAR = @ECJ_JAR@\n EGREP = @EGREP@\n ENABLE_LOCAL_SOCKETS_FALSE = @ENABLE_LOCAL_SOCKETS_FALSE@\n@@ -189,19 +190,8 @@ EXTRA_CFLAGS = @EXTRA_CFLAGS@\n FASTJAR = @FASTJAR@\n FGREP = @FGREP@\n FIND = @FIND@\n-FOUND_ECJ_FALSE = @FOUND_ECJ_FALSE@\n-FOUND_ECJ_TRUE = @FOUND_ECJ_TRUE@\n-FOUND_GCJ_FALSE = @FOUND_GCJ_FALSE@\n-FOUND_GCJ_TRUE = @FOUND_GCJ_TRUE@\n-FOUND_JAVAC_FALSE = @FOUND_JAVAC_FALSE@\n-FOUND_JAVAC_TRUE = @FOUND_JAVAC_TRUE@\n-FOUND_JIKES_FALSE = @FOUND_JIKES_FALSE@\n-FOUND_JIKES_TRUE = @FOUND_JIKES_TRUE@\n-FOUND_KJC_FALSE = @FOUND_KJC_FALSE@\n-FOUND_KJC_TRUE = @FOUND_KJC_TRUE@\n FREETYPE2_CFLAGS = @FREETYPE2_CFLAGS@\n FREETYPE2_LIBS = @FREETYPE2_LIBS@\n-GCJ = @GCJ@\n GCONF_CFLAGS = @GCONF_CFLAGS@\n GCONF_LIBS = @GCONF_LIBS@\n GDK_CFLAGS = @GDK_CFLAGS@\n@@ -233,15 +223,12 @@ INSTALL_PROGRAM = @INSTALL_PROGRAM@\n INSTALL_SCRIPT = @INSTALL_SCRIPT@\n INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@\n JAVAC = @JAVAC@\n+JAVAC_MEM_OPT = @JAVAC_MEM_OPT@\n JAVA_LANG_SYSTEM_EXPLICIT_INITIALIZATION = @JAVA_LANG_SYSTEM_EXPLICIT_INITIALIZATION@\n JAVA_MAINTAINER_MODE_FALSE = @JAVA_MAINTAINER_MODE_FALSE@\n JAVA_MAINTAINER_MODE_TRUE = @JAVA_MAINTAINER_MODE_TRUE@\n JAY = @JAY@\n JAY_SKELETON = @JAY_SKELETON@\n-JIKES = @JIKES@\n-JIKESENCODING = @JIKESENCODING@\n-JIKESWARNINGS = @JIKESWARNINGS@\n-KJC = @KJC@\n LD = @LD@\n LDFLAGS = @LDFLAGS@\n LIBDEBUG = @LIBDEBUG@\n@@ -289,10 +276,8 @@ SET_MAKE = @SET_MAKE@\n SHELL = @SHELL@\n STRICT_WARNING_CFLAGS = @STRICT_WARNING_CFLAGS@\n STRIP = @STRIP@\n-USER_CLASSLIB = @USER_CLASSLIB@\n+TOOLSDIR = @TOOLSDIR@\n USER_JAVAH = @USER_JAVAH@\n-USER_SPECIFIED_CLASSLIB_FALSE = @USER_SPECIFIED_CLASSLIB_FALSE@\n-USER_SPECIFIED_CLASSLIB_TRUE = @USER_SPECIFIED_CLASSLIB_TRUE@\n USE_ESCHER_FALSE = @USE_ESCHER_FALSE@\n USE_ESCHER_TRUE = @USE_ESCHER_TRUE@\n USE_PREBUILT_GLIBJ_ZIP_FALSE = @USE_PREBUILT_GLIBJ_ZIP_FALSE@\n@@ -376,6 +361,9 @@ EXTRA_DIST = HACKING BUGS THANKYOU mauve-classpath LICENSE \\\n              ChangeLog.gnujaxp.1 ChangeLog.gnujaxp.2 ChangeLog.libxmlj \\\n \t     autogen.sh\n \n+DISTCHECK_CONFIGURE_FLAGS = --with-gjdoc --enable-gstreamer-peer \\\n+\t--enable-xmlj --enable-qt-peer\n+\n all: all-recursive\n \n .SUFFIXES:\n@@ -828,8 +816,6 @@ uninstall-info: uninstall-info-recursive\n \n native: lib\n \n-#DISTCHECK_CONFIGURE_FLAGS = --enable-gjdoc\n-\n dist-hook:\n \t-$(mkinstalldirs) $(distdir)/include\n \t-cp -f $(top_srcdir)/include/*.in $(distdir)/include"}, {"sha": "0a9e4620e87983000882f375bf06f6dc1e82e41e", "filename": "libjava/classpath/NEWS", "status": "modified", "additions": 53, "deletions": 1, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2FNEWS", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2FNEWS", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2FNEWS?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -1,9 +1,61 @@\n-New in release 0.96\n+Bug fixes in release 0.97.2 (Jun 06, 2007)\n+\n+* Include headers in the release tarball.\n+* Allow the building of tools to be optional.\n+* Only check for a Java compiler when required.\n+* Allow VMOperatingSystemMXBeanImpl to compile on Solaris.\n+* Documentation typo fixes\n+* Fix memory leak in native/jni/classpath/jcl.c\n+* Web page updates (PR classpath/22883)\n+* Fixes to pass the JSR166 TCK\n+* Use awk to construct the classlist on building\n+* Fix deadlock in Logger (PR classpath/35974)\n+* Fix regression in java.lang.String (PR classpath/35482)\n+* Allow Classpath tools to handle @file options.\n+* Allow parseInt to handle a + prefix correctly.\n+* Remove use of 1.5 language constructs in the VM layer.\n+\n+Bug fixes in release 0.97.1 (Mar 11, 2007)\n+\n+* Include documentation for JSR166 (java.util.concurrent)\n+* Fix STaX API compatability.\n+* Include the tools properties file in the release tarball.\n+\n+New in release 0.97 (Feb 22, 2007)\n+\n+Build changes:\n+\n+* A copy of javah (to produce C header files from Java source code)\n+is now required to generate the files in include.\n+* The javac check has been changed so that it attempts to find ecj,\n+javac and gcj (in that order).  You may override this by using\n+JAVAC=<preferred javac>\n+\n+Runtime interface changes:\n+\n+* Removed VMFloat.floatToIntBits amd VMDouble.doubleToLongBits.\n+* Added new getParameterAnnotations() methods in Constructor and Method.\n+\n+New in release 0.96.1 (Oct 16, 2007)\n+\n+* Small compile, configure and build fixes.\n+\n+New in release 0.96 (Oct 15, 2007)\n+\n+* New experimental GStreamer javax.sound peer (see README.gstreamer)\n+* The JNI interface has been updated to 1.6\n+* Better support for the OpenJDK javac compiler\n+* Support for using javah via tools.zip and com.sun.tools.javah.Main\n+* Much improved Escher AWT peers\n+* Many bug fixes including improvements to AWT and Swing support\n \n Runtime interface changes:\n \n * Add VMFloat.toString(float) and VMFloat.parseFloat(String). Default\n   implementations are the same as previous behavior.\n+* Add new default implementations of VMMemoryMXBean.getHeapUsage()\n+  and VMMemoryMXBean.getNonHeapUsage() via iteration over the memory\n+  pools of the appropriate type.\n \n New in release 0.95 (Apr 23, 2007)\n "}, {"sha": "036bd0857b4210ced4bccfff08802547a889bfd8", "filename": "libjava/classpath/THANKYOU", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2FTHANKYOU", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2FTHANKYOU", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2FTHANKYOU?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -41,6 +41,7 @@ Patrik Reali (reali@inf.ethz.ch)\n Petter Reinholdtsen (pere@hungry.com)\n Julian Scheid (julian.scheid@sektor37.de)\n Martin Schr\ufffdder (ms@artcom-gmbh.de)\n+Robert Schuster (robertschuster@fsfe.org)\n Gaute Smaaland (gs@sevenmountains.no)\n Michael Smith (msmith@spinnakernet.com)\n J. Russell Smyth (drfish@uswest.net)"}, {"sha": "2639d47c37f42343cdd73fc544149b33bb0038b1", "filename": "libjava/classpath/aclocal.m4", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Faclocal.m4?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -911,6 +911,8 @@ m4_include([../../libtool.m4])\n m4_include([../../ltoptions.m4])\n m4_include([../../ltsugar.m4])\n m4_include([../../ltversion.m4])\n+m4_include([m4/ac_prog_javac.m4])\n+m4_include([m4/ac_prog_javac_works.m4])\n m4_include([m4/acattribute.m4])\n m4_include([m4/accross.m4])\n m4_include([m4/acinclude.m4])"}, {"sha": "c7607c74f1b8db4387a814a64dc12b21145e02e6", "filename": "libjava/classpath/config.guess", "status": "modified", "additions": 38, "deletions": 22, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fconfig.guess", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fconfig.guess", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fconfig.guess?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -1,10 +1,10 @@\n #! /bin/sh\n # Attempt to guess a canonical system name.\n #   Copyright (C) 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999,\n-#   2000, 2001, 2002, 2003, 2004, 2005, 2006 Free Software Foundation,\n-#   Inc.\n+#   2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008\n+#   Free Software Foundation, Inc.\n \n-timestamp='2006-12-08'\n+timestamp='2008-04-14'\n \n # This file is free software; you can redistribute it and/or modify it\n # under the terms of the GNU General Public License as published by\n@@ -56,8 +56,8 @@ version=\"\\\n GNU config.guess ($timestamp)\n \n Originally written by Per Bothner.\n-Copyright (C) 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005\n-Free Software Foundation, Inc.\n+Copyright (C) 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001,\n+2002, 2003, 2004, 2005, 2006, 2007, 2008 Free Software Foundation, Inc.\n \n This is free software; see the source for copying conditions.  There is NO\n warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\"\n@@ -330,7 +330,7 @@ case \"${UNAME_MACHINE}:${UNAME_SYSTEM}:${UNAME_RELEASE}:${UNAME_VERSION}\" in\n     sun4*:SunOS:5.*:* | tadpole*:SunOS:5.*:*)\n \techo sparc-sun-solaris2`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`\n \texit ;;\n-    i86pc:SunOS:5.*:*)\n+    i86pc:SunOS:5.*:* | i86xen:SunOS:5.*:*)\n \techo i386-pc-solaris2`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`\n \texit ;;\n     sun4*:SunOS:6*:*)\n@@ -532,7 +532,7 @@ EOF\n \t\techo rs6000-ibm-aix3.2\n \tfi\n \texit ;;\n-    *:AIX:*:[45])\n+    *:AIX:*:[456])\n \tIBM_CPU_ID=`/usr/sbin/lsdev -C -c processor -S available | sed 1q | awk '{ print $1 }'`\n \tif /usr/sbin/lsattr -El ${IBM_CPU_ID} | grep ' POWER' >/dev/null 2>&1; then\n \t\tIBM_ARCH=rs6000\n@@ -781,7 +781,7 @@ EOF\n     i*:CYGWIN*:*)\n \techo ${UNAME_MACHINE}-pc-cygwin\n \texit ;;\n-    i*:MINGW*:*)\n+    *:MINGW*:*)\n \techo ${UNAME_MACHINE}-pc-mingw32\n \texit ;;\n     i*:windows32*:*)\n@@ -791,12 +791,18 @@ EOF\n     i*:PW*:*)\n \techo ${UNAME_MACHINE}-pc-pw32\n \texit ;;\n-    x86:Interix*:[3456]*)\n-\techo i586-pc-interix${UNAME_RELEASE}\n-\texit ;;\n-    EM64T:Interix*:[3456]* | authenticamd:Interix*:[3456]*)\n-\techo x86_64-unknown-interix${UNAME_RELEASE}\n-\texit ;;\n+    *:Interix*:[3456]*)\n+    \tcase ${UNAME_MACHINE} in\n+\t    x86)\n+\t\techo i586-pc-interix${UNAME_RELEASE}\n+\t\texit ;;\n+\t    EM64T | authenticamd)\n+\t\techo x86_64-unknown-interix${UNAME_RELEASE}\n+\t\texit ;;\n+\t    IA64)\n+\t\techo ia64-unknown-interix${UNAME_RELEASE}\n+\t\texit ;;\n+\tesac ;;\n     [345]86:Windows_95:* | [345]86:Windows_98:* | [345]86:Windows_NT:*)\n \techo i${UNAME_MACHINE}-pc-mks\n \texit ;;\n@@ -830,7 +836,14 @@ EOF\n \techo ${UNAME_MACHINE}-pc-minix\n \texit ;;\n     arm*:Linux:*:*)\n-\techo ${UNAME_MACHINE}-unknown-linux-gnu\n+\teval $set_cc_for_build\n+\tif echo __ARM_EABI__ | $CC_FOR_BUILD -E - 2>/dev/null \\\n+\t    | grep -q __ARM_EABI__\n+\tthen\n+\t    echo ${UNAME_MACHINE}-unknown-linux-gnu\n+\telse\n+\t    echo ${UNAME_MACHINE}-unknown-linux-gnueabi\n+\tfi\n \texit ;;\n     avr32*:Linux:*:*)\n \techo ${UNAME_MACHINE}-unknown-linux-gnu\n@@ -951,8 +964,8 @@ EOF\n     x86_64:Linux:*:*)\n \techo x86_64-unknown-linux-gnu\n \texit ;;\n-    xtensa:Linux:*:*)\n-    \techo xtensa-unknown-linux-gnu\n+    xtensa*:Linux:*:*)\n+    \techo ${UNAME_MACHINE}-unknown-linux-gnu\n \texit ;;\n     i*86:Linux:*:*)\n \t# The BFD linker knows what the default object file format is, so\n@@ -972,9 +985,6 @@ EOF\n \t  a.out-i386-linux)\n \t\techo \"${UNAME_MACHINE}-pc-linux-gnuaout\"\n \t\texit ;;\n-\t  coff-i386)\n-\t\techo \"${UNAME_MACHINE}-pc-linux-gnucoff\"\n-\t\texit ;;\n \t  \"\")\n \t\t# Either a pre-BFD a.out linker (linux-gnuoldld) or\n \t\t# one that does not give us useful --help.\n@@ -1203,6 +1213,9 @@ EOF\n     BePC:BeOS:*:*)\t# BeOS running on Intel PC compatible.\n \techo i586-pc-beos\n \texit ;;\n+    BePC:Haiku:*:*)\t# Haiku running on Intel PC compatible.\n+\techo i586-pc-haiku\n+\texit ;;\n     SX-4:SUPER-UX:*:*)\n \techo sx4-nec-superux${UNAME_RELEASE}\n \texit ;;\n@@ -1218,6 +1231,9 @@ EOF\n     SX-8:SUPER-UX:*:*)\n \techo sx8-nec-superux${UNAME_RELEASE}\n \texit ;;\n+    SX-8R:SUPER-UX:*:*)\n+\techo sx8r-nec-superux${UNAME_RELEASE}\n+\texit ;;\n     Power*:Rhapsody:*:*)\n \techo powerpc-apple-rhapsody${UNAME_RELEASE}\n \texit ;;\n@@ -1468,9 +1484,9 @@ This script, last modified $timestamp, has failed to recognize\n the operating system you are using. It is advised that you\n download the most up to date version of the config scripts from\n \n-  http://savannah.gnu.org/cgi-bin/viewcvs/*checkout*/config/config/config.guess\n+  http://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.guess;hb=HEAD\n and\n-  http://savannah.gnu.org/cgi-bin/viewcvs/*checkout*/config/config/config.sub\n+  http://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.sub;hb=HEAD\n \n If the version you run ($0) is already up to date, please\n send the following data and any information you think might be"}, {"sha": "63bfff0307009984507fdb8eae89c9ebf7121817", "filename": "libjava/classpath/config.sub", "status": "modified", "additions": 64, "deletions": 16, "changes": 80, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fconfig.sub", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fconfig.sub", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fconfig.sub?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -1,10 +1,10 @@\n #! /bin/sh\n # Configuration validation subroutine script.\n #   Copyright (C) 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999,\n-#   2000, 2001, 2002, 2003, 2004, 2005, 2006 Free Software Foundation,\n-#   Inc.\n+#   2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008\n+#   Free Software Foundation, Inc.\n \n-timestamp='2006-12-08'\n+timestamp='2008-04-14'\n \n # This file is (in principle) common to ALL GNU software.\n # The presence of a machine in this file suggests that SOME GNU software\n@@ -72,8 +72,8 @@ Report bugs and patches to <config-patches@gnu.org>.\"\n version=\"\\\n GNU config.sub ($timestamp)\n \n-Copyright (C) 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005\n-Free Software Foundation, Inc.\n+Copyright (C) 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001,\n+2002, 2003, 2004, 2005, 2006, 2007, 2008 Free Software Foundation, Inc.\n \n This is free software; see the source for copying conditions.  There is NO\n warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\"\n@@ -250,13 +250,14 @@ case $basic_machine in\n \t| i370 | i860 | i960 | ia64 \\\n \t| ip2k | iq2000 \\\n \t| m32c | m32r | m32rle | m68000 | m68k | m88k \\\n-\t| maxq | mb | microblaze | mcore \\\n-\t| mep \\\n+\t| maxq | mb | microblaze | mcore | mep | metag \\\n \t| mips | mipsbe | mipseb | mipsel | mipsle \\\n \t| mips16 \\\n \t| mips64 | mips64el \\\n-\t| mips64vr | mips64vrel \\\n+\t| mips64octeon | mips64octeonel \\\n \t| mips64orion | mips64orionel \\\n+\t| mips64r5900 | mips64r5900el \\\n+\t| mips64vr | mips64vrel \\\n \t| mips64vr4100 | mips64vr4100el \\\n \t| mips64vr4300 | mips64vr4300el \\\n \t| mips64vr5000 | mips64vr5000el \\\n@@ -332,13 +333,14 @@ case $basic_machine in\n \t| ip2k-* | iq2000-* \\\n \t| m32c-* | m32r-* | m32rle-* \\\n \t| m68000-* | m680[012346]0-* | m68360-* | m683?2-* | m68k-* \\\n-\t| m88110-* | m88k-* | maxq-* | mcore-* \\\n+\t| m88110-* | m88k-* | maxq-* | mcore-* | metag-* \\\n \t| mips-* | mipsbe-* | mipseb-* | mipsel-* | mipsle-* \\\n-\t| mep-* \\\n \t| mips16-* \\\n \t| mips64-* | mips64el-* \\\n-\t| mips64vr-* | mips64vrel-* \\\n+\t| mips64octeon-* | mips64octeonel-* \\\n \t| mips64orion-* | mips64orionel-* \\\n+\t| mips64r5900-* | mips64r5900el-* \\\n+\t| mips64vr-* | mips64vrel-* \\\n \t| mips64vr4100-* | mips64vr4100el-* \\\n \t| mips64vr4300-* | mips64vr4300el-* \\\n \t| mips64vr5000-* | mips64vr5000el-* \\\n@@ -366,15 +368,19 @@ case $basic_machine in\n \t| sparclite-* \\\n \t| sparcv8-* | sparcv9-* | sparcv9b-* | sparcv9v-* | strongarm-* | sv1-* | sx?-* \\\n \t| tahoe-* | thumb-* \\\n-\t| tic30-* | tic4x-* | tic54x-* | tic55x-* | tic6x-* | tic80-* \\\n+\t| tic30-* | tic4x-* | tic54x-* | tic55x-* | tic6x-* | tic80-* | tile-* \\\n \t| tron-* \\\n \t| v850-* | v850e-* | vax-* \\\n \t| we32k-* \\\n \t| x86-* | x86_64-* | xc16x-* | xps100-* | xscale-* | xscalee[bl]-* \\\n-\t| xstormy16-* | xtensa-* \\\n+\t| xstormy16-* | xtensa*-* \\\n \t| ymp-* \\\n \t| z8k-*)\n \t\t;;\n+\t# Recognize the basic CPU types without company name, with glob match.\n+\txtensa*)\n+\t\tbasic_machine=$basic_machine-unknown\n+\t\t;;\n \t# Recognize the various machine names and aliases which stand\n \t# for a CPU type and a company and sometimes even an OS.\n \t386bsd)\n@@ -445,6 +451,14 @@ case $basic_machine in\n \t\tbasic_machine=ns32k-sequent\n \t\tos=-dynix\n \t\t;;\n+\tblackfin)\n+\t\tbasic_machine=bfin-unknown\n+\t\tos=-linux\n+\t\t;;\n+\tblackfin-*)\n+\t\tbasic_machine=bfin-`echo $basic_machine | sed 's/^[^-]*-//'`\n+\t\tos=-linux\n+\t\t;;\n \tc90)\n \t\tbasic_machine=c90-cray\n \t\tos=-unicos\n@@ -477,8 +491,8 @@ case $basic_machine in\n \t\tbasic_machine=craynv-cray\n \t\tos=-unicosmp\n \t\t;;\n-\tcr16c)\n-\t\tbasic_machine=cr16c-unknown\n+\tcr16)\n+\t\tbasic_machine=cr16-unknown\n \t\tos=-elf\n \t\t;;\n \tcrds | unos)\n@@ -516,6 +530,10 @@ case $basic_machine in\n \t\tbasic_machine=m88k-motorola\n \t\tos=-sysv3\n \t\t;;\n+\tdicos)\n+\t\tbasic_machine=i686-pc\n+\t\tos=-dicos\n+\t\t;;\n \tdjgpp)\n \t\tbasic_machine=i586-pc\n \t\tos=-msdosdjgpp\n@@ -670,6 +688,14 @@ case $basic_machine in\n \t\tbasic_machine=m68k-isi\n \t\tos=-sysv\n \t\t;;\n+\tm68knommu)\n+\t\tbasic_machine=m68k-unknown\n+\t\tos=-linux\n+\t\t;;\n+\tm68knommu-*)\n+\t\tbasic_machine=m68k-`echo $basic_machine | sed 's/^[^-]*-//'`\n+\t\tos=-linux\n+\t\t;;\n \tm88k-omron*)\n \t\tbasic_machine=m88k-omron\n \t\t;;\n@@ -685,6 +711,10 @@ case $basic_machine in\n \t\tbasic_machine=i386-pc\n \t\tos=-mingw32\n \t\t;;\n+\tmingw32ce)\n+\t\tbasic_machine=arm-unknown\n+\t\tos=-mingw32ce\n+\t\t;;\n \tminiframe)\n \t\tbasic_machine=m68000-convergent\n \t\t;;\n@@ -811,6 +841,14 @@ case $basic_machine in\n \t\tbasic_machine=i860-intel\n \t\tos=-osf\n \t\t;;\n+\tparisc)\n+\t\tbasic_machine=hppa-unknown\n+\t\tos=-linux\n+\t\t;;\n+\tparisc-*)\n+\t\tbasic_machine=hppa-`echo $basic_machine | sed 's/^[^-]*-//'`\n+\t\tos=-linux\n+\t\t;;\n \tpbd)\n \t\tbasic_machine=sparc-tti\n \t\t;;\n@@ -1019,6 +1057,10 @@ case $basic_machine in\n \t\tbasic_machine=tic6x-unknown\n \t\tos=-coff\n \t\t;;\n+\ttile*)\n+\t\tbasic_machine=tile-unknown\n+\t\tos=-linux-gnu\n+\t\t;;\n \ttx39)\n \t\tbasic_machine=mipstx39-unknown\n \t\t;;\n@@ -1224,7 +1266,7 @@ case $os in\n \t      | -os2* | -vos* | -palmos* | -uclinux* | -nucleus* \\\n \t      | -morphos* | -superux* | -rtmk* | -rtmk-nova* | -windiss* \\\n \t      | -powermax* | -dnix* | -nx6 | -nx7 | -sei* | -dragonfly* \\\n-\t      | -skyos* | -haiku* | -rdos* | -toppers*)\n+\t      | -skyos* | -haiku* | -rdos* | -toppers* | -drops*)\n \t# Remember, each alternative MUST END IN *, to match a version number.\n \t\t;;\n \t-qnx*)\n@@ -1354,6 +1396,9 @@ case $os in\n \t-zvmoe)\n \t\tos=-zvmoe\n \t\t;;\n+\t-dicos*)\n+\t\tos=-dicos\n+\t\t;;\n \t-none)\n \t\t;;\n \t*)\n@@ -1419,6 +1464,9 @@ case $basic_machine in\n \tm68*-cisco)\n \t\tos=-aout\n \t\t;;\n+        mep-*)\n+\t\tos=-elf\n+\t\t;;\n \tmips*-cisco)\n \t\tos=-elf\n \t\t;;"}, {"sha": "966fcbd54f9a1b61c392414d5599983387b31ba7", "filename": "libjava/classpath/configure", "status": "modified", "additions": 527, "deletions": 1903, "changes": 2430, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fconfigure?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -1,6 +1,6 @@\n #! /bin/sh\n # Guess values for system-dependent variables and create Makefiles.\n-# Generated by GNU Autoconf 2.59 for GNU Classpath 0.96-pre.\n+# Generated by GNU Autoconf 2.59 for GNU Classpath 0.97.2.\n #\n # Report bugs to <classpath@gnu.org>.\n #\n@@ -418,8 +418,8 @@ SHELL=${CONFIG_SHELL-/bin/sh}\n # Identity of this package.\n PACKAGE_NAME='GNU Classpath'\n PACKAGE_TARNAME='classpath'\n-PACKAGE_VERSION='0.96-pre'\n-PACKAGE_STRING='GNU Classpath 0.96-pre'\n+PACKAGE_VERSION='0.97.2'\n+PACKAGE_STRING='GNU Classpath 0.97.2'\n PACKAGE_BUGREPORT='classpath@gnu.org'\n \n ac_unique_file=\"java/lang/System.java\"\n@@ -461,7 +461,7 @@ ac_includes_default=\"\\\n # include <unistd.h>\n #endif\"\n \n-ac_subst_vars='SHELL PATH_SEPARATOR PACKAGE_NAME PACKAGE_TARNAME PACKAGE_VERSION PACKAGE_STRING PACKAGE_BUGREPORT exec_prefix prefix program_transform_name bindir sbindir libexecdir datadir sysconfdir sharedstatedir localstatedir libdir includedir oldincludedir infodir mandir build_alias host_alias target_alias DEFS ECHO_C ECHO_N ECHO_T LIBS build build_cpu build_vendor build_os host host_cpu host_vendor host_os target target_cpu target_vendor target_os JAVA_MAINTAINER_MODE_TRUE JAVA_MAINTAINER_MODE_FALSE GENINSRC_TRUE GENINSRC_FALSE multi_basedir LIBVERSION CLASSPATH_MODULE CLASSPATH_CONVENIENCE INSTALL_PROGRAM INSTALL_SCRIPT INSTALL_DATA CYGPATH_W PACKAGE VERSION ACLOCAL AUTOCONF AUTOMAKE AUTOHEADER MAKEINFO install_sh STRIP ac_ct_STRIP INSTALL_STRIP_PROGRAM mkdir_p AWK SET_MAKE am__leading_dot AMTAR am__tar am__untar CREATE_COLLECTIONS_TRUE CREATE_COLLECTIONS_FALSE CREATE_JNI_LIBRARIES_TRUE CREATE_JNI_LIBRARIES_FALSE CREATE_CORE_JNI_LIBRARIES_TRUE CREATE_CORE_JNI_LIBRARIES_FALSE CREATE_GCONF_PEER_LIBRARIES_TRUE CREATE_GCONF_PEER_LIBRARIES_FALSE CREATE_GSTREAMER_PEER_LIBRARIES_TRUE CREATE_GSTREAMER_PEER_LIBRARIES_FALSE default_toolkit CREATE_XMLJ_LIBRARY_TRUE CREATE_XMLJ_LIBRARY_FALSE CC CFLAGS LDFLAGS CPPFLAGS ac_ct_CC EXEEXT OBJEXT DEPDIR am__include am__quote AMDEP_TRUE AMDEP_FALSE AMDEPBACKSLASH CCDEPMODE am__fastdepCC_TRUE am__fastdepCC_FALSE CPP EGREP CREATE_ALSA_LIBRARIES_TRUE CREATE_ALSA_LIBRARIES_FALSE CREATE_DSSI_LIBRARIES_TRUE CREATE_DSSI_LIBRARIES_FALSE CREATE_GTK_PEER_LIBRARIES_TRUE CREATE_GTK_PEER_LIBRARIES_FALSE CREATE_QT_PEER_LIBRARIES_TRUE CREATE_QT_PEER_LIBRARIES_FALSE CREATE_PLUGIN_TRUE CREATE_PLUGIN_FALSE toolexeclibdir nativeexeclibdir glibjdir VM_BINARY CREATE_JNI_HEADERS_TRUE CREATE_JNI_HEADERS_FALSE CREATE_WRAPPERS_TRUE CREATE_WRAPPERS_FALSE LN_S LIBTOOL SED FGREP GREP LD DUMPBIN ac_ct_DUMPBIN NM AR ac_ct_AR RANLIB ac_ct_RANLIB lt_ECHO CXX CXXFLAGS ac_ct_CXX CXXDEPMODE am__fastdepCXX_TRUE am__fastdepCXX_FALSE CXXCPP PERL COLLECTIONS_PREFIX LIBMAGIC LIBICONV LTLIBICONV WARNING_CFLAGS EXTRA_CFLAGS STRICT_WARNING_CFLAGS ERROR_CFLAGS PKG_CONFIG XML_CFLAGS XML_LIBS XSLT_CFLAGS XSLT_LIBS X_CFLAGS X_PRE_LIBS X_LIBS X_EXTRA_LIBS GTK_CFLAGS GTK_LIBS FREETYPE2_CFLAGS FREETYPE2_LIBS PANGOFT2_CFLAGS PANGOFT2_LIBS CAIRO_CFLAGS CAIRO_LIBS XTEST_LIBS GCONF_CFLAGS GCONF_LIBS GDK_CFLAGS GDK_LIBS GSTREAMER_CFLAGS GSTREAMER_LIBS GSTREAMER_BASE_CFLAGS GSTREAMER_BASE_LIBS GSTREAMER_PLUGINS_BASE_CFLAGS GSTREAMER_PLUGINS_BASE_LIBS GST_PLUGIN_LDFLAGS GSTREAMER_FILE_READER GSTREAMER_MIXER_PROVIDER QT_CFLAGS QT_LIBS MOC MOZILLA_CFLAGS MOZILLA_LIBS GLIB_CFLAGS GLIB_LIBS PLUGIN_DIR USER_JAVAH CLASSPATH_INCLUDES GCJ JIKES JIKESENCODING JIKESWARNINGS KJC ECJ JAVAC FOUND_GCJ_TRUE FOUND_GCJ_FALSE FOUND_JIKES_TRUE FOUND_JIKES_FALSE FOUND_ECJ_TRUE FOUND_ECJ_FALSE FOUND_JAVAC_TRUE FOUND_JAVAC_FALSE FOUND_KJC_TRUE FOUND_KJC_FALSE USER_CLASSLIB USER_SPECIFIED_CLASSLIB_TRUE USER_SPECIFIED_CLASSLIB_FALSE vm_classes MAINTAINER_MODE_TRUE MAINTAINER_MODE_FALSE MAINT LIBDEBUG INIT_LOAD_LIBRARY ECJ_JAR JAVA_LANG_SYSTEM_EXPLICIT_INITIALIZATION REMOVE MKDIR CP DATE FIND ZIP FASTJAR INSTALL_GLIBJ_ZIP_TRUE INSTALL_GLIBJ_ZIP_FALSE INSTALL_CLASS_FILES_TRUE INSTALL_CLASS_FILES_FALSE BUILD_CLASS_FILES_TRUE BUILD_CLASS_FILES_FALSE EXAMPLESDIR GJDOC CREATE_API_DOCS_TRUE CREATE_API_DOCS_FALSE JAY JAY_SKELETON REGEN_PARSERS_TRUE REGEN_PARSERS_FALSE USE_PREBUILT_GLIBJ_ZIP_TRUE USE_PREBUILT_GLIBJ_ZIP_FALSE PATH_TO_GLIBJ_ZIP USE_ESCHER_TRUE USE_ESCHER_FALSE PATH_TO_ESCHER ENABLE_LOCAL_SOCKETS_TRUE ENABLE_LOCAL_SOCKETS_FALSE DEFAULT_PREFS_PEER LIBOBJS LTLIBOBJS'\n+ac_subst_vars='SHELL PATH_SEPARATOR PACKAGE_NAME PACKAGE_TARNAME PACKAGE_VERSION PACKAGE_STRING PACKAGE_BUGREPORT exec_prefix prefix program_transform_name bindir sbindir libexecdir datadir sysconfdir sharedstatedir localstatedir libdir includedir oldincludedir infodir mandir build_alias host_alias target_alias DEFS ECHO_C ECHO_N ECHO_T LIBS build build_cpu build_vendor build_os host host_cpu host_vendor host_os target target_cpu target_vendor target_os JAVA_MAINTAINER_MODE_TRUE JAVA_MAINTAINER_MODE_FALSE GENINSRC_TRUE GENINSRC_FALSE multi_basedir LIBVERSION CLASSPATH_MODULE CLASSPATH_CONVENIENCE INSTALL_PROGRAM INSTALL_SCRIPT INSTALL_DATA CYGPATH_W PACKAGE VERSION ACLOCAL AUTOCONF AUTOMAKE AUTOHEADER MAKEINFO install_sh STRIP ac_ct_STRIP INSTALL_STRIP_PROGRAM mkdir_p AWK SET_MAKE am__leading_dot AMTAR am__tar am__untar CREATE_COLLECTIONS_TRUE CREATE_COLLECTIONS_FALSE CREATE_JNI_LIBRARIES_TRUE CREATE_JNI_LIBRARIES_FALSE CREATE_CORE_JNI_LIBRARIES_TRUE CREATE_CORE_JNI_LIBRARIES_FALSE CREATE_GCONF_PEER_LIBRARIES_TRUE CREATE_GCONF_PEER_LIBRARIES_FALSE CREATE_GSTREAMER_PEER_LIBRARIES_TRUE CREATE_GSTREAMER_PEER_LIBRARIES_FALSE default_toolkit CREATE_XMLJ_LIBRARY_TRUE CREATE_XMLJ_LIBRARY_FALSE CC CFLAGS LDFLAGS CPPFLAGS ac_ct_CC EXEEXT OBJEXT DEPDIR am__include am__quote AMDEP_TRUE AMDEP_FALSE AMDEPBACKSLASH CCDEPMODE am__fastdepCC_TRUE am__fastdepCC_FALSE CPP EGREP CREATE_ALSA_LIBRARIES_TRUE CREATE_ALSA_LIBRARIES_FALSE CREATE_DSSI_LIBRARIES_TRUE CREATE_DSSI_LIBRARIES_FALSE CREATE_GTK_PEER_LIBRARIES_TRUE CREATE_GTK_PEER_LIBRARIES_FALSE CREATE_QT_PEER_LIBRARIES_TRUE CREATE_QT_PEER_LIBRARIES_FALSE CREATE_PLUGIN_TRUE CREATE_PLUGIN_FALSE toolexeclibdir nativeexeclibdir glibjdir VM_BINARY CREATE_JNI_HEADERS_TRUE CREATE_JNI_HEADERS_FALSE CREATE_WRAPPERS_TRUE CREATE_WRAPPERS_FALSE LN_S LIBTOOL SED FGREP GREP LD DUMPBIN ac_ct_DUMPBIN NM AR ac_ct_AR RANLIB ac_ct_RANLIB lt_ECHO CXX CXXFLAGS ac_ct_CXX CXXDEPMODE am__fastdepCXX_TRUE am__fastdepCXX_FALSE CXXCPP PERL COLLECTIONS_PREFIX LIBMAGIC LIBICONV LTLIBICONV WARNING_CFLAGS EXTRA_CFLAGS STRICT_WARNING_CFLAGS ERROR_CFLAGS PKG_CONFIG XML_CFLAGS XML_LIBS XSLT_CFLAGS XSLT_LIBS X_CFLAGS X_PRE_LIBS X_LIBS X_EXTRA_LIBS GTK_CFLAGS GTK_LIBS FREETYPE2_CFLAGS FREETYPE2_LIBS PANGOFT2_CFLAGS PANGOFT2_LIBS CAIRO_CFLAGS CAIRO_LIBS XTEST_LIBS GCONF_CFLAGS GCONF_LIBS GDK_CFLAGS GDK_LIBS GSTREAMER_CFLAGS GSTREAMER_LIBS GSTREAMER_BASE_CFLAGS GSTREAMER_BASE_LIBS GSTREAMER_PLUGINS_BASE_CFLAGS GSTREAMER_PLUGINS_BASE_LIBS GST_PLUGIN_LDFLAGS GSTREAMER_FILE_READER GSTREAMER_MIXER_PROVIDER QT_CFLAGS QT_LIBS MOC MOZILLA_CFLAGS MOZILLA_LIBS GLIB_CFLAGS GLIB_LIBS PLUGIN_DIR USER_JAVAH CLASSPATH_INCLUDES vm_classes MAINTAINER_MODE_TRUE MAINTAINER_MODE_FALSE MAINT LIBDEBUG INIT_LOAD_LIBRARY ECJ_JAR JAVA_LANG_SYSTEM_EXPLICIT_INITIALIZATION REMOVE MKDIR CP DATE FIND ZIP FASTJAR INSTALL_GLIBJ_ZIP_TRUE INSTALL_GLIBJ_ZIP_FALSE INSTALL_CLASS_FILES_TRUE INSTALL_CLASS_FILES_FALSE BUILD_CLASS_FILES_TRUE BUILD_CLASS_FILES_FALSE EXAMPLESDIR TOOLSDIR GJDOC CREATE_API_DOCS_TRUE CREATE_API_DOCS_FALSE JAY JAY_SKELETON REGEN_PARSERS_TRUE REGEN_PARSERS_FALSE USE_PREBUILT_GLIBJ_ZIP_TRUE USE_PREBUILT_GLIBJ_ZIP_FALSE PATH_TO_GLIBJ_ZIP JAVAC JAVAC_MEM_OPT USE_ESCHER_TRUE USE_ESCHER_FALSE PATH_TO_ESCHER ENABLE_LOCAL_SOCKETS_TRUE ENABLE_LOCAL_SOCKETS_FALSE DEFAULT_PREFS_PEER LIBOBJS LTLIBOBJS'\n ac_subst_files=''\n ac_pwd=`pwd`\n \n@@ -943,7 +943,7 @@ if test \"$ac_init_help\" = \"long\"; then\n   # Omit some internal or obsolete options to make the list less imposing.\n   # This message is too long to be a string in the A/UX 3.1 sh.\n   cat <<_ACEOF\n-\\`configure' configures GNU Classpath 0.96-pre to adapt to many kinds of systems.\n+\\`configure' configures GNU Classpath 0.97.2 to adapt to many kinds of systems.\n \n Usage: $0 [OPTION]... [VAR=VALUE]...\n \n@@ -1014,7 +1014,7 @@ fi\n \n if test -n \"$ac_init_help\"; then\n   case $ac_init_help in\n-     short | recursive ) echo \"Configuration of GNU Classpath 0.96-pre:\";;\n+     short | recursive ) echo \"Configuration of GNU Classpath 0.97.2:\";;\n    esac\n   cat <<\\_ACEOF\n \n@@ -1059,7 +1059,8 @@ Optional Features:\n                           default=no\n   --disable-plugin        compile gcjwebplugin (disabled by --disable-plugin)\n                           default=yes\n-  --enable-regen-headers  automatically regenerate JNI headers default=no\n+  --enable-regen-headers  automatically regenerate JNI headers default=yes if\n+                          headers don't exist\n   --enable-tool-wrappers  create tool wrapper binaries default=no\n   --enable-static[=PKGS]\n                           build static libraries [default=no]\n@@ -1077,6 +1078,7 @@ Optional Features:\n                           will the VM explicitly invoke java.lang.System's\n                           static initialization methods default=no\n   --enable-examples       enable build of the examples default=yes\n+  --enable-tools          enable build of the tools default=yes\n   --enable-portable-native-sync\n                           synchronize VM threads portably\n   --enable-local-sockets  enables local (AF_LOCAL) socket API default: no\n@@ -1100,21 +1102,14 @@ Optional Packages:\n   --with-qt4dir=DIR       Qt4 installation directory used for OS-X. For other\n                           systems use pkg-config.\n   --with-javah            specify path or name of a javah-like program\n-  --with-gcj              bytecode compilation with gcj\n-  --with-jikes            bytecode compilation with jikes\n-  --with-kjc              bytecode compilation with kjc\n-  --with-ecj              bytecode compilation with ecj\n-  --with-javac            bytecode compilation with javac\n-  --with-classpath        specify path to a classes.zip like file\n   --with-vm-classes       specify path to VM override source files\n   --with-ecj-jar=ABS.PATH specify jar file containing the Eclipse Java\n                           Compiler\n   --with-fastjar=PATH     define to use a fastjar style tool\n   --with-glibj            define what to install (zip|flat|both|none|build)\n                           [default=zip]\n   --with-gjdoc            generate documentation using gjdoc (default is NO)\n-  --with-jay              Regenerate the parsers with jay must be given the\n-                          path to the jay executable\n+  --with-jay=DIR|PATH     Regenerate the parsers with jay\n   --with-glibj-zip=ABS.PATH\n                           use prebuilt glibj.zip class library\n   --with-escher=ABS.PATH  specify path to escher dir or JAR for X peers\n@@ -1230,7 +1225,7 @@ fi\n test -n \"$ac_init_help\" && exit 0\n if $ac_init_version; then\n   cat <<\\_ACEOF\n-GNU Classpath configure 0.96-pre\n+GNU Classpath configure 0.97.2\n generated by GNU Autoconf 2.59\n \n Copyright (C) 2003 Free Software Foundation, Inc.\n@@ -1244,7 +1239,7 @@ cat >&5 <<_ACEOF\n This file contains any messages produced by compilers while\n running configure, to aid debugging if configure makes a mistake.\n \n-It was created by GNU Classpath $as_me 0.96-pre, which was\n+It was created by GNU Classpath $as_me 0.97.2, which was\n generated by GNU Autoconf 2.59.  Invocation command line was\n \n   $ $0 $@\n@@ -2105,7 +2100,7 @@ fi\n \n # Define the identity of the package.\n  PACKAGE='classpath'\n- VERSION='0.96-pre'\n+ VERSION='0.97.2'\n \n \n cat >>confdefs.h <<_ACEOF\n@@ -4852,10 +4847,14 @@ if test \"${enable_regen_headers+set}\" = set; then\n   case \"${enableval}\" in\n                 yes) REGENERATE_JNI_HEADERS=yes ;;\n                 no) REGENERATE_JNI_HEADERS=no ;;\n-                *) REGENERATE_JNI_HEADERS=no ;;\n+                *) REGENERATE_JNI_HEADERS=yes ;;\n               esac\n else\n-  REGENERATE_JNI_HEADERS=no\n+  if test -e include/java_lang_VMSystem.h; then\n+\t\t\tREGENERATE_JNI_HEADERS=no ;\n+\t\t   else\n+\t\t\tREGENERATE_JNI_HEADERS=yes ;\n+\t       fi\n fi;\n \n \n@@ -5753,13 +5752,13 @@ if test \"${lt_cv_nm_interface+set}\" = set; then\n else\n   lt_cv_nm_interface=\"BSD nm\"\n   echo \"int some_variable = 0;\" > conftest.$ac_ext\n-  (eval echo \"\\\"\\$as_me:5756: $ac_compile\\\"\" >&5)\n+  (eval echo \"\\\"\\$as_me:5755: $ac_compile\\\"\" >&5)\n   (eval \"$ac_compile\" 2>conftest.err)\n   cat conftest.err >&5\n-  (eval echo \"\\\"\\$as_me:5759: $NM \\\\\\\"conftest.$ac_objext\\\\\\\"\\\"\" >&5)\n+  (eval echo \"\\\"\\$as_me:5758: $NM \\\\\\\"conftest.$ac_objext\\\\\\\"\\\"\" >&5)\n   (eval \"$NM \\\"conftest.$ac_objext\\\"\" 2>conftest.err > conftest.out)\n   cat conftest.err >&5\n-  (eval echo \"\\\"\\$as_me:5762: output\\\"\" >&5)\n+  (eval echo \"\\\"\\$as_me:5761: output\\\"\" >&5)\n   cat conftest.out >&5\n   if $GREP 'External.*some_variable' conftest.out > /dev/null; then\n     lt_cv_nm_interface=\"MS dumpbin\"\n@@ -6803,7 +6802,7 @@ ia64-*-hpux*)\n   ;;\n *-*-irix6*)\n   # Find out which ABI we are using.\n-  echo '#line 6806 \"configure\"' > conftest.$ac_ext\n+  echo '#line 6805 \"configure\"' > conftest.$ac_ext\n   if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n   (eval $ac_compile) 2>&5\n   ac_status=$?\n@@ -7435,11 +7434,11 @@ else\n    -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n    -e 's: [^ ]*conftest\\.: $lt_compiler_flag&:; t' \\\n    -e 's:$: $lt_compiler_flag:'`\n-   (eval echo \"\\\"\\$as_me:7438: $lt_compile\\\"\" >&5)\n+   (eval echo \"\\\"\\$as_me:7437: $lt_compile\\\"\" >&5)\n    (eval \"$lt_compile\" 2>conftest.err)\n    ac_status=$?\n    cat conftest.err >&5\n-   echo \"$as_me:7442: \\$? = $ac_status\" >&5\n+   echo \"$as_me:7441: \\$? = $ac_status\" >&5\n    if (exit $ac_status) && test -s \"$ac_outfile\"; then\n      # The compiler can only warn and ignore the option if not recognized\n      # So say no if there are warnings other than the usual output.\n@@ -7757,11 +7756,11 @@ else\n    -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n    -e 's: [^ ]*conftest\\.: $lt_compiler_flag&:; t' \\\n    -e 's:$: $lt_compiler_flag:'`\n-   (eval echo \"\\\"\\$as_me:7760: $lt_compile\\\"\" >&5)\n+   (eval echo \"\\\"\\$as_me:7759: $lt_compile\\\"\" >&5)\n    (eval \"$lt_compile\" 2>conftest.err)\n    ac_status=$?\n    cat conftest.err >&5\n-   echo \"$as_me:7764: \\$? = $ac_status\" >&5\n+   echo \"$as_me:7763: \\$? = $ac_status\" >&5\n    if (exit $ac_status) && test -s \"$ac_outfile\"; then\n      # The compiler can only warn and ignore the option if not recognized\n      # So say no if there are warnings other than the usual output.\n@@ -7862,11 +7861,11 @@ else\n    -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n    -e 's: [^ ]*conftest\\.: $lt_compiler_flag&:; t' \\\n    -e 's:$: $lt_compiler_flag:'`\n-   (eval echo \"\\\"\\$as_me:7865: $lt_compile\\\"\" >&5)\n+   (eval echo \"\\\"\\$as_me:7864: $lt_compile\\\"\" >&5)\n    (eval \"$lt_compile\" 2>out/conftest.err)\n    ac_status=$?\n    cat out/conftest.err >&5\n-   echo \"$as_me:7869: \\$? = $ac_status\" >&5\n+   echo \"$as_me:7868: \\$? = $ac_status\" >&5\n    if (exit $ac_status) && test -s out/conftest2.$ac_objext\n    then\n      # The compiler can only warn and ignore the option if not recognized\n@@ -7917,11 +7916,11 @@ else\n    -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n    -e 's: [^ ]*conftest\\.: $lt_compiler_flag&:; t' \\\n    -e 's:$: $lt_compiler_flag:'`\n-   (eval echo \"\\\"\\$as_me:7920: $lt_compile\\\"\" >&5)\n+   (eval echo \"\\\"\\$as_me:7919: $lt_compile\\\"\" >&5)\n    (eval \"$lt_compile\" 2>out/conftest.err)\n    ac_status=$?\n    cat out/conftest.err >&5\n-   echo \"$as_me:7924: \\$? = $ac_status\" >&5\n+   echo \"$as_me:7923: \\$? = $ac_status\" >&5\n    if (exit $ac_status) && test -s out/conftest2.$ac_objext\n    then\n      # The compiler can only warn and ignore the option if not recognized\n@@ -10769,7 +10768,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10772 \"configure\"\n+#line 10771 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -10869,7 +10868,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10872 \"configure\"\n+#line 10871 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -15312,11 +15311,11 @@ else\n    -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n    -e 's: [^ ]*conftest\\.: $lt_compiler_flag&:; t' \\\n    -e 's:$: $lt_compiler_flag:'`\n-   (eval echo \"\\\"\\$as_me:15315: $lt_compile\\\"\" >&5)\n+   (eval echo \"\\\"\\$as_me:15314: $lt_compile\\\"\" >&5)\n    (eval \"$lt_compile\" 2>conftest.err)\n    ac_status=$?\n    cat conftest.err >&5\n-   echo \"$as_me:15319: \\$? = $ac_status\" >&5\n+   echo \"$as_me:15318: \\$? = $ac_status\" >&5\n    if (exit $ac_status) && test -s \"$ac_outfile\"; then\n      # The compiler can only warn and ignore the option if not recognized\n      # So say no if there are warnings other than the usual output.\n@@ -15411,11 +15410,11 @@ else\n    -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n    -e 's: [^ ]*conftest\\.: $lt_compiler_flag&:; t' \\\n    -e 's:$: $lt_compiler_flag:'`\n-   (eval echo \"\\\"\\$as_me:15414: $lt_compile\\\"\" >&5)\n+   (eval echo \"\\\"\\$as_me:15413: $lt_compile\\\"\" >&5)\n    (eval \"$lt_compile\" 2>out/conftest.err)\n    ac_status=$?\n    cat out/conftest.err >&5\n-   echo \"$as_me:15418: \\$? = $ac_status\" >&5\n+   echo \"$as_me:15417: \\$? = $ac_status\" >&5\n    if (exit $ac_status) && test -s out/conftest2.$ac_objext\n    then\n      # The compiler can only warn and ignore the option if not recognized\n@@ -15463,11 +15462,11 @@ else\n    -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n    -e 's: [^ ]*conftest\\.: $lt_compiler_flag&:; t' \\\n    -e 's:$: $lt_compiler_flag:'`\n-   (eval echo \"\\\"\\$as_me:15466: $lt_compile\\\"\" >&5)\n+   (eval echo \"\\\"\\$as_me:15465: $lt_compile\\\"\" >&5)\n    (eval \"$lt_compile\" 2>out/conftest.err)\n    ac_status=$?\n    cat out/conftest.err >&5\n-   echo \"$as_me:15470: \\$? = $ac_status\" >&5\n+   echo \"$as_me:15469: \\$? = $ac_status\" >&5\n    if (exit $ac_status) && test -s out/conftest2.$ac_objext\n    then\n      # The compiler can only warn and ignore the option if not recognized\n@@ -17102,6 +17101,10 @@ fi\n \n \n \n+\n+\n+\n+\n \n \n \n@@ -17117,7 +17120,9 @@ for ac_header in unistd.h sys/types.h sys/config.h sys/ioctl.h \\\n \t\t    sys/mman.h \\\n \t\t    magic.h \\\n                     sys/event.h sys/epoll.h \\\n-\t\t    ifaddrs.h\n+\t\t    ifaddrs.h \\\n+\t\t    netinet/in_systm.h netinet/ip.h net/if.h \\\n+\t\t    sys/loadavg.h\n do\n as_ac_Header=`echo \"ac_cv_header_$ac_header\" | $as_tr_sh`\n if eval \"test \\\"\\${$as_ac_Header+set}\\\" = set\"; then\n@@ -17533,6 +17538,7 @@ fi\n \n \n \n+\n \n \n for ac_func in ftruncate fsync select \\\n@@ -17543,11 +17549,12 @@ for ac_func in ftruncate fsync select \\\n \t\t  gethostbyname_r localtime_r \\\n \t\t  strerror_r \\\n                   fcntl \\\n+\t\t  statvfs \\\n \t\t  mmap munmap mincore msync madvise getpagesize sysconf \\\n \t\t  lstat readlink \\\n  \t\t  inet_aton inet_addr inet_pton \\\n \t\t  getifaddrs kqueue kevent epoll_create \\\n-                  readdir_r getloadavg\n+                  getloadavg\n do\n as_ac_var=`echo \"ac_cv_func_$ac_func\" | $as_tr_sh`\n echo \"$as_me:$LINENO: checking for $ac_func\" >&5\n@@ -19945,15 +19952,15 @@ ac_x_header_dirs='\n /usr/openwin/share/include'\n \n if test \"$ac_x_includes\" = no; then\n-  # Guess where to find include files, by looking for Xlib.h.\n+  # Guess where to find include files, by looking for Intrinsic.h.\n   # First, try using that file with no special directory specified.\n   cat >conftest.$ac_ext <<_ACEOF\n /* confdefs.h.  */\n _ACEOF\n cat confdefs.h >>conftest.$ac_ext\n cat >>conftest.$ac_ext <<_ACEOF\n /* end confdefs.h.  */\n-#include <X11/Xlib.h>\n+#include <X11/Intrinsic.h>\n _ACEOF\n if { (eval echo \"$as_me:$LINENO: \\\"$ac_cpp conftest.$ac_ext\\\"\") >&5\n   (eval $ac_cpp conftest.$ac_ext) 2>conftest.er1\n@@ -19980,7 +19987,7 @@ else\n sed 's/^/| /' conftest.$ac_ext >&5\n \n   for ac_dir in $ac_x_header_dirs; do\n-  if test -r \"$ac_dir/X11/Xlib.h\"; then\n+  if test -r \"$ac_dir/X11/Intrinsic.h\"; then\n     ac_x_includes=$ac_dir\n     break\n   fi\n@@ -19994,7 +20001,7 @@ if test \"$ac_x_libraries\" = no; then\n   # See if we find them without any special options.\n   # Don't add to $LIBS permanently.\n   ac_save_LIBS=$LIBS\n-  LIBS=\"-lX11 $LIBS\"\n+  LIBS=\"-lXt $LIBS\"\n   if test x$gcc_no_link = xyes; then\n   { { echo \"$as_me:$LINENO: error: Link tests are not allowed after GCC_NO_EXECUTABLES.\" >&5\n echo \"$as_me: error: Link tests are not allowed after GCC_NO_EXECUTABLES.\" >&2;}\n@@ -20006,11 +20013,11 @@ _ACEOF\n cat confdefs.h >>conftest.$ac_ext\n cat >>conftest.$ac_ext <<_ACEOF\n /* end confdefs.h.  */\n-#include <X11/Xlib.h>\n+#include <X11/Intrinsic.h>\n int\n main ()\n {\n-XrmInitialize ()\n+XtMalloc (0)\n   ;\n   return 0;\n }\n@@ -21323,7 +21330,7 @@ fi\n echo \"$as_me: error: GTK+ peers requested but no X library available\" >&2;}\n    { (exit 1); exit 1; }; }\n     fi\n-        echo \"$as_me:$LINENO: checking for XTestQueryExtension in -lXtst\" >&5\n+            echo \"$as_me:$LINENO: checking for XTestQueryExtension in -lXtst\" >&5\n echo $ECHO_N \"checking for XTestQueryExtension in -lXtst... $ECHO_C\" >&6\n if test \"${ac_cv_lib_Xtst_XTestQueryExtension+set}\" = set; then\n   echo $ECHO_N \"(cached) $ECHO_C\" >&6\n@@ -21393,15 +21400,18 @@ fi\n echo \"$as_me:$LINENO: result: $ac_cv_lib_Xtst_XTestQueryExtension\" >&5\n echo \"${ECHO_T}$ac_cv_lib_Xtst_XTestQueryExtension\" >&6\n if test $ac_cv_lib_Xtst_XTestQueryExtension = yes; then\n-  XTEST_LIBS=\"$XTEST_LIBS -lX11 -lXtst\"\n+\n+cat >>confdefs.h <<\\_ACEOF\n+#define HAVE_XTEST 1\n+_ACEOF\n+XTEST_LIBS=\"$XTEST_LIBS -X11 -lXtst\"\n else\n-  { { echo \"$as_me:$LINENO: error: libXtst NOT found, required for GdkRobot\" >&5\n-echo \"$as_me: error: libXtst NOT found, required for GdkRobot\" >&2;}\n-   { (exit 1); exit 1; }; }\n+  true\n fi\n \n \n \n+\n   succeeded=no\n \n   if test -z \"$PKG_CONFIG\"; then\n@@ -22165,7 +22175,7 @@ echo \"$as_me: error: Library requirements (gdk-2.0 >= 2.8) not met; consider adj\n \n                 USE_GCONF_PREFS_PEER=$enable_default_preferences_peer\n     if test \"$USE_GCONF_PREFS_PEER\" = \"\"; then\n-   \tDEFAULT_PREFS_PEER=gnu.java.util.prefs.GConfBasedFactory\n+      DEFAULT_PREFS_PEER=gnu.java.util.prefs.GConfBasedFactory\n     fi\n   fi\n \n@@ -22479,6 +22489,107 @@ echo \"$as_me: error: Library requirements (gstreamer-plugins-base-$GST_MAJORMINO\n \tGST_PLUGIN_LDFLAGS='-module -avoid-version -Wno-unused-parameter -no-undefined'\n \n \n+\n+  succeeded=no\n+\n+  if test -z \"$PKG_CONFIG\"; then\n+    # Extract the first word of \"pkg-config\", so it can be a program name with args.\n+set dummy pkg-config; ac_word=$2\n+echo \"$as_me:$LINENO: checking for $ac_word\" >&5\n+echo $ECHO_N \"checking for $ac_word... $ECHO_C\" >&6\n+if test \"${ac_cv_path_PKG_CONFIG+set}\" = set; then\n+  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n+else\n+  case $PKG_CONFIG in\n+  [\\\\/]* | ?:[\\\\/]*)\n+  ac_cv_path_PKG_CONFIG=\"$PKG_CONFIG\" # Let the user override the test with a path.\n+  ;;\n+  *)\n+  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\n+for as_dir in $PATH\n+do\n+  IFS=$as_save_IFS\n+  test -z \"$as_dir\" && as_dir=.\n+  for ac_exec_ext in '' $ac_executable_extensions; do\n+  if $as_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n+    ac_cv_path_PKG_CONFIG=\"$as_dir/$ac_word$ac_exec_ext\"\n+    echo \"$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext\" >&5\n+    break 2\n+  fi\n+done\n+done\n+\n+  test -z \"$ac_cv_path_PKG_CONFIG\" && ac_cv_path_PKG_CONFIG=\"no\"\n+  ;;\n+esac\n+fi\n+PKG_CONFIG=$ac_cv_path_PKG_CONFIG\n+\n+if test -n \"$PKG_CONFIG\"; then\n+  echo \"$as_me:$LINENO: result: $PKG_CONFIG\" >&5\n+echo \"${ECHO_T}$PKG_CONFIG\" >&6\n+else\n+  echo \"$as_me:$LINENO: result: no\" >&5\n+echo \"${ECHO_T}no\" >&6\n+fi\n+\n+  fi\n+\n+  if test \"$PKG_CONFIG\" = \"no\" ; then\n+     echo \"*** The pkg-config script could not be found. Make sure it is\"\n+     echo \"*** in your path, or set the PKG_CONFIG environment variable\"\n+     echo \"*** to the full path to pkg-config.\"\n+     echo \"*** Or see http://www.freedesktop.org/software/pkgconfig to get pkg-config.\"\n+  else\n+     PKG_CONFIG_MIN_VERSION=0.9.0\n+     if $PKG_CONFIG --atleast-pkgconfig-version $PKG_CONFIG_MIN_VERSION; then\n+        echo \"$as_me:$LINENO: checking for gdk-2.0 >= 2.8\" >&5\n+echo $ECHO_N \"checking for gdk-2.0 >= 2.8... $ECHO_C\" >&6\n+\n+        if $PKG_CONFIG --exists \"gdk-2.0 >= 2.8\" ; then\n+            echo \"$as_me:$LINENO: result: yes\" >&5\n+echo \"${ECHO_T}yes\" >&6\n+            succeeded=yes\n+\n+            echo \"$as_me:$LINENO: checking GDK_CFLAGS\" >&5\n+echo $ECHO_N \"checking GDK_CFLAGS... $ECHO_C\" >&6\n+            GDK_CFLAGS=`$PKG_CONFIG --cflags \"gdk-2.0 >= 2.8\"`\n+            echo \"$as_me:$LINENO: result: $GDK_CFLAGS\" >&5\n+echo \"${ECHO_T}$GDK_CFLAGS\" >&6\n+\n+            echo \"$as_me:$LINENO: checking GDK_LIBS\" >&5\n+echo $ECHO_N \"checking GDK_LIBS... $ECHO_C\" >&6\n+            GDK_LIBS=`$PKG_CONFIG --libs \"gdk-2.0 >= 2.8\"`\n+            echo \"$as_me:$LINENO: result: $GDK_LIBS\" >&5\n+echo \"${ECHO_T}$GDK_LIBS\" >&6\n+        else\n+            GDK_CFLAGS=\"\"\n+            GDK_LIBS=\"\"\n+            ## If we have a custom action on failure, don't print errors, but\n+            ## do set a variable so people can do so.\n+            GDK_PKG_ERRORS=`$PKG_CONFIG --errors-to-stdout --print-errors \"gdk-2.0 >= 2.8\"`\n+            echo $GDK_PKG_ERRORS\n+        fi\n+\n+\n+\n+     else\n+        echo \"*** Your version of pkg-config is too old. You need version $PKG_CONFIG_MIN_VERSION or newer.\"\n+        echo \"*** See http://www.freedesktop.org/software/pkgconfig\"\n+     fi\n+  fi\n+\n+  if test $succeeded = yes; then\n+     :\n+  else\n+     { { echo \"$as_me:$LINENO: error: Library requirements (gdk-2.0 >= 2.8) not met; consider adjusting the PKG_CONFIG_PATH environment variable if your libraries are in a nonstandard prefix so pkg-config can find them.\" >&5\n+echo \"$as_me: error: Library requirements (gdk-2.0 >= 2.8) not met; consider adjusting the PKG_CONFIG_PATH environment variable if your libraries are in a nonstandard prefix so pkg-config can find them.\" >&2;}\n+   { (exit 1); exit 1; }; }\n+  fi\n+\n+\n+\n+\n \t\tGSTREAMER_FILE_READER=gnu.javax.sound.sampled.gstreamer.io.GstAudioFileReader\n \tGSTREAMER_MIXER_PROVIDER=gnu.javax.sound.sampled.gstreamer.GStreamerMixerProvider\n   fi\n@@ -23805,7 +23916,7 @@ fi\n \n     fi\n   else\n-    for ac_prog in gjavah gcjh-wrapper-4.1 gcjh-4.1 gcjh javah\n+    for ac_prog in gjavah gjavah-4.3 gjavah-4.2 gjavah-4.1 gcjh-wrapper-4.1 gcjh-4.1 javah\n do\n   # Extract the first word of \"$ac_prog\", so it can be a program name with args.\n set dummy $ac_prog; ac_word=$2\n@@ -23904,7 +24015,7 @@ fi\n \n     fi\n   else\n-    for ac_prog in gjavah gcjh-wrapper-4.1 gcjh-4.1 gcjh javah\n+    for ac_prog in gjavah gjavah-4.3 gjavah-4.2 gjavah-4.1 gcjh-wrapper-4.1 gcjh-4.1 javah\n do\n   # Extract the first word of \"$ac_prog\", so it can be a program name with args.\n set dummy $ac_prog; ac_word=$2\n@@ -24006,7 +24117,7 @@ fi\n \n     fi\n   else\n-    for ac_prog in gjavah gcjh-wrapper-4.1 gcjh-4.1 gcjh javah\n+    for ac_prog in gjavah gjavah-4.3 gjavah-4.2 gjavah-4.1 gcjh-wrapper-4.1 gcjh-4.1 javah\n do\n   # Extract the first word of \"$ac_prog\", so it can be a program name with args.\n set dummy $ac_prog; ac_word=$2\n@@ -24091,30 +24202,121 @@ echo \"$as_me: WARNING: no\" >&2;}\n fi\n \n \n-  user_specified_javac=\n \n+# Check whether --with-vm-classes or --without-vm-classes was given.\n+if test \"${with_vm_classes+set}\" = set; then\n+  withval=\"$with_vm_classes\"\n+  vm_classes=\"$with_vm_classes\"\n+else\n+  vm_classes='${top_srcdir}/vm/reference'\n+fi;\n \n \n-# Check whether --with-gcj or --without-gcj was given.\n-if test \"${with_gcj+set}\" = set; then\n-  withval=\"$with_gcj\"\n \n-    if test \"x${withval}\" != x && test \"x${withval}\" != xyes && test \"x${withval}\" != xno; then\n+echo \"$as_me:$LINENO: checking whether to enable maintainer-specific portions of Makefiles\" >&5\n+echo $ECHO_N \"checking whether to enable maintainer-specific portions of Makefiles... $ECHO_C\" >&6\n+    # Check whether --enable-maintainer-mode or --disable-maintainer-mode was given.\n+if test \"${enable_maintainer_mode+set}\" = set; then\n+  enableval=\"$enable_maintainer_mode\"\n+  USE_MAINTAINER_MODE=$enableval\n+else\n+  USE_MAINTAINER_MODE=no\n+fi;\n+  echo \"$as_me:$LINENO: result: $USE_MAINTAINER_MODE\" >&5\n+echo \"${ECHO_T}$USE_MAINTAINER_MODE\" >&6\n \n-  if test \"x${withval}\" != x; then\n-    if test -f \"${withval}\"; then\n-      GCJ=\"${withval}\"\n-    else\n-      # Extract the first word of \"\"${withval}\"\", so it can be a program name with args.\n-set dummy \"${withval}\"; ac_word=$2\n+\n+if test $USE_MAINTAINER_MODE = yes; then\n+  MAINTAINER_MODE_TRUE=\n+  MAINTAINER_MODE_FALSE='#'\n+else\n+  MAINTAINER_MODE_TRUE='#'\n+  MAINTAINER_MODE_FALSE=\n+fi\n+\n+  MAINT=$MAINTAINER_MODE_TRUE\n+\n+\n+\n+# Check whether --enable-debug or --disable-debug was given.\n+if test \"${enable_debug+set}\" = set; then\n+  enableval=\"$enable_debug\"\n+  case \"${enableval}\" in\n+                yes)\n+              \tLIBDEBUG=\"true\"\n+\n+cat >>confdefs.h <<\\_ACEOF\n+#define DEBUG 1\n+_ACEOF\n+\n+              \t;;\n+                no)   LIBDEBUG=\"false\" ;;\n+                *) \t{ { echo \"$as_me:$LINENO: error: bad value ${enableval} for --enable-debug\" >&5\n+echo \"$as_me: error: bad value ${enableval} for --enable-debug\" >&2;}\n+   { (exit 1); exit 1; }; } ;;\n+              esac\n+else\n+  LIBDEBUG=\"false\"\n+fi;\n+\n+\n+# Check whether --enable-load-library or --disable-load-library was given.\n+if test \"${enable_load_library+set}\" = set; then\n+  enableval=\"$enable_load_library\"\n+  case \"${enableval}\" in\n+                yes) INIT_LOAD_LIBRARY=\"true\" ;;\n+                no) INIT_LOAD_LIBRARY=\"false\" ;;\n+                *) { { echo \"$as_me:$LINENO: error: bad value ${enableval} for --enable-load-library\" >&5\n+echo \"$as_me: error: bad value ${enableval} for --enable-load-library\" >&2;}\n+   { (exit 1); exit 1; }; } ;;\n+              esac\n+else\n+  INIT_LOAD_LIBRARY=\"true\"\n+fi;\n+\n+\n+\n+\n+# Check whether --with-ecj-jar or --without-ecj-jar was given.\n+if test \"${with_ecj_jar+set}\" = set; then\n+  withval=\"$with_ecj_jar\"\n+  ECJ_JAR=$withval\n+else\n+  if test -f $multi_basedir/ecj.jar; then\n+\t       ECJ_JAR='$(jardir)/ecj.jar'\n+\t     fi\n+fi;\n+\n+\n+# Check whether --enable-java-lang-system-explicit-initialization or --disable-java-lang-system-explicit-initialization was given.\n+if test \"${enable_java_lang_system_explicit_initialization+set}\" = set; then\n+  enableval=\"$enable_java_lang_system_explicit_initialization\"\n+  case \"${enableval}\" in\n+                yes|true) JAVA_LANG_SYSTEM_EXPLICIT_INITIALIZATION=\"true\" ;;\n+                no|false) JAVA_LANG_SYSTEM_EXPLICIT_INITIALIZATION=\"false\" ;;\n+                *) { { echo \"$as_me:$LINENO: error: bad value ${enableval} for --enable-java-lang-system-explicit-initialization\" >&5\n+echo \"$as_me: error: bad value ${enableval} for --enable-java-lang-system-explicit-initialization\" >&2;}\n+   { (exit 1); exit 1; }; } ;;\n+              esac\n+else\n+  JAVA_LANG_SYSTEM_EXPLICIT_INITIALIZATION=\"false\"\n+fi;\n+\n+\n+\n+REMOVE=\"\"\n+\n+\n+# Extract the first word of \"mkdir\", so it can be a program name with args.\n+set dummy mkdir; ac_word=$2\n echo \"$as_me:$LINENO: checking for $ac_word\" >&5\n echo $ECHO_N \"checking for $ac_word... $ECHO_C\" >&6\n-if test \"${ac_cv_path_GCJ+set}\" = set; then\n+if test \"${ac_cv_path_MKDIR+set}\" = set; then\n   echo $ECHO_N \"(cached) $ECHO_C\" >&6\n else\n-  case $GCJ in\n+  case $MKDIR in\n   [\\\\/]* | ?:[\\\\/]*)\n-  ac_cv_path_GCJ=\"$GCJ\" # Let the user override the test with a path.\n+  ac_cv_path_MKDIR=\"$MKDIR\" # Let the user override the test with a path.\n   ;;\n   *)\n   as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\n@@ -24124,7 +24326,7 @@ do\n   test -z \"$as_dir\" && as_dir=.\n   for ac_exec_ext in '' $ac_executable_extensions; do\n   if $as_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n-    ac_cv_path_GCJ=\"$as_dir/$ac_word$ac_exec_ext\"\n+    ac_cv_path_MKDIR=\"$as_dir/$ac_word$ac_exec_ext\"\n     echo \"$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext\" >&5\n     break 2\n   fi\n@@ -24134,28 +24336,26 @@ done\n   ;;\n esac\n fi\n-GCJ=$ac_cv_path_GCJ\n+MKDIR=$ac_cv_path_MKDIR\n \n-if test -n \"$GCJ\"; then\n-  echo \"$as_me:$LINENO: result: $GCJ\" >&5\n-echo \"${ECHO_T}$GCJ\" >&6\n+if test -n \"$MKDIR\"; then\n+  echo \"$as_me:$LINENO: result: $MKDIR\" >&5\n+echo \"${ECHO_T}$MKDIR\" >&6\n else\n   echo \"$as_me:$LINENO: result: no\" >&5\n echo \"${ECHO_T}no\" >&6\n fi\n \n-    fi\n-  else\n-    # Extract the first word of \"\"gcj\"\", so it can be a program name with args.\n-set dummy \"gcj\"; ac_word=$2\n+# Extract the first word of \"cp\", so it can be a program name with args.\n+set dummy cp; ac_word=$2\n echo \"$as_me:$LINENO: checking for $ac_word\" >&5\n echo $ECHO_N \"checking for $ac_word... $ECHO_C\" >&6\n-if test \"${ac_cv_path_GCJ+set}\" = set; then\n+if test \"${ac_cv_path_CP+set}\" = set; then\n   echo $ECHO_N \"(cached) $ECHO_C\" >&6\n else\n-  case $GCJ in\n+  case $CP in\n   [\\\\/]* | ?:[\\\\/]*)\n-  ac_cv_path_GCJ=\"$GCJ\" # Let the user override the test with a path.\n+  ac_cv_path_CP=\"$CP\" # Let the user override the test with a path.\n   ;;\n   *)\n   as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\n@@ -24165,7 +24365,7 @@ do\n   test -z \"$as_dir\" && as_dir=.\n   for ac_exec_ext in '' $ac_executable_extensions; do\n   if $as_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n-    ac_cv_path_GCJ=\"$as_dir/$ac_word$ac_exec_ext\"\n+    ac_cv_path_CP=\"$as_dir/$ac_word$ac_exec_ext\"\n     echo \"$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext\" >&5\n     break 2\n   fi\n@@ -24175,1717 +24375,11 @@ done\n   ;;\n esac\n fi\n-GCJ=$ac_cv_path_GCJ\n+CP=$ac_cv_path_CP\n \n-if test -n \"$GCJ\"; then\n-  echo \"$as_me:$LINENO: result: $GCJ\" >&5\n-echo \"${ECHO_T}$GCJ\" >&6\n-else\n-  echo \"$as_me:$LINENO: result: no\" >&5\n-echo \"${ECHO_T}no\" >&6\n-fi\n-\n-  fi\n-    if test \"x$GCJ\" != x; then\n-    echo \"$as_me:$LINENO: checking gcj version 4.0\" >&5\n-echo $ECHO_N \"checking gcj version 4.0... $ECHO_C\" >&6\n-    ac_ext=c\n-ac_cpp='$CPP $CPPFLAGS'\n-ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n-ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n-ac_compiler_gnu=$ac_cv_c_compiler_gnu\n-\n-    cat >conftest.$ac_ext <<_ACEOF\n-#if __GNUC__ <= 3\n-    #error GCJ 4.0.0 or higher is required\n-    #endif\n-\n-_ACEOF\n-    $GCJ -E conftest.c > /dev/null\n-    gcj_4_result=$?\n-    if test \"x$gcj_4_result\" = \"x0\"; then\n-      echo \"$as_me:$LINENO: result: 4.0 or higher found\" >&5\n-echo \"${ECHO_T}4.0 or higher found\" >&6\n-    else\n-      { echo \"$as_me:$LINENO: WARNING: 4.0 or higher required\" >&5\n-echo \"$as_me: WARNING: 4.0 or higher required\" >&2;}\n-    fi\n-    ac_ext=c\n-ac_cpp='$CPP $CPPFLAGS'\n-ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n-ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n-ac_compiler_gnu=$ac_cv_c_compiler_gnu\n-\n-  fi\n-\n-    else\n-      if test \"x${withval}\" != xno; then\n-\n-  if test \"x\" != x; then\n-    if test -f \"\"; then\n-      GCJ=\"\"\n-    else\n-      # Extract the first word of \"\"\"\", so it can be a program name with args.\n-set dummy \"\"; ac_word=$2\n-echo \"$as_me:$LINENO: checking for $ac_word\" >&5\n-echo $ECHO_N \"checking for $ac_word... $ECHO_C\" >&6\n-if test \"${ac_cv_path_GCJ+set}\" = set; then\n-  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n-else\n-  case $GCJ in\n-  [\\\\/]* | ?:[\\\\/]*)\n-  ac_cv_path_GCJ=\"$GCJ\" # Let the user override the test with a path.\n-  ;;\n-  *)\n-  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\n-for as_dir in $PATH\n-do\n-  IFS=$as_save_IFS\n-  test -z \"$as_dir\" && as_dir=.\n-  for ac_exec_ext in '' $ac_executable_extensions; do\n-  if $as_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n-    ac_cv_path_GCJ=\"$as_dir/$ac_word$ac_exec_ext\"\n-    echo \"$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext\" >&5\n-    break 2\n-  fi\n-done\n-done\n-\n-  ;;\n-esac\n-fi\n-GCJ=$ac_cv_path_GCJ\n-\n-if test -n \"$GCJ\"; then\n-  echo \"$as_me:$LINENO: result: $GCJ\" >&5\n-echo \"${ECHO_T}$GCJ\" >&6\n-else\n-  echo \"$as_me:$LINENO: result: no\" >&5\n-echo \"${ECHO_T}no\" >&6\n-fi\n-\n-    fi\n-  else\n-    # Extract the first word of \"\"gcj\"\", so it can be a program name with args.\n-set dummy \"gcj\"; ac_word=$2\n-echo \"$as_me:$LINENO: checking for $ac_word\" >&5\n-echo $ECHO_N \"checking for $ac_word... $ECHO_C\" >&6\n-if test \"${ac_cv_path_GCJ+set}\" = set; then\n-  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n-else\n-  case $GCJ in\n-  [\\\\/]* | ?:[\\\\/]*)\n-  ac_cv_path_GCJ=\"$GCJ\" # Let the user override the test with a path.\n-  ;;\n-  *)\n-  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\n-for as_dir in $PATH\n-do\n-  IFS=$as_save_IFS\n-  test -z \"$as_dir\" && as_dir=.\n-  for ac_exec_ext in '' $ac_executable_extensions; do\n-  if $as_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n-    ac_cv_path_GCJ=\"$as_dir/$ac_word$ac_exec_ext\"\n-    echo \"$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext\" >&5\n-    break 2\n-  fi\n-done\n-done\n-\n-  ;;\n-esac\n-fi\n-GCJ=$ac_cv_path_GCJ\n-\n-if test -n \"$GCJ\"; then\n-  echo \"$as_me:$LINENO: result: $GCJ\" >&5\n-echo \"${ECHO_T}$GCJ\" >&6\n-else\n-  echo \"$as_me:$LINENO: result: no\" >&5\n-echo \"${ECHO_T}no\" >&6\n-fi\n-\n-  fi\n-    if test \"x$GCJ\" != x; then\n-    echo \"$as_me:$LINENO: checking gcj version 4.0\" >&5\n-echo $ECHO_N \"checking gcj version 4.0... $ECHO_C\" >&6\n-    ac_ext=c\n-ac_cpp='$CPP $CPPFLAGS'\n-ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n-ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n-ac_compiler_gnu=$ac_cv_c_compiler_gnu\n-\n-    cat >conftest.$ac_ext <<_ACEOF\n-#if __GNUC__ <= 3\n-    #error GCJ 4.0.0 or higher is required\n-    #endif\n-\n-_ACEOF\n-    $GCJ -E conftest.c > /dev/null\n-    gcj_4_result=$?\n-    if test \"x$gcj_4_result\" = \"x0\"; then\n-      echo \"$as_me:$LINENO: result: 4.0 or higher found\" >&5\n-echo \"${ECHO_T}4.0 or higher found\" >&6\n-    else\n-      { echo \"$as_me:$LINENO: WARNING: 4.0 or higher required\" >&5\n-echo \"$as_me: WARNING: 4.0 or higher required\" >&2;}\n-    fi\n-    ac_ext=c\n-ac_cpp='$CPP $CPPFLAGS'\n-ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n-ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n-ac_compiler_gnu=$ac_cv_c_compiler_gnu\n-\n-  fi\n-\n-      fi\n-    fi\n-    user_specified_javac=gcj\n-\n-else\n-\n-\n-  if test \"x\" != x; then\n-    if test -f \"\"; then\n-      GCJ=\"\"\n-    else\n-      # Extract the first word of \"\"\"\", so it can be a program name with args.\n-set dummy \"\"; ac_word=$2\n-echo \"$as_me:$LINENO: checking for $ac_word\" >&5\n-echo $ECHO_N \"checking for $ac_word... $ECHO_C\" >&6\n-if test \"${ac_cv_path_GCJ+set}\" = set; then\n-  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n-else\n-  case $GCJ in\n-  [\\\\/]* | ?:[\\\\/]*)\n-  ac_cv_path_GCJ=\"$GCJ\" # Let the user override the test with a path.\n-  ;;\n-  *)\n-  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\n-for as_dir in $PATH\n-do\n-  IFS=$as_save_IFS\n-  test -z \"$as_dir\" && as_dir=.\n-  for ac_exec_ext in '' $ac_executable_extensions; do\n-  if $as_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n-    ac_cv_path_GCJ=\"$as_dir/$ac_word$ac_exec_ext\"\n-    echo \"$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext\" >&5\n-    break 2\n-  fi\n-done\n-done\n-\n-  ;;\n-esac\n-fi\n-GCJ=$ac_cv_path_GCJ\n-\n-if test -n \"$GCJ\"; then\n-  echo \"$as_me:$LINENO: result: $GCJ\" >&5\n-echo \"${ECHO_T}$GCJ\" >&6\n-else\n-  echo \"$as_me:$LINENO: result: no\" >&5\n-echo \"${ECHO_T}no\" >&6\n-fi\n-\n-    fi\n-  else\n-    # Extract the first word of \"\"gcj\"\", so it can be a program name with args.\n-set dummy \"gcj\"; ac_word=$2\n-echo \"$as_me:$LINENO: checking for $ac_word\" >&5\n-echo $ECHO_N \"checking for $ac_word... $ECHO_C\" >&6\n-if test \"${ac_cv_path_GCJ+set}\" = set; then\n-  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n-else\n-  case $GCJ in\n-  [\\\\/]* | ?:[\\\\/]*)\n-  ac_cv_path_GCJ=\"$GCJ\" # Let the user override the test with a path.\n-  ;;\n-  *)\n-  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\n-for as_dir in $PATH\n-do\n-  IFS=$as_save_IFS\n-  test -z \"$as_dir\" && as_dir=.\n-  for ac_exec_ext in '' $ac_executable_extensions; do\n-  if $as_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n-    ac_cv_path_GCJ=\"$as_dir/$ac_word$ac_exec_ext\"\n-    echo \"$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext\" >&5\n-    break 2\n-  fi\n-done\n-done\n-\n-  ;;\n-esac\n-fi\n-GCJ=$ac_cv_path_GCJ\n-\n-if test -n \"$GCJ\"; then\n-  echo \"$as_me:$LINENO: result: $GCJ\" >&5\n-echo \"${ECHO_T}$GCJ\" >&6\n-else\n-  echo \"$as_me:$LINENO: result: no\" >&5\n-echo \"${ECHO_T}no\" >&6\n-fi\n-\n-  fi\n-    if test \"x$GCJ\" != x; then\n-    echo \"$as_me:$LINENO: checking gcj version 4.0\" >&5\n-echo $ECHO_N \"checking gcj version 4.0... $ECHO_C\" >&6\n-    ac_ext=c\n-ac_cpp='$CPP $CPPFLAGS'\n-ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n-ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n-ac_compiler_gnu=$ac_cv_c_compiler_gnu\n-\n-    cat >conftest.$ac_ext <<_ACEOF\n-#if __GNUC__ <= 3\n-    #error GCJ 4.0.0 or higher is required\n-    #endif\n-\n-_ACEOF\n-    $GCJ -E conftest.c > /dev/null\n-    gcj_4_result=$?\n-    if test \"x$gcj_4_result\" = \"x0\"; then\n-      echo \"$as_me:$LINENO: result: 4.0 or higher found\" >&5\n-echo \"${ECHO_T}4.0 or higher found\" >&6\n-    else\n-      { echo \"$as_me:$LINENO: WARNING: 4.0 or higher required\" >&5\n-echo \"$as_me: WARNING: 4.0 or higher required\" >&2;}\n-    fi\n-    ac_ext=c\n-ac_cpp='$CPP $CPPFLAGS'\n-ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n-ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n-ac_compiler_gnu=$ac_cv_c_compiler_gnu\n-\n-  fi\n-\n-\n-fi;\n-\n-\n-\n-\n-# Check whether --with-jikes or --without-jikes was given.\n-if test \"${with_jikes+set}\" = set; then\n-  withval=\"$with_jikes\"\n-\n-    if test \"x${withval}\" != x && test \"x${withval}\" != xyes && test \"x${withval}\" != xno; then\n-\n-  if test \"x${withval}\" != x; then\n-    if test -f \"${withval}\"; then\n-      JIKES=\"${withval}\"\n-    else\n-      # Extract the first word of \"\"${withval}\"\", so it can be a program name with args.\n-set dummy \"${withval}\"; ac_word=$2\n-echo \"$as_me:$LINENO: checking for $ac_word\" >&5\n-echo $ECHO_N \"checking for $ac_word... $ECHO_C\" >&6\n-if test \"${ac_cv_path_JIKES+set}\" = set; then\n-  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n-else\n-  case $JIKES in\n-  [\\\\/]* | ?:[\\\\/]*)\n-  ac_cv_path_JIKES=\"$JIKES\" # Let the user override the test with a path.\n-  ;;\n-  *)\n-  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\n-for as_dir in $PATH\n-do\n-  IFS=$as_save_IFS\n-  test -z \"$as_dir\" && as_dir=.\n-  for ac_exec_ext in '' $ac_executable_extensions; do\n-  if $as_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n-    ac_cv_path_JIKES=\"$as_dir/$ac_word$ac_exec_ext\"\n-    echo \"$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext\" >&5\n-    break 2\n-  fi\n-done\n-done\n-\n-  ;;\n-esac\n-fi\n-JIKES=$ac_cv_path_JIKES\n-\n-if test -n \"$JIKES\"; then\n-  echo \"$as_me:$LINENO: result: $JIKES\" >&5\n-echo \"${ECHO_T}$JIKES\" >&6\n-else\n-  echo \"$as_me:$LINENO: result: no\" >&5\n-echo \"${ECHO_T}no\" >&6\n-fi\n-\n-    fi\n-  else\n-    # Extract the first word of \"\"jikes\"\", so it can be a program name with args.\n-set dummy \"jikes\"; ac_word=$2\n-echo \"$as_me:$LINENO: checking for $ac_word\" >&5\n-echo $ECHO_N \"checking for $ac_word... $ECHO_C\" >&6\n-if test \"${ac_cv_path_JIKES+set}\" = set; then\n-  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n-else\n-  case $JIKES in\n-  [\\\\/]* | ?:[\\\\/]*)\n-  ac_cv_path_JIKES=\"$JIKES\" # Let the user override the test with a path.\n-  ;;\n-  *)\n-  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\n-for as_dir in $PATH\n-do\n-  IFS=$as_save_IFS\n-  test -z \"$as_dir\" && as_dir=.\n-  for ac_exec_ext in '' $ac_executable_extensions; do\n-  if $as_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n-    ac_cv_path_JIKES=\"$as_dir/$ac_word$ac_exec_ext\"\n-    echo \"$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext\" >&5\n-    break 2\n-  fi\n-done\n-done\n-\n-  ;;\n-esac\n-fi\n-JIKES=$ac_cv_path_JIKES\n-\n-if test -n \"$JIKES\"; then\n-  echo \"$as_me:$LINENO: result: $JIKES\" >&5\n-echo \"${ECHO_T}$JIKES\" >&6\n-else\n-  echo \"$as_me:$LINENO: result: no\" >&5\n-echo \"${ECHO_T}no\" >&6\n-fi\n-\n-  fi\n-  if test \"x$JIKES\" != \"x\"; then\n-        echo \"$as_me:$LINENO: checking jikes version\" >&5\n-echo $ECHO_N \"checking jikes version... $ECHO_C\" >&6\n-    JIKES_VERSION=`$JIKES --version | awk '/^Jikes Compiler/' | cut -d ' ' -f 5`\n-    JIKES_VERSION_MAJOR=`echo \"$JIKES_VERSION\" | cut -d '.' -f 1`\n-    JIKES_VERSION_MINOR=`echo \"$JIKES_VERSION\" | cut -d '.' -f 2`\n-    if expr \"$JIKES_VERSION_MAJOR\" = 1 > /dev/null; then\n-      if expr \"$JIKES_VERSION_MINOR\" \\< 19 > /dev/null; then\n-        JIKES=\"\"\n-      fi\n-    fi\n-    if test \"x$JIKES\" != \"x\"; then\n-      echo \"$as_me:$LINENO: result: $JIKES_VERSION\" >&5\n-echo \"${ECHO_T}$JIKES_VERSION\" >&6\n-    else\n-      { echo \"$as_me:$LINENO: WARNING: $JIKES_VERSION: jikes 1.19 or higher required\" >&5\n-echo \"$as_me: WARNING: $JIKES_VERSION: jikes 1.19 or higher required\" >&2;}\n-    fi\n-\n-    JIKESENCODING=\n-    if test -n \"`$JIKES --help 2>&1 | grep encoding`\"; then\n-      JIKESENCODING='-encoding UTF-8'\n-    fi\n-\n-\n-    JIKESWARNINGS=\"+Pno-switchcheck\"\n-    if test \"x$JIKES_VERSION_MAJOR\" = x\"1\" ; then\n-      if ! test \"x$JIKES_VERSION_MINOR\" = x\"19\"; then\n-        JIKESWARNINGS=\"$JIKESWARNINGS +Pno-shadow\"\n-      fi\n-    fi\n-\n-\n-  fi\n-\n-    else\n-      if test \"x${withval}\" != xno; then\n-\n-  if test \"x\" != x; then\n-    if test -f \"\"; then\n-      JIKES=\"\"\n-    else\n-      # Extract the first word of \"\"\"\", so it can be a program name with args.\n-set dummy \"\"; ac_word=$2\n-echo \"$as_me:$LINENO: checking for $ac_word\" >&5\n-echo $ECHO_N \"checking for $ac_word... $ECHO_C\" >&6\n-if test \"${ac_cv_path_JIKES+set}\" = set; then\n-  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n-else\n-  case $JIKES in\n-  [\\\\/]* | ?:[\\\\/]*)\n-  ac_cv_path_JIKES=\"$JIKES\" # Let the user override the test with a path.\n-  ;;\n-  *)\n-  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\n-for as_dir in $PATH\n-do\n-  IFS=$as_save_IFS\n-  test -z \"$as_dir\" && as_dir=.\n-  for ac_exec_ext in '' $ac_executable_extensions; do\n-  if $as_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n-    ac_cv_path_JIKES=\"$as_dir/$ac_word$ac_exec_ext\"\n-    echo \"$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext\" >&5\n-    break 2\n-  fi\n-done\n-done\n-\n-  ;;\n-esac\n-fi\n-JIKES=$ac_cv_path_JIKES\n-\n-if test -n \"$JIKES\"; then\n-  echo \"$as_me:$LINENO: result: $JIKES\" >&5\n-echo \"${ECHO_T}$JIKES\" >&6\n-else\n-  echo \"$as_me:$LINENO: result: no\" >&5\n-echo \"${ECHO_T}no\" >&6\n-fi\n-\n-    fi\n-  else\n-    # Extract the first word of \"\"jikes\"\", so it can be a program name with args.\n-set dummy \"jikes\"; ac_word=$2\n-echo \"$as_me:$LINENO: checking for $ac_word\" >&5\n-echo $ECHO_N \"checking for $ac_word... $ECHO_C\" >&6\n-if test \"${ac_cv_path_JIKES+set}\" = set; then\n-  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n-else\n-  case $JIKES in\n-  [\\\\/]* | ?:[\\\\/]*)\n-  ac_cv_path_JIKES=\"$JIKES\" # Let the user override the test with a path.\n-  ;;\n-  *)\n-  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\n-for as_dir in $PATH\n-do\n-  IFS=$as_save_IFS\n-  test -z \"$as_dir\" && as_dir=.\n-  for ac_exec_ext in '' $ac_executable_extensions; do\n-  if $as_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n-    ac_cv_path_JIKES=\"$as_dir/$ac_word$ac_exec_ext\"\n-    echo \"$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext\" >&5\n-    break 2\n-  fi\n-done\n-done\n-\n-  ;;\n-esac\n-fi\n-JIKES=$ac_cv_path_JIKES\n-\n-if test -n \"$JIKES\"; then\n-  echo \"$as_me:$LINENO: result: $JIKES\" >&5\n-echo \"${ECHO_T}$JIKES\" >&6\n-else\n-  echo \"$as_me:$LINENO: result: no\" >&5\n-echo \"${ECHO_T}no\" >&6\n-fi\n-\n-  fi\n-  if test \"x$JIKES\" != \"x\"; then\n-        echo \"$as_me:$LINENO: checking jikes version\" >&5\n-echo $ECHO_N \"checking jikes version... $ECHO_C\" >&6\n-    JIKES_VERSION=`$JIKES --version | awk '/^Jikes Compiler/' | cut -d ' ' -f 5`\n-    JIKES_VERSION_MAJOR=`echo \"$JIKES_VERSION\" | cut -d '.' -f 1`\n-    JIKES_VERSION_MINOR=`echo \"$JIKES_VERSION\" | cut -d '.' -f 2`\n-    if expr \"$JIKES_VERSION_MAJOR\" = 1 > /dev/null; then\n-      if expr \"$JIKES_VERSION_MINOR\" \\< 19 > /dev/null; then\n-        JIKES=\"\"\n-      fi\n-    fi\n-    if test \"x$JIKES\" != \"x\"; then\n-      echo \"$as_me:$LINENO: result: $JIKES_VERSION\" >&5\n-echo \"${ECHO_T}$JIKES_VERSION\" >&6\n-    else\n-      { echo \"$as_me:$LINENO: WARNING: $JIKES_VERSION: jikes 1.19 or higher required\" >&5\n-echo \"$as_me: WARNING: $JIKES_VERSION: jikes 1.19 or higher required\" >&2;}\n-    fi\n-\n-    JIKESENCODING=\n-    if test -n \"`$JIKES --help 2>&1 | grep encoding`\"; then\n-      JIKESENCODING='-encoding UTF-8'\n-    fi\n-\n-\n-    JIKESWARNINGS=\"+Pno-switchcheck\"\n-    if test \"x$JIKES_VERSION_MAJOR\" = x\"1\" ; then\n-      if ! test \"x$JIKES_VERSION_MINOR\" = x\"19\"; then\n-        JIKESWARNINGS=\"$JIKESWARNINGS +Pno-shadow\"\n-      fi\n-    fi\n-\n-\n-  fi\n-\n-      fi\n-    fi\n-    user_specified_javac=jikes\n-\n-else\n-\n-\n-  if test \"x\" != x; then\n-    if test -f \"\"; then\n-      JIKES=\"\"\n-    else\n-      # Extract the first word of \"\"\"\", so it can be a program name with args.\n-set dummy \"\"; ac_word=$2\n-echo \"$as_me:$LINENO: checking for $ac_word\" >&5\n-echo $ECHO_N \"checking for $ac_word... $ECHO_C\" >&6\n-if test \"${ac_cv_path_JIKES+set}\" = set; then\n-  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n-else\n-  case $JIKES in\n-  [\\\\/]* | ?:[\\\\/]*)\n-  ac_cv_path_JIKES=\"$JIKES\" # Let the user override the test with a path.\n-  ;;\n-  *)\n-  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\n-for as_dir in $PATH\n-do\n-  IFS=$as_save_IFS\n-  test -z \"$as_dir\" && as_dir=.\n-  for ac_exec_ext in '' $ac_executable_extensions; do\n-  if $as_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n-    ac_cv_path_JIKES=\"$as_dir/$ac_word$ac_exec_ext\"\n-    echo \"$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext\" >&5\n-    break 2\n-  fi\n-done\n-done\n-\n-  ;;\n-esac\n-fi\n-JIKES=$ac_cv_path_JIKES\n-\n-if test -n \"$JIKES\"; then\n-  echo \"$as_me:$LINENO: result: $JIKES\" >&5\n-echo \"${ECHO_T}$JIKES\" >&6\n-else\n-  echo \"$as_me:$LINENO: result: no\" >&5\n-echo \"${ECHO_T}no\" >&6\n-fi\n-\n-    fi\n-  else\n-    # Extract the first word of \"\"jikes\"\", so it can be a program name with args.\n-set dummy \"jikes\"; ac_word=$2\n-echo \"$as_me:$LINENO: checking for $ac_word\" >&5\n-echo $ECHO_N \"checking for $ac_word... $ECHO_C\" >&6\n-if test \"${ac_cv_path_JIKES+set}\" = set; then\n-  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n-else\n-  case $JIKES in\n-  [\\\\/]* | ?:[\\\\/]*)\n-  ac_cv_path_JIKES=\"$JIKES\" # Let the user override the test with a path.\n-  ;;\n-  *)\n-  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\n-for as_dir in $PATH\n-do\n-  IFS=$as_save_IFS\n-  test -z \"$as_dir\" && as_dir=.\n-  for ac_exec_ext in '' $ac_executable_extensions; do\n-  if $as_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n-    ac_cv_path_JIKES=\"$as_dir/$ac_word$ac_exec_ext\"\n-    echo \"$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext\" >&5\n-    break 2\n-  fi\n-done\n-done\n-\n-  ;;\n-esac\n-fi\n-JIKES=$ac_cv_path_JIKES\n-\n-if test -n \"$JIKES\"; then\n-  echo \"$as_me:$LINENO: result: $JIKES\" >&5\n-echo \"${ECHO_T}$JIKES\" >&6\n-else\n-  echo \"$as_me:$LINENO: result: no\" >&5\n-echo \"${ECHO_T}no\" >&6\n-fi\n-\n-  fi\n-  if test \"x$JIKES\" != \"x\"; then\n-        echo \"$as_me:$LINENO: checking jikes version\" >&5\n-echo $ECHO_N \"checking jikes version... $ECHO_C\" >&6\n-    JIKES_VERSION=`$JIKES --version | awk '/^Jikes Compiler/' | cut -d ' ' -f 5`\n-    JIKES_VERSION_MAJOR=`echo \"$JIKES_VERSION\" | cut -d '.' -f 1`\n-    JIKES_VERSION_MINOR=`echo \"$JIKES_VERSION\" | cut -d '.' -f 2`\n-    if expr \"$JIKES_VERSION_MAJOR\" = 1 > /dev/null; then\n-      if expr \"$JIKES_VERSION_MINOR\" \\< 19 > /dev/null; then\n-        JIKES=\"\"\n-      fi\n-    fi\n-    if test \"x$JIKES\" != \"x\"; then\n-      echo \"$as_me:$LINENO: result: $JIKES_VERSION\" >&5\n-echo \"${ECHO_T}$JIKES_VERSION\" >&6\n-    else\n-      { echo \"$as_me:$LINENO: WARNING: $JIKES_VERSION: jikes 1.19 or higher required\" >&5\n-echo \"$as_me: WARNING: $JIKES_VERSION: jikes 1.19 or higher required\" >&2;}\n-    fi\n-\n-    JIKESENCODING=\n-    if test -n \"`$JIKES --help 2>&1 | grep encoding`\"; then\n-      JIKESENCODING='-encoding UTF-8'\n-    fi\n-\n-\n-    JIKESWARNINGS=\"+Pno-switchcheck\"\n-    if test \"x$JIKES_VERSION_MAJOR\" = x\"1\" ; then\n-      if ! test \"x$JIKES_VERSION_MINOR\" = x\"19\"; then\n-        JIKESWARNINGS=\"$JIKESWARNINGS +Pno-shadow\"\n-      fi\n-    fi\n-\n-\n-  fi\n-\n-\n-fi;\n-\n-\n-\n-\n-# Check whether --with-kjc or --without-kjc was given.\n-if test \"${with_kjc+set}\" = set; then\n-  withval=\"$with_kjc\"\n-\n-    if test \"x${withval}\" != x && test \"x${withval}\" != xyes && test \"x${withval}\" != xno; then\n-\n-  if test \"x${withval}\" != x; then\n-    if test -f \"${withval}\"; then\n-      KJC=\"${withval}\"\n-    else\n-      # Extract the first word of \"\"${withval}\"\", so it can be a program name with args.\n-set dummy \"${withval}\"; ac_word=$2\n-echo \"$as_me:$LINENO: checking for $ac_word\" >&5\n-echo $ECHO_N \"checking for $ac_word... $ECHO_C\" >&6\n-if test \"${ac_cv_path_KJC+set}\" = set; then\n-  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n-else\n-  case $KJC in\n-  [\\\\/]* | ?:[\\\\/]*)\n-  ac_cv_path_KJC=\"$KJC\" # Let the user override the test with a path.\n-  ;;\n-  *)\n-  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\n-for as_dir in $PATH\n-do\n-  IFS=$as_save_IFS\n-  test -z \"$as_dir\" && as_dir=.\n-  for ac_exec_ext in '' $ac_executable_extensions; do\n-  if $as_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n-    ac_cv_path_KJC=\"$as_dir/$ac_word$ac_exec_ext\"\n-    echo \"$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext\" >&5\n-    break 2\n-  fi\n-done\n-done\n-\n-  ;;\n-esac\n-fi\n-KJC=$ac_cv_path_KJC\n-\n-if test -n \"$KJC\"; then\n-  echo \"$as_me:$LINENO: result: $KJC\" >&5\n-echo \"${ECHO_T}$KJC\" >&6\n-else\n-  echo \"$as_me:$LINENO: result: no\" >&5\n-echo \"${ECHO_T}no\" >&6\n-fi\n-\n-    fi\n-  else\n-    # Extract the first word of \"\"kJC\"\", so it can be a program name with args.\n-set dummy \"kJC\"; ac_word=$2\n-echo \"$as_me:$LINENO: checking for $ac_word\" >&5\n-echo $ECHO_N \"checking for $ac_word... $ECHO_C\" >&6\n-if test \"${ac_cv_path_KJC+set}\" = set; then\n-  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n-else\n-  case $KJC in\n-  [\\\\/]* | ?:[\\\\/]*)\n-  ac_cv_path_KJC=\"$KJC\" # Let the user override the test with a path.\n-  ;;\n-  *)\n-  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\n-for as_dir in $PATH\n-do\n-  IFS=$as_save_IFS\n-  test -z \"$as_dir\" && as_dir=.\n-  for ac_exec_ext in '' $ac_executable_extensions; do\n-  if $as_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n-    ac_cv_path_KJC=\"$as_dir/$ac_word$ac_exec_ext\"\n-    echo \"$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext\" >&5\n-    break 2\n-  fi\n-done\n-done\n-\n-  ;;\n-esac\n-fi\n-KJC=$ac_cv_path_KJC\n-\n-if test -n \"$KJC\"; then\n-  echo \"$as_me:$LINENO: result: $KJC\" >&5\n-echo \"${ECHO_T}$KJC\" >&6\n-else\n-  echo \"$as_me:$LINENO: result: no\" >&5\n-echo \"${ECHO_T}no\" >&6\n-fi\n-\n-  fi\n-\n-    else\n-      if test \"x${withval}\" != xno; then\n-\n-  if test \"x\" != x; then\n-    if test -f \"\"; then\n-      KJC=\"\"\n-    else\n-      # Extract the first word of \"\"\"\", so it can be a program name with args.\n-set dummy \"\"; ac_word=$2\n-echo \"$as_me:$LINENO: checking for $ac_word\" >&5\n-echo $ECHO_N \"checking for $ac_word... $ECHO_C\" >&6\n-if test \"${ac_cv_path_KJC+set}\" = set; then\n-  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n-else\n-  case $KJC in\n-  [\\\\/]* | ?:[\\\\/]*)\n-  ac_cv_path_KJC=\"$KJC\" # Let the user override the test with a path.\n-  ;;\n-  *)\n-  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\n-for as_dir in $PATH\n-do\n-  IFS=$as_save_IFS\n-  test -z \"$as_dir\" && as_dir=.\n-  for ac_exec_ext in '' $ac_executable_extensions; do\n-  if $as_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n-    ac_cv_path_KJC=\"$as_dir/$ac_word$ac_exec_ext\"\n-    echo \"$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext\" >&5\n-    break 2\n-  fi\n-done\n-done\n-\n-  ;;\n-esac\n-fi\n-KJC=$ac_cv_path_KJC\n-\n-if test -n \"$KJC\"; then\n-  echo \"$as_me:$LINENO: result: $KJC\" >&5\n-echo \"${ECHO_T}$KJC\" >&6\n-else\n-  echo \"$as_me:$LINENO: result: no\" >&5\n-echo \"${ECHO_T}no\" >&6\n-fi\n-\n-    fi\n-  else\n-    # Extract the first word of \"\"kJC\"\", so it can be a program name with args.\n-set dummy \"kJC\"; ac_word=$2\n-echo \"$as_me:$LINENO: checking for $ac_word\" >&5\n-echo $ECHO_N \"checking for $ac_word... $ECHO_C\" >&6\n-if test \"${ac_cv_path_KJC+set}\" = set; then\n-  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n-else\n-  case $KJC in\n-  [\\\\/]* | ?:[\\\\/]*)\n-  ac_cv_path_KJC=\"$KJC\" # Let the user override the test with a path.\n-  ;;\n-  *)\n-  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\n-for as_dir in $PATH\n-do\n-  IFS=$as_save_IFS\n-  test -z \"$as_dir\" && as_dir=.\n-  for ac_exec_ext in '' $ac_executable_extensions; do\n-  if $as_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n-    ac_cv_path_KJC=\"$as_dir/$ac_word$ac_exec_ext\"\n-    echo \"$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext\" >&5\n-    break 2\n-  fi\n-done\n-done\n-\n-  ;;\n-esac\n-fi\n-KJC=$ac_cv_path_KJC\n-\n-if test -n \"$KJC\"; then\n-  echo \"$as_me:$LINENO: result: $KJC\" >&5\n-echo \"${ECHO_T}$KJC\" >&6\n-else\n-  echo \"$as_me:$LINENO: result: no\" >&5\n-echo \"${ECHO_T}no\" >&6\n-fi\n-\n-  fi\n-\n-      fi\n-    fi\n-    user_specified_javac=kjc\n-\n-else\n-\n-\n-  if test \"x\" != x; then\n-    if test -f \"\"; then\n-      KJC=\"\"\n-    else\n-      # Extract the first word of \"\"\"\", so it can be a program name with args.\n-set dummy \"\"; ac_word=$2\n-echo \"$as_me:$LINENO: checking for $ac_word\" >&5\n-echo $ECHO_N \"checking for $ac_word... $ECHO_C\" >&6\n-if test \"${ac_cv_path_KJC+set}\" = set; then\n-  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n-else\n-  case $KJC in\n-  [\\\\/]* | ?:[\\\\/]*)\n-  ac_cv_path_KJC=\"$KJC\" # Let the user override the test with a path.\n-  ;;\n-  *)\n-  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\n-for as_dir in $PATH\n-do\n-  IFS=$as_save_IFS\n-  test -z \"$as_dir\" && as_dir=.\n-  for ac_exec_ext in '' $ac_executable_extensions; do\n-  if $as_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n-    ac_cv_path_KJC=\"$as_dir/$ac_word$ac_exec_ext\"\n-    echo \"$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext\" >&5\n-    break 2\n-  fi\n-done\n-done\n-\n-  ;;\n-esac\n-fi\n-KJC=$ac_cv_path_KJC\n-\n-if test -n \"$KJC\"; then\n-  echo \"$as_me:$LINENO: result: $KJC\" >&5\n-echo \"${ECHO_T}$KJC\" >&6\n-else\n-  echo \"$as_me:$LINENO: result: no\" >&5\n-echo \"${ECHO_T}no\" >&6\n-fi\n-\n-    fi\n-  else\n-    # Extract the first word of \"\"kJC\"\", so it can be a program name with args.\n-set dummy \"kJC\"; ac_word=$2\n-echo \"$as_me:$LINENO: checking for $ac_word\" >&5\n-echo $ECHO_N \"checking for $ac_word... $ECHO_C\" >&6\n-if test \"${ac_cv_path_KJC+set}\" = set; then\n-  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n-else\n-  case $KJC in\n-  [\\\\/]* | ?:[\\\\/]*)\n-  ac_cv_path_KJC=\"$KJC\" # Let the user override the test with a path.\n-  ;;\n-  *)\n-  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\n-for as_dir in $PATH\n-do\n-  IFS=$as_save_IFS\n-  test -z \"$as_dir\" && as_dir=.\n-  for ac_exec_ext in '' $ac_executable_extensions; do\n-  if $as_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n-    ac_cv_path_KJC=\"$as_dir/$ac_word$ac_exec_ext\"\n-    echo \"$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext\" >&5\n-    break 2\n-  fi\n-done\n-done\n-\n-  ;;\n-esac\n-fi\n-KJC=$ac_cv_path_KJC\n-\n-if test -n \"$KJC\"; then\n-  echo \"$as_me:$LINENO: result: $KJC\" >&5\n-echo \"${ECHO_T}$KJC\" >&6\n-else\n-  echo \"$as_me:$LINENO: result: no\" >&5\n-echo \"${ECHO_T}no\" >&6\n-fi\n-\n-  fi\n-\n-\n-fi;\n-\n-\n-\n-\n-# Check whether --with-ecj or --without-ecj was given.\n-if test \"${with_ecj+set}\" = set; then\n-  withval=\"$with_ecj\"\n-\n-    if test \"x${withval}\" != x && test \"x${withval}\" != xyes && test \"x${withval}\" != xno; then\n-\n-  if test \"x${withval}\" != x; then\n-    if test -f \"${withval}\"; then\n-      ECJ=\"${withval}\"\n-    else\n-      # Extract the first word of \"\"${withval}\"\", so it can be a program name with args.\n-set dummy \"${withval}\"; ac_word=$2\n-echo \"$as_me:$LINENO: checking for $ac_word\" >&5\n-echo $ECHO_N \"checking for $ac_word... $ECHO_C\" >&6\n-if test \"${ac_cv_path_ECJ+set}\" = set; then\n-  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n-else\n-  case $ECJ in\n-  [\\\\/]* | ?:[\\\\/]*)\n-  ac_cv_path_ECJ=\"$ECJ\" # Let the user override the test with a path.\n-  ;;\n-  *)\n-  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\n-for as_dir in $PATH\n-do\n-  IFS=$as_save_IFS\n-  test -z \"$as_dir\" && as_dir=.\n-  for ac_exec_ext in '' $ac_executable_extensions; do\n-  if $as_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n-    ac_cv_path_ECJ=\"$as_dir/$ac_word$ac_exec_ext\"\n-    echo \"$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext\" >&5\n-    break 2\n-  fi\n-done\n-done\n-\n-  ;;\n-esac\n-fi\n-ECJ=$ac_cv_path_ECJ\n-\n-if test -n \"$ECJ\"; then\n-  echo \"$as_me:$LINENO: result: $ECJ\" >&5\n-echo \"${ECHO_T}$ECJ\" >&6\n-else\n-  echo \"$as_me:$LINENO: result: no\" >&5\n-echo \"${ECHO_T}no\" >&6\n-fi\n-\n-    fi\n-  else\n-    # Extract the first word of \"\"ecj\"\", so it can be a program name with args.\n-set dummy \"ecj\"; ac_word=$2\n-echo \"$as_me:$LINENO: checking for $ac_word\" >&5\n-echo $ECHO_N \"checking for $ac_word... $ECHO_C\" >&6\n-if test \"${ac_cv_path_ECJ+set}\" = set; then\n-  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n-else\n-  case $ECJ in\n-  [\\\\/]* | ?:[\\\\/]*)\n-  ac_cv_path_ECJ=\"$ECJ\" # Let the user override the test with a path.\n-  ;;\n-  *)\n-  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\n-for as_dir in $PATH\n-do\n-  IFS=$as_save_IFS\n-  test -z \"$as_dir\" && as_dir=.\n-  for ac_exec_ext in '' $ac_executable_extensions; do\n-  if $as_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n-    ac_cv_path_ECJ=\"$as_dir/$ac_word$ac_exec_ext\"\n-    echo \"$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext\" >&5\n-    break 2\n-  fi\n-done\n-done\n-\n-  ;;\n-esac\n-fi\n-ECJ=$ac_cv_path_ECJ\n-\n-if test -n \"$ECJ\"; then\n-  echo \"$as_me:$LINENO: result: $ECJ\" >&5\n-echo \"${ECHO_T}$ECJ\" >&6\n-else\n-  echo \"$as_me:$LINENO: result: no\" >&5\n-echo \"${ECHO_T}no\" >&6\n-fi\n-\n-  fi\n-\n-    else\n-      if test \"x${withval}\" != xno; then\n-\n-  if test \"x\" != x; then\n-    if test -f \"\"; then\n-      ECJ=\"\"\n-    else\n-      # Extract the first word of \"\"\"\", so it can be a program name with args.\n-set dummy \"\"; ac_word=$2\n-echo \"$as_me:$LINENO: checking for $ac_word\" >&5\n-echo $ECHO_N \"checking for $ac_word... $ECHO_C\" >&6\n-if test \"${ac_cv_path_ECJ+set}\" = set; then\n-  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n-else\n-  case $ECJ in\n-  [\\\\/]* | ?:[\\\\/]*)\n-  ac_cv_path_ECJ=\"$ECJ\" # Let the user override the test with a path.\n-  ;;\n-  *)\n-  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\n-for as_dir in $PATH\n-do\n-  IFS=$as_save_IFS\n-  test -z \"$as_dir\" && as_dir=.\n-  for ac_exec_ext in '' $ac_executable_extensions; do\n-  if $as_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n-    ac_cv_path_ECJ=\"$as_dir/$ac_word$ac_exec_ext\"\n-    echo \"$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext\" >&5\n-    break 2\n-  fi\n-done\n-done\n-\n-  ;;\n-esac\n-fi\n-ECJ=$ac_cv_path_ECJ\n-\n-if test -n \"$ECJ\"; then\n-  echo \"$as_me:$LINENO: result: $ECJ\" >&5\n-echo \"${ECHO_T}$ECJ\" >&6\n-else\n-  echo \"$as_me:$LINENO: result: no\" >&5\n-echo \"${ECHO_T}no\" >&6\n-fi\n-\n-    fi\n-  else\n-    # Extract the first word of \"\"ecj\"\", so it can be a program name with args.\n-set dummy \"ecj\"; ac_word=$2\n-echo \"$as_me:$LINENO: checking for $ac_word\" >&5\n-echo $ECHO_N \"checking for $ac_word... $ECHO_C\" >&6\n-if test \"${ac_cv_path_ECJ+set}\" = set; then\n-  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n-else\n-  case $ECJ in\n-  [\\\\/]* | ?:[\\\\/]*)\n-  ac_cv_path_ECJ=\"$ECJ\" # Let the user override the test with a path.\n-  ;;\n-  *)\n-  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\n-for as_dir in $PATH\n-do\n-  IFS=$as_save_IFS\n-  test -z \"$as_dir\" && as_dir=.\n-  for ac_exec_ext in '' $ac_executable_extensions; do\n-  if $as_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n-    ac_cv_path_ECJ=\"$as_dir/$ac_word$ac_exec_ext\"\n-    echo \"$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext\" >&5\n-    break 2\n-  fi\n-done\n-done\n-\n-  ;;\n-esac\n-fi\n-ECJ=$ac_cv_path_ECJ\n-\n-if test -n \"$ECJ\"; then\n-  echo \"$as_me:$LINENO: result: $ECJ\" >&5\n-echo \"${ECHO_T}$ECJ\" >&6\n-else\n-  echo \"$as_me:$LINENO: result: no\" >&5\n-echo \"${ECHO_T}no\" >&6\n-fi\n-\n-  fi\n-\n-      fi\n-    fi\n-    user_specified_javac=ecj\n-\n-else\n-\n-\n-  if test \"x\" != x; then\n-    if test -f \"\"; then\n-      ECJ=\"\"\n-    else\n-      # Extract the first word of \"\"\"\", so it can be a program name with args.\n-set dummy \"\"; ac_word=$2\n-echo \"$as_me:$LINENO: checking for $ac_word\" >&5\n-echo $ECHO_N \"checking for $ac_word... $ECHO_C\" >&6\n-if test \"${ac_cv_path_ECJ+set}\" = set; then\n-  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n-else\n-  case $ECJ in\n-  [\\\\/]* | ?:[\\\\/]*)\n-  ac_cv_path_ECJ=\"$ECJ\" # Let the user override the test with a path.\n-  ;;\n-  *)\n-  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\n-for as_dir in $PATH\n-do\n-  IFS=$as_save_IFS\n-  test -z \"$as_dir\" && as_dir=.\n-  for ac_exec_ext in '' $ac_executable_extensions; do\n-  if $as_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n-    ac_cv_path_ECJ=\"$as_dir/$ac_word$ac_exec_ext\"\n-    echo \"$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext\" >&5\n-    break 2\n-  fi\n-done\n-done\n-\n-  ;;\n-esac\n-fi\n-ECJ=$ac_cv_path_ECJ\n-\n-if test -n \"$ECJ\"; then\n-  echo \"$as_me:$LINENO: result: $ECJ\" >&5\n-echo \"${ECHO_T}$ECJ\" >&6\n-else\n-  echo \"$as_me:$LINENO: result: no\" >&5\n-echo \"${ECHO_T}no\" >&6\n-fi\n-\n-    fi\n-  else\n-    # Extract the first word of \"\"ecj\"\", so it can be a program name with args.\n-set dummy \"ecj\"; ac_word=$2\n-echo \"$as_me:$LINENO: checking for $ac_word\" >&5\n-echo $ECHO_N \"checking for $ac_word... $ECHO_C\" >&6\n-if test \"${ac_cv_path_ECJ+set}\" = set; then\n-  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n-else\n-  case $ECJ in\n-  [\\\\/]* | ?:[\\\\/]*)\n-  ac_cv_path_ECJ=\"$ECJ\" # Let the user override the test with a path.\n-  ;;\n-  *)\n-  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\n-for as_dir in $PATH\n-do\n-  IFS=$as_save_IFS\n-  test -z \"$as_dir\" && as_dir=.\n-  for ac_exec_ext in '' $ac_executable_extensions; do\n-  if $as_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n-    ac_cv_path_ECJ=\"$as_dir/$ac_word$ac_exec_ext\"\n-    echo \"$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext\" >&5\n-    break 2\n-  fi\n-done\n-done\n-\n-  ;;\n-esac\n-fi\n-ECJ=$ac_cv_path_ECJ\n-\n-if test -n \"$ECJ\"; then\n-  echo \"$as_me:$LINENO: result: $ECJ\" >&5\n-echo \"${ECHO_T}$ECJ\" >&6\n-else\n-  echo \"$as_me:$LINENO: result: no\" >&5\n-echo \"${ECHO_T}no\" >&6\n-fi\n-\n-  fi\n-\n-\n-fi;\n-\n-\n-\n-\n-# Check whether --with-javac or --without-javac was given.\n-if test \"${with_javac+set}\" = set; then\n-  withval=\"$with_javac\"\n-\n-    if test \"x${withval}\" != x && test \"x${withval}\" != xyes && test \"x${withval}\" != xno; then\n-\n-  if test \"x${withval}\" != x; then\n-    JAVAC=\"${withval}\"\n-  else\n-    # Extract the first word of \"\"javac\"\", so it can be a program name with args.\n-set dummy \"javac\"; ac_word=$2\n-echo \"$as_me:$LINENO: checking for $ac_word\" >&5\n-echo $ECHO_N \"checking for $ac_word... $ECHO_C\" >&6\n-if test \"${ac_cv_path_JAVAC+set}\" = set; then\n-  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n-else\n-  case $JAVAC in\n-  [\\\\/]* | ?:[\\\\/]*)\n-  ac_cv_path_JAVAC=\"$JAVAC\" # Let the user override the test with a path.\n-  ;;\n-  *)\n-  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\n-for as_dir in $PATH\n-do\n-  IFS=$as_save_IFS\n-  test -z \"$as_dir\" && as_dir=.\n-  for ac_exec_ext in '' $ac_executable_extensions; do\n-  if $as_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n-    ac_cv_path_JAVAC=\"$as_dir/$ac_word$ac_exec_ext\"\n-    echo \"$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext\" >&5\n-    break 2\n-  fi\n-done\n-done\n-\n-  ;;\n-esac\n-fi\n-JAVAC=$ac_cv_path_JAVAC\n-\n-if test -n \"$JAVAC\"; then\n-  echo \"$as_me:$LINENO: result: $JAVAC\" >&5\n-echo \"${ECHO_T}$JAVAC\" >&6\n-else\n-  echo \"$as_me:$LINENO: result: no\" >&5\n-echo \"${ECHO_T}no\" >&6\n-fi\n-\n-  fi\n-\n-    else\n-      if test \"x${withval}\" != xno; then\n-\n-  if test \"x\" != x; then\n-    JAVAC=\"\"\n-  else\n-    # Extract the first word of \"\"javac\"\", so it can be a program name with args.\n-set dummy \"javac\"; ac_word=$2\n-echo \"$as_me:$LINENO: checking for $ac_word\" >&5\n-echo $ECHO_N \"checking for $ac_word... $ECHO_C\" >&6\n-if test \"${ac_cv_path_JAVAC+set}\" = set; then\n-  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n-else\n-  case $JAVAC in\n-  [\\\\/]* | ?:[\\\\/]*)\n-  ac_cv_path_JAVAC=\"$JAVAC\" # Let the user override the test with a path.\n-  ;;\n-  *)\n-  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\n-for as_dir in $PATH\n-do\n-  IFS=$as_save_IFS\n-  test -z \"$as_dir\" && as_dir=.\n-  for ac_exec_ext in '' $ac_executable_extensions; do\n-  if $as_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n-    ac_cv_path_JAVAC=\"$as_dir/$ac_word$ac_exec_ext\"\n-    echo \"$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext\" >&5\n-    break 2\n-  fi\n-done\n-done\n-\n-  ;;\n-esac\n-fi\n-JAVAC=$ac_cv_path_JAVAC\n-\n-if test -n \"$JAVAC\"; then\n-  echo \"$as_me:$LINENO: result: $JAVAC\" >&5\n-echo \"${ECHO_T}$JAVAC\" >&6\n-else\n-  echo \"$as_me:$LINENO: result: no\" >&5\n-echo \"${ECHO_T}no\" >&6\n-fi\n-\n-  fi\n-\n-      fi\n-    fi\n-    user_specified_javac=javac\n-\n-else\n-\n-\n-  if test \"x\" != x; then\n-    JAVAC=\"\"\n-  else\n-    # Extract the first word of \"\"javac\"\", so it can be a program name with args.\n-set dummy \"javac\"; ac_word=$2\n-echo \"$as_me:$LINENO: checking for $ac_word\" >&5\n-echo $ECHO_N \"checking for $ac_word... $ECHO_C\" >&6\n-if test \"${ac_cv_path_JAVAC+set}\" = set; then\n-  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n-else\n-  case $JAVAC in\n-  [\\\\/]* | ?:[\\\\/]*)\n-  ac_cv_path_JAVAC=\"$JAVAC\" # Let the user override the test with a path.\n-  ;;\n-  *)\n-  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\n-for as_dir in $PATH\n-do\n-  IFS=$as_save_IFS\n-  test -z \"$as_dir\" && as_dir=.\n-  for ac_exec_ext in '' $ac_executable_extensions; do\n-  if $as_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n-    ac_cv_path_JAVAC=\"$as_dir/$ac_word$ac_exec_ext\"\n-    echo \"$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext\" >&5\n-    break 2\n-  fi\n-done\n-done\n-\n-  ;;\n-esac\n-fi\n-JAVAC=$ac_cv_path_JAVAC\n-\n-if test -n \"$JAVAC\"; then\n-  echo \"$as_me:$LINENO: result: $JAVAC\" >&5\n-echo \"${ECHO_T}$JAVAC\" >&6\n-else\n-  echo \"$as_me:$LINENO: result: no\" >&5\n-echo \"${ECHO_T}no\" >&6\n-fi\n-\n-  fi\n-\n-\n-fi;\n-\n-\n-\n-  if test \"x${user_specified_javac}\" = x; then\n-\n-\n-if test \"x${GCJ}\" != x; then\n-  FOUND_GCJ_TRUE=\n-  FOUND_GCJ_FALSE='#'\n-else\n-  FOUND_GCJ_TRUE='#'\n-  FOUND_GCJ_FALSE=\n-fi\n-\n-\n-\n-if test \"x${JIKES}\" != x; then\n-  FOUND_JIKES_TRUE=\n-  FOUND_JIKES_FALSE='#'\n-else\n-  FOUND_JIKES_TRUE='#'\n-  FOUND_JIKES_FALSE=\n-fi\n-\n-\n-\n-if test \"x${ECJ}\" != x; then\n-  FOUND_ECJ_TRUE=\n-  FOUND_ECJ_FALSE='#'\n-else\n-  FOUND_ECJ_TRUE='#'\n-  FOUND_ECJ_FALSE=\n-fi\n-\n-\n-\n-if test \"x${JAVAC}\" != x; then\n-  FOUND_JAVAC_TRUE=\n-  FOUND_JAVAC_FALSE='#'\n-else\n-  FOUND_JAVAC_TRUE='#'\n-  FOUND_JAVAC_FALSE=\n-fi\n-\n-  else\n-\n-\n-if test \"x${user_specified_javac}\" = xgcj; then\n-  FOUND_GCJ_TRUE=\n-  FOUND_GCJ_FALSE='#'\n-else\n-  FOUND_GCJ_TRUE='#'\n-  FOUND_GCJ_FALSE=\n-fi\n-\n-\n-\n-if test \"x${user_specified_javac}\" = xjikes; then\n-  FOUND_JIKES_TRUE=\n-  FOUND_JIKES_FALSE='#'\n-else\n-  FOUND_JIKES_TRUE='#'\n-  FOUND_JIKES_FALSE=\n-fi\n-\n-\n-\n-if test \"x${user_specified_javac}\" = xecj; then\n-  FOUND_ECJ_TRUE=\n-  FOUND_ECJ_FALSE='#'\n-else\n-  FOUND_ECJ_TRUE='#'\n-  FOUND_ECJ_FALSE=\n-fi\n-\n-\n-\n-if test \"x${user_specified_javac}\" = xjavac; then\n-  FOUND_JAVAC_TRUE=\n-  FOUND_JAVAC_FALSE='#'\n-else\n-  FOUND_JAVAC_TRUE='#'\n-  FOUND_JAVAC_FALSE=\n-fi\n-\n-  fi\n-\n-\n-if test \"x${user_specified_javac}\" = xkjc; then\n-  FOUND_KJC_TRUE=\n-  FOUND_KJC_FALSE='#'\n-else\n-  FOUND_KJC_TRUE='#'\n-  FOUND_KJC_FALSE=\n-fi\n-\n-\n-  ## GCJ LOCAL\n-  if test \"x${GCJ}\" = x && test \"x${JIKES}\" = x && test \"x${ECJ}\" = x \\\n-     && test \"x${JAVAC}\" = x && test \"x${user_specified_javac}\" != xkjc\n-  then\n-      { { echo \"$as_me:$LINENO: error: cannot find javac, try --with-ecj\" >&5\n-echo \"$as_me: error: cannot find javac, try --with-ecj\" >&2;}\n-   { (exit 1); exit 1; }; }\n-  fi\n-  ## END GCJ LOCAL\n-\n-\n-\n-\n-# Check whether --with-classpath or --without-classpath was given.\n-if test \"${with_classpath+set}\" = set; then\n-  withval=\"$with_classpath\"\n-\n-    if test \"x${withval}\" = xyes; then\n-      # set user classpath to CLASSPATH from env\n-      echo \"$as_me:$LINENO: checking for classlib\" >&5\n-echo $ECHO_N \"checking for classlib... $ECHO_C\" >&6\n-      USER_CLASSLIB=${CLASSPATH}\n-\n-      echo \"$as_me:$LINENO: result: ${USER_CLASSLIB}\" >&5\n-echo \"${ECHO_T}${USER_CLASSLIB}\" >&6\n-      conditional_with_classlib=true\n-    elif test \"x${withval}\" != x && test \"x${withval}\" != xno; then\n-      # set user classpath to specified value\n-      echo \"$as_me:$LINENO: checking for classlib\" >&5\n-echo $ECHO_N \"checking for classlib... $ECHO_C\" >&6\n-      USER_CLASSLIB=${withval}\n-\n-      echo \"$as_me:$LINENO: result: ${withval}\" >&5\n-echo \"${ECHO_T}${withval}\" >&6\n-      conditional_with_classlib=true\n-    fi\n-\n-else\n-   conditional_with_classlib=false\n-fi;\n-\n-\n-if test \"x${conditional_with_classlib}\" = xtrue; then\n-  USER_SPECIFIED_CLASSLIB_TRUE=\n-  USER_SPECIFIED_CLASSLIB_FALSE='#'\n-else\n-  USER_SPECIFIED_CLASSLIB_TRUE='#'\n-  USER_SPECIFIED_CLASSLIB_FALSE=\n-fi\n-\n-\n-\n-# Check whether --with-vm-classes or --without-vm-classes was given.\n-if test \"${with_vm_classes+set}\" = set; then\n-  withval=\"$with_vm_classes\"\n-  vm_classes=\"$with_vm_classes\"\n-else\n-  vm_classes='${top_srcdir}/vm/reference'\n-fi;\n-\n-\n-\n-echo \"$as_me:$LINENO: checking whether to enable maintainer-specific portions of Makefiles\" >&5\n-echo $ECHO_N \"checking whether to enable maintainer-specific portions of Makefiles... $ECHO_C\" >&6\n-    # Check whether --enable-maintainer-mode or --disable-maintainer-mode was given.\n-if test \"${enable_maintainer_mode+set}\" = set; then\n-  enableval=\"$enable_maintainer_mode\"\n-  USE_MAINTAINER_MODE=$enableval\n-else\n-  USE_MAINTAINER_MODE=no\n-fi;\n-  echo \"$as_me:$LINENO: result: $USE_MAINTAINER_MODE\" >&5\n-echo \"${ECHO_T}$USE_MAINTAINER_MODE\" >&6\n-\n-\n-if test $USE_MAINTAINER_MODE = yes; then\n-  MAINTAINER_MODE_TRUE=\n-  MAINTAINER_MODE_FALSE='#'\n-else\n-  MAINTAINER_MODE_TRUE='#'\n-  MAINTAINER_MODE_FALSE=\n-fi\n-\n-  MAINT=$MAINTAINER_MODE_TRUE\n-\n-\n-\n-# Check whether --enable-debug or --disable-debug was given.\n-if test \"${enable_debug+set}\" = set; then\n-  enableval=\"$enable_debug\"\n-  case \"${enableval}\" in\n-                yes)\n-              \tLIBDEBUG=\"true\"\n-\n-cat >>confdefs.h <<\\_ACEOF\n-#define DEBUG 1\n-_ACEOF\n-\n-              \t;;\n-                no)   LIBDEBUG=\"false\" ;;\n-                *) \t{ { echo \"$as_me:$LINENO: error: bad value ${enableval} for --enable-debug\" >&5\n-echo \"$as_me: error: bad value ${enableval} for --enable-debug\" >&2;}\n-   { (exit 1); exit 1; }; } ;;\n-              esac\n-else\n-  LIBDEBUG=\"false\"\n-fi;\n-\n-\n-# Check whether --enable-load-library or --disable-load-library was given.\n-if test \"${enable_load_library+set}\" = set; then\n-  enableval=\"$enable_load_library\"\n-  case \"${enableval}\" in\n-                yes) INIT_LOAD_LIBRARY=\"true\" ;;\n-                no) INIT_LOAD_LIBRARY=\"false\" ;;\n-                *) { { echo \"$as_me:$LINENO: error: bad value ${enableval} for --enable-load-library\" >&5\n-echo \"$as_me: error: bad value ${enableval} for --enable-load-library\" >&2;}\n-   { (exit 1); exit 1; }; } ;;\n-              esac\n-else\n-  INIT_LOAD_LIBRARY=\"true\"\n-fi;\n-\n-\n-\n-\n-# Check whether --with-ecj-jar or --without-ecj-jar was given.\n-if test \"${with_ecj_jar+set}\" = set; then\n-  withval=\"$with_ecj_jar\"\n-  ECJ_JAR=$withval\n-else\n-  if test -f $multi_basedir/ecj.jar; then\n-\t       ECJ_JAR='$(jardir)/ecj.jar'\n-\t     fi\n-fi;\n-\n-\n-# Check whether --enable-java-lang-system-explicit-initialization or --disable-java-lang-system-explicit-initialization was given.\n-if test \"${enable_java_lang_system_explicit_initialization+set}\" = set; then\n-  enableval=\"$enable_java_lang_system_explicit_initialization\"\n-  case \"${enableval}\" in\n-                yes|true) JAVA_LANG_SYSTEM_EXPLICIT_INITIALIZATION=\"true\" ;;\n-                no|false) JAVA_LANG_SYSTEM_EXPLICIT_INITIALIZATION=\"false\" ;;\n-                *) { { echo \"$as_me:$LINENO: error: bad value ${enableval} for --enable-java-lang-system-explicit-initialization\" >&5\n-echo \"$as_me: error: bad value ${enableval} for --enable-java-lang-system-explicit-initialization\" >&2;}\n-   { (exit 1); exit 1; }; } ;;\n-              esac\n-else\n-  JAVA_LANG_SYSTEM_EXPLICIT_INITIALIZATION=\"false\"\n-fi;\n-\n-\n-\n-REMOVE=\"\"\n-\n-\n-# Extract the first word of \"mkdir\", so it can be a program name with args.\n-set dummy mkdir; ac_word=$2\n-echo \"$as_me:$LINENO: checking for $ac_word\" >&5\n-echo $ECHO_N \"checking for $ac_word... $ECHO_C\" >&6\n-if test \"${ac_cv_path_MKDIR+set}\" = set; then\n-  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n-else\n-  case $MKDIR in\n-  [\\\\/]* | ?:[\\\\/]*)\n-  ac_cv_path_MKDIR=\"$MKDIR\" # Let the user override the test with a path.\n-  ;;\n-  *)\n-  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\n-for as_dir in $PATH\n-do\n-  IFS=$as_save_IFS\n-  test -z \"$as_dir\" && as_dir=.\n-  for ac_exec_ext in '' $ac_executable_extensions; do\n-  if $as_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n-    ac_cv_path_MKDIR=\"$as_dir/$ac_word$ac_exec_ext\"\n-    echo \"$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext\" >&5\n-    break 2\n-  fi\n-done\n-done\n-\n-  ;;\n-esac\n-fi\n-MKDIR=$ac_cv_path_MKDIR\n-\n-if test -n \"$MKDIR\"; then\n-  echo \"$as_me:$LINENO: result: $MKDIR\" >&5\n-echo \"${ECHO_T}$MKDIR\" >&6\n-else\n-  echo \"$as_me:$LINENO: result: no\" >&5\n-echo \"${ECHO_T}no\" >&6\n-fi\n-\n-# Extract the first word of \"cp\", so it can be a program name with args.\n-set dummy cp; ac_word=$2\n-echo \"$as_me:$LINENO: checking for $ac_word\" >&5\n-echo $ECHO_N \"checking for $ac_word... $ECHO_C\" >&6\n-if test \"${ac_cv_path_CP+set}\" = set; then\n-  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n-else\n-  case $CP in\n-  [\\\\/]* | ?:[\\\\/]*)\n-  ac_cv_path_CP=\"$CP\" # Let the user override the test with a path.\n-  ;;\n-  *)\n-  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\n-for as_dir in $PATH\n-do\n-  IFS=$as_save_IFS\n-  test -z \"$as_dir\" && as_dir=.\n-  for ac_exec_ext in '' $ac_executable_extensions; do\n-  if $as_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n-    ac_cv_path_CP=\"$as_dir/$ac_word$ac_exec_ext\"\n-    echo \"$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext\" >&5\n-    break 2\n-  fi\n-done\n-done\n-\n-  ;;\n-esac\n-fi\n-CP=$ac_cv_path_CP\n-\n-if test -n \"$CP\"; then\n-  echo \"$as_me:$LINENO: result: $CP\" >&5\n-echo \"${ECHO_T}$CP\" >&6\n+if test -n \"$CP\"; then\n+  echo \"$as_me:$LINENO: result: $CP\" >&5\n+echo \"${ECHO_T}$CP\" >&6\n else\n   echo \"$as_me:$LINENO: result: no\" >&5\n echo \"${ECHO_T}no\" >&6\n@@ -26023,8 +24517,10 @@ echo $ECHO_N \"checking for user supplied fastjar... $ECHO_C\" >&6\n echo \"${ECHO_T}${FASTJAR}\" >&6\n \n else\n-  # Extract the first word of \"fastjar\", so it can be a program name with args.\n-set dummy fastjar; ac_word=$2\n+  for ac_prog in fastjar gjar jar\n+do\n+  # Extract the first word of \"$ac_prog\", so it can be a program name with args.\n+set dummy $ac_prog; ac_word=$2\n echo \"$as_me:$LINENO: checking for $ac_word\" >&5\n echo $ECHO_N \"checking for $ac_word... $ECHO_C\" >&6\n if test \"${ac_cv_path_FASTJAR+set}\" = set; then\n@@ -26062,6 +24558,9 @@ else\n echo \"${ECHO_T}no\" >&6\n fi\n \n+  test -n \"$FASTJAR\" && break\n+done\n+\n fi;\n   if test x\"${FASTJAR}\" != x; then\n     ZIP=\"\"\n@@ -26153,6 +24652,24 @@ fi;\n   fi\n \n \n+  # Check whether --enable-tools or --disable-tools was given.\n+if test \"${enable_tools+set}\" = set; then\n+  enableval=\"$enable_tools\"\n+  case \"${enableval}\" in\n+\t\t  yes) TOOLSDIR=\"tools\" ;;\n+\t\t  no) TOOLSDIR=\"\" ;;\n+\t\t  *) { { echo \"$as_me:$LINENO: error: bad value ${enableval} for --enable-tools\" >&5\n+echo \"$as_me: error: bad value ${enableval} for --enable-tools\" >&2;}\n+   { (exit 1); exit 1; }; } ;;\n+\t\tesac\n+else\n+  TOOLSDIR=\"tools\"\n+fi;\n+  if test \"x${use_zip}\" = xno && test \"x${install_class_files}\" = xno; then\n+    TOOLSDIR=\"\"\n+  fi\n+\n+\n \n \n \n@@ -26260,8 +24777,33 @@ fi\n if test \"${with_jay+set}\" = set; then\n   withval=\"$with_jay\"\n \n-    if test -d \"${withval}\"; then\n+    echo \"$as_me:$LINENO: checking whether to regenerate parsers with jay\" >&5\n+echo $ECHO_N \"checking whether to regenerate parsers with jay... $ECHO_C\" >&6\n+    JAY_FOUND=no\n+    JAY_DIR_PATH=\n+    if test \"x${withval}\" = xno; then\n+      echo \"$as_me:$LINENO: result: no\" >&5\n+echo \"${ECHO_T}no\" >&6\n+    elif test \"x${withval}\" = xyes; then\n+      echo \"$as_me:$LINENO: result: yes\" >&5\n+echo \"${ECHO_T}yes\" >&6\n+      JAY_DIR_PATH=\"/usr/share/jay\"\n+    elif test -d \"${withval}\"; then\n+      echo \"$as_me:$LINENO: result: yes\" >&5\n+echo \"${ECHO_T}yes\" >&6\n       JAY_DIR_PATH=\"${withval}\"\n+    elif test -f \"${withval}\"; then\n+      echo \"$as_me:$LINENO: result: yes\" >&5\n+echo \"${ECHO_T}yes\" >&6\n+      JAY_DIR_PATH=`dirname \"${withval}\"`\n+      JAY=\"${withval}\"\n+    else\n+        { { echo \"$as_me:$LINENO: error: jay not found at ${withval}\" >&5\n+echo \"$as_me: error: jay not found at ${withval}\" >&2;}\n+   { (exit 1); exit 1; }; }\n+    fi\n+\n+    if test \"x${JAY_DIR_PATH}\" != x; then\n       # Extract the first word of \"jay\", so it can be a program name with args.\n set dummy jay; ac_word=$2\n echo \"$as_me:$LINENO: checking for $ac_word\" >&5\n@@ -26275,7 +24817,8 @@ else\n   ;;\n   *)\n   as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\n-for as_dir in ${JAY_DIR_PATH}\n+as_dummy=\"${JAY_DIR_PATH}:${PATH}\"\n+for as_dir in $as_dummy\n do\n   IFS=$as_save_IFS\n   test -z \"$as_dir\" && as_dir=.\n@@ -26303,17 +24846,12 @@ echo \"${ECHO_T}no\" >&6\n fi\n \n       if test \"x${JAY}\" = xno; then\n-        { { echo \"$as_me:$LINENO: error: \\\"jay executable not found\\\"\" >&5\n-echo \"$as_me: error: \\\"jay executable not found\\\"\" >&2;}\n+        { { echo \"$as_me:$LINENO: error: jay executable not found\" >&5\n+echo \"$as_me: error: jay executable not found\" >&2;}\n    { (exit 1); exit 1; }; };\n       fi\n-    else\n-      JAY_DIR_PATH=`dirname \"${withval}\"`\n-      JAY=\"${withval}\"\n-\n-    fi\n-    JAY_SKELETON=\"${JAY_DIR_PATH}/skeleton\"\n-    as_ac_File=`echo \"ac_cv_file_${JAY_SKELETON}\" | $as_tr_sh`\n+      JAY_SKELETON=\"${JAY_DIR_PATH}/skeleton\"\n+      as_ac_File=`echo \"ac_cv_file_${JAY_SKELETON}\" | $as_tr_sh`\n echo \"$as_me:$LINENO: checking for ${JAY_SKELETON}\" >&5\n echo $ECHO_N \"checking for ${JAY_SKELETON}... $ECHO_C\" >&6\n if eval \"test \\\"\\${$as_ac_File+set}\\\" = set\"; then\n@@ -26334,15 +24872,20 @@ echo \"${ECHO_T}`eval echo '${'$as_ac_File'}'`\" >&6\n if test `eval echo '${'$as_ac_File'}'` = yes; then\n   :\n else\n-  { { echo \"$as_me:$LINENO: error: \\\"Expected skeleton file in \\`dirname ${withval}\\`\\\"\" >&5\n-echo \"$as_me: error: \\\"Expected skeleton file in \\`dirname ${withval}\\`\\\"\" >&2;}\n+  { { echo \"$as_me:$LINENO: error: Expected skeleton file in ${JAY_DIR_PATH}\" >&5\n+echo \"$as_me: error: Expected skeleton file in ${JAY_DIR_PATH}\" >&2;}\n    { (exit 1); exit 1; }; }\n fi\n \n-    JAY_FOUND=yes\n+      JAY_FOUND=yes\n+    fi\n \n else\n \n+    echo \"$as_me:$LINENO: checking whether to regenerate parsers with jay\" >&5\n+echo $ECHO_N \"checking whether to regenerate parsers with jay... $ECHO_C\" >&6\n+    echo \"$as_me:$LINENO: result: no\" >&5\n+echo \"${ECHO_T}no\" >&6\n     JAY_FOUND=no\n \n fi;\n@@ -29306,6 +27849,173 @@ fi\n \n \n \n+# Check for javac if we need to build either the class library,\n+# the examples or the tools\n+if test \"x${use_glibj_zip}\" = xfalse || \\\n+   test \"x${EXAMPLESDIR}\" != x || \\\n+   test \"x${TOOLSDIR}\" != x && \\\n+   test \"x${build_class_files}\" != xno; then\n+\n+if test \"x$JAVAPREFIX\" = x; then\n+        test \"x$JAVAC\" = x && for ac_prog in \"ecj$EXEEXT -warn:-deprecation,serial,unusedImport\" \"ecj-3.3$EXEEXT -warn:-deprecation,serial,unusedImport\" \"ecj-3.2$EXEEXT -warn:-deprecation,serial,unusedImport\" \"javac$EXEEXT -Xlint:unchecked\" \"gcj$EXEEXT -C\"\n+do\n+  # Extract the first word of \"$ac_prog\", so it can be a program name with args.\n+set dummy $ac_prog; ac_word=$2\n+echo \"$as_me:$LINENO: checking for $ac_word\" >&5\n+echo $ECHO_N \"checking for $ac_word... $ECHO_C\" >&6\n+if test \"${ac_cv_prog_JAVAC+set}\" = set; then\n+  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n+else\n+  if test -n \"$JAVAC\"; then\n+  ac_cv_prog_JAVAC=\"$JAVAC\" # Let the user override the test.\n+else\n+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\n+for as_dir in $PATH\n+do\n+  IFS=$as_save_IFS\n+  test -z \"$as_dir\" && as_dir=.\n+  for ac_exec_ext in '' $ac_executable_extensions; do\n+  if $as_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n+    ac_cv_prog_JAVAC=\"$ac_prog\"\n+    echo \"$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext\" >&5\n+    break 2\n+  fi\n+done\n+done\n+\n+fi\n+fi\n+JAVAC=$ac_cv_prog_JAVAC\n+if test -n \"$JAVAC\"; then\n+  echo \"$as_me:$LINENO: result: $JAVAC\" >&5\n+echo \"${ECHO_T}$JAVAC\" >&6\n+else\n+  echo \"$as_me:$LINENO: result: no\" >&5\n+echo \"${ECHO_T}no\" >&6\n+fi\n+\n+  test -n \"$JAVAC\" && break\n+done\n+\n+else\n+        test \"x$JAVAC\" = x && for ac_prog in \"ecj$EXEEXT -warn:-deprecation,serial,unusedImport\" \"ecj-3.3$EXEEXT -warn:-deprecation,serial,unusedImport\" \"ecj-3.2$EXEEXT -warn:-deprecation,serial,unusedImport\" \"javac$EXEEXT -Xlint:unchecked\" \"gcj$EXEEXT -C\"\n+do\n+  # Extract the first word of \"$ac_prog\", so it can be a program name with args.\n+set dummy $ac_prog; ac_word=$2\n+echo \"$as_me:$LINENO: checking for $ac_word\" >&5\n+echo $ECHO_N \"checking for $ac_word... $ECHO_C\" >&6\n+if test \"${ac_cv_prog_JAVAC+set}\" = set; then\n+  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n+else\n+  if test -n \"$JAVAC\"; then\n+  ac_cv_prog_JAVAC=\"$JAVAC\" # Let the user override the test.\n+else\n+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\n+for as_dir in $PATH\n+do\n+  IFS=$as_save_IFS\n+  test -z \"$as_dir\" && as_dir=.\n+  for ac_exec_ext in '' $ac_executable_extensions; do\n+  if $as_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n+    ac_cv_prog_JAVAC=\"$ac_prog\"\n+    echo \"$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext\" >&5\n+    break 2\n+  fi\n+done\n+done\n+\n+fi\n+fi\n+JAVAC=$ac_cv_prog_JAVAC\n+if test -n \"$JAVAC\"; then\n+  echo \"$as_me:$LINENO: result: $JAVAC\" >&5\n+echo \"${ECHO_T}$JAVAC\" >&6\n+else\n+  echo \"$as_me:$LINENO: result: no\" >&5\n+echo \"${ECHO_T}no\" >&6\n+fi\n+\n+  test -n \"$JAVAC\" && break\n+done\n+test -n \"$JAVAC\" || JAVAC=\"$JAVAPREFIX\"\n+\n+fi\n+test \"x$JAVAC\" = x && { { echo \"$as_me:$LINENO: error: no acceptable Java compiler found in \\$PATH\" >&5\n+echo \"$as_me: error: no acceptable Java compiler found in \\$PATH\" >&2;}\n+   { (exit 1); exit 1; }; }\n+if test \"$enable_java_maintainer_mode\" = yes; then\n+\n+echo \"$as_me:$LINENO: checking if $JAVAC works\" >&5\n+echo $ECHO_N \"checking if $JAVAC works... $ECHO_C\" >&6\n+if test \"${ac_cv_prog_javac_works+set}\" = set; then\n+  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n+else\n+\n+JAVA_TEST=Object.java\n+CLASS_TEST=Object.class\n+cat << \\EOF > $JAVA_TEST\n+/* #line 27957 \"configure\" */\n+package java.lang;\n+\n+public class Object\n+{\n+  static <T> void doStuff()\n+  {\n+  }\n+}\n+EOF\n+if { ac_try='$JAVAC $JAVA_TEST'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; } >/dev/null 2>&1; then\n+  ac_cv_prog_javac_works=yes\n+else\n+  { { echo \"$as_me:$LINENO: error: The Java compiler $JAVAC failed (see config.log, check the CLASSPATH?)\" >&5\n+echo \"$as_me: error: The Java compiler $JAVAC failed (see config.log, check the CLASSPATH?)\" >&2;}\n+   { (exit 1); exit 1; }; }\n+  echo \"configure: failed program was:\" >&5\n+  cat $JAVA_TEST >&5\n+fi\n+rm -f $JAVA_TEST $CLASS_TEST\n+\n+fi\n+echo \"$as_me:$LINENO: result: $ac_cv_prog_javac_works\" >&5\n+echo \"${ECHO_T}$ac_cv_prog_javac_works\" >&6\n+\n+fi\n+\n+\n+  JAVA_TEST=Test.java\n+  CLASS_TEST=Test.class\n+  cat << \\EOF > $JAVA_TEST\n+  /* #line 27993 \"configure\" */\n+  public class Test\n+  {\n+    public static void main(String args)\n+    {\n+      System.out.println(\"Hello World\");\n+    }\n+  }\n+EOF\n+  echo \"$as_me:$LINENO: checking whether javac supports -J\" >&5\n+echo $ECHO_N \"checking whether javac supports -J... $ECHO_C\" >&6\n+  $JAVAC $JAVACFLAGS -J-Xmx768M -sourcepath '' $JAVA_TEST\n+  javac_result=$?\n+  if test \"x$javac_result\" = \"x0\"; then\n+    echo \"$as_me:$LINENO: result: yes\" >&5\n+echo \"${ECHO_T}yes\" >&6\n+    JAVAC_MEM_OPT=\"-J-Xmx768M\"\n+  else\n+    echo \"$as_me:$LINENO: result: no\" >&5\n+echo \"${ECHO_T}no\" >&6\n+  fi\n+  rm -f $JAVA_TEST $CLASS_TEST\n+\n+\n+fi\n+\n \n # Check whether --with-escher or --without-escher was given.\n if test \"${with_escher+set}\" = set; then\n@@ -29630,7 +28340,7 @@ fi\n \n \n \n-                                                                                                                                                                                                                                                                                                                                                                                                                                              ac_config_files=\"$ac_config_files Makefile doc/Makefile doc/api/Makefile external/Makefile external/sax/Makefile external/w3c_dom/Makefile external/relaxngDatatype/Makefile external/jsr166/Makefile gnu/classpath/Configuration.java gnu/java/security/Configuration.java include/Makefile native/Makefile native/fdlibm/Makefile native/jawt/Makefile native/jni/Makefile native/jni/classpath/Makefile native/jni/java-io/Makefile native/jni/java-lang/Makefile native/jni/java-net/Makefile native/jni/java-nio/Makefile native/jni/java-util/Makefile native/jni/gtk-peer/Makefile native/jni/gconf-peer/Makefile native/jni/gstreamer-peer/Makefile native/jni/qt-peer/Makefile native/jni/xmlj/Makefile native/jni/midi-alsa/Makefile native/jni/midi-dssi/Makefile native/jni/native-lib/Makefile native/plugin/Makefile resource/Makefile resource/META-INF/services/java.util.prefs.PreferencesFactory resource/META-INF/services/javax.sound.sampled.spi.AudioFileReader resource/META-INF/services/javax.sound.sampled.spi.MixerProvider scripts/Makefile scripts/classpath.spec lib/Makefile lib/gen-classlist.sh lib/copy-vmresources.sh tools/Makefile examples/Makefile examples/Makefile.jawt examples/Makefile.java2d\"\n+                                                                                                                                                                                                                                                                                                                                                                                                                                                        ac_config_files=\"$ac_config_files Makefile doc/Makefile doc/api/Makefile external/Makefile external/sax/Makefile external/w3c_dom/Makefile external/relaxngDatatype/Makefile external/jsr166/Makefile gnu/classpath/Configuration.java gnu/java/security/Configuration.java include/Makefile native/Makefile native/fdlibm/Makefile native/jawt/Makefile native/jni/Makefile native/jni/classpath/Makefile native/jni/java-io/Makefile native/jni/java-lang/Makefile native/jni/java-net/Makefile native/jni/java-nio/Makefile native/jni/java-util/Makefile native/jni/gtk-peer/Makefile native/jni/gconf-peer/Makefile native/jni/gstreamer-peer/Makefile native/jni/qt-peer/Makefile native/jni/xmlj/Makefile native/jni/midi-alsa/Makefile native/jni/midi-dssi/Makefile native/jni/native-lib/Makefile native/plugin/Makefile resource/Makefile resource/META-INF/services/java.util.prefs.PreferencesFactory resource/META-INF/services/javax.sound.sampled.spi.AudioFileReader resource/META-INF/services/javax.sound.sampled.spi.MixerProvider scripts/Makefile scripts/classpath.spec lib/Makefile lib/gen-classlist.sh lib/copy-vmresources.sh scripts/check_jni_methods.sh tools/Makefile examples/Makefile examples/Makefile.jawt examples/Makefile.java2d\"\n \n \n if test \"x${COMPILE_WRAPPERS}\" = xno\n@@ -29898,76 +28608,6 @@ echo \"$as_me: error: conditional \\\"am__fastdepCXX\\\" was never defined.\n Usually this means the macro was only invoked conditionally.\" >&2;}\n    { (exit 1); exit 1; }; }\n fi\n-if test -z \"${FOUND_GCJ_TRUE}\" && test -z \"${FOUND_GCJ_FALSE}\"; then\n-  { { echo \"$as_me:$LINENO: error: conditional \\\"FOUND_GCJ\\\" was never defined.\n-Usually this means the macro was only invoked conditionally.\" >&5\n-echo \"$as_me: error: conditional \\\"FOUND_GCJ\\\" was never defined.\n-Usually this means the macro was only invoked conditionally.\" >&2;}\n-   { (exit 1); exit 1; }; }\n-fi\n-if test -z \"${FOUND_JIKES_TRUE}\" && test -z \"${FOUND_JIKES_FALSE}\"; then\n-  { { echo \"$as_me:$LINENO: error: conditional \\\"FOUND_JIKES\\\" was never defined.\n-Usually this means the macro was only invoked conditionally.\" >&5\n-echo \"$as_me: error: conditional \\\"FOUND_JIKES\\\" was never defined.\n-Usually this means the macro was only invoked conditionally.\" >&2;}\n-   { (exit 1); exit 1; }; }\n-fi\n-if test -z \"${FOUND_ECJ_TRUE}\" && test -z \"${FOUND_ECJ_FALSE}\"; then\n-  { { echo \"$as_me:$LINENO: error: conditional \\\"FOUND_ECJ\\\" was never defined.\n-Usually this means the macro was only invoked conditionally.\" >&5\n-echo \"$as_me: error: conditional \\\"FOUND_ECJ\\\" was never defined.\n-Usually this means the macro was only invoked conditionally.\" >&2;}\n-   { (exit 1); exit 1; }; }\n-fi\n-if test -z \"${FOUND_JAVAC_TRUE}\" && test -z \"${FOUND_JAVAC_FALSE}\"; then\n-  { { echo \"$as_me:$LINENO: error: conditional \\\"FOUND_JAVAC\\\" was never defined.\n-Usually this means the macro was only invoked conditionally.\" >&5\n-echo \"$as_me: error: conditional \\\"FOUND_JAVAC\\\" was never defined.\n-Usually this means the macro was only invoked conditionally.\" >&2;}\n-   { (exit 1); exit 1; }; }\n-fi\n-if test -z \"${FOUND_GCJ_TRUE}\" && test -z \"${FOUND_GCJ_FALSE}\"; then\n-  { { echo \"$as_me:$LINENO: error: conditional \\\"FOUND_GCJ\\\" was never defined.\n-Usually this means the macro was only invoked conditionally.\" >&5\n-echo \"$as_me: error: conditional \\\"FOUND_GCJ\\\" was never defined.\n-Usually this means the macro was only invoked conditionally.\" >&2;}\n-   { (exit 1); exit 1; }; }\n-fi\n-if test -z \"${FOUND_JIKES_TRUE}\" && test -z \"${FOUND_JIKES_FALSE}\"; then\n-  { { echo \"$as_me:$LINENO: error: conditional \\\"FOUND_JIKES\\\" was never defined.\n-Usually this means the macro was only invoked conditionally.\" >&5\n-echo \"$as_me: error: conditional \\\"FOUND_JIKES\\\" was never defined.\n-Usually this means the macro was only invoked conditionally.\" >&2;}\n-   { (exit 1); exit 1; }; }\n-fi\n-if test -z \"${FOUND_ECJ_TRUE}\" && test -z \"${FOUND_ECJ_FALSE}\"; then\n-  { { echo \"$as_me:$LINENO: error: conditional \\\"FOUND_ECJ\\\" was never defined.\n-Usually this means the macro was only invoked conditionally.\" >&5\n-echo \"$as_me: error: conditional \\\"FOUND_ECJ\\\" was never defined.\n-Usually this means the macro was only invoked conditionally.\" >&2;}\n-   { (exit 1); exit 1; }; }\n-fi\n-if test -z \"${FOUND_JAVAC_TRUE}\" && test -z \"${FOUND_JAVAC_FALSE}\"; then\n-  { { echo \"$as_me:$LINENO: error: conditional \\\"FOUND_JAVAC\\\" was never defined.\n-Usually this means the macro was only invoked conditionally.\" >&5\n-echo \"$as_me: error: conditional \\\"FOUND_JAVAC\\\" was never defined.\n-Usually this means the macro was only invoked conditionally.\" >&2;}\n-   { (exit 1); exit 1; }; }\n-fi\n-if test -z \"${FOUND_KJC_TRUE}\" && test -z \"${FOUND_KJC_FALSE}\"; then\n-  { { echo \"$as_me:$LINENO: error: conditional \\\"FOUND_KJC\\\" was never defined.\n-Usually this means the macro was only invoked conditionally.\" >&5\n-echo \"$as_me: error: conditional \\\"FOUND_KJC\\\" was never defined.\n-Usually this means the macro was only invoked conditionally.\" >&2;}\n-   { (exit 1); exit 1; }; }\n-fi\n-if test -z \"${USER_SPECIFIED_CLASSLIB_TRUE}\" && test -z \"${USER_SPECIFIED_CLASSLIB_FALSE}\"; then\n-  { { echo \"$as_me:$LINENO: error: conditional \\\"USER_SPECIFIED_CLASSLIB\\\" was never defined.\n-Usually this means the macro was only invoked conditionally.\" >&5\n-echo \"$as_me: error: conditional \\\"USER_SPECIFIED_CLASSLIB\\\" was never defined.\n-Usually this means the macro was only invoked conditionally.\" >&2;}\n-   { (exit 1); exit 1; }; }\n-fi\n if test -z \"${MAINTAINER_MODE_TRUE}\" && test -z \"${MAINTAINER_MODE_FALSE}\"; then\n   { { echo \"$as_me:$LINENO: error: conditional \\\"MAINTAINER_MODE\\\" was never defined.\n Usually this means the macro was only invoked conditionally.\" >&5\n@@ -30302,7 +28942,7 @@ _ASBOX\n } >&5\n cat >&5 <<_CSEOF\n \n-This file was extended by GNU Classpath $as_me 0.96-pre, which was\n+This file was extended by GNU Classpath $as_me 0.97.2, which was\n generated by GNU Autoconf 2.59.  Invocation command line was\n \n   CONFIG_FILES    = $CONFIG_FILES\n@@ -30368,7 +29008,7 @@ _ACEOF\n \n cat >>$CONFIG_STATUS <<_ACEOF\n ac_cs_version=\"\\\\\n-GNU Classpath config.status 0.96-pre\n+GNU Classpath config.status 0.97.2\n configured by $0, generated by GNU Autoconf 2.59,\n   with options \\\\\"`echo \"$ac_configure_args\" | sed 's/[\\\\\"\"\\`\\$]/\\\\\\\\&/g'`\\\\\"\n \n@@ -30880,6 +29520,7 @@ do\n   \"lib/Makefile\" ) CONFIG_FILES=\"$CONFIG_FILES lib/Makefile\" ;;\n   \"lib/gen-classlist.sh\" ) CONFIG_FILES=\"$CONFIG_FILES lib/gen-classlist.sh\" ;;\n   \"lib/copy-vmresources.sh\" ) CONFIG_FILES=\"$CONFIG_FILES lib/copy-vmresources.sh\" ;;\n+  \"scripts/check_jni_methods.sh\" ) CONFIG_FILES=\"$CONFIG_FILES scripts/check_jni_methods.sh\" ;;\n   \"tools/Makefile\" ) CONFIG_FILES=\"$CONFIG_FILES tools/Makefile\" ;;\n   \"examples/Makefile\" ) CONFIG_FILES=\"$CONFIG_FILES examples/Makefile\" ;;\n   \"examples/Makefile.jawt\" ) CONFIG_FILES=\"$CONFIG_FILES examples/Makefile.jawt\" ;;\n@@ -31165,26 +29806,6 @@ s,@GLIB_LIBS@,$GLIB_LIBS,;t t\n s,@PLUGIN_DIR@,$PLUGIN_DIR,;t t\n s,@USER_JAVAH@,$USER_JAVAH,;t t\n s,@CLASSPATH_INCLUDES@,$CLASSPATH_INCLUDES,;t t\n-s,@GCJ@,$GCJ,;t t\n-s,@JIKES@,$JIKES,;t t\n-s,@JIKESENCODING@,$JIKESENCODING,;t t\n-s,@JIKESWARNINGS@,$JIKESWARNINGS,;t t\n-s,@KJC@,$KJC,;t t\n-s,@ECJ@,$ECJ,;t t\n-s,@JAVAC@,$JAVAC,;t t\n-s,@FOUND_GCJ_TRUE@,$FOUND_GCJ_TRUE,;t t\n-s,@FOUND_GCJ_FALSE@,$FOUND_GCJ_FALSE,;t t\n-s,@FOUND_JIKES_TRUE@,$FOUND_JIKES_TRUE,;t t\n-s,@FOUND_JIKES_FALSE@,$FOUND_JIKES_FALSE,;t t\n-s,@FOUND_ECJ_TRUE@,$FOUND_ECJ_TRUE,;t t\n-s,@FOUND_ECJ_FALSE@,$FOUND_ECJ_FALSE,;t t\n-s,@FOUND_JAVAC_TRUE@,$FOUND_JAVAC_TRUE,;t t\n-s,@FOUND_JAVAC_FALSE@,$FOUND_JAVAC_FALSE,;t t\n-s,@FOUND_KJC_TRUE@,$FOUND_KJC_TRUE,;t t\n-s,@FOUND_KJC_FALSE@,$FOUND_KJC_FALSE,;t t\n-s,@USER_CLASSLIB@,$USER_CLASSLIB,;t t\n-s,@USER_SPECIFIED_CLASSLIB_TRUE@,$USER_SPECIFIED_CLASSLIB_TRUE,;t t\n-s,@USER_SPECIFIED_CLASSLIB_FALSE@,$USER_SPECIFIED_CLASSLIB_FALSE,;t t\n s,@vm_classes@,$vm_classes,;t t\n s,@MAINTAINER_MODE_TRUE@,$MAINTAINER_MODE_TRUE,;t t\n s,@MAINTAINER_MODE_FALSE@,$MAINTAINER_MODE_FALSE,;t t\n@@ -31207,6 +29828,7 @@ s,@INSTALL_CLASS_FILES_FALSE@,$INSTALL_CLASS_FILES_FALSE,;t t\n s,@BUILD_CLASS_FILES_TRUE@,$BUILD_CLASS_FILES_TRUE,;t t\n s,@BUILD_CLASS_FILES_FALSE@,$BUILD_CLASS_FILES_FALSE,;t t\n s,@EXAMPLESDIR@,$EXAMPLESDIR,;t t\n+s,@TOOLSDIR@,$TOOLSDIR,;t t\n s,@GJDOC@,$GJDOC,;t t\n s,@CREATE_API_DOCS_TRUE@,$CREATE_API_DOCS_TRUE,;t t\n s,@CREATE_API_DOCS_FALSE@,$CREATE_API_DOCS_FALSE,;t t\n@@ -31217,6 +29839,8 @@ s,@REGEN_PARSERS_FALSE@,$REGEN_PARSERS_FALSE,;t t\n s,@USE_PREBUILT_GLIBJ_ZIP_TRUE@,$USE_PREBUILT_GLIBJ_ZIP_TRUE,;t t\n s,@USE_PREBUILT_GLIBJ_ZIP_FALSE@,$USE_PREBUILT_GLIBJ_ZIP_FALSE,;t t\n s,@PATH_TO_GLIBJ_ZIP@,$PATH_TO_GLIBJ_ZIP,;t t\n+s,@JAVAC@,$JAVAC,;t t\n+s,@JAVAC_MEM_OPT@,$JAVAC_MEM_OPT,;t t\n s,@USE_ESCHER_TRUE@,$USE_ESCHER_TRUE,;t t\n s,@USE_ESCHER_FALSE@,$USE_ESCHER_FALSE,;t t\n s,@PATH_TO_ESCHER@,$PATH_TO_ESCHER,;t t"}, {"sha": "a14d2c128c378749695dffc2b0e3587d50eb2094", "filename": "libjava/classpath/configure.ac", "status": "modified", "additions": 37, "deletions": 13, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fconfigure.ac?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -6,7 +6,7 @@ dnl -----------------------------------------------------------\n dnl define([AC_CACHE_LOAD], )dnl\n dnl define([AC_CACHE_SAVE], )dnl\n \n-AC_INIT([GNU Classpath],[0.96-pre],[classpath@gnu.org],[classpath])\n+AC_INIT([GNU Classpath],[0.97.2],[classpath@gnu.org],[classpath])\n AC_CONFIG_SRCDIR(java/lang/System.java)\n \n dnl GCJ LOCAL\n@@ -338,13 +338,17 @@ dnl -----------------------------------------------------------\n dnl Regenerate headers at build time (disabled by default)\n dnl -----------------------------------------------------------\n AC_ARG_ENABLE([regen-headers],\n-              [AS_HELP_STRING(--enable-regen-headers,automatically regenerate JNI headers [default=no])],\n+              [AS_HELP_STRING(--enable-regen-headers,automatically regenerate JNI headers [default=yes if headers don't exist])],\n               [case \"${enableval}\" in\n                 yes) REGENERATE_JNI_HEADERS=yes ;;\n                 no) REGENERATE_JNI_HEADERS=no ;;\n-                *) REGENERATE_JNI_HEADERS=no ;;\n+                *) REGENERATE_JNI_HEADERS=yes ;;\n               esac],\n-              [REGENERATE_JNI_HEADERS=no])\n+              [if test -e include/java_lang_VMSystem.h; then\n+\t\t\tREGENERATE_JNI_HEADERS=no ;\n+\t\t   else\n+\t\t\tREGENERATE_JNI_HEADERS=yes ;\n+\t       fi])\n AM_CONDITIONAL(CREATE_JNI_HEADERS, test \"x${REGENERATE_JNI_HEADERS}\" = xyes)\n \n dnl -----------------------------------------------------------\n@@ -416,6 +420,8 @@ if test \"x${COMPILE_JNI}\" = xyes; then\n   dnl On that system, sys/ioctl.h will not include sys/filio.h unless\n   dnl BSD_COMP is defined; just including sys/filio.h is simpler.\n   dnl Check for crt_externs.h on Darwin.\n+  dnl Check for netinet/in_systm.h, netinet/ip.h and net/if.h for Windows CE.\n+  dnl Check for sys/loadavg.h for getloadavg() on Solaris 9.\n   AC_CHECK_HEADERS([unistd.h sys/types.h sys/config.h sys/ioctl.h \\\n \t\t    asm/ioctls.h \\\n \t\t    inttypes.h stdint.h utime.h sys/utime.h sys/filio.h \\\n@@ -426,7 +432,9 @@ if test \"x${COMPILE_JNI}\" = xyes; then\n \t\t    sys/mman.h \\\n \t\t    magic.h \\\n                     sys/event.h sys/epoll.h \\\n-\t\t    ifaddrs.h])\n+\t\t    ifaddrs.h \\\n+\t\t    netinet/in_systm.h netinet/ip.h net/if.h \\\n+\t\t    sys/loadavg.h])\n \n   AC_EGREP_HEADER(uint32_t, stdint.h, AC_DEFINE(HAVE_INT32_DEFINED, 1, [Define to 1 if you have uint32_t]))\n   AC_EGREP_HEADER(uint32_t, inttypes.h, AC_DEFINE(HAVE_INT32_DEFINED, 1, [Define to 1 if you have uint32_t]))\n@@ -442,11 +450,12 @@ if test \"x${COMPILE_JNI}\" = xyes; then\n \t\t  gethostbyname_r localtime_r \\\n \t\t  strerror_r \\\n                   fcntl \\\n+\t\t  statvfs \\  \n \t\t  mmap munmap mincore msync madvise getpagesize sysconf \\\n \t\t  lstat readlink \\\n  \t\t  inet_aton inet_addr inet_pton \\\n \t\t  getifaddrs kqueue kevent epoll_create \\\n-                  readdir_r getloadavg])\n+                  getloadavg])\n \n   LIBMAGIC=\n   AC_CHECK_LIB(magic, magic_open, LIBMAGIC=-lmagic)\n@@ -539,11 +548,13 @@ if test \"x${COMPILE_JNI}\" = xyes; then\n     if test \"$no_x\" = yes; then\n         AC_MSG_ERROR([GTK+ peers requested but no X library available])\n     fi\n-    dnl We explicitly want the XTest Extension for Robot support.\n+    dnl Check if we can link against the XTest library and set\n+    dnl HAVE_XTEST accordingly.\n     AC_CHECK_LIB([Xtst], [XTestQueryExtension],\n-    \t\t [XTEST_LIBS=\"$XTEST_LIBS -lX11 -lXtst\"],\n-\t\t [AC_MSG_ERROR([libXtst NOT found, required for GdkRobot])],\n-\t\t [${X_LIBS}])\n+                 [AC_DEFINE(HAVE_XTEST, 1, [Define to 1 if you have libXtst.])[XTEST_LIBS=\"$XTEST_LIBS -X11 -lXtst\"]],\n+                 [true],\n+                 [${X_LIBS}])\n+\n \n     PKG_CHECK_MODULES(GTK, gtk+-2.0 >= 2.8 gthread-2.0 >= 2.2 gdk-pixbuf-2.0)\n     PKG_CHECK_MODULES(FREETYPE2, freetype2)\n@@ -586,7 +597,7 @@ if test \"x${COMPILE_JNI}\" = xyes; then\n     dnl compiled in\n     USE_GCONF_PREFS_PEER=$enable_default_preferences_peer\n     if test \"$USE_GCONF_PREFS_PEER\" = \"\"; then\n-   \tDEFAULT_PREFS_PEER=gnu.java.util.prefs.GConfBasedFactory\n+      DEFAULT_PREFS_PEER=gnu.java.util.prefs.GConfBasedFactory\n     fi\n   fi\n \n@@ -614,6 +625,10 @@ if test \"x${COMPILE_JNI}\" = xyes; then\n \n \tGST_PLUGIN_LDFLAGS='-module -avoid-version -Wno-unused-parameter -no-undefined'\n \tAC_SUBST(GST_PLUGIN_LDFLAGS)\n+\n+    PKG_CHECK_MODULES(GDK, gdk-2.0 >= 2.8)\n+    AC_SUBST(GDK_CFLAGS)\n+    AC_SUBST(GDK_LIBS)\n \t\n \tdnl set the gstreamer based file reader, writer and mixer\n \tGSTREAMER_FILE_READER=gnu.javax.sound.sampled.gstreamer.io.GstAudioFileReader\n@@ -773,8 +788,6 @@ if test \"x${COMPILE_JNI}\" = xyes; then\n   AC_CONFIG_LINKS([$ac_config_links_1])\n fi\n \n-CLASSPATH_FIND_JAVAC\n-\n CLASSPATH_WITH_CLASSLIB\n \n dnl -----------------------------------------------------------\n@@ -935,6 +948,16 @@ esac;\n AM_CONDITIONAL(USE_PREBUILT_GLIBJ_ZIP, test x$use_glibj_zip = xtrue)\n AC_SUBST(PATH_TO_GLIBJ_ZIP)\n \n+# Check for javac if we need to build either the class library,\n+# the examples or the tools\n+if test \"x${use_glibj_zip}\" = xfalse || \\\n+   test \"x${EXAMPLESDIR}\" != x || \\\n+   test \"x${TOOLSDIR}\" != x && \\\n+   test \"x${build_class_files}\" != xno; then \t\n+\tAC_PROG_JAVAC\n+  \tCLASSPATH_JAVAC_MEM_CHECK\n+fi\n+\n dnl -----------------------------------------------------------\n dnl Build with Escher based X peers.\n dnl -----------------------------------------------------------\n@@ -1030,6 +1053,7 @@ scripts/classpath.spec\n lib/Makefile\n lib/gen-classlist.sh\n lib/copy-vmresources.sh\n+scripts/check_jni_methods.sh\n tools/Makefile\n examples/Makefile\n examples/Makefile.jawt"}, {"sha": "e5f9736c7239301c765e2d7abefb9bb9b9237ac5", "filename": "libjava/classpath/depcomp", "status": "modified", "additions": 76, "deletions": 17, "changes": 93, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fdepcomp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fdepcomp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fdepcomp?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -1,9 +1,10 @@\n #! /bin/sh\n # depcomp - compile a program generating dependencies as side-effects\n \n-scriptversion=2005-07-09.11\n+scriptversion=2007-03-29.01\n \n-# Copyright (C) 1999, 2000, 2003, 2004, 2005 Free Software Foundation, Inc.\n+# Copyright (C) 1999, 2000, 2003, 2004, 2005, 2006, 2007 Free Software\n+# Foundation, Inc.\n \n # This program is free software; you can redistribute it and/or modify\n # it under the terms of the GNU General Public License as published by\n@@ -91,7 +92,20 @@ gcc3)\n ## gcc 3 implements dependency tracking that does exactly what\n ## we want.  Yay!  Note: for some reason libtool 1.4 doesn't like\n ## it if -MD -MP comes after the -MF stuff.  Hmm.\n-  \"$@\" -MT \"$object\" -MD -MP -MF \"$tmpdepfile\"\n+## Unfortunately, FreeBSD c89 acceptance of flags depends upon\n+## the command line argument order; so add the flags where they\n+## appear in depend2.am.  Note that the slowdown incurred here\n+## affects only configure: in makefiles, %FASTDEP% shortcuts this.\n+  for arg\n+  do\n+    case $arg in\n+    -c) set fnord \"$@\" -MT \"$object\" -MD -MP -MF \"$tmpdepfile\" \"$arg\" ;;\n+    *)  set fnord \"$@\" \"$arg\" ;;\n+    esac\n+    shift # fnord\n+    shift # $arg\n+  done\n+  \"$@\"\n   stat=$?\n   if test $stat -eq 0; then :\n   else\n@@ -201,34 +215,39 @@ aix)\n   # current directory.  Also, the AIX compiler puts `$object:' at the\n   # start of each line; $object doesn't have directory information.\n   # Version 6 uses the directory in both cases.\n-  stripped=`echo \"$object\" | sed 's/\\(.*\\)\\..*$/\\1/'`\n-  tmpdepfile=\"$stripped.u\"\n+  dir=`echo \"$object\" | sed -e 's|/[^/]*$|/|'`\n+  test \"x$dir\" = \"x$object\" && dir=\n+  base=`echo \"$object\" | sed -e 's|^.*/||' -e 's/\\.o$//' -e 's/\\.lo$//'`\n   if test \"$libtool\" = yes; then\n+    tmpdepfile1=$dir$base.u\n+    tmpdepfile2=$base.u\n+    tmpdepfile3=$dir.libs/$base.u\n     \"$@\" -Wc,-M\n   else\n+    tmpdepfile1=$dir$base.u\n+    tmpdepfile2=$dir$base.u\n+    tmpdepfile3=$dir$base.u\n     \"$@\" -M\n   fi\n   stat=$?\n \n-  if test -f \"$tmpdepfile\"; then :\n-  else\n-    stripped=`echo \"$stripped\" | sed 's,^.*/,,'`\n-    tmpdepfile=\"$stripped.u\"\n-  fi\n-\n   if test $stat -eq 0; then :\n   else\n-    rm -f \"$tmpdepfile\"\n+    rm -f \"$tmpdepfile1\" \"$tmpdepfile2\" \"$tmpdepfile3\"\n     exit $stat\n   fi\n \n+  for tmpdepfile in \"$tmpdepfile1\" \"$tmpdepfile2\" \"$tmpdepfile3\"\n+  do\n+    test -f \"$tmpdepfile\" && break\n+  done\n   if test -f \"$tmpdepfile\"; then\n-    outname=\"$stripped.o\"\n     # Each line is of the form `foo.o: dependent.h'.\n     # Do two passes, one to just change these to\n     # `$object: dependent.h' and one to simply `dependent.h:'.\n-    sed -e \"s,^$outname:,$object :,\" < \"$tmpdepfile\" > \"$depfile\"\n-    sed -e \"s,^$outname: \\(.*\\)$,\\1:,\" < \"$tmpdepfile\" >> \"$depfile\"\n+    sed -e \"s,^.*\\.[a-z]*:,$object:,\" < \"$tmpdepfile\" > \"$depfile\"\n+    # That's a tab and a space in the [].\n+    sed -e 's,^.*\\.[a-z]*:[\t ]*,,' -e 's,$,:,' < \"$tmpdepfile\" >> \"$depfile\"\n   else\n     # The sourcefile does not contain any dependencies, so just\n     # store a dummy comment line, to avoid errors with the Makefile\n@@ -276,6 +295,46 @@ icc)\n   rm -f \"$tmpdepfile\"\n   ;;\n \n+hp2)\n+  # The \"hp\" stanza above does not work with aCC (C++) and HP's ia64\n+  # compilers, which have integrated preprocessors.  The correct option\n+  # to use with these is +Maked; it writes dependencies to a file named\n+  # 'foo.d', which lands next to the object file, wherever that\n+  # happens to be.\n+  # Much of this is similar to the tru64 case; see comments there.\n+  dir=`echo \"$object\" | sed -e 's|/[^/]*$|/|'`\n+  test \"x$dir\" = \"x$object\" && dir=\n+  base=`echo \"$object\" | sed -e 's|^.*/||' -e 's/\\.o$//' -e 's/\\.lo$//'`\n+  if test \"$libtool\" = yes; then\n+    tmpdepfile1=$dir$base.d\n+    tmpdepfile2=$dir.libs/$base.d\n+    \"$@\" -Wc,+Maked\n+  else\n+    tmpdepfile1=$dir$base.d\n+    tmpdepfile2=$dir$base.d\n+    \"$@\" +Maked\n+  fi\n+  stat=$?\n+  if test $stat -eq 0; then :\n+  else\n+     rm -f \"$tmpdepfile1\" \"$tmpdepfile2\"\n+     exit $stat\n+  fi\n+\n+  for tmpdepfile in \"$tmpdepfile1\" \"$tmpdepfile2\"\n+  do\n+    test -f \"$tmpdepfile\" && break\n+  done\n+  if test -f \"$tmpdepfile\"; then\n+    sed -e \"s,^.*\\.[a-z]*:,$object:,\" \"$tmpdepfile\" > \"$depfile\"\n+    # Add `dependent.h:' lines.\n+    sed -ne '2,${; s/^ *//; s/ \\\\*$//; s/$/:/; p;}' \"$tmpdepfile\" >> \"$depfile\"\n+  else\n+    echo \"#dummy\" > \"$depfile\"\n+  fi\n+  rm -f \"$tmpdepfile\" \"$tmpdepfile2\"\n+  ;;\n+\n tru64)\n    # The Tru64 compiler uses -MD to generate dependencies as a side\n    # effect.  `cc -MD -o foo.o ...' puts the dependencies into `foo.o.d'.\n@@ -288,13 +347,13 @@ tru64)\n \n    if test \"$libtool\" = yes; then\n       # With Tru64 cc, shared objects can also be used to make a\n-      # static library.  This mecanism is used in libtool 1.4 series to\n+      # static library.  This mechanism is used in libtool 1.4 series to\n       # handle both shared and static libraries in a single compilation.\n       # With libtool 1.4, dependencies were output in $dir.libs/$base.lo.d.\n       #\n       # With libtool 1.5 this exception was removed, and libtool now\n       # generates 2 separate objects for the 2 libraries.  These two\n-      # compilations output dependencies in in $dir.libs/$base.o.d and\n+      # compilations output dependencies in $dir.libs/$base.o.d and\n       # in $dir$base.o.d.  We have to check for both files, because\n       # one of the two compilations can be disabled.  We should prefer\n       # $dir$base.o.d over $dir.libs/$base.o.d because the latter is"}, {"sha": "7c1b244c5905c2f486c8a72b5bc8f237170c6ae3", "filename": "libjava/classpath/doc/Makefile.in", "status": "modified", "additions": 4, "deletions": 19, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fdoc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fdoc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fdoc%2FMakefile.in?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -49,6 +49,8 @@ am__aclocal_m4_deps = $(top_srcdir)/../../config/depstand.m4 \\\n \t$(top_srcdir)/../../ltoptions.m4 \\\n \t$(top_srcdir)/../../ltsugar.m4 \\\n \t$(top_srcdir)/../../ltversion.m4 \\\n+\t$(top_srcdir)/m4/ac_prog_javac.m4 \\\n+\t$(top_srcdir)/m4/ac_prog_javac_works.m4 \\\n \t$(top_srcdir)/m4/acattribute.m4 $(top_srcdir)/m4/accross.m4 \\\n \t$(top_srcdir)/m4/acinclude.m4 \\\n \t$(top_srcdir)/m4/ax_create_stdint_h.m4 \\\n@@ -154,7 +156,6 @@ DUMPBIN = @DUMPBIN@\n ECHO_C = @ECHO_C@\n ECHO_N = @ECHO_N@\n ECHO_T = @ECHO_T@\n-ECJ = @ECJ@\n ECJ_JAR = @ECJ_JAR@\n EGREP = @EGREP@\n ENABLE_LOCAL_SOCKETS_FALSE = @ENABLE_LOCAL_SOCKETS_FALSE@\n@@ -166,19 +167,8 @@ EXTRA_CFLAGS = @EXTRA_CFLAGS@\n FASTJAR = @FASTJAR@\n FGREP = @FGREP@\n FIND = @FIND@\n-FOUND_ECJ_FALSE = @FOUND_ECJ_FALSE@\n-FOUND_ECJ_TRUE = @FOUND_ECJ_TRUE@\n-FOUND_GCJ_FALSE = @FOUND_GCJ_FALSE@\n-FOUND_GCJ_TRUE = @FOUND_GCJ_TRUE@\n-FOUND_JAVAC_FALSE = @FOUND_JAVAC_FALSE@\n-FOUND_JAVAC_TRUE = @FOUND_JAVAC_TRUE@\n-FOUND_JIKES_FALSE = @FOUND_JIKES_FALSE@\n-FOUND_JIKES_TRUE = @FOUND_JIKES_TRUE@\n-FOUND_KJC_FALSE = @FOUND_KJC_FALSE@\n-FOUND_KJC_TRUE = @FOUND_KJC_TRUE@\n FREETYPE2_CFLAGS = @FREETYPE2_CFLAGS@\n FREETYPE2_LIBS = @FREETYPE2_LIBS@\n-GCJ = @GCJ@\n GCONF_CFLAGS = @GCONF_CFLAGS@\n GCONF_LIBS = @GCONF_LIBS@\n GDK_CFLAGS = @GDK_CFLAGS@\n@@ -210,15 +200,12 @@ INSTALL_PROGRAM = @INSTALL_PROGRAM@\n INSTALL_SCRIPT = @INSTALL_SCRIPT@\n INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@\n JAVAC = @JAVAC@\n+JAVAC_MEM_OPT = @JAVAC_MEM_OPT@\n JAVA_LANG_SYSTEM_EXPLICIT_INITIALIZATION = @JAVA_LANG_SYSTEM_EXPLICIT_INITIALIZATION@\n JAVA_MAINTAINER_MODE_FALSE = @JAVA_MAINTAINER_MODE_FALSE@\n JAVA_MAINTAINER_MODE_TRUE = @JAVA_MAINTAINER_MODE_TRUE@\n JAY = @JAY@\n JAY_SKELETON = @JAY_SKELETON@\n-JIKES = @JIKES@\n-JIKESENCODING = @JIKESENCODING@\n-JIKESWARNINGS = @JIKESWARNINGS@\n-KJC = @KJC@\n LD = @LD@\n LDFLAGS = @LDFLAGS@\n LIBDEBUG = @LIBDEBUG@\n@@ -266,10 +253,8 @@ SET_MAKE = @SET_MAKE@\n SHELL = @SHELL@\n STRICT_WARNING_CFLAGS = @STRICT_WARNING_CFLAGS@\n STRIP = @STRIP@\n-USER_CLASSLIB = @USER_CLASSLIB@\n+TOOLSDIR = @TOOLSDIR@\n USER_JAVAH = @USER_JAVAH@\n-USER_SPECIFIED_CLASSLIB_FALSE = @USER_SPECIFIED_CLASSLIB_FALSE@\n-USER_SPECIFIED_CLASSLIB_TRUE = @USER_SPECIFIED_CLASSLIB_TRUE@\n USE_ESCHER_FALSE = @USE_ESCHER_FALSE@\n USE_ESCHER_TRUE = @USE_ESCHER_TRUE@\n USE_PREBUILT_GLIBJ_ZIP_FALSE = @USE_PREBUILT_GLIBJ_ZIP_FALSE@"}, {"sha": "76b35c5f8508387470b612899d750ca7ff8a6da4", "filename": "libjava/classpath/doc/api/Makefile.am", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fdoc%2Fapi%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fdoc%2Fapi%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fdoc%2Fapi%2FMakefile.am?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -2,7 +2,7 @@ if CREATE_API_DOCS\n noinst_DATA = html\n endif\n \n-sourcepath = $(top_builddir):$(top_srcdir):$(top_srcdir)/vm/reference:$(top_srcdir)/external/w3c_dom:$(top_srcdir)/external/sax\n+sourcepath = $(top_builddir):$(top_srcdir):$(top_srcdir)/vm/reference:$(top_srcdir)/external/w3c_dom:$(top_srcdir)/external/sax:$(top_srcdir)/external/jsr166\n \n classpathbox = \"<span class='logo'><a href='http://www.gnu.org/software/classpath' target='_top'>GNU Classpath</a> ($(VERSION))\"\n "}, {"sha": "0412d330f448a756973c8ca1a0249445c0147bf5", "filename": "libjava/classpath/doc/api/Makefile.in", "status": "modified", "additions": 5, "deletions": 20, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fdoc%2Fapi%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fdoc%2Fapi%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fdoc%2Fapi%2FMakefile.in?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -50,6 +50,8 @@ am__aclocal_m4_deps = $(top_srcdir)/../../config/depstand.m4 \\\n \t$(top_srcdir)/../../ltoptions.m4 \\\n \t$(top_srcdir)/../../ltsugar.m4 \\\n \t$(top_srcdir)/../../ltversion.m4 \\\n+\t$(top_srcdir)/m4/ac_prog_javac.m4 \\\n+\t$(top_srcdir)/m4/ac_prog_javac_works.m4 \\\n \t$(top_srcdir)/m4/acattribute.m4 $(top_srcdir)/m4/accross.m4 \\\n \t$(top_srcdir)/m4/acinclude.m4 \\\n \t$(top_srcdir)/m4/ax_create_stdint_h.m4 \\\n@@ -131,7 +133,6 @@ DUMPBIN = @DUMPBIN@\n ECHO_C = @ECHO_C@\n ECHO_N = @ECHO_N@\n ECHO_T = @ECHO_T@\n-ECJ = @ECJ@\n ECJ_JAR = @ECJ_JAR@\n EGREP = @EGREP@\n ENABLE_LOCAL_SOCKETS_FALSE = @ENABLE_LOCAL_SOCKETS_FALSE@\n@@ -143,19 +144,8 @@ EXTRA_CFLAGS = @EXTRA_CFLAGS@\n FASTJAR = @FASTJAR@\n FGREP = @FGREP@\n FIND = @FIND@\n-FOUND_ECJ_FALSE = @FOUND_ECJ_FALSE@\n-FOUND_ECJ_TRUE = @FOUND_ECJ_TRUE@\n-FOUND_GCJ_FALSE = @FOUND_GCJ_FALSE@\n-FOUND_GCJ_TRUE = @FOUND_GCJ_TRUE@\n-FOUND_JAVAC_FALSE = @FOUND_JAVAC_FALSE@\n-FOUND_JAVAC_TRUE = @FOUND_JAVAC_TRUE@\n-FOUND_JIKES_FALSE = @FOUND_JIKES_FALSE@\n-FOUND_JIKES_TRUE = @FOUND_JIKES_TRUE@\n-FOUND_KJC_FALSE = @FOUND_KJC_FALSE@\n-FOUND_KJC_TRUE = @FOUND_KJC_TRUE@\n FREETYPE2_CFLAGS = @FREETYPE2_CFLAGS@\n FREETYPE2_LIBS = @FREETYPE2_LIBS@\n-GCJ = @GCJ@\n GCONF_CFLAGS = @GCONF_CFLAGS@\n GCONF_LIBS = @GCONF_LIBS@\n GDK_CFLAGS = @GDK_CFLAGS@\n@@ -187,15 +177,12 @@ INSTALL_PROGRAM = @INSTALL_PROGRAM@\n INSTALL_SCRIPT = @INSTALL_SCRIPT@\n INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@\n JAVAC = @JAVAC@\n+JAVAC_MEM_OPT = @JAVAC_MEM_OPT@\n JAVA_LANG_SYSTEM_EXPLICIT_INITIALIZATION = @JAVA_LANG_SYSTEM_EXPLICIT_INITIALIZATION@\n JAVA_MAINTAINER_MODE_FALSE = @JAVA_MAINTAINER_MODE_FALSE@\n JAVA_MAINTAINER_MODE_TRUE = @JAVA_MAINTAINER_MODE_TRUE@\n JAY = @JAY@\n JAY_SKELETON = @JAY_SKELETON@\n-JIKES = @JIKES@\n-JIKESENCODING = @JIKESENCODING@\n-JIKESWARNINGS = @JIKESWARNINGS@\n-KJC = @KJC@\n LD = @LD@\n LDFLAGS = @LDFLAGS@\n LIBDEBUG = @LIBDEBUG@\n@@ -243,10 +230,8 @@ SET_MAKE = @SET_MAKE@\n SHELL = @SHELL@\n STRICT_WARNING_CFLAGS = @STRICT_WARNING_CFLAGS@\n STRIP = @STRIP@\n-USER_CLASSLIB = @USER_CLASSLIB@\n+TOOLSDIR = @TOOLSDIR@\n USER_JAVAH = @USER_JAVAH@\n-USER_SPECIFIED_CLASSLIB_FALSE = @USER_SPECIFIED_CLASSLIB_FALSE@\n-USER_SPECIFIED_CLASSLIB_TRUE = @USER_SPECIFIED_CLASSLIB_TRUE@\n USE_ESCHER_FALSE = @USE_ESCHER_FALSE@\n USE_ESCHER_TRUE = @USE_ESCHER_TRUE@\n USE_PREBUILT_GLIBJ_ZIP_FALSE = @USE_PREBUILT_GLIBJ_ZIP_FALSE@\n@@ -319,7 +304,7 @@ target_vendor = @target_vendor@\n toolexeclibdir = @toolexeclibdir@\n vm_classes = @vm_classes@\n @CREATE_API_DOCS_TRUE@noinst_DATA = html\n-sourcepath = $(top_builddir):$(top_srcdir):$(top_srcdir)/vm/reference:$(top_srcdir)/external/w3c_dom:$(top_srcdir)/external/sax\n+sourcepath = $(top_builddir):$(top_srcdir):$(top_srcdir)/vm/reference:$(top_srcdir)/external/w3c_dom:$(top_srcdir)/external/sax:$(top_srcdir)/external/jsr166\n classpathbox = \"<span class='logo'><a href='http://www.gnu.org/software/classpath' target='_top'>GNU Classpath</a> ($(VERSION))\"\n all: all-am\n "}, {"sha": "829b0e40e81556f9670192f52f88b4fc8644ff3d", "filename": "libjava/classpath/doc/cp-hacking.texinfo", "status": "modified", "additions": 73, "deletions": 40, "changes": 113, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fdoc%2Fcp-hacking.texinfo", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fdoc%2Fcp-hacking.texinfo", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fdoc%2Fcp-hacking.texinfo?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -121,12 +121,12 @@ Localization\n @comment node-name, next, previous, up\n @chapter Introduction\n \n-The GNU Classpath Project is a dedicated to providing a 100% free,\n+The GNU Classpath Project is dedicated to providing a 100% free,\n clean room implementation of the standard core class libraries for\n compilers and runtime environments for the java programming language.\n It offers free software developers an alternative core library\n implementation upon which larger java-like programming environments\n-can be build.  The GNU Classpath Project was started in the Spring of\n+can be built.  The GNU Classpath Project was started in the Spring of\n 1998 as an official Free Software Foundation project.  Most of the\n volunteers working on GNU Classpath do so in their spare time, but a\n couple of projects based on GNU Classpath have paid programmers to\n@@ -225,7 +225,7 @@ java.net package, there are non-public classes for implementing sockets.\n Without those classes, the public socket interface is useless.  But do\n not feel obligated to completely implement all of the functionality at\n once.  For example, in the java.net package, there are different types\n-of protocol handlers for different types of URL's.  Not all of these\n+of protocol handlers for different types of URLs.  Not all of these\n need to be written at once.\n \n @item\n@@ -278,8 +278,8 @@ While free operating systems are the top priority, the other priorities\n can shift depending on whether or not there is a volunteer to port\n Classpath to those platforms and to test releases.\n \n-Eventually we hope the Classpath will support all JVM's that provide\n-JNI or CNI support.  However, the top priority is free JVM's.  A small\n+Eventually we hope the Classpath will support all JVMs that provide\n+JNI or CNI support.  However, the top priority is free JVMs.  A small\n list of Compiler/VM environments that are currently actively\n incorporating GNU Classpath is below.  A more complete overview of\n projects based on GNU classpath can be found online at\n@@ -292,38 +292,40 @@ Classpath stories page}.\n @item \n @uref{http://jamvm.sourceforge.net/,jamvm}\n @item \n-@uref{http://kissme.sourceforge.net/,Kissme}\n+@uref{http://www.cacaojvm.org/,cacao}\n @item\n-@uref{http://www.ibm.com/developerworks/oss/jikesrvm/,Jikes RVM}\n-@item\n-@uref{http://www.sablevm.org/,SableVM}\n+@uref{http://jikesrvm.org,Jikes RVM}\n @item\n @uref{http://www.kaffe.org/,Kaffe}\n+@item\n+@uref{http://www.ikvm.net/,IKVM}\n @end enumerate\n \n As with OS platform support, this priority list could change if a\n volunteer comes forward to port, maintain, and test releases for a\n particular JVM@.  Since gcj is part of the GNU Compiler Collective it\n is one of the most important targets.  But since it doesn't currently\n-work out of the box with GNU Classpath it is currently not the easiest\n-target.  When hacking on GNU Classpath the easiest is to use\n-compilers and runtime environments that that work out of the box with\n-it, such as the jikes compiler and the runtime environments jamvm and\n-kissme.  But you can also work directly with targets like gcj and\n-kaffe that have their own copy of GNU Classpath currently.  In that\n-case changes have to be merged back into GNU Classpath proper though,\n-which is sometimes more work.  SableVM is starting to migrate from an\n-integrated GNU Classpath version to being usable with GNU Classpath\n-out of the box.\n-\n-\n-The initial target version for Classpath is the 1.1 spec.  Higher\n-versions can be implemented (and have been implemented, including lots\n-of 1.4 functionality) if desired, but please do not create classes\n-that depend on features in those packages unless GNU Classpath already\n+work out of the box with GNU Classpath it is not the easiest\n+target.  When hacking on GNU Classpath the easiest solution is to use\n+compilers and runtime environments that work out of the box with\n+it, such as the Eclipse compiler, ecj, and the runtime environments jamvm and\n+cacao.  Both Jikes RVM and Kaffe use an included version of GNU Classpath by\n+default, but Kaffe can now use a pre-installed version and Jikes RVM supports \n+using a CVS snapshot as well as the latest release.  Working directly with\n+targets such as Jikes RVM, gcj and IKVM is possible but can be a little more\n+difficult as changes have to be merged back into GNU Classpath proper,\n+which requires additional work.  Due to a recent switch to the use of 1.5 language\n+features within GNU Classpath, a compiler compatible with these features is required.\n+At present, this includes the Eclipse compiler, ecj, and the OpenJDK compiler.\n+\n+GNU Classpath currently implements the majority of the 1.4 and 1.5 APIs\n+(binary compatibility is above 95% for both, but does not take into account\n+internal implementations of features such as graphic and sound support).  There\n+is support for some 1.6 APIs but this is still nascent.  Please do not create classes\n+that depend on features in other packages unless GNU Classpath already\n contains those features.  GNU Classpath has been free of any\n proprietary dependencies for a long time now and we like to keep it\n-that way.  But finishing, polishing up, documenting, testing and\n+that way.  Finishing, polishing up, documenting, testing and\n debugging current functionality is of higher priority then adding new\n functionality.\n \n@@ -332,11 +334,11 @@ functionality.\n @chapter Needed Tools and Libraries\n \n If you want to hack on Classpath, you should at least download and\n-install the following tools.  And try to familiarize yourself with\n-them.  Although in most cases having these tools installed will be all\n+install the following tools and try to familiarize yourself with\n+them.  In most cases having these tools installed will be all\n you really need to know about them.  Also note that when working on\n-(snapshot) releases only GCC 3.3+ (plus a free VM from the list above\n-and the libraries listed below) is needed.  The other tools are only\n+(snapshot) releases only a 1.5 compiler (plus a free VM from the list above\n+and the libraries listed below) is required.  The other tools are only\n needed when working directly on the CVS version.\n \n @itemize @bullet\n@@ -446,8 +448,8 @@ When working from CVS you can run those tools by executing\n \n For building the Java bytecode (.class files), you can select \n which compiler should be employed using @option{--with-javac} or \n-@option{--with-ecj} as argument to @command{configure}; \n-the present default is @command{ecj}.\n+@option{--with-ecj} as an argument to @command{configure}; \n+the present default is @command{ecj} if found.\n \n Instead of @command{ecj}, you can also use @command{javac}, which is \n available at \n@@ -563,12 +565,25 @@ configuration settings in GNOME.\n \n @end table\n \n+The GStreamer backend for javax.sound.sampled (The Java Sound API, not\n+including the MIDI portion) needs the following library headers:\n+\n+@table @b\n+@item GStreamer\n+@uref{http://gstreamer.freedesktop.org/,GStreamer} version 0.10.10\n+(or higher). You will also need at least gstreamer-base and\n+gstreamer-plugins-base. More plugins can be used to allow streaming of\n+different sound types but are not a compile time requirement. See\n+README.gstreamer in the source distribution for more informations.\n+\n+@end table\n+\n For building @command{gcjwebplugin} you'll need the Mozilla plugin\n support headers and libraries, which are available at \n @uref{http://www.mozilla.org,www.mozilla.org}.\n \n For enabling the com.sun.tools.javac support in tools.zip you\n-will a need jar file containing the Eclipse Java Compiler.\n+will need a jar file containing the Eclipse Java Compiler.\n Otherwise com.sun.tools.javac will not be included in @file{tools.zip}.\n \n For building the xmlj JAXP implementation (disabled by default, \n@@ -591,18 +606,32 @@ that are not part of GNU Classpath proper, but that have been included\n to provide certain needed functionality.  All these external libraries\n should be clearly marked as such.  In general we try to use as much as\n possible the clean upstream versions of these sources.  That way\n-merging in new versions will be easiest.  You should always try to get\n+merging in new versions will be easier.  You should always try to get\n bug fixes to these files accepted upstream first.  Currently we\n include the following 'external' libraries.  Most of these sources are\n included in the @file{external} directory.  That directory also\n contains a @file{README} file explaining how to import newer versions.\n \n @table @b\n \n-@item GNU jaxp\n-Can be found in @file{external/jaxp}.  Provides javax.xml, org.w3c and\n-org.xml packages.  Upstream is\n-@uref{http://www.gnu.org/software/classpathx/,GNU ClasspathX}.\n+@item JSR166 concurrency support\n+Can be found in @file{external/jsr166}.  Provides java.util.concurrent\n+and its subpackages.  Upstream is\n+@uref{http://g.oswego.edu/dl/concurrency-interest/,Doug Lea's Concurrency Interest Site}.\n+\n+@item RelaxNG Datatype Interfaces\n+Can be found in @file{external/relaxngDatatype}.  Provides org.relaxng.datatype\n+and its subpackages.  Upstream is\n+@uref{http://www.oasis-open.org/committees/relax-ng/}.\n+\n+@item Simple API for XML (SAX)\n+Can be found in @file{external/sax}.  Provides org.xml.sax and its subpackages.\n+Upstream is\n+@uref{http://www.saxproject.org}.\n+\n+@item Document Object Model (DOM) bindings\n+Can be found in @file{external/w3c_dom}.  Provides org.w3c.dom and its subpackages.\n+Upstream locations are listed in @file{external/w3c_dom/README}.\n \n @item fdlibm\n Can be found in @file{native/fdlibm}.  Provides native implementations\n@@ -694,6 +723,10 @@ use prebuilt glibj.zip class library\n \n specify jar file containing the Eclipse Java Compiler\n \n+@item --with-gstreamer-peer\n+\n+build the experimental GStreamer peer (see @file{README.gstreamer})\n+\n @end table\n \n For more flags run @command{configure --help}.\n@@ -770,7 +803,7 @@ The @option{--enable-maintainer-mode} option to @command{configure} currently do\n little and shouldn't be used by ordinary developers or users anyway.\n \n On Windows machines, the native libraries do not currently build, but\n-the Java bytecode library will.  Gcj trunk is beginning to work under\n+the Java bytecode library will.  GCJ trunk is beginning to work under\n Cygwin.\n \n @node Programming Standards, Hacking Code, Misc. Notes, Top\n@@ -1097,7 +1130,7 @@ Patches that are already approved for libgcj or also OK for Classpath.\n patches require you to think whether or not they are really OK and\n non-controversial, or if you would like some feedback first on them\n before committing.  We might get real commit rules in the future, for\n-now use your own judgment, but be a bit conservative.\n+now use your own judgement, but be a bit conservative.\n \n Always contact the GNU Classpath maintainer before adding anything\n non-trivial that you didn't write yourself and that does not come from"}, {"sha": "0b2d78c845c97e4d1bf9573e27bbeec314973870", "filename": "libjava/classpath/doc/cp-vmintegration.texinfo", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fdoc%2Fcp-vmintegration.texinfo", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fdoc%2Fcp-vmintegration.texinfo", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fdoc%2Fcp-vmintegration.texinfo?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -526,10 +526,8 @@ compiler, and is specific to the compiler implementation.\n of doubles.\n \n @itemize @bullet\n-@item @code{doubleToLongBits(double)} -- Converts the double to the IEEE 754\n-bit layout, collapsing NaNs to @code{0x7ff8000000000000L}.\n-@item @code{doubleToRawLongBits(double)} -- Same as the above, but preserves\n-NaNs.\n+@item @code{doubleToRawLongBits(double)} -- Converts the double to the IEEE 754\n+bit layout, preserving NaNs.\n @item @code{longBitsToDouble(long)} -- This is the inverse of the last method,\n preserving NaNs so that the output of one can be fed into the other without\n data loss.\n@@ -552,10 +550,8 @@ implementation optional.\n @code{VMFloat} provides native support for the conversion of floats.\n \n @itemize @bullet\n-@item @code{floatToIntBits(float)} -- Converts the float to the IEEE 754\n-bit layout, collapsing NaNs to @code{0x7fc00000}.\n-@item @code{floatToRawIntBits(float)} -- Same as the above, but preserves\n-NaNs.\n+@item @code{floatToRawIntBits(float)} -- Converts the float to the IEEE 754\n+bit layout, preserving NaNs.\n @item @code{intBitsToFloat(int)} -- This is the inverse of the last method,\n preserving NaNs so that the output of one can be fed into the other without\n data loss."}, {"sha": "d2b264dd9a50dc138dd62686656861ba196ddd7e", "filename": "libjava/classpath/doc/texinfo.tex", "status": "modified", "additions": 2088, "deletions": 336, "changes": 2424, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fdoc%2Ftexinfo.tex", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fdoc%2Ftexinfo.tex", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fdoc%2Ftexinfo.tex?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba"}, {"sha": "56b3c45776d8529d649bdbc1ccb96066839df86d", "filename": "libjava/classpath/examples/Makefile.am", "status": "modified", "additions": 3, "deletions": 20, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fexamples%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fexamples%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2FMakefile.am?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -1,24 +1,7 @@\n ## Input file for automake to generate the Makefile.in used by configure\n-GLIBJ_CLASSPATH='$(top_builddir)/lib':'$(top_builddir)/lib/glibj.zip':'$(top_builddir)/tools/tools.zip'\n-\n-# Setup the compiler to use the GNU Classpath library we just build\n-#if FOUND_GCJ\n-#JCOMPILER = $(GCJ) --bootclasspath '$(top_builddir)/lib' --classpath . -C\n-#else\n-#if FOUND_JIKES\n-#JCOMPILER = $(JIKES) -bootclasspath '' -extdirs '' -sourcepath '' --classpath $(top_builddir)/lib:.\n-#else\n-if FOUND_ECJ\n-JCOMPILER = $(ECJ) -1.5 -encoding UTF-8 -warn:-deprecation,serial,typeHiding,unchecked,unused,varargsCast -bootclasspath $(GLIBJ_CLASSPATH) -classpath .\n-else\n-if FOUND_JAVAC\n-JCOMPILER = $(JAVAC) -encoding UTF-8 -bootclasspath $(GLIBJ_CLASSPATH) -classpath .\n-else\n-error dunno how to setup the JCOMPILER and compile\n-#endif\n-#endif\n-endif\n-endif\n+GLIBJ_CLASSPATH='$(top_builddir)/lib/glibj.zip'\n+\n+JCOMPILER = $(JAVAC) $(JAVACFLAGS) -source 1.5 -target 1.5 -encoding UTF-8 -bootclasspath $(GLIBJ_CLASSPATH) -classpath '$(top_builddir)/tools/tools.zip'\n \n # All our example java source files\n EXAMPLE_JAVA_FILES = $(srcdir)/gnu/classpath/examples/*/*.java $(srcdir)/gnu/classpath/examples/*/*/*.java $(srcdir)/gnu/classpath/examples/*/*/*/*.java"}, {"sha": "fa7082c3823192a7b17450e78cd3d11250768037", "filename": "libjava/classpath/examples/Makefile.in", "status": "modified", "additions": 6, "deletions": 33, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fexamples%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fexamples%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2FMakefile.in?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -51,6 +51,8 @@ am__aclocal_m4_deps = $(top_srcdir)/../../config/depstand.m4 \\\n \t$(top_srcdir)/../../ltoptions.m4 \\\n \t$(top_srcdir)/../../ltsugar.m4 \\\n \t$(top_srcdir)/../../ltversion.m4 \\\n+\t$(top_srcdir)/m4/ac_prog_javac.m4 \\\n+\t$(top_srcdir)/m4/ac_prog_javac_works.m4 \\\n \t$(top_srcdir)/m4/acattribute.m4 $(top_srcdir)/m4/accross.m4 \\\n \t$(top_srcdir)/m4/acinclude.m4 \\\n \t$(top_srcdir)/m4/ax_create_stdint_h.m4 \\\n@@ -140,7 +142,6 @@ DUMPBIN = @DUMPBIN@\n ECHO_C = @ECHO_C@\n ECHO_N = @ECHO_N@\n ECHO_T = @ECHO_T@\n-ECJ = @ECJ@\n ECJ_JAR = @ECJ_JAR@\n EGREP = @EGREP@\n ENABLE_LOCAL_SOCKETS_FALSE = @ENABLE_LOCAL_SOCKETS_FALSE@\n@@ -152,19 +153,8 @@ EXTRA_CFLAGS = @EXTRA_CFLAGS@\n FASTJAR = @FASTJAR@\n FGREP = @FGREP@\n FIND = @FIND@\n-FOUND_ECJ_FALSE = @FOUND_ECJ_FALSE@\n-FOUND_ECJ_TRUE = @FOUND_ECJ_TRUE@\n-FOUND_GCJ_FALSE = @FOUND_GCJ_FALSE@\n-FOUND_GCJ_TRUE = @FOUND_GCJ_TRUE@\n-FOUND_JAVAC_FALSE = @FOUND_JAVAC_FALSE@\n-FOUND_JAVAC_TRUE = @FOUND_JAVAC_TRUE@\n-FOUND_JIKES_FALSE = @FOUND_JIKES_FALSE@\n-FOUND_JIKES_TRUE = @FOUND_JIKES_TRUE@\n-FOUND_KJC_FALSE = @FOUND_KJC_FALSE@\n-FOUND_KJC_TRUE = @FOUND_KJC_TRUE@\n FREETYPE2_CFLAGS = @FREETYPE2_CFLAGS@\n FREETYPE2_LIBS = @FREETYPE2_LIBS@\n-GCJ = @GCJ@\n GCONF_CFLAGS = @GCONF_CFLAGS@\n GCONF_LIBS = @GCONF_LIBS@\n GDK_CFLAGS = @GDK_CFLAGS@\n@@ -196,15 +186,12 @@ INSTALL_PROGRAM = @INSTALL_PROGRAM@\n INSTALL_SCRIPT = @INSTALL_SCRIPT@\n INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@\n JAVAC = @JAVAC@\n+JAVAC_MEM_OPT = @JAVAC_MEM_OPT@\n JAVA_LANG_SYSTEM_EXPLICIT_INITIALIZATION = @JAVA_LANG_SYSTEM_EXPLICIT_INITIALIZATION@\n JAVA_MAINTAINER_MODE_FALSE = @JAVA_MAINTAINER_MODE_FALSE@\n JAVA_MAINTAINER_MODE_TRUE = @JAVA_MAINTAINER_MODE_TRUE@\n JAY = @JAY@\n JAY_SKELETON = @JAY_SKELETON@\n-JIKES = @JIKES@\n-JIKESENCODING = @JIKESENCODING@\n-JIKESWARNINGS = @JIKESWARNINGS@\n-KJC = @KJC@\n LD = @LD@\n LDFLAGS = @LDFLAGS@\n LIBDEBUG = @LIBDEBUG@\n@@ -252,10 +239,8 @@ SET_MAKE = @SET_MAKE@\n SHELL = @SHELL@\n STRICT_WARNING_CFLAGS = @STRICT_WARNING_CFLAGS@\n STRIP = @STRIP@\n-USER_CLASSLIB = @USER_CLASSLIB@\n+TOOLSDIR = @TOOLSDIR@\n USER_JAVAH = @USER_JAVAH@\n-USER_SPECIFIED_CLASSLIB_FALSE = @USER_SPECIFIED_CLASSLIB_FALSE@\n-USER_SPECIFIED_CLASSLIB_TRUE = @USER_SPECIFIED_CLASSLIB_TRUE@\n USE_ESCHER_FALSE = @USE_ESCHER_FALSE@\n USE_ESCHER_TRUE = @USE_ESCHER_TRUE@\n USE_PREBUILT_GLIBJ_ZIP_FALSE = @USE_PREBUILT_GLIBJ_ZIP_FALSE@\n@@ -327,19 +312,8 @@ target_os = @target_os@\n target_vendor = @target_vendor@\n toolexeclibdir = @toolexeclibdir@\n vm_classes = @vm_classes@\n-GLIBJ_CLASSPATH = '$(top_builddir)/lib':'$(top_builddir)/lib/glibj.zip':'$(top_builddir)/tools/tools.zip'\n-@FOUND_ECJ_FALSE@@FOUND_JAVAC_TRUE@JCOMPILER = $(JAVAC) -encoding UTF-8 -bootclasspath $(GLIBJ_CLASSPATH) -classpath .\n-\n-# Setup the compiler to use the GNU Classpath library we just build\n-#if FOUND_GCJ\n-#JCOMPILER = $(GCJ) --bootclasspath '$(top_builddir)/lib' --classpath . -C\n-#else\n-#if FOUND_JIKES\n-#JCOMPILER = $(JIKES) -bootclasspath '' -extdirs '' -sourcepath '' --classpath $(top_builddir)/lib:.\n-#else\n-@FOUND_ECJ_TRUE@JCOMPILER = $(ECJ) -1.5 -encoding UTF-8 -warn:-deprecation,serial,typeHiding,unchecked,unused,varargsCast -bootclasspath $(GLIBJ_CLASSPATH) -classpath .\n-#endif\n-#endif\n+GLIBJ_CLASSPATH = '$(top_builddir)/lib/glibj.zip'\n+JCOMPILER = $(JAVAC) $(JAVACFLAGS) -source 1.5 -target 1.5 -encoding UTF-8 -bootclasspath $(GLIBJ_CLASSPATH) -classpath '$(top_builddir)/tools/tools.zip'\n \n # All our example java source files\n EXAMPLE_JAVA_FILES = $(srcdir)/gnu/classpath/examples/*/*.java $(srcdir)/gnu/classpath/examples/*/*/*.java $(srcdir)/gnu/classpath/examples/*/*/*/*.java\n@@ -568,7 +542,6 @@ uninstall-am: uninstall-exampleDATA uninstall-info-am uninstall-local\n \tuninstall uninstall-am uninstall-exampleDATA uninstall-info-am \\\n \tuninstall-local\n \n-@FOUND_ECJ_FALSE@@FOUND_JAVAC_FALSE@error dunno how to setup the JCOMPILER and compile\n \n # Make sure all sources and icons are also installed so users can use them.\n # (Be careful to strip off the srcdir part of the path when installing.)"}, {"sha": "155ad170bc48645c017ad6d7f7376bee7693cc54", "filename": "libjava/classpath/examples/gnu/classpath/examples/CORBA/SimpleCommunication/communication/StructureToPassHelper.java", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2FCORBA%2FSimpleCommunication%2Fcommunication%2FStructureToPassHelper.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2FCORBA%2FSimpleCommunication%2Fcommunication%2FStructureToPassHelper.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2FCORBA%2FSimpleCommunication%2Fcommunication%2FStructureToPassHelper.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -40,7 +40,6 @@\n \n import gnu.CORBA.OrbRestricted;\n \n-import org.omg.CORBA.ORB;\n import org.omg.CORBA.StructMember;\n import org.omg.CORBA.TypeCode;\n import org.omg.CORBA.portable.InputStream;"}, {"sha": "83f422c5273828be108efc4709aa7443d4ab6d99", "filename": "libjava/classpath/examples/gnu/classpath/examples/CORBA/SimpleCommunication/communication/StructureToReturnHelper.java", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2FCORBA%2FSimpleCommunication%2Fcommunication%2FStructureToReturnHelper.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2FCORBA%2FSimpleCommunication%2Fcommunication%2FStructureToReturnHelper.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2FCORBA%2FSimpleCommunication%2Fcommunication%2FStructureToReturnHelper.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -39,7 +39,6 @@\n \n import gnu.CORBA.OrbRestricted;\n \n-import org.omg.CORBA.ORB;\n import org.omg.CORBA.StructMember;\n import org.omg.CORBA.TCKind;\n import org.omg.CORBA.TypeCode;"}, {"sha": "eac1c9a2415f3ecf3a88cb0dc4703a1b6d1e9c73", "filename": "libjava/classpath/examples/gnu/classpath/examples/CORBA/SimpleCommunication/communication/TreeNodeHelper.java", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2FCORBA%2FSimpleCommunication%2Fcommunication%2FTreeNodeHelper.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2FCORBA%2FSimpleCommunication%2Fcommunication%2FTreeNodeHelper.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2FCORBA%2FSimpleCommunication%2Fcommunication%2FTreeNodeHelper.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -42,7 +42,6 @@\n import gnu.CORBA.OrbRestricted;\n \n import org.omg.CORBA.Any;\n-import org.omg.CORBA.ORB;\n import org.omg.CORBA.StructMember;\n import org.omg.CORBA.TypeCode;\n import org.omg.CORBA.portable.InputStream;"}, {"sha": "adf4d25d583105b2b9ff71ebbafbefc955d53ccc", "filename": "libjava/classpath/examples/gnu/classpath/examples/CORBA/SimpleCommunication/communication/WeThrowThisExceptionHelper.java", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2FCORBA%2FSimpleCommunication%2Fcommunication%2FWeThrowThisExceptionHelper.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2FCORBA%2FSimpleCommunication%2Fcommunication%2FWeThrowThisExceptionHelper.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2FCORBA%2FSimpleCommunication%2Fcommunication%2FWeThrowThisExceptionHelper.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -41,7 +41,6 @@\n import gnu.CORBA.OrbRestricted;\n \n import org.omg.CORBA.Any;\n-import org.omg.CORBA.ORB;\n import org.omg.CORBA.StructMember;\n import org.omg.CORBA.TCKind;\n import org.omg.CORBA.TypeCode;"}, {"sha": "aea8cd4f68ee0339f924c389d3a43142d6ac165d", "filename": "libjava/classpath/examples/gnu/classpath/examples/awt/AnimationApplet.java", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fawt%2FAnimationApplet.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fawt%2FAnimationApplet.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fawt%2FAnimationApplet.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -21,7 +21,6 @@\n package gnu.classpath.examples.awt;\n \n import java.awt.*;\n-import java.awt.event.*;\n import java.applet.*;\n \n "}, {"sha": "a0b51f0e23b4cf26b2ee64a80283205950faf9ed", "filename": "libjava/classpath/examples/gnu/classpath/examples/java2d/J2dBenchmark.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fjava2d%2FJ2dBenchmark.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fjava2d%2FJ2dBenchmark.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fjava2d%2FJ2dBenchmark.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -601,7 +601,7 @@ private BufferedImage loadBufferedImage(String imageName)\n   void runTestSet(Graphics2D g, Dimension size)\n   {\n     // Any user-specified options (ie set transforms, rendering hints)\n-    prepareGraphics((Graphics2D) g);\n+    prepareGraphics(g);\n \n     if ((awtTests & J2DTEST_ARC) != 0)\n       {"}, {"sha": "381dca448709688536efa2cd04275cd726aa1b98", "filename": "libjava/classpath/examples/gnu/classpath/examples/management/TestBeans.java", "status": "modified", "additions": 7, "deletions": 22, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fmanagement%2FTestBeans.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fmanagement%2FTestBeans.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fmanagement%2FTestBeans.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -22,34 +22,19 @@\n \n import java.lang.management.ManagementFactory;\n \n-import java.util.ArrayList;\n-import java.util.Iterator;\n-import java.util.List;\n+import java.util.Set;\n \n-import javax.management.DynamicMBean;\n+import javax.management.MBeanServer;\n+import javax.management.ObjectName;\n \n public class TestBeans\n {\n   public static void main(String[] args)\n     throws Exception\n   {\n-    List beans = new ArrayList();\n-    /* FIXME: When there's a server, this will be easier... :) */\n-    beans.add(ManagementFactory.getOperatingSystemMXBean());\n-    beans.add(ManagementFactory.getRuntimeMXBean());\n-    beans.add(ManagementFactory.getThreadMXBean());\n-    beans.add(ManagementFactory.getCompilationMXBean());\n-    beans.add(ManagementFactory.getClassLoadingMXBean());\n-    beans.add(ManagementFactory.getMemoryMXBean());\n-    beans.addAll(ManagementFactory.getMemoryPoolMXBeans());\n-    beans.addAll(ManagementFactory.getMemoryManagerMXBeans());\n-    beans.addAll(ManagementFactory.getGarbageCollectorMXBeans());\n-    Iterator it = beans.iterator();\n-    while (it.hasNext())\n-      {\n-\tDynamicMBean bean = (DynamicMBean) it.next();\n-\tif (bean != null)\n-\t  System.out.println(bean.getMBeanInfo());\n-      }\n+    MBeanServer server = ManagementFactory.getPlatformMBeanServer();\n+    Set<ObjectName> names = server.queryNames(null, null);\n+    for (ObjectName name : names)\n+      System.out.println(server.getMBeanInfo(name));\n   }\n }"}, {"sha": "b4e8d98268cee6149161a1d4e90e9eac1b0f86fd", "filename": "libjava/classpath/examples/gnu/classpath/examples/management/TestClassLoading.java", "status": "modified", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fmanagement%2FTestClassLoading.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fmanagement%2FTestClassLoading.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fmanagement%2FTestClassLoading.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -23,10 +23,18 @@\n import java.lang.management.ClassLoadingMXBean;\n import java.lang.management.ManagementFactory;\n \n+import static java.lang.management.ManagementFactory.CLASS_LOADING_MXBEAN_NAME;\n+\n+import javax.management.Attribute;\n+import javax.management.MBeanServer;\n+import javax.management.ObjectName;\n+\n public class TestClassLoading\n {\n   public static void main(String[] args)\n+    throws Exception\n   {\n+    System.out.println(\"Testing locally...\");\n     ClassLoadingMXBean bean = ManagementFactory.getClassLoadingMXBean();\n     System.out.println(\"Bean: \" + bean);\n     System.out.println(\"Loaded classes: \" + bean.getLoadedClassCount());\n@@ -37,5 +45,33 @@ public static void main(String[] args)\n     System.out.println(\"Changing verbose setting...\");\n     bean.setVerbose(!verbosity);\n     System.out.println(\"Verbose class output: \" + (bean.isVerbose() ? \"yes\" : \"no\"));\n+    System.out.println(\"Testing via the server...\");\n+    MBeanServer server = ManagementFactory.getPlatformMBeanServer();\n+    ObjectName classBean = new ObjectName(CLASS_LOADING_MXBEAN_NAME);\n+    System.out.println(\"Bean: \" + classBean);\n+    System.out.println(\"Loaded classes: \" + server.getAttribute(classBean, \"LoadedClassCount\"));\n+    System.out.println(\"Unloaded classes: \" + server.getAttribute(classBean,\n+\t\t\t\t\t\t\t\t  \"UnloadedClassCount\"));\n+    System.out.println(\"Total loaded classes: \" + server.getAttribute(classBean,\n+\t\t\t\t\t\t\t\t      \"TotalLoadedClassCount\"));\n+    verbosity = (Boolean) server.getAttribute(classBean, \"Verbose\");\n+    System.out.println(\"Verbose class output: \" + (verbosity ? \"yes\" : \"no\"));\n+    System.out.println(\"Changing verbose setting...\");\n+    server.setAttribute(classBean, new Attribute(\"Verbose\", !verbosity));\n+    System.out.println(\"Verbose class output: \" + ((Boolean)\n+\t\t\t\t\t\t   server.getAttribute(classBean, \"Verbose\") ?\n+\t\t\t\t\t\t   \"yes\" : \"no\"));\n+    System.out.println(\"Testing via the proxy...\");\n+    bean = ManagementFactory.newPlatformMXBeanProxy(server, CLASS_LOADING_MXBEAN_NAME,\n+\t\t\t\t\t\t    ClassLoadingMXBean.class);\n+    System.out.println(\"Bean: \" + bean);\n+    System.out.println(\"Loaded classes: \" + bean.getLoadedClassCount());\n+    System.out.println(\"Unloaded classes: \" + bean.getUnloadedClassCount());\n+    System.out.println(\"Total loaded classes: \" + bean.getTotalLoadedClassCount());\n+    verbosity = bean.isVerbose();\n+    System.out.println(\"Verbose class output: \" + (verbosity ? \"yes\" : \"no\"));\n+    System.out.println(\"Changing verbose setting...\");\n+    bean.setVerbose(!verbosity);\n+    System.out.println(\"Verbose class output: \" + (bean.isVerbose() ? \"yes\" : \"no\"));\n   }\n }"}, {"sha": "1836c3025d5610da424df69803190a150adad82e", "filename": "libjava/classpath/examples/gnu/classpath/examples/management/TestMemoryPool.java", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fmanagement%2FTestMemoryPool.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fmanagement%2FTestMemoryPool.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fmanagement%2FTestMemoryPool.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -22,8 +22,6 @@\n \n import java.lang.management.ManagementFactory;\n import java.lang.management.MemoryPoolMXBean;\n-import java.lang.management.MemoryUsage;\n-\n import java.util.Arrays;\n import java.util.Iterator;\n "}, {"sha": "5c44c9a10f143006628c6b0b4a233d1c159f47ea", "filename": "libjava/classpath/examples/gnu/classpath/examples/sound/AudioPlayerSample.java", "status": "added", "additions": 222, "deletions": 0, "changes": 222, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fsound%2FAudioPlayerSample.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fsound%2FAudioPlayerSample.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fsound%2FAudioPlayerSample.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -0,0 +1,222 @@\n+/* AudioPlayerSample.java -- Simple Java Audio Player\n+   Copyright (C) 2007 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+package gnu.classpath.examples.sound;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.util.Map;\n+\n+import javax.sound.sampled.AudioFormat;\n+import javax.sound.sampled.AudioInputStream;\n+import javax.sound.sampled.AudioSystem;\n+import javax.sound.sampled.DataLine;\n+import javax.sound.sampled.LineUnavailableException;\n+import javax.sound.sampled.SourceDataLine;\n+import javax.sound.sampled.UnsupportedAudioFileException;\n+\n+/**\n+ * A simple demo to show the use of the Java Sound API.\n+ * It plays the given file (up to the end, so don't pass the 26 minutes long\n+ * Pink Floyd's Echoes unless you really want!!).\n+ * \n+ * See: http://jsresources.org/examples/SimpleAudioPlayer.java.html\n+ * \n+ * @author Mario Torre <neugens@limasoftware.net>\n+ */\n+public class AudioPlayerSample\n+{\n+  private static final int EXTERNAL_BUFFER_SIZE = 128000;\n+  \n+  /**\n+   * @param args\n+   */\n+  public static void main(String[] args)\n+  {\n+    if (args.length < 1)\n+      {\n+        System.out.println(\"Radio Classpath -: Usage: \" +\n+                           \"AudioPlayerSample [file]\");\n+        return;\n+      }\n+    \n+    String file = args[0];\n+    \n+    System.out.println(\"Welcome to Radio Classpath, only great music for you!\");\n+    System.out.println(\"Today's DJ Tap The WaterDroplet\");\n+    \n+    // now create the AudioInputStream\n+    AudioInputStream audioInputStream = null;\n+    try\n+      {\n+        audioInputStream = AudioSystem.getAudioInputStream(new File(file));\n+      }\n+    catch (UnsupportedAudioFileException e)\n+      {\n+        // This happen when the subsystem is unable to parse the kind of\n+        // audio file we are submitting\n+        // See the README for supported audio file types under Classpath\n+        // for the version you are using.\n+        e.printStackTrace();\n+        return;\n+      }\n+    catch (IOException e)\n+      {\n+        e.printStackTrace();\n+        return;\n+      }\n+    \n+    // get informations about the kind of file we are about to play\n+    AudioFormat audioFormat = audioInputStream.getFormat();\n+    \n+    System.out.println(\"Playing file: \" + file);\n+    System.out.println(\"format: \" + audioFormat.toString());\n+    \n+    System.out.print(\"Additional properties: \");\n+    \n+    // now, we try to get all the properties we have in this AudioFormat\n+    // and display them\n+    Map<String, Object> properties = audioFormat.properties();\n+    if (properties.size() < 0)\n+      {\n+        System.out.println(\"none\");\n+      }\n+    else\n+      {\n+        System.out.println(\"found #\" + properties.size() + \" properties\");\n+        for (String key : properties.keySet())\n+          {\n+            System.out.println(key + \": \" + properties.get(key));\n+          }\n+      }\n+    \n+    // let's setup things for playing\n+    // first, we require a Line. As we are doing playing, we will ask for a\n+    // SourceDataLine\n+    SourceDataLine line = null;\n+    \n+    // To get the source line, we first need to build an Info object\n+    // this is done in one line:\n+    DataLine.Info info = new DataLine.Info(SourceDataLine.class, audioFormat);\n+    \n+    System.out.println(\"searching line...\");\n+    \n+    // usually, if a backend can parse a file type, it can also\n+    // create a line to handle it, but that's not guaranteed\n+    // so we need to take care and to handle a possible\n+    // LineUnavailableException\n+    try\n+      {\n+        line = (SourceDataLine) AudioSystem.getLine(info);\n+      \n+        System.out.println(\"line found, opening...\");\n+        \n+        // once created, a line must be opened to let data flow\n+        // though it.\n+        line.open(audioFormat);\n+      }\n+    catch (LineUnavailableException e)\n+      {\n+        // in a real application you should signal that in a kindly way to\n+        // your users\n+        e.printStackTrace();\n+        return;\n+      }\n+    catch (Exception e)\n+      {\n+        e.printStackTrace();\n+        return;\n+      }\n+  \n+    // an open line pass data to the backend only when it is in\n+    // a state called \"started\" (\"playing\" or \"play\" in some other\n+    // framework)\n+    System.out.print(\"starting line... \");\n+    \n+    line.start();\n+    System.out.println(\"done\");\n+    \n+    // now we can start reading data from the AudioStream and writing\n+    // data to the pipeline. The Java Sound API is rather low level\n+    // so let you pass up to one byte of data at a time\n+    // (with some constraints, refer to the API documentation to know more)\n+    // We will do some buffering. You may want to check the frame size\n+    // to allow a better buffering, also.\n+    \n+    System.out.println(\"now playing...\");\n+    \n+    int nBytesRead = 0;\n+    byte[] abData = new byte[EXTERNAL_BUFFER_SIZE];\n+    while (nBytesRead != - 1)\n+      {\n+        try\n+          {\n+            nBytesRead = audioInputStream.read(abData, 0, abData.length);\n+          }\n+        catch (IOException e)\n+          {\n+            e.printStackTrace();\n+          }\n+        \n+        if (nBytesRead >= 0)\n+          {\n+            // this method returns the number of bytes actuall written\n+            // to the line. You may want to use this number to check\n+            // for events, display the current position (give also a\n+            // look to the API for other ways of doing that) etc..\n+            line.write(abData, 0, nBytesRead);\n+          }\n+      }\n+    \n+    System.out.print(\"stream finished, draining line... \");\n+    \n+    // call this method to ensure that all the data in the internal buffer\n+    // reach the audio backend, otherwise your application will\n+    // cut the last frames of audio data (and users will not enjoy the last\n+    // seconds of their precious music)\n+    line.drain();\n+\n+    // Once done, we can close the line. Note that a line, once closed\n+    // may not be reopened (depends on the backend, in some cases a \"reopen\",\n+    // if allowed, really opens a new line, reallocating all the resources)\n+    \n+    System.out.println(\"line drained, now exiting\");\n+    line.close();\n+    \n+    System.out.println(\"We hope you enjoyed Radio Classpath!\");\n+  }\n+\n+}"}, {"sha": "b338e438027559648ca85fec48371f05de1b9d89", "filename": "libjava/classpath/examples/gnu/classpath/examples/swing/DocumentFilterDemo.java", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2FDocumentFilterDemo.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2FDocumentFilterDemo.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2FDocumentFilterDemo.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -44,7 +44,6 @@\n import javax.swing.text.AttributeSet;\n import javax.swing.text.BadLocationException;\n import javax.swing.text.DocumentFilter;\n-import javax.swing.text.TextAction;\n \n /**\n  * A demonstration of the <code>javax.swing.text.DocumentFilter</code> class."}, {"sha": "9f8e3e7d58cab3673a4f107b90c4dfbf1144c8fa", "filename": "libjava/classpath/examples/gnu/classpath/examples/swing/TableDemo.java", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2FTableDemo.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2FTableDemo.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fswing%2FTableDemo.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -41,25 +41,18 @@\n import java.awt.BorderLayout;\n import java.awt.Component;\n import java.awt.Dimension;\n-import java.awt.Rectangle;\n-import java.text.DateFormat;\n-import java.util.Date;\n-\n import javax.swing.AbstractCellEditor;\n import javax.swing.BorderFactory;\n import javax.swing.DefaultCellEditor;\n-import javax.swing.DefaultListCellRenderer;\n import javax.swing.Icon;\n import javax.swing.JComboBox;\n import javax.swing.JComponent;\n import javax.swing.JFrame;\n-import javax.swing.JList;\n import javax.swing.JPanel;\n import javax.swing.JScrollBar;\n import javax.swing.JScrollPane;\n import javax.swing.JSlider;\n import javax.swing.JTable;\n-import javax.swing.JTextField;\n import javax.swing.SwingUtilities;\n import javax.swing.border.Border;\n import javax.swing.plaf.metal.MetalIconFactory;"}, {"sha": "e2305475c33a232bd54ccf3ed238ebb5ba6af59c", "filename": "libjava/classpath/external/Makefile.in", "status": "modified", "additions": 4, "deletions": 19, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fexternal%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fexternal%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2FMakefile.in?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -49,6 +49,8 @@ am__aclocal_m4_deps = $(top_srcdir)/../../config/depstand.m4 \\\n \t$(top_srcdir)/../../ltoptions.m4 \\\n \t$(top_srcdir)/../../ltsugar.m4 \\\n \t$(top_srcdir)/../../ltversion.m4 \\\n+\t$(top_srcdir)/m4/ac_prog_javac.m4 \\\n+\t$(top_srcdir)/m4/ac_prog_javac_works.m4 \\\n \t$(top_srcdir)/m4/acattribute.m4 $(top_srcdir)/m4/accross.m4 \\\n \t$(top_srcdir)/m4/acinclude.m4 \\\n \t$(top_srcdir)/m4/ax_create_stdint_h.m4 \\\n@@ -138,7 +140,6 @@ DUMPBIN = @DUMPBIN@\n ECHO_C = @ECHO_C@\n ECHO_N = @ECHO_N@\n ECHO_T = @ECHO_T@\n-ECJ = @ECJ@\n ECJ_JAR = @ECJ_JAR@\n EGREP = @EGREP@\n ENABLE_LOCAL_SOCKETS_FALSE = @ENABLE_LOCAL_SOCKETS_FALSE@\n@@ -150,19 +151,8 @@ EXTRA_CFLAGS = @EXTRA_CFLAGS@\n FASTJAR = @FASTJAR@\n FGREP = @FGREP@\n FIND = @FIND@\n-FOUND_ECJ_FALSE = @FOUND_ECJ_FALSE@\n-FOUND_ECJ_TRUE = @FOUND_ECJ_TRUE@\n-FOUND_GCJ_FALSE = @FOUND_GCJ_FALSE@\n-FOUND_GCJ_TRUE = @FOUND_GCJ_TRUE@\n-FOUND_JAVAC_FALSE = @FOUND_JAVAC_FALSE@\n-FOUND_JAVAC_TRUE = @FOUND_JAVAC_TRUE@\n-FOUND_JIKES_FALSE = @FOUND_JIKES_FALSE@\n-FOUND_JIKES_TRUE = @FOUND_JIKES_TRUE@\n-FOUND_KJC_FALSE = @FOUND_KJC_FALSE@\n-FOUND_KJC_TRUE = @FOUND_KJC_TRUE@\n FREETYPE2_CFLAGS = @FREETYPE2_CFLAGS@\n FREETYPE2_LIBS = @FREETYPE2_LIBS@\n-GCJ = @GCJ@\n GCONF_CFLAGS = @GCONF_CFLAGS@\n GCONF_LIBS = @GCONF_LIBS@\n GDK_CFLAGS = @GDK_CFLAGS@\n@@ -194,15 +184,12 @@ INSTALL_PROGRAM = @INSTALL_PROGRAM@\n INSTALL_SCRIPT = @INSTALL_SCRIPT@\n INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@\n JAVAC = @JAVAC@\n+JAVAC_MEM_OPT = @JAVAC_MEM_OPT@\n JAVA_LANG_SYSTEM_EXPLICIT_INITIALIZATION = @JAVA_LANG_SYSTEM_EXPLICIT_INITIALIZATION@\n JAVA_MAINTAINER_MODE_FALSE = @JAVA_MAINTAINER_MODE_FALSE@\n JAVA_MAINTAINER_MODE_TRUE = @JAVA_MAINTAINER_MODE_TRUE@\n JAY = @JAY@\n JAY_SKELETON = @JAY_SKELETON@\n-JIKES = @JIKES@\n-JIKESENCODING = @JIKESENCODING@\n-JIKESWARNINGS = @JIKESWARNINGS@\n-KJC = @KJC@\n LD = @LD@\n LDFLAGS = @LDFLAGS@\n LIBDEBUG = @LIBDEBUG@\n@@ -250,10 +237,8 @@ SET_MAKE = @SET_MAKE@\n SHELL = @SHELL@\n STRICT_WARNING_CFLAGS = @STRICT_WARNING_CFLAGS@\n STRIP = @STRIP@\n-USER_CLASSLIB = @USER_CLASSLIB@\n+TOOLSDIR = @TOOLSDIR@\n USER_JAVAH = @USER_JAVAH@\n-USER_SPECIFIED_CLASSLIB_FALSE = @USER_SPECIFIED_CLASSLIB_FALSE@\n-USER_SPECIFIED_CLASSLIB_TRUE = @USER_SPECIFIED_CLASSLIB_TRUE@\n USE_ESCHER_FALSE = @USE_ESCHER_FALSE@\n USE_ESCHER_TRUE = @USE_ESCHER_TRUE@\n USE_PREBUILT_GLIBJ_ZIP_FALSE = @USE_PREBUILT_GLIBJ_ZIP_FALSE@"}, {"sha": "62098ab7655f4bcbf9bdd8217878ccbec443fcea", "filename": "libjava/classpath/external/jsr166/Makefile.in", "status": "modified", "additions": 4, "deletions": 19, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fexternal%2Fjsr166%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fexternal%2Fjsr166%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fjsr166%2FMakefile.in?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -49,6 +49,8 @@ am__aclocal_m4_deps = $(top_srcdir)/../../config/depstand.m4 \\\n \t$(top_srcdir)/../../ltoptions.m4 \\\n \t$(top_srcdir)/../../ltsugar.m4 \\\n \t$(top_srcdir)/../../ltversion.m4 \\\n+\t$(top_srcdir)/m4/ac_prog_javac.m4 \\\n+\t$(top_srcdir)/m4/ac_prog_javac_works.m4 \\\n \t$(top_srcdir)/m4/acattribute.m4 $(top_srcdir)/m4/accross.m4 \\\n \t$(top_srcdir)/m4/acinclude.m4 \\\n \t$(top_srcdir)/m4/ax_create_stdint_h.m4 \\\n@@ -129,7 +131,6 @@ DUMPBIN = @DUMPBIN@\n ECHO_C = @ECHO_C@\n ECHO_N = @ECHO_N@\n ECHO_T = @ECHO_T@\n-ECJ = @ECJ@\n ECJ_JAR = @ECJ_JAR@\n EGREP = @EGREP@\n ENABLE_LOCAL_SOCKETS_FALSE = @ENABLE_LOCAL_SOCKETS_FALSE@\n@@ -141,19 +142,8 @@ EXTRA_CFLAGS = @EXTRA_CFLAGS@\n FASTJAR = @FASTJAR@\n FGREP = @FGREP@\n FIND = @FIND@\n-FOUND_ECJ_FALSE = @FOUND_ECJ_FALSE@\n-FOUND_ECJ_TRUE = @FOUND_ECJ_TRUE@\n-FOUND_GCJ_FALSE = @FOUND_GCJ_FALSE@\n-FOUND_GCJ_TRUE = @FOUND_GCJ_TRUE@\n-FOUND_JAVAC_FALSE = @FOUND_JAVAC_FALSE@\n-FOUND_JAVAC_TRUE = @FOUND_JAVAC_TRUE@\n-FOUND_JIKES_FALSE = @FOUND_JIKES_FALSE@\n-FOUND_JIKES_TRUE = @FOUND_JIKES_TRUE@\n-FOUND_KJC_FALSE = @FOUND_KJC_FALSE@\n-FOUND_KJC_TRUE = @FOUND_KJC_TRUE@\n FREETYPE2_CFLAGS = @FREETYPE2_CFLAGS@\n FREETYPE2_LIBS = @FREETYPE2_LIBS@\n-GCJ = @GCJ@\n GCONF_CFLAGS = @GCONF_CFLAGS@\n GCONF_LIBS = @GCONF_LIBS@\n GDK_CFLAGS = @GDK_CFLAGS@\n@@ -185,15 +175,12 @@ INSTALL_PROGRAM = @INSTALL_PROGRAM@\n INSTALL_SCRIPT = @INSTALL_SCRIPT@\n INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@\n JAVAC = @JAVAC@\n+JAVAC_MEM_OPT = @JAVAC_MEM_OPT@\n JAVA_LANG_SYSTEM_EXPLICIT_INITIALIZATION = @JAVA_LANG_SYSTEM_EXPLICIT_INITIALIZATION@\n JAVA_MAINTAINER_MODE_FALSE = @JAVA_MAINTAINER_MODE_FALSE@\n JAVA_MAINTAINER_MODE_TRUE = @JAVA_MAINTAINER_MODE_TRUE@\n JAY = @JAY@\n JAY_SKELETON = @JAY_SKELETON@\n-JIKES = @JIKES@\n-JIKESENCODING = @JIKESENCODING@\n-JIKESWARNINGS = @JIKESWARNINGS@\n-KJC = @KJC@\n LD = @LD@\n LDFLAGS = @LDFLAGS@\n LIBDEBUG = @LIBDEBUG@\n@@ -241,10 +228,8 @@ SET_MAKE = @SET_MAKE@\n SHELL = @SHELL@\n STRICT_WARNING_CFLAGS = @STRICT_WARNING_CFLAGS@\n STRIP = @STRIP@\n-USER_CLASSLIB = @USER_CLASSLIB@\n+TOOLSDIR = @TOOLSDIR@\n USER_JAVAH = @USER_JAVAH@\n-USER_SPECIFIED_CLASSLIB_FALSE = @USER_SPECIFIED_CLASSLIB_FALSE@\n-USER_SPECIFIED_CLASSLIB_TRUE = @USER_SPECIFIED_CLASSLIB_TRUE@\n USE_ESCHER_FALSE = @USE_ESCHER_FALSE@\n USE_ESCHER_TRUE = @USE_ESCHER_TRUE@\n USE_PREBUILT_GLIBJ_ZIP_FALSE = @USE_PREBUILT_GLIBJ_ZIP_FALSE@"}, {"sha": "8fbbc008d47b9f9e446e4e44ce692e60232e8dea", "filename": "libjava/classpath/external/relaxngDatatype/Makefile.in", "status": "modified", "additions": 4, "deletions": 19, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fexternal%2FrelaxngDatatype%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fexternal%2FrelaxngDatatype%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2FrelaxngDatatype%2FMakefile.in?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -49,6 +49,8 @@ am__aclocal_m4_deps = $(top_srcdir)/../../config/depstand.m4 \\\n \t$(top_srcdir)/../../ltoptions.m4 \\\n \t$(top_srcdir)/../../ltsugar.m4 \\\n \t$(top_srcdir)/../../ltversion.m4 \\\n+\t$(top_srcdir)/m4/ac_prog_javac.m4 \\\n+\t$(top_srcdir)/m4/ac_prog_javac_works.m4 \\\n \t$(top_srcdir)/m4/acattribute.m4 $(top_srcdir)/m4/accross.m4 \\\n \t$(top_srcdir)/m4/acinclude.m4 \\\n \t$(top_srcdir)/m4/ax_create_stdint_h.m4 \\\n@@ -129,7 +131,6 @@ DUMPBIN = @DUMPBIN@\n ECHO_C = @ECHO_C@\n ECHO_N = @ECHO_N@\n ECHO_T = @ECHO_T@\n-ECJ = @ECJ@\n ECJ_JAR = @ECJ_JAR@\n EGREP = @EGREP@\n ENABLE_LOCAL_SOCKETS_FALSE = @ENABLE_LOCAL_SOCKETS_FALSE@\n@@ -141,19 +142,8 @@ EXTRA_CFLAGS = @EXTRA_CFLAGS@\n FASTJAR = @FASTJAR@\n FGREP = @FGREP@\n FIND = @FIND@\n-FOUND_ECJ_FALSE = @FOUND_ECJ_FALSE@\n-FOUND_ECJ_TRUE = @FOUND_ECJ_TRUE@\n-FOUND_GCJ_FALSE = @FOUND_GCJ_FALSE@\n-FOUND_GCJ_TRUE = @FOUND_GCJ_TRUE@\n-FOUND_JAVAC_FALSE = @FOUND_JAVAC_FALSE@\n-FOUND_JAVAC_TRUE = @FOUND_JAVAC_TRUE@\n-FOUND_JIKES_FALSE = @FOUND_JIKES_FALSE@\n-FOUND_JIKES_TRUE = @FOUND_JIKES_TRUE@\n-FOUND_KJC_FALSE = @FOUND_KJC_FALSE@\n-FOUND_KJC_TRUE = @FOUND_KJC_TRUE@\n FREETYPE2_CFLAGS = @FREETYPE2_CFLAGS@\n FREETYPE2_LIBS = @FREETYPE2_LIBS@\n-GCJ = @GCJ@\n GCONF_CFLAGS = @GCONF_CFLAGS@\n GCONF_LIBS = @GCONF_LIBS@\n GDK_CFLAGS = @GDK_CFLAGS@\n@@ -185,15 +175,12 @@ INSTALL_PROGRAM = @INSTALL_PROGRAM@\n INSTALL_SCRIPT = @INSTALL_SCRIPT@\n INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@\n JAVAC = @JAVAC@\n+JAVAC_MEM_OPT = @JAVAC_MEM_OPT@\n JAVA_LANG_SYSTEM_EXPLICIT_INITIALIZATION = @JAVA_LANG_SYSTEM_EXPLICIT_INITIALIZATION@\n JAVA_MAINTAINER_MODE_FALSE = @JAVA_MAINTAINER_MODE_FALSE@\n JAVA_MAINTAINER_MODE_TRUE = @JAVA_MAINTAINER_MODE_TRUE@\n JAY = @JAY@\n JAY_SKELETON = @JAY_SKELETON@\n-JIKES = @JIKES@\n-JIKESENCODING = @JIKESENCODING@\n-JIKESWARNINGS = @JIKESWARNINGS@\n-KJC = @KJC@\n LD = @LD@\n LDFLAGS = @LDFLAGS@\n LIBDEBUG = @LIBDEBUG@\n@@ -241,10 +228,8 @@ SET_MAKE = @SET_MAKE@\n SHELL = @SHELL@\n STRICT_WARNING_CFLAGS = @STRICT_WARNING_CFLAGS@\n STRIP = @STRIP@\n-USER_CLASSLIB = @USER_CLASSLIB@\n+TOOLSDIR = @TOOLSDIR@\n USER_JAVAH = @USER_JAVAH@\n-USER_SPECIFIED_CLASSLIB_FALSE = @USER_SPECIFIED_CLASSLIB_FALSE@\n-USER_SPECIFIED_CLASSLIB_TRUE = @USER_SPECIFIED_CLASSLIB_TRUE@\n USE_ESCHER_FALSE = @USE_ESCHER_FALSE@\n USE_ESCHER_TRUE = @USE_ESCHER_TRUE@\n USE_PREBUILT_GLIBJ_ZIP_FALSE = @USE_PREBUILT_GLIBJ_ZIP_FALSE@"}, {"sha": "6e771b065b4d7541520e20db3611bd87876136bc", "filename": "libjava/classpath/external/sax/Makefile.in", "status": "modified", "additions": 4, "deletions": 19, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fexternal%2Fsax%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fexternal%2Fsax%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fsax%2FMakefile.in?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -49,6 +49,8 @@ am__aclocal_m4_deps = $(top_srcdir)/../../config/depstand.m4 \\\n \t$(top_srcdir)/../../ltoptions.m4 \\\n \t$(top_srcdir)/../../ltsugar.m4 \\\n \t$(top_srcdir)/../../ltversion.m4 \\\n+\t$(top_srcdir)/m4/ac_prog_javac.m4 \\\n+\t$(top_srcdir)/m4/ac_prog_javac_works.m4 \\\n \t$(top_srcdir)/m4/acattribute.m4 $(top_srcdir)/m4/accross.m4 \\\n \t$(top_srcdir)/m4/acinclude.m4 \\\n \t$(top_srcdir)/m4/ax_create_stdint_h.m4 \\\n@@ -129,7 +131,6 @@ DUMPBIN = @DUMPBIN@\n ECHO_C = @ECHO_C@\n ECHO_N = @ECHO_N@\n ECHO_T = @ECHO_T@\n-ECJ = @ECJ@\n ECJ_JAR = @ECJ_JAR@\n EGREP = @EGREP@\n ENABLE_LOCAL_SOCKETS_FALSE = @ENABLE_LOCAL_SOCKETS_FALSE@\n@@ -141,19 +142,8 @@ EXTRA_CFLAGS = @EXTRA_CFLAGS@\n FASTJAR = @FASTJAR@\n FGREP = @FGREP@\n FIND = @FIND@\n-FOUND_ECJ_FALSE = @FOUND_ECJ_FALSE@\n-FOUND_ECJ_TRUE = @FOUND_ECJ_TRUE@\n-FOUND_GCJ_FALSE = @FOUND_GCJ_FALSE@\n-FOUND_GCJ_TRUE = @FOUND_GCJ_TRUE@\n-FOUND_JAVAC_FALSE = @FOUND_JAVAC_FALSE@\n-FOUND_JAVAC_TRUE = @FOUND_JAVAC_TRUE@\n-FOUND_JIKES_FALSE = @FOUND_JIKES_FALSE@\n-FOUND_JIKES_TRUE = @FOUND_JIKES_TRUE@\n-FOUND_KJC_FALSE = @FOUND_KJC_FALSE@\n-FOUND_KJC_TRUE = @FOUND_KJC_TRUE@\n FREETYPE2_CFLAGS = @FREETYPE2_CFLAGS@\n FREETYPE2_LIBS = @FREETYPE2_LIBS@\n-GCJ = @GCJ@\n GCONF_CFLAGS = @GCONF_CFLAGS@\n GCONF_LIBS = @GCONF_LIBS@\n GDK_CFLAGS = @GDK_CFLAGS@\n@@ -185,15 +175,12 @@ INSTALL_PROGRAM = @INSTALL_PROGRAM@\n INSTALL_SCRIPT = @INSTALL_SCRIPT@\n INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@\n JAVAC = @JAVAC@\n+JAVAC_MEM_OPT = @JAVAC_MEM_OPT@\n JAVA_LANG_SYSTEM_EXPLICIT_INITIALIZATION = @JAVA_LANG_SYSTEM_EXPLICIT_INITIALIZATION@\n JAVA_MAINTAINER_MODE_FALSE = @JAVA_MAINTAINER_MODE_FALSE@\n JAVA_MAINTAINER_MODE_TRUE = @JAVA_MAINTAINER_MODE_TRUE@\n JAY = @JAY@\n JAY_SKELETON = @JAY_SKELETON@\n-JIKES = @JIKES@\n-JIKESENCODING = @JIKESENCODING@\n-JIKESWARNINGS = @JIKESWARNINGS@\n-KJC = @KJC@\n LD = @LD@\n LDFLAGS = @LDFLAGS@\n LIBDEBUG = @LIBDEBUG@\n@@ -241,10 +228,8 @@ SET_MAKE = @SET_MAKE@\n SHELL = @SHELL@\n STRICT_WARNING_CFLAGS = @STRICT_WARNING_CFLAGS@\n STRIP = @STRIP@\n-USER_CLASSLIB = @USER_CLASSLIB@\n+TOOLSDIR = @TOOLSDIR@\n USER_JAVAH = @USER_JAVAH@\n-USER_SPECIFIED_CLASSLIB_FALSE = @USER_SPECIFIED_CLASSLIB_FALSE@\n-USER_SPECIFIED_CLASSLIB_TRUE = @USER_SPECIFIED_CLASSLIB_TRUE@\n USE_ESCHER_FALSE = @USE_ESCHER_FALSE@\n USE_ESCHER_TRUE = @USE_ESCHER_TRUE@\n USE_PREBUILT_GLIBJ_ZIP_FALSE = @USE_PREBUILT_GLIBJ_ZIP_FALSE@"}, {"sha": "afdb5b459ea11bde94d11115a2b7ed0c5ccd1d3e", "filename": "libjava/classpath/external/w3c_dom/Makefile.in", "status": "modified", "additions": 4, "deletions": 19, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fexternal%2Fw3c_dom%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fexternal%2Fw3c_dom%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fw3c_dom%2FMakefile.in?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -49,6 +49,8 @@ am__aclocal_m4_deps = $(top_srcdir)/../../config/depstand.m4 \\\n \t$(top_srcdir)/../../ltoptions.m4 \\\n \t$(top_srcdir)/../../ltsugar.m4 \\\n \t$(top_srcdir)/../../ltversion.m4 \\\n+\t$(top_srcdir)/m4/ac_prog_javac.m4 \\\n+\t$(top_srcdir)/m4/ac_prog_javac_works.m4 \\\n \t$(top_srcdir)/m4/acattribute.m4 $(top_srcdir)/m4/accross.m4 \\\n \t$(top_srcdir)/m4/acinclude.m4 \\\n \t$(top_srcdir)/m4/ax_create_stdint_h.m4 \\\n@@ -129,7 +131,6 @@ DUMPBIN = @DUMPBIN@\n ECHO_C = @ECHO_C@\n ECHO_N = @ECHO_N@\n ECHO_T = @ECHO_T@\n-ECJ = @ECJ@\n ECJ_JAR = @ECJ_JAR@\n EGREP = @EGREP@\n ENABLE_LOCAL_SOCKETS_FALSE = @ENABLE_LOCAL_SOCKETS_FALSE@\n@@ -141,19 +142,8 @@ EXTRA_CFLAGS = @EXTRA_CFLAGS@\n FASTJAR = @FASTJAR@\n FGREP = @FGREP@\n FIND = @FIND@\n-FOUND_ECJ_FALSE = @FOUND_ECJ_FALSE@\n-FOUND_ECJ_TRUE = @FOUND_ECJ_TRUE@\n-FOUND_GCJ_FALSE = @FOUND_GCJ_FALSE@\n-FOUND_GCJ_TRUE = @FOUND_GCJ_TRUE@\n-FOUND_JAVAC_FALSE = @FOUND_JAVAC_FALSE@\n-FOUND_JAVAC_TRUE = @FOUND_JAVAC_TRUE@\n-FOUND_JIKES_FALSE = @FOUND_JIKES_FALSE@\n-FOUND_JIKES_TRUE = @FOUND_JIKES_TRUE@\n-FOUND_KJC_FALSE = @FOUND_KJC_FALSE@\n-FOUND_KJC_TRUE = @FOUND_KJC_TRUE@\n FREETYPE2_CFLAGS = @FREETYPE2_CFLAGS@\n FREETYPE2_LIBS = @FREETYPE2_LIBS@\n-GCJ = @GCJ@\n GCONF_CFLAGS = @GCONF_CFLAGS@\n GCONF_LIBS = @GCONF_LIBS@\n GDK_CFLAGS = @GDK_CFLAGS@\n@@ -185,15 +175,12 @@ INSTALL_PROGRAM = @INSTALL_PROGRAM@\n INSTALL_SCRIPT = @INSTALL_SCRIPT@\n INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@\n JAVAC = @JAVAC@\n+JAVAC_MEM_OPT = @JAVAC_MEM_OPT@\n JAVA_LANG_SYSTEM_EXPLICIT_INITIALIZATION = @JAVA_LANG_SYSTEM_EXPLICIT_INITIALIZATION@\n JAVA_MAINTAINER_MODE_FALSE = @JAVA_MAINTAINER_MODE_FALSE@\n JAVA_MAINTAINER_MODE_TRUE = @JAVA_MAINTAINER_MODE_TRUE@\n JAY = @JAY@\n JAY_SKELETON = @JAY_SKELETON@\n-JIKES = @JIKES@\n-JIKESENCODING = @JIKESENCODING@\n-JIKESWARNINGS = @JIKESWARNINGS@\n-KJC = @KJC@\n LD = @LD@\n LDFLAGS = @LDFLAGS@\n LIBDEBUG = @LIBDEBUG@\n@@ -241,10 +228,8 @@ SET_MAKE = @SET_MAKE@\n SHELL = @SHELL@\n STRICT_WARNING_CFLAGS = @STRICT_WARNING_CFLAGS@\n STRIP = @STRIP@\n-USER_CLASSLIB = @USER_CLASSLIB@\n+TOOLSDIR = @TOOLSDIR@\n USER_JAVAH = @USER_JAVAH@\n-USER_SPECIFIED_CLASSLIB_FALSE = @USER_SPECIFIED_CLASSLIB_FALSE@\n-USER_SPECIFIED_CLASSLIB_TRUE = @USER_SPECIFIED_CLASSLIB_TRUE@\n USE_ESCHER_FALSE = @USE_ESCHER_FALSE@\n USE_ESCHER_TRUE = @USE_ESCHER_TRUE@\n USE_PREBUILT_GLIBJ_ZIP_FALSE = @USE_PREBUILT_GLIBJ_ZIP_FALSE@"}, {"sha": "119db045f0f01cd2a7bdc8e5a4b586c6350b14ce", "filename": "libjava/classpath/gnu/CORBA/BigDecimalHelper.java", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2FCORBA%2FBigDecimalHelper.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2FCORBA%2FBigDecimalHelper.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FBigDecimalHelper.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -45,7 +45,6 @@\n import java.math.BigDecimal;\n import java.math.BigInteger;\n \n-import org.omg.CORBA.TypeCode;\n import org.omg.CORBA.TypeCodePackage.BadKind;\n \n /**\n@@ -128,9 +127,6 @@ public static BigDecimal read(java.io.InputStream in, int scale)\n    * \n    * @param out a stream to write into.\n    * @param x a big decimal to write.\n-   * @param digits a number of the decimal digits in the record\n-   * being written. For the smaller\n-   * numbers, zeroes are added to the left.\n    *\n    * @throws IOException if the stream write method throws one.\n    * @throws BadKind if this BigDecimal has more digits than"}, {"sha": "e601399dffb849d3903d7f6a62f473340d22f80a", "filename": "libjava/classpath/gnu/CORBA/ByteArrayComparator.java", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2FCORBA%2FByteArrayComparator.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2FCORBA%2FByteArrayComparator.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FByteArrayComparator.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -38,7 +38,6 @@\n \n package gnu.CORBA;\n \n-import java.util.Arrays;\n import java.util.Comparator;\n \n /**"}, {"sha": "f582c31bd188e8ecb500da19f851f768033b75f3", "filename": "libjava/classpath/gnu/CORBA/CDR/AbstractCdrInput.java", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCDR%2FAbstractCdrInput.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCDR%2FAbstractCdrInput.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCDR%2FAbstractCdrInput.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -195,9 +195,9 @@ public AbstractCdrInput()\n    * Set the Big Endian or Little Endian encoding. The stream reads Big Endian\n    * by default.\n    * \n-   * @param use_little_endian if true, the stream expect the multi-byte data in\n-   * the form \"less significant byte first\" (Little Endian). This is the\n-   * opposite to the java standard (Big Endian).\n+   * @param use_big_endian if true, the stream expect the multi-byte data in\n+   * the form \"most significant byte first\" (Big Endian). This is the\n+   * java standard.\n    */\n   public void setBigEndian(boolean use_big_endian)\n   {\n@@ -208,7 +208,7 @@ public void setBigEndian(boolean use_big_endian)\n   /**\n    * Get the used encoding.\n    * \n-   * @param true for Big Endian, false for Little Endian.\n+   * @return true for Big Endian, false for Little Endian.\n    */\n   public boolean isBigEndian()\n   {\n@@ -654,7 +654,7 @@ public BufferredCdrInput read_encapsulation()\n \n         byte[] r = new byte[l];\n         int n = 0;\n-        reading: while (n < r.length)\n+        while (n < r.length)\n           {\n             n += read(r, n, r.length - n);\n           }"}, {"sha": "7f3e3ab0daf2f540c726d5a367162cd853c562d6", "filename": "libjava/classpath/gnu/CORBA/CDR/AbstractCdrOutput.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCDR%2FAbstractCdrOutput.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCDR%2FAbstractCdrOutput.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCDR%2FAbstractCdrOutput.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -291,7 +291,7 @@ public ORB orb()\n \n   /**\n    * Write a single byte.\n-   * @param a byte to write (low 8 bits are written).\n+   * @param n byte to write (low 8 bits are written).\n    */\n   public void write(int n)\n   {\n@@ -497,7 +497,7 @@ public void write_char(char x)\n    * Writes the lower bytes of the passed array members.\n    *\n    * @param chars an array\n-   * @param offsets offset\n+   * @param offset offset\n    * @param length length\n    */\n   public void write_char_array(char[] chars, int offset, int length)"}, {"sha": "273ecea50241b62830ff4ef3dc43d4622a2a9dad", "filename": "libjava/classpath/gnu/CORBA/CDR/HeadlessInput.java", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCDR%2FHeadlessInput.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCDR%2FHeadlessInput.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCDR%2FHeadlessInput.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -104,7 +104,7 @@\n   /**\n    * Create an instance, reading from the given buffer.\n    * \n-   * @param a_stram a stream from where the data will be read.\n+   * @param a_stream a stream from where the data will be read.\n    * @param inheritSettings a stream from that endian and other settings are\n    * inherited.\n    */\n@@ -151,7 +151,7 @@ public Serializable read_value(String repository_id)\n     else\n       {\n         subsequentCalls = true;\n-        Serializable value = (Serializable) Vio.readValue(this, NONE, null,\n+        Serializable value = Vio.readValue(this, NONE, null,\n           null, repository_id, null, null);\n         return value;\n       }\n@@ -167,7 +167,7 @@ public Serializable read_value(Serializable value)\n     else\n       {\n         subsequentCalls = true;\n-        value = (Serializable) Vio.readValue(this, NONE, value, null, null,\n+        value = Vio.readValue(this, NONE, value, null, null,\n           null, null);\n         return value;\n       }\n@@ -186,7 +186,7 @@ public Serializable read_value(Class clz)\n           {\n             subsequentCalls = true;\n             Serializable value = (Serializable) Vio.instantiateAnyWay(clz);\n-            value = (Serializable) Vio.readValue(this, NONE, value, null, null,\n+            value = Vio.readValue(this, NONE, value, null, null,\n               null, null);\n             return value;\n           }"}, {"sha": "a439b658b440692f0aa65176f3979cf4af20c233", "filename": "libjava/classpath/gnu/CORBA/CDR/LittleEndianInputStream.java", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCDR%2FLittleEndianInputStream.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCDR%2FLittleEndianInputStream.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCDR%2FLittleEndianInputStream.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -38,7 +38,6 @@\n \n package gnu.CORBA.CDR;\n \n-import java.io.DataInput;\n import java.io.EOFException;\n import java.io.FilterInputStream;\n import java.io.IOException;"}, {"sha": "67a69b8745851335aeb4d80afe7b3efc0809dac4", "filename": "libjava/classpath/gnu/CORBA/CDR/Vio.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCDR%2FVio.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCDR%2FVio.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCDR%2FVio.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -637,7 +637,7 @@ else if (chunk_size >= 0x7FFFFF00)\n               r = new byte[chunk_size + 256];\n \n             n = 0;\n-            reading: while (n < chunk_size)\n+            while (n < chunk_size)\n               n += input.read(r, n, chunk_size - n);\n             output.write(r, 0, n);\n           }"}, {"sha": "929dc72ec8a43c5199a13b00f13fb6bc12ae6e82", "filename": "libjava/classpath/gnu/CORBA/CDR/gnuRuntime.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCDR%2FgnuRuntime.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCDR%2FgnuRuntime.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCDR%2FgnuRuntime.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -167,7 +167,7 @@ else if (a instanceof String[] && b instanceof String[])\n    * @param a_id a repository Id, if only one Id was specified in the stream.\n    * @param a_ids a repository Ids, if the multiple Ids were specified in te\n    * stream.\n-   * @param a_codabase a codebase, if it was specified in the stream.\n+   * @param a_codebase a codebase, if it was specified in the stream.\n    */\n   public gnuRuntime(String a_codebase, Object a_target)\n   {"}, {"sha": "51ad836231c15e4e9cf4584e080d7d7e46e6c20d", "filename": "libjava/classpath/gnu/CORBA/CollocatedOrbs.java", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCollocatedOrbs.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCollocatedOrbs.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCollocatedOrbs.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -44,10 +44,6 @@\n import java.net.UnknownHostException;\n import java.util.ArrayList;\n \n-import org.omg.CORBA.LocalObject;\n-import org.omg.CORBA.portable.Delegate;\n-import org.omg.CORBA.portable.ObjectImpl;\n-\n /**\n  * This class provides support for the direct method invocations without\n  * involving the network in the case when both ORBs run on the same java"}, {"sha": "655dbe38844707cb1728b79c111147a492e4f672", "filename": "libjava/classpath/gnu/CORBA/Connected_objects.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2FCORBA%2FConnected_objects.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2FCORBA%2FConnected_objects.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FConnected_objects.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -109,7 +109,7 @@\n   /**\n    * Get the record of the stored object.\n    *\n-   * @param object the stored object\n+   * @param stored_object the stored object\n    *\n    * @return the record about the stored object, null if\n    * this object is not stored here.\n@@ -141,7 +141,7 @@ public cObject getKey(org.omg.CORBA.Object stored_object)\n    * generated automatically.\n    *\n    * @param object the object to add.\n-   * @param port, on that the ORB will be listening to the remote\n+   * @param port on that the ORB will be listening to the remote\n    * invocations.\n    *\n    * @return the newly created object record."}, {"sha": "63fe117f4de805b946209464d4488a02c6980079", "filename": "libjava/classpath/gnu/CORBA/DynAn/DivideableAny.java", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2FCORBA%2FDynAn%2FDivideableAny.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2FCORBA%2FDynAn%2FDivideableAny.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FDynAn%2FDivideableAny.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -38,8 +38,6 @@\n \n package gnu.CORBA.DynAn;\n \n-import gnu.CORBA.TypeKindNamer;\n-\n import org.omg.CORBA.Any;\n import org.omg.CORBA.CompletionStatus;\n import org.omg.CORBA.ORB;"}, {"sha": "dc056adff9bc352dff3f7d0121a5e2220c3597c4", "filename": "libjava/classpath/gnu/CORBA/DynAn/gnuDynArray.java", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2FCORBA%2FDynAn%2FgnuDynArray.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2FCORBA%2FDynAn%2FgnuDynArray.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FDynAn%2FgnuDynArray.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -46,7 +46,6 @@\n import org.omg.CORBA.ORB;\n import org.omg.CORBA.TCKind;\n import org.omg.CORBA.TypeCode;\n-import org.omg.CORBA.TypeCodePackage.BadKind;\n import org.omg.CORBA.portable.Streamable;\n import org.omg.DynamicAny.DynAny;\n import org.omg.DynamicAny.DynAnyFactoryPackage.InconsistentTypeCode;"}, {"sha": "3cd8efe18f4cfc05bdf23af6fd72e0ad885861c1", "filename": "libjava/classpath/gnu/CORBA/DynAn/gnuDynUnion.java", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2FCORBA%2FDynAn%2FgnuDynUnion.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2FCORBA%2FDynAn%2FgnuDynUnion.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FDynAn%2FgnuDynUnion.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -271,7 +271,6 @@ public String member_name()\n \n \n         // Get the discriminator variant.\n-        Variants:\n         for (int i = 0; i < final_type.member_count(); i++)\n           {\n             if (final_type.member_label(i).equal(da))\n@@ -392,7 +391,6 @@ public void updateMember()\n \n \n         // Get the discriminator variant.\n-        Variants:\n         for (int i = 0; i < final_type.member_count(); i++)\n           {\n             if (final_type.member_label(i).equal(da))"}, {"sha": "6f84da8e5ea9782abeb73cbc67ab4ef7624bcd87", "filename": "libjava/classpath/gnu/CORBA/EmptyExceptionHolder.java", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2FCORBA%2FEmptyExceptionHolder.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2FCORBA%2FEmptyExceptionHolder.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FEmptyExceptionHolder.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -39,10 +39,8 @@\n package gnu.CORBA;\n \n import org.omg.CORBA.BAD_OPERATION;\n-import org.omg.CORBA.NO_IMPLEMENT;\n import org.omg.CORBA.TypeCode;\n import org.omg.CORBA.UNKNOWN;\n-import org.omg.CORBA.UnknownUserException;\n import org.omg.CORBA.portable.InputStream;\n import org.omg.CORBA.portable.OutputStream;\n import org.omg.CORBA.portable.Streamable;"}, {"sha": "40f373721c70723b420b991a98a184b67f1f7a9e", "filename": "libjava/classpath/gnu/CORBA/GIOP/CancelHeader.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2FCORBA%2FGIOP%2FCancelHeader.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2FCORBA%2FGIOP%2FCancelHeader.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FGIOP%2FCancelHeader.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -55,16 +55,16 @@\n   public int request_id;\n \n   /**\n-   * Write the header.\n+   * Read the header.\n    *\n-   * @param out a stream to write to.\n+   * @param input a stream to read from.\n    */\n   public abstract void read(InputStream input);\n \n   /**\n    * Write the header.\n    *\n-   * @param out a stream to write to.\n+   * @param output a stream to write to.\n    */\n   public abstract void write(OutputStream output);\n }"}, {"sha": "81412e0298e369296b7ad7b5f8a99715f8ac5611", "filename": "libjava/classpath/gnu/CORBA/GIOP/CodeSetServiceContext.java", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2FCORBA%2FGIOP%2FCodeSetServiceContext.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2FCORBA%2FGIOP%2FCodeSetServiceContext.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FGIOP%2FCodeSetServiceContext.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -41,8 +41,6 @@\n import gnu.CORBA.CDR.AbstractCdrInput;\n import gnu.CORBA.CDR.AbstractCdrOutput;\n import gnu.CORBA.IOR;\n-import gnu.CORBA.IOR.CodeSets_profile;\n-\n import java.io.IOException;\n \n /**"}, {"sha": "cac2405fc778302c4d4925d1617c2b99a9f3684a", "filename": "libjava/classpath/gnu/CORBA/GIOP/MessageHeader.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2FCORBA%2FGIOP%2FMessageHeader.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2FCORBA%2FGIOP%2FMessageHeader.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FGIOP%2FMessageHeader.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -398,7 +398,7 @@ public byte[] readMessage(InputStream source, Socket service, int to_read,\n         if (service != null)\n           service.setSoTimeout(to_read);\n \n-        reading: while (n < r.length)\n+        while (n < r.length)\n           {\n             n += source.read(r, n, r.length - n);\n           }\n@@ -426,7 +426,7 @@ public byte[] readMessage(InputStream source, Socket service, int to_read,\n                 int dn;\n \n                 n = 0;\n-                reading: while (n < h2.message_size)\n+                while (n < h2.message_size)\n                   {\n                     dn = source.read(r, 0, h2.message_size - n);\n "}, {"sha": "1158492235c1fbb04bcde3a555c322b7b2fc3ade", "filename": "libjava/classpath/gnu/CORBA/GIOP/v1_0/CancelHeader.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2FCORBA%2FGIOP%2Fv1_0%2FCancelHeader.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2FCORBA%2FGIOP%2Fv1_0%2FCancelHeader.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FGIOP%2Fv1_0%2FCancelHeader.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -51,9 +51,9 @@\n   extends gnu.CORBA.GIOP.CancelHeader\n {\n   /**\n-   * Write the header.\n+   * Read the header.\n    *\n-   * @param out a stream to write to.\n+   * @param input a stream to read from.\n    */\n   public void read(InputStream input)\n   {\n@@ -63,7 +63,7 @@ public void read(InputStream input)\n   /**\n    * Write the header.\n    *\n-   * @param out a stream to write to.\n+   * @param output a stream to write to.\n    */\n   public void write(OutputStream output)\n   {"}, {"sha": "5e13aecabd3f6e6833d8062a8f0a3c9459c57984", "filename": "libjava/classpath/gnu/CORBA/IOR.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2FCORBA%2FIOR.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2FCORBA%2FIOR.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FIOR.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -385,7 +385,7 @@ public IOR()\n   /**\n    * Parse the provided stringifed reference.\n    *\n-   * @param stringified_reference, in the form of IOR:nnnnnn.....\n+   * @param stringified_reference in the form of IOR:nnnnnn.....\n    *\n    * @return the parsed IOR\n    *"}, {"sha": "d8dcabf120fb19da25f0568f3e4c487045348665", "filename": "libjava/classpath/gnu/CORBA/Interceptor/IORInterceptors.java", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2FCORBA%2FInterceptor%2FIORInterceptors.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2FCORBA%2FInterceptor%2FIORInterceptors.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FInterceptor%2FIORInterceptors.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -42,7 +42,6 @@\n import org.omg.CORBA.OMGVMCID;\n import org.omg.PortableInterceptor.IORInfo;\n import org.omg.PortableInterceptor.IORInterceptor;\n-import org.omg.PortableInterceptor.IORInterceptorOperations;\n import org.omg.PortableInterceptor.IORInterceptor_3_0Operations;\n import org.omg.PortableInterceptor.ObjectReferenceTemplate;\n "}, {"sha": "e0ce16a149678de80e31c6b59f14dc36b1d9088f", "filename": "libjava/classpath/gnu/CORBA/Interceptor/Registrator.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2FCORBA%2FInterceptor%2FRegistrator.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2FCORBA%2FInterceptor%2FRegistrator.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FInterceptor%2FRegistrator.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -142,7 +142,7 @@ public class Registrator extends LocalObject implements ORBInitInfo\n    * Create the interceptor collection from the given properties, using the\n    * agreed naming convention.\n    *\n-   * @param orb the ORB being initialised.\n+   * @param an_orb the ORB being initialised.\n    * @param props the cumulated set of properties where the orb initializer\n    * pattern is searched.\n    * @param an_args the argument string array, passed to ORB.init."}, {"sha": "a2c5a0469be44a560d92ffecd4c58e77467a14d0", "filename": "libjava/classpath/gnu/CORBA/IorDelegate.java", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2FCORBA%2FIorDelegate.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2FCORBA%2FIorDelegate.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FIorDelegate.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -58,8 +58,6 @@\n \n import java.io.IOException;\n \n-import java.net.Socket;\n-\n /**\n  * The Classpath implementation of the {@link Delegate} functionality in the\n  * case, when the object was constructed from an IOR object. The IOR can be\n@@ -87,8 +85,6 @@ public IorDelegate(ORB an_orb, IOR an_ior)\n    * @param operation the method name\n    * @param parameters the method parameters\n    * @param returns the return value holder\n-   * @param exceptions the exceptions that can be thrown by the method\n-   * @param ctx_list the context list (null allowed)\n    *\n    * @return the created request.\n    */\n@@ -175,7 +171,7 @@ public InputStream invoke(org.omg.CORBA.Object target, OutputStream output)\n     throws ApplicationException, RemarshalException\n   {\n     StreamBasedRequest request = (StreamBasedRequest) output;\n-    Forwardings: while (true)\n+    while (true)\n       {\n         try\n           {"}, {"sha": "205ad8bec84088ae31f38eec68ab13b3af763484", "filename": "libjava/classpath/gnu/CORBA/NamingService/NameParser.java", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2FCORBA%2FNamingService%2FNameParser.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2FCORBA%2FNamingService%2FNameParser.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FNamingService%2FNameParser.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -62,7 +62,6 @@\n import java.net.MalformedURLException;\n import java.net.URL;\n import java.net.URLDecoder;\n-import java.util.ArrayList;\n import java.util.StringTokenizer;\n \n /**"}, {"sha": "7109fdb93e1adcb313a35f87e5057f5fabdc7275", "filename": "libjava/classpath/gnu/CORBA/NamingService/NameTransformer.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2FCORBA%2FNamingService%2FNameTransformer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2FCORBA%2FNamingService%2FNameTransformer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FNamingService%2FNameTransformer.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -63,7 +63,7 @@\n    * representation. See {@link #toString(NameComponent)} for the\n    * description of this format.\n    *\n-   * @param name the string form of the name.\n+   * @param a_name the string form of the name.\n    *\n    * @return the array form of the name.\n    *"}, {"sha": "939d6923326acd955a5bbc65cf78ec31de770e97", "filename": "libjava/classpath/gnu/CORBA/ObjectCreator.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2FCORBA%2FObjectCreator.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2FCORBA%2FObjectCreator.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FObjectCreator.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -111,7 +111,7 @@\n    * mapped to the local java class. The omg.org domain must be mapped into the\n    * object in either org/omg or gnu/CORBA namespace.\n    * \n-   * @param IDL name\n+   * @param idl name\n    * @return instantiated object instance or null if no such available.\n    */\n   public static java.lang.Object createObject(String idl, String suffix)"}, {"sha": "572acbc11316afdbdcd4d5c4cebb81a875411b19", "filename": "libjava/classpath/gnu/CORBA/OrbFocused.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2FCORBA%2FOrbFocused.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2FCORBA%2FOrbFocused.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FOrbFocused.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -185,7 +185,7 @@ protected portServer getPortServer(int type)\n             p = (portServer) portServers.get(i);\n             if (p.s_port == port)\n               {\n-                return (portServer) p;\n+                return p;\n               }\n           }\n         // The server is not yet instantiated. Instantiate."}, {"sha": "8fddc66270cdff0ebbb51ad739f185ffb4f489bd", "filename": "libjava/classpath/gnu/CORBA/OrbFunctional.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2FCORBA%2FOrbFunctional.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2FCORBA%2FOrbFunctional.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FOrbFunctional.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -855,7 +855,7 @@ public String[] list_initial_services()\n    * internet address and port. With this information, the object can be found\n    * by another ORB, possibly located on remote computer.\n    *\n-   * @param the CORBA object\n+   * @param forObject CORBA object\n    * @return the object IOR representation.\n    *\n    * @throws BAD_PARAM if the object has not been previously connected to this\n@@ -1040,7 +1040,7 @@ public void shutdown(boolean wait_for_completion)\n    * computer, possibly running a different (not necessary java) CORBA\n    * implementation.\n    * \n-   * @param ior the object IOR representation string.\n+   * @param an_ior the object IOR representation string.\n    * \n    * @return the found CORBA object.\n    * @see object_to_string(org.omg.CORBA.Object)"}, {"sha": "4ae50b1a3a19d821854c5554e794ec16ce03f056", "filename": "libjava/classpath/gnu/CORBA/OrbRestricted.java", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2FCORBA%2FOrbRestricted.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2FCORBA%2FOrbRestricted.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FOrbRestricted.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -65,7 +65,6 @@\n import org.omg.CORBA.portable.OutputStream;\n import org.omg.CORBA.portable.ValueFactory;\n import org.omg.PortableInterceptor.ClientRequestInterceptorOperations;\n-import org.omg.PortableInterceptor.IORInterceptorOperations;\n import org.omg.PortableInterceptor.IORInterceptor_3_0Operations;\n import org.omg.PortableInterceptor.ServerRequestInterceptorOperations;\n "}, {"sha": "f8820bff83bdf4c59eb244007d4bde71bfe87907", "filename": "libjava/classpath/gnu/CORBA/Poa/AOM.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2FCORBA%2FPoa%2FAOM.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2FCORBA%2FPoa%2FAOM.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FPoa%2FAOM.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -163,7 +163,7 @@ public void setDeactivated(boolean state)\n    * Get the record of the stored object. If the object is mapped several times\n    * under the different keys, one of the mappings is used.\n    * \n-   * @param object the stored object\n+   * @param stored_object the stored object\n    * \n    * @return the record about the stored object, null if this object is not\n    * stored here."}, {"sha": "82e520904f144a14dc69881431ee7e36a15bd608", "filename": "libjava/classpath/gnu/CORBA/Poa/gnuPOA.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2FCORBA%2FPoa%2FgnuPOA.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2FCORBA%2FPoa%2FgnuPOA.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FPoa%2FgnuPOA.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -421,7 +421,7 @@ protected void etherealizeAll()\n    * or adding the returned instance to any possible table.\n    *\n    * @param child_name the name of the poa being created.\n-   * @param manager the poa manager (never null).\n+   * @param a_manager the poa manager (never null).\n    * @param policies the array of policies.\n    * @param an_orb the ORB for this POA.\n    *\n@@ -1239,7 +1239,7 @@ && applies(ImplicitActivationPolicyValue.IMPLICIT_ACTIVATION))\n    * @param x the aom entry, where the object is replaced by value, returned by\n    * servant activator (if not null).\n    * \n-   * @param key the object key.\n+   * @param object_key the object key.\n    * \n    * @param a_servant the servant that was passed as a parameter in the\n    * activation method.\n@@ -1317,7 +1317,7 @@ public AdapterActivator the_activator()\n   /**\n   * Set the adapter activator for this POA.\n   *\n-  * @param the activator being set.\n+  * @param an_activator the activator being set.\n   */\n   public void the_activator(AdapterActivator an_activator)\n   {"}, {"sha": "28f4ecd281f06d0585ddb068de9e8c2688982873", "filename": "libjava/classpath/gnu/CORBA/Poa/gnuPOAManager.java", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2FCORBA%2FPoa%2FgnuPOAManager.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2FCORBA%2FPoa%2FgnuPOAManager.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FPoa%2FgnuPOAManager.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -41,7 +41,6 @@\n import org.omg.CORBA.BAD_INV_ORDER;\n import org.omg.CORBA.LocalObject;\n import org.omg.PortableInterceptor.NON_EXISTENT;\n-import org.omg.PortableInterceptor.ObjectReferenceTemplate;\n import org.omg.PortableServer.POAManager;\n import org.omg.PortableServer.POAManagerPackage.AdapterInactive;\n import org.omg.PortableServer.POAManagerPackage.State;\n@@ -89,9 +88,9 @@ public State get_state()\n    * Turns the associated POAs into active state, allowing them to receive\n    * and process requests.\n    *\n-   * @throws if the POAs are in the inactive state. If once inactivated,\n-   * the POA cannot be activated again. This method can only be called\n-   * to leave the holding or discarding state.\n+   * @throws AdapterInactive if the POAs are in the inactive state.\n+   * If once inactivated, the POA cannot be activated again. This\n+   * method can only be called to leave the holding or discarding state.\n    */\n   public void activate()\n                 throws AdapterInactive"}, {"sha": "115f4f850fb2948b226e413fe411223a249c7d4f", "filename": "libjava/classpath/gnu/CORBA/Poa/gnuServantObject.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2FCORBA%2FPoa%2FgnuServantObject.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2FCORBA%2FPoa%2FgnuServantObject.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FPoa%2FgnuServantObject.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -785,7 +785,7 @@ public void _releaseReply(InputStream stream)\n    * assumed equal if they are connected to the same orb and poa under the same\n    * Id, regardless of they delegates.\n    *\n-   * @param another instance to check.\n+   * @param other instance to check.\n    * @return\n    */\n   public boolean _is_equivalent(org.omg.CORBA.Object other)"}, {"sha": "c55405cedf6707705e46ded0b236e6f4049fd481", "filename": "libjava/classpath/gnu/CORBA/ServiceRequestAdapter.java", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2FCORBA%2FServiceRequestAdapter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2FCORBA%2FServiceRequestAdapter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FServiceRequestAdapter.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -41,7 +41,6 @@\n import gnu.CORBA.CDR.BufferedCdrOutput;\n \n import org.omg.CORBA.ARG_IN;\n-import org.omg.CORBA.ARG_INOUT;\n import org.omg.CORBA.ARG_OUT;\n import org.omg.CORBA.Any;\n import org.omg.CORBA.Bounds;"}, {"sha": "592eb2c2cac19ce8498f554e39d971df838e98db", "filename": "libjava/classpath/gnu/CORBA/gnuContextList.java", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2FCORBA%2FgnuContextList.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2FCORBA%2FgnuContextList.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FgnuContextList.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -38,8 +38,6 @@\n \n package gnu.CORBA;\n \n-import java.util.ArrayList;\n-\n import org.omg.CORBA.Bounds;\n import org.omg.CORBA.ContextList;\n "}, {"sha": "06ddf8d717ad4617b45b3a8ac3f12fa22fcf8299", "filename": "libjava/classpath/gnu/CORBA/gnuExceptionList.java", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2FCORBA%2FgnuExceptionList.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2FCORBA%2FgnuExceptionList.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FgnuExceptionList.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -38,8 +38,6 @@\n \n package gnu.CORBA;\n \n-import java.util.ArrayList;\n-\n import org.omg.CORBA.Bounds;\n import org.omg.CORBA.ExceptionList;\n import org.omg.CORBA.TypeCode;"}, {"sha": "3ec2a797f0f1610120114156124182445e91551c", "filename": "libjava/classpath/gnu/CORBA/gnuRequest.java", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2FCORBA%2FgnuRequest.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2FCORBA%2FgnuRequest.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FgnuRequest.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -83,12 +83,10 @@\n import org.omg.PortableInterceptor.ForwardRequest;\n import org.omg.PortableInterceptor.InvalidSlot;\n \n-import java.io.EOFException;\n import java.io.IOException;\n import java.io.InputStream;\n import java.io.OutputStream;\n \n-import java.net.BindException;\n import java.net.Socket;\n \n import java.util.ArrayList;"}, {"sha": "af7f46ecfce5f92a9887fa685fa9125fd3a44bc3", "filename": "libjava/classpath/gnu/CORBA/typecodes/FixedTypeCode.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2FCORBA%2Ftypecodes%2FFixedTypeCode.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2FCORBA%2Ftypecodes%2FFixedTypeCode.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2Ftypecodes%2FFixedTypeCode.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -109,7 +109,7 @@ public void setScale(int a_scale)\n   /**\n    * Get the number of digits in thid BigDecimal\n    *\n-   * @param x a BigDecimal to check.\n+   * @param number a BigDecimal to check.\n    */\n   public static int countDigits(BigDecimal number)\n   {"}, {"sha": "8ec2f5474d0fde9020d04a73bd49ee8ef77d1445", "filename": "libjava/classpath/gnu/CORBA/typecodes/RecursiveTypeCode.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2FCORBA%2Ftypecodes%2FRecursiveTypeCode.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2FCORBA%2Ftypecodes%2FRecursiveTypeCode.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2Ftypecodes%2FRecursiveTypeCode.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -63,7 +63,7 @@\n    * Create a typecode that serves as a placeholder for\n    * the typecode with the given id.\n    *\n-   * @param id the Id of the type for that this type serves as a\n+   * @param an_id the Id of the type for that this type serves as a\n    * placeholder.\n    */\n   public RecursiveTypeCode(String an_id)"}, {"sha": "6c9728e0cbd568fd8996eb45bec1ad022fc6a47a", "filename": "libjava/classpath/gnu/classpath/ServiceFactory.java", "status": "modified", "additions": 25, "deletions": 21, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fclasspath%2FServiceFactory.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fclasspath%2FServiceFactory.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fclasspath%2FServiceFactory.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -48,6 +48,7 @@\n import java.util.Collections;\n import java.util.Enumeration;\n import java.util.Iterator;\n+import java.util.List;\n import java.util.NoSuchElementException;\n import java.util.ServiceConfigurationError;\n import java.util.logging.Level;\n@@ -222,8 +223,8 @@ private ServiceFactory()\n    * @throws IllegalArgumentException if <code>spi</code> is\n    * <code>null</code>.\n    */\n-  public static Iterator lookupProviders(Class spi,\n-                                         ClassLoader loader)\n+  public static <P> Iterator<P> lookupProviders(Class<P> spi,\n+\t\t\t\t\t\tClassLoader loader)\n   {\n     return lookupProviders(spi, loader, false);\n   }\n@@ -266,12 +267,12 @@ public static Iterator lookupProviders(Class spi,\n    * @throws IllegalArgumentException if <code>spi</code> is\n    * <code>null</code>.\n    */\n-  public static Iterator lookupProviders(Class spi,\n-                                         ClassLoader loader,\n-\t\t\t\t\t boolean error)\n+  public static <P> Iterator<P> lookupProviders(Class<P> spi,\n+\t\t\t\t\t\tClassLoader loader,\n+\t\t\t\t\t\tboolean error)\n   {\n     String resourceName;\n-    Enumeration urls;\n+    Enumeration<URL> urls;\n \n     if (spi == null)\n       throw new IllegalArgumentException();\n@@ -295,11 +296,14 @@ public static Iterator lookupProviders(Class spi,\n \t  throw new ServiceConfigurationError(\"Failed to access + \" +\n \t\t\t\t\t      resourceName, ioex);\n \telse\n-\t  return Collections.EMPTY_LIST.iterator();\n+\t  {\n+\t    List<P> empty = Collections.emptyList();\n+\t    return empty.iterator();\n+\t  }\n       }\n \n-    return new ServiceIterator(spi, urls, loader, error,\n-                               AccessController.getContext());\n+    return new ServiceIterator<P>(spi, urls, loader, error,\n+\t\t\t\t  AccessController.getContext());\n   }\n \n \n@@ -318,7 +322,7 @@ public static Iterator lookupProviders(Class spi,\n    *\n    * @see #lookupProviders(Class, ClassLoader)\n    */\n-  public static Iterator lookupProviders(Class spi)\n+  public static <P> Iterator<P> lookupProviders(Class<P> spi)\n   {\n     ClassLoader ctxLoader;\n \n@@ -335,22 +339,22 @@ public static Iterator lookupProviders(Class spi)\n    *\n    * @author <a href=\"mailto:brawer@dandelis.ch\">Sascha Brawer</a>\n    */\n-  private static final class ServiceIterator\n-    implements Iterator\n+  private static final class ServiceIterator<P>\n+    implements Iterator<P>\n   {\n     /**\n      * The service provider interface (usually an interface, sometimes\n      * an abstract class) which the services must implement.\n      */\n-    private final Class spi;\n+    private final Class<P> spi;\n \n \n     /**\n      * An Enumeration<URL> over the URLs that contain a resource\n      * <code>META-INF/services/&lt;org.foo.SomeService&gt;</code>,\n      * as returned by {@link ClassLoader#getResources(String)}.\n      */\n-    private final Enumeration urls;\n+    private final Enumeration<URL> urls;\n \n \n     /**\n@@ -389,7 +393,7 @@ public static Iterator lookupProviders(Class spi)\n      * {@link #next()}, or <code>null</code> if the iterator has\n      * already returned all service providers.\n      */\n-    private Object nextProvider;\n+    private P nextProvider;\n \n     /**\n      * True if a {@link ServiceConfigurationError} should be thrown\n@@ -420,7 +424,7 @@ public static Iterator lookupProviders(Class spi)\n      * @param securityContext the security context to use when loading\n      * and initializing service providers.\n      */\n-    ServiceIterator(Class spi, Enumeration urls, ClassLoader loader,\n+    ServiceIterator(Class<P> spi, Enumeration<URL> urls, ClassLoader loader,\n \t\t    boolean error, AccessControlContext securityContext)\n     {\n       this.spi = spi;\n@@ -436,9 +440,9 @@ public static Iterator lookupProviders(Class spi)\n      * @throws NoSuchElementException if {@link #hasNext} returns\n      * <code>false</code>.\n      */\n-    public Object next()\n+    public P next()\n     {\n-      Object result;\n+      P result;\n \n       if (!hasNext())\n         throw new NoSuchElementException();\n@@ -461,7 +465,7 @@ public void remove()\n     }\n \n \n-    private Object loadNextServiceProvider()\n+    private P loadNextServiceProvider()\n     {\n       String line;\n       \n@@ -523,7 +527,7 @@ private Object loadNextServiceProvider()\n                * active when calling lookupProviders.\n                */\n               return AccessController.doPrivileged(\n-                new ServiceProviderLoadingAction(spi, line, loader),\n+                new ServiceProviderLoadingAction<P>(spi, line, loader),\n                 securityContext);\n             }\n           catch (Exception ex)\n@@ -577,7 +581,7 @@ private void advanceReader()\n         if (!urls.hasMoreElements())\n           return;\n \n-        currentURL = (URL) urls.nextElement();\n+        currentURL = urls.nextElement();\n         try\n           {\n             reader = new BufferedReader(new InputStreamReader("}, {"sha": "51f5a2fa91114dc3e6fc93769f039f92f61e1690", "filename": "libjava/classpath/gnu/classpath/ServiceProviderLoadingAction.java", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fclasspath%2FServiceProviderLoadingAction.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fclasspath%2FServiceProviderLoadingAction.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fclasspath%2FServiceProviderLoadingAction.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -54,15 +54,15 @@\n  *\n  * @author <a href=\"mailto:brawer@dandelis.ch\">Sascha Brawer</a>\n  */\n-final class ServiceProviderLoadingAction\n-  implements PrivilegedExceptionAction\n+final class ServiceProviderLoadingAction<P>\n+  implements PrivilegedExceptionAction<P>\n {\n   /**\n    * The interface to which the loaded service provider implementation\n    * must conform.  Usually, this is a Java interface type, but it\n    * might also be an abstract class or even a concrete class.\n    */\n-  private final Class spi;\n+  private final Class<P> spi;\n \n \n   /**\n@@ -97,7 +97,7 @@\n    * <code>providerName</code> or <code>loader</code> is\n    * <code>null</code>.\n    */\n-  ServiceProviderLoadingAction(Class spi, String providerName,\n+  ServiceProviderLoadingAction(Class<P> spi, String providerName,\n                                ClassLoader loader)\n   {\n     if (spi == null || providerName == null || loader == null)\n@@ -130,13 +130,13 @@\n    * no-argument constructor; or if there some other problem with\n    * creating a new instance of the service provider.\n    */\n-  public Object run()\n+  public P run()\n     throws Exception\n   {\n-    Class loadedClass;\n-    Object serviceProvider;\n+    Class<P> loadedClass;\n+    P serviceProvider;\n \n-    loadedClass = loader.loadClass(providerName);\n+    loadedClass = (Class<P>) loader.loadClass(providerName);\n     serviceProvider = loadedClass.newInstance();\n \n     // Ensure that the loaded provider is actually implementing"}, {"sha": "1bb339969eca35da5c9fdba174f1550b6694f0b5", "filename": "libjava/classpath/gnu/classpath/jdwp/event/ExceptionEvent.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fevent%2FExceptionEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fevent%2FExceptionEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fevent%2FExceptionEvent.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -117,9 +117,9 @@ else if (type == EVENT_EXCEPTION_CLASS)\n       return _exception.getClass();\n     else if (type == EVENT_EXCEPTION_CAUGHT)\n       if (_catchLocation.getMethod() != null)\n-        return new Boolean(true);\n+        return Boolean.TRUE;\n       else\n-        return new Boolean(false);\n+        return Boolean.FALSE;\n \n     return null;\n   }"}, {"sha": "fd412716c84760992e2a6ee28322ca507cc306a1", "filename": "libjava/classpath/gnu/classpath/jdwp/event/filters/StepFilter.java", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fevent%2Ffilters%2FStepFilter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fevent%2Ffilters%2FStepFilter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fevent%2Ffilters%2FStepFilter.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -39,7 +39,6 @@\n \n package gnu.classpath.jdwp.event.filters;\n \n-import gnu.classpath.jdwp.JdwpConstants;\n import gnu.classpath.jdwp.event.Event;\n import gnu.classpath.jdwp.exception.InvalidThreadException;\n import gnu.classpath.jdwp.id.ThreadId;"}, {"sha": "1a70b9c091eea4649c93f82526caca9230699f3c", "filename": "libjava/classpath/gnu/classpath/jdwp/processor/ObjectReferenceCommandSet.java", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fprocessor%2FObjectReferenceCommandSet.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fprocessor%2FObjectReferenceCommandSet.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fprocessor%2FObjectReferenceCommandSet.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -56,7 +56,6 @@\n import java.io.DataOutputStream;\n import java.io.IOException;\n import java.lang.reflect.Field;\n-import java.lang.reflect.Method;\n import java.nio.ByteBuffer;\n \n /**"}, {"sha": "cde3fc24cac82b1016233c3936eb18434fd247d4", "filename": "libjava/classpath/gnu/classpath/jdwp/processor/ReferenceTypeCommandSet.java", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fprocessor%2FReferenceTypeCommandSet.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fprocessor%2FReferenceTypeCommandSet.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fprocessor%2FReferenceTypeCommandSet.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -46,7 +46,6 @@\n import gnu.classpath.jdwp.exception.JdwpException;\n import gnu.classpath.jdwp.exception.JdwpInternalErrorException;\n import gnu.classpath.jdwp.exception.NotImplementedException;\n-import gnu.classpath.jdwp.id.ClassReferenceTypeId;\n import gnu.classpath.jdwp.id.ObjectId;\n import gnu.classpath.jdwp.id.ReferenceTypeId;\n import gnu.classpath.jdwp.util.JdwpString;"}, {"sha": "cb56c7641ffcb7880793c41038147be9cf44c275", "filename": "libjava/classpath/gnu/classpath/toolkit/DefaultDaemonThreadFactory.java", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Ftoolkit%2FDefaultDaemonThreadFactory.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Ftoolkit%2FDefaultDaemonThreadFactory.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Ftoolkit%2FDefaultDaemonThreadFactory.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -0,0 +1,59 @@\n+/* DefaultDaemonThreadFactory.java -- Factory for Deamon Threads.\n+ \n+ Copyright (C) 2007 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+package gnu.classpath.toolkit;\n+\n+import java.util.concurrent.Executors;\n+import java.util.concurrent.ThreadFactory;;\n+\n+/**\n+ * Create a new thread using all the default settings as returned by\n+ * <code>Executors.defaultThreadFactory()</code> plus calling\n+ * <code>thread.setDaemon(true)</code> on the newly created thread.\n+ * \n+ * @author Mario Torre <neugens@limasoftware.net>\n+ */\n+public class DefaultDaemonThreadFactory implements ThreadFactory\n+{\n+  public Thread newThread(Runnable r)\n+  {\n+    Thread thread = Executors.defaultThreadFactory().newThread(r);\n+    thread.setDaemon(true);\n+    return thread;\n+  }\n+}"}, {"sha": "dcebc67fa2574c8a54c21173063d1ceddee6c8d7", "filename": "libjava/classpath/gnu/java/awt/AWTUtilities.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2FAWTUtilities.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2FAWTUtilities.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2FAWTUtilities.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -126,7 +126,7 @@ public boolean hasNext()\n        *\n        * @return the next visible <code>Component</code> in the List\n        *\n-       * @throws if there is no next element\n+       * @throws NoSuchElementException if there is no next element\n        */\n       public Object next()\n       {"}, {"sha": "7bbc70ccb1f89ecd3d776be65f1d123c58459dc6", "filename": "libjava/classpath/gnu/java/awt/ClasspathToolkit.java", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2FClasspathToolkit.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2FClasspathToolkit.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2FClasspathToolkit.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -51,7 +51,6 @@\n import java.awt.GraphicsEnvironment;\n import java.awt.HeadlessException;\n import java.awt.Toolkit;\n-import java.awt.font.TextAttribute;\n import java.awt.peer.DesktopPeer;\n import java.awt.peer.RobotPeer;\n import java.io.IOException;"}, {"sha": "7c04e7daf7717c7eb05fa212102c9d784b46f6ab", "filename": "libjava/classpath/gnu/java/awt/EmbeddedWindow.java", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2FEmbeddedWindow.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2FEmbeddedWindow.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2FEmbeddedWindow.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -43,7 +43,6 @@\n \n import java.awt.Component;\n import java.awt.Frame;\n-import java.awt.Toolkit;\n import java.lang.reflect.Field;\n import java.security.AccessController;\n "}, {"sha": "22f331e15d1f359c438fe24bfb160b09397b9f9c", "filename": "libjava/classpath/gnu/java/awt/font/GNUGlyphVector.java", "status": "modified", "additions": 31, "deletions": 9, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Ffont%2FGNUGlyphVector.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Ffont%2FGNUGlyphVector.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Ffont%2FGNUGlyphVector.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -37,6 +37,8 @@\n \n package gnu.java.awt.font;\n \n+import gnu.java.awt.java2d.ShapeWrapper;\n+\n import java.awt.Font;\n import java.awt.font.FontRenderContext;\n import java.awt.font.GlyphMetrics;\n@@ -82,6 +84,10 @@\n   private AffineTransform[] transforms;\n   private int layoutFlags;\n \n+  /**\n+   * The cached non-transformed outline of this glyph vector.\n+   */\n+  private Shape cleanOutline;\n \n   /**\n    * Constructs a new GNUGlyphVector.\n@@ -257,7 +263,6 @@ public Rectangle2D getVisualBounds()\n    */\n   public Shape getOutline()\n   {\n-    validate();\n     return getOutline(0.0f, 0.0f);\n   }\n \n@@ -273,16 +278,33 @@ public Shape getOutline(float x, float y)\n   {\n     validate();\n \n-    GeneralPath outline = new GeneralPath();\n-    int len = glyphs.length;\n-    for (int i = 0; i < len; i++)\n+    Shape outline;\n+    if (cleanOutline == null)\n       {\n-        GeneralPath p = new GeneralPath(getGlyphOutline(i));\n-        outline.append(p, false);\n+        GeneralPath path = new GeneralPath();\n+        int len = glyphs.length;\n+        for (int i = 0; i < len; i++)\n+          {\n+            GeneralPath p = new GeneralPath(getGlyphOutline(i));\n+            path.append(p, false);\n+          }\n+        // Protect the cached instance from beeing modified by application\n+        // code.\n+        cleanOutline = new ShapeWrapper(path);\n+        outline = cleanOutline;\n+      }\n+    else\n+      {\n+        outline = cleanOutline;\n+      }\n+    if (x != 0 || y != 0)\n+      {\n+        GeneralPath path = new GeneralPath(outline);\n+        AffineTransform t = new AffineTransform();\n+        t.translate(x, y);\n+        path.transform(t);\n+        outline = path;\n       }\n-    AffineTransform t = new AffineTransform();\n-    t.translate(x, y);\n-    outline.transform(t);\n     return outline;\n   }\n "}, {"sha": "2d898a44801e84ff9b246388cafe8a06b4adc8fd", "filename": "libjava/classpath/gnu/java/awt/font/OpenTypeFontPeer.java", "status": "renamed", "additions": 132, "deletions": 37, "changes": 169, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Ffont%2FOpenTypeFontPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Ffont%2FOpenTypeFontPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Ffont%2FOpenTypeFontPeer.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -35,7 +35,7 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n-package gnu.java.awt.peer.x;\n+package gnu.java.awt.font;\n \n import java.awt.Font;\n import java.awt.FontMetrics;\n@@ -54,26 +54,38 @@\n import java.nio.channels.FileChannel;\n import java.text.CharacterIterator;\n import java.text.StringCharacterIterator;\n+import java.util.HashMap;\n+import java.util.HashSet;\n import java.util.Locale;\n import java.util.Map;\n import java.util.Properties;\n+import java.util.Set;\n \n-import gnu.java.awt.font.FontDelegate;\n-import gnu.java.awt.font.FontFactory;\n import gnu.java.awt.peer.ClasspathFontPeer;\n \n-public class XFontPeer2\n+public class OpenTypeFontPeer\n   extends ClasspathFontPeer\n {\n \n   /**\n    * The font mapping as specified in the file fonts.properties.\n    */\n   private static Properties fontProperties;\n+\n+  /**\n+   * The available font family names.\n+   */\n+  private static Set<String> availableFontNames;\n+\n+  /**\n+   * Font spec to file mapping.\n+   */\n+  private static Map<String,Map<String,String>> fontToFileMap;\n+\n   static\n   {\n     fontProperties = new Properties();\n-    InputStream in = XFontPeer2.class.getResourceAsStream(\"fonts.properties\");\n+    InputStream in = OpenTypeFontPeer.class.getResourceAsStream(\"fonts.properties\");\n     try\n       {\n         fontProperties.load(in);\n@@ -234,12 +246,14 @@ public int stringWidth(String s)\n \n   private FontDelegate fontDelegate;\n \n-  XFontPeer2(String name, int style, int size)\n+  public OpenTypeFontPeer(String name, int style, int size)\n   {\n     super(name, style, size);\n     try\n       {\n-        File fontfile = new File(\"/usr/share/fonts/truetype/freefont/FreeSans.ttf\");\n+        String fontSpec = encodeFont(name, style);\n+        String filename = mapFontToFilename(fontSpec);\n+        File fontfile = new File(filename);\n         FileInputStream in = new FileInputStream(fontfile);\n         FileChannel ch = in.getChannel();\n         ByteBuffer buffer = ch.map(FileChannel.MapMode.READ_ONLY, 0,\n@@ -252,12 +266,14 @@ public int stringWidth(String s)\n       }\n   }\n \n-  XFontPeer2(String name, Map atts)\n+  public OpenTypeFontPeer(String name, Map atts)\n   {\n     super(name, atts);\n     try\n       {\n-        File fontfile = new File(\"/usr/share/fonts/truetype/freefont/FreeSans.ttf\");\n+        String fontSpec = encodeFont(name, atts);\n+        String filename = mapFontToFilename(fontSpec);\n+        File fontfile = new File(filename);\n         FileInputStream in = new FileInputStream(fontfile);\n         FileChannel ch = in.getChannel();\n         ByteBuffer buffer = ch.map(FileChannel.MapMode.READ_ONLY, 0,\n@@ -371,19 +387,14 @@ public Rectangle2D getMaxCharBounds(Font font, FontRenderContext rc)\n    *\n    * @return the encoded font description\n    */\n-  static String encodeFont(String name, Map atts)\n+  public static String encodeFont(String name, Map atts)\n   {\n     String family = name;\n     if (family == null || family.equals(\"\"))\n       family = (String) atts.get(TextAttribute.FAMILY);\n     if (family == null)\n       family = \"SansSerif\";\n \n-    int size = 12;\n-    Float sizeFl = (Float) atts.get(TextAttribute.SIZE);\n-    if (sizeFl != null)\n-      size = sizeFl.intValue();\n-\n     int style = 0;\n     // Detect italic attribute.\n     Float posture = (Float) atts.get(TextAttribute.POSTURE);\n@@ -395,49 +406,43 @@ static String encodeFont(String name, Map atts)\n     if (weight != null && weight.compareTo(TextAttribute.WEIGHT_REGULAR) > 0)\n       style |= Font.BOLD;\n \n-    return encodeFont(name, style, size);\n+    return encodeFont(name, style);\n   }\n \n   /**\n-   * Encodes a font name + style + size specification into a X logical font\n-   * description (XLFD) as described here:\n-   *\n-   * http://www.meretrx.com/e93/docs/xlfd.html\n+   * Encodes a font name + style into a combined string.\n    *\n    * This is implemented to look up the font description in the\n    * fonts.properties of this package.\n    *\n    * @param name the font name\n    * @param style the font style\n-   * @param size the font size\n    *\n    * @return the encoded font description\n    */\n-  static String encodeFont(String name, int style, int size)\n+  static String encodeFont(String name, int style)\n   {\n     StringBuilder key = new StringBuilder();\n     key.append(validName(name));\n-    key.append('.');\n+    key.append('/');\n     switch (style)\n     {\n       case Font.BOLD:\n-        key.append(\"bold\");\n+        key.append(\"b\");\n         break;\n       case Font.ITALIC:\n-        key.append(\"italic\");\n+        key.append(\"i\");\n         break;\n       case (Font.BOLD | Font.ITALIC):\n-        key.append(\"bolditalic\");\n+        key.append(\"bi\");\n         break;\n       case Font.PLAIN:\n       default:\n-        key.append(\"plain\");\n+        key.append(\"p\");\n       \n     }\n \n-    String protoType = fontProperties.getProperty(key.toString());\n-    int s = size;\n-    return protoType.replaceFirst(\"%d\", String.valueOf(s * 10));\n+    return key.toString();\n   }\n \n   /**\n@@ -451,18 +456,108 @@ static String encodeFont(String name, int style, int size)\n   static String validName(String name)\n   {\n     String retVal;\n-    if (name.equalsIgnoreCase(\"sansserif\")\n-        || name.equalsIgnoreCase(\"serif\")\n-        || name.equalsIgnoreCase(\"monospaced\")\n-        || name.equalsIgnoreCase(\"dialog\")\n-        || name.equalsIgnoreCase(\"dialoginput\"))\n+    Set<String> fontNames = getFontNames();\n+    if (fontNames.contains(name))\n       {\n-        retVal = name.toLowerCase();\n+        retVal = name;\n       }\n     else\n       {\n-        retVal = \"sansserif\";\n+        retVal = \"SansSerif\";\n       }\n     return retVal;\n   }\n+\n+  public static String[] getAvailableFontFamilyNames(Locale l)\n+  {\n+    Set<String> fontNames = getFontNames();\n+    int numNames = fontNames.size();\n+    String[] ret = fontNames.toArray(new String[numNames]);\n+    return ret;\n+  }\n+\n+  private static synchronized Set<String> getFontNames()\n+  {\n+    if (availableFontNames == null)\n+      {\n+        HashSet<String> familyNames = new HashSet<String>();\n+        for (Object o : fontProperties.keySet())\n+          {\n+            if (o instanceof String)\n+              {\n+                String key = (String) o;\n+                int slashIndex = key.indexOf('/');\n+                String name = key.substring(0, slashIndex);\n+                familyNames.add(name);\n+              }\n+          }\n+        availableFontNames = familyNames;\n+      }\n+    return availableFontNames;\n+  }\n+\n+  /**\n+   * Takes a font spec as returned by {@link #encodeFont(String, int)},\n+   * and returns the corresponding font file, or <code>null</code> if no such\n+   * font mapping exists.\n+   *\n+   * @param fontSpec font name and style as returned by\n+   *        {@link #encodeFont(String, int)}\n+   *\n+   * @return filename of the corresponding font file\n+   */\n+  private synchronized String mapFontToFilename(String fontSpec)\n+  {\n+    if (fontToFileMap == null)\n+      {\n+        fontToFileMap = new HashMap<String,Map<String,String>>();\n+\n+        // Initialize font spec to file mapping according to the\n+        // font.properties.\n+        for (Object o : fontProperties.keySet())\n+          {\n+            if (o instanceof String)\n+              {\n+                String key = (String) o;\n+                int slashIndex = key.indexOf('/');\n+                String name = key.substring(0, slashIndex);\n+                String spec = key.substring(slashIndex + 1);\n+                // Handle aliases in the 2nd pass below.\n+                if (! spec.equals(\"a\"))\n+                  {\n+                    Map<String,String> specToFileMap = fontToFileMap.get(name);\n+                    if (specToFileMap == null)\n+                      {\n+                        specToFileMap = new HashMap<String,String>();\n+                        fontToFileMap.put(name, specToFileMap);\n+                      }\n+                    specToFileMap.put(spec, fontProperties.getProperty(key));\n+                  }\n+              }\n+          }\n+        // 2nd pass for handling aliases.\n+        for (Object o : fontProperties.keySet())\n+          {\n+            if (o instanceof String)\n+              {\n+                String key = (String) o;\n+                int slashIndex = key.indexOf('/');\n+                String name = key.substring(0, slashIndex);\n+                String spec = key.substring(slashIndex + 1);\n+                // Handle aliases in the 2nd pass below.\n+                if (spec.equals(\"a\"))\n+                  {\n+                    String alias = fontProperties.getProperty(key);\n+                    Map<String,String> specToFileMap = fontToFileMap.get(alias);\n+                    fontToFileMap.put(name, specToFileMap);\n+                  }\n+              }\n+          }\n+      }\n+    // Look up font file.\n+    int slashIndex = fontSpec.indexOf('/');\n+    String name = fontSpec.substring(0, slashIndex);\n+    String spec = fontSpec.substring(slashIndex + 1);\n+    return fontToFileMap.get(name).get(spec);\n+  }\n }", "previous_filename": "libjava/classpath/gnu/java/awt/peer/x/XFontPeer2.java"}, {"sha": "935601a8898da260dbe118475b0978045e9c0dea", "filename": "libjava/classpath/gnu/java/awt/image/AsyncImage.java", "status": "added", "additions": 300, "deletions": 0, "changes": 300, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fimage%2FAsyncImage.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fimage%2FAsyncImage.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fimage%2FAsyncImage.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -0,0 +1,300 @@\n+/* AsyncImage.java -- Loads images asynchronously\n+   Copyright (C) 2008 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package gnu.java.awt.image;\n+\n+\n+import java.awt.Graphics;\n+import java.awt.Image;\n+import java.awt.image.ImageConsumer;\n+import java.awt.image.ImageObserver;\n+import java.awt.image.ImageProducer;\n+import java.util.HashSet;\n+import java.util.Iterator;\n+\n+/**\n+ * Supports asynchronous loading of images.\n+ */\n+public class AsyncImage\n+  extends Image\n+{\n+\n+  /**\n+   * The image source for AsyncImages.\n+   */\n+  private class AsyncImageSource\n+    implements ImageProducer\n+  {\n+    /**\n+     * The real image source, if already present, or <code>null</code>\n+     * otherwise.\n+     */\n+    private ImageProducer realSource;\n+\n+    public void addConsumer(ImageConsumer ic)\n+    {\n+      startProduction(ic);\n+    }\n+\n+    public boolean isConsumer(ImageConsumer ic)\n+    {\n+      return false;\n+    }\n+\n+    public void removeConsumer(ImageConsumer ic)\n+    {\n+      // Nothing to do here.\n+    }\n+\n+    public void requestTopDownLeftRightResend(ImageConsumer ic)\n+    {\n+      startProduction(ic);\n+    }\n+\n+    public void startProduction(ImageConsumer ic)\n+    {\n+      ImageProducer ip = getRealSource();\n+      if (ip == null)\n+        {\n+          ic.setDimensions(1, 1);\n+          ic.imageComplete(ImageConsumer.SINGLEFRAMEDONE);\n+        }\n+      else\n+        {\n+          ip.startProduction(ic);\n+        }\n+    }\n+\n+    /**\n+     * Returns the real image source, if already present. Otherwise, this\n+     * returns <code>null</code>.\n+     *\n+     * @return the real image source, or <code>null</code> if not present\n+     */\n+    private ImageProducer getRealSource()\n+    {\n+      synchronized (AsyncImage.this)\n+        {\n+          ImageProducer source = realSource;\n+          if (source == null)\n+            {\n+              Image ri = realImage;\n+              if (ri != null)\n+                {\n+                  realSource = source = ri.getSource();\n+                }\n+            }\n+          return source;\n+        }\n+    }\n+  }\n+\n+  /**\n+   * The real image. This is null as long as the image is not complete.\n+   */\n+  private volatile Image realImage;\n+\n+  /**\n+   * The image observers.\n+   *\n+   * This is package private to avoid accessor methods.\n+   */\n+  HashSet<ImageObserver> observers;\n+\n+  private volatile boolean complete = false;\n+\n+  /**\n+   * Creates a new AsyncImage.\n+   */\n+  AsyncImage()\n+  {\n+    observers = new HashSet<ImageObserver>();\n+  }\n+\n+  public void flush()\n+  {\n+    // Nothing to do here.\n+  }\n+\n+  public Graphics getGraphics()\n+  {\n+    Image r = realImage;\n+    Graphics g = null;\n+    if (r != null)\n+      g = r.getGraphics(); // Should we return some dummy graphics instead?\n+    return g;\n+  }\n+  \n+  public boolean isComplete() {\n+  \treturn complete;\n+  }\n+\n+  public int getHeight(ImageObserver observer)\n+  {\n+    addObserver(observer);\n+    int height = -1;\n+    waitForImage(observer);\n+    Image r = realImage;\n+    if (r != null)\n+      height = r.getHeight(observer);\n+    return height;\n+  }\n+\n+  public Object getProperty(String name, ImageObserver observer)\n+  {\n+    addObserver(observer);\n+    Image r = realImage;\n+    Object prop = null;\n+    if (r != null)\n+      prop = r.getProperty(name, observer);\n+    return prop;\n+  }\n+\n+  public ImageProducer getSource()\n+  {\n+    return new AsyncImageSource();\n+  }\n+\n+  public int getWidth(ImageObserver observer)\n+  {\n+    addObserver(observer);\n+    int width = -1;\n+    waitForImage(observer);\n+    Image r = realImage;\n+    if (r != null)\n+      width = r.getWidth(observer);\n+    return width;\n+  }\n+\n+  public void addObserver(ImageObserver obs)\n+  {\n+    if (obs != null)\n+      {\n+        synchronized (this)\n+          {\n+            // This field gets null when image loading is complete and we don't\n+            // need to store any more observers.\n+            HashSet<ImageObserver> observs = observers;\n+            if (observs != null)\n+              {\n+                observs.add(obs);\n+              }\n+          }\n+      }\n+  }\n+\n+  public boolean prepareImage(int w, int h, ImageObserver obs)\n+  {\n+    addObserver(obs);\n+    return realImage != null;\n+  }\n+\n+  public int checkImage(int w, int h, ImageObserver obs)\n+  {\n+    addObserver(obs);\n+    int flags = 0;\n+    if (realImage != null)\n+      flags = ImageObserver.ALLBITS | ImageObserver.WIDTH\n+              | ImageObserver.HEIGHT | ImageObserver.PROPERTIES;\n+    return flags;\n+  }\n+\n+  public Image getRealImage()\n+  {\n+    return realImage;\n+  }\n+\n+  public void setRealImage(Image im)\n+  {\n+    realImage = im;\n+    int status = ImageObserver.HEIGHT | ImageObserver.WIDTH;\n+    notifyObservers(status, 0, 0, im.getWidth(null), im.getHeight(null));\n+  }\n+\n+  public void notifyObservers(int status, int x, int y, int w, int h)\n+  {\n+    synchronized (this)\n+    {\n+      HashSet observs = observers;\n+      if (observs != null)\n+        {\n+          Iterator i = observs.iterator();\n+          while (i.hasNext())\n+            {\n+              ImageObserver obs = (ImageObserver) i.next();\n+              boolean complete = obs.imageUpdate(this, status, x, y, realImage.getWidth(obs), realImage.getHeight(obs));\n+              if (complete) // Remove completed observers.\n+                i.remove();\n+            }\n+        }\n+      if ((status & ImageObserver.ALLBITS) != 0)\n+        {\n+          complete = true;\n+          notifyAll();\n+        }\n+    }\n+  }\n+\n+  /**\n+   * Waits for the image to be loaded completely, if the image observer\n+   * is <code>null</code>. Otherwise this is not necessary, because the\n+   * image observer can be notified about later completion.\n+   *\n+   * @param observer the image observer\n+   */\n+  public void waitForImage(ImageObserver observer)\n+  {\n+    if (!complete && observer == null)\n+      {\n+        synchronized (this)\n+          {\n+            while (! complete)\n+              {\n+                try\n+                  {\n+                    wait();\n+                  }\n+                catch (InterruptedException ex)\n+                  {\n+                    Thread.currentThread().interrupt();\n+                  }\n+              }\n+          }\n+      }\n+  }\n+}"}, {"sha": "f607b349630f0fa913ea98d88bd13dd9fe04934e", "filename": "libjava/classpath/gnu/java/awt/image/ImageConverter.java", "status": "added", "additions": 528, "deletions": 0, "changes": 528, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fimage%2FImageConverter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fimage%2FImageConverter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fimage%2FImageConverter.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -0,0 +1,528 @@\n+/* ImageConverter.java -- Loads images asynchronously\n+   Copyright (C) 2008 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package gnu.java.awt.image;\n+\n+import gnu.java.awt.image.AsyncImage;\n+\n+import java.awt.GraphicsEnvironment;\n+import java.awt.Image;\n+import java.awt.Transparency;\n+import java.awt.image.BufferedImage;\n+import java.awt.image.ColorModel;\n+import java.awt.image.DataBuffer;\n+import java.awt.image.ImageConsumer;\n+import java.awt.image.IndexColorModel;\n+import java.awt.image.ImageObserver;\n+import java.awt.image.SinglePixelPackedSampleModel;\n+import java.awt.image.WritableRaster;\n+import java.util.Hashtable;\n+\n+/**\n+ * Convert an Image to a BufferedImage.\n+ * \n+ * @author Roman Kennke (kennke@aicas.com)\n+ */\n+public class ImageConverter implements ImageConsumer\n+{\n+\n+  public static final String IMAGE_TRANSPARENCY_PROPERTY =\n+    \"gnu.awt.image.transparency\";\n+\n+  public static final String IMAGE_PROPERTIES_PROPERTY =\n+    \"gnu.awt.image.properties\";\n+\n+  private AsyncImage image;\n+  private BufferedImage bImage;\n+  private Hashtable imageProperties;\n+  private int width, height;\n+  private ColorModel colorModel;\n+  private ColorModel targetColorModel;\n+\n+  public ImageConverter()\n+  {\n+    width = 0;\n+    height = 0;\n+    image = new AsyncImage();\n+  }\n+\n+  public void setDimensions(int w, int h)\n+  {\n+    width = w;\n+    height = h;\n+  }\n+\n+  public void setProperties(Hashtable props)\n+  {\n+    // Ignore for now.\n+  }\n+\n+  public void setColorModel(ColorModel model)\n+  {\n+    colorModel = model;\n+  }\n+\n+  public void setHints(int flags)\n+  {\n+    // Ignore for now.\n+  }\n+\n+  public void setPixels(int x, int y, int w, int h, ColorModel model,\n+                        byte[] pixels, int offset, int scansize)\n+  {\n+    model = setupColorModel(model);\n+\n+    if (bImage == null)\n+      {\n+        createImage();\n+      }\n+\n+    Integer t = (Integer) imageProperties.get(\"gnu.awt.image.transparency\");\n+    int transparency = t.intValue();\n+\n+    if(targetColorModel.equals(model))\n+      {\n+        transparency = transferPixels(x, y, w, h, model, pixels, offset,\n+                                      scansize, transparency);\n+      }\n+    else if (model instanceof IndexColorModel\n+             && targetColorModel.equals(ColorModel.getRGBdefault())) \n+      {\n+        transparency = convertIndexColorModelToSRGB(x, y, w, h,\n+                                                    (IndexColorModel) model,\n+                                                    pixels, offset, scansize,\n+                                                    transparency);\n+      }\n+    else\n+      {\n+        transparency = convertPixels(x, y, w, h, model, pixels, offset,\n+                                     scansize, transparency);\n+      }\n+\n+    imageProperties.put(\"gnu.awt.image.transparency\",\n+                        Integer.valueOf(transparency));\n+  }\n+\n+  public void setPixels(int x, int y, int w, int h, ColorModel model,\n+                        int[] pixels, int offset, int scansize)\n+  {\n+    model = setupColorModel(model);\n+    if (bImage == null)\n+      {\n+        createImage();\n+      }\n+\n+    Integer t = (Integer) imageProperties.get(IMAGE_TRANSPARENCY_PROPERTY);\n+    int transparency= t.intValue();\n+\n+    if (targetColorModel.equals(model))\n+      {\n+        transparency = transferPixels(x, y, w, h, model, pixels, offset,\n+                                      scansize, transparency);\n+      }\n+    else if (model instanceof IndexColorModel\n+             && targetColorModel.equals(ColorModel.getRGBdefault()))\n+      {\n+        transparency = convertIndexColorModelToSRGB(x, y, w, h,\n+                                                    (IndexColorModel) model,\n+                                                    pixels, offset, scansize,\n+                                                    transparency);\n+      }\n+    else\n+      {\n+        transparency = convertPixels(x, y, w, h, model, pixels, offset,\n+                                     scansize, transparency);\n+      }\n+\n+    imageProperties.put(IMAGE_TRANSPARENCY_PROPERTY,\n+                        Integer.valueOf(transparency));\n+\n+  }\n+\n+  /**\n+   * Initialize the color model for this setPixels run: <br/>\n+   * 1. if no color model was given use the hinted color model <br/>\n+   * 2. if no color model was given and non was hinted use the default sRGB color model. <br/>\n+   * Also:<br/>\n+   * If no target color model was set use the color model of the given pixels.\n+   * @param model\n+   * @return\n+   */\n+  private ColorModel setupColorModel(ColorModel model)\n+  {\n+    // If the given color model is null use the previously hinted color model.\n+    if (model == null)\n+      model = colorModel;\n+\n+    // If no color model was given or hinted use default sRGB.\n+    if (model == null)\n+      model = ColorModel.getRGBdefault();\n+\n+    // If no specific color model was requested for the target use the current\n+    // pixels model.\n+    if (targetColorModel == null)\n+      targetColorModel = model;\n+    targetColorModel = ColorModel.getRGBdefault();\n+    return model;\n+  }\n+\n+  /**\n+   * Creates the image instance into which the pixel data is converted.\n+   */\n+  private void createImage()\n+  {\n+    if (imageProperties == null)\n+      {\n+        imageProperties = new Hashtable();\n+      }\n+\n+    imageProperties.put(IMAGE_TRANSPARENCY_PROPERTY,\n+                        Integer.valueOf(Transparency.OPAQUE));\n+    imageProperties.put(IMAGE_PROPERTIES_PROPERTY, imageProperties);\n+\n+    // For the sRGB case let the GraphicsEnvironment create an image for us.\n+    if (ColorModel.getRGBdefault().equals(targetColorModel))\n+      {\n+        bImage = GraphicsEnvironment.getLocalGraphicsEnvironment()\n+                                    .getDefaultScreenDevice()\n+                                    .getDefaultConfiguration()\n+             .createCompatibleImage(width, height, Transparency.TRANSLUCENT);\n+      }\n+    else\n+      {\n+        WritableRaster raster =\n+          targetColorModel.createCompatibleWritableRaster(width, height);\n+        bImage = new BufferedImage(targetColorModel, raster, false,\n+                                   imageProperties);\n+      }\n+    image.setRealImage(bImage);\n+    return;\n+  }\n+\n+  /**\n+   * Transfers pixels into a raster of the same color model.\n+   *\n+   * @param x the X coordinate of the source pixel rectangle\n+   * @param y the Y coordinate of the source pixel rectangle\n+   * @param w the width of the source pixel rectangle\n+   * @param h the height of the source pixel rectangle\n+   * @param model the color model of the source pixels\n+   * @param pixels the pixel data\n+   * @param offset the offset in the pixel array\n+   * @param scansize the scanline size\n+   * @param transparency the assumed transparency\n+   * \n+   * @return the determined transparency\n+   */\n+  private int transferPixels(int x, int y, int w, int h, ColorModel model,\n+                             byte[] pixels, int offset, int scansize,\n+                             int transparency)\n+  {\n+    // If we have the same color model, then we can simply drop\n+    // the pixel value into the target raster.\n+    bImage.getRaster().setDataElements(x, y, w, h, pixels);\n+\n+    for (int yy = 0; yy < h; yy++)\n+      {\n+        for (int xx = 0; xx < w; xx++)\n+          {\n+            int pixel = 0xFF & pixels[yy * scansize + xx + offset];\n+            int alpha = model.getAlpha(pixel);\n+            transparency = updateTransparency(alpha, transparency);\n+          }\n+      }\n+    return transparency;\n+  }\n+\n+  /**\n+   * Transfers pixels into a raster of the same color model.\n+   *\n+   * @param x the X coordinate of the source pixel rectangle\n+   * @param y the Y coordinate of the source pixel rectangle\n+   * @param w the width of the source pixel rectangle\n+   * @param h the height of the source pixel rectangle\n+   * @param model the color model of the source pixels\n+   * @param pixels the pixel data\n+   * @param offset the offset in the pixel array\n+   * @param scansize the scanline size\n+   * @param transparency the assumed transparency\n+   * \n+   * @return the determined transparency\n+   */\n+  private int transferPixels(int x, int y, int w, int h, ColorModel model,\n+                             int[] pixels, int offset, int scansize,\n+                             int transparency)\n+  {\n+    // If we have the same color model, then we can simply drop\n+    // the pixel value into the target raster.\n+    bImage.getRaster().setDataElements(x, y, w, h, pixels);\n+\n+    for (int yy = 0; yy < h; yy++)\n+      {\n+        for (int xx = 0; xx < w; xx++)\n+          {\n+            int pixel = pixels[yy * scansize + xx + offset];\n+            int alpha = model.getAlpha(pixel);\n+            transparency = updateTransparency(alpha, transparency);\n+          }\n+      }\n+    return transparency;\n+  }\n+\n+  /**\n+   * Converts pixel from one color model to another, and stores them in the\n+   * target image.\n+   *\n+   * @param x the X coordinate of the source pixel rectangle\n+   * @param y the Y coordinate of the source pixel rectangle\n+   * @param w the width of the source pixel rectangle\n+   * @param h the height of the source pixel rectangle\n+   * @param model the color model of the source pixels\n+   * @param pixels the pixel data\n+   * @param offset the offset in the pixel array\n+   * @param scansize the scanline size\n+   * @param transparency the assumed transparency\n+   * \n+   * @return the determined transparency\n+   */\n+  private int convertPixels(int x, int y, int w, int h, ColorModel model,\n+                            byte[] pixels, int offset, int scansize,\n+                            int transparency)\n+  {\n+    // If the color models are not the same, we must convert the\n+    // pixel values from one model to the other.\n+    Object dataEl = null;\n+    // Convert pixels to the destination color model.\n+    for (int yy = 0; yy < h; yy++)\n+      {\n+        for (int xx = 0; xx < w; xx++)\n+          {\n+            int pixel = 0xFF & pixels[yy * scansize + xx + offset];\n+            int rgb = model.getRGB(pixel);\n+            int alpha = model.getAlpha(pixel);\n+            transparency = updateTransparency(alpha, transparency);\n+            dataEl = targetColorModel.getDataElements(rgb, dataEl);\n+            bImage.getRaster().setDataElements(x + xx, y + yy, dataEl);\n+          }\n+      }\n+    return transparency;\n+  }\n+\n+  /**\n+   * Converts pixel from one color model to another, and stores them in the\n+   * target image.\n+   *\n+   * @param x the X coordinate of the source pixel rectangle\n+   * @param y the Y coordinate of the source pixel rectangle\n+   * @param w the width of the source pixel rectangle\n+   * @param h the height of the source pixel rectangle\n+   * @param model the color model of the source pixels\n+   * @param pixels the pixel data\n+   * @param offset the offset in the pixel array\n+   * @param scansize the scanline size\n+   * @param transparency the assumed transparency\n+   * \n+   * @return the determined transparency\n+   */\n+  private int convertPixels(int x, int y, int w, int h, ColorModel model,\n+                            int[] pixels, int offset, int scansize,\n+                            int transparency)\n+  {\n+    // If the color models are not the same, we must convert the\n+    // pixel values from one model to the other.\n+    Object dataEl = null;\n+    // Convert pixels to the destination color model.\n+    for (int yy = 0; yy < h; yy++)\n+      {\n+        for (int xx = 0; xx < w; xx++)\n+          {\n+            int pixel = pixels[yy * scansize + xx + offset];\n+            int rgb = model.getRGB(pixel);\n+            int alpha = model.getAlpha(pixel);\n+            transparency = updateTransparency(alpha, transparency);\n+            dataEl = targetColorModel.getDataElements(rgb, dataEl);\n+            bImage.getRaster().setDataElements(x + xx, y + yy, dataEl);\n+          }\n+      }\n+    return transparency;\n+  }\n+\n+  /**\n+   * Converts pixels from an index color model to the target image.\n+   *\n+   * @param x the X coordinate of the source pixel rectangle\n+   * @param y the Y coordinate of the source pixel rectangle\n+   * @param w the width of the source pixel rectangle\n+   * @param h the height of the source pixel rectangle\n+   * @param model the color model of the source pixels\n+   * @param pixels the pixel data\n+   * @param offset the offset in the pixel array\n+   * @param scansize the scanline size\n+   * @param transparency the assumed transparency\n+   * \n+   * @return the determined transparency\n+   */\n+  private int convertIndexColorModelToSRGB(int x, int y, int w, int h,\n+                                           IndexColorModel model,\n+                                           byte[] pixels, int offset,\n+                                           int scansize, int transparency)\n+  {\n+\n+    int mapSize = model.getMapSize();\n+    int[] colorMap = new int[mapSize];\n+    for(int i=0; i < mapSize; i++)\n+      {\n+        colorMap[i] = model.getRGB(i);\n+      }\n+\n+    WritableRaster raster = bImage.getRaster();\n+    SinglePixelPackedSampleModel sampleMode =\n+      (SinglePixelPackedSampleModel) raster.getSampleModel();\n+    DataBuffer dataBuffer = (DataBuffer) raster.getDataBuffer();\n+\n+    int rasterOffset = sampleMode.getOffset(x,y)+dataBuffer.getOffset();\n+    int rasterScanline = sampleMode.getScanlineStride();\n+\n+    for (int yy = 0; yy < h; yy++)\n+      {\n+        int xoffset = offset;\n+        for (int xx = 0; xx < w; xx++)\n+          {\n+            int argb  = colorMap[(pixels[xoffset++] & 0xFF)];\n+            dataBuffer.setElem(rasterOffset+xx, argb);\n+            int alpha = (argb >>> 24);\n+            transparency = updateTransparency(alpha, transparency);\n+          }\n+        offset += scansize;\n+        rasterOffset += rasterScanline;\n+      }\n+\n+    return transparency;\n+  }\n+\n+  /**\n+   * Converts pixels from an index color model to the target image.\n+   *\n+   * @param x the X coordinate of the source pixel rectangle\n+   * @param y the Y coordinate of the source pixel rectangle\n+   * @param w the width of the source pixel rectangle\n+   * @param h the height of the source pixel rectangle\n+   * @param model the color model of the source pixels\n+   * @param pixels the pixel data\n+   * @param offset the offset in the pixel array\n+   * @param scansize the scanline size\n+   * @param transparency the assumed transparency\n+   * \n+   * @return the determined transparency\n+   */\n+  private int convertIndexColorModelToSRGB(int x, int y, int w, int h,\n+                                           IndexColorModel model, int[] pixels,\n+                                           int offset, int scansize,\n+                                           int transparency)\n+  {\n+    int mapSize = model.getMapSize();\n+    int[] colorMap = new int[mapSize];\n+    for(int i=0; i < mapSize; i++)\n+      {\n+        colorMap[i] = model.getRGB(i);\n+      }\n+\n+    WritableRaster raster = bImage.getRaster();\n+    SinglePixelPackedSampleModel sampleMode =\n+      (SinglePixelPackedSampleModel) raster.getSampleModel();\n+    DataBuffer dataBuffer = (DataBuffer)raster.getDataBuffer();\n+\n+    int rasterOffset = sampleMode.getOffset(x, y) + dataBuffer.getOffset();\n+    int rasterScanline = sampleMode.getScanlineStride();\n+\n+    for (int yy = 0; yy < h; yy++)\n+      {\n+        int xoffset = offset;\n+        for (int xx = 0; xx < w; xx++)\n+          {\n+            int argb  = colorMap[pixels[xoffset++]];\n+            dataBuffer.setElem(rasterOffset + xx, argb);\n+            int alpha = (argb >>> 24);\n+            transparency = updateTransparency(alpha, transparency);\n+          }\n+        offset += scansize;\n+        rasterOffset += rasterScanline;\n+      }\n+\n+    return transparency;\n+  }\n+\n+  /**\n+   * Updates the transparency information according to the alpha pixel value.\n+   *\n+   * @param alpha the alpha pixel value\n+   * @param transparency the old transparency\n+   *\n+   * @return the updated transparency\n+   */\n+  private int updateTransparency(int alpha, int transparency)\n+  {\n+    if (alpha != 0xFF)\n+      {\n+        if (alpha == 0x00 && transparency <= Transparency.BITMASK)\n+          {\n+            transparency = Transparency.BITMASK;\n+          }\n+        else if (transparency < Transparency.TRANSLUCENT)\n+          {\n+            transparency = Transparency.TRANSLUCENT;\n+          }\n+      }\n+    return transparency;\n+  }\n+\n+  public void imageComplete(int status)\n+  {\n+    image.notifyObservers(ImageObserver.ALLBITS, 0, 0, width, height);\n+  }\n+\n+  public void setTargetColorModel(ColorModel model)\n+  {\n+    targetColorModel = model;\n+  }\n+\n+  public Image getImage()\n+  {\n+    return image;\n+  }\n+}"}, {"sha": "36ba0f4304ce5f8f9cd6fd5ebdb836d98fe89314", "filename": "libjava/classpath/gnu/java/awt/java2d/AbstractGraphics2D.java", "status": "modified", "additions": 101, "deletions": 64, "changes": 165, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fjava2d%2FAbstractGraphics2D.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fjava2d%2FAbstractGraphics2D.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fjava2d%2FAbstractGraphics2D.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -37,6 +37,8 @@\n \n package gnu.java.awt.java2d;\n \n+import gnu.java.util.LRUCache;\n+\n import java.awt.AWTError;\n import java.awt.AlphaComposite;\n import java.awt.AWTPermission;\n@@ -80,7 +82,9 @@\n import java.awt.image.WritableRaster;\n import java.awt.image.renderable.RenderableImage;\n import java.text.AttributedCharacterIterator;\n+import java.util.Collections;\n import java.util.HashMap;\n+import java.util.LinkedList;\n import java.util.Map;\n \n /**\n@@ -151,23 +155,47 @@\n   implements Cloneable, Pixelizer\n {\n \n+  /**\n+   * Wether we use anti aliasing for rendering text by default or not.\n+   */\n+  private static final boolean DEFAULT_TEXT_AA =\n+    Boolean.getBoolean(\"gnu.java2d.default_text_aa\");\n+\n   /**\n    * The default font to use on the graphics object.\n    */\n   private static final Font FONT = new Font(\"SansSerif\", Font.PLAIN, 12);\n \n+  /**\n+   * The size of the LRU cache used for caching GlyphVectors.\n+   */\n+  private static final int GV_CACHE_SIZE = 50;\n+\n   /**\n    * Caches certain shapes to avoid massive creation of such Shapes in\n    * the various draw* and fill* methods.\n    */\n-  private static final ThreadLocal<ShapeCache> shapeCache =\n-    new ThreadLocal<ShapeCache>();\n+  private static final ShapeCache shapeCache = new ShapeCache();\n+\n+  /**\n+   * A pool of scanline converters. It is important to reuse scanline\n+   * converters because they keep their datastructures in place. We pool them\n+   * for use in multiple threads.\n+   */\n+  private static final LinkedList<ScanlineConverter> scanlineConverters =\n+    new LinkedList<ScanlineConverter>();\n+\n+  /**\n+   * Caches glyph vectors for better drawing performance.\n+   */\n+  private static final Map<TextCacheKey,GlyphVector> gvCache =\n+    Collections.synchronizedMap(new LRUCache<TextCacheKey,GlyphVector>(GV_CACHE_SIZE));\n \n   /**\n-   * The scanline converters by thread.\n+   * This key is used to search in the gvCache without allocating a new\n+   * key each time.\n    */\n-  private static final ThreadLocal<ScanlineConverter> scanlineConverters =\n-    new ThreadLocal<ScanlineConverter>();\n+  private static final TextCacheKey searchTextKey = new TextCacheKey();\n \n   /**\n    * The transformation for this Graphics2D instance\n@@ -484,14 +512,25 @@ private void drawRenderableImageImpl(RenderableImage image,\n    */\n   public void drawString(String text, int x, int y)\n   {\n-    if (isOptimized)\n-      rawDrawString(text, x, y);\n-    else\n+    GlyphVector gv;\n+    synchronized (searchTextKey)\n       {\n-        FontRenderContext ctx = getFontRenderContext();\n-        GlyphVector gv = font.createGlyphVector(ctx, text.toCharArray());\n-        drawGlyphVector(gv, x, y);\n+        TextCacheKey tck = searchTextKey;\n+        FontRenderContext frc = getFontRenderContext();\n+        tck.setString(text);\n+        tck.setFont(font);\n+        tck.setFontRenderContext(frc);\n+        if (gvCache.containsKey(tck))\n+          {\n+            gv = gvCache.get(tck);\n+          }\n+        else\n+          {\n+            gv = font.createGlyphVector(frc, text.toCharArray());\n+            gvCache.put(new TextCacheKey(text, font, frc), gv);\n+          }\n       }\n+    drawGlyphVector(gv, x, y);\n   }\n \n   /**\n@@ -949,7 +988,10 @@ else if (clip instanceof Rectangle && s instanceof Rectangle)\n \n   public FontRenderContext getFontRenderContext()\n   {\n-    return new FontRenderContext(transform, false, true);\n+    // Protect our own transform from beeing modified.\n+    AffineTransform tf = new AffineTransform(transform);\n+    // TODO: Determine antialias and fractionalmetrics parameters correctly.\n+    return new FontRenderContext(tf, false, true);\n   }\n \n   /**\n@@ -992,8 +1034,10 @@ protected Object clone()\n         // Copy the clip. If it's a Rectangle, preserve that for optimization.\n         if (clip instanceof Rectangle)\n           copy.clip = new Rectangle((Rectangle) clip);\n-        else\n+        else if (clip != null)\n           copy.clip = new GeneralPath(clip);\n+        else\n+          copy.clip = null;\n \n \tcopy.renderingHints = new RenderingHints(null);\n \tcopy.renderingHints.putAll(renderingHints);\n@@ -1163,7 +1207,7 @@ public void drawLine(int x1, int y1, int x2, int y2)\n       }\n     else\n       {\n-        ShapeCache sc = getShapeCache();\n+        ShapeCache sc = shapeCache;\n         if (sc.line == null)\n           sc.line = new Line2D.Float();\n         sc.line.setLine(x1, y1, x2, y2);\n@@ -1175,11 +1219,13 @@ public void drawRect(int x, int y, int w, int h)\n   {\n     if (isOptimized)\n       {\n-        rawDrawRect(x, y, w, h);\n+        int tx = (int) transform.getTranslateX();\n+        int ty = (int) transform.getTranslateY();\n+        rawDrawRect(x + tx, y + ty, w, h);\n       }\n     else\n       {\n-        ShapeCache sc = getShapeCache();\n+        ShapeCache sc = shapeCache;\n         if (sc.rect == null)\n           sc.rect = new Rectangle();\n         sc.rect.setBounds(x, y, w, h);\n@@ -1204,7 +1250,7 @@ public void fillRect(int x, int y, int width, int height)\n       }\n     else\n       {\n-        ShapeCache sc = getShapeCache();\n+        ShapeCache sc = shapeCache;\n         if (sc.rect == null)\n           sc.rect = new Rectangle();\n         sc.rect.setBounds(x, y, width, height);\n@@ -1249,7 +1295,7 @@ public void clearRect(int x, int y, int width, int height)\n   public void drawRoundRect(int x, int y, int width, int height, int arcWidth,\n                             int arcHeight)\n   {\n-    ShapeCache sc = getShapeCache();\n+    ShapeCache sc = shapeCache;\n     if (sc.roundRect == null)\n       sc.roundRect = new RoundRectangle2D.Float();\n     sc.roundRect.setRoundRect(x, y, width, height, arcWidth, arcHeight);\n@@ -1269,7 +1315,7 @@ public void drawRoundRect(int x, int y, int width, int height, int arcWidth,\n   public void fillRoundRect(int x, int y, int width, int height, int arcWidth,\n                             int arcHeight)\n   {\n-    ShapeCache sc = getShapeCache();\n+    ShapeCache sc = shapeCache;\n     if (sc.roundRect == null)\n       sc.roundRect = new RoundRectangle2D.Float();\n     sc.roundRect.setRoundRect(x, y, width, height, arcWidth, arcHeight);\n@@ -1286,7 +1332,7 @@ public void fillRoundRect(int x, int y, int width, int height, int arcWidth,\n    */\n   public void drawOval(int x, int y, int width, int height)\n   {\n-    ShapeCache sc = getShapeCache();\n+    ShapeCache sc = shapeCache;\n     if (sc.ellipse == null)\n       sc.ellipse = new Ellipse2D.Float();\n     sc.ellipse.setFrame(x, y, width, height);\n@@ -1303,7 +1349,7 @@ public void drawOval(int x, int y, int width, int height)\n    */\n   public void fillOval(int x, int y, int width, int height)\n   {\n-    ShapeCache sc = getShapeCache();\n+    ShapeCache sc = shapeCache;\n     if (sc.ellipse == null)\n       sc.ellipse = new Ellipse2D.Float();\n     sc.ellipse.setFrame(x, y, width, height);\n@@ -1316,7 +1362,7 @@ public void fillOval(int x, int y, int width, int height)\n   public void drawArc(int x, int y, int width, int height, int arcStart,\n                       int arcAngle)\n   {\n-    ShapeCache sc = getShapeCache();\n+    ShapeCache sc = shapeCache;\n     if (sc.arc == null)\n       sc.arc = new Arc2D.Float();\n     sc.arc.setArc(x, y, width, height, arcStart, arcAngle, Arc2D.OPEN);\n@@ -1329,7 +1375,7 @@ public void drawArc(int x, int y, int width, int height, int arcStart,\n   public void fillArc(int x, int y, int width, int height, int arcStart,\n                       int arcAngle)\n   {\n-    ShapeCache sc = getShapeCache();\n+    ShapeCache sc = shapeCache;\n     if (sc.arc == null)\n       sc.arc = new Arc2D.Float();\n     sc.arc.setArc(x, y, width, height, arcStart, arcAngle, Arc2D.PIE);\n@@ -1338,7 +1384,7 @@ public void fillArc(int x, int y, int width, int height, int arcStart,\n \n   public void drawPolyline(int[] xPoints, int[] yPoints, int npoints)\n   {\n-    ShapeCache sc = getShapeCache();\n+    ShapeCache sc = shapeCache;\n     if (sc.polyline == null)\n       sc.polyline = new GeneralPath();\n     GeneralPath p = sc.polyline;\n@@ -1355,7 +1401,7 @@ public void drawPolyline(int[] xPoints, int[] yPoints, int npoints)\n    */\n   public void drawPolygon(int[] xPoints, int[] yPoints, int npoints)\n   {\n-    ShapeCache sc = getShapeCache();\n+    ShapeCache sc = shapeCache;\n     if (sc.polygon == null)\n       sc.polygon = new Polygon();\n     sc.polygon.reset();\n@@ -1370,7 +1416,7 @@ public void drawPolygon(int[] xPoints, int[] yPoints, int npoints)\n    */\n   public void fillPolygon(int[] xPoints, int[] yPoints, int npoints)\n   {\n-    ShapeCache sc = getShapeCache();\n+    ShapeCache sc = shapeCache;\n     if (sc.polygon == null)\n       sc.polygon = new Polygon();\n     sc.polygon.reset();\n@@ -1559,8 +1605,9 @@ protected void fillShape(Shape s, boolean isFont)\n       {\n         Object v = renderingHints.get(RenderingHints.KEY_TEXT_ANTIALIASING);\n         // We default to antialiasing for text rendering.\n-        antialias = (v == RenderingHints.VALUE_TEXT_ANTIALIAS_ON\n-                     || v == RenderingHints.VALUE_TEXT_ANTIALIAS_DEFAULT);\n+        antialias = v == RenderingHints.VALUE_TEXT_ANTIALIAS_ON\n+                    || (v == RenderingHints.VALUE_TEXT_ANTIALIAS_DEFAULT\n+                         && DEFAULT_TEXT_AA);\n       }\n     else\n       {\n@@ -1569,12 +1616,15 @@ protected void fillShape(Shape s, boolean isFont)\n       }\n     ScanlineConverter sc = getScanlineConverter();\n     int resolution = 0;\n+    int yRes = 0;\n     if (antialias)\n       {\n         // Adjust resolution according to rendering hints.\n         resolution = 2;\n+        yRes = 4;\n       }\n-    sc.renderShape(this, s, clip, transform, resolution, renderingHints);\n+    sc.renderShape(this, s, clip, transform, resolution, yRes, renderingHints);\n+    freeScanlineConverter(sc);\n   }\n \n   /**\n@@ -1606,7 +1656,7 @@ protected Rectangle getDeviceBounds()\n    */\n   protected void rawDrawLine(int x0, int y0, int x1, int y1)\n   {\n-    ShapeCache sc = getShapeCache();\n+    ShapeCache sc = shapeCache;\n     if (sc.line == null)\n       sc.line = new Line2D.Float();\n     sc.line.setLine(x0, y0, x1, y1);\n@@ -1615,29 +1665,13 @@ protected void rawDrawLine(int x0, int y0, int x1, int y1)\n \n   protected void rawDrawRect(int x, int y, int w, int h)\n   {\n-    ShapeCache sc = getShapeCache();\n+    ShapeCache sc = shapeCache;\n     if (sc.rect == null)\n       sc.rect = new Rectangle();\n     sc.rect.setBounds(x, y, w, h);\n     draw(sc.rect);\n   }\n \n-  /**\n-   * Draws a string in optimization mode. The implementation should respect the\n-   * clip and translation. It can assume that the clip is a rectangle and that\n-   * the transform is only a translating transform.\n-   *\n-   * @param text the string to be drawn\n-   * @param x the start of the baseline, X coordinate\n-   * @param y the start of the baseline, Y coordinate\n-   */\n-  protected void rawDrawString(String text, int x, int y)\n-  {\n-    FontRenderContext ctx = getFontRenderContext();\n-    GlyphVector gv = font.createGlyphVector(ctx, text.toCharArray());\n-    drawGlyphVector(gv, x, y);\n-  }\n-\n   /**\n    * Clears a rectangle in optimization mode. The implementation should respect the\n    * clip and translation. It can assume that the clip is a rectangle and that\n@@ -1667,7 +1701,7 @@ protected void rawClearRect(int x, int y, int w, int h)\n    */\n   protected void rawFillRect(int x, int y, int w, int h)\n   {\n-    ShapeCache sc = getShapeCache();\n+    ShapeCache sc = shapeCache;\n     if (sc.rect == null)\n       sc.rect = new Rectangle();\n     sc.rect.setBounds(x, y, w, h);\n@@ -1918,35 +1952,38 @@ private void updateClip(AffineTransform t)\n   }\n \n   /**\n-   * Returns the ShapeCache for the calling thread.\n+   * Returns a free scanline converter from the pool.\n    *\n-   * @return the ShapeCache for the calling thread\n+   * @return a scanline converter\n    */\n-  private ShapeCache getShapeCache()\n+  private ScanlineConverter getScanlineConverter()\n   {\n-    ShapeCache sc = shapeCache.get();\n-    if (sc == null)\n+    synchronized (scanlineConverters)\n       {\n-        sc = new ShapeCache();\n-        shapeCache.set(sc);\n+        ScanlineConverter sc;\n+        if (scanlineConverters.size() > 0)\n+          {\n+            sc = scanlineConverters.removeFirst();\n+          }\n+        else\n+          {\n+            sc = new ScanlineConverter();\n+          }\n+        return sc;\n       }\n-    return sc;\n   }\n \n   /**\n-   * Returns the scanline converter for this thread.\n+   * Puts a scanline converter back in the pool.\n    *\n-   * @return the scanline converter for this thread\n+   * @param sc\n    */\n-  private ScanlineConverter getScanlineConverter()\n+  private void freeScanlineConverter(ScanlineConverter sc)\n   {\n-    ScanlineConverter sc = scanlineConverters.get();\n-    if (sc == null)\n+    synchronized (scanlineConverters)\n       {\n-        sc = new ScanlineConverter();\n-        scanlineConverters.set(sc);\n+        scanlineConverters.addLast(sc);\n       }\n-    return sc;\n   }\n \n }"}, {"sha": "c83ad1fff8f4870797fc85c6c42010e8e535b60d", "filename": "libjava/classpath/gnu/java/awt/java2d/PixelCoverage.java", "status": "added", "additions": 132, "deletions": 0, "changes": 132, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fjava2d%2FPixelCoverage.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fjava2d%2FPixelCoverage.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fjava2d%2FPixelCoverage.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -0,0 +1,132 @@\n+package gnu.java.awt.java2d;\n+\n+/**\n+ * Stores and handles the pixel converage for a scanline. The pixel coverage\n+ * is stored as sorted list of buckets, each of which holds information about\n+ * the coverage for the X and Y axis. This is utilized to compute the actual\n+ * coverage for each pixel on the scanline and finding chunks of pixels with\n+ * equal coverage.\n+ */\n+final class PixelCoverage\n+{\n+\n+  /**\n+   * One bucket in the list.\n+   */\n+  private static final class Bucket\n+  {\n+    /**\n+     * The X coordinate on the scanline to which this bucket belongs.\n+     */\n+    int xPos;\n+\n+    /**\n+     * The X coverage.\n+     */\n+    int xCov;\n+\n+    /**\n+     * The Y coverage.\n+     */\n+    int yCov;\n+\n+    /**\n+     * Implements a linked list. This points to the next element of the list.\n+     */\n+    Bucket next;\n+\n+    /**\n+     * Implements a linked list. This points to the previous element of the\n+     * list.\n+     */\n+    Bucket prev;\n+  }\n+\n+  /**\n+   * The head of the sorted list of buckets.\n+   */\n+  private Bucket head;\n+\n+  /**\n+   * The current bucket. We make use of the fact that the scanline converter\n+   * always scans the scanline (and thus this list) from left to right to\n+   * quickly find buckets or insertion points.\n+   */\n+  private Bucket current;\n+\n+  /**\n+   * The bucket after the last valid bucket. Unused buckets are not thrown\n+   * away and garbage collected. Instead, we keep them at the tail of the list\n+   * and reuse them when necessary.\n+   */\n+  private Bucket last;\n+\n+  /**\n+   * Indicates the the next scan of the scanline begins and that the next\n+   * request will be at the beginning of this list. This makes searching and\n+   * sorting of this list very quick.\n+   */\n+  void rewind()\n+  {\n+    current = head;\n+  }\n+\n+  /**\n+   * Clears the list. This does not throw away the old buckets but only\n+   * resets the end-pointer of the list to the first element. All buckets are\n+   * then unused and are reused when the list is filled again.\n+   */\n+  void clear()\n+  {\n+    last = head;\n+  }\n+\n+  /**\n+   * This adds the specified x and y coverage to the pixel at the specified\n+   * X position.\n+   *\n+   * @param x the X position\n+   * @param xc the x coverage\n+   * @param yc the y coverage\n+   */\n+  void add(int x, int xc, int yc)\n+  {\n+    Bucket bucket = findOrInsert(x);\n+    bucket.xCov += xc;\n+    bucket.yCov += yc;\n+  }\n+\n+  /**\n+   * Finds the bucket in the list with the specified X coordinate.\n+   * If no such bucket is found, then a new one is fetched (either a cached\n+   * bucket from the end of the list or a newly allocated one) inserted at the\n+   * correct position and returned.\n+   *\n+   * @param x the X coordinate\n+   *\n+   * @return a bucket to hold the coverage data\n+   */\n+  private Bucket findOrInsert(int x)\n+  {\n+    // First search for a matching bucket.\n+    if (head == null)\n+      {\n+        // Special case: the list is still empty.\n+        head = new Bucket();\n+        current = head;\n+        return head;\n+      }\n+\n+    // This performs a linear search, starting from the current bucket.\n+    // This is reasonably efficient because access to this list is always done\n+    // in a linear fashion and we are not more then 1 or 2 buckets away from\n+    // the one we're looking for.\n+    Bucket match = current;\n+    while (match != null && match.xPos != x)\n+      {\n+        \n+      }\n+\n+    return match;\n+  }\n+}"}, {"sha": "cc4bbef28c0267a6d7cd999916543d49972a6999", "filename": "libjava/classpath/gnu/java/awt/java2d/ScanlineConverter.java", "status": "modified", "additions": 16, "deletions": 13, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fjava2d%2FScanlineConverter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fjava2d%2FScanlineConverter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fjava2d%2FScanlineConverter.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -61,11 +61,6 @@\n    */\n   private static int ONE = Fixed.fixedValue(FIXED_DIGITS, 1);\n \n-  /**\n-   * The number of significant bits for the Y resolution.\n-   */\n-  private static int Y_RESOLUTION = 4;\n-\n   /**\n    * The actual number of scanlines.\n    */\n@@ -93,6 +88,11 @@\n    */\n   private int resolution;\n \n+  /**\n+   * The number of significant bits for the 'Y' resolution.\n+   */\n+  private int yResolution;\n+\n   /**\n    * One half step according to the resolution. This is stored to avoid\n    * unnecessary operations during rendering.\n@@ -145,14 +145,15 @@\n    * @param trans the transform\n    */\n   public void renderShape(Pixelizer p, Shape shape, Shape clip,\n-                          AffineTransform trans, int res, RenderingHints hints)\n+                          AffineTransform trans, int res, int yRes,\n+                          RenderingHints hints)\n   {\n     // TODO: Do something useful with the rendering hints. Like, adjusting\n     // the resolution.\n \n     // Prepare resolution and upper bounds.\n     clear();\n-    setResolution(res);\n+    setResolution(res, yRes);\n \n     boolean haveClip = clip != null;\n \n@@ -278,10 +279,10 @@ private void doScanline(Pixelizer p, int y, boolean push,\n             int frac0 = ONE - Fixed.trunc(FIXED_DIGITS, x0);\n             int frac1 = ONE - Fixed.trunc(FIXED_DIGITS, x1);\n             // Only keep the first 4 digits after the point.\n-            frac0 = frac0 >> (FIXED_DIGITS - Y_RESOLUTION);\n-            frac1 = frac1 >> (FIXED_DIGITS - Y_RESOLUTION);\n-            scanlineCoverage.add(pix0, 1 * (1 << Y_RESOLUTION), frac0);\n-            scanlineCoverage.add(pix1, -1 * (1 << Y_RESOLUTION), -frac1);\n+            frac0 = frac0 >> (FIXED_DIGITS - yResolution);\n+            frac1 = frac1 >> (FIXED_DIGITS - yResolution);\n+            scanlineCoverage.add(pix0, 1 * (1 << yResolution), frac0);\n+            scanlineCoverage.add(pix1, -1 * (1 << yResolution), -frac1);\n           }\n         if (edge.isClip)\n           inClip = ! inClip;\n@@ -306,14 +307,16 @@ private void doScanline(Pixelizer p, int y, boolean push,\n    *\n    * @param res the resolution\n    */\n-  private void setResolution(int res)\n+  private void setResolution(int res, int yRes)\n   {\n     int scanlinesPerPixel = 1 << res;\n     int one = Fixed.fixedValue(FIXED_DIGITS, 1);\n     resolution = one / (scanlinesPerPixel);\n     halfStep = resolution / 2;\n \n-    scanlineCoverage.setMaxCoverage(scanlinesPerPixel << Y_RESOLUTION);\n+    scanlineCoverage.setMaxCoverage(scanlinesPerPixel << yResolution);\n+\n+    yResolution = yRes;\n   }\n \n   /**"}, {"sha": "deb603bcb51f1f33a990044ffab32a6005edb1fb", "filename": "libjava/classpath/gnu/java/awt/java2d/ScanlineCoverage.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fjava2d%2FScanlineCoverage.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fjava2d%2FScanlineCoverage.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fjava2d%2FScanlineCoverage.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -157,7 +157,7 @@ void reset()\n    * A data object that carries information about pixel coverage on a scanline.\n    * The data consists of a starting X position on the scanline, the\n    * length of the range in pixels and the actual coverage value.\n-\u00b4  */\n+   **/\n   public static final class Range\n   {\n     /**"}, {"sha": "f4e77f450d0c666a94c1bd7fc381c11882dd4216", "filename": "libjava/classpath/gnu/java/awt/java2d/ShapeWrapper.java", "status": "added", "additions": 119, "deletions": 0, "changes": 119, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fjava2d%2FShapeWrapper.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fjava2d%2FShapeWrapper.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fjava2d%2FShapeWrapper.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -0,0 +1,119 @@\n+/* ShapeWrapper.java -- Protects shapes by wrapping them\n+   Copyright (C) 2007 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+package gnu.java.awt.java2d;\n+\n+import java.awt.Rectangle;\n+import java.awt.Shape;\n+import java.awt.geom.AffineTransform;\n+import java.awt.geom.PathIterator;\n+import java.awt.geom.Point2D;\n+import java.awt.geom.Rectangle2D;\n+\n+/**\n+ * Protects any other shape from beeing modified by wrapping it.\n+ */\n+public class ShapeWrapper\n+  implements Shape\n+{\n+\n+  /**\n+   * The shape to be protected.\n+   */\n+  private Shape shape;\n+\n+  /**\n+   * Creates a new ShapeWrapper.\n+   *\n+   * @param other the shape to be protected\n+   */\n+  public ShapeWrapper(Shape other)\n+  {\n+    shape = other;\n+  }\n+\n+  public boolean contains(double x, double y)\n+  {\n+    return shape.contains(x, y);\n+  }\n+\n+  public boolean contains(Point2D p)\n+  {\n+    return shape.contains(p);\n+  }\n+\n+  public boolean contains(double x, double y, double w, double h)\n+  {\n+    return shape.contains(x, y, w, h);\n+  }\n+\n+  public boolean contains(Rectangle2D r)\n+  {\n+    return shape.contains(r);\n+  }\n+\n+  public Rectangle getBounds()\n+  {\n+    return shape.getBounds();\n+  }\n+\n+  public Rectangle2D getBounds2D()\n+  {\n+    return shape.getBounds2D();\n+  }\n+\n+  public PathIterator getPathIterator(AffineTransform transform)\n+  {\n+    return shape.getPathIterator(transform);\n+  }\n+\n+  public PathIterator getPathIterator(AffineTransform transform, double flatness)\n+  {\n+    return shape.getPathIterator(transform, flatness);\n+  }\n+\n+  public boolean intersects(double x, double y, double w, double h)\n+  {\n+    return shape.intersects(x, y, w, h);\n+  }\n+\n+  public boolean intersects(Rectangle2D r)\n+  {\n+    return shape.intersects(r);\n+  }\n+\n+}"}, {"sha": "0a60c622676a5ed705e3906658db9edfa47d82ec", "filename": "libjava/classpath/gnu/java/awt/java2d/TextCacheKey.java", "status": "added", "additions": 153, "deletions": 0, "changes": 153, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fjava2d%2FTextCacheKey.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fjava2d%2FTextCacheKey.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fjava2d%2FTextCacheKey.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -0,0 +1,153 @@\n+/* TextCacheKey.java -- Key to use for caching texts with their rendered layout\n+   Copyright (C) 2007 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+package gnu.java.awt.java2d;\n+\n+import java.awt.Font;\n+import java.awt.font.FontRenderContext;\n+\n+/**\n+ * A key object to be used when caching pre-rendered text.\n+ */\n+public class TextCacheKey\n+{\n+\n+  /**\n+   * The actual string.\n+   */\n+  private String string;\n+\n+  /**\n+   * The font render context.\n+   */\n+  private FontRenderContext fontRenderContext;\n+\n+  /**\n+   * The font.\n+   */\n+  private Font font;\n+\n+  /**\n+   * Creates a new TextCacheKey.\n+   *\n+   * This is intended to be used as search key. It is important to initialize\n+   * the values using the setter methods before using this key, otherwise\n+   * it will throw NPEs.\n+   */\n+  public TextCacheKey()\n+  {\n+    // No-arg constructor.\n+  }\n+\n+  /**\n+   * Creates a new TextCacheKey with initial values.\n+   *\n+   * @param s the string\n+   * @param f the font\n+   * @param frc the font render context\n+   */\n+  public TextCacheKey(String s, Font f, FontRenderContext frc)\n+  {\n+    string = s;\n+    font = f;\n+    fontRenderContext = frc;\n+  }\n+\n+  /**\n+   * Re-sets the string. This is intented to be used in search keys only.\n+   *\n+   * @param s the string to set\n+   */\n+  public void setString(String s)\n+  {\n+    string = s;\n+  }\n+\n+  /**\n+   * Sets the font render context.\n+   * This is intented to be used in search keys only.\n+   *\n+   * @param frc the new font render context\n+   */\n+  public void setFontRenderContext(FontRenderContext frc)\n+  {\n+    fontRenderContext = frc;\n+  }\n+\n+  /**\n+   * Sets the font.\n+   * This is intented to be used in search keys only.\n+   *\n+   * @param f the font to set\n+   */\n+  public void setFont(Font f)\n+  {\n+    font = f;\n+  }\n+\n+  /**\n+   * Determines if two objects are equal.\n+   *\n+   * @see Object#equals(Object)\n+   */\n+  public boolean equals(Object o)\n+  {\n+    boolean eq;\n+    if (o instanceof TextCacheKey)\n+      {\n+        TextCacheKey other = (TextCacheKey) o;\n+        eq = other.string.equals(string)\n+             && other.font.equals(font)\n+             && other.fontRenderContext.equals(fontRenderContext);\n+      }\n+    else\n+      {\n+        eq = false;\n+      }\n+    return eq;\n+  }\n+\n+  /**\n+   * Computes a hashcode for this key.\n+   *\n+   * @see Object#hashCode()\n+   */\n+  public int hashCode()\n+  {\n+    return string.hashCode() ^ font.hashCode() ^ fontRenderContext.hashCode();\n+  }\n+}"}, {"sha": "30dd89ba7b2539ea3f88815066620dd9c1ef1762", "filename": "libjava/classpath/gnu/java/awt/peer/KDEDesktopPeer.java", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2FKDEDesktopPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2FKDEDesktopPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2FKDEDesktopPeer.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -37,10 +37,8 @@\n \n package gnu.java.awt.peer;\n \n-import java.io.File;\n import java.io.IOException;\n import java.io.InputStream;\n-import java.net.URI;\n \n /**\n  * @author Mario Torre <neugens@limasoftware.net>"}, {"sha": "fcd3f6acd92bb3d159351bcff81a150ec69bd1f2", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/CairoGraphics2D.java", "status": "modified", "additions": 13, "deletions": 7, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FCairoGraphics2D.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FCairoGraphics2D.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FCairoGraphics2D.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -38,6 +38,8 @@\n \n package gnu.java.awt.peer.gtk;\n \n+import gnu.classpath.Configuration;\n+\n import gnu.java.awt.ClasspathToolkit;\n \n import java.awt.AWTPermission;\n@@ -120,7 +122,10 @@ public abstract class CairoGraphics2D extends Graphics2D\n {\n   static \n   {\n-    System.loadLibrary(\"gtkpeer\");\n+    if (Configuration.INIT_LOAD_LIBRARY)\n+      {\n+        System.loadLibrary(\"gtkpeer\");\n+      }\n   }\n \n   /**\n@@ -222,7 +227,7 @@ public CairoGraphics2D()\n \n   /**\n    * Sets up the default values and allocates the native cairographics2d structure\n-   * @param cairo_t_pointer, a native pointer to a cairo_t of the context.\n+   * @param cairo_t_pointer a native pointer to a cairo_t of the context.\n    */\n   public void setup(long cairo_t_pointer)\n   { \n@@ -341,7 +346,8 @@ protected abstract void copyAreaImpl(int x, int y, int width, int height,\n \n   /**\n    * Draw pixels as an RGBA int matrix\n-   * @param w, h - width and height\n+   * @param w - width\n+   * @param h - height\n    * @param stride - stride of the array width\n    * @param i2u - affine transform array\n    */\n@@ -2113,10 +2119,10 @@ private void updateClip(AffineTransform t)\n   private static Rectangle computeIntersection(int x, int y, int w, int h,\n                                                Rectangle rect)\n   {\n-    int x2 = (int) rect.x;\n-    int y2 = (int) rect.y;\n-    int w2 = (int) rect.width;\n-    int h2 = (int) rect.height;\n+    int x2 = rect.x;\n+    int y2 = rect.y;\n+    int w2 = rect.width;\n+    int h2 = rect.height;\n \n     int dx = (x > x2) ? x : x2;\n     int dy = (y > y2) ? y : y2;"}, {"sha": "6c8a30d1143c5ee76e5fef2ab41f63ee662c5a88", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/CairoSurface.java", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FCairoSurface.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FCairoSurface.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FCairoSurface.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -43,9 +43,7 @@\n import java.awt.Graphics2D;\n import java.awt.Point;\n import java.awt.Rectangle;\n-import java.awt.Shape;\n import java.awt.color.ColorSpace;\n-import java.awt.geom.AffineTransform;\n import java.awt.image.BufferedImage;\n import java.awt.image.ColorModel;\n import java.awt.image.DataBuffer;\n@@ -102,7 +100,8 @@ public class CairoSurface extends WritableRaster\n                                                           0x000000FF);\n   /**\n    * Allocates and clears the buffer and creates the cairo surface.\n-   * @param width, height - the image size\n+   * @param width - the image size\n+   * @param height - the image size\n    * @param stride - the buffer row stride. (in ints)\n    */\n   private native void create(int width, int height, int stride, int[] buf);"}, {"sha": "bfa3bc96ac30a41653e7967057a43e9940fa00bd", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/ComponentGraphics.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FComponentGraphics.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FComponentGraphics.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FComponentGraphics.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -153,7 +153,7 @@ else if (i.intValue() == 2)\n   /**\n    * Creates a cairo_t for a volatile image\n    */\n-  protected native long initFromVolatile( long pixmapPtr, int width, int height);\n+  protected native long initFromVolatile( long pixmapPtr);\n \n   /**\n    * Grab lock\n@@ -938,4 +938,4 @@ protected void drawCairoSurface(CairoSurface surface, AffineTransform tx,\n       unlock();\n     }\n   }\n-}\n\\ No newline at end of file\n+}"}, {"sha": "403671cc63e15f171a437586422301deeb98df00", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/GdkFontPeer.java", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkFontPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkFontPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkFontPeer.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -38,6 +38,7 @@\n \n package gnu.java.awt.peer.gtk;\n \n+import gnu.classpath.Configuration;\n import gnu.classpath.Pointer;\n \n import gnu.java.awt.ClasspathToolkit;\n@@ -166,7 +167,10 @@ public int getMaxAdvance ()\n \n   static \n   {\n-    System.loadLibrary(\"gtkpeer\");\n+    if (Configuration.INIT_LOAD_LIBRARY)\n+      {\n+        System.loadLibrary(\"gtkpeer\");\n+      }\n \n     initStaticState ();\n "}, {"sha": "980866c4b67ccebae4f938485f2e0c24218ab582", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/GdkGraphicsEnvironment.java", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkGraphicsEnvironment.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkGraphicsEnvironment.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkGraphicsEnvironment.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -38,6 +38,7 @@\n \n package gnu.java.awt.peer.gtk;\n \n+import gnu.classpath.Configuration;\n import gnu.java.awt.ClasspathGraphicsEnvironment;\n \n import java.awt.Font;\n@@ -72,7 +73,10 @@ public class GdkGraphicsEnvironment extends ClasspathGraphicsEnvironment\n \n   static\n   {\n-    System.loadLibrary(\"gtkpeer\");\n+    if (Configuration.INIT_LOAD_LIBRARY)\n+      {\n+        System.loadLibrary(\"gtkpeer\");\n+      }\n \n     GtkToolkit.initializeGlobalIDs();\n     initIDs();"}, {"sha": "dbf4a2018c1805d2bc81e332af593914b72e32af", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/GdkPixbufDecoder.java", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkPixbufDecoder.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkPixbufDecoder.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkPixbufDecoder.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -68,13 +68,17 @@\n import javax.imageio.stream.ImageInputStream;\n import javax.imageio.stream.ImageOutputStream;\n \n+import gnu.classpath.Configuration;\n import gnu.classpath.Pointer;\n \n public class GdkPixbufDecoder extends gnu.java.awt.image.ImageDecoder\n {\n   static \n   {\n-    System.loadLibrary(\"gtkpeer\");\n+    if (Configuration.INIT_LOAD_LIBRARY)\n+      {\n+        System.loadLibrary(\"gtkpeer\");\n+      }\n \n     initStaticState ();\n   }"}, {"sha": "9ce0b96dac3c3bc6df98c6cdaaa38f2bd12a132b", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/GdkScreenGraphicsDevice.java", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkScreenGraphicsDevice.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkScreenGraphicsDevice.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkScreenGraphicsDevice.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -46,6 +46,7 @@\n import java.awt.Window;\n import java.util.ArrayList;\n \n+import gnu.classpath.Configuration;\n import gnu.classpath.Pointer;\n \n class GdkScreenGraphicsDevice extends GraphicsDevice\n@@ -98,7 +99,11 @@ class GdkScreenGraphicsDevice extends GraphicsDevice\n \n   static\n   {\n-    System.loadLibrary(\"gtkpeer\");\n+    if (Configuration.INIT_LOAD_LIBRARY)\n+      {\n+        System.loadLibrary(\"gtkpeer\");\n+      }\n+\n     GtkToolkit.initializeGlobalIDs();\n     initIDs();\n   }"}, {"sha": "4b8fc128cb761f4a64882fa5b31447129074953a", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/GtkComponentPeer.java", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkComponentPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkComponentPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkComponentPeer.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -105,7 +105,9 @@ public class GtkComponentPeer extends GtkGenericPeer\n   native void gtkWidgetGetDimensions (int[] dim);\n   native void gtkWidgetGetPreferredDimensions (int[] dim);\n   native void gtkWindowGetLocationOnScreen (int[] point);\n+  native void gtkWindowGetLocationOnScreenUnlocked (int[] point);\n   native void gtkWidgetGetLocationOnScreen (int[] point);\n+  native void gtkWidgetGetLocationOnScreenUnlocked (int[] point);\n   native void gtkWidgetSetCursor (int type, GtkImage image, int x, int y);\n   native void gtkWidgetSetCursorUnlocked (int type, GtkImage image,\n                                           int x, int y);\n@@ -250,7 +252,10 @@ public Graphics getGraphics ()\n   public Point getLocationOnScreen () \n   { \n     int point[] = new int[2];\n-    gtkWidgetGetLocationOnScreen (point);\n+    if (Thread.currentThread() == GtkMainThread.mainThread)\n+        gtkWidgetGetLocationOnScreenUnlocked (point);\n+    else\n+        gtkWidgetGetLocationOnScreen (point);\n     return new Point (point[0], point[1]);\n   }\n "}, {"sha": "87dbd5e0f56b6c403f7545c92961d57257667849", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/GtkFramePeer.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkFramePeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkFramePeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkFramePeer.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -87,7 +87,7 @@ else if (bar != null && menuBar == null)\n       {\n         // We're adding a menubar where there was no menubar before.\n         gtkFixedSetVisible (false);\n-        menuBar = (MenuBarPeer) ((MenuBar) bar).getPeer();\n+        menuBar = (MenuBarPeer) bar.getPeer();\n         setMenuBarPeer (menuBar);\n         int menuBarWidth =\n           awtComponent.getWidth () - insets.left - insets.right;\n@@ -109,7 +109,7 @@ else if (bar != null && menuBar != null)\n         int oldHeight = menuBarHeight;\n         int menuBarWidth =\n           awtComponent.getWidth () - insets.left - insets.right;\n-        menuBar = (MenuBarPeer) ((MenuBar) bar).getPeer ();\n+        menuBar = (MenuBarPeer) bar.getPeer ();\n         setMenuBarPeer (menuBar);\n         if (menuBarWidth > 0)\n           setMenuBarWidth (menuBar, menuBarWidth);"}, {"sha": "0ee61df84b7ebaf7a55628a6c3723de5916b38e3", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/GtkMainThread.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkMainThread.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkMainThread.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkMainThread.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -134,7 +134,7 @@ private static void startMainThread()\n                   }\n               }\n             GtkGenericPeer.q()\n-              .postEvent(new NativeEventLoopRunningEvent(new Boolean(true)));\n+              .postEvent(new NativeEventLoopRunningEvent(Boolean.TRUE));\n           }\n       }\n   }\n@@ -161,7 +161,7 @@ private static void endMainThread()\n                   }\n               }\n             GtkGenericPeer.q()\n-              .postEvent(new NativeEventLoopRunningEvent(new Boolean(false)));\n+              .postEvent(new NativeEventLoopRunningEvent(Boolean.FALSE));\n             }\n       }\n   }"}, {"sha": "486304ef010196911afbb2f092e53957379e6d35", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/GtkToolkit.java", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkToolkit.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkToolkit.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkToolkit.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -39,6 +39,8 @@\n \n package gnu.java.awt.peer.gtk;\n \n+import gnu.classpath.Configuration;\n+\n import gnu.java.awt.AWTUtilities;\n import gnu.java.awt.EmbeddedWindow;\n import gnu.java.awt.dnd.GtkMouseDragGestureRecognizer;\n@@ -170,7 +172,10 @@ static synchronized void initializeGlobalIDs()\n \n   static\n   {\n-    System.loadLibrary(\"gtkpeer\");\n+    if (Configuration.INIT_LOAD_LIBRARY)\n+      {\n+        System.loadLibrary(\"gtkpeer\");\n+      }\n \n     /**\n      * Gotta do that first."}, {"sha": "9744c3a532ece2b9d3d1d2b2da8bc2d95387505e", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/GtkWindowPeer.java", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkWindowPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkWindowPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkWindowPeer.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -396,7 +396,10 @@ protected void postMouseEvent(int id, long when, int mods, int x, int y,\n   public Point getLocationOnScreen()\n   {\n     int point[] = new int[2];\n-    gtkWindowGetLocationOnScreen(point);\n+    if (Thread.currentThread() == GtkMainThread.mainThread)\n+      gtkWindowGetLocationOnScreenUnlocked(point);\n+    else\n+      gtkWindowGetLocationOnScreen(point);\n     return new Point(point[0], point[1]);\n   }\n "}, {"sha": "b5858f905954f467714e1a08e2987fd725f40706", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/VolatileImageGraphics.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FVolatileImageGraphics.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FVolatileImageGraphics.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FVolatileImageGraphics.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -68,14 +68,14 @@ public class VolatileImageGraphics extends ComponentGraphics\n   public VolatileImageGraphics(GtkVolatileImage img)\n   {\n     this.owner = img;\n-    cairo_t = initFromVolatile( owner.nativePointer, img.width, img.height );\n+    cairo_t = initFromVolatile( owner.nativePointer );\n     setup( cairo_t );\n   }\n \n   private VolatileImageGraphics(VolatileImageGraphics copy)\n   {\n     this.owner = copy.owner;\n-    cairo_t = initFromVolatile(owner.nativePointer, owner.width, owner.height);\n+    cairo_t = initFromVolatile(owner.nativePointer);\n     copy( copy, cairo_t );\n   }\n "}, {"sha": "87324c7104314be8dc6dbea4ab570c388f521061", "filename": "libjava/classpath/gnu/java/awt/peer/qt/QtMenuPeer.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fqt%2FQtMenuPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fqt%2FQtMenuPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fqt%2FQtMenuPeer.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -74,7 +74,7 @@ void addItems()\n \tMenu o = (Menu)owner;\n \tfor( int i=0; i < o.getItemCount(); i++ )\n \t  {\n-\t    MenuItem ci = (MenuItem)o.getItem(i);\n+\t    MenuItem ci = o.getItem(i);\n \t    if (ci instanceof Menu && ci.getPeer() != null)\n \t      ((QtMenuPeer)ci.getPeer()).addItems();\n \t    addItem( ci );"}, {"sha": "03d6388e9f22a60e2e78e6de87a9307789b48673", "filename": "libjava/classpath/gnu/java/awt/peer/swing/SwingCheckboxPeer.java", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fswing%2FSwingCheckboxPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fswing%2FSwingCheckboxPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fswing%2FSwingCheckboxPeer.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -37,16 +37,12 @@\n \n package gnu.java.awt.peer.swing;\n \n-import java.awt.Button;\n import java.awt.Checkbox;\n import java.awt.CheckboxGroup;\n import java.awt.Container;\n import java.awt.Graphics;\n import java.awt.Image;\n-import java.awt.Label;\n import java.awt.Point;\n-import java.awt.event.ActionEvent;\n-import java.awt.event.ActionListener;\n import java.awt.event.FocusEvent;\n import java.awt.event.ItemEvent;\n import java.awt.event.ItemListener;\n@@ -56,7 +52,6 @@\n \n import javax.swing.JCheckBox;\n import javax.swing.JComponent;\n-import javax.swing.JLabel;\n import javax.swing.JToggleButton;\n \n /**"}, {"sha": "0033efb025f7a096bcb5153929e9fd3f3b1a5070", "filename": "libjava/classpath/gnu/java/awt/peer/swing/SwingMenuBarPeer.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fswing%2FSwingMenuBarPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fswing%2FSwingMenuBarPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fswing%2FSwingMenuBarPeer.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -174,7 +174,7 @@ public void addMenu(Menu m)\n   /**\n    * Adds a help menu to the menu bar.\n    *\n-   * @param m the menu to add\n+   * @param menu the menu to add\n    */\n   public void addHelpMenu(Menu menu)\n   {"}, {"sha": "5be82f6959321b0309d2a40e7bc799f3d8f3b77b", "filename": "libjava/classpath/gnu/java/awt/peer/swing/SwingTextAreaPeer.java", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fswing%2FSwingTextAreaPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fswing%2FSwingTextAreaPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fswing%2FSwingTextAreaPeer.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -37,7 +37,6 @@\n \n package gnu.java.awt.peer.swing;\n \n-import java.awt.Component;\n import java.awt.Container;\n import java.awt.Dimension;\n import java.awt.Graphics;"}, {"sha": "28dc5f339bf718df599b1ca9b3e4d72b53a83821", "filename": "libjava/classpath/gnu/java/awt/peer/swing/SwingTextFieldPeer.java", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fswing%2FSwingTextFieldPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fswing%2FSwingTextFieldPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fswing%2FSwingTextFieldPeer.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -36,7 +36,6 @@\n exception statement from your version. */\n package gnu.java.awt.peer.swing;\n \n-import java.awt.Component;\n import java.awt.Container;\n import java.awt.Dimension;\n import java.awt.Graphics;\n@@ -328,7 +327,7 @@ public void setText(String text)\n    * @param startPos the start index of the selection\n    * @param endPos the start index of the selection\n    */\n-  public void select(int start_pos, int endPos)\n+  public void select(int startPos, int endPos)\n   {\n     // TODO: Must be implemented.\n   }"}, {"sha": "6d32448eececa02dbb5167b57594124198216269", "filename": "libjava/classpath/gnu/java/awt/peer/x/ImageConverter.java", "status": "removed", "additions": 0, "deletions": 113, "changes": 113, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15c151967dd1cde61b79d26374f608f63a29d411/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fx%2FImageConverter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15c151967dd1cde61b79d26374f608f63a29d411/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fx%2FImageConverter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fx%2FImageConverter.java?ref=15c151967dd1cde61b79d26374f608f63a29d411", "patch": "@@ -1,113 +0,0 @@\n-/* ImageConverter.java -- Convert arbitrary Image impl to XImage\n-   Copyright (C) 2006 Free Software Foundation, Inc.\n-\n-This file is part of GNU Classpath.\n-\n-GNU Classpath is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU Classpath is distributed in the hope that it will be useful, but\n-WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n-General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU Classpath; see the file COPYING.  If not, write to the\n-Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n-02110-1301 USA.\n-\n-Linking this library statically or dynamically with other modules is\n-making a combined work based on this library.  Thus, the terms and\n-conditions of the GNU General Public License cover the whole\n-combination.\n-\n-As a special exception, the copyright holders of this library give you\n-permission to link this library with independent modules to produce an\n-executable, regardless of the license terms of these independent\n-modules, and to copy and distribute the resulting executable under\n-terms of your choice, provided that you also meet, for each linked\n-independent module, the terms and conditions of the license of that\n-module.  An independent module is a module which is not derived from\n-or based on this library.  If you modify this library, you may extend\n-this exception to your version of the library, but you are not\n-obligated to do so.  If you do not wish to do so, delete this\n-exception statement from your version. */\n-\n-package gnu.java.awt.peer.x;\n-\n-import java.awt.Color;\n-import java.awt.Graphics;\n-import java.awt.image.ColorModel;\n-import java.awt.image.ImageConsumer;\n-import java.util.Hashtable;\n-\n-/**\n- * Convert a non-XImage to an XImage.\n- * \n- * @author Roman Kennke (kennke@aicas.com)\n- */\n-public class ImageConverter implements ImageConsumer\n-{\n-\n-  private XImage image;\n-  private Graphics imageGraphics;\n-\n-  public void setDimensions(int width, int height)\n-  {\n-    image = new XImage(width, height);\n-  }\n-\n-  public void setProperties(Hashtable props)\n-  {\n-    // Ignore for now.\n-  }\n-\n-  public void setColorModel(ColorModel model)\n-  {\n-    // Ignore for now.\n-  }\n-\n-  public void setHints(int flags)\n-  {\n-    // Ignore for now.\n-  }\n-\n-  public void setPixels(int x, int y, int w, int h, ColorModel model,\n-                        byte[] pixels, int offset, int scansize)\n-  {\n-    // FIXME: Implement this.\n-    throw new UnsupportedOperationException(\"Not yet implemented\");\n-  }\n-\n-  public void setPixels(int x, int y, int w, int h, ColorModel model,\n-                        int[] pixels, int offset, int scansize)\n-  {\n-    System.err.println(\"transferType: \" + model.getTransferType());\n-    System.err.println(\"colorModel: \" + model);\n-    if (imageGraphics == null)\n-      imageGraphics = image.getGraphics();\n-    int xend = x + w;\n-    int yend = y + h;\n-    for (int yy = y; yy < yend; yy++)\n-      {\n-        for (int xx = x; xx < xend; xx++)\n-          {\n-            int pixel = pixels[yy * scansize + xx + offset];\n-            imageGraphics.setColor(new Color(model.getRGB(pixel)));\n-            imageGraphics.fillRect(xx, yy, 1, 1);\n-          }\n-      }\n-  }\n-\n-  public void imageComplete(int status)\n-  {\n-    // Nothing to do here.\n-  }\n-\n-  XImage getXImage()\n-  {\n-    return image;\n-  }\n-}"}, {"sha": "7f9843533168c6ba2d3f9b8b54bb1d3d13a30fc8", "filename": "libjava/classpath/gnu/java/awt/peer/x/XEventPump.java", "status": "modified", "additions": 12, "deletions": 5, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fx%2FXEventPump.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fx%2FXEventPump.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fx%2FXEventPump.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -39,6 +39,7 @@\n package gnu.java.awt.peer.x;\n \n import java.awt.Graphics;\n+import java.awt.Insets;\n import java.awt.Rectangle;\n import java.awt.Toolkit;\n import java.awt.Window;\n@@ -223,16 +224,21 @@ private void handleEvent(Event xEvent)\n         System.err.println(\"resize request for window id: \" + key);\n \n       // Detect and report size changes.\n-      if (c.width() != awtWindow.getWidth()\n-          || c.height() != awtWindow.getHeight())\n+      XWindowPeer xwindow = (XWindowPeer) awtWindow.getPeer();\n+      Insets i = xwindow.insets();\n+      if (c.width() != awtWindow.getWidth() - i.left - i.right\n+          || c.height() != awtWindow.getHeight() - i.top - i.bottom)\n         {\n           if (XToolkit.DEBUG)\n             System.err.println(\"Setting size on AWT window: \" + c.width()\n                              + \", \" + c.height() + \", \" + awtWindow.getWidth()\n                              + \", \" + awtWindow.getHeight());\n-          ((XWindowPeer) awtWindow.getPeer()).callback = true;\n-          awtWindow.setSize(c.width(), c.height());\n-          ((XWindowPeer) awtWindow.getPeer()).callback = false;\n+          xwindow.callback = true;\n+          xwindow.xwindow.width = c.width();\n+          xwindow.xwindow.height = c.height();\n+          awtWindow.setSize(c.width() + i.left + i.right,\n+                            c.height() + i.top + i.bottom);\n+          xwindow.callback = false;\n         }\n       break;\n     case Expose.CODE:\n@@ -245,6 +251,7 @@ private void handleEvent(Event xEvent)\n                                   exp.height());\n       //System.err.println(\"expose paint: \" + r);\n       // We need to clear the background of the exposed rectangle.\n+      assert awtWindow != null : \"awtWindow == null for window ID: \" + key;\n       Graphics g = awtWindow.getGraphics();\n       g.clearRect(r.x, r.y, r.width, r.height);\n       g.dispose();"}, {"sha": "0a96a613b4e3d624b57b261aa5fd2184f6f084cf", "filename": "libjava/classpath/gnu/java/awt/peer/x/XFontPeer.java", "status": "added", "additions": 768, "deletions": 0, "changes": 768, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fx%2FXFontPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fx%2FXFontPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fx%2FXFontPeer.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -0,0 +1,768 @@\n+/* XFontPeer.java -- The font peer for X\n+   Copyright (C) 2006 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package gnu.java.awt.peer.x;\n+\n+import java.awt.AWTError;\n+import java.awt.Font;\n+import java.awt.FontMetrics;\n+import java.awt.GraphicsDevice;\n+import java.awt.GraphicsEnvironment;\n+import java.awt.font.FontRenderContext;\n+import java.awt.font.GlyphVector;\n+import java.awt.font.LineMetrics;\n+import java.awt.font.TextAttribute;\n+import java.awt.geom.Rectangle2D;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.text.CharacterIterator;\n+import java.util.HashMap;\n+import java.util.Iterator;\n+import java.util.Locale;\n+import java.util.Map;\n+import java.util.Properties;\n+\n+import gnu.java.awt.peer.ClasspathFontPeer;\n+import gnu.x11.Display;\n+import gnu.x11.Fontable;\n+\n+/**\n+ * The bridge from AWT to X fonts.\n+ *\n+ * @author Roman Kennke (kennke@aicas.com)\n+ */\n+public class XFontPeer\n+  extends ClasspathFontPeer\n+{\n+\n+  /**\n+   * The font mapping as specified in the file fonts.properties.\n+   */\n+  private static Properties fontProperties;\n+  static\n+  {\n+    fontProperties = new Properties();\n+    InputStream in = XFontPeer.class.getResourceAsStream(\"xfonts.properties\");\n+    try\n+      {\n+        fontProperties.load(in);\n+      }\n+    catch (IOException e)\n+      {\n+        e.printStackTrace();\n+      }\n+  }\n+\n+  /**\n+   * The FontMetrics implementation for XFontPeer.\n+   */\n+  private class XFontMetrics\n+    extends FontMetrics\n+  {\n+    /**\n+     * The ascent of the font.\n+     */ \n+    int ascent;\n+\n+    /**\n+     * The descent of the font.\n+     */ \n+    int descent;\n+\n+    /**\n+     * The maximum of the character advances.\n+     */\n+    private int maxAdvance;\n+\n+    /**\n+     * The internal leading.\n+     */\n+    int leading;\n+\n+    /**\n+     * Cached string metrics. This caches string metrics locally so that the\n+     * server doesn't have to be asked each time.\n+     */\n+    private HashMap metricsCache;\n+\n+    /**\n+     * The widths of the characters indexed by the characters themselves.\n+     */\n+    private int[] charWidths;\n+\n+    /**\n+     * Creates a new XFontMetrics for the specified font.\n+     *\n+     * @param font the font\n+     */\n+    protected XFontMetrics(Font font)\n+    {\n+      super(font);\n+      metricsCache = new HashMap();\n+      Fontable.FontInfo info = getXFont().info();\n+      ascent = info.font_ascent();\n+      descent = info.font_descent();\n+      maxAdvance = info.max_bounds().character_width();\n+      leading = 0; // TODO: Not provided by X. Possible not needed.\n+\n+      if (info.min_byte1() == 0 && info.max_byte1() == 0)\n+        readCharWidthsLinear(info);\n+      else\n+        readCharWidthsNonLinear(info);\n+    }\n+\n+    /**\n+     * Reads the character widths when specified in a linear fashion. That is\n+     * when the min-byte1 and max-byte2 fields are both zero in the X protocol.\n+     *\n+     * @param info the font info reply\n+     */\n+    private void readCharWidthsLinear(Fontable.FontInfo info)\n+    {\n+      int startIndex = info.min_char_or_byte2();\n+      int endIndex = info.max_char_or_byte2();\n+      charWidths = new int[endIndex + 1];\n+      // All the characters before startIndex are zero width.\n+      for (int i = 0; i < startIndex; i++)\n+        {\n+          charWidths[i] = 0;\n+        }\n+      // All the other character info is fetched from the font info.\n+      int index = startIndex;\n+      Fontable.FontInfo.CharInfo[] charInfos = info.char_infos();\n+      for (Fontable.FontInfo.CharInfo charInfo : charInfos)\n+        {\n+          charWidths[index] = charInfo.character_width();\n+          index++;\n+        }\n+    }\n+\n+    private void readCharWidthsNonLinear(Fontable.FontInfo info)\n+    {\n+      // TODO: Implement.\n+      throw new UnsupportedOperationException(\"Not yet implemented\");\n+    }\n+\n+    /**\n+     * Returns the ascent of the font.\n+     *\n+     * @return the ascent of the font\n+     */\n+    public int getAscent()\n+    {\n+      return ascent;\n+    }\n+\n+    /**\n+     * Returns the descent of the font.\n+     *\n+     * @return the descent of the font\n+     */\n+    public int getDescent()\n+    {\n+      return descent;\n+    }\n+\n+    /**\n+     * Returns the overall height of the font. This is the distance from\n+     * baseline to baseline (usually ascent + descent + leading).\n+     *\n+     * @return the overall height of the font\n+     */\n+    public int getHeight()\n+    {\n+      return ascent + descent;\n+    }\n+\n+    /**\n+     * Returns the leading of the font.\n+     *\n+     * @return the leading of the font\n+     */\n+    public int getLeading()\n+    {\n+      return leading;\n+    }\n+\n+    /**\n+     * Returns the maximum advance for this font.\n+     *\n+     * @return the maximum advance for this font\n+     */\n+    public int getMaxAdvance()\n+    {\n+      return maxAdvance;\n+    }\n+\n+    /**\n+     * Determines the width of the specified character <code>c</code>.\n+     *\n+     * @param c the character\n+     *\n+     * @return the width of the character\n+     */\n+    public int charWidth(char c)\n+    {\n+      int width;\n+      if (c > charWidths.length)\n+        width = charWidths['?'];\n+      else\n+        width = charWidths[c];\n+      return width;\n+    }\n+\n+    /**\n+     * Determines the overall width of the specified string.\n+     *\n+     * @param c the char buffer holding the string\n+     * @param offset the starting offset of the string in the buffer\n+     * @param length the number of characters in the string buffer \n+     *\n+     * @return the overall width of the specified string\n+     */\n+    public int charsWidth(char[] c, int offset, int length)\n+    {\n+      int width = 0;\n+      if (c.length > 0 && length > 0)\n+        {\n+          String s = new String(c, offset, length);\n+          width = stringWidth(s);\n+        }\n+      return width;\n+    }\n+\n+    /**\n+     * Determines the overall width of the specified string.\n+     *\n+     * @param s the string\n+     *\n+     * @return the overall width of the specified string\n+     */\n+    public int stringWidth(String s)\n+    {\n+      int width = 0;\n+      if (s.length() > 0)\n+        {\n+          if (metricsCache.containsKey(s))\n+            {\n+              width = ((Integer) metricsCache.get(s)).intValue();\n+            }\n+          else\n+            {\n+              Fontable.TextExtentInfo extents = getXFont().text_extent(s);\n+              /*\n+               System.err.println(\"string: '\" + s + \"' : \");\n+               System.err.println(\"ascent: \" + extents.getAscent());\n+               System.err.println(\"descent: \" + extents.getDescent());\n+               System.err.println(\"overall ascent: \" + extents.getOverallAscent());\n+               System.err.println(\"overall descent: \" + extents.getOverallDescent());\n+               System.err.println(\"overall width: \" + extents.getOverallWidth());\n+               System.err.println(\"overall left: \" + extents.getOverallLeft());\n+               System.err.println(\"overall right: \" + extents.getOverallRight());\n+               */\n+              width = extents.overall_width(); // + extents.overall_left();\n+              //System.err.println(\"String: \" + s + \", width: \" + width);\n+              metricsCache.put(s, new Integer(width));\n+            }\n+        }\n+      //System.err.print(\"stringWidth: '\" + s + \"': \");\n+      //System.err.println(width);\n+      return width;\n+    }\n+  }\n+\n+  /**\n+   * The LineMetrics implementation for the XFontPeer.\n+   */\n+  private class XLineMetrics\n+    extends LineMetrics\n+  {\n+\n+    /**\n+     * Returns the ascent of the font.\n+     *\n+     * @return the ascent of the font\n+     */\n+    public float getAscent()\n+    {\n+      return fontMetrics.ascent;\n+    }\n+\n+    public int getBaselineIndex()\n+    {\n+      // FIXME: Implement this.\n+      throw new UnsupportedOperationException();\n+    }\n+\n+    public float[] getBaselineOffsets()\n+    {\n+      // FIXME: Implement this.\n+      throw new UnsupportedOperationException();\n+    }\n+\n+    /**\n+     * Returns the descent of the font.\n+     *\n+     * @return the descent of the font\n+     */\n+    public float getDescent()\n+    {\n+      return fontMetrics.descent;\n+    }\n+\n+    /**\n+     * Returns the overall height of the font. This is the distance from\n+     * baseline to baseline (usually ascent + descent + leading).\n+     *\n+     * @return the overall height of the font\n+     */\n+    public float getHeight()\n+    {\n+      return fontMetrics.ascent + fontMetrics.descent;\n+    }\n+\n+    /**\n+     * Returns the leading of the font.\n+     *\n+     * @return the leading of the font\n+     */\n+    public float getLeading()\n+    {\n+      return fontMetrics.leading;\n+    }\n+\n+    public int getNumChars()\n+    {\n+      // FIXME: Implement this.\n+      throw new UnsupportedOperationException();\n+    }\n+\n+    public float getStrikethroughOffset()\n+    {\n+      return 0.F; // TODO: Provided by X??\n+    }\n+\n+    public float getStrikethroughThickness()\n+    {\n+      return 1.F; // TODO: Provided by X??\n+    }\n+\n+    public float getUnderlineOffset()\n+    {\n+      return 0.F; // TODO: Provided by X??\n+    }\n+\n+    public float getUnderlineThickness()\n+    {\n+      return 1.F; // TODO: Provided by X??\n+    }\n+      \n+  }\n+\n+  /**\n+   * The X font.\n+   */\n+  private gnu.x11.Font xfont;\n+\n+  private String name;\n+\n+  private int style;\n+\n+  private int size;\n+\n+  /**\n+   * The font metrics for this font.\n+   */\n+  XFontMetrics fontMetrics; \n+\n+  /**\n+   * Creates a new XFontPeer for the specified font name, style and size.\n+   *\n+   * @param name the font name\n+   * @param style the font style (bold / italic / normal)\n+   * @param size the size of the font\n+   */\n+  public XFontPeer(String name, int style, int size)\n+  {\n+    super(name, style, size);\n+    this.name = name;\n+    this.style = style;\n+    this.size = size;\n+  }\n+\n+  /**\n+   * Creates a new XFontPeer for the specified font name and style\n+   * attributes.\n+   *\n+   * @param name the font name\n+   * @param atts the font attributes\n+   */\n+  public XFontPeer(String name, Map atts)\n+  {\n+    super(name, atts);\n+    String family = name;\n+    if (family == null || family.equals(\"\"))\n+      family = (String) atts.get(TextAttribute.FAMILY);\n+    if (family == null)\n+      family = \"SansSerif\";\n+\n+    int size = 12;\n+    Float sizeFl = (Float) atts.get(TextAttribute.SIZE);\n+    if (sizeFl != null)\n+      size = sizeFl.intValue();\n+\n+    int style = 0;\n+    // Detect italic attribute.\n+    Float posture = (Float) atts.get(TextAttribute.POSTURE);\n+    if (posture != null && !posture.equals(TextAttribute.POSTURE_REGULAR))\n+      style |= Font.ITALIC;\n+\n+    // Detect bold attribute.\n+    Float weight = (Float) atts.get(TextAttribute.WEIGHT);\n+    if (weight != null && weight.compareTo(TextAttribute.WEIGHT_REGULAR) > 0)\n+      style |= Font.BOLD;\n+\n+    this.name = name;\n+    this.style = style;\n+    this.size = size;\n+  }\n+\n+  /**\n+   * Initializes the font peer with the specified attributes. This method is\n+   * called from both constructors.\n+   *\n+   * @param name the font name\n+   * @param style the font style\n+   * @param size the font size\n+   */\n+  private void init(String name, int style, int size)\n+  {\n+    if (name == null)\n+      {\n+        name = \"SansSerif\";\n+      }\n+    GraphicsEnvironment env = GraphicsEnvironment.getLocalGraphicsEnvironment();\n+    GraphicsDevice dev = env.getDefaultScreenDevice();\n+    if (dev instanceof XGraphicsDevice)\n+      {\n+        Display display = ((XGraphicsDevice) dev).getDisplay();\n+        String fontDescr = encodeFont(name, style, size);\n+        if (XToolkit.DEBUG)\n+          System.err.println(\"XLFD font description: \" + fontDescr);\n+        xfont = new gnu.x11.Font(display, fontDescr);\n+      }\n+    else\n+      {\n+        throw new AWTError(\"Local GraphicsEnvironment is not XWindowGraphicsEnvironment\");\n+      }\n+  }\n+\n+  public boolean canDisplay(Font font, int c)\n+  {\n+    // TODO: Implement this.\n+    throw new UnsupportedOperationException(\"Not yet implemented.\");\n+  }\n+\n+  public int canDisplayUpTo(Font font, CharacterIterator i, int start, int limit)\n+  {\n+    // TODO: Implement this.\n+    throw new UnsupportedOperationException(\"Not yet implemented.\");\n+  }\n+\n+  public String getSubFamilyName(Font font, Locale locale)\n+  {\n+    // TODO: Implement this.\n+    throw new UnsupportedOperationException(\"Not yet implemented.\");\n+  }\n+\n+  public String getPostScriptName(Font font)\n+  {\n+    // TODO: Implement this.\n+    throw new UnsupportedOperationException(\"Not yet implemented.\");\n+  }\n+\n+  public int getNumGlyphs(Font font)\n+  {\n+    // TODO: Implement this.\n+    throw new UnsupportedOperationException(\"Not yet implemented.\");\n+  }\n+\n+  public int getMissingGlyphCode(Font font)\n+  {\n+    // TODO: Implement this.\n+    throw new UnsupportedOperationException(\"Not yet implemented.\");\n+  }\n+\n+  public byte getBaselineFor(Font font, char c)\n+  {\n+    // TODO: Implement this.\n+    throw new UnsupportedOperationException(\"Not yet implemented.\");\n+  }\n+\n+  public String getGlyphName(Font font, int glyphIndex)\n+  {\n+    // TODO: Implement this.\n+    throw new UnsupportedOperationException(\"Not yet implemented.\");\n+  }\n+\n+  public GlyphVector createGlyphVector(Font font, FontRenderContext frc,\n+                                       CharacterIterator ci)\n+  {\n+    // TODO: Implement this.\n+    throw new UnsupportedOperationException(\"Not yet implemented.\");\n+  }\n+\n+  public GlyphVector createGlyphVector(Font font, FontRenderContext ctx,\n+                                       int[] glyphCodes)\n+  {\n+    // TODO: Implement this.\n+    throw new UnsupportedOperationException(\"Not yet implemented.\");\n+  }\n+\n+  public GlyphVector layoutGlyphVector(Font font, FontRenderContext frc,\n+                                       char[] chars, int start, int limit,\n+                                       int flags)\n+  {\n+    // TODO: Implement this.\n+    throw new UnsupportedOperationException(\"Not yet implemented.\");\n+  }\n+\n+  /**\n+   * Returns the font metrics for the specified font.\n+   *\n+   * @param font the font for which to fetch the font metrics\n+   *\n+   * @return the font metrics for the specified font\n+   */\n+  public FontMetrics getFontMetrics(Font font)\n+  {\n+    if (font.getPeer() != this)\n+      throw new AWTError(\"The specified font has a different peer than this\");\n+\n+    if (fontMetrics == null)\n+      fontMetrics = new XFontMetrics(font);\n+    return fontMetrics;\n+  }\n+\n+  /**\n+   * Frees the font in the X server.\n+   */\n+  protected void finalize()\n+  {\n+    if (xfont != null)\n+      xfont.close();\n+  }\n+\n+  public boolean hasUniformLineMetrics(Font font)\n+  {\n+    // TODO: Implement this.\n+    throw new UnsupportedOperationException(\"Not yet implemented.\");\n+  }\n+\n+  /**\n+   * Returns the line metrics for this font and the specified string and\n+   * font render context.\n+   */\n+  public LineMetrics getLineMetrics(Font font, CharacterIterator ci, int begin,\n+                                    int limit, FontRenderContext rc)\n+  {\n+    return new XLineMetrics();\n+  }\n+\n+  public Rectangle2D getMaxCharBounds(Font font, FontRenderContext rc)\n+  {\n+    // TODO: Implement this.\n+    throw new UnsupportedOperationException(\"Not yet implemented.\");\n+  }\n+\n+  public Rectangle2D getStringBounds(Font font, CharacterIterator ci,\n+                                     int begin, int limit, FontRenderContext frc)\n+  {\n+    // TODO: Implement this.\n+    throw new UnsupportedOperationException(\"Not yet implemented.\");\n+  }\n+\n+  /**\n+   * Encodes a font name + style + size specification into a X logical font\n+   * description (XLFD) as described here:\n+   *\n+   * http://www.meretrx.com/e93/docs/xlfd.html\n+   *\n+   * This is implemented to look up the font description in the\n+   * fonts.properties of this package.\n+   *\n+   * @param name the font name\n+   * @param atts the text attributes\n+   *\n+   * @return the encoded font description\n+   */\n+  static String encodeFont(String name, Map atts)\n+  {\n+    String family = name;\n+    if (family == null || family.equals(\"\"))\n+      family = (String) atts.get(TextAttribute.FAMILY);\n+    if (family == null)\n+      family = \"SansSerif\";\n+\n+    int size = 12;\n+    Float sizeFl = (Float) atts.get(TextAttribute.SIZE);\n+    if (sizeFl != null)\n+      size = sizeFl.intValue();\n+\n+    int style = 0;\n+    // Detect italic attribute.\n+    Float posture = (Float) atts.get(TextAttribute.POSTURE);\n+    if (posture != null && !posture.equals(TextAttribute.POSTURE_REGULAR))\n+      style |= Font.ITALIC;\n+\n+    // Detect bold attribute.\n+    Float weight = (Float) atts.get(TextAttribute.WEIGHT);\n+    if (weight != null && weight.compareTo(TextAttribute.WEIGHT_REGULAR) > 0)\n+      style |= Font.BOLD;\n+\n+    return encodeFont(family, style, size);\n+  }\n+\n+  /**\n+   * Encodes a font name + style + size specification into a X logical font\n+   * description (XLFD) as described here:\n+   *\n+   * http://www.meretrx.com/e93/docs/xlfd.html\n+   *\n+   * This is implemented to look up the font description in the\n+   * fonts.properties of this package.\n+   *\n+   * @param name the font name\n+   * @param style the font style\n+   * @param size the font size\n+   *\n+   * @return the encoded font description\n+   */\n+  static String encodeFont(String name, int style, int size)\n+  {\n+    StringBuilder key = new StringBuilder();\n+    key.append(validName(name));\n+    key.append('.');\n+    switch (style)\n+    {\n+      case Font.BOLD:\n+        key.append(\"bold\");\n+        break;\n+      case Font.ITALIC:\n+        key.append(\"italic\");\n+        break;\n+      case (Font.BOLD | Font.ITALIC):\n+        key.append(\"bolditalic\");\n+        break;\n+      case Font.PLAIN:\n+      default:\n+        key.append(\"plain\");\n+      \n+    }\n+\n+    String protoType = fontProperties.getProperty(key.toString());\n+    int s = validSize(size);\n+    return protoType.replaceFirst(\"%d\", String.valueOf(s));\n+  }\n+\n+  /**\n+   * Checks the specified font name for a valid font name. If the font name\n+   * is not known, then this returns 'sansserif' as fallback.\n+   *\n+   * @param name the font name to check\n+   *\n+   * @return a valid font name\n+   */\n+  static String validName(String name)\n+  {\n+    String retVal;\n+    if (name.equalsIgnoreCase(\"sansserif\")\n+        || name.equalsIgnoreCase(\"serif\")\n+        || name.equalsIgnoreCase(\"monospaced\")\n+        || name.equalsIgnoreCase(\"dialog\")\n+        || name.equalsIgnoreCase(\"dialoginput\"))\n+      {\n+        retVal = name.toLowerCase();\n+      }\n+    else\n+      {\n+        retVal = \"sansserif\";\n+      }\n+    return retVal;\n+  }\n+\n+  /**\n+   * Translates an arbitrary point size to a size that is typically available\n+   * on an X server. These are the sizes 8, 10, 12, 14, 18 and 24.\n+   *\n+   * @param size the queried size\n+   * @return the real available size\n+   */\n+  private static final int validSize(int size)\n+  {\n+    int val;\n+    if (size <= 9)\n+      val = 8;\n+    else if (size <= 11)\n+      val = 10;\n+    else if (size <= 13)\n+      val = 12;\n+    else if (size <= 17)\n+      val = 14;\n+    else if (size <= 23)\n+      val = 18;\n+    else\n+      val = 24;\n+    return val;\n+  }\n+\n+  /**\n+   * Returns the X Font reference. This lazily loads the font when first\n+   * requested.\n+   *\n+   * @return the X Font reference\n+   */\n+  gnu.x11.Font getXFont()\n+  {\n+    if (xfont == null)\n+      {\n+        init(name, style, size);\n+      }\n+    return xfont;\n+  }\n+}"}, {"sha": "7424dc671ed775e070ce7275564940added7e6fd", "filename": "libjava/classpath/gnu/java/awt/peer/x/XFramePeer.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fx%2FXFramePeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fx%2FXFramePeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fx%2FXFramePeer.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -65,6 +65,7 @@\n   XFramePeer(Frame f)\n   {\n     super(f);\n+    setTitle(f.getTitle());\n   }\n \n   public void setIconImage(Image image)\n@@ -87,8 +88,7 @@ public void setResizable(boolean resizable)\n \n   public void setTitle(String title)\n   {\n-    // TODO: Implement this.\n-    throw new UnsupportedOperationException(\"Not yet implemented.\");\n+    xwindow.set_wm_name (title);\n   }\n \n   public int getState()"}, {"sha": "95129666a054306cafb04500f40bfe4183192c2e", "filename": "libjava/classpath/gnu/java/awt/peer/x/XGraphics2D.java", "status": "modified", "additions": 198, "deletions": 36, "changes": 234, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fx%2FXGraphics2D.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fx%2FXGraphics2D.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fx%2FXGraphics2D.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -38,19 +38,26 @@\n package gnu.java.awt.peer.x;\n \n import java.awt.Color;\n+import java.awt.Font;\n import java.awt.Graphics;\n import java.awt.GraphicsConfiguration;\n import java.awt.Image;\n import java.awt.Paint;\n import java.awt.Rectangle;\n import java.awt.Shape;\n import java.awt.Toolkit;\n+import java.awt.Transparency;\n import java.awt.geom.AffineTransform;\n+import java.awt.image.BufferedImage;\n import java.awt.image.ColorModel;\n+import java.awt.image.DataBuffer;\n import java.awt.image.ImageObserver;\n import java.awt.image.Raster;\n+import java.awt.peer.FontPeer;\n import java.util.HashMap;\n+import java.util.WeakHashMap;\n \n+import gnu.java.awt.image.AsyncImage;\n import gnu.java.awt.java2d.AbstractGraphics2D;\n import gnu.java.awt.java2d.ScanlineCoverage;\n import gnu.x11.Colormap;\n@@ -62,6 +69,14 @@\n   extends AbstractGraphics2D\n {\n \n+  /**\n+   * When this property is set to true, then images are always rendered as\n+   * opaque images, ignoring their translucence. This is intended for\n+   * debugging and demonstration purposes.\n+   */\n+  private static final boolean RENDER_OPAQUE =\n+    Boolean.getBoolean(\"escherpeer.renderopaque\");\n+\n   /**\n    * The X Drawable to draw on.\n    */\n@@ -92,11 +107,19 @@\n     //setClip(new Rectangle(0, 0, xdrawable.width, xdrawable.height));\n   }\n \n+  @Override\n   protected void rawDrawLine(int x0, int y0, int x1, int y1)\n   {\n     xdrawable.segment(xgc, x0, y0, x1, y1);\n   }\n \n+  @Override\n+  protected void rawDrawRect(int x, int y, int w, int h)\n+  {\n+    xdrawable.rectangle(xgc, x, y, w, h, false);\n+  }\n+\n+  @Override\n   protected void rawFillRect(int x, int y, int w, int h)\n   {\n     xdrawable.rectangle(xgc, x, y, w, h, true);\n@@ -217,55 +240,65 @@ protected void updateRaster(Raster raster, int x, int y, int w, int h)\n       }\n   }\n \n+  @Override\n   public void renderScanline(int y, ScanlineCoverage c)\n   {\n+    if (y >= xdrawable.height)\n+      return;\n+\n+    // TODO: Handle Composite and Paint.\n     ScanlineCoverage.Iterator iter = c.iterate();\n-    float coverageAlpha = 0;\n+    int coverageAlpha = 0;\n     int maxCoverage = c.getMaxCoverage();\n-    Color old = getColor();\n-    Color col = getColor();\n-    if (col == null)\n-      col = Color.BLACK;\n     while (iter.hasNext())\n       {\n         ScanlineCoverage.Range range = iter.next();\n-        // TODO: Dumb implementation for testing.\n+\n         coverageAlpha = range.getCoverage();\n-        if (coverageAlpha > 0)\n+        int x0 = range.getXPos();\n+        int l = range.getLength();\n+        if (coverageAlpha == c.getMaxCoverage())\n+          {\n+            // Simply paint the current color over the existing pixels.\n+            xdrawable.fill_rectangle(xgc, x0, y, l, 1);\n+          }\n+        else if (coverageAlpha > 0)\n           {\n-            int red = col.getRed();\n-            int green = col.getGreen();\n-            int blue = col.getBlue();\n-            if (coverageAlpha < c.getMaxCoverage())\n+            // Composite the current color with the existing pixels.\n+            int x1 = x0 + l;\n+            x0 = Math.min(Math.max(0, x0), xdrawable.width - 1);\n+            x1 = Math.min(Math.max(0, x1), xdrawable.width - 1);\n+            if ((x1 - x0) < 1)\n+              continue;\n+            l = x1 - x0;\n+            gnu.x11.image.ZPixmap existing = (ZPixmap)\n+            xdrawable.image(x0, y, l, 1, 0xFFFFFFFF,\n+                            gnu.x11.image.Image.Format.ZPIXMAP);\n+            for (int x = 0; x < l; x++)\n               {\n-                float alpha = coverageAlpha / maxCoverage;\n-                red = 255 - (int) ((255 - red) * alpha);\n-                green = 255 - (int) ((255 - green) * alpha);\n-                blue = 255 - (int) ((255 - blue) * alpha);\n+                Color col = getColor();\n+                if (col == null)\n+                  {\n+                    col = Color.BLACK;\n+                  }\n+                int red = col.getRed();\n+                int green = col.getGreen();\n+                int blue = col.getBlue();\n+                int redOut = existing.get_red(x, 0);\n+                int greenOut = existing.get_green(x, 0);\n+                int blueOut = existing.get_blue(x, 0);\n+                int outAlpha = maxCoverage - coverageAlpha;\n+                redOut = redOut * outAlpha + red * coverageAlpha;\n+                redOut = redOut / maxCoverage;\n+                greenOut = greenOut * outAlpha + green * coverageAlpha;\n+                greenOut = greenOut / maxCoverage;\n+                blueOut = blueOut * outAlpha + blue * coverageAlpha;\n+                blueOut = blueOut / maxCoverage;\n+                existing.set(x, 0, redOut, greenOut, blueOut);\n               }\n-            xgc.set_foreground(red << 16 | green << 8 | blue);\n-            int x0 = range.getXPos();\n-            int l = range.getLength();\n-            xdrawable.fill_rectangle(xgc, x0, y, l, 1);\n+            xdrawable.put_image(xgc, existing, x0, y);\n           }\n       }\n-    if (old != null)\n-      xgc.set_foreground(old.getRGB());\n-  }\n-\n-  protected void fillScanline(int x0, int x1, int y)\n-  {\n-    xdrawable.segment(xgc, x0, y, x1, y);\n-  }\n-\n-  protected void fillScanlineAA(int x0, int x1, int y, int alpha)\n-  {\n-    //System.err.println(\"fillScanlineAA: \" + x0 + \", \" + x1 + \", \" + y + \", \" + alpha);\n-    // FIXME: This is for testing only.\n-    Color c = getColor();\n-    setColor(new Color(255-alpha, 255-alpha, 255-alpha));\n-    xdrawable.segment(xgc, x0, y, x1, y);\n-    setColor(c);\n   }\n \n   protected void init()\n@@ -278,6 +311,7 @@ public void setPaint(Paint p)\n     super.setPaint(p);\n     if (p instanceof Color)\n       {\n+        // TODO: Optimize for different standard bit-depths.\n         Color c = (Color) p;\n         XToolkit tk = (XToolkit) Toolkit.getDefaultToolkit();\n         HashMap colorMap = tk.colorMap;\n@@ -302,8 +336,11 @@ protected void fillShape(Shape s, boolean isFont)\n     }\n   }\n \n+  private static WeakHashMap<Image,ZPixmap> imageCache = new WeakHashMap<Image,ZPixmap>();\n+\n   protected boolean rawDrawImage(Image image, int x, int y, ImageObserver obs)\n   {\n+    image = unwrap(image);\n     boolean ret;\n     if (image instanceof XImage)\n       {\n@@ -319,13 +356,138 @@ else if (image instanceof PixmapVolatileImage)\n                             pvi.getHeight(obs), x, y);\n         ret = true;\n       }\n+    else if (image instanceof BufferedImage)\n+      {\n+        BufferedImage bi = (BufferedImage) image;\n+        DataBuffer db = bi.getRaster().getDataBuffer();\n+        if (db instanceof ZPixmapDataBuffer)\n+          {\n+            ZPixmapDataBuffer zpmdb = (ZPixmapDataBuffer) db;\n+            ZPixmap zpixmap = zpmdb.getZPixmap();\n+            xdrawable.put_image(xgc, zpixmap, x, y);\n+            ret = true;\n+          }\n+        else\n+          {\n+            int transparency = bi.getTransparency();\n+            int w = bi.getWidth();\n+            int h = bi.getHeight();\n+            if (imageCache.containsKey(image))\n+              {\n+                ZPixmap zpixmap = imageCache.get(image);\n+                xdrawable.put_image(xgc, zpixmap, x, y);\n+              }\n+            else if (transparency == Transparency.OPAQUE || RENDER_OPAQUE)\n+              {\n+                XGraphicsDevice gd = XToolkit.getDefaultDevice();\n+                ZPixmap zpixmap = new ZPixmap(gd.getDisplay(), w, h);\n+                for (int yy = 0; yy < h; yy++)\n+                  {\n+                    for (int xx = 0; xx < w; xx++)\n+                      {\n+                        int rgb = bi.getRGB(xx, yy);\n+                        zpixmap.set(xx, yy, rgb);\n+                      }\n+                  }\n+                xdrawable.put_image(xgc, zpixmap, x, y);\n+                imageCache.put(image, zpixmap);\n+              } else {\n+                ZPixmap zpixmap = (ZPixmap) xdrawable.image(x, y, w, h,\n+                                                            0xffffffff,\n+                                           gnu.x11.image.Image.Format.ZPIXMAP);\n+                for (int yy = 0; yy < h; yy++)\n+                  {\n+                    for (int xx = 0; xx < w; xx++)\n+                      {\n+                        int rgb = bi.getRGB(xx, yy);\n+                        int alpha = 0xff & (rgb >> 24);\n+                        if (alpha == 0)\n+                          {\n+                            // Completely translucent.\n+                            rgb = zpixmap.get_red(xx, yy) << 16\n+                                  | zpixmap.get_green(xx, yy) << 8\n+                                  | zpixmap.get_blue(xx, yy);\n+                          }\n+                        else if (alpha < 255)\n+                          {\n+                            // Composite pixels.\n+                            int red = 0xff & (rgb >> 16);\n+                            red = red * alpha\n+                                     + (255 - alpha) * zpixmap.get_red(xx, yy);\n+                            red = red / 255;\n+                            int green = 0xff & (rgb >> 8);\n+                            green = green * alpha\n+                                   + (255 - alpha) * zpixmap.get_green(xx, yy);\n+                            green = green / 255;\n+                            int blue = 0xff & rgb;\n+                            blue = blue * alpha\n+                                    + (255 - alpha) * zpixmap.get_blue(xx, yy);\n+                            blue = blue / 255;\n+                            rgb = red << 16 | green << 8 | blue;\n+                          }\n+                        // else keep rgb value from source image.\n+\n+                        zpixmap.set(xx, yy, rgb);\n+                      }\n+                  }\n+                xdrawable.put_image(xgc, zpixmap, x, y);\n+                // We can't cache prerendered translucent images, because\n+                // we never know how the background changes.\n+              }\n+            ret = true;\n+          }\n+      }\n     else\n       {\n         ret = super.rawDrawImage(image, x, y, obs);\n       }\n     return ret;\n   }\n \n+  public void setFont(Font f)\n+  {\n+    super.setFont(f);\n+    FontPeer p = getFont().getPeer();\n+    if (p instanceof XFontPeer)\n+      {\n+        XFontPeer xFontPeer = (XFontPeer) p;\n+        xgc.set_font(xFontPeer.getXFont());\n+      }\n+  }\n+\n+  public void drawString(String s, int x, int y)\n+  {\n+    FontPeer p = getFont().getPeer();\n+    if (p instanceof XFontPeer)\n+      {\n+        int tx = (int) transform.getTranslateX();\n+        int ty = (int) transform.getTranslateY();\n+        xdrawable.text(xgc, x + tx, y + ty, s);\n+      }\n+    else\n+      {\n+        super.drawString(s, x, y);\n+      }\n+  }\n+\n+  /**\n+   * Extracts an image instance out of an AsyncImage. If the image isn't\n+   * an AsyncImage, then the original instance is returned.\n+   *\n+   * @param im the image\n+   *\n+   * @return the image to render\n+   */\n+  private Image unwrap(Image im)\n+  {\n+    Image image = im;\n+    if (image instanceof AsyncImage)\n+      {\n+        AsyncImage aIm = (AsyncImage) image;\n+        image = aIm.getRealImage();\n+      }\n+    return image;\n+  }\n \n }\n "}, {"sha": "85f72a4eff46129364ba4aede6568d427f549110", "filename": "libjava/classpath/gnu/java/awt/peer/x/XGraphicsConfiguration.java", "status": "modified", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fx%2FXGraphicsConfiguration.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fx%2FXGraphicsConfiguration.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fx%2FXGraphicsConfiguration.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -37,6 +37,10 @@\n \n package gnu.java.awt.peer.x;\n \n+import gnu.x11.Display;\n+import gnu.x11.Screen;\n+\n+import java.awt.Dimension;\n import java.awt.GraphicsConfiguration;\n import java.awt.GraphicsDevice;\n import java.awt.Point;\n@@ -158,4 +162,38 @@ public Rectangle getBounds()\n     throw new UnsupportedOperationException(\"Not yet implemented.\");\n   }\n \n+  /**\n+   * Determines the size of the primary screen.\n+   *\n+   * @return the size of the primary screen\n+   */\n+  Dimension getSize()\n+  {\n+    // TODO: A GraphicsConfiguration should correspond to a Screen instance.\n+    Display d = device.getDisplay();\n+    Screen screen = d.default_screen;\n+    int w = screen.width;\n+    int h = screen.height;\n+    return new Dimension(w, h);\n+  }\n+\n+  /**\n+   * Determines the resolution of the primary screen in pixel-per-inch.\n+   *\n+   * @returnthe resolution of the primary screen in pixel-per-inch\n+   */\n+  int getResolution()\n+  {\n+    Display d = device.getDisplay();\n+    Screen screen = d.default_screen;\n+    int w = screen.width * 254;\n+    int h = screen.height * 254;\n+    int wmm = screen.width_in_mm * 10;\n+    int hmm = screen.height_in_mm * 10;\n+    int xdpi = w / wmm;\n+    int ydpi = h / hmm;\n+    int dpi = (xdpi + ydpi) / 2;\n+    return dpi;\n+  }\n+\n }"}, {"sha": "8ec8d57bb908eea792e90c82c3b35c1253fbc550", "filename": "libjava/classpath/gnu/java/awt/peer/x/XGraphicsEnvironment.java", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fx%2FXGraphicsEnvironment.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fx%2FXGraphicsEnvironment.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fx%2FXGraphicsEnvironment.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -38,6 +38,7 @@\n \n package gnu.java.awt.peer.x;\n \n+import gnu.java.awt.font.OpenTypeFontPeer;\n import gnu.java.awt.java2d.RasterGraphics;\n import gnu.x11.Display;\n \n@@ -189,14 +190,14 @@ public Font[] getAllFonts()\n \n   public String[] getAvailableFontFamilyNames()\n   {\n-    // TODO: Implement this.\n-    throw new UnsupportedOperationException(\"Not yet implemented.\");\n+    return getAvailableFontFamilyNames(Locale.getDefault());\n   }\n \n   public String[] getAvailableFontFamilyNames(Locale l)\n   {\n-    // TODO: Implement this.\n-    throw new UnsupportedOperationException(\"Not yet implemented.\");\n+    // TODO: This doesn't work when we are using X fonts.\n+    // Fix this.\n+    return OpenTypeFontPeer.getAvailableFontFamilyNames(l);\n   }\n \n }"}, {"sha": "c1724aad55d2ed331d8e498a555dd67feab7ef10", "filename": "libjava/classpath/gnu/java/awt/peer/x/XToolkit.java", "status": "modified", "additions": 45, "deletions": 24, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fx%2FXToolkit.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fx%2FXToolkit.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fx%2FXToolkit.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -51,6 +51,7 @@\n import java.awt.Font;\n import java.awt.FontMetrics;\n import java.awt.Frame;\n+import java.awt.GraphicsConfiguration;\n import java.awt.GraphicsDevice;\n import java.awt.GraphicsEnvironment;\n import java.awt.Image;\n@@ -117,6 +118,8 @@\n import gnu.classpath.SystemProperties;\n import gnu.java.awt.ClasspathToolkit;\n import gnu.java.awt.EmbeddedWindow;\n+import gnu.java.awt.font.OpenTypeFontPeer;\n+import gnu.java.awt.image.ImageConverter;\n import gnu.java.awt.peer.ClasspathFontPeer;\n import gnu.java.awt.peer.EmbeddedWindowPeer;\n import gnu.java.awt.peer.swing.SwingCanvasPeer;\n@@ -155,7 +158,8 @@\n   /**\n    * The cached fonts.\n    */\n-  private WeakHashMap fontCache = new WeakHashMap();\n+  private WeakHashMap<String,ClasspathFontPeer> fontCache =\n+    new WeakHashMap<String,ClasspathFontPeer>();\n \n   public XToolkit()\n   {\n@@ -179,21 +183,32 @@ public GraphicsEnvironment getLocalGraphicsEnvironment()\n    */\n   public ClasspathFontPeer getClasspathFontPeer(String name, Map attrs)\n   {\n-    String canonical = XFontPeer2.encodeFont(name, attrs);\n     ClasspathFontPeer font;\n-    if (!fontCache.containsKey(canonical))\n+    if (\"true\".equals(System.getProperty(\"escherpeer.usexfonts\")))\n       {\n-        String graphics2d =\n-          SystemProperties.getProperty(\"gnu.xawt.graphics2d\");\n-        //if (graphics2d != null && graphics2d.equals(\"gl\"))\n-          font = new XFontPeer2(name, attrs);\n-//        else\n-//          font = new XFontPeer(name, attrs);\n-        fontCache.put(canonical, font);\n+        String canonical = XFontPeer.encodeFont(name, attrs);\n+        if (!fontCache.containsKey(canonical))\n+          {\n+            font = new XFontPeer(name, attrs);\n+            fontCache.put(canonical, font);\n+          }\n+        else\n+          {\n+            font = fontCache.get(canonical);\n+          }\n       }\n     else\n       {\n-        font = (ClasspathFontPeer) fontCache.get(canonical);\n+        String canonical = OpenTypeFontPeer.encodeFont(name, attrs);\n+        if (!fontCache.containsKey(canonical))\n+          {\n+            font = new OpenTypeFontPeer(name, attrs);\n+            fontCache.put(canonical, font);\n+          }\n+        else\n+          {\n+            font = fontCache.get(canonical);\n+          }\n       }\n     return font;\n   }\n@@ -338,14 +353,22 @@ protected FontPeer getFontPeer(String name, int style)\n \n   public Dimension getScreenSize()\n   {\n-    // FIXME: This is only a hack to get some apps working.\n-    return new Dimension(1024, 768);\n+    GraphicsEnvironment ge = GraphicsEnvironment.getLocalGraphicsEnvironment();\n+    GraphicsDevice gd = ge.getDefaultScreenDevice();\n+    GraphicsConfiguration gc = gd.getDefaultConfiguration();\n+    XGraphicsConfiguration xgc = (XGraphicsConfiguration) gc;\n+\n+    return xgc.getSize();\n   }\n \n   public int getScreenResolution()\n   {\n-    // TODO: Implement this.\n-    throw new UnsupportedOperationException(\"Not yet implemented.\");\n+    GraphicsEnvironment ge = GraphicsEnvironment.getLocalGraphicsEnvironment();\n+    GraphicsDevice gd = ge.getDefaultScreenDevice();\n+    GraphicsConfiguration gc = gd.getDefaultConfiguration();\n+    XGraphicsConfiguration xgc = (XGraphicsConfiguration) gc;\n+\n+    return xgc.getResolution();\n   }\n \n   /**\n@@ -363,8 +386,8 @@ public ColorModel getColorModel()\n \n   public String[] getFontList()\n   {\n-    // TODO: Implement this.\n-    throw new UnsupportedOperationException(\"Not yet implemented.\");\n+    GraphicsEnvironment ge = GraphicsEnvironment.getLocalGraphicsEnvironment();\n+    return ge.getAvailableFontFamilyNames();\n   }\n \n   public FontMetrics getFontMetrics(Font name)\n@@ -505,7 +528,7 @@ public Image createImage(ImageProducer producer)\n   {\n     ImageConverter conv = new ImageConverter();\n     producer.startProduction(conv);\n-    Image image = conv.getXImage();\n+    Image image = conv.getImage();\n     return image;\n   }\n \n@@ -602,19 +625,17 @@ static XGraphicsDevice getDefaultDevice()\n   }\n \n   @Override\n-  public boolean isModalExclusionTypeSupported\n-                 (Dialog.ModalExclusionType modalExclusionType)\n+  public boolean isModalExclusionTypeSupported(ModalExclusionType modalExclusionType)\n   {\n-    // TODO: Implement properly.\n+    // TODO Auto-generated method stub\n     return false;\n   }\n \n   @Override\n-  public boolean isModalityTypeSupported(Dialog.ModalityType modalityType)\n+  public boolean isModalityTypeSupported(ModalityType modalityType)\n   {\n-    // TODO: Implement properly.\n+    // TODO Auto-generated method stub\n     return false;\n   }\n \n-\n }"}, {"sha": "f9184ed1cdee728f5dd7ebe13bec05a0fd8a5054", "filename": "libjava/classpath/gnu/java/awt/peer/x/XWindowPeer.java", "status": "modified", "additions": 74, "deletions": 40, "changes": 114, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fx%2FXWindowPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fx%2FXWindowPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fx%2FXWindowPeer.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -39,9 +39,11 @@\n package gnu.java.awt.peer.x;\n \n import java.awt.Component;\n+import java.awt.Dialog;\n import java.awt.EventQueue;\n import java.awt.Font;\n import java.awt.FontMetrics;\n+import java.awt.Frame;\n import java.awt.Graphics;\n import java.awt.GraphicsConfiguration;\n import java.awt.GraphicsDevice;\n@@ -54,9 +56,12 @@\n import java.awt.event.WindowEvent;\n import java.awt.image.VolatileImage;\n \n+import gnu.x11.Atom;\n import gnu.x11.Window;\n import gnu.x11.event.Event;\n \n+import gnu.java.awt.font.OpenTypeFontPeer;\n+import gnu.java.awt.peer.ClasspathFontPeer;\n import gnu.java.awt.peer.swing.SwingWindowPeer;\n \n public class XWindowPeer\n@@ -84,23 +89,60 @@\n   /**\n    * The X window.\n    */\n-  private Window xwindow;\n+  protected Window xwindow;\n+\n+  /**\n+   * The frame insets. These get updated in {@link #show()}.\n+   */\n+  private Insets insets;\n \n   XWindowPeer(java.awt.Window window)\n   {\n     super(window);\n     XGraphicsDevice dev = XToolkit.getDefaultDevice();\n \n     // TODO: Maybe initialize lazily in show().\n+    Window.Attributes atts = new Window.Attributes();\n     // FIXME: Howto generate a Window without decorations?\n     int x = Math.max(window.getX(), 0);\n     int y = Math.max(window.getY(), 0);\n     int w = Math.max(window.getWidth(), 1);\n     int h = Math.max(window.getHeight(), 1);\n-    xwindow = new Window(dev.getDisplay().default_root, x, y, w, h);\n-    xwindow.create();\n+    xwindow = new Window(dev.getDisplay().default_root, x, y, w, h, 0, atts);\n     xwindow.select_input(standardSelect);\n     dev.getEventPump().registerWindow(xwindow, window);\n+\n+    boolean undecorated;\n+    if (awtComponent instanceof Frame)\n+      {\n+        Frame f = (Frame) awtComponent;\n+        undecorated = f.isUndecorated();\n+      }\n+    else if (awtComponent instanceof Dialog)\n+      {\n+        Dialog d = (Dialog) awtComponent;\n+        undecorated = d.isUndecorated();\n+      }\n+    else\n+      {\n+        undecorated = true;\n+      }\n+    if (undecorated)\n+      {\n+        // First try the Motif implementation of undecorated frames. This\n+        // is semantically closest and supported by all major window\n+        // managers.\n+        // TODO: At the time of writing this, there's no freedesktop.org\n+        // standard extension that matches the required semantic. Maybe\n+        // undecorated frames are added in the future, if so, then use these.\n+        Atom at = Atom.intern(dev.getDisplay(), \"_MOTIF_WM_HINTS\");\n+        if (at != null)\n+          {\n+            xwindow.change_property(Window.REPLACE, at, at, 32,\n+                                    new int[]{1 << 1, 0, 0, 0, 0}, 0, 5);\n+          }\n+      }\n+    insets = new Insets(0, 0, 0, 0);\n   }\n \n   public void toBack()\n@@ -139,7 +181,11 @@ public Point getLocationOnScreen()\n    */\n   public Graphics getGraphics()\n   {\n-    return new XGraphics2D(xwindow);\n+\tXGraphics2D xg2d = new XGraphics2D(xwindow);\n+\txg2d.setColor(awtComponent.getForeground());\n+\txg2d.setBackground(awtComponent.getBackground());\n+\txg2d.setFont(awtComponent.getFont());\n+\treturn xg2d;\n   }\n \n   public Image createImage(int w, int h)\n@@ -164,16 +210,11 @@ public VolatileImage createVolatileImage(int width, int height)\n    */\n   public void show()\n   {\n-//    // Prevent ResizeRedirect events.\n-//    //xwindow.select_input(noResizeRedirectSelect);\n-//    Window.Attributes atts = new Window.Attributes();\n-//    atts.set_override_redirect(true);\n-//    xwindow.change_attributes(atts);\n-\n     // Prevent ResizeRedirect events.\n     //xwindow.select_input(Event.NO_EVENT_MASK);\n     //xwindow.select_input(noResizeRedirectSelect);\n \n+    XGraphicsDevice dev = XToolkit.getDefaultDevice();\n     xwindow.map();\n     EventQueue eq = XToolkit.getDefaultToolkit().getSystemEventQueue();\n     java.awt.Window w = (java.awt.Window) super.awtComponent;\n@@ -188,6 +229,20 @@ public void show()\n //    // Reset input selection.\n //    atts.set_override_redirect(false);\n //    xwindow.change_attributes(atts);\n+    \n+    // Determine the frame insets.\n+    Atom atom = (Atom) Atom.intern(dev.getDisplay(), \"_NET_FRAME_EXTENTS\");\n+    Window.Property p = xwindow.get_property(false, atom, Atom.CARDINAL, 0,\n+                                             Window.MAX_WM_LENGTH);\n+    if (p.format() != 0)\n+      {\n+        insets = new Insets(p.value(0), p.value(1), p.value(2), p.value(3));\n+        Window.Changes ch = new Window.Changes();\n+        ch.width(awtComponent.getWidth() - insets.left - insets.top);\n+        ch.height(awtComponent.getHeight() - insets.top - insets.bottom);\n+        xwindow.configure(ch);\n+      }\n+\n   }\n \n   /**\n@@ -214,40 +269,19 @@ public void hide()\n    */\n   public void reshape(int x, int y, int width, int height)\n   {\n-    // Prevent ResizeRedirect events.\n-//    //xwindow.select_input(noResizeRedirectSelect);\n-//    Window.Attributes atts = new Window.Attributes();\n-//    atts.set_override_redirect(true);\n-//    xwindow.change_attributes(atts);\n-\n     // Need to substract insets because AWT size is including insets,\n-    // and X size is excuding insets.\n-    Insets i = insets();\n-    xwindow.move_resize(x - i.left, y - i.right, width - i.left - i.right,\n-                        height - i.top - i.bottom);\n-\n-    // Reset input selection.\n-//    atts = new Window.Attributes();\n-//    atts.set_override_redirect(false);\n-//    xwindow.change_attributes(atts);\n+    // and X size is excluding insets.\n+    if (! callback)\n+      {\n+        Insets i = insets;\n+        xwindow.move_resize(x - i.left, y - i.right, width - i.left - i.right,\n+                            height - i.top - i.bottom);\n+      }\n   }\n \n   public Insets insets()\n   {\n-    Insets i = new Insets(0, 0, 0, 0);\n-//    Window.GeometryReply g = xwindow.geometry();\n-//    int b = g.border_width();\n-//    Insets i = new Insets(b, b, b, b);\n-//    Window.WMSizeHints wmSize = xwindow.wm_normal_hints();\n-//    if (wmSize != null)\n-//      {\n-//        i.left = wmSize.x() - g.x();\n-//        i.right = wmSize.width() - g.width() - i.left ;\n-//        i.top = wmSize.y() - g.y();\n-//        i.bottom = wmSize.height() - g.height() - i.top;\n-//      }\n-//    System.err.println(\"insets: \" + i);\n-    return i;\n+    return (Insets) insets.clone();\n   }\n \n   /**\n@@ -257,7 +291,7 @@ public Insets insets()\n    */\n   public FontMetrics getFontMetrics(Font font)\n   {\n-    XFontPeer2 fontPeer = (XFontPeer2) font.getPeer();\n+    ClasspathFontPeer fontPeer = (ClasspathFontPeer) font.getPeer();\n     return fontPeer.getFontMetrics(font);\n   }\n "}, {"sha": "cf40f4d697737a11543ceaac81d14bedfaf7e119", "filename": "libjava/classpath/gnu/java/awt/peer/x/ZPixmapDataBuffer.java", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fx%2FZPixmapDataBuffer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fx%2FZPixmapDataBuffer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fx%2FZPixmapDataBuffer.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -59,4 +59,9 @@ public void setElem(int bank, int i, int val)\n     zpixmap.set_data_element(i, (byte) val);\n   }\n \n+  ZPixmap getZPixmap()\n+  {\n+    return zpixmap;\n+  }\n+\n }"}, {"sha": "01894e5a43e2245181b689c7a54ddc3c5fdf67d5", "filename": "libjava/classpath/gnu/java/awt/print/PostScriptGraphics2D.java", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fprint%2FPostScriptGraphics2D.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fprint%2FPostScriptGraphics2D.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fprint%2FPostScriptGraphics2D.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -74,7 +74,6 @@\n import java.awt.print.Paper;\n import java.awt.print.Printable;\n import java.awt.print.PrinterException;\n-import java.awt.print.PrinterGraphics;\n import java.awt.print.PrinterJob;\n import java.io.BufferedWriter;\n import java.io.File;"}, {"sha": "812906b189dcd90de4e078b51c933a180f568eb7", "filename": "libjava/classpath/gnu/java/awt/print/SpooledDocument.java", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fprint%2FSpooledDocument.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fprint%2FSpooledDocument.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fprint%2FSpooledDocument.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -41,7 +41,6 @@\n import javax.print.DocFlavor;\n import javax.print.attribute.DocAttributeSet;\n import java.io.File;\n-import java.io.IOException;\n import java.io.FileInputStream;\n import java.io.FileNotFoundException;\n import java.io.Reader;"}, {"sha": "96231e1be5b5b28358157b4868df1441c732530c", "filename": "libjava/classpath/gnu/java/io/PlatformHelper.java", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fio%2FPlatformHelper.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fio%2FPlatformHelper.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fio%2FPlatformHelper.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -37,8 +37,6 @@\n \n package gnu.java.io;\n \n-import java.util.StringTokenizer;\n-\n /**\n  * We had many changes in File.java, URLStreamHandler.java etc. to handle\n  * path representations on different platforms (Windows/Unix-family)."}, {"sha": "7ad70cd7c61a21f0edb50afa505f4e88e1ca529e", "filename": "libjava/classpath/gnu/java/lang/MainThread.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Flang%2FMainThread.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Flang%2FMainThread.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Flang%2FMainThread.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -69,7 +69,7 @@ public void run()\n   {\n     try\n       {\n-\tmainMethod.invoke(null,args);\n+\tmainMethod.invoke(null,(Object) args);\n       }\n     catch(IllegalAccessException e)\n       {"}, {"sha": "a651e3548b4a9e13226d7fb5378d8f86bc73591f", "filename": "libjava/classpath/gnu/java/lang/management/BeanImpl.java", "status": "modified", "additions": 86, "deletions": 7, "changes": 93, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Flang%2Fmanagement%2FBeanImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Flang%2Fmanagement%2FBeanImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Flang%2Fmanagement%2FBeanImpl.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -44,8 +44,6 @@\n import java.lang.reflect.Array;\n import java.lang.reflect.Method;\n import java.lang.reflect.InvocationTargetException;\n-import java.lang.reflect.TypeVariable;\n-\n import java.util.ArrayList;\n import java.util.Iterator;\n import java.util.List;\n@@ -59,13 +57,11 @@\n import javax.management.MBeanInfo;\n import javax.management.MBeanOperationInfo;\n import javax.management.MBeanParameterInfo;\n-import javax.management.MBeanInfo;\n import javax.management.NotCompliantMBeanException;\n import javax.management.ReflectionException;\n import javax.management.StandardMBean;\n \n import javax.management.openmbean.ArrayType;\n-import javax.management.openmbean.CompositeData;\n import javax.management.openmbean.CompositeDataSupport;\n import javax.management.openmbean.CompositeType;\n import javax.management.openmbean.OpenDataException;\n@@ -80,7 +76,6 @@\n import javax.management.openmbean.OpenMBeanParameterInfo;\n import javax.management.openmbean.OpenMBeanParameterInfoSupport;\n import javax.management.openmbean.OpenType;\n-import javax.management.openmbean.SimpleType;\n import javax.management.openmbean.TabularData;\n import javax.management.openmbean.TabularDataSupport;\n import javax.management.openmbean.TabularType;\n@@ -277,15 +272,15 @@ public Object getAttribute(String attribute)\n \tMethod getter = null;\n \ttry \n \t  {\n-\t    getter = vClass.getMethod(\"get\" + field, null);\n+\t    getter = vClass.getMethod(\"get\" + field);\n \t  }\n \tcatch (NoSuchMethodException e)\n \t  {\n \t    /* Ignored; the type tells us it's there. */\n \t  }\n \ttry\n \t  {\n-\t    values.add(getter.invoke(value, null));\n+\t    values.add(getter.invoke(value));\n \t  }\n \tcatch (IllegalAccessException e)\n \t  {\n@@ -323,6 +318,90 @@ protected MBeanInfo getCachedMBeanInfo()\n     return (MBeanInfo) openInfo;\n   }\n \n+  /**\n+   * Override this method so as to prevent the description of a constructor's\n+   * parameter being @code{null}.  Open MBeans can not have @code{null} descriptions,\n+   * but one will occur as the names of parameters aren't stored for reflection.\n+   * \n+   * @param constructor the constructor whose parameter needs describing.\n+   * @param parameter the parameter to be described.\n+   * @param sequenceNo the number of the parameter to describe.\n+   * @return a description of the constructor's parameter.\n+   */\n+  protected String getDescription(MBeanConstructorInfo constructor,\n+\t\t\t\t  MBeanParameterInfo parameter,\n+\t\t\t\t  int sequenceNo)\n+  {\n+    String desc = parameter.getDescription();\n+    if (desc == null)\n+      return \"param\" + sequenceNo;\n+    else\n+      return desc;\n+  }\n+\n+  /**\n+   * Override this method so as to prevent the description of an operation's\n+   * parameter being @code{null}.  Open MBeans can not have @code{null} descriptions,\n+   * but one will occur as the names of parameters aren't stored for reflection.\n+   * \n+   * @param operation the operation whose parameter needs describing.\n+   * @param parameter the parameter to be described.\n+   * @param sequenceNo the number of the parameter to describe.\n+   * @return a description of the operation's parameter.\n+   */\n+  protected String getDescription(MBeanOperationInfo operation,\n+\t\t\t\t  MBeanParameterInfo parameter,\n+\t\t\t\t  int sequenceNo)\n+  {\n+    String desc = parameter.getDescription();\n+    if (desc == null)\n+      return \"param\" + sequenceNo;\n+    else\n+      return desc;\n+  }\n+\n+  /**\n+   * Override this method so as to prevent the name of a constructor's\n+   * parameter being @code{null}.  Open MBeans can not have @code{null} names,\n+   * but one will occur as the names of parameters aren't stored for reflection.\n+   * \n+   * @param constructor the constructor whose parameter needs a name.\n+   * @param parameter the parameter to be named.\n+   * @param sequenceNo the number of the parameter to name.\n+   * @return a description of the constructor's parameter.\n+   */\n+  protected String getParameterName(MBeanConstructorInfo constructor,\n+\t\t\t\t    MBeanParameterInfo parameter,\n+\t\t\t\t    int sequenceNo)\n+  {\n+    String name = parameter.getName();\n+    if (name == null)\n+      return \"param\" + sequenceNo;\n+    else\n+      return name;\n+  }\n+\n+  /**\n+   * Override this method so as to prevent the name of an operation's\n+   * parameter being @code{null}.  Open MBeans can not have @code{null} names,\n+   * but one will occur as the names of parameters aren't stored for reflection.\n+   * \n+   * @param operation the operation whose parameter needs a name.\n+   * @param parameter the parameter to be named.\n+   * @param sequenceNo the number of the parameter to name.\n+   * @return a description of the operation's parameter.\n+   */\n+  protected String getParameterName(MBeanOperationInfo operation,\n+\t\t\t\t    MBeanParameterInfo parameter,\n+\t\t\t\t    int sequenceNo)\n+  {\n+    String name = parameter.getName();\n+    if (name == null)\n+      return \"param\" + sequenceNo;\n+    else\n+      return name;\n+  }\n+\n   public MBeanInfo getMBeanInfo()\n   {\n     super.getMBeanInfo();"}, {"sha": "78c17183792109fb41f056a72c342e1363842a33", "filename": "libjava/classpath/gnu/java/lang/reflect/TypeSignature.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Flang%2Freflect%2FTypeSignature.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Flang%2Freflect%2FTypeSignature.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Flang%2Freflect%2FTypeSignature.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -239,7 +239,7 @@ public static Class getClassForEncoding(String type_code)\n   public static String getEncodingOfMethod(Method m)\n   {\n     Class[] paramTypes = m.getParameterTypes();\n-    StringBuffer buf = new StringBuffer().append('(');\n+    StringBuilder buf = new StringBuilder(\"(\");\n     for (int i = 0; i < paramTypes.length; i++)\n       buf.append(getEncodingOfClass(paramTypes[i].getName(), true));\n     buf.append(')').append(getEncodingOfClass(m.getReturnType().getName(),\n@@ -261,7 +261,7 @@ public static String getEncodingOfMethod(Method m)\n   public static String getEncodingOfConstructor(Constructor c)\n   {\n     Class[] paramTypes = c.getParameterTypes();\n-    StringBuffer buf = new StringBuffer().append('(');\n+    StringBuilder buf = new StringBuilder(\"(\");\n     for (int i = 0; i < paramTypes.length; i++)\n       buf.append(getEncodingOfClass(paramTypes[i].getName(), true));\n     buf.append(\")V\");"}, {"sha": "f3aabbdd939589a46c17e5f545bb704a47245f61", "filename": "libjava/classpath/gnu/java/locale/LocaleHelper.java", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Flocale%2FLocaleHelper.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Flocale%2FLocaleHelper.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Flocale%2FLocaleHelper.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -40,8 +40,6 @@\n \n import java.text.Collator;\n import java.util.Locale;\n-import java.util.MissingResourceException;\n-import java.util.ResourceBundle;\n \n /**\n  * This class provides common helper methods"}, {"sha": "90e3b7a0d64670ef14c0e38dc900db9f16d48887", "filename": "libjava/classpath/gnu/java/net/protocol/http/Request.java", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fhttp%2FRequest.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fhttp%2FRequest.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fhttp%2FRequest.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -52,7 +52,6 @@\n import java.util.Calendar;\n import java.util.Date;\n import java.util.HashMap;\n-import java.util.Iterator;\n import java.util.Map;\n import java.util.Properties;\n import java.util.zip.GZIPInputStream;"}, {"sha": "ea8c863e30e5132614d1ce75723fe6604b769cd2", "filename": "libjava/classpath/gnu/java/nio/DatagramChannelImpl.java", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2FDatagramChannelImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2FDatagramChannelImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2FDatagramChannelImpl.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -40,11 +40,9 @@\n \n import gnu.java.net.PlainDatagramSocketImpl;\n import java.io.IOException;\n-import java.net.DatagramPacket;\n import java.net.DatagramSocket;\n import java.net.InetSocketAddress;\n import java.net.SocketAddress;\n-import java.net.SocketTimeoutException;\n import java.nio.ByteBuffer;\n import java.nio.channels.ClosedChannelException;\n import java.nio.channels.DatagramChannel;"}, {"sha": "d4a374b4ac7207be457fda822e153e23c6d5f3fe", "filename": "libjava/classpath/gnu/java/nio/FileChannelImpl.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2FFileChannelImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2FFileChannelImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2FFileChannelImpl.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -412,7 +412,7 @@ private int smallTransferFrom (ReadableByteChannel src, long position,\n \n     if (buffer == null)\n       {\n-\tbuffer = ByteBuffer.allocate ((int) count);\n+\tbuffer = ByteBuffer.allocate (count);\n \tsrc.read (buffer);\n \tbuffer.flip();\n       }"}, {"sha": "11b37cadbe5b5ef2d3c7e7db266f320aae3d2a3b", "filename": "libjava/classpath/gnu/java/nio/KqueueSelectionKeyImpl.java", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2FKqueueSelectionKeyImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2FKqueueSelectionKeyImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2FKqueueSelectionKeyImpl.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -39,8 +39,6 @@\n package gnu.java.nio;\n \n \n-import java.io.IOException;\n-import java.nio.ByteBuffer;\n import java.nio.channels.SelectableChannel;\n import java.nio.channels.SelectionKey;\n import java.nio.channels.Selector;"}, {"sha": "87574e49110812044fabc230d04e44ebde778259", "filename": "libjava/classpath/gnu/java/nio/NIOSocket.java", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2FNIOSocket.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2FNIOSocket.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2FNIOSocket.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -38,7 +38,6 @@\n \n package gnu.java.nio;\n \n-import gnu.java.net.PlainSocketImpl;\n import java.io.IOException;\n import java.net.Socket;\n import java.nio.channels.SocketChannel;"}, {"sha": "0128661e5b83544de149dcd9e7f185e0c3119cd7", "filename": "libjava/classpath/gnu/java/nio/ServerSocketChannelImpl.java", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2FServerSocketChannelImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2FServerSocketChannelImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2FServerSocketChannelImpl.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -40,7 +40,6 @@\n \n import java.io.IOException;\n import java.net.ServerSocket;\n-import java.net.SocketTimeoutException;\n import java.nio.channels.ClosedChannelException;\n import java.nio.channels.NotYetBoundException;\n import java.nio.channels.ServerSocketChannel;"}, {"sha": "9564592e0cf2d0fd95691cfbacc63f557f4ba8c1", "filename": "libjava/classpath/gnu/java/nio/SocketChannelImpl.java", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2FSocketChannelImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2FSocketChannelImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2FSocketChannelImpl.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -38,28 +38,16 @@\n \n package gnu.java.nio;\n \n-import gnu.java.net.PlainSocketImpl;\n-import gnu.java.net.VMPlainSocketImpl;\n-\n import java.io.IOException;\n-import java.io.InputStream;\n-import java.io.OutputStream;\n-import java.lang.reflect.InvocationTargetException;\n-import java.lang.reflect.Method;\n import java.net.InetSocketAddress;\n import java.net.Socket;\n import java.net.SocketAddress;\n-import java.net.SocketException;\n-import java.net.SocketTimeoutException;\n import java.nio.ByteBuffer;\n-import java.nio.ReadOnlyBufferException;\n import java.nio.channels.AlreadyConnectedException;\n import java.nio.channels.ClosedChannelException;\n import java.nio.channels.ConnectionPendingException;\n import java.nio.channels.NoConnectionPendingException;\n import java.nio.channels.NotYetConnectedException;\n-import java.nio.channels.SelectionKey;\n-import java.nio.channels.Selector;\n import java.nio.channels.SocketChannel;\n import java.nio.channels.UnresolvedAddressException;\n import java.nio.channels.UnsupportedAddressTypeException;"}, {"sha": "7557e28c4443af4a725315af93e4b9c84b853e68", "filename": "libjava/classpath/gnu/java/nio/SocketChannelSelectionKeyImpl.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2FSocketChannelSelectionKeyImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2FSocketChannelSelectionKeyImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2FSocketChannelSelectionKeyImpl.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -57,7 +57,7 @@ public class SocketChannelSelectionKeyImpl extends SelectionKeyImpl\n   public SocketChannelSelectionKeyImpl(SocketChannelImpl ch, SelectorImpl impl)\n   {\n     super(ch, impl);\n-    this.ch = (SocketChannelImpl) ch;\n+    this.ch = ch;\n   }\n \n   /**"}, {"sha": "043c804b7e45afc415b9da962abd6ef595ab20db", "filename": "libjava/classpath/gnu/java/nio/charset/ByteCharset.java", "status": "modified", "additions": 77, "deletions": 90, "changes": 167, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FByteCharset.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FByteCharset.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FByteCharset.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -45,32 +45,34 @@\n import java.nio.charset.CoderResult;\n \n /**\n- * A generic encoding framework for single-byte encodings, \n- * utilizing a look-up table.\n+ * A generic encoding framework for single-byte encodings, utilizing a look-up\n+ * table.\n+ * \n+ * This replaces the gnu.java.io.EncoderEightBitLookup class, created by Aron\n+ * Renn.\n  * \n- * This replaces the gnu.java.io.EncoderEightBitLookup class, \n- * created by Aron Renn.\n- *\n  * @author Sven de Marothy\n+ * @modified Ian Rogers\n  */\n abstract class ByteCharset extends Charset\n {\n-  protected char[] lookupTable;\n-    /**\n-     * Char to signify the character in the table is undefined\n-     */\n-  protected static final char NONE = (char)0xFFFD;\n+  protected final char[] lookupTable;\n+  /**\n+   * Char to signify the character in the table is undefined\n+   */\n+  protected static final char NONE = (char) 0xFFFD;\n \n-  ByteCharset (String canonicalName, String[] aliases)\n+  ByteCharset(String canonicalName, String[] aliases, char[] lookup)\n   {\n-    super (canonicalName, aliases);\n+    super(canonicalName, aliases);\n+    lookupTable = lookup;\n   }\n \n   /**\n-   * Most western charsets include ASCII, but this should\n-   * be overloaded for others.\n+   * Most western charsets include ASCII, but this should be overloaded for\n+   * others.\n    */\n-  public boolean contains (Charset cs)\n+  public boolean contains(Charset cs)\n   {\n     return cs instanceof US_ASCII || (cs.getClass() == getClass());\n   }\n@@ -80,83 +82,91 @@ char[] getLookupTable()\n     return lookupTable;\n   }\n \n-  public CharsetDecoder newDecoder ()\n+  public CharsetDecoder newDecoder()\n   {\n-    return new Decoder (this);\n+    return new Decoder(this);\n   }\n \n-  public CharsetEncoder newEncoder ()\n+  public CharsetEncoder newEncoder()\n   {\n-    return new Encoder (this);\n+    return new Encoder(this);\n   }\n \n   private static final class Decoder extends CharsetDecoder\n   {\n-    private char[] lookup;\n-\n+    /** Lookup of byte to char mappings */\n+    private final char[] lookup;\n+    \n+    /** Helper to decode loops */\n+    private final ByteDecodeLoopHelper helper = new ByteDecodeLoopHelper()\n+    {\n+      protected boolean isMappable(byte b)\n+      {\n+        return lookup[(int) (b & 0xFF)] != NONE;\n+      }\n+      protected char mapToChar(byte b)\n+      {\n+        return lookup[(int) (b & 0xFF)];\n+      }\n+    };\n+    \n     // Package-private to avoid a trampoline constructor.\n-    Decoder (ByteCharset cs)\n+    Decoder(ByteCharset cs)\n     {\n-      super (cs, 1.0f, 1.0f);\n+      super(cs, 1.0f, 1.0f);\n       lookup = cs.getLookupTable();\n     }\n \n-    protected CoderResult decodeLoop (ByteBuffer in, CharBuffer out)\n+    protected CoderResult decodeLoop(ByteBuffer in, CharBuffer out)\n     {\n-      // TODO: Optimize this in the case in.hasArray() / out.hasArray()\n-      while (in.hasRemaining ())\n-      {\n-        byte b = in.get ();\n-\tchar c;\n-\n-        if (!out.hasRemaining ())\n-          {\n-            in.position (in.position () - 1);\n-            return CoderResult.OVERFLOW;\n-          }\n-\t\n-\tif((c = lookup[(int) (b & 0xFF)]) == NONE)\n-          {\n-            in.position (in.position () - 1);\n-            return CoderResult.unmappableForLength (1);\n-          }\n-        out.put (c);\n-      }\n-\n-      return CoderResult.UNDERFLOW;\n+      return helper.decodeLoop(in, out);\n     }\n   }\n \n   private static final class Encoder extends CharsetEncoder\n   {\n-    private byte[] lookup;\n-\n+    /** Lookup of char to byte mappings */\n+    private final byte[] lookup;\n+    \n+    /** Helper to encode loops */\n+    private final ByteEncodeLoopHelper helper = new ByteEncodeLoopHelper()\n+    {\n+      protected boolean isMappable(char c)\n+      {\n+        return canEncode(c);\n+      }\n+      protected byte mapToByte(char c)\n+      {\n+        return lookup[c];\n+      }\n+    };\n+    \n     // Package-private to avoid a trampoline constructor.\n-    Encoder (ByteCharset cs)\n+    Encoder(ByteCharset cs)\n     {\n-      super (cs, 1.0f, 1.0f);\n+      super(cs, 1.0f, 1.0f);\n \n       char[] lookup_table = cs.getLookupTable();\n \n       // Create the inverse look-up table.\n-      // determine required size of encoding_table: \n-      int max = 0; \n+      // determine required size of encoding_table:\n+      int max = 0;\n       for (int i = 0; i < lookup_table.length; i++)\n-\t  {\n-\t      int c = (int)lookup_table[i]; \n-\t      max = (c > max && c < NONE) ? c : max;\n-\t  }\n+        {\n+          int c = (int) lookup_table[i];\n+          max = (c > max && c < NONE) ? c : max;\n+        }\n+\n+      lookup = new byte[max + 1];\n \n-      lookup = new byte[max+1];\n-      \n       for (int i = 0; i < lookup_table.length; i++)\n-\t  {\n-\t    int c = (int)lookup_table[i]; \n-\t    if (c != 0 && c < NONE) \n-\t      {\n-\t\tlookup[c] = (byte)i;\n-\t      }\n-\t  }\n+        {\n+          int c = (int) lookup_table[i];\n+          if (c != 0 && c < NONE)\n+            {\n+              lookup[c] = (byte) i;\n+            }\n+        }\n     }\n \n     public boolean canEncode(char c)\n@@ -169,38 +179,15 @@ public boolean canEncode(CharSequence cs)\n     {\n       for (int i = 0; i < cs.length(); ++i)\n         {\n-          if (! canEncode(cs.charAt(i)))\n+          if (!canEncode(cs.charAt(i)))\n             return false;\n         }\n       return true;\n     }\n \n-    protected CoderResult encodeLoop (CharBuffer in, ByteBuffer out)\n+    protected CoderResult encodeLoop(CharBuffer in, ByteBuffer out)\n     {\n-      // TODO: Optimize this in the case in.hasArray() / out.hasArray()\n-      while (in.hasRemaining ())\n-      {\n-\tint c = (int)in.get ();\n-\n-        if (!out.hasRemaining ())\n-          {\n-            in.position (in.position () - 1);\n-            return CoderResult.OVERFLOW;\n-          }\n-\n-\t// lookup byte encoding\n-\tbyte b = (c < lookup.length) ? lookup[c] : (byte)0;\n-\n-\tif ((int)b != 0 || (int)c == 0)\n-\t    {\n-\t\tout.put (b);\n-\t    } else {\n-\t\tin.position (in.position () - 1);\n-\t\treturn CoderResult.unmappableForLength (1);\t\t\n-\t    }\n-      }\n-\n-      return CoderResult.UNDERFLOW;\n+      return helper.encodeLoop(in, out);\n     }\n   }\n }"}, {"sha": "33dfa0263c76ff0a4ace7da5dcbc8d938dc93546", "filename": "libjava/classpath/gnu/java/nio/charset/ByteDecodeLoopHelper.java", "status": "added", "additions": 162, "deletions": 0, "changes": 162, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FByteDecodeLoopHelper.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FByteDecodeLoopHelper.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FByteDecodeLoopHelper.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -0,0 +1,162 @@\n+/* ByteCharset.java -- Abstract class for generic 1-byte encodings.\n+   Copyright (C) 2005 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+package gnu.java.nio.charset;\n+\n+import java.nio.ByteBuffer;\n+import java.nio.CharBuffer;\n+import java.nio.charset.CoderResult;\n+\n+/**\n+ * Helper class to deal with decoding loops that read a byte at a time\n+ * \n+ * @author Ian Rogers\n+ */\n+public abstract class ByteDecodeLoopHelper\n+{\n+  /**\n+   * @return can the given byte be encoded\n+   */\n+  protected abstract boolean isMappable(byte b);\n+\n+  /**\n+   * Map the given byte to a char, the given byte is guaranteed to be mappable\n+   */\n+  protected abstract char mapToChar(byte b);\n+\n+  /**\n+   * Encodes one or more characters into one or more bytes, mapping each\n+   * character to only one byte\n+   * \n+   * @param in character buffer to read from\n+   * @param out byte buffer to write to\n+   * @return the result state of the encoder\n+   */\n+  CoderResult decodeLoop(ByteBuffer in, CharBuffer out)\n+  {\n+    if (in.hasArray() && out.hasArray())\n+      {\n+        return arrayDecodeLoop(in, out);\n+      } else\n+      {\n+        return normalDecodeLoop(in, out);\n+      }\n+  }\n+\n+  /**\n+   * Encode loop using get and put operations\n+   */\n+  private CoderResult normalDecodeLoop(ByteBuffer in, CharBuffer out)\n+  {\n+    int outRemaining = out.remaining();\n+    int inRemaining = in.remaining();\n+    while (inRemaining > 0 && outRemaining > 0)\n+      {\n+        byte b = in.get();\n+        inRemaining--;\n+\n+        if (!isMappable(b))\n+          {\n+            in.position(in.position() - 1);\n+            return CoderResult.unmappableForLength(1);\n+          }\n+        char c = mapToChar(b);\n+        out.put(c);\n+        outRemaining--;\n+      }\n+    if (inRemaining > 0)\n+      {\n+        return CoderResult.OVERFLOW;\n+      } else\n+      {\n+        return CoderResult.UNDERFLOW;\n+      }\n+  }\n+\n+  /**\n+   * Encode loop using array read and write operations\n+   */\n+  private CoderResult arrayDecodeLoop(ByteBuffer in, CharBuffer out)\n+  {\n+    byte[] inArray = in.array();\n+    char[] outArray = out.array();\n+    int inPos = in.arrayOffset() + in.position();\n+    int outPos = out.arrayOffset() + out.position();\n+    int inRemaining = in.remaining();\n+    int outRemaining = out.remaining();\n+    CoderResult result;\n+    if (inRemaining <= outRemaining)\n+      {\n+        for (int i = 0; i < inRemaining; i++)\n+          {\n+            byte b = inArray[inPos];\n+            inPos++;\n+            if (!isMappable(b))\n+              {\n+                inPos--;\n+                result = CoderResult.unmappableForLength(1);\n+                break;\n+              }\n+            char c = mapToChar(b);\n+            outArray[outPos] = c;\n+            outPos++;\n+          }\n+        result = CoderResult.UNDERFLOW;\n+      }\n+    else\n+      {\n+        for (int i = 0; i < outRemaining; i++)\n+          {\n+            byte b = inArray[inPos];\n+            inPos++;\n+            if (!isMappable(b))\n+              {\n+                inPos--;\n+                result = CoderResult.unmappableForLength(1);\n+                break;\n+              }\n+            char c = mapToChar(b);\n+            outArray[outPos] = c;\n+            outPos++;\n+          }\n+        result = CoderResult.OVERFLOW;\n+      }\n+    in.position(inPos - in.arrayOffset());\n+    out.position(outPos - out.arrayOffset());\n+    return result;\n+  }\n+}"}, {"sha": "5f703b195f2e78140652ce94c2762b98fb069bbf", "filename": "libjava/classpath/gnu/java/nio/charset/ByteEncodeLoopHelper.java", "status": "added", "additions": 163, "deletions": 0, "changes": 163, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FByteEncodeLoopHelper.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FByteEncodeLoopHelper.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FByteEncodeLoopHelper.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -0,0 +1,163 @@\n+/* ByteCharset.java -- Abstract class for generic 1-byte encodings.\n+   Copyright (C) 2005 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+package gnu.java.nio.charset;\n+\n+import java.nio.ByteBuffer;\n+import java.nio.CharBuffer;\n+import java.nio.charset.CoderResult;\n+\n+/**\n+ * Helper class to deal with encoding loops that write a byte at a time\n+ * \n+ * @author Ian Rogers\n+ */\n+public abstract class ByteEncodeLoopHelper\n+{\n+  /**\n+   * @return can the given character be encoded\n+   */\n+  protected abstract boolean isMappable(char c);\n+\n+  /**\n+   * Map the given character to a byte, the given character is guaranteed to be\n+   * mappable\n+   */\n+  protected abstract byte mapToByte(char c);\n+\n+  /**\n+   * Encodes one or more characters into one or more bytes, mapping each\n+   * character to only one byte\n+   * \n+   * @param in character buffer to read from\n+   * @param out byte buffer to write to\n+   * @return the result state of the encoder\n+   */\n+  CoderResult encodeLoop(CharBuffer in, ByteBuffer out)\n+  {\n+    if (in.hasArray() && out.hasArray())\n+      {\n+        return arrayEncodeLoop(in, out);\n+      } else\n+      {\n+        return normalEncodeLoop(in, out);\n+      }\n+  }\n+\n+  /**\n+   * Encode loop using get and put operations\n+   */\n+  private CoderResult normalEncodeLoop(CharBuffer in, ByteBuffer out)\n+  {\n+    int outRemaining = out.remaining();\n+    int inRemaining = in.remaining();\n+    while (inRemaining > 0 && outRemaining > 0)\n+      {\n+        char c = in.get();\n+        inRemaining--;\n+\n+        if (!isMappable(c))\n+          {\n+            in.position(in.position() - 1);\n+            return CoderResult.unmappableForLength(1);\n+          }\n+        byte b = mapToByte(c);\n+        out.put(b);\n+        outRemaining--;\n+      }\n+    if (inRemaining > 0)\n+      {\n+        return CoderResult.OVERFLOW;\n+      } else\n+      {\n+        return CoderResult.UNDERFLOW;\n+      }\n+  }\n+\n+  /**\n+   * Encode loop using array read and write operations\n+   */\n+  private CoderResult arrayEncodeLoop(CharBuffer in, ByteBuffer out)\n+  {\n+    char[] inArray = in.array();\n+    byte[] outArray = out.array();\n+    int inPos = in.arrayOffset() + in.position();\n+    int outPos = out.arrayOffset() + out.position();\n+    int inRemaining = in.remaining();\n+    int outRemaining = out.remaining();\n+    CoderResult result;\n+    if (inRemaining <= outRemaining)\n+      {\n+        for (int i = 0; i < inRemaining; i++)\n+          {\n+            char inChar = inArray[inPos];\n+            inPos++;\n+            if (!isMappable(inChar))\n+              {\n+                inPos--;\n+                result = CoderResult.unmappableForLength(1);\n+                break;\n+              }\n+            byte b = mapToByte(inChar);\n+            outArray[outPos] = b;\n+            outPos++;\n+          }\n+        result = CoderResult.UNDERFLOW;\n+      }\n+    else\n+      {\n+        for (int i = 0; i < outRemaining; i++)\n+          {\n+            char inChar = inArray[inPos];\n+            inPos++;\n+            if (!isMappable(inChar))\n+              {\n+                inPos--;\n+                result = CoderResult.unmappableForLength(1);\n+                break;\n+              }\n+            byte b = mapToByte(inChar);\n+            outArray[outPos] = b;\n+            outPos++;\n+          }\n+        result = CoderResult.OVERFLOW;\n+      }\n+    in.position(inPos - in.arrayOffset());\n+    out.position(outPos - out.arrayOffset());\n+    return result;\n+  }\n+}"}, {"sha": "44e1eba4f6a85a6aec709460c74df4a3d208dfe3", "filename": "libjava/classpath/gnu/java/nio/charset/Cp424.java", "status": "modified", "additions": 35, "deletions": 38, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FCp424.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FCp424.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FCp424.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -37,53 +37,50 @@\n \n package gnu.java.nio.charset;\n \n-public class Cp424 extends ByteCharset\n+public final class Cp424 extends ByteCharset\n {\n \n   /**\n    * This is the lookup table for this encoding\n    */\n-    private static final char[]\tlookup =\n+    private static final char[] lookup =\n     {\n-\t0x0000, 0x0001, 0x0002, 0x0003, 0x009C, 0x0009, 0x0086, 0x007F, \n-\t0x0097, 0x008D, 0x008E, 0x000B, 0x000C, 0x000D, 0x000E, 0x000F, \n-\t0x0010, 0x0011, 0x0012, 0x0013, 0x009D, 0x0085, 0x0008, 0x0087, \n-\t0x0018, 0x0019, 0x0092, 0x008F, 0x001C, 0x001D, 0x001E, 0x001F, \n-\t0x0080, 0x0081, 0x0082, 0x0083, 0x0084, 0x000A, 0x0017, 0x001B, \n-\t0x0088, 0x0089, 0x008A, 0x008B, 0x008C, 0x0005, 0x0006, 0x0007, \n-\t0x0090, 0x0091, 0x0016, 0x0093, 0x0094, 0x0095, 0x0096, 0x0004, \n-\t0x0098, 0x0099, 0x009A, 0x009B, 0x0014, 0x0015, 0x009E, 0x001A, \n-\t0x0020, 0x05D0, 0x05D1, 0x05D2, 0x05D3, 0x05D4, 0x05D5, 0x05D6, \n-\t0x05D7, 0x05D8, 0x00A2, 0x002E, 0x003C, 0x0028, 0x002B, 0x007C, \n-\t0x0026, 0x05D9, 0x05DA, 0x05DB, 0x05DC, 0x05DD, 0x05DE, 0x05DF, \n-\t0x05E0, 0x05E1, 0x0021, 0x0024, 0x002A, 0x0029, 0x003B, 0x00AC, \n-\t0x002D, 0x002F, 0x05E2, 0x05E3, 0x05E4, 0x05E5, 0x05E6, 0x05E7, \n-\t0x05E8, 0x05E9, 0x00A6, 0x002C, 0x0025, 0x005F, 0x003E, 0x003F, \n-\tNONE,   0x05EA,   NONE,   NONE, 0x00A0,   NONE,   NONE,   NONE, \n-\t0x2017, 0x0060, 0x003A, 0x0023, 0x0040, 0x0027, 0x003D, 0x0022, \n-\tNONE,   0x0061, 0x0062, 0x0063, 0x0064, 0x0065, 0x0066, 0x0067, \n-\t0x0068, 0x0069, 0x00AB, 0x00BB,   NONE,   NONE,   NONE, 0x00B1, \n-\t0x00B0, 0x006A, 0x006B, 0x006C, 0x006D, 0x006E, 0x006F, 0x0070, \n-\t0x0071, 0x0072,   NONE,   NONE,   NONE, 0x00B8,   NONE, 0x00A4, \n-\t0x00B5, 0x007E, 0x0073, 0x0074, 0x0075, 0x0076, 0x0077, 0x0078, \n-\t0x0079, 0x007A,   NONE,   NONE,   NONE,   NONE,   NONE, 0x00AE, \n-\t0x005E, 0x00A3, 0x00A5, 0x00B7, 0x00A9, 0x00A7, 0x00B6, 0x00BC, \n-\t0x00BD, 0x00BE, 0x005B, 0x005D, 0x00AF, 0x00A8, 0x00B4, 0x00D7, \n-\t0x007B, 0x0041, 0x0042, 0x0043, 0x0044, 0x0045, 0x0046, 0x0047, \n-\t0x0048, 0x0049, 0x00AD,   NONE,   NONE,   NONE,   NONE,   NONE, \n-\t0x007D, 0x004A, 0x004B, 0x004C, 0x004D, 0x004E, 0x004F, 0x0050, \n-\t0x0051, 0x0052, 0x00B9,   NONE,   NONE,   NONE,   NONE,   NONE, \n-\t0x005C, 0x00F7, 0x0053, 0x0054, 0x0055, 0x0056, 0x0057, 0x0058, \n-\t0x0059, 0x005A, 0x00B2,   NONE,   NONE,   NONE,   NONE,   NONE, \n-\t0x0030, 0x0031, 0x0032, 0x0033, 0x0034, 0x0035, 0x0036, 0x0037, \n+\t0x0000, 0x0001, 0x0002, 0x0003, 0x009C, 0x0009, 0x0086, 0x007F,\n+\t0x0097, 0x008D, 0x008E, 0x000B, 0x000C, 0x000D, 0x000E, 0x000F,\n+\t0x0010, 0x0011, 0x0012, 0x0013, 0x009D, 0x0085, 0x0008, 0x0087,\n+\t0x0018, 0x0019, 0x0092, 0x008F, 0x001C, 0x001D, 0x001E, 0x001F,\n+\t0x0080, 0x0081, 0x0082, 0x0083, 0x0084, 0x000A, 0x0017, 0x001B,\n+\t0x0088, 0x0089, 0x008A, 0x008B, 0x008C, 0x0005, 0x0006, 0x0007,\n+\t0x0090, 0x0091, 0x0016, 0x0093, 0x0094, 0x0095, 0x0096, 0x0004,\n+\t0x0098, 0x0099, 0x009A, 0x009B, 0x0014, 0x0015, 0x009E, 0x001A,\n+\t0x0020, 0x05D0, 0x05D1, 0x05D2, 0x05D3, 0x05D4, 0x05D5, 0x05D6,\n+\t0x05D7, 0x05D8, 0x00A2, 0x002E, 0x003C, 0x0028, 0x002B, 0x007C,\n+\t0x0026, 0x05D9, 0x05DA, 0x05DB, 0x05DC, 0x05DD, 0x05DE, 0x05DF,\n+\t0x05E0, 0x05E1, 0x0021, 0x0024, 0x002A, 0x0029, 0x003B, 0x00AC,\n+\t0x002D, 0x002F, 0x05E2, 0x05E3, 0x05E4, 0x05E5, 0x05E6, 0x05E7,\n+\t0x05E8, 0x05E9, 0x00A6, 0x002C, 0x0025, 0x005F, 0x003E, 0x003F,\n+\tNONE,   0x05EA,   NONE,   NONE, 0x00A0,   NONE,   NONE,   NONE,\n+\t0x2017, 0x0060, 0x003A, 0x0023, 0x0040, 0x0027, 0x003D, 0x0022,\n+\tNONE,   0x0061, 0x0062, 0x0063, 0x0064, 0x0065, 0x0066, 0x0067,\n+\t0x0068, 0x0069, 0x00AB, 0x00BB,   NONE,   NONE,   NONE, 0x00B1,\n+\t0x00B0, 0x006A, 0x006B, 0x006C, 0x006D, 0x006E, 0x006F, 0x0070,\n+\t0x0071, 0x0072,   NONE,   NONE,   NONE, 0x00B8,   NONE, 0x00A4,\n+\t0x00B5, 0x007E, 0x0073, 0x0074, 0x0075, 0x0076, 0x0077, 0x0078,\n+\t0x0079, 0x007A,   NONE,   NONE,   NONE,   NONE,   NONE, 0x00AE,\n+\t0x005E, 0x00A3, 0x00A5, 0x00B7, 0x00A9, 0x00A7, 0x00B6, 0x00BC,\n+\t0x00BD, 0x00BE, 0x005B, 0x005D, 0x00AF, 0x00A8, 0x00B4, 0x00D7,\n+\t0x007B, 0x0041, 0x0042, 0x0043, 0x0044, 0x0045, 0x0046, 0x0047,\n+\t0x0048, 0x0049, 0x00AD,   NONE,   NONE,   NONE,   NONE,   NONE,\n+\t0x007D, 0x004A, 0x004B, 0x004C, 0x004D, 0x004E, 0x004F, 0x0050,\n+\t0x0051, 0x0052, 0x00B9,   NONE,   NONE,   NONE,   NONE,   NONE,\n+\t0x005C, 0x00F7, 0x0053, 0x0054, 0x0055, 0x0056, 0x0057, 0x0058,\n+\t0x0059, 0x005A, 0x00B2,   NONE,   NONE,   NONE,   NONE,   NONE,\n+\t0x0030, 0x0031, 0x0032, 0x0033, 0x0034, 0x0035, 0x0036, 0x0037,\n \t0x0038, 0x0039, 0x00B3,   NONE,   NONE,   NONE,   NONE, 0x009F\n     };\n \n-    public Cp424()\n-    {\n-\tsuper(\"Cp424\", new String[] {\n-\t});\n-\tlookupTable = lookup;\n+    public Cp424() {\n+      super(\"Cp424\", new String[] {}, lookup);\n     }\n \n } // class Cp424"}, {"sha": "e38a482573a86f106b73c03a4534e8b7dff4ed28", "filename": "libjava/classpath/gnu/java/nio/charset/Cp437.java", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FCp437.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FCp437.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FCp437.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -37,7 +37,7 @@\n \n package gnu.java.nio.charset;\n \n-public class Cp437 extends ByteCharset\n+public final class Cp437 extends ByteCharset\n {\n \n   /**\n@@ -81,9 +81,7 @@ public class Cp437 extends ByteCharset\n \n     public Cp437()\n     {\n-\tsuper(\"Cp437\", new String[] {\n-\t});\n-\tlookupTable = lookup;\n+      super(\"Cp437\", new String[]{}, lookup);\n     }\n \n } // class Cp437"}, {"sha": "2187987ead74eb15d572cf6e5a74e6360b9ebaa9", "filename": "libjava/classpath/gnu/java/nio/charset/Cp737.java", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FCp737.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FCp737.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FCp737.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -37,7 +37,7 @@\n \n package gnu.java.nio.charset;\n \n-public class Cp737 extends ByteCharset\n+public final class Cp737 extends ByteCharset\n {\n \n   /**\n@@ -81,9 +81,7 @@ public class Cp737 extends ByteCharset\n \n     public Cp737()\n     {\n-\tsuper(\"Cp737\", new String[] {\n-\t});\n-\tlookupTable = lookup;\n+\tsuper(\"Cp737\", new String[] {}, lookup);\n     }\n \n } // class Cp737"}, {"sha": "f2fba4356e3614ca9cefb47fce7ea1494fa93dc4", "filename": "libjava/classpath/gnu/java/nio/charset/Cp775.java", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FCp775.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FCp775.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FCp775.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -37,7 +37,7 @@\n \n package gnu.java.nio.charset;\n \n-public class Cp775 extends ByteCharset\n+public final class Cp775 extends ByteCharset\n {\n \n   /**\n@@ -81,9 +81,7 @@ public class Cp775 extends ByteCharset\n \n     public Cp775()\n     {\n-\tsuper(\"Cp775\", new String[] {\n-\t});\n-\tlookupTable = lookup;\n+\tsuper(\"Cp775\", new String[] {}, lookup);\n     }\n \n } // class Cp775"}, {"sha": "48d4fb3448a2a3984fcd85db7194afc21658a83d", "filename": "libjava/classpath/gnu/java/nio/charset/Cp850.java", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FCp850.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FCp850.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FCp850.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -37,7 +37,7 @@\n \n package gnu.java.nio.charset;\n \n-public class Cp850 extends ByteCharset\n+public final class Cp850 extends ByteCharset\n {\n \n   /**\n@@ -81,9 +81,7 @@ public class Cp850 extends ByteCharset\n \n     public Cp850()\n     {\n-\tsuper(\"Cp850\", new String[] {\n-\t});\n-\tlookupTable = lookup;\n+\tsuper(\"Cp850\", new String[] {}, lookup);\n     }\n \n } // class Cp850"}, {"sha": "c550944b5261421702578eaf1feaa4d3ecda108e", "filename": "libjava/classpath/gnu/java/nio/charset/Cp852.java", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FCp852.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FCp852.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FCp852.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -37,7 +37,7 @@\n \n package gnu.java.nio.charset;\n \n-public class Cp852 extends ByteCharset\n+public final class Cp852 extends ByteCharset\n {\n \n   /**\n@@ -81,9 +81,7 @@ public class Cp852 extends ByteCharset\n \n     public Cp852()\n     {\n-\tsuper(\"Cp852\", new String[] {\n-\t});\n-\tlookupTable = lookup;\n+\tsuper(\"Cp852\", new String[] {}, lookup);\n     }\n \n } // class Cp852"}, {"sha": "141e891b67c162447ed4e8316e403134414bf83d", "filename": "libjava/classpath/gnu/java/nio/charset/Cp855.java", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FCp855.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FCp855.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FCp855.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -37,7 +37,7 @@\n \n package gnu.java.nio.charset;\n \n-public class Cp855 extends ByteCharset\n+public final class Cp855 extends ByteCharset\n {\n \n     /**\n@@ -81,10 +81,7 @@ public class Cp855 extends ByteCharset\n \n     public Cp855()\n     {\n-\tsuper(\"Cp855\", new String[] {\n-\t    \"cp-855\",\n-\t});\n-\tlookupTable = lookup;\n+\tsuper(\"Cp855\", new String[] {\"cp-855\",}, lookup);\n     }\n \n } // class Cp855"}, {"sha": "b517b0393c68d3b302d1540fe1e10376df802964", "filename": "libjava/classpath/gnu/java/nio/charset/Cp857.java", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FCp857.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FCp857.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FCp857.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -38,7 +38,7 @@\n \n package gnu.java.nio.charset;\n \n-public class Cp857 extends ByteCharset\n+public final class Cp857 extends ByteCharset\n {\n \n     /**\n@@ -82,10 +82,7 @@ public class Cp857 extends ByteCharset\n \n     public Cp857()\n     {\n-\tsuper(\"Cp857\", new String[] {\n-\t    \"cp-857\"\n-\t});\n-\tlookupTable = lookup;\n+\tsuper(\"Cp857\", new String[] {\"cp-857\"}, lookup);\n     }\n \n } // class Cp857"}, {"sha": "58a396446adca054060fb710b19eeeb2acfff983", "filename": "libjava/classpath/gnu/java/nio/charset/Cp860.java", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FCp860.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FCp860.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FCp860.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -38,7 +38,7 @@\n \n package gnu.java.nio.charset;\n \n-public class Cp860 extends ByteCharset\n+public final class Cp860 extends ByteCharset\n {\n \n     /**\n@@ -82,10 +82,7 @@ public class Cp860 extends ByteCharset\n \n     public Cp860()\n     {\n-\tsuper(\"Cp860\", new String[] {\n-\t    \"cp-860\"\n-\t});\n-\tlookupTable = lookup;\n+\tsuper(\"Cp860\", new String[] {\"cp-860\"}, lookup);\n     }\n \n } // class Cp860"}, {"sha": "cf5210d0a2a1493a9d22ff16946061b673cf54b0", "filename": "libjava/classpath/gnu/java/nio/charset/Cp861.java", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FCp861.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FCp861.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FCp861.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -38,7 +38,7 @@\n \n package gnu.java.nio.charset;\n \n-public class Cp861 extends ByteCharset\n+public final class Cp861 extends ByteCharset\n {\n \n     /**\n@@ -82,10 +82,7 @@ public class Cp861 extends ByteCharset\n \n     public Cp861()\n     {\n-\tsuper(\"Cp861\", new String[] {\n-\t    \"cp-861\"\n-\t});\n-\tlookupTable = lookup;\n+\tsuper(\"Cp861\", new String[] {\"cp-861\"}, lookup);\n     }\n \n } // class Cp861"}, {"sha": "f66118021a394768eb280169d5d44d45034063ca", "filename": "libjava/classpath/gnu/java/nio/charset/Cp862.java", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FCp862.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FCp862.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FCp862.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -38,7 +38,7 @@\n \n package gnu.java.nio.charset;\n \n-public class Cp862 extends ByteCharset\n+public final class Cp862 extends ByteCharset\n {\n \n     /**\n@@ -82,10 +82,7 @@ public class Cp862 extends ByteCharset\n \n     public Cp862()\n     {\n-\tsuper(\"Cp862\", new String[] {\n-\t    \"Cp-862\"\n-\t});\n-\tlookupTable = lookup;\n+\tsuper(\"Cp862\", new String[] {\"Cp-862\"}, lookup);\n     }\n \n } // class Cp862"}, {"sha": "03850234ef64cfb55f7add2fdeeeb04f17b1e7f1", "filename": "libjava/classpath/gnu/java/nio/charset/Cp863.java", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FCp863.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FCp863.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FCp863.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -38,7 +38,7 @@\n \n package gnu.java.nio.charset;\n \n-public class Cp863 extends ByteCharset\n+public final class Cp863 extends ByteCharset\n {\n \n     /**\n@@ -82,10 +82,7 @@ public class Cp863 extends ByteCharset\n \n     public Cp863()\n     {\n-\tsuper(\"Cp863\", new String[] {\n-\t    \"Cp-863\"\n-\t});\n-\tlookupTable = lookup;\n+\tsuper(\"Cp863\", new String[] {\"Cp-863\"}, lookup);\n     }\n \n } // class Cp863"}, {"sha": "028235dd30ccc8da2cbddc6d551c3544fd311ee2", "filename": "libjava/classpath/gnu/java/nio/charset/Cp864.java", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FCp864.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FCp864.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FCp864.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -38,7 +38,7 @@\n \n package gnu.java.nio.charset;\n \n-public class Cp864 extends ByteCharset\n+public final class Cp864 extends ByteCharset\n {\n \n     /**\n@@ -82,10 +82,7 @@ public class Cp864 extends ByteCharset\n \n     public Cp864()\n     {\n-\tsuper(\"Cp864\", new String[] {\n-\t    \"Cp-864\"\n-\t});\n-\tlookupTable = lookup;\n+\tsuper(\"Cp864\", new String[] {\"Cp-864\"}, lookup);\n     }\n \n } // class Cp864"}, {"sha": "c723e80c995de8c87d03615ca7fcafd286a5cd3b", "filename": "libjava/classpath/gnu/java/nio/charset/Cp865.java", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FCp865.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FCp865.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FCp865.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -38,7 +38,7 @@\n \n package gnu.java.nio.charset;\n \n-public class Cp865 extends ByteCharset\n+public final class Cp865 extends ByteCharset\n {\n \n     /**\n@@ -82,10 +82,7 @@ public class Cp865 extends ByteCharset\n \n     public Cp865()\n     {\n-\tsuper(\"Cp865\", new String[] {\n-\t    \"Cp-865\"\n-\t});\n-\tlookupTable = lookup;\n+\tsuper(\"Cp865\", new String[] {\"Cp-865\"}, lookup);\n     }\n \n } // class Cp865"}, {"sha": "103bca7c30a354be3439ca6b6c2dcb0ed5246eb3", "filename": "libjava/classpath/gnu/java/nio/charset/Cp866.java", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FCp866.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FCp866.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FCp866.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -38,7 +38,7 @@\n \n package gnu.java.nio.charset;\n \n-public class Cp866 extends ByteCharset\n+public final class Cp866 extends ByteCharset\n {\n \n     /**\n@@ -82,10 +82,7 @@ public class Cp866 extends ByteCharset\n \n     public Cp866()\n     {\n-\tsuper(\"Cp866\", new String[] {\n-\t    \"cp-866\"\n-\t});\n-\tlookupTable = lookup;\n+\tsuper(\"Cp866\", new String[] {\"cp-866\"}, lookup);\n     }\n \n } // class Cp866"}, {"sha": "0632b37418ce02fa5072e228bb7fb9608afce877", "filename": "libjava/classpath/gnu/java/nio/charset/Cp869.java", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FCp869.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FCp869.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FCp869.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -38,7 +38,7 @@\n \n package gnu.java.nio.charset;\n \n-public class Cp869 extends ByteCharset\n+public final class Cp869 extends ByteCharset\n {\n \n     /**\n@@ -82,10 +82,7 @@ public class Cp869 extends ByteCharset\n \n     public Cp869()\n     {\n-\tsuper(\"Cp869\", new String[] {\n-\t    \"Cp-869\"\n-\t});\n-\tlookupTable = lookup;\n+\tsuper(\"Cp869\", new String[] {\"Cp-869\"}, lookup);\n     }\n \n } // class Cp869"}, {"sha": "f6e52c485ea55857bfc27df5dedfe9745b6efed8", "filename": "libjava/classpath/gnu/java/nio/charset/Cp874.java", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FCp874.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FCp874.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FCp874.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -37,7 +37,7 @@\n \n package gnu.java.nio.charset;\n \n-public class Cp874 extends ByteCharset\n+public final class Cp874 extends ByteCharset\n {\n \n   /**\n@@ -81,9 +81,7 @@ public class Cp874 extends ByteCharset\n \n     public Cp874()\n     {\n-\tsuper(\"Cp874\", new String[] {\n-\t});\n-\tlookupTable = lookup;\n+\tsuper(\"Cp874\", new String[] {}, lookup);\n     }\n \n } // class Cp874"}, {"sha": "479b6e53434db629a217efb5c36783a620f319c3", "filename": "libjava/classpath/gnu/java/nio/charset/EncodingHelper.java", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FEncodingHelper.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FEncodingHelper.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FEncodingHelper.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -57,10 +57,10 @@\n      * Contains the mapping from java.io canonical names \n      * to java.nio canonical names.\n      */\n-    private static HashMap canonicalNames;\n+    private static final HashMap<String,String> canonicalNames;\n \n     static {\n-\tcanonicalNames = new HashMap();\n+\tcanonicalNames = new HashMap<String,String>();\n \tcanonicalNames.put(\"US-ASCII\", \"ASCII\");\n \tcanonicalNames.put(\"windows-1250\", \"Cp1250\");\n \tcanonicalNames.put(\"windows-1251\", \"Cp1251\");\n@@ -94,7 +94,6 @@\n      */\n     public static String getDefaultEncoding()\n     {\n-\tString encoding;\n \ttry \n \t    {\n \t\treturn System.getProperty(\"file.encoding\");"}, {"sha": "19a538d9fe40d7b7209249e2f3011ca78f5144a0", "filename": "libjava/classpath/gnu/java/nio/charset/ISO_8859_1.java", "status": "modified", "additions": 28, "deletions": 35, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FISO_8859_1.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FISO_8859_1.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FISO_8859_1.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -48,6 +48,7 @@\n  * ISO-8859-1 charset.\n  *\n  * @author Jesse Rosenstock\n+ * @modified Ian Rogers\n  */\n final class ISO_8859_1 extends Charset\n {\n@@ -98,6 +99,19 @@ public CharsetEncoder newEncoder ()\n \n   private static final class Decoder extends CharsetDecoder\n   {\n+    /** Helper to decode loops */\n+    private static final ByteDecodeLoopHelper helper = new ByteDecodeLoopHelper()\n+    {\n+      protected boolean isMappable(byte b)\n+      {\n+        return true;\n+      }\n+      protected char mapToChar(byte b)\n+      {\n+        return (char)(b & 0xFF);\n+      }\n+    };\n+    \n     // Package-private to avoid a trampoline constructor.\n     Decoder (Charset cs)\n     {\n@@ -106,26 +120,24 @@ private static final class Decoder extends CharsetDecoder\n \n     protected CoderResult decodeLoop (ByteBuffer in, CharBuffer out)\n     {\n-      // TODO: Optimize this in the case in.hasArray() / out.hasArray()\n-      while (in.hasRemaining ())\n-      {\n-        byte b = in.get ();\n-\n-        if (!out.hasRemaining ())\n-          {\n-            in.position (in.position () - 1);\n-            return CoderResult.OVERFLOW;\n-          }\n-\n-        out.put ((char) (b & 0xFF));\n-      }\n-\n-      return CoderResult.UNDERFLOW;\n+      return helper.decodeLoop(in, out);\n     }\n   }\n \n   private static final class Encoder extends CharsetEncoder\n   {\n+    /** Helper to encode loops */\n+    private static final ByteEncodeLoopHelper helper = new ByteEncodeLoopHelper()\n+    {\n+      protected boolean isMappable(char c)\n+      {\n+        return c <= 0xff;\n+      }\n+      protected byte mapToByte(char c)\n+      {\n+        return (byte)c;\n+      }\n+    };\n     // Package-private to avoid a trampoline constructor.\n     Encoder (Charset cs)\n     {\n@@ -147,26 +159,7 @@ public boolean canEncode(CharSequence cs)\n \n     protected CoderResult encodeLoop (CharBuffer in, ByteBuffer out)\n     {\n-      // TODO: Optimize this in the case in.hasArray() / out.hasArray()\n-      while (in.hasRemaining ())\n-      {\n-        char c = in.get ();\n-\n-        if (c > 0xFF)\n-          {\n-            in.position (in.position () - 1);\n-            return CoderResult.unmappableForLength (1);\n-          }\n-        if (!out.hasRemaining ())\n-          {\n-            in.position (in.position () - 1);\n-            return CoderResult.OVERFLOW;\n-          }\n-\n-        out.put ((byte) c);\n-      }\n-\n-      return CoderResult.UNDERFLOW;\n+      return helper.encodeLoop(in, out);\n     }\n   }\n }"}, {"sha": "3bbd42f3b49ae4d1dbb13881abdbde771ddc3779", "filename": "libjava/classpath/gnu/java/nio/charset/ISO_8859_13.java", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FISO_8859_13.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FISO_8859_13.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FISO_8859_13.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -41,7 +41,7 @@\n /**\n  * Encoding table for ISO-8859-13, ISO Latin-7 char set.\n  */\n-public class ISO_8859_13 extends ByteCharset\n+public final class ISO_8859_13 extends ByteCharset\n {\n \n   /**\n@@ -96,8 +96,7 @@ public ISO_8859_13()\n \t  \"8859_13\", \n \t  \"cp921\",\n \t  \"921\"\n-      });\n-      lookupTable = lookup;\n+      }, lookup);\n  }\n   \n } // class ISO_8859_13"}, {"sha": "df2265ac549d1c0ba5c89879e341d9ddc2192ddf", "filename": "libjava/classpath/gnu/java/nio/charset/ISO_8859_15.java", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FISO_8859_15.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FISO_8859_15.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FISO_8859_15.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -41,7 +41,7 @@\n /**\n  * Encoding table for ISO-8859-15, ISO Latin-9 char set.\n  */\n-public class ISO_8859_15 extends ByteCharset\n+public final class ISO_8859_15 extends ByteCharset\n {\n \n   /**\n@@ -103,8 +103,7 @@ public ISO_8859_15()\n \t  \"cp923\", \n \t  \"923\", \n \t  \"windows-28605\"\n-      });\n-      lookupTable = lookup;\n+      }, lookup);\n  }\n   \n } // class ISO_8859_15"}, {"sha": "dbe2b4dbf9672a92427ce0445159bad4b25b9f6d", "filename": "libjava/classpath/gnu/java/nio/charset/ISO_8859_2.java", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FISO_8859_2.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FISO_8859_2.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FISO_8859_2.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -41,7 +41,7 @@\n /**\n  * Encoding table for ISO-8859-2, ISO Latin-2 char set.\n  */\n-public class ISO_8859_2 extends ByteCharset\n+public final class ISO_8859_2 extends ByteCharset\n {\n \n   /**\n@@ -102,8 +102,7 @@ public ISO_8859_2()\n \t  \"cp912\",\n \t  \"912\", \n \t  \"windows-28592\"\n-      });\n-      lookupTable = lookup;\n+      }, lookup);\n  }\n   \n } // class ISO_8859_2"}, {"sha": "567379e7de49e8f0ef75932ac8988ca0db8b9772", "filename": "libjava/classpath/gnu/java/nio/charset/ISO_8859_3.java", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FISO_8859_3.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FISO_8859_3.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FISO_8859_3.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -41,7 +41,7 @@\n /**\n  * Encoding table for ISO-8859-3, ISO Latin-3 char set.\n  */\n-public class ISO_8859_3 extends ByteCharset\n+public final class ISO_8859_3 extends ByteCharset\n {\n \n   /**\n@@ -101,8 +101,7 @@ public ISO_8859_3()\n \t  \"cp913\", \n \t  \"913\", \n \t  \"windows-28593\"\n-      });\n-      lookupTable = lookup;\n+      }, lookup);\n  }\n   \n } // class ISO_8859_3"}, {"sha": "ca062278a7a84d350ee7b4b811f089ded96b1399", "filename": "libjava/classpath/gnu/java/nio/charset/ISO_8859_4.java", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FISO_8859_4.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FISO_8859_4.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FISO_8859_4.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -41,7 +41,7 @@\n /**\n  * Encoding table for ISO-8859-4, ISO Latin-4 char set.\n  */\n-public class ISO_8859_4 extends ByteCharset\n+public final class ISO_8859_4 extends ByteCharset\n {\n \n   /**\n@@ -102,8 +102,7 @@ public ISO_8859_4()\n \t  \"cp914\",\n \t  \"914\", \n \t  \"windows-28594\"\n-      });\n-      lookupTable = lookup;\n+      }, lookup);\n  }\n   \n } // class ISO_8859_4"}, {"sha": "70496ce4931f63a2cea2f43ff774b0405858d461", "filename": "libjava/classpath/gnu/java/nio/charset/ISO_8859_5.java", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FISO_8859_5.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FISO_8859_5.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FISO_8859_5.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -41,7 +41,7 @@\n /**\n  * Encoding table for ISO-8859-5, ISO cyrillic char set.\n  */\n-public class ISO_8859_5 extends ByteCharset\n+public final class ISO_8859_5 extends ByteCharset\n {\n \n   /**\n@@ -100,8 +100,7 @@ public ISO_8859_5()\n \t  \"cp915\", \n \t  \"915\", \n \t  \"windows-28595\"\n-      });\n-      lookupTable = lookup;\n+      }, lookup);\n  }\n   \n } // class ISO_8859_5"}, {"sha": "dc7a9bef8caeea9aa339be1052908283b2be6bc1", "filename": "libjava/classpath/gnu/java/nio/charset/ISO_8859_6.java", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FISO_8859_6.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FISO_8859_6.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FISO_8859_6.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -41,7 +41,7 @@\n /**\n  * Encoding table for ISO-8859-6, ISO Arabic char set.\n  */\n-public class ISO_8859_6 extends ByteCharset\n+public final class ISO_8859_6 extends ByteCharset\n {\n \n   /**\n@@ -104,8 +104,7 @@ public ISO_8859_6()\n \t  \"windows-28596\", \n \t  \"ISO-8859-6-I\", \n \t  \"ISO-8859-6-E\"\n-      });\n-      lookupTable = lookup;\n+      }, lookup);\n  }\n   \n } // class ISO_8859_6"}, {"sha": "195f16094584a172392d6d16d921ee3dbb94163a", "filename": "libjava/classpath/gnu/java/nio/charset/ISO_8859_7.java", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FISO_8859_7.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FISO_8859_7.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FISO_8859_7.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -41,7 +41,7 @@\n /**\n  * Encoding table for ISO-8859-7, ISO Latin/Greek char set.\n  */\n-public class ISO_8859_7 extends ByteCharset\n+public final class ISO_8859_7 extends ByteCharset\n {\n \n   /**\n@@ -103,8 +103,7 @@ public ISO_8859_7()\n \t  \"cp813\",\n \t  \"813\",\n \t  \"windows-28597\"\n-      });\n-      lookupTable = lookup;\n+      }, lookup);\n  }\n   \n } // class ISO_8859_7"}, {"sha": "b58030f174b3629a813db7462570c369fafb78eb", "filename": "libjava/classpath/gnu/java/nio/charset/ISO_8859_8.java", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FISO_8859_8.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FISO_8859_8.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FISO_8859_8.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -41,7 +41,7 @@\n /**\n  * Encoding table for ISO-8859-8, ISO Latin/Hebrew char set.\n  */\n-public class ISO_8859_8 extends ByteCharset\n+public final class ISO_8859_8 extends ByteCharset\n {\n \n   /**\n@@ -102,8 +102,7 @@ public ISO_8859_8()\n \t  \"cp916\",\n \t  \"916\",\n \t  \"windows-28598\"\n-      });\n-      lookupTable = lookup;\n+      }, lookup);\n  }\n   \n } // class ISO_8859_8"}, {"sha": "83fb5a222d78e96ae7dc3c0f19fc1121750e070c", "filename": "libjava/classpath/gnu/java/nio/charset/ISO_8859_9.java", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FISO_8859_9.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FISO_8859_9.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FISO_8859_9.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -41,7 +41,7 @@\n /**\n  * Encoding table for ISO-8859-9, ISO Latin-5 char set.\n  */\n-public class ISO_8859_9 extends ByteCharset\n+public final class ISO_8859_9 extends ByteCharset\n {\n \n   /**\n@@ -102,8 +102,7 @@ public ISO_8859_9()\n \t  \"920\", \n \t  \"windows-28599\",\n \t  \"ECMA-128\"\n-      });\n-      lookupTable = lookup;\n+      }, lookup);\n  }\n   \n } // class ISO_8859_9"}, {"sha": "20eb8b198ad8298c558a29c82015d9391d2b8fb2", "filename": "libjava/classpath/gnu/java/nio/charset/KOI_8.java", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FKOI_8.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FKOI_8.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FKOI_8.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -41,7 +41,7 @@\n /**\n  * Encoding table for the KOI8 cyrillic char set.\n  */\n-public class KOI_8 extends ByteCharset\n+public final class KOI_8 extends ByteCharset\n {\n \n   /**\n@@ -94,8 +94,7 @@ public KOI_8()\n \t  \"koi8r\", \n \t  \"koi-8-r\",\n \t  \"koi\"\n-      });\n-      lookupTable = lookup;\n+      }, lookup);\n  }\n   \n } // class KOI_8"}, {"sha": "f7cf81a2509449d66a4b6ea690644078235e90be", "filename": "libjava/classpath/gnu/java/nio/charset/MS874.java", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FMS874.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FMS874.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FMS874.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -37,7 +37,7 @@\n \n package gnu.java.nio.charset;\n \n-public class MS874 extends ByteCharset\n+public final class MS874 extends ByteCharset\n {\n \n   /**\n@@ -81,9 +81,7 @@ public class MS874 extends ByteCharset\n \n     public MS874()\n     {\n-\tsuper(\"MS874\", new String[] {\n-\t});\n-\tlookupTable = lookup;\n+\tsuper(\"MS874\", new String[] {}, lookup);\n     }\n \n } // class MS874"}, {"sha": "ce085436530984cce2aa9f277b183ca03b6d69c0", "filename": "libjava/classpath/gnu/java/nio/charset/MacCentralEurope.java", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FMacCentralEurope.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FMacCentralEurope.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FMacCentralEurope.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -37,7 +37,7 @@\n \n package gnu.java.nio.charset;\n \n-public class MacCentralEurope extends ByteCharset\n+public final class MacCentralEurope extends ByteCharset\n {\n \n   /**\n@@ -81,9 +81,7 @@ public class MacCentralEurope extends ByteCharset\n \n     public MacCentralEurope()\n     {\n-\tsuper(\"MacCentralEurope\", new String[] {\n-\t});\n-\tlookupTable = lookup;\n+\tsuper(\"MacCentralEurope\", new String[] {}, lookup);\n     }\n \n } // class MacCentralEurope"}, {"sha": "3bb19f5e2ed7f0aed79b6c3fcc789141d5dc7588", "filename": "libjava/classpath/gnu/java/nio/charset/MacCroatian.java", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FMacCroatian.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FMacCroatian.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FMacCroatian.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -37,7 +37,7 @@\n \n package gnu.java.nio.charset;\n \n-public class MacCroatian extends ByteCharset\n+public final class MacCroatian extends ByteCharset\n {\n \n   /**\n@@ -81,9 +81,7 @@ public class MacCroatian extends ByteCharset\n \n     public MacCroatian()\n     {\n-\tsuper(\"MacCroatian\", new String[] {\n-\t});\n-\tlookupTable = lookup;\n+\tsuper(\"MacCroatian\", new String[] {}, lookup);\n     }\n \n } // class MacCroatian"}, {"sha": "b1984e57ab1b6f408b30d6c7ca54fec6b9d2fe98", "filename": "libjava/classpath/gnu/java/nio/charset/MacCyrillic.java", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FMacCyrillic.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FMacCyrillic.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FMacCyrillic.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -37,7 +37,7 @@\n \n package gnu.java.nio.charset;\n \n-public class MacCyrillic extends ByteCharset\n+public final class MacCyrillic extends ByteCharset\n {\n \n     /**\n@@ -81,9 +81,7 @@ public class MacCyrillic extends ByteCharset\n \n     public MacCyrillic()\n     {\n-\tsuper(\"MacCyrillic\", new String[] {\n-\t});\n-\tlookupTable = lookup;\n+\tsuper(\"MacCyrillic\", new String[] {}, lookup);\n     }\n \n } // class MacCyrillic"}, {"sha": "ad2f1c851c4843a0583d6576b78d5f64e65aa56c", "filename": "libjava/classpath/gnu/java/nio/charset/MacDingbat.java", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FMacDingbat.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FMacDingbat.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FMacDingbat.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -37,7 +37,7 @@\n \n package gnu.java.nio.charset;\n \n-public class MacDingbat extends ByteCharset\n+public final class MacDingbat extends ByteCharset\n {\n \n   /**\n@@ -81,9 +81,7 @@ public class MacDingbat extends ByteCharset\n \n     public MacDingbat()\n     {\n-\tsuper(\"MacDingbat\", new String[] {\n-\t});\n-\tlookupTable = lookup;\n+\tsuper(\"MacDingbat\", new String[] {}, lookup);\n     }\n \n } // class MacDingbat"}, {"sha": "6d1522874089c81d847ce900a50d6face999df95", "filename": "libjava/classpath/gnu/java/nio/charset/MacGreek.java", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FMacGreek.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FMacGreek.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FMacGreek.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -37,7 +37,7 @@\n \n package gnu.java.nio.charset;\n \n-public class MacGreek extends ByteCharset\n+public final class MacGreek extends ByteCharset\n {\n \n   /**\n@@ -81,9 +81,7 @@ public class MacGreek extends ByteCharset\n \n     public MacGreek()\n     {\n-\tsuper(\"MacGreek\", new String[] {\n-\t});\n-\tlookupTable = lookup;\n+\tsuper(\"MacGreek\", new String[] {}, lookup);\n     }\n \n } // class MacGreek"}, {"sha": "a8eb7036c176d671e1e19a021aadf6fd6d5f6487", "filename": "libjava/classpath/gnu/java/nio/charset/MacIceland.java", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FMacIceland.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FMacIceland.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FMacIceland.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -37,7 +37,7 @@\n \n package gnu.java.nio.charset;\n \n-public class MacIceland extends ByteCharset\n+public final class MacIceland extends ByteCharset\n {\n \n   /**\n@@ -81,9 +81,7 @@ public class MacIceland extends ByteCharset\n \n     public MacIceland()\n     {\n-\tsuper(\"MacIceland\", new String[] {\n-\t});\n-\tlookupTable = lookup;\n+\tsuper(\"MacIceland\", new String[] {}, lookup);\n     }\n \n } // class MacIceland"}, {"sha": "72738a2aa23873958030abf9ab0172a428c216b1", "filename": "libjava/classpath/gnu/java/nio/charset/MacRoman.java", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FMacRoman.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FMacRoman.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FMacRoman.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -37,7 +37,7 @@\n \n package gnu.java.nio.charset;\n \n-public class MacRoman extends ByteCharset\n+public final class MacRoman extends ByteCharset\n {\n \n   /**\n@@ -81,9 +81,7 @@ public class MacRoman extends ByteCharset\n \n     public MacRoman()\n     {\n-\tsuper(\"MacRoman\", new String[] {\n-\t});\n-\tlookupTable = lookup;\n+\tsuper(\"MacRoman\", new String[] {}, lookup);\n     }\n \n } // class MacRoman"}, {"sha": "e05e94025e6a5f7447a7073a3b12cbcc9826528a", "filename": "libjava/classpath/gnu/java/nio/charset/MacRomania.java", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FMacRomania.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FMacRomania.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FMacRomania.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -37,7 +37,7 @@\n \n package gnu.java.nio.charset;\n \n-public class MacRomania extends ByteCharset\n+public final class MacRomania extends ByteCharset\n {\n \n   /**\n@@ -81,9 +81,7 @@ public class MacRomania extends ByteCharset\n \n     public MacRomania()\n     {\n-\tsuper(\"MacRomania\", new String[] {\n-\t});\n-\tlookupTable = lookup;\n+\tsuper(\"MacRomania\", new String[] {}, lookup);\n     }\n \n } // class MacRomania"}, {"sha": "9878efd89d37e527639ab5af05686c409fe0932d", "filename": "libjava/classpath/gnu/java/nio/charset/MacSymbol.java", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FMacSymbol.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FMacSymbol.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FMacSymbol.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -37,7 +37,7 @@\n \n package gnu.java.nio.charset;\n \n-public class MacSymbol extends ByteCharset\n+public final class MacSymbol extends ByteCharset\n {\n \n   /**\n@@ -81,9 +81,7 @@ public class MacSymbol extends ByteCharset\n \n     public MacSymbol()\n     {\n-\tsuper(\"MacSymbol\", new String[] {\n-\t});\n-\tlookupTable = lookup;\n+\tsuper(\"MacSymbol\", new String[] {}, lookup);\n     }\n \n } // class MacSymbol"}, {"sha": "daed7563033acdd26896484d07543e003c5975f4", "filename": "libjava/classpath/gnu/java/nio/charset/MacThai.java", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FMacThai.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FMacThai.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FMacThai.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -37,7 +37,7 @@\n \n package gnu.java.nio.charset;\n \n-public class MacThai extends ByteCharset\n+public final class MacThai extends ByteCharset\n {\n \n   /**\n@@ -81,9 +81,7 @@ public class MacThai extends ByteCharset\n \n     public MacThai()\n     {\n-\tsuper(\"MacThai\", new String[] {\n-\t});\n-\tlookupTable = lookup;\n+\tsuper(\"MacThai\", new String[] {}, lookup);\n     }\n \n } // class MacThai"}, {"sha": "b623ee39a826bea4bd07477d48cde4342566c054", "filename": "libjava/classpath/gnu/java/nio/charset/MacTurkish.java", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FMacTurkish.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FMacTurkish.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FMacTurkish.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -37,7 +37,7 @@\n \n package gnu.java.nio.charset;\n \n-public class MacTurkish extends ByteCharset\n+public final class MacTurkish extends ByteCharset\n {\n \n   /**\n@@ -81,9 +81,7 @@ public class MacTurkish extends ByteCharset\n \n     public MacTurkish()\n     {\n-\tsuper(\"MacTurkish\", new String[] {\n-\t});\n-\tlookupTable = lookup;\n+\tsuper(\"MacTurkish\", new String[] {}, lookup);\n     }\n \n } // class MacTurkish"}, {"sha": "d3b71a612659c120b58eac9dded7b9d9959e9968", "filename": "libjava/classpath/gnu/java/nio/charset/Provider.java", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FProvider.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FProvider.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FProvider.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -67,14 +67,14 @@ public final class Provider extends CharsetProvider\n    * are all lower-case to allow case-insensitive retrieval of\n    * Charset instances. \n    */\n-  private final HashMap canonicalNames;\n+  private final HashMap<String, String> canonicalNames;\n \n   /**\n    * Map from lower-case canonical name to Charset.\n    * TODO: We may want to use soft references.  We would then need to keep\n    * track of the class name to regenerate the object.\n    */\n-  private final HashMap charsets;\n+  private final HashMap<String, Charset> charsets;\n \n   /**\n    * We don't load all available charsets at the start\n@@ -85,8 +85,8 @@ public final class Provider extends CharsetProvider\n   Provider ()\n   {\n     extendedLoaded = false;\n-    canonicalNames = new HashMap ();\n-    charsets = new HashMap ();\n+    canonicalNames = new HashMap<String,String> ();\n+    charsets = new HashMap<String,Charset> ();\n \n     // US-ASCII aka ISO646-US\n     addCharset (new US_ASCII ());\n@@ -203,7 +203,7 @@ private synchronized void loadExtended ()\n     extendedLoaded = true;\n   }\n \n-  public Iterator charsets ()\n+  public Iterator<Charset> charsets ()\n   {\n     loadExtended();\n     return Collections.unmodifiableCollection (charsets.values ())\n@@ -250,18 +250,18 @@ private void addCharset (Charset cs)\n      */  \n     canonicalNames.put(canonicalName, canonicalName);\n \n-    for (Iterator i = cs.aliases ().iterator (); i.hasNext (); )\n+    for (Iterator<String> i = cs.aliases ().iterator (); i.hasNext (); )\n       canonicalNames.put (((String) i.next()).toLowerCase(), canonicalName);\n   }\n \n   public static synchronized Provider provider ()\n   {\n     // The default provider is safe to instantiate.\n     if (singleton == null)\n-      singleton = (Provider) AccessController.doPrivileged\n-\t(new PrivilegedAction()\n+      singleton = AccessController.doPrivileged\n+\t(new PrivilegedAction<Provider>()\n \t  {\n-\t    public Object run()\n+\t    public Provider run()\n \t    {\n \t      return new Provider();\n \t    }"}, {"sha": "b09c43e61c1460523b9382840582db245ecd426a", "filename": "libjava/classpath/gnu/java/nio/charset/US_ASCII.java", "status": "modified", "additions": 28, "deletions": 40, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FUS_ASCII.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FUS_ASCII.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FUS_ASCII.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -48,6 +48,7 @@\n  * US-ASCII charset.\n  *\n  * @author Jesse Rosenstock\n+ * @modified Ian Rogers\n  */\n final class US_ASCII extends Charset\n {\n@@ -95,6 +96,19 @@ public CharsetEncoder newEncoder ()\n \n   private static final class Decoder extends CharsetDecoder\n   {\n+    /** Helper to decode loops */\n+    private static final ByteDecodeLoopHelper helper = new ByteDecodeLoopHelper()\n+    {\n+      protected boolean isMappable(byte b)\n+      {\n+        return b >= 0;\n+      }\n+      protected char mapToChar(byte b)\n+      {\n+        return (char)b;\n+      }\n+    };\n+    \n     // Package-private to avoid a trampoline constructor.\n     Decoder (Charset cs)\n     {\n@@ -103,31 +117,24 @@ private static final class Decoder extends CharsetDecoder\n \n     protected CoderResult decodeLoop (ByteBuffer in, CharBuffer out)\n     {\n-      // TODO: Optimize this in the case in.hasArray() / out.hasArray()\n-      while (in.hasRemaining ())\n-        {\n-          byte b = in.get ();\n-\n-          if (b < 0)\n-            {\n-              in.position (in.position () - 1);\n-              return CoderResult.malformedForLength (1);\n-            }\n-          if (!out.hasRemaining ())\n-            {\n-              in.position (in.position () - 1);\n-              return CoderResult.OVERFLOW;\n-            }\n-\n-          out.put ((char) b);\n-        }\n-\n-      return CoderResult.UNDERFLOW;\n+      return helper.decodeLoop(in, out);\n     }\n   }\n \n   private static final class Encoder extends CharsetEncoder\n   {\n+    /** Helper to encode loops */\n+    private static final ByteEncodeLoopHelper helper = new ByteEncodeLoopHelper()\n+    {\n+      protected boolean isMappable(char c)\n+      {\n+        return c <= 0x7f;\n+      }\n+      protected byte mapToByte(char c)\n+      {\n+        return (byte)c;\n+      }\n+    };\n     // Package-private to avoid a trampoline constructor.\n     Encoder (Charset cs)\n     {\n@@ -149,26 +156,7 @@ public boolean canEncode(CharSequence cs)\n \n     protected CoderResult encodeLoop (CharBuffer in, ByteBuffer out)\n     {\n-      // TODO: Optimize this in the case in.hasArray() / out.hasArray()\n-      while (in.hasRemaining ())\n-      {\n-        char c = in.get ();\n-\n-        if (c > 0x7f)\n-          {\n-            in.position (in.position () - 1);\n-            return CoderResult.unmappableForLength (1);\n-          }\n-        if (!out.hasRemaining ())\n-          {\n-            in.position (in.position () - 1);\n-            return CoderResult.OVERFLOW;\n-          }\n-\n-        out.put ((byte) c);\n-      }\n-\n-      return CoderResult.UNDERFLOW;\n+      return helper.encodeLoop(in, out);\n     }\n   }\n }"}, {"sha": "f8fc90ae28124f4d1888c23a31d024ce35ff4cca", "filename": "libjava/classpath/gnu/java/nio/charset/Windows1250.java", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FWindows1250.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FWindows1250.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FWindows1250.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -42,7 +42,7 @@\n  * Encoding table for Windows-1250-Latin-1, \n  * aka cp1250 or Windows-1250 or whatever.\n  */\n-public class Windows1250 extends ByteCharset\n+public final class Windows1250 extends ByteCharset\n {\n \n   /**\n@@ -95,8 +95,7 @@ public Windows1250()\n \t  \"cp_1250\", \n \t  \"windows1250\",\n \t  \"windows_1250\" \n-      });\n-      lookupTable = lookup;\n+      }, lookup);\n  }\n   \n } // class Windows1250"}, {"sha": "51f289e2aa937c016846684eac6b09fbca76ded7", "filename": "libjava/classpath/gnu/java/nio/charset/Windows1251.java", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FWindows1251.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FWindows1251.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FWindows1251.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -42,7 +42,7 @@\n  * Encoding table for Windows-1251 Cyrillic char set.\n  * aka cp1251 or Windows-1251 or whatever.\n  */\n-public class Windows1251 extends ByteCharset\n+public final class Windows1251 extends ByteCharset\n {\n \n   /**\n@@ -93,8 +93,7 @@ public Windows1251()\n \t  \"cp_1251\", \n \t  \"windows1251\",\n \t  \"windows_1251\" \n-      });\n-      lookupTable = lookup;\n+      }, lookup);\n  }\n   \n } // class Windows1251"}, {"sha": "03d15802c8ad85499fe0db3a7ef08db5e0a69864", "filename": "libjava/classpath/gnu/java/nio/charset/Windows1252.java", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FWindows1252.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FWindows1252.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FWindows1252.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -42,7 +42,7 @@\n  * Encoding table for Windows-1252-Latin-1, \n  * aka cp1252 or Windows-1252 or whatever.\n  */\n-public class Windows1252 extends ByteCharset\n+public final class Windows1252 extends ByteCharset\n {\n \n   /**\n@@ -92,8 +92,7 @@ public Windows1252()\n \t  \"windows-1252\",\n \t  \"cp1252\", \n \t  \"cp-1252\"\n-      });\n-      lookupTable = lookup;\n+      }, lookup);\n  }\n   \n } // class Windows1252"}, {"sha": "9e5b1f769dcb62f587db1a8c15adc35a6bf3df04", "filename": "libjava/classpath/gnu/java/nio/charset/Windows1253.java", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FWindows1253.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FWindows1253.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FWindows1253.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -42,7 +42,7 @@\n  * Encoding table for Windows-1253 Greek char set.\n  * aka cp1253 or Windows-1253 or whatever.\n  */\n-public class Windows1253 extends ByteCharset\n+public final class Windows1253 extends ByteCharset\n {\n \n   /**\n@@ -93,8 +93,7 @@ public Windows1253()\n \t  \"cp_1253\", \n \t  \"windows1253\",\n \t  \"windows_1253\" \n-      });\n-      lookupTable = lookup;\n+      }, lookup);\n  }\n   \n } // class Windows1253"}, {"sha": "9025421b33e7f85a963c9eb173b8b75a3baf5c2a", "filename": "libjava/classpath/gnu/java/nio/charset/Windows1254.java", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FWindows1254.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FWindows1254.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FWindows1254.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -42,7 +42,7 @@\n  * Encoding table for Windows-1254 Turkish char set.\n  * aka cp1254 or Windows-1254 or whatever.\n  */\n-public class Windows1254 extends ByteCharset\n+public final class Windows1254 extends ByteCharset\n {\n \n   /**\n@@ -93,8 +93,7 @@ public Windows1254()\n \t  \"cp_1254\", \n \t  \"windows1254\",\n \t  \"windows_1254\" \n-      });\n-      lookupTable = lookup;\n+      }, lookup);\n  }\n   \n } // class Windows1254"}, {"sha": "61787d184d097992616ab39c42d6ee79ff2c5fc0", "filename": "libjava/classpath/gnu/java/nio/charset/Windows1255.java", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FWindows1255.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FWindows1255.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FWindows1255.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -42,7 +42,7 @@\n  * Encoding table for Windows-1255 Hebrew char set.\n  * aka cp1255 or Windows-1255 or whatever.\n  */\n-public class Windows1255 extends ByteCharset\n+public final class Windows1255 extends ByteCharset\n {\n \n   /**\n@@ -93,8 +93,7 @@ public Windows1255()\n \t  \"cp_1255\", \n \t  \"windows1255\",\n \t  \"windows_1255\" \n-      });\n-      lookupTable = lookup;\n+      }, lookup);\n  }\n   \n } // class Windows1255"}, {"sha": "cf88c21b47d2ab5951e9462586cfd7af81aae125", "filename": "libjava/classpath/gnu/java/nio/charset/Windows1256.java", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FWindows1256.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FWindows1256.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FWindows1256.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -42,7 +42,7 @@\n  * Encoding table for Windows-1256 Arabic char set.\n  * aka cp1256 or Windows-1256 or whatever.\n  */\n-public class Windows1256 extends ByteCharset\n+public final class Windows1256 extends ByteCharset\n {\n \n   /**\n@@ -93,8 +93,7 @@ public Windows1256()\n \t  \"cp_1256\", \n \t  \"windows1256\",\n \t  \"windows_1256\" \n-      });\n-      lookupTable = lookup;\n+      }, lookup);\n  }\n   \n } // class Windows1256"}, {"sha": "2d281d9cd26b360dd6bbcaa3dc93ecdfb9ada782", "filename": "libjava/classpath/gnu/java/nio/charset/Windows1257.java", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FWindows1257.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FWindows1257.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FWindows1257.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -42,7 +42,7 @@\n  * Encoding table for Windows-1257 Baltic char set.\n  * aka cp1257 or Windows-1257 or whatever.\n  */\n-public class Windows1257 extends ByteCharset\n+public final class Windows1257 extends ByteCharset\n {\n \n   /**\n@@ -93,8 +93,7 @@ public Windows1257()\n \t  \"cp_1257\", \n \t  \"windows1257\",\n \t  \"windows_1257\" \n-      });\n-      lookupTable = lookup;\n+      }, lookup);\n  }\n   \n } // class Windows1257"}, {"sha": "63ef37f1a3140a55e0e02933824dcf467db1dd1b", "filename": "libjava/classpath/gnu/java/nio/charset/Windows1258.java", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FWindows1258.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FWindows1258.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FWindows1258.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -42,7 +42,7 @@\n  * Encoding table for Windows-1258 Arabic char set.\n  * aka cp1258 or Windows-1258 or whatever.\n  */\n-public class Windows1258 extends ByteCharset\n+public final class Windows1258 extends ByteCharset\n {\n \n   /**\n@@ -93,8 +93,7 @@ public Windows1258()\n \t  \"cp_1258\", \n \t  \"windows1258\",\n \t  \"windows_1258\" \n-      });\n-      lookupTable = lookup;\n+      }, lookup);\n  }\n   \n } // class Windows1258"}, {"sha": "9f2b3706e86710fe1d0dd2d00e968d4fc6393d13", "filename": "libjava/classpath/gnu/java/rmi/server/ConnectionRunnerPool.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Frmi%2Fserver%2FConnectionRunnerPool.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Frmi%2Fserver%2FConnectionRunnerPool.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Frmi%2Fserver%2FConnectionRunnerPool.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -103,7 +103,7 @@ void exit(){\n   static {\n     ConnectionRunner[] pools = new ConnectionRunner[size];\n     for(int i = 0; i < pools.length; i++){\n-      pools[i] = new ConnectionRunner(group, new Integer(i).toString());\n+      pools[i] = new ConnectionRunner(group, Integer.toString(i));\n       pools[i].setContextClassLoader(Thread.currentThread().getContextClassLoader());\n       pools[i].start();\n     }\n@@ -123,7 +123,7 @@ private static synchronized ConnectionRunner getConnectionRunner()\n     if(freelist.size() == 0){\n       if(size < max_size){\n \t++size;\n-\tConnectionRunner a = new ConnectionRunner(group, new Integer(size).toString());\n+\tConnectionRunner a = new ConnectionRunner(group, Integer.toString(size));\n \ta.start();\n \tfreelist.add(a);\n       }else"}, {"sha": "4d5e1b0269ed25a54e0578af9e9a5f328ba1d409", "filename": "libjava/classpath/gnu/java/rmi/server/RMIClassLoaderImpl.java", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Frmi%2Fserver%2FRMIClassLoaderImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Frmi%2Fserver%2FRMIClassLoaderImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Frmi%2Fserver%2FRMIClassLoaderImpl.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -64,12 +64,6 @@ private static class MyClassLoader extends URLClassLoader\n       this.annotation = annotation;\n     }\n \n-    private MyClassLoader (URL[] urls, ClassLoader parent)\n-    {\n-      super (urls, parent);\n-      this.annotation = urlToAnnotation (urls);\n-    }\n-\n     public static String urlToAnnotation (URL[] urls)\n     {\n       if (urls.length == 0)"}, {"sha": "65a13f991b386a58939708a9e306b0d082a534a9", "filename": "libjava/classpath/gnu/java/rmi/server/RMIObjectInputStream.java", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Frmi%2Fserver%2FRMIObjectInputStream.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Frmi%2Fserver%2FRMIObjectInputStream.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Frmi%2Fserver%2FRMIObjectInputStream.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -46,7 +46,6 @@\n import java.io.ObjectStreamClass;\n import java.net.MalformedURLException;\n import java.rmi.server.RMIClassLoader;\n-import java.util.ArrayList;\n \n public class RMIObjectInputStream\n \textends ObjectInputStream {"}, {"sha": "2cb218321525e915a9398461886b610285e82837", "filename": "libjava/classpath/gnu/java/security/Engine.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2FEngine.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2FEngine.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2FEngine.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -163,7 +163,7 @@ public static Object getInstance(String service, String algorithm,\n           }\n         else if (key.equalsIgnoreCase(ALG_ALIAS + service + \".\" + algorithm))\n           {\n-            alias = (String) provider.getProperty(key);\n+            alias = provider.getProperty(key);\n             if (! algorithm.equalsIgnoreCase(alias)) // does not refer to itself\n               {\n                 algorithm = alias;"}, {"sha": "65dc5800c77b936b332267474c8e162815d7acf6", "filename": "libjava/classpath/gnu/java/security/key/dss/FIPS186.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2Fdss%2FFIPS186.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2Fdss%2FFIPS186.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2Fdss%2FFIPS186.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -173,7 +173,7 @@ public BigInteger[] generateParameters()\n         // 6. Let counter = 0 and offset = 2.\n         counter = 0;\n         offset = 2;\n-        step7: while (true)\n+        while (true)\n           {\n             OFFSET = BigInteger.valueOf(offset & 0xFFFFFFFFL);\n             SEED_PLUS_OFFSET = SEED.add(OFFSET);"}, {"sha": "ae3e6ef706c552b92b9b7a8682c56fff247d600c", "filename": "libjava/classpath/gnu/java/text/AttributedFormatBuffer.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Ftext%2FAttributedFormatBuffer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Ftext%2FAttributedFormatBuffer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Ftext%2FAttributedFormatBuffer.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -91,7 +91,7 @@ public AttributedFormatBuffer()\n    * comprised between the last entry in 'ranges' and the specified new range.\n    *\n    * @param new_range A new range to insert in the list.\n-   * @param new_attribute A new attribute to insert in the list.\n+   * @param attr A new attribute to insert in the list.\n    */  \n   private final void addAttribute(int new_range, AttributedCharacterIterator.Attribute attr)\n   {"}, {"sha": "784a442ab2de9d52b0a026fbf7e8726ea6ffaf64", "filename": "libjava/classpath/gnu/java/util/LRUCache.java", "status": "added", "additions": 77, "deletions": 0, "changes": 77, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2FLRUCache.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2FLRUCache.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2FLRUCache.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -0,0 +1,77 @@\n+/* LRUCache.java -- A LRU Cache implementation\n+   Copyright (C) 2007 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+package gnu.java.util;\n+\n+import java.util.LinkedHashMap;\n+import java.util.Map;\n+\n+/**\n+ * A least recently used cache, based on LinkedHashMap.\n+ */\n+public class LRUCache<K,V>\n+  extends LinkedHashMap<K,V>\n+{\n+\n+  /**\n+   * The capacity of the cache.\n+   */\n+  private int capacity;\n+\n+  /**\n+   * Creates a new LRUCache instance with the specified capacity.\n+   *\n+   * @param cap the capacity of the new cache\n+   */\n+  public LRUCache(int cap)\n+  {\n+    super();\n+    capacity = cap;\n+  }\n+\n+  /**\n+   * Returns <code>true</code> when the oldest entry should be removed.\n+   *\n+   * @param eldest the entry about to be removed\n+   *\n+   * @return <code>true</code> when the oldest entry should be removed\n+   */\n+  protected boolean removeEldestEntry(Map.Entry<K, V> eldest)\n+  {\n+    return size() > capacity;\n+  }\n+}"}, {"sha": "421640ff293ac4a60947f498236a689715525252", "filename": "libjava/classpath/gnu/java/util/regex/RE.java", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fregex%2FRE.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fregex%2FRE.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fregex%2FRE.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -41,7 +41,6 @@\n import java.util.Locale;\n import java.util.PropertyResourceBundle;\n import java.util.ResourceBundle;\n-import java.util.Stack;\n import java.util.Vector;\n \n /**"}, {"sha": "7a277ca3ae3d6631003fa40965a590c6f51cbbf5", "filename": "libjava/classpath/gnu/java/util/regex/REException.java", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fregex%2FREException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fregex%2FREException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fregex%2FREException.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -147,6 +147,12 @@ public class REException extends Exception {\n     this.pos = position;\n   }\n \n+  REException(String msg, Throwable cause, int type, int position) { \n+    super(msg, cause); \n+    this.type = type;\n+    this.pos = position;\n+  }\n+\n   /**\n    * Returns the type of the exception, one of the constants listed above.\n    */"}, {"sha": "addc62225ebdb5aaf205bc9e59fc4e435005f604", "filename": "libjava/classpath/gnu/java/util/regex/REToken.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fregex%2FREToken.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fregex%2FREToken.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fregex%2FREToken.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -128,7 +128,7 @@ REToken getNext() {\n       * of the REmatch found this time so that another possible match\n       * may be found when backtrack is called.\n       * By default, nothing is added to the backtrackStack.\n-      * @param CharIndexed input Input character sequence.\n+      * @param input Input character sequence.\n       * @param mymatch Position at which a match should be found\n       * @return REMatch object if a match was found, null otherwise.\n       */"}, {"sha": "0051f164364c00942139495a75c4fc3a0c6a9380", "filename": "libjava/classpath/gnu/java/util/regex/RETokenNamedProperty.java", "status": "modified", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fregex%2FRETokenNamedProperty.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fregex%2FRETokenNamedProperty.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fregex%2FRETokenNamedProperty.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -38,6 +38,9 @@\n \n package gnu.java.util.regex;\n \n+import java.lang.reflect.InvocationTargetException;\n+import java.lang.reflect.Method;\n+\n final class RETokenNamedProperty extends REToken {\n   String name;\n   boolean insens;\n@@ -268,6 +271,20 @@ public boolean includes(char c)\n \t      return true;\n \t    }\n \t  };\n+      if (name.startsWith(\"java\"))\n+\t{\n+\t  try\n+\t    {\n+\t      Method m = Character.class.getMethod(\"is\" + name.substring(4),\n+\t\t\t\t\t\t   Character.TYPE);\n+\t      return new JavaCategoryHandler(m);\n+\t    }\n+\t  catch (NoSuchMethodException e)\n+\t    {\n+\t      throw new REException(\"Unsupported Java handler: \" + name, e,\n+\t\t\t\t    REException.REG_ESCAPE, 0);\n+\t    }\n+\t}\n       throw new REException(\"unsupported name \" + name, REException.REG_ESCAPE, 0);\n   }\n \n@@ -320,4 +337,37 @@ public boolean includes(char c) {\n       }\n   }\n \n+  /**\n+   * Handle the Java-specific extensions \\p{javaX} where X\n+   * is a method from Character of the form isX\n+   *\n+   * @author Andrew John Hughes (gnu_andrew@member.fsf.org)\n+   */\n+  private static class JavaCategoryHandler \n+    extends Handler \n+  {\n+    private Method method;\n+\n+    public JavaCategoryHandler(Method m) \n+    {\n+      this.method = m;\n+    }\n+\n+    public boolean includes(char c) \n+    {\n+      try\n+\t{\n+\t  return (Boolean) method.invoke(null, c);\n+\t}\n+      catch (IllegalAccessException e)\n+\t{\n+\t  throw new InternalError(\"Unable to access method \" + method);\n+\t}\n+      catch (InvocationTargetException e)\n+\t{\n+\t  throw new InternalError(\"Error invoking \" + method);\n+\t}\n+    }\n+  }\n+\n }"}, {"sha": "6a65437d644b140a3aac651beab77adb08dc278f", "filename": "libjava/classpath/gnu/javax/crypto/jce/DiffieHellmanImpl.java", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fjce%2FDiffieHellmanImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fjce%2FDiffieHellmanImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fjce%2FDiffieHellmanImpl.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -94,8 +94,7 @@ protected Key engineDoPhase(Key incoming, boolean lastPhase)\n     DHPublicKey pub = (DHPublicKey) incoming;\n     DHParameterSpec s1 = key.getParams();\n     DHParameterSpec s2 = pub.getParams();\n-    if (! s1.getG().equals(s2.getG()) || ! s1.getP().equals(s2.getP())\n-        || s1.getL() != s2.getL())\n+    if (! s1.getG().equals(s2.getG()) || ! s1.getP().equals(s2.getP()))\n       throw new InvalidKeyException(\"Incompatible key\");\n     if (! lastPhase)\n       throw new IllegalArgumentException("}, {"sha": "a814d2c0bbf3071f229800375e5e3f15602346d8", "filename": "libjava/classpath/gnu/javax/crypto/key/dh/RFC2631.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fkey%2Fdh%2FRFC2631.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fkey%2Fdh%2FRFC2631.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fkey%2Fdh%2FRFC2631.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -136,7 +136,7 @@ public BigInteger[] generateParameters()\n           }\n         // 8. Let counter = 0\n         counter = 0;\n-        step9: while (true)\n+        while (true)\n           {\n             // 9. Set R = seed + 2*m' + (L' * counter)\n             R = SEED"}, {"sha": "397b857aa37200be834e563f714b7d08671690ab", "filename": "libjava/classpath/gnu/javax/imageio/bmp/DecodeBF16.java", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fimageio%2Fbmp%2FDecodeBF16.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fimageio%2Fbmp%2FDecodeBF16.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fimageio%2Fbmp%2FDecodeBF16.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -39,8 +39,6 @@\n \n import java.io.IOException;\n import javax.imageio.stream.ImageInputStream;\n-import java.nio.ByteBuffer;\n-import java.nio.ByteOrder;\n import java.awt.image.BufferedImage;\n import java.awt.image.ColorModel;\n import java.awt.image.DirectColorModel;"}, {"sha": "4aa1cd5d2fb88043d244a7f42f91ae09f24f8cb1", "filename": "libjava/classpath/gnu/javax/imageio/bmp/EncodeRGB32.java", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fimageio%2Fbmp%2FEncodeRGB32.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fimageio%2Fbmp%2FEncodeRGB32.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fimageio%2Fbmp%2FEncodeRGB32.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -38,7 +38,6 @@\n \n package gnu.javax.imageio.bmp;\n \n-import java.awt.Dimension;\n import java.awt.image.BufferedImage;\n import java.awt.image.PixelGrabber;\n import java.io.IOException;"}, {"sha": "ec0a3103d3078052d7bbb40afbba386d407c8af4", "filename": "libjava/classpath/gnu/javax/imageio/gif/GIFFile.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fimageio%2Fgif%2FGIFFile.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fimageio%2Fgif%2FGIFFile.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fimageio%2Fgif%2FGIFFile.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -276,7 +276,7 @@ private GIFFile(GIFFile parent, InputStream in, int c)\n    *\n    * @param in - the stream (reads 6 bytes, does not close or reset).\n    * @return true if the signature is a valid GIF signature.\n-   * @throws an IOException if the signature could not be read.\n+   * @throws IOException if the signature could not be read.\n    */\n   public static boolean readSignature( InputStream in ) throws IOException\n   { "}, {"sha": "d07bb34e93920febda8e40c51036109fb997009d", "filename": "libjava/classpath/gnu/javax/imageio/jpeg/JPEGComponent.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fimageio%2Fjpeg%2FJPEGComponent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fimageio%2Fjpeg%2FJPEGComponent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fimageio%2Fjpeg%2FJPEGComponent.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -336,7 +336,7 @@ public double[] decode_ac_coefficients(JPEGImageInputStream JPEGStream)\n           {\n             k += r;\n             r = (int) JPEGStream.readBits(s);\n-            s = (int) HuffmanTable.extend(r, s);\n+            s = HuffmanTable.extend(r, s);\n             zz[k] = s;\n           }\n         else"}, {"sha": "0f2a3f2b9495062ff0932eaa0a701871883403f6", "filename": "libjava/classpath/gnu/javax/imageio/jpeg/JPEGDecoder.java", "status": "modified", "additions": 4, "deletions": 9, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fimageio%2Fjpeg%2FJPEGDecoder.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fimageio%2Fjpeg%2FJPEGDecoder.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fimageio%2Fjpeg%2FJPEGDecoder.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -40,16 +40,12 @@\n import java.io.IOException;\n import java.nio.ByteOrder;\n \n-import javax.imageio.*;\n import javax.imageio.plugins.jpeg.JPEGHuffmanTable;\n import javax.imageio.plugins.jpeg.JPEGQTable;\n-import javax.imageio.spi.*;\n-import javax.imageio.metadata.*;\n import javax.imageio.stream.ImageInputStream;\n \n import java.util.ArrayList;\n import java.util.Hashtable;\n-import java.util.Iterator;\n import java.awt.Point;\n import java.awt.Transparency;\n import java.awt.color.ColorSpace;\n@@ -391,7 +387,7 @@ else if ((byte) (quantSpecs >> 4) == 1)\n                     // read in how much they need\n                     for (int compIndex = 0; compIndex < numberOfComponents; compIndex++)\n                       {\n-                        JPEGComponent comp = (JPEGComponent) frame.components.getComponentByID(componentSelector[compIndex]);\n+                        JPEGComponent comp = frame.components.getComponentByID(componentSelector[compIndex]);\n                         comp.readComponentMCU(jpegStream);\n                       }\n                     mcuIndex++;\n@@ -420,7 +416,7 @@ else if ((byte) (quantSpecs >> 4) == 1)\n                       {\n                         for (int compIndex = 0; compIndex < numberOfComponents; compIndex++)\n                           {\n-                            JPEGComponent comp = (JPEGComponent) frame.components.getComponentByID(componentSelector[compIndex]);\n+                            JPEGComponent comp = frame.components.getComponentByID(componentSelector[compIndex]);\n                             if (compIndex > 1)\n                               comp.padMCU(mcuTotalIndex, resetInterval - mcuIndex);\n                             comp.resetInterval();\n@@ -485,16 +481,15 @@ else if (jpegFrames.size() == 1)\n                 // Unencode the data.\n                 for (int i = 0; i < frame.getComponentCount(); i++)\n                   {\n-                    JPEGComponent comp =\n-                      (JPEGComponent) frame.components.get(i);\n+                    JPEGComponent comp = frame.components.get(i);\n                     comp.setQuantizationTable(qTables[comp.quant_id].getTable());\n                     comp.quantitizeData();\n                     comp.idctData(myDCT);\n                   }\n                 // Scale the image and write the data to the raster.\n                 for (int i = 0; i < frame.getComponentCount(); i++)\n                   {\n-                    JPEGComponent comp = (JPEGComponent) frame.components.get(i);\n+                    JPEGComponent comp = frame.components.get(i);\n                     comp.scaleByFactors();\n                     comp.writeData(raster, i);\n                     // Ensure garbage collection."}, {"sha": "a2c06e27e04ef9617a8a1ab4e4115a689a70f07b", "filename": "libjava/classpath/gnu/javax/imageio/jpeg/JPEGException.java", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fimageio%2Fjpeg%2FJPEGException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fimageio%2Fjpeg%2FJPEGException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fimageio%2Fjpeg%2FJPEGException.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -37,14 +37,7 @@\n \n package gnu.javax.imageio.jpeg;\n \n-// FIXME: change to IIOException\n-import java.io.IOException;\n import javax.imageio.*;\n-import javax.imageio.spi.*;\n-import javax.imageio.metadata.*;\n-import javax.imageio.stream.ImageInputStream;\n-import java.util.Iterator;\n-import java.awt.image.BufferedImage;\n \n public class JPEGException extends IIOException\n {"}, {"sha": "35aed728a4d482a9a5aa436950b4974b1341c994", "filename": "libjava/classpath/gnu/javax/imageio/jpeg/JPEGFrame.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fimageio%2Fjpeg%2FJPEGFrame.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fimageio%2Fjpeg%2FJPEGFrame.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fimageio%2Fjpeg%2FJPEGFrame.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -101,7 +101,7 @@ public byte getComponentCount()\n   public void setHuffmanTables(byte componentID, JPEGHuffmanTable ACTable,\n                                JPEGHuffmanTable DCTable)\n   {\n-    JPEGComponent comp = (JPEGComponent)components.getComponentByID(componentID);\n+    JPEGComponent comp = components.getComponentByID(componentID);\n     comp.setACTable(ACTable);\n     comp.setDCTable(DCTable);\n   }"}, {"sha": "29a12f346cfe843072b282ca29c81b8bd3f7bd35", "filename": "libjava/classpath/gnu/javax/imageio/jpeg/JPEGImageInputStream.java", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fimageio%2Fjpeg%2FJPEGImageInputStream.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fimageio%2Fjpeg%2FJPEGImageInputStream.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fimageio%2Fjpeg%2FJPEGImageInputStream.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -37,17 +37,10 @@\n \n package gnu.javax.imageio.jpeg;\n \n-import java.io.EOFException;\n import java.io.IOException;\n-import javax.imageio.*;\n-import javax.imageio.spi.*;\n-import javax.imageio.metadata.*;\n import javax.imageio.stream.ImageInputStream;\n import javax.imageio.stream.ImageInputStreamImpl;\n \n-import java.util.Iterator;\n-import java.awt.image.BufferedImage;\n-\n public class JPEGImageInputStream\n   extends ImageInputStreamImpl\n {"}, {"sha": "8efbeea7259d78d3617c56d3b506939593ba5320", "filename": "libjava/classpath/gnu/javax/imageio/png/PNGChunk.java", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fimageio%2Fpng%2FPNGChunk.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fimageio%2Fpng%2FPNGChunk.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fimageio%2Fpng%2FPNGChunk.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -40,7 +40,6 @@\n import java.io.InputStream;\n import java.io.OutputStream;\n import java.io.IOException;\n-import java.io.UnsupportedEncodingException;\n \n /**\n  * Class to load and validate a generic PNG chunk."}, {"sha": "652f59d35b54897636e37636fc2607a3997e7011", "filename": "libjava/classpath/gnu/javax/imageio/png/PNGDecoder.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fimageio%2Fpng%2FPNGDecoder.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fimageio%2Fpng%2FPNGDecoder.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fimageio%2Fpng%2FPNGDecoder.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -140,7 +140,7 @@ public void addData( PNGData chunk ) throws PNGException\n \n   /**\n    * Parse the appropriate color type and create an AWT raster for it.\n-   * @param raster - the file header.\n+   * @param header - the file header.\n    */\n   public WritableRaster getRaster( PNGHeader header )\n   {"}, {"sha": "b8441c4e3f0ddf421df1e0552bb3f0b88b5beec2", "filename": "libjava/classpath/gnu/javax/imageio/png/PNGEncoder.java", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fimageio%2Fpng%2FPNGEncoder.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fimageio%2Fpng%2FPNGEncoder.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fimageio%2Fpng%2FPNGEncoder.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -40,15 +40,13 @@\n import java.util.Vector;\n import java.util.zip.Deflater;\n import java.awt.color.ColorSpace;\n-import java.awt.color.ICC_Profile;\n import java.awt.color.ICC_ColorSpace;\n import java.awt.image.BufferedImage;\n import java.awt.image.ColorModel;\n import java.awt.image.DataBuffer;\n import java.awt.image.DataBufferByte;\n import java.awt.image.DataBufferUShort;\n import java.awt.image.IndexColorModel;\n-import java.awt.image.Raster;\n import java.awt.image.WritableRaster;\n \n public class PNGEncoder "}, {"sha": "96e8f9ce78fb91eae2c3acb55bb1dcdde2a5590e", "filename": "libjava/classpath/gnu/javax/imageio/png/PNGFile.java", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fimageio%2Fpng%2FPNGFile.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fimageio%2Fpng%2FPNGFile.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fimageio%2Fpng%2FPNGFile.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -44,7 +44,6 @@\n import java.awt.image.BufferedImage;\n import java.awt.image.WritableRaster;\n import java.awt.image.ColorModel;\n-import java.awt.image.IndexColorModel;\n import java.awt.color.ColorSpace;\n \n public class PNGFile "}, {"sha": "d9cacea46090812658955e9250b9d59d3f892562", "filename": "libjava/classpath/gnu/javax/imageio/png/PNGGamma.java", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fimageio%2Fpng%2FPNGGamma.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fimageio%2Fpng%2FPNGGamma.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fimageio%2Fpng%2FPNGGamma.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -37,10 +37,6 @@\n \n package gnu.javax.imageio.png;\n \n-import java.awt.color.ICC_ProfileGray;\n-import java.awt.color.ICC_ProfileRGB;\n-import java.awt.color.ICC_Profile;\n-import java.awt.color.ICC_ColorSpace;\n import java.awt.color.ColorSpace;\n \n /**"}, {"sha": "8e8d826c00f73f1fb140f7870f96f9dd500ff88d", "filename": "libjava/classpath/gnu/javax/management/Server.java", "status": "modified", "additions": 14, "deletions": 7, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fmanagement%2FServer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fmanagement%2FServer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fmanagement%2FServer.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -169,7 +169,7 @@\n    * Constructs a new management server using the specified\n    * default domain, delegate bean and outer server.\n    *\n-   * @param domain the default domain to use for beans constructed\n+   * @param defaultDomain the default domain to use for beans constructed\n    *               with no specified domain.\n    * @param outer an {@link javax.management.MBeanServer} to pass\n    *              to beans implementing the {@link MBeanRegistration}\n@@ -229,8 +229,8 @@ private void checkSecurity(ObjectName name, String member,\n \t  if (name != null)\n \t    {\n \t      Object bean = getBean(name);\n-\t      Method method = bean.getClass().getMethod(\"getMBeanInfo\", null);\n-\t      info = (MBeanInfo) method.invoke(bean, null);\n+\t      Method method = bean.getClass().getMethod(\"getMBeanInfo\");\n+\t      info = (MBeanInfo) method.invoke(bean);\n \t    }\n \t  sm.checkPermission(new MBeanPermission((info == null) ? \n \t\t\t\t\t\t null : info.getClassName(),\n@@ -1031,13 +1031,20 @@ public MBeanInfo getMBeanInfo(ObjectName name)\n     checkSecurity(name, null, \"getMBeanInfo\");\n     try\n       {\n-\tMethod method = bean.getClass().getMethod(\"getMBeanInfo\", null);\n-\treturn (MBeanInfo) method.invoke(bean, null);\n+\tMethod method = bean.getClass().getMethod(\"getMBeanInfo\");\n+\treturn (MBeanInfo) method.invoke(bean);\n       }\n     catch (NoSuchMethodException e)\n       {\n-\tthrow new IntrospectionException(\"The getMBeanInfo method \" + \n-\t\t\t\t\t \"could not be found.\");\n+\ttry\n+\t  {\n+\t    return new StandardMBean(bean, null).getMBeanInfo();\n+\t  }\n+\tcatch (NotCompliantMBeanException ex)\n+\t  {\n+\t    throw new IntrospectionException(\"An error occurred in executing \" +\n+\t\t\t\t\t     \"getMBeanInfo on the bean: \" + ex + \".\");\n+\t  }\n       }\n     catch (IllegalAccessException e)\n       {"}, {"sha": "4ede37430887119a6619c79fff745fb8f998bc46", "filename": "libjava/classpath/gnu/javax/management/Translator.java", "status": "modified", "additions": 42, "deletions": 36, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fmanagement%2FTranslator.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fmanagement%2FTranslator.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fmanagement%2FTranslator.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -39,11 +39,15 @@\n \n import java.lang.reflect.Array;\n import java.lang.reflect.Method;\n+import java.lang.reflect.Modifier;\n+import java.lang.reflect.ParameterizedType;\n import java.lang.reflect.Proxy;\n import java.lang.reflect.Type;\n \n import java.util.ArrayList;\n+import java.util.Collection;\n import java.util.HashMap;\n+import java.util.Iterator;\n import java.util.List;\n import java.util.Map;\n import java.util.Set;\n@@ -92,7 +96,7 @@ public static final Object[] fromJava(Object[] jtypes, Method method)\n     Type[] gtypes = method.getGenericParameterTypes();\n     Object[] otypes = new Object[jtypes.length];\n     for (int a = 0; a < jtypes.length; ++a)\n-      otypes[a] = fromJava(jtypes[a], (Class<?>) gtypes[a]);\n+      otypes[a] = fromJava(jtypes[a], gtypes[a]);\n     return otypes;\n   }\n \n@@ -131,11 +135,10 @@ public static final Object fromJava(Object jtype, Type type)\n     if (jtype instanceof List || jtype instanceof Set ||\n \tjtype instanceof SortedSet)\n       {\n-\tString elemType = tName.substring(tName.indexOf(\"<\") + 1,\n-\t\t\t\t\t  tName.indexOf(\">\")).trim();\n \tif (jtype instanceof SortedSet)\n \t  {\n-\t    Class<?> elemClass = Class.forName(elemType);\n+\t    ParameterizedType ptype = (ParameterizedType) type;\n+\t    Class<?> elemClass = (Class<?>) ptype.getActualTypeArguments()[0];\n \t    if (!Comparable.class.isAssignableFrom(elemClass))\n \t      throw new IllegalArgumentException(jtype + \" has a \" +\n \t\t\t\t\t\t \"non-comparable element \" +\n@@ -144,11 +147,13 @@ public static final Object fromJava(Object jtype, Type type)\n \t      throw new IllegalArgumentException(jtype + \" does not \" +\n \t\t\t\t\t\t \"use natural ordering.\");\n \t  }\n-\tList elems = (List) jtype;\n-\tObject[] celems = new Object[elems.size()];\n-\tfor (int a = 0; a < elems.size(); ++a)\n+\tCollection<Object> elems = (Collection<Object>) jtype;\n+\tint numElems = elems.size();\n+\tObject[] celems = new Object[numElems];\n+\tIterator<Object> i = elems.iterator();\n+\tfor (int a = 0; a < numElems; ++a)\n \t  {\n-\t    Object elem = elems.get(a);\n+\t    Object elem = i.next();\n \t    celems[a] = fromJava(elem, elem.getClass());\n \t  }\n \treturn makeArraySpecific(celems);\n@@ -440,33 +445,6 @@ public static final OpenMBeanParameterInfo translate(String type)\n \t\t\t\t\t\t SimpleType.STRING,\n \t\t\t\t\t\t null, names);\n       }\n-    try\n-      {\n-\tc.getMethod(\"from\", new Class[] { CompositeData.class });\n-\tMethod[] methods = c.getDeclaredMethods();\n-\tList<String> names = new ArrayList<String>();\n-\tList<OpenType> types = new ArrayList<OpenType>();\n-\tfor (int a = 0; a < methods.length; ++a)\n-\t  {\n-\t    String name = methods[a].getName();\n-\t    if (name.startsWith(\"get\"))\n-\t      {\n-\t\tnames.add(name.substring(3));\n-\t\ttypes.add(getTypeFromClass(methods[a].getReturnType()));\n-\t      }\n-\t  }\n-\tString[] fields = names.toArray(new String[names.size()]);\n-\tCompositeType ctype = new CompositeType(c.getName(), c.getName(),\n-\t\t\t\t\t\tfields, fields,\n-\t\t\t\t\t\ttypes.toArray(new OpenType[types.size()]));\n-\treturn new OpenMBeanParameterInfoSupport(\"TransParam\",\n-\t\t\t\t\t\t \"Translated parameter\",\n-\t\t\t\t\t\t ctype);\n-      }\n-    catch (NoSuchMethodException e)\n-      {\n-\t/* Ignored; we expect this if this isn't a from(CompositeData) class */\n-      }\n     if (c.isArray())\n       {\n \tint depth;\n@@ -478,7 +456,35 @@ public static final OpenMBeanParameterInfo translate(String type)\n \t\t\t\t\t\t new ArrayType(depth, ot)\n \t\t\t\t\t\t );\n       }\n-    throw new InternalError(\"The type used does not have an open type translation.\");\n+    Method[] methods = c.getDeclaredMethods();\n+    List<String> names = new ArrayList<String>();\n+    List<OpenType> types = new ArrayList<OpenType>();\n+    for (int a = 0; a < methods.length; ++a)\n+      {\n+\tString name = methods[a].getName();\n+\tif (Modifier.isPublic(methods[a].getModifiers()))\n+\t  {\n+\t    if (name.startsWith(\"get\"))\n+\t      {\n+\t\tnames.add(name.substring(3));\n+\t\ttypes.add(getTypeFromClass(methods[a].getReturnType()));\n+\t      }\n+\t    else if (name.startsWith(\"is\"))\n+\t      {\n+\t\tnames.add(name.substring(2));\n+\t\ttypes.add(getTypeFromClass(methods[a].getReturnType()));\n+\t      }\n+\t  }\n+      }\n+    if (names.isEmpty())\n+      throw new OpenDataException(\"The type used does not have an open type translation.\");\n+    String[] fields = names.toArray(new String[names.size()]);\n+    CompositeType ctype = new CompositeType(c.getName(), c.getName(),\n+\t\t\t\t\t    fields, fields,\n+\t\t\t\t\t    types.toArray(new OpenType[types.size()]));\n+    return new OpenMBeanParameterInfoSupport(\"TransParam\",\n+\t\t\t\t\t     \"Translated parameter\",\n+\t\t\t\t\t     ctype);\n   }\n \n   /**"}, {"sha": "05023840ba395c58d62b82072232f427d37d2933", "filename": "libjava/classpath/gnu/javax/naming/giop/ContextContinuation.java", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fnaming%2Fgiop%2FContextContinuation.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fnaming%2Fgiop%2FContextContinuation.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fnaming%2Fgiop%2FContextContinuation.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -129,14 +129,14 @@ public class ContextContinuation implements Context\n    * Creates a new naming context that uses naming service, represented by the\n    * given CORBA object.\n    * \n-   * @param namingService\n+   * @param nsObject\n    *          the naming service object. It must be possible to narrow it into\n    *          the NamingContextExt.\n    * @param props\n    *          the environment table.\n-   * @param orb\n+   * @param anOrb\n    *          the associated ORB. This reference is used during cleanup.\n-   * @param the\n+   * @param aFactory\n    *          parent factory. This reference is used during cleanup.\n    */\n   public ContextContinuation(org.omg.CORBA.Object nsObject,\n@@ -293,7 +293,7 @@ public String composeName(String name1, String name2) throws NamingException\n    * context. The returned object will wrap around the newly created CORBA\n    * subcontext\n    * \n-   * @param name\n+   * @param subContext\n    *          the name of the new context being created\n    * @return the newly created context, bound to the instance of the context on\n    *         that the method has been called\n@@ -336,7 +336,7 @@ public Context createSubcontext(Name subContext) throws NamingException\n    * context. The returned object will wrap around the newly created CORBA\n    * subcontext\n    * \n-   * @param name\n+   * @param subContext\n    *          the name of the new context being created\n    * @return the newly created context, bound to the instance of the context on\n    *         that the method has been called\n@@ -380,7 +380,7 @@ public Context createSubcontext(String subContext) throws NamingException\n    * action if such subcontext does not exist. The context being destroyed must\n    * be empty.\n    * \n-   * @param name\n+   * @param subContext\n    *          the name of the subcontext beig removed.\n    * @throws ContextNotEmptyException\n    *           if the named context is not empty.\n@@ -396,7 +396,7 @@ public void destroySubcontext(Name subContext) throws NamingException\n    * action if such subcontext does not exist. The context being destroyed must\n    * be empty.\n    * \n-   * @param name\n+   * @param subContext\n    *          the name of the subcontext beig removed.\n    * @throws ContextNotEmptyException\n    *           if the named context is not empty.\n@@ -868,9 +868,9 @@ public void unbind(String name) throws NamingException\n    * and value of the new property must not be null. If the property is already\n    * defined, is current value is replaced by the propVal.\n    * \n-   * @param propName\n+   * @param key\n    *          the name of the new property\n-   * @param propVal\n+   * @param value\n    *          the value of the new property\n    * @return the previous value of this property or null if the property has not\n    *         been previously defined"}, {"sha": "ee8c7791419f285ecfea9e4201f63de041c3f042", "filename": "libjava/classpath/gnu/javax/naming/jndi/url/rmi/ContextContinuation.java", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fnaming%2Fjndi%2Furl%2Frmi%2FContextContinuation.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fnaming%2Fjndi%2Furl%2Frmi%2FContextContinuation.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fnaming%2Fjndi%2Furl%2Frmi%2FContextContinuation.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -97,9 +97,9 @@ public class ContextContinuation implements Context\n    * the registry. The new registry will be lazily instantiated on the first\n    * call.\n    * \n-   * @param propName\n+   * @param key\n    *          the name of the new property\n-   * @param propVal\n+   * @param value\n    *          the value of the new property\n    * @return the previous value of this property or null if the property has not\n    *         been previously defined\n@@ -426,7 +426,7 @@ public Object lookupLink(String name) throws NamingException\n    * @param name\n    *          the object name (.toString()) is used to convert into string\n    *          representation.\n-   * @param the\n+   * @param obj\n    *          object (must be an instance of Remote).\n    */\n   public void rebind(Name name, Object obj) throws NamingException\n@@ -439,7 +439,7 @@ public void rebind(Name name, Object obj) throws NamingException\n    * \n    * @param name\n    *          the object name.\n-   * @param the\n+   * @param obj\n    *          object (must be an instance of Remote).\n    */\n   public void rebind(String name, Object obj) throws NamingException"}, {"sha": "3ce56eab5fe193e3a3a7e9827d0475cb0c7b1b1f", "filename": "libjava/classpath/gnu/javax/net/ssl/SSLRecordHandler.java", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fnet%2Fssl%2FSSLRecordHandler.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fnet%2Fssl%2FSSLRecordHandler.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fnet%2Fssl%2FSSLRecordHandler.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -39,7 +39,6 @@\n package gnu.javax.net.ssl;\n \n import java.nio.ByteBuffer;\n-import javax.net.ssl.SSLEngineResult;\n import javax.net.ssl.SSLException;\n \n public abstract class SSLRecordHandler"}, {"sha": "480f1c754b1670088b85ed3f40752653a83a9174", "filename": "libjava/classpath/gnu/javax/net/ssl/StaticTrustAnchors.java", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fnet%2Fssl%2FStaticTrustAnchors.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fnet%2Fssl%2FStaticTrustAnchors.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fnet%2Fssl%2FStaticTrustAnchors.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -39,8 +39,6 @@\n package gnu.javax.net.ssl;\n \n import java.io.ByteArrayInputStream;\n-import java.io.InputStream;\n-\n import java.security.cert.CertificateException;\n import java.security.cert.CertificateFactory;\n import java.security.cert.X509Certificate;"}, {"sha": "8c059854e4ac8264b7e4c75979d87d60cf438e9d", "filename": "libjava/classpath/gnu/javax/net/ssl/provider/CertificateRequestBuilder.java", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fnet%2Fssl%2Fprovider%2FCertificateRequestBuilder.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fnet%2Fssl%2Fprovider%2FCertificateRequestBuilder.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fnet%2Fssl%2Fprovider%2FCertificateRequestBuilder.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -38,8 +38,6 @@\n \n package gnu.javax.net.ssl.provider;\n \n-import static gnu.javax.net.ssl.provider.CertificateRequest.ClientCertificateType;\n-\n import java.io.ByteArrayOutputStream;\n import java.io.IOException;\n import java.nio.ByteBuffer;"}, {"sha": "fdbf262122b8b703cbd24236dd88504af1d8b1bb", "filename": "libjava/classpath/gnu/javax/net/ssl/provider/ClientHandshake.java", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fnet%2Fssl%2Fprovider%2FClientHandshake.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fnet%2Fssl%2Fprovider%2FClientHandshake.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fnet%2Fssl%2Fprovider%2FClientHandshake.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -56,7 +56,6 @@\n import java.security.AccessController;\n import java.security.InvalidAlgorithmParameterException;\n import java.security.InvalidKeyException;\n-import java.security.KeyManagementException;\n import java.security.KeyPair;\n import java.security.KeyPairGenerator;\n import java.security.MessageDigest;\n@@ -65,7 +64,6 @@\n import java.security.SignatureException;\n import java.security.cert.CertificateException;\n import java.security.cert.X509Certificate;\n-import java.security.interfaces.RSAPublicKey;\n import java.util.Arrays;\n import java.util.Collections;\n import java.util.LinkedList;\n@@ -77,7 +75,6 @@\n import javax.crypto.Cipher;\n import javax.crypto.IllegalBlockSizeException;\n import javax.crypto.NoSuchPaddingException;\n-import javax.crypto.SecretKey;\n import javax.crypto.interfaces.DHPrivateKey;\n import javax.crypto.interfaces.DHPublicKey;\n import javax.crypto.spec.DHParameterSpec;"}, {"sha": "f08ec7f9062ba8b1496d9dcf29c3ba971d3b1eb7", "filename": "libjava/classpath/gnu/javax/net/ssl/provider/ClientPSKParameters.java", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fnet%2Fssl%2Fprovider%2FClientPSKParameters.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fnet%2Fssl%2Fprovider%2FClientPSKParameters.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fnet%2Fssl%2Fprovider%2FClientPSKParameters.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -38,13 +38,9 @@\n \n package gnu.javax.net.ssl.provider;\n \n-import gnu.classpath.debug.Component;\n-import gnu.classpath.debug.SystemLogger;\n-\n import java.io.PrintWriter;\n import java.io.StringWriter;\n import java.nio.ByteBuffer;\n-import java.nio.ByteOrder;\n import java.nio.CharBuffer;\n import java.nio.charset.Charset;\n "}, {"sha": "860cc731f7a0cccec9bd1c96068009eccca6636a", "filename": "libjava/classpath/gnu/javax/net/ssl/provider/ClientRSA_PSKParameters.java", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fnet%2Fssl%2Fprovider%2FClientRSA_PSKParameters.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fnet%2Fssl%2Fprovider%2FClientRSA_PSKParameters.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fnet%2Fssl%2Fprovider%2FClientRSA_PSKParameters.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -38,13 +38,9 @@\n \n package gnu.javax.net.ssl.provider;\n \n-import gnu.classpath.debug.Component;\n-import gnu.classpath.debug.SystemLogger;\n-\n import java.io.PrintWriter;\n import java.io.StringWriter;\n import java.nio.ByteBuffer;\n-import java.nio.ByteOrder;\n import java.nio.charset.Charset;\n \n /**"}, {"sha": "eaebebf4b6715a3756dd513e0d533212ee1abad7", "filename": "libjava/classpath/gnu/javax/net/ssl/provider/ContentType.java", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fnet%2Fssl%2Fprovider%2FContentType.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fnet%2Fssl%2Fprovider%2FContentType.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fnet%2Fssl%2Fprovider%2FContentType.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -38,10 +38,6 @@\n \n package gnu.javax.net.ssl.provider;\n \n-import java.io.EOFException;\n-import java.io.InputStream;\n-import java.io.IOException;\n-\n /**\n  * The content type enumeration, which marks packets in the record layer.\n  *"}, {"sha": "85769cffcf29e88064c1aec9cc612f6d54c6fd09", "filename": "libjava/classpath/gnu/javax/net/ssl/provider/EncryptedPreMasterSecret.java", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fnet%2Fssl%2Fprovider%2FEncryptedPreMasterSecret.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fnet%2Fssl%2Fprovider%2FEncryptedPreMasterSecret.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fnet%2Fssl%2Fprovider%2FEncryptedPreMasterSecret.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -38,9 +38,6 @@\n \n package gnu.javax.net.ssl.provider;\n \n-import gnu.classpath.debug.Component;\n-import gnu.classpath.debug.SystemLogger;\n-\n import java.io.PrintWriter;\n import java.io.StringWriter;\n "}, {"sha": "dd36f2b3fc5e85b8618e41d7e130e3cdc0d90150", "filename": "libjava/classpath/gnu/javax/net/ssl/provider/Handshake.java", "status": "modified", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fnet%2Fssl%2Fprovider%2FHandshake.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fnet%2Fssl%2Fprovider%2FHandshake.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fnet%2Fssl%2Fprovider%2FHandshake.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -38,26 +38,11 @@\n \n package gnu.javax.net.ssl.provider;\n \n-import java.io.BufferedReader;\n-import java.io.ByteArrayInputStream;\n-import java.io.ByteArrayOutputStream;\n-import java.io.EOFException;\n-import java.io.InputStream;\n-import java.io.IOException;\n-import java.io.OutputStream;\n import java.io.PrintWriter;\n-import java.io.StringReader;\n import java.io.StringWriter;\n \n import java.nio.ByteBuffer;\n \n-import java.security.PublicKey;\n-\n-import java.util.ArrayList;\n-import java.util.Collections;\n-\n-import javax.net.ssl.SSLProtocolException;\n-\n /**\n  * An SSL handshake message. SSL handshake messages have the following\n  * form:"}, {"sha": "cf5ca6099ffbc140a3f69b7b68a9dc7e7f9c86c0", "filename": "libjava/classpath/gnu/javax/net/ssl/provider/InputSecurityParameters.java", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fnet%2Fssl%2Fprovider%2FInputSecurityParameters.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fnet%2Fssl%2Fprovider%2FInputSecurityParameters.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fnet%2Fssl%2Fprovider%2FInputSecurityParameters.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -47,11 +47,9 @@\n import java.nio.ByteBuffer;\n \n import java.util.Arrays;\n-import java.util.logging.Level;\n import java.util.zip.DataFormatException;\n import java.util.zip.Inflater;\n \n-import javax.crypto.BadPaddingException;\n import javax.crypto.Cipher;\n import javax.crypto.IllegalBlockSizeException;\n import javax.crypto.Mac;"}, {"sha": "228071a393d6759f3d68511c73f085fbeabf006e", "filename": "libjava/classpath/gnu/javax/net/ssl/provider/OutputSecurityParameters.java", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fnet%2Fssl%2Fprovider%2FOutputSecurityParameters.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fnet%2Fssl%2Fprovider%2FOutputSecurityParameters.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fnet%2Fssl%2Fprovider%2FOutputSecurityParameters.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -40,16 +40,13 @@\n \n import gnu.classpath.debug.Component;\n import gnu.classpath.debug.SystemLogger;\n-import gnu.java.security.util.ByteArray;\n import gnu.java.security.util.ByteBufferOutputStream;\n \n import java.nio.ByteBuffer;\n \n-import java.util.logging.Level;\n import java.util.zip.DataFormatException;\n import java.util.zip.Deflater;\n \n-import javax.crypto.BadPaddingException;\n import javax.crypto.Cipher;\n import javax.crypto.IllegalBlockSizeException;\n import javax.crypto.Mac;"}, {"sha": "3c3f29a21e6cf00343bed11d0077bc2bcc41ce93", "filename": "libjava/classpath/gnu/javax/net/ssl/provider/ProtocolVersion.java", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fnet%2Fssl%2Fprovider%2FProtocolVersion.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fnet%2Fssl%2Fprovider%2FProtocolVersion.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fnet%2Fssl%2Fprovider%2FProtocolVersion.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -40,7 +40,6 @@\n \n import java.io.InputStream;\n import java.io.IOException;\n-import java.io.OutputStream;\n \n public final class ProtocolVersion\n   implements Comparable<ProtocolVersion>, Constructed"}, {"sha": "f89acc1f8f5880ad30d1bfce5077241cf179c271", "filename": "libjava/classpath/gnu/javax/net/ssl/provider/Random.java", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fnet%2Fssl%2Fprovider%2FRandom.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fnet%2Fssl%2Fprovider%2FRandom.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fnet%2Fssl%2Fprovider%2FRandom.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -38,10 +38,6 @@\n \n package gnu.javax.net.ssl.provider;\n \n-import java.io.ByteArrayOutputStream;\n-import java.io.InputStream;\n-import java.io.IOException;\n-import java.io.OutputStream;\n import java.io.PrintWriter;\n import java.io.StringWriter;\n "}, {"sha": "c5422871df5a74b3a837ab89efe7eb774e721f12", "filename": "libjava/classpath/gnu/javax/net/ssl/provider/SRPTrustManagerFactory.java", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fnet%2Fssl%2Fprovider%2FSRPTrustManagerFactory.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fnet%2Fssl%2Fprovider%2FSRPTrustManagerFactory.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fnet%2Fssl%2Fprovider%2FSRPTrustManagerFactory.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -44,8 +44,6 @@\n import java.security.InvalidAlgorithmParameterException;\n import java.security.KeyPair;\n import java.security.KeyStore;\n-import java.security.Security;\n-\n import java.util.HashMap;\n \n import javax.net.ssl.ManagerFactoryParameters;"}, {"sha": "2d21d9d4554b90323ec8934618e0a4f578cd3f27", "filename": "libjava/classpath/gnu/javax/net/ssl/provider/ServerDHE_PSKParameters.java", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fnet%2Fssl%2Fprovider%2FServerDHE_PSKParameters.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fnet%2Fssl%2Fprovider%2FServerDHE_PSKParameters.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fnet%2Fssl%2Fprovider%2FServerDHE_PSKParameters.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -38,9 +38,6 @@\n \n package gnu.javax.net.ssl.provider;\n \n-import gnu.classpath.debug.Component;\n-import gnu.classpath.debug.SystemLogger;\n-\n import java.io.PrintWriter;\n import java.io.StringWriter;\n import java.nio.ByteBuffer;"}, {"sha": "e30f04241a09805bf9163f21c497f91537706f8f", "filename": "libjava/classpath/gnu/javax/net/ssl/provider/ServerHandshake.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fnet%2Fssl%2Fprovider%2FServerHandshake.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fnet%2Fssl%2Fprovider%2FServerHandshake.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fnet%2Fssl%2Fprovider%2FServerHandshake.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -775,7 +775,7 @@ private static CompressionMethod chooseCompression (final CompressionMethodList\n     //     outgoing buffer. This isn't that great because we'd need to\n     //     store and copy things unnecessarily.\n     //\n-    //  2. Build outgoing handshake objects \u201cvirtually,\u201d that is, store them\n+    //  2. Build outgoing handshake objects 'virtually', that is, store them\n     //     as collections of objects, then compute the length, and then write\n     //     them to a buffer, instead of making the objects views on\n     //     ByteBuffers for both input and output. This would complicate the\n@@ -784,7 +784,7 @@ private static CompressionMethod chooseCompression (final CompressionMethodList\n     //     pretty OK), and we still need to figure out how exactly to chunk\n     //     those objects across record boundaries.\n     //\n-    //  3. Try to build these objects on the buffer we\u2019re given, but detect\n+    //  3. Try to build these objects on the buffer we're given, but detect\n     //     when we run out of space in the output buffer, and split the\n     //     overflow message. This sounds like the best, but also probably\n     //     the hardest to code.\n@@ -1374,4 +1374,4 @@ class RSA_PSKExchange extends DelegatedTask\n       setupSecurityParameters(keys, false, engine, compression);\n     }\n   }\n-}\n\\ No newline at end of file\n+}"}, {"sha": "6a4020117ecac70f127a63cff92a7f511ebae148", "filename": "libjava/classpath/gnu/javax/net/ssl/provider/SessionImpl.java", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fnet%2Fssl%2Fprovider%2FSessionImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fnet%2Fssl%2Fprovider%2FSessionImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fnet%2Fssl%2Fprovider%2FSessionImpl.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -40,22 +40,16 @@\n \n import gnu.javax.crypto.key.GnuPBEKey;\n import gnu.javax.net.ssl.Session;\n-import gnu.javax.net.ssl.Session.ID;\n-\n import java.io.IOException;\n import java.io.Serializable;\n \n-import java.security.Certificate;\n import java.security.InvalidKeyException;\n import java.security.NoSuchAlgorithmException;\n import java.security.SecureRandom;\n-import java.security.cert.X509Certificate;\n-\n import javax.crypto.Cipher;\n import javax.crypto.IllegalBlockSizeException;\n import javax.crypto.NoSuchPaddingException;\n import javax.crypto.SealedObject;\n-import javax.crypto.spec.PBEKeySpec;\n import javax.net.ssl.SSLException;\n \n public class SessionImpl extends Session"}, {"sha": "d95e181370e9288bd994aedfa52f411dd3e529b6", "filename": "libjava/classpath/gnu/javax/net/ssl/provider/Signature.java", "status": "modified", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fnet%2Fssl%2Fprovider%2FSignature.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fnet%2Fssl%2Fprovider%2FSignature.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fnet%2Fssl%2Fprovider%2FSignature.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -38,26 +38,11 @@\n \n package gnu.javax.net.ssl.provider;\n \n-import java.io.BufferedReader;\n-import java.io.ByteArrayInputStream;\n-import java.io.DataInputStream;\n-import java.io.InputStream;\n-import java.io.IOException;\n-import java.io.OutputStream;\n import java.io.PrintWriter;\n import java.io.StringWriter;\n \n-import java.math.BigInteger;\n-\n import java.nio.ByteBuffer;\n \n-import java.security.PublicKey;\n-import java.security.interfaces.RSAKey;\n-\n-import java.util.Arrays;\n-\n-import gnu.java.security.der.*;\n-\n /**\n  * The signature structure.\n  *"}, {"sha": "20503d3cabe6ac86c26b240d03debad8630588be", "filename": "libjava/classpath/gnu/javax/net/ssl/provider/SimpleSessionContext.java", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fnet%2Fssl%2Fprovider%2FSimpleSessionContext.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fnet%2Fssl%2Fprovider%2FSimpleSessionContext.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fnet%2Fssl%2Fprovider%2FSimpleSessionContext.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -41,8 +41,6 @@\n import gnu.javax.net.ssl.AbstractSessionContext;\n import gnu.javax.net.ssl.Session;\n import gnu.javax.net.ssl.SessionStoreException;\n-import gnu.javax.net.ssl.Session.ID;\n-\n import java.util.Enumeration;\n import java.util.HashMap;\n import java.util.Iterator;"}, {"sha": "8bdda930b3c1fb9a2ca2c778b9266fe4bf940f47", "filename": "libjava/classpath/gnu/javax/net/ssl/provider/TLSHMac.java", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fnet%2Fssl%2Fprovider%2FTLSHMac.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fnet%2Fssl%2Fprovider%2FTLSHMac.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fnet%2Fssl%2Fprovider%2FTLSHMac.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -39,7 +39,6 @@\n package gnu.javax.net.ssl.provider;\n \n import java.security.InvalidKeyException;\n-import java.util.HashMap;\n import java.util.Map;\n \n import gnu.java.security.hash.IMessageDigest;"}, {"sha": "85e359675a731203b01187e4d4ac9e65314cd153", "filename": "libjava/classpath/gnu/javax/net/ssl/provider/TrustedAuthorities.java", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fnet%2Fssl%2Fprovider%2FTrustedAuthorities.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fnet%2Fssl%2Fprovider%2FTrustedAuthorities.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fnet%2Fssl%2Fprovider%2FTrustedAuthorities.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -38,7 +38,6 @@\n \n package gnu.javax.net.ssl.provider;\n \n-import gnu.java.security.x509.X500DistinguishedName;\n import gnu.javax.net.ssl.provider.Extension.Value;\n \n import java.io.PrintWriter;"}, {"sha": "f54dda5bc6de7586569bbff1a8b462dc13d41776", "filename": "libjava/classpath/gnu/javax/net/ssl/provider/UnresolvedExtensionValue.java", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fnet%2Fssl%2Fprovider%2FUnresolvedExtensionValue.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fnet%2Fssl%2Fprovider%2FUnresolvedExtensionValue.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fnet%2Fssl%2Fprovider%2FUnresolvedExtensionValue.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -40,8 +40,6 @@\n \n import gnu.javax.net.ssl.provider.Extension.Value;\n \n-import java.io.PrintWriter;\n-import java.io.StringWriter;\n import java.nio.ByteBuffer;\n \n public class UnresolvedExtensionValue extends Value"}, {"sha": "c3b7e5f4b8f74b12988d2887fcd4ebad407fc103", "filename": "libjava/classpath/gnu/javax/net/ssl/provider/X509KeyManagerFactory.java", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fnet%2Fssl%2Fprovider%2FX509KeyManagerFactory.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fnet%2Fssl%2Fprovider%2FX509KeyManagerFactory.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fnet%2Fssl%2Fprovider%2FX509KeyManagerFactory.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -64,8 +64,6 @@\n import java.security.interfaces.RSAPublicKey;\n \n import java.util.Collections;\n-import java.util.HashMap;\n-import java.util.Iterator;\n import java.util.Map;\n import java.util.List;\n \n@@ -77,8 +75,6 @@\n import javax.net.ssl.ManagerFactoryParameters;\n import javax.net.ssl.SSLEngine;\n import javax.net.ssl.X509ExtendedKeyManager;\n-import javax.net.ssl.X509KeyManager;\n-\n import gnu.javax.net.ssl.NullManagerParameters;\n import gnu.javax.net.ssl.PrivateCredentials;\n "}, {"sha": "54d6b87b47cf34d65f3f97eac8d14614a83733e3", "filename": "libjava/classpath/gnu/javax/print/PrinterDialog.java", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fprint%2FPrinterDialog.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fprint%2FPrinterDialog.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fprint%2FPrinterDialog.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -479,17 +479,17 @@ else if (e.getActionCommand().equals(\"ATTRIBUTES\"))\n        */\n       void updateForSelectedService()\n       {\n-        PrinterMakeAndModel att1 = (PrinterMakeAndModel)\n+        PrinterMakeAndModel att1 =\n           getSelectedPrintService().getAttribute(PrinterMakeAndModel.class);\n         typValue.setText(att1 == null ? \"\" : att1.getValue());\n         \n-        PrinterInfo att2 = (PrinterInfo) \n+        PrinterInfo att2 = \n           getSelectedPrintService().getAttribute(PrinterInfo.class);\n         infoValue.setText(att2 == null ? \"\" : att2.getValue());\n         \n-        PrinterIsAcceptingJobs att3 = (PrinterIsAcceptingJobs)\n+        PrinterIsAcceptingJobs att3 =\n           getSelectedPrintService().getAttribute(PrinterIsAcceptingJobs.class);\n-        PrinterState att4 = (PrinterState)\n+        PrinterState att4 =\n           getSelectedPrintService().getAttribute(PrinterState.class);\n         \n         String status = att4.toString();  "}, {"sha": "8fb07ee6b8635124b0f3a635d7103f868779e8a6", "filename": "libjava/classpath/gnu/javax/security/auth/Password.java", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fsecurity%2Fauth%2FPassword.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fsecurity%2Fauth%2FPassword.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fsecurity%2Fauth%2FPassword.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -40,8 +40,6 @@\n \n import gnu.java.security.util.ExpirableObject;\n \n-import javax.security.auth.DestroyFailedException;\n-\n /**\n  * Immutible, though destroyable, password class.\n  *\n@@ -145,7 +143,7 @@ public Password (char[] password, int offset, int length, long delay)\n \n     for(i = 0, j = offset; i < length; i++, j++)\n       {\n-        this.password[i] = (char) password[j];\n+        this.password[i] = password[j];\n         // XXX this should use character encodings, other than ASCII.\n         bPassword[i] = (byte) (password[j] & 0x7F);\n       }"}, {"sha": "a6dce60b394d93486b8f9d8632e76d6127da51f4", "filename": "libjava/classpath/gnu/javax/sound/AudioSecurityManager.java", "status": "modified", "additions": 71, "deletions": 0, "changes": 71, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fsound%2FAudioSecurityManager.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fsound%2FAudioSecurityManager.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fsound%2FAudioSecurityManager.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -1,19 +1,90 @@\n+/* AudioSecurityManager.java -- Manages Security requests for Sound classes.\n+ \n+ Copyright (C) 2007 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n package gnu.javax.sound;\n \n import javax.sound.sampled.AudioPermission;\n \n+/**\n+ * This class handles security requests for classes in the Sound API.\n+ * \n+ * A class that needs to check against a particular permission type may use this\n+ * class to query the <code>SecurityManager</code>.\n+ * \n+ * For example, to check for a read permission, a class can simply pass the\n+ * <code>Permission.READ</code> constant to\n+ * {@link #checkPermissions(gnu.javax.sound.AudioSecurityManager.Permission))},\n+ * like the following code demonstrates:\n+ *\n+ * <pre>\n+ * AudioSecurityManager.checkPermissions(Permission.PLAY);\n+ * </pre>\n+ * \n+ * If there is need to query for all the defined permissions type, the constant\n+ * <code>Permission.ALL</code> can be used. In alternative, the\n+ * {@link #checkPermissions()} is presented as a shorthand. \n+ * \n+ * @author Mario Torre <neugens@limasoftware.net>\n+ */\n public class AudioSecurityManager\n {\n+  /**\n+   * Defines a common set of permission allowed by the specification.\n+   */\n   public static enum Permission\n   {\n     PLAY, RECORD, ALL\n   }\n   \n+  /**\n+   * Shorthand to <code>checkPermissions(Permission.ALL)</code>. \n+   */\n   public static final void checkPermissions()\n   {\n     checkPermissions(Permission.ALL);\n   }\n   \n+  /**\n+   * Query the <code>SecurityManager</code> agains the given \n+   * <code>Permission</code>.\n+   * \n+   * @param permission\n+   */\n   public static final void checkPermissions(Permission permission)\n   {\n     SecurityManager sm = System.getSecurityManager();"}, {"sha": "740b124eb65155545369a7249e33e89187a34722", "filename": "libjava/classpath/gnu/javax/sound/midi/dssi/DSSIMidiDeviceProvider.java", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fsound%2Fmidi%2Fdssi%2FDSSIMidiDeviceProvider.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fsound%2Fmidi%2Fdssi%2FDSSIMidiDeviceProvider.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fsound%2Fmidi%2Fdssi%2FDSSIMidiDeviceProvider.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -44,8 +44,6 @@\n import java.io.FilenameFilter;\n \n import gnu.classpath.Configuration;\n-import gnu.javax.sound.midi.alsa.AlsaMidiSequencerDevice;\n-\n import javax.sound.midi.MidiDevice;\n import javax.sound.midi.MidiDevice.Info;\n import javax.sound.midi.spi.MidiDeviceProvider;"}, {"sha": "b9b6fe87a10fd16539ac1c303967b087fe3ea79a", "filename": "libjava/classpath/gnu/javax/sound/midi/file/MidiFileWriter.java", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fsound%2Fmidi%2Ffile%2FMidiFileWriter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fsound%2Fmidi%2Ffile%2FMidiFileWriter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fsound%2Fmidi%2Ffile%2FMidiFileWriter.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -38,10 +38,8 @@\n package gnu.javax.sound.midi.file;\n \n import java.io.File;\n-import java.io.FileInputStream;\n import java.io.FileOutputStream;\n import java.io.IOException;\n-import java.io.InputStream;\n import java.io.OutputStream;\n \n import javax.sound.midi.MetaMessage;"}, {"sha": "ed5852e6c9a8b017c45fdf645116576335d8a4c2", "filename": "libjava/classpath/gnu/javax/sound/sampled/AU/AUReader.java", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fsound%2Fsampled%2FAU%2FAUReader.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fsound%2Fsampled%2FAU%2FAUReader.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fsound%2Fsampled%2FAU%2FAUReader.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -47,7 +47,6 @@\n import java.io.IOException;\n import java.io.BufferedInputStream;\n import java.io.InputStream;\n-import java.io.DataInputStream;\n import java.io.FileInputStream;\n import java.net.URL;\n import java.nio.ByteBuffer;"}, {"sha": "aa42a4c3da8cd27207f82bd6459925c78d30d790", "filename": "libjava/classpath/gnu/javax/sound/sampled/gstreamer/GStreamerMixer.java", "status": "modified", "additions": 4, "deletions": 26, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fsound%2Fsampled%2Fgstreamer%2FGStreamerMixer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fsound%2Fsampled%2Fgstreamer%2FGStreamerMixer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fsound%2Fsampled%2Fgstreamer%2FGStreamerMixer.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -37,13 +37,9 @@\n \n package gnu.javax.sound.sampled.gstreamer;\n \n-import java.awt.AWTPermission;\n-\n import gnu.javax.sound.sampled.gstreamer.lines.GstSourceDataLine;\n \n import javax.sound.sampled.AudioFormat;\n-import javax.sound.sampled.AudioPermission;\n-import javax.sound.sampled.AudioSystem;\n import javax.sound.sampled.Control;\n import javax.sound.sampled.DataLine;\n import javax.sound.sampled.Line;\n@@ -52,7 +48,6 @@\n import javax.sound.sampled.Mixer;\n import javax.sound.sampled.SourceDataLine;\n import javax.sound.sampled.Control.Type;\n-import javax.sound.sampled.Line.Info;\n \n /**\n  * @author Mario Torre <neugens@limasoftware.net>\n@@ -81,32 +76,15 @@ protected GstInfo()\n       super(name, vendor, desc, vers);\n     }\n   }\n-  \n+    \n   public static final String GST_BACKEND = GstInfo.name;\n   public static final String GST_DECODER = \"decoder\";\n-  \n-  private static AudioFormat[] BASIC_FORMATS =\n-  {\n-     new AudioFormat(AudioFormat.Encoding.PCM_UNSIGNED,\n-                     AudioSystem.NOT_SPECIFIED,\n-                     AudioSystem.NOT_SPECIFIED,\n-                     AudioSystem.NOT_SPECIFIED,\n-                     AudioSystem.NOT_SPECIFIED,\n-                     AudioSystem.NOT_SPECIFIED,\n-                     true),\n-\n-     new AudioFormat(AudioFormat.Encoding.PCM_UNSIGNED,\n-                     AudioSystem.NOT_SPECIFIED,\n-                     AudioSystem.NOT_SPECIFIED,\n-                     AudioSystem.NOT_SPECIFIED,\n-                     AudioSystem.NOT_SPECIFIED,\n-                     AudioSystem.NOT_SPECIFIED,\n-                     false),\n-  };\n+  public static final String GST_TYPE_NAME = \"type\";\n+  public static final String GST_FILE_EXTENSION = \"ext\";\n   \n   /** Mixer Info */\n   private static final Mixer.Info INFO = new GStreamerMixer.GstInfo();\n-\n+  \n   public Line getLine(Line.Info info)\n       throws LineUnavailableException\n   {"}, {"sha": "b90caef24b51f3938fbc55e64d6b14b800c3df81", "filename": "libjava/classpath/gnu/javax/sound/sampled/gstreamer/io/GstAudioFileReader.java", "status": "modified", "additions": 50, "deletions": 6, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fsound%2Fsampled%2Fgstreamer%2Fio%2FGstAudioFileReader.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fsound%2Fsampled%2Fgstreamer%2Fio%2FGstAudioFileReader.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fsound%2Fsampled%2Fgstreamer%2Fio%2FGstAudioFileReader.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -37,13 +37,14 @@\n \n package gnu.javax.sound.sampled.gstreamer.io;\n \n+import gnu.javax.sound.sampled.gstreamer.GStreamerMixer;\n+\n import java.io.BufferedInputStream;\n import java.io.File;\n import java.io.FileInputStream;\n import java.io.IOException;\n import java.io.InputStream;\n import java.net.URL;\n-\n import javax.sound.sampled.AudioFileFormat;\n import javax.sound.sampled.AudioFormat;\n import javax.sound.sampled.AudioInputStream;\n@@ -59,21 +60,61 @@\n  */\n public class GstAudioFileReader\n     extends AudioFileReader\n-{\n+{ \n   @Override\n   public AudioFileFormat getAudioFileFormat(File file)\n       throws UnsupportedAudioFileException, IOException\n   {\n-    throw new UnsupportedAudioFileException(\"Unsupported encoding.\");\n+    StringBuffer name = new StringBuffer(file.getName());\n+    String _name = name.substring(name.lastIndexOf(\".\") + 1);\n+    \n+    return getAudioFileFormat(\n+               new BufferedInputStream(new FileInputStream(file)), _name);\n   }\n \n   @Override\n   public AudioFileFormat getAudioFileFormat(InputStream is)\n       throws UnsupportedAudioFileException, IOException\n   {\n-    throw new UnsupportedAudioFileException(\"Unsupported encoding.\");\n+    return getAudioFileFormat(is, null);\n   }\n \n+  private AudioFileFormat getAudioFileFormat(InputStream is, String extension)\n+    throws UnsupportedAudioFileException\n+    {\n+      AudioFormat format = null;\n+      try\n+        {\n+          format = GstAudioFileReaderNativePeer.getAudioFormat(is);\n+        }\n+      catch (Exception e)\n+        {\n+          UnsupportedAudioFileException ex =\n+            new UnsupportedAudioFileException(\"Unsupported encoding.\");\n+         \n+          ex.initCause(ex.getCause());\n+          throw ex;\n+        }\n+      \n+      if (format == null)\n+        throw new UnsupportedAudioFileException(\"Unsupported encoding.\");\n+      \n+      String name = format.getProperty(GStreamerMixer.GST_DECODER).toString();\n+      \n+      if (extension == null)\n+        {\n+          extension =\n+            format.getProperty(GStreamerMixer.GST_FILE_EXTENSION).toString();\n+        }\n+      \n+      AudioFileFormat.Type type =\n+        new AudioFileFormat.Type(name, extension);\n+      \n+      // TODO: we should calculate this in some way. We don't need it, but\n+      // application may want to use this data.\n+      return new AudioFileFormat(type, format, AudioSystem.NOT_SPECIFIED);\n+    }\n+  \n   @Override\n   public AudioFileFormat getAudioFileFormat(URL url)\n       throws UnsupportedAudioFileException, IOException\n@@ -96,8 +137,11 @@ public AudioInputStream getAudioInputStream(File file)\n       }\n     catch (Exception e)\n       {\n-        // TODO Auto-generated catch block\n-        e.printStackTrace();\n+        UnsupportedAudioFileException ex =\n+          new UnsupportedAudioFileException(\"Unsupported encoding.\");\n+       \n+        ex.initCause(ex.getCause());\n+        throw ex;\n       }\n     \n     // get the header size"}, {"sha": "761720fee5de194cc41a1b73a2486a76bce31fd1", "filename": "libjava/classpath/gnu/javax/sound/sampled/gstreamer/io/GstAudioFileReaderNativePeer.java", "status": "modified", "additions": 32, "deletions": 24, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fsound%2Fsampled%2Fgstreamer%2Fio%2FGstAudioFileReaderNativePeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fsound%2Fsampled%2Fgstreamer%2Fio%2FGstAudioFileReaderNativePeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fsound%2Fsampled%2Fgstreamer%2Fio%2FGstAudioFileReaderNativePeer.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -38,6 +38,7 @@\n \n package gnu.javax.sound.sampled.gstreamer.io;\n \n+import gnu.classpath.Pointer;\n import gnu.javax.sound.sampled.gstreamer.GStreamerMixer;\n \n import java.io.BufferedInputStream;\n@@ -90,8 +91,11 @@\n     public String isSigned = null;\n     \n     public String layer = null;\n+    \n     public String bitrate = null;\n+    \n     public String framed = null;\n+    \n     public String type = null;\n   }\n   \n@@ -108,32 +112,28 @@ public static AudioFormat getAudioFormat(File file) throws Exception\n   \n   public static AudioFormat getAudioFormat(InputStream is) throws Exception\n   {\n-    GstHeader header = new GstHeader();\n-    \n-    BufferedInputStream stream = new BufferedInputStream(is);\n-    if(!stream.markSupported()) \n-      throw new IOException(\"Stream must support marking.\"); \n-    \n-    stream.mark(0);\n-    \n-    if (!gstreamer_get_audio_format_stream(header, stream))\n-      return null;\n-    \n-    return getAudioFormat(header);\n+    return getAudioFormat(is, new GstHeader());\n   }\n   \n   public static AudioFormat getAudioFormat(URL url) throws Exception\n   {\n     GstHeader header = new GstHeader();\n     header.file = url.toExternalForm();\n     \n-    BufferedInputStream stream = new BufferedInputStream(url.openStream());\n+    return getAudioFormat(url.openStream(), header);\n+  }\n+  \n+  private static AudioFormat getAudioFormat(InputStream is, GstHeader header)\n+      throws Exception\n+  {\n+    BufferedInputStream stream = new BufferedInputStream(is);\n     if(!stream.markSupported()) \n       throw new IOException(\"Stream must support marking.\"); \n     \n     stream.mark(0);\n     \n-    if (!gstreamer_get_audio_format_stream(header, stream))\n+    if (!gstreamer_get_audio_format_stream(header, new GstInputStream(stream).\n+                                           getNativeClass()))\n       return null;\n     \n     return getAudioFormat(header);\n@@ -200,34 +200,41 @@ private static AudioFormat getAudioFormat(GstHeader header)\n           bigEndian = true;\n       }\n     \n+    String ext = null;\n+    \n     int frameSize = na;\n     float frameRate = na;\n     String lowerCase = header.name.toLowerCase();\n     \n     // FIXME: frameRate = sampleRate in these cases under all the tests so far\n     // but I'm not sure if this is always correct...\n-    if (lowerCase.contains(\"law\") || lowerCase.contains(\"au\") ||\n-        lowerCase.contains(\"x-au\"))\n+    if (lowerCase.contains(\"law\") || lowerCase.contains(\"au\"))\n       {\n         frameSize = (sampleSizeInBits >> 3) * channels;\n         frameRate = sampleRate;\n+        ext = \"au\";\n       }\n     else if (lowerCase.contains(\"wav\"))\n       {\n         frameSize = ((sampleSizeInBits + 7) / 8) * channels;\n         frameRate = sampleRate;\n+        ext = \"wav\";\n       }\n     else if (lowerCase.contains(\"iff\"))\n       {\n         frameSize = (sampleSizeInBits * channels) / 8;\n         frameRate = sampleRate;\n+        ext = \"aiff\";\n       }\n     \n     // write all the additional properties we got to identify\n     // the gstreamer plugin actually used to deal with this stream\n     Map<String, Object> properties = new HashMap<String, Object>();\n     properties.put(GStreamerMixer.GST_BACKEND, true);\n     properties.put(GStreamerMixer.GST_DECODER, header.name);\n+    properties.put(GStreamerMixer.GST_TYPE_NAME, encoding.toString());\n+    if (ext != null)\n+      properties.put(GStreamerMixer.GST_FILE_EXTENSION, ext);\n     \n     /* now we put in some of the additional properties if we have them */\n     if (header.type != null) properties.put(\"type\", header.type);\n@@ -251,26 +258,27 @@ else if (lowerCase.contains(\"iff\"))\n   /* ***** native methods ***** */\n   \n   /**\n-   * Retrieve header information about the file being played.\n-   * \n-   * @param info\n-   * @return\n+   * Retrieve header information about the stream being played.\n    */\n   native static final\n   protected boolean gstreamer_get_audio_format_stream(GstHeader info,\n-                                               BufferedInputStream istream);\n+                                                      Pointer pointer);\n   \n   /**\n    * Retrieve header information about the file being played.\n-   * \n-   * @param info\n-   * @return\n    */\n   native static final\n   protected boolean gstreamer_get_audio_format_file(GstHeader info);\n   \n+  /**\n+   * Initialize the native peer and enables the object cache.\n+   * It is meant to be used by the static initializer.\n+   */\n+  native private static final void init_id_cache();\n+  \n   static\n   {\n     System.loadLibrary(\"gstreamerpeer\"); //$NON-NLS-1$\n+    init_id_cache();\n   }\n }"}, {"sha": "0702eded7e83a37f670d900d2cd9dd76afbd9466", "filename": "libjava/classpath/gnu/javax/sound/sampled/gstreamer/io/GstInputStream.java", "status": "added", "additions": 119, "deletions": 0, "changes": 119, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fsound%2Fsampled%2Fgstreamer%2Fio%2FGstInputStream.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fsound%2Fsampled%2Fgstreamer%2Fio%2FGstInputStream.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fsound%2Fsampled%2Fgstreamer%2Fio%2FGstInputStream.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -0,0 +1,119 @@\n+/* GstInputStream.java -- Trampoline class for an InputStream, mean to be used\n+ by native code.\n+ Copyright (C) 2007 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+package gnu.javax.sound.sampled.gstreamer.io;\n+\n+import gnu.classpath.Pointer;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+\n+/**\n+ * Encapsulates the functionality of an InputStream Object.\n+ * \n+ * This class is only meant to be used by the native code, to allow reading\n+ * of the given InputStream as part of a the GStreamer InputStream Source\n+ * Plugin.\n+ * \n+ * <strong>Note:</strong> this class will be not garbage collected as the\n+ * native code contains strong references to internal fields.\n+ * The native layer provides a method that can be called by the C code to\n+ * free the resources and to let the garbage collected to handle this class\n+ * when not needed anymore.\n+ * \n+ * @author Mario Torre <neugens@limasoftware.net>\n+ */\n+public class GstInputStream\n+{\n+  /** The real InputStream on which to perform reading operations. */\n+  private InputStream istream;\n+  \n+  /**\n+   * Initialized in the native code, don't change without changes \n+   * in the native layer.\n+   */\n+  private Pointer gstInputStream = null;\n+  \n+  public GstInputStream(InputStream istream)\n+  {\n+    this.istream = istream;\n+    init_instance();\n+  }\n+  \n+  public int read(byte[] buf, int off, int len) throws IOException\n+  {\n+    return this.istream.read(buf, off, len);\n+  }\n+  \n+  public int available() throws IOException\n+  {\n+    return this.istream.available();\n+  }\n+  \n+  /**\n+   * Return a reference to the GstInputStream native class as a Pointer object.\n+   * This method is intended as an helper accessor and the returned pointer\n+   * needs to be casted and used in the native code only. \n+   *  \n+   * @return Pointer to the native GstInputStream class.\n+   */\n+  public Pointer getNativeClass()\n+  {\n+    return this.gstInputStream;\n+  }\n+  \n+  /* native methods */\n+  \n+  /**\n+   * Initialize the native peer and enables the object cache.\n+   * It is meant to be used by the class constructor.\n+   */\n+  native private final void init_instance();\n+  \n+  /**\n+   * Initialize the native peer and enables the object cache.\n+   * It is meant to be used by the static initializer.\n+   */\n+  native private static final void init_id_cache();\n+\n+  static\n+  {\n+    System.loadLibrary(\"gstreamerpeer\"); //$NON-NLS-1$\n+    init_id_cache();\n+  }\n+}"}, {"sha": "33be15c58b8b98730843a5d5adfa5c59a087dfce", "filename": "libjava/classpath/gnu/javax/sound/sampled/gstreamer/lines/GstDataLine.java", "status": "modified", "additions": 24, "deletions": 18, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fsound%2Fsampled%2Fgstreamer%2Flines%2FGstDataLine.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fsound%2Fsampled%2Fgstreamer%2Flines%2FGstDataLine.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fsound%2Fsampled%2Fgstreamer%2Flines%2FGstDataLine.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -41,22 +41,13 @@\n import javax.sound.sampled.Control;\n import javax.sound.sampled.DataLine;\n import javax.sound.sampled.LineListener;\n-import javax.sound.sampled.LineUnavailableException;\n import javax.sound.sampled.Control.Type;\n \n public abstract class GstDataLine\n     implements DataLine\n {\n-  public static enum State\n-  {\n-    PLAY, PAUSE, STOP\n-  }\n-  \n   public static final int DEFAULT_BUFFER_SIZE = 1024;\n   \n-  /** Represents the playing state of this Line. */\n-  protected State state = State.STOP;\n-  \n   /** Represents if this Line is opened or not.  */\n   protected Boolean open = false; \n   \n@@ -90,12 +81,7 @@ public float getLevel()\n     // TODO Auto-generated method stub\n     return 0;\n   }\n-\n-  public boolean isRunning()\n-  {\n-    return (state == State.PLAY || state == State.PAUSE);\n-  }\n-\n+  \n   public void addLineListener(LineListener listener)\n   {\n     // TODO Auto-generated method stub\n@@ -131,15 +117,35 @@ public boolean isOpen()\n     return false;\n   }\n \n-  public void open() throws LineUnavailableException\n+  public void removeLineListener(LineListener listener)\n   {\n     // TODO Auto-generated method stub\n \n   }\n \n-  public void removeLineListener(LineListener listener)\n+  /* protected methods for subclasses */\n+  \n+  /**\n+   * @param open the open to set\n+   */\n+  protected void setOpen(Boolean open)\n   {\n-    // TODO Auto-generated method stub\n+    this.open = open;\n+  }\n+\n+  /**\n+   * @param bufferSize the bufferSize to set\n+   */\n+  protected void setBufferSize(int bufferSize)\n+  {\n+    this.bufferSize = bufferSize;\n+  }\n \n+  /**\n+   * @param format the format to set\n+   */\n+  protected void setFormat(AudioFormat format)\n+  {\n+    this.format = format;\n   }\n }"}, {"sha": "84007ac97e73895ba02673f45d76caa880f325ec", "filename": "libjava/classpath/gnu/javax/sound/sampled/gstreamer/lines/GstNativeDataLine.java", "status": "modified", "additions": 30, "deletions": 1, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fsound%2Fsampled%2Fgstreamer%2Flines%2FGstNativeDataLine.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fsound%2Fsampled%2Fgstreamer%2Flines%2FGstNativeDataLine.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fsound%2Fsampled%2Fgstreamer%2Flines%2FGstNativeDataLine.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba", "patch": "@@ -37,12 +37,41 @@\n \n package gnu.javax.sound.sampled.gstreamer.lines;\n \n+import gnu.classpath.Pointer;\n+\n+import javax.sound.sampled.LineUnavailableException;\n+\n public class GstNativeDataLine\n-{\n+{ \n+  public static final GstPipeline createSourcePipeline(int bufferSize)\n+    throws LineUnavailableException\n+  {\n+    GstPipeline pipeline = new GstPipeline(bufferSize);\n+ \n+    pipeline.createForWrite();\n+    \n+    if (!setup_sink_pipeline(pipeline.getNativeClass()))\n+      throw new LineUnavailableException(\"Line unavailable\");\n+    \n+    return pipeline;\n+  }\n   \n+  /* native methods */\n   \n+  /**\n+   * Initialize the native peer and enables the object cache.\n+   * It is meant to be used by the static initializer.\n+   */\n+  native static final private void init_id_cache();\n+\n+  /**\n+   * Setup a new GStreamer Pipeline\n+   */\n+  native static final private boolean setup_sink_pipeline(Pointer pipeline);\n+\n   static\n   {\n     System.loadLibrary(\"gstreamerpeer\"); //$NON-NLS-1$\n+    init_id_cache();\n   }\n }"}, {"sha": "f561f71c2fab6f399950dd5b4a46f00b64a94e8a", "filename": "libjava/classpath/gnu/javax/sound/sampled/gstreamer/lines/GstPipeline.java", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fsound%2Fsampled%2Fgstreamer%2Flines%2FGstPipeline.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fsound%2Fsampled%2Fgstreamer%2Flines%2FGstPipeline.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fsound%2Fsampled%2Fgstreamer%2Flines%2FGstPipeline.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba"}, {"sha": "f149ab39df2735c6033a87a85a38fbc97e012fd0", "filename": "libjava/classpath/gnu/javax/sound/sampled/gstreamer/lines/GstSourceDataLine.java", "status": "modified", "additions": 42, "deletions": 23, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fsound%2Fsampled%2Fgstreamer%2Flines%2FGstSourceDataLine.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fsound%2Fsampled%2Fgstreamer%2Flines%2FGstSourceDataLine.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fsound%2Fsampled%2Fgstreamer%2Flines%2FGstSourceDataLine.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba"}, {"sha": "203eadc407306c0f3edb98dbbe79362dbaafb60a", "filename": "libjava/classpath/gnu/javax/swing/text/html/css/FontSize.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fswing%2Ftext%2Fhtml%2Fcss%2FFontSize.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fswing%2Ftext%2Fhtml%2Fcss%2FFontSize.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fswing%2Ftext%2Fhtml%2Fcss%2FFontSize.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba"}, {"sha": "6e182a5362357251b395047dba7dbc795a4de4ad", "filename": "libjava/classpath/gnu/javax/swing/text/html/css/Selector.java", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fswing%2Ftext%2Fhtml%2Fcss%2FSelector.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fswing%2Ftext%2Fhtml%2Fcss%2FSelector.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fswing%2Ftext%2Fhtml%2Fcss%2FSelector.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba"}, {"sha": "54469b349959513347b8005f1557bf27f6f7ff61", "filename": "libjava/classpath/gnu/javax/swing/text/html/parser/models/node.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fswing%2Ftext%2Fhtml%2Fparser%2Fmodels%2Fnode.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fswing%2Ftext%2Fhtml%2Fparser%2Fmodels%2Fnode.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fswing%2Ftext%2Fhtml%2Fparser%2Fmodels%2Fnode.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba"}, {"sha": "e99be3238e94d8f4d355062177c17ef05baba7ef", "filename": "libjava/classpath/gnu/javax/swing/text/html/parser/support/Parser.java", "status": "modified", "additions": 14, "deletions": 16, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fswing%2Ftext%2Fhtml%2Fparser%2Fsupport%2FParser.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fswing%2Ftext%2Fhtml%2Fparser%2Fsupport%2FParser.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fswing%2Ftext%2Fhtml%2Fparser%2Fsupport%2FParser.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba"}, {"sha": "80bb333a528919a2ed95ae43f7478cb95aa17d20", "filename": "libjava/classpath/gnu/javax/swing/text/html/parser/support/low/ReaderTokenizer.java", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fswing%2Ftext%2Fhtml%2Fparser%2Fsupport%2Flow%2FReaderTokenizer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fswing%2Ftext%2Fhtml%2Fparser%2Fsupport%2Flow%2FReaderTokenizer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fswing%2Ftext%2Fhtml%2Fparser%2Fsupport%2Flow%2FReaderTokenizer.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba"}, {"sha": "43c07572a14ecd9796a4749abb93d426c1ae8de4", "filename": "libjava/classpath/gnu/javax/swing/text/html/parser/support/parameterDefaulter.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fswing%2Ftext%2Fhtml%2Fparser%2Fsupport%2FparameterDefaulter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fswing%2Ftext%2Fhtml%2Fparser%2Fsupport%2FparameterDefaulter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fswing%2Ftext%2Fhtml%2Fparser%2Fsupport%2FparameterDefaulter.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba"}, {"sha": "0cb6d7a59f3338593998d7f39a9de45fa6ba816a", "filename": "libjava/classpath/gnu/javax/swing/text/html/parser/support/textPreProcessor.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fswing%2Ftext%2Fhtml%2Fparser%2Fsupport%2FtextPreProcessor.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fswing%2Ftext%2Fhtml%2Fparser%2Fsupport%2FtextPreProcessor.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fswing%2Ftext%2Fhtml%2Fparser%2Fsupport%2FtextPreProcessor.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba"}, {"sha": "c0fd8027c21737b07f3173eba1fad950ecc429ef", "filename": "libjava/classpath/gnu/xml/aelfred2/XmlParser.java", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fxml%2Faelfred2%2FXmlParser.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fxml%2Faelfred2%2FXmlParser.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Faelfred2%2FXmlParser.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba"}, {"sha": "3bca44c09925fb26188f96348c2f6346850ec1d9", "filename": "libjava/classpath/gnu/xml/dom/html2/DomHTMLButtonElement.java", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fxml%2Fdom%2Fhtml2%2FDomHTMLButtonElement.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fxml%2Fdom%2Fhtml2%2FDomHTMLButtonElement.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Fdom%2Fhtml2%2FDomHTMLButtonElement.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba"}, {"sha": "c63620087e3eeb5649850f10d20662a033ca1de0", "filename": "libjava/classpath/gnu/xml/dom/html2/DomHTMLCollection.java", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fxml%2Fdom%2Fhtml2%2FDomHTMLCollection.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fxml%2Fdom%2Fhtml2%2FDomHTMLCollection.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Fdom%2Fhtml2%2FDomHTMLCollection.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba"}, {"sha": "c6d8c4c5ca6515b46abc5703da181a68ca218ccb", "filename": "libjava/classpath/gnu/xml/dom/html2/DomHTMLParser.java", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fxml%2Fdom%2Fhtml2%2FDomHTMLParser.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fxml%2Fdom%2Fhtml2%2FDomHTMLParser.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Fdom%2Fhtml2%2FDomHTMLParser.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba"}, {"sha": "d0e1a4f20deadfd881cabd0b9160f436e34ecce9", "filename": "libjava/classpath/gnu/xml/libxmlj/dom/GnomeXPathResult.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fxml%2Flibxmlj%2Fdom%2FGnomeXPathResult.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fxml%2Flibxmlj%2Fdom%2FGnomeXPathResult.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Flibxmlj%2Fdom%2FGnomeXPathResult.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba"}, {"sha": "53f7f24a29f36d629340bb57f6a061cb4f7dfd2a", "filename": "libjava/classpath/gnu/xml/pipeline/DomConsumer.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fxml%2Fpipeline%2FDomConsumer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fxml%2Fpipeline%2FDomConsumer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Fpipeline%2FDomConsumer.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba"}, {"sha": "af2113f97ceba0c8936fd606a7e4cacf1b2fd925", "filename": "libjava/classpath/gnu/xml/pipeline/EventFilter.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fxml%2Fpipeline%2FEventFilter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fxml%2Fpipeline%2FEventFilter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Fpipeline%2FEventFilter.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba"}, {"sha": "f74aebd3526020052c83cbeaaebb183310951cdf", "filename": "libjava/classpath/gnu/xml/stream/AttributeImpl.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fxml%2Fstream%2FAttributeImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fxml%2Fstream%2FAttributeImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Fstream%2FAttributeImpl.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba"}, {"sha": "0e3ed9630ad317c7ab2df10b442118e2f7de3d35", "filename": "libjava/classpath/gnu/xml/stream/EndDocumentImpl.java", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fxml%2Fstream%2FEndDocumentImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fxml%2Fstream%2FEndDocumentImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Fstream%2FEndDocumentImpl.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba"}, {"sha": "ab1f86e49ed5eb35cdc37982ff0bd2d9d9bec511", "filename": "libjava/classpath/gnu/xml/stream/SAXParser.java", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fxml%2Fstream%2FSAXParser.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fxml%2Fstream%2FSAXParser.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Fstream%2FSAXParser.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba"}, {"sha": "d5c4af12c5e80c64a3da88910b0f9a5ac16052e6", "filename": "libjava/classpath/gnu/xml/stream/XIncludeFilter.java", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fxml%2Fstream%2FXIncludeFilter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fxml%2Fstream%2FXIncludeFilter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Fstream%2FXIncludeFilter.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba"}, {"sha": "fb1e4c28c5839a4f7b3e92cb553b9f5bc4f04c9a", "filename": "libjava/classpath/gnu/xml/stream/XMLEventAllocatorImpl.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fxml%2Fstream%2FXMLEventAllocatorImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fxml%2Fstream%2FXMLEventAllocatorImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Fstream%2FXMLEventAllocatorImpl.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba"}, {"sha": "f694753c4b444d5745ad9bfefec261f41a81c987", "filename": "libjava/classpath/gnu/xml/stream/XMLEventFactoryImpl.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fxml%2Fstream%2FXMLEventFactoryImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fxml%2Fstream%2FXMLEventFactoryImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Fstream%2FXMLEventFactoryImpl.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba"}, {"sha": "de2fccb7a1e5e6fae796b95f224ab7ccea25a432", "filename": "libjava/classpath/gnu/xml/stream/XMLEventImpl.java", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fxml%2Fstream%2FXMLEventImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fxml%2Fstream%2FXMLEventImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Fstream%2FXMLEventImpl.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba"}, {"sha": "049575ac7071dc5ed43731ba29b8307d8caee524", "filename": "libjava/classpath/gnu/xml/stream/XMLParser.java", "status": "modified", "additions": 1, "deletions": 18, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fxml%2Fstream%2FXMLParser.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fxml%2Fstream%2FXMLParser.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Fstream%2FXMLParser.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba"}, {"sha": "35323e7353d158a4618127a8d238d45fe2cfc199", "filename": "libjava/classpath/gnu/xml/transform/StreamSerializer.java", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fxml%2Ftransform%2FStreamSerializer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fxml%2Ftransform%2FStreamSerializer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Ftransform%2FStreamSerializer.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba"}, {"sha": "41562c3c60a61d755c11cd7bc6a35eb049439af8", "filename": "libjava/classpath/gnu/xml/transform/Stylesheet.java", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fxml%2Ftransform%2FStylesheet.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fxml%2Ftransform%2FStylesheet.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Ftransform%2FStylesheet.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba"}, {"sha": "02c4693ae2f0c86242d42fd11de3ab90d1b2a310", "filename": "libjava/classpath/gnu/xml/util/Resolver.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fxml%2Futil%2FResolver.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fxml%2Futil%2FResolver.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Futil%2FResolver.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba"}, {"sha": "2fc4c33b91e234558de773d294844be87bec8588", "filename": "libjava/classpath/gnu/xml/validation/datatype/Base64BinaryType.java", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fxml%2Fvalidation%2Fdatatype%2FBase64BinaryType.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fxml%2Fvalidation%2Fdatatype%2FBase64BinaryType.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Fvalidation%2Fdatatype%2FBase64BinaryType.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba"}, {"sha": "25e488a05fd3339e24dd7521a9fcef9ba866e96a", "filename": "libjava/classpath/gnu/xml/validation/datatype/BooleanType.java", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fxml%2Fvalidation%2Fdatatype%2FBooleanType.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fxml%2Fvalidation%2Fdatatype%2FBooleanType.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Fvalidation%2Fdatatype%2FBooleanType.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba"}, {"sha": "b895c44b2132d25d8d4a2e3e41ede7684b7ab98b", "filename": "libjava/classpath/gnu/xml/validation/datatype/DecimalType.java", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fxml%2Fvalidation%2Fdatatype%2FDecimalType.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fxml%2Fvalidation%2Fdatatype%2FDecimalType.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Fvalidation%2Fdatatype%2FDecimalType.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba"}, {"sha": "5d2d8662d56f7f8f982b69debd95f1f09c9f7601", "filename": "libjava/classpath/gnu/xml/validation/datatype/DoubleType.java", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fxml%2Fvalidation%2Fdatatype%2FDoubleType.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fxml%2Fvalidation%2Fdatatype%2FDoubleType.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Fvalidation%2Fdatatype%2FDoubleType.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba"}, {"sha": "372e38871ae14c2406e19c556dd2d02929632623", "filename": "libjava/classpath/gnu/xml/validation/datatype/FloatType.java", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fxml%2Fvalidation%2Fdatatype%2FFloatType.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fxml%2Fvalidation%2Fdatatype%2FFloatType.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Fvalidation%2Fdatatype%2FFloatType.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba"}, {"sha": "8a92b15f634fbadf265eeeedfe9db93103805fe6", "filename": "libjava/classpath/gnu/xml/validation/datatype/HexBinaryType.java", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fxml%2Fvalidation%2Fdatatype%2FHexBinaryType.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0441a5bfb29083a532307ba2b1fd6d6d13944ba/libjava%2Fclasspath%2Fgnu%2Fxml%2Fvalidation%2Fdatatype%2FHexBinaryType.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Fvalidation%2Fdatatype%2FHexBinaryType.java?ref=e0441a5bfb29083a532307ba2b1fd6d6d13944ba"}]}