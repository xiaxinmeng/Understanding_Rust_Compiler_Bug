{"sha": "3fee081aa9efc529c87f812e1b04d691d8c13c88", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2ZlZTA4MWFhOWVmYzUyOWM4N2Y4MTJlMWIwNGQ2OTFkOGMxM2M4OA==", "commit": {"author": {"name": "Pascal Obry", "email": "obry@adacore.com", "date": "2015-10-26T11:59:42Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-10-26T11:59:42Z"}, "message": "s-os_lib.ads, [...] (Kill): New routine.\n\n2015-10-26  Pascal Obry  <obry@adacore.com>\n\n\t* s-os_lib.ads, s-os_lib.adb (Kill): New routine. This routine\n\tmakes visible support for killing processes in expect.c.\n\t* expect.c (__gnat_kill): Removed from here.\n\t* adaint.c (__gnat_kill): Added here to be usable in the compiler\n\t(System.OS_Lib).\n\t* make.adb (Sigint_Intercepted): Use the Kill routine from\n\tSystem.OS_Lib.\n\nFrom-SVN: r229348", "tree": {"sha": "9b6414d9e4fe15812e6151984b8b7a6a6b800af5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9b6414d9e4fe15812e6151984b8b7a6a6b800af5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3fee081aa9efc529c87f812e1b04d691d8c13c88", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3fee081aa9efc529c87f812e1b04d691d8c13c88", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3fee081aa9efc529c87f812e1b04d691d8c13c88", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3fee081aa9efc529c87f812e1b04d691d8c13c88/comments", "author": {"login": "TurboGit", "id": 467069, "node_id": "MDQ6VXNlcjQ2NzA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/467069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TurboGit", "html_url": "https://github.com/TurboGit", "followers_url": "https://api.github.com/users/TurboGit/followers", "following_url": "https://api.github.com/users/TurboGit/following{/other_user}", "gists_url": "https://api.github.com/users/TurboGit/gists{/gist_id}", "starred_url": "https://api.github.com/users/TurboGit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TurboGit/subscriptions", "organizations_url": "https://api.github.com/users/TurboGit/orgs", "repos_url": "https://api.github.com/users/TurboGit/repos", "events_url": "https://api.github.com/users/TurboGit/events{/privacy}", "received_events_url": "https://api.github.com/users/TurboGit/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fbf90e543f27ac7ea77df9044ede3e3541f06a18", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fbf90e543f27ac7ea77df9044ede3e3541f06a18", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fbf90e543f27ac7ea77df9044ede3e3541f06a18"}], "stats": {"total": 121, "additions": 71, "deletions": 50}, "files": [{"sha": "62367175f266afee01ede13a1455e0c12f62afd2", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fee081aa9efc529c87f812e1b04d691d8c13c88/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fee081aa9efc529c87f812e1b04d691d8c13c88/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=3fee081aa9efc529c87f812e1b04d691d8c13c88", "patch": "@@ -1,3 +1,13 @@\n+2015-10-26  Pascal Obry  <obry@adacore.com>\n+\n+\t* s-os_lib.ads, s-os_lib.adb (Kill): New routine. This routine\n+\tmakes visible support for killing processes in expect.c.\n+\t* expect.c (__gnat_kill): Removed from here.\n+\t* adaint.c (__gnat_kill): Added here to be usable in the compiler\n+\t(System.OS_Lib).\n+\t* make.adb (Sigint_Intercepted): Use the Kill routine from\n+\tSystem.OS_Lib.\n+\n 2015-10-26  Arnaud Charlet  <charlet@adacore.com>\n \n \t* einfo.ads, einfo.adb, exp_unst.adb (Needs_Typedef,"}, {"sha": "df6dbffaadfb6ab6e151a4cee9754b5643bbf86f", "filename": "gcc/ada/adaint.c", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fee081aa9efc529c87f812e1b04d691d8c13c88/gcc%2Fada%2Fadaint.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fee081aa9efc529c87f812e1b04d691d8c13c88/gcc%2Fada%2Fadaint.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fadaint.c?ref=3fee081aa9efc529c87f812e1b04d691d8c13c88", "patch": "@@ -168,6 +168,7 @@ UINT CurrentCCSEncoding;\n #if defined (_WIN32)\n \n #include <process.h>\n+#include <signal.h>\n #include <dir.h>\n #include <windows.h>\n #include <accctrl.h>\n@@ -3183,6 +3184,35 @@ __gnat_get_executable_load_address (void)\n #endif\n }\n \n+void\n+__gnat_kill (int pid, int sig, int close ATTRIBUTE_UNUSED)\n+{\n+#if defined(_WIN32)\n+  HANDLE h = OpenProcess (PROCESS_ALL_ACCESS, FALSE, pid);\n+  if (h == NULL)\n+    return;\n+  if (sig == 9)\n+    {\n+      TerminateProcess (h, 0);\n+      __gnat_win32_remove_handle (NULL, pid);\n+    }\n+  else if (sig == SIGINT)\n+    GenerateConsoleCtrlEvent (CTRL_C_EVENT, pid);\n+  else if (sig == SIGBREAK)\n+    GenerateConsoleCtrlEvent (CTRL_BREAK_EVENT, pid);\n+  /* ??? The last two alternatives don't really work. SIGBREAK requires setting\n+     up process groups at start time which we don't do; treating SIGINT is just\n+     not possible apparently. So we really only support signal 9. Fortunately\n+     that's all we use in GNAT.Expect */\n+\n+  CloseHandle (h);\n+#elif defined (__vxworks)\n+  /* Not implemented */\n+#else\n+  kill (pid, sig);\n+#endif\n+}\n+\n #ifdef __cplusplus\n }\n #endif"}, {"sha": "4da70180b77b4c48245d630d82ba6cf16ed6c2cd", "filename": "gcc/ada/expect.c", "status": "modified", "additions": 0, "deletions": 42, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fee081aa9efc529c87f812e1b04d691d8c13c88/gcc%2Fada%2Fexpect.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fee081aa9efc529c87f812e1b04d691d8c13c88/gcc%2Fada%2Fexpect.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexpect.c?ref=3fee081aa9efc529c87f812e1b04d691d8c13c88", "patch": "@@ -83,29 +83,6 @@\n #include <io.h>\n #include \"mingw32.h\"\n \n-void\n-__gnat_kill (int pid, int sig, int close)\n-{\n-  HANDLE h = OpenProcess (PROCESS_ALL_ACCESS, FALSE, pid);\n-  if (h == NULL)\n-    return;\n-  if (sig == 9)\n-    {\n-      TerminateProcess (h, 0);\n-      __gnat_win32_remove_handle (NULL, pid);\n-    }\n-  else if (sig == SIGINT)\n-    GenerateConsoleCtrlEvent (CTRL_C_EVENT, pid);\n-  else if (sig == SIGBREAK)\n-    GenerateConsoleCtrlEvent (CTRL_BREAK_EVENT, pid);\n-  /* ??? The last two alternatives don't really work. SIGBREAK requires setting\n-     up process groups at start time which we don't do; treating SIGINT is just\n-     not possible apparently. So we really only support signal 9. Fortunately\n-     that's all we use in GNAT.Expect */\n-\n-  CloseHandle (h);\n-}\n-\n int\n __gnat_waitpid (int pid)\n {\n@@ -214,12 +191,6 @@ __gnat_expect_poll (int *fd,\n #include <vms/iodef.h>\n #include <signal.h>\n \n-void\n-__gnat_kill (int pid, int sig, int close)\n-{\n-  kill (pid, sig);\n-}\n-\n int\n __gnat_waitpid (int pid)\n {\n@@ -371,12 +342,6 @@ typedef long fd_mask;\n #endif /* !_IBMR2 */\n #endif /* !NO_FD_SET */\n \n-void\n-__gnat_kill (int pid, int sig, int close)\n-{\n-  kill (pid, sig);\n-}\n-\n int\n __gnat_waitpid (int pid)\n {\n@@ -497,13 +462,6 @@ __gnat_expect_poll (int *fd,\n \n #else\n \n-void\n-__gnat_kill (int pid ATTRIBUTE_UNUSED,\n-\t     int sig ATTRIBUTE_UNUSED,\n-\t     int close ATTRIBUTE_UNUSED)\n-{\n-}\n-\n int\n __gnat_waitpid (int pid ATTRIBUTE_UNUSED, int sig ATTRIBUTE_UNUSED)\n {"}, {"sha": "f4bd63c81b21ffbf05fa99abcc58a35809d35d89", "filename": "gcc/ada/make.adb", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fee081aa9efc529c87f812e1b04d691d8c13c88/gcc%2Fada%2Fmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fee081aa9efc529c87f812e1b04d691d8c13c88/gcc%2Fada%2Fmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.adb?ref=3fee081aa9efc529c87f812e1b04d691d8c13c88", "patch": "@@ -87,10 +87,6 @@ package body Make is\n    --  Every program depends on this package, that must then be checked,\n    --  especially when -f and -a are used.\n \n-   procedure Kill (Pid : Process_Id; Sig_Num : Integer; Close : Integer);\n-   pragma Import (C, Kill, \"__gnat_kill\");\n-   --  Called by Sigint_Intercepted to kill all spawned compilation processes\n-\n    type Sigint_Handler is access procedure;\n    pragma Convention (C, Sigint_Handler);\n \n@@ -7306,16 +7302,14 @@ package body Make is\n    ------------------------\n \n    procedure Sigint_Intercepted is\n-      SIGINT  : constant := 2;\n-\n    begin\n       Set_Standard_Error;\n       Write_Line (\"*** Interrupted ***\");\n \n       --  Send SIGINT to all outstanding compilation processes spawned\n \n       for J in 1 .. Outstanding_Compiles loop\n-         Kill (Running_Compile (J).Pid, SIGINT, 1);\n+         Kill (Running_Compile (J).Pid, Hard_Kill => False);\n       end loop;\n \n       Finish_Program (Project_Tree, E_No_Compile);"}, {"sha": "61c0b41ea1686ceee6731ddd3ee6f58053dc33cf", "filename": "gcc/ada/s-os_lib.adb", "status": "modified", "additions": 20, "deletions": 1, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fee081aa9efc529c87f812e1b04d691d8c13c88/gcc%2Fada%2Fs-os_lib.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fee081aa9efc529c87f812e1b04d691d8c13c88/gcc%2Fada%2Fs-os_lib.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-os_lib.adb?ref=3fee081aa9efc529c87f812e1b04d691d8c13c88", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                     Copyright (C) 1995-2014, AdaCore                     --\n+--                     Copyright (C) 1995-2015, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1497,6 +1497,25 @@ package body System.OS_Lib is\n       return Is_Writable_File (F_Name'Address);\n    end Is_Writable_File;\n \n+   ----------\n+   -- Kill --\n+   ----------\n+\n+   procedure Kill (Pid : Process_Id; Hard_Kill : Boolean := True) is\n+      SIGKILL : constant := 9;\n+      SIGINT  : constant := 2;\n+\n+      procedure C_Kill (Pid : Process_Id; Sig_Num : Integer; Close : Integer);\n+      pragma Import (C, C_Kill, \"__gnat_kill\");\n+\n+   begin\n+      if Hard_Kill then\n+         C_Kill (Pid, SIGKILL, 1);\n+      else\n+         C_Kill (Pid, SIGINT, 1);\n+      end if;\n+   end Kill;\n+\n    -------------------------\n    -- Locate_Exec_On_Path --\n    -------------------------"}, {"sha": "e9bb9bf65b9d394dca16dc16a1e88ceb57158783", "filename": "gcc/ada/s-os_lib.ads", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fee081aa9efc529c87f812e1b04d691d8c13c88/gcc%2Fada%2Fs-os_lib.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fee081aa9efc529c87f812e1b04d691d8c13c88/gcc%2Fada%2Fs-os_lib.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-os_lib.ads?ref=3fee081aa9efc529c87f812e1b04d691d8c13c88", "patch": "@@ -876,6 +876,16 @@ package System.OS_Lib is\n    --  This function will always set success to False under VxWorks, since\n    --  there is no notion of executables under this OS.\n \n+   procedure Kill (Pid : Process_Id; Hard_Kill : Boolean := True);\n+   --  Kill process known as Pid by the OS. Does nothing if Pid is\n+   --  Invalid_Pid or on platforms where it is not supported like\n+   --  VxWorks.\n+   --  Hard_Kill is True by default and in this case the process\n+   --  is terminated immediately. If Hard_Kill is False a signal\n+   --  SIGINT is sent to the process on POSIX OS or a CTRL-C event\n+   --  on Windows, this let the process a chance to quit properly\n+   --  using a corresponding handler.\n+\n    function Argument_String_To_List\n      (Arg_String : String) return Argument_List_Access;\n    --  Take a string that is a program and its arguments and parse it into an"}]}