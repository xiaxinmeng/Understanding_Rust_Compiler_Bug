{"sha": "0c5cdb31bd423f650aaa3917cc21de0cde91e0fc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGM1Y2RiMzFiZDQyM2Y2NTBhYWEzOTE3Y2MyMWRlMGNkZTkxZTBmYw==", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-02-12T00:16:25Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-02-12T00:16:25Z"}, "message": "Daily bump.", "tree": {"sha": "b4045c735878d08b99f0ffb5e6c5dfc19665da3b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b4045c735878d08b99f0ffb5e6c5dfc19665da3b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0c5cdb31bd423f650aaa3917cc21de0cde91e0fc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c5cdb31bd423f650aaa3917cc21de0cde91e0fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0c5cdb31bd423f650aaa3917cc21de0cde91e0fc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c5cdb31bd423f650aaa3917cc21de0cde91e0fc/comments", "author": null, "committer": null, "parents": [{"sha": "85cefe22564c4b7c1159a544fa692a24e0c71870", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85cefe22564c4b7c1159a544fa692a24e0c71870", "html_url": "https://github.com/Rust-GCC/gccrs/commit/85cefe22564c4b7c1159a544fa692a24e0c71870"}], "stats": {"total": 188, "additions": 187, "deletions": 1}, "files": [{"sha": "ddf4c7f92d7bf9de0ceb6508b0ae33c51fb42bca", "filename": "gcc/ChangeLog", "status": "modified", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c5cdb31bd423f650aaa3917cc21de0cde91e0fc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c5cdb31bd423f650aaa3917cc21de0cde91e0fc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0c5cdb31bd423f650aaa3917cc21de0cde91e0fc", "patch": "@@ -1,3 +1,37 @@\n+2021-02-11  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* config/i386/winnt.c (i386_pe_seh_unwind_emit): When switching to\n+\tthe cold section, emit a nop before the directive if the previous\n+\tactive instruction can throw.\n+\n+2021-02-11  Peter Bergner  <bergner@linux.ibm.com>\n+\n+\tPR target/99041\n+\t* config/rs6000/predicates.md (mma_assemble_input_operand): Restrict\n+\tmemory addresses that are legal for quad word accesses.\n+\n+2021-02-11  Andrea Corallo  <andrea.corallo@arm.com>\n+\n+\tPR target/98931\n+\t* config/arm/thumb2.md (*doloop_end_internal): Generate\n+\talternative sequence to handle long range branches.\n+\n+2021-02-11  Joel Hutton  <joel.hutton@arm.com>\n+\n+\tPR tree-optimization/98772\n+\t* optabs-tree.c (supportable_half_widening_operation): New function\n+\tto check for supportable V8QI->V8HI widening patterns.\n+\t* optabs-tree.h (supportable_half_widening_operation): New function.\n+\t* tree-vect-stmts.c (vect_create_half_widening_stmts): New function\n+\tto create promotion stmts for V8QI->V8HI widening patterns.\n+\t(vectorizable_conversion): Add case for V8QI->V8HI.\n+\n+2021-02-11  Richard Biener  <rguenther@suse.de>\n+\n+\t* sparseset.h (SPARSESET_ELT_BITS): Remove.\n+\t(SPARSESET_ELT_TYPE): Use unsigned int.\n+\t* fwprop.c: Do not include sparseset.h.\n+\n 2021-02-10  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/99035"}, {"sha": "027c5a0d149a8ed883f40d536be5ac9fda088a5c", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c5cdb31bd423f650aaa3917cc21de0cde91e0fc/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c5cdb31bd423f650aaa3917cc21de0cde91e0fc/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=0c5cdb31bd423f650aaa3917cc21de0cde91e0fc", "patch": "@@ -1 +1 @@\n-20210211\n+20210212"}, {"sha": "1fee3e76399a0436899cfaf4bb993bb9e5fca3b7", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c5cdb31bd423f650aaa3917cc21de0cde91e0fc/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c5cdb31bd423f650aaa3917cc21de0cde91e0fc/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=0c5cdb31bd423f650aaa3917cc21de0cde91e0fc", "patch": "@@ -1,3 +1,7 @@\n+2021-02-11  Marek Polacek  <polacek@redhat.com>\n+\n+\t* c-parser.c (c_parser_if_statement): Use vec_free.\n+\n 2021-02-04  Martin Sebor  <msebor@redhat.com>\n \n \tPR c/97882"}, {"sha": "46cce66c41165269c5212f3db0a02aeb2c05dc19", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c5cdb31bd423f650aaa3917cc21de0cde91e0fc/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c5cdb31bd423f650aaa3917cc21de0cde91e0fc/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=0c5cdb31bd423f650aaa3917cc21de0cde91e0fc", "patch": "@@ -1,3 +1,36 @@\n+2021-02-11  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/95888\n+\t* pt.c (lookup_template_class_1): Pass tf_none to tsubst when looking\n+\tfor the partial instantiation.\n+\n+2021-02-11  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/99033\n+\t* init.c (build_zero_init_1): Handle zero initialiation of\n+\tflexible array members like initialization of [0] arrays.\n+\tUse integer_minus_onep instead of comparison to integer_minus_one_node\n+\tand integer_zerop instead of comparison against size_zero_node.\n+\tFormatting fixes.\n+\n+2021-02-11  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/99063\n+\t* semantics.c (finish_do_stmt): Check for unexpanded parameter packs.\n+\n+2021-02-11  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/97582\n+\t* name-lookup.c (op_unqualified_lookup): Handle an ambiguous\n+\tlookup result by discarding it if the first element is a\n+\tclass-scope declaration, otherwise return it.\n+\t(push_operator_bindings): Handle an ambiguous lookup result by\n+\tdoing push_local_binding on each element in the list.\n+\n+2021-02-11  Marek Polacek  <polacek@redhat.com>\n+\n+\t* parser.c (cp_parser_selection_statement): Use vec_free.\n+\n 2021-02-10  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/98988"}, {"sha": "275edc0947d061302a515915b9bff7e7aa6ec696", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c5cdb31bd423f650aaa3917cc21de0cde91e0fc/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c5cdb31bd423f650aaa3917cc21de0cde91e0fc/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=0c5cdb31bd423f650aaa3917cc21de0cde91e0fc", "patch": "@@ -1,3 +1,22 @@\n+2021-02-11  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/98897\n+\t* match.c (gfc_match_call): Include associate names as possible\n+\tentities with typebound subroutines. The target needs to be\n+\tresolved for the type.\n+\n+2021-02-11  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/99060\n+\t* primary.c (gfc_match_varspec): Test for non-null 'previous'\n+\tbefore using its name in the error message.\n+\n+2021-02-11  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\t* intrinsic.texi (FINDLOC): Add 'MASK' to argument table.\n+\t(MAXLOC, MAXVAL, MINLOC, MINVAL): For 'MASK', remove 'an\n+\tarray' as scalars are also permitted.\n+\n 2021-02-10  Julian Brown  <julian@codesourcery.com>\n \n \tPR fortran/98979"}, {"sha": "288ea1dabcbadbdd01c12b22be1c90ff9c7f4171", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c5cdb31bd423f650aaa3917cc21de0cde91e0fc/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c5cdb31bd423f650aaa3917cc21de0cde91e0fc/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0c5cdb31bd423f650aaa3917cc21de0cde91e0fc", "patch": "@@ -1,3 +1,58 @@\n+2021-02-11  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/95888\n+\t* g++.dg/template/deduce10.C: New test.\n+\t* g++.dg/template/deduce9.C: New test.\n+\n+2021-02-11  Peter Bergner  <bergner@linux.ibm.com>\n+\n+\tPR target/99041\n+\t* g++.target/powerpc/pr99041.C: New test.\n+\n+2021-02-11  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/99033\n+\t* g++.dg/ext/flexary38.C: New test.\n+\n+2021-02-11  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/99063\n+\t* g++.dg/cpp0x/variadic-crash6.C: New test.\n+\n+2021-02-11  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/97582\n+\t* g++.dg/cpp0x/lambda/lambda-template17.C: New test.\n+\n+2021-02-11  Andrea Corallo  <andrea.corallo@arm.com>\n+\n+\tPR target/98931\n+\t* gcc.target/arm/pr98931.c: New testcase.\n+\n+2021-02-11  Joel Hutton  <joel.hutton@arm.com>\n+\n+\tPR tree-optimization/98772\n+\t* gcc.target/aarch64/pr98772.c: New test.\n+\n+2021-02-11  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/98897\n+\t* gfortran.dg/typebound_call_32.f90: New test.\n+\n+2021-02-11  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/99060\n+\t* gfortran.dg/pr99060.f90: New test.\n+\n+2021-02-11  Alexandre Oliva  <oliva@adacore.com>\n+\n+\t* gcc.target/arm/simd/vmmla_1.c: Pass -mfpu=auto.\n+\n+2021-02-11  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libfortran/98825\n+\t* gfortran.dg/dollar_edit_descriptor_4.f: New test.\n+\n 2021-02-10  Martin Sebor  <msebor@redhat.com>\n \n \tPR tree-optimization/92879"}, {"sha": "36c2296ef1994d54d6cd5246ee195c3d981dd998", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c5cdb31bd423f650aaa3917cc21de0cde91e0fc/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c5cdb31bd423f650aaa3917cc21de0cde91e0fc/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=0c5cdb31bd423f650aaa3917cc21de0cde91e0fc", "patch": "@@ -1,3 +1,9 @@\n+2021-02-11  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libfortran/98825\n+\t* io/transfer.c (next_record_w): Insert check for seen_dollar and if\n+\tso, skip issueing next record.\n+\n 2021-01-27  Harris Snyder  <hsnyder@structura.bio>\n \n \t* runtime/ISO_Fortran_binding.c (CFI_establish): fixed"}, {"sha": "bb2288aab1d7ee59bb46b3536be17ef26049a7fd", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c5cdb31bd423f650aaa3917cc21de0cde91e0fc/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c5cdb31bd423f650aaa3917cc21de0cde91e0fc/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=0c5cdb31bd423f650aaa3917cc21de0cde91e0fc", "patch": "@@ -1,3 +1,21 @@\n+2021-02-11  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/linux/x86/futex.h (__futex_wait):\n+\tRevert output type back to long.\n+\t(__futex_wake): Ditto.\n+\t(futex_wait): Update for revert.\n+\t(futex_wake): Ditto.\n+\n+2021-02-11  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/linux/x86/futex.h (__futex_wait): New static inline\n+\twrapper function.  Correct output type to int and\n+\ttimeout type to void *.\n+\t(__futex_wake): New static inline wrapper function.\n+\tCorrect output type to int.\n+\t(futex_wait): Use __futex_wait.\n+\t(futex_wake): Use __futex_wake.\n+\n 2021-02-10  Julian Brown  <julian@codesourcery.com>\n \n \tPR fortran/98979"}, {"sha": "993f8affd3e2fa3c486cddf21aa53d78cac5308e", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c5cdb31bd423f650aaa3917cc21de0cde91e0fc/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c5cdb31bd423f650aaa3917cc21de0cde91e0fc/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=0c5cdb31bd423f650aaa3917cc21de0cde91e0fc", "patch": "@@ -1,3 +1,20 @@\n+2021-02-11  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* libsupc++/eh_ptr.cc (_GLIBCXX_EH_PTR_RELOPS_COMPAT): Define\n+\tnew macro.\n+\t* libsupc++/exception_ptr.h (_GLIBCXX_EH_PTR_USED): Check new\n+\tmacro instead of _GLIBCXX_EH_PTR_COMPAT.\n+\t(operator==): Likewise.\n+\n+2021-02-11  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/99058\n+\t* doc/xml/manual/status_cxx2011.xml: Document when support\n+\tbecame stable.\n+\t* doc/xml/manual/status_cxx2014.xml: Likewise.\n+\t* doc/xml/manual/status_cxx2017.xml: Likewise.\n+\t* doc/html/manual/status.html: Regenerate.\n+\n 2021-02-10  Jonathan Wakely  <jwakely@redhat.com>\n \n \tPR libstdc++/88881"}]}