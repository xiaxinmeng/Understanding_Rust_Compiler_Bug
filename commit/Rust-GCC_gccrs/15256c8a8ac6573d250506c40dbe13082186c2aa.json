{"sha": "15256c8a8ac6573d250506c40dbe13082186c2aa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTUyNTZjOGE4YWM2NTczZDI1MDUwNmM0MGRiZTEzMDgyMTg2YzJhYQ==", "commit": {"author": {"name": "Frederik Harwath", "email": "frederik@codesourcery.com", "date": "2020-04-21T10:36:14Z"}, "committer": {"name": "Frederik Harwath", "email": "frederik@codesourcery.com", "date": "2020-04-21T13:12:05Z"}, "message": "Remove fishy self-assignment in omp-low.c [PR94629]\n\nThe PR noticed that omp-low.c contains a self-assignment in the\nfunction new_omp_context:\n\nif (outer_ctx) {\n    ...\n    ctx->outer_reduction_clauses = ctx->outer_reduction_clauses;\n\nThis is obviously useless.  The original intention might have been\nto copy the field from the outer_ctx to ctx.  Since this is done\n(properly) in the only function where this field is actually used\n(in function scan_omp_for) and the field is being initialized to zero\nduring the struct allocation, there is no need to attempt to do\nanything to this field in new_omp_context. Thus this commit\nremoves any assignment to the field from new_omp_context.\n\n2020-04-21  Frederik Harwath  <frederik@codesourcery.com>\n\n\tPR other/94629\n\t* gcc/omp-low.c (new_omp_context): Remove assignments to\n\tctx->outer_reduction_clauses and ctx->local_reduction_clauses.\n\nReviewed-by: Thomas Schwinge  <thomas@codesourcery.com>", "tree": {"sha": "08bb1a7a75b85246792c18c03475348c29f9bc40", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/08bb1a7a75b85246792c18c03475348c29f9bc40"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/15256c8a8ac6573d250506c40dbe13082186c2aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15256c8a8ac6573d250506c40dbe13082186c2aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/15256c8a8ac6573d250506c40dbe13082186c2aa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15256c8a8ac6573d250506c40dbe13082186c2aa/comments", "author": {"login": "frederik-h", "id": 22046314, "node_id": "MDQ6VXNlcjIyMDQ2MzE0", "avatar_url": "https://avatars.githubusercontent.com/u/22046314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frederik-h", "html_url": "https://github.com/frederik-h", "followers_url": "https://api.github.com/users/frederik-h/followers", "following_url": "https://api.github.com/users/frederik-h/following{/other_user}", "gists_url": "https://api.github.com/users/frederik-h/gists{/gist_id}", "starred_url": "https://api.github.com/users/frederik-h/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frederik-h/subscriptions", "organizations_url": "https://api.github.com/users/frederik-h/orgs", "repos_url": "https://api.github.com/users/frederik-h/repos", "events_url": "https://api.github.com/users/frederik-h/events{/privacy}", "received_events_url": "https://api.github.com/users/frederik-h/received_events", "type": "User", "site_admin": false}, "committer": {"login": "frederik-h", "id": 22046314, "node_id": "MDQ6VXNlcjIyMDQ2MzE0", "avatar_url": "https://avatars.githubusercontent.com/u/22046314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frederik-h", "html_url": "https://github.com/frederik-h", "followers_url": "https://api.github.com/users/frederik-h/followers", "following_url": "https://api.github.com/users/frederik-h/following{/other_user}", "gists_url": "https://api.github.com/users/frederik-h/gists{/gist_id}", "starred_url": "https://api.github.com/users/frederik-h/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frederik-h/subscriptions", "organizations_url": "https://api.github.com/users/frederik-h/orgs", "repos_url": "https://api.github.com/users/frederik-h/repos", "events_url": "https://api.github.com/users/frederik-h/events{/privacy}", "received_events_url": "https://api.github.com/users/frederik-h/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ac1a0a388cd9529b4ba8b10d8ccd8099a2a95b23", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac1a0a388cd9529b4ba8b10d8ccd8099a2a95b23", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac1a0a388cd9529b4ba8b10d8ccd8099a2a95b23"}], "stats": {"total": 20, "additions": 14, "deletions": 6}, "files": [{"sha": "c3572ca03bd0e1c0c91164bcc281dbc6a109ed6e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15256c8a8ac6573d250506c40dbe13082186c2aa/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15256c8a8ac6573d250506c40dbe13082186c2aa/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=15256c8a8ac6573d250506c40dbe13082186c2aa", "patch": "@@ -1,3 +1,9 @@\n+2020-04-21  Frederik Harwath  <frederik@codesourcery.com>\n+\n+\tPR other/94629\n+\t* omp-low.c (new_omp_context): Remove assignments to\n+\tctx->outer_reduction_clauses and ctx->local_reduction_clauses.\n+\n 2020-04-20  Andreas Krebbel  <krebbel@linux.ibm.com>\n \n \t* config/s390/vector.md (\"popcountv8hi2_vx\", \"popcountv4si2_vx\")"}, {"sha": "88f23e60d3424e7a16a6e5f7aec010f0439330b4", "filename": "gcc/omp-low.c", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15256c8a8ac6573d250506c40dbe13082186c2aa/gcc%2Fomp-low.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15256c8a8ac6573d250506c40dbe13082186c2aa/gcc%2Fomp-low.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomp-low.c?ref=15256c8a8ac6573d250506c40dbe13082186c2aa", "patch": "@@ -128,10 +128,16 @@ struct omp_context\n      corresponding tracking loop iteration variables.  */\n   hash_map<tree, tree> *lastprivate_conditional_map;\n \n-  /* A tree_list of the reduction clauses in this context.  */\n+  /* A tree_list of the reduction clauses in this context. This is\n+    only used for checking the consistency of OpenACC reduction\n+    clauses in scan_omp_for and is not guaranteed to contain a valid\n+    value outside of this function. */\n   tree local_reduction_clauses;\n \n-  /* A tree_list of the reduction clauses in outer contexts.  */\n+  /* A tree_list of the reduction clauses in outer contexts. This is\n+    only used for checking the consistency of OpenACC reduction\n+    clauses in scan_omp_for and is not guaranteed to contain a valid\n+    value outside of this function. */\n   tree outer_reduction_clauses;\n \n   /* Nesting depth of this context.  Used to beautify error messages re\n@@ -931,8 +937,6 @@ new_omp_context (gimple *stmt, omp_context *outer_ctx)\n       ctx->outer = outer_ctx;\n       ctx->cb = outer_ctx->cb;\n       ctx->cb.block = NULL;\n-      ctx->local_reduction_clauses = NULL;\n-      ctx->outer_reduction_clauses = ctx->outer_reduction_clauses;\n       ctx->depth = outer_ctx->depth + 1;\n     }\n   else\n@@ -948,8 +952,6 @@ new_omp_context (gimple *stmt, omp_context *outer_ctx)\n       ctx->cb.transform_call_graph_edges = CB_CGE_MOVE;\n       ctx->cb.adjust_array_error_bounds = true;\n       ctx->cb.dont_remap_vla_if_no_change = true;\n-      ctx->local_reduction_clauses = NULL;\n-      ctx->outer_reduction_clauses = NULL;\n       ctx->depth = 1;\n     }\n "}]}