{"sha": "4aa97413d3845089735af2d5a5fe7b01eeae6008", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGFhOTc0MTNkMzg0NTA4OTczNWFmMmQ1YTVmZTdiMDFlZWFlNjAwOA==", "commit": {"author": {"name": "Christian Bruel", "email": "christian.bruel@st.com", "date": "2007-06-08T07:58:41Z"}, "committer": {"name": "Christian Bruel", "email": "chrbr@gcc.gnu.org", "date": "2007-06-08T07:58:41Z"}, "message": "re PR target/29953 ([SH-4] Perfomance regression in loops. cmp/eq used instead of dt)\n\nPR target/29953\n* config/sh/sh.md (doloop_end): New pattern and splitter.\n* loop-iv.c (simple_rhs_p): Check for hardware registers.\n\nFrom-SVN: r125564", "tree": {"sha": "703c2b7fb2c08be557096002e275a7a02efaf2ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/703c2b7fb2c08be557096002e275a7a02efaf2ad"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4aa97413d3845089735af2d5a5fe7b01eeae6008", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4aa97413d3845089735af2d5a5fe7b01eeae6008", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4aa97413d3845089735af2d5a5fe7b01eeae6008", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4aa97413d3845089735af2d5a5fe7b01eeae6008/comments", "author": null, "committer": null, "parents": [{"sha": "1fc3998daa162619e2826523d2b9efad2a3c7725", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1fc3998daa162619e2826523d2b9efad2a3c7725", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1fc3998daa162619e2826523d2b9efad2a3c7725"}], "stats": {"total": 58, "additions": 55, "deletions": 3}, "files": [{"sha": "583ba38eff8f6369df8f57ccc2441e9544397a68", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4aa97413d3845089735af2d5a5fe7b01eeae6008/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4aa97413d3845089735af2d5a5fe7b01eeae6008/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4aa97413d3845089735af2d5a5fe7b01eeae6008", "patch": "@@ -1,3 +1,9 @@\n+2007-06-08  Christian Bruel  <christian.bruel@st.com>\n+\n+\tPR target/29953\n+\t* config/sh/sh.md (doloop_end): New pattern and splitter.\n+\t* loop-iv.c (simple_rhs_p): Check for hardware registers.\n+\t\n 2007-06-08  Zdenek Dvorak  <dvorakz@suse.cz>\n \n \tPR middle-end/32209"}, {"sha": "20653b13105c560d74c85459756a420631566626", "filename": "gcc/config/sh/sh.md", "status": "modified", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4aa97413d3845089735af2d5a5fe7b01eeae6008/gcc%2Fconfig%2Fsh%2Fsh.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4aa97413d3845089735af2d5a5fe7b01eeae6008/gcc%2Fconfig%2Fsh%2Fsh.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.md?ref=4aa97413d3845089735af2d5a5fe7b01eeae6008", "patch": "@@ -7323,6 +7323,52 @@ label:\n \t\t ? gen_rtx_GE (VOIDmode, operands[4], const0_rtx)\n \t\t : gen_rtx_GT (VOIDmode, const0_rtx, operands[4]));\n }\")\n+\n+; operand 0 is the loop count pseudo register\n+; operand 1 is the number of loop iterations or 0 if it is unknown\n+; operand 2 is the maximum number of loop iterations\n+; operand 3 is the number of levels of enclosed loops\n+; operand 4 is the label to jump to at the top of the loop\n+\n+(define_expand \"doloop_end\"\n+  [(parallel [(set (pc) (if_then_else\n+\t\t\t  (ne:SI (match_operand:SI 0 \"\" \"\")\n+\t\t\t      (const_int 1))\n+\t\t\t  (label_ref (match_operand 4 \"\" \"\"))\n+\t\t\t  (pc)))\n+\t      (set (match_dup 0)\n+\t\t   (plus:SI (match_dup 0) (const_int -1)))\n+\t      (clobber (reg:SI T_REG))])]\n+  \"TARGET_SH2\"\n+  \"\n+{\n+  if (GET_MODE (operands[0]) != SImode)\n+    FAIL;\n+}\n+\")\n+\n+(define_insn_and_split \"doloop_end_split\"\n+  [(set (pc)\n+\t(if_then_else (ne:SI (match_operand:SI 0 \"arith_reg_dest\" \"+r\")\n+\t\t\t  (const_int 1))\n+\t\t      (label_ref (match_operand 1 \"\" \"\"))\n+\t\t      (pc)))\n+   (set (match_dup 0)\n+\t(plus (match_dup 0) (const_int -1)))\n+   (clobber (reg:SI T_REG))]\n+  \"TARGET_SH2\"\n+  \"#\"\n+  \"\"\n+  [(parallel [(set (reg:SI T_REG)\n+\t\t   (eq:SI (match_operand:SI 0 \"arith_reg_dest\" \"+r\")\n+\t\t\t  (const_int 1)))\n+\t      (set (match_dup 0) (plus:SI (match_dup 0) (const_int -1)))])\n+   (set (pc) (if_then_else (eq (reg:SI T_REG) (const_int 0))\n+\t\t\t   (label_ref (match_operand 1 \"\" \"\"))\n+\t\t\t   (pc)))]\n+\"\"\n+   [(set_attr \"type\" \"cbranch\")])\n+\n \f\n ;; ------------------------------------------------------------------------\n ;; Jump and linkage insns"}, {"sha": "0b6d46db04a33963c1ca24672fd55df95feb2396", "filename": "gcc/loop-iv.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4aa97413d3845089735af2d5a5fe7b01eeae6008/gcc%2Floop-iv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4aa97413d3845089735af2d5a5fe7b01eeae6008/gcc%2Floop-iv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop-iv.c?ref=4aa97413d3845089735af2d5a5fe7b01eeae6008", "patch": "@@ -1293,7 +1293,7 @@ simple_rhs_p (rtx rhs)\n   rtx op0, op1;\n \n   if (CONSTANT_P (rhs)\n-      || REG_P (rhs))\n+      || (REG_P (rhs) && !HARD_REGISTER_P (rhs)))\n     return true;\n \n   switch (GET_CODE (rhs))\n@@ -1303,9 +1303,9 @@ simple_rhs_p (rtx rhs)\n       op0 = XEXP (rhs, 0);\n       op1 = XEXP (rhs, 1);\n       /* Allow reg + const sets only.  */\n-      if (REG_P (op0) && CONSTANT_P (op1))\n+      if (REG_P (op0) && !HARD_REGISTER_P (op0) && CONSTANT_P (op1))\n \treturn true;\n-      if (REG_P (op1) && CONSTANT_P (op0))\n+      if (REG_P (op1) && !HARD_REGISTER_P (op1) && CONSTANT_P (op0))\n \treturn true;\n \n       return false;"}]}