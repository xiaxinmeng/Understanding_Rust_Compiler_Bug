{"sha": "e0fb902946a60d01793e95398cbef91ad8e0645b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTBmYjkwMjk0NmE2MGQwMTc5M2U5NTM5OGNiZWY5MWFkOGUwNjQ1Yg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-02-25T13:36:33Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-02-25T13:36:33Z"}, "message": "(ASM_SPEC): Pass -pg to assembler.\n\n(FUNCTION_PROFILER): Do nothing; the assembler does it for us.\n\nFrom-SVN: r9083", "tree": {"sha": "aceb62794d247860de6075159bb38c738b25bece", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aceb62794d247860de6075159bb38c738b25bece"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e0fb902946a60d01793e95398cbef91ad8e0645b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0fb902946a60d01793e95398cbef91ad8e0645b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e0fb902946a60d01793e95398cbef91ad8e0645b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0fb902946a60d01793e95398cbef91ad8e0645b/comments", "author": null, "committer": null, "parents": [{"sha": "3a942930d4450a88c97c3b51569336d73f111ab9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a942930d4450a88c97c3b51569336d73f111ab9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a942930d4450a88c97c3b51569336d73f111ab9"}], "stats": {"total": 17, "additions": 4, "deletions": 13}, "files": [{"sha": "961c4802a8b96eff773d05cc49a96229682bef35", "filename": "gcc/config/alpha/alpha.h", "status": "modified", "additions": 4, "deletions": 13, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0fb902946a60d01793e95398cbef91ad8e0645b/gcc%2Fconfig%2Falpha%2Falpha.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0fb902946a60d01793e95398cbef91ad8e0645b/gcc%2Fconfig%2Falpha%2Falpha.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.h?ref=e0fb902946a60d01793e95398cbef91ad8e0645b", "patch": "@@ -42,7 +42,7 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n #define SIGNED_CHAR_SPEC \"%{funsigned-char:-D__CHAR_UNSIGNED__}\"\n \n /* No point in running CPP on our assembler output.  */\n-#define ASM_SPEC \"-nocpp\"\n+#define ASM_SPEC \"-nocpp %{pg}\"\n \n /* Under OSF/1, -p and -pg require -lprof1.  */\n \n@@ -911,19 +911,10 @@ extern char *alpha_function_name;\n #define FUNCTION_PROLOGUE(FILE, SIZE)  output_prolog (FILE, SIZE)\n \n /* Output assembler code to FILE to increment profiler label # LABELNO\n-   for profiling a function entry.  Profiling for gprof does not\n-   require LABELNO so we don't reference it at all.  This does,\n-   however, mean that -p won't work.  But OSF/1 doesn't support the\n-   traditional prof anyways, so there is no good reason to be\n-   backwards compatible. */\n-\n-#define FUNCTION_PROFILER(FILE, LABELNO)\t\t\t\\\n-    do {\t\t\t\t\t\t\t\\\n-\tfputs (\"\\tlda $28,_mcount\\n\", (FILE));\t\t\t\\\n-\tfputs (\"\\tjsr $28,($28),_mcount\\n\", (FILE));\t\t\\\n-\tfputs (\"\\tldgp $29,0($27)\\n\", (FILE));\t\t\t\\\n-    } while (0);\n+   for profiling a function entry.  Under OSF/1, profiling is enabled\n+   by simply passing -pg to the assember and linker.  */\n \n+#define FUNCTION_PROFILER(FILE, LABELNO)\n \n /* Output assembler code to FILE to initialize this source file's\n    basic block profiling info, if that has not already been done."}]}