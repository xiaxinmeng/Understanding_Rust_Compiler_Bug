{"sha": "926c786507a69f31253d6c904cf582b9ba162ded", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTI2Yzc4NjUwN2E2OWYzMTI1M2Q2YzkwNGNmNTgyYjliYTE2MmRlZA==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@linux.vnet.ibm.com", "date": "2017-06-28T13:07:12Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "2017-06-28T13:07:12Z"}, "message": "re PR ipa/81238 (Target clone support does not make default clone static.)\n\n[gcc]\n2017-06-28  Michael Meissner  <meissner@linux.vnet.ibm.com>\n\n\tPR ipa/81238\n\t* multiple_target.c (create_dispatcher_calls): Set the default\n\tclone to be static, not public.\n\n[gcc/testsuite]\n2017-06-28  Michael Meissner  <meissner@linux.vnet.ibm.com>\n\n\tPR target/81193\n\t* lib/target-supports.exp\n\t(check_ppc_cpu_supports_hw_available): New test to make sure\n\t__builtin_cpu_supports works on power7 and newer.\n\nFrom-SVN: r249737", "tree": {"sha": "cb7b4d9f83b9ee232667adcb13ea8c5b404016f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cb7b4d9f83b9ee232667adcb13ea8c5b404016f7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/926c786507a69f31253d6c904cf582b9ba162ded", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/926c786507a69f31253d6c904cf582b9ba162ded", "html_url": "https://github.com/Rust-GCC/gccrs/commit/926c786507a69f31253d6c904cf582b9ba162ded", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/926c786507a69f31253d6c904cf582b9ba162ded/comments", "author": null, "committer": null, "parents": [{"sha": "62cf73356918189f84ad9fcc83c1ffe8f86d7595", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62cf73356918189f84ad9fcc83c1ffe8f86d7595", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62cf73356918189f84ad9fcc83c1ffe8f86d7595"}], "stats": {"total": 46, "additions": 46, "deletions": 0}, "files": [{"sha": "e2d7261795b7ac2fc8b4f1053592c7ecbe826f3a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/926c786507a69f31253d6c904cf582b9ba162ded/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/926c786507a69f31253d6c904cf582b9ba162ded/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=926c786507a69f31253d6c904cf582b9ba162ded", "patch": "@@ -1,3 +1,9 @@\n+2017-06-28  Michael Meissner  <meissner@linux.vnet.ibm.com>\n+\n+\tPR ipa/81238\n+\t* multiple_target.c (create_dispatcher_calls): Set the default\n+\tclone to be static, not public.\n+\n 2017-06-28  Richard Biener  <rguenther@suse.de>\n \n \t* tree-vect-loop.c (vectorizable_reduction): Move special"}, {"sha": "eddc7d3744b7a805495a30e24c81dc2ca0018813", "filename": "gcc/multiple_target.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/926c786507a69f31253d6c904cf582b9ba162ded/gcc%2Fmultiple_target.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/926c786507a69f31253d6c904cf582b9ba162ded/gcc%2Fmultiple_target.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmultiple_target.c?ref=926c786507a69f31253d6c904cf582b9ba162ded", "patch": "@@ -148,6 +148,7 @@ create_dispatcher_calls (struct cgraph_node *node)\n \t}\n     }\n \n+  TREE_PUBLIC (node->decl) = 0;\n   symtab->change_decl_assembler_name (node->decl,\n \t\t\t\t      clone_function_name (node->decl,\n \t\t\t\t\t\t\t   \"default\"));"}, {"sha": "d50a9d8c646acb1f741a75b94547c00dad5b72e1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/926c786507a69f31253d6c904cf582b9ba162ded/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/926c786507a69f31253d6c904cf582b9ba162ded/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=926c786507a69f31253d6c904cf582b9ba162ded", "patch": "@@ -1,3 +1,10 @@\n+2017-06-28  Michael Meissner  <meissner@linux.vnet.ibm.com>\n+\n+\tPR target/81193\n+\t* lib/target-supports.exp\n+\t(check_ppc_cpu_supports_hw_available): New test to make sure\n+\t__builtin_cpu_supports works on power7 and newer.\n+\n 2017-06-28  Martin Liska  <mliska@suse.cz>\n \n \tPR ipa/81128"}, {"sha": "1583b27a46e1be46fcd025b26ab71110e8d31b16", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/926c786507a69f31253d6c904cf582b9ba162ded/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/926c786507a69f31253d6c904cf582b9ba162ded/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=926c786507a69f31253d6c904cf582b9ba162ded", "patch": "@@ -1930,6 +1930,37 @@ proc check_effective_target_powerpc64_no_dm { } {\n \t} {-O2}]\n }\n \n+# Return 1 if the target supports the __builtin_cpu_supports built-in,\n+# including having a new enough library to support the test.  Cache the result.\n+# Require at least a power7 to run on.\n+\n+proc check_ppc_cpu_supports_hw_available { } {\n+    return [check_cached_effective_target ppc_cpu_supports_hw_available {\n+\t# Some simulators are known to not support VSX/power8 instructions.\n+\t# For now, disable on Darwin\n+\tif { [istarget powerpc-*-eabi]\n+\t     || [istarget powerpc*-*-eabispe]\n+\t     || [istarget *-*-darwin*]} {\n+\t    expr 0\n+\t} else {\n+\t    set options \"-mvsx\"\n+\t    check_runtime_nocache ppc_cpu_supports_hw_available {\n+\t\tint main()\n+\t\t{\n+\t\t#ifdef __MACH__\n+\t\t  asm volatile (\"xxlor vs0,vs0,vs0\");\n+\t\t#else\n+\t\t  asm volatile (\"xxlor 0,0,0\");\n+\t        #endif\n+\t\t  if (!__builtin_cpu_supports (\"vsx\"))\n+\t\t    return 1;\n+\t\t  return 0;\n+\t\t}\n+\t    } $options\n+\t}\n+    }]\n+}\n+\n # Return 1 if the target supports executing power8 vector instructions, 0\n # otherwise.  Cache the result.\n \n@@ -6955,6 +6986,7 @@ proc is-effective-target { arg } {\n \t  \"ppc_float128_sw\" { set selected [check_ppc_float128_sw_available] }\n \t  \"ppc_float128_hw\" { set selected [check_ppc_float128_hw_available] }\n \t  \"ppc_recip_hw\"   { set selected [check_ppc_recip_hw_available] }\n+\t  \"ppc_cpu_supports_hw\" { set selected [check_ppc_cpu_supports_hw_available] }\n \t  \"dfp_hw\"         { set selected [check_dfp_hw_available] }\n \t  \"htm_hw\"         { set selected [check_htm_hw_available] }\n \t  \"named_sections\" { set selected [check_named_sections_available] }"}]}