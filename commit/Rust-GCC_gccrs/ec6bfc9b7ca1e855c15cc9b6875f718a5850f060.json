{"sha": "ec6bfc9b7ca1e855c15cc9b6875f718a5850f060", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWM2YmZjOWI3Y2ExZTg1NWMxNWNjOWI2ODc1ZjcxOGE1ODUwZjA2MA==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "1999-12-29T21:22:16Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "1999-12-29T21:22:16Z"}, "message": "crtstuff.c: If !inhibit_libc, include stdlib.h/unistd.h.\n\n\t* crtstuff.c: If !inhibit_libc, include stdlib.h/unistd.h.\n\tOtherwise provide a declaration for atexit.\n\t(init_dummy): Make sure dummy call to atexit is nevertheless\n\tcalled with correct number of args.\n\n\t* frame.c: Update comments referring to other files.\n\n\t* libgcc2.c: Likewise.\n\nFrom-SVN: r31124", "tree": {"sha": "95ccb57dcefe87623710608328cb7388663cc4e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/95ccb57dcefe87623710608328cb7388663cc4e8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ec6bfc9b7ca1e855c15cc9b6875f718a5850f060", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec6bfc9b7ca1e855c15cc9b6875f718a5850f060", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec6bfc9b7ca1e855c15cc9b6875f718a5850f060", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec6bfc9b7ca1e855c15cc9b6875f718a5850f060/comments", "author": null, "committer": null, "parents": [{"sha": "9d0878fd43180c9746c7fa23954858c139059291", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d0878fd43180c9746c7fa23954858c139059291", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9d0878fd43180c9746c7fa23954858c139059291"}], "stats": {"total": 32, "additions": 29, "deletions": 3}, "files": [{"sha": "cd1fd9800852052e04765dcb51a99dcbdd6b01a8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec6bfc9b7ca1e855c15cc9b6875f718a5850f060/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec6bfc9b7ca1e855c15cc9b6875f718a5850f060/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ec6bfc9b7ca1e855c15cc9b6875f718a5850f060", "patch": "@@ -1,3 +1,14 @@\n+1999-12-29  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* crtstuff.c: If !inhibit_libc, include stdlib.h/unistd.h.\n+\tOtherwise provide a declaration for atexit.\n+\t(init_dummy): Make sure dummy call to atexit is nevertheless\n+\tcalled with correct number of args.\n+\n+\t* frame.c: Update comments referring to other files.\n+\t\n+\t* libgcc2.c: Likewise.\n+\n 1999-12-29  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* cse.c (free_element, get_element): Remove unused prototypes."}, {"sha": "98e0779a5e2e83ce6c5b7c53ff0e3045739af6a7", "filename": "gcc/crtstuff.c", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec6bfc9b7ca1e855c15cc9b6875f718a5850f060/gcc%2Fcrtstuff.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec6bfc9b7ca1e855c15cc9b6875f718a5850f060/gcc%2Fcrtstuff.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcrtstuff.c?ref=ec6bfc9b7ca1e855c15cc9b6875f718a5850f060", "patch": "@@ -52,6 +52,21 @@ Boston, MA 02111-1307, USA.  */\n    do not apply.  */\n \n #include \"tm.h\"\n+\n+/* We disable this when inhibit_libc, so that gcc can still be built without\n+   needing header files first.  */\n+/* ??? This is not a good solution, since prototypes may be required in\n+   some cases for correct code.  See also libgcc2.c/frame.c.  */\n+#ifndef inhibit_libc\n+/* fixproto guarantees these system headers exist. */\n+#include <stdlib.h>\n+#include <unistd.h>\n+#else\n+# ifndef atexit\n+extern int atexit(void (*)(void));\n+# endif\n+#endif\n+\n #include \"defaults.h\"\n #include <stddef.h>\n #include \"frame.h\"\n@@ -403,7 +418,7 @@ init_dummy (void)\n     extern char **__environ;\n \n     ___brk_addr = __environ;\n-    atexit ();\n+    atexit (0);\n   }\n #endif\n }"}, {"sha": "697d3f4f0a9e3144b7f05573d83d97ecd3f47f52", "filename": "gcc/frame.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec6bfc9b7ca1e855c15cc9b6875f718a5850f060/gcc%2Fframe.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec6bfc9b7ca1e855c15cc9b6875f718a5850f060/gcc%2Fframe.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fframe.c?ref=ec6bfc9b7ca1e855c15cc9b6875f718a5850f060", "patch": "@@ -36,7 +36,7 @@ Boston, MA 02111-1307, USA.  */\n /* We disable this when inhibit_libc, so that gcc can still be built without\n    needing header files first.  */\n /* ??? This is not a good solution, since prototypes may be required in\n-   some cases for correct code.  See also libgcc2.c.  */\n+   some cases for correct code.  See also libgcc2.c/crtstuff.c.  */\n #ifndef inhibit_libc\n /* fixproto guarantees these system headers exist. */\n #include <stdlib.h>"}, {"sha": "8a1b703e209ee3db0d140404f61658bd0fa500f8", "filename": "gcc/libgcc2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec6bfc9b7ca1e855c15cc9b6875f718a5850f060/gcc%2Flibgcc2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec6bfc9b7ca1e855c15cc9b6875f718a5850f060/gcc%2Flibgcc2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flibgcc2.c?ref=ec6bfc9b7ca1e855c15cc9b6875f718a5850f060", "patch": "@@ -35,7 +35,7 @@ Boston, MA 02111-1307, USA.  */\n /* We disable this when inhibit_libc, so that gcc can still be built without\n    needing header files first.  */\n /* ??? This is not a good solution, since prototypes may be required in\n-   some cases for correct code.  See also frame.c.  */\n+   some cases for correct code.  See also frame.c/crtstuff.c.  */\n #ifndef inhibit_libc\n /* fixproto guarantees these system headers exist. */\n #include <stdlib.h>"}]}