{"sha": "648c220695b109476bae09a887821030f78bcaa1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjQ4YzIyMDY5NWIxMDk0NzZiYWUwOWE4ODc4MjEwMzBmNzhiY2FhMQ==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2001-07-26T08:12:00Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2001-07-26T08:12:00Z"}, "message": "re PR c++/3624 (Internal error: Segmentation fault)\n\ncp:\n\tPR c++/3624\n\t* call.c (resolve_args): Simplify, call\n\tconvert_from_reference.\n\t(build_new_op): Resolve and convert from reference ARG1\n\tearlier. Adjust ARG2 & ARG3 resolve and conversion.\ntestsuite:\n\t* g++.old-deja/g++.pt/crash68.C: New test.\n\nFrom-SVN: r44388", "tree": {"sha": "e6f10ddb69d08eece6d7288bbbc9dd76a7d3f282", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e6f10ddb69d08eece6d7288bbbc9dd76a7d3f282"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/648c220695b109476bae09a887821030f78bcaa1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/648c220695b109476bae09a887821030f78bcaa1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/648c220695b109476bae09a887821030f78bcaa1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/648c220695b109476bae09a887821030f78bcaa1/comments", "author": null, "committer": null, "parents": [{"sha": "969fd501d60879e8cb717bc6be07ad39e5067f18", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/969fd501d60879e8cb717bc6be07ad39e5067f18", "html_url": "https://github.com/Rust-GCC/gccrs/commit/969fd501d60879e8cb717bc6be07ad39e5067f18"}], "stats": {"total": 119, "additions": 104, "deletions": 15}, "files": [{"sha": "949dd82bbf0566044b839c21335b7307dc6165f0", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/648c220695b109476bae09a887821030f78bcaa1/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/648c220695b109476bae09a887821030f78bcaa1/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=648c220695b109476bae09a887821030f78bcaa1", "patch": "@@ -1,3 +1,11 @@\n+2001-07-26  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\tPR c++/3624\n+\t* call.c (resolve_args): Simplify, call\n+\tconvert_from_reference.\n+\t(build_new_op): Resolve and convert from reference ARG1\n+\tearlier. Adjust ARG2 & ARG3 resolve and conversion.\n+\n 2001-07-26  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* decl.c (last_function_parm_tags): Remove."}, {"sha": "bbe6c4888ccbe21b4919812ee67a7cfe5d34ce3a", "filename": "gcc/cp/call.c", "status": "modified", "additions": 22, "deletions": 15, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/648c220695b109476bae09a887821030f78bcaa1/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/648c220695b109476bae09a887821030f78bcaa1/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=648c220695b109476bae09a887821030f78bcaa1", "patch": "@@ -2556,15 +2556,19 @@ resolve_args (args)\n   tree t;\n   for (t = args; t; t = TREE_CHAIN (t))\n     {\n-      if (TREE_VALUE (t) == error_mark_node)\n+      tree arg = TREE_VALUE (t);\n+      \n+      if (arg == error_mark_node)\n \treturn error_mark_node;\n-      else if (TREE_CODE (TREE_TYPE (TREE_VALUE (t))) == VOID_TYPE)\n+      else if (VOID_TYPE_P (TREE_TYPE (arg)))\n \t{\n \t  error (\"invalid use of void expression\");\n \t  return error_mark_node;\n \t}\n-      else if (TREE_CODE (TREE_VALUE (t)) == OFFSET_REF)\n-\tTREE_VALUE (t) = resolve_offset_ref (TREE_VALUE (t));\n+      else if (TREE_CODE (arg) == OFFSET_REF)\n+\targ = resolve_offset_ref (arg);\n+      arg = convert_from_reference (arg);\n+      TREE_VALUE (t) = arg;\n     }\n   return args;\n }\n@@ -3220,6 +3224,10 @@ build_new_op (code, flags, arg1, arg2, arg3)\n   else\n     fnname = ansi_opname (code);\n \n+  if (TREE_CODE (arg1) == OFFSET_REF)\n+    arg1 = resolve_offset_ref (arg1);\n+  arg1 = convert_from_reference (arg1);\n+  \n   switch (code)\n     {\n     case NEW_EXPR:\n@@ -3236,19 +3244,18 @@ build_new_op (code, flags, arg1, arg2, arg3)\n       break;\n     }\n \n-  /* The comma operator can have void args.  */\n-  if (TREE_CODE (arg1) == OFFSET_REF)\n-    arg1 = resolve_offset_ref (arg1);\n-  if (arg2 && TREE_CODE (arg2) == OFFSET_REF)\n-    arg2 = resolve_offset_ref (arg2);\n-  if (arg3 && TREE_CODE (arg3) == OFFSET_REF)\n-    arg3 = resolve_offset_ref (arg3);\n-\n-  arg1 = convert_from_reference (arg1);\n   if (arg2)\n-    arg2 = convert_from_reference (arg2);\n+    {\n+      if (TREE_CODE (arg2) == OFFSET_REF)\n+\targ2 = resolve_offset_ref (arg2);\n+      arg2 = convert_from_reference (arg2);\n+    }\n   if (arg3)\n-    arg3 = convert_from_reference (arg3);\n+    {\n+      if (TREE_CODE (arg3) == OFFSET_REF)\n+\targ3 = resolve_offset_ref (arg3);\n+      arg3 = convert_from_reference (arg3);\n+    }\n   \n   if (code == COND_EXPR)\n     {"}, {"sha": "55f597fe5ec4d2dfd6a010d9c6ba7ee687647124", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/648c220695b109476bae09a887821030f78bcaa1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/648c220695b109476bae09a887821030f78bcaa1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=648c220695b109476bae09a887821030f78bcaa1", "patch": "@@ -1,3 +1,7 @@\n+2001-07-26  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* g++.old-deja/g++.pt/crash68.C: New test.\n+\n 2001-07-26  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* g++.old-deja/g++.other/crash42.C: New test."}, {"sha": "b856f22a3b088f98fe4ffa95aa9c21cf3e7c0bf6", "filename": "gcc/testsuite/g++.old-deja/g++.pt/crash68.C", "status": "added", "additions": 70, "deletions": 0, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/648c220695b109476bae09a887821030f78bcaa1/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fcrash68.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/648c220695b109476bae09a887821030f78bcaa1/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fcrash68.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fcrash68.C?ref=648c220695b109476bae09a887821030f78bcaa1", "patch": "@@ -0,0 +1,70 @@\n+// Build don't link:\n+// \n+// Copyright (C) 2001 Free Software Foundation, Inc.\n+// Contributed by Nathan Sidwell 25 Jul 2001 <nathan@codesourcery.com>\n+\n+// Origin: gustavo@geneura.ugr.es\n+// Bug 3624. Template instantiation of a reference type was not\n+// converted from reference when doing a call.\n+\n+#include <iostream>\n+\n+using namespace std;\n+\n+template <class A, class B, class C, C& c, bool d> class eo: public A\n+{\n+public:\n+  eo() \n+  {\n+    cout << this->x << \" \" << this->y << \" \"\n+\t << c(*this) << \" \"\n+\t << ((d)?\"true\":\"false\") << endl;\n+  }\n+  \n+private:\n+  B b;\n+};\n+\n+struct XY\n+{\n+  float x, y;\n+\n+  XY(): x(1), y(0.1) {}\n+};\n+\n+float fitness(const XY& a)\n+{\n+  return a.x + a.y;\n+}\n+\n+struct fitness2\n+{\n+  float operator()(const XY& a)\n+  {\n+    return a.x - a.y;\n+  }\n+  \n+  float f(const XY& a)\n+  {\n+    return a.x - a.y;\n+  }\n+};\n+\n+struct fitness3\n+{\n+  float operator()(const XY& a)\n+  {\n+    return a.x / a.y;\n+  }\n+};\n+\n+fitness2 f2;\n+fitness3 f3;\n+\n+int main()\n+{\n+  eo<XY, float, fitness2, f2, true> eo2;\n+  eo<XY, float, fitness3, f3, true> eo3;\n+\n+  return 0;\n+}"}]}