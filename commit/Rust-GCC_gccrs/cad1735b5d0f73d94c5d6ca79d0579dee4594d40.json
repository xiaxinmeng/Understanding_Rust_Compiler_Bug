{"sha": "cad1735b5d0f73d94c5d6ca79d0579dee4594d40", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2FkMTczNWI1ZDBmNzNkOTRjNWQ2Y2E3OWQwNTc5ZGVlNDU5NGQ0MA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2013-03-21T12:35:03Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2013-03-21T12:35:03Z"}, "message": "tree-ssa-loop-im.c (can_sm_ref_p): Do not test whether ref is stored in the loop.\n\n2013-03-21  Richard Biener  <rguenther@suse.de>\n\n\t* tree-ssa-loop-im.c (can_sm_ref_p): Do not test whether\n\tref is stored in the loop.\n\t(find_refs_for_sm): Walk only over all stores.\n\t(store_motion_loop): Allocate from lim_bitmap_obstack.\n\t(store_motion): Likewise.\n\nFrom-SVN: r196870", "tree": {"sha": "9b8b4730e71ad2fe9cf809fea5df98529d664591", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9b8b4730e71ad2fe9cf809fea5df98529d664591"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cad1735b5d0f73d94c5d6ca79d0579dee4594d40", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cad1735b5d0f73d94c5d6ca79d0579dee4594d40", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cad1735b5d0f73d94c5d6ca79d0579dee4594d40", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cad1735b5d0f73d94c5d6ca79d0579dee4594d40/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "141310ef523541959e048fe49e0b996374107b3b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/141310ef523541959e048fe49e0b996374107b3b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/141310ef523541959e048fe49e0b996374107b3b"}], "stats": {"total": 18, "additions": 11, "deletions": 7}, "files": [{"sha": "203af600083eba104612221c7cbe2b9e8f9e76d2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cad1735b5d0f73d94c5d6ca79d0579dee4594d40/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cad1735b5d0f73d94c5d6ca79d0579dee4594d40/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cad1735b5d0f73d94c5d6ca79d0579dee4594d40", "patch": "@@ -1,3 +1,11 @@\n+2013-03-21  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-ssa-loop-im.c (can_sm_ref_p): Do not test whether\n+\tref is stored in the loop.\n+\t(find_refs_for_sm): Walk only over all stores.\n+\t(store_motion_loop): Allocate from lim_bitmap_obstack.\n+\t(store_motion): Likewise.\n+\n 2013-03-21  Richard Biener  <rguenther@suse.de>\n \n \t* tree-vect-loop-manip.c (slpeel_tree_peel_loop_to_edge):"}, {"sha": "2557542f09ecbc108a52ba1ff91d5146b5f32520", "filename": "gcc/tree-ssa-loop-im.c", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cad1735b5d0f73d94c5d6ca79d0579dee4594d40/gcc%2Ftree-ssa-loop-im.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cad1735b5d0f73d94c5d6ca79d0579dee4594d40/gcc%2Ftree-ssa-loop-im.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-im.c?ref=cad1735b5d0f73d94c5d6ca79d0579dee4594d40", "patch": "@@ -2378,10 +2378,6 @@ can_sm_ref_p (struct loop *loop, mem_ref_p ref)\n   if (!MEM_ANALYZABLE (ref))\n     return false;\n \n-  /* Unless the reference is stored in the loop, there is nothing to do.  */\n-  if (!bitmap_bit_p (ref->stored, loop->num))\n-    return false;\n-\n   /* It should be movable.  */\n   if (!is_gimple_reg_type (TREE_TYPE (ref->mem.ref))\n       || TREE_THIS_VOLATILE (ref->mem.ref)\n@@ -2417,7 +2413,7 @@ can_sm_ref_p (struct loop *loop, mem_ref_p ref)\n static void\n find_refs_for_sm (struct loop *loop, bitmap sm_executed, bitmap refs_to_sm)\n {\n-  bitmap refs = memory_accesses.all_refs_in_loop[loop->num];\n+  bitmap refs = memory_accesses.all_refs_stored_in_loop[loop->num];\n   unsigned i;\n   bitmap_iterator bi;\n   mem_ref_p ref;\n@@ -2457,7 +2453,7 @@ store_motion_loop (struct loop *loop, bitmap sm_executed)\n {\n   vec<edge> exits = get_loop_exit_edges (loop);\n   struct loop *subloop;\n-  bitmap sm_in_loop = BITMAP_ALLOC (NULL);\n+  bitmap sm_in_loop = BITMAP_ALLOC (&lim_bitmap_obstack);\n \n   if (loop_suitable_for_sm (loop, exits))\n     {\n@@ -2480,7 +2476,7 @@ static void\n store_motion (void)\n {\n   struct loop *loop;\n-  bitmap sm_executed = BITMAP_ALLOC (NULL);\n+  bitmap sm_executed = BITMAP_ALLOC (&lim_bitmap_obstack);\n \n   for (loop = current_loops->tree_root->inner; loop != NULL; loop = loop->next)\n     store_motion_loop (loop, sm_executed);"}]}