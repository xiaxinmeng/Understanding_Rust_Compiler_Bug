{"sha": "d34f510e2bf976cff3b9fbf7a8c5a41c233db2e4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDM0ZjUxMGUyYmY5NzZjZmYzYjlmYmY3YThjNWE0MWMyMzNkYjJlNA==", "commit": {"author": {"name": "Srinath Parvathaneni", "email": "srinath.parvathaneni@arm.com", "date": "2020-06-04T14:29:18Z"}, "committer": {"name": "Srinath Parvathaneni", "email": "srinath.parvathaneni@arm.com", "date": "2020-06-04T14:40:19Z"}, "message": "[PATCH][GCC] arm: Fix the MVE ACLE vbicq intrinsics.\n\nFollowing MVE intrinsic testcases are failing in GCC testsuite.\n\nDirectory: gcc.target/arm/mve/intrinsics/\nTestcases: vbicq_f16.c, vbicq_f32.c, vbicq_s16.c, vbicq_s32.c, vbicq_s8.c\n,vbicq_u16.c, vbicq_u32.c and vbicq_u8.c.\n\nThis patch fixes the vbicq intrinsics by modifying the intrinsic parameters\nand polymorphic variants in \"arm_mve.h\" header file.\n\nThanks,\nSrinath.\n\ngcc/ChangeLog:\n\n2020-05-20  Srinath Parvathaneni  <srinath.parvathaneni@arm.com>\n\n\t* config/arm/arm_mve.h (__arm_vbicq_n_u16): Correct the intrinsic\n\targuments.\n\t(__arm_vbicq_n_s16): Likewise.\n\t(__arm_vbicq_n_u32): Likewise.\n\t(__arm_vbicq_n_s32): Likewise.\n\t(__arm_vbicq): Modify polymorphic variant.\n\ngcc/testsuite/ChangeLog:\n\n2020-05-20  Srinath Parvathaneni  <srinath.parvathaneni@arm.com>\n\n\t* gcc.target/arm/mve/intrinsics/vbicq_f16.c: Modify.\n\t* gcc.target/arm/mve/intrinsics/vbicq_f32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vbicq_n_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vbicq_n_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vbicq_n_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vbicq_n_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vbicq_s16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vbicq_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vbicq_s8.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vbicq_u16.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vbicq_u32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vbicq_u8.c: Likewise.", "tree": {"sha": "8f891df386611d801e80225d6e3a04985fa1976f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8f891df386611d801e80225d6e3a04985fa1976f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d34f510e2bf976cff3b9fbf7a8c5a41c233db2e4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d34f510e2bf976cff3b9fbf7a8c5a41c233db2e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d34f510e2bf976cff3b9fbf7a8c5a41c233db2e4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d34f510e2bf976cff3b9fbf7a8c5a41c233db2e4/comments", "author": {"login": "sripar01", "id": 115715849, "node_id": "U_kgDOBuWvCQ", "avatar_url": "https://avatars.githubusercontent.com/u/115715849?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sripar01", "html_url": "https://github.com/sripar01", "followers_url": "https://api.github.com/users/sripar01/followers", "following_url": "https://api.github.com/users/sripar01/following{/other_user}", "gists_url": "https://api.github.com/users/sripar01/gists{/gist_id}", "starred_url": "https://api.github.com/users/sripar01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sripar01/subscriptions", "organizations_url": "https://api.github.com/users/sripar01/orgs", "repos_url": "https://api.github.com/users/sripar01/repos", "events_url": "https://api.github.com/users/sripar01/events{/privacy}", "received_events_url": "https://api.github.com/users/sripar01/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sripar01", "id": 115715849, "node_id": "U_kgDOBuWvCQ", "avatar_url": "https://avatars.githubusercontent.com/u/115715849?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sripar01", "html_url": "https://github.com/sripar01", "followers_url": "https://api.github.com/users/sripar01/followers", "following_url": "https://api.github.com/users/sripar01/following{/other_user}", "gists_url": "https://api.github.com/users/sripar01/gists{/gist_id}", "starred_url": "https://api.github.com/users/sripar01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sripar01/subscriptions", "organizations_url": "https://api.github.com/users/sripar01/orgs", "repos_url": "https://api.github.com/users/sripar01/repos", "events_url": "https://api.github.com/users/sripar01/events{/privacy}", "received_events_url": "https://api.github.com/users/sripar01/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b15369e2538086c95250ac57c56a4c2590f922f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b15369e2538086c95250ac57c56a4c2590f922f4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b15369e2538086c95250ac57c56a4c2590f922f4"}], "stats": {"total": 44, "additions": 28, "deletions": 16}, "files": [{"sha": "9bc5c97db8fea15d8140d966bc501b8a457a1abf", "filename": "gcc/config/arm/arm_mve.h", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d34f510e2bf976cff3b9fbf7a8c5a41c233db2e4/gcc%2Fconfig%2Farm%2Farm_mve.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d34f510e2bf976cff3b9fbf7a8c5a41c233db2e4/gcc%2Fconfig%2Farm%2Farm_mve.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm_mve.h?ref=d34f510e2bf976cff3b9fbf7a8c5a41c233db2e4", "patch": "@@ -6361,7 +6361,7 @@ __arm_vorrq_n_u16 (uint16x8_t __a, const int __imm)\n \n __extension__ extern __inline uint16x8_t\n __attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n-__arm_vbicq_n_u16 (uint16x8_t __a, const uint16_t __imm)\n+__arm_vbicq_n_u16 (uint16x8_t __a, const int __imm)\n {\n   return __builtin_mve_vbicq_n_uv8hi (__a, __imm);\n }\n@@ -6473,7 +6473,7 @@ __arm_vorrq_n_s16 (int16x8_t __a, const int __imm)\n \n __extension__ extern __inline int16x8_t\n __attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n-__arm_vbicq_n_s16 (int16x8_t __a, const int16_t __imm)\n+__arm_vbicq_n_s16 (int16x8_t __a, const int __imm)\n {\n   return __builtin_mve_vbicq_n_sv8hi (__a, __imm);\n }\n@@ -6564,7 +6564,7 @@ __arm_vorrq_n_u32 (uint32x4_t __a, const int __imm)\n \n __extension__ extern __inline uint32x4_t\n __attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n-__arm_vbicq_n_u32 (uint32x4_t __a, const uint32_t __imm)\n+__arm_vbicq_n_u32 (uint32x4_t __a, const int __imm)\n {\n   return __builtin_mve_vbicq_n_uv4si (__a, __imm);\n }\n@@ -6676,7 +6676,7 @@ __arm_vorrq_n_s32 (int32x4_t __a, const int __imm)\n \n __extension__ extern __inline int32x4_t\n __attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n-__arm_vbicq_n_s32 (int32x4_t __a, const int32_t __imm)\n+__arm_vbicq_n_s32 (int32x4_t __a, const int __imm)\n {\n   return __builtin_mve_vbicq_n_sv4si (__a, __imm);\n }\n@@ -23182,7 +23182,7 @@ __arm_vorrq (uint16x8_t __a, const int __imm)\n \n __extension__ extern __inline uint16x8_t\n __attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n-__arm_vbicq (uint16x8_t __a, const uint16_t __imm)\n+__arm_vbicq (uint16x8_t __a, const int __imm)\n {\n  return __arm_vbicq_n_u16 (__a, __imm);\n }\n@@ -23294,7 +23294,7 @@ __arm_vorrq (int16x8_t __a, const int __imm)\n \n __extension__ extern __inline int16x8_t\n __attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n-__arm_vbicq (int16x8_t __a, const int16_t __imm)\n+__arm_vbicq (int16x8_t __a, const int __imm)\n {\n  return __arm_vbicq_n_s16 (__a, __imm);\n }\n@@ -23385,7 +23385,7 @@ __arm_vorrq (uint32x4_t __a, const int __imm)\n \n __extension__ extern __inline uint32x4_t\n __attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n-__arm_vbicq (uint32x4_t __a, const uint32_t __imm)\n+__arm_vbicq (uint32x4_t __a, const int __imm)\n {\n  return __arm_vbicq_n_u32 (__a, __imm);\n }\n@@ -23497,7 +23497,7 @@ __arm_vorrq (int32x4_t __a, const int __imm)\n \n __extension__ extern __inline int32x4_t\n __attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n-__arm_vbicq (int32x4_t __a, const int32_t __imm)\n+__arm_vbicq (int32x4_t __a, const int __imm)\n {\n  return __arm_vbicq_n_s32 (__a, __imm);\n }\n@@ -35963,10 +35963,10 @@ extern void *__ARM_undef;\n #define __arm_vbicq(p0,p1) ({ __typeof(p0) __p0 = (p0); \\\n   __typeof(p1) __p1 = (p1); \\\n   _Generic( (int (*)[__ARM_mve_typeid(__p0)][__ARM_mve_typeid(__p1)])0, \\\n-  int (*)[__ARM_mve_type_int16x8_t][__ARM_mve_type_int_n]: __arm_vbicq_n_s16 (__ARM_mve_coerce(__p0, int16x8_t), (const int16_t) __p1), \\\n-  int (*)[__ARM_mve_type_int32x4_t][__ARM_mve_type_int_n]: __arm_vbicq_n_s32 (__ARM_mve_coerce(__p0, int32x4_t), (const int32_t) __p1), \\\n-  int (*)[__ARM_mve_type_uint16x8_t][__ARM_mve_type_int_n]: __arm_vbicq_n_u16 (__ARM_mve_coerce(__p0, uint16x8_t), (const uint16_t) __p1), \\\n-  int (*)[__ARM_mve_type_uint32x4_t][__ARM_mve_type_int_n]: __arm_vbicq_n_u32 (__ARM_mve_coerce(__p0, uint32x4_t), (const uint32_t) __p1), \\\n+  int (*)[__ARM_mve_type_int16x8_t][__ARM_mve_type_int_n]: __arm_vbicq_n_s16 (__ARM_mve_coerce(__p0, int16x8_t), __ARM_mve_coerce1 (__p1, int)), \\\n+  int (*)[__ARM_mve_type_int32x4_t][__ARM_mve_type_int_n]: __arm_vbicq_n_s32 (__ARM_mve_coerce(__p0, int32x4_t), __ARM_mve_coerce1 (__p1, int)), \\\n+  int (*)[__ARM_mve_type_uint16x8_t][__ARM_mve_type_int_n]: __arm_vbicq_n_u16 (__ARM_mve_coerce(__p0, uint16x8_t), __ARM_mve_coerce1 (__p1, int)), \\\n+  int (*)[__ARM_mve_type_uint32x4_t][__ARM_mve_type_int_n]: __arm_vbicq_n_u32 (__ARM_mve_coerce(__p0, uint32x4_t), __ARM_mve_coerce1 (__p1, int)), \\\n   int (*)[__ARM_mve_type_int8x16_t][__ARM_mve_type_int8x16_t]: __arm_vbicq_s8 (__ARM_mve_coerce(__p0, int8x16_t), __ARM_mve_coerce(__p1, int8x16_t)), \\\n   int (*)[__ARM_mve_type_int16x8_t][__ARM_mve_type_int16x8_t]: __arm_vbicq_s16 (__ARM_mve_coerce(__p0, int16x8_t), __ARM_mve_coerce(__p1, int16x8_t)), \\\n   int (*)[__ARM_mve_type_int32x4_t][__ARM_mve_type_int32x4_t]: __arm_vbicq_s32 (__ARM_mve_coerce(__p0, int32x4_t), __ARM_mve_coerce(__p1, int32x4_t)), \\\n@@ -38875,10 +38875,10 @@ extern void *__ARM_undef;\n #define __arm_vbicq(p0,p1) ({ __typeof(p0) __p0 = (p0); \\\n   __typeof(p1) __p1 = (p1); \\\n   _Generic( (int (*)[__ARM_mve_typeid(__p0)][__ARM_mve_typeid(__p1)])0, \\\n-  int (*)[__ARM_mve_type_int16x8_t][__ARM_mve_type_int_n]: __arm_vbicq_n_s16 (__ARM_mve_coerce(__p0, int16x8_t), (const int16_t) __p1), \\\n-  int (*)[__ARM_mve_type_int32x4_t][__ARM_mve_type_int_n]: __arm_vbicq_n_s32 (__ARM_mve_coerce(__p0, int32x4_t), (const int32_t) __p1), \\\n-  int (*)[__ARM_mve_type_uint16x8_t][__ARM_mve_type_int_n]: __arm_vbicq_n_u16 (__ARM_mve_coerce(__p0, uint16x8_t), (const uint16_t) __p1), \\\n-  int (*)[__ARM_mve_type_uint32x4_t][__ARM_mve_type_int_n]: __arm_vbicq_n_u32 (__ARM_mve_coerce(__p0, uint32x4_t), (const uint32_t) __p1), \\\n+  int (*)[__ARM_mve_type_int16x8_t][__ARM_mve_type_int_n]: __arm_vbicq_n_s16 (__ARM_mve_coerce(__p0, int16x8_t), __ARM_mve_coerce1 (__p1, int)), \\\n+  int (*)[__ARM_mve_type_int32x4_t][__ARM_mve_type_int_n]: __arm_vbicq_n_s32 (__ARM_mve_coerce(__p0, int32x4_t), __ARM_mve_coerce1 (__p1, int)), \\\n+  int (*)[__ARM_mve_type_uint16x8_t][__ARM_mve_type_int_n]: __arm_vbicq_n_u16 (__ARM_mve_coerce(__p0, uint16x8_t), __ARM_mve_coerce1 (__p1, int)), \\\n+  int (*)[__ARM_mve_type_uint32x4_t][__ARM_mve_type_int_n]: __arm_vbicq_n_u32 (__ARM_mve_coerce(__p0, uint32x4_t), __ARM_mve_coerce1 (__p1, int)), \\\n   int (*)[__ARM_mve_type_int8x16_t][__ARM_mve_type_int8x16_t]: __arm_vbicq_s8 (__ARM_mve_coerce(__p0, int8x16_t), __ARM_mve_coerce(__p1, int8x16_t)), \\\n   int (*)[__ARM_mve_type_int16x8_t][__ARM_mve_type_int16x8_t]: __arm_vbicq_s16 (__ARM_mve_coerce(__p0, int16x8_t), __ARM_mve_coerce(__p1, int16x8_t)), \\\n   int (*)[__ARM_mve_type_int32x4_t][__ARM_mve_type_int32x4_t]: __arm_vbicq_s32 (__ARM_mve_coerce(__p0, int32x4_t), __ARM_mve_coerce(__p1, int32x4_t)), \\"}, {"sha": "c15f1f91d07071bad5d050ab32711176c4c49c7a", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vbicq_f16.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d34f510e2bf976cff3b9fbf7a8c5a41c233db2e4/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvbicq_f16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d34f510e2bf976cff3b9fbf7a8c5a41c233db2e4/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvbicq_f16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvbicq_f16.c?ref=d34f510e2bf976cff3b9fbf7a8c5a41c233db2e4", "patch": "@@ -19,3 +19,4 @@ foo1 (float16x8_t a, float16x8_t b)\n }\n \n /* { dg-final { scan-assembler \"vbic\"  }  } */\n+/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */"}, {"sha": "c8659d460a052f51a295a173257cba5f63ccb202", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vbicq_f32.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d34f510e2bf976cff3b9fbf7a8c5a41c233db2e4/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvbicq_f32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d34f510e2bf976cff3b9fbf7a8c5a41c233db2e4/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvbicq_f32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvbicq_f32.c?ref=d34f510e2bf976cff3b9fbf7a8c5a41c233db2e4", "patch": "@@ -19,3 +19,4 @@ foo1 (float32x4_t a, float32x4_t b)\n }\n \n /* { dg-final { scan-assembler \"vbic\"  }  } */\n+/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */"}, {"sha": "6258727d82f4fa836a1066b9f4041c16b54af7aa", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vbicq_n_s16.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d34f510e2bf976cff3b9fbf7a8c5a41c233db2e4/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvbicq_n_s16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d34f510e2bf976cff3b9fbf7a8c5a41c233db2e4/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvbicq_n_s16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvbicq_n_s16.c?ref=d34f510e2bf976cff3b9fbf7a8c5a41c233db2e4", "patch": "@@ -17,3 +17,4 @@ foo1 (int16x8_t a)\n }\n \n /* { dg-final { scan-assembler-times \"vbic.i16\" 2 }  } */\n+/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */"}, {"sha": "be641abf556b56183a50c271b384ae9490818c48", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vbicq_n_s32.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d34f510e2bf976cff3b9fbf7a8c5a41c233db2e4/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvbicq_n_s32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d34f510e2bf976cff3b9fbf7a8c5a41c233db2e4/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvbicq_n_s32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvbicq_n_s32.c?ref=d34f510e2bf976cff3b9fbf7a8c5a41c233db2e4", "patch": "@@ -17,3 +17,4 @@ foo1 (int32x4_t a)\n }\n \n /* { dg-final { scan-assembler-times \"vbic.i32\" 2 }  } */\n+/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */"}, {"sha": "0b26ffda0dce4086fafd8a5250f535fe5d519a1b", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vbicq_n_u16.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d34f510e2bf976cff3b9fbf7a8c5a41c233db2e4/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvbicq_n_u16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d34f510e2bf976cff3b9fbf7a8c5a41c233db2e4/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvbicq_n_u16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvbicq_n_u16.c?ref=d34f510e2bf976cff3b9fbf7a8c5a41c233db2e4", "patch": "@@ -17,3 +17,4 @@ foo1 (uint16x8_t a)\n }\n \n /* { dg-final { scan-assembler-times \"vbic.i16\" 2 }  } */\n+/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */"}, {"sha": "47820bd184a12c5764c8eccc436340f00d7e93f7", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vbicq_n_u32.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d34f510e2bf976cff3b9fbf7a8c5a41c233db2e4/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvbicq_n_u32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d34f510e2bf976cff3b9fbf7a8c5a41c233db2e4/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvbicq_n_u32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvbicq_n_u32.c?ref=d34f510e2bf976cff3b9fbf7a8c5a41c233db2e4", "patch": "@@ -17,3 +17,4 @@ foo1 (uint32x4_t a)\n }\n \n /* { dg-final { scan-assembler-times \"vbic.i32\" 2 }  } */\n+/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */"}, {"sha": "4ffacdd9733325e8b0ba0638a11a549cd9bef797", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vbicq_s16.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d34f510e2bf976cff3b9fbf7a8c5a41c233db2e4/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvbicq_s16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d34f510e2bf976cff3b9fbf7a8c5a41c233db2e4/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvbicq_s16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvbicq_s16.c?ref=d34f510e2bf976cff3b9fbf7a8c5a41c233db2e4", "patch": "@@ -19,3 +19,4 @@ foo1 (int16x8_t a, int16x8_t b)\n }\n \n /* { dg-final { scan-assembler \"vbic\"  }  } */\n+/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */"}, {"sha": "13fbff407468a3d0a8ac31a17132c181e0f20268", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vbicq_s32.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d34f510e2bf976cff3b9fbf7a8c5a41c233db2e4/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvbicq_s32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d34f510e2bf976cff3b9fbf7a8c5a41c233db2e4/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvbicq_s32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvbicq_s32.c?ref=d34f510e2bf976cff3b9fbf7a8c5a41c233db2e4", "patch": "@@ -19,3 +19,4 @@ foo1 (int32x4_t a, int32x4_t b)\n }\n \n /* { dg-final { scan-assembler \"vbic\"  }  } */\n+/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */"}, {"sha": "b9fba943a835a0c3e107faacf2e0004674a4c44f", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vbicq_s8.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d34f510e2bf976cff3b9fbf7a8c5a41c233db2e4/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvbicq_s8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d34f510e2bf976cff3b9fbf7a8c5a41c233db2e4/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvbicq_s8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvbicq_s8.c?ref=d34f510e2bf976cff3b9fbf7a8c5a41c233db2e4", "patch": "@@ -19,3 +19,4 @@ foo1 (int8x16_t a, int8x16_t b)\n }\n \n /* { dg-final { scan-assembler \"vbic\"  }  } */\n+/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */"}, {"sha": "5d94a6396c427834b7631d4338fc921b0c37a54e", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vbicq_u16.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d34f510e2bf976cff3b9fbf7a8c5a41c233db2e4/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvbicq_u16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d34f510e2bf976cff3b9fbf7a8c5a41c233db2e4/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvbicq_u16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvbicq_u16.c?ref=d34f510e2bf976cff3b9fbf7a8c5a41c233db2e4", "patch": "@@ -19,3 +19,4 @@ foo1 (uint16x8_t a, uint16x8_t b)\n }\n \n /* { dg-final { scan-assembler \"vbic\"  }  } */\n+/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */"}, {"sha": "893dc3deefcbb05707052b0763ea45eccbea6e4d", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vbicq_u32.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d34f510e2bf976cff3b9fbf7a8c5a41c233db2e4/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvbicq_u32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d34f510e2bf976cff3b9fbf7a8c5a41c233db2e4/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvbicq_u32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvbicq_u32.c?ref=d34f510e2bf976cff3b9fbf7a8c5a41c233db2e4", "patch": "@@ -19,3 +19,4 @@ foo1 (uint32x4_t a, uint32x4_t b)\n }\n \n /* { dg-final { scan-assembler \"vbic\"  }  } */\n+/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */"}, {"sha": "bd5e9bc01971a171d21a7b5acb366dcd7e3cf4c6", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vbicq_u8.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d34f510e2bf976cff3b9fbf7a8c5a41c233db2e4/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvbicq_u8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d34f510e2bf976cff3b9fbf7a8c5a41c233db2e4/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvbicq_u8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvbicq_u8.c?ref=d34f510e2bf976cff3b9fbf7a8c5a41c233db2e4", "patch": "@@ -19,3 +19,4 @@ foo1 (uint8x16_t a, uint8x16_t b)\n }\n \n /* { dg-final { scan-assembler \"vbic\"  }  } */\n+/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */"}]}