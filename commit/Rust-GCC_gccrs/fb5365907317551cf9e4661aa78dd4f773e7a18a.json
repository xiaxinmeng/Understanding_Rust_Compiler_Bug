{"sha": "fb5365907317551cf9e4661aa78dd4f773e7a18a", "node_id": "C_kwDOANBUbNoAKGZiNTM2NTkwNzMxNzU1MWNmOWU0NjYxYWE3OGRkNGY3NzNlN2ExOGE", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2023-02-22T10:22:03Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2023-02-22T10:22:03Z"}, "message": "cgraph: Handle BUILT_IN_UNREACHABLE_TRAP like BUILT_IN_UNREACHABLE in more spots [PR106258]\n\nThe following testcase ICEs because we still have some spots that\ntreat BUILT_IN_UNREACHABLE specially but not BUILT_IN_UNREACHABLE_TRAP\nthe same.\n\n2023-02-22  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR middle-end/106258\n\t* cgraph.cc (cgraph_edge::redirect_call_stmt_to_callee,\n\tcgraph_update_edges_for_call_stmt_node, cgraph_node::verify_node):\n\tHandle BUILT_IN_UNREACHABLE_TRAP like BUILT_IN_UNREACHABLE.\n\t* cgraphclones.cc (cgraph_node::create_clone): Likewise.\n\n\t* g++.dg/ipa/pr106258.C: New test.", "tree": {"sha": "93f8f5aff3ec71e7efd5d84832540407e7435a9d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/93f8f5aff3ec71e7efd5d84832540407e7435a9d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fb5365907317551cf9e4661aa78dd4f773e7a18a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb5365907317551cf9e4661aa78dd4f773e7a18a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb5365907317551cf9e4661aa78dd4f773e7a18a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb5365907317551cf9e4661aa78dd4f773e7a18a/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "334f23d83261997ca89d8919b94b97aa22003a65", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/334f23d83261997ca89d8919b94b97aa22003a65", "html_url": "https://github.com/Rust-GCC/gccrs/commit/334f23d83261997ca89d8919b94b97aa22003a65"}], "stats": {"total": 20, "additions": 16, "deletions": 4}, "files": [{"sha": "ec663d233851bd7d9b1e87c344afccf0e0a79417", "filename": "gcc/cgraph.cc", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb5365907317551cf9e4661aa78dd4f773e7a18a/gcc%2Fcgraph.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb5365907317551cf9e4661aa78dd4f773e7a18a/gcc%2Fcgraph.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.cc?ref=fb5365907317551cf9e4661aa78dd4f773e7a18a", "patch": "@@ -1548,7 +1548,8 @@ cgraph_edge::redirect_call_stmt_to_callee (cgraph_edge *e)\n   else\n     {\n       if (flag_checking\n-\t  && !fndecl_built_in_p (e->callee->decl, BUILT_IN_UNREACHABLE))\n+\t  && !fndecl_built_in_p (e->callee->decl, BUILT_IN_UNREACHABLE)\n+\t  && !fndecl_built_in_p (e->callee->decl, BUILT_IN_UNREACHABLE_TRAP))\n \tipa_verify_edge_has_no_modifications (e);\n       new_stmt = e->call_stmt;\n       gimple_call_set_fndecl (new_stmt, e->callee->decl);\n@@ -1634,7 +1635,9 @@ cgraph_update_edges_for_call_stmt_node (cgraph_node *node,\n \t{\n \t  /* Keep calls marked as dead dead.  */\n \t  if (new_stmt && is_gimple_call (new_stmt) && e->callee\n-\t      && fndecl_built_in_p (e->callee->decl, BUILT_IN_UNREACHABLE))\n+\t      && (fndecl_built_in_p (e->callee->decl, BUILT_IN_UNREACHABLE)\n+\t\t  || fndecl_built_in_p (e->callee->decl,\n+\t\t\t\t\tBUILT_IN_UNREACHABLE_TRAP)))\n \t    {\n \t      cgraph_edge::set_call_stmt (node->get_edge (old_stmt),\n \t\t\t\t\t  as_a <gcall *> (new_stmt));\n@@ -3598,7 +3601,9 @@ cgraph_node::verify_node (void)\n \t  /* Optimized out calls are redirected to __builtin_unreachable.  */\n \t  && (e->count.nonzero_p ()\n \t      || ! e->callee->decl\n-\t      || !fndecl_built_in_p (e->callee->decl, BUILT_IN_UNREACHABLE))\n+\t      || !(fndecl_built_in_p (e->callee->decl, BUILT_IN_UNREACHABLE)\n+\t\t   || fndecl_built_in_p (e->callee->decl,\n+\t\t\t\t\t BUILT_IN_UNREACHABLE_TRAP)))\n \t  && count\n \t      == ENTRY_BLOCK_PTR_FOR_FN (DECL_STRUCT_FUNCTION (decl))->count\n \t  && (!e->count.ipa_p ()"}, {"sha": "4a4773ec565581ee8199bf6701c07073013ff55c", "filename": "gcc/cgraphclones.cc", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb5365907317551cf9e4661aa78dd4f773e7a18a/gcc%2Fcgraphclones.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb5365907317551cf9e4661aa78dd4f773e7a18a/gcc%2Fcgraphclones.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraphclones.cc?ref=fb5365907317551cf9e4661aa78dd4f773e7a18a", "patch": "@@ -425,7 +425,9 @@ cgraph_node::create_clone (tree new_decl, profile_count prof_count,\n \t version.  The only exception is when the edge was proved to\n \t be unreachable during the cloning procedure.  */\n       if (!e->callee\n-\t  || !fndecl_built_in_p (e->callee->decl, BUILT_IN_UNREACHABLE))\n+\t  || !(fndecl_built_in_p (e->callee->decl, BUILT_IN_UNREACHABLE)\n+\t       || fndecl_built_in_p (e->callee->decl,\n+\t\t\t\t     BUILT_IN_UNREACHABLE_TRAP)))\n         e->redirect_callee_duplicating_thunks (new_node);\n     }\n   new_node->expand_all_artificial_thunks ();"}, {"sha": "974c8303f711651b5a249a3d8f714da82ecc1104", "filename": "gcc/testsuite/g++.dg/ipa/pr106258.C", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb5365907317551cf9e4661aa78dd4f773e7a18a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr106258.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb5365907317551cf9e4661aa78dd4f773e7a18a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr106258.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr106258.C?ref=fb5365907317551cf9e4661aa78dd4f773e7a18a", "patch": "@@ -0,0 +1,5 @@\n+// PR middle-end/106258\n+// { dg-do compile { target c++11 } }\n+// { dg-options \"-O2 -funreachable-traps\" }\n+\n+#include \"ipa-sra-4.C\""}]}