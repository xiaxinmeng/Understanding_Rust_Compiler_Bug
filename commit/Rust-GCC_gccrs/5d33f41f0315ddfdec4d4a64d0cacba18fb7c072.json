{"sha": "5d33f41f0315ddfdec4d4a64d0cacba18fb7c072", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWQzM2Y0MWYwMzE1ZGRmZGVjNGQ0YTY0ZDBjYWNiYTE4ZmI3YzA3Mg==", "commit": {"author": {"name": "Frank Ch. Eigler", "email": "fche@redhat.com", "date": "2004-07-20T20:01:12Z"}, "committer": {"name": "Frank Ch. Eigler", "email": "fche@gcc.gnu.org", "date": "2004-07-20T20:01:12Z"}, "message": "tree-mudflap.c (mf_set_options_fndecl): New tree.\n\n2004-07-20  Frank Ch. Eigler  <fche@redhat.com>\n\n\t* tree-mudflap.c (mf_set_options_fndecl): New tree.\n\t(mudflap_init): Set it.\n\t(mudflap_register_call): Remove __mf_init call.\n\t(mudflap_finish_file): Emit call to __mf_init here.  Emit a call to\n\tto pass \"-ignore-reads\" option to libmudflap if needed.\n\nFrom-SVN: r84972", "tree": {"sha": "c0c0472c01381bcef0b70c86bc1c1bea6193acff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c0c0472c01381bcef0b70c86bc1c1bea6193acff"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5d33f41f0315ddfdec4d4a64d0cacba18fb7c072", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d33f41f0315ddfdec4d4a64d0cacba18fb7c072", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d33f41f0315ddfdec4d4a64d0cacba18fb7c072", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d33f41f0315ddfdec4d4a64d0cacba18fb7c072/comments", "author": {"login": "fche", "id": 588885, "node_id": "MDQ6VXNlcjU4ODg4NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/588885?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fche", "html_url": "https://github.com/fche", "followers_url": "https://api.github.com/users/fche/followers", "following_url": "https://api.github.com/users/fche/following{/other_user}", "gists_url": "https://api.github.com/users/fche/gists{/gist_id}", "starred_url": "https://api.github.com/users/fche/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fche/subscriptions", "organizations_url": "https://api.github.com/users/fche/orgs", "repos_url": "https://api.github.com/users/fche/repos", "events_url": "https://api.github.com/users/fche/events{/privacy}", "received_events_url": "https://api.github.com/users/fche/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a082fc7afc0eeb6aaf30ffdc1bbf36d4853814ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a082fc7afc0eeb6aaf30ffdc1bbf36d4853814ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a082fc7afc0eeb6aaf30ffdc1bbf36d4853814ad"}], "stats": {"total": 53, "additions": 43, "deletions": 10}, "files": [{"sha": "95332297ad642e67db970b2b6dbab19a9952281d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d33f41f0315ddfdec4d4a64d0cacba18fb7c072/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d33f41f0315ddfdec4d4a64d0cacba18fb7c072/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5d33f41f0315ddfdec4d4a64d0cacba18fb7c072", "patch": "@@ -1,3 +1,11 @@\n+2004-07-20  Frank Ch. Eigler  <fche@redhat.com>\n+\n+\t* tree-mudflap.c (mf_set_options_fndecl): New tree.\n+\t(mudflap_init): Set it.\n+\t(mudflap_register_call): Remove __mf_init call.\n+\t(mudflap_finish_file): Emit call to __mf_init here.  Emit a call to\n+\tto pass \"-ignore-reads\" option to libmudflap if needed.\n+\n 2004-07-20  John David Anglin  <dava.anglin@nrc-cnrc.gc.ca>\n \n \tPR c++/14607"}, {"sha": "bd1762005302ebd0e2210b051bd288b8058f8301", "filename": "gcc/tree-mudflap.c", "status": "modified", "additions": 35, "deletions": 10, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d33f41f0315ddfdec4d4a64d0cacba18fb7c072/gcc%2Ftree-mudflap.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d33f41f0315ddfdec4d4a64d0cacba18fb7c072/gcc%2Ftree-mudflap.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-mudflap.c?ref=5d33f41f0315ddfdec4d4a64d0cacba18fb7c072", "patch": "@@ -272,6 +272,10 @@ static GTY (()) tree mf_unregister_fndecl;\n /* extern void __mf_init (); */\n static GTY (()) tree mf_init_fndecl;\n \n+/* extern int __mf_set_options (const char*); */\n+static GTY (()) tree mf_set_options_fndecl;\n+\n+\n /* Helper for mudflap_init: construct a decl with the given category,\n    name, and type, mark it an external reference, and pushdecl it.  */\n static inline tree\n@@ -309,6 +313,8 @@ mf_make_mf_cache_struct_type (tree field_type)\n \n #define build_function_type_0(rtype)            \\\n   build_function_type (rtype, void_list_node)\n+#define build_function_type_1(rtype, arg1)                 \\\n+  build_function_type (rtype, tree_cons (0, arg1, void_list_node))\n #define build_function_type_3(rtype, arg1, arg2, arg3)                  \\\n   build_function_type (rtype, tree_cons (0, arg1, tree_cons (0, arg2,   \\\n                                                              tree_cons (0, arg3, void_list_node))))\n@@ -328,6 +334,7 @@ mudflap_init (void)\n   tree mf_check_register_fntype;\n   tree mf_unregister_fntype;\n   tree mf_init_fntype;\n+  tree mf_set_options_fntype;\n \n   if (done)\n     return;\n@@ -350,6 +357,8 @@ mudflap_init (void)\n                            integer_type_node);\n   mf_init_fntype =\n     build_function_type_0 (void_type_node);\n+  mf_set_options_fntype =\n+    build_function_type_1 (integer_type_node, mf_const_string_type);\n \n   mf_cache_array_decl = mf_make_builtin (VAR_DECL, \"__mf_lookup_cache\",\n                                          mf_cache_array_type);\n@@ -365,9 +374,12 @@ mudflap_init (void)\n                                           mf_unregister_fntype);\n   mf_init_fndecl = mf_make_builtin (FUNCTION_DECL, \"__mf_init\",\n                                     mf_init_fntype);\n+  mf_set_options_fndecl = mf_make_builtin (FUNCTION_DECL, \"__mf_set_options\",\n+                                           mf_set_options_fntype);\n }\n #undef build_function_type_4\n #undef build_function_type_3\n+#undef build_function_type_1\n #undef build_function_type_0\n \n \n@@ -1142,13 +1154,6 @@ mudflap_register_call (tree obj, tree object_size, tree varname)\n \n   call_stmt = build_function_call_expr (mf_register_fndecl, args);\n \n-  /* Add an initial __mf_init() call to the list of registration calls.  */ \n-  if (enqueued_call_stmt_chain == NULL_TREE)\n-    {\n-      tree call2_stmt = build_function_call_expr (mf_init_fndecl, NULL_TREE);\n-      append_to_statement_list (call2_stmt, &enqueued_call_stmt_chain);      \n-    }\n-\n   append_to_statement_list (call_stmt, &enqueued_call_stmt_chain);\n }\n \n@@ -1245,6 +1250,8 @@ mudflap_enqueue_constant (tree obj)\n void\n mudflap_finish_file (void)\n {\n+  tree ctor_statements = NULL_TREE;\n+\n   /* Try to give the deferred objects one final try.  */\n   if (deferred_static_decls)\n     {\n@@ -1263,12 +1270,30 @@ mudflap_finish_file (void)\n       VARRAY_CLEAR (deferred_static_decls);\n     }\n \n+  /* Insert a call to __mf_init.  */\n+  {\n+    tree call2_stmt = build_function_call_expr (mf_init_fndecl, NULL_TREE);\n+    append_to_statement_list (call2_stmt, &ctor_statements);\n+  }\n+  \n+  /* If appropriate, call __mf_set_options to pass along read-ignore mode.  */\n+  if (flag_mudflap_ignore_reads)\n+    {\n+      tree arg = tree_cons (NULL_TREE, \n+                            mf_build_string (\"-ignore-reads\"), NULL_TREE);\n+      tree call_stmt = build_function_call_expr (mf_set_options_fndecl, arg);\n+      append_to_statement_list (call_stmt, &ctor_statements);\n+    }\n+\n+  /* Append all the enqueued registration calls.  */\n   if (enqueued_call_stmt_chain)\n     {\n-      cgraph_build_static_cdtor ('I', enqueued_call_stmt_chain, \n-                                 MAX_RESERVED_INIT_PRIORITY-1);\n-      enqueued_call_stmt_chain = 0;\n+      append_to_statement_list (enqueued_call_stmt_chain, &ctor_statements);\n+      enqueued_call_stmt_chain = NULL_TREE;\n     }\n+\n+  cgraph_build_static_cdtor ('I', ctor_statements, \n+                             MAX_RESERVED_INIT_PRIORITY-1);\n }\n \n "}]}