{"sha": "061217e948098ec01ee6d88e0e93049e3802117d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDYxMjE3ZTk0ODA5OGVjMDFlZTZkODhlMGU5MzA0OWUzODAyMTE3ZA==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2011-04-11T17:50:39Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2011-04-11T17:50:39Z"}, "message": "moveable.cc: Actually run it in parallel-mode for check-parallel.\n\n2011-04-11  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* testsuite/25_algorithms/inplace_merge/moveable.cc: Actually run\n\tit in parallel-mode for check-parallel.\n\t* testsuite/25_algorithms/rotate/moveable.cc: Likewise.\n\t* testsuite/25_algorithms/stable_partition/moveable.cc: Likewise.\n\t* testsuite/25_algorithms/remove/moveable.cc: Likewise.\n\t* testsuite/25_algorithms/sort_heap/check_compare_by_value.cc:\n\tLikewise.\n\t* testsuite/25_algorithms/unique/moveable.cc: Likewise.\n\t* testsuite/25_algorithms/remove_if/moveable.cc: Likewise.\n\t* testsuite/25_algorithms/heap/moveable.cc: Likewise.\n\n\t* testsuite/25_algorithms/next_permutation/moveable.cc: Only skip\n\tthe tests based on std::lexicographical_compare for check-parallel.\n\t* testsuite/25_algorithms/prev_permutation/moveable.cc: Likewise.\n\nFrom-SVN: r172269", "tree": {"sha": "ef2f527af71b78c7dbe26aa0d119754009de31f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ef2f527af71b78c7dbe26aa0d119754009de31f8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/061217e948098ec01ee6d88e0e93049e3802117d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/061217e948098ec01ee6d88e0e93049e3802117d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/061217e948098ec01ee6d88e0e93049e3802117d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/061217e948098ec01ee6d88e0e93049e3802117d/comments", "author": null, "committer": null, "parents": [{"sha": "b8ce4e945b396bc6db1da17d54d8a024ad5d7edb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8ce4e945b396bc6db1da17d54d8a024ad5d7edb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b8ce4e945b396bc6db1da17d54d8a024ad5d7edb"}], "stats": {"total": 97, "additions": 46, "deletions": 51}, "files": [{"sha": "c4ed61f53762f3dd73c26c1e940a8da68b40d51f", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/061217e948098ec01ee6d88e0e93049e3802117d/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/061217e948098ec01ee6d88e0e93049e3802117d/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=061217e948098ec01ee6d88e0e93049e3802117d", "patch": "@@ -1,3 +1,20 @@\n+2011-04-11  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* testsuite/25_algorithms/inplace_merge/moveable.cc: Actually run\n+\tit in parallel-mode for check-parallel.\n+\t* testsuite/25_algorithms/rotate/moveable.cc: Likewise.\n+\t* testsuite/25_algorithms/stable_partition/moveable.cc: Likewise.\n+\t* testsuite/25_algorithms/remove/moveable.cc: Likewise.\n+\t* testsuite/25_algorithms/sort_heap/check_compare_by_value.cc:\n+\tLikewise.\n+\t* testsuite/25_algorithms/unique/moveable.cc: Likewise.\n+\t* testsuite/25_algorithms/remove_if/moveable.cc: Likewise.\n+\t* testsuite/25_algorithms/heap/moveable.cc: Likewise.\n+\n+\t* testsuite/25_algorithms/next_permutation/moveable.cc: Only skip\n+\tthe tests based on std::lexicographical_compare for check-parallel.\n+\t* testsuite/25_algorithms/prev_permutation/moveable.cc: Likewise.\n+\n 2011-04-10  Jonathan Wakely  <jwakely.gcc@gmail.com>\n \n \tPR libstdc++/48541"}, {"sha": "1506b5f72f7e893096da3336d412e8c82f736cce", "filename": "libstdc++-v3/testsuite/25_algorithms/heap/moveable.cc", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/061217e948098ec01ee6d88e0e93049e3802117d/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fheap%2Fmoveable.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/061217e948098ec01ee6d88e0e93049e3802117d/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fheap%2Fmoveable.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fheap%2Fmoveable.cc?ref=061217e948098ec01ee6d88e0e93049e3802117d", "patch": "@@ -1,6 +1,6 @@\n // { dg-options \"-std=gnu++0x\" }\n \n-// Copyright (C) 2005, 2006, 2007, 2008, 2009, 2010\n+// Copyright (C) 2005, 2006, 2007, 2008, 2009, 2010, 2011\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -24,10 +24,6 @@\n \n #undef _GLIBCXX_CONCEPT_CHECKS\n \n-// XXX FIXME:  parallel-mode should deal correctly with moveable-only types\n-// per C++0x, at minimum smoothly fall back to serial.\n-#undef _GLIBCXX_PARALLEL\n-\n #include <algorithm>\n #include <testsuite_hooks.h>\n #include <testsuite_iterators.h>"}, {"sha": "00ae7f21d480072b056372312aaca00f878890f7", "filename": "libstdc++-v3/testsuite/25_algorithms/inplace_merge/moveable.cc", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/061217e948098ec01ee6d88e0e93049e3802117d/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Finplace_merge%2Fmoveable.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/061217e948098ec01ee6d88e0e93049e3802117d/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Finplace_merge%2Fmoveable.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Finplace_merge%2Fmoveable.cc?ref=061217e948098ec01ee6d88e0e93049e3802117d", "patch": "@@ -1,6 +1,6 @@\n // { dg-options \"-std=gnu++0x\" }\n \n-// Copyright (C) 2009, 2010 Free Software Foundation, Inc.\n+// Copyright (C) 2009, 2010, 2011 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -19,10 +19,6 @@\n \n // 25.3.4 [lib.alg.merge]\n \n-// XXX FIXME:  parallel-mode should deal correctly with moveable-only types\n-// per C++0x, at minimum smoothly fall back to serial.\n-#undef _GLIBCXX_PARALLEL\n-\n #include <algorithm>\n #include <testsuite_hooks.h>\n #include <testsuite_iterators.h>"}, {"sha": "1994ddc6ec414742e495fd307b156bcf6f590250", "filename": "libstdc++-v3/testsuite/25_algorithms/next_permutation/moveable.cc", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/061217e948098ec01ee6d88e0e93049e3802117d/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fnext_permutation%2Fmoveable.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/061217e948098ec01ee6d88e0e93049e3802117d/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fnext_permutation%2Fmoveable.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fnext_permutation%2Fmoveable.cc?ref=061217e948098ec01ee6d88e0e93049e3802117d", "patch": "@@ -1,6 +1,6 @@\n // { dg-options \"-std=gnu++0x\" }\n \n-// Copyright (C) 2009, 2010 Free Software Foundation, Inc.\n+// Copyright (C) 2009, 2010, 2011 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -19,10 +19,6 @@\n \n // 25.3.9 [lib.alg.permutation.generators]\n \n-// XXX FIXME:  parallel-mode should deal correctly with moveable-only types\n-// per C++0x, at minimum smoothly fall back to serial.\n-#undef _GLIBCXX_PARALLEL\n-\n #include <algorithm>\n #include <testsuite_hooks.h>\n #include <testsuite_iterators.h>\n@@ -82,8 +78,13 @@ test4()\n       std::copy(array, array + 6, temp_array);\n       Container con(temp_array, temp_array + 6);\n       VERIFY( next_permutation(array, array + 6) );\n+\n+// XXX FIXME:  parallel-mode should deal correctly with moveable-only types\n+// per C++0x, at minimum smoothly fall back to serial.\n+#ifndef _GLIBCXX_PARALLEL\n       VERIFY( std::lexicographical_compare(temp_array, temp_array + 6, \n \t\t\t\t\t   array, array + 6) );\n+#endif\n     }\n   VERIFY( !next_permutation(array,array + 6) );\n   for(int i = 0; i < 6; ++i)\n@@ -106,8 +107,13 @@ test5()\n       std::copy(array, array + 6, temp_array);\n       Container con(temp_array, temp_array + 6);\n       VERIFY( next_permutation(array, array + 6, are_ordered) );\n+\n+// XXX FIXME:  parallel-mode should deal correctly with moveable-only types\n+// per C++0x, at minimum smoothly fall back to serial.\n+#ifndef _GLIBCXX_PARALLEL\n       VERIFY( std::lexicographical_compare(temp_array, temp_array + 6,\n \t\t\t\t\t   array, array + 6, are_ordered) );\n+#endif\n     }\n   VERIFY( !next_permutation(array,array + 6, are_ordered) );\n   for(int i = 0; i < 6; ++i)"}, {"sha": "fe3ea2c33a99c897008c7a36b2e18aedc283b27c", "filename": "libstdc++-v3/testsuite/25_algorithms/prev_permutation/moveable.cc", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/061217e948098ec01ee6d88e0e93049e3802117d/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fprev_permutation%2Fmoveable.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/061217e948098ec01ee6d88e0e93049e3802117d/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fprev_permutation%2Fmoveable.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fprev_permutation%2Fmoveable.cc?ref=061217e948098ec01ee6d88e0e93049e3802117d", "patch": "@@ -1,6 +1,6 @@\n // { dg-options \"-std=gnu++0x\" }\n \n-// Copyright (C) 2009, 2010 Free Software Foundation, Inc.\n+// Copyright (C) 2009, 2010, 2011 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -19,10 +19,6 @@\n \n // 25.3.9 [lib.alg.permutation.generators]\n \n-// XXX FIXME:  parallel-mode should deal correctly with moveable-only types\n-// per C++0x, at minimum smoothly fall back to serial.\n-#undef _GLIBCXX_PARALLEL\n-\n #include <algorithm>\n #include <testsuite_hooks.h>\n #include <testsuite_iterators.h>\n@@ -82,8 +78,13 @@ test4()\n       std::copy(array, array + 6, temp_array);\n       Container con(temp_array, temp_array + 6);\n       VERIFY( prev_permutation(array, array + 6) );\n+\n+// XXX FIXME:  parallel-mode should deal correctly with moveable-only types\n+// per C++0x, at minimum smoothly fall back to serial.\n+#ifndef _GLIBCXX_PARALLEL\n       VERIFY( !std::lexicographical_compare(temp_array, temp_array + 6, \n \t\t\t\t\t    array, array + 6) );\n+#endif\n     }\n   VERIFY( !prev_permutation(array,array + 6)) ;\n   for(int i = 0; i < 6; ++i)\n@@ -106,8 +107,13 @@ test5()\n       std::copy(array, array + 6, temp_array);\n       Container con(temp_array, temp_array + 6);\n       VERIFY( prev_permutation(array, array + 6, are_ordered) );\n+\n+// XXX FIXME:  parallel-mode should deal correctly with moveable-only types\n+// per C++0x, at minimum smoothly fall back to serial.\n+#ifndef _GLIBCXX_PARALLEL\n       VERIFY( !std::lexicographical_compare(temp_array, temp_array + 6, \n \t\t\t\t\t    array, array + 6, are_ordered) );\n+#endif\n     }\n   VERIFY( !prev_permutation(array,array + 6, are_ordered) );\n   for(int i = 0; i < 6; ++i)"}, {"sha": "42aa9971db4323f2e5a4788ee53d55951025057b", "filename": "libstdc++-v3/testsuite/25_algorithms/remove/moveable.cc", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/061217e948098ec01ee6d88e0e93049e3802117d/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fremove%2Fmoveable.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/061217e948098ec01ee6d88e0e93049e3802117d/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fremove%2Fmoveable.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fremove%2Fmoveable.cc?ref=061217e948098ec01ee6d88e0e93049e3802117d", "patch": "@@ -1,6 +1,6 @@\n // { dg-options \"-std=gnu++0x\" }\n \n-// Copyright (C) 2005, 2006, 2007, 2008, 2009, 2010\n+// Copyright (C) 2005, 2006, 2007, 2008, 2009, 2010, 2011\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -22,10 +22,6 @@\n \n #undef _GLIBCXX_CONCEPT_CHECKS\n \n-// XXX FIXME:  parallel-mode should deal correctly with moveable-only types\n-// per C++0x, at minimum smoothly fall back to serial.\n-#undef _GLIBCXX_PARALLEL\n-\n #include <algorithm>\n #include <testsuite_hooks.h>\n #include <testsuite_iterators.h>"}, {"sha": "8b2026f7ea97016d89a536397f1ade914c207195", "filename": "libstdc++-v3/testsuite/25_algorithms/remove_if/moveable.cc", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/061217e948098ec01ee6d88e0e93049e3802117d/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fremove_if%2Fmoveable.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/061217e948098ec01ee6d88e0e93049e3802117d/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fremove_if%2Fmoveable.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fremove_if%2Fmoveable.cc?ref=061217e948098ec01ee6d88e0e93049e3802117d", "patch": "@@ -1,6 +1,6 @@\n // { dg-options \"-std=gnu++0x\" }\n \n-// Copyright (C) 2005, 2006, 2007, 2008, 2009, 2010\n+// Copyright (C) 2005, 2006, 2007, 2008, 2009, 2010, 2011\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -22,10 +22,6 @@\n \n #undef _GLIBCXX_CONCEPT_CHECKS\n \n-// XXX FIXME:  parallel-mode should deal correctly with moveable-only types\n-// per C++0x, at minimum smoothly fall back to serial.\n-#undef _GLIBCXX_PARALLEL\n-\n #include <algorithm>\n #include <testsuite_hooks.h>\n #include <testsuite_iterators.h>"}, {"sha": "6b6665ae49092c7224f8e56b0c7791e71a2c9f4f", "filename": "libstdc++-v3/testsuite/25_algorithms/rotate/moveable.cc", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/061217e948098ec01ee6d88e0e93049e3802117d/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Frotate%2Fmoveable.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/061217e948098ec01ee6d88e0e93049e3802117d/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Frotate%2Fmoveable.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Frotate%2Fmoveable.cc?ref=061217e948098ec01ee6d88e0e93049e3802117d", "patch": "@@ -1,6 +1,6 @@\n // { dg-options \"-std=gnu++0x\" }\n \n-// Copyright (C) 2005, 2006, 2007, 2008, 2009, 2010\n+// Copyright (C) 2005, 2006, 2007, 2008, 2009, 2010, 2011\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -24,10 +24,6 @@\n \n #undef _GLIBCXX_CONCEPT_CHECKS\n \n-// XXX FIXME:  parallel-mode should deal correctly with moveable-only types\n-// per C++0x, at minimum smoothly fall back to serial.\n-#undef _GLIBCXX_PARALLEL\n-\n #include <algorithm>\n #include <testsuite_hooks.h>\n #include <testsuite_iterators.h>\n@@ -43,8 +39,6 @@ typedef test_container<rvalstruct, forward_iterator_wrapper> Fcontainer;\n typedef test_container<rvalstruct, bidirectional_iterator_wrapper> Bcontainer; \n typedef test_container<rvalstruct, random_access_iterator_wrapper> Rcontainer; \n \n-\n-\n void\n test1()\n {"}, {"sha": "bb61cffbb2356932ffdee08065a1e44b89844c13", "filename": "libstdc++-v3/testsuite/25_algorithms/sort_heap/check_compare_by_value.cc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/061217e948098ec01ee6d88e0e93049e3802117d/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fsort_heap%2Fcheck_compare_by_value.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/061217e948098ec01ee6d88e0e93049e3802117d/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fsort_heap%2Fcheck_compare_by_value.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fsort_heap%2Fcheck_compare_by_value.cc?ref=061217e948098ec01ee6d88e0e93049e3802117d", "patch": "@@ -19,10 +19,6 @@\n \n #undef _GLIBCXX_CONCEPT_CHECKS\n \n-// XXX FIXME:  parallel-mode should deal correctly with moveable-only types\n-// per C++0x, at minimum smoothly fall back to serial.\n-#undef _GLIBCXX_PARALLEL\n-\n #include <algorithm>\n #include <testsuite_hooks.h>\n #include <testsuite_iterators.h>"}, {"sha": "b649b10e3cdc673754465c994babd3d588a4856e", "filename": "libstdc++-v3/testsuite/25_algorithms/stable_partition/moveable.cc", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/061217e948098ec01ee6d88e0e93049e3802117d/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fstable_partition%2Fmoveable.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/061217e948098ec01ee6d88e0e93049e3802117d/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fstable_partition%2Fmoveable.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fstable_partition%2Fmoveable.cc?ref=061217e948098ec01ee6d88e0e93049e3802117d", "patch": "@@ -1,6 +1,6 @@\n // { dg-options \"-std=gnu++0x\" }\n \n-// Copyright (C) 2009, 2010 Free Software Foundation, Inc.\n+// Copyright (C) 2009, 2010, 2011 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -19,10 +19,6 @@\n \n // 25.2.12 [lib.alg.partitions] Partitions.\n \n-// XXX FIXME:  parallel-mode should deal correctly with moveable-only types\n-// per C++0x, at minimum smoothly fall back to serial.\n-#undef _GLIBCXX_PARALLEL\n-\n #include <algorithm>\n #include <functional>\n #include <testsuite_hooks.h>"}, {"sha": "75e1eb525853f1c65de4ecf07efe215b428273eb", "filename": "libstdc++-v3/testsuite/25_algorithms/unique/moveable.cc", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/061217e948098ec01ee6d88e0e93049e3802117d/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Funique%2Fmoveable.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/061217e948098ec01ee6d88e0e93049e3802117d/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Funique%2Fmoveable.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Funique%2Fmoveable.cc?ref=061217e948098ec01ee6d88e0e93049e3802117d", "patch": "@@ -1,6 +1,6 @@\n // { dg-options \"-std=gnu++0x\" }\n \n-// Copyright (C) 2005, 2006, 2007, 2008, 2009, 2010\n+// Copyright (C) 2005, 2006, 2007, 2008, 2009, 2010, 2011\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -22,10 +22,6 @@\n \n #undef _GLIBCXX_CONCEPT_CHECKS\n \n-// XXX FIXME:  parallel-mode should deal correctly with moveable-only types\n-// per C++0x, at minimum smoothly fall back to serial.\n-#undef _GLIBCXX_PARALLEL\n-\n #include <vector>\n #include <algorithm>\n #include <functional>"}]}