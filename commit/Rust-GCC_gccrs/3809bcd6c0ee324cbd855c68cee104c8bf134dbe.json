{"sha": "3809bcd6c0ee324cbd855c68cee104c8bf134dbe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzgwOWJjZDZjMGVlMzI0Y2JkODU1YzY4Y2VlMTA0YzhiZjEzNGRiZQ==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2020-03-30T15:13:59Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2020-03-31T01:03:00Z"}, "message": "lra: set insn_code_data to NULL when freeing\n\nlibgccjit's test-threads.c repeatedly compiles and runs numerous tests,\neach in a separate thread.\n\nAttempting to add an empty test that generates no code leads to a\ndouble-free ICE within that thread, within lra.c's\nfinish_insn_code_data_once.\n\nThe root cause is that the insn_code_data array is cleared in\ninit_insn_code_data_once, but this is only called the first time\na cgraph_node is expanded [1], whereas the \"loop-over-all-elements\nand free them\" is unconditionally called in finalize [2].  Hence\nif there are no functions:\n* the array is not re-initialized for the empty context\n* when finish_insn_code_data_once is called for the empty context\nit still contains the freed pointers from the previous context\nthat held the jit mutex, and hence the free is a double-free.\n\nThis patch sets the pointers to NULL after freeing them, fixing\nthe ICE.\n\n[1]\ninit_insn_code_data_once is called via\n  lra_init_once called by\n    ira_init_once called by\n      initialize_rtl, via:\n         if (!rtl_initialized)\n           ira_init_once ();\n        called by init_function_start\n           called by cgraph_node::expand\n\n[2]:\nfinish_insn_code_data_once is called by:\n  lra_finish_once called by\n    finalize\n\ngcc/ChangeLog:\n\t* lra.c (finish_insn_code_data_once): Set the array elements\n\tto NULL after freeing them.\n\ngcc/testsuite/ChangeLog:\n\t* jit.dg/all-non-failing-tests.h: Add test-empty.c", "tree": {"sha": "568baf4fc6b07c0092c61cdfad2ad9ba176156ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/568baf4fc6b07c0092c61cdfad2ad9ba176156ac"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3809bcd6c0ee324cbd855c68cee104c8bf134dbe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3809bcd6c0ee324cbd855c68cee104c8bf134dbe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3809bcd6c0ee324cbd855c68cee104c8bf134dbe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3809bcd6c0ee324cbd855c68cee104c8bf134dbe/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "13a29fc5730ac3a5e3296971d15ca63dcc0ae261", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13a29fc5730ac3a5e3296971d15ca63dcc0ae261", "html_url": "https://github.com/Rust-GCC/gccrs/commit/13a29fc5730ac3a5e3296971d15ca63dcc0ae261"}], "stats": {"total": 24, "additions": 23, "deletions": 1}, "files": [{"sha": "101956a53c6df26b8b3e87b2259c8fd370551e5d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3809bcd6c0ee324cbd855c68cee104c8bf134dbe/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3809bcd6c0ee324cbd855c68cee104c8bf134dbe/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3809bcd6c0ee324cbd855c68cee104c8bf134dbe", "patch": "@@ -1,3 +1,8 @@\n+2020-03-30  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* lra.c (finish_insn_code_data_once): Set the array elements\n+\tto NULL after freeing them.\n+\n 2020-03-30  Andreas Schwab  <schwab@suse.de>\n \n \t* config/host-linux.c (TRY_EMPTY_VM_SPACE) [__riscv && __LP64__]:"}, {"sha": "5e8b75b1fdaeeca955cb160cd202b850a0b13f71", "filename": "gcc/lra.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3809bcd6c0ee324cbd855c68cee104c8bf134dbe/gcc%2Flra.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3809bcd6c0ee324cbd855c68cee104c8bf134dbe/gcc%2Flra.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra.c?ref=3809bcd6c0ee324cbd855c68cee104c8bf134dbe", "patch": "@@ -653,7 +653,10 @@ finish_insn_code_data_once (void)\n   for (unsigned int i = 0; i < NUM_INSN_CODES; i++)\n     {\n       if (insn_code_data[i] != NULL)\n-\tfree (insn_code_data[i]);\n+\t{\n+\t  free (insn_code_data[i]);\n+\t  insn_code_data[i] = NULL;\n+\t}\n     }\n }\n "}, {"sha": "c72aa9aae06bd43a2703cae6e123899779d34857", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3809bcd6c0ee324cbd855c68cee104c8bf134dbe/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3809bcd6c0ee324cbd855c68cee104c8bf134dbe/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3809bcd6c0ee324cbd855c68cee104c8bf134dbe", "patch": "@@ -1,3 +1,7 @@\n+2020-03-30  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* jit.dg/all-non-failing-tests.h: Add test-empty.c\n+\n 2020-03-30  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/94385"}, {"sha": "af744192a73eb9f177bbf466876ef1dbb3b3937e", "filename": "gcc/testsuite/jit.dg/all-non-failing-tests.h", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3809bcd6c0ee324cbd855c68cee104c8bf134dbe/gcc%2Ftestsuite%2Fjit.dg%2Fall-non-failing-tests.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3809bcd6c0ee324cbd855c68cee104c8bf134dbe/gcc%2Ftestsuite%2Fjit.dg%2Fall-non-failing-tests.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fjit.dg%2Fall-non-failing-tests.h?ref=3809bcd6c0ee324cbd855c68cee104c8bf134dbe", "patch": "@@ -116,6 +116,13 @@\n #undef create_code\n #undef verify_code\n \n+/* test-empty.c */\n+#define create_code create_code_empty\n+#define verify_code verify_code_empty\n+#include \"test-empty.c\"\n+#undef create_code\n+#undef verify_code\n+\n /* test-error-*.c: We don't use these test cases, since they deliberately\n    introduce errors, which we don't want here.  */\n \n@@ -328,6 +335,9 @@ const struct testcase testcases[] = {\n   {\"expressions\",\n    create_code_expressions,\n    verify_code_expressions},\n+  {\"empty\",\n+   create_code_empty,\n+   verify_code_empty},\n   {\"factorial\",\n    create_code_factorial,\n    verify_code_factorial},"}]}