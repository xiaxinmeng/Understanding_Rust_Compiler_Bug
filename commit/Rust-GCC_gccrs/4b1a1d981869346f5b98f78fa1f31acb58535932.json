{"sha": "4b1a1d981869346f5b98f78fa1f31acb58535932", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGIxYTFkOTgxODY5MzQ2ZjViOThmNzhmYTFmMzFhY2I1ODUzNTkzMg==", "commit": {"author": {"name": "Dragan Mladjenovic", "email": "dmladjenovic@wavecomp.com", "date": "2019-07-09T21:20:57Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2019-07-09T21:20:57Z"}, "message": "cfgcleanup.c (old_insns_match_p): Check if used hard regs set is equal for both call instructions.\n\n2019-07-09  Dragan Mladjenovic  <dmladjenovic@wavecomp.com>\n\n\t* cfgcleanup.c (old_insns_match_p): Check if used hard regs set is equal\n\tfor both call instructions.\n\n2019-07-09  Dragan Mladjenovic  <dmladjenovic@wavecomp.com>\n\n\t* gcc.target/mips/cfgcleanup-jalr1.c: New test.\n\t* gcc.target/mips/cfgcleanup-jalr2.c: New test.\n\t* gcc.target/mips/cfgcleanup-jalr3.c: New test.\n\nFrom-SVN: r273314", "tree": {"sha": "7d51eb38eeef454a5b3d8b681f3549ff818f684e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7d51eb38eeef454a5b3d8b681f3549ff818f684e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4b1a1d981869346f5b98f78fa1f31acb58535932", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b1a1d981869346f5b98f78fa1f31acb58535932", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b1a1d981869346f5b98f78fa1f31acb58535932", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b1a1d981869346f5b98f78fa1f31acb58535932/comments", "author": null, "committer": null, "parents": [{"sha": "4faba5c3bc37c0bfceec6b254d76c5d0b3e2fe8b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4faba5c3bc37c0bfceec6b254d76c5d0b3e2fe8b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4faba5c3bc37c0bfceec6b254d76c5d0b3e2fe8b"}], "stats": {"total": 85, "additions": 85, "deletions": 0}, "files": [{"sha": "71569bfa4d6003554c2a4b99015f731cacea6d41", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b1a1d981869346f5b98f78fa1f31acb58535932/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b1a1d981869346f5b98f78fa1f31acb58535932/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4b1a1d981869346f5b98f78fa1f31acb58535932", "patch": "@@ -1,3 +1,8 @@\n+2019-07-09  Dragan Mladjenovic  <dmladjenovic@wavecomp.com>\n+\n+\t* cfgcleanup.c (old_insns_match_p): Check if used hard regs set is equal\n+\tfor both call instructions.\n+\n 2019-07-09  John Darrington  <john@darrington.wattle.id.au>\n \n \t* simplify-rtx.c (simplify_unary_operation_1): Use GET_MODE_PRECISION"}, {"sha": "fca3a084d3759bd29854217d510946f3b3931124", "filename": "gcc/cfgcleanup.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b1a1d981869346f5b98f78fa1f31acb58535932/gcc%2Fcfgcleanup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b1a1d981869346f5b98f78fa1f31acb58535932/gcc%2Fcfgcleanup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgcleanup.c?ref=4b1a1d981869346f5b98f78fa1f31acb58535932", "patch": "@@ -53,6 +53,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"dce.h\"\n #include \"dbgcnt.h\"\n #include \"rtl-iter.h\"\n+#include \"regs.h\"\n \n #define FORWARDER_BLOCK_P(BB) ((BB)->flags & BB_FORWARDER_BLOCK)\n \n@@ -1224,6 +1225,14 @@ old_insns_match_p (int mode ATTRIBUTE_UNUSED, rtx_insn *i1, rtx_insn *i2)\n \t\t}\n \t    }\n \t}\n+\n+      HARD_REG_SET i1_used, i2_used;\n+\n+      get_call_reg_set_usage (i1, &i1_used, call_used_reg_set);\n+      get_call_reg_set_usage (i2, &i2_used, call_used_reg_set);\n+\n+      if (!hard_reg_set_equal_p (i1_used, i2_used))\n+        return dir_none;\n     }\n \n   /* If both i1 and i2 are frame related, verify all the CFA notes"}, {"sha": "bf7c992afb985058700df04f5d65eaa579522a54", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b1a1d981869346f5b98f78fa1f31acb58535932/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b1a1d981869346f5b98f78fa1f31acb58535932/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4b1a1d981869346f5b98f78fa1f31acb58535932", "patch": "@@ -1,3 +1,9 @@\n+2019-07-09  Dragan Mladjenovic  <dmladjenovic@wavecomp.com>\n+\n+\t* gcc.target/mips/cfgcleanup-jalr1.c: New test.\n+\t* gcc.target/mips/cfgcleanup-jalr2.c: New test.\n+\t* gcc.target/mips/cfgcleanup-jalr3.c: New test.\n+\n 2019-07-09  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/91114"}, {"sha": "24c18262b1a86098bad47b9961e2382319383fdf", "filename": "gcc/testsuite/gcc.target/mips/cfgcleanup-jalr1.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b1a1d981869346f5b98f78fa1f31acb58535932/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fcfgcleanup-jalr1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b1a1d981869346f5b98f78fa1f31acb58535932/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fcfgcleanup-jalr1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fcfgcleanup-jalr1.c?ref=4b1a1d981869346f5b98f78fa1f31acb58535932", "patch": "@@ -0,0 +1,19 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-mabicalls -fpic -mno-mips16 -mno-micromips\" } */\n+/* { dg-skip-if \"needs codesize optimization\" { *-*-* } { \"-O0\" \"-O1\" \"-O2\" \"-O3\" } { \"\" } } */\n+\n+extern void foo (void*);\n+\n+extern void bar (void*);\n+\n+void\n+test (void* p)\n+{\n+   if (!p)\n+\tfoo(p);\n+   else\n+\tbar(p);\n+}\n+\n+/* { dg-final { scan-assembler-not \"\\\\\\.reloc\\t1f,R_MIPS_JALR,foo\" } } */\n+/* { dg-final { scan-assembler-not \"\\\\\\.reloc\\t1f,R_MIPS_JALR,bar\" } } */"}, {"sha": "9fd75c98773a6ea8475f234e505dc2682455569a", "filename": "gcc/testsuite/gcc.target/mips/cfgcleanup-jalr2.c", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b1a1d981869346f5b98f78fa1f31acb58535932/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fcfgcleanup-jalr2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b1a1d981869346f5b98f78fa1f31acb58535932/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fcfgcleanup-jalr2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fcfgcleanup-jalr2.c?ref=4b1a1d981869346f5b98f78fa1f31acb58535932", "patch": "@@ -0,0 +1,23 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-mabicalls -fpic -mno-mips16 -mno-micromips\" } */\n+/* { dg-additional-options \"-fno-inline -fipa-ra -mcompact-branches=never\" } */\n+/* { dg-skip-if \"needs codesize optimization\" { *-*-* } { \"-O0\" \"-O1\" \"-O2\" \"-O3\" } { \"\" } } */\n+\n+static int foo (void* p) { __asm__ (\"\"::\"r\"(p):\"$t0\"); return 0; }\n+\n+static int bar (void* p) { return 1; }\n+\n+int\n+test (void* p)\n+{\n+  int res = !p ? foo(p) : bar(p);\n+\n+  register int tmp __asm__(\"$t0\") = -1;\n+  __asm__ (\"\"::\"r\"(tmp));\n+\n+  return res;\n+}\n+\n+/* { dg-final { scan-assembler \"\\\\\\.reloc\\t1f,R_MIPS_JALR,foo\" } } */\n+/* { dg-final { scan-assembler \"\\\\\\.reloc\\t1f,R_MIPS_JALR,bar\" } } */\n+/* { dg-final { scan-assembler-not \"\\\\.set\\tnomacro\\n\\tjalr\\t\\\\\\$25\" } } */"}, {"sha": "580c6ec069dcb4742c3b7d18547eaedade6ce384", "filename": "gcc/testsuite/gcc.target/mips/cfgcleanup-jalr3.c", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b1a1d981869346f5b98f78fa1f31acb58535932/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fcfgcleanup-jalr3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b1a1d981869346f5b98f78fa1f31acb58535932/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fcfgcleanup-jalr3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fcfgcleanup-jalr3.c?ref=4b1a1d981869346f5b98f78fa1f31acb58535932", "patch": "@@ -0,0 +1,23 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-mabicalls -fpic -mno-mips16 -mno-micromips\" } */\n+/* { dg-additional-options \"-fno-inline -fipa-ra -mcompact-branches=never\" } */\n+/* { dg-skip-if \"needs codesize optimization\" { *-*-* } { \"-O0\" \"-O1\" \"-O2\" \"-O3\" } { \"\" } } */\n+\n+static int foo (void* p) { return 0; }\n+\n+static int bar (void* p) { return 1; }\n+\n+int\n+test (void* p)\n+{\n+  int res = !p ? foo(p) : bar(p);\n+\n+  register int tmp __asm__(\"$t0\") = -1;\n+  __asm__ (\"\"::\"r\"(tmp));\n+\n+  return res;\n+}\n+\n+/* { dg-final { scan-assembler-not \"\\\\\\.reloc\\t1f,R_MIPS_JALR,foo\" } } */\n+/* { dg-final { scan-assembler-not \"\\\\\\.reloc\\t1f,R_MIPS_JALR,bar\" } } */\n+/* { dg-final { scan-assembler \"\\\\.set\\tnomacro\\n\\tjalr\\t\\\\\\$25\" } } */"}]}