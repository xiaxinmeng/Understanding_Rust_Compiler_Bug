{"sha": "80c74722bc934e376b06fa2e59925cb134202266", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODBjNzQ3MjJiYzkzNGUzNzZiMDZmYTJlNTk5MjVjYjEzNDIwMjI2Ng==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2017-01-11T09:06:29Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2017-01-11T09:06:29Z"}, "message": "tree-vrp.c (evrp_dom_walker::before_dom_children): Also set range/nonnull info for PHI results.\n\n2017-01-11  Richard Biener  <rguenther@suse.de>\n\n\t* tree-vrp.c (evrp_dom_walker::before_dom_children): Also\n\tset range/nonnull info for PHI results.  Do not set it on\n\tstmts marked for removal.\n\n\t* gcc.dg/tree-ssa/pr61743-1.c: Adjust.\n\nFrom-SVN: r244305", "tree": {"sha": "3bdccc60769ba543734fa198aa5ebb8041cced1a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3bdccc60769ba543734fa198aa5ebb8041cced1a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/80c74722bc934e376b06fa2e59925cb134202266", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80c74722bc934e376b06fa2e59925cb134202266", "html_url": "https://github.com/Rust-GCC/gccrs/commit/80c74722bc934e376b06fa2e59925cb134202266", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80c74722bc934e376b06fa2e59925cb134202266/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4c4b47031d4bcbf116cbc3c479933adf14b2b4fe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c4b47031d4bcbf116cbc3c479933adf14b2b4fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c4b47031d4bcbf116cbc3c479933adf14b2b4fe"}], "stats": {"total": 62, "additions": 47, "deletions": 15}, "files": [{"sha": "caa26f8ea5562cb475b4401ec9e57599e85e0726", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80c74722bc934e376b06fa2e59925cb134202266/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80c74722bc934e376b06fa2e59925cb134202266/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=80c74722bc934e376b06fa2e59925cb134202266", "patch": "@@ -1,3 +1,9 @@\n+2017-01-11  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-vrp.c (evrp_dom_walker::before_dom_children): Also\n+\tset range/nonnull info for PHI results.  Do not set it on\n+\tstmts marked for removal.\n+\n 2017-01-10  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* expr.c (store_field): In the bitfield case, fetch the return value"}, {"sha": "f189a4484deed5a31ea51415e1b97e50e7c4ae22", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80c74722bc934e376b06fa2e59925cb134202266/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80c74722bc934e376b06fa2e59925cb134202266/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=80c74722bc934e376b06fa2e59925cb134202266", "patch": "@@ -1,3 +1,7 @@\n+2017-01-11  Richard Biener  <rguenther@suse.de>\n+\n+\t* gcc.dg/tree-ssa/pr61743-1.c: Adjust.\n+\n 2017-01-11  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/50199"}, {"sha": "a5c83cf8ecf4a92b89bb3c1420dc416a405b368f", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr61743-1.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80c74722bc934e376b06fa2e59925cb134202266/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr61743-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80c74722bc934e376b06fa2e59925cb134202266/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr61743-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr61743-1.c?ref=80c74722bc934e376b06fa2e59925cb134202266", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\r\n-/* { dg-options \"-O3 -funroll-loops -fno-tree-vectorize -fdump-tree-cunroll-details -fno-peel-loops\" } */\r\n+/* { dg-options \"-O3 -funroll-loops -fno-tree-vectorize -fdump-tree-cunroll-details -fdump-tree-cunrolli-details -fno-peel-loops\" } */\r\n \r\n #define N 8\r\n #define M 14\r\n@@ -48,5 +48,5 @@ int foo1 (e_u8 a[4][N], int b1, int b2, e_u8 b[M+1][4][N])\n   return 0;\r\n }\r\n \r\n-/* { dg-final { scan-tree-dump-times \"loop with 4 iterations completely unrolled\" 2 \"cunroll\" } } */\r\n-/* { dg-final { scan-tree-dump-times \"loop with 8 iterations completely unrolled\" 2 \"cunroll\" } } */\r\n+/* { dg-final { scan-tree-dump-times \"loop with 4 iterations completely unrolled\" 8 \"cunroll\" } } */\r\n+/* { dg-final { scan-tree-dump-times \"loop with 9 iterations completely unrolled\" 2 \"cunrolli\" } } */\r"}, {"sha": "4cfdd0ae6dea35d5ebe1561052211a5a2905576e", "filename": "gcc/tree-vrp.c", "status": "modified", "additions": 34, "deletions": 12, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80c74722bc934e376b06fa2e59925cb134202266/gcc%2Ftree-vrp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80c74722bc934e376b06fa2e59925cb134202266/gcc%2Ftree-vrp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vrp.c?ref=80c74722bc934e376b06fa2e59925cb134202266", "patch": "@@ -10862,7 +10862,29 @@ evrp_dom_walker::before_dom_children (basic_block bb)\n       /* Mark PHIs whose lhs we fully propagate for removal.  */\n       tree val = op_with_constant_singleton_value_range (lhs);\n       if (val && may_propagate_copy (lhs, val))\n-\tstmts_to_remove.safe_push (phi);\n+\t{\n+\t  stmts_to_remove.safe_push (phi);\n+\t  continue;\n+\t}\n+\n+      /* Set the SSA with the value range.  */\n+      if (INTEGRAL_TYPE_P (TREE_TYPE (lhs)))\n+\t{\n+\t  if ((vr_result.type == VR_RANGE\n+\t       || vr_result.type == VR_ANTI_RANGE)\n+\t      && (TREE_CODE (vr_result.min) == INTEGER_CST)\n+\t      && (TREE_CODE (vr_result.max) == INTEGER_CST))\n+\t    set_range_info (lhs,\n+\t\t\t    vr_result.type, vr_result.min, vr_result.max);\n+\t}\n+      else if (POINTER_TYPE_P (TREE_TYPE (lhs))\n+\t       && ((vr_result.type == VR_RANGE\n+\t\t    && range_includes_zero_p (vr_result.min,\n+\t\t\t\t\t      vr_result.max) == 0)\n+\t\t   || (vr_result.type == VR_ANTI_RANGE\n+\t\t       && range_includes_zero_p (vr_result.min,\n+\t\t\t\t\t\t vr_result.max) == 1)))\n+\tset_ptr_nonnull (lhs);\n     }\n \n   edge taken_edge = NULL;\n@@ -10908,6 +10930,17 @@ evrp_dom_walker::before_dom_children (basic_block bb)\n \t      update_value_range (output, &vr);\n \t      vr = *get_value_range (output);\n \n+\t      /* Mark stmts whose output we fully propagate for removal.  */\n+\t      tree val;\n+\t      if ((val = op_with_constant_singleton_value_range (output))\n+\t\t  && may_propagate_copy (output, val)\n+\t\t  && !stmt_could_throw_p (stmt)\n+\t\t  && !gimple_has_side_effects (stmt))\n+\t\t{\n+\t\t  stmts_to_remove.safe_push (stmt);\n+\t\t  continue;\n+\t\t}\n+\n \t      /* Set the SSA with the value range.  */\n \t      if (INTEGRAL_TYPE_P (TREE_TYPE (output)))\n \t\t{\n@@ -10925,17 +10958,6 @@ evrp_dom_walker::before_dom_children (basic_block bb)\n \t\t\t       && range_includes_zero_p (vr.min,\n \t\t\t\t\t\t\t vr.max) == 1)))\n \t\tset_ptr_nonnull (output);\n-\n-\t      /* Mark stmts whose output we fully propagate for removal.  */\n-\t      tree val;\n-\t      if ((val = op_with_constant_singleton_value_range (output))\n-\t\t  && may_propagate_copy (output, val)\n-\t\t  && !stmt_could_throw_p (stmt)\n-\t\t  && !gimple_has_side_effects (stmt))\n-\t\t{\n-\t\t  stmts_to_remove.safe_push (stmt);\n-\t\t  continue;\n-\t\t}\n \t    }\n \t  else\n \t    set_defs_to_varying (stmt);"}]}