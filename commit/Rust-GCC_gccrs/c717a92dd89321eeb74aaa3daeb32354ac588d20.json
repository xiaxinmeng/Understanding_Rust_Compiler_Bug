{"sha": "c717a92dd89321eeb74aaa3daeb32354ac588d20", "node_id": "C_kwDOANBUbNoAKGM3MTdhOTJkZDg5MzIxZWViNzRhYWEzZGFlYjMyMzU0YWM1ODhkMjA", "commit": {"author": {"name": "Philipp Tomsich", "email": "philipp.tomsich@vrull.eu", "date": "2020-12-16T23:44:11Z"}, "committer": {"name": "Philipp Tomsich", "email": "philipp.tomsich@vrull.eu", "date": "2022-11-15T22:11:31Z"}, "message": "RISC-V: Zihintpause: add __builtin_riscv_pause\n\nThe Zihintpause extension uses an opcode from the 'fence' opcode range\nto add a true hint instruction (i.e. if it is not supported on any\ngiven platform, the 'fence' that is encoded will not enforce any\nspecific ordering on memory accesses) for entering a low-power state\n(e.g. in an idle thread).  We expose this new instruction through a\nmachine-dependent builtin to allow generating it without a requirement\nfor any inline assembly.\n\nGiven that the encoding of 'pause' is valid (as a 'fence' encoding)\neven for processors that do not (yet) support Zihintpause, we make\nthis builtin available without any further TARGET_* constraints.\n\ngcc/ChangeLog:\n\n\t* config/riscv/riscv-builtins.cc (struct riscv_builtin_description):\n\tadd the pause machine-dependent builtin with no result and no\n\targuments; mark it as always present (pause is a true hint\n\tthat encodes into a fence-insn, if not supported with the new\n\tpause semantics).\n\t* config/riscv/riscv-ftypes.def: Add type for void -> void.\n\t* config/riscv/riscv.md (riscv_pause): Add risc_pause and\n\tUNSPECV_PAUSE\n\t* doc/extend.texi: Document __builtin_riscv_pause.\n\t* optabs.cc (maybe_gen_insn): Allow nops == 0 (void -> void).\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.target/riscv/builtin_pause.c: New test.", "tree": {"sha": "b33b929c7f02eef3c186d87c6180ac80fe67e581", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b33b929c7f02eef3c186d87c6180ac80fe67e581"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c717a92dd89321eeb74aaa3daeb32354ac588d20", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c717a92dd89321eeb74aaa3daeb32354ac588d20", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c717a92dd89321eeb74aaa3daeb32354ac588d20", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c717a92dd89321eeb74aaa3daeb32354ac588d20/comments", "author": {"login": "ptomsich", "id": 14983582, "node_id": "MDQ6VXNlcjE0OTgzNTgy", "avatar_url": "https://avatars.githubusercontent.com/u/14983582?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptomsich", "html_url": "https://github.com/ptomsich", "followers_url": "https://api.github.com/users/ptomsich/followers", "following_url": "https://api.github.com/users/ptomsich/following{/other_user}", "gists_url": "https://api.github.com/users/ptomsich/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptomsich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptomsich/subscriptions", "organizations_url": "https://api.github.com/users/ptomsich/orgs", "repos_url": "https://api.github.com/users/ptomsich/repos", "events_url": "https://api.github.com/users/ptomsich/events{/privacy}", "received_events_url": "https://api.github.com/users/ptomsich/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ptomsich", "id": 14983582, "node_id": "MDQ6VXNlcjE0OTgzNTgy", "avatar_url": "https://avatars.githubusercontent.com/u/14983582?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptomsich", "html_url": "https://github.com/ptomsich", "followers_url": "https://api.github.com/users/ptomsich/followers", "following_url": "https://api.github.com/users/ptomsich/following{/other_user}", "gists_url": "https://api.github.com/users/ptomsich/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptomsich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptomsich/subscriptions", "organizations_url": "https://api.github.com/users/ptomsich/orgs", "repos_url": "https://api.github.com/users/ptomsich/repos", "events_url": "https://api.github.com/users/ptomsich/events{/privacy}", "received_events_url": "https://api.github.com/users/ptomsich/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6052482f841634522c6d2e56c4231f8df2dc6d3e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6052482f841634522c6d2e56c4231f8df2dc6d3e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6052482f841634522c6d2e56c4231f8df2dc6d3e"}], "stats": {"total": 31, "additions": 28, "deletions": 3}, "files": [{"sha": "24ae22c99cd4e6c49dd687cb58f628b80e3f7a67", "filename": "gcc/config/riscv/riscv-builtins.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c717a92dd89321eeb74aaa3daeb32354ac588d20/gcc%2Fconfig%2Friscv%2Friscv-builtins.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c717a92dd89321eeb74aaa3daeb32354ac588d20/gcc%2Fconfig%2Friscv%2Friscv-builtins.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Friscv-builtins.cc?ref=c717a92dd89321eeb74aaa3daeb32354ac588d20", "patch": "@@ -88,8 +88,6 @@ struct riscv_builtin_description {\n };\n \n AVAIL (hard_float, TARGET_HARD_FLOAT || TARGET_ZFINX)\n-\n-\n AVAIL (clean32, TARGET_ZICBOM && !TARGET_64BIT)\n AVAIL (clean64, TARGET_ZICBOM && TARGET_64BIT)\n AVAIL (flush32, TARGET_ZICBOM && !TARGET_64BIT)\n@@ -100,6 +98,7 @@ AVAIL (zero32,  TARGET_ZICBOZ && !TARGET_64BIT)\n AVAIL (zero64,  TARGET_ZICBOZ && TARGET_64BIT)\n AVAIL (prefetchi32, TARGET_ZICBOP && !TARGET_64BIT)\n AVAIL (prefetchi64, TARGET_ZICBOP && TARGET_64BIT)\n+AVAIL (always,     (!0))\n \n /* Construct a riscv_builtin_description from the given arguments.\n \n@@ -148,7 +147,8 @@ static const struct riscv_builtin_description riscv_builtins[] = {\n   #include \"riscv-cmo.def\"\n \n   DIRECT_BUILTIN (frflags, RISCV_USI_FTYPE, hard_float),\n-  DIRECT_NO_TARGET_BUILTIN (fsflags, RISCV_VOID_FTYPE_USI, hard_float)\n+  DIRECT_NO_TARGET_BUILTIN (fsflags, RISCV_VOID_FTYPE_USI, hard_float),\n+  DIRECT_NO_TARGET_BUILTIN (pause, RISCV_VOID_FTYPE, always),\n };\n \n /* Index I is the function declaration for riscv_builtins[I], or null if the"}, {"sha": "bf2d30782d9ec626cf3a8a7974b0a6ccccdca76f", "filename": "gcc/config/riscv/riscv-ftypes.def", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c717a92dd89321eeb74aaa3daeb32354ac588d20/gcc%2Fconfig%2Friscv%2Friscv-ftypes.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c717a92dd89321eeb74aaa3daeb32354ac588d20/gcc%2Fconfig%2Friscv%2Friscv-ftypes.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Friscv-ftypes.def?ref=c717a92dd89321eeb74aaa3daeb32354ac588d20", "patch": "@@ -27,6 +27,7 @@ along with GCC; see the file COPYING3.  If not see\n         argument type.  */\n \n DEF_RISCV_FTYPE (0, (USI))\n+DEF_RISCV_FTYPE (0, (VOID))\n DEF_RISCV_FTYPE (1, (VOID, USI))\n DEF_RISCV_FTYPE (1, (VOID, VOID_PTR))\n DEF_RISCV_FTYPE (1, (SI, SI))"}, {"sha": "0469882c80d2e5cc31f1bc30cecf7060edeaded2", "filename": "gcc/config/riscv/riscv.md", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c717a92dd89321eeb74aaa3daeb32354ac588d20/gcc%2Fconfig%2Friscv%2Friscv.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c717a92dd89321eeb74aaa3daeb32354ac588d20/gcc%2Fconfig%2Friscv%2Friscv.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Friscv.md?ref=c717a92dd89321eeb74aaa3daeb32354ac588d20", "patch": "@@ -97,6 +97,9 @@\n   UNSPECV_INVAL\n   UNSPECV_ZERO\n   UNSPECV_PREI\n+\n+  ;; Zihintpause unspec\n+  UNSPECV_PAUSE\n ])\n \n (define_constants\n@@ -1913,6 +1916,11 @@\n   \"TARGET_ZIFENCEI\"\n   \"fence.i\")\n \n+(define_insn \"riscv_pause\"\n+  [(unspec_volatile [(const_int 0)] UNSPECV_PAUSE)]\n+  \"\"\n+  \"pause\")\n+\n ;;\n ;;  ....................\n ;;"}, {"sha": "b1dd39e64b8489bfe0bd97b77c8aced0ed7b7301", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c717a92dd89321eeb74aaa3daeb32354ac588d20/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c717a92dd89321eeb74aaa3daeb32354ac588d20/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=c717a92dd89321eeb74aaa3daeb32354ac588d20", "patch": "@@ -21102,6 +21102,10 @@ processors.\n Returns the value that is currently set in the @samp{tp} register.\n @end deftypefn\n \n+@deftypefn {Built-in Function}  void __builtin_riscv_pause (void)\n+Generates the @code{pause} (hint) machine instruction.\n+@end deftypefn\n+\n @node RX Built-in Functions\n @subsection RX Built-in Functions\n GCC supports some of the RX instructions which cannot be expressed in"}, {"sha": "bbe3bd79ca105750af63d05058b61484ee653ccf", "filename": "gcc/optabs.cc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c717a92dd89321eeb74aaa3daeb32354ac588d20/gcc%2Foptabs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c717a92dd89321eeb74aaa3daeb32354ac588d20/gcc%2Foptabs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptabs.cc?ref=c717a92dd89321eeb74aaa3daeb32354ac588d20", "patch": "@@ -7962,6 +7962,8 @@ maybe_gen_insn (enum insn_code icode, unsigned int nops,\n \n   switch (nops)\n     {\n+    case 0:\n+      return GEN_FCN (icode) ();\n     case 1:\n       return GEN_FCN (icode) (ops[0].value);\n     case 2:"}, {"sha": "9250937cabb9c6514e6e1d93ab478d00fd2dffbd", "filename": "gcc/testsuite/gcc.target/riscv/builtin_pause.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c717a92dd89321eeb74aaa3daeb32354ac588d20/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Fbuiltin_pause.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c717a92dd89321eeb74aaa3daeb32354ac588d20/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Fbuiltin_pause.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Fbuiltin_pause.c?ref=c717a92dd89321eeb74aaa3daeb32354ac588d20", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" }  */\n+\n+void test_pause()\n+{\n+  __builtin_riscv_pause ();\n+}\n+\n+/* { dg-final { scan-assembler \"pause\" } } */\n+"}]}