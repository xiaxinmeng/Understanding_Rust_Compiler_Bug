{"sha": "55ebe5ab1411369f3043dd817fccddd9606eb6c7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTVlYmU1YWIxNDExMzY5ZjMwNDNkZDgxN2ZjY2RkZDk2MDZlYjZjNw==", "commit": {"author": {"name": "Greta Yorsh", "email": "greta.yorsh@arm.com", "date": "2012-12-17T15:49:24Z"}, "committer": {"name": "Greta Yorsh", "email": "gretay@gcc.gnu.org", "date": "2012-12-17T15:49:24Z"}, "message": "arm.md (type): Add \"simple_alu_shift\" to attribute \"type\".\n\ngcc/\n\n2012-12-17  Greta Yorsh  <Greta.Yorsh@arm.com>\n\n        * config/arm/arm.md (type): Add \"simple_alu_shift\" to attribute \"type\".\n        (core_cycles): Update for simple_alu_shift.\n        (thumb1_zero_extendhisi2,arm_zero_extendhisi2_v6): Use simple_alu_shift\n        instead of a CPU-speicific condition for \"type\" attribute.\n        (thumb1_zero_extendqisi2_v6,arm_zero_extendqisi2_v6): Likewise.\n        (thumb1_extendhisi2,arm_extendhisi2_v6,arm_extendqisi_v6): Likewise.\n        (thumb1_extendqisi2): Likewise.\n        * config/arm/thumb2.md (thumb2_extendqisi_v6): Likewise.\n        (thumb2_zero_extendhisi2_v6,thumb2_zero_extendqisi2_v6) Likewise.\n        * config/arm/arm1020e.md (alu_shift_op): Use simple_alu_shift.\n        * config/arm/arm1026ejs.md (alu_shift_op): Likewise.\n        * config/arm/arm1136jfs.md (11_alu_shift_op): Likewise.\n        * config/arm/arm926ejs.md (9_alu_op): Likewise.\n        * config/arm/cortex-a15.md (cortex_a15_alu_shift): Likewise.\n        * config/arm/cortex-a5.md (cortex_a5_alu_shift): Likewise.\n        * config/arm/cortex-a8.md (cortex_a8_alu_shift,cortex_a8_mov): Likewise.\n        * config/arm/cortex-a9.md (cortex_a9_dp,cortex_a9_dp_shift): Likewise.\n        * config/arm/cortex-m4.md (cortex_m4_alu): Likewise.\n        * config/arm/cortex-r4.md (cortex_r4_alu_shift): Likewise.\n        * config/arm/fa526.md (526_alu_shift_op): Likewise.\n        * config/arm/fa606te.md (fa606te_core): Likewise.\n        * config/arm/fa626te.md (626te_alu_shift_op): Likewise.\n        * config/arm/fa726te.md (726te_alu_shift_op): Likewise.\n        * config/arm/fmp626.md (mp626_alu_shift_op): Likewise.\n\nFrom-SVN: r194557", "tree": {"sha": "f948cf39410a15e35f0218d5f93e8da1c477d9c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f948cf39410a15e35f0218d5f93e8da1c477d9c1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/55ebe5ab1411369f3043dd817fccddd9606eb6c7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55ebe5ab1411369f3043dd817fccddd9606eb6c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/55ebe5ab1411369f3043dd817fccddd9606eb6c7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55ebe5ab1411369f3043dd817fccddd9606eb6c7/comments", "author": null, "committer": null, "parents": [{"sha": "e9b16cc90b82acf235adf07ee7d9f1f920268b88", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9b16cc90b82acf235adf07ee7d9f1f920268b88", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e9b16cc90b82acf235adf07ee7d9f1f920268b88"}], "stats": {"total": 134, "additions": 60, "deletions": 74}, "files": [{"sha": "3c0f6c471587f9f45863f5ae0afd8225cf007d50", "filename": "gcc/ChangeLog", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55ebe5ab1411369f3043dd817fccddd9606eb6c7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55ebe5ab1411369f3043dd817fccddd9606eb6c7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=55ebe5ab1411369f3043dd817fccddd9606eb6c7", "patch": "@@ -1,3 +1,30 @@\n+2012-12-17  Greta Yorsh  <Greta.Yorsh@arm.com>\n+\n+        * config/arm/arm.md (type): Add \"simple_alu_shift\" to attribute \"type\".\n+        (core_cycles): Update for simple_alu_shift.\n+        (thumb1_zero_extendhisi2,arm_zero_extendhisi2_v6): Use simple_alu_shift\n+        instead of a CPU-speicific condition for \"type\" attribute.\n+        (thumb1_zero_extendqisi2_v6,arm_zero_extendqisi2_v6): Likewise.\n+        (thumb1_extendhisi2,arm_extendhisi2_v6,arm_extendqisi_v6): Likewise.\n+        (thumb1_extendqisi2): Likewise.\n+        * config/arm/thumb2.md (thumb2_extendqisi_v6): Likewise.\n+        (thumb2_zero_extendhisi2_v6,thumb2_zero_extendqisi2_v6) Likewise.\n+        * config/arm/arm1020e.md (alu_shift_op): Use simple_alu_shift.\n+        * config/arm/arm1026ejs.md (alu_shift_op): Likewise.\n+        * config/arm/arm1136jfs.md (11_alu_shift_op): Likewise.\n+        * config/arm/arm926ejs.md (9_alu_op): Likewise.\n+        * config/arm/cortex-a15.md (cortex_a15_alu_shift): Likewise.\n+        * config/arm/cortex-a5.md (cortex_a5_alu_shift): Likewise.\n+        * config/arm/cortex-a8.md (cortex_a8_alu_shift,cortex_a8_mov): Likewise.\n+        * config/arm/cortex-a9.md (cortex_a9_dp,cortex_a9_dp_shift): Likewise.\n+        * config/arm/cortex-m4.md (cortex_m4_alu): Likewise.\n+        * config/arm/cortex-r4.md (cortex_r4_alu_shift): Likewise.\n+        * config/arm/fa526.md (526_alu_shift_op): Likewise.\n+        * config/arm/fa606te.md (fa606te_core): Likewise.\n+        * config/arm/fa626te.md (626te_alu_shift_op): Likewise.\n+        * config/arm/fa726te.md (726te_alu_shift_op): Likewise.\n+        * config/arm/fmp626.md (mp626_alu_shift_op): Likewise.\n+\n 2012-12-17  Richard Biener  <rguenther@suse.de>\n \n \tPR middle-end/54781"}, {"sha": "649e9012004f20f6fbb260208792ed1d48fbef5c", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 13, "deletions": 42, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55ebe5ab1411369f3043dd817fccddd9606eb6c7/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55ebe5ab1411369f3043dd817fccddd9606eb6c7/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=55ebe5ab1411369f3043dd817fccddd9606eb6c7", "patch": "@@ -240,6 +240,7 @@\n ;               regs or have a shifted source operand\n ;               and does not have an immediate operand. This is\n ;               also the default\n+; simple_alu_shift covers UXTH, UXTB, SXTH, SXTB\n ; alu_shift\tany data instruction that doesn't hit memory or fp\n ;\t\tregs, but has a source operand shifted by a constant\n ; alu_shift_reg\tany data instruction that doesn't hit memory or fp\n@@ -271,6 +272,7 @@\n (define_attr \"type\"\n  \"simple_alu_imm,\\\n   alu_reg,\\\n+  simple_alu_shift,\\\n   alu_shift,\\\n   alu_shift_reg,\\\n   mult,\\\n@@ -454,7 +456,9 @@\n ; than one on the main cpu execution unit.\n (define_attr \"core_cycles\" \"single,multi\"\n   (if_then_else (eq_attr \"type\"\n-\t\t \"simple_alu_imm,alu_reg,alu_shift,float,fdivd,fdivs\")\n+\t\t \"simple_alu_imm,alu_reg,\\\n+                  simple_alu_shift,alu_shift,\\\n+                  float,fdivd,fdivs\")\n \t\t(const_string \"single\")\n \t        (const_string \"multi\")))\n \n@@ -4629,11 +4633,7 @@\n \t\t\t [(if_then_else (eq_attr \"is_arch6\" \"yes\")\n \t\t\t\t       (const_int 2) (const_int 4))\n \t\t\t (const_int 4)])\n-   (set_attr_alternative \"type\"\n-                         [(if_then_else (eq_attr \"tune\" \"cortexa7\")\n-                                        (const_string \"simple_alu_imm\")\n-                                        (const_string \"alu_shift\"))\n-                          (const_string \"load_byte\")])]\n+   (set_attr \"type\" \"simple_alu_shift, load_byte\")]\n )\n \n (define_insn \"*arm_zero_extendhisi2\"\n@@ -4655,11 +4655,7 @@\n    uxth%?\\\\t%0, %1\n    ldr%(h%)\\\\t%0, %1\"\n   [(set_attr \"predicable\" \"yes\")\n-   (set_attr_alternative \"type\"\n-                         [(if_then_else (eq_attr \"tune\" \"cortexa7\")\n-                                        (const_string \"simple_alu_imm\")\n-                                        (const_string \"alu_shift\"))\n-                          (const_string \"load_byte\")])]\n+   (set_attr \"type\" \"simple_alu_shift,load_byte\")]\n )\n \n (define_insn \"*arm_zero_extendhisi2addsi\"\n@@ -4729,11 +4725,7 @@\n    uxtb\\\\t%0, %1\n    ldrb\\\\t%0, %1\"\n   [(set_attr \"length\" \"2\")\n-   (set_attr_alternative \"type\"\n-                         [(if_then_else (eq_attr \"tune\" \"cortexa7\")\n-                                        (const_string \"simple_alu_imm\")\n-                                        (const_string \"alu_shift\"))\n-                          (const_string \"load_byte\")])]\n+   (set_attr \"type\" \"simple_alu_shift,load_byte\")]\n )\n \n (define_insn \"*arm_zero_extendqisi2\"\n@@ -4755,11 +4747,7 @@\n   \"@\n    uxtb%(%)\\\\t%0, %1\n    ldr%(b%)\\\\t%0, %1\\\\t%@ zero_extendqisi2\"\n-  [(set_attr_alternative \"type\"\n-                         [(if_then_else (eq_attr \"tune\" \"cortexa7\")\n-                                        (const_string \"simple_alu_imm\")\n-                                        (const_string \"alu_shift\"))\n-                          (const_string \"load_byte\")])\n+  [(set_attr \"type\" \"simple_alu_shift,load_byte\")\n    (set_attr \"predicable\" \"yes\")]\n )\n \n@@ -4933,11 +4921,7 @@\n \t\t\t [(if_then_else (eq_attr \"is_arch6\" \"yes\")\n \t\t\t\t\t(const_int 2) (const_int 4))\n \t\t\t  (const_int 4)])\n-   (set_attr_alternative \"type\"\n-                         [(if_then_else (eq_attr \"tune\" \"cortexa7\")\n-                                        (const_string \"simple_alu_imm\")\n-                                        (const_string \"alu_shift\"))\n-                          (const_string \"load_byte\")])\n+   (set_attr \"type\" \"simple_alu_shift,load_byte\")\n    (set_attr \"pool_range\" \"*,1018\")]\n )\n \n@@ -5010,11 +4994,7 @@\n   \"@\n    sxth%?\\\\t%0, %1\n    ldr%(sh%)\\\\t%0, %1\"\n-  [(set_attr_alternative \"type\"\n-                         [(if_then_else (eq_attr \"tune\" \"cortexa7\")\n-                                        (const_string \"simple_alu_imm\")\n-                                        (const_string \"alu_shift\"))\n-                          (const_string \"load_byte\")])\n+  [(set_attr \"type\" \"simple_alu_shift,load_byte\")\n    (set_attr \"predicable\" \"yes\")\n    (set_attr \"pool_range\" \"*,256\")\n    (set_attr \"neg_pool_range\" \"*,244\")]\n@@ -5114,11 +5094,7 @@\n   \"@\n    sxtb%?\\\\t%0, %1\n    ldr%(sb%)\\\\t%0, %1\"\n-  [(set_attr_alternative \"type\"\n-                         [(if_then_else (eq_attr \"tune\" \"cortexa7\")\n-                                        (const_string \"simple_alu_imm\")\n-                                        (const_string \"alu_shift\"))\n-                          (const_string \"load_byte\")])\n+  [(set_attr \"type\" \"simple_alu_shift,load_byte\")\n    (set_attr \"predicable\" \"yes\")\n    (set_attr \"pool_range\" \"*,256\")\n    (set_attr \"neg_pool_range\" \"*,244\")]\n@@ -5231,12 +5207,7 @@\n \t\t\t  (const_int 2)\n \t\t\t  (if_then_else (eq_attr \"is_arch6\" \"yes\")\n \t\t\t\t\t(const_int 4) (const_int 6))])\n-   (set_attr_alternative \"type\"\n-                         [(if_then_else (eq_attr \"tune\" \"cortexa7\")\n-                                        (const_string \"simple_alu_imm\")\n-                                        (const_string \"alu_shift\"))\n-                          (const_string \"load_byte\")\n-                          (const_string \"load_byte\")])]\n+   (set_attr \"type\" \"simple_alu_shift,load_byte,load_byte\")]\n )\n \n (define_expand \"extendsfdf2\""}, {"sha": "9a41d30573605d845385e79966737f44ee61e168", "filename": "gcc/config/arm/arm1020e.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55ebe5ab1411369f3043dd817fccddd9606eb6c7/gcc%2Fconfig%2Farm%2Farm1020e.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55ebe5ab1411369f3043dd817fccddd9606eb6c7/gcc%2Fconfig%2Farm%2Farm1020e.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm1020e.md?ref=55ebe5ab1411369f3043dd817fccddd9606eb6c7", "patch": "@@ -72,7 +72,7 @@\n ;; ALU operations with a shift-by-constant operand\n (define_insn_reservation \"1020alu_shift_op\" 1 \n  (and (eq_attr \"tune\" \"arm1020e,arm1022e\")\n-      (eq_attr \"type\" \"alu_shift\"))\n+      (eq_attr \"type\" \"simple_alu_shift,alu_shift\"))\n  \"1020a_e,1020a_m,1020a_w\")\n \n ;; ALU operations with a shift-by-register operand"}, {"sha": "52f6241d7ddbcafc4b80dad29cce9133dca851c6", "filename": "gcc/config/arm/arm1026ejs.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55ebe5ab1411369f3043dd817fccddd9606eb6c7/gcc%2Fconfig%2Farm%2Farm1026ejs.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55ebe5ab1411369f3043dd817fccddd9606eb6c7/gcc%2Fconfig%2Farm%2Farm1026ejs.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm1026ejs.md?ref=55ebe5ab1411369f3043dd817fccddd9606eb6c7", "patch": "@@ -72,7 +72,7 @@\n ;; ALU operations with a shift-by-constant operand\n (define_insn_reservation \"alu_shift_op\" 1 \n  (and (eq_attr \"tune\" \"arm1026ejs\")\n-      (eq_attr \"type\" \"alu_shift\"))\n+      (eq_attr \"type\" \"simple_alu_shift,alu_shift\"))\n  \"a_e,a_m,a_w\")\n \n ;; ALU operations with a shift-by-register operand"}, {"sha": "9e885586072dc385169116d190e6fe40df2f037a", "filename": "gcc/config/arm/arm1136jfs.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55ebe5ab1411369f3043dd817fccddd9606eb6c7/gcc%2Fconfig%2Farm%2Farm1136jfs.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55ebe5ab1411369f3043dd817fccddd9606eb6c7/gcc%2Fconfig%2Farm%2Farm1136jfs.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm1136jfs.md?ref=55ebe5ab1411369f3043dd817fccddd9606eb6c7", "patch": "@@ -81,7 +81,7 @@\n ;; ALU operations with a shift-by-constant operand\n (define_insn_reservation \"11_alu_shift_op\" 2\n  (and (eq_attr \"tune\" \"arm1136js,arm1136jfs\")\n-      (eq_attr \"type\" \"alu_shift\"))\n+      (eq_attr \"type\" \"simple_alu_shift,alu_shift\"))\n  \"e_1,e_2,e_3,e_wb\")\n \n ;; ALU operations with a shift-by-register operand"}, {"sha": "4c94e3337ab7ee7c5657408ab606c0fd41b162d0", "filename": "gcc/config/arm/arm926ejs.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55ebe5ab1411369f3043dd817fccddd9606eb6c7/gcc%2Fconfig%2Farm%2Farm926ejs.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55ebe5ab1411369f3043dd817fccddd9606eb6c7/gcc%2Fconfig%2Farm%2Farm926ejs.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm926ejs.md?ref=55ebe5ab1411369f3043dd817fccddd9606eb6c7", "patch": "@@ -58,7 +58,7 @@\n ;; ALU operations with no shifted operand\n (define_insn_reservation \"9_alu_op\" 1 \n  (and (eq_attr \"tune\" \"arm926ejs\")\n-      (eq_attr \"type\" \"alu_reg,simple_alu_imm,alu_shift\"))\n+      (eq_attr \"type\" \"alu_reg,simple_alu_imm,simple_alu_shift,alu_shift\"))\n  \"e,m,w\")\n \n ;; ALU operations with a shift-by-register operand"}, {"sha": "33e53df2b55851d43a5c87545612d89432d0a7d0", "filename": "gcc/config/arm/cortex-a15.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55ebe5ab1411369f3043dd817fccddd9606eb6c7/gcc%2Fconfig%2Farm%2Fcortex-a15.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55ebe5ab1411369f3043dd817fccddd9606eb6c7/gcc%2Fconfig%2Farm%2Fcortex-a15.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fcortex-a15.md?ref=55ebe5ab1411369f3043dd817fccddd9606eb6c7", "patch": "@@ -68,7 +68,7 @@\n ;; ALU ops with immediate shift\n (define_insn_reservation \"cortex_a15_alu_shift\" 3\n   (and (eq_attr \"tune\" \"cortexa15\")\n-       (and (eq_attr \"type\" \"alu_shift\")\n+       (and (eq_attr \"type\" \"simple_alu_shift,alu_shift\")\n             (eq_attr \"neon_type\" \"none\")))\n   \"ca15_issue1,(ca15_sx1,ca15_sx1+ca15_sx1_shf,ca15_sx1_alu)\\\n \t       |(ca15_sx2,ca15_sx2+ca15_sx2_shf,ca15_sx2_alu)\")"}, {"sha": "2b5abe524a63a6c90fc3da1b255b163d44c1455b", "filename": "gcc/config/arm/cortex-a5.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55ebe5ab1411369f3043dd817fccddd9606eb6c7/gcc%2Fconfig%2Farm%2Fcortex-a5.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55ebe5ab1411369f3043dd817fccddd9606eb6c7/gcc%2Fconfig%2Farm%2Fcortex-a5.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fcortex-a5.md?ref=55ebe5ab1411369f3043dd817fccddd9606eb6c7", "patch": "@@ -63,7 +63,7 @@\n \n (define_insn_reservation \"cortex_a5_alu_shift\" 2\n   (and (eq_attr \"tune\" \"cortexa5\")\n-       (eq_attr \"type\" \"alu_shift,alu_shift_reg\"))\n+       (eq_attr \"type\" \"simple_alu_shift,alu_shift,alu_shift_reg\"))\n   \"cortex_a5_ex1\")\n \n ;; Forwarding path for unshifted operands."}, {"sha": "73c61b15d0ba43a93d0f7d39ab3fe3a798bc9ee8", "filename": "gcc/config/arm/cortex-a8.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55ebe5ab1411369f3043dd817fccddd9606eb6c7/gcc%2Fconfig%2Farm%2Fcortex-a8.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55ebe5ab1411369f3043dd817fccddd9606eb6c7/gcc%2Fconfig%2Farm%2Fcortex-a8.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fcortex-a8.md?ref=55ebe5ab1411369f3043dd817fccddd9606eb6c7", "patch": "@@ -93,7 +93,7 @@\n \n (define_insn_reservation \"cortex_a8_alu_shift\" 2\n   (and (eq_attr \"tune\" \"cortexa8\")\n-       (and (eq_attr \"type\" \"alu_shift\")\n+       (and (eq_attr \"type\" \"simple_alu_shift,alu_shift\")\n             (not (eq_attr \"insn\" \"mov,mvn\"))))\n   \"cortex_a8_default\")\n \n@@ -107,7 +107,7 @@\n \n (define_insn_reservation \"cortex_a8_mov\" 1\n   (and (eq_attr \"tune\" \"cortexa8\")\n-       (and (eq_attr \"type\" \"alu_reg,simple_alu_imm,alu_shift,alu_shift_reg\")\n+       (and (eq_attr \"type\" \"alu_reg,simple_alu_imm,simple_alu_shift,alu_shift,alu_shift_reg\")\n             (eq_attr \"insn\" \"mov,mvn\")))\n   \"cortex_a8_default\")\n "}, {"sha": "f1bd7cfa91a5875069fcdf14da230112eb28d32e", "filename": "gcc/config/arm/cortex-a9.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55ebe5ab1411369f3043dd817fccddd9606eb6c7/gcc%2Fconfig%2Farm%2Fcortex-a9.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55ebe5ab1411369f3043dd817fccddd9606eb6c7/gcc%2Fconfig%2Farm%2Fcortex-a9.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fcortex-a9.md?ref=55ebe5ab1411369f3043dd817fccddd9606eb6c7", "patch": "@@ -82,15 +82,15 @@ cortex_a9_p1_e2 + cortex_a9_p0_e1 + cortex_a9_p1_e1\")\n   (and (eq_attr \"tune\" \"cortexa9\")\n          (ior (and (eq_attr \"type\" \"alu_reg,simple_alu_imm\")\n                         (eq_attr \"neon_type\" \"none\"))\n-\t      (and (and (eq_attr \"type\" \"alu_shift_reg, alu_shift\")\n+\t      (and (and (eq_attr \"type\" \"alu_shift_reg, simple_alu_shift,alu_shift\")\n \t\t\t(eq_attr \"insn\" \"mov\"))\n                  (eq_attr \"neon_type\" \"none\"))))\n   \"cortex_a9_p0_default|cortex_a9_p1_default\")\n \n ;; An instruction using the shifter will go down E1.\n (define_insn_reservation \"cortex_a9_dp_shift\" 3\n    (and (eq_attr \"tune\" \"cortexa9\")\n-\t(and (eq_attr \"type\" \"alu_shift_reg, alu_shift\")\n+\t(and (eq_attr \"type\" \"alu_shift_reg, simple_alu_shift,alu_shift\")\n \t     (not (eq_attr \"insn\" \"mov\"))))\n    \"cortex_a9_p0_shift | cortex_a9_p1_shift\")\n "}, {"sha": "063fe5fabdd70d9c5b856d31dee14c4d3bf6ae92", "filename": "gcc/config/arm/cortex-m4.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55ebe5ab1411369f3043dd817fccddd9606eb6c7/gcc%2Fconfig%2Farm%2Fcortex-m4.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55ebe5ab1411369f3043dd817fccddd9606eb6c7/gcc%2Fconfig%2Farm%2Fcortex-m4.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fcortex-m4.md?ref=55ebe5ab1411369f3043dd817fccddd9606eb6c7", "patch": "@@ -31,7 +31,7 @@\n ;; ALU and multiply is one cycle.\n (define_insn_reservation \"cortex_m4_alu\" 1\n   (and (eq_attr \"tune\" \"cortexm4\")\n-       (eq_attr \"type\" \"alu_reg,simple_alu_imm,alu_shift,alu_shift_reg,mult\"))\n+       (eq_attr \"type\" \"alu_reg,simple_alu_imm,simple_alu_shift,alu_shift,alu_shift_reg,mult\"))\n   \"cortex_m4_ex\")\n \n ;; Byte, half-word and word load is two cycles."}, {"sha": "a870dc06f517dcfd27d837b01d13c2f82c6a9f49", "filename": "gcc/config/arm/cortex-r4.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55ebe5ab1411369f3043dd817fccddd9606eb6c7/gcc%2Fconfig%2Farm%2Fcortex-r4.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55ebe5ab1411369f3043dd817fccddd9606eb6c7/gcc%2Fconfig%2Farm%2Fcortex-r4.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fcortex-r4.md?ref=55ebe5ab1411369f3043dd817fccddd9606eb6c7", "patch": "@@ -90,7 +90,7 @@\n \n (define_insn_reservation \"cortex_r4_alu_shift\" 2\n   (and (eq_attr \"tune_cortexr4\" \"yes\")\n-       (eq_attr \"type\" \"alu_shift\"))\n+       (eq_attr \"type\" \"simple_alu_shift,alu_shift\"))\n   \"cortex_r4_alu\")\n \n (define_insn_reservation \"cortex_r4_alu_shift_reg\" 2"}, {"sha": "810852257532038dcc53b85a076b3208ee2dbe76", "filename": "gcc/config/arm/fa526.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55ebe5ab1411369f3043dd817fccddd9606eb6c7/gcc%2Fconfig%2Farm%2Ffa526.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55ebe5ab1411369f3043dd817fccddd9606eb6c7/gcc%2Fconfig%2Farm%2Ffa526.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ffa526.md?ref=55ebe5ab1411369f3043dd817fccddd9606eb6c7", "patch": "@@ -67,7 +67,7 @@\n \n (define_insn_reservation \"526_alu_shift_op\" 2\n  (and (eq_attr \"tune\" \"fa526\")\n-      (eq_attr \"type\" \"alu_shift,alu_shift_reg\"))\n+      (eq_attr \"type\" \"simple_alu_shift,alu_shift,alu_shift_reg\"))\n  \"fa526_core\")\n \n ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}, {"sha": "d995b1d96637b83df829a13ed670d7eb1275958d", "filename": "gcc/config/arm/fa606te.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55ebe5ab1411369f3043dd817fccddd9606eb6c7/gcc%2Fconfig%2Farm%2Ffa606te.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55ebe5ab1411369f3043dd817fccddd9606eb6c7/gcc%2Fconfig%2Farm%2Ffa606te.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ffa606te.md?ref=55ebe5ab1411369f3043dd817fccddd9606eb6c7", "patch": "@@ -62,7 +62,7 @@\n ;; ALU operations\n (define_insn_reservation \"606te_alu_op\" 1\n  (and (eq_attr \"tune\" \"fa606te\")\n-      (eq_attr \"type\" \"alu_reg,simple_alu_imm,alu_shift,alu_shift_reg\"))\n+      (eq_attr \"type\" \"alu_reg,simple_alu_imm,simple_alu_shift,alu_shift,alu_shift_reg\"))\n  \"fa606te_core\")\n \n ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}, {"sha": "6b01b06aaaf74e63057a26967c4f140445d959f6", "filename": "gcc/config/arm/fa626te.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55ebe5ab1411369f3043dd817fccddd9606eb6c7/gcc%2Fconfig%2Farm%2Ffa626te.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55ebe5ab1411369f3043dd817fccddd9606eb6c7/gcc%2Fconfig%2Farm%2Ffa626te.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ffa626te.md?ref=55ebe5ab1411369f3043dd817fccddd9606eb6c7", "patch": "@@ -73,7 +73,7 @@\n \n (define_insn_reservation \"626te_alu_shift_op\" 2\n  (and (eq_attr \"tune\" \"fa626,fa626te\")\n-      (eq_attr \"type\" \"alu_shift,alu_shift_reg\"))\n+      (eq_attr \"type\" \"simple_alu_shift,alu_shift,alu_shift_reg\"))\n  \"fa626te_core\")\n \n ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}, {"sha": "7c898ab3b171e33f03ca51b5840313efb99dd0fc", "filename": "gcc/config/arm/fa726te.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55ebe5ab1411369f3043dd817fccddd9606eb6c7/gcc%2Fconfig%2Farm%2Ffa726te.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55ebe5ab1411369f3043dd817fccddd9606eb6c7/gcc%2Fconfig%2Farm%2Ffa726te.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ffa726te.md?ref=55ebe5ab1411369f3043dd817fccddd9606eb6c7", "patch": "@@ -95,7 +95,7 @@\n ;; it takes 3 cycles.\n (define_insn_reservation \"726te_alu_shift_op\" 3\n  (and (eq_attr \"tune\" \"fa726te\")\n-      (and (eq_attr \"type\" \"alu_shift\")\n+      (and (eq_attr \"type\" \"simple_alu_shift,alu_shift\")\n            (not (eq_attr \"insn\" \"mov,mvn\"))))\n   \"fa726te_issue+(fa726te_alu0_pipe|fa726te_alu1_pipe)\")\n "}, {"sha": "f63b6bf54a2b713461ff33117c7378cc9b78ca0f", "filename": "gcc/config/arm/fmp626.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55ebe5ab1411369f3043dd817fccddd9606eb6c7/gcc%2Fconfig%2Farm%2Ffmp626.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55ebe5ab1411369f3043dd817fccddd9606eb6c7/gcc%2Fconfig%2Farm%2Ffmp626.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ffmp626.md?ref=55ebe5ab1411369f3043dd817fccddd9606eb6c7", "patch": "@@ -68,7 +68,7 @@\n \n (define_insn_reservation \"mp626_alu_shift_op\" 2\n  (and (eq_attr \"tune\" \"fmp626\")\n-      (eq_attr \"type\" \"alu_shift,alu_shift_reg\"))\n+      (eq_attr \"type\" \"simple_alu_shift,alu_shift,alu_shift_reg\"))\n  \"fmp626_core\")\n \n ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}, {"sha": "d4dd1b9364c302905ea6295b0618632258d71e85", "filename": "gcc/config/arm/thumb2.md", "status": "modified", "additions": 3, "deletions": 15, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55ebe5ab1411369f3043dd817fccddd9606eb6c7/gcc%2Fconfig%2Farm%2Fthumb2.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55ebe5ab1411369f3043dd817fccddd9606eb6c7/gcc%2Fconfig%2Farm%2Fthumb2.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fthumb2.md?ref=55ebe5ab1411369f3043dd817fccddd9606eb6c7", "patch": "@@ -570,11 +570,7 @@\n   \"@\n    sxtb%?\\\\t%0, %1\n    ldr%(sb%)\\\\t%0, %1\"\n-  [(set_attr_alternative \"type\"\n-                         [(if_then_else (eq_attr \"tune\" \"cortexa7\")\n-                                        (const_string \"simple_alu_imm\")\n-                                        (const_string \"alu_shift\"))\n-                          (const_string \"load_byte\")])\n+  [(set_attr \"type\" \"simple_alu_shift,load_byte\")\n    (set_attr \"predicable\" \"yes\")\n    (set_attr \"pool_range\" \"*,4094\")\n    (set_attr \"neg_pool_range\" \"*,250\")]\n@@ -587,11 +583,7 @@\n   \"@\n    uxth%?\\\\t%0, %1\n    ldr%(h%)\\\\t%0, %1\"\n-  [(set_attr_alternative \"type\"\n-                         [(if_then_else (eq_attr \"tune\" \"cortexa7\")\n-                                        (const_string \"simple_alu_imm\")\n-                                        (const_string \"alu_shift\"))\n-                          (const_string \"load_byte\")])\n+  [(set_attr \"type\" \"simple_alu_shift,load_byte\")\n    (set_attr \"predicable\" \"yes\")\n    (set_attr \"pool_range\" \"*,4094\")\n    (set_attr \"neg_pool_range\" \"*,250\")]\n@@ -604,11 +596,7 @@\n   \"@\n    uxtb%(%)\\\\t%0, %1\n    ldr%(b%)\\\\t%0, %1\\\\t%@ zero_extendqisi2\"\n-  [(set_attr_alternative \"type\"\n-                         [(if_then_else (eq_attr \"tune\" \"cortexa7\")\n-                                        (const_string \"simple_alu_imm\")\n-                                        (const_string \"alu_shift\"))\n-                          (const_string \"load_byte\")])\n+  [(set_attr \"type\" \"simple_alu_shift,load_byte\")\n    (set_attr \"predicable\" \"yes\")\n    (set_attr \"pool_range\" \"*,4094\")\n    (set_attr \"neg_pool_range\" \"*,250\")]"}]}