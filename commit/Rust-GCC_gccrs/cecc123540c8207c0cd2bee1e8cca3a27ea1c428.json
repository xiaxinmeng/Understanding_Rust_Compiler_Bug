{"sha": "cecc123540c8207c0cd2bee1e8cca3a27ea1c428", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2VjYzEyMzU0MGM4MjA3YzBjZDJiZWUxZThjY2EzYTI3ZWExYzQyOA==", "commit": {"author": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2007-01-24T01:56:55Z"}, "committer": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2007-01-24T01:56:55Z"}, "message": "[multiple changes]\n\n2007-01-23  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n\n\tPR fortran/30532\n\t* scanner.c (load_line): Remove check fot ctrl-z and don't gobble.\n\t\n2007-01-23  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/30481\n\t* match.c (gfc_match_namelist): Add check for assumed size character\n\tin namelist and provide error if found.\n\nFrom-SVN: r121099", "tree": {"sha": "1e85f3e6d1b83819622177f73b695b49d0252dcf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1e85f3e6d1b83819622177f73b695b49d0252dcf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cecc123540c8207c0cd2bee1e8cca3a27ea1c428", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cecc123540c8207c0cd2bee1e8cca3a27ea1c428", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cecc123540c8207c0cd2bee1e8cca3a27ea1c428", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cecc123540c8207c0cd2bee1e8cca3a27ea1c428/comments", "author": null, "committer": null, "parents": [{"sha": "d7df00e8fbf856e2089d6775548817445813cfa8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7df00e8fbf856e2089d6775548817445813cfa8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7df00e8fbf856e2089d6775548817445813cfa8"}], "stats": {"total": 27, "additions": 19, "deletions": 8}, "files": [{"sha": "2659bd427a455d209e8c2d67e221f75a8d252a9d", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cecc123540c8207c0cd2bee1e8cca3a27ea1c428/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cecc123540c8207c0cd2bee1e8cca3a27ea1c428/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=cecc123540c8207c0cd2bee1e8cca3a27ea1c428", "patch": "@@ -1,3 +1,14 @@\n+2007-01-23  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR fortran/30532\n+\t* scanner.c (load_line): Remove check fot ctrl-z and don't gobble.\n+\t\n+2007-01-23  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/30481\n+\t* match.c (gfc_match_namelist): Add check for assumed size character\n+\tin namelist and provide error if found.\n+\n 2007-01-21  Brooks Moses  <brooks.moses@codesourcery.com>\n \n \t* intrinsic.texi (ACHAR): Added cross-references."}, {"sha": "941e625c142e46ed9e940fa4a45afd2a5afd2702", "filename": "gcc/fortran/match.c", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cecc123540c8207c0cd2bee1e8cca3a27ea1c428/gcc%2Ffortran%2Fmatch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cecc123540c8207c0cd2bee1e8cca3a27ea1c428/gcc%2Ffortran%2Fmatch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fmatch.c?ref=cecc123540c8207c0cd2bee1e8cca3a27ea1c428", "patch": "@@ -2591,7 +2591,7 @@ gfc_match_namelist (void)\n \t      && gfc_add_in_namelist (&sym->attr, sym->name, NULL) == FAILURE)\n \t    goto error;\n \n-\t  /* Use gfc_error_check here, rather than goto error, so that this\n+\t  /* Use gfc_error_check here, rather than goto error, so that\n \t     these are the only errors for the next two lines.  */\n \t  if (sym->as && sym->as->type == AS_ASSUMED_SIZE)\n \t    {\n@@ -2600,6 +2600,13 @@ gfc_match_namelist (void)\n \t      gfc_error_check ();\n \t    }\n \n+\t  if (sym->ts.type == BT_CHARACTER && sym->ts.cl->length == NULL)\n+\t    {\n+\t      gfc_error (\"Assumed character length '%s' in namelist '%s' at \"\n+\t\t\t \"%C is not allowed\", sym->name, group_name->name);\n+\t      gfc_error_check ();\n+\t    }\n+\n \t  if (sym->as && sym->as->type == AS_ASSUMED_SHAPE\n \t      && gfc_notify_std (GFC_STD_GNU, \"Assumed shape array '%s' in \"\n \t\t\t\t \"namelist '%s' at %C is an extension.\","}, {"sha": "8667fbc67674665f4a457f4e08e6bc63dda6151a", "filename": "gcc/fortran/scanner.c", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cecc123540c8207c0cd2bee1e8cca3a27ea1c428/gcc%2Ffortran%2Fscanner.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cecc123540c8207c0cd2bee1e8cca3a27ea1c428/gcc%2Ffortran%2Fscanner.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fscanner.c?ref=cecc123540c8207c0cd2bee1e8cca3a27ea1c428", "patch": "@@ -1064,13 +1064,6 @@ load_line (FILE *input, char **pbuf, int *pbuflen)\n       if (c == '\\0')\n \tcontinue;\n \n-      if (c == '\\032')\n-\t{\n-\t  /* Ctrl-Z ends the file.  */\n-\t  while (fgetc (input) != EOF);\n-\t  break;\n-\t}\n-\n       /* Check for illegal use of ampersand. See F95 Standard 3.3.1.3.  */\n       if (c == '&')\n \tseen_ampersand = 1;"}]}