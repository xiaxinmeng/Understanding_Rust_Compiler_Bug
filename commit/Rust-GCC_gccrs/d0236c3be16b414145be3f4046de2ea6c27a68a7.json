{"sha": "d0236c3be16b414145be3f4046de2ea6c27a68a7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDAyMzZjM2JlMTZiNDE0MTQ1YmUzZjQwNDZkZTJlYTZjMjdhNjhhNw==", "commit": {"author": {"name": "Denis Nagorny", "email": "denis_nagorny@linux.intel.com", "date": "2006-02-17T00:03:06Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2006-02-17T00:03:06Z"}, "message": "re PR target/25603 (Miscompiled FORTRAN program)\n\n2006-02-16  Denis Nagorny <denis_nagorny@linux.intel.com>\n\n\tPR rtl-optimization/25603\n\t* reload.c (reg_inc_found_and_valid_p): New. Check REG_INC note.\n\t(regno_clobbered_p): Use it. Reusing SETS argument for REG_INC case.\n\t* reload1.c (choose_reload_regs): Added call of regno_clobbered_p \n\twith new meaning of SETS.\n\nFrom-SVN: r111162", "tree": {"sha": "21926960298be1c0dcf47707a036cdd3d30e8472", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/21926960298be1c0dcf47707a036cdd3d30e8472"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d0236c3be16b414145be3f4046de2ea6c27a68a7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0236c3be16b414145be3f4046de2ea6c27a68a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d0236c3be16b414145be3f4046de2ea6c27a68a7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0236c3be16b414145be3f4046de2ea6c27a68a7/comments", "author": null, "committer": null, "parents": [{"sha": "464aea985957cde55ba4c6a3781293441b89119f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/464aea985957cde55ba4c6a3781293441b89119f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/464aea985957cde55ba4c6a3781293441b89119f"}], "stats": {"total": 54, "additions": 49, "deletions": 5}, "files": [{"sha": "fc3e1c82810dd3a66830053dc62f3f4203d591f6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0236c3be16b414145be3f4046de2ea6c27a68a7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0236c3be16b414145be3f4046de2ea6c27a68a7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d0236c3be16b414145be3f4046de2ea6c27a68a7", "patch": "@@ -1,3 +1,11 @@\n+2006-02-16  Denis Nagorny <denis_nagorny@linux.intel.com>\n+\n+\tPR rtl-optimization/25603\n+\t* reload.c (reg_inc_found_and_valid_p): New. Check REG_INC note.\n+\t(regno_clobbered_p): Use it. Reusing SETS argument for REG_INC case.\n+\t* reload1.c (choose_reload_regs): Added call of regno_clobbered_p \n+\twith new meaning of SETS.\n+\n 2006-02-16  Joseph S. Myers  <joseph@codesourcery.com>\n \n \tPR target/20353"}, {"sha": "31d79ae8578c58bd34e2e0e46a0c1fed2d4f9b2c", "filename": "gcc/reload.c", "status": "modified", "additions": 40, "deletions": 4, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0236c3be16b414145be3f4046de2ea6c27a68a7/gcc%2Freload.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0236c3be16b414145be3f4046de2ea6c27a68a7/gcc%2Freload.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload.c?ref=d0236c3be16b414145be3f4046de2ea6c27a68a7", "patch": "@@ -6941,9 +6941,39 @@ find_inc_amount (rtx x, rtx inced)\n   return 0;\n }\n \f\n+/* Return 1 if registers from REGNO to ENDREGNO are the subjects of a\n+   REG_INC note in insn INSN.  REGNO must refer to a hard register.  */\n+\n+#ifdef AUTO_INC_DEC\n+static int \n+reg_inc_found_and_valid_p (unsigned int regno, unsigned int endregno,\n+\t\t\t   rtx insn)\n+{\n+  rtx link;\n+\n+  gcc_assert (insn);\n+\n+  if (! INSN_P (insn))\n+    return 0;\n+    \n+  for (link = REG_NOTES (insn); link; link = XEXP (link, 1))\n+    if (REG_NOTE_KIND (link) == REG_INC)\n+      {\n+\tunsigned int test = (int) REGNO (XEXP (link, 0));\n+\tif (test >= regno && test < endregno)\n+\t  return 1; \n+      }\n+  return 0;\n+}\n+#else\n+\n+#define reg_inc_found_and_valid_p(regno,endregno,insn) 0\n+\n+#endif \n+\n /* Return 1 if register REGNO is the subject of a clobber in insn INSN.\n-   If SETS is nonzero, also consider SETs.  REGNO must refer to a hard\n-   register.  */\n+   If SETS is 1, also consider SETs.  If SETS is 2, enable checking\n+   REG_INC.  REGNO must refer to a hard register.  */\n \n int\n regno_clobbered_p (unsigned int regno, rtx insn, enum machine_mode mode,\n@@ -6958,14 +6988,17 @@ regno_clobbered_p (unsigned int regno, rtx insn, enum machine_mode mode,\n   endregno = regno + nregs;\n \n   if ((GET_CODE (PATTERN (insn)) == CLOBBER\n-       || (sets && GET_CODE (PATTERN (insn)) == SET))\n+       || (sets == 1 && GET_CODE (PATTERN (insn)) == SET))\n       && REG_P (XEXP (PATTERN (insn), 0)))\n     {\n       unsigned int test = REGNO (XEXP (PATTERN (insn), 0));\n \n       return test >= regno && test < endregno;\n     }\n \n+  if (sets == 2 && reg_inc_found_and_valid_p (regno, endregno, insn))\n+    return 1; \n+  \n   if (GET_CODE (PATTERN (insn)) == PARALLEL)\n     {\n       int i = XVECLEN (PATTERN (insn), 0) - 1;\n@@ -6974,14 +7007,17 @@ regno_clobbered_p (unsigned int regno, rtx insn, enum machine_mode mode,\n \t{\n \t  rtx elt = XVECEXP (PATTERN (insn), 0, i);\n \t  if ((GET_CODE (elt) == CLOBBER\n-\t       || (sets && GET_CODE (PATTERN (insn)) == SET))\n+\t       || (sets == 1 && GET_CODE (PATTERN (insn)) == SET))\n \t      && REG_P (XEXP (elt, 0)))\n \t    {\n \t      unsigned int test = REGNO (XEXP (elt, 0));\n \n \t      if (test >= regno && test < endregno)\n \t\treturn 1;\n \t    }\n+\t  if (sets == 2\n+\t      && reg_inc_found_and_valid_p (regno, endregno, elt))\n+\t    return 1; \n \t}\n     }\n "}, {"sha": "9acf033f3fcbf6fb04c78f9cf9ca05958a06750f", "filename": "gcc/reload1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0236c3be16b414145be3f4046de2ea6c27a68a7/gcc%2Freload1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0236c3be16b414145be3f4046de2ea6c27a68a7/gcc%2Freload1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload1.c?ref=d0236c3be16b414145be3f4046de2ea6c27a68a7", "patch": "@@ -5780,7 +5780,7 @@ choose_reload_regs (struct insn_chain *chain)\n \n \t      if (equiv != 0)\n \t\t{\n-\t\t  if (regno_clobbered_p (regno, insn, rld[r].mode, 0))\n+\t\t  if (regno_clobbered_p (regno, insn, rld[r].mode, 2))\n \t\t    switch (rld[r].when_needed)\n \t\t      {\n \t\t      case RELOAD_FOR_OTHER_ADDRESS:"}]}