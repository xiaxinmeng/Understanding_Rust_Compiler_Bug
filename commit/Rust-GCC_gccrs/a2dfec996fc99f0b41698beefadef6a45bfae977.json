{"sha": "a2dfec996fc99f0b41698beefadef6a45bfae977", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTJkZmVjOTk2ZmM5OWYwYjQxNjk4YmVlZmFkZWY2YTQ1YmZhZTk3Nw==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1993-07-21T20:43:56Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1993-07-21T20:43:56Z"}, "message": "(link_command_spec): Move %{T*} after %{L*} and %D.\n\nFrom-SVN: r4951", "tree": {"sha": "3f92f175ac7364d0c913c6e567ba51a81e79e392", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3f92f175ac7364d0c913c6e567ba51a81e79e392"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a2dfec996fc99f0b41698beefadef6a45bfae977", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2dfec996fc99f0b41698beefadef6a45bfae977", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a2dfec996fc99f0b41698beefadef6a45bfae977", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2dfec996fc99f0b41698beefadef6a45bfae977/comments", "author": null, "committer": null, "parents": [{"sha": "dc4f75b473d74b7076d34918f676468504967321", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc4f75b473d74b7076d34918f676468504967321", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dc4f75b473d74b7076d34918f676468504967321"}], "stats": {"total": 15, "additions": 9, "deletions": 6}, "files": [{"sha": "437fcd053ed8131be7fad45201109188c40140bc", "filename": "gcc/gcc.c", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2dfec996fc99f0b41698beefadef6a45bfae977/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2dfec996fc99f0b41698beefadef6a45bfae977/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=a2dfec996fc99f0b41698beefadef6a45bfae977", "patch": "@@ -576,31 +576,34 @@ static int n_default_compilers\n /* -u* was put back because both BSD and SysV seem to support it.  */\n /* %{static:} simply prevents an error message if the target machine\n    doesn't handle -static.  */\n+/* We want %{T*} after %{L*} and %D so that it can be used to specify linker\n+   scripts which exist in user specified directories, or in standard\n+   directories.  */\n #ifdef LINK_LIBGCC_SPECIAL_1\n /* Have gcc do the search for libgcc.a, but generate -L options as usual.  */\n static char *link_command_spec = \"\\\n %{!fsyntax-only: \\\n  %{!c:%{!M:%{!MM:%{!E:%{!S:ld %l %X %{o*} %{A} %{d} %{e*} %{m} %{N} %{n} \\\n-\t\t\t%{r} %{s} %{T*} %{t} %{u*} %{x} %{z}\\\n+\t\t\t%{r} %{s} %{t} %{u*} %{x} %{z}\\\n \t\t\t%{!A:%{!nostartfiles:%{!nostdlib:%S}}} %{static:}\\\n-\t\t\t%{L*} %D %o %{!nostdlib:libgcc.a%s %L libgcc.a%s %{!A:%E}}\\n }}}}}}\";\n+\t\t\t%{L*} %D %{T*} %o %{!nostdlib:libgcc.a%s %L libgcc.a%s %{!A:%E}}\\n }}}}}}\";\n #else\n #ifdef LINK_LIBGCC_SPECIAL\n /* Have gcc do the search for libgcc.a, and don't generate -L options.  */\n static char *link_command_spec = \"\\\n %{!fsyntax-only: \\\n  %{!c:%{!M:%{!MM:%{!E:%{!S:ld %l %X %{o*} %{A} %{d} %{e*} %{m} %{N} %{n} \\\n-\t\t\t%{r} %{s} %{T*} %{t} %{u*} %{x} %{z}\\\n+\t\t\t%{r} %{s} %{t} %{u*} %{x} %{z}\\\n \t\t\t%{!A:%{!nostartfiles:%{!nostdlib:%S}}} %{static:}\\\n-\t\t\t%{L*} %o %{!nostdlib:libgcc.a%s %L libgcc.a%s %{!A:%E}}\\n }}}}}}\";\n+\t\t\t%{L*} %{T*} %o %{!nostdlib:libgcc.a%s %L libgcc.a%s %{!A:%E}}\\n }}}}}}\";\n #else\n /* Use -L and have the linker do the search for -lgcc.  */\n static char *link_command_spec = \"\\\n %{!fsyntax-only: \\\n  %{!c:%{!M:%{!MM:%{!E:%{!S:ld %l %X %{o*} %{A} %{d} %{e*} %{m} %{N} %{n} \\\n-\t\t\t%{r} %{s} %{T*} %{t} %{u*} %{x} %{z}\\\n+\t\t\t%{r} %{s} %{t} %{u*} %{x} %{z}\\\n \t\t\t%{!A:%{!nostartfiles:%{!nostdlib:%S}}} %{static:}\\\n-\t\t\t%{L*} %D %o %{!nostdlib:-lgcc %L -lgcc %{!A:%E}}\\n }}}}}}\";\n+\t\t\t%{L*} %D %{T*} %o %{!nostdlib:-lgcc %L -lgcc %{!A:%E}}\\n }}}}}}\";\n #endif\n #endif\n "}]}