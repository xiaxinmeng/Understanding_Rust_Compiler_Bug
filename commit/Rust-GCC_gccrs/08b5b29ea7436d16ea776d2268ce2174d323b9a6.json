{"sha": "08b5b29ea7436d16ea776d2268ce2174d323b9a6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDhiNWIyOWVhNzQzNmQxNmVhNzc2ZDIyNjhjZTIxNzRkMzIzYjlhNg==", "commit": {"author": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2015-06-06T18:33:06Z"}, "committer": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2015-06-06T18:33:06Z"}, "message": "re PR bootstrap/66319 (gcov-tool.c:84:65: error: invalid conversion from 'int (*)(const c har*, const stat*, int, FTW*)' to 'int (*)(const char*, const stat*, int, FTW)')\n\n\tPR bootstrap/66319\n\t* config/pa/pa-hpux10.h (TARGET_OS_CPP_BUILTINS): Rearrange builtin\n\tdefines.  Define _LARGEFILE_SOURCE and _LARGEFILE64_SOURCE for c++.\n\tDefine _XOPEN_UNIX and _XOPEN_SOURCE_EXTENDED for c++ if unix95 or\n\tlater.\n\t* config/pa/pa-hpux11.h (TARGET_OS_CPP_BUILTINS): Likewise.\n\tDefine _INCLUDE_STDC_SOURCE_PRE_199901, _INCLUDE_STDC_SOURCE_199901,\n\t_INCLUDE_XOPEN_SOURCE_PRE_500, _INCLUDE_XOPEN_SOURCE_520,\n\t_INCLUDE_XOPEN_SOURCE_PRE_600 and _INCLUDE_XOPEN_SOURCE_600 for c++\n\tand non iso if unix2003.\n\nFrom-SVN: r224192", "tree": {"sha": "acabbc963d6fe576ff1187745b43a52b58e9562c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/acabbc963d6fe576ff1187745b43a52b58e9562c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/08b5b29ea7436d16ea776d2268ce2174d323b9a6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08b5b29ea7436d16ea776d2268ce2174d323b9a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/08b5b29ea7436d16ea776d2268ce2174d323b9a6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08b5b29ea7436d16ea776d2268ce2174d323b9a6/comments", "author": null, "committer": null, "parents": [{"sha": "7dde99260b2cd1585cd95f9fd67a2d2d76ea93d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7dde99260b2cd1585cd95f9fd67a2d2d76ea93d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7dde99260b2cd1585cd95f9fd67a2d2d76ea93d3"}], "stats": {"total": 128, "additions": 90, "deletions": 38}, "files": [{"sha": "3c1b02aceb6ecf996d02fb60e8c2abddc66c7313", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08b5b29ea7436d16ea776d2268ce2174d323b9a6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08b5b29ea7436d16ea776d2268ce2174d323b9a6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=08b5b29ea7436d16ea776d2268ce2174d323b9a6", "patch": "@@ -1,3 +1,16 @@\n+2015-06-06  John David Anglin  <danglin@gcc.gnu.org>\n+\n+\tPR bootstrap/66319\n+\t* config/pa/pa-hpux10.h (TARGET_OS_CPP_BUILTINS): Rearrange builtin\n+\tdefines.  Define _LARGEFILE_SOURCE and _LARGEFILE64_SOURCE for c++.\n+\tDefine _XOPEN_UNIX and _XOPEN_SOURCE_EXTENDED for c++ if unix95 or\n+\tlater.\n+\t* config/pa/pa-hpux11.h (TARGET_OS_CPP_BUILTINS): Likewise.\n+\tDefine _INCLUDE_STDC_SOURCE_PRE_199901, _INCLUDE_STDC_SOURCE_199901,\n+\t_INCLUDE_XOPEN_SOURCE_PRE_500, _INCLUDE_XOPEN_SOURCE_520,\n+\t_INCLUDE_XOPEN_SOURCE_PRE_600 and _INCLUDE_XOPEN_SOURCE_600 for c++\n+\tand non iso if unix2003.\n+\n 2015-06-06  Aldy Hernandez  <aldyh@redhat.com>\n \n \t* dwarf2out.c (gen_lexical_block_die): Initialize stmt_die."}, {"sha": "1731ddc8b4d5dc76f741111f87c2de6b275d474a", "filename": "gcc/config/pa/pa-hpux10.h", "status": "modified", "additions": 21, "deletions": 7, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08b5b29ea7436d16ea776d2268ce2174d323b9a6/gcc%2Fconfig%2Fpa%2Fpa-hpux10.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08b5b29ea7436d16ea776d2268ce2174d323b9a6/gcc%2Fconfig%2Fpa%2Fpa-hpux10.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa-hpux10.h?ref=08b5b29ea7436d16ea776d2268ce2174d323b9a6", "patch": "@@ -24,7 +24,9 @@ along with GCC; see the file COPYING3.  If not see\n    the definition of __cplusplus.  We define _INCLUDE_LONGLONG\n    to prevent nlist.h from defining __STDC_32_MODE__ (no longlong\n    support).  We define __STDCPP__ to get certain system headers\n-   (notably assert.h) to assume standard preprocessor behavior in C++.  */\n+   (notably assert.h) to assume standard preprocessor behavior in C++.\n+   We define _XOPEN_SOURCE_EXTENDED when we define _HPUX_SOURCE to avoid\n+   non standard hpux variants in _INCLUDE_XOPEN_SOURCE_EXTENDED.  */\n #undef TARGET_OS_CPP_BUILTINS\n #define TARGET_OS_CPP_BUILTINS()\t\t\t\t\t\\\n   do\t\t\t\t\t\t\t\t\t\\\n@@ -44,8 +46,20 @@ along with GCC; see the file COPYING3.  If not see\n \t    builtin_define (\"_REENTRANT\");\t\t\t\t\\\n \t    builtin_define (\"_INCLUDE_LONGLONG\");\t\t\t\\\n \t    builtin_define (\"__STDCPP__\");\t\t\t\t\\\n+\t    builtin_define (\"_LARGEFILE_SOURCE\");\t\t\t\\\n+\t    builtin_define (\"_LARGEFILE64_SOURCE\");\t\t\t\\\n+\t    if (flag_pa_unix >= 1995)\t\t\t\t\t\\\n+\t      {\t\t\t\t\t\t\t\t\\\n+\t\tbuiltin_define (\"_XOPEN_UNIX\");\t\t\t\t\\\n+\t\tbuiltin_define (\"_XOPEN_SOURCE_EXTENDED\");\t\t\\\n+\t      }\t\t\t\t\t\t\t\t\\\n \t  }\t\t\t\t\t\t\t\t\\\n-\telse if (!flag_iso)\t\t\t\t\t\t\\\n+\telse if (flag_iso)\t\t\t\t\t\t\\\n+\t  {\t\t\t\t\t\t\t\t\\\n+\t    if (flag_isoc94)\t\t\t\t\t\t\\\n+\t      builtin_define (\"_INCLUDE__STDC_A1_SOURCE\");\t\t\\\n+\t  }\t\t\t\t\t\t\t\t\\\n+\telse\t\t\t\t\t\t\t\t\\\n \t  {\t\t\t\t\t\t\t\t\\\n \t    builtin_define (\"_HPUX_SOURCE\");\t\t\t\t\\\n \t    builtin_define (\"_REENTRANT\");\t\t\t\t\\\n@@ -59,11 +73,11 @@ along with GCC; see the file COPYING3.  If not see\n \t\tbuiltin_define (\"_PWB\");\t\t\t\t\\\n \t\tbuiltin_define (\"PWB\");\t\t\t\t\t\\\n \t      }\t\t\t\t\t\t\t\t\\\n-\t  }\t\t\t\t\t\t\t\t\\\n-\tif (flag_pa_unix >= 1995)\t\t\t\t\t\\\n-\t  {\t\t\t\t\t\t\t\t\\\n-\t    builtin_define (\"_XOPEN_UNIX\");\t\t\t\t\\\n-\t    builtin_define (\"_XOPEN_SOURCE_EXTENDED\");\t\t\t\\\n+\t    if (flag_pa_unix >= 1995)\t\t\t\t\t\\\n+\t      {\t\t\t\t\t\t\t\t\\\n+\t\tbuiltin_define (\"_XOPEN_UNIX\");\t\t\t\t\\\n+\t\tbuiltin_define (\"_XOPEN_SOURCE_EXTENDED\");\t\t\\\n+\t      }\t\t\t\t\t\t\t\t\\\n \t  }\t\t\t\t\t\t\t\t\\\n \tif (TARGET_SIO)\t\t\t\t\t\t\t\\\n \t  builtin_define (\"_SIO\");\t\t\t\t\t\\"}, {"sha": "31a66f4a0f7c083a64ce73759c43ad0985d82112", "filename": "gcc/config/pa/pa-hpux11.h", "status": "modified", "additions": 56, "deletions": 31, "changes": 87, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08b5b29ea7436d16ea776d2268ce2174d323b9a6/gcc%2Fconfig%2Fpa%2Fpa-hpux11.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08b5b29ea7436d16ea776d2268ce2174d323b9a6/gcc%2Fconfig%2Fpa%2Fpa-hpux11.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa-hpux11.h?ref=08b5b29ea7436d16ea776d2268ce2174d323b9a6", "patch": "@@ -23,7 +23,9 @@ along with GCC; see the file COPYING3.  If not see\n    the definition of __cplusplus.  We define _INCLUDE_LONGLONG\n    to prevent nlist.h from defining __STDC_32_MODE__ (no longlong\n    support).  We define __STDCPP__ to get certain system headers\n-   (notably assert.h) to assume standard preprocessor behavior in C++.  */\n+   (notably assert.h) to assume standard preprocessor behavior in C++.\n+   We define _XOPEN_SOURCE_EXTENDED when we define _HPUX_SOURCE to avoid\n+   non standard hpux variants in _INCLUDE_XOPEN_SOURCE_EXTENDED.  */\n #undef TARGET_OS_CPP_BUILTINS\n #define TARGET_OS_CPP_BUILTINS()\t\t\t\t\t\\\n   do\t\t\t\t\t\t\t\t\t\\\n@@ -43,46 +45,69 @@ along with GCC; see the file COPYING3.  If not see\n \t    builtin_define (\"_REENTRANT\");\t\t\t\t\\\n \t    builtin_define (\"_INCLUDE_LONGLONG\");\t\t\t\\\n \t    builtin_define (\"__STDCPP__\");\t\t\t\t\\\n-\t  }\t\t\t\t\t\t\t\t\\\n-\telse\t\t\t\t\t\t\t\t\\\n-\t  {\t\t\t\t\t\t\t\t\\\n-\t    if (!flag_iso)\t\t\t\t\t\t\\\n+\t    builtin_define (\"_LARGEFILE_SOURCE\");\t\t\t\\\n+\t    builtin_define (\"_LARGEFILE64_SOURCE\");\t\t\t\\\n+\t    if (flag_pa_unix >= 1995)\t\t\t\t\t\\\n+\t      {\t\t\t\t\t\t\t\t\\\n+\t\tbuiltin_define (\"_XOPEN_UNIX\");\t\t\t\t\\\n+\t\tbuiltin_define (\"_XOPEN_SOURCE_EXTENDED\");\t\t\\\n+\t      }\t\t\t\t\t\t\t\t\\\n+\t    if (flag_pa_unix >= 1998)\t\t\t\t\t\\\n \t      {\t\t\t\t\t\t\t\t\\\n-\t\tbuiltin_define (\"_HPUX_SOURCE\");\t\t\t\\\n-\t\tbuiltin_define (\"_REENTRANT\");\t\t\t\t\\\n-\t\tif (preprocessing_trad_p ())\t\t\t\t\\\n-\t\t  {\t\t\t\t\t\t\t\\\n-\t\t    builtin_define (\"hp9000s800\");\t\t\t\\\n-\t\t    builtin_define (\"hppa\");\t\t\t\t\\\n-\t\t    builtin_define (\"hpux\");\t\t\t\t\\\n-\t\t    builtin_define (\"unix\");\t\t\t\t\\\n-\t\t    builtin_define (\"__CLASSIC_C__\");\t\t\t\\\n-\t\t    builtin_define (\"_PWB\");\t\t\t\t\\\n-\t\t    builtin_define (\"PWB\");\t\t\t\t\\\n-\t\t  }\t\t\t\t\t\t\t\\\n+\t\tbuiltin_define (\"_INCLUDE__STDC_A1_SOURCE\");\t\t\\\n+\t\tbuiltin_define (\"_INCLUDE_XOPEN_SOURCE_500\");\t\t\\\n+\t      }\t\t\t\t\t\t\t\t\\\n+\t    if (flag_pa_unix >= 2003)\t\t\t\t\t\\\n+\t      {\t\t\t\t\t\t\t\t\\\n+\t\tbuiltin_define (\"_INCLUDE_STDC_SOURCE_PRE_199901\");\t\\\n+\t\tbuiltin_define (\"_INCLUDE_STDC_SOURCE_199901\");\t\t\\\n+\t\tbuiltin_define (\"_INCLUDE_XOPEN_SOURCE_PRE_500\");\t\\\n+\t\tbuiltin_define (\"_INCLUDE_XOPEN_SOURCE_520\");\t\t\\\n+\t\tbuiltin_define (\"_INCLUDE_XOPEN_SOURCE_PRE_600\");\t\\\n+\t\tbuiltin_define (\"_INCLUDE_XOPEN_SOURCE_600\");\t\t\\\n \t      }\t\t\t\t\t\t\t\t\\\n \t  }\t\t\t\t\t\t\t\t\\\n-\tif (!TARGET_64BIT)\t\t\t\t\t\t\\\n-\t  builtin_define (\"_ILP32\");\t\t\t\t\t\\\n-\tif (flag_pa_unix >= 1995 && !flag_iso)\t\t\t\t\\\n+\telse if (flag_iso)\t\t\t\t\t\t\\\n \t  {\t\t\t\t\t\t\t\t\\\n-\t    builtin_define (\"_XOPEN_UNIX\");\t\t\t\t\\\n-\t    builtin_define (\"_XOPEN_SOURCE_EXTENDED\");\t\t\t\\\n+\t    if (flag_isoc94)\t\t\t\t\t\t\\\n+\t      builtin_define (\"_INCLUDE__STDC_A1_SOURCE\");\t\t\\\n \t  }\t\t\t\t\t\t\t\t\\\n-\tif (TARGET_HPUX_11_11)\t\t\t\t\t\t\\\n+\telse\t\t\t\t\t\t\t\t\\\n \t  {\t\t\t\t\t\t\t\t\\\n+\t    builtin_define (\"_HPUX_SOURCE\");\t\t\t\t\\\n+\t    builtin_define (\"_REENTRANT\");\t\t\t\t\\\n+\t    if (preprocessing_trad_p ())\t\t\t\t\\\n+\t      {\t\t\t\t\t\t\t\t\\\n+\t\tbuiltin_define (\"hp9000s800\");\t\t\t\t\\\n+\t\tbuiltin_define (\"hppa\");\t\t\t\t\\\n+\t\tbuiltin_define (\"hpux\");\t\t\t\t\\\n+\t\tbuiltin_define (\"unix\");\t\t\t\t\\\n+\t\tbuiltin_define (\"__CLASSIC_C__\");\t\t\t\\\n+\t\tbuiltin_define (\"_PWB\");\t\t\t\t\\\n+\t\tbuiltin_define (\"PWB\");\t\t\t\t\t\\\n+\t      }\t\t\t\t\t\t\t\t\\\n+\t    if (flag_pa_unix >= 1995)\t\t\t\t\t\\\n+\t      {\t\t\t\t\t\t\t\t\\\n+\t\tbuiltin_define (\"_XOPEN_UNIX\");\t\t\t\t\\\n+\t\tbuiltin_define (\"_XOPEN_SOURCE_EXTENDED\");\t\t\\\n+\t      }\t\t\t\t\t\t\t\t\\\n \t    if (flag_pa_unix >= 1998)\t\t\t\t\t\\\n \t      {\t\t\t\t\t\t\t\t\\\n-\t\tif (flag_isoc94 || flag_isoc99 || c_dialect_cxx()\t\\\n-\t\t    || !flag_iso)\t\t\t\t\t\\\n-\t\t  builtin_define (\"_INCLUDE__STDC_A1_SOURCE\");\t\t\\\n-\t\tif (!flag_iso)\t\t\t\t\t\t\\\n-\t\t  builtin_define (\"_INCLUDE_XOPEN_SOURCE_500\");\t\t\\\n+\t\tbuiltin_define (\"_INCLUDE__STDC_A1_SOURCE\");\t\t\\\n+\t\tbuiltin_define (\"_INCLUDE_XOPEN_SOURCE_500\");\t\t\\\n+\t      }\t\t\t\t\t\t\t\t\\\n+\t    if (flag_pa_unix >= 2003)\t\t\t\t\t\\\n+\t      {\t\t\t\t\t\t\t\t\\\n+\t\tbuiltin_define (\"_INCLUDE_STDC_SOURCE_PRE_199901\");\t\\\n+\t\tbuiltin_define (\"_INCLUDE_STDC_SOURCE_199901\");\t\t\\\n+\t\tbuiltin_define (\"_INCLUDE_XOPEN_SOURCE_PRE_500\");\t\\\n+\t\tbuiltin_define (\"_INCLUDE_XOPEN_SOURCE_520\");\t\t\\\n+\t\tbuiltin_define (\"_INCLUDE_XOPEN_SOURCE_PRE_600\");\t\\\n+\t\tbuiltin_define (\"_INCLUDE_XOPEN_SOURCE_600\");\t\t\\\n \t      }\t\t\t\t\t\t\t\t\\\n-\t    else if (flag_isoc94 || flag_isoc99 || c_dialect_cxx ())\t\\\n-\t      warning (0, \"-munix=98 option required for C89 \"\t\t\\\n-\t\t       \"Amendment 1 features.\\n\");\t\t\t\\\n \t  }\t\t\t\t\t\t\t\t\\\n+\tif (!TARGET_64BIT)\t\t\t\t\t\t\\\n+\t  builtin_define (\"_ILP32\");\t\t\t\t\t\\\n \tif (TARGET_SIO)\t\t\t\t\t\t\t\\\n \t  builtin_define (\"_SIO\");\t\t\t\t\t\\\n \telse\t\t\t\t\t\t\t\t\\"}]}