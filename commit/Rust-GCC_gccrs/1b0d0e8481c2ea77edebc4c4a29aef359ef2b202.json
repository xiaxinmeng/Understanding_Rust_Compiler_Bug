{"sha": "1b0d0e8481c2ea77edebc4c4a29aef359ef2b202", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWIwZDBlODQ4MWMyZWE3N2VkZWJjNGM0YTI5YWVmMzU5ZWYyYjIwMg==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2003-04-18T20:30:24Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2003-04-18T20:30:24Z"}, "message": "* reload1.c: Revert my previous patch on 2002-04-17.\n\nFrom-SVN: r65790", "tree": {"sha": "11a3b96f54e488258ca496ce6e9b4d4ae73d5613", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/11a3b96f54e488258ca496ce6e9b4d4ae73d5613"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1b0d0e8481c2ea77edebc4c4a29aef359ef2b202", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b0d0e8481c2ea77edebc4c4a29aef359ef2b202", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b0d0e8481c2ea77edebc4c4a29aef359ef2b202", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b0d0e8481c2ea77edebc4c4a29aef359ef2b202/comments", "author": null, "committer": null, "parents": [{"sha": "906042f55973a562cb1e97b2e76232d0162331b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/906042f55973a562cb1e97b2e76232d0162331b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/906042f55973a562cb1e97b2e76232d0162331b6"}], "stats": {"total": 38, "additions": 4, "deletions": 34}, "files": [{"sha": "95bf90e7b863f1d400cba6b3067ed925cc794ab4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b0d0e8481c2ea77edebc4c4a29aef359ef2b202/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b0d0e8481c2ea77edebc4c4a29aef359ef2b202/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1b0d0e8481c2ea77edebc4c4a29aef359ef2b202", "patch": "@@ -1,3 +1,7 @@\n+2003-04-18  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* reload1.c: Revert my previous patch on 2002-04-17.\n+\n 2003-04-18  Gerald Pfeifer  <pfeifer@dbai.tuwien.ac.at>\n \n \t* doc/contrib.texi (Contributors): Prefer \"bug fix\" over \"bugfix\"."}, {"sha": "54d163ee00ce0cbb9e66e2f7427fe1200f043311", "filename": "gcc/reload1.c", "status": "modified", "additions": 0, "deletions": 34, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b0d0e8481c2ea77edebc4c4a29aef359ef2b202/gcc%2Freload1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b0d0e8481c2ea77edebc4c4a29aef359ef2b202/gcc%2Freload1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload1.c?ref=1b0d0e8481c2ea77edebc4c4a29aef359ef2b202", "patch": "@@ -9094,9 +9094,6 @@ static int move2add_last_label_luid;\n        && TRULY_NOOP_TRUNCATION (GET_MODE_BITSIZE (OUTMODE), \\\n \t\t\t\t GET_MODE_BITSIZE (INMODE))))\n \n-/* The source of the last set to cc0 we've seen.  */\n-static rtx move2add_last_cc0;\n-\n static void\n reload_cse_move2add (first)\n      rtx first;\n@@ -9109,7 +9106,6 @@ reload_cse_move2add (first)\n \n   move2add_last_label_luid = 0;\n   move2add_luid = 2;\n-  move2add_last_cc0 = NULL_RTX;\n   for (insn = first; insn; insn = NEXT_INSN (insn), move2add_luid++)\n     {\n       rtx pat, note;\n@@ -9292,29 +9288,6 @@ reload_cse_move2add (first)\n \t    }\n \t}\n       note_stores (PATTERN (insn), move2add_note_store, NULL);\n-\n-      /* If INSN is a conditional branch, we try to extract an\n-\t implicit set out of it.  */\n-      if (any_condjump_p (insn) && onlyjump_p (insn))\n-\t{\n-\t  rtx cnd = get_condition (insn, NULL);\n-\n-#ifdef HAVE_cc0\n-\t  if (cnd != NULL_RTX && move2add_last_cc0 != NULL_RTX)\n-\t    cnd = simplify_replace_rtx (cnd, cc0_rtx, move2add_last_cc0);\n-#endif\n-\t  if (cnd != NULL_RTX\n-\t      && GET_CODE (cnd) == NE\n-\t      && GET_CODE (XEXP (cnd, 0)) == REG\n-\t      && SCALAR_INT_MODE_P (GET_MODE (XEXP (cnd, 0)))\n-\t      && GET_CODE (XEXP (cnd, 1)) == CONST_INT)\n-\t    {\n-\t      rtx implicit_set =\n-\t\tgen_rtx_SET (VOIDmode, SET_DEST (cnd), SET_SRC (cnd));\n-\t      move2add_note_store (SET_DEST (implicit_set), implicit_set, 0);\n-\t    }\n-\t}\n-\n       /* If this is a CALL_INSN, all call used registers are stored with\n \t unknown values.  */\n       if (GET_CODE (insn) == CALL_INSN)\n@@ -9361,13 +9334,6 @@ move2add_note_store (dst, set, data)\n \treg_set_luid[REGNO (XEXP (dst, 0))] = 0;\n       return;\n     }\n-  /* Note a store into cc0 so that we can later find an implicit\n-     set.  */\n-  if (CC0_P (dst))\n-    {\n-      move2add_last_cc0 = SET_SRC (set);\n-      return;\n-    }\n   if (GET_CODE (dst) != REG)\n     return;\n "}]}