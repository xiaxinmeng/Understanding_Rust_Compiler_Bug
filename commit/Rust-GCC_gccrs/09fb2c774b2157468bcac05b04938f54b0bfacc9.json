{"sha": "09fb2c774b2157468bcac05b04938f54b0bfacc9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDlmYjJjNzc0YjIxNTc0NjhiY2FjMDViMDQ5MzhmNTRiMGJmYWNjOQ==", "commit": {"author": {"name": "Dave Love", "email": "d.love@dl.ac.uk", "date": "1997-12-12T06:55:33Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1997-12-12T06:55:33Z"}, "message": "linux.h (STACK_BOUNDARY): Define as 64 for glibc2.\n\n        * i386/linux.h (STACK_BOUNDARY): Define as 64 for glibc2.\n        * i386/gnu.h (STACK_BOUNDARY): Define as 64.\n\nFrom-SVN: r17063", "tree": {"sha": "183ec45c842d6d6d1c6628243cfbf6c65c12c4ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/183ec45c842d6d6d1c6628243cfbf6c65c12c4ef"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/09fb2c774b2157468bcac05b04938f54b0bfacc9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09fb2c774b2157468bcac05b04938f54b0bfacc9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/09fb2c774b2157468bcac05b04938f54b0bfacc9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09fb2c774b2157468bcac05b04938f54b0bfacc9/comments", "author": null, "committer": null, "parents": [{"sha": "7567d496ec32e1e233aed895e938e7930dea65b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7567d496ec32e1e233aed895e938e7930dea65b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7567d496ec32e1e233aed895e938e7930dea65b2"}], "stats": {"total": 20, "additions": 17, "deletions": 3}, "files": [{"sha": "b243eb4436c3d75d0549e5c681b80956863cb1da", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09fb2c774b2157468bcac05b04938f54b0bfacc9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09fb2c774b2157468bcac05b04938f54b0bfacc9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=09fb2c774b2157468bcac05b04938f54b0bfacc9", "patch": "@@ -1,3 +1,8 @@\n+1997-11-13  Dave Love  <d.love@dl.ac.uk>\n+\n+\t* i386/linux.h (STACK_BOUNDARY): Define as 64 for glibc2.\n+\t* i386/gnu.h (STACK_BOUNDARY): Define as 64.\n+\n Thu Dec 11 23:55:17 1997  Manfred Hollstein  <manfred@s-direktnet.de>\n \n \t* fixincludes (str{len,spn,cspn} return value): Handle different"}, {"sha": "c86155a3e4272b65c5f88a91218acce973735c7c", "filename": "gcc/config/i386/gnu.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09fb2c774b2157468bcac05b04938f54b0bfacc9/gcc%2Fconfig%2Fi386%2Fgnu.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09fb2c774b2157468bcac05b04938f54b0bfacc9/gcc%2Fconfig%2Fi386%2Fgnu.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fgnu.h?ref=09fb2c774b2157468bcac05b04938f54b0bfacc9", "patch": "@@ -3,6 +3,9 @@\n /* This does it mostly for us.  */\n #include <i386/linux.h>\n \n+#undef STACK_BOUNDARY\n+#define STACK_BOUNDARY 64       /* glibc2's crt ensures this */\n+\n #undef CPP_PREDEFINES\n #define CPP_PREDEFINES GNU_CPP_PREDEFINES(\"i386\")\n "}, {"sha": "9b7dc8001c203d0fc8fc18b87774185d71bc40df", "filename": "gcc/config/i386/linux.h", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09fb2c774b2157468bcac05b04938f54b0bfacc9/gcc%2Fconfig%2Fi386%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09fb2c774b2157468bcac05b04938f54b0bfacc9/gcc%2Fconfig%2Fi386%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Flinux.h?ref=09fb2c774b2157468bcac05b04938f54b0bfacc9", "patch": "@@ -1,4 +1,4 @@\n-/* Definitions for Intel 386 running Linux with ELF format\n+/* Definitions for Intel 386 running Linux-based GNU systems with ELF format.\n    Copyright (C) 1994, 1995, 1996, 1997 Free Software Foundation, Inc.\n    Contributed by Eric Youngdale.\n    Modified for stabs-in-ELF by H.J. Lu.\n@@ -30,13 +30,19 @@ Boston, MA 02111-1307, USA.  */\n #include <linux.h>\t/* some common stuff */\n \n #undef TARGET_VERSION\n-#define TARGET_VERSION fprintf (stderr, \" (i386 Linux/ELF)\");\n+#define TARGET_VERSION fprintf (stderr, \" (i386 GNU/Linux with ELF)\");\n \n /* The svr4 ABI for the i386 says that records and unions are returned\n    in memory.  */\n #undef DEFAULT_PCC_STRUCT_RETURN\n #define DEFAULT_PCC_STRUCT_RETURN 1\n \n+#ifndef USE_GNULIBC_1\n+#undef STACK_BOUNDARY\n+#define STACK_BOUNDARY 64       /* glibc2's crt ensures this, libc5\n+                                   only gives you 32 */\n+#endif\n+\n /* This is how to output an element of a case-vector that is relative.\n    This is only used for PIC code.  See comments by the `casesi' insn in\n    i386.md for an explanation of the expression this outputs. */\n@@ -160,7 +166,7 @@ Boston, MA 02111-1307, USA.  */\n #undef CC1_SPEC\n #define CC1_SPEC \"%(cc1_cpu) %{profile:-p}\"\n \n-/* Provide a LINK_SPEC appropriate for Linux.  Here we provide support\n+/* Provide a LINK_SPEC appropriate for GNU/Linux.  Here we provide support\n    for the special GCC options -static and -shared, which allow us to\n    link things in one of these three modes by applying the appropriate\n    combinations of options at link-time. We like to support here for"}]}