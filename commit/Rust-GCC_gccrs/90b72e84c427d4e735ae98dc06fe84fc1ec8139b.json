{"sha": "90b72e84c427d4e735ae98dc06fe84fc1ec8139b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTBiNzJlODRjNDI3ZDRlNzM1YWU5OGRjMDZmZTg0ZmMxZWM4MTM5Yg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2016-06-14T07:22:04Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2016-06-14T07:22:04Z"}, "message": "re PR tree-optimization/71521 (Regression in GCC-7.0.0's optimizer)\n\n2016-06-14  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/71521\n\t* tree-vrp.c (extract_range_from_binary_expr_1): Guard\n\tdivision int_const_binop against zero divisor.\n\n\t* gcc.dg/tree-ssa/vrp101.c: New testcase.\n\nFrom-SVN: r237425", "tree": {"sha": "ad08ab03d531f17d0180aa5adf94b8ff4dcb4681", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ad08ab03d531f17d0180aa5adf94b8ff4dcb4681"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/90b72e84c427d4e735ae98dc06fe84fc1ec8139b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90b72e84c427d4e735ae98dc06fe84fc1ec8139b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/90b72e84c427d4e735ae98dc06fe84fc1ec8139b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90b72e84c427d4e735ae98dc06fe84fc1ec8139b/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3db5773f7083637c9adb2481d35389495309bc05", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3db5773f7083637c9adb2481d35389495309bc05", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3db5773f7083637c9adb2481d35389495309bc05"}], "stats": {"total": 28, "additions": 27, "deletions": 1}, "files": [{"sha": "f0077b8d605e9821827bdc14a21200c26e7fb4b5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90b72e84c427d4e735ae98dc06fe84fc1ec8139b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90b72e84c427d4e735ae98dc06fe84fc1ec8139b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=90b72e84c427d4e735ae98dc06fe84fc1ec8139b", "patch": "@@ -1,3 +1,9 @@\n+2016-06-14  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/71521\n+\t* tree-vrp.c (extract_range_from_binary_expr_1): Guard\n+\tdivision int_const_binop against zero divisor.\n+\n 2016-06-13  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/i386.md (signbittf2): New expander."}, {"sha": "8763aad7556b12edaa1710564d5cf6bd08f1b179", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90b72e84c427d4e735ae98dc06fe84fc1ec8139b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90b72e84c427d4e735ae98dc06fe84fc1ec8139b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=90b72e84c427d4e735ae98dc06fe84fc1ec8139b", "patch": "@@ -1,3 +1,9 @@\n+2016-06-14  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/71521\n+\t* tree-vrp.c (extract_range_from_binary_expr_1): Guard\n+\tdivision int_const_binop against zero divisor.\n+\n 2016-06-13  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR sanitizer/71498"}, {"sha": "cfca5396e636ff4c0ace1033e47217e6cec8e2d2", "filename": "gcc/testsuite/gcc.dg/tree-ssa/vrp101.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90b72e84c427d4e735ae98dc06fe84fc1ec8139b/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp101.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90b72e84c427d4e735ae98dc06fe84fc1ec8139b/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp101.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvrp101.c?ref=90b72e84c427d4e735ae98dc06fe84fc1ec8139b", "patch": "@@ -0,0 +1,13 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fdump-tree-optimized\" } */\n+\n+int x = 1;\n+\n+int main ()\n+{\n+  int t = (1/(1>=x))>>1;\n+  if (t != 0) __builtin_abort();\n+  return 0;\n+}\n+\n+/* { dg-final { scan-tree-dump \"<bb 2>:\\[\\n\\r \\]*return 0;\" \"optimized\" } } */"}, {"sha": "ecfab1f53ecd8115af07b02063f22434157f558c", "filename": "gcc/tree-vrp.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90b72e84c427d4e735ae98dc06fe84fc1ec8139b/gcc%2Ftree-vrp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90b72e84c427d4e735ae98dc06fe84fc1ec8139b/gcc%2Ftree-vrp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vrp.c?ref=90b72e84c427d4e735ae98dc06fe84fc1ec8139b", "patch": "@@ -2938,7 +2938,8 @@ extract_range_from_binary_expr_1 (value_range *vr,\n \t\t     and divisor are available.  */\n \t\t  if (vr1.type == VR_RANGE\n \t\t      && !symbolic_range_p (&vr0)\n-\t\t      && !symbolic_range_p (&vr1))\n+\t\t      && !symbolic_range_p (&vr1)\n+\t\t      && compare_values (vr1.max, zero) != 0)\n \t\t    min = int_const_binop (code, vr0.min, vr1.max);\n \t\t  else\n \t\t    min = zero;"}]}