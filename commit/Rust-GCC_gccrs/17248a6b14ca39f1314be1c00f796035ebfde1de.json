{"sha": "17248a6b14ca39f1314be1c00f796035ebfde1de", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTcyNDhhNmIxNGNhMzlmMTMxNGJlMWMwMGY3OTYwMzVlYmZkZTFkZQ==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "1998-02-15T20:41:09Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-02-15T20:41:09Z"}, "message": "gcc.c: Get system includes...\n\n        * gcc.c: Get system includes, prototypes and macros via \"system.h\"\n        instead of doing it manually.  Change all calls of the ctype\n        macros to custom versions defined in \"system.h\".\n\nFrom-SVN: r18019", "tree": {"sha": "1923df75bdde66cc6b9ddcbfb9c45b0e649e63f6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1923df75bdde66cc6b9ddcbfb9c45b0e649e63f6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/17248a6b14ca39f1314be1c00f796035ebfde1de", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17248a6b14ca39f1314be1c00f796035ebfde1de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/17248a6b14ca39f1314be1c00f796035ebfde1de", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17248a6b14ca39f1314be1c00f796035ebfde1de/comments", "author": null, "committer": null, "parents": [{"sha": "79e118448542dc4e449e17ff1fb1e27f78566326", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79e118448542dc4e449e17ff1fb1e27f78566326", "html_url": "https://github.com/Rust-GCC/gccrs/commit/79e118448542dc4e449e17ff1fb1e27f78566326"}], "stats": {"total": 74, "additions": 19, "deletions": 55}, "files": [{"sha": "6453fb7af0f64c4ccea6f49096682920ed98c872", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17248a6b14ca39f1314be1c00f796035ebfde1de/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17248a6b14ca39f1314be1c00f796035ebfde1de/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=17248a6b14ca39f1314be1c00f796035ebfde1de", "patch": "@@ -1,5 +1,9 @@\n Sun Feb 15 21:33:55 1998  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n+\t* gcc.c: Get system includes, prototypes and macros via \"system.h\"\n+\tinstead of doing it manually.  Change all calls of the ctype\n+\tmacros to custom versions defined in \"system.h\".\n+\n \t* system.h: Fix return type of bcmp prototype from `void' to `int'.\n \tMake bcopy, bcmp and bzero prototypes explicitly `extern'.\n \tAdd a prototype for getenv."}, {"sha": "fcbbf1eb00fcdfc5f50faeebac8ab00e03141cb4", "filename": "gcc/gcc.c", "status": "modified", "additions": 15, "deletions": 55, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17248a6b14ca39f1314be1c00f796035ebfde1de/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17248a6b14ca39f1314be1c00f796035ebfde1de/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=17248a6b14ca39f1314be1c00f796035ebfde1de", "patch": "@@ -33,51 +33,18 @@ compilation is specified by a string called a \"spec\".  */\n \f\n #include \"config.h\"\n \n-#include <sys/types.h>\n-#include <ctype.h>\n-#include <signal.h>\n-#include <sys/stat.h>\n-#include <errno.h>\n-\n-#ifdef HAVE_SYS_FILE_H\n-#include <sys/file.h>   /* May get R_OK, etc. on some systems.  */\n-#endif\n-\n-#include \"obstack.h\"\n #include \"gansidecl.h\"\n+#include \"system.h\"\n \n+#include <signal.h>\n #ifdef __STDC__\n #include <stdarg.h>\n #else\n #include <varargs.h>\n #endif\n-#include <stdio.h>\n-\n-#ifdef HAVE_STRING_H\n-#include <string.h>\n-#else\n-#ifdef HAVE_STRINGS_H\n-#include <strings.h>\n-#endif\n-#endif\n \n-#ifdef HAVE_UNISTD_H\n-#include <unistd.h>\n-#endif\n-\n-#ifdef HAVE_STDLIB_H\n-#include <stdlib.h>\n-#endif\n-\n-#ifdef HAVE_FCNTL_H\n-#include <fcntl.h>\n-#endif\n+#include \"obstack.h\"\n \n-#ifndef R_OK\n-#define R_OK 4\n-#define W_OK 2\n-#define X_OK 1\n-#endif\n \n /* ??? Need to find a GCC header to put these in.  */\n extern int pexecute PROTO ((const char *, char * const *, const char *,\n@@ -154,15 +121,8 @@ static char dir_separator_str[] = {DIR_SEPARATOR, 0};\n #define obstack_chunk_alloc xmalloc\n #define obstack_chunk_free free\n \n-extern void free ();\n-extern char *getenv ();\n-\n extern char *choose_temp_base PROTO((void));\n \n-#ifndef errno\n-extern int errno;\n-#endif\n-\n #ifndef HAVE_STRERROR\n extern int sys_nerr;\n extern char *sys_errlist[];\n@@ -1219,7 +1179,7 @@ set_spec (name, spec)\n     }\n \n   old_spec = *(sl->ptr_spec);\n-  *(sl->ptr_spec) = ((spec[0] == '+' && isspace (spec[1]))\n+  *(sl->ptr_spec) = ((spec[0] == '+' && ISSPACE (spec[1]))\n \t\t     ? concat (old_spec, spec + 1, NULL_PTR)\n \t\t     : save_string (spec, strlen (spec)));\n \n@@ -1507,12 +1467,12 @@ read_specs (filename, main_p)\n \t      while (*p1 == ' ' || *p1 == '\\t')\n \t\tp1++;\n \n-\t      if (! isalpha (*p1))\n+\t      if (! ISALPHA (*p1))\n \t\tfatal (\"specs %%rename syntax malformed after %d characters\",\n \t\t       p1 - buffer);\n \n \t      p2 = p1;\n-\t      while (*p2 && !isspace (*p2))\n+\t      while (*p2 && !ISSPACE (*p2))\n \t\tp2++;\n \n \t      if (*p2 != ' ' && *p2 != '\\t')\n@@ -1524,13 +1484,13 @@ read_specs (filename, main_p)\n \t      while (*p2 == ' ' || *p2 == '\\t')\n \t\tp2++;\n \n-\t      if (! isalpha (*p2))\n+\t      if (! ISALPHA (*p2))\n \t\tfatal (\"specs %%rename syntax malformed after %d characters\",\n \t\t       p2 - buffer);\n \n \t      /* Get new spec name */\n \t      p3 = p2;\n-\t      while (*p3 && !isspace (*p3))\n+\t      while (*p3 && !ISSPACE (*p3))\n \t\tp3++;\n \n \t      if (p3 != p-1)\n@@ -2721,7 +2681,7 @@ process_command (argc, argv)\n \t\t\t   && (value[len - 8] == '/'\n \t\t\t       || value[len - 8] == DIR_SEPARATOR)))\n \t\t      && strncmp (value + len - 7, \"stage\", 5) == 0\n-\t\t      && isdigit (value[len - 2])\n+\t\t      && ISDIGIT (value[len - 2])\n \t\t      && (value[len - 1] == '/'\n \t\t\t  || value[len - 1] == DIR_SEPARATOR))\n \t\t    {\n@@ -3385,7 +3345,7 @@ do_spec_1 (spec, inswitch, soft_matched_part)\n \t\t   In 2.4, do something about that.  */\n \t\tstruct temp_name *t;\n \t\tchar *suffix = p;\n-\t\twhile (*p == '.' || isalpha (*p)\n+\t\twhile (*p == '.' || ISALPHA (*p)\n \t\t       || (p[0] == '%' && p[1] == 'O'))\n \t\t  p++;\n \n@@ -3674,7 +3634,7 @@ do_spec_1 (spec, inswitch, soft_matched_part)\n \t\t      *x++ = *y++;\n \n \t\t      if (*y != '_'\n-\t\t\t  || (*(y+1) != '_' && ! isupper (*(y+1))))\n+\t\t\t  || (*(y+1) != '_' && ! ISUPPER (*(y+1))))\n \t\t        {\n \t\t\t  /* Stick __ at front of macro name.  */\n \t\t\t  *x++ = '_';\n@@ -3716,7 +3676,7 @@ do_spec_1 (spec, inswitch, soft_matched_part)\n \t\t      y += 2;\n \n \t\t      if (*y != '_'\n-\t\t\t  || (*(y+1) != '_' && ! isupper (*(y+1))))\n+\t\t\t  || (*(y+1) != '_' && ! ISUPPER (*(y+1))))\n \t\t        {\n \t\t\t  /* Stick -D__ at front of macro name.  */\n \t\t\t  *x++ = '-';\n@@ -3890,7 +3850,7 @@ do_spec_1 (spec, inswitch, soft_matched_part)\n \t\t ([^0-9]*-)?[0-9]+[.][0-9]+([.][0-9]+)?([- ].*)?  */\n \n \t      /* Ignore leading non-digits.  i.e. \"foo-\" in \"foo-2.7.2\".  */\n-\t      while (! isdigit (*v))\n+\t      while (! ISDIGIT (*v))\n \t\tv++;\n \t      if (v > compiler_version && v[-1] != '-')\n \t\tabort ();\n@@ -3899,7 +3859,7 @@ do_spec_1 (spec, inswitch, soft_matched_part)\n \t      if (c1 == '2')\n \t\t{\n \t\t  /* Set V after the first period.  */\n-\t\t  while (isdigit (*v))\n+\t\t  while (ISDIGIT (*v))\n \t\t    v++;\n \t\t  if (*v != '.')\n \t\t    abort ();\n@@ -3908,7 +3868,7 @@ do_spec_1 (spec, inswitch, soft_matched_part)\n \n \t      /* Set Q at the next period or at the end.  */\n \t      q = v;\n-\t      while (isdigit (*q))\n+\t      while (ISDIGIT (*q))\n \t\tq++;\n \t      if (*q != 0 && *q != ' ' && *q != '.' && *q != '-')\n \t\tabort ();"}]}