{"sha": "402b6c2a7aec8bac15a092efcc9612ae4bc3468a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDAyYjZjMmE3YWVjOGJhYzE1YTA5MmVmY2M5NjEyYWU0YmMzNDY4YQ==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@cygnus.com", "date": "1999-12-06T23:22:47Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1999-12-06T23:22:47Z"}, "message": "Fix ia64 execute/930630-1.c miscompilation.\n\n\t* combine.c (force_to_mode, case LSHIFTRT): New local inner_mask.  Set\n\tinner_mask instead of mask.\n\nFrom-SVN: r30812", "tree": {"sha": "1344c2997ec0fc0d0ef7a31b1aab9e5902aa2c99", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1344c2997ec0fc0d0ef7a31b1aab9e5902aa2c99"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/402b6c2a7aec8bac15a092efcc9612ae4bc3468a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/402b6c2a7aec8bac15a092efcc9612ae4bc3468a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/402b6c2a7aec8bac15a092efcc9612ae4bc3468a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/402b6c2a7aec8bac15a092efcc9612ae4bc3468a/comments", "author": null, "committer": null, "parents": [{"sha": "de1f429d34431c2609b8d88588b63ade95abf0e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de1f429d34431c2609b8d88588b63ade95abf0e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de1f429d34431c2609b8d88588b63ade95abf0e7"}], "stats": {"total": 16, "additions": 11, "deletions": 5}, "files": [{"sha": "505c7998d8311049b75e1fc9a6e69dad8d4b2291", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/402b6c2a7aec8bac15a092efcc9612ae4bc3468a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/402b6c2a7aec8bac15a092efcc9612ae4bc3468a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=402b6c2a7aec8bac15a092efcc9612ae4bc3468a", "patch": "@@ -1,3 +1,8 @@\n+Mon Dec  6 15:12:14 1999  Jim Wilson  <wilson@cygnus.com>\n+\n+\t* combine.c (force_to_mode, case LSHIFTRT): New local inner_mask.  Set\n+\tinner_mask instead of mask.\n+\n 1999-12-06  Brendan Kehoe  <brendan@cygnus.com>\n \n \t* dwarf2out.c (field_byte_offset): As with dwarfout.c, size can be"}, {"sha": "c3864e0da7f21ee37639b2bb304f09b355ace5ec", "filename": "gcc/combine.c", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/402b6c2a7aec8bac15a092efcc9612ae4bc3468a/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/402b6c2a7aec8bac15a092efcc9612ae4bc3468a/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=402b6c2a7aec8bac15a092efcc9612ae4bc3468a", "patch": "@@ -6815,18 +6815,19 @@ force_to_mode (x, mode, mask, reg, just_select)\n \t  && GET_MODE_BITSIZE (op_mode) <= HOST_BITS_PER_WIDE_INT)\n \t{\n \t  rtx inner = XEXP (x, 0);\n+\t  unsigned HOST_WIDE_INT inner_mask;\n \n \t  /* Select the mask of the bits we need for the shift operand.  */\n-\t  mask <<= INTVAL (XEXP (x, 1));\n+\t  inner_mask = mask << INTVAL (XEXP (x, 1));\n \n \t  /* We can only change the mode of the shift if we can do arithmetic\n-\t     in the mode of the shift and MASK is no wider than the width of\n-\t     OP_MODE.  */\n+\t     in the mode of the shift and INNER_MASK is no wider than the\n+\t     width of OP_MODE.  */\n \t  if (GET_MODE_BITSIZE (op_mode) > HOST_BITS_PER_WIDE_INT\n-\t      || (mask & ~ GET_MODE_MASK (op_mode)) != 0)\n+\t      || (inner_mask & ~ GET_MODE_MASK (op_mode)) != 0)\n \t    op_mode = GET_MODE (x);\n \n-\t  inner = force_to_mode (inner, op_mode, mask, reg, next_select);\n+\t  inner = force_to_mode (inner, op_mode, inner_mask, reg, next_select);\n \n \t  if (GET_MODE (x) != op_mode || inner != XEXP (x, 0))\n \t    x = gen_binary (LSHIFTRT, op_mode, inner, XEXP (x, 1));"}]}