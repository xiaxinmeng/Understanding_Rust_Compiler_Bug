{"sha": "deaae9d7c73f87cfd2a0125411fdc54824b5d410", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGVhYWU5ZDdjNzNmODdjZmQyYTAxMjU0MTFmZGM1NDgyNGI1ZDQxMA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2013-03-21T03:25:35Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2013-03-21T03:25:35Z"}, "message": "re PR c++/54532 ([C++0x][constexpr] internal error when initializing static constexpr with pointer to non-static member variable)\n\n\tPR c++/54532\n\t* expr.c (cplus_expand_constant): Do nothing if the class is\n\tincomplete.\n\t* semantics.c (reduced_constant_expression_p): Allow PTRMEM_CST.\n\t* typeck2.c (store_init_value): Use reduced_constant_expression_p.\n\t* decl.c (maybe_register_incomplete_var): Handle PTRMEM_CST.\n\t(complete_vars): Likewise.\n\nFrom-SVN: r196852", "tree": {"sha": "875a9ad5038acb1c7903c9adf6be0a805d2de46e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/875a9ad5038acb1c7903c9adf6be0a805d2de46e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/deaae9d7c73f87cfd2a0125411fdc54824b5d410", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/deaae9d7c73f87cfd2a0125411fdc54824b5d410", "html_url": "https://github.com/Rust-GCC/gccrs/commit/deaae9d7c73f87cfd2a0125411fdc54824b5d410", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/deaae9d7c73f87cfd2a0125411fdc54824b5d410/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "766053b33a997fb268791967df46c5c3f9f94a64", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/766053b33a997fb268791967df46c5c3f9f94a64", "html_url": "https://github.com/Rust-GCC/gccrs/commit/766053b33a997fb268791967df46c5c3f9f94a64"}], "stats": {"total": 60, "additions": 54, "deletions": 6}, "files": [{"sha": "64a085c7fb5ea5b7cf577603cbb3abd5f34f5d87", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/deaae9d7c73f87cfd2a0125411fdc54824b5d410/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/deaae9d7c73f87cfd2a0125411fdc54824b5d410/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=deaae9d7c73f87cfd2a0125411fdc54824b5d410", "patch": "@@ -1,5 +1,13 @@\n 2013-03-20  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/54532\n+\t* expr.c (cplus_expand_constant): Do nothing if the class is\n+\tincomplete.\n+\t* semantics.c (reduced_constant_expression_p): Allow PTRMEM_CST.\n+\t* typeck2.c (store_init_value): Use reduced_constant_expression_p.\n+\t* decl.c (maybe_register_incomplete_var): Handle PTRMEM_CST.\n+\t(complete_vars): Likewise.\n+\n \t* name-lookup.c (get_anonymous_namespace_name): Never use\n \tget_file_function_name.\n "}, {"sha": "4ccb5414cc6a810149f78fe6a6249c8aa4567bad", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 24, "deletions": 5, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/deaae9d7c73f87cfd2a0125411fdc54824b5d410/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/deaae9d7c73f87cfd2a0125411fdc54824b5d410/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=deaae9d7c73f87cfd2a0125411fdc54824b5d410", "patch": "@@ -14018,7 +14018,10 @@ grokmethod (cp_decl_specifier_seq *declspecs,\n \f\n \n /* VAR is a VAR_DECL.  If its type is incomplete, remember VAR so that\n-   we can lay it out later, when and if its type becomes complete.  */\n+   we can lay it out later, when and if its type becomes complete.\n+\n+   Also handle constexpr pointer to member variables where the initializer\n+   is an unlowered PTRMEM_CST because the class isn't complete yet.  */\n \n void\n maybe_register_incomplete_var (tree var)\n@@ -14043,6 +14046,15 @@ maybe_register_incomplete_var (tree var)\n \t  incomplete_var iv = {var, inner_type};\n \t  vec_safe_push (incomplete_vars, iv);\n \t}\n+      else if (TYPE_PTRMEM_P (inner_type)\n+\t       && DECL_INITIAL (var)\n+\t       && TREE_CODE (DECL_INITIAL (var)) == PTRMEM_CST)\n+\t{\n+\t  tree context = TYPE_PTRMEM_CLASS_TYPE (inner_type);\n+\t  gcc_assert (TYPE_BEING_DEFINED (context));\n+\t  incomplete_var iv = {var, context};\n+\t  vec_safe_push (incomplete_vars, iv);\n+\t}\n     }\n }\n \n@@ -14062,10 +14074,17 @@ complete_vars (tree type)\n \t{\n \t  tree var = iv->decl;\n \t  tree type = TREE_TYPE (var);\n-\t  /* Complete the type of the variable.  The VAR_DECL itself\n-\t     will be laid out in expand_expr.  */\n-\t  complete_type (type);\n-\t  cp_apply_type_quals_to_decl (cp_type_quals (type), var);\n+\n+\t  if (TYPE_PTRMEM_P (type))\n+\t    DECL_INITIAL (var) = cplus_expand_constant (DECL_INITIAL (var));\n+\t  else\n+\t    {\n+\t      /* Complete the type of the variable.  The VAR_DECL itself\n+\t\t will be laid out in expand_expr.  */\n+\t      complete_type (type);\n+\t      cp_apply_type_quals_to_decl (cp_type_quals (type), var);\n+\t    }\n+\n \t  /* Remove this entry from the list.  */\n \t  incomplete_vars->unordered_remove (ix);\n \t}"}, {"sha": "f15b049baf8aae8c39e26dba084062d9d1b7d959", "filename": "gcc/cp/expr.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/deaae9d7c73f87cfd2a0125411fdc54824b5d410/gcc%2Fcp%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/deaae9d7c73f87cfd2a0125411fdc54824b5d410/gcc%2Fcp%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fexpr.c?ref=deaae9d7c73f87cfd2a0125411fdc54824b5d410", "patch": "@@ -43,6 +43,10 @@ cplus_expand_constant (tree cst)\n \t/* Find the member.  */\n \tmember = PTRMEM_CST_MEMBER (cst);\n \n+\t/* We can't lower this until the class is complete.  */\n+\tif (!COMPLETE_TYPE_P (DECL_CONTEXT (member)))\n+\t  return cst;\n+\n \tif (TREE_CODE (member) == FIELD_DECL)\n \t  {\n \t    /* Find the offset for the field.  */"}, {"sha": "3691d8620492d3f5b2548ef166740f93c9028276", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/deaae9d7c73f87cfd2a0125411fdc54824b5d410/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/deaae9d7c73f87cfd2a0125411fdc54824b5d410/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=deaae9d7c73f87cfd2a0125411fdc54824b5d410", "patch": "@@ -6838,6 +6838,9 @@ cxx_eval_call_expression (const constexpr_call *old_call, tree t,\n bool\n reduced_constant_expression_p (tree t)\n {\n+  if (TREE_CODE (t) == PTRMEM_CST)\n+    /* Even if we can't lower this yet, it's constant.  */\n+    return true;\n   /* FIXME are we calling this too much?  */\n   return initializer_constant_valid_p (t, TREE_TYPE (t)) != NULL_TREE;\n }"}, {"sha": "6ef46a1b00ffa3dcaaabbef17b08ab675426a137", "filename": "gcc/cp/typeck2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/deaae9d7c73f87cfd2a0125411fdc54824b5d410/gcc%2Fcp%2Ftypeck2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/deaae9d7c73f87cfd2a0125411fdc54824b5d410/gcc%2Fcp%2Ftypeck2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck2.c?ref=deaae9d7c73f87cfd2a0125411fdc54824b5d410", "patch": "@@ -792,7 +792,7 @@ store_init_value (tree decl, tree init, vec<tree, va_gc>** cleanups, int flags)\n      will perform the dynamic initialization.  */\n   if (value != error_mark_node\n       && (TREE_SIDE_EFFECTS (value)\n-\t   || ! initializer_constant_valid_p (value, TREE_TYPE (value))))\n+\t  || ! reduced_constant_expression_p (value)))\n     {\n       if (TREE_CODE (type) == ARRAY_TYPE\n \t  && TYPE_HAS_NONTRIVIAL_DESTRUCTOR (TREE_TYPE (type)))"}, {"sha": "91cc25a71c359d2233438aaa5af7b52e2cfda23f", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-static11.C", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/deaae9d7c73f87cfd2a0125411fdc54824b5d410/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-static11.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/deaae9d7c73f87cfd2a0125411fdc54824b5d410/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-static11.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-static11.C?ref=deaae9d7c73f87cfd2a0125411fdc54824b5d410", "patch": "@@ -0,0 +1,14 @@\n+// PR c++/54532\n+// { dg-do compile { target c++11 } }\n+\n+#define SA(X) static_assert(X,#X)\n+\n+struct A {\n+  int i;\n+  constexpr static int A::*p = &A::i;\n+};\n+\n+constexpr A a = { 42 };\n+SA(a.*A::p == 42);\n+\n+constexpr int A::* A::p;"}]}