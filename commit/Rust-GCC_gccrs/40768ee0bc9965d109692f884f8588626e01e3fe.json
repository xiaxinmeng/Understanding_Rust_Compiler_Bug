{"sha": "40768ee0bc9965d109692f884f8588626e01e3fe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDA3NjhlZTBiYzk5NjVkMTA5NjkyZjg4NGY4NTg4NjI2ZTAxZTNmZQ==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2019-07-23T17:20:36Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2019-07-23T17:20:36Z"}, "message": "compiler: use correct value type in 2-case select send\n    \n    In the channel-send case, the value to be sent may needs an\n    (implicit) type conversion to the channel element type. This CL\n    ensures that we use the correct value type for the send.\n    \n    Fixes golang/go#33235.\n    \n    Reviewed-on: https://go-review.googlesource.com/c/gofrontend/+/187177\n\nFrom-SVN: r273743", "tree": {"sha": "0ca33f701cbac984f561bacd9fef3701d8c76eda", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0ca33f701cbac984f561bacd9fef3701d8c76eda"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/40768ee0bc9965d109692f884f8588626e01e3fe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40768ee0bc9965d109692f884f8588626e01e3fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40768ee0bc9965d109692f884f8588626e01e3fe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40768ee0bc9965d109692f884f8588626e01e3fe/comments", "author": null, "committer": null, "parents": [{"sha": "9bf40084738e155bf69ab7215a69f74d589931d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9bf40084738e155bf69ab7215a69f74d589931d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9bf40084738e155bf69ab7215a69f74d589931d1"}], "stats": {"total": 7, "additions": 4, "deletions": 3}, "files": [{"sha": "ba7282efde459375131829217ee89debddaec54c", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40768ee0bc9965d109692f884f8588626e01e3fe/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40768ee0bc9965d109692f884f8588626e01e3fe/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=40768ee0bc9965d109692f884f8588626e01e3fe", "patch": "@@ -1,4 +1,4 @@\n-b7bce0dbccb978d33eb8ce0bffc02fae2c2857c1\n+480477ca64c3001b9c7e92ef8b978dc92a5912d2\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "6d9c0eb2414e26eb2ff31ba6ef191a03014cc7b3", "filename": "gcc/go/gofrontend/statements.cc", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40768ee0bc9965d109692f884f8588626e01e3fe/gcc%2Fgo%2Fgofrontend%2Fstatements.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40768ee0bc9965d109692f884f8588626e01e3fe/gcc%2Fgo%2Fgofrontend%2Fstatements.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fstatements.cc?ref=40768ee0bc9965d109692f884f8588626e01e3fe", "patch": "@@ -5880,6 +5880,7 @@ Select_statement::lower_two_case(Block* b)\n      : this->clauses_->at(1));\n   Location loc = this->location();\n   Expression* chan = chancase.channel();\n+  Type* valtype = chan->type()->channel_type()->element_type();\n \n   Temporary_statement* chantmp = Statement::make_temporary(NULL, chan, loc);\n   b->add_statement(chantmp);\n@@ -5891,7 +5892,8 @@ Select_statement::lower_two_case(Block* b)\n     {\n       // if selectnbsend(chan, &val) { body } else { default body }\n \n-      Temporary_statement* ts = Statement::make_temporary(NULL, chancase.val(), loc);\n+      Temporary_statement* ts =\n+        Statement::make_temporary(valtype, chancase.val(), loc);\n       // Tell the escape analysis that the value escapes, as it may be sent\n       // to a channel.\n       ts->set_value_escapes();\n@@ -5904,7 +5906,6 @@ Select_statement::lower_two_case(Block* b)\n     }\n   else\n     {\n-      Type* valtype = chan->type()->channel_type()->element_type();\n       Temporary_statement* ts = Statement::make_temporary(valtype, NULL, loc);\n       b->add_statement(ts);\n "}]}