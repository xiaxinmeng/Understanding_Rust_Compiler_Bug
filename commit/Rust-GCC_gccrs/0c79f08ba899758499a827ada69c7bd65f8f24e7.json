{"sha": "0c79f08ba899758499a827ada69c7bd65f8f24e7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGM3OWYwOGJhODk5NzU4NDk5YTgyN2FkYTY5YzdiZDY1ZjhmMjRlNw==", "commit": {"author": {"name": "H.J. Lu", "email": "hjl@gnu.org", "date": "2003-04-24T17:23:57Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2003-04-24T17:23:57Z"}, "message": "ia64.c (ia64_init_builtins): Add si_ftype_pdi_di_di for __sync_bool_compare_and_swap_di for int return type.\n\n2003-04-24  H.J. Lu <hjl@gnu.org>\n\n\t* config/ia64/ia64.c (ia64_init_builtins): Add si_ftype_pdi_di_di\n\tfor __sync_bool_compare_and_swap_di for int return type.\n\n\t* config/ia64/ia64intrin.h (__sync_bool_compare_and_swap_di):\n\tChange return type to int.\n\t(__sync_bool_compare_and_swap): Likewise.\n\nFrom-SVN: r66042", "tree": {"sha": "93fce1d439325d845a90d552b9ad518ff40ed7c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/93fce1d439325d845a90d552b9ad518ff40ed7c6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0c79f08ba899758499a827ada69c7bd65f8f24e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c79f08ba899758499a827ada69c7bd65f8f24e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0c79f08ba899758499a827ada69c7bd65f8f24e7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c79f08ba899758499a827ada69c7bd65f8f24e7/comments", "author": null, "committer": null, "parents": [{"sha": "f89862751006da3e7b6acebfab32c9f21d8ee41f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f89862751006da3e7b6acebfab32c9f21d8ee41f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f89862751006da3e7b6acebfab32c9f21d8ee41f"}], "stats": {"total": 26, "additions": 19, "deletions": 7}, "files": [{"sha": "0de008ca108e67ec8086e3cba9e55a4fea2b5852", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c79f08ba899758499a827ada69c7bd65f8f24e7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c79f08ba899758499a827ada69c7bd65f8f24e7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0c79f08ba899758499a827ada69c7bd65f8f24e7", "patch": "@@ -1,3 +1,12 @@\n+2003-04-24  H.J. Lu <hjl@gnu.org>\n+\n+\t* config/ia64/ia64.c (ia64_init_builtins): Add si_ftype_pdi_di_di\n+\tfor __sync_bool_compare_and_swap_di for int return type.\n+\n+\t* config/ia64/ia64intrin.h (__sync_bool_compare_and_swap_di):\n+\tChange return type to int.\n+\t(__sync_bool_compare_and_swap): Likewise.\n+\n Thu Apr 24 16:55:26 CEST 2003  Jan Hubicka  <jh@suse.cz>\n \n \t* cfgbuild.c (make_edges):  Do not use next_nonnote_insn when"}, {"sha": "7eb3d2aed1fda19b7079defa156e30cf005eb5c6", "filename": "gcc/config/ia64/ia64.c", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c79f08ba899758499a827ada69c7bd65f8f24e7/gcc%2Fconfig%2Fia64%2Fia64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c79f08ba899758499a827ada69c7bd65f8f24e7/gcc%2Fconfig%2Fia64%2Fia64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.c?ref=0c79f08ba899758499a827ada69c7bd65f8f24e7", "patch": "@@ -7730,11 +7730,16 @@ ia64_init_builtins ()\n \t\t\t\tpsi_type_node, integer_type_node,\n \t\t\t\tinteger_type_node, NULL_TREE);\n \n-  /* __sync_val_compare_and_swap_di, __sync_bool_compare_and_swap_di */\n+  /* __sync_val_compare_and_swap_di */\n   tree di_ftype_pdi_di_di\n     = build_function_type_list (long_integer_type_node,\n \t\t\t\tpdi_type_node, long_integer_type_node,\n \t\t\t\tlong_integer_type_node, NULL_TREE);\n+  /* __sync_bool_compare_and_swap_di */\n+  tree si_ftype_pdi_di_di\n+    = build_function_type_list (integer_type_node,\n+\t\t\t\tpdi_type_node, long_integer_type_node,\n+\t\t\t\tlong_integer_type_node, NULL_TREE);\n   /* __sync_synchronize */\n   tree void_ftype_void\n     = build_function_type (void_type_node, void_list_node);\n@@ -7767,7 +7772,7 @@ ia64_init_builtins ()\n \t       IA64_BUILTIN_VAL_COMPARE_AND_SWAP_DI);\n   def_builtin (\"__sync_bool_compare_and_swap_si\", si_ftype_psi_si_si,\n \t       IA64_BUILTIN_BOOL_COMPARE_AND_SWAP_SI);\n-  def_builtin (\"__sync_bool_compare_and_swap_di\", di_ftype_pdi_di_di,\n+  def_builtin (\"__sync_bool_compare_and_swap_di\", si_ftype_pdi_di_di,\n \t       IA64_BUILTIN_BOOL_COMPARE_AND_SWAP_DI);\n \n   def_builtin (\"__sync_synchronize\", void_ftype_void,"}, {"sha": "262dc20e4d07dc389b2b795b4095d93b4581b1ea", "filename": "gcc/config/ia64/ia64intrin.h", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c79f08ba899758499a827ada69c7bd65f8f24e7/gcc%2Fconfig%2Fia64%2Fia64intrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c79f08ba899758499a827ada69c7bd65f8f24e7/gcc%2Fconfig%2Fia64%2Fia64intrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64intrin.h?ref=0c79f08ba899758499a827ada69c7bd65f8f24e7", "patch": "@@ -19,13 +19,11 @@ extern long __sync_val_compare_and_swap_di (long *, long, long);\n     __sync_val_compare_and_swap_di((long *)(PTR),(long)(OLD),(long)(NEW)))\n \n extern int __sync_bool_compare_and_swap_si (int *, int, int);\n-extern long __sync_bool_compare_and_swap_di (long *, long, long);\n+extern int __sync_bool_compare_and_swap_di (long *, long, long);\n #define __sync_bool_compare_and_swap(PTR, OLD, NEW)\t\t\t\\\n  ((sizeof (*(PTR)) == sizeof(int))\t\t\t\t\t\\\n-  ? (__typeof__(*(PTR)))\t\t\t\t\t\t\\\n-    __sync_bool_compare_and_swap_si((int *)(PTR),(int)(OLD),(int)(NEW))\t\\\n-  : (__typeof__(*(PTR)))\t\t\t\t\t\t\\\n-    __sync_bool_compare_and_swap_di((long *)(PTR),(long)(OLD),(long)(NEW)))\n+  ? __sync_bool_compare_and_swap_si((int *)(PTR),(int)(OLD),(int)(NEW))\t\\\n+  : __sync_bool_compare_and_swap_di((long *)(PTR),(long)(OLD),(long)(NEW)))\n \n extern void __sync_lock_release_si (int *);\n extern void __sync_lock_release_di (long *);"}]}