{"sha": "0bdece8adf080003a7698ce3cf1ccf680f0c1efa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGJkZWNlOGFkZjA4MDAwM2E3Njk4Y2UzY2YxY2NmNjgwZjBjMWVmYQ==", "commit": {"author": {"name": "Richard Earnshaw", "email": "erich@gnu.org", "date": "1994-06-24T19:51:26Z"}, "committer": {"name": "Richard Earnshaw", "email": "erich@gnu.org", "date": "1994-06-24T19:51:26Z"}, "message": "(movstrsi): Delete.\n\n(movstrqi): New expand.\n\nFrom-SVN: r7559", "tree": {"sha": "0a30f8e02810a546b790b1fb113a7387beac9067", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0a30f8e02810a546b790b1fb113a7387beac9067"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0bdece8adf080003a7698ce3cf1ccf680f0c1efa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0bdece8adf080003a7698ce3cf1ccf680f0c1efa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0bdece8adf080003a7698ce3cf1ccf680f0c1efa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0bdece8adf080003a7698ce3cf1ccf680f0c1efa/comments", "author": null, "committer": null, "parents": [{"sha": "880e25163fe9f3e5e45b41c04b9578530f38ee28", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/880e25163fe9f3e5e45b41c04b9578530f38ee28", "html_url": "https://github.com/Rust-GCC/gccrs/commit/880e25163fe9f3e5e45b41c04b9578530f38ee28"}], "stats": {"total": 93, "additions": 8, "deletions": 85}, "files": [{"sha": "57b8f2a946c26aca1cbd0b0199ee0aed33910c3c", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 8, "deletions": 85, "changes": 93, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0bdece8adf080003a7698ce3cf1ccf680f0c1efa/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0bdece8adf080003a7698ce3cf1ccf680f0c1efa/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=0bdece8adf080003a7698ce3cf1ccf680f0c1efa", "patch": "@@ -2574,93 +2574,16 @@\n ;; We could let this apply for blocks of less than this, but it clobbers so\n ;; many registers that there is then probably a better way.\n \n-;; If optimizing, output redundant moves with REG_NOTES on them, this \n-;; produces better code.\n-\n-(define_expand \"movstrsi\"\n-  [(set (match_operand:BLK 0 \"general_operand\" \"=m\")\n-        (match_operand:BLK 1 \"general_operand\" \"m\"))\n-   (use (match_operand:SI 2 \"immediate_operand\" \"n\"))\n-   (use (match_operand:SI 3 \"immediate_operand\" \"n\"))\n-   (clobber (reg:SI 0))\n-   (clobber (reg:SI 1))\n-   (clobber (reg:SI 2))\n-   (clobber (reg:SI 3))\n-   (clobber (match_scratch:SI 4 \"=+r\"))\n-   (clobber (match_scratch:SI 5 \"=+r\"))]\n+(define_expand \"movstrqi\"\n+  [(match_operand:BLK 0 \"general_operand\" \"\")\n+   (match_operand:BLK 1 \"general_operand\" \"\")\n+   (match_operand:SI 2 \"const_int_operand\" \"\")\n+   (match_operand:SI 3 \"const_int_operand\" \"\")]\n   \"\"\n   \"\n-{\n-  int words_to_go;\n-  int i, r;\n-  rtx const_sxteen = gen_rtx (CONST_INT, SImode, 16);\n-  rtx src = gen_reg_rtx (SImode);\n-  rtx dst = gen_reg_rtx (SImode);\n-  rtx st_src, st_dst, end_src, end_dst, fin_src, fin_dst;\n-  extern int optimize;\n-\n-  if (GET_CODE (operands[2]) != CONST_INT\n-      || GET_CODE (operands[3]) != CONST_INT\n-      || INTVAL (operands[2]) % 4 != 0\n-      || INTVAL (operands[2]) < 4\n-      || INTVAL (operands[2]) > 64\n-      || INTVAL (operands[3]) < 4\n-      || INTVAL (operands[3]) % 4 != 0)\n-    FAIL;\n-  emit_move_insn (dst, st_dst = force_reg (SImode, XEXP (operands[0], 0)));\n-  emit_move_insn (src, st_src = force_reg (SImode, XEXP (operands[1], 0)));\n-  fin_src = src;\n-  fin_dst = dst;\n-\n-  for (i = 0, words_to_go = INTVAL (operands[2]) / 4; words_to_go >= 2; i+=4)\n-    {\n-      emit_insn (arm_gen_load_multiple (0, words_to_go > 4 ? 4 : words_to_go,\n-                                        src, TRUE, TRUE));\n-      emit_insn (arm_gen_store_multiple (0, words_to_go > 4 ? 4 : words_to_go,\n-                                        dst, TRUE, TRUE));\n-      if (optimize)\n-        for (r = (words_to_go > 4) ? 3 : words_to_go - 1; r >= 0; r--)\n-          {\n-            rtx note;\n-            note = emit_move_insn (gen_reg_rtx (SImode),\n-                                   gen_rtx (REG, SImode, r));\n-            REG_NOTES (note) = gen_rtx (EXPR_LIST, REG_EQUIV,\n-                                        gen_rtx (MEM, SImode,\n-                                              plus_constant (st_src, 4*(i+r))),\n-                                        REG_NOTES (note));\n-            REG_NOTES (note) = gen_rtx (EXPR_LIST, REG_EQUIV,\n-                                        gen_rtx (MEM, SImode,\n-                                              plus_constant (st_dst, 4*(i+r))),\n-                                        REG_NOTES (note));\n-          }\n-      words_to_go -= words_to_go < 4 ? words_to_go : 4;\n-    }\n-  if (words_to_go)\n-  {\n-    rtx sreg;\n-\n-    emit_move_insn (sreg = gen_reg_rtx (SImode), gen_rtx (MEM, SImode, src));\n-    emit_move_insn (fin_src = gen_reg_rtx (SImode), plus_constant (src, 4));\n-    emit_move_insn (gen_rtx (MEM, SImode, dst), sreg);\n-    emit_move_insn (fin_dst = gen_reg_rtx (SImode), plus_constant (dst, 4));\n-  }\n-  if (optimize)\n-    {\n-      /* Insns for the REG_NOTES: These notes tell the optimiser where the\n-         index registers have got to so that consecutive block moves of\n-         contiguous data work efficiently */\n-\n-      end_src = emit_move_insn (fin_src, fin_src);\n-      REG_NOTES (end_src) = gen_rtx(EXPR_LIST, REG_EQUAL,\n-                                  plus_constant (st_src, INTVAL (operands[2])),\n-                                  REG_NOTES (end_src));\n-      end_dst = emit_move_insn (fin_dst, fin_dst);\n-      REG_NOTES (end_dst) = gen_rtx(EXPR_LIST, REG_EQUAL,\n-                                  plus_constant (st_dst, INTVAL (operands[2])),\n-                                  REG_NOTES (end_dst));\n-    }\n-  DONE;\n-}\n+  if (arm_gen_movstrqi (operands))\n+    DONE;\n+  FAIL;\n \")\n \f\n "}]}