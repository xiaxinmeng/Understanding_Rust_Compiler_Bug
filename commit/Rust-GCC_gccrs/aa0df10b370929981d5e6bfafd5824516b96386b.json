{"sha": "aa0df10b370929981d5e6bfafd5824516b96386b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWEwZGYxMGIzNzA5Mjk5ODFkNWU2YmZhZmQ1ODI0NTE2Yjk2Mzg2Yg==", "commit": {"author": {"name": "Vincent Celier", "email": "celier@adacore.com", "date": "2010-09-09T13:55:34Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-09-09T13:55:34Z"}, "message": "gnat_ugn.texi: Add documentation for new gnatmake switch --create-map-file.\n\n2010-09-09  Vincent Celier  <celier@adacore.com>\n\n\t* gnat_ugn.texi: Add documentation for new gnatmake switch\n\t--create-map-file.\n\t* make.adb (Map_File): New global variable to store the value of switch\n\t--create-map-file.\n\t(Gnatmake): Add switch -M to gnatlink if buider switch --create-map-file\n\thas been specified.\n\t(Scan_Make_Arg): Recognize switch --create-map-file\n\t* makeutl.ads (Create_Map_File_Switch): New constant string for new\n\tgnatmake and gprbuild switch --create-map-file.\n\nFrom-SVN: r164104", "tree": {"sha": "3fd50b8f723e15ae546cc88b013d87e9b0c04719", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3fd50b8f723e15ae546cc88b013d87e9b0c04719"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aa0df10b370929981d5e6bfafd5824516b96386b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa0df10b370929981d5e6bfafd5824516b96386b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa0df10b370929981d5e6bfafd5824516b96386b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa0df10b370929981d5e6bfafd5824516b96386b/comments", "author": {"login": "vcelier", "id": 8888056, "node_id": "MDQ6VXNlcjg4ODgwNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/8888056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vcelier", "html_url": "https://github.com/vcelier", "followers_url": "https://api.github.com/users/vcelier/followers", "following_url": "https://api.github.com/users/vcelier/following{/other_user}", "gists_url": "https://api.github.com/users/vcelier/gists{/gist_id}", "starred_url": "https://api.github.com/users/vcelier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vcelier/subscriptions", "organizations_url": "https://api.github.com/users/vcelier/orgs", "repos_url": "https://api.github.com/users/vcelier/repos", "events_url": "https://api.github.com/users/vcelier/events{/privacy}", "received_events_url": "https://api.github.com/users/vcelier/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "79c3dc5f228cee5f58747deb1efa0b36b99bc41d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79c3dc5f228cee5f58747deb1efa0b36b99bc41d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/79c3dc5f228cee5f58747deb1efa0b36b99bc41d"}], "stats": {"total": 68, "additions": 60, "deletions": 8}, "files": [{"sha": "6822a1756c958c11eb9f485a70aae0e8ae9cb203", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa0df10b370929981d5e6bfafd5824516b96386b/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa0df10b370929981d5e6bfafd5824516b96386b/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=aa0df10b370929981d5e6bfafd5824516b96386b", "patch": "@@ -1,3 +1,15 @@\n+2010-09-09  Vincent Celier  <celier@adacore.com>\n+\n+\t* gnat_ugn.texi: Add documentation for new gnatmake switch\n+\t--create-map-file.\n+\t* make.adb (Map_File): New global variable to store the value of switch\n+\t--create-map-file.\n+\t(Gnatmake): Add switch -M to gnatlink if buider switch --create-map-file\n+\thas been specified.\n+\t(Scan_Make_Arg): Recognize switch --create-map-file\n+\t* makeutl.ads (Create_Map_File_Switch): New constant string for new\n+\tgnatmake and gprbuild switch --create-map-file.\n+\n 2010-09-09  Robert Dewar  <dewar@adacore.com>\n \n \t* sinput-p.ads: Minor comment update."}, {"sha": "180169ef1017c7cf27ae6dfe591e3af640052db7", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 20, "deletions": 8, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa0df10b370929981d5e6bfafd5824516b96386b/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa0df10b370929981d5e6bfafd5824516b96386b/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=aa0df10b370929981d5e6bfafd5824516b96386b", "patch": "@@ -1778,8 +1778,8 @@ of the compiler (@pxref{Character Set Control}).\n @noindent\n The basic character set is Latin-1. This character set is defined by ISO\n standard 8859, part 1. The lower half (character codes @code{16#00#}\n-@dots{} @code{16#7F#)} is identical to standard ASCII coding, but the upper half\n-is used to represent additional characters. These include extended letters\n+@dots{} @code{16#7F#)} is identical to standard ASCII coding, but the upper\n+half is used to represent additional characters. These include extended letters\n used by European languages, such as French accents, the vowels with umlauts\n used in German, and the extra letter A-ring used in Swedish.\n \n@@ -3823,7 +3823,8 @@ compiled.\n \n @cindex cannot generate code\n If you attempt to compile any of these files, you will get one of the\n-following error messages (where @var{fff} is the name of the file you compiled):\n+following error messages (where @var{fff} is the name of the file you\n+compiled):\n \n @smallexample\n cannot generate code for file @var{fff} (package spec)\n@@ -9253,6 +9254,17 @@ By default, shared library projects are not allowed to import static library\n projects. When this switch is used on the command line, this restriction is\n relaxed.\n \n+@ifclear vms\n+@item --create-map-file\n+When linking an executable, create a map file. The name of the map file\n+has the same name as the executable with extension \".map\".\n+\n+@item --create-map-file=mapfile\n+When linking an executable, create a map file. The name of the map file is\n+\"mapfile\".\n+\n+@end ifclear\n+\n @item ^-a^/ALL_FILES^\n @cindex @option{^-a^/ALL_FILES^} (@command{gnatmake})\n Consider all files in the make process, even the GNAT internal system\n@@ -18647,9 +18659,9 @@ gnatmake -f -pg -P my_project\n @end smallexample\n \n @noindent\n-Note that only the objects that were compiled with the @samp{-pg} switch will be\n-profiled; if you need to profile your whole project, use the\n-@samp{-f} gnatmake switch to force full recompilation.\n+Note that only the objects that were compiled with the @samp{-pg} switch will\n+be profiled; if you need to profile your whole project, use the @samp{-f}\n+gnatmake switch to force full recompilation.\n \n @node Program execution\n @subsection Program execution\n@@ -24879,8 +24891,8 @@ Note that in this approach, both declarations are analyzed by the\n compiler so this can only be used where both declarations are legal,\n even though one of them will not be used.\n \n-Another approach is to define integer constants, e.g.@: @code{Bits_Per_Word}, or\n-Boolean constants, e.g.@: @code{Little_Endian}, and then write declarations\n+Another approach is to define integer constants, e.g.@: @code{Bits_Per_Word},\n+or Boolean constants, e.g.@: @code{Little_Endian}, and then write declarations\n that are parameterized by these constants. For example\n \n @smallexample @c ada"}, {"sha": "16f1d40a34ad1c15d9b82063563cf23bfc4e217b", "filename": "gcc/ada/make.adb", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa0df10b370929981d5e6bfafd5824516b96386b/gcc%2Fada%2Fmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa0df10b370929981d5e6bfafd5824516b96386b/gcc%2Fada%2Fmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.adb?ref=aa0df10b370929981d5e6bfafd5824516b96386b", "patch": "@@ -353,6 +353,9 @@ package body Make is\n    --  calling Change_Dir if the current working directory is already this\n    --  directory.\n \n+   Map_File : String_Access := null;\n+   --  Value of switch --create-map-file\n+\n    --  Packages of project files where unknown attributes are errors\n \n    Naming_String   : aliased String := \"naming\";\n@@ -6254,6 +6257,15 @@ package body Make is\n                   end;\n                end if;\n \n+               --  Add switch -M to gnatlink if buider switch --create-map-file\n+               --  has been specified.\n+\n+               if Map_File /= null then\n+                  Linker_Switches.Increment_Last;\n+                  Linker_Switches.Table (Linker_Switches.Last) :=\n+                    new String'(\"-M\" & Map_File.all);\n+               end if;\n+\n                declare\n                   Args : Argument_List\n                            (Linker_Switches.First .. Linker_Switches.Last + 2);\n@@ -8121,6 +8133,19 @@ package body Make is\n             Add_Switch (Argv, Compiler, And_Save => And_Save);\n             Add_Switch (Argv, Linker,   And_Save => And_Save);\n \n+         elsif Argv = Create_Map_File_Switch then\n+            Map_File := new String'(\"\");\n+\n+         elsif Argv'Length > Create_Map_File_Switch'Length + 1\n+           and then\n+             Argv (1 .. Create_Map_File_Switch'Length) = Create_Map_File_Switch\n+           and then\n+             Argv (Create_Map_File_Switch'Length + 1) = '='\n+         then\n+            Map_File :=\n+              new String'\n+                (Argv (Create_Map_File_Switch'Length + 2 .. Argv'Last));\n+\n          else\n             Scan_Make_Switches (Project_Node_Tree, Argv, Success);\n          end if;"}, {"sha": "f1557a5a3344a9f609e87f4b930e289b758d7e12", "filename": "gcc/ada/makeutl.ads", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa0df10b370929981d5e6bfafd5824516b96386b/gcc%2Fada%2Fmakeutl.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa0df10b370929981d5e6bfafd5824516b96386b/gcc%2Fada%2Fmakeutl.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmakeutl.ads?ref=aa0df10b370929981d5e6bfafd5824516b96386b", "patch": "@@ -57,6 +57,9 @@ package Makeutl is\n    --  Switch to forbid simultaneous compilations for the same object directory\n    --  when project files are used.\n \n+   Create_Map_File_Switch : constant String := \"--create-map-file\";\n+   --  Switch to create a map file when an executable is linked\n+\n    procedure Add\n      (Option : String_Access;\n       To     : in out String_List_Access;"}]}