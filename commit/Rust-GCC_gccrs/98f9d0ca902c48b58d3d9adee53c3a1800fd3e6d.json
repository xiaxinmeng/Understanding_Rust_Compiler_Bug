{"sha": "98f9d0ca902c48b58d3d9adee53c3a1800fd3e6d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OThmOWQwY2E5MDJjNDhiNThkM2Q5YWRlZTUzYzNhMTgwMGZkM2U2ZA==", "commit": {"author": {"name": "Georg-Johann Lay", "email": "avr@gjlay.de", "date": "2017-07-05T13:57:28Z"}, "committer": {"name": "Georg-Johann Lay", "email": "gjl@gcc.gnu.org", "date": "2017-07-05T13:57:28Z"}, "message": "Graceful degrade if Binutils PR21472 is not available.\n\ngcc/\n\tGraceful degrade if Binutils PR21472 is not available.\n\tPR target/81072\n\t* configure.ac [target=avr]: WARN instead of ERROR if avrxmega3\n\t.rodata in flash test fails.\n\t(HAVE_LD_AVR_AVRXMEGA3_RODATA_IN_FLASH): Define it if test passes.\n\t* confgure: Regenerate.\n\t* config.in: Regenerate.\n\t* config/avr/avr.c (avr_asm_named_section)\n\t[HAVE_LD_AVR_AVRXMEGA3_RODATA_IN_FLASH]: Only trigger\n\t__do_copy_data for stuff in .rodata if flash_pm_offset = 0.\n\t(avr_asm_init_sections): Same.\n\nFrom-SVN: r250000", "tree": {"sha": "b40fcdc59b02e071b810915d50a83ea9a4ea7524", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b40fcdc59b02e071b810915d50a83ea9a4ea7524"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/98f9d0ca902c48b58d3d9adee53c3a1800fd3e6d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98f9d0ca902c48b58d3d9adee53c3a1800fd3e6d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/98f9d0ca902c48b58d3d9adee53c3a1800fd3e6d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98f9d0ca902c48b58d3d9adee53c3a1800fd3e6d/comments", "author": null, "committer": {"login": "sprintersb", "id": 8905355, "node_id": "MDQ6VXNlcjg5MDUzNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/8905355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sprintersb", "html_url": "https://github.com/sprintersb", "followers_url": "https://api.github.com/users/sprintersb/followers", "following_url": "https://api.github.com/users/sprintersb/following{/other_user}", "gists_url": "https://api.github.com/users/sprintersb/gists{/gist_id}", "starred_url": "https://api.github.com/users/sprintersb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sprintersb/subscriptions", "organizations_url": "https://api.github.com/users/sprintersb/orgs", "repos_url": "https://api.github.com/users/sprintersb/repos", "events_url": "https://api.github.com/users/sprintersb/events{/privacy}", "received_events_url": "https://api.github.com/users/sprintersb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e60226ffa0cc0eff39141a4954a506484c17fda4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e60226ffa0cc0eff39141a4954a506484c17fda4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e60226ffa0cc0eff39141a4954a506484c17fda4"}], "stats": {"total": 56, "additions": 43, "deletions": 13}, "files": [{"sha": "5e1eecde4488fcfb02951338c420fb43e741a9ff", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98f9d0ca902c48b58d3d9adee53c3a1800fd3e6d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98f9d0ca902c48b58d3d9adee53c3a1800fd3e6d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=98f9d0ca902c48b58d3d9adee53c3a1800fd3e6d", "patch": "@@ -1,3 +1,18 @@\n+2017-07-05  Georg-Johann Lay  <avr@gjlay.de>\n+\n+\tGraceful degrade if Binutils PR21472 is not available.\n+\n+\tPR target/81072\n+\t* configure.ac [target=avr]: WARN instead of ERROR if avrxmega3\n+\t.rodata in flash test fails.\n+\t(HAVE_LD_AVR_AVRXMEGA3_RODATA_IN_FLASH): Define it if test passes.\n+\t* confgure: Regenerate.\n+\t* config.in: Regenerate.\n+\t* config/avr/avr.c (avr_asm_named_section)\n+\t[HAVE_LD_AVR_AVRXMEGA3_RODATA_IN_FLASH]: Only trigger\n+\t__do_copy_data for stuff in .rodata if flash_pm_offset = 0.\n+\t(avr_asm_init_sections): Same.\n+\n 2017-07-05  Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>\n \n \t* config/arm/neon.md (fma<VCVTF:mode>4): Remove %?."}, {"sha": "44c7a68eaa8f8a1bb376450a3c852d60df69a71d", "filename": "gcc/config.in", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98f9d0ca902c48b58d3d9adee53c3a1800fd3e6d/gcc%2Fconfig.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98f9d0ca902c48b58d3d9adee53c3a1800fd3e6d/gcc%2Fconfig.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.in?ref=98f9d0ca902c48b58d3d9adee53c3a1800fd3e6d", "patch": "@@ -1460,6 +1460,13 @@\n #endif\n \n \n+/* Define if your default avr linker script for avrxmega3 leaves .rodata in\n+   flash. */\n+#ifndef USED_FOR_TARGET\n+#undef HAVE_LD_AVR_AVRXMEGA3_RODATA_IN_FLASH\n+#endif\n+\n+\n /* Define if your linker supports -z bndplt */\n #ifndef USED_FOR_TARGET\n #undef HAVE_LD_BNDPLT_SUPPORT"}, {"sha": "ba35b9e15424f39475dafe273254f9dff213e597", "filename": "gcc/config/avr/avr.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98f9d0ca902c48b58d3d9adee53c3a1800fd3e6d/gcc%2Fconfig%2Favr%2Favr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98f9d0ca902c48b58d3d9adee53c3a1800fd3e6d/gcc%2Fconfig%2Favr%2Favr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.c?ref=98f9d0ca902c48b58d3d9adee53c3a1800fd3e6d", "patch": "@@ -10000,7 +10000,9 @@ avr_asm_init_sections (void)\n      resp. `avr_need_copy_data_p'.  If flash is not mapped to RAM then\n      we have also to track .rodata because it is located in RAM then.  */\n \n+#if defined HAVE_LD_AVR_AVRXMEGA3_RODATA_IN_FLASH\n   if (0 == avr_arch->flash_pm_offset)\n+#endif\n     readonly_data_section->unnamed.callback = avr_output_data_section_asm_op;\n   data_section->unnamed.callback = avr_output_data_section_asm_op;\n   bss_section->unnamed.callback = avr_output_bss_section_asm_op;\n@@ -10036,7 +10038,10 @@ avr_asm_named_section (const char *name, unsigned int flags, tree decl)\n                             || STR_PREFIX_P (name, \".gnu.linkonce.d\"));\n \n   if (!avr_need_copy_data_p\n-      && 0 == avr_arch->flash_pm_offset)\n+#if defined HAVE_LD_AVR_AVRXMEGA3_RODATA_IN_FLASH\n+      && 0 == avr_arch->flash_pm_offset\n+#endif\n+      )\n     avr_need_copy_data_p = (STR_PREFIX_P (name, \".rodata\")\n                             || STR_PREFIX_P (name, \".gnu.linkonce.r\"));\n "}, {"sha": "4c5900fc1ba45ff75cc4f8732564c36aa8d20dbe", "filename": "gcc/configure", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98f9d0ca902c48b58d3d9adee53c3a1800fd3e6d/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98f9d0ca902c48b58d3d9adee53c3a1800fd3e6d/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=98f9d0ca902c48b58d3d9adee53c3a1800fd3e6d", "patch": "@@ -24851,29 +24851,32 @@ EOF\n   ac_status=$?\n   $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n   test $ac_status = 0; }; }\n-    if test -f conftest.nm\n+    if test -s conftest.nm\n     then\n \tif grep ' R xxvaryy' conftest.nm > /dev/null; then\n \t    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n $as_echo \"yes\" >&6; }\n-\t    rm -f conftest.s conftest.o conftest.elf conftest.nm\n+\n+$as_echo \"#define HAVE_LD_AVR_AVRXMEGA3_RODATA_IN_FLASH 1\" >>confdefs.h\n+\n \telse\n \t    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no: avrxmega3 .rodata located in RAM\" >&5\n $as_echo \"no: avrxmega3 .rodata located in RAM\" >&6; }\n \t    echo \"$as_me: nm output was\" >&5\n \t    cat conftest.nm >&5\n-\t    rm -f conftest.s conftest.o conftest.elf conftest.nm\n \t    avr_ld_ver=\"`$gcc_cv_ld -v | sed -e 's:^.* ::'`\"\n-\t    as_fn_error \"support for avrxmega3 needs Binutils 2.29 or higher (have $avr_ld_ver)\" \"$LINENO\" 5\n+\t    { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: support for avrxmega3 .rodata in flash needs Binutils 2.29 or higher (have $avr_ld_ver)\" >&5\n+$as_echo \"$as_me: WARNING: support for avrxmega3 .rodata in flash needs Binutils 2.29 or higher (have $avr_ld_ver)\" >&2;}\n \tfi\n     else\n \t{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: test failed\" >&5\n $as_echo \"test failed\" >&6; }\n \techo \"$as_me: failed program was\" >&5\n \tcat conftest.s >&5\n-\trm -f conftest.s conftest.o conftest.elf\n-\tas_fn_error \"see \\`config.log' for details\" \"$LINENO\" 5\n+\t{ $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: see \\`config.log' for details\" >&5\n+$as_echo \"$as_me: WARNING: see \\`config.log' for details\" >&2;}\n     fi\n+    rm -f conftest.s conftest.o conftest.elf conftest.nm\n     ;;\n \n   cris-*-*)"}, {"sha": "f50223a70bae9c2e3add95accb1665cdea46009d", "filename": "gcc/configure.ac", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98f9d0ca902c48b58d3d9adee53c3a1800fd3e6d/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98f9d0ca902c48b58d3d9adee53c3a1800fd3e6d/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=98f9d0ca902c48b58d3d9adee53c3a1800fd3e6d", "patch": "@@ -3832,26 +3832,26 @@ EOF\n     AC_TRY_COMMAND([$gcc_cv_as -mmcu=avrxmega3 conftest.s -o conftest.o])\n     AC_TRY_COMMAND([$gcc_cv_ld -mavrxmega3 conftest.o -o conftest.elf])\n     AC_TRY_COMMAND([$gcc_cv_nm conftest.elf > conftest.nm])\n-    if test -f conftest.nm\n+    if test -s conftest.nm\n     then\n \tif grep ' R xxvaryy' conftest.nm > /dev/null; then\n \t    AC_MSG_RESULT(yes)\n-\t    rm -f conftest.s conftest.o conftest.elf conftest.nm\n+\t    AC_DEFINE(HAVE_LD_AVR_AVRXMEGA3_RODATA_IN_FLASH, 1,\n+\t\t[Define if your default avr linker script for avrxmega3 leaves .rodata in flash.])\n \telse\n \t    AC_MSG_RESULT(no: avrxmega3 .rodata located in RAM)\n \t    echo \"$as_me: nm output was\" >&AS_MESSAGE_LOG_FD\n \t    cat conftest.nm >&AS_MESSAGE_LOG_FD\n-\t    rm -f conftest.s conftest.o conftest.elf conftest.nm\n \t    avr_ld_ver=\"`$gcc_cv_ld -v | sed -e 's:^.* ::'`\"\n-\t    AC_MSG_ERROR([[support for avrxmega3 needs Binutils 2.29 or higher (have $avr_ld_ver)]])\n+\t    AC_MSG_WARN([[support for avrxmega3 .rodata in flash needs Binutils 2.29 or higher (have $avr_ld_ver)]])\n \tfi\n     else\n \tAC_MSG_RESULT(test failed)\n \techo \"$as_me: failed program was\" >&AS_MESSAGE_LOG_FD\n \tcat conftest.s >&AS_MESSAGE_LOG_FD\n-\trm -f conftest.s conftest.o conftest.elf\n-\tAC_MSG_ERROR([[see `config.log' for details]])\n+\tAC_MSG_WARN([[see `config.log' for details]])\n     fi\n+    rm -f conftest.s conftest.o conftest.elf conftest.nm\n     ;;\n \n   cris-*-*)"}]}