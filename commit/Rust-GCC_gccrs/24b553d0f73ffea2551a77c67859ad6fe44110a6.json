{"sha": "24b553d0f73ffea2551a77c67859ad6fe44110a6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjRiNTUzZDBmNzNmZmVhMjU1MWE3N2M2Nzg1OWFkNmZlNDQxMTBhNg==", "commit": {"author": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2020-11-06T08:18:06Z"}, "committer": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2020-11-24T09:28:04Z"}, "message": "[testsuite] Enable column location checking for 'dg-optimized', 'dg-missed'\n\n'process-message' would like the 'msgprefix' argument without trailing space.\n\nThis is a small bug-fix for commit ed2d9d3720adef3a260b8a55e17e744352a901fc\n\"dumpfile.c: use prefixes other than 'note: ' for\nMSG_{OPTIMIZED_LOCATIONS|MISSED_OPTIMIZATION}\", which added 'dg-optimized',\n'dg-missed'.\n\n\tgcc/testsuite/\n\t* lib/gcc-dg.exp (dg-optimized, dg-missed): Fix 'process-message'\n\tcall.\n\t* gcc.dg/vect/nodump-vect-opt-info-1.c: Demonstrate.\n\t* gcc.dg/vect/nodump-vect-opt-info-2.c: Likewise.", "tree": {"sha": "fde289b8d445e0ad3582fae460e59b6b01a9bd40", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fde289b8d445e0ad3582fae460e59b6b01a9bd40"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/24b553d0f73ffea2551a77c67859ad6fe44110a6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24b553d0f73ffea2551a77c67859ad6fe44110a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/24b553d0f73ffea2551a77c67859ad6fe44110a6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24b553d0f73ffea2551a77c67859ad6fe44110a6/comments", "author": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2aaf44a90283156ec0e70ad4d9030f3ba5054c6f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2aaf44a90283156ec0e70ad4d9030f3ba5054c6f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2aaf44a90283156ec0e70ad4d9030f3ba5054c6f"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "6834b9a9d0b9298bea92d0129694e46b4774c878", "filename": "gcc/testsuite/gcc.dg/vect/nodump-vect-opt-info-1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24b553d0f73ffea2551a77c67859ad6fe44110a6/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fnodump-vect-opt-info-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24b553d0f73ffea2551a77c67859ad6fe44110a6/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fnodump-vect-opt-info-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fnodump-vect-opt-info-1.c?ref=24b553d0f73ffea2551a77c67859ad6fe44110a6", "patch": "@@ -5,8 +5,8 @@ void\n vadd (int *dst, int *op1, int *op2, int count)\n {\n /* { dg-prune-output \" version\\[^\\n\\r]* alignment\" } */\n-/* { dg-optimized \"loop vectorized\" \"\" { target *-*-* } .+2 } */\n-/* { dg-optimized \"loop versioned for vectorization because of possible aliasing\" \"\" { target *-*-* } .+1 } */\n+/* { dg-optimized \"21: loop vectorized\" \"\" { target *-*-* } .+2 } */\n+/* { dg-optimized \"21: loop versioned for vectorization because of possible aliasing\" \"\" { target *-*-* } .+1 } */\n   for (int i = 0; i < count; ++i)\n     dst[i] = op1[i] + op2[i];\n }"}, {"sha": "23a3b39fbb321501e703759543f9b6a98106bc97", "filename": "gcc/testsuite/gcc.dg/vect/nodump-vect-opt-info-2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24b553d0f73ffea2551a77c67859ad6fe44110a6/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fnodump-vect-opt-info-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24b553d0f73ffea2551a77c67859ad6fe44110a6/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fnodump-vect-opt-info-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fnodump-vect-opt-info-2.c?ref=24b553d0f73ffea2551a77c67859ad6fe44110a6", "patch": "@@ -6,7 +6,7 @@ extern void accumulate (int x, int *a);\n int test_missing_function_defn (int *arr, int n) /* { dg-message \"vectorized 0 loops in function\" } */\n {\n   int sum = 0;\n-  for (int i = 0; i < n; ++i) /* { dg-missed \"couldn't vectorize loop\" } */\n-    accumulate (arr[i], &sum); /* { dg-missed \"statement clobbers memory: accumulate \\\\(.*\\\\);\" } */\n+  for (int i = 0; i < n; ++i) /* { dg-missed \"21: couldn't vectorize loop\" } */\n+    accumulate (arr[i], &sum); /* { dg-missed \"5: statement clobbers memory: accumulate \\\\(.*\\\\);\" } */\n   return sum;\n }"}, {"sha": "0e1aafec82f4e065b2a1ed5b9e3e1a251b806957", "filename": "gcc/testsuite/lib/gcc-dg.exp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24b553d0f73ffea2551a77c67859ad6fe44110a6/gcc%2Ftestsuite%2Flib%2Fgcc-dg.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24b553d0f73ffea2551a77c67859ad6fe44110a6/gcc%2Ftestsuite%2Flib%2Fgcc-dg.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fgcc-dg.exp?ref=24b553d0f73ffea2551a77c67859ad6fe44110a6", "patch": "@@ -1232,7 +1232,7 @@ proc dg-optimized { args } {\n     # Make this variable available here and to the saved proc.\n     upvar dg-messages dg-messages\n \n-    process-message saved-dg-error \"optimized: \" \"$args\"\n+    process-message saved-dg-error \"optimized:\" \"$args\"\n }\n \n # Handle output from -fopt-info for MSG_MISSED_OPTIMIZATION:\n@@ -1242,7 +1242,7 @@ proc dg-missed { args } {\n     # Make this variable available here and to the saved proc.\n     upvar dg-messages dg-messages\n \n-    process-message saved-dg-error \"missed: \" \"$args\"\n+    process-message saved-dg-error \"missed:\" \"$args\"\n }\n \n # Check the existence of a gdb in the path, and return true if there"}]}