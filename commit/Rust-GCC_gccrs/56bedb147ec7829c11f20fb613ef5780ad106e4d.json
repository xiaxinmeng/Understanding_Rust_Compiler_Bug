{"sha": "56bedb147ec7829c11f20fb613ef5780ad106e4d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTZiZWRiMTQ3ZWM3ODI5YzExZjIwZmI2MTNlZjU3ODBhZDEwNmU0ZA==", "commit": {"author": {"name": "Steve Baird", "email": "baird@adacore.com", "date": "2020-06-26T00:15:50Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-10-16T07:31:31Z"}, "message": "[Ada] Avoid premature finalization of a function result\n\ngcc/ada/\n\n\t* exp_util.adb (Is_Related_To_Func_Return): Cope with the case\n\twhere the FE introduces a type conversion.", "tree": {"sha": "091faf5bd8aef08fab7bb64dabbe57ed0fdd7c5e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/091faf5bd8aef08fab7bb64dabbe57ed0fdd7c5e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/56bedb147ec7829c11f20fb613ef5780ad106e4d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56bedb147ec7829c11f20fb613ef5780ad106e4d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/56bedb147ec7829c11f20fb613ef5780ad106e4d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56bedb147ec7829c11f20fb613ef5780ad106e4d/comments", "author": {"login": "swbaird", "id": 50751052, "node_id": "MDQ6VXNlcjUwNzUxMDUy", "avatar_url": "https://avatars.githubusercontent.com/u/50751052?v=4", "gravatar_id": "", "url": "https://api.github.com/users/swbaird", "html_url": "https://github.com/swbaird", "followers_url": "https://api.github.com/users/swbaird/followers", "following_url": "https://api.github.com/users/swbaird/following{/other_user}", "gists_url": "https://api.github.com/users/swbaird/gists{/gist_id}", "starred_url": "https://api.github.com/users/swbaird/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/swbaird/subscriptions", "organizations_url": "https://api.github.com/users/swbaird/orgs", "repos_url": "https://api.github.com/users/swbaird/repos", "events_url": "https://api.github.com/users/swbaird/events{/privacy}", "received_events_url": "https://api.github.com/users/swbaird/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d931c94ea2048db6a85e9f1685404c2d210eef4a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d931c94ea2048db6a85e9f1685404c2d210eef4a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d931c94ea2048db6a85e9f1685404c2d210eef4a"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "269c9e05f50929cf8eef17cc7e5ad5bfe9262fb5", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56bedb147ec7829c11f20fb613ef5780ad106e4d/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56bedb147ec7829c11f20fb613ef5780ad106e4d/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=56bedb147ec7829c11f20fb613ef5780ad106e4d", "patch": "@@ -8740,9 +8740,14 @@ package body Exp_Util is\n    function Is_Related_To_Func_Return (Id : Entity_Id) return Boolean is\n       Expr : constant Node_Id := Related_Expression (Id);\n    begin\n+      --  In the case of a function with a class-wide result that returns\n+      --  a call to a function with a specific result, we introduce a\n+      --  type conversion for the return expression. We do not want that\n+      --  type conversion to influence the result of this function.\n+\n       return\n         Present (Expr)\n-          and then Nkind (Expr) = N_Explicit_Dereference\n+          and then Nkind (Unqual_Conv (Expr)) = N_Explicit_Dereference\n           and then Nkind (Parent (Expr)) = N_Simple_Return_Statement;\n    end Is_Related_To_Func_Return;\n "}]}