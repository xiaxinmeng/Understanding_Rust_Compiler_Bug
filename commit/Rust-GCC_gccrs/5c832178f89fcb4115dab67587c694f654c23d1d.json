{"sha": "5c832178f89fcb4115dab67587c694f654c23d1d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWM4MzIxNzhmODlmY2I0MTE1ZGFiNjc1ODdjNjk0ZjY1NGMyM2QxZA==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2003-12-17T16:58:14Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2003-12-17T16:58:14Z"}, "message": "re PR c++/10603 (failing to print problematic token upon parse error)\n\n\tPR c++/10603\n\tPR c++/12827\n\t* parser.c (cp_parser_error): Help c_parse_error print good\n\tmessages if the next token is a keyword.\n\t(cp_parser_parameter_declaration_list): When resynchronizing after\n\ta bad parameter declaration, stop if a comma is found.\n\t(cp_parser_parameter_declaration): Avoid backtracking.\n\n\tPR c++/10603\n\t* g++.dg/parse/error6.C: New test.\n\n\tPR c++/12827\n\t* g++.dg/parse/error7.C: New test.\n\nFrom-SVN: r74743", "tree": {"sha": "ab32363f39e685469055a01af67df1879b9c1fc8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ab32363f39e685469055a01af67df1879b9c1fc8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5c832178f89fcb4115dab67587c694f654c23d1d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c832178f89fcb4115dab67587c694f654c23d1d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c832178f89fcb4115dab67587c694f654c23d1d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c832178f89fcb4115dab67587c694f654c23d1d/comments", "author": null, "committer": null, "parents": [{"sha": "8f0f6aa1fd95249ff405378b1716dc9050e72401", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f0f6aa1fd95249ff405378b1716dc9050e72401", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f0f6aa1fd95249ff405378b1716dc9050e72401"}], "stats": {"total": 49, "additions": 46, "deletions": 3}, "files": [{"sha": "faa0fd6ba8c3f4afbce0c36db551fb3aad1183d9", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c832178f89fcb4115dab67587c694f654c23d1d/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c832178f89fcb4115dab67587c694f654c23d1d/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=5c832178f89fcb4115dab67587c694f654c23d1d", "patch": "@@ -1,3 +1,13 @@\n+2003-12-17  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tPR c++/10603\n+\tPR c++/12827\n+\t* parser.c (cp_parser_error): Help c_parse_error print good\n+\tmessages if the next token is a keyword.\n+\t(cp_parser_parameter_declaration_list): When resynchronizing after\n+\ta bad parameter declaration, stop if a comma is found.\n+\t(cp_parser_parameter_declaration): Avoid backtracking.\n+\n 2003-12-16  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/12696"}, {"sha": "789ccb06729d5781a9fcda954e98bf46796c5fe1", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 17, "deletions": 2, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c832178f89fcb4115dab67587c694f654c23d1d/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c832178f89fcb4115dab67587c694f654c23d1d/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=5c832178f89fcb4115dab67587c694f654c23d1d", "patch": "@@ -1771,7 +1771,12 @@ cp_parser_error (cp_parser* parser, const char* message)\n     {\n       cp_token *token;\n       token = cp_lexer_peek_token (parser->lexer);\n-      c_parse_error (message, token->type, token->value);\n+      c_parse_error (message, \n+\t\t     /* Because c_parser_error does not understand\n+\t\t\tCPP_KEYWORD, keywords are treated like\n+\t\t\tidentifiers.  */\n+\t\t     (token->type == CPP_KEYWORD ? CPP_NAME : token->type), \n+\t\t     token->value);\n     }\n }\n \n@@ -10804,7 +10809,7 @@ cp_parser_parameter_declaration_list (cp_parser* parser)\n \t      || cp_parser_committed_to_tentative_parse (parser))\n \t    cp_parser_skip_to_closing_parenthesis (parser, \n \t\t\t\t\t\t   /*recovering=*/true,\n-\t\t\t\t\t\t   /*or_comma=*/true,\n+\t\t\t\t\t\t   /*or_comma=*/false,\n \t\t\t\t\t\t   /*consume_paren=*/false);\n \t  break;\n \t}\n@@ -10900,6 +10905,16 @@ cp_parser_parameter_declaration (cp_parser *parser,\n       bool saved_default_arg_ok_p = parser->default_arg_ok_p;\n       parser->default_arg_ok_p = false;\n   \n+      /* After seeing a decl-specifier-seq, if the next token is not a\n+\t \"(\", there is no possibility that the code is a valid\n+\t expression initializer.  Therefore, if parsing tentatively,\n+\t we commit at this point.  */\n+      if (!parser->in_template_argument_list_p\n+\t  && cp_parser_parsing_tentatively (parser)\n+\t  && !cp_parser_committed_to_tentative_parse (parser)\n+\t  && cp_lexer_next_token_is_not (parser->lexer, CPP_OPEN_PAREN))\n+\tcp_parser_commit_to_tentative_parse (parser);\n+      /* Parse the declarator.  */\n       declarator = cp_parser_declarator (parser,\n \t\t\t\t\t CP_PARSER_DECLARATOR_EITHER,\n \t\t\t\t\t /*ctor_dtor_or_conv_p=*/NULL,"}, {"sha": "91c4068b1528766ca29dc9d47e66b91f46c97ac9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c832178f89fcb4115dab67587c694f654c23d1d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c832178f89fcb4115dab67587c694f654c23d1d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5c832178f89fcb4115dab67587c694f654c23d1d", "patch": "@@ -1,3 +1,11 @@\n+2003-12-17  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tPR c++/10603\n+\t* g++.dg/parse/error6.C: New test.\n+\n+\tPR c++/12827\n+\t* g++.dg/parse/error7.C: New test.\n+\n 2003-12-17  Eric Botcazou  <ebotcazou@libertysurf.fr>\n \n \t* lib/gcc-dg.exp (gcc-dg-debug-runtest): Do not run debug-[12].c"}, {"sha": "a052346d8ca2d929e7c20a3ea27acb32031a20db", "filename": "gcc/testsuite/g++.dg/parse/error3.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c832178f89fcb4115dab67587c694f654c23d1d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c832178f89fcb4115dab67587c694f654c23d1d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror3.C?ref=5c832178f89fcb4115dab67587c694f654c23d1d", "patch": "@@ -3,4 +3,4 @@\n static void InstantiateConstraint(const float&, unsigned,\n                                   void(*AddFunction)(const TYPE&,bool&, // { dg-error \"\" }\n                                                      char*, char*,\n-                                                     unsigned*));\n+                                                     unsigned*)); // { dg-error \"\" }"}, {"sha": "3a1666995ebefb5b1aa64645839b466c300f069b", "filename": "gcc/testsuite/g++.dg/parse/error6.C", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c832178f89fcb4115dab67587c694f654c23d1d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c832178f89fcb4115dab67587c694f654c23d1d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror6.C?ref=5c832178f89fcb4115dab67587c694f654c23d1d", "patch": "@@ -0,0 +1,6 @@\n+// PR c++/10603\n+\n+int f(int not) { // { dg-error \"!\" }\n+  return 1-not; // { dg-error \"\" }\n+} \n+"}, {"sha": "50e7f84dca510eb01cd7c4d3cf6025f07cd6148d", "filename": "gcc/testsuite/g++.dg/parse/error7.C", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c832178f89fcb4115dab67587c694f654c23d1d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c832178f89fcb4115dab67587c694f654c23d1d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror7.C?ref=5c832178f89fcb4115dab67587c694f654c23d1d", "patch": "@@ -0,0 +1,4 @@\n+// PR c++/12827\n+\n+void f(int x\n+       int y); // { dg-error \",\" }"}]}