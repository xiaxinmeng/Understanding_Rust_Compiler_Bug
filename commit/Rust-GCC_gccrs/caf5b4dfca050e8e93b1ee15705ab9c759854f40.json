{"sha": "caf5b4dfca050e8e93b1ee15705ab9c759854f40", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2FmNWI0ZGZjYTA1MGU4ZTkzYjFlZTE1NzA1YWI5Yzc1OTg1NGY0MA==", "commit": {"author": {"name": "Aditya Kumar", "email": "aditya.k7@samsung.com", "date": "2015-10-21T18:53:26Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2015-10-21T18:53:26Z"}, "message": "Refactor graphite-sese-to-poly, sese.h, graphite-poly.h\n\nNow that scop contains a list of all the basic blocks inside, it makes sense to\niterate over only those basic blocks in\ngraphite-sese-to-poly.c:rewrite_reductions_out_of_ssa,rewrite_cross_bb_scalar_deps_out_of_ssa\n\nPasses regtest and bootstrap.\n\ngcc/ChangeLog:\n\n2015-10-20  Aditya Kumar  <hiraditya@msn.com>\n\n        * graphite-poly.h (struct dr_info): Added invalid_alias_set number.\n        (operator=): Removed.\n        (dr_info): Make alias_set number the last argument with default value of invalid_alias_set.\n        * graphite-sese-to-poly.c (build_scop_drs): Update constructor of dr_info.\n        (rewrite_reductions_out_of_ssa): Iterate only through the basic blocks which are inside region.\n        (rewrite_cross_bb_scalar_deps_out_of_ssa): Same.\n        * sese.h (struct sese_l): Removed assignment operator.\n        (split_region_for_bb): Removed dead code.\n\nFrom-SVN: r229136", "tree": {"sha": "a080a867749e4ee522936859c843d46eb80b636c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a080a867749e4ee522936859c843d46eb80b636c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/caf5b4dfca050e8e93b1ee15705ab9c759854f40", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/caf5b4dfca050e8e93b1ee15705ab9c759854f40", "html_url": "https://github.com/Rust-GCC/gccrs/commit/caf5b4dfca050e8e93b1ee15705ab9c759854f40", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/caf5b4dfca050e8e93b1ee15705ab9c759854f40/comments", "author": null, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d37fc3aa4aae5adf437a4d0b6370dc24759e5689", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d37fc3aa4aae5adf437a4d0b6370dc24759e5689", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d37fc3aa4aae5adf437a4d0b6370dc24759e5689"}], "stats": {"total": 124, "additions": 45, "deletions": 79}, "files": [{"sha": "8b4735d4626c795067d52fad00031a8ca03a476c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/caf5b4dfca050e8e93b1ee15705ab9c759854f40/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/caf5b4dfca050e8e93b1ee15705ab9c759854f40/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=caf5b4dfca050e8e93b1ee15705ab9c759854f40", "patch": "@@ -1,3 +1,14 @@\n+2015-10-21  Aditya Kumar  <aditya.k7@samsung.com>\n+\n+\t* graphite-poly.h (struct dr_info): Added invalid_alias_set number.\n+\t(operator=): Removed.\n+\t(dr_info): Make alias_set number the last argument with default value of invalid_alias_set.\n+\t* graphite-sese-to-poly.c (build_scop_drs): Update constructor of dr_info.\n+\t(rewrite_reductions_out_of_ssa): Iterate only through the basic blocks which are inside region.\n+\t(rewrite_cross_bb_scalar_deps_out_of_ssa): Same.\n+\t* sese.h (struct sese_l): Removed assignment operator.\n+\t(split_region_for_bb): Removed dead code.\n+\n 2015-10-21  Aditya Kumar  <aditya.k7@samsung.com>\n \n \t* graphite-poly.h (struct dr_info): Removed conversion constructor."}, {"sha": "5298f8547f904b9c632d4ca7729f29353bfad65d", "filename": "gcc/graphite-poly.h", "status": "modified", "additions": 10, "deletions": 16, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/caf5b4dfca050e8e93b1ee15705ab9c759854f40/gcc%2Fgraphite-poly.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/caf5b4dfca050e8e93b1ee15705ab9c759854f40/gcc%2Fgraphite-poly.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-poly.h?ref=caf5b4dfca050e8e93b1ee15705ab9c759854f40", "patch": "@@ -373,29 +373,23 @@ pbb_set_black_box (poly_bb_p pbb, gimple_poly_bb_p black_box)\n \n struct dr_info\n {\n+  enum {\n+    invalid_alias_set = -1\n+  };\n   /* The data reference.  */\n   data_reference_p dr;\n \n-  /* ALIAS_SET is the SCC number assigned by a graph_dfs of the alias graph.  -1\n-     is an invalid alias set.  */\n-  int alias_set;\n-\n   /* The polyhedral BB containing this DR.  */\n   poly_bb_p pbb;\n \n+  /* ALIAS_SET is the SCC number assigned by a graph_dfs of the alias graph.\n+     -1 is an invalid alias set.  */\n+  int alias_set;\n+\n   /* Construct a DR_INFO from a data reference DR, an ALIAS_SET, and a PBB.  */\n-  dr_info (data_reference_p dr, int alias_set, poly_bb_p pbb)\n-    : dr (dr), alias_set (alias_set), pbb (pbb) {}\n-\n-  /* Assignment operator, to be able to iterate over a vec of these objects.  */\n-  const dr_info &\n-  operator= (const dr_info &p)\n-  {\n-    dr = p.dr;\n-    alias_set = p.alias_set;\n-    pbb = p.pbb;\n-    return *this;\n-  }\n+  dr_info (data_reference_p dr, poly_bb_p pbb,\n+\t   int alias_set = invalid_alias_set)\n+    : dr (dr), pbb (pbb), alias_set (alias_set) {}\n };\n \n /* A SCOP is a Static Control Part of the program, simple enough to be"}, {"sha": "d1eae9036ecdc35f975e7b694a1784307c610880", "filename": "gcc/graphite-sese-to-poly.c", "status": "modified", "additions": 24, "deletions": 26, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/caf5b4dfca050e8e93b1ee15705ab9c759854f40/gcc%2Fgraphite-sese-to-poly.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/caf5b4dfca050e8e93b1ee15705ab9c759854f40/gcc%2Fgraphite-sese-to-poly.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-sese-to-poly.c?ref=caf5b4dfca050e8e93b1ee15705ab9c759854f40", "patch": "@@ -1151,7 +1151,7 @@ build_scop_drs (scop_p scop)\n   FOR_EACH_VEC_ELT (scop->pbbs, i, pbb)\n     if (pbb)\n       FOR_EACH_VEC_ELT (GBB_DATA_REFS (PBB_BLACK_BOX (pbb)), j, dr)\n-\tscop->drs.safe_push (dr_info (dr, -1, pbb));\n+\tscop->drs.safe_push (dr_info (dr, pbb));\n \n   build_alias_set (scop);\n \n@@ -1497,31 +1497,29 @@ rewrite_degenerate_phi (gphi_iterator *psi)\n static void\n rewrite_reductions_out_of_ssa (scop_p scop)\n {\n+  int i;\n   basic_block bb;\n-  sese_l region = scop->scop_info->region;\n-\n-  FOR_EACH_BB_FN (bb, cfun)\n-    if (bb_in_sese_p (bb, region))\n-      for (gphi_iterator psi = gsi_start_phis (bb); !gsi_end_p (psi);)\n-\t{\n-\t  gphi *phi = psi.phi ();\n+  FOR_EACH_VEC_ELT (scop->scop_info->bbs, i, bb)\n+    for (gphi_iterator psi = gsi_start_phis (bb); !gsi_end_p (psi);)\n+      {\n+\tgphi *phi = psi.phi ();\n \n-\t  if (virtual_operand_p (gimple_phi_result (phi)))\n-\t    {\n-\t      gsi_next (&psi);\n-\t      continue;\n-\t    }\n+\tif (virtual_operand_p (gimple_phi_result (phi)))\n+\t  {\n+\t    gsi_next (&psi);\n+\t    continue;\n+\t  }\n \n-\t  if (gimple_phi_num_args (phi) > 1\n-\t      && degenerate_phi_result (phi))\n-\t    rewrite_degenerate_phi (&psi);\n+\tif (gimple_phi_num_args (phi) > 1\n+\t    && degenerate_phi_result (phi))\n+\t  rewrite_degenerate_phi (&psi);\n \n-\t  else if (scalar_close_phi_node_p (phi))\n-\t    rewrite_close_phi_out_of_ssa (scop, &psi);\n+\telse if (scalar_close_phi_node_p (phi))\n+\t  rewrite_close_phi_out_of_ssa (scop, &psi);\n \n-\t  else if (reduction_phi_p (region, &psi))\n-\t    rewrite_phi_out_of_ssa (scop, &psi);\n-\t}\n+\telse if (reduction_phi_p (scop->scop_info->region, &psi))\n+\t  rewrite_phi_out_of_ssa (scop, &psi);\n+      }\n \n   update_ssa (TODO_update_ssa);\n #ifdef ENABLE_CHECKING\n@@ -1684,18 +1682,18 @@ rewrite_cross_bb_scalar_deps (scop_p scop, gimple_stmt_iterator *gsi)\n static void\n rewrite_cross_bb_scalar_deps_out_of_ssa (scop_p scop)\n {\n-  basic_block bb;\n   gimple_stmt_iterator psi;\n   sese_l region = scop->scop_info->region;\n   bool changed = false;\n \n   /* Create an extra empty BB after the scop.  */\n   split_edge (region.exit);\n \n-  FOR_EACH_BB_FN (bb, cfun)\n-    if (bb_in_sese_p (bb, region))\n-      for (psi = gsi_start_bb (bb); !gsi_end_p (psi); gsi_next (&psi))\n-\tchanged |= rewrite_cross_bb_scalar_deps (scop, &psi);\n+  int i;\n+  basic_block bb;\n+  FOR_EACH_VEC_ELT (scop->scop_info->bbs, i, bb)\n+    for (psi = gsi_start_bb (bb); !gsi_end_p (psi); gsi_next (&psi))\n+      changed |= rewrite_cross_bb_scalar_deps (scop, &psi);\n \n   if (changed)\n     {"}, {"sha": "6b6b904495cd08bd6b6b5bd09a343e2d70055320", "filename": "gcc/sese.h", "status": "modified", "additions": 0, "deletions": 37, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/caf5b4dfca050e8e93b1ee15705ab9c759854f40/gcc%2Fsese.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/caf5b4dfca050e8e93b1ee15705ab9c759854f40/gcc%2Fsese.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsese.h?ref=caf5b4dfca050e8e93b1ee15705ab9c759854f40", "patch": "@@ -32,14 +32,6 @@ struct sese_l\n \n   operator bool () const { return entry && exit; }\n \n-  const sese_l &\n-  operator= (const sese_l &s)\n-  {\n-    entry = s.entry;\n-    exit = s.exit;\n-    return *this;\n-  }\n-\n   edge entry;\n   edge exit;\n };\n@@ -205,35 +197,6 @@ sese_loop_depth (sese_l &region, loop_p loop)\n   return depth;\n }\n \n-/* Splits BB to make a single entry single exit region.  */\n-\n-static inline sese_info_p\n-split_region_for_bb (basic_block bb)\n-{\n-  edge entry, exit;\n-\n-  if (single_pred_p (bb))\n-    entry = single_pred_edge (bb);\n-  else\n-    {\n-      entry = split_block_after_labels (bb);\n-      bb = single_succ (bb);\n-    }\n-\n-  if (single_succ_p (bb))\n-    exit = single_succ_edge (bb);\n-  else\n-    {\n-      gimple_stmt_iterator gsi = gsi_last_bb (bb);\n-      gsi_prev (&gsi);\n-      exit = split_block (bb, gsi_stmt (gsi));\n-    }\n-\n-  return new_sese_info (entry, exit);\n-}\n-\n-\f\n-\n /* A single entry single exit specialized for conditions.  */\n \n typedef struct ifsese_s {"}]}