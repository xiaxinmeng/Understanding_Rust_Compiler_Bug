{"sha": "2467998373b9b6ddd3dae1b8ea72c1ee3054c699", "node_id": "C_kwDOANBUbNoAKDI0Njc5OTgzNzNiOWI2ZGRkM2RhZTFiOGVhNzJjMWVlMzA1NGM2OTk", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-10-01T00:16:27Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-10-01T00:16:27Z"}, "message": "Daily bump.", "tree": {"sha": "1ab4662f8d935331c84b3da7b512124dad8f04ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1ab4662f8d935331c84b3da7b512124dad8f04ea"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2467998373b9b6ddd3dae1b8ea72c1ee3054c699", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2467998373b9b6ddd3dae1b8ea72c1ee3054c699", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2467998373b9b6ddd3dae1b8ea72c1ee3054c699", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2467998373b9b6ddd3dae1b8ea72c1ee3054c699/comments", "author": null, "committer": null, "parents": [{"sha": "f1408388f2e260751d07d1de08c2550abf8c7cf1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1408388f2e260751d07d1de08c2550abf8c7cf1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f1408388f2e260751d07d1de08c2550abf8c7cf1"}], "stats": {"total": 217, "additions": 216, "deletions": 1}, "files": [{"sha": "b72c0d444dc58957d277e1b2207a13c63ca05868", "filename": "gcc/ChangeLog", "status": "modified", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2467998373b9b6ddd3dae1b8ea72c1ee3054c699/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2467998373b9b6ddd3dae1b8ea72c1ee3054c699/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2467998373b9b6ddd3dae1b8ea72c1ee3054c699", "patch": "@@ -1,3 +1,52 @@\n+2021-09-30  Przemyslaw Wirkus  <przemyslaw.wirkus@arm.com>\n+\n+\t* config/arm/arm-cpus.in: Add Cortex-R52+ CPU.\n+\t* config/arm/arm-tables.opt: Regenerate.\n+\t* config/arm/arm-tune.md: Regenerate.\n+\t* doc/invoke.texi: Update docs.\n+\n+2021-09-30  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/89954\n+\t* config/i386/i386.md\n+\t(sign_extend:WIDE (any_logic:NARROW (memory, immediate)) splitters):\n+\tNew splitters.\n+\n+2021-09-30  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\t* omp-low.c (omp_runtime_api_call): Add omp_aligned_{,c}alloc and\n+\tomp_{c,re}alloc, fix omp_alloc/omp_free.\n+\n+2021-09-30  Martin Liska  <mliska@suse.cz>\n+\n+\t* defaults.h (ASM_OUTPUT_ASCII): Do not hide global variable\n+\tasm_out_file and stream directly to MYFILE.\n+\n+2021-09-30  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-vect-data-refs.c (vect_update_misalignment_for_peel):\n+\tRestore and fix condition under which we apply npeel to\n+\tthe DRs misalignment value.\n+\n+2021-09-30  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-vect-data-refs.c (vect_update_misalignment_for_peel):\n+\tFix npeel check for variable amount of peeling.\n+\n+2021-09-30  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\t* lto-wrapper.c (run_gcc): Plug snprintf overflow.\n+\n+2021-09-30  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\t* gimple-range.cc (gimple_ranger::debug): New.\n+\t* gimple-range.h (class gimple_ranger): Add debug.\n+\n+2021-09-30  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\tPR middle-end/102519\n+\t* tree-vrp.c (hybrid_threader::~hybrid_threader): Free m_query.\n+\n 2021-09-29  Indu Bhagat  <indu.bhagat@oracle.com>\n \n \tPR debug/102507"}, {"sha": "5e33609967097c5e55b0cf143397788a292a3d3a", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2467998373b9b6ddd3dae1b8ea72c1ee3054c699/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2467998373b9b6ddd3dae1b8ea72c1ee3054c699/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=2467998373b9b6ddd3dae1b8ea72c1ee3054c699", "patch": "@@ -1 +1 @@\n-20210930\n+20211001"}, {"sha": "579c528a53d4008c153df4ce1dcc5de155ab9f99", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2467998373b9b6ddd3dae1b8ea72c1ee3054c699/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2467998373b9b6ddd3dae1b8ea72c1ee3054c699/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=2467998373b9b6ddd3dae1b8ea72c1ee3054c699", "patch": "@@ -1,3 +1,19 @@\n+2021-09-30  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/102535\n+\t* method.c (is_xible_helper): Don't exit early for multi-arg\n+\tctors in C++20.\n+\n+2021-09-30  Patrick Palka  <ppalka@redhat.com>\n+\n+\t* parser.c (cp_parser_trait_expr): Call nreverse on the reversed\n+\tlist of trailing arguments.\n+\n+2021-09-30  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/95567\n+\t* method.c (build_comparison_op): Skip DECL_VIRTUAL_P fields.\n+\n 2021-09-28  Patrick Palka  <ppalka@redhat.com>\n \n \tPR c++/99909"}, {"sha": "94af00a091252dd9a1e93e7143535d24e4af79fb", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2467998373b9b6ddd3dae1b8ea72c1ee3054c699/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2467998373b9b6ddd3dae1b8ea72c1ee3054c699/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=2467998373b9b6ddd3dae1b8ea72c1ee3054c699", "patch": "@@ -1,3 +1,22 @@\n+2021-09-30  Harald Anlauf  <anlauf@gmx.de>\n+\n+\tPR fortran/102458\n+\t* simplify.c (simplify_size): Resolve expressions used in array\n+\tspecifications so that SIZE can be simplified.\n+\n+2021-09-30  Harald Anlauf  <anlauf@gmx.de>\n+\n+\t* expr.c: The correct reference to Fortran standard is: F2018:10.1.12.\n+\n+2021-09-30  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\tPR fortran/71703\n+\tPR fortran/84007\n+\t* trans-intrinsic.c (gfc_conv_same_type_as): Fix handling\n+\tof UNLIMITED_POLY.\n+\t* trans.h (gfc_vtpr_hash_get): Renamed prototype to ...\n+\t(gfc_vptr_hash_get): ... this to match function name.\n+\n 2021-09-29  Harald Anlauf  <anlauf@gmx.de>\n \n \tPR fortran/102520"}, {"sha": "49a2e69a202103e52783eede8ac56aa6c6e5354e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2467998373b9b6ddd3dae1b8ea72c1ee3054c699/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2467998373b9b6ddd3dae1b8ea72c1ee3054c699/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2467998373b9b6ddd3dae1b8ea72c1ee3054c699", "patch": "@@ -1,3 +1,51 @@\n+2021-09-30  David Edelsohn  <dje.gcc@gmail.com>\n+\n+\t* gfortran.dg/c-interop/cf-descriptor-5-c.c: Include alloca.h.\n+\n+2021-09-30  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/102535\n+\t* g++.dg/ext/is_trivially_constructible7.C: New test.\n+\n+2021-09-30  Patrick Palka  <ppalka@redhat.com>\n+\n+\t* g++.dg/ext/is_constructible6.C: New test.\n+\n+2021-09-30  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/95567\n+\t* g++.dg/cpp2a/spaceship-virtual1.C: New test.\n+\n+2021-09-30  Harald Anlauf  <anlauf@gmx.de>\n+\n+\tPR fortran/102458\n+\t* gfortran.dg/pr102458b.f90: New test.\n+\n+2021-09-30  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/89954\n+\t* gcc.target/i386/pr89954.c: New test.\n+\n+2021-09-30  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\tPR fortran/71703\n+\tPR fortran/84007\n+\t* gfortran.dg/c-interop/c535b-1.f90: Remove wrong comment.\n+\t* gfortran.dg/unlimited_polymorphic_1.f03: Extend.\n+\t* gfortran.dg/unlimited_polymorphic_32.f90: New test.\n+\n+2021-09-30  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\tPR d/102476\n+\t* gdc.dg/pr102476.d: New test.\n+\n+2021-09-30  Martin Liska  <mliska@suse.cz>\n+\n+\tPR testsuite/102509\n+\t* gcc.c-torture/compile/attr-complex-method.c: Skip if LTO is\n+\t  used.\n+\t* gcc.c-torture/compile/attr-complex-method-2.c: Likewise.\n+\n 2021-09-29  Aldy Hernandez  <aldyh@redhat.com>\n \n \tPR testsuite/102501"}, {"sha": "3e3b9b0c46a4a60384ca9180e56098e411971999", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2467998373b9b6ddd3dae1b8ea72c1ee3054c699/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2467998373b9b6ddd3dae1b8ea72c1ee3054c699/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=2467998373b9b6ddd3dae1b8ea72c1ee3054c699", "patch": "@@ -1,3 +1,47 @@\n+2021-09-30  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\t* testsuite/libgomp.fortran/alloc-7.f90: Add dg-prune-output\n+\tfor -fintrinsic-modules-path= warning of the C compiler.\n+\t* testsuite/libgomp.fortran/alloc-9.f90: Likewise.\n+\t* testsuite/libgomp.fortran/alloc-10.f90: Likewise.\n+\n+2021-09-30  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\t* libgomp.texi (OpenMP 5.1): Set implementation status to Y for\n+\tomp_aligned_{,c}alloc and omp_{c,re}alloc routines.\n+\t* omp_lib.f90.in (omp_aligned_alloc, omp_aligned_calloc, omp_calloc,\n+\tomp_realloc): Add.\n+\t* omp_lib.h.in (omp_aligned_alloc, omp_aligned_calloc, omp_calloc,\n+\tomp_realloc): Add.\n+\t* testsuite/libgomp.fortran/alloc-10.f90: New test.\n+\t* testsuite/libgomp.fortran/alloc-6.f90: New test.\n+\t* testsuite/libgomp.fortran/alloc-7.c: New test.\n+\t* testsuite/libgomp.fortran/alloc-7.f90: New test.\n+\t* testsuite/libgomp.fortran/alloc-8.f90: New test.\n+\t* testsuite/libgomp.fortran/alloc-9.f90: New test.\n+\n+2021-09-30  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* omp.h.in (omp_aligned_alloc, omp_calloc, omp_aligned_calloc,\n+\tomp_realloc): New prototypes.\n+\t(omp_alloc): Move after omp_free prototype, add __malloc__ (omp_free)\n+\tattribute.\n+\t* allocator.c: Include string.h.\n+\t(omp_aligned_alloc): No longer static, add ialias.  Add new_alignment\n+\tvariable and use it instead of alignment so that when retrying the old\n+\talignment is used again.  Don't retry if new alignment is the same\n+\tas old alignment, unless allocator had pool size.\n+\t(omp_alloc, GOMP_alloc, GOMP_free): Use ialias_call.\n+\t(omp_aligned_calloc, omp_calloc, omp_realloc): New functions.\n+\t* libgomp.map (OMP_5.0.2): Export omp_aligned_alloc, omp_calloc,\n+\tomp_aligned_calloc and omp_realloc.\n+\t* testsuite/libgomp.c-c++-common/alloc-4.c (main): Add\n+\tomp_aligned_alloc, omp_calloc and omp_aligned_calloc tests.\n+\t* testsuite/libgomp.c-c++-common/alloc-5.c: New test.\n+\t* testsuite/libgomp.c-c++-common/alloc-6.c: New test.\n+\t* testsuite/libgomp.c-c++-common/alloc-7.c: New test.\n+\t* testsuite/libgomp.c-c++-common/alloc-8.c: New test.\n+\n 2021-09-28  Tobias Burnus  <tobias@codesourcery.com>\n \n \tPR libgomp/96661"}, {"sha": "0cc0b3db9f27256508a54070fd8ef50071901f6a", "filename": "libphobos/ChangeLog", "status": "modified", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2467998373b9b6ddd3dae1b8ea72c1ee3054c699/libphobos%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2467998373b9b6ddd3dae1b8ea72c1ee3054c699/libphobos%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2FChangeLog?ref=2467998373b9b6ddd3dae1b8ea72c1ee3054c699", "patch": "@@ -1,3 +1,37 @@\n+2021-09-30  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* libdruntime/gcc/deh.d (ExceptionHeader.getClassInfo): Move to...\n+\t(getClassInfo): ...here as free function.  Add lsda parameter.\n+\t(scanLSDA): Pass lsda to actionTableLookup.\n+\t(actionTableLookup): Add lsda parameter, pass to getClassInfo.\n+\t(__gdc_personality): Remove currentCfa variable.\n+\n+2021-09-30  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* libdruntime/gcc/deh.d (_d_print_throwable): Declare.\n+\t(_d_throw): Print stacktrace before terminating program due to\n+\tuncaught exception.\n+\n+2021-09-30  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* libdruntime/core/runtime.d (runModuleUnitTests): Use scope to new\n+\tLibBacktrace on the stack.\n+\t* libdruntime/gcc/backtrace.d (FIRSTFRAME): Remove.\n+\t(LibBacktrace.MaxAlignment): Remove.\n+\t(LibBacktrace.this): Remove default initialization of firstFrame.\n+\t(UnwindBacktrace.this): Likewise.\n+\n+2021-09-30  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* libdruntime/gcc/unwind/generic.d (__aligned__): Define.\n+\t(_Unwind_Exception): Align struct to __aligned__.\n+\n+2021-09-30  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\tPR d/102476\n+\t* libdruntime/__main.di: Define main function as extern(C) when\n+\tcompiling without D runtime.\n+\n 2021-09-01  Iain Buclaw  <ibuclaw@gdcproject.org>\n \n \t* m4/druntime/os.m4: Update comment for DRUNTIME_OS_SOURCES."}, {"sha": "453f4f4528f30d8e8be9513ac7099fbdbc5b38b5", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2467998373b9b6ddd3dae1b8ea72c1ee3054c699/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2467998373b9b6ddd3dae1b8ea72c1ee3054c699/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=2467998373b9b6ddd3dae1b8ea72c1ee3054c699", "patch": "@@ -1,3 +1,8 @@\n+2021-09-30  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/bits/regex.h (basic_regex::multiline): Fix #if\n+\tcondition.\n+\n 2021-09-29  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* include/bits/regex.h (basic_regex::multiline): Define constant"}]}