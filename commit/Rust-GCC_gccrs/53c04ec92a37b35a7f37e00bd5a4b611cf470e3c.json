{"sha": "53c04ec92a37b35a7f37e00bd5a4b611cf470e3c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTNjMDRlYzkyYTM3YjM1YTdmMzdlMDBiZDVhNGI2MTFjZjQ3MGUzYw==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2015-01-27T20:19:36Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2015-01-27T20:19:36Z"}, "message": "toplev: gcc version information for jit\n\ngcc/ChangeLog:\n\t* toplev.c (print_version): Add param \"show_global_state\", and\n\tonly print GGC and plugin information if it is true.\n\t(init_asm_output): Pass in \"true\" for the new param when calling\n\tprint_version.\n\t(process_options): Likewise.\n\t(toplev::main): Likewise.\n\t* toplev.h (print_version): Add new param to decl.\n\ngcc/jit/ChangeLog:\n\t* docs/internals/test-hello-world.exe.log.txt: Add example version\n\tlines.\n\t* jit-common.h (gcc::jit::dump::get_file): New accessor.\n\t* jit-logging.c: Include toplev.h.\n\t(gcc::jit::logger::logger): Log the GCC version.\n\t* jit-recording.c: Include toplev.h.\n\t(gcc:jit::recording::context::dump_reproducer_to_file): Log the\n\tGCC version.\n\nFrom-SVN: r220190", "tree": {"sha": "c8823405a2ab3de543e96e14ffc83037629e01f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c8823405a2ab3de543e96e14ffc83037629e01f9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/53c04ec92a37b35a7f37e00bd5a4b611cf470e3c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53c04ec92a37b35a7f37e00bd5a4b611cf470e3c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/53c04ec92a37b35a7f37e00bd5a4b611cf470e3c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53c04ec92a37b35a7f37e00bd5a4b611cf470e3c/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "710700abb804afc0846423ab246034dec745a599", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/710700abb804afc0846423ab246034dec745a599", "html_url": "https://github.com/Rust-GCC/gccrs/commit/710700abb804afc0846423ab246034dec745a599"}], "stats": {"total": 73, "additions": 60, "deletions": 13}, "files": [{"sha": "67d3fc77555a764e48a838e91f77bbd65ec788ba", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53c04ec92a37b35a7f37e00bd5a4b611cf470e3c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53c04ec92a37b35a7f37e00bd5a4b611cf470e3c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=53c04ec92a37b35a7f37e00bd5a4b611cf470e3c", "patch": "@@ -1,3 +1,13 @@\n+2015-01-27  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* toplev.c (print_version): Add param \"show_global_state\", and\n+\tonly print GGC and plugin information if it is true.\n+\t(init_asm_output): Pass in \"true\" for the new param when calling\n+\tprint_version.\n+\t(process_options): Likewise.\n+\t(toplev::main): Likewise.\n+\t* toplev.h (print_version): Add new param to decl.\n+\n 2015-01-27  Jan Hubicka  <hubicka@ucw.cz>\n \n \tPR ipa/60871"}, {"sha": "a260ab083a2814e8b7d8167a2c1368f0dea03633", "filename": "gcc/jit/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53c04ec92a37b35a7f37e00bd5a4b611cf470e3c/gcc%2Fjit%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53c04ec92a37b35a7f37e00bd5a4b611cf470e3c/gcc%2Fjit%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjit%2FChangeLog?ref=53c04ec92a37b35a7f37e00bd5a4b611cf470e3c", "patch": "@@ -1,3 +1,15 @@\n+2015-01-27  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* docs/internals/test-hello-world.exe.log.txt: Add example version\n+\tlines.\n+\t* docs/_build/texinfo/libgccjit.texi: Regenerate.\n+\t* jit-common.h (gcc::jit::dump::get_file): New accessor.\n+\t* jit-logging.c: Include toplev.h.\n+\t(gcc::jit::logger::logger): Log the GCC version.\n+\t* jit-recording.c: Include toplev.h.\n+\t(gcc:jit::recording::context::dump_reproducer_to_file): Log the\n+\tGCC version.\n+\n 2015-01-26  David Malcolm  <dmalcolm@redhat.com>\n \n \t* docs/topics/compilation.rst (gcc_jit_result_get_code): Fix typo."}, {"sha": "37c466480cd15ae25efa25c6602f0ebd081e6511", "filename": "gcc/jit/docs/_build/texinfo/libgccjit.texi", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53c04ec92a37b35a7f37e00bd5a4b611cf470e3c/gcc%2Fjit%2Fdocs%2F_build%2Ftexinfo%2Flibgccjit.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53c04ec92a37b35a7f37e00bd5a4b611cf470e3c/gcc%2Fjit%2Fdocs%2F_build%2Ftexinfo%2Flibgccjit.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjit%2Fdocs%2F_build%2Ftexinfo%2Flibgccjit.texi?ref=53c04ec92a37b35a7f37e00bd5a4b611cf470e3c", "patch": "@@ -19,7 +19,7 @@\n \n @copying\n @quotation\n-libgccjit 5.0.0 (experimental 20150126), January 26, 2015\n+libgccjit 5.0.0 (experimental 20150127), January 27, 2015\n \n David Malcolm\n \n@@ -13753,6 +13753,8 @@ via @pxref{5b,,gcc_jit_context_set_logfile()}.  Here is an example of a log\n generated via this call:\n \n @example\n+JIT: libgccjit (GCC) version 5.0.0 20150123 (experimental) (x86_64-unknown-linux-gnu)\n+JIT:\tcompiled by GNU C version 4.8.3 20140911 (Red Hat 4.8.3-7), GMP version 5.1.2, MPFR version 3.1.2, MPC version 1.0.1\n JIT: entering: gcc_jit_context_set_str_option\n JIT: exiting: gcc_jit_context_set_str_option\n JIT: entering: gcc_jit_context_set_int_option"}, {"sha": "876d830b84adc4010b22c4092cde01ccf5107beb", "filename": "gcc/jit/docs/internals/test-hello-world.exe.log.txt", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53c04ec92a37b35a7f37e00bd5a4b611cf470e3c/gcc%2Fjit%2Fdocs%2Finternals%2Ftest-hello-world.exe.log.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53c04ec92a37b35a7f37e00bd5a4b611cf470e3c/gcc%2Fjit%2Fdocs%2Finternals%2Ftest-hello-world.exe.log.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjit%2Fdocs%2Finternals%2Ftest-hello-world.exe.log.txt?ref=53c04ec92a37b35a7f37e00bd5a4b611cf470e3c", "patch": "@@ -1,3 +1,5 @@\n+JIT: libgccjit (GCC) version 5.0.0 20150123 (experimental) (x86_64-unknown-linux-gnu)\n+JIT:\tcompiled by GNU C version 4.8.3 20140911 (Red Hat 4.8.3-7), GMP version 5.1.2, MPFR version 3.1.2, MPC version 1.0.1\n JIT: entering: gcc_jit_context_set_str_option\n JIT: exiting: gcc_jit_context_set_str_option\n JIT: entering: gcc_jit_context_set_int_option"}, {"sha": "8753651a2be54a1f46568fb314ce0f381b823d49", "filename": "gcc/jit/jit-common.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53c04ec92a37b35a7f37e00bd5a4b611cf470e3c/gcc%2Fjit%2Fjit-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53c04ec92a37b35a7f37e00bd5a4b611cf470e3c/gcc%2Fjit%2Fjit-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjit%2Fjit-common.h?ref=53c04ec92a37b35a7f37e00bd5a4b611cf470e3c", "patch": "@@ -178,6 +178,8 @@ class dump\n   recording::location *\n   make_location () const;\n \n+  FILE *get_file () const { return m_file; }\n+\n private:\n   recording::context &m_ctxt;\n   const char *m_filename;"}, {"sha": "22ab6fd42386bf6003873427698d44a65d8d4052", "filename": "gcc/jit/jit-logging.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53c04ec92a37b35a7f37e00bd5a4b611cf470e3c/gcc%2Fjit%2Fjit-logging.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53c04ec92a37b35a7f37e00bd5a4b611cf470e3c/gcc%2Fjit%2Fjit-logging.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjit%2Fjit-logging.c?ref=53c04ec92a37b35a7f37e00bd5a4b611cf470e3c", "patch": "@@ -21,6 +21,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"config.h\"\n #include \"system.h\"\n #include \"coretypes.h\"\n+#include \"toplev.h\" /* for print_version */\n \n #include \"jit-logging.h\"\n \n@@ -41,6 +42,8 @@ logger::logger (FILE *f_out,\n   m_indent_level (0),\n   m_log_refcount_changes (false)\n {\n+  /* Begin the log by writing the GCC version.  */\n+  print_version (f_out, \"JIT:\", false);\n }\n \n /* The destructor for gcc::jit::logger, invoked via"}, {"sha": "9f6e5fdeef8f6ec838d10639631077a12aaa24a6", "filename": "gcc/jit/jit-recording.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53c04ec92a37b35a7f37e00bd5a4b611cf470e3c/gcc%2Fjit%2Fjit-recording.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53c04ec92a37b35a7f37e00bd5a4b611cf470e3c/gcc%2Fjit%2Fjit-recording.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjit%2Fjit-recording.c?ref=53c04ec92a37b35a7f37e00bd5a4b611cf470e3c", "patch": "@@ -24,6 +24,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tm.h\"\n #include \"pretty-print.h\"\n #include \"hash-map.h\"\n+#include \"toplev.h\"\n \n #include <pthread.h>\n \n@@ -1414,7 +1415,9 @@ recording::context::dump_reproducer_to_file (const char *path)\n \t      == contexts[0]);\n \n   r.write (\"/* This code was autogenerated by\"\n-\t   \" gcc_jit_context_dump_reproducer_to_file.  */\\n\\n\");\n+\t   \" gcc_jit_context_dump_reproducer_to_file.\\n\\n\");\n+  print_version (r.get_file (), \"  \", false);\n+  r.write (\"*/\\n\");\n   r.write (\"#include <libgccjit.h>\\n\\n\");\n   r.write (\"static void\\nset_options (\");\n   r.write_params (contexts);"}, {"sha": "bc2ca3b3a27e0172ee1f3fede9f21aa528762743", "filename": "gcc/toplev.c", "status": "modified", "additions": 23, "deletions": 10, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53c04ec92a37b35a7f37e00bd5a4b611cf470e3c/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53c04ec92a37b35a7f37e00bd5a4b611cf470e3c/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=53c04ec92a37b35a7f37e00bd5a4b611cf470e3c", "patch": "@@ -728,10 +728,19 @@ compile_file (void)\n \n /* Print version information to FILE.\n    Each line begins with INDENT (for the case where FILE is the\n-   assembler output file).  */\n+   assembler output file).\n+\n+   If SHOW_GLOBAL_STATE is true (for cc1 etc), we are within the compiler\n+   proper and can print pertinent state (e.g. params and plugins).\n+\n+   If SHOW_GLOBAL_STATE is false (for use by libgccjit), we are outside the\n+   compiler, and we don't hold the mutex on the compiler's global state:\n+   we can't print params and plugins, since they might not be initialized,\n+   or might be being manipulated by a compile running in another\n+   thread.  */\n \n void\n-print_version (FILE *file, const char *indent)\n+print_version (FILE *file, const char *indent, bool show_global_state)\n {\n   static const char fmt1[] =\n #ifdef __GNUC__\n@@ -791,12 +800,16 @@ print_version (FILE *file, const char *indent)\n \t     file == stderr ? _(fmt3) : fmt3,\n \t     indent, *indent != 0 ? \" \" : \"\",\n \t     \"MPC\", MPC_VERSION_STRING, mpc_get_version ());\n-  fprintf (file,\n-\t   file == stderr ? _(fmt4) : fmt4,\n-\t   indent, *indent != 0 ? \" \" : \"\",\n-\t   PARAM_VALUE (GGC_MIN_EXPAND), PARAM_VALUE (GGC_MIN_HEAPSIZE));\n \n-  print_plugins_versions (file, indent);\n+  if (show_global_state)\n+    {\n+      fprintf (file,\n+\t       file == stderr ? _(fmt4) : fmt4,\n+\t       indent, *indent != 0 ? \" \" : \"\",\n+\t       PARAM_VALUE (GGC_MIN_EXPAND), PARAM_VALUE (GGC_MIN_HEAPSIZE));\n+\n+      print_plugins_versions (file, indent);\n+    }\n }\n \n static int\n@@ -1008,7 +1021,7 @@ init_asm_output (const char *name)\n \t{\n \t  /* Print the list of switches in effect\n \t     into the assembler file as comments.  */\n-\t  print_version (asm_out_file, ASM_COMMENT_START);\n+\t  print_version (asm_out_file, ASM_COMMENT_START, true);\n \t  print_switch_values (print_to_asm_out_file);\n \t  putc ('\\n', asm_out_file);\n \t}\n@@ -1426,7 +1439,7 @@ process_options (void)\n      option flags in use.  */\n   if (version_flag)\n     {\n-      print_version (stderr, \"\");\n+      print_version (stderr, \"\", true);\n       if (! quiet_flag)\n \tprint_switch_values (print_to_stderr);\n     }\n@@ -2135,7 +2148,7 @@ toplev::main (int argc, char **argv)\n   initialize_plugins ();\n \n   if (version_flag)\n-    print_version (stderr, \"\");\n+    print_version (stderr, \"\", true);\n \n   if (help_flag)\n     print_plugins_help (stderr, \"\");"}, {"sha": "9527f76ac6e92ec55e17925b22dcf96b4c5c9643", "filename": "gcc/toplev.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53c04ec92a37b35a7f37e00bd5a4b611cf470e3c/gcc%2Ftoplev.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53c04ec92a37b35a7f37e00bd5a4b611cf470e3c/gcc%2Ftoplev.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.h?ref=53c04ec92a37b35a7f37e00bd5a4b611cf470e3c", "patch": "@@ -80,7 +80,7 @@ extern bool user_defined_section_attribute;\n /* See toplev.c.  */\n extern int flag_rerun_cse_after_global_opts;\n \n-extern void print_version (FILE *, const char *);\n+extern void print_version (FILE *, const char *, bool);\n \n /* The hashtable, so that the C front ends can pass it to cpplib.  */\n extern struct ht *ident_hash;"}]}