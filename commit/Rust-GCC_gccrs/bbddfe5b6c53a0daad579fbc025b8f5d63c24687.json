{"sha": "bbddfe5b6c53a0daad579fbc025b8f5d63c24687", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmJkZGZlNWI2YzUzYTBkYWFkNTc5ZmJjMDI1YjhmNWQ2M2MyNDY4Nw==", "commit": {"author": {"name": "Andrew Pinski", "email": "pinskia@gmail.com", "date": "2008-12-29T02:16:45Z"}, "committer": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2008-12-29T02:16:45Z"}, "message": "re PR libobjc/36610 (objc_msg_sendv is broken for targets which pass argument via registers)\n\n2008-12-28  Andrew Pinski  <pinskia@gmail.com>\n\n        PR libobjc/36610\n        * objc/execute/forward-1.m: New test.\n\nFrom-SVN: r142945", "tree": {"sha": "c1f9dd32b22768f364547977033c7f379a55de4c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c1f9dd32b22768f364547977033c7f379a55de4c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bbddfe5b6c53a0daad579fbc025b8f5d63c24687", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bbddfe5b6c53a0daad579fbc025b8f5d63c24687", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bbddfe5b6c53a0daad579fbc025b8f5d63c24687", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bbddfe5b6c53a0daad579fbc025b8f5d63c24687/comments", "author": {"login": "pinskia", "id": 8496799, "node_id": "MDQ6VXNlcjg0OTY3OTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8496799?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pinskia", "html_url": "https://github.com/pinskia", "followers_url": "https://api.github.com/users/pinskia/followers", "following_url": "https://api.github.com/users/pinskia/following{/other_user}", "gists_url": "https://api.github.com/users/pinskia/gists{/gist_id}", "starred_url": "https://api.github.com/users/pinskia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pinskia/subscriptions", "organizations_url": "https://api.github.com/users/pinskia/orgs", "repos_url": "https://api.github.com/users/pinskia/repos", "events_url": "https://api.github.com/users/pinskia/events{/privacy}", "received_events_url": "https://api.github.com/users/pinskia/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "07d20642066a0cf73d23c1fcd9a3efea928064d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07d20642066a0cf73d23c1fcd9a3efea928064d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/07d20642066a0cf73d23c1fcd9a3efea928064d1"}], "stats": {"total": 90, "additions": 90, "deletions": 0}, "files": [{"sha": "42cc3da1a8bf567d9340b8e9c63ace18e8d52c40", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbddfe5b6c53a0daad579fbc025b8f5d63c24687/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbddfe5b6c53a0daad579fbc025b8f5d63c24687/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=bbddfe5b6c53a0daad579fbc025b8f5d63c24687", "patch": "@@ -1,3 +1,8 @@\n+2008-12-28  Andrew Pinski  <pinskia@gmail.com>\n+\n+\tPR libobjc/36610\n+\t* objc/execute/forward-1.m: New test.\n+\n 2008-12-27  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/38633"}, {"sha": "9306dea7b27d318b2d4bbf836236faa0017d1154", "filename": "gcc/testsuite/objc/execute/forward-1.m", "status": "added", "additions": 85, "deletions": 0, "changes": 85, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbddfe5b6c53a0daad579fbc025b8f5d63c24687/gcc%2Ftestsuite%2Fobjc%2Fexecute%2Fforward-1.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbddfe5b6c53a0daad579fbc025b8f5d63c24687/gcc%2Ftestsuite%2Fobjc%2Fexecute%2Fforward-1.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc%2Fexecute%2Fforward-1.m?ref=bbddfe5b6c53a0daad579fbc025b8f5d63c24687", "patch": "@@ -0,0 +1,85 @@\n+/* See if -forward::/-performv:: is able to work. */\n+\n+#include <stdio.h>\n+#include <stdlib.h>\n+#include <objc/Object.h>\n+#include <objc/objc-api.h>\n+\n+#define VALUETOUSE 1234567890\n+\n+#ifdef __NEXT_RUNTIME__\n+/* Does not run with the next runtime. */\n+int main(void)\n+{\n+  return 0;\n+}\n+\n+#else\n+\n+id forwarder, receiver;\n+\n+@interface Forwarder: Object\n+{\n+    id receiver;\n+}\n+\n+-initWithReceiver:theReceiver;\n+\n+@end\n+\n+@interface Receiver:Object\n+{\n+    int foo;\n+}\n+-display;\n+-initWithFoo:(int)theFoo;\n+@end\n+@implementation Receiver\n+\n+-initWithFoo: (int)theFoo\n+{\n+    foo = theFoo;\n+    return self;\n+}\n+\n+-display\n+{\n+    /* Check to see if we are really the reciever. */\n+    if (self != receiver)\n+        abort ();\n+    /* And the value of foo is set correctly. */\n+    if (foo != VALUETOUSE)\n+      abort ();\n+    return self;\n+}\n+\n+@end\n+\n+@implementation Forwarder\n+-initWithReceiver: theReceiver\n+{\n+    [super init];\n+    receiver = theReceiver;\n+    return self;\n+}\n+-(retval_t) forward: (SEL)theSel: (arglist_t)theArgFrame\n+{\n+  /* If we have a reciever try to perform on that object */\n+    if (receiver)\n+        return [receiver performv: theSel: theArgFrame];\n+    return [self doesNotRecognize:theSel];\n+}\n+@end\n+int main()\n+{\n+    /* Init the reciever. */\n+    receiver = [[Receiver alloc] initWithFoo: VALUETOUSE];\n+    /* Init the fowarder. */\n+    forwarder = [[Forwarder alloc] initWithReceiver: receiver];\n+    /* Call display on the forwarder which in turns calls display on\n+       the reciever. */\n+    [forwarder display];\n+    exit(0);\n+}\n+\n+#endif"}]}