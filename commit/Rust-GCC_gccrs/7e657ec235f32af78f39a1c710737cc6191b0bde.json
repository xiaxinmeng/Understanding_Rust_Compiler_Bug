{"sha": "7e657ec235f32af78f39a1c710737cc6191b0bde", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2U2NTdlYzIzNWYzMmFmNzhmMzlhMWM3MTA3MzdjYzYxOTFiMGJkZQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@libertysurf.fr", "date": "2007-06-20T20:26:07Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2007-06-20T20:26:07Z"}, "message": "df-scan.c (df_get_call_refs): Be prepared for MEMs inside CLOBBERs.\n\n\t* df-scan.c (df_get_call_refs): Be prepared for MEMs inside CLOBBERs.\n\nFrom-SVN: r125894", "tree": {"sha": "6d7e6f88ea1a8c83efdd7629a1107e3fc2d23caa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6d7e6f88ea1a8c83efdd7629a1107e3fc2d23caa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7e657ec235f32af78f39a1c710737cc6191b0bde", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e657ec235f32af78f39a1c710737cc6191b0bde", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e657ec235f32af78f39a1c710737cc6191b0bde", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e657ec235f32af78f39a1c710737cc6191b0bde/comments", "author": {"login": "ebotcazou", "id": 48091907, "node_id": "MDQ6VXNlcjQ4MDkxOTA3", "avatar_url": "https://avatars.githubusercontent.com/u/48091907?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebotcazou", "html_url": "https://github.com/ebotcazou", "followers_url": "https://api.github.com/users/ebotcazou/followers", "following_url": "https://api.github.com/users/ebotcazou/following{/other_user}", "gists_url": "https://api.github.com/users/ebotcazou/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebotcazou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebotcazou/subscriptions", "organizations_url": "https://api.github.com/users/ebotcazou/orgs", "repos_url": "https://api.github.com/users/ebotcazou/repos", "events_url": "https://api.github.com/users/ebotcazou/events{/privacy}", "received_events_url": "https://api.github.com/users/ebotcazou/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7a9dcd47e849ac0ab853140336119f99578bd428", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a9dcd47e849ac0ab853140336119f99578bd428", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a9dcd47e849ac0ab853140336119f99578bd428"}], "stats": {"total": 17, "additions": 14, "deletions": 3}, "files": [{"sha": "4e4bdbf48962509f0b5c31a22ad7a863d7fcf35c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e657ec235f32af78f39a1c710737cc6191b0bde/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e657ec235f32af78f39a1c710737cc6191b0bde/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7e657ec235f32af78f39a1c710737cc6191b0bde", "patch": "@@ -1,3 +1,7 @@\n+2007-06-20  Eric Botcazou  <ebotcazou@libertysurf.fr>\n+\n+\t* df-scan.c (df_get_call_refs): Be prepared for MEMs inside CLOBBERs.\n+\n 2007-06-20  Rask Ingemann Lambertsen  <rask@sygehus.dk>\n \n \tPR target/32335"}, {"sha": "97ce8aad162564c9c85a2f71e8f1ba38d9c34d83", "filename": "gcc/df-scan.c", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e657ec235f32af78f39a1c710737cc6191b0bde/gcc%2Fdf-scan.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e657ec235f32af78f39a1c710737cc6191b0bde/gcc%2Fdf-scan.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdf-scan.c?ref=7e657ec235f32af78f39a1c710737cc6191b0bde", "patch": "@@ -3081,9 +3081,16 @@ df_get_call_refs (struct df_collection_rec * collection_rec,\n \t\t\tDF_REF_REG_USE, bb, insn, flags);\n       else if (GET_CODE (XEXP (note, 0)) == CLOBBER)\n \t{\n-\t  unsigned int regno = REGNO (XEXP (XEXP (note, 0), 0));\n-\t  if (!bitmap_bit_p (defs_generated, regno))\n-\t    df_defs_record (collection_rec, XEXP (note, 0), bb, insn, flags);\n+\t  if (REG_P (XEXP (XEXP (note, 0), 0)))\n+\t    {\n+\t      unsigned int regno = REGNO (XEXP (XEXP (note, 0), 0));\n+\t      if (!bitmap_bit_p (defs_generated, regno))\n+\t\tdf_defs_record (collection_rec, XEXP (note, 0), bb,\n+\t\t\t\tinsn, flags);\n+\t    }\n+\t  else\n+\t    df_uses_record (collection_rec, &XEXP (note, 0),\n+\t\t            DF_REF_REG_USE, bb, insn, flags);\n \t}\n     }\n "}]}