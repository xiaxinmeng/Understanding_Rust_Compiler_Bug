{"sha": "78e9b5dfc7fd1448f1e570ff97d5ab0e9b9e51ff", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzhlOWI1ZGZjN2ZkMTQ0OGYxZTU3MGZmOTdkNWFiMGU5YjllNTFmZg==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1994-09-09T19:35:29Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1994-09-09T19:35:29Z"}, "message": "(SQRTTF2_LIBCALL): Delete.\n\n(INIT_TARGET_OPTABS): Define.\n(INIT_SUBTARGET_OPTABS): Define.\n\nFrom-SVN: r8057", "tree": {"sha": "a6c38f3761b0a1d3d3bdf2caa868e029aad7fda8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a6c38f3761b0a1d3d3bdf2caa868e029aad7fda8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/78e9b5dfc7fd1448f1e570ff97d5ab0e9b9e51ff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78e9b5dfc7fd1448f1e570ff97d5ab0e9b9e51ff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78e9b5dfc7fd1448f1e570ff97d5ab0e9b9e51ff", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78e9b5dfc7fd1448f1e570ff97d5ab0e9b9e51ff/comments", "author": null, "committer": null, "parents": [{"sha": "2bb76168f81aa2afd4838ead50ae6e87c85e708e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2bb76168f81aa2afd4838ead50ae6e87c85e708e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2bb76168f81aa2afd4838ead50ae6e87c85e708e"}], "stats": {"total": 15, "additions": 14, "deletions": 1}, "files": [{"sha": "e025419515415fa3cfda979bc4397caac3643677", "filename": "gcc/config/sparc/sparc.h", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78e9b5dfc7fd1448f1e570ff97d5ab0e9b9e51ff/gcc%2Fconfig%2Fsparc%2Fsparc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78e9b5dfc7fd1448f1e570ff97d5ab0e9b9e51ff/gcc%2Fconfig%2Fsparc%2Fsparc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.h?ref=78e9b5dfc7fd1448f1e570ff97d5ab0e9b9e51ff", "patch": "@@ -2072,7 +2072,6 @@ extern struct rtx_def *legitimize_pic_address ();\n #define SUBTF3_LIBCALL \"_Q_sub\"\n #define MULTF3_LIBCALL \"_Q_mul\"\n #define DIVTF3_LIBCALL \"_Q_div\"\n-#define SQRTTF2_LIBCALL \"_Q_sqrt\"\n #define FLOATSITF2_LIBCALL \"_Q_itoq\"\n #define FIX_TRUNCTFSI2_LIBCALL \"_Q_qtoi\"\n #define FIXUNS_TRUNCTFSI2_LIBCALL \"_Q_qtou\"\n@@ -2087,6 +2086,20 @@ extern struct rtx_def *legitimize_pic_address ();\n #define LTTF2_LIBCALL \"_Q_flt\"\n #define LETF2_LIBCALL \"_Q_fle\"\n \n+/* We can define the TFmode sqrt optab only if TARGET_FPU.  This is because\n+   with soft-float, the SFmode and DFmode sqrt instructions will be absent,\n+   and the compiler will notice and try to use the TFmode sqrt instruction\n+   for calls to the builtin function sqrt, but this fails.  */\n+#define INIT_TARGET_OPTABS\t\\\n+  do {\t\t\t\t\\\n+    INIT_SUBTARGET_OPTABS;\t\\\n+    if (TARGET_FPU)\t\t\\\n+      sqrt_optab->handlers[(int) TFmode].libfunc = gen_rtx (SYMBOL_REF, Pmode, \"_Q_sqrt\"); \\\n+  } while (0)\n+\n+/* This is meant to be redefined in the host dependent files */\n+#define INIT_SUBTARGET_OPTABS\n+\n /* Compute the cost of computing a constant rtl expression RTX\n    whose rtx-code is CODE.  The body of this macro is a portion\n    of a switch statement.  If the code is computed here,"}]}