{"sha": "4e0148df67360c0e2f2dd99d71ebcd3f55d84bf3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGUwMTQ4ZGY2NzM2MGMwZTJmMmRkOTlkNzFlYmNkM2Y1NWQ4NGJmMw==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2004-10-24T00:46:10Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2004-10-24T00:46:10Z"}, "message": "stmt.c (expand_case): Handle the default label outside of the for loop.\n\n\t* stmt.c (expand_case): Handle the default label outside of\n\tthe for loop.  Remove code to handle a missing default label.\n\nFrom-SVN: r89502", "tree": {"sha": "b4831a3070cafc945a02d7cdf160b0fccc235c29", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b4831a3070cafc945a02d7cdf160b0fccc235c29"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4e0148df67360c0e2f2dd99d71ebcd3f55d84bf3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e0148df67360c0e2f2dd99d71ebcd3f55d84bf3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e0148df67360c0e2f2dd99d71ebcd3f55d84bf3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e0148df67360c0e2f2dd99d71ebcd3f55d84bf3/comments", "author": null, "committer": null, "parents": [{"sha": "545b6261a4895964fef608bd8e44ec1c30cfd96b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/545b6261a4895964fef608bd8e44ec1c30cfd96b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/545b6261a4895964fef608bd8e44ec1c30cfd96b"}], "stats": {"total": 42, "additions": 20, "deletions": 22}, "files": [{"sha": "40f212047218897f29547123632bcc83a16b99fa", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e0148df67360c0e2f2dd99d71ebcd3f55d84bf3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e0148df67360c0e2f2dd99d71ebcd3f55d84bf3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4e0148df67360c0e2f2dd99d71ebcd3f55d84bf3", "patch": "@@ -1,3 +1,8 @@\n+2004-10-24  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* stmt.c (expand_case): Handle the default label outside of\n+\tthe for loop.  Remove code to handle a missing default label.\n+\n 2004-10-23  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* dbxout.c (dbxout_function_decl): Don't use"}, {"sha": "3a9f6bc0b2fed3352bdad21138f5566bea3c0719", "filename": "gcc/stmt.c", "status": "modified", "additions": 15, "deletions": 22, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e0148df67360c0e2f2dd99d71ebcd3f55d84bf3/gcc%2Fstmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e0148df67360c0e2f2dd99d71ebcd3f55d84bf3/gcc%2Fstmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstmt.c?ref=4e0148df67360c0e2f2dd99d71ebcd3f55d84bf3", "patch": "@@ -2341,7 +2341,7 @@ expand_case (tree exp)\n   struct case_node *case_list = 0;\n \n   /* Label to jump to if no case matches.  */\n-  tree default_label_decl = 0;\n+  tree default_label_decl;\n \n   /* The switch body is lowered in gimplify.c, we should never have\n      switches with a non-NULL SWITCH_BODY here.  */\n@@ -2353,20 +2353,21 @@ expand_case (tree exp)\n   /* An ERROR_MARK occurs for various reasons including invalid data type.  */\n   if (index_type != error_mark_node)\n     {\n-      for (i = TREE_VEC_LENGTH (vec); --i >= 0; )\n-\t{\n-\t  tree elt = TREE_VEC_ELT (vec, i);\n+      tree elt;\n \n-\t  /* Handle default labels specially.  */\n-\t  if (!CASE_HIGH (elt) && !CASE_LOW (elt))\n-\t    {\n-\t      gcc_assert (!default_label_decl);\n-\t      default_label_decl = CASE_LABEL (elt);\n-\t    }\n-\t  else\n-\t    case_list = add_case_node (case_list, index_type,\n-\t\t\t\t       CASE_LOW (elt), CASE_HIGH (elt),\n-\t\t\t\t       CASE_LABEL (elt));\n+      /* The default case is at the end of TREE_VEC.  */\n+      elt = TREE_VEC_ELT (vec, TREE_VEC_LENGTH (vec) - 1);\n+      gcc_assert (!CASE_HIGH (elt));\n+      gcc_assert (!CASE_LOW (elt));\n+      default_label_decl = CASE_LABEL (elt);\n+\n+      for (i = TREE_VEC_LENGTH (vec) - 1; --i >= 0; )\n+\t{\n+\t  elt = TREE_VEC_ELT (vec, i);\n+\t  gcc_assert (CASE_LOW (elt));\n+\t  case_list = add_case_node (case_list, index_type,\n+\t\t\t\t     CASE_LOW (elt), CASE_HIGH (elt),\n+\t\t\t\t     CASE_LABEL (elt));\n \t}\n \n \n@@ -2379,14 +2380,6 @@ expand_case (tree exp)\n \t  start = get_last_insn ();\n \t}\n \n-      /* If we don't have a default-label, create one here,\n-\t after the body of the switch.  */\n-      if (default_label_decl == 0)\n-\t{\n-\t  default_label_decl\n-\t    = build_decl (LABEL_DECL, NULL_TREE, NULL_TREE);\n-\t  expand_label (default_label_decl);\n-\t}\n       default_label = label_rtx (default_label_decl);\n \n       before_case = get_last_insn ();"}]}