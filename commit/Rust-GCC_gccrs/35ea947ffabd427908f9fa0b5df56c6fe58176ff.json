{"sha": "35ea947ffabd427908f9fa0b5df56c6fe58176ff", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzVlYTk0N2ZmYWJkNDI3OTA4ZjlmYTBiNWRmNTZjNmZlNTgxNzZmZg==", "commit": {"author": {"name": "Fritz O. Reese", "email": "fritzoreese@gmail.com", "date": "2016-11-03T16:00:58Z"}, "committer": {"name": "Fritz Reese", "email": "foreese@gcc.gnu.org", "date": "2016-11-03T16:00:58Z"}, "message": "Support legacy PARAMETER statements with -std=legacy.\n\n\tgcc/fortran/\n\t* decl.c (gfc_match_parameter): Allow omitted '()' with -std=legacy.\n\t* parse.c (decode_statement): Match \"parameter\" before assignments.\n\t* gfortran.texi: Document.\n\n\tgcc/testsuite/gfortran.dg/\n\t* dec_parameter_1.f: New test.\n\t* dec_parameter_2.f90: Likewise.\n\t* dec_parameter_3.f90: Likewise.\n\t* dec_parameter_4.f90: Likewise.\n\nFrom-SVN: r241823", "tree": {"sha": "4b94c9ccf0d58309cda7b6af4ee09b7212fc57fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4b94c9ccf0d58309cda7b6af4ee09b7212fc57fa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/35ea947ffabd427908f9fa0b5df56c6fe58176ff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35ea947ffabd427908f9fa0b5df56c6fe58176ff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/35ea947ffabd427908f9fa0b5df56c6fe58176ff", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35ea947ffabd427908f9fa0b5df56c6fe58176ff/comments", "author": {"login": "fritzr", "id": 2230564, "node_id": "MDQ6VXNlcjIyMzA1NjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2230564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fritzr", "html_url": "https://github.com/fritzr", "followers_url": "https://api.github.com/users/fritzr/followers", "following_url": "https://api.github.com/users/fritzr/following{/other_user}", "gists_url": "https://api.github.com/users/fritzr/gists{/gist_id}", "starred_url": "https://api.github.com/users/fritzr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fritzr/subscriptions", "organizations_url": "https://api.github.com/users/fritzr/orgs", "repos_url": "https://api.github.com/users/fritzr/repos", "events_url": "https://api.github.com/users/fritzr/events{/privacy}", "received_events_url": "https://api.github.com/users/fritzr/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c0ae959bedcbeae109608c9a13903407bd9b636e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0ae959bedcbeae109608c9a13903407bd9b636e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c0ae959bedcbeae109608c9a13903407bd9b636e"}], "stats": {"total": 198, "additions": 195, "deletions": 3}, "files": [{"sha": "baec7bf3eb5bc975ba9bd07a20c5141ed7846e51", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35ea947ffabd427908f9fa0b5df56c6fe58176ff/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35ea947ffabd427908f9fa0b5df56c6fe58176ff/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=35ea947ffabd427908f9fa0b5df56c6fe58176ff", "patch": "@@ -1,3 +1,9 @@\n+2016-11-03  Fritz O. Reese <fritzoreese@gmail.com>\n+\n+\t* decl.c (gfc_match_parameter): Allow omitted '()' with -std=legacy.\n+\t* parse.c (decode_statement): Match \"parameter\" before assignments.\n+\t* gfortran.texi: Document.\n+\n 2016-11-02  Fritz O. Reese <fritzoreese@gmail.com>\n \n \t* lang.opt, invoke.texi: New argument -Wargument-mismatch."}, {"sha": "0120cebb3222ca699f6e4536cf5f8ebf30313c5c", "filename": "gcc/fortran/decl.c", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35ea947ffabd427908f9fa0b5df56c6fe58176ff/gcc%2Ffortran%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35ea947ffabd427908f9fa0b5df56c6fe58176ff/gcc%2Ffortran%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdecl.c?ref=35ea947ffabd427908f9fa0b5df56c6fe58176ff", "patch": "@@ -7821,18 +7821,24 @@ do_parm (void)\n match\n gfc_match_parameter (void)\n {\n+  const char *term = \" )%t\";\n   match m;\n \n   if (gfc_match_char ('(') == MATCH_NO)\n-    return MATCH_NO;\n+    {\n+      /* With legacy PARAMETER statements, don't expect a terminating ')'.  */\n+      if (!gfc_notify_std (GFC_STD_LEGACY, \"PARAMETER without '()' at %C\"))\n+\treturn MATCH_NO;\n+      term = \" %t\";\n+    }\n \n   for (;;)\n     {\n       m = do_parm ();\n       if (m != MATCH_YES)\n \tbreak;\n \n-      if (gfc_match (\" )%t\") == MATCH_YES)\n+      if (gfc_match (term) == MATCH_YES)\n \tbreak;\n \n       if (gfc_match_char (',') != MATCH_YES)"}, {"sha": "cd2c5a52575e88f9195400d46e5337927d40b8d1", "filename": "gcc/fortran/gfortran.texi", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35ea947ffabd427908f9fa0b5df56c6fe58176ff/gcc%2Ffortran%2Fgfortran.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35ea947ffabd427908f9fa0b5df56c6fe58176ff/gcc%2Ffortran%2Fgfortran.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.texi?ref=35ea947ffabd427908f9fa0b5df56c6fe58176ff", "patch": "@@ -1471,6 +1471,7 @@ compatibility extensions along with those enabled by @option{-std=legacy}.\n * .XOR. operator::\n * Bitwise logical operators::\n * Extended I/O specifiers::\n+* Legacy PARAMETER statements::\n @end menu\n \n @node Old-style kind specifications\n@@ -2696,6 +2697,23 @@ supported on other systems.\n \n @end table\n \n+@node Legacy PARAMETER statements\n+@subsection Legacy PARAMETER statements\n+@cindex PARAMETER\n+\n+For compatibility, GNU Fortran supports legacy PARAMETER statements without\n+parentheses with @option{-std=legacy}.  A warning is emitted if used with\n+@option{-std=gnu}, and an error is acknowledged with a real Fortran standard\n+flag (@option{-std=f95}, etc...).  These statements take the following form:\n+\n+@smallexample\n+implicit real (E)\n+parameter e = 2.718282\n+real c\n+parameter c = 3.0e8\n+@end smallexample\n+\n+\n @node Extensions not implemented in GNU Fortran\n @section Extensions not implemented in GNU Fortran\n @cindex extensions, not implemented"}, {"sha": "0ee054a014c2e2ceed7f4c58c6a7f3f8018d016f", "filename": "gcc/fortran/parse.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35ea947ffabd427908f9fa0b5df56c6fe58176ff/gcc%2Ffortran%2Fparse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35ea947ffabd427908f9fa0b5df56c6fe58176ff/gcc%2Ffortran%2Fparse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fparse.c?ref=35ea947ffabd427908f9fa0b5df56c6fe58176ff", "patch": "@@ -352,6 +352,9 @@ decode_statement (void)\n     }\n   gfc_matching_function = false;\n \n+  /* Legacy parameter statements are ambiguous with assignments so try parameter\n+     first.  */\n+  match (\"parameter\", gfc_match_parameter, ST_PARAMETER);\n \n   /* Match statements whose error messages are meant to be overwritten\n      by something better.  */\n@@ -528,7 +531,6 @@ decode_statement (void)\n \n     case 'p':\n       match (\"print\", gfc_match_print, ST_WRITE);\n-      match (\"parameter\", gfc_match_parameter, ST_PARAMETER);\n       match (\"pause\", gfc_match_pause, ST_PAUSE);\n       match (\"pointer\", gfc_match_pointer, ST_ATTR_DECL);\n       if (gfc_match_private (&st) == MATCH_YES)"}, {"sha": "3b395839e1133f7f10922e12fe93fb5d05bd38b7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35ea947ffabd427908f9fa0b5df56c6fe58176ff/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35ea947ffabd427908f9fa0b5df56c6fe58176ff/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=35ea947ffabd427908f9fa0b5df56c6fe58176ff", "patch": "@@ -1,3 +1,10 @@\n+2016-11-03  Fritz O. Reese <fritzoreese@gmail.com>\n+\n+\t* gfortran.dg/dec_parameter_1.f: New test.\n+\t* gfortran.dg/dec_parameter_2.f90: Likewise.\n+\t* gfortran.dg/dec_parameter_3.f90: Likewise.\n+\t* gfortran.dg/dec_parameter_4.f90: Likewise.\n+\n 2016-11-03  Martin Liska  <mliska@suse.cz>\n \n \t* gcc.dg/no_profile_instrument_function-attr-1.c: Update scanned"}, {"sha": "69ffa53c80693b79a8313bc2cadef99ed904252f", "filename": "gcc/testsuite/gfortran.dg/dec_parameter_1.f", "status": "added", "additions": 64, "deletions": 0, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35ea947ffabd427908f9fa0b5df56c6fe58176ff/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec_parameter_1.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35ea947ffabd427908f9fa0b5df56c6fe58176ff/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec_parameter_1.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec_parameter_1.f?ref=35ea947ffabd427908f9fa0b5df56c6fe58176ff", "patch": "@@ -0,0 +1,64 @@\n+        ! { dg-do run }\n+        ! { dg-options \"-ffixed-form -std=legacy\" }\n+        !\n+        ! Test DEC-style PARAMETER statements without parentheses in\n+        ! fixed form.\n+        !\n+\n+        subroutine sub1(t, x, y)\n+          implicit real(8) (A-H,O-Z)\n+          parameter   (pi_1 = 3.141592654d0, f_1 = 3.d08)\n+          parameter    pi_2 = 3.141592654d0, f_2 = 3.d08\n+          ! Note that if the parameter statements above are matched\n+          ! incorrectly as assignments, the below specification\n+          ! statements will be considered out-of-order and we see\n+          ! 'unexpected specification statement'. A PARAMETER\n+          ! statement should still be a specification statement.\n+\n+          real(8), intent(in) :: t\n+          real(8), intent(out) :: x, y\n+\n+          real(8), volatile :: two\n+          two = 2.0d0\n+          x = two * pi_1 * f_1 * t\n+          y = two * pi_2 * f_2 * t\n+          z = two * pi_3 * f_3 * t\n+          return\n+        end subroutine\n+\n+        subroutine sub2(t, x, y, z)\n+          implicit none\n+          real(8) :: pi_1, pi_2, f_1, f_2\n+                   parameter   (pi_1 = 3.141592654d0, f_1 = 3.d08)\n+                   parameter    pi_2 = 3.141592654d0, f_2 = 3.d08\n+          real(8), parameter :: pi_3 = 3.141592654d0, f_3 = 3.d08\n+          ! Ditto sub1\n+\n+          real(8), intent(in) :: t\n+          real(8), intent(out) :: x, y, z\n+\n+          real(8), volatile :: two\n+          two = 2.0d0\n+          x = two * pi_1 * f_1 * t\n+          y = two * pi_2 * f_2 * t\n+          z = two * pi_3 * f_3 * t\n+        end subroutine\n+\n+        implicit none\n+        real(8) :: x1, x2, y1, y2, z2\n+        real(8), volatile :: t\n+        t = 1.5e-6\n+\n+        call sub1(t, x1, y1)\n+        call sub2(t, x2, y2, z2)\n+\n+        write(*,'(4D18.5)') t, x1, y1\n+        write(*,'(4D18.5)') t, x2, y2, z2\n+\n+        if (x1 .ne. x2 .or. y1 .ne. y2\n+     &      .or. x1 .ne. y1 .or. x2 .ne. y2\n+     &      .or. y2 .ne. z2) then\n+          call abort()\n+        endif\n+\n+        end"}, {"sha": "280f0007f9322361f338383243ad3f72bca396a6", "filename": "gcc/testsuite/gfortran.dg/dec_parameter_2.f90", "status": "added", "additions": 63, "deletions": 0, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35ea947ffabd427908f9fa0b5df56c6fe58176ff/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec_parameter_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35ea947ffabd427908f9fa0b5df56c6fe58176ff/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec_parameter_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec_parameter_2.f90?ref=35ea947ffabd427908f9fa0b5df56c6fe58176ff", "patch": "@@ -0,0 +1,63 @@\n+! { dg-do run }\n+! { dg-options \"-ffree-form -std=legacy\" }\n+!\n+! Test DEC-style PARAMETER statements without parentheses in free form.\n+!\n+\n+subroutine sub1(t, x, y)\n+  implicit real(8) (A-H,O-Z)\n+  parameter   (pi_1 = 3.141592654d0, f_1 = 3.d08)\n+  parameter    pi_2 = 3.141592654d0, f_2 = 3.d08 ! legacy PARAMETER\n+  ! Note that if the parameter statements above are matched\n+  ! incorrectly as assignments, the below specification\n+  ! statements will be considered out-of-order and we see\n+  ! 'unexpected specification statement'. A PARAMETER\n+  ! statement should still be a specification statement.\n+\n+  real(8), intent(in) :: t\n+  real(8), intent(out) :: x, y\n+\n+  real(8), volatile :: two\n+  two = 2.0d0\n+  x = two * pi_1 * f_1 * t\n+  y = two * pi_2 * f_2 * t\n+  z = two * pi_3 * f_3 * t\n+  return\n+end subroutine\n+\n+subroutine sub2(t, x, y, z)\n+  implicit none\n+  real(8) :: pi_1, pi_2, f_1, f_2\n+           parameter   (pi_1 = 3.141592654d0, f_1 = 3.d08)\n+           parameter    pi_2 = 3.141592654d0, f_2 = 3.d08 ! legacy PARAMETER\n+  real(8), parameter :: pi_3 = 3.141592654d0, f_3 = 3.d08\n+  ! Ditto sub1\n+\n+  real(8), intent(in) :: t\n+  real(8), intent(out) :: x, y, z\n+\n+  real(8), volatile :: two\n+  two = 2.0d0\n+  x = two * pi_1 * f_1 * t\n+  y = two * pi_2 * f_2 * t\n+  z = two * pi_3 * f_3 * t\n+end subroutine\n+\n+implicit none\n+real(8) :: x1, x2, y1, y2, z2\n+real(8), volatile :: t\n+t = 1.5e-6\n+\n+call sub1(t, x1, y1)\n+call sub2(t, x2, y2, z2)\n+\n+write(*,'(4D18.5)') t, x1, y1\n+write(*,'(4D18.5)') t, x2, y2, z2\n+\n+if (x1 .ne. x2 .or. y1 .ne. y2 &\n+    .or. x1 .ne. y1 .or. x2 .ne. y2 &\n+    .or. y2 .ne. z2) then\n+  call abort()\n+endif\n+\n+end"}, {"sha": "92f0f61bb6606ae4937310331ff5ff60a66e67c1", "filename": "gcc/testsuite/gfortran.dg/dec_parameter_3.f90", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35ea947ffabd427908f9fa0b5df56c6fe58176ff/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec_parameter_3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35ea947ffabd427908f9fa0b5df56c6fe58176ff/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec_parameter_3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec_parameter_3.f90?ref=35ea947ffabd427908f9fa0b5df56c6fe58176ff", "patch": "@@ -0,0 +1,13 @@\n+! { dg-do compile }\n+! { dg-options \"-ffree-form -std=gnu\" }\n+!\n+! Test warnings for DEC-style PARAMETER statements with std=gnu.\n+!\n+\n+subroutine sub()\n+  implicit real(8) (A-Z)\n+  parameter pi = 3.1415926535d0 ! { dg-warning \"Legacy Extension: PARAMETER\" }\n+  print *, pi\n+end subroutine\n+\n+end"}, {"sha": "280d56c424f6abd09ff767981f5adb966827be65", "filename": "gcc/testsuite/gfortran.dg/dec_parameter_4.f90", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35ea947ffabd427908f9fa0b5df56c6fe58176ff/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec_parameter_4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35ea947ffabd427908f9fa0b5df56c6fe58176ff/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec_parameter_4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec_parameter_4.f90?ref=35ea947ffabd427908f9fa0b5df56c6fe58176ff", "patch": "@@ -0,0 +1,13 @@\n+! { dg-do compile }\n+! { dg-options \"-ffree-form -std=f95\" }\n+!\n+! Test errors for DEC-style PARAMETER statements with a real standard.\n+!\n+\n+subroutine sub()\n+  implicit real(8) (A-Z)\n+  parameter pi = 3.1415926535d0 ! { dg-error \"Legacy Extension: PARAMETER\" }\n+  print *, pi\n+end subroutine\n+\n+end"}]}