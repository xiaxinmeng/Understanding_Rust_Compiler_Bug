{"sha": "164c8956a0bc23d8bfc8532baa32b9a8b1adc08e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTY0Yzg5NTZhMGJjMjNkOGJmYzg1MzJiYWEzMmI5YThiMWFkYzA4ZQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1992-12-08T11:21:29Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1992-12-08T11:21:29Z"}, "message": "(max_uid): New variable.\n\n(cse_end_of_basic_block): Use it to ignore insns made by CSE.\n(cse_main): Set it.\n\nFrom-SVN: r2846", "tree": {"sha": "5ee040b6b9acef12374fffd9184303eb142bdd17", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5ee040b6b9acef12374fffd9184303eb142bdd17"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/164c8956a0bc23d8bfc8532baa32b9a8b1adc08e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/164c8956a0bc23d8bfc8532baa32b9a8b1adc08e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/164c8956a0bc23d8bfc8532baa32b9a8b1adc08e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/164c8956a0bc23d8bfc8532baa32b9a8b1adc08e/comments", "author": null, "committer": null, "parents": [{"sha": "7c791b139c5143cc357c0c48c14af5a962197503", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c791b139c5143cc357c0c48c14af5a962197503", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c791b139c5143cc357c0c48c14af5a962197503"}], "stats": {"total": 18, "additions": 12, "deletions": 6}, "files": [{"sha": "2fc7ca6583cb901ec5b7b3c19ee2c593dcb71879", "filename": "gcc/cse.c", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/164c8956a0bc23d8bfc8532baa32b9a8b1adc08e/gcc%2Fcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/164c8956a0bc23d8bfc8532baa32b9a8b1adc08e/gcc%2Fcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcse.c?ref=164c8956a0bc23d8bfc8532baa32b9a8b1adc08e", "patch": "@@ -328,6 +328,9 @@ static int cse_basic_block_end;\n \n static int *uid_cuid;\n \n+/* Highest UID in UID_CUID.  */\n+static int max_uid;\n+\n /* Get the cuid of an insn.  */\n \n #define INSN_CUID(INSN) (uid_cuid[INSN_UID (INSN)])\n@@ -7382,10 +7385,13 @@ cse_end_of_basic_block (insn, data, follow_jumps, after_loop, skip_blocks)\n       else if (GET_CODE (p) != NOTE)\n \tnsets += 1;\n \t\n-      if (INSN_CUID (p) > high_cuid)\n+      /* Ignore insns made by CSE; they cannot affect the boundaries of\n+\t the basic block.  */\n+\n+      if (INSN_UID (p) <= max_uid && INSN_CUID (p) > high_cuid)\n \thigh_cuid = INSN_CUID (p);\n-      if (INSN_CUID (p) < low_cuid)\n-\tlow_cuid = INSN_CUID(p);\n+      if (INSN_UID (p) <= max_uid && INSN_CUID (p) < low_cuid)\n+\tlow_cuid = INSN_CUID (p);\n \n       /* See if this insn is in our branch path.  If it is and we are to\n \t take it, do so.  */\n@@ -7569,9 +7575,9 @@ cse_main (f, nregs, after_loop, file)\n \n   /* Find the largest uid.  */\n \n-  i = get_max_uid ();\n-  uid_cuid = (int *) alloca ((i + 1) * sizeof (int));\n-  bzero (uid_cuid, (i + 1) * sizeof (int));\n+  max_uid = get_max_uid ();\n+  uid_cuid = (int *) alloca ((max_uid + 1) * sizeof (int));\n+  bzero (uid_cuid, (max_uid + 1) * sizeof (int));\n \n   /* Compute the mapping from uids to cuids.\n      CUIDs are numbers assigned to insns, like uids,"}]}