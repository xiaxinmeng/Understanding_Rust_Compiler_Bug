{"sha": "b4c522fabd0df7be08882d2207df8b2765026110", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjRjNTIyZmFiZDBkZjdiZTA4ODgyZDIyMDdkZjhiMjc2NTAyNjExMA==", "commit": {"author": {"name": "Iain Buclaw", "email": "ibuclaw@gcc.gnu.org", "date": "2018-10-28T19:51:47Z"}, "committer": {"name": "Iain Buclaw", "email": "ibuclaw@gcc.gnu.org", "date": "2018-10-28T19:51:47Z"}, "message": "Add D front-end, libphobos library, and D2 testsuite.\n\nChangeLog:\n\n\t* Makefile.def (target_modules): Add libphobos.\n\t(flags_to_pass): Add GDC, GDCFLAGS, GDC_FOR_TARGET and\n\tGDCFLAGS_FOR_TARGET.\n\t(dependencies): Make libphobos depend on libatomic, libbacktrace\n\tconfigure, and zlib configure.\n\t(language): Add language d.\n\t* Makefile.in: Rebuild.\n\t* Makefile.tpl (BUILD_EXPORTS): Add GDC and GDCFLAGS.\n\t(HOST_EXPORTS): Add GDC.\n\t(POSTSTAGE1_HOST_EXPORTS): Add GDC and GDC_FOR_BUILD.\n\t(BASE_TARGET_EXPORTS): Add GDC.\n\t(GDC_FOR_BUILD, GDC, GDCFLAGS): New variables.\n\t(GDC_FOR_TARGET, GDC_FLAGS_FOR_TARGET): New variables.\n\t(EXTRA_HOST_FLAGS): Add GDC.\n\t(STAGE1_FLAGS_TO_PASS): Add GDC.\n\t(EXTRA_TARGET_FLAGS): Add GDC and GDCFLAGS.\n\t* config-ml.in: Treat GDC and GDCFLAGS like other compiler/flag\n\tenvironment variables.\n\t* configure: Rebuild.\n\t* configure.ac: Add target-libphobos to target_libraries.  Set and\n\tsubstitute GDC_FOR_BUILD and GDC_FOR_TARGET.\n\nconfig/ChangeLog:\n\n\t* multi.m4: Set GDC.\n\ngcc/ChangeLog:\n\n\t* Makefile.in (tm_d_file_list, tm_d_include_list): New variables.\n\t(TM_D_H, D_TARGET_DEF, D_TARGET_H, D_TARGET_OBJS): New variables.\n\t(tm_d.h, cs-tm_d.h, default-d.o): New rules.\n\t(d/d-target-hooks-def.h, s-d-target-hooks-def-h): New rules.\n\t(s-tm-texi): Also check timestamp on d-target.def.\n\t(generated_files): Add TM_D_H and d-target-hooks-def.h.\n\t(build/genhooks.o): Also depend on D_TARGET_DEF.\n\t* config.gcc (tm_d_file, d_target_objs, target_has_targetdm): New\n\tvariables.\n\t* config/aarch64/aarch64-d.c: New file.\n\t* config/aarch64/aarch64-linux.h (GNU_USER_TARGET_D_CRITSEC_SIZE):\n\tDefine.\n\t* config/aarch64/aarch64-protos.h (aarch64_d_target_versions): New\n\tprototype.\n\t* config/aarch64/aarch64.h (TARGET_D_CPU_VERSIONS): Define.\n\t* config/aarch64/t-aarch64 (aarch64-d.o): New rule.\n\t* config/arm/arm-d.c: New file.\n\t* config/arm/arm-protos.h (arm_d_target_versions): New prototype.\n\t* config/arm/arm.h (TARGET_D_CPU_VERSIONS): Define.\n\t* config/arm/linux-eabi.h (EXTRA_TARGET_D_OS_VERSIONS): Define.\n\t* config/arm/t-arm (arm-d.o): New rule.\n\t* config/default-d.c: New file.\n\t* config/glibc-d.c: New file.\n\t* config/gnu.h (GNU_USER_TARGET_D_OS_VERSIONS): Define.\n\t* config/i386/i386-d.c: New file.\n\t* config/i386/i386-protos.h (ix86_d_target_versions): New prototype.\n\t* config/i386/i386.h (TARGET_D_CPU_VERSIONS): Define.\n\t* config/i386/linux-common.h (EXTRA_TARGET_D_OS_VERSIONS): Define.\n\t(GNU_USER_TARGET_D_CRITSEC_SIZE): Define.\n\t* config/i386/t-i386 (i386-d.o): New rule.\n\t* config/kfreebsd-gnu.h (GNU_USER_TARGET_D_OS_VERSIONS): Define.\n\t* config/kopensolaris-gnu.h (GNU_USER_TARGET_D_OS_VERSIONS): Define.\n\t* config/linux-android.h (ANDROID_TARGET_D_OS_VERSIONS): Define.\n\t* config/linux.h (GNU_USER_TARGET_D_OS_VERSIONS): Define.\n\t* config/mips/linux-common.h (EXTRA_TARGET_D_OS_VERSIONS): Define.\n\t* config/mips/mips-d.c: New file.\n\t* config/mips/mips-protos.h (mips_d_target_versions): New prototype.\n\t* config/mips/mips.h (TARGET_D_CPU_VERSIONS): Define.\n\t* config/mips/t-mips (mips-d.o): New rule.\n\t* config/powerpcspe/linux.h (GNU_USER_TARGET_D_OS_VERSIONS): Define.\n\t* config/powerpcspe/linux64.h (GNU_USER_TARGET_D_OS_VERSIONS): Define.\n\t* config/powerpcspe/powerpcspe-d.c: New file.\n\t* config/powerpcspe/powerpcspe-protos.h (rs6000_d_target_versions):\n\tNew prototype.\n\t* config/powerpcspe/powerpcspe.c (rs6000_output_function_epilogue):\n\tSupport GNU D by using 0 as the language type.\n\t* config/powerpcspe/powerpcspe.h (TARGET_D_CPU_VERSIONS): Define.\n\t* config/powerpcspe/t-powerpcspe (powerpcspe-d.o): New rule.\n\t* config/riscv/riscv-d.c: New file.\n\t* config/riscv/riscv-protos.h (riscv_d_target_versions): New\n\tprototype.\n\t* config/riscv/riscv.h (TARGET_D_CPU_VERSIONS): Define.\n\t* config/riscv/t-riscv (riscv-d.o): New rule.\n\t* config/rs6000/linux.h (GNU_USER_TARGET_D_OS_VERSIONS): Define.\n\t* config/rs6000/linux64.h (GNU_USER_TARGET_D_OS_VERSIONS): Define.\n\t* config/rs6000/rs6000-d.c: New file.\n\t* config/rs6000/rs6000-protos.h (rs6000_d_target_versions): New\n\tprototype.\n\t* config/rs6000/rs6000.c (rs6000_output_function_epilogue):\n\tSupport GNU D by using 0 as the language type.\n\t* config/rs6000/rs6000.h (TARGET_D_CPU_VERSIONS): Define.\n\t* config/rs6000/t-rs6000 (rs6000-d.o): New rule.\n\t* config/s390/s390-d.c: New file.\n\t* config/s390/s390-protos.h (s390_d_target_versions): New prototype.\n\t* config/s390/s390.h (TARGET_D_CPU_VERSIONS): Define.\n\t* config/s390/t-s390 (s390-d.o): New rule.\n\t* config/sparc/sparc-d.c: New file.\n\t* config/sparc/sparc-protos.h (sparc_d_target_versions): New\n\tprototype.\n\t* config/sparc/sparc.h (TARGET_D_CPU_VERSIONS): Define.\n\t* config/sparc/t-sparc (sparc-d.o): New rule.\n\t* config/t-glibc (glibc-d.o): New rule.\n\t* configure: Regenerated.\n\t* configure.ac (tm_d_file): New variable.\n\t(tm_d_file_list, tm_d_include_list, d_target_objs): Add substitutes.\n\t* doc/contrib.texi (Contributors): Add self for the D frontend.\n\t* doc/frontends.texi (G++ and GCC): Mention D as a supported language.\n\t* doc/install.texi (Configuration): Mention libphobos as an option for\n\t--enable-shared.  Mention d as an option for --enable-languages.\n\t(Testing): Mention check-d as a target.\n\t* doc/invoke.texi (Overall Options): Mention .d, .dd, and .di as file\n\tname suffixes.  Mention d as a -x option.\n\t* doc/sourcebuild.texi (Top Level): Mention libphobos.\n\t* doc/standards.texi (Standards): Add section on D language.\n\t* doc/tm.texi: Regenerated.\n\t* doc/tm.texi.in: Add @node for D language and ABI, and @hook for\n\tTARGET_CPU_VERSIONS, TARGET_D_OS_VERSIONS, and TARGET_D_CRITSEC_SIZE.\n\t* dwarf2out.c (is_dlang): New function.\n\t(gen_compile_unit_die): Use DW_LANG_D for D.\n\t(declare_in_namespace): Return module die for D, instead of adding\n\textra declarations into the namespace.\n\t(gen_namespace_die): Generate DW_TAG_module for D.\n\t(gen_decl_die): Handle CONST_DECLSs for D.\n\t(dwarf2out_decl): Likewise.\n\t(prune_unused_types_walk_local_classes): Handle DW_tag_interface_type.\n\t(prune_unused_types_walk): Handle DW_tag_interface_type same as other\n\tkinds of aggregates.\n\t* gcc.c (default_compilers): Add entries for .d, .dd and .di.\n\t* genhooks.c: Include d/d-target.def.\n\ngcc/po/ChangeLog:\n\n\t* EXCLUDES: Add sources from d/dmd.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.misc-tests/help.exp: Add D to option descriptions check.\n\t* gdc.dg/asan/asan.exp: New file.\n\t* gdc.dg/asan/gdc272.d: New test.\n\t* gdc.dg/compilable.d: New test.\n\t* gdc.dg/dg.exp: New file.\n\t* gdc.dg/gdc254.d: New test.\n\t* gdc.dg/gdc260.d: New test.\n\t* gdc.dg/gdc270a.d: New test.\n\t* gdc.dg/gdc270b.d: New test.\n\t* gdc.dg/gdc282.d: New test.\n\t* gdc.dg/gdc283.d: New test.\n\t* gdc.dg/imports/gdc170.d: New test.\n\t* gdc.dg/imports/gdc231.d: New test.\n\t* gdc.dg/imports/gdc239.d: New test.\n\t* gdc.dg/imports/gdc241a.d: New test.\n\t* gdc.dg/imports/gdc241b.d: New test.\n\t* gdc.dg/imports/gdc251a.d: New test.\n\t* gdc.dg/imports/gdc251b.d: New test.\n\t* gdc.dg/imports/gdc253.d: New test.\n\t* gdc.dg/imports/gdc254a.d: New test.\n\t* gdc.dg/imports/gdc256.d: New test.\n\t* gdc.dg/imports/gdc27.d: New test.\n\t* gdc.dg/imports/gdcpkg256/package.d: New test.\n\t* gdc.dg/imports/runnable.d: New test.\n\t* gdc.dg/link.d: New test.\n\t* gdc.dg/lto/lto.exp: New file.\n\t* gdc.dg/lto/ltotests_0.d: New test.\n\t* gdc.dg/lto/ltotests_1.d: New test.\n\t* gdc.dg/runnable.d: New test.\n\t* gdc.dg/simd.d: New test.\n\t* gdc.test/gdc-test.exp: New file.\n\t* lib/gdc-dg.exp: New file.\n\t* lib/gdc.exp: New file.\n\nlibphobos/ChangeLog:\n\n\t* Makefile.am: New file.\n\t* Makefile.in: New file.\n\t* acinclude.m4: New file.\n\t* aclocal.m4: New file.\n\t* config.h.in: New file.\n\t* configure: New file.\n\t* configure.ac: New file.\n\t* d_rules.am: New file.\n\t* libdruntime/Makefile.am: New file.\n\t* libdruntime/Makefile.in: New file.\n\t* libdruntime/__entrypoint.di: New file.\n\t* libdruntime/__main.di: New file.\n\t* libdruntime/gcc/attribute.d: New file.\n\t* libdruntime/gcc/backtrace.d: New file.\n\t* libdruntime/gcc/builtins.d: New file.\n\t* libdruntime/gcc/config.d.in: New file.\n\t* libdruntime/gcc/deh.d: New file.\n\t* libdruntime/gcc/libbacktrace.d.in: New file.\n\t* libdruntime/gcc/unwind/arm.d: New file.\n\t* libdruntime/gcc/unwind/arm_common.d: New file.\n\t* libdruntime/gcc/unwind/c6x.d: New file.\n\t* libdruntime/gcc/unwind/generic.d: New file.\n\t* libdruntime/gcc/unwind/package.d: New file.\n\t* libdruntime/gcc/unwind/pe.d: New file.\n\t* m4/autoconf.m4: New file.\n\t* m4/druntime.m4: New file.\n\t* m4/druntime/cpu.m4: New file.\n\t* m4/druntime/libraries.m4: New file.\n\t* m4/druntime/os.m4: New file.\n\t* m4/gcc_support.m4: New file.\n\t* m4/gdc.m4: New file.\n\t* m4/libtool.m4: New file.\n\t* src/Makefile.am: New file.\n\t* src/Makefile.in: New file.\n\t* src/libgphobos.spec.in: New file.\n\t* testsuite/Makefile.am: New file.\n\t* testsuite/Makefile.in: New file.\n\t* testsuite/config/default.exp: New file.\n\t* testsuite/lib/libphobos-dg.exp: New file.\n\t* testsuite/lib/libphobos.exp: New file.\n\t* testsuite/testsuite_flags.in: New file.\n\nFrom-SVN: r265573", "tree": {"sha": "b5ffc312b0a441c1ba24323152aec463fdbe5e9f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b5ffc312b0a441c1ba24323152aec463fdbe5e9f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b4c522fabd0df7be08882d2207df8b2765026110", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4c522fabd0df7be08882d2207df8b2765026110", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b4c522fabd0df7be08882d2207df8b2765026110", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4c522fabd0df7be08882d2207df8b2765026110/comments", "author": null, "committer": null, "parents": [{"sha": "01ce9e31a02c8039d88e90f983735104417bf034", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01ce9e31a02c8039d88e90f983735104417bf034", "html_url": "https://github.com/Rust-GCC/gccrs/commit/01ce9e31a02c8039d88e90f983735104417bf034"}], "stats": {"total": 859740, "additions": 859714, "deletions": 26}, "files": [{"sha": "3ad23042bdd83dfc7dd9fc1777f766c080b222a3", "filename": "ChangeLog", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=b4c522fabd0df7be08882d2207df8b2765026110", "patch": "@@ -1,3 +1,27 @@\n+2018-10-28  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* Makefile.def (target_modules): Add libphobos.\n+\t(flags_to_pass): Add GDC, GDCFLAGS, GDC_FOR_TARGET and\n+\tGDCFLAGS_FOR_TARGET.\n+\t(dependencies): Make libphobos depend on libatomic, libbacktrace\n+\tconfigure, and zlib configure.\n+\t(language): Add language d.\n+\t* Makefile.in: Rebuild.\n+\t* Makefile.tpl (BUILD_EXPORTS): Add GDC and GDCFLAGS.\n+\t(HOST_EXPORTS): Add GDC.\n+\t(POSTSTAGE1_HOST_EXPORTS): Add GDC and GDC_FOR_BUILD.\n+\t(BASE_TARGET_EXPORTS): Add GDC.\n+\t(GDC_FOR_BUILD, GDC, GDCFLAGS): New variables.\n+\t(GDC_FOR_TARGET, GDC_FLAGS_FOR_TARGET): New variables.\n+\t(EXTRA_HOST_FLAGS): Add GDC.\n+\t(STAGE1_FLAGS_TO_PASS): Add GDC.\n+\t(EXTRA_TARGET_FLAGS): Add GDC and GDCFLAGS.\n+\t* config-ml.in: Treat GDC and GDCFLAGS like other compiler/flag\n+\tenvironment variables.\n+\t* configure: Rebuild.\n+\t* configure.ac: Add target-libphobos to target_libraries.  Set and\n+\tsubstitute GDC_FOR_BUILD and GDC_FOR_TARGET.\n+\n 2018-10-24  Ilya Leoshkevich  <iii@linux.ibm.com>\n \n \t* MAINTAINERS (Write After Approval): Add myself."}, {"sha": "1aab271d8aadff470744cf1f67b81c68b5154e8a", "filename": "Makefile.def", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/Makefile.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/Makefile.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.def?ref=b4c522fabd0df7be08882d2207df8b2765026110", "patch": "@@ -153,6 +153,8 @@ target_modules = { module= libgfortran; };\n target_modules = { module= libobjc; };\n target_modules = { module= libgo; };\n target_modules = { module= libhsail-rt; };\n+target_modules = { module= libphobos;\n+\t\t   lib_path=src/.libs; };\n target_modules = { module= libtermcap; no_check=true;\n                    missing=mostlyclean;\n                    missing=clean;\n@@ -265,6 +267,8 @@ flags_to_pass = { flag= STAGE1_CHECKING ; };\n flags_to_pass = { flag= STAGE1_LANGUAGES ; };\n flags_to_pass = { flag= GNATBIND ; };\n flags_to_pass = { flag= GNATMAKE ; };\n+flags_to_pass = { flag= GDC ; };\n+flags_to_pass = { flag= GDCFLAGS ; };\n \n // Target tools\n flags_to_pass = { flag= AR_FOR_TARGET ; };\n@@ -278,6 +282,8 @@ flags_to_pass = { flag= FLAGS_FOR_TARGET ; };\n flags_to_pass = { flag= GFORTRAN_FOR_TARGET ; };\n flags_to_pass = { flag= GOC_FOR_TARGET ; };\n flags_to_pass = { flag= GOCFLAGS_FOR_TARGET ; };\n+flags_to_pass = { flag= GDC_FOR_TARGET ; };\n+flags_to_pass = { flag= GDCFLAGS_FOR_TARGET ; };\n flags_to_pass = { flag= LD_FOR_TARGET ; };\n flags_to_pass = { flag= LIPO_FOR_TARGET ; };\n flags_to_pass = { flag= LDFLAGS_FOR_TARGET ; };\n@@ -544,6 +550,11 @@ dependencies = { module=configure-target-libgo; on=all-target-libstdc++-v3; };\n dependencies = { module=all-target-libgo; on=all-target-libbacktrace; };\n dependencies = { module=all-target-libgo; on=all-target-libffi; };\n dependencies = { module=all-target-libgo; on=all-target-libatomic; };\n+dependencies = { module=configure-target-libphobos; on=configure-target-libbacktrace; };\n+dependencies = { module=configure-target-libphobos; on=configure-target-zlib; };\n+dependencies = { module=all-target-libphobos; on=all-target-libbacktrace; };\n+dependencies = { module=all-target-libphobos; on=all-target-zlib; };\n+dependencies = { module=all-target-libphobos; on=all-target-libatomic; };\n dependencies = { module=configure-target-libstdc++-v3; on=configure-target-libgomp; };\n dependencies = { module=configure-target-liboffloadmic; on=configure-target-libgomp; };\n dependencies = { module=configure-target-libsanitizer; on=all-target-libstdc++-v3; };\n@@ -557,6 +568,7 @@ dependencies = { module=all-target-liboffloadmic; on=all-target-libgomp; };\n dependencies = { module=install-target-libgo; on=install-target-libatomic; };\n dependencies = { module=install-target-libgfortran; on=install-target-libquadmath; };\n dependencies = { module=install-target-libgfortran; on=install-target-libgcc; };\n+dependencies = { module=install-target-libphobos; on=install-target-libatomic; };\n dependencies = { module=install-target-libsanitizer; on=install-target-libstdc++-v3; };\n dependencies = { module=install-target-libsanitizer; on=install-target-libgcc; };\n dependencies = { module=install-target-libvtv; on=install-target-libstdc++-v3; };\n@@ -598,6 +610,8 @@ languages = { language=go;\tgcc-check-target=check-go;\n \t\t\t\tlib-check-target=check-gotools; };\n languages = { language=brig;\tgcc-check-target=check-brig;\n \t\t\t\tlib-check-target=check-target-libhsail-rt; };\n+languages = { language=d;\tgcc-check-target=check-d;\n+\t\t\t\tlib-check-target=check-target-libphobos; };\n \n // Toplevel bootstrap\n bootstrap_stage = { id=1 ; };"}, {"sha": "899f4332ce01320eeb411f609091e1656188d453", "filename": "Makefile.in", "status": "modified", "additions": 525, "deletions": 1, "changes": 526, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/Makefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/Makefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.in?ref=b4c522fabd0df7be08882d2207df8b2765026110", "patch": "@@ -156,6 +156,8 @@ BUILD_EXPORTS = \\\n \tGFORTRAN=\"$(GFORTRAN_FOR_BUILD)\"; export GFORTRAN; \\\n \tGOC=\"$(GOC_FOR_BUILD)\"; export GOC; \\\n \tGOCFLAGS=\"$(GOCFLAGS_FOR_BUILD)\"; export GOCFLAGS; \\\n+\tGDC=\"$(GDC_FOR_BUILD)\"; export GDC; \\\n+\tGDCFLAGS=\"$(GDCFLAGS_FOR_BUILD)\"; export GDCFLAGS; \\\n \tDLLTOOL=\"$(DLLTOOL_FOR_BUILD)\"; export DLLTOOL; \\\n \tLD=\"$(LD_FOR_BUILD)\"; export LD; \\\n \tLDFLAGS=\"$(LDFLAGS_FOR_BUILD)\"; export LDFLAGS; \\\n@@ -192,6 +194,7 @@ HOST_EXPORTS = \\\n \tCXXFLAGS=\"$(CXXFLAGS)\"; export CXXFLAGS; \\\n \tGFORTRAN=\"$(GFORTRAN)\"; export GFORTRAN; \\\n \tGOC=\"$(GOC)\"; export GOC; \\\n+\tGDC=\"$(GDC)\"; export GDC; \\\n \tAR=\"$(AR)\"; export AR; \\\n \tAS=\"$(AS)\"; export AS; \\\n \tCC_FOR_BUILD=\"$(CC_FOR_BUILD)\"; export CC_FOR_BUILD; \\\n@@ -256,6 +259,14 @@ POSTSTAGE1_HOST_EXPORTS = \\\n \tCC_FOR_BUILD=\"$$CC\"; export CC_FOR_BUILD; \\\n \t$(POSTSTAGE1_CXX_EXPORT) \\\n \t$(LTO_EXPORTS) \\\n+\tGDC=\"$$r/$(HOST_SUBDIR)/prev-gcc/gdc$(exeext) -B$$r/$(HOST_SUBDIR)/prev-gcc/ \\\n+\t  -B$(build_tooldir)/bin/ $(GDC_FLAGS_FOR_TARGET) \\\n+\t  -B$$r/prev-$(TARGET_SUBDIR)/libphobos/src \\\n+\t  -I$$r/prev-$(TARGET_SUBDIR)/libphobos/libdruntime -I$$s/libphobos/libdruntime \\\n+\t  -L$$r/prev-$(TARGET_SUBDIR)/libphobos/src/.libs \\\n+\t  -L$$r/prev-$(TARGET_SUBDIR)/libphobos/libdruntime/.libs\"; \\\n+\texport GDC; \\\n+\tGDC_FOR_BUILD=\"$$GDC\"; export GDC_FOR_BUILD; \\\n \tGNATBIND=\"$$r/$(HOST_SUBDIR)/prev-gcc/gnatbind\"; export GNATBIND; \\\n \tLDFLAGS=\"$(POSTSTAGE1_LDFLAGS) $(BOOT_LDFLAGS)\"; export LDFLAGS; \\\n \tHOST_LIBS=\"$(POSTSTAGE1_LIBS)\"; export HOST_LIBS;\n@@ -278,6 +289,7 @@ BASE_TARGET_EXPORTS = \\\n \tCXXFLAGS=\"$(CXXFLAGS_FOR_TARGET)\"; export CXXFLAGS; \\\n \tGFORTRAN=\"$(GFORTRAN_FOR_TARGET) $(XGCC_FLAGS_FOR_TARGET) $$TFLAGS\"; export GFORTRAN; \\\n \tGOC=\"$(GOC_FOR_TARGET) $(XGCC_FLAGS_FOR_TARGET) $$TFLAGS\"; export GOC; \\\n+\tGDC=\"$(GDC_FOR_TARGET) $(XGCC_FLAGS_FOR_TARGET) $$TFLAGS\"; export GDC; \\\n \tDLLTOOL=\"$(DLLTOOL_FOR_TARGET)\"; export DLLTOOL; \\\n \tLD=\"$(COMPILER_LD_FOR_TARGET)\"; export LD; \\\n \tLDFLAGS=\"$(LDFLAGS_FOR_TARGET)\"; export LDFLAGS; \\\n@@ -342,6 +354,7 @@ CXX_FOR_BUILD = @CXX_FOR_BUILD@\n DLLTOOL_FOR_BUILD = @DLLTOOL_FOR_BUILD@\n GFORTRAN_FOR_BUILD = @GFORTRAN_FOR_BUILD@\n GOC_FOR_BUILD = @GOC_FOR_BUILD@\n+GDC_FOR_BUILD = @GDC_FOR_BUILD@\n LDFLAGS_FOR_BUILD = @LDFLAGS_FOR_BUILD@\n LD_FOR_BUILD = @LD_FOR_BUILD@\n NM_FOR_BUILD = @NM_FOR_BUILD@\n@@ -399,6 +412,7 @@ STRIP = @STRIP@\n WINDRES = @WINDRES@\n WINDMC = @WINDMC@\n \n+GDC = @GDC@\n GNATBIND = @GNATBIND@\n GNATMAKE = @GNATMAKE@\n \n@@ -408,6 +422,7 @@ LIBCFLAGS = $(CFLAGS)\n CXXFLAGS = @CXXFLAGS@\n LIBCXXFLAGS = $(CXXFLAGS) -fno-implicit-templates\n GOCFLAGS = $(CFLAGS)\n+GDCFLAGS = $(CFLAGS)\n \n CREATE_GCOV = create_gcov\n \n@@ -574,6 +589,7 @@ CXX_FOR_TARGET=$(STAGE_CC_WRAPPER) @CXX_FOR_TARGET@\n RAW_CXX_FOR_TARGET=$(STAGE_CC_WRAPPER) @RAW_CXX_FOR_TARGET@\n GFORTRAN_FOR_TARGET=$(STAGE_CC_WRAPPER) @GFORTRAN_FOR_TARGET@\n GOC_FOR_TARGET=$(STAGE_CC_WRAPPER) @GOC_FOR_TARGET@\n+GDC_FOR_TARGET=$(STAGE_CC_WRAPPER) @GDC_FOR_TARGET@\n DLLTOOL_FOR_TARGET=@DLLTOOL_FOR_TARGET@\n LD_FOR_TARGET=@LD_FOR_TARGET@\n \n@@ -598,6 +614,7 @@ LIBCFLAGS_FOR_TARGET = $(CFLAGS_FOR_TARGET)\n LIBCXXFLAGS_FOR_TARGET = $(CXXFLAGS_FOR_TARGET) -fno-implicit-templates\n LDFLAGS_FOR_TARGET = @LDFLAGS_FOR_TARGET@\n GOCFLAGS_FOR_TARGET = -O2 -g\n+GDCFLAGS_FOR_TARGET = -O2 -g\n \n FLAGS_FOR_TARGET = @FLAGS_FOR_TARGET@\n SYSROOT_CFLAGS_FOR_TARGET = @SYSROOT_CFLAGS_FOR_TARGET@\n@@ -622,7 +639,7 @@ all:\n \n # This is the list of directories that may be needed in RPATH_ENVVAR\n # so that programs built for the target machine work.\n-TARGET_LIB_PATH = $(TARGET_LIB_PATH_libstdc++-v3)$(TARGET_LIB_PATH_libsanitizer)$(TARGET_LIB_PATH_libvtv)$(TARGET_LIB_PATH_liboffloadmic)$(TARGET_LIB_PATH_libssp)$(TARGET_LIB_PATH_libgomp)$(TARGET_LIB_PATH_libitm)$(TARGET_LIB_PATH_libatomic)$(HOST_LIB_PATH_gcc)\n+TARGET_LIB_PATH = $(TARGET_LIB_PATH_libstdc++-v3)$(TARGET_LIB_PATH_libsanitizer)$(TARGET_LIB_PATH_libvtv)$(TARGET_LIB_PATH_liboffloadmic)$(TARGET_LIB_PATH_libssp)$(TARGET_LIB_PATH_libphobos)$(TARGET_LIB_PATH_libgomp)$(TARGET_LIB_PATH_libitm)$(TARGET_LIB_PATH_libatomic)$(HOST_LIB_PATH_gcc)\n \n @if target-libstdc++-v3\n TARGET_LIB_PATH_libstdc++-v3 = $$r/$(TARGET_SUBDIR)/libstdc++-v3/src/.libs:\n@@ -644,6 +661,10 @@ TARGET_LIB_PATH_liboffloadmic = $$r/$(TARGET_SUBDIR)/liboffloadmic/.libs:\n TARGET_LIB_PATH_libssp = $$r/$(TARGET_SUBDIR)/libssp/.libs:\n @endif target-libssp\n \n+@if target-libphobos\n+TARGET_LIB_PATH_libphobos = $$r/$(TARGET_SUBDIR)/libphobos/src/.libs:\n+@endif target-libphobos\n+\n @if target-libgomp\n TARGET_LIB_PATH_libgomp = $$r/$(TARGET_SUBDIR)/libgomp/.libs:\n @endif target-libgomp\n@@ -778,6 +799,8 @@ BASE_FLAGS_TO_PASS = \\\n \t\"STAGE1_LANGUAGES=$(STAGE1_LANGUAGES)\" \\\n \t\"GNATBIND=$(GNATBIND)\" \\\n \t\"GNATMAKE=$(GNATMAKE)\" \\\n+\t\"GDC=$(GDC)\" \\\n+\t\"GDCFLAGS=$(GDCFLAGS)\" \\\n \t\"AR_FOR_TARGET=$(AR_FOR_TARGET)\" \\\n \t\"AS_FOR_TARGET=$(AS_FOR_TARGET)\" \\\n \t\"CC_FOR_TARGET=$(CC_FOR_TARGET)\" \\\n@@ -789,6 +812,8 @@ BASE_FLAGS_TO_PASS = \\\n \t\"GFORTRAN_FOR_TARGET=$(GFORTRAN_FOR_TARGET)\" \\\n \t\"GOC_FOR_TARGET=$(GOC_FOR_TARGET)\" \\\n \t\"GOCFLAGS_FOR_TARGET=$(GOCFLAGS_FOR_TARGET)\" \\\n+\t\"GDC_FOR_TARGET=$(GDC_FOR_TARGET)\" \\\n+\t\"GDCFLAGS_FOR_TARGET=$(GDCFLAGS_FOR_TARGET)\" \\\n \t\"LD_FOR_TARGET=$(LD_FOR_TARGET)\" \\\n \t\"LIPO_FOR_TARGET=$(LIPO_FOR_TARGET)\" \\\n \t\"LDFLAGS_FOR_TARGET=$(LDFLAGS_FOR_TARGET)\" \\\n@@ -851,6 +876,7 @@ EXTRA_HOST_FLAGS = \\\n \t'DLLTOOL=$(DLLTOOL)' \\\n \t'GFORTRAN=$(GFORTRAN)' \\\n \t'GOC=$(GOC)' \\\n+\t'GDC=$(GDC)' \\\n \t'LD=$(LD)' \\\n \t'LIPO=$(LIPO)' \\\n \t'NM=$(NM)' \\\n@@ -875,6 +901,7 @@ STAGE1_FLAGS_TO_PASS = \\\n POSTSTAGE1_FLAGS_TO_PASS = \\\n \tCC=\"$${CC}\" CC_FOR_BUILD=\"$${CC_FOR_BUILD}\" \\\n \tCXX=\"$${CXX}\" CXX_FOR_BUILD=\"$${CXX_FOR_BUILD}\" \\\n+\tGDC=\"$${GDC}\" GDC_FOR_BUILD=\"$${GDC_FOR_BUILD}\" \\\n \tGNATBIND=\"$${GNATBIND}\" \\\n \tLDFLAGS=\"$${LDFLAGS}\" \\\n \tHOST_LIBS=\"$${HOST_LIBS}\" \\\n@@ -907,6 +934,8 @@ EXTRA_TARGET_FLAGS = \\\n \t'GFORTRAN=$$(GFORTRAN_FOR_TARGET) $$(XGCC_FLAGS_FOR_TARGET) $$(TFLAGS)' \\\n \t'GOC=$$(GOC_FOR_TARGET) $$(XGCC_FLAGS_FOR_TARGET) $$(TFLAGS)' \\\n \t'GOCFLAGS=$$(GOCFLAGS_FOR_TARGET)' \\\n+\t'GDC=$$(GDC_FOR_TARGET) $$(XGCC_FLAGS_FOR_TARGET) $$(TFLAGS)' \\\n+\t'GDCFLAGS=$$(GDCFLAGS_FOR_TARGET)' \\\n \t'LD=$(COMPILER_LD_FOR_TARGET)' \\\n \t'LDFLAGS=$$(LDFLAGS_FOR_TARGET)' \\\n \t'LIBCFLAGS=$$(LIBCFLAGS_FOR_TARGET)' \\\n@@ -1008,6 +1037,7 @@ configure-target:  \\\n     maybe-configure-target-libobjc \\\n     maybe-configure-target-libgo \\\n     maybe-configure-target-libhsail-rt \\\n+    maybe-configure-target-libphobos \\\n     maybe-configure-target-libtermcap \\\n     maybe-configure-target-winsup \\\n     maybe-configure-target-libgloss \\\n@@ -1170,6 +1200,7 @@ all-target: maybe-all-target-libgfortran\n all-target: maybe-all-target-libobjc\n all-target: maybe-all-target-libgo\n all-target: maybe-all-target-libhsail-rt\n+all-target: maybe-all-target-libphobos\n all-target: maybe-all-target-libtermcap\n all-target: maybe-all-target-winsup\n all-target: maybe-all-target-libgloss\n@@ -1261,6 +1292,7 @@ info-target: maybe-info-target-libgfortran\n info-target: maybe-info-target-libobjc\n info-target: maybe-info-target-libgo\n info-target: maybe-info-target-libhsail-rt\n+info-target: maybe-info-target-libphobos\n info-target: maybe-info-target-libtermcap\n info-target: maybe-info-target-winsup\n info-target: maybe-info-target-libgloss\n@@ -1345,6 +1377,7 @@ dvi-target: maybe-dvi-target-libgfortran\n dvi-target: maybe-dvi-target-libobjc\n dvi-target: maybe-dvi-target-libgo\n dvi-target: maybe-dvi-target-libhsail-rt\n+dvi-target: maybe-dvi-target-libphobos\n dvi-target: maybe-dvi-target-libtermcap\n dvi-target: maybe-dvi-target-winsup\n dvi-target: maybe-dvi-target-libgloss\n@@ -1429,6 +1462,7 @@ pdf-target: maybe-pdf-target-libgfortran\n pdf-target: maybe-pdf-target-libobjc\n pdf-target: maybe-pdf-target-libgo\n pdf-target: maybe-pdf-target-libhsail-rt\n+pdf-target: maybe-pdf-target-libphobos\n pdf-target: maybe-pdf-target-libtermcap\n pdf-target: maybe-pdf-target-winsup\n pdf-target: maybe-pdf-target-libgloss\n@@ -1513,6 +1547,7 @@ html-target: maybe-html-target-libgfortran\n html-target: maybe-html-target-libobjc\n html-target: maybe-html-target-libgo\n html-target: maybe-html-target-libhsail-rt\n+html-target: maybe-html-target-libphobos\n html-target: maybe-html-target-libtermcap\n html-target: maybe-html-target-winsup\n html-target: maybe-html-target-libgloss\n@@ -1597,6 +1632,7 @@ TAGS-target: maybe-TAGS-target-libgfortran\n TAGS-target: maybe-TAGS-target-libobjc\n TAGS-target: maybe-TAGS-target-libgo\n TAGS-target: maybe-TAGS-target-libhsail-rt\n+TAGS-target: maybe-TAGS-target-libphobos\n TAGS-target: maybe-TAGS-target-libtermcap\n TAGS-target: maybe-TAGS-target-winsup\n TAGS-target: maybe-TAGS-target-libgloss\n@@ -1681,6 +1717,7 @@ install-info-target: maybe-install-info-target-libgfortran\n install-info-target: maybe-install-info-target-libobjc\n install-info-target: maybe-install-info-target-libgo\n install-info-target: maybe-install-info-target-libhsail-rt\n+install-info-target: maybe-install-info-target-libphobos\n install-info-target: maybe-install-info-target-libtermcap\n install-info-target: maybe-install-info-target-winsup\n install-info-target: maybe-install-info-target-libgloss\n@@ -1765,6 +1802,7 @@ install-pdf-target: maybe-install-pdf-target-libgfortran\n install-pdf-target: maybe-install-pdf-target-libobjc\n install-pdf-target: maybe-install-pdf-target-libgo\n install-pdf-target: maybe-install-pdf-target-libhsail-rt\n+install-pdf-target: maybe-install-pdf-target-libphobos\n install-pdf-target: maybe-install-pdf-target-libtermcap\n install-pdf-target: maybe-install-pdf-target-winsup\n install-pdf-target: maybe-install-pdf-target-libgloss\n@@ -1849,6 +1887,7 @@ install-html-target: maybe-install-html-target-libgfortran\n install-html-target: maybe-install-html-target-libobjc\n install-html-target: maybe-install-html-target-libgo\n install-html-target: maybe-install-html-target-libhsail-rt\n+install-html-target: maybe-install-html-target-libphobos\n install-html-target: maybe-install-html-target-libtermcap\n install-html-target: maybe-install-html-target-winsup\n install-html-target: maybe-install-html-target-libgloss\n@@ -1933,6 +1972,7 @@ installcheck-target: maybe-installcheck-target-libgfortran\n installcheck-target: maybe-installcheck-target-libobjc\n installcheck-target: maybe-installcheck-target-libgo\n installcheck-target: maybe-installcheck-target-libhsail-rt\n+installcheck-target: maybe-installcheck-target-libphobos\n installcheck-target: maybe-installcheck-target-libtermcap\n installcheck-target: maybe-installcheck-target-winsup\n installcheck-target: maybe-installcheck-target-libgloss\n@@ -2017,6 +2057,7 @@ mostlyclean-target: maybe-mostlyclean-target-libgfortran\n mostlyclean-target: maybe-mostlyclean-target-libobjc\n mostlyclean-target: maybe-mostlyclean-target-libgo\n mostlyclean-target: maybe-mostlyclean-target-libhsail-rt\n+mostlyclean-target: maybe-mostlyclean-target-libphobos\n mostlyclean-target: maybe-mostlyclean-target-libtermcap\n mostlyclean-target: maybe-mostlyclean-target-winsup\n mostlyclean-target: maybe-mostlyclean-target-libgloss\n@@ -2101,6 +2142,7 @@ clean-target: maybe-clean-target-libgfortran\n clean-target: maybe-clean-target-libobjc\n clean-target: maybe-clean-target-libgo\n clean-target: maybe-clean-target-libhsail-rt\n+clean-target: maybe-clean-target-libphobos\n clean-target: maybe-clean-target-libtermcap\n clean-target: maybe-clean-target-winsup\n clean-target: maybe-clean-target-libgloss\n@@ -2185,6 +2227,7 @@ distclean-target: maybe-distclean-target-libgfortran\n distclean-target: maybe-distclean-target-libobjc\n distclean-target: maybe-distclean-target-libgo\n distclean-target: maybe-distclean-target-libhsail-rt\n+distclean-target: maybe-distclean-target-libphobos\n distclean-target: maybe-distclean-target-libtermcap\n distclean-target: maybe-distclean-target-winsup\n distclean-target: maybe-distclean-target-libgloss\n@@ -2269,6 +2312,7 @@ maintainer-clean-target: maybe-maintainer-clean-target-libgfortran\n maintainer-clean-target: maybe-maintainer-clean-target-libobjc\n maintainer-clean-target: maybe-maintainer-clean-target-libgo\n maintainer-clean-target: maybe-maintainer-clean-target-libhsail-rt\n+maintainer-clean-target: maybe-maintainer-clean-target-libphobos\n maintainer-clean-target: maybe-maintainer-clean-target-libtermcap\n maintainer-clean-target: maybe-maintainer-clean-target-winsup\n maintainer-clean-target: maybe-maintainer-clean-target-libgloss\n@@ -2409,6 +2453,7 @@ check-target:  \\\n     maybe-check-target-libobjc \\\n     maybe-check-target-libgo \\\n     maybe-check-target-libhsail-rt \\\n+    maybe-check-target-libphobos \\\n     maybe-check-target-libtermcap \\\n     maybe-check-target-winsup \\\n     maybe-check-target-libgloss \\\n@@ -2589,6 +2634,7 @@ install-target:  \\\n     maybe-install-target-libobjc \\\n     maybe-install-target-libgo \\\n     maybe-install-target-libhsail-rt \\\n+    maybe-install-target-libphobos \\\n     maybe-install-target-libtermcap \\\n     maybe-install-target-winsup \\\n     maybe-install-target-libgloss \\\n@@ -2693,6 +2739,7 @@ install-strip-target:  \\\n     maybe-install-strip-target-libobjc \\\n     maybe-install-strip-target-libgo \\\n     maybe-install-strip-target-libhsail-rt \\\n+    maybe-install-strip-target-libphobos \\\n     maybe-install-strip-target-libtermcap \\\n     maybe-install-strip-target-winsup \\\n     maybe-install-strip-target-libgloss \\\n@@ -46944,6 +46991,464 @@ maintainer-clean-target-libhsail-rt:\n \n \n \n+.PHONY: configure-target-libphobos maybe-configure-target-libphobos\n+maybe-configure-target-libphobos:\n+@if gcc-bootstrap\n+configure-target-libphobos: stage_current\n+@endif gcc-bootstrap\n+@if target-libphobos\n+maybe-configure-target-libphobos: configure-target-libphobos\n+configure-target-libphobos: \n+\t@: $(MAKE); $(unstage)\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\techo \"Checking multilib configuration for libphobos...\"; \\\n+\t$(SHELL) $(srcdir)/mkinstalldirs $(TARGET_SUBDIR)/libphobos; \\\n+\t$(CC_FOR_TARGET) --print-multi-lib > $(TARGET_SUBDIR)/libphobos/multilib.tmp 2> /dev/null; \\\n+\tif test -r $(TARGET_SUBDIR)/libphobos/multilib.out; then \\\n+\t  if cmp -s $(TARGET_SUBDIR)/libphobos/multilib.tmp $(TARGET_SUBDIR)/libphobos/multilib.out; then \\\n+\t    rm -f $(TARGET_SUBDIR)/libphobos/multilib.tmp; \\\n+\t  else \\\n+\t    rm -f $(TARGET_SUBDIR)/libphobos/Makefile; \\\n+\t    mv $(TARGET_SUBDIR)/libphobos/multilib.tmp $(TARGET_SUBDIR)/libphobos/multilib.out; \\\n+\t  fi; \\\n+\telse \\\n+\t  mv $(TARGET_SUBDIR)/libphobos/multilib.tmp $(TARGET_SUBDIR)/libphobos/multilib.out; \\\n+\tfi; \\\n+\ttest ! -f $(TARGET_SUBDIR)/libphobos/Makefile || exit 0; \\\n+\t$(SHELL) $(srcdir)/mkinstalldirs $(TARGET_SUBDIR)/libphobos; \\\n+\t$(NORMAL_TARGET_EXPORTS)  \\\n+\techo Configuring in $(TARGET_SUBDIR)/libphobos; \\\n+\tcd \"$(TARGET_SUBDIR)/libphobos\" || exit 1; \\\n+\tcase $(srcdir) in \\\n+\t  /* | [A-Za-z]:[\\\\/]*) topdir=$(srcdir) ;; \\\n+\t  *) topdir=`echo $(TARGET_SUBDIR)/libphobos/ | \\\n+\t\tsed -e 's,\\./,,g' -e 's,[^/]*/,../,g' `$(srcdir) ;; \\\n+\tesac; \\\n+\tmodule_srcdir=libphobos; \\\n+\trm -f no-such-file || : ; \\\n+\tCONFIG_SITE=no-such-file $(SHELL) \\\n+\t  $$s/$$module_srcdir/configure \\\n+\t  --srcdir=$${topdir}/$$module_srcdir \\\n+\t  $(TARGET_CONFIGARGS) --build=${build_alias} --host=${target_alias} \\\n+\t  --target=${target_alias}  \\\n+\t  || exit 1\n+@endif target-libphobos\n+\n+\n+\n+\n+\n+.PHONY: all-target-libphobos maybe-all-target-libphobos\n+maybe-all-target-libphobos:\n+@if gcc-bootstrap\n+all-target-libphobos: stage_current\n+@endif gcc-bootstrap\n+@if target-libphobos\n+TARGET-target-libphobos=all\n+maybe-all-target-libphobos: all-target-libphobos\n+all-target-libphobos: configure-target-libphobos\n+\t@: $(MAKE); $(unstage)\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(NORMAL_TARGET_EXPORTS)  \\\n+\t(cd $(TARGET_SUBDIR)/libphobos && \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_TARGET_FLAGS)   \\\n+\t\t$(TARGET-target-libphobos))\n+@endif target-libphobos\n+\n+\n+\n+\n+\n+.PHONY: check-target-libphobos maybe-check-target-libphobos\n+maybe-check-target-libphobos:\n+@if target-libphobos\n+maybe-check-target-libphobos: check-target-libphobos\n+\n+check-target-libphobos:\n+\t@: $(MAKE); $(unstage)\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(NORMAL_TARGET_EXPORTS) \\\n+\t(cd $(TARGET_SUBDIR)/libphobos && \\\n+\t  $(MAKE) $(TARGET_FLAGS_TO_PASS)   check)\n+\n+@endif target-libphobos\n+\n+.PHONY: install-target-libphobos maybe-install-target-libphobos\n+maybe-install-target-libphobos:\n+@if target-libphobos\n+maybe-install-target-libphobos: install-target-libphobos\n+\n+install-target-libphobos: installdirs\n+\t@: $(MAKE); $(unstage)\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(NORMAL_TARGET_EXPORTS) \\\n+\t(cd $(TARGET_SUBDIR)/libphobos && \\\n+\t  $(MAKE) $(TARGET_FLAGS_TO_PASS)  install)\n+\n+@endif target-libphobos\n+\n+.PHONY: install-strip-target-libphobos maybe-install-strip-target-libphobos\n+maybe-install-strip-target-libphobos:\n+@if target-libphobos\n+maybe-install-strip-target-libphobos: install-strip-target-libphobos\n+\n+install-strip-target-libphobos: installdirs\n+\t@: $(MAKE); $(unstage)\n+\t@r=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(NORMAL_TARGET_EXPORTS) \\\n+\t(cd $(TARGET_SUBDIR)/libphobos && \\\n+\t  $(MAKE) $(TARGET_FLAGS_TO_PASS)  install-strip)\n+\n+@endif target-libphobos\n+\n+# Other targets (info, dvi, pdf, etc.)\n+\n+.PHONY: maybe-info-target-libphobos info-target-libphobos\n+maybe-info-target-libphobos:\n+@if target-libphobos\n+maybe-info-target-libphobos: info-target-libphobos\n+\n+info-target-libphobos: \\\n+    configure-target-libphobos \n+\t@: $(MAKE); $(unstage)\n+\t@[ -f $(TARGET_SUBDIR)/libphobos/Makefile ] || exit 0; \\\n+\tr=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(NORMAL_TARGET_EXPORTS) \\\n+\techo \"Doing info in $(TARGET_SUBDIR)/libphobos\"; \\\n+\tfor flag in $(EXTRA_TARGET_FLAGS); do \\\n+\t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n+\tdone; \\\n+\t(cd $(TARGET_SUBDIR)/libphobos && \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) \"AR=$${AR}\" \"AS=$${AS}\" \\\n+\t          \"CC=$${CC}\" \"CXX=$${CXX}\" \"LD=$${LD}\" \"NM=$${NM}\" \\\n+\t          \"RANLIB=$${RANLIB}\" \\\n+\t          \"DLLTOOL=$${DLLTOOL}\" \"WINDRES=$${WINDRES}\" \"WINDMC=$${WINDMC}\" \\\n+\t           info) \\\n+\t  || exit 1\n+\n+@endif target-libphobos\n+\n+.PHONY: maybe-dvi-target-libphobos dvi-target-libphobos\n+maybe-dvi-target-libphobos:\n+@if target-libphobos\n+maybe-dvi-target-libphobos: dvi-target-libphobos\n+\n+dvi-target-libphobos: \\\n+    configure-target-libphobos \n+\t@: $(MAKE); $(unstage)\n+\t@[ -f $(TARGET_SUBDIR)/libphobos/Makefile ] || exit 0; \\\n+\tr=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(NORMAL_TARGET_EXPORTS) \\\n+\techo \"Doing dvi in $(TARGET_SUBDIR)/libphobos\"; \\\n+\tfor flag in $(EXTRA_TARGET_FLAGS); do \\\n+\t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n+\tdone; \\\n+\t(cd $(TARGET_SUBDIR)/libphobos && \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) \"AR=$${AR}\" \"AS=$${AS}\" \\\n+\t          \"CC=$${CC}\" \"CXX=$${CXX}\" \"LD=$${LD}\" \"NM=$${NM}\" \\\n+\t          \"RANLIB=$${RANLIB}\" \\\n+\t          \"DLLTOOL=$${DLLTOOL}\" \"WINDRES=$${WINDRES}\" \"WINDMC=$${WINDMC}\" \\\n+\t           dvi) \\\n+\t  || exit 1\n+\n+@endif target-libphobos\n+\n+.PHONY: maybe-pdf-target-libphobos pdf-target-libphobos\n+maybe-pdf-target-libphobos:\n+@if target-libphobos\n+maybe-pdf-target-libphobos: pdf-target-libphobos\n+\n+pdf-target-libphobos: \\\n+    configure-target-libphobos \n+\t@: $(MAKE); $(unstage)\n+\t@[ -f $(TARGET_SUBDIR)/libphobos/Makefile ] || exit 0; \\\n+\tr=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(NORMAL_TARGET_EXPORTS) \\\n+\techo \"Doing pdf in $(TARGET_SUBDIR)/libphobos\"; \\\n+\tfor flag in $(EXTRA_TARGET_FLAGS); do \\\n+\t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n+\tdone; \\\n+\t(cd $(TARGET_SUBDIR)/libphobos && \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) \"AR=$${AR}\" \"AS=$${AS}\" \\\n+\t          \"CC=$${CC}\" \"CXX=$${CXX}\" \"LD=$${LD}\" \"NM=$${NM}\" \\\n+\t          \"RANLIB=$${RANLIB}\" \\\n+\t          \"DLLTOOL=$${DLLTOOL}\" \"WINDRES=$${WINDRES}\" \"WINDMC=$${WINDMC}\" \\\n+\t           pdf) \\\n+\t  || exit 1\n+\n+@endif target-libphobos\n+\n+.PHONY: maybe-html-target-libphobos html-target-libphobos\n+maybe-html-target-libphobos:\n+@if target-libphobos\n+maybe-html-target-libphobos: html-target-libphobos\n+\n+html-target-libphobos: \\\n+    configure-target-libphobos \n+\t@: $(MAKE); $(unstage)\n+\t@[ -f $(TARGET_SUBDIR)/libphobos/Makefile ] || exit 0; \\\n+\tr=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(NORMAL_TARGET_EXPORTS) \\\n+\techo \"Doing html in $(TARGET_SUBDIR)/libphobos\"; \\\n+\tfor flag in $(EXTRA_TARGET_FLAGS); do \\\n+\t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n+\tdone; \\\n+\t(cd $(TARGET_SUBDIR)/libphobos && \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) \"AR=$${AR}\" \"AS=$${AS}\" \\\n+\t          \"CC=$${CC}\" \"CXX=$${CXX}\" \"LD=$${LD}\" \"NM=$${NM}\" \\\n+\t          \"RANLIB=$${RANLIB}\" \\\n+\t          \"DLLTOOL=$${DLLTOOL}\" \"WINDRES=$${WINDRES}\" \"WINDMC=$${WINDMC}\" \\\n+\t           html) \\\n+\t  || exit 1\n+\n+@endif target-libphobos\n+\n+.PHONY: maybe-TAGS-target-libphobos TAGS-target-libphobos\n+maybe-TAGS-target-libphobos:\n+@if target-libphobos\n+maybe-TAGS-target-libphobos: TAGS-target-libphobos\n+\n+TAGS-target-libphobos: \\\n+    configure-target-libphobos \n+\t@: $(MAKE); $(unstage)\n+\t@[ -f $(TARGET_SUBDIR)/libphobos/Makefile ] || exit 0; \\\n+\tr=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(NORMAL_TARGET_EXPORTS) \\\n+\techo \"Doing TAGS in $(TARGET_SUBDIR)/libphobos\"; \\\n+\tfor flag in $(EXTRA_TARGET_FLAGS); do \\\n+\t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n+\tdone; \\\n+\t(cd $(TARGET_SUBDIR)/libphobos && \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) \"AR=$${AR}\" \"AS=$${AS}\" \\\n+\t          \"CC=$${CC}\" \"CXX=$${CXX}\" \"LD=$${LD}\" \"NM=$${NM}\" \\\n+\t          \"RANLIB=$${RANLIB}\" \\\n+\t          \"DLLTOOL=$${DLLTOOL}\" \"WINDRES=$${WINDRES}\" \"WINDMC=$${WINDMC}\" \\\n+\t           TAGS) \\\n+\t  || exit 1\n+\n+@endif target-libphobos\n+\n+.PHONY: maybe-install-info-target-libphobos install-info-target-libphobos\n+maybe-install-info-target-libphobos:\n+@if target-libphobos\n+maybe-install-info-target-libphobos: install-info-target-libphobos\n+\n+install-info-target-libphobos: \\\n+    configure-target-libphobos \\\n+    info-target-libphobos \n+\t@: $(MAKE); $(unstage)\n+\t@[ -f $(TARGET_SUBDIR)/libphobos/Makefile ] || exit 0; \\\n+\tr=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(NORMAL_TARGET_EXPORTS) \\\n+\techo \"Doing install-info in $(TARGET_SUBDIR)/libphobos\"; \\\n+\tfor flag in $(EXTRA_TARGET_FLAGS); do \\\n+\t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n+\tdone; \\\n+\t(cd $(TARGET_SUBDIR)/libphobos && \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) \"AR=$${AR}\" \"AS=$${AS}\" \\\n+\t          \"CC=$${CC}\" \"CXX=$${CXX}\" \"LD=$${LD}\" \"NM=$${NM}\" \\\n+\t          \"RANLIB=$${RANLIB}\" \\\n+\t          \"DLLTOOL=$${DLLTOOL}\" \"WINDRES=$${WINDRES}\" \"WINDMC=$${WINDMC}\" \\\n+\t           install-info) \\\n+\t  || exit 1\n+\n+@endif target-libphobos\n+\n+.PHONY: maybe-install-pdf-target-libphobos install-pdf-target-libphobos\n+maybe-install-pdf-target-libphobos:\n+@if target-libphobos\n+maybe-install-pdf-target-libphobos: install-pdf-target-libphobos\n+\n+install-pdf-target-libphobos: \\\n+    configure-target-libphobos \\\n+    pdf-target-libphobos \n+\t@: $(MAKE); $(unstage)\n+\t@[ -f $(TARGET_SUBDIR)/libphobos/Makefile ] || exit 0; \\\n+\tr=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(NORMAL_TARGET_EXPORTS) \\\n+\techo \"Doing install-pdf in $(TARGET_SUBDIR)/libphobos\"; \\\n+\tfor flag in $(EXTRA_TARGET_FLAGS); do \\\n+\t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n+\tdone; \\\n+\t(cd $(TARGET_SUBDIR)/libphobos && \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) \"AR=$${AR}\" \"AS=$${AS}\" \\\n+\t          \"CC=$${CC}\" \"CXX=$${CXX}\" \"LD=$${LD}\" \"NM=$${NM}\" \\\n+\t          \"RANLIB=$${RANLIB}\" \\\n+\t          \"DLLTOOL=$${DLLTOOL}\" \"WINDRES=$${WINDRES}\" \"WINDMC=$${WINDMC}\" \\\n+\t           install-pdf) \\\n+\t  || exit 1\n+\n+@endif target-libphobos\n+\n+.PHONY: maybe-install-html-target-libphobos install-html-target-libphobos\n+maybe-install-html-target-libphobos:\n+@if target-libphobos\n+maybe-install-html-target-libphobos: install-html-target-libphobos\n+\n+install-html-target-libphobos: \\\n+    configure-target-libphobos \\\n+    html-target-libphobos \n+\t@: $(MAKE); $(unstage)\n+\t@[ -f $(TARGET_SUBDIR)/libphobos/Makefile ] || exit 0; \\\n+\tr=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(NORMAL_TARGET_EXPORTS) \\\n+\techo \"Doing install-html in $(TARGET_SUBDIR)/libphobos\"; \\\n+\tfor flag in $(EXTRA_TARGET_FLAGS); do \\\n+\t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n+\tdone; \\\n+\t(cd $(TARGET_SUBDIR)/libphobos && \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) \"AR=$${AR}\" \"AS=$${AS}\" \\\n+\t          \"CC=$${CC}\" \"CXX=$${CXX}\" \"LD=$${LD}\" \"NM=$${NM}\" \\\n+\t          \"RANLIB=$${RANLIB}\" \\\n+\t          \"DLLTOOL=$${DLLTOOL}\" \"WINDRES=$${WINDRES}\" \"WINDMC=$${WINDMC}\" \\\n+\t           install-html) \\\n+\t  || exit 1\n+\n+@endif target-libphobos\n+\n+.PHONY: maybe-installcheck-target-libphobos installcheck-target-libphobos\n+maybe-installcheck-target-libphobos:\n+@if target-libphobos\n+maybe-installcheck-target-libphobos: installcheck-target-libphobos\n+\n+installcheck-target-libphobos: \\\n+    configure-target-libphobos \n+\t@: $(MAKE); $(unstage)\n+\t@[ -f $(TARGET_SUBDIR)/libphobos/Makefile ] || exit 0; \\\n+\tr=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(NORMAL_TARGET_EXPORTS) \\\n+\techo \"Doing installcheck in $(TARGET_SUBDIR)/libphobos\"; \\\n+\tfor flag in $(EXTRA_TARGET_FLAGS); do \\\n+\t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n+\tdone; \\\n+\t(cd $(TARGET_SUBDIR)/libphobos && \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) \"AR=$${AR}\" \"AS=$${AS}\" \\\n+\t          \"CC=$${CC}\" \"CXX=$${CXX}\" \"LD=$${LD}\" \"NM=$${NM}\" \\\n+\t          \"RANLIB=$${RANLIB}\" \\\n+\t          \"DLLTOOL=$${DLLTOOL}\" \"WINDRES=$${WINDRES}\" \"WINDMC=$${WINDMC}\" \\\n+\t           installcheck) \\\n+\t  || exit 1\n+\n+@endif target-libphobos\n+\n+.PHONY: maybe-mostlyclean-target-libphobos mostlyclean-target-libphobos\n+maybe-mostlyclean-target-libphobos:\n+@if target-libphobos\n+maybe-mostlyclean-target-libphobos: mostlyclean-target-libphobos\n+\n+mostlyclean-target-libphobos: \n+\t@: $(MAKE); $(unstage)\n+\t@[ -f $(TARGET_SUBDIR)/libphobos/Makefile ] || exit 0; \\\n+\tr=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(NORMAL_TARGET_EXPORTS) \\\n+\techo \"Doing mostlyclean in $(TARGET_SUBDIR)/libphobos\"; \\\n+\tfor flag in $(EXTRA_TARGET_FLAGS); do \\\n+\t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n+\tdone; \\\n+\t(cd $(TARGET_SUBDIR)/libphobos && \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) \"AR=$${AR}\" \"AS=$${AS}\" \\\n+\t          \"CC=$${CC}\" \"CXX=$${CXX}\" \"LD=$${LD}\" \"NM=$${NM}\" \\\n+\t          \"RANLIB=$${RANLIB}\" \\\n+\t          \"DLLTOOL=$${DLLTOOL}\" \"WINDRES=$${WINDRES}\" \"WINDMC=$${WINDMC}\" \\\n+\t           mostlyclean) \\\n+\t  || exit 1\n+\n+@endif target-libphobos\n+\n+.PHONY: maybe-clean-target-libphobos clean-target-libphobos\n+maybe-clean-target-libphobos:\n+@if target-libphobos\n+maybe-clean-target-libphobos: clean-target-libphobos\n+\n+clean-target-libphobos: \n+\t@: $(MAKE); $(unstage)\n+\t@[ -f $(TARGET_SUBDIR)/libphobos/Makefile ] || exit 0; \\\n+\tr=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(NORMAL_TARGET_EXPORTS) \\\n+\techo \"Doing clean in $(TARGET_SUBDIR)/libphobos\"; \\\n+\tfor flag in $(EXTRA_TARGET_FLAGS); do \\\n+\t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n+\tdone; \\\n+\t(cd $(TARGET_SUBDIR)/libphobos && \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) \"AR=$${AR}\" \"AS=$${AS}\" \\\n+\t          \"CC=$${CC}\" \"CXX=$${CXX}\" \"LD=$${LD}\" \"NM=$${NM}\" \\\n+\t          \"RANLIB=$${RANLIB}\" \\\n+\t          \"DLLTOOL=$${DLLTOOL}\" \"WINDRES=$${WINDRES}\" \"WINDMC=$${WINDMC}\" \\\n+\t           clean) \\\n+\t  || exit 1\n+\n+@endif target-libphobos\n+\n+.PHONY: maybe-distclean-target-libphobos distclean-target-libphobos\n+maybe-distclean-target-libphobos:\n+@if target-libphobos\n+maybe-distclean-target-libphobos: distclean-target-libphobos\n+\n+distclean-target-libphobos: \n+\t@: $(MAKE); $(unstage)\n+\t@[ -f $(TARGET_SUBDIR)/libphobos/Makefile ] || exit 0; \\\n+\tr=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(NORMAL_TARGET_EXPORTS) \\\n+\techo \"Doing distclean in $(TARGET_SUBDIR)/libphobos\"; \\\n+\tfor flag in $(EXTRA_TARGET_FLAGS); do \\\n+\t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n+\tdone; \\\n+\t(cd $(TARGET_SUBDIR)/libphobos && \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) \"AR=$${AR}\" \"AS=$${AS}\" \\\n+\t          \"CC=$${CC}\" \"CXX=$${CXX}\" \"LD=$${LD}\" \"NM=$${NM}\" \\\n+\t          \"RANLIB=$${RANLIB}\" \\\n+\t          \"DLLTOOL=$${DLLTOOL}\" \"WINDRES=$${WINDRES}\" \"WINDMC=$${WINDMC}\" \\\n+\t           distclean) \\\n+\t  || exit 1\n+\n+@endif target-libphobos\n+\n+.PHONY: maybe-maintainer-clean-target-libphobos maintainer-clean-target-libphobos\n+maybe-maintainer-clean-target-libphobos:\n+@if target-libphobos\n+maybe-maintainer-clean-target-libphobos: maintainer-clean-target-libphobos\n+\n+maintainer-clean-target-libphobos: \n+\t@: $(MAKE); $(unstage)\n+\t@[ -f $(TARGET_SUBDIR)/libphobos/Makefile ] || exit 0; \\\n+\tr=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(NORMAL_TARGET_EXPORTS) \\\n+\techo \"Doing maintainer-clean in $(TARGET_SUBDIR)/libphobos\"; \\\n+\tfor flag in $(EXTRA_TARGET_FLAGS); do \\\n+\t  eval `echo \"$$flag\" | sed -e \"s|^\\([^=]*\\)=\\(.*\\)|\\1='\\2'; export \\1|\"`; \\\n+\tdone; \\\n+\t(cd $(TARGET_SUBDIR)/libphobos && \\\n+\t  $(MAKE) $(BASE_FLAGS_TO_PASS) \"AR=$${AR}\" \"AS=$${AS}\" \\\n+\t          \"CC=$${CC}\" \"CXX=$${CXX}\" \"LD=$${LD}\" \"NM=$${NM}\" \\\n+\t          \"RANLIB=$${RANLIB}\" \\\n+\t          \"DLLTOOL=$${DLLTOOL}\" \"WINDRES=$${WINDRES}\" \"WINDMC=$${WINDMC}\" \\\n+\t           maintainer-clean) \\\n+\t  || exit 1\n+\n+@endif target-libphobos\n+\n+\n+\n+\n+\n .PHONY: configure-target-libtermcap maybe-configure-target-libtermcap\n maybe-configure-target-libtermcap:\n @if gcc-bootstrap\n@@ -52329,6 +52834,14 @@ check-gcc-brig:\n \t(cd gcc && $(MAKE) $(GCC_FLAGS_TO_PASS) check-brig);\n check-brig: check-gcc-brig check-target-libhsail-rt\n \n+.PHONY: check-gcc-d check-d\n+check-gcc-d:\n+\tr=`${PWD_COMMAND}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n+\t$(HOST_EXPORTS) \\\n+\t(cd gcc && $(MAKE) $(GCC_FLAGS_TO_PASS) check-d);\n+check-d: check-gcc-d check-target-libphobos\n+\n \n # The gcc part of install-no-fixedincludes, which relies on an intimate\n # knowledge of how a number of gcc internal targets (inter)operate.  Delegate.\n@@ -55521,6 +56034,7 @@ configure-target-libgfortran: stage_last\n configure-target-libobjc: stage_last\n configure-target-libgo: stage_last\n configure-target-libhsail-rt: stage_last\n+configure-target-libphobos: stage_last\n configure-target-libtermcap: stage_last\n configure-target-winsup: stage_last\n configure-target-libgloss: stage_last\n@@ -55555,6 +56069,7 @@ configure-target-libgfortran: maybe-all-gcc\n configure-target-libobjc: maybe-all-gcc\n configure-target-libgo: maybe-all-gcc\n configure-target-libhsail-rt: maybe-all-gcc\n+configure-target-libphobos: maybe-all-gcc\n configure-target-libtermcap: maybe-all-gcc\n configure-target-winsup: maybe-all-gcc\n configure-target-libgloss: maybe-all-gcc\n@@ -56550,6 +57065,11 @@ configure-target-libgo: maybe-configure-target-libffi\n all-target-libgo: maybe-all-target-libbacktrace\n all-target-libgo: maybe-all-target-libffi\n all-target-libgo: maybe-all-target-libatomic\n+configure-target-libphobos: maybe-configure-target-libbacktrace\n+configure-target-libphobos: maybe-configure-target-zlib\n+all-target-libphobos: maybe-all-target-libbacktrace\n+all-target-libphobos: maybe-all-target-zlib\n+all-target-libphobos: maybe-all-target-libatomic\n configure-target-libstdc++-v3: maybe-configure-target-libgomp\n configure-stage1-target-libstdc++-v3: maybe-configure-stage1-target-libgomp\n configure-stage2-target-libstdc++-v3: maybe-configure-stage2-target-libgomp\n@@ -56593,6 +57113,7 @@ all-stageautofeedback-target-libstdc++-v3: maybe-configure-stageautofeedback-tar\n install-target-libgo: maybe-install-target-libatomic\n install-target-libgfortran: maybe-install-target-libquadmath\n install-target-libgfortran: maybe-install-target-libgcc\n+install-target-libphobos: maybe-install-target-libatomic\n install-target-libsanitizer: maybe-install-target-libstdc++-v3\n install-target-libsanitizer: maybe-install-target-libgcc\n install-target-libvtv: maybe-install-target-libstdc++-v3\n@@ -56717,6 +57238,7 @@ configure-target-libgfortran: maybe-all-target-libgcc\n configure-target-libobjc: maybe-all-target-libgcc\n configure-target-libgo: maybe-all-target-libgcc\n configure-target-libhsail-rt: maybe-all-target-libgcc\n+configure-target-libphobos: maybe-all-target-libgcc\n configure-target-libtermcap: maybe-all-target-libgcc\n configure-target-winsup: maybe-all-target-libgcc\n configure-target-libgloss: maybe-all-target-libgcc\n@@ -56755,6 +57277,8 @@ configure-target-libgo: maybe-all-target-newlib maybe-all-target-libgloss\n \n configure-target-libhsail-rt: maybe-all-target-newlib maybe-all-target-libgloss\n \n+configure-target-libphobos: maybe-all-target-newlib maybe-all-target-libgloss\n+\n configure-target-libtermcap: maybe-all-target-newlib maybe-all-target-libgloss\n \n configure-target-winsup: maybe-all-target-newlib maybe-all-target-libgloss"}, {"sha": "add7bb1052be6db29d1e9fc39a6d60101214bf25", "filename": "Makefile.tpl", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/Makefile.tpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/Makefile.tpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.tpl?ref=b4c522fabd0df7be08882d2207df8b2765026110", "patch": "@@ -159,6 +159,8 @@ BUILD_EXPORTS = \\\n \tGFORTRAN=\"$(GFORTRAN_FOR_BUILD)\"; export GFORTRAN; \\\n \tGOC=\"$(GOC_FOR_BUILD)\"; export GOC; \\\n \tGOCFLAGS=\"$(GOCFLAGS_FOR_BUILD)\"; export GOCFLAGS; \\\n+\tGDC=\"$(GDC_FOR_BUILD)\"; export GDC; \\\n+\tGDCFLAGS=\"$(GDCFLAGS_FOR_BUILD)\"; export GDCFLAGS; \\\n \tDLLTOOL=\"$(DLLTOOL_FOR_BUILD)\"; export DLLTOOL; \\\n \tLD=\"$(LD_FOR_BUILD)\"; export LD; \\\n \tLDFLAGS=\"$(LDFLAGS_FOR_BUILD)\"; export LDFLAGS; \\\n@@ -195,6 +197,7 @@ HOST_EXPORTS = \\\n \tCXXFLAGS=\"$(CXXFLAGS)\"; export CXXFLAGS; \\\n \tGFORTRAN=\"$(GFORTRAN)\"; export GFORTRAN; \\\n \tGOC=\"$(GOC)\"; export GOC; \\\n+\tGDC=\"$(GDC)\"; export GDC; \\\n \tAR=\"$(AR)\"; export AR; \\\n \tAS=\"$(AS)\"; export AS; \\\n \tCC_FOR_BUILD=\"$(CC_FOR_BUILD)\"; export CC_FOR_BUILD; \\\n@@ -259,6 +262,14 @@ POSTSTAGE1_HOST_EXPORTS = \\\n \tCC_FOR_BUILD=\"$$CC\"; export CC_FOR_BUILD; \\\n \t$(POSTSTAGE1_CXX_EXPORT) \\\n \t$(LTO_EXPORTS) \\\n+\tGDC=\"$$r/$(HOST_SUBDIR)/prev-gcc/gdc$(exeext) -B$$r/$(HOST_SUBDIR)/prev-gcc/ \\\n+\t  -B$(build_tooldir)/bin/ $(GDC_FLAGS_FOR_TARGET) \\\n+\t  -B$$r/prev-$(TARGET_SUBDIR)/libphobos/src \\\n+\t  -I$$r/prev-$(TARGET_SUBDIR)/libphobos/libdruntime -I$$s/libphobos/libdruntime \\\n+\t  -L$$r/prev-$(TARGET_SUBDIR)/libphobos/src/.libs \\\n+\t  -L$$r/prev-$(TARGET_SUBDIR)/libphobos/libdruntime/.libs\"; \\\n+\texport GDC; \\\n+\tGDC_FOR_BUILD=\"$$GDC\"; export GDC_FOR_BUILD; \\\n \tGNATBIND=\"$$r/$(HOST_SUBDIR)/prev-gcc/gnatbind\"; export GNATBIND; \\\n \tLDFLAGS=\"$(POSTSTAGE1_LDFLAGS) $(BOOT_LDFLAGS)\"; export LDFLAGS; \\\n \tHOST_LIBS=\"$(POSTSTAGE1_LIBS)\"; export HOST_LIBS;\n@@ -281,6 +292,7 @@ BASE_TARGET_EXPORTS = \\\n \tCXXFLAGS=\"$(CXXFLAGS_FOR_TARGET)\"; export CXXFLAGS; \\\n \tGFORTRAN=\"$(GFORTRAN_FOR_TARGET) $(XGCC_FLAGS_FOR_TARGET) $$TFLAGS\"; export GFORTRAN; \\\n \tGOC=\"$(GOC_FOR_TARGET) $(XGCC_FLAGS_FOR_TARGET) $$TFLAGS\"; export GOC; \\\n+\tGDC=\"$(GDC_FOR_TARGET) $(XGCC_FLAGS_FOR_TARGET) $$TFLAGS\"; export GDC; \\\n \tDLLTOOL=\"$(DLLTOOL_FOR_TARGET)\"; export DLLTOOL; \\\n \tLD=\"$(COMPILER_LD_FOR_TARGET)\"; export LD; \\\n \tLDFLAGS=\"$(LDFLAGS_FOR_TARGET)\"; export LDFLAGS; \\\n@@ -345,6 +357,7 @@ CXX_FOR_BUILD = @CXX_FOR_BUILD@\n DLLTOOL_FOR_BUILD = @DLLTOOL_FOR_BUILD@\n GFORTRAN_FOR_BUILD = @GFORTRAN_FOR_BUILD@\n GOC_FOR_BUILD = @GOC_FOR_BUILD@\n+GDC_FOR_BUILD = @GDC_FOR_BUILD@\n LDFLAGS_FOR_BUILD = @LDFLAGS_FOR_BUILD@\n LD_FOR_BUILD = @LD_FOR_BUILD@\n NM_FOR_BUILD = @NM_FOR_BUILD@\n@@ -402,6 +415,7 @@ STRIP = @STRIP@\n WINDRES = @WINDRES@\n WINDMC = @WINDMC@\n \n+GDC = @GDC@\n GNATBIND = @GNATBIND@\n GNATMAKE = @GNATMAKE@\n \n@@ -411,6 +425,7 @@ LIBCFLAGS = $(CFLAGS)\n CXXFLAGS = @CXXFLAGS@\n LIBCXXFLAGS = $(CXXFLAGS) -fno-implicit-templates\n GOCFLAGS = $(CFLAGS)\n+GDCFLAGS = $(CFLAGS)\n \n CREATE_GCOV = create_gcov\n \n@@ -497,6 +512,7 @@ CXX_FOR_TARGET=$(STAGE_CC_WRAPPER) @CXX_FOR_TARGET@\n RAW_CXX_FOR_TARGET=$(STAGE_CC_WRAPPER) @RAW_CXX_FOR_TARGET@\n GFORTRAN_FOR_TARGET=$(STAGE_CC_WRAPPER) @GFORTRAN_FOR_TARGET@\n GOC_FOR_TARGET=$(STAGE_CC_WRAPPER) @GOC_FOR_TARGET@\n+GDC_FOR_TARGET=$(STAGE_CC_WRAPPER) @GDC_FOR_TARGET@\n DLLTOOL_FOR_TARGET=@DLLTOOL_FOR_TARGET@\n LD_FOR_TARGET=@LD_FOR_TARGET@\n \n@@ -521,6 +537,7 @@ LIBCFLAGS_FOR_TARGET = $(CFLAGS_FOR_TARGET)\n LIBCXXFLAGS_FOR_TARGET = $(CXXFLAGS_FOR_TARGET) -fno-implicit-templates\n LDFLAGS_FOR_TARGET = @LDFLAGS_FOR_TARGET@\n GOCFLAGS_FOR_TARGET = -O2 -g\n+GDCFLAGS_FOR_TARGET = -O2 -g\n \n FLAGS_FOR_TARGET = @FLAGS_FOR_TARGET@\n SYSROOT_CFLAGS_FOR_TARGET = @SYSROOT_CFLAGS_FOR_TARGET@\n@@ -622,6 +639,7 @@ EXTRA_HOST_FLAGS = \\\n \t'DLLTOOL=$(DLLTOOL)' \\\n \t'GFORTRAN=$(GFORTRAN)' \\\n \t'GOC=$(GOC)' \\\n+\t'GDC=$(GDC)' \\\n \t'LD=$(LD)' \\\n \t'LIPO=$(LIPO)' \\\n \t'NM=$(NM)' \\\n@@ -646,6 +664,7 @@ STAGE1_FLAGS_TO_PASS = \\\n POSTSTAGE1_FLAGS_TO_PASS = \\\n \tCC=\"$${CC}\" CC_FOR_BUILD=\"$${CC_FOR_BUILD}\" \\\n \tCXX=\"$${CXX}\" CXX_FOR_BUILD=\"$${CXX_FOR_BUILD}\" \\\n+\tGDC=\"$${GDC}\" GDC_FOR_BUILD=\"$${GDC_FOR_BUILD}\" \\\n \tGNATBIND=\"$${GNATBIND}\" \\\n \tLDFLAGS=\"$${LDFLAGS}\" \\\n \tHOST_LIBS=\"$${HOST_LIBS}\" \\\n@@ -678,6 +697,8 @@ EXTRA_TARGET_FLAGS = \\\n \t'GFORTRAN=$$(GFORTRAN_FOR_TARGET) $$(XGCC_FLAGS_FOR_TARGET) $$(TFLAGS)' \\\n \t'GOC=$$(GOC_FOR_TARGET) $$(XGCC_FLAGS_FOR_TARGET) $$(TFLAGS)' \\\n \t'GOCFLAGS=$$(GOCFLAGS_FOR_TARGET)' \\\n+\t'GDC=$$(GDC_FOR_TARGET) $$(XGCC_FLAGS_FOR_TARGET) $$(TFLAGS)' \\\n+\t'GDCFLAGS=$$(GDCFLAGS_FOR_TARGET)' \\\n \t'LD=$(COMPILER_LD_FOR_TARGET)' \\\n \t'LDFLAGS=$$(LDFLAGS_FOR_TARGET)' \\\n \t'LIBCFLAGS=$$(LIBCFLAGS_FOR_TARGET)' \\"}, {"sha": "3e37f875c88feccccbe4c7940d1c0ce7af55bb92", "filename": "config-ml.in", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/config-ml.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/config-ml.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config-ml.in?ref=b4c522fabd0df7be08882d2207df8b2765026110", "patch": "@@ -512,6 +512,7 @@ multi-do:\n \t\t\t\tprefix=\"$(prefix)\" \\\n \t\t\t\texec_prefix=\"$(exec_prefix)\" \\\n \t\t\t\tGOCFLAGS=\"$(GOCFLAGS) $${flags}\" \\\n+\t\t\t\tGDCFLAGS=\"$(GDCFLAGS) $${flags}\" \\\n \t\t\t\tCXXFLAGS=\"$(CXXFLAGS) $${flags}\" \\\n \t\t\t\tLIBCFLAGS=\"$(LIBCFLAGS) $${flags}\" \\\n \t\t\t\tLIBCXXFLAGS=\"$(LIBCXXFLAGS) $${flags}\" \\\n@@ -745,14 +746,15 @@ if [ -n \"${multidirs}\" ] && [ -z \"${ml_norecursion}\" ]; then\n         break\n       fi\n     done\n-    ml_config_env='CC=\"${CC_}$flags\" CXX=\"${CXX_}$flags\" F77=\"${F77_}$flags\" GFORTRAN=\"${GFORTRAN_}$flags\" GOC=\"${GOC_}$flags\"'\n+    ml_config_env='CC=\"${CC_}$flags\" CXX=\"${CXX_}$flags\" F77=\"${F77_}$flags\" GFORTRAN=\"${GFORTRAN_}$flags\" GOC=\"${GOC_}$flags\" GDC=\"${GDC_}$flags\"'\n \n     if [ \"${with_target_subdir}\" = \".\" ]; then\n \tCC_=$CC' '\n \tCXX_=$CXX' '\n \tF77_=$F77' '\n \tGFORTRAN_=$GFORTRAN' '\n \tGOC_=$GOC' '\n+\tGDC_=$GDC' '\n     else\n \t# Create a regular expression that matches any string as long\n \t# as ML_POPDIR.\n@@ -817,6 +819,18 @@ if [ -n \"${multidirs}\" ] && [ -z \"${ml_norecursion}\" ]; then\n \t  esac\n \tdone\n \n+\tGDC_=\n+\tfor arg in ${GDC}; do\n+\t  case $arg in\n+\t  -[BIL]\"${ML_POPDIR}\"/*)\n+\t    GDC_=\"${GDC_}\"`echo \"X${arg}\" | sed -n \"s/X\\\\(-[BIL]${popdir_rx}\\\\).*/\\\\1/p\"`/${ml_dir}`echo \"X${arg}\" | sed -n \"s/X-[BIL]${popdir_rx}\\\\(.*\\\\)/\\\\1/p\"`' ' ;;\n+\t  \"${ML_POPDIR}\"/*)\n+\t    GDC_=\"${GDC_}\"`echo \"X${arg}\" | sed -n \"s/X\\\\(${popdir_rx}\\\\).*/\\\\1/p\"`/${ml_dir}`echo \"X${arg}\" | sed -n \"s/X${popdir_rx}\\\\(.*\\\\)/\\\\1/p\"`' ' ;;\n+\t  *)\n+\t    GDC_=\"${GDC_}${arg} \" ;;\n+\t  esac\n+\tdone\n+\n \tif test \"x${LD_LIBRARY_PATH+set}\" = xset; then\n \t  LD_LIBRARY_PATH_=\n \t  for arg in `echo \"$LD_LIBRARY_PATH\" | tr ':' ' '`; do"}, {"sha": "edfcb6058c0668e4cc246f2274de793e5c4ce63e", "filename": "config/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/config%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/config%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2FChangeLog?ref=b4c522fabd0df7be08882d2207df8b2765026110", "patch": "@@ -1,3 +1,7 @@\n+2018-10-28  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* multi.m4: Set GDC.\n+\n 2018-07-05  James Clarke  <jrtc27@jrtc27.com>\n \n \t* dfp.m4 (enable_decimal_float): Enable for x86_64*-*-gnu* to"}, {"sha": "10680a5b32bf0f619eb66a94c948de7a340af47a", "filename": "config/multi.m4", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/config%2Fmulti.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/config%2Fmulti.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2Fmulti.m4?ref=b4c522fabd0df7be08882d2207df8b2765026110", "patch": "@@ -64,4 +64,5 @@ multi_basedir=\"$multi_basedir\"\n CONFIG_SHELL=${CONFIG_SHELL-/bin/sh}\n CC=\"$CC\"\n CXX=\"$CXX\"\n-GFORTRAN=\"$GFORTRAN\"])])dnl\n+GFORTRAN=\"$GFORTRAN\"\n+GDC=\"$GDC\"])])dnl"}, {"sha": "77e7e1869ba1b8a0c44c87558ce2f9fddf870e6e", "filename": "configure", "status": "modified", "additions": 216, "deletions": 1, "changes": 217, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/configure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/configure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure?ref=b4c522fabd0df7be08882d2207df8b2765026110", "patch": "@@ -580,6 +580,7 @@ LD_FOR_TARGET\n DLLTOOL_FOR_TARGET\n AS_FOR_TARGET\n AR_FOR_TARGET\n+GDC_FOR_TARGET\n GOC_FOR_TARGET\n GFORTRAN_FOR_TARGET\n GCC_FOR_TARGET\n@@ -612,6 +613,7 @@ RANLIB_FOR_BUILD\n NM_FOR_BUILD\n LD_FOR_BUILD\n LDFLAGS_FOR_BUILD\n+GDC_FOR_BUILD\n GOC_FOR_BUILD\n GFORTRAN_FOR_BUILD\n DLLTOOL_FOR_BUILD\n@@ -830,6 +832,7 @@ CXX_FOR_TARGET\n GCC_FOR_TARGET\n GFORTRAN_FOR_TARGET\n GOC_FOR_TARGET\n+GDC_FOR_TARGET\n AR_FOR_TARGET\n AS_FOR_TARGET\n DLLTOOL_FOR_TARGET\n@@ -1613,6 +1616,8 @@ Some influential environment variables:\n               GFORTRAN for the target\n   GOC_FOR_TARGET\n               GOC for the target\n+  GDC_FOR_TARGET\n+              GDC for the target\n   AR_FOR_TARGET\n               AR for the target\n   AS_FOR_TARGET\n@@ -2764,7 +2769,8 @@ target_libraries=\"target-libgcc \\\n \t\ttarget-libffi \\\n \t\ttarget-libobjc \\\n \t\ttarget-libada \\\n-\t\ttarget-libgo\"\n+\t\ttarget-libgo \\\n+\t\ttarget-libphobos\"\n \n # these tools are built using the target libraries, and are intended to\n # run only in the target environment\n@@ -3920,6 +3926,7 @@ if test \"${build}\" != \"${host}\" ; then\n   CXX_FOR_BUILD=${CXX_FOR_BUILD-g++}\n   GFORTRAN_FOR_BUILD=${GFORTRAN_FOR_BUILD-gfortran}\n   GOC_FOR_BUILD=${GOC_FOR_BUILD-gccgo}\n+  GDC_FOR_BUILD=${GDC_FOR_BUILD-gdc}\n   DLLTOOL_FOR_BUILD=${DLLTOOL_FOR_BUILD-dlltool}\n   LD_FOR_BUILD=${LD_FOR_BUILD-ld}\n   NM_FOR_BUILD=${NM_FOR_BUILD-nm}\n@@ -3933,6 +3940,7 @@ else\n   CXX_FOR_BUILD=\"\\$(CXX)\"\n   GFORTRAN_FOR_BUILD=\"\\$(GFORTRAN)\"\n   GOC_FOR_BUILD=\"\\$(GOC)\"\n+  GDC_FOR_BUILD=\"\\$(GDC)\"\n   DLLTOOL_FOR_BUILD=\"\\$(DLLTOOL)\"\n   LD_FOR_BUILD=\"\\$(LD)\"\n   NM_FOR_BUILD=\"\\$(NM)\"\n@@ -7650,6 +7658,7 @@ done\n \n \n \n+\n # Generate default definitions for YACC, M4, LEX and other programs that run\n # on the build machine.  These are used if the Makefile can't locate these\n # programs in objdir.\n@@ -10704,6 +10713,167 @@ fi\n \n \n \n+if test -n \"$GDC_FOR_TARGET\"; then\n+  ac_cv_prog_GDC_FOR_TARGET=$GDC_FOR_TARGET\n+elif test -n \"$ac_cv_prog_GDC_FOR_TARGET\"; then\n+  GDC_FOR_TARGET=$ac_cv_prog_GDC_FOR_TARGET\n+fi\n+\n+if test -n \"$ac_cv_prog_GDC_FOR_TARGET\"; then\n+  for ncn_progname in gdc; do\n+    # Extract the first word of \"${ncn_progname}\", so it can be a program name with args.\n+set dummy ${ncn_progname}; ac_word=$2\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n+$as_echo_n \"checking for $ac_word... \" >&6; }\n+if test \"${ac_cv_prog_GDC_FOR_TARGET+set}\" = set; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  if test -n \"$GDC_FOR_TARGET\"; then\n+  ac_cv_prog_GDC_FOR_TARGET=\"$GDC_FOR_TARGET\" # Let the user override the test.\n+else\n+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\n+for as_dir in $PATH\n+do\n+  IFS=$as_save_IFS\n+  test -z \"$as_dir\" && as_dir=.\n+    for ac_exec_ext in '' $ac_executable_extensions; do\n+  if { test -f \"$as_dir/$ac_word$ac_exec_ext\" && $as_test_x \"$as_dir/$ac_word$ac_exec_ext\"; }; then\n+    ac_cv_prog_GDC_FOR_TARGET=\"${ncn_progname}\"\n+    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n+    break 2\n+  fi\n+done\n+  done\n+IFS=$as_save_IFS\n+\n+fi\n+fi\n+GDC_FOR_TARGET=$ac_cv_prog_GDC_FOR_TARGET\n+if test -n \"$GDC_FOR_TARGET\"; then\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $GDC_FOR_TARGET\" >&5\n+$as_echo \"$GDC_FOR_TARGET\" >&6; }\n+else\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n+$as_echo \"no\" >&6; }\n+fi\n+\n+\n+  done\n+fi\n+\n+if test -z \"$ac_cv_prog_GDC_FOR_TARGET\" && test -n \"$with_build_time_tools\"; then\n+  for ncn_progname in gdc; do\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for ${ncn_progname} in $with_build_time_tools\" >&5\n+$as_echo_n \"checking for ${ncn_progname} in $with_build_time_tools... \" >&6; }\n+    if test -x $with_build_time_tools/${ncn_progname}; then\n+      ac_cv_prog_GDC_FOR_TARGET=$with_build_time_tools/${ncn_progname}\n+      { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n+$as_echo \"yes\" >&6; }\n+      break\n+    else\n+      { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n+$as_echo \"no\" >&6; }\n+    fi\n+  done\n+fi\n+\n+if test -z \"$ac_cv_prog_GDC_FOR_TARGET\"; then\n+  for ncn_progname in gdc; do\n+    if test -n \"$ncn_target_tool_prefix\"; then\n+      # Extract the first word of \"${ncn_target_tool_prefix}${ncn_progname}\", so it can be a program name with args.\n+set dummy ${ncn_target_tool_prefix}${ncn_progname}; ac_word=$2\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n+$as_echo_n \"checking for $ac_word... \" >&6; }\n+if test \"${ac_cv_prog_GDC_FOR_TARGET+set}\" = set; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  if test -n \"$GDC_FOR_TARGET\"; then\n+  ac_cv_prog_GDC_FOR_TARGET=\"$GDC_FOR_TARGET\" # Let the user override the test.\n+else\n+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\n+for as_dir in $PATH\n+do\n+  IFS=$as_save_IFS\n+  test -z \"$as_dir\" && as_dir=.\n+    for ac_exec_ext in '' $ac_executable_extensions; do\n+  if { test -f \"$as_dir/$ac_word$ac_exec_ext\" && $as_test_x \"$as_dir/$ac_word$ac_exec_ext\"; }; then\n+    ac_cv_prog_GDC_FOR_TARGET=\"${ncn_target_tool_prefix}${ncn_progname}\"\n+    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n+    break 2\n+  fi\n+done\n+  done\n+IFS=$as_save_IFS\n+\n+fi\n+fi\n+GDC_FOR_TARGET=$ac_cv_prog_GDC_FOR_TARGET\n+if test -n \"$GDC_FOR_TARGET\"; then\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $GDC_FOR_TARGET\" >&5\n+$as_echo \"$GDC_FOR_TARGET\" >&6; }\n+else\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n+$as_echo \"no\" >&6; }\n+fi\n+\n+\n+    fi\n+    if test -z \"$ac_cv_prog_GDC_FOR_TARGET\" && test $build = $target ; then\n+      # Extract the first word of \"${ncn_progname}\", so it can be a program name with args.\n+set dummy ${ncn_progname}; ac_word=$2\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n+$as_echo_n \"checking for $ac_word... \" >&6; }\n+if test \"${ac_cv_prog_GDC_FOR_TARGET+set}\" = set; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  if test -n \"$GDC_FOR_TARGET\"; then\n+  ac_cv_prog_GDC_FOR_TARGET=\"$GDC_FOR_TARGET\" # Let the user override the test.\n+else\n+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\n+for as_dir in $PATH\n+do\n+  IFS=$as_save_IFS\n+  test -z \"$as_dir\" && as_dir=.\n+    for ac_exec_ext in '' $ac_executable_extensions; do\n+  if { test -f \"$as_dir/$ac_word$ac_exec_ext\" && $as_test_x \"$as_dir/$ac_word$ac_exec_ext\"; }; then\n+    ac_cv_prog_GDC_FOR_TARGET=\"${ncn_progname}\"\n+    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n+    break 2\n+  fi\n+done\n+  done\n+IFS=$as_save_IFS\n+\n+fi\n+fi\n+GDC_FOR_TARGET=$ac_cv_prog_GDC_FOR_TARGET\n+if test -n \"$GDC_FOR_TARGET\"; then\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $GDC_FOR_TARGET\" >&5\n+$as_echo \"$GDC_FOR_TARGET\" >&6; }\n+else\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n+$as_echo \"no\" >&6; }\n+fi\n+\n+\n+    fi\n+    test -n \"$ac_cv_prog_GDC_FOR_TARGET\" && break\n+  done\n+fi\n+\n+if test -z \"$ac_cv_prog_GDC_FOR_TARGET\" ; then\n+  set dummy gdc\n+  if test $build = $target ; then\n+    GDC_FOR_TARGET=\"$2\"\n+  else\n+    GDC_FOR_TARGET=\"${ncn_target_tool_prefix}$2\"\n+  fi\n+else\n+  GDC_FOR_TARGET=\"$ac_cv_prog_GDC_FOR_TARGET\"\n+fi\n+\n+\n+\n cat > conftest.c << \\EOF\n #ifdef __GNUC__\n   gcc_yay;\n@@ -14100,6 +14270,51 @@ $as_echo \"pre-installed\" >&6; }\n   fi\n fi\n \n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking where to find the target gdc\" >&5\n+$as_echo_n \"checking where to find the target gdc... \" >&6; }\n+if test \"x${build}\" != \"x${host}\" ; then\n+  if expr \"x$GDC_FOR_TARGET\" : \"x/\" > /dev/null; then\n+    # We already found the complete path\n+    ac_dir=`dirname $GDC_FOR_TARGET`\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: pre-installed in $ac_dir\" >&5\n+$as_echo \"pre-installed in $ac_dir\" >&6; }\n+  else\n+    # Canadian cross, just use what we found\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: pre-installed\" >&5\n+$as_echo \"pre-installed\" >&6; }\n+  fi\n+else\n+  ok=yes\n+  case \" ${configdirs} \" in\n+    *\" gcc \"*) ;;\n+    *) ok=no ;;\n+  esac\n+  case ,${enable_languages}, in\n+    *,d,*) ;;\n+    *) ok=no ;;\n+  esac\n+  if test $ok = yes; then\n+    # An in-tree tool is available and we can use it\n+    GDC_FOR_TARGET='$$r/$(HOST_SUBDIR)/gcc/gdc -B$$r/$(HOST_SUBDIR)/gcc/'\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: just compiled\" >&5\n+$as_echo \"just compiled\" >&6; }\n+  elif expr \"x$GDC_FOR_TARGET\" : \"x/\" > /dev/null; then\n+    # We already found the complete path\n+    ac_dir=`dirname $GDC_FOR_TARGET`\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: pre-installed in $ac_dir\" >&5\n+$as_echo \"pre-installed in $ac_dir\" >&6; }\n+  elif test \"x$target\" = \"x$host\"; then\n+    # We can use an host tool\n+    GDC_FOR_TARGET='$(GDC)'\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: host tool\" >&5\n+$as_echo \"host tool\" >&6; }\n+  else\n+    # We need a cross tool\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: pre-installed\" >&5\n+$as_echo \"pre-installed\" >&6; }\n+  fi\n+fi\n+\n { $as_echo \"$as_me:${as_lineno-$LINENO}: checking where to find the target ld\" >&5\n $as_echo_n \"checking where to find the target ld... \" >&6; }\n if test \"x${build}\" != \"x${host}\" ; then"}, {"sha": "1e5979dc043817caad7be14300088cf53c141648", "filename": "configure.ac", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/configure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/configure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure.ac?ref=b4c522fabd0df7be08882d2207df8b2765026110", "patch": "@@ -163,7 +163,8 @@ target_libraries=\"target-libgcc \\\n \t\ttarget-libffi \\\n \t\ttarget-libobjc \\\n \t\ttarget-libada \\\n-\t\ttarget-libgo\"\n+\t\ttarget-libgo \\\n+\t\ttarget-libphobos\"\n \n # these tools are built using the target libraries, and are intended to\n # run only in the target environment\n@@ -1235,6 +1236,7 @@ if test \"${build}\" != \"${host}\" ; then\n   CXX_FOR_BUILD=${CXX_FOR_BUILD-g++}\n   GFORTRAN_FOR_BUILD=${GFORTRAN_FOR_BUILD-gfortran}\n   GOC_FOR_BUILD=${GOC_FOR_BUILD-gccgo}\n+  GDC_FOR_BUILD=${GDC_FOR_BUILD-gdc}\n   DLLTOOL_FOR_BUILD=${DLLTOOL_FOR_BUILD-dlltool}\n   LD_FOR_BUILD=${LD_FOR_BUILD-ld}\n   NM_FOR_BUILD=${NM_FOR_BUILD-nm}\n@@ -1248,6 +1250,7 @@ else\n   CXX_FOR_BUILD=\"\\$(CXX)\"\n   GFORTRAN_FOR_BUILD=\"\\$(GFORTRAN)\"\n   GOC_FOR_BUILD=\"\\$(GOC)\"\n+  GDC_FOR_BUILD=\"\\$(GDC)\"\n   DLLTOOL_FOR_BUILD=\"\\$(DLLTOOL)\"\n   LD_FOR_BUILD=\"\\$(LD)\"\n   NM_FOR_BUILD=\"\\$(NM)\"\n@@ -3235,6 +3238,7 @@ AC_SUBST(CXX_FOR_BUILD)\n AC_SUBST(DLLTOOL_FOR_BUILD)\n AC_SUBST(GFORTRAN_FOR_BUILD)\n AC_SUBST(GOC_FOR_BUILD)\n+AC_SUBST(GDC_FOR_BUILD)\n AC_SUBST(LDFLAGS_FOR_BUILD)\n AC_SUBST(LD_FOR_BUILD)\n AC_SUBST(NM_FOR_BUILD)\n@@ -3344,6 +3348,7 @@ NCN_STRICT_CHECK_TARGET_TOOLS(CXX_FOR_TARGET, c++ g++ cxx gxx)\n NCN_STRICT_CHECK_TARGET_TOOLS(GCC_FOR_TARGET, gcc, ${CC_FOR_TARGET})\n NCN_STRICT_CHECK_TARGET_TOOLS(GFORTRAN_FOR_TARGET, gfortran)\n NCN_STRICT_CHECK_TARGET_TOOLS(GOC_FOR_TARGET, gccgo)\n+NCN_STRICT_CHECK_TARGET_TOOLS(GDC_FOR_TARGET, gdc)\n \n ACX_CHECK_INSTALLED_TARGET_TOOL(AR_FOR_TARGET, ar)\n ACX_CHECK_INSTALLED_TARGET_TOOL(AS_FOR_TARGET, as)\n@@ -3377,6 +3382,8 @@ GCC_TARGET_TOOL(gfortran, GFORTRAN_FOR_TARGET, GFORTRAN,\n \t\t[gcc/gfortran -B$$r/$(HOST_SUBDIR)/gcc/], fortran)\n GCC_TARGET_TOOL(gccgo, GOC_FOR_TARGET, GOC,\n \t\t[gcc/gccgo -B$$r/$(HOST_SUBDIR)/gcc/], go)\n+GCC_TARGET_TOOL(gdc, GDC_FOR_TARGET, GDC,\n+\t\t[gcc/gdc -B$$r/$(HOST_SUBDIR)/gcc/], d)\n GCC_TARGET_TOOL(ld, LD_FOR_TARGET, LD, [ld/ld-new])\n GCC_TARGET_TOOL(lipo, LIPO_FOR_TARGET, LIPO)\n GCC_TARGET_TOOL(nm, NM_FOR_TARGET, NM, [binutils/nm-new])"}, {"sha": "4ac333abc981753cda0da494168b4ba13140258d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 102, "deletions": 0, "changes": 102, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b4c522fabd0df7be08882d2207df8b2765026110", "patch": "@@ -1,3 +1,105 @@\n+2018-10-28  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* Makefile.in (tm_d_file_list, tm_d_include_list): New variables.\n+\t(TM_D_H, D_TARGET_DEF, D_TARGET_H, D_TARGET_OBJS): New variables.\n+\t(tm_d.h, cs-tm_d.h, default-d.o): New rules.\n+\t(d/d-target-hooks-def.h, s-d-target-hooks-def-h): New rules.\n+\t(s-tm-texi): Also check timestamp on d-target.def.\n+\t(generated_files): Add TM_D_H and d-target-hooks-def.h.\n+\t(build/genhooks.o): Also depend on D_TARGET_DEF.\n+\t* config.gcc (tm_d_file, d_target_objs, target_has_targetdm): New\n+\tvariables.\n+\t* config/aarch64/aarch64-d.c: New file.\n+\t* config/aarch64/aarch64-linux.h (GNU_USER_TARGET_D_CRITSEC_SIZE):\n+\tDefine.\n+\t* config/aarch64/aarch64-protos.h (aarch64_d_target_versions): New\n+\tprototype.\n+\t* config/aarch64/aarch64.h (TARGET_D_CPU_VERSIONS): Define.\n+\t* config/aarch64/t-aarch64 (aarch64-d.o): New rule.\n+\t* config/arm/arm-d.c: New file.\n+\t* config/arm/arm-protos.h (arm_d_target_versions): New prototype.\n+\t* config/arm/arm.h (TARGET_D_CPU_VERSIONS): Define.\n+\t* config/arm/linux-eabi.h (EXTRA_TARGET_D_OS_VERSIONS): Define.\n+\t* config/arm/t-arm (arm-d.o): New rule.\n+\t* config/default-d.c: New file.\n+\t* config/glibc-d.c: New file.\n+\t* config/gnu.h (GNU_USER_TARGET_D_OS_VERSIONS): Define.\n+\t* config/i386/i386-d.c: New file.\n+\t* config/i386/i386-protos.h (ix86_d_target_versions): New prototype.\n+\t* config/i386/i386.h (TARGET_D_CPU_VERSIONS): Define.\n+\t* config/i386/linux-common.h (EXTRA_TARGET_D_OS_VERSIONS): Define.\n+\t(GNU_USER_TARGET_D_CRITSEC_SIZE): Define.\n+\t* config/i386/t-i386 (i386-d.o): New rule.\n+\t* config/kfreebsd-gnu.h (GNU_USER_TARGET_D_OS_VERSIONS): Define.\n+\t* config/kopensolaris-gnu.h (GNU_USER_TARGET_D_OS_VERSIONS): Define.\n+\t* config/linux-android.h (ANDROID_TARGET_D_OS_VERSIONS): Define.\n+\t* config/linux.h (GNU_USER_TARGET_D_OS_VERSIONS): Define.\n+\t* config/mips/linux-common.h (EXTRA_TARGET_D_OS_VERSIONS): Define.\n+\t* config/mips/mips-d.c: New file.\n+\t* config/mips/mips-protos.h (mips_d_target_versions): New prototype.\n+\t* config/mips/mips.h (TARGET_D_CPU_VERSIONS): Define.\n+\t* config/mips/t-mips (mips-d.o): New rule.\n+\t* config/powerpcspe/linux.h (GNU_USER_TARGET_D_OS_VERSIONS): Define.\n+\t* config/powerpcspe/linux64.h (GNU_USER_TARGET_D_OS_VERSIONS): Define.\n+\t* config/powerpcspe/powerpcspe-d.c: New file.\n+\t* config/powerpcspe/powerpcspe-protos.h (rs6000_d_target_versions):\n+\tNew prototype.\n+\t* config/powerpcspe/powerpcspe.c (rs6000_output_function_epilogue):\n+\tSupport GNU D by using 0 as the language type.\n+\t* config/powerpcspe/powerpcspe.h (TARGET_D_CPU_VERSIONS): Define.\n+\t* config/powerpcspe/t-powerpcspe (powerpcspe-d.o): New rule.\n+\t* config/riscv/riscv-d.c: New file.\n+\t* config/riscv/riscv-protos.h (riscv_d_target_versions): New\n+\tprototype.\n+\t* config/riscv/riscv.h (TARGET_D_CPU_VERSIONS): Define.\n+\t* config/riscv/t-riscv (riscv-d.o): New rule.\n+\t* config/rs6000/linux.h (GNU_USER_TARGET_D_OS_VERSIONS): Define.\n+\t* config/rs6000/linux64.h (GNU_USER_TARGET_D_OS_VERSIONS): Define.\n+\t* config/rs6000/rs6000-d.c: New file.\n+\t* config/rs6000/rs6000-protos.h (rs6000_d_target_versions): New\n+\tprototype.\n+\t* config/rs6000/rs6000.c (rs6000_output_function_epilogue):\n+\tSupport GNU D by using 0 as the language type.\n+\t* config/rs6000/rs6000.h (TARGET_D_CPU_VERSIONS): Define.\n+\t* config/rs6000/t-rs6000 (rs6000-d.o): New rule.\n+\t* config/s390/s390-d.c: New file.\n+\t* config/s390/s390-protos.h (s390_d_target_versions): New prototype.\n+\t* config/s390/s390.h (TARGET_D_CPU_VERSIONS): Define.\n+\t* config/s390/t-s390 (s390-d.o): New rule.\n+\t* config/sparc/sparc-d.c: New file.\n+\t* config/sparc/sparc-protos.h (sparc_d_target_versions): New\n+\tprototype.\n+\t* config/sparc/sparc.h (TARGET_D_CPU_VERSIONS): Define.\n+\t* config/sparc/t-sparc (sparc-d.o): New rule.\n+\t* config/t-glibc (glibc-d.o): New rule.\n+\t* configure: Regenerated.\n+\t* configure.ac (tm_d_file): New variable.\n+\t(tm_d_file_list, tm_d_include_list, d_target_objs): Add substitutes.\n+\t* doc/contrib.texi (Contributors): Add self for the D frontend.\n+\t* doc/frontends.texi (G++ and GCC): Mention D as a supported language.\n+\t* doc/install.texi (Configuration): Mention libphobos as an option for\n+\t--enable-shared.  Mention d as an option for --enable-languages.\n+\t(Testing): Mention check-d as a target.\n+\t* doc/invoke.texi (Overall Options): Mention .d, .dd, and .di as file\n+\tname suffixes.  Mention d as a -x option.\n+\t* doc/sourcebuild.texi (Top Level): Mention libphobos.\n+\t* doc/standards.texi (Standards): Add section on D language.\n+\t* doc/tm.texi: Regenerated.\n+\t* doc/tm.texi.in: Add @node for D language and ABI, and @hook for\n+\tTARGET_CPU_VERSIONS, TARGET_D_OS_VERSIONS, and TARGET_D_CRITSEC_SIZE.\n+\t* dwarf2out.c (is_dlang): New function.\n+\t(gen_compile_unit_die): Use DW_LANG_D for D.\n+\t(declare_in_namespace): Return module die for D, instead of adding\n+\textra declarations into the namespace.\n+\t(gen_namespace_die): Generate DW_TAG_module for D.\n+\t(gen_decl_die): Handle CONST_DECLSs for D.\n+\t(dwarf2out_decl): Likewise.\n+\t(prune_unused_types_walk_local_classes): Handle DW_tag_interface_type.\n+\t(prune_unused_types_walk): Handle DW_tag_interface_type same as other\n+\tkinds of aggregates.\n+\t* gcc.c (default_compilers): Add entries for .d, .dd and .di.\n+\t* genhooks.c: Include d/d-target.def.\n+\n 2018-10-28  Iain Sandoe  <iain@sandoe.co.uk>\n \n \tPR target/85669"}, {"sha": "a164332140831e9b5a2845eb63e95983453768e7", "filename": "gcc/Makefile.in", "status": "modified", "additions": 34, "deletions": 3, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=b4c522fabd0df7be08882d2207df8b2765026110", "patch": "@@ -554,6 +554,8 @@ tm_include_list=@tm_include_list@\n tm_defines=@tm_defines@\n tm_p_file_list=@tm_p_file_list@\n tm_p_include_list=@tm_p_include_list@\n+tm_d_file_list=@tm_d_file_list@\n+tm_d_include_list=@tm_d_include_list@\n build_xm_file_list=@build_xm_file_list@\n build_xm_include_list=@build_xm_include_list@\n build_xm_defines=@build_xm_defines@\n@@ -848,6 +850,7 @@ BCONFIG_H = bconfig.h $(build_xm_file_list)\n CONFIG_H  = config.h  $(host_xm_file_list)\n TCONFIG_H = tconfig.h $(xm_file_list)\n TM_P_H    = tm_p.h    $(tm_p_file_list)\n+TM_D_H    = tm_d.h    $(tm_d_file_list)\n GTM_H     = tm.h      $(tm_file_list) insn-constants.h\n TM_H      = $(GTM_H) insn-flags.h $(OPTIONS_H)\n \n@@ -905,9 +908,11 @@ EXCEPT_H = except.h $(HASHTAB_H)\n TARGET_DEF = target.def target-hooks-macros.h target-insns.def\n C_TARGET_DEF = c-family/c-target.def target-hooks-macros.h\n COMMON_TARGET_DEF = common/common-target.def target-hooks-macros.h\n+D_TARGET_DEF = d/d-target.def target-hooks-macros.h\n TARGET_H = $(TM_H) target.h $(TARGET_DEF) insn-modes.h insn-codes.h\n C_TARGET_H = c-family/c-target.h $(C_TARGET_DEF)\n COMMON_TARGET_H = common/common-target.h $(INPUT_H) $(COMMON_TARGET_DEF)\n+D_TARGET_H = d/d-target.h $(D_TARGET_DEF)\n MACHMODE_H = machmode.h mode-classes.def\n HOOKS_H = hooks.h\n HOSTHOOKS_DEF_H = hosthooks-def.h $(HOOKS_H)\n@@ -1187,6 +1192,9 @@ C_TARGET_OBJS=@c_target_objs@\n # Target specific, C++ specific object file\n CXX_TARGET_OBJS=@cxx_target_objs@\n \n+# Target specific, D specific object file\n+D_TARGET_OBJS=@d_target_objs@\n+\n # Target specific, Fortran specific object file\n FORTRAN_TARGET_OBJS=@fortran_target_objs@\n \n@@ -1786,6 +1794,7 @@ bconfig.h: cs-bconfig.h ; @true\n tconfig.h: cs-tconfig.h ; @true\n tm.h: cs-tm.h ; @true\n tm_p.h: cs-tm_p.h ; @true\n+tm_d.h: cs-tm_d.h ; @true\n \n cs-config.h: Makefile\n \tTARGET_CPU_DEFAULT=\"\" \\\n@@ -1812,6 +1821,11 @@ cs-tm_p.h: Makefile\n \tHEADERS=\"$(tm_p_include_list)\" DEFINES=\"\" \\\n \t$(SHELL) $(srcdir)/mkconfig.sh tm_p.h\n \n+cs-tm_d.h: Makefile\n+\tTARGET_CPU_DEFAULT=\"\" \\\n+\tHEADERS=\"$(tm_d_include_list)\" DEFINES=\"\" \\\n+\t$(SHELL) $(srcdir)/mkconfig.sh tm_d.h\n+\n # Don't automatically run autoconf, since configure.ac might be accidentally\n # newer than configure.  Also, this writes into the source directory which\n # might be on a read-only file system.  If configured for maintainer mode\n@@ -2136,6 +2150,12 @@ default-c.o: config/default-c.c\n CFLAGS-prefix.o += -DPREFIX=\\\"$(prefix)\\\" -DBASEVER=$(BASEVER_s)\n prefix.o: $(BASEVER)\n \n+# Files used by the D language front end.\n+\n+default-d.o: config/default-d.c\n+\t$(COMPILE) $<\n+\t$(POSTCOMPILE)\n+\n # Language-independent files.\n \n DRIVER_DEFINES = \\\n@@ -2432,6 +2452,15 @@ s-common-target-hooks-def-h: build/genhooks$(build_exeext)\n \t\t\t\t\t     common/common-target-hooks-def.h\n \t$(STAMP) s-common-target-hooks-def-h\n \n+d/d-target-hooks-def.h: s-d-target-hooks-def-h; @true\n+\n+s-d-target-hooks-def-h: build/genhooks$(build_exeext)\n+\t$(RUN_GEN) build/genhooks$(build_exeext) \"D Target Hook\" \\\n+\t\t\t\t\t     > tmp-d-target-hooks-def.h\n+\t$(SHELL) $(srcdir)/../move-if-change tmp-d-target-hooks-def.h \\\n+\t\t\t\t\t     d/d-target-hooks-def.h\n+\t$(STAMP) s-d-target-hooks-def-h\n+\n # check if someone mistakenly only changed tm.texi.\n # We use a different pathname here to avoid a circular dependency.\n s-tm-texi: $(srcdir)/doc/../doc/tm.texi\n@@ -2455,6 +2484,7 @@ s-tm-texi: build/genhooks$(build_exeext) $(srcdir)/doc/tm.texi.in\n \t  && ( test $(srcdir)/doc/tm.texi -nt $(srcdir)/target.def \\\n \t    || test $(srcdir)/doc/tm.texi -nt $(srcdir)/c-family/c-target.def \\\n \t    || test $(srcdir)/doc/tm.texi -nt $(srcdir)/common/common-target.def \\\n+\t    || test $(srcdir)/doc/tm.texi -nt $(srcdir)/d/d-target.def \\\n \t  ); then \\\n \t  echo >&2 ; \\\n \t  echo You should edit $(srcdir)/doc/tm.texi.in rather than $(srcdir)/doc/tm.texi . >&2 ; \\\n@@ -2592,14 +2622,15 @@ s-gtype: build/gengtype$(build_exeext) $(filter-out [%], $(GTFILES)) \\\n                     -r gtype.state\n \t$(STAMP) s-gtype\n \n-generated_files = config.h tm.h $(TM_P_H) $(TM_H) multilib.h \\\n+generated_files = config.h tm.h $(TM_P_H) $(TM_D_H) $(TM_H) multilib.h \\\n        $(simple_generated_h) specs.h \\\n        tree-check.h genrtl.h insn-modes.h insn-modes-inline.h \\\n        tm-preds.h tm-constrs.h \\\n        $(ALL_GTFILES_H) gtype-desc.c gtype-desc.h gcov-iov.h \\\n        options.h target-hooks-def.h insn-opinit.h \\\n        common/common-target-hooks-def.h pass-instances.def \\\n-       c-family/c-target-hooks-def.h params.list params.options case-cfn-macros.h \\\n+       c-family/c-target-hooks-def.h d/d-target-hooks-def.h \\\n+       params.list params.options case-cfn-macros.h \\\n        cfn-operators.pd\n \n #\f\n@@ -2743,7 +2774,7 @@ build/genrecog.o : genrecog.c $(RTL_BASE_H) $(BCONFIG_H) $(SYSTEM_H)\t\\\n   $(CORETYPES_H) $(GTM_H) errors.h $(READ_MD_H) $(GENSUPPORT_H)\t\t\\\n   $(HASH_TABLE_H) inchash.h\n build/genhooks.o : genhooks.c $(TARGET_DEF) $(C_TARGET_DEF)\t\t\\\n-  $(COMMON_TARGET_DEF) $(BCONFIG_H) $(SYSTEM_H) errors.h\n+  $(COMMON_TARGET_DEF) $(D_TARGET_DEF) $(BCONFIG_H) $(SYSTEM_H) errors.h\n build/genmddump.o : genmddump.c $(RTL_BASE_H) $(BCONFIG_H) $(SYSTEM_H)\t\\\n   $(CORETYPES_H) $(GTM_H) errors.h $(READ_MD_H) $(GENSUPPORT_H)\n build/genmatch.o : genmatch.c $(BCONFIG_H) $(SYSTEM_H) \\"}, {"sha": "93dc29786031667b3d94ad4ff826bc59f440e4d9", "filename": "gcc/config.gcc", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=b4c522fabd0df7be08882d2207df8b2765026110", "patch": "@@ -86,6 +86,9 @@\n #  tm_p_file\t\tLocation of file with declarations for functions\n #\t\t\tin $out_file.\n #\n+#  tm_d_file\t\tA list of headers with definitions of target hook\n+#\t\t\tmacros for the D compiler.\n+#\n #  out_file\t\tThe name of the machine description C support\n #\t\t\tfile, if different from \"$cpu_type/$cpu_type.c\".\n #\n@@ -139,6 +142,9 @@\n #  cxx_target_objs\tList of extra target-dependent objects that be\n #\t\t\tlinked into the C++ compiler only.\n #\n+#  d_target_objs\tList of extra target-dependent objects that be\n+#\t\t\tlinked into the D compiler only.\n+#\n #  fortran_target_objs\tList of extra target-dependent objects that be\n #\t\t\tlinked into the fortran compiler only.\n #\n@@ -191,6 +197,9 @@\n #\n #  target_has_targetm_common\tSet to yes or no depending on whether the\n #\t\t\ttarget has its own definition of targetm_common.\n+#\n+#  target_has_targetdm\tSet to yes or no depending on whether the target\n+#\t\t\thas its own definition of targetdm.\n \n out_file=\n common_out_file=\n@@ -206,9 +215,11 @@ extra_gcc_objs=\n extra_options=\n c_target_objs=\n cxx_target_objs=\n+d_target_objs=\n fortran_target_objs=\n target_has_targetcm=no\n target_has_targetm_common=yes\n+target_has_targetdm=no\n tm_defines=\n xm_defines=\n # Set this to force installation and use of collect2.\n@@ -305,6 +316,7 @@ aarch64*-*-*)\n \textra_headers=\"arm_fp16.h arm_neon.h arm_acle.h\"\n \tc_target_objs=\"aarch64-c.o\"\n \tcxx_target_objs=\"aarch64-c.o\"\n+\td_target_objs=\"aarch64-d.o\"\n \textra_objs=\"aarch64-builtins.o aarch-common.o cortex-a57-fma-steering.o aarch64-speculation.o falkor-tag-collision-avoidance.o\"\n \ttarget_gtfiles=\"\\$(srcdir)/config/aarch64/aarch64-builtins.c\"\n \ttarget_has_targetm_common=yes\n@@ -330,6 +342,7 @@ arm*-*-*)\n \ttarget_type_format_char='%'\n \tc_target_objs=\"arm-c.o\"\n \tcxx_target_objs=\"arm-c.o\"\n+\td_target_objs=\"arm-d.o\"\n \textra_options=\"${extra_options} arm/arm-tables.opt\"\n \ttarget_gtfiles=\"\\$(srcdir)/config/arm/arm-builtins.c\"\n \t;;\n@@ -362,6 +375,7 @@ i[34567]86-*-*)\n \tcpu_type=i386\n \tc_target_objs=\"i386-c.o\"\n \tcxx_target_objs=\"i386-c.o\"\n+\td_target_objs=\"i386-d.o\"\n \textra_objs=\"x86-tune-sched.o x86-tune-sched-bd.o x86-tune-sched-atom.o x86-tune-sched-core.o\"\n \textra_options=\"${extra_options} fused-madd.opt\"\n \textra_headers=\"cpuid.h mmintrin.h mm3dnow.h xmmintrin.h emmintrin.h\n@@ -392,6 +406,7 @@ x86_64-*-*)\n \tcpu_type=i386\n \tc_target_objs=\"i386-c.o\"\n \tcxx_target_objs=\"i386-c.o\"\n+\td_target_objs=\"i386-d.o\"\n \textra_options=\"${extra_options} fused-madd.opt\"\n \textra_objs=\"x86-tune-sched.o x86-tune-sched-bd.o x86-tune-sched-atom.o x86-tune-sched-core.o\"\n \textra_headers=\"cpuid.h mmintrin.h mm3dnow.h xmmintrin.h emmintrin.h\n@@ -442,6 +457,7 @@ microblaze*-*-*)\n         ;;\n mips*-*-*)\n \tcpu_type=mips\n+\td_target_objs=\"mips-d.o\"\n \textra_headers=\"loongson.h msa.h\"\n \textra_objs=\"frame-header-opt.o\"\n \textra_options=\"${extra_options} g.opt fused-madd.opt mips/mips-tables.opt\"\n@@ -498,6 +514,7 @@ powerpc*-*-*)\n riscv*)\n \tcpu_type=riscv\n \textra_objs=\"riscv-builtins.o riscv-c.o\"\n+\td_target_objs=\"riscv-d.o\"\n \t;;\n rs6000*-*-*)\n \textra_options=\"${extra_options} g.opt fused-madd.opt rs6000/rs6000-tables.opt\"\n@@ -507,13 +524,15 @@ sparc*-*-*)\n \tcpu_type=sparc\n \tc_target_objs=\"sparc-c.o\"\n \tcxx_target_objs=\"sparc-c.o\"\n+\td_target_objs=\"sparc-d.o\"\n \textra_headers=\"visintrin.h\"\n \t;;\n spu*-*-*)\n \tcpu_type=spu\n \t;;\n s390*-*-*)\n \tcpu_type=s390\n+\td_target_objs=\"s390-d.o\"\n \textra_options=\"${extra_options} fused-madd.opt\"\n \textra_headers=\"s390intrin.h htmintrin.h htmxlintrin.h vecintrin.h\"\n \t;;\n@@ -543,10 +562,13 @@ tilepro*-*-*)\n esac\n \n tm_file=${cpu_type}/${cpu_type}.h\n+tm_d_file=${cpu_type}/${cpu_type}.h\n if test -f ${srcdir}/config/${cpu_type}/${cpu_type}-protos.h\n then\n \ttm_p_file=${cpu_type}/${cpu_type}-protos.h\n+\ttm_d_file=\"${tm_d_file} ${cpu_type}/${cpu_type}-protos.h\"\n fi\n+\n extra_modes=\n if test -f ${srcdir}/config/${cpu_type}/${cpu_type}-modes.def\n then\n@@ -810,8 +832,10 @@ case ${target} in\n   esac\n   c_target_objs=\"${c_target_objs} glibc-c.o\"\n   cxx_target_objs=\"${cxx_target_objs} glibc-c.o\"\n+  d_target_objs=\"${d_target_objs} glibc-d.o\"\n   tmake_file=\"${tmake_file} t-glibc\"\n   target_has_targetcm=yes\n+  target_has_targetdm=yes\n   ;;\n *-*-netbsd*)\n   tm_p_file=\"${tm_p_file} netbsd-protos.h\"\n@@ -3232,6 +3256,10 @@ if [ \"$common_out_file\" = \"\" ]; then\n   fi\n fi\n \n+if [ \"$target_has_targetdm\" = \"no\" ]; then\n+  d_target_objs=\"$d_target_objs default-d.o\"\n+fi\n+\n # Support for --with-cpu and related options (and a few unrelated options,\n # too).\n case ${with_cpu} in\n@@ -4858,6 +4886,7 @@ case ${target} in\n \t\tout_file=\"${cpu_type}/${cpu_type}.c\"\n \t\tc_target_objs=\"${c_target_objs} ${cpu_type}-c.o\"\n \t\tcxx_target_objs=\"${cxx_target_objs} ${cpu_type}-c.o\"\n+\t\td_target_objs=\"${d_target_objs} ${cpu_type}-d.o\"\n \t\ttmake_file=\"${cpu_type}/t-${cpu_type} ${tmake_file}\"\n \t\t;;\n "}, {"sha": "1394f1fb7d30048a2fc6066e5cbf0f8e10b1eaf9", "filename": "gcc/config/aarch64/aarch64-d.c", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fconfig%2Faarch64%2Faarch64-d.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fconfig%2Faarch64%2Faarch64-d.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-d.c?ref=b4c522fabd0df7be08882d2207df8b2765026110", "patch": "@@ -0,0 +1,31 @@\n+/* Subroutines for the D front end on the AArch64 architecture.\n+   Copyright (C) 2017-2018 Free Software Foundation, Inc.\n+\n+GCC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 3, or (at your option)\n+any later version.\n+\n+GCC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  */\n+\n+#include \"config.h\"\n+#include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"d/d-target.h\"\n+#include \"d/d-target-def.h\"\n+\n+/* Implement TARGET_D_CPU_VERSIONS for AArch64 targets.  */\n+\n+void\n+aarch64_d_target_versions (void)\n+{\n+  d_add_builtin_version (\"AArch64\");\n+  d_add_builtin_version (\"D_HardFloat\");\n+}"}, {"sha": "2bee7e5baea3c85e076f99c6d98a34b7fe2e22a1", "filename": "gcc/config/aarch64/aarch64-linux.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fconfig%2Faarch64%2Faarch64-linux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fconfig%2Faarch64%2Faarch64-linux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-linux.h?ref=b4c522fabd0df7be08882d2207df8b2765026110", "patch": "@@ -81,6 +81,8 @@\n     }\t\t\t\t\t\t\\\n   while (0)\n \n+#define GNU_USER_TARGET_D_CRITSEC_SIZE 48\n+\n #define TARGET_ASM_FILE_END file_end_indicate_exec_stack\n \n /* Uninitialized common symbols in non-PIE executables, even with"}, {"sha": "776e8696ebe2ec20ba494c2e26b4894c00180312", "filename": "gcc/config/aarch64/aarch64-protos.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fconfig%2Faarch64%2Faarch64-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fconfig%2Faarch64%2Faarch64-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-protos.h?ref=b4c522fabd0df7be08882d2207df8b2765026110", "patch": "@@ -620,6 +620,9 @@ enum aarch64_parse_opt_result aarch64_parse_extension (const char *,\n std::string aarch64_get_extension_string_for_isa_flags (unsigned long,\n \t\t\t\t\t\t\tunsigned long);\n \n+/* Defined in aarch64-d.c  */\n+extern void aarch64_d_target_versions (void);\n+\n rtl_opt_pass *make_pass_fma_steering (gcc::context *);\n rtl_opt_pass *make_pass_track_speculation (gcc::context *);\n rtl_opt_pass *make_pass_tag_collision_avoidance (gcc::context *);"}, {"sha": "0c833a8fdfde0fde0e7c1f01cbdbdef4c2fb0009", "filename": "gcc/config/aarch64/aarch64.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fconfig%2Faarch64%2Faarch64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fconfig%2Faarch64%2Faarch64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.h?ref=b4c522fabd0df7be08882d2207df8b2765026110", "patch": "@@ -26,6 +26,9 @@\n #define TARGET_CPU_CPP_BUILTINS()\t\\\n   aarch64_cpu_cpp_builtins (pfile)\n \n+/* Target CPU versions for D.  */\n+#define TARGET_D_CPU_VERSIONS aarch64_d_target_versions\n+\n \f\n \n #define REGISTER_TARGET_PRAGMAS() aarch64_register_pragmas ()"}, {"sha": "e91dccea9954c2c387fb111d1b357dd2c220ff0a", "filename": "gcc/config/aarch64/t-aarch64", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fconfig%2Faarch64%2Ft-aarch64", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fconfig%2Faarch64%2Ft-aarch64", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Ft-aarch64?ref=b4c522fabd0df7be08882d2207df8b2765026110", "patch": "@@ -56,6 +56,10 @@ aarch64-c.o: $(srcdir)/config/aarch64/aarch64-c.c $(CONFIG_H) $(SYSTEM_H) \\\n \t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n \t\t$(srcdir)/config/aarch64/aarch64-c.c\n \n+aarch64-d.o: $(srcdir)/config/aarch64/aarch64-d.c\n+\t$(COMPILE) $<\n+\t$(POSTCOMPILE)\n+\n PASSES_EXTRA += $(srcdir)/config/aarch64/aarch64-passes.def\n \n cortex-a57-fma-steering.o: $(srcdir)/config/aarch64/cortex-a57-fma-steering.c \\"}, {"sha": "dbcf07efbc817e4cb611da902766f02fc47c7311", "filename": "gcc/config/arm/arm-d.c", "status": "added", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fconfig%2Farm%2Farm-d.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fconfig%2Farm%2Farm-d.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-d.c?ref=b4c522fabd0df7be08882d2207df8b2765026110", "patch": "@@ -0,0 +1,53 @@\n+/* Subroutines for the D front end on the ARM architecture.\n+   Copyright (C) 2017-2018 Free Software Foundation, Inc.\n+\n+GCC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 3, or (at your option)\n+any later version.\n+\n+GCC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  */\n+\n+#include \"config.h\"\n+#include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"tm.h\"\n+#include \"tm_p.h\"\n+#include \"d/d-target.h\"\n+#include \"d/d-target-def.h\"\n+\n+/* Implement TARGET_D_CPU_VERSIONS for ARM targets.  */\n+\n+void\n+arm_d_target_versions (void)\n+{\n+  d_add_builtin_version (\"ARM\");\n+\n+  if (TARGET_THUMB || TARGET_THUMB2)\n+    {\n+      d_add_builtin_version (\"Thumb\");\n+      d_add_builtin_version (\"ARM_Thumb\");\n+    }\n+\n+  if (TARGET_HARD_FLOAT_ABI)\n+    d_add_builtin_version (\"ARM_HardFloat\");\n+  else\n+    {\n+      if (TARGET_SOFT_FLOAT)\n+\td_add_builtin_version (\"ARM_SoftFloat\");\n+      else if (TARGET_HARD_FLOAT)\n+\td_add_builtin_version (\"ARM_SoftFP\");\n+    }\n+\n+  if (TARGET_SOFT_FLOAT)\n+    d_add_builtin_version (\"D_SoftFloat\");\n+  else if (TARGET_HARD_FLOAT)\n+    d_add_builtin_version (\"D_HardFloat\");\n+}"}, {"sha": "cea98669111d318954e9f6102db74172e675304b", "filename": "gcc/config/arm/arm-protos.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fconfig%2Farm%2Farm-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fconfig%2Farm%2Farm-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-protos.h?ref=b4c522fabd0df7be08882d2207df8b2765026110", "patch": "@@ -375,6 +375,9 @@ extern void arm_lang_object_attributes_init (void);\n extern void arm_register_target_pragmas (void);\n extern void arm_cpu_cpp_builtins (struct cpp_reader *);\n \n+/* Defined in arm-d.c  */\n+extern void arm_d_target_versions (void);\n+\n extern bool arm_is_constant_pool_ref (rtx);\n \n /* The bits in this mask specify which instruction scheduling options should"}, {"sha": "8472312487b50d93edf47cd31660efd6bc043387", "filename": "gcc/config/arm/arm.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fconfig%2Farm%2Farm.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fconfig%2Farm%2Farm.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.h?ref=b4c522fabd0df7be08882d2207df8b2765026110", "patch": "@@ -47,6 +47,9 @@ extern char arm_arch_name[];\n /* Target CPU builtins.  */\n #define TARGET_CPU_CPP_BUILTINS() arm_cpu_cpp_builtins (pfile)\n \n+/* Target CPU versions for D.  */\n+#define TARGET_D_CPU_VERSIONS arm_d_target_versions\n+\n #include \"config/arm/arm-opts.h\"\n \n /* The processor for which instructions should be scheduled.  */"}, {"sha": "4254b19212d99a269e0b6a0fcacdb72387ec88b9", "filename": "gcc/config/arm/linux-eabi.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fconfig%2Farm%2Flinux-eabi.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fconfig%2Farm%2Flinux-eabi.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Flinux-eabi.h?ref=b4c522fabd0df7be08882d2207df8b2765026110", "patch": "@@ -30,6 +30,9 @@\n     }\t\t\t\t\t\t\\\n   while (false)\n \n+#define EXTRA_TARGET_D_OS_VERSIONS()\t\t\\\n+  ANDROID_TARGET_D_OS_VERSIONS();\n+\n /* We default to a soft-float ABI so that binaries can run on all\n    target hardware.  If you override this to use the hard-float ABI then\n    change the setting of GLIBC_DYNAMIC_LINKER_DEFAULT as well.  */"}, {"sha": "02b462606864944e018049d8ead150a3c94a65d4", "filename": "gcc/config/arm/t-arm", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fconfig%2Farm%2Ft-arm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fconfig%2Farm%2Ft-arm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ft-arm?ref=b4c522fabd0df7be08882d2207df8b2765026110", "patch": "@@ -152,6 +152,10 @@ arm-c.o: $(srcdir)/config/arm/arm-c.c $(CONFIG_H) $(SYSTEM_H) \\\n \t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n \t\t$(srcdir)/config/arm/arm-c.c\n \n+arm-d.o: $(srcdir)/config/arm/arm-d.c\n+\t$(COMPILE) $<\n+\t$(POSTCOMPILE)\n+\n arm-common.o: arm-cpu-cdata.h\n \n driver-arm.o: arm-native.h"}, {"sha": "6c952052088a947b54f90202e0316f0cacc15deb", "filename": "gcc/config/default-d.c", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fconfig%2Fdefault-d.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fconfig%2Fdefault-d.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdefault-d.c?ref=b4c522fabd0df7be08882d2207df8b2765026110", "patch": "@@ -0,0 +1,25 @@\n+/* Default D language target hooks initializer.\n+   Copyright (C) 2017-2018 Free Software Foundation, Inc.\n+\n+GCC is free software; you can redistribute it and/or modify it under\n+the terms of the GNU General Public License as published by the Free\n+Software Foundation; either version 3, or (at your option) any later\n+version.\n+\n+GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n+WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  */\n+\n+#include \"config.h\"\n+#include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"tm_d.h\"\n+#include \"d/d-target.h\"\n+#include \"d/d-target-def.h\"\n+\n+struct gcc_targetdm targetdm = TARGETDM_INITIALIZER;"}, {"sha": "b73ee01f21d22eca2fac6584a8a3ce257d4555dd", "filename": "gcc/config/glibc-d.c", "status": "added", "additions": 64, "deletions": 0, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fconfig%2Fglibc-d.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fconfig%2Fglibc-d.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fglibc-d.c?ref=b4c522fabd0df7be08882d2207df8b2765026110", "patch": "@@ -0,0 +1,64 @@\n+/* Glibc support needed only by D front-end.\n+   Copyright (C) 2017-2018 Free Software Foundation, Inc.\n+\n+GCC is free software; you can redistribute it and/or modify it under\n+the terms of the GNU General Public License as published by the Free\n+Software Foundation; either version 3, or (at your option) any later\n+version.\n+\n+GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n+WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  */\n+\n+#include \"config.h\"\n+#include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"tm.h\"\n+#include \"memmodel.h\"\n+#include \"tm_p.h\"\n+#include \"d/d-target.h\"\n+#include \"d/d-target-def.h\"\n+\n+/* Implement TARGET_D_OS_VERSIONS for Glibc targets.  */\n+\n+static void\n+glibc_d_os_builtins (void)\n+{\n+  d_add_builtin_version (\"Posix\");\n+\n+#define builtin_version(TXT) d_add_builtin_version (TXT)\n+\n+#ifdef GNU_USER_TARGET_D_OS_VERSIONS\n+  GNU_USER_TARGET_D_OS_VERSIONS ();\n+#endif\n+\n+#ifdef EXTRA_TARGET_D_OS_VERSIONS\n+  EXTRA_TARGET_D_OS_VERSIONS ();\n+#endif\n+}\n+\n+/* Implement TARGET_D_CRITSEC_SIZE for Glibc targets.  */\n+\n+static unsigned\n+glibc_d_critsec_size (void)\n+{\n+  /* This is the sizeof pthread_mutex_t.  */\n+#ifdef GNU_USER_TARGET_D_CRITSEC_SIZE\n+  return GNU_USER_TARGET_D_CRITSEC_SIZE;\n+#else\n+  return (POINTER_SIZE == 64) ? 40 : 24;\n+#endif\n+}\n+\n+#undef TARGET_D_OS_VERSIONS\n+#define TARGET_D_OS_VERSIONS glibc_d_os_builtins\n+\n+#undef TARGET_D_CRITSEC_SIZE\n+#define TARGET_D_CRITSEC_SIZE glibc_d_critsec_size\n+\n+struct gcc_targetdm targetdm = TARGETDM_INITIALIZER;"}, {"sha": "3aca4e359839144bb1342b91ca31b1e190eb1023", "filename": "gcc/config/gnu.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fconfig%2Fgnu.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fconfig%2Fgnu.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fgnu.h?ref=b4c522fabd0df7be08882d2207df8b2765026110", "patch": "@@ -31,3 +31,9 @@ along with GCC.  If not, see <http://www.gnu.org/licenses/>.\n \tbuiltin_assert (\"system=unix\");\t\t\\\n \tbuiltin_assert (\"system=posix\");\t\\\n     } while (0)\n+\n+#define GNU_USER_TARGET_D_OS_VERSIONS()\t\t\\\n+    do {\t\t\t\t\t\\\n+\tbuiltin_version (\"Hurd\");\t\t\\\n+\tbuiltin_version (\"CRuntime_Glibc\");\t\\\n+    } while (0)"}, {"sha": "34304b84a36796dd40db53b0646c8813b169f1dd", "filename": "gcc/config/i386/i386-d.c", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fconfig%2Fi386%2Fi386-d.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fconfig%2Fi386%2Fi386-d.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-d.c?ref=b4c522fabd0df7be08882d2207df8b2765026110", "patch": "@@ -0,0 +1,44 @@\n+/* Subroutines for the D front end on the x86 architecture.\n+   Copyright (C) 2017-2018 Free Software Foundation, Inc.\n+\n+GCC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 3, or (at your option)\n+any later version.\n+\n+GCC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  */\n+\n+#include \"config.h\"\n+#include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"tm.h\"\n+#include \"d/d-target.h\"\n+#include \"d/d-target-def.h\"\n+\n+/* Implement TARGET_D_CPU_VERSIONS for x86 targets.  */\n+\n+void\n+ix86_d_target_versions (void)\n+{\n+  if (TARGET_64BIT)\n+    {\n+      d_add_builtin_version (\"X86_64\");\n+\n+      if (TARGET_X32)\n+\td_add_builtin_version (\"D_X32\");\n+    }\n+  else\n+    d_add_builtin_version (\"X86\");\n+\n+  if (TARGET_80387)\n+    d_add_builtin_version (\"D_HardFloat\");\n+  else\n+    d_add_builtin_version (\"D_SoftFloat\");\n+}"}, {"sha": "258bdd18cb529865a5bc32d0e348326ac104cb6f", "filename": "gcc/config/i386/i386-protos.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fconfig%2Fi386%2Fi386-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fconfig%2Fi386%2Fi386-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-protos.h?ref=b4c522fabd0df7be08882d2207df8b2765026110", "patch": "@@ -236,6 +236,9 @@ extern void ix86_expand_sse2_abs (rtx, rtx);\n extern void ix86_target_macros (void);\n extern void ix86_register_pragmas (void);\n \n+/* In i386-d.c  */\n+extern void ix86_d_target_versions (void);\n+\n /* In winnt.c  */\n extern void i386_pe_unique_section (tree, int);\n extern void i386_pe_declare_function_type (FILE *, const char *, int);"}, {"sha": "01d49a7263b782afca11f325bb9134008ef89b2b", "filename": "gcc/config/i386/i386.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fconfig%2Fi386%2Fi386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fconfig%2Fi386%2Fi386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.h?ref=b4c522fabd0df7be08882d2207df8b2765026110", "patch": "@@ -718,6 +718,9 @@ extern const char *host_detect_local_cpu (int argc, const char **argv);\n /* Target Pragmas.  */\n #define REGISTER_TARGET_PRAGMAS() ix86_register_pragmas ()\n \n+/* Target CPU versions for D.  */\n+#define TARGET_D_CPU_VERSIONS ix86_d_target_versions\n+\n #ifndef CC1_SPEC\n #define CC1_SPEC \"%(cc1_cpu) \"\n #endif"}, {"sha": "1e7a05508396d470b026f6b6eb97e7d79390ca8c", "filename": "gcc/config/i386/linux-common.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fconfig%2Fi386%2Flinux-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fconfig%2Fi386%2Flinux-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Flinux-common.h?ref=b4c522fabd0df7be08882d2207df8b2765026110", "patch": "@@ -27,6 +27,12 @@ along with GCC; see the file COPYING3.  If not see\n     }                                          \\\n   while (0)\n \n+#define EXTRA_TARGET_D_OS_VERSIONS()\t\t\\\n+  ANDROID_TARGET_D_OS_VERSIONS();\n+\n+#define GNU_USER_TARGET_D_CRITSEC_SIZE\t\t\\\n+  (TARGET_64BIT ? (POINTER_SIZE == 64 ? 40 : 32) : 24)\n+\n #undef CC1_SPEC\n #define CC1_SPEC \\\n   LINUX_OR_ANDROID_CC (GNU_USER_TARGET_CC1_SPEC, \\"}, {"sha": "261739e87780fb05db2847c584fa69cbab9e9cf4", "filename": "gcc/config/i386/t-i386", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fconfig%2Fi386%2Ft-i386", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fconfig%2Fi386%2Ft-i386", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Ft-i386?ref=b4c522fabd0df7be08882d2207df8b2765026110", "patch": "@@ -40,6 +40,10 @@ x86-tune-sched-core.o: $(srcdir)/config/i386/x86-tune-sched-core.c\n \t  $(COMPILE) $<\n \t  $(POSTCOMPILE)\n \n+i386-d.o: $(srcdir)/config/i386/i386-d.c\n+\t$(COMPILE) $<\n+\t$(POSTCOMPILE)\n+\n i386.o: i386-builtin-types.inc\n \n i386-builtin-types.inc: s-i386-bt ; @true"}, {"sha": "923e7e415081c74dacfe3bf04cd13b544d3dac5d", "filename": "gcc/config/kfreebsd-gnu.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fconfig%2Fkfreebsd-gnu.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fconfig%2Fkfreebsd-gnu.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fkfreebsd-gnu.h?ref=b4c522fabd0df7be08882d2207df8b2765026110", "patch": "@@ -29,6 +29,12 @@ along with GCC; see the file COPYING3.  If not see\n     }\t\t\t\t\t\t\\\n   while (0)\n \n+#define GNU_USER_TARGET_D_OS_VERSIONS()\t\t\\\n+    do {\t\t\t\t\t\\\n+\tbuiltin_version (\"FreeBSD\");\t\t\\\n+\tbuiltin_version (\"CRuntime_Glibc\");\t\\\n+    } while (0)\n+\n #define GNU_USER_DYNAMIC_LINKER        GLIBC_DYNAMIC_LINKER\n #define GNU_USER_DYNAMIC_LINKER32      GLIBC_DYNAMIC_LINKER32\n #define GNU_USER_DYNAMIC_LINKER64      GLIBC_DYNAMIC_LINKER64"}, {"sha": "4b303ccf5443d11fdce607fbf40241650a72c1e9", "filename": "gcc/config/kopensolaris-gnu.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fconfig%2Fkopensolaris-gnu.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fconfig%2Fkopensolaris-gnu.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fkopensolaris-gnu.h?ref=b4c522fabd0df7be08882d2207df8b2765026110", "patch": "@@ -30,5 +30,11 @@ along with GCC; see the file COPYING3.  If not see\n     }\t\t\t\t\t\t\\\n   while (0)\n \n+#define GNU_USER_TARGET_D_OS_VERSIONS()\t\t\\\n+    do {\t\t\t\t\t\\\n+\tbuiltin_version (\"Solaris\");\t\t\\\n+\tbuiltin_version (\"CRuntime_Glibc\");\t\\\n+    } while (0)\n+\n #undef GNU_USER_DYNAMIC_LINKER\n #define GNU_USER_DYNAMIC_LINKER \"/lib/ld.so.1\""}, {"sha": "40da4c178e8bb578451ffed5e3b3cc61df82be53", "filename": "gcc/config/linux-android.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fconfig%2Flinux-android.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fconfig%2Flinux-android.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Flinux-android.h?ref=b4c522fabd0df7be08882d2207df8b2765026110", "patch": "@@ -25,6 +25,12 @@\n \t  builtin_define (\"__ANDROID__\");\t\t\t\\\n     } while (0)\n \n+#define ANDROID_TARGET_D_OS_VERSIONS()\t\t\t\t\\\n+    do {\t\t\t\t\t\t\t\\\n+\tif (TARGET_ANDROID)\t\t\t\t\t\\\n+\t  builtin_version (\"Android\");\t\t\t\t\\\n+    } while (0)\n+\n #if ANDROID_DEFAULT\n # define NOANDROID \"mno-android\"\n #else"}, {"sha": "0255359902466581a184ba59e60054973dae90c5", "filename": "gcc/config/linux.h", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fconfig%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fconfig%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Flinux.h?ref=b4c522fabd0df7be08882d2207df8b2765026110", "patch": "@@ -53,6 +53,19 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n \tbuiltin_assert (\"system=posix\");\t\t\t\\\n     } while (0)\n \n+#define GNU_USER_TARGET_D_OS_VERSIONS()\t\t\t\t\\\n+    do {\t\t\t\t\t\t\t\\\n+\tbuiltin_version (\"linux\");\t\t\t\t\\\n+\tif (OPTION_GLIBC)\t\t\t\t\t\\\n+\t  builtin_version (\"CRuntime_Glibc\");\t\t\t\\\n+\telse if (OPTION_UCLIBC)\t\t\t\t\t\\\n+\t  builtin_version (\"CRuntime_UClibc\");\t\t\t\\\n+\telse if (OPTION_BIONIC)\t\t\t\t\t\\\n+\t  builtin_version (\"CRuntime_Bionic\");\t\t\t\\\n+\telse if (OPTION_MUSL)\t\t\t\t\t\\\n+\t  builtin_version (\"CRuntime_Musl\");\t\t\t\\\n+    } while (0)\n+\n /* Determine which dynamic linker to use depending on whether GLIBC or\n    uClibc or Bionic or musl is the default C library and whether\n    -muclibc or -mglibc or -mbionic or -mmusl has been passed to change"}, {"sha": "da9be6b369da231668acdec621837a7d49d52a17", "filename": "gcc/config/mips/linux-common.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fconfig%2Fmips%2Flinux-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fconfig%2Fmips%2Flinux-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Flinux-common.h?ref=b4c522fabd0df7be08882d2207df8b2765026110", "patch": "@@ -27,6 +27,9 @@ along with GCC; see the file COPYING3.  If not see\n     ANDROID_TARGET_OS_CPP_BUILTINS();\t\t\t\t\\\n   } while (0)\n \n+#define EXTRA_TARGET_D_OS_VERSIONS()\t\t\t\t\\\n+  ANDROID_TARGET_D_OS_VERSIONS();\n+\n #undef  LINK_SPEC\n #define LINK_SPEC\t\t\t\t\t\t\t\\\n   LINUX_OR_ANDROID_LD (GNU_USER_TARGET_LINK_SPEC,\t\t\t\\"}, {"sha": "8f0d96794564be2263e0dc65152d44e19c0e7418", "filename": "gcc/config/mips/mips-d.c", "status": "added", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fconfig%2Fmips%2Fmips-d.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fconfig%2Fmips%2Fmips-d.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips-d.c?ref=b4c522fabd0df7be08882d2207df8b2765026110", "patch": "@@ -0,0 +1,56 @@\n+/* Subroutines for the D front end on the MIPS architecture.\n+   Copyright (C) 2017-2018 Free Software Foundation, Inc.\n+\n+GCC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 3, or (at your option)\n+any later version.\n+\n+GCC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  */\n+\n+#include \"config.h\"\n+#include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"tm.h\"\n+#include \"d/d-target.h\"\n+#include \"d/d-target-def.h\"\n+\n+/* Implement TARGET_D_CPU_VERSIONS for MIPS targets.  */\n+\n+void\n+mips_d_target_versions (void)\n+{\n+  if (TARGET_64BIT)\n+    d_add_builtin_version (\"MIPS64\");\n+  else\n+    d_add_builtin_version (\"MIPS32\");\n+\n+  if (mips_abi == ABI_32)\n+    d_add_builtin_version (\"MIPS_O32\");\n+  else if (mips_abi == ABI_EABI)\n+    d_add_builtin_version (\"MIPS_EABI\");\n+  else if (mips_abi == ABI_N32)\n+    d_add_builtin_version (\"MIPS_N32\");\n+  else if (mips_abi == ABI_64)\n+    d_add_builtin_version (\"MIPS_N64\");\n+  else if (mips_abi == ABI_O64)\n+    d_add_builtin_version (\"MIPS_O64\");\n+\n+  if (TARGET_HARD_FLOAT_ABI)\n+    {\n+      d_add_builtin_version (\"MIPS_HardFloat\");\n+      d_add_builtin_version (\"D_HardFloat\");\n+    }\n+  else if (TARGET_SOFT_FLOAT_ABI)\n+    {\n+      d_add_builtin_version (\"MIPS_SoftFloat\");\n+      d_add_builtin_version (\"D_SoftFloat\");\n+    }\n+}"}, {"sha": "099120db7b42ed9da89318164bdd8e2013977b30", "filename": "gcc/config/mips/mips-protos.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fconfig%2Fmips%2Fmips-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fconfig%2Fmips%2Fmips-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips-protos.h?ref=b4c522fabd0df7be08882d2207df8b2765026110", "patch": "@@ -385,4 +385,7 @@ extern mulsidi3_gen_fn mips_mulsidi3_gen_fn (enum rtx_code);\n extern void mips_register_frame_header_opt (void);\n extern void mips_expand_vec_cond_expr (machine_mode, machine_mode, rtx *);\n \n+/* Routines implemented in mips-d.c  */\n+extern void mips_d_target_versions (void);\n+\n #endif /* ! GCC_MIPS_PROTOS_H */"}, {"sha": "32a88edc9106a589ff659b76a48079d0d4b752f1", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=b4c522fabd0df7be08882d2207df8b2765026110", "patch": "@@ -645,6 +645,9 @@ struct mips_cpu_info {\n     }\t\t\t\t\t\t\t\t\t\\\n   while (0)\n \n+/* Target CPU versions for D.  */\n+#define TARGET_D_CPU_VERSIONS mips_d_target_versions\n+\n /* Default target_flags if no switches are specified  */\n \n #ifndef TARGET_DEFAULT"}, {"sha": "0466ba2a97d68482790c0b7c81d110cc3784acc2", "filename": "gcc/config/mips/t-mips", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fconfig%2Fmips%2Ft-mips", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fconfig%2Fmips%2Ft-mips", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Ft-mips?ref=b4c522fabd0df7be08882d2207df8b2765026110", "patch": "@@ -24,3 +24,7 @@ $(srcdir)/config/mips/mips-tables.opt: $(srcdir)/config/mips/genopt.sh \\\n frame-header-opt.o: $(srcdir)/config/mips/frame-header-opt.c\n \t$(COMPILE) $<\n \t$(POSTCOMPILE)\n+\n+mips-d.o: $(srcdir)/config/mips/mips-d.c\n+\t$(COMPILE) $<\n+\t$(POSTCOMPILE)"}, {"sha": "fe755ef08da550bd9a1684afe78588f209bd2854", "filename": "gcc/config/powerpcspe/linux.h", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fconfig%2Fpowerpcspe%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fconfig%2Fpowerpcspe%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpowerpcspe%2Flinux.h?ref=b4c522fabd0df7be08882d2207df8b2765026110", "patch": "@@ -57,6 +57,19 @@\n     }\t\t\t\t\t\t\\\n   while (0)\n \n+#define GNU_USER_TARGET_D_OS_VERSIONS()\t\t\\\n+    do {\t\t\t\t\t\\\n+\tbuiltin_version (\"linux\");\t\t\\\n+\tif (OPTION_GLIBC)\t\t\t\\\n+\t  builtin_version (\"CRuntime_Glibc\");\t\\\n+\telse if (OPTION_UCLIBC)\t\t\t\\\n+\t  builtin_version (\"CRuntime_UClibc\");\t\\\n+\telse if (OPTION_BIONIC)\t\t\t\\\n+\t  builtin_version (\"CRuntime_Bionic\");\t\\\n+\telse if (OPTION_MUSL)\t\t\t\\\n+\t  builtin_version (\"CRuntime_Musl\");\t\\\n+    } while (0)\n+\n #undef\tCPP_OS_DEFAULT_SPEC\n #define CPP_OS_DEFAULT_SPEC \"%(cpp_os_linux)\"\n "}, {"sha": "f0e3f09eea536bbeb3ace8f7f64ec5538afd24fa", "filename": "gcc/config/powerpcspe/linux64.h", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fconfig%2Fpowerpcspe%2Flinux64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fconfig%2Fpowerpcspe%2Flinux64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpowerpcspe%2Flinux64.h?ref=b4c522fabd0df7be08882d2207df8b2765026110", "patch": "@@ -391,6 +391,19 @@ extern int dot_symbols;\n     }\t\t\t\t\t\t\t\\\n   while (0)\n \n+#define GNU_USER_TARGET_D_OS_VERSIONS()\t\t\t\\\n+    do {\t\t\t\t\t\t\\\n+\tbuiltin_version (\"linux\");\t\t\t\\\n+\tif (OPTION_GLIBC)\t\t\t\t\\\n+\t  builtin_version (\"CRuntime_Glibc\");\t\t\\\n+\telse if (OPTION_UCLIBC)\t\t\t\t\\\n+\t  builtin_version (\"CRuntime_UClibc\");\t\t\\\n+\telse if (OPTION_BIONIC)\t\t\t\t\\\n+\t  builtin_version (\"CRuntime_Bionic\");\t\t\\\n+\telse if (OPTION_MUSL)\t\t\t\t\\\n+\t  builtin_version (\"CRuntime_Musl\");\t\t\\\n+    } while (0)\n+\n #undef  CPP_OS_DEFAULT_SPEC\n #define CPP_OS_DEFAULT_SPEC \"%(cpp_os_linux) %(include_extra)\"\n "}, {"sha": "84eb4e93df9ea99fda7e8e71a091ea35f0493c71", "filename": "gcc/config/powerpcspe/powerpcspe-d.c", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fconfig%2Fpowerpcspe%2Fpowerpcspe-d.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fconfig%2Fpowerpcspe%2Fpowerpcspe-d.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpowerpcspe%2Fpowerpcspe-d.c?ref=b4c522fabd0df7be08882d2207df8b2765026110", "patch": "@@ -0,0 +1,45 @@\n+/* Subroutines for the D front end on the PowerPC architecture.\n+   Copyright (C) 2017-2018 Free Software Foundation, Inc.\n+\n+GCC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 3, or (at your option)\n+any later version.\n+\n+GCC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  */\n+\n+#include \"config.h\"\n+#include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"tm.h\"\n+#include \"d/d-target.h\"\n+#include \"d/d-target-def.h\"\n+\n+/* Implement TARGET_D_CPU_VERSIONS for PowerPC targets.  */\n+\n+void\n+rs6000_d_target_versions (void)\n+{\n+  if (TARGET_64BIT)\n+    d_add_builtin_version (\"PPC64\");\n+  else\n+    d_add_builtin_version (\"PPC\");\n+\n+  if (TARGET_HARD_FLOAT)\n+    {\n+      d_add_builtin_version (\"PPC_HardFloat\");\n+      d_add_builtin_version (\"D_HardFloat\");\n+    }\n+  else if (TARGET_SOFT_FLOAT)\n+    {\n+      d_add_builtin_version (\"PPC_SoftFloat\");\n+      d_add_builtin_version (\"D_SoftFloat\");\n+    }\n+}"}, {"sha": "575a3ed3e6a5a0bb65ecacbb9c2c1fbe7f0ab1ad", "filename": "gcc/config/powerpcspe/powerpcspe-protos.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fconfig%2Fpowerpcspe%2Fpowerpcspe-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fconfig%2Fpowerpcspe%2Fpowerpcspe-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpowerpcspe%2Fpowerpcspe-protos.h?ref=b4c522fabd0df7be08882d2207df8b2765026110", "patch": "@@ -231,6 +231,9 @@ extern void rs6000_target_modify_macros (bool, HOST_WIDE_INT, HOST_WIDE_INT);\n extern void (*rs6000_target_modify_macros_ptr) (bool, HOST_WIDE_INT,\n \t\t\t\t\t\tHOST_WIDE_INT);\n \n+/* Declare functions in powerpcspe-d.c  */\n+extern void rs6000_d_target_versions (void);\n+\n #if TARGET_MACHO\n char *output_call (rtx_insn *, rtx *, int, int);\n #endif"}, {"sha": "b05b89c13e60dd00c18d6d3c19876347684a2a05", "filename": "gcc/config/powerpcspe/powerpcspe.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fconfig%2Fpowerpcspe%2Fpowerpcspe.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fconfig%2Fpowerpcspe%2Fpowerpcspe.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpowerpcspe%2Fpowerpcspe.c?ref=b4c522fabd0df7be08882d2207df8b2765026110", "patch": "@@ -31965,11 +31965,12 @@ rs6000_output_function_epilogue (FILE *file)\n \t use language_string.\n \t C is 0.  Fortran is 1.  Ada is 3.  C++ is 9.\n \t Java is 13.  Objective-C is 14.  Objective-C++ isn't assigned\n-\t a number, so for now use 9.  LTO, Go and JIT aren't assigned numbers\n-\t either, so for now use 0.  */\n+\t a number, so for now use 9.  LTO, Go, D and JIT aren't assigned\n+\t numbers either, so for now use 0.  */\n       if (lang_GNU_C ()\n \t  || ! strcmp (language_string, \"GNU GIMPLE\")\n \t  || ! strcmp (language_string, \"GNU Go\")\n+\t  || ! strcmp (language_string, \"GNU D\")\n \t  || ! strcmp (language_string, \"libgccjit\"))\n \ti = 0;\n       else if (! strcmp (language_string, \"GNU F77\")"}, {"sha": "2305ce3c32792bf6a62cf52f98ed25b64c551d66", "filename": "gcc/config/powerpcspe/powerpcspe.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fconfig%2Fpowerpcspe%2Fpowerpcspe.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fconfig%2Fpowerpcspe%2Fpowerpcspe.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpowerpcspe%2Fpowerpcspe.h?ref=b4c522fabd0df7be08882d2207df8b2765026110", "patch": "@@ -702,6 +702,9 @@ extern unsigned char rs6000_recip_bits[];\n #define TARGET_CPU_CPP_BUILTINS() \\\n   rs6000_cpu_cpp_builtins (pfile)\n \n+/* Target CPU versions for D.  */\n+#define TARGET_D_CPU_VERSIONS rs6000_d_target_versions\n+\n /* This is used by rs6000_cpu_cpp_builtins to indicate the byte order\n    we're compiling for.  Some configurations may need to override it.  */\n #define RS6000_CPU_CPP_ENDIAN_BUILTINS()\t\\"}, {"sha": "e67c21cf6a5860d35e4f2b93ee328a9b767d4153", "filename": "gcc/config/powerpcspe/t-powerpcspe", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fconfig%2Fpowerpcspe%2Ft-powerpcspe", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fconfig%2Fpowerpcspe%2Ft-powerpcspe", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpowerpcspe%2Ft-powerpcspe?ref=b4c522fabd0df7be08882d2207df8b2765026110", "patch": "@@ -26,6 +26,10 @@ powerpcspe-c.o: $(srcdir)/config/powerpcspe/powerpcspe-c.c\n \t$(COMPILE) $<\n \t$(POSTCOMPILE)\n \n+powerpcspe-d.o: $(srcdir)/config/powerpcspe/powerpcspe-d.c\n+\t$(COMPILE) $<\n+\t$(POSTCOMPILE)\n+\n $(srcdir)/config/powerpcspe/powerpcspe-tables.opt: $(srcdir)/config/powerpcspe/genopt.sh \\\n   $(srcdir)/config/powerpcspe/powerpcspe-cpus.def\n \t$(SHELL) $(srcdir)/config/powerpcspe/genopt.sh $(srcdir)/config/powerpcspe > \\"}, {"sha": "9cad9dd8f5e44c47062caf8915a6993fcc6de8f8", "filename": "gcc/config/riscv/riscv-d.c", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fconfig%2Friscv%2Friscv-d.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fconfig%2Friscv%2Friscv-d.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Friscv-d.c?ref=b4c522fabd0df7be08882d2207df8b2765026110", "patch": "@@ -0,0 +1,39 @@\n+/* Subroutines for the D front end on the RISC-V architecture.\n+   Copyright (C) 2017-2018 Free Software Foundation, Inc.\n+\n+GCC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 3, or (at your option)\n+any later version.\n+\n+GCC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  */\n+\n+#include \"config.h\"\n+#include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"target.h\"\n+#include \"d/d-target.h\"\n+#include \"d/d-target-def.h\"\n+\n+/* Implement TARGET_D_CPU_VERSIONS for RISC-V targets.  */\n+\n+void\n+riscv_d_target_versions (void)\n+{\n+  if (TARGET_64BIT)\n+    d_add_builtin_version (\"RISCV64\");\n+  else\n+    d_add_builtin_version (\"RISCV32\");\n+\n+  if (TARGET_HARD_FLOAT)\n+    d_add_builtin_version (\"D_HardFloat\");\n+  else\n+    d_add_builtin_version (\"D_SoftFloat\");\n+}"}, {"sha": "5dce9c4339847dee94bd1f69c188b29a09d06ae5", "filename": "gcc/config/riscv/riscv-protos.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fconfig%2Friscv%2Friscv-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fconfig%2Friscv%2Friscv-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Friscv-protos.h?ref=b4c522fabd0df7be08882d2207df8b2765026110", "patch": "@@ -75,6 +75,9 @@ extern bool riscv_expand_block_move (rtx, rtx, rtx);\n /* Routines implemented in riscv-c.c.  */\n void riscv_cpu_cpp_builtins (cpp_reader *);\n \n+/* Routines implemented in riscv-d.c  */\n+extern void riscv_d_target_versions (void);\n+\n /* Routines implemented in riscv-builtins.c.  */\n extern void riscv_atomic_assign_expand_fenv (tree *, tree *, tree *);\n extern rtx riscv_expand_builtin (tree, rtx, rtx, machine_mode, int);"}, {"sha": "13e15cc852b355d862b4883e60a383d7b829d0c4", "filename": "gcc/config/riscv/riscv.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fconfig%2Friscv%2Friscv.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fconfig%2Friscv%2Friscv.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Friscv.h?ref=b4c522fabd0df7be08882d2207df8b2765026110", "patch": "@@ -27,6 +27,9 @@ along with GCC; see the file COPYING3.  If not see\n /* Target CPU builtins.  */\n #define TARGET_CPU_CPP_BUILTINS() riscv_cpu_cpp_builtins (pfile)\n \n+/* Target CPU versions for D.  */\n+#define TARGET_D_CPU_VERSIONS riscv_d_target_versions\n+\n /* Default target_flags if no switches are specified  */\n \n #ifndef TARGET_DEFAULT"}, {"sha": "ece3a75d512e70378ed91631de7faf5de29de0b8", "filename": "gcc/config/riscv/t-riscv", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fconfig%2Friscv%2Ft-riscv", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fconfig%2Friscv%2Ft-riscv", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Ft-riscv?ref=b4c522fabd0df7be08882d2207df8b2765026110", "patch": "@@ -9,3 +9,8 @@ riscv-c.o: $(srcdir)/config/riscv/riscv-c.c $(CONFIG_H) $(SYSTEM_H) \\\n     coretypes.h $(TM_H) $(TREE_H) output.h $(C_COMMON_H) $(TARGET_H)\n \t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n \t\t$(srcdir)/config/riscv/riscv-c.c\n+\n+riscv-d.o: $(srcdir)/config/riscv/riscv-d.c\n+\t$(COMPILE) $<\n+\t$(POSTCOMPILE)\n+"}, {"sha": "fd06b14d837ea9c8472cafc1e529486294c1fadf", "filename": "gcc/config/rs6000/linux.h", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fconfig%2Frs6000%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fconfig%2Frs6000%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Flinux.h?ref=b4c522fabd0df7be08882d2207df8b2765026110", "patch": "@@ -57,6 +57,19 @@\n     }\t\t\t\t\t\t\\\n   while (0)\n \n+#define GNU_USER_TARGET_D_OS_VERSIONS()\t\t\\\n+    do {\t\t\t\t\t\\\n+\tbuiltin_version (\"linux\");\t\t\\\n+\tif (OPTION_GLIBC)\t\t\t\\\n+\t  builtin_version (\"CRuntime_Glibc\");\t\\\n+\telse if (OPTION_UCLIBC)\t\t\t\\\n+\t  builtin_version (\"CRuntime_UClibc\");\t\\\n+\telse if (OPTION_BIONIC)\t\t\t\\\n+\t  builtin_version (\"CRuntime_Bionic\");\t\\\n+\telse if (OPTION_MUSL)\t\t\t\\\n+\t  builtin_version (\"CRuntime_Musl\");\t\\\n+    } while (0)\n+\n #undef\tCPP_OS_DEFAULT_SPEC\n #define CPP_OS_DEFAULT_SPEC \"%(cpp_os_linux)\"\n "}, {"sha": "e6b4fd22d738604e606d6d25f3b4dae8e9356e7a", "filename": "gcc/config/rs6000/linux64.h", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fconfig%2Frs6000%2Flinux64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fconfig%2Frs6000%2Flinux64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Flinux64.h?ref=b4c522fabd0df7be08882d2207df8b2765026110", "patch": "@@ -391,6 +391,19 @@ extern int dot_symbols;\n     }\t\t\t\t\t\t\t\\\n   while (0)\n \n+#define GNU_USER_TARGET_D_OS_VERSIONS()\t\t\\\n+    do {\t\t\t\t\t\\\n+\tbuiltin_version (\"linux\");\t\t\\\n+\tif (OPTION_GLIBC)\t\t\t\\\n+\t  builtin_version (\"CRuntime_Glibc\");\t\\\n+\telse if (OPTION_UCLIBC)\t\t\t\\\n+\t  builtin_version (\"CRuntime_UClibc\");\t\\\n+\telse if (OPTION_BIONIC)\t\t\t\\\n+\t  builtin_version (\"CRuntime_Bionic\");\t\\\n+\telse if (OPTION_MUSL)\t\t\t\\\n+\t  builtin_version (\"CRuntime_Musl\");\t\\\n+    } while (0)\n+\n #undef  CPP_OS_DEFAULT_SPEC\n #define CPP_OS_DEFAULT_SPEC \"%(cpp_os_linux) %(include_extra)\"\n "}, {"sha": "84eb4e93df9ea99fda7e8e71a091ea35f0493c71", "filename": "gcc/config/rs6000/rs6000-d.c", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fconfig%2Frs6000%2Frs6000-d.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fconfig%2Frs6000%2Frs6000-d.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-d.c?ref=b4c522fabd0df7be08882d2207df8b2765026110", "patch": "@@ -0,0 +1,45 @@\n+/* Subroutines for the D front end on the PowerPC architecture.\n+   Copyright (C) 2017-2018 Free Software Foundation, Inc.\n+\n+GCC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 3, or (at your option)\n+any later version.\n+\n+GCC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  */\n+\n+#include \"config.h\"\n+#include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"tm.h\"\n+#include \"d/d-target.h\"\n+#include \"d/d-target-def.h\"\n+\n+/* Implement TARGET_D_CPU_VERSIONS for PowerPC targets.  */\n+\n+void\n+rs6000_d_target_versions (void)\n+{\n+  if (TARGET_64BIT)\n+    d_add_builtin_version (\"PPC64\");\n+  else\n+    d_add_builtin_version (\"PPC\");\n+\n+  if (TARGET_HARD_FLOAT)\n+    {\n+      d_add_builtin_version (\"PPC_HardFloat\");\n+      d_add_builtin_version (\"D_HardFloat\");\n+    }\n+  else if (TARGET_SOFT_FLOAT)\n+    {\n+      d_add_builtin_version (\"PPC_SoftFloat\");\n+      d_add_builtin_version (\"D_SoftFloat\");\n+    }\n+}"}, {"sha": "bb2584b7b483ef978ed637744b2b6a96d52bb7c4", "filename": "gcc/config/rs6000/rs6000-protos.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fconfig%2Frs6000%2Frs6000-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fconfig%2Frs6000%2Frs6000-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-protos.h?ref=b4c522fabd0df7be08882d2207df8b2765026110", "patch": "@@ -224,6 +224,9 @@ extern void rs6000_target_modify_macros (bool, HOST_WIDE_INT, HOST_WIDE_INT);\n extern void (*rs6000_target_modify_macros_ptr) (bool, HOST_WIDE_INT,\n \t\t\t\t\t\tHOST_WIDE_INT);\n \n+/* Declare functions in rs6000-d.c  */\n+extern void rs6000_d_target_versions (void);\n+\n #if TARGET_MACHO\n char *output_call (rtx_insn *, rtx *, int, int);\n #endif"}, {"sha": "a9d038829b798ab5842a6fe0d59babc8e34b35b6", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=b4c522fabd0df7be08882d2207df8b2765026110", "patch": "@@ -28633,11 +28633,12 @@ rs6000_output_function_epilogue (FILE *file)\n \t use language_string.\n \t C is 0.  Fortran is 1.  Ada is 3.  C++ is 9.\n \t Java is 13.  Objective-C is 14.  Objective-C++ isn't assigned\n-\t a number, so for now use 9.  LTO, Go and JIT aren't assigned numbers\n-\t either, so for now use 0.  */\n+\t a number, so for now use 9.  LTO, Go, D, and JIT aren't assigned\n+\t numbers either, so for now use 0.  */\n       if (lang_GNU_C ()\n \t  || ! strcmp (language_string, \"GNU GIMPLE\")\n \t  || ! strcmp (language_string, \"GNU Go\")\n+\t  || ! strcmp (language_string, \"GNU D\")\n \t  || ! strcmp (language_string, \"libgccjit\"))\n \ti = 0;\n       else if (! strcmp (language_string, \"GNU F77\")"}, {"sha": "f59c0b6b68550640d9ef923f06f3a1c70f64f1e7", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=b4c522fabd0df7be08882d2207df8b2765026110", "patch": "@@ -613,6 +613,9 @@ extern unsigned char rs6000_recip_bits[];\n #define TARGET_CPU_CPP_BUILTINS() \\\n   rs6000_cpu_cpp_builtins (pfile)\n \n+/* Target CPU versions for D.  */\n+#define TARGET_D_CPU_VERSIONS rs6000_d_target_versions\n+\n /* This is used by rs6000_cpu_cpp_builtins to indicate the byte order\n    we're compiling for.  Some configurations may need to override it.  */\n #define RS6000_CPU_CPP_ENDIAN_BUILTINS()\t\\"}, {"sha": "d9249b079f2455e5c7e0bd2db07f35d0f347d4ed", "filename": "gcc/config/rs6000/t-rs6000", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fconfig%2Frs6000%2Ft-rs6000", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fconfig%2Frs6000%2Ft-rs6000", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Ft-rs6000?ref=b4c522fabd0df7be08882d2207df8b2765026110", "patch": "@@ -35,6 +35,10 @@ rs6000-p8swap.o: $(srcdir)/config/rs6000/rs6000-p8swap.c\n \t$(COMPILE) $<\n \t$(POSTCOMPILE)\n \n+rs6000-d.o: $(srcdir)/config/rs6000/rs6000-d.c\n+\t$(COMPILE) $<\n+\t$(POSTCOMPILE)\n+\n $(srcdir)/config/rs6000/rs6000-tables.opt: $(srcdir)/config/rs6000/genopt.sh \\\n   $(srcdir)/config/rs6000/rs6000-cpus.def\n \t$(SHELL) $(srcdir)/config/rs6000/genopt.sh $(srcdir)/config/rs6000 > \\"}, {"sha": "1ea0a9d33799b20fdd9e18f2b727703fe69606ef", "filename": "gcc/config/s390/s390-d.c", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fconfig%2Fs390%2Fs390-d.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fconfig%2Fs390%2Fs390-d.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390-d.c?ref=b4c522fabd0df7be08882d2207df8b2765026110", "patch": "@@ -0,0 +1,41 @@\n+/* Subroutines for the D front end on the IBM S/390 and zSeries architectures.\n+   Copyright (C) 2017-2018 Free Software Foundation, Inc.\n+\n+GCC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 3, or (at your option)\n+any later version.\n+\n+GCC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  */\n+\n+#include \"config.h\"\n+#include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"tm.h\"\n+#include \"d/d-target.h\"\n+#include \"d/d-target-def.h\"\n+\n+/* Implement TARGET_D_CPU_VERSIONS for S/390 and zSeries targets.  */\n+\n+void\n+s390_d_target_versions (void)\n+{\n+  if (TARGET_ZARCH)\n+    d_add_builtin_version (\"SystemZ\");\n+  else if (TARGET_64BIT)\n+    d_add_builtin_version (\"S390X\");\n+  else\n+    d_add_builtin_version (\"S390\");\n+\n+  if (TARGET_SOFT_FLOAT)\n+    d_add_builtin_version (\"D_SoftFloat\");\n+  else if (TARGET_HARD_FLOAT)\n+    d_add_builtin_version (\"D_HardFloat\");\n+}"}, {"sha": "96fa705f879325fc001044a59db4c7334f5d498b", "filename": "gcc/config/s390/s390-protos.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fconfig%2Fs390%2Fs390-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fconfig%2Fs390%2Fs390-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390-protos.h?ref=b4c522fabd0df7be08882d2207df8b2765026110", "patch": "@@ -166,6 +166,9 @@ extern void s390_register_target_pragmas (void);\n /* Routines for s390-c.c */\n extern bool s390_const_operand_ok (tree, int, int, tree);\n \n+/* s390-d.c routines */\n+extern void s390_d_target_versions (void);\n+\n /* Pass management.  */\n namespace gcc { class context; }\n class rtl_opt_pass;"}, {"sha": "3cfd3452d4848ee1d508851cf5b5bc75b934771b", "filename": "gcc/config/s390/s390.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fconfig%2Fs390%2Fs390.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fconfig%2Fs390%2Fs390.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.h?ref=b4c522fabd0df7be08882d2207df8b2765026110", "patch": "@@ -200,6 +200,9 @@ enum processor_flags\n /* Target CPU builtins.  */\n #define TARGET_CPU_CPP_BUILTINS() s390_cpu_cpp_builtins (pfile)\n \n+/* Target CPU versions for D.  */\n+#define TARGET_D_CPU_VERSIONS s390_d_target_versions\n+\n #ifdef DEFAULT_TARGET_64BIT\n #define TARGET_DEFAULT     (MASK_64BIT | MASK_ZARCH | MASK_HARD_DFP\t\\\n \t\t\t    | MASK_OPT_HTM | MASK_OPT_VX)"}, {"sha": "97e6bf7d9eb11606d2193f611e01da8bccf6c039", "filename": "gcc/config/s390/t-s390", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fconfig%2Fs390%2Ft-s390", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fconfig%2Fs390%2Ft-s390", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Ft-s390?ref=b4c522fabd0df7be08882d2207df8b2765026110", "patch": "@@ -26,3 +26,7 @@ s390-c.o: $(srcdir)/config/s390/s390-c.c \\\n   $(TARGET_H) $(TARGET_DEF_H) $(CPPLIB_H) $(C_PRAGMA_H)\n \t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n \t\t$(srcdir)/config/s390/s390-c.c\n+\n+s390-d.o: $(srcdir)/config/s390/s390-d.c\n+\t$(COMPILE) $<\n+\t$(POSTCOMPILE)"}, {"sha": "19fe5be6d73828ecc1ae10ce570c99f3f384990f", "filename": "gcc/config/sparc/sparc-d.c", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fconfig%2Fsparc%2Fsparc-d.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fconfig%2Fsparc%2Fsparc-d.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc-d.c?ref=b4c522fabd0df7be08882d2207df8b2765026110", "patch": "@@ -0,0 +1,48 @@\n+/* Subroutines for the D front end on the SPARC architecture.\n+   Copyright (C) 2017-2018 Free Software Foundation, Inc.\n+\n+GCC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 3, or (at your option)\n+any later version.\n+\n+GCC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  */\n+\n+#include \"config.h\"\n+#include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"tm.h\"\n+#include \"d/d-target.h\"\n+#include \"d/d-target-def.h\"\n+\n+/* Implement TARGET_D_CPU_VERSIONS for SPARC targets.  */\n+\n+void\n+sparc_d_target_versions (void)\n+{\n+  if (TARGET_64BIT)\n+    d_add_builtin_version (\"SPARC64\");\n+  else\n+    d_add_builtin_version (\"SPARC\");\n+\n+  if (TARGET_V8PLUS)\n+    d_add_builtin_version (\"SPARC_V8Plus\");\n+\n+  if (TARGET_FPU)\n+    {\n+      d_add_builtin_version (\"D_HardFloat\");\n+      d_add_builtin_version (\"SPARC_HardFloat\");\n+    }\n+  else\n+    {\n+      d_add_builtin_version (\"D_SoftFloat\");\n+      d_add_builtin_version (\"SPARC_SoftFloat\");\n+    }\n+}"}, {"sha": "59c9b2a90b597088c9be3cda84118053274b4510", "filename": "gcc/config/sparc/sparc-protos.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fconfig%2Fsparc%2Fsparc-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fconfig%2Fsparc%2Fsparc-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc-protos.h?ref=b4c522fabd0df7be08882d2207df8b2765026110", "patch": "@@ -111,4 +111,7 @@ unsigned int sparc_regmode_natural_size (machine_mode);\n \n extern rtl_opt_pass *make_pass_work_around_errata (gcc::context *);\n \n+/* Routines implemented in sparc-d.c  */\n+extern void sparc_d_target_versions (void);\n+\n #endif /* __SPARC_PROTOS_H__ */"}, {"sha": "8c15e2a958d169956d1849a4794951be048f5e16", "filename": "gcc/config/sparc/sparc.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fconfig%2Fsparc%2Fsparc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fconfig%2Fsparc%2Fsparc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.h?ref=b4c522fabd0df7be08882d2207df8b2765026110", "patch": "@@ -27,6 +27,9 @@ along with GCC; see the file COPYING3.  If not see\n \n #define TARGET_CPU_CPP_BUILTINS() sparc_target_macros ()\n \n+/* Target CPU versions for D.  */\n+#define TARGET_D_CPU_VERSIONS sparc_d_target_versions\n+\n /* Specify this in a cover file to provide bi-architecture (32/64) support.  */\n /* #define SPARC_BI_ARCH */\n "}, {"sha": "30f15c9005a90c7cb3b06201dd7dadca17be553d", "filename": "gcc/config/sparc/t-sparc", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fconfig%2Fsparc%2Ft-sparc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fconfig%2Fsparc%2Ft-sparc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Ft-sparc?ref=b4c522fabd0df7be08882d2207df8b2765026110", "patch": "@@ -23,3 +23,7 @@ PASSES_EXTRA += $(srcdir)/config/sparc/sparc-passes.def\n sparc-c.o: $(srcdir)/config/sparc/sparc-c.c\n \t$(COMPILE) $<\n \t$(POSTCOMPILE)\n+\n+sparc-d.o: $(srcdir)/config/sparc/sparc-d.c\n+\t$(COMPILE) $<\n+\t$(POSTCOMPILE)"}, {"sha": "29d70867e6301312f108df238d93fcd900fbe3ce", "filename": "gcc/config/t-glibc", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fconfig%2Ft-glibc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fconfig%2Ft-glibc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ft-glibc?ref=b4c522fabd0df7be08882d2207df8b2765026110", "patch": "@@ -19,3 +19,7 @@\n glibc-c.o: config/glibc-c.c\n \t$(COMPILE) $<\n \t$(POSTCOMPILE)\n+\n+glibc-d.o: config/glibc-d.c\n+\t$(COMPILE) $<\n+\t$(POSTCOMPILE)"}, {"sha": "03461f1e27538a3a0791c2b61b0e75c3ff1a25be", "filename": "gcc/configure", "status": "modified", "additions": 24, "deletions": 2, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=b4c522fabd0df7be08882d2207df8b2765026110", "patch": "@@ -612,13 +612,16 @@ ISLLIBS\n GMPINC\n GMPLIBS\n target_cpu_default\n+d_target_objs\n fortran_target_objs\n cxx_target_objs\n c_target_objs\n use_gcc_stdint\n xm_defines\n xm_include_list\n xm_file_list\n+tm_d_include_list\n+tm_d_file_list\n tm_p_include_list\n tm_p_file_list\n tm_defines\n@@ -11858,6 +11861,7 @@ fi\n \n tm_file=\"${tm_file} defaults.h\"\n tm_p_file=\"${tm_p_file} tm-preds.h\"\n+tm_d_file=\"${tm_d_file} defaults.h\"\n host_xm_file=\"auto-host.h ansidecl.h ${host_xm_file}\"\n build_xm_file=\"${build_auto} ansidecl.h ${build_xm_file}\"\n # We don't want ansidecl.h in target files, write code there in ISO/GNU C.\n@@ -12241,6 +12245,21 @@ for f in $tm_p_file; do\n   esac\n done\n \n+tm_d_file_list=\n+tm_d_include_list=\"options.h insn-constants.h\"\n+for f in $tm_d_file; do\n+  case $f in\n+    defaults.h )\n+       tm_d_file_list=\"${tm_d_file_list} \\$(srcdir)/$f\"\n+       tm_d_include_list=\"${tm_d_include_list} $f\"\n+       ;;\n+    * )\n+       tm_d_file_list=\"${tm_d_file_list} \\$(srcdir)/config/$f\"\n+       tm_d_include_list=\"${tm_d_include_list} config/$f\"\n+       ;;\n+  esac\n+done\n+\n xm_file_list=\n xm_include_list=\n for f in $xm_file; do\n@@ -18510,7 +18529,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 18513 \"configure\"\n+#line 18532 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -18616,7 +18635,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 18619 \"configure\"\n+#line 18638 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -29504,6 +29523,9 @@ fi\n \n \n \n+\n+\n+\n \n \n "}, {"sha": "1ac290e3c6e50f7da483ec95c4ae35faec765dab", "filename": "gcc/configure.ac", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=b4c522fabd0df7be08882d2207df8b2765026110", "patch": "@@ -1752,6 +1752,7 @@ AC_SUBST(build_subdir)\n \n tm_file=\"${tm_file} defaults.h\"\n tm_p_file=\"${tm_p_file} tm-preds.h\"\n+tm_d_file=\"${tm_d_file} defaults.h\"\n host_xm_file=\"auto-host.h ansidecl.h ${host_xm_file}\"\n build_xm_file=\"${build_auto} ansidecl.h ${build_xm_file}\"\n # We don't want ansidecl.h in target files, write code there in ISO/GNU C.\n@@ -1984,6 +1985,21 @@ for f in $tm_p_file; do\n   esac\n done\n \n+tm_d_file_list=\n+tm_d_include_list=\"options.h insn-constants.h\"\n+for f in $tm_d_file; do\n+  case $f in\n+    defaults.h )\n+       tm_d_file_list=\"${tm_d_file_list} \\$(srcdir)/$f\"\n+       tm_d_include_list=\"${tm_d_include_list} $f\"\n+       ;;\n+    * )\n+       tm_d_file_list=\"${tm_d_file_list} \\$(srcdir)/config/$f\"\n+       tm_d_include_list=\"${tm_d_include_list} config/$f\"\n+       ;;\n+  esac\n+done\n+\n xm_file_list=\n xm_include_list=\n for f in $xm_file; do\n@@ -6343,13 +6359,16 @@ AC_SUBST(tm_include_list)\n AC_SUBST(tm_defines)\n AC_SUBST(tm_p_file_list)\n AC_SUBST(tm_p_include_list)\n+AC_SUBST(tm_d_file_list)\n+AC_SUBST(tm_d_include_list)\n AC_SUBST(xm_file_list)\n AC_SUBST(xm_include_list)\n AC_SUBST(xm_defines)\n AC_SUBST(use_gcc_stdint)\n AC_SUBST(c_target_objs)\n AC_SUBST(cxx_target_objs)\n AC_SUBST(fortran_target_objs)\n+AC_SUBST(d_target_objs)\n AC_SUBST(target_cpu_default)\n \n AC_SUBST_FILE(language_hooks)"}, {"sha": "b90ba711e8d36110cc13d2c9313e7b119ec13b2a", "filename": "gcc/d/ChangeLog", "status": "added", "additions": 617, "deletions": 0, "changes": 617, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2FChangeLog?ref=b4c522fabd0df7be08882d2207df8b2765026110", "patch": "@@ -0,0 +1,617 @@\n+2018-10-26  Eugene Wissner  <belka@caraus.de>\n+\n+\t* Make-lang.in (selftest-d): New.\n+\t* d-diagnostic.cc (vwarning): Fix warning emitting.\n+\n+2018-10-22  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-spec.cc (lang_specific_driver): Always link against phobos if any\n+\tinput file is given.\n+\n+2018-10-21  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-lang.cc (d_get_alias_set): Always return zero.\n+\n+2018-10-21  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* intrinsics.cc (maybe_set_intrinsic): Don't set built-in flag on\n+\tunsupported pow() overloads.\n+\n+2018-10-20  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* expr.cc (ExprVisitor::binop_assignment): Call stabilize_reference on\n+\tLHS construct if it has side effects.\n+\n+2018-10-20  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* intrinsics.cc (clear_intrinsic_flag): Remove function.\n+\t(maybe_expand_intrinsic): Remove clear_intrinsic_flag call.\n+\n+2018-10-20  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* intrinsics.cc (expand_intrinsic_copysign): Use mathfn_built_in to\n+\tdetermine correct built-in to call.\n+\t(expand_intrinsic_pow): Likewise.\n+\n+2018-10-20  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* intrinsics.cc (expand_intrinsic_sqrt): Remove implicit int to double\n+\tconversion.\n+\t(expand_intrinsic_pow): Likewise.\n+\n+2018-10-20  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (get_frame_for_symbol): Use error_at.\n+\t(build_frame_type): Likewise.\n+\t(get_framedecl): Likewise.\n+\t* d-lang.cc (d_parse_file): Likewise.\n+\t* decl.cc (DeclVisitor::visit(StructDeclaration)): Likewise.\n+\t(DeclVisitor::finish_vtable): Likewise.\n+\t(DeclVisitor::visit(ClassDeclaration)): Likewise.\n+\t(DeclVisitor::visit(InterfaceDeclaration)): Likewise.\n+\t(DeclVisitor::visit(EnumDeclaration)): Likewise.\n+\t(DeclVisitor::visit(VarDeclaration)): Likewise.\n+\t* toir.cc (IRVisitor::check_goto): Likewise.\n+\t(IRVisitor::check_previous_goto): Likewise.\n+\t(IRVisitor::visit(ThrowStatement)): Likewise.\n+\n+2018-10-20  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (get_array_length): Use quoted format flag in message.\n+\t(d_build_call): Likewise.\n+\t* d-lang.cc (d_handle_option): Likewise.\n+\t* decl.cc (DeclVisitor::finish_vtable): Likewise.\n+\t* expr.cc (ExprVisitor::visit(ArrayLengthExp)): Likewise.\n+\t(ExprVisitor::visit(DeleteExp)): Likewise.\n+\t(ExprVisitor::visit(RemoveExp)): Likewise.\n+\t(ExprVisitor::visit(RemoveExp)): Likewise.\n+\t(ExprVisitor::visit(CallExp)): Likewise.\n+\t(ExprVisitor::visit(DotVarExp)): Likewise.\n+\t(ExprVisitor::visit(VarExp)): Likewise.\n+\t(ExprVisitor::visit(ScopeExp)): Likewise.\n+\t(ExprVisitor::visit(TypeExp)): Likewise.\n+\t(build_expr): Likewise.\n+\n+2018-10-20  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-diagnostic.cc (d_diagnostic_report_diagnostic): Skip translation\n+\tby instead calling diagnostic_set_info_translated.\n+\n+2018-10-20  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-tree.h (bool_type_node): Rename to d_bool_type.\n+\t(byte_type_node): Rename to d_byte_type.\n+\t(ubyte_type_node): Rename to d_ubyte_type.\n+\t(short_type_node): Rename to d_short_type.\n+\t(ushort_type_node): Rename to d_ushort_type.\n+\t(int_type_node): Rename to d_int_type.\n+\t(uint_type_node): Rename to d_uint_type.\n+\t(long_type_node): Rename to d_long_type.\n+\t(ulong_type_node): Rename to d_ulong_type.\n+\t(cent_type_node): Rename to d_cent_type.\n+\t(ucent_type_node): Rename to d_ucent_type.\n+\n+2018-10-20  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* expr.cc (ExprVisitor::visit(PowExp)): Remove function.\n+\n+2018-10-19  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-attribs.c: Rename to d-attribs.cc.\n+\t* d-spec.c: Rename to d-spec.cc.\n+\n+2018-10-19  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-lang.cc (d_gimplify_expr): Don't handle TREE_THIS_VOLATILE.\n+\n+2018-10-19  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-diagnostic.cc (vwarning): Update to use Diagnostic enum.\n+\t(vdeprecation): Likewise.\n+\t(vdeprecationSupplemental): Likewise.\n+\t* d-lang.cc (d_init_options): Explicitly set warnings and deprecations\n+\tas DIAGNOSTICoff.\n+\t(d_handle_option): Update to use Diagnostic enum.\n+\t(d_post_options): Likewise.\n+\n+2018-10-18  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-diagnostic.cc (expand_format): Rename to expand_d_format.\n+\tUpdated all callers.\n+\n+2018-10-17  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (get_linemap): Rename function to make_location_t.\n+\tUpdated all callers.\n+\t* d-tree.h (get_linemap): Rename declaration to make_location_t.\n+\n+2018-10-17  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* expr.cc (ExprVisitor::binary_op): Use POINTER_DIFF_EXPR.\n+\n+2018-10-17  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* intrinsics.cc (expand_intrinsic_bsf): Assert that built-in function\n+\tcode is not END_BUILTINS.\n+\t(expand_intrinsic_bsr): Likewise.\n+\t(expand_intrinsic_bswap): Likewise.\n+\t(expand_intrinsic_popcnt): Likewise.\n+\n+2018-10-17  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* config-lang.in (gtfiles): Add modules.cc.\n+\t* modules.cc: Include gt-d-modules.h.\n+\t(module_info): Mark with GTY.\n+\t(static_ctor_list): Likewise.\n+\t(static_dtor_list): Likewise.\n+\n+2018-10-17  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-spec.c (lang_specific_driver): Use strrchr and strcmp to check\n+\tinput file suffix.\n+\n+2018-10-17  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-spec.c (phobos_action): New enum.\n+\t(library): Rename to phobos_library.\n+\t(lang_specific_driver): Update to use phobos_library.\n+\t(lang_specific_pre_link): Likewise.\n+\n+2018-10-16  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-frontend.cc (Port::writelongLE): Remove function.\n+\t(Port::writelongBE): Remove function.\n+\n+2018-10-16  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-convert.cc (convert): Remove goto maybe_fold.\n+\n+2018-10-16  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (warn_for_null_address): New function.\n+\t(build_boolop): Warn about comparing address of decl to null.\n+\t* d-convert.cc (decl_with_nonnull_addr_p): New function.\n+\t(d_truthvalue_conversion): Warn about evaluating address as boolean.\n+\t* d-tree.h (decl_with_nonnull_addr_p): Add declaration.\n+\t* lang.opt (Waddress): New option.\n+\n+2018-10-16  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (d_array_length): Assert that argument type is a\n+\tdynamic array.\n+\t(d_array_ptr): Likewise.\n+\t(d_array_value): Likewise.\n+\t(delegate_method): Assert that argument type is a delegate.\n+\t(delegate_object): Likewise.\n+\n+2018-10-16  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-attribs.c (handle_malloc_attribute): Use gcc_assert instead of\n+\tgcc_unreachable.\n+\t(handle_pure_attribute): Likewise.\n+\t(handle_nothrow_attribute): Likewise.\n+\n+2018-10-16  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* Make-lang.in: Rename compiler proper to d21.\n+\t* config-lang.in (compilers): Rename compiler to d21.\n+\t* d-spec.c (lang_specific_driver): Update comments.\n+\t* lang-specs.h: Rename compiler to d21.\n+\n+2018-10-16  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* lang.opt: Add missing periods to the ends of sentences.\n+\n+2018-10-16  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-lang.cc (d_handle_option): Remove handling of -fdeps.\n+\t(d_parse_file): Don't generate module dependencies.\n+\t* lang.opt (fdeps, fdeps=): Remove options.\n+\t(fintfc, fintfc-dir=, fintfc-file=): Remove options.\n+\t(ftransition=safe): Remove option.\n+\n+2018-10-16  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-lang.cc (d_init_ts): Remove handling of IASM_EXPR.\n+\t(d_gimplify_expr): Likewise.\n+\t* d-tree.def (IASM_EXPR): Remove tree code.\n+\n+2018-10-15  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-attrib.c (attr_noreturn_exclusions): Attribute not mutually\n+\texclusive with self.\n+\t* typeinfo.cc (TypeInfoVisitor::layout_interfaces): Assert that\n+\tbase class vtable is found in interface.\n+\n+2018-10-08  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* decl.cc (DeclVisitor): Add using Visitor::visit.\n+\t* expr.cc (ExprVisitor): Likewise.\n+\t* imports.cc (ImportVisitor): Likewise.\n+\t* toir.cc (IRVisitor): Likewise.\n+\t* typeinfo.cc (TypeInfoVisitor): Likewise.\n+\t(TypeInfoDeclVisitor): Likewise.\n+\t(SpeculativeTypeVisitor): Likewise.\n+\t* types.cc (TypeVisitor): Likewise.\n+\n+2018-10-01  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-frontend.cc: Include compiler.h, errors.h, expression.h.\n+\t(genCmain): Rename function to Compiler::genCmain.\n+\t(Compiler::paintAsType): New function.\n+\t(Compiler::loadModule): New function.\n+\t(getTypeInfoType): Call error function directly.\n+\t* d-lang.cc (deps_write): Use hash_set for dependency tracking.\n+\t(d_parse_file): Call Compiler::loadModule.\n+\t* d-target.cc: Remove include identifier.h, module.h.\n+\t(Target::paintAsType): Remove function.\n+\t(Target::loadModule): Remove function.\n+\t(Target::getTargetInfo): New function.\n+\n+2018-10-01  Eugene Wissner  <belka@caraus.de>\n+\n+\t* decl.cc (finish_thunk): Adjust call to cgraph_node::create_thunk.\n+\n+2018-09-25  Eugene Wissner  <belka@caraus.de>\n+\n+\t* d-codegen.cc (d_assert_call): Don't make STRING_CSTs larger than they\n+\tare.\n+\t* expr.cc (ExprVisitor::visit(StringExp)): Likewise.\n+\t* typeinfo.cc (TypeInfoVisitor::layout_string): Likewise.\n+\n+2018-09-24  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-builtins.cc: Include expression.h, identifier.h.\n+\t* d-codegen.cc: Include identifier.h.\n+\t* d-convert.cc: Include declaration.h.\n+\t* d-frontend.cc: Include identifier.h.\n+\t* d-lang.cc: Include declaration.h, expression.h, identifier.h.\n+\t(d_parse_file): Call moduleToBuffer to get string dump of contents.\n+\t* d-target.cc: Include declaration.h, expression.h, identifier.h.\n+\t* expr.cc: Include identifier.h.\n+\t* imports.cc: Include identifier.h.\n+\t* intrinsics.cc: Include identifier.h.\n+\t* modules.cc: Include identifier.h.\n+\t* toir.cc: Include expression.h, identifier.h.\n+\t* typeinfo.cc: Include expression.h, identifier.h.\n+\t* types.cc: Include expression.h, identifier.h.\n+\n+2018-09-17  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* Make-lang.in (D_INCLUDES): Rename dfrontend to dmd.\n+\t(d/%.o): Likewise.\n+\t(d/%.dmdgen.o): Likewise.\n+\t* verstr.h: Update to 2.076.1\n+\n+2018-09-10  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* intrinsics.cc (maybe_expand_intrinsic): Handle INTRINSIC_EXP.\n+\t* intrinsics.def (EXP): Add CTFE intrinsic.\n+\n+2018-09-07  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-lang.cc: Include errors.h, mars.h.\n+\t* decl.cc: Include errors.h.\n+\t* typeinfo.cc: Include globals.h, errors.h.\n+\n+2018-09-05  Eugene Wissner  <belka@caraus.de>\n+\n+\t* d-frontend.cc (eval_builtin): Replace DECL_BUILT_IN with\n+\tfndecl_built_in_p.\n+\n+2018-08-29  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-target.cc (Target::prefixName): Remove function.\n+\t(Target::cppParameterType): New function.\n+\n+2018-08-25  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* Make-lang.in (D_FRONTEND_OBJS): Add iasm.o, iasmgcc.o\n+\t* lang.opt (fproperty): Remove option.\n+\t* d-lang.cc (d_handle_option): Remove case for OPT_fproperty.\n+\t* toir.cc (IRVisitor::visit(ExtAsmStatement)): Rename override to\n+\tGccAsmStatement.\n+\n+2018-07-23  Eugene Wissner  <belka@caraus.de>\n+\n+\t* d-lang.cc (d_handle_option): Change function argument to HOST_WIDE_INT.\n+\t* lang.opt (Walloca-larger-than=, Wno-alloca-larger-than): New options.\n+\t* opt.texi (Walloca-larger-than=, Wno-alloca-larger-than): Likewise.\n+\n+2018-07-21  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* decl.cc (get_symbol_decl): Set all generated static symbols as\n+\tDECL_EXTERNAL. Move logic for determining TREE_STATIC ...\n+\t(start_function): ... here.\n+\t(d_finish_decl): Update TLS model after finishing variable linkage.\n+\n+2018-07-14  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* Make-lang.in (d.tags): Rename dfrontend to dmd.\n+\t* d-attribs.c: Rename dfrontend includes to dmd.\n+\t* d-builtins.cc: Likewise.\n+\t* d-codegen.cc: Likewise.\n+\t* d-convert.cc: Likewise.\n+\t* d-diagnostic.cc: Likewise.\n+\t* d-frontend.cc: Likewise.\n+\t* d-incpath.cc: Likewise.\n+\t* d-lang.cc: Likewise.\n+\t* d-longdouble.cc: Likewise.\n+\t* d-target.cc: Likewise.\n+\t* decl.cc: Likewise.\n+\t* expr.cc: Likewise.\n+\t* imports.cc: Likewise.\n+\t* intrinsics.cc: Likewise.\n+\t* modules.cc: Likewise.\n+\t* runtime.cc: Likewise.\n+\t* toir.cc: Likewise.\n+\t* typeinfo.cc: Likewise.\n+\t* types.cc: Likewise.\n+\n+2018-07-14  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* types.cc (same_type_p): Check type codes match before checking\n+\tequivalence.\n+\n+2018-07-09  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* Makefile.in (d/verstr.h): Remove recipe.\n+\t(d.mostlyclean): Remove cleanup of verstr.h.\n+\t* verstr.h: New file.\n+\n+2018-07-06  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (lower_struct_comparison): Evaluate side effects of\n+\tempty struct.\n+\t(build_struct_comparison): Likewise.\n+\n+2018-07-06  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* typeinfo.cc (TypeInfoVisitor::layout_interfaces): Only generate an\n+\tinterface vtable for classes.\n+\t(TypeInfoVisitor::visit(TypeInfoClassDeclaration)): Likewise.\n+\n+2018-07-05  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-lang.cc (deps_write): Ignore __main module.\n+\t(d_handle_option): Handle -fmain option.\n+\t(d_parse_file): Generate D main function if requested.\n+\t* lang.opt (fmain): New option.\n+\n+2018-07-04  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-builtins.cc (d_build_builtins_module): Export __builtin_clonglong\n+\tand __builtin_culonglong to gcc builtins module.\n+\n+2018-07-04  Eugene Wissner  <belka@caraus.de>\n+\n+\t* d-spec.c: Include opt-suggestions.h containing option_proposer used by\n+\tgcc.h.\n+\n+2018-07-01  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* decl.cc (get_symbol_decl): Implicitly convert return type of 'void'\n+\tmain to 'int' for both C and D entry functions.\n+\t* toir.cc (IRVisitor::visit(ReturnStatement)): Likewise.\n+\n+2018-06-30  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* expr.cc (ExprVisitor::visit(FuncExp)): Don't error about nested\n+\tdelegate literals.\n+\n+2018-06-29  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-frontend.cc (eval_builtin): Allow both gcc and frontend builtins.\n+\t* intrinsics.cc (call_builtin_fn): Use convert.\n+\t(expand_intrinsic_sqrt): Use fold_convert.\n+\t(expand_intrinsic_copysign): New function.\n+\t(expand_intrinsic_pow): New function.\n+\t(maybe_expand_intrinsic): Handle many math intrinsics.\n+\t* intrinsics.def (EXPM1, EXP2, LOG, LOG2, LOG10, ROUND, FLOORF),\n+\t(FLOOR, FLOORL, CEILF, CEIL, CEILL, TRUNC, FMIN, FMAX, COPYSIGN),\n+\t(POW, FMA): Add math intrinsics.\n+\n+2018-06-27  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (find_aggregate_field): Move to decl.cc\n+\t(build_class_instance): Move to decl.cc, make static.\n+\t* d-tree.h (build_class_instance): Remove declaration.\n+\t* decl.cc (DeclVisitor::finish_vtable): New function.\n+\n+2018-06-26  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* types.cc (TypeVisitor::visit(TypeClass)): Handle get_symbol_decl\n+\treturning an error_mark_node.\n+\n+2018-06-22  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* decl.cc (DeclVisitor::visit(FuncDeclaration)): Move function\n+\tunnesting to...\n+\t(get_symbol_decl): ... here.\n+\n+2018-06-22  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-lang.cc (d_post_options): Set global showColumns parameter.\n+\n+2018-06-22  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-diagnostic.cc (expand_format): Handle whitespace format specifier.\n+\t(d_diagnostic_report_diagnostic): Change signature, updated all\n+\tcallers.  Handle writing messages verbatim.\n+\t(vmessage): New function.\n+\t* d-lang.cc (d_parse_file): Use message to emit verbose diagnostics.\n+\t* decl.cc (DeclVisitor::visit(FuncDeclaration)): Likewise.\n+\t(get_symbol_decl): Likewise.\n+\n+2018-06-22  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-builtins.cc (build_frontend_type): Use Type::merge2 to merge\n+\tgenerated front-end types.\n+\t* d-codegen.cc (declaration_type): Likewise.\n+\t(type_passed_as): Likewise.\n+\t* d-convert.cc (convert_expr): Use ClassDeclaration::isCPPclass.\n+\t* d-lang.cc (d_build_eh_runtime_type): Likewise.\n+\t* toir.cc (IRVisitor::visit): Use ClassDecalration::isCPPclass.\n+\t* typeinfo.cc (TypeInfoVisitor::visit): Use Type::merge2 to merge\n+\tgenerated front-end types.\n+\t* types.cc (layout_aggregate_type): Use ClassDeclaration::isCPPclass.\n+\n+2018-05-28  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* expr.cc (ExprVisitor::visit(StringExp)): Copy string literal from\n+\tthe frontend to a null terminated string.\n+\n+2018-05-21  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* expr.cc (ExprVisitor::binary_op): Don't do complex conversions if\n+\talready handling excess precision.\n+\n+2018-04-02  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-lang.cc (doing_semantic_analysis_p): New variable.\n+\t(d_parse_file): Set when in semantic pass.\n+\t* d-tree.h (doing_semantic_analysis_p): Add declaration.\n+\t* intrinsics.cc (maybe_expand_intrinsic): Test for\n+\tdoing_semantic_analysis_p.\n+\n+2018-03-18  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (stabilize_expr): Move modify expression rewrite...\n+\t* expr.cc (ExprVisitor::binop_assignment): ... here.\n+\n+2018-03-11  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* expr.cc (ExprVisitor::visit(StringExp)): Include null terminator\n+\tin length when calling build_String.  Generate static array string\n+\tliterals as array constructors.\n+\n+2018-03-04  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-lang.cc (d_handle_option): Rename OPT_fintfc cases to OPT_H.\n+\t* gdc.texi (Code Generation): Rename -fintfc options to -H.\n+\t* lang-specs.h: Add H, Hd, and Hf options.\n+\t* lang.opt (H, Hd, Hf): New options.\n+\t(fintfc, fintfc-dir=, fintfc-file=): Deprecate and alias new options.\n+\n+2018-03-04  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* lang.opt (fdeps, fdeps=): Deprecate options.\n+\t* gdc.texi (Code Generation): Remove deprecated fdeps options.\n+\n+2018-02-25  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* Make-lang.in (D_FRONTEND_OBJS): Remove inline.o and inlinecost.o.\n+\n+2018-02-24  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-frontend.cc (CTFloat::fabs): Assign result to real_t directly.\n+\t(CTFloat::ldexp): Likewise.\n+\t* d-longdouble.cc (longdouble::from_int): Remove function.\n+\t(longdouble::from_uint): Likewise.\n+\t(longdouble::to_int): Update Signature.\n+\t(longdouble::to_uint): Likewise.\n+\t(longdouble::operator): Likewise.\n+\t(longdouble::add): New function, move operator overload headers.\n+\t(longdouble::sub, longdouble::mul, longdouble::div): Likewise.\n+\t(longdouble::mod, longdouble::neg): Likewise.\n+\t(longdouble::cmp, longdouble::equals): Likewise.\n+\t* d-target.cc (Target::_init): Construct assignment into real_t\n+\tdirectly.\n+\n+2018-02-19  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* Make-lang.in (DMD_WARN_CXXFLAGS): Only filter out\n+\t-Wmissing-format-attribute from WARN_CXXFLAGS.\n+\n+2018-02-18  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-builtins.cc (build_frontend_type): Set alignment of structs in\n+\tfrontend.\n+\n+2018-02-17  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-incpath.cc (add_environment_paths): Remove function.\n+\t* gdc.texi (Environment Variables): Remove section.\n+\n+2018-02-10  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* expr.cc (ExprVisitor::AssertExp): Use builtin expect to mark assert\n+\tcondition as being likely true.\n+\n+2018-02-11  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* lang.opt (fd-vgc, fd-verbose, fd-vtls): Remove options.\n+\t(femit-moduleinfo, femit-templates): Likewise.\n+\t(fmake-deps, fmake-mdeps): Likewise.\n+\t(fin, fout, fXf): Likewise.\n+\n+2018-01-28  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* gdc.texi (Runtime Options): Remove deprecated -fproperty option.\n+\n+2018-01-27  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-lang.cc (d_gimplify_expr): Gimplify all CALL_EXPR_ARGS_ORDERED\n+\tcall arguments, not just non-constant.\n+\n+2018-01-27  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* decl.cc (DeclVisitor::visit(VarDeclaration)): Don't reuse existing\n+\ttemporary for TARGET_EXPR.\n+\t(declare_local_var): Push all variables to current binding level.\n+\n+2018-01-27  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* toir.cc (build_function_body): Set input_location.\n+\n+2018-01-23  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (build_frame_type): Don't add chain field for\n+\tfunctions without context pointer.\n+\t(build_closure): Don't set chain field for functions without context\n+\tpointer.\n+\n+2018-01-21  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* decl.cc (DeclVisitor::visit(StructDeclaration)): Mark compiler\n+\tgenerated symbols as DECL_ONE_ONLY instead of DECL_COMDAT.\n+\t(DeclVisitor::visit(ClassDeclaration)): Likewise.\n+\t(DeclVisitor::visit(InterfaceDeclaration)): Likewise.\n+\t(DeclVisitor::visit(EnumDeclaration)): Likewise.\n+\t(get_symbol_decl): Mark template instantiations as DECL_ONE_ONLY\n+\tinstead of DECL_COMDAT.  Don't call mark_needed.\n+\t(declare_extern_var): Don't call mark_needed.\n+\t(d_finish_decl): Remove zero initializer for common symbols.\n+\t(finish_thunk): Don't call d_comdat_linkage on generic thunk.\n+\t(d_comdat_linkage): Don't set DECL_DECLARED_INLINE on functions.\n+\t* typeinfo.cc (TypeInfoDeclVisitor::visit(TypeInfoDeclaration)): Mark\n+\tbuilt-in typeinfo symbols as DECL_ONE_ONLY instead of DECL_COMDAT.\n+\n+2018-01-21  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-lang.cc (d_init): Disable flag_weak if not supported.\n+\t* decl.cc (d_comdat_linkage): Use flag_weak to guard setting\n+\tDECL_ONE_ONLY on decls.\n+\t(d_linkonce_linkage): New function.\n+\t* gdc.texi (Runtime Options): Document -fweak.\n+\t* lang.opt (fweak): Declare.\n+\n+2018-01-21  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* decls.cc (get_symbol_decl): Use attribute to mark naked functions.\n+\n+2018-01-08  Eugene Wissner  <belka@caraus.de>\n+\n+\t* d-builtins.cc (d_eval_constant_expression): Handle polynomial\n+\tVECTOR_CST_NELTS.\n+\t(build_frontend_type): Handle polynomial TYPE_VECTOR_SUBPARTS.\n+\n+2018-01-08  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\tUpdate copyright years.\n+\f\n+Copyright (C) 2018 Free Software Foundation, Inc.\n+\n+Copying and distribution of this file, with or without modification,\n+are permitted in any medium without royalty provided the copyright\n+notice and this notice are preserved."}, {"sha": "4160b0ffe97710f2063a428c849e5de4f8a329e7", "filename": "gcc/d/ChangeLog-2006", "status": "added", "additions": 954, "deletions": 0, "changes": 954, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2FChangeLog-2006", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2FChangeLog-2006", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2FChangeLog-2006?ref=b4c522fabd0df7be08882d2207df8b2765026110", "patch": "@@ -0,0 +1,954 @@\n+2006-12-27  DF  <dvdfrdmn@users.sf.net>\n+\n+\t* phobos/internal/fpmath.d: Support x86_64\n+\n+\t* phobos/configure.in: x86_64 can use fpmath.d\n+\t* phobos/configure: update\n+\n+\t* target-ver-syms.sh: Add some CPU architectures\n+\n+2006-12-26  DF  <dvdfrdmn@users.sf.net>\n+\n+\t* phobos/configure.in: actually use value of\n+\t--enable-phobos-config-dir\n+\n+2006-12-26  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\tRest of 0.178 changes:\n+\n+\t* phobos/std/bitarray.d: revert previous changes\n+\n+\t* d-decls.cc (toSymbolX): update\n+\n+\t* d-glue.cc (TypeFunction::retStyle): implement\n+\n+\t* phobos/std/format.d: update for Mangle.Tenum\n+\n+\t-------------\n+\n+\tInitial merge of 0.178:\n+\n+\t* dmd/class.c, dmd/declaration.c, dmd/declaration.h, dmd/doc.c,\n+\tdmd/expression.c, dmd/expression.h, dmd/func.c, dmd/init.c,\n+\tdmd/lexer.c, dmd/mangle.c, dmd/mars.c, dmd/mars.h, dmd/mtype.c,\n+\tdmd/optimize.c, dmd/parse.c, dmd/statement.c, dmd/statement.h,\n+\tdmd/template.c, dmd/tocsym.c, dmd/toobj.c: Merge 0.178\n+\n+\t* phobos/internal/gc/win32.d, phobos/internal/object.d,\n+\tphobos/std/c/linux/linux.d, phobos/std/date.d,\n+\tphobos/std/dateparse.d, phobos/std/format.d, phobos/std/gc.d,\n+\tphobos/std/regexp.d, phobos/std/socket.d, phobos/std.ddoc: Merge\n+\t0.178\n+\n+\t---------------\n+\n+\t* dmd/constfold.c (CastExp::constFold): Fix Bugzilla 738.\n+\n+\t* dmd/todt.c (StructDeclaration::toDt): Fix Bugzilla 736.\n+\n+\t* d-decls.cc (VarDeclaration::toSymbol): Fix Bugzilla 737.\n+\n+\t* d-glue.cc (make_assign_math_op): Fix Bugzilla 739.\n+\n+\t* d-codegen.cc, d-decls.cc, d-glue.cc, symbol.cc, symbol.h:\n+\tUse toParent2.  Handle nested template instance functions.\n+\t(Bugzilla 742, 743)\n+\n+2006-12-25  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\t* dmd/mtype.c: Don't use '@' in mangled names\n+\n+\t* d-glue.cc (TypeFunction::toCtype): Handle recursive type\n+\treference (Bugzilla 745)\n+\n+\t* d-codegen.cc, d-codegen.h, d-glue.cc, d-objfile.cc, d-objfile.h,\n+\tdmd/aggregate.h, dmd/attrib.c, dmd/class.c, dmd/declaration.c,\n+\tdmd/declaration.h, dmd/enum.c, dmd/enum.h, dmd/func.c,\n+\tdmd/idgen.c, dmd/scope.c, dmd/scope.h, dmd/struct.c: Implement\n+\tGCC attributes.\n+\n+\t* dmd/mtype.c (TypeDelegate::dotExp): Fix regression caused by\n+\tlast fix.\n+\n+2006-12-24  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\t* dmd/parse.h, dmd/parse.c(parseStatement, parseExtAsm),\n+\tdmd/statement.h, asmstmt.cc: Implement GCC extended assembler.\n+\n+2006-12-20  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\t* dmd/mars.h: format issues are due to newlib, not Cygwin\n+\n+\t* setup-gcc.sh: Fix sed patterns and options.\n+\n+\t* dmd/mtype.c (TypeDelegate::dotExp): Handle .ptr so that\n+\tit can be an lvalue. (Bugzilla 696)\n+\n+\t* d-irstate.cc (getLoopForLabel): Handle labels pointing to\n+\tScopeStatements. (Bugzilla 695)\n+\n+2006-12-16  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\tRelease GDC 0.20\n+\n+\t* setup-gcc.sh: account for modified version strings\n+\n+\t* dmd/mtype.c (TypeTuple::toDecoBuffer): workaround newlib bug\n+\n+\t* dmd/mars.h: fix printf formats for Cygwin\n+\n+\t* d-builtins.c (d_init_builtins): Handle va_list type when it is\n+\tan array.\n+\n+\t* gcc-mars.cc, gdc-version: update\n+\n+\t* d-decls.cc: warnings cleanup\n+\n+\t* dmd/expression.c (realToMangleBuffer): filter out 'x'\n+\n+2006-12-13  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\t* package/simple.sh: use MAKE environment variable\n+\n+2006-12-11  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\t* patch-build_gcc-4.0: don't disable Objective C\n+\n+2006-12-09  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\t* phobos/std/bitarray.d (unittest): workaround 0.177 breakage\n+\n+\t* phobos/std/format.d,\n+\t* phobos/std/string.d,\n+\t* phobos/std/loader.d: update\n+\n+\t* phobos/std/file.d: fix merge. update.\n+\n+\t* dmd/root.[ch] (writestring): make arg const\n+\n+\t* dmd/expression.c (toMangleBuffer): update\n+\n+\tInitial 0.177 merges\n+\n+\t* dmd/constfold.c, dmd/declaration.c, dmd/expression.[ch],\n+\tdmd/func.c, dmd/idgen.c, dmd/manlge.c, dmd/mars.c, dmd/mtype.[ch],\n+\tdmd/opover.c, dmd/tocsym.c, dmd/toobj.c, dmd/typinf.c: Merge 0.177\n+\n+\t* etc/c/zlib.d, phobos/internal/aaA.d, phobos/internal/adi.d,\n+\tphobos/internal/arraycat.d, phobos/internal/gc/gc.d,\n+\tphobos/internal/gc/testgc.d, phobos/internal/object.d,\n+\tphobos/internal/qsort.d, phobos/internal/switch.d,\n+\tphobos/internal/trace.d, phobos/object.d, phobos/std/array.d,\n+\tphobos/std/boxer.d, phobos/std/conv.d, phobos/std/cover.d,\n+\tphobos/std/cpuid.d, phobos/std/date.d, phobos/std/file.d,\n+\tphobos/std/format.d, phobos/std/loader.d, phobos/std/math2.d,\n+\tphobos/std/md5.d, phobos/std/mmfile.d, phobos/std/outbuffer.d,\n+\tphobos/std/path.d, phobos/std/regexp.d, phobos/std/socket.d,\n+\tphobos/std/stream.d, phobos/std/string.d, phobos/std/switcherr.d,\n+\tphobos/std/syserror.d, phobos/std/typeinfo/ti_Acdouble.d,\n+\tphobos/std/typeinfo/ti_Acfloat.d, phobos/std/typeinfo/ti_Acreal.d,\n+\tphobos/std/typeinfo/ti_Adchar.d, phobos/std/typeinfo/ti_Adouble.d,\n+\tphobos/std/typeinfo/ti_Afloat.d, phobos/std/typeinfo/ti_Ag.d,\n+\tphobos/std/typeinfo/ti_Aint.d, phobos/std/typeinfo/ti_Along.d,\n+\tphobos/std/typeinfo/ti_Areal.d, phobos/std/typeinfo/ti_Ashort.d,\n+\tphobos/std/typeinfo/ti_Aubyte.d, phobos/std/typeinfo/ti_Auint.d,\n+\tphobos/std/typeinfo/ti_Aulong.d, phobos/std/typeinfo/ti_Aushort.d,\n+\tphobos/std/typeinfo/ti_Awchar.d, phobos/std/uri.d,\n+\tphobos/std/utf.d, phobos/std/windows/charset.d,\n+\tphobos/std/windows/registry.d, phobos/std/zlib.d: Merge 0.177\n+\n+\t--------------\n+\n+\t* patch-apple-gcc-4.0.x, patch-build_gcc-4.0: Support\n+\tbuilding the Apple way on PowerPC machines.\n+\n+2006-12-06  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\t* d-codegen.cc (call): Fix for calling delegate literal.\n+\n+\t* setup-gcc.sh: fail if patching build_gcc fails\n+\n+\t* d-glue.cc (NewExp::toElem): expand stack vars\n+\tfor GCC 3.x\n+\n+\t* phobos/std/cpuid.d: fix for cpuid kludge\n+\n+2006-12-05  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\t* dmd/mars.h: Handle msvcrt C99 printf incompatibility.\n+\n+\t* dmd/template.c, dmd/declaration.c, dmd/expression.c, dmd/func.c,\n+\tdmd/init.c, dmd/lexer.c, dmd/mangle.c, dmd/mtype.c,\n+\tdmd/optimize.c, dmd/root.c: ditto\n+\n+\t* phobos/config/unix-mid: fix compile error\n+\n+2006-12-04  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\tMore 0.176 merges\n+\n+\t* phobos/config/unix-mid: add reentrant funcs\n+\n+\t* d-glue.cc (DeleteExp::toElem): handle on-stack vars\n+\n+\t* d-glue.cc (FuncDeclaration::toObjFile): emit _arguments\n+\n+\t* dmd/declaration.h, dmd/func.c: save _arguments local var for\n+\tbackend\n+\n+2006-12-03  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\t* d-glue.cc: New _arguments ABI.\n+\n+\t* gcc-mars.cc: Update for verror.\n+\n+\t* d-decls.cc, d-objfile.cc,\n+\t* d-glue.cc (Module::genobjfile, d_gcc_aggregate_dtors): Update\n+\tfor new toSymbolX.\n+\n+\t* d-glue.cc (TypeAArray::toCtype): Implement new AA ABI.\n+\n+\t* d-codegen.cc (convertTo): Don't allow conversion of dynamic\n+\tarray to associated array and vice versa.\n+\n+\t* d-codegen.cc (getLibCallDecl, rawArray, convertForCondition),\n+\td-glue.cc (NullExp::toElem): change AA type\n+\n+\t* gcc-mars.cc : printf corrections\n+\n+\t* phobos/Makefile.in (MAIN_OBJS): add bind.o\n+\n+\tInitial merge of DMD 0.176\n+\n+\t* attrib.c, dmd/cast.c, dmd/class.c, dmd/cond.c, dmd/constfold.c,\n+\tdmd/declaration.c, dmd/doc.c, dmd/dsymbol.h, dmd/dump.c,\n+\tdmd/expression.c, dmd/expression.h, dmd/func.c, dmd/idgen.c,\n+\tdmd/init.c, dmd/init.h, dmd/lexer.c, dmd/link.c, dmd/mangle.c,\n+\tdmd/mars.c, dmd/mars.h, dmd/module.c, dmd/mtype.c, dmd/optimize.c,\n+\tdmd/parse.c, dmd/root.c, dmd/statement.c, dmd/template.c,\n+\tdmd/tocsym.c, dmd/todt.c, dmd/toobj.c: Merge 0.176\n+\n+\t* internal/aaA.d, phobos/internal/cmath2.d, phobos/internal/deh.c,\n+\tphobos/internal/object.d, phobos/linux.mak,\n+\tphobos/std/c/linux/linux.d, phobos/std/c/linux/socket.d,\n+\tphobos/std/compiler.d, phobos/std/math.d, phobos/std/socket.d,\n+\tphobos/std/string.d, phobos/std/traits.d,\n+\tphobos/std/typeinfo/ti_Aubyte.d, phobos/std/typeinfo/ti_ubyte.d,\n+\tphobos/std.ddoc, phobos/win32.mak: Merge 0.176\n+\n+\t* phobos/std/bind.d: New file in 0.176\n+\n+\t* dmd/toir.[ch]: New files (from DMD 0.175)\n+\n+\t* phobos/phobos.d: New file (from DMD 0.160)\n+\n+\t--------------\n+\n+\t* phobos/std/boxer.d (unbox(T : void*).unbox): fix\n+\n+\t* d-glue.cc (NewExp::toElem): Support allocation on stack\n+\n+\tInitial merge of DMD 0.175\n+\n+\t* cast.c, dmd/class.c, dmd/dchar.c, dmd/dchar.h,\n+\tdmd/declaration.c, dmd/declaration.h, dmd/delegatize.c,\n+\tdmd/dsymbol.c, dmd/dump.c, dmd/enum.c, dmd/expression.c,\n+\tdmd/expression.h, dmd/func.c, dmd/identifier.c, dmd/identifier.h,\n+\tdmd/inifile.c, dmd/init.c, dmd/lexer.c, dmd/lstring.h,\n+\tdmd/mangle.c, dmd/mars.c, dmd/mtype.c, dmd/mtype.h,\n+\tdmd/optimize.c, dmd/parse.c, dmd/root.c, dmd/root.h, dmd/scope.c,\n+\tdmd/scope.h, dmd/statement.c, dmd/statement.h, dmd/stringtable.c,\n+\tdmd/todt.c, dmd/typinf.c: Merge 0.175\n+\n+\tdmd/html.c: not merged\n+\n+\t* phobos/internal/object.d, phobos/std/demangle.d,\n+\tphobos/std/format.d, phobos/std/socket.d, phobos/std/stdio.d,\n+\tphobos/std/traits.d, phobos/std/uni.d, phobos/std.ddoc:\n+\tMerge 0.175\n+\n+\t------------\n+\n+\t* config/darwin8, config/mingw: update config fragments\n+\n+2006-11-26  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\t* d-codegen.cc, d-glue.cc: Fix missing continue label\n+\texpansion for GCC < 4.0\n+\n+\t* d-glue.cc (make_math_op): Convert non-complex to complex\n+\tin all version of GCC. (Buzilla 575)\n+\n+\t* d-codegen.cc: for tree code class for GCC < 4.0\n+\n+\t* phobos/Makefile.in: make test programs dependendent on\n+\tlibgphobos.a as gdc will still try to find it\n+\n+\t* phobos/configure.in: conditionally build std/boxer.o\n+\n+\t* phobos/Makefile.in (MAIN_OBJS): remove std/boxer.o\n+\n+\t* phobos/internal/arraycat.d (_d_array_literal): disable\n+\n+\t* phobos/std/format.d: fix for PowerPC Linux\n+\n+2006-11-25  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\t* d-gcc-real.h: cleanup for warnings\n+\n+2006-11-24  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\t* d-glue.cc (DotVarExp::toElem): Handle const members.\n+\n+\t* d-codegen.cc (needs_temp): Return false for constants.\n+\t(isFreeOfSideEffects): New function.\n+\n+\t* d-glue.cc (do_array_set): Evaluate the rvalue only once\n+\t(Bugzilla 578).\n+\n+2006-11-18  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\tRest of DMD 0.174 merge:\n+\n+\t* dmd/mtype.c (TypeDelegate::dotExp): Use cast-to-pointer\n+\tfor .ptr property\n+\n+\t* d-decls.cc (VarDeclaration::toSymbol): Build CONST_DECLs\n+\t* d-codegen.cc (IRState::emitLocalVar): Do nothing if CONST_DECL\n+\n+\t* d-codegen.cc (ArrayScope::setArrayExp): Handle tuple/constant\n+\tlengths.\n+\n+\t* dmd/toobj.c (Dsymbol::toObjFile): emit local variables for\n+\ttuples\n+\n+\t* svn: move traits.d and typetuple.d to the correct directory\n+\n+\t* gcc-mars.cc (error): add va_list form\n+\n+\t* dmd/mars.h (error): use va_list for 'error'\n+\n+\t* dmd/expression.c, dmd/lexer.c: fix compile errors\n+\n+\t* phobos/Makefile.in (MAIN_OBJS): add traits.o and typetuple.o\n+\n+\t* dmd-script: add -v1 option\n+\n+\t* dmd/root.c (FileName::ensurePathExists): fix conditions\n+\tfor non-win32, non-linux.\n+\n+\t* dmd-script (printUsage): add missing options documentation\n+\n+\t* d-codegen.{h, cc}: use size_t\n+\n+\t* phobos/internal/dgccmain2.d: update\n+\n+\tInitial merge of DMD 0.174:\n+\n+\t* dmd/attrib.c, dmd/cast.c, dmd/class.c, dmd/declaration.c,\n+\tdmd/declaration.h, dmd/doc.c, dmd/dsymbol.c, dmd/dsymbol.h,\n+\tdmd/expression.c, dmd/expression.h, dmd/func.c, dmd/hdrgen.c,\n+\tdmd/idgen.c, dmd/inline.c, dmd/lexer.c, dmd/mangle.c, dmd/mars.c,\n+\tdmd/mars.h, dmd/module.c, dmd/mtype.c, dmd/mtype.h, dmd/parse.c,\n+\tdmd/statement.c, dmd/template.c, dmd/template.h, dmd/tocsym.c,\n+\tdmd/todt.c, dmd/toobj.c, dmd/typinf.c, dmd/utf.c, dmd/utf.h: Merge\n+\t0.174\n+\n+\t* phobos/internal/aApplyR.d, phobos/internal/dmain2.d,\n+\tphobos/internal/object.d, phobos/linux.mak, phobos/object.d,\n+\tphobos/std/date.d, phobos/std/openrj.d, phobos/std/signals.d,\n+\tphobos/win32.mak: Merge 0.174\n+\n+\t* phobos/std/traits.d, phobos/std/typetuple.d: New files in 0.174\n+\n+\n+2006-11-17  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\t* package/simple.sh: enhancements\n+\n+\t* dmd/attrib.c: fix message\n+\n+2006-11-16  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\t* d-codegen.cc (continueHere): fix error\n+\t* d-glue.cc (d_gcc_aggregate_dtors): \"\n+\n+2006-11-14  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\t* d-builtins2.cc, d-codegen.{cc, h}, d-decls.cc, d-glue.cc,\n+\td-lang.h: remove D_TYPE_IS_NESTED.  Do not pull original\n+\tTypeFunction from FUNCTION_TYPE.\n+\n+\t* d-codegen.cc: cleanup\n+\n+\t* d-codegen.cc, gdc-alloca.h, phobos/config/gen_unix.c: fixes for\n+\tolder MacOS X builds\n+\n+2006-11-13  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\t* phobos/std/cpuid.d: fixes for PIC\n+\n+\t* d-asm-i386.h: Fix for referencing funcs (Bugzilla 307).\n+\tCorrect clobbers for cpuid, but left out EBX as a kludge for\n+\tstd.cpuid.\n+\n+\t* phobos/std/c/linux/linux.d: make imports public (Bugzilla 403)\n+\n+\t* d-decls.cc (uniqueName): Fixed logic error (Bugzilla 375). Then\n+\tjust removed most of the code and comments because the workaround\n+\tis no longer needed.\n+\n+2006-11-12  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\t* dmd/root.c (Object::hashCode): cast to pointer acceptable int type\n+\n+\tRest of DMD 0.173 merge:\n+\n+\t* d-glue.cc (UnrolledLoopStatement::toIR): implement\n+\n+\t* d-codegen.h (setContinueLabel): add interface for multiple continues\n+\n+\t* d-irstate.h (Flow), d-irstate.cc: add overrideContinueLabel for\n+\tGCC < 4.0\n+\n+\t* d-builtins2.cc, d-glue.cc, d-codegen.cc: update for\n+\tTypeFunction::arguments -> parameters and tuples\n+\n+\t* dmd/func.c: update\n+\n+\t* d-gcc-complex_t.h: update\n+\n+\t* phobos/Makefile.in (MAIN_OBJS): add signals.o and cpuid.o\n+\n+\tInitial merge of DMD 0.173:\n+\n+\t* dmd/arraytypes.h, dmd/cast.c, dmd/class.c, dmd/complex_t.h,\n+\tdmd/constfold.c, dmd/declaration.c, declaration.h,\n+\tdmd/delegatize.c, dmd/doc.c, dmd/dsymbol.c, dmd/dsymbol.h,\n+\texpression.c, dmd/expression.h, dmd/func.c, dmd/html.c,\n+\tdmd/html.h, dmd/inline.c, lexer.c, dmd/lexer.h, dmd/mars.c,\n+\tdmd/mars.h, dmd/mem.h, dmd/mtype.c, dmd/mtype.h, opover.c,\n+\tdmd/optimize.c, dmd/parse.c, dmd/parse.h, dmd/statement.c,\n+\tdmd/statement.h, struct.c, dmd/template.c, dmd/template.h,\n+\tdmd/tocsym.c, dmd/toobj.c, dmd/typinf.c: Merge 0.173\n+\n+\t* phobos/internal/object.d, phobos/linux.mak, phobos/std/stream.d,\n+\tphobos/std/string.d, phobos/std/system.d, phobos/std.ddoc,\n+\tphobos/unittest.d, phobos/win32.mak: Merge 0.173\n+\n+\t* phobos/std/c/locale.d, phobos/std/cpuid.d, phobos/std/signals.d:\n+\tNew files in 0.173\n+\n+\t----\n+\n+\t* dmd/class.c, dmd/mars.c, dmd/opover.c, dmd/statement.c:\n+\tMerge DMD 0.172\n+\n+\tMerge DMD 0.171:\n+\n+\t* dmd/func.c, dmd/optimize.c: Update comments\n+\n+\t* dmd/aggregate.h, dmd/class.c, dmd/func.c, dmd/mars.c:\n+\tMerge 0.171\n+\n+\t* phobos/internal/aApplyR.d, phobos/internal/gc/gc/.d: Merge 0.171\n+\n+\t----\n+\n+\tRest of DMD 0.170 merge:\n+\n+\t* d-glue.cc (ArrayLiteralExp::toElem): Handle the case in which\n+\tthe type of the expression is a pointer.\n+\n+\t* dmd/optimize.c (PtrExp::optimize): Don't change type\n+\tof expression without cast\n+\n+\t* phobos/internal/aApplyR.d: turn off debug(apply)\n+\n+2006-11-11  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\t* d-glue.cc (ForeachStatement::toIR): support foreach_reverse\n+\n+\t* dmd/lexer.c: size_t -> unsigned\n+\n+\t* d-lang.cc (d_handle_option): update\n+\n+\t* phobos/Makefile.in: add aApplyR.o\n+\n+\t* phobos/internal/monitor.c: merged\n+\n+\tInitial merge of DMD 0.170:\n+\n+\t* dmd/attrib.c, dmd/cast.c, dmd/class.c, dmd/delegatize.c,\n+\tdmd/dsymbol.c, dmd/expression.c, dmd/expression.h, dmd/func.c,\n+\tdmd/identifier.c, dmd/idgen.c, dmd/import.c, dmd/lexer.c,\n+\tdmd/lexer.h, dmd/mangle.c, dmd/mars.c, dmd/module.c, dmd/mtype.c,\n+\tdmd/mtype.h, dmd/opover.c, dmd/parse.c, dmd/statement.c,\n+\tdmd/statement.h, dmd/template.h, dmd/utf.h: Merge 0.170\n+\n+\t* phobos/internal/aApply, phobos/internal/cast.d,\n+\tphobos/internal/gc/gc.d, phobos/internal/mars.h,\n+\tphobos/internal/object.d, phobos/linux.mak, phobos/object.d,\n+\tphobos/std/gc.d, phobos/std/math.d, phobos/std/outofmemory.d,\n+\tphobos/std/path.d, phobos/std/zlib.d, phobos/std.ddoc,\n+\tphobos/unittest.d, phobos/win32.mak: Merge 0.170\n+\n+\t* internal/monitor.c: not changed; merge deferred for now\n+\n+\t* phobos/internal/aApplyR.d: new file in 0.170\n+\n+\t----\n+\n+\tRest of 0.169 merge:\n+\n+\t* phobos/internal/object.d: fix merge error\n+\n+\t* d-asm-i386.h: update for DMD changes\n+\n+\t* dmd/mtype.c, phobos/internal/adi.d (_adSortChar, _adSortWchar):\n+\tfix for calling conventions\n+\n+\t* d-gcc-complex_t.h: updated\n+\n+\tInitial merge of DMD 0.169:\n+\n+\t* dmd/aggregate.h, dmd/arraytypes.h, dmd/attrib.h, dmd/class.c,\n+\tdmd/complex_t.h, dmd/cond.h, dmd/declaration.h, dmd/declaration.c,\n+\tdmd/doc.h, dmd/dsymbol.c, dmd/dsymbol.h, dmd/enum.h,\n+\tdmd/expression.c, dmd/expression.h, dmd/hdrgen.h, dmd/html.h,\n+\tdmd/identifier.h, dmd/idgen.c, dmd/import.c, dmd/import.h,\n+\tdmd/init.c, dmd/init.h, dmd/lexer.h, dmd/macro.h, dmd/macro.c,\n+\tdmd/mars.c, dmd/mars.h, dmd/module.c, dmd/module.h, dmd/mtype.c,\n+\tdmd/mtype.h, dmd/opover.c, dmd/optimize.c, dmd/parse.h,\n+\tdmd/root.c, dmd/scope.c, dmd/scope.h, dmd/statement.c,\n+\tdmd/statement.h, dmd/staticassert.h, dmd/struct.c, dmd/template.c,\n+\tdmd/template.h, dmd/total.h, dmd/typinf.c, dmd/utf.h,\n+\tdmd/version.h: Merge 0.169\n+\n+\t* phobos/internal/adi.d, phbobos/internal/critical.c,\n+\tphbobos/internal/mars.h, phbobos/internal/monitor.c,\n+\tphbobos/internal/object.d, phbobos/object.d, phbobos/std/regexp.d:\n+\tMerge 0.169\n+\n+\t----\n+\n+\t* dmd-script: Create directories for output files\n+\n+\tRest of 0.168 changes:\n+\n+\t* d-dmd-gcc.h, d-glue.cc (d_gcc_aggregate_dtors): new function\n+\t* dmd/toobj.c (ClassDeclaration::toObjFile): use d_gcc_aggregate_dtors\n+\n+\t* d-codegen.cc (convertTo): handle delegate .ptr property\n+\n+\t* lang-specs.h, dmd-script: handle .xhtml extension\n+\n+\tInitial merge of DMD 0.168\n+\n+\t* dmd/aggregate.h, dmd/arraytypes.h, dmd/cast.c, dmd/class.c,\n+\tdmd/declaration.c, dmd/expression.h, dmd/func.c, dmd/html.[ch],\n+\tdmd/idgen.c, dmd/init.c, dmd/lexer.c, dmd/lexer.h, dmd/link.c,\n+\tdmd/mangle.c, dmd/mars.c, dmd/module.c, dmd/mtype.[ch],\n+\tdmd/statement.c, dmd/toobj.c, dmd/typeinf.c: Merge 0.168\n+\n+\t* phobos/etc/gamma.d, phobos/internal/object.d,\n+\tphobos/std/c/linux/linux.d.orig-dmd, phobos/std/date.d,\n+\tphobos/std/math.d, phobos/std/socket.d, phobos/std/socketstream.d,\n+\tphobos/std/stream.d, phobos/std/uni.d, phobos/win32.mak: Merge 0.168\n+\n+2006-11-10  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\t* Make-lang.in (d.install-common): cross install fix for gdmd\n+\n+\t* d-glue.cc (NewExp::toElem): uint -> unsigned\n+\n+\t* package/simple.sh: Don't depend on rsync\n+\n+\t* patch-toplev-3.4.x, patch-toplev-4.0.x: Modify top-level\n+\tMakefile.in, configure.in, and configure to work with\n+\ta Canadian cross build.\n+\n+\t* d-glue.cc (SynchronizedStatement::toIR): Remove uneeded\n+\tstartBindings call.  Add missing _d_criticalenter call.\n+\n+2006-10-12  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\t* phobos/config/unix-mid: add sysconf\n+\n+2006-10-11  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\t* phobos/std/format.d (doFormat): support Mangle.Tstruct for p_args\n+\n+\t* phobos/config/unix-head: import tm from gcc.config\n+\n+\t* phobos/config/gen_unix.c (c_time): Moved out struct tm.\n+\n+\t* phobos/config/gen_config1.c: Support clock_t. Move struct tm here.\n+\n+\t* d-glue.cc (AssignExp::toElem): use _d_arraysetlength3p\n+\t(FuncDeclaration::toObjFile): Fixed assert of class member if\n+\tsynchronized.\n+\n+\t* d-codegen.{h, cc}: replace libcall _d_arraysetlength2p with\n+\t_d_arraysetlength3p\n+\n+\t* phobos/internal/gc/gc.d (_d_arraysetlength3p): pointer version\n+\tof _d_arraysetlength3.  GCC asm jump fix.\n+\n+2006-10-09  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\t* d-codegen.{h, cc}: new libcalls: _dnewmp, _d_newarraymip\n+\n+\t* phobos/internal/gc/gc.d (_dnewmp, _d_newarraymip): pointer version\n+\tof _dnewm, _d_newarraymi\n+\n+\t* phobos/config/unix-mid: add utime\n+\n+\t* phobos/std/file.d: changes for GDC\n+\n+\t* phobos/config/gen_unix.c: support utimbuf\n+\n+2006-09-23  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\tInitial merge of 0.167:\n+\n+\t* dmd/array.c, dmd/cast.c, dmd/declaration.c, dmd/delegatize.c,\n+\tdmd/expression.[ch], dmd/func.c, dmd/idgen.c, dmd/import.c,\n+\tdmd/init.c, dmd/inline.c, dmd/lexer.[ch], dmd/mars.c,\n+\tdmd/mtype.[ch], dmd/optimize.c, dmd/parse.c, dmd/statement.c,\n+\tdmd/template.c, dmd/typinf.c: Merge 0.167\n+\n+\t* phobos/internal/arraycat.d, phobos/internal/gc/gc.d,\n+\tphobos/internal/gc/testgc.d, phobos/internal/object.d,\n+\tphobos/linux.mak, phobos/object.d, phobos/std/asserterror.d,\n+\tphobos/std/c/linux/linux.d.orig-dmd, phobos/std/c/time.d,\n+\tphobos/std/file.d, phobos/std/format.d, phobos/std/math.d,\n+\tphobos/std/string.d, phobos/std/thread.d, phobos/unittest.d,\n+\tphobos/win32.mak: Merge 0.167\n+\n+\t* phobos/std/c/windows/stat.d: New 0.167\n+\n+2006-09-06  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\t* d-glue.cc (FuncDelaration::toObjFile):\n+\tAssert isMember\tfor synchronized functions.\n+\t(NewExp::toElem): Correct some cases for nested classes\n+\n+2006-09-04  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\t* gdc-version, gcc-mars.cc: update\n+\n+\t* d-codegen.cc (trueDeclarationType): support lazy arguments\n+\t(trueArgumentType): ditto\n+\n+\t* d-codegen.{h, cc}: comment out convertForInitialization\n+\n+\t* Make-lang.in (D_DMD_OBJS): add delegatize\n+\n+\t* dmd/delegatize.c: new, DMD 0.166\n+\n+\t* dmd/cast.c, dmd/declaration.[ch], dmd/expression.[ch],\n+\tdmd/func.c, dmd/inline.c, dmd/lexer.c, dmd/lexer.h, dmd/mars.c,\n+\tdmd/mtype.c, dmd/mtype.h, dmd/opover.c, dmd/parse.c,\n+\tdmd/statement.c, dmd/struct.c, dmd/template.c, dmd/tocsym.c,\n+\tdmd/typinf.c: Merge DMD 0.166\n+\n+\t* phobos/etc/c/zlib/...: Merge 0.166\n+\n+\t* phobos/internal/aApply.d, phobos/internal/gc/linux.mak,\n+\tphobos/linux.mak, phobos/std/cover.d, phobos/std/utf.d,\n+\tphobos/win32.mak: Merge 0.166\n+\n+\t* phobos/etc/zlib/infblock.[ch], phobos/etc/zlib/infcodes.[ch],\n+\tphobos/etc/zlib/infutil.[ch], phobos/etc/zlib/maketree.c,\n+\tphobos/etc/zlib/zlib.html: remove, DMD 0.166\n+\n+\t* gdc-version: update\n+\n+\t* d-glue.cc (FuncDeclaration::toObjFile): update\n+\n+\t* dmd/cast.c, dmd/declaration.[ch], dmd/enum.c,\n+\tdmd/expression.[ch], dmd/func.c, dmd/init.c, dmd/inline.c,\n+\tdmd/mars.c, dmd/mtype.c, dmd/statement.c, dmd/template.c,\n+\tdmd/typeinf.c: Merge DMD 0.165\n+\n+\t* phobos/internal/gc/gcx.d, phobos/std.ddoc: Merge DMD 0.165\n+\n+\t* gdc-version: updated\n+\n+\t* dmd/aggregate.h, dmd/declaration.[ch], dmd/doc.c, dmd/dsymbol.c,\n+\tdmd/expression.c, dmd/import.c, dmd/inifile.c, dmd/mars.c,\n+\tdmd/module.[ch], dmd/mtype.c, dmd/parse.c, dmd/statement.c,\n+\tdmd/template.c: Merge DMD 0.164\n+\n+\t* phobos/std/socket.d: Merge DMD 0.164\n+\t* phobos/std/thread.d: no change\n+\n+2006-07-22  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\t* phobos/internal/gc/testgc.d: add import\n+\n+\t* phobos/std/thread.d (Thread.thread_init, Thread.getESP): make\n+\tpublic\n+\n+\t* phobos/std/c/unix/unix.d: use public import\n+\n+\t* dmd/access.c, dmd/aggregate.h, dmd/attrib.c, dmd/class.c,\n+\tdmd/declaration.[ch], dmd/enum.c, dmd/expression.c, dmd/func.c,\n+\tdmd/import.[ch], dmd/mars.c, dmd/module.c, dmd/mtype.[ch],\n+\tdmd/parse.[ch], dmd/scope.[ch], dmd/struct.c, dmd/template.[ch],\n+\tdmd/todt.c: Merge DMD 0.163\n+\n+\t* phobos/internal/object.d, phobos/std/c/linux/linux.d.orig-dmd,\n+\tphobos/std/regexp.d, phobos/std/stdio.d, phobos/std/stream.d:\n+\tMerge DMD 0.163\n+\n+2006-07-12  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\tRelease GDC 0.19\n+\n+\t* dmd/template.c: don't use ehfilter\n+\t* gdc-version: update\n+\n+2006-07-11  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\tSupport for Apple GCC and other fixes\n+\n+\t* setup-gcc.sh: patch build_gcc\n+\t* patch-build_gcc-4.0: new\n+\n+\t* dmd-script: Support -arch option and apple driver naming.\n+\tUse absolute path to execute program with -run.\n+\n+2006-07-10  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\t* phobos/config/darwin8/{frag-gen,frag-math,frag-unix}: new\n+\t* phobos/configure.in: support Darwin cross compiling\n+\t* phobos/configure.in: updated\n+\n+\t* phobos/config/gen_unix.c (c_fcntl): added *_OK enums\n+\t* phobos/config/skyos/frag-unix: updated\n+\n+2006-07-03  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\t* ../../gcc/tree.h, ../../gcc/tree-dump.c: machine readable dump\n+\n+\tMerge DMD 0.162\n+\n+\t* d-glue.cc (AssignExp::toElem): use _d_arraysetlength2p\n+\n+\t* phobos/internal/gc/gc.d: chanage _d_arraysetlength2 to\n+\t_d_arraysetlength2p\n+\n+2006-07-02  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\t* d-codegen.{h, cc}: support _d_arraysetlength2\n+\n+\t* dmd/cast.c, dmd/declaration.c, dmd/doc.c, dmd/expression.c,\n+\tdmd/func.c, dmd/mars.c, dmd/mtype.c, dmd/parse.c, dmd/struct.c,\n+\tdmd/template.[ch], dmd/toobj.c: merged\n+\n+\t* phobos/internal/gc/gc.d, phobos/object.d,\n+\tphobos/std/asserterror.d, phobos/std/moduleinit.d: merged\n+\n+\t---\n+\n+\t* phobos/std/regexp.d (RegExp.Range.setbitmax): fix for\n+\tbig endian\n+\n+2006-06-28  DF  <dvdfrdmn@users.sf.net>\n+\n+\t* d-glue.cc (TypeStruct::toCtype, TypeEnum::toCtype): Move\n+\tinitTypeDecl call to after size calculation.\n+\n+2006-06-24  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\t* phobos/Makefile.in: fix and clean up config.d dependencies\n+\n+\t* d-gcc-real.cc (real_t): fix assumptions about HOST_WIDE_INT\n+\n+2006-06-23  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\t* Make-lang.in, asmstmt.cc, d-convert.cc, d-gcc-includes.h,\n+\t  d-lang.cc, setup-gcc.sh: update to support building with Apple\n+\t  GCC\n+\t* d-apple-gcc.cc, patch-apple-gcc-4.0.x: new\n+\n+\tMisc fixes\n+\n+\t* Make-lang.in: Add dependencies for DMD header files.\n+\n+\t* phobos/config/gen_unix.c (c_time): fix array bounds bug\n+\n+2006-06-22  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\t* Make-lang.in: use BUILD_LDFLAGS for generator progs\n+\n+2006-06-21  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\t* d-asm-i386.h: implement offset/offsetof\n+\n+2006-06-20  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\tMerge DMD 0.161\n+\n+\t* gcc-mars.cc, gdc-version: updated\n+\n+\t* dmd/cast.c, dmd/class.c, dmd/declaration.[ch], dmd/dsymbol.c,\n+\tdmd/expression.[ch], dmd/func.c, dmd/idegen.c, dmd/import.h,\n+\tdmd/inline.c, dmd/lexer.[ch], dmd/mars.[ch], dmd/module.c,\n+\tdmd/mtype.c, dmd/opover.c, dmd/parse.c, dmd/root.[ch],\n+\tdmd/statement.c, dmd/struct.c, dmd/template.[ch], dmd/toobj.c:\n+\tMerge DMD 0.161\n+\n+\t* phobos/internal/adi.d, phobos/internal/cast.d,\n+\tphobos/internal/trace.d, phobos/linux.mak,\n+\tphobos/std/asserterror.d, phobos/std/base64.d,\n+\tphobos/std/bitarray.d, phobos/std/boxer.d,\n+\tphobos/std/c/linux/socket.d, phobos/std/c/windows/windows.d,\n+\tphobos/std/c/windows/winsock.d, phobos/std/conv.d,\n+\tphobos/std/cstream.d, phobos/std/date.d, phobos/std/dateparse.d,\n+\tphobos/std/demangle.d, phobos/std/file.d, phobos/std/format.d,\n+\tphobos/std/math.d, phobos/std/math2.d, phobos/std/mmfile.d,\n+\tphobos/std/random.d, phobos/std/regexp.d, phobos/std/socket.d,\n+\tphobos/std/socketstream.d, phobos/std/stream.d,\n+\tphobos/std/string.d, phobos/std/stream.d, phobos/std/thread.d,\n+\tphobos/std/typeinfo/ti_Along.d, phobos/std/typeinfo/ti_Aulong.d,\n+\tphobos/std/tyeinfo/ti_void.d, phobos/std/uni.d, phobos/std/uri.d,\n+\tphobos/std/utf.d, phobos/std/windows/registry.d, phobos/std/zip.d,\n+\tphobos/std/zlib.d, phobos/std.ddoc, phobos/unittest.d,\n+\tphobos/win32.mak: Merge DMD 0.161\n+\n+\t* Make-lang.in, d-lang.cc: Possible workaround for MingGW path\n+\tissues.  Create d-confdefs.h to contain the values of D_PHOBOS_DIR\n+\tand D_PHOBOS_TARGET_DIR.\n+\n+2006-06-10  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\t* History: new file\n+\t* package/install.sif: ditto\n+\t* package/simple.sh:\n+\n+\t* phobos/std/zip.d (putUshort): fix for BigEndian case\n+\n+\t* phobos/internal/gc/gcgccextern.d: update for version(freebsd)\n+\n+\t* target-ver-syms.sh: Use \"freebsd\" for FreeBSD.\n+\n+\t* phobos/configure.in: Enable std.loader for FreeBSD.\n+\t* phobos/std/loader.d: ditto\n+\t* phobos/configure: updated\n+\n+\t* Make-lang.in: Support package building. Cleanup.\n+\n+2006-06-08  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\t* patch-gcc-4.0.x: updated with...\n+\t* .../gcc/tree-nested.c: check if static chain is a PARM_DECL\n+\t(Bugzilla 175)\n+\n+2006-06-07  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\t* Make-lang.in: use CXX_FOR_BUILD\n+\n+\t* phobos/std/format.d (unittest): Some C libraries do not support\n+\tthe %A format.\n+\n+2006-06-06  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\t* phobos/config/skyos/frag-unix: update for SkyOS beta 10\n+\n+2006-06-05  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\tMerge DMD 0.160\n+\n+\t* d-codegen.cc (arrayType): handle zero-length arrays for local\n+\tvariables.\n+\n+\t* gdc-version, gcc-mars.cc: update\n+\n+\t* d-glue.cc (NewExp::toElem): support 'exp. new ...'\n+\n+\t* d-codegen.{h, cc}: support _d_assert_msg\n+\n+\t* dmd/attrib.c, dmd/enum.c, dmd/expression.[ch], dmd/idgen.c,\n+\tdmd/inifile.c, dmd/inline.c, dmd/mars.c, dmd/module.c,\n+\tdmd/mtype.c, dmd/opover.c, dmd/parse.[ch], dmd/statement.[ch],\n+\tdmd/staticassert.[ch], dmd/struct.c: Merge DMD 0.160\n+\n+\t* phobos/std/asserterror.d, phobos/std/regexp.d,\n+\tphobos/std/zlib.d, phobos/std.ddoc, phobos/win32.mak: Merge DMD\n+\t0.160\n+\n+2006-06-04  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\tVarious fixes\n+\n+\t* d-codegen.cc (twoFieldType): cleanup\n+\n+\t* phobos/internal/gc/gc_dyld.c: correct callback signature\n+\n+\t* phobos/std/format.d (unittest): Undo test change.\n+\t(putreal): Handle the case where real is equivalent to double.\n+\n+\t* d-glue.cc (TypeClass::toCtype): use prepareTypeDecl instead of\n+\tsetting an initial TYPE_NAME (Bugzilla 174)\n+\t(TypeStruct::toCtype): ditto\n+\t(TypeEnum::toCtype): ditto\n+\n+\t* d-objfile.{h, cc} (prepareTypeDecl): New: Create type\n+\tdeclarations, but do not declare them to back end.\n+\n+\tMerge DMD 0.159 and more\n+\n+\t* d-asm-i386.h (parsePrimaryExp): handle floating point const\n+\tdecls specially (Bugzilla 141)\n+\n+2006-06-03  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\t* d-glue.cc (AssertExp::toElem): handle interfaces\n+\n+\t* phobos/std/math.d (poly): fix for darwin x86\n+\n+\t* phobos/std/format.d (unittest): handle some variation in %a\n+\tformats\n+\n+\t* gdc-version: updated\n+\n+\t* gcc-mars.cc: updated\n+\n+\t* dmd/attrib.c, dmd/attrib.h, dmd/class.c, dmd/declaration.c,\n+\tdmd/doc.c, dmd/expression.c, dmd/expression.h, dmd/func.c,\n+\tdmd/link.c, dmd/mars.c, dmd/module.c, dmd/module.h, dmd/parse.c,\n+\tdmd/parse.h, dmd/statement.c, dmd/staticassert.c, dmd/struct.c,\n+\tdmd/template.c, dmd/toobj.c: Merge DMD 0.159\n+\n+\t* phobos/std/c/linux/linux.d.orig-dmd,\n+\tphobos/std/c/linux/linuxextern.d, phobos/std/c/windows/windows.d,\n+\tphobos/std/regexp.d, phobos/std/string.d, phobos/std/uni.d,\n+\tphobos/std.ddoc: Merge DMD 0.159\n+\n+\t* dmd-script: use -O3 for GCC if -O is passed\n+\n+\tFix bugs 157, 162, 164, 171\n+\n+\t* d-asm-i386.h: 'invlpg' instruction takes an operand (Bug 171)\n+\n+\t* patch-gcc-4.0.x: updated with...\n+\t* .../gcc/tree-nested.c: use a VAR_DECL for custom static chain\n+\t(Bug 162, Bug 164)\n+\n+\t* gdc-version: updated\n+\n+\t* d-glue.cc (FuncExp::toElem): Handle Tpointer case. (Bug 157)\n+\n+2006-06-01  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\t* Start of SourceForge repository\n+\n+\f\n+Copyright (C) 2006 Free Software Foundation, Inc.\n+\n+Copying and distribution of this file, with or without modification,\n+are permitted in any medium without royalty provided the copyright\n+notice and this notice are preserved."}, {"sha": "a2e504362c3ffb8ede1c0ab57e3e3a0a322f0452", "filename": "gcc/d/ChangeLog-2007", "status": "added", "additions": 1340, "deletions": 0, "changes": 1340, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2FChangeLog-2007", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2FChangeLog-2007", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2FChangeLog-2007?ref=b4c522fabd0df7be08882d2207df8b2765026110", "patch": "@@ -0,0 +1,1340 @@\n+2007-12-15  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\t* phobos*/Makefile.{am,in}, phobos*/aclocal.m4: Automake changes\n+\n+\t* setup-gcc.sh: Support Apple GCC build 5465\n+\n+\t* patch-apple-gcc-5465, patch-build_gcc-5465, patch-toplev-5465:\n+\tnew files\n+\n+2007-12-01  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\t* phobos/config/unix.x3, phobos/config/x3.c, phobos/config/x3.h\n+\tphobos/config/x3, phobos/config/x3main.c: better diagnostics\n+\tand behavior\n+\n+2007-11-24  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\t* setup-gcc.sh: Ignore .svn directories when making symlink trees.\n+\n+\t* d-bi-attrs-34.h, d-bi-attrs-341.h, d-bi-attrs-40,h,\n+\td-bi-attrs-41.h: Support attributes on declarations in\n+\tother modules.\n+\n+\t* d-codegen.cc (IRState::attributes): Support constant declarations\n+\tas string arguments.\n+\n+2007-11-08  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\t* d-cppmngl.cc: Use base-36 in substitutions.  Other fixes.\n+\n+2007-10-17  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\t* d-cppmngl.cc: More C++ mangling fixes and cleanups.\n+\n+2007-10-16  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\t* d-glue.cc (EqualExp::toElem): Convert result to libcall\n+\tto expression type. (Bugzilla 1573)\n+\n+2007-10-15  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\t* d-cppmngl.cc: Improve C++ mangling.\n+\n+2007-10-14  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\tMerge DMD 1.022, 2.005\n+\n+\t* dmd/..., dmd2/..., phobos/..., phobos2/...: Merge.\n+\n+\t* Make-lang.in: Add builtin.dmd.o and d-cppmngl.o for V2.\n+\n+\t* d-cppmngl.cc: New file\n+\n+\t* phobos/std/c/dirent.d, phobos/std/c/linux/linux.d: Update\n+\t* phobs2/...: same\n+\n+\t* symbol.h, d-decls.cc: Remove references to Classym\n+\n+\t----\n+\n+\t* d-glue.cc (CatExp::toElem): Null check. (Bugzilla 1581)\n+\n+\tRemove carriage returns from files\n+\n+2007-10-13  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\t* d-glue.cc (CatExp::toElem): Flatten multiple CatExps into a\n+\tsingle library call. (Bugzilla 1556)\n+\n+\t* phobos/std/boxer.d (box, boxArray), phobos2/...: Fix for\n+\tpromoted types.\t(Bugzilla 1543)\n+\n+\t* d-codegen.cc (call): Catch a case in which a member function can\n+\tbe called without 'this'. (Bugzilla 1568)\n+\n+\t* dmd/mtype.c (TypeArray::dotExp): Correct return type of\n+\tsort and reverse functions. (SF 1809220 / Bugzilla 1554)\n+\n+\t* dmd2/mtype.c: Ditto.\n+\n+\t* patch-gcc-4.1.x: Add patch for ARM exception handling int nested\n+\tfunctions.\n+\n+\t* d-objfile.cc: Make DT data TREE_CONSTANT\n+\n+\t* dmd2/optimize.c: Fix for infinite recursion on initializer\n+\twhen an error has already occurred.\n+\n+\t-----\n+\n+\tAdd support for ARM EABI.  Fix some missing items from\n+\tcross-compilation changes.\n+\n+\t* d-lang.cc: Add \"Arm\" and \"Thumb\" version identifiers\n+\n+\t* phobos/unwind.d: Move pointer encoding to deh_pe.d. Move generic\n+\tunwinder interface to unwind_generic.d.  Import either generic or\n+\tARM interfaces based on config value.\n+\n+\t* phobos/unwind_generic.d, phobos/unwind_pe.d: New file; old code.\n+\n+\t* phobos/unwind_arm.d: New file.\n+\n+\t* phobos/deh.d: Support ARM exception handling ABI.\n+\n+\t* phobos/configure.in, frag-ac.in: Add config for ARM unwinder\n+\n+\t* phobos/configure.in, phobos/internal.c, phobos/monitor.c: Support\n+\t\"no system\" targets.\n+\n+\t* phobos/cbridge_math.c: Correct identifier names for earlier\n+\tchanges.\n+\n+\t* phobos/Makefile.am, phobos/Makefile.in, phobos/config.h.in,\n+\tphobos/configure : Update.\n+\n+\t* phobos2/...: Duplicate phobos/ changes\n+\n+2007-10-07  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\tMerge cross-compilation changes to phobos2\n+\n+\t* phobos2/....: Merge\n+\n+\t---\n+\n+\tEnhance cross-compilation support:\n+\n+\t* phobos/Makefile.am, phobos/Makefile.in, phobos/acinclude.m4,\n+\tphobos/aclocal.m4, phobos/configure.in, phobos/configure,\n+\tphobos/config.h.in: Replace \"fragment generation\" with \"X3\"\n+\tsystem.  Remove obsolete tests.\n+\n+\t* phobos/config/{config-head, config-mid, config-tail}: Removed\n+\t* phobos/config/{makestruct.h, unix-head, unix-mid}: Removed\n+\t* phobos/{darwin8, mingw, skyos}: Removed\n+\n+\t* phobos/config/{errno.x3, fpcls.x3, libc.x3, unix.x3},\n+\tphobos/config{x3, x3.c, x3.h, x3main.c}:  New files\n+\n+\t* phobos/frag-ac.in: Now only contains boolean constants.\n+\t* phobos/frag-math.in: New file.  Contains old configured math\n+\tfunctions.\n+\n+\t* phobos/gcc/configext.d: Removed\n+\t* phobos/gcc/support.d: Move fallback strtold definition here.\n+\n+\t* phobos/Makefile.am: Do not compile std/c/stdio.o\n+\t* phobos/std/c/stdio.c: Change function definitions to external\n+\tdeclarations.\n+\n+\t* phobos/gcc/deh.d, phobos/gcc/fpcls.d, phobos/gcc/fpmath.d,\n+\tphobos/gcc/support.d, phobos/gcc/threadsem.d,\n+\tphobos/internal/dgccmain2.d, phobos/internal/fpmath.d,\n+\tphobos/internal/gc/gcgcc.d, phobos/phobos-ver-syms.in,\n+\tphobos/std/c/dirent.d, phobos/std/c/math.d, phobos/std/c/stddef.d,\n+\tphobos/std/c/stdio.d, phobos/std/c/stdlib.d, phobos/std/c/time.d,\n+\tphobos/std/c/unix/unix.d, phobos/std/date.d, phobos/std/math.d,\n+\tphobos/std/math2.d, phobos/std/mmfile.d, phobos/std/random.d,\n+\tphobos/std/stdio.d, phobos/std/stream.d, phobos/std/system.d,\n+\tphobos/std/thread.d: Update.  Add some support for targets\n+\twithouth an operation system.\n+\n+2007-09-24  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\t* d-glue.cc (IndeExp::toElem), d-codegen.cc (arrayElemRef):\n+\tPut the BIND_EXPR \"inside the brackets\". (Bugzilla 1155)\n+\n+\t(StructLiteralExp::toElem): Handle NULL elements (for anonymous\n+\tunions.)\n+\n+2007-09-23  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\t* d-codegen.{h,cc}, d-glue.cc: Add type to error_mark_node\n+\tfor code that assumes the type of certain expressions.\n+\t(Bugzilla 1051)\n+\n+\t* d-glue.cc (FuncDeclaration::toObjFile): Set DECL_IGNORED_P\n+\ton the frame paramter.  (Bugzilla 1033)\n+\n+\t* d-glue.cc, d-codegen.cc, d-objfile.cc: Set DECL_IGNORED_P\n+\tin most cases where DECL_ARTIFICIAL is set.\n+\n+\t* d-builtins2.cc (d_gcc_magic_builtins_module): Handle type\n+\tdeclarations after converting functions.\n+\n+\t* d-glue.cc (make_assign_math_op): Special case for division\n+\twhen lhs is imaginary. (Bugzilla 739)\n+\n+\t* dmd-script: Apply Ander's patch for implicit -H and -D\n+\tbehavior.  (Bugzilla 1502)\n+\n+\tUse of -of argument does not depend on header generation.\n+\t(Bugzilla 1501)\n+\n+\t* d-builtins2.cc,  dmd*/module.c: If the target va_list is a\n+\tstruct, add the struct declaration to the object module.\n+\t(Bugzilla 1507)\n+\n+\t* dmd2/parse.c: fix line endings\n+\n+\t----\n+\n+\tUpdate for D 2.0:\n+\n+\t* Make-lang.in: Support both DMD front end version 1 and 2.\n+\tReplace gcc-mars.cc with  d/mars.c.\n+\n+\t* gcc-mars.cc: Remove file.\n+\n+\t* d-codegen.h, d-codegen.cc: Update for DMD 2.x.\n+\tAdd _d_hidden_func libcall.\n+\n+\t* d-decls.cc, d-glue.cc: Update for DMD 2.x.\n+\n+\t* d-dmd-gcc.h: Add rtlsym, etc.\n+\n+\t* d-lange.cc: Include mars.h.  Implement rtlsym.\n+\n+\t* d-objfile.cc (ObjectFile::hasModule): Add checks to allow\n+\tthis function to be called earlier.\n+\n+\t* dmd*/mars.c: Make changes for GDC.\n+\n+\t* dmd*/attrib.c: Use WANTinterpret for pragma(GNU_asm)\n+\n+\t* dmd2/parse.c (parseDeclarator): Fix aliasing bug.\n+\n+\t* rdmd.d: Update for D 2.0\n+\n+\t* gdc-version: now only contains the GDC version\n+\n+\t* setup-gcc.sh: Support building D version 1 or 2.  Take DMD\n+\tversion from dmd*/mars.c.\n+\n+\t* dmd2/, phobos2/: New directories\n+\n+\t* phobos2/Makefile.am (MAIN_OBJS): add std.c.stdio module\n+\tfor std{in,out,err} vars\n+\n+\t* phobos*/std/c/stdio.d: Make functions with definitions\n+\textern(D).\n+\n+\t* phobos2/std/loader.d: Update for D 2.0.\n+\n+\t* phobos2/std/hiddenfunc.d: Use C calling conventions for GDC.\n+\n+2007-09-14  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\n+\t* d-codegen.cc (convertTo, call): Prevent multiple re-evaluation\n+\tof delgate. (Bugzilla 1492)\n+\n+2007-09-13  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\t* d-glue.cc, d-codegen.h, d-codegen.cc: Make it an error\n+\tto reference a nested function without a body. (SF 1793594)\n+\n+2007-09-12  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\t* phobos/config/ldfuncs-ppclinux: Declare sqrt.\n+\n+\t* target-ver-syms.sh, phobos/acinclude.m4, phobos/configure.in:\n+\tSupport kfreebsd.\n+\n+\t* d-codegen.{h, cc}, d-glue.cc: Change rawArray to toDArray. Do\n+\tnot cast result to void[]. (Bugzilla 1490)\n+\n+2007-09-07  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\t* phobos/std/c/stdio.d: Define fpos_t correctly for Drawin\n+\t(Bugzilla 1469)\n+\n+2007-09-05  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\tMerge DMD 1.021\n+\n+\t* dmd-script, d-spec.c (lang_specific_driver): Support\n+\t-debuglib= and -defaultlib= options.\n+\n+\t* dmd/cast.c, dmd/constfold.c, dmd/declaration.c, dmd/dsymbol.c,\n+\tdmd/expression.c, dmd/expression.h, dmd/func.c, dmd/identifier.c,\n+\tdmd/idgen.c, dmd/init.c, dmd/init.h, dmd/interpret.c, dmd/lexer.c,\n+\tdmd/lexer.h, dmd/link.c, dmd/mars.c, dmd/mars.h, dmd/parse.c,\n+\tdmd/statement.c, dmd/staticassert.c, dmd/template.c: Merge\n+\n+\t* internal/object.d, phobos/internal/trace.d, phobos/object.d,\n+\tphobos/std/c/windows/windows.d, phobos/std/date.d,\n+\tphobos/std/regexp.d, phobos/std/windows/registry.d: Merge\n+\n+\t---\n+\n+\t* phobos/std/stdio.d (readln): Use the result of getdelim\n+\tcorrectly. (SF 1788195)\n+\n+\t* d-glue.cc (FuncDeclaration::toObjFile): Do not gimplify if\n+\tthere were errors (Bugzilla 1415)\n+\n+2007-08-31  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\t* d-objfile.cc (outdata): Do not set TREE_CONSTANT on initializers\n+\t(Bugzilla 1453)\n+\n+2007-08-29  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\t* d-decls.cc (uniqueName): Allow multiple static declaration with\n+\tthe same name if in a function. (SF 1783085)\n+\n+2007-08-28  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\t* d-codegen.cc (call): Use CommaExp correctly. (Bugzilla 1443)\n+\n+\t* dmd/todt.c (createTsarrayDt): Don't take quadratic time to build\n+\tthe initializer. (Bugzilla 1440)\n+\n+2007-08-22  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\tRelease GDC 0.24\n+\n+\t---\n+\n+\t* rdmd.d: Fix for Windows\n+\n+2007-08-21  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\t* GDC.html, History, README, gcc-mars.cc, gdc-version:\n+\tUpdate for 0.24\n+\n+\t* rdmd.d, rdmd.1: New files. (Bugzilla 1152)\n+\n+\t* patch-build_gcc-4.0: Build universal rdmd. (Bugzilla 1152)\n+\n+\t* package/simple.sh: Install rdmd. (Bugzilla 1152)\n+\tInstall man pages for MacOS build.\n+\n+\t* dmd-script: Apply Ander's patch to make -op apply\n+\tto interface files. (Bugzilla 1137)\n+\n+\t* d-lang.cc (d_parse_file): In -fall-sources mode,\n+\tonly generate an interface file for the -fonly module.\n+\n+\t* phobos/internal/adi.d (_adReverseChar, _adReverseWchar):\n+\tMake sure stride difference is signed.\n+\n+2007-08-20  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\t* patch-gcc-4.1.x, patch-gcc-4.0.x: Fix botched patches.\n+\n+2007-08-05  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\t* d-codegen.cc (convertForArgument): Recognize\n+\tpointer arithmetic expression as reference.\n+\t(Bugzilla 1400)\n+\n+\t* d-glue.cc (DotVarExp::toElem): Do not NOP_EXPR\n+\tthe result. (Bugzilla 1398)\n+\n+2007-07-27  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\t* phobos/std/stdio: Fix breakage from last commit.\n+\t(SF 1761989)\n+\n+2007-07-26  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\t* phobos/std/c/stdio.d: Change import for gcc.config\n+\n+\t* d-lang.cc: add flag_iso for target macros\n+\n+\t* patch-gcc-4.0.x:  (gcc/tree-sra.c): Do not use SRA\n+\ton structs with aliased fields created for anonymous\n+\tunions.  (Followup to Bugzilla 1034)\n+\n+2007-07-25  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\t* d-lang.cc: implement d_gcc_is_target_win32\n+\n+\t* dmd/parse.c (parseLinkage): use d_gcc_is_target_win32\n+\n+\t* d-dmd-gcc.h (d_gcc_is_target_win32): added\n+\n+2007-07-24  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\tMerge DMD 1.019 - 1.020\n+\n+\t* dmd/attrib.c, dmd/cast.c, dmd/constfold.c, dmd/declaration.h,\n+\tdmd/expression.c, dmd/expression.h, dmd/func.c, dmd/idgen.c,\n+\tdmd/inline.c, dmd/interpret.c, dmd/mars.c, dmd/mars.h,\n+\tdmd/mtype.c, dmd/mtype.h, dmd/opover.c, dmd/parse.c,\n+\tdmd/template.c, dmd/template.h, dmd/tocsym.c, dmd/toir.c: Merge\n+\n+\t* phobos/internal/gc/gc.d, phobos/linux.mak,\n+\tphobos/std/demangle.d, phobos/std/format.d, phobos/std/loader.d,\n+\tphobos/std/socket.d, phobos/std/uni.d: Merge\n+\n+2007-07-22  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\tMerge DMD 1.015 - 1.018:\n+\n+\t* dmd/lexer.c (escapeSequence): Change vendor string.\n+\n+\t* dmd-script: Update documentation link\n+\n+\t* dmd/attrib.c, dmd/cast.c, dmd/class.c, dmd/declaration.c,\n+\tdmd/dsymbol.c, dmd/expression.c, dmd/expression.h, dmd/func.c,\n+\tdmd/hdrgen.h, dmd/idgen.c, dmd/init.c, dmd/init.h, dmd/inline.c,\n+\tdmd/interpret.c, dmd/lexer.c, dmd/mars.c, dmd/mars.h,\n+\tdmd/module.c, dmd/mtype.c, dmd/mtype.h, dmd/optimize.c,\n+\tdmd/parse.c, dmd/scope.c, dmd/scope.h, dmd/statement.c,\n+\tdmd/statement.h, dmd/staticassert.c, dmd/template.c: Merge\n+\n+\t* phobos/internal/dmain2.d, phobos/internal/gc/gcx.d,\n+\tphobos/internal/object.d, phobos/object.d, phobos/std/bind.d,\n+\tphobos/std/compiler.d, phobos/std/date.d, phobos/std/dateparse.d,\n+\tphobos/std/format.d, phobos/std/intrinsic.d, phobos/std/loader.d,\n+\tphobos/std/math2.d, phobos/std/metastrings.d, phobos/std/mmfile.d,\n+\tphobos/std/outbuffer.d, phobos/std/string.d,\n+\tphobos/std/windows/registry.d, phobos/win32.mak: Merge\n+\n+\t----\n+\n+\t* gdc_alloca.h: Support OpenBSD. (Bugzilla 1065)\n+\n+\t* patch-gcc-4.1.x (gcc/tree-sra.c): Do not use SRA\n+\ton structs with aliased fields created for anonymous\n+\tunions.  (Bugzilla 1034)\n+\n+2007-07-19  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\t* patch-gcc-4.1.x (gcc/predict.c): Add null-pointer check.\n+\t(Bugzilla 1035)\n+\n+\t---\n+\n+\t* phobos/std/format.d (doFormatPtr): Fix accidental\n+\treversion from DMD merge.\n+\n+\t* d-codegen.cc (maybeSetUpBuiltin): Add some missing\n+\tinstrinsics.\n+\n+\t* phobos/Makefile.am (MAIN_OBJS): Add gcc.builtins\n+\tmodule to get built-instruct initializers.\n+\n+\t* phobos/Makefile.in: Regenerated\n+\n+\t* d-lang.cc (d_parse_file): Call d_gcc_magic_module\n+\tfor each module on the command line.\n+\n+\t* d-builtins2.cc (d_gcc_magic_builtins_module): output\n+\tdeclaration other than funcs\n+\n+2007-07-16  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\t* dmd/todt.c (StructLiteralExp::toDt): Use target_size_t\n+\tas in StructInitializer::toDt.\n+\n+\tBugzilla 1032:\n+\n+\t* dmd/todt.c: Use DT_container for arrays, array elements,\n+\tand structs\n+\n+\t* dt.h, d-objfile.cc: Add DT_container / dtcontainer\n+\n+2007-07-14  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\t* d-codegen.cc (ArrayScope::setArrayExp, finish): Handle\n+\tconstant lengths.  (Bugzilla 1031)\n+\n+2007-07-13  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\t* d-codegen.cc (toElemLvalue): Use toElemLvalue recursively.\n+\t(Bugzilla 1191)\n+\n+\t* d-codegen.cc (twoFieldCtor): Only set TREE_READONLY if\n+\tTREE_CONSTANT\n+\n+\t* d-glue.cc (array_set_expr, AssocArrayLiteralExp::toElem,\n+\t(StructLiteralExp::toElem, NullExp::toElem):\n+\tDo not set TREE_READONLY.\n+\n+\t* d-glue.cc (NewExp::toElem): Do not set TREE_READONLY on\n+\tnew array dimensions.\n+\n+\t* d-codegen.cc (darrayVal): Do not set TREE_READONLY.\n+\t(Bugzilla 1329)\n+\n+\t(delegateVal): ditto\n+\n+\t* d-codegen.cc (FieldVisitor::visit): Handle classes that\n+\tare forward references. (Bugzilla 1325)\n+\n+\t* dmd-script: Pass -J option correctly.\t(SF 1721435)\n+\n+\t* d-glue.cc (DeleteExp::toElem): Handle interfaces.\n+\t(SF 1721496)\n+\n+\t* d-decls.cc (VarDeclaration::toSymbol): Handle void initializer.\n+\t(SF 1749622)\n+\n+\t* d-glue.cc (AndAndExp, OrOrExp): Handle void second expression.\n+\t(SF 1689634)\n+\n+\t* phobos/gcc/cbridge_time.c (_d_gnu_cbridge_tza): Remove\n+\tdaylight saving time offset from tm_gmtoff (Bugzilla 1208)\n+\n+\t* phobos/std/format.d (doFormat): Use original signature.  Actual\n+\twork is done by new doFormatPtr. (Bugzilla 1109)\n+\n+\t* phobos/std/boxer.d: Use doFormatPtr\n+\n+2007-07-11  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\t* d-convert.cc (default_conversion): make public\n+\t(SF 1711324 and 1709602)\n+\n+\t* d-apple-gcc.c (build_function_call): re-enable some code\n+\n+2007-05-08  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\t* d-apple-gcc.c: Remove a variable that is now defined in d-lang.c\n+\n+\t* d-lang.cc: Fix for other GCC versions.\n+\n+\t* d-c-stubs.c: New file.\n+\n+\t* Make-lang.in (D_BORROWED_C_OBJS): Always use C_TARGET_OBJS.  Add\n+\tstubs for C compiler to allow linking target-specific preprocessor\n+\tdefines.\n+\n+2007-05-05  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\t* d-codegen.cc (hwi2toli, getTargetSizeConst): Fix 2x wide int to\n+\tlong int conversion.\n+\n+\t* dmd/cast.c (implicitConvTo): Use GCC floating point\n+\troutines instead of native.\n+\n+\t* d-gcc-real.cc (toInt): Correctly convert to long integer\n+\n+\t* Make-lang.in (D_DMD_H): Add d-gcc-real.h\n+\n+\t* phobos/internal/dgccmain2.d: Print newline after error message\n+\n+2007-04-29  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\tMerge DMD 1.014:\n+\n+\t* dmd/aggregate.h, dmd/constfold.c, dmd/delegatize.c, dmd/enum.c,\n+\tdmd/enum.h, dmd/expression.c, dmd/expression.h, dmd/idgen.c,\n+\tdmd/inline.c, dmd/interpret.c, dmd/lexer.c, dmd/lexer.h,\n+\tdmd/mars.c, dmd/mtype.c, dmd/optimize.c, dmd/struct.c,\n+\tdmd/template.c, dmd/tocsym.c, dmd/todt.c, dmd/toobj.c,\n+\tdmd/typinf.c: Merge.\n+\n+\t* phobos/internal/gc/gc.d, phobos/internal/gc/gcx.d,\n+\tphobos/std/format.d, phobos/std.ddoc: Merge.\n+\n+\t* d-glue.d (StructLiteralExp::toElem): implement\n+\t* d-decls.d (EnumDeclaration::toInitializer): copy from tocsym.c\n+\n+\t------------\n+\n+\tMerge DMD 1.013:\n+\n+\t* dmd/cast.c, dmd/constfold.c, dmd/declaration.c,\n+\tdmd/expression.c, dmd/expression.h, dmd/interpret.c, dmd/link.c,\n+\tdmd/mars.c, dmd/mtype.c, dmd/opover.c, dmd/optimize.c,\n+\tdmd/parse.c, dmd/port.h, dmd/statement.c: Merge.\n+\n+\t* phobos/internal/aaA.d, phobos/internal/switch.d,\n+\tphobos/std/date.d, phobos/std/file.d, phobos/std/format: Merge.\n+\n+\t* d-codegen.h, d-codegen.cc: add _d_assocarrayliteralTp\n+\t* d-glue.cc (AssocArrayLiteralExp::toElem): Implement.\n+\n+\t* phobos/internal/aaA.d (_d_assocarrayliteralT): modified\n+\tto use pointers to keys, values.\n+\n+\t--------------\n+\n+\tMerge DMD 1.012:\n+\n+\t* arraytypes.h, dmd/declaration.c, dmd/delegatize.c,\n+\tdmd/expression.c, dmd/expression.h, dmd/init.c, dmd/init.h,\n+\tdmd/inline.c, dmd/interpret.c, dmd/lexer.c, dmd/lexer.h,\n+\tdmd/mangle.c, dmd/mars.c, dmd/optimize.c, dmd/template.c,\n+\tdmd/template.h: Merge\n+\n+\t* phobos/internal/object.d: Merge\n+\n+\t* dmd/template.c (TemplateInstance::mangle): printf portability\n+\n+\t* d-glue.cc (AssocArrayLiteralExp::toElem): non-working implementation\n+\n+2007-04-28  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\tMerge DMD 1.011:\n+\n+\t* dmd/access.c, dmd/aggregate.h, dmd/arraytypes.h, dmd/attrib.c,\n+\tdmd/attrib.h, dmd/bit.c, dmd/cast.c, dmd/class.c, dmd/complex_t.h,\n+\tdmd/cond.c, dmd/cond.h, dmd/constfold.c, dmd/declaration.c,\n+\tdmd/declaration.h, dmd/delegatize.c, dmd/doc.c, dmd/doc.h,\n+\tdmd/dsymbol.c, dmd/dsymbol.h, dmd/dump.c, dmd/entity.c,\n+\tdmd/enum.c, dmd/enum.h, dmd/expression.c, dmd/expression.h,\n+\tdmd/func.c, dmd/hdrgen.c, dmd/hdrgen.h, dmd/html.c, dmd/html.h,\n+\tdmd/identifier.c, dmd/identifier.h, dmd/idgen.c, dmd/impcnvgen.c,\n+\tdmd/import.c, dmd/import.h, dmd/inifile.c, dmd/init.c, dmd/init.h,\n+\tdmd/inline.c, dmd/interpret.c, dmd/lexer.c, dmd/lexer.h,\n+\tdmd/link.c, dmd/macro.c, dmd/macro.h, dmd/mangle.c, dmd/mars.c,\n+\tdmd/mars.h, dmd/module.c, dmd/module.h, dmd/mtype.c, dmd/mtype.h,\n+\tdmd/opover.c, dmd/optimize.c, dmd/parse.c, dmd/parse.h,\n+\tdmd/scope.c, dmd/scope.h, dmd/statement.c, dmd/statement.h,\n+\tdmd/staticassert.c, dmd/staticassert.h, dmd/struct.c,\n+\tdmd/template.c, dmd/template.h, dmd/tocsym.c, dmd/todt.c,\n+\tdmd/toir.c, dmd/toir.h, dmd/toobj.c, dmd/total.h, dmd/typinf.c,\n+\tdmd/unialpha.c, dmd/utf.c, dmd/utf.h, dmd/version.c, dmd/version.h:\n+\tMerge\n+\n+\t* phobos/internal/gc/gc.d, phobos/internal/gc/gcx.d,\n+\tphobos/internal/object.d, phobos/std/c/locale.d,\n+\tphobos/std/stdio.d, phobos/std/windows/registry.d: Merge\n+\n+\t* dmd/expression.c: Comment out some logging code.\n+\t* d-builtins2.cc: Update and fix handling of built-in structs.\n+\t* d-codegen.cc, d-glue.cc: Update\n+\n+\t----------------\n+\n+\tMerge DMD 1.010:\n+\n+\t* dmd/aggregate.h, dmd/class.c, dmd/declaration.c, dmd/doc.c,\n+\tdmd/dsymbol.c, dmd/expression.c, dmd/expression.h, dmd/func.c,\n+\tdmd/interpret.c, dmd/mars.c, dmd/scope.c, dmd/statement.c,\n+\tdmd/template.c, dmd/template.h, dmd/todt.c: Merge.\n+\n+\t* phobos/internal/dmain2.d, phobos/internal/gc/gc.d,\n+\tphobos/internal/gc/gcx.d, phobos/internal/gc/testgc.d,\n+\tphobos/internal/object.d, phobos/object.d,\n+\tphobos/std/c/linux/linux.d, phobos/std/c/stdio.d,\n+\tphobos/std/file.d, phobos/std/gc.d, phobos/std/moduleinit.d,\n+\tphobos/std/regexp.d, phobos/std/stdio.d, phobos/std/string.d,\n+\tphobos/std.ddoc, phobos/win32.mak: Merge\n+\n+\t* dmd/mtype.c, phobos/internal/dgccmain2.d: Update.\n+\t* d-glue.cc (gcc_d_backend_init): Update.\n+\n+\t* phobos/config/unix-mid, phobos/std/c/unix/unix.d: Moved dirent\n+\tand stdio definitions out of configunix to std.c.unix.unix because\n+\tof compilation problems.\n+\n+\t* phobos/internal/gc/gcx.d (GC.realloc, GC.extend, GC.free): Clear\n+\tgcx.p_cache\n+\n+\t* phobos/std/stdio.d, phobos/frag-ac.in, phobos/configure.in:\n+\t  Account for various configurations.\n+\n+\t* phobos/phobos-ver-syms.in: Remove GNU_Have_fwide\n+\t* phobos/configure: Regenerate\n+\n+2007-04-22  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\t* d-gcc-includes.h, d-lang.cc: Add target-specific preprocessor\n+\tsymbols to the list of D version symbols.\n+\n+\t* d-glue.cc (NewExp::toElem): Use NewExp::newtype (Bugzilla 1038)\n+\n+2007-04-16  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\tMerge DMD 1.009 (from 1.007):\n+\n+\t* d-decls.c: Merge changes from dmd/tocsym.c\n+\n+\t* dmd/constfold.c, dmd/declaration.c, dmd/declaration.h,\n+\tdmd/expression.c, dmd/expression.h, dmd/init.c, dmd/interpret.c,\n+\tdmd/mangle.c, dmd/mars.c, dmd/mars.h, dmd/mtype.c,\n+\tdmd/optimize.c, dmd/statement.c, dmd/staticassert.c,\n+\tdmd/tocsym.c, dmd/todt.c: Merge changes.\n+\n+\t* phobos/std/path.d, phobos/std/string.d: Merge changes.\n+\n+\t----\n+\n+\t* d-builtins.c, d-builtins2.cc, d-lang.h: Reworked code to only\n+\tconvert built-in functions when the gcc.builtins module is\n+\timported.  RECORD_TYPE is now converted to a TypeStruct.  Fixed\n+\tproblem that caused some functions to not be available.  Support\n+\ttargets builtins.\n+\n+2007-03-11  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\t* d-decls.cc (ClassDeclaration::toSymbol): Do not set TREE_READONLY.\n+\t(Bugzilla 1037)\n+\n+2007-03-10  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\t* d-codegen.cc (call): Handle CommaExp form of a delegate call\n+\t(Bugzilla 1043)\n+\n+\t* d-decls.cc (VarDeclaration::toSymbol): Partial fix for Bugzilla 1044\n+\n+\t* dt.h, d-objfile.cc, dmd/typeinf.c: Only pad 32-bit words in RTTI if\n+\tneeded. (Bugzilla 1045, 1046)\n+\t* dmd/toobj.c: update\n+\n+\t* d-glue.cc, d-objfile.cc: Additional GCC 3.3.x cleanup\n+\n+\t----\n+\n+\t* ChangeLog, History, Make-lang.in, asmstmt.cc, d-builtins.c,\n+\td-codegen.cc, d-convert.cc, d-decls.cc, d-gcc-includes.h,\n+\td-gcc-real.cc, d-glue.cc, d-gt.c, d-irstate.cc, d-lang.cc,\n+\td-lang.h, d-misc.c, d-objfile.cc, d-spec.c, phobos/configure.in,\n+\tsetup-gcc.sh: Remove support for GCC 3.3.x\n+\n+\t* phobos/configure: Regenerated\n+\n+\t* gcc-3.3.5-framework-headers.patch,\n+\tgcc-3.3.5-framework-linker.patch, patch-gcc-3.3.x,\n+\tpatch-gcc-darwin-eh-3.3.x, patch-toplev-3.3.x,\n+\tphobos/config/ldfuncs33, phobos/config/noldfuncs33,\n+\td-bi-attrs-33.h: Removed.\n+\n+2007-03-05  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\tRelease GDC 0.23\n+\n+\t* phobos/Makefile.am: Add all-local target to build libgphobos.a\n+\t* phobos/Makefile.in: Regenrated\n+\n+\tPowerPC 64 fixes:\n+\n+\t* d-glue.cc (TypeStruct:toCtype): Add words at the end of a struct.\n+\n+\t* phobos/config/darwin8/frag-unix: More accurate struct definitions.\n+\t* phobos/internal/gc/gc_dyld.c: Support Mach-O 64.\n+\t* phobos/internal/gc/gcgcc.d: Correct stack for 64-bit Darwin.\n+\t* phobos/std/thread.d (getESP): Align result.\n+\n+2007-03-04  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\tRest of DMD 1.007 Merge:\n+\n+\t* package/simple.sh: Install GDC.html\n+\n+\t* Make-lang.in (D_DMD_OBJS): add interpret.dmd.o\n+\n+\t* gdc-version: update\n+\n+\t* GDC.html, d-lang.cc, dmd-script, lang-specs.h, lang.opt,\n+\tpatch-gcc-4.0.x, patch-gcc-4.1.x, patch-apple-gcc-4.0.x,\n+\tpatch-gcc-3.4.x, patch-gcc-3.3.x: Add -J option.\n+\n+\t* dmd/constfold.d, dmd/declaration.h, dmd/func.c: update\n+\n+\t* d-glue.c: update\n+\n+\tInitial merge of DMD 1.007 (from DMD 1.005):\n+\n+\t* dmd/arraytypes.h, dmd/attrib.c, dmd/cond.c, dmd/constfold.c,\n+\tdmd/declaration.c, dmd/declaration.h, dmd/expression.c,\n+\tdmd/expression.h, dmd/func.c, dmd/idgen.c, dmd/init.c,\n+\tdmd/lexer.c, dmd/lexer.h, dmd/mars.c, dmd/mars.h, dmd/module.c,\n+\tdmd/mtype.c, dmd/opover.c, dmd/optimize.c, dmd/parse.c,\n+\tdmd/parse.h, dmd/statement.c, dmd/statement.h, dmd/template.c,\n+\tdmd/typinf.c: Merge\n+\n+\t* phobos/internal/aApply.d, phobos/internal/aApplyR.d,\n+\tphobos/internal/adi.d, phobos/internal/dmain2.d,\n+\tphobos/internal/gc/gc.d, phobos/internal/gc/gcx.d,\n+\tphobos/internal/gc/win32.d, phobos/internal/object.d,\n+\tphobos/std/base64.d, phobos/std/c/string.d, phobos/std/c/time.d,\n+\tphobos/std/c/windows/com.d, phobos/std/c/windows/windows.d,\n+\tphobos/std/dateparse.d, phobos/std/demangle.d, phobos/std/file.d,\n+\tphobos/std/format.d, phobos/std/regexp.d, phobos/std/stdio.d,\n+\tphobos/std/stream.d, phobos/std/string.d, phobos/std/thread.d,\n+\tphobos/std/utf.d: Merge\n+\n+\t* dmd/interpret.c: New file\n+\n+2007-03-03  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\t* phobos/std/c/darwin/darwin.d: Remove. (Bugzilla 984)\n+\n+\t* phobos/std/date.d: Cleanup\n+\n+\t* d-lang.cc: Evaluate BYTES_BIG_ENDIAN at runtime.\n+\n+\t* d-codegen.cc: Cleanup.\n+\n+\t* d-glue.cc: Initialize foreach key with zero, not default init.\n+\n+\t* patch-gcc-4.0.x, patch-gcc-4.1.x, patch-apple-gcc-4.0.x:\n+\tPrevent emission of prologue and epilogue code for naked functions.\n+\t(Bugzilla 1013)\n+\n+2007-03-02  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\t* d-lang.cc: Test BYTES_BIG_ENDIAN at runtime.\n+\n+\t* d-glue.cc (ForeachStatement::toIR): Initialize key to zero, not\n+\tdefaultInit.\n+\n+\t* patch-build_gcc-4.0, phobos/acinclude.m4, phobos/configure.in,\n+\tphobos/Makefile.am: Remove references to libgphobos.spec\n+\n+\t* phobos/Makefile.in, phobos/configure: Regenerate\n+\n+\t* patch-gcc-3.4.x, patch-gcc-3.3.x, patch-gcc-4.0.x,\n+\tpatch-gcc-4.1.x, patch-apple-gcc-4.0.x: Support enabling\n+\t-pthread option by default without 'unrecognized option'\n+\terror message.\n+\n+\t* d-spec.c (lang_specific_driver): Enable -pthread option\n+\n+\t* phobos/libgphobos.spec.in: Remove\n+\n+2007-02-28  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\t* phobos/std/loader.d: Fix error\n+\n+2007-02-27  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\t* setup-gcc.sh: Create directory of links instead of a single\n+\tlink.  No longer need to copy support files.\n+\n+\t* target-ver-syms.sh: Support targets with both 32-bit and\n+\t64-bit modes.  Output preprocessor definitions instead of\n+\tcommand line otions.\n+\n+\t* Make-lang.in: Put target-ver-syms.sh output in d-confdefs.h.\n+\n+\t* package/simple.sh: Handle multilib.\n+\n+\t* phobos/configure.in: Use Automake, multilib.\n+\t* phobos/Makefile.am: New file.\n+\t* phobos/acinclude.m4: Fix quoting.\n+\n+\t* phobos/Makefile.in, phobos/configure: regenerated\n+\n+\t* patch-gcc-3.3.x, patch-gcc-3.4.x, patch-gcc-4.0.x,\n+\t  patch-gcc-4.1.x, lang-specs.h: Add %N spec code.\n+\n+\t* patch-build_gcc-4.0: Grab 64-bit libgphobos.a\n+\n+\t* dt.h, d-objfile.cc\n+\t(dt_size): Change return type to target_size_t.  Use target_size_t.\n+\t(dtnzeros, dtdword, dtxoff): Change count to target_size_t\n+\t(dtabytes, dtnbytes, dtawords, dtnwords, dtnbits): Change count to size_t\n+\t(dti32): added\n+\n+\t* d-todt.cc: Cleanup.\n+\n+\t* d-objfile.cc:\n+\t(dt2node): use Type::tsize_t for DT_word and DT_xoff\n+\n+\t* d-glue.cc:\n+\t(PtrExp::toElem): Use target_size_t for offset\n+\t(gcc_d_backend_init): Set CLASSINFO_SIZE and Tindex.\n+\t(AssignExp::toElem): Use tsize_t for _d_arraycopy arg\n+\t(CaseStatement::toIR): (not really a 64-bit change) Use int32 for\n+\tcase value to match libcall\n+\t(CatAssignExp::toElem): cleanup (not 64-bit)\n+\t(ForeachStatement::toIR): fix bug in key increment expression\n+\n+\t* d-codegen.{cc,h}\n+\t(AggLayout::addField): use target_size_t for offset\n+\n+\t* d-codegen.cc:\n+\t(...): LIBCALL_ARRAYCAST: Use size_t args (libcall already uses size_t)\n+\tLIBCALL_ARRAYCOPY: ditto\n+\t(convertTo): Use Type::tsize_t for _d_arraycat arguments\n+\n+\t* d-decls.cc\n+\t(ClassDeclaration::toVtblSymbol): Use Type::tindex for array size.\n+\t(FuncDeclaration::toThunkSymbol): Use target_ptrdiff_t\n+\n+\t* lang.opt: add -fmultilib-dir\n+\n+\t* d-lang.cc: Use -fmultilib-dir\n+\n+\t(d_init): Set global.params.isX86_64 if TARGET_64BIT.\n+\tSet CPU version symbol according to TARGET_64BIT.\n+\tRemove BitsPerPointer and BitsPerWord version symbols.\n+\n+\t* d-builtins2.cc\n+\t(d_gcc_magic_builtins_module): Change \"abi\" integer types\n+\tto \"C\".  Add \"pointer\" integer types.\n+\t(gcc_type_to_d_type): Use Type::tindex for array types.  Use whole\n+\tback-end size.\n+\n+\t* symbol.h\n+\t(Thunk): Use target_ptrdiff_t for offset.\n+\n+\t* dmd/mars.h: Define target_size_t and target_ptrdiff_t to allow use of\n+\t32-bit size-tracking variables when generating 32-bit code.\n+\n+\t* dmd/aggregate.h:\n+\t(CLASSINFO_SIZE) change to 'extern int' %%....\n+\t* dmd/cast.d: Use target_ptrdiff_t with isBaseOf.\n+\n+\t* dmd/class.c:\n+\t(ClassDeclaration::semantic): use PTRSIZE\n+\t(InterfaceDeclaration::semantic): Use sc->offset = PTRSIZE * 2 instead of\n+\t8 -- not sure what this is for...\n+\n+\t* dmd/dsymbol.[ch]\n+\t(Dsymbol::size): Change to target_size_t\n+\n+\t* dmd/init.h: ArrayInitializer::dim <- chg to target_size_t\n+\n+\t* dmd/aggregate.h: Use target_ptrdiff_t and target_size_t\n+\n+\t* dmd/typinf.c (TypeInfoStructDeclaration::toDt): Use dti32 for flags.\n+\t* dmd/toobj.c (Module::genmoduleinfo, ClassDeclaration::toObjFile,\n+\tInterfaceDeclaration::toObjFile): ditto\n+\n+\t* dmd/func.c: Use target_ptrdiff_t with isBaseOf.\n+\t(NewDeclaration::semantic): Allow Type::tuns64 if 64-bit.\n+\n+\t* dmd/mtype.c\n+\t(Type::init): set CLASSINFO_SIZE\n+\t(Type::dotExp): use Type::tsize_t for .offsetof property\n+\t(TypeArray::dotExp): use Type::tsize_t for _adReverse args\n+\t(TypeAArray::dotExp): use PTRSIZE to align keysize\n+\t(TypeStruct::dotExp): use Type::tsize_t for offset\n+\t(TypeStruct::alignsize): use target_size_t\n+\n+\t* dmd/mtype.h: Add Tindex global variable.\n+\t(Type): Change tindex to baseic[Tindex].\n+\t(Type::isBaseOf): use target_ptrdiff_t\n+\n+\t* dmd/expression.[ch]:\n+\t(SymOffExp): offset changed to target_size_t\n+\t(NewExp::semantic): use size_t as argument\n+\t(ArrayLiteralExp::toMangleBuffer, SymOffExp::toCBuffer): fix printf\n+\n+\t* dmd/declaration.c\n+\t(VarDeclaration::semantic): use sinteger_t for dim\n+\n+\t* dmd/declaration.h:\n+\t(Declaration::size): Use target_size_t\n+\t(VarDeclaration): Use target_size_t for offset\n+\n+\t* dmd/schope.h:\n+\t(Scope::offset) Use target_size_t.\n+\n+\t* dmd/statement.c:\n+\t(ForeachStatement::semantic): Change return value of _a*Apply* to\n+\tType::tint32.  Fix logic for allowed index variable types.\n+\tUse PTRSIZE to align keysize.\n+\n+\t* dmd/struct.c\n+\t(AggregateDeclaration::addField): use target_size_t\n+\n+\t* dmd/todt.c\n+\t(StructInitializer::toDt): Use target_size_t for offsets\n+\t(ClassDeclaration::toDt2): Use PTRSIZE\n+\n+\t* phobos/object.d, phobos/internal/object.d:\n+\t(Interface): Use ptrdiff_t for offset.\n+\t(*.toHash): cast pointer to size_t\n+\n+\t* phobos/internal/object.d: Use integer type definitions from\n+\tphobos/object.d.  Split %.*s args.\n+\n+\t* phobos/internal/adi.d:\n+\t(_adReverse): Use size_t for szelem.\n+\t* phobos/configure.in: fix multilib dir\n+\t* phobos/configure: updated\n+\n+\t* phobos/config/cb_unix.c: Removed.\n+\n+\t* phobos/config/gen_config1.c: Add ssize_t.\n+\n+\t* phobos/config/config-head: Use __builtin_Clong and __builtin_Culong.\n+\t* phobos/config/config-mid: Support X86_64 and other 64-bit CPUs.\n+\t* phobos/config/unix-mid: Some size_t and ssize_t arg/return type fixes.\n+\n+\t* phobos/config/darwin8/frag-gen, phobos/config/darwin8/frag-unix:\n+\tSupport 32- and 64-bit.\n+\t* phobos/config/mingw/frag-unix, phobos/config/skyos/frag-unix:\n+\tAdd ssize_t.\n+\n+\t* phobos/gcc/builtins.d: Update documentation\n+\n+\t* phobos/gcc/unwind.d: Use different builtin integer types.\n+\n+\t* phobos/internal/arraycat.d (_d_arraycopy): use size_t arg\n+\n+\t* phobos/std/c/fenv.d: Add field for 64-bit Linux.\n+\n+\t* phobos/std/c/linuxextern.d: Use C long for timezone.\n+\n+\t* phobos/std/c/stdio.d,\n+\t  phobos/std/c/stdlib.d, phobos/std/c/math.d,\n+\t  phobos/std/c/time.d: use C long types\n+\n+\t* phobos/std/stdint.d: Add C long types.\n+\tUse ptrdiff_t and size_t for *intptr_t types.\n+\n+\t* phobos/std/format.d: Formatting structs on X86_64 looses\n+\n+\t* phobos/internal/cast.d (_d_isbaseof2): change offset to size_t\n+\n+\t* phobos/internal/fpmath.d: Support 64-bit CPUs.\n+\n+\t* phobos/std/file.d: Type of stat.st_size may vary; use auto.\n+\t(Unix read): Make sure file's size is within range.\n+\n+\t* phobos/crc32.d, phobos/gcstats.d,\n+\tphobos/internal/qsortg.d:\n+\tphobos/internal/gc/gc.d (_d_arraycatnT),\n+\tphobos/internal/gc/gcold.d (_d_arraycatn),\n+\tphobos/internal/gc/gcx.d,\n+\tphobos/internal/mars.h,\n+\tphobos/std/base64.d, phobos/std/bitarray.d, phobos/std/math.d,\n+\tphobos/std/math2.d, phobos/std/md5sum.d, phobos/std/outbuffer.d,\n+\tphobos/std/path.d, phobos/std/string.d, phobos/std/uri.d\n+\tphobos/std/typeinfo/ti_AC.d,\n+\tuse size_t, ptrdiff_t/ssize_t\n+\n+\t* phobos/std/loader.d: Add definitions for 64-bit Mach-O objects.\n+\n+\t* phobos/std/openrj.d, phobos/std/loader.d, phobos/std/moduleinit.d,\n+\tphobos/std/socket.d, phobos/std/regexp.d, phobos/std/uri.\n+\td, phobos/std/zip.d: split '%.*s' args\n+\n+\t* phobos/std/typeinfo/ti_A*.d, phobos/std/typeinfo/ti_ptr.d:\n+\tfix compare methods\n+\n+\t* phobos/internal/gc/gc_dyld.c: use uintptr_t\n+\n+\t* phobos/std/c/stdio.d, phobos/internal/gc/gcgcc.d:\n+\tDon't use old version symbols.\n+\n+\t* phobos/std/c/mach/mach.d (natural_t): always a uint\n+\n+\t* phobos/etc/c/zlib.d: use Culog_t\n+\n+2007-02-13  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\t* setup-gcc.sh: Copy the removed files from the top-level\n+\tdirectory.\n+\n+2007-02-10  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\t* phobos/config.guess, phobos/config.sub, phobos/install-sh:\n+\tRemove files.\n+\n+\t* phobos/std/format.d (putAArray): account for\n+\talignment of the value\n+\n+\t* phobos/Makefile.in: fix metastrings.o\n+\n+2007-02-09  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\t* phobos/std/format.d (doFormat): use aligntsize\n+\n+\tRest of DMD 1.005 merge:\n+\n+\t* phobos/Makefile.in (MAIN_OBJS): add metastrings.o\n+\n+2007-02-08  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\t* d-lang.cc, lang.opt: support -v1 option\n+\n+\t* lang.opt (d_init_options): set global.params.Dversion\n+\n+\t* dmd-script: -v1 -> -fd-version=1\n+\n+\t* phobos/std/format.d (doFormat): Fix for var args differences\n+\n+\tInitial merge of DMD 1.005:\n+\n+\tdmd/attrib.c, dmd/attrib.h, dmd/cast.c, dmd/cond.c,\n+\tdmd/constfold.c, dmd/dsymbol.c, dmd/dsymbol.h, dmd/expression.c,\n+\tdmd/expression.h, dmd/func.c, dmd/idgen.c, dmd/inline.c,\n+\tdmd/lexer.c, dmd/lexer.h, dmd/mars.c, dmd/module.c, dmd/mtype.c,\n+\tdmd/mtype.h, dmd/optimize.c, dmd/parse.c, dmd/parse.h,\n+\tdmd/scope.c, dmd/statement.c, dmd/statement.h, dmd/template.c,\n+\tdmd/template.h, dmd/toobj.c, dmd/typinf.c: Merge.\n+\n+\tphobos/internal/aaA.d, phobos/internal/gc/gc.d,\n+\tphobos/internal/object.d, phobos/linux.mak, phobos/std/c/stdlib.d,\n+\tphobos/std/conv.d, phobos/std/ctype.d, phobos/std/format.d,\n+\tphobos/std/regexp.d, phobos/std/zlib.d, phobos/std.ddoc,\n+\tphobos/win32.mak: Merge.\n+\n+\tphobos/std/metastrings.d: New file\n+\n+2007-02-05  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\tRelease GDC 0.22\n+\n+\t* d-codegen.cc (twoFieldType): Fix back end -> front end type\n+\tmapping.\n+\n+\t* Make-lang.in: Enable ELFOBJ to put some RTTI in the read-only\n+\tdata section.\n+\n+\t* GDC.html: Update\n+\n+2007-02-04  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\t* phobos/gcc/cbridge_time.c (_d_gnu_cbridge_tza),\n+\tphobos/std/date.d: Fix timezone adjust sign\n+\n+2007-02-03  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\t* phobos/config/unix-mid: Correctly initialize sockaddr*\n+\t(Bugzilla 818)\n+\n+\t* dmd-script: Fix -H* options (Bugzilla 896).\n+\tSupport -framework. Fix error message.\n+\n+\t* d-lang.cc (d_write_global_declarations), patch-gcc-4.1.x:\n+\tFixes for dwarf2out ICEs\n+\n+\t* d-objfile.cc (check_static_sym): Fix setting TREE_CONSTANT.\n+\n+\tRest of DMD 1.004 merge:\n+\n+\t* gcc-mars.cc, gdc-version: Update\n+\n+\t* phobos/std/regexp.d: update\n+\n+\t* phobos/internal/gc/gcold.d (_d_newarrayip):\n+\n+\t* phobos/internal/gc/gc.d: Fix argument and result types.\n+\n+\t* phobos/config/unix-head, phobos/config/unix-mid: Update\n+\n+\t* phobos/Makefile.in: Update for files removed in DMD 1.004\n+\n+\t* d-decls.cc (TypedefDeclaration::toInitializer): Copy\n+\tfrom dmd/tocsym.c.  Create the Sdt here.\n+\n+\t* dmd/toobj.c (TypedefDeclaration::toObjFile): Update\n+\tfor toInitializer change\n+\n+\t* dmd/mtype.c (TypeArray::dotExp): Fix library call decls\n+\n+\t* d-lang.cc: Update\n+\n+\t* d-codegen.[ch], d-glue.cc: Update memory allocation library\n+\tcalls.\n+\n+\t* d-lang.cc (d_write_global_declarations): call\n+\temit_debug_global_declarations only for GCC 4.0\n+\n+\t* dmd/mtype.c (TypeArray::dotExp): update\n+\n+\t* phobos/config/unix-head, phobos/config/unix-mid: update\n+\n+\t* phobos/internal/gc/gcold.d: Use old GDC modifications.\n+\n+2007-02-02  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\tInitial merge DMD 1.004:\n+\n+\t* dmd/aggregate.h, dmd/attrib.c, dmd/attrib.h, dmd/declaration.c,\n+\tdmd/declaration.h, dmd/dsymbol.c, dmd/dsymbol.h, dmd/expression.c,\n+\tdmd/import.c, dmd/import.h, dmd/inline.c, dmd/mars.c, dmd/mars.h,\n+\tdmd/module.c, dmd/module.h, dmd/mtype.c, dmd/mtype.h,\n+\tdmd/struct.c, dmd/template.c, dmd/template.h, dmd/tocsym.c,\n+\tdmd/todt.c, dmd/toobj.c, dmd/typinf.c: Merge DMD 1.004\n+\n+\t* phobos/internal/aaA.d, phobos/internal/adi.d,\n+\tphobos/internal/arraycast.d, phobos/internal/arraycat.d,\n+\tphobos/internal/gc/gc.d, phobos/internal/gc/gcx.d,\n+\tphobos/internal/gc/linux.mak, phobos/internal/gc/win32.mak,\n+\tphobos/internal/object.d, phobos/linux.mak, phobos/object.d,\n+\tphobos/std/c/linux/linux.d, phobos/std/compiler.d,\n+\tphobos/std/file.d, phobos/std/gc.d, phobos/std/outbuffer.d,\n+\tphobos/std/random.d, phobos/std/regexp.d,\n+\tphobos/std/typeinfo/ti_AC.d, phobos/std/typeinfo/ti_Acdouble.d,\n+\tphobos/std/typeinfo/ti_Acfloat.d, phobos/std/typeinfo/ti_Acreal.d,\n+\tphobos/std/typeinfo/ti_Adouble.d, phobos/std/typeinfo/ti_Afloat.d,\n+\tphobos/std/typeinfo/ti_Ag.d, phobos/std/typeinfo/ti_Aint.d,\n+\tphobos/std/typeinfo/ti_Along.d, phobos/std/typeinfo/ti_Areal.d,\n+\tphobos/std/typeinfo/ti_Ashort.d, phobos/std/typeinfo/ti_C.d,\n+\tphobos/std/typeinfo/ti_cdouble.d, phobos/std/typeinfo/ti_cfloat.d,\n+\tphobos/std/typeinfo/ti_char.d, phobos/std/typeinfo/ti_creal.d,\n+\tphobos/std/typeinfo/ti_dchar.d, phobos/std/typeinfo/ti_delegate.d,\n+\tphobos/std/typeinfo/ti_double.d, phobos/std/typeinfo/ti_float.d,\n+\tphobos/std/typeinfo/ti_ptr.d, phobos/std/typeinfo/ti_real.d,\n+\tphobos/std/typeinfo/ti_void.d, phobos/std/typeinfo/ti_wchar.d,\n+\tphobos/win32.mak: Merge DMD 1.004\n+\n+\t* phobos/std/typeinfo/ti_Aa.d, phobos/std/typeinfo/ti_Adchar.d,\n+\tphobos/std/typeinfo/ti_Aubyte.d, phobos/std/typeinfo/ti_Auint.d,\n+\tphobos/std/typeinfo/ti_Aulong.d, phobos/std/typeinfo/ti_Aushort.d,\n+\tphobos/std/typeinfo/ti_Awchar.d: Removed in DMD 1.004\n+\n+\t* phobos/internal/gc/gcold.d: New in DMD 1.004\n+\n+2007-02-01  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\t* d-lang.cc (d_write_global_declarations): Emit debug info.\n+\n+\t* d-codegen.cc (twoFieldType): Fix debugging information.\n+\t* d-objfile.cc (initTypeDecl): Ditto.\n+\n+\t* d-glue.cc (PtrExp::toElem): Don't wrap the result in\n+\ta NOP_EXPR.\n+\n+\t* Make-lang.in: Add d-tree.def to dependencies\n+\n+2007-01-30  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\tGCC 4.1.x changes:\n+\n+\t* GDC.html, INSTALL, INSTALL.html, README: update\n+\n+\t* dmd/idgen.c, dmd/impcnvgen.c, dmd/mtype.h: Change to allow\n+\tcompilation as C.\n+\n+\t* patch-gcc-4.1.x, patch-toplev-4.1.x: New files\n+\n+\t* Make-lang.in: Use $(version) instead of $(gcc_version).\n+\tAdd d-bi-attrs-41.h.  Use C for generator programs instead of C++.\n+\n+\t* d-bi-attrs-41.h: New file.\n+\n+\t* d-builtins.c: update\n+\n+\t* d-builtins2.cc: Do not associate d_gcc_builtin_va_list_d_type with\n+\tva_list_type_node.  Do this for GCC 4.0 and 4.1.\n+\n+\t* d-codegen.cc: Use CtorEltMaker.\n+\t(maybeExpandSpecialCall): Cast d_gcc_builtin_va_list_d_type to\n+\tva_list_type_node.\n+\t(hostToTargetString): Update.\n+\n+\t* d-codegen.h: Add CtorEltMaker class for before/after 4.1.x\n+\tcompatibility.\n+\n+\t* d-convert.cc: Add special case for pointer/int comparison\n+\n+\t* d-decls.cc: Do not use SET_DECL_ASSEMBLER_NAME for CONST_DECLs\n+\n+\t* d-gcc-includes.h: Include vec.h\n+\n+\t* d-glue.cc: Use CtorEltMaker.\n+\t(gcc_d_backend_init): Call default_init_unwind_resume_libfunc\n+\n+\t* d-lang.cc: Add d_types_compatible_p hook for va_list conversion\n+\n+\t* d-lang.h: Update\n+\n+\t* d-objfile.cc: CtorEltMaker.\n+\n+\t* phobos/std/conv.d: Do not assume signed integer wraparound.\n+\n+2007-01-28  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\t* d-asm-i386.h, d-codegen.cc, d-gcc-real.cc,\n+\td-decls.cc, d-glue.cc, d-lanc.cc: various fixes\n+\n+\t* d-codegen.cc, d-codegen.h, d-glue.cc, d-lang.h:\n+\tRemove bit array code\n+\n+2007-01-27  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\t* d-asm-i386.h: fix fistp, lmsw, lldt, mov[sz]x, setCC, smsw, and\n+\tsldt instructions (Bugzilla 836, 837, 838, 839, 841, 843, 844).\n+\tAlso r[co][lr].\n+\n+\t* d-glue.cc (StringExp::toElem): Correct termination of wchar\n+\tand dchar (Bugzilla 889)\n+\n+2007-01-11  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\t* INSTALL.html: fix corruption\n+\n+2007-01-03  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\tRelease GDC 0.21\n+\n+\t* GDC.html: New file.\n+\n+\t* README: Update, refer to GDC.html\n+\n+\tRest of DMD 1.00 merge:\n+\n+\t* d-codegen.cc: Patch from Anders Bj\ufffdrklund for GCC 3.3\n+\n+\t* d-glue.cc (FuncDeclaration::toObjFile): Fix shouldDefer/outputStage\n+\tlogic.\n+\n+\t* dmd/attrib.c (PragmaDeclaration::semantic): uint -> unsigned\n+\n+\t* dmd/module.c (load): output to stdmsg\n+\n+\t* dmd/mtype.c: revert '@' mangling changes\n+\n+\t* gdc-version, gcc-mars.cc: update\n+\n+\t* phobos/config/unix-mid: Support more functions\n+\n+\t* phobos/acinclude.m4, phobos/config/gen_unix.c (c_pthread):\n+\tSupport more types\n+\n+\t* phobos/configure, phobos/config.h.in: update\n+\n+\t* phobos/config/darwin8/frag-unix: update\n+\n+\tInitial merge of DMD 1.00:\n+\n+\t* dmd/cond.c, dmd/constfold.c, dmd/delegatize.c, dmd/dsymbol.c,\n+\tdmd/enum.c, dmd/expression.c, dmd/expression.h, dmd/init.c,\n+\tdmd/inline.c, dmd/mars.c, dmd/module.c, dmd/module.h, dmd/mtype.c,\n+\tdmd/parse.c, dmd/statement.c, dmd/struct.c, dmd/template.c,\n+\tdmd/todt.c: Merge 1.00\n+\n+\t* internal/gc/gc.d, phobos/linux.mak,\n+\tphobos/std/c/linux/linux.d.orig-dmd, phobos/std/c/stdlib.d,\n+\tphobos/std/conv.d, phobos/win32.mak: Merge 1.00\n+\n+\t* phobos/std/c/linux/pthread.d.orig-dmd: New file (originally\n+\tpthread.d DMD)\n+\n+\t------------------------\n+\n+\t* dmd/init.c (ArrayInitializer::semantic),\n+\t* dmd/root.c (OutBuffer::write4): 64-bit host cleanup\n+\n+\t* d-asm-i386.h: cleanup, saftey\n+\n+2007-01-02  DF  <dvdfrdmn@users.sf.net>\n+\n+\t* d-codegen.cc (convertTo): Use 64-bit for Tarray, Tsarray conversion.\n+\n+\t* d-codegen.{h, cc} (darrayVal): use uinteger_t arg\n+\n+\f\n+Copyright (C) 2007 Free Software Foundation, Inc.\n+\n+Copying and distribution of this file, with or without modification,\n+are permitted in any medium without royalty provided the copyright\n+notice and this notice are preserved."}, {"sha": "23dc712dbf3c9532951dbfc5bebda4f1755c0921", "filename": "gcc/d/ChangeLog-2008", "status": "added", "additions": 331, "deletions": 0, "changes": 331, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2FChangeLog-2008", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2FChangeLog-2008", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2FChangeLog-2008?ref=b4c522fabd0df7be08882d2207df8b2765026110", "patch": "@@ -0,0 +1,331 @@\n+2008-12-12  Arthur Loiret  <arthur.loiret@u-psud.fr>\n+\n+\tBugzilla 929:\n+\n+\t* dmd/mtype.c: Provide isZeroInit() overload in TypeAArray that\n+\treturns TRUE.\n+\t* dmd/mtype.h: Add prototype for TypeAArray::isZeroInit().\n+\n+\t* dmd2/mtype.c, dmd2/mtype.h: Ditto.\n+\n+2008-07-21  David Friedman  <David Friedman>\n+\n+\t* dmd/root.c, dmd2/root.c: Fix earlier patching error.\n+\n+\t* phobos/config/x3.c, phobos2/config/x3.c: Fix problem when\n+\tbuilding under MSYS.\n+\n+\t* config-lang.in: Remove lang_requires.\n+\n+2008-07-20  David Friedman  <David Friedman>\n+\n+\t* dmd/expression.c, dmd2/expression.c: Make integer conversion\n+\tfix work for other hosts/targets.\n+\n+2008-07-20  Arthur Loiret  <arthur.loiret@u-psud.fr>\n+\n+\t* dmd/expression.c: Fix integer conversion routines on x86_64.\n+\tPatch from downs <default_357-line@yahoo.de>, thanks!\n+\t* dmd2/expression.c: Likewise.\n+\n+\t* config-lang.in: Add lang_requires=\"c c++\".\n+\n+2008-07-19  David Friedman  <David Friedman>\n+\n+\t* patches/patch-gcc-4.0.x, patches/patch-gcc-4.1.x: Fix infinite\n+\tloop bug in patch.\n+\t* patches/patch-apple-gcc-4.0.x: Ditto.\n+\n+\t* d-lang.cc: Do not assume D_OS_VERSYM is defined.\n+\tHandle TARGET_xxx_CPP_BUILTINS macros for more targets.\n+\n+2008-07-17  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+        * dmd-script: Append an exe suffix to executables when the\n+        target is Windows.\n+\n+\t* phobos/gcc/deh.d, phobos2/gcc/deh.d: Fix for sjlj exceptions.\n+\n+2008-06-16  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\t* d-decls.cc: Correct logic for output constanting vars for V1.\n+\n+2008-06-01  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\tMerge DMD.1.30 and 2.014\n+\n+\t* dmd-script: Implement -man, -lib and single-object features.\n+\n+\t* phobos2/Makefile.am: add bigint\n+\n+\t* phobos2/config/{ldfuncs,ldfuncs-darwin,ldfuncs-ppclinux,noldfuncs},\n+\tMerge nanl change from std/c/math.d\n+\n+\t* phobos2/gcc/support.d: Merge std/c/math.d changes.\n+\n+\t* d-objfile.cc (obj_append): Implement.\n+\t* phobos2/std/c/unix/unix.d: Merge linux.d and socket.d changes\n+\n+\t* d-glue.cc, d-irstate.cc, d-lang.cc: Update\n+\n+\t* dmd/..., dmd2/..., phbobos/..., phobos2/...: Merge\n+\n+2008-05-26  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\t* asmstmt.cc, d-decls.cc, d-glue.cc, d-misc.c, d-objfile.{cc, h}:\n+\tFix for -combine compilation.  Remove fileContext global and clean\n+\tup generation of unique symbol names.\n+\n+\t* phobos/internal/object.d: Correct merge error\n+\n+\t----\n+\n+\t* dmd-script, lang.opt, d-lang.cc, : support -ignore\n+\n+\tMerge DMD 1.029 and 2.013\n+\n+\t* phobos2/std/perf.d: use std.c.unix.unix\n+\n+2008-05-22  Arthur Loiret  <arthur.loiret@u-psud.fr>\n+\n+\t* target-ver-syms.sh: Add missing CPUs and fix\n+\td_cpu_versym/d_cpu_versym64 for each.\n+\n+\t* d-lang.cc: Fix build on non biarched 64-bit archs (alpha, ia64, ...)\n+\tand fix 64-bit cpu detection.\n+\n+\t* Move patch-* to patches/\n+\t* setup-gcc.sh: Update.\n+\n+2008-05-10  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\t* lang-specs.h: Support a \"cc1d\" spec. (Bugzilla 2068)\n+\n+\tMerge DMD 1.028 and 2.012\n+\n+\t* d-codegen.{h,cc}: Add postblitting array libcalls.\n+\n+\t* phobos2/internal/arrayassign.d\n+\t(_d_arraysetassign, _d_arraysetctor): Use size_t.\n+\n+\t* d-glue.cc (AssignExp::toElem): Postblit-aware code\n+\n+\t* phobos2/Makefile.am: Add arrayssign.d. Remove math2.d.\n+\n+\t* dmd/..., dmd2/..., phbobos/..., phobos2/...: Merge\n+\n+2008-05-03  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\t* d-dmd-gcc.h, d-glue.cc, dmd*/toobj.c: Cleanup: Remove unused\n+\td_gcc_aggregate_dtors.\n+\n+2008-05-02  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\tMerge DMD 1.027 and 2.011\n+\n+\t* termios.d: Point to std.c.unix.unix.  Leave original\n+\ttermios.d as termios.d.orig-dmd\n+\n+\t* asmstsmt.cc: Implement blockExit\n+\n+\t* phobos2/config/unix.x3: Add termios stuff\n+\n+\t* phobos2/std/c/unix/unix.d: Merge new funcs from std.c.linux.d\n+\n+\t* d-objfile.cc: Implement stub obj_startaddress\n+\n+\t* d-glue.cc (ForStatement::toIR): condition may be NULL\n+\t(DeleteExp::toIR): Use libcalls for interfaces\n+\n+\t* dmd*/clone.c, dmd*/e2ir.c: New files.\n+\n+\t* Make-lang.in: Add new clone.c\n+\n+\t* d-codegen.{h, cc}, d-glue.cc: Use _d_callinterfacefinalizer.\n+\tAlso use _d_delinterface instead of casting.\n+\n+\t* dmd/..., dmd2/..., phbobos/..., phobos2/...: Merge\n+\n+2008-04-27  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\tMerge DMD 1.026 and 2.010\n+\n+\t* dmd/..., dmd2/..., phbobos/..., phobos2/...: Merge\n+\n+\t---\n+\n+\t* d-lang.cc (d_write_global_declarations): Make earlier change\n+\tregarding cgraph_optimize only apply to 4.0.x.\n+\n+\t---\n+\n+\t* d-decls.cc (VarDeclartion::toSymbol): Change for\n+\tV2 STCmanifest.  Make more constant vars have\n+\tstatic storage (instead of making CONST_DECLs) in\n+\tboth V1 and V2.\n+\n+\t* dmd2/constfold.c (Cmp): Compare wchar\tand dchar\n+\tstrings portably.\n+\n+\t* asmstmt.cc (ExtAsmStatement::semantic): Heuristic\n+\tfor evaluating operands:  If an input operand, evaluate.\n+\n+\t* d-asm-i386.h: Make previous change apply to V1.\n+\n+\t* d-glue.cc (TypeEnum::toCtype): Update.\n+\n+\tPhobos changes (applies to V2 Phobos as well):\n+\n+\t* phobos/Makefile.am, phobos/configure.in:\n+\tDeal with strerror_r portability.\n+\n+\t* phobos/Makefile.in, phobos/configure, phobos/config.h.in:\n+\tUpdated.\n+\n+\t* phobos/gcc/cbridge_strerror.c: New file.\n+\n+\t* phobos/std/c/string.d: Replace non-portable strerror_r with\n+\t_d_gnu_cbridge_strerror.\n+\n+\t* phobos/std/file.d, phobos/std/loader.d, phobos/std/process.d,\n+\tphobos/std/socket.d, phobos/std/stdio.d: Use\n+\t_d_gnu_cbridge_strerror.\n+\n+\tMerge DMD 2.009:\n+\n+\t* dmd2/..., phobos2/...: Merge.\n+\n+\tMerge DMD 1.025:\n+\n+\t* dmd/..., phobos/...: Merge.\n+\n+2008-04-25  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\t* asmstmt.cc, d-asm-i386.h: Handle some other cases\n+\tfor constant floating point operands.\n+\n+2008-04-19  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\t* dmd/toobj.c, dmd2/toobj.c (EnumDeclaration::toObjFile):\n+\tOutput initializer correctly.\n+\n+\t* d-decls.cc (EnumDeclaration::toInitializer): Correctly\n+\tset up initializer symbol. (Bugzilla 1746)\n+\n+2008-04-17  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\t* dmd/toobj.c (InterfaceDeclaration::toObjFile): Fix error.\n+\t(Bugzilla 1844)\n+\n+2008-04-16  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\t* d-codegen.{h, cc}: Clean up nested function / nested class /\n+\tclosure code.\n+\n+\t* phobos/std/c/stdlib.d, phobos2/...: Remove comment that hides\n+\tatof. (Bugzilla 1888)\n+\n+2008-03-11  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\t* d-glue.cc: cleanup\n+\n+\t* dmd/expression.c (DotVarExp::semantic): Apply fix from dmd2/\n+\n+\t* dmd2/expression.c (DotVarExp::semantic): Move fix to\n+\tbetter location.\n+\n+2008-03-09  David Friedman  <dvdfrdmn@users.sf.net>\n+\n+\t* dmd2/func.c (FuncDeclaration::needsClosure): Closures fix:\n+\tChange test from isVirtual to isThis.\n+\n+\t* dmd2/expression.c (DotVarExp::semantic): Note change from DMD.\n+\n+\t----\n+\n+\t* patch-build_gcc-5465: Correctly build driver-driver\n+\n+\t* phobos*/Makefile.am (MAIN_OBJS): Add std/cover.o\n+\n+\t* phobos2/std/file.d: use 'mkdir -p' in unittest\n+\n+\t* d-builtins2.cc: Fixes for pointer-to-function types (for V2)\n+\n+\t* d-codegen.cc: Add _d_allocmemory libcall.\n+\t(emitLocalVar): Rework.\n+\t(var): New function to handle static-frame/closure variables\n+\t(convertTo): Use typesSame instead of typesCompatible\n+\t(assignValue): New function to handle Exp(v=value) vs. Exp(value)\n+\t(getFrameForFunction, getFrameForNestedClass): New interface\n+\tto get frames for nested functions.\n+\t(functionNeedsChain): Return false for nested functions that\n+\ttake closures.\n+\n+\t* d-decls.cc: Changes for const/invariant/STCinit\n+\n+\t* d-glue.cc: Use new interface for nested functions.  Use\n+\tIRState::var instead of v->toSymbol()->Stree.  Create\n+\tclosures.\n+\n+\t* d-lang.cc: Implement CONVERT_PARM_FOR_INLINING hook\n+\n+\t* d-objfile.cc: Add case for closure-using function when\n+\tsetting the link-once attribute.\n+\n+\t* package/simple.sh: install .../include/d2\n+\n+\t* patch-build_gcc-4.0, patch-build_gcc-5465: Support D 2.0\n+\tincludes and libraries.\n+\n+\t* phobos2/std/bitmanip.d: Apply previous bitarray.d changes.\n+\n+\t* phobos*/std/typeinfo/ti_ptr.d (getHash): Cast to hash_t.\n+\n+\t* d-decls.cc (VarDeclaration::toSymbol): For D 2.0, use\n+\tisInvariant() and STCinit as criteria for making CONST_DECLs and\n+\tsetting TREE_READONLY.\n+\n+\t* phobos2/std/c/linux/linux.d: Do not import std.c.dirent.\n+\n+\t* phobos2/std/c/dirent.d: Deprecated std.c.dirent.\n+\n+\t* phobos2/std/c/unix/unix.d: Move dirent/DIR routines here.\n+\n+\t* phobos*/std/c/darwin/ldblcompat.d: declare constants as 'string'\n+\n+\tMerge DMD 2.008:\n+\n+\t* dmd2/..., phobos2/...: Merge.\n+\n+\tMerge DMD 1.024:\n+\n+\t* phobos*/config/unix.x3: ensure MSG_NOSIGNAL is defined\n+\n+\t* dmd/..., phobos/...: Merge.\n+\n+\t------\n+\n+\t* patch-apple-gcc-4.0.x, patch-apple-gcc-5465: Include patch\n+\tfor SRA pass like the other 4.x patches.\n+\n+\t* d-codegen.cc (convertTo): Ensure pointers are cast to an\n+\tunsigned type.\n+\n+\t* d-objfile.cc (dt2tree_list_of_elems): Always generate a\n+\tCONSTRUCTOR for struct data.\n+\t(ObjectFile::ObjectFile): Use NULL_TREE for file context instead\n+\tof TRANSLATION_UNIT_DECL.\n+\n+\t* d-lang.cc (d_write_global_declarations): Call\n+\tdebug_hooks->global_decl before cgraph_optimize so that nested\n+\tclass functions do not get passed to dwarf2out before the\n+\touter class functions.\n+\n+\t* Rename patch-build_gcc-4.0 to patch-build_gcc-4.0.x\n+\n+\f\n+Copyright (C) 2008 Free Software Foundation, Inc.\n+\n+Copying and distribution of this file, with or without modification,\n+are permitted in any medium without royalty provided the copyright\n+notice and this notice are preserved."}, {"sha": "90a204d0497e23348ab1af4834685f519be4c3de", "filename": "gcc/d/ChangeLog-2009", "status": "added", "additions": 185, "deletions": 0, "changes": 185, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2FChangeLog-2009", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2FChangeLog-2009", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2FChangeLog-2009?ref=b4c522fabd0df7be08882d2207df8b2765026110", "patch": "@@ -0,0 +1,185 @@\n+2009-12-28  michaelp  <baseball.mjp@gmail.com>\n+\n+\tMerge with DMD 1.043\n+\n+\t* phobos/configure.in: Changed part of phobos configure.\n+\n+\t* samples/README, samples/samples.sh: Uploading the start of the some\n+\tsmall tests to help in the testing of GDC/D components.\n+\n+\t* Make-lang.in,\td-lang.cc, dmd/machobj.c, phobos/config/unix.x3,\n+\tphobos/std/file.d, phobos/std/moduleinit.d, phobos/std/socket.d: Fixed\n+\tproblem when building on Mac OS X.\n+\n+2009-12-05  michaelp  <baseball.mjp@gmail.com>\n+\n+\tMerge with DMD 1.042\n+\n+\t* Make-lang.in: Added async.dmd.o\n+\n+\t* d-asm-i386.h, d-codegen.h: Merge changes from\tdmd/constfold.c.\n+\n+\t* d-codegen.h, phobos2/aclocal.m4, phobos2/configure.in: Fixed\n+\tproblems with D2.\n+\n+2009-11-22  michaelp  <baseball.mjp@gmail.com>\n+\n+\tMerge with DMD 1.041\n+\n+\t* Make-lang.in: Update for files added in DMD 1.041.\n+\n+\t* d-backendfunctions.c: Added stubs for functions in the backend that\n+\tcannot be included in the front end source.\n+\n+\t* dmd-script: Added Bitbucket page to display for gdmd wrapper script.\n+\n+2009-11-07  Vincenzo Ampolo  <vincenzo.ampolo@gmail.com>\n+\n+\tChanges to GCC-4.4.x branch:\n+\n+\t* tools/makewebstatistics.d: Added d tool to generate webstats about\n+\tdstress in D2.\n+\n+2009-10-25  michaelp  <baseball.mjp@gmail.com>\n+\n+\tMerge with DMD 1.040\n+\n+\t* dmd/..., phobos/...: Now working for D1 (Not on GCC 4.3.4?)\n+\n+\t* asmstmt.cc: Merge from dmd/statement.c\n+\n+\t* phobos/acinclude.m4, phobos/configure.in, phobos/phobos-ver-syms.in:\n+\tPosix is now defined.\n+\n+2009-10-24  Vincenzo Ampolo  <vincenzo.ampolo@gmail.com>\n+\n+\t* dmd/attrib.c, dmd/cast.c, dmd/class.c, dmd/constfold.c,\n+\tdmd/declaration.c, dmd/dsymbol.c, dmd/expression.c, dmd/toobj.c: Fixes\n+\tsome errors in the DMD v1 frontend. Trying to fix DMD 1.039, but still\n+\tno fix. The problem may be in phobos then.\n+\n+\tChanges to GCC-4.4.x branch:\n+\n+\t* d-lang.cc, d-lang.h setup-gcc.sh, patches/patch-gcc-4.4.x,\n+\tpatches/patch-toplev-4.4.x: Applied Eldar patches for gcc 4.4.0\n+\n+2009-10-07  Vincenzo Ampolo  <vincenzo.ampolo@gmail.com>\n+\n+\t* dmd2/attrib.c, dmd2/class.c, dmd2/declaration.c, dmd2/doc.c,\n+\tdmd2/dsymbol.h, dmd2/func.c, dmd2/parse.c, dmd2/statement.c,\n+\tdmd2/template.c, dmd2/toir.c: 2.015 WORKING ;)\n+\n+\t* dmd2/parse.c: Fixed problem with static if.\n+\n+\t* dmd2/template.c: Fixed problem with tuples.\n+\n+\t* Makefile-lang.in: Update for files added in DMD 2.015.\n+\n+2009-10-01  Vincenzo Ampolo  <vincenzo.ampolo@gmail.com>\n+\n+\tChanges to 2.032 branch:\n+\n+\t* dmd2/..., phobos2/...: Force merge with 2.032 - NOT WORKING AT ALL.\n+\t- Adding new files.\n+\n+2009-10-04  michaelp  <baseball.mjp@gmail.com>\n+\n+\tMerge with DMD 1.039\n+\n+\t* d-decls.cc: Merge changes from dmd/mtype.h.\n+\n+\t* phobos/internal/aaA.d, phobos/std/stdio.d: Small Phobos fix.\n+\n+2009-09-30  Vincenzo Ampolo  <vincenzo.ampolo@gmail.com>\n+\n+\t* phobos2/internal/aaA.d, phobos2/linux.mak, phobos2/std/algorithm.d,\n+\tphobos2/std/functional.d, phobos2/std/math.d, phobos2/std/thread.d:\n+\tDMD 2.015 Phobos changes.\n+\n+\t* Make-lang.in: Fixed a problem introduced by Michael modifying a\n+\tcommon file between D1 and D2.\n+\n+\n+2009-09-29  michaelp  <baseball.mjp@gmail.com>\n+\n+\tMerge with DMD 1.036\n+\n+2009-09-28  Vincenzo Ampolo  <vincenzo.ampolo@gmail.com>\n+\n+\tMerge with DMD 2.015\n+\n+\t* dmd2/mtype.h, dmd2/parse.c: Fixed parser in D2.\n+\n+\t* dmd2/template.c, dmd2/toobj.c: Other fixes.\n+\n+2009-09-28  michaelp  <baseball.mjp@gmail.com>\n+\n+\tMerge with DMD 1.035\n+\n+\t* d-objfile.cc: Merge changes from dmd/attrib.c.\n+\n+\t* phobos/Makefile.in, phobos/internal/arraydouble.d,\n+\tphobos/internal/arrayfloat.d: Included arraydouble, arrayfloat, and\n+\tarrayreal in libphobos Makefile.\n+\n+\t* asmstmt.cc, dmd/statement.c, dmd/statement.h, phobos/std/math.d: Fixed\n+\tPhobos std.math bug.\n+\n+2009-09-25  michaelp  <baseball.mjp@gmail.com>\n+\n+\tMerge with DMD 1.033\n+\n+2009-09-17  Vincenzo Ampolo  <vincenzo.ampolo@gmail.com>\n+\n+\t* dmd2.032/...: Initial import of version 2.032.\n+\n+\t* setup-gcc.sh, dmd/.svn/...: Removed .svn directory.\n+\n+2009-09-13  michaelp  <baseball.mjp@gmail.com>\n+\n+\t* phobos/std/boxer.d phobos/std/dateparse.d: Fixed phobos build and\n+\tpossible implicit conversion errors in boxer.d.\n+\n+\t* d-objfile.cc: Removed assert(0) line 926.\n+\n+2009-09-13  Vincenzo Ampolo  <vincenzo.ampolo@gmail.com>\n+\n+\t* History gdc-version: Changed version.\n+\n+\t* phobos2/config/x3, setup-gcc.sh: Added support for DMD 2.\n+\n+\t* phobos2/std/c/string.d, phobos2/std/contracts.d: Fixed a std.string\n+\tbug following these guidelines:\n+\thttp://www.digitalmars.com/d/archives/D/gnu/strerror_r_3403.html\n+\n+\t* phobos2/std/contracts.d, phobos2/std/date.d, phobos2/std/dateparse.d,\n+\tphobos2/std/file.d, phobos2/std/md5.d, phobos2/std/path.d,\n+\tphobos2/std/random.d, phobos2/std/stdio.d: Fix DMD 2 for GCC-4.3.4\n+\n+2009-09-11  Vincenzo Ampolo  <vincenzo.ampolo@gmail.com>\n+\n+\tSwitching to Mercurial branch system.\n+\n+\t* d/...: Setting up default branch with GCC-4.3.x support.\n+\n+\t* branches/gcc-4.1/...: Starting gcc-4.1.x stable branch.\n+\n+\t* setup-gcc.sh, target-ver-syms.sh: Fixed permission problems in\n+\tbash scripts.\n+\n+2009-09-10  Vincenzo Ampolo  <vincenzo.ampolo@gmail.com>\n+\n+\t* trunk/...: Import of gdc 0.24 stable into bitbucket.\n+\n+2009-01-31  Arthur Loiret  <arthur.loiret@u-psud.fr>\n+\n+\t* d-glue.cc, d-objfile.cc, d-codegen.cc, d-lang.h, d-builtins2.cc,\n+\td-convert.cc, d-codegen.h: Replace calls to build macro by appropriate\n+\tbuildN function (build is removed in GCC > 4.1).\n+\n+\f\n+Copyright (C) 2009 Free Software Foundation, Inc.\n+\n+Copying and distribution of this file, with or without modification,\n+are permitted in any medium without royalty provided the copyright\n+notice and this notice are preserved."}, {"sha": "40c8fa45cd3c51ea6e1509fbd5c65fef7514d6f3", "filename": "gcc/d/ChangeLog-2010", "status": "added", "additions": 1484, "deletions": 0, "changes": 1484, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2FChangeLog-2010", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2FChangeLog-2010", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2FChangeLog-2010?ref=b4c522fabd0df7be08882d2207df8b2765026110", "patch": "@@ -0,0 +1,1484 @@\n+2010-12-28  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d/d-lang.cc, d/patches/patch-apple-gcc-5465,\n+\td/patches/patch-apple-gcc-5664, d/patches/patch-gcc-4.0.x,\n+\td/patches/patch-gcc-4.1.x, d/patches/patch-gcc-4.2.x,\n+\td/patches/patch-gcc-4.3.x, d/patches/patch-gcc-4.4.x,\n+\td/patches/patch-gcc-4.5.x: New function added to langhooks:\n+\td_dump_tree\n+\t[8a2198026630]\n+\n+\t* d/d-lang.cc, d/patches/patch-apple-gcc-5465,\n+\td/patches/patch-apple-gcc-5664, d/patches/patch-gcc-4.0.x,\n+\td/patches/patch-gcc-4.1.x, d/patches/patch-gcc-4.2.x,\n+\td/patches/patch-gcc-4.3.x, d/patches/patch-gcc-4.4.x,\n+\td/patches/patch-gcc-4.5.x, d/phobos2/Makefile.am,\n+\td/phobos2/Makefile.in: New function added to langhooks:\n+\td_gimplify_expr\n+\t[0d43883dcc75]\n+\n+\t* d/d-builtins2.cc, d/druntime/core/stdc/complex.d,\n+\td/druntime/rt/complex.c, d/phobos2/Makefile.am, d/phobos2/Makefile.in:\n+\tD2 - Use GCC builtins in core.stdc.complex\n+\t[d13bd5912295]\n+\n+\t* d/d-codegen.cc, d/d-glue.cc: Issue #109 - segfault in memcpy()\n+\t[80c61a61f254]\n+\n+2010-12-23  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d/Make-lang.in, d/asmstmt.cc, d/d-bi-attrs-45.h, d/d-c-stubs.c,\n+\td/d-cppmngl.cc, d/d-gcc-includes.h, d/d-glue.cc, d/d-lang-45.h,\n+\td/d-lang.cc, d/dmd2/*, d/druntime/*, d/phobos2/*: Updated to 2.051.\n+\t[9d12fbe44d3]\n+\n+\t* d/phobos2/Makefile.am, d/phobos2/Makefile.in: D2 - Move generated\n+\theaders out of the way so as they don't interfere with build process.\n+\t[c52428bb97b]\n+\n+\t* /druntime/rt/aaA.d, d/druntime/rt/adi.d, d/druntime/rt/lifetime.d,\n+\td/druntime/rt/memory.d, d/druntime/rt/qsort.d,\n+\td/druntime/rt/switch_.d, d/druntime/rt/util/string.d: Merge\n+\tdifferences between GDC and DMD Druntime. Should fix Issue #129\n+\t[1d6e8e716ae3]\n+\n+\t* d/d-glue.cc, d/d-lang.cc, d/druntime/rt/dmain2.d,\n+\td/phobos2/Makefile.am, d/phobos2/Makefile.in,\n+\td/phobos2/gcc/bitmanip.d: Fix codegen in ArrayLiteralExp; Split cmain\n+\tfrom dmain2 in druntime; Update gcc.bitmanip for 2.051.\n+\t[b1393d6cc45a]\n+\n+\t* d/d-codegen.cc, d/d-codegen.h, d/d-glue.cc, d/d-lang.cc,\n+\td/d-objfile.cc, d/dt.cc: Use build_constructor to make constructor\n+\tnodes.\n+\t[bd721e198eff]\n+\n+2010-12-17  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d/d-codegen.h, d/d-glue.cc, d/dmd/expression.c, d/dmd2/expression.c:\n+\tFix handling of _argptr after commit 398.\n+\t[95992bb703de]\n+\n+\t* d/d-lang.cc, d/patches/patch-gcc-4.4.x: Issue #104 revisited -\n+\teasier to instead fix in GCC.\n+\t[dedbc5dc14a9]\n+\n+\t* d/d-lang.cc: Issue #104 - ICE on inlining nested struct member\n+\tfunctions\n+\t[eb09c05188ea]\n+\n+\t* d/d-decls.cc: Issue #85 - template functions not inlined.\n+\t[c9db2183900a]\n+\n+2010-12-12  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d/d-builtins2.cc, d/d-lang.cc, d/dmd2/toobj.c: D2 - tighten up\n+\tpurity set on builtins.\n+\t[677ff59c566]\n+\n+\t* d/GDC.html, d/dmd/attrib.c, d/dmd/idgen.c, d/dmd2/attrib.c,\n+\td/dmd2/idgen.c, d/phobos/gcc/unwind_arm.d, d/phobos2/gcc/unwind_arm.d:\n+\tGNU_attribute and GNU_set_attribute deprecated for promoting attribute\n+\tand set_attribute.\n+\t[99b197365502]\n+\n+\t* d/d-glue.cc, d/d-objfile.cc, d/dmd2/expression.c, d/dmd2/todt.c:\n+\tcleanup todt; testsuite fixes.\n+\t[3ee0b55b9fcc]\n+\n+2010-12-10  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d/d-builtins2.cc, d/d-dmd-gcc.h, d/dmd2/builtin.c,\n+\td/dmd2/declaration.h, d/dmd2/expression.c, d/dmd2/interpret.c: Power\n+\toperators ^^ now working in CTFE.\n+\t[d804e40bb245]\n+\n+\t* d/d-codegen.cc, d/d-codegen.h, d/d-glue.cc: Issue #121 - ICE in\n+\tgimple_rhs_has_side_effects.\n+\t[63a29e175dba]\n+\n+\t* d/d-codegen.cc, d/d-codegen.h, d/d-gcc-real.h, d/d-irstate.h,\n+\td/d-lang.h, d/d-objfile.h, d/dt.h: Glue Header code cleanups.\n+\t[42d36e6321f5]\n+\n+\t* d/phobos2/std/math.d: Issue #113 - std.math: cos/sin forward\n+\tdeclaration issue.\n+\t[089fa0826192]\n+\n+\t* d/d-asm-i386.h, d/phobos2/std/math.d: Add special case for fdiv/fsub\n+\topcodes.\n+\t[69b717b206e1]\n+\n+\t* d/asmstmt.cc, d/d-asm-i386.h, d/d-codegen.cc: Glue code cleanups.\n+\t[03e46b45acfc]\n+\n+\t* d/d-asm-i386.h, d/dmd2/expression.c, d/phobos2/std/math.d:\n+\toff-by-one Inline asm fix.\n+\t[9f3bb8c3e1e4]\n+\n+\t* d/d-builtins2.cc, d/d-codegen.cc, d/dmd2/builtin.c,\n+\td/dmd2/declaration.h, d/dmd2/interpret.c, d/phobos2/Makefile.in,\n+\td/phobos2/configure: D2 - GCC builtins now CTFE'd.\n+\t[46b8a2bb22f5]\n+\n+2010-12-04  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d/d-lang.cc, d/druntime/gc/gcgccextern.d, d/phobos2/Makefile.am,\n+\td/phobos2/Makefile.in, d/phobos2/std/math.d, d/setup-gcc.sh,\n+\td/target-ver-syms.sh: Updated FreeBSD and Solaris version identifiers.\n+\t[a52396ea0fa4]\n+\n+2010-12-03  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d/d-asm-i386.h, d/d-spec.c, d/dmd2/root.c, d/dmd2/speller.c,\n+\td/druntime/core/sys/posix/setjmp.d, d/phobos2/configure,\n+\td/phobos2/configure.in, d/phobos2/std/math.d: Applied patches from\n+\tIssue #100, some work on Phobos/Druntime ARM port.\n+\t[8dbea571bd08]\n+\n+\t* d/d-asm-i386.h, d/d-builtins.c, d/d-lang.cc: Issue #118 - Segfault\n+\ton string compare.\n+\t[e2092db74028]\n+\n+2010-11-26  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d/d-decls.cc: Issue #110 - Pure Nothrow Functions Not Called.\n+\t[46680c366e68]\n+\n+\t* d/dmd/entity.c, d/dmd2/entity.c: Fixes to html entities.\n+\t[954a116bc175]\n+\n+\t* d/d-codegen.cc, d/d-codegen.h, d/d-glue.cc, d/d-irstate.h: D2 -\n+\tsupport 'case var:' in switch statements.\n+\t[af08a1a054c8]\n+\n+\t* d/d-glue.cc, d/d-objfile.cc, d/dmd/expression.c,\n+\td/dmd2/expression.c: Check lwr <= upr in pointer array slices, fixed\n+\tAA bug using const types.\n+\t[0a0c8ff325da]\n+\n+\t* d/druntime/core/sys/osx/mach/kern_return.d,\n+\td/druntime/core/sys/osx/mach/port.d,\n+\td/druntime/core/sys/osx/mach/semaphore.d,\n+\td/druntime/core/sys/osx/mach/thread_act.d: Add version(OSX) at top of\n+\tsource files.\n+\t[106a741599c6]\n+\n+\t* d/d-glue.cc: Fix ICE compiling empty with{} or volatile{}\n+\tstatements.\n+\t[e83350ff851b]\n+\n+\t* d/druntime/rt/aaA.d, d/phobos2/std/format.d, d/phobos2/std/string.d:\n+\tFix bug in aaA.d, remove workaround in std.format.\n+\t[6549ec58cf1c]\n+\n+\t* d/d-codegen.cc, d/d-codegen.h, d/d-glue.cc,\n+\td/druntime/rt/lifetime.d: Issue #108 - crash when compiling\n+\tdeclaration of a big array.\n+\t[38209ac30752]\n+\n+\t* d/d-builtins2.cc, d/d-glue.cc, d/dmd2/expression.c,\n+\td/dmd2/expression.h, d/dmd2/optimize.c, d/druntime/core/atomic.d,\n+\td/dt.cc, d/dt.h: Refs #108 - Prevent crash when compiling declaration\n+\tof a big array.\n+\t[bece6cdf81f8]\n+\n+2010-11-21  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d/d-codegen.cc, d/d-codegen.h, d/d-convert.cc, d/d-cppmngl.cc,\n+\td/d-gcc-real.cc, d/d-glue.cc, d/druntime/core/stdc/stdarg.d,\n+\td/druntime/rt/lifetime.d, d/dt.cc, d/symbol.cc: Add _d_arrayliteralT\n+\tas libcall.\n+\t[1d3d564d0bfc]\n+\n+\t* d/d-glue.cc, d/dmd2/expression.c, d/druntime/core/stdc/stdarg.d,\n+\td/phobos2/std/algorithm.d: Issue #107 - compilation failed on\n+\tassociated array.clear()\n+\t[75733609b163]\n+\n+\t* d/d-decls.cc, d/d-lang.cc, d/gdc.1, d/lang.opt,\n+\td/phobos2/Makefile.am, d/phobos2/Makefile.in: Issue #106 - compilation\n+\tfailed on files importing std.xml.\n+\t[3205e04db834]\n+\n+\t* d/d-objfile.cc, d/druntime/object.di, d/phobos2/Makefile.am,\n+\td/phobos2/Makefile.in: Makefile now properly creates D interface files\n+\tfor installing.\n+\n+2010-11-19  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d/d-builtins2.cc, d/d-codegen.cc, d/d-decls.cc, d/d-glue.cc,\n+\td/d-lang.cc, d/dmd2/*, d/druntime/*, d/phobos2/*: Updated D2 frontend\n+\tto 2.050.\n+\t[93726e7f3043]\n+\n+\t* d/d-glue.cc, d/dmd2/*, d/phobos2/*: Issue #95 - 'Hello World' for\n+\t64bit not working.\n+\t[f58b9a4c4827]\n+\n+\t* d/Make-lang.in, d/d-codegen.cc, d/d-decls.cc, d/d-irstate.cc,\n+\td/druntime/gc/gcgccextern.d, d/dt.h, d/phobos2/Makefile.am: No more\n+\tsegfaults from calling the moduleTlsDtor of a spawned thread.\n+\t[7afee485d3ec]\n+\n+\t* d/druntime/core/atomic.d, d/druntime/rt/dmain2.d,\n+\td/phobos2/Makefile.am, d/phobos2/Makefile.in: Fix makefile to generate\n+\t& install .di headers for druntime.\n+\t[8d8f3f8e346f]\n+\n+\t* d/d-codegen.cc, d/d-glue.cc, d/druntime/rt/memory.d: Passes the\n+\tcompilable/fail_compilation testsuite. Fix off-by-one static assert in\n+\trt.memory.\n+\t[a05310b5bd39]\n+\n+\t* d/d-codegen.cc, d/druntime/core/atomic.d, d/druntime/rt/monitor.c:\n+\tDon't make a libcall for _d_arraycast when converting void[] to\n+\tarray[]. Fix a hang in the generic atomicOps.\n+\t[d9555265c627]\n+\n+\t* d/Make-lang.in, d/d-apple-gcc.c, d/d-codegen.cc, d/d-glue.cc: Remove\n+\tredundant tree checking. Fold in apple-gcc patches.\n+\t[a62de16def16]\n+\n+\t* d/patches/patch-apple-gcc-5664, d/patches/patch-build_gcc-5664: New\n+\tpatches for apple-gcc.\n+\t[80db7b3f1bbc]\n+\n+\t* d/dmd/entity.c, d/dmd2/entity.c: Merge Walter's and Thomas' named\n+\tentity lists.\n+\t[8949157fe7b0]\n+\n+\t* d/d-codegen.cc, d/d-codegen.h, d/d-glue.cc: Issue #98 - cannot\n+\tperform floating-point modulo division on creal.\n+\t[53c34b538c56]\n+\n+\t* d/d-codegen.cc, d/d-codegen.h, d/d-glue.cc: Issue #102 - Fixed error\n+\tusing overloaded <>= operator.\n+\t[61db8ca7622c]\n+\n+\t* d/d-glue.c: Issue #89 - Error initialising struct with static array.\n+\t[24f69762e9c3]\n+\n+\t* d/d-codegen.cc, d/d-codegen.h, d/d-glue.cc: Issue #103 - destructor\n+\tnot called on array of structs.  Postblit on struct now called when\n+\treturned from a function.\n+\t[cb7faae1f7b9]\n+\n+\t* d/druntime/object_.d: Merge workaround from Phobos1 library.\n+\t[336c20f065e4]\n+\n+\t* d/phobos/std/math.d, d/phobos2/std/math.d: Add aliases for missing\n+\trndtol and rndtonl functions.\n+\t[86eb7cecbe6a]\n+\n+\t* d/d-codegen.cc, d/d-glue.cc: Properly handle return (void)value.  In\n+\tslice expression [lwr .. upr], ensure lwr gets evaluated first.  Tree\n+\tchecking fixes in NewExp and floatMod.\n+\t[967482328f44]\n+\n+2010-11-13  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d/d-c-stubs.c, d/d-codegen.cc, d/d-glue.cc, d/d-objfile.cc,\n+\td/dmd2/*, d/druntime/*, d/phobos2/*: Updated D2 frontend to 2.049.\n+\t[6c13728646ec]\n+\n+\t* d/druntime/core/sys/posix/sys/select.d: Issue #90 - select.d fails\n+\tto compile on 64 bits Linux.\n+\t[9cd6979d9a7d]\n+\n+\t* d/druntime/core/sys/posix/sys/select.d, d/druntime/rt/lifetime.d,\n+\td/phobos2/gcc/bitmanip.d, d/phobos2/std/bitmanip.d,\n+\td/phobos2/std/regexp.d: Issue #91, #92, #93 - various issues building\n+\ton 64bit Linux.\n+\t[c3ef6baccc9d]\n+\n+2010-11-12  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d/d-asm-i386.h, d/d-builtins2.cc, d/d-codegen.cc, d/d-convert.cc,\n+\td/d-cppmngl.cc, d/d-glue.cc, d/d-lang.cc, d/d-spec.c, d/dmd2/*,\n+\td/druntime/*, d/phobos2/*: Updated D2 frontend to 2.048.\n+\t[0d91f8245403]\n+\n+\t* d/druntime/core/sys/posix/sys/select.d: Fix some 64bit compat issues\n+\twith druntime module.\n+\t[05bb4c2b1f7d]\n+\n+2010-11-08  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d/d-builtins2.cc, d/d-codegen.cc, d/d-glue.cc, d/d-lang.cc,\n+\td/dmd-script, d/dmd2/*, d/druntime/*, d/phobos2/*: Updated D2 frontend\n+\tto 2.047.\n+\t[4bd4615c8a7e]\n+\n+2010-11-07  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d/Make-lang.in, d/d-codegen.cc, d/d-codegen.h, d/d-glue.cc,\n+\td/dmd-script, d/dmd-script.1, d/gdc.1, d/dmd2/*, d/druntime/*,\n+\td/phobos2/*: Updated D2 frontend to 2.046. Removed tabs, trailing\n+\tspaces.\n+\t[5be9e0023b23]\n+\n+2010-11-05  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d/d-glue.cc, d/d-irstate.cc, d/d-lang.cc, d/d-objfile.cc,\n+\td/d-objfile.h, d/dmd2/*, d/druntime/*, d/phobos2/*: Updated D2\n+\tfrontend to 2.040.\n+\t[5beb7019c5e6]\n+\n+\n+2010-11-03  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d/phobos/Makefile.am, d/phobos/Makefile.in, d/phobos/etc/c/zlib.d,\n+\td/phobos/std/zlib.d, d/phobos2/Makefile.am, d/phobos2/Makefile.in,\n+\td/phobos2/etc/c/zlib.d, d/phobos2/std/zlib.d, d/zlib/*: Upgrade zlib\n+\tsupport to zlib 1.2.5.\n+\t[ea7e83019088]\n+\n+\t* d/d-gcc-real.cc: Issue #79 - Wrong decimal value in error message.\n+\t[71d8713b0604]\n+\n+\t* d/phobos2/std/json.d, d/setup-gcc.sh: Added --update option for\n+\tsetup-gcc.sh to rebuild directory of libphobos links.\n+\n+\t* d/dmd/typinf.c, d/dmd2/typinf.c: Issue #83 - wrong TypeInfo_Struct\n+\tname outputted.\n+\t[f9ddff9d5ed9]\n+\n+\t* d/d-lang.cc: Bugzilla 1911 - Link error when creating array of\n+\ttypedefs with default initializer.\n+\t[8667626321e7]\n+\n+2010-11-01  michaelp  <baseball.mjp@gmail.com>\n+\n+\t* d/d-codegen.cc: Issue #76 - odd error message when casting between\n+\tnon-convertable types.\n+\t[0c78536565d6]\n+\n+2010-11-01  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d/asmstmt.cc, d/d-builtins2.cc, d/d-codegen.cc, d/d-codegen.h,\n+\td/d-cppmngl.cc, d/d-decls.cc, d/d-glue.cc, d/d-lang.cc, d/dmd-script,\n+\td/dmd2/*, d/druntime/*, d/phobos2/*: Updated D2 Frontend to 2.037.\n+\t[e37f9fae0867]\n+\n+\t* d/druntime/compiler/gdc/object_.d, d/druntime/compiler/gdc/rt/aaA.d,\n+\td/druntime/import/object.di: Issue #82 - undefined references in\n+\tobject.d\n+\t[0aff60753810]\n+\n+2010-10-31  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d/d-codegen.cc, d/d-decls.cc, d/d-glue.cc, d/dmd2/*, d/druntime/*,\n+\td/phobos2/*: Updated D2 frontend to 2.036.\n+\t[6bf237fb6ba6]\n+\n+\t* d/d-decls.cc, d/d-glue.cc: Issue #80 - Bad codegen for structs\n+\tcontaining invariants.\n+\t[2fe867d16c45]\n+\n+\t* d/d-codegen.cc, d/d-glue.cc: Issue #81 - Bad codegen and ICEs using\n+\tenums.\n+\t[3d028b2d1d30]\n+\n+\t* d/d-lang.cc: Issue #76 - Hide 'In file included from <builtin>'\n+\tmessage in errors.\n+\t[d590dd56696b]\n+\n+\t* d/phobos2/std/string.d, d/phobos2/std/zlib.d: Fix return result of\n+\tcmp().\n+\t[582cd1b0bff4]\n+\n+\t* d/d-builtins2.cc, d/druntime/import/core/stdc/math.d: All GCC\n+\tbuiltins now marked pure and optionally nothrow. core.stdc.math\n+\tfunctions made builtin.\n+\t[dc2b50a4c0f6]\n+\n+2010-10-27  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d/Make-lang.in, d/d-glue.cc, d/d-lang.cc, d/dmd2/*, d/druntime/*,\n+\td/phobos2/*: Update D2 frontend to 2.035.\n+\t[ef0d5e8ec06d]\n+\n+\t* d/d-glue.cc: Adjust Classinfo size for D2.\n+\t[b8673983b46b]\n+\n+\t* d/patches/*, d/set-gcc.sh: Updated patches and setup-gcc.sh for\n+\tApple GCC.\n+\t[b25313940945]\n+\n+\t* d/d-asm-i386.h, d/phobos/std/cpuid.d, d/phobos2/std/cpuid.d: Tell\n+\tbackend cpuid clobbers EBX; remove workaround in std.cpuid.\n+\t[3cbf9b8108a2]\n+\n+2010-10-24  michaelp  <baseball.mjp@gmail.com>\n+\n+\t* d/d-glue.cc, d/druntime/*, d/phobos2/*: Issue #77 - porting D2\n+\tPhobos to x86_64.\n+\t[cf5f02e03fda]\n+\n+2010-10-23  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d/phobos2/*: Issue #74 - New D2 Phobos source rebased from DMD.\n+\t[98120f156997]\n+\n+\t* d/phobos/Makefile.am, d/phobos/Makefile.in, d/phobos/config.h.in\n+\td/phobos/configure, d/phobos2/Makefile.am, d/phobos2/Makefile.in:\n+\tFix building with --enable-multilib\n+\t[67365c9f7b52]\n+\n+2010-10-21  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d/d-asm-i386.h, d/d-decls.cc, d/d-glue.cc, d/d-lang.cc,\n+\td/dmd-script, d/dmd2/*, d/druntime/*, d/phobos2/*: Updated D2 frontend\n+\tto 2.032.\n+\t[861e16b38529]\n+\n+\t* d/d-builtins2.cc, d/druntime/import/core/stdc/stdarg.d: D2 - Add\n+\tcore.stdc.stdarg as an stdarg module. Patched core.stdc.stdarg to work\n+\twith GDC compiler.\n+\t[8b0a0deb8e7d]\n+\n+\t* d/d-codegen.cc: Issue #72 - 'this' in nested structs cannot access\n+\tframe of outer function.\n+\t[3422c59c130a]\n+\n+\t* d/phobos/std/intrinsic.d: D1 - Fix bt function on 64bit archs.\n+\t[7445723aaedd]\n+\n+\t* d/d-codegen.cc, d/d-glue.cc: Issue #73 - ICE declaring string enums.\n+\t[0865e6286775]\n+\n+\t* d/druntime/compiler/gdc/aaA.d: D2 - Fixed segfault getting AA\n+\tkeys/values.\n+\t[d049574ccd3f]\n+\n+\t* d/dmd/mars.h, d/dmd/mtype.c, d/phobos/acinclude.m4,\n+\td/phobos/configure, d/phobos/configure.in, d/phobos2/acinclude.m4,\n+\td/phobos2/configure, d/phobos2/configure.in, d/target-ver-syms.sh:\n+\tSome updated to target OS detection.\n+\t[7fecb2ef6432]\n+\n+2010-10-12  opticron  <nyphbl8d@gmail.com>\n+\n+\t* d/phobos/Makefile.am, d/phobos/Makefile.in, d/phobos2/Makefile.am\n+\td/phobos2/Makefile.in: D1/D2: Fix type sizes in gcc/config/* when\n+\tbuilding with multilib.\n+\t[b9f7dd4e80a2]\n+\n+2010-10-11  michaelp  <baseball.mjp@gmail.com>\n+\n+\t* d/patches/patch-gcc-4.4.x, d/patches/patch-toplev-4.4.x: Updated\n+\t4.4.x patches for 4.4.5\n+\t[dd2f05ac4246]\n+\n+2010-10-08  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d/d-glue.cc, d/dmd2/*, d/druntime/*: Updated D2 frontend to 2.029.\n+\t[082c04bad0c3]\n+\n+2010-10-07  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d/Make-lang.in, d/d-asm-i386.h, d/d-codegen.h, d/d-decls.cc\n+\td/d-gcc-real.cc, d/d-gcc-real.h, d/d-glue.cc, d/dmd2/*, d/druntime/*,\n+\td/phobos2/*: Update D2 frontend to 2.028.\n+\t[141118223a79]\n+\n+\t* d/dmd/cast.c d/dmd/constfold.c d/dmd/identifier.c d/dmd/lexer.c\n+\td/dmd/mars.h d/dmd/mtype.c d/dmd/opover.c d/dmd/optimize.c\n+\td/dmd/template.h d/dmd/todt.c d/dmd/toobj.c: Cleaned up D1 folder\n+\tafter D2 updates.\n+\t[5c293d142e2d]\n+\n+\t* d/asmstmt.cc, d/d-asm-i386.h: Issue #70 - Inline Asm errors junk\n+\t`(%ebp)+4' after expression.\n+\t[21764cc50c3f]\n+\n+2010-10-06  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d/Make-lang.in, dmd2/*, phobos2/*: Updated D2 frontend to 2.026.\n+\t[7a1dfe79af05]\n+\n+\t* d/d-glue.cc: Issue #69 - ICE on typedef'd array\n+\tconcatenation.\n+\t[fe66fbb9e08e]\n+\n+\t* d/d-codegen.cc, d/d-codegen.h, d/d-glue.cc: D2 - Fixed 'this.this'\n+\tbeing null in a nested class.\n+\t[d1dfd83df144]\n+\n+\t* d/d-decls.cc: Let backend know about functions marked as 'nothrow'\n+\tand 'immutable'.\n+\t[77df72e87dd0]\n+\n+\t* d/d-codegen.cc, d/d-codegen.h, d/d-decls.cc, d/d-glue.cc: D2 -\n+\tImplemented nested structs.\n+\t[8c901ab67b00]\n+\n+\t* d/d-codegen.cc d/d-codegen.h d/d-glue.cc: Move block of code\n+\tinitialising structs from emitLocalVar to AssignExp.\n+\t[32165d66c011]\n+\n+\t* d/Make-lang.in, d/d-lang.cc, d/dmd2/array.c, d/dmd2/async.c\n+\td/dmd2/async.h, d/dmd2/root.c: D2 - Added AsyncRead sources.\n+\t[3407bc0a9896]\n+\n+2010-10-03  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d/phobos/std/regexp.d: Fix D1 phobos for 64bit systems.\n+\t[2cc2741e0031]\n+\n+\t* d/d-decls.cc, d/d-lang.h: D2 - Let backend know about functions\n+\tmarked as 'pure'.\n+\t[e9eb758ba073]\n+\n+\t* d/druntime/compiler/gdc/lifetime.d: Issue #69 - arraycatnT not\n+\tworking on 64bit.\n+\t[1fb27285a969]\n+\n+2010-09-30  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d/asmstmt.cc, d/d-codegen.cc, d/d-glue.cc, dmd2/*, druntime/*\n+\tphobos2/*: Updated D2 frontend to 2.025.\n+\t[4b8327c25e06]\n+\n+2010-09-29  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d/d-glue.cc, d/dmd2/*, d/druntime/*, d/phobos2/*: Updated D2\n+\tfrontend to 2.022\n+\t[747409fe2b40]\n+\n+\t* d/d-codegen.cc, d/d-glue.cc, d/phobos2/Makefile.in: Fix building with\n+\t--enable-checking.\n+\t[364d892342c5]\n+\n+\t* d/d-codegen.cc, d/druntime/gc/basic/gcx.d: Issue #68 - Cannot cast to\n+\tstructs of same type size.\n+\t[8fd7216c74a7]\n+\n+\t* d/d-lang.cc, d/dmd-script, d/lang.opt: Added -safe switch.\n+\t[a06f5919bd1c]\n+\n+\t* d/d-spec.c: Update D2 driver.\n+\t[9e1b27a03458]\n+\n+2010-09-28  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* zlib/*: Moved zlib to it's own maintained directory.\n+\t* d/phobos/etc/c/zlib, d/phobos2/etc/c/zlib: Removed.\n+\t[46deecb698ea]\n+\n+\t* dmd/*, phobos/*: Updated D1 frontend to 1.064.\n+\t[77f4acd15b72]\n+\n+\t* dmd2/*, druntime/*, phobos2/*: Updated D2 frontend to 2.021.\n+\t[ed6460a378bc]\n+\n+\t* d/druntime/compiler/gdc/adi.d, d/druntime/compiler/gdc/alloca.d,\n+\td/druntime/compiler/gdc/cover.d, d/druntime/compiler/gdc/memset.d,\n+\td/druntime/compiler/gdc/qsort.d, d/druntime/compiler/gdc/qsort2.d,\n+\td/phobos2/Makefile.am, d/phobos2/Makefile.in: D2 runtime segfault fixes.\n+\t[7c9615da20cb]\n+\n+\t* d/d-builtins2.cc d/d-codegen.cc d/d-decls.cc d/d-glue.cc\n+\td/dmd2/mars.h d/druntime/compiler/gdc/util/console.d\n+\td/phobos2/std/bigint.d d/phobos2/std/bitmanip.d d/phobos2/std/boxer.d\n+\td/phobos2/std/date.d d/phobos2/std/dateparse.d d/phobos2/std/md5.d: D2\n+\t'this' parameter to struct member functions is now a reference type.\n+\t[91fd4a667dc9]\n+\n+2010-09-25  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d-glue.cc: D2 - rework return by ref.\n+\t[ecd406de9575]\n+\n+\t* d-codegen.cc, d-glue.cc: Move check for ref function to better place.\n+\t[9dc1edb1c332]\n+\n+\t* d-glue.cc: Issue #66 - Array setting causes OutOfMemoryException.\n+\t[65f4cc943169]\n+\n+2010-09-20  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d-builtins.c, d-codegen.cc, d-glue.cc:\n+\tD2 updates - Return by reference now implemented (instead of ignored).\n+\t[6e2ba321e290]\n+\n+\t* d-codegen.cc, d-convert.cc, d-decls.cc, d-glue.cc:\n+\tGain back some compiler speed in release builds.\n+\t[c8bdb254e8fc]\n+\n+2010-09-18  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* phobos2/config.h.in, phobos2/configure:\n+\tRegenerate D2 configure scripts.\n+\t[eed0b915018b]\n+\n+\t* druntime/compiler/gdc/dmain2.d:\n+\tFix _d_hidden_func to work with GDC compiler\n+\t[8c2f5a4e8805]\n+\n+\t* d-codegen.cc, d-convert.cc, d-glue.cc, d-lang.h:\n+\tIssue #64 - enable-checking in configure fails on 4.4.x\n+\t[7bfec5c437bb]\n+\n+\t* d-lang.h: Issue #28 - enable-checking in configure fails\n+\t[3de9afb31bb7]\n+\n+\t* druntime/compiler/gdc/trace.d, phobos2/Makefile.am,\n+\tphobos2/Makefile.in, phobos2/config.log:\n+\tRemove trace.d from D2\n+\t[253e781b9254]\n+\n+2010-09-15  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d-codegen.cc d-glue.cc: Fix obscure memory bug in D2.\n+\t[af9fbe154ba6]\n+\n+\t* d-codegen.cc, d-codegen.h, d-glue.cc, d-irstate.cc, d-irstate.h,\n+\tdmd/statement.c, dmd2/statement.c:\n+\tIssue #56 - goto into a try block doesn't produce an error.\n+\t[960b54da053d]\n+\n+\t* dmd2/inifile.c, druntime/compiler/gdc/cmath2.d,\n+\tdruntime/compiler/gdc/gccmemory.d, druntime/compiler/gdc/memory.d,\n+\tphobos2/Makefile.am, phobos2/Makefile.in:\n+\tSplit off rt.memory, remove useless sources.\n+\t[08fac74f4074]\n+\n+\t* druntime/common/core/thread.d, druntime/compiler/gdc/util/cpuid.d:\n+\tMerge getESP code from D2 phobos to druntime.\n+\t[5e6ee66625e4]\n+\n+\t* druntime/compiler/gdc/llmath.d: Remove llmath.d\n+\t[6b7397510e33]\n+\n+2010-09-09  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d-codegen.cc:\n+\tRevert part of commit 210, and fix integer representations on gdc-4.4.\n+\t[844b25646834]\n+\n+\t* d-bi-attrs-34.h, d-bi-attrs-341.h, d-builtins.c, d-c-stubs.c,\n+\tMake-lang.in: Merge d-bi-attrs-341 with d-bi-attrs-34.h.\n+\t[c2f92387a049]\n+\n+\n+2010-09-07  michaelp  <baseball.mjp@gmail.com>\n+\n+\t* gcc-mars.cc:\n+\tRemoved gcc-mars.cc from top level d/ folder.\n+\t[e4b1e3753bf5]\n+\n+\t* Make-lang.in:\n+\tUpdated Make-lang.in for removal of gcc-mars.cc.\n+\t[db7d6aae8ceb]\n+\n+\t* GDC.html, History, INSTALL, INSTALL.html, README, dmd-script,\n+\tdmd-script.1, gdc.1:\n+\tDocumentation updates.\n+\t[e651ed00a16e]\n+\n+2010-09-03  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d-codegen.cc, d-glue.cc, d-objfile.cc:\n+\tIssue #59 and #60: ICE when goto undefined label and ICE in foreach over\n+\tmember member array in static func\n+\t[955dc7d43780]\n+\n+\t* d-codegen.cc, d-glue.cc, d-irstate.cc, d-lang.h, dmd/func.c,\n+\tdmd/statement.c, dmd/statement.h:\n+\tIssue #54: 1.063 changes in phobos versioning + dmd backend.\n+\t[4c10fa4a539a]\n+\n+2010-09-01  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* dmd/cast.c, dmd/impcnvgen.c, dmd2/impcnvgen.c:\n+\tBugzilla 1822 - String slicing in 64-bit gdc causes spurious\n+\twarnings\n+\t[5efc9014eef8]\n+\n+\t* patches/patch-gcc-4.0.x, patches/patch-gcc-4.1.x, d/patches\n+\t/patch-gcc-4.2.x, patches/patch-gcc-4.3.x, patches/patch-\n+\tgcc-4.4.x:\n+\tIssue #50 - thanks venix1: SjLj expections fail when thrown from catch\n+\tblock\n+\t[d655a072bbb8]\n+\n+\t* d-builtins2.cc, d-lang.cc, d-spec.c:\n+\tRemoved va_list hack, small change to D2 lang driver.\n+\t[7a67e4973ace]\n+\n+2010-08-30  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d-codegen.cc:\n+\tIssue #14: STATIC_CHAIN_EXPR not caught in estimate_num_insns_1()\n+\t[63c14701ccde]\n+\n+2010-08-29  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d-c-stubs.c, d-glue.cc, d-lang.cc:\n+\tAdd stubs for C_TARGET_OBJS on non-x86 archs.\n+\t[b530fcd9baab]\n+\n+\t* d-glue.cc:\n+\tBugzilla 1669 - this.outer in nested classes gives a bogus pointer\n+\t[ebce488abf89]\n+\n+\t* d-lang.cc, phobos2/Makefile.am, phobos2/acinclude.m4:\n+\tAdd D_Version2 version predicate.\n+\t[9808b8987cce]\n+\n+2010-08-28  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d-c-stubs.c, d-decls.cc, d-lang.cc,\n+\tdruntime/compiler/gdc/aaA.d, druntime/compiler/gdc/util/cpuid.d,\n+\tdruntime/gc/basic/gc_c.h, druntime/gc/basic/gc_dyld.c,\n+\tdruntime/gc/basic/gc_freebsd.c, druntime/gc/basic/gcgccextern.d,\n+\tphobos/internal/gc/gcgccextern.d, phobos/std/loader.d,\n+\tphobos2/Makefile.am, phobos2/acinclude.m4,\n+\tphobos2/std/cpuid.d:\n+\tD2 updates.\n+\t[ebe4ca2bd83a]\n+\n+2010-08-27  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d/Make-lang.in, d-spec.c, phobos2/Makefile.am:\n+\tAdd druntime to the GDC driver.\n+\t[3dbc1c4cd214]\n+\n+\t* druntime/Makefile, druntime/compiler/gdc/dgccmain2.d,\n+\tdruntime/compiler/gdc/lifetime.d, phobos2/gcc/deh.d,\n+\tphobos2/gcc/unwind_generic.d, phobos2/gcc/unwind_pe.d,\n+\tphobos2/std/stream.d:\n+\tRemove Makefile and fix module dependencies in Druntime\n+\t[6fea2af61a0c]\n+\n+\t* phobos2/Makefile.am, phobos2/acinclude.m4, phobos2/aclocal.m4,\n+\tphobos2/configure.in, d/setup-gcc.sh:\n+\tReorganise D2 Makefile for Druntime\n+\t[f888b572d19a]\n+\n+\t* d/Make-lang.in:\n+\tUse BACKENDLIBS rather than GMPLIBS for gdc-4.4\n+\t[bda0f5d37728]\n+\n+\t* d-glue.cc:\n+\tFix ICE in D2 ForeachRange statements\n+\t[7d35bcb69e7e]\n+\n+2010-08-26  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* patches/patch-gcc-4.4.x:\n+\tRegenerate gcc-4.4.x patch\n+\t[4dfe5494460a]\n+\n+2010-08-25  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d-codegen.h:\n+\tFix codegen for addressOf array types, resolves broken va_lists on\n+\tgdc-4.4.\n+\t[9463381e1daa]\n+\n+\t* druntime/compiler/gdc/fpmath.d, druntime/compiler/gdc/gcc/*,\n+\tdruntime/druntimelicense.txt, druntime/druntimereadme.txt,\n+\tdruntime/hello.d, druntime/license.txt, druntime/readme.txt:\n+\tRe-add fpmath.d - previously from removed internal directory.\n+\t[bf3e292d1a4c]\n+\n+\t* d-builtins2.cc:\n+\tSlight alteration to va_list type generation on gdc-4.4\n+\t[e005caeafced]\n+\n+\t* d-codegen.cc, d-glue.cc, d-irstate.cc, d-lang.h:\n+\tUse own language flag for labels marked 'used'.\n+\t[d7963235235c]\n+\n+\t* d-lang.cc:\n+\tRework of previous commit for Issue #58.\n+\t[025031c2e274]\n+\n+2010-08-24  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d-lang.cc:\n+\tIssue #58 - Fixed stack overflow in gdc-4.4\n+\t[c02f5ac787a8]\n+\n+2010-08-23  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d-codegen.cc:\n+\tBugzilla 1813 - ICE on static function parametrized with alias.\n+\t[2e06ca97b873]\n+\n+2010-08-22  michaelp  <baseball.mjp@gmail.com>\n+\n+\t* patches/patch-gcc-3.4.x, patches/patch-gcc-4.0.x, d/patches\n+\t/patch-gcc-4.1.x, patches/patch-gcc-4.2.x, patches/patch-\n+\tgcc-4.3.x, patches/patch-toplev-3.4.x, patches/patch-\n+\ttoplev-4.0.x, patches/patch-toplev-4.1.x, patches/patch-\n+\ttoplev-4.2.x, patches/patch-toplev-4.3.x:\n+\tUpdated patches for D2/druntime\n+\t[dc882e7537c0]\n+\n+2010-08-22  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d/Make-lang.in, d-bi-attrs-44.h, d-builtins.c, d-builtins2.cc,\n+\td-codegen.cc, d-decls.cc, d-gcc-includes.h, d-lang.cc,\n+\td-objfile.cc, patches/patch-gcc-4.4.x, patches/patch-\n+\ttoplev-4.4.x, d/setup-gcc.sh:\n+\tBuilding on GCC-4.4 now supported.\n+\t[0616ebb4255b]\n+\n+\t* d-lang.cc:\n+\tIssue #51: 1.062 outstanding issues\n+\t[9663a271233b]\n+\n+2010-08-20  michaelp  <baseball.mjp@gmail.com>\n+\n+\t* phobos2/*:\n+\tUpdated phobos2 to 2.020 (not working)\n+\t[08d9a5b24ff4]\n+\n+2010-08-20  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d-glue.cc:\n+\tFix ICE on shorthand if statements.\n+\t[ef2959fa8184]\n+\n+2010-08-20  michaelp  <baseball.mjp@gmail.com>\n+\n+\t* d-glue.cc:\n+\tFixed problem with continue statements in D2\n+\t[511f3176ec0d]\n+\n+2010-08-20  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d-lang.cc, druntime/compiler/gdc/arraybyte.d,\n+\tdruntime/compiler/gdc/arraydouble.d,\n+\tdruntime/compiler/gdc/arrayfloat.d,\n+\tdruntime/compiler/gdc/arrayint.d,\n+\tdruntime/compiler/gdc/arrayshort.d, phobos/internal/arraybyte.d,\n+\tphobos/internal/arraydouble.d, phobos/internal/arrayfloat.d,\n+\tphobos/internal/arrayint.d, phobos/internal/arrayshort.d,\n+\tphobos2/internal/arraybyte.d, phobos2/internal/arraydouble.d,\n+\tphobos2/internal/arrayfloat.d, phobos2/internal/arrayint.d,\n+\tphobos2/internal/arrayshort.d:\n+\tIssue #30: D_InlineAsm updates\n+\t[ce1833f9106a]\n+\n+2010-08-19  michaelp  <baseball.mjp@gmail.com>\n+\n+\t* d-lang.cc:\n+\tFixed JSON option for D2\n+\t[2118f4d1de83]\n+\n+\t* d/setup-gcc.sh:\n+\tUpdated setup-gcc.sh for libdruntime building\n+\t[6e7640bc2b3c]\n+\n+\t* patches/patch-toplev-4.1.x, patches/patch-toplev-4.2.x,\n+\tpatches/patch-toplev-4.3.x:\n+\tUpdated toplevel 4.1, 4.2, and 4.3 patches for libdruntime\n+\t[1df5716f2b88]\n+\n+\t* patches/patch-toplev-3.4.x, patches/patch-toplev-4.0.x:\n+\tUpdated 3.4 + 4.0 toplevel patches to include libdruntime\n+\t[a74ceca3c239]\n+\n+\t* dmd/func.c:\n+\tIssue #57: C-style variadic functions broken\n+\t[ae817bd07dbf]\n+\n+2010-08-19  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* phobos/*:\n+\tUpdated Phobos to 1.063 - expanded tabs.\n+\t[bbe96bfd09dd]\n+\n+2010-08-17  michaelp  <baseball.mjp@gmail.com>\n+\n+\t* d-glue.cc:\n+\tOne of Issue #56. Cannot goto into finally block\n+\t[22792e6a6253]\n+\n+2010-08-17  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d-codegen.cc, d-glue.cc, d-irstate.cc, d-irstate.h:\n+\tBugzilla 1041 - incorrect code gen for scope(exit) inside switch\n+\t[d472abadf847]\n+\n+2010-08-16  michaelp  <baseball.mjp@gmail.com>\n+\n+\t* d-glue.cc, dmd/func.c, dmd/statement.c, dmd/statement.h:\n+\tTemporarily reverted 1.063 change\n+\t[d89d1a46125d]\n+\n+2010-08-16  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d/asmstmt.cc, d-apple-gcc.c, d-asm-i386.h, d-builtins.c,\n+\td-builtins2.cc, d-c-stubs.c, d-codegen.cc, d-codegen.h,\n+\td-convert.cc, d-cppmngl.cc, d-decls.cc, d-gcc-includes.h,\n+\td-gcc-real.h, d-glue.cc, d-irstate.cc, d-lang.cc,\n+\td-lang.h, d-objfile.cc, d-spec.c, d/dt.cc, d/dt.h,\n+\td/gdc_alloca.h, d/symbol.cc:\n+\tAdded GPL onto files missing it, attributed modifications.\n+\t[4d41771eba7c]\n+\n+2010-08-15  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d-codegen.cc:\n+\tSome more type conversion updates in glue.\n+\t[4567e417c0b3]\n+\n+2010-08-14  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d-apple-gcc.c, d-codegen.cc, d-convert.cc, d-glue.cc,\n+\td-lang.cc:\n+\tRemove default_conversion, tighten up signed/unsigned conversions.\n+\t[c1ae96f4e1a6]\n+\n+\t* d-builtins2.cc, d-codegen.cc, d-glue.cc, d-lang.cc,\n+\td-lang.h:\n+\tRemoved references to TREE_UNSIGNED.\n+\t[4a59c1bbc04c]\n+\n+\t* d-gcc-includes.h:\n+\tFixed previous glue commit.\n+\t[9cac96f771a1]\n+\n+2010-08-14  michaelp  <baseball.mjp@gmail.com>\n+\n+\t* phobos/std/thread.d:\n+\tUpdated thread_attach bug in Windows\n+\t[de30c34ef79d]\n+\n+2010-08-14  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d/asmstmt.cc, d-builtins2.cc, d-codegen.cc, d-gcc-includes.h,\n+\td-glue.cc, d-lang.cc, d-objfile.cc:\n+\tGlue touch-ups, now uses D_USE_MAPPED_LOCATION\n+\t[6122f6d23a71]\n+\n+2010-08-13  michaelp  <baseball.mjp@gmail.com>\n+\n+\t* d-cppmngl.cc:\n+\tUploaded missing fix from 1.063 merge\n+\t[fc7de0a268ab]\n+\n+\t* dmd/template.c:\n+\tFixed implicit conversion of template parameters\n+\t[888e3cc8a31d]\n+\n+\t* d-glue.cc, dmd/async.c, dmd/declaration.c,\n+\tdmd/declaration.h, dmd/dsymbol.c, dmd/dsymbol.h, dmd/enum.c,\n+\tdmd/enum.h, dmd/expression.c, dmd/func.c, dmd/init.c,\n+\tdmd/interpret.c, dmd/mars.c, dmd/mars.h, dmd/module.c,\n+\tdmd/module.h, dmd/mtype.c, dmd/parse.c, dmd/parse.h,\n+\tdmd/root.c, dmd/statement.c, dmd/statement.h, dmd/todt.c,\n+\tphobos/internal/deh2.d, phobos/internal/object.d,\n+\tphobos/std/math.d:\n+\tUpdated to 1.063\n+\t[f1e726cbcc98]\n+\n+2010-08-11  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d/Make-lang.in, d-bi-attrs-34.h, d-bi-attrs-341.h, d-bi-\n+\tattrs-40.h, d-bi-attrs-41.h, d-bi-attrs-42.h, d-bi-attrs-43.h,\n+\td-builtins.c:\n+\tCleanup d-bi-attrs. Make includes slightly smarter.\n+\t[349f85192e52]\n+\n+\t* d-codegen.cc:\n+\tRemove useless trial/error comments in function.\n+\t[89b4363653f8]\n+\n+2010-08-10  michaelp  <baseball.mjp@gmail.com>\n+\n+\t* d-codegen.cc:\n+\tIssue 33 - Sefault with nested array allocation\n+\t[be805cb4fb58]\n+\n+2010-08-09  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d/Make-lang.in, patches/patch-gcc-4.2.x, patches/patch-\n+\ttoplev-4.2.x, d/setup-gcc.sh:\n+\tBuilding on GCC-4.2 now supported.\n+\t[c1b55292cd94]\n+\n+\t* d-codegen.cc, d-glue.cc, d-irstate.cc:\n+\tApply adaptation of feep's autovec patch (one big thanks!)\n+\t[fbce9c0580d3]\n+\n+\t* d/asmstmt.cc, d-asm-i386.h:\n+\tReplace tabs for space in ASM outbuffer.\n+\t[659f6f38f6f4]\n+\n+2010-08-09  michaelp  <baseball.mjp@gmail.com>\n+\n+\t* d/dmd-script:\n+\tWhitespace fix to previous commit.\n+\t[0fee937d84d4]\n+\n+\t* d-lang.cc, d/dmd-script, d/lang.opt:\n+\tAdded JSON support - Issue 52 + gdmd usage change\n+\t[35f04cb2339c]\n+\n+\t* d/dmd-script:\n+\tAdded -defaultlib= and -debuglib= into gdmd usage\n+\t[e34a68f9c427]\n+\n+\t* d/dmd-script:\n+\tUpdated -defaultlib and -debuglib switches for gdmd - Issue 46\n+\t[181e89b3d8d6]\n+\n+2010-08-08  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d-builtins.c, d-c-stubs.c, d-codegen.cc, d-glue.cc,\n+\td-lang.h:\n+\tBuild with GCC-3.4 working again.\n+\t[58e9b23e110c]\n+\n+\t* d/Make-lang.in, dmd2/array.c, dmd2/mars.c, dmd2/root.c,\n+\tdmd2/total.h:\n+\tUpdates of previous commit\n+\t[41657ecdc3fe]\n+\n+\t* d/Make-lang.in, d-decls.cc, dmd/expression.c, dmd2/arrayop.c,\n+\tdmd2/bit.c, dmd2/complex_t.h, dmd2/e2ir.c, dmd2/lib.h,\n+\tdmd2/libelf.c, dmd2/link.c, dmd2/man.c, dmd2/port.h,\n+\tdmd2/template.c, dmd2/tocsym.c, dmd2/toir.c, dmd2/toir.h,\n+\tdmd2/toobj.c, d/symbol.cc, d/symbol.h:\n+\tIssue 29 - Remove unused D2 files\n+\t[fdef7864146b]\n+\n+\t* d-decls.cc:\n+\tBugzilla 1296 - ICE when object.d is missing things\n+\t[e9bfccc01834]\n+\n+2010-08-06  michaelp  <baseball.mjp@gmail.com>\n+\n+\t* d/dmd-script:\n+\tMore updates to gdmd\n+\t[d77ee89f6174]\n+\n+2010-08-05  michaelp  <baseball.mjp@gmail.com>\n+\n+\t* d/dmd-script:\n+\tSmall changes to gdmd; some fixes for Issue 46\n+\t[9269acda0b86]\n+\n+2010-08-05  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d-decls.cc, d-glue.cc:\n+\tFix logic on array ops. Fixup comments for previous commits.\n+\t[5792cfbf3ae7]\n+\n+\t* d-glue.cc:\n+\tIssue 43: >>> and >>>= generate wrong code\n+\t[56caae262c41]\n+\n+2010-08-02  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d-lang.cc:\n+\tRegression in D1 when building with --enable-checking\n+\t[6f2adfcabae6]\n+\n+\t* d-spec.c:\n+\tCheck missing argument for -defaultlib\n+\t[8d59f275476b]\n+\n+\t* d-decls.cc:\n+\tIssue 47: GDC improperly handles extern(System) and extern(Windows) on\n+\tWindows\n+\t[e5b50cb17c57]\n+\n+2010-07-31  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d-codegen.cc, dmd/todt.c:\n+\tIssue 51: 1.062 outstanding issues\n+\t[f41ce1e8e5b2]\n+\n+\t* dmd/aav.c, dmd/aav.h, dmd/arrayop.c, dmd/attrib.c,\n+\tdmd/cast.c, dmd/constfold.c, dmd/dsymbol.c,\n+\tdmd/expression.c, dmd/imphint.c, dmd/interpret.c,\n+\tdmd/lexer.c, dmd/mtype.c, dmd/parse.c, dmd/speller.h,\n+\tdmd/statement.c, dmd/toobj.c, dmd/unittests.c, dmd/utf.c:\n+\tLine endings, cleanups, and a missing ')'\n+\t[84378e5ef655]\n+\n+\t* d-codegen.cc, d-glue.cc:\n+\tGlue updates for previous merge.\n+\t[a48e13277e67]\n+\n+2010-07-31  michaelp  <baseball.mjp@gmail.com>\n+\n+\t* d-glue.cc, dmd/*, phobos/std/date.d:\n+\tUpdated to 1.062\n+\t[9f7927e5f551]\n+\n+2010-07-30  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d-spec.c:\n+\tAdded -defaultlib and -debuglib to allow building with another\n+\tlibrary other than libphobos.\n+\t[f7a52f778a09]\n+\n+\t* druntime/*:\n+\tInitial import of druntime into project.\n+\t[2f052aaedd25]\n+\n+\t* d-glue.cc:\n+\tFix generation of D array concatenation calls.\n+\t[d70321dcd604]\n+\n+\t* phobos2/acinclude.m4, phobos2/configure, phobos2/configure.in,\n+\tphobos2/internal/arrayassign.d, phobos2/phobos-ver-syms.in:\n+\tD2 now defines Posix.\n+\t[575ed6d347e0]\n+\n+\t* dmd/parse.c, dmd/speller.c:\n+\tInclude header needed for MinGW to build.\n+\t[5260cab6c448]\n+\n+2010-07-29  michaelp  <baseball.mjp@gmail.com>\n+\n+\t* phobos2/std/c/stdio.d:\n+\tFixed accidentally reapplied Windows patch\n+\t[d4356fb371ee]\n+\n+\t* d/Make-lang.in, dmd/aav.c, dmd/aav.h, dmd/class.c,\n+\tdmd/declaration.c, dmd/dsymbol.c, dmd/dsymbol.h,\n+\tdmd/expression.c, dmd/func.c, dmd/imphint.c, dmd/mars.c,\n+\tdmd/mars.h, dmd/optimize.c, dmd/scope.c, dmd/speller.c,\n+\tdmd/struct.c, dmd/template.c, phobos2/std/c/stdio.d:\n+\tUpdated to 1.061\n+\t[9038432ea1ff]\n+\n+\t* phobos/std/c/stdio.d, phobos2/std/c/stdio.d:\n+\tRemove stdio.d patches from Issue 21 patch\n+\t[a53c51fad1bd]\n+\n+\t* d-decls.cc, phobos/std/c/stdio.d, phobos2/std/c/stdio.d:\n+\tIssue 21 - _iob undefined reference under Windows\n+\t[ea913c7eec42]\n+\n+\t* d-glue.cc:\n+\tFixed array ops bugs from 1.059\n+\t[92c39c74433f]\n+\n+\t* d/Make-lang.in, dmd/cast.c, dmd/class.c, dmd/declaration.c,\n+\tdmd/declaration.h, dmd/dsymbol.c, dmd/expression.c,\n+\tdmd/expression.h, dmd/idgen.c, dmd/init.c, dmd/inline.c,\n+\tdmd/interpret.c, dmd/json.c, dmd/mars.c, dmd/mtype.c,\n+\tdmd/parse.c, dmd/speller.c, dmd/speller.h, dmd/statement.h,\n+\tdmd/unittests.c:\n+\tUpdated to 1.060\n+\t[1c1cc97db718]\n+\n+2010-07-28  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d/dmd-script, d/lang-specs.h:\n+\tIssue 48: gdc/gdmd should be able to compile .di files\n+\t[976a611f59f3]\n+\n+\t* d-lang.cc, dmd/*, phobos/*:\n+\tUpdated to 1.058\n+\t[9ac6a02138c2]\n+\n+\t* d/Make-lang.in, dmd/machobj.c:\n+\tRemove machobj.c from D1\n+\t[67d109f8fe79]\n+\n+\t* d-lang.cc, d/dmd-script, d/symbol.cc:\n+\tIssue 42: -Wall should not error out compiler\n+\t[7593822be7c0]\n+\n+2010-07-27  michaelp  <baseball.mjp@gmail.com>\n+\n+\t* d/Make-lang.in, d-lang.cc, d/dmd-script, dmd/dsymbol.c,\n+\tdmd/dsymbol.h, dmd/expression.c, dmd/func.c, dmd/init.c,\n+\tdmd/inline.c, dmd/interpret.c, dmd/machobj.c, dmd/mars.c,\n+\tdmd/mars.h, dmd/module.c, dmd/module.h, dmd/mtype.c,\n+\tdmd/root.c, dmd/root.h, dmd/scope.c, dmd/scope.h,\n+\tdmd/speller.c, dmd/speller.h, dmd/statement.c,\n+\tdmd/template.c, d/lang.opt, phobos/internal/aaA.d:\n+\tUpdated to 1.057\n+\t[b4fb93e94c29]\n+\n+2010-07-27  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d/Make-lang.in, dmd/array.c, dmd/bit.c, dmd/complex_t.h,\n+\tdmd/constfold.c, dmd/e2ir.c, dmd/elfobj.c, dmd/expression.c,\n+\tdmd/irstate.c, dmd/irstate.h, dmd/lib.h, dmd/libelf.c,\n+\tdmd/libmach.c, dmd/link.c, dmd/man.c, dmd/mars.c,\n+\tdmd/mem.c, dmd/mem.h, dmd/mtype.c, dmd/port.c, dmd/port.h,\n+\tdmd/root.c, dmd/tocsym.c, dmd/toir.c, dmd/toir.h:\n+\tIssue 29 - Remove unused D1 files\n+\t[d74291c4230b]\n+\n+\t* dmd/template.c, dmd2/template.c:\n+\tIssue 36: duplicate symbols created for negatively initialized template\n+\tarugments\n+\t[1bd9793d8fc6]\n+\n+\t* d-builtins.c:\n+\tPartial fix for Issue 28\n+\t[7fb5519947d4]\n+\n+\t* d-lang.cc:\n+\tIssue 44: strange code in d-asm-1386.h\n+\t[73c379cc9714]\n+\n+2010-07-26  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d-codegen.cc, d-glue.cc:\n+\tD2 postblit on struct literals finished!\n+\t[9ee37bd66bca]\n+\n+2010-07-25  michaelp  <baseball.mjp@gmail.com>\n+\n+\t* d-lang.cc, d/dmd-script, dmd/*,\n+\tphobos/internal/arrayfloat.d:\n+\tUpdated to 1.056\n+\t[4ff162deda23]\n+\n+2010-07-24  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d-glue.cc:\n+\tD2 postblit updates.\n+\t[d53a8be7c0ed]\n+\n+2010-07-23  michaelp  <baseball.mjp@gmail.com>\n+\n+\t* dmd/class.c, dmd/enum.c, dmd/enum.h, dmd/mars.c,\n+\tdmd/struct.c:\n+\tUpdated to 1.055\n+\t[9c62fb9d0abf]\n+\n+\t* dmd/expression.c:\n+\tFixed spot with wrong patch in it\n+\t[172855a888e9]\n+\n+\t* dmd/*, phobos/internal/gc/gcx.d:\n+\tUpdated to 1.054\n+\t[64df5a74b2c4]\n+\n+2010-07-21  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d-lang.cc:\n+\tFixed warnings in d-lang.cc (thanks Trass3r)\n+\t[7a3c1ae0b625]\n+\n+\t* d-asm-i386.h:\n+\tFix cast warnings in d-asm-i386.h\n+\t[fa9b66399a13]\n+\n+\t* dmd/lexer.c, dmd2/lexer.c:\n+\tFix buffer overflow in certain error messages\n+\t[b91574453f5e]\n+\n+\t* d-asm-i386.h:\n+\tCorrectly check align value in asm.\n+\t[d5a0f3619810]\n+\n+2010-07-20  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d-glue.cc, dmd/root.c, dmd/statement.c, dmd/template.c,\n+\tdmd/template.h, phobos/std/c/stddef.d:\n+\tQuick updates to D1 and postblit code.\n+\t[214fbfbf5f3f]\n+\n+\t* d-builtins2.cc, d-codegen.cc, d-codegen.h, d-glue.cc,\n+\tdmd/expression.c, dmd/func.c, dmd/machobj.c, dmd/mtype.c,\n+\tdmd/parse.c, dmd/statement.c, dmd/statement.h, dmd/toobj.c,\n+\tphobos/internal/gc/gc.d:\n+\tSome whitespace corrections.\n+\t[c9c54a275526]\n+\n+2010-07-20  michaelp  <baseball.mjp@gmail.com>\n+\n+\t* d-builtins2.cc, d-codegen.cc, d-codegen.h, d-glue.cc,\n+\tdmd/*, phobos/*:\n+\tUpdated to 1.053\n+\t[f02a96cfc1de]\n+\n+2010-07-20  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d-glue.cc:\n+\tQuick revision updates\n+\t[c79811b4f1fc]\n+\n+2010-07-19  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d-glue.cc, dmd2/attrib.c, dmd2/cast.c, dmd2/cond.c,\n+\tdmd2/constfold.c, dmd2/declaration.c, dmd2/declaration.h,\n+\tdmd2/e2ir.c, dmd2/expression.c, dmd2/func.c,\n+\tdmd2/impcnvgen.c, dmd2/lexer.c, dmd2/lexer.h, dmd2/link.c,\n+\tdmd2/mars.c, dmd2/mtype.c, dmd2/mtype.h, dmd2/parse.c,\n+\tdmd2/parse.h, dmd2/statement.c, dmd2/toir.c:\n+\tUpdated to 2.020 - Frontend Only\n+\t[676f0aa79458]\n+\n+2010-07-17  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* phobos2/Makefile.in:\n+\tlibgphobos2 Makefile fixes.\n+\t[c4acdacfddd2]\n+\n+2010-07-16  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\tMerge with DMD 2.019\n+\n+\t* d-decls.cc: Merge changes from dmd2/tocsym.c\n+\n+\t* phobos/Makefile.am, phobos/Makefile.in, phobos2/Makefile.am,\n+\tphobos2/Makefile.in: Fix build for check-target-libphobos tests.\n+\n+\t* d-decls.cc, d-objfile: Fixed ICE in gdc-4.3 [39825b8156a3]\n+\n+2010-07-14  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\tMerge with DMD 2.018\n+\n+\t* d-lang.cc: Added support for AsyncRead in D1.\n+\n+\t* dmd/constfold.c, dmd2/constfold.c: Fixed lost precision when casting\n+\tfrom large floats to integral types.\n+\n+\t* dmd/todt.c, dmd2/todt.c: Fixed initialiased pointer array values\n+\tbeing reset to null during compilation.\n+\n+\t* Make-lang.in, d-backendfunctions.c, dmd/template.c: Removed\n+\tbackendfunctions.c from Makefile.\n+\n+2010-07-11  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d-asm-i386.h: AMD Opcodes Supported.\n+\n+\t* Make-lang.in, dmd/mtype.c, dmd/struct.c, target-ver-syms.sh:\n+\tstruct ABI fixes.\n+\n+\t* phobos/std/math.d, phobos2/std/math.d: Fix wrong return value in\n+\texpi() function.\n+\n+2010-07-07  michaelp  <baseball.mjp@gmail.com>\n+\n+\t* dmd/arrayop.c: Fix problem with float array operations.\n+\t- Added linear search for the array op library functions.\n+\n+2010-07-05  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* dmd2/..., phobos2/...: Resolved issues for DMD 2.017.\n+\n+\t* phobos2/configure, phobos2/configure.in: Re-add GNU_Need_execvpe for\n+\tD2 libphobos.\n+\n+\t* dmd/mtype.h, phobos2/internal/object.d, phobos2/std/cpuid.d:\n+\tQuick updates to previous revisions.\n+\n+2010-07-05  michaelp  <baseball.mjp@gmail.com>\n+\n+\tMerge DMD 2.017\n+\n+2010-07-04  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\tMerge DMD 1.052\n+\n+\t* d-glue.cc: Fix ICE when using type tuple as function argument.\n+\n+\t* phobos/..., phobos2/...: libphobos cleanup and updates.\n+\n+\t* d-codegen.cc, d-decls.cc: Fix problem when building with\n+\t--enable-checking.\n+\n+2010-06-28  michaelp  <baseball.mjp@gmail.com>\n+\n+\t* setup-gcc.sh: D1 is default in setup-gcc.sh now.\n+\n+2010-06-27  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\tMerge with DMD 1.050\n+\n+\t* Make-lang.in: Update for files added in DMD 1.050.\n+\n+\t* phobos/etc/c/zlib.d, phobos/std/zlib.d, phobos2/etc/c/zlib.d:\n+\tUpdated Zlib to 1.2.3.\n+\n+2010-06-22  michaelp  <baseball.mjp@gmail.com>\n+\n+\t* phobos/configure, phobos/configure.in, phobos/std/process.d,\n+\tphobos2/configure, phobos2/configure.in, phobos2/std/process.d:\n+\tFix problem when building with a version of GNU C that has execvpe()\n+\timplemented (staring with glibc-2.11).\n+\n+\t* phobos/configure, phobos/configure.in, phobos/std/c/freebsd/freebsd.d:\n+\tFix problem when linking on FreeBSD targets.\n+\n+2010-06-19  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\tMerge with DMD 1.049\n+\n+\t* d-lang.cc: Merge changes from dmd/mars.c.\n+\n+\t* d-codegen.cc, d-decls.cc: Fix ICEs in const array assignments.\n+\n+\t* d-lang.cc, dmd-script, lang.opt: Added -fdeps option to gdc and\n+\t-deps to gdmd.\n+\n+\t* dmd/mem.c, dmd/mem.h, dmd/port.c, dmd/rmem.h, dt.cc, dt.h,\n+\tphobos/internal/qsortg.d: Remove executable bit on source files.\n+\n+2010-06-12  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\tMerge with DMD 1.047\n+\n+\t* d-codegen.cc: Look for reference initializations in foreach\n+\tstatement assignments.\n+\n+\t* dmd/..., dmd2/..., phobos/..., phobos2/...: Converted CR, CRLF line\n+\tendings to LF (thanks to venix1).\n+\n+2010-06-04  Vincenzo Ampolo  <vincenzo.ampolo@gmail.com>\n+\n+\t* d-asm-i386.h: Apply patch to compile tango (thanks to venix1).\n+\n+2010-04-05  michaelp  <baseball.mjp@gmail.com>\n+\n+\tMerge with DMD 1.046\n+\n+\t* d-decls.cc: Fix problem with struct declarations in GCC-4.3.x.\n+\n+\t* dmd-script: Added -pipe option to gdmd\n+\n+\t* d-lang.cc, phobos/...: Fix FreeBSD and Windows version issues.\n+\n+\t* dmd/root.c: Fix Windows template instantiating error.\n+\n+\t* dmd/func.c: Fix segfault on wrong arg type.\n+\n+2010-02-17  Vincenzo Ampolo  <vincenzo.ampolo@gmail.com>\n+\n+\t* d-glue.cc: Make d1 classinfo like d2 ones.\n+\n+\t* dmd/expression.c, phobos/std/process.d: Apply feep (downs) patch.\n+\n+2010-02-07  michaelp  <baseball.mjp@gmail.com>\n+\n+\tMerge with 1.045\n+\n+\t* phobos/linux.mak, phobos/win32.mak: Removed Phobos .mak files for\n+\tD 1.045 update.\n+\n+\t* samples/hello.d, samples/samples.sh: Added 1 file to samples\n+\tdirectory.\n+\n+2010-01-15  opticron  <nyphbl8d@gmail.com>\n+\n+\t* phobos/std/string.d: Fix a set of bugs in std.string.split which\n+\tmade delemiters of length > 1 segfault.\n+\n+\f\n+Copyright (C) 2010 Free Software Foundation, Inc.\n+\n+Copying and distribution of this file, with or without modification,\n+are permitted in any medium without royalty provided the copyright\n+notice and this notice are preserved."}, {"sha": "a5c155821d16054a78784e8f00e1c8b8f2ecd5bc", "filename": "gcc/d/ChangeLog-2011", "status": "added", "additions": 1248, "deletions": 0, "changes": 1248, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2FChangeLog-2011", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2FChangeLog-2011", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2FChangeLog-2011?ref=b4c522fabd0df7be08882d2207df8b2765026110", "patch": "@@ -0,0 +1,1248 @@\n+2011-12-31  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d/d-codegen.cc, d/d-glue.cc, d/d-irstate.cc: Revert some prior code\n+\tadditions.\n+\t[a61a03e817c3]\n+\n+\t* d/d-decls.cc, d/d-glue.cc: Issue #301 - ref return funcs returning\n+\twrong reference\n+\t[2350d3a27ac8]\n+\n+2011-12-30  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d/d-irstate.cc, d/d-lang.cc: Implicitly convert all statements to\n+\tvoid, warn if statement has no side effects.\n+\t[d73ff02f1131]\n+\n+\t* d/d-decls.cc, d/d-glue.cc: mark RESULT_DECL as artificial.\n+\t[a2de4187caa4]\n+\n+\t* d/d-codegen.cc, d/d-glue.cc: Remove check for isref out of ::call\n+\tand into CallExp::toElem\n+\t[1b827c7df15c]\n+\n+\t* d/d-codegen.cc, d/d-codegen.h, d/d-glue.cc: Use INIT_EXPR instead of\n+\tMODIFY_EXPR where applicable, added vinit.\n+\t[27c401e61169]\n+\n+\t* d/d-codegen.cc, d/d-codegen.h: Move functions written in d-codegen\n+\theader to source file.\n+\t[605c79094f14]\n+\n+\t* d/d-codegen.cc: Issue #302 - lazy arg causing ICE in\n+\tgimple_expand_cfg, at cfgexpand.c:4063\n+\t[786acc44a0ff]\n+\n+2011-12-28  Daniel Green  <venix1@gmail.com>\n+\n+\t* d/phobos2/Makefile.am, d/phobos2/Makefile.in: Add\n+\tstd/internal/windows/advapi32.o to WINDOWS_OBJS.\n+\t[e7639c523add]\n+\n+2011-12-28  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d/d-gcc-includes.h, d/d-glue.cc: Emit pretty debug tree information\n+\ton -fdump-tree-original\n+\t[7631e902659e]\n+\n+\t* d/d-asm-i386.h, d/d-codegen.h, d/d-glue.cc, d/d-lang.cc,\n+\td/d-objfile.cc: Remove some dead code.\n+\t[e8ae51578e54]\n+\n+\t* d/d-codegen.cc, d/d-decls.cc, d/d-glue.cc, d/d-lang-45.h,\n+\td/d-lang.cc, d/d-lang.h, d/d-objfile.cc: Issue #258 - cannot access\n+\tframe with contract inheritance\n+\t[0b470bc59251]\n+\n+\t* d/d-lang.cc, d/gdc.1, d/lang.opt: Add switches to control in(),\n+\tout() and invariant() code generation.\n+\t[e9904da308eb]\n+\n+\t* d/asmstmt.cc, d/d-builtins2.cc, d/d-decls.cc, d/d-glue.cc,\n+\td/patches/patch-gcc-4.2.x, d/patches/patch-gcc-4.3.x,\n+\td/patches/patch-gcc-4.4.x, d/patches/patch-gcc-4.5.x,\n+\td/patches/patch-gcc-4.6.x: Remove gdc patch to cgraph.c - fix codegen.\n+\t[fc5e3bddbf94]\n+\n+\t* d/d-decls.cc: Issue #298 - Array Range Functions Don't Get Inlined\n+\t[f9217ce815ea]\n+\n+2011-12-25  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d/d-glue.cc, d/dmd2/expression.c, d/dmd2/expression.h,\n+\td/dmd2/optimize.c, d/phobos/configure, d/phobos2/configure: Fixup\n+\tarrayliteral assignments.\n+\t[d71656e55ad8]\n+\n+\t* d/phobos/configure, d/phobos2/configure: Rebuild configure for D1\n+\t[bedf43669633]\n+\n+\t* d/d-glue.cc: Issue #297 - GDC Acquires Locks Twice in Synchronized\n+\tMember Methods.\n+\t[7470a20b2900]\n+\n+\t* d/d-objfile.cc, d/d-objfile.h: First attack at fixing issue #246\n+\t[bd1f89846e93]\n+\n+2011-12-23  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d/d-codegen.cc: Issue #287 - Casting between array types is broken.\n+\t[63647d6f2b87]\n+\n+\t* d/phobos2/Makefile.in, d/phobos2/configure: Rebuild Makefile.in,\n+\tconfigure for D2.\n+\t[b3200b086277]\n+\n+\t* d/d-lang.cc: Issue #296 - -fproperty implies -frelease\n+\t[4dfa4c11ccd7]\n+\n+\t* d/d-codegen.cc, d/d-codegen.h, d/d-lang.cc: Remove unused\n+\twarnSignCompare.\n+\t[60ea5d6b4173]\n+\n+\t* d/d-codegen.cc: Issue #289 - ICE: in extract_range_from_binary_expr,\n+\tat tree-vrp.c:229\n+\t[9076a0f27fd9]\n+\n+\t* d/dmd-script, d/dmd-script.1, d/gdc.1: Update manpages for new\n+\tGDC/GDMD options.\n+\t[9caec4bea289]\n+\n+\t* d/d-objfile.cc: Issue #279 - ICE: in gimple_expand_cfg\n+\t[6778c7a1f79e]\n+\n+\t* d/d-builtins2.cc: Add CTFE support for builtins atan2, rndtol,\n+\texpm1, exp2.\n+\t[afe30f1b9435]\n+\n+2011-12-18  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d/d-codegen.cc: D2 - Handle nulltype to D array conversions.\n+\t[d7fe9fa5bb6c]\n+\n+\t* d/d-glue.cc, d/d-lang.cc: Match GCC logic for emitting D_LP64\n+\tversion identifier.\n+\t[7475431fe1bd]\n+\n+\t* d/d-codegen.cc, d/d-decls.cc, d/d-glue.cc: Better implementation of\n+\tbt, btc, bts, btr functions, allowing constant folding.\n+\t[caf2c8d4f036]\n+\n+\t* d/d-builtins2.cc: Implement CTFE for bswap, bsr, bsf.\n+\t[730c51fcdd3e]\n+\n+\t* d/druntime/core/thread.d: Issue #290 - errno conflict in std.file\n+\t[ecd60be7f89c]\n+\n+\t* d/d-lang.cc: Define D_LP64 if is64bit.\n+\t[633ea9c9e5bf]\n+\n+\t* d/dmd-script: Issue #282 - gdmd multithreaded -lib implementation.\n+\t[f1bd82f9bb5b]\n+\n+\t* d/dmd-script: Issue #283 - gdmd: libraries not put into -od dir.\n+\t[75a7b584473a]\n+\n+\t* d/d-objfile.cc, d/dmd/attrib.c, d/dmd2/attrib.c, d/lang.opt: Issue\n+\t#286 - -fignore-unknown-pragmas doesn't seem to work\n+\t[f342fde254e2]\n+\n+2011-12-16  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d/d-builtins2.cc, d/d-codegen.cc, d/d-decls.cc, d/d-glue.cc,\n+\td/d-irstate.cc, d/d-irstate.h, d/d-lang.cc, d/dmd2/*, d/druntime/*,\n+\td/phobos2/*: Updated D2 Frontend to 2.057\n+\t[36c28efc6c88]\n+\n+2011-12-11  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d/dmd/*: Updated D1 Frontend to 1.072\n+\t[e83cac3b4109]\n+\n+\t* d/dmd/expression.c, d/dmd2/expression.c: Issue #279 - ICE: in\n+\tgimple_expand_cfg\n+\t[c501487a685a]\n+\n+2011-12-08  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d/Make-lang.in, d/asmstmt.cc, d/d-asm-i386.h, d/d-builtins2.cc,\n+\td/d-codegen.cc, d/d-cppmngl.cc, d/d-decls.cc, d/d-dmd-gcc.h,\n+\td/d-glue.cc, d/d-irstate.cc, d/d-lang-45.h, d/d-lang-type-45.h,\n+\td/d-lang-type.h, d/d-lang.cc, d/d-lang.h, d/d-objfile.cc,\n+\td/dmd-script, d/dmd2/*, d/druntime/*, d/phobos2/*: Updated D2 Fronted\n+\tto 2.056\n+\t[fbe890ef4c1f]\n+\n+\t* d/d-codegen.cc, d/d-glue.cc: Relax conversion checking. Move getImpl\n+\tto CastExp.\n+\t[b0407ff2e57c]\n+\n+\t* d/dmd/optimize.c, d/dmd2/optimize.c: Remove old frontend ifdef'd\n+\tcode.\n+\t[8e0291212f46]\n+\n+2011-12-02  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d/d-lang.cc, d/lang-specs.h, d/lang.opt: remove preprocessor options\n+\tfrom spec and use own switches.\n+\t[5f71b69d1494]\n+\n+\t* d/d-objfile.cc: Issue #275 - ICE with wrong interface implementation\n+\t[e32c8fbe7343]\n+\n+\t* d/d-lang.cc, d/dmd/mars.h, d/dmd2/mars.h, d/lang-specs.h,\n+\td/lang.opt: Issue #236 - -M, -MM, -MF options to generate dependencies\n+\tlike gcc\n+\t[3763796b9cbf]\n+\n+\t* d/d-lang.cc, d/lang.opt: ASCII collate lang switches.\n+\t[951ff44f1035]\n+\n+2011-12-02  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d/d-objfile.cc: Issue #268 - ICE with -flto and -g\n+\t[3da453291dc3]\n+\n+2011-11-24  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d/Make-lang.in: Issue #266 - make install-strip fails to install\n+\tgdmd.\n+\t[d1005cb77a06]\n+\n+\t* d/d-glue.cc, d/d-lang.cc, d/dt.cc: Remove checks for\n+\ttype_structural_equality for now.\n+\t[5265f1318114]\n+\n+\t* d/d-glue.cc: Issue #261 - ICE: tree check: expected record_type or\n+\tunion_type, have array_type in delegateVal\n+\t[61ab289788a3]\n+\n+\t* d/d-glue.cc: Issue #264 - ICE: can't convert between bool and enum :\n+\tbool\n+\t[fcb2523b8ccd]\n+\n+\t* d/d-codegen.cc, d/d-glue.cc: Issue #263 - forward reference error\n+\twith algorithm.find\n+\t[75b7e1bca4d7]\n+\n+2011-11-19  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d/asmstmt.cc, d/d-asm-i386.h, d/d-builtins2.cc, d/d-decls.cc,\n+\td/d-glue.cc, d/d-irstate.cc, d/d-lang-45.h, d/d-lang.cc, d/d-lang.h,\n+\td/d-objfile.cc: Add d_free, rename dkeep to d_keep.\n+\t[a0e0fcfd913c]\n+\n+2011-11-18  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d/d-builtins2.cc, d/d-codegen.cc, d/d-lang-45.h, d/d-lang.cc,\n+\td/d-lang.h: Issue #262 - ICE: weird segfault when -o option is used\n+\t[51d11a9bddf2]\n+\n+\t* d/d-lang.cc: Issue #255 - ICE: invalid conversion in gimple call\n+\t[36ae9c015e86]\n+\n+\t* d/d-decls.cc: Issue #259 - ICE: constant not recomputed when\n+\tADDR_EXPR changed\n+\t[72c16f7ab674]\n+\n+\t* d/d-builtins2.cc, d/d-dmd-gcc.h, d/dmd/attrib.c,\n+\td/dmd/declaration.c, d/dmd/declaration.h, d/dmd/mtype.c,\n+\td/dmd/struct.c, d/dmd2/attrib.c, d/dmd2/declaration.c,\n+\td/dmd2/declaration.h, d/dmd2/mtype.c, d/dmd2/struct.c: Issue #215 -\n+\tAlignment of struct members wrong on ARM\n+\t[2df7ca5fa4b6]\n+\n+\t* d/d-codegen.cc, d/d-codegen.h, d/d-decls.cc, d/d-glue.cc,\n+\td/d-lang.cc: Issue #242 - Another lambda segfault\n+\t[467d7fa518fc]\n+\n+2011-10-31  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d/d-lang.cc: Arm -> ARM and darwin -> Darwin in d-lang.cc.\n+\t[51e67c38af0c]\n+\n+2011-10-30  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d/target-ver-syms.sh: Make some system and CPU version identifiers\n+\tconsistent in casing.\n+\t[5d11c2ded7b7]\n+\n+\t* d/d-codegen.cc, d/d-decls.cc, d/d-glue.cc: Use isMember2 when\n+\tchecking member functions.\n+\t[d89c3b7d495a]\n+\n+\t* d/d-codegen.cc, d/d-decls.cc, d/d-lang-45.h, d/d-lang.h,\n+\td/d-objfile.cc: Issue #78 D1/D2 - in/out contract inheritance\n+\t[736ae4b92f2]\n+\n+2011-10-26  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d/asmstmt.cc, d/d-asm-i386.h, d/d-glue.cc, d/d-irstate.cc: Issue\n+\t#252 - Error: suffix or operands invalid for `jc'\n+\t[0d65aed46422]\n+\n+\t* d/lang-specs.h, d/patches/patch-apple-gcc-5465,\n+\td/patches/patch-apple-gcc-5664, d/patches/patch-gcc-4.2.x,\n+\td/patches/patch-gcc-4.3.x, d/patches/patch-gcc-4.4.x,\n+\td/patches/patch-gcc-4.5.x, d/patches/patch-gcc-4.6.x: Issue #251 -\n+\tRemove all references to fmultilib-dir usage in gdc spec and patches.\n+\t[c72727fc3f13]\n+\n+2011-10-23  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d/druntime/core/stdc/stdio.d, d/druntime/core/stdc/stdlib.d,\n+\td/druntime/rt/critical_.d, d/druntime/rt/dmain2.d,\n+\td/druntime/rt/monitor_.d, d/phobos/config/libc.x3,\n+\td/phobos2/config/libc.x3, d/target-ver-syms.sh: Start on implementing\n+\tplatform agnostic druntime for GDC D2.\n+\t[c46d1009bd78]\n+\n+\t* d/d-lang.cc, d/target-ver-syms.sh: Add VENDOR_VERSYM to D version\n+\tidentifiers if defined.\n+\t[f7abc9009d0d]\n+\n+\t* d/d-lang.cc, d/d-objfile.cc: Issue #224 - Link time optimization\n+\t[bf9d0ac53e9d]\n+\n+\t* d/d-decls.cc, d/d-glue.cc, d/d-irstate.cc, d/d-irstate.h,\n+\td/d-lang.cc, d/d-objfile.cc, d/d-objfile.h, d/lang.opt: Merge changes\n+\tfrom gcc-4.7 branch.\n+\t[5992dd0f2f7e]\n+\n+\t* d/d-codegen.cc: Use gcc atomics for bt, btc, btr, bts intrinsics.\n+\t[2cc2e8c5a778]\n+\n+\t* d/d-glue.cc: build_assign_math_op: Stabilize LHS expression.\n+\t[031b711ce09]\n+\n+2011-10-21  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d/asmstmt.cc, d/d-asm-i386.h, d/d-codegen.cc, d/d-glue.cc,\n+\td/d-irstate.cc, d/d-lang-45.h, d/d-lang.h, d/dmd/mtype.c,\n+\td/dmd2/mtype.c: Issue #247 - undefined reference to `.LDASM1'\n+\t[19de20aec625]\n+\n+\t* d/asmstmt.cc, d/d-asm-i386.h: Fallback to 32bit instruct suffix when\n+\t64bit not available, add special case for fild.\n+\t[8789c97f84ac]\n+\n+\t* d/asmstmt.cc, d/d-asm-i386.h: Issue #248 - Inline assembler\n+\tgenerates wrong argument size for FILD instruction.\n+\t[8bd2a4ca84c0]\n+\n+2011-09-27  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d/dmd-script: Issue #241 - dmd.conf DFLAGS doesn't work with\n+\tDMD-style args.\n+\t[4bf307759462]\n+\n+\t* d/d-codegen.cc, d/d-glue.cc: Issue #239 - Filter + Closure =\n+\tSegfault.\n+\t[23b24ffe94f2]\n+\n+\t* d/dmd-script: Properly handle -X and -map switches in gdmd.\n+\t[f7c13cf55264]\n+\n+\t* d/asmstmt.cc, d/d-asm-i386.h, d/d-irstate.cc, d/d-irstate.h: Fixup\n+\tsome build warnings.\n+\t[891f65500765]\n+\n+\t* d/dmd-script: Issue #234 - add DFLAGS to the build command in gdmd.\n+\t[3acdb17df213]\n+\n+2011-09-25  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d/dmd-script: Issue #234 - dmd.conf equivalent\n+\t[db9070d078a8]\n+\n+\t* d/druntime/core/thread.d, d/phobos2/std/path.d: Re-add fixes that\n+\tgot removed in last D library merge.\n+\t[a998cdff6e0f]\n+\n+\t* d/dmd/todt.c, d/dmd2/todt.c, d/dt.cc: size_t'ify toDt.\n+\t[c1306d366f94]\n+\n+\t* d/d-glue.cc: CallExp - only call convert on basic return types.\n+\t[bc7ad8e2569]\n+\n+\t* d/d-gcc-real.cc: real_t::convert - check base type\n+\t[71eb59683499]\n+\n+\t* d/dmd/attrib.c, d/dmd2/attrib.c: Optimise attribute pragma\n+\targuments.\n+\t[dca4ddf21110]\n+\n+2011-09-23  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d/d-glue.cc: Issue #235 - ICE in feep's tools library\n+\t[17da3d28ba17]\n+\n+2011-09-15  Daniel Green  <venix1@gmail.com>\n+\n+\t* d/d-glue.cc: Make PowAssignExp::toElem only compile with D2.\n+\t[fa6a47ddbd9c]\n+\n+\t* d/dt.h: Issue #231.  Use size_t for dt_size declaration in dt.h.\n+\t[f9fee0fd57a2]\n+\n+2011-09-14  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d/d-builtins2.cc, d/d-gcc-real.cc, d/d-gcc-real.h, d/d-glue.cc,\n+\td/dmd2/constfold.c, d/dmd2/declaration.h, d/dmd2/expression.c,\n+\td/dmd2/expression.h, d/dmd2/interpret.c, d/dmd2/optimize.c: Implement\n+\tconstant folding of ^^ expressions.\n+\t[06f5e7c038fa]\n+\n+\t* d/asmstmt.cc, d/d-asm-i386.h, d/d-builtins2.cc, d/d-codegen.cc,\n+\td/d-cppmngl.cc, d/d-decls.cc, d/d-glue.cc, d/d-incpath.cc,\n+\td/d-lang.cc, d/d-objfile.cc, d/dt.cc: Change unsigned for size_t in\n+\tfor loops.\n+\t[814fc99ff732]\n+\n+\t* d/d-lang.cc, d/dmd/mars.c, d/dmd2/mars.c: Re-enforce -Werror flag in\n+\tgdc.\n+\t[eced11f7d5b5]\n+\n+\t* d/d-glue.cc: Issue #232 - sqrt(3) == 2.15118e-4930\n+\t[8994cef9271f]\n+\n+2011-09-12  Daniel Green  <venix1@gmail.com>\n+\n+\t* d/d-lang.cc: Convert Array to Strings required by DMD 1.070/2.055\n+\t[fc0033715683]\n+\n+2011-09-12  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d/druntime/rt/dmain2.d, d/druntime/rt/lifetime.d: Issue #214 -\n+\tSegfault Allocating from Shared Static C'tor\n+\t[41218d9f5f59]\n+\n+\t* d/asmstmt.cc, d/d-asm-i386.h, d/d-builtins2.cc, d/d-codegen.cc,\n+\td/d-codegen.h, d/d-cppmngl.cc, d/d-decls.cc, d/d-dmd-gcc.h,\n+\td/d-glue.cc, d/d-incpath.cc, d/d-irstate.cc, d/d-irstate.h,\n+\td/d-lang.cc, d/d-objfile.cc, d/d-objfile.h, d/dmd2/*, d/druntime/*,\n+\td/phobos2/*: Updated D2 Frontend to 2.055.\n+\t[0ada920f6394]\n+\n+\t* d/dmd/*, d/phobos/*: Updated D1 Frontend to 1.070.\n+\t[fad5f4cad72b]\n+\n+2011-09-10  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d/d-spec.c: Issue #230 - Error building Cross Compiler under MinGW\n+\t[b0a9ef534877]\n+\n+\t* d/d-lang.cc, d/druntime/core/thread.d: Issue #226 - GC from spawned\n+\tthreads segfaults on 64-bit\n+\t[3ea496446c7e]\n+\n+2011-09-03  Daniel Green  <venix1@gmail.com>\n+\n+\t* d/asmstmt.cc: Use of V1 is more correct.\n+\t[748ce286f58f]\n+\n+\t* d/dmd/root.c d/dmd2/root.c: Enables MinGW32 to use ANSI STDIO.\n+\t[e69b142048f0]\n+\n+\t* d/asmstmt.cc: Allow inline assembly to set return values.  Matches\n+\tDMD functionality.\n+\t[857c5645429c]\n+\n+2011-08-29  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d/d-codegen.cc, d/d-decls.cc, d/d-glue.cc, d/d-lang.cc,\n+\td/d-objfile.cc, d/symbol.cc: Emit pretty identifier to the debugger.\n+\t[ac87eb9db360]\n+\n+2011-08-23  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d/d-codegen.cc, d/d-glue.cc, d/d-objfile.cc: Don't warn about unused\n+\tcompiler generated vars.\n+\t[0a71a122ca29]\n+\n+\t* d/d-codegen.cc, d/d-codegen.h, d/d-glue.cc, d/d-irstate.cc,\n+\td/d-irstate.h, d/d-lang-45.h, d/d-lang.cc, d/d-lang.h: New functions\n+\tbuild_d_decl_lang_specific, d_mark_exp_read. Added support for\n+\t-Wunused-variable, WIP -Wunused-but-set-variable.\n+\t[d23bab68266c]\n+\n+2011-08-19  Daniel Green  <venix1@gmail.com>\n+\n+\t* d/druntime/core/sys/windows/stacktrace.d: Issue #227.  build error\n+\tlibphobos/core/sys/windows/stacktrace.d.\n+\t[b1c34b7e7764]\n+\n+2011-08-15  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d/d-decls.cc: Issue #225 - Array ops should be COMDAT.\n+\t[dda1c10c8c7b]\n+\n+2011-08-12  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d/d-glue.cc, d/d-irstate.cc: Re-add codegen which caused issue #205\n+\tin correct place.\n+\t[e26b2b67bffa]\n+\n+\t* d/d-codegen.cc, d/d-gcc-includes.h: Issue #191 - SEGV(gimple.c:2624)\n+\tgetting array ref of incomplete type.\n+\t[d0edf91c3fcf]\n+\n+2011-08-07  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d/d-codegen.cc, d/d-glue.cc: Issue #205 - ICE using phobos sort.\n+\t[b3a5c764de90]\n+\n+\t* d/d-asm-i386.h, d/d-tree.def: Define tree code IASM_EXPR.\n+\t[c7e7dc1c089b]\n+\n+\t* d/d-asm-i386.h: Handle zero and one operand forms of fcomi, fcomip.\n+\tFixed db, ds, di, dl to output constants and strings properly.\n+\t[e394c90a88fa]\n+\n+\t* d/d-decls.cc, d/d-glue.cc, d/d-lang-type-45.h, d/d-lang-type.h,\n+\td/d-lang.cc, d/d-lang.h: Create TYPE_LANG_SPECIFIC type for arrays,\n+\tfunctions, delegates.\n+\t[1c25bfb71c05]\n+\n+\t* d/d-glue.cc, d/dt.cc: Use TYPE_STRUCTURAL_EQUALITY for conversions\n+\tof records, should fix Issue #217.\n+\t[04b8a399ddeb]\n+\n+\t* d/asmstmt.cc, d/d-asm-i386.h: Fix error using offsetoff for\n+\tSymOffExp's in IASM.\n+\t[933d2ca08770]\n+\n+\t* d/d-asm-i386.h: Added SSE4.1, SSE4.2 instructions\n+\t[6a643f59ac86]\n+\n+\t* d/d-codegen.cc, d/d-codegen.h, d/d-glue.cc, d/d-lang-45.h,\n+\td/d-lang.cc, d/d-lang.h, d/d-objfile.cc, d/dt.cc: More 4.6.x gimple\n+\tchecking issues.\n+\t[148a5a16d432]\n+\n+2011-07-30  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d/d-codegen.cc, d/d-glue.cc, d/d-lang-45.h, d/d-lang.h,\n+\td/d-objfile.cc, d/dt.cc: Fix gimplication checking issues in 4.6.x\n+\t[d3cc96b0546f]\n+\n+\t* d/d-codegen.cc: Issue #220 - Segfault on nested mixin functions.\n+\t[c3720dd1e4f6]\n+\n+\t* d/patches/patch-gcc-4.6.x: Issue #218 - segmentation fault when\n+\tcompiling Hello World.\n+\t[07bb061b2e4b]\n+\n+2011-07-28  Daniel Green  <venix1@gmail.com>\n+\n+\t* d/d-glue.cc: Backout untested solution to issue #217.\n+\t[fd532d8a5181]\n+\n+\t* d/d-glue.cc, d/setup-gcc.sh: Fixes issue #219\n+\t[949ab1610a42]\n+\n+\t* d/setup-gcc.sh: Updated -hg to reflect working directory revision\n+\tand handle compiling outside a mercurial repository.\n+\t[b3b60fdac583]\n+\n+2011-07-24  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d/GDC.html, d/README, d/gdc-version: GDC version 0.30\n+\t[a4f3d0470b7a]\n+\n+\t* d/Make-lang.in, d/d-codegen.cc, d/d-codegen.h, d/d-glue.cc,\n+\td/d-lang.cc, d/patches/patch-gcc-4.2.x, d/patches/patch-gcc-4.3.x,\n+\td/patches/patch-gcc-4.4.x, d/patches/patch-gcc-4.5.x,\n+\td/patches/patch-gcc-4.6.x, d/symbol.cc d/symbol.h: Re-implemented D\n+\tcustom static chains into frontend - removed all belated backend\n+\tpatches.\n+\t[488e8c0f482f]\n+\n+\t* d/Make-lang.in, d/asmstmt.cc, d/d-asm-i386.h, d/d-codegen.cc,\n+\td/d-codegen.h, d/d-decls.cc, d/d-glue.cc, d/d-lang.cc, d/d-objfile.cc,\n+\td/d-objfile.h, d/dmd2/*, d/druntime/*, d/phobos2/*: Updated D2\n+\tFrontend to 2.054\n+\t[ca958eccbde0]\n+\n+\t* d/Make-lang.in, d/asmstmt.cc, d/d-builtins.c, d/d-builtins2.cc,\n+\td/d-codegen.cc, d/d-codegen.h, d/d-convert.cc, d/d-decls.cc,\n+\td/d-glue.cc, d/d-irstate.cc, d/dmd/*, d/phobos/*: Updated D1 Frontend\n+\tto 1.069\n+\t[c77c7af3dda0]\n+\n+2011-07-11  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d/d-codegen.cc, d/d-glue.cc, d/d-lang.h: Debug fixes: Give AAs a\n+\tTYPE_NAME. Make closure vars visible to the debugger.\n+\t[7cb42bd4eb94]\n+\n+2011-07-09  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d/d-asm-i386.h: Issue #213 - ASM: Invalid absolute jmp/call address\n+\t[e01697578501]\n+\n+\t* d/d-asm-i386.h, d/d-glue.cc, d/d-lang.cc: Asm 32/64bit generation\n+\tfixes.\n+\t[0a2261bde3e1]\n+\n+\t* d/d-codegen.h, d/d-decls.cc, d/d-lang.h, d/patches/patch-gcc-4.4.x,\n+\td/patches/patch-gcc-4.5.x, d/patches/patch-gcc-4.6.x: Use\n+\tTREE_NO_TRAMPOLINE macro - remove redundant patches.\n+\t[b79169244c60]\n+\n+2011-07-04  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d/Make-lang.in: Fixes executable relocation issues with MinGW.\n+\t[c272d49246c9]\n+\n+\t* d/d-decls.cc: Always mark struct/class members for inlining.\n+\t[61c81c98d80c]\n+\n+2011-06-30  Daniel Green  <venix1@gmail.com>\n+\n+\t* d/d-asm-i386.h: Fixes issue #213.\n+\t[71737ec293cb]\n+\n+2011-06-20  Daniel Green  <venix1@gmail.com>\n+\n+\t* d/phobos/internal/gc/win32.d, d/phobos/std/stream.d: Win64 support\n+\tfor Phobos/D1.\n+\t[b2b0dae5dec2]\n+\n+\t* d/Make-lang.in, d/dmd/root.c: Enables ANSI implemention of MinGW\n+\tstdio.\n+\t[fd0f112bfca8]\n+\n+\t* d/dmd-script: Added the ability to specify the name of output map\n+\tfile.  Undocumented DMD feature.\n+\t[d36a8b0e175]\n+\n+2011-06-19  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d/d-codegen.cc, d/d-glue.cc, d/d-objfile.cc, d/dmd2/arrayop.c,\n+\td/druntime/core/stdc/math.d, d/phobos2/gcc/deh.d: Issue #212 - ICE\n+\tWith Map, dotProduct\n+\t[f333a7e70d3d]\n+\n+2011-06-08  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d/d-asm-i386.h, d/d-builtins2.cc, d/d-codegen.cc, d/d-codegen.h,\n+\td/d-decls.cc, d/d-glue.cc, d/dmd2/*, d/druntime/*, d/phobos2/*:\n+\tUpdated D2 Frontend to 2.053\n+\t[89eccdc0155e]\n+\n+\t* d/d-decls.cc, d/d-lang-45.h, d/d-lang.h, d/d-objfile.cc: gcc-4.6.x -\n+\tFix imported static const optimizer bug (D2 now passes testsuite).\n+\t[9ccc077422a8]\n+\n+2011-06-05  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d/Make-lang.in, d/d-codegen.cc, d/dmd-script: gcc-4.6.x - -combine\n+\tremoved, re-add d-gcc.o object, fix compilation on ARM.\n+\t[dd43ade64753]\n+\n+\t* d/d-decls.cc, d/d-objfile.cc, d/patches/patch-gcc-4.6.x: gcc-4.6.x -\n+\tFix undefined references to thunks.\n+\t[6b13c1f980f4]\n+\n+\t* d/d-bi-attrs-40.h, d/d-bi-attrs-41.h: Remove d-bi-attrs.h for 4.0\n+\tand 4.1\n+\t[86169933de9c]\n+\n+2011-06-02  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d/Make-lang.in, d/d-bi-attrs-45.h, d/d-lang.cc, d/d-spec.c,\n+\td/lang.opt, d/patches/patch-gcc-4.6.x, d/setup-gcc.sh: Fix missing\n+\tgcc-4.6 driver options, add to setup scripts.\n+\t[937e3e68e003]\n+\n+2011-05-31  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d/Make-lang.in, d/config-lang.in, d/d-builtins.c, d/d-builtins2.cc,\n+\td/d-codegen.h, d/d-gcc-real.cc, d/d-glue.cc, d/d-incpath.cc,\n+\td/d-lang-45.h, d/d-lang.cc, d/d-spec.c, d/lang.opt,\n+\td/patches/patch-gcc-4.6.x, d/patches/patch-toplev-4.6.x: Add gcc-4.6.x\n+\tsupport\n+\t[94fdbcd3ae33]\n+\n+\t* d/Make-lang.in, d/d-bi-attrs-45.h, d/d-builtins.c, d/d-codegen.cc,\n+\td/d-codegen.h, d/d-gcc-includes.h, d/d-lang.cc, d/d-lang.h,\n+\td/d-objfile.cc, d/druntime/core/stdc/stdarg.d,\n+\td/druntime/core/vararg.d, d/patches/patch-gcc-4.0.x,\n+\td/patches/patch-gcc-4.1.x, d/patches/patch-toplev-4.0.x,\n+\td/patches/patch-toplev-4.1.x, d/phobos/std/c/stdarg.d,\n+\td/phobos/std/stdarg.d, d/symbol.h: Drop support for gcc-4.0.x;\n+\tgcc-4.1.x\n+\t[75f0bbfbdd5e]\n+\n+\t* d/d-asm-i386.h: Rename cmpxch8b to cmpxchg8b\n+\t[21128c37d917]\n+\n+2011-04-29  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d/d-glue.cc: Issue #203 - ArrayLiteralExp::toElem incorrectly sets\n+\tTREE_STATIC\n+\t[584a5f3a7dce]\n+\n+\t* d/druntime/core/stdc/wchar_.d: Use alias to make vswprintf and\n+\tswprintf match ANSI signature.\n+\t[344229e36805]\n+\n+\t* d/d-glue.cc: Issue #200 - Optimization breaks condition variables\n+\t[b805b62dcdc8]\n+\n+\t* d/d-builtins2.cc, d/d-codegen.cc, d/d-glue.cc, d/dt.cc: Be less\n+\ttrusting with GCC builtins.\n+\t[194016d49ca]\n+\n+2011-04-23  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d/d-asm-i386.h: Make SSE3 iasm opcodes available for 32bit.\n+\t[7861f5acdf6b]\n+\n+\t* d/dmd/todt.c, d/dmd2/todt.c: speed up emission of large static array\n+\tinitialisers.\n+\t[9a840a37e508]\n+\n+\t* d-decls.cc, d/d-glue.cc, d/phobos/configure, d/phobos/configure.in,\n+\td/phobos2/Makefile.am, d/phobos2/configure: D1 regression with static\n+\tarray equality testing.\n+\t[af07c3a2f08c]\n+\n+2011-04-18  Daniel Green  <venix1@gmail.com>\n+\n+\t* d/phobos2/Makefile.in: Added std/c/wcharh.d to list of compiled\n+\tWindows objects.  Required by MinGW's stdio patch\n+\t[3cf208768d86]\n+\n+2011-04-17  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d/Make-lang.in, d/d-decls.cc, d/druntime/core/thread.d,\n+\td/phobos/configure, d/phobos/configure.in, d/phobos2/Makefile.am,\n+\td/phobos2/Makefile.in, d/phobos2/configure, d/phobos2/configure.in:\n+\tEdit configure scripts so cross compilers install imports in gcc\n+\tversion specific runtime directory\n+\t[8fe76a59ba1e]\n+\n+\t* d/d-builtins2.cc: Issue #192 - ARM Compilation Fails When Including\n+\tgcc.intrinsics\n+\t[bf186179001b]\n+\n+\t* d/druntime/core/stdc/stdio.d: Change ctor in cstdio to 'shared\n+\tstatic' - should fix Mingw IO in std.stdio\n+\t[efb1b1ed90d8]\n+\n+\t* d/d-objfile.cc, d/druntime/core/stdc/stdio.d, d/phobos2/Makefile.am,\n+\td/phobos2/Makefile.in, d/phobos2/std/stdio.d: Merge Daniel's MinGW\n+\twork, put special case static ctor in core.stdio\n+\t[71f10f204790]\n+\n+2011-04-15  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d/dmd/func.c, d/dmd2/func.c: Remove __va_argsave definition from\n+\t64bit GDC\n+\t[997a9ec407fe]\n+\n+\t* testsuite/*: Upload D2 testsuite for GDC.\n+\t[6e40c9c42f6e]\n+\n+\t* d/d-asm-i386.h, d/d-irstate.cc, d/d-objfile.cc,\n+\td/druntime/core/thread.d: 64bit IASM fix, move tls definitions to\n+\td-objfile, add _tls_index stub for MinGW.\n+\t[ff35bec78100]\n+\n+\t* d/d-objfile.cc: Issue #187 - Multiple definition of TypeInfo with\n+\tMinGW.\n+\t[d52ae1bf8343]\n+\n+\t* d/d-lang.cc, d/dmd-script, d/druntime/rt/monitor_.d: Uncomment\n+\timplementations in rt.monitor_ (for MinGW), code cleanups.\n+\t[1cf36f68d061]\n+\n+\t* d/d-codegen.cc: Issue #189 - sqrt(integer) causes ICE in\n+\tmaybeExpandSpecialCall\n+\t[d46da356ca46]\n+\n+\t* d/d-incpath.cc: Issue #188 - -J option ignored.\n+\t[875395c71f37]\n+\n+\t* d/Make-lang.in, d/d-asm-i386.h, d/d-builtins2.cc, d/d-codegen.cc,\n+\td/d-glue.cc, d/d-irstate.cc, d/dt.cc: 64bit testsuite fixes - passes\n+\tall tests 32bit linux passes.\n+\t[62c8038af25a]\n+\n+\t* d/Make-lang.in, d/d-builtins.c, d/d-decls.cc, d/d-lang-45.h,\n+\td/d-lang.cc, d/d-lang.h, d/d-misc.c, d/d-objfile.cc,\n+\td/phobos/configure, d/phobos/configure.in, d/phobos2/configure,\n+\td/phobos2/configure.in: Remove d-misc.c, fixed code that depended on\n+\tit.\n+\t[066ecfe85f1]\n+\n+\t* d/d-builtins2.cc, d/d-codegen.cc, d/d-codegen.h: Issue #185 -\n+\tIntrinsics cause ICE on MinGW\n+\t[c17a1cdfb868]\n+\n+2011-04-11  Daniel Green  <venix1@gmail.com>\n+\n+\t* d/Make-lang.in, d/d-incpath.cc, d/d-lang-45.h, d/d-lang.cc,\n+\td/d-lang.h: Added d-incpath.c for handling import paths.\n+\t[5a55df337408]\n+\n+\t* d/setup-gcc.sh: Added option '-hg' for replacing 'gdc-version' with\n+\trepository revision.\n+\t[32ed0cf6d419]\n+\n+2011-04-09  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d/d-codegen.cc, d/d-codegen.h: Implement math intrinsics into the\n+\tcompiler.\n+\t[431f375abaf1]\n+\n+\t* d/d-asm-i386.h, d/druntime/core/atomic.d: More 64bit IASM fixes,\n+\tfavour ASM implementations in core.atomic.\n+\t[8f5627ca0ba5]\n+\n+\t* d/phobos2/gcc/bitmanip.d: Really remove gcc.bitmanip.\n+\t[c61617158bd8]\n+\n+\t* d/druntime/core/atomic.d, d/phobos/configure, d/phobos/configure.in,\n+\td/phobos2/Makefile.am, d/phobos2/Makefile.in, d/phobos2/configure,\n+\td/phobos2/configure.in, d/phobos2/gcc/atomics.d: First stab at\n+\tgcc.atomics; Remove unused gcc.bitmanip; Add -inline as DFLAG for\n+\tPhobos\n+\t[1a74f184e2d8]\n+\n+2011-04-08  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d/d-asm-i386.h, d/d-codegen.cc, d/d-glue.cc, d/d-lang.cc,\n+\td/d-spec.c: Issue #164 - ICE:fold-const.c:2792.\n+\t[c42297cf76c3]\n+\n+\t* d/d-asm-i386.h, d/druntime/core/thread.d: 64bit IASM fixes.\n+\t[406daaa254ad]\n+\n+\t* d/d-builtins2.cc, d/d-glue.cc: Issue #164 - (ICE:fold-const.c:2792)\n+\tusing std.range.zip\n+\t[437b1cc2f607]\n+\n+\t* d/d-lang.cc, d/phobos/Makefile.am, d/phobos/Makefile.in,\n+\td/phobos2/Makefile.am, d/phobos2/Makefile.in: Phobos: Issue #179 -\n+\texplicitly include zlib directory when building.\n+\t[37ba91ed454c]\n+\n+\t* d/d-convert.cc: Issue 143: non-determistic FPE in runtime code.\n+\t[4ea171da4900]\n+\n+\t* d/d-codegen.cc: Issue #178 - ICE in hwi2toli.\n+\t[9133d6873087]\n+\n+\t* d/Make-lang.in, d/d-codegen.cc: Tidy up Make-lang.in, remove old\n+\tbits.\n+\t[1d8b36b4bfb7]\n+\n+\t* d/d-codegen.cc, d/d-glue.cc, d/d-irstate.cc, d/d-objfile.cc: Remove\n+\told-old workarounds for GCC < 4.0.x\n+\t[b2ffdbb41245]\n+\n+\t* d/d-gcc-real.cc, d/d-gcc-real.h, d/dmd/cast.c, d/dmd2/cast.c,\n+\td/dmd2/expression.c: D2: Fix precision bug in PowExp.\n+\t[ab7782c68bb5]\n+\n+\t* d/d-codegen.cc, d/d-gcc-real.cc: Don't error when casting from\n+\tstatic array -> struct of same type size.\n+\t[90b0b0208d3f]\n+\n+2011-03-30  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d/Make-lang.in, d/d-gcc-real.cc, d/d-gcc-real.h: Fix strict-aliasing\n+\twarning.\n+\t[79ed94287f94]\n+\n+2011-03-30  Daniel Green  <venix1@gmail.com>\n+\n+\t* d/asmstmt.cc: An unitialized array was forcing GDC to mark all\n+\tregisters as clobbered.\n+\t[007de89f7694]\n+\n+2011-03-27  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d/d-lang.cc: Move cgraph finalize into d_write_global_decls.\n+\t[b7da3f7426ac]\n+\n+\t* d/asmstmt.cc, d/d-asm-i386.h, d/d-codegen.h, d/d-dmd-gcc.h,\n+\td/d-gcc-real.h, d/d-irstate.cc, d/d-irstate.h, d/d-objfile.cc,\n+\td/d-objfile.h, d/druntime/core/thread.d, d/patches/patch-gcc-4.5.x,\n+\td/symbol.h: _tlsstart/_tlsend compiler generated symbols.\n+\t[d2dfed983fff]\n+\n+\t* d/Make-lang.in, d/d-builtins.c, d/d-builtins2.cc, d/d-codegen.cc,\n+\td/d-glue.cc, d/d-lang-45.h, d/d-lang.cc, d/d-lang.h: New\n+\td_global_trees array for gcc trees of commonly used D types/decls.\n+\t[d553b62db8e6]\n+\n+2011-03-24  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d/d-codegen.cc, d/d-decls.cc, d/d-glue.cc, d/d-objfile.cc,\n+\td/d-objfile.h, d/patches/patch-gcc-4.1.x, d/patches/patch-gcc-4.2.x,\n+\td/patches/patch-gcc-4.3.x, d/patches/patch-gcc-4.4.x,\n+\td/patches/patch-gcc-4.5.x: More WIP DMD calling convention - evaluate\n+\targuments left to right, pass in reverse order\n+\t[6949b05e21e4]\n+\n+\t* d/asmstmt.cc, d/d-asm-i386.h, d/d-codegen.cc, d/d-codegen.h,\n+\td/d-irstate.cc, d/d-lang-45.h, d/d-lang.cc, d/d-lang.h, d/lang.opt:\n+\tMore WIP - 64bit IASM.\n+\t[a85a80c8732a]\n+\n+\t* d/patches/patch-gcc-4.1.x, d/patches/patch-gcc-4.2.x,\n+\td/patches/patch-gcc-4.3.x, d/patches/patch-gcc-4.4.x,\n+\td/patches/patch-gcc-4.5.x, d/patches/patch-toplev-4.1.x,\n+\td/patches/patch-toplev-4.2.x, d/patches/patch-toplev-4.3.x,\n+\td/patches/patch-toplev-4.4.x, d/patches/patch-toplev-4.5.x: Switch\n+\tpatches to unified diff.\n+\t[1738b301128b]\n+\n+\t* d/d-builtins2.cc, d/d-decls.cc, d/d-glue.cc, d/d-objfile.cc,\n+\td/d-tree.def, d/patches/patch-gcc-4.1.x, d/patches/patch-gcc-4.2.x,\n+\td/patches/patch-gcc-4.3.x, d/patches/patch-gcc-4.4.x,\n+\td/patches/patch-gcc-4.5.x: More WIP DMD calling convention - Add\n+\t'optlink' function attribute.\n+\t[521dce459f71]\n+\n+2011-03-19  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d/d-codegen.cc, d/d-codegen.h, d/d-glue.cc: WIP: Merge\n+\tmake_bool_binop, make_math_op, make_assign_math_op into toElemBin.\n+\t[886b0a5af18a]\n+\n+\t* d/asmstmt.cc, d/d-asm-i386.h, d/d-bi-attrs-44.h, d/d-bi-attrs-45.h,\n+\td/d-builtins2.cc, d/d-codegen.cc, d/d-codegen.h, d/d-convert.cc,\n+\td/d-cppmngl.cc, d/d-decls.cc, d/d-glue.cc, d/d-irstate.h,\n+\td/d-lang-45.h, d/d-objfile.cc, d/d-spec.c: Use gcc_unreachable instead\n+\tof abort, cleanup line endings.\n+\t[3d6a01bd6e93]\n+\n+2011-03-18  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d/d-lang.cc, d/d-objfile.cc, d/d-objfile.h, d/symbol.cc, d/symbol.h:\n+\tIssue #167 - Assembler error: Already defined.\n+\t[36a609d5155b]\n+\n+\t* d/d-glue.cc: IndexExp: call aaGetp if AA is modifiable.\n+\t[d69227218b07]\n+\n+\t* d/d-codegen.cc, d/d-objfile.cc: Issue #165: Link failure with\n+\ttemplates.\n+\t[2221d9fb1dd9]\n+\n+\t* d/Make-lang.in, d/d-builtins2.cc, d/d-codegen.cc: Add experimental\n+\tvoid* _argptr implementation switch in Makefile.\n+\t[9a8cbe47da29]\n+\n+\t* d/Make-lang.in, d/d-builtins2.cc, d/d-codegen.cc, d/d-convert.cc,\n+\td/d-gcc-real.cc, d/d-glue.cc, d/d-spec.c: Replace calls to\n+\tfold(build()) with fold_build()\n+\t[8eab661a9626]\n+\n+\t* d/d-convert.cc: Harden d_truthvalue_conversion, catches scalars\n+\tpassed for conversion by buggy frontend.\n+\t[ff5142f57beb]\n+\n+\t* d/Make-lang.in, d/d-decls.cc, d/d-glue.cc, d/d-lang.cc: Add\n+\texperimental DMD calling convention switch in Makefile\n+\t[c5153f67119a]\n+\n+\t* d/d-bi-attrs-44.h: Update d-bi-attrs-44.h for current 4.4.5 release.\n+\t[e44747eee585]\n+\n+\t* d/d-glue.cc: Mark used parameters to prevent false warnings from\n+\t-Wunused-parameter.\n+\t[f0a6db429617]\n+\n+2011-03-12  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d/d-glue.cc: Fix codegen bug in CatAssignExp.\n+\t[15f72843d336]\n+\n+\t* d/d-builtins2.cc, d/d-codegen.cc, d/d-codegen.h, d/d-glue.cc,\n+\td/d-lang.cc, d/d-objfile.cc: IRState::addTypeModifiers - Add D2 type\n+\tmodifiers (const/shared) onto GCC types (const/volatile).\n+\t[ef3c725214ec]\n+\n+2011-03-06  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d/d-lang.cc, d/d-spec.c, d/gdc.1, d/lang-specs.h,\n+\td/patches/patch-apple-gcc-5664, d/patches/patch-gcc-4.2.x,\n+\td/patches/patch-gcc-4.3.x, d/patches/patch-gcc-4.4.x,\n+\td/patches/patch-gcc-4.5.x: Remove lang_specific_spec_functions code.\n+\t[da7dc4ae6277]\n+\n+\t* d/dmd-script: Issue #161 - noboundscheck doesn't work with GDMD.\n+\t[9ad16376258f]\n+\n+2011-02-28  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d/d-decls.cc, d/d-glue.cc, d/d-objfile.cc, d/d-objfile.h,\n+\td/dmd/template.c, d/dmd2/template.c, d/symbol.h: Moved GCC code to\n+\tprevent templates being emitted more than once to the backend.\n+\t[585920b19963]\n+\n+\t* d/Make-lang.in, d/d-decls.cc, d/d-glue.cc, d/d-lang.h,\n+\td/d-objfile.cc: Cleaned up ObjFile::makeDeclOneOnly implementation.\n+\t[cbad6b2b6b42]\n+\n+2011-02-25  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d/d-apple-gcc.c, d/d-builtins2.cc, d/d-c-stubs.c, d/d-codegen.cc,\n+\td/d-gcc-includes.h, d/d-glue.cc, d/d-lang.cc, d/d-objfile.cc: Remove\n+\tdependencies on CPP objects.\n+\t[33967b4ff6e9]\n+\n+\t* d/d-gcc-includes.h, d/patches/patch-apple-gcc-5465,\n+\td/patches/patch-apple-gcc-5664, d/patches/patch-gcc-4.0.x,\n+\td/patches/patch-gcc-4.1.x, d/patches/patch-gcc-4.2.x,\n+\td/patches/patch-gcc-4.3.x, d/patches/patch-gcc-4.4.x,\n+\td/patches/patch-gcc-4.5.x: Remove old redundant code.\n+\t[7b72e8118c29]\n+\n+\t* d/d-spec.c: Handle -pthread option in d-spec.c\n+\t[b6062a158fdd]\n+\n+\t* d/d-glue.cc, d/phobos2/std/stdio.d, d/target-ver-syms.sh: Issue #151\n+\t- MinGW-w64: recent GDC does not build w/ recent GCC\n+\t[978bb5bc82cf]\n+\n+\t* d/druntime/core/sys/posix/sys/un.d, d/phobos2/Makefile.am,\n+\td/phobos2/Makefile.in: Remove posix.sys.un from druntime.\n+\t[bb92ab765845]\n+\n+2011-02-20  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d/Make-lang.in, d/d-builtins2.cc, d/d-lang.cc, d/d-spec.c, d/dmd2/*,\n+\td/druntime/*, d/phobos2/*: Updated D2 Frontend to 2.052.\n+\t[c4980ba67971]\n+\n+\t* d/dmd/*, d/phobos/*: Updated D1 Frontend to 1.067.\n+\t[343f35cc00c8]\n+\n+\t* d/d-objfile.cc: Put compiler-generated arrayops on comdat.\n+\t[4d14649603c2]\n+\n+\t* d/d-gcc-includes.h, d/d-glue.cc: use totym to apply D type modifiers\n+\ton GCC types.\n+\t[d3b9d3188b68]\n+\n+\t* d/d-decls.cc: Issue #155 - ICE when using byte\n+\t[7846c6471861]\n+\n+\t* d/d-bi-attrs-43.h, d/d-bi-attrs-44.h, d/d-bi-attrs-45.h: Remove\n+\t'artificial' attribute from GDC.\n+\t[4b8f90d1f6aa]\n+\n+\t* d/d-codegen.cc, d/d-glue.cc, d/d-irstate.cc, d/d-lang.cc: Conversion\n+\tfixes for types with GCC attributes applied.\n+\t[5e733844f91f]\n+\n+\t* d/d-codegen.cc, d/d-codegen.h, d/d-decls.cc, d/d-glue.cc,\n+\td/d-objfile.cc, d/druntime/object.di, d/druntime/object_.d,\n+\td/druntime/rt/aaA.d, d/phobos/Makefile.am, d/phobos/Makefile.in,\n+\td/phobos/gcc/support.d, d/phobos/internal/aaA.d,\n+\td/phobos/internal/gc/gc.d, d/phobos2/gcc/support.d: ABI update: New\n+\tsignatures for _d_assocarrayliteralTp, _d_arrayliteralTp and\n+\t_d_arrayappendcTp\n+\t[b66226b53e71]\n+\n+\t* d/d-glue.cc: Update make_assign_math_op implementation\n+\t[8390d07b450e]\n+\n+\t* d/d-builtins.c, d/d-builtins2.cc, d/d-codegen.cc,\n+\td/d-gcc-includes.h, d/d-glue.cc, d/d-lang-45.h, d/d-lang.cc,\n+\td/d-lang.h, d/d-objfile.cc: Fix cast-qual and unused parameter\n+\twarnings in glue.\n+\t[377c4f5505be]\n+\n+\t* d/Make-lang.in, d/d-c-stubs.c, d/d-lang.cc: Drop support for CPP\n+\tBuiltins.\n+\t[6dc9468f6789]\n+\n+2011-02-10  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d/d-builtins.c, d/d-builtins2.cc, d/d-lang-45.h, d/d-lang.cc,\n+\td/d-lang.h: New function added to langhooks: d_register_builtin_type.\n+\t[9674e391725f]\n+\n+\t* d/d-bi-attrs-40.h, d/d-bi-attrs-41.h, d/d-bi-attrs-42.h,\n+\td/d-bi-attrs-43.h, d/d-bi-attrs-44.h, d/d-bi-attrs-45.h: Only accept\n+\tstring argument in mode attribute handler.\n+\t[99764267b71b]\n+\n+\t* d/asmstmt.cc, d/d-builtins2.cc, d/d-codegen.cc, d/d-cppmngl.cc,\n+\td/d-decls.cc, d/d-dmd-gcc.h, d/d-glue.cc, d/d-irstate.cc,\n+\td/d-objfile.cc, d/d-todt.cc: Remove all references to total.h in glue.\n+\t[30c8afda4902]\n+\n+\t* d/asmstmt.cc, d/d-apple-gcc.c, d/d-asm-i386.h, d/d-builtins2.cc,\n+\td/d-codegen.cc, d/d-cppmngl.cc, d/d-decls.cc, d/d-gcc-real.cc,\n+\td/d-glue.cc, d/d-irstate.cc, d/d-lang.cc, d/d-objfile.cc, d/dt.cc:\n+\tRemove all references to assert.h in glue.\n+\t[1d176d15d1e8]\n+\n+2011-02-02  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d/d-bi-attrs-40.h, d/d-bi-attrs-41.h, d/d-bi-attrs-42.h,\n+\td/d-bi-attrs-43.h, d/d-bi-attrs-44.h, d/d-bi-attrs-45.h,\n+\td/dmd/attrib.c, d/dmd2/attrib.c: Fix mode attribute handler to accept\n+\tstring argument.\n+\t[4ab9f7b5de07]\n+\n+2011-01-29  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d/druntime/core/stdc/config.d: D2 - import gcc.builtins in\n+\tcore.stdc.config\n+\t[1e41fd67396c]\n+\n+\t* d/d-codegen.cc, d/d-glue.cc, d/druntime/core/stdc/config.d,\n+\td/druntime/core/stdc/stdint.d, d/druntime/core/thread.d,\n+\td/druntime/gc/gc.d, d/druntime/gc/gcbits.d, d/druntime/gc/gcx.d,\n+\td/druntime/gcstub/gc.d, d/druntime/rt/lifetime.d,\n+\td/phobos2/std/intrinsic.d: 64bit TLS/GC fixes. Closes #109, #115.\n+\t[0c10de583cd3]\n+\n+2011-01-28  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d/Make-lang.in, d/d-codegen.cc, d/dmd/*, d/phobos/*: Updated D1\n+\tFrontend to 1.066\n+\t[06b390b6f86b]\n+\n+\t* d/d-codegen.cc, d/d-glue.cc, d/druntime/rt/mars.h,\n+\td/phobos/std/c/stdarg.d: Remove redundant checks for Tbit in D1, add\n+\t__va_argsave_t alias in phobos.\n+\t[5a4481f10bce]\n+\n+\t* d/Make-lang.in: use new variable (ALL_CXXFLAGS)\n+\t[a3ec7496100e]\n+\n+\t* d/d-c-stubs.c, d/d-codegen.cc, d/d-codegen.h, d/dmd/root.h,\n+\td/dmd2/root.h: Implement frontend std.intrinsics into GDC.\n+\t[330bd9e6077b]\n+\n+2011-01-18  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d/asmstmt.cc, d/d-codegen.cc, d/dmd/statement.h, d/dmd2/statement.h:\n+\tImplemented ExtAsmstatement::toCBuffer.\n+\t[4163067c9831]\n+\n+\t* d/dmd/arrayop.c, d/dmd/root.c, d/dmd2/arrayop.c, d/dmd2/root.c: Add\n+\tbinary implementation, use it in arrayops.\n+\t[78358cd41c04]\n+\n+\t* d/dmd2/func.c, d/phobos/std/math.d, d/phobos2/std/intrinsic.d,\n+\td/phobos2/std/math.d, d/phobos2/std/string.d: Fix log2 implementation\n+\tfor systems requiring supplement.\n+\t[961f4dd29944]\n+\n+2011-01-16  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d/d-glue.cc: Pass static chain by reference for functions nested in\n+\tclasses.\n+\t[e37f417ab86f]\n+\n+\t* d/d-lang-45.h, d/dmd/todt.c, d/dmd2/todt.c: rework todt for GCC.\n+\t[a15a367a189a]\n+\n+\t* d/druntime/core/sys/posix/config.d,\n+\td/druntime/core/sys/posix/sys/stat.d,\n+\td/druntime/core/sys/posix/sys/types.d, d/druntime/gc/gcx.d: rework\n+\tsys.stat struct implementation.\n+\t[dc8e70a01ccf]\n+\n+2011-01-13  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d/d-glue.cc, d/d-lang.cc, d/d-lang.h: Improve type names of\n+\tshared/const/immutable types in debugging.\n+\t[95990b0754e6]\n+\n+\t* d/d-codegen.cc: Issue #147 - static arrays passed as parameter\n+\tshould be value type.\n+\t[59c59a459398]\n+\n+\t* d/patches/patch-gcc-4.4.x, d/patches/patch-gcc-4.5.x: Second fix for\n+\tIssue #104.\n+\t[1e4da57f4be4]\n+\n+2011-01-09  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d/dmd/mtype.c, d/dmd2/mtype.c: Issue #134 - Fix 64bit double align.\n+\t[ab3473b8ee56]\n+\n+\t* d/dmd-script, d/patches/patch-gcc-4.4.x, d/patches/patch-gcc-4.5.x:\n+\tRemove -fomit-frame-pointer from gdmd, fixes Issue #141\n+\t[191fd75f1716]\n+\n+2011-01-06  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d/d-codegen.h, d/d-glue.cc, d/d-objfile.cc, d/lang-specs.h: Compiler\n+\tsegfault when not Object class not defined.\n+\t[44b6978e5f6c]\n+\n+\t* d/d-builtins2.ca,c d/d-codegen.h, d/d-decls.cc, d/d-glue.cc,\n+\td/d-lang.cc, d/dmd/dchar.h, d/dmd/mars.c, d/dmd2/dchar.h: Fix some\n+\twarnings in d-lang, ICE when object.d is empty.\n+\t[48827ef72351]\n+\n+\t* d/d-asm-i386.h, d/d-codegen.h: Refs Issue #135 - turn ICE into a\n+\ttemp error.\n+\t[8f4b7ddb676e]\n+\n+\t* d/d-glue.cc: Call rest_of_type_compilation in toDebug for\n+\tRecord/Union/Enums.\n+\t[ca79068bcb60]\n+\n+\t* d/druntime/object.di, d/druntime/object_.d: Issue #133 - Segfault On\n+\tAA Foreach\n+\t[aba6c8857d64]\n+\n+\t*  d/druntime/core/thread.d, d/druntime/gc/gcx.d: Refs #115 - addRoot\n+\tfor each call for malloc in the GC.\n+\t[3721c1dc5aad]\n+\n+\t* d/phobos2/Makefile.am, d/phobos2/Makefile.in: D2 - emit templates\n+\tonly for building phobos.\n+\t[c2b8a3f7c35b]\n+\n+\t* d/d-decls.cc, d/d-objfile.cc: Issue #132 - unresolved symbol with\n+\ttypedef initializers.\n+\t[69ebdbbcd8c2]\n+\n+\t* d/druntime/core/sys/posix/config.d,\n+\td/druntime/core/sys/posix/signal.d,\n+\td/druntime/core/sys/posix/sys/stat.d, d/phobos2/std/file.d: Fix struct\n+\tstat_t implementation for linux.\n+\t[29c51189bf66]\n+\n+2011-01-02  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d/d-spec.c: Fix warning messages in d-spec.c.\n+\t[da4c33277396]\n+\n+\t* d/d-codegen.cc,  d/d-glue.cc: Issue #105 - assertion failure\n+\tcomparing structs for equality.\n+\t[9a212ed12cec]\n+\n+\t* d/d-codegen.cc: Fix some diagnostic messages.\n+\t[1447423e541a]\n+\n+\t* d/d-convert.cc: Update d_convert_basic for gcc-4.5\n+\t[28166c71baad]\n+\n+\t* d/d-builtins.c, d/d-builtins2.cc, d/d-codegen.cc, d/d-decls.cc,\n+\td/d-glue.cc, d/d-lang-45.h, d/d-lang.cc, d/d-lang.h, d/d-objfile.cc:\n+\tDeclare d_build_decl as extern \"C\". Add function d_build_decl_loc.\n+\t[29253025adb2]\n+\n+\f\n+Copyright (C) 2011 Free Software Foundation, Inc.\n+\n+Copying and distribution of this file, with or without modification,\n+are permitted in any medium without royalty provided the copyright\n+notice and this notice are preserved."}, {"sha": "741747b06e54384c8a61d4823afc445a010d9bee", "filename": "gcc/d/ChangeLog-2012", "status": "added", "additions": 857, "deletions": 0, "changes": 857, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2FChangeLog-2012", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2FChangeLog-2012", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2FChangeLog-2012?ref=b4c522fabd0df7be08882d2207df8b2765026110", "patch": "@@ -0,0 +1,857 @@\n+2013-02-15  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* Make-lang.in (GDC_EXTENDED_ASM_SYNTAX): Remove macro.\n+\n+2013-02-14  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-lang.h (D_DECL_IS_CONTRACT): Remove macro.\n+\t* d-decls.cc (FuncDeclaration::toSymbol): Likewise.\n+\n+2013-02-13  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-lang.cc (d_gcc_is_target_win32): Remove.\n+\t(d_add_builtin_version): New function to handle define_builtin\n+\tcallback from backend.\n+\t* d-codegen.cc (IRState::maybeExpandSpecialCall): Remove intrinsic bt.\n+\n+\t* d-builtins.c: Merge with d-builtins2.cc.\n+\t* d-builtins2.cc: Remove.\n+\n+2013-02-07  Johannes Pfau  <johannespfau@gmail.com>\n+\n+\t* d-lang.cc (d_init): Use gcc's config system for predefined OS versions.\n+\t* setup-gcc.sh: Likewise.\n+\t* target-ver-syms.sh: Likewise.\n+\n+2013-02-05  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d-builtins2.cc (gcc_type_to_d_type): Remove STRUCTTHISREF condition.\n+\t* d-decls.cc (FuncDeclaration::toSymbol): Likewise.\n+\t* d-elem.cc (ThisExp::toElem): Likewise.\n+\t* d-ctype.cc (TypeSArray::toCtype): Remove SARRAYVALUE condition.\n+\t* d-codegen.cc (IRState::isDeclarationReferenceType): Likewise.\n+\t(IRState::isArgumentReferenceType): Likewise.\n+\n+2013-02-01  Johannes Pfau  <johannespfau@gmail.com>\n+\n+\t* d-lang.cc (d_init): Use gcc's config system for predefined CPU versions.\n+\t(d_init): Fix definition of D_LP64 version.\n+\t* setup-gcc.sh: Likewise.\n+\t* target-ver-syms.sh: Likewise.\n+\n+2012-12-16  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d-decls.cc (FuncDeclaration::toSymbol): Don't optimise PUREconst\n+\tcalls.\n+\n+2012-10-27  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d-codegen.cc (IRState::buildAssignOp): Handle case where LHS type is\n+\tnot compatible with expression type.\n+\n+2012-10-26  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d-decls.cc (ClassDeclaration::toSymbol): Use empty RECORD_TYPE to\n+\tbuild internal symbol.\n+\t(Module::toSymbol): Likewise.\n+\t* d-objfile.cc (outdata): Set type size from constructor if not\n+\tCOMPLETE_TYPE_P.  Assert that DECL_INITIAL is never bigger than\n+\tTYPE_SIZE.\n+\n+2012-10-25  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d-codegen.cc (IRState::getFrameInfo): Use vthis to determine whether\n+\tfunction is nested.\n+\n+2012-10-21  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d-builtins2.cc (gcc_type_to_d_type): Remove special case for\n+\tdouble/long double types.\n+\t(d_gcc_magic_builtins_module): Cleanup generation of builtin types.\n+\tAdd __builtin_unwind_int and __builtin_unwind_uint.\n+\n+2012-10-16  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d-objfile.cc (ObjectFile::outputThunk): Mark thunk as DECL_WEAK\n+\trather than using weakref attribute.\n+\n+2012-10-14  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d-bi-attrs.h: Remove file.\n+\t* d-builtins.c (d_attribute_table): Define table of machine independant\n+\tattributes for gcc builtins.\n+\t(d_format_attribute_table): Define table of format attributes for gcc\n+\tbuiltins.\n+\t(handle_noreturn_attribute, handle_leaf_attribute,\n+\thandle_const_attribute, handle_malloc_attribute,\n+\thandle_returns_twice_attribute, handle_pure_attribute,\n+\thandle_novops_attribute, get_nonnull_operand,\n+\thandle_nonnull_attribute, handle_nothrow_attribute,\n+\thandle_sentinel_attribute, handle_type_generic_attribute,\n+\thandle_fnspec_attribute, handle_transaction_pure_attribute,\n+\tignore_attribute): Moved common attribute handlers from d-bi-attrs.h.\n+\t* d-lang.cc (LANG_HOOKS_ATTRIBUTE_TABLE): Use instead of\n+\tLANG_HOOKS_COMMON_ATTRIBUTE_TABLE.\n+\t(d_attribute_table): Renamed from d_common_attribute_table.\n+\t(d_format_attribute_table): Renamed from\n+\td_common_format_attribute_table.\n+\t(d_init_ts): Renamed from d_common_init_ts.\n+\n+\t* d-builtins2.cc (d_bi_init): Determine D frontend type for size_t.\n+\t* d-objfile.cc (ObjectFile::hasModule): Remove old compatibility\n+\tmacros.\n+\n+2012-10-08  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d-glue.cc (VectorExp::toElem): Handle non-constant array literals as\n+\tvector expressions.\n+\n+2012-10-04  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d-glue.cc (VectorExp::toElem): Handle both array literal as well as\n+\tsingle element constructors for vector expressions.\n+\n+2012-09-27  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d-convert.cc (convert): Remove assert.\n+\n+2012-09-22  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d-codegen.cc (IRState::maybeCompound): Use IRState::compound.\n+\t(IRState::maybeVoidCompound): Use IRState::voidCompound.\n+\t(IRState::call): Check TREE_SIDE_EFFECTS to determine order of\n+\tevaluation in function calls.  Evaluate callee before arguments if has\n+\tside effects.\n+\t* d-decls.cc (FuncDeclaration::toSymbol): Don't set any pure/nothrow\n+\tattributes if asserts are generated in code.\n+\t* d-incpath (add_fileimp_path): Fix ICE using -J option.\n+\t* d-objfile.cc (Obj::moduleinfo): Clean-up.\n+\n+2012-09-18  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d-lang.cc (d_initialize_diagnostics): New function, disable unneeded\n+\tdiagnostic options.\n+\t(d_handle_option): Remove OPT_fdebug_c.\n+\t* d-spec.c (lang_specific_driver): Remove OPT_fod_, OPT_fop.\n+\t* lang.opt: Remove -fdebug-c, -fod, and -fop compiler options.\n+\n+2012-09-17  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d-codegen.h (CtorEltMaker::cons): Adjust call to VEC_safe_push.\n+\t* d-objfile.cc (ObjectFile::stripVarDecl): Clean-up.\n+\n+2012-09-16  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d-codegen.cc (IRState::isCallByAlias): New function.\n+\t(IRState::call): Use IRState::isCallByAlias.\n+\t* d-objfile.cc (ObjectFile::setupSymbolStorage): Mark\n+\tforce_static_public symbols as public.\n+\n+\t* d-spec.c (lang_specific_driver): Update for GCC-4.8.\n+\t* lang.opt: Fix spelling of option -static-libphobos\n+\n+\t* d-codegen.cc (IRState::maybeExpandSpecialCall): Do not handle inp*\n+\tand outp* port intrinsic functions.\n+\t(IRState::maybeSetUpBuiltin): Likewise.\n+\t(IRState::expandPortIntrinsic): Remove.\n+\n+2012-09-10  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d-codegen.cc (AggLayout::doFields): Propagate volatile out of type.\n+\t(AggLayout::addField): Likewise.\n+\t* d-decls.cc (VarDeclaration::toSymbol): Likewise.\n+\n+2012-09-06  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d-codegen.h (IRState::vconvert): Don't use VIEW_CONVERT_EXPR.\n+\t* d-glue.cc (TypeEnum::toCtype): Mark TYPE_PACKED if flag_short_enums.\n+\t(TypeClass::toCtype): Mark TREE_ADDRESSABLE to ensure class is always\n+\tpassed in memory.\n+\n+\t* d-tree.def (UNSIGNED_RSHIFT_EXPR): Define new tree expression.\n+\t(FLOAT_MOD_EXPR): Define new tree expression.\n+\t* d-lang.cc (d_common_init_ts): New function.\n+\t(d_write_global_declarations): Call check_global_declarations after\n+\tfinalize_compilation_unit.\n+\t(d_gimplify_expr): Handle UNSIGNED_RSHIFT_EXPR, IASM_EXPR.\n+\t* d-codegen.cc (IRState::arrayOpNotImplemented): New function.\n+\t(IRState::buildOp): New function.\n+\t(IRState::buildAssignOp): New function.\n+\t* d-glue.cc (build_bool_binop): Remove function, mostly move to\n+\tCmpExp::toElem.\n+\t(build_math_op): Remove function, mostly move to IRState::buildOp.\n+\t(build_assign_math_op): Remove function, mostly move to\n+\tIRState::buildAssignOp.\n+\t(BinExp::toElemBin): Remove function.\n+\t(IdentityExp::toElem, EqualExp::toElem, CmpExp::toElem)\n+\t(AndAndExp::toElem, OrOrExp::toElem): Clean-up, use IRState::boolOp.\n+\t(XorExp::toElem, OrExp::toElem, AndExp::toElem, UshrExp::toElem)\n+\t(ShrExp::toElem, ShlExp::toElem, ModExp::toElem, DivExp::toElem)\n+\t(MulExp::toElem, MinExp::toElem, AddExp::toElem):Use\n+\tIRState::arrayOpNotImplemented,\tIRState::buildOp.\n+\t(XorAssignExp::toElem, OrAssignExp::toElem, AndAssignExp::toElem)\n+\t(UshrAssignExp::toElem, ShrAssignExp::toElem, ShlAssignExp::toElem)\n+\t(ModAssignExp::toElem, DivAssignExp::toElem, MulAssignExp::toElem)\n+\t(MinAssignExp::toElem, AddAssignExp::toElem): Use\n+\tIRState::arrayOpNotImplemented, IRState::buildAssignOp.\n+\n+\t* d-codegen.cc (libcall_ids): Remove _adCmpChar.\n+\t(IRState::getLibCallDecl): Remove LIBCALL_ADCMPCHAR.\n+\t* d-glue.cc (CmpExp::toElem): Don't call LIBCALL_ADCMPCHAR.\n+\n+\t* lang.opt: Define Wcast-result.\n+\t* d-codegen.cc (IRState::convertTo): Warn about null result, but only\n+\tif -Wcast-result.\n+\t(IRState::hwi2toli): Move to header.\n+\t(IRState::realPart): Likewise.\n+\t(IRState::imagPart): Likewise.\n+\t(IRState::toElemLvalue): Clean-up tree args array.\n+\t(IRState::doArraySet): New function.\n+\t(IRState::arraySetExpr): New function.\n+\t* d-glue.cc (EqualExp::toElem): Clean-up tree args array.\n+\t(CatAssignExp::toElem): Likewise.\n+\t(AssignExp::toElem): Likewise.\n+\t(DeleteExp::toElem): Likewise.\n+\t(NewExp::toElem): Use IRState::modify.\n+\t(ArrayLiteralExp::toElem): Don't call ARRAYLITERALTX library function\n+\tif assigning to static array.\n+\t(StructLiteralExp::toElem): Use IRState::arraySetExpr.\n+\t(do_array_set): Move to IRState::doArraySet.\n+\t(array_set_expr): Move to IRState::arraySetExpr.\n+\n+\t* d-lang.h (D_TYPE_IMAGINARY_FLOAT): Define.\n+\t(d_convert_basic): Remove.\n+\t* d-builtins.c (d_init_builtins): Mark imaginary types as\n+\tD_TYPE_IMAGINARY_FLOAT.\n+\t* d-builtins2.cc (gcc_type_to_d_type): Use convert.\n+\t* d-codegen.cc (IRState::emitLocalVar): Call pushdecl earlier so\n+\tcatches CONST_DECLs.\n+\t(IRState::convertTo): Remove handling of conversions between\n+\timaginary/real, imaginary/complex, complex/imaginary types, use\n+\tconvert.\n+\t(IRState::convertForArgument): Use convert.\n+\t(IRState::arrayElemRef): Likewise.\n+\t(IRState::call): Likewise.\n+\t(IRState::libCall): Likewise.\n+\t(IRState::maybeExpandSpecialCall): Likewise.\n+\t* d-convert.cc (d_convert_basic): Mark static.\n+\t(convert): Handle correct conversions between imaginary/real,\n+\timaginary/complex, complex/imaginary types.\n+\t* d-glue.cc (InExp::toElem): Use convert.\n+\t(BoolExp::toElem): Likewise.\n+\t(FuncDeclaration::buildClosure): Likewise.\n+\n+\t* d-builtins.c (def_fn_type): Use build_varargs_function_type_array and\n+\tbuild_function_type_array to create built-in functions.\n+\t(d_init_builtins): Use lang_hooks.types.type_for_size.\n+\t* d-builtins2.cc (d_gcc_magic_builtins_module): Use\n+\tlang_hooks.types.type_for_mode.\n+\t* d-codegen.cc (IRState::pointerIntSum): Use\n+\tlang_hooks.types.type_for_size.\n+\t(IRState::call): Use lang_hooks.types.type_promotes_to.\n+\t(IRState::maybeExpandSpecialCall): Likewise.\n+\t* d-glue.cc (build_math_op): Use lang_hooks.types.type_for_mode.\n+\t* d-lang.cc (d_type_for_mode): Mark static.\n+\t(d_type_for_size): Likewise.\n+\t(d_type_promotes_to): Likewise.\n+\n+2012-08-31  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d-glue.cc (FuncDeclaration::toObjFile): Flatten nested levels and\n+\tloops in function, delay printing function name in verbose mode until\n+\twe know the function is being compiled.\n+\n+\t* d-codegen.cc (IRState::buildFrameForFunction): New function.\n+\t(IRState::buildChain): Use IRState::buildFrameForFunction to get the\n+\tframe record type.\n+\t(IRState::getFrameInfo): Likewise.\n+\t* d-glue.cc (FuncDeclaration::buildClosure): Likewise.\n+\n+2012-08-30  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* asmstmt.cc (ExtAsmStatement::toCBuffer): Mark unused parameter as\n+\tATTRIBUTE_UNUSED.\n+\t* d-codegen.cc (WrappedExp::toCBuffer): Likewise.\n+\t* d-objfile.cc (ObjectFile::setupSymbolStorage): Revert to previous\n+\tbehaviour of setting symbol storage.\n+\n+\t* d-codegen.cc (IRState::expandDecl): Use IRState::vinit.\n+\t(IRState::binding): Likewise.\n+\t(IRState::var): Handle all declarations, not just vars.\n+\t* d-glue.cc (PtrExp::toElem): Simplify use of IRState::var.\n+\t(SymbolExp::toElem ): Likewise.\n+\t(ThisExp::toElem): Likewise.\n+\n+\t* d-lang.cc (d_init): Remove 'Thumb' identifier for ARM as 16bit\n+\tplatforms aren't supported.\n+\t(GNU_LongDouble128): Remove identifier as long double size is\n+\tdetermined from type information.\n+\n+\t* d-decls.cc (TypeInfoDeclaration::toSymbol): Mark all typeinfo decls\n+\tas 'used'.\n+\t* d-glue.cc (one_elem_array): Remove.\n+\t(CatExp::toElem): Inline use of one_elem_array, clean-up.\n+\t* d-objfile.cc (ObjectFile::setupSymbolStorage): Update to better\n+\thandle use of declarations marked with comdat, extern or static.\n+\t(ObjectFile::doSimpleFunction): Mark function as 'used'.\n+\t* dt.cc (dt2node): Clean-up indentation.\n+\n+\t* Make-lang.in: Fix issue with cross-compiler configuration.\n+\n+2012-08-29  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* lang-specs.h: Remove special case for handled D source files.\n+\t* Make-lang.in: Remove special case for building gcc.o, use\n+\tGCC_EXTRA_LIBS to link against, rather than specific gcc object files.\n+\t(D_DRIVER_NAME): Remove use of variable.\n+\t(D_DRIVER_OBJS): Likewise.\n+\t(D_COMPILER_NAME): Likewise.\n+\n+2012-08-23  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d-builtins2.cc (eval_builtin): Use builtin_decl_explicit.\n+\t* d-codegen.cc (IRState::emitLocalVar): Use warning.\n+\t(IRState::convertTo): Likewise.\n+\t(IRState::addressOf): Use IRState::markAddressable.\n+\t(IRState::markAddressable): New function.\n+\t(IRState::markUsed): New function.\n+\t(IRState::markRead): New function.\n+\t(IRState::maybeExpandSpecialCall): Use builtin_decl_explicit.\n+\t(IRState::floatMod): Likewise.\n+\t(IRState::exceptionObject): Likewise.\n+\t* d-glue.cc (IdentityExp::toElem): Likewise.\n+\t(EqualExp::toElem): Likewise.\n+\t(PowExp::toElem): Likewise.\n+\t(AssignExp::toElem): Likewise.\n+\t(HaltExp::toElem): Likewise.\n+\t(ArrayLiteralExp::toElem): Likewise.\n+\t(FuncDeclaration::toObjFile): Likewise.\n+\t* d-lang.cc (d_mark_addressable): Remove function.\n+\t(d_mark_exp_read): Remove function.\n+\t* d-lang.h (d_warning): Remove macro.\n+\t(d_built_in_decls): Remove macro.\n+\t* d-objfile.cc (Obj::includelib): Use warning.\n+\t(Obj::startaddress): Likewise.\n+\n+2012-08-22  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d-lang.cc (binary): Moved function from frontend.\n+\t* d-codegen.cc (IRState::extractMethodCallExpr): Update for new C++ VEC\n+\ttemplate in GCC.\n+\t* d-bi-attrs.h (parse_optimize_options): Likewise.\n+\t* d-dmd-gcc.h: Remove ifdef __cplusplus, use GCC_SAFE_DMD.\n+\t* d-gcc-includes.h: Remove ifdef __cplusplus.\n+\t* d-lang.h: Likewise.\n+\t* Make-lang.in: Remove CC and CFLAGS from Makefile, add build rule for\n+\tnew texi man pages.\n+\t* gdc.texi: New documentation for GDC.\n+\n+2012-08-18  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d-codegen.cc (IRState::convertTo): Fix to allow conversion between\n+\tvoid* and associative arrays.\n+\t(IRState::convertForArgument): Use d_convert_basic.\n+\t(IRState::call): Don't use d_convert_basic, now handled by\n+\tconvertForArgument.\n+\t* d-gcc-real.cc (real_t::real_t): Increase real type mode to be greater\n+\tthan integer type size to prevent overflow in conversions.\n+\t* d-glue.cc (CastExp::toElem): Don't get implicit AA type.\n+\n+2012-08-17  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* dfrontend: Update to D frontend version 2.060\n+\n+\t* d-codegen.cc (libcall_ids): New library functions.\n+\t(IRState::getLibCallDecl): Implement new library function signatures.\n+\t* d-codegen.h (LibCall::LIBCALL_NEWITEMT): New enum value.\n+\t(LibCall::LIBCALL_NEWITEMIT): Likewise.\n+\t* d-decls.cc (FuncDeclaration::toSymbol): Small readability cleanup.\n+\t* d-glue.cc (NewExp::toElem): Use new library functions.\n+\t(StructLiteralExp::toElem): Update for new frontend.\n+\t(ReturnStatement::toIR): Likewise.\n+\t* d-incpath.cc (add_import_path): New signature.\n+\t(add_fileimp_path): Likewise.\n+\t(add_import_paths): Pass split Strings to helper functions.\n+\t* d-lang.cc (d_parse_file): Use Obj::init and Obj::term.\n+\t* d-objfile.cc (objmod): New variable.\n+\t(Obj::init): New function.\n+\t(Obj::term): Likewise.\n+\t(Obj::includelib): Likewise.\n+\t(Obj::startaddress): Likewise.\n+\t(Obj::allowZeroSize): Likewise.\n+\t(Obj::moduleinfo): Likewise.\n+\t(Obj::export_symbol): Likewise.\n+\t* symbol.h (Obj): New struct to allow object oriented interface to glue\n+\tcode from frontend.\n+\n+\t* d-builtins2.cc (d_gcc_magic_stdarg_check): Add new va_arg magic\n+\tfunction that stores the next value through a passed parameter.\n+\tRemove workaround for inout signature as va_list is always passed by\n+\treference to intrinsic templates.\n+\t(d_gcc_magic_module): Assign module directly to global IRState.\n+\t* d-codegen.cc (IRState::builtinsModule): Remove static declaration.\n+\t(IRState::intrinsicModule): Likewise.\n+\t(IRState::intrinsicCoreModule): Likewise.\n+\t(IRState::mathModule): Likewise.\n+\t(IRState::mathCoreModule): Likewise.\n+\t(IRState::cstdargTemplateDecl): Likewise.\n+\t(IRState::cstdargStartTemplateDecl): Likewise.\n+\t(IRState::varsInScope): Likewise.\n+\t(IRState::call): Use flag_split_darrays.\n+\t(IRState::maybeExpandSpecialCall): Clean-up va_start and va_arg\n+\timplementations.\n+\t(IRState::maybeSetUpBuiltin): Handle new va_arg function.\n+\t* d-codegen.h (Intrinsic::INTRINSIC_VA_ARG): New enum definition.\n+\t(IRState::setBuiltinsModule): Remove.\n+\t(IRState::setIntrinsicModule): Likewise.\n+\t(IRState::setMathModule): Likewise.\n+\t(IRState::setCStdArg): Likewise.\n+\t* d-glue.cc (CatExp::toElem): Use flag_split_darrays.\n+\t* d-irstate.cc (IRBase::startFunction): Set varsInScope.\n+\t* d-lang.cc (d_init_options): Set modules that require special\n+\thandling.\n+\t(d_handle_option): Don't handle OPT_fsplit_dynamic_arrays.\n+\t* lang.opt: fsplit-dynamic-arrays mapped to variable\n+\tflag_split_darrays.\n+\n+2012-08-16  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d-glue.cc (IdentityExp::toElem): Re-order precendence of type\n+\tchecking. Treat static arrays as D arrays in identity comparisons.\n+\t(EqualExp::toElem): Use adEq2 over built-in memcmp for equality\n+\tcomparisons for static and dynamic arrays.\n+\t(TypeStruct::toCtype): Remove old platform specific workaround.\n+\n+\t* d-builtins2.cc (bi_lib_list): New decl to hold list of GCC library\n+\tbuilt-ins.\n+\t(d_bi_init): Add decls to bi_list_list if recognising built-ins.\n+\t(d_gcc_magic_builtins_module): Rename built-in type C long to\n+\t__builtin_clong, built-in type C ulong to __builtin_culong.\n+\t(d_gcc_magic_libbuiltins_check): New function to assign internal\n+\tsymbol for built-in library functions.\n+\t(d_gcc_magic_libbuiltins_module): New function to scan modules that\n+\tcontain GCC library built-ins.\n+\t(d_gcc_magic_module): Search all core.stdc modules for possible GCC\n+\tlibrary built-ins.\n+\t* d-codegen.h (IRState::useBuiltins): Remove.\n+\t* d-lang.cc (d_init_options): Don't set IRState::useBuiltins.\n+\t(d_handle_option): Likewise.\n+\t* lang.opt: Re-order D frontend compiler options.\n+\n+\t* d-codegen.cc (IRState::buildChain): Override chainLink and chainFunc\n+\tfor function if static chain is passed via hidden 'this' and no frame\n+\tis created.\n+\t(IRState::getFrameInfo): Pass static chain around nested functions in\n+\tthe same way as closures for better performance.\n+\n+\t* d-codegen.cc (libcall_ids): Re-order list in ascii collating order,\n+\tadd new library routines to lookup, rename all non-vararg functions to\n+\tmatch DMD ABI implementation.\n+\t(LibCall): Re-order enum and rename values to match libcall_ids.\n+\t(IRState::toElemLvalue): Use new LibCall name.\n+\t(IRState::getLibCallDecl): Update to match current library signatures,\n+\tadd implementation of new library routines.\n+\t(IRState::maybeSetLibCallDecl): New function to set internal symbol\n+\tfor special D RT library functions.\n+\t* d-decls.cc (FuncDeclaration::toSymbol): Use\n+\tIRState::maybeSetLibCallDecl.\n+\t* d-glue.cc (InExp::toElem): Use new LibCall name.\n+\t(CatAssignExp::toElem): Likewise.\n+\t(IndexExp::toElem): Likewise.\n+\t(DeleteExp::toElem): Likewise.\n+\t(RemoveExp::toElem): Likewise.\n+\t(NewExp::toElem): Likewise.\n+\t(ArrayLiteralExp::toElem): Likewise.\n+\t(AssocArrayLiteralExp::toElem): Likewise.\n+\t(NullExp::toElem): Use IRState::convertTo.\n+\n+\t* d-codegen.cc (needs_temp): Remove.\n+\t(IRState::makeTemp): New function.\n+\t(IRState::maybeMakeTemp): Re-implement to use isFreeOfSideEffects.\n+\t(IRState::isFreeOfSideEffects): Re-implement to allow better CSE.\n+\t(IRState::call): Use IRState::makeTemp.\n+\n+\t* d-builtins2.cc (gcc_type_to_d_type): Use d_convert_basic.\n+\t* d-codegen.cc (IRState::emitLocalVar): Use IRState::vinit.\n+\t(IRState::convertTo): New function for tree conversions.\n+\t(IRState::convertTo): Use IRState::convertTo.\n+\t(IRState::convertForCondition): Likewise.\n+\t(IRState::darrayVal): Likewise.\n+\t(IRState::pointerIntSum): Likewise.\n+\t(IRState::pointerOffsetOp): Likewise.\n+\t(IRState::pvoidOkay): Likewise.\n+\t(IRState::boundsCond): Likewise.\n+\t* d-convert.cc (convert): New function to be called from C.\n+\t(d_build_truthvalue_op): Use d_convert_basic.\n+\t* d-glue.cc (convert): Remove.\n+\t(build_bool_binop): Use IRState::convertTo.\n+\t(build_math_op): Likewise.\n+\t(CmpExp::toElem): Likewise.\n+\t(PowExp::toElem): Likewise.\n+\t(do_array_set): Likewise.\n+\t(AssignExp::toElem): Likewise.\n+\t(VectorExp::toElem): Likewise.\n+\t(NotExp::toElem): Likewise.\n+\t(CallExp::toElem): Likewise.\n+\t(SymbolExp::toElem): Likewise.\n+\t* dt.cc (dt2tree_list_of_elems): Use d_convert_basic.\n+\n+2012-07-26  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d-gcc-real.cc (real_t::real_t): Use d_float64 for constructor.\n+\t(real_t::isConst0): Remove.\n+\t(real_t::isConst1): Likewise.\n+\t(real_t::isConst2): Likewise.\n+\t(real_t::isConstMinus1): Likewise.\n+\t(real_t::isConstHalf): Likewise.\n+\t* d-gcc-real.h (longdouble): New typedef for real_t.\n+\t(ldouble): New template for ldouble conversions.\n+\t(ld_sprint): New function for ldouble to string formatting.\n+\t* d-codegen.cc (IRState::hwi2toli): Handle maximum 64bit value case.\n+\n+2012-07-18  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d-codegen.cc (IRState::delegateVal): Remove ENABLE_CHECKING code.\n+\t(IRState::objectInstanceMethod): Remove special case to avoid calling\n+\tDotTypeExp::toElem.\n+\t* d-glue.cc (CommaExp::toElem): Likewise.\n+\t(DotTypeExp::toElem): Implement function.\n+\t(StructLiteralExp::toElem): Assert instead that basetype is a struct.\n+\t* d-gcc-reah.cc (real_t::real_t): New overload for 'double' type.\n+\t(real_t::format): Change function type to int, return size of buffer\n+\tfrom function.\n+\t(real_t::formatHex): Likewise.\n+\t* d-builtins2.cc (d_gcc_magic_stdarg_check): Update signature, remove\n+\tcheck for is_c_std_arg.\n+\t(d_gcc_magic_stdarg_module): Likewise.\n+\t(d_gcc_magic_module): Remove check for core.vararg.\n+\t* d-codegen.cc (INTRINSIC_STD_VA_ARG): Remove.\n+\t(IRState::maybeSetUpBuiltin): Don't handle INTRINSIC_STD_VA_ARG.\n+\n+2012-07-13  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d-decls.cc (Dsymbol::toSymbolX): Remove use of PRIuSIZE format macro.\n+\t(FuncDeclaration::toThunkSymbol): Likewise.\n+\n+2012-07-12  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d-lang.h (D_DECL_IS_CONTRACT): New macro.\n+\t* d-decls.cc (FuncDeclaration::toSymbol): Mark in and out contracts as\n+\tD_DECL_IS_CONTRACT.\n+\t(FuncDeclaration::toThunkSymbol): D thunks no longer private by\n+\tdesign. Alter mangling of thunk symbols to be unique across the entire\n+\tcompilation unit.\n+\t* d-objfile.cc (ObjectFile::makeDeclOneOnly): Catch public contracts to\n+\tmark them as one-only.\n+\t(ObjectFile::outputThunk): Mark weakref thunks as private.\n+\n+2012-07-10  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* Make-lang.in: Remove unused borrowed objects.\n+\t* d-builtins2.cc (d_bi_builtin_func): Don't add builtin if\n+\t-fno-builtin was given.\n+\t* d-codegen.cc (IRState::emitTemplates): Remove static declaration.\n+\t(IRState::splitDynArrayVarArgs): Likewise.\n+\t(IRState::useInlineAsm): Likewise.\n+\t(IRState::useBuiltins): Likewise.\n+\t(d_gcc_force_templates): Update to use global gen.\n+\t* d-codegen.h (emitTemplates): Remove static attribute.\n+\t(splitDynArrayVarArgs): Likewise.\n+\t(useBuiltins): Likewise.\n+\t(useInlineAsm): Remove member.\n+\t(stdInc): Define new member.\n+\t* d-incpath.cc (std_inc): Remove global.\n+\t(add_import_paths): Update function signature.\n+\t* d-lang.cc (d_init_options): Default splitDynArrayVarArgs to false.\n+\t(d_init): Update call to add_import_paths.\n+\t(d_handle_option): Remove OPT_fd_inline_asm, add\n+\tOPT_fsplit_dynamic_arrays.\n+\t* lang.opt: Likewise.\n+\n+2012-07-08  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d-builtins2.cc (d_gcc_type_align): Update function signature. Use\n+\ttype align size to determine the known align size of a decl.\n+\t* d-dmd-gcc.h (d_gcc_type_align): Update function signature.\n+\t* symbol.h (Symbol): New member, Salignment.\n+\t* symbol.cc (Symbol::Symbol): Initialise Salignment.\n+\t* d-decls.cc (VarDeclaration::toSymbol): Set Salignment if there is an\n+\talignment in effect on the decl.\n+\t(AggregateDeclaration::toInitializer): Likewise.\n+\t* d-objfile.cc (ObjectFile::outputStaticSymbol): Set DECL_ALIGN if\n+\tSalignment was given for static decl.\n+\n+2012-07-07  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d-builtins2.cc (d_gcc_magic_builtins_module): Add check for\n+\tDECL_ASSEMBLER_NAME_SET_P when testing for builtins that can be\n+\tmarkable as pure in the D frontend.\n+\n+\t* d-codegen.cc (IRState::integerConstant): Hide use of\n+\tHOST_BITS_PER_WIDE_INT macros.\n+\t(IRState::hwi2toli): Likewise.\n+\t(IRState::getTargetSizeConst): Likewise.\n+\n+\t* d-builtins.c (d_global_trees): Move declaration here.\n+\t(lookup_C_type_name): Rename to lookup_ctype_name.\n+\t(d_init_builtins): Move set-up of d_global_trees here.\n+\t(gcc_d_backend_init): Move function from d-glue.cc and refactored.\n+\t(gcc_d_backend_term): Likewise.\n+\t* d-builtins2.cc (d_bi_init): Set-up D frontend sizes here.\n+\t* d-glue.cc (gcc_d_backend_init): Removed.\n+\t(gcc_d_backend_term): Likewise.\n+\n+\t* d-incpath.cc (add_phobos_versyms): New function to scan\n+\tphobos-vers-syms file.\n+\t(register_import_chains): Renamed to add_import_paths.\n+\t* d-lang.cc (d_init): Call add_phobos_versyms and add_import_paths.\n+\t(d_parse_int): Don't use strtol to get number from argument string.\n+\n+\t* d-incpath.cc (maybe_fixup_phobos_target): Remove.\n+\t(register_import_chains): Remove use of maybe_fixup_phobos_target.\n+\t* d-lang.cc (maybe_fixup_os_versym): Remove\n+\t(d_init): Remove use of maybe_fixup_os_versym.\n+\n+\t* d-lang.cc (saved_reg_names): Remove.\n+\t(d_init): Remove use of saved_reg_names.\n+\t(d_post_options): Likewise.\n+\n+2012-07-05  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d-glue.cc (StructLiteralExp::toElem): Stop after first assignment for\n+\tconstructors built for union types.\n+\n+2012-07-01  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* symbol.h (deferredNestedFuncs): Renamed from otherNestedFuncs, use as\n+\tvalue type rather than pointer.\n+\t(thunks): Use as value type rather than pointer.\n+\t* d-decls.cc (FuncDeclaration::toSymbol): Remove check for\n+\tdeferredNestedFuncs being NULL.\n+\t(FuncDeclaration::toThunkSymbol): Remove check for thunks being NULL.\n+\t* d-glue.cc (DelegateExp::toElem): Remove check for deferredNestedFuncs\n+\tbeing NULL.\n+\t(FuncDeclaration::toObjFile): Likewise.\n+\t* d-objfile.cc (ObjectFile::shouldEmit): Add nested functions to\n+\tdeferredNestedFuncs of their parent function incase parent is actually\n+\temitted later in during compilation.\n+\t* d-builtins2.cc (d_gcc_type_align): Explicit alignment of variables\n+\ttakes precedence over default alignment.\n+\t* d-gcc-includes.h: Re-order list of includes.\n+\n+2012-06-26  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d-codegen.cc (IRState::twoFieldType): Use rest_of_decl_compilation.\n+\t* d-gcc-includes.h: Remove last of poisoned backend headers.\n+\t* d-glue.cc (FuncDeclaration::toObjFile): Use fprintf for diagnostic\n+\tmessage.  Use rest_of_decl_compilation directly.\n+\t(SynchronizedStatement::toIR): Likewise.\n+\t(TypeFunction::toCtype): Remove old version1 macro.\n+\t* d-lang.cc (d_parse_file): Remove dependency on backend header. Use\n+\tfprintf for diagnostic messages.\n+\t(nametype): Use rest_of_decl_compilation directly.\n+\t(d_handle_option): Remove version 1 option.\n+\t* dmd-script: Likewise.\n+\t* lang.opt: Likewise.\n+\t* d-objfile.cc (ObjectFile::outputStaticSymbol): Use\n+\trest_of_decl_compilation directly.\n+\t(ObjectFile::declareType): Likewise.\n+\t(obj_moduleinfo): Likewise.\n+\t(obj_tlssections): Likewise.\n+\t(ObjectFile::outputThunk): Implement new method of thunk generation\n+\tfor external symbols using weakref.\n+\t* d-objfile.h (rodc): Remove.\n+\n+2012-06-25  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d-builtins.c (d_init_builtins): Use build_tree_list to initialise\n+\tvoid_list_node.\n+\t* d-glue.cc (ArrayLiteralExp::toElem): Always generate code for\n+\tarrayliteralTp.\n+\t(TypeFunction::toCtype): Chain on void_list_node to the end of the\n+\tfunction type parameters.  Fixes function signatures in debugging.\n+\n+2012-06-23  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* Make-lang.in (d_OBJS): Add so IN_GCC_FRONTEND is defined when\n+\tbuilding gdc sources.\n+\t* d-builtins.c: Remove poisoned headers.\n+\t* d-codegen.cc: Likewise.\n+\t* d-gcc-includes.h: GCC system headers included first, removed\n+\tinternally defined macros and poisoned headers.\n+\t* d-gcc-tree.h: Use GCC system headers instead of defining tree_node.\n+\t* d-lang.cc: GCC system headers included first.\n+\t(pushdecl_top_level): Removed.\n+\t* d-objfile.cc: Remove poisoned headers.\n+\t* gdc_alloca.h: Use liberty.h instead of handling include of alloca.\n+\n+\t* d-decls.cc (Dsymbol::toSymbolX): Use snprintf rather than sprintf.\n+\t(FuncDeclaration::toSymbol): Likewise.\n+\t* d-gcc-real.cc (real_t::init): Likewise.\n+\t* symbol.cc (Symbol::Symbol): Use NULL_TREE to initialise tree.\n+\t(symbol_calloc): Use xstrdup to copy string.\n+\n+\t* Make-lang.in: Remove D language version 1 from build\n+\t(_GNU_SOURCE): Removed macro from build.\n+\t(ELFOBJ): Likewise.\n+\t(D_VA_LIST_TYPE_VOIDPTR): Likewise.\n+\t* asmstmt.cc (ExtAsmStatement::semantic): Removed use of V2 macro.\n+\t* d-builtins2.cc (d_gcc_builtin_va_list_d_type): Removed use of\n+\tD_VA_LIST_TYPE_VOIDPTR macro.\n+\t(gcc_type_to_d_type): Likewise.\n+\t(d_gcc_magic_stdarg_check): Likewise.\n+\t(d_gcc_magic_builtins_module): Removed use of V2 macro, and V1\n+\tencapsulated code.\n+\t* d-codegen.cc (IRState::convertTo): Likewise.\n+\t(IRState::toDArray): Likewise.\n+\t(IRState::typesCompatible): Likewise.\n+\t(IRState::arrayBoundsCheck): Likewise.\n+\t(IRState::assertCall): Likewise.\n+\t(libcall_ids): Likewise.\n+\t(IRState::getLibCallDecl): Likewise.\n+\t(IRState::getFrameForSymbol): Likewise.\n+\t(IRState::isFuncNestedIn): Likewise.\n+\t(IRState::buildChain): Likewise.\n+\t(IRState::getFrameInfo): Likewise.\n+\t(IRState::getFrameRef): Likewise.\n+\t(IRState::functionNeedsChain): Likewise.\n+\t(IRState::startCond): Likewise.\n+\t(IRState::exitIfFalse): Likewise.\n+\t(IRState::startCase): Likewise.\n+\t(IRState::doCase): Likewise.\n+\t(IRState::endCase): Likewise.\n+\t* d-decls.cc (VarDeclaration::toSymbol): Likewise\n+\t(FuncDeclaration::toSymbol): Likewise.\n+\t* d-glue.cc (CondExp::toElem): Likewise.\n+\t(build_bool_binop): Likewise.\n+\t(EqualExp::toElem): Likewise.\n+\t(CmpExp::toElem): Likewise.\n+\t(AndAndExp::toElem): Likewise.\n+\t(OrOrExp::toElem): Likewise.\n+\t(AssignExp::toElem): Likewise.\n+\t(CastExp::toElem): Likewise.\n+\t(CallExp::toElem): Likewise.\n+\t(AssertExp::toElem): Likewise.\n+\t(AssocArrayLiteralExp::toElem): Likewise.\n+\t(StructLiteralExp::toElem): Likewise.\n+\t(FuncDeclaration::toObjFile): Likewise.\n+\t(Module::genobjfile): Likewise.\n+\t(TypeFunction::toCtype): Likewise.\n+\t(ThrowStatement::toIR): Likewise.\n+\t(TryCatchStatement::toIR): Likewise.\n+\t(ReturnStatement::toIR): Likewise.\n+\t(SwitchStatement::toIR): Likewise.\n+\t(IfStatement::toIR): Likewise.\n+\t(ForStatement::toIR): Likewise.\n+\t(ExpStatement::toIR): Likewise.\n+\t* d-irstate.cc (IRBase::startFunction): Likewise.\n+\t* d-lang.cc (d_init_options_struct): Likewise.\n+\t(d_handle_option): Likewise.\n+\t(d_parse_file): Likewise.\n+\n+2012-06-21  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* Make-lang.in: Remove d-asm-i386.h\n+\t* asmstmt.cc (d_build_asm_stmt): Update signature, use build5.\n+\t(getFrameRelativeValue): Remove.\n+\t(d_format_priv_asm_label): Likewise.\n+\t(d_have_inline_asm): Likewise.\n+\t(AsmProcessor): Likewise.\n+\t(AsmStatement::toIR): Update sorry message.\n+\t* d-codegen.cc (IRState::expandPortIntrinsic): Update call to\n+\td_build_asm_stmt.\n+\t(IRState::doAsm): Likewise.\n+\t* d-decls.cc (FuncDeclaration::toSymbol): Remove check for inline asm.\n+\t* d-glue.cc (FuncDeclaration::toObjFile): Likewise.\n+\t(LabelStatement::toIR): Likewise.\n+\t* d-lang.cc (VersionCondition::addPredefinedGlobalIdent): Remove D\n+\tInline Asm version identifiers.\n+\t* d-lang.h (d_build_asm_stmt): Update signature.\n+\n+2012-06-19  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d-decls.cc (FuncDeclaration::toSymbol): Mark in/out contracts as\n+\tTREE_PUBLIC to allow calling cross-module.\n+\t* d-lang.cc (d_parse_file): Update for 2.059.\n+\n+2012-06-16  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* dfrontend: Merged with DMD 2.059.\n+\t* d-builtins2.cc (gcc_type_to_d_type): Use new frontend value.\n+\t* d-codegen.cc (IRState::getLibCallDecl): Fix return type of _aaDelp.\n+\t(IRState::getVThis): Use frontend provided member to determine if\n+\tfunction has nested references.\n+\t* d-decl.cc (FuncDeclaration::toSymbol): Weakly pure functions don't\n+\tguarantee no vops.\n+\t* d-gcc-real.cc (max_float_mode): Remove.\n+\t(real_t::convert): Catch imaginary types in conversion.\n+\t* d-glue.cc (EqualExp::toElem): Use memcmp for struct comparisons.\n+\t(CatAssignExp::toElem): Rework order of logic to allow appending\n+\tdelegates to an array.\n+\t(DelegateExp::toElem): Implement handling of lambda functions.\n+\t(FuncExp::toElem): Ditto.\n+\t(AssocArrayLiteralExp::toElem): Implement handling of AssociativeArray\n+\ttypes sent to backend.\n+\t* d-objfile.cc (lmtab): Remove.\n+\t(cvtLocToloc_t): Update implementation.\n+\t(outdata): Now assert that we don't receive error nodes.\n+\n+2012-06-05  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d-decls.cc (FuncDeclaration::toSymbol): Make better use of 'pure' and\n+\t'pure const' functions in GCC codegen.\n+\t* d-bi-attrs.h: Added TM_ATTR* masks.\n+\t(handle_tm_wrap_attribute, handle_tm_attribute, tm_attr_to_mask,\n+\tfind_tm_attribute): New.\n+\t(struct d_common_attribute_table): Added transaction* attributes.\n+\n+2012-06-04  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d-objfile.cc (ObjectFile::outputThunk): Output thunks moved back to\n+\tthe frontend, as backend does not emit them for DECL_EXTERNAL functions.\n+\n+2012-05-29  Daniel Green  <venix1@gmail.com>\n+\n+\t* setup-gcc.sh: Add GCC 4.8 to list of supported GCC versions. Patch\n+\tcourtesy of Calrama\n+\thttps://bitbucket.org/goshawk/gdc/issue/345\n+\n+2012-05-29  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d-codegen.cc (IRState::endCase): Remove parameter from function. Use\n+\tcondition type as the SWITCH_EXPR type, rather than use of void.\n+\t* d-codegen.h (IRState::endCase): Update signature.\n+\t* d-glue.cc (SwitchStatement::toIR): Update call to endCase.\n+\n+2012-05-28  Daniel Green  <venix1@gmail.com>\n+\n+\t* d-builtins.c (DEF_ATTR_STRING): Define and undefine along with other\n+\tmacros.\n+\t* d-lang.cc (d_write_global_declartions): Use\n+\tfinalize_compilation_unit. GCC 2012-04-30\n+\t* d-objfile.cc (ObjectFile::outputThunk): Use\n+\tsymtab_add_to_same_comdat_group. GCC 2012-04-30\n+\t* lang.opt: Match help strings for duplicated options.\n+\n+2012-02-01  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* setup-gcc.sh: Remove -hg option.\n+\t* dfrontend/func.c (FuncDeclaration::semantic): Remove code adding\n+\tmethod to flat list.\n+\t(FuncDeclaration::semantic3): Re-add here.\n+\n+2012-01-01  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d-builtins2.cc (IRState::buildChain): Don't do nrvo if the\n+\tvariable is put in a closure.\n+\t* d-glue.cc (FuncDeclaration::buildClosure): Ditto.\n+\t(ReturnStatement::toIR): Don't call postblit on nrvo returns.\n+\t(DtorExpStatement::toIR): Don't call destructor if var is returned as\n+\tthe nrvo variable.\n+\n+\f\n+Copyright (C) 2012 Free Software Foundation, Inc.\n+\n+Copying and distribution of this file, with or without modification,\n+are permitted in any medium without royalty provided the copyright\n+notice and this notice are preserved."}, {"sha": "eeb12c9665d0e6dd9fc2a62234cb5f3a0e47e2a1", "filename": "gcc/d/ChangeLog-2013", "status": "added", "additions": 1221, "deletions": 0, "changes": 1221, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2FChangeLog-2013", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2FChangeLog-2013", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2FChangeLog-2013?ref=b4c522fabd0df7be08882d2207df8b2765026110", "patch": "@@ -0,0 +1,1221 @@\n+2013-12-27  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (build_two_field_type): Declare builtin types as\n+\ttoplevel declarations.\n+\t* d-ctype.cc (EnumDeclaration::toDebug): Build type decl in debug code.\n+\t* d-lang.cc (nametype): Rename to d_nametype.\n+\n+2013-12-23  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-decls.cc (EnumDeclaration::toDebug): Don't send array types to\n+\trest_of_type_compilation.\n+\n+2013-12-16  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-spec.cc (lang_specific_driver): Require linking in library for all\n+\tfiles except D interface files.\n+\t* d-lang.cc (d_write_global_declarations): Call d_finish_compilation.\n+\t* d-objfile.cc (mark_needed): Mark static.\n+\t(d_finish_symbol): Don't call mark_needed.\n+\t(d_finish_function): Likewise.\n+\t(d_finish_compilation): New function to wrapup all global\n+\tdeclarations, mark templates/comdats as needed if required, and start\n+\tthe final compilation.\n+\n+2013-12-10  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-ctype.cc (TypeVector::toCtype): Treat void vectors as ubyte.\n+\t* d-objfile.cc (VarDeclaration::toObjFile): Gag all errors compiling\n+\tmanifest constants.\n+\t* d-todt.cc (TypeVector::toDt): New function to generate correct static\n+\tdata for vector initialisers.\n+\n+2013-12-05  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-lang.cc (d_init_options_struct): Don't define strict aliasing.\n+\t(d_get_alias_set): New function to return language-specific alias set.\n+\t* d-convert.cc (d_convert_basic): Always zero extend pointer to integer\n+\tconversions.\n+\n+2013-12-04  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (maybe_set_builtin_frontend): Assert that all runtime\n+\tlibrary functions have been set-up correctly.\n+\t(libcall_ids): Remove unhandled library functions.\n+\t(get_libcall): Likewise.\n+\t* d-codegen.h (LibCall): Likewise.\n+\t* d-objfile.cc (output_symbol_p): Remove.\n+\n+2013-12-03  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-lang.cc (d_init_options): Update for frontend changes.\n+\t(d_handle_option): Set frontend allInst option if -femit-templates.\n+\t* d-objfile.cc (output_template_p): Want to emit all instantiated\n+\ttemplates if -femit-templates or -fdebug was passed to the compiler.\n+\t* d-objfile.h (TemplateEmission): Define TEallinst.\n+\t* d-todt.cc (StructDeclaration::toDt): Update for frontend changes.\n+\t* d-spec.cc (THREAD_LIBRARY): Define default thread library to link if\n+\tone is not already specified in the configuration process.\n+\t(TIME_LIBRARY): Define default real time library to link if one is not\n+\talready specified in the configuration process.\n+\t(LIBSTDCXX): Define C++ library to link if compiling C++ and D sources.\n+\t(lang_specific_driver): Update implementation to use new macros.\n+\n+2013-12-02  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-elem.cc (CatAssignExp::toElem): Don't call postblit after element\n+\tappend to array.\n+\t(NewExp::toElem): Handle calling 'new' on opaque types.\n+\t(ArrayLiteralExp::toElem): Ensure array literal elements have no side\n+\teffects by making temporaries as necessary.\n+\t* d-todt.cc (StructLiteralExp::toDt): Update for frontend changes.\n+\t* d-codegen.cc (build_frame_type): Check for scoped variables if\n+\tbuilding a closure.\n+\t* d-objfile.cc (d_finish_symbol): Relax toDt checking rule.\n+\n+2013-12-01  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-asmstmt.cc (ExtAsmStatement::ExtAsmStatement): Remove labels\n+\tmember from class.\n+\t* d-codegen.cc (d_gcc_force_templates): Remove.\n+\t(convert_expr): Update for frontend changes.\n+\t(convert_for_assignment): Likewise.\n+\t(maybe_set_builtin_frontend): Update for changes to libdruntime\n+\tcore.bitops signatures.\n+\t* d-ctype.cc (TypeFunction::toCtype): Update for frontend changes.\n+\t* d-decls.cc (Dsymbol::toSymbolX): Likewise.\n+\t(VarDeclaration::toSymbol): Likewise.\n+\t(FuncDeclaration::toSymbol): Don't defer nested functions here.\n+\t* d-elem.cc (PowAssignExp::toElem): Update for frontend changes.\n+\t(DeleteExp::toElem): Likewise.\n+\t(AssertExp::toElem): Don't call invariant on an extern C++ class.\n+\t* d-glue.cc (Global::init): Initialise new stdmsg member.\n+\t* d-lang.cc (d_handle_option): Handle -fdeps switch.  Remove TEprivate\n+\tfor -femit-templates switch.\n+\t(genCmain): Update for frontend changes.\n+\t(d_parse_file): Likewise.\n+\t* d-longdouble.cc (longdouble::dump): Likewise.\n+\t* d-objfile.cc (ClassDeclaration::toObjFile): Update for frontend\n+\tchanges.\n+\t(InterfaceDeclaration::toObjFile): Likewise.\n+\t(EnumDeclaration::toObjFile): Likewise.\n+\t(Symbol::Symbol): Remove outputSymbol member.\n+\t(output_symbol_p): Mark static.\n+\t(output_declaration_p): Determine symbol codegen status from\n+\tsemanticRun.\n+\t(output_template_p): New function to determine whether an instantiated\n+\ttemplate is to be written to object file.\n+\t(FuncDeclaration::toObjFile): Use semanticRun to update codegen status\n+\tof function.\n+\t(FuncDeclaration::buildClosure): Error if putting a scoped variable in\n+\ta closure.\n+\t(Module::genobjfile): Update for frontend changes.\n+\t(d_comdat_linkage): Don't determine linkage from TE setting.  Mark all\n+\tcomdat symbols as DECL_COMDAT.\n+\t(setup_symbol_storage): Use output_template_p to determine whether the\n+\tsymbol is being written to object file.\n+\t(mark_needed): New function to mark decls that must be emitted.\n+\t(d_finish_symbol): Mark finished symbols as needed.\n+\t(d_finish_function): Mark finished functions as needed.\n+\t(build_simple_function): Set semanticRun for glue changes.\n+\t* d-objfile.h (OutputStage): Remove enum.\n+\t* d-todt.cc (build_vptr_monitor): Update for frontend changes.\n+\t(StructInitializer::toDt): Likewise.\n+\t(StructDeclaration::toDt): Likewise.\n+\t(TypeInfoEnumDeclaration::toDt): Likewise.\n+\t(TypeInfoStructDeclaration::toDt): Likewise.\n+\t(Type::getTypeInfo): Likewise.\n+\n+2013-11-30  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-lang.cc (genCmain): Implement code generation of __entrypoint\n+\tmodule to provide the target C main function.\n+\t(deps_write): Ignore the module __entrypoint when writing make deps.\n+\t(d_parse_file): Handle writing __entrypoint module to object file.\n+\t* d-objfile.cc (d_finish_symbol): Remove special handling of _tlsstart\n+\tsymbol, but ensure _tlsend gets written to the thread common section.\n+\t(d_finish_function): Remove call to build_tlssections.\n+\t(build_tlssections): Remove.\n+\n+2013-11-29  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-decls.cc (ClassDeclaration::toVtblSymbol): Use TypeSArray::makeType\n+\tto generate frontend static array type.\n+\t* d-glue.cc (Dsymbol::ungagSpeculative): Define.\n+\t* d-lang.cc (genCmain): Define as empty.\n+\t(d_parse_file): Update for frontend changes.\n+\t* d-objfile.cc (StructDeclaration::toObjFile): Likewise.\n+\t* d-typinf.cc (TypeBasic::builtinTypeInfo): Likewise.\n+\t* d-longdouble.cc (longdouble::isIdenticalTo): Remove.\n+\t* d-port.cc (Port::fequal): Define.\n+\n+2013-11-28  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-builtins.cc (gcc_type_to_d_type): Use TypeSArray::makeType to\n+\tgenerate frontend static array types.\n+\t* d-codegen.cc (build_attributes): Use optimize as don't want the\n+\tctfeInterpret of TypeExp expressions.\n+\t(get_object_method): Update for frontend changes.\n+\t(get_libcall): Update to use Type::dtypeinfo.\n+\t* d-elem.cc (IndexExp::toElem): Don't generate bounds checking codegen\n+\tif frontend explictly requests it.\n+\t(ArrayLiteralExp::toElem): Use TypeSArray::makeType to generate\n+\tfrontend static array type.\n+\t(StructLiteralExp::toElem): Update for frontend changes.\n+\t* d-glue.cc (Global::increaseErrorCount): Define.\n+\t* d-objfile.cc (Module::genmoduleinfo): Remove moduleinfo 'New'\n+\timplementation for libdruntime changes.\n+\t* d-todt.cc (StructLiteralExp::toDt): Literal initialisers override\n+\tdefault initialisers.\n+\t(TypeInfoDeclaration::toDt): Update to use Type::dtypeinfo.\n+\t(TypeInfoStructDeclaration::toDt): Update for frontend changes.\n+\t* d-typinf.c (Type::getInternalTypeInfo): Update to use\n+\tType::dtypeinfo.\n+\n+2013-11-25  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-asmstmt.cc (ExtAsmStatement::comeFromImpl): Define for frontend\n+\timplementation changes.\n+\t* d-codegen.cc (get_libcall): Update to use Type::typeinfoclass.\n+\t* d-codegen.cc (WrappedExp): Define as class.\n+\t* d-convert.cc (d_convert_basic): Fix format warnings.\n+\t* d-decls.cc (ModuleInfoDeclaration::toSymbol): Remove.\n+\t(FuncDeclaration::toSymbol): Use mangleExact to get decl mangle.\n+\t* d-elem.cc (ClassReferenceExp::toElem): Return reference to class.\n+\t* d-glue.cc (verror): Fix format warnings.\n+\t(verrorSupplemental): Likewise.\n+\t(vwarning): Likewise.\n+\t(vdeprecation): Likewise.\n+\t(escapePath): Define for frontend implementation changes.\n+\t* d-irstate.cc (IRState::getLoopForLabel): Implement breaking on named\n+\tscope labels in for/while loops.\n+\t* d-lang.cc (d_handle_option): Add handler for new -fdeps and\n+\t-fmake-deps options.\n+\t(d_parse_file): Handle new -fdeps and fmake-deps options.\n+\t* d-objfile.cc (Dsymbol::toObjFile): Update to use RootObject.\n+\t(Type::typeinfoclass): Update to use Type::typeinfoclass.\n+\t(InterfaceDeclaration::toObjFile): Likewise.\n+\t* d-objfile.h (Symbol): Remove inheritance from Object.\n+\t* d-todt.cc (TypeInfoStructDeclaration::toDt): Update to use\n+\tType::immutableOf.\n+\n+2013-11-24  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-builtins.c (gcc_type_to_d_type): Use TREE_INT_CST_LOW macro instead\n+\tof tree_low_cst.\n+\t(eval_builtin): Likewise.\n+\t(gcc_cst_to_d_expr): Use tree_cst_hwi.\n+\t* d-codegen.cc (tree_to_hwi): Remove call to deleted host_integerp.\n+\t(maybe_expand_builtin): Use TREE_INT_CST_LOW macro.\n+\t* d-lang.cc (d_parse_file): Update debug_hooks call for middle-end\n+\tchanges.\n+\t* d-system.h: Update includes for middle-end changes.\n+\n+2013-11-17  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-objfile.cc (finish_thunk): Update for conversion of symtab types to\n+\ta true class hierarchy.\n+\n+\t* d-ctype.cc (TypeClass::toCtype): Fix ABI to emit correct vtable and\n+\tmonitor field names.\n+\n+\t* d-ctype.cc (TypeClass:toCtype): Set TYPE_LANG_SPECIFIC on record as\n+\twell as reference type.\n+\t* d-lang.cc (d_classify_record): New langhook to return appropriate\n+\tclass/interface/struct type to the debugger.\n+\n+2013-10-27  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-elem.cc (ArrayLiteralExp::toElem): Build empty constructor for zero\n+\tsized arrays.\n+\n+2013-10-23  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-elem.cc (AssignExp::toElem): Optimise assigning array literal to a\n+\tstatic array.\n+\t(ArrayLiteralExp::toElem): Do not allocate static or const array\n+\tliterals on the heap using the GC.\n+\n+2013-10-16  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-builtins.c (DEF_FUNCTION_TYPE_8): Define.\n+\n+2013-10-10  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-builtins.c (gcc_cst_to_d_expr): Add support for VECTOR_CST to\n+\tExpression conversion.\n+\t(d_gcc_paint_type): Add support for painting to/from array literals.\n+\n+2013-10-01  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-objfile.cc (cvtLocToloc_t): Rename to get_linemap.\n+\t* d-glue.cc: New source to provide interface for defined globals and\n+\terror handling called from the front-end.\n+\n+2013-09-16  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (IRState::call): Rename to d_build_call.\n+\t(IRState::emitLocalVar): Rename to build_local_var.\n+\t(IRState::buildAssignOp): Move to BinExp::toElemBin.\n+\t(IRState::IRState): Remove IRState class.\n+\t* d-irstate.cc (IRBase::IRBase): Rename to IRState, remove inheritance\n+\tfrom Object class.\n+\t* d-decls.cc (VarDeclaration::toSymbol): Remove redundant CONST_DECL\n+\tcode as VarDeclaration::toObjFile does not emit manifest constants.\n+\t* d-ctype.cc (TypeEnum::toCtype): Generate CONST_DECLs for enumeration\n+\tmembers for correct debugging.\n+\t* d-objfile.cc (build_type_decl): Use fully qualified type name in\n+\tdebugging code.\n+\t(VarDeclaration::toObjFile): Emit manifest constant values in debug\n+\tcode generation.\n+\n+2013-09-10  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-elem.cc (SliceExp::toElem): Don't build D array for slices that\n+\treturn a static array.\n+\n+2013-09-03  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (IRState::buildOp): Rename to build_binary_op.\n+\n+2013-09-01  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-decls.cc (binfo_for): Rename to build_class_binfo.\n+\t(intfc_binfo_for): Rename to build_interface_binfo.\n+\t(ClassDeclaration::toDebug): Move binfo generation into toCtype.\n+\t* d-lang.cc (pushlevel): Rename to push_binding_level.\n+\t(poplevel): Rename to pop_binding_level.\n+\t(global_bindings_p): Rename to d_global_bindings_p, add langhook.\n+\t(pushdecl): Rename to d_pushdecl, add langhook.\n+\t(getdecls): Rename to d_getdecls, add langhook.\n+\t(set_block): Remove function.\n+\t(insert_block): Remove function.\n+\t* d-irstate.cc (IRBase::startBindings): Inline set_block here.\n+\t(IRBase::endBindings): Inline insert_block here.\n+\n+2013-08-29  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-spec.c (lang_specific_spec_functions): Remove.\n+\n+2013-08-28  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (IRState::doArraySet): Rename to IRBase::doArraySet.\n+\t(IRState::arraySetExpr): Remove function.\n+\t(IRState::expandDecl): Rename to expand_decl.\n+\t(IRState::typeinfoReference): Rename to build_typeinfo.\n+\t(IRState::buildChain): Merge into FuncDeclaration::buildClosure.\n+\t(IRState::getVThis): Rename to build_vthis.\n+\t(IRState::maybeExpandSpecialCall): Rename to maybe_expand_builtin.\n+\t(IRState::toDArray): Rename to d_array_convert.\n+\n+2013-08-26  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (convert_expr): Check that the class type the codegen is\n+\tcasting from is a base class of the class type the codegen is casting\n+\tto, not the other way round.\n+\n+2013-08-14  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-elem.cc (ArrayLiteralExp::toElem): Return null for zero length\n+\tarray literals.\n+\n+2013-08-07  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-objfile.cc (finish_thunk): Don't emit thunks to external symbols as\n+\tweakref declarations.\n+\t* d-codegen.cc (IRState::maybeExpandSpecialCall): Remove intrinsic yl2x\n+\tand yl2xp1 builtins.\n+\t(maybe_set_builtin_frontend): Likewise.\n+\n+2013-07-09  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-builtins.c (d_gcc_magic_builtins_module): Set builtins solely\n+\tprovided by the compiler as @safe, pure and nothrow.\n+\t* d-codegen.cc (IRState::getVThis): Don't set outer 'this' of structs\n+\tto be parent function chain if no frame has been created.\n+\n+2013-07-08  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-elem.cc (Expression::toElemDtor): Wrap temp variables destructor\n+\tcalls in a try/finally expression.\n+\n+2013-07-05  Johannes Pfau  <johannespfau@gmail.com>\n+\n+\t* patch-versym-os-4.8.x: Set versions on powerpc and alpha.\n+\tRemove SysV4 support and therefore fix macro redefinition warnings.\n+\t* patch-versym-os-4.9.x: Likewise.\n+\n+2013-07-03  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-longdouble.cc (longdouble::set): Intepret set values at higher\n+\tprecision for min/max properties.\n+\t* d-codegen.cc (maybe_set_builtin_frontend): Add yl2x and yl2xp1\n+\tmath intrinsics.\n+\t(IRState::maybeExpandSpecialCall): Likewise.\n+\n+2013-07-02  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-objfile.cc (Module::genobjfile): Don't free current_module_info.\n+\t* d-codegen.cc (IRState::buildAssignOp): Don't create a SAVE_EXPR\n+\taround comma expressions used as lvalues.\n+\t* d-todt.cc (TypeSArray::toDtElem): Get underlying vector basetype when\n+\tlayouting out data in a static array.\n+\n+2013-06-29  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* complex_t.h: Move into dfrontend.\n+\t* d-builtins.c (gcc_cst_to_d_expr): Explicitly create longdouble.\n+\t* d-longdouble.cc (longdouble::parse): Remove function.\n+\t(longdouble::longdouble): Remove constructors from longdouble.\n+\tReplaced with operator= template and longdouble::set.\n+\t(longdouble::rv): Update for new class layout.\n+\t(longdouble::from_shwi): New function to create a longdouble value\n+\tfrom a HOST_WIDE_INT.\n+\t(longdouble::from_uhwi): Likewise, but from an unsigned HOST_WIDE_INT.\n+\t(longdouble::to_shwi): New function to return a HOST_WIDE_INT value\n+\tfrom a longdouble.\n+\t(longdouble::to_uhwi): Likewise, but from an unsigedn HOST_WIDE_INT.\n+\t(longdouble::set): New function to explicitly set longdouble value.\n+\t(longdouble::toInt): Remove function.\n+\t(longdouble::isZero): Remove function.\n+\t(longdouble::isNegative): Remove function.\n+\t* d-port.cc (Port::nan): Rename to Port::ldbl_nan.\n+\t(Port::infinity): Rename to Port::ldbl_infinity.\n+\t(Port::ldbl_max): New static field.\n+\t(Port::init): Set ldbl_max to be maximimum value for long double type.\n+\t(Port::strtof): New function to convert string to longdouble.\n+\t(Port::strtod): Likewise.\n+\t(Port::strtold): Likewise.\n+\n+2013-06-24  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-objfile.cc (make_alias_for_thunk): Do not set\n+\tTREE_SYMBOL_REFERENCED.\n+\n+2013-06-17  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (build_struct_memcmp): New function.\n+\t* d-elem.cc (IdentityExp::toElem): Use build_struct_memcmp for field\n+\tcomparisons of small structs.\n+\n+2013-06-13  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (make_temp): New function.\n+\t* d-decls.cc (StructLiteralExp::toSymbol): Implement correctly to\n+\tgenerate an anonymous symbol to reference to in the codegen.\n+\t(ClassReferenceExp::toSymbol): Likewise, but also use an anonymous\n+\ttype as size is not determined until the data has been layed out.\n+\t* d-elem.cc (EqualExp::toElem): Optimise comparisons of arrays of basic\n+\ttypes, also ensure left-to-right evaluation.\n+\t(SliceExp::toElem): Handle returing slice as a static array type.\n+\t(AddrExp::toElem): Handle taking the address of StructLiteralExp and\n+\tClassReferenceExp symbols.\n+\t(FuncExp::toElem): Relax type checking to allow returning function\n+\taddresses as generic pointer types.\n+\t(ArrayLiteralExp::toElem): Implicitly convert static arrays of void to\n+\tstatic arrays of ubyte.\n+\t(StructLiteralExp::toElem): Remove code generation of postblit calls,\n+\tnow taken care of in the front end.\n+\t* d-objfile.cc (Module::genmoduleinfo): Emit module name as a null\n+\tterminated static array.\n+\t* d-ctype.cc (TypeAArray::toCtype): Pass AA types around like pointers.\n+\n+2013-06-11  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* dfrontend: Update to D front-end version 2.063.\n+\n+\t* d-builtins.c (gcc_type_to_d_type): Use Loc for unknown locations.\n+\t(d_gcc_magic_builtins_module): Likewise.\n+\t(gcc_cst_to_d_expr): Likewise.\n+\t* d-codegen.cc (get_libcall): Use FuncDeclaration::genCfunc to build\n+\tD runtime library functions.\n+\t* d-decl.cc (SymbolDeclaration::SymbolDeclaration): Remove function.\n+\t(StructLiteralExp::toSymbol): New function.\n+\t(ClassReferenceExp::toSymbol): New function.\n+\t* d-elem.cc (AssertExp::toElem): Call struct/class invariants only if\n+\tcompiler is generating invariant code.\n+\t(TupleExp::toElem): Update for new front-end.\n+\t(ClassReferenceExp::toElem): New function.\n+\t* d-lang.cc (d_init_options): Set compiler.vendor front-end parameter.\n+\t(d_init): Call Expression::init.\n+\t* d-objfile.cc (InterfaceDeclaration::toObjFile): Correctly set the\n+\txgetRTInfo field in the record layout.\n+\t* d-todt.cc (CastExp::toDt): New function.\n+\t(AddrExp::toDt): New function.\n+\t(ClassReferenceExp::toDt): New function.\n+\t(ClassReferenceExp::toDtI): New function.\n+\t(ClassReferenceExp::toInstanceDt): New function.\n+\t(ClassReferenceExp::toDt2): New function.\n+\n+2013-06-10  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-objfile.cc (FuncDeclaration::toObjFile): Set 'this' parameter as\n+\timplicitly read-only.\n+\t* d-codegen.cc (declaration_type): Set 'this' declaration type as\n+\timplicitly const.\n+\t(build_frame_type): Set frame or closure type as implicitly const.\n+\n+2013-06-09  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-builtins.c (d_init_builtins): Make d_unknown_type_node a\n+\tRECORD_TYPE.\n+\t* d-lang.cc (d_build_eh_type_type): Cast the returned typeinfo decl to\n+\tvoid pointer type.\n+\n+2013-06-07  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (IRState::var): Rename to get_decl_tree.\n+\t(IRState::convertForArgument): Rename to convert_for_argument.\n+\t(IRState::floatMod): Rename to build_float_modulus.\n+\t(IRState::findThis): Rename to find_this_tree.\n+\t(IRState::emitLocalVar): Update signature.\n+\t(IRState::arrayElemRef): Remove function.\n+\t* d-elem.cc (IndexExp::toElem): Move implementation of\n+\tIRState::arrayElemRef here.\n+\n+2013-06-04  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (cmodule): Rename to current_module_decl.\n+\t(object_file): Remove variable.\n+\t* d-objfile.cc (ObjectFile::moduleInfo): Rename to current_module_info.\n+\t(ObjectFile::modules): Rename to output_modules.\n+\t(ObjectFile::staticCtorList): Rename to static_ctor_list.\n+\t(ObjectFile::staticDtorList): Rename to static_dtor_list.\n+\t(ObjectFile::emitTemplates): Rename to flag_emit_templates.\n+\t(ObjectFile::beginModule): Remove function.\n+\t(ObjectFile::endModule): Remove function.\n+\t(ObjectFile::finish): Rename to d_finish_module.\n+\t(ObjectFile::doLineNote): Remove function.\n+\t(ObjectFile::setLoc): Rename to set_input_location.\n+\t(ObjectFile::setDeclLoc): Rename to set_decl_location.\n+\t(ObjectFile::setCfunEndLoc): Rename to set_function_end_locus.\n+\t(ObjectFile::giveDeclUniqueName): Rename to get_unique_name.\n+\t(ObjectFile::setupSymbolStorage): Rename to setup_symbol_storage.\n+\t(ObjectFile::setupStaticStorage): Remove function.\n+\t(ObjectFile::makeDeclOneOnly): Rename to d_comdat_linkage.\n+\t(ObjectFile::outputStaticSymbol): Rename to d_finish_symbol.\n+\t(ObjectFile::outputFunction): Rename to d_finish_function.\n+\t(ObjectFile::addAggMethod): Remove function.\n+\t(ObjectFile::initTypeDecl): Rename to build_type_decl.\n+\t(ObjectFile::declareType): Remove function.\n+\t(ObjectFile::shouldEmit): Rename to output_declaration_p.\n+\t(ObjectFile::shouldEmit): Rename variant to output_symbol_p.\n+\t(ObjectFile::doThunk): Rename to use_thunk.\n+\t(ObjectFile::stripVarDecl): Remove function.\n+\t(ObjectFile::doSimpleFunction): Rename to build_simple_function.\n+\t(ObjectFile::doFunctionToCallFunctions): Rename to\n+\tbuild_call_function.\n+\t(ObjectFile::doCtorFunction): Rename to build_ctor_function.\n+\t(ObjectFile::doDtorFunction): Rename to build_dtor_function.\n+\t(ObjectFile::doUnittestFunction): Rename to build_unittest_function.\n+\t(ObjectFile::hasModule): Rename to output_module_p.\n+\t(ObjectFile::outputThunk): Rename to finish_thunk.\n+\t(write_deferred_thunks): New function to emit deferred thunks.\n+\n+2013-06-03  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-decls.cc (VarDeclaration::toSymbol): Don't set default tls model.\n+\t* d-objfile.cc (ObjectFile::setupSymbolStorage): Set default tls\n+\tmodel for var decls before determining whether symbol is public.\n+\t(build_tlssections): Likewise for TLS symbols.\n+\n+2013-06-01  Johannes Pfau  <johannespfau@gmail.com>\n+\n+\t* d-codegen.cc (maybe_set_builtin_frontend): Check parameter and\n+\treturn types of intrinsics.\n+\n+2013-06-01  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (IRState::var): Handle variables used for NRVO.\n+\t* d-ir.cc (ReturnStatement::toIR): Return result decl directly if NRVO.\n+\t* d-objfile.cc (Symbol::SnamedResult): New member to hold the named\n+\tRESULT_DECL of the function.\n+\t(FuncDeclaration::toObjFile): Set-up function for NRVO.\n+\t(build_tlssections): Align _tlsstart and _tlsend symbols to target\n+\taddress size.\n+\t* d-ctype.cc (TypeFunction::toSymbol): Mark functions returning non-POD\n+\tstructs as TREE_ADDRESSABLE to force return in memory.\n+\t* d-decls.cc (FuncDeclaration::toSymbol): Propagate TREE_ADDRESSABLE\n+\tfrom the original function type.\n+\n+2013-05-29  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-target.cc: New source file to handle Target structure.\n+\n+\t* d-builtins.c (d_bi_init): Remove function.\n+\t(d_gcc_type_align): Move to Target::alignsize.\n+\t(d_gcc_field_align): Move to Target::fieldalign.\n+\t(d_init_builtins): Build va_list type for D frontend.\n+\t* d-lang.cc (d_init): Use isLP64 to determine LP64 targets.\n+\t(d_add_builtin_version): Set is64bit if target is X86_64.\n+\t* d-codegen.cc (convert_for_assignment): Use memset to implement front\n+\tend code (struct = 0) here, rather than build an empty constructor.\n+\t* d-elem.cc (AssignExp::toElem): Remove handling of (struct = 0) and\n+\tcall convert_for_assignment.\n+\n+2013-05-28  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-gcc-complex_t.h: Rename to complex_t.h.\n+\t* d-gcc-real.cc: Rename to d-longdouble.cc.\n+\t* d-gcc-real.h: Rename to longdouble.h\n+\t* d-port.cc: New source file to handle Port structure.\n+\t* gdc_alloca.h: Remove source.\n+\n+\t* d-longdouble.cc (real_t): Rename to longdouble.\n+\t(longdouble::getnan): Move to Port::nan.\n+\t(longdouble::getsnan): Move to Port::snan.\n+\t(longdouble::getinfinity): Move to Port::infinity.\n+\t(longdouble::isInf): Move to Port::isInfinite.\n+\t(longdouble::isNan): Move to Port::isNan.\n+\t(longdouble::isSignallingNan): Move to Port::isSignallingNan.\n+\t* d-builtins.c (gcc_d_backend_init): Rename to d_backend_init.\n+\t(gcc_d_backend_term): Rename to d_backend_term.\n+\t(gcc_type_to_d_type): Don't map 128bit integers to D front end.\n+\n+\t* d-elem.cc (AssignExp::toElem): Remove handling of fillHoles, use\n+\tmemset to implement (struct = 0).\n+\t(StructLiteralExp::toElem): Handle fillHoles here, creating a\n+\ttemporary var that is zero init'd with memset and returned.\n+\n+2013-05-27  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (IRState::localVar): Rename to build_local_var.\n+\t(IRState::exprVar): Rename to create_temporary_var.\n+\t(IRState::maybeExprvar): Rename to maybe_temporary_var.\n+\t(IRState::pointerIntSum): Rename to build_array_index.\n+\t* d-lang.cc (d_handle_target_attribute): New function to handle D\n+\ttarget attributes.\n+\n+2013-05-26  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-incpath.cc (prefixed_path): Add cpp_GCC_INCLUDE_DIR back in as\n+\tsecond method for relocation.\n+\t* d-elem.cc (IndexExp::toElem): Fix call to _aaGetX as from\n+\tIRState::toElemLvalue.\n+\t* d-codegen.cc (IRState::toElemLvalue): Remove function.\n+\t(IRState::convertForAssignment): Rename to convert_for_assignment.\n+\t(IRState::convertForCondition): Rename to convert_for_condition.\n+\t(IRState::checkedIndex): Rename to d_checked_index.\n+\t(IRState::boundsCond): Rename to d_bounds_condition.\n+\t(IRState::arrayBoundsCheck): Rename to array_bounds_check.\n+\t(IRState::assertCall): Rename to d_assert_call.\n+\t(IRState::doLineNote): Move to irstate.h.\n+\t* d-irstate.cc (IRBase::getLocalContext): Remove function.\n+\t* d-decls.cc (VarDeclaration::toSymbol): Build decl lang specific for\n+\tdecl to point back to D front end type.\n+\t(FuncDeclaration::toSymbol): Likewise.\n+\n+2013-05-23  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (AggLayout::finish): Unset TYPE_SIZE before\n+\tre-calculating.\n+\t* d-ctype.cc (TypeStruct::toCtype): Don't call decl_attribute on the\n+\ttype twice.\n+\n+2013-05-21  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-lang.cc (d_gcc_dump_source): Remove function.\n+\t(d_post_options): Set flag_excess_precision_cmd as standard.\n+\t* d-gcc-real.cc (real_t::convert): Remove function.\n+\t(real_t::floatCompare): Remove function.\n+\t(real_t::operator): Always perform floating point compilation at the\n+\tprecision of the target real mode.\n+\t* d-todt.cc (dt_last): Remove function.\n+\t(dtlist_to_tree): Rename to dtvector_to_tree.\n+\t(dt_cons): Replace TREE_CHAIN implementation for use of CONSTRUCTOR.\n+\t(dt_chainon): Likewise.\n+\t(dt_container): Likewise.\n+\t(dt_container2): Likewise.\n+\t(StructInitializer::toDt): Likewise.\n+\t(StructLiteralExp::toDt): Likewise.\n+\n+2013-05-17  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (IRState::convertTo): Replace with d_convert and\n+\tconvert_expr.\n+\t(IRState::declContext): Replace with d_decl_context.\n+\t(IRState::functionNeedsChain): Replace with needs_static_chain.\n+\t(IRState::label): Replace with d_build_label.\n+\t(IRState::emitTemplates): Move to ObjectFile.\n+\t(functionDegenerateClosure): Replace with is_degenerate_closure.\n+\t(get_object_method): Assert that function is a method.\n+\t(IRState::startCond): Move to IRBase.\n+\t(IRState::startElse): Likewise.\n+\t(IRState::endCond): Likewise.\n+\t(IRState::startLoop): Likewise.\n+\t(IRState::continueHere): Likewise.\n+\t(IRState::setContinueLabel): Likewise.\n+\t(IRState::exitIfFalse): Likewise.\n+\t(IRState::endLoop): Likewise.\n+\t(IRState::startCase): Likewise.\n+\t(IRState::doCase): Likewise.\n+\t(IRState::endCase): Likewise.\n+\t(IRState::continueLoop): Likewise.\n+\t(IRState::exitLoop): Likewise.\n+\t(IRState::startTry): Likewise.\n+\t(IRState::startCatches): Likewise.\n+\t(IRState::startCatch): Likewise.\n+\t(IRState::endCatch): Likewise.\n+\t(IRState::endCatches): Likewise.\n+\t(IRState::startFinally): Likewise.\n+\t(IRState::endFinally): Likewise.\n+\t(IRState::doReturn): Likewise.\n+\t(IRState::doJump): Likewise.\n+\t(IRState::pushLabel): Likewise.\n+\t(IRState::checkSwitchCase): Likewise.\n+\t(IRState::checkGoto): Likewise.\n+\t(IRState::checkPreviousGoto): Likewise.\n+\n+\t* d-elem.cc (CatAssignExp::toElem): Call postblit on appending array of\n+\tstructs if required.\n+\n+2013-05-16  Johannes Pfau  <johannespfau@gmail.com>\n+\n+\t* d-incpath.cc (prefixed_path): use cpp_PREFIX instead of\n+\tcpp_GCC_INCLUDE_DIR for relocation.\n+\n+2013-05-16  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (IRState::convertForAssignment): Remove use of\n+\tCtorEltMaker wrapper for vec<constructor_elt, va_gc>.\n+\t(d_array_value): Likewise.\n+\t(build_delegate_cst): Likewise.\n+\t(extract_from_method_call): Likewise.\n+\t* d-elem.cc (NewExp::toElem): Likewise.\n+\t(ArrayLiteralExp::toElem): Likewise.\n+\t(AssocArrayLiteralExp::toElem): Likewise.\n+\t(StructLiteralExp::toElem): Likewise.\n+\t(NullExp::toElem): Likewise.\n+\t(VectorExp::toElem): Likewise.\n+\t* d-objfile.cc (build_moduleinfo): Likewise.\n+\t* d-todt.cc (dt_container): Likewise.\n+\t(dt_container2): Likewise.\n+\n+\t* d-asmstmt.cc (ExtAsmStatement::toIR): Remove use of ListMaker\n+\twrapper for tree chaining.\n+\t* d-builtins.c (d_bi_builtin_func): Likewise.\n+\t(d_bi_builtin_type): Likewise.\n+\t(d_gcc_magic_builtins_module): Likewise.\n+\t(d_gcc_magic_libbuiltins_module): Likewise.\n+\t* d-codegen.cc (build_attributes): Likewise.\n+\t(IRState::call): Likewise.\n+\t(IRState::buildFrameForFunction): Likewise.\n+\t(AggLayout::doFields): Likewise.\n+\t(AggLayout::addField): Likewise.\n+\t* d-ctype.cc (TypeEnum::toCtype): Likewise.\n+\t(TypeFunction::toCtype): Likewise.\n+\t* d-todt.cc (dt_container2): Likewise.\n+\n+\t* d-codegen.cc (IRState::getFrameInfo): Replace with get_frameinfo.\n+\t(IRState::buildFrameForFunction): Replace with build_frame_type.\n+\t(IRState::isClassNestedInFunction): Replace with d_nested_class.\n+\t(IRState::isStructNestedInFunction): Replace with d_nested_struct.\n+\t(IRState::getFrameForFunction): Fold into IRState::getFrameForSymbol.\n+\t(IRState::getFrameForNestedClass): Likewise.\n+\t(IRState::getFrameForNestedStruct): Likewise.\n+\n+2013-05-15  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (IRState::buildFrameForFunction): Also copy the\n+\tparameters of functions with 'in' contracts to a local frame decl.\n+\t* d-lang.cc (d_handle_flatten_attribute): New function to handle D\n+\tflatten attributes.\n+\n+2013-05-14  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (IRState::chainLink): Remove function.\n+\t(IRState::chainFunc): Remove function.\n+\t(IRState::sthis): New member which holds the chain of function.\n+\t(IRState::buildChain): Update to use new static chain decl.\n+\t(IRState::getFrameInfo): Likewise.\n+\t* d-objfile.cc (FuncDeclaration::buildClosure): Likewise.\n+\t(FuncDeclaration::toObjFile): Default the function static chain decl\n+\tto null unless vthis is given for the function.\n+\n+2013-05-13  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-lang.cc (d_handle_noinline_attribute): New function to handle D\n+\tnoinline attributes.\n+\t(d_handle_forceinline_attribute): New function to handle D forceinline\n+\tattributes.\n+\t* d-elem.cc (StructLiteralExp::toElem): Return the struct initialiser\n+\tsymbol directly if the tree has already been built.\n+\t* d-decls.cc (Dsymbol::toSymbolX): Constify the mangling name to use.\n+\n+2013-05-10  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-typinf.cc: New file containing type info routines originally in\n+\tthe D Front End.\n+\n+\t* d-todt.cc (dt_last): New helper function to retrieve last node in a\n+\tdt_t tree list.\n+\t(dt_cons): New helper function to append nodes to the end of a list.\n+\t(dt_chainon): New helper function to concatenate two lists together.\n+\t(dt_container): New helper function to build a ctor from a list.\n+\t(build_vptr_monitor): New helper function to generate the class\n+\tvtable, and put out __vptr and __monitor.\n+\tsymbol default values in a class declaration.\n+\t(dtlist_to_tree): New helper function to convert a dt_t list into a\n+\tconstructor tree.\n+\t(Type::toDt): Implement routines for new dt_t format.\n+\t(TypeInfoDeclaration::toDt): Likewise.\n+\t(Initializer::toDt): Likewise.\n+\t(Expression::toDt): Likewise.\n+\t(Declaration::toDt): Likewise.\n+\n+\t* d-objfile.cc (Dsymbol::toObjFile): Update for new dt_t format.\n+\t(Module::genmoduleinfo): Likewise.\n+\t(Symbol::Symbol): Moved from symbol.cc\n+\t(Obj::objmod): Remove abstraction layer.\n+\t(Obj::moduleinfo): Renamed to build_moduleinfo.\n+\t(obj_tlssections): Renamed to build_tlssections.\n+\t(outdata): Renamed to d_finish_symbol.\n+\t(check_static_sym): Moved into d_finish_symbol.\n+\n+\t* d-codegen.cc (d_gcc_emit_local_variable): Remove.\n+\n+\t* d-decls.cc (Dsymbol::toSymbolX): Update to not call symbol_calloc.\n+\t(FuncDeclaration::toThunkSymbol): Likewise.\n+\t(ClassDeclaration::toSymbol): Build type as d_unknown_type_node.\n+\t(InterfaceDeclaration::toSymbol): Likewise.\n+\t(Module::toSymbol): Likewise.\n+\t(ClassDeclaration::toVtblSymbol): Update call to toSymbolX.\n+\t(AggregateDeclaration::toInitializer): Likewise.\n+\t(TypedefDeclaration::toInitializer): Likewise.\n+\t(EnumDeclaration::toInitializer): Likewise.\n+\n+\t* d-ir.cc (CaseStatement::toIR): Don't call static_sym.\n+\n+\t* d-lang.cc (rtlsym): Remove symbol.\n+\t(D_DECL_READONLY_STATIC): Remove macro.\n+\t(d_unknown_type_node): New LANG_TYPE node for marking TypeInfo_Class,\n+\tInterface, and ModuleInfo types that are of a variable size determined\n+\tat compile time.\n+\n+\t* d-elem.cc (StringExp::toElem): Clean up for new dt_t format.\n+\n+\t* symbol.cc: Remove file.\n+\n+2013-05-08  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (IRState::getFrameInfo): Don't create a frame/closure\n+\tfor member functions, only required for nested.\n+\t* d-elem.cc (Expression::toElemDtor): Call dtors in the correct order.\n+\t(DeclarationExp::toElem): Don't call dtor on static, manifest, or\n+\textern symbols upon declaration.\n+\t(AssignExp::toElem): Only call postblit on lvalues in assignment.\n+\t(ArrayLiteralExp::toElem): Always generate literals on heap.\n+\n+2013-05-06  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-elem.cc (StructLiteralExp::toElem): Return the default initialiser\n+\tsymbol if one exists.\n+\t* d-builtins.c (d_gcc_magic_libbuiltins_check): Override the function\n+\ttype with the correct built-in function type as defined in backend.\n+\n+2013-04-15  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-elem.cc (IdentityExp::toElem): Remove special handling of class,\n+\treference and array types.\n+\n+2013-04-12  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (maybe_make_temp): Save call expressions so aren't\n+\tevaluated more than once.\n+\t(d_has_side_effects): Remove check for exceptional class types.\n+\n+2013-04-10  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-decls.cc (FuncDeclaration::toSymbol): Harden logic for marking\n+\tfunctions pure as in 'has no side effects'.\n+\n+2013-04-07  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-decls.cc (FuncDeclaration::toSymbol): Push deferred functions to\n+\tFuncDeclaration::deferred.\n+\t* d-elem.cc (DelegateExp::toElem): Likewise.\n+\t(FuncExp::toElem): Likewise.\n+\t* d-objfile.cc (ObjectFile::shouldEmit): Likewise.\n+\t(FuncDeclaration::toObjFile): Process all deferred functions in\n+\tFuncDeclaration::deferred.\n+\t* symbol.cc (Symbol::deferredNestedFuncs): Remove.\n+\n+2013-04-05  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-elem.cc (FuncExp::toElem): Defer function literals and lambdas\n+\tuntil parent function has finished processing.\n+\n+2013-04-04  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (IRState::buildChain): Use __frame decl directly when\n+\tsetting up the function frame.\n+\t(maybe_set_builtin_frontend): Exit early if symbol has no parent.\n+\t* d-decls.cc (FuncDeclaration::toSymbol): Defer all nested functions,\n+\tnot just templated instances.\n+\t* d-objfile.cc (FuncDeclaration::toObjFile): Delay processed deferred\n+\tnested functions until function has finished being generated.\n+\t(ObjectFile::shouldEmit): Don't emit nested functions if the parent\n+\tfunction hasn't finished processing.\n+\n+2013-04-03  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (maybe_set_builtin_frontend): Merged from\n+\tmaybe_set_builtin and maybe_set_libcall.\n+\t* d-decls.cc (FuncDeclaration::toSymbol): Use\n+\tmaybe_set_builtin_frontend.\n+\n+2013-03-31  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-lang.cc (d_init_options): Default module info emission to on.\n+\t(d_handle_option): New femit-moduleinfo switch.\n+\t* d-objfile.cc (Module::genobjfile): Don't emit module if disabled\n+\texplicitly.\n+\t* d-builtins.cc (is_intrinsic_module_p): New function to test whether\n+\tmodule is core.bitops.\n+\t(is_math_module_p): New function to test whether module is std.math or\n+\tcore.stdc.math.\n+\t(is_builtin_va_arg_p): New function to test whether symbol is\n+\tspecially handled va_arg template.\n+\t(is_builtin_va_start_p): New function to test whether symbol is\n+\tspecially handled va_start template.\n+\t* d-codegen.cc (IRState::binding): Replace with bind_expr.\n+\t(IRState::mathModule): Replace with std_math_module.\n+\t(IRState::mathCoreModule): Replace with core_math_module.\n+\t(IRState::intrinsicModule): Replace with std_intrinsic_module.\n+\t(IRState::cstdargTemplateDecl): Replace with va_arg_template.\n+\t(IRState::stdargTemplateDecl): Replace with va_arg2_template.\n+\t(IRState::cstdargStartTemplateDecl): Replace with va_start_template.\n+\t(IRState::getLibCallDecl): Replace with get_libcall.\n+\t(IRState::maybeSetLibCallDecl): Replace with maybe_set_libcall.\n+\t(IRState::libCall): Replace with build_libcall.\n+\t(IRState::maybeSetUpBuiltin): Replace with maybe_set_builtin.\n+\t(IRState::Intrinsic): Move enum out of IRState.\n+\n+2013-03-30  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (IRState::darrayPtrRef): Replace with d_array_ptr.\n+\t(IRState::darrayLenRef): Replace with d_array_length.\n+\t(IRState::darrayVal): Replace with d_array_value.\n+\t(IRState::darrayString): Replace with d_array_string.\n+\t(IRState::arrayLength): Replace with get_array_length.\n+\t(get_object_method): Remove dependancy on irs parameter.\n+\t* d-lang.cc (d_init): Use static bool std_inc to determine whether to\n+\tinclude standard module paths.\n+\t(d_post_options): Canonicalize the input filename.\n+\t(d_parse_file): Correctly catch cases where input file is stdin.\n+\n+2013-03-27  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (IRState::getFrameInfo) Create a custom static chain for\n+\tall nested functions.\n+\t* d-gcc-includes.h: Rename to d-system.h\n+\n+2013-03-23  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-builtins.c (d_bi_init): Set REALPAD to be TYPE_PRECISION of\n+\tlong_double_type_node.\n+\t* d-codegen.cc (IRState::twoFieldType): Replace with\n+\tbuild_two_field_type.\n+\t(IRState::arrayOpNotImplemented): Replace with unhandled_arrayop_p.\n+\t(IRState::delegateMethodRef): Replace with delegate_method.\n+\t(IRState::delegateObjectRef): Replace with delegate_object.\n+\t(IRState::delegateVal): Replace with build_delegate_cst.\n+\t(IRState::methodCallExpr): Replace with build_method_call.\n+\t(IRState::extractMethodCallExpr): Replace with\n+\textract_from_method_call.\n+\t(IRState::objectInstanceMethod): Replace with get_object_method.\n+\t(IRState::twoFieldCtor): Remove.\n+\t(IRState::call): Assert that if calling a normal FUNCTION_TYPE,\n+\t'object' is not set.\n+\t* d-ctype.cc (TypeDelegate::toCtype): Build a METHOD_TYPE for the .func\n+\tfield type in delegates.\n+\t* d-lang.h (D_IS_METHOD_CALL_EXPR): Rename to D_METHOD_CALL_EXPR.\n+\t* d-objfile.cc (FuncDeclaration::toObjFile): Remove assert for chain\n+\tfunction.\n+\n+2013-03-20  Johannes Pfau  <johannespfau@gmail.com>\n+\n+\t* d-codegen.cc (IRState::objectInstanceMethod): Recursively check\n+\tfor TOKsuper / TOKdottype. Do not ignore CastExp.\n+\t* d-elem.cc (IdentityExp::toElem): Ignore padding in bitwise floating\n+\tpoint comparisons.\n+\t* testsuite: Cleanup. Remove invalid tests, adjust tests, etc. \n+\n+2013-03-20  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (IRState::objectInstanceMethod): Get function pointer\n+\toff function TREE_TYPE.\n+\t(build_deref): Handle cases where expression to dereference is an\n+\taddress expression.\n+\t(modify_expr): New function overload to set return type directly.\n+\t* d-elem.cc (CatAssignExp::toElem): Use new modify_expr.\n+\t(AssignExp::toElem): Likewise.\n+\t* d-decls.cc (FuncDeclaration::toSymbol): Don't build a method type for\n+\tnested functions / delegates.  Just add on the hidden 'this' pointer\n+\tcontaining the custom static chain/closure object.\n+\n+\t* d-codegen.cc (GlobalValues): Replace with current_module,\n+\tcurrent_irs, object_file.\n+\t(IRState::getFuncType): Replace with get_function_type.\n+\t(IRState::isCallByAlias): Replace with call_by_alias_p.\n+\t(IRState::isFuncType): Replace with function_type_p.\n+\t(IRState::doExp): Remove.\n+\n+\t* d-asmstmt.cc (ExtAsmStatement::syntaxCopy): Use arraySyntaxCopy to\n+\tcopy front end expressions.\n+\n+\t* d-codegen.cc (AssignExp::toElem): Call _d_arrayassign / _d_arrayctor\n+\twhen assigning arrays of structs.\n+\n+2013-03-18  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (IRState::realPart): Replace with real_part.\n+\t(IRState::imagPart): Replace with imaginary_part.\n+\t(IRState::integerConstant): Replace with build_integer_cst.\n+\t(IRState::floatConstant): Replace with build_float_cst.\n+\t(IRState::hwi2toli): Replace with cst_to_hwi.\n+\t(IRState::addressOf): Replace with build_address.\n+\t(IRState::markAddressable): Replace with d_mark_addressable.\n+\t(IRState::markUsed): Replace with d_mark_used.\n+\t(IRState::markRead): Replace with d_mark_read.\n+\t(IRState::indirect): Replace with indirect_ref.\n+\t(IRState::pvoidOkay): Replace with void_okay_p.\n+\t(IRState::maybeCompound): Replace with maybe_compound_expr.\n+\t(IRState::maybeVoidCompound): Replace with maybe_vcompound_expr.\n+\t(IRState::isErrorMark): Replace with error_mark_p.\n+\t(IRState::getTargetSizeConst): Replace with tree_to_hwi.\n+\t(IRState::modify): Replace with modify_expr.\n+\t(IRState::vmodify): Replace with vmodify_expr.\n+\t(IRState::vinit): Replace with build_vinit.\n+\t(IRState::nop): Replace with build_nop.\n+\t(IRState::vconvert): Replace with build_vconvert.\n+\t(IRState::boolOp): Replace with build_boolop.\n+\t(IRState::compound): Replace with compound_expr.\n+\t(IRState::voidCompound): Replace with vcompound_expr.\n+\t(IRState::component): Replace with component_ref.\n+\t(IRState::errorMark): Replace with error_mark.\n+\t(IRState::typesSame): Replace with d_types_same.\n+\t(IRState::typesCompatible): Replace with d_types_compatible.\n+\t(IRState::getDType): Replace with build_dtype.\n+\t(IRState::getObjectType): Replace with build_object_type.\n+\t(IRState::isDeclarationReferenceType): Replace with decl_reference_p.\n+\t(IRState::trueDeclarationType): Replace with declaration_type.\n+\t(IRState::isArgumentReferenceType): Replace with arg_reference_p.\n+\t(IRState::trueArgumentType): Replace with type_passed_as.\n+\t(IRState::arrayType): Replace with d_array_type.\n+\t(IRState::addTypeAttribute): Replace with insert_type_attributes.\n+\t(IRState::addDeclAttribute): Replace with insert_decl_attributes.\n+\t(IRState::attributes): Replace with build_attributes.\n+\t(IRState::addTypeModifiers): Replace with insert_type_modifiers.\n+\t(IRState::maybeMakeTemp): Replace with maybe_make_temp.\n+\t(IRState::isFreeOfSideEffects): Replace with d_has_side_effects.\n+\t(IRState::pointerOffsetOp): Replace with build_offset_op.\n+\t(IRState::pointerOffset): Replace with build_offset.\n+\t(IRState::buildCall): Replace with d_build_call.\n+\t(IRState::exceptionObject): Replace with build_exception_object.\n+\n+2013-03-17  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-asmstmt.cc (d_build_asm_stmt): Remove.\n+\t(ExtAsmStatement::ExtAsmStatement): Update to match renamed members.\n+\t(ExtAsmStatement::syntaxCopy): Likewise.\n+\t(ExtAsmStatement::semantic): Likewise.\n+\t(ExtAsmStatement::toCBuffer): Likewise.\n+\t(ExtAsmStatement::comeFrom): New.\n+\t(ExtAsmStatement::blockExit): Don't error if must not throw.\n+\t(naturalString): Remove.\n+\t(ExtAsmStatement::toIR): Inline IRState::doAsm implementation.\n+\t* d-codegen.cc (IRState::doAsm): Remove.\n+\t* d-decls.cc (FuncDeclaration::toSymbol): Don't generate 'naked'\n+\tattribute.\n+\t(binfo_for): Move into d-decls.cc.\n+\t(intfc_binfo_for): Likewise.\n+\t(ClassDeclaration::toDebug): Likewise.\n+\t(EnumDeclaration::toDebug): Likewise.\n+\t(TypedefDeclaration::toDebug): Likewise.\n+\t(StructDeclaration::toDebug): Likewise.\n+\t* d-objfile.cc (FuncDeclaration::toObjFile): Move into d-objfile.cc.\n+\t(FuncDeclaration::buildClosure): Likewise.\n+\t(Module::genobjfile): Likewise.\n+\t* d-glue.cc: Remove file.\n+\n+2013-03-16  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-ir.cc (SynchronizedStatement::toIR): Remove implementation as is\n+\tnow handled by the frontend.\n+\n+2013-03-15  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (IRState::maybeExpandSpecialCall): Handle ref argptr\n+\targuments.\n+\n+2013-03-13  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-builtins.c (handle_alias_attribute): New function to handle\n+\tinternal 'alias' attribute.\n+\t(handle_weakref_attribute): New function to handle internal 'weakref'\n+\tattribute.\n+\t* d-objfile.cc (ObjectFile::outputThunk): Define thunks to external\n+\tsymbols as weakref, alias\n+\n+2013-03-12  Johannes Pfau  <johannespfau@gmail.com>\n+\n+\t* patch-versym-os-4.8.x (mingw32.h): Fix typo\n+\t* patch-versym-cpu-4.8.x (mips.h): Fix typo\n+\tUpdate version symbols to latest dlang specification.\n+\n+2013-03-10  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-decls.cc (FuncDeclaration::toSymbol): Delay setting TREE_TYPE as\n+\tfunction type could be hidden in a nested function not yet built.\n+\t* d-codegen.cc (IRState::findThis): Don't get 'this' from outer\n+\tfunction if it's a closure type.  This has already been handled by\n+\tIRState::getFrameForSymbol.\n+\t(IRState::buildChain): Give frame decl debug name '__frame'.\n+\tAlways set '__chain' link field.\n+\t(IRState::getFrameInfo): Don't build a frame for all nested functions.\n+\tSearch through nested aggregates for static chain in outer functions.\n+\t* d-codegen.h (IRState::useParentChain): Remove.\n+\t* d-glue.cc (FuncDeclaration::toObjFile): Don't call useParentChain.\n+\tDon't create a local var for the chain link for a function.\n+\t(FuncDeclaration::buildClosure): Always set '__chain' link field.\n+\n+2013-03-08  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (d_gcc_force_templates): Only check for emitting\n+\ttemplates as private.\n+\t* d-lang.cc (d_handle_option): Remove -femit-templates= option.\n+\t* d-objfile.cc (ObjectFile::makeDeclOneOnly): Fix code logic so\n+\tfallback method could be reached.\n+\t* d-objfile.h (TEall, TEauto): Remove.\n+\n+2013-03-07  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-ir.cc (ReturnStatement::toIR): Don't call postblit on return.\n+\t* d-codegen.cc (IRState::trueDeclarationType): Don't set\n+\tD_TYPE_ADDRESSABLE.\n+\t(IRState::makeTemp): Remove.\n+\t(IRState::maybeMakeTemp): Copy makeTemp into function.\n+\t* d-glue.cc (d_genericize): Remove D_TYPE_ADDRESSABLE handling.\n+\t* d-lang.h (D_TYPE_ADDRESSABLE): Remove macro.\n+\n+2013-03-04  Johannes Pfau  <johannespfau@gmail.com>\n+\n+\t* d-ctype.cc (Type::toCtype): Always call gen.addTypeModifiers to\n+\tmake sure TYPE_MAIN_VARIANT is set. Reuse tree from unqualified\n+\tvariant for that. Also cache the resulting qualified tree.\n+\t(TypeTypedef::toCtype): Likewise.\n+\t(TypeEnum::toCtype): Likewise.\n+\t(TypeStruct::toCtype): Likewise.\n+\t(TypeFunction::toCtype): Likewise.\n+\t(TypeVector::toCtype): Likewise.\n+\t(TypeSArray::toCtype): Likewise.\n+\t(TypeDArray::toCtype): Likewise.\n+\t(TypeAArray::toCtype): Likewise.\n+\t(TypeDelegate::toCtype): Likewise.\n+\t(TypeClass::toCtype): Likewise.\n+\t* d-objfile.cc (ObjectFile::giveDeclUniqueName): Make sure DECL_NAME is set\n+\n+2013-03-01  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-decls.cc (VarDeclaration::toSymbol): Remove use of c_ident.\n+\t(FuncDeclaration::toSymbol): Likewise.\n+\t* d-builtins.c (handle_noreturn_attribute): Assert that this is only\n+\tused for internal purposes.\n+\t(handle_const_attribute): Likewise.\n+\t(handle_malloc_attribute): Likewise.\n+\t(handle_pure_attribute): Likewise.\n+\t(handle_nonnull_attribute): Likewise.\n+\t(handle_nothrow_attribute): Likewise.\n+\t(handle_sentinel_attribute): Likewise.\n+\t(handle_transaction_pure_attribute): Likewise.\n+\t(handle_returns_twice_attribute): Likewise.\n+\t* d-glue.cc (FuncDeclaration::toObjFile): Result variables have no\n+\tdefault initialiser.\n+\t* d-codegen.cc (IRState::emitLocalVar): Add in assert that the local\n+\tvariable has no initialiser if called with no_init = true.\n+\t(IRState::getLibCallDecl): Mark exceptional library functions as\n+\tnoreturn.\n+\t(IRState::attributes): Gracefully handle @attribute, and\n+\t@attribute(null).\n+\n+2013-02-28  Jernej Krempus  <jkrempus@gmail.com>\n+\n+\t* d-builtins.c (d_attribute_table): Renamed it to\n+\td_builtins_attribute_table.\n+\t* d-lang.cc (d_attribute_table): Added an empty table\n+\t* d-lang.cc (LANG_HOOKS_COMMON_ATTRIBUTE_TABLE): Defined it as\n+\td_builtins_attribute_table.\n+\t* d-lang.h (d_builtins_attribute_table): Added a declaration.\n+\t* d-codegen.cc (IRState::attributes): Changed it so it goes through\n+\tin_attrs and looks for any @gcc.attribute.attribute(\"attr_name\").\n+\t* d-objfile.cc (ObjectFile::setupSymbolStorage): Pass userAttributes\n+\tinstead of attributes in all calls to IRState::attributes.\n+\t* d-ctype.cc (TypeTypedef::toCtype): Likewise.\n+\t(TypeEnum::toCtype): Likewise.\n+\t(TypeStruct::toCtype): Likewise.\n+\t(TypeClass::toCtype): Likewise.\n+\t* libphobos/libdruntime/gcc/attribute.d: New file.\n+\n+2013-02-28  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-lang.cc (d_handle_option): Remove OPT_fdeprecated and\n+\tOPT_Wsign_compare, add handling for OPT_Wdeprecated.\n+\t(d_post_options): Handle Wdeprecated and Werror switch combination.\n+\n+2013-02-27  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (ArrayScope::ArrayScope): Don't setup length var if its\n+\tvalue is known at compile time.\n+\t(ArrayScope::setArrayExp): Likewise.\n+\t* d-decls.cc (uniqueName): Remove function.\n+\t(VarDeclaration::toSymbol): Set decl assembler name directly.\n+\t(FuncDeclaration::toSymbol): Likewise.\n+\n+2013-02-15  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* Make-lang.in (GDC_EXTENDED_ASM_SYNTAX): Remove macro.\n+\n+2013-02-14  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-lang.h (D_DECL_IS_CONTRACT): Remove macro.\n+\t* d-decls.cc (FuncDeclaration::toSymbol): Likewise.\n+\n+2013-02-13  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-lang.cc (d_gcc_is_target_win32): Remove.\n+\t(d_add_builtin_version): New function to handle define_builtin\n+\tcallback from backend.\n+\t* d-codegen.cc (IRState::maybeExpandSpecialCall): Remove intrinsic bt.\n+\n+\t* d-builtins.c: Merge with d-builtins2.cc.\n+\t* d-builtins2.cc: Remove.\n+\n+2013-02-07  Johannes Pfau  <johannespfau@gmail.com>\n+\n+\t* d-lang.cc (d_init): Use gcc's config system for predefined OS versions.\n+\t* setup-gcc.sh: Likewise.\n+\t* target-ver-syms.sh: Likewise.\n+\n+2013-02-05  Iain Buclaw  <ibuclaw@ubuntu.com>\n+\n+\t* d-builtins2.cc (gcc_type_to_d_type): Remove STRUCTTHISREF condition.\n+\t* d-decls.cc (FuncDeclaration::toSymbol): Likewise.\n+\t* d-elem.cc (ThisExp::toElem): Likewise.\n+\t* d-ctype.cc (TypeSArray::toCtype): Remove SARRAYVALUE condition.\n+\t* d-codegen.cc (IRState::isDeclarationReferenceType): Likewise.\n+\t(IRState::isArgumentReferenceType): Likewise.\n+\n+2013-02-01  Johannes Pfau  <johannespfau@gmail.com>\n+\n+\t* d-lang.cc (d_init): Use gcc's config system for predefined CPU versions.\n+\t(d_init): Fix definition of D_LP64 version.\n+\t* setup-gcc.sh: Likewise.\n+\t* target-ver-syms.sh: Likewise.\n+\n+\f\n+Copyright (C) 2013 Free Software Foundation, Inc.\n+\n+Copying and distribution of this file, with or without modification,\n+are permitted in any medium without royalty provided the copyright\n+notice and this notice are preserved."}, {"sha": "cf8c8ac2c064e24acd97d469f16231018bbcf0aa", "filename": "gcc/d/ChangeLog-2014", "status": "added", "additions": 660, "deletions": 0, "changes": 660, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2FChangeLog-2014", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2FChangeLog-2014", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2FChangeLog-2014?ref=b4c522fabd0df7be08882d2207df8b2765026110", "patch": "@@ -0,0 +1,660 @@\n+2014-12-14  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* Make-lang.in (check_gdc_parallelize): Update for testsuite changes.\n+\t* d-convert.cc (d_convert_basic): Avoid stack overflow when converting\n+\tfrom pointer to integer.\n+\t* d-objfile.cc (FuncDeclaration::toObjFile): Emit correct frame\n+\tinformation for closures rather than generic void pointers.\n+\n+2014-11-10  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-elem.cc (CatExp::toElem): Split dynamic arrays when passing as\n+\tvarargs to arraycatT and arraycatnT.\n+\n+2014-11-09  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (build_vthis): Handle getting static chain for nested\n+\ttemplated structs.\n+\n+2014-09-07  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-elem.cc (ArrayLiteralExp::toElem): Remove special handling for\n+\timmutable arrays.\n+\n+2014-08-03  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-longdouble.cc (longdouble::formatHex): Convert buffer to uppercase\n+\tfor use in mangling templates.\n+\n+2014-07-29  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-elem.cc (NewExp::toElem): Check for opaque structs before\n+\tcontinuing to generate the new expression.\n+\n+\t* d-lang.h.cc (d_vtbl_ptr_type_node): Renamed to vtbl_ptr_type_node.\n+\t(d_boolean_type_node): Renamed to bool_type_node.\n+\t(d_char_type_node): Renamed to char8_type_node.\n+\t(d_wchar_type_node): Renamed to char16_type_node.\n+\t(d_dchar_type_node): Renamed to char32_type_node.\n+\t(d_ifloat_type_node): Renamed to ifloat_type_node.\n+\t(d_idouble_type_node): Renamed to idouble_type_node.\n+\t(d_ireal_type_node): Renamed to ireal_type_node.\n+\t(byte_type_node, ubyte_type_node): New macros for fixed integral\n+\ttypes in D.\n+\t(short_type_node, ushort_type_node): Likewise.\n+\t(int_type_node, uint_type_node): Likewise.\n+\t(long_type_node, ulong_type_node): Likewise.\n+\t(cent_type_node, ucent_type_node): Likewise.\n+\t* d-builtins.c (d_init_builtins): Initialise all D specific type nodes.\n+\t* d-codegen.cc (d_bounds_condition): Use D-specific type macros instead\n+\tof backend C types.\n+\t(layout_aggregate_type): Likewise.\n+\t(build_integer_cst): Likewise.\n+\t(build_boolop): Likewise.\n+\t* d-convert.cc (d_build_truthvalue_op): Likewise.\n+\t(d_truthvalue_conversion): Likewise.\n+\t* d-ctype.cc (Type::toCtype): Likewise.\n+\t* d-decls.cc (FuncDeclaration::toSymbol): Likewise.\n+\t* d-elem.cc (CmpExp::toElem): Likewise.\n+\t(OrOrExp::toElem): Likewise.\n+\t(NotExp::toElem): Likewise.\n+\t* d-lang.cc (d_type_for_mode): Likewise.\n+\t(d_type_for_size): Likewise.\n+\t(d_signed_or_unsigned_type): Likewise.\n+\n+2014-07-23  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-ctype.cc (TypeFunction::toCtype): Only check for ref return for\n+\tfunctions returning non-void.\n+\n+2014-07-21  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-objfile.cc (output_declaration_p): Don't emit any declarations from\n+\tthe gcc.attribute module.\n+\t(StructDeclaration::toObjFile): Call output_declaration_p.\n+\t* d-glue.cc (verror): Only call vasprintf on the initial format string.\n+\n+2014-07-17  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-lang.cc (d_init_options_struct): Set flag_wrapv as on by default.\n+\n+2014-07-14  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-elem.cc (NewExp::toElem): Don't initialise a new'd struct at the\n+\tcaller.  The callee ensures this is done.\n+\n+2014-07-13  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-objfile.cc (d_finish_symbol): Always set TREE_STATIC for symbols\n+\tbeing sent to the backend here.\n+\n+2014-07-12  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-objfile.cc (d_finish_symbol): Don't set DECL_INITIAL if the\n+\tinitialiser is all zeros.\n+\n+2014-07-10  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-builtins.cc (lookup_ctype_name): Remove function.\n+\t(string_type_node): Move to static declaration from d_global_trees.\n+\t(const_string_type_node): Likewise.\n+\t(wint_type_node): Likewise.\n+\t(intmax_type_node): Likewise.\n+\t(uintmax_type_node): Likewise.\n+\t(signed_size_type_node): Likewise.\n+\t(d_init_builtins): Update.\n+\t* d-lang.cc (d_type_for_mode): Return only fixed size types.\n+\t(d_type_for_size): Likewise.\n+\t(d_signed_or_unsigned_type): Likewise.\n+\t(d_unsigned_type): Remove duplicated code from\n+\td_signed_or_unsigned_type.\n+\t(d_signed_type): Likewise.\n+\n+2014-07-03  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-objfile.cc (finish_thunk): Use set_decl_section_name, copy the\n+\timplicit section flag.\n+\t(setup_symbol_storage): Use decl_default_tls_model.\n+\n+2014-06-26  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.h (d_types_compatible): Remove function.\n+\t(d_types_same): Use more conservative approach to type equality.\n+\t* d-codegen.cc (get_libcall): Allow backend to be able to optimise\n+\tclosure memory allocations.\n+\t(convert_for_assignment): Use d_types_same.\n+\t* d-elem.cc (CatExp::toElem): Likewise.\n+\t(BinExp::toElemBin): Likewise.\n+\t(CatAssignExp::toElem): Likewise.\n+\t(StructLiteralExp::toElem): Likewise.\n+\n+2014-06-14  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-elem.cc (CondExp::toElem): Handle void type condition expressions.\n+\t(AssignExp::toElem): Use ismemset to test for initialising arrays with\n+\ta single value.\n+\t(StructLiteralExp::toElem): Build static initialiser if a symbol was\n+\tcreated by the front-end.\n+\t* d-codegen.h (d_types_compatible): First check equality of types, then\n+\timplicit compatibility.\n+\t* d-convert.cc (d_default_conversion): Remove function, fold\n+\timplementation into...\n+\t(d_truthvalue_conversion): ... here.\n+\n+2014-06-12  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-convert.cc (d_scalar_conversion): Remove function.\n+\t(d_build_truthvalue_op): Update.\n+\t(d_truthvalue_conversion): Update.\n+\n+\t* d-codegen.cc (get_frame_for_symbol): Remove glue-specific error\n+\tmessages and refactor.\n+\t(build_vthis): Likewise.\n+\t(get_framedecl): Likewise.\n+\t* d-elem.cc (AssignExp::toElem): Update call to build_vthis.\n+\t(NewExp::toElem): Likewise.\n+\t(StructLiteralExp::toElem): Likewise.\n+\t* d-objfile.cc (Dsymbol::toObjFile): Fix build warning.\n+\n+\t* d-codegen.cc (d_decl_context): Always return parent context for\n+\tfunctions nested in functions.\n+\t(is_degenerate_closure): Remove function.\n+\t(needs_static_chain): Remove function.\n+\t* d-decls.cc (FuncDeclaration::toSymbol): Remove workaround for cgraph\n+\tnesting structure, saving the original context decl.\n+\t* d-lang.h (D_DECL_STATIC_CHAIN): Remove macro.\n+\t* d-objfile.cc (Symbol::Symbol): Remove ScontextDecl field.\n+\t(FuncDeclaration::toObjFile): Remove workaround for cgraph nesting\n+\tstructure, restoring the original context decl.  Delay building the\n+\tcgraph node until...\n+\t(d_finish_function): ... here, where the function is unnested.\n+\n+2014-06-11  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-objfile.cc (d_finish_function): Update the callgraph to reflect\n+\tunnesting of the function, as unravelling has already been handled by\n+\tthe frontend.  Do not delay calling cgraph_finalize_function.\n+\n+2014-06-09  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-objfile.cc (d_comdat_group): Return a decl.\n+\t* d-decl.cc (FuncDeclaration::toThunkSymbol): Don't set comdat group.\n+\t* d-elem.cc (EqualExp::toElem): Always store temporaries when comparing\n+\ttwo dynamic arrays.\n+\n+2014-06-08  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-decls.cc (TypeInfoDeclaration::toSymbol): Add assert that Error\n+\ttypes never reach the backend.\n+\t* d-typinf.cc (Type::getTypeInfo): Likewise.\n+\n+2014-06-08  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* dfrontend: Update to D front-end version 2.065.\n+\n+\t* d-codegen.cc (d_build_call): Evaluate side effects of the object\n+\tparameter for method or delegate calls before passing.\n+\t(libcall_ids): Rename _d_array_bounds to _d_arraybounds.\n+\t(get_libcall): Update parameter types for _d_arraycopy.\n+\t(finish_aggregate_type): Update for frontend UDA changes.\n+\t* d-ctype.cc (TypeTypedef::toCtype): Update for frontend UDA changes.\n+\t(TypeEnum::toCtype): Likewise.\n+\t(TypeStruct::toCtype): Likewise.\n+\t(TypeClass::toCtype): Likewise.\n+\t* d-elem.cc (BoolExp::toElem): New function.\n+\t* d-lang.cc (rootmodule): New declaration for frontend entrypoint\n+\tchanges.\n+\t(genCmain): Update for frontend entrypoint changes.\n+\t(d_handle_option): Don't duplicate memory for argument values.\n+\t(d_parse_file): Don't duplicate memory for source filenames.\n+\t* d-objfile.cc (VarDeclaration::toObjFile): Don't emit instantiated\n+\tmanifest constants to debug.\n+\t(TemplateInstance::toObjFile): Update for frontend changes.\n+\t(output_template_p): Remove function.\n+\t(output_declaration_p): Update for frontend changes.\n+\t(setup_symbol_storage): Update for frontend UDA changes.\n+\t* d-target.cc (Target::reverseCppOverloads): New declaration.\n+\t* d-typinf.cc (Type::getInternalTypeInfo): Update for frontend changes.\n+\t(Type::getTypeInfo, Type::getTypeInfoDeclaration): Likewise.\n+\t(TypeTypedef::getTypeInfoDeclaration): Likewise.\n+\t(TypePointer::getTypeInfoDeclaration): Likewise.\n+\t(TypeDArray::getTypeInfoDeclaration): Likewise.\n+\t(TypeSArray::getTypeInfoDeclaration): Likewise.\n+\t(TypeAArray::getTypeInfoDeclaration): Likewise.\n+\t(TypeStruct::getTypeInfoDeclaration): Likewise.\n+\t(TypeClass::getTypeInfoDeclaration): Likewise.\n+\t(TypeVector::getTypeInfoDeclaration): Likewise.\n+\t(TypeEnum::getTypeInfoDeclaration): Likewise.\n+\t(TypeFunction::getTypeInfoDeclaration): Likewise.\n+\t(TypeDelegate::getTypeInfoDeclaration): Likewise.\n+\t(TypeTuple::getTypeInfoDeclaration): Likewise.\n+\t(createTypeInfoArray): Likewise.\n+\n+\t* d-intrinsics.def: New file for declaring D intrinsics.\n+\n+\t* d-builtins.cc (std_intrinsic_module, std_math_module)\n+\t(core_math_module, va_arg_template, va_arg2_template)\n+\t(va_start_template): Remove declarations.\n+\t(is_intrinsic_module_p, is_math_module_p, is_builtin_va_arg_p)\n+\t(is_builtin_va_start_p, d_gcc_magic_stdarg_check)\n+\t(d_gcc_magic_stdarg_module): Remove functions.\n+\t(d_gcc_magic_builtins_module): Rename to d_build_builtins_module.\n+\t(d_gcc_magic_libbuiltins_module): Rename to maybe_set_builtin.\n+\t(d_gcc_magic_libbuiltins_check): Rename to maybe_set_builtin_1.\n+\t(gcc_type_to_d_type): Rename to build_dtype.\n+\t(gcc_cst_to_d_expr): Rename to build_expression.\n+\t(d_gcc_eval_builtin): Remove function.\n+\t(eval_builtin): Moved to...\n+\t* d-glue.cc (eval_builtin): New function, updated for glue changes.\n+\t(FuncDeclaration::isBuiltin): New function to determine whether a\n+\tgiven function symbol is a compiler intrinsic.\n+\t* d-codegen.cc (maybe_expand_builtin): Rename to expand_intrinsic.\n+\t(Intrinsic): Remove enum declaration, replaced with...\n+\t(intrinsic_code): New enum for compiler intrinsics.\n+\t(intrinsic_decls): New declaration for store intrinsic information.\n+\t(expand_intrinsic_bt): Update signature.\n+\t(maybe_set_intrinsic): New function to replace...\n+\t(maybe_set_builtin_frontend): Remove function.\n+\t* d-decls.cc (FuncDeclaration::toSymbol): Update for glue changes.\n+\n+\t* d-builtins.c: Rename to d-builtins.cc\n+\t* d-gt.c: Rename to d-gt.cc\n+\t* d-spec.c: Rename to d-spec.cc\n+\n+\t* d-toir.cc: Renamed to toir.cc\n+\t* toir.cc: New file, re-implement toIR methods as a visitor.\n+\n+\t* d-codegen.cc (insert_type_modifiers): Handle MODwildconst modifiers.\n+\t(build_ir): New function.\n+\t* d-objfile.cc (FuncDeclaration::toObjFile): Use build_ir to walk\n+\tfront-end IR trees.\n+\t* d-decls.cc (VarDeclaration::toSymbol): Mark compiler temporaries as\n+\tDECL_ARTIFICIAL.\n+\t(ClassDeclaration::toVtblSymbol): Update for front-end changes.\n+\t* d-builtins.c (gcc_type_to_d_type): Likewise.\n+\t* d-elem.cc (CatAssignExp::toElem): Likewise.\n+\t(ArrayLiteralExp::toElem): Likewise.\n+\t(BoolExp::toElem): Remove function.\n+\t(ComExp::toElem): Assert that unhandled array operations no longer\n+\tleak from the front-end.\n+\t(NegExp::toElem): Likewise.\n+\t* d-glue.cc (Global::init): Initialise new member run_noext.\n+\t* d-incpath (add_import_path): Update for front-end changes.\n+\t* d-lang.cc (d_add_builtin_version): Likewise.\n+\t* d-todt.cc (StructDeclaration::toDt): Likewise.\n+\t* d-toir.cc (LabelStatement::toIR): Don't delete forward references.\n+\t(GotoStatement::toIR): Assert that undefined labels no longer leak\n+\tfrom the front-end.\n+\n+2014-05-31  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-todt.cc (dt_container): Properly handle zero length static arrays.\n+\t* d-codegen.h (build_dtype): Rename to lang_dtype.\n+\t(build_ddecl): Rename to lang_ddecl.\n+\n+2014-05-21  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-builtins.c (d_init_builtins): Use void_node instead of\n+\td_void_zero_node.\n+\t* d-lang.h (d_void_zero_node): Remove.\n+\t* d-elem.cc (AndAndExp::toElem): Adjust.\n+\t(OrOrExp::toElem): Likewise.\n+\t(AssertExp::toElem): Likewise.\n+\t(TupleExp::toElem): Likewise.\n+\n+\t* d-builtins.c (d_init_builtins): Use null_pointer_node instead of\n+\td_null_pointer.\n+\t* d-lang.h (d_null_pointer): Remove.\n+\t* d-codegen.cc (convert_expr): Adjust.\n+\t(get_frame_for_symbol): Likewise.\n+\t(build_vthis): Likewise.\n+\t(get_framedecl): Likewise.\n+\t* d-elem.cc (DeleteExp::toElem): Likewise.\n+\t(CallExp::toElem): Likewise.\n+\t(AssertExp::toElem): Likewise.\n+\t(NewExp::toElem): Likewise.\n+\t(ArrayLiteralExp::toElem): Likewise.\n+\t(NullExp::toElem): Likewise.\n+\t* d-objfile.cc (ClassDeclaration::toObjFile): Likewise.\n+\t(InterfaceDeclaration::toObjFile): Likewise.\n+\t(FuncDeclaration::toObjFile): Likewise.\n+\t(build_moduleinfo): Likewise.\n+\t* d-todt.cc (TypeInfoTypedefDeclaration::toDt): Likewise.\n+\t(TypeInfoEnumDeclaration::toDt): Likewise.\n+\t(TypeInfoStructDeclaration::toDt): Likewise.\n+\n+2014-05-18  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-longdouble.cc (longdouble::from_shwi): Rename to from_int.\n+\t(longdouble::from_uhwi): Rename to from_uint.\n+\t(longdouble::to_shwi): Rename to to_int.\n+\t(longdouble::to_uhwi): Rename to to_uint.\n+\t(longdouble::set): Adjust.\n+\t(longdouble::operator): Likewise.\n+\n+\t* d-lang.cc (alloc_binding_level): Adjust.\n+\t(build_d_type_lang_specific): Likewise.\n+\t(build_d_decl_lang_specific): Likewise.\n+\t* d-lang.h (lang_type): Don't use variable_size gty attribute.\n+\t* d-codegen.cc (cst_to_hwi): Remove function.\n+\t* d-codegen.cc (tree_to_hwi): Remove function.\n+\t* d-builtins.c (gcc_type_to_d_type): Adjust.\n+\t(gcc_cst_to_d_expr): Likewise.\n+\t* d-convert.cc (d_truthvalue_conversion): Use integer_zerop.\n+\t(get_nonnull_operand): Use tree_fits_uhwi_p.\n+\t* d-longdouble.cc (longdouble::from_int): Adjust.\n+\t(longdouble::from_uint): Likewise.\n+\t(longdouble::to_int): Likewise.\n+\n+2014-04-30  Johannes Pfau  <johannespfau@gmail.com>\n+\n+\t* d-lang.cc (d_init): Define GNU_SEH_Exceptions and\n+\tGNU_DWARF2_Exceptions versions.\n+\n+2014-04-21  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-lang.cc (d_init_options): Default deprecation warnings to off.\n+\t* d-ctype.cc (TypeDelegate::toCtype): Propogate TREE_ADDRESSABLE from\n+\tthe base function to the delegatised copy.\n+\n+2014-04-15  Johannes Pfau  <johannespfau@gmail.com>\n+\n+\t* d-lang.cc (d_handle_noclone_attribute): New function to handle\n+\tnoclone attribute. noclone is required by the naked attribute.\n+\t* d-elem.cc (SymbolExp::toElem): Convert symbols to the expression\n+\ttype.\n+\n+2014-04-13  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (get_frameinfo): Don't copy the node for frame record.\n+\t* d-irstate.cc (IRState::endCatches): Rebuild the STATEMENT_LIST of\n+\tcatches in a TRY_CATCH_EXPR if it gets optimised away by\n+\tIRState::popStatement.\n+\t* d-codegen.cc (d_attribute_p): Provide access to target attributes.\n+\n+2014-03-31  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (error_mark_p): Removed function, replace uses with\n+\terror_operand_p.\n+\t(error_mark): Removed function, replace uses with error_mark_node.\n+\t* d-ctype.cc (Type::toCtype): Return d_unknown_type_node for frontend\n+\terror types.\n+\t* d-objfile.cc (VarDeclaration::toObjFile): Don't build CONST_DECLs for\n+\tnon-scalar manifests.\n+\n+2014-03-23  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-decls.cc (Dsymbol::toImport): Prevent GC from collecting\n+\tIMPORTED_DECL nodes whilst front-end compilation in progress.\n+\n+2014-03-19  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (AggLayout::visit): Rename to layout_aggregate_type.\n+\t(AggLayout::doFields, AggLayout::doInterfaces): Remove function and\n+\tmove implementation into layout_aggregate_type.\n+\t(AggLayout::addField): Rename to insert_aggregate_field.\n+\t(AggLayout::finish): Rename to finish_aggregate_type.\n+\t* d-codegen.h (AggLayout): Update definition.\n+\t* d-ctype.cc (TypeStruct::toCtype): Update for glue changes.\n+\t(TypeFunction::toCtype): Fix ICE on generic function types.\n+\t(TypeClass::toCtype): Move generation of vptr and monitor fields into\n+\tlayout_aggregate_type.  Moved generation of TYPE_METHODS from ...\n+\t* d-objfile.cc (FuncDeclaration::toObjFile): ... here into\n+\tTypeClass::toCtype.  Don't build up TYPE_METHODS on a per-function\n+\tbasis, generate the entire vtable.\n+\n+2014-03-18  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-decls.cc (Dsymbol::toSymbolX): Set the symbol prettyIdent.\n+\t(Dsymbol::toImport): Emit packages as their fully qualified names.\n+\t(ClassDeclaration::toSymbol): Distinguish between the classinfo\n+\tassembler and decl name.\n+\t(InterfaceDeclaration::toSymbol): Likewise for interface symbol.\n+\t(Module::toSymbol): Likewise for moduleinfo symbol.\n+\t(ClassDeclaration::toVtblSymbol): Likewise for class vtable symbol.\n+\t(AggregateDeclaration::toInitializer)\n+\t(TypedefDeclaration::toInitializer, EnumDeclaration::toInitializer):\n+\tLikewise for default initialisers.\n+\t* d-objfile.cc (Module::genobjfile): Don't set-up moduleinfo symbol\n+\tstorage twice.\n+\n+2014-03-17  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (d_decl_context): Fix null pointer dereference.\n+\t* d-objfile.cc (FuncDeclaration::toObjFile): Don't override the setting\n+\tof DECL_CONTEXT on the declaration here.\n+\t(d_finish_symbol): Likewise.\n+\t* d-objfile.cc (VarDeclaration::toObjFile): Move the generation of\n+\tmanifest constants to ...\n+\t* d-decls.cc (VarDeclaration::toSymbol): ... here, and emit them as\n+\tCONST_DECLs.  Set the DECL_CONTEXT for all variable symbols.\n+\n+\t* d-builtins.cc (d_gcc_magic_builtins_module): Don't store compiler\n+\tgenerated builtins in Symbol::isym, use Symbol::csym instead.\n+\t(d_gcc_magic_libbuiltins_check): Likewise.\n+\t* d-codegen.cc (d_decl_context): Return the imported symbol tree of\n+\tmodules where the NAMESPACE_DECL is now stored.\n+\t(d_build_module): Remove function.  Move implementation to ...\n+\t* d-decls.cc (Dsymbol::toImport): ... here.  Build an IMPORTED_DECL for\n+\tall imported declarations.\n+\t(FuncDeclaration::toSymbol): Remove special handling of Symbol::isym.\n+\t(Module::toSymbol): Remove call to d_build_module.\n+\t* d-objfile.cc (Dsymbol::toObjFile): Handle emission of IMPORTED_DECL\n+\tsymbols to debug.\n+\n+2014-03-16  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (build_attributes): Ensure D-specific attributes have\n+\ttheir value interpreted through CTFE.\n+\n+2014-02-21  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (d_build_module): Update signature to accept a Loc\n+\tlocation to the module declaration.\n+\t* d-decls.cc (Module::toSymbol): Update call to d_build_module.\n+\tSet TREE_PUBLIC/DECL_EXTERNAL to distingush which modules are being\n+\tcompiled.\n+\t* d-objfile.cc (Dsymbol::toObjFile): Handle Import symbols, and emit\n+\tdebug information for imported modules.\n+\t(ImportStatement::toIR): Likewise.\n+\t(set_input_location): New function to implement the equivalent of\n+\tset_decl_location, but instead sets input_location.\n+\n+2014-02-19  Johannes Pfau  <johannespfau@gmail.com>\n+\n+\t* d-objfile.cc (build_call_function): Call set_input_location\n+\tto set debug info correctly\n+\n+2014-02-18  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-objfile.cc (VarDeclaration::toObjFile): Remove toplevel check.\n+\tDECL_CONTEXT is never set on manifest constants.\n+\t(d_finish_compilation): Remove fancy check on force outputting\n+\tsymbols to object file.\n+\t(build_type_decl): Don't emit the qualified identifier in debug\n+\tinformation.  The fully qualified name is now determined through the\n+\tNAMESPACE_DECL context chain.\n+\t* d-ctype.cc (TypeEnum::toCtype): Likewise for enum members.\n+\t(VarDeclaration::toSymbol): Likewise for static variables.\n+\t(FuncDeclaration::toSymbol): Likewise for functions.\n+\n+\t* d-decls.cc (FuncDeclaration::toSymbol): Don't emit the 'D main'\n+\tsymbol to debug as plain 'main'.\n+\t* d-objfile.cc (VarDeclaration::toObjFile): Don't emit the qualified\n+\tidentifier of manifest constants in debug information.\n+\n+2014-02-17  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (d_build_module): New function.\n+\t* d-decls.cc (Module::toSymbol): Use d_build_module to build up the\n+\tqualified module namespace.\n+\n+\t* d-codegen.cc (expand_intrinsic_op, expand_intrinsic_op2): New\n+\tfunctions to build a call to a builtin code.\n+\t(expand_intrinsic_bsr, expand_intrinsic_bt): New functions to expand a\n+\tBUILTIN_FRONTEND call to core.bitop intrinsics.\n+\t(expand_intrinsic_vaarg, expand_intrinsic_vastart): New functions to\n+\texpand a BUILTIN_FRONTEND call to core.vararg intrinsics.\n+\t(maybe_expand_builtin): Update.\n+\n+2014-02-16  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-decls.cc (Module::toSymbol): Build a NAMESPACE_DECL to populate the\n+\tDECL_CONTEXT of toplevel functions.\n+\t* d-codegen.cc (d_decl_context): Return the enclosing module\n+\tNAMESPACE_DECL as the decl context only when the symbol is extern(D)\n+\tand not D main.\n+\n+2014-02-15  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-decls.cc (VarDeclaration::toSymbol): Don't call\n+\tsetup_symbol_storage until after SET_DECL_ASSEMBLER_NAME has been set.\n+\n+\t* d-decls.cc (VarDeclaration::toSymbol): Give prettyIdent precedence\n+\tfor the DECL_NAME over the simple identifier.\n+\t(FuncDeclaration::toSymbol): Likewise.\n+\t* d-objfile.cc (d_finish_symbol): Remove setting DECL_NAME as\n+\tprettyIdent, this has already been done in Declaration::toSymbol.\n+\t(d_finish_function): Likewise.\n+\n+\t* d-decls.cc (VarDeclaration::toSymbol): Call set_user_assembler_name\n+\tif pragma(mangle) was seen.\n+\t(FuncDeclaration::toSymbol): Likewise.\n+\n+2014-02-12  Johannes Pfau  <johannespfau@gmail.com>\n+\n+\t* d-decls.cc (FuncDeclaration::toSymbol): Do not set TREE_NOTHROW on\n+\tnothrow functions.\n+\t* d-decls.cc (TypeInfoDeclaration::toSymbol): Call relayout_decl after\n+\tchanging the type.\n+\n+2014-02-03  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\n+\t* d-codegen.cc (d_build_call): Remove special handling of\n+\tflag_split_darrays switch.\n+\t(maybe_expand_builtin): Likewise.\n+\t* d-elem.cc (CatExp::toElem): Likewise.\n+\t* lang.opt (fsplit-dynamic-arrays): Remove.\n+\n+2014-02-02  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-glue.cc (readFile, writeFile, ensurePathToNameExists): Define.\n+\t* d-incpath.cc (add_import_path): Update for frontend changes.\n+\t(add_fileimp_path): Likewise.\n+\t* d-lang.cc (deps_write): Likewise.\n+\t(d_parse_file): Likewise.\n+\t* d-todt.cc (Dts): Update define for frontend changes.\n+\t* d-decls.cc (ClassDeclaration::toVtblSymbol): Don't mark __vtbl\n+\tsymbols as virtual.  They are global static symbols.\n+\n+2014-01-12  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-decls.cc (EnumDeclaration::toDebug): Build TYPE_DECL only for\n+\tenumeral types.\n+\n+2014-01-06  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-ctype.cc (TypeClass::toCtype): Don't add __monitor field for\n+\textern(C++) classes.\n+\n+\t* d-builtins.c (d_gcc_magic_module): Remove tdata.\n+\t* d-codegen.cc (build_interface_binfo): Likewise.\n+\t* d-ctype.cc (TypeEnum::toCtype): Likewise.\n+\t(TypeClass::toCtype): Likewise.\n+\t* d-lang.cc (deps_write): Likewise.\n+\n+2014-01-05  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-ctype.cc (TypeEnum::toCtype): Don't push CONST_DECLs into current\n+\tfunction.\n+\t* d-decls.cc (FuncDeclaration::toThunkSymbol): Don't mark symbol as\n+\tTREE_PRIVATE, just TREE_PUBLIC as false.\n+\t(StructLiteralExp::toSymbol): Likewise.\n+\t(ClassReferenceExp::toSymbol): Likewise.\n+\t* d-objfile.cc (d_comdat_linkage): Likewise.\n+\t(d_finish_symbol): Likewise.\n+\t(build_moduleinfo): Likewise.\n+\n+\t* config-lang.in: Add d-lang.cc to gtfiles.\n+\t* d-irstate.h (IRState::varsInScope): Change from Array to vec<> type.\n+\t(IRState::statementList_): Likewise.\n+\t(IRState::scopes_): Likewise.\n+\t(IRState::loops_): Likewise.\n+\t(IRState::labels_): Likewise.\n+\t* d-lang.h (d_bi_builtin_func): Remove declaration.\n+\t(d_bi_builtin_type): Likewise.\n+\t(d_keep_list): Likewise.\n+\t* d-objfile.h (Symbol::thunks): Change from Array to vec<> type.\n+\t(ModuleInfo::classes): Likewise.\n+\t(ModuleInfo::ctors): Likewise.\n+\t(ModuleInfo::dtors): Likewise.\n+\t(ModuleInfo::ctorgates): Likewise.\n+\t(ModuleInfo::sharedctors): Likewise.\n+\t(ModuleInfo::shareddtors): Likewise.\n+\t(ModuleInfo::sharedctorgates): Likewise.\n+\t(ModuleInfo::unitTests): Likewise.\n+\t(build_simple_function): Remove declaration.\n+\t(build_call_function): Likewise.\n+\t(build_ctor_function): Likewise.\n+\t(build_dtor_function): Likewise.\n+\t(build_unittest_function): Likewise.\n+\t* d-builtins.c (bi_fn_list): Rename to gcc_builtins_functions.\n+\t(bi_lib_list): Rename to gcc_builtins_libfuncs.\n+\t(bi_type_list): Rename to gcc_builtins_types.\n+\t(builtin_converted_types): Remove.\n+\t(builtin_converted_decls): Change from Array to vec<> type.\n+\t(gcc_type_to_d_type): Update.\n+\t(d_bi_builtin_func): Remove and move to d_builtin_function.\n+\t(d_bi_builtin_type): Remove and move to d_register_builtin_type.\n+\t(d_gcc_magic_builtins_module): Update.\n+\t* d-ctype.cc (TypeClass::toCtype): Remove unused var.\n+\t* d-decls.cc (FuncDeclaration::toThunkSymbol): Update for change to\n+\tvec<> type.\n+\t* d-elem.cc (CatExp::toElem): Change stashed vars from Array to vec<>.\n+\t(Expression::toElemDtor): Update for change to vec<> type.\n+\t* d-irstate.cc (IRState::startFunction): Likewise.\n+\t(IRState::endFunction): Likewise.\n+\t(IRState::addExp): Likewise.\n+\t(IRState::pushStatementList): Likewise.\n+\t(IRState::popStatementList): Likewise.\n+\t(IRState::getLabelBlock): Likewise.\n+\t(IRState::getLoopForLabel): Likewise.\n+\t(IRState::beginFlow): Likewise.\n+\t(IRState::endFlow): Likewise.\n+\t(IRState::startScope): Likewise.\n+\t(IRState::pushLabel): Likewise.\n+\t(IRState::checkGoto): Likewise.\n+\t(IRState::checkPreviousGoto): Change from Array to Blocks type.\n+\t* d-lang.cc (global_declarations): Change from Array to vec<> type.\n+\t(d_add_global_declaration): Update for change to vec<> type.\n+\t(d_write_global_declarations): Likewise.\n+\t(d_keep_list): Make static to source file.\n+\t* d-objfile.cc (static_ctor_list): Change from Array to vec<> type.\n+\t(static_dtor_list): Likewise.\n+\t(Module::genobjfile): Update for change to vec<> type.\n+\t(d_finish_module): Likewise.\n+\t(d_finish_function): Likewise.\n+\t(deferred_thunks): Change from ArrayBase<> to vec<> type.\n+\t(write_deferred_thunks): Update for change to vec<> type.\n+\t(use_thunk): Likewise.\n+\t(build_simple_function): Make static to source file.\n+\t(build_call_function): Likewise.\n+\t(build_ctor_function): Likewise.\n+\t(build_dtor_function): Likewise.\n+\t(build_unittest_function): Likewise.\n+\n+2014-01-02  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-objfile.cc (setup_symbol_storage): Use output_module_p on template\n+\tinstantiating module to determine if symbol is externally compiled.\n+\t(d_finish_function): Set function local if function body was compiled.\n+\t* d-decls.cc (Dsymbol::toSymbolX): Use unsigned integer format for the\n+\tprefix string length.\n+\n+\f\n+Copyright (C) 2014 Free Software Foundation, Inc.\n+\n+Copying and distribution of this file, with or without modification,\n+are permitted in any medium without royalty provided the copyright\n+notice and this notice are preserved."}, {"sha": "918068bfecb7a46fb42bf1fb109d8b2e7ce339c2", "filename": "gcc/d/ChangeLog-2015", "status": "added", "additions": 771, "deletions": 0, "changes": 771, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2FChangeLog-2015", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2FChangeLog-2015", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2FChangeLog-2015?ref=b4c522fabd0df7be08882d2207df8b2765026110", "patch": "@@ -0,0 +1,771 @@\n+2015-10-07  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-decls.cc (StructLiteralExp::toSymbol): Use letter prefix for\n+\tanonymous name.  Don't set TREE_READONLY.\n+\t(ClassReferenceExp::toSymbol): Likewise.\n+\n+2015-10-06  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (build_struct_literal): New function.\n+\t(layout_aggregate_members): Handle variables that are really tuples.\n+\t* d-elem.cc (StructLiteralExp::toElem): Handle slicing void arrays.\n+\tUse build_struct_literal to handle anonymous records.\n+\t* d-lang.h (d_unknown_type_node): Rename to unknown_type_node, update\n+\tin all files.\n+\n+2015-10-03  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (build_two_field_type): Use DECL_FIELD_CONTEXT to access\n+\tfield context decl.\n+\t(build_frame_type): Likewise.\n+\t(lookup_anon_field): New function.\n+\t(component_ref): Use it.\n+\t(fixup_anonymous_offset): New function.\n+\t(layout_aggregate_members): New function.\n+\t(layout_aggregate_type): Move generation of fields into\n+\tlayout_aggregate_members.\n+\t(insert_aggregate_field): Update signature, update all callers.\n+\t(finish_aggregate_type): Likewise.\n+\t* d-todt.cc (dt_container2): Use DECL_FIELD_CONTEXT to access field\n+\tcontext decl.\n+\t* types.cc (TypeVisitor::visit (TypeStruct)): Likewise.\n+\t(TypeVisitor::visit (TypeClass)): Likewise.\n+\t* d-tree.h (ANON_AGGR_TYPE_P): New type macro.\n+\n+2015-08-25  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-builtins.cc (maybe_set_builtin_1): Remove va_list handling.\n+\t(d_init_builtins): Don't represent static array va_list as reference.\n+\t* d-codegen.cc (convert_for_argument): Handle va_list as a static array.\n+\t(declaration_type): Likewise.\n+\t(type_passed_as): Likewise.\n+\t(decl_reference_p): Renamed to declaration_type_kind, update to return\n+\thow type is represented internally, updated all callers.\n+\t(arg_reference_p): Renamed to argument_type_kind, update to return how\n+\ttype is represented internally, updated all callers.\n+\t* d-codegen.h (type_kind): Declare.\n+\n+2015-08-22  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* toir.cc (IRVisitor::visit (TryCatchStatement)): Always emit call to\n+\tLIBCALL_BEGIN_CATCH at the start of the catch.\n+\t* d-elem.cc (AssertExp::toElem): Stabilize reference to class object\n+\tbefore passing it to _d_invariant.\n+\n+2015-08-20  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* toir.cc (IRVisitor::visit): Set input location in all visitors that\n+\teither throw an ICE or sorry message.\n+\n+2015-08-19  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* Make-lang.in: Replace uses of $(target_alias) with\n+\t$(target_noncanonical).\n+\n+2015-08-17  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* types.cc (TypeVisitor::visit (TypeEnum)): Set ENUM_IS_SCOPED on all\n+\tenumeral types.\n+\t* d-lang.cc (d_init_options_struct): Remove setting\n+\tflag_evaluation_order.\n+\n+2015-08-10  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-elem.cc (HaltExp::toElem): Use __builtin_trap to halt execution,\n+\trather than the library abort() call.\n+\n+2015-08-07  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (build_closure): Update signature, update all callers.\n+\t(build_vthis): Likewise.\n+\t(get_frame_for_symbol): Likewise.\n+\t(build_local_var): Likewise.\n+\t(get_decl_tree): Likewise.\n+\t(start_function): Likewise.\n+\t* d-irstate.h (IRState): Move func, mod, sthis, deferred,\n+\tstatementList, and varsInScope fields to...\n+\t* d-tree.h (language_function): Here, updated all uses.\n+\t* d-irstate.h: Remove file.\n+\t(IRState): Remove all uses everywhere.\n+\n+2015-08-07  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* Make-lang.in (D_GLUE_OBJS): Remove d-irstate.o.\n+\t* d-tree.h (d_label_use_entry): New structure.\n+\t(d_label_entry): New structure.\n+\t(binding_level): Add level_kind field.\n+\t(language_function): Add hash table field for labels.\n+\t(D_LABEL_VARIABLE_CASE): New macro.\n+\t* d-codegen.cc (pop_binding_label): New function.\n+\t(pop_label): New function.\n+\t(push_binding_level): Update signature.\n+\t(pop_binding_level): Update signature.  Handle declared or used labels.\n+\t(build_array_set): Update for push/pop binding changes.\n+\t(check_goto): New function.\n+\t(check_previous_goto): New function.\n+\t(d_lookup_label): Remove function.\n+\t(lookup_label): New function.\n+\t(lookup_bc_label): New function.\n+\t(define_label): New function.\n+\t* d-objfile.cc (FuncDeclaration::toObjFile): Update for push/pop binding\n+\tchanges.\n+\t* toir.cc (IRVisitor): Add break and continue label fields.\n+\t(IRVisitor::IRVisitor): Initialize here.\n+\t(IRVisitor::start_scope): Update signature.\n+\t(IRVisitor::end_scope): Return the finished scope, updated all callers.\n+\t(IRVisitor::push_break_label): New function.\n+\t(IRVisitor::pop_break_label): New function.\n+\t(IRVisitor::push_continue_label): New function.\n+\t(IRVisitor::pop_continue_label): New function.\n+\t(IRVisitor::start_condition): Remove function.\n+\t(IRVisitor::start_else): Remove function.\n+\t(IRVisitor::end_condition): Remove function.\n+\t(IRVisitor::start_catches): Remove function.\n+\t(IRVisitor::start_catch): Remove function.\n+\t(IRVisitor::end_catch): Remove function.\n+\t(IRVisitor::end_catches): Remove function.\n+\t(IRVisitor::start_finally): Remove function.\n+\t(IRVisitor::end_finally): Remove function.\n+\t(IRVisitor::start_case): Remove function.\n+\t(IRVisitor::end_case): Remove function.\n+\t* d-irstate.cc: Remove.\n+\n+2015-08-06  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* config-lang.in (gtfiles): Replace d-lang.h for d-tree.h\n+\t* d-lang.h: Move all GTY structures to d-tree.h, updated all source\n+\theader dependencies.\n+\t* d-tree.h: New file.\n+\n+2015-08-04  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* toir.cc (IRVisitor::start_condition): Don't cache condition.\n+\t(IRVisitor::start_else): Return the then body, updated all callers.\n+\t(IRVisitor::end_condition): Update signature.\n+\t(IRVisitor::start_catches): Return the try body, updated all callers.\n+\t(IRVisitor::start_catch): Don't cache catch type.\n+\t(IRVisitor::end_catch): Update signature.\n+\t(IRVisitor::end_catches): Update signature.\n+\t(IRVisitor::start_finally): Return the try body, updated all callers.\n+\t(IRVisitor::end_finally): Update signature.\n+\t(IRVisitor::start_case): Don't cache the condition.\n+\t(IRVisitor::end_case): Update signature.\n+\t* d-codegen.cc (convert_for_assignment): Use size_type_node for index.\n+\t* d-irstate.cc (IRState::beginFlow): Remove call to push_stmt_list.\n+\n+2015-08-04  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (push_stmt_list): New function.\n+\t(pop_stmt_list): New function.\n+\t(add_stmt): New function.\n+\t(start_function): New function.\n+\t(end_function): New function.\n+\t(expand_decl): Update to use new interface.\n+\t(build_closure): Likewise.\n+\t(push_binding_level): Moved from d-lang.cc.\n+\t(pop_binding_level): Likewise.\n+\t* d-lang.cc (d_init): Inline call to init_global_binding_level.\n+\t(alloc_binding_level): Remove function.\n+\t(push_binding_level): Remove function.\n+\t(pop_binding_level): Remove function.\n+\t(init_global_binding_level): Remove function.\n+\t(set_decl_binding_chain): Remove function.\n+\t* d-elem.cc (DeclarationExp::toElem): Likewise.\n+\t* d-objfile.cc (VarDeclaration::toObjFile): Likewise.\n+\t(FuncDeclaration::toObjFile): Likewise.\n+\t* toir.cc (IRVisitor::start_scope): Moved from d-irstate.cc, updated\n+\tall callers in IRVisitor.\n+\t(IRVisitor::end_scope): Likewise.\n+\t(IRVisitor::is_return_label): Likewise.\n+\t(IRVisitor::do_label): Likewise.\n+\t(IRVisitor::do_jump): Likewise.\n+\t(IRVisitor::start_condition): Likewise.\n+\t(IRVisitor::start_else): Likewise.\n+\t(IRVisitor::end_condition): Likewise.\n+\t(IRVisitor::start_catches): Likewise.\n+\t(IRVisitor::start_catch): Likewise.\n+\t(IRVisitor::end_catch): Likewise.\n+\t(IRVisitor::end_catches): Likewise.\n+\t(IRVisitor::start_finally): Likewise.\n+\t(IRVisitor::end_finally): Likewise.\n+\t(IRVisitor::end_loop): Likewise.\n+\t(IRVisitor::start_case): Likewise.\n+\t(IRVisitor::end_case): Likewise.\n+\t(build_ir): Update signature.\n+\n+2015-08-01  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* Make-lang.in (DMD_COMPILE): Declare as COMPILE with WARN_CXXFLAGS\n+\treplaced with DMD_WARN_CXXFLAGS.\n+\t(DMDGEN_COMPILE): Declare as DMD_COMPILE but with COMPILER replaced\n+\twith COMPILER_FOR_BUILD.\n+\t(d/idgen): Use LINKER_FOR_BUILD.\n+\t(d/impcvgen): Likewise.\n+\t(d/%.o): Use DMD_COMPILE and POSTCOMPILE.\n+\t(d/%.dmdgen.o): Use DMDGEN_COMPILE and POSTCOMPILE.\n+\n+2015-07-27  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (current_irstate): Remove.\n+\t(d_build_call): Check cfun before dereferencing.\n+\t* d-codegen.h (current_irstate): Redefine as macro.\n+\t* d-irstate.cc (IRState::IRState): Remove.\n+\t(IRState::startFunction): Initialize language-specific cfun field.\n+\t(IRState::endFunction): Free language-specific cfun field.\n+\t* d-lang.cc (d_parse_file): Don't initialize current_irstate.\n+\t* d-lang.h (language_function): Add irs field.\n+\t* d-objfile.cc (Dsymbol::toObjFile): Check cfun.\n+\t(FuncDeclaration::toObjFile): Adjust start and end calls.\n+\n+2015-07-26  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-irstate.cc (IRState::doArraySet): Remove function.\n+\t* d-codegen.cc (build_array_set): New function.\n+\t* d-elem.cc (AssignExp::toElem): Use build_array_set.\n+\t(StructLiteralExp::toElem): Likewise.\n+\n+\t* d-codegen.cc (build_array_set): Don't set this_block, update call to\n+\tpop_binding_level.\n+\t* d-irstate.cc (IRState::endFunction): Update assert.\n+\t(IRState::startScope): Move IRState::startBindings here, clean-up.\n+\t(IRState::endScope): Move IRState::endBindings here, clean-up.\n+\t(IRState::startBindings): Remove function.\n+\t(IRState::endBindings): Likewise.\n+\t(IRState::currentScope): Likewise.\n+\t(IRState::scopes_): Remove.\n+\t* d-lang.cc (pop_binding_level): Update signature, clean-up.\n+\t(d_pushdecl): Don't set names_end.\n+\t(binding_level::names_end): Remove.\n+\t(binding_level::this_block): Remove.\n+\t(FuncDeclaration::toObjFile): Clean-up.\n+\n+2015-07-24  Sebastien Alaiwan  <sebastien.alaiwan@gmail.com>\n+\n+\t* d-lang.cc (deps_write): Use StringTable instead of hash_set of string\n+\tpointers.\n+\n+2015-07-23  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-attribs.h: Adjust includes.\n+\t* d-builtins.cc: Likewise.\n+\t* d-codegen.cc: Likewise.\n+\t* d-convert.cc: Likewise.\n+\t* d-decls.cc: Likewise.\n+\t* d-elem.cc: Likewise.\n+\t* d-glue.cc: Likewise.\n+\t* d-incpath.cc: Likewise.\n+\t* d-irstate.cc: Likewise.\n+\t* d-lang.cc: Likewise.\n+\t* d-longdouble.cc: Likewise.\n+\t* d-objfile.cc: Likewise.\n+\t* d-port.cc: Likewise.\n+\t* d-target.cc: Likewise.\n+\t* d-todt.cc: Likewise.\n+\t* toir.cc: Likewise.\n+\t* types.cc: Likewise.\n+\n+2015-07-22  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (convert_expr): Warn about casts between imaginary\n+\tand non-imaginary types.\n+\t* d-convert (d_convert_basic): Rename to convert, handle conversions\n+\tbetween complex and imaginary types.\n+\t(convert): Remove.\n+\t(d_build_truthvalue_op): Update to call convert.\n+\t(d_truthvalue_conversion): Likewise.\n+\n+\t* d-builtins.cc (d_init_builtins): Build imaginary types as distinct\n+\tfloating point type nodes.\n+\t* d-codegen.cc (build_float_modulus): Update to handle imaginary types.\n+\t(d_array_type): Use the front-end equivalent of sizetype to represent\n+\tthe index type of arrays.\n+\t(build_array_index): Likewise.\n+\t(build_offset_op): Likewise.\n+\t(expand_intrinsic): Only get the inner callee if it's an address.\n+\n+\t* d-codegen.h (component_ref, modify_expr, vmodify_expr, build_vinit)\n+\t(build_nop, build_vconvert, build_boolop, compound_expr)\n+\t(vcompound_expr, real_part, imaginary_part): Move to d-codegen.cc,\n+\tuse fold build functions for codegen.\n+\t* d-codeden.cc (build_address): Use build_fold_addr_expr_with_type,\n+\tremove special handling of taking an address of an indirect ref.\n+\t(return_expr): New function.\n+\t(complex_expr): New function.\n+\t(indirect_ref): Use fold build functions for codegen.\n+\t(build_deref): Likewise.\n+\t(build_array_index): Likewise.\n+\t(build_offset_op): Likewise.\n+\t(void_okay_p): Likewise.\n+\t(build_binary_op): Likewise.\n+\t(build_float_modulus): Likewise.\n+\t* d-objfile.cc (FuncDeclaration::toObjFile): Likewise.\n+\t* d-elem.cc (MinExp::toElem): Likewise.\n+\t(AddExp::toElem): Likewise.\n+\t(NotExp::toElem): Likewise.\n+\t(ComExp::toElem): Likwise.\n+\t(NegExp::toElem): Likewise.\n+\t* d-irstate.cc (IRState::doLabel): Likewise.\n+\t(IRState::doReturn): Likewise.\n+\t(IRState::doJump): Likewise.\n+\n+\t* d-attribs.c: Adjust includes for flags.h changes.\n+\t* d-builtins.cc: Likewise.\n+\t* d-codegen.cc: Likewise.\n+\t* d-convert.cc: Likewise.\n+\t* d-elem.cc: Likewise.\n+\t* d-decls.cc: Likewise.\n+\t* d-glue.cc: Likewise.\n+\t* d-incpath.cc: Likewise.\n+\t* d-irstate.cc: Likewise.\n+\t* d-lang.cc: Likewise.\n+\t* d-longdouble.cc: Likewise.\n+\t* d-objfile.cc: Likewise.\n+\t* d-port.cc: Likewise.\n+\t* d-target.cc: Likewise.\n+\t* d-todt.cc: Likewise.\n+\t* toir.cc: Likewise.\n+\t* types.cc: Likewise.\n+\n+2015-07-20  Sebastien Alaiwan  <sebastien.alaiwan@gmail.com>\n+\n+\t* d-lang.cc (is_system_module): Extract function.\n+\t(write_one_dep): Extract function.\n+\t(deps_write): Eliminate duplicated dependencies, include\n+\tindirect and private dependencies.\n+\n+2015-07-19  Sebastien Alaiwan  <sebastien.alaiwan@gmail.com>\n+\n+\t* d-lang.cc (d_parse_file): Set ref flag on the module and make deps\n+\tfile handle.\n+\n+2015-07-11  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (convert_for_assignment): Remove handling of zero\n+\tinitialising a structure using memset.\n+\t(d_build_call): Removing handling of setting of return slot\n+\toptimisation on in call expression.\n+\t* d-elem.cc (AssignExp::toElem): Emit a memset to zero initialise\n+\tstructures here.  Set return slot optimisation on construction of\n+\tstatic arrays and structs only.\n+\n+2015-07-07  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (expand_intrinsic_arith): Use build_deref to handle\n+\tref parameters being used for the 'overflow' parameter.\n+\n+2015-07-03  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-elem.cc (StringExp::toElem): Zero-terminate all string literals\n+\ttypes, except for static arrays.\n+\t* d-objfile.cc (build_type_decl): Add TYPE_DECLs to global declarations,\n+\tdon't call rest_of_decl_declaration.\n+\t(d_finish_compilation): Call rest_of_decl_declaration on TYPE_DECLs.\n+\t(Dsymbol::toObjFile): Don't try to handle tuples when emitting import\n+\tdeclarations to debug.\n+\t* d-builtins.cc (builtin_sym): Use StructDeclaration for decl field.\n+\t(build_dtype): Don't handle anonymous structs.  Create a stub parent\n+\tmodule for the declaration symbol.\n+\t(d_build_builtins_module): Always override the parent module of\n+\tconverted struct declarations.\n+\t(maybe_set_builtin_1): Convert all static array parameters to ref\n+\tparameters, not just va_list.\n+\n+2015-07-01  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-attribs.c (d_handle_section_attribute): Use VAR_P throughout.\n+\t(d_handle_weak_attribute): Use VAR_OR_FUNCTION_DECL_P.\n+\t* d-codegen.cc (convert_for_assignment): Use VAR_P.\n+\t* d-lang.cc (pop_binding_level): Likewise.\n+\t(d_types_compatible_p): Likewise.\n+\t* d-objfile.cc (setup_symbol_storage): Likewise.\n+\t(mark_needed): Likewise.\n+\t(d_finish_compilation): Likewise.\n+\n+2015-06-30  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* intrinsics.def: Added ADDS, ADDSL, ADDU, ADDUL, SUBS, SUBSL, NEGS,\n+\tNEGSL, MULS, MULSL, MULU, and MULUL intrinsic definitions.\n+\t* d-codegen.cc (expand_intrinsic_arith): New function.\n+\t(expand_intrinsic): Add cases for core.checkedint functions adds, addu,\n+\tsubs, subu, negs, muls, and mulu intrinsics.\n+\n+2015-06-27  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* Make-lang.in (D_DMD_H): Remove.\n+\t(D_TREE_H): Likewise.\n+\t(CFLAGS-d/d-spec.o): Declare extra CFLAGS for building driver.\n+\t(d-warn): Declare default warning flags for compiler.\n+\t(D_DMD_OBJS): Remove 'dmd' from the object file suffix.\n+\t(D_GLUE_OBJS): Remove 'cglue' and 'glue' from object file suffix.\n+\t(D_GENERATED_OBJS): Remove 'gen' from the object file suffix.\n+\t(D_BORROWED_C_OBJS): Remove.\n+\t(CFLAGS-d/id.o): Declare extra CFLAGS for building generated sources.\n+\t(CFLAGS-d/impcnvtab.o): Likewise.\n+\t* types.cc (TypeVisitor::visit (TypeClass)): Build a pointer type for\n+\tclasses, not a reference type.\n+\t* types.cc (TypeVisitor::visit (TypeDelegate)): Don't build a\n+\tMETHOD_TYPE for delegates, as that requires knowing the underlying\n+\trecord type for the 'this' object parameter.\n+\t(TypeVisitor::visit (TypeEnum): Don't call rest_of_type_compilation.\n+\t(TypeVisitor::visit (TypeClass): Likewise.\n+\t(TypeVisitor::visit (TypeStruct): Likewise.\n+\t* d-decls.cc (TypeInfoDeclaration::toSymbol): Assert class is a pointer\n+\ttype, not a reference type.\n+\t(FuncDeclaration::toSymbol): Don't convert nested functions into a\n+\tMETHOD_TYPE to be strictly compatible with delegates.\n+\t* d-codegen.cc (convert_for_argument): Use correct accessors for array\n+\t.ptr and .length properties.\n+\t(expand_intrinsic_vaarg): Don't remove the va_list pointer reference,\n+\tas the backend now assumes this is what the front-end sets up.\n+\t(d_build_call): Remove assert as delegates and nested functions are no\n+\tlonger represented as METHOD_TYPE.\n+\t(build_vthis_type): New function.\n+\t(d_decl_context): Don't set static/__gshared declaration context as\n+\tanything other than the enclosing module of the declaration.\n+\t* toir.cc (IRVisitor::visit (ExtAsmStatement)): Support named labels by\n+\tcalling resolve_asm_operand_names.\n+\t* d-builtins.cc (d_backend_init): Remove.\n+\t(d_backend_term): Remove.\n+\t* d-lang.cc (d_write_global_declarations): Remove langhook.\n+\t(d_init): Move d_backend_init implementation here.\n+\t(d_parse_file): Move d_write_global_declarations implementation here.\n+\t(d_finish_compilation): Remove calls to finalize_compilation_unit,\n+\tcheck_global_declarations, and emit_debug_global_declarations.\n+\t(d-system.h): Remove file.  Move all includes into local sources.\n+\n+2015-06-22  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (d_build_call): Only apply CALL_EXPR_RETURN_SLOT_OPT to\n+\tcalls returning an aggregate.\n+\t(expand_intrinsic): Use CALL_EXPR_FN and CALL_EXPR_ARG directly.\n+\t(layout_aggregate_type): Update signature.\n+\t(insert_aggregate_field): Likewise.\n+\t(finish_aggregate_type): Likewise.\n+\t* d-codegen.h (AggLayout): Remove helper class.\n+\t(AddrOfExpr): Remove helper class.\n+\t(CallExpr): Remove helper class.\n+\t* d-elem.cc (InExp::toElem): Use build_address directly.\n+\t(CatAssignExp::toElem): Likewise.\n+\t(IndexExp::toElem): Likewise.\n+\t(RemoveExp::toElem): Likewise.\n+\t* types.cc (TypeVisitor::visit (TypeFunction)): Only apply\n+\tTREE_ADDRESSABLE to function types returning an aggregate.\n+\t(TypeVisitor::visit (TypeStruct)): Update for layout_aggregate_type and\n+\tfinish_aggregate_type changes.\n+\t(TypeVisitor::visit (TypeClass)): Likewise.\n+\n+2015-06-21  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-objfile.cc (setup_symbol_storage): Mark declarations as private or\n+\tprotected for the benefit of debug code.\n+\t* d-elem.cc (ArrayLiteralExp::toElem): Only set a value at the given\n+\tindex in the array constructor if it is non-zero.\n+\t(AssignExp::toElem): Use memset it assigning/initialising an array with\n+\tall zeroes.\n+\t(IndexExp::toElem): Simplify codegen to use a placeholder variable for\n+\tthe dollar length.\n+\t(SliceExp::toElem): Likewise.\n+\t* d-codegen.cc (ArrayScope): Remove helper class.\n+\t* Make-lang.in (cc1d$(exeext)): Use link mutex.\n+\n+2015-05-03  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* Make-lang.in (D_GLUE_OBJS): Rename d-ctype.cc to types.cc.\n+\t(d-spec.o): Rename d-spec.cc to d-spec.c\n+\t* types.cc (build_ctype): New function.\n+\t(Type::toCtype): Convert toCtype methods to use Visitor interface.\n+\n+2015-04-29  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* Make-lang.in (D_GLUE_OBJS): Add d-attribs.o.  Remove d-gt.o.\n+\t* d-attribs.c: New file.\n+\t* d-builtins.cc: Move attribute handler functions to d-attribs.c\n+\t* d-lang.cc: Likewise.  Added include for gtype-d.h from d-gt.cc.\n+\t* d-gt.cc: Remove file.\n+\n+2015-04-27  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-builtins.cc, d-convert.cc, d-ctype.cc, d-decls.cc, d-elem.cc,\n+\td-glue.cc, d-incpath.cc, d-irstate.cc, d-longdouble.cc, d-port.cc,\n+\td-target.cc, d-typinf.cc, toir.cc: Re-order included headers.\n+\t* d-codegen.h, d-dmd-gcc.h, d-irstate.h, d-lang.h, d-objfile.cc,\n+\td-system.h: Remove all includes from headers.\n+\t* d-codegen.cc: Re-order included headers.\n+\t(build_attributes): Use ctfeInterpret instead of optimize.\n+\t* d-lang.cc: Re-order included headers.\n+\t(d_init_options): Don't use tristate enum for flag_emit_templates.\n+\t(d_handle_option): Likewise.\n+\t* d-objfile.cc: Re-order included headers.\n+\t(output_declaration_p): Update check for flag_emit_templates.\n+\t(setup_symbol_storage): Likewise.\n+\t* d-todt.cc: Re-order included headers.\n+\t(ExpInitializer::toDt): Use ctfeInterpret instead of optimize.\n+\t(TypeInfoTupleDeclaration::toDt): Likewise.\n+\n+2015-04-20  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (build_exception_object): Remove.\n+\t* runtime.def (BEGIN_CATCH): Declare runtime function __gdc_begin_catch.\n+\t* toir.cc (IRVisitor::visit::TryCatchStatement): Use LIBCALL_BEGIN_CATCH\n+\tto get the correct exception object for handler.\n+\n+2015-04-18  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (d_build_call): Set CALL_EXPR_RETURN_SLOT_OPT on calls to\n+\tfunctions that return an aggregate or array that returns in memory.\n+\t(build_memref): New function.\n+\t(get_object_method): Use build_memref instead of building a\n+\tPOINTER_PLUS_EXPR for vtable dereferences.\n+\t* d-objfile.cc (FuncDeclaration::toObjFile): Support NRVO on\n+\tARRAY_TYPE's that may not return in registers.\n+\t* d-ctype.cc (TypeFunction::toCtype): Don't mark TREE_ADDRESSABLE when\n+\treturning non-POD types by reference.\n+\n+2015-04-15  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-decls.cc (EnumDeclaration::toDebug): Remove.\n+\t(ClassDeclaration::toDebug): Remove.\n+\t(StructDeclaration::toDebug): Remove.\n+\t* d-ctype.cc (TypeEnum::toCtype): Call rest_of_type_compilation here.\n+\t(TypeClass::toCtype): Likewise.\n+\t(TypeStruct::toCtype): Likewise.\n+\n+2015-04-12  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-objfile.cc (get_decl_tree): Check and generate correct code for when\n+\ta non-local 'this' is accessed through a closure pointer.\n+\t(FuncDeclaration::toObjFile): Remove check for _arguments.\n+\t* d-codegen.cc (build_local_var): Likewise.\n+\n+2015-04-11  Johannes Pfau  <johannespfau@gmail.com>\n+\n+\t* d-objfile.cc (setup_symbol_storage): Mark functions without\n+\tbody as DECL_EXTERNAL.\n+\n+2015-04-08  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (get_decl_tree): Get correct non-local 'this' decl by\n+\tconstructing component reference through parent link of nested classes.\n+\t* d-builtins.cc (DEF_FUNCTION_TYPE_VAR_8): Remove.\n+\t(DEF_FUNCTION_TYPE_VAR_12): Likewise.\n+\t(DEF_FUNCTION_TYPE_VAR_7, DEF_FUNCTION_TYPE_VAR_11): New macros.\n+\n+2015-04-07  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-objfile.cc (output_declaration_p): Remove check for semanticRun.\n+\t(FuncDeclaration::toObjFile): Name bool parameter force_p, allow it to\n+\toverride the initial output_declaration_p check.  Force run all\n+\tsemantic passes for symbols that it routine is generating code for.\n+\t(d_finish_function): Don't mark TREE_STATIC on functions that are\n+\treally DECL_EXTERN.\n+\t(finish_thunk): Force thunks referencing external methods to be\n+\texpanded to gimple.\n+\t* d-decls.cc (FuncDeclaration::toThunkSymbol): Call toObjFile on all\n+\tthunk target functions.\n+\n+2015-04-05  Johannes Pfau  <johannespfau@gmail.com>\n+\n+\t* d-lang.cc (d_handle_section_attribute): New function.\n+\t* d-builtins.cc (handle_alias_attribute): Move to d-lang.cc to\n+\tsupport attribute(alias) in user code.\n+\t* d-lang.cc (d_handle_alias_attribute): Ditto.\n+\t* d-lang.cc (d_handle_weak_attribute): New function.\n+\t* d-decls.cc (FuncDeclaration::toSymbol): Do not set\n+\tDECL_DECLARED_INLINE_P prematurely.\n+\n+2015-03-21  Johannes Pfau  <johannespfau@gmail.com>\n+\n+\t* d-lang.cc (d_init): Add GNU_EMUTLS version.\n+\t* d-objfile.cc (build_emutls_function): New function.\n+\t* d-objfile.cc (VarDeclaration::toObjFile): Collect all TLS variables\n+\tin a module into tlsVars array.\n+\t* d-objfile.cc (genmoduleinfo): Add reference to __modtlsscan\n+\tfunction generated by build_emutls_function to moduleinfo.\n+\n+2015-02-02  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* config-lang.in: Remove lang_requires_boot_languages.\n+\t* d-incpath.cc (iprefix): Remove global variable.\n+\t(multilib_dir): Ditto.\n+\t(prefixed_path): Add iprefix parameter.\n+\t(add_import_paths): Add iprefix and imultilib parameter.\n+\tUse cpp_include_defaults to get list of import paths.\n+\t* d-lang.cc (iprefix_dir): New static variable to cache -iprefix switch.\n+\t(imultilib_dir): New static variable to cache -imultilib switch.\n+\t(d_init): Pass iprefix_dir and imultilib_dir to add_import_paths.\n+\t(d_handle_option): Use new static variables.\n+\n+2015-02-01  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-lang.cc: Remove d-confdef.h header.\n+\t* d-incpath.cc: Ditto.\n+\t* d-spec.cc: Ditto.\n+\n+2015-01-31  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-incpath.cc (add_phobos_versyms): Remove function.\n+\t* d-lang.cc (d_init): Remove call to add_phobos_versyms.\n+\n+2015-01-28  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-builtins.cc (DEF_FUNCTION_TYPE_VAR_8)\n+\t(DEF_FUNCTION_TYPE_VAR_12): New macros.\n+\n+2015-01-24  Johannes Pfau  <johannespfau@gmail.com>\n+\n+\t* d-builtins.cc (d_build_builtins_module): Mark builtin functions\n+\tas @nogc.\n+\n+2015-01-18  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* Make-lang.in: Update for D frontend changes.\n+\t* d-asmstmt.cc: Remove file.\n+\t* d-builtins.cc (build_dtype): No longer set struct handle.\n+\t(d_gcc_paint_type): Move to Target::paintAsType.\n+\t* d-codegen.cc (convert_expr): No longer call getImpl on associative\n+\tarray conversions.  Add case for converting void pointers to delegates.\n+\t(unhandled_arrayop_p): Remove.\n+\t(build_two_field_type): Use layout_type instead of building\n+\tTYPE_STUB_DECL and calling rest_of_decl_compilation.\n+\t(build_binop_assignment): New function.\n+\t(libcall_ids): Remove static variable.\n+\t(get_libcall): New function.\n+\t(maybe_set_intrinsic): Remove druntime library call handling.\n+\t(expand_intrinsic_vaarg): Dereference ref va_list parameters.\n+\t(build_closure): New function.\n+\t(WrappedExp::WrappedExp): Move to frontend sources.\n+\t(WrappedExp::toCBuffer): Ditto.\n+\t* d-codegen.h (LibCallFlag): New enum.\n+\t(LibCall): Use runtime.def macro to define members.\n+\t* d-ctype.cc (Type::toCParamtype): Remove function.\n+\t(TypeTypedef::toCParamtype): Ditto.\n+\t(TypeClass::toSymbol): Ditto.\n+\t(TypeFunction::retStyle): Move to retStyle.\n+\t(TypeSArray::toCParamtype): Ditto.\n+\t(Type::toSymbol): Ditto.\n+\t(Type::totym): Ditto.\n+\t(TypeFunction::totym): Ditto.\n+\t* d-decls.cc (Dsymbol::toSymbolX): Update for frontend changes.\n+\t(Dsymbol::toImport): Ditto.\n+\t(VarDeclaration::toSymbol): Ditto.\n+\t(FuncDeclaration::toSymbol): Ditto.\n+\t(InterfaceDeclaration::toSymbol): Use TREE_READONLY instead of\n+\t(EnumDeclaration::toDebug): Only call rest_of_type_compilation on\n+\tENUMERAL_TYPE types.\n+\tTREE_CONSTANT to declare that the symbol cannot be modified.\n+\t(ClassDeclaration::toVtblSymbol): Ditto.\n+\t(AggregateDeclaration::toInitializer): Ditto.\n+\t(EnumDeclaration::toInitializer): Ditto.\n+\t(TypedefDeclaration::toInitializer): Remove function.\n+\t(TypedefDeclaration::toDebug): Ditto.\n+\t(Dsymbol::cvMember): Remove stub function.\n+\t(EnumDeclaration::cvMember): Ditto.\n+\t(FuncDeclaration::cvMember): Ditto.\n+\t(VarDeclaration::cvMember): Ditto.\n+\t(TypedefDeclaration::cvMember): Ditto.\n+\t* d-elem.cc (XorExp::toElem): Remove call to unhandled_arrayop_p.\n+\t(OrExp::toElem): Ditto.\n+\t(AndExp::toElem): Ditto.\n+\t(UshrExp::toElem): Ditto.\n+\t(ShrExp::toElem): Ditto.\n+\t(ShlExp::toElem): Ditto.\n+\t(ModExp::toElem): Ditto.\n+\t(DivExp::toElem): Ditto.\n+\t(MulExp::toElem): Ditto.\n+\t(MinExp::toElem): Ditto.\n+\t(AddExp::toElem): Ditto.\n+\t(XorAssignExp::toElem): Ditto.\n+\t(OrAssignExp::toElem): Ditto.\n+\t(AndAssignExp::toElem): Ditto.\n+\t(UshrAssignExp::toElem): Ditto.\n+\t(ShrAssignExp::toElem): Ditto.\n+\t(ShlAssignExp::toElem): Ditto.\n+\t(ModAssignExp::toElem): Ditto.\n+\t(DivAssignExp::toElem): Ditto.\n+\t(MulAssignExp::toElem): Ditto.\n+\t(PowAssignExp::toElem): Ditto.\n+\t(MinAssignExp::toElem): Ditto.\n+\t(AddAssignExp::toElem): Ditto.\n+\t(BinExp::toElemBin): Move to build_binop_assignment.\n+\t(AssignExp::toElem): Update for frontend changes.\n+\t(DelegatePtrExp::toElem): New function.\n+\t(DelegateFuncptrExp::toElem): New function.\n+\t(DelegateExp::toElem): Update for frontend changes.\n+\t(FuncExp::toElem): Ditto.\n+\t(NewExp::toElem): Ditto.\n+\t(StringExp::toElem): Don't set TREE_READONLY on string literals.\n+\t(AssocArrayLiteralExp::toElem): Remove codegen rewrite for new\n+\tassociative array implementation.\n+\t* d-glue.cc (Global::isSpeculativeGagging): Remove function.\n+\t(Dsymbol::ungagSpeculative): Ditto.\n+\t(Ungag::~Ungag): Ditto.\n+\t(Loc::toChars): Update for new column diagnostic support.\n+\t(Loc::Loc): Ditto.\n+\t(Loc::equals): Ditto.\n+\t(error): Ditto.\n+\t(binary): Remove function.\n+\t(asmSemantic): New function.\n+\t(retStyle): New function.\n+\t(FuncDeclaration::isBuiltin): Rename to isBuiltin.\n+\t* d-intrinsics.def: Rename to intrinsics.def.\n+\t* d-irstate.cc (IRState::addExp): Remove old warning to catch statements\n+\twith no side effects.  Now handled in frontend.\n+\t* d-lang.cc (d_init_options): Update for frontend changes.\n+\t(d_initialize_diagnostics): Remove function.\n+\t(d_add_builtin_version): Update for frontend changes.\n+\t(d_init): Ditto.\n+\t(d_handle_option): Ditto.\n+\t(d_post_options): Ditto.\n+\t(d_parse_file): Ditto.\n+\t* d-objfile.cc (Nspace::toObjFile): New function.\n+\t(StructDeclaration::toObjFile): Update for frontend changes.\n+\t(TypedefDeclaration::toObjFile): Remove function.\n+\t(TemplateInstance::toObjFile): Update for frontend changes.\n+\t(TemplateMixin::toObjFile): Ditto.\n+\t(unnest_function): New function.\n+\t(output_declaration_p): Update for frontend changes.\n+\t(FuncDeclaration::toObjFile): Ditto.\n+\t(FuncDeclaration::buildClosure): Move to buildClosure.\n+\t(get_linemap): Update for frontend changes.\n+\t(build_simple_function): Ditto.\n+\t(build_call_function): Ditto.\n+\t* d-target.cc (Target::va_listType): New function.\n+\t(Target::paintAsType): Ditto.\n+\t* d-todt.cc (dt_container2): Do not set TREE_READONLY on initialisers.\n+\t(dt_container): Ditto.\n+\t(ClassReferenceExp::toDt2): Update for C++ class support.\n+\t(ClassReferenceExp::toInstanceDt): Ditto.\n+\t(TypeTypedef::toDt): Remove function.\n+\t(TypeInfoTypedefDeclaration::toDt): Ditto.\n+\t(TypeInfoAssociativeArrayDeclaration::toDt): Update typeinfo size.\n+\t(TypeInfoAssociativeArrayDeclaration::toDt): Remove reference to impl\n+\tfield in TypeInfo struct.\n+\t(TypeInfoStructDeclaration::toDt): Update for frontend changes.\n+\t* d-typinf.cc (Type::getTypeInfo): Update for frontend changes.\n+\t(TypeTypedef::getTypeInfoDeclaration): Remove function.\n+\t(createTypeInfoArray): Remove function.\n+\t* runtime.def: New file.\n+\t* toir.cc (IRVisitor::visit::DtorExpStatement): Remove function.\n+\t(IRVisitor::visit::ExtAsmStatement): Update for frontend changes.\n+\n+2015-01-17  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-elem.cc (UshrAssignExp::toElem): Remove integer promotion on left\n+\thand side of unsigned right shift expression.\n+\n+2015-01-13  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-system.h: Include hash-set.h, machmode.h, vec.h, double-int.h,\n+\tinput.h, alias.h, symtab.h and inchash.h due to flattening of tree.h.\n+\t* d-gt.cc: Ditto.\n+\n+2015-01-02  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.h (build_boolop): Don't eagerly fold comparison expressions.\n+\n+\f\n+Copyright (C) 2015 Free Software Foundation, Inc.\n+\n+Copying and distribution of this file, with or without modification,\n+are permitted in any medium without royalty provided the copyright\n+notice and this notice are preserved."}, {"sha": "dbd757338033c1952d7a5de914cb97059cd41a9e", "filename": "gcc/d/ChangeLog-2016", "status": "added", "additions": 1262, "deletions": 0, "changes": 1262, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2FChangeLog-2016", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2FChangeLog-2016", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2FChangeLog-2016?ref=b4c522fabd0df7be08882d2207df8b2765026110", "patch": "@@ -0,0 +1,1262 @@\n+2016-12-28  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* expr.cc (ExprVisitor::visit(VarExp)): Remove type forced conversion.\n+\n+2016-12-28  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-lang.cc (d_handle_option): Handle -ftransition=safe.\n+\t* lang.opt (ftransition=safe): Add compiler option.\n+\n+2016-12-28  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-lang.cc (d_init_options): Initialize hdrStripPlainFunctions.\n+\t(d_post_options): Add post option handling of flag.\n+\n+2016-12-27  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (layout_aggregate_type): Adjust layout of D interfaces.\n+\tOnly add a __vptr field if no base interfaces, don't add __monitor.\n+\n+2016-12-27  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-lang.cc (d_parse_file): Run runDeferredSemantic2 after semantic2.\n+\n+2016-12-26  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* expr.cc (ExprVisitor::visit(ArrayLiteralExp)): Use getElement to\n+\tindex elements array.\n+\t(ExprVisitor::visit(VectorExp)): Likewise.\n+\n+2016-12-25  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* Make-lang.in (D_DMD_OBJS): Add d/objc.o\n+\t* types.cc (TypeVisitor::visit(TypeFunction)): Handle ObjC linkage.\n+\n+2016-12-25  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-decls.cc (mangle_decl): New function.\n+\t(make_internal_name): Update.\n+\t(get_symbol_decl): Update.\n+\n+2016-12-24  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* expr.cc (ExprVisitor::needs_dtor): New function.\n+\t(ExprVisitor::lvalue_p): New function.\n+\t(ExprVisitor::visit(AssignExp)): Check both for postblit and dtors\n+\twhen generating array assignments.\n+\n+2016-12-24  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (convert_expr): Allow upcasting C++ classes.\n+\t(build_class_instance): Generate initial values of vtable interfaces\n+\tbefore class fields.\n+\t(layout_aggregate_type): Layout vtable interfaces before class fields.\n+\t* d-decls.cc (get_symbol_decl): Build DECL_ARGUMENTS for functions\n+\tthat have no body.\n+\n+2016-12-22  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-target.cc (Target::cppExceptions): New variable.\n+\t(Target::init): Initialize it.\n+\t(Target::prefixName): New function.\n+\n+2016-12-19  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-objfile.cc (ClassDeclaration::toObjFile): Use layout_classinfo to\n+\tgenerate TypeInfo for classes.\n+\t(InterfaceDeclaration::toObjFile): Likewise.\n+\t* d-todt.cc (build_vptr_monitor): Remove function.\n+\t* typeinfo.cc (TypeInfoVisitor::set_field): New function.\n+\t(TypeInfoVisitor::layout_interfaces): New function.\n+\t(TypeInfoVisitor::layout_interface_vtables): New function.\n+\t(TypeInfoVisitor::visit(TypeInfoClassDeclaration)): Implement.\n+\t(layout_classinfo): New function.\n+\n+2016-12-18  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* typeinfo.cc (TypeInfoVisitor): Use build_typeinfo instead of\n+\tget_typeinfo_decl.\n+\t* d-objfile.cc (ClassDeclaration::toObjFile): Use build_constructor to\n+\tbuild the vtable, instead of using dt_cons.\n+\n+2016-12-18  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-decls.cc (layout_moduleinfo_fields): Use finish_aggregate_type\n+\tinstead of layout_type.\n+\t(layout_classinfo_interfaces): Likewise.\n+\n+2016-12-17  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-builtins.cc (build_dtype): Use static create method for allocating\n+\tfrontend types.\n+\t* d-codegen.cc (declaration_type): Likewise.\n+\t(type_passed_as): Likewise.\n+\t(get_libcall): Likewise.\n+\t* d-lang.cc (d_parse_file): Likewise.\n+\t* d-objfile.cc (build_simple_function_decl): Likewise.\n+\t(build_emutls_function): Likewise.\n+\t* d-todt.cc (StructDeclaration::toDt): Likewise.\n+\t* typeinfo.cc (TypeInfoVisitor::visit(TypeInfoInterfaceDeclaration)):\n+\tLikewise.\n+\n+2016-12-17  Johannes Pfau  <johannespfau@gmail.com>\n+\n+\t* d-decls.cc (copy_struct): Also copy and update TYPE_METHODS.\n+\t* d-spec.c (lang_specific_driver): Do not link in math, thread and\n+\ttime libraries. Use a spec file instead to do this.\n+\t(lang_specific_pre_link): Load libgphobos.spec to set up the link\n+\tdependencies for libgphobos.\n+\n+2016-12-13  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-builtins.cc (build_dtype): Cache all allocated frontend types.\n+\t(builtin_sym): Update constructor.\n+\t(builtin_converted_decls): Rename to builtin_converted_syms.\n+\t(d_build_builtins_module): Check if decl set before assigning parent.\n+\n+2016-12-13  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-builtins.cc (build_dtype): Set type modifiers on frontend type.\n+\n+2016-12-12  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-builtins.cc (build_dtype): Don't set default parameter storage\n+\tclass as const.\n+\n+2016-12-12  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-decls.cc (add_moduleinfo_field): New function.\n+\t(layout_moduleinfo_fields): New function.\n+\t(get_moduleinfo_decl): Use record type for moduleinfo decl.\n+\t* d-objfile.cc (build_moduleinfo_symbol): Delay calling\n+\tget_moduleinfo_decl until after ModuleInfo type is validated.\n+\t(d_finish_symbol): Remove check for unknown_type_node.\n+\n+2016-12-11  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-decls.cc (copy_struct): New function.\n+\t(layout_classinfo_interfaces): New function.\n+\t(get_classinfo_decl): Use record type for classinfo decl.\n+\t* d-codegen.cc (create_field_decl): New function.\n+\tUse it instead of build_decl when creating a new FIELD_DECL.\n+\n+2016-12-11  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-builtins.cc (build_dtype): Don't build generic function types.\n+\t(d_build_builtins_module): Remove check.\n+\n+2016-12-10  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (build_vindex_ref): Move saving of object to callers.\n+\t* expr.cc (ExprVisitor::visit(CallExp)): Save object reference before\n+\tpassing to build_vindex_ref.\n+\t(ExprVisitor::visit(DelegateExp)): Likewise.\n+\n+2016-12-07  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-spec.c (lang_specific_driver): Remove error handling.\n+\t* d-lang.cc (d_parse_file): Don't error twice.\n+\n+2016-12-06  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-spec.c (lang_specific_driver): Remove 'added' variable.\n+\n+2016-12-04  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-decls.cc (get_symbol_decl): Use needsCodegen to determine whether\n+\ttemplate instance is extern or not.\n+\n+2016-12-02  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-glue.cc (escapePath): Move to dfrontend.\n+\t(readFile): Likewise.\n+\t(writeFile): Likewise.\n+\t(ensurePathToNameExists): Likewise.\n+\n+2016-12-01  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-target.cc: Include memmodel.h.\n+\t* d-attrib.c (d_handle_section_attribute): No longer set\n+\tuser_defined_section_attribute.\n+\n+2016-11-25  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* types.cc (TypeVisitor::visit(Type)): Update.\n+\n+2016-11-24  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (build_struct_literal): Stop after first field\n+\tassignment in union constructor.\n+\t(build_class_instance): Skip void initialized fields.\n+\t* expr.cc (ExprVisitor::visit(StructLiteralExp)): Likewise.\n+\n+2016-11-22  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-decls.cc (get_symbol_decl): Don't set alignment if\n+\tSTRUCTALIGN_DEFAULT.\n+\n+2016-11-21  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-todt.cc (ClassDeclaration::toDt): Update.\n+\t(ClassDeclaration::toDt2): Remove function.\n+\t(TypeSArray::toDtElem): Remove function.\n+\t(dt_chainon): Remove function.\n+\t(dt_zeropad): Remove function.\n+\t(dt_container): Remove function.\n+\t(dt_container2): Rename to dt_container.  All callers updated.\n+\t* d-objfile.cc (VarDeclaration::toObjFile): Update.\n+\n+2016-11-20  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-lang.cc (copy_lang_decl): Rename to d_dup_lang_specific_decl.\n+\t(LANG_HOOKS_DUP_LANG_SPECIFIC_DECL): Redefine.\n+\t* d-decls.cc (make_alias_for_thunk): Call dup_lang_specific_decl.\n+\t(make_thunk): Likewise.\n+\n+2016-11-19  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.h (FuncFrameInfo): Remove type.  All users updated to\n+\tinterface with new frame macro accessors.\n+\t(build_frame_type): Mark as static.\n+\t(get_frameinfo): Update to return a tree type.\n+\t* d-lang.cc (LANG_HOOKS_TREE_SIZE): Redefine.\n+\t(LANG_HOOKS_PRINT_XNODE): Redefine.\n+\t(d_tree_size): New function.\n+\t(d_print_xnode): New function.\n+\t(d_tree_node_structure): New function.\n+\t* d-tree.def (FUNCFRAME_INFO): New tree_code.\n+\t* d-tree.h (tree_frame_info): New type.\n+\t(FRAMEINFO_CREATES_FRAME): New macro accessor.\n+\t(FRAMEINFO_STATIC_CHAIN): New macro accessor.\n+\t(FRAMEINFO_IS_CLOSURE): New macro accessor.\n+\t(FRAMEINFO_TYPE): New macro accessor.\n+\t(lang_decl): Replace frame_info field with a tree type.\n+\t(d_tree_node_structure_enum): New type.\n+\t(lang_tree_node): Update GTY tags.\n+\n+2016-11-19  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-decls.cc (setup_symbol_storage): Remove function.\n+\t(Dsymbol::toSymbol): Remove function and all overrides.  All callers\n+\tupdated to call ...\n+\t(get_symbol_decl): ... New function.\n+\n+2016-11-06  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-lang.cc (output_modules): Remove variable.\n+\t(output_module): Remove variable.\n+\t(d_gcc_get_output_module): Remove function.  All callers updated to\n+\tuse Module::rootModule.\n+\t* d-objfile.cc (FuncDeclaration::toObjFile): Mark all functions being\n+\tconstructed here as TREE_STATIC.\n+\t(output_module_p): Remove function.  All callers updated to call\n+\tModule::isRoot.\n+\n+2016-11-05  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-decls.cc (get_template_storage_info): Remove function.\n+\t(setup_symbol_storage): Use Dsymbol::isInstantiated instead.\n+\n+2016-11-05  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (build_struct_literal): Handle anonymous fields.\n+\t(build_class_instance): New functions.\n+\t(find_aggregate_field): Update signature.  All callers updated.\n+\t* d-todt.cc (dt_chainon): Mark as static.\n+\t(dt_zeropad): Likewise.\n+\t(dt_container): Likewise.\n+\t(ClassReferenceExp::toInstanceDt): Remove function.\n+\t(ClassReferenceExp::toDt2): Remove function.\n+\n+2016-11-01  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-tree.h (lang_decl): Remove readonly field.\n+\t(DECL_LANG_READONLY): Remove macro.  All callers updated.\n+\n+2016-10-29  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-decls.cc (ClassReferenceExp::toSymbol): Use class record type for\n+\tstatic symbol.\n+\t* d-lang.cc (global_context): New static variable.\n+\t(global_declarations): New static variable.\n+\t(d_nametype): Pass built-in types to debug_hooks::type_decl.\n+\t(d_add_global_declaration): Remove function, update all callers.\n+\t(get_global_context): New function.\n+\t(d_pushdecl): Push decls to global, or bindings list here.\n+\t(StructDeclaration::toObjFile): Send type decl to d_pushdecl.\n+\t(ClassDeclaration::toObjFile): Likewise.\n+\t(InterfaceDeclaration::toObjFile): Likewise.\n+\t(EnumDeclaration::toObjFile): Likewise.\n+\t(FuncDeclaration::toObjFile): Send finished decl to d_pushdecl.\n+\t(d_finish_symbol): Likewise.\n+\t(emit_modref_hooks): Likewise.\n+\t(d_comdat_linkage): Don't set DECL_COMDAT on non-public decls.\n+\t(setup_symbol_storage): Don't set DECL_ABSTRACT_P on templates.\n+\t(d_finish_compilation): Remove check for type decls.\n+\t(build_type_decl): Don't add to global decl list, just call\n+\trest_of_decl_compilation.\n+\t* expr.cc (ExprVisitor::visit(ArrayLiteralExp)): Send finished decl to\n+\td_pushdecl.\n+\t* toir.cc (IRVisitor::visit(SwitchStatement)): Likewise.\n+\t(IRVisitor::end_scope): Mark bind expr as having side effects.\n+\t* typeinfo.cc (TypeInfoVisitor::visit(TypeInfoTupleDeclaration)): Send\n+\tfinished decl to d_pushdecl.\n+\n+2016-10-29  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (layout_aggregate_type): Continue searching based on\n+\taggregate members, not just fields.\n+\t* types.cc (TypeVisitor::visit(TypeEnum)): Use void for opaque enums.\n+\t(TypeVisitor::visit(TypeStruct)): Don't give opaque structs a size.\n+\n+2016-10-27  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* expr.cc (ExprVisitor::visit(AssignExp)): Don't set TREE_ADDRESSABLE.\n+\t* d-codegen.cc (build_assign): Handle setting up INIT_EXPR from a\n+\tvalue returning via NRVO here instead.\n+\n+2016-10-26  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (d_build_call): Only convert CALL_EXPRs into a\n+\tTARGET_EXPR if return type is TREE_ADDRESSABLE.\n+\t(build_assign): Use TARGET_EXPR accessors.\n+\t(compound_expr): Likewise.\n+\n+2016-10-15  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.h (d_types_same): Return early if types are identical.\n+\n+2016-10-09  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-decls.cc (FuncDeclaration::toThunkSymbol): Rename to make_thunk.\n+\tAll callers updated.\n+\t(finish_thunk): Update signature.\n+\n+2016-10-09  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-objfile.h (Thunk): Remove type, move offset field to ...\n+\t* d-tree.h (lang_decl): ... here.  Replace Thunk field with a tree.\n+\t(THUNK_LANG_OFFSET): New macro accessor.\n+\t* d-lang.cc (copy_lang_decl): New function.\n+\t* d-decls.cc (FuncDeclaration::toThunkSymbol): Use new thunk macros.\n+\n+2016-10-09  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-decls.cc (finish_thunk): Add assert that current_function_decl is\n+\tnever set when function is called.\n+\t(DeferredThunk): Remove type.\n+\t(deferred_thunks): Remove variable.\n+\t(write_deferred_thunks): Remove function.  All callers updated.\n+\t(use_thunk): Remove function.\n+\t(FuncDeclaration::toThunkSymbol): Call finish_thunk when done.\n+\n+2016-10-08  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-objfile.cc (deferred_thunks): Move to d-decls.cc.\n+\t(write_deferred_thunks): Likewise.\n+\t(use_thunk): Likewise.  Mark as static.\n+\t(thunk_labelno): Likewise.\n+\t(make_alias_for_thunk): Likewise.\n+\t(finish_thunk): Likewise.\n+\n+2016-10-08  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-decls.cc (setup_symbol_storage): Remove unused parameters.\n+\n+2016-10-07  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-decls.cc (ClassReferenceExp::toSymbol): Rename to\n+\tbuild_new_class_expr.  All callers updated.\n+\t(StructLiteralExp::toSymbol): Remove function.  Inline into caller ...\n+\t* expr.cc (ExprVisitor::visit(AddrExpr)): ... here.\n+\n+2016-10-07  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-decls.cc (TypeInfoDeclaration::toSymbol): Rename to\n+\tget_typeinfo_decl.  All callers updated.\n+\t(TypeInfoDeclVisitor): New visitor helper for get_typeinfo_decl.\n+\t* d-codegen.cc (get_decl_tree): Add check for building typeinfo decls.\n+\n+2016-10-05  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-decls.cc (AggregateDeclaration::toInitializer): Rename to\n+\taggregate_initializer.  All callers updated.\n+\t(EnumDeclaration::toInitializer): Rename to enum_initializer.\n+\t(Module::toSymbol): Rename to get_moduleinfo_decl.\n+\t(ClassDeclaration::toSymbol): Rename to get_classinfo_decl.\n+\t(InterfaceDeclaration::toSymbol): Merge into get_classinfo_decl.\n+\n+2016-10-03  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-decls.cc (FuncDeclaration::toSymbol): Remove saving of current\n+\tmodule decl before calling semantic.\n+\t(StructLiteralExp::toSymbol): Don't handle sinit.\n+\t(ClassReferenceExp::toSymbol): Likewise.\n+\t(AggregateDeclaration::toInitializer): Likewise.\n+\t(EnumDeclaration::toInitializer): Likewise.\n+\t* d-glue.cc (toInitializer): Remove function.\n+\t* d-objfile.cc (FuncDeclaration::toObjFile): Remove saving of current\n+\tmodule decl before calling semantic.\n+\t* expr.cc (ExprVisitor::visit(CallExpr)): Replace accesses of sinit\n+\tfield with useStaticInit.\n+\t(ExprVisitor::visit(StructLiteralExp)): Likewise.\n+\n+2016-10-03  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-decls.cc (ClassDeclaration::toVtblSymbol): Rename to\n+\tget_vtable_decl.  All callers updated.\n+\n+2016-10-03  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-objfile.cc (setup_symbol_storage): Move function to ...\n+\t* d-decls.cc (setup_symbol_storage): ... here.  Mark as static.\n+\t(get_template_storage_info): Likewise.\n+\n+2016-10-03  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (call_by_alias_p): Check whether caller and callee are\n+\tnested in the same parent function.\n+\t* expr.cc (ExprVisitor::visit(CallExp)): Set TREE_PUBLIC directly\n+\tinstead of calling setup_symbol_storage.\n+\n+2016-10-03  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-objfile.cc (VarDeclaration::toObjFile): Always generate\n+\tDECL_INITIAL for all kinds of var decls.\n+\t* d-codegen.cc (build_address): Use the DECL_INITIAL directly if\n+\ttaking the address of a CONST_DECL.\n+\n+2016-10-02  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-tree.h (DECL_LANG_TREE): Remove macro.  All callers updated.\n+\n+2016-10-02  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-objfile.h (Symbol): Remove struct.  Update all functions to return\n+\ta tree instead.  Remove all new allocations of Symbol.\n+\t* d-tree.h (DECL_LANG_READONLY): Update accessor.\n+\t(DECL_LANG_INITIAL): Likewise.\n+\t(DECL_LANG_TREE): Likewise.\n+\t(SET_DECL_LANG_FRAME_FIELD): Likewise.\n+\t(DECL_LANG_FRAME_FIELD): Likewise.\n+\t(SET_DECL_LANG_NRVO): Likewise.\n+\t(DECL_LANG_NRVO): Likewise.\n+\t(DECL_LANG_THUNKS): Likewise.\n+\t(DECL_LANG_FRAMEINFO): Likewise.\n+\n+2016-10-01  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-objfile.h (Symbol): Remove symbol identifier field.\n+\t* d-tree.h (DECL_LANG_IDENTIFIER): Remove macro.  Update callers to\n+\tinstead use DECL_ASSEMBLER_NAME.\n+\t(DECL_LANG_PRETTY_NAME): Remove macro.\n+\n+2016-09-26  Johannes Pfau  <johannespfau@gmail.com>\n+\n+\t* d-objfile.cc (d_finish_function): Handle template mixins (issue 231).\n+\n+2016-09-25  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-decls.cc (Dsymbol::toSymbolX): Remove function, update all callers\n+\tto use ...\n+\t(make_internal_name): ... New function.\n+\t* d-objfile.h (Symbol): Replace char* fields with tree.\n+\t* d-tree.h (lang_identifier): Add pretty_ident field.\n+\t(IDENTIFIER_PRETTY_NAME): New macro accessor.\n+\t(DECL_LANG_PRETTY_NAME): Update to use IDENTIFIER_PRETTY_NAME.\n+\n+2016-09-19  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-objfile.h (Symbol): Move declaration-specific fields to ...\n+\t* d-tree.h (lang_decl): ... here.\n+\t(DECL_LANG_READONLY): Update to reference lang_decl field.\n+\t(DECL_LANG_INITIAL): Likewise.\n+\t(DECL_LANG_FRAME_FIELD): Likewise.\n+\t(DECL_LANG_NRVO): Likewise.\n+\t(DECL_LANG_THUNKS): Likewise.\n+\t(DECL_LANG_FRAMEINFO): Likewise.\n+\t(SET_DECL_LANG_FRAME_FIELD): New setter macro, update all callers.\n+\t(SET_DECL_LANG_NRVO): Likewise.\n+\n+2016-09-19  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-builtins.cc (d_build_builtins_module): Set DECL_LANG_SPECIFIC\n+\tbefore using any DECL_LANG accessor macros.\n+\t(maybe_set_builtin_1): Likewise.\n+\t* d-codegen.cc (maybe_set_intrinsic): Likewise.\n+\t(layout_aggregate_members): Likewise.\n+\td-decls.cc (VarDeclaration::toSymbol): Likewise.\n+\t(FuncDeclaration::toThunkSymbol): Likewise.\n+\t(ClassDeclaration::toSymbol): Likewise.\n+\t(InterfaceDeclaration::toSymbol): Likewise.\n+\t(Module::toSymbol): Likewise.\n+\t(StructLiteralExp::toSymbol): Likewise.\n+\t(ClassReferenceExp::toSymbol): Likewise.\n+\t(ClassDeclaration::toVtblSymbol): Likewise.\n+\t(AggregateDeclaration::toInitializer): Likewise.\n+\t(EnumDeclaration::toInitializer): Likewise.\n+\n+2016-09-19  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-tree.h (DECL_LANG_IDENTIFIER): New macro accessor, use instead of\n+\tdirect field accesses.\n+\t(DECL_LANG_PRETTY_NAME): Likewise.\n+\t(DECL_LANG_READONLY): Likewise.\n+\t(DECL_LANG_INITIAL): Likewise.\n+\t(DECL_LANG_TREE): Likewise.\n+\t(DECL_LANG_FRAME_FIELD): Likewise.\n+\t(DECL_LANG_NRVO): Likewise.\n+\t(DECL_LANG_THUNKS): Likewise.\n+\t(DECL_LANG_FRAMEINFO): Likewise.\n+\n+2016-09-18  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* imports.cc (ImportVisitor::visit(ScopeDsymbol)): New visit method.\n+\n+2016-09-17  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-todt.cc (ArrayInitializer::toDt): Update to use build_expr.\n+\t* d-codegen.cc (d_array_value): Don't override default const and\n+\tstatic bits for array constructors.\n+\n+2016-09-16  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (lower_struct_comparison): Don't compare vectors in the\n+\tsame way as integers.\n+\n+2016-09-11  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-todt.cc (Type::toDt): Remove function, inline into callers.\n+\t(TypeVector::toDt): Likewise.\n+\t(TypeSArray::toDt): Likewise.\n+\t(TypeStruct::toDt): Likewise.\n+\n+2016-09-11  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-decls.cc (FuncDeclaration::toSymbol): Save current module decl\n+\tbefore calling function semantic.\n+\t* d-objfile.cc (FuncDeclaration::toObjFile): Likewise.\n+\n+2016-09-11  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* types.cc: Document and reformat file.\n+\n+2016-09-10  Johannes Pfau  <johannespfau@gmail.com>\n+\n+\t* d-objfile.cc (setup_symbol_storage): Setup TREE_PUBLIC before\n+\tcalling decl_default_tls_model.\n+\t* d-typeinfo.cc (TypeInfoVisitor::find_field): Move method...\n+\t* d-codegen.cc (find_aggregate_field): here.\n+\t* d-objfile.cc (build_simple_function): Extract some code into new\n+\tfunction.\n+\t(build_simple_function_decl): Extracted from build_simple_function.\n+\t* d-objfile.cc (build_moduleinfo): Split into emit_moduleinfo_hooks\n+\tand emit_modref_hooks.\n+\t(build_dso_registry_var): New function.\n+\t(emit_dso_registry_cdtor): Likewise.\n+\t(emit_dso_registry_helpers): Likewise.\n+\t(emit_dso_registry_hooks): Likewise.\n+\t(emit_moduleinfo_hooks): Only emit hooks if required druntime functions\n+\tare available.\n+\t* d-objfile.cc (Module::genmoduleinfo): Rename to\n+\tbuild_moduleinfo_symbol.\n+\t(emit_moduleinfo_hooks): rename to Module::genmoduleinfo.\n+\t(Module::genmoduleinfo): only call build_moduleinfo_symbol when\n+\temitting module info registry code.\n+\t* d-spec.c (lang_specific_driver): Add -shared-libphobos option,\n+\tdefault to static libphobos.\n+\t* d-lang.opt: Likewise.\n+\t* d-spec.c: Rename libgphobos2 to libgphobos.\n+\n+2016-07-11  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (get_frameinfo): Use hasNestedFrameRefs to determine\n+\twhether a frame should be created.\n+\n+2016-07-02  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-objfile.cc (FuncDeclaration::toObjFile): Always convert the\n+\tDECL_RESULT of NRVO-capable functions into reference decls.\n+\n+2016-06-21  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-attribs.c (handle_nonnull_attribute): Accept the nonnull\n+\tattribute in type-generic builtins.\n+\t* d-codegen.cc (d_build_call): Check AGGREGATE_TYPE_P before testing\n+\tfor aggregate_value_p.\n+\n+2016-06-20  Johannes Pfau  <johannespfau@gmail.com>\n+\n+\t* d-lang.cc (d_handle_option): Add new -ftransition=dip25 and\n+\t-fmax-error-messages switches.\n+\t* lang.opt: Likewise.\n+\n+2016-06-19  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (get_decl_tree): Remove assert for RESULT_DECL.\n+\t(convert_for_argument): Handle lazy arguments early.\n+\t(argument_reference_p): Handle types marked TREE_ADDRESSABLE.\n+\t(lvalue_p): Add case for TARGET_EXPR.\n+\t(d_mark_addressable): Likewise.\n+\t(build_assign): Likewise.\n+\t(compound_expr): Likewise.\n+\t(build_target_expr): New function.\n+\t(d_build_call): Always set CALL_EXPR_RETURN_SLOT_OPT for all calls\n+\tthat return an aggregate in memory.\n+\t* d-decls.cc (VarDeclaration::toSymbol): Handle reference parameters.\n+\t* d-lang.cc (d_gimplify_expr): Handle taking address of constructor.\n+\t* d-objfile.cc (FuncDeclaration::toObjFile): Handle reference return.\n+\t* expr.cc (ExprVisitor::visit(AssignExp)): Mark LHS as addressable if\n+\tRHS assignment is a returned aggregate.\n+\t* types.cc (TypeVisitor::visit(TypeStruct)): Mark the RECORD_TYPE of\n+\tnon-trivial structs as TREE_ADDRESSABLE.\n+\t(TypeVisitor::visit(TypeClass)): Mark all classes as TREE_ADDRESSABLE.\n+\t(TypeVisitor::visit(TypeFunction)): Don't set TREE_ADDRESSABLE.\n+\t(TypeVisitor::visit(TypeDelegate)): Likewise.\n+\n+2016-06-19  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (lvalue_p): Add more cases to look for.\n+\t(build_address): Mark expression as addressable after stabilizing.\n+\t(d_mark_addressable): Remove special cases.\n+\t(d_mark_used): Add cases for other kinds of DECLs.\n+\t(build_struct_comparison): Stabilize before saving.\n+\t(modify_expr): Remove overload.  Updated all callers.\n+\t(build_vinit): Remove function.  Updated all callers to use ...\n+\t(build_assign): ... New function.\n+\t(lvalue_p): Remove tests in default case.\n+\t* expr.cc (build_expr_dtor): Rewrite assignments to elide a temporary.\n+\n+2016-06-16  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (make_temp): Rename to d_save_expr.\n+\t(maybe_make_temp): Remove function.\n+\tUpdated all callers to use d_save_expr().\n+\t(vcompound_expr): Remove function.\n+\tUpdated all callers to use compound_expr().\n+\t(maybe_compound_expr): Likewise.\n+\t(maybe_vcompound_expr): Likewise.\n+\t(vmodify_expr): Remove function.\n+\tUpdated all callers to use modify_expr().\n+\t(lvalue_p): New function.\n+\n+2016-06-15  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (add_stmt): Don't add statements without side effects.\n+\tPush each COMPOUND_EXPR as a separate statement.\n+\t(build_local_temp): Use input_location.\n+\t(create_temporary_var): Likewise.\n+\t(d_has_side_effects): Remove function.\n+\tUpdated all callers to use TREE_SIDE_EFFECTS.\n+\t(stabilize_expr): New function.\n+\tUpdated all routines that check for COMPOUND_EXPR to use it.\n+\t* expr.cc (ExprVisitor::visit(EqualExp)): Use maybe_make_temp to save\n+\texpressions.  Use build_boolop for constructed conditions.\n+\t(ExprVisitor::visit(CatAssignExp)): Stabilize RHS before assignment.\n+\t(ExprVisitor::visit(NewExp)): Don't always create SAVE_EXPR.\n+\t(ExprVisitor::visit(AssocArrayLiteralExp)): Likewise.\n+\t(ExprVisitor::visit(ArrayLiteralExp)): Evaluate elements before\n+\tappending to constructor fields.\n+\t(ExprVisitor::visit(StructLiteralExp)): Likewise.\n+\n+2016-06-12  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-convert.cc (d_build_truthvalue_op): Fold truthvalue operation.\n+\t(d_truthvalue_conversion): Use zero constant of expression type.\n+\n+2016-06-09  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (build_address): Handle ERROR_MARK and COMPOUND_EXPR.\n+\t(build_nop): Likewise.\n+\t(indirect_ref): Likewise.\n+\t(build_deref): Likewise.\n+\t(d_build_call): Only create temporaries if more than one argument has\n+\tside effects.\n+\t* expr.cc (get_compound_value): Remove function.\n+\t(build_expr_dtor): Wrap cleanups in a TRY_FINALLY_EXPR only if the\n+\texpression has side effects.\n+\n+2016-06-08  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* Make-lang.in (D_GLUE_OBJS): Remove d-typinf.o, add typeinfo.o.\n+\t* d-codegen.cc (build_typeinfo): Move to ...\n+\t* typeinfo.cc: ... here.  New file.\n+\t* d-objfile.cc (TypeInfoDeclaration::toObjFile): Use layout_typeinfo.\n+\t* d-todt.cc (verify_structsize): Remove function.\n+\t(TypeInfoDeclaration::toDt): Remove function and overrides.\n+\t* d-typinf.cc: Remove file.  Contents moved to typeinfo.cc.\n+\t* expr.cc (ExprVisitor::visit(DeleteExp)): Use build_typeinfo.\n+\t(ExprVisitor::visit(NewExp)): Likewise.\n+\n+2016-06-08  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* dfrontend: Update to D front-end version 2.068.\n+\t* d-codegen.cc (insert_type_modifiers): Don't build TYPE_QUAL_VOLATILE\n+\ttypes.  Set TYPE_SHARED instead.\n+\t(insert_aggregate_field): Propagate TYPE_SHARED to TREE_ADDRESSABLE.\n+\t(array_bounds_check): Use BOUNDSCHECK interface.\n+\t* d-lang.cc (d_init_options): Likewise.\n+\t(d_init): Likewise.\n+\t(d_handle_option): Likewise.\n+\t(d_post_options): Likewise.\n+\t* d-decls.cc (VarDeclaration::toSymbol): Propagate TYPE_SHARED_to\n+\tTREE_ADDRESSABLE.\n+\t* d-objfile.cc (ClassDeclaration::toObjFile): Make overload shadowing\n+\tan error.  Remove call to _d_hidden_func.\n+\t(TypeInfoDeclaration::toObjFile): Updated template emission rules.\n+\t(FuncDeclaration::toObjFile): Likewise.\n+\t* d-port.cc (Port::readwordLE): New function.\n+\t(Port::readwordBE): New function.\n+\t(Port::readlongLE): New function.\n+\t(Port::readlongBE): New function.\n+\t* d-todt.cc (dt_container2): Handle error_mark_node.\n+\t(dt_container): Likewise.\n+\t(TypeInfoStructDeclaration::toDt): Updated template emission rules.\n+\t* d-typinf.cc (genTypeInfo): Likewise.\n+\t(getTypeInfo): Remove function.\n+\t(getTypeInfoType): New function.\n+\t(isSpeculativeType): New function.\n+\t* d-tree.h (TYPE_SHARED): New macro.\n+\t* expr.cc (ExprVisitor::visit(CondExp)): Don't generate dtors in\n+\tcondition expression.\n+\t(ExprVisitor::visit(AssignExp)): Update for frontend changes.\n+\t(ExprVisitor::visit(DeleteExp)): Likewise.\n+\t(ExprVisitor::visit(CallExp)): Likewise.\n+\t(ExprVisitor::visit(DelegateExp)): Likewise.\n+\t(ExprVisitor::visit(TypeidExp)): New function.\n+\t* lang.opt (bounds_check_set_manually): Remove variable.\n+\t(ftransition=complex): New option.\n+\t* runtime.def (HIDDEN_FUNC): Remove runtime function.\n+\n+2016-06-07  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (build_alignment_field): New function.\n+\t(build_struct_literal): Update signature, updated all callers.\n+\tAdd anonymous fields to fill alignment holes in constructor.\n+\t(fill_alignment_field): Remove function.\n+\t(fill_alignment_holes): Remove function.\n+\t(finish_aggregate_type): Don't add anonymous fields.\n+\n+2016-06-05  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (d_build_call): Separate parameter to pass from it's\n+\tconstruction expression.\n+\t* expr.cc (build_dtor_list): New function.\n+\t(get_compound_value): New function.\n+\t(build_expr_dtor): Update to use helper functions.\n+\t(build_return_dtor): New function.\n+\t* toir.cc (IRVisitor::visit(ReturnStatement)): Use it.\n+\n+2016-06-04  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (build_deref): Handle ERROR_MARK nodes early.\n+\t(build_array_index): Likewise.\n+\n+2016-05-29  Johannes Pfau  <johannespfau@gmail.com>\n+\n+\t* toir.cc (IRVisitor::visit(SwitchStatement)): Set correct type for the\n+\tstring table for switch(string) statements.\n+\n+2016-05-24  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (convert_expr): Return empty constructor for null to\n+\tassociative array conversions.\n+\t* expr.cc (ExprVisitor::visit(NullExp)): Likewise.\n+\n+2016-05-21  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (build_struct_literal): Don't set TREE_STATIC.\n+\t(build_boolop): Remove side effects from aggregate types only.\n+\t* expr.cc (ExprVisitor::visit(ArrayLiteralExp)): Don't check\n+\tinitializer_constant_valid_p until after constructor is built.\n+\t(ExprVisitor::visit(StructLiteralExp)): Likewise.\n+\n+2016-05-16  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* expr.cc (ExprVisitor::visit(AssignExp)): Build the rhs constructor\n+\tbefore the lhs declaration.\n+\t(ExprVisitor::visit(DeclarationExp)): Compile the declaration and\n+\tinitializer before pushing it to vars_in_scope.\n+\t(build_expr_dtor): Compound all dtors in reverse.\n+\n+2016-05-16  Johannes Pfau  <johannespfau@gmail.com>\n+\n+\t* expr.cc (ExprVisitor::visit(IdentityExp*)): Remove side-effects\n+\tbefore comparing two floating point types.\n+\t* d-codegen.cc (build_struct_comparison): Remove side-effects\n+\tbefore comparing two values.\n+\t(build_boolop): Likewise.\n+\n+2016-05-15  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-todt.cc (Expression::toDt): Remove function and all overrides.\n+\tUpdate all callers to use build_expr.\n+\t* expr.cc (ExprVisitor::visit(SymOffExp)): Move check for non-constant\n+\texpressions in static initializer data to ...\n+\t(build_expr): ... here.\n+\t* toir.cc (IRVisitor::visit(SwitchStatement)): Build array of indexes\n+\tdirectly using build_artificial_decl.\n+\n+2016-05-15  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* expr.cc (ExprVisitor::visit(IdentityExp*)): Remove side-effects\n+\tbefore comparing two dynamic arrays.\n+\n+2016-05-14  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (get_decl_tree): First check if cfun is set.\n+\t* d-todt.cc (StructLiteralExp::toDt): Update call to build_expr.\n+\t(SymOffExp::toDt): Likewise.\n+\t(VarExp::toDt): Likewise.\n+\t(FuncExp::toDt): Likewise.\n+\t(VectorExp::toDt): Likewise.\n+\t* expr.cc (ExprVisitor::visit(SymbolExp)): Remove function.\n+\t(ExprVisitor::visit(SymOffExp)): New function.\n+\t(ExprVisitor::visit(VarExp)): New function.\n+\t(ExprVisitor::visit(StructLiteralExp)): Don't return static\n+\tinitializer symbol if constant literal requested.\n+\n+2016-05-13  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (build_struct_literal): Maybe set TREE_CONSTANT or\n+\tTREE_STATIC on the returned constructor.\n+\tAllow building struct literals with initializer list out of order.\n+\tAdd check and error when initializer overlaps previous field.\n+\tDon't explicitly set empty initializers for anonymous aggregates or\n+\tartificial fields.\n+\n+2016-05-12  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (build_array_from_val): New function.\n+\t* expr.cc (ExprVisitor::visit(StructLiteralExp)): Use it.\n+\n+2016-05-11  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (convert_expr): Use build_nop to cast between two\n+\tstatic arrays of the same size.\n+\t* d-todt.cc (IntegerExp::toDt): Update call to build_expr.\n+\t(RealExp::toDt): Likewise.\n+\t(ComplexExp::toDt): Likewise.\n+\t(StringExp::toDt): Likewise.\n+\t(NullExp::toDt): Use build_expr to generate initializer.\n+\t(ArrayLiteralExp::toDt): Likewise.\n+\t(CastExp::toDt): Likewise.\n+\t(ClassReferenceExp::toDt): Likewise.\n+\t(ClassReferenceExp::toDtI): Remove function.\n+\t* expr.cc (ExprVisitor::visit(CastExp)): Forward constp to the next\n+\tleaf expression in the tree.\n+\t(ExprVisitor::visit(AddrExp)): Likewise.\n+\t(ExprVisitor::visit(FuncExp)): Likewise.\n+\t(ExprVisitor::visit(ArrayLiteralExp)): Likewise.\n+\t(ExprVisitor::visit(StructLiteralExp)): Likewise.\n+\t(ExprVisitor::visit(VectorExp)): Likewise.\n+\t(ExprVisitor::visit(ClassReferenceExp)): Adjust reference for constp.\n+\n+2016-05-09  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-objfile.cc (get_unique_name): Remove function.\n+\t(build_artificial_decl): New function.\n+\t(d_finish_symbol): Use build_artificial_decl.\n+\t(build_moduleinfo): Likewise.\n+\t* d-decls.cc (StructLiteralExp::toSymbol): Likewise.\n+\t(ClassReferenceExp::toSymbol): Likewise.\n+\n+2016-05-07  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* expr.cc (ExprVisitor::visit(BinExp)): New function.\n+\t(ExprVisitor::visit(XorExp)): Remove function.\n+\t(ExprVisitor::visit(OrExp)): Likewise.\n+\t(ExprVisitor::visit(AndExp)): Likewise.\n+\t(ExprVisitor::visit(UshrExp)): Likewise.\n+\t(ExprVisitor::visit(ShrExp)): Likewise.\n+\t(ExprVisitor::visit(ShlExp)): Likewise.\n+\t(ExprVisitor::visit(ModExp)): Likewise.\n+\t(ExprVisitor::visit(DivExp)): Likewise.\n+\t(ExprVisitor::visit(MulExp)): Likewise.\n+\t(ExprVisitor::visit(MinExp)): Likewise.\n+\t(ExprVisitor::visit(AddExp)): Likewise.\n+\t(ExprVisitor::visit(BinAssignExp)): New function.\n+\t(ExprVisitor::visit(XorAssignExp)): Remove function.\n+\t(ExprVisitor::visit(OrAssignExp)): Likewise.\n+\t(ExprVisitor::visit(AndAssignExp)): Likewise.\n+\t(ExprVisitor::visit(ShrAssignExp)): Likewise.\n+\t(ExprVisitor::visit(ShlAssignExp)): Likewise.\n+\t(ExprVisitor::visit(ModAssignExp)): Likewise.\n+\t(ExprVisitor::visit(DivAssignExp)): Likewise.\n+\t(ExprVisitor::visit(MulAssignExp)): Likewise.\n+\t(ExprVisitor::visit(PowAssignExp)): Likewise.\n+\t(ExprVisitor::visit(MinAssignExp)): Likewise.\n+\t(ExprVisitor::visit(AddAssignExp)): Likewise.\n+\n+2016-05-06  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* expr.cc (ExprVisitor::ExprVisitor): Update signature.\n+\t(ExprVisitor::visit(AddrExp)): Handle constant expressions.\n+\t(ExprVisitor::visit(FuncExp)): Likewise.\n+\t(ExprVisitor::visit(ComplexExp)): Likewise.\n+\t(ExprVisitor::visit(StringExp)): Likewise.\n+\t(ExprVisitor::visit(ArrayLiteralExp)): Likewise.\n+\t(ExprVisitor::visit(StructLiteralExp)): Likewise.\n+\t(ExprVisitor::visit(NullExp)): Likewise.\n+\t(ExprVisitor::visit(ClassReferenceExp)): Likewise.\n+\t(build_expr): Update signature.\n+\n+2016-05-05  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* Make-lang.in (D_GLUE_OBJS): Add d/expr.o.\n+\tRemove d/d-elem.o\n+\t* d-codegen.cc (size_mult_expr): New function.\n+\t* d-tree.h (build_expr): New function, update all callers to toElem.\n+\t(build_expr_dtor): New function, update all callers to toElemDtor.\n+\t* expr.cc: New file.\n+\t* d-elem.cc: Remove file.\n+\n+2016-05-03  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-target.cc (Target::init): Target::realpad value should be size\n+\tminus precision.\n+\n+2016-04-29  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (finish_aggregate_type): Use SET_TYPE_ALIGN.\n+\t* types.cc (TypeVisitor::visit(TypeStruct)): Likewise.\n+\t* d-decls.cc (ClassDeclaration::toVtblSymbol): Use SET_DECL_ALIGN.\n+\t* d-objfile.cc (d_finish_symbol): Likewise.\n+\t* d-target.cc (Target::fieldalign): Likewise.\n+\n+2016-04-29  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-todt.cc (TypeSArray::toDtElem): Remove special handling for\n+\tarrays of vectors.\n+\n+2016-04-23  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-builtins.cc (build_dtype): Make function static.\n+\t* d-lang.cc (d_init_exceptions): Remove function.\n+\t* d-codegen.h: Move visitor declarations to ...\n+\t* d-tree.h: ... here.\n+\t(lang_decl): Remove `d_` prefix from fields.\n+\t(lang_type): Likewise.\n+\t* d-lang.cc (build_d_type_lang_specific): Rename to build_lang_type.\n+\t(build_d_decl_lang_specific): Rename to build_lang_decl.\n+\t* imports.cc: Update includes.\n+\n+2016-03-29  Johannes Pfau  <johannespfau@gmail.com>\n+\n+\t* d-objfile.cc (d_comdat_linkage): Rewrite template duplicate\n+\thandling to generate only one backend tree for all duplicates.\n+\t(FuncDeclaration::toObjFile): Likewise.\n+\t(VarDeclaration::toObjFile): Likewise.\n+\t* d-decls.cc (FuncDeclaration::toSymbol): Likewise.\n+\t(VarDeclaration::toSymbol): Likewise.\n+\t* d-objfile.cc (get_template_storage_info): Extract function from\n+\tsetup_symbol_storage.\n+\t(setup_symbol_storage): Likewise.\n+\t* d-tree.h (lang_identifier): Add field for Dsymbol.\n+\t(IDENTIFIER_LANG_SPECIFIC): New macro.\n+\t(IDENTIFIER_DSYMBOL): Likewise.\n+\n+2016-03-29  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (fill_alignment_field): Call layout_decl on field.\n+\t(finish_aggregate_type): Add assertion that TYPE_MODE is equal.\n+\n+2016-03-29  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (convert_expr): Replace call build_integer_cst with\n+\tsize_int.\n+\t(convert_for_assignment): Likewise.\n+\t(build_struct_comparison): Likewise.\n+\t(d_assert_call): Likewise.\n+\t* d-elem.cc (IdentityExp::toElem): Likewise.\n+\t(AssignExp::toElem): Likewise.\n+\t(IndexExp::toElem): Likewise.\n+\t(SymbolExp::toElem): Likewise.\n+\t(NewExp::toElem): Likewise.\n+\t(ArrayLiteralExp::toElem): Likewise.\n+\t(AssocArrayLiteralExp::toElem): Likewise.\n+\n+2016-03-28  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-tree.h (CLASS_TYPE_P): New macro.\n+\t* d-codegen.cc (build_struct_literal): Check RECORD_OR_UNION_TYPE_P\n+\tbefore testing ANON_AGGR_TYPE_P.\n+\t(fill_alignment_field): New function.\n+\t(fill_alignment_holes): New function.\n+\t(finish_aggregate_type): Call fill_alignment_holes before computing\n+\tbackend type mode.\n+\n+2016-03-28  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-tree.h (D_METHOD_CALL_EXPR): Removed `D_' prefix from macro,\n+\tupdated all callers.\n+\t(D_TYPE_IMAGINARY_FLOAT): Likewise.\n+\t(D_LABEL_VARIABLE_CASE): Likewise.\n+\t* d-codegen.cc (build_delegate_cst): Always return valid constructor.\n+\t(get_object_method): Remove function.\n+\t(build_vindex_ref): New function.\n+\t* d-elem.cc (FuncExp::toElem): Use the real function pointer type when\n+\tconverting to delegate.\n+\t(CallExp::toElem): Handle setting up virtual functions directly.\n+\t(DelegateExp::toElem): Likewise.\n+\t(DotVarExp::toElem): Remove handling of virtual functions.\n+\n+2016-03-28  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.h (lang_dtype): Remove function.\n+\t(lang_ddecl): Remove function.\n+\t* d-tree.h (TYPE_LANG_FRONTEND): New macro, replace all uses of\n+\tlang_dtype function.\n+\t(DECL_LANG_FRONTEND): New macro.\n+\t* d-attribs.c: Update includes.\n+\t* d-builtins.cc: Likewise.\n+\t* d-codegen.cc: Likewise.\n+\t* d-incpath.cc: Likewise.\n+\t* d-lang.cc: Likewise.\n+\t* d-objfile.cc: Likewise.\n+\n+2016-03-27  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.h (function_type_p): Remove function.\n+\t* d-codegen.cc (d_build_call): Use FUNC_OR_METHOD_P macro.\n+\t(build_bounds_condition): Update signature.\n+\t(d_assert_call): Likewise.\n+\t(insert_aggregate_field): Likewise.\n+\t* d-objfile.cc (get_linemap): Likewise.\n+\t* d-lang.h: Remove file, updated all includes.  Moved forward\n+\tdeclarations of types and functions to ...\n+\t* d-tree.h: ... here.\n+\n+2016-03-20  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (d_checked_index): Remove function.\n+\t(d_bounds_condition): Remove function.\n+\t(build_bounds_condition): New function.\n+\t* d-elem.cc (IndexExp::toElem): Use build_bounds_condition.\n+\t(SliceExp::toElem): Likewise.\n+\t(EqualExp::toElem): Convert expressions to dynamic arrays when\n+\tinlining comparison.  Don't pass zero length arrays to memcmp.\n+\n+2016-03-19  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (d_array_convert): New function overload.\n+\t* d-elem.cc (CatExp::toElem): Call new runtime function _d_arraycatnTX\n+\twhen flattening multiple concatenations.\n+\t(NewExp::toElem): Update call construction for new signatures of\n+\truntime functions _d_newarraymTX and _d_newarraymiTX.\n+\t* runtime.def (NEWARRAYMTX): Update signature.\n+\t(NEWARRAYMITX): Likewise,\n+\t(ARRAYCATNT): Remove runtime function.\n+\t(ARRAYCATNTX): New runtime function.\n+\n+2016-03-07  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* imports.cc (ImportVisitor::visit(Declaration)): Don't assume toSymbol\n+\tmethod will cache it's result.\n+\n+2016-03-06  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* dfrontend: Update root library to 2.068.\n+\t* Make-lang.in (D_DMD_OBJS): Add newdelete.o\n+\t* d-target.cc (Target::classinfosize): New variable, replaces all uses\n+\tof global CLASSINFO_SIZE.\n+\t(Target::init): Initialize it.\n+\t* d-decls.cc (ClassInfoDeclaration::toSymbol): Remove function.\n+\n+2016-03-05  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* dfrontend: Update to D front-end version 2.067.\n+\t* Make-lang.in (D_DMD_OBJS): Add new frontend sources.\n+\t* d-builtins.cc (d_build_builtins_module): Update signature.\n+\t(maybe_set_builtin): Rename to d_maybe_set_builtin, update signature.\n+\t(d_gcc_magic_module): Remove function.\n+\t* d-codegen.cc (expand_volatile_load): New function.\n+\t(expand_volatile_store): New function.\n+\t(expand_intrinsic): Handle volatileLoad and volatileStore intrinsics.\n+\t* d-decls.cc (Module::toModuleAssert): Remove function.\n+\t(Module::toModuleUnittest): Remove function.\n+\t(Module::toModuleArray): Remove function.\n+\t(TypeAArray::aaGetSymbol): Remove function.\n+\t* d-elem.cc (AssignExp::toElem): Call _d_arrayassign_{l,r} when\n+\tgenerating dynamic array assignment.\n+\t(IndexExp::toElem): Call _aaGetY when indexing an associative array.\n+\t(SliceExp::toElem): Use known CTFE result to check whether bounds\n+\tchecks are necessary.\n+\t(DeleteExp::toElem): Call _d_delstruct when deleting a struct pointer.\n+\t(Expression::toElemDtor): Don't run cleanup of temporary if it's\n+\tconstructor thrown an exception.\n+\t(NewExp::toElem): Handle special construction of new() arguments.\n+\t* d-glue.cc (Loc::Loc): Update signature.\n+\t(error): Likewise.\n+\t(toInitializer): New function.\n+\t* d-lang.cc (d_handle_option): Replace deprecated handlers.\n+\t(d_post_options): Set flag_max_errors.\n+\t(d_parse_file): Process any modules marked as builtin.\n+\t* d-objfile.cc (ClassDeclaration::toObjFile): Don't write out ctors\n+\tin the vtable marked @disable.\n+\t* d-target.cc (Target::loadModule): New function.\n+\t(Target::checkVectorType): New function.\n+\t* d-specs.c (lang_specific_driver): Handle -v option.\n+\t* lang-specs.h: Pass -v option to to frontend.\n+\n+2016-03-04  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* imports.cc: New file.\n+\t* d-decls.cc (Dsymbol::toImport): Remove function, update all callers\n+\tto use build_import_decl.\n+\n+2016-03-03  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-objfile.cc (gcc_attribute_p): New function.\n+\t(output_declaration_p): Inline into FuncDeclaration::ObjFile.\n+\t(unnest_function): Likewise.\n+\t(FuncDeclaration::toObjFile): Remove named parameter, update all\n+\tcallers to ignore it.\n+\t(d_comdat_group): Use DECL_ASSEMBLER_NAME for the comdat group.\n+\t(d_comdat_linkage): Catch duplicate instantiations of templates, put\n+\tthem in the same comdat group.\n+\t(setup_symbol_storage): Mark templates not to be written as abstract.\n+\t(d_finish_function): Don't send DECL_ABSTRACT_P functions to backend.\n+\t(d_finish_compilation): Mark all symbols as needed.\n+\n+\t* d-objfile.cc: Remove redundant bool parameter from all lowering\n+\troutines for symbols, update all callers.\n+\n+2016-02-22  Eugene Wissner <belka@caraus.de>\n+\n+\t* d-lang.cc (d_init): Remove short_double parameter from\n+\tbuild_common_tree_nodes.\n+\n+2016-02-20  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* intrinsics.def: Split signature macros into three groups.\n+\tAttributes, types, and helper generators.\n+\t* d-elem.cc (needsPostblit): Change signature to return boolean,\n+\tupdated all callers.\n+\t(AssignExp::toElem): Don't assign destination to a temporary in\n+\tarraycopy call.\n+\t* toir.cc (IRVisior::visit(ThrowStatement)): Use NOP_EXPR cast to\n+\tconvert thrown exception to Object.\n+\t(IRVisitor::visit(TryCatchStatement)): Use NOP_EXPR cast to convert\n+\tcaught Object to thrown exception.\n+\t* d-codegen.cc (void_okay_p): Lazily build the convert to type.\n+\t* d-lang.cc (parse_int): Remove function.\n+\t(d_handle_option): Use integral_argument to parse numbers.\n+\n+\t* d-codegen.cc (lower_struct_comparison): Built custom type if\n+\tlang_hooks.types.type_for_mode returns nothing.\n+\t* d-lang.cc (d_type_for_mode): Always support cent/ucent modes.\n+\t(d_type_for_size): Add support for cent/ucent precision types.\n+\t(d_signed_or_unsigned_type): Always support cent/ucent precisions.\n+\n+\t* d-codegen.cc (d_build_call): Remove type promotion handling for\n+\tvariadic arguments.\n+\t(expand_intrinsic_vaarg): Likewise.\n+\t* d-lang.cc (d_type_promotes_to): Likewise.\n+\n+\t* d-elem.cc (AddrExp::toElem): Take address of the static const symbol\n+\tfor the struct literal,  not the const constructor.\n+\t(CallExp::toElem): Don't pass generated static struct literal symbol\n+\tas the object parameter for DotVar call expressions.\n+\n+\t* d-codegen.cc (type_va_array): New function.\n+\t(declaration_type_kind): Remove function.\n+\t(declaration_reference_p): New function, update all callers of\n+\tdeclaration_type_kind.\n+\t(argument_type_kind): Remove function.\n+\t(argument_reference_p): New function, update all callers of\n+\targument_type_kind.\n+\t(build_address): Remove special handling of static array va_list.\n+\t* d-codegen.h (type_kind): Remove enum.\n+\n+2016-02-18  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (build_condition): New function.  Update all callers\n+\tthat generate a COND_EXPR that returns a value to use it.\n+\t(build_vcondition): New function.  Update all callers that generate a\n+\tvoid COND_EXPR to use it.\n+\t* toir.cc (IRVisitor::visit(DoStatement)): Build a COND_EXPR instead\n+\tof an EXIT_EXPR to break from the loop.\n+\t(IRVisitor::visit(ForStatement)): Likewise.\n+\n+2016-02-14  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-elem.cc: Remove redundant IRState parameter from all lowering\n+\troutines for expressions, update all callers.\n+\n+2016-02-07  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (build_array_set): Use POSTINCREMENT_EXPR to adjust\n+\tarray pointer.\n+\t(identity_compare_p): New function.\n+\t(build_struct_memcmp): Refactor into ...\n+\t(lower_struct_comparison): ... New function.\n+\t(build_struct_comparison): New function.\n+\t(build_array_struct_comparison): New function.\n+\t* d-elem.cc (IdentityExp::toElem): Use build_struct_comparison for\n+\tRECORD_TYPE values.\n+\t(EqualExp::toElem): Likewise.\n+\tUse memcmp for array of structs that pass test for identity_compare_p,\n+\tor fallback to build_array_struct_comparison.\n+\t(NewExp::toElem): Remove setting of StructLiteralExp::fillHoles.\n+\t(StructLiteralExp::toElem): Ignore StructLiteralExp::fillHoles, unless\n+\tbuilding a union literal.\n+\n+2016-02-03  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-elem.cc (AssignExp::toElem): Pass parameters for arraycopy and\n+\tarrayassign in the correct order.\n+\n+2016-01-31  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* longdouble.h (longdouble): Use one contiguous array for the\n+\treal_value data payload.\n+\n+2016-01-23  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* toir.cc (IRVisitor::visit (ExtAsmStatement): Do validation of input\n+\tand output constraints, marking operands as addressable if requested.\n+\n+2016-01-10  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (empty_aggregate_p): New function.\n+\t(d_build_call): Don't pass empty aggregates by value.\n+\t(build_struct_memcmp): Don't compare empty aggregates by value.\n+\t* d-elem.cc (IdentityExp::toElem): Likewise.\n+\t(EqualExp::toElem): Likewise.\n+\t* (StructLiteralExp::toElem): Don't create temporaries or initialize\n+\tholes for empty\taggregates.\n+\t* d-lang.cc (empty_modify_p): New function.\n+\t(d_gimplify_expr): Remove assignments that involve empty aggregates.\n+\n+2016-01-09  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-builtins.cc (d_builtin_type): Define DEF_FUNCTION_TYPE_9,\n+\tDEF_FUNCTION_TYPE_10, and DEF_FUNCTION_TYPE_11.\n+\t(d_init_builtins): Likewise.\n+\t* d-longdouble.cc (machineMode): Remove function.\n+\t(longdouble::init): Don't use initialize real format by reference.\n+\t(longdouble::operator+): Use real_arithmetic instead of\n+\tREAL_ARITHMETIC.\n+\t(longdouble::operator-): Likewise.\n+\t(longdouble::operator*): Likewise.\n+\t(longdouble::operator/): Likewise.\n+\t(longdouble::operator%): Likewise.\n+\t* d-port.cc (Port::isSignallingNan): Use REAL_VALUE_ISSIGNALING_NAN.\n+\t(Port::fequal): Use real_identical instead of REAL_VALUES_IDENTICAL.\n+\t* d-target.cc: Include stor-layout.h header.\n+\t* lang.opt: Remove documentation for switches defined elsewhere.\n+\n+2016-01-09  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (get_libcall): Use set_call_expr_flags to apply runtime\n+\tfunction attributes.\n+\t* d-codegen.h (LibCallFlag): Remove type.\n+\t* runtime.def: Replace LibCallFlag with ECF everywhere.\n+\n+\f\n+Copyright (C) 2016 Free Software Foundation, Inc.\n+\n+Copying and distribution of this file, with or without modification,\n+are permitted in any medium without royalty provided the copyright\n+notice and this notice are preserved."}, {"sha": "4f64c317a9efe1d5a25a153ff39d6854a1a307f3", "filename": "gcc/d/ChangeLog-2017", "status": "added", "additions": 1175, "deletions": 0, "changes": 1175, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2FChangeLog-2017", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2FChangeLog-2017", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2FChangeLog-2017?ref=b4c522fabd0df7be08882d2207df8b2765026110", "patch": "@@ -0,0 +1,1175 @@\n+2017-12-23  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* intrinsics.def (INTRINSIC_MULUI): Declare.\n+\n+2017-12-19  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (build_target_expr): Update signature.\n+\t(force_target_expr): New function.\n+\t(build_address): Use force_target_expr to store temporary.\n+\t(d_build_call): Likewise.\n+\t* d-lang.cc (d_gimplify_expr): Likewise.\n+\t* d-tree.h (language_function): Update type for vars_in_scope from\n+\tvec<VarDeclaration*> to vec<tree>.\n+\t(force_target_expr): Declare.\n+\t* decl.cc (DeclVisitor::visit(VarDeclaration)): Put vars with scope\n+\tdestructors into a TARGET_EXPR, setting its cleanup.\n+\t(declare_local_var): Don't push vars with scope destructors into the\n+\tfunction binding level.\n+\t* expr.cc (ExprVisitor::visit(DeclarationExp)): Don't handle scope\n+\tdestructors.\n+\t(ExprVisitor::visit(CallExp)): Handle calling constructors using\n+\ttemporary objects.\n+\t(build_dtor_list): Remove function.\n+\t(build_expr_dtor): Put result into a CLEANUP_POINT_EXPR if any new\n+\ttemporaries needing destruction were added to scope.\n+\t(build_return_dtor): Likewise.\n+\t* toir.cc (add_stmt): Set CLEANUP_POINT_EXPR type as void.\n+\n+2017-12-19  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-attribs.c (attr_noreturn_exclusions): New array.\n+\t(attr_returns_twice_exclusions, attr_const_pure_exclusions): Likewise.\n+\t(attr_inline_exclusions, attr_noinline_exclusions): Likewise.\n+\t(d_langhook_common_attribute_table): Swap affects_identity and handler\n+\tfields.  Initialize new member of struct attribute_spec.\n+\t(d_langhook_attribute_table): Likewise.\n+\t(handle_weakref_attribute): Remove function.\n+\n+2017-12-17  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (stabilize_expr): Handle assignment expressions.\n+\t(get_frame_for_symbol): Adjust the 'this' field of frames of\n+\toverridden interface functions.\n+\t* d-diagnostic.cc (expand_format): Rewrite '%X' format as '%x'.\n+\t* decl.cc (DeclVisitor::visit(ClassDeclaration)): Handle future\n+\tattribute.\n+\t* expr.cc (ExprVisitor::binop_assignment): Ensure RHS is evaluated\n+\tbefore LHS.\n+\t(ExprVisitor::visit(SliceExp)): Always save lower bounds if upper has\n+\tany side effects.\n+\t* typeinfo.cc (TypeInfoVisitor::TypeInfoClassDeclaration): Use\n+\tClassDeclaration::isAbstract.\n+\t(TypeInfoVisitor::visit(TypeInfoTupleDeclaration)): Mark internal\n+\treference as public and hidden.\n+\n+2017-12-10  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (build_alignment_field): Set DECL_PADDING_P and\n+\tDECL_FIELD_CONTEXT on generated fields.\n+\t(build_struct_literal): Use build_zero_cst to generate padding.\n+\t* decl.cc (build_type_decl): Set public and decl assembler name.\n+\n+2017-12-10  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* types.cc (TypeVisitor::visit(TypeClass)): Check for duplicate\n+\tdeclarations before adding method.\n+\n+2017-12-09  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* expr.cc (ExprVisitor::visit(AddrExp)): Build internal struct literal\n+\tsymbol before generating its initializer.\n+\n+2017-12-09  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-lang.cc (d_parse_file): Set first_global_object_name.\n+\n+2017-12-09  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* lang.opt (fmodule-filepath=): Rename to fmodule-file.\n+\t* d-lang.cc (d_handle_option): Update case for OPT_fmodule_file_.\n+\n+2017-12-09  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-tree.h (CALL_EXPR_ARGS_ORDERED): Define.\n+\t* d-codegen.cc (d_build_call): Set CALL_EXPR_ARGS_ORDERED for\n+\tfunctions with D linkage.\n+\t* d-lang.cc (d_gimplify_expr): Handle CALL_EXPR_ARGS_ORDERED.\n+\n+2017-12-09  Eugene Wissner  <belka@caraus.de>\n+\n+\t* toir.cc (IRVisitor::visit(SwitchStatement)): Set SWITCH_ALL_CASES_P on\n+\tswitch statements. Set SWITCH_BREAK_LABEL_P on the artificial label\n+\tcreated for break statements from a switch.\n+\n+2017-12-04  Eugene Wissner  <belka@caraus.de>\n+\n+\t* toir.cc (IRVisitor::visit(SwitchStatement)): Build SWITCH_EXPR using build2 instead\n+\tof build3.\n+\n+2017-11-14  Eugene Wissner  <belka@caraus.de>\n+\n+\t* decl.cc (finish_thunk): Drop frequency argument from\n+\tsymbol_table::create_edge.\n+\t* d-lang.cc (d_post_options): Set default value of\n+\t-Wreturn-type to false.\n+\n+2017-11-11  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (build_float_cst): Remove float rounding check.\n+\t* d-longdouble.cc (longdouble::to_int): Don't round floats before int\n+\tconversion.\n+\t* expr.cc (ExprVisitor::binary_op): Handle excess precision.\n+\t(ExprVisitor::visit(NegExp)): Likwise.\n+\n+2017-10-31  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (build_address): Store CST nodes into a TARGET_EXPR\n+\tbefore taking its address.\n+\n+2017-10-08  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* Make-lang.in (D_FRONTEND_OBJS): Remove newdelete.o.\n+\t* d-incpath.cc (add_globalpaths): Handle NULL target path.\n+\n+2017-10-01  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* typeinfo.cc (TypeInfoVisitor::visit(TypeInfoClassDeclaration)):\n+\tProperly check base classes for pointers.\n+\n+2017-09-28  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* expr.cc (ExprVisitor::visit(StringExp)): Add extra null terminator\n+\tonto string type, not the literal.\n+\n+2017-09-26  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* types.cc (make_array_type): Move checking of void static arrays\n+\there.\n+\n+2017-09-24  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-attribs.c: Add include for attribs.h.\n+\t* d-codegen.cc (copy_aggregate_type): Remove TYPE_METHODS.\n+\t(lower_struct_comparison): Use opt_scalar_int_mode.\n+\t* d-target.cc (Target::_init): Use TYPE_MAX_VALUE instead of\n+\tTYPE_MAXVAL.\n+\t(Target::isVectorTypeSupported):  Update call to\n+\tscalar_mode_supported_p.\n+\t* decl.cc (DeclVisitor::visit(Import)): Pass false as new argument to\n+\tthe imported_module_or_decl hook.\n+\t* types.cc (TypeVisitor::visit(TypeClass)): Remove TYPE_METHODS.\n+\n+2017-09-14  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* Make-lang.in (D_FRONTEND_OBJS): Add blockexit.o, initsem.o,\n+\tinlinecost.o, safe.o, staticcond.o, and typesem.o.\n+\t* d-attribs.c (uda_attribute_p): Use get_identifier to compare\n+\tstrings.\n+\t(build_attributes): Handle empty string expressions.\n+\t* d-builtins.cc (build_frontend_type): Use static create methods to\n+\t'new' front-end types, expressions, and declarations.\n+\t(d_eval_constant_expression): Likewise.\n+\t(build_alias_declaration): Likewise.\n+\t(d_build_builtins_module): Likewise.\n+\t* d-codegen.cc (declaration_type): Likewise.\n+\t(type_passed_as): Likewise.\n+\t(get_frame_for_symbol): Remove dependency on id.h.\n+\t(get_frameinfo): Don't overwrite FRAMEINFO_CREATES_FRAME if function\n+\thas nested frame references.\n+\t* d-convert.cc (convert_for_assignment): Allow static arrays to be\n+\tinitialized with a zero integer value.\n+\t* d-frontend.cc (genCmain): Remove dependency on id.h.\n+\t* d-frontend.h (initializerToExpression): Add declaration.\n+\t(gendocfile): Add declaration.\n+\t(initTraitsStringTable): Remove.\n+\t* d-lang.cc (deps_write): Remove dependency on id.h.\n+\t(deps_add_target): Don't call StringTables's destructor.\n+\t(d_init): Remove calls to deleted front-end initialize functions.\n+\t* decl.cc (DeclVisitor::visit(PragmaDeclaration)): Remove dependency\n+\ton id.h.\n+\t(DeclVisitor::visit(VarDeclaration)): Call initializerToExpression to\n+\tget the initializer of decl.\n+\t(build_decl_tree): Remove dependency on id.h.\n+\t(layout_class_initializer): Use static create method to 'new'\n+\tfront-end expression.\n+\t* expr.cc (ExprVisitor::visit(AssignExp)): Handle static array\n+\tassignment where RHS is integer zero.\n+\t(ExprVisitor::visit(VarExp)): Remove dependency on id.h.\n+\t(ExprVisitor::visit(StringExp)): Handle empty string expressions.\n+\t* modules.cc (get_internal_fn): Use FuncDeclaration::genCfunc to\n+\tcreate function decl.\n+\t(build_module_tree): Remove dependency on id.h.\n+\t* toir.cc (IRVisitor::visit(ExtAsmStatement)): Handle empty string\n+\texpressions.\n+\t* typeinfo.cc (make_frontend_typeinfo): Use static create methods to\n+\t'new' front-end declarations.\n+\t(create_tinfo_types): Remove dependency on id.h.\n+\t(get_cpp_typeinfo_decl): Likewise.\n+\t(create_typeinfo): Likewise.\n+\n+2017-08-23  Johannes Pfau  <johannespfau@gmail.com>\n+\n+\t* typeinfo.cc (TypeInfoVisitor::visit(TypeInfoStructDeclaration)): Do\n+\tnot send member functions to backend here.\n+\n+2017-08-19  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-convert.cc (convert_expr): Use build_zero_cst for casts from\n+\ttypeof(null).\n+\n+2017-08-13  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-target.cc (Target::isVectorOpSupported): Disallow vectors in\n+\tconditional and logical operators.\n+\n+2017-08-08  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* intrinsics.cc (maybe_expand_intrinsic): Handle isNaN(), isInfinity()\n+\tand isFinite() intrinsics.\n+\t* intrinsics.def: Add INTRINSIC_ISNAN, INTRINSIC_ISINFINITY, and\n+\tINTRINSIC_ISFINITE.\n+\n+2017-08-08  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* intrinsics.cc (expand_intrinsic_popcnt): New function.\n+\t(maybe_expand_intrinsic): Handle INTRINSIC_POPCNT.\n+\t* intrinsics.def (INTRINSIC_POPCNT): Declare.\n+\n+2017-08-06  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-frontend.cc (isBuiltin): Remove restriction on builtins.\n+\t(eval_builtin): Check DECL_INTRINSIC_CODE.\n+\t* d-tree.h (intrinsic_code): Add enum declaration.\n+\t(lang_decl): Add intrinsic field.\n+\t(DECL_INTRINSIC_CODE): New macro.\n+\t(DECL_BUILT_IN_CTFE): New macro.\n+\t* decls.cc (get_symbol_decl): Initialize DECL_INTRINSIC_CODE.\n+\t* intrinsics.cc (intrinsic_decl): Add ctfeonly field.\n+\t(maybe_set_intrinsic): Set frontend builtin flag only if the function\n+\tis CTFE-able.  Set BUILT_IN_FRONTEND if function has no body.\n+\t(clear_intrinsic_flag): Clear DECL_INTRINSIC_CODE instead of frontend\n+\tbuiltin flag.\n+\t(maybe_expand_intrinsic): Handle INTRINSIC_TAN intrinsics.\n+\tCall clear_intrinsic_flag on CTFE built-ins if semantic has finished.\n+\t* intrinsics.def: Add INTRINSIC_TAN.\n+\t(DEF_D_BUILTIN): New macro.\n+\t(DEF_CTFE_BUILTIN): New macro.\n+\n+2017-08-06  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* decl.cc (DeclVisitor::visit): Don't set input_location.\n+\t(build_decl_tree): Handle set and restore of input_location.\n+\t(declare_local_var): Don't set input_location.\n+\t* expr.cc (build_expr): Handle set and restore of input_location.\n+\t* imports.cc (build_import_decl): Likewise.\n+\t* modules.cc (get_dso_registry_fn): Use UNKNOWN_LOCATION for\n+\tdeclaration of _d_dso_registry.\n+\t* runtime.cc (build_libcall_decl): Use UNKNOWN_LOCATION for\n+\tdeclaration of library functions.\n+\t* toir.cc (IRVisitor::visit): Don't set input_location.\n+\t(IRVisitor::build_stmt): New function.\n+\t(IRVisitor::do_jump): Update signature.\n+\t(build_function_body): Use IRVisitor::build_stmt.\n+\t* typeinfo.cc (layout_classinfo_interfaces): Don't set input_location.\n+\t* types.cc (layout_aggregate_members): Likewise.\n+\t(layout_aggregate_type): Likewise.\n+\n+2017-08-05  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (build_boolop): Handle VECTOR_TYPE comparisons.\n+\t* d-target.cc (Target::checkVectorType): Rename to\n+\tTarget::isVectorTypeSupported.\n+\t(Target::isVectorOpSupported): New function.\n+\t* expr.cc (ExprVisitor::visit(IdentityExp)): Don't memcmp floating\n+\tpoint vectors.\n+\t(ExprVisitor::visit(CmpExp)): Handle always true or always false\n+\tvector comparisons.\n+\n+2017-08-02  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* typeinfo.cc (SpeculativeTypeVisitor::visit(TypeClass)): Don't emit\n+\ttypeinfo for speculative class types.\n+\n+2017-07-29  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-lang.cc (build_lang_decl): Handle compiler generated typeinfo that\n+\talso appear in code.\n+\t* d-tree.h (lang_identifier): Add decl_tree.\n+\t(IDENTIFIER_DECL_TREE): New macro.\n+\t* decl.cc (declare_extern_var): Re-use already generated decl if\n+\tcalled with the same identifier twice.\n+\n+2017-07-29  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* decl.cc (d_finish_decl): Replace ENABLE_TREE_CHECKING macro with\n+\tflag_checking.\n+\n+2017-07-28  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-tree.h (D_DECL_ONE_ONLY): Remove macro accessor.\n+\t* decl.cc (DeclVisitor::visit(StructDeclaration)): Move call to\n+\td_comdat_linkage here.\n+\t(DeclVisitor::visit(ClassDeclaration)): Likewise.\n+\t(DeclVisitor::visit(InterfaceDeclaration)): Likewise.\n+\t(DeclVisitor::visit(EnumDeclaration)): Likewise.\n+\t(get_symbol_decl): Move call to mark_needed here.\n+\t(declare_extern_var): Mark compiler generated symbols as needed.\n+\t(make_thunk): Remove copy of D_DECL_ONE_ONLY.\n+\t(get_vtable_decl): Don't call d_comdat_linkage.\n+\t(aggregate_initializer_decl): Likewise.\n+\t(enum_initializer_decl): Likewise.\n+\t* modules.cc (d_finish_compilation): Don't call mark_needed.\n+\t* typeinfo.cc (get_classinfo_decl): Don't call d_comdat_linkage.\n+\n+2017-07-28  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-spec.c (lang_specific_driver): Always add `-o' option when\n+\tcompiling D sources.\n+\n+2017-07-28  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-frontend.cc (genCmain): Don't error if entrypoint not found.\n+\n+2017-07-18  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-lang.cc (d_types_compatible_p): Check that both types are\n+\tRECORD_TYPE before using record-specific flag comparison.\n+\n+2017-07-15  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-builtins.cc (d_build_d_type_nodes): Set TYPE_DYNAMIC_ARRAY on\n+\tarray_type_node.\n+\t* d-codegen.cc (build_delegate_cst): Set TYPE_DELEGATE on internal\n+\tdelegate constant types.\n+\t* d-frontend.h (cppTypeInfoMangle): Remove declaration.\n+\t(toCppMangleItanium): Add declaration.\n+\t(cppTypeInfoMangleItanium): Add declaration.\n+\t* d-lang.cc (d_types_compatible_p): Use type flags to determine\n+\tcompatibility.  Return false instead of doing size comparison.\n+\t* d-target.cc (Target::toCppMangle): New function.\n+\t(Target::cppTypeInfoMangle): New function.\n+\t(Target::cppTypeMangle): New function.\n+\t(Target::systemLinkage): New function.\n+\t* d-tree.h (TYPE_DYNAMIC_ARRAY): New macro.\n+\t(TYPE_DELEGATE): New macro.\n+\t(TYPE_ASSOCIATIVE_ARRAY): New macro.\n+\t* typeinfo.cc (layout_cpp_typeinfo): Use Target::cppTypeInfoMangle.\n+\t* types.cc (TypeVisitor::visit(TypeDArray)): Set TYPE_DYNAMIC_ARRAY.\n+\t(TypeVisitor::visit(TypeAArray)): Set TYPE_ASSOCIATIVE_ARRAY.\n+\t(TypeVisitor::visit(TypeDelegate)): Set TYPE_DELEGATE.\n+\n+2017-07-11  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-target.cc (Target::loadModule): Check module identifier if a\n+\tdeclaration doesn't exist.\n+\t* typeinfo.cc (make_frontend_typeinfo): Use module location instead if\n+\ta declaration doesn't exist.\n+\n+2017-06-28  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-frontend.cc (CTFloat::hash): New function.\n+\n+2017-06-25  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (d_array_string): Remove function.\n+\t(d_assert_call): Inline implementation of d_array_string here.\n+\t* d-tree.h (d_array_string): Remove declaration.\n+\t* typeinfo.cc (TypeInfoVisitor::layout_string): New function.\n+\t(TypeInfoVisitor::visit): Update calls to d_array_string to use\n+\tlayout_string instead.\n+\n+2017-06-25  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* toir.cc (IRVisitor::visit(ExtAsmStatement)): Set ASM_VOLATILE_P only\n+\tif statement is not marked with pure attribute.\n+\n+2017-06-25  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-lang.cc (d_parse_file): Print all predefined version identifiers\n+\tif verbose.\n+\n+2017-06-24  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-frontend.cc (Global::_init): Remove memset for global.params.\n+\n+2017-06-24  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* Make-lang.in (D_ALL_OBJS): Add D_TARGET_OBJS.\n+\t* d-builtins.cc (d_add_builtin_version): Move here from d-lang.cc.\n+\t(d_init_versions): New function.\n+\t* d-lang.cc (d_init): Call d_init_versions.\n+\t* d-target-def.h: New file.\n+\t* d-target.cc (Target::critsecsize): Replace with call to\n+\ttargetdm.critsec_size.\n+\t* d-target.def: New file.\n+\t* d-target.h: New file.\n+\t* d-tree.h (d_init_versions): Add declaration.\n+\n+2017-06-20  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* expr.cc (ExprVisitor::visit(BinAssignExp)): Strip promotions from\n+\tboth signed and unsigned rshift assignments.\n+\n+2017-06-17  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-diagnostic.cc (expand_format): New function.\n+\t(d_diagnostic_report_diagnostic): New function.\n+\t(error, verror): Update format attributes.  Use function\n+\td_diagnostic_report_diagnostic instead of xvasprintf.\n+\t(errorSupplemental, verrorSupplemental): Likewise.\n+\t(warning, vwarning): Likewise.\n+\t(warningSupplemental, vwarningSupplemental): Likewise.\n+\t(deprecation, vdeprecation): Likewise.\n+\t(deprecationSupplemental, vdeprecationSupplemental): Likewise.\n+\n+2017-06-15  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* expr.cc (ExprVisitor::visit(AssertExp)): Don't call invariant on\n+\tinterface objects.\n+\n+2017-06-12  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* expr.cc (ExprVisitor::visit(DelegateExp)): Convert object to right\n+\ttype before using it.\n+\n+2017-06-12  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-decls.cc (get_decl_tree): Find the first parent member function\n+\tbefore constructing non-local `this' decl.\n+\n+2017-06-10  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-builtins.cc (build_frontend_type): Allow all vector types to be\n+\tincluded in builtins module.\n+\n+2017-06-09  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* types.cc (TypeVisitor::visit(TypeStruct)): Let struct alignment\n+\toverride the alignsize.\n+\n+2017-06-09  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (d_decl_context): Use origin template declaration as\n+\tcontext for instantiated type symbols.\n+\n+2017-06-08  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-attribs.c (d_handle_weak_attribute): Use quoted string format.\n+\t* decls.cc (finish_thunk): Update call to create_edge for new API.\n+\n+2017-06-08  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* expr.cc (ExprVisitor::visit(StringExp)): Create string type that is\n+\tsame length as string value literal.\n+\n+2017-05-27  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* Make-lang.in (D_FRONTEND_OBJS): Rename object.o to rootobject.o.\n+\n+2017-05-26  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* decl.cc: Remove include for dumpfile.h.\n+\t(finish_function): Use dump_function to for dumping original ASTs.\n+\n+2017-05-24  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* config-lang.in (gtfiles): Add typeinfo.cc.\n+\t* d-codegen.cc (d_build_call_list): Remove function.\n+\t(d_build_call_nary): Remove function.\n+\t(build_binary_op): Remove function.\n+\t(build_binop_assignment): Remove function.\n+\t(build_vthis_type): Rename to build_vthis_function.\n+\t(create_field_decl): Move to decl.cc.\n+\t* d-lang.cc (genCmain): Moved to d-frontend.cc.\n+\t(builtin_modules): Declare static.\n+\t(d_add_builtin_module): New function.\n+\t(d_add_entrypoint_module): New function.\n+\t* expr.cc (ExprVisitor::binary_op): New function.\n+\t(ExprVisitor::binop_assignment): New function.\n+\t* intrinsic.cc (expand_intrinsic): Rename to maybe_expand_intrinsic.\n+\t* runtime.cc (build_libcall): Updated signature.\n+\t* types.cc (make_two_field_type): Remove function.\n+\t(make_struct_type): New function.\n+\n+2017-05-22  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* Make-lang.in (D_OBJS): Add intrinsics.o and runtime.o.\n+\t* d-codegen.h: Remove file.\n+\t* intrinsics.cc: New file.\n+\t* runtime.cc: New file.\n+\n+2017-05-21  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc: Remove include for d-dmd-gcc.h.\n+\t* d-dmd-gcc.h: Rename to d-frontend.h.  Update all includes.\n+\t* d-frontend.cc (Global::_init): Remove unnecessary initialization.\n+\t* expr.cc: Remove include for d-dmd-gcc.h.\n+\n+2017-05-21  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-attribs.c (handle_sentinel_attribute): Remove function.\n+\t(ignore_attribute): Remove function.\n+\t(d_langhook_common_attribute_table): Remove sentinel and tm regparm\n+\tfrom common attribute table.\n+\t(d_langhook_format_attribute_table): Remove variable.\n+\t* d-lang.cc (LANG_HOOKS_BUILTIN_FUNCTION_EXT_SCOPE): Remove macro.\n+\t(LANG_HOOKS_FORMAT_ATTRIBUTE_TABLE): Remove macro.\n+\t(d_post_options): Don't set flag_unit_at_a_time.\n+\t(d_nametype): Remove function.\n+\t* types.cc (TypeVisitor::visit(TypeBasic)): Set TYPE_NAME.\n+\t(TypeVisitor::visit(TypeVector)): Likewise.\n+\n+2017-05-20  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* Make-lang.in (D_OBJS): Remove d-objfile.o.  Add modules.o.\n+\t* d-codegen.cc (get_linemap): Move function here.\n+\t* d-objfile.cc: Remove file.\n+\t* d-objfile.h: Remove header.\n+\t* d-tree.h (GDC_PREFIX): New macro.\n+\t* decl.cc (make_internal_name): Rename to mangle_internal_decl.\n+\t(DeclVisitor): Move class here.\n+\t(gcc_attribute_p): Move function here.\n+\t(build_decl_tree): Likewise.\n+\t(d_finish_decl): Likewise.\n+\t(start_function): Likewise.\n+\t(finish_function): Likewise.\n+\t(mark_needed): Likewise.\n+\t(base_vtable_offset): Likewise.\n+\t(build_artificial_decl): Likewise.\n+\t(build_type_decl): Likewise.\n+\t(d_comdat_group): Likewise.\n+\t(d_comdat_linkage): Likewise.\n+\t(add_moduleinfo_field): Move to modules.cc\n+\t(layout_moduleinfo_fields): Likewise.\n+\t(get_moduleinfo_decl): Likewise.\n+\t* modules.cc: New file.\n+\n+2017-05-10  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* imports.cc (ImportVisitor::visit(Import)): New function.\n+\n+2017-05-06  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-objfile.cc (DeclVisitor::visit(Module)): Set input_location before\n+\twalking module members.\n+\t(get_linemap): Return input_location if no filename set.\n+\t(set_input_location): Remove function.  Update all callers to set\n+\tinput_location directly.\n+\t(set_decl_location): Remove function.  Update all callers to pass\n+\tget_linemap to build_decl, or use input_location.\n+\t* types.cc (insert_aggregate_field): Update signature.\n+\n+2017-04-30  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-objfile.cc (start_function): Update signature.\n+\t(finish_function): Update signature.\n+\t(DeclVisitor::visit(FuncDeclaration)): Move function construction to\n+\tstart_function.  Move function finalization to finish_function.\n+\t(set_function_end_locus): Remove function.\n+\t(d_finish_function): Remove function.\n+\t(build_simple_function_decl): Don't set frontend body.\n+\t(build_simple_function): Update signature.  Use start/finish function\n+\tto compile the body.\n+\t(emit_dso_registry_cdtor): Likewise.\n+\t* expr.cc (ExprVisitor::visit(WrappedExp)): Remove function.\n+\n+2017-04-29  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-diagnostic.cc (verror): Use xvasprintf.\n+\t(verrorSupplemental): Likewise.\n+\t(vwarning): Likewise.\n+\t(vwarningSupplemental): Likewise.\n+\t(vdeprecation): Likewise.\n+\t(vdeprecationSupplemental): Likewise.\n+\n+2017-04-24  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-tree.h (d_tree_index): Add DTI_VTABLE_ENTRY_TYPE,\n+\tDTI_VTBL_INTERFACE_TYPE, DTI_ARRAY_TYPE, and DTI_NULL_ARRAY.\n+\t(vtable_entry_type): New macro.\n+\t(vtbl_interface_type_node): New macro.\n+\t(array_type_node): New macro.\n+\t(null_array_node): New macro.\n+\t* d-builtins.cc (d_build_d_type_nodes): Initialize new trees.\n+\t* d-codegen.cc (build_struct_literal): Allow NULL index when\n+\tlooking for next field to initialize.\n+\t(copy_aggregate_type): New function.\n+\t* d-target.cc (Target::loadModule): Look for object module,\n+\tcall create_tinfo_types.\n+\t* decl.cc (TypeInfoDeclVisitor): Move to typeinfo.cc.\n+\t(get_typeinfo_decl): Likewise.\n+\t(copy_struct): Remove function.  Updated callers to use\n+\tcopy_aggregate_type.\n+\t(layout_classinfo_interfaces): Move to typeinfo.cc.\n+\t(get_classinfo_decl): Likewise.\n+\t(get_cpp_typeinfo_decl): Likewise.\n+\t* typeinfo.cc (tinfo_kind): New enum.\n+\t(tinfo_types): New static variable.\n+\t(get_typeinfo_kind): New function.\n+\t(make_internal_typeinfo): New function.\n+\t(make_frontend_typeinfo): New function.\n+\t(create_tinfo_types): New function.\n+\t(TypeInfoVisitor::set_field): Remove function.\n+\tUpdate all callers to use layout_field.\n+\t(TypeInfoVisitor::layout_vtable): Remove function.\n+\tUpdate all callers to use layout_base.\n+\t(TypeInfoVisitor::layout_field): New function.\n+\t(TypeInfoVisitor::layout_base): New function.\n+\t(builtin_typeinfo_p): New function.\n+\t(genTypeInfo): Rename to create_typeinfo.\n+\t(isSpeculativeType): Rename to speculative_type_p.\n+\n+2017-04-23  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-tree.h (d_function_chain): Declare macro.  Update all uses of\n+\t`cfun->language' to use it.\n+\n+2017-04-22  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-decls.cc: Rename to decl.cc.\n+\t(get_symbol_decl): Handle typeinfo declarations.\n+\t(declare_extern_var): New function.\n+\t(declare_local_var): New function.\n+\t(get_moduleinfo_decl): Call declare_extern_var.\n+\t(get_classinfo_decl): Likewise.\n+\t(get_vtable_decl): Likewise.\n+\t(get_cpp_typeinfo_decl): Likewise.\n+\t(aggregate_initializer_decl): Likewise.\n+\t(enum_initializer_decl): Likewise.\n+\t* Make-lang.in (D_OBJS): Update.\n+\t* d-codegen.cc (build_local_var): Remove function.\n+\tUpdated all callers to use declare_local_var.\n+\t(build_local_temp): Move to decl.cc.\n+\t(get_decl_tree): Likewise.\n+\t(expand_decl): Remove function.\n+\t(build_closure): Inline expand_decl here.\n+\n+2017-04-20  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (pop_binding_label): Move to toir.cc.\n+\t(pop_label): Likewise.\n+\t(push_binding_level): Likewise\n+\t(pop_binding_level): Likewise.\n+\t(push_stmt_list): Likewise.\n+\t(add_stmt): Likewise.\n+\t(check_goto): Move to toir.cc, make it a member of IRVisitor.\n+\t(check_previous_goto): Likewise.\n+\t(lookup_label): Likewise.\n+\t(lookup_bc_label): Likewise.\n+\t(define_label): Likewise.\n+\t* toir.cc (build_ir): Rename to build_function_body.\n+\n+2017-04-19  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-target.cc: Update includes.\n+\n+2017-04-19  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* lang-specs.h: Remove capitalized D source suffixes.\n+\n+2017-04-19  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* lang-specs.h: Add rule for forwarding -iprefix and -imultilib to the\n+\tcompiler proper.\n+\n+2017-04-19  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* lang-specs.h: Remove cc1d spec.\n+\n+2017-04-19  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* lang-specs.h: Remove +e handling.\n+\n+2017-04-18  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-diagnostic.cc: New file.\n+\t* d-frontend.cc: New file.\n+\t* d-glue.cc: Remove file.\n+\t* d-port.cc: Remove file.\n+\t* d-longdouble.h (template<typename T> operator): Remove operators.\n+\n+2017-04-17  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-incpath.cc (add_env_var_paths): Rename to add_environment_paths.\n+\t(make_absolute): Remove function.\n+\t(add_import_path): Rename to add_globalpaths.\n+\t(add_fileimp_path): Rename to add_filepaths.\n+\n+2017-04-17  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.h (d_types_same): Renamed to same_type_p.\n+\tMoved to types.cc.\n+\t(build_object_type): Renamed to get_object_type.  Moved to types.cc.\n+\t* d-codegen.cc (type_va_array): Renamed to valist_array_p.\n+\tMoved to types.cc.\n+\t(d_array_type): Renamed to make_array_type.  Moved to types.cc.\n+\t(insert_type_modifiers): Moved to types.cc.\n+\t(build_two_field_type): Likewise.\n+\t(empty_aggregate_p): Likewise.\n+\t(fixup_anonymous_offset): Likewise.\n+\t(layout_aggregate_members): Likewise.\n+\t(layout_aggregate_type): Likewise.\n+\t(insert_aggregate_field): Likewise.\n+\t(finish_aggregate_type): Likewise.\n+\n+2017-04-17  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* Make-lang.in (D_FRONTEND_OBJS): Update to match new source names.\n+\n+2017-04-11  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* gdc.texi: Rewrite documentation for manpages.\n+\n+2017-04-08  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-objfile.cc (DeclVisitor::visit(FuncDeclaration)): Remove logic\n+\tthat parent needs to be compiled before nested.\n+\n+2017-04-08  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-lang.cc (d_post_options): Don't overwrite in_fnames.\n+\t(d_parse_file): Don't error about not being able to use stdin.\n+\tImplement support for reading source code from stdin.\n+\n+2017-04-08  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-lang.cc (d_parse_file): Remove invalid file name checks.\n+\n+2017-04-08  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-glue.cc (Global::_init): Set global.stdmsg to stderr.\n+\n+2017-04-07  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codgen.h (current_module_decl): Moved to d-objfile.cc.\n+\t* d-objfile.h (current_module_info): Likewise.\n+\t(ModuleInfoFlags): Likewise.\n+\t(ModuleInfo): Likewise.\n+\t* d-objfile.cc (start_function): Move updating ModuleInfo structure to\n+\t...\n+\t(DeclVisitor::visit(FuncDeclaration)): ... here.  Set it after\n+\tfinishing off the function.\n+\n+2017-04-07  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-objfile.cc (DeclVisitor::visit(FuncDeclaration)): Use\n+\tpush_function_decl for storing current state when switching to nested\n+\tfunctions.  Remove handling of deferred functions.\n+\t* d-tree.h (language_function): Remove deferred_fns.\n+\t* expr.cc (ExprVisitor::visit(DelegateExp)): Don't defer compiling\n+\tthe delegate lambda.\n+\t(ExprVisitor::visit(FuncExp)): Likewise for function literals.\n+\t(ExprVisitor::visit(VarExp)): Likewise.\n+\n+2017-04-07  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (start_function): Move to d-objfile.cc, make it static.\n+\t(end_function): Likewise.  Renamed to finish_function.\n+\n+2017-04-05  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (d_convert): Move to d-convert.cc.\n+\t(convert_expr): Likewise.\n+\t(convert_for_assignment): Likewise.\n+\t(convert_for_argument): Likewise.\n+\t(convert_for_condition): Likewise.\n+\t(d_array_convert): Likewise.\n+\n+2017-04-04  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-builtins.c (d_global_trees): Move to d-lang.cc.\n+\t(build_dtype): Rename to build_frontend_type.\n+\tUpdated all callers.\n+\t(build_expression): Rename to d_eval_constant_expression.\n+\tUpdated all callers.\n+\t(build_alias_declaration): New function.\n+\t(d_build_c_type_nodes): New function.\n+\t(d_build_d_type_nodes): New function.\n+\t(d_define_builtins): New function.\n+\n+2017-04-04  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-attribs.c (insert_type_attribute): Use\n+\tbuild_type_attribute_variant.\n+\t(insert_decl_attribute): Use build_decl_attribute_variant.\n+\t(uda_attribute_p): Remove string table, use Identifier comparison for\n+\tlooking up table attributes.\n+\t(build_attributes): Make unknown attribute a warning, use quoted\n+\tstrings in diagnostic messages.\n+\n+2017-04-01  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-lang.cc (d_handle_option): Handle -fdump-d-original.\n+\t(d_parse_file): Likewise.\n+\t* d-target.cc (Target::maxStaticDataSize): New variable.\n+\t(Target::_init): Initialize maxStaticDataSize.\n+\t* lang.opt (fdump-d-original): Declare.\n+\n+2017-04-01  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* Make-lang.in (D_GLUE_OBJS): Remove d-todt.cc.\n+\t* d-objfile.cc (build_moduleinfo_symbol): Build initializer for\n+\tModuleInfo directly from inferred type fields.\n+\t(d_finish_symbol): Remove handling of DECL_LANG_INITIAL.\n+\t* d-todt.cc: Remove file.\n+\t* d-tree.h (lang_decl): Remove initial field.\n+\t(DECL_LANG_INITIAL): Remove macro.\n+\n+2017-03-31  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-objfile.cc (DeclVisitor::visit(VarDeclaration)): Use build_expr to\n+\tgenerate the static initializer.\n+\t* d-todt.cc (Initializer::toDt): Remove function and all overrides.\n+\t* expr.cc (ExprVisitor::visit(VarExp)): Use build_expr to get the\n+\tconstant initializer of a constant variable.\n+\n+2017-03-29  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-decls.cc (aggregate_initializer): Renamed to\n+\taggregate_initializer_decl.  Updated all callers.\n+\t(enum_initializer): Renamed to enum_initializer_decl.\n+\tUpdated all callers.\n+\t(layout_class_initializer): New function.\n+\t(layout_struct_initializer): New function.\n+\t* d-todt.cc (ClassDeclaration::toDt): Remove function.\n+\t(StructDeclaration::toDt): Remove function.\n+\n+2017-03-27  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-objfile.cc (DeclVisitor::visit(Module)): New function.\n+\t(Module::genobjfile): Remove function.\n+\tUpdated all callers to use build_decl_tree.\n+\t(layout_moduleinfo): New function.\n+\t(Module::genmoduleinfo): Remove function.\n+\tUpdate all callers to use layout_moduleinfo.\n+\n+2017-03-26  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-objfile.cc (base_vtable_offset): New function.\n+\t(ClassDeclaration::baseVtblOffset): Remove function.\n+\tUpdated all callers to use base_vtable_offset.\n+\n+2017-03-26  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-objfile.cc (DeclVisitor): New visitor interface to supercede the\n+\ttoObjFile methods.\n+\t(build_decl_tree): New function.\n+\t(Dsymbol::toObjFile): Remove function and overrides.\n+\tUpdated all callers to use build_decl_tree.\n+\n+2017-03-20  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-decls.cc (get_cpp_typeinfo_decl): New function.\n+\t* d-lang.cc (d_build_eh_type_type): Return classinfo for\n+\t__cpp_type_info_ptr when generating catch for C++ classes.\n+\t* runtime.def (CXA_BEGIN_CATCH): Define.\n+\t(CXA_END_CATCH): Define.\n+\t* toir.cc (IRVisitor::visit(TryCatchStatement)): Support catching\n+\tclasses thrown from C++.\n+\t* typeinfo.cc (layout_cpp_typeinfo): New function.\n+\n+2017-03-20  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-builtins.cc (d_build_builtins_module): Always mark gcc builtins as\n+\tnothrow functions.\n+\n+2017-03-11  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-longdouble.cc (CTFloat::zero): New variable.\n+\t(CTFloat::one): New variable.\n+\t(CTFloat::minusone): New variable.\n+\t(CTFloat::half): New variable.\n+\t(longdouble::set): Remove float and double overloads.\n+\t(longdouble::operator float): Remove function.\n+\t(longdouble::operator double): Remove function.\n+\t* d-target.cc (Target::_init): Initialize floating point constants.\n+\n+2017-03-11  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-lang.cc (d_init): Replace calls to init with _init.\n+\t* d-glue.cc (Global::init): Renamed to Global::_init.\n+\t* d-target.cc (Target::init): Renamed to Target::_init.\n+\n+2017-03-11  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-longdouble.cc (longdouble::format): Remove function.\n+\t(longdouble::formatHex): Remove function.\n+\t(longdouble::dump): Remove function.\n+\t(CTFloat::sprint): Inline implementation of format and formatHex here.\n+\n+2017-03-11  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-lang.cc (d_init): Remove calls to Port::init and longdouble::init.\n+\t* d-longdouble.cc (real_limits): Remove variable.\n+\t(longdouble::init): Remove function.\n+\t(CTFloat::parse): Update to use Target::RealProperties.\n+\t* d-port.cc (Port::ldbl_nan): Remove variable.\n+\t(Port::snan): Remove variable.\n+\t(Port::ldbl_infinity): Remove variable.\n+\t(Port::ldbl_max): Remove variable.\n+\t(Port::init): Remove function.\n+\t(Port::isFloat32LiteralOutOfRange): Update to use\n+\tTarget::RealProperties.\n+\t(Port::isFloat64LiteralOutOfRange): Likewise.\n+\t* d-target.cc (Target::FPTypeProperties<T>::max): Define.\n+\t(Target::FPTypeProperties<T>::min_normal): Define.\n+\t(Target::FPTypeProperties<T>::nan): Define.\n+\t(Target::FPTypeProperties<T>::snan): Define.\n+\t(Target::FPTypeProperties<T>::infinity): Define.\n+\t(Target::FPTypeProperties<T>::epsilon): Define.\n+\t(Target::FPTypeProperties<T>::dig): Define.\n+\t(Target::FPTypeProperties<T>::mant_dig): Define.\n+\t(Target::FPTypeProperties<T>::max_exp): Define.\n+\t(Target::FPTypeProperties<T>::min_exp): Define.\n+\t(Target::FPTypeProperties<T>::max_10_exp): Define.\n+\t(Target::FPTypeProperties<T>::min_10_exp): Define.\n+\t(define_float_constants): New function.\n+\t(Target::init): Initialize compile-time floating point properties.\n+\t* longdouble.h (Mode): Remove type declaration.\n+\t(real_properties): Remove type declaration.\n+\n+2017-03-10  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-longdouble.cc (CTFloat::fabs): New function.\n+\t(CTFloat::isIdentical): New function.\n+\t(CTFloat::isNaN): New function.\n+\t(CTFloat::isSNaN): New function.\n+\t(CTFloat::isInfinity): New function.\n+\t(CTFloat::parse): New function.\n+\t(CTFloat::sprint): New function.\n+\t* d-port.cc (Port::isNan): Remove function.\n+\t(Port::isSignallingNan): Remove function.\n+\t(Port::isInfinity): Remove function.\n+\t(Port::fequal): Remove function.\n+\t(Port::strtof): Remove function.\n+\t(Port::strtod): Remove function.\n+\t(Port::strtold): Remove function.\n+\t(Port::isFloat32LiteralOutOfRange): New function.\n+\t(Port::isFloat64LiteralOutOfRange): New function.\n+\t* longdouble.h (ld_sprint): Remove function.\n+\n+2017-03-06  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-glue.cc (verror): Update to handle -Wspeculative.\n+\t(verrorSupplemental): Likewise.\n+\t* d-lang.cc (d_init_options): Initialize module alias array.\n+\t(d_init_options): Handle -fmodule-filepath= and -Wspeculative.\n+\t* d-port.cc (Port::stricmp): Remove function.\n+\t(Port::writelongLE): New function.\n+\t(Port::writelongBE): New function.\n+\t* lang.opt (Wspeculative): Declare.\n+\t(fmodule-filepath=): Declare.\n+\n+2017-03-06  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-lang.cc (d_handle_option): Handle -ftransition=dip1000\n+\t* lang.opt (ftransition=dip1000): Declare.\n+\t(ftransition=safe): Make alias for -ftransition=dip1000\n+\n+2017-03-04  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (get_decl_tree): Handle chaining over many levels of\n+\tnesting functions to get to the right parent for the 'this' field.\n+\n+2017-03-04  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-decls.cc (get_symbol_decl): Move generation of DECL_ARGUMENTS for\n+\tempty body declarations to ...\n+\t(make_thunk): ... here.  Also set-up DECL_RESULT.\n+\t(finish_thunk): Mark DECL_UNINLINEABLE on external functions.\n+\n+2017-03-04  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-decls.cc (make_thunk): Don't build thunks for functions that\n+\tfailed to compile.\n+\n+2017-03-04  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-objfile.cc (emit_dso_registry_hooks): Set DECL_PRESERVE_P.\n+\n+2017-02-26  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (build_frame_type): Update condition for scope\n+\tdestruction error.\n+\t* d-port.cc (Port::valcpy): New function.\n+\t* expr.cc (ExprVisitor::visit(CallExp)): Generate cast of 'this'\n+\tobject to the right handle type before indexing.\n+\n+2017-02-24  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-glue.cc (warningSupplemental): New function.\n+\t(vwarningSupplemental): New function.\n+\t(deprecationSupplemental): New function.\n+\t(vdeprecationSupplemental): New function.\n+\n+2017-02-23  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* imports.cc (ImportVisitor::visit(OverDeclaration)): New function.\n+\t(ImportVisitor::visit(FuncAliasDeclaration)): New function.\n+\n+2017-02-21  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-lang.cc (d_handle_option): Handle -X and -Xf options.\n+\t(d_parse_file): Update.\n+\t* lang-specs.h: Add rules for -X style options.\n+\t* lang.opt (X): Declare.\n+\t(Xf): Declare.\n+\t(fXf=): Make alias for -Xf.\n+\n+2017-02-21  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* lang.opt (fd-vgc): Comment out help test.\n+\t(fd-verbose): Likewise.\n+\t(fd-vtls): Likewise.\n+\t(femit-modules): Likewise.\n+\n+2017-02-20  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-target.cc (Target::fieldalign): Adjust.\n+\n+2017-02-19  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-lang.cc (d_option_data): Add fields to support other -M options.\n+\t(d_init_options): Initialize them.\n+\t(deps_add_target): New function.\n+\t(deps_write): Support multiple targets and phony rules.\n+\t(d_handle_option): Handle gcc -M style options.\n+\t(d_parse_file): Likewise.\n+\t* lang-specs.h: Add rules for -M style options.\n+\t* lang.opt: Declare -M style options.\n+\n+2017-02-19  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-lang.cc (is_system_module): Remove.\n+\t(deps_write): Always ignore entrypoint module.\n+\n+2017-02-19  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-lang.cc (write_one_dep): Remove.\n+\t(deps_write): Update signature.\n+\n+2017-02-19  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-lang.cc (iprefix_dir): Remove.\n+\t(imultilib_dir): Remove.\n+\t(std_inc): Remove.\n+\t(d_option_data): New struct.\n+\t(d_option): Declare.\n+\t(d_init_options): Initialize d_option.\n+\t(d_init): Update to use d_option.\n+\t(d_handle_option): Likewise.\n+\t(d_parse_file): Likewise.\n+\t(deps_write): Update signature.\n+\n+2017-02-19  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-lang.cc (d_handle_option): Call D_handle_option_auto.\n+\t* lang.opt (Wunknown-pragmas): Turn on warning with -Wall.\n+\n+2017-02-18  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-lang.cc (d_handle_option): Replace -fin with -fpreconditions;\n+\t-fout with -fpostconditions.  Handle -fswitch-errors.\n+\t(d_post_options): Move setting of release code flags here.\n+\t* lang.opt (fassert): Declare flag_assert.\n+\t(fin): Make alias for -fpreconditions.\n+\t(finvariants): Declare flag_invariants.\n+\t(fout): Make alias for -fpostconditions.\n+\t(fpostconditions): Declare.\n+\t(fpreconditions): Declare.\n+\t(fswitch-errors): Declare.\n+\n+2017-02-18  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-objfile.cc (PragmaDeclaration::toObjFile): Warn about unknown\n+\tpragmas only if -Wunknown-pragmas.\n+\n+2017-02-18  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-glue.cc (Global::init): Initialize errorLimit to flag_max_errors.\n+\t(verror): Don't halt program after invocation limit.\n+\t* d-lang.cc (d_handle_option): Remove handling -fmax-error-messages.\n+\t* lang.opt (fmax-error-messages): Remove option.\n+\n+2017-02-18  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-decls.cc (get_symbol_decl): Handle -Wtemplates.\n+\t* d-lang.cc (d_init_options): Remove setting flag_emit_templates.\n+\t(d_handle_option): Replace handling -femit-templates with\n+\t-fall-instantiations.\n+\t(d_pushdecl): Remove checking for flag_emit_templates.\n+\t* d-tree.h (D_DECL_IS_TEMPLATE): Remove macro.\n+\t* lang.opt (flag_emit_templates): Remove variable.\n+\t(fall-instantiations): Declare.\n+\t(femit-templates): Make alias for -fall-instantiations.\n+\t(Wtemplates): Declare.\n+\n+2017-02-18  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* lang.opt (fassert): Update help text.\n+\t(fin): Likewise.\n+\t(finvariants): Likewise.\n+\t(fout): Likewise.\n+\n+2017-02-11  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-objfile.cc (VarDeclaration::toObjFile): Error if a variable covers\n+\tmore than half the address space.\n+\n+2017-02-04  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-objfile.cc (Module::genmoduleinfo): Ignore symbol visibility when\n+\tlooking up module DSO symbols.\n+\n+2017-01-29  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-lang.cc (d_handle_option): Handle -ftransition=all.\n+\t* lang.opt (ftransition=all): Add compiler option.\n+\n+2017-01-29  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-lang.cc (d_handle_option): Handle -ftransition=checkimports.\n+\t* lang.opt (ftransition=checkimports): Add compiler option.\n+\n+2017-01-28  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-lang.cc (d_handle_option): Handle -ftransition=import.\n+\t* lang.opt (ftransition=import): Add compiler option.\n+\n+2017-01-25  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* imports.cc (ImportVisitor::visit(EnumDeclaration)): New function.\n+\t(ImportVisitor::visit(AggregateDeclaration)): New function.\n+\t(ImportVisitor::visit(ClassDeclaration)): New function.\n+\t(ImportVisitor::make_import): New function.\n+\t(ImportVisitor::visit(AliasDeclaration)): Get decl for type alias.\n+\n+2017-01-22  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* expr.cc (ExprVisitor::visit(EqualExp)): Don't use memcmp on arrays\n+\tof structs that define xopEquals.\n+\n+2017-01-15  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-spec.cc (lang_specific_driver): Add missing break.\n+\n+2017-01-13  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (build_class_instance): Don't check for void\n+\tinitialized fields.\n+\t* expr.cc (ExprVisitor::visit(StructLiteralExp)): Likewise.\n+\n+2017-01-11  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* typeinfo.cc (layout_classinfo): Use placement new to initialize\n+\ttypeinfo class declaration.\n+\n+2017-01-02  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen,cc (get_frame_for_symbol): Use fully qualified name in\n+\terror message.\n+\t(build_frame_type): Always add parameters to closure vars if the\n+\tfunction has a contract function.\n+\t(get_frameinfo): Likewise, always create a frame.\n+\t* expr.cc (ExprVisitor::needs_dtor): New function.\n+\t(ExprVisitor::lvalue_p): New function.\n+\t(ExprVisitor::visit(AssignExp)): Check for dtor in array assignments.\n+\t(ExprVisitor::visit(TypeidExp)): Cast result to expression type.\n+\n+\f\n+Copyright (C) 2017 Free Software Foundation, Inc.\n+\n+Copying and distribution of this file, with or without modification,\n+are permitted in any medium without royalty provided the copyright\n+notice and this notice are preserved."}, {"sha": "79baf0188891c0c9c897d4de2ca4bb3d53a0f554", "filename": "gcc/d/Make-lang.in", "status": "added", "additions": 337, "deletions": 0, "changes": 337, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2FMake-lang.in?ref=b4c522fabd0df7be08882d2207df8b2765026110", "patch": "@@ -0,0 +1,337 @@\n+# Make-lang.in -- Top level -*- makefile -*- fragment for the D frontend.\n+# Copyright (C) 2006-2018 Free Software Foundation, Inc.\n+\n+# GCC is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3, or (at your option)\n+# any later version.\n+\n+# GCC is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+\n+# You should have received a copy of the GNU General Public License\n+# along with GCC; see the file COPYING3.  If not see\n+# <http://www.gnu.org/licenses/>.\n+\n+# This file provides the language dependent support in the main Makefile.\n+\n+# Installation name.\n+\n+D_INSTALL_NAME = $(shell echo gdc|sed '$(program_transform_name)')\n+D_TARGET_INSTALL_NAME = $(target_noncanonical)-$(shell echo gdc|sed '$(program_transform_name)')\n+\n+# Name of phobos library\n+D_LIBPHOBOS = -DLIBPHOBOS=\\\"gphobos\\\"\n+\n+# The name for selecting d in LANGUAGES.\n+d: d21$(exeext)\n+\n+# Tell GNU make to ignore these if they exist.\n+.PHONY: d\n+\n+# Create the compiler driver for D.\n+CFLAGS-d/d-spec.o += $(DRIVER_DEFINES) $(D_LIBPHOBOS)\n+\n+GDC_OBJS = $(GCC_OBJS) d/d-spec.o\n+gdc$(exeext): $(GDC_OBJS) $(EXTRA_GCC_OBJS) libcommon-target.a $(LIBDEPS)\n+\t+$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o $@ \\\n+\t  $(GDC_OBJS) $(EXTRA_GCC_OBJS) libcommon-target.a \\\n+\t  $(EXTRA_GCC_LIBS) $(LIBS)\n+\n+# Create a version of the gdc driver which calls the cross-compiler.\n+gdc-cross$(exeext): gdc$(exeext)\n+\t-rm -f gdc-cross$(exeext)\n+\tcp gdc$(exeext) gdc-cross$(exeext)\n+\n+# Filter out pedantic and virtual overload warnings.\n+d-warn = $(filter-out -pedantic -Woverloaded-virtual, $(STRICT_WARN))\n+\n+# Also filter out warnings for missing format attributes in the D Frontend.\n+DMD_WARN_CXXFLAGS = $(filter-out -Wmissing-format-attribute, $(WARN_CXXFLAGS))\n+DMD_COMPILE = $(subst $(WARN_CXXFLAGS), $(DMD_WARN_CXXFLAGS), $(COMPILE))\n+DMDGEN_COMPILE = $(subst $(COMPILER), $(COMPILER_FOR_BUILD), $(DMD_COMPILE))\n+\n+# D Frontend object files.\n+D_FRONTEND_OBJS = \\\n+\td/aav.o \\\n+\td/access.o \\\n+\td/aliasthis.o \\\n+\td/apply.o \\\n+\td/argtypes.o \\\n+\td/arrayop.o \\\n+\td/attrib.o \\\n+\td/blockexit.o \\\n+\td/canthrow.o \\\n+\td/checkedint.o \\\n+\td/clone.o \\\n+\td/cond.o \\\n+\td/constfold.o \\\n+\td/cppmangle.o \\\n+\td/ctfeexpr.o \\\n+\td/dcast.o \\\n+\td/dclass.o \\\n+\td/declaration.o \\\n+\td/delegatize.o \\\n+\td/denum.o \\\n+\td/dimport.o \\\n+\td/dinterpret.o \\\n+\td/dmacro.o \\\n+\td/dmangle.o \\\n+\td/dmodule.o \\\n+\td/doc.o \\\n+\td/dscope.o \\\n+\td/dstruct.o \\\n+\td/dsymbol.o \\\n+\td/dtemplate.o \\\n+\td/dversion.o \\\n+\td/entity.o \\\n+\td/escape.o \\\n+\td/expression.o \\\n+\td/expressionsem.o \\\n+\td/file.o \\\n+\td/filename.o \\\n+\td/func.o \\\n+\td/hdrgen.o \\\n+\td/iasm.o \\\n+\td/iasmgcc.o \\\n+\td/identifier.o \\\n+\td/imphint.o \\\n+\td/init.o \\\n+\td/initsem.o \\\n+\td/intrange.o \\\n+\td/json.o \\\n+\td/lexer.o \\\n+\td/mtype.o \\\n+\td/nogc.o \\\n+\td/nspace.o \\\n+\td/objc.o \\\n+\td/opover.o \\\n+\td/optimize.o \\\n+\td/outbuffer.o \\\n+\td/parse.o \\\n+\td/rmem.o \\\n+\td/rootobject.o \\\n+\td/safe.o \\\n+\td/sapply.o \\\n+\td/sideeffect.o \\\n+\td/speller.o \\\n+\td/statement.o \\\n+\td/statementsem.o \\\n+\td/staticassert.o \\\n+\td/staticcond.o \\\n+\td/stringtable.o \\\n+\td/tokens.o \\\n+\td/traits.o \\\n+\td/typesem.o \\\n+\td/utf.o \\\n+\td/utils.o\n+\n+# D Frontend generated files.\n+D_GENERATED_SRCS = d/id.c d/id.h d/impcnvtab.c\n+D_GENERATED_OBJS = d/id.o d/impcnvtab.o\n+\n+# Language-specific object files for D.\n+D_OBJS = \\\n+\td/d-attribs.o d/d-builtins.o d/d-codegen.o d/d-convert.o \\\n+\td/d-diagnostic.o d/d-frontend.o d/d-incpath.o d/d-lang.o \\\n+\td/d-longdouble.o d/d-target.o d/decl.o d/expr.o d/imports.o \\\n+\td/intrinsics.o d/modules.o d/runtime.o d/toir.o d/typeinfo.o d/types.o\n+\n+# All language-specific object files for D.\n+D_ALL_OBJS = $(D_FRONTEND_OBJS) $(D_GENERATED_OBJS) $(D_OBJS) $(D_TARGET_OBJS)\n+\n+d_OBJS = $(D_ALL_OBJS) d/d-spec.o\n+\n+d21$(exeext): $(D_ALL_OBJS) attribs.o $(BACKEND) $(LIBDEPS)\n+\t+$(LLINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o $@ \\\n+\t\t$(D_ALL_OBJS) attribs.o $(BACKEND) $(LIBS) $(BACKENDLIBS)\n+\n+# Documentation.\n+\n+D_TEXI_FILES = \\\n+\td/gdc.texi \\\n+\t$(gcc_docdir)/include/fdl.texi \\\n+\t$(gcc_docdir)/include/gpl_v3.texi \\\n+\t$(gcc_docdir)/include/gcc-common.texi \\\n+\tgcc-vers.texi\n+\n+doc/gdc.info: $(D_TEXI_FILES)\n+\tif test \"x$(BUILD_INFO)\" = xinfo; then \\\n+\t  rm -f doc/gdc.info*; \\\n+\t  $(MAKEINFO) $(MAKEINFOFLAGS) -I $(gcc_docdir) \\\n+\t\t-I $(gcc_docdir)/include -o $@ $<; \\\n+\telse true; fi\n+\n+doc/gdc.dvi: $(D_TEXI_FILES)\n+\t$(TEXI2DVI) -I $(abs_docdir) -I $(abs_docdir)/include -o $@ $<\n+\n+doc/gdc.pdf: $(D_TEXI_FILES)\n+\t$(TEXI2PDF) -I $(abs_docdir) -I $(abs_docdir)/include -o $@ $<\n+\n+$(build_htmldir)/d/index.html: $(D_TEXI_FILES)\n+\t$(mkinstalldirs) $(@D)\n+\trm -f $(@D)/*\n+\t$(TEXI2HTML) -I $(gcc_docdir) -I $(gcc_docdir)/include \\\n+\t\t-I $(srcdir)/d -o $(@D) $<\n+\n+.INTERMEDIATE: gdc.pod\n+\n+gdc.pod: d/gdc.texi\n+\t-$(TEXI2POD) -D gdc < $< > $@\n+\n+# Build hooks.\n+\n+d.all.cross: gdc-cross$(exeext)\n+d.start.encap: gdc$(exeext)\n+d.rest.encap:\n+d.info: doc/gdc.info\n+d.dvi: doc/gdc.dvi\n+d.pdf: doc/gdc.pdf\n+d.html: $(build_htmldir)/d/index.html\n+d.srcinfo: doc/gdc.info\n+\t-cp -p $^ $(srcdir)/doc\n+d.srcextra:\n+\n+d.tags: force\n+\tcd $(srcdir)/d; \\\n+\tetags -o TAGS.sub *.c *.cc *.h dmd/*.c dmd/*.h dmd/root/*.h dmd/root/*.c; \\\n+\tetags --include TAGS.sub --include ../TAGS.sub\n+\n+d.man: doc/gdc.1\n+d.srcman: doc/gdc.1\n+\t-cp -p $^ $(srcdir)/doc\n+\n+# 'make check' in gcc/ looks for check-d, as do all toplevel D-related\n+# check targets.  However, our DejaGNU framework requires 'check-gdc' as its\n+# entry point.  We feed the former to the latter here.\n+check-d: check-gdc\n+lang_checks += check-gdc\n+lang_checks_parallelized += check-gdc\n+check_gdc_parallelize = 10\n+\n+# No D-specific selftests.\n+selftest-d:\n+\n+# Install hooks.\n+\n+d.install-common: installdirs\n+\t-rm -f $(DESTDIR)$(bindir)/$(D_INSTALL_NAME)$(exeext)\n+\t$(INSTALL_PROGRAM) gdc$(exeext) $(DESTDIR)$(bindir)/$(D_INSTALL_NAME)$(exeext)\n+\t-if test -f d21$(exeext); then \\\n+\t  if test -f gdc-cross$(exeext); then \\\n+\t    :; \\\n+\t  else \\\n+\t    rm -f $(DESTDIR)$(bindir)/$(D_TARGET_INSTALL_NAME)$(exeext); \\\n+\t    ( cd $(DESTDIR)$(bindir) && \\\n+\t      $(LN) $(D_INSTALL_NAME)$(exeext) $(D_TARGET_INSTALL_NAME)$(exeext) ); \\\n+\t  fi; \\\n+\tfi\n+\n+d.install-plugin:\n+\n+d.install-info: $(DESTDIR)$(infodir)/gdc.info\n+\n+d.install-pdf: doc/gdc.pdf\n+\t@$(NORMAL_INSTALL)\n+\ttest -z \"$(pdfdir)\" || $(mkinstalldirs) \"$(DESTDIR)$(pdfdir)/gcc\"\n+\t@for p in doc/gdc.pdf; do \\\n+\t  if test -f \"$$p\"; then d=; else d=\"$(srcdir)/\"; fi; \\\n+\t  f=$(pdf__strip_dir) \\\n+\t  echo \" $(INSTALL_DATA) '$$d$$p' '$(DESTDIR)$(pdfdir)/gcc/$$f'\"; \\\n+\t  $(INSTALL_DATA) \"$$d$$p\" \"$(DESTDIR)$(pdfdir)/gcc/$$f\"; \\\n+\tdone\n+\n+d.install-html: $(build_htmldir)/d\n+\t@$(NORMAL_INSTALL)\n+\ttest -z \"$(htmldir)\" || $(mkinstalldirs) \"$(DESTDIR)$(htmldir)\"\n+\t@for p in $(build_htmldir)/d; do \\\n+\t  if test -f \"$$p\" || test -d \"$$p\"; then d=\"\"; else d=\"$(srcdir)/\"; fi; \\\n+\t  f=$(html__strip_dir) \\\n+\t  if test -d \"$$d$$p\"; then \\\n+\t    echo \" $(mkinstalldirs) '$(DESTDIR)$(htmldir)/$$f'\"; \\\n+\t    $(mkinstalldirs) \"$(DESTDIR)$(htmldir)/$$f\" || exit 1; \\\n+\t    echo \" $(INSTALL_DATA) '$$d$$p'/* '$(DESTDIR)$(htmldir)/$$f'\"; \\\n+\t    $(INSTALL_DATA) \"$$d$$p\"/* \"$(DESTDIR)$(htmldir)/$$f\"; \\\n+\t  else \\\n+\t    echo \" $(INSTALL_DATA) '$$d$$p' '$(DESTDIR)$(htmldir)/$$f'\"; \\\n+\t    $(INSTALL_DATA) \"$$d$$p\" \"$(DESTDIR)$(htmldir)/$$f\"; \\\n+\t  fi; \\\n+\tdone\n+\n+d.install-man: $(DESTDIR)$(man1dir)/$(D_INSTALL_NAME)$(man1ext)\n+\n+$(DESTDIR)$(man1dir)/$(D_INSTALL_NAME)$(man1ext): doc/gdc.1 installdirs\n+\t-rm -f $@\n+\t-$(INSTALL_DATA) $< $@\n+\t-chmod a-x $@\n+\n+d.uninstall:\n+\t-rm -rf $(DESTDIR)$(bindir)/$(D_INSTALL_NAME)$(exeext)\n+\t-rm -rf $(DESTDIR)$(man1dir)/$(D_INSTALL_NAME)$(man1ext)\n+\t-rm -rf $(DESTDIR)$(bindir)/$(D_TARGET_INSTALL_NAME)$(exeext)\n+\t-rm -rf $(DESTDIR)$(infodir)/gdc.info*\n+\n+# Clean hooks.\n+\n+d.mostlyclean:\n+\t-rm -f d/*$(objext)\n+\t-rm -f d/*$(coverageexts)\n+\t-rm -f $(D_GENERATED_SRCS)\n+\t-rm -f d/gdc$(exeext) gdc-cross$(exeext) d/d21$(exeext)\n+d.clean:\n+d.distclean:\n+d.maintainer-clean:\n+\t-rm -f $(docobjdir)/gdc.1\n+\n+# Stage hooks.\n+\n+d.stage1: stage1-start\n+\t-mv d/*$(objext) stage1/d\n+d.stage2: stage2-start\n+\t-mv d/*$(objext) stage2/d\n+d.stage3: stage3-start\n+\t-mv d/*$(objext) stage3/d\n+d.stage4: stage4-start\n+\t-mv d/*$(objext) stage4/d\n+d.stageprofile: stageprofile-start\n+\t-mv d/*$(objext) stageprofile/d\n+d.stagefeedback: stagefeedback-start\n+\t-mv d/*$(objext) stagefeedback/d\n+\n+# Include the dfrontend and build directories for headers.\n+D_INCLUDES = -I$(srcdir)/d -I$(srcdir)/d/dmd -Id\n+\n+CFLAGS-d/id.o += $(D_INCLUDES)\n+CFLAGS-d/impcnvtab.o += $(D_INCLUDES)\n+\n+# Override build rules for D frontend.\n+d/%.o: d/dmd/%.c $(D_GENERATED_SRCS)\n+\t$(DMD_COMPILE) $(D_INCLUDES) $<\n+\t$(POSTCOMPILE)\n+\n+d/%.o: d/dmd/root/%.c $(D_GENERATED_SRCS)\n+\t$(DMD_COMPILE) $(D_INCLUDES) $<\n+\t$(POSTCOMPILE)\n+\n+# Generated programs.\n+d/idgen: d/idgen.dmdgen.o\n+\t+$(LINKER_FOR_BUILD) $(BUILD_LINKER_FLAGS) $(BUILD_LDFLAGS) -o $@ $^\n+\n+d/impcvgen: d/impcnvgen.dmdgen.o\n+\t+$(LINKER_FOR_BUILD) $(BUILD_LINKER_FLAGS) $(BUILD_LDFLAGS) -o $@ $^\n+\n+# Generated sources.\n+d/id.c: d/idgen\n+\tcd d && ./idgen\n+\n+# idgen also generates id.h; just verify it exists.\n+d/id.h: d/id.c\n+\n+d/impcnvtab.c: d/impcvgen\n+\tcd d && ./impcvgen\n+\n+d/%.dmdgen.o: $(srcdir)/d/dmd/%.c\n+\t$(DMDGEN_COMPILE) $(D_INCLUDES) $<\n+\t$(POSTCOMPILE)"}, {"sha": "745ad7e68d57e2e47b463de42c3c48c52dd0d33e", "filename": "gcc/d/config-lang.in", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fconfig-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fconfig-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fconfig-lang.in?ref=b4c522fabd0df7be08882d2207df8b2765026110", "patch": "@@ -0,0 +1,33 @@\n+# config-lang.in -- Top level configure fragment for gcc D frontend.\n+# Copyright (C) 2006-2018 Free Software Foundation, Inc.\n+\n+# GCC is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3, or (at your option)\n+# any later version.\n+\n+# GCC is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+\n+# You should have received a copy of the GNU General Public License\n+# along with GCC; see the file COPYING3.  If not see\n+# <http://www.gnu.org/licenses/>.\n+\n+# Configure looks for the existence of this file to auto-config each language.\n+# We define several parameters used by configure:\n+#\n+# language\t- name of language as it would appear in $(LANGUAGES)\n+# compilers\t- value to add to $(COMPILERS)\n+\n+language=\"d\"\n+\n+compilers=\"d21\\$(exeext)\"\n+\n+target_libs=\"target-libphobos target-zlib target-libbacktrace\"\n+\n+gtfiles=\"\\$(srcdir)/d/d-tree.h \\$(srcdir)/d/d-builtins.cc \\$(srcdir)/d/d-lang.cc \\$(srcdir)/d/modules.cc \\$(srcdir)/d/typeinfo.cc\"\n+\n+# Do not build by default.\n+build_by_default=\"no\""}, {"sha": "4f5d3e6cedf03ce2a532602f5ae5dd0833b05f9e", "filename": "gcc/d/d-attribs.cc", "status": "added", "additions": 835, "deletions": 0, "changes": 835, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fd-attribs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fd-attribs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fd-attribs.cc?ref=b4c522fabd0df7be08882d2207df8b2765026110", "patch": "@@ -0,0 +1,835 @@\n+/* d-attribs.c -- D attributes handling.\n+   Copyright (C) 2015-2018 Free Software Foundation, Inc.\n+\n+GCC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 3, or (at your option)\n+any later version.\n+\n+GCC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  */\n+\n+/* Implementation of attribute handlers for user defined attributes and\n+   internal built-in functions.  */\n+\n+#include \"config.h\"\n+#include \"system.h\"\n+#include \"coretypes.h\"\n+\n+#include \"dmd/declaration.h\"\n+#include \"dmd/mtype.h\"\n+\n+#include \"tree.h\"\n+#include \"diagnostic.h\"\n+#include \"tm.h\"\n+#include \"cgraph.h\"\n+#include \"toplev.h\"\n+#include \"target.h\"\n+#include \"common/common-target.h\"\n+#include \"stringpool.h\"\n+#include \"attribs.h\"\n+#include \"varasm.h\"\n+\n+#include \"d-tree.h\"\n+\n+\n+/* Internal attribute handlers for built-in functions.  */\n+static tree handle_noreturn_attribute (tree *, tree, tree, int, bool *);\n+static tree handle_leaf_attribute (tree *, tree, tree, int, bool *);\n+static tree handle_const_attribute (tree *, tree, tree, int, bool *);\n+static tree handle_malloc_attribute (tree *, tree, tree, int, bool *);\n+static tree handle_pure_attribute (tree *, tree, tree, int, bool *);\n+static tree handle_novops_attribute (tree *, tree, tree, int, bool *);\n+static tree handle_nonnull_attribute (tree *, tree, tree, int, bool *);\n+static tree handle_nothrow_attribute (tree *, tree, tree, int, bool *);\n+static tree handle_type_generic_attribute (tree *, tree, tree, int, bool *);\n+static tree handle_transaction_pure_attribute (tree *, tree, tree, int, bool *);\n+static tree handle_returns_twice_attribute (tree *, tree, tree, int, bool *);\n+static tree handle_fnspec_attribute (tree *, tree, tree, int, bool *);\n+\n+/* D attribute handlers for user defined attributes.  */\n+static tree d_handle_noinline_attribute (tree *, tree, tree, int, bool *);\n+static tree d_handle_forceinline_attribute (tree *, tree, tree, int, bool *);\n+static tree d_handle_flatten_attribute (tree *, tree, tree, int, bool *);\n+static tree d_handle_target_attribute (tree *, tree, tree, int, bool *);\n+static tree d_handle_noclone_attribute (tree *, tree, tree, int, bool *);\n+static tree d_handle_section_attribute (tree *, tree, tree, int, bool *);\n+static tree d_handle_alias_attribute (tree *, tree, tree, int, bool *);\n+static tree d_handle_weak_attribute (tree *, tree, tree, int, bool *) ;\n+\n+/* Helper to define attribute exclusions.  */\n+#define ATTR_EXCL(name, function, type, variable)\t\\\n+  { name, function, type, variable }\n+\n+/* Define attributes that are mutually exclusive with one another.  */\n+static const struct attribute_spec::exclusions attr_noreturn_exclusions[] =\n+{\n+  ATTR_EXCL (\"const\", true, true, true),\n+  ATTR_EXCL (\"malloc\", true, true, true),\n+  ATTR_EXCL (\"pure\", true, true, true),\n+  ATTR_EXCL (\"returns_twice\", true, true, true),\n+  ATTR_EXCL (NULL, false, false, false),\n+};\n+\n+static const struct attribute_spec::exclusions attr_returns_twice_exclusions[] =\n+{\n+  ATTR_EXCL (\"noreturn\", true, true, true),\n+  ATTR_EXCL (NULL, false, false, false),\n+};\n+\n+static const struct attribute_spec::exclusions attr_const_pure_exclusions[] =\n+{\n+  ATTR_EXCL (\"const\", true, true, true),\n+  ATTR_EXCL (\"noreturn\", true, true, true),\n+  ATTR_EXCL (\"pure\", true, true, true),\n+  ATTR_EXCL (NULL, false, false, false)\n+};\n+\n+static const struct attribute_spec::exclusions attr_inline_exclusions[] =\n+{\n+  ATTR_EXCL (\"noinline\", true, true, true),\n+  ATTR_EXCL (NULL, false, false, false),\n+};\n+\n+static const struct attribute_spec::exclusions attr_noinline_exclusions[] =\n+{\n+  ATTR_EXCL (\"forceinline\", true, true, true),\n+  ATTR_EXCL (NULL, false, false, false),\n+};\n+\n+/* Helper to define an attribute.  */\n+#define ATTR_SPEC(name, min_len, max_len, decl_req, type_req, fn_type_req, \\\n+\t\t  affects_type_identity, handler, exclude)\t\t   \\\n+  { name, min_len, max_len, decl_req, type_req, fn_type_req,\t\t   \\\n+    affects_type_identity, handler, exclude }\n+\n+/* Table of machine-independent attributes.\n+   For internal use (marking of built-ins) only.  */\n+const attribute_spec d_langhook_common_attribute_table[] =\n+{\n+  ATTR_SPEC (\"noreturn\", 0, 0, true, false, false, false,\n+\t     handle_noreturn_attribute, attr_noreturn_exclusions),\n+  ATTR_SPEC (\"leaf\", 0, 0, true, false, false, false,\n+\t     handle_leaf_attribute, NULL),\n+  ATTR_SPEC (\"const\", 0, 0, true, false, false, false,\n+\t     handle_const_attribute, attr_const_pure_exclusions),\n+  ATTR_SPEC (\"malloc\", 0, 0, true, false, false, false,\n+\t     handle_malloc_attribute, NULL),\n+  ATTR_SPEC (\"returns_twice\", 0, 0, true, false, false, false,\n+\t     handle_returns_twice_attribute, attr_returns_twice_exclusions),\n+  ATTR_SPEC (\"pure\", 0, 0, true, false, false, false,\n+\t     handle_pure_attribute, attr_const_pure_exclusions),\n+  ATTR_SPEC (\"nonnull\", 0, -1, false, true, true, false,\n+\t     handle_nonnull_attribute, NULL),\n+  ATTR_SPEC (\"nothrow\", 0, 0, true, false, false, false,\n+\t     handle_nothrow_attribute, NULL),\n+  ATTR_SPEC (\"transaction_pure\", 0, 0, false, true, true, false,\n+\t     handle_transaction_pure_attribute, NULL),\n+  ATTR_SPEC (\"no vops\", 0, 0, true, false, false, false,\n+\t     handle_novops_attribute, NULL),\n+  ATTR_SPEC (\"type generic\", 0, 0, false, true, true, false,\n+\t     handle_type_generic_attribute, NULL),\n+  ATTR_SPEC (\"fn spec\", 1, 1, false, true, true, false,\n+\t     handle_fnspec_attribute, NULL),\n+  ATTR_SPEC (NULL, 0, 0, false, false, false, false, NULL, NULL),\n+};\n+\n+/* Table of D language attributes exposed by `gcc.attribute' UDAs.  */\n+const attribute_spec d_langhook_attribute_table[] =\n+{\n+  ATTR_SPEC (\"noinline\", 0, 0, true, false, false, false,\n+\t     d_handle_noinline_attribute, attr_noinline_exclusions),\n+  ATTR_SPEC (\"forceinline\", 0, 0, true, false, false, false,\n+\t     d_handle_forceinline_attribute, attr_inline_exclusions),\n+  ATTR_SPEC (\"flatten\", 0, 0, true, false, false, false,\n+\t     d_handle_flatten_attribute, NULL),\n+  ATTR_SPEC (\"target\", 1, -1, true, false, false, false,\n+\t     d_handle_target_attribute, NULL),\n+  ATTR_SPEC (\"noclone\", 0, 0, true, false, false, false,\n+\t     d_handle_noclone_attribute, NULL),\n+  ATTR_SPEC (\"section\", 1, 1, true, false, false, false,\n+\t     d_handle_section_attribute, NULL),\n+  ATTR_SPEC (\"alias\", 1, 1, true, false, false, false,\n+\t     d_handle_alias_attribute, NULL),\n+  ATTR_SPEC (\"weak\", 0, 0, true, false, false, false,\n+\t     d_handle_weak_attribute, NULL),\n+  ATTR_SPEC (NULL, 0, 0, false, false, false, false, NULL, NULL),\n+};\n+\n+\n+/* Insert the type attribute ATTRNAME with value VALUE into TYPE.\n+   Returns a new variant of the original type declaration.  */\n+\n+tree\n+insert_type_attribute (tree type, const char *attrname, tree value)\n+{\n+  tree ident = get_identifier (attrname);\n+\n+  if (value)\n+    value = tree_cons (NULL_TREE, value, NULL_TREE);\n+\n+  tree attribs = merge_attributes (TYPE_ATTRIBUTES (type),\n+\t\t\t\t   tree_cons (ident, value, NULL_TREE));\n+\n+  return build_type_attribute_variant (type, attribs);\n+}\n+\n+/* Insert the decl attribute ATTRNAME with value VALUE into DECL.  */\n+\n+tree\n+insert_decl_attribute (tree decl, const char *attrname, tree value)\n+{\n+  tree ident = get_identifier (attrname);\n+\n+  if (value)\n+    value = tree_cons (NULL_TREE, value, NULL_TREE);\n+\n+  tree attribs = merge_attributes (DECL_ATTRIBUTES (decl),\n+\t\t\t\t   tree_cons (ident, value, NULL_TREE));\n+\n+  return build_decl_attribute_variant (decl, attribs);\n+}\n+\n+/* Returns TRUE if NAME is an attribute recognized as being handled by\n+   the `gcc.attribute' module.  */\n+\n+static bool\n+uda_attribute_p (const char *name)\n+{\n+  tree ident = get_identifier (name);\n+\n+  /* Search both our language, and target attribute tables.\n+     Common and format attributes are kept internal.  */\n+  for (const attribute_spec *p = d_langhook_attribute_table; p->name; p++)\n+    {\n+      if (get_identifier (p->name) == ident)\n+\treturn true;\n+    }\n+\n+  for (const attribute_spec *p = targetm.attribute_table; p->name; p++)\n+    {\n+      if (get_identifier (p->name) == ident)\n+\treturn true;\n+    }\n+\n+  return false;\n+}\n+\n+/* [attribute/uda]\n+\n+   User Defined Attributes (UDA) are compile time expressions that can be\n+   attached to a declaration.  These attributes can then be queried, extracted,\n+   and manipulated at compile-time.  There is no run-time component to them.\n+\n+   Expand and merge all UDAs found in the EATTRS list that are of type\n+   `gcc.attribute.Attribute'.  This symbol is internally recognized by the\n+   compiler and maps them to their equivalent GCC attribute.  */\n+\n+tree\n+build_attributes (Expressions *eattrs)\n+{\n+  if (!eattrs)\n+    return NULL_TREE;\n+\n+  expandTuples (eattrs);\n+\n+  tree attribs = NULL_TREE;\n+\n+  for (size_t i = 0; i < eattrs->dim; i++)\n+    {\n+      Expression *attr = (*eattrs)[i];\n+      Dsymbol *sym = attr->type->toDsymbol (0);\n+\n+      if (!sym)\n+\tcontinue;\n+\n+      /* Attribute symbol must come from the `gcc.attribute' module.  */\n+      Dsymbol *mod = (Dsymbol*) sym->getModule ();\n+      if (!(strcmp (mod->toChars (), \"attribute\") == 0\n+\t    && mod->parent != NULL\n+\t    && strcmp (mod->parent->toChars (), \"gcc\") == 0\n+\t    && !mod->parent->parent))\n+\tcontinue;\n+\n+      /* Get the result of the attribute if it hasn't already been folded.  */\n+      if (attr->op == TOKcall)\n+\tattr = attr->ctfeInterpret ();\n+\n+      /* Should now have a struct `Attribute(\"attrib\", \"value\", ...)'\n+\t initializer list.  */\n+      gcc_assert (attr->op == TOKstructliteral);\n+      Expressions *elems = ((StructLiteralExp*) attr)->elements;\n+      Expression *e0 = (*elems)[0];\n+\n+      if (e0->op != TOKstring)\n+\t{\n+\t  error (\"expected string attribute, not %qs\", e0->toChars ());\n+\t  return error_mark_node;\n+\t}\n+\n+      StringExp *se = (StringExp*) e0;\n+      gcc_assert (se->sz == 1);\n+\n+      /* Empty string attribute, just ignore it.  */\n+      if (se->len == 0)\n+\tcontinue;\n+\n+      /* Check if the attribute is recognized and handled.\n+\t Done here to report the diagnostic at the right location.  */\n+      const char *name = (const char *)(se->len ? se->string : \"\");\n+      if (!uda_attribute_p (name))\n+\t{\n+\t  warning_at (make_location_t (e0->loc), OPT_Wattributes,\n+\t\t      \"unknown attribute %qs\", name);\n+\t  return error_mark_node;\n+\t}\n+\n+      /* Chain all attribute arguments together.  */\n+      tree args = NULL_TREE;\n+\n+      for (size_t j = 1; j < elems->dim; j++)\n+\t{\n+\t  Expression *e = (*elems)[j];\n+\t  tree t;\n+\t  if (e->op == TOKstring && ((StringExp *) e)->sz == 1)\n+\t    {\n+\t      StringExp *s = (StringExp *) e;\n+\t      const char *string = (const char *)(s->len ? s->string : \"\");\n+\t      t = build_string (s->len, string);\n+\t    }\n+\t  else\n+\t    t = build_expr (e);\n+\n+\t  args = chainon (args, build_tree_list (0, t));\n+\t}\n+\n+      tree list = build_tree_list (get_identifier (name), args);\n+      attribs = chainon (attribs, list);\n+    }\n+\n+  return attribs;\n+}\n+\n+/* Built-in attribute handlers.  */\n+\n+/* Handle a \"noreturn\" attribute; arguments as in\n+   struct attribute_spec.handler.  */\n+\n+static tree\n+handle_noreturn_attribute (tree *node, tree ARG_UNUSED (name),\n+\t\t\t   tree ARG_UNUSED (args), int ARG_UNUSED (flags),\n+\t\t\t   bool * ARG_UNUSED (no_add_attrs))\n+{\n+  tree type = TREE_TYPE (*node);\n+\n+  if (TREE_CODE (*node) == FUNCTION_DECL)\n+    TREE_THIS_VOLATILE (*node) = 1;\n+  else if (TREE_CODE (type) == POINTER_TYPE\n+\t   && TREE_CODE (TREE_TYPE (type)) == FUNCTION_TYPE)\n+    TREE_TYPE (*node)\n+      = build_pointer_type\n+\t(build_type_variant (TREE_TYPE (type),\n+\t\t\t     TYPE_READONLY (TREE_TYPE (type)), 1));\n+  else\n+    gcc_unreachable ();\n+\n+  return NULL_TREE;\n+}\n+\n+/* Handle a \"leaf\" attribute; arguments as in\n+   struct attribute_spec.handler.  */\n+\n+static tree\n+handle_leaf_attribute (tree *node, tree name,\n+\t\t       tree ARG_UNUSED (args),\n+\t\t       int ARG_UNUSED (flags), bool *no_add_attrs)\n+{\n+  if (TREE_CODE (*node) != FUNCTION_DECL)\n+    {\n+      warning (OPT_Wattributes, \"%qE attribute ignored\", name);\n+      *no_add_attrs = true;\n+    }\n+  if (!TREE_PUBLIC (*node))\n+    {\n+      warning (OPT_Wattributes, \"%qE attribute has no effect\", name);\n+      *no_add_attrs = true;\n+    }\n+\n+  return NULL_TREE;\n+}\n+\n+/* Handle a \"const\" attribute; arguments as in\n+   struct attribute_spec.handler.  */\n+\n+static tree\n+handle_const_attribute (tree *node, tree ARG_UNUSED (name),\n+\t\t\ttree ARG_UNUSED (args), int ARG_UNUSED (flags),\n+\t\t\tbool * ARG_UNUSED (no_add_attrs))\n+{\n+  tree type = TREE_TYPE (*node);\n+\n+  if (TREE_CODE (*node) == FUNCTION_DECL)\n+    TREE_READONLY (*node) = 1;\n+  else if (TREE_CODE (type) == POINTER_TYPE\n+\t   && TREE_CODE (TREE_TYPE (type)) == FUNCTION_TYPE)\n+    TREE_TYPE (*node)\n+      = build_pointer_type\n+\t(build_type_variant (TREE_TYPE (type), 1,\n+\t\t\t     TREE_THIS_VOLATILE (TREE_TYPE (type))));\n+  else\n+    gcc_unreachable ();\n+\n+  return NULL_TREE;\n+}\n+\n+/* Handle a \"malloc\" attribute; arguments as in\n+   struct attribute_spec.handler.  */\n+\n+tree\n+handle_malloc_attribute (tree *node, tree ARG_UNUSED (name),\n+\t\t\t tree ARG_UNUSED (args), int ARG_UNUSED (flags),\n+\t\t\t bool * ARG_UNUSED (no_add_attrs))\n+{\n+  gcc_assert (TREE_CODE (*node) == FUNCTION_DECL\n+\t      && POINTER_TYPE_P (TREE_TYPE (TREE_TYPE (*node))));\n+  DECL_IS_MALLOC (*node) = 1;\n+  return NULL_TREE;\n+}\n+\n+/* Handle a \"pure\" attribute; arguments as in\n+   struct attribute_spec.handler.  */\n+\n+static tree\n+handle_pure_attribute (tree *node, tree ARG_UNUSED (name),\n+\t\t       tree ARG_UNUSED (args), int ARG_UNUSED (flags),\n+\t\t       bool * ARG_UNUSED (no_add_attrs))\n+{\n+  gcc_assert (TREE_CODE (*node) == FUNCTION_DECL);\n+  DECL_PURE_P (*node) = 1;\n+  return NULL_TREE;\n+}\n+\n+/* Handle a \"no vops\" attribute; arguments as in\n+   struct attribute_spec.handler.  */\n+\n+static tree\n+handle_novops_attribute (tree *node, tree ARG_UNUSED (name),\n+\t\t\t tree ARG_UNUSED (args), int ARG_UNUSED (flags),\n+\t\t\t bool * ARG_UNUSED (no_add_attrs))\n+{\n+  gcc_assert (TREE_CODE (*node) == FUNCTION_DECL);\n+  DECL_IS_NOVOPS (*node) = 1;\n+  return NULL_TREE;\n+}\n+\n+/* Helper for nonnull attribute handling; fetch the operand number\n+   from the attribute argument list.  */\n+\n+static bool\n+get_nonnull_operand (tree arg_num_expr, unsigned HOST_WIDE_INT *valp)\n+{\n+  /* Verify the arg number is a constant.  */\n+  if (!tree_fits_uhwi_p (arg_num_expr))\n+    return false;\n+\n+  *valp = TREE_INT_CST_LOW (arg_num_expr);\n+  return true;\n+}\n+\n+/* Handle the \"nonnull\" attribute.  */\n+\n+static tree\n+handle_nonnull_attribute (tree *node, tree ARG_UNUSED (name),\n+\t\t\t  tree args, int ARG_UNUSED (flags),\n+\t\t\t  bool * ARG_UNUSED (no_add_attrs))\n+{\n+  tree type = *node;\n+\n+  /* If no arguments are specified, all pointer arguments should be\n+     non-null.  Verify a full prototype is given so that the arguments\n+     will have the correct types when we actually check them later.\n+     Avoid diagnosing type-generic built-ins since those have no\n+     prototype.  */\n+  if (!args)\n+    {\n+      gcc_assert (prototype_p (type)\n+\t\t  || !TYPE_ATTRIBUTES (type)\n+\t\t  || lookup_attribute (\"type generic\", TYPE_ATTRIBUTES (type)));\n+\n+      return NULL_TREE;\n+    }\n+\n+  /* Argument list specified.  Verify that each argument number references\n+     a pointer argument.  */\n+  for (; args; args = TREE_CHAIN (args))\n+    {\n+      tree argument;\n+      unsigned HOST_WIDE_INT arg_num = 0, ck_num;\n+\n+      if (!get_nonnull_operand (TREE_VALUE (args), &arg_num))\n+\tgcc_unreachable ();\n+\n+      argument = TYPE_ARG_TYPES (type);\n+      if (argument)\n+\t{\n+\t  for (ck_num = 1; ; ck_num++)\n+\t    {\n+\t      if (!argument || ck_num == arg_num)\n+\t\tbreak;\n+\t      argument = TREE_CHAIN (argument);\n+\t    }\n+\n+\t  gcc_assert (argument\n+\t\t      && TREE_CODE (TREE_VALUE (argument)) == POINTER_TYPE);\n+\t}\n+    }\n+\n+  return NULL_TREE;\n+}\n+\n+/* Handle a \"nothrow\" attribute; arguments as in\n+   struct attribute_spec.handler.  */\n+\n+static tree\n+handle_nothrow_attribute (tree *node, tree ARG_UNUSED (name),\n+\t\t\t  tree ARG_UNUSED (args), int ARG_UNUSED (flags),\n+\t\t\t  bool * ARG_UNUSED (no_add_attrs))\n+{\n+  gcc_assert (TREE_CODE (*node) == FUNCTION_DECL);\n+  TREE_NOTHROW (*node) = 1;\n+  return NULL_TREE;\n+}\n+\n+/* Handle a \"type_generic\" attribute.  */\n+\n+static tree\n+handle_type_generic_attribute (tree *node, tree ARG_UNUSED (name),\n+\t\t\t       tree ARG_UNUSED (args), int ARG_UNUSED (flags),\n+\t\t\t       bool * ARG_UNUSED (no_add_attrs))\n+{\n+  /* Ensure we have a function type.  */\n+  gcc_assert (TREE_CODE (*node) == FUNCTION_TYPE);\n+\n+  /* Ensure we have a variadic function.  */\n+  gcc_assert (!prototype_p (*node) || stdarg_p (*node));\n+\n+  return NULL_TREE;\n+}\n+\n+/* Handle a \"transaction_pure\" attribute.  */\n+\n+static tree\n+handle_transaction_pure_attribute (tree *node, tree ARG_UNUSED (name),\n+\t\t\t\t   tree ARG_UNUSED (args),\n+\t\t\t\t   int ARG_UNUSED (flags),\n+\t\t\t\t   bool * ARG_UNUSED (no_add_attrs))\n+{\n+  /* Ensure we have a function type.  */\n+  gcc_assert (TREE_CODE (*node) == FUNCTION_TYPE);\n+\n+  return NULL_TREE;\n+}\n+\n+/* Handle a \"returns_twice\" attribute.  */\n+\n+static tree\n+handle_returns_twice_attribute (tree *node, tree ARG_UNUSED (name),\n+\t\t\t\ttree ARG_UNUSED (args),\n+\t\t\t\tint ARG_UNUSED (flags),\n+\t\t\t\tbool * ARG_UNUSED (no_add_attrs))\n+{\n+  gcc_assert (TREE_CODE (*node) == FUNCTION_DECL);\n+\n+  DECL_IS_RETURNS_TWICE (*node) = 1;\n+\n+  return NULL_TREE;\n+}\n+\n+/* Handle a \"fn spec\" attribute; arguments as in\n+   struct attribute_spec.handler.  */\n+\n+tree\n+handle_fnspec_attribute (tree *node ATTRIBUTE_UNUSED, tree ARG_UNUSED (name),\n+\t\t\t tree args, int ARG_UNUSED (flags),\n+\t\t\t bool *no_add_attrs ATTRIBUTE_UNUSED)\n+{\n+  gcc_assert (args\n+\t      && TREE_CODE (TREE_VALUE (args)) == STRING_CST\n+\t      && !TREE_CHAIN (args));\n+  return NULL_TREE;\n+}\n+\n+/* Language specific attribute handlers.  */\n+\n+/* Handle a \"noinline\" attribute.  */\n+\n+static tree\n+d_handle_noinline_attribute (tree *node, tree name,\n+\t\t\t     tree ARG_UNUSED (args),\n+\t\t\t     int ARG_UNUSED (flags), bool *no_add_attrs)\n+{\n+  Type *t = TYPE_LANG_FRONTEND (TREE_TYPE (*node));\n+\n+  if (t->ty == Tfunction)\n+    DECL_UNINLINABLE (*node) = 1;\n+  else\n+    {\n+      warning (OPT_Wattributes, \"%qE attribute ignored\", name);\n+      *no_add_attrs = true;\n+    }\n+\n+  return NULL_TREE;\n+}\n+\n+/* Handle a \"forceinline\" attribute.  */\n+\n+static tree\n+d_handle_forceinline_attribute (tree *node, tree name,\n+\t\t\t\ttree ARG_UNUSED (args),\n+\t\t\t\tint ARG_UNUSED (flags),\n+\t\t\t\tbool *no_add_attrs)\n+{\n+  Type *t = TYPE_LANG_FRONTEND (TREE_TYPE (*node));\n+\n+  if (t->ty == Tfunction)\n+    {\n+      tree attributes = DECL_ATTRIBUTES (*node);\n+\n+      /* Push attribute always_inline.  */\n+      if (! lookup_attribute (\"always_inline\", attributes))\n+\tDECL_ATTRIBUTES (*node) = tree_cons (get_identifier (\"always_inline\"),\n+\t\t\t\t\t     NULL_TREE, attributes);\n+\n+      DECL_DECLARED_INLINE_P (*node) = 1;\n+      DECL_NO_INLINE_WARNING_P (*node) = 1;\n+      DECL_DISREGARD_INLINE_LIMITS (*node) = 1;\n+    }\n+  else\n+    {\n+      warning (OPT_Wattributes, \"%qE attribute ignored\", name);\n+      *no_add_attrs = true;\n+    }\n+\n+  return NULL_TREE;\n+}\n+\n+/* Handle a \"flatten\" attribute.  */\n+\n+static tree\n+d_handle_flatten_attribute (tree *node, tree name,\n+\t\t\t    tree args ATTRIBUTE_UNUSED,\n+\t\t\t    int flags ATTRIBUTE_UNUSED, bool *no_add_attrs)\n+{\n+  Type *t = TYPE_LANG_FRONTEND (TREE_TYPE (*node));\n+\n+  if (t->ty != Tfunction)\n+    {\n+      warning (OPT_Wattributes, \"%qE attribute ignored\", name);\n+      *no_add_attrs = true;\n+    }\n+\n+  return NULL_TREE;\n+}\n+\n+/* Handle a \"target\" attribute.  */\n+\n+static tree\n+d_handle_target_attribute (tree *node, tree name, tree args, int flags,\n+\t\t\t   bool *no_add_attrs)\n+{\n+  Type *t = TYPE_LANG_FRONTEND (TREE_TYPE (*node));\n+\n+  /* Ensure we have a function type.  */\n+  if (t->ty != Tfunction)\n+    {\n+      warning (OPT_Wattributes, \"%qE attribute ignored\", name);\n+      *no_add_attrs = true;\n+    }\n+  else if (! targetm.target_option.valid_attribute_p (*node, name, args, flags))\n+    *no_add_attrs = true;\n+\n+  return NULL_TREE;\n+}\n+\n+/* Handle a \"noclone\" attribute.  */\n+\n+static tree\n+d_handle_noclone_attribute (tree *node, tree name,\n+\t\t\t\ttree ARG_UNUSED (args),\n+\t\t\t\tint ARG_UNUSED (flags),\n+\t\t\t\tbool *no_add_attrs)\n+{\n+  Type *t = TYPE_LANG_FRONTEND (TREE_TYPE (*node));\n+\n+  if (t->ty == Tfunction)\n+    {\n+      tree attributes = DECL_ATTRIBUTES (*node);\n+\n+      /* Push attribute noclone.  */\n+      if (! lookup_attribute (\"noclone\", attributes))\n+\tDECL_ATTRIBUTES (*node) = tree_cons (get_identifier (\"noclone\"),\n+\t\t\t\t\t     NULL_TREE, attributes);\n+    }\n+  else\n+    {\n+      warning (OPT_Wattributes, \"%qE attribute ignored\", name);\n+      *no_add_attrs = true;\n+    }\n+\n+  return NULL_TREE;\n+}\n+\n+/* Handle a \"section\" attribute; arguments as in\n+   struct attribute_spec.handler.  */\n+\n+static tree\n+d_handle_section_attribute (tree *node, tree ARG_UNUSED (name), tree args,\n+\t\t\t    int ARG_UNUSED (flags), bool *no_add_attrs)\n+{\n+  tree decl = *node;\n+\n+  if (targetm_common.have_named_sections)\n+    {\n+      if (VAR_OR_FUNCTION_DECL_P (decl)\n+\t  && TREE_CODE (TREE_VALUE (args)) == STRING_CST)\n+\t{\n+\t  if (VAR_P (decl)\n+\t      && current_function_decl != NULL_TREE\n+\t      && !TREE_STATIC (decl))\n+\t    {\n+\t      error_at (DECL_SOURCE_LOCATION (decl),\n+\t\t\t\"section attribute cannot be specified for \"\n+\t\t\t\"local variables\");\n+\t      *no_add_attrs = true;\n+\t    }\n+\n+\t  /* The decl may have already been given a section attribute\n+\t     from a previous declaration.  Ensure they match.  */\n+\t  else if (DECL_SECTION_NAME (decl) != NULL\n+\t\t   && strcmp (DECL_SECTION_NAME (decl),\n+\t\t\t      TREE_STRING_POINTER (TREE_VALUE (args))) != 0)\n+\t    {\n+\t      error (\"section of %q+D conflicts with previous declaration\",\n+\t\t     *node);\n+\t      *no_add_attrs = true;\n+\t    }\n+\t  else if (VAR_P (decl)\n+\t\t   && !targetm.have_tls && targetm.emutls.tmpl_section\n+\t\t   && DECL_THREAD_LOCAL_P (decl))\n+\t    {\n+\t      error (\"section of %q+D cannot be overridden\", *node);\n+\t      *no_add_attrs = true;\n+\t    }\n+\t  else\n+\t    set_decl_section_name (decl,\n+\t\t\t\t   TREE_STRING_POINTER (TREE_VALUE (args)));\n+\t}\n+      else\n+\t{\n+\t  error (\"section attribute not allowed for %q+D\", *node);\n+\t  *no_add_attrs = true;\n+\t}\n+    }\n+  else\n+    {\n+      error_at (DECL_SOURCE_LOCATION (*node),\n+\t\t\"section attributes are not supported for this target\");\n+      *no_add_attrs = true;\n+    }\n+\n+  return NULL_TREE;\n+}\n+\n+/* Handle an \"alias\" attribute; arguments as in\n+   struct attribute_spec.handler.  */\n+\n+static tree\n+d_handle_alias_attribute (tree *node, tree ARG_UNUSED (name),\n+\t\t\t  tree args, int ARG_UNUSED (flags),\n+\t\t\t  bool *no_add_attrs ATTRIBUTE_UNUSED)\n+{\n+  tree decl = *node;\n+\n+  if (TREE_CODE (decl) != FUNCTION_DECL\n+      && TREE_CODE (decl) != VAR_DECL)\n+    {\n+      warning (OPT_Wattributes, \"%qE attribute ignored\", name);\n+      *no_add_attrs = true;\n+      return NULL_TREE;\n+    }\n+  else if ((TREE_CODE (decl) == FUNCTION_DECL && DECL_INITIAL (decl))\n+      || (TREE_CODE (decl) != FUNCTION_DECL\n+\t  && TREE_PUBLIC (decl) && !DECL_EXTERNAL (decl))\n+      /* A static variable declaration is always a tentative definition,\n+\t but the alias is a non-tentative definition which overrides.  */\n+      || (TREE_CODE (decl) != FUNCTION_DECL\n+\t  && ! TREE_PUBLIC (decl) && DECL_INITIAL (decl)))\n+    {\n+      error (\"%q+D defined both normally and as %qE attribute\", decl, name);\n+      *no_add_attrs = true;\n+      return NULL_TREE;\n+    }\n+  else if (decl_function_context (decl))\n+    {\n+      error (\"%q+D alias functions must be global\", name);\n+      *no_add_attrs = true;\n+      return NULL_TREE;\n+    }\n+  else\n+    {\n+      tree id;\n+\n+      id = TREE_VALUE (args);\n+      if (TREE_CODE (id) != STRING_CST)\n+\t{\n+\t  error (\"attribute %qE argument not a string\", name);\n+\t  *no_add_attrs = true;\n+\t  return NULL_TREE;\n+\t}\n+      id = get_identifier (TREE_STRING_POINTER (id));\n+      /* This counts as a use of the object pointed to.  */\n+      TREE_USED (id) = 1;\n+\n+      if (TREE_CODE (decl) == FUNCTION_DECL)\n+\tDECL_INITIAL (decl) = error_mark_node;\n+      else\n+\tTREE_STATIC (decl) = 1;\n+\n+      return NULL_TREE;\n+    }\n+}\n+\n+/* Handle a \"weak\" attribute; arguments as in\n+   struct attribute_spec.handler.  */\n+\n+static tree\n+d_handle_weak_attribute (tree *node, tree name,\n+\t\t\t tree ARG_UNUSED (args),\n+\t\t\t int ARG_UNUSED (flags),\n+\t\t\t bool * ARG_UNUSED (no_add_attrs))\n+{\n+  if (TREE_CODE (*node) == FUNCTION_DECL\n+      && DECL_DECLARED_INLINE_P (*node))\n+    {\n+      warning (OPT_Wattributes, \"inline function %q+D declared weak\", *node);\n+      *no_add_attrs = true;\n+    }\n+  else if (VAR_OR_FUNCTION_DECL_P (*node))\n+    {\n+      struct symtab_node *n = symtab_node::get (*node);\n+      if (n && n->refuse_visibility_changes)\n+\terror (\"%q+D declared weak after being used\", *node);\n+      declare_weak (*node);\n+    }\n+  else\n+    warning (OPT_Wattributes, \"%qE attribute ignored\", name);\n+\n+  return NULL_TREE;\n+}\n+"}, {"sha": "a4a31e69db860edf9e2f933d8e79ed6c76bbecf7", "filename": "gcc/d/d-builtins.cc", "status": "added", "additions": 1169, "deletions": 0, "changes": 1169, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fd-builtins.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fd-builtins.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fd-builtins.cc?ref=b4c522fabd0df7be08882d2207df8b2765026110", "patch": "@@ -0,0 +1,1169 @@\n+/* d-builtins.cc -- GCC builtins support for D.\n+   Copyright (C) 2006-2018 Free Software Foundation, Inc.\n+\n+GCC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 3, or (at your option)\n+any later version.\n+\n+GCC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  */\n+\n+#include \"config.h\"\n+#include \"system.h\"\n+#include \"coretypes.h\"\n+\n+#include \"dmd/attrib.h\"\n+#include \"dmd/aggregate.h\"\n+#include \"dmd/cond.h\"\n+#include \"dmd/declaration.h\"\n+#include \"dmd/expression.h\"\n+#include \"dmd/identifier.h\"\n+#include \"dmd/module.h\"\n+#include \"dmd/mtype.h\"\n+\n+#include \"tree.h\"\n+#include \"fold-const.h\"\n+#include \"diagnostic.h\"\n+#include \"langhooks.h\"\n+#include \"target.h\"\n+#include \"common/common-target.h\"\n+#include \"stringpool.h\"\n+#include \"stor-layout.h\"\n+\n+#include \"d-tree.h\"\n+#include \"d-target.h\"\n+\n+\n+static GTY(()) vec<tree, va_gc> *gcc_builtins_functions = NULL;\n+static GTY(()) vec<tree, va_gc> *gcc_builtins_libfuncs = NULL;\n+static GTY(()) vec<tree, va_gc> *gcc_builtins_types = NULL;\n+\n+/* Record built-in types and their associated decls for re-use when\n+   generating the `gcc.builtins' module.  */\n+\n+struct builtin_data\n+{\n+  Type *dtype;\n+  tree ctype;\n+  Dsymbol *dsym;\n+\n+  builtin_data (Type *t, tree c, Dsymbol *d = NULL)\n+    : dtype(t), ctype(c), dsym(d)\n+  { }\n+};\n+\n+static vec<builtin_data> builtin_converted_decls;\n+\n+/* Build D frontend type from tree TYPE type given.  This will set the\n+   back-end type symbol directly for complex types to save build_ctype()\n+   the work.  For other types, it is not useful or will cause errors, such\n+   as casting from `C char' to `D char', which also means that `char *`\n+   needs to be specially handled.  */\n+\n+static Type *\n+build_frontend_type (tree type)\n+{\n+  Type *dtype;\n+  MOD mod = 0;\n+\n+  if (TYPE_READONLY (type))\n+    mod |= MODconst;\n+  if (TYPE_VOLATILE (type))\n+    mod |= MODshared;\n+\n+  /* If we've seen the type before, re-use the converted decl.  */\n+  for (size_t i = 0; i < builtin_converted_decls.length (); ++i)\n+    {\n+      tree t = builtin_converted_decls[i].ctype;\n+      if (TYPE_MAIN_VARIANT (t) == TYPE_MAIN_VARIANT (type))\n+\treturn builtin_converted_decls[i].dtype;\n+    }\n+\n+  switch (TREE_CODE (type))\n+    {\n+    case POINTER_TYPE:\n+      dtype = build_frontend_type (TREE_TYPE (type));\n+      if (dtype)\n+\t{\n+\t  /* Check for char * first.  Needs to be done for chars/string.  */\n+\t  if (TYPE_MAIN_VARIANT (TREE_TYPE (type)) == char_type_node)\n+\t    return Type::tchar->addMod (dtype->mod)->pointerTo ()->addMod (mod);\n+\n+\t  if (dtype->ty == Tfunction)\n+\t    return (TypePointer::create (dtype))->addMod (mod);\n+\n+\t  return dtype->pointerTo ()->addMod (mod);\n+\t}\n+      break;\n+\n+    case REFERENCE_TYPE:\n+      dtype = build_frontend_type (TREE_TYPE (type));\n+      if (dtype)\n+\t{\n+\t  /* Want to assign ctype directly so that the REFERENCE_TYPE code\n+\t     can be turned into as an `inout' argument.  Can't use pointerTo(),\n+\t     because the returned Type is shared.  */\n+\t  dtype = (TypePointer::create (dtype))->addMod (mod);\n+\t  dtype->ctype = type;\n+\t  builtin_converted_decls.safe_push (builtin_data (dtype, type));\n+\t  return dtype;\n+\t}\n+      break;\n+\n+    case BOOLEAN_TYPE:\n+      /* Should be no need for size checking.  */\n+      return Type::tbool->addMod (mod);\n+\n+    case INTEGER_TYPE:\n+    {\n+      unsigned size = TREE_INT_CST_LOW (TYPE_SIZE_UNIT (type));\n+      bool unsignedp = TYPE_UNSIGNED (type);\n+\n+      /* For now, skip support for cent/ucent until the frontend\n+\t has better support for handling it.  */\n+      for (size_t i = Tint8; i <= Tuns64; i++)\n+\t{\n+\t  dtype = Type::basic[i];\n+\n+\t  /* Search for type matching size and signedness.  */\n+\t  if (unsignedp != dtype->isunsigned ()\n+\t      || size != dtype->size ())\n+\t    continue;\n+\n+\t  return dtype->addMod (mod);\n+\t}\n+      break;\n+    }\n+\n+    case REAL_TYPE:\n+    {\n+      unsigned size = TREE_INT_CST_LOW (TYPE_SIZE_UNIT (type));\n+\n+      for (size_t i = Tfloat32; i <= Tfloat80; i++)\n+\t{\n+\t  dtype = Type::basic[i];\n+\n+\t  /* Search for type matching size.  */\n+\t  if (dtype->size () != size)\n+\t    continue;\n+\n+\t  return dtype->addMod (mod);\n+\t}\n+      break;\n+    }\n+\n+    case COMPLEX_TYPE:\n+    {\n+      unsigned size = TREE_INT_CST_LOW (TYPE_SIZE_UNIT (type));\n+      for (size_t i = Tcomplex32; i <= Tcomplex80; i++)\n+\t{\n+\t  dtype = Type::basic[i];\n+\n+\t  /* Search for type matching size.  */\n+\t  if (dtype->size () != size)\n+\t    continue;\n+\n+\t  return dtype->addMod (mod);\n+\t}\n+      break;\n+    }\n+\n+    case VOID_TYPE:\n+      return Type::tvoid->addMod (mod);\n+\n+    case ARRAY_TYPE:\n+      dtype = build_frontend_type (TREE_TYPE (type));\n+      if (dtype)\n+\t{\n+\t  tree index = TYPE_DOMAIN (type);\n+\t  tree ub = TYPE_MAX_VALUE (index);\n+\t  tree lb = TYPE_MIN_VALUE (index);\n+\n+\t  tree length = fold_build2 (MINUS_EXPR, TREE_TYPE (lb), ub, lb);\n+\t  length = size_binop (PLUS_EXPR, size_one_node,\n+\t\t\t       convert (sizetype, length));\n+\n+\t  dtype = dtype->sarrayOf (TREE_INT_CST_LOW (length))->addMod (mod);\n+\t  builtin_converted_decls.safe_push (builtin_data (dtype, type));\n+\t  return dtype;\n+\t}\n+      break;\n+\n+    case VECTOR_TYPE:\n+      dtype = build_frontend_type (TREE_TYPE (type));\n+      if (dtype)\n+\t{\n+\t  poly_uint64 nunits = TYPE_VECTOR_SUBPARTS (type);\n+\t  dtype = dtype->sarrayOf (nunits.to_constant ())->addMod (mod);\n+\n+\t  if (dtype->nextOf ()->isTypeBasic () == NULL)\n+\t    break;\n+\n+\t  dtype = (TypeVector::create (Loc (), dtype))->addMod (mod);\n+\t  builtin_converted_decls.safe_push (builtin_data (dtype, type));\n+\t  return dtype;\n+\t}\n+      break;\n+\n+    case RECORD_TYPE:\n+      if (TYPE_NAME (type))\n+\t{\n+\t  tree structname = DECL_NAME (TYPE_NAME (type));\n+\t  Identifier *ident\n+\t    = Identifier::idPool (IDENTIFIER_POINTER (structname));\n+\n+\t  /* Neither the `object' and `gcc.builtins' modules will not exist when\n+\t     this is called.  Use a stub 'object' module parent in the meantime.\n+\t     If `gcc.builtins' is later imported, the parent will be overridden\n+\t     with the correct module symbol.  */\n+\t  static Identifier *object = Identifier::idPool (\"object\");\n+\t  static Module *stubmod = Module::create (\"object.d\", object, 0, 0);\n+\n+\t  StructDeclaration *sdecl = StructDeclaration::create (Loc (), ident,\n+\t\t\t\t\t\t\t\tfalse);\n+\t  sdecl->parent = stubmod;\n+\t  sdecl->structsize = int_size_in_bytes (type);\n+\t  sdecl->alignsize = TYPE_ALIGN_UNIT (type);\n+\t  sdecl->alignment = STRUCTALIGN_DEFAULT;\n+\t  sdecl->sizeok = SIZEOKdone;\n+\t  sdecl->type = (TypeStruct::create (sdecl))->addMod (mod);\n+\t  sdecl->type->ctype = type;\n+\t  sdecl->type->merge2 ();\n+\n+\t  /* Does not seem necessary to convert fields, but the members field\n+\t     must be non-null for the above size setting to stick.  */\n+\t  sdecl->members = new Dsymbols;\n+\t  dtype = sdecl->type;\n+\t  builtin_converted_decls.safe_push (builtin_data (dtype, type, sdecl));\n+\t  return dtype;\n+\t}\n+      break;\n+\n+    case FUNCTION_TYPE:\n+      dtype = build_frontend_type (TREE_TYPE (type));\n+      if (dtype)\n+\t{\n+\t  tree parms = TYPE_ARG_TYPES (type);\n+\t  int varargs_p = 1;\n+\n+\t  Parameters *args = new Parameters;\n+\t  args->reserve (list_length (parms));\n+\n+\t  /* Attempt to convert all parameter types.  */\n+\t  for (tree parm = parms; parm != NULL_TREE; parm = TREE_CHAIN (parm))\n+\t    {\n+\t      tree argtype = TREE_VALUE (parm);\n+\t      if (argtype == void_type_node)\n+\t\t{\n+\t\t  varargs_p = 0;\n+\t\t  break;\n+\t\t}\n+\n+\t      StorageClass sc = STCundefined;\n+\t      if (TREE_CODE (argtype) == REFERENCE_TYPE)\n+\t\t{\n+\t\t  argtype = TREE_TYPE (argtype);\n+\t\t  sc |= STCref;\n+\t\t}\n+\n+\t      Type *targ = build_frontend_type (argtype);\n+\t      if (!targ)\n+\t\t{\n+\t\t  delete args;\n+\t\t  return NULL;\n+\t\t}\n+\n+\t      args->push (Parameter::create (sc, targ, NULL, NULL));\n+\t    }\n+\n+\t  /* GCC generic and placeholder built-ins are marked as variadic, yet\n+\t     have no named parameters, and so can't be represented in D.  */\n+\t  if (args->dim != 0 || !varargs_p)\n+\t    {\n+\t      dtype = TypeFunction::create (args, dtype, varargs_p, LINKc);\n+\t      return dtype->addMod (mod);\n+\t    }\n+\t}\n+      break;\n+\n+    default:\n+      break;\n+    }\n+\n+  return NULL;\n+}\n+\n+/* Attempt to convert GCC evaluated CST to a D Frontend Expression.\n+   This is used for getting the CTFE value out of a const-folded builtin,\n+   returns NULL if it cannot convert CST.  */\n+\n+Expression *\n+d_eval_constant_expression (tree cst)\n+{\n+  STRIP_TYPE_NOPS (cst);\n+  Type *type = build_frontend_type (TREE_TYPE (cst));\n+\n+  if (type)\n+    {\n+      /* Convert our GCC CST tree into a D Expression.  This seems like we are\n+\t trying too hard, as these will only be converted back to a tree again\n+\t later in the codegen pass, but satisfies the need to have GCC built-ins\n+\t CTFE-able in the frontend.  */\n+      tree_code code = TREE_CODE (cst);\n+      if (code == COMPLEX_CST)\n+\t{\n+\t  real_value re = TREE_REAL_CST (TREE_REALPART (cst));\n+\t  real_value im = TREE_REAL_CST (TREE_IMAGPART (cst));\n+\t  complex_t value = complex_t (ldouble (re), ldouble (im));\n+\t  return ComplexExp::create (Loc (), value, type);\n+\t}\n+      else if (code == INTEGER_CST)\n+\t{\n+\t  dinteger_t value = TREE_INT_CST_LOW (cst);\n+\t  return IntegerExp::create (Loc (), value, type);\n+\t}\n+      else if (code == REAL_CST)\n+\t{\n+\t  real_value value = TREE_REAL_CST (cst);\n+\t  return RealExp::create (Loc (), ldouble (value), type);\n+\t}\n+      else if (code == STRING_CST)\n+\t{\n+\t  const void *string = TREE_STRING_POINTER (cst);\n+\t  size_t len = TREE_STRING_LENGTH (cst);\n+\t  return StringExp::create (Loc (), CONST_CAST (void *, string), len);\n+\t}\n+      else if (code == VECTOR_CST)\n+\t{\n+\t  dinteger_t nunits = VECTOR_CST_NELTS (cst).to_constant ();\n+\t  Expressions *elements = new Expressions;\n+\t  elements->setDim (nunits);\n+\n+\t  for (size_t i = 0; i < nunits; i++)\n+\t    {\n+\t      Expression *elem\n+\t\t= d_eval_constant_expression (VECTOR_CST_ELT (cst, i));\n+\t      if (elem == NULL)\n+\t\treturn NULL;\n+\n+\t      (*elements)[i] = elem;\n+\t    }\n+\n+\t  Expression *e = ArrayLiteralExp::create (Loc (), elements);\n+\t  e->type = ((TypeVector *) type)->basetype;\n+\n+\t  return VectorExp::create (Loc (), e, type);\n+\t}\n+    }\n+\n+  return NULL;\n+}\n+\n+/* Callback for TARGET_D_CPU_VERSIONS and TARGET_D_OS_VERSIONS.\n+   Adds IDENT to the list of predefined version identifiers.  */\n+\n+void\n+d_add_builtin_version (const char* ident)\n+{\n+  /* For now, we need to tell the D frontend what platform is being targeted.\n+     This should be removed once the frontend has been fixed.  */\n+  if (strcmp (ident, \"linux\") == 0)\n+    global.params.isLinux = true;\n+  else if (strcmp (ident, \"OSX\") == 0)\n+    global.params.isOSX = true;\n+  else if (strcmp (ident, \"Windows\") == 0)\n+    global.params.isWindows = true;\n+  else if (strcmp (ident, \"FreeBSD\") == 0)\n+    global.params.isFreeBSD = true;\n+  else if (strcmp (ident, \"OpenBSD\") == 0)\n+    global.params.isOpenBSD = true;\n+  else if (strcmp (ident, \"Solaris\") == 0)\n+    global.params.isSolaris = true;\n+  /* The is64bit field only refers to x86_64 target.  */\n+  else if (strcmp (ident, \"X86_64\") == 0)\n+    global.params.is64bit = true;\n+  /* No other fields are required to be set for the frontend.  */\n+\n+  VersionCondition::addPredefinedGlobalIdent (ident);\n+}\n+\n+/* Initialize the list of all the predefined version identifiers.  */\n+\n+void\n+d_init_versions (void)\n+{\n+  VersionCondition::addPredefinedGlobalIdent (\"GNU\");\n+  VersionCondition::addPredefinedGlobalIdent (\"D_Version2\");\n+\n+  if (BYTES_BIG_ENDIAN)\n+    VersionCondition::addPredefinedGlobalIdent (\"BigEndian\");\n+  else\n+    VersionCondition::addPredefinedGlobalIdent (\"LittleEndian\");\n+\n+  if (targetm_common.except_unwind_info (&global_options) == UI_SJLJ)\n+    VersionCondition::addPredefinedGlobalIdent (\"GNU_SjLj_Exceptions\");\n+  else if (targetm_common.except_unwind_info (&global_options) == UI_SEH)\n+    VersionCondition::addPredefinedGlobalIdent (\"GNU_SEH_Exceptions\");\n+  else if (targetm_common.except_unwind_info (&global_options) == UI_DWARF2)\n+    VersionCondition::addPredefinedGlobalIdent (\"GNU_DWARF2_Exceptions\");\n+\n+  if (!targetm.have_tls)\n+    VersionCondition::addPredefinedGlobalIdent (\"GNU_EMUTLS\");\n+\n+#ifdef STACK_GROWS_DOWNWARD\n+  VersionCondition::addPredefinedGlobalIdent (\"GNU_StackGrowsDown\");\n+#endif\n+\n+  /* Should define this anyway to set us apart from the competition.  */\n+  VersionCondition::addPredefinedGlobalIdent (\"GNU_InlineAsm\");\n+\n+  /* LP64 only means 64bit pointers in D.  */\n+  if (global.params.isLP64)\n+    VersionCondition::addPredefinedGlobalIdent (\"D_LP64\");\n+\n+  /* Setting `global.params.cov' forces module info generation which is\n+     not needed for the GCC coverage implementation.  Instead, just\n+     test flag_test_coverage while leaving `global.params.cov' unset.  */\n+  if (flag_test_coverage)\n+    VersionCondition::addPredefinedGlobalIdent (\"D_Coverage\");\n+  if (flag_pic)\n+    VersionCondition::addPredefinedGlobalIdent (\"D_PIC\");\n+\n+  if (global.params.doDocComments)\n+    VersionCondition::addPredefinedGlobalIdent (\"D_Ddoc\");\n+\n+  if (global.params.useUnitTests)\n+    VersionCondition::addPredefinedGlobalIdent (\"unittest\");\n+\n+  if (global.params.useAssert)\n+    VersionCondition::addPredefinedGlobalIdent (\"assert\");\n+\n+  if (global.params.useArrayBounds == BOUNDSCHECKoff)\n+    VersionCondition::addPredefinedGlobalIdent (\"D_NoBoundsChecks\");\n+\n+  VersionCondition::addPredefinedGlobalIdent (\"all\");\n+\n+  /* Emit all target-specific version identifiers.  */\n+  targetdm.d_cpu_versions ();\n+  targetdm.d_os_versions ();\n+}\n+\n+/* A helper for d_build_builtins_module.  Return a new ALIAS for TYPE.\n+   Analogous to `alias ALIAS = TYPE' in D code.  */\n+\n+static AliasDeclaration *\n+build_alias_declaration (const char *alias, Type *type)\n+{\n+  return AliasDeclaration::create (Loc (), Identifier::idPool (alias), type);\n+}\n+\n+/* A helper function for Target::loadModule.  Generates all code for the\n+   `gcc.builtins' module, whose frontend symbol should be M.  */\n+\n+void\n+d_build_builtins_module (Module *m)\n+{\n+  Dsymbols *members = new Dsymbols;\n+  tree decl;\n+\n+  for (size_t i = 0; vec_safe_iterate (gcc_builtins_functions, i, &decl); ++i)\n+    {\n+      const char *name = IDENTIFIER_POINTER (DECL_NAME (decl));\n+      TypeFunction *tf\n+\t= (TypeFunction *) build_frontend_type (TREE_TYPE (decl));\n+\n+      /* Cannot create built-in function type for DECL.  */\n+      if (!tf)\n+\tcontinue;\n+\n+      /* A few notes on D2 attributes applied to builtin functions:\n+\t - It is assumed that built-ins solely provided by the compiler are\n+\t   considered @safe and pure.\n+\t - Built-ins that correspond to `extern(C)' functions in the standard\n+\t   library that have `__attribute__(nothrow)' are considered `@trusted'.\n+\t - The purity of a built-in can vary depending on compiler flags set\n+\t   upon initialization, or by the `-foptions' passed, such as\n+\t   flag_unsafe_math_optimizations.\n+\t - Built-ins never use the GC or raise a D exception, and so are always\n+\t   marked as `nothrow' and `@nogc'.  */\n+      tf->purity = DECL_PURE_P (decl) ? PUREstrong\n+\t: TREE_READONLY (decl) ? PUREconst\n+\t: DECL_IS_NOVOPS (decl) ? PUREweak\n+\t: !DECL_ASSEMBLER_NAME_SET_P (decl) ? PUREweak\n+\t: PUREimpure;\n+      tf->trust = !DECL_ASSEMBLER_NAME_SET_P (decl) ? TRUSTsafe\n+\t: TREE_NOTHROW (decl) ? TRUSTtrusted\n+\t: TRUSTsystem;\n+      tf->isnothrow = true;\n+      tf->isnogc = true;\n+\n+      FuncDeclaration *func\n+\t= FuncDeclaration::create (Loc (), Loc (),\n+\t\t\t\t   Identifier::idPool (name),\n+\t\t\t\t   STCextern, tf);\n+      DECL_LANG_SPECIFIC (decl) = build_lang_decl (func);\n+      func->csym = decl;\n+      func->builtin = BUILTINyes;\n+\n+      members->push (func);\n+    }\n+\n+  for (size_t i = 0; vec_safe_iterate (gcc_builtins_types, i, &decl); ++i)\n+    {\n+      const char *name = IDENTIFIER_POINTER (DECL_NAME (decl));\n+      Type *t = build_frontend_type (TREE_TYPE (decl));\n+\n+      /* Cannot create built-in type for DECL.  */\n+      if (!t)\n+\tcontinue;\n+\n+      members->push (build_alias_declaration (name, t));\n+    }\n+\n+  /* Iterate through the target-specific builtin types for va_list.  */\n+  if (targetm.enum_va_list_p)\n+    {\n+      const char *name;\n+      tree type;\n+\n+      for (int i = 0; targetm.enum_va_list_p (i, &name, &type); ++i)\n+\t{\n+\t  Type *t = build_frontend_type (type);\n+\t  /* Cannot create built-in type.  */\n+\t  if (!t)\n+\t    continue;\n+\n+\t  members->push (build_alias_declaration (name, t));\n+\t}\n+    }\n+\n+  /* Push out declarations for any RECORD_TYPE types encountered when building\n+     all builtin functions and types.  */\n+  for (size_t i = 0; i < builtin_converted_decls.length (); ++i)\n+    {\n+      /* Currently, there is no need to run semantic, but we do want to output\n+\t initializers, typeinfo, and others on demand.  */\n+      Dsymbol *dsym = builtin_converted_decls[i].dsym;\n+      if (dsym != NULL)\n+\t{\n+\t  dsym->parent = m;\n+\t  members->push (dsym);\n+\t}\n+    }\n+\n+  /* va_list should already be built, so no need to convert to D type again.  */\n+  members->push (build_alias_declaration (\"__builtin_va_list\", Type::tvalist));\n+\n+  /* Expose target-specific integer types to the builtins module.  */\n+  {\n+    Type *t = build_frontend_type (long_integer_type_node);\n+    members->push (build_alias_declaration (\"__builtin_clong\", t));\n+\n+    t = build_frontend_type (long_unsigned_type_node);\n+    members->push (build_alias_declaration (\"__builtin_culong\", t));\n+\n+    t = build_frontend_type (long_long_integer_type_node);\n+    members->push (build_alias_declaration (\"__builtin_clonglong\", t));\n+\n+    t = build_frontend_type (long_long_unsigned_type_node);\n+    members->push (build_alias_declaration (\"__builtin_culonglong\", t));\n+\n+    t = build_frontend_type (lang_hooks.types.type_for_mode (byte_mode, 0));\n+    members->push (build_alias_declaration (\"__builtin_machine_byte\", t));\n+\n+    t = build_frontend_type (lang_hooks.types.type_for_mode (byte_mode, 1));\n+    members->push (build_alias_declaration (\"__builtin_machine_ubyte\", t));\n+\n+    t = build_frontend_type (lang_hooks.types.type_for_mode (word_mode, 0));\n+    members->push (build_alias_declaration (\"__builtin_machine_int\", t));\n+\n+    t = build_frontend_type (lang_hooks.types.type_for_mode (word_mode, 1));\n+    members->push (build_alias_declaration (\"__builtin_machine_uint\", t));\n+\n+    t = build_frontend_type (lang_hooks.types.type_for_mode (ptr_mode, 0));\n+    members->push (build_alias_declaration (\"__builtin_pointer_int\", t));\n+\n+    t = build_frontend_type (lang_hooks.types.type_for_mode (ptr_mode, 1));\n+    members->push (build_alias_declaration (\"__builtin_pointer_uint\", t));\n+\n+    /* _Unwind_Word has its own target specific mode.  */\n+    machine_mode mode = targetm.unwind_word_mode ();\n+    t = build_frontend_type (lang_hooks.types.type_for_mode (mode, 0));\n+    members->push (build_alias_declaration (\"__builtin_unwind_int\", t));\n+\n+    t = build_frontend_type (lang_hooks.types.type_for_mode (mode, 1));\n+    members->push (build_alias_declaration (\"__builtin_unwind_uint\", t));\n+  }\n+\n+  m->members->push (LinkDeclaration::create (LINKc, members));\n+}\n+\n+/* Search for any `extern(C)' functions that match any known GCC library builtin\n+   function in D and override its internal back-end symbol.  */\n+\n+static void\n+maybe_set_builtin_1 (Dsymbol *d)\n+{\n+  AttribDeclaration *ad = d->isAttribDeclaration ();\n+  FuncDeclaration *fd = d->isFuncDeclaration ();\n+\n+  if (ad != NULL)\n+    {\n+      /* Recursively search through attribute decls.  */\n+      Dsymbols *decls = ad->include (NULL, NULL);\n+      if (decls && decls->dim)\n+\t{\n+\t  for (size_t i = 0; i < decls->dim; i++)\n+\t    {\n+\t      Dsymbol *sym = (*decls)[i];\n+\t      maybe_set_builtin_1 (sym);\n+\t    }\n+\t}\n+    }\n+  else if (fd && !fd->fbody)\n+    {\n+      tree t;\n+\n+      for (size_t i = 0; vec_safe_iterate (gcc_builtins_libfuncs, i, &t); ++i)\n+\t{\n+\t  gcc_assert (DECL_ASSEMBLER_NAME_SET_P (t));\n+\n+\t  const char *name = IDENTIFIER_POINTER (DECL_ASSEMBLER_NAME (t));\n+\t  if (fd->ident != Identifier::idPool (name))\n+\t    continue;\n+\n+\t  /* Found a match, tell the frontend this is a builtin.  */\n+\t  DECL_LANG_SPECIFIC (t) = build_lang_decl (fd);\n+\t  fd->csym = t;\n+\t  fd->builtin = BUILTINyes;\n+\t  return;\n+\t}\n+    }\n+}\n+\n+/* A helper function for Target::loadModule.  Traverse all members in module M\n+   to search for any functions that can be mapped to any GCC builtin.  */\n+\n+void\n+d_maybe_set_builtin (Module *m)\n+{\n+  if (!m || !m->members)\n+    return;\n+\n+  for (size_t i = 0; i < m->members->dim; i++)\n+    {\n+      Dsymbol *sym = (*m->members)[i];\n+      maybe_set_builtin_1 (sym);\n+    }\n+}\n+\n+/* Used to help initialize the builtin-types.def table.  When a type of\n+   the correct size doesn't exist, use error_mark_node instead of NULL.\n+   The latter results in segfaults even when a decl using the type doesn't\n+   get invoked.  */\n+\n+static tree\n+builtin_type_for_size (int size, bool unsignedp)\n+{\n+  tree type = lang_hooks.types.type_for_size (size, unsignedp);\n+  return type ? type : error_mark_node;\n+}\n+\n+/* Support for DEF_BUILTIN.  */\n+\n+static void\n+do_build_builtin_fn (built_in_function fncode,\n+\t\t     const char *name,\n+\t\t     built_in_class fnclass,\n+\t\t     tree fntype, bool both_p, bool fallback_p,\n+\t\t     tree fnattrs, bool implicit_p)\n+{\n+  tree decl;\n+  const char *libname;\n+\n+  if (fntype == error_mark_node)\n+    return;\n+\n+  gcc_assert ((!both_p && !fallback_p)\n+\t      || !strncmp (name, \"__builtin_\",\n+\t\t\t   strlen (\"__builtin_\")));\n+\n+  libname = name + strlen (\"__builtin_\");\n+\n+  decl = add_builtin_function (name, fntype, fncode, fnclass,\n+\t\t\t       fallback_p ? libname : NULL, fnattrs);\n+\n+  set_builtin_decl (fncode, decl, implicit_p);\n+}\n+\n+/* Standard data types to be used in builtin argument declarations.  */\n+\n+static GTY(()) tree string_type_node;\n+static GTY(()) tree const_string_type_node;\n+static GTY(()) tree wint_type_node;\n+static GTY(()) tree intmax_type_node;\n+static GTY(()) tree uintmax_type_node;\n+static GTY(()) tree signed_size_type_node;\n+\n+\n+/* Build nodes that would have been created by the C front-end; necessary\n+   for including builtin-types.def and ultimately builtins.def.  */\n+\n+static void\n+d_build_c_type_nodes (void)\n+{\n+  void_list_node = build_tree_list (NULL_TREE, void_type_node);\n+  string_type_node = build_pointer_type (char_type_node);\n+  const_string_type_node\n+    = build_pointer_type (build_qualified_type (char_type_node,\n+\t\t\t\t\t\tTYPE_QUAL_CONST));\n+\n+  if (strcmp (SIZE_TYPE, \"unsigned int\") == 0)\n+    {\n+      intmax_type_node = integer_type_node;\n+      uintmax_type_node = unsigned_type_node;\n+      signed_size_type_node = integer_type_node;\n+    }\n+  else if (strcmp (SIZE_TYPE, \"long unsigned int\") == 0)\n+    {\n+      intmax_type_node = long_integer_type_node;\n+      uintmax_type_node = long_unsigned_type_node;\n+      signed_size_type_node = long_integer_type_node;\n+    }\n+  else if (strcmp (SIZE_TYPE, \"long long unsigned int\") == 0)\n+    {\n+      intmax_type_node = long_long_integer_type_node;\n+      uintmax_type_node = long_long_unsigned_type_node;\n+      signed_size_type_node = long_long_integer_type_node;\n+    }\n+  else\n+    gcc_unreachable ();\n+\n+  wint_type_node = unsigned_type_node;\n+  pid_type_node = integer_type_node;\n+}\n+\n+/* Build nodes that are used by the D front-end.\n+   These are distinct from C types.  */\n+\n+static void\n+d_build_d_type_nodes (void)\n+{\n+  /* Integral types.  */\n+  d_byte_type = make_signed_type (8);\n+  d_ubyte_type = make_unsigned_type (8);\n+\n+  d_short_type = make_signed_type (16);\n+  d_ushort_type = make_unsigned_type (16);\n+\n+  d_int_type = make_signed_type (32);\n+  d_uint_type = make_unsigned_type (32);\n+\n+  d_long_type = make_signed_type (64);\n+  d_ulong_type = make_unsigned_type (64);\n+\n+  d_cent_type = make_signed_type (128);\n+  d_ucent_type = make_unsigned_type (128);\n+\n+  {\n+    /* Re-define size_t as a D type.  */\n+    machine_mode type_mode = TYPE_MODE (size_type_node);\n+    size_type_node = lang_hooks.types.type_for_mode (type_mode, 1);\n+  }\n+\n+  /* Bool and Character types.  */\n+  d_bool_type = make_unsigned_type (1);\n+  TREE_SET_CODE (d_bool_type, BOOLEAN_TYPE);\n+\n+  char8_type_node = make_unsigned_type (8);\n+  TYPE_STRING_FLAG (char8_type_node) = 1;\n+\n+  char16_type_node = make_unsigned_type (16);\n+  TYPE_STRING_FLAG (char16_type_node) = 1;\n+\n+  char32_type_node = make_unsigned_type (32);\n+  TYPE_STRING_FLAG (char32_type_node) = 1;\n+\n+  /* Imaginary types.  */\n+  ifloat_type_node = build_distinct_type_copy (float_type_node);\n+  TYPE_IMAGINARY_FLOAT (ifloat_type_node) = 1;\n+\n+  idouble_type_node = build_distinct_type_copy (double_type_node);\n+  TYPE_IMAGINARY_FLOAT (idouble_type_node) = 1;\n+\n+  ireal_type_node = build_distinct_type_copy (long_double_type_node);\n+  TYPE_IMAGINARY_FLOAT (ireal_type_node) = 1;\n+\n+  /* Used for ModuleInfo, ClassInfo, and Interface decls.  */\n+  unknown_type_node = make_node (RECORD_TYPE);\n+\n+  /* Make sure we get a unique function type, so we can give\n+     its pointer type a name.  (This wins for gdb).  */\n+  {\n+    tree vfunc_type = make_node (FUNCTION_TYPE);\n+    TREE_TYPE (vfunc_type) = d_int_type;\n+    TYPE_ARG_TYPES (vfunc_type) = NULL_TREE;\n+    layout_type (vfunc_type);\n+\n+    vtable_entry_type = build_pointer_type (vfunc_type);\n+  }\n+\n+  vtbl_ptr_type_node = build_pointer_type (vtable_entry_type);\n+  layout_type (vtbl_ptr_type_node);\n+\n+  /* When an object is accessed via an interface, this type appears\n+     as the first entry in its vtable.  */\n+  {\n+    tree domain = build_index_type (size_int (3));\n+    vtbl_interface_type_node = build_array_type (ptr_type_node, domain);\n+  }\n+\n+  /* Use `void[]' as a generic dynamic array type.  */\n+  array_type_node = make_struct_type (\"__builtin_void[]\", 2,\n+\t\t\t\t      get_identifier (\"length\"), size_type_node,\n+\t\t\t\t      get_identifier (\"ptr\"), ptr_type_node);\n+  TYPE_DYNAMIC_ARRAY (array_type_node) = 1;\n+\n+  null_array_node = d_array_value (array_type_node, size_zero_node,\n+\t\t\t\t   null_pointer_node);\n+}\n+\n+/* Handle default attributes.  */\n+\n+enum built_in_attribute\n+{\n+#define DEF_ATTR_NULL_TREE(ENUM) ENUM,\n+#define DEF_ATTR_INT(ENUM, VALUE) ENUM,\n+#define DEF_ATTR_STRING(ENUM, VALUE) ENUM,\n+#define DEF_ATTR_IDENT(ENUM, STRING) ENUM,\n+#define DEF_ATTR_TREE_LIST(ENUM, PURPOSE, VALUE, CHAIN) ENUM,\n+#include \"builtin-attrs.def\"\n+#undef DEF_ATTR_NULL_TREE\n+#undef DEF_ATTR_INT\n+#undef DEF_ATTR_STRING\n+#undef DEF_ATTR_IDENT\n+#undef DEF_ATTR_TREE_LIST\n+  ATTR_LAST\n+};\n+\n+static GTY(()) tree built_in_attributes[(int) ATTR_LAST];\n+\n+/* Initialize the attribute table for all the supported builtins.  */\n+\n+static void\n+d_init_attributes (void)\n+{\n+  /* Fill in the built_in_attributes array.  */\n+#define DEF_ATTR_NULL_TREE(ENUM)\t\\\n+  built_in_attributes[(int) ENUM] = NULL_TREE;\n+# define DEF_ATTR_INT(ENUM, VALUE)\t\\\n+  built_in_attributes[(int) ENUM] = build_int_cst (NULL_TREE, VALUE);\n+#define DEF_ATTR_STRING(ENUM, VALUE)\t\\\n+  built_in_attributes[(int) ENUM] = build_string (strlen (VALUE), VALUE);\n+#define DEF_ATTR_IDENT(ENUM, STRING)\t\\\n+  built_in_attributes[(int) ENUM] = get_identifier (STRING);\n+#define DEF_ATTR_TREE_LIST(ENUM, PURPOSE, VALUE, CHAIN)\t\\\n+  built_in_attributes[(int) ENUM]\t\t\t\\\n+  = tree_cons (built_in_attributes[(int) PURPOSE],\t\\\n+\t       built_in_attributes[(int) VALUE],\t\\\n+\t       built_in_attributes[(int) CHAIN]);\n+#include \"builtin-attrs.def\"\n+#undef DEF_ATTR_NULL_TREE\n+#undef DEF_ATTR_INT\n+#undef DEF_ATTR_STRING\n+#undef DEF_ATTR_IDENT\n+#undef DEF_ATTR_TREE_LIST\n+}\n+\n+/* Builtin types.  */\n+\n+enum d_builtin_type\n+{\n+#define DEF_PRIMITIVE_TYPE(NAME, VALUE) NAME,\n+#define DEF_FUNCTION_TYPE_0(NAME, RETURN) NAME,\n+#define DEF_FUNCTION_TYPE_1(NAME, RETURN, ARG1) NAME,\n+#define DEF_FUNCTION_TYPE_2(NAME, RETURN, ARG1, ARG2) NAME,\n+#define DEF_FUNCTION_TYPE_3(NAME, RETURN, ARG1, ARG2, ARG3) NAME,\n+#define DEF_FUNCTION_TYPE_4(NAME, RETURN, ARG1, ARG2, ARG3, ARG4) NAME,\n+#define DEF_FUNCTION_TYPE_5(NAME, RETURN, ARG1, ARG2, ARG3, ARG4, ARG5) NAME,\n+#define DEF_FUNCTION_TYPE_6(NAME, RETURN, ARG1, ARG2, ARG3, ARG4, ARG5, \\\n+\t\t\t    ARG6) NAME,\n+#define DEF_FUNCTION_TYPE_7(NAME, RETURN, ARG1, ARG2, ARG3, ARG4, ARG5, \\\n+\t\t\t    ARG6, ARG7) NAME,\n+#define DEF_FUNCTION_TYPE_8(NAME, RETURN, ARG1, ARG2, ARG3, ARG4, ARG5, \\\n+\t\t\t    ARG6, ARG7, ARG8) NAME,\n+#define DEF_FUNCTION_TYPE_9(NAME, RETURN, ARG1, ARG2, ARG3, ARG4, ARG5, \\\n+\t\t\t    ARG6, ARG7, ARG8, ARG9) NAME,\n+#define DEF_FUNCTION_TYPE_10(NAME, RETURN, ARG1, ARG2, ARG3, ARG4, ARG5, \\\n+\t\t\t     ARG6, ARG7, ARG8, ARG9, ARG10) NAME,\n+#define DEF_FUNCTION_TYPE_11(NAME, RETURN, ARG1, ARG2, ARG3, ARG4, ARG5, \\\n+\t\t\t     ARG6, ARG7, ARG8, ARG9, ARG10, ARG11) NAME,\n+#define DEF_FUNCTION_TYPE_VAR_0(NAME, RETURN) NAME,\n+#define DEF_FUNCTION_TYPE_VAR_1(NAME, RETURN, ARG1) NAME,\n+#define DEF_FUNCTION_TYPE_VAR_2(NAME, RETURN, ARG1, ARG2) NAME,\n+#define DEF_FUNCTION_TYPE_VAR_3(NAME, RETURN, ARG1, ARG2, ARG3) NAME,\n+#define DEF_FUNCTION_TYPE_VAR_4(NAME, RETURN, ARG1, ARG2, ARG3, ARG4) NAME,\n+#define DEF_FUNCTION_TYPE_VAR_5(NAME, RETURN, ARG1, ARG2, ARG3, ARG4, ARG5) \\\n+\t\t\t\tNAME,\n+#define DEF_FUNCTION_TYPE_VAR_6(NAME, RETURN, ARG1, ARG2, ARG3, ARG4, ARG5, \\\n+\t\t\t\tARG6) NAME,\n+#define DEF_FUNCTION_TYPE_VAR_7(NAME, RETURN, ARG1, ARG2, ARG3, ARG4, ARG5, \\\n+\t\t\t\tARG6, ARG7) NAME,\n+#define DEF_FUNCTION_TYPE_VAR_11(NAME, RETURN, ARG1, ARG2, ARG3, ARG4, ARG5, \\\n+\t\t\t\t ARG6, ARG7, ARG8, ARG9, ARG10, ARG11) NAME,\n+#define DEF_POINTER_TYPE(NAME, TYPE) NAME,\n+#include \"builtin-types.def\"\n+#undef DEF_PRIMITIVE_TYPE\n+#undef DEF_FUNCTION_TYPE_0\n+#undef DEF_FUNCTION_TYPE_1\n+#undef DEF_FUNCTION_TYPE_2\n+#undef DEF_FUNCTION_TYPE_3\n+#undef DEF_FUNCTION_TYPE_4\n+#undef DEF_FUNCTION_TYPE_5\n+#undef DEF_FUNCTION_TYPE_6\n+#undef DEF_FUNCTION_TYPE_7\n+#undef DEF_FUNCTION_TYPE_8\n+#undef DEF_FUNCTION_TYPE_9\n+#undef DEF_FUNCTION_TYPE_10\n+#undef DEF_FUNCTION_TYPE_11\n+#undef DEF_FUNCTION_TYPE_VAR_0\n+#undef DEF_FUNCTION_TYPE_VAR_1\n+#undef DEF_FUNCTION_TYPE_VAR_2\n+#undef DEF_FUNCTION_TYPE_VAR_3\n+#undef DEF_FUNCTION_TYPE_VAR_4\n+#undef DEF_FUNCTION_TYPE_VAR_5\n+#undef DEF_FUNCTION_TYPE_VAR_6\n+#undef DEF_FUNCTION_TYPE_VAR_7\n+#undef DEF_FUNCTION_TYPE_VAR_11\n+#undef DEF_POINTER_TYPE\n+  BT_LAST\n+};\n+\n+typedef enum d_builtin_type builtin_type;\n+\n+/* A temporary array used in communication with def_fn_type.  */\n+static GTY(()) tree builtin_types[(int) BT_LAST + 1];\n+\n+/* A helper function for d_init_builtins.  Build function type for DEF with\n+   return type RET and N arguments.  If VAR is true, then the function should\n+   be variadic after those N arguments.\n+\n+   Takes special care not to ICE if any of the types involved are\n+   error_mark_node, which indicates that said type is not in fact available\n+   (see builtin_type_for_size).  In which case the function type as a whole\n+   should be error_mark_node.  */\n+\n+static void\n+def_fn_type (builtin_type def, builtin_type ret, bool var, int n, ...)\n+{\n+  tree t;\n+  tree *args = XALLOCAVEC (tree, n);\n+  va_list list;\n+  int i;\n+\n+  va_start (list, n);\n+  for (i = 0; i < n; ++i)\n+    {\n+      builtin_type a = (builtin_type) va_arg (list, int);\n+      t = builtin_types[a];\n+      if (t == error_mark_node)\n+\tgoto egress;\n+      args[i] = t;\n+    }\n+\n+  t = builtin_types[ret];\n+  if (t == error_mark_node)\n+    goto egress;\n+  if (var)\n+    t = build_varargs_function_type_array (t, n, args);\n+  else\n+    t = build_function_type_array (t, n, args);\n+\n+ egress:\n+  builtin_types[def] = t;\n+  va_end (list);\n+}\n+\n+/* Create builtin types and functions.  VA_LIST_REF_TYPE_NODE and\n+   VA_LIST_ARG_TYPE_NODE are used in builtin-types.def.  */\n+\n+static void\n+d_define_builtins (tree va_list_ref_type_node ATTRIBUTE_UNUSED,\n+\t\t   tree va_list_arg_type_node ATTRIBUTE_UNUSED)\n+{\n+#define DEF_PRIMITIVE_TYPE(ENUM, VALUE) \\\n+  builtin_types[(int) ENUM] = VALUE;\n+#define DEF_FUNCTION_TYPE_0(ENUM, RETURN) \\\n+  def_fn_type (ENUM, RETURN, 0, 0);\n+#define DEF_FUNCTION_TYPE_1(ENUM, RETURN, ARG1) \\\n+  def_fn_type (ENUM, RETURN, 0, 1, ARG1);\n+#define DEF_FUNCTION_TYPE_2(ENUM, RETURN, ARG1, ARG2) \\\n+  def_fn_type (ENUM, RETURN, 0, 2, ARG1, ARG2);\n+#define DEF_FUNCTION_TYPE_3(ENUM, RETURN, ARG1, ARG2, ARG3) \\\n+  def_fn_type (ENUM, RETURN, 0, 3, ARG1, ARG2, ARG3);\n+#define DEF_FUNCTION_TYPE_4(ENUM, RETURN, ARG1, ARG2, ARG3, ARG4) \\\n+  def_fn_type (ENUM, RETURN, 0, 4, ARG1, ARG2, ARG3, ARG4);\n+#define DEF_FUNCTION_TYPE_5(ENUM, RETURN, ARG1, ARG2, ARG3, ARG4, ARG5) \\\n+  def_fn_type (ENUM, RETURN, 0, 5, ARG1, ARG2, ARG3, ARG4, ARG5);\n+#define DEF_FUNCTION_TYPE_6(ENUM, RETURN, ARG1, ARG2, ARG3, ARG4, ARG5, \\\n+\t\t\t    ARG6)\t\t\t\t\t\\\n+  def_fn_type (ENUM, RETURN, 0, 6, ARG1, ARG2, ARG3, ARG4, ARG5, ARG6);\n+#define DEF_FUNCTION_TYPE_7(ENUM, RETURN, ARG1, ARG2, ARG3, ARG4, ARG5, \\\n+\t\t\t    ARG6, ARG7)\t\t\t\t\t\\\n+  def_fn_type (ENUM, RETURN, 0, 7, ARG1, ARG2, ARG3, ARG4, ARG5, ARG6, ARG7);\n+#define DEF_FUNCTION_TYPE_8(ENUM, RETURN, ARG1, ARG2, ARG3, ARG4, ARG5, \\\n+\t\t\t    ARG6, ARG7, ARG8)\t\t\t\t\\\n+  def_fn_type (ENUM, RETURN, 0, 8, ARG1, ARG2, ARG3, ARG4, ARG5, ARG6,  \\\n+\t       ARG7, ARG8);\n+#define DEF_FUNCTION_TYPE_9(ENUM, RETURN, ARG1, ARG2, ARG3, ARG4, ARG5, \\\n+\t\t\t    ARG6, ARG7, ARG8, ARG9)\t\t\t\\\n+  def_fn_type (ENUM, RETURN, 0, 9, ARG1, ARG2, ARG3, ARG4, ARG5, ARG6,  \\\n+\t       ARG7, ARG8, ARG9);\n+#define DEF_FUNCTION_TYPE_10(ENUM, RETURN, ARG1, ARG2, ARG3, ARG4, ARG5, \\\n+\t\t\t    ARG6, ARG7, ARG8, ARG9, ARG10)\t\t \\\n+  def_fn_type (ENUM, RETURN, 0, 10, ARG1, ARG2, ARG3, ARG4, ARG5, ARG6,  \\\n+\t       ARG7, ARG8, ARG9, ARG10);\n+#define DEF_FUNCTION_TYPE_11(ENUM, RETURN, ARG1, ARG2, ARG3, ARG4, ARG5, \\\n+\t\t\t    ARG6, ARG7, ARG8, ARG9, ARG10, ARG11)\t \\\n+  def_fn_type (ENUM, RETURN, 0, 11, ARG1, ARG2, ARG3, ARG4, ARG5, ARG6,  \\\n+\t       ARG7, ARG8, ARG9, ARG10, ARG11);\n+#define DEF_FUNCTION_TYPE_VAR_0(ENUM, RETURN) \\\n+  def_fn_type (ENUM, RETURN, 1, 0);\n+#define DEF_FUNCTION_TYPE_VAR_1(ENUM, RETURN, ARG1) \\\n+  def_fn_type (ENUM, RETURN, 1, 1, ARG1);\n+#define DEF_FUNCTION_TYPE_VAR_2(ENUM, RETURN, ARG1, ARG2) \\\n+  def_fn_type (ENUM, RETURN, 1, 2, ARG1, ARG2);\n+#define DEF_FUNCTION_TYPE_VAR_3(ENUM, RETURN, ARG1, ARG2, ARG3) \\\n+  def_fn_type (ENUM, RETURN, 1, 3, ARG1, ARG2, ARG3);\n+#define DEF_FUNCTION_TYPE_VAR_4(ENUM, RETURN, ARG1, ARG2, ARG3, ARG4) \\\n+  def_fn_type (ENUM, RETURN, 1, 4, ARG1, ARG2, ARG3, ARG4);\n+#define DEF_FUNCTION_TYPE_VAR_5(ENUM, RETURN, ARG1, ARG2, ARG3, ARG4, ARG5) \\\n+  def_fn_type (ENUM, RETURN, 1, 5, ARG1, ARG2, ARG3, ARG4, ARG5);\n+#define DEF_FUNCTION_TYPE_VAR_6(ENUM, RETURN, ARG1, ARG2, ARG3, ARG4, ARG5, \\\n+\t\t\t\tARG6)\t\t\t\t\t    \\\n+  def_fn_type (ENUM, RETURN, 1, 6, ARG1, ARG2, ARG3, ARG4, ARG5, ARG6);\n+#define DEF_FUNCTION_TYPE_VAR_7(ENUM, RETURN, ARG1, ARG2, ARG3, ARG4, ARG5, \\\n+\t\t\t\tARG6, ARG7)\t\t\t\t    \\\n+  def_fn_type (ENUM, RETURN, 1, 7, ARG1, ARG2, ARG3, ARG4, ARG5, ARG6, ARG7);\n+#define DEF_FUNCTION_TYPE_VAR_11(ENUM, RETURN, ARG1, ARG2, ARG3, ARG4, ARG5, \\\n+\t\t\t\t ARG6, ARG7, ARG8, ARG9, ARG10, ARG11)       \\\n+  def_fn_type (ENUM, RETURN, 1, 11, ARG1, ARG2, ARG3, ARG4, ARG5, ARG6,      \\\n+\t       ARG7, ARG8, ARG9, ARG10, ARG11);\n+#define DEF_POINTER_TYPE(ENUM, TYPE) \\\n+  builtin_types[(int) ENUM] = build_pointer_type (builtin_types[(int) TYPE]);\n+\n+#include \"builtin-types.def\"\n+\n+#undef DEF_PRIMITIVE_TYPE\n+#undef DEF_FUNCTION_TYPE_1\n+#undef DEF_FUNCTION_TYPE_2\n+#undef DEF_FUNCTION_TYPE_3\n+#undef DEF_FUNCTION_TYPE_4\n+#undef DEF_FUNCTION_TYPE_5\n+#undef DEF_FUNCTION_TYPE_6\n+#undef DEF_FUNCTION_TYPE_7\n+#undef DEF_FUNCTION_TYPE_8\n+#undef DEF_FUNCTION_TYPE_9\n+#undef DEF_FUNCTION_TYPE_10\n+#undef DEF_FUNCTION_TYPE_11\n+#undef DEF_FUNCTION_TYPE_VAR_0\n+#undef DEF_FUNCTION_TYPE_VAR_1\n+#undef DEF_FUNCTION_TYPE_VAR_2\n+#undef DEF_FUNCTION_TYPE_VAR_3\n+#undef DEF_FUNCTION_TYPE_VAR_4\n+#undef DEF_FUNCTION_TYPE_VAR_5\n+#undef DEF_FUNCTION_TYPE_VAR_6\n+#undef DEF_FUNCTION_TYPE_VAR_7\n+#undef DEF_FUNCTION_TYPE_VAR_11\n+#undef DEF_POINTER_TYPE\n+  builtin_types[(int) BT_LAST] = NULL_TREE;\n+\n+  d_init_attributes ();\n+\n+#define DEF_BUILTIN(ENUM, NAME, CLASS, TYPE, LIBTYPE, BOTH_P, FALLBACK_P, \\\n+\t\t    NONANSI_P, ATTRS, IMPLICIT, COND)\t\t\t  \\\n+  if (NAME && COND)\t\t\t\t\t\t\t  \\\n+    do_build_builtin_fn (ENUM, NAME, CLASS,\t\t\t\t  \\\n+\t\t\t builtin_types[(int) TYPE],\t\t\t  \\\n+\t\t\t BOTH_P, FALLBACK_P,\t\t\t\t  \\\n+\t\t\t built_in_attributes[(int) ATTRS], IMPLICIT);\n+#include \"builtins.def\"\n+#undef DEF_BUILTIN\n+}\n+\n+/* Build builtin functions and types for the D language frontend.  */\n+\n+void\n+d_init_builtins (void)\n+{\n+  /* Build the \"standard\" abi va_list.  */\n+  Type::tvalist = build_frontend_type (va_list_type_node);\n+  if (!Type::tvalist)\n+    {\n+      error (\"cannot represent built-in va_list type in D\");\n+      gcc_unreachable ();\n+    }\n+\n+  /* Map the va_list type to the D frontend Type.  This is to prevent both\n+     errors in gimplification or an ICE in targetm.canonical_va_list_type.  */\n+  Type::tvalist->ctype = va_list_type_node;\n+  TYPE_LANG_SPECIFIC (va_list_type_node) = build_lang_type (Type::tvalist);\n+\n+  d_build_c_type_nodes ();\n+  d_build_d_type_nodes ();\n+\n+  if (TREE_CODE (va_list_type_node) == ARRAY_TYPE)\n+    {\n+      /* It might seem natural to make the argument type a pointer, but there\n+\t is no implicit casting from arrays to pointers in D.  */\n+      d_define_builtins (va_list_type_node, va_list_type_node);\n+    }\n+  else\n+    {\n+      d_define_builtins (build_reference_type (va_list_type_node),\n+\t\t\t va_list_type_node);\n+    }\n+\n+  targetm.init_builtins ();\n+  build_common_builtin_nodes ();\n+}\n+\n+/* Registration of machine- or os-specific builtin types.\n+   Add to builtin types list for maybe processing later\n+   if `gcc.builtins' was imported into the current module.  */\n+\n+void\n+d_register_builtin_type (tree type, const char *name)\n+{\n+  tree decl = build_decl (UNKNOWN_LOCATION, TYPE_DECL,\n+\t\t\t  get_identifier (name), type);\n+  DECL_ARTIFICIAL (decl) = 1;\n+\n+  if (!TYPE_NAME (type))\n+    TYPE_NAME (type) = decl;\n+\n+  vec_safe_push (gcc_builtins_types, decl);\n+}\n+\n+/* Add DECL to builtin functions list for maybe processing later\n+   if `gcc.builtins' was imported into the current module.  */\n+\n+tree\n+d_builtin_function (tree decl)\n+{\n+  if (!flag_no_builtin && DECL_ASSEMBLER_NAME_SET_P (decl))\n+    vec_safe_push (gcc_builtins_libfuncs, decl);\n+\n+  vec_safe_push (gcc_builtins_functions, decl);\n+  return decl;\n+}\n+\n+\n+#include \"gt-d-d-builtins.h\""}, {"sha": "74edb3680e7a5226951b2b89fe5b0eaf59906adc", "filename": "gcc/d/d-codegen.cc", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fd-codegen.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fd-codegen.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fd-codegen.cc?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "7e073668b302164ba22b853b15b1ac68fdced79a", "filename": "gcc/d/d-convert.cc", "status": "added", "additions": 805, "deletions": 0, "changes": 805, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fd-convert.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fd-convert.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fd-convert.cc?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "a21e7d6c40df65eb1b1fbc4640f63c269ef77fad", "filename": "gcc/d/d-diagnostic.cc", "status": "added", "additions": 358, "deletions": 0, "changes": 358, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fd-diagnostic.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fd-diagnostic.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fd-diagnostic.cc?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "3cba25b1c5dcf42d8808e70452598641ffab8e5d", "filename": "gcc/d/d-frontend.cc", "status": "added", "additions": 628, "deletions": 0, "changes": 628, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fd-frontend.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fd-frontend.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fd-frontend.cc?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "be08ccb5f3b9b1b39a14d761aab2be65a7ba9921", "filename": "gcc/d/d-incpath.cc", "status": "added", "additions": 195, "deletions": 0, "changes": 195, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fd-incpath.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fd-incpath.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fd-incpath.cc?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "42fefaf640912cd6a282f42958a96b1099c85cf2", "filename": "gcc/d/d-lang.cc", "status": "added", "additions": 1797, "deletions": 0, "changes": 1797, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fd-lang.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fd-lang.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fd-lang.cc?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "fdea91f9d830283eb305caf8a153468859213361", "filename": "gcc/d/d-longdouble.cc", "status": "added", "additions": 204, "deletions": 0, "changes": 204, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fd-longdouble.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fd-longdouble.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fd-longdouble.cc?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "d0b784458360e23e7ffec04124e909273a4d0a28", "filename": "gcc/d/d-spec.cc", "status": "added", "additions": 503, "deletions": 0, "changes": 503, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fd-spec.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fd-spec.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fd-spec.cc?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "ef3e948189ca266d1fad3f2b2ee20c6d482f519e", "filename": "gcc/d/d-target-def.h", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fd-target-def.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fd-target-def.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fd-target-def.h?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "3ae791b5f70d9c0e445a9ae0f1b71229a276e45e", "filename": "gcc/d/d-target.cc", "status": "added", "additions": 394, "deletions": 0, "changes": 394, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fd-target.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fd-target.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fd-target.cc?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "d2ff07f295223a8834740f69c9b282aa6fc02bb2", "filename": "gcc/d/d-target.def", "status": "added", "additions": 60, "deletions": 0, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fd-target.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fd-target.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fd-target.def?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "283eb24a8810c3db3af803b5b22626ed8d7da417", "filename": "gcc/d/d-target.h", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fd-target.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fd-target.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fd-target.h?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "86b6461218678923be8f0082aa3d02cc5c0c9142", "filename": "gcc/d/d-tree.def", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fd-tree.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fd-tree.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fd-tree.def?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "6f18e40c2fa8be3c98d334f27d72b218ef3f6d07", "filename": "gcc/d/d-tree.h", "status": "added", "additions": 675, "deletions": 0, "changes": 675, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fd-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fd-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fd-tree.h?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "6fd0808123f9e72efb058e6db506b0d3db560414", "filename": "gcc/d/decl.cc", "status": "added", "additions": 2312, "deletions": 0, "changes": 2312, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdecl.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdecl.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdecl.cc?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "37e9c8681d30a0fca3623f34d73215b9a85fcb9d", "filename": "gcc/d/dmd/access.c", "status": "added", "additions": 572, "deletions": 0, "changes": 572, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Faccess.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Faccess.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Faccess.c?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "d7db82b0f0e87ebd957effa0ccb7243e3bcebf1e", "filename": "gcc/d/dmd/aggregate.h", "status": "added", "additions": 336, "deletions": 0, "changes": 336, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Faggregate.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Faggregate.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Faggregate.h?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "50921ecb300890ea113b034c9f9e02b5b6a10c06", "filename": "gcc/d/dmd/aliasthis.c", "status": "added", "additions": 169, "deletions": 0, "changes": 169, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Faliasthis.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Faliasthis.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Faliasthis.c?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "e5b0280d9e11571ea74c7a6e10b1f65b704345fc", "filename": "gcc/d/dmd/aliasthis.h", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Faliasthis.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Faliasthis.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Faliasthis.h?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "f20e411228f4e7b0cdeb65e06dc4c350b531faef", "filename": "gcc/d/dmd/apply.c", "status": "added", "additions": 150, "deletions": 0, "changes": 150, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fapply.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fapply.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fapply.c?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "cad8d4ec92fed29dee5698aa79e1378c5312032d", "filename": "gcc/d/dmd/argtypes.c", "status": "added", "additions": 486, "deletions": 0, "changes": 486, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fargtypes.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fargtypes.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fargtypes.c?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "0ea0d329399635d464aac1367ea3cc6df28a5d23", "filename": "gcc/d/dmd/arrayop.c", "status": "added", "additions": 638, "deletions": 0, "changes": 638, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Farrayop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Farrayop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Farrayop.c?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "a3d305ed8e3aefd218b7ec41e3617dba5a2e676f", "filename": "gcc/d/dmd/arraytypes.h", "status": "added", "additions": 62, "deletions": 0, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Farraytypes.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Farraytypes.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Farraytypes.h?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "c4270ea63e66686611f8a580aaf77a9e762a5b89", "filename": "gcc/d/dmd/attrib.c", "status": "added", "additions": 1602, "deletions": 0, "changes": 1602, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fattrib.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fattrib.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fattrib.c?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "83486a954313ee5aa0bdf7a64fecda7b65c63b51", "filename": "gcc/d/dmd/attrib.h", "status": "added", "additions": 275, "deletions": 0, "changes": 275, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fattrib.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fattrib.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fattrib.h?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "0516f139001326a454f8af75bc4cd458dbdfe103", "filename": "gcc/d/dmd/blockexit.c", "status": "added", "additions": 502, "deletions": 0, "changes": 502, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fblockexit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fblockexit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fblockexit.c?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "36b7cd93cdfbac762f5be4c6ce276df2ea6305c2", "filename": "gcc/d/dmd/boostlicense.txt", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fboostlicense.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fboostlicense.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fboostlicense.txt?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "a00741b7d72606e59beb6dcab541d6ea8e1caabc", "filename": "gcc/d/dmd/canthrow.c", "status": "added", "additions": 317, "deletions": 0, "changes": 317, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fcanthrow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fcanthrow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fcanthrow.c?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "b9ccb5b2397485adc8d98ec6f81bb77947f9b88e", "filename": "gcc/d/dmd/checkedint.c", "status": "added", "additions": 238, "deletions": 0, "changes": 238, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fcheckedint.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fcheckedint.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fcheckedint.c?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "1f6545b6c62ffb9539a70f78203704e434df5647", "filename": "gcc/d/dmd/checkedint.h", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fcheckedint.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fcheckedint.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fcheckedint.h?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "9105d114eaa01b1449b121884b9fd0c19f4f2bc8", "filename": "gcc/d/dmd/clone.c", "status": "added", "additions": 1198, "deletions": 0, "changes": 1198, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fclone.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fclone.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fclone.c?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "cfcc317ff9c17ee8540c9865ea5d71f24fea187e", "filename": "gcc/d/dmd/compiler.h", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fcompiler.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fcompiler.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fcompiler.h?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "b4ee395ec5b5620f94d125a2493aeeb5ac10662f", "filename": "gcc/d/dmd/complex_t.h", "status": "added", "additions": 71, "deletions": 0, "changes": 71, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fcomplex_t.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fcomplex_t.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fcomplex_t.h?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "047eca261d84b8012fb8c0b5c07d2cb67ed96b6b", "filename": "gcc/d/dmd/cond.c", "status": "added", "additions": 369, "deletions": 0, "changes": 369, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fcond.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fcond.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fcond.c?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "e7727ccb6fb8e16b51616dbbd0864648ad901ceb", "filename": "gcc/d/dmd/cond.h", "status": "added", "additions": 107, "deletions": 0, "changes": 107, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fcond.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fcond.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fcond.h?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "43e831f1dfef3ec4a9a235aae8826cd6a6c1e40e", "filename": "gcc/d/dmd/constfold.c", "status": "added", "additions": 1918, "deletions": 0, "changes": 1918, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fconstfold.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fconstfold.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fconstfold.c?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "bb919a5f2bbc1ee956682b26c753553cdd241664", "filename": "gcc/d/dmd/cppmangle.c", "status": "added", "additions": 1103, "deletions": 0, "changes": 1103, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fcppmangle.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fcppmangle.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fcppmangle.c?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "f7f7c8547f4b6d78af2748e4aaa43bc374679eec", "filename": "gcc/d/dmd/ctfe.h", "status": "added", "additions": 267, "deletions": 0, "changes": 267, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fctfe.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fctfe.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fctfe.h?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "ad5b827dcd360cddea29233adfff913dfe7e3d13", "filename": "gcc/d/dmd/ctfeexpr.c", "status": "added", "additions": 2108, "deletions": 0, "changes": 2108, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fctfeexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fctfeexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fctfeexpr.c?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "ee3bfd9d888b47724d2d135fb0977e73354f31e1", "filename": "gcc/d/dmd/dcast.c", "status": "added", "additions": 3732, "deletions": 0, "changes": 3732, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fdcast.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fdcast.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fdcast.c?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "414332ccd34a5e25f32bed87cf05671c3efa0468", "filename": "gcc/d/dmd/dclass.c", "status": "added", "additions": 1947, "deletions": 0, "changes": 1947, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fdclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fdclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fdclass.c?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "76132b9458e05d0b6bc788dfa426aced8967c5f6", "filename": "gcc/d/dmd/declaration.c", "status": "added", "additions": 2534, "deletions": 0, "changes": 2534, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fdeclaration.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fdeclaration.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fdeclaration.c?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "071ce2ca206a910a1189c3858e5613ae0626a1f8", "filename": "gcc/d/dmd/declaration.h", "status": "added", "additions": 899, "deletions": 0, "changes": 899, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fdeclaration.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fdeclaration.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fdeclaration.h?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "99fe93828a62b285b4cc6fbfa4971e82fe658cdb", "filename": "gcc/d/dmd/delegatize.c", "status": "added", "additions": 210, "deletions": 0, "changes": 210, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fdelegatize.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fdelegatize.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fdelegatize.c?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "4107f11738e6417ee6b609abb9254ea592daf785", "filename": "gcc/d/dmd/denum.c", "status": "added", "additions": 748, "deletions": 0, "changes": 748, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fdenum.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fdenum.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fdenum.c?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "03b3d1f2c57cfde81d55ab9aab93ff6791f41bb2", "filename": "gcc/d/dmd/dimport.c", "status": "added", "additions": 480, "deletions": 0, "changes": 480, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fdimport.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fdimport.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fdimport.c?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "54bf00d5a414b38f9538bb471266f0e679ed6354", "filename": "gcc/d/dmd/dinterpret.c", "status": "added", "additions": 6801, "deletions": 0, "changes": 6801, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fdinterpret.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fdinterpret.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fdinterpret.c?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "a5d8da10c3649217e7f1e42b55428b41500afc5a", "filename": "gcc/d/dmd/dmacro.c", "status": "added", "additions": 463, "deletions": 0, "changes": 463, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fdmacro.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fdmacro.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fdmacro.c?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "9734624b2881d5112a81c83cd5f8017dec369139", "filename": "gcc/d/dmd/dmangle.c", "status": "added", "additions": 865, "deletions": 0, "changes": 865, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fdmangle.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fdmangle.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fdmangle.c?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "a374aac73a771227cdedc0daf1d9727d4fb81c3f", "filename": "gcc/d/dmd/dmodule.c", "status": "added", "additions": 1436, "deletions": 0, "changes": 1436, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fdmodule.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fdmodule.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fdmodule.c?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "92ce33cd546df220d3a401d33a22390c504c5f30", "filename": "gcc/d/dmd/doc.c", "status": "added", "additions": 2741, "deletions": 0, "changes": 2741, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fdoc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fdoc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fdoc.c?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "7f3ef5127dea655552685ba49f73f284fbcc27d7", "filename": "gcc/d/dmd/doc.h", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fdoc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fdoc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fdoc.h?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "924a3764c00a432c5f8af459ba626d14cd6f781f", "filename": "gcc/d/dmd/dscope.c", "status": "added", "additions": 702, "deletions": 0, "changes": 702, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fdscope.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fdscope.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fdscope.c?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "c99abcea9aa146025b82390dcade5bbef59b95e0", "filename": "gcc/d/dmd/dstruct.c", "status": "added", "additions": 1463, "deletions": 0, "changes": 1463, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fdstruct.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fdstruct.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fdstruct.c?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "0f0a0dc690402019e793ca63fd7c3750d7e3578d", "filename": "gcc/d/dmd/dsymbol.c", "status": "added", "additions": 1781, "deletions": 0, "changes": 1781, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fdsymbol.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fdsymbol.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fdsymbol.c?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "0f2f03de4f1c1b46c86499e1f791af3bab41c5c1", "filename": "gcc/d/dmd/dsymbol.h", "status": "added", "additions": 406, "deletions": 0, "changes": 406, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fdsymbol.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fdsymbol.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fdsymbol.h?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "f2b3b2f7b2180c7f48e03729bfb2811d4110872d", "filename": "gcc/d/dmd/dtemplate.c", "status": "added", "additions": 8602, "deletions": 0, "changes": 8602, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fdtemplate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fdtemplate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fdtemplate.c?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "47374868674dd2b2964fe50ed7b4b4f20454e919", "filename": "gcc/d/dmd/dversion.c", "status": "added", "additions": 202, "deletions": 0, "changes": 202, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fdversion.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fdversion.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fdversion.c?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "38fd2d8713e4ded12508a41efbf3d502db0b169d", "filename": "gcc/d/dmd/entity.c", "status": "added", "additions": 2392, "deletions": 0, "changes": 2392, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fentity.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fentity.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fentity.c?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "072eacf583e5ab89fb7a605b042d525ebcd85e3b", "filename": "gcc/d/dmd/enum.h", "status": "added", "additions": 95, "deletions": 0, "changes": 95, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fenum.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fenum.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fenum.h?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "7b3ebc0deeb6625562219a27917ac8a027153d6d", "filename": "gcc/d/dmd/errors.h", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Ferrors.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Ferrors.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Ferrors.h?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "353e56fd58f9975bada7d79e4bfcb2007947eba1", "filename": "gcc/d/dmd/escape.c", "status": "added", "additions": 1234, "deletions": 0, "changes": 1234, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fescape.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fescape.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fescape.c?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "dc0d8e7c017269e2ad1c1c98aa653a6406f806b5", "filename": "gcc/d/dmd/expression.c", "status": "added", "additions": 6945, "deletions": 0, "changes": 6945, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fexpression.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fexpression.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fexpression.c?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "57c516c1d23a4752ef35fb89a2c0042f0ac0c2fe", "filename": "gcc/d/dmd/expression.h", "status": "added", "additions": 1559, "deletions": 0, "changes": 1559, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fexpression.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fexpression.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fexpression.h?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "247d1433f4b31166048903242386844341248b79", "filename": "gcc/d/dmd/expressionsem.c", "status": "added", "additions": 8740, "deletions": 0, "changes": 8740, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fexpressionsem.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fexpressionsem.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fexpressionsem.c?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "2feea9126cd48257505ad852cc5a0601b4f46e40", "filename": "gcc/d/dmd/func.c", "status": "added", "additions": 5626, "deletions": 0, "changes": 5626, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Ffunc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Ffunc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Ffunc.c?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "63caeb7b6b18a7448188fd230775233b2a9fa0ec", "filename": "gcc/d/dmd/globals.h", "status": "added", "additions": 317, "deletions": 0, "changes": 317, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fglobals.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fglobals.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fglobals.h?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "2c734b31822543cf8149bb1b72962f73ade3fa15", "filename": "gcc/d/dmd/hdrgen.c", "status": "added", "additions": 3414, "deletions": 0, "changes": 3414, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fhdrgen.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fhdrgen.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fhdrgen.c?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "c4bafca6d362e788f9a6e68f7d5e6cdc42a42316", "filename": "gcc/d/dmd/hdrgen.h", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fhdrgen.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fhdrgen.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fhdrgen.h?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "1a4d810c30e224fd839d093940e76572f0e2239f", "filename": "gcc/d/dmd/iasm.c", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fiasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fiasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fiasm.c?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "5e0d9ae5a13e2c5e657954f1803c943a8fdc8c8c", "filename": "gcc/d/dmd/iasmgcc.c", "status": "added", "additions": 356, "deletions": 0, "changes": 356, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fiasmgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fiasmgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fiasmgcc.c?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "5e40746da7db523886d463b576f2ee99e3e54248", "filename": "gcc/d/dmd/identifier.c", "status": "added", "additions": 190, "deletions": 0, "changes": 190, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fidentifier.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fidentifier.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fidentifier.c?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "9352d286a75734a5d2e75f15f89ade44d9467790", "filename": "gcc/d/dmd/identifier.h", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fidentifier.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fidentifier.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fidentifier.h?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "d360ec850d8fdb056d348f3787498e503f907d52", "filename": "gcc/d/dmd/idgen.c", "status": "added", "additions": 503, "deletions": 0, "changes": 503, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fidgen.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fidgen.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fidgen.c?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "5b88e8e682e17bf92e1407bd36e753e0544a74d9", "filename": "gcc/d/dmd/impcnvgen.c", "status": "added", "additions": 599, "deletions": 0, "changes": 599, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fimpcnvgen.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fimpcnvgen.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fimpcnvgen.c?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "6d75603d80c72bb2b752a725d3f7e86eb6f3d106", "filename": "gcc/d/dmd/imphint.c", "status": "added", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fimphint.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fimphint.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fimphint.c?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "e0fa14d58889a146ef8f7ecde1901c5d8dce7d5b", "filename": "gcc/d/dmd/import.h", "status": "added", "additions": 60, "deletions": 0, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fimport.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fimport.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fimport.h?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "e619cb4850aa5ebd65a15564ab48a4e291f1fa4d", "filename": "gcc/d/dmd/init.c", "status": "added", "additions": 286, "deletions": 0, "changes": 286, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Finit.c?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "f4a150f83e45503ca34010c6752370c63a02c8e1", "filename": "gcc/d/dmd/init.h", "status": "added", "additions": 119, "deletions": 0, "changes": 119, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Finit.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Finit.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Finit.h?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "bdaf2534a0c025fc1776968527cc123a89cbeccf", "filename": "gcc/d/dmd/initsem.c", "status": "added", "additions": 920, "deletions": 0, "changes": 920, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Finitsem.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Finitsem.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Finitsem.c?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "b4d54dbfeea06318d55d2610128d0456fb38720b", "filename": "gcc/d/dmd/intrange.c", "status": "added", "additions": 460, "deletions": 0, "changes": 460, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fintrange.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fintrange.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fintrange.c?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "69111586e8d9487d1f6158ea0bba5e292113ff57", "filename": "gcc/d/dmd/intrange.h", "status": "added", "additions": 149, "deletions": 0, "changes": 149, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fintrange.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fintrange.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fintrange.h?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "4c49023b5429accdc0f3fa0992f2945552a921a6", "filename": "gcc/d/dmd/json.c", "status": "added", "additions": 890, "deletions": 0, "changes": 890, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fjson.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fjson.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fjson.c?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "7e4a51255b8153e7c3728649b049ee29cf9fe106", "filename": "gcc/d/dmd/json.h", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fjson.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fjson.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fjson.h?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "1fefe2b08ded2d87b8c4f9752a56492c43fb7915", "filename": "gcc/d/dmd/lexer.c", "status": "added", "additions": 2401, "deletions": 0, "changes": 2401, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Flexer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Flexer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Flexer.c?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "988c06adec30da1ae3a1f9a17a940bdf38a345c5", "filename": "gcc/d/dmd/lexer.h", "status": "added", "additions": 75, "deletions": 0, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Flexer.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Flexer.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Flexer.h?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "006f11842c49444b9572a2bf07dda04d75ff25a9", "filename": "gcc/d/dmd/macro.h", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fmacro.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fmacro.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fmacro.h?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "72fc89a186054a5e60c023c884d7c25a1286be86", "filename": "gcc/d/dmd/mangle.h", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fmangle.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fmangle.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fmangle.h?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "9cc5bb86feefce1af9d5eedef490d9c01a42bb85", "filename": "gcc/d/dmd/mars.h", "status": "added", "additions": 95, "deletions": 0, "changes": 95, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fmars.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fmars.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fmars.h?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "399b0085635668dec62d3d5f6e2b9827ba022820", "filename": "gcc/d/dmd/module.h", "status": "added", "additions": 179, "deletions": 0, "changes": 179, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fmodule.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fmodule.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fmodule.h?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "a4c38e8a1eef314365a2036d334b53d04d079dec", "filename": "gcc/d/dmd/mtype.c", "status": "added", "additions": 9410, "deletions": 0, "changes": 9410, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fmtype.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fmtype.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fmtype.c?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "c3b8a979bbe27b532f2d72ddc999015fa7121b9e", "filename": "gcc/d/dmd/mtype.h", "status": "added", "additions": 934, "deletions": 0, "changes": 934, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fmtype.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fmtype.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fmtype.h?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "2b8255ee50e9445c8f52bade3193e3be200c6a4c", "filename": "gcc/d/dmd/nogc.c", "status": "added", "additions": 241, "deletions": 0, "changes": 241, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fnogc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fnogc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fnogc.c?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "2bd6b96981352d9e4a4f12e53bd5f9e272975119", "filename": "gcc/d/dmd/nspace.c", "status": "added", "additions": 234, "deletions": 0, "changes": 234, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fnspace.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fnspace.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fnspace.c?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "8ca01ae8485625d67dbb84b2a559d882f5d1d94d", "filename": "gcc/d/dmd/nspace.h", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fnspace.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fnspace.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fnspace.h?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "e12523d0a2ec5addf20ab45a9858763022f8485d", "filename": "gcc/d/dmd/objc.c", "status": "added", "additions": 84, "deletions": 0, "changes": 84, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fobjc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fobjc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fobjc.c?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "cc1f0981413dfa24a95d051b34361c67941a242b", "filename": "gcc/d/dmd/objc.h", "status": "added", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fobjc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fobjc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fobjc.h?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "be6fd78886a1e17b007495a53bd221a0972ab36f", "filename": "gcc/d/dmd/opover.c", "status": "added", "additions": 1966, "deletions": 0, "changes": 1966, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fopover.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fopover.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fopover.c?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "12224fa518840f64d5d2967210c1653ff943d489", "filename": "gcc/d/dmd/optimize.c", "status": "added", "additions": 1268, "deletions": 0, "changes": 1268, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Foptimize.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Foptimize.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Foptimize.c?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "9ee2f0837b1f47e6e5f3f2b2f0231b40eeed35bb", "filename": "gcc/d/dmd/parse.c", "status": "added", "additions": 7992, "deletions": 0, "changes": 7992, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fparse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fparse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fparse.c?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "50381067917fc29b4291df6bd0cee0a24638b0d8", "filename": "gcc/d/dmd/parse.h", "status": "added", "additions": 188, "deletions": 0, "changes": 188, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fparse.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fparse.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fparse.h?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "a9a31af1b6ea74eb0f2ee7e71d5f7e0a1ece6547", "filename": "gcc/d/dmd/readme.txt", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Freadme.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Freadme.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Freadme.txt?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "4c015bf0700360eea8c2fede172a59d3657ae4fb", "filename": "gcc/d/dmd/root/aav.c", "status": "added", "additions": 175, "deletions": 0, "changes": 175, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Froot%2Faav.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Froot%2Faav.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Froot%2Faav.c?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "24c281a150364e205a50de33b1b3ccb75398a961", "filename": "gcc/d/dmd/root/aav.h", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Froot%2Faav.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Froot%2Faav.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Froot%2Faav.h?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "ed128b93dd753b2d8053d659e0b18d372e4b9df1", "filename": "gcc/d/dmd/root/array.h", "status": "added", "additions": 232, "deletions": 0, "changes": 232, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Froot%2Farray.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Froot%2Farray.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Froot%2Farray.h?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "888ae5373fad18a44b5ba0c69cdfe3e9a25b2672", "filename": "gcc/d/dmd/root/ctfloat.h", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Froot%2Fctfloat.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Froot%2Fctfloat.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Froot%2Fctfloat.h?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "3fc169c034e9a99de52cff9488800584f77fbb2c", "filename": "gcc/d/dmd/root/dcompat.h", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Froot%2Fdcompat.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Froot%2Fdcompat.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Froot%2Fdcompat.h?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "f4fd51a0012dacc9252dfd06693970f6641eeb64", "filename": "gcc/d/dmd/root/file.c", "status": "added", "additions": 265, "deletions": 0, "changes": 265, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Froot%2Ffile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Froot%2Ffile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Froot%2Ffile.c?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "f6953ab34db30a59af765e845899a3d9f8dbd001", "filename": "gcc/d/dmd/root/file.h", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Froot%2Ffile.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Froot%2Ffile.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Froot%2Ffile.h?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "307e94f6584f2d4590c373e1be753adf84bd5e59", "filename": "gcc/d/dmd/root/filename.c", "status": "added", "additions": 673, "deletions": 0, "changes": 673, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Froot%2Ffilename.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Froot%2Ffilename.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Froot%2Ffilename.c?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "0ef8c21328af1833b1fb9ed4631b4a250b9c16f0", "filename": "gcc/d/dmd/root/filename.h", "status": "added", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Froot%2Ffilename.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Froot%2Ffilename.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Froot%2Ffilename.h?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "1b05672ff9f8f6012f1270cf46ba54da6dd2af92", "filename": "gcc/d/dmd/root/hash.h", "status": "added", "additions": 77, "deletions": 0, "changes": 77, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Froot%2Fhash.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Froot%2Fhash.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Froot%2Fhash.h?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "e9d770d5d3d3ecabadba1279e05b10007456ffd8", "filename": "gcc/d/dmd/root/object.h", "status": "added", "additions": 60, "deletions": 0, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Froot%2Fobject.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Froot%2Fobject.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Froot%2Fobject.h?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "7b6782defb140b5238c079c11c5f8056fc4f2927", "filename": "gcc/d/dmd/root/outbuffer.c", "status": "added", "additions": 401, "deletions": 0, "changes": 401, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Froot%2Foutbuffer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Froot%2Foutbuffer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Froot%2Foutbuffer.c?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "6d3be1071292095da86c18cc37af0d378f0bd832", "filename": "gcc/d/dmd/root/outbuffer.h", "status": "added", "additions": 77, "deletions": 0, "changes": 77, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Froot%2Foutbuffer.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Froot%2Foutbuffer.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Froot%2Foutbuffer.h?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "3f3c46d9168983419fc838c77936fd8207227172", "filename": "gcc/d/dmd/root/port.h", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Froot%2Fport.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Froot%2Fport.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Froot%2Fport.h?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "92e79ca95ae7380c2c38f45ccfe9204f5a0ebfe7", "filename": "gcc/d/dmd/root/rmem.c", "status": "added", "additions": 162, "deletions": 0, "changes": 162, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Froot%2Frmem.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Froot%2Frmem.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Froot%2Frmem.c?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "87d465f1da3d538c2a9cebb1ec171fe87f650910", "filename": "gcc/d/dmd/root/rmem.h", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Froot%2Frmem.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Froot%2Frmem.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Froot%2Frmem.h?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "6c3df31047970419a3df22249dfc220506649d55", "filename": "gcc/d/dmd/root/root.h", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Froot%2Froot.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Froot%2Froot.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Froot%2Froot.h?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "cd239d6c3ca4532885b44827b0c88000b5601b61", "filename": "gcc/d/dmd/root/rootobject.c", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Froot%2Frootobject.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Froot%2Frootobject.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Froot%2Frootobject.c?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "52b4e4767f8553d9e54c2a62bc3f97b48ca1d2d9", "filename": "gcc/d/dmd/root/speller.c", "status": "added", "additions": 240, "deletions": 0, "changes": 240, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Froot%2Fspeller.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Froot%2Fspeller.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Froot%2Fspeller.c?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "eaf3b2873ebabbd1518700350e4d270b5aac99a4", "filename": "gcc/d/dmd/root/speller.h", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Froot%2Fspeller.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Froot%2Fspeller.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Froot%2Fspeller.h?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "158e2af6e236aff44eed4831bc545bad2d50d2c0", "filename": "gcc/d/dmd/root/stringtable.c", "status": "added", "additions": 200, "deletions": 0, "changes": 200, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Froot%2Fstringtable.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Froot%2Fstringtable.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Froot%2Fstringtable.c?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "2b4524b76317fc561069f0d636684ac331610fd1", "filename": "gcc/d/dmd/root/stringtable.h", "status": "added", "additions": 57, "deletions": 0, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Froot%2Fstringtable.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Froot%2Fstringtable.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Froot%2Fstringtable.h?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "138beb4b44581fd52b235643e70c4fcde53a1303", "filename": "gcc/d/dmd/safe.c", "status": "added", "additions": 168, "deletions": 0, "changes": 168, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fsafe.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fsafe.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fsafe.c?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "89209770234ce192ded9fd7f6982b803bcf90f9c", "filename": "gcc/d/dmd/sapply.c", "status": "added", "additions": 156, "deletions": 0, "changes": 156, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fsapply.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fsapply.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fsapply.c?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "f42a317f24021bc2019be88cd803fcd0641a003b", "filename": "gcc/d/dmd/scope.h", "status": "added", "additions": 158, "deletions": 0, "changes": 158, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fscope.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fscope.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fscope.h?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "83e797380410433c9b9c4c4edca018a536fb7f0e", "filename": "gcc/d/dmd/sideeffect.c", "status": "added", "additions": 439, "deletions": 0, "changes": 439, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fsideeffect.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fsideeffect.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fsideeffect.c?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "6e679074e0a992e4b8d76a1a56bf4c89c2f2ecd4", "filename": "gcc/d/dmd/statement.c", "status": "added", "additions": 1661, "deletions": 0, "changes": 1661, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fstatement.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fstatement.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fstatement.c?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "269d8ed77c6836c928219d78f9793a803ede1bd3", "filename": "gcc/d/dmd/statement.h", "status": "added", "additions": 783, "deletions": 0, "changes": 783, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fstatement.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fstatement.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fstatement.h?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "7ee541c9d50ed9b232cb74b3a34c19853218b947", "filename": "gcc/d/dmd/statementsem.c", "status": "added", "additions": 3574, "deletions": 0, "changes": 3574, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fstatementsem.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fstatementsem.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fstatementsem.c?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "476668f900b142f4ec7e600b9989102067f11f37", "filename": "gcc/d/dmd/staticassert.c", "status": "added", "additions": 104, "deletions": 0, "changes": 104, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fstaticassert.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fstaticassert.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fstaticassert.c?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "0112f0270242d7af4d3fbbe1aab61db5cae58fb0", "filename": "gcc/d/dmd/staticassert.h", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fstaticassert.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fstaticassert.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fstaticassert.h?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "7a0004f0b33e920d274a087d779a5426ca2ef1a2", "filename": "gcc/d/dmd/staticcond.c", "status": "added", "additions": 100, "deletions": 0, "changes": 100, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fstaticcond.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fstaticcond.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fstaticcond.c?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "937900896b290d631f0f442001337ba86925d018", "filename": "gcc/d/dmd/target.h", "status": "added", "additions": 74, "deletions": 0, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Ftarget.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Ftarget.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Ftarget.h?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "f5991030f399be26cdf7457192115d7f05057118", "filename": "gcc/d/dmd/template.h", "status": "added", "additions": 397, "deletions": 0, "changes": 397, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Ftemplate.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Ftemplate.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Ftemplate.h?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "6f68e478deecd0fb2fb81574e110a28317f048b1", "filename": "gcc/d/dmd/tokens.c", "status": "added", "additions": 476, "deletions": 0, "changes": 476, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Ftokens.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Ftokens.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Ftokens.c?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "410af4e1b48393e86bdd1549abf5a63e2e04c8ef", "filename": "gcc/d/dmd/tokens.h", "status": "added", "additions": 233, "deletions": 0, "changes": 233, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Ftokens.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Ftokens.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Ftokens.h?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "b869893d4f1a208fbc4ebe2f26970a80831864d5", "filename": "gcc/d/dmd/traits.c", "status": "added", "additions": 1451, "deletions": 0, "changes": 1451, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Ftraits.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Ftraits.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Ftraits.c?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "34e7da4e0d9c9776bfa78115e728405f204b7c27", "filename": "gcc/d/dmd/typesem.c", "status": "added", "additions": 123, "deletions": 0, "changes": 123, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Ftypesem.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Ftypesem.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Ftypesem.c?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "482782255d743e63cd1f528d7b820f1732ba484e", "filename": "gcc/d/dmd/unittests.c", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Funittests.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Funittests.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Funittests.c?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "f07340e95e00b4627445f8788077865abdab48d3", "filename": "gcc/d/dmd/utf.c", "status": "added", "additions": 307, "deletions": 0, "changes": 307, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Futf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Futf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Futf.c?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "154d39ad4743e407bf3f3c8c35a7164bc9e4bff7", "filename": "gcc/d/dmd/utf.h", "status": "added", "additions": 117, "deletions": 0, "changes": 117, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Futf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Futf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Futf.h?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "e3ea8c19e50432196ed60cfa77fc001dd6099698", "filename": "gcc/d/dmd/utils.c", "status": "added", "additions": 122, "deletions": 0, "changes": 122, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Futils.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Futils.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Futils.c?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "6268822df194ad1476d28705adf01cd6b2a7b20d", "filename": "gcc/d/dmd/version.h", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fversion.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fversion.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fversion.h?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "ee0db983181dc35954398b39232ff598507114fa", "filename": "gcc/d/dmd/visitor.h", "status": "added", "additions": 599, "deletions": 0, "changes": 599, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fvisitor.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fdmd%2Fvisitor.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fvisitor.h?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "9a1aad42ddcc31e22c35b61cedf4d2be53818b27", "filename": "gcc/d/expr.cc", "status": "added", "additions": 3138, "deletions": 0, "changes": 3138, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fexpr.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fexpr.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fexpr.cc?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "36d9c59b512d3b6c23dafb5a8981f82e09fbe5e0", "filename": "gcc/d/gdc.texi", "status": "added", "additions": 718, "deletions": 0, "changes": 718, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fgdc.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fgdc.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fgdc.texi?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "5a2f4eff6bbb6037f4202f87492a81045e6472fc", "filename": "gcc/d/imports.cc", "status": "added", "additions": 208, "deletions": 0, "changes": 208, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fimports.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fimports.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fimports.cc?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "e5546062274cccd3c6762aa2159c026554311519", "filename": "gcc/d/intrinsics.cc", "status": "added", "additions": 846, "deletions": 0, "changes": 846, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fintrinsics.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fintrinsics.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fintrinsics.cc?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "c8ad81bd71a93b9f268afcfb76e278293dad28ab", "filename": "gcc/d/intrinsics.def", "status": "added", "additions": 154, "deletions": 0, "changes": 154, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fintrinsics.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fintrinsics.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fintrinsics.def?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "479fccad4bf2d75b6d9980a3a9909bff32a8a7bf", "filename": "gcc/d/lang-specs.h", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Flang-specs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Flang-specs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Flang-specs.h?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "892e65b24c19f78aaaeb9adf4d738429d0f84cc5", "filename": "gcc/d/lang.opt", "status": "added", "additions": 346, "deletions": 0, "changes": 346, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Flang.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Flang.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Flang.opt?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "89fc2b2df7732086121e4a6aa17de8174bf9e5b9", "filename": "gcc/d/longdouble.h", "status": "added", "additions": 136, "deletions": 0, "changes": 136, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Flongdouble.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Flongdouble.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Flongdouble.h?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "80573e1c2f2472f7265a5aafba1ad2c1f74ccff9", "filename": "gcc/d/modules.cc", "status": "added", "additions": 853, "deletions": 0, "changes": 853, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fmodules.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fmodules.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fmodules.cc?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "7f1e9100a73713382490b739eb2290b0b7c3016b", "filename": "gcc/d/runtime.cc", "status": "added", "additions": 315, "deletions": 0, "changes": 315, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fruntime.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fruntime.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fruntime.cc?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "e135bc3ec46212d5bbed89f2b576b78877a88741", "filename": "gcc/d/runtime.def", "status": "added", "additions": 224, "deletions": 0, "changes": 224, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fruntime.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fruntime.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fruntime.def?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "0d78fa60aa55b04be4e98e63d722696f77fe3118", "filename": "gcc/d/toir.cc", "status": "added", "additions": 1447, "deletions": 0, "changes": 1447, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Ftoir.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Ftoir.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Ftoir.cc?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "0c2b695b09ae76d4bfdc06743a90f399ff704b96", "filename": "gcc/d/typeinfo.cc", "status": "added", "additions": 1676, "deletions": 0, "changes": 1676, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Ftypeinfo.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Ftypeinfo.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Ftypeinfo.cc?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "d5eac2d7720ee0868051b3665244b936372e89aa", "filename": "gcc/d/types.cc", "status": "added", "additions": 986, "deletions": 0, "changes": 986, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Ftypes.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Ftypes.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Ftypes.cc?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "0dd41eeaebe5614209ebd8ccf144aab405773fdc", "filename": "gcc/d/verstr.h", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fverstr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fd%2Fverstr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fverstr.h?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "7e772cf230068d8565c5261c67f1e5036e0a83ae", "filename": "gcc/doc/contrib.texi", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fdoc%2Fcontrib.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fdoc%2Fcontrib.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fcontrib.texi?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "59654402aa111d4b176cd2d6d45ccf923267ebda", "filename": "gcc/doc/frontends.texi", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fdoc%2Ffrontends.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fdoc%2Ffrontends.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ffrontends.texi?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "6c7dac99743f98985dca8db56b5e8362b2d49860", "filename": "gcc/doc/install.texi", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fdoc%2Finstall.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fdoc%2Finstall.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finstall.texi?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "055e8c4759c7f7d044188ea41050fb3031697a07", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "748797762d2568f361c2c06268aabd1aac1fede0", "filename": "gcc/doc/sourcebuild.texi", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fdoc%2Fsourcebuild.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fdoc%2Fsourcebuild.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fsourcebuild.texi?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "4c1e2dad11588228f860d3d7ecd1cf6e43db0e30", "filename": "gcc/doc/standards.texi", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fdoc%2Fstandards.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fdoc%2Fstandards.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fstandards.texi?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "f841527f97176a2e02a35b6c00cc30220c5714ef", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "967ef3ad22f2a748a716263104be4194bcf9c551", "filename": "gcc/doc/tm.texi.in", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fdoc%2Ftm.texi.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fdoc%2Ftm.texi.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi.in?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "30bbfee90521dfe417f12c3813dcc4022eea3a57", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 18, "deletions": 5, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "c0d17eb4f1bb293ef3782614e9ac858a57252289", "filename": "gcc/gcc.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "9b6ab05507ccb1cf837654aebac8c2720e02f84d", "filename": "gcc/genhooks.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fgenhooks.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fgenhooks.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenhooks.c?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "868b164da6340a3a7dd966b18dd6dc72be2779c3", "filename": "gcc/po/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fpo%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fpo%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpo%2FChangeLog?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "dbcfb341bc51501b8a72f06ba9e7f4133a03e1dc", "filename": "gcc/po/EXCLUDES", "status": "modified", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fpo%2FEXCLUDES", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Fpo%2FEXCLUDES", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpo%2FEXCLUDES?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "e49edfb23288b45bef1012cf40ba6ff36cb07b3f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "f40cfabb41e8def052a062088062a9d2e8a0bdd7", "filename": "gcc/testsuite/gcc.misc-tests/help.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fhelp.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fhelp.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fhelp.exp?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "bc7c25c70763b73191556e5539df6d0e2f40849f", "filename": "gcc/testsuite/gdc.dg/asan/asan.exp", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Ftestsuite%2Fgdc.dg%2Fasan%2Fasan.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Ftestsuite%2Fgdc.dg%2Fasan%2Fasan.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.dg%2Fasan%2Fasan.exp?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "bc511fefb149861f3d253dbe83da995e6e3d7a38", "filename": "gcc/testsuite/gdc.dg/asan/gdc272.d", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Ftestsuite%2Fgdc.dg%2Fasan%2Fgdc272.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Ftestsuite%2Fgdc.dg%2Fasan%2Fgdc272.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.dg%2Fasan%2Fgdc272.d?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "44fc5b5fdfb435dcb0fa978c023afff04fdeb550", "filename": "gcc/testsuite/gdc.dg/compilable.d", "status": "added", "additions": 444, "deletions": 0, "changes": 444, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Ftestsuite%2Fgdc.dg%2Fcompilable.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Ftestsuite%2Fgdc.dg%2Fcompilable.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.dg%2Fcompilable.d?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "d05258e898ae805ff69855dedc1457fd08f712d7", "filename": "gcc/testsuite/gdc.dg/dg.exp", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Ftestsuite%2Fgdc.dg%2Fdg.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Ftestsuite%2Fgdc.dg%2Fdg.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.dg%2Fdg.exp?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "c0f6e560f50ec1c54c1a8ec0f75503eed458d788", "filename": "gcc/testsuite/gdc.dg/gdc254.d", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Ftestsuite%2Fgdc.dg%2Fgdc254.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Ftestsuite%2Fgdc.dg%2Fgdc254.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.dg%2Fgdc254.d?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "4869796135aaac3747eea0939bd2885146fdc151", "filename": "gcc/testsuite/gdc.dg/gdc260.d", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Ftestsuite%2Fgdc.dg%2Fgdc260.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Ftestsuite%2Fgdc.dg%2Fgdc260.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.dg%2Fgdc260.d?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "4df6f02f75332dd17c059446703b7095262244f8", "filename": "gcc/testsuite/gdc.dg/gdc270a.d", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Ftestsuite%2Fgdc.dg%2Fgdc270a.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Ftestsuite%2Fgdc.dg%2Fgdc270a.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.dg%2Fgdc270a.d?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "5a544c58693fca5d817f98527c7ef54f51b5d3a9", "filename": "gcc/testsuite/gdc.dg/gdc270b.d", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Ftestsuite%2Fgdc.dg%2Fgdc270b.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Ftestsuite%2Fgdc.dg%2Fgdc270b.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.dg%2Fgdc270b.d?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "ce840501d6488862da0a1f661cd30591f99a2ef3", "filename": "gcc/testsuite/gdc.dg/gdc282.d", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Ftestsuite%2Fgdc.dg%2Fgdc282.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Ftestsuite%2Fgdc.dg%2Fgdc282.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.dg%2Fgdc282.d?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "ca7ad3ff3f5b2db288e77ecb5f59efb3f11834da", "filename": "gcc/testsuite/gdc.dg/gdc283.d", "status": "added", "additions": 102, "deletions": 0, "changes": 102, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Ftestsuite%2Fgdc.dg%2Fgdc283.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Ftestsuite%2Fgdc.dg%2Fgdc283.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.dg%2Fgdc283.d?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "f9fea1f483c2ecc1b3221b795d5b33695a546015", "filename": "gcc/testsuite/gdc.dg/imports/gdc170.d", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Ftestsuite%2Fgdc.dg%2Fimports%2Fgdc170.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Ftestsuite%2Fgdc.dg%2Fimports%2Fgdc170.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.dg%2Fimports%2Fgdc170.d?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "b398e0fcd0060f8a6aba5722b91d320dcc14578e", "filename": "gcc/testsuite/gdc.dg/imports/gdc231.d", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Ftestsuite%2Fgdc.dg%2Fimports%2Fgdc231.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Ftestsuite%2Fgdc.dg%2Fimports%2Fgdc231.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.dg%2Fimports%2Fgdc231.d?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "3378d74bd9bcea6132cadb157379c2a65ce3f7ca", "filename": "gcc/testsuite/gdc.dg/imports/gdc239.d", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Ftestsuite%2Fgdc.dg%2Fimports%2Fgdc239.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Ftestsuite%2Fgdc.dg%2Fimports%2Fgdc239.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.dg%2Fimports%2Fgdc239.d?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "28ba8ebe8ee615e5540eda39faf9200d08bd4124", "filename": "gcc/testsuite/gdc.dg/imports/gdc241a.d", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Ftestsuite%2Fgdc.dg%2Fimports%2Fgdc241a.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Ftestsuite%2Fgdc.dg%2Fimports%2Fgdc241a.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.dg%2Fimports%2Fgdc241a.d?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "3632575ba0d43f17910be7d0592406deaa5327ec", "filename": "gcc/testsuite/gdc.dg/imports/gdc241b.d", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Ftestsuite%2Fgdc.dg%2Fimports%2Fgdc241b.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Ftestsuite%2Fgdc.dg%2Fimports%2Fgdc241b.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.dg%2Fimports%2Fgdc241b.d?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "5c2d4d58769c1d6bf60fe01140a7484ef10c66ce", "filename": "gcc/testsuite/gdc.dg/imports/gdc251a.d", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Ftestsuite%2Fgdc.dg%2Fimports%2Fgdc251a.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Ftestsuite%2Fgdc.dg%2Fimports%2Fgdc251a.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.dg%2Fimports%2Fgdc251a.d?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "e70823f1ed6f67e737ef8a772664b86ce7c1afcf", "filename": "gcc/testsuite/gdc.dg/imports/gdc251b.d", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Ftestsuite%2Fgdc.dg%2Fimports%2Fgdc251b.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Ftestsuite%2Fgdc.dg%2Fimports%2Fgdc251b.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.dg%2Fimports%2Fgdc251b.d?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "6649262121062a731be8babae692f195831c6ff8", "filename": "gcc/testsuite/gdc.dg/imports/gdc253.d", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Ftestsuite%2Fgdc.dg%2Fimports%2Fgdc253.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Ftestsuite%2Fgdc.dg%2Fimports%2Fgdc253.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.dg%2Fimports%2Fgdc253.d?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "2a2a50d2f06b2c1bd8c7e67b83c9ab10818e6fd1", "filename": "gcc/testsuite/gdc.dg/imports/gdc254a.d", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Ftestsuite%2Fgdc.dg%2Fimports%2Fgdc254a.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Ftestsuite%2Fgdc.dg%2Fimports%2Fgdc254a.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.dg%2Fimports%2Fgdc254a.d?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "1b405996b4b86e51a1a9c063c73c8d4363474ab3", "filename": "gcc/testsuite/gdc.dg/imports/gdc256.d", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Ftestsuite%2Fgdc.dg%2Fimports%2Fgdc256.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Ftestsuite%2Fgdc.dg%2Fimports%2Fgdc256.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.dg%2Fimports%2Fgdc256.d?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "fcaa2ab3ca8e0e7d4fdde60c0076f7c61106bb3e", "filename": "gcc/testsuite/gdc.dg/imports/gdc27.d", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Ftestsuite%2Fgdc.dg%2Fimports%2Fgdc27.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Ftestsuite%2Fgdc.dg%2Fimports%2Fgdc27.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.dg%2Fimports%2Fgdc27.d?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "edee28901dbac5103e5d78e63d382b49d76aaafe", "filename": "gcc/testsuite/gdc.dg/imports/gdcpkg256/package.d", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Ftestsuite%2Fgdc.dg%2Fimports%2Fgdcpkg256%2Fpackage.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Ftestsuite%2Fgdc.dg%2Fimports%2Fgdcpkg256%2Fpackage.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.dg%2Fimports%2Fgdcpkg256%2Fpackage.d?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "f28ccdf5b65bdfa43fa12c9e438bce737c0ef49c", "filename": "gcc/testsuite/gdc.dg/imports/runnable.d", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Ftestsuite%2Fgdc.dg%2Fimports%2Frunnable.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Ftestsuite%2Fgdc.dg%2Fimports%2Frunnable.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.dg%2Fimports%2Frunnable.d?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "a8e1da15511a00d7a60f0553595214b4bb022235", "filename": "gcc/testsuite/gdc.dg/link.d", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Ftestsuite%2Fgdc.dg%2Flink.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Ftestsuite%2Fgdc.dg%2Flink.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.dg%2Flink.d?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "1fed9cdd2ceecdb1f319933248997b2923eebe40", "filename": "gcc/testsuite/gdc.dg/lto/lto.exp", "status": "added", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Ftestsuite%2Fgdc.dg%2Flto%2Flto.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Ftestsuite%2Fgdc.dg%2Flto%2Flto.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.dg%2Flto%2Flto.exp?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "bb18beaa9c86081a3f775a80f9fccfb992bd628f", "filename": "gcc/testsuite/gdc.dg/lto/ltotests_0.d", "status": "added", "additions": 90, "deletions": 0, "changes": 90, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Ftestsuite%2Fgdc.dg%2Flto%2Fltotests_0.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Ftestsuite%2Fgdc.dg%2Flto%2Fltotests_0.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.dg%2Flto%2Fltotests_0.d?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "3111f9add964a02a581c4a920cc85c5b2b373060", "filename": "gcc/testsuite/gdc.dg/lto/ltotests_1.d", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Ftestsuite%2Fgdc.dg%2Flto%2Fltotests_1.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Ftestsuite%2Fgdc.dg%2Flto%2Fltotests_1.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.dg%2Flto%2Fltotests_1.d?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "4f1ef76e4cb24026c633a47e07fcdec092c86d33", "filename": "gcc/testsuite/gdc.dg/runnable.d", "status": "added", "additions": 1575, "deletions": 0, "changes": 1575, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Ftestsuite%2Fgdc.dg%2Frunnable.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Ftestsuite%2Fgdc.dg%2Frunnable.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.dg%2Frunnable.d?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "dd329254257cf93a3e363495ee8768b0eb45d4ee", "filename": "gcc/testsuite/gdc.dg/simd.d", "status": "added", "additions": 1734, "deletions": 0, "changes": 1734, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Ftestsuite%2Fgdc.dg%2Fsimd.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Ftestsuite%2Fgdc.dg%2Fsimd.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.dg%2Fsimd.d?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "e7d2f77500e4b2c2f6bc9506a86e41f868c7ddfc", "filename": "gcc/testsuite/gdc.test/compilable/99bottles.d", "status": "added", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2F99bottles.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2F99bottles.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2F99bottles.d?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "69191ec20a2d8f8d7159b4b543f1df03d71038e2", "filename": "gcc/testsuite/gdc.test/compilable/a3682.d", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fa3682.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fa3682.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fa3682.d?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "3a80a039e26edcbb3dcb34485466c6b2f3c6ae9e", "filename": "gcc/testsuite/gdc.test/compilable/aggr_alignment.d", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Faggr_alignment.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Faggr_alignment.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Faggr_alignment.d?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "90e21effac333dd8bbc784b9de41bc6b347ec1a5", "filename": "gcc/testsuite/gdc.test/compilable/aliasdecl.d", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Faliasdecl.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Faliasdecl.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Faliasdecl.d?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "c5cc394866f465c2b7764d0698f78e20a6a1793f", "filename": "gcc/testsuite/gdc.test/compilable/alignment.d", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Falignment.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Falignment.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Falignment.d?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "b9620588eaaa5b6350e18c948aafc1f29c6691eb", "filename": "gcc/testsuite/gdc.test/compilable/art4769.d", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fart4769.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fart4769.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fart4769.d?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "1c6c6a28b048763ea87c94bbbec55636668a2519", "filename": "gcc/testsuite/gdc.test/compilable/b11118.d", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fb11118.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fb11118.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fb11118.d?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "d3b0ccd2e4a260089b60882ad29ca11cb8f7d5a8", "filename": "gcc/testsuite/gdc.test/compilable/b1215.d", "status": "added", "additions": 146, "deletions": 0, "changes": 146, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fb1215.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fb1215.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fb1215.d?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "f339a755b263e86fe3286b5dacb1cc48694929a4", "filename": "gcc/testsuite/gdc.test/compilable/b15428.d", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fb15428.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fb15428.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fb15428.d?ref=b4c522fabd0df7be08882d2207df8b2765026110"}, {"sha": "7840095ca63647e2e584c1dd4b4e9ba66856cb03", "filename": "gcc/testsuite/gdc.test/compilable/b16244.d", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fb16244.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c522fabd0df7be08882d2207df8b2765026110/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fb16244.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fb16244.d?ref=b4c522fabd0df7be08882d2207df8b2765026110"}]}