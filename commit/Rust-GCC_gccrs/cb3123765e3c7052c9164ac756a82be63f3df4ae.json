{"sha": "cb3123765e3c7052c9164ac756a82be63f3df4ae", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2IzMTIzNzY1ZTNjNzA1MmM5MTY0YWM3NTZhODJiZTYzZjNkZjRhZQ==", "commit": {"author": {"name": "Kaz Kojima", "email": "kkojima@gcc.gnu.org", "date": "2006-06-11T23:09:58Z"}, "committer": {"name": "Kaz Kojima", "email": "kkojima@gcc.gnu.org", "date": "2006-06-11T23:09:58Z"}, "message": "re PR middle-end/27942 (packed union doesn't make the unaligned magic on sh64-*)\n\n\tPR middle-end/27942\n\t* stor-layout.c (update_alignment_for_field): Don't add extra\n\talignment for packed non-bitfield fields in ms_bitfield_layout_p\n\tcode.\n\n\t* gcc.dg/attr-ms_struct-packed1.c: New.\n\nFrom-SVN: r114552", "tree": {"sha": "b9d2857c2c76cfb2b205e1818c71fcd7c0d3f8ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b9d2857c2c76cfb2b205e1818c71fcd7c0d3f8ef"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cb3123765e3c7052c9164ac756a82be63f3df4ae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb3123765e3c7052c9164ac756a82be63f3df4ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb3123765e3c7052c9164ac756a82be63f3df4ae", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb3123765e3c7052c9164ac756a82be63f3df4ae/comments", "author": null, "committer": null, "parents": [{"sha": "9b317af39e43401fe191a50f9a06cf0e0ab3e235", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b317af39e43401fe191a50f9a06cf0e0ab3e235", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b317af39e43401fe191a50f9a06cf0e0ab3e235"}], "stats": {"total": 38, "additions": 37, "deletions": 1}, "files": [{"sha": "16f77b00a9a250f20755659a5121de6fdc706dd6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb3123765e3c7052c9164ac756a82be63f3df4ae/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb3123765e3c7052c9164ac756a82be63f3df4ae/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cb3123765e3c7052c9164ac756a82be63f3df4ae", "patch": "@@ -1,3 +1,10 @@\n+2006-06-11  Kaz Kojima  <kkojima@gcc.gnu.org>\n+\n+\tPR middle-end/27942\n+\t* stor-layout.c (update_alignment_for_field): Don't add extra\n+\talignment for packed non-bitfield fields in ms_bitfield_layout_p\n+\tcode.\n+\n 2006-06-09  Ralf Corsepius  <ralf.corsepius@rtems.org>\n \n \t* config/mips/t-rtems: Add EL/EB multilib variants."}, {"sha": "bf67099bad05fc265e95b836e26ade59b98c6f76", "filename": "gcc/stor-layout.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb3123765e3c7052c9164ac756a82be63f3df4ae/gcc%2Fstor-layout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb3123765e3c7052c9164ac756a82be63f3df4ae/gcc%2Fstor-layout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstor-layout.c?ref=cb3123765e3c7052c9164ac756a82be63f3df4ae", "patch": "@@ -693,7 +693,7 @@ update_alignment_for_field (record_layout_info rli, tree field,\n \t the type, except that for zero-size bitfields this only\n \t applies if there was an immediately prior, nonzero-size\n \t bitfield.  (That's the way it is, experimentally.) */\n-      if (!is_bitfield\n+      if ((!is_bitfield && !DECL_PACKED (field))\n \t  || (!integer_zerop (DECL_SIZE (field))\n \t      ? !DECL_PACKED (field)\n \t      : (rli->prev_field"}, {"sha": "e2c222f36a84efa4620ebfb181380eb0947bfa96", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb3123765e3c7052c9164ac756a82be63f3df4ae/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb3123765e3c7052c9164ac756a82be63f3df4ae/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=cb3123765e3c7052c9164ac756a82be63f3df4ae", "patch": "@@ -1,3 +1,7 @@\n+2006-06-11  Kaz Kojima  <kkojima@gcc.gnu.org>\n+\n+\t* gcc.dg/attr-ms_struct-packed1.c: New.\n+\n 2006-06-09  Mike Stump  <mrs@apple.com>\n \n \t* gcc.dg/vla-7.c: Add."}, {"sha": "d885c6ff30685a2871a070d1fe76ebcc5dcced85", "filename": "gcc/testsuite/gcc.dg/attr-ms_struct-packed1.c", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb3123765e3c7052c9164ac756a82be63f3df4ae/gcc%2Ftestsuite%2Fgcc.dg%2Fattr-ms_struct-packed1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb3123765e3c7052c9164ac756a82be63f3df4ae/gcc%2Ftestsuite%2Fgcc.dg%2Fattr-ms_struct-packed1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fattr-ms_struct-packed1.c?ref=cb3123765e3c7052c9164ac756a82be63f3df4ae", "patch": "@@ -0,0 +1,25 @@\n+/* Test for MS structure with packed attribute.  */\n+/* { dg-do run { target *-*-interix* *-*-mingw* *-*-cygwin* i?86-*-darwin* } }\n+/* { dg-options \"-std=gnu99\" } */\n+\n+extern void abort ();\n+\n+union u\n+{\n+  int a;\n+} __attribute__((__ms_struct__, __packed__));\n+\n+struct s\n+{\n+  char c;\n+  union u u;\n+};\n+\n+int\n+main (void)\n+{\n+  if (sizeof (struct s) != (sizeof (char) + sizeof (union u))) \n+    abort ();\n+\n+  return 0;\n+}"}]}