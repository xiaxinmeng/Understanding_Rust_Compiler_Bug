{"sha": "45559ef18133512de27d755b6939f6c059ff0cec", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDU1NTllZjE4MTMzNTEyZGUyN2Q3NTViNjkzOWY2YzA1OWZmMGNlYw==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2006-06-09T21:37:32Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2006-06-09T21:37:32Z"}, "message": "re PR libgcj/27730 (Thread.getId() needs implemented)\n\n\tPR libgcj/27730:\n\t* java/lang/Thread.java (threadId): New field.\n\t(nextThreadId): New static field.\n\t(Thread): Initialize new field.\n\t(getId): New method.\n\nFrom-SVN: r114524", "tree": {"sha": "768266d9db63e861f05c341e56228901388cdd52", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/768266d9db63e861f05c341e56228901388cdd52"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/45559ef18133512de27d755b6939f6c059ff0cec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45559ef18133512de27d755b6939f6c059ff0cec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/45559ef18133512de27d755b6939f6c059ff0cec", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45559ef18133512de27d755b6939f6c059ff0cec/comments", "author": null, "committer": null, "parents": [{"sha": "0cf32584caa5076f23e8fd218e5b6176f19bdec1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0cf32584caa5076f23e8fd218e5b6176f19bdec1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0cf32584caa5076f23e8fd218e5b6176f19bdec1"}], "stats": {"total": 33, "additions": 32, "deletions": 1}, "files": [{"sha": "838ecf3e3d349f9519fb90943db2d46836411d12", "filename": "libjava/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45559ef18133512de27d755b6939f6c059ff0cec/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45559ef18133512de27d755b6939f6c059ff0cec/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=45559ef18133512de27d755b6939f6c059ff0cec", "patch": "@@ -1,3 +1,11 @@\n+2006-06-09  Tom Tromey  <tromey@redhat.com>\n+\n+\tPR libgcj/27730:\n+\t* java/lang/Thread.java (threadId): New field.\n+\t(nextThreadId): New static field.\n+\t(Thread): Initialize new field.\n+\t(getId): New method.\n+\n 2006-06-09  Tom Tromey  <tromey@redhat.com>\n \n \t* java/lang/Class.java (getClassLoaderInternal): Now native."}, {"sha": "bac1afd061d313dc3f0bdaa2c5dbf9ddec470a60", "filename": "libjava/java/lang/Thread.java", "status": "modified", "additions": 24, "deletions": 1, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45559ef18133512de27d755b6939f6c059ff0cec/libjava%2Fjava%2Flang%2FThread.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45559ef18133512de27d755b6939f6c059ff0cec/libjava%2Fjava%2Flang%2FThread.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FThread.java?ref=45559ef18133512de27d755b6939f6c059ff0cec", "patch": "@@ -127,6 +127,12 @@ public class Thread implements Runnable\n   /** The context classloader for this Thread. */\n   private ClassLoader contextClassLoader;\n \n+  /** This thread's ID.  */\n+  private final long threadId;\n+\n+  /** The next thread ID to use.  */\n+  private static long nextThreadId;\n+\n   /** The default exception handler.  */\n   private static UncaughtExceptionHandler defaultHandler;\n \n@@ -354,12 +360,17 @@ private Thread (Thread current, ThreadGroup g, Runnable r, String n)\n       }\n     else\n       group = g;\n-      \n+\n     data = null;\n     interrupt_flag = false;\n     alive_flag = false;\n     startable_flag = true;\n \n+    synchronized (Thread.class)\n+      {\n+        this.threadId = nextThreadId++;\n+      }\n+\n     if (current != null)\n       {\n \tgroup.checkAccess();\n@@ -1027,6 +1038,18 @@ public static UncaughtExceptionHandler getDefaultUncaughtExceptionHandler()\n     return defaultHandler;\n   }\n   \n+  /** \n+   * Returns the unique identifier for this thread.  This ID is generated\n+   * on thread creation, and may be re-used on its death.\n+   *\n+   * @return a positive long number representing the thread's ID.\n+   * @since 1.5 \n+   */\n+  public long getId()\n+  {\n+    return threadId;\n+  }\n+\n   /**\n    * <p>\n    * This interface is used to handle uncaught exceptions"}]}