{"sha": "fa540cecf5553ab3af9d127a3c7ed3ac901ef0fb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmE1NDBjZWNmNTU1M2FiM2FmOWQxMjdhM2M3ZWQzYWM5MDFlZjBmYg==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2018-09-17T15:00:57Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2018-09-17T15:00:57Z"}, "message": "i386.md (truncxf<mode>2_i387_noop_unspec): Change operand 0 predicate to nonimmediate operand.\n\n\t* config/i386/i386.md (truncxf<mode>2_i387_noop_unspec): Change\n\toperand 0 predicate to nonimmediate operand.\n\t(rint<mode>2_frndint): Remove insn pattern.\n\t(rint<mode>2): Change operand 1 predicate to general_operand.\n\tExtend operand 1 to XFmode and generate rintxf2 insn.\n\t(frndintxf2_<rounding>): Rename from frndint<mode>2_<rounding>.\n\tDo not use X87MODEF mode macro.\n\t(frndintxf2_<rounding>_i387): Rename from\n\tfrndint<mode>2_<rounding>_i387.  Do not use X87MODEF mode macro.\n\t(<rounding_insn><mode>2): For non-SSE modes, extend operand 1\n\tto XFmode and generate significandxf3 insn.\n\nFrom-SVN: r264370", "tree": {"sha": "58ef47b59ed2a3bf988990c6bb685b1ad7ede98d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/58ef47b59ed2a3bf988990c6bb685b1ad7ede98d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fa540cecf5553ab3af9d127a3c7ed3ac901ef0fb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa540cecf5553ab3af9d127a3c7ed3ac901ef0fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa540cecf5553ab3af9d127a3c7ed3ac901ef0fb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa540cecf5553ab3af9d127a3c7ed3ac901ef0fb/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5d721887efa6c7d49ab98344c3faf1d17ce2eb25", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d721887efa6c7d49ab98344c3faf1d17ce2eb25", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d721887efa6c7d49ab98344c3faf1d17ce2eb25"}], "stats": {"total": 79, "additions": 47, "deletions": 32}, "files": [{"sha": "a9e05898ab95334e23bb12c16b6478f2f19a5763", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa540cecf5553ab3af9d127a3c7ed3ac901ef0fb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa540cecf5553ab3af9d127a3c7ed3ac901ef0fb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fa540cecf5553ab3af9d127a3c7ed3ac901ef0fb", "patch": "@@ -1,3 +1,17 @@\n+2018-09-17  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.md (truncxf<mode>2_i387_noop_unspec): Change\n+\toperand 0 predicate to nonimmediate operand.\n+\t(rint<mode>2_frndint): Remove insn pattern.\n+\t(rint<mode>2): Change operand 1 predicate to general_operand.\n+\tExtend operand 1 to XFmode and generate rintxf2 insn.\n+\t(frndintxf2_<rounding>): Rename from frndint<mode>2_<rounding>.\n+\tDo not use X87MODEF mode macro.\n+\t(frndintxf2_<rounding>_i387): Rename from\n+\tfrndint<mode>2_<rounding>_i387.  Do not use X87MODEF mode macro.\n+\t(<rounding_insn><mode>2): For non-SSE modes, extend operand 1\n+\tto XFmode and generate significandxf3 insn.\n+\n 2018-09-17  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/87328"}, {"sha": "869ff5930eb4942e92b798bfb78f3649efbfdab5", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 33, "deletions": 32, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa540cecf5553ab3af9d127a3c7ed3ac901ef0fb/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa540cecf5553ab3af9d127a3c7ed3ac901ef0fb/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=fa540cecf5553ab3af9d127a3c7ed3ac901ef0fb", "patch": "@@ -15093,7 +15093,7 @@\n ;; all fancy i386 XFmode math functions.\n \n (define_insn \"truncxf<mode>2_i387_noop_unspec\"\n-  [(set (match_operand:MODEF 0 \"register_operand\" \"=f\")\n+  [(set (match_operand:MODEF 0 \"nonimmediate_operand\" \"=mf\")\n \t(unspec:MODEF [(match_operand:XF 1 \"register_operand\" \"f\")]\n \tUNSPEC_TRUNC_NOOP))]\n   \"TARGET_USE_FANCY_MATH_387\"\n@@ -16109,22 +16109,10 @@\n    (set_attr \"znver1_decode\" \"vector\")\n    (set_attr \"mode\" \"XF\")])\n \n-(define_insn \"rint<mode>2_frndint\"\n-  [(set (match_operand:MODEF 0 \"register_operand\" \"=f\")\n-\t(unspec:MODEF [(match_operand:MODEF 1 \"register_operand\" \"0\")]\n-\t\t      UNSPEC_FRNDINT))]\n-  \"TARGET_USE_FANCY_MATH_387\"\n-  \"frndint\"\n-  [(set_attr \"type\" \"fpspc\")\n-   (set_attr \"znver1_decode\" \"vector\")\n-   (set_attr \"mode\" \"<MODE>\")])\n-\n (define_expand \"rint<mode>2\"\n   [(use (match_operand:MODEF 0 \"register_operand\"))\n-   (use (match_operand:MODEF 1 \"register_operand\"))]\n-  \"(TARGET_USE_FANCY_MATH_387\n-    && (!(SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH)\n-\t|| TARGET_MIX_SSE_I387))\n+   (use (match_operand:MODEF 1 \"nonimmediate_operand\"))]\n+  \"TARGET_USE_FANCY_MATH_387\n    || (SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH)\"\n {\n   if (SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH)\n@@ -16136,7 +16124,14 @@\n \tix86_expand_rint (operands[0], operands[1]);\n     }\n   else\n-    emit_insn (gen_rint<mode>2_frndint (operands[0], operands[1]));\n+    {\n+      rtx op0 = gen_reg_rtx (XFmode);\n+      rtx op1 = gen_reg_rtx (XFmode);\n+\n+      emit_insn (gen_extend<mode>xf2 (op1, operands[1]));\n+      emit_insn (gen_rintxf2 (op0, op1));\n+      emit_insn (gen_truncxf<mode>2_i387_noop_unspec (operands[0], op0));\n+    }\n   DONE;\n })\n \n@@ -16254,9 +16249,9 @@\n \t (UNSPEC_FIST_CEIL \"CEIL\")])\n \n ;; Rounding mode control word calculation could clobber FLAGS_REG.\n-(define_insn_and_split \"frndint<mode>2_<rounding>\"\n-  [(set (match_operand:X87MODEF 0 \"register_operand\")\n-\t(unspec:X87MODEF [(match_operand:X87MODEF 1 \"register_operand\")]\n+(define_insn_and_split \"frndintxf2_<rounding>\"\n+  [(set (match_operand:XF 0 \"register_operand\")\n+\t(unspec:XF [(match_operand:XF 1 \"register_operand\")]\n \t\t   FRNDINT_ROUNDING))\n    (clobber (reg:CC FLAGS_REG))]\n   \"TARGET_USE_FANCY_MATH_387\n@@ -16271,26 +16266,26 @@\n   operands[2] = assign_386_stack_local (HImode, SLOT_CW_STORED);\n   operands[3] = assign_386_stack_local (HImode, SLOT_CW_<ROUNDING>);\n \n-  emit_insn (gen_frndint<mode>2_<rounding>_i387 (operands[0], operands[1],\n-\t\t\t\t\t\t operands[2], operands[3]));\n+  emit_insn (gen_frndintxf2_<rounding>_i387 (operands[0], operands[1],\n+\t\t\t\t\t     operands[2], operands[3]));\n   DONE;\n }\n   [(set_attr \"type\" \"frndint\")\n    (set_attr \"i387_cw\" \"<rounding>\")\n-   (set_attr \"mode\" \"<MODE>\")])\n+   (set_attr \"mode\" \"XF\")])\n \n-(define_insn \"frndint<mode>2_<rounding>_i387\"\n-  [(set (match_operand:X87MODEF 0 \"register_operand\" \"=f\")\n-\t(unspec:X87MODEF [(match_operand:X87MODEF 1 \"register_operand\" \"0\")]\n-\t\t\t FRNDINT_ROUNDING))\n+(define_insn \"frndintxf2_<rounding>_i387\"\n+  [(set (match_operand:XF 0 \"register_operand\" \"=f\")\n+\t(unspec:XF [(match_operand:XF 1 \"register_operand\" \"0\")]\n+\t\t   FRNDINT_ROUNDING))\n    (use (match_operand:HI 2 \"memory_operand\" \"m\"))\n    (use (match_operand:HI 3 \"memory_operand\" \"m\"))]\n   \"TARGET_USE_FANCY_MATH_387\n    && (flag_fp_int_builtin_inexact || !flag_trapping_math)\"\n   \"fldcw\\t%3\\n\\tfrndint\\n\\tfldcw\\t%2\"\n   [(set_attr \"type\" \"frndint\")\n    (set_attr \"i387_cw\" \"<rounding>\")\n-   (set_attr \"mode\" \"<MODE>\")])\n+   (set_attr \"mode\" \"XF\")])\n \n (define_expand \"<rounding_insn>xf2\"\n   [(parallel [(set (match_operand:XF 0 \"register_operand\")\n@@ -16310,11 +16305,11 @@\n \t|| TARGET_MIX_SSE_I387)\n     && (flag_fp_int_builtin_inexact || !flag_trapping_math))\n    || (SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH\n-       && (TARGET_SSE4_1 || !flag_trapping_math\n-\t   || flag_fp_int_builtin_inexact))\"\n+       && (TARGET_SSE4_1 || flag_fp_int_builtin_inexact\n+\t   || !flag_trapping_math))\"\n {\n   if (SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH\n-      && (TARGET_SSE4_1 || !flag_trapping_math || flag_fp_int_builtin_inexact))\n+      && (TARGET_SSE4_1 || flag_fp_int_builtin_inexact || !flag_trapping_math))\n     {\n       if (TARGET_SSE4_1)\n \temit_insn (gen_sse4_1_round<mode>2\n@@ -16344,7 +16339,14 @@\n \t}\n     }\n   else\n-    emit_insn (gen_frndint<mode>2_<rounding> (operands[0], operands[1]));\n+    {\n+      rtx op0 = gen_reg_rtx (XFmode);\n+      rtx op1 = gen_reg_rtx (XFmode);\n+\n+      emit_insn (gen_extend<mode>xf2 (op1, operands[1]));\n+      emit_insn (gen_frndintxf2_<rounding> (op0, op1));\n+      emit_insn (gen_truncxf<mode>2_i387_noop_unspec (operands[0], op0));\n+    }\n   DONE;\n })\n \n@@ -16408,7 +16410,6 @@\n \n   emit_insn (gen_extend<mode>xf2 (op1, operands[1]));\n   emit_insn (gen_frndintxf2_mask_pm (op0, op1));\n-\n   emit_insn (gen_truncxf<mode>2 (operands[0], op0));\n   DONE;\n })"}]}