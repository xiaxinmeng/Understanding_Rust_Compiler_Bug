{"sha": "31bebb60e96a3f6425bbb999ce74a075d11aac00", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzFiZWJiNjBlOTZhM2Y2NDI1YmJiOTk5Y2U3NGEwNzVkMTFhYWMwMA==", "commit": {"author": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "1998-03-06T07:11:30Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "1998-03-06T07:11:30Z"}, "message": "Warning fix:\n\n        * method.c: Include \"system.h\" to get stdlib.h, stdio.h,\n        ctype.h, string.h, etc.\n        (issue_nrepeats): Add default case in enumeration switch.\n        (check_btype): Likewise.\n        (process_overload_item): Likewise.\n        * Makefile.in (method.o): Depend on system.h.\n\nFrom-SVN: r18427", "tree": {"sha": "7e8dbdc1ce360c67b832743dfddb496357343de5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7e8dbdc1ce360c67b832743dfddb496357343de5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/31bebb60e96a3f6425bbb999ce74a075d11aac00", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31bebb60e96a3f6425bbb999ce74a075d11aac00", "html_url": "https://github.com/Rust-GCC/gccrs/commit/31bebb60e96a3f6425bbb999ce74a075d11aac00", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31bebb60e96a3f6425bbb999ce74a075d11aac00/comments", "author": null, "committer": null, "parents": [{"sha": "8add77cef51eb74257a2cf978faed72186d77c66", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8add77cef51eb74257a2cf978faed72186d77c66", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8add77cef51eb74257a2cf978faed72186d77c66"}], "stats": {"total": 30, "additions": 13, "deletions": 17}, "files": [{"sha": "2ad0858d7b856ee5846bba9be32583be0b9d012c", "filename": "gcc/cp/Makefile.in", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31bebb60e96a3f6425bbb999ce74a075d11aac00/gcc%2Fcp%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31bebb60e96a3f6425bbb999ce74a075d11aac00/gcc%2Fcp%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FMakefile.in?ref=31bebb60e96a3f6425bbb999ce74a075d11aac00", "patch": "@@ -1,5 +1,5 @@\n # Makefile for GNU C++ compiler.\n-#   Copyright (C) 1987, 88, 90-4, 1995 Free Software Foundation, Inc.\n+#   Copyright (C) 1987, 88, 90-5, 1998 Free Software Foundation, Inc.\n \n #This file is part of GNU CC.\n \n@@ -244,7 +244,7 @@ call.o : call.c $(CONFIG_H) $(CXX_TREE_H) $(srcdir)/../flags.h\n friend.o : friend.c $(CONFIG_H) $(CXX_TREE_H) $(srcdir)/../flags.h $(RTL_H)\n init.o : init.c $(CONFIG_H) $(CXX_TREE_H) $(srcdir)/../flags.h $(RTL_H) \\\n   $(srcdir)/../expr.h ../insn-codes.h\n-method.o : method.c $(CONFIG_H) $(CXX_TREE_H)\n+method.o : method.c $(CONFIG_H) $(CXX_TREE_H) $(srcdir)/../system.h\n cvt.o : cvt.c $(CONFIG_H) $(CXX_TREE_H)\n search.o : search.c $(CONFIG_H) $(CXX_TREE_H) $(srcdir)/../stack.h $(srcdir)/../flags.h\n tree.o : tree.c $(CONFIG_H) $(CXX_TREE_H) $(srcdir)/../flags.h"}, {"sha": "bcb6ea4e6fd74d3a172feb4949137c4a1debaebd", "filename": "gcc/cp/method.c", "status": "modified", "additions": 11, "deletions": 15, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31bebb60e96a3f6425bbb999ce74a075d11aac00/gcc%2Fcp%2Fmethod.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31bebb60e96a3f6425bbb999ce74a075d11aac00/gcc%2Fcp%2Fmethod.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmethod.c?ref=31bebb60e96a3f6425bbb999ce74a075d11aac00", "patch": "@@ -1,6 +1,6 @@\n /* Handle the hair of processing (but not expanding) inline functions.\n    Also manage function and variable name overloading.\n-   Copyright (C) 1987, 89, 92-96, 1997 Free Software Foundation, Inc.\n+   Copyright (C) 1987, 89, 92-97, 1998 Free Software Foundation, Inc.\n    Contributed by Michael Tiemann (tiemann@cygnus.com)\n \n    This file is part of GNU CC.\n@@ -31,29 +31,16 @@ Boston, MA 02111-1307, USA.  */\n \n /* Handle method declarations.  */\n #include \"config.h\"\n-#include <stdio.h>\n+#include \"system.h\n #include \"tree.h\"\n #include \"cp-tree.h\"\n #include \"obstack.h\"\n-#include <ctype.h>\n #include \"rtl.h\"\n #include \"expr.h\"\n #include \"output.h\"\n #include \"hard-reg-set.h\"\n #include \"flags.h\"\n \n-#ifdef HAVE_STRING_H\n-#include <string.h>\n-#else\n-#ifdef HAVE_STRINGS_H\n-#include <strings.h>\n-#endif\n-#endif\n-\n-#ifdef NEED_DECLARATION_INDEX\n-extern char *index ();\n-#endif\n-\n /* TREE_LIST of the current inline functions that need to be\n    processed.  */\n struct pending_inline *pending_inlines;\n@@ -351,6 +338,9 @@ issue_nrepeats (lasttype)\n             process_overload_item (lasttype, FALSE);\n             nrepeats = 0;\n             return;\n+\n+          default:\n+            break;\n         }\n     }\n   OB_PUTC ('n');\n@@ -1088,6 +1078,9 @@ check_btype (node)\n     case VOID_TYPE:\n     case BOOLEAN_TYPE:\n       return 0;         /* don't compress single char basic types */\n+\n+    default:\n+      break;\n     }\n \n   node = TYPE_MAIN_VARIANT (node);\n@@ -1157,6 +1150,9 @@ process_overload_item (parmtype, extra_Gcode)\n       build_mangled_name (TREE_TYPE (parmtype), 0, 0);\n       return;\n       break;\n+\n+    default:\n+      break;\n     }\n   \n   /* check if type is already in the typelist. If not, add it now */"}]}