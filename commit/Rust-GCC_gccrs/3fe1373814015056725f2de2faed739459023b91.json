{"sha": "3fe1373814015056725f2de2faed739459023b91", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2ZlMTM3MzgxNDAxNTA1NjcyNWYyZGUyZmFlZDczOTQ1OTAyM2I5MQ==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2003-12-15T21:08:03Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2003-12-15T21:08:03Z"}, "message": "re PR libstdc++/12658 (Thread safety problems in locale::global() and locale::locale())\n\n\n2003-12-15  Benjamin Kosnik  <bkoz@redhat.com>\n\n\tPR libstdc++/12658\n\t* include/Makefile.am (bits_headers): Add concurrence.h.\n\t* include/Makefile.in: Regenerated.\n\t* include/bits/concurrence.h: New.\n\t* src/locale_init.cc: Use it.\n\t(locale::locale): Lock critical regions.\n\t(locale::global): Same.\n\nFrom-SVN: r74648", "tree": {"sha": "f8e8ca945e453d4a8120f8e2e8418a21a57ad3c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f8e8ca945e453d4a8120f8e2e8418a21a57ad3c7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3fe1373814015056725f2de2faed739459023b91", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3fe1373814015056725f2de2faed739459023b91", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3fe1373814015056725f2de2faed739459023b91", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3fe1373814015056725f2de2faed739459023b91/comments", "author": null, "committer": null, "parents": [{"sha": "86d75cddd286af23fb680b5d12a7a3749a71d0d5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86d75cddd286af23fb680b5d12a7a3749a71d0d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86d75cddd286af23fb680b5d12a7a3749a71d0d5"}], "stats": {"total": 82, "additions": 77, "deletions": 5}, "files": [{"sha": "70805f5bb7b97903c0cad78991b6068ae34506a4", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fe1373814015056725f2de2faed739459023b91/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fe1373814015056725f2de2faed739459023b91/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=3fe1373814015056725f2de2faed739459023b91", "patch": "@@ -1,3 +1,13 @@\n+2003-12-15  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\tPR libstdc++/12658\n+\t* include/Makefile.am (bits_headers): Add concurrence.h.\n+\t* include/Makefile.in: Regenerated.\n+\t* include/bits/concurrence.h: New.\n+\t* src/locale_init.cc: Use it.\n+\t(locale::locale): Lock critical regions.\n+\t(locale::global): Same.\n+\t\n 2003-12-15  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* include/bits/basic_string.h: Change _*_references to _*_refcount."}, {"sha": "b97267bcb724f44a76881ffb89e3dd24290fe592", "filename": "libstdc++-v3/include/Makefile.am", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fe1373814015056725f2de2faed739459023b91/libstdc%2B%2B-v3%2Finclude%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fe1373814015056725f2de2faed739459023b91/libstdc%2B%2B-v3%2Finclude%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2FMakefile.am?ref=3fe1373814015056725f2de2faed739459023b91", "patch": "@@ -101,6 +101,7 @@ bits_headers = \\\n \t${bits_srcdir}/char_traits.h \\\n \t${bits_srcdir}/codecvt.h \\\n \t${bits_srcdir}/concept_check.h \\\n+\t${bits_srcdir}/concurrence.h \\\n \t${bits_srcdir}/cpp_type_traits.h \\\n \t${bits_srcdir}/demangle.h \\\n \t${bits_srcdir}/deque.tcc \\"}, {"sha": "0ba5afb567acf7dd0297ad06e436bea1d2d01747", "filename": "libstdc++-v3/include/Makefile.in", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fe1373814015056725f2de2faed739459023b91/libstdc%2B%2B-v3%2Finclude%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fe1373814015056725f2de2faed739459023b91/libstdc%2B%2B-v3%2Finclude%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2FMakefile.in?ref=3fe1373814015056725f2de2faed739459023b91", "patch": "@@ -296,6 +296,7 @@ bits_headers = \\\n \t${bits_srcdir}/char_traits.h \\\n \t${bits_srcdir}/codecvt.h \\\n \t${bits_srcdir}/concept_check.h \\\n+\t${bits_srcdir}/concurrence.h \\\n \t${bits_srcdir}/cpp_type_traits.h \\\n \t${bits_srcdir}/demangle.h \\\n \t${bits_srcdir}/deque.tcc \\\n@@ -518,15 +519,15 @@ debug_headers = \\\n \t${debug_srcdir}/string \\\n \t${debug_srcdir}/vector\n \n+@GLIBCXX_C_HEADERS_C_STD_FALSE@c_base_headers_extra = \n \n # Some of the different \"C\" header models need extra files.\n # Some \"C\" header schemes require the \"C\" compatibility headers.\n # For --enable-cheaders=c_std\n @GLIBCXX_C_HEADERS_C_STD_TRUE@c_base_headers_extra = ${c_base_srcdir}/cmath.tcc\n-@GLIBCXX_C_HEADERS_C_STD_FALSE@c_base_headers_extra = \n-@GLIBCXX_C_HEADERS_COMPATIBILITY_FALSE@c_compatibility_headers_extra = \n \n @GLIBCXX_C_HEADERS_COMPATIBILITY_TRUE@c_compatibility_headers_extra = ${c_compatibility_headers}\n+@GLIBCXX_C_HEADERS_COMPATIBILITY_FALSE@c_compatibility_headers_extra = \n \n host_srcdir = ${glibcxx_srcdir}/$(OS_INC_SRCDIR)\n host_builddir = ./${host_alias}/bits"}, {"sha": "68b9ab7a9f66ccd2da0a3355fd2f00d85be46009", "filename": "libstdc++-v3/include/bits/concurrence.h", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fe1373814015056725f2de2faed739459023b91/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fconcurrence.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fe1373814015056725f2de2faed739459023b91/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fconcurrence.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fconcurrence.h?ref=3fe1373814015056725f2de2faed739459023b91", "patch": "@@ -0,0 +1,54 @@\n+// Support for concurrent programing -*- C++ -*-\n+\n+// Copyright (C) 2003\n+// Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+ \n+#ifndef _CONCURRENCE\n+#define _CONCURRENCE 1\n+\n+// GCC's thread abstraction layer\n+#include \"bits/gthr.h\"\n+\n+#if __GTHREADS\n+# ifdef __GTHREAD_MUTEX_INIT\n+#  define __glibcxx_mutex_define_initialized(NAME) \\\n+__gthread_mutex_t NAME = __GTHREAD_MUTEX_INIT\n+# else\n+#  define __glibcxx_mutex_define_initialized(NAME) \\\n+__gthread_mutex_t NAME; \\\n+__GTHREAD_MUTEX_INIT_FUNCTION(&NAME)\n+# endif\n+# define __glibcxx_mutex_lock(LOCK) __gthread_mutex_lock(&LOCK)\n+# define __glibcxx_mutex_unlock(LOCK) __gthread_mutex_unlock(&LOCK)\n+#else\n+# define __glibcxx_mutex_define_initialized(NAME)\n+# define __glibcxx_mutex_lock(LOCK) \n+# define __glibcxx_mutex_unlock(LOCK) \n+#endif\n+\n+#endif"}, {"sha": "2fd22f6f01ba10d763017f892d786b4e1d1a1cae", "filename": "libstdc++-v3/src/locale_init.cc", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fe1373814015056725f2de2faed739459023b91/libstdc%2B%2B-v3%2Fsrc%2Flocale_init.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fe1373814015056725f2de2faed739459023b91/libstdc%2B%2B-v3%2Fsrc%2Flocale_init.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Flocale_init.cc?ref=3fe1373814015056725f2de2faed739459023b91", "patch": "@@ -33,6 +33,7 @@\n #include <cwctype>     // For towupper, etc.\n #include <locale>\n #include <bits/atomicity.h>\n+#include <bits/concurrence.h>\n \n namespace __gnu_cxx\n {\n@@ -96,21 +97,26 @@ namespace std\n   locale::locale() throw()\n   { \n     _S_initialize(); \n-    (_M_impl = _S_global)->_M_add_reference(); \n+    __glibcxx_mutex_define_initialized(lock);\n+    __glibcxx_mutex_lock(lock);\n+    _S_global->_M_add_reference();\n+    _M_impl = _S_global;\n+    __glibcxx_mutex_unlock(lock);\n   }\n \n   locale\n   locale::global(const locale& __other)\n   {\n     _S_initialize();\n-\n-    // XXX MT\n+    __glibcxx_mutex_define_initialized(lock);\n+    __glibcxx_mutex_lock(lock);\n     _Impl* __old = _S_global;\n     __other._M_impl->_M_add_reference();\n     _S_global = __other._M_impl; \n     if (_S_global->_M_check_same_name() \n \t&& (std::strcmp(_S_global->_M_names[0], \"*\") != 0))\n       setlocale(LC_ALL, __other.name().c_str());\n+    __glibcxx_mutex_unlock(lock);\n \n     // Reference count sanity check: one reference removed for the\n     // subsition of __other locale, one added by return-by-value. Net"}]}