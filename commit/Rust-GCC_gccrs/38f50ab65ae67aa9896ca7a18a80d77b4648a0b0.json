{"sha": "38f50ab65ae67aa9896ca7a18a80d77b4648a0b0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzhmNTBhYjY1YWU2N2FhOTg5NmNhN2ExOGE4MGQ3N2I0NjQ4YTBiMA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2017-01-27T12:24:54Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2017-01-27T12:24:54Z"}, "message": "re PR tree-optimization/79244 (ice in replace_uses_by, at tree-cfg.c:1866)\n\n2017-01-27  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/79244\n\t* tree-vrp.c (remove_range_assertions): Forcefully propagate\n\tout SSA names even if abnormal.\n\n\t* gcc.dg/torture/pr79244.c: New testcase.\n\nFrom-SVN: r244973", "tree": {"sha": "52e855ee28a86a77ff9ed38d8d896098328986c8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/52e855ee28a86a77ff9ed38d8d896098328986c8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/38f50ab65ae67aa9896ca7a18a80d77b4648a0b0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38f50ab65ae67aa9896ca7a18a80d77b4648a0b0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/38f50ab65ae67aa9896ca7a18a80d77b4648a0b0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38f50ab65ae67aa9896ca7a18a80d77b4648a0b0/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c04f41398e6ec418907dc8e7f4a761345ac23a74", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c04f41398e6ec418907dc8e7f4a761345ac23a74", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c04f41398e6ec418907dc8e7f4a761345ac23a74"}], "stats": {"total": 40, "additions": 38, "deletions": 2}, "files": [{"sha": "41df9bbcc1bec608301028da52f27f3cb160d9b3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38f50ab65ae67aa9896ca7a18a80d77b4648a0b0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38f50ab65ae67aa9896ca7a18a80d77b4648a0b0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=38f50ab65ae67aa9896ca7a18a80d77b4648a0b0", "patch": "@@ -1,3 +1,9 @@\n+2017-01-27  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/79244\n+\t* tree-vrp.c (remove_range_assertions): Forcefully propagate\n+\tout SSA names even if abnormal.\n+\n 2017-01-27  Jakub Jelinek  <jakub@redhat.com>\n \n \t* realmpfr.h: Poison MPFR_RND{N,Z,U,D}."}, {"sha": "525a7c7f2145dacb63ab3d02a5daadadb534b74f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38f50ab65ae67aa9896ca7a18a80d77b4648a0b0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38f50ab65ae67aa9896ca7a18a80d77b4648a0b0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=38f50ab65ae67aa9896ca7a18a80d77b4648a0b0", "patch": "@@ -1,3 +1,8 @@\n+2017-01-27  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/79244\n+\t* gcc.dg/torture/pr79244.c: New testcase.\n+\n 2017-01-27  Jakub Jelinek  <jakub@redhat.com>\n \n \t* g++.dg/cilk-plus/CK/fib-opr-overload.cc (main): Change"}, {"sha": "05143cd3b5e4a946cd18b00944681d975dfe848b", "filename": "gcc/testsuite/gcc.dg/torture/pr79244.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38f50ab65ae67aa9896ca7a18a80d77b4648a0b0/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr79244.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38f50ab65ae67aa9896ca7a18a80d77b4648a0b0/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr79244.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr79244.c?ref=38f50ab65ae67aa9896ca7a18a80d77b4648a0b0", "patch": "@@ -0,0 +1,13 @@\n+/* { dg-do compile } */\n+\n+long buf[5];\n+int bar (void);\n+\n+int\n+foo (int x)\n+{\n+  int y = __builtin_setjmp (buf);\n+  while (x != 3 && x && x && x != 2)\n+    x = bar ();\n+  return y;\n+}"}, {"sha": "e023244577c838e777db8de0736b5da2199730e8", "filename": "gcc/tree-vrp.c", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38f50ab65ae67aa9896ca7a18a80d77b4648a0b0/gcc%2Ftree-vrp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38f50ab65ae67aa9896ca7a18a80d77b4648a0b0/gcc%2Ftree-vrp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vrp.c?ref=38f50ab65ae67aa9896ca7a18a80d77b4648a0b0", "patch": "@@ -6974,8 +6974,20 @@ remove_range_assertions (void)\n \t\t  }\n \t      }\n \n-\t    /* Propagate the RHS into every use of the LHS.  */\n-\t    replace_uses_by (lhs, var);\n+\t    /* Propagate the RHS into every use of the LHS.  For SSA names\n+\t       also propagate abnormals as it merely restores the original\n+\t       IL in this case (an replace_uses_by would assert).  */\n+\t    if (TREE_CODE (var) == SSA_NAME)\n+\t      {\n+\t\timm_use_iterator iter;\n+\t\tuse_operand_p use_p;\n+\t\tgimple *use_stmt;\n+\t\tFOR_EACH_IMM_USE_STMT (use_stmt, iter, lhs)\n+\t\t  FOR_EACH_IMM_USE_ON_STMT (use_p, iter)\n+\t\t    SET_USE (use_p, var);\n+\t      }\n+\t    else\n+\t      replace_uses_by (lhs, var);\n \n \t    /* And finally, remove the copy, it is not needed.  */\n \t    gsi_remove (&si, true);"}]}