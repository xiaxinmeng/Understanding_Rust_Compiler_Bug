{"sha": "62380e66a503c97a2cf222ede1f5b2665bdbed38", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjIzODBlNjZhNTAzYzk3YTJjZjIyMmVkZTFmNWIyNjY1YmRiZWQzOA==", "commit": {"author": {"name": "Tristan Gingold", "email": "gingold@adacore.com", "date": "2011-08-29T12:41:02Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-29T12:41:02Z"}, "message": "a-exexpr.adb (Setup_Exception): Removed.\n\n2011-08-29  Tristan Gingold  <gingold@adacore.com>\n\n\t* a-exexpr.adb (Setup_Exception): Removed.\n\t* a-exexpr-gcc.adb (Setup_Exception): Removed.\n\t* a-except.adb (Exception_Propagation): Removed.\n\t* a-except-2005.adb (Setup_Exception): Removed.\n\t(Reraise): Remove call to Setup_Exception.\n\t(Reraise_Occurrence): Ditto.\n\t(Reraise_Occurrence_Always): Ditto.\n\t(Reraise_Occurrence_No_Defer): Ditto.\n\t(Transfer_Occurrence): Ditto.\n\t* a-exexda.adb (Set_Exception_C_Msg): Remove call to Setup_Exception.\n\t(Set_Exception_Msg): Ditto.\n\nFrom-SVN: r178214", "tree": {"sha": "e20c6f34889b4e167544eb4d0d0ee2788fa476cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e20c6f34889b4e167544eb4d0d0ee2788fa476cd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/62380e66a503c97a2cf222ede1f5b2665bdbed38", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62380e66a503c97a2cf222ede1f5b2665bdbed38", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62380e66a503c97a2cf222ede1f5b2665bdbed38", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62380e66a503c97a2cf222ede1f5b2665bdbed38/comments", "author": {"login": "gingold-adacore", "id": 16334725, "node_id": "MDQ6VXNlcjE2MzM0NzI1", "avatar_url": "https://avatars.githubusercontent.com/u/16334725?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gingold-adacore", "html_url": "https://github.com/gingold-adacore", "followers_url": "https://api.github.com/users/gingold-adacore/followers", "following_url": "https://api.github.com/users/gingold-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/gingold-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/gingold-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gingold-adacore/subscriptions", "organizations_url": "https://api.github.com/users/gingold-adacore/orgs", "repos_url": "https://api.github.com/users/gingold-adacore/repos", "events_url": "https://api.github.com/users/gingold-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/gingold-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c95aa61c547c0366a3698be8dea47faaac54b6e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c95aa61c547c0366a3698be8dea47faaac54b6e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c95aa61c547c0366a3698be8dea47faaac54b6e5"}], "stats": {"total": 117, "additions": 15, "deletions": 102}, "files": [{"sha": "a6d7e0afa6efbdf4f1fb1bf7945fd78da29c072e", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62380e66a503c97a2cf222ede1f5b2665bdbed38/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62380e66a503c97a2cf222ede1f5b2665bdbed38/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=62380e66a503c97a2cf222ede1f5b2665bdbed38", "patch": "@@ -1,3 +1,17 @@\n+2011-08-29  Tristan Gingold  <gingold@adacore.com>\n+\n+\t* a-exexpr.adb (Setup_Exception): Removed.\n+\t* a-exexpr-gcc.adb (Setup_Exception): Removed.\n+\t* a-except.adb (Exception_Propagation): Removed.\n+\t* a-except-2005.adb (Setup_Exception): Removed.\n+\t(Reraise): Remove call to Setup_Exception.\n+\t(Reraise_Occurrence): Ditto.\n+\t(Reraise_Occurrence_Always): Ditto.\n+\t(Reraise_Occurrence_No_Defer): Ditto.\n+\t(Transfer_Occurrence): Ditto.\n+\t* a-exexda.adb (Set_Exception_C_Msg): Remove call to Setup_Exception.\n+\t(Set_Exception_Msg): Ditto.\n+\n 2011-08-29  Robert Dewar  <dewar@adacore.com>\n \n \t* a-convec.adb, exp_disp.adb: Minor reformatting."}, {"sha": "3cb6eb7b799f063f803c092af5b259b8ba315e72", "filename": "gcc/ada/a-except-2005.adb", "status": "modified", "additions": 0, "deletions": 32, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62380e66a503c97a2cf222ede1f5b2665bdbed38/gcc%2Fada%2Fa-except-2005.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62380e66a503c97a2cf222ede1f5b2665bdbed38/gcc%2Fada%2Fa-except-2005.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-except-2005.adb?ref=62380e66a503c97a2cf222ede1f5b2665bdbed38", "patch": "@@ -239,22 +239,6 @@ package body Ada.Exceptions is\n       -- Exception propagation routines --\n       ------------------------------------\n \n-      procedure Setup_Exception\n-        (Excep    : EOA;\n-         Current  : EOA;\n-         Reraised : Boolean := False);\n-      --  Perform the necessary operations to prepare the propagation of Excep\n-      --  in a task where Current is the current occurrence. Excep is assumed\n-      --  to be a valid (non null) pointer.\n-      --\n-      --  This should be called before any (re-)setting of the current\n-      --  occurrence. Any such (re-)setting shall take care *not* to clobber\n-      --  the Private_Data component.\n-      --\n-      --  Having Current provided as an argument (instead of retrieving it via\n-      --  Get_Current_Excep internally) is required to allow one task to setup\n-      --  an exception for another task, which is used by Transfer_Occurrence.\n-\n       procedure Propagate_Exception\n         (E                   : Exception_Id;\n          From_Signal_Handler : Boolean);\n@@ -1025,8 +1009,6 @@ package body Ada.Exceptions is\n       Excep : constant EOA := Get_Current_Excep.all;\n \n    begin\n-      Exception_Propagation.Setup_Exception (Excep, Excep);\n-\n       Excep.Exception_Raised := False;\n       Excep.Id               := E;\n       Excep.Num_Tracebacks   := 0;\n@@ -1284,7 +1266,6 @@ package body Ada.Exceptions is\n       if not ZCX_By_Default then\n          Abort_Defer.all;\n       end if;\n-      Exception_Propagation.Setup_Exception (Excep, Excep, Reraised => True);\n       Raise_Current_Excep (Excep.Id);\n    end Reraise;\n \n@@ -1299,8 +1280,6 @@ package body Ada.Exceptions is\n             Abort_Defer.all;\n          end if;\n \n-         Exception_Propagation.Setup_Exception\n-           (X'Unrestricted_Access, Get_Current_Excep.all, Reraised => True);\n          Save_Occurrence_No_Private (Get_Current_Excep.all.all, X);\n          Raise_Current_Excep (X.Id);\n       end if;\n@@ -1316,8 +1295,6 @@ package body Ada.Exceptions is\n          Abort_Defer.all;\n       end if;\n \n-      Exception_Propagation.Setup_Exception\n-        (X'Unrestricted_Access, Get_Current_Excep.all, Reraised => True);\n       Save_Occurrence_No_Private (Get_Current_Excep.all.all, X);\n       Raise_Current_Excep (X.Id);\n    end Reraise_Occurrence_Always;\n@@ -1328,8 +1305,6 @@ package body Ada.Exceptions is\n \n    procedure Reraise_Occurrence_No_Defer (X : Exception_Occurrence) is\n    begin\n-      Exception_Propagation.Setup_Exception\n-        (X'Unrestricted_Access, Get_Current_Excep.all, Reraised => True);\n       Save_Occurrence_No_Private (Get_Current_Excep.all.all, X);\n       Raise_Current_Excep (X.Id);\n    end Reraise_Occurrence_No_Defer;\n@@ -1384,13 +1359,6 @@ package body Ada.Exceptions is\n       Source : Exception_Occurrence)\n    is\n    begin\n-      --  Setup Target as an exception to be propagated in the calling task\n-      --  (rendezvous-wise), taking care not to clobber the associated private\n-      --  data.  Target is expected to be a pointer to the calling task's\n-      --  fixed TSD occurrence, which is very different from Get_Current_Excep\n-      --  here because this subprogram is called from the called task.\n-\n-      Exception_Propagation.Setup_Exception (Target, Target);\n       Save_Occurrence_No_Private (Target.all, Source);\n    end Transfer_Occurrence;\n "}, {"sha": "44ccc9a58f7ba23c1df1042984d504b328de66da", "filename": "gcc/ada/a-except.adb", "status": "modified", "additions": 0, "deletions": 26, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62380e66a503c97a2cf222ede1f5b2665bdbed38/gcc%2Fada%2Fa-except.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62380e66a503c97a2cf222ede1f5b2665bdbed38/gcc%2Fada%2Fa-except.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-except.adb?ref=62380e66a503c97a2cf222ede1f5b2665bdbed38", "patch": "@@ -209,16 +209,6 @@ package body Ada.Exceptions is\n \n    end Exception_Traces;\n \n-   package Exception_Propagation is\n-\n-      procedure Setup_Exception\n-        (Excep    : EOA;\n-         Current  : EOA;\n-         Reraised : Boolean := False);\n-      --  Dummy routine used to share a-exexda.adb, do nothing\n-\n-   end Exception_Propagation;\n-\n    package Stream_Attributes is\n \n       --------------------------------\n@@ -677,22 +667,6 @@ package body Ada.Exceptions is\n    --  This package can be easily dummied out if we do not want the basic\n    --  support for exception messages (such as in Ada 83).\n \n-   package body Exception_Propagation is\n-\n-      procedure Setup_Exception\n-        (Excep    : EOA;\n-         Current  : EOA;\n-         Reraised : Boolean := False)\n-      is\n-         pragma Warnings (Off, Excep);\n-         pragma Warnings (Off, Current);\n-         pragma Warnings (Off, Reraised);\n-      begin\n-         null;\n-      end Setup_Exception;\n-\n-   end Exception_Propagation;\n-\n    ----------------------\n    -- Exception_Traces --\n    ----------------------"}, {"sha": "b035ebdf6b056740999d4491a4d8dbe29da17f16", "filename": "gcc/ada/a-exexda.adb", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62380e66a503c97a2cf222ede1f5b2665bdbed38/gcc%2Fada%2Fa-exexda.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62380e66a503c97a2cf222ede1f5b2665bdbed38/gcc%2Fada%2Fa-exexda.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-exexda.adb?ref=62380e66a503c97a2cf222ede1f5b2665bdbed38", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -612,7 +612,6 @@ package body Exception_Data is\n    --  Start of processing for Set_Exception_C_Msg\n \n    begin\n-      Exception_Propagation.Setup_Exception (Excep, Excep);\n       Excep.Exception_Raised := False;\n       Excep.Id               := Id;\n       Excep.Num_Tracebacks   := 0;\n@@ -663,7 +662,6 @@ package body Exception_Data is\n       Excep  : constant EOA := Get_Current_Excep.all;\n \n    begin\n-      Exception_Propagation.Setup_Exception (Excep, Excep);\n       Excep.Exception_Raised := False;\n       Excep.Msg_Length       := Len;\n       Excep.Msg (1 .. Len)   := Message (First .. First + Len - 1);"}, {"sha": "43099d1ad9b428a6553a07c92a76483aec25a794", "filename": "gcc/ada/a-exexpr-gcc.adb", "status": "modified", "additions": 0, "deletions": 23, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62380e66a503c97a2cf222ede1f5b2665bdbed38/gcc%2Fada%2Fa-exexpr-gcc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62380e66a503c97a2cf222ede1f5b2665bdbed38/gcc%2Fada%2Fa-exexpr-gcc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-exexpr-gcc.adb?ref=62380e66a503c97a2cf222ede1f5b2665bdbed38", "patch": "@@ -322,29 +322,6 @@ package body Exception_Propagation is\n       return URC_NO_REASON;\n    end CleanupUnwind_Handler;\n \n-   ---------------------\n-   -- Setup_Exception --\n-   ---------------------\n-\n-   --  In the GCC-EH implementation of the propagation scheme, this\n-   --  subprogram should be understood as: Setup the exception occurrence\n-   --  stack headed at Current for a forthcoming raise of Excep.\n-\n-   procedure Setup_Exception\n-     (Excep    : EOA;\n-      Current  : EOA;\n-      Reraised : Boolean := False)\n-   is\n-      pragma Unreferenced (Excep, Current, Reraised);\n-\n-   begin\n-      --  In the GNAT-SJLJ case this \"stack\" only exists implicitly, by way of\n-      --  local occurrence declarations together with save/restore operations\n-      --  generated by the front-end, and this routine has nothing to do.\n-\n-      null;\n-   end Setup_Exception;\n-\n    -------------------------\n    -- Setup_Current_Excep --\n    -------------------------"}, {"sha": "cd7598b885f790cae3207a53675ae861336ddedf", "filename": "gcc/ada/a-exexpr.adb", "status": "modified", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62380e66a503c97a2cf222ede1f5b2665bdbed38/gcc%2Fada%2Fa-exexpr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62380e66a503c97a2cf222ede1f5b2665bdbed38/gcc%2Fada%2Fa-exexpr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-exexpr.adb?ref=62380e66a503c97a2cf222ede1f5b2665bdbed38", "patch": "@@ -57,24 +57,6 @@ package body Exception_Propagation is\n    pragma No_Return (builtin_longjmp);\n    pragma Import (Intrinsic, builtin_longjmp, \"__builtin_longjmp\");\n \n-   ---------------------\n-   -- Setup_Exception --\n-   ---------------------\n-\n-   procedure Setup_Exception\n-     (Excep    : EOA;\n-      Current  : EOA;\n-      Reraised : Boolean := False)\n-   is\n-      pragma Unreferenced (Excep, Current, Reraised);\n-   begin\n-      --  In the GNAT-SJLJ case this \"stack\" only exists implicitly, by way of\n-      --  local occurrence declarations together with save/restore operations\n-      --  generated by the front-end, and this routine has nothing to do.\n-\n-      null;\n-   end Setup_Exception;\n-\n    -------------------------\n    -- Propagate_Exception --\n    -------------------------"}]}