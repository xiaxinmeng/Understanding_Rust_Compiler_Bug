{"sha": "a94a76a7324487f7b2963a103da606efa1c2aaba", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTk0YTc2YTczMjQ0ODdmN2IyOTYzYTEwM2RhNjA2ZWZhMWMyYWFiYQ==", "commit": {"author": {"name": "Ulrich Weigand", "email": "uweigand@de.ibm.com", "date": "2007-08-30T06:50:44Z"}, "committer": {"name": "Andreas Krebbel", "email": "krebbel@gcc.gnu.org", "date": "2007-08-30T06:50:44Z"}, "message": "s390.c (s390_expand_addcc): Emit canonical alc pattern.\n\n2007-08-30  Ulrich Weigand  <Ulrich.Weigand@de.ibm.com>\n\n\t* config/s390/s390.c (s390_expand_addcc): Emit canonical alc\n\tpattern.\n\t* config/s390/s390.md (\"*add<mode>3_alc_cc\", \"*add<mode>3_alc\",\n\t\"addti3\", \"*adddi3_31z\", \"*scond<mode>\"): Make alc pattern canonical.\n\nFrom-SVN: r127920", "tree": {"sha": "9ad32ab569c8420b9b12050ce98df1d5a8797ab9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9ad32ab569c8420b9b12050ce98df1d5a8797ab9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a94a76a7324487f7b2963a103da606efa1c2aaba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a94a76a7324487f7b2963a103da606efa1c2aaba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a94a76a7324487f7b2963a103da606efa1c2aaba", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a94a76a7324487f7b2963a103da606efa1c2aaba/comments", "author": null, "committer": null, "parents": [{"sha": "e3c58a3a658489df094cf2146fe58976bab7ff49", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3c58a3a658489df094cf2146fe58976bab7ff49", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e3c58a3a658489df094cf2146fe58976bab7ff49"}], "stats": {"total": 39, "additions": 24, "deletions": 15}, "files": [{"sha": "9464cab9e43e009c0d260f284df1a0a8291ee098", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a94a76a7324487f7b2963a103da606efa1c2aaba/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a94a76a7324487f7b2963a103da606efa1c2aaba/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a94a76a7324487f7b2963a103da606efa1c2aaba", "patch": "@@ -1,3 +1,10 @@\n+2007-08-30  Ulrich Weigand  <Ulrich.Weigand@de.ibm.com>\n+\n+\t* config/s390/s390.c (s390_expand_addcc): Emit canonical alc\n+\tpattern.\n+\t* config/s390/s390.md (\"*add<mode>3_alc_cc\", \"*add<mode>3_alc\",\n+\t\"addti3\", \"*adddi3_31z\", \"*scond<mode>\"): Make alc pattern canonical.\n+\n 2007-08-29  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* system.h: Activate -Wcast-qual as warning-only."}, {"sha": "aa6db1f3d26e790a0f3b31a904a7ad4f6b16bf30", "filename": "gcc/config/s390/s390.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a94a76a7324487f7b2963a103da606efa1c2aaba/gcc%2Fconfig%2Fs390%2Fs390.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a94a76a7324487f7b2963a103da606efa1c2aaba/gcc%2Fconfig%2Fs390%2Fs390.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.c?ref=a94a76a7324487f7b2963a103da606efa1c2aaba", "patch": "@@ -3927,8 +3927,8 @@ s390_expand_addcc (enum rtx_code cmp_code, rtx cmp_op0, rtx cmp_op1,\n \t  if (!register_operand (src, GET_MODE (dst)))\n \t    src = force_reg (GET_MODE (dst), src);\n \n-\t  src = gen_rtx_PLUS (GET_MODE (dst), src, const0_rtx);\n-\t  op_res = gen_rtx_PLUS (GET_MODE (dst), src, op_res);\n+\t  op_res = gen_rtx_PLUS (GET_MODE (dst), op_res, src);\n+\t  op_res = gen_rtx_PLUS (GET_MODE (dst), op_res, const0_rtx);\n \t}\n \n       p = rtvec_alloc (2);"}, {"sha": "cb0f9000eefc908ad86b3a34ef26d02b9e717240", "filename": "gcc/config/s390/s390.md", "status": "modified", "additions": 15, "deletions": 13, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a94a76a7324487f7b2963a103da606efa1c2aaba/gcc%2Fconfig%2Fs390%2Fs390.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a94a76a7324487f7b2963a103da606efa1c2aaba/gcc%2Fconfig%2Fs390%2Fs390.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.md?ref=a94a76a7324487f7b2963a103da606efa1c2aaba", "patch": "@@ -3635,8 +3635,9 @@\n                         (match_dup 7)))\n      (set (match_dup 6) (plus:DI (match_dup 7) (match_dup 8)))])\n    (parallel\n-    [(set (match_dup 3) (plus:DI (plus:DI (match_dup 4) (match_dup 5))\n-                                 (ltu:DI (reg:CCL1 CC_REGNUM) (const_int 0))))\n+    [(set (match_dup 3) (plus:DI\n+                          (plus:DI (ltu:DI (reg:CCL1 CC_REGNUM) (const_int 0))\n+                                   (match_dup 4)) (match_dup 5)))\n      (clobber (reg:CC CC_REGNUM))])]\n   \"operands[3] = operand_subword (operands[0], 0, 0, TImode);\n    operands[4] = operand_subword (operands[1], 0, 0, TImode);\n@@ -3719,8 +3720,9 @@\n                         (match_dup 7)))\n      (set (match_dup 6) (plus:SI (match_dup 7) (match_dup 8)))])\n    (parallel\n-    [(set (match_dup 3) (plus:SI (plus:SI (match_dup 4) (match_dup 5))\n-                                 (ltu:SI (reg:CCL1 CC_REGNUM) (const_int 0))))\n+    [(set (match_dup 3) (plus:SI\n+\t\t\t  (plus:SI (ltu:SI (reg:CCL1 CC_REGNUM) (const_int 0))\n+\t\t\t\t   (match_dup 4)) (match_dup 5)))\n      (clobber (reg:CC CC_REGNUM))])]\n   \"operands[3] = operand_subword (operands[0], 0, 0, DImode);\n    operands[4] = operand_subword (operands[1], 0, 0, DImode);\n@@ -4308,12 +4310,12 @@\n (define_insn \"*add<mode>3_alc_cc\"\n   [(set (reg CC_REGNUM)\n         (compare\n-          (plus:GPR (plus:GPR (match_operand:GPR 1 \"nonimmediate_operand\" \"%0,0\")\n-                              (match_operand:GPR 2 \"general_operand\" \"d,m\"))\n-                    (match_operand:GPR 3 \"s390_alc_comparison\" \"\"))\n+          (plus:GPR (plus:GPR (match_operand:GPR 3 \"s390_alc_comparison\" \"\")\n+                              (match_operand:GPR 1 \"nonimmediate_operand\" \"%0,0\"))\n+                    (match_operand:GPR 2 \"general_operand\" \"d,m\"))\n           (const_int 0)))\n    (set (match_operand:GPR 0 \"register_operand\" \"=d,d\")\n-        (plus:GPR (plus:GPR (match_dup 1) (match_dup 2)) (match_dup 3)))]\n+        (plus:GPR (plus:GPR (match_dup 3) (match_dup 1)) (match_dup 2)))]\n   \"s390_match_ccmode (insn, CCLmode) && TARGET_CPU_ZARCH\"\n   \"@\n    alc<g>r\\t%0,%2\n@@ -4323,9 +4325,9 @@\n ; alcr, alc, alcgr, alcg\n (define_insn \"*add<mode>3_alc\"\n   [(set (match_operand:GPR 0 \"register_operand\" \"=d,d\")\n-        (plus:GPR (plus:GPR (match_operand:GPR 1 \"nonimmediate_operand\" \"%0,0\")\n-                            (match_operand:GPR 2 \"general_operand\" \"d,m\"))\n-                  (match_operand:GPR 3 \"s390_alc_comparison\" \"\")))\n+        (plus:GPR (plus:GPR (match_operand:GPR 3 \"s390_alc_comparison\" \"\")\n+                            (match_operand:GPR 1 \"nonimmediate_operand\" \"%0,0\"))\n+                  (match_operand:GPR 2 \"general_operand\" \"d,m\")))\n    (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_CPU_ZARCH\"\n   \"@\n@@ -4386,8 +4388,8 @@\n   \"&& reload_completed\"\n   [(set (match_dup 0) (const_int 0))\n    (parallel\n-    [(set (match_dup 0) (plus:GPR (plus:GPR (match_dup 0) (match_dup 0))\n-                                  (match_dup 1)))\n+    [(set (match_dup 0) (plus:GPR (plus:GPR (match_dup 1) (match_dup 0))\n+                                  (match_dup 0)))\n      (clobber (reg:CC CC_REGNUM))])]\n   \"\")\n "}]}