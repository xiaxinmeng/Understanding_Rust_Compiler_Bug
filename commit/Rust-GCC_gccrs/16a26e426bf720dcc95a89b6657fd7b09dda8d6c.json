{"sha": "16a26e426bf720dcc95a89b6657fd7b09dda8d6c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTZhMjZlNDI2YmY3MjBkY2M5NWE4OWI2NjU3ZmQ3YjA5ZGRhOGQ2Yw==", "commit": {"author": {"name": "Richard Sandiford", "email": "rdsandiford@googlemail.com", "date": "2014-06-11T16:58:17Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2014-06-11T16:58:17Z"}, "message": "genpreds.c (write_lookup_constraint): Rename to...\n\ngcc/\n\t* genpreds.c (write_lookup_constraint): Rename to...\n\t(write_lookup_constraint_1): ...this.\n\t(write_lookup_constraint_array): New function.\n\t(write_tm_preds_h): Define lookup_constraint as an inline function\n\tthat uses write_lookup_constraint_array where possible.\n\t(write_insn_preds_c): Update for the changes above.\n\nFrom-SVN: r211469", "tree": {"sha": "24cd7aa199e416d4f78acbf681440483b5b8c318", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/24cd7aa199e416d4f78acbf681440483b5b8c318"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/16a26e426bf720dcc95a89b6657fd7b09dda8d6c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16a26e426bf720dcc95a89b6657fd7b09dda8d6c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/16a26e426bf720dcc95a89b6657fd7b09dda8d6c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16a26e426bf720dcc95a89b6657fd7b09dda8d6c/comments", "author": {"login": "rsandifo", "id": 4235983, "node_id": "MDQ6VXNlcjQyMzU5ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4235983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo", "html_url": "https://github.com/rsandifo", "followers_url": "https://api.github.com/users/rsandifo/followers", "following_url": "https://api.github.com/users/rsandifo/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo/orgs", "repos_url": "https://api.github.com/users/rsandifo/repos", "events_url": "https://api.github.com/users/rsandifo/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2aeedf58e0dc23cc6b6167f4ed747d637c8c0803", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2aeedf58e0dc23cc6b6167f4ed747d637c8c0803", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2aeedf58e0dc23cc6b6167f4ed747d637c8c0803"}], "stats": {"total": 56, "additions": 52, "deletions": 4}, "files": [{"sha": "0c2e7b4c252b7365af3a0d4573eb65dc4aca358c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16a26e426bf720dcc95a89b6657fd7b09dda8d6c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16a26e426bf720dcc95a89b6657fd7b09dda8d6c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=16a26e426bf720dcc95a89b6657fd7b09dda8d6c", "patch": "@@ -1,3 +1,12 @@\n+2014-06-11  Richard Sandiford  <rdsandiford@googlemail.com>\n+\n+\t* genpreds.c (write_lookup_constraint): Rename to...\n+\t(write_lookup_constraint_1): ...this.\n+\t(write_lookup_constraint_array): New function.\n+\t(write_tm_preds_h): Define lookup_constraint as an inline function\n+\tthat uses write_lookup_constraint_array where possible.\n+\t(write_insn_preds_c): Update for the changes above.\n+\n 2014-06-11  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \t* doc/md.texi (regclass_for_constraint): Rename to..."}, {"sha": "3f52b87899bb0fd657070e5aaaf10a7485e5b99d", "filename": "gcc/genpreds.c", "status": "modified", "additions": 43, "deletions": 4, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16a26e426bf720dcc95a89b6657fd7b09dda8d6c/gcc%2Fgenpreds.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16a26e426bf720dcc95a89b6657fd7b09dda8d6c/gcc%2Fgenpreds.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenpreds.c?ref=16a26e426bf720dcc95a89b6657fd7b09dda8d6c", "patch": "@@ -966,11 +966,11 @@ write_enum_constraint_num (void)\n /* Write out a function which looks at a string and determines what\n    constraint name, if any, it begins with.  */\n static void\n-write_lookup_constraint (void)\n+write_lookup_constraint_1 (void)\n {\n   unsigned int i;\n   puts (\"enum constraint_num\\n\"\n-\t\"lookup_constraint (const char *str)\\n\"\n+\t\"lookup_constraint_1 (const char *str)\\n\"\n \t\"{\\n\"\n \t\"  switch (str[0])\\n\"\n \t\"    {\");\n@@ -1005,6 +1005,29 @@ write_lookup_constraint (void)\n \t\"}\\n\");\n }\n \n+/* Write out an array that maps single-letter characters to their\n+   constraints (if that fits in a character) or 255 if lookup_constraint_1\n+   must be called.  */\n+static void\n+write_lookup_constraint_array (void)\n+{\n+  unsigned int i;\n+  printf (\"const unsigned char lookup_constraint_array[] = {\\n  \");\n+  for (i = 0; i < ARRAY_SIZE (constraints_by_letter_table); i++)\n+    {\n+      if (i != 0)\n+\tprintf (\",\\n  \");\n+      struct constraint_data *c = constraints_by_letter_table[i];\n+      if (!c)\n+\tprintf (\"CONSTRAINT__UNKNOWN\");\n+      else if (c->namelen == 1)\n+\tprintf (\"MIN ((int) CONSTRAINT_%s, (int) UCHAR_MAX)\", c->c_name);\n+      else\n+\tprintf (\"UCHAR_MAX\");\n+    }\n+  printf (\"\\n};\\n\\n\");\n+}\n+\n /* Write out a function which looks at a string and determines what\n    the constraint name length is.  */\n static void\n@@ -1245,7 +1268,22 @@ write_tm_preds_h (void)\n   if (constraint_max_namelen > 0)\n     {\n       write_enum_constraint_num ();\n-      puts (\"extern enum constraint_num lookup_constraint (const char *);\");\n+      puts (\"extern enum constraint_num lookup_constraint_1 (const char *);\\n\"\n+\t    \"extern const unsigned char lookup_constraint_array[];\\n\"\n+\t    \"\\n\"\n+\t    \"/* Return the constraint at the beginning of P, or\"\n+\t    \" CONSTRAINT__UNKNOWN if it\\n\"\n+\t    \"   isn't recognized.  */\\n\"\n+\t    \"\\n\"\n+\t    \"static inline enum constraint_num\\n\"\n+\t    \"lookup_constraint (const char *p)\\n\"\n+\t    \"{\\n\"\n+\t    \"  unsigned int index = lookup_constraint_array\"\n+\t    \"[(unsigned char) *p];\\n\"\n+\t    \"  return (index == UCHAR_MAX\\n\"\n+\t    \"          ? lookup_constraint_1 (p)\\n\"\n+\t    \"          : (enum constraint_num) index);\\n\"\n+\t    \"}\\n\");\n       if (satisfied_start == num_constraints)\n \tputs (\"/* Return true if X satisfies constraint C.  */\\n\"\n \t      \"\\n\"\n@@ -1383,7 +1421,8 @@ write_insn_preds_c (void)\n \n   if (constraint_max_namelen > 0)\n     {\n-      write_lookup_constraint ();\n+      write_lookup_constraint_1 ();\n+      write_lookup_constraint_array ();\n       if (have_register_constraints)\n \twrite_reg_class_for_constraint_1 ();\n       write_constraint_satisfied_p_1 ();"}]}