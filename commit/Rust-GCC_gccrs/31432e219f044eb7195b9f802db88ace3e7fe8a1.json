{"sha": "31432e219f044eb7195b9f802db88ace3e7fe8a1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzE0MzJlMjE5ZjA0NGViNzE5NWI5ZjgwMmRiODhhY2UzZTdmZThhMQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2012-02-08T15:28:01Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2012-02-08T15:28:01Z"}, "message": "re PR tree-optimization/46886 (wrong code with -ftree-parallelize-loops -fno-tree-ch)\n\n2012-03-08  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/46886\n\t* tree-flow.h (do_while_loop_p): Declare.\n\t* tree-ssa-loop-ch.c (do_while_loop_p): Export.\n\t* tree-parloops.c (parallelize_loops): Only parallelize do-while\n\tloops.\n\n\t* testsuite/libgomp.c/pr46886.c: New testcase.\n\nFrom-SVN: r184010", "tree": {"sha": "1efa0d6fbc6e7f4dd31d427ac6c423dc2e46bc4e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1efa0d6fbc6e7f4dd31d427ac6c423dc2e46bc4e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/31432e219f044eb7195b9f802db88ace3e7fe8a1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31432e219f044eb7195b9f802db88ace3e7fe8a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/31432e219f044eb7195b9f802db88ace3e7fe8a1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31432e219f044eb7195b9f802db88ace3e7fe8a1/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c51ec0a3d68c86ba9b2e2d0c61556fee8308d570", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c51ec0a3d68c86ba9b2e2d0c61556fee8308d570", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c51ec0a3d68c86ba9b2e2d0c61556fee8308d570"}], "stats": {"total": 51, "additions": 49, "deletions": 2}, "files": [{"sha": "79824529d1f6ffb756198cdcc80fd55ddf141a75", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31432e219f044eb7195b9f802db88ace3e7fe8a1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31432e219f044eb7195b9f802db88ace3e7fe8a1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=31432e219f044eb7195b9f802db88ace3e7fe8a1", "patch": "@@ -1,3 +1,11 @@\n+2012-02-08  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/46886\n+\t* tree-flow.h (do_while_loop_p): Declare.\n+\t* tree-ssa-loop-ch.c (do_while_loop_p): Export.\n+\t* tree-parloops.c (parallelize_loops): Only parallelize do-while\n+\tloops.\n+\n 2012-02-08  Andrew MacLeod  <amacleod@redhat.com>\n \n \t* optabs.c (expand_atomic_load): Do not assume compare_and_swap will"}, {"sha": "f4c4d5c7f9652e296d0e14752c572fed205580ef", "filename": "gcc/tree-flow.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31432e219f044eb7195b9f802db88ace3e7fe8a1/gcc%2Ftree-flow.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31432e219f044eb7195b9f802db88ace3e7fe8a1/gcc%2Ftree-flow.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-flow.h?ref=31432e219f044eb7195b9f802db88ace3e7fe8a1", "patch": "@@ -619,6 +619,9 @@ extern bool may_propagate_copy (tree, tree);\n extern bool may_propagate_copy_into_stmt (gimple, tree);\n extern bool may_propagate_copy_into_asm (tree);\n \n+/* In tree-ssa-loop-ch.c  */\n+bool do_while_loop_p (struct loop *);\n+\n /* Affine iv.  */\n \n typedef struct"}, {"sha": "221f25798f3147d7e73cc969bfbf6600dc193440", "filename": "gcc/tree-parloops.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31432e219f044eb7195b9f802db88ace3e7fe8a1/gcc%2Ftree-parloops.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31432e219f044eb7195b9f802db88ace3e7fe8a1/gcc%2Ftree-parloops.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-parloops.c?ref=31432e219f044eb7195b9f802db88ace3e7fe8a1", "patch": "@@ -2183,7 +2183,10 @@ parallelize_loops (void)\n \t  || loop_has_blocks_with_irreducible_flag (loop)\n \t  || (loop_preheader_edge (loop)->src->flags & BB_IRREDUCIBLE_LOOP)\n \t  /* FIXME: the check for vector phi nodes could be removed.  */\n-\t  || loop_has_vector_phi_nodes (loop))\n+\t  || loop_has_vector_phi_nodes (loop)\n+\t  /* FIXME: transform_to_exit_first_loop does not handle not\n+\t     header-copied loops correctly - see PR46886.  */\n+\t  || !do_while_loop_p (loop))\n \tcontinue;\n       estimated = max_stmt_executions_int (loop, false);\n       /* FIXME: Bypass this check as graphite doesn't update the"}, {"sha": "84e5a7d250be14b28f177f5d5b2e94a59cd0a2cd", "filename": "gcc/tree-ssa-loop-ch.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31432e219f044eb7195b9f802db88ace3e7fe8a1/gcc%2Ftree-ssa-loop-ch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31432e219f044eb7195b9f802db88ace3e7fe8a1/gcc%2Ftree-ssa-loop-ch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-ch.c?ref=31432e219f044eb7195b9f802db88ace3e7fe8a1", "patch": "@@ -104,7 +104,7 @@ should_duplicate_loop_header_p (basic_block header, struct loop *loop,\n \n /* Checks whether LOOP is a do-while style loop.  */\n \n-static bool\n+bool\n do_while_loop_p (struct loop *loop)\n {\n   gimple stmt = last_stmt (loop->latch);"}, {"sha": "daebf23e69edaf4cdd178d5858112ae3c6e104d8", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31432e219f044eb7195b9f802db88ace3e7fe8a1/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31432e219f044eb7195b9f802db88ace3e7fe8a1/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=31432e219f044eb7195b9f802db88ace3e7fe8a1", "patch": "@@ -1,3 +1,8 @@\n+2012-02-08  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/46886\n+\t* testsuite/libgomp.c/pr46886.c: New testcase.\n+\n 2012-01-25  Matthias Klose  <doko@ubuntu.com>\n \n \t* config/linux/arm: Remove empty directory."}, {"sha": "fbdc4e130d31a3b755567ad80ddec816eee258ee", "filename": "libgomp/testsuite/libgomp.c/pr46886.c", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31432e219f044eb7195b9f802db88ace3e7fe8a1/libgomp%2Ftestsuite%2Flibgomp.c%2Fpr46886.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31432e219f044eb7195b9f802db88ace3e7fe8a1/libgomp%2Ftestsuite%2Flibgomp.c%2Fpr46886.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.c%2Fpr46886.c?ref=31432e219f044eb7195b9f802db88ace3e7fe8a1", "patch": "@@ -0,0 +1,28 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O -ftree-parallelize-loops=4 -fno-tree-ch -fno-tree-dominator-opts\" } */\n+\n+void abort(void);\n+\n+int d[1024], e[1024];\n+\n+int foo (void)\n+{\n+  int s = 0;\n+  int i;\n+  for (i = 0; i < 1024; i++)\n+    s += d[i] - e[i];\n+  return s;\n+}\n+\n+int main ()\n+{\n+  int i;\n+  for (i = 0; i < 1024; i++)\n+    {\n+      d[i] = i * 2;\n+      e[i] = i;\n+    }\n+  if (foo () != 1023 * 1024 / 2)\n+    abort ();\n+  return 0;\n+}"}]}