{"sha": "2f806f3b9babbbb17374ee37b37407bf136e66e7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmY4MDZmM2I5YmFiYmJiMTczNzRlZTM3YjM3NDA3YmYxMzZlNjZlNw==", "commit": {"author": {"name": "Nick Clifton", "email": "nickc@redhat.com", "date": "2005-08-06T13:50:42Z"}, "committer": {"name": "Nick Clifton", "email": "nickc@gcc.gnu.org", "date": "2005-08-06T13:50:42Z"}, "message": "config/stormy16/stormy16.h (SYMBOL_FLAG_XSTORMY16_BELOW100): New define.\n\n (ASM_OUTPUT_LABELREF): Delete - it is no longer needed.\nconfig/stormy16/stormy16.c (xstormy16_below100_symbol): Check symbol flags\n    instead of symbol name mangling.\n  (xstormy16_asm_output_aligned_common): Likewise.  Also simplify code since\n    the bss100_section cass is the only case where the below100 code will be\n    triggered.\n  (xstormy16_encode_section_info): Encode below100 attribute using the\n    SYMBOL_FLAG_XSTORMY16_BELOW100 instead of mangling the name.\n  (xstormy16_strip_name_encoding): Delete - this function is no longer needed.\n  (TARGET_STRIP_NAME_ENCODING): Undefine.\nconfig/stormy16/stormy16-protos.h: Delete prototype for\n    xstormy16_strip_name_encoding.\n\nFrom-SVN: r102810", "tree": {"sha": "8443861f837d2565dee4dc2e5db54f7b15a1247b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8443861f837d2565dee4dc2e5db54f7b15a1247b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2f806f3b9babbbb17374ee37b37407bf136e66e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f806f3b9babbbb17374ee37b37407bf136e66e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f806f3b9babbbb17374ee37b37407bf136e66e7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f806f3b9babbbb17374ee37b37407bf136e66e7/comments", "author": {"login": "nickclifton", "id": 31441682, "node_id": "MDQ6VXNlcjMxNDQxNjgy", "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nickclifton", "html_url": "https://github.com/nickclifton", "followers_url": "https://api.github.com/users/nickclifton/followers", "following_url": "https://api.github.com/users/nickclifton/following{/other_user}", "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}", "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions", "organizations_url": "https://api.github.com/users/nickclifton/orgs", "repos_url": "https://api.github.com/users/nickclifton/repos", "events_url": "https://api.github.com/users/nickclifton/events{/privacy}", "received_events_url": "https://api.github.com/users/nickclifton/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a4d0554781f4aa5af93b620984c91df51dbe87ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4d0554781f4aa5af93b620984c91df51dbe87ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a4d0554781f4aa5af93b620984c91df51dbe87ba"}], "stats": {"total": 140, "additions": 56, "deletions": 84}, "files": [{"sha": "436e5a65cdca8d82c417b5047ebcd3dbdfbe2f78", "filename": "gcc/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f806f3b9babbbb17374ee37b37407bf136e66e7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f806f3b9babbbb17374ee37b37407bf136e66e7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2f806f3b9babbbb17374ee37b37407bf136e66e7", "patch": "@@ -1,3 +1,22 @@\n+2005-08-06  Nick Clifton  <nickc@redhat.com>\n+\n+\t* config/stormy16/stormy16.h (SYMBOL_FLAG_XSTORMY16_BELOW100):\n+\tNew define.\n+        (ASM_OUTPUT_LABELREF): Delete - it is no longer needed.\n+\t* config/stormy16/stormy16.c (xstormy16_below100_symbol):\n+\tCheck symbol flags instead of symbol name mangling.\n+        (xstormy16_asm_output_aligned_common): Likewise.  Also\n+\tsimplify code since the bss100_section cass is the only case\n+\twhere the below100 code will be triggered.\n+        (xstormy16_encode_section_info): Encode below100 attribute\n+\tusing the SYMBOL_FLAG_XSTORMY16_BELOW100 instead of mangling\n+\tthe name.\n+        (xstormy16_strip_name_encoding): Delete - this function is no\n+\tlonger needed.\n+        (TARGET_STRIP_NAME_ENCODING): Undefine.\n+\t* config/stormy16/stormy16-protos.h: Delete prototype for\n+\txstormy16_strip_name_encoding.\n+\n 2005-08-06  Kazu Hirata  <kazu@codesourcery.com>\n \n \t* Makefile.in, cfgexpand.c, cfgloop.h, cfgloopmanip.c,"}, {"sha": "1cc9c4fd098f4234892d42f6af83fa938d32607e", "filename": "gcc/config/stormy16/stormy16-protos.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f806f3b9babbbb17374ee37b37407bf136e66e7/gcc%2Fconfig%2Fstormy16%2Fstormy16-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f806f3b9babbbb17374ee37b37407bf136e66e7/gcc%2Fconfig%2Fstormy16%2Fstormy16-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fstormy16%2Fstormy16-protos.h?ref=2f806f3b9babbbb17374ee37b37407bf136e66e7", "patch": "@@ -29,7 +29,6 @@ extern int direct_return (void);\n extern int xstormy16_interrupt_function_p (void);\n extern int xstormy16_epilogue_uses (int);\n extern void xstormy16_function_profiler (void);\n-extern const char *xstormy16_strip_name_encoding (const char *name);\n extern void bss100_section (void);\n \n #if defined (TREE_CODE)"}, {"sha": "f9e5866aa546054efbb94405b15fd6fc7f1c7a96", "filename": "gcc/config/stormy16/stormy16.c", "status": "modified", "additions": 34, "deletions": 76, "changes": 110, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f806f3b9babbbb17374ee37b37407bf136e66e7/gcc%2Fconfig%2Fstormy16%2Fstormy16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f806f3b9babbbb17374ee37b37407bf136e66e7/gcc%2Fconfig%2Fstormy16%2Fstormy16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fstormy16%2Fstormy16.c?ref=2f806f3b9babbbb17374ee37b37407bf136e66e7", "patch": "@@ -529,12 +529,10 @@ xstormy16_below100_symbol (rtx x,\n   if (GET_CODE (x) == PLUS\n       && GET_CODE (XEXP (x, 1)) == CONST_INT)\n     x = XEXP (x, 0);\n+\n   if (GET_CODE (x) == SYMBOL_REF)\n-    {\n-      const char *n = XSTR (x, 0);\n-      if (n[0] == '@' && n[1] == 'b' && n[2] == '.')\n-\treturn 1;\n-    }\n+    return (SYMBOL_REF_FLAGS (x) & SYMBOL_FLAG_XSTORMY16_BELOW100) != 0;\n+\n   if (GET_CODE (x) == CONST_INT)\n     {\n       HOST_WIDE_INT i = INTVAL (x);\n@@ -1578,42 +1576,40 @@ xstormy16_asm_output_mi_thunk (FILE *file,\n    than uninitialized.  */\n void\n xstormy16_asm_output_aligned_common (FILE *stream,\n-\t\t\t\t     tree decl ATTRIBUTE_UNUSED,\n+\t\t\t\t     tree decl,\n \t\t\t\t     const char *name,\n \t\t\t\t     int size,\n \t\t\t\t     int align,\n \t\t\t\t     int global)\n {\n-  if (name[0] == '@' && name[2] == '.')\n+  rtx mem = DECL_RTL (decl);\n+  rtx symbol;\n+    \n+  if (mem != NULL_RTX\n+      && GET_CODE (mem) == MEM\n+      && GET_CODE (symbol = XEXP (mem, 0)) == SYMBOL_REF\n+      && SYMBOL_REF_FLAGS (symbol) & SYMBOL_FLAG_XSTORMY16_BELOW100)\n     {\n-      const char *op = 0;\n-      switch (name[1])\n+      const char *name2;\n+      int p2align = 0;\n+\n+      bss100_section ();\n+\n+      while (align > 8)\n \t{\n-\tcase 'b':\n-\t  bss100_section();\n-\t  op = \"space\";\n-\t  break;\n+\t  align /= 2;\n+\t  p2align ++;\n \t}\n-      if (op)\n-\t{\n-\t  const char *name2;\n-\t  int p2align = 0;\n \n-\t  while (align > 8)\n-\t    {\n-\t      align /= 2;\n-\t      p2align ++;\n-\t    }\n-\t  name2 = xstormy16_strip_name_encoding (name);\n-\t  if (global)\n-\t    fprintf (stream, \"\\t.globl\\t%s\\n\", name2);\n-\t  if (p2align)\n-\t    fprintf (stream, \"\\t.p2align %d\\n\", p2align);\n-\t  fprintf (stream, \"\\t.type\\t%s, @object\\n\", name2);\n-\t  fprintf (stream, \"\\t.size\\t%s, %d\\n\", name2, size);\n-\t  fprintf (stream, \"%s:\\n\\t.%s\\t%d\\n\", name2, op, size);\n-\t  return;\n-\t}\n+      name2 = default_strip_name_encoding (name);\n+      if (global)\n+\tfprintf (stream, \"\\t.globl\\t%s\\n\", name2);\n+      if (p2align)\n+\tfprintf (stream, \"\\t.p2align %d\\n\", p2align);\n+      fprintf (stream, \"\\t.type\\t%s, @object\\n\", name2);\n+      fprintf (stream, \"\\t.size\\t%s, %d\\n\", name2, size);\n+      fprintf (stream, \"%s:\\n\\t.space\\t%d\\n\", name2, size);\n+      return;\n     }\n \n   if (!global)\n@@ -1631,52 +1627,16 @@ xstormy16_asm_output_aligned_common (FILE *stream,\n    special addressing modes for them.  */\n \n static void\n-xstormy16_encode_section_info (tree decl,\n-\t\t\t       rtx r,\n-\t\t\t       int first ATTRIBUTE_UNUSED)\n+xstormy16_encode_section_info (tree decl, rtx r, int first)\n {\n-  if (TREE_CODE (decl) == VAR_DECL\n+   if (TREE_CODE (decl) == VAR_DECL\n       && (lookup_attribute (\"below100\", DECL_ATTRIBUTES (decl))\n \t  || lookup_attribute (\"BELOW100\", DECL_ATTRIBUTES (decl))))\n     {\n-      const char *newsection = 0;\n-      char *newname;\n-      tree idp;\n-      rtx rtlname, rtl;\n-      const char *oldname;\n-\n-      rtl = r;\n-      rtlname = XEXP (rtl, 0);\n-      if (GET_CODE (rtlname) == MEM)\n-\trtlname = XEXP (rtlname, 0);\n-      gcc_assert (GET_CODE (rtlname) == SYMBOL_REF);\n-      oldname = XSTR (rtlname, 0);\n-\n-      if (DECL_INITIAL (decl))\n-\t{\n-\t  newsection = \".data_below100\";\n-\t  DECL_SECTION_NAME (decl) = build_string (strlen (newsection),\n-\t\t\t\t\t\t   newsection);\n-\t}\n-\n-      newname = alloca (strlen (oldname) + 4);\n-      sprintf (newname, \"@b.%s\", oldname);\n-      idp = get_identifier (newname);\n-      XEXP (rtl, 0) = gen_rtx_SYMBOL_REF (Pmode, IDENTIFIER_POINTER (idp));\n-    }\n-}\n-\n-const char *\n-xstormy16_strip_name_encoding (const char *name)\n-{\n-  while (1)\n-    {\n-      if (name[0] == '@' && name[2] == '.')\n-\tname += 3;\n-      else if (name[0] == '*')\n-\tname ++;\n-      else\n-\treturn name;\n+      rtx symbol = XEXP (r, 0);\n+      \n+      gcc_assert (GET_CODE (symbol) == SYMBOL_REF);\n+      SYMBOL_REF_FLAGS (symbol) |= SYMBOL_FLAG_XSTORMY16_BELOW100;\n     }\n }\n \n@@ -2676,8 +2636,6 @@ xstormy16_return_in_memory (tree type, tree fntype ATTRIBUTE_UNUSED)\n #define TARGET_ASM_ALIGNED_SI_OP \"\\t.word\\t\"\n #undef TARGET_ENCODE_SECTION_INFO\n #define TARGET_ENCODE_SECTION_INFO xstormy16_encode_section_info\n-#undef TARGET_STRIP_NAME_ENCODING\n-#define TARGET_STRIP_NAME_ENCODING xstormy16_strip_name_encoding\n \n #undef TARGET_ASM_OUTPUT_MI_THUNK\n #define TARGET_ASM_OUTPUT_MI_THUNK xstormy16_asm_output_mi_thunk"}, {"sha": "e37d19ab174c670e2e05863fcecc0c083f364f21", "filename": "gcc/config/stormy16/stormy16.h", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f806f3b9babbbb17374ee37b37407bf136e66e7/gcc%2Fconfig%2Fstormy16%2Fstormy16.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f806f3b9babbbb17374ee37b37407bf136e66e7/gcc%2Fconfig%2Fstormy16%2Fstormy16.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fstormy16%2Fstormy16.h?ref=2f806f3b9babbbb17374ee37b37407bf136e66e7", "patch": "@@ -655,18 +655,17 @@ do {\t\t\t\t\t\t\t\\\n #define IS_ASM_LOGICAL_LINE_SEPARATOR(C) ((C) == '|')\n \n #define ASM_OUTPUT_ALIGNED_DECL_COMMON(STREAM, DECL, NAME, SIZE, ALIGNMENT) \\\n-  xstormy16_asm_output_aligned_common(STREAM, DECL, NAME, SIZE, ALIGNMENT, 1)\n+  xstormy16_asm_output_aligned_common (STREAM, DECL, NAME, SIZE, ALIGNMENT, 1)\n #define ASM_OUTPUT_ALIGNED_DECL_LOCAL(STREAM, DECL, NAME, SIZE, ALIGNMENT) \\\n-  xstormy16_asm_output_aligned_common(STREAM, DECL, NAME, SIZE, ALIGNMENT, 0)\n+  xstormy16_asm_output_aligned_common (STREAM, DECL, NAME, SIZE, ALIGNMENT, 0)\n \n \f\n /* Output and Generation of Labels.  */\n+#define SYMBOL_FLAG_XSTORMY16_BELOW100\t(SYMBOL_FLAG_MACH_DEP << 0)\n \n #define ASM_OUTPUT_SYMBOL_REF(STREAM, SYMBOL)\t\t\t\t\\\n   do {\t\t\t\t\t\t\t\t\t\\\n     const char *rn = XSTR (SYMBOL, 0);\t\t\t\t\t\\\n-    if (rn[0] == '@' && rn[2] == '.')\t\t\t\t\t\\\n-      rn += 3;\t\t\t\t\t\t\t\t\\\n     if (SYMBOL_REF_FUNCTION_P (SYMBOL))\t\t\t\t\t\\\n       ASM_OUTPUT_LABEL_REF ((STREAM), rn);\t\t\t\t\\\n     else\t\t\t\t\t\t\t\t\\\n@@ -680,9 +679,6 @@ do  {\t\t\t\t\t\t\\\n   fputc (')', STREAM);\t\t\t\t\\\n } while (0)\n \n-#define ASM_OUTPUT_LABELREF(STREAM, NAME)\t\\\n-  asm_fprintf ((STREAM), \"%U%s\", xstormy16_strip_name_encoding (NAME));\n-\n /* Globalizing directive for a label.  */\n #define GLOBAL_ASM_OP \"\\t.globl \"\n "}]}