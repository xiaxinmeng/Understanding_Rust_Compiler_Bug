{"sha": "56d17681225aa3b26dd0ca0958fe9c4a329b07f4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTZkMTc2ODEyMjVhYTNiMjZkZDBjYTA5NThmZTljNGEzMjliMDdmNA==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2007-07-06T08:53:15Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2007-07-06T08:53:15Z"}, "message": "re PR rtl-optimization/32450 (-pg causes miscompilation)\n\n\tPR rtl_optimization/32450\n\t* function.c (thread_prologue_and_epilogue_insns): Emit blockage insn\n\tto ensure that instructions are not moved into the prologue when\n\tprofiling is on.  Remove unused prologue_end variable.\n\t(expand_function_end): Emit blockage insn instead of ASM_INPUT rtx\n\tas a scheduling barrier.\n\ntestsuite/ChangeLog:\n\n\tPR rtl_optimization/32450\n\t* gcc.dg/pr32450.c: New runtime test.\n\nFrom-SVN: r126403", "tree": {"sha": "4c202a505d41f55e7d51a4801eabc48fc89c16b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4c202a505d41f55e7d51a4801eabc48fc89c16b9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/56d17681225aa3b26dd0ca0958fe9c4a329b07f4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56d17681225aa3b26dd0ca0958fe9c4a329b07f4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/56d17681225aa3b26dd0ca0958fe9c4a329b07f4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56d17681225aa3b26dd0ca0958fe9c4a329b07f4/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "042f720de169cce9094e54e01e2f3b4bde4b63b3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/042f720de169cce9094e54e01e2f3b4bde4b63b3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/042f720de169cce9094e54e01e2f3b4bde4b63b3"}], "stats": {"total": 67, "additions": 59, "deletions": 8}, "files": [{"sha": "b36c38034916e69a3a70f25578385fff7abe7164", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56d17681225aa3b26dd0ca0958fe9c4a329b07f4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56d17681225aa3b26dd0ca0958fe9c4a329b07f4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=56d17681225aa3b26dd0ca0958fe9c4a329b07f4", "patch": "@@ -1,3 +1,12 @@\n+2007-07-06  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR rtl_optimization/32450\n+\t* function.c (thread_prologue_and_epilogue_insns): Emit blockage insn\n+\tto ensure that instructions are not moved into the prologue when\n+\tprofiling is on.  Remove unused prologue_end variable.\n+\t(expand_function_end): Emit blockage insn instead of ASM_INPUT rtx\n+\tas a scheduling barrier.\n+\n 2007-07-06  Alexandre Oliva  <aoliva@redhat.com>\n \n \tPR debug/23551"}, {"sha": "1477b6a3bd8d6445c7b4d47c8302367e42964b44", "filename": "gcc/function.c", "status": "modified", "additions": 11, "deletions": 8, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56d17681225aa3b26dd0ca0958fe9c4a329b07f4/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56d17681225aa3b26dd0ca0958fe9c4a329b07f4/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=56d17681225aa3b26dd0ca0958fe9c4a329b07f4", "patch": "@@ -4515,11 +4515,9 @@ expand_function_end (void)\n \n   /* @@@ This is a kludge.  We want to ensure that instructions that\n      may trap are not moved into the epilogue by scheduling, because\n-     we don't always emit unwind information for the epilogue.\n-     However, not all machine descriptions define a blockage insn, so\n-     emit an ASM_INPUT to act as one.  */\n+     we don't always emit unwind information for the epilogue.  */\n   if (! USING_SJLJ_EXCEPTIONS && flag_non_call_exceptions)\n-    emit_insn (gen_rtx_ASM_INPUT (VOIDmode, \"\"));\n+    emit_insn (gen_blockage ());\n \n   /* If stack protection is enabled for this function, check the guard.  */\n   if (cfun->stack_protect_guard)\n@@ -5045,9 +5043,6 @@ thread_prologue_and_epilogue_insns (void)\n #if defined (HAVE_sibcall_epilogue) || defined (HAVE_epilogue) || defined (HAVE_return) || defined (HAVE_prologue)\n   rtx seq;\n #endif\n-#ifdef HAVE_prologue\n-  rtx prologue_end = NULL_RTX;\n-#endif\n #if defined (HAVE_epilogue) || defined(HAVE_return)\n   rtx epilogue_end = NULL_RTX;\n #endif\n@@ -5067,7 +5062,15 @@ thread_prologue_and_epilogue_insns (void)\n \n       /* Retain a map of the prologue insns.  */\n       record_insns (seq, &prologue);\n-      prologue_end = emit_note (NOTE_INSN_PROLOGUE_END);\n+      emit_note (NOTE_INSN_PROLOGUE_END);\n+ \n+#ifndef PROFILE_BEFORE_PROLOGUE\n+      /* Ensure that instructions are not moved into the prologue when\n+\t profiling is on.  The call to the profiling routine can be\n+\t emitted within the live range of a call-clobbered register.  */\n+      if (current_function_profile)\n+        emit_insn (gen_blockage ());\n+#endif\n \n       seq = get_insns ();\n       end_sequence ();"}, {"sha": "3772aff6f9c716f7bd3d47a1e1fa14619d99bb8d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56d17681225aa3b26dd0ca0958fe9c4a329b07f4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56d17681225aa3b26dd0ca0958fe9c4a329b07f4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=56d17681225aa3b26dd0ca0958fe9c4a329b07f4", "patch": "@@ -1,3 +1,8 @@\n+2007-07-06  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR rtl_optimization/32450\n+\t* gcc.dg/pr32450.c: New runtime test.\n+\n 2007-07-06  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* g++.dg/ext/visibility/ms-compat-1.C: Change double underscore to"}, {"sha": "4a1842e9b84750f684350651a708cb60ff018af8", "filename": "gcc/testsuite/gcc.dg/pr32450.c", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56d17681225aa3b26dd0ca0958fe9c4a329b07f4/gcc%2Ftestsuite%2Fgcc.dg%2Fpr32450.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56d17681225aa3b26dd0ca0958fe9c4a329b07f4/gcc%2Ftestsuite%2Fgcc.dg%2Fpr32450.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr32450.c?ref=56d17681225aa3b26dd0ca0958fe9c4a329b07f4", "patch": "@@ -0,0 +1,34 @@\n+/* Contributed by Joost VandeVondele  <jv244@cam.ac.uk> */\n+\n+/* { dg-do run } */\n+/* { dg-require-profiling \"-pg\" } */\n+/* { dg-options \"-O2 -pg\" } */\n+/* { dg-options \"-O2 -pg -mtune=core2\" { target { i?86-*-* x86_64-*-* } } } */\n+/* { dg-options \"-O2 -pg -static\" { target hppa*-*-hpux* } } */\n+\n+extern void abort (void);\n+\n+int stack_pointer;\n+\n+void\n+__attribute__((noinline))\n+mystop ()\n+{\n+  abort ();\n+}\n+\n+void\n+__attribute__((noinline))\n+add ()\n+{\n+  if (stack_pointer + 1 > 10)\n+    mystop ();\n+\n+  stack_pointer = stack_pointer + 1;\n+}\n+\n+int main ()\n+{\n+  add ();\n+  return stack_pointer - 1;\n+}"}]}