{"sha": "80486e0671dada5e65fbc8baab06e9357281c9cd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODA0ODZlMDY3MWRhZGE1ZTY1ZmJjOGJhYWIwNmU5MzU3MjgxYzljZA==", "commit": {"author": {"name": "Daniel Jacobowitz", "email": "drow@mvista.com", "date": "2002-11-22T19:34:21Z"}, "committer": {"name": "Daniel Jacobowitz", "email": "drow@gcc.gnu.org", "date": "2002-11-22T19:34:21Z"}, "message": "configure.in: Set insn=nop for DWARF-2 tests on ARM.\n\n\t* configure.in: Set insn=nop for DWARF-2 tests on ARM.\n\t* configure: Regenerated.\n\nFrom-SVN: r59383", "tree": {"sha": "b3aaecbbdd76c5ff12d0e1d5c2b551f38e1eefee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b3aaecbbdd76c5ff12d0e1d5c2b551f38e1eefee"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/80486e0671dada5e65fbc8baab06e9357281c9cd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80486e0671dada5e65fbc8baab06e9357281c9cd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/80486e0671dada5e65fbc8baab06e9357281c9cd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80486e0671dada5e65fbc8baab06e9357281c9cd/comments", "author": null, "committer": null, "parents": [{"sha": "726a4d6d5e056501f909f6e6a9122483a44028ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/726a4d6d5e056501f909f6e6a9122483a44028ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/726a4d6d5e056501f909f6e6a9122483a44028ad"}], "stats": {"total": 23, "additions": 15, "deletions": 8}, "files": [{"sha": "cf02ad6a463eca36330bbf9494b44006853f4826", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80486e0671dada5e65fbc8baab06e9357281c9cd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80486e0671dada5e65fbc8baab06e9357281c9cd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=80486e0671dada5e65fbc8baab06e9357281c9cd", "patch": "@@ -1,3 +1,8 @@\n+2002-11-22  Daniel Jacobowitz  <drow@mvista.com>\n+\n+\t* configure.in: Set insn=nop for DWARF-2 tests on ARM.\n+\t* configure: Regenerated.\n+\n 2002-11-22  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* config/h8300/h8300.c (compute_a_shift_length): Fix the insn"}, {"sha": "8f1f952a2ef2ae8e754d46efd0b4a9249d05422a", "filename": "gcc/configure", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80486e0671dada5e65fbc8baab06e9357281c9cd/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80486e0671dada5e65fbc8baab06e9357281c9cd/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=80486e0671dada5e65fbc8baab06e9357281c9cd", "patch": "@@ -2407,7 +2407,7 @@ EOF\n fi\n \n # Find some useful tools\n-for ac_prog in gawk mawk nawk awk\n+for ac_prog in mawk gawk nawk awk\n do\n # Extract the first word of \"$ac_prog\", so it can be a program name with args.\n set dummy $ac_prog; ac_word=$2\n@@ -8004,7 +8004,8 @@ gcc_cv_as_dwarf2_debug_line=no\n # ??? Once 2.11 is released, probably need to add first known working\n # version to the per-target configury.\n case \"$target\" in\n-  i?86*-*-* | mips*-*-* | alpha*-*-* | powerpc*-*-* | sparc*-*-* | m68*-*-* | x86_64*-*-* | hppa*-*-*)\n+  i?86*-*-* | mips*-*-* | alpha*-*-* | powerpc*-*-* | sparc*-*-* | m68*-*-* \\\n+  | x86_64*-*-* | hppa*-*-* | arm*-*-* | strongarm*-*-* | xscale*-*-*)\n     insn=\"nop\"\n     ;;\n   ia64*-*-*)\n@@ -8051,7 +8052,7 @@ fi\n echo \"$ac_t\"\"$gcc_cv_as_dwarf2_debug_line\" 1>&6\n \n echo $ac_n \"checking assembler --gdwarf2 support\"\"... $ac_c\" 1>&6\n-echo \"configure:8055: checking assembler --gdwarf2 support\" >&5\n+echo \"configure:8056: checking assembler --gdwarf2 support\" >&5\n gcc_cv_as_gdwarf2_flag=no\n if test x$gcc_cv_gas_major_version != x -a x$gcc_cv_gas_minor_version != x;\n then\n@@ -8080,7 +8081,7 @@ fi\n echo \"$ac_t\"\"$gcc_cv_as_gdwarf2_flag\" 1>&6\n \n echo $ac_n \"checking assembler --gstabs support\"\"... $ac_c\" 1>&6\n-echo \"configure:8084: checking assembler --gstabs support\" >&5\n+echo \"configure:8085: checking assembler --gstabs support\" >&5\n gcc_cv_as_gstabs_flag=no\n if test x$gcc_cv_gas_major_version != x -a x$gcc_cv_gas_minor_version != x;\n then\n@@ -8108,7 +8109,7 @@ fi\n echo \"$ac_t\"\"$gcc_cv_as_gstabs_flag\" 1>&6\n \n echo $ac_n \"checking linker PT_GNU_EH_FRAME support\"\"... $ac_c\" 1>&6\n-echo \"configure:8112: checking linker PT_GNU_EH_FRAME support\" >&5\n+echo \"configure:8113: checking linker PT_GNU_EH_FRAME support\" >&5\n gcc_cv_ld_eh_frame_hdr=no\n if test x$gcc_cv_gld_major_version != x -a x$gcc_cv_gld_minor_version != x; then\n   if test \"$gcc_cv_gld_major_version\" -eq 2 -a \"$gcc_cv_gld_minor_version\" -ge 12 -o \"$gcc_cv_gld_major_version\" -gt 2 && grep 'EMUL = elf' ../ld/Makefile > /dev/null; then\n@@ -8132,7 +8133,7 @@ echo \"$ac_t\"\"$gcc_cv_ld_eh_frame_hdr\" 1>&6\n case \"$target\" in\n   mips*-*-*)\n     echo $ac_n \"checking whether libgloss uses STARTUP directives consistently\"\"... $ac_c\" 1>&6\n-echo \"configure:8136: checking whether libgloss uses STARTUP directives consistently\" >&5\n+echo \"configure:8137: checking whether libgloss uses STARTUP directives consistently\" >&5\n     gcc_cv_mips_libgloss_startup=no\n     gcc_cv_libgloss_srcdir=`echo $srcdir | sed -e 's,/gcc$,,'`/libgloss\n     if test \"x$exec_prefix\" = xNONE; then\n@@ -8336,7 +8337,7 @@ fi\n \n \n echo $ac_n \"checking whether to enable maintainer-specific portions of Makefiles\"\"... $ac_c\" 1>&6\n-echo \"configure:8340: checking whether to enable maintainer-specific portions of Makefiles\" >&5\n+echo \"configure:8341: checking whether to enable maintainer-specific portions of Makefiles\" >&5\n     # Check whether --enable-maintainer-mode or --disable-maintainer-mode was given.\n if test \"${enable_maintainer_mode+set}\" = set; then\n   enableval=\"$enable_maintainer_mode\""}, {"sha": "efc9924070655d8efd130e460ef28f7c4eeee144", "filename": "gcc/configure.in", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80486e0671dada5e65fbc8baab06e9357281c9cd/gcc%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80486e0671dada5e65fbc8baab06e9357281c9cd/gcc%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.in?ref=80486e0671dada5e65fbc8baab06e9357281c9cd", "patch": "@@ -2112,7 +2112,8 @@ gcc_cv_as_dwarf2_debug_line=no\n # ??? Once 2.11 is released, probably need to add first known working\n # version to the per-target configury.\n case \"$target\" in\n-  i?86*-*-* | mips*-*-* | alpha*-*-* | powerpc*-*-* | sparc*-*-* | m68*-*-* | x86_64*-*-* | hppa*-*-*)\n+  i?86*-*-* | mips*-*-* | alpha*-*-* | powerpc*-*-* | sparc*-*-* | m68*-*-* \\\n+  | x86_64*-*-* | hppa*-*-* | arm*-*-* | strongarm*-*-* | xscale*-*-*)\n     insn=\"nop\"\n     ;;\n   ia64*-*-*)"}]}