{"sha": "b9f7d63e774f11497a01d17a6e255ba49e0d4520", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjlmN2Q2M2U3NzRmMTE0OTdhMDFkMTdhNmUyNTViYTQ5ZTBkNDUyMA==", "commit": {"author": {"name": "Hans-Peter Nilsson", "email": "hp@gcc.gnu.org", "date": "2000-09-25T13:39:45Z"}, "committer": {"name": "Hans-Peter Nilsson", "email": "hp@gcc.gnu.org", "date": "2000-09-25T13:39:45Z"}, "message": "Change callers in config/[n-z]*/ (the rest) to match:\n\nChanges add TABs on either or both sides, covering start of line,\nup to any operand for all .*ASM.*_OP definitions.\n\nFrom-SVN: r36621", "tree": {"sha": "4ef90c53dd04c0023d05e8c52fe5c81f3fb18608", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4ef90c53dd04c0023d05e8c52fe5c81f3fb18608"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b9f7d63e774f11497a01d17a6e255ba49e0d4520", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9f7d63e774f11497a01d17a6e255ba49e0d4520", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b9f7d63e774f11497a01d17a6e255ba49e0d4520", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9f7d63e774f11497a01d17a6e255ba49e0d4520/comments", "author": null, "committer": null, "parents": [{"sha": "016c844017b941fbfe25a51172d03fa3e3cda13e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/016c844017b941fbfe25a51172d03fa3e3cda13e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/016c844017b941fbfe25a51172d03fa3e3cda13e"}], "stats": {"total": 72, "additions": 42, "deletions": 30}, "files": [{"sha": "4272116f5a9c206d76c9eac00e883e3ecc5836b5", "filename": "gcc/config/pa/pa-64.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9f7d63e774f11497a01d17a6e255ba49e0d4520/gcc%2Fconfig%2Fpa%2Fpa-64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9f7d63e774f11497a01d17a6e255ba49e0d4520/gcc%2Fconfig%2Fpa%2Fpa-64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa-64.h?ref=b9f7d63e774f11497a01d17a6e255ba49e0d4520", "patch": "@@ -353,7 +353,7 @@ do {\t\t\t\t\t\t\t\t\\\n #define ASM_OUTPUT_CONSTRUCTOR(FILE,NAME)\t\t\t\t\\\n   do {\t\t\t\t\t\t\t\t\t\\\n     ctors_section ();\t\t\t\t\t\t\t\\\n-    fprintf (FILE, \"\\t%s\\t P%%\", INT_ASM_OP);\t\t\t\t\\\n+    fprintf (FILE, \"%sP%%\", INT_ASM_OP);\t\t\t\t\\\n     assemble_name (FILE, NAME);\t\t\t\t\t\t\\\n     fprintf (FILE, \"\\n\");\t\t\t\t\t\t\\\n   } while (0)\n@@ -363,7 +363,7 @@ do {\t\t\t\t\t\t\t\t\\\n #define ASM_OUTPUT_DESTRUCTOR(FILE,NAME)       \t\t\t\t\\\n   do {\t\t\t\t\t\t\t\t\t\\\n     dtors_section ();                   \t\t\t\t\\\n-    fprintf (FILE, \"\\t%s\\t P%%\", INT_ASM_OP);\t\t\t\t\\\n+    fprintf (FILE, \"%sP%%\", INT_ASM_OP);\t\t\t\t\\\n     assemble_name (FILE, NAME);              \t\t\t\t\\\n     fprintf (FILE, \"\\n\");\t\t\t\t\t\t\\\n   } while (0)"}, {"sha": "880323e4724c25efe2ab286111decc9adbd17ecd", "filename": "gcc/config/rs6000/netware.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9f7d63e774f11497a01d17a6e255ba49e0d4520/gcc%2Fconfig%2Frs6000%2Fnetware.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9f7d63e774f11497a01d17a6e255ba49e0d4520/gcc%2Fconfig%2Frs6000%2Fnetware.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fnetware.h?ref=b9f7d63e774f11497a01d17a6e255ba49e0d4520", "patch": "@@ -61,7 +61,7 @@ Boston, MA 02111-1307, USA.  */\n #undef ASM_DECLARE_FUNCTION_NAME\n #define ASM_DECLARE_FUNCTION_NAME(FILE, NAME, DECL)\t\t\t\\\n   do {\t\t\t\t\t\t\t\t\t\\\n-    fprintf (FILE, \"\\t%s\\t \", TYPE_ASM_OP);\t\t\t\t\\\n+    fprintf (FILE, \"%s\", TYPE_ASM_OP);\t\t\t\t\t\\\n     assemble_name (FILE, NAME);\t\t\t\t\t\t\\\n     putc (',', FILE);\t\t\t\t\t\t\t\\\n     fprintf (FILE, TYPE_OPERAND_FMT, \"function\");\t\t\t\\\n@@ -97,7 +97,7 @@ Boston, MA 02111-1307, USA.  */\n \tlabelno++;\t\t\t\t\t\t\t\\\n \tASM_GENERATE_INTERNAL_LABEL (label, \"Lfe\", labelno);\t\t\\\n \tASM_OUTPUT_INTERNAL_LABEL (FILE, \"Lfe\", labelno);\t\t\\\n-\tfprintf (FILE, \"\\t%s\\t \", SIZE_ASM_OP);\t\t\t\t\\\n+\tfprintf (FILE, \"%s\", SIZE_ASM_OP);\t\t\t\t\\\n \tassemble_name (FILE, (FNAME));\t\t\t\t\t\\\n         fprintf (FILE, \",\");\t\t\t\t\t\t\\\n \tassemble_name (FILE, label);\t\t\t\t\t\\\n@@ -215,7 +215,7 @@ toc_section ()\t\t\t\t\t\t\t\t\\\n #define DBX_OUTPUT_LBRAC(FILE, BUF)\t\t\t\t\t   \\\n do\t\t\t\t\t\t\t\t\t   \\\n   {\t\t\t\t\t\t\t\t\t   \\\n-    fprintf (FILE, \"%s %d,0,0,\", ASM_STABN_OP, N_LBRAC);\t\t   \\\n+    fprintf (FILE, \"%s%d,0,0,\", ASM_STABN_OP, N_LBRAC);\t\t\t   \\\n     assemble_name (FILE, BUF);\t\t\t\t\t\t   \\\n     fprintf (FILE, \"-.\");\t\t\t\t\t\t   \\\n     assemble_name (asmfile,\t\t\t\t\t\t   \\\n@@ -227,7 +227,7 @@ while (0)\n #define DBX_OUTPUT_RBRAC(FILE, BUF)\t\t\t\t\t   \\\n do\t\t\t\t\t\t\t\t\t   \\\n   {\t\t\t\t\t\t\t\t\t   \\\n-    fprintf (FILE, \"%s %d,0,0,\", ASM_STABN_OP, N_RBRAC);\t\t   \\\n+    fprintf (FILE, \"%s%d,0,0,\", ASM_STABN_OP, N_RBRAC);\t\t\t   \\\n     assemble_name (FILE, BUF);\t\t\t\t\t\t   \\\n     fprintf (FILE, \"-.\");\t\t\t\t\t\t   \\\n     assemble_name (asmfile,\t\t\t\t\t\t   \\"}, {"sha": "46394e128b1470356ec424f1f09396001a41e9e0", "filename": "gcc/config/rs6000/sysv4.h", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9f7d63e774f11497a01d17a6e255ba49e0d4520/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9f7d63e774f11497a01d17a6e255ba49e0d4520/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fsysv4.h?ref=b9f7d63e774f11497a01d17a6e255ba49e0d4520", "patch": "@@ -644,7 +644,7 @@ extern int rs6000_pic_labelno;\n \tputc ('\\n', FILE);\t\t\t\t\t\t\\\n       }\t\t\t\t\t\t\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n-    fprintf (FILE, \"\\t%s\\t \", TYPE_ASM_OP);\t\t\t\t\\\n+    fprintf (FILE, \"%s\", TYPE_ASM_OP);\t\t\t\t\t\\\n     assemble_name (FILE, NAME);\t\t\t\t\t\t\\\n     putc (',', FILE);\t\t\t\t\t\t\t\\\n     fprintf (FILE, TYPE_OPERAND_FMT, \"function\");\t\t\t\\\n@@ -762,14 +762,14 @@ do {\t\t\t\t\t\t\t\t\t\\\n       ASM_OUTPUT_SKIP (FILE, SIZE);\t\t\t\t\t\\\n       if (!flag_inhibit_size_directive && (SIZE) > 0)\t\t\t\\\n \t{\t\t\t\t\t\t\t\t\\\n-\t  fprintf (FILE, \"\\t%s\\t \", SIZE_ASM_OP);\t\t\t\\\n+\t  fprintf (FILE, \"%s\", SIZE_ASM_OP);\t\t\t\t\\\n \t  assemble_name (FILE, NAME);\t\t\t\t\t\\\n \t  fprintf (FILE, \",%d\\n\",  SIZE);\t\t\t\t\\\n \t}\t\t\t\t\t\t\t\t\\\n     }\t\t\t\t\t\t\t\t\t\\\n   else\t\t\t\t\t\t\t\t\t\\\n     {\t\t\t\t\t\t\t\t\t\\\n-      fprintf (FILE, \"\\t%s\\t\", LCOMM_ASM_OP);\t\t\t\t\\\n+      fprintf (FILE, \"%s\", LCOMM_ASM_OP);\t\t\t\t\\\n       assemble_name ((FILE), (NAME));\t\t\t\t\t\\\n       fprintf ((FILE), \",%u,%u\\n\", (SIZE), (ALIGN) / BITS_PER_UNIT);\t\\\n     }\t\t\t\t\t\t\t\t\t\\\n@@ -1007,7 +1007,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n     if (DEFAULT_ABI != ABI_SOLARIS)\t\t\t\t\t\\\n       {\t\t\t\t\t\t\t\t\t\\\n \tctors_section ();\t\t\t\t\t\t\\\n-\tfprintf (FILE, \"\\t%s\\t \", INT_ASM_OP);\t\t\t\t\\\n+\tfprintf (FILE, \"%s\", INT_ASM_OP);\t\t\t\t\\\n \tassemble_name (FILE, NAME);\t\t\t\t\t\\\n       }\t\t\t\t\t\t\t\t\t\\\n     else\t\t\t\t\t\t\t\t\\\n@@ -1028,7 +1028,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n     if (DEFAULT_ABI != ABI_SOLARIS)\t\t\t\t\t\\\n       {\t\t\t\t\t\t\t\t\t\\\n \tdtors_section ();\t\t\t\t\t\t\\\n-\tfprintf (FILE, \"\\t%s\\t \", INT_ASM_OP);\t\t\t\t\\\n+\tfprintf (FILE, \"%s\", INT_ASM_OP);\t\t\t\t\\\n \tassemble_name (FILE, NAME);\t\t\t\t\t\\\n       }\t\t\t\t\t\t\t\t\t\\\n     else\t\t\t\t\t\t\t\t\\"}, {"sha": "acd98dd17a93db5eaf932740cb1dc7b8e996e88d", "filename": "gcc/config/sparc/linux64.h", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9f7d63e774f11497a01d17a6e255ba49e0d4520/gcc%2Fconfig%2Fsparc%2Flinux64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9f7d63e774f11497a01d17a6e255ba49e0d4520/gcc%2Fconfig%2Fsparc%2Flinux64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Flinux64.h?ref=b9f7d63e774f11497a01d17a6e255ba49e0d4520", "patch": "@@ -406,7 +406,10 @@ do {\t\t\t\t\t\t\t\t\t\\\n #define ASM_OUTPUT_CONSTRUCTOR(FILE,NAME)\t\t\t\t\\\n   do {\t\t\t\t\t\t\t\t\t\\\n     ctors_section ();\t\t\t\t\t\t\t\\\n-    fprintf (FILE, \"\\t%s\\t \", TARGET_ARCH64 ? ASM_LONGLONG : INT_ASM_OP); \\\n+    if (TARGET_ARCH64)\t\t\t\t\t\t\t\\\n+      fprintf (FILE, \"\\t%s\\t \", ASM_LONGLONG);\t\t\t\t\\\n+    else\t\t\t\t\t\t\t\t\\\n+      fprintf (FILE, \"%s\", INT_ASM_OP);\t\t\t\t\t\\\n     assemble_name (FILE, NAME);\t\t\t\t\t\t\\\n     fprintf (FILE, \"\\n\");\t\t\t\t\t\t\\\n   } while (0)\n@@ -417,7 +420,10 @@ do {\t\t\t\t\t\t\t\t\t\\\n #define ASM_OUTPUT_DESTRUCTOR(FILE,NAME)       \t\t\t\t\\\n   do {\t\t\t\t\t\t\t\t\t\\\n     dtors_section ();                   \t\t\t\t\\\n-    fprintf (FILE, \"\\t%s\\t \", TARGET_ARCH64 ? ASM_LONGLONG : INT_ASM_OP); \\\n+    if (TARGET_ARCH64)\t\t\t\t\t\t\t\\\n+      fprintf (FILE, \"\\t%s\\t \", ASM_LONGLONG);\t\t\t\t\\\n+    else\t\t\t\t\t\t\t\t\\\n+      fprintf (FILE, \"%s\", INT_ASM_OP);\t\t\t\t\t\\\n     assemble_name (FILE, NAME);              \t\t\t\t\\\n     fprintf (FILE, \"\\n\");\t\t\t\t\t\t\\\n   } while (0)"}, {"sha": "84290f330393b4214773d9c98f9fe91953aa27e0", "filename": "gcc/config/sparc/litecoff.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9f7d63e774f11497a01d17a6e255ba49e0d4520/gcc%2Fconfig%2Fsparc%2Flitecoff.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9f7d63e774f11497a01d17a6e255ba49e0d4520/gcc%2Fconfig%2Fsparc%2Flitecoff.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Flitecoff.h?ref=b9f7d63e774f11497a01d17a6e255ba49e0d4520", "patch": "@@ -93,7 +93,7 @@ dtors_section ()\t\t\t\t\t\t\t\\\n #define ASM_OUTPUT_CONSTRUCTOR(FILE,NAME)\t\t\t\t\\\n   do {\t\t\t\t\t\t\t\t\t\\\n     ctors_section ();\t\t\t\t\t\t\t\\\n-    fprintf (FILE, \"\\t%s\\t \", INT_ASM_OP);\t\t\t\t\\\n+    fprintf (FILE, \"%s\", INT_ASM_OP);\t\t\t\t\t\\\n     assemble_name (FILE, NAME);\t\t\t\t\t\t\\\n     fprintf (FILE, \"\\n\");\t\t\t\t\t\t\\\n   } while (0)\n@@ -104,7 +104,7 @@ dtors_section ()\t\t\t\t\t\t\t\\\n #define ASM_OUTPUT_DESTRUCTOR(FILE,NAME)       \t\t\t\t\\\n   do {\t\t\t\t\t\t\t\t\t\\\n     dtors_section ();                   \t\t\t\t\\\n-    fprintf (FILE, \"\\t%s\\t \", INT_ASM_OP);\t\t\t\t\\\n+    fprintf (FILE, \"%s\", INT_ASM_OP);\t\t\t\t\t\\\n     assemble_name (FILE, NAME);              \t\t\t\t\\\n     fprintf (FILE, \"\\n\");\t\t\t\t\t\t\\\n   } while (0)"}, {"sha": "740789c38dd435ba1c1c239413ec0f9cb1cda02b", "filename": "gcc/config/sparc/sol2-sld-64.h", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9f7d63e774f11497a01d17a6e255ba49e0d4520/gcc%2Fconfig%2Fsparc%2Fsol2-sld-64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9f7d63e774f11497a01d17a6e255ba49e0d4520/gcc%2Fconfig%2Fsparc%2Fsol2-sld-64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsol2-sld-64.h?ref=b9f7d63e774f11497a01d17a6e255ba49e0d4520", "patch": "@@ -311,7 +311,10 @@\n #define ASM_OUTPUT_CONSTRUCTOR(FILE,NAME)\t\t\t\t\\\n   do {\t\t\t\t\t\t\t\t\t\\\n     ctors_section ();\t\t\t\t\t\t\t\\\n-    fprintf (FILE, \"\\t%s\\t \", TARGET_ARCH64 ? ASM_LONGLONG : INT_ASM_OP); \\\n+    if (TARGET_ARCH64)\t\t\t\t\t\t\t\\\n+      fprintf (FILE, \"\\t%s\\t \", ASM_LONGLONG);\t\t\t\t\\\n+    else\t\t\t\t\t\t\t\t\\\n+      fprintf (FILE, \"%s\", INT_ASM_OP);\t\t\t\t\t\\\n     assemble_name (FILE, NAME);\t\t\t\t\t\t\\\n     fprintf (FILE, \"\\n\");\t\t\t\t\t\t\\\n   } while (0)\n@@ -322,7 +325,10 @@\n #define ASM_OUTPUT_DESTRUCTOR(FILE,NAME)       \t\t\t\t\\\n   do {\t\t\t\t\t\t\t\t\t\\\n     dtors_section ();                   \t\t\t\t\\\n-    fprintf (FILE, \"\\t%s\\t \", TARGET_ARCH64 ? ASM_LONGLONG : INT_ASM_OP); \\\n+    if (TARGET_ARCH64)\t\t\t\t\t\t\t\\\n+      fprintf (FILE, \"\\t%s\\t \", ASM_LONGLONG);\t\t\t\t\\\n+    else\t\t\t\t\t\t\t\t\\\n+      fprintf (FILE, \"%s\", INT_ASM_OP);\t\t\t\t\t\\\n     assemble_name (FILE, NAME);              \t\t\t\t\\\n     fprintf (FILE, \"\\n\");\t\t\t\t\t\t\\\n   } while (0)"}, {"sha": "6d05254b420c2529c9ff063080ebdea74a757bc3", "filename": "gcc/config/sparc/sp64-elf.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9f7d63e774f11497a01d17a6e255ba49e0d4520/gcc%2Fconfig%2Fsparc%2Fsp64-elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9f7d63e774f11497a01d17a6e255ba49e0d4520/gcc%2Fconfig%2Fsparc%2Fsp64-elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsp64-elf.h?ref=b9f7d63e774f11497a01d17a6e255ba49e0d4520", "patch": "@@ -135,22 +135,22 @@ crtbegin.o%s \\\n \n #define ASM_OUTPUT_DWARF_ADDR(FILE, LABEL) \\\n do {\t\t\t\t\t\t\t\t\\\n-  fprintf ((FILE), \"\\t%s\\t\", UNALIGNED_LONGLONG_ASM_OP);\t\\\n+  fprintf ((FILE), \"%s\", UNALIGNED_LONGLONG_ASM_OP);\t\t\\\n   assemble_name ((FILE), (LABEL));\t\t\t\t\\\n   fprintf ((FILE), \"\\n\");\t\t\t\t\t\\\n } while (0)\n \n #define ASM_OUTPUT_DWARF_ADDR_CONST(FILE, RTX) \\\n do {\t\t\t\t\t\t\t\t\\\n-  fprintf ((FILE), \"\\t%s\\t\", UNALIGNED_LONGLONG_ASM_OP);\t\\\n+  fprintf ((FILE), \"%s\", UNALIGNED_LONGLONG_ASM_OP);\t\t\\\n   output_addr_const ((FILE), (RTX));\t\t\t\t\\\n   fputc ('\\n', (FILE));\t\t\t\t\t\t\\\n } while (0)\n \n /* ??? Not sure if this should be 4 or 8 bytes.  4 works for now.  */\n #define ASM_OUTPUT_DWARF_REF(FILE, LABEL) \\\n do {\t\t\t\t\t\t\t\t\\\n-  fprintf ((FILE), \"\\t%s\\t\", UNALIGNED_INT_ASM_OP);\t\t\\\n+  fprintf ((FILE), \"%s\", UNALIGNED_INT_ASM_OP);\t\t\t\\\n   assemble_name ((FILE), (LABEL));\t\t\t\t\\\n   fprintf ((FILE), \"\\n\");\t\t\t\t\t\\\n } while (0)"}, {"sha": "2004c60ed8883f1002baef86751c759685f7c04a", "filename": "gcc/config/sparc/sparc.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9f7d63e774f11497a01d17a6e255ba49e0d4520/gcc%2Fconfig%2Fsparc%2Fsparc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9f7d63e774f11497a01d17a6e255ba49e0d4520/gcc%2Fconfig%2Fsparc%2Fsparc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.h?ref=b9f7d63e774f11497a01d17a6e255ba49e0d4520", "patch": "@@ -3106,14 +3106,14 @@ do {\t\t\t\t\t\t\t\t\t\\\n   fprintf (FILE, \"\\n\"))\n \n #define ASM_OUTPUT_CHAR(FILE,VALUE)  \\\n-( fprintf (FILE, \"\\t%s\\t\", ASM_BYTE_OP),\t\\\n+( fprintf (FILE, \"%s\", ASM_BYTE_OP),\t\\\n   output_addr_const (FILE, (VALUE)),\t\t\\\n   fprintf (FILE, \"\\n\"))\n \n /* This is how to output an assembler line for a numeric constant byte.  */\n \n #define ASM_OUTPUT_BYTE(FILE,VALUE)  \\\n-  fprintf (FILE, \"\\t%s\\t0x%x\\n\", ASM_BYTE_OP, (VALUE))\n+  fprintf (FILE, \"%s0x%x\\n\", ASM_BYTE_OP, (VALUE))\n \n /* This is how we hook in and defer the case-vector until the end of\n    the function.  */\n@@ -3223,7 +3223,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n /* Output #ident as a .ident.  */\n \n #define ASM_OUTPUT_IDENT(FILE, NAME) \\\n-  fprintf (FILE, \"\\t%s\\t\\\"%s\\\"\\n\", IDENT_ASM_OP, NAME);\n+  fprintf (FILE, \"%s\\\"%s\\\"\\n\", IDENT_ASM_OP, NAME);\n \n /* Output code to add DELTA to the first argument, and then jump to FUNCTION.\n    Used for C++ multiple inheritance.  */"}, {"sha": "618da77dcc258cf58c0b8f71c30db7b2f7518e21", "filename": "gcc/config/sparc/sysv4.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9f7d63e774f11497a01d17a6e255ba49e0d4520/gcc%2Fconfig%2Fsparc%2Fsysv4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9f7d63e774f11497a01d17a6e255ba49e0d4520/gcc%2Fconfig%2Fsparc%2Fsysv4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsysv4.h?ref=b9f7d63e774f11497a01d17a6e255ba49e0d4520", "patch": "@@ -113,7 +113,7 @@ Boston, MA 02111-1307, USA.  */\n /* This is the format used to print a .pushsection pseudo-op (and its operand)\n    for the Sparc/svr4 assembler.  */\n \n-#define PUSHSECTION_FORMAT\t\"\\t%s\\t\\\"%s\\\"\\n\"\n+#define PUSHSECTION_FORMAT\t\"%s\\\"%s\\\"\\n\"\n \n #undef ASM_OUTPUT_CASE_LABEL\n #define ASM_OUTPUT_CASE_LABEL(FILE, PREFIX, NUM, JUMPTABLE)\t\t\\"}, {"sha": "876b1835939f6e594fcd2ea5812ab9b0d4962c3d", "filename": "gcc/config/v850/v850.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9f7d63e774f11497a01d17a6e255ba49e0d4520/gcc%2Fconfig%2Fv850%2Fv850.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9f7d63e774f11497a01d17a6e255ba49e0d4520/gcc%2Fconfig%2Fv850%2Fv850.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fv850%2Fv850.c?ref=b9f7d63e774f11497a01d17a6e255ba49e0d4520", "patch": "@@ -2597,26 +2597,26 @@ v850_output_common (file, decl, name, size, align)\n {\n   if (decl == NULL_TREE)\n     {\n-      fprintf (file, \"\\t%s\\t\", COMMON_ASM_OP);\n+      fprintf (file, \"%s\", COMMON_ASM_OP);\n     }\n   else\n     {\n       switch (v850_get_data_area (decl))\n \t{\n \tcase DATA_AREA_ZDA:\n-\t  fprintf (file, \"\\t%s\\t\", ZCOMMON_ASM_OP);\n+\t  fprintf (file, \"%s\", ZCOMMON_ASM_OP);\n \t  break;\n \n \tcase DATA_AREA_SDA:\n-\t  fprintf (file, \"\\t%s\\t\", SCOMMON_ASM_OP);\n+\t  fprintf (file, \"%s\", SCOMMON_ASM_OP);\n \t  break;\n \n \tcase DATA_AREA_TDA:\n-\t  fprintf (file, \"\\t%s\\t\", TCOMMON_ASM_OP);\n+\t  fprintf (file, \"%s\", TCOMMON_ASM_OP);\n \t  break;\n       \n \tdefault:\n-\t  fprintf (file, \"\\t%s\\t\", COMMON_ASM_OP);\n+\t  fprintf (file, \"%s\", COMMON_ASM_OP);\n \t  break;\n \t}\n     }\n@@ -2634,7 +2634,7 @@ v850_output_local (file, decl, name, size, align)\n      int size;\n      int align;\n {\n-  fprintf (file, \"\\t%s\\t\", LOCAL_ASM_OP);\n+  fprintf (file, \"%s\", LOCAL_ASM_OP);\n   assemble_name (file, name);\n   fprintf (file, \"\\n\");\n   "}]}