{"sha": "5b4275dbe96d3d6e5da8189adda0501e76e72a8b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWI0Mjc1ZGJlOTZkM2Q2ZTVkYTgxODlhZGRhMDUwMWU3NmU3MmE4Yg==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2005-02-18T21:23:16Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2005-02-18T21:23:16Z"}, "message": "re PR target/19886 (g++.dg/eh/registers1.C execution test fails)\n\n\tPR target/19886\n\t* config/ia64/ia64.h (struct machine_function): Add state_num.\n\t* config/ia64/ia64.c (process_epilogue,\n\tprocess_for_unwind_directive): Use new unwind state numbers each\n\ttime rather than state 1.\n\nFrom-SVN: r95234", "tree": {"sha": "4dab641272e45b4b07a089df63ed84926aeef2cf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4dab641272e45b4b07a089df63ed84926aeef2cf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5b4275dbe96d3d6e5da8189adda0501e76e72a8b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b4275dbe96d3d6e5da8189adda0501e76e72a8b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5b4275dbe96d3d6e5da8189adda0501e76e72a8b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b4275dbe96d3d6e5da8189adda0501e76e72a8b/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d6083c7d69ace6293905f43dc3f182b1e5a9c7fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6083c7d69ace6293905f43dc3f182b1e5a9c7fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d6083c7d69ace6293905f43dc3f182b1e5a9c7fc"}], "stats": {"total": 17, "additions": 15, "deletions": 2}, "files": [{"sha": "317bcb07796060ba537077a3d07fa165b8ab5727", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b4275dbe96d3d6e5da8189adda0501e76e72a8b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b4275dbe96d3d6e5da8189adda0501e76e72a8b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5b4275dbe96d3d6e5da8189adda0501e76e72a8b", "patch": "@@ -1,3 +1,11 @@\n+2005-02-18  Joseph S. Myers  <joseph@codesourcery.com>\n+\n+\tPR target/19886\n+\t* config/ia64/ia64.h (struct machine_function): Add state_num.\n+\t* config/ia64/ia64.c (process_epilogue,\n+\tprocess_for_unwind_directive): Use new unwind state numbers each\n+\ttime rather than state 1.\n+\n 2005-02-18  Ulrich Weigand  <uweigand@de.ibm.com>\n \n \tPR target/20054"}, {"sha": "ce72063eecb187c52b6908ab895171621c07cd22", "filename": "gcc/config/ia64/ia64.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b4275dbe96d3d6e5da8189adda0501e76e72a8b/gcc%2Fconfig%2Fia64%2Fia64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b4275dbe96d3d6e5da8189adda0501e76e72a8b/gcc%2Fconfig%2Fia64%2Fia64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.c?ref=5b4275dbe96d3d6e5da8189adda0501e76e72a8b", "patch": "@@ -7726,7 +7726,8 @@ process_epilogue (void)\n \n   if (!last_block)\n     {\n-      fprintf (asm_out_file, \"\\t.label_state 1\\n\");\n+      fprintf (asm_out_file, \"\\t.label_state %d\\n\",\n+\t       ++cfun->machine->state_num);\n       need_copy_state = true;\n     }\n \n@@ -7974,7 +7975,8 @@ process_for_unwind_directive (FILE *asm_out_file, rtx insn)\n \t  if (need_copy_state)\n \t    {\n \t      fprintf (asm_out_file, \"\\t.body\\n\");\n-\t      fprintf (asm_out_file, \"\\t.copy_state 1\\n\");\n+\t      fprintf (asm_out_file, \"\\t.copy_state %d\\n\",\n+\t\t       cfun->machine->state_num);\n \t      need_copy_state = false;\n \t    }\n \t}"}, {"sha": "36edb9e48f2ad1f6fed7accbe8f1e3f50467012b", "filename": "gcc/config/ia64/ia64.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b4275dbe96d3d6e5da8189adda0501e76e72a8b/gcc%2Fconfig%2Fia64%2Fia64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b4275dbe96d3d6e5da8189adda0501e76e72a8b/gcc%2Fconfig%2Fia64%2Fia64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.h?ref=5b4275dbe96d3d6e5da8189adda0501e76e72a8b", "patch": "@@ -2199,6 +2199,9 @@ struct machine_function GTY(())\n \n   /* The number of varargs registers to save.  */\n   int n_varargs;\n+\n+  /* The number of the next unwind state to copy.  */\n+  int state_num;\n };\n \n "}]}