{"sha": "427b248dd0460725a3d6b266fde176420da3103b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDI3YjI0OGRkMDQ2MDcyNWEzZDZiMjY2ZmRlMTc2NDIwZGEzMTAzYg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2013-05-16T15:09:31Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2013-05-16T15:09:31Z"}, "message": "Makefile.in (LLINKER): New variable.\n\n\t* Makefile.in (LLINKER): New variable.\n\t(mostlyclean): Remove link mutex.\n\t* configure.ac: Handle --enable-link-mutex.\n\t* lock-and-run.sh: New script.\n\nFrom-SVN: r198977", "tree": {"sha": "58dd6ed692243aaa8c1c4c970c25746342075404", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/58dd6ed692243aaa8c1c4c970c25746342075404"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/427b248dd0460725a3d6b266fde176420da3103b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/427b248dd0460725a3d6b266fde176420da3103b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/427b248dd0460725a3d6b266fde176420da3103b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/427b248dd0460725a3d6b266fde176420da3103b/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "11678eb3835f050414cc7e4a26ae6b9461e2e90d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11678eb3835f050414cc7e4a26ae6b9461e2e90d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/11678eb3835f050414cc7e4a26ae6b9461e2e90d"}], "stats": {"total": 150, "additions": 139, "deletions": 11}, "files": [{"sha": "fdf3072cfb9fd298834cb9a18f3254e9f7cb12f4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/427b248dd0460725a3d6b266fde176420da3103b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/427b248dd0460725a3d6b266fde176420da3103b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=427b248dd0460725a3d6b266fde176420da3103b", "patch": "@@ -1,3 +1,10 @@\n+2013-05-16  Jason Merrill  <jason@redhat.com>\n+\n+\t* Makefile.in (LLINKER): New variable.\n+\t(mostlyclean): Remove link mutex.\n+\t* configure.ac: Handle --enable-link-mutex.\n+\t* lock-and-run.sh: New script.\n+\n 2013-05-16  Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>\n \n \tPR target/19599"}, {"sha": "23e2926969e3d94bf0137d6fb6e4d1ade0023a2f", "filename": "gcc/Makefile.in", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/427b248dd0460725a3d6b266fde176420da3103b/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/427b248dd0460725a3d6b266fde176420da3103b/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=427b248dd0460725a3d6b266fde176420da3103b", "patch": "@@ -235,6 +235,13 @@ LINKER = $(CC)\n LINKER_FLAGS = $(CFLAGS)\n endif\n \n+# Like LINKER, but use a mutex for serializing front end links.\n+ifeq (@DO_LINK_MUTEX@,true)\n+LLINKER = $(SHELL) $(srcdir)/lock-and-run.sh linkfe.lck $(LINKER)\n+else\n+LLINKER = $(LINKER)\n+endif\n+\n # -------------------------------------------\n # Programs which operate on the build machine\n # -------------------------------------------\n@@ -4529,6 +4536,8 @@ mostlyclean: lang.mostlyclean\n \t-rm -f gtype.state\n # Delete genchecksum outputs\n \t-rm -f *-checksum.c\n+# Delete lock-and-run bits\n+\t-rm -rf linkfe.lck lock-stamp.*\n \n # Delete all files made by compilation\n # that don't exist in the distribution."}, {"sha": "2c10c68653c23fd555a98611efe1c2466414123b", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/427b248dd0460725a3d6b266fde176420da3103b/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/427b248dd0460725a3d6b266fde176420da3103b/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=427b248dd0460725a3d6b266fde176420da3103b", "patch": "@@ -1,3 +1,7 @@\n+2013-05-16  Jason Merrill  <jason@redhat.com>\n+\n+\t* gcc-interface/Make-lang.in (gnat1$(exeext)): Use link mutex.\n+\n 2013-05-13  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \tPR ada/57188"}, {"sha": "4fed34fc524945ea84e2e12051e6c40e8582c7f5", "filename": "gcc/ada/gcc-interface/Make-lang.in", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/427b248dd0460725a3d6b266fde176420da3103b/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/427b248dd0460725a3d6b266fde176420da3103b/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMake-lang.in?ref=427b248dd0460725a3d6b266fde176420da3103b", "patch": "@@ -185,6 +185,7 @@ endif\n GCC_LINKERFLAGS = $(filter-out -Werror, $(ALL_LINKERFLAGS))\n \n GCC_LINK=$(LINKER) $(GCC_LINKERFLAGS) $(LDFLAGS)\n+GCC_LLINK=$(LLINKER) $(GCC_LINKERFLAGS) $(LDFLAGS)\n \n # Lists of files for various purposes.\n \n@@ -562,7 +563,8 @@ TARGET_ADA_SRCS =\n # Since the RTL should be built with the latest compiler, remove the\n #  stamp target in the parent directory whenever gnat1 is rebuilt\n gnat1$(exeext): $(TARGET_ADA_SRCS) $(GNAT1_OBJS) $(ADA_BACKEND) libcommon-target.a $(LIBDEPS)\n-\t+$(GCC_LINK) -o $@ $(GNAT1_OBJS) $(ADA_BACKEND) libcommon-target.a $(LIBS) $(SYSLIBS) $(BACKENDLIBS) $(CFLAGS)\n+\t+$(GCC_LLINK) -o $@ $(GNAT1_OBJS) $(ADA_BACKEND) \\\n+\t  libcommon-target.a $(LIBS) $(SYSLIBS) $(BACKENDLIBS) $(CFLAGS)\n \t$(RM) stamp-gnatlib2-rts stamp-tools\n \n gnatbind$(exeext): ada/b_gnatb.o $(CONFIG_H) $(GNATBIND_OBJS) ggc-none.o libcommon-target.a $(LIBDEPS)"}, {"sha": "819dfeb9be98cfa0b978a2d31f23fe12013ea9ee", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/427b248dd0460725a3d6b266fde176420da3103b/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/427b248dd0460725a3d6b266fde176420da3103b/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=427b248dd0460725a3d6b266fde176420da3103b", "patch": "@@ -1,3 +1,7 @@\n+2013-05-16  Jason Merrill  <jason@redhat.com>\n+\n+\t* Make-lang.in (cc1$(exeext)): Use link mutex.\n+\n 2013-04-24  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* c-typeck.c (pointer_diff): Change -Wpointer-arith pedwarns"}, {"sha": "47aa4cbef6fc939508de0dcda2645493a579e4aa", "filename": "gcc/c/Make-lang.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/427b248dd0460725a3d6b266fde176420da3103b/gcc%2Fc%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/427b248dd0460725a3d6b266fde176420da3103b/gcc%2Fc%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FMake-lang.in?ref=427b248dd0460725a3d6b266fde176420da3103b", "patch": "@@ -75,7 +75,7 @@ cc1-checksum.c : build/genchecksum$(build_exeext) checksum-options \\\n cc1-checksum.o : cc1-checksum.c $(CONFIG_H) $(SYSTEM_H)\n \n cc1$(exeext): $(C_OBJS) cc1-checksum.o $(BACKEND) $(LIBDEPS)\n-\t+$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o $@ $(C_OBJS) \\\n+\t+$(LLINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o $@ $(C_OBJS) \\\n \t  cc1-checksum.o $(BACKEND) $(LIBS) $(BACKENDLIBS)\n #\f\n # Build hooks:"}, {"sha": "1f03eac6e27e9a0ee2f9f929a2727e71a94360ce", "filename": "gcc/configure", "status": "modified", "additions": 26, "deletions": 2, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/427b248dd0460725a3d6b266fde176420da3103b/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/427b248dd0460725a3d6b266fde176420da3103b/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=427b248dd0460725a3d6b266fde176420da3103b", "patch": "@@ -670,6 +670,7 @@ subdirs\n dollar\n gcc_tooldir\n enable_lto\n+DO_LINK_MUTEX\n MAINT\n zlibinc\n zlibdir\n@@ -916,6 +917,7 @@ with_long_double_128\n with_gc\n with_system_zlib\n enable_maintainer_mode\n+enable_link_mutex\n enable_version_specific_runtime_libs\n enable_plugin\n enable_libquadmath_support\n@@ -1627,6 +1629,8 @@ Optional Features:\n   --enable-maintainer-mode\n                           enable make rules and dependencies not useful (and\n                           sometimes confusing) to the casual installer\n+  --enable-link-mutex     avoid linking multiple front-ends at once to avoid\n+                          thrashing on the build machine\n   --enable-version-specific-runtime-libs\n                           specify that runtime libraries should be installed\n                           in a compiler-specific directory\n@@ -17830,7 +17834,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 17833 \"configure\"\n+#line 17837 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -17936,7 +17940,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 17939 \"configure\"\n+#line 17943 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -27061,6 +27065,26 @@ else\n   MAINT='#'\n fi\n \n+\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether to avoid linking multiple front-ends at once\" >&5\n+$as_echo_n \"checking whether to avoid linking multiple front-ends at once... \" >&6; }\n+  # Check whether --enable-link-mutex was given.\n+if test \"${enable_link_mutex+set}\" = set; then :\n+  enableval=$enable_link_mutex; do_link_mutex=$enableval\n+else\n+  do_link_mutex=no\n+fi\n+\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $do_link_mutex\" >&5\n+$as_echo \"$do_link_mutex\" >&6; }\n+\n+if test \"$do_link_mutex\" = \"yes\"; then\n+   DO_LINK_MUTEX=true\n+else\n+   DO_LINK_MUTEX=false\n+fi\n+\n+\n # --------------\n # Language hooks\n # --------------"}, {"sha": "855affdf152302e307f4f35611f2e370b5fc18ab", "filename": "gcc/configure.ac", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/427b248dd0460725a3d6b266fde176420da3103b/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/427b248dd0460725a3d6b266fde176420da3103b/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=427b248dd0460725a3d6b266fde176420da3103b", "patch": "@@ -4958,6 +4958,24 @@ else\n fi\n AC_SUBST(MAINT)dnl\n \n+dnl Whether to prevent multiple front-ends from linking at the same time\n+\n+AC_MSG_CHECKING([whether to avoid linking multiple front-ends at once])\n+  AC_ARG_ENABLE(link-mutex,\n+[AS_HELP_STRING([--enable-link-mutex],\n+\t\t[avoid linking multiple front-ends at once to avoid thrashing\n+\t\t on the build machine])],\n+      do_link_mutex=$enableval,\n+      do_link_mutex=no)\n+AC_MSG_RESULT($do_link_mutex)\n+\n+if test \"$do_link_mutex\" = \"yes\"; then\n+   DO_LINK_MUTEX=true\n+else\n+   DO_LINK_MUTEX=false\n+fi\n+AC_SUBST(DO_LINK_MUTEX)\n+\n # --------------\n # Language hooks\n # --------------"}, {"sha": "a398050745e8e436a8395c379d763ce4d9060b9f", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/427b248dd0460725a3d6b266fde176420da3103b/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/427b248dd0460725a3d6b266fde176420da3103b/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=427b248dd0460725a3d6b266fde176420da3103b", "patch": "@@ -1,5 +1,7 @@\n 2013-05-16  Jason Merrill  <jason@redhat.com>\n \n+\t* Make-lang.in (cc1plus$(exeext)): Use link mutex.\n+\n \tPR c++/57279\n \t* decl.c (grokdeclarator): Allow member function qualifiers in\n \tTYPENAME context in C++11 mode."}, {"sha": "df8ed3ee0d9de7ff94b18b21c753d342d739a859", "filename": "gcc/cp/Make-lang.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/427b248dd0460725a3d6b266fde176420da3103b/gcc%2Fcp%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/427b248dd0460725a3d6b266fde176420da3103b/gcc%2Fcp%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FMake-lang.in?ref=427b248dd0460725a3d6b266fde176420da3103b", "patch": "@@ -100,7 +100,7 @@ cc1plus-checksum.c : build/genchecksum$(build_exeext) checksum-options \\\n cc1plus-checksum.o : cc1plus-checksum.c $(CONFIG_H) $(SYSTEM_H)\n \n cc1plus$(exeext): $(CXX_OBJS) cc1plus-checksum.o $(BACKEND) $(LIBDEPS)\n-\t+$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o $@ \\\n+\t+$(LLINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o $@ \\\n \t      $(CXX_OBJS) cc1plus-checksum.o $(BACKEND) $(LIBS) $(BACKENDLIBS)\n \n ifeq ($(ENABLE_MAINTAINER_RULES), true)"}, {"sha": "e05cbed9fea121d3f8a03786d1a6bf7afaa7e86d", "filename": "gcc/doc/install.texi", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/427b248dd0460725a3d6b266fde176420da3103b/gcc%2Fdoc%2Finstall.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/427b248dd0460725a3d6b266fde176420da3103b/gcc%2Fdoc%2Finstall.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finstall.texi?ref=427b248dd0460725a3d6b266fde176420da3103b", "patch": "@@ -1293,6 +1293,11 @@ opposite effect.  If neither option is specified, the configure script\n will try to guess whether the @code{.init_array} and\n @code{.fini_array} sections are supported and, if they are, use them.\n \n+@item --enable-link-mutex\n+When building GCC, use a mutex to avoid linking the compilers for\n+multiple languages at the same time, to avoid thrashing on build\n+systems with limited free memory.  The default is not to use such a mutex.\n+\n @item --enable-maintainer-mode\n The build rules that regenerate the Autoconf and Automake output files as\n well as the GCC master message catalog @file{gcc.pot} are normally"}, {"sha": "7ac54ca0e70bb9adaf52c726df1c27e4a8254a83", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/427b248dd0460725a3d6b266fde176420da3103b/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/427b248dd0460725a3d6b266fde176420da3103b/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=427b248dd0460725a3d6b266fde176420da3103b", "patch": "@@ -1,3 +1,7 @@\n+2013-05-16  Jason Merrill  <jason@redhat.com>\n+\n+\t* Make-lang.in (f951$(exeext)): Use link mutex.\n+\n 2013-05-05  Tobias Burnus  <burnus@net-b.de>\n \n \t* resolve.c (conformable_arrays): Avoid segfault"}, {"sha": "ee704233bba0781b3e85edfb07fb4d870678448b", "filename": "gcc/fortran/Make-lang.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/427b248dd0460725a3d6b266fde176420da3103b/gcc%2Ffortran%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/427b248dd0460725a3d6b266fde176420da3103b/gcc%2Ffortran%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FMake-lang.in?ref=427b248dd0460725a3d6b266fde176420da3103b", "patch": "@@ -98,7 +98,7 @@ gfortran-cross$(exeext): gfortran$(exeext)\n # The compiler itself is called f951.\n f951$(exeext): $(F95_OBJS) \\\n \t\t$(BACKEND) $(LIBDEPS) attribs.o\n-\t+$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o $@ \\\n+\t+$(LLINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o $@ \\\n \t\t$(F95_OBJS) $(BACKEND) $(ZLIB) $(LIBS) attribs.o \\\n \t\t$(BACKENDLIBS)\n "}, {"sha": "aadca50dd8a5d6c3bca765d369913a0f83d3e97f", "filename": "gcc/go/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/427b248dd0460725a3d6b266fde176420da3103b/gcc%2Fgo%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/427b248dd0460725a3d6b266fde176420da3103b/gcc%2Fgo%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2FChangeLog?ref=427b248dd0460725a3d6b266fde176420da3103b", "patch": "@@ -1,3 +1,7 @@\n+2013-05-16  Jason Merrill  <jason@redhat.com>\n+\n+\t* Make-lang.in (go1$(exeext)): Use link mutex.\n+\n 2013-01-16  Shenghou Ma  <minux.ma@gmail.com>\n \n \t* gospec.c: pass -u pthread_create to linker when static linking."}, {"sha": "5fe40835188fa856bdfc27e20b9bc029801f55e6", "filename": "gcc/go/Make-lang.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/427b248dd0460725a3d6b266fde176420da3103b/gcc%2Fgo%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/427b248dd0460725a3d6b266fde176420da3103b/gcc%2Fgo%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2FMake-lang.in?ref=427b248dd0460725a3d6b266fde176420da3103b", "patch": "@@ -76,7 +76,7 @@ GO_OBJS = \\\n \tgo/unsafe.o\n \n go1$(exeext): $(GO_OBJS) attribs.o $(BACKEND) $(LIBDEPS)\n-\t+$(CXX) $(ALL_CXXFLAGS) $(LDFLAGS) -o $@ \\\n+\t+$(LLINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o $@ \\\n \t      $(GO_OBJS) attribs.o $(BACKEND) $(LIBS) $(BACKENDLIBS)\n \n # Documentation."}, {"sha": "fef5819af275ac4000a1fd0e1d583c605d0c208d", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/427b248dd0460725a3d6b266fde176420da3103b/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/427b248dd0460725a3d6b266fde176420da3103b/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=427b248dd0460725a3d6b266fde176420da3103b", "patch": "@@ -1,3 +1,7 @@\n+2013-05-16  Jason Merrill  <jason@redhat.com>\n+\n+\t* Make-lang.in (jc1$(exeext)): Use link mutex.\n+\n 2013-05-06  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR libgcj/57074"}, {"sha": "8a6210fea3b5f9d2722498db522f3212be455724", "filename": "gcc/java/Make-lang.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/427b248dd0460725a3d6b266fde176420da3103b/gcc%2Fjava%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/427b248dd0460725a3d6b266fde176420da3103b/gcc%2Fjava%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FMake-lang.in?ref=427b248dd0460725a3d6b266fde176420da3103b", "patch": "@@ -99,7 +99,7 @@ jvspec.o-warn = -Wno-error\n \n jc1$(exeext): $(JAVA_OBJS) $(BACKEND) $(LIBDEPS) attribs.o\n \trm -f $@\n-\t+$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o $@ \\\n+\t+$(LLINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o $@ \\\n \t\t$(JAVA_OBJS) $(BACKEND) $(ZLIB) $(LIBICONV) $(LIBS) attribs.o $(BACKENDLIBS)\n \n jcf-dump$(exeext): $(JCFDUMP_OBJS) $(LIBDEPS)"}, {"sha": "abefa068a5506409b17271fff04db3409130007d", "filename": "gcc/lock-and-run.sh", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/427b248dd0460725a3d6b266fde176420da3103b/gcc%2Flock-and-run.sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/427b248dd0460725a3d6b266fde176420da3103b/gcc%2Flock-and-run.sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flock-and-run.sh?ref=427b248dd0460725a3d6b266fde176420da3103b", "patch": "@@ -0,0 +1,29 @@\n+#! /bin/sh\n+# Shell-based mutex using mkdir.\n+\n+lockdir=$1 prog=$2; shift 2 || exit 1\n+count=0\n+# Remember when we started trying to acquire the lock.\n+touch lock-stamp.$$\n+trap 'rm -r \"$lockdir\" lock-stamp.$$' 0\n+until mkdir \"$lockdir\" 2>/dev/null; do\n+    # Say something periodically so the user knows what's up.\n+    if [ `expr $count % 30` = 0 ]; then\n+\t# Reset if the lock has been renewed.\n+\tif [ -n \"`find \\\"$lockdir\\\" -newer lock-stamp.$$`\" ]; then\n+\t    touch lock-stamp.$$\n+\t    count=1\n+\t# Steal the lock after 5 minutes.\n+\telif [ $count = 300 ]; then\n+\t    echo removing stale $lockdir >&2\n+\t    rm -r \"$lockdir\"\n+\telse\n+\t    echo waiting to acquire $lockdir >&2\n+\tfi\n+    fi\n+    sleep 1\n+    count=`expr $count + 1`\n+done\n+echo $prog \"$@\"\n+$prog \"$@\"\n+# The trap runs on exit."}, {"sha": "965b555c92e6d1be97cfa73a7d9da281dbe368ce", "filename": "gcc/lto/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/427b248dd0460725a3d6b266fde176420da3103b/gcc%2Flto%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/427b248dd0460725a3d6b266fde176420da3103b/gcc%2Flto%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2FChangeLog?ref=427b248dd0460725a3d6b266fde176420da3103b", "patch": "@@ -1,3 +1,7 @@\n+2013-05-16  Jason Merrill  <jason@redhat.com>\n+\n+\t* Make-lang.in ($(LTO_EXE)): Use link mutex.\n+\n 2013-05-15  Martin Jambor  <mjambor@suse.cz>\n \n \t* lto-partition.c (lto_balanced_map): Print symbol order instead"}, {"sha": "22df32cde2e85b66512e0fe8539cb74c8b91a751", "filename": "gcc/lto/Make-lang.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/427b248dd0460725a3d6b266fde176420da3103b/gcc%2Flto%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/427b248dd0460725a3d6b266fde176420da3103b/gcc%2Flto%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2FMake-lang.in?ref=427b248dd0460725a3d6b266fde176420da3103b", "patch": "@@ -71,7 +71,7 @@ lto.stagefeedback:\n lto-warn = $(STRICT_WARN)\n \n $(LTO_EXE): $(LTO_OBJS) $(BACKEND) $(LIBDEPS)\n-\t+$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o $@ \\\n+\t+$(LLINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o $@ \\\n \t\t$(LTO_OBJS) $(BACKEND) $(BACKENDLIBS) $(LIBS)\n \n # Dependencies"}, {"sha": "d4ed4187abe8fa15590d3db4497b7bed160942a3", "filename": "gcc/objc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/427b248dd0460725a3d6b266fde176420da3103b/gcc%2Fobjc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/427b248dd0460725a3d6b266fde176420da3103b/gcc%2Fobjc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2FChangeLog?ref=427b248dd0460725a3d6b266fde176420da3103b", "patch": "@@ -1,3 +1,7 @@\n+2013-05-16  Jason Merrill  <jason@redhat.com>\n+\n+\t* Make-lang.in (cc1obj$(exeext)): Use link mutex.\n+\n 2012-11-20  Diego Novillo  <dnovillo@google.com>\n \n \t* objc-act.c: Replace all vec<T, A>() initializers with vNULL."}, {"sha": "f04d60686c81b0817c490eec473cd9e0f44244b1", "filename": "gcc/objc/Make-lang.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/427b248dd0460725a3d6b266fde176420da3103b/gcc%2Fobjc%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/427b248dd0460725a3d6b266fde176420da3103b/gcc%2Fobjc%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2FMake-lang.in?ref=427b248dd0460725a3d6b266fde176420da3103b", "patch": "@@ -68,7 +68,7 @@ cc1obj-checksum.c : build/genchecksum$(build_exeext) checksum-options \\\n cc1obj-checksum.o : cc1obj-checksum.c $(CONFIG_H) $(SYSTEM_H)\n \n cc1obj$(exeext): $(OBJC_OBJS) $(C_AND_OBJC_OBJS) cc1obj-checksum.o $(BACKEND) $(LIBDEPS)\n-\t+$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o $@ \\\n+\t+$(LLINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o $@ \\\n \t      $(OBJC_OBJS) $(C_AND_OBJC_OBJS) cc1obj-checksum.o \\\n \t      $(BACKEND) $(LIBS) $(BACKENDLIBS)\n "}, {"sha": "7369195624a9fa0b6e502747a43392437e82ae40", "filename": "gcc/objcp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/427b248dd0460725a3d6b266fde176420da3103b/gcc%2Fobjcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/427b248dd0460725a3d6b266fde176420da3103b/gcc%2Fobjcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjcp%2FChangeLog?ref=427b248dd0460725a3d6b266fde176420da3103b", "patch": "@@ -1,3 +1,7 @@\n+2013-05-16  Jason Merrill  <jason@redhat.com>\n+\n+\t* Make-lang.in (cc1objplus$(exeext)): Use link mutex.\n+\n 2012-06-02  Jason Merrill  <jason@redhat.com>\n \n \t* objcp-decl.c (objcp_start_struct): Adjust for change in"}, {"sha": "ec10fc890c293067cba1323679c5c9113cb73c6a", "filename": "gcc/objcp/Make-lang.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/427b248dd0460725a3d6b266fde176420da3103b/gcc%2Fobjcp%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/427b248dd0460725a3d6b266fde176420da3103b/gcc%2Fobjcp%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjcp%2FMake-lang.in?ref=427b248dd0460725a3d6b266fde176420da3103b", "patch": "@@ -72,7 +72,7 @@ cc1objplus-checksum.c : build/genchecksum$(build_exeext) checksum-options \\\n cc1objplus-checksum.o : cc1objplus-checksum.c $(CONFIG_H) $(SYSTEM_H)\n \n cc1objplus$(exeext): $(OBJCXX_OBJS) cc1objplus-checksum.o $(BACKEND) $(LIBDEPS)\n-\t+$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o $@ \\\n+\t+$(LLINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o $@ \\\n \t\t$(OBJCXX_OBJS) cc1objplus-checksum.o $(BACKEND) $(LIBS) $(BACKENDLIBS)\n \n # Objective C++ language specific files."}]}