{"sha": "12211b99febe9f34e1f82d4e85005c6afb670b9b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTIyMTFiOTlmZWJlOWYzNGUxZjgyZDRlODUwMDVjNmFmYjY3MGI5Yg==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2013-08-28T09:34:15Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2013-08-28T09:34:15Z"}, "message": "ChangeLog: Fix whitespace.\n\n\t* ChangeLog: Fix whitespace.\n\t* testsuite/ChangeLog: Ditto.\n\nFrom-SVN: r202048", "tree": {"sha": "9037394e76c8a1cd3f626efd263aa3a342d85c0e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9037394e76c8a1cd3f626efd263aa3a342d85c0e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/12211b99febe9f34e1f82d4e85005c6afb670b9b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12211b99febe9f34e1f82d4e85005c6afb670b9b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/12211b99febe9f34e1f82d4e85005c6afb670b9b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12211b99febe9f34e1f82d4e85005c6afb670b9b/comments", "author": null, "committer": null, "parents": [{"sha": "58085fae705ece5b4951c4b60a3aef7f1175aaf0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58085fae705ece5b4951c4b60a3aef7f1175aaf0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/58085fae705ece5b4951c4b60a3aef7f1175aaf0"}], "stats": {"total": 192, "additions": 92, "deletions": 100}, "files": [{"sha": "846878e5f3208ef765fc1a491ab9dc6ba0ed97b3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 70, "deletions": 78, "changes": 148, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12211b99febe9f34e1f82d4e85005c6afb670b9b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12211b99febe9f34e1f82d4e85005c6afb670b9b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=12211b99febe9f34e1f82d4e85005c6afb670b9b", "patch": "@@ -1,4 +1,4 @@\n-2013-08-26  Jan Hubicka  <jh@suse.cz>\n+2013-08-28  Jan Hubicka  <jh@suse.cz>\n \n \t* builtins.def (free): Declare leaf.\n \n@@ -16,8 +16,7 @@\n \t(ipa_get_jf_pass_through_type_preserved): New function.\n \t(ipa_get_jf_ancestor_agg_preserved): Fix comment typo.\n \t(ipa_get_jf_ancestor_type_preserved): New function.\n-\t* ipa-cp.c (ipa_get_jf_pass_through_result): Honor type_preserved\n-\tflag.\n+\t* ipa-cp.c (ipa_get_jf_pass_through_result): Honor type_preserved flag.\n \t(ipa_get_jf_ancestor_result): Likewise.\n \t(propagate_vals_accross_pass_through): Use\n \tipa_get_jf_pass_through_result to do all the value mappings.\n@@ -32,8 +31,7 @@\n \t(ipa_compute_jump_functions_for_edge): Likewise.\n \t(combine_known_type_and_ancestor_jfs): Honor type_preserved.\n \t(update_jump_functions_after_inlining): Update type_preserved.\n-\tExplicitely create jump functions when combining one with\n-\tpass_through.\n+\tExplicitely create jump functions when combining one with pass_through.\n \t(ipa_write_jump_function): Stream the type_preserved flags.\n \t(ipa_read_jump_function): Likewise.\n \n@@ -44,8 +42,7 @@\n \t* cfgloop.h (struct loop): Add safelen, force_vect, simduid.\n \t* function.h (struct function): Add has_force_vect_loops and\n \thas_simduid_loops.\n-\t* gimple-pretty-print.c (dump_gimple_omp_for): Handle\n-\tGF_OMP_FOR_KIND*.\n+\t* gimple-pretty-print.c (dump_gimple_omp_for): Handle GF_OMP_FOR_KIND*.\n \t* gimple.c (gimple_build_omp_critical): Add KIND argument and\n \thandle it.\n \t* gimple.def: Update CLAUSES comments.\n@@ -62,8 +59,7 @@\n \t(omp_firstprivatize_variable): Same.\n \t(omp_add_variable): Only use splay_tree_insert if lookup failed.\n \t(omp_notice_variable): Handle ORT_SIMD.\n-\t(omp_is_private): Add SIMD argument and handle it as well as\n-\tORT_SIMD.\n+\t(omp_is_private): Add SIMD argument and handle it as well as ORT_SIMD.\n \t(omp_check_private): Handle ORT_SIMD.\n \t(gimplify_scan_omp_clauses): Handle OMP_CLAUSE_LINEAR and\n \tOMP_CLAUSE_SAFELEN.\n@@ -102,9 +98,8 @@\n \t* tree-data-ref (get_references_in_stmt): Allow IFN_GOMP_SIMD_LANE\n \tin their own loops.\n \t* tree-flow.h (find_omp_clause): Remove prototype.\n-\t* tree-if-conv.c (main_tree_if_conversion): Run if doing if\n-\tconversion, forcing vectorization of the loop, or if\n-\tflag_tree_vectorize.\n+\t* tree-if-conv.c (main_tree_if_conversion): Run if doing if conversion,\n+\tforcing vectorization of the loop, or if flag_tree_vectorize.\n \t(gate_tree_if_conversion): Similarly.\n \t* tree-inline.c (remap_gimple_stmt): Pass for kind argument to\n \tgimple_build_omp_for.\n@@ -118,19 +113,16 @@\n \t* tree-ssa-ccp.c (likely_value): Handle IFN_GOMP_SIMD*.\n \t* tree-ssa-loop-ivcanon.c (tree_unroll_loops_completely_1): Do not\n \tunroll OMP_SIMD loops here.\n-\t* tree-ssa-loop.c (gate_tree_vectorize): Run if\n-\thas_force_vect_loops.\n+\t* tree-ssa-loop.c (gate_tree_vectorize): Run if has_force_vect_loops.\n \t* tree-vect-data-refs.c (vect_analyze_data_ref_dependence): Handle\n-\tloop->safelen\n+\tloop->safelen.\n \t(vect_analyze_data_refs): Handle simd loops.\n \t* tree-vect-loop.c (vectorizable_live_operation): Handle\n \tIFN_GOMP_SIMD*.\n-\t* tree-vect-stmts.c (vectorizable_call): Handle\n-\tIFN_GOMP_SIMD_LANE.\n+\t* tree-vect-stmts.c (vectorizable_call): Handle IFN_GOMP_SIMD_LANE.\n \t(vectorizable_store): Handle STMT_VINFO_SIMD_LANE_ACCESS_P.\n \t(vectorizable_load): Same.\n-\t* tree-vectorizer.c: Include hash-table.h and\n-\ttree-ssa-propagate.h.\n+\t* tree-vectorizer.c: Include hash-table.h and tree-ssa-propagate.h.\n \t(struct simduid_to_vf): New.\n \t(simduid_to_vf::hash): New.\n \t(simduid_to-vf::equal): New.\n@@ -152,9 +144,8 @@\n \t(walk_tree_1): Handle OMP_CLAUSE_UNIFORM, OMP_CLAUSE_SAFELEN,\n \tOMP_CLAUSE__SIMDUID_, OMP_CLAUSE_LINEAR.\n \t* tree.def (OMP_SIMD): New entry.\n-\t* tree.h (enum omp_clause_code): Add entries for\n-\tOMP_CLAUSE_LINEAR, OMP_CLAUSE_UNIFORM, OMP_CLAUSE_SAFELEN,\n-\tOMP_CLAUSE__SIMDUID_.\n+\t* tree.h (enum omp_clause_code): Add entries for OMP_CLAUSE_LINEAR,\n+\tOMP_CLAUSE_UNIFORM, OMP_CLAUSE_SAFELEN, OMP_CLAUSE__SIMDUID_.\n \t(OMP_CLAUSE_DECL): Adjust range for new clauses.\n \t(OMP_CLAUSE_LINEAR_NO_COPYIN): New.\n \t(OMP_CLAUSE_LINEAR_NO_COPYOUT): New.\n@@ -243,7 +234,8 @@\n \n 2013-08-26  Jan Hubicka  <jh@suse.cz>\n \n-\t* gimple-fold.c (gimple_get_virt_method_for_binfo): Use ctor_for_folding.\n+\t* gimple-fold.c (gimple_get_virt_method_for_binfo): Use\n+\tctor_for_folding.\n \n 2013-08-26  Jan Hubicka  <jh@suse.cz>\n \n@@ -272,8 +264,8 @@\n \n 2013-08-26  Jan Hubicka  <jh@suse.cz>\n \n-\t* cgraph.c (cgraph_speculative_call_info): Fix parameter order and formating;\n-\tadd sanity check.\n+\t* cgraph.c (cgraph_speculative_call_info): Fix parameter order and\n+\tformating; add sanity check.\n \t(cgraph_resolve_speculation): Add FIXME about scaling profiles.\n \t(cgraph_redirect_edge_call_stmt_to_callee): Fix ICE in debug dump.\n \t* ipa-inline.c (heap_edge_removal_hook): Reset node growth cache.\n@@ -778,7 +770,7 @@\n \t* config/i386/linux-common.h: Likewise.\n \t* config/mips/linux-common.h: Likewise.\n \n-2013-08-20  Zhouyi Zhou <yizhouzhou@ict.ac.cn>\n+2013-08-20  Zhouyi Zhou  <yizhouzhou@ict.ac.cn>\n \n \t* tree-ssa-ccp.c (get_default_value): Remove redundant condition\n \tchecks.\n@@ -838,7 +830,7 @@\n \t* config/rs6000/rs6000.c (rs6000_emit_prologue): Correct ool_adjust.\n \t(rs6000_emit_epilogue): Likewise.\n \n-2013-08-19  Dehao Chen (dehao@google.com)\n+2013-08-19  Dehao Chen  <dehao@google.com>\n \n \t* value-prof.c (gimple_ic): Fix the bug of adding EH edge.\n \n@@ -1513,7 +1505,7 @@\n \t* config/i386/i386.c (ix86_option_override_internal):\n \tParsing -mtune-ctrl= option and set tune features.\n \n-2013-08-07  Oleg Endo <olegendo@gcc.gnu.org>\n+2013-08-07  Oleg Endo  <olegendo@gcc.gnu.org>\n \n \tPR other/12081\n \t* config/rs6000/rs6000.c (gen_2arg_fn_t): Remove typedef.\n@@ -1638,7 +1630,7 @@\n \t* gimple-ssa-strength-reduction.c (replace_ref): Make sure built\n \tMEM_REF has proper alignment information.\n \n-2013-08-05  Oleg Endo <olegendo@gcc.gnu.org>\n+2013-08-05  Oleg Endo  <olegendo@gcc.gnu.org>\n \n \tPR other/12081\n \t* recog.h (rtx (*insn_gen_fn) (rtx, ...)): Replace typedef with\tnew\n@@ -3815,7 +3807,7 @@\n \tshift_add/shift_sub0/shift_sub1 RTXs.\n \n 2013-07-24  Bill Schmidt  <wschmidt@linux.ibm.com>\n-\t    Anton Blanchard <anton@au1.ibm.com>\n+\t    Anton Blanchard  <anton@au1.ibm.com>\n \n \t* config/rs6000/altivec.md (altivec_vpkpx): Handle little endian.\n \t(altivec_vpks<VI_char>ss): Likewise.\n@@ -3845,15 +3837,15 @@\n \tdon't set a return register to need a non-exit mode.\n \n 2013-07-24  Bill Schmidt  <wschmidt@vnet.linux.ibm.com>\n-\t    Anton Blanchard <anton@au1.ibm.com>\n+\t    Anton Blanchard  <anton@au1.ibm.com>\n \n \t* config/rs6000/vector.md (vec_realign_load_<mode>): Reorder input\n \toperands to vperm for little endian.\n \t* config/rs6000/rs6000.c (rs6000_expand_builtin): Use lvsr instead\n \tof lvsl to create the control mask for a vperm for little endian.\n \n 2013-07-23  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n-\t    Anton Blanchard <anton@au1.ibm.com>\n+\t    Anton Blanchard  <anton@au1.ibm.com>\n \n \t* config/rs6000/rs6000.c (altivec_expand_vec_perm_const): Reverse\n \ttwo operands for little-endian.\n@@ -3864,7 +3856,7 @@\n \t(TARGET_CASE_VALUES_THRESHOLD): Define.\n \n 2013-07-23  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n-\t    Anton Blanchard <anton@au1.ibm.com>\n+\t    Anton Blanchard  <anton@au1.ibm.com>\n \n \t* config/rs6000/rs6000.c (altivec_expand_vec_perm_const): Correct\n \tselection of field for vector splat in little endian mode.\n@@ -3959,12 +3951,12 @@\n \t(eqv<mode>3_internal2): Likewise.\n \t(one_cmpl1<mode>3_internal): Likewise.\n \n-2013-07-23  David Holsgrove <david.holsgrove@xilinx.com>\n+2013-07-23  David Holsgrove  <david.holsgrove@xilinx.com>\n \n \t* config/microblaze/microblaze.c (microblaze_expand_prologue):\n \tRename flag_stack_usage to flag_stack_usage_info.\n \n-2013-07-23  David Holsgrove <david.holsgrove@xilinx.com>\n+2013-07-23  David Holsgrove  <david.holsgrove@xilinx.com>\n \n \t* config/microblaze/sync.md: New file.\n \t* config/microblaze/microblaze.md: Include sync.md\n@@ -4101,7 +4093,7 @@\n \t* config/avr/avr.md: Explain asm print modifier 'r' for REG.\n \n 2013-07-22  Bill Schmidt  <wschmidt@vnet.linux.ibm.com>\n-\t    Anton Blanchard <anton@au1.ibm.com>\n+\t    Anton Blanchard  <anton@au1.ibm.com>\n \n \t* config/rs6000/rs6000.c (rs6000_expand_vector_init): Fix\n \tendianness when selecting field to splat.\n@@ -4384,12 +4376,12 @@\n \t(avr_out_round): New function.\n \t(avr_adjust_insn_length): Handle ADJUST_LEN_ROUND.\n \n-2013-07-18  David Holsgrove <david.holsgrove@xilinx.com>\n+2013-07-18  David Holsgrove  <david.holsgrove@xilinx.com>\n \n \t* config/microblaze/microblaze.c (microblaze_expand_prologue):\n \tAdd check for flag_stack_usage to handle -fstack-usage support\n \n-2013-07-18  Pat Haugen <pthaugen@us.ibm.com>\n+2013-07-18  Pat Haugen  <pthaugen@us.ibm.com>\n \n \t* config/rs6000/rs6000.c (rs6000_option_override_internal): Adjust flag\n \tinteraction for new Power8 flags and VSX.\n@@ -5554,7 +5546,7 @@\n \t* config/i386/i386.c (enum ix86_builtins, bdesc_args): Remove\n \tIX86_BUILTIN_CMPNGTSS and IX86_BUILTIN_CMPNGESS.\n \n-2013-06-27  Catherine Moore <clm@codesourcery.com>\n+2013-06-27  Catherine Moore  <clm@codesourcery.com>\n \n \t* config/mips/mips-tables.opt: Regenerate.\n \t* config/mips/mips-cpus.def: Add m14ke and m14kec.\n@@ -5667,8 +5659,8 @@\n \t(TARGET_CAN_SPLIT_STACK, TARGET_THREAD_SPLIT_STACK_OFFSET): Undefine.\n \n 2013-06-26  Michael Meissner  <meissner@linux.vnet.ibm.com>\n-\t    Pat Haugen <pthaugen@us.ibm.com>\n-\t    Peter Bergner <bergner@vnet.ibm.com>\n+\t    Pat Haugen  <pthaugen@us.ibm.com>\n+\t    Peter Bergner  <bergner@vnet.ibm.com>\n \n \t* config/rs6000/power8.md: New.\n \t* config/rs6000/rs6000-cpus.def (RS6000_CPU table): Adjust processor\n@@ -5797,7 +5789,7 @@\n \t* common/config/i386/i386-common.c (ix86_handle_option): For OPT_mlzcnt\n \tadd missing return true.\n \n-2013-06-23  Oleg Endo <olegendo@gcc.gnu.org>\n+2013-06-23  Oleg Endo  <olegendo@gcc.gnu.org>\n \n \tPR target/52483\n \t* config/sh/predicates.md (general_extend_operand): Invoke\n@@ -5854,7 +5846,7 @@\n \t* doc/extend.texi: Use __atomic_store_n instead of\n \t__atomic_store in HLE example.\n \n-2013-06-22  Oleg Endo <olegendo@gcc.gnu.org>\n+2013-06-22  Oleg Endo  <olegendo@gcc.gnu.org>\n \n \t* config/sh/sh.c: Remove <cstdlib> workaround.\n \n@@ -5877,7 +5869,7 @@\n \t(get_binfo_at_offset): Use it.\n \t* tree.h (types_same_for_odr): Declare.\n \n-2013-06-20  Oleg Endo <olegendo@gcc.gnu.org>\n+2013-06-20  Oleg Endo  <olegendo@gcc.gnu.org>\n \t    Jason Merrill  <jason@redhat.com>\n \n \t* system.h: Include <cstdlib> as well as <stdlib.h>.\n@@ -5892,7 +5884,7 @@\n \n \t* lto-cgraph.c (input_symtab): Do not set cgraph state.\n \n-2013-06-20  Joern Rennecke <joern.rennecke@embecosm.com>\n+2013-06-20  Joern Rennecke  <joern.rennecke@embecosm.com>\n \n \tPR rtl-optimization/57425\n \tPR rtl-optimization/57569\n@@ -6370,7 +6362,7 @@\n \tLikewise.  Remove default with_tune setting.  Move default float\n \tsetting to its own block.  Handle with_llsc in the same block as above.\n \n-2013-06-16  Joern Rennecke <joern.rennecke@embecosm.com>\n+2013-06-16  Joern Rennecke  <joern.rennecke@embecosm.com>\n \n \tPR rtl-optimization/57425\n \tPR rtl-optimization/57569\n@@ -6406,7 +6398,7 @@\n \trs6000_output_move_128bit to handle emitting quad memory\n \toperations.  Set attribute length to 8 bytes.\n \n-2013-06-14  Vidya Praveen <vidyapraveen@arm.com>\n+2013-06-14  Vidya Praveen  <vidyapraveen@arm.com>\n \n \t* config/aarch64/aarch64-simd.md (aarch64_<su>mlal_lo<mode>):\n \tNew pattern.\n@@ -6475,8 +6467,8 @@\n \t* config/rs6000/spe.md (spe_abstf2_cmp, spe_abstf2_tst): Likewise.\n \n 2013-06-12  Michael Meissner  <meissner@linux.vnet.ibm.com>\n-\t    Pat Haugen <pthaugen@us.ibm.com>\n-\t    Peter Bergner <bergner@vnet.ibm.com>\n+\t    Pat Haugen  <pthaugen@us.ibm.com>\n+\t    Peter Bergner  <bergner@vnet.ibm.com>\n \n \t* config/rs6000/rs6000.c (emit_load_locked): Add support for\n \tpower8 byte, half-word, and quad-word atomic instructions.\n@@ -6563,7 +6555,7 @@\n \t* lto-symtab.c (lto_symtab_merge_symbols): Likewise.\n \t* cgraph.h (cgraph_state): Add CGRAPH_LTO_STREAMING.\n \n-2013-06-12  Roland Stigge <stigge@antcom.de>\n+2013-06-12  Roland Stigge  <stigge@antcom.de>\n \n \tPR target/57578\n \t* config/rs6000/t-linux (MULTIARCH_DIRNAME): Fix SPE version detection.\n@@ -6703,8 +6695,8 @@\n \tfor hash so that hash table traversal order is deterministic.\n \n 2013-06-10  Michael Meissner  <meissner@linux.vnet.ibm.com>\n-\t    Pat Haugen <pthaugen@us.ibm.com>\n-\t    Peter Bergner <bergner@vnet.ibm.com>\n+\t    Pat Haugen  <pthaugen@us.ibm.com>\n+\t    Peter Bergner  <bergner@vnet.ibm.com>\n \n \t* config/rs6000/vector.md (GPR move splitter): Do not split moves\n \tof vectors in GPRS if they are direct moves or quad word load or\n@@ -6932,8 +6924,8 @@\n \tTARGET_VALID_POINTER_MODE.\n \n 2013-06-06  Michael Meissner  <meissner@linux.vnet.ibm.com>\n-\t    Pat Haugen <pthaugen@us.ibm.com>\n-\t    Peter Bergner <bergner@vnet.ibm.com>\n+\t    Pat Haugen  <pthaugen@us.ibm.com>\n+\t    Peter Bergner  <bergner@vnet.ibm.com>\n \n \t* doc/extend.texi (PowerPC AltiVec/VSX Built-in Functions):\n \tDocument new power8 builtins.\n@@ -7684,7 +7676,7 @@\n \t* config/aarch64/aarch64.md (insv<mode>): New define_expand.\n \t(*insv_reg<mode>): New define_insn.\n \n-2013-05-30  Joern Rennecke <joern.rennecke@embecosm.com>\n+2013-05-30  Joern Rennecke  <joern.rennecke@embecosm.com>\n \n \tPR rtl-optimization/57439\n \t* postreload.c (move2add_valid_value_p): Check that we have\n@@ -7777,8 +7769,8 @@\n \tfunctions are not yet marked as defined.\n \n 2013-05-29  Michael Meissner  <meissner@linux.vnet.ibm.com>\n-\t    Pat Haugen <pthaugen@us.ibm.com>\n-\t    Peter Bergner <bergner@vnet.ibm.com>\n+\t    Pat Haugen  <pthaugen@us.ibm.com>\n+\t    Peter Bergner  <bergner@vnet.ibm.com>\n \n \t* config/rs6000/vector.md (VEC_I): Add support for new power8 V2DI\n \tinstructions.\n@@ -8094,7 +8086,7 @@\n \t(MULTILIB_DIRNAMES): Ditto.\n \t(MULTILIB_EXCEPTIONS): Add new exceptions.\n \n-2012-05-29  Chris Schlumberger-Socha <chris.schlumberger-socha@arm.com>\n+2012-05-29  Chris Schlumberger-Socha  <chris.schlumberger-socha@arm.com>\n \t    Marcus Shawcroft  <marcus.shawcroft@arm.com>\n \n \t* config/aarch64/aarch64-protos.h (aarch64_symbol_type): Define\n@@ -8107,7 +8099,7 @@\n \tPermit SYMBOL_TINY_ABSOLUTE.\n \t* config/aarch64/predicates.md (aarch64_mov_operand): Permit CONST.\n \n-2013-05-29  Chris Schlumberger-Socha <chris.schlumberger-socha@arm.com>\n+2013-05-29  Chris Schlumberger-Socha  <chris.schlumberger-socha@arm.com>\n \t    Marcus Shawcroft  <marcus.shawcroft@arm.com>\n \n \t* config/aarch64/aarch64.c (aarch64_classify_symbol): Remove comment.\n@@ -8157,7 +8149,7 @@\n \t* builtin-types.def: Define BT_FN_INT_PTR_PTR_PTR.\n \t* cilkplus.def: New file.\n \n-2013-05-28  Joern Rennecke <joern.rennecke@embecosm.com>\n+2013-05-28  Joern Rennecke  <joern.rennecke@embecosm.com>\n \n \tPR rtl-optimization/57439\n \t* postreload.c (move2add_use_add2_insn): Use gen_lowpart_common.\n@@ -8241,7 +8233,7 @@\n \t(set_ssa_val_to): Compare addresses using\n \tget_addr_base_and_unit_offset.\n \n-2013-05-27  Joern Rennecke <joern.rennecke@embecosm.com>\n+2013-05-27  Joern Rennecke  <joern.rennecke@embecosm.com>\n \n \tPR rtl-optimization/56833\n \t* postreload.c (move2add_record_mode): New function.\n@@ -8407,22 +8399,22 @@\n \tPR debug/57351\n \t* config/arm/arm.c (arm_dwarf_register_span): Do not use dbx number.\n \n-2013-05-23  Chris Schlumberger-Socha <chris.schlumberger-socha@arm.com>\n+2013-05-23  Chris Schlumberger-Socha  <chris.schlumberger-socha@arm.com>\n \t    Marcus Shawcroft  <marcus.shawcroft@arm.com>\n \n \t* config/aarch64/aarch64.md (*movdi_aarch64): Replace Usa with S.\n \t* config/aarch64/constraints.md (Usa): Remove.\n \t* doc/md.texi (AArch64 Usa): Remove.\n \n-2013-05-23  Chris Schlumberger-Socha <chris.schlumberger-socha@arm.com>\n+2013-05-23  Chris Schlumberger-Socha  <chris.schlumberger-socha@arm.com>\n \t    Marcus Shawcroft  <marcus.shawcroft@arm.com>\n \n \t* config/aarch64/aarch64-protos.h (aarch64_mov_operand_p): Define.\n \t* config/aarch64/aarch64.c (aarch64_mov_operand_p): Define.\n \t* config/aarch64/predicates.md (aarch64_const_address): Remove.\n \t(aarch64_mov_operand): Use aarch64_mov_operand_p.\n \n-2013-05-23  Vidya Praveen <vidyapraveen@arm.com>\n+2013-05-23  Vidya Praveen  <vidyapraveen@arm.com>\n \n \t* config/aarch64/aarch64-simd.md (clzv4si2): Support for CLZ\n \tinstruction (AdvSIMD).\n@@ -8477,8 +8469,8 @@\n \t(exec_threshold): Ditto.\n \n 2013-05-22  Michael Meissner  <meissner@linux.vnet.ibm.com>\n-\t    Pat Haugen <pthaugen@us.ibm.com>\n-\t    Peter Bergner <bergner@vnet.ibm.com>\n+\t    Pat Haugen  <pthaugen@us.ibm.com>\n+\t    Peter Bergner  <bergner@vnet.ibm.com>\n \n \t* doc/extend.texi (PowerPC AltiVec/VSX Built-in Functions): Add\n \tdocumentation for the power8 crypto builtins.\n@@ -8530,8 +8522,8 @@\n \tinstructions.\n \n 2013-05-22  Michael Meissner  <meissner@linux.vnet.ibm.com>\n-\t    Pat Haugen <pthaugen@us.ibm.com>\n-\t    Peter Bergner <bergner@vnet.ibm.com>\n+\t    Pat Haugen  <pthaugen@us.ibm.com>\n+\t    Peter Bergner  <bergner@vnet.ibm.com>\n \n \t* doc/invoke.texi (Option Summary): Add power8 options.\n \t(RS/6000 and PowerPC Options): Likewise.\n@@ -9291,7 +9283,7 @@\n \t* config/arm/arm.h (EPILOGUE_USES): Only return true\n \tfor LR_REGNUM after epilogue_completed.\n \n-2013-05-14  Joern Rennecke <joern.rennecke@embecosm.com>\n+2013-05-14  Joern Rennecke  <joern.rennecke@embecosm.com>\n \n \t* config/avr/avr.c (avr_encode_section_info): Bail out if the type\n \tis error_mark_node.\n@@ -10174,7 +10166,7 @@\n \t*vec_concatv2si_sse2 and vec_concatv2si_sse.\n \t(vec_concatv2di): Merge with *vec_concatv2di_rex64.\n \n-2013-05-03  Joern Rennecke <joern.rennecke@embecosm.com>\n+2013-05-03  Joern Rennecke  <joern.rennecke@embecosm.com>\n \n \tPR tree-optimization/57027\n \t* tree-ssa-math-opts.c (convert_mult_to_fma): When checking\n@@ -11541,7 +11533,7 @@\n \t(scev_analysis): Likewise.\n \n 2013-04-02  Catherine Moore  <clm@codesourcery.com>\n-\t    Chao-ying Fu <fu@mips.com>\n+\t    Chao-ying Fu  <fu@mips.com>\n \n \t* config/mips/micromips.md (jraddiusp): New pattern.\n \t* config/mips/mips.c (mips_expand_epilogue): Use the JRADDIUSP\n@@ -12456,15 +12448,15 @@\n \t(vect_get_constant_vectors): Handle mixed vect_external_def,\n \tvect_constant_def types.\n \n-2013-04-10  Joern Rennecke <joern.rennecke@embecosm.com>\n+2013-04-10  Joern Rennecke  <joern.rennecke@embecosm.com>\n \n \tPR tree-optimization/55524\n \t* tree-ssa-math-opts.c\n \t(convert_mult_to_fma): Don't use an fms construct\n \twhen we don't have an fms operation, but fnma, and it looks\n \tlikely that we'll be able to use the latter.\n \n-2013-04-10  Zhouyi Zhou <yizhouzhou@ict.ac.cn>\n+2013-04-10  Zhouyi Zhou  <yizhouzhou@ict.ac.cn>\n \n \t* cif-code.def (OVERWRITABLE): Correct the comment for overwritable\n \tfunction.\n@@ -12942,7 +12934,7 @@\n \t* basic-block.h (gcov_working_set_t): Moved to gcov-io.h.\n \t* gcov-dump.c (dump_working_sets): New function.\n \n-2013-04-03  Kenneth Zadeck <zadeck@naturalbridge.com>\n+2013-04-03  Kenneth Zadeck  <zadeck@naturalbridge.com>\n \n \t* hwint.c (sext_hwi, zext_hwi): New functions.\n \t* hwint.h (HOST_BITS_PER_HALF_WIDE_INT, HOST_HALF_WIDE_INT,\n@@ -14470,7 +14462,7 @@\n \t* params.def (PARAM_IPA_CP_ARRAY_INDEX_HINT_BONUS): New parameter.\n \t* ipa-cp.c (hint_time_bonus): Add abonus for known array indices.\n \n-2013-03-20  Pat Haugen <pthaugen@us.ibm.com>\n+2013-03-20  Pat Haugen  <pthaugen@us.ibm.com>\n \n \t* config/rs6000/predicates.md (indexed_address, update_address_mem\n \tupdate_indexed_address_mem): New predicates.\n@@ -14777,10 +14769,10 @@\n 2013-03-20  Catherine Moore  <clm@codesourcery.com>\n \t    Maciej W. Rozycki  <macro@codesourcery.com>\n \t    Tom de Vries  <tom@codesourcery.com>\n-\t    Nathan Sidwell <nathan@codesourcery.com>\n+\t    Nathan Sidwell  <nathan@codesourcery.com>\n \t    Iain Sandoe  <iain@codesourcery.com>\n \t    Nathan Froyd  <froydnj@codesourcery.com>\n-\t    Chao-ying Fu <fu@mips.com>\n+\t    Chao-ying Fu  <fu@mips.com>\n \n \t* doc/extend.texi: (micromips, nomicromips, nocompression):\n \tDocument new function attributes.\n@@ -14912,7 +14904,7 @@\n \tremap_gimple_op_r.\n \n 2013-03-20  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n-\t    Steven Bosscher <steven@gcc.gnu.org>\n+\t    Steven Bosscher  <steven@gcc.gnu.org>\n \n \tPR rtl-optimization/56605\n \t* loop-iv.c (implies_p): Handle equal RTXs and subregs."}, {"sha": "bca55c647d0b347ad942f08540a037d5807c7154", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 22, "deletions": 22, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12211b99febe9f34e1f82d4e85005c6afb670b9b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12211b99febe9f34e1f82d4e85005c6afb670b9b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=12211b99febe9f34e1f82d4e85005c6afb670b9b", "patch": "@@ -185,7 +185,7 @@\n \t* gcc.dg/pr58145-1.c: New test.\n \t* gcc.dg/pr58145-2.c: New test.\n \n-2013-08-14  Joern Rennecke <joern.rennecke@embecosm.com>\n+2013-08-14  Joern Rennecke  <joern.rennecke@embecosm.com>\n \n \t* gcc.dg/debug/dwarf2/dwarf2.exp: Replace -gdwarf-2 with -gdwarf.\n \t* gcc.dg/debug/dwarf2/dwarf-die7.c: Likewise.\n@@ -530,7 +530,7 @@\n \t* gcc.dg/ipa/pr57539.c: New test.\n \n 2013-08-06  Martin Jambor  <mjambor@suse.cz>\n-\t    Bernd Edlinger <bernd.edlinger@hotmail.de>\n+\t    Bernd Edlinger  <bernd.edlinger@hotmail.de>\n \n \t* gcc.dg/torture/pr58041.c (foo): Accept z by reference.\n \t(a): Fix constructor.\n@@ -994,7 +994,7 @@\n \n \t* gcc.target/aarch64/vabs_intrinsic_1.c: New file.\n \n-2013-07-20  Joern Rennecke <joern.rennecke@embecosm.com>\n+2013-07-20  Joern Rennecke  <joern.rennecke@embecosm.com>\n \n \t* gcc.dg/pr57154.c: Add dg-require-effective-target scheduling.\n \n@@ -1298,7 +1298,7 @@\n \tPR c++/14263\n \t* g++.dg/inherit/virtual10.C: New.\n \n-2013-07-04  Joern Rennecke <joern.rennecke@embecosm.com>\n+2013-07-04  Joern Rennecke  <joern.rennecke@embecosm.com>\n \n \tPR c/57821\n \t* gcc.dg/large-size-array-6.c: New test.\n@@ -1308,7 +1308,7 @@\n \tPR c++/38634\n \t* g++.dg/template/crash116.C: New.\n \n-2013-07-04  Joern Rennecke <joern.rennecke@embecosm.com>\n+2013-07-04  Joern Rennecke  <joern.rennecke@embecosm.com>\n \n \t* gcc.dg/tree-ssa/vrp66.c: Make conditional on { target { ! int16 } } .\n \t* gcc.dg/tree-ssa/vrp66-int16-sw.c: New test.\n@@ -1515,7 +1515,7 @@\n \n \t* g++.dg/cpp0x/sfinae47.C: New.\n \n-2013-06-23  Oleg Endo <olegendo@gcc.gnu.org>\n+2013-06-23  Oleg Endo  <olegendo@gcc.gnu.org>\n \n \tPR target/52483\n \t* gcc.target/sh/pr52483-1.c: New.\n@@ -1707,7 +1707,7 @@\n \t* c-c++-common/cilk-plus/AN/if_test.c (main2): Fixed a bug of\n \taccidentally placing minus sign for length instead of stride.\n \n-2013-06-16  Joern Rennecke <joern.rennecke@embecosm.com>\n+2013-06-16  Joern Rennecke  <joern.rennecke@embecosm.com>\n \n \tPR rtl-optimization/57425\n \tPR rtl-optimization/57569\n@@ -1751,7 +1751,7 @@\n \tPR c++/51413\n \t* g++.dg/ext/builtin-offsetof1.C: New.\n \n-2013-06-14  Vidya Praveen <vidyapraveen@arm.com>\n+2013-06-14  Vidya Praveen  <vidyapraveen@arm.com>\n \n \t* gcc.target/aarch64/vect_smlal_1.c: New file.\n \n@@ -1790,8 +1790,8 @@\n \t* gcc.dg/tree-ssa/forwprop-27.c: New testcase.\n \n 2013-06-12  Michael Meissner  <meissner@linux.vnet.ibm.com>\n-\t    Pat Haugen <pthaugen@us.ibm.com>\n-\t    Peter Bergner <bergner@vnet.ibm.com>\n+\t    Pat Haugen  <pthaugen@us.ibm.com>\n+\t    Peter Bergner  <bergner@vnet.ibm.com>\n \n \t* gcc.target/powerpc/atomic-p7.c: New file, add tests for atomic\n \tload/store instructions on power7, power8.\n@@ -1866,8 +1866,8 @@\n \tin how we check __sec_reduce_mutating function's result.\n \n 2013-06-10  Michael Meissner  <meissner@linux.vnet.ibm.com>\n-\t    Pat Haugen <pthaugen@us.ibm.com>\n-\t    Peter Bergner <bergner@vnet.ibm.com>\n+\t    Pat Haugen  <pthaugen@us.ibm.com>\n+\t    Peter Bergner  <bergner@vnet.ibm.com>\n \n \t* gcc.target/powerpc/direct-move-vint1.c: New tests for power8\n \tdirect move instructions.\n@@ -2048,8 +2048,8 @@\n \t* g++.dg/cpp0x/alias-decl-36.C: New.\n \n 2013-06-06  Michael Meissner  <meissner@linux.vnet.ibm.com>\n-\t    Pat Haugen <pthaugen@us.ibm.com>\n-\t    Peter Bergner <bergner@vnet.ibm.com>\n+\t    Pat Haugen  <pthaugen@us.ibm.com>\n+\t    Peter Bergner  <bergner@vnet.ibm.com>\n \n \t* gcc.target/powerpc/p8vector-builtin-1.c: New test to test\n \tpower8 builtin functions.\n@@ -2650,7 +2650,7 @@\n \tPR debug/57351\n \t* gcc.dg/debug/pr57351.c: New test\n \n-2013-05-23  Vidya Praveen <vidyapraveen@arm.com>\n+2013-05-23  Vidya Praveen  <vidyapraveen@arm.com>\n \n \t* gcc.target/aarch64/vect-clz.c: New file.\n \n@@ -2688,8 +2688,8 @@\n \t* g++.dg/parse/crash62.C: New.\n \n 2013-05-22  Michael Meissner  <meissner@linux.vnet.ibm.com>\n-\t    Pat Haugen <pthaugen@us.ibm.com>\n-\t    Peter Bergner <bergner@vnet.ibm.com>\n+\t    Pat Haugen  <pthaugen@us.ibm.com>\n+\t    Peter Bergner  <bergner@vnet.ibm.com>\n \n \t* gcc.target/powerpc/crypto-builtin-1.c: New file, test for power8\n \tcrypto builtins.\n@@ -2979,7 +2979,7 @@\n \t(alloca): Remove declaration.\n \t(foo9): Replace alloca by __builtin_alloca.\n \n-2013-05-14  Joern Rennecke <joern.rennecke@embecosm.com>\n+2013-05-14  Joern Rennecke  <joern.rennecke@embecosm.com>\n \n \t* gcc.c-torture/compile/limits-externdecl.c [target avr-*-*]:\n \tExpect \"size of array is too large\" error.\n@@ -3276,7 +3276,7 @@\n \n \t* gcc.target/i386/sse2-init-v2di-2.c: Update scan assembler string.\n \n-2013-05-03  Vidya Praveen <vidyapraveen@arm.com>\n+2013-05-03  Vidya Praveen  <vidyapraveen@arm.com>\n \n \t* gcc.target/aarch64/fabd.c: New file.\n \n@@ -3973,12 +3973,12 @@\n \n \t* gcc.dg/vect/slp-39.c: New testcase.\n \n-2013-04-10  Joern Rennecke <joern.rennecke@embecosm.com>\n+2013-04-10  Joern Rennecke  <joern.rennecke@embecosm.com>\n \n \tPR tree-optimization/55524\n \t* gcc.target/epiphany/fnma-1.c: New test.\n \n-2013-04-10  Zhouyi Zhou <yizhouzhou@ict.ac.cn>\n+2013-04-10  Zhouyi Zhou  <yizhouzhou@ict.ac.cn>\n \n \t* gcc.dg/tree-ssa/inline-11.c: New test\n \n@@ -4661,7 +4661,7 @@\n \t* gcc.dg/pr56355-1.c: New file.\n \n 2013-03-20  Catherine Moore  <clm@codesourcery.com>\n-\t    Richard Sandiford <rdsandiford@googlemail.com>\n+\t    Richard Sandiford  <rdsandiford@googlemail.com>\n \n \t* gcc.target/mips/mips.exp: Add microMIPS support.\n \t* gcc.target/mips/umips-movep-2.c: New test."}]}