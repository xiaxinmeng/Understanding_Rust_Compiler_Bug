{"sha": "70c532b51d855ebd95407556598797406ec4b417", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzBjNTMyYjUxZDg1NWViZDk1NDA3NTU2NTk4Nzk3NDA2ZWM0YjQxNw==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@markmitchell.com", "date": "1999-03-15T13:42:56Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "1999-03-15T13:42:56Z"}, "message": "decl.c (xref_basetypes): Set CLASSTYPE_VBASECLASSES here.\n\n\t* decl.c (xref_basetypes): Set CLASSTYPE_VBASECLASSES here.\n\t* tree.c (layout_basetypes): Not here.\n\t* search.c (dfs_search): Remove; no longer used.\n\nFrom-SVN: r25789", "tree": {"sha": "958400a8e462ad02a1dae62d01cd94176f1da764", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/958400a8e462ad02a1dae62d01cd94176f1da764"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/70c532b51d855ebd95407556598797406ec4b417", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70c532b51d855ebd95407556598797406ec4b417", "html_url": "https://github.com/Rust-GCC/gccrs/commit/70c532b51d855ebd95407556598797406ec4b417", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70c532b51d855ebd95407556598797406ec4b417/comments", "author": null, "committer": null, "parents": [{"sha": "c52016e41d746a0e01c304c3fdf3cab6746ded8f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c52016e41d746a0e01c304c3fdf3cab6746ded8f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c52016e41d746a0e01c304c3fdf3cab6746ded8f"}], "stats": {"total": 60, "additions": 22, "deletions": 38}, "files": [{"sha": "44fbf964dfbb2e45d445942adb856c9a8c2c7528", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70c532b51d855ebd95407556598797406ec4b417/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70c532b51d855ebd95407556598797406ec4b417/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=70c532b51d855ebd95407556598797406ec4b417", "patch": "@@ -1,3 +1,9 @@\n+1999-03-15  Mark Mitchell  <mark@markmitchell.com>\n+\n+\t* decl.c (xref_basetypes): Set CLASSTYPE_VBASECLASSES here.\n+\t* tree.c (layout_basetypes): Not here.\n+\t* search.c (dfs_search): Remove; no longer used.\n+\t\n 1999-03-12  Mark Mitchell  <mark@markmitchell.com>\n \n \t* decl2.c (validate_nonmember_using_decl): Issue sensible"}, {"sha": "88fec144656aa5a101ff9b7f4c77f7b295b6f784", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70c532b51d855ebd95407556598797406ec4b417/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70c532b51d855ebd95407556598797406ec4b417/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=70c532b51d855ebd95407556598797406ec4b417", "patch": "@@ -12536,6 +12536,10 @@ xref_basetypes (code_type_node, name, ref, binfo)\n     CLEAR_CLASSTYPE_MARKED (BINFO_TYPE (TREE_VEC_ELT (binfos, i)));\n   CLEAR_CLASSTYPE_MARKED (ref);\n \n+  /* Now that we know all the base-classes, set up the list of virtual\n+     bases.  */\n+  CLASSTYPE_VBASECLASSES (ref) = get_vbase_types (ref);\n+\n   pop_obstacks ();\n }\n   "}, {"sha": "0218b56827ddccdce62c04a96949ded0f6e7ada0", "filename": "gcc/cp/search.c", "status": "modified", "additions": 2, "deletions": 37, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70c532b51d855ebd95407556598797406ec4b417/gcc%2Fcp%2Fsearch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70c532b51d855ebd95407556598797406ec4b417/gcc%2Fcp%2Fsearch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsearch.c?ref=70c532b51d855ebd95407556598797406ec4b417", "patch": "@@ -2073,41 +2073,6 @@ convert_pointer_to_single_level (to_type, expr)\n \t\t\t   last, 1);\n }\n \n-/* Like dfs_walk, but only walk until fn returns something, and return\n-   that.  We also use the real vbase binfos instead of the placeholders\n-   in the normal binfo hierarchy.  START is the most-derived type for this\n-   hierarchy, so that we can find the vbase binfos.  */\n-\n-static tree\n-dfs_search (binfo, fn, start)\n-     tree binfo, start;\n-     tree (*fn) PROTO((tree));\n-{\n-  tree binfos = BINFO_BASETYPES (binfo);\n-  int i, n_baselinks = binfos ? TREE_VEC_LENGTH (binfos) : 0;\n-  tree retval;\n-\n-  for (i = 0; i < n_baselinks; i++)\n-    {\n-      tree base_binfo = TREE_VEC_ELT (binfos, i);\n-\n-      if (TREE_CODE (BINFO_TYPE (base_binfo)) == TEMPLATE_TYPE_PARM\n-\t  || TREE_CODE (BINFO_TYPE (base_binfo)) == TEMPLATE_TEMPLATE_PARM)\n-\t/* Pass */;\n-      else\n-\t{\n-\t  if (TREE_VIA_VIRTUAL (base_binfo) && start)\n-\t    base_binfo = binfo_member (BINFO_TYPE (base_binfo),\n-\t\t\t\t       CLASSTYPE_VBASECLASSES (start));\n-\t  retval = dfs_search (base_binfo, fn, start);\n-\t  if (retval)\n-\t    return retval;\n-\t}\n-    }\n-\n-  return fn (binfo);\n-}\n-\n tree markedp (binfo, data) \n      tree binfo;\n      void *data ATTRIBUTE_UNUSED;\n@@ -3436,8 +3401,8 @@ dfs_bfv_queue_p (binfo, data)\n   return binfo;\n }\n \n-/* Passed to dfs_search by binfo_for_vtable; determine if bvtable comes\n-   from BINFO.  */\n+/* Passed to dfs_walk_real by binfo_for_vtable; determine if bvtable\n+   comes from BINFO.  */\n \n static tree\n dfs_bfv_helper (binfo, data)"}, {"sha": "126669f3e81b90162fb4627a0dafaf0795db3b5d", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70c532b51d855ebd95407556598797406ec4b417/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70c532b51d855ebd95407556598797406ec4b417/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=70c532b51d855ebd95407556598797406ec4b417", "patch": "@@ -640,7 +640,7 @@ layout_basetypes (rec, max)\n      TREE_VALUE slot holds the virtual baseclass type.  Note that\n      get_vbase_types makes copies of the virtual base BINFOs, so that\n      the vbase_types are unshared.  */\n-  CLASSTYPE_VBASECLASSES (rec) = vbase_types = get_vbase_types (rec);\n+  vbase_types = CLASSTYPE_VBASECLASSES (rec);\n \n   my_friendly_assert (TREE_CODE (TYPE_SIZE (rec)) == INTEGER_CST, 19970302);\n   const_size = TREE_INT_CST_LOW (TYPE_SIZE (rec));"}, {"sha": "250040071d2028c256483b2f53bf64305380c807", "filename": "gcc/testsuite/g++.old-deja/g++.other/lookup9.C", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70c532b51d855ebd95407556598797406ec4b417/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Flookup9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70c532b51d855ebd95407556598797406ec4b417/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Flookup9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Flookup9.C?ref=70c532b51d855ebd95407556598797406ec4b417", "patch": "@@ -0,0 +1,9 @@\n+// Build don't link:\n+\n+struct S {\n+  typedef long I;\n+};\n+\n+struct D : virtual public S {\n+  I i;\n+};"}]}