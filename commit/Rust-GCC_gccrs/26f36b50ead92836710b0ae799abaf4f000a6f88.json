{"sha": "26f36b50ead92836710b0ae799abaf4f000a6f88", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjZmMzZiNTBlYWQ5MjgzNjcxMGIwYWU3OTlhYmFmNGYwMDBhNmY4OA==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2019-05-10T06:32:31Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2019-05-10T06:32:31Z"}, "message": "Add params for jump-table expansion params (PR middle-end/90340).\n\n2019-05-10  Martin Liska  <mliska@suse.cz>\n\n\tPR middle-end/90340\n\t* doc/invoke.texi: New params.\n\t* params.def (PARAM_JUMP_TABLE_MAX_GROWTH_RATIO_FOR_SIZE): New.\n\t(PARAM_JUMP_TABLE_MAX_GROWTH_RATIO_FOR_SPEED): Likewise.\n\t* tree-switch-conversion.c (jump_table_cluster::can_be_handled):\n\tUse it.\n\t* tree-switch-conversion.h (struct jump_table_cluster):\n\tLikewise.\n2019-05-10  Martin Liska  <mliska@suse.cz>\n\n\tPR middle-end/90340\n\t* gcc.dg/tree-ssa/pr90340-2.c: New test.\n\t* gcc.dg/tree-ssa/pr90340.c: New test.\n\nFrom-SVN: r271053", "tree": {"sha": "ebe4443deb58864102d8c91e8577eabf00b2fdd5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ebe4443deb58864102d8c91e8577eabf00b2fdd5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/26f36b50ead92836710b0ae799abaf4f000a6f88", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26f36b50ead92836710b0ae799abaf4f000a6f88", "html_url": "https://github.com/Rust-GCC/gccrs/commit/26f36b50ead92836710b0ae799abaf4f000a6f88", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26f36b50ead92836710b0ae799abaf4f000a6f88/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "38613b9baa4237c8b730a63742ba606cb97f6a9f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38613b9baa4237c8b730a63742ba606cb97f6a9f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/38613b9baa4237c8b730a63742ba606cb97f6a9f"}], "stats": {"total": 120, "additions": 107, "deletions": 13}, "files": [{"sha": "3c2c13d48301f6dc763bf7d326238b099ff9af91", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26f36b50ead92836710b0ae799abaf4f000a6f88/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26f36b50ead92836710b0ae799abaf4f000a6f88/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=26f36b50ead92836710b0ae799abaf4f000a6f88", "patch": "@@ -1,3 +1,14 @@\n+2019-05-10  Martin Liska  <mliska@suse.cz>\n+\n+\tPR middle-end/90340\n+\t* doc/invoke.texi: New params.\n+\t* params.def (PARAM_JUMP_TABLE_MAX_GROWTH_RATIO_FOR_SIZE): New.\n+\t(PARAM_JUMP_TABLE_MAX_GROWTH_RATIO_FOR_SPEED): Likewise.\n+\t* tree-switch-conversion.c (jump_table_cluster::can_be_handled):\n+\tUse it.\n+\t* tree-switch-conversion.h (struct jump_table_cluster):\n+\tLikewise.\n+\n 2019-05-09  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \t* combine.c (combine_simplify_rtx): Don't make IF_THEN_ELSE RTL."}, {"sha": "5e3e8873d355b443a01fceb5c3df4cb98dd26d60", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26f36b50ead92836710b0ae799abaf4f000a6f88/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26f36b50ead92836710b0ae799abaf4f000a6f88/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=26f36b50ead92836710b0ae799abaf4f000a6f88", "patch": "@@ -11889,6 +11889,16 @@ The smallest number of different values for which it is best to use a\n jump-table instead of a tree of conditional branches.  If the value is\n 0, use the default for the machine.\n \n+@item jump-table-max-growth-ratio-for-size\n+The maximum code size growth ratio when expanding\n+into a jump table (in percent).  The parameter is used when\n+optimizing for size.\n+\n+@item jump-table-max-growth-ratio-for-speed\n+The maximum code size growth ratio when expanding\n+into a jump table (in percent).  The parameter is used when\n+optimizing for speed.\n+\n @item tree-reassoc-width\n Set the maximum number of instructions executed in parallel in\n reassociated tree. This parameter overrides target dependent"}, {"sha": "23b8743786c0e36f6c0ae67b32c00d967f38a86e", "filename": "gcc/params.def", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26f36b50ead92836710b0ae799abaf4f000a6f88/gcc%2Fparams.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26f36b50ead92836710b0ae799abaf4f000a6f88/gcc%2Fparams.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fparams.def?ref=26f36b50ead92836710b0ae799abaf4f000a6f88", "patch": "@@ -1175,6 +1175,20 @@ DEFPARAM (PARAM_CASE_VALUES_THRESHOLD,\n \t  \"if 0, use the default for the machine.\",\n           0, 0, 0)\n \n+DEFPARAM (PARAM_JUMP_TABLE_MAX_GROWTH_RATIO_FOR_SIZE,\n+\t  \"jump-table-max-growth-ratio-for-size\",\n+\t  \"The maximum code size growth ratio when expanding \"\n+\t  \"into a jump table (in percent).  The parameter is used when \"\n+\t  \"optimizing for size.\",\n+\t  300, 0, 0)\n+\n+DEFPARAM (PARAM_JUMP_TABLE_MAX_GROWTH_RATIO_FOR_SPEED,\n+\t  \"jump-table-max-growth-ratio-for-speed\",\n+\t  \"The maximum code size growth ratio when expanding \"\n+\t  \"into a jump table (in percent).  The parameter is used when \"\n+\t  \"optimizing for speed.\",\n+\t  800, 0, 0)\n+\n /* Data race flags for C++0x memory model compliance.  */\n DEFPARAM (PARAM_ALLOW_STORE_DATA_RACES,\n \t  \"allow-store-data-races\","}, {"sha": "24f09796e288340358afa4bcebd5922d0e366b8e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26f36b50ead92836710b0ae799abaf4f000a6f88/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26f36b50ead92836710b0ae799abaf4f000a6f88/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=26f36b50ead92836710b0ae799abaf4f000a6f88", "patch": "@@ -1,3 +1,9 @@\n+2019-05-10  Martin Liska  <mliska@suse.cz>\n+\n+\tPR middle-end/90340\n+\t* gcc.dg/tree-ssa/pr90340-2.c: New test.\n+\t* gcc.dg/tree-ssa/pr90340.c: New test.\n+\n 2019-05-09  Cherry Zhang  <cherryyz@google.com>\n \n \t* go.dg/mapstring.go: New test."}, {"sha": "21099821786d5f4e257649028122a662435ee831", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr90340-2.c", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26f36b50ead92836710b0ae799abaf4f000a6f88/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr90340-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26f36b50ead92836710b0ae799abaf4f000a6f88/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr90340-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr90340-2.c?ref=26f36b50ead92836710b0ae799abaf4f000a6f88", "patch": "@@ -0,0 +1,31 @@\n+/* { dg-do compile { target { { x86_64-*-* aarch64-*-* ia64-*-* powerpc64-*-* } && lp64 } } } */\n+/* { dg-options \"-Os --param jump-table-max-growth-ratio-for-size=200 -fdump-tree-switchlower1\" } */\n+\n+int a;\n+\n+int foo(char c) {\n+  switch (c) {\n+  case 'c':\n+    return a;\n+  case 's':\n+    return 3;\n+  case 'n':\n+    return 1;\n+  case '%':\n+    return -2;\n+  case 'o':\n+    return a + 2;\n+    break;\n+  case 'X':\n+  case 'x':\n+    return 2222;\n+  case 'd':\n+  case 'i':\n+  case 'u':\n+    return 3333;\n+  default:\n+    return 0;\n+  }\n+}\n+\n+/* { dg-final { scan-tree-dump \";; GIMPLE switch case clusters: 37 88 99 100 105 110 111 115 117 120\" \"switchlower1\" } } */"}, {"sha": "8f3b87c1916f5a75d2e83b694f1b4734dbd465ae", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr90340.c", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26f36b50ead92836710b0ae799abaf4f000a6f88/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr90340.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26f36b50ead92836710b0ae799abaf4f000a6f88/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr90340.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr90340.c?ref=26f36b50ead92836710b0ae799abaf4f000a6f88", "patch": "@@ -0,0 +1,31 @@\n+/* { dg-do compile { target { { x86_64-*-* aarch64-*-* ia64-*-* powerpc64-*-* } && lp64 } } } */\n+/* { dg-options \"-Os -fdump-tree-switchlower1\" } */\n+\n+int a;\n+\n+int foo(char c) {\n+  switch (c) {\n+  case 'c':\n+    return a;\n+  case 's':\n+    return 3;\n+  case 'n':\n+    return 1;\n+  case '%':\n+    return -2;\n+  case 'o':\n+    return a + 2;\n+    break;\n+  case 'X':\n+  case 'x':\n+    return 2222;\n+  case 'd':\n+  case 'i':\n+  case 'u':\n+    return 3333;\n+  default:\n+    return 0;\n+  }\n+}\n+\n+/* { dg-final { scan-tree-dump \";; GIMPLE switch case clusters: 37 88 JT:99-120\" \"switchlower1\" } } */"}, {"sha": "bedeb2fd86553349fc289a1f2d7512c7e3779be5", "filename": "gcc/tree-switch-conversion.c", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26f36b50ead92836710b0ae799abaf4f000a6f88/gcc%2Ftree-switch-conversion.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26f36b50ead92836710b0ae799abaf4f000a6f88/gcc%2Ftree-switch-conversion.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-switch-conversion.c?ref=26f36b50ead92836710b0ae799abaf4f000a6f88", "patch": "@@ -1268,7 +1268,9 @@ jump_table_cluster::can_be_handled (const vec<cluster *> &clusters,\n     return true;\n \n   unsigned HOST_WIDE_INT max_ratio\n-    = optimize_insn_for_size_p () ? max_ratio_for_size : max_ratio_for_speed;\n+    = (optimize_insn_for_size_p ()\n+       ? PARAM_VALUE (PARAM_JUMP_TABLE_MAX_GROWTH_RATIO_FOR_SIZE)\n+       : PARAM_VALUE (PARAM_JUMP_TABLE_MAX_GROWTH_RATIO_FOR_SPEED));\n   unsigned HOST_WIDE_INT range = get_range (clusters[start]->get_low (),\n \t\t\t\t\t    clusters[end]->get_high ());\n   /* Check overflow.  */\n@@ -1282,7 +1284,7 @@ jump_table_cluster::can_be_handled (const vec<cluster *> &clusters,\n       comparison_count += sc->m_range_p ? 2 : 1;\n     }\n \n-  return range <= max_ratio * comparison_count;\n+  return 100 * range <= max_ratio * comparison_count;\n }\n \n /* Return true if cluster starting at START and ending at END (inclusive)\n@@ -1299,11 +1301,6 @@ jump_table_cluster::is_beneficial (const vec<cluster *> &,\n   return end - start + 1 >= case_values_threshold ();\n }\n \n-/* Definition of jump_table_cluster constants.  */\n-\n-const unsigned HOST_WIDE_INT jump_table_cluster::max_ratio_for_size;\n-const unsigned HOST_WIDE_INT jump_table_cluster::max_ratio_for_speed;\n-\n /* Find bit tests of given CLUSTERS, where all members of the vector\n    are of type simple_cluster.  New clusters are returned.  */\n "}, {"sha": "a9a959c39dba5af1fd9a768164b3fc40aacc438a", "filename": "gcc/tree-switch-conversion.h", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26f36b50ead92836710b0ae799abaf4f000a6f88/gcc%2Ftree-switch-conversion.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26f36b50ead92836710b0ae799abaf4f000a6f88/gcc%2Ftree-switch-conversion.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-switch-conversion.h?ref=26f36b50ead92836710b0ae799abaf4f000a6f88", "patch": "@@ -269,12 +269,6 @@ struct jump_table_cluster: public group_cluster\n \n   /* Return whether jump table expansion is allowed.  */\n   static bool is_enabled (void);\n-\n-  /* Max growth ratio for code that is optimized for size.  */\n-  static const unsigned HOST_WIDE_INT max_ratio_for_size = 3;\n-\n-  /* Max growth ratio for code that is optimized for speed.  */\n-  static const unsigned HOST_WIDE_INT max_ratio_for_speed = 8;\n };\n \n /* A GIMPLE switch statement can be expanded to a short sequence of bit-wise"}]}