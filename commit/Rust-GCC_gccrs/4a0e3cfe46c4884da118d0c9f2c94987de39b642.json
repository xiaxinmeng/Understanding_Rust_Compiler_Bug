{"sha": "4a0e3cfe46c4884da118d0c9f2c94987de39b642", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGEwZTNjZmU0NmM0ODg0ZGExMThkMGM5ZjJjOTQ5ODdkZTM5YjY0Mg==", "commit": {"author": {"name": "Georg-Johann Lay", "email": "avr@gjlay.de", "date": "2013-02-28T09:00:25Z"}, "committer": {"name": "Georg-Johann Lay", "email": "gjl@gcc.gnu.org", "date": "2013-02-28T09:00:25Z"}, "message": "avr.h (device_to_arch): Rename to device_to_ld.\n\n\t* config/avr/avr.h (device_to_arch): Rename to device_to_ld.\n\t(avr_device_to_arch): Rename to avr_device_to_ld.\n\t(avr_device_to_as): New prototype.\n\t(EXTRA_SPEC_FUNCTIONS): Add device_to_as.\n\t(ASM_SPEC): Use device_to_as to get -mmcu= and -mno-skip-bug=.\n\t* config/avr/driver-avr.c (avr_device_to_as): New.\n\t(avr_device_to_arch): Rename to avr_device_to_ld.\n\nFrom-SVN: r196330", "tree": {"sha": "9347de85a8e37b51437f88b609b684b0083d5469", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9347de85a8e37b51437f88b609b684b0083d5469"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4a0e3cfe46c4884da118d0c9f2c94987de39b642", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a0e3cfe46c4884da118d0c9f2c94987de39b642", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a0e3cfe46c4884da118d0c9f2c94987de39b642", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a0e3cfe46c4884da118d0c9f2c94987de39b642/comments", "author": null, "committer": {"login": "sprintersb", "id": 8905355, "node_id": "MDQ6VXNlcjg5MDUzNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/8905355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sprintersb", "html_url": "https://github.com/sprintersb", "followers_url": "https://api.github.com/users/sprintersb/followers", "following_url": "https://api.github.com/users/sprintersb/following{/other_user}", "gists_url": "https://api.github.com/users/sprintersb/gists{/gist_id}", "starred_url": "https://api.github.com/users/sprintersb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sprintersb/subscriptions", "organizations_url": "https://api.github.com/users/sprintersb/orgs", "repos_url": "https://api.github.com/users/sprintersb/repos", "events_url": "https://api.github.com/users/sprintersb/events{/privacy}", "received_events_url": "https://api.github.com/users/sprintersb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6166d4338031eb59d07ada087cd9c5c272f83bf0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6166d4338031eb59d07ada087cd9c5c272f83bf0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6166d4338031eb59d07ada087cd9c5c272f83bf0"}], "stats": {"total": 48, "additions": 35, "deletions": 13}, "files": [{"sha": "ea397c1c94117695b047f66395e76281f047f900", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a0e3cfe46c4884da118d0c9f2c94987de39b642/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a0e3cfe46c4884da118d0c9f2c94987de39b642/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4a0e3cfe46c4884da118d0c9f2c94987de39b642", "patch": "@@ -1,3 +1,13 @@\n+2013-02-28  Georg-Johann Lay  <avr@gjlay.de>\n+\n+\t* config/avr/avr.h (device_to_arch): Rename to device_to_ld.\n+\t(avr_device_to_arch): Rename to avr_device_to_ld.\n+\t(avr_device_to_as): New prototype.\n+\t(EXTRA_SPEC_FUNCTIONS): Add device_to_as.\n+\t(ASM_SPEC): Use device_to_as to get -mmcu= and -mno-skip-bug=.\n+\t* config/avr/driver-avr.c (avr_device_to_as): New.\n+\t(avr_device_to_arch): Rename to avr_device_to_ld.\n+\n 2013-02-27  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/56461"}, {"sha": "f223a6148ee17cccd9f124823ee299bd37ea5f5e", "filename": "gcc/config/avr/avr.h", "status": "modified", "additions": 7, "deletions": 10, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a0e3cfe46c4884da118d0c9f2c94987de39b642/gcc%2Fconfig%2Favr%2Favr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a0e3cfe46c4884da118d0c9f2c94987de39b642/gcc%2Fconfig%2Favr%2Favr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.h?ref=4a0e3cfe46c4884da118d0c9f2c94987de39b642", "patch": "@@ -486,14 +486,16 @@ typedef struct avr_args\n #define ADJUST_INSN_LENGTH(INSN, LENGTH)                \\\n     (LENGTH = avr_adjust_insn_length (INSN, LENGTH))\n \n-extern const char *avr_device_to_arch (int argc, const char **argv);\n+extern const char *avr_device_to_as (int argc, const char **argv);\n+extern const char *avr_device_to_ld (int argc, const char **argv);\n extern const char *avr_device_to_data_start (int argc, const char **argv);\n extern const char *avr_device_to_startfiles (int argc, const char **argv);\n extern const char *avr_device_to_devicelib (int argc, const char **argv);\n extern const char *avr_device_to_sp8 (int argc, const char **argv);\n \n #define EXTRA_SPEC_FUNCTIONS                            \\\n-  { \"device_to_arch\", avr_device_to_arch },             \\\n+  { \"device_to_as\", avr_device_to_as },                 \\\n+  { \"device_to_ld\", avr_device_to_ld },                 \\\n   { \"device_to_data_start\", avr_device_to_data_start }, \\\n   { \"device_to_startfile\", avr_device_to_startfiles },  \\\n   { \"device_to_devicelib\", avr_device_to_devicelib },   \\\n@@ -507,14 +509,9 @@ extern const char *avr_device_to_sp8 (int argc, const char **argv);\n #define CC1PLUS_SPEC \"%{!frtti:-fno-rtti} \\\n     %{!fenforce-eh-specs:-fno-enforce-eh-specs} \\\n     %{!fexceptions:-fno-exceptions}\"\n-/* A C string constant that tells the GCC driver program options to\n-   pass to `cc1plus'.  */\n-\n-#define ASM_SPEC \"%{mmcu=avr25:-mmcu=avr2;mmcu=avr35:-mmcu=avr3;mmcu=avr31:-mmcu=avr3;mmcu=avr51:-mmcu=avr5;\\\n-mmcu=*:-mmcu=%*} \\\n-%{mmcu=*:%{!mmcu=avr2:%{!mmcu=at90s8515:%{!mmcu=avr31:%{!mmcu=atmega103:\\\n--mno-skip-bug}}}}}\"\n \n+#define ASM_SPEC \"%:device_to_as(%{mmcu=*:%*}) \"\n+  \n #define LINK_SPEC \"\\\n %{mrelax:--relax\\\n          %{mpmem-wrap-around:%{mmcu=at90usb8*:--pmem-wrap-around=8k}\\\n@@ -524,7 +521,7 @@ mmcu=*:-mmcu=%*} \\\n                              %{mmcu=atmega64*|\\\n                                mmcu=at90can64*|\\\n                                mmcu=at90usb64*:--pmem-wrap-around=64k}}}\\\n-%:device_to_arch(%{mmcu=*:%*})\\\n+%:device_to_ld(%{mmcu=*:%*})\\\n %:device_to_data_start(%{mmcu=*:%*})\"\n \n #define LIB_SPEC \\"}, {"sha": "e859f5f65a562f28a37d90cd79cdfe1cf2bcb5dc", "filename": "gcc/config/avr/driver-avr.c", "status": "modified", "additions": 18, "deletions": 3, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a0e3cfe46c4884da118d0c9f2c94987de39b642/gcc%2Fconfig%2Favr%2Fdriver-avr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a0e3cfe46c4884da118d0c9f2c94987de39b642/gcc%2Fconfig%2Favr%2Fdriver-avr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Fdriver-avr.c?ref=4a0e3cfe46c4884da118d0c9f2c94987de39b642", "patch": "@@ -48,10 +48,25 @@ avr_set_current_device (const char *name)\n   avr_current_arch = &avr_arch_types[avr_current_device->arch];\n }\n \n-/* Returns command line parameters that describe the device architecture.  */\n+/* Returns command line parameters to pass to as.  */\n \n-const char *\n-avr_device_to_arch (int argc, const char **argv)\n+const char*\n+avr_device_to_as (int argc, const char **argv)\n+{\n+  if (0 == argc)\n+    return NULL;\n+\n+  avr_set_current_device (argv[0]);\n+\n+  return concat (\"-mmcu=\", avr_current_arch->arch_name,\n+                 avr_current_device->errata_skip ? \"\" : \" -mno-skip-bug\",\n+                 NULL);\n+}\n+\n+/* Returns command line parameters to pass to ld.  */\n+\n+const char*\n+avr_device_to_ld (int argc, const char **argv)\n {\n   if (0 == argc)\n     return NULL;"}]}