{"sha": "98de0da6035771b5fd9185f2a2c53dd65581b886", "node_id": "C_kwDOANBUbNoAKDk4ZGUwZGE2MDM1NzcxYjVmZDkxODVmMmEyYzUzZGQ2NTU4MWI4ODY", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-04-26T00:16:51Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-04-26T00:16:51Z"}, "message": "Daily bump.", "tree": {"sha": "eba734d6904ead14963b51d5ba1763fd9abaac02", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eba734d6904ead14963b51d5ba1763fd9abaac02"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/98de0da6035771b5fd9185f2a2c53dd65581b886", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98de0da6035771b5fd9185f2a2c53dd65581b886", "html_url": "https://github.com/Rust-GCC/gccrs/commit/98de0da6035771b5fd9185f2a2c53dd65581b886", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98de0da6035771b5fd9185f2a2c53dd65581b886/comments", "author": null, "committer": null, "parents": [{"sha": "6ad3ca0077ec0d5f740cef5fdb743ffb61575941", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ad3ca0077ec0d5f740cef5fdb743ffb61575941", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ad3ca0077ec0d5f740cef5fdb743ffb61575941"}], "stats": {"total": 197, "additions": 196, "deletions": 1}, "files": [{"sha": "c35edcc0e448e8bba19923a3b3ffaa82e7b34979", "filename": "contrib/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98de0da6035771b5fd9185f2a2c53dd65581b886/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98de0da6035771b5fd9185f2a2c53dd65581b886/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=98de0da6035771b5fd9185f2a2c53dd65581b886", "patch": "@@ -1,3 +1,13 @@\n+2022-04-25  Martin Liska  <mliska@suse.cz>\n+\n+\t* filter-clang-warnings.py: Filter out\n+\t-Wc++20-attribute-extensions in lex.cc.\n+\n+2022-04-25  Martin Liska  <mliska@suse.cz>\n+\n+\t* filter-clang-warnings.py: Filter out\n+\t-Wbitwise-instead-of-logical.\n+\n 2022-04-04  Martin Liska  <mliska@suse.cz>\n \n \t* gcc-changelog/git_update_version.py: Ignore the revision."}, {"sha": "f0ff48e6c10d9b8715b007a37bb3606ed7dd81be", "filename": "gcc/ChangeLog", "status": "modified", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98de0da6035771b5fd9185f2a2c53dd65581b886/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98de0da6035771b5fd9185f2a2c53dd65581b886/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=98de0da6035771b5fd9185f2a2c53dd65581b886", "patch": "@@ -1,3 +1,72 @@\n+2022-04-25  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/104308\n+\t* gimple-fold.cc (gimple_fold_builtin_memory_op): Explicitly set\n+\tthe location of new_stmt in all places that don't already set it,\n+\twhether explicitly, or via a call to gsi_replace.\n+\n+2022-04-25  Paul A. Clarke  <pc@us.ibm.com>\n+\n+\t* doc/extend.texi (Other Builtins): Correct reference to 'modff'.\n+\n+2022-04-25  Andrew MacLeod  <amacleod@redhat.com>\n+\n+\tPR tree-optimization/105276\n+\t* gimple-range.cc (gimple_ranger::prefill_stmt_dependencies): Include\n+\texisting global range with calculated value.\n+\n+2022-04-25  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/105368\n+\t* tree-ssa-math-opts.cc (powi_cost): Use absu_hwi.\n+\n+2022-04-25  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/100810\n+\t* tree-ssa-loop-ivopts.cc (struct iv_cand): Add involves_undefs flag.\n+\t(find_ssa_undef): New function.\n+\t(add_candidate_1): Avoid adding derived candidates with\n+\tundefined SSA names and mark the original ones.\n+\t(determine_group_iv_cost_generic): Reject rewriting\n+\tuses with a different IV when that involves undefined SSA names.\n+\n+2022-04-25  Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\tPR target/89125\n+\t* config/freebsd.h: Define TARGET_LIBC_HAS_FUNCTION to be\n+\tbsd_libc_has_function.\n+\t* targhooks.cc (bsd_libc_has_function): New function.\n+\tExpand the supported math functions to inclue C99 libm.\n+\t* targhooks.h (bsd_libc_has_function): New Prototype.\n+\n+2022-04-25  Richard Biener  <rguenther@suse.de>\n+\n+\tPR rtl-optimization/105231\n+\t* combine.cc (distribute_notes): Assert that a REG_EH_REGION\n+\twith landing pad > 0 is from i3.  Put any REG_EH_REGION note\n+\ton i3 or drop it if the insn can not trap.\n+\t(try_combine): Ensure that we can merge REG_EH_REGION notes\n+\twith non-call exceptions.  Ensure we are not splitting a\n+\ttrapping part of an insn with non-call exceptions when there\n+\tis any REG_EH_REGION note to preserve.\n+\n+2022-04-25  Hongyu Wang  <hongyu.wang@intel.com>\n+\n+\tPR target/105339\n+\t* config/i386/avx512fintrin.h (_mm512_scalef_round_pd):\n+\tAdd parentheses for parameters and djust format.\n+\t(_mm512_mask_scalef_round_pd): Ditto.\n+\t(_mm512_maskz_scalef_round_pd): Ditto.\n+\t(_mm512_scalef_round_ps): Ditto.\n+\t(_mm512_mask_scalef_round_ps): Ditto.\n+\t(_mm512_maskz_scalef_round_ps): Ditto.\n+\t(_mm_scalef_round_sd): Use _mm_undefined_pd.\n+\t(_mm_scalef_round_ss): Use _mm_undefined_ps.\n+\t(_mm_mask_scalef_round_sd): New macro.\n+\t(_mm_mask_scalef_round_ss): Ditto.\n+\t(_mm_maskz_scalef_round_sd): Ditto.\n+\t(_mm_maskz_scalef_round_ss): Ditto.\n+\n 2022-04-23  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/105338"}, {"sha": "aaa2dfb2050bf9c27ce15bcac87b10203fc60e65", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98de0da6035771b5fd9185f2a2c53dd65581b886/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98de0da6035771b5fd9185f2a2c53dd65581b886/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=98de0da6035771b5fd9185f2a2c53dd65581b886", "patch": "@@ -1 +1 @@\n-20220425\n+20220426"}, {"sha": "9ab6169da2179be8eb15960de0045e012ff5312b", "filename": "gcc/analyzer/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98de0da6035771b5fd9185f2a2c53dd65581b886/gcc%2Fanalyzer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98de0da6035771b5fd9185f2a2c53dd65581b886/gcc%2Fanalyzer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2FChangeLog?ref=98de0da6035771b5fd9185f2a2c53dd65581b886", "patch": "@@ -1,3 +1,14 @@\n+2022-04-25  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/105365\n+\tPR analyzer/105366\n+\t* svalue.cc\n+\t(cmp_cst): Rename to...\n+\t(cmp_csts_same_type): ...this.  Convert all recursive calls to\n+\tcalls to...\n+\t(cmp_csts_and_types): ....this new function.\n+\t(svalue::cmp_ptr): Update for renaming of cmp_cst\n+\n 2022-04-14  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR analyzer/105264"}, {"sha": "e724f0db9da538925507f9fcc3604082bf634b5a", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98de0da6035771b5fd9185f2a2c53dd65581b886/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98de0da6035771b5fd9185f2a2c53dd65581b886/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=98de0da6035771b5fd9185f2a2c53dd65581b886", "patch": "@@ -1,3 +1,10 @@\n+2022-04-25  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/105353\n+\t* typeck.cc (build_x_shufflevector): Use\n+\tinstantiation_dependent_expression_p except for the first two\n+\targuments.\n+\n 2022-04-21  Marek Polacek  <polacek@redhat.com>\n \n \t* constexpr.cc (cxx_eval_logical_expression): Remove unused"}, {"sha": "8c66dff797a93d189b501cf694a5eac370a66982", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98de0da6035771b5fd9185f2a2c53dd65581b886/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98de0da6035771b5fd9185f2a2c53dd65581b886/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=98de0da6035771b5fd9185f2a2c53dd65581b886", "patch": "@@ -1,3 +1,10 @@\n+2022-04-25  Jakub Jelinek  <jakub@redhat.com>\n+\t    Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\tPR fortran/104717\n+\t* trans-openmp.cc (gfc_trans_oacc_construct): Wrap construct body\n+\tin an extra BIND_EXPR.\n+\n 2022-04-24  Mikael Morin  <mikael@gcc.gnu.org>\n \t    Jakub Jelinek  <jakub@redhat.com>\n "}, {"sha": "5040b3469f3053df9693da019ef10b8c1ab325eb", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98de0da6035771b5fd9185f2a2c53dd65581b886/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98de0da6035771b5fd9185f2a2c53dd65581b886/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=98de0da6035771b5fd9185f2a2c53dd65581b886", "patch": "@@ -1,3 +1,54 @@\n+2022-04-25  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/105365\n+\tPR analyzer/105366\n+\t* gcc.dg/analyzer/pr105365.c: New test.\n+\t* gcc.dg/analyzer/pr105366.c: New test.\n+\n+2022-04-25  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/104308\n+\t* gcc.dg/analyzer/pr104308.c: Add test coverage.\n+\n+2022-04-25  Jakub Jelinek  <jakub@redhat.com>\n+\t    Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\tPR fortran/104717\n+\t* gfortran.dg/goacc/pr104717.f90: New test.\n+\t* gfortran.dg/goacc/privatization-1-compute-loop.f90: Adjust.\n+\n+2022-04-25  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/105353\n+\t* g++.dg/ext/builtin-shufflevector-3.C: New test.\n+\n+2022-04-25  Andrew MacLeod  <amacleod@redhat.com>\n+\n+\tPR tree-optimization/105276\n+\t* g++.dg/pr105276.C: New.\n+\n+2022-04-25  Mikael Morin  <mikael@gcc.gnu.org>\n+\n+\tPR fortran/103662\n+\t* gfortran.dg/unlimited_polymorphic_3.f03: Force execution of\n+\tthe DSE optimization pass.\n+\n+2022-04-25  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/100810\n+\t* gcc.dg/torture/pr100810.c: New testcase.\n+\t* gcc.dg/torture/pr105337.c: Likewise.\n+\n+2022-04-25  Richard Biener  <rguenther@suse.de>\n+\n+\tPR rtl-optimization/105231\n+\t* gcc.dg/torture/pr105231.c: New testcase.\n+\n+2022-04-25  Hongyu Wang  <hongyu.wang@intel.com>\n+\n+\tPR target/105339\n+\t* gcc.target/i386/sse-14.c: Add tests for new macro.\n+\n 2022-04-24  Jeff Law  <jeffreyalaw@gmail.com>\n \n \t* gcc.dg/lto/pr94157_0.c: Also request executable stack from"}, {"sha": "d56f7015742887a73576d21a4869c2ae2054c5a8", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98de0da6035771b5fd9185f2a2c53dd65581b886/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98de0da6035771b5fd9185f2a2c53dd65581b886/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=98de0da6035771b5fd9185f2a2c53dd65581b886", "patch": "@@ -1,3 +1,9 @@\n+2022-04-25  Jakub Jelinek  <jakub@redhat.com>\n+\t    Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\tPR fortran/104717\n+\t* testsuite/libgomp.oacc-fortran/privatized-ref-2.f90: Adjust.\n+\n 2022-04-13  Jakub Jelinek  <jakub@redhat.com>\n \n \t* libgomp.texi: Fix a typo - mutexinouset -> mutexinoutset."}, {"sha": "b7841721e94bf6142a6b42e78cf0bc82ea6b8168", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98de0da6035771b5fd9185f2a2c53dd65581b886/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98de0da6035771b5fd9185f2a2c53dd65581b886/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=98de0da6035771b5fd9185f2a2c53dd65581b886", "patch": "@@ -1,3 +1,37 @@\n+2022-04-25  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/bits/ptr_traits.h (__cpp_lib_constexpr_memory): Define\n+\tconditionally.\n+\t* include/bits/unique_ptr.h (__cpp_lib_constexpr_memory):\n+\tDefine for C++23.\n+\t(default_delete, default_delete<T[]>, __uniq_ptr_impl)\n+\t(unique_ptr, unique_ptr<T[], D>): Add constexpr to all member\n+\tfunctions.\n+\t* include/std/version (__cpp_lib_constexpr_memory): Define new\n+\tvalue for C++23.\n+\t* testsuite/20_util/unique_ptr/assign/constexpr.cc: New test.\n+\t* testsuite/20_util/unique_ptr/comparison/constexpr.cc: New test.\n+\t* testsuite/20_util/unique_ptr/cons/constexpr_c++20.cc: New test.\n+\t* testsuite/20_util/unique_ptr/creation/constexpr.cc: New test.\n+\t* testsuite/20_util/unique_ptr/modifiers/constexpr.cc: New test.\n+\t* testsuite/20_util/unique_ptr/specialized_algorithms/constexpr.cc:\n+\tNew test.\n+\n+2022-04-25  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/105375\n+\t* include/std/future (packaged_task): Add deduction guides.\n+\t* testsuite/30_threads/packaged_task/cons/deduction.cc: New test.\n+\n+2022-04-25  Philipp Fent  <fent@in.tum.de>\n+\n+\t* python/libstdcxx/v6/printers.py (StdSpanPrinter._iterator):\n+\tRename as iterator.\n+\t(StdInitializerListPrinter): Define new printer.\n+\t(build_libstdcxx_dictionary): Register new printer.\n+\t* testsuite/libstdc++-prettyprinters/cxx11.cc: Check printer for\n+\tinitializer_list.\n+\n 2022-04-22  Thomas W Rodgers  <trodgers@redhat.com>\n \n \tPR libstdc++/102994"}]}