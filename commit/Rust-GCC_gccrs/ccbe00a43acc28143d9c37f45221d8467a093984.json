{"sha": "ccbe00a43acc28143d9c37f45221d8467a093984", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2NiZTAwYTQzYWNjMjgxNDNkOWMzN2Y0NTIyMWQ4NDY3YTA5Mzk4NA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2006-09-06T17:06:00Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2006-09-06T17:06:00Z"}, "message": "re PR c++/26696 (ICE with statement forming unused static member function reference)\n\n        PR c++/26696\n        * cvt.c (convert_to_void): Replace a subexpression with no side\n        effects with void_zero_node.\n        * tree.c (is_overloaded_fn): Look through COMPONENT_REF.\n        (get_first_fn): Ditto.\n        * decl.c (grokdeclarator): No need to look through COMPONENT_REF.\n\nFrom-SVN: r116724", "tree": {"sha": "5aec6c4a3744887da7a7770ae253757125a43453", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5aec6c4a3744887da7a7770ae253757125a43453"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ccbe00a43acc28143d9c37f45221d8467a093984", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ccbe00a43acc28143d9c37f45221d8467a093984", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ccbe00a43acc28143d9c37f45221d8467a093984", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ccbe00a43acc28143d9c37f45221d8467a093984/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "16ceb301d3e670045d6140143be7998ff67d9c18", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16ceb301d3e670045d6140143be7998ff67d9c18", "html_url": "https://github.com/Rust-GCC/gccrs/commit/16ceb301d3e670045d6140143be7998ff67d9c18"}], "stats": {"total": 36, "additions": 30, "deletions": 6}, "files": [{"sha": "cd1af6f8a9153b05ad0d11e3b005261ca2e794ec", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccbe00a43acc28143d9c37f45221d8467a093984/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccbe00a43acc28143d9c37f45221d8467a093984/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=ccbe00a43acc28143d9c37f45221d8467a093984", "patch": "@@ -1,3 +1,12 @@\n+2006-09-06  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/26696\n+\t* cvt.c (convert_to_void): Replace a subexpression with no side \n+\teffects with void_zero_node.\n+\t* tree.c (is_overloaded_fn): Look through COMPONENT_REF.\n+\t(get_first_fn): Ditto.\n+\t* decl.c (grokdeclarator): No need to look through COMPONENT_REF.\n+\n 2006-09-05  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/26571"}, {"sha": "83b35d6fc763c0cfed4a9808fd6e1e8c587735cc", "filename": "gcc/cp/cvt.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccbe00a43acc28143d9c37f45221d8467a093984/gcc%2Fcp%2Fcvt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccbe00a43acc28143d9c37f45221d8467a093984/gcc%2Fcp%2Fcvt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcvt.c?ref=ccbe00a43acc28143d9c37f45221d8467a093984", "patch": "@@ -960,6 +960,8 @@ convert_to_void (tree expr, const char *implicit)\n \t}\n       expr = build1 (CONVERT_EXPR, void_type_node, expr);\n     }\n+  if (! TREE_SIDE_EFFECTS (expr))\n+    expr = void_zero_node;\n   return expr;\n }\n "}, {"sha": "95f0695c6f685dac75ab5c17c1206fbe92076414", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccbe00a43acc28143d9c37f45221d8467a093984/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccbe00a43acc28143d9c37f45221d8467a093984/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=ccbe00a43acc28143d9c37f45221d8467a093984", "patch": "@@ -7014,8 +7014,6 @@ grokdeclarator (const cp_declarator *declarator,\n \t\t  tree fns = TREE_OPERAND (decl, 0);\n \n \t\t  dname = fns;\n-\t\t  if (TREE_CODE (dname) == COMPONENT_REF)\n-\t\t    dname = TREE_OPERAND (dname, 1);\n \t\t  if (TREE_CODE (dname) != IDENTIFIER_NODE)\n \t\t    {\n \t\t      gcc_assert (is_overloaded_fn (dname));"}, {"sha": "89941cc554282927427fc13cc8b51146316cb8df", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccbe00a43acc28143d9c37f45221d8467a093984/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccbe00a43acc28143d9c37f45221d8467a093984/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=ccbe00a43acc28143d9c37f45221d8467a093984", "patch": "@@ -853,7 +853,8 @@ int\n is_overloaded_fn (tree x)\n {\n   /* A baselink is also considered an overloaded function.  */\n-  if (TREE_CODE (x) == OFFSET_REF)\n+  if (TREE_CODE (x) == OFFSET_REF\n+      || TREE_CODE (x) == COMPONENT_REF)\n     x = TREE_OPERAND (x, 1);\n   if (BASELINK_P (x))\n     x = BASELINK_FUNCTIONS (x);\n@@ -880,6 +881,8 @@ get_first_fn (tree from)\n {\n   gcc_assert (is_overloaded_fn (from));\n   /* A baselink is also considered an overloaded function.  */\n+  if (TREE_CODE (from) == COMPONENT_REF)\n+    from = TREE_OPERAND (from, 1);\n   if (BASELINK_P (from))\n     from = BASELINK_FUNCTIONS (from);\n   return OVL_CURRENT (from);"}, {"sha": "601e019ae74d1bb2e19365e7976f61445d90b137", "filename": "gcc/testsuite/g++.dg/other/component1.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccbe00a43acc28143d9c37f45221d8467a093984/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fcomponent1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccbe00a43acc28143d9c37f45221d8467a093984/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fcomponent1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fcomponent1.C?ref=ccbe00a43acc28143d9c37f45221d8467a093984", "patch": "@@ -23,7 +23,7 @@ void Foo () {\n   c.f;\t\t        // { dg-error \"statement cannot resolve\" \"\" }\n   c.f<int>;\t\t// { dg-error \"statement cannot resolve\" \"\" }\n   \n-  c.g == 1;\t\t// { dg-error \"invalid use of\" \"\" }\n-  c.f == 1;\t\t// { dg-error \"invalid use of\" \"\" }\n-  c.f<int> == 1;\t// { dg-error \"invalid use of\" \"\" }\n+  c.g == 1;\t\t// { dg-error \"invalid\" \"\" }\n+  c.f == 1;\t\t// { dg-error \"invalid\" \"\" }\n+  c.f<int> == 1;\t// { dg-error \"invalid\" \"\" }\n }"}, {"sha": "99d3688149b03ccf2996dceaf56727b84a98ec2a", "filename": "gcc/testsuite/g++.dg/warn/noeffect8.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccbe00a43acc28143d9c37f45221d8467a093984/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fnoeffect8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccbe00a43acc28143d9c37f45221d8467a093984/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fnoeffect8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fnoeffect8.C?ref=ccbe00a43acc28143d9c37f45221d8467a093984", "patch": "@@ -0,0 +1,12 @@\n+// PR c++/26696\n+\n+struct A\n+{\n+  static void f() {}\n+}; \n+\n+int main() \n+{\n+  A a; \n+  a.f;    \t\t\t// { dg-warning \"not call\" }\n+}"}]}