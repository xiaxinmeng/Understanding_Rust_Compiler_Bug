{"sha": "49a30d001c710d593d15458390d4139fc5232ef6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDlhMzBkMDAxYzcxMGQ1OTNkMTU0NTgzOTBkNDEzOWZjNTIzMmVmNg==", "commit": {"author": {"name": "Bernd Schmidt", "email": "bernds@codesourcery.com", "date": "2011-06-20T10:29:46Z"}, "committer": {"name": "Bernd Schmidt", "email": "bernds@gcc.gnu.org", "date": "2011-06-20T10:29:46Z"}, "message": "* regrename.c (do_replace): Don't update notes.\n\nFrom-SVN: r175203", "tree": {"sha": "6ff7052031154102376b390324e2dce95c511d77", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6ff7052031154102376b390324e2dce95c511d77"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/49a30d001c710d593d15458390d4139fc5232ef6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49a30d001c710d593d15458390d4139fc5232ef6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/49a30d001c710d593d15458390d4139fc5232ef6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49a30d001c710d593d15458390d4139fc5232ef6/comments", "author": null, "committer": null, "parents": [{"sha": "dfb43cd5bd5ff69f865d7be6fb190d405719e15d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dfb43cd5bd5ff69f865d7be6fb190d405719e15d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dfb43cd5bd5ff69f865d7be6fb190d405719e15d"}], "stats": {"total": 36, "additions": 4, "deletions": 32}, "files": [{"sha": "89c5f65c372c7cd81891ea76afc6aeb465abd7cb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49a30d001c710d593d15458390d4139fc5232ef6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49a30d001c710d593d15458390d4139fc5232ef6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=49a30d001c710d593d15458390d4139fc5232ef6", "patch": "@@ -1,3 +1,7 @@\n+2011-06-20  Bernd Schmidt  <bernds@codesourcery.com>\n+\n+\t* regrename.c (do_replace): Don't update notes.\n+\n 2011-06-20  Alan Modra  <amodra@gmail.com>\n \n \t* config/rs6000/rs6000.c (create_TOC_reference): Wrap high part"}, {"sha": "f313d084ee34d91cef46bf9fba6675e75499f94c", "filename": "gcc/regrename.c", "status": "modified", "additions": 0, "deletions": 32, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49a30d001c710d593d15458390d4139fc5232ef6/gcc%2Fregrename.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49a30d001c710d593d15458390d4139fc5232ef6/gcc%2Fregrename.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fregrename.c?ref=49a30d001c710d593d15458390d4139fc5232ef6", "patch": "@@ -432,7 +432,6 @@ do_replace (struct du_head *head, int reg)\n {\n   struct du_chain *chain;\n   unsigned int base_regno = head->regno;\n-  bool found_note = false;\n \n   gcc_assert (! DEBUG_INSN_P (head->first->insn));\n \n@@ -446,46 +445,15 @@ do_replace (struct du_head *head, int reg)\n \tINSN_VAR_LOCATION_LOC (chain->insn) = gen_rtx_UNKNOWN_VAR_LOC ();\n       else\n \t{\n-\t  rtx note;\n-\n \t  *chain->loc = gen_raw_REG (GET_MODE (*chain->loc), reg);\n \t  if (regno >= FIRST_PSEUDO_REGISTER)\n \t    ORIGINAL_REGNO (*chain->loc) = regno;\n \t  REG_ATTRS (*chain->loc) = attr;\n \t  REG_POINTER (*chain->loc) = reg_ptr;\n-\n-\t  for (note = REG_NOTES (chain->insn); note; note = XEXP (note, 1))\n-\t    {\n-\t      enum reg_note kind = REG_NOTE_KIND (note);\n-\t      if (kind == REG_DEAD || kind == REG_UNUSED)\n-\t\t{\n-\t\t  rtx reg = XEXP (note, 0);\n-\t\t  gcc_assert (HARD_REGISTER_P (reg));\n-\n-\t\t  if (REGNO (reg) == base_regno)\n-\t\t    {\n-\t\t      found_note = true;\n-\t\t      if (kind == REG_DEAD\n-\t\t\t  && reg_set_p (*chain->loc, chain->insn))\n-\t\t\tremove_note (chain->insn, note);\n-\t\t      else\n-\t\t\tXEXP (note, 0) = *chain->loc;\n-\t\t      break;\n-\t\t    }\n-\t\t}\n-\t    }\n \t}\n \n       df_insn_rescan (chain->insn);\n     }\n-  if (!found_note)\n-    {\n-      /* If the chain's first insn is the same as the last, we should have\n-\t found a REG_UNUSED note.  */\n-      gcc_assert (head->first->insn != head->last->insn);\n-      if (!reg_set_p (*head->last->loc, head->last->insn))\n-\tadd_reg_note (head->last->insn, REG_DEAD, *head->last->loc);\n-    }\n }\n \n "}]}