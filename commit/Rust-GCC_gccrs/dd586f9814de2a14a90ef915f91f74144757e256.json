{"sha": "dd586f9814de2a14a90ef915f91f74144757e256", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGQ1ODZmOTgxNGRlMmExNGE5MGVmOTE1ZjkxZjc0MTQ0NzU3ZTI1Ng==", "commit": {"author": {"name": "Georg-Johann Lay", "email": "avr@gjlay.de", "date": "2016-11-21T15:38:02Z"}, "committer": {"name": "Georg-Johann Lay", "email": "gjl@gcc.gnu.org", "date": "2016-11-21T15:38:02Z"}, "message": "target-supports.exp (check_effective_target_tiny): Return 1 for AVR_TINY.\n\ngcc/testsuite/\n\t* lib/target-supports.exp (check_effective_target_tiny) [avr]:\n\tReturn 1 for AVR_TINY.\n\nFrom-SVN: r242666", "tree": {"sha": "6e35b93138d312933584536a30aa3b5983dccb28", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6e35b93138d312933584536a30aa3b5983dccb28"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dd586f9814de2a14a90ef915f91f74144757e256", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd586f9814de2a14a90ef915f91f74144757e256", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd586f9814de2a14a90ef915f91f74144757e256", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd586f9814de2a14a90ef915f91f74144757e256/comments", "author": null, "committer": {"login": "sprintersb", "id": 8905355, "node_id": "MDQ6VXNlcjg5MDUzNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/8905355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sprintersb", "html_url": "https://github.com/sprintersb", "followers_url": "https://api.github.com/users/sprintersb/followers", "following_url": "https://api.github.com/users/sprintersb/following{/other_user}", "gists_url": "https://api.github.com/users/sprintersb/gists{/gist_id}", "starred_url": "https://api.github.com/users/sprintersb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sprintersb/subscriptions", "organizations_url": "https://api.github.com/users/sprintersb/orgs", "repos_url": "https://api.github.com/users/sprintersb/repos", "events_url": "https://api.github.com/users/sprintersb/events{/privacy}", "received_events_url": "https://api.github.com/users/sprintersb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e51482c9c83406a928bef4c60f47a08a4232f379", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e51482c9c83406a928bef4c60f47a08a4232f379", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e51482c9c83406a928bef4c60f47a08a4232f379"}], "stats": {"total": 11, "additions": 10, "deletions": 1}, "files": [{"sha": "a6a5c168526892f9931280464d47e3cb576430e6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd586f9814de2a14a90ef915f91f74144757e256/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd586f9814de2a14a90ef915f91f74144757e256/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=dd586f9814de2a14a90ef915f91f74144757e256", "patch": "@@ -1,3 +1,8 @@\n+2016-11-21  Georg-Johann Lay  <avr@gjlay.de>\n+\n+\t* lib/target-supports.exp (check_effective_target_tiny) [avr]:\n+\tReturn 1 for AVR_TINY.\n+\n 2016-11-21  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \tPR rtl-optimization/71785"}, {"sha": "201bbf393d0f1c1cf54e69e9a730ecaaa85bc59d", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd586f9814de2a14a90ef915f91f74144757e256/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd586f9814de2a14a90ef915f91f74144757e256/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=dd586f9814de2a14a90ef915f91f74144757e256", "patch": "@@ -7864,14 +7864,18 @@ proc check_effective_target_fenv_exceptions {} {\n proc check_effective_target_tiny {} {\n     global et_target_tiny_saved\n \n-    if [info exists et_target_tine_saved] {\n+    if [info exists et_target_tiny_saved] {\n       verbose \"check_effective_target_tiny: using cached result\" 2\n     } else {\n        set et_target_tiny_saved 0\n        if { [istarget aarch64*-*-*]\n              && [check_effective_target_aarch64_tiny] } {\n          set et_target_tiny_saved 1\n        }\n+       if { [istarget avr-*-*]\n+             && [check_effective_target_avr_tiny] } {\n+         set et_target_tiny_saved 1\n+       }\n     }\n \n     return $et_target_tiny_saved"}]}