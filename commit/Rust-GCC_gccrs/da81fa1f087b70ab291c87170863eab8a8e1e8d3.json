{"sha": "da81fa1f087b70ab291c87170863eab8a8e1e8d3", "node_id": "C_kwDOANBUbNoAKGRhODFmYTFmMDg3YjcwYWIyOTFjODcxNzA4NjNlYWI4YThlMWU4ZDM", "commit": {"author": {"name": "Pierre-Emmanuel Patry", "email": "pierre-emmanuel.patry@embecosm.com", "date": "2023-02-21T11:24:53Z"}, "committer": {"name": "Pierre-Emmanuel Patry", "email": "pierre-emmanuel.patry@embecosm.com", "date": "2023-03-30T11:52:32Z"}, "message": "libproc_macro: Manual Clone for Literal\n\nThe Literal type may contain foreign byte array when representing a byte\narray or a string. This means auto deriving the Clone trait would only\nperform a shallow copy of the pointer rather than a deep copy. This\nbehavior would lead to use-after-free when a literal is cloned and then\ndropped.\n\nChangeLog:\n\n\t* librust/proc_macro/rust/bridge/literal.rs: Implement Clone\n\tmanually.\n\nSigned-off-by: Pierre-Emmanuel Patry <pierre-emmanuel.patry@embecosm.com>", "tree": {"sha": "ec9c1b92c2deafce6eb9e133e45fe9bf7d245df4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ec9c1b92c2deafce6eb9e133e45fe9bf7d245df4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/da81fa1f087b70ab291c87170863eab8a8e1e8d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da81fa1f087b70ab291c87170863eab8a8e1e8d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da81fa1f087b70ab291c87170863eab8a8e1e8d3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da81fa1f087b70ab291c87170863eab8a8e1e8d3/comments", "author": {"login": "P-E-P", "id": 32375388, "node_id": "MDQ6VXNlcjMyMzc1Mzg4", "avatar_url": "https://avatars.githubusercontent.com/u/32375388?v=4", "gravatar_id": "", "url": "https://api.github.com/users/P-E-P", "html_url": "https://github.com/P-E-P", "followers_url": "https://api.github.com/users/P-E-P/followers", "following_url": "https://api.github.com/users/P-E-P/following{/other_user}", "gists_url": "https://api.github.com/users/P-E-P/gists{/gist_id}", "starred_url": "https://api.github.com/users/P-E-P/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/P-E-P/subscriptions", "organizations_url": "https://api.github.com/users/P-E-P/orgs", "repos_url": "https://api.github.com/users/P-E-P/repos", "events_url": "https://api.github.com/users/P-E-P/events{/privacy}", "received_events_url": "https://api.github.com/users/P-E-P/received_events", "type": "User", "site_admin": false}, "committer": {"login": "P-E-P", "id": 32375388, "node_id": "MDQ6VXNlcjMyMzc1Mzg4", "avatar_url": "https://avatars.githubusercontent.com/u/32375388?v=4", "gravatar_id": "", "url": "https://api.github.com/users/P-E-P", "html_url": "https://github.com/P-E-P", "followers_url": "https://api.github.com/users/P-E-P/followers", "following_url": "https://api.github.com/users/P-E-P/following{/other_user}", "gists_url": "https://api.github.com/users/P-E-P/gists{/gist_id}", "starred_url": "https://api.github.com/users/P-E-P/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/P-E-P/subscriptions", "organizations_url": "https://api.github.com/users/P-E-P/orgs", "repos_url": "https://api.github.com/users/P-E-P/repos", "events_url": "https://api.github.com/users/P-E-P/events{/privacy}", "received_events_url": "https://api.github.com/users/P-E-P/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "acf5db71524e56aef7a0071be96299b976760454", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/acf5db71524e56aef7a0071be96299b976760454", "html_url": "https://github.com/Rust-GCC/gccrs/commit/acf5db71524e56aef7a0071be96299b976760454"}], "stats": {"total": 22, "additions": 19, "deletions": 3}, "files": [{"sha": "3251403572308e76780b89dc687c3dcef8ee84de", "filename": "librust/proc_macro/rust/bridge/literal.rs", "status": "modified", "additions": 19, "deletions": 3, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da81fa1f087b70ab291c87170863eab8a8e1e8d3/librust%2Fproc_macro%2Frust%2Fbridge%2Fliteral.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da81fa1f087b70ab291c87170863eab8a8e1e8d3/librust%2Fproc_macro%2Frust%2Fbridge%2Fliteral.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/librust%2Fproc_macro%2Frust%2Fbridge%2Fliteral.rs?ref=da81fa1f087b70ab291c87170863eab8a8e1e8d3", "patch": "@@ -13,7 +13,7 @@ extern \"C\" {\n }\n \n #[repr(C)]\n-#[derive(Debug, Clone)]\n+#[derive(Debug, Clone, Copy)]\n pub enum Unsigned {\n     Unsigned8(u8),\n     Unsigned16(u16),\n@@ -25,7 +25,7 @@ pub enum Unsigned {\n }\n \n #[repr(C)]\n-#[derive(Debug, Clone)]\n+#[derive(Debug, Clone, Copy)]\n pub enum Signed {\n     Signed8(i8),\n     Signed16(i16),\n@@ -37,7 +37,7 @@ pub enum Signed {\n }\n \n #[repr(C)]\n-#[derive(Debug, Clone)]\n+#[derive(Debug)]\n pub enum Literal {\n     /// String literal internal representation\n     ///\n@@ -383,3 +383,19 @@ impl FromStr for Literal {\n         }\n     }\n }\n+\n+impl Clone for Literal {\n+    fn clone(&self) -> Self {\n+        match self {\n+            Literal::String { data, len } => unsafe { Literal__string(*data, *len) },\n+            Literal::ByteString { data, size } => unsafe { Literal__byte_string(*data, *size) },\n+            Literal::Char(val) => Literal::Char(*val),\n+            Literal::Unsigned(val, suffixed) => Literal::Unsigned(*val, *suffixed),\n+            Literal::Signed(val, suffixed) => Literal::Signed(*val, *suffixed),\n+            Literal::Usize(val, suffixed) => Literal::Usize(*val, *suffixed),\n+            Literal::ISize(val, suffixed) => Literal::ISize(*val, *suffixed),\n+            Literal::Float32(val, suffixed) => Literal::Float32(*val, *suffixed),\n+            Literal::Float64(val, suffixed) => Literal::Float64(*val, *suffixed),\n+        }\n+    }\n+}"}]}