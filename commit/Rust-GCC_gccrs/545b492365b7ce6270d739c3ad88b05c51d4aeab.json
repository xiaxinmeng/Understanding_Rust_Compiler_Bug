{"sha": "545b492365b7ce6270d739c3ad88b05c51d4aeab", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTQ1YjQ5MjM2NWI3Y2U2MjcwZDczOWMzYWQ4OGIwNWM1MWQ0YWVhYg==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2015-05-26T20:37:29Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2015-05-26T20:37:29Z"}, "message": "trans.c (gnat_to_gnu): Really force evaluation of the expression...\n\n\t* gcc-interface/trans.c (gnat_to_gnu) <N_Object_Declaration>: Really\n\tforce evaluation of the expression, if any, when the object has its\n\telaboration delayed.  Do not create a variable at global level.\n\nFrom-SVN: r223716", "tree": {"sha": "f9df444e7d4df8c80c2430f4be31be937167651d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f9df444e7d4df8c80c2430f4be31be937167651d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/545b492365b7ce6270d739c3ad88b05c51d4aeab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/545b492365b7ce6270d739c3ad88b05c51d4aeab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/545b492365b7ce6270d739c3ad88b05c51d4aeab", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/545b492365b7ce6270d739c3ad88b05c51d4aeab/comments", "author": null, "committer": null, "parents": [{"sha": "c68cdfac5b85560441d585d4151f65812180821b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c68cdfac5b85560441d585d4151f65812180821b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c68cdfac5b85560441d585d4151f65812180821b"}], "stats": {"total": 105, "additions": 83, "deletions": 22}, "files": [{"sha": "dcb4620d292f0c0f21f29c7d78421943020f91fd", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/545b492365b7ce6270d739c3ad88b05c51d4aeab/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/545b492365b7ce6270d739c3ad88b05c51d4aeab/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=545b492365b7ce6270d739c3ad88b05c51d4aeab", "patch": "@@ -1,3 +1,9 @@\n+2015-05-26  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/trans.c (gnat_to_gnu) <N_Object_Declaration>: Really\n+\tforce evaluation of the expression, if any, when the object has its\n+\telaboration delayed.  Do not create a variable at global level.\n+\n 2015-05-26  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/trans.c (Attribute_to_gnu) <Attr_Machine>: Do not apply"}, {"sha": "8efa59dc86e6cdecf8cd43cd8c5faddd0d206431", "filename": "gcc/ada/gcc-interface/trans.c", "status": "modified", "additions": 15, "deletions": 22, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/545b492365b7ce6270d739c3ad88b05c51d4aeab/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/545b492365b7ce6270d739c3ad88b05c51d4aeab/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Ftrans.c?ref=545b492365b7ce6270d739c3ad88b05c51d4aeab", "patch": "@@ -5791,31 +5791,12 @@ gnat_to_gnu (Node_Id gnat_node)\n \t    gnu_expr\n \t      = emit_range_check (gnu_expr, Etype (gnat_temp), gnat_node);\n \n-\t  /* If this object has its elaboration delayed, we must force\n-\t     evaluation of GNU_EXPR right now and save it for when the object\n-\t     is frozen.  */\n-\t  if (Present (Freeze_Node (gnat_temp)))\n-\t    {\n-\t      if (TREE_CONSTANT (gnu_expr))\n-\t\t;\n-\t      else if (global_bindings_p ())\n-\t\tgnu_expr\n-\t\t  = create_var_decl (create_concat_name (gnat_temp, \"init\"),\n-\t\t\t\t     NULL_TREE, TREE_TYPE (gnu_expr), gnu_expr,\n-\t\t\t\t     false, false, false, false,\n-\t\t\t\t     NULL, gnat_temp);\n-\t      else\n-\t\tgnu_expr = gnat_save_expr (gnu_expr);\n-\n-\t      save_gnu_tree (gnat_node, gnu_expr, true);\n-\t    }\n+\t  if (type_annotate_only && TREE_CODE (gnu_expr) == ERROR_MARK)\n+\t    gnu_expr = NULL_TREE;\n \t}\n       else\n \tgnu_expr = NULL_TREE;\n \n-      if (type_annotate_only && gnu_expr && TREE_CODE (gnu_expr) == ERROR_MARK)\n-\tgnu_expr = NULL_TREE;\n-\n       /* If this is a deferred constant with an address clause, we ignore the\n \t full view since the clause is on the partial view and we cannot have\n \t 2 different GCC trees for the object.  The only bits of the full view\n@@ -5825,7 +5806,19 @@ gnat_to_gnu (Node_Id gnat_node)\n \t  && Present (Full_View (gnat_temp)))\n \tsave_gnu_tree (Full_View (gnat_temp), error_mark_node, true);\n \n-      if (No (Freeze_Node (gnat_temp)))\n+      /* If this object has its elaboration delayed, we must force evaluation\n+\t of GNU_EXPR now and save it for the freeze point.  Note that we need\n+\t not do anything special at the global level since the lifetime of the\n+\t temporary is fully contained within the elaboration routine.  */\n+      if (Present (Freeze_Node (gnat_temp)))\n+\t{\n+\t  if (gnu_expr)\n+\t    {\n+\t      gnu_result = gnat_save_expr (gnu_expr);\n+\t      save_gnu_tree (gnat_node, gnu_result, true);\n+\t    }\n+\t}\n+      else\n \tgnat_to_gnu_entity (gnat_temp, gnu_expr, 1);\n       break;\n "}, {"sha": "a137eef9c0470ea3b2bced15263062d434b36bf1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/545b492365b7ce6270d739c3ad88b05c51d4aeab/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/545b492365b7ce6270d739c3ad88b05c51d4aeab/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=545b492365b7ce6270d739c3ad88b05c51d4aeab", "patch": "@@ -1,3 +1,10 @@\n+2015-05-26  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/atomic7_1.adb: New test.\n+\t* gnat.dg/atomic7_2.adb: Likewise.\n+\t* gnat.dg/atomic7_pkg1.ads: New helper.\n+\t* gnat.dg/atomic7_pkg2.ad[sb]: Likewise.\n+\n 2015-05-26  Michael Matz  <matz@suse.de>\n \n \tPR middle-end/66251"}, {"sha": "2cd2fd7b2f429b56ac65ee3595ef2e6d40f1c330", "filename": "gcc/testsuite/gnat.dg/atomic7_1.adb", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/545b492365b7ce6270d739c3ad88b05c51d4aeab/gcc%2Ftestsuite%2Fgnat.dg%2Fatomic7_1.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/545b492365b7ce6270d739c3ad88b05c51d4aeab/gcc%2Ftestsuite%2Fgnat.dg%2Fatomic7_1.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fatomic7_1.adb?ref=545b492365b7ce6270d739c3ad88b05c51d4aeab", "patch": "@@ -0,0 +1,16 @@\n+-- { dg-do run }\n+\n+with Atomic7_Pkg2; use Atomic7_Pkg2;\n+\n+procedure Atomic7_1 is\n+\n+  I : Integer := Stamp;\n+  pragma Atomic (I);\n+\n+  J : Integer := Stamp;\n+\n+begin\n+  if I /= 1 then\n+    raise Program_Error;\n+  end if;\n+end;"}, {"sha": "5f73e248e3b9ebfcf20ee3bf2b61c08230380dde", "filename": "gcc/testsuite/gnat.dg/atomic7_2.adb", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/545b492365b7ce6270d739c3ad88b05c51d4aeab/gcc%2Ftestsuite%2Fgnat.dg%2Fatomic7_2.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/545b492365b7ce6270d739c3ad88b05c51d4aeab/gcc%2Ftestsuite%2Fgnat.dg%2Fatomic7_2.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fatomic7_2.adb?ref=545b492365b7ce6270d739c3ad88b05c51d4aeab", "patch": "@@ -0,0 +1,10 @@\n+--- { dg-do run }\n+\n+with Atomic7_Pkg1; use Atomic7_Pkg1;\n+\n+procedure Atomic7_2 is\n+begin\n+  if I /= 1 then\n+    raise Program_Error;\n+  end if;\n+end;"}, {"sha": "6705e043c158d31777e8ed9a84f6e8fe33d6111a", "filename": "gcc/testsuite/gnat.dg/atomic7_pkg1.ads", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/545b492365b7ce6270d739c3ad88b05c51d4aeab/gcc%2Ftestsuite%2Fgnat.dg%2Fatomic7_pkg1.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/545b492365b7ce6270d739c3ad88b05c51d4aeab/gcc%2Ftestsuite%2Fgnat.dg%2Fatomic7_pkg1.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fatomic7_pkg1.ads?ref=545b492365b7ce6270d739c3ad88b05c51d4aeab", "patch": "@@ -0,0 +1,10 @@\n+with Atomic7_Pkg2; use Atomic7_Pkg2;\n+\n+package Atomic7_Pkg1 is\n+\n+  I : Integer := Stamp;\n+  pragma Atomic (I);\n+\n+  J : Integer := Stamp;\n+\n+end Atomic7_Pkg1;"}, {"sha": "547c38818cce6164a6b61a57eaeaf1591ec8eb6f", "filename": "gcc/testsuite/gnat.dg/atomic7_pkg2.adb", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/545b492365b7ce6270d739c3ad88b05c51d4aeab/gcc%2Ftestsuite%2Fgnat.dg%2Fatomic7_pkg2.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/545b492365b7ce6270d739c3ad88b05c51d4aeab/gcc%2Ftestsuite%2Fgnat.dg%2Fatomic7_pkg2.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fatomic7_pkg2.adb?ref=545b492365b7ce6270d739c3ad88b05c51d4aeab", "patch": "@@ -0,0 +1,14 @@\n+pragma Restrictions (No_Elaboration_Code);\n+\n+package body Atomic7_Pkg2 is\n+\n+  T : Natural := 0;\n+  pragma Atomic (T);\n+\n+  function Stamp return Natural is\n+  begin\n+     T := T + 1;\n+     return T;\n+  end;\n+\n+end Atomic7_Pkg2;"}, {"sha": "8e46ec3ecf2a57ba6477c6b86aebb241c17f064d", "filename": "gcc/testsuite/gnat.dg/atomic7_pkg2.ads", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/545b492365b7ce6270d739c3ad88b05c51d4aeab/gcc%2Ftestsuite%2Fgnat.dg%2Fatomic7_pkg2.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/545b492365b7ce6270d739c3ad88b05c51d4aeab/gcc%2Ftestsuite%2Fgnat.dg%2Fatomic7_pkg2.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fatomic7_pkg2.ads?ref=545b492365b7ce6270d739c3ad88b05c51d4aeab", "patch": "@@ -0,0 +1,5 @@\n+package Atomic7_Pkg2 is\n+\n+  function Stamp return Natural;\n+\n+end Atomic7_Pkg2;"}]}