{"sha": "04643334f9769263db3a2f71956876886ef6cdd5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDQ2NDMzMzRmOTc2OTI2M2RiM2EyZjcxOTU2ODc2ODg2ZWY2Y2RkNQ==", "commit": {"author": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2016-05-18T16:44:08Z"}, "committer": {"name": "Martin Jambor", "email": "jamborm@gcc.gnu.org", "date": "2016-05-18T16:44:08Z"}, "message": "Allow constant global VAR_DECLs in constant jump functions\n\n2016-05-18  Martin Jambor  <mjambor@suse.cz>\n\n\tPR ipa/69708\n\t* ipa-cp.c (ipa_get_jf_pass_through_result): Allow non-ip constant\n\tinput for NOP_EXPR pass-through functions.\n\t* ipa-prop.c (ipa_compute_jump_functions_for_edge): Allow\n\taggregate global constant VAR_DECLs in constant jump functions.\n\ntestsuite/\n\t* gcc.dg/ipa/iinline-cstagg-2.c: New test.\n\t* gcc.dg/ipa/ipcp-cstagg-5.c: Likewise.\n\t* gcc.dg/ipa/ipcp-cstagg-6.c: Likewise.\n\t* gcc.dg/ipa/ipcp-cstagg-7.c: Likewise.\n\nFrom-SVN: r236418", "tree": {"sha": "1276e4f905c6f856a6887cb3e4bc04c542e58392", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1276e4f905c6f856a6887cb3e4bc04c542e58392"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/04643334f9769263db3a2f71956876886ef6cdd5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04643334f9769263db3a2f71956876886ef6cdd5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/04643334f9769263db3a2f71956876886ef6cdd5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04643334f9769263db3a2f71956876886ef6cdd5/comments", "author": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "776e4fe2cacf85c639bbf98ffc49da0ea4d996b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/776e4fe2cacf85c639bbf98ffc49da0ea4d996b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/776e4fe2cacf85c639bbf98ffc49da0ea4d996b2"}], "stats": {"total": 199, "additions": 197, "deletions": 2}, "files": [{"sha": "bb7855e8d06f2936d8ebd814a2621f390a2c3ac4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04643334f9769263db3a2f71956876886ef6cdd5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04643334f9769263db3a2f71956876886ef6cdd5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=04643334f9769263db3a2f71956876886ef6cdd5", "patch": "@@ -1,3 +1,11 @@\n+2016-05-18  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR ipa/69708\n+\t* ipa-cp.c (ipa_get_jf_pass_through_result): Allow non-ip constant\n+\tinput for NOP_EXPR pass-through functions.\n+\t* ipa-prop.c (ipa_compute_jump_functions_for_edge): Allow\n+\taggregate global constant VAR_DECLs in constant jump functions.\n+\n 2016-05-18  Martin Jambor  <mjambor@suse.cz>\n \n \tPR ipa/69708"}, {"sha": "8caa973e46c7fe44a2e99c5d1b9bf618e81a986c", "filename": "gcc/ipa-cp.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04643334f9769263db3a2f71956876886ef6cdd5/gcc%2Fipa-cp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04643334f9769263db3a2f71956876886ef6cdd5/gcc%2Fipa-cp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-cp.c?ref=04643334f9769263db3a2f71956876886ef6cdd5", "patch": "@@ -1026,9 +1026,10 @@ ipa_get_jf_pass_through_result (struct ipa_jump_func *jfunc, tree input)\n {\n   tree restype, res;\n \n-  gcc_checking_assert (is_gimple_ip_invariant (input));\n   if (ipa_get_jf_pass_through_operation (jfunc) == NOP_EXPR)\n     return input;\n+  if (!is_gimple_ip_invariant (input))\n+    return NULL_TREE;\n \n   if (TREE_CODE_CLASS (ipa_get_jf_pass_through_operation (jfunc))\n       == tcc_comparison)"}, {"sha": "132b622639c0fa01d649ebce76f715167d9309c9", "filename": "gcc/ipa-prop.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04643334f9769263db3a2f71956876886ef6cdd5/gcc%2Fipa-prop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04643334f9769263db3a2f71956876886ef6cdd5/gcc%2Fipa-prop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-prop.c?ref=04643334f9769263db3a2f71956876886ef6cdd5", "patch": "@@ -1674,7 +1674,10 @@ ipa_compute_jump_functions_for_edge (struct ipa_func_body_info *fbi,\n       else\n \tgcc_assert (!jfunc->alignment.known);\n \n-      if (is_gimple_ip_invariant (arg))\n+      if (is_gimple_ip_invariant (arg)\n+\t  || (TREE_CODE (arg) == VAR_DECL\n+\t      && is_global_var (arg)\n+\t      && TREE_READONLY (arg)))\n \tipa_set_jf_constant (jfunc, arg, cs);\n       else if (!is_gimple_reg_type (TREE_TYPE (arg))\n \t       && TREE_CODE (arg) == PARM_DECL)"}, {"sha": "66f5cba3c8e80c16abfb87ca9eff1901fb7dd198", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04643334f9769263db3a2f71956876886ef6cdd5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04643334f9769263db3a2f71956876886ef6cdd5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=04643334f9769263db3a2f71956876886ef6cdd5", "patch": "@@ -1,3 +1,11 @@\n+2016-05-18  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR ipa/69708\n+\t* gcc.dg/ipa/iinline-cstagg-2.c: New test.\n+\t* gcc.dg/ipa/ipcp-cstagg-5.c: Likewise.\n+\t* gcc.dg/ipa/ipcp-cstagg-6.c: Likewise.\n+\t* gcc.dg/ipa/ipcp-cstagg-7.c: Likewise.\n+\n 2016-05-18  Martin Jambor  <mjambor@suse.cz>\n \n \tPR ipa/69708"}, {"sha": "546db87ea5d33538b6a1632af70c7718488fe124", "filename": "gcc/testsuite/gcc.dg/ipa/iinline-cstagg-2.c", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04643334f9769263db3a2f71956876886ef6cdd5/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fiinline-cstagg-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04643334f9769263db3a2f71956876886ef6cdd5/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fiinline-cstagg-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fiinline-cstagg-2.c?ref=04643334f9769263db3a2f71956876886ef6cdd5", "patch": "@@ -0,0 +1,30 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -fdump-ipa-inline-details -fno-early-inlining -fno-ipa-sra -fno-ipa-cp\" } */\n+\n+typedef struct S\n+{\n+  int add_offset;\n+  int (*call)(int);\n+} S;\n+\n+static int\n+bar (const S f, int x)\n+{\n+  x = f.call (x);\n+  return x;\n+}\n+\n+static int\n+thisisthetarget (int x)\n+{\n+  return x * x;\n+}\n+\n+int\n+outerfunction (int x)\n+{\n+  return bar ((S){16, thisisthetarget}, x);\n+}\n+\n+\n+/* { dg-final { scan-ipa-dump \"thisisthetarget\\[^\\\\n\\]*inline copy in outerfunction\"  \"inline\"  } } */"}, {"sha": "56d544e5a64e5bae70e78246e432dbab86ed36a7", "filename": "gcc/testsuite/gcc.dg/ipa/ipcp-cstagg-5.c", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04643334f9769263db3a2f71956876886ef6cdd5/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipcp-cstagg-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04643334f9769263db3a2f71956876886ef6cdd5/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipcp-cstagg-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipcp-cstagg-5.c?ref=04643334f9769263db3a2f71956876886ef6cdd5", "patch": "@@ -0,0 +1,37 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -fdump-ipa-cp-details\" } */\n+\n+typedef struct S\n+{\n+  int add_offset;\n+  int (*call)(int);\n+} S;\n+\n+extern const S *es;\n+\n+static int  __attribute__((noinline))\n+foo (const S f, int x)\n+{\n+  es = &f; \t\t\t/* This disables IPA-SRA */\n+  x = f.call(x+f.add_offset);\n+  x = f.call(x);\n+  x = f.call(x);\n+  return x;\n+}\n+\n+static int\n+sq (int x)\n+{\n+  return x * x;\n+}\n+\n+static const S s = {16, sq};\n+\n+int\n+h (int x)\n+{\n+  return foo (s, x);\n+}\n+\n+/* { dg-final { scan-ipa-dump \"Discovered an indirect call to a known target\" \"cp\" } } */\n+/* { dg-final { scan-ipa-dump-times \"Discovered an indirect call to a known target\" 3 \"cp\" } } */"}, {"sha": "7891082f785da0e845326212ae03492eaecaa879", "filename": "gcc/testsuite/gcc.dg/ipa/ipcp-cstagg-6.c", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04643334f9769263db3a2f71956876886ef6cdd5/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipcp-cstagg-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04643334f9769263db3a2f71956876886ef6cdd5/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipcp-cstagg-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipcp-cstagg-6.c?ref=04643334f9769263db3a2f71956876886ef6cdd5", "patch": "@@ -0,0 +1,43 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -fdump-ipa-cp-details\" } */\n+\n+typedef struct S\n+{\n+  int add_offset;\n+  int (*call)(int);\n+} S;\n+\n+extern const S *es, *fs;\n+\n+static int  __attribute__((noinline))\n+foo (const S f, int x)\n+{\n+  es = &f; \t\t\t/* This disables IPA-SRA */\n+  x = f.call(x+f.add_offset);\n+  x = f.call(x);\n+  x = f.call(x);\n+  return x;\n+}\n+\n+static int  __attribute__((noinline))\n+bar (const S f, int x)\n+{\n+  fs = &f; \t\t\t/* This disables IPA-SRA */\n+  return foo (f, x);\n+}\n+\n+static int\n+sq (int x)\n+{\n+  return x * x;\n+}\n+\n+static const S s = {16, sq};\n+\n+int\n+h (int x)\n+{\n+  return bar (s, x);\n+}\n+\n+/* { dg-final { scan-ipa-dump-times \"Discovered an indirect call to a known target\" 3 \"cp\" } } */"}, {"sha": "6af8bda6d8ed6a6c8c5d76b0c6b6f1276391e75d", "filename": "gcc/testsuite/gcc.dg/ipa/ipcp-cstagg-7.c", "status": "added", "additions": 65, "deletions": 0, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04643334f9769263db3a2f71956876886ef6cdd5/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipcp-cstagg-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04643334f9769263db3a2f71956876886ef6cdd5/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipcp-cstagg-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fipcp-cstagg-7.c?ref=04643334f9769263db3a2f71956876886ef6cdd5", "patch": "@@ -0,0 +1,65 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -fdump-ipa-cp-details\" } */\n+\n+#define N 4\n+\n+typedef int (* const A[N])(int);\n+\n+typedef struct S\n+{\n+  int add_offset;\n+  A a;\n+} S;\n+\n+extern const S *gs, *hs;\n+\n+static int  __attribute__((noinline))\n+foo (const S f, int x)\n+{\n+  gs = &f;\n+  x = f.a[2](x);\n+  x = f.a[2](x);\n+  x = f.a[2](x);\n+  return x;\n+}\n+\n+static int  __attribute__((noinline))\n+bar (const S f, int x)\n+{\n+  hs = &f;\n+  return foo (f, x);\n+}\n+\n+static int\n+zero (int x)\n+{\n+  return 0;\n+}\n+\n+static int\n+addone (int x)\n+{\n+  return x + 1;\n+}\n+\n+static int\n+sq (int x)\n+{\n+  return x * x;\n+}\n+\n+static int\n+cube (int x)\n+{\n+  return x * x * x;\n+}\n+\n+static const S s = {64, {zero, addone, sq, cube}};\n+\n+int\n+h (int x)\n+{\n+  return bar (s, x);\n+}\n+\n+/* { dg-final { scan-ipa-dump-times \"Discovered an indirect call to a known target\" 3 \"cp\" } } */"}]}