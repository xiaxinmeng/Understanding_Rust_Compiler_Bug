{"sha": "fd48df3e75dbf1e7ab370d8d1aecbf522cfc893c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmQ0OGRmM2U3NWRiZjFlN2FiMzcwZDhkMWFlY2JmNTIyY2ZjODkzYw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-08-30T20:13:42Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-08-30T20:13:42Z"}, "message": "(get_parm_info...\n\n(get_parm_info, store_parm_decls): If PROMOTE_PROTOTYPE, promote all\nintegral types shorter than int, including short enums.\n\nFrom-SVN: r5228", "tree": {"sha": "1f460e4980480c8140f1938ad5312c77b322533a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1f460e4980480c8140f1938ad5312c77b322533a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fd48df3e75dbf1e7ab370d8d1aecbf522cfc893c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd48df3e75dbf1e7ab370d8d1aecbf522cfc893c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd48df3e75dbf1e7ab370d8d1aecbf522cfc893c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd48df3e75dbf1e7ab370d8d1aecbf522cfc893c/comments", "author": null, "committer": null, "parents": [{"sha": "37c37a579c115ca41cef4bf760be77ed9e311e23", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37c37a579c115ca41cef4bf760be77ed9e311e23", "html_url": "https://github.com/Rust-GCC/gccrs/commit/37c37a579c115ca41cef4bf760be77ed9e311e23"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "d9eb67d73d1dd57f4654e070d059d12262789682", "filename": "gcc/c-decl.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd48df3e75dbf1e7ab370d8d1aecbf522cfc893c/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd48df3e75dbf1e7ab370d8d1aecbf522cfc893c/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=fd48df3e75dbf1e7ab370d8d1aecbf522cfc893c", "patch": "@@ -4883,7 +4883,8 @@ get_parm_info (void_at_end)\n \ttree type = TREE_TYPE (decl);\n \tDECL_ARG_TYPE (decl) = type;\n #ifdef PROMOTE_PROTOTYPES\n-\tif (TREE_CODE (type) == INTEGER_TYPE\n+\tif ((TREE_CODE (type) == INTEGER_TYPE\n+\t     || TREE_CODE (type) == ENUMERAL_TYPE)\n \t    && TYPE_PRECISION (type) < TYPE_PRECISION (integer_type_node))\n \t  DECL_ARG_TYPE (decl) = integer_type_node;\n #endif\n@@ -6094,7 +6095,8 @@ store_parm_decls ()\n \t\t\t useful for argument types like uid_t.  */\n \t\t      DECL_ARG_TYPE (parm) = TREE_TYPE (parm);\n #ifdef PROMOTE_PROTOTYPES\n-\t\t      if (TREE_CODE (TREE_TYPE (parm)) == INTEGER_TYPE\n+\t\t      if ((TREE_CODE (TREE_TYPE (parm)) == INTEGER_TYPE\n+\t\t\t   || TREE_CODE (TREE_TYPE (parm)) == ENUMERAL_TYPE)\n \t\t\t  && TYPE_PRECISION (TREE_TYPE (parm))\n \t\t\t  < TYPE_PRECISION (integer_type_node))\n \t\t\tDECL_ARG_TYPE (parm) = integer_type_node;"}]}