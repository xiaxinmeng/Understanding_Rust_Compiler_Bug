{"sha": "15aed8c4609257ea0280553ad2a5946bdaf06ec9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTVhZWQ4YzQ2MDkyNTdlYTAyODA1NTNhZDJhNTk0NmJkYWYwNmVjOQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2015-01-05T21:45:08Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2015-01-05T21:45:08Z"}, "message": "re PR middle-end/64465 (internal compiler error: verify_flow_info failed)\n\n\tPR tree-optimization/64465\n\t* tree-inline.c (redirect_all_calls): During inlining\n\tclean up EH stmts and EH edges if redirect_call_stmt_to_callee\n\tchanged the stmt to a non-throwing call.\n\n\t* gcc.dg/pr64465.c: New test.\n\nFrom-SVN: r219200", "tree": {"sha": "332cf62cb06a61bcde73d0b785c00583c95a8315", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/332cf62cb06a61bcde73d0b785c00583c95a8315"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/15aed8c4609257ea0280553ad2a5946bdaf06ec9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15aed8c4609257ea0280553ad2a5946bdaf06ec9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/15aed8c4609257ea0280553ad2a5946bdaf06ec9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15aed8c4609257ea0280553ad2a5946bdaf06ec9/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d1f4e4c31ce23f5e3bda3ca8be040c6c6d58ec29", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1f4e4c31ce23f5e3bda3ca8be040c6c6d58ec29", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d1f4e4c31ce23f5e3bda3ca8be040c6c6d58ec29"}], "stats": {"total": 44, "additions": 41, "deletions": 3}, "files": [{"sha": "0557edd8192bd4a453bba993e4aea31e1be2b390", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15aed8c4609257ea0280553ad2a5946bdaf06ec9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15aed8c4609257ea0280553ad2a5946bdaf06ec9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=15aed8c4609257ea0280553ad2a5946bdaf06ec9", "patch": "@@ -1,3 +1,10 @@\n+2015-01-05  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/64465\n+\t* tree-inline.c (redirect_all_calls): During inlining\n+\tclean up EH stmts and EH edges if redirect_call_stmt_to_callee\n+\tchanged the stmt to a non-throwing call.\n+\n 2015-01-05  Sandra Loosemore  <sandra@codesourcery.com>\n \n \t* doc/invoke.texi: Fix incorrect uses of @code, @option, @samp,"}, {"sha": "cda42315f1680859f9de88bf727ad801c100d9af", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15aed8c4609257ea0280553ad2a5946bdaf06ec9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15aed8c4609257ea0280553ad2a5946bdaf06ec9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=15aed8c4609257ea0280553ad2a5946bdaf06ec9", "patch": "@@ -1,5 +1,8 @@\n 2015-01-05  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR tree-optimization/64465\n+\t* gcc.dg/pr64465.c: New test.\n+\n \tPR tree-optimization/64494\n \t* gcc.c-torture/compile/pr64494.c: New test.\n "}, {"sha": "acfa952b00c2e9c5d800c7fb0944922ff6a93170", "filename": "gcc/testsuite/gcc.dg/pr64465.c", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15aed8c4609257ea0280553ad2a5946bdaf06ec9/gcc%2Ftestsuite%2Fgcc.dg%2Fpr64465.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15aed8c4609257ea0280553ad2a5946bdaf06ec9/gcc%2Ftestsuite%2Fgcc.dg%2Fpr64465.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr64465.c?ref=15aed8c4609257ea0280553ad2a5946bdaf06ec9", "patch": "@@ -0,0 +1,22 @@\n+/* PR tree-optimization/64465 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fexceptions\" } */\n+\n+extern int foo (int *);\n+extern int bar (int, int);\n+static inline __attribute__ ((__always_inline__))\n+int baz (int o)\n+{\n+  if (__builtin_constant_p (o))\n+    return bar (o, 1);\n+  return bar (o, 0);\n+}\n+\n+void\n+test (void)\n+{\n+  int s;\n+  foo (&s);\n+  baz (4);\n+  baz (s);\n+}"}, {"sha": "902eb955d39f8c359e8647deb88358e2b3778699", "filename": "gcc/tree-inline.c", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15aed8c4609257ea0280553ad2a5946bdaf06ec9/gcc%2Ftree-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15aed8c4609257ea0280553ad2a5946bdaf06ec9/gcc%2Ftree-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.c?ref=15aed8c4609257ea0280553ad2a5946bdaf06ec9", "patch": "@@ -2582,13 +2582,19 @@ void\n redirect_all_calls (copy_body_data * id, basic_block bb)\n {\n   gimple_stmt_iterator si;\n+  gimple last = last_stmt (bb);\n   for (si = gsi_start_bb (bb); !gsi_end_p (si); gsi_next (&si))\n     {\n-      if (is_gimple_call (gsi_stmt (si)))\n+      gimple stmt = gsi_stmt (si);\n+      if (is_gimple_call (stmt))\n \t{\n-\t  struct cgraph_edge *edge = id->dst_node->get_edge (gsi_stmt (si));\n+\t  struct cgraph_edge *edge = id->dst_node->get_edge (stmt);\n \t  if (edge)\n-\t    edge->redirect_call_stmt_to_callee ();\n+\t    {\n+\t      edge->redirect_call_stmt_to_callee ();\n+\t      if (stmt == last && id->call_stmt && maybe_clean_eh_stmt (stmt))\n+\t\tgimple_purge_dead_eh_edges (bb);\n+\t    }\n \t}\n     }\n }"}]}