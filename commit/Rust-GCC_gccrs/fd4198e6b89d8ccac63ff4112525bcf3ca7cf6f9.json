{"sha": "fd4198e6b89d8ccac63ff4112525bcf3ca7cf6f9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmQ0MTk4ZTZiODlkOGNjYWM2M2ZmNDExMjUyNWJjZjNjYTdjZjZmOQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2011-08-16T23:26:08Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-08-16T23:26:08Z"}, "message": "re PR c++/50086 ([C++0x] Error on lookup of template function address with variadic template arguments)\n\n\tPR c++/50086\n\t* pt.c (unify_pack_expansion): Correct overloaded unification\n\tlogic.\n\nFrom-SVN: r177813", "tree": {"sha": "ba733e38b71113e12935d59050197a2299484125", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ba733e38b71113e12935d59050197a2299484125"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fd4198e6b89d8ccac63ff4112525bcf3ca7cf6f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd4198e6b89d8ccac63ff4112525bcf3ca7cf6f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd4198e6b89d8ccac63ff4112525bcf3ca7cf6f9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd4198e6b89d8ccac63ff4112525bcf3ca7cf6f9/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "41669f514908961e5d3e9bf83cc761397c2e00b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41669f514908961e5d3e9bf83cc761397c2e00b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/41669f514908961e5d3e9bf83cc761397c2e00b8"}], "stats": {"total": 52, "additions": 32, "deletions": 20}, "files": [{"sha": "4d6c353a178ca49f50d336d845ec2c6668d91dac", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd4198e6b89d8ccac63ff4112525bcf3ca7cf6f9/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd4198e6b89d8ccac63ff4112525bcf3ca7cf6f9/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=fd4198e6b89d8ccac63ff4112525bcf3ca7cf6f9", "patch": "@@ -1,5 +1,9 @@\n 2011-08-16  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/50086\n+\t* pt.c (unify_pack_expansion): Correct overloaded unification\n+\tlogic.\n+\n \t* pt.c (instantiate_class_template_1): If DECL_PRESERVE_P is set\n \ton a member function or static data member, call mark_used.\n "}, {"sha": "9ab110aa225d3f2c96699d69a8b7d86e6a799c9c", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 13, "deletions": 20, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd4198e6b89d8ccac63ff4112525bcf3ca7cf6f9/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd4198e6b89d8ccac63ff4112525bcf3ca7cf6f9/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=fd4198e6b89d8ccac63ff4112525bcf3ca7cf6f9", "patch": "@@ -15434,7 +15434,6 @@ unify_pack_expansion (tree tparms, tree targs, tree packed_parms,\n         tree arg = TREE_VEC_ELT (packed_args, i);\n \ttree arg_expr = NULL_TREE;\n         int arg_strict = strict;\n-        bool skip_arg_p = false;\n \n         if (call_args_p)\n           {\n@@ -15477,19 +15476,15 @@ unify_pack_expansion (tree tparms, tree targs, tree packed_parms,\n                     if (resolve_overloaded_unification\n                         (tparms, targs, parm, arg,\n \t\t\t (unification_kind_t) strict,\n-\t\t\t sub_strict, explain_p)\n-                        != 0)\n-                      return 1;\n-                    skip_arg_p = true;\n+\t\t\t sub_strict, explain_p))\n+\t\t      goto unified;\n+\t\t    return unify_overload_resolution_failure (explain_p, arg);\n                   }\n \n-                if (!skip_arg_p)\n-                  {\n-\t\t    arg_expr = arg;\n-                    arg = unlowered_expr_type (arg);\n-                    if (arg == error_mark_node)\n-                      return 1;\n-                  }\n+\t\targ_expr = arg;\n+\t\targ = unlowered_expr_type (arg);\n+\t\tif (arg == error_mark_node)\n+\t\t  return unify_invalid (explain_p);\n               }\n       \n             arg_strict = sub_strict;\n@@ -15500,16 +15495,14 @@ unify_pack_expansion (tree tparms, tree targs, tree packed_parms,\n \t\t\t\t\t\t  &parm, &arg, arg_expr);\n           }\n \n-        if (!skip_arg_p)\n-          {\n-\t    /* For deduction from an init-list we need the actual list.  */\n-\t    if (arg_expr && BRACE_ENCLOSED_INITIALIZER_P (arg_expr))\n-\t      arg = arg_expr;\n-\t    RECUR_AND_CHECK_FAILURE (tparms, targs, parm, arg, arg_strict,\n-\t\t\t\t     explain_p);\n-          }\n+\t/* For deduction from an init-list we need the actual list.  */\n+\tif (arg_expr && BRACE_ENCLOSED_INITIALIZER_P (arg_expr))\n+\t  arg = arg_expr;\n+\tRECUR_AND_CHECK_FAILURE (tparms, targs, parm, arg, arg_strict,\n+\t\t\t\t explain_p);\n       }\n \n+    unified:\n       /* For each parameter pack, collect the deduced value.  */\n       for (pack = packs; pack; pack = TREE_CHAIN (pack))\n         {"}, {"sha": "f435f140b853e405a49baf70306620233e0b0e3a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd4198e6b89d8ccac63ff4112525bcf3ca7cf6f9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd4198e6b89d8ccac63ff4112525bcf3ca7cf6f9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=fd4198e6b89d8ccac63ff4112525bcf3ca7cf6f9", "patch": "@@ -1,5 +1,8 @@\n 2011-08-16  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/50086\n+\t* g++.dg/cpp0x/variadic-unresolved.C: New.\n+\n \t* g++.old-deja/g++.brendan/README: Add R.I.P.\n \n \t* g++.dg/ext/attr-used-1.C: New."}, {"sha": "a8463de19808ee1730321cf038438543a9f594a5", "filename": "gcc/testsuite/g++.dg/cpp0x/variadic-unresolved.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd4198e6b89d8ccac63ff4112525bcf3ca7cf6f9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic-unresolved.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd4198e6b89d8ccac63ff4112525bcf3ca7cf6f9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic-unresolved.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic-unresolved.C?ref=fd4198e6b89d8ccac63ff4112525bcf3ca7cf6f9", "patch": "@@ -0,0 +1,12 @@\n+// PR c++/50086\n+// { dg-options -std=c++0x }\n+\n+template<typename T> void tfun();\n+template<typename T> void fun1(T);\n+template<typename... Types> void fun2(Types... args);\n+\n+int main()\n+{\n+  fun1(tfun<int>); // ok\n+  fun2(tfun<int>); // error: unresolved overloaded function type\n+}"}]}