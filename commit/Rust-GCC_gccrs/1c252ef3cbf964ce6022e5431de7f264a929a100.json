{"sha": "1c252ef3cbf964ce6022e5431de7f264a929a100", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWMyNTJlZjNjYmY5NjRjZTYwMjJlNTQzMWRlN2YyNjRhOTI5YTEwMA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2018-12-06T11:32:09Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2018-12-06T11:32:09Z"}, "message": "bitmap.c (bitmap_head::crashme): Define.\n\n2018-12-06  Richard Biener  <rguenther@suse.de>\n\n\t* bitmap.c (bitmap_head::crashme): Define.\n\t* bitmap.h (bitmap_head): Add constexpr default constructor\n\tpoisoning the obstack member.\n\t(bitmap_head::crashme): Declare.\n\t(bitmap_release): New function clearing a bitmap and poisoning\n\tthe obstack member.\n\t* gengtype.c (main): Make it recognize CONSTEXPR.\n\n\t* lra-constraints.c (lra_inheritance): Use bitmap_release\n\tinstead of bitmap_clear.\n\n\t* ira.c (ira): Work around class-memaccess warning.\n\t* regrename.c (create_new_chain): Likewise.\n\nFrom-SVN: r266850", "tree": {"sha": "9d8140a68c008e3bc89ef9eded4d916dcf77f927", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9d8140a68c008e3bc89ef9eded4d916dcf77f927"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1c252ef3cbf964ce6022e5431de7f264a929a100", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c252ef3cbf964ce6022e5431de7f264a929a100", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1c252ef3cbf964ce6022e5431de7f264a929a100", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c252ef3cbf964ce6022e5431de7f264a929a100/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "98610dc5b630a8ee7f39ed48d45e58fb044dbec1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98610dc5b630a8ee7f39ed48d45e58fb044dbec1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/98610dc5b630a8ee7f39ed48d45e58fb044dbec1"}], "stats": {"total": 51, "additions": 44, "deletions": 7}, "files": [{"sha": "e52f2f946f698c2ba132e980ac381e6f30461847", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c252ef3cbf964ce6022e5431de7f264a929a100/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c252ef3cbf964ce6022e5431de7f264a929a100/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1c252ef3cbf964ce6022e5431de7f264a929a100", "patch": "@@ -1,3 +1,17 @@\n+2018-12-06  Richard Biener  <rguenther@suse.de>\n+\n+\t* bitmap.c (bitmap_head::crashme): Define.\n+\t* bitmap.h (bitmap_head): Add constexpr default constructor\n+\tpoisoning the obstack member.\n+\t(bitmap_head::crashme): Declare.\n+\t(bitmap_release): New function clearing a bitmap and poisoning\n+\tthe obstack member.\n+\t* gengtype.c (main): Make it recognize CONSTEXPR.\n+\t* lra-constraints.c (lra_inheritance): Use bitmap_release\n+\tinstead of bitmap_clear.\n+\t* ira.c (ira): Work around class-memaccess warning.\n+\t* regrename.c (create_new_chain): Likewise.\n+\n 2018-12-06  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/85726"}, {"sha": "05525795c344ed36879147808d188cb2bf0a36a4", "filename": "gcc/bitmap.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c252ef3cbf964ce6022e5431de7f264a929a100/gcc%2Fbitmap.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c252ef3cbf964ce6022e5431de7f264a929a100/gcc%2Fbitmap.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbitmap.c?ref=1c252ef3cbf964ce6022e5431de7f264a929a100", "patch": "@@ -26,6 +26,10 @@ along with GCC; see the file COPYING3.  If not see\n /* Memory allocation statistics purpose instance.  */\n mem_alloc_description<bitmap_usage> bitmap_mem_desc;\n \n+/* Static zero-initialized bitmap obstack used for default initialization\n+   of bitmap_head.  */\n+bitmap_obstack bitmap_head::crashme;\n+\n static bitmap_element *bitmap_tree_listify_from (bitmap, bitmap_element *);\n \n /* Register new bitmap.  */"}, {"sha": "7499ebebb00f7db89652097c54473c6fece67bea", "filename": "gcc/bitmap.h", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c252ef3cbf964ce6022e5431de7f264a929a100/gcc%2Fbitmap.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c252ef3cbf964ce6022e5431de7f264a929a100/gcc%2Fbitmap.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbitmap.h?ref=1c252ef3cbf964ce6022e5431de7f264a929a100", "patch": "@@ -323,6 +323,12 @@ struct GTY((chain_next (\"%h.next\"), chain_prev (\"%h.prev\"))) bitmap_element {\n    already pointed to by the chain started by first, so GTY((skip)) it.  */\n \n struct GTY(()) bitmap_head {\n+  static bitmap_obstack crashme;\n+  /* Poison obstack to not make it not a valid initialized GC bitmap.  */\n+  CONSTEXPR bitmap_head()\n+    : indx(0), tree_form(false), first(NULL), current(NULL),\n+      obstack (&crashme)\n+  {}\n   /* Index of last element looked at.  */\n   unsigned int indx;\n   /* False if the bitmap is in list form; true if the bitmap is in tree form.\n@@ -441,6 +447,18 @@ bitmap_initialize (bitmap head, bitmap_obstack *obstack CXX_MEM_STAT_INFO)\n     bitmap_register (head PASS_MEM_STAT);\n }\n \n+/* Release a bitmap (but not its head).  This is suitable for pairing with\n+   bitmap_initialize.  */\n+\n+static inline void\n+bitmap_release (bitmap head)\n+{\n+  bitmap_clear (head);\n+  /* Poison the obstack pointer so the obstack can be safely released.\n+     Do not zero it as the bitmap then becomes initialized GC.  */\n+  head->obstack = &bitmap_head::crashme;\n+}\n+\n /* Allocate and free bitmaps from obstack, malloc and gc'd memory.  */\n extern bitmap bitmap_alloc (bitmap_obstack *obstack CXX_MEM_STAT_INFO);\n #define BITMAP_ALLOC bitmap_alloc"}, {"sha": "49393dd394cba5899a120747aa5632199a05b532", "filename": "gcc/gengtype.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c252ef3cbf964ce6022e5431de7f264a929a100/gcc%2Fgengtype.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c252ef3cbf964ce6022e5431de7f264a929a100/gcc%2Fgengtype.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgengtype.c?ref=1c252ef3cbf964ce6022e5431de7f264a929a100", "patch": "@@ -5205,6 +5205,7 @@ main (int argc, char **argv)\n       POS_HERE (do_scalar_typedef (\"void\", &pos));\n       POS_HERE (do_scalar_typedef (\"machine_mode\", &pos));\n       POS_HERE (do_scalar_typedef (\"fixed_size_mode\", &pos));\n+      POS_HERE (do_scalar_typedef (\"CONSTEXPR\", &pos));\n       POS_HERE (do_typedef (\"PTR\", \n \t\t\t    create_pointer (resolve_typedef (\"void\", &pos)),\n \t\t\t    &pos));"}, {"sha": "8258750650621731f5ffb7bc5d4892cb0e3dd187", "filename": "gcc/ira.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c252ef3cbf964ce6022e5431de7f264a929a100/gcc%2Fira.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c252ef3cbf964ce6022e5431de7f264a929a100/gcc%2Fira.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fira.c?ref=1c252ef3cbf964ce6022e5431de7f264a929a100", "patch": "@@ -5417,7 +5417,7 @@ ira (FILE *f)\n \t    = ((struct ira_spilled_reg_stack_slot *)\n \t       ira_allocate (max_regno\n \t\t\t     * sizeof (struct ira_spilled_reg_stack_slot)));\n-\t  memset (ira_spilled_reg_stack_slots, 0,\n+\t  memset ((void *)ira_spilled_reg_stack_slots, 0,\n \t\t  max_regno * sizeof (struct ira_spilled_reg_stack_slot));\n \t}\n     }"}, {"sha": "ba35b95b2cca884a2cf6b14e23146e6fdadd65f8", "filename": "gcc/lra-constraints.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c252ef3cbf964ce6022e5431de7f264a929a100/gcc%2Flra-constraints.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c252ef3cbf964ce6022e5431de7f264a929a100/gcc%2Flra-constraints.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra-constraints.c?ref=1c252ef3cbf964ce6022e5431de7f264a929a100", "patch": "@@ -6651,11 +6651,11 @@ lra_inheritance (void)\n \t   inherit_in_ebb.  */\n \tupdate_ebb_live_info (BB_HEAD (start_bb), BB_END (bb));\n     }\n-  bitmap_clear (&ebb_global_regs);\n-  bitmap_clear (&temp_bitmap);\n-  bitmap_clear (&live_regs);\n-  bitmap_clear (&invalid_invariant_regs);\n-  bitmap_clear (&check_only_regs);\n+  bitmap_release (&ebb_global_regs);\n+  bitmap_release (&temp_bitmap);\n+  bitmap_release (&live_regs);\n+  bitmap_release (&invalid_invariant_regs);\n+  bitmap_release (&check_only_regs);\n   free (usage_insns);\n \n   timevar_pop (TV_LRA_INHERITANCE);"}, {"sha": "7294107461b1df077aa83511c120805ad4e2817c", "filename": "gcc/regrename.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c252ef3cbf964ce6022e5431de7f264a929a100/gcc%2Fregrename.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c252ef3cbf964ce6022e5431de7f264a929a100/gcc%2Fregrename.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fregrename.c?ref=1c252ef3cbf964ce6022e5431de7f264a929a100", "patch": "@@ -231,7 +231,7 @@ create_new_chain (unsigned this_regno, unsigned this_nregs, rtx *loc,\n   struct du_chain *this_du;\n   int nregs;\n \n-  memset (head, 0, sizeof *head);\n+  memset ((void *)head, 0, sizeof *head);\n   head->next_chain = open_chains;\n   head->regno = this_regno;\n   head->nregs = this_nregs;"}]}