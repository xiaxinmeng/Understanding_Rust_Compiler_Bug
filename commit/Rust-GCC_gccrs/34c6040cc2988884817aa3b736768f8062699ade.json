{"sha": "34c6040cc2988884817aa3b736768f8062699ade", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzRjNjA0MGNjMjk4ODg4NDgxN2FhM2I3MzY3NjhmODA2MjY5OWFkZQ==", "commit": {"author": {"name": "Nathanael Nerode", "email": "neroden@gcc.gnu.org", "date": "2002-10-02T06:22:33Z"}, "committer": {"name": "Nathanael Nerode", "email": "neroden@gcc.gnu.org", "date": "2002-10-02T06:22:33Z"}, "message": "Makefile.tpl: Remove material now in src-release.\n\n2002-10-02  Nathanael Nerode  <neroden@gcc.gnu.org>\n\n\t* Makefile.tpl: Remove material now in src-release.  (Finally!)\n\n\t* Makefile.in: Regenerate.\n\nFrom-SVN: r57727", "tree": {"sha": "32c1805aa00a416dc4b80318808ea6ae711590d5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/32c1805aa00a416dc4b80318808ea6ae711590d5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/34c6040cc2988884817aa3b736768f8062699ade", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34c6040cc2988884817aa3b736768f8062699ade", "html_url": "https://github.com/Rust-GCC/gccrs/commit/34c6040cc2988884817aa3b736768f8062699ade", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34c6040cc2988884817aa3b736768f8062699ade/comments", "author": null, "committer": null, "parents": [{"sha": "af50f4c80721aa8aa9e55f772314931c488c9f55", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af50f4c80721aa8aa9e55f772314931c488c9f55", "html_url": "https://github.com/Rust-GCC/gccrs/commit/af50f4c80721aa8aa9e55f772314931c488c9f55"}], "stats": {"total": 576, "additions": 2, "deletions": 574}, "files": [{"sha": "85809db27b86baa496344c4df5de37fc1c7e5057", "filename": "ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34c6040cc2988884817aa3b736768f8062699ade/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34c6040cc2988884817aa3b736768f8062699ade/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=34c6040cc2988884817aa3b736768f8062699ade", "patch": "@@ -1,5 +1,7 @@\n 2002-10-02  Nathanael Nerode  <neroden@gcc.gnu.org>\n \n+\t* Makefile.tpl: Remove material now in src-release.  (Finally!)\n+\n \t* Makefile.tpl: Add configure-target (for src-release in src)\n \t* Makefile.in: Regenerate.\n "}, {"sha": "0121ad8203bfe6306bb00921e52453ba17ef4ab1", "filename": "Makefile.in", "status": "modified", "additions": 0, "deletions": 287, "changes": 287, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34c6040cc2988884817aa3b736768f8062699ade/Makefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34c6040cc2988884817aa3b736768f8062699ade/Makefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.in?ref=34c6040cc2988884817aa3b736768f8062699ade", "patch": "@@ -124,9 +124,6 @@ NM = nm\n \n LD = ld\n \n-BZIPPROG = bzip2\n-MD5PROG = md5sum\n-\n # These values are substituted by configure.\n DEFAULT_YACC = @DEFAULT_YACC@\n DEFAULT_LEX = @DEFAULT_LEX@\n@@ -1807,290 +1804,6 @@ Makefile: Makefile.in configure.in $(host_makefile_frag) $(target_makefile_frag)\n \t$(SHELL) ./config.status\n \n #\n-# Support for building net releases\n-\n-# Files in devo used in any net release.\n-# ChangeLog omitted because it may refer to files which are not in this\n-# distribution (perhaps it would be better to include it anyway).\n-DEVO_SUPPORT= README Makefile.in configure configure.in \\\n-\tconfig.guess config.if config.sub config move-if-change \\\n-\tmpw-README mpw-build.in mpw-config.in mpw-configure mpw-install \\\n-\tCOPYING COPYING.LIB install-sh config-ml.in symlink-tree \\\n-\tmkinstalldirs ltconfig ltmain.sh missing ylwrap \\\n-\tlibtool.m4 gettext.m4 ltcf-c.sh ltcf-cxx.sh ltcf-gcj.sh\n-\n-# Files in devo/etc used in any net release.\n-# ChangeLog omitted because it may refer to files which are not in this\n-# distribution (perhaps it would be better to include it anyway).\n-ETC_SUPPORT= Makefile.in configure configure.in standards.texi \\\n-\tmake-stds.texi standards.info* configure.texi configure.info* \\\n-\tconfigbuild.* configdev.*\n-\n-\n-# When you use `make setup-dirs' or `make taz' you should always redefine\n-# this macro.\n-SUPPORT_FILES = list-of-support-files-for-tool-in-question\n-\n-# NOTE: No double quotes in the below.  It is used within shell script\n-# as VER=\"$(VER)\"\n-VER = `\tif grep 'AM_INIT_AUTOMAKE.*BFD_VERSION' $(TOOL)/configure.in >/dev/null 2>&1; then \\\n-\t  sed < bfd/configure.in -n 's/AM_INIT_AUTOMAKE[^,]*, *\\([^)]*\\))/\\1/p'; \\\n-\telif grep AM_INIT_AUTOMAKE $(TOOL)/configure.in >/dev/null 2>&1; then \\\n-\t  sed < $(TOOL)/configure.in -n 's/AM_INIT_AUTOMAKE[^,]*, *\\([^)]*\\))/\\1/p'; \\\n-\telif test -f $(TOOL)/version.in; then \\\n-\t  head -1 $(TOOL)/version.in; \\\n-\telif grep VERSION $(TOOL)/Makefile.in > /dev/null 2>&1; then \\\n-\t  sed < $(TOOL)/Makefile.in -n 's/^VERSION *= *//p'; \\\n-\telse \\\n-\t  echo VERSION; \\\n-\tfi`\n-PACKAGE = $(TOOL)\n-\n-.PHONY: taz\n-taz: $(DEVO_SUPPORT) $(SUPPORT_FILES) texinfo/texinfo.tex\n-\t$(MAKE) -f Makefile.in do-proto-toplev \\\n-\t\tTOOL=$(TOOL) PACKAGE=\"$(PACKAGE)\" VER=\"$(VER)\" \\\n-\t\tMD5PROG=\"$(MD5PROG)\" \\\n-\t\tSUPPORT_FILES=\"$(SUPPORT_FILES)\"\n-\t$(MAKE) -f Makefile.in do-md5sum \\\n-\t\tTOOL=$(TOOL) PACKAGE=\"$(PACKAGE)\" VER=\"$(VER)\" \\\n-\t\tMD5PROG=\"$(MD5PROG)\" \\\n-\t\tSUPPORT_FILES=\"$(SUPPORT_FILES)\"\n-\t$(MAKE) -f Makefile.in do-tar \\\n-\t\tTOOL=$(TOOL) PACKAGE=\"$(PACKAGE)\" VER=\"$(VER)\" \\\n-\t\tMD5PROG=\"$(MD5PROG)\" \\\n-\t\tSUPPORT_FILES=\"$(SUPPORT_FILES)\"\n-\t$(MAKE) -f Makefile.in do-bz2 \\\n-\t\tTOOL=$(TOOL) PACKAGE=\"$(PACKAGE)\" VER=\"$(VER)\" \\\n-\t\tMD5PROG=\"$(MD5PROG)\" \\\n-\t\tSUPPORT_FILES=\"$(SUPPORT_FILES)\"\n-\n-.PHONY: gdb-tar\n-gdb-tar: $(DEVO_SUPPORT) $(SUPPORT_FILES) texinfo/texinfo.tex\n-\t$(MAKE) -f Makefile.in do-proto-toplev \\\n-\t\tTOOL=$(TOOL) PACKAGE=\"$(PACKAGE)\" VER=\"$(VER)\" \\\n-\t\tMD5PROG=\"$(MD5PROG)\" \\\n-\t\tSUPPORT_FILES=\"$(SUPPORT_FILES)\"\n-\t$(MAKE) -f Makefile.in do-md5sum \\\n-\t\tTOOL=$(TOOL) PACKAGE=\"$(PACKAGE)\" VER=\"$(VER)\" \\\n-\t\tMD5PROG=\"$(MD5PROG)\" \\\n-\t\tSUPPORT_FILES=\"$(SUPPORT_FILES)\"\n-\t$(MAKE) -f Makefile.in do-djunpack \\\n-\t\tTOOL=$(TOOL) PACKAGE=\"$(PACKAGE)\" VER=\"$(VER)\" \\\n-\t\tMD5PROG=\"$(MD5PROG)\" \\\n-\t\tSUPPORT_FILES=\"$(SUPPORT_FILES)\"\n-\t$(MAKE) -f Makefile.in do-tar \\\n-\t\tTOOL=$(TOOL) PACKAGE=\"$(PACKAGE)\" VER=\"$(VER)\" \\\n-\t\tMD5PROG=\"$(MD5PROG)\" \\\n-\t\tSUPPORT_FILES=\"$(SUPPORT_FILES)\"\n-\n-.PHONY: gdb-taz\n-gdb-taz: gdb-tar $(DEVO_SUPPORT) $(SUPPORT_FILES) texinfo/texinfo.tex\n-\t$(MAKE) -f Makefile.in gdb-tar \\\n-\t\tTOOL=$(TOOL) PACKAGE=\"$(PACKAGE)\" VER=\"$(VER)\" \\\n-\t\tMD5PROG=\"$(MD5PROG)\" \\\n-\t\tSUPPORT_FILES=\"$(SUPPORT_FILES)\"\n-\t$(MAKE) -f Makefile.in do-bz2 \\\n-\t\tTOOL=$(TOOL) PACKAGE=\"$(PACKAGE)\" VER=\"$(VER)\" \\\n-\t\tMD5PROG=\"$(MD5PROG)\" \\\n-\t\tSUPPORT_FILES=\"$(SUPPORT_FILES)\"\n-\n-.PHONY: do-proto-toplev\n-do-proto-toplev: $(DEVO_SUPPORT) $(SUPPORT_FILES) texinfo/texinfo.tex\n-\techo \"==> Making $(PACKAGE)-$(VER)/\"\n-\t# Take out texinfo from a few places.\n-\tsed -e '/^all\\.normal: /s/\\all-texinfo //' \\\n-\t    -e '/^\tinstall-texinfo /d' \\\n-\t<Makefile.in >tmp\n-\tmv -f tmp Makefile.in\n-\t#\n-\t./configure sun4\n-\t[ -z \"$(CONFIGURE_TARGET_MODULES)\" ] \\\n-\t  || $(MAKE) $(CONFIGURE_TARGET_MODULES) \\\n-\t    ALL_GCC=\"\" ALL_GCC_C=\"\" ALL_GCC_CXX=\"\" \\\n-\t    CC_FOR_TARGET=\"$(CC)\" CXX_FOR_TARGET=\"$(CXX)\"\n-\t# Make links, and run \"make diststuff\" or \"make info\" when needed.\n-\trm -rf proto-toplev ; mkdir proto-toplev\n-\tset -e ; dirs=\"$(TOOL) $(DEVO_SUPPORT) $(SUPPORT_FILES)\" ; \\\n-\tfor d in $$dirs ; do \\\n-\t  if [ -d $$d ]; then \\\n-\t    if [ ! -f $$d/Makefile ] ; then true ; \\\n-\t    elif grep '^diststuff:' $$d/Makefile >/dev/null ; then \\\n-\t\t(cd $$d ; $(MAKE) diststuff ) || exit 1 ; \\\n-\t    elif grep '^info:' $$d/Makefile >/dev/null ; then \\\n-\t        (cd $$d ; $(MAKE) info ) || exit 1 ; \\\n-\t    fi ; \\\n-\t    if [ -d $$d/proto-$$d.dir ]; then \\\n-\t      ln -s ../$$d/proto-$$d.dir proto-toplev/$$d ; \\\n-\t    else \\\n-\t      ln -s ../$$d proto-toplev/$$d ; \\\n-\t    fi ; \\\n-\t  else ln -s ../$$d proto-toplev/$$d ; fi ; \\\n-\tdone\n-\tcd etc && $(MAKE) info\n-\t$(MAKE) distclean\n-\t#\n-\tmkdir proto-toplev/etc\n-\t(cd proto-toplev/etc; \\\n-\t for i in $(ETC_SUPPORT); do \\\n-\t\tln -s ../../etc/$$i . ; \\\n-\t done)\n-\t#\n-\t# Take out texinfo from configurable dirs\n-\trm proto-toplev/configure.in\n-\tsed -e '/^host_tools=/s/texinfo //' \\\n-\t    <configure.in >proto-toplev/configure.in\n-\t#\n-\tmkdir proto-toplev/texinfo\n-\tln -s ../../texinfo/texinfo.tex\t\tproto-toplev/texinfo/\n-\tif test -r texinfo/util/tex3patch ; then \\\n-\t  mkdir proto-toplev/texinfo/util && \\\n-\t  ln -s ../../../texinfo/util/tex3patch\tproto-toplev/texinfo/util ; \\\n-\telse true; fi\n-\tchmod -R og=u . || chmod og=u `find . -print`\n-\t#\n-\t# Create .gmo files from .po files.\n-\tfor f in `find . -name '*.po' -type f -print`; do \\\n-\t     msgfmt -o `echo $$f | sed -e 's/\\.po$$/.gmo/'` $$f ; \\\n-\tdone\n-\t#\n-\t-rm -f $(PACKAGE)-$(VER)\n-\tln -s proto-toplev $(PACKAGE)-$(VER)\n-\n-.PHONY: do-tar\n-do-tar:\n-\techo \"==> Making $(PACKAGE)-$(VER).tar\"\n-\t-rm -f $(PACKAGE)-$(VER).tar\n-\tfind $(PACKAGE)-$(VER) -follow -name CVS -prune -o -type f -print \\\n-\t\t| tar cTfh - $(PACKAGE)-$(VER).tar\n-\n-.PHONY: do-bz2\n-do-bz2:\n-\techo \"==> Bzipping $(PACKAGE)-$(VER).tar.bz2\"\n-\t-rm -f $(PACKAGE)-$(VER).tar.bz2\n-\t$(BZIPPROG) -v -9 $(PACKAGE)-$(VER).tar\n-\n-.PHONY: do-md5sum\n-do-md5sum:\n-\techo \"==> Adding md5 checksum to top-level directory\"\n-\tcd proto-toplev && find * -follow -name CVS -prune -o -type f -print \\\n-\t\t| xargs $(MD5PROG) > ../md5.sum\n-\tmv md5.sum proto-toplev\n-\n-.PHONY: do-djunpack\n-do-djunpack:\n-\techo \"==> Adding updated djunpack.bat to top-level directory\"\n-\techo - 's /gdb-[0-9\\.]*/gdb-'\"$(VER)\"'/'\n-\tsed < djunpack.bat > djunpack.new \\\n-\t\t-e 's/gdb-[0-9][0-9\\.]*/gdb-'\"$(VER)\"'/'\n-\tmv djunpack.new djunpack.bat\n-\t-rm -f proto-toplev/djunpack.bat\n-\tln -s ../djunpack.bat proto-toplev/djunpack.bat\n-\n-TEXINFO_SUPPORT= texinfo/texinfo.tex\n-DIST_SUPPORT= $(DEVO_SUPPORT) $(TEXINFO_SUPPORT)\n-\n-.PHONY: gas.tar.bz2\n-GAS_SUPPORT_DIRS= bfd include libiberty opcodes intl setup.com makefile.vms mkdep\n-gas.tar.bz2: $(DIST_SUPPORT) $(GAS_SUPPORT_DIRS) gas\n-\t$(MAKE) -f Makefile.in taz TOOL=gas \\\n-\t\tMD5PROG=\"$(MD5PROG)\" \\\n-\t\tSUPPORT_FILES=\"$(GAS_SUPPORT_DIRS)\"\n-\n-# The FSF \"binutils\" release includes gprof and ld.\n-.PHONY: binutils.tar.bz2\n-BINUTILS_SUPPORT_DIRS= bfd gas include libiberty opcodes ld gprof intl setup.com makefile.vms mkdep\n-binutils.tar.bz2: $(DIST_SUPPORT) $(BINUTILS_SUPPORT_DIRS) binutils\n-\t$(MAKE) -f Makefile.in taz TOOL=binutils \\\n-\t\tMD5PROG=\"$(MD5PROG)\" \\\n-\t\tSUPPORT_FILES=\"$(BINUTILS_SUPPORT_DIRS)\"\n-\n-.PHONY: gas+binutils.tar.bz2\n-GASB_SUPPORT_DIRS= $(GAS_SUPPORT_DIRS) binutils ld gprof\n-gas+binutils.tar.bz2: $(DIST_SUPPORT) $(GASB_SUPPORT_DIRS) gas\n-\t$(MAKE) -f Makefile.in taz TOOL=gas \\\n-\t\tMD5PROG=\"$(MD5PROG)\" \\\n-\t\tSUPPORT_FILES=\"$(GASB_SUPPORT_DIRS)\"\n-\n-GNATS_SUPPORT_DIRS=include libiberty send-pr\n-gnats.tar.bz2: $(DIST_SUPPORT) $(GNATS_SUPPORT_DIRS) gnats\n-\t$(MAKE) -f  Makefile.in taz TOOL=gnats \\\n-\t\tMD5PROG=\"$(MD5PROG)\" \\\n-\t\tSUPPORT_FILES=\"$(GNATS_SUPPORT_DIRS)\"\n-\n-.PHONY: gdb.tar.bz2\n-GDB_SUPPORT_DIRS= bfd include libiberty mmalloc opcodes readline sim utils intl\n-gdb.tar.bz2: $(DIST_SUPPORT) $(GDB_SUPPORT_DIRS) gdb\n-\t$(MAKE) -f Makefile.in gdb-taz TOOL=gdb \\\n-\t\tMD5PROG=\"$(MD5PROG)\" \\\n-\t\tSUPPORT_FILES=\"$(GDB_SUPPORT_DIRS)\"\n-.PHONY: gdb.tar\n-gdb.tar: $(DIST_SUPPORT) $(GDB_SUPPORT_DIRS) gdb\n-\t$(MAKE) -f Makefile.in gdb-tar TOOL=gdb \\\n-\t\tMD5PROG=\"$(MD5PROG)\" \\\n-\t\tSUPPORT_FILES=\"$(GDB_SUPPORT_DIRS)\"\n-\n-DEJAGNU_SUPPORT_DIRS=  tcl expect libiberty\n-.PHONY: dejagnu.tar.bz2\n-dejagnu.tar.bz2: $(DIST_SUPPORT) $(DEJAGNU_SUPPORT_DIRS) dejagnu\n-\t$(MAKE) -f Makefile.in taz TOOL=dejagnu \\\n-\t\tMD5PROG=\"$(MD5PROG)\" \\\n-\t\tSUPPORT_FILES=\"$(DEJAGNU_SUPPORT_DIRS)\"\n-\n-.PHONY: gdb+dejagnu.tar.bz2\n-GDBD_SUPPORT_DIRS= $(GDB_SUPPORT_DIRS) tcl expect dejagnu\n-gdb+dejagnu.tar.bz2: $(DIST_SUPPORT) $(GDBD_SUPPORT_DIRS) gdb\n-\t$(MAKE) -f Makefile.in gdb-taz TOOL=gdb PACKAGE=gdb+dejagnu \\\n-\t\tMD5PROG=\"$(MD5PROG)\" \\\n-\t\tSUPPORT_FILES=\"$(GDBD_SUPPORT_DIRS)\"\n-.PHONY: gdb+dejagnu.tar\n-gdb+dejagnu.tar: $(DIST_SUPPORT) $(GDBD_SUPPORT_DIRS) gdb\n-\t$(MAKE) -f Makefile.in gdb-tar TOOL=gdb PACKAGE=gdb+dejagnu \\\n-\t\tMD5PROG=\"$(MD5PROG)\" \\\n-\t\tSUPPORT_FILES=\"$(GDBD_SUPPORT_DIRS)\"\n-\n-.PHONY: insight.tar.bz2\n-INSIGHT_SUPPORT_DIRS= $(GDB_SUPPORT_DIRS) tcl tk itcl tix libgui\n-insight.tar.bz2: $(DIST_SUPPORT) $(GDB_SUPPORT_DIRS) gdb\n-\t$(MAKE) -f Makefile.in gdb-taz TOOL=gdb PACKAGE=insight \\\n-\t\tMD5PROG=\"$(MD5PROG)\" \\\n-\t\tSUPPORT_FILES=\"$(INSIGHT_SUPPORT_DIRS)\"\n-.PHONY: insight.tar\n-insight.tar: $(DIST_SUPPORT) $(GDB_SUPPORT_DIRS) gdb\n-\t$(MAKE) -f Makefile.in gdb-tar TOOL=gdb PACKAGE=insight \\\n-\t\tMD5PROG=\"$(MD5PROG)\" \\\n-\t\tSUPPORT_FILES=\"$(INSIGHT_SUPPORT_DIRS)\"\n-\n-.PHONY: insight+dejagnu.tar.bz2\n-INSIGHTD_SUPPORT_DIRS= $(INSIGHT_SUPPORT_DIRS) expect dejagnu\n-insight+dejagnu.tar.bz2: $(DIST_SUPPORT) $(INSIGHTD_SUPPORT_DIRS) gdb\n-\t$(MAKE) -f Makefile.in gdb-taz TOOL=gdb PACKAGE=\"insight+dejagnu\" \\\n-\t\tMD5PROG=\"$(MD5PROG)\" \\\n-\t\tSUPPORT_FILES=\"$(INSIGHTD_SUPPORT_DIRS)\"\n-.PHONY: insight+dejagnu.tar\n-insight+dejagnu.tar: $(DIST_SUPPORT) $(INSIGHTD_SUPPORT_DIRS) gdb\n-\t$(MAKE) -f Makefile.in gdb-tar TOOL=gdb PACKAGE=\"insight+dejagnu\" \\\n-\t\tMD5PROG=\"$(MD5PROG)\" \\\n-\t\tSUPPORT_FILES=\"$(INSIGHTD_SUPPORT_DIRS)\"\n-\n-.PHONY: newlib.tar.bz2\n-NEWLIB_SUPPORT_DIRS=libgloss\n-# taz configures for the sun4 target which won't configure newlib.\n-# We need newlib configured so that the .info files are made.\n-# Unfortunately, it is not enough to just configure newlib separately:\n-# taz will build the .info files but since SUBDIRS won't contain newlib,\n-# distclean won't be run (leaving Makefile, config.status, and the tmp files\n-# used in building the .info files, eg: *.def, *.ref).\n-# The problem isn't solvable however without a lot of extra work because\n-# target libraries are built in subdir $(target_alias) which gets nuked during\n-# the make distclean.  For now punt on the issue of shipping newlib info files\n-# with newlib net releases and wait for a day when some native target (sun4?)\n-# supports newlib (if only minimally).\n-newlib.tar.bz2: $(DIST_SUPPORT) $(NEWLIB_SUPPORT_DIRS) newlib\n-\t$(MAKE) -f Makefile.in taz TOOL=newlib \\\n-\t\tMD5PROG=\"$(MD5PROG)\" \\\n-\t\tSUPPORT_FILES=\"$(NEWLIB_SUPPORT_DIRS)\" \\\n-\t\tDEVO_SUPPORT=\"$(DEVO_SUPPORT) COPYING.NEWLIB\" newlib\n \n .NOEXPORT:\n MAKEOVERRIDES="}, {"sha": "3ee59653a94ee0b32f45cc258d43c48e0d7e71fb", "filename": "Makefile.tpl", "status": "modified", "additions": 0, "deletions": 287, "changes": 287, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34c6040cc2988884817aa3b736768f8062699ade/Makefile.tpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34c6040cc2988884817aa3b736768f8062699ade/Makefile.tpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.tpl?ref=34c6040cc2988884817aa3b736768f8062699ade", "patch": "@@ -127,9 +127,6 @@ NM = nm\n \n LD = ld\n \n-BZIPPROG = bzip2\n-MD5PROG = md5sum\n-\n # These values are substituted by configure.\n DEFAULT_YACC = @DEFAULT_YACC@\n DEFAULT_LEX = @DEFAULT_LEX@\n@@ -1508,290 +1505,6 @@ Makefile: Makefile.in configure.in $(host_makefile_frag) $(target_makefile_frag)\n \t$(SHELL) ./config.status\n \n #\n-# Support for building net releases\n-\n-# Files in devo used in any net release.\n-# ChangeLog omitted because it may refer to files which are not in this\n-# distribution (perhaps it would be better to include it anyway).\n-DEVO_SUPPORT= README Makefile.in configure configure.in \\\n-\tconfig.guess config.if config.sub config move-if-change \\\n-\tmpw-README mpw-build.in mpw-config.in mpw-configure mpw-install \\\n-\tCOPYING COPYING.LIB install-sh config-ml.in symlink-tree \\\n-\tmkinstalldirs ltconfig ltmain.sh missing ylwrap \\\n-\tlibtool.m4 gettext.m4 ltcf-c.sh ltcf-cxx.sh ltcf-gcj.sh\n-\n-# Files in devo/etc used in any net release.\n-# ChangeLog omitted because it may refer to files which are not in this\n-# distribution (perhaps it would be better to include it anyway).\n-ETC_SUPPORT= Makefile.in configure configure.in standards.texi \\\n-\tmake-stds.texi standards.info* configure.texi configure.info* \\\n-\tconfigbuild.* configdev.*\n-\n-\n-# When you use `make setup-dirs' or `make taz' you should always redefine\n-# this macro.\n-SUPPORT_FILES = list-of-support-files-for-tool-in-question\n-\n-# NOTE: No double quotes in the below.  It is used within shell script\n-# as VER=\"$(VER)\"\n-VER = `\tif grep 'AM_INIT_AUTOMAKE.*BFD_VERSION' $(TOOL)/configure.in >/dev/null 2>&1; then \\\n-\t  sed < bfd/configure.in -n 's/AM_INIT_AUTOMAKE[^,]*, *\\([^)]*\\))/\\1/p'; \\\n-\telif grep AM_INIT_AUTOMAKE $(TOOL)/configure.in >/dev/null 2>&1; then \\\n-\t  sed < $(TOOL)/configure.in -n 's/AM_INIT_AUTOMAKE[^,]*, *\\([^)]*\\))/\\1/p'; \\\n-\telif test -f $(TOOL)/version.in; then \\\n-\t  head -1 $(TOOL)/version.in; \\\n-\telif grep VERSION $(TOOL)/Makefile.in > /dev/null 2>&1; then \\\n-\t  sed < $(TOOL)/Makefile.in -n 's/^VERSION *= *//p'; \\\n-\telse \\\n-\t  echo VERSION; \\\n-\tfi`\n-PACKAGE = $(TOOL)\n-\n-.PHONY: taz\n-taz: $(DEVO_SUPPORT) $(SUPPORT_FILES) texinfo/texinfo.tex\n-\t$(MAKE) -f Makefile.in do-proto-toplev \\\n-\t\tTOOL=$(TOOL) PACKAGE=\"$(PACKAGE)\" VER=\"$(VER)\" \\\n-\t\tMD5PROG=\"$(MD5PROG)\" \\\n-\t\tSUPPORT_FILES=\"$(SUPPORT_FILES)\"\n-\t$(MAKE) -f Makefile.in do-md5sum \\\n-\t\tTOOL=$(TOOL) PACKAGE=\"$(PACKAGE)\" VER=\"$(VER)\" \\\n-\t\tMD5PROG=\"$(MD5PROG)\" \\\n-\t\tSUPPORT_FILES=\"$(SUPPORT_FILES)\"\n-\t$(MAKE) -f Makefile.in do-tar \\\n-\t\tTOOL=$(TOOL) PACKAGE=\"$(PACKAGE)\" VER=\"$(VER)\" \\\n-\t\tMD5PROG=\"$(MD5PROG)\" \\\n-\t\tSUPPORT_FILES=\"$(SUPPORT_FILES)\"\n-\t$(MAKE) -f Makefile.in do-bz2 \\\n-\t\tTOOL=$(TOOL) PACKAGE=\"$(PACKAGE)\" VER=\"$(VER)\" \\\n-\t\tMD5PROG=\"$(MD5PROG)\" \\\n-\t\tSUPPORT_FILES=\"$(SUPPORT_FILES)\"\n-\n-.PHONY: gdb-tar\n-gdb-tar: $(DEVO_SUPPORT) $(SUPPORT_FILES) texinfo/texinfo.tex\n-\t$(MAKE) -f Makefile.in do-proto-toplev \\\n-\t\tTOOL=$(TOOL) PACKAGE=\"$(PACKAGE)\" VER=\"$(VER)\" \\\n-\t\tMD5PROG=\"$(MD5PROG)\" \\\n-\t\tSUPPORT_FILES=\"$(SUPPORT_FILES)\"\n-\t$(MAKE) -f Makefile.in do-md5sum \\\n-\t\tTOOL=$(TOOL) PACKAGE=\"$(PACKAGE)\" VER=\"$(VER)\" \\\n-\t\tMD5PROG=\"$(MD5PROG)\" \\\n-\t\tSUPPORT_FILES=\"$(SUPPORT_FILES)\"\n-\t$(MAKE) -f Makefile.in do-djunpack \\\n-\t\tTOOL=$(TOOL) PACKAGE=\"$(PACKAGE)\" VER=\"$(VER)\" \\\n-\t\tMD5PROG=\"$(MD5PROG)\" \\\n-\t\tSUPPORT_FILES=\"$(SUPPORT_FILES)\"\n-\t$(MAKE) -f Makefile.in do-tar \\\n-\t\tTOOL=$(TOOL) PACKAGE=\"$(PACKAGE)\" VER=\"$(VER)\" \\\n-\t\tMD5PROG=\"$(MD5PROG)\" \\\n-\t\tSUPPORT_FILES=\"$(SUPPORT_FILES)\"\n-\n-.PHONY: gdb-taz\n-gdb-taz: gdb-tar $(DEVO_SUPPORT) $(SUPPORT_FILES) texinfo/texinfo.tex\n-\t$(MAKE) -f Makefile.in gdb-tar \\\n-\t\tTOOL=$(TOOL) PACKAGE=\"$(PACKAGE)\" VER=\"$(VER)\" \\\n-\t\tMD5PROG=\"$(MD5PROG)\" \\\n-\t\tSUPPORT_FILES=\"$(SUPPORT_FILES)\"\n-\t$(MAKE) -f Makefile.in do-bz2 \\\n-\t\tTOOL=$(TOOL) PACKAGE=\"$(PACKAGE)\" VER=\"$(VER)\" \\\n-\t\tMD5PROG=\"$(MD5PROG)\" \\\n-\t\tSUPPORT_FILES=\"$(SUPPORT_FILES)\"\n-\n-.PHONY: do-proto-toplev\n-do-proto-toplev: $(DEVO_SUPPORT) $(SUPPORT_FILES) texinfo/texinfo.tex\n-\techo \"==> Making $(PACKAGE)-$(VER)/\"\n-\t# Take out texinfo from a few places.\n-\tsed -e '/^all\\.normal: /s/\\all-texinfo //' \\\n-\t    -e '/^\tinstall-texinfo /d' \\\n-\t<Makefile.in >tmp\n-\tmv -f tmp Makefile.in\n-\t#\n-\t./configure sun4\n-\t[ -z \"$(CONFIGURE_TARGET_MODULES)\" ] \\\n-\t  || $(MAKE) $(CONFIGURE_TARGET_MODULES) \\\n-\t    ALL_GCC=\"\" ALL_GCC_C=\"\" ALL_GCC_CXX=\"\" \\\n-\t    CC_FOR_TARGET=\"$(CC)\" CXX_FOR_TARGET=\"$(CXX)\"\n-\t# Make links, and run \"make diststuff\" or \"make info\" when needed.\n-\trm -rf proto-toplev ; mkdir proto-toplev\n-\tset -e ; dirs=\"$(TOOL) $(DEVO_SUPPORT) $(SUPPORT_FILES)\" ; \\\n-\tfor d in $$dirs ; do \\\n-\t  if [ -d $$d ]; then \\\n-\t    if [ ! -f $$d/Makefile ] ; then true ; \\\n-\t    elif grep '^diststuff:' $$d/Makefile >/dev/null ; then \\\n-\t\t(cd $$d ; $(MAKE) diststuff ) || exit 1 ; \\\n-\t    elif grep '^info:' $$d/Makefile >/dev/null ; then \\\n-\t        (cd $$d ; $(MAKE) info ) || exit 1 ; \\\n-\t    fi ; \\\n-\t    if [ -d $$d/proto-$$d.dir ]; then \\\n-\t      ln -s ../$$d/proto-$$d.dir proto-toplev/$$d ; \\\n-\t    else \\\n-\t      ln -s ../$$d proto-toplev/$$d ; \\\n-\t    fi ; \\\n-\t  else ln -s ../$$d proto-toplev/$$d ; fi ; \\\n-\tdone\n-\tcd etc && $(MAKE) info\n-\t$(MAKE) distclean\n-\t#\n-\tmkdir proto-toplev/etc\n-\t(cd proto-toplev/etc; \\\n-\t for i in $(ETC_SUPPORT); do \\\n-\t\tln -s ../../etc/$$i . ; \\\n-\t done)\n-\t#\n-\t# Take out texinfo from configurable dirs\n-\trm proto-toplev/configure.in\n-\tsed -e '/^host_tools=/s/texinfo //' \\\n-\t    <configure.in >proto-toplev/configure.in\n-\t#\n-\tmkdir proto-toplev/texinfo\n-\tln -s ../../texinfo/texinfo.tex\t\tproto-toplev/texinfo/\n-\tif test -r texinfo/util/tex3patch ; then \\\n-\t  mkdir proto-toplev/texinfo/util && \\\n-\t  ln -s ../../../texinfo/util/tex3patch\tproto-toplev/texinfo/util ; \\\n-\telse true; fi\n-\tchmod -R og=u . || chmod og=u `find . -print`\n-\t#\n-\t# Create .gmo files from .po files.\n-\tfor f in `find . -name '*.po' -type f -print`; do \\\n-\t     msgfmt -o `echo $$f | sed -e 's/\\.po$$/.gmo/'` $$f ; \\\n-\tdone\n-\t#\n-\t-rm -f $(PACKAGE)-$(VER)\n-\tln -s proto-toplev $(PACKAGE)-$(VER)\n-\n-.PHONY: do-tar\n-do-tar:\n-\techo \"==> Making $(PACKAGE)-$(VER).tar\"\n-\t-rm -f $(PACKAGE)-$(VER).tar\n-\tfind $(PACKAGE)-$(VER) -follow -name CVS -prune -o -type f -print \\\n-\t\t| tar cTfh - $(PACKAGE)-$(VER).tar\n-\n-.PHONY: do-bz2\n-do-bz2:\n-\techo \"==> Bzipping $(PACKAGE)-$(VER).tar.bz2\"\n-\t-rm -f $(PACKAGE)-$(VER).tar.bz2\n-\t$(BZIPPROG) -v -9 $(PACKAGE)-$(VER).tar\n-\n-.PHONY: do-md5sum\n-do-md5sum:\n-\techo \"==> Adding md5 checksum to top-level directory\"\n-\tcd proto-toplev && find * -follow -name CVS -prune -o -type f -print \\\n-\t\t| xargs $(MD5PROG) > ../md5.sum\n-\tmv md5.sum proto-toplev\n-\n-.PHONY: do-djunpack\n-do-djunpack:\n-\techo \"==> Adding updated djunpack.bat to top-level directory\"\n-\techo - 's /gdb-[0-9\\.]*/gdb-'\"$(VER)\"'/'\n-\tsed < djunpack.bat > djunpack.new \\\n-\t\t-e 's/gdb-[0-9][0-9\\.]*/gdb-'\"$(VER)\"'/'\n-\tmv djunpack.new djunpack.bat\n-\t-rm -f proto-toplev/djunpack.bat\n-\tln -s ../djunpack.bat proto-toplev/djunpack.bat\n-\n-TEXINFO_SUPPORT= texinfo/texinfo.tex\n-DIST_SUPPORT= $(DEVO_SUPPORT) $(TEXINFO_SUPPORT)\n-\n-.PHONY: gas.tar.bz2\n-GAS_SUPPORT_DIRS= bfd include libiberty opcodes intl setup.com makefile.vms mkdep\n-gas.tar.bz2: $(DIST_SUPPORT) $(GAS_SUPPORT_DIRS) gas\n-\t$(MAKE) -f Makefile.in taz TOOL=gas \\\n-\t\tMD5PROG=\"$(MD5PROG)\" \\\n-\t\tSUPPORT_FILES=\"$(GAS_SUPPORT_DIRS)\"\n-\n-# The FSF \"binutils\" release includes gprof and ld.\n-.PHONY: binutils.tar.bz2\n-BINUTILS_SUPPORT_DIRS= bfd gas include libiberty opcodes ld gprof intl setup.com makefile.vms mkdep\n-binutils.tar.bz2: $(DIST_SUPPORT) $(BINUTILS_SUPPORT_DIRS) binutils\n-\t$(MAKE) -f Makefile.in taz TOOL=binutils \\\n-\t\tMD5PROG=\"$(MD5PROG)\" \\\n-\t\tSUPPORT_FILES=\"$(BINUTILS_SUPPORT_DIRS)\"\n-\n-.PHONY: gas+binutils.tar.bz2\n-GASB_SUPPORT_DIRS= $(GAS_SUPPORT_DIRS) binutils ld gprof\n-gas+binutils.tar.bz2: $(DIST_SUPPORT) $(GASB_SUPPORT_DIRS) gas\n-\t$(MAKE) -f Makefile.in taz TOOL=gas \\\n-\t\tMD5PROG=\"$(MD5PROG)\" \\\n-\t\tSUPPORT_FILES=\"$(GASB_SUPPORT_DIRS)\"\n-\n-GNATS_SUPPORT_DIRS=include libiberty send-pr\n-gnats.tar.bz2: $(DIST_SUPPORT) $(GNATS_SUPPORT_DIRS) gnats\n-\t$(MAKE) -f  Makefile.in taz TOOL=gnats \\\n-\t\tMD5PROG=\"$(MD5PROG)\" \\\n-\t\tSUPPORT_FILES=\"$(GNATS_SUPPORT_DIRS)\"\n-\n-.PHONY: gdb.tar.bz2\n-GDB_SUPPORT_DIRS= bfd include libiberty mmalloc opcodes readline sim utils intl\n-gdb.tar.bz2: $(DIST_SUPPORT) $(GDB_SUPPORT_DIRS) gdb\n-\t$(MAKE) -f Makefile.in gdb-taz TOOL=gdb \\\n-\t\tMD5PROG=\"$(MD5PROG)\" \\\n-\t\tSUPPORT_FILES=\"$(GDB_SUPPORT_DIRS)\"\n-.PHONY: gdb.tar\n-gdb.tar: $(DIST_SUPPORT) $(GDB_SUPPORT_DIRS) gdb\n-\t$(MAKE) -f Makefile.in gdb-tar TOOL=gdb \\\n-\t\tMD5PROG=\"$(MD5PROG)\" \\\n-\t\tSUPPORT_FILES=\"$(GDB_SUPPORT_DIRS)\"\n-\n-DEJAGNU_SUPPORT_DIRS=  tcl expect libiberty\n-.PHONY: dejagnu.tar.bz2\n-dejagnu.tar.bz2: $(DIST_SUPPORT) $(DEJAGNU_SUPPORT_DIRS) dejagnu\n-\t$(MAKE) -f Makefile.in taz TOOL=dejagnu \\\n-\t\tMD5PROG=\"$(MD5PROG)\" \\\n-\t\tSUPPORT_FILES=\"$(DEJAGNU_SUPPORT_DIRS)\"\n-\n-.PHONY: gdb+dejagnu.tar.bz2\n-GDBD_SUPPORT_DIRS= $(GDB_SUPPORT_DIRS) tcl expect dejagnu\n-gdb+dejagnu.tar.bz2: $(DIST_SUPPORT) $(GDBD_SUPPORT_DIRS) gdb\n-\t$(MAKE) -f Makefile.in gdb-taz TOOL=gdb PACKAGE=gdb+dejagnu \\\n-\t\tMD5PROG=\"$(MD5PROG)\" \\\n-\t\tSUPPORT_FILES=\"$(GDBD_SUPPORT_DIRS)\"\n-.PHONY: gdb+dejagnu.tar\n-gdb+dejagnu.tar: $(DIST_SUPPORT) $(GDBD_SUPPORT_DIRS) gdb\n-\t$(MAKE) -f Makefile.in gdb-tar TOOL=gdb PACKAGE=gdb+dejagnu \\\n-\t\tMD5PROG=\"$(MD5PROG)\" \\\n-\t\tSUPPORT_FILES=\"$(GDBD_SUPPORT_DIRS)\"\n-\n-.PHONY: insight.tar.bz2\n-INSIGHT_SUPPORT_DIRS= $(GDB_SUPPORT_DIRS) tcl tk itcl tix libgui\n-insight.tar.bz2: $(DIST_SUPPORT) $(GDB_SUPPORT_DIRS) gdb\n-\t$(MAKE) -f Makefile.in gdb-taz TOOL=gdb PACKAGE=insight \\\n-\t\tMD5PROG=\"$(MD5PROG)\" \\\n-\t\tSUPPORT_FILES=\"$(INSIGHT_SUPPORT_DIRS)\"\n-.PHONY: insight.tar\n-insight.tar: $(DIST_SUPPORT) $(GDB_SUPPORT_DIRS) gdb\n-\t$(MAKE) -f Makefile.in gdb-tar TOOL=gdb PACKAGE=insight \\\n-\t\tMD5PROG=\"$(MD5PROG)\" \\\n-\t\tSUPPORT_FILES=\"$(INSIGHT_SUPPORT_DIRS)\"\n-\n-.PHONY: insight+dejagnu.tar.bz2\n-INSIGHTD_SUPPORT_DIRS= $(INSIGHT_SUPPORT_DIRS) expect dejagnu\n-insight+dejagnu.tar.bz2: $(DIST_SUPPORT) $(INSIGHTD_SUPPORT_DIRS) gdb\n-\t$(MAKE) -f Makefile.in gdb-taz TOOL=gdb PACKAGE=\"insight+dejagnu\" \\\n-\t\tMD5PROG=\"$(MD5PROG)\" \\\n-\t\tSUPPORT_FILES=\"$(INSIGHTD_SUPPORT_DIRS)\"\n-.PHONY: insight+dejagnu.tar\n-insight+dejagnu.tar: $(DIST_SUPPORT) $(INSIGHTD_SUPPORT_DIRS) gdb\n-\t$(MAKE) -f Makefile.in gdb-tar TOOL=gdb PACKAGE=\"insight+dejagnu\" \\\n-\t\tMD5PROG=\"$(MD5PROG)\" \\\n-\t\tSUPPORT_FILES=\"$(INSIGHTD_SUPPORT_DIRS)\"\n-\n-.PHONY: newlib.tar.bz2\n-NEWLIB_SUPPORT_DIRS=libgloss\n-# taz configures for the sun4 target which won't configure newlib.\n-# We need newlib configured so that the .info files are made.\n-# Unfortunately, it is not enough to just configure newlib separately:\n-# taz will build the .info files but since SUBDIRS won't contain newlib,\n-# distclean won't be run (leaving Makefile, config.status, and the tmp files\n-# used in building the .info files, eg: *.def, *.ref).\n-# The problem isn't solvable however without a lot of extra work because\n-# target libraries are built in subdir $(target_alias) which gets nuked during\n-# the make distclean.  For now punt on the issue of shipping newlib info files\n-# with newlib net releases and wait for a day when some native target (sun4?)\n-# supports newlib (if only minimally).\n-newlib.tar.bz2: $(DIST_SUPPORT) $(NEWLIB_SUPPORT_DIRS) newlib\n-\t$(MAKE) -f Makefile.in taz TOOL=newlib \\\n-\t\tMD5PROG=\"$(MD5PROG)\" \\\n-\t\tSUPPORT_FILES=\"$(NEWLIB_SUPPORT_DIRS)\" \\\n-\t\tDEVO_SUPPORT=\"$(DEVO_SUPPORT) COPYING.NEWLIB\" newlib\n \n .NOEXPORT:\n MAKEOVERRIDES="}]}