{"sha": "b583eed8656cc4762bf15a3c9fe470b53802a39b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjU4M2VlZDg2NTZjYzQ3NjJiZjE1YTNjOWZlNDcwYjUzODAyYTM5Yg==", "commit": {"author": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1993-07-05T15:35:24Z"}, "committer": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1993-07-05T15:35:24Z"}, "message": "Parameterize libgcc.a and install-libgcc (LIBGCC and INSTALL_LIBGCC).\n\nFrom-SVN: r4843", "tree": {"sha": "c586fe4c539c63fa715641f1b00df92828733e98", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c586fe4c539c63fa715641f1b00df92828733e98"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b583eed8656cc4762bf15a3c9fe470b53802a39b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b583eed8656cc4762bf15a3c9fe470b53802a39b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b583eed8656cc4762bf15a3c9fe470b53802a39b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b583eed8656cc4762bf15a3c9fe470b53802a39b/comments", "author": null, "committer": null, "parents": [{"sha": "e02b99578f39276f5c18f6a310bcb2949508966f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e02b99578f39276f5c18f6a310bcb2949508966f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e02b99578f39276f5c18f6a310bcb2949508966f"}], "stats": {"total": 21, "additions": 13, "deletions": 8}, "files": [{"sha": "a2fdcd17af7d43de60b162b09825a1335367bef1", "filename": "gcc/Makefile.in", "status": "modified", "additions": 13, "deletions": 8, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b583eed8656cc4762bf15a3c9fe470b53802a39b/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b583eed8656cc4762bf15a3c9fe470b53802a39b/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=b583eed8656cc4762bf15a3c9fe470b53802a39b", "patch": "@@ -175,6 +175,11 @@ CLIB=\n # system library.\n OBSTACK=obstack.o\n \n+# Specify the rule for actually making libgcc.a,\n+LIBGCC = libgcc.a\n+# and the rule for installing it.\n+INSTALL_LIBGCC = install-libgcc\n+\n # Specify the rule for actually making libgcc1.a.\n # The value may be empty; that means to do absolutely nothing\n # with or for libgcc1.a.\n@@ -260,7 +265,7 @@ GCC_PASSES=xgcc cc1 cpp $(EXTRA_PASSES)\n \n # List of things which should already be built whenever we try to use xgcc\n # to link anything.\n-GCC_PARTS=$(GCC_PASSES) libgcc.a $(EXTRA_PROGRAMS) $(USE_COLLECT2) $(EXTRA_PARTS)\n+GCC_PARTS=$(GCC_PASSES) $(LIBGCC) $(EXTRA_PROGRAMS) $(USE_COLLECT2) $(EXTRA_PARTS)\n \n # Directory to link to, when using the target `maketest'.\n DIR = ../gcc\n@@ -461,15 +466,15 @@ all.internal: start.encap rest.encap\n # This is what to compile if making a cross-compiler.\n # Note that we can compile enquire using the cross-compiler just build,\n # although we can't run it on this machine.\n-all.cross: native gcc-cross specs libgcc.a stmp-headers cross-test enquire $(EXTRA_PARTS)\n+all.cross: native gcc-cross specs $(LIBGCC) stmp-headers cross-test enquire $(EXTRA_PARTS)\n # This is what to compile if making gcc with a cross-compiler.\n all.build: native xgcc $(EXTRA_PARTS)\n # This is what must be made before installing GCC and converting libraries.\n start.encap: native xgcc specs $(LIBGCC1) xlimits.h\n # Use this to make a GCC that will be used only to recompile GCC.\n-for-bootstrap: start.encap libgcc.a\n+for-bootstrap: start.encap $(LIBGCC)\n # These can't be made, with COFF encapsulation, until after GCC can run.\n-rest.encap: libgcc.a stmp-headers $(EXTRA_PARTS)\n+rest.encap: $(LIBGCC) stmp-headers $(EXTRA_PARTS)\n # This is what is made with the host's compiler\n # whether making a cross compiler or not.\n native: config.status cpp $(LANGUAGES) $(EXTRA_PASSES) $(EXTRA_PROGRAMS) $(USE_COLLECT2)\n@@ -495,11 +500,11 @@ config.status:\n \n # On the target machine, finish building a cross compiler.\n # This does the things that can't be done on the host machine.\n-rest.cross: libgcc.a gfloat.h specs\n+rest.cross: $(LIBGCC) gfloat.h specs\n \n # Verify that it works to compile and link cross-test.\n # If it does, then there are sufficient replacements for libgcc1.a.\n-cross-test: cross-test.o native gcc-cross libgcc.a $(GCC_PARTS)\n+cross-test: cross-test.o native gcc-cross $(LIBGCC) $(GCC_PARTS)\n \t$(GCC_FOR_TARGET) $(GCC_CFLAGS) cross-test.o -o $@\n cross-test.o: cross-test.c native gcc-cross\n \t$(GCC_FOR_TARGET) $(GCC_CFLAGS) $(ALL_CPPFLAGS) -c $(srcdir)/cross-test.c\n@@ -1522,8 +1527,8 @@ realclean: distclean\n install: $(INSTALL_TARGET) ; @true\n \n # Copy the compiler files into directories where they will be run.\n-install-normal: install-common $(INSTALL_HEADERS) install-libgcc install-man \\\n-    install-info\n+install-normal: install-common $(INSTALL_HEADERS) $(INSTALL_LIBGCC) \\\n+    install-man install-info\n \n # Do nothing while making gcc with a cross-compiler. The person who\n # makes gcc for the target machine has to know how to put a complete"}]}