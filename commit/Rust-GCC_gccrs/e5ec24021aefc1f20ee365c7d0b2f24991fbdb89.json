{"sha": "e5ec24021aefc1f20ee365c7d0b2f24991fbdb89", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTVlYzI0MDIxYWVmYzFmMjBlZTM2NWM3ZDBiMmYyNDk5MWZiZGI4OQ==", "commit": {"author": {"name": "Zack Weinberg", "email": "zack@wolery.cumb.org", "date": "2000-06-20T22:42:18Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2000-06-20T22:42:18Z"}, "message": "cpplex.c (parse_name): Don't warn about $ in identifiers if skipping.\n\n\t* cpplex.c (parse_name): Don't warn about $ in identifiers if\n\tskipping.\n\n\t* Makefile.in: Remove all references to HOST_INTLLIBS.\n\n\t* cp/method.c: Don't include hard-reg-set.h.\n\nFrom-SVN: r34621", "tree": {"sha": "208cdf25f1ec20be16836ab88dda3d96bd03a662", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/208cdf25f1ec20be16836ab88dda3d96bd03a662"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e5ec24021aefc1f20ee365c7d0b2f24991fbdb89", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5ec24021aefc1f20ee365c7d0b2f24991fbdb89", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e5ec24021aefc1f20ee365c7d0b2f24991fbdb89", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5ec24021aefc1f20ee365c7d0b2f24991fbdb89/comments", "author": null, "committer": null, "parents": [{"sha": "5f8f47513fd565e41816b5419054b229878393a8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f8f47513fd565e41816b5419054b229878393a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f8f47513fd565e41816b5419054b229878393a8"}], "stats": {"total": 23, "additions": 17, "deletions": 6}, "files": [{"sha": "2ae556a313beaefc9cf53c79d263f5aad20d4838", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5ec24021aefc1f20ee365c7d0b2f24991fbdb89/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5ec24021aefc1f20ee365c7d0b2f24991fbdb89/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e5ec24021aefc1f20ee365c7d0b2f24991fbdb89", "patch": "@@ -1,3 +1,10 @@\n+2000-06-20  Zack Weinberg  <zack@wolery.cumb.org>\n+\n+\t* Makefile.in: Remove all references to HOST_INTLLIBS.\n+\n+\t* cpplex.c (parse_name): Don't warn about $ in identifiers if\n+\tskipping.\n+\n 2000-06-20  Philipp Thomas  <pthomas@suse.de>\n \n \t* config/pa/pa.h(TARGET_SWITCHES): Require binutils 2.10 or later"}, {"sha": "ae9c6fb8dc8e1549dff8050bfaaf43d2bc0ba425", "filename": "gcc/Makefile.in", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5ec24021aefc1f20ee365c7d0b2f24991fbdb89/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5ec24021aefc1f20ee365c7d0b2f24991fbdb89/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=e5ec24021aefc1f20ee365c7d0b2f24991fbdb89", "patch": "@@ -469,7 +469,6 @@ HOST_PREFIX_1=loser-\n HOST_CC=$(CC)\n HOST_CFLAGS=$(ALL_CFLAGS)\n HOST_CLIB=$(CLIB)\n-HOST_INTLLIBS=$(INTLLIBS)\n HOST_LDFLAGS=$(LDFLAGS)\n HOST_CPPFLAGS=$(ALL_CPPFLAGS)\n HOST_ALLOCA=$(ALLOCA)\n@@ -577,7 +576,7 @@ LIBDEPS= $(INTLLIBS) $(OBSTACK) $(ALLOCA) $(MALLOC) $(VFPRINTF) $(DOPRINT)\n # Likewise, for use in the tools that must run on this machine\n # even if we are cross-building GCC.\n # We don't use USE_ALLOCA because backquote expansion doesn't work in deps.\n-HOST_LIBDEPS= $(HOST_PREFIX)$(HOST_INTLLIBS) $(HOST_PREFIX)$(HOST_OBSTACK) $(HOST_PREFIX)$(HOST_ALLOCA) $(HOST_PREFIX)$(HOST_MALLOC) $(HOST_PREFIX)$(HOST_VFPRINTF) $(HOST_PREFIX)$(HOST_DOPRINT)\n+HOST_LIBDEPS= $(HOST_PREFIX)$(HOST_OBSTACK) $(HOST_PREFIX)$(HOST_ALLOCA) $(HOST_PREFIX)$(HOST_MALLOC) $(HOST_PREFIX)$(HOST_VFPRINTF) $(HOST_PREFIX)$(HOST_DOPRINT)\n \n # How to link with both our special library facilities\n # and the system's installed libraries.\n@@ -586,8 +585,7 @@ LIBS = $(OBSTACK) $(USE_ALLOCA) $(MALLOC) $(INTLLIBS) @LIBS@ $(VFPRINTF) $(DOPRI\n # Likewise, for use in the tools that must run on this machine\n # even if we are cross-building GCC.\n HOST_LIBS = $(USE_HOST_OBSTACK) $(USE_HOST_ALLOCA) $(USE_HOST_MALLOC)  \\\n-\t    $(HOST_INTLLIBS) $(USE_HOST_VFPRINTF) $(USE_HOST_DOPRINT) \\\n-\t    $(HOST_CLIB)\n+\t    $(USE_HOST_VFPRINTF) $(USE_HOST_DOPRINT) $(HOST_CLIB)\n \n HOST_RTL = $(HOST_PREFIX)rtl.o $(HOST_PREFIX)bitmap.o \\\n \t\t$(HOST_PREFIX)ggc-none.o gensupport.o"}, {"sha": "1c53f0d239089f2257a7643cabb5efaa2f062117", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5ec24021aefc1f20ee365c7d0b2f24991fbdb89/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5ec24021aefc1f20ee365c7d0b2f24991fbdb89/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=e5ec24021aefc1f20ee365c7d0b2f24991fbdb89", "patch": "@@ -1,3 +1,7 @@\n+2000-06-20  Zack Weinberg  <zack@wolery.cumb.org>\n+\n+\t* method.c: Don't include hard-reg-set.h.\n+\n 2000-06-20  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* rtti.c (get_base_offset): Cope when vbase field is in a base."}, {"sha": "04685d45fe3e92e11c623be64a188addc9eafec0", "filename": "gcc/cp/method.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5ec24021aefc1f20ee365c7d0b2f24991fbdb89/gcc%2Fcp%2Fmethod.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5ec24021aefc1f20ee365c7d0b2f24991fbdb89/gcc%2Fcp%2Fmethod.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmethod.c?ref=e5ec24021aefc1f20ee365c7d0b2f24991fbdb89", "patch": "@@ -31,7 +31,6 @@ Boston, MA 02111-1307, USA.  */\n #include \"rtl.h\"\n #include \"expr.h\"\n #include \"output.h\"\n-#include \"hard-reg-set.h\"\n #include \"flags.h\"\n #include \"toplev.h\"\n #include \"ggc.h\""}, {"sha": "4a159aa89c1a962563373c65187cfdef0443ebdd", "filename": "gcc/cpplex.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5ec24021aefc1f20ee365c7d0b2f24991fbdb89/gcc%2Fcpplex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5ec24021aefc1f20ee365c7d0b2f24991fbdb89/gcc%2Fcpplex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcpplex.c?ref=e5ec24021aefc1f20ee365c7d0b2f24991fbdb89", "patch": "@@ -1096,7 +1096,10 @@ _cpp_parse_name (pfile, c)\n \t  break;\n       }\n \n-      if (c == '$' && CPP_PEDANTIC (pfile))\n+      /* $ is not a legal identifier character in the standard, but is\n+\t commonly accepted as an extension.  Don't warn about it in\n+\t skipped conditional blocks. */\n+      if (c == '$' && CPP_PEDANTIC (pfile) && ! pfile->skipping)\n \tcpp_pedwarn (pfile, \"`$' in identifier\");\n \n       CPP_RESERVE(pfile, 2); /* One more for final NUL.  */"}]}