{"sha": "f340142b839ca1ed576013b4dba3d34245bac7d0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjM0MDE0MmI4MzljYTFlZDU3NjAxM2I0ZGJhM2QzNDI0NWJhYzdkMA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2019-11-05T11:00:24Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2019-11-05T11:00:24Z"}, "message": "re PR tree-optimization/92324 (ICE in expand_direct_optab_fn, at internal-fn.c:2890)\n\n2019-11-05  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/92324\n\t* tree-vect-loop.c (check_reduction_path): For MIN/MAX require\n\tall signed or unsigned operations.\n\n\t* gcc.dg/vect/pr92324-3.c: New testcase.\n\nFrom-SVN: r277822", "tree": {"sha": "c14ff685b2062175664a66789b40fb313c6efa3e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c14ff685b2062175664a66789b40fb313c6efa3e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f340142b839ca1ed576013b4dba3d34245bac7d0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f340142b839ca1ed576013b4dba3d34245bac7d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f340142b839ca1ed576013b4dba3d34245bac7d0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f340142b839ca1ed576013b4dba3d34245bac7d0/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a895e6d72d763d3fc090ec852d405a07a61d01f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a895e6d72d763d3fc090ec852d405a07a61d01f4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a895e6d72d763d3fc090ec852d405a07a61d01f4"}], "stats": {"total": 51, "additions": 50, "deletions": 1}, "files": [{"sha": "562b69d1aabd653a5922a26dc7073fc27cac5591", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f340142b839ca1ed576013b4dba3d34245bac7d0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f340142b839ca1ed576013b4dba3d34245bac7d0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f340142b839ca1ed576013b4dba3d34245bac7d0", "patch": "@@ -1,3 +1,9 @@\n+2019-11-05  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/92324\n+\t* tree-vect-loop.c (check_reduction_path): For MIN/MAX require\n+\tall signed or unsigned operations.\n+\n 2019-11-05  Jan Hubicka  <jh@suse.cz>\n \n \t* hsa-brig.c: Include alloc-pool.h"}, {"sha": "1e372eb4a0f691f1a0c177a8f9c475c1d17cd77c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f340142b839ca1ed576013b4dba3d34245bac7d0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f340142b839ca1ed576013b4dba3d34245bac7d0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f340142b839ca1ed576013b4dba3d34245bac7d0", "patch": "@@ -1,3 +1,8 @@\n+2019-11-05  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/92324\n+\t* gcc.dg/vect/pr92324-3.c: New testcase.\n+\n 2019-11-05  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/91945"}, {"sha": "db5c399d4ff3596950ec8319050f577fa269b220", "filename": "gcc/testsuite/gcc.dg/vect/pr92324-3.c", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f340142b839ca1ed576013b4dba3d34245bac7d0/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr92324-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f340142b839ca1ed576013b4dba3d34245bac7d0/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr92324-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr92324-3.c?ref=f340142b839ca1ed576013b4dba3d34245bac7d0", "patch": "@@ -0,0 +1,27 @@\n+#include \"tree-vect.h\"\n+\n+int a[1024];\n+unsigned b[1024];\n+\n+int __attribute__((noipa))\n+foo (int n)\n+{\n+  int res = 0;\n+  for (int i = 0; i < n; ++i)\n+    {\n+      res = res > a[i] ? res : a[i];\n+      res = res > b[i] ? res : b[i];\n+    }\n+  return res;\n+}\n+\n+int main ()\n+{\n+  check_vect ();\n+  b[3] = (unsigned)__INT_MAX__ + 1;\n+  if (foo (4) != -__INT_MAX__ - 1)\n+    __builtin_abort ();\n+  return 0;\n+}\n+\n+/* { dg-final { scan-tree-dump-not \"vectorized \\[1-9\\] loops\" \"vect\" } } */"}, {"sha": "3448b55fa1b14d8796b6bf411611a494e8e85938", "filename": "gcc/tree-vect-loop.c", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f340142b839ca1ed576013b4dba3d34245bac7d0/gcc%2Ftree-vect-loop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f340142b839ca1ed576013b4dba3d34245bac7d0/gcc%2Ftree-vect-loop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-loop.c?ref=f340142b839ca1ed576013b4dba3d34245bac7d0", "patch": "@@ -2740,6 +2740,7 @@ check_reduction_path (dump_user_location_t loc, loop_p loop, gphi *phi,\n   /* Check whether the reduction path detected is valid.  */\n   bool fail = path.length () == 0;\n   bool neg = false;\n+  int sign = -1;\n   *code = ERROR_MARK;\n   for (unsigned i = 1; i < path.length (); ++i)\n     {\n@@ -2783,12 +2784,22 @@ check_reduction_path (dump_user_location_t loc, loop_p loop, gphi *phi,\n \t\t\t\t    TREE_TYPE (gimple_assign_rhs1 (use_stmt))))\n \t;\n       else if (*code == ERROR_MARK)\n-\t*code = use_code;\n+\t{\n+\t  *code = use_code;\n+\t  sign = TYPE_SIGN (TREE_TYPE (gimple_assign_lhs (use_stmt)));\n+\t}\n       else if (use_code != *code)\n \t{\n \t  fail = true;\n \t  break;\n \t}\n+      else if ((use_code == MIN_EXPR\n+\t\t|| use_code == MAX_EXPR)\n+\t       && sign != TYPE_SIGN (TREE_TYPE (gimple_assign_lhs (use_stmt))))\n+\t{\n+\t  fail = true;\n+\t  break;\n+\t}\n     }\n   return ! fail && ! neg && *code != ERROR_MARK;\n }"}]}