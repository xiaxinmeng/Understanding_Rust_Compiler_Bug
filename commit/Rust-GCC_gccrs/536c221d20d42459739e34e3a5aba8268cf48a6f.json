{"sha": "536c221d20d42459739e34e3a5aba8268cf48a6f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTM2YzIyMWQyMGQ0MjQ1OTczOWUzNGUzYTVhYmE4MjY4Y2Y0OGE2Zg==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2017-01-25T15:01:05Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2017-01-25T15:01:05Z"}, "message": "PR libstdc++/70607 make proj(T) and conj(T) return complex<T>\n\n\tPR libstdc++/61791\n\tPR libstdc++/70607\n\t* include/std/complex (real(T), imag(T)): Add _GLIBCXX_CONSTEXPR.\n\t(proj(T), conj(T)): Change return types per DR 1522.\n\t* include/tr1/complex (conj): Remove overloads and use std::conj.\n\t* testsuite/26_numerics/complex/dr781_dr1137.cc: Rename to...\n\t* testsuite/26_numerics/complex/dr781.cc: ... this, and update.\n\t* testsuite/26_numerics/complex/value_operations/constexpr2.cc: Test\n\treal(T) and imag(T). Allow testing for C++11 too.\n\nFrom-SVN: r244900", "tree": {"sha": "493bd6545f0a7185424b11d26531ab57a6d3096f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/493bd6545f0a7185424b11d26531ab57a6d3096f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/536c221d20d42459739e34e3a5aba8268cf48a6f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/536c221d20d42459739e34e3a5aba8268cf48a6f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/536c221d20d42459739e34e3a5aba8268cf48a6f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/536c221d20d42459739e34e3a5aba8268cf48a6f/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a5d6927fef24c2cae73e473f8c997631eeb63152", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5d6927fef24c2cae73e473f8c997631eeb63152", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5d6927fef24c2cae73e473f8c997631eeb63152"}], "stats": {"total": 75, "additions": 48, "deletions": 27}, "files": [{"sha": "41b5d785e3294fa29cdc47283ea111b7199e6704", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/536c221d20d42459739e34e3a5aba8268cf48a6f/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/536c221d20d42459739e34e3a5aba8268cf48a6f/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=536c221d20d42459739e34e3a5aba8268cf48a6f", "patch": "@@ -1,3 +1,15 @@\n+2017-01-25  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/61791\n+\tPR libstdc++/70607\n+\t* include/std/complex (real(T), imag(T)): Add _GLIBCXX_CONSTEXPR.\n+\t(proj(T), conj(T)): Change return types per DR 1522.\n+\t* include/tr1/complex (conj): Remove overloads and use std::conj.\n+\t* testsuite/26_numerics/complex/dr781_dr1137.cc: Rename to...\n+\t* testsuite/26_numerics/complex/dr781.cc: ... this, and update.\n+\t* testsuite/26_numerics/complex/value_operations/constexpr2.cc: Test\n+\treal(T) and imag(T). Allow testing for C++11 too.\n+\n 2017-01-24  Jonathan Wakely  <jwakely@redhat.com>\n \n \tPR libstdc++/79206"}, {"sha": "6342c98e88aee31a26f4680dd4e8523755b7fd17", "filename": "libstdc++-v3/include/std/complex", "status": "modified", "additions": 12, "deletions": 7, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/536c221d20d42459739e34e3a5aba8268cf48a6f/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcomplex", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/536c221d20d42459739e34e3a5aba8268cf48a6f/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcomplex", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcomplex?ref=536c221d20d42459739e34e3a5aba8268cf48a6f", "patch": "@@ -1840,7 +1840,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     }\n \n   template<typename _Tp>\n-    inline typename __gnu_cxx::__promote<_Tp>::__type\n+    _GLIBCXX_CONSTEXPR inline typename __gnu_cxx::__promote<_Tp>::__type\n     imag(_Tp)\n     { return _Tp(); }\n \n@@ -1853,7 +1853,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     }\n \n   template<typename _Tp>\n-    inline typename __gnu_cxx::__promote<_Tp>::__type\n+    _GLIBCXX_CONSTEXPR inline typename __gnu_cxx::__promote<_Tp>::__type\n     real(_Tp __x)\n     { return __x; }\n \n@@ -1921,16 +1921,21 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     { return __complex_proj(__z); }\n #endif\n \n-  // DR 1137.\n   template<typename _Tp>\n-    inline typename __gnu_cxx::__promote<_Tp>::__type\n+    inline std::complex<typename __gnu_cxx::__promote<_Tp>::__type>\n     proj(_Tp __x)\n-    { return __x; }\n+    {\n+      typedef typename __gnu_cxx::__promote<_Tp>::__type __type;\n+      return std::proj(std::complex<__type>(__x));\n+    }\n \n   template<typename _Tp>\n-    inline typename __gnu_cxx::__promote<_Tp>::__type\n+    inline std::complex<typename __gnu_cxx::__promote<_Tp>::__type>\n     conj(_Tp __x)\n-    { return __x; }\n+    {\n+      typedef typename __gnu_cxx::__promote<_Tp>::__type __type;\n+      return std::complex<__type>(__x, -__type());\n+    }\n \n _GLIBCXX_END_NAMESPACE_VERSION\n "}, {"sha": "06f9ab0fcd8f34e321e8c03a8907619630c0ff52", "filename": "libstdc++-v3/include/tr1/complex", "status": "modified", "additions": 1, "deletions": 11, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/536c221d20d42459739e34e3a5aba8268cf48a6f/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fcomplex", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/536c221d20d42459739e34e3a5aba8268cf48a6f/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fcomplex", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fcomplex?ref=536c221d20d42459739e34e3a5aba8268cf48a6f", "patch": "@@ -371,17 +371,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     }\n \n   using std::arg;\n-\n-  template<typename _Tp>\n-    inline std::complex<_Tp>\n-    conj(const std::complex<_Tp>& __z)\n-    { return std::conj(__z); }  \n-\n-  template<typename _Tp>\n-    inline std::complex<typename __gnu_cxx::__promote<_Tp>::__type>\n-    conj(_Tp __x)\n-    { return __x; }\n-\n+  using std::conj;\n   using std::imag;\n   using std::norm;\n   using std::polar;"}, {"sha": "3fb6cd1022f684fd4192c4e0efabe9971aabf210", "filename": "libstdc++-v3/testsuite/26_numerics/complex/dr781.cc", "status": "renamed", "additions": 20, "deletions": 8, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/536c221d20d42459739e34e3a5aba8268cf48a6f/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fcomplex%2Fdr781.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/536c221d20d42459739e34e3a5aba8268cf48a6f/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fcomplex%2Fdr781.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fcomplex%2Fdr781.cc?ref=536c221d20d42459739e34e3a5aba8268cf48a6f", "patch": "@@ -24,6 +24,7 @@\n \n // DR 781. std::complex should add missing C99 functions.\n // DR 1137. Return type of conj and proj.\n+// 1522. conj specification is now nonsense\n void test01()\n {\n   using __gnu_test::check_ret_type;\n@@ -45,21 +46,32 @@ void test01()\n   check_ret_type<cmplx_d_type>(std::proj(c_d1));\n   check_ret_type<cmplx_ld_type>(std::proj(c_ld1));\n \n-  check_ret_type<float>(std::proj(f1));\n-  check_ret_type<double>(std::proj(d1));\n-  check_ret_type<double>(std::proj(i1));\n+  check_ret_type<cmplx_f_type>(std::proj(f1));\n+  check_ret_type<cmplx_d_type>(std::proj(d1));\n+  check_ret_type<cmplx_d_type>(std::proj(i1));\n+  check_ret_type<cmplx_ld_type>(std::proj(ld1));\n+\n+  VERIFY( std::proj(f1) == std::proj(cmplx_f_type(f1)) );\n+  VERIFY( std::proj(d1) == std::proj(cmplx_d_type(d1)) );\n+  VERIFY( std::proj(ld1) == std::proj(cmplx_ld_type(ld1)) );\n   VERIFY( std::proj(i1) == std::proj(double(i1)) );\n-  check_ret_type<long double>(std::proj(ld1));\n \n   check_ret_type<cmplx_f_type>(std::conj(c_f1));\n   check_ret_type<cmplx_d_type>(std::conj(c_d1));\n   check_ret_type<cmplx_ld_type>(std::conj(c_ld1));\n \n-  check_ret_type<float>(std::conj(f1));\n-  check_ret_type<double>(std::conj(d1));\n-  check_ret_type<double>(std::conj(i1));\n+  check_ret_type<cmplx_f_type>(std::conj(f1));\n+  check_ret_type<cmplx_d_type>(std::conj(d1));\n+  check_ret_type<cmplx_d_type>(std::conj(i1));\n+  check_ret_type<cmplx_ld_type>(std::conj(ld1));\n+\n+  VERIFY( std::conj(f1) == std::conj(cmplx_f_type(f1)) );\n+  VERIFY( std::conj(d1) == std::conj(cmplx_d_type(d1)) );\n+  VERIFY( std::conj(ld1) == std::conj(cmplx_ld_type(ld1)) );\n   VERIFY( std::conj(i1) == std::conj(double(i1)) );\n-  check_ret_type<long double>(std::conj(ld1));\n+  VERIFY( std::signbit(std::conj(f1).imag()) );\n+  VERIFY( std::signbit(std::conj(d1).imag()) );\n+  VERIFY( std::signbit(std::conj(ld1).imag()) );\n }\n \n int main()", "previous_filename": "libstdc++-v3/testsuite/26_numerics/complex/dr781_dr1137.cc"}, {"sha": "c6e91c28c19dc7dc5bcaeb2f67e66f5635ccad2d", "filename": "libstdc++-v3/testsuite/26_numerics/complex/value_operations/constexpr2.cc", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/536c221d20d42459739e34e3a5aba8268cf48a6f/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fcomplex%2Fvalue_operations%2Fconstexpr2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/536c221d20d42459739e34e3a5aba8268cf48a6f/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fcomplex%2Fvalue_operations%2Fconstexpr2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fcomplex%2Fvalue_operations%2Fconstexpr2.cc?ref=536c221d20d42459739e34e3a5aba8268cf48a6f", "patch": "@@ -1,4 +1,4 @@\n-// { dg-do compile { target c++14 } }\n+// { dg-do compile { target c++11 } }\n \n // Copyright (C) 2014-2017 Free Software Foundation, Inc.\n //\n@@ -24,4 +24,6 @@ int main()\n   constexpr std::complex<int> c{};\n   constexpr auto r __attribute__((unused)) = real(c);\n   constexpr auto i __attribute__((unused)) = imag(c);\n+  constexpr double r2 __attribute__((unused)) = std::real(0.0);\n+  constexpr double i2 __attribute__((unused)) = std::imag(0.0);\n }"}]}