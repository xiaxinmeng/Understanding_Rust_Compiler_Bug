{"sha": "d7c3000147c1d8090f66a2baf4623d2c0dfe8eb6", "node_id": "C_kwDOANBUbNoAKGQ3YzMwMDAxNDdjMWQ4MDkwZjY2YTJiYWY0NjIzZDJjMGRmZThlYjY", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2022-08-18T23:01:01Z"}, "committer": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2022-08-18T23:01:01Z"}, "message": "preprocessor: Support #warning for standard C2x\n\nISO C2x standardizes the existing #warning extension.  Arrange\naccordingly for it not to be diagnosed with -std=c2x -pedantic, but to\nbe diagnosed with -Wc11-c2x-compat.\n\nBootstrapped with no regressions for x86_64-pc-linux-gnu.\n\ngcc/testsuite/\n\t* gcc.dg/cpp/c11-warning-1.c, gcc.dg/cpp/c11-warning-2.c,\n\tgcc.dg/cpp/c11-warning-3.c, gcc.dg/cpp/c11-warning-4.c,\n\tgcc.dg/cpp/c2x-warning-1.c, gcc.dg/cpp/c2x-warning-2.c,\n\tgcc.dg/cpp/gnu11-warning-1.c, gcc.dg/cpp/gnu11-warning-2.c,\n\tgcc.dg/cpp/gnu11-warning-3.c, gcc.dg/cpp/gnu11-warning-4.c,\n\tgcc.dg/cpp/gnu2x-warning-1.c, gcc.dg/cpp/gnu2x-warning-2.c: New\n\ttests.\n\nlibcpp/\n\t* include/cpplib.h (struct cpp_options): Add warning_directive.\n\t* init.cc (struct lang_flags, lang_defaults): Add\n\twarning_directive.\n\t* directives.cc (DIRECTIVE_TABLE): Mark #warning as STDC2X not\n\tEXTENSION.\n\t(directive_diagnostics): Diagnose #warning with -Wc11-c2x-compat,\n\tor with -pedantic for a standard not supporting #warning.", "tree": {"sha": "bd7d06ce9c89f25ee43e73644ed143f5947147a7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bd7d06ce9c89f25ee43e73644ed143f5947147a7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d7c3000147c1d8090f66a2baf4623d2c0dfe8eb6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7c3000147c1d8090f66a2baf4623d2c0dfe8eb6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7c3000147c1d8090f66a2baf4623d2c0dfe8eb6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7c3000147c1d8090f66a2baf4623d2c0dfe8eb6/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8731aa98674eda56425ffd652918ce4979631f67", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8731aa98674eda56425ffd652918ce4979631f67", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8731aa98674eda56425ffd652918ce4979631f67"}], "stats": {"total": 136, "additions": 110, "deletions": 26}, "files": [{"sha": "45d1ff874e99adbab4d1979c038032f00c976e68", "filename": "gcc/testsuite/gcc.dg/cpp/c11-warning-1.c", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7c3000147c1d8090f66a2baf4623d2c0dfe8eb6/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fc11-warning-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7c3000147c1d8090f66a2baf4623d2c0dfe8eb6/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fc11-warning-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fc11-warning-1.c?ref=d7c3000147c1d8090f66a2baf4623d2c0dfe8eb6", "patch": "@@ -0,0 +1,6 @@\n+/* Test #warning not in C11.  */\n+/* { dg-do preprocess } */\n+/* { dg-options \"-std=c11 -pedantic-errors\" } */\n+\n+#warning example text /* { dg-warning \"example text\" } */\n+/* { dg-error \"#warning before C2X is a GCC extension\" \"pedantic\" { target *-*-* } .-1 } */"}, {"sha": "ba385bf60fb584812c0d989b548b6b80cf58b78e", "filename": "gcc/testsuite/gcc.dg/cpp/c11-warning-2.c", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7c3000147c1d8090f66a2baf4623d2c0dfe8eb6/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fc11-warning-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7c3000147c1d8090f66a2baf4623d2c0dfe8eb6/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fc11-warning-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fc11-warning-2.c?ref=d7c3000147c1d8090f66a2baf4623d2c0dfe8eb6", "patch": "@@ -0,0 +1,6 @@\n+/* Test #warning not in C11.  */\n+/* { dg-do preprocess } */\n+/* { dg-options \"-std=c11 -pedantic\" } */\n+\n+#warning example text /* { dg-warning \"example text\" } */\n+/* { dg-warning \"#warning before C2X is a GCC extension\" \"pedantic\" { target *-*-* } .-1 } */"}, {"sha": "8d74fcdaea4c7f4c052be91c60c5957a73cec623", "filename": "gcc/testsuite/gcc.dg/cpp/c11-warning-3.c", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7c3000147c1d8090f66a2baf4623d2c0dfe8eb6/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fc11-warning-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7c3000147c1d8090f66a2baf4623d2c0dfe8eb6/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fc11-warning-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fc11-warning-3.c?ref=d7c3000147c1d8090f66a2baf4623d2c0dfe8eb6", "patch": "@@ -0,0 +1,6 @@\n+/* Test #warning not in C11.  */\n+/* { dg-do preprocess } */\n+/* { dg-options \"-std=c11 -Wc11-c2x-compat\" } */\n+\n+#warning example text /* { dg-warning \"example text\" } */\n+/* { dg-warning \"#warning before C2X is a GCC extension\" \"compat\" { target *-*-* } .-1 } */"}, {"sha": "0af93f3f45931c937faafbb7f44c97083d2ec654", "filename": "gcc/testsuite/gcc.dg/cpp/c11-warning-4.c", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7c3000147c1d8090f66a2baf4623d2c0dfe8eb6/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fc11-warning-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7c3000147c1d8090f66a2baf4623d2c0dfe8eb6/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fc11-warning-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fc11-warning-4.c?ref=d7c3000147c1d8090f66a2baf4623d2c0dfe8eb6", "patch": "@@ -0,0 +1,6 @@\n+/* Test #warning not in C11.  */\n+/* { dg-do preprocess } */\n+/* { dg-options \"-std=c11\" } */\n+\n+#warning example text /* { dg-warning \"example text\" } */\n+/* Not diagnosed by default.  */"}, {"sha": "696a0cd7aada06d18a67bc108b51b2328983a833", "filename": "gcc/testsuite/gcc.dg/cpp/c2x-warning-1.c", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7c3000147c1d8090f66a2baf4623d2c0dfe8eb6/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fc2x-warning-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7c3000147c1d8090f66a2baf4623d2c0dfe8eb6/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fc2x-warning-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fc2x-warning-1.c?ref=d7c3000147c1d8090f66a2baf4623d2c0dfe8eb6", "patch": "@@ -0,0 +1,5 @@\n+/* Test #warning in C2x.  */\n+/* { dg-do preprocess } */\n+/* { dg-options \"-std=c2x -pedantic-errors\" } */\n+\n+#warning example text /* { dg-warning \"example text\" } */"}, {"sha": "3042e7a088c027b096fe470f1637a2241c0c96b4", "filename": "gcc/testsuite/gcc.dg/cpp/c2x-warning-2.c", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7c3000147c1d8090f66a2baf4623d2c0dfe8eb6/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fc2x-warning-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7c3000147c1d8090f66a2baf4623d2c0dfe8eb6/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fc2x-warning-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fc2x-warning-2.c?ref=d7c3000147c1d8090f66a2baf4623d2c0dfe8eb6", "patch": "@@ -0,0 +1,6 @@\n+/* Test #warning in C2x: -Wc11-c2x-comapt.  */\n+/* { dg-do preprocess } */\n+/* { dg-options \"-std=c2x -pedantic-errors -Wc11-c2x-compat\" } */\n+\n+#warning example text /* { dg-warning \"example text\" } */\n+/* { dg-warning \"#warning before C2X is a GCC extension\" \"compat\" { target *-*-* } .-1 } */"}, {"sha": "7dda115ab3ed785bcfe2332eb493e788ed84eda9", "filename": "gcc/testsuite/gcc.dg/cpp/gnu11-warning-1.c", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7c3000147c1d8090f66a2baf4623d2c0dfe8eb6/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fgnu11-warning-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7c3000147c1d8090f66a2baf4623d2c0dfe8eb6/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fgnu11-warning-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fgnu11-warning-1.c?ref=d7c3000147c1d8090f66a2baf4623d2c0dfe8eb6", "patch": "@@ -0,0 +1,6 @@\n+/* Test #warning not in C11.  */\n+/* { dg-do preprocess } */\n+/* { dg-options \"-std=gnu11 -pedantic-errors\" } */\n+\n+#warning example text /* { dg-warning \"example text\" } */\n+/* { dg-error \"#warning before C2X is a GCC extension\" \"pedantic\" { target *-*-* } .-1 } */"}, {"sha": "af2cc349702c74781e429c78f1a8cf198e1839ce", "filename": "gcc/testsuite/gcc.dg/cpp/gnu11-warning-2.c", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7c3000147c1d8090f66a2baf4623d2c0dfe8eb6/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fgnu11-warning-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7c3000147c1d8090f66a2baf4623d2c0dfe8eb6/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fgnu11-warning-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fgnu11-warning-2.c?ref=d7c3000147c1d8090f66a2baf4623d2c0dfe8eb6", "patch": "@@ -0,0 +1,6 @@\n+/* Test #warning not in C11.  */\n+/* { dg-do preprocess } */\n+/* { dg-options \"-std=gnu11 -pedantic\" } */\n+\n+#warning example text /* { dg-warning \"example text\" } */\n+/* { dg-warning \"#warning before C2X is a GCC extension\" \"pedantic\" { target *-*-* } .-1 } */"}, {"sha": "22b7b50e108b00b2b3ecfc415ed16f98b7e256d0", "filename": "gcc/testsuite/gcc.dg/cpp/gnu11-warning-3.c", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7c3000147c1d8090f66a2baf4623d2c0dfe8eb6/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fgnu11-warning-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7c3000147c1d8090f66a2baf4623d2c0dfe8eb6/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fgnu11-warning-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fgnu11-warning-3.c?ref=d7c3000147c1d8090f66a2baf4623d2c0dfe8eb6", "patch": "@@ -0,0 +1,6 @@\n+/* Test #warning not in C11.  */\n+/* { dg-do preprocess } */\n+/* { dg-options \"-std=gnu11 -Wc11-c2x-compat\" } */\n+\n+#warning example text /* { dg-warning \"example text\" } */\n+/* { dg-warning \"#warning before C2X is a GCC extension\" \"compat\" { target *-*-* } .-1 } */"}, {"sha": "fd8ecfbef6e8a6d675968f618a3f0e972f403e9e", "filename": "gcc/testsuite/gcc.dg/cpp/gnu11-warning-4.c", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7c3000147c1d8090f66a2baf4623d2c0dfe8eb6/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fgnu11-warning-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7c3000147c1d8090f66a2baf4623d2c0dfe8eb6/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fgnu11-warning-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fgnu11-warning-4.c?ref=d7c3000147c1d8090f66a2baf4623d2c0dfe8eb6", "patch": "@@ -0,0 +1,6 @@\n+/* Test #warning not in C11.  */\n+/* { dg-do preprocess } */\n+/* { dg-options \"-std=gnu11\" } */\n+\n+#warning example text /* { dg-warning \"example text\" } */\n+/* Not diagnosed by default.  */"}, {"sha": "c8e5290f280b3ec2a8361ed23419c40d1539c972", "filename": "gcc/testsuite/gcc.dg/cpp/gnu2x-warning-1.c", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7c3000147c1d8090f66a2baf4623d2c0dfe8eb6/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fgnu2x-warning-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7c3000147c1d8090f66a2baf4623d2c0dfe8eb6/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fgnu2x-warning-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fgnu2x-warning-1.c?ref=d7c3000147c1d8090f66a2baf4623d2c0dfe8eb6", "patch": "@@ -0,0 +1,5 @@\n+/* Test #warning in C2x.  */\n+/* { dg-do preprocess } */\n+/* { dg-options \"-std=gnu2x -pedantic-errors\" } */\n+\n+#warning example text /* { dg-warning \"example text\" } */"}, {"sha": "3aef4b328fc29d5cd4de656a451859daf5c8254d", "filename": "gcc/testsuite/gcc.dg/cpp/gnu2x-warning-2.c", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7c3000147c1d8090f66a2baf4623d2c0dfe8eb6/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fgnu2x-warning-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7c3000147c1d8090f66a2baf4623d2c0dfe8eb6/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fgnu2x-warning-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fgnu2x-warning-2.c?ref=d7c3000147c1d8090f66a2baf4623d2c0dfe8eb6", "patch": "@@ -0,0 +1,6 @@\n+/* Test #warning in C2x: -Wc11-c2x-comapt.  */\n+/* { dg-do preprocess } */\n+/* { dg-options \"-std=gnu2x -pedantic-errors -Wc11-c2x-compat\" } */\n+\n+#warning example text /* { dg-warning \"example text\" } */\n+/* { dg-warning \"#warning before C2X is a GCC extension\" \"compat\" { target *-*-* } .-1 } */"}, {"sha": "802bd8c8bb5c6a2521cd78b87275f20f236a7173", "filename": "libcpp/directives.cc", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7c3000147c1d8090f66a2baf4623d2c0dfe8eb6/libcpp%2Fdirectives.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7c3000147c1d8090f66a2baf4623d2c0dfe8eb6/libcpp%2Fdirectives.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fdirectives.cc?ref=d7c3000147c1d8090f66a2baf4623d2c0dfe8eb6", "patch": "@@ -158,7 +158,7 @@ static void cpp_pop_definition (cpp_reader *, struct def_pragma_macro *);\n   D(elifndef,\tT_ELIFNDEF,\tSTDC2X,    COND | ELIFDEF)\t\t\\\n   D(error,\tT_ERROR,\tSTDC89,    0)\t\t\t\t\\\n   D(pragma,\tT_PRAGMA,\tSTDC89,    IN_I)\t\t\t\\\n-  D(warning,\tT_WARNING,\tEXTENSION, 0)\t\t\t\t\\\n+  D(warning,\tT_WARNING,\tSTDC2X,    0)\t\t\t\t\\\n   D(include_next, T_INCLUDE_NEXT, EXTENSION, INCL | EXPAND)\t\t\\\n   D(ident,\tT_IDENT,\tEXTENSION, IN_I)\t\t\t\\\n   D(import,\tT_IMPORT,\tEXTENSION, INCL | EXPAND)  /* ObjC */\t\\\n@@ -385,6 +385,15 @@ directive_diagnostics (cpp_reader *pfile, const directive *dir, int indented)\n \t  && !(dir == &dtable[T_IMPORT] && CPP_OPTION (pfile, objc))\n \t  && CPP_PEDANTIC (pfile))\n \tcpp_error (pfile, CPP_DL_PEDWARN, \"#%s is a GCC extension\", dir->name);\n+      else if (dir == &dtable[T_WARNING])\n+\t{\n+\t  if (CPP_PEDANTIC (pfile) && !CPP_OPTION (pfile, warning_directive))\n+\t    cpp_error (pfile, CPP_DL_PEDWARN,\n+\t\t       \"#%s before C2X is a GCC extension\", dir->name);\n+\t  else if (CPP_OPTION (pfile, cpp_warn_c11_c2x_compat) > 0)\n+\t    cpp_warning (pfile, CPP_W_C11_C2X_COMPAT,\n+\t\t\t \"#%s before C2X is a GCC extension\", dir->name);\n+\t}\n       else if (((dir->flags & DEPRECATED) != 0\n \t\t|| (dir == &dtable[T_IMPORT] && !CPP_OPTION (pfile, objc)))\n \t       && CPP_OPTION (pfile, cpp_warn_deprecated))"}, {"sha": "58ed51d845c1fe59dbd37dd9b037c9df78369ac5", "filename": "libcpp/include/cpplib.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7c3000147c1d8090f66a2baf4623d2c0dfe8eb6/libcpp%2Finclude%2Fcpplib.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7c3000147c1d8090f66a2baf4623d2c0dfe8eb6/libcpp%2Finclude%2Fcpplib.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Finclude%2Fcpplib.h?ref=d7c3000147c1d8090f66a2baf4623d2c0dfe8eb6", "patch": "@@ -513,6 +513,9 @@ struct cpp_options\n   /* Nonzero for the '#elifdef' and '#elifndef' directives.  */\n   unsigned char elifdef;\n \n+  /* Nonzero for the '#warning' directive.  */\n+  unsigned char warning_directive;\n+\n   /* Nonzero means tokenize C++20 module directives.  */\n   unsigned char module_directives;\n "}, {"sha": "8d99bdb1b8d74d052867507dadcb1ce730e40b8d", "filename": "libcpp/init.cc", "status": "modified", "additions": 27, "deletions": 25, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7c3000147c1d8090f66a2baf4623d2c0dfe8eb6/libcpp%2Finit.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7c3000147c1d8090f66a2baf4623d2c0dfe8eb6/libcpp%2Finit.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Finit.cc?ref=d7c3000147c1d8090f66a2baf4623d2c0dfe8eb6", "patch": "@@ -96,34 +96,35 @@ struct lang_flags\n   char dfp_constants;\n   char size_t_literals;\n   char elifdef;\n+  char warning_directive;\n };\n \n static const struct lang_flags lang_defaults[] =\n-{ /*              c99 c++ xnum xid c11 std digr ulit rlit udlit bincst digsep trig u8chlit vaopt scope dfp szlit elifdef */\n-  /* GNUC89   */  { 0,  0,  1,  0,  0,  0,  1,   0,   0,   0,    0,     0,     0,   0,      1,   1,     0,   0,   0 },\n-  /* GNUC99   */  { 1,  0,  1,  1,  0,  0,  1,   1,   1,   0,    0,     0,     0,   0,      1,   1,     0,   0,   0 },\n-  /* GNUC11   */  { 1,  0,  1,  1,  1,  0,  1,   1,   1,   0,    0,     0,     0,   0,      1,   1,     0,   0,   0 },\n-  /* GNUC17   */  { 1,  0,  1,  1,  1,  0,  1,   1,   1,   0,    0,     0,     0,   0,      1,   1,     0,   0,   0 },\n-  /* GNUC2X   */  { 1,  0,  1,  1,  1,  0,  1,   1,   1,   0,    1,     1,     0,   1,      1,   1,     1,   0,   1 },\n-  /* STDC89   */  { 0,  0,  0,  0,  0,  1,  0,   0,   0,   0,    0,     0,     1,   0,      0,   0,     0,   0,   0 },\n-  /* STDC94   */  { 0,  0,  0,  0,  0,  1,  1,   0,   0,   0,    0,     0,     1,   0,      0,   0,     0,   0,   0 },\n-  /* STDC99   */  { 1,  0,  1,  1,  0,  1,  1,   0,   0,   0,    0,     0,     1,   0,      0,   0,     0,   0,   0 },\n-  /* STDC11   */  { 1,  0,  1,  1,  1,  1,  1,   1,   0,   0,    0,     0,     1,   0,      0,   0,     0,   0,   0 },\n-  /* STDC17   */  { 1,  0,  1,  1,  1,  1,  1,   1,   0,   0,    0,     0,     1,   0,      0,   0,     0,   0,   0 },\n-  /* STDC2X   */  { 1,  0,  1,  1,  1,  1,  1,   1,   0,   0,    1,     1,     1,   1,      0,   1,     1,   0,   1 },\n-  /* GNUCXX   */  { 0,  1,  1,  1,  0,  0,  1,   0,   0,   0,    0,     0,     0,   0,      1,   1,     0,   0,   0 },\n-  /* CXX98    */  { 0,  1,  0,  1,  0,  1,  1,   0,   0,   0,    0,     0,     1,   0,      0,   1,     0,   0,   0 },\n-  /* GNUCXX11 */  { 1,  1,  1,  1,  1,  0,  1,   1,   1,   1,    0,     0,     0,   0,      1,   1,     0,   0,   0 },\n-  /* CXX11    */  { 1,  1,  0,  1,  1,  1,  1,   1,   1,   1,    0,     0,     1,   0,      0,   1,     0,   0,   0 },\n-  /* GNUCXX14 */  { 1,  1,  1,  1,  1,  0,  1,   1,   1,   1,    1,     1,     0,   0,      1,   1,     0,   0,   0 },\n-  /* CXX14    */  { 1,  1,  0,  1,  1,  1,  1,   1,   1,   1,    1,     1,     1,   0,      0,   1,     0,   0,   0 },\n-  /* GNUCXX17 */  { 1,  1,  1,  1,  1,  0,  1,   1,   1,   1,    1,     1,     0,   1,      1,   1,     0,   0,   0 },\n-  /* CXX17    */  { 1,  1,  1,  1,  1,  1,  1,   1,   1,   1,    1,     1,     0,   1,      0,   1,     0,   0,   0 },\n-  /* GNUCXX20 */  { 1,  1,  1,  1,  1,  0,  1,   1,   1,   1,    1,     1,     0,   1,      1,   1,     0,   0,   0 },\n-  /* CXX20    */  { 1,  1,  1,  1,  1,  1,  1,   1,   1,   1,    1,     1,     0,   1,      1,   1,     0,   0,   0 },\n-  /* GNUCXX23 */  { 1,  1,  1,  1,  1,  0,  1,   1,   1,   1,    1,     1,     0,   1,      1,   1,     0,   1,   1 },\n-  /* CXX23    */  { 1,  1,  1,  1,  1,  1,  1,   1,   1,   1,    1,     1,     0,   1,      1,   1,     0,   1,   1 },\n-  /* ASM      */  { 0,  0,  1,  0,  0,  0,  0,   0,   0,   0,    0,     0,     0,   0,      0,   0,     0,   0,   0 }\n+{ /*              c99 c++ xnum xid c11 std digr ulit rlit udlit bincst digsep trig u8chlit vaopt scope dfp szlit elifdef warndir */\n+  /* GNUC89   */  { 0,  0,  1,  0,  0,  0,  1,   0,   0,   0,    0,     0,     0,   0,      1,   1,     0,   0,   0,      0 },\n+  /* GNUC99   */  { 1,  0,  1,  1,  0,  0,  1,   1,   1,   0,    0,     0,     0,   0,      1,   1,     0,   0,   0,      0 },\n+  /* GNUC11   */  { 1,  0,  1,  1,  1,  0,  1,   1,   1,   0,    0,     0,     0,   0,      1,   1,     0,   0,   0,      0 },\n+  /* GNUC17   */  { 1,  0,  1,  1,  1,  0,  1,   1,   1,   0,    0,     0,     0,   0,      1,   1,     0,   0,   0,      0 },\n+  /* GNUC2X   */  { 1,  0,  1,  1,  1,  0,  1,   1,   1,   0,    1,     1,     0,   1,      1,   1,     1,   0,   1,      1 },\n+  /* STDC89   */  { 0,  0,  0,  0,  0,  1,  0,   0,   0,   0,    0,     0,     1,   0,      0,   0,     0,   0,   0,      0 },\n+  /* STDC94   */  { 0,  0,  0,  0,  0,  1,  1,   0,   0,   0,    0,     0,     1,   0,      0,   0,     0,   0,   0,      0 },\n+  /* STDC99   */  { 1,  0,  1,  1,  0,  1,  1,   0,   0,   0,    0,     0,     1,   0,      0,   0,     0,   0,   0,      0 },\n+  /* STDC11   */  { 1,  0,  1,  1,  1,  1,  1,   1,   0,   0,    0,     0,     1,   0,      0,   0,     0,   0,   0,      0 },\n+  /* STDC17   */  { 1,  0,  1,  1,  1,  1,  1,   1,   0,   0,    0,     0,     1,   0,      0,   0,     0,   0,   0,      0 },\n+  /* STDC2X   */  { 1,  0,  1,  1,  1,  1,  1,   1,   0,   0,    1,     1,     1,   1,      0,   1,     1,   0,   1,      1 },\n+  /* GNUCXX   */  { 0,  1,  1,  1,  0,  0,  1,   0,   0,   0,    0,     0,     0,   0,      1,   1,     0,   0,   0,      0 },\n+  /* CXX98    */  { 0,  1,  0,  1,  0,  1,  1,   0,   0,   0,    0,     0,     1,   0,      0,   1,     0,   0,   0,      0 },\n+  /* GNUCXX11 */  { 1,  1,  1,  1,  1,  0,  1,   1,   1,   1,    0,     0,     0,   0,      1,   1,     0,   0,   0,      0 },\n+  /* CXX11    */  { 1,  1,  0,  1,  1,  1,  1,   1,   1,   1,    0,     0,     1,   0,      0,   1,     0,   0,   0,      0 },\n+  /* GNUCXX14 */  { 1,  1,  1,  1,  1,  0,  1,   1,   1,   1,    1,     1,     0,   0,      1,   1,     0,   0,   0,      0 },\n+  /* CXX14    */  { 1,  1,  0,  1,  1,  1,  1,   1,   1,   1,    1,     1,     1,   0,      0,   1,     0,   0,   0,      0 },\n+  /* GNUCXX17 */  { 1,  1,  1,  1,  1,  0,  1,   1,   1,   1,    1,     1,     0,   1,      1,   1,     0,   0,   0,      0 },\n+  /* CXX17    */  { 1,  1,  1,  1,  1,  1,  1,   1,   1,   1,    1,     1,     0,   1,      0,   1,     0,   0,   0,      0 },\n+  /* GNUCXX20 */  { 1,  1,  1,  1,  1,  0,  1,   1,   1,   1,    1,     1,     0,   1,      1,   1,     0,   0,   0,      0 },\n+  /* CXX20    */  { 1,  1,  1,  1,  1,  1,  1,   1,   1,   1,    1,     1,     0,   1,      1,   1,     0,   0,   0,      0 },\n+  /* GNUCXX23 */  { 1,  1,  1,  1,  1,  0,  1,   1,   1,   1,    1,     1,     0,   1,      1,   1,     0,   1,   1,      0 },\n+  /* CXX23    */  { 1,  1,  1,  1,  1,  1,  1,   1,   1,   1,    1,     1,     0,   1,      1,   1,     0,   1,   1,      0 },\n+  /* ASM      */  { 0,  0,  1,  0,  0,  0,  0,   0,   0,   0,    0,     0,     0,   0,      0,   0,     0,   0,   0,      0 }\n };\n \n /* Sets internal flags correctly for a given language.  */\n@@ -153,6 +154,7 @@ cpp_set_lang (cpp_reader *pfile, enum c_lang lang)\n   CPP_OPTION (pfile, dfp_constants)\t\t = l->dfp_constants;\n   CPP_OPTION (pfile, size_t_literals)\t\t = l->size_t_literals;\n   CPP_OPTION (pfile, elifdef)\t\t\t = l->elifdef;\n+  CPP_OPTION (pfile, warning_directive)\t\t = l->warning_directive;\n }\n \n /* Initialize library global state.  */"}]}