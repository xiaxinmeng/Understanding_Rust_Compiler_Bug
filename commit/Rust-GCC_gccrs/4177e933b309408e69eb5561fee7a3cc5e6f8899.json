{"sha": "4177e933b309408e69eb5561fee7a3cc5e6f8899", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDE3N2U5MzNiMzA5NDA4ZTY5ZWI1NTYxZmVlN2EzY2M1ZTZmODg5OQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2019-11-29T14:47:28Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2019-11-29T14:47:28Z"}, "message": "Make vectorizable_operation punt early on codes it doesn't handle\n\nvectorizable_operation returned false for codes that are handled by\nvectorizable_shift, but only after it had already done a lot of work.\nChecking earlier should be more efficient and avoid polluting the logs\nwith duplicate info.\n\nAlso, there was no such early-out for comparisons or COND_EXPRs.\nFixing that avoids a false scan-tree-dump hit with a later patch.\n\n2019-11-29  Richard Sandiford  <richard.sandiford@arm.com>\n\ngcc/\n\t* tree-vect-stmts.c (vectorizable_operation): Punt early\n\ton codes that are handled elsewhere.\n\nFrom-SVN: r278848", "tree": {"sha": "543524ce049aecc3249f46a208b26abd8c6b0642", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/543524ce049aecc3249f46a208b26abd8c6b0642"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4177e933b309408e69eb5561fee7a3cc5e6f8899", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4177e933b309408e69eb5561fee7a3cc5e6f8899", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4177e933b309408e69eb5561fee7a3cc5e6f8899", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4177e933b309408e69eb5561fee7a3cc5e6f8899/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ce19a4822794992097deab96bf15bf78ff481ea1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce19a4822794992097deab96bf15bf78ff481ea1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce19a4822794992097deab96bf15bf78ff481ea1"}], "stats": {"total": 25, "additions": 20, "deletions": 5}, "files": [{"sha": "e557946f6975cb424c7bee3374b531b7d6120dbb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4177e933b309408e69eb5561fee7a3cc5e6f8899/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4177e933b309408e69eb5561fee7a3cc5e6f8899/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4177e933b309408e69eb5561fee7a3cc5e6f8899", "patch": "@@ -1,3 +1,8 @@\n+2019-11-29  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* tree-vect-stmts.c (vectorizable_operation): Punt early\n+\ton codes that are handled elsewhere.\n+\n 2019-11-29  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* doc/sourcebuild.texi (vect_bool_cmp): Document."}, {"sha": "49dcde43b745cd68bf23d25f78a316061d2acdd5", "filename": "gcc/tree-vect-stmts.c", "status": "modified", "additions": 15, "deletions": 5, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4177e933b309408e69eb5561fee7a3cc5e6f8899/gcc%2Ftree-vect-stmts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4177e933b309408e69eb5561fee7a3cc5e6f8899/gcc%2Ftree-vect-stmts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-stmts.c?ref=4177e933b309408e69eb5561fee7a3cc5e6f8899", "patch": "@@ -5944,6 +5944,21 @@ vectorizable_operation (stmt_vec_info stmt_info, gimple_stmt_iterator *gsi,\n \n   orig_code = code = gimple_assign_rhs_code (stmt);\n \n+  /* Shifts are handled in vectorizable_shift.  */\n+  if (code == LSHIFT_EXPR\n+      || code == RSHIFT_EXPR\n+      || code == LROTATE_EXPR\n+      || code == RROTATE_EXPR)\n+   return false;\n+\n+  /* Comparisons are handled in vectorizable_comparison.  */\n+  if (TREE_CODE_CLASS (code) == tcc_comparison)\n+    return false;\n+\n+  /* Conditions are handled in vectorizable_condition.  */\n+  if (code == COND_EXPR)\n+    return false;\n+\n   /* For pointer addition and subtraction, we should use the normal\n      plus and minus for the vector operation.  */\n   if (code == POINTER_PLUS_EXPR)\n@@ -6068,11 +6083,6 @@ vectorizable_operation (stmt_vec_info stmt_info, gimple_stmt_iterator *gsi,\n \n   gcc_assert (ncopies >= 1);\n \n-  /* Shifts are handled in vectorizable_shift ().  */\n-  if (code == LSHIFT_EXPR || code == RSHIFT_EXPR || code == LROTATE_EXPR\n-      || code == RROTATE_EXPR)\n-   return false;\n-\n   /* Supportable by target?  */\n \n   vec_mode = TYPE_MODE (vectype);"}]}