{"sha": "75837d7b135b23fa6d8a5cb349501914be8e34bc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzU4MzdkN2IxMzViMjNmYTZkOGE1Y2IzNDk1MDE5MTRiZThlMzRiYw==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2015-11-25T13:49:06Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2015-11-25T13:49:06Z"}, "message": "Improve tests for valid values of iostream bitmask types\n\n\t* testsuite/27_io/ios_base/types/fmtflags/case_label.cc: Explicitly\n\tcheck minimum and maximum values, and size of underlying type.\n\t* testsuite/27_io/ios_base/types/iostate/case_label.cc: Likewise.\n\t* testsuite/27_io/ios_base/types/openmode/case_label.cc: Likewise.\n\nFrom-SVN: r230868", "tree": {"sha": "943e7d861e79466faf4e13a1b55ccac89bd405e2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/943e7d861e79466faf4e13a1b55ccac89bd405e2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/75837d7b135b23fa6d8a5cb349501914be8e34bc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75837d7b135b23fa6d8a5cb349501914be8e34bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/75837d7b135b23fa6d8a5cb349501914be8e34bc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75837d7b135b23fa6d8a5cb349501914be8e34bc/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7f085cafa420d8a90b8d1585d54c1c87c589e12e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f085cafa420d8a90b8d1585d54c1c87c589e12e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7f085cafa420d8a90b8d1585d54c1c87c589e12e"}], "stats": {"total": 25, "additions": 19, "deletions": 6}, "files": [{"sha": "58a196f174c3c1fa02a44fcba34162ec9d39563f", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75837d7b135b23fa6d8a5cb349501914be8e34bc/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75837d7b135b23fa6d8a5cb349501914be8e34bc/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=75837d7b135b23fa6d8a5cb349501914be8e34bc", "patch": "@@ -1,3 +1,10 @@\n+2015-11-25  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* testsuite/27_io/ios_base/types/fmtflags/case_label.cc: Explicitly\n+\tcheck minimum and maximum values, and size of underlying type.\n+\t* testsuite/27_io/ios_base/types/iostate/case_label.cc: Likewise.\n+\t* testsuite/27_io/ios_base/types/openmode/case_label.cc: Likewise.\n+\n 2015-11-25  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* acinclude.m4 (GLIBCXX_ENABLE_VTABLE_VERIFY) <solaris2*>: Use"}, {"sha": "3475fd333a4b2cca19ed0dced9ad00102f89fe06", "filename": "libstdc++-v3/testsuite/27_io/ios_base/types/fmtflags/case_label.cc", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75837d7b135b23fa6d8a5cb349501914be8e34bc/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_base%2Ftypes%2Ffmtflags%2Fcase_label.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75837d7b135b23fa6d8a5cb349501914be8e34bc/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_base%2Ftypes%2Ffmtflags%2Fcase_label.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_base%2Ftypes%2Ffmtflags%2Fcase_label.cc?ref=75837d7b135b23fa6d8a5cb349501914be8e34bc", "patch": "@@ -70,9 +70,11 @@ case_labels(bitmask_type b)\n       break;\n     case std::_S_ios_fmtflags_end:\n       break;\n-    case std::_S_ios_fmtflags_min:\n+    case __INT_MAX__:\n       break;\n-    case std::_S_ios_fmtflags_max:\n+    case ~__INT_MAX__:\n       break;\n     }\n+  static_assert( sizeof(std::underlying_type_t<bitmask_type>) == sizeof(int),\n+      \"underlying type has same range of values as int\");\n }"}, {"sha": "a72a7748ce2b3d999efac9ce1c76e2175987649a", "filename": "libstdc++-v3/testsuite/27_io/ios_base/types/iostate/case_label.cc", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75837d7b135b23fa6d8a5cb349501914be8e34bc/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_base%2Ftypes%2Fiostate%2Fcase_label.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75837d7b135b23fa6d8a5cb349501914be8e34bc/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_base%2Ftypes%2Fiostate%2Fcase_label.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_base%2Ftypes%2Fiostate%2Fcase_label.cc?ref=75837d7b135b23fa6d8a5cb349501914be8e34bc", "patch": "@@ -42,9 +42,11 @@ case_labels(bitmask_type b)\n       break;\n     case std::_S_ios_iostate_end:\n       break;\n-    case std::_S_ios_iostate_min:\n+    case __INT_MAX__:\n       break;\n-    case std::_S_ios_iostate_max:\n+    case ~__INT_MAX__:\n       break;\n     }\n+  static_assert( sizeof(std::underlying_type_t<bitmask_type>) == sizeof(int),\n+      \"underlying type has same range of values as int\");\n }"}, {"sha": "f621d213a2ae8133cdedcc8544418b5968a483d4", "filename": "libstdc++-v3/testsuite/27_io/ios_base/types/openmode/case_label.cc", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75837d7b135b23fa6d8a5cb349501914be8e34bc/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_base%2Ftypes%2Fopenmode%2Fcase_label.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75837d7b135b23fa6d8a5cb349501914be8e34bc/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_base%2Ftypes%2Fopenmode%2Fcase_label.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fios_base%2Ftypes%2Fopenmode%2Fcase_label.cc?ref=75837d7b135b23fa6d8a5cb349501914be8e34bc", "patch": "@@ -46,9 +46,11 @@ case_labels(bitmask_type b)\n       break;\n     case std::_S_ios_openmode_end:\n       break;\n-    case std::_S_ios_openmode_min:\n+    case __INT_MAX__:\n       break;\n-    case std::_S_ios_openmode_max:\n+    case ~__INT_MAX__:\n       break;\n     }\n+  static_assert( sizeof(std::underlying_type_t<bitmask_type>) == sizeof(int),\n+      \"underlying type has same range of values as int\");\n }"}]}