{"sha": "b9bc3b128c02de33783a1729709cf44dd42bd05e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjliYzNiMTI4YzAyZGUzMzc4M2ExNzI5NzA5Y2Y0NGRkNDJiZDA1ZQ==", "commit": {"author": {"name": "Claudiu Zissulescu", "email": "claziss@synopsys.com", "date": "2019-04-16T10:21:15Z"}, "committer": {"name": "Claudiu Zissulescu", "email": "claziss@gcc.gnu.org", "date": "2019-04-16T10:21:15Z"}, "message": "[ARC] Refactor deprecated macros.\n\nxxxx-xx-xx  Claudiu Zissulescu  <claziss@synopsys.com>\n\n\t* config/arc/arc-protos.h (arc_register_move_cost): Remove.\n\t* config/arc/arc.c (arc_register_move_cost): Re-purpose it to\n\timplement target hook.\n\t(arc_memory_move_cost): New function.\n\t(TARGET_REGISTER_MOVE_COST): Define.\n\t(TARGET_MEMORY_MOVE_COST): Likewise.\n\t* config/arc/arc.h (REGISTER_MOVE_COST): Remove.\n\t(MEMORY_MOVE_COST): Likewise.\n\nfix\n\nFrom-SVN: r270387", "tree": {"sha": "f86d298c452218367ebcc52d1f932cebc3efd624", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f86d298c452218367ebcc52d1f932cebc3efd624"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b9bc3b128c02de33783a1729709cf44dd42bd05e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9bc3b128c02de33783a1729709cf44dd42bd05e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b9bc3b128c02de33783a1729709cf44dd42bd05e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9bc3b128c02de33783a1729709cf44dd42bd05e/comments", "author": {"login": "claziss", "id": 2761368, "node_id": "MDQ6VXNlcjI3NjEzNjg=", "avatar_url": "https://avatars.githubusercontent.com/u/2761368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/claziss", "html_url": "https://github.com/claziss", "followers_url": "https://api.github.com/users/claziss/followers", "following_url": "https://api.github.com/users/claziss/following{/other_user}", "gists_url": "https://api.github.com/users/claziss/gists{/gist_id}", "starred_url": "https://api.github.com/users/claziss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/claziss/subscriptions", "organizations_url": "https://api.github.com/users/claziss/orgs", "repos_url": "https://api.github.com/users/claziss/repos", "events_url": "https://api.github.com/users/claziss/events{/privacy}", "received_events_url": "https://api.github.com/users/claziss/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fa27cbfeb3291eab70181064b4ff5979375ed255", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa27cbfeb3291eab70181064b4ff5979375ed255", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa27cbfeb3291eab70181064b4ff5979375ed255"}], "stats": {"total": 50, "additions": 35, "deletions": 15}, "files": [{"sha": "8ebd9c8f3f2840bd608f9ab94ad3cef1d1a1c956", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9bc3b128c02de33783a1729709cf44dd42bd05e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9bc3b128c02de33783a1729709cf44dd42bd05e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b9bc3b128c02de33783a1729709cf44dd42bd05e", "patch": "@@ -1,3 +1,14 @@\n+2019-04-16  Claudiu Zissulescu  <claziss@synopsys.com>\n+\n+\t* config/arc/arc-protos.h (arc_register_move_cost): Remove.\n+\t* config/arc/arc.c (arc_register_move_cost): Re-purpose it to\n+\timplement target hook.\n+\t(arc_memory_move_cost): New function.\n+\t(TARGET_REGISTER_MOVE_COST): Define.\n+\t(TARGET_MEMORY_MOVE_COST): Likewise.\n+\t* config/arc/arc.h (REGISTER_MOVE_COST): Remove.\n+\t(MEMORY_MOVE_COST): Likewise.\n+\n 2019-04-16  Claudiu Zissulescu  <claziss@synopsys.com>\n \n \t* config/arc/arc.md (sibcall_insn): Use Rcd constraint."}, {"sha": "ac0de6b28746f97297e92b070fa561bf1eca387a", "filename": "gcc/config/arc/arc-protos.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9bc3b128c02de33783a1729709cf44dd42bd05e/gcc%2Fconfig%2Farc%2Farc-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9bc3b128c02de33783a1729709cf44dd42bd05e/gcc%2Fconfig%2Farc%2Farc-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Farc-protos.h?ref=b9bc3b128c02de33783a1729709cf44dd42bd05e", "patch": "@@ -68,8 +68,6 @@ extern bool arc_is_shortcall_p (rtx);\n extern bool valid_brcc_with_delay_p (rtx *);\n extern bool arc_ccfsm_cond_exec_p (void);\n struct secondary_reload_info;\n-extern int arc_register_move_cost (machine_mode, enum reg_class,\n-\t\t\t\t   enum reg_class);\n extern rtx disi_highpart (rtx);\n extern int arc_adjust_insn_length (rtx_insn *, int, bool);\n extern int arc_corereg_hazard (rtx, rtx);"}, {"sha": "65eef30747a4c75f426f26f894d7eed3b12825f7", "filename": "gcc/config/arc/arc.c", "status": "modified", "additions": 24, "deletions": 2, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9bc3b128c02de33783a1729709cf44dd42bd05e/gcc%2Fconfig%2Farc%2Farc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9bc3b128c02de33783a1729709cf44dd42bd05e/gcc%2Fconfig%2Farc%2Farc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Farc.c?ref=b9bc3b128c02de33783a1729709cf44dd42bd05e", "patch": "@@ -8682,9 +8682,11 @@ arc_preserve_reload_p (rtx in)\n \t  && !((INTVAL (XEXP (in, 1)) & 511)));\n }\n \n-int\n+/* Implement TARGET_REGISTER_MOVE_COST.  */\n+\n+static int\n arc_register_move_cost (machine_mode,\n-\t\t\tenum reg_class from_class, enum reg_class to_class)\n+\t\t\treg_class_t from_class, reg_class_t to_class)\n {\n   /* Force an attempt to 'mov Dy,Dx' to spill.  */\n   if ((TARGET_ARC700 || TARGET_EM) && TARGET_DPFP\n@@ -11424,6 +11426,20 @@ arc_adjust_reg_alloc_order (void)\n     memcpy (reg_alloc_order, size_alloc_order, sizeof (size_alloc_order));\n }\n \n+/* Implement TARGET_MEMORY_MOVE_COST.  */\n+\n+static int\n+arc_memory_move_cost (machine_mode mode,\n+\t\t      reg_class_t rclass ATTRIBUTE_UNUSED,\n+\t\t      bool in ATTRIBUTE_UNUSED)\n+{\n+  if ((GET_MODE_SIZE (mode) <= UNITS_PER_WORD)\n+      || ((GET_MODE_SIZE (mode) <= UNITS_PER_WORD * 2) && TARGET_LL64))\n+    return 6;\n+\n+  return (2 * GET_MODE_SIZE (mode));\n+}\n+\n #undef TARGET_USE_ANCHORS_FOR_SYMBOL_P\n #define TARGET_USE_ANCHORS_FOR_SYMBOL_P arc_use_anchors_for_symbol_p\n \n@@ -11439,6 +11455,12 @@ arc_adjust_reg_alloc_order (void)\n #undef TARGET_HAVE_SPECULATION_SAFE_VALUE\n #define TARGET_HAVE_SPECULATION_SAFE_VALUE speculation_safe_value_not_needed\n \n+#undef TARGET_REGISTER_MOVE_COST\n+#define TARGET_REGISTER_MOVE_COST arc_register_move_cost\n+\n+#undef TARGET_MEMORY_MOVE_COST\n+#define TARGET_MEMORY_MOVE_COST arc_memory_move_cost\n+\n struct gcc_target targetm = TARGET_INITIALIZER;\n \n #include \"gt-arc.h\""}, {"sha": "80dead957cb60c8a5de1b035c7c2985270c4edba", "filename": "gcc/config/arc/arc.h", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9bc3b128c02de33783a1729709cf44dd42bd05e/gcc%2Fconfig%2Farc%2Farc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9bc3b128c02de33783a1729709cf44dd42bd05e/gcc%2Fconfig%2Farc%2Farc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Farc.h?ref=b9bc3b128c02de33783a1729709cf44dd42bd05e", "patch": "@@ -925,17 +925,6 @@ arc_select_cc_mode (OP, X, Y)\n \n /* Costs.  */\n \n-/* Compute extra cost of moving data between one register class\n-   and another.  */\n-#define REGISTER_MOVE_COST(MODE, CLASS, TO_CLASS) \\\n-   arc_register_move_cost ((MODE), (CLASS), (TO_CLASS))\n-\n-/* Compute the cost of moving data between registers and memory.  */\n-/* Memory is 3 times as expensive as registers.\n-   ??? Is that the right way to look at it?  */\n-#define MEMORY_MOVE_COST(MODE,CLASS,IN) \\\n-(GET_MODE_SIZE (MODE) <= UNITS_PER_WORD ? 6 : 12)\n-\n /* The cost of a branch insn.  */\n /* ??? What's the right value here?  Branches are certainly more\n    expensive than reg->reg moves.  */"}]}