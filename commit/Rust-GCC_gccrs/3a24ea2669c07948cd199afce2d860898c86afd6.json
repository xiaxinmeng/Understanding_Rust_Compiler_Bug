{"sha": "3a24ea2669c07948cd199afce2d860898c86afd6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2EyNGVhMjY2OWMwNzk0OGNkMTk5YWZjZTJkODYwODk4Yzg2YWZkNg==", "commit": {"author": {"name": "Iain Sandoe", "email": "iain@sandoe.co.uk", "date": "2019-06-15T14:03:44Z"}, "committer": {"name": "Iain Sandoe", "email": "iains@gcc.gnu.org", "date": "2019-06-15T14:03:44Z"}, "message": "[objective-c/c++, testsuite, 3/3] Workaround for PR90709.\n\nUse the CF-CFString.h, F-NS*.h proxy headers where needed in the objective-c++\ntestsuite.  Make minor adjustments to tests as required, providing that those\ndo not alter the test intent.\n\n2019-06-15  Iain Sandoe  <iain@sandoe.co.uk>\n\n\tPR objc/90709\n\t* obj-c++.dg/proto-lossage-7.mm: Use proxy headers.\n\t* obj-c++.dg/strings/const-cfstring-2.mm: Likewise.\n\t* obj-c++.dg/strings/const-cfstring-5.mm: Likewise\n\t* obj-c++.dg/strings/const-str-12.mm: Likewise.\n\t* obj-c++.dg/syntax-error-1.mm: Likewise.\n\t* obj-c++.dg/torture/strings/const-cfstring-1.mm: Likewise.\n\t* obj-c++.dg/torture/strings/const-str-10.mm: Likewise.\n\t* obj-c++.dg/torture/strings/const-str-11.mm: Likewise.\n\t* obj-c++.dg/torture/strings/const-str-9.mm: Likewise.\n\t* obj-c++.dg/cxx-ivars-3.mm: Skip on later Darwin, where the 10.4 API\n\tin no longer supported, also on m64 where there's no meaning to it.\n\t* obj-c++.dg/isa-field-1.mm: Suppress unwanted warning, add comment why.\n\t* obj-c++.dg/objc-gc-3.mm: Skip for Darwin > 16, the API use is an error\n\tthere.\n\t* obj-c++.dg/qual-types-1.mm: Prune a spurious l64 warning.\n\t* obj-c++.dg/stubify-1.mm: Tidy up after better compiler warnings.\n\t* obj-c++.dg/stubify-2.mm: Likewise.\n\t* obj-c++.dg/try-catch-1.mm: Likewise.\n\t* obj-c++.dg/try-catch-3.mm: Likewise.\n\nFrom-SVN: r272327", "tree": {"sha": "e560c4b98d55878d789f245dda2a841225e8f6b0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e560c4b98d55878d789f245dda2a841225e8f6b0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3a24ea2669c07948cd199afce2d860898c86afd6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a24ea2669c07948cd199afce2d860898c86afd6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a24ea2669c07948cd199afce2d860898c86afd6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a24ea2669c07948cd199afce2d860898c86afd6/comments", "author": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e3b8c2aeeebbb6e86d1b1b1499cf837d96856c46", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3b8c2aeeebbb6e86d1b1b1499cf837d96856c46", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e3b8c2aeeebbb6e86d1b1b1499cf837d96856c46"}], "stats": {"total": 83, "additions": 59, "deletions": 24}, "files": [{"sha": "7efcfd9b3f91b36b9c8948c507fd114d08096472", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a24ea2669c07948cd199afce2d860898c86afd6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a24ea2669c07948cd199afce2d860898c86afd6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3a24ea2669c07948cd199afce2d860898c86afd6", "patch": "@@ -1,3 +1,26 @@\n+2019-06-15  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\tPR objc/90709\n+\t* obj-c++.dg/proto-lossage-7.mm: Use proxy headers.\n+\t* obj-c++.dg/strings/const-cfstring-2.mm: Likewise.\n+\t* obj-c++.dg/strings/const-cfstring-5.mm: Likewise\n+\t* obj-c++.dg/strings/const-str-12.mm: Likewise.\n+\t* obj-c++.dg/syntax-error-1.mm: Likewise.\n+\t* obj-c++.dg/torture/strings/const-cfstring-1.mm: Likewise.\n+\t* obj-c++.dg/torture/strings/const-str-10.mm: Likewise.\n+\t* obj-c++.dg/torture/strings/const-str-11.mm: Likewise.\n+\t* obj-c++.dg/torture/strings/const-str-9.mm: Likewise.\n+\t* obj-c++.dg/cxx-ivars-3.mm: Skip on later Darwin, where the 10.4 API\n+\tin no longer supported, also on m64 where there's no meaning to it.\n+\t* obj-c++.dg/isa-field-1.mm: Suppress unwanted warning, add comment why.\n+\t* obj-c++.dg/objc-gc-3.mm: Skip for Darwin > 16, the API use is an error\n+\tthere.\n+\t* obj-c++.dg/qual-types-1.mm: Prune a spurious l64 warning.\n+\t* obj-c++.dg/stubify-1.mm: Tidy up after better compiler warnings.\n+\t* obj-c++.dg/stubify-2.mm: Likewise.\n+\t* obj-c++.dg/try-catch-1.mm: Likewise.\n+\t* obj-c++.dg/try-catch-3.mm: Likewise.\n+\n 2019-06-15  Iain Sandoe  <iain@sandoe.co.uk>\n \n \tPR objc/90709"}, {"sha": "18b671d122a3170c2f091add88ed3be26149cf1c", "filename": "gcc/testsuite/obj-c++.dg/cxx-ivars-3.mm", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a24ea2669c07948cd199afce2d860898c86afd6/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fcxx-ivars-3.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a24ea2669c07948cd199afce2d860898c86afd6/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fcxx-ivars-3.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fcxx-ivars-3.mm?ref=3a24ea2669c07948cd199afce2d860898c86afd6", "patch": "@@ -2,13 +2,14 @@\n \n // { dg-do run { target *-*-darwin* } }\n // { dg-skip-if \"\" { *-*-* } { \"-fgnu-runtime\" } { \"\" } }\n+// { dg-skip-if \"Headers incompatible with 10.4 APIs\" { *-*-darwin1[3-8]* } { \"-fnext-runtime\" } { \"\" } }\n // { dg-additional-options \"-fobjc-call-cxx-cdtors -mmacosx-version-min=10.4 -framework Foundation\" }\n // This test has no equivalent or meaning for m64/ABI V2\n-// { dg-xfail-run-if \"No Test Avail\" { *-*-darwin* && lp64 } { \"-fnext-runtime\" } { \"\" } }\n+// { dg-xfail-run-if \"No Test Avail\" {  *-*-darwin* && lp64 } { \"-fnext-runtime\" } { \"\" } }\n \n #include <objc/objc-runtime.h>\n #include <stdlib.h>\n-#include <Foundation/NSObject.h>\n+#include \"../objc-obj-c++-shared/F-NSObject.h\"\n \n //extern \"C\" { int printf(const char *,...); }\n #define CHECK_IF(expr) if(!(expr)) abort()"}, {"sha": "3fb27d5f641b4110924bcfc0b9ea8c9b5bfc646e", "filename": "gcc/testsuite/obj-c++.dg/isa-field-1.mm", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a24ea2669c07948cd199afce2d860898c86afd6/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fisa-field-1.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a24ea2669c07948cd199afce2d860898c86afd6/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fisa-field-1.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fisa-field-1.mm?ref=3a24ea2669c07948cd199afce2d860898c86afd6", "patch": "@@ -1,5 +1,7 @@\n /* Ensure there are no bizarre difficulties with accessing the 'isa' field of objects.  */\n /* { dg-do compile } */\n+/* The use of isa is deprecated, but we still want to test that is works. */\n+/* { dg-additional-options \"-Wno-deprecated-declarations\" } */\n \n #include \"../objc-obj-c++-shared/TestsuiteObject.h\"\n #include \"../objc-obj-c++-shared/runtime.h\""}, {"sha": "68bebf8fc96d5dbe09274216c0678d977bfa74dd", "filename": "gcc/testsuite/obj-c++.dg/objc-gc-3.mm", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a24ea2669c07948cd199afce2d860898c86afd6/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fobjc-gc-3.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a24ea2669c07948cd199afce2d860898c86afd6/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fobjc-gc-3.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fobjc-gc-3.mm?ref=3a24ea2669c07948cd199afce2d860898c86afd6", "patch": "@@ -3,6 +3,7 @@\n /* Contributed by Ziemowit Laski <zlaski@apple.com>  */\n \n /* { dg-do compile } */\n+/* { dg-skip-if \"GC API is an error from Darwin16.\" { *-*-darwin1[6-8]* } { \"-fnext-runtime\" } { \"\" } } */\n /* { dg-options \"-fobjc-gc\" } */\n /* { dg-prune-output \"cc1objplus: warning: '-fobjc-gc' is ignored for '-fgnu-runtime'\" } */\n "}, {"sha": "d136af92d67bd60faa872c8a462143c5c955b1e0", "filename": "gcc/testsuite/obj-c++.dg/proto-lossage-7.mm", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a24ea2669c07948cd199afce2d860898c86afd6/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fproto-lossage-7.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a24ea2669c07948cd199afce2d860898c86afd6/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fproto-lossage-7.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fproto-lossage-7.mm?ref=3a24ea2669c07948cd199afce2d860898c86afd6", "patch": "@@ -1,9 +1,11 @@\n /* Check that typedefs of ObjC classes preserve \n    any @protocol qualifiers.  */\n /* { dg-do compile } */\n+/* Suppress warnings that the GNUStep headers introduce.  */\n+/* { dg-additional-options \"-std=gnu++11 -Wno-expansion-to-defined -Wno-variadic-macros\" { target *-*-darwin* } } */\n \n #ifdef __NEXT_RUNTIME__\n-#include <Foundation/NSObject.h>\n+#include \"../objc-obj-c++-shared/F-NSObject.h\"\n #define OBJECT NSObject\n #else\n #include <objc/Object.h>"}, {"sha": "2fe06e4c80dac2a87d192a8384ce8cbf4f379300", "filename": "gcc/testsuite/obj-c++.dg/qual-types-1.mm", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a24ea2669c07948cd199afce2d860898c86afd6/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fqual-types-1.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a24ea2669c07948cd199afce2d860898c86afd6/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fqual-types-1.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fqual-types-1.mm?ref=3a24ea2669c07948cd199afce2d860898c86afd6", "patch": "@@ -4,6 +4,8 @@\n \n /* { dg-do run } */\n /* { dg-xfail-run-if \"Needs OBJC2 ABI\" { *-*-darwin* && { lp64 && { ! objc2 } } } { \"-fnext-runtime\" } { \"\" } } */\n+/* { dg-prune-output \".*ld: warning: direct access in.*\" } */\n+\n #include \"../objc-obj-c++-shared/TestsuiteObject.m\"\n #include <stdlib.h>\n "}, {"sha": "e81f47138283674c8c141ba52e504a31b8e63862", "filename": "gcc/testsuite/obj-c++.dg/strings/const-cfstring-2.mm", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a24ea2669c07948cd199afce2d860898c86afd6/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fstrings%2Fconst-cfstring-2.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a24ea2669c07948cd199afce2d860898c86afd6/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fstrings%2Fconst-cfstring-2.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fstrings%2Fconst-cfstring-2.mm?ref=3a24ea2669c07948cd199afce2d860898c86afd6", "patch": "@@ -8,8 +8,8 @@\n /* { dg-skip-if \"NeXT only\" { *-*-* } { \"-fgnu-runtime\" } { \"\" } } */\n /* { dg-options \"-ftrack-macro-expansion=0 -mconstant-cfstrings -Wnonportable-cfstrings\" } */\n \n-#import <Foundation/NSString.h>\n-#import <CoreFoundation/CFString.h>\n+#include \"../../objc-obj-c++-shared/F-NSString.h\"\n+#include \"../../objc-obj-c++-shared/CF-CFString.h\"\n \n #ifndef __CONSTANT_CFSTRINGS__\n #error The -fconstant-cfstrings option is not functioning properly"}, {"sha": "762afb6b1ba5c256685a9ea9cbae3a3aa2a314f8", "filename": "gcc/testsuite/obj-c++.dg/strings/const-cfstring-5.mm", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a24ea2669c07948cd199afce2d860898c86afd6/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fstrings%2Fconst-cfstring-5.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a24ea2669c07948cd199afce2d860898c86afd6/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fstrings%2Fconst-cfstring-5.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fstrings%2Fconst-cfstring-5.mm?ref=3a24ea2669c07948cd199afce2d860898c86afd6", "patch": "@@ -6,7 +6,7 @@\n /* { dg-skip-if \"NeXT only\" { *-*-* } { \"-fgnu-runtime\" } { \"\" } } */\n /* { dg-options \"-mconstant-cfstrings\" } */\n \n-#include <Foundation/NSObject.h>\n+#include \"../../objc-obj-c++-shared/F-NSObject.h\"\n \n @interface Foo: NSObject {\n   char *cString;"}, {"sha": "ade24b3a22ca84fabed926fb3094d01acd978f2a", "filename": "gcc/testsuite/obj-c++.dg/strings/const-str-12.mm", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a24ea2669c07948cd199afce2d860898c86afd6/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fstrings%2Fconst-str-12.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a24ea2669c07948cd199afce2d860898c86afd6/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fstrings%2Fconst-str-12.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fstrings%2Fconst-str-12.mm?ref=3a24ea2669c07948cd199afce2d860898c86afd6", "patch": "@@ -6,7 +6,7 @@\n /* { dg-options \"-mno-constant-cfstrings -fconstant-string-class=Foo\" { target *-*-darwin* } } */\n \n #ifdef __NEXT_RUNTIME__\n-#include <Foundation/NSObject.h>\n+#include \"../../objc-obj-c++-shared/F-NSObject.h\"\n #define OBJECT NSObject\n #else\n #include <objc/Object.h>"}, {"sha": "c2355437afc8051bdd472f34e689d6e3904f5b00", "filename": "gcc/testsuite/obj-c++.dg/stubify-1.mm", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a24ea2669c07948cd199afce2d860898c86afd6/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fstubify-1.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a24ea2669c07948cd199afce2d860898c86afd6/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fstubify-1.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fstubify-1.mm?ref=3a24ea2669c07948cd199afce2d860898c86afd6", "patch": "@@ -10,7 +10,7 @@\n int x = 41 ;\n \n extern \"C\" {\n-  extern id objc_msgSend(id self, char * op, ...);\n+  extern id objc_msgSend(id self, objc_selector* op, ...);\n   extern int bogonic (int, int, int);\n }\n \n@@ -20,9 +20,9 @@ - (Document *) class;\n - (Document *) close;\n @end\n @implementation Document\n-- (Document *) class { }\n-- (Document *) close { }\n-- (Document *) window { }\n+- (Document *) class { return (Document *)0; }\n+- (Document *) close { return (Document *)0; }\n+- (Document *) window { return (Document *)0; }\n - (void)willEndCloseSheet:(void *)sheet returnCode:(int)returnCode contextInfo:(void *)contextInfo {\n   [[self window] close];\n   ((void (*)(id, char *, int))objc_msgSend)([self class], (char *)contextInfo, 1);"}, {"sha": "a9f66cac5d26b72d4223edf05c7adab08b183d44", "filename": "gcc/testsuite/obj-c++.dg/stubify-2.mm", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a24ea2669c07948cd199afce2d860898c86afd6/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fstubify-2.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a24ea2669c07948cd199afce2d860898c86afd6/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fstubify-2.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fstubify-2.mm?ref=3a24ea2669c07948cd199afce2d860898c86afd6", "patch": "@@ -16,9 +16,9 @@ - (Document *) class;\n - (Document *) close;\n @end\n @implementation Document\n-- (Document *) class { }\n-- (Document *) close { }\n-- (Document *) window { }\n+- (Document *) class { return (Document *)0; }\n+- (Document *) close { return (Document *)0; }\n+- (Document *) window { return (Document *)0; }\n - (void)willEndCloseSheet:(void *)sheet returnCode:(int)returnCode contextInfo:(void *)contextInfo {\n   [[self window] close];\n   ((void (*)(id, char *, int))objc_msgSend)([self class], (char *)contextInfo, 1);"}, {"sha": "edbd9efc96490370039f23800c9b61140eaaf19a", "filename": "gcc/testsuite/obj-c++.dg/syntax-error-1.mm", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a24ea2669c07948cd199afce2d860898c86afd6/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fsyntax-error-1.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a24ea2669c07948cd199afce2d860898c86afd6/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fsyntax-error-1.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fsyntax-error-1.mm?ref=3a24ea2669c07948cd199afce2d860898c86afd6", "patch": "@@ -1,8 +1,10 @@\n /* Graceful handling of a syntax error.  */\n /* { dg-do compile } */\n+/* Suppress warnings that the GNUStep headers introduce.  */\n+/* { dg-additional-options \"-std=gnu++11 -Wno-expansion-to-defined -Wno-variadic-macros\" { target *-*-darwin* } } */\n \n #ifdef __NEXT_RUNTIME__\n-#include <Foundation/NSObject.h>\n+#include \"../objc-obj-c++-shared/F-NSObject.h\"\n #define OBJECT NSObject\n #else\n #include <objc/Object.h>"}, {"sha": "0f1d92bb5ce021d5f1bc09b15c449c7287a202f6", "filename": "gcc/testsuite/obj-c++.dg/torture/strings/const-cfstring-1.mm", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a24ea2669c07948cd199afce2d860898c86afd6/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Ftorture%2Fstrings%2Fconst-cfstring-1.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a24ea2669c07948cd199afce2d860898c86afd6/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Ftorture%2Fstrings%2Fconst-cfstring-1.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Ftorture%2Fstrings%2Fconst-cfstring-1.mm?ref=3a24ea2669c07948cd199afce2d860898c86afd6", "patch": "@@ -13,8 +13,8 @@\n    well, we don't implement writable ones at this juncture.  */\n /* { dg-options \"-mconstant-cfstrings -framework Cocoa -Wl,-w\" { target *-*-darwin[123]* } } */\n \n-#import <Foundation/NSString.h>\n-#import <CoreFoundation/CFString.h>\n+#include \"../../../objc-obj-c++-shared/F-NSString.h\"\n+#include \"../../../objc-obj-c++-shared/CF-CFString.h\"\n #include <stdlib.h>\n \n void printOut(NSString *str) {\n@@ -47,10 +47,10 @@ int main(void) {\n   checkNSRange([@\"Hello World\" rangeOfString:(id)CFSTR(\"World\")]);\n   checkNSRange([(id)CFSTR(\"Hello World\") rangeOfString:(id)CFSTR(\"World\")]);\n \n-  checkCFRange(CFStringFind((CFStringRef)@\"Hello World\", (CFStringRef)@\"World\", 0));\n-  checkCFRange(CFStringFind(CFSTR(\"Hello World\"), (CFStringRef)@\"World\", 0));\n-  checkCFRange(CFStringFind((CFStringRef)@\"Hello World\", CFSTR(\"World\"), 0));\n-  checkCFRange(CFStringFind(CFSTR(\"Hello World\"), CFSTR(\"World\"), 0));\n+  checkCFRange(CFStringFind((CFStringRef)@\"Hello World\", (CFStringRef)@\"World\", (CFStringCompareFlags)0));\n+  checkCFRange(CFStringFind(CFSTR(\"Hello World\"), (CFStringRef)@\"World\", (CFStringCompareFlags)0));\n+  checkCFRange(CFStringFind((CFStringRef)@\"Hello World\", CFSTR(\"World\"), (CFStringCompareFlags)0));\n+  checkCFRange(CFStringFind(CFSTR(\"Hello World\"), CFSTR(\"World\"), (CFStringCompareFlags)0));\n \n   /* Check for string uniquing.  */\n   if (s0a != s0b || s0a != s2 || s1 != (id)s2) {"}, {"sha": "e1dad124cd6dac46026d9bc52b355a2f53f1af8c", "filename": "gcc/testsuite/obj-c++.dg/torture/strings/const-str-10.mm", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a24ea2669c07948cd199afce2d860898c86afd6/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Ftorture%2Fstrings%2Fconst-str-10.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a24ea2669c07948cd199afce2d860898c86afd6/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Ftorture%2Fstrings%2Fconst-str-10.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Ftorture%2Fstrings%2Fconst-str-10.mm?ref=3a24ea2669c07948cd199afce2d860898c86afd6", "patch": "@@ -6,7 +6,7 @@\n /* { dg-skip-if \"\" { *-*-* } { \"-fgnu-runtime\" } { \"\" } } */\n /* { dg-options \"-mno-constant-cfstrings\" { target *-*-darwin* } } */\n \n-#include <Foundation/NSObject.h>\n+#include \"../../../objc-obj-c++-shared/F-NSObject.h\"\n #include \"../../../objc-obj-c++-shared/runtime.h\" /* For NEXT_OBJC_USE_NEW_INTERFACE.  */\n \n @interface NSString: NSObject"}, {"sha": "30a9228a64eca823f6e46f44a77ec5eb3dbe88c7", "filename": "gcc/testsuite/obj-c++.dg/torture/strings/const-str-11.mm", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a24ea2669c07948cd199afce2d860898c86afd6/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Ftorture%2Fstrings%2Fconst-str-11.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a24ea2669c07948cd199afce2d860898c86afd6/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Ftorture%2Fstrings%2Fconst-str-11.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Ftorture%2Fstrings%2Fconst-str-11.mm?ref=3a24ea2669c07948cd199afce2d860898c86afd6", "patch": "@@ -7,7 +7,7 @@\n /* { dg-options \"-fconstant-string-class=XStr\" } */\n /* { dg-options \"-mno-constant-cfstrings -fconstant-string-class=XStr\" { target *-*-darwin* } } */\n \n-#include <Foundation/NSObject.h>\n+#include \"../../../objc-obj-c++-shared/F-NSObject.h\"\n #include \"../../../objc-obj-c++-shared/runtime.h\" /* For NEXT_OBJC_USE_NEW_INTERFACE.  */\n \n @interface XString: NSObject {"}, {"sha": "a1a14295e905358e8725725a2c278ec057bf2599", "filename": "gcc/testsuite/obj-c++.dg/torture/strings/const-str-9.mm", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a24ea2669c07948cd199afce2d860898c86afd6/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Ftorture%2Fstrings%2Fconst-str-9.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a24ea2669c07948cd199afce2d860898c86afd6/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Ftorture%2Fstrings%2Fconst-str-9.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Ftorture%2Fstrings%2Fconst-str-9.mm?ref=3a24ea2669c07948cd199afce2d860898c86afd6", "patch": "@@ -5,7 +5,7 @@\n /* { dg-skip-if \"\" { *-*-* } { \"-fgnu-runtime\" } { \"\" } } */\n /* { dg-options \"-mno-constant-cfstrings\" { target *-*-darwin* } } */\n \n-#include <Foundation/NSObject.h>\n+#include \"../../../objc-obj-c++-shared/F-NSObject.h\"\n #include \"../../../objc-obj-c++-shared/runtime.h\" /* For NEXT_OBJC_USE_NEW_INTERFACE.  */\n \n @interface NSConstantString: NSObject {"}, {"sha": "1688995a2bf526097b7bf57185adbeb195de0e5d", "filename": "gcc/testsuite/obj-c++.dg/try-catch-1.mm", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a24ea2669c07948cd199afce2d860898c86afd6/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Ftry-catch-1.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a24ea2669c07948cd199afce2d860898c86afd6/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Ftry-catch-1.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Ftry-catch-1.mm?ref=3a24ea2669c07948cd199afce2d860898c86afd6", "patch": "@@ -39,4 +39,5 @@ int foo()\n   @finally {\n     printf(\"In @finally block (%d)... \", exc_control);\n   }\n+  return -1;\n }"}, {"sha": "e6868a350eb22eefda6e66fe48714ff6fda8764c", "filename": "gcc/testsuite/obj-c++.dg/try-catch-3.mm", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a24ea2669c07948cd199afce2d860898c86afd6/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Ftry-catch-3.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a24ea2669c07948cd199afce2d860898c86afd6/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Ftry-catch-3.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Ftry-catch-3.mm?ref=3a24ea2669c07948cd199afce2d860898c86afd6", "patch": "@@ -15,4 +15,5 @@\n   @catch (TestsuiteObject* theException) {\n     return [theException name];\n   }\n+  return (const char *)0;\n }"}]}