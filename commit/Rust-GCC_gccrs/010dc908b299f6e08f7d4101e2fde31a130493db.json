{"sha": "010dc908b299f6e08f7d4101e2fde31a130493db", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDEwZGM5MDhiMjk5ZjZlMDhmN2Q0MTAxZTJmZGUzMWExMzA0OTNkYg==", "commit": {"author": {"name": "John David Anglin", "email": "dave@hiauly1.hia.nrc.ca", "date": "2001-08-20T18:12:39Z"}, "committer": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2001-08-20T18:12:39Z"}, "message": "* pa.h (RETURN_IN_MEMORY): Improve comment.\n\nFrom-SVN: r45059", "tree": {"sha": "457d20ce6cc7c0d33ef52eee0ee3da43aae8063d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/457d20ce6cc7c0d33ef52eee0ee3da43aae8063d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/010dc908b299f6e08f7d4101e2fde31a130493db", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/010dc908b299f6e08f7d4101e2fde31a130493db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/010dc908b299f6e08f7d4101e2fde31a130493db", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/010dc908b299f6e08f7d4101e2fde31a130493db/comments", "author": null, "committer": null, "parents": [{"sha": "5e42753176a10f8a11167beae7e53855a6738d1e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e42753176a10f8a11167beae7e53855a6738d1e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5e42753176a10f8a11167beae7e53855a6738d1e"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "520dfba59d7261a2ca4a4eb6565a6f52d827d2bb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/010dc908b299f6e08f7d4101e2fde31a130493db/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/010dc908b299f6e08f7d4101e2fde31a130493db/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=010dc908b299f6e08f7d4101e2fde31a130493db", "patch": "@@ -1,3 +1,7 @@\n+2001-08-20  John David Anglin  <dave@hiauly1.hia.nrc.ca>\n+\n+\t* pa.h (RETURN_IN_MEMORY): Improve comment.\n+\n 2001-08-20  Janis Johnson  <janis187@us.ibm.com>\n \n \t* gcc.misc-tests/gcov.exp: Add support for branch information."}, {"sha": "464716723bb434a33d330c8a5eec2e390535b807", "filename": "gcc/config/pa/pa.h", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/010dc908b299f6e08f7d4101e2fde31a130493db/gcc%2Fconfig%2Fpa%2Fpa.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/010dc908b299f6e08f7d4101e2fde31a130493db/gcc%2Fconfig%2Fpa%2Fpa.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.h?ref=010dc908b299f6e08f7d4101e2fde31a130493db", "patch": "@@ -508,8 +508,9 @@ extern struct rtx_def *hppa_pic_save_rtx PARAMS ((void));\n \n /* SOM ABI says that objects larger than 64 bits are returned in memory.\n    PA64 ABI says that objects larger than 128 bits are returned in memory.\n-   Note that int_size_in_bytes can return -1 if the size is variable\n-   or larger than an integer.  */\n+   Note, int_size_in_bytes can return -1 if the size of the object is\n+   variable or larger than the maximum value that can be expressed as\n+   a HOST_WIDE_INT.  */\n #define RETURN_IN_MEMORY(TYPE)\t\\\n   ((unsigned HOST_WIDE_INT) int_size_in_bytes (TYPE) > (TARGET_64BIT ? 16 : 8))\n "}]}