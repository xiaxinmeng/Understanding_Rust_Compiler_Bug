{"sha": "530ec1acebc6c7808b013ab1d7b0d8b30edeab18", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTMwZWMxYWNlYmM2Yzc4MDhiMDEzYWIxZDdiMGQ4YjMwZWRlYWIxOA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2019-05-07T13:03:19Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2019-05-07T13:03:19Z"}, "message": "re PR tree-optimization/90316 (large compile time increase in opt / alias stmt walking for Go example)\n\n2019-05-07  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/90316\n\t* tree-ssa-pre.c (translate_vuse_through_block): When\n\tsame_valid is NULL do not bother to search for a virtual\n\tPHI continuation.\n\t(phi_translate_1): When operands changed we cannot keep\n\tthe same value-number so do not bother to ask whether\n\tthat's possible from translate_vuse_through_block.\n\nFrom-SVN: r270944", "tree": {"sha": "4c84a9339a42c4ba577a1ea199054932d2cacb82", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4c84a9339a42c4ba577a1ea199054932d2cacb82"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/530ec1acebc6c7808b013ab1d7b0d8b30edeab18", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/530ec1acebc6c7808b013ab1d7b0d8b30edeab18", "html_url": "https://github.com/Rust-GCC/gccrs/commit/530ec1acebc6c7808b013ab1d7b0d8b30edeab18", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/530ec1acebc6c7808b013ab1d7b0d8b30edeab18/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d7b6aee8cd346328b6f22fc415ffc28b9cf8a285", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7b6aee8cd346328b6f22fc415ffc28b9cf8a285", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7b6aee8cd346328b6f22fc415ffc28b9cf8a285"}], "stats": {"total": 28, "additions": 18, "deletions": 10}, "files": [{"sha": "cd4eb091d2abe2c352db5406dd0520e9bfeacc8c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/530ec1acebc6c7808b013ab1d7b0d8b30edeab18/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/530ec1acebc6c7808b013ab1d7b0d8b30edeab18/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=530ec1acebc6c7808b013ab1d7b0d8b30edeab18", "patch": "@@ -1,3 +1,13 @@\n+2019-05-07  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/90316\n+\t* tree-ssa-pre.c (translate_vuse_through_block): When\n+\tsame_valid is NULL do not bother to search for a virtual\n+\tPHI continuation.\n+\t(phi_translate_1): When operands changed we cannot keep\n+\tthe same value-number so do not bother to ask whether\n+\tthat's possible from translate_vuse_through_block.\n+\n 2019-05-07  Martin Liska  <mliska@suse.cz>\n \n \t* bitmap.c (bitmap_register): Come up with"}, {"sha": "09335faa6a965858925cfd163bdc07be15fd60ac", "filename": "gcc/tree-ssa-pre.c", "status": "modified", "additions": 8, "deletions": 10, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/530ec1acebc6c7808b013ab1d7b0d8b30edeab18/gcc%2Ftree-ssa-pre.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/530ec1acebc6c7808b013ab1d7b0d8b30edeab18/gcc%2Ftree-ssa-pre.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-pre.c?ref=530ec1acebc6c7808b013ab1d7b0d8b30edeab18", "patch": "@@ -1146,7 +1146,8 @@ translate_vuse_through_block (vec<vn_reference_op_s> operands,\n   edge e = NULL;\n   bool use_oracle;\n \n-  *same_valid = true;\n+  if (same_valid)\n+    *same_valid = true;\n \n   if (gimple_bb (phi) != phiblock)\n     return vuse;\n@@ -1179,7 +1180,7 @@ translate_vuse_through_block (vec<vn_reference_op_s> operands,\n \n   if (e)\n     {\n-      if (use_oracle)\n+      if (use_oracle && same_valid)\n \t{\n \t  bitmap visited = NULL;\n \t  /* Try to find a vuse that dominates this phi node by skipping\n@@ -1191,13 +1192,9 @@ translate_vuse_through_block (vec<vn_reference_op_s> operands,\n \t}\n       else\n \tvuse = NULL_TREE;\n-      if (!vuse)\n-\t{\n-\t  /* If we didn't find any, the value ID can't stay the same,\n-\t     but return the translated vuse.  */\n-\t  *same_valid = false;\n-\t  vuse = PHI_ARG_DEF (phi, e->dest_idx);\n-\t}\n+      /* If we didn't find any, the value ID can't stay the same.  */\n+      if (!vuse && same_valid)\n+\t*same_valid = false;\n       /* ??? We would like to return vuse here as this is the canonical\n          upmost vdef that this reference is associated with.  But during\n \t insertion of the references into the hash tables we only ever\n@@ -1535,7 +1532,8 @@ phi_translate_1 (bitmap_set_t dest,\n \t\t\t\t\t\t    ? newoperands : operands,\n \t\t\t\t\t\t    ref->set, ref->type,\n \t\t\t\t\t\t    vuse, phiblock, pred,\n-\t\t\t\t\t\t    &same_valid);\n+\t\t\t\t\t\t    changed\n+\t\t\t\t\t\t    ? NULL : &same_valid);\n \t    if (newvuse == NULL_TREE)\n \t      {\n \t\tnewoperands.release ();"}]}