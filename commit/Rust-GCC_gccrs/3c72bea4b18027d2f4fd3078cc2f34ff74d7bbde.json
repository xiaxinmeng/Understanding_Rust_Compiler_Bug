{"sha": "3c72bea4b18027d2f4fd3078cc2f34ff74d7bbde", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2M3MmJlYTRiMTgwMjdkMmY0ZmQzMDc4Y2MyZjM0ZmY3NGQ3YmJkZQ==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonber@gnat.com", "date": "2001-10-12T00:05:45Z"}, "committer": {"name": "Geert Bosch", "email": "bosch@gcc.gnu.org", "date": "2001-10-12T00:05:45Z"}, "message": "exp_fixd.adb (Expand_Multiply_Fixed_By_Fixed_Giving_Fixed): handle properly the case where one universal operand in a non-static...\n\n\t* exp_fixd.adb (Expand_Multiply_Fixed_By_Fixed_Giving_Fixed): handle\n\tproperly the case where one universal operand in a non-static\n\texponentiation of a real literal.\n\nFrom-SVN: r46211", "tree": {"sha": "2ab1cc5e894069a7e123077ef2642ab7c5656658", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2ab1cc5e894069a7e123077ef2642ab7c5656658"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3c72bea4b18027d2f4fd3078cc2f34ff74d7bbde", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c72bea4b18027d2f4fd3078cc2f34ff74d7bbde", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c72bea4b18027d2f4fd3078cc2f34ff74d7bbde", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c72bea4b18027d2f4fd3078cc2f34ff74d7bbde/comments", "author": null, "committer": null, "parents": [{"sha": "44d8d2bb3bc0b39bff52d12e0d48ebc57116a399", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44d8d2bb3bc0b39bff52d12e0d48ebc57116a399", "html_url": "https://github.com/Rust-GCC/gccrs/commit/44d8d2bb3bc0b39bff52d12e0d48ebc57116a399"}], "stats": {"total": 41, "additions": 38, "deletions": 3}, "files": [{"sha": "929f093bef689be7f6da956cabd69aed9f1498f8", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c72bea4b18027d2f4fd3078cc2f34ff74d7bbde/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c72bea4b18027d2f4fd3078cc2f34ff74d7bbde/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=3c72bea4b18027d2f4fd3078cc2f34ff74d7bbde", "patch": "@@ -1,3 +1,9 @@\n+2001-10-11  Ed Schonberg <schonber@gnat.com>\n+\n+\t* exp_fixd.adb (Expand_Multiply_Fixed_By_Fixed_Giving_Fixed): handle \n+\tproperly the case where one universal operand in a non-static \n+\texponentiation of a real literal.\n+\n 2001-10-11  Ed Schonberg <schonber@gnat.com>\n \n \t* exp_ch7.adb (Find_Final_List): for a type appearing in a with_type "}, {"sha": "0eba7e2673efe8f1eb2f0f810542f070734941e4", "filename": "gcc/ada/exp_fixd.adb", "status": "modified", "additions": 32, "deletions": 3, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c72bea4b18027d2f4fd3078cc2f34ff74d7bbde/gcc%2Fada%2Fexp_fixd.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c72bea4b18027d2f4fd3078cc2f34ff74d7bbde/gcc%2Fada%2Fexp_fixd.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_fixd.adb?ref=3c72bea4b18027d2f4fd3078cc2f34ff74d7bbde", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                            $Revision: 1.54 $\n+--                            $Revision$\n --                                                                          --\n --          Copyright (C) 1992-2001 Free Software Foundation, Inc.          --\n --                                                                          --\n@@ -2082,12 +2082,41 @@ package body Exp_Fixd is\n       Left  : constant Node_Id := Left_Opnd (N);\n       Right : constant Node_Id := Right_Opnd (N);\n \n+      procedure Rewrite_Non_Static_Universal (Opnd : Node_Id);\n+      --  The operand may be a non-static universal value, such an\n+      --  exponentiation with a non-static exponent. In that case, treat\n+      --  as a fixed * fixed multiplication, and convert the argument to\n+      --  the target fixed type.\n+\n+      procedure Rewrite_Non_Static_Universal (Opnd : Node_Id) is\n+         Loc   : constant Source_Ptr := Sloc (N);\n+\n+      begin\n+         Rewrite (Opnd,\n+           Make_Type_Conversion (Loc,\n+             Subtype_Mark => New_Occurrence_Of (Etype (N), Loc),\n+             Expression   => Expression (Opnd)));\n+         Analyze_And_Resolve (Opnd, Etype (N));\n+      end Rewrite_Non_Static_Universal;\n+\n    begin\n       if Etype (Left) = Universal_Real then\n-         Do_Multiply_Fixed_Universal (N, Right, Left);\n+         if Nkind (Left) = N_Real_Literal then\n+            Do_Multiply_Fixed_Universal (N, Right, Left);\n+\n+         elsif Nkind (Left) = N_Type_Conversion then\n+            Rewrite_Non_Static_Universal (Left);\n+            Do_Multiply_Fixed_Fixed (N);\n+         end if;\n \n       elsif Etype (Right) = Universal_Real then\n-         Do_Multiply_Fixed_Universal (N, Left, Right);\n+         if Nkind (Right) = N_Real_Literal then\n+            Do_Multiply_Fixed_Universal (N, Left, Right);\n+\n+         elsif Nkind (Right) = N_Type_Conversion then\n+            Rewrite_Non_Static_Universal (Right);\n+            Do_Multiply_Fixed_Fixed (N);\n+         end if;\n \n       else\n          Do_Multiply_Fixed_Fixed (N);"}]}