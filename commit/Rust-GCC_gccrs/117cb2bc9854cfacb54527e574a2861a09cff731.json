{"sha": "117cb2bc9854cfacb54527e574a2861a09cff731", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTE3Y2IyYmM5ODU0Y2ZhY2I1NDUyN2U1NzRhMjg2MWEwOWNmZjczMQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2012-02-07T15:17:42Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2012-02-07T15:17:42Z"}, "message": "gcc.c (main): Don't look for lto-wrapper or lto-wrapper or LTOPLUGINSONAME if have_c.\n\n\t* gcc.c (main): Don't look for lto-wrapper or lto-wrapper\n\tor LTOPLUGINSONAME if have_c.\n\nFrom-SVN: r183971", "tree": {"sha": "ee838e791a5124cd1cd8df904283c0496c6b49b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ee838e791a5124cd1cd8df904283c0496c6b49b9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/117cb2bc9854cfacb54527e574a2861a09cff731", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/117cb2bc9854cfacb54527e574a2861a09cff731", "html_url": "https://github.com/Rust-GCC/gccrs/commit/117cb2bc9854cfacb54527e574a2861a09cff731", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/117cb2bc9854cfacb54527e574a2861a09cff731/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "deb3f362b31c49f77ca8be8540d1c7e46e54ea40", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/deb3f362b31c49f77ca8be8540d1c7e46e54ea40", "html_url": "https://github.com/Rust-GCC/gccrs/commit/deb3f362b31c49f77ca8be8540d1c7e46e54ea40"}], "stats": {"total": 58, "additions": 36, "deletions": 22}, "files": [{"sha": "11d06bad5acb2be659953a48cf27ef9779b50318", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/117cb2bc9854cfacb54527e574a2861a09cff731/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/117cb2bc9854cfacb54527e574a2861a09cff731/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=117cb2bc9854cfacb54527e574a2861a09cff731", "patch": "@@ -1,5 +1,8 @@\n 2012-02-07  Jakub Jelinek  <jakub@redhat.com>\n \n+\t* gcc.c (main): Don't look for lto-wrapper or lto-wrapper\n+\tor LTOPLUGINSONAME if have_c.\n+\n \t* config/freebsd-spec.h: Add comment about what macros can be defined\n \tin this header.\n \t(LINK_EH_SPEC, LINK_SSP_SPEC, USE_LD_AS_NEEDED): Don't define here."}, {"sha": "315aab321abac4a3020f5aa907b16ea400f13f10", "filename": "gcc/gcc.c", "status": "modified", "additions": 33, "deletions": 22, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/117cb2bc9854cfacb54527e574a2861a09cff731/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/117cb2bc9854cfacb54527e574a2861a09cff731/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=117cb2bc9854cfacb54527e574a2861a09cff731", "patch": "@@ -6447,7 +6447,11 @@ main (int argc, char **argv)\n \n   /* Set up to remember the pathname of the lto wrapper. */\n \n-  lto_wrapper_file = find_a_file (&exec_prefixes, \"lto-wrapper\", X_OK, false);\n+  if (have_c)\n+    lto_wrapper_file = NULL;\n+  else\n+    lto_wrapper_file = find_a_file (&exec_prefixes, \"lto-wrapper\",\n+\t\t\t\t    X_OK, false);\n   if (lto_wrapper_file)\n     {\n       lto_wrapper_spec = lto_wrapper_file;\n@@ -6821,39 +6825,46 @@ warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\\n\\n\"\n   if (num_linker_inputs > 0 && !seen_error () && print_subprocess_help < 2)\n     {\n       int tmp = execution_count;\n+\n+      if (! have_c)\n+\t{\n #if HAVE_LTO_PLUGIN > 0\n #if HAVE_LTO_PLUGIN == 2\n-      const char *fno_use_linker_plugin = \"fno-use-linker-plugin\";\n+\t  const char *fno_use_linker_plugin = \"fno-use-linker-plugin\";\n #else\n-      const char *fuse_linker_plugin = \"fuse-linker-plugin\";\n+\t  const char *fuse_linker_plugin = \"fuse-linker-plugin\";\n #endif\n #endif\n \n-      /* We'll use ld if we can't find collect2.  */\n-      if (! strcmp (linker_name_spec, \"collect2\"))\n-\t{\n-\t  char *s = find_a_file (&exec_prefixes, \"collect2\", X_OK, false);\n-\t  if (s == NULL)\n-\t    linker_name_spec = \"ld\";\n-\t}\n+\t  /* We'll use ld if we can't find collect2.  */\n+\t  if (! strcmp (linker_name_spec, \"collect2\"))\n+\t    {\n+\t      char *s = find_a_file (&exec_prefixes, \"collect2\", X_OK, false);\n+\t      if (s == NULL)\n+\t\tlinker_name_spec = \"ld\";\n+\t    }\n \n #if HAVE_LTO_PLUGIN > 0\n #if HAVE_LTO_PLUGIN == 2\n-      if (!switch_matches (fno_use_linker_plugin,\n-\t\t\t   fno_use_linker_plugin + strlen (fno_use_linker_plugin), 0))\n+\t  if (!switch_matches (fno_use_linker_plugin,\n+\t\t\t       fno_use_linker_plugin\n+\t\t\t       + strlen (fno_use_linker_plugin), 0))\n #else\n-      if (switch_matches (fuse_linker_plugin,\n-\t\t\t  fuse_linker_plugin + strlen (fuse_linker_plugin), 0))\n+\t  if (switch_matches (fuse_linker_plugin,\n+\t\t\t      fuse_linker_plugin\n+\t\t\t      + strlen (fuse_linker_plugin), 0))\n #endif\n-\t{\n-\t  linker_plugin_file_spec = find_a_file (&exec_prefixes,\n-\t\t\t\t\t\t LTOPLUGINSONAME, R_OK,\n-\t\t\t\t\t\t false);\n-\t  if (!linker_plugin_file_spec)\n-\t    fatal_error (\"-fuse-linker-plugin, but %s not found\", LTOPLUGINSONAME);\n-\t}\n+\t    {\n+\t      linker_plugin_file_spec = find_a_file (&exec_prefixes,\n+\t\t\t\t\t\t     LTOPLUGINSONAME, R_OK,\n+\t\t\t\t\t\t     false);\n+\t      if (!linker_plugin_file_spec)\n+\t\tfatal_error (\"-fuse-linker-plugin, but %s not found\",\n+\t\t\t     LTOPLUGINSONAME);\n+\t    }\n #endif\n-      lto_gcc_spec = argv[0];\n+\t  lto_gcc_spec = argv[0];\n+\t}\n \n       /* Rebuild the COMPILER_PATH and LIBRARY_PATH environment variables\n \t for collect.  */"}]}