{"sha": "5404d9df9b49fa984f6474dbb96a113974dc2df2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTQwNGQ5ZGY5YjQ5ZmE5ODRmNjQ3NGRiYjk2YTExMzk3NGRjMmRmMg==", "commit": {"author": {"name": "Hristian Kirtchev", "email": "kirtchev@adacore.com", "date": "2007-10-15T13:56:26Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2007-10-15T13:56:26Z"}, "message": "sem_ch12.adb: Minor code reformatting.\n\n2007-10-15  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* sem_ch12.adb: Minor code reformatting.\n\t(Check_Generic_Child_Unit): Iterate over the homonym chain in order to\n\tfind the parent package which may have been hidden by local\n\tdeclarations.\n\nFrom-SVN: r129332", "tree": {"sha": "462eaac415d5f6404f6957bf4a01c2858dd41a7b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/462eaac415d5f6404f6957bf4a01c2858dd41a7b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5404d9df9b49fa984f6474dbb96a113974dc2df2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5404d9df9b49fa984f6474dbb96a113974dc2df2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5404d9df9b49fa984f6474dbb96a113974dc2df2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5404d9df9b49fa984f6474dbb96a113974dc2df2/comments", "author": {"login": "kirtchev-adacore", "id": 60669983, "node_id": "MDQ6VXNlcjYwNjY5OTgz", "avatar_url": "https://avatars.githubusercontent.com/u/60669983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kirtchev-adacore", "html_url": "https://github.com/kirtchev-adacore", "followers_url": "https://api.github.com/users/kirtchev-adacore/followers", "following_url": "https://api.github.com/users/kirtchev-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/kirtchev-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/kirtchev-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kirtchev-adacore/subscriptions", "organizations_url": "https://api.github.com/users/kirtchev-adacore/orgs", "repos_url": "https://api.github.com/users/kirtchev-adacore/repos", "events_url": "https://api.github.com/users/kirtchev-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/kirtchev-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f91e80203a5d20cfb22bc9be83ba43614e624b4e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f91e80203a5d20cfb22bc9be83ba43614e624b4e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f91e80203a5d20cfb22bc9be83ba43614e624b4e"}], "stats": {"total": 63, "additions": 41, "deletions": 22}, "files": [{"sha": "ab5e1628075c1409bf29751c4ca229ecaa320f26", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 41, "deletions": 22, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5404d9df9b49fa984f6474dbb96a113974dc2df2/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5404d9df9b49fa984f6474dbb96a113974dc2df2/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=5404d9df9b49fa984f6474dbb96a113974dc2df2", "patch": "@@ -2147,10 +2147,30 @@ package body Sem_Ch12 is\n       Formal := New_Copy (Pack_Id);\n       Create_Instantiation_Source (N, Gen_Unit, False, S_Adjustment);\n \n-      --  Make local generic without formals. The formals will be replaced with\n-      --  internal declarations.\n+      begin\n+         --  Make local generic without formals. The formals will be replaced\n+         --  with internal declarations.\n+\n+         New_N := Build_Local_Package;\n+\n+         --  If there are errors in the parameter list, Analyze_Associations\n+         --  raises Instantiation_Error. Patch the declaration to prevent\n+         --  further exception propagation.\n+\n+      exception\n+         when Instantiation_Error =>\n+\n+            Enter_Name (Formal);\n+            Set_Ekind  (Formal, E_Variable);\n+            Set_Etype  (Formal, Any_Type);\n+\n+            if Parent_Installed then\n+               Remove_Parent;\n+            end if;\n+\n+            return;\n+      end;\n \n-      New_N := Build_Local_Package;\n       Rewrite (N, New_N);\n       Set_Defining_Unit_Name (Specification (New_N), Formal);\n       Set_Generic_Parent (Specification (N), Gen_Unit);\n@@ -2231,21 +2251,6 @@ package body Sem_Ch12 is\n       Set_Etype (Pack_Id, Standard_Void_Type);\n       Set_Scope (Pack_Id, Scope (Formal));\n       Set_Has_Completion (Pack_Id, True);\n-\n-      --  If there are errors in the parameter list, Analyze_Associations\n-      --  raises Instantiation_Error. Patch the declaration to prevent\n-      --  further exception propagation.\n-\n-      exception\n-         when Instantiation_Error =>\n-\n-            Enter_Name (Formal);\n-            Set_Ekind  (Formal, E_Variable);\n-            Set_Etype  (Formal, Any_Type);\n-\n-            if Parent_Installed then\n-               Remove_Parent;\n-            end if;\n    end Analyze_Formal_Package;\n \n    ---------------------------------\n@@ -4882,8 +4887,8 @@ package body Sem_Ch12 is\n    is\n       Loc      : constant Source_Ptr := Sloc (Gen_Id);\n       Gen_Par  : Entity_Id := Empty;\n-      Inst_Par : Entity_Id;\n       E        : Entity_Id;\n+      Inst_Par : Entity_Id;\n       S        : Node_Id;\n \n       function Find_Generic_Child\n@@ -5150,7 +5155,22 @@ package body Sem_Ch12 is\n          --  to be installed, if they are not of the same generation.\n \n          Analyze (Prefix (Gen_Id));\n+\n+         --  In the unlikely case that a local declaration hides the name\n+         --  of the parent package, locate it on the homonym chain. If the\n+         --  context is an instance of the parent, the renaming entity is\n+         --  flagged as such.\n+\n          Inst_Par := Entity (Prefix (Gen_Id));\n+         while Present (Inst_Par)\n+           and then Ekind (Inst_Par) /= E_Package\n+           and then Ekind (Inst_Par) /= E_Generic_Package\n+         loop\n+            Inst_Par := Homonym (Inst_Par);\n+         end loop;\n+\n+         pragma Assert (Present (Inst_Par));\n+         Set_Entity (Prefix (Gen_Id), Inst_Par);\n \n          if In_Enclosing_Instance then\n             null;\n@@ -5888,9 +5908,8 @@ package body Sem_Ch12 is\n          end if;\n \n       elsif Nkind (N) = N_Aggregate\n-              or else Nkind (N) = N_Extension_Aggregate\n+        or else Nkind (N) = N_Extension_Aggregate\n       then\n-\n          if not Instantiating then\n             Set_Associated_Node (N, New_N);\n \n@@ -8435,7 +8454,7 @@ package body Sem_Ch12 is\n          Gen_Body := Unit_Declaration_Node (Gen_Body_Id);\n \n          Create_Instantiation_Source\n-          (Inst_Node, Gen_Body_Id, False, S_Adjustment);\n+           (Inst_Node, Gen_Body_Id, False, S_Adjustment);\n \n          Act_Body :=\n            Copy_Generic_Node"}]}