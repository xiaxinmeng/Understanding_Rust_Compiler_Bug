{"sha": "4e8bd75fb6da73a3b5003304c140f7854aa3fcce", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGU4YmQ3NWZiNmRhNzNhM2I1MDAzMzA0YzE0MGY3ODU0YWEzZmNjZQ==", "commit": {"author": {"name": "Philipp Thomas", "email": "pthomas@suse.de", "date": "2000-08-30T23:08:06Z"}, "committer": {"name": "Philipp Thomas", "email": "pthomas@gcc.gnu.org", "date": "2000-08-30T23:08:06Z"}, "message": "gmicro.h (TARGET_SWITCHES): Add descriptions and mark them for translation.\n\n2000-08-22  Philipp Thomas  <pthomas@suse.de>\n            Masanobu Yuhara <yuhara@flab.fujitsu.co.jp>\n\n\t* gmicro.h (TARGET_SWITCHES): Add descriptions and mark them\n\tfor translation.\n\nCo-Authored-By: Masanobu Yuhara <yuhara@flab.fujitsu.co.jp>\n\nFrom-SVN: r36078", "tree": {"sha": "14f99242155deea666307bac02575405760a8ce0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/14f99242155deea666307bac02575405760a8ce0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4e8bd75fb6da73a3b5003304c140f7854aa3fcce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e8bd75fb6da73a3b5003304c140f7854aa3fcce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e8bd75fb6da73a3b5003304c140f7854aa3fcce", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e8bd75fb6da73a3b5003304c140f7854aa3fcce/comments", "author": null, "committer": null, "parents": [{"sha": "b145ee27c77fcce0f4ddb7fcb09bb516fc6d499d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b145ee27c77fcce0f4ddb7fcb09bb516fc6d499d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b145ee27c77fcce0f4ddb7fcb09bb516fc6d499d"}], "stats": {"total": 41, "additions": 25, "deletions": 16}, "files": [{"sha": "a986ca2c993b7feaf18ccd1334acf00fb96d115a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e8bd75fb6da73a3b5003304c140f7854aa3fcce/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e8bd75fb6da73a3b5003304c140f7854aa3fcce/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4e8bd75fb6da73a3b5003304c140f7854aa3fcce", "patch": "@@ -1,3 +1,9 @@\n+2000-08-22  Philipp Thomas  <pthomas@suse.de>\n+            Masanobu Yuhara <yuhara@flab.fujitsu.co.jp>\n+\n+\t* gmicro.h (TARGET_SWITCHES): Add descriptions and mark them\n+\tfor translation.\n+\n 2000-08-30  Greg McGary  <greg@mcgary.org>\n \n \t* Makefile.in (fixinc.sh): Pass CC, CFLAGS and LDFLAGS to mkfixinc.sh"}, {"sha": "10d3d32d8045d45790fa25122342c481ddff98a1", "filename": "gcc/config/gmicro/gmicro.h", "status": "modified", "additions": 19, "deletions": 16, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e8bd75fb6da73a3b5003304c140f7854aa3fcce/gcc%2Fconfig%2Fgmicro%2Fgmicro.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e8bd75fb6da73a3b5003304c140f7854aa3fcce/gcc%2Fconfig%2Fgmicro%2Fgmicro.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fgmicro%2Fgmicro.h?ref=4e8bd75fb6da73a3b5003304c140f7854aa3fcce", "patch": "@@ -86,25 +86,28 @@ extern int target_flags;\n    An empty string NAME is used to identify the default VALUE.  */\n \n #define TARGET_SWITCHES  \\\n-  { { \"g300\", 1},\t\t\t\t\\\n-    { \"g200\", 2},\t\t\t\t\\\n-    { \"g100\", 4},\t\t\t\t\\\n-    { \"fpu\", 8},\t\t\t\t\\\n-    { \"soft-float\", -8},\t\t\t\\\n-    { \"rtd\", 0x10},\t\t\t\t\\\n-    { \"no-rtd\", -0x10},\t\t\t\t\\\n-    { \"regparm\", 0x20},\t\t\t\t\\\n-    { \"no-regparm\", -0x20},\t\t\t\\\n+  { { \"g300\", 1, _(\"Compile for Gmicro/300\")},\t\t\t\\\n+    { \"g200\", 2, _(\"Compile for Gmicro/200\")},\t\t\t\\\n+    { \"g100\", 4, _(\"Compile for Gmicro/100\")},\t\t\t\\\n+    { \"fpu\", 8, _(\"Use floating point co-processor\")},\t\t\\\n+    { \"soft-float\", -8,\t\t\t\t\t\t\\\n+      _(\"Do not use floating point co-processor\")},\t\t\\\n+    { \"rtd\", 0x10, _(\"Alternate calling convention\")},\t\t\\\n+    { \"no-rtd\", -0x10, _(\"Use normal calling convention\")},\t\\\n+    { \"regparm\", 0x20, NULL},\t\t\t\t\t\\\n+    { \"no-regparm\", -0x20, NULL},\t\t\t\t\\\n #if 0 /* Since we don't define PCC_BITFIELD_TYPE_MATTERS or use a large\n \t STRUCTURE_SIZE_BOUNDARY, we must have bitfield instructions.  */\n-    { \"bitfield\", 0x40},\t\t\t\\\n-    { \"no-bitfield\", -0x40},\t\t\t\\\n+    { \"bitfield\", 0x40, _(\"Use bitfield instructions\")},\t\\\n+    { \"no-bitfield\", -0x40,\t\t\t\t\t\\\n+      _(\"Do not use bitfield instructions\")},\t\t\t\\\n #endif\n-    { \"newreturn\", 0x80},\t\t\t\\\n-    { \"no-newreturn\", -0x80},\t\t\t\\\n-    { \"force-smov\", 0x100},\t\t\t\\\n-    { \"no-force-smov\", -0x100},\t\t\t\\\n-    { \"\", TARGET_DEFAULT}}\n+    { \"newreturn\", 0x80, _(\"Use alternative return sequence\")},\t\\\n+    { \"no-newreturn\", -0x80, _(\"Use normal return sequence\")},\t\\\n+    { \"force-smov\", 0x100, _(\"Always use string instruction\")},\t\\\n+    { \"no-force-smov\", -0x100,\t\t\t\t\t\\\n+      _(\"Use string instruction when appropriate\")},\t\t\\\n+    { \"\", TARGET_DEFAULT, NULL}}\n \n \n /* Blow away G100 flag silently off TARGET_fpu (since we can't clear"}]}