{"sha": "004e2fa73b7677e460c760878469d7a6c3759ea4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDA0ZTJmYTczYjc2NzdlNDYwYzc2MDg3ODQ2OWQ3YTZjMzc1OWVhNA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2007-07-06T11:23:59Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2007-07-06T11:23:59Z"}, "message": "gimplify.c (gimplify_call_expr): Prefer DECL_ARGUMENTS over TYPE_ARG_TYPES for verification of argument types.\n\n2007-07-06  Richard Guenther  <rguenther@suse.de>\n\n\t* gimplify.c (gimplify_call_expr): Prefer DECL_ARGUMENTS over\n\tTYPE_ARG_TYPES for verification of argument types.  Use\n\tDECL_ARG_TYPE instead of the PARM_DECL type.  Take excess\n\tparameters as variable arguments.\n\n        * g++.dg/opt/pr30965.C: New testcase.\n\nFrom-SVN: r126412", "tree": {"sha": "f38d084dfce120ac3285b6703630b8c744802276", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f38d084dfce120ac3285b6703630b8c744802276"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/004e2fa73b7677e460c760878469d7a6c3759ea4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/004e2fa73b7677e460c760878469d7a6c3759ea4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/004e2fa73b7677e460c760878469d7a6c3759ea4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/004e2fa73b7677e460c760878469d7a6c3759ea4/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c7ff6e7a7a943f9eed6a66dd41c8e35e9df2bf6c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7ff6e7a7a943f9eed6a66dd41c8e35e9df2bf6c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c7ff6e7a7a943f9eed6a66dd41c8e35e9df2bf6c"}], "stats": {"total": 66, "additions": 52, "deletions": 14}, "files": [{"sha": "f405b26a59700babcac1c6126b8d6e3be9676258", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/004e2fa73b7677e460c760878469d7a6c3759ea4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/004e2fa73b7677e460c760878469d7a6c3759ea4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=004e2fa73b7677e460c760878469d7a6c3759ea4", "patch": "@@ -1,3 +1,10 @@\n+2007-07-06  Richard Guenther  <rguenther@suse.de>\n+\n+\t* gimplify.c (gimplify_call_expr): Prefer DECL_ARGUMENTS over\n+\tTYPE_ARG_TYPES for verification of argument types.  Use\n+\tDECL_ARG_TYPE instead of the PARM_DECL type.  Take excess\n+\tparameters as variable arguments.\n+\n 2007-07-06  Andreas Krebbel  <krebbel1@de.ibm.com>\n \n \t* libgcc2.h (word_type): Type definition removed."}, {"sha": "dd3d5fa5aba32a54bf45585ebb2ba49b0dd8f94d", "filename": "gcc/gimplify.c", "status": "modified", "additions": 21, "deletions": 14, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/004e2fa73b7677e460c760878469d7a6c3759ea4/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/004e2fa73b7677e460c760878469d7a6c3759ea4/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=004e2fa73b7677e460c760878469d7a6c3759ea4", "patch": "@@ -2135,7 +2135,27 @@ gimplify_call_expr (tree *expr_p, tree *pre_p, bool want_value)\n   /* Verify if the type of the argument matches that of the function\n      declaration.  If we cannot verify this or there is a mismatch,\n      mark the call expression so it doesn't get inlined later.  */\n-  if (parms)\n+  if (decl && DECL_ARGUMENTS (decl))\n+    {\n+      for (i = 0, p = DECL_ARGUMENTS (decl); i < nargs;\n+\t   i++, p = TREE_CHAIN (p))\n+\t{\n+\t  /* We cannot distinguish a varargs function from the case\n+\t     of excess parameters, still defering the inlining decision\n+\t     to the callee is possible.  */\n+\t  if (!p)\n+\t    break;\n+\t  if (p == error_mark_node\n+\t      || CALL_EXPR_ARG (*expr_p, i) == error_mark_node\n+\t      || !fold_convertible_p (DECL_ARG_TYPE (p),\n+\t\t\t\t      CALL_EXPR_ARG (*expr_p, i)))\n+\t    {\n+\t      CALL_CANNOT_INLINE_P (*expr_p) = 1;\n+\t      break;\n+\t    }\n+\t}\n+    }\n+  else if (parms)\n     {\n       for (i = 0, p = parms; i < nargs; i++, p = TREE_CHAIN (p))\n \t{\n@@ -2154,19 +2174,6 @@ gimplify_call_expr (tree *expr_p, tree *pre_p, bool want_value)\n \t    }\n \t}\n     }\n-  else if (decl && DECL_ARGUMENTS (decl))\n-    {\n-      for (i = 0, p = DECL_ARGUMENTS (decl); i < nargs;\n-\t   i++, p = TREE_CHAIN (p))\n-\tif (!p\n-\t    || p == error_mark_node\n-\t    || CALL_EXPR_ARG (*expr_p, i) == error_mark_node\n-\t    || !fold_convertible_p (TREE_TYPE (p), CALL_EXPR_ARG (*expr_p, i)))\n-\t  {\n-\t    CALL_CANNOT_INLINE_P (*expr_p) = 1;\n-\t    break;\n-\t  }\n-    }\n   else if (nargs != 0)\n     CALL_CANNOT_INLINE_P (*expr_p) = 1;\n "}, {"sha": "4d5e6885a5ffda6d6f30d6614aae935df626dc18", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/004e2fa73b7677e460c760878469d7a6c3759ea4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/004e2fa73b7677e460c760878469d7a6c3759ea4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=004e2fa73b7677e460c760878469d7a6c3759ea4", "patch": "@@ -1,3 +1,7 @@\n+2007-07-06  Richard Guenther  <rguenther@suse.de>\n+\n+\t* g++.dg/opt/pr30965.C: New testcase.\n+\n 2007-07-06  Richard Sandiford  <richard@codesourcery.com>\n \n \t* gcc.target/mips/save-restore-5.c: New test."}, {"sha": "c41cf914749a7bea345c38f55e96e4981749218d", "filename": "gcc/testsuite/g++.dg/opt/pr30965.C", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/004e2fa73b7677e460c760878469d7a6c3759ea4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr30965.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/004e2fa73b7677e460c760878469d7a6c3759ea4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr30965.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr30965.C?ref=004e2fa73b7677e460c760878469d7a6c3759ea4", "patch": "@@ -0,0 +1,20 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -fdump-tree-optimized\" } */\n+\n+#include <tr1/functional>\n+#include <algorithm>\n+\n+extern void assign( long* variable, long v )\n+{\n+        std::transform( variable, variable + 1, variable,\n+                std::tr1::bind( std::plus< long >(), 0L, v ) );\n+}\n+extern void assign( long& variable, long v )\n+{\n+        std::transform( &variable, &variable + 1, &variable,\n+                std::tr1::bind( std::plus< long >(), 0L, v ) );\n+}\n+\n+/* { dg-final { scan-tree-dump-times \";; Function\" 2 \"optimized\" } } */\n+/* { dg-final { scan-tree-dump-times \"variable = v\" 2 \"optimized\" } } */\n+/* { dg-final { cleanup-tree-dump \"optimized\" } } */"}]}