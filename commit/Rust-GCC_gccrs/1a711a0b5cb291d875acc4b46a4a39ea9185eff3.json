{"sha": "1a711a0b5cb291d875acc4b46a4a39ea9185eff3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWE3MTFhMGI1Y2IyOTFkODc1YWNjNGI0NmE0YTM5ZWE5MTg1ZWZmMw==", "commit": {"author": {"name": "Max Filippov", "email": "jcmvbkbc@gmail.com", "date": "2017-06-14T17:19:44Z"}, "committer": {"name": "Max Filippov", "email": "jcmvbkbc@gcc.gnu.org", "date": "2017-06-14T17:19:44Z"}, "message": "gcc: xtensa: allow XCHAL_* macros to be non-constant\n\nXCHAL_* macros from the xtensa-config.h are used in a number of places\nthat require them to be preprocessor constants. Rewrite these places so\nthat non-constant XCHAL_* definitions could be used there.\n\n2017-06-14  Max Filippov  <jcmvbkbc@gmail.com>\ngcc/\n\t* config/xtensa/xtensa.c (xtensa_option_override): Append\n\tMASK_CONST16 to target_flags in the absence of TARGET_L32R.\n\t(hwloop_optimize, hwloop_fail, hwloop_pattern_reg,\n\t xtensa_doloop_hooks): Define unconditionally.\n\t(xtensa_reorg_loops): Only call reorg_loops in the presence of\n\tTARGET_LOOPS.\n\t* config/xtensa/xtensa.h (TARGET_L32R): New definition.\n\t(TARGET_DEFAULT): Remove XCHAL_HAVE_L32R condition and account\n\tfor it in xtensa_option_override.\n\t(HARD_FRAME_POINTER_IS_FRAME_POINTER,\n\t HARD_FRAME_POINTER_IS_ARG_POINTER): New definitions.\n\nFrom-SVN: r249202", "tree": {"sha": "d2e9392c022dcd73efccb21c1b22c8a1bcee4d11", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d2e9392c022dcd73efccb21c1b22c8a1bcee4d11"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1a711a0b5cb291d875acc4b46a4a39ea9185eff3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a711a0b5cb291d875acc4b46a4a39ea9185eff3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a711a0b5cb291d875acc4b46a4a39ea9185eff3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a711a0b5cb291d875acc4b46a4a39ea9185eff3/comments", "author": {"login": "jcmvbkbc", "id": 166731, "node_id": "MDQ6VXNlcjE2NjczMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/166731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jcmvbkbc", "html_url": "https://github.com/jcmvbkbc", "followers_url": "https://api.github.com/users/jcmvbkbc/followers", "following_url": "https://api.github.com/users/jcmvbkbc/following{/other_user}", "gists_url": "https://api.github.com/users/jcmvbkbc/gists{/gist_id}", "starred_url": "https://api.github.com/users/jcmvbkbc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jcmvbkbc/subscriptions", "organizations_url": "https://api.github.com/users/jcmvbkbc/orgs", "repos_url": "https://api.github.com/users/jcmvbkbc/repos", "events_url": "https://api.github.com/users/jcmvbkbc/events{/privacy}", "received_events_url": "https://api.github.com/users/jcmvbkbc/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e72c4afd99c06e29b4f73f61ee0ff9091bf7fa02", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e72c4afd99c06e29b4f73f61ee0ff9091bf7fa02", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e72c4afd99c06e29b4f73f61ee0ff9091bf7fa02"}], "stats": {"total": 43, "additions": 31, "deletions": 12}, "files": [{"sha": "09435d094dd5b098baaa7da70e84ac703bcb4d99", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a711a0b5cb291d875acc4b46a4a39ea9185eff3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a711a0b5cb291d875acc4b46a4a39ea9185eff3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1a711a0b5cb291d875acc4b46a4a39ea9185eff3", "patch": "@@ -1,3 +1,17 @@\n+2017-06-14  Max Filippov  <jcmvbkbc@gmail.com>\n+\n+\t* config/xtensa/xtensa.c (xtensa_option_override): Append\n+\tMASK_CONST16 to target_flags in the absence of TARGET_L32R.\n+\t(hwloop_optimize, hwloop_fail, hwloop_pattern_reg,\n+\t xtensa_doloop_hooks): Define unconditionally.\n+\t(xtensa_reorg_loops): Only call reorg_loops in the presence of\n+\tTARGET_LOOPS.\n+\t* config/xtensa/xtensa.h (TARGET_L32R): New definition.\n+\t(TARGET_DEFAULT): Remove XCHAL_HAVE_L32R condition and account\n+\tfor it in xtensa_option_override.\n+\t(HARD_FRAME_POINTER_IS_FRAME_POINTER,\n+\t HARD_FRAME_POINTER_IS_ARG_POINTER): New definitions.\n+\n 2017-06-14  Boris Kolpackov  <boris@codesynthesis.com>\n \n \t* doc/cppopts.texi: Document '-' special value to -MF."}, {"sha": "cf9a3a793885cf9599b2a8a14298fc0ad2e549a6", "filename": "gcc/config/xtensa/xtensa.c", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a711a0b5cb291d875acc4b46a4a39ea9185eff3/gcc%2Fconfig%2Fxtensa%2Fxtensa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a711a0b5cb291d875acc4b46a4a39ea9185eff3/gcc%2Fconfig%2Fxtensa%2Fxtensa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxtensa%2Fxtensa.c?ref=1a711a0b5cb291d875acc4b46a4a39ea9185eff3", "patch": "@@ -2182,6 +2182,13 @@ xtensa_option_override (void)\n   int regno;\n   machine_mode mode;\n \n+  /* Use CONST16 in the absence of L32R.\n+     Set it in the TARGET_OPTION_OVERRIDE to avoid dependency on xtensa\n+     configuration in the xtensa-common.c  */\n+\n+  if (!TARGET_L32R)\n+    target_flags |= MASK_CONST16;\n+\n   if (!TARGET_BOOLEANS && TARGET_HARD_FLOAT)\n     error (\"boolean registers required for the floating-point option\");\n \n@@ -4078,8 +4085,6 @@ xtensa_invalid_within_doloop (const rtx_insn *insn)\n \n /* Optimize LOOP.  */\n \n-#if TARGET_LOOPS\n-\n static bool\n hwloop_optimize (hwloop_info loop)\n {\n@@ -4266,14 +4271,9 @@ static struct hw_doloop_hooks xtensa_doloop_hooks =\n static void\n xtensa_reorg_loops (void)\n {\n-  reorg_loops (false, &xtensa_doloop_hooks);\n-}\n-#else\n-static inline void\n-xtensa_reorg_loops (void)\n-{\n+  if (TARGET_LOOPS)\n+    reorg_loops (false, &xtensa_doloop_hooks);\n }\n-#endif\n \n /* Implement the TARGET_MACHINE_DEPENDENT_REORG pass.  */\n "}, {"sha": "06dc82cd070617741ebed7dfd53ffdfefb893b8f", "filename": "gcc/config/xtensa/xtensa.h", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a711a0b5cb291d875acc4b46a4a39ea9185eff3/gcc%2Fconfig%2Fxtensa%2Fxtensa.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a711a0b5cb291d875acc4b46a4a39ea9185eff3/gcc%2Fconfig%2Fxtensa%2Fxtensa.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxtensa%2Fxtensa.h?ref=1a711a0b5cb291d875acc4b46a4a39ea9185eff3", "patch": "@@ -66,10 +66,9 @@ along with GCC; see the file COPYING3.  If not see\n #define TARGET_LOOPS\t        XCHAL_HAVE_LOOPS\n #define TARGET_WINDOWED_ABI\t(XSHAL_ABI == XTHAL_ABI_WINDOWED)\n #define TARGET_DEBUG\t\tXCHAL_HAVE_DEBUG\n+#define TARGET_L32R\t\tXCHAL_HAVE_L32R\n \n-#define TARGET_DEFAULT \\\n-  ((XCHAL_HAVE_L32R\t? 0 : MASK_CONST16) |\t\t\t\t\\\n-   MASK_SERIALIZE_VOLATILE)\n+#define TARGET_DEFAULT (MASK_SERIALIZE_VOLATILE)\n \n #ifndef HAVE_AS_TLS\n #define HAVE_AS_TLS 0\n@@ -362,6 +361,12 @@ extern char xtensa_hard_regno_mode_ok[][FIRST_PSEUDO_REGISTER];\n /* Base register for access to arguments of the function.  */\n #define ARG_POINTER_REGNUM (GP_REG_FIRST + 17)\n \n+/* Hard frame pointer is neither frame nor arg pointer.\n+   The definitions are here because actual hard frame pointer register\n+   definition is not a preprocessor constant.  */\n+#define HARD_FRAME_POINTER_IS_FRAME_POINTER 0\n+#define HARD_FRAME_POINTER_IS_ARG_POINTER 0\n+\n /* For now we don't try to use the full set of boolean registers.  Without\n    software pipelining of FP operations, there's not much to gain and it's\n    a real pain to get them reloaded.  */"}]}