{"sha": "cf9d67e3e8aa596271353f56c49dbe6ebbe3f7ad", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2Y5ZDY3ZTNlOGFhNTk2MjcxMzUzZjU2YzQ5ZGJlNmViYmUzZjdhZA==", "commit": {"author": {"name": "Brendan Kehoe", "email": "brendan@lisa.cygnus.com", "date": "1997-10-31T23:17:35Z"}, "committer": {"name": "Brendan Kehoe", "email": "brendan@gcc.gnu.org", "date": "1997-10-31T23:17:35Z"}, "message": "except.c (push_eh_info): Pass the number of fields - 1 down, not the exact number of fields.\n\n        * except.c (push_eh_info): Pass the number of fields - 1 down, not\n        the exact number of fields.\n\ncuz in finish_builtin_type, its comment sez\n\n   LEN is the number of elements\n   in FIELDS minus one, or put another way, it is the maximum subscript\n   used in FIELDS.\n\nand its code does\n\n  for (i = 0; i < len; i++)\n    {\n      layout_type (TREE_TYPE (fields[i]));\n      DECL_FIELD_CONTEXT (fields[i]) = type;\n      TREE_CHAIN (fields[i]) = fields[i+1];\n    }\n  DECL_FIELD_CONTEXT (fields[i]) = type;\n  DECL_CLASS_CONTEXT (fields[i]) = type;\n\nthus expecting the final ones to be fields[4], not fields[5] (which is\nthe actual size from 0, not the last field member)\n\nFrom-SVN: r16257", "tree": {"sha": "dff5b59bd20c5f553511ec9e6abb17639fc45d92", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dff5b59bd20c5f553511ec9e6abb17639fc45d92"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cf9d67e3e8aa596271353f56c49dbe6ebbe3f7ad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf9d67e3e8aa596271353f56c49dbe6ebbe3f7ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf9d67e3e8aa596271353f56c49dbe6ebbe3f7ad", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf9d67e3e8aa596271353f56c49dbe6ebbe3f7ad/comments", "author": null, "committer": null, "parents": [{"sha": "27ca375af668068978d277ae1d1b92149f121c6a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27ca375af668068978d277ae1d1b92149f121c6a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/27ca375af668068978d277ae1d1b92149f121c6a"}], "stats": {"total": 9, "additions": 8, "deletions": 1}, "files": [{"sha": "78df28f00150e9a1a9e735f4579552f68027f7ca", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf9d67e3e8aa596271353f56c49dbe6ebbe3f7ad/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf9d67e3e8aa596271353f56c49dbe6ebbe3f7ad/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=cf9d67e3e8aa596271353f56c49dbe6ebbe3f7ad", "patch": "@@ -1,3 +1,8 @@\n+1997-10-31  Brendan Kehoe  <brendan@lisa.cygnus.com>\n+\n+\t* except.c (push_eh_info): Pass the number of fields - 1 down, not\n+\tthe exact number of fields.\n+\n Fri Oct 31 01:47:57 1997  Jason Merrill  <jason@yorick.cygnus.com>\n \n \tSupport for nested exceptions."}, {"sha": "cb59774728ac302bad3c66373921b40f907032e5", "filename": "gcc/cp/except.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf9d67e3e8aa596271353f56c49dbe6ebbe3f7ad/gcc%2Fcp%2Fexcept.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf9d67e3e8aa596271353f56c49dbe6ebbe3f7ad/gcc%2Fcp%2Fexcept.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fexcept.c?ref=cf9d67e3e8aa596271353f56c49dbe6ebbe3f7ad", "patch": "@@ -342,7 +342,9 @@ push_eh_info ()\n \t\t\t\t\t boolean_type_node);\n       fields[4] = build_lang_field_decl (FIELD_DECL, get_identifier (\"next\"),\n \t\t\t\t\t build_pointer_type (t));\n-      finish_builtin_type (t, \"cp_eh_info\", fields, 5, ptr_type_node);\n+      /* N.B.: The fourth field LEN is expected to be\n+\t the number of fields - 1, not the total number of fields.  */\n+      finish_builtin_type (t, \"cp_eh_info\", fields, 4, ptr_type_node);\n       t = build_pointer_type (t);\n \n       /* And now the function.  */"}]}