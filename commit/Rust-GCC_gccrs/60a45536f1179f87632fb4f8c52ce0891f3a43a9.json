{"sha": "60a45536f1179f87632fb4f8c52ce0891f3a43a9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjBhNDU1MzZmMTE3OWY4NzYzMmZiNGY4YzUyY2UwODkxZjNhNDNhOQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2011-05-03T08:48:00Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2011-05-03T08:48:00Z"}, "message": "c-decl.c (grokdeclarator): Instead of looking at TREE_OVERFLOW check if the constant fits in the index type.\n\n2011-05-03  Richard Guenther  <rguenther@suse.de>\n\n\t* c-decl.c (grokdeclarator): Instead of looking at\n\tTREE_OVERFLOW check if the constant fits in the index type.\n\n\t* gcc.dg/large-size-array-5.c: New testcase.\n\nFrom-SVN: r173297", "tree": {"sha": "570148c322dc5167165f0bfd7d9b64198c1a2065", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/570148c322dc5167165f0bfd7d9b64198c1a2065"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/60a45536f1179f87632fb4f8c52ce0891f3a43a9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60a45536f1179f87632fb4f8c52ce0891f3a43a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/60a45536f1179f87632fb4f8c52ce0891f3a43a9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60a45536f1179f87632fb4f8c52ce0891f3a43a9/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "539d6b4aec3bbbcacf918db6edb57fe7c65e54d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/539d6b4aec3bbbcacf918db6edb57fe7c65e54d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/539d6b4aec3bbbcacf918db6edb57fe7c65e54d8"}], "stats": {"total": 34, "additions": 25, "deletions": 9}, "files": [{"sha": "aca7c22132025589766f12094e95d9032f4f9e85", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60a45536f1179f87632fb4f8c52ce0891f3a43a9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60a45536f1179f87632fb4f8c52ce0891f3a43a9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=60a45536f1179f87632fb4f8c52ce0891f3a43a9", "patch": "@@ -1,3 +1,8 @@\n+2011-05-03  Richard Guenther  <rguenther@suse.de>\n+\n+\t* c-decl.c (grokdeclarator): Instead of looking at\n+\tTREE_OVERFLOW check if the constant fits in the index type.\n+\n 2011-05-03  Richard Sandiford  <richard.sandiford@linaro.org>\n \n \t* config/arm/neon.md (vec_load_lanes<mode><mode>): New expanders,"}, {"sha": "008f4c65c761293b81e6391b0602a4c238bcdc5a", "filename": "gcc/c-decl.c", "status": "modified", "additions": 7, "deletions": 9, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60a45536f1179f87632fb4f8c52ce0891f3a43a9/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60a45536f1179f87632fb4f8c52ce0891f3a43a9/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=60a45536f1179f87632fb4f8c52ce0891f3a43a9", "patch": "@@ -5368,15 +5368,13 @@ grokdeclarator (const struct c_declarator *declarator,\n \t\t\t\t\t     convert (index_type,\n \t\t\t\t\t\t      size_one_node));\n \n-\t\t    /* If that overflowed, the array is too big.  ???\n-\t\t       While a size of INT_MAX+1 technically shouldn't\n-\t\t       cause an overflow (because we subtract 1), the\n-\t\t       overflow is recorded during the conversion to\n-\t\t       index_type, before the subtraction.  Handling\n-\t\t       this case seems like an unnecessary\n-\t\t       complication.  */\n-\t\t    if (TREE_CODE (itype) == INTEGER_CST\n-\t\t\t&& TREE_OVERFLOW (itype))\n+\t\t    /* The above overflows when size does not fit\n+\t\t       in index_type.\n+\t\t       ???  While a size of INT_MAX+1 technically shouldn't\n+\t\t       cause an overflow (because we subtract 1), handling\n+\t\t       this case seems like an unnecessary complication.  */\n+\t\t    if (TREE_CODE (size) == INTEGER_CST\n+\t\t\t&& !int_fits_type_p (size, index_type))\n \t\t      {\n \t\t\tif (name)\n \t\t\t  error_at (loc, \"size of array %qE is too large\","}, {"sha": "d15361c6b254a611249b124055b87fec84504a6a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60a45536f1179f87632fb4f8c52ce0891f3a43a9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60a45536f1179f87632fb4f8c52ce0891f3a43a9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=60a45536f1179f87632fb4f8c52ce0891f3a43a9", "patch": "@@ -1,3 +1,7 @@\n+2011-05-03  Richard Guenther  <rguenther@suse.de>\n+\n+\t* gcc.dg/large-size-array-5.c: New testcase.\n+\n 2011-05-03  Richard Sandiford  <richard.sandiford@linaro.org>\n \n \t* gcc.dg/vect/vect-strided-u16-i3.c: New test."}, {"sha": "71ac47374f44823b2b0b46006e0aba801774b20c", "filename": "gcc/testsuite/gcc.dg/large-size-array-5.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60a45536f1179f87632fb4f8c52ce0891f3a43a9/gcc%2Ftestsuite%2Fgcc.dg%2Flarge-size-array-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60a45536f1179f87632fb4f8c52ce0891f3a43a9/gcc%2Ftestsuite%2Fgcc.dg%2Flarge-size-array-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flarge-size-array-5.c?ref=60a45536f1179f87632fb4f8c52ce0891f3a43a9", "patch": "@@ -0,0 +1,9 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-Wno-overflow\" } */\n+\n+typedef __SIZE_TYPE__ size_t;\n+\n+extern char a[((size_t)-1 >> 1) + 1]; /* { dg-error \"too large\" } */\n+extern char b[((size_t)-1 >> 1)];\n+extern int c[(((size_t)-1 >> 1) + 1) / sizeof(int)]; /* { dg-error \"too large\" } */\n+extern int d[((size_t)-1 >> 1) / sizeof(int)];"}]}