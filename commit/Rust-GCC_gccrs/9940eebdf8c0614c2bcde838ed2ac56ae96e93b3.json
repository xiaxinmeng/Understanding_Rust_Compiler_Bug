{"sha": "9940eebdf8c0614c2bcde838ed2ac56ae96e93b3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTk0MGVlYmRmOGMwNjE0YzJiY2RlODM4ZWQyYWM1NmFlOTZlOTNiMw==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2008-08-07T15:43:28Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2008-08-07T15:43:28Z"}, "message": "iwmmxt.md (movv8qi_internal, [...]): Combine into mov<mode>_internal.\n\n\t* config/arm/iwmmxt.md (movv8qi_internal, movv4hi_internal,\n\tmovv2si_internal): Combine into mov<mode>_internal.\n\t(movv2si_internal_2): Remove.\n\nFrom-SVN: r138844", "tree": {"sha": "757fea1a24a1e83d949a82aa8ec30ae7d5806444", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/757fea1a24a1e83d949a82aa8ec30ae7d5806444"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9940eebdf8c0614c2bcde838ed2ac56ae96e93b3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9940eebdf8c0614c2bcde838ed2ac56ae96e93b3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9940eebdf8c0614c2bcde838ed2ac56ae96e93b3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9940eebdf8c0614c2bcde838ed2ac56ae96e93b3/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ed85a1f60b8a827af17129d2e76c332ecf13d7bd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed85a1f60b8a827af17129d2e76c332ecf13d7bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed85a1f60b8a827af17129d2e76c332ecf13d7bd"}], "stats": {"total": 70, "additions": 9, "deletions": 61}, "files": [{"sha": "dd32e35da0d1e3d4d49e45eaae7a4a8de9c2019d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9940eebdf8c0614c2bcde838ed2ac56ae96e93b3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9940eebdf8c0614c2bcde838ed2ac56ae96e93b3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9940eebdf8c0614c2bcde838ed2ac56ae96e93b3", "patch": "@@ -1,3 +1,9 @@\n+2008-08-07  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* config/arm/iwmmxt.md (movv8qi_internal, movv4hi_internal,\n+\tmovv2si_internal): Combine into mov<mode>_internal.\n+\t(movv2si_internal_2): Remove.\n+\n 2008-08-07  Jan Hubicka  <jh@suse.cz>\n \n \tPR target/37048"}, {"sha": "668172f84072c47e5f0b875b0b4c93e2b4f1d3eb", "filename": "gcc/config/arm/iwmmxt.md", "status": "modified", "additions": 3, "deletions": 61, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9940eebdf8c0614c2bcde838ed2ac56ae96e93b3/gcc%2Fconfig%2Farm%2Fiwmmxt.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9940eebdf8c0614c2bcde838ed2ac56ae96e93b3/gcc%2Fconfig%2Farm%2Fiwmmxt.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fiwmmxt.md?ref=9940eebdf8c0614c2bcde838ed2ac56ae96e93b3", "patch": "@@ -167,9 +167,9 @@\n    (set_attr \"neg_pool_range\" \"*,*,4084,     *,*,*\")]\n )\n \n-(define_insn \"movv8qi_internal\"\n-  [(set (match_operand:V8QI 0 \"nonimmediate_operand\" \"=y,m,y,?r,?y,?r,?r,?m\")\n-\t(match_operand:V8QI 1 \"general_operand\"       \"y,y,mi,y,r,r,mi,r\"))]\n+(define_insn \"mov<mode>_internal\"\n+  [(set (match_operand:VMMX 0 \"nonimmediate_operand\" \"=y,m,y,?r,?y,?r,?r,?m\")\n+\t(match_operand:VMMX 1 \"general_operand\"       \"y,y,mi,y,r,r,mi,r\"))]\n   \"TARGET_REALLY_IWMMXT\"\n   \"*\n    switch (which_alternative)\n@@ -188,64 +188,6 @@\n    (set_attr \"pool_range\"     \"*,     *, 256,*,*,*, 256,*\")\n    (set_attr \"neg_pool_range\" \"*,     *, 244,*,*,*, 244,*\")])\n \n-(define_insn \"movv4hi_internal\"\n-  [(set (match_operand:V4HI 0 \"nonimmediate_operand\" \"=y,m,y,?r,?y,?r,?r,?m\")\n-\t(match_operand:V4HI 1 \"general_operand\"       \"y,y,mi,y,r,r,mi,r\"))]\n-  \"TARGET_REALLY_IWMMXT\"\n-  \"*\n-   switch (which_alternative)\n-   {\n-   case 0: return \\\"wmov%?\\\\t%0, %1\\\";\n-   case 1: return \\\"wstrd%?\\\\t%1, %0\\\";\n-   case 2: return \\\"wldrd%?\\\\t%0, %1\\\";\n-   case 3: return \\\"tmrrc%?\\\\t%Q0, %R0, %1\\\";\n-   case 4: return \\\"tmcrr%?\\\\t%0, %Q1, %R1\\\";\n-   case 5: return \\\"#\\\";\n-   default: return output_move_double (operands);\n-   }\"\n-  [(set_attr \"predicable\" \"yes\")\n-   (set_attr \"length\"         \"4,     4,   4,4,4,8,   8,8\")\n-   (set_attr \"type\"           \"*,store1,load1,*,*,*,load1,store1\")\n-   (set_attr \"pool_range\"     \"*,     *, 256,*,*,*, 256,*\")\n-   (set_attr \"neg_pool_range\" \"*,     *, 244,*,*,*, 244,*\")])\n-\n-(define_insn \"movv2si_internal\"\n-  [(set (match_operand:V2SI 0 \"nonimmediate_operand\" \"=y,m,y,?r,?y,?r,?r,?m\")\n-\t(match_operand:V2SI 1 \"general_operand\"       \"y,y,mi,y,r,r,mi,r\"))]\n-  \"TARGET_REALLY_IWMMXT\"\n-  \"*\n-   switch (which_alternative)\n-   {\n-   case 0: return \\\"wmov%?\\\\t%0, %1\\\";\n-   case 1: return \\\"wstrd%?\\\\t%1, %0\\\";\n-   case 2: return \\\"wldrd%?\\\\t%0, %1\\\";\n-   case 3: return \\\"tmrrc%?\\\\t%Q0, %R0, %1\\\";\n-   case 4: return \\\"tmcrr%?\\\\t%0, %Q1, %R1\\\";\n-   case 5: return \\\"#\\\";\n-   default: return output_move_double (operands);\n-   }\"\n-  [(set_attr \"predicable\" \"yes\")\n-   (set_attr \"length\"         \"4,     4,   4,4,4,8,  24,8\")\n-   (set_attr \"type\"           \"*,store1,load1,*,*,*,load1,store1\")\n-   (set_attr \"pool_range\"     \"*,     *, 256,*,*,*, 256,*\")\n-   (set_attr \"neg_pool_range\" \"*,     *, 244,*,*,*, 244,*\")])\n-\n-;; This pattern should not be needed.  It is to match a\n-;; wierd case generated by GCC when no optimizations are\n-;; enabled.  (Try compiling gcc/testsuite/gcc.c-torture/\n-;; compile/simd-5.c at -O0).  The mode for operands[1] is\n-;; deliberately omitted.\n-(define_insn \"movv2si_internal_2\"\n-  [(set (match_operand:V2SI 0 \"nonimmediate_operand\" \"=?r\")\n-\t(match_operand      1 \"immediate_operand\"      \"mi\"))]\n-  \"TARGET_REALLY_IWMMXT\"\n-  \"* return output_move_double (operands);\"\n-  [(set_attr \"predicable\"     \"yes\")\n-   (set_attr \"length\"         \"8\")\n-   (set_attr \"type\"           \"load1\")\n-   (set_attr \"pool_range\"     \"256\")\n-   (set_attr \"neg_pool_range\" \"244\")])\n-\n ;; Vector add/subtract\n \n (define_insn \"*add<mode>3_iwmmxt\""}]}