{"sha": "0477256ccc79eee1f16dec52b9067df769a395c1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDQ3NzI1NmNjYzc5ZWVlMWYxNmRlYzUyYjkwNjdkZjc2OWEzOTVjMQ==", "commit": {"author": {"name": "Stephane Carrez", "email": "Stephane.Carrez@worldnet.fr", "date": "2001-07-21T11:39:13Z"}, "committer": {"name": "Stephane Carrez", "email": "ciceron@gcc.gnu.org", "date": "2001-07-21T11:39:13Z"}, "message": "m68hc11.md (\"andqi3\"): Accept d as second operand.\n\n\t* config/m68hc11/m68hc11.md (\"andqi3\"): Accept d as second operand.\n\t(\"iorqi3\"): Likewise.\n\t(\"xorqi3\"): Likewise.\n\t(\"*addhi3\"): Fix constraint to avoid reloading in a soft register.\n\t(\"*subhi3_sp): Likewise.\n\t(\"*subhi3\"): Likewise.\n\t(\"extendhisi2\"): Accept D, X and Y as source operand to avoid\n\treload problems.\n\nFrom-SVN: r44229", "tree": {"sha": "c6b3d30862d410f4e2b642c38b1e14d1afc02cc0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c6b3d30862d410f4e2b642c38b1e14d1afc02cc0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0477256ccc79eee1f16dec52b9067df769a395c1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0477256ccc79eee1f16dec52b9067df769a395c1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0477256ccc79eee1f16dec52b9067df769a395c1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0477256ccc79eee1f16dec52b9067df769a395c1/comments", "author": null, "committer": null, "parents": [{"sha": "c4372ef4c6476dc6ed6da01dbe1b44564aee938f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4372ef4c6476dc6ed6da01dbe1b44564aee938f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c4372ef4c6476dc6ed6da01dbe1b44564aee938f"}], "stats": {"total": 33, "additions": 22, "deletions": 11}, "files": [{"sha": "b5c95a9906d013b5644e2bcfb86dbed808f39f06", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0477256ccc79eee1f16dec52b9067df769a395c1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0477256ccc79eee1f16dec52b9067df769a395c1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0477256ccc79eee1f16dec52b9067df769a395c1", "patch": "@@ -1,3 +1,14 @@\n+2001-07-21  Stephane Carrez  <Stephane.Carrez@worldnet.fr>\n+\n+\t* config/m68hc11/m68hc11.md (\"andqi3\"): Accept d as second operand.\n+\t(\"iorqi3\"): Likewise.\n+\t(\"xorqi3\"): Likewise.\n+\t(\"*addhi3\"): Fix constraint to avoid reloading in a soft register.\n+\t(\"*subhi3_sp): Likewise.\n+\t(\"*subhi3\"): Likewise.\n+\t(\"extendhisi2\"): Accept D, X and Y as source operand to avoid \n+\treload problems.\n+\n 2001-07-21  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* doc/tm.texi: Remove DEFAULT_VTABLE_THUNKS."}, {"sha": "8392c2c491eca3ca739dfe3f2666532aa64000fd", "filename": "gcc/config/m68hc11/m68hc11.md", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0477256ccc79eee1f16dec52b9067df769a395c1/gcc%2Fconfig%2Fm68hc11%2Fm68hc11.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0477256ccc79eee1f16dec52b9067df769a395c1/gcc%2Fconfig%2Fm68hc11%2Fm68hc11.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68hc11%2Fm68hc11.md?ref=0477256ccc79eee1f16dec52b9067df769a395c1", "patch": "@@ -1552,7 +1552,7 @@\n \n (define_insn \"extendhisi2\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=D,D,D\")\n-\t(sign_extend:SI (match_operand:HI 1 \"nonimmediate_operand\" \"m,!r,0\")))]\n+\t(sign_extend:SI (match_operand:HI 1 \"nonimmediate_operand\" \"m,!r,dA\")))]\n   \"\"\n   \"*\n {\n@@ -2283,7 +2283,7 @@\n (define_insn \"*addhi3\"\n   [(set (match_operand:HI 0 \"hard_reg_operand\" \"=A,d,!A,d*A,!d\")\n \t(plus:HI (match_operand:HI 1 \"general_operand\" \"%0,0,0,0,0\")\n-\t\t (match_operand:HI 2 \"general_operand\" \"N,i,I,umi*A*d,!*d*w\")))]\n+\t\t (match_operand:HI 2 \"general_operand\" \"N,i,I,mi*A*d,!u*d*w\")))]\n   \"TARGET_M6811\"\n   \"*\n {\n@@ -2621,7 +2621,7 @@\n (define_insn \"*subhi3_sp\"\n   [(set (match_operand:HI 0 \"stack_register_operand\" \"=w,w\")\n \t(minus:HI (match_operand:HI 1 \"register_operand\" \"0,0\")\n-\t\t  (match_operand:HI 2 \"general_operand\" \"uim*d,!*A\")))\n+\t\t  (match_operand:HI 2 \"general_operand\" \"im*d,!u*A\")))\n    (clobber (match_scratch:HI 3 \"=A*d,A*d\"))]\n   \"\"\n   \"*\n@@ -2670,9 +2670,9 @@\n \n \n (define_insn \"*subhi3\"\n-  [(set (match_operand:HI 0 \"register_operand\" \"=d,*A\")\n-\t(minus:HI (match_operand:HI 1 \"register_operand\" \"0,0\")\n-\t\t  (match_operand:HI 2 \"general_operand\" \"uim*A*d,uim*d*A\")))]\n+  [(set (match_operand:HI 0 \"register_operand\" \"=d,*A,d*A\")\n+\t(minus:HI (match_operand:HI 1 \"register_operand\" \"0,0,0\")\n+\t\t  (match_operand:HI 2 \"general_operand\" \"im*A*d,im*d*A,!u\")))]\n   \"\"\n   \"*\n {\n@@ -3100,7 +3100,7 @@\n (define_insn \"andqi3\"\n   [(set (match_operand:QI 0 \"register_operand\" \"=d,!u,d,d,?*A,?*A,!*q\")\n         (and:QI (match_operand:QI 1 \"register_operand\" \"%0,0,0,0,0,0,0\")\n-             (match_operand:QI 2 \"general_operand\" \"i,i,!um,?*A,i!um,?*A,i!um*A\")))]\n+             (match_operand:QI 2 \"general_operand\" \"i,i,!um,?*A,!ium,?*A*d,!ium*A\")))]\n   \"\"\n   \"*\n {\n@@ -3207,7 +3207,7 @@\n (define_insn \"iorqi3\"\n   [(set (match_operand:QI 0 \"register_operand\" \"=d,!u,d,d,?*A,?*A,!*q\")\n \t(ior:QI (match_operand:QI 1 \"register_operand\" \"%0,0,0,0,0,0,0\")\n-\t     (match_operand:QI 2 \"general_operand\" \"i,i,!um,!*A,i!um,!*A,i!um*A\")))]\n+\t     (match_operand:QI 2 \"general_operand\" \"i,i,!um,!*A,!ium,?*A*d,!ium*A\")))]\n   \"\"\n   \"*\n {\n@@ -3301,9 +3301,9 @@\n }\")\n \n (define_insn \"xorqi3\"\n-  [(set (match_operand:QI 0 \"register_operand\" \"=d,d,!*u*A,!*u*A,!*q\")\n-        (xor:QI (match_operand:QI 1 \"register_operand\" \"%0,0,0,0,0\")\n-             (match_operand:QI 2 \"general_operand\" \"ium,!*A,ium,!*A,ium*A*u\")))]\n+  [(set (match_operand:QI 0 \"register_operand\" \"=d,d,d,?*A,?*A,!*q\")\n+        (xor:QI (match_operand:QI 1 \"register_operand\" \"%0,0,0,0,0,0\")\n+             (match_operand:QI 2 \"general_operand\" \"i,!um,!*A,!ium,?*A*d,!ium*A\")))]\n   \"\"\n   \"*\n {"}]}