{"sha": "2ac3624babf6a0c25c55f9a4963f0133205792d7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmFjMzYyNGJhYmY2YTBjMjVjNTVmOWE0OTYzZjAxMzMyMDU3OTJkNw==", "commit": {"author": {"name": "Paul Eggert", "email": "eggert@gnu.org", "date": "1993-07-02T01:20:01Z"}, "committer": {"name": "Paul Eggert", "email": "eggert@gnu.org", "date": "1993-07-02T01:20:01Z"}, "message": "(label): Use `convert_and_check' when checking for\noverflow in case labels.\n\nFrom-SVN: r4824", "tree": {"sha": "4de5214d3cc49f615c861b9ec89a712860c8531f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4de5214d3cc49f615c861b9ec89a712860c8531f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2ac3624babf6a0c25c55f9a4963f0133205792d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ac3624babf6a0c25c55f9a4963f0133205792d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ac3624babf6a0c25c55f9a4963f0133205792d7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ac3624babf6a0c25c55f9a4963f0133205792d7/comments", "author": null, "committer": null, "parents": [{"sha": "9f8373c352f82b3fea1df0544f4cb1cf6dcc6251", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f8373c352f82b3fea1df0544f4cb1cf6dcc6251", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9f8373c352f82b3fea1df0544f4cb1cf6dcc6251"}], "stats": {"total": 8, "additions": 5, "deletions": 3}, "files": [{"sha": "4a4efb16b45a87f11b01a3e1e08a7646bca45597", "filename": "gcc/c-parse.in", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ac3624babf6a0c25c55f9a4963f0133205792d7/gcc%2Fc-parse.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ac3624babf6a0c25c55f9a4963f0133205792d7/gcc%2Fc-parse.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-parse.in?ref=2ac3624babf6a0c25c55f9a4963f0133205792d7", "patch": "@@ -1853,7 +1853,8 @@ label:\t  CASE expr_no_commas ':'\n \t\t  if (value != error_mark_node)\n \t\t    {\n \t\t      tree duplicate;\n-\t\t      int success = pushcase (value, label, &duplicate);\n+\t\t      int success = pushcase (value, convert_and_check,\n+\t\t\t\t\t      label, &duplicate);\n \t\t      if (success == 1)\n \t\t\terror (\"case label not within a switch statement\");\n \t\t      else if (success == 2)\n@@ -1878,7 +1879,8 @@ label:\t  CASE expr_no_commas ':'\n \t\t  if (value1 != error_mark_node && value2 != error_mark_node)\n \t\t    {\n \t\t      tree duplicate;\n-\t\t      int success = pushcase_range (value1, value2, label,\n+\t\t      int success = pushcase_range (value1, value2,\n+\t\t\t\t\t\t    convert_and_check, label,\n \t\t\t\t\t\t    &duplicate);\n \t\t      if (success == 1)\n \t\t\terror (\"case label not within a switch statement\");\n@@ -1900,7 +1902,7 @@ label:\t  CASE expr_no_commas ':'\n \t\t  tree duplicate;\n \t\t  register tree label\n \t\t    = build_decl (LABEL_DECL, NULL_TREE, NULL_TREE);\n-\t\t  int success = pushcase (NULL_TREE, label, &duplicate);\n+\t\t  int success = pushcase (NULL_TREE, 0, label, &duplicate);\n \t\t  stmt_count++;\n \t\t  if (success == 1)\n \t\t    error (\"default label not within a switch statement\");"}]}