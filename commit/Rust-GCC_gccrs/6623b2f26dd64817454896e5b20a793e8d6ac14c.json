{"sha": "6623b2f26dd64817454896e5b20a793e8d6ac14c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjYyM2IyZjI2ZGQ2NDgxNzQ1NDg5NmU1YjIwYTc5M2U4ZDZhYzE0Yw==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@unitus.it", "date": "2003-07-06T11:24:43Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2003-07-06T11:24:43Z"}, "message": "std_fstream.h (xsputn): Don't call _M_destroy_pback...\n\n2003-07-06  Paolo Carlini  <pcarlini@unitus.it>\n\n\t* include/std/std_fstream.h (xsputn): Don't call _M_destroy_pback:\n\tif output is at all possible (!_M_reading), cannot be active.\n\n\t* include/std/std_fstream.h: Tweak comments to doxygen style.\n\nFrom-SVN: r69001", "tree": {"sha": "4286fb9953f97df2c47795c2236e847a4de109f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4286fb9953f97df2c47795c2236e847a4de109f2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6623b2f26dd64817454896e5b20a793e8d6ac14c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6623b2f26dd64817454896e5b20a793e8d6ac14c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6623b2f26dd64817454896e5b20a793e8d6ac14c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6623b2f26dd64817454896e5b20a793e8d6ac14c/comments", "author": null, "committer": null, "parents": [{"sha": "fdd9b6ba91ef7130b1c1c36bc8a50bd344bc9dd7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fdd9b6ba91ef7130b1c1c36bc8a50bd344bc9dd7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fdd9b6ba91ef7130b1c1c36bc8a50bd344bc9dd7"}], "stats": {"total": 56, "additions": 36, "deletions": 20}, "files": [{"sha": "2773588d17687cce09f7e599b6f1c7d94885abb9", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6623b2f26dd64817454896e5b20a793e8d6ac14c/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6623b2f26dd64817454896e5b20a793e8d6ac14c/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=6623b2f26dd64817454896e5b20a793e8d6ac14c", "patch": "@@ -1,3 +1,10 @@\n+2003-07-06  Paolo Carlini  <pcarlini@unitus.it>\n+\n+\t* include/std/std_fstream.h (xsputn): Don't call _M_destroy_pback:\n+\tif output is at all possible (!_M_reading), cannot be active.\n+\n+\t* include/std/std_fstream.h: Tweak comments to doxygen style.\n+\n 2003-07-06  Paolo Carlini  <pcarlini@unitus.it>\n \n \t* include/bits/locale_classes.h: Fully qualify standard"}, {"sha": "209be67bd57af3b6cb6d1f9d918eeb807505d43c", "filename": "libstdc++-v3/include/std/std_fstream.h", "status": "modified", "additions": 29, "deletions": 20, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6623b2f26dd64817454896e5b20a793e8d6ac14c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_fstream.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6623b2f26dd64817454896e5b20a793e8d6ac14c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_fstream.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_fstream.h?ref=6623b2f26dd64817454896e5b20a793e8d6ac14c", "patch": "@@ -177,9 +177,13 @@ namespace std\n       // Cached codecvt facet.\n       const __codecvt_type* \t_M_codecvt;\n \n-      // Initializes pback buffers, and moves normal buffers to safety.\n-      // Assumptions:\n-      // _M_in_cur has already been moved back\n+      /**\n+       *  @if maint\n+       *  Initializes pback buffers, and moves normal buffers to safety.\n+       *  Assumptions:\n+       *  _M_in_cur has already been moved back\n+       *  @endif\n+      */\n       void\n       _M_create_pback()\n       {\n@@ -192,9 +196,13 @@ namespace std\n \t  }\n       }\n \n-      // Deactivates pback buffer contents, and restores normal buffer.\n-      // Assumptions:\n-      // The pback buffer has only moved forward.\n+      /**\n+       *  @if maint\n+       *  Deactivates pback buffer contents, and restores normal buffer.\n+       *  Assumptions:\n+       *  The pback buffer has only moved forward.\n+       *  @endif\n+      */ \n       void\n       _M_destroy_pback() throw()\n       {\n@@ -400,10 +408,7 @@ namespace std\n       // [documentation is inherited]\n       virtual streamsize\n       xsputn(const char_type* __s, streamsize __n)\n-      {\n-\t_M_destroy_pback();\n-\treturn __streambuf_type::xsputn(__s, __n);\n-      }\n+      { return __streambuf_type::xsputn(__s, __n); }\n \n       /**\n        *  @if maint\n@@ -413,16 +418,20 @@ namespace std\n       void\n       _M_output_unshift();\n \n-      // This function sets the pointers of the internal buffer, both get\n-      // and put areas. Typically:\n-      //\n-      //  __off == egptr() - eback() upon underflow/uflow ('read' mode);\n-      //  __off == 0 upon overflow ('write' mode);\n-      //  __off == -1 upon open, setbuf, seekoff/pos ('uncommitted' mode).\n-      // \n-      // NB: epptr() - pbase() == _M_buf_size - 1, since _M_buf_size\n-      // reflects the actual allocated memory and the last cell is reserved\n-      // for the overflow char of a full put area.\n+      /**\n+       *  @if maint \n+       *  This function sets the pointers of the internal buffer, both get\n+       *  and put areas. Typically:\n+       *\n+       *   __off == egptr() - eback() upon underflow/uflow ('read' mode);\n+       *   __off == 0 upon overflow ('write' mode);\n+       *   __off == -1 upon open, setbuf, seekoff/pos ('uncommitted' mode).\n+       * \n+       *  NB: epptr() - pbase() == _M_buf_size - 1, since _M_buf_size\n+       *  reflects the actual allocated memory and the last cell is reserved\n+       *  for the overflow char of a full put area.\n+       *  @endif\n+      */\n       void\n       _M_set_buffer(streamsize __off)\n       {"}]}