{"sha": "fa4657624c6609bbfffb4ec5fb1e19e44691c864", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmE0NjU3NjI0YzY2MDliYmZmZmI0ZWM1ZmIxZTE5ZTQ0NjkxYzg2NA==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2011-06-14T16:31:57Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2011-06-14T16:31:57Z"}, "message": "Properly expand strlen to Pmode.\n\n2011-06-14  H.J. Lu  <hongjiu.lu@intel.com>\n\n\tPR middle-end/47364\n\t* builtins.c (expand_builtin_strlen): Expand strlen to Pmode\n\tand properly handle result not in Pmode.\n\nFrom-SVN: r175034", "tree": {"sha": "84db851d1d9699a10ee7a3b9f5df564beb59ed58", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/84db851d1d9699a10ee7a3b9f5df564beb59ed58"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fa4657624c6609bbfffb4ec5fb1e19e44691c864", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa4657624c6609bbfffb4ec5fb1e19e44691c864", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa4657624c6609bbfffb4ec5fb1e19e44691c864", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa4657624c6609bbfffb4ec5fb1e19e44691c864/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "652de9ffb6a941775908325ad1a057f34fbcfbd5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/652de9ffb6a941775908325ad1a057f34fbcfbd5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/652de9ffb6a941775908325ad1a057f34fbcfbd5"}], "stats": {"total": 17, "additions": 15, "deletions": 2}, "files": [{"sha": "56e88cfaabb3d1529d3558d49cc288ce2cf9c356", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa4657624c6609bbfffb4ec5fb1e19e44691c864/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa4657624c6609bbfffb4ec5fb1e19e44691c864/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fa4657624c6609bbfffb4ec5fb1e19e44691c864", "patch": "@@ -1,3 +1,9 @@\n+2011-06-14  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR middle-end/47364\n+\t* builtins.c (expand_builtin_strlen): Expand strlen to Pmode\n+\tand properly handle result not in Pmode.\n+\n 2011-06-14  Robert Millan  <rmh@gnu.org>\n \n \t* config/i386/kfreebsd-gnu.h: Resync with `config/i386/linux.h'."}, {"sha": "cf975e578a77c94a6414f6473cc0e6a13a3135a9", "filename": "gcc/builtins.c", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa4657624c6609bbfffb4ec5fb1e19e44691c864/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa4657624c6609bbfffb4ec5fb1e19e44691c864/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=fa4657624c6609bbfffb4ec5fb1e19e44691c864", "patch": "@@ -2939,9 +2939,16 @@ expand_builtin_strlen (tree exp, rtx target,\n \n       /* Now that we are assured of success, expand the source.  */\n       start_sequence ();\n-      pat = expand_expr (src, src_reg, ptr_mode, EXPAND_NORMAL);\n+      pat = expand_expr (src, src_reg, Pmode, EXPAND_NORMAL);\n       if (pat != src_reg)\n-\temit_move_insn (src_reg, pat);\n+\t{\n+#ifdef POINTERS_EXTEND_UNSIGNED\n+\t  if (GET_MODE (pat) != Pmode)\n+\t    pat = convert_to_mode (Pmode, pat,\n+\t\t\t\t   POINTERS_EXTEND_UNSIGNED);\n+#endif\n+\t  emit_move_insn (src_reg, pat);\n+\t}\n       pat = get_insns ();\n       end_sequence ();\n "}]}