{"sha": "423e95e2042989aa21da2f47e67a657480eb38d5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDIzZTk1ZTIwNDI5ODlhYTIxZGEyZjQ3ZTY3YTY1NzQ4MGViMzhkNQ==", "commit": {"author": {"name": "Eric Christopher", "email": "echristo@gcc.gnu.org", "date": "2004-02-12T02:25:03Z"}, "committer": {"name": "Eric Christopher", "email": "echristo@gcc.gnu.org", "date": "2004-02-12T02:25:03Z"}, "message": "cppcharset.c (_cpp_interpret_string_notranslate): Rename and duplicate argument structure of cpp_interpret_string.\n\n2004-02-11  Eric Christopher  <echristo@redhat.com>\n\n        * cppcharset.c (_cpp_interpret_string_notranslate): Rename and\n        duplicate argument structure of cpp_interpret_string.\n        * cpphash.h: Move prototype...\n        * cpplib.h: Here.\n        * cpplib.c: Fix calls to match new function signature.\n\nFrom-SVN: r77688", "tree": {"sha": "078b988fdbe26329da42a06d493915188710af26", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/078b988fdbe26329da42a06d493915188710af26"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/423e95e2042989aa21da2f47e67a657480eb38d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/423e95e2042989aa21da2f47e67a657480eb38d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/423e95e2042989aa21da2f47e67a657480eb38d5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/423e95e2042989aa21da2f47e67a657480eb38d5/comments", "author": null, "committer": null, "parents": [{"sha": "1c86f39d32b95fe9de306d82f02a982bbad778b4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c86f39d32b95fe9de306d82f02a982bbad778b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1c86f39d32b95fe9de306d82f02a982bbad778b4"}], "stats": {"total": 30, "additions": 20, "deletions": 10}, "files": [{"sha": "efcaac777e6e87667867076f7a00fedfa07539ad", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/423e95e2042989aa21da2f47e67a657480eb38d5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/423e95e2042989aa21da2f47e67a657480eb38d5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=423e95e2042989aa21da2f47e67a657480eb38d5", "patch": "@@ -1,3 +1,11 @@\n+2004-02-11  Eric Christopher  <echristo@redhat.com>\n+\n+\t* cppcharset.c (_cpp_interpret_string_notranslate): Rename and\n+\tduplicate argument structure of cpp_interpret_string.\n+\t* cpphash.h: Move prototype...\n+\t* cpplib.h: Here.\n+\t* cpplib.c: Fix calls to match new function signature.\n+\n 2004-02-11  Joseph S. Myers  <jsm@polyomino.org.uk>\n \n \tPR c/456\n@@ -117,7 +125,7 @@\n \tsource_location.\n \n 2004-02-11  Hartmut Penner  <hpenner@de.ibm.com>\n-\t\n+\n \t* config/rs6000/altivec.md (*movv4si_internal): At least one\n \toperand must be register_operand.\n \t(*movv8hi_internal1): Likewise.\n@@ -150,7 +158,7 @@\n \tSet AltiVec ABI and vrsave as default for ppc64 linux.\n \t(init_cumulative_args): Post error, if try to return\n \tvalue in AltiVec register without enable AltiVec.\n-\t(function_arg_advance): Ditto for passing arguments. \n+\t(function_arg_advance): Ditto for passing arguments.\n \n 2004-02-11  Richard Sandiford  <rsandifo@redhat.com>\n "}, {"sha": "b46f47a1fe0461c5129c1a43b7da00d9bcd7c890", "filename": "gcc/cppcharset.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/423e95e2042989aa21da2f47e67a657480eb38d5/gcc%2Fcppcharset.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/423e95e2042989aa21da2f47e67a657480eb38d5/gcc%2Fcppcharset.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcppcharset.c?ref=423e95e2042989aa21da2f47e67a657480eb38d5", "patch": "@@ -1186,16 +1186,16 @@ cpp_interpret_string (cpp_reader *pfile, const cpp_string *from, size_t count,\n /* Subroutine of do_line and do_linemarker.  Convert escape sequences\n    in a string, but do not perform character set conversion.  */\n bool\n-_cpp_interpret_string_notranslate (cpp_reader *pfile, const cpp_string *in,\n-\t\t\t\t   cpp_string *out)\n+cpp_interpret_string_notranslate (cpp_reader *pfile, const cpp_string *from,\n+\t\t\t\t  size_t count,\tcpp_string *to, bool wide)\n {\n   struct cset_converter save_narrow_cset_desc = pfile->narrow_cset_desc;\n   bool retval;\n \n   pfile->narrow_cset_desc.func = convert_no_conversion;\n   pfile->narrow_cset_desc.cd = (iconv_t) -1;\n \n-  retval = cpp_interpret_string (pfile, in, 1, out, false);\n+  retval = cpp_interpret_string (pfile, from, count, to, wide);\n \n   pfile->narrow_cset_desc = save_narrow_cset_desc;\n   return retval;"}, {"sha": "5c14a64e07fc8f11a24943b1cd461e4fccf35f6c", "filename": "gcc/cpphash.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/423e95e2042989aa21da2f47e67a657480eb38d5/gcc%2Fcpphash.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/423e95e2042989aa21da2f47e67a657480eb38d5/gcc%2Fcpphash.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcpphash.h?ref=423e95e2042989aa21da2f47e67a657480eb38d5", "patch": "@@ -595,9 +595,6 @@ extern size_t _cpp_replacement_text_len (const cpp_macro *);\n extern cppchar_t _cpp_valid_ucn (cpp_reader *, const uchar **,\n \t\t\t\t const uchar *, int);\n extern void _cpp_destroy_iconv (cpp_reader *);\n-extern bool _cpp_interpret_string_notranslate (cpp_reader *,\n-\t\t\t\t\t       const cpp_string *,\n-\t\t\t\t\t       cpp_string *);\n extern uchar *_cpp_convert_input (cpp_reader *, const char *, uchar *,\n \t\t\t\t  size_t, size_t, off_t *);\n extern const char *_cpp_default_encoding (void);"}, {"sha": "f2556b385a09022d3697f089cf2b22299968d09c", "filename": "gcc/cpplib.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/423e95e2042989aa21da2f47e67a657480eb38d5/gcc%2Fcpplib.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/423e95e2042989aa21da2f47e67a657480eb38d5/gcc%2Fcpplib.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcpplib.c?ref=423e95e2042989aa21da2f47e67a657480eb38d5", "patch": "@@ -804,7 +804,8 @@ do_line (cpp_reader *pfile)\n   if (token->type == CPP_STRING)\n     {\n       cpp_string s = { 0, 0 };\n-      if (_cpp_interpret_string_notranslate (pfile, &token->val.str, &s))\n+      if (cpp_interpret_string_notranslate (pfile, &token->val.str, 1,\n+\t\t\t\t\t    &s, false))\n \tnew_file = (const char *)s.text;\n       check_eol (pfile);\n     }\n@@ -855,7 +856,8 @@ do_linemarker (cpp_reader *pfile)\n   if (token->type == CPP_STRING)\n     {\n       cpp_string s = { 0, 0 };\n-      if (_cpp_interpret_string_notranslate (pfile, &token->val.str, &s))\n+      if (cpp_interpret_string_notranslate (pfile, &token->val.str,\n+\t\t\t\t\t    1, &s, false))\n \tnew_file = (const char *)s.text;\n \n       new_sysp = 0;"}, {"sha": "dbbf85b06c46ad9a35a8f3b4451b2bcfa22e4666", "filename": "gcc/cpplib.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/423e95e2042989aa21da2f47e67a657480eb38d5/gcc%2Fcpplib.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/423e95e2042989aa21da2f47e67a657480eb38d5/gcc%2Fcpplib.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcpplib.h?ref=423e95e2042989aa21da2f47e67a657480eb38d5", "patch": "@@ -581,6 +581,9 @@ extern cppchar_t cpp_interpret_charconst (cpp_reader *, const cpp_token *,\n extern bool cpp_interpret_string (cpp_reader *,\n \t\t\t\t  const cpp_string *, size_t,\n \t\t\t\t  cpp_string *, bool);\n+extern bool cpp_interpret_string_notranslate (cpp_reader *,\n+\t\t\t\t\t      const cpp_string *, size_t,\n+\t\t\t\t\t      cpp_string *, bool);\n \n /* Used to register macros and assertions, perhaps from the command line.\n    The text is the same as the command line argument.  */"}]}