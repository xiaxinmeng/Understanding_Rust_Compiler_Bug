{"sha": "4075e2319853586499e3d059ff514151deca2396", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDA3NWUyMzE5ODUzNTg2NDk5ZTNkMDU5ZmY1MTQxNTFkZWNhMjM5Ng==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "iant@google.com", "date": "2007-04-17T05:19:22Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2007-04-17T05:19:22Z"}, "message": "cpp.texi (Common Predefined Macros): Clarify description of __GNUC_GNU_INLINE__ and __GNUC_STDC_INLINE__.\n\n\t* doc/cpp.texi (Common Predefined Macros): Clarify description of\n\t__GNUC_GNU_INLINE__ and __GNUC_STDC_INLINE__.\n\nFrom-SVN: r123907", "tree": {"sha": "18425544d568873b9991b434e7e5f85453825559", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/18425544d568873b9991b434e7e5f85453825559"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4075e2319853586499e3d059ff514151deca2396", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4075e2319853586499e3d059ff514151deca2396", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4075e2319853586499e3d059ff514151deca2396", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4075e2319853586499e3d059ff514151deca2396/comments", "author": null, "committer": null, "parents": [{"sha": "5a0ed003f06f858e950ea3098e573d8d4361674e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a0ed003f06f858e950ea3098e573d8d4361674e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a0ed003f06f858e950ea3098e573d8d4361674e"}], "stats": {"total": 20, "additions": 11, "deletions": 9}, "files": [{"sha": "5ff8fab2864e70ce48c999858de652dc63e716ac", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4075e2319853586499e3d059ff514151deca2396/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4075e2319853586499e3d059ff514151deca2396/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4075e2319853586499e3d059ff514151deca2396", "patch": "@@ -1,5 +1,8 @@\n 2007-04-16  Ian Lance Taylor  <iant@google.com>\n \n+\t* doc/cpp.texi (Common Predefined Macros): Clarify description of\n+\t__GNUC_GNU_INLINE__ and __GNUC_STDC_INLINE__.\n+\n \t* tree-ssa-propagate.c (cfg_blocks_add): Insert blocks with fewer\n \tpredecessors at head rather than tail.\n "}, {"sha": "fe2a93bf59ae0fb96cefd44f3ff07fe0fdc87b8a", "filename": "gcc/doc/cpp.texi", "status": "modified", "additions": 8, "deletions": 9, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4075e2319853586499e3d059ff514151deca2396/gcc%2Fdoc%2Fcpp.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4075e2319853586499e3d059ff514151deca2396/gcc%2Fdoc%2Fcpp.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fcpp.texi?ref=4075e2319853586499e3d059ff514151deca2396", "patch": "@@ -2016,18 +2016,17 @@ are defined.  If they are defined, their value is 1.\n \n @item __GNUC_GNU_INLINE__\n GCC defines this macro if functions declared @code{inline} will be\n-handled in GCC's traditional gnu89 mode.  In this mode an @code{extern\n-inline} function will never be compiled as a standalone function, and\n-an @code{inline} function which is neither @code{extern} nor\n-@code{static} will always be compiled as a standalone function.\n+handled in GCC's traditional gnu89 mode.  Object files will contain\n+externally visible definitions of all functions declared @code{inline}\n+without @code{extern} or @code{static}.  They will not contain any\n+definitions of any functions declared @code{extern inline}.\n \n @item __GNUC_STDC_INLINE__\n GCC defines this macro if functions declared @code{inline} will be\n-handled according to the ISO C99 standard.  In this mode an\n-@code{extern inline} function will always be compiled as a standalone\n-externally visible function, and an @code{inline} function which is\n-neither @code{extern} nor @code{static} will never be compiled as a\n-standalone function.\n+handled according to the ISO C99 standard.  Object files will contain\n+externally visible definitions of all functions declared @code{extern\n+inline}.  They will not contain definitions of any functions declared\n+@code{inline} without @code{extern}.\n \n If this macro is defined, GCC supports the @code{gnu_inline} function\n attribute as a way to always get the gnu89 behavior.  Support for"}]}