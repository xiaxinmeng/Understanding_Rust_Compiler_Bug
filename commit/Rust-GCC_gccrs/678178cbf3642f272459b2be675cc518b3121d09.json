{"sha": "678178cbf3642f272459b2be675cc518b3121d09", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Njc4MTc4Y2JmMzY0MmYyNzI0NTliMmJlNjc1Y2M1MThiMzEyMWQwOQ==", "commit": {"author": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2020-06-13T17:29:01Z"}, "committer": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2020-06-13T17:29:01Z"}, "message": "Correct test to avoid failures in ILP32.\n\nAmends: PR middle-end/95353 - spurious -Wstringop-overflow writing to a trailing array plus offset.\n\ngcc/testsuite/ChangeLog:\n\t* gcc.dg/builtin-stringop-chk-5.c: Make assertions independent of\n\tdata model.", "tree": {"sha": "acffc470e130723b30cfac50a9682790cfafc04b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/acffc470e130723b30cfac50a9682790cfafc04b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/678178cbf3642f272459b2be675cc518b3121d09", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/678178cbf3642f272459b2be675cc518b3121d09", "html_url": "https://github.com/Rust-GCC/gccrs/commit/678178cbf3642f272459b2be675cc518b3121d09", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/678178cbf3642f272459b2be675cc518b3121d09/comments", "author": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c19ef23bb984194a0db18332631c61d7417435ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c19ef23bb984194a0db18332631c61d7417435ca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c19ef23bb984194a0db18332631c61d7417435ca"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "b07629dad11b87b777ff8108a66cd878294d7340", "filename": "gcc/testsuite/gcc.dg/builtin-stringop-chk-5.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/678178cbf3642f272459b2be675cc518b3121d09/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltin-stringop-chk-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/678178cbf3642f272459b2be675cc518b3121d09/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltin-stringop-chk-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltin-stringop-chk-5.c?ref=678178cbf3642f272459b2be675cc518b3121d09", "patch": "@@ -125,30 +125,30 @@ void test_memop_warn_alloc (const void *src)\n \n   n = range (12, 32);\n \n-  struct B *b = __builtin_malloc (sizeof *b * 2);\n+  struct B *b = __builtin_malloc (sizeof (struct B[2]));\n \n   memcpy (&b[0], src, n);   /* { dg-warning \"writing between 12 and 32 bytes into a region of size 8 \" \"memcpy into allocated\" } */\n   escape (b);\n \n   /* The following idiom of clearing multiple members of a struct is\n      used in a few places in the Linux kernel.  Verify that a warning\n      is issued for it when it writes past the end of the array object.  */\n-  memset (&b[0].a.b, 0, offsetfrom (struct B, b, a.b) + 1);   /* { dg-warning \"writing 8 bytes into a region of size \" \"memcpy into allocated\" } */\n+  memset (&b[0].a.b, 0, offsetfrom (struct B, struct B[2], a.b) + 1);   /* { dg-warning \"writing 8 bytes into a region of size \" \"memcpy into allocated\" } */\n   escape (b);\n \n-  memset (&b->a.b, 0, offsetfrom (struct B, b, a.b) + 1);   /* { dg-warning \"writing 8 bytes into a region of size \" \"memcpy into allocated\" } */\n+  memset (&b->a.b, 0, offsetfrom (struct B, struct B[2], a.b) + 1);   /* { dg-warning \"writing 8 bytes into a region of size \" \"memcpy into allocated\" } */\n   escape (b);\n \n-  memset (&b[0].c, 0, offsetfrom (struct B, b, c) + 1);   /* { dg-warning \"writing 7 bytes into a region of size \" \"memcpy into allocated\" } */\n+  memset (&b[0].c, 0, offsetfrom (struct B, struct B[2], c) + 1);   /* { dg-warning \"writing 7 bytes into a region of size \" \"memcpy into allocated\" } */\n   escape (b);\n \n-  memset (&b->c, 0, offsetfrom (struct B, b, c) + 1);   /* { dg-warning \"writing 7 bytes into a region of size \" \"memcpy into allocated\" } */\n+  memset (&b->c, 0, offsetfrom (struct B, struct B[2], c) + 1);   /* { dg-warning \"writing 7 bytes into a region of size \" \"memcpy into allocated\" } */\n   escape (b);\n \n-  memset (&b[0].d, 0, offsetfrom (struct B, b, d) + 1);   /* { dg-warning \"writing 6 bytes into a region of size \" \"memcpy into allocated\" } */\n+  memset (&b[0].d, 0, offsetfrom (struct B, struct B[2], d) + 1);   /* { dg-warning \"writing 6 bytes into a region of size \" \"memcpy into allocated\" } */\n   escape (b);\n \n-  memset (&b->d, 0, offsetfrom (struct B, b, d) + 1);   /* { dg-warning \"writing 6 bytes into a region of size \" \"memcpy into allocated\" } */\n+  memset (&b->d, 0, offsetfrom (struct B, struct B[2], d) + 1);   /* { dg-warning \"writing 6 bytes into a region of size \" \"memcpy into allocated\" } */\n   escape (b);\n \n   /* Same as above but clearing just elements of the second element"}]}