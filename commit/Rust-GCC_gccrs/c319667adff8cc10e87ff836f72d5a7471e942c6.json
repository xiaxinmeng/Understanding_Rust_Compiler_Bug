{"sha": "c319667adff8cc10e87ff836f72d5a7471e942c6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzMxOTY2N2FkZmY4Y2MxMGU4N2ZmODM2ZjcyZDVhNzQ3MWU5NDJjNg==", "commit": {"author": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2019-02-22T10:50:18Z"}, "committer": {"name": "Thomas Schwinge", "email": "tschwinge@gcc.gnu.org", "date": "2019-02-22T10:50:18Z"}, "message": "Revert earlier OpenACC 'routine' changes\n\n..., which were committed as part of, but logically don't belong into r261813\n\"Update OpenACC data clause semantics to the 2.5 behavior\", and which confuse\nlater changes.\n\n\tgcc/fortran/\n\t* openmp.c (gfc_match_oacc_declare): Revert earlier changes.\n\tgcc/testsuite/\n\t* c-c++-common/goacc/routine-5.c: Revert earlier changes.\n\t* g++.dg/goacc/template.C: Likewise.\n\nFrom-SVN: r269104", "tree": {"sha": "c6e3f563927cd2a9a71b6b7575a19f14d1c1f46e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c6e3f563927cd2a9a71b6b7575a19f14d1c1f46e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c319667adff8cc10e87ff836f72d5a7471e942c6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c319667adff8cc10e87ff836f72d5a7471e942c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c319667adff8cc10e87ff836f72d5a7471e942c6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c319667adff8cc10e87ff836f72d5a7471e942c6/comments", "author": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "568de94944eae2abfa0cdf78bbf8247239f2462d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/568de94944eae2abfa0cdf78bbf8247239f2462d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/568de94944eae2abfa0cdf78bbf8247239f2462d"}], "stats": {"total": 166, "additions": 104, "deletions": 62}, "files": [{"sha": "74a6890ed7004a66690f172325f4d2c79f2e7b5d", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c319667adff8cc10e87ff836f72d5a7471e942c6/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c319667adff8cc10e87ff836f72d5a7471e942c6/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=c319667adff8cc10e87ff836f72d5a7471e942c6", "patch": "@@ -1,3 +1,7 @@\n+2019-02-22  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\t* openmp.c (gfc_match_oacc_declare): Revert earlier changes.\n+\n 2019-02-21  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \t* dump-parse-tree.c (debug): Implement for gfc_expr *,"}, {"sha": "8aa4a2f18c41c8f24cc3e2ce6d66415e7296270a", "filename": "gcc/fortran/openmp.c", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c319667adff8cc10e87ff836f72d5a7471e942c6/gcc%2Ffortran%2Fopenmp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c319667adff8cc10e87ff836f72d5a7471e942c6/gcc%2Ffortran%2Fopenmp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fopenmp.c?ref=c319667adff8cc10e87ff836f72d5a7471e942c6", "patch": "@@ -2075,13 +2075,6 @@ gfc_match_oacc_declare (void)\n \t  module_var = true;\n \t}\n \n-      if (ns->proc_name->attr.oacc_function)\n-\t{\n-\t  gfc_error (\"Invalid declare in routine with $!ACC DECLARE at %L\",\n-\t\t     &where);\n-\t  return MATCH_ERROR;\n-\t}\n-\n       if (s->attr.use_assoc)\n \t{\n \t  gfc_error (\"Variable is USE-associated with !$ACC DECLARE at %L\","}, {"sha": "12901a9361a6ebcdc69e8559c2bf98bfbc78d75f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c319667adff8cc10e87ff836f72d5a7471e942c6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c319667adff8cc10e87ff836f72d5a7471e942c6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c319667adff8cc10e87ff836f72d5a7471e942c6", "patch": "@@ -1,5 +1,8 @@\n 2019-02-22  Thomas Schwinge  <thomas@codesourcery.com>\n \n+\t* c-c++-common/goacc/routine-5.c: Revert earlier changes.\n+\t* g++.dg/goacc/template.C: Likewise.\n+\n \tPR fortran/78027\n \t* gfortran.dg/goacc/pr78027.f90: Add 'dg-additional-options \"-Wno-hsa\"'.\n "}, {"sha": "b967a7447bdb397f1f84430b81ab1f6fa7f72828", "filename": "gcc/testsuite/c-c++-common/goacc/routine-5.c", "status": "modified", "additions": 96, "deletions": 54, "changes": 150, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c319667adff8cc10e87ff836f72d5a7471e942c6/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Froutine-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c319667adff8cc10e87ff836f72d5a7471e942c6/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Froutine-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Froutine-5.c?ref=c319667adff8cc10e87ff836f72d5a7471e942c6", "patch": "@@ -4,11 +4,11 @@\n \n struct PC\n {\n-#pragma acc routine seq /* { dg-error \".#pragma acc routine. must be at file scope\" } */\n+#pragma acc routine /* { dg-error \".#pragma acc routine. must be at file scope\" } */\n };\n \n void PC1( /* { dg-bogus \"variable or field .PC1. declared void\" \"TODO\" { xfail c++ } } */\n-#pragma acc routine seq\n+#pragma acc routine\n \t /* { dg-error \".#pragma acc routine. must be at file scope\" \"\" { target c } .-1 }\n \t    { dg-error \".#pragma. is not allowed here\" \"\" { target c++ } .-2 } */\n ) /* { dg-bogus \"expected declaration specifiers or .\\\\.\\\\.\\\\.. before .\\\\). token\" \"TODO\" { xfail c } } */\n@@ -18,26 +18,26 @@ void PC1( /* { dg-bogus \"variable or field .PC1. declared void\" \"TODO\" { xfail c\n void PC2()\n {\n   if (0)\n-#pragma acc routine seq /* { dg-error \".#pragma acc routine. must be at file scope\" } */\n+#pragma acc routine /* { dg-error \".#pragma acc routine. must be at file scope\" } */\n     ;\n }\n \n void PC3()\n {\n-#pragma acc routine seq /* { dg-error \".#pragma acc routine. must be at file scope\" } */\n+#pragma acc routine /* { dg-error \".#pragma acc routine. must be at file scope\" } */\n }\n \n \n /* \"( name )\" syntax.  */\n \n #pragma acc routine ( /* { dg-error \"expected (function name|unqualified-id) before end of line\" } */\n-#pragma acc routine () seq /* { dg-error \"expected (function name|unqualified-id) before .\\\\). token\" } */\n-#pragma acc routine (+) seq /* { dg-error \"expected (function name|unqualified-id) before .\\\\+. token\" } */\n-#pragma acc routine (?) seq /* { dg-error \"expected (function name|unqualified-id) before .\\\\?. token\" } */\n-#pragma acc routine (:) seq /* { dg-error \"expected (function name|unqualified-id) before .:. token\" } */\n-#pragma acc routine (4) seq /* { dg-error \"expected (function name|unqualified-id) before numeric constant\" } */\n+#pragma acc routine () /* { dg-error \"expected (function name|unqualified-id) before .\\\\). token\" } */\n+#pragma acc routine (+) /* { dg-error \"expected (function name|unqualified-id) before .\\\\+. token\" } */\n+#pragma acc routine (?) /* { dg-error \"expected (function name|unqualified-id) before .\\\\?. token\" } */\n+#pragma acc routine (:) /* { dg-error \"expected (function name|unqualified-id) before .:. token\" } */\n+#pragma acc routine (4) /* { dg-error \"expected (function name|unqualified-id) before numeric constant\" } */\n #pragma acc routine ('4') /* { dg-error \"expected (function name|unqualified-id) before .4.\" } */\n-#pragma acc routine (\"4\") seq /* { dg-error \"expected (function name|unqualified-id) before string constant\" } */\n+#pragma acc routine (\"4\") /* { dg-error \"expected (function name|unqualified-id) before string constant\" } */\n extern void R1(void);\n extern void R2(void);\n #pragma acc routine (R1, R2, R3) worker /* { dg-error \"expected .\\\\). before .,. token\" } */\n@@ -49,84 +49,84 @@ extern void R2(void);\n /* \"#pragma acc routine\" not immediately followed by (a single) function\n    declaration or definition.  */\n \n-#pragma acc routine seq /* { dg-error \".#pragma acc routine. not immediately followed by function declaration or definition\" } */\n+#pragma acc routine /* { dg-error \".#pragma acc routine. not immediately followed by function declaration or definition\" } */\n int a;\n \n-#pragma acc routine seq /* { dg-error \".#pragma acc routine. not immediately followed by a single function declaration or definition\" } */\n+#pragma acc routine /* { dg-error \".#pragma acc routine. not immediately followed by a single function declaration or definition\" } */\n void fn1 (void), fn1b (void);\n \n-#pragma acc routine seq /* { dg-error \".#pragma acc routine. not immediately followed by function declaration or definition\" } */\n+#pragma acc routine /* { dg-error \".#pragma acc routine. not immediately followed by function declaration or definition\" } */\n int b, fn2 (void);\n \n-#pragma acc routine seq /* { dg-error \".#pragma acc routine. not immediately followed by function declaration or definition\" } */\n+#pragma acc routine /* { dg-error \".#pragma acc routine. not immediately followed by function declaration or definition\" } */\n int b_, fn2_ (void), B_;\n \n-#pragma acc routine seq /* { dg-error \".#pragma acc routine. not immediately followed by a single function declaration or definition\" } */\n+#pragma acc routine /* { dg-error \".#pragma acc routine. not immediately followed by a single function declaration or definition\" } */\n int fn3 (void), b2;\n \n-#pragma acc routine seq /* { dg-error \".#pragma acc routine. not immediately followed by function declaration or definition\" } */\n+#pragma acc routine /* { dg-error \".#pragma acc routine. not immediately followed by function declaration or definition\" } */\n typedef struct c c;\n \n-#pragma acc routine seq /* { dg-error \".#pragma acc routine. not immediately followed by function declaration or definition\" } */\n+#pragma acc routine /* { dg-error \".#pragma acc routine. not immediately followed by function declaration or definition\" } */\n struct d {} d;\n \n-#pragma acc routine seq /* { dg-error \".#pragma acc routine. not immediately followed by function declaration or definition\" } */\n-#pragma acc routine seq /* { dg-error \".#pragma acc routine. not immediately followed by a single function declaration or definition\" } */\n+#pragma acc routine /* { dg-error \".#pragma acc routine. not immediately followed by function declaration or definition\" } */\n+#pragma acc routine /* { dg-error \".#pragma acc routine. not immediately followed by a single function declaration or definition\" } */\n void fn1_2 (void), fn1b_2 (void);\n \n-#pragma acc routine seq /* { dg-error \".#pragma acc routine. not immediately followed by function declaration or definition\" } */\n+#pragma acc routine /* { dg-error \".#pragma acc routine. not immediately followed by function declaration or definition\" } */\n #pragma acc routine /* { dg-error \".#pragma acc routine. not immediately followed by function declaration or definition\" } */\n int b_2, fn2_2 (void);\n \n-#pragma acc routine seq /* { dg-error \".#pragma acc routine. not immediately followed by function declaration or definition\" } */\n-#pragma acc routine seq /* { dg-error \".#pragma acc routine. not immediately followed by function declaration or definition\" } */\n+#pragma acc routine /* { dg-error \".#pragma acc routine. not immediately followed by function declaration or definition\" } */\n+#pragma acc routine /* { dg-error \".#pragma acc routine. not immediately followed by function declaration or definition\" } */\n int b_2_, fn2_2_ (void), B_2_;\n \n-#pragma acc routine seq /* { dg-error \".#pragma acc routine. not immediately followed by function declaration or definition\" } */\n-#pragma acc routine seq /* { dg-error \".#pragma acc routine. not immediately followed by a single function declaration or definition\" } */\n+#pragma acc routine /* { dg-error \".#pragma acc routine. not immediately followed by function declaration or definition\" } */\n+#pragma acc routine /* { dg-error \".#pragma acc routine. not immediately followed by a single function declaration or definition\" } */\n int fn3_2 (void), b2_2;\n \n-#pragma acc routine seq /* { dg-error \".#pragma acc routine. not immediately followed by function declaration or definition\" } */\n-#pragma acc routine seq /* { dg-error \".#pragma acc routine. not immediately followed by function declaration or definition\" } */\n+#pragma acc routine /* { dg-error \".#pragma acc routine. not immediately followed by function declaration or definition\" } */\n+#pragma acc routine /* { dg-error \".#pragma acc routine. not immediately followed by function declaration or definition\" } */\n typedef struct c_2 c_2;\n \n-#pragma acc routine seq /* { dg-error \".#pragma acc routine. not immediately followed by function declaration or definition\" } */\n-#pragma acc routine seq /* { dg-error \".#pragma acc routine. not immediately followed by function declaration or definition\" } */\n+#pragma acc routine /* { dg-error \".#pragma acc routine. not immediately followed by function declaration or definition\" } */\n+#pragma acc routine /* { dg-error \".#pragma acc routine. not immediately followed by function declaration or definition\" } */\n struct d_2 {} d_2;\n \n-#pragma acc routine seq /* { dg-error \".#pragma acc routine. not immediately followed by function declaration or definition\" } */\n-#pragma acc routine seq\n+#pragma acc routine /* { dg-error \".#pragma acc routine. not immediately followed by function declaration or definition\" } */\n+#pragma acc routine\n int fn4 (void);\n \n int fn5a (void);\n int fn5b (void);\n-#pragma acc routine seq /* { dg-error \".#pragma acc routine. not immediately followed by function declaration or definition\" } */\n-#pragma acc routine (fn5a) seq\n-#pragma acc routine (fn5b) seq\n+#pragma acc routine /* { dg-error \".#pragma acc routine. not immediately followed by function declaration or definition\" } */\n+#pragma acc routine (fn5a)\n+#pragma acc routine (fn5b)\n int fn5 (void);\n \n-#pragma acc routine seq /* { dg-error \".#pragma acc routine. not immediately followed by function declaration or definition\" } */\n-#pragma acc routine (fn6a) seq /* { dg-error \".fn6a. has not been declared\" } */\n-#pragma acc routine (fn6b) seq /* { dg-error \".fn6b. has not been declared\" } */\n+#pragma acc routine /* { dg-error \".#pragma acc routine. not immediately followed by function declaration or definition\" } */\n+#pragma acc routine (fn6a) /* { dg-error \".fn6a. has not been declared\" } */\n+#pragma acc routine (fn6b) /* { dg-error \".fn6b. has not been declared\" } */\n int fn6 (void);\n \n #ifdef __cplusplus\n \n-#pragma acc routine seq /* { dg-error \".#pragma acc routine. not immediately followed by function declaration or definition\" \"\" { target c++ } } */\n+#pragma acc routine /* { dg-error \".#pragma acc routine. not immediately followed by function declaration or definition\" \"\" { target c++ } } */\n namespace f {}\n \n namespace g {}\n \n-#pragma acc routine seq /* { dg-error \".#pragma acc routine. not immediately followed by function declaration or definition\" \"\" { target c++ } } */\n+#pragma acc routine /* { dg-error \".#pragma acc routine. not immediately followed by function declaration or definition\" \"\" { target c++ } } */\n using namespace g;\n \n-#pragma acc routine (g) seq /* { dg-error \".g. does not refer to a function\" \"\" { target c++ } } */\n+#pragma acc routine (g) /* { dg-error \".g. does not refer to a function\" \"\" { target c++ } } */\n \n #endif /* __cplusplus */\n \n-#pragma acc routine (a) seq /* { dg-error \".a. does not refer to a function\" } */\n+#pragma acc routine (a) /* { dg-error \".a. does not refer to a function\" } */\n   \n-#pragma acc routine (c) seq /* { dg-error \".c. does not refer to a function\" } */\n+#pragma acc routine (c) /* { dg-error \".c. does not refer to a function\" } */\n \n \n /* Static assert.  */\n@@ -143,24 +143,66 @@ static_assert(0, \"\"); /* { dg-error \"static assertion failed\" \"\" { target c++11\n #endif\n void f_static_assert();\n /* Check that we already recognized \"f_static_assert\" as an OpenACC routine.  */\n-#pragma acc routine (f_static_assert) seq /* { dg-error \".#pragma acc routine. already applied to .\\[void \\]*f_static_assert\" \"TODO\" { xfail *-*-* } } */\n+#pragma acc routine (f_static_assert) /* { dg-error \".#pragma acc routine. already applied to .\\[void \\]*f_static_assert\" \"TODO\" { xfail *-*-* } } */\n \n \n /* __extension__ usage.  */\n \n-#pragma acc routine seq\n+#pragma acc routine\n __extension__ extern void ex1();\n #pragma acc routine (ex1) /* { dg-error \".#pragma acc routine. already applied to .\\[void \\]*ex1\" } */\n \n-#pragma acc routine seq\n+#pragma acc routine\n __extension__ __extension__ __extension__ __extension__ __extension__ void ex2()\n {\n }\n #pragma acc routine (ex2) /* { dg-error \".#pragma acc routine. already applied to .\\[void \\]*ex2\" } */\n \n-#pragma acc routine seq /* { dg-error \".#pragma acc routine. not immediately followed by function declaration or definition\" } */\n+#pragma acc routine /* { dg-error \".#pragma acc routine. not immediately followed by function declaration or definition\" } */\n __extension__ int ex3;\n-#pragma acc routine (ex3) seq /* { dg-error \".ex3. does not refer to a function\" } */\n+#pragma acc routine (ex3) /* { dg-error \".ex3. does not refer to a function\" } */\n+\n+\n+/* \"#pragma acc routine\" already applied.  */\n+\n+extern void fungsi_1();\n+#pragma acc routine(fungsi_1) gang\n+#pragma acc routine(fungsi_1) gang /* { dg-error \".#pragma acc routine. already applied to .\\[void \\]*fungsi_1\" } */\n+#pragma acc routine(fungsi_1) worker /* { dg-error \".#pragma acc routine. already applied to .\\[void \\]*fungsi_1\" } */\n+#pragma acc routine(fungsi_1) vector /* { dg-error \".#pragma acc routine. already applied to .\\[void \\]*fungsi_1\" } */\n+\n+#pragma acc routine seq\n+extern void fungsi_2();\n+#pragma acc routine(fungsi_2) seq /* { dg-error \".#pragma acc routine. already applied to .\\[void \\]*fungsi_2.\" } */\n+#pragma acc routine(fungsi_2) worker /* { dg-error \".#pragma acc routine. already applied to .\\[void \\]*fungsi_2.\" } */\n+#pragma acc routine(fungsi_2) /* { dg-error \".#pragma acc routine. already applied to .\\[void \\]*fungsi_2.\" } */\n+\n+#pragma acc routine vector\n+extern void fungsi_3();\n+#pragma acc routine vector /* { dg-error \".#pragma acc routine. already applied to .\\[void \\]*fungsi_3.\" } */\n+void fungsi_3()\n+{\n+}\n+\n+extern void fungsi_4();\n+#pragma acc routine (fungsi_4) worker\n+#pragma acc routine gang /* { dg-error \".#pragma acc routine. already applied to .\\[void \\]*fungsi_4.\" } */\n+void fungsi_4()\n+{\n+}\n+\n+#pragma acc routine gang\n+void fungsi_5()\n+{\n+}\n+#pragma acc routine (fungsi_5) worker /* { dg-error \".#pragma acc routine. already applied to .\\[void \\]*fungsi_5.\" } */\n+\n+#pragma acc routine seq\n+void fungsi_6()\n+{\n+}\n+#pragma acc routine seq /* { dg-error \".#pragma acc routine. already applied to .\\[void \\]*fungsi_6.\" } */\n+extern void fungsi_6();\n \n \n /* \"#pragma acc routine\" must be applied before.  */\n@@ -172,11 +214,11 @@ void Foo ()\n   Bar ();\n }\n \n-#pragma acc routine (Bar) seq // { dg-error \".#pragma acc routine. must be applied before use\" }\n+#pragma acc routine (Bar) // { dg-error \".#pragma acc routine. must be applied before use\" }\n \n #pragma acc routine (Foo) gang // { dg-error \".#pragma acc routine. must be applied before definition\" }\n \n-#pragma acc routine (Baz) seq // { dg-error \"not been declared\" }\n+#pragma acc routine (Baz) // { dg-error \"not been declared\" }\n \n \n /* OpenACC declare.  */\n@@ -185,7 +227,7 @@ int vb1;\t\t/* { dg-error \"directive for use\" } */\n extern int vb2;\t\t/* { dg-error \"directive for use\" } */\n static int vb3;\t\t/* { dg-error \"directive for use\" } */\n \n-#pragma acc routine seq\n+#pragma acc routine\n int\n func1 (int a)\n {\n@@ -196,7 +238,7 @@ func1 (int a)\n   return vb3;\n }\n \n-#pragma acc routine seq\n+#pragma acc routine\n int\n func2 (int a)\n {\n@@ -214,7 +256,7 @@ extern int vb6;\t\t\t/* { dg-error \"clause used in\" } */\n static int vb7;\t\t\t/* { dg-error \"clause used in\" } */\n #pragma acc declare link (vb7)\n \n-#pragma acc routine seq\n+#pragma acc routine\n int\n func3 (int a)\n {\n@@ -231,7 +273,7 @@ extern int vb9;\n static int vb10;\n #pragma acc declare create (vb10)\n \n-#pragma acc routine seq\n+#pragma acc routine\n int\n func4 (int a)\n {\n@@ -249,7 +291,7 @@ extern int vb12;\n extern int vb13;\n #pragma acc declare device_resident (vb13)\n \n-#pragma acc routine seq\n+#pragma acc routine\n int\n func5 (int a)\n {\n@@ -260,7 +302,7 @@ func5 (int a)\n   return vb13;\n }\n \n-#pragma acc routine seq\n+#pragma acc routine\n int\n func6 (int a)\n {"}, {"sha": "8bcd2a1ce432af1fa7ac730c21245ef52d7d588b", "filename": "gcc/testsuite/g++.dg/goacc/template.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c319667adff8cc10e87ff836f72d5a7471e942c6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgoacc%2Ftemplate.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c319667adff8cc10e87ff836f72d5a7471e942c6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgoacc%2Ftemplate.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgoacc%2Ftemplate.C?ref=c319667adff8cc10e87ff836f72d5a7471e942c6", "patch": "@@ -1,4 +1,4 @@\n-#pragma acc routine seq\n+#pragma acc routine\n template <typename T> T\n accDouble(int val)\n {"}]}