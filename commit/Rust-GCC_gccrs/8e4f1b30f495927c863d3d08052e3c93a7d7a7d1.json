{"sha": "8e4f1b30f495927c863d3d08052e3c93a7d7a7d1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGU0ZjFiMzBmNDk1OTI3Yzg2M2QzZDA4MDUyZTNjOTNhN2Q3YTdkMQ==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2000-08-18T09:31:48Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2000-08-18T09:31:48Z"}, "message": "13478.C: Mark candidate.\n\n\t* g++.old-deja/g++.benjamin/13478.C: Mark candidate.\n\t* g++.old-deja/g++.mike/net36.C: Mark candidate.\n\t* g++.old-deja/g++.robertl/eb131.C: Mark candidate.\n\t* g++.old-deja/g++.oliva/overload1.C: Remove XFAIL.\n\t* g++.old-deja/g++.other/ptrmem7.C: New test.\n\t* g++.old-deja/g++.pt/ptrmem10.C: New test.\n\nFrom-SVN: r35778", "tree": {"sha": "84d12f3976ca34878e4de907750ec17917f81a3b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/84d12f3976ca34878e4de907750ec17917f81a3b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8e4f1b30f495927c863d3d08052e3c93a7d7a7d1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e4f1b30f495927c863d3d08052e3c93a7d7a7d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e4f1b30f495927c863d3d08052e3c93a7d7a7d1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e4f1b30f495927c863d3d08052e3c93a7d7a7d1/comments", "author": null, "committer": null, "parents": [{"sha": "19420d00dce75db81a29e665a427808ef16d114b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19420d00dce75db81a29e665a427808ef16d114b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/19420d00dce75db81a29e665a427808ef16d114b"}], "stats": {"total": 92, "additions": 88, "deletions": 4}, "files": [{"sha": "34d1f05525f799ea181b1f6048e0398d03eed5ca", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e4f1b30f495927c863d3d08052e3c93a7d7a7d1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e4f1b30f495927c863d3d08052e3c93a7d7a7d1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8e4f1b30f495927c863d3d08052e3c93a7d7a7d1", "patch": "@@ -1,3 +1,12 @@\n+2000-08-18  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* g++.old-deja/g++.benjamin/13478.C: Mark candidate.\n+\t* g++.old-deja/g++.mike/net36.C: Mark candidate.\n+\t* g++.old-deja/g++.robertl/eb131.C: Mark candidate.\n+\t* g++.old-deja/g++.oliva/overload1.C: Remove XFAIL.\n+\t* g++.old-deja/g++.other/ptrmem7.C: New test.\n+\t* g++.old-deja/g++.pt/ptrmem10.C: New test.\n+\n 2000-08-18  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* g++.old-deja/g++.pt/typename27.C: New test."}, {"sha": "c4dba9c117c9e2307b6c8d06e1e5b84916e43a2b", "filename": "gcc/testsuite/g++.old-deja/g++.benjamin/13478.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e4f1b30f495927c863d3d08052e3c93a7d7a7d1/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.benjamin%2F13478.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e4f1b30f495927c863d3d08052e3c93a7d7a7d1/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.benjamin%2F13478.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.benjamin%2F13478.C?ref=8e4f1b30f495927c863d3d08052e3c93a7d7a7d1", "patch": "@@ -19,7 +19,7 @@ protected:\n   static const hand_table table_1[];\n   static const AData \t  table_2;\n private:\n-  void foo (void);\n+  void foo (void);                  // ERROR - candidate\n };\n \n const hand_table Agent::table_1[] = "}, {"sha": "21c3a1ee1a076391335145444c5c138530d99d73", "filename": "gcc/testsuite/g++.old-deja/g++.mike/net36.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e4f1b30f495927c863d3d08052e3c93a7d7a7d1/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fnet36.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e4f1b30f495927c863d3d08052e3c93a7d7a7d1/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fnet36.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fnet36.C?ref=8e4f1b30f495927c863d3d08052e3c93a7d7a7d1", "patch": "@@ -11,7 +11,7 @@ typedef void (A::*handler) (X*);\n \n class B {\n public:\n-  void setHandler(handler);\n+  void setHandler(handler); // ERROR - candidate\n };\n \n void f(B* b) {"}, {"sha": "ed8993a43a621c11a0f17048f5043fab94b3c1f1", "filename": "gcc/testsuite/g++.old-deja/g++.oliva/overload1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e4f1b30f495927c863d3d08052e3c93a7d7a7d1/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.oliva%2Foverload1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e4f1b30f495927c863d3d08052e3c93a7d7a7d1/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.oliva%2Foverload1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.oliva%2Foverload1.C?ref=8e4f1b30f495927c863d3d08052e3c93a7d7a7d1", "patch": "@@ -12,7 +12,7 @@ struct foo {\n \n /* gcc emits a hard error without -pedantic, and a warning with\n    -pedantic, even in bad1.  */\n-int (*ok1)() = foo::bar; // gets bogus error - XFAIL *-*-*\n+int (*ok1)() = foo::bar;\n void (foo::*bad1)(int) = foo::bar; // ERROR - missing &\n \n int (*ok2)() = &foo::bar; // ok"}, {"sha": "188af76713945034ca123f8fa3f2f0bcb21f22ba", "filename": "gcc/testsuite/g++.old-deja/g++.other/ptrmem7.C", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e4f1b30f495927c863d3d08052e3c93a7d7a7d1/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fptrmem7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e4f1b30f495927c863d3d08052e3c93a7d7a7d1/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fptrmem7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fptrmem7.C?ref=8e4f1b30f495927c863d3d08052e3c93a7d7a7d1", "patch": "@@ -0,0 +1,46 @@\n+// Build don't link:\n+// \n+// Copyright (C) 2000 Free Software Foundation, Inc.\n+// Contributed by Nathan Sidwell 14 Aug 2000 <nathan@codesourcery.com>\n+\n+// A pointer to member can only be formed by `&T::m', however, other forms\n+// are ok for pointer to static member. Thus the error can only be determined\n+// after overload resolution.\n+\n+struct A\n+{\n+  static int ns (short);\n+  static int ns (float);\n+  int ns (int);\n+  int ns (double);\n+  int single (int);\n+  static int sole (short);\n+  void foo ();\n+};\n+void A::foo ()\n+{\n+  int (A::*ptr1) (int) = &A::ns;\n+  int (A::*ptr2) (int) = A::ns;           // ERROR - not ptr mem\n+  int (A::*ptr3) (int) = &ns;             // ERROR - not ptr mem\n+  int (A::*ptr4) (int) = ns;              // ERROR - not ptr mem\n+\n+  int (*ptr5) (short) = &A::ns;\n+  int (*ptr6) (short) = A::ns;\n+  int (*ptr7) (short) = &ns;\n+  int (*ptr8) (short) = ns;\n+\n+  int (A::*ptr11) (int) = &A::single;\n+  int (A::*ptr12) (int) = A::single;      // ERROR - not ptr mem\n+  int (A::*ptr13) (int) = &single;        // ERROR - not ptr mem\n+  int (A::*ptr14) (int) = single;         // ERROR - not ptr mem\n+\n+  int (A::*ptr20) (int) = &(A::ns);       // ERROR - not ptr mem\n+  int (A::*ptr21) (int) = &(A::single);   // ERROR - not ptr mem\n+\n+  int (*ptr31) (short) = &A::sole;\n+  int (*ptr32) (short) = A::sole;\n+  int (*ptr33) (short) = &sole;\n+  int (*ptr34) (short) = sole;\n+  int (*ptr41) (short) = &(A::sole);\n+  int (*ptr43) (short) = &(sole);\n+}"}, {"sha": "0e7a6d71778913bf6cdce8100ec61fd436d5901f", "filename": "gcc/testsuite/g++.old-deja/g++.pt/ptrmem10.C", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e4f1b30f495927c863d3d08052e3c93a7d7a7d1/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fptrmem10.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e4f1b30f495927c863d3d08052e3c93a7d7a7d1/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fptrmem10.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fptrmem10.C?ref=8e4f1b30f495927c863d3d08052e3c93a7d7a7d1", "patch": "@@ -0,0 +1,29 @@\n+// Build don't link:\n+// \n+// Copyright (C) 2000 Free Software Foundation, Inc.\n+// Contributed by Nathan Sidwell 14 Aug 2000 <nathan@codesourcery.com>\n+\n+// A pointer to member can only be formed by `&T::m', however, other forms\n+// are ok for pointer to static member. Thus the error can only be determined\n+// after overload resolution. In template deduction, this can disambiguate\n+// otherwise ambiguous cases.\n+\n+struct A\n+{\n+  static int f (int);\n+  int f (short);\n+  void baz ();\n+};\n+\n+template <typename T> void foo (int (*)(T));      // ERROR - candidate\n+template <typename T> void foo (int (A::*)(T));   // ERROR - candidate\n+\n+\n+void A::baz ()\n+{\n+  foo (&A::f);  // ERROR - ambiguous\n+  foo (A::f);\n+  foo (&(A::f));\n+  foo (f);\n+  foo (&f);\n+}"}, {"sha": "34ee0af399906dcd5663b47099956e1186fc253c", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/eb131.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e4f1b30f495927c863d3d08052e3c93a7d7a7d1/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb131.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e4f1b30f495927c863d3d08052e3c93a7d7a7d1/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb131.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb131.C?ref=8e4f1b30f495927c863d3d08052e3c93a7d7a7d1", "patch": "@@ -10,7 +10,7 @@ struct a {\n \tvoid bar( double );\n \tvoid bar( float );\n \n-  void foo( void (a::*member)(float) );\n+  void foo( void (a::*member)(float) );   // ERROR - candidate\n };\n \n a::a()"}]}