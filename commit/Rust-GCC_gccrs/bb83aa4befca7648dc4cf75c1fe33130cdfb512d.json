{"sha": "bb83aa4befca7648dc4cf75c1fe33130cdfb512d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmI4M2FhNGJlZmNhNzY0OGRjNGNmNzVjMWZlMzMxMzBjZGZiNTEyZA==", "commit": {"author": {"name": "Maxim Kuvyrkov", "email": "mkuvyrkov@ispras.ru", "date": "2006-06-06T09:44:17Z"}, "committer": {"name": "Maxim Kuvyrkov", "email": "mkuvyrkov@gcc.gnu.org", "date": "2006-06-06T09:44:17Z"}, "message": "params.def (PARAM_MAX_SCHED_EXTEND_REGIONS_ITERS): Change default value to 0.\n\n2006-06-06  Maxim Kuvyrkov  <mkuvyrkov@ispras.ru>\n\n\t* params.def (PARAM_MAX_SCHED_EXTEND_REGIONS_ITERS): Change default\n\tvalue to 0.\n\t* doc/invoke.texi (max-sched-extend-regions-iters): Document.\n\t* config/ia64/ia64.c (params.h): New header.\n\t(ia64_optimization_options): New function to adjust parameters.\n\t* config/ia64/ia64-protos.h (ia64_optimization_options): New prototype.\n\t* config/ia64/ia64.h (OPTIMIZATION_OPTIONS): New macro.\n\t* config/ia64/t-ia64 (ia64.o): Add dependence from params.h .\n\nFrom-SVN: r114425", "tree": {"sha": "4e85765957fea3261824e07ed61ba01439373e74", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4e85765957fea3261824e07ed61ba01439373e74"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bb83aa4befca7648dc4cf75c1fe33130cdfb512d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb83aa4befca7648dc4cf75c1fe33130cdfb512d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb83aa4befca7648dc4cf75c1fe33130cdfb512d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb83aa4befca7648dc4cf75c1fe33130cdfb512d/comments", "author": null, "committer": null, "parents": [{"sha": "6ff24d45dc7bf2691b6c2c3f9e9830360dc572a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ff24d45dc7bf2691b6c2c3f9e9830360dc572a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ff24d45dc7bf2691b6c2c3f9e9830360dc572a6"}], "stats": {"total": 33, "additions": 30, "deletions": 3}, "files": [{"sha": "ce5bda753d27476925eda5cc07e227d677048669", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb83aa4befca7648dc4cf75c1fe33130cdfb512d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb83aa4befca7648dc4cf75c1fe33130cdfb512d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bb83aa4befca7648dc4cf75c1fe33130cdfb512d", "patch": "@@ -1,3 +1,14 @@\n+2006-06-06  Maxim Kuvyrkov  <mkuvyrkov@ispras.ru>\n+\n+\t* params.def (PARAM_MAX_SCHED_EXTEND_REGIONS_ITERS): Change default\n+\tvalue to 0.\n+\t* doc/invoke.texi (max-sched-extend-regions-iters): Document.\n+\t* config/ia64/ia64.c (params.h): New header.\n+\t(ia64_optimization_options): New function to adjust parameters.\n+\t* config/ia64/ia64-protos.h (ia64_optimization_options): New prototype.\n+\t* config/ia64/ia64.h (OPTIMIZATION_OPTIONS): New macro.\n+\t* config/ia64/t-ia64 (ia64.o): Add dependence from params.h .\n+\n 2006-06-05  Kazu Hirata  <kazu@codesourcery.com>\n \n \t* stor-layout.c (debug_rli): Fix a typo in a debug message."}, {"sha": "c4bf61d98292f0720e4ace9a9032daf4133aa5a2", "filename": "gcc/config/ia64/ia64-protos.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb83aa4befca7648dc4cf75c1fe33130cdfb512d/gcc%2Fconfig%2Fia64%2Fia64-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb83aa4befca7648dc4cf75c1fe33130cdfb512d/gcc%2Fconfig%2Fia64%2Fia64-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64-protos.h?ref=bb83aa4befca7648dc4cf75c1fe33130cdfb512d", "patch": "@@ -110,3 +110,5 @@ extern enum direction ia64_hpux_function_arg_padding (enum machine_mode, tree);\n extern void ia64_hpux_handle_builtin_pragma (struct cpp_reader *);\n extern void ia64_output_function_profiler (FILE *, int);\n extern void ia64_profile_hook (int);\n+\n+extern void ia64_optimization_options (int, int);"}, {"sha": "14e85cae3c7b67d737569db2018f5562256905f8", "filename": "gcc/config/ia64/ia64.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb83aa4befca7648dc4cf75c1fe33130cdfb512d/gcc%2Fconfig%2Fia64%2Fia64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb83aa4befca7648dc4cf75c1fe33130cdfb512d/gcc%2Fconfig%2Fia64%2Fia64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.c?ref=bb83aa4befca7648dc4cf75c1fe33130cdfb512d", "patch": "@@ -54,6 +54,7 @@ Boston, MA 02110-1301, USA.  */\n #include \"tree-gimple.h\"\n #include \"intl.h\"\n #include \"debug.h\"\n+#include \"params.h\"\n \n /* This is used for communication between ASM_OUTPUT_LABEL and\n    ASM_OUTPUT_LABELREF.  */\n@@ -9749,4 +9750,13 @@ ia64_invalid_binary_op (int op ATTRIBUTE_UNUSED, tree type1, tree type2)\n   return NULL;\n }\n \n+/* Implement overriding of the optimization options.  */\n+void\n+ia64_optimization_options (int level ATTRIBUTE_UNUSED,\n+                           int size ATTRIBUTE_UNUSED)\n+{\n+  /* Let the scheduler form additional regions.  */\n+  set_param_value (\"max-sched-extend-regions-iters\", 2);\n+}\n+\n #include \"gt-ia64.h\""}, {"sha": "c9bb417166244d578a5ab612d9ac84313382c474", "filename": "gcc/config/ia64/ia64.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb83aa4befca7648dc4cf75c1fe33130cdfb512d/gcc%2Fconfig%2Fia64%2Fia64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb83aa4befca7648dc4cf75c1fe33130cdfb512d/gcc%2Fconfig%2Fia64%2Fia64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.h?ref=bb83aa4befca7648dc4cf75c1fe33130cdfb512d", "patch": "@@ -2043,4 +2043,8 @@ struct machine_function GTY(())\n /* Switch on code for querying unit reservations.  */\n #define CPU_UNITS_QUERY 1\n \n+/* Define this to change the optimizations performed by default.  */\n+#define OPTIMIZATION_OPTIONS(LEVEL, SIZE) \\\n+  ia64_optimization_options ((LEVEL), (SIZE))\n+\n /* End of ia64.h */"}, {"sha": "60535882bb72ffa5bd6bb63c30641b288bf5d8c6", "filename": "gcc/config/ia64/t-ia64", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb83aa4befca7648dc4cf75c1fe33130cdfb512d/gcc%2Fconfig%2Fia64%2Ft-ia64", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb83aa4befca7648dc4cf75c1fe33130cdfb512d/gcc%2Fconfig%2Fia64%2Ft-ia64", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Ft-ia64?ref=bb83aa4befca7648dc4cf75c1fe33130cdfb512d", "patch": "@@ -51,4 +51,4 @@ ia64-c.o: $(srcdir)/config/ia64/ia64-c.c $(CONFIG_H) $(SYSTEM_H) \\\n # genattrtab generates very long string literals.\n insn-attrtab.o-warn = -Wno-error\n \n-ia64.o: debug.h\n+ia64.o: debug.h $(PARAMS_H)"}, {"sha": "7e2f75790264ac832d908d3f6705ef7d39c20094", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb83aa4befca7648dc4cf75c1fe33130cdfb512d/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb83aa4befca7648dc4cf75c1fe33130cdfb512d/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=bb83aa4befca7648dc4cf75c1fe33130cdfb512d", "patch": "@@ -6225,7 +6225,7 @@ for interblock speculative scheduling.  The default value is 40.\n The maximum number of iterations through CFG to extend regions.\n 0 - disable region extension,\n N - do at most N iterations.\n-The default value is 2.\n+The default value is 0.\n \n @item max-sched-insn-conflict-delay\n The maximum conflict delay for an insn to be considered for speculative motion."}, {"sha": "6d230fc2cfc3a29bba3cb214fa45d4e1a1f0841e", "filename": "gcc/params.def", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb83aa4befca7648dc4cf75c1fe33130cdfb512d/gcc%2Fparams.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb83aa4befca7648dc4cf75c1fe33130cdfb512d/gcc%2Fparams.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fparams.def?ref=bb83aa4befca7648dc4cf75c1fe33130cdfb512d", "patch": "@@ -502,7 +502,7 @@ DEFPARAM(PARAM_MIN_SPEC_PROB,\n DEFPARAM(PARAM_MAX_SCHED_EXTEND_REGIONS_ITERS,\n          \"max-sched-extend-regions-iters\",\n          \"The maximum number of iterations through CFG to extend regions\",\n-         2, 0, 0)\n+         0, 0, 0)\n \n DEFPARAM(PARAM_MAX_SCHED_INSN_CONFLICT_DELAY,\n          \"max-sched-insn-conflict-delay\","}]}