{"sha": "4907769827b246d80145601c6fa5caf84f04f941", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDkwNzc2OTgyN2IyNDZkODAxNDU2MDFjNmZhNWNhZjg0ZjA0Zjk0MQ==", "commit": {"author": {"name": "Ira Rosen", "email": "irar@il.ibm.com", "date": "2010-10-11T12:18:47Z"}, "committer": {"name": "Ira Rosen", "email": "irar@gcc.gnu.org", "date": "2010-10-11T12:18:47Z"}, "message": "re PR tree-optimization/45902 (CPU2006 benchmark sphinx3 fails with vectorization)\n\n\n\tPR tree-optimization/45902\n\t* tree-vect-slp.c (vect_get_constant_vectors): Use statement's\n\tvector type for constants, unless it's a pointer.\n\nFrom-SVN: r165302", "tree": {"sha": "5be2c3e76b5811cc4125f6b3ca857977cbda9646", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5be2c3e76b5811cc4125f6b3ca857977cbda9646"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4907769827b246d80145601c6fa5caf84f04f941", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4907769827b246d80145601c6fa5caf84f04f941", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4907769827b246d80145601c6fa5caf84f04f941", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4907769827b246d80145601c6fa5caf84f04f941/comments", "author": {"login": "irar2", "id": 16818592, "node_id": "MDQ6VXNlcjE2ODE4NTky", "avatar_url": "https://avatars.githubusercontent.com/u/16818592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/irar2", "html_url": "https://github.com/irar2", "followers_url": "https://api.github.com/users/irar2/followers", "following_url": "https://api.github.com/users/irar2/following{/other_user}", "gists_url": "https://api.github.com/users/irar2/gists{/gist_id}", "starred_url": "https://api.github.com/users/irar2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/irar2/subscriptions", "organizations_url": "https://api.github.com/users/irar2/orgs", "repos_url": "https://api.github.com/users/irar2/repos", "events_url": "https://api.github.com/users/irar2/events{/privacy}", "received_events_url": "https://api.github.com/users/irar2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a6510374cc351047417e6211b7f8391a1eeebf30", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6510374cc351047417e6211b7f8391a1eeebf30", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6510374cc351047417e6211b7f8391a1eeebf30"}], "stats": {"total": 69, "additions": 65, "deletions": 4}, "files": [{"sha": "fd0bc3673d3bef3053e6766bde0430d6f8d62b6c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4907769827b246d80145601c6fa5caf84f04f941/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4907769827b246d80145601c6fa5caf84f04f941/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4907769827b246d80145601c6fa5caf84f04f941", "patch": "@@ -1,3 +1,9 @@\n+2010-10-11  Ira Rosen  <irar@il.ibm.com>\n+\n+\tPR tree-optimization/45902\n+\t* tree-vect-slp.c (vect_get_constant_vectors): Use statement's\n+\tvector type for constants, unless it's a pointer.\n+\n 2010-10-11  Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>\n \n \t* config/s390/s390.md (*mov<mode>cc): lgoc -> locg and stgoc -> stocg."}, {"sha": "315e688162b4c38e2068ea5fc8dc266e7a2ace77", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4907769827b246d80145601c6fa5caf84f04f941/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4907769827b246d80145601c6fa5caf84f04f941/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4907769827b246d80145601c6fa5caf84f04f941", "patch": "@@ -1,3 +1,8 @@\n+2010-10-11  Ira Rosen  <irar@il.ibm.com>\n+\n+\tPR tree-optimization/45902\n+\t* gcc.dg/vect/45902.c: New test.\n+\n 2010-10-11  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/45870"}, {"sha": "1690b3ab3e5277b8a6af8422fc4749b61193e75b", "filename": "gcc/testsuite/gcc.dg/vect/pr45902.c", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4907769827b246d80145601c6fa5caf84f04f941/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr45902.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4907769827b246d80145601c6fa5caf84f04f941/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr45902.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr45902.c?ref=4907769827b246d80145601c6fa5caf84f04f941", "patch": "@@ -0,0 +1,43 @@\n+/* { dg-require-effective-target vect_int } */\n+\n+#include <stdarg.h>\n+#include <stdlib.h>\n+#include \"tree-vect.h\"\n+\n+#define N 128\n+\n+short res[N];\n+short a[N];\n+\n+int\n+main1 ()\n+{\n+  int i;\n+\n+  for (i = 0; i < N/4; i+=4)\n+    {\n+      res[i] = a[i] >> 8;\n+      res[i+1] = a[i+1] >> 8;\n+      res[i+2] = a[i+2] >> 8;\n+      res[i+3] = a[i+3] >> 8;\n+    }\n+}\n+\n+int\n+main ()\n+{\n+  int i;\n+\n+  for (i = 0; i < N; i++)\n+    a[i] = i;\n+\n+  main1 ();\n+\n+  for (i = 0; i < N; i++)\n+    if (res[i] != a[i] >> 8)\n+      abort ();\n+\n+  return 0;\n+}\n+\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "784db84a67ede422e9b69232165a99cc3a91879d", "filename": "gcc/tree-vect-slp.c", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4907769827b246d80145601c6fa5caf84f04f941/gcc%2Ftree-vect-slp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4907769827b246d80145601c6fa5caf84f04f941/gcc%2Ftree-vect-slp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-slp.c?ref=4907769827b246d80145601c6fa5caf84f04f941", "patch": "@@ -1895,13 +1895,20 @@ vect_get_constant_vectors (slp_tree slp_node, VEC(tree,heap) **vec_oprnds,\n     }\n \n   if (CONSTANT_CLASS_P (op))\n-    constant_p = true;\n+    {\n+      constant_p = true;\n+      if (POINTER_TYPE_P (TREE_TYPE (gimple_assign_lhs (stmt))))\n+        vector_type = get_vectype_for_scalar_type (TREE_TYPE (op));\n+      else\n+        vector_type = STMT_VINFO_VECTYPE (stmt_vinfo);\n+    }\n   else\n-    constant_p = false;\n+    {\n+      constant_p = false;\n+      vector_type = get_vectype_for_scalar_type (TREE_TYPE (op));\n+    }\n \n-  vector_type = get_vectype_for_scalar_type (TREE_TYPE (op));\n   gcc_assert (vector_type);\n-\n   nunits = TYPE_VECTOR_SUBPARTS (vector_type);\n \n   /* NUMBER_OF_COPIES is the number of times we need to use the same values in"}]}