{"sha": "a8c3510c8f00f0061767bc47b693fbdec5de1ab8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YThjMzUxMGM4ZjAwZjAwNjE3NjdiYzQ3YjY5M2ZiZGVjNWRlMWFiOA==", "commit": {"author": {"name": "Andrew Macleod", "email": "amacleod@gcc.gnu.org", "date": "1998-03-16T12:51:56Z"}, "committer": {"name": "Andrew Macleod", "email": "amacleod@gcc.gnu.org", "date": "1998-03-16T12:51:56Z"}, "message": "final.c (final): Initialize the table indicating which instructions belong in which exception region.\n\n\t* final.c (final): Initialize the table indicating which instructions\n\tbelong in which exception region.\n\nFrom-SVN: r18625", "tree": {"sha": "47d7d14fb792dc556fc2075ed8243a885efa6178", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/47d7d14fb792dc556fc2075ed8243a885efa6178"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a8c3510c8f00f0061767bc47b693fbdec5de1ab8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8c3510c8f00f0061767bc47b693fbdec5de1ab8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a8c3510c8f00f0061767bc47b693fbdec5de1ab8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8c3510c8f00f0061767bc47b693fbdec5de1ab8/comments", "author": null, "committer": null, "parents": [{"sha": "77d33a842d42d8de1dcfa142f8202ea60b4403ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77d33a842d42d8de1dcfa142f8202ea60b4403ac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/77d33a842d42d8de1dcfa142f8202ea60b4403ac"}], "stats": {"total": 15, "additions": 13, "deletions": 2}, "files": [{"sha": "70a6fbe047ea297279b84b52c652630861cbfb1e", "filename": "gcc/final.c", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8c3510c8f00f0061767bc47b693fbdec5de1ab8/gcc%2Ffinal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8c3510c8f00f0061767bc47b693fbdec5de1ab8/gcc%2Ffinal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffinal.c?ref=a8c3510c8f00f0061767bc47b693fbdec5de1ab8", "patch": "@@ -1857,6 +1857,7 @@ final (first, file, optimize, prescan)\n {\n   register rtx insn;\n   int max_line = 0;\n+  int max_uid = 0;\n \n   last_ignored_compare = 0;\n   new_block = 1;\n@@ -1901,8 +1902,16 @@ final (first, file, optimize, prescan)\n   bzero (line_note_exists, max_line + 1);\n \n   for (insn = first; insn; insn = NEXT_INSN (insn))\n-    if (GET_CODE (insn) == NOTE && NOTE_LINE_NUMBER (insn) > 0)\n-      line_note_exists[NOTE_LINE_NUMBER (insn)] = 1;\n+    {\n+      if (INSN_UID (insn) > max_uid)       /* find largest UID */\n+        max_uid = INSN_UID (insn);\n+      if (GET_CODE (insn) == NOTE && NOTE_LINE_NUMBER (insn) > 0)\n+        line_note_exists[NOTE_LINE_NUMBER (insn)] = 1;\n+    }\n+\n+  /* Initialize insn_eh_region table if eh is being used. */\n+  \n+  init_insn_eh_region (first, max_uid);\n \n   init_recog ();\n \n@@ -1921,6 +1930,8 @@ final (first, file, optimize, prescan)\n      if the last insn was a conditional branch.  */\n   if (profile_block_flag && new_block)\n     add_bb (file);\n+\n+  free_insn_eh_region ();\n }\n \f\n /* The final scan for one insn, INSN."}]}