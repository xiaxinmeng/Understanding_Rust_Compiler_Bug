{"sha": "8f6d1c8601131f3ebdab1629ff923fa03ceb7ea5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGY2ZDFjODYwMTEzMWYzZWJkYWIxNjI5ZmY5MjNmYTAzY2ViN2VhNQ==", "commit": {"author": {"name": "Oleg Endo", "email": "olegendo@gcc.gnu.org", "date": "2013-03-06T00:41:25Z"}, "committer": {"name": "Oleg Endo", "email": "olegendo@gcc.gnu.org", "date": "2013-03-06T00:41:25Z"}, "message": "re PR target/56529 ([SH] Calls to __sdivsi3_i4i and __udivsi3_i4i are generated on SH2)\n\n\tPR target/56529\n\t* config/sh/sh.c (sh_option_override): Check for TARGET_DYNSHIFT\n\tinstead of TARGET_SH2 for call-table case.  Do not set sh_div_strategy\n\tto SH_DIV_CALL_TABLE for TARGET_SH2.\n\t* config.gcc (sh_multilibs): Add m2 and m2a to sh*-*-linux* multilib\n\tlist.\n\t* doc/invoke.texi (SH options): Document mdiv= call-div1, call-fp,\n\tcall-table options.\n\n\tPR target/56529\n\t* config/sh/lib1funcs.S (udivsi3_i4i, sdivsi3_i4i): Add __SH2A__ to\n\tinclusion list.\n\nFrom-SVN: r196484", "tree": {"sha": "35b525cb1796949ce2d7f1ab6707d25bbbf5116e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/35b525cb1796949ce2d7f1ab6707d25bbbf5116e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8f6d1c8601131f3ebdab1629ff923fa03ceb7ea5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f6d1c8601131f3ebdab1629ff923fa03ceb7ea5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f6d1c8601131f3ebdab1629ff923fa03ceb7ea5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f6d1c8601131f3ebdab1629ff923fa03ceb7ea5/comments", "author": null, "committer": null, "parents": [{"sha": "018fa87af9dc9e72fe62716403bc76fa87ed18ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/018fa87af9dc9e72fe62716403bc76fa87ed18ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/018fa87af9dc9e72fe62716403bc76fa87ed18ef"}], "stats": {"total": 61, "additions": 53, "deletions": 8}, "files": [{"sha": "f8c5f95a1bdeb3e43d51302dc6032c16a6b5d38d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f6d1c8601131f3ebdab1629ff923fa03ceb7ea5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f6d1c8601131f3ebdab1629ff923fa03ceb7ea5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8f6d1c8601131f3ebdab1629ff923fa03ceb7ea5", "patch": "@@ -1,3 +1,14 @@\n+2013-03-06  Oleg Endo  <olegendo@gcc.gnu.org>\n+\n+\tPR target/56529\n+\t* config/sh/sh.c (sh_option_override): Check for TARGET_DYNSHIFT\n+\tinstead of TARGET_SH2 for call-table case.  Do not set sh_div_strategy\n+\tto SH_DIV_CALL_TABLE for TARGET_SH2.\n+\t* config.gcc (sh_multilibs): Add m2 and m2a to sh*-*-linux* multilib\n+\tlist.\n+\t* doc/invoke.texi (SH options): Document mdiv= call-div1, call-fp,\n+\tcall-table options.\n+\n 2013-03-05  Sterling Augustine  <saugustine@google.com>\n \t    Cary Coutant  <ccoutant@google.com>\n "}, {"sha": "64302a7bb392392210c96b9e4d7fcc347d46dea1", "filename": "gcc/config.gcc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f6d1c8601131f3ebdab1629ff923fa03ceb7ea5/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f6d1c8601131f3ebdab1629ff923fa03ceb7ea5/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=8f6d1c8601131f3ebdab1629ff923fa03ceb7ea5", "patch": "@@ -2371,7 +2371,7 @@ sh-*-elf* | sh[12346l]*-*-elf* | \\\n \t\tsh[1234]*)\tsh_multilibs=${sh_cpu_target} ;;\n \t\tsh64* | sh5*)\tsh_multilibs=m5-32media,m5-32media-nofpu,m5-compact,m5-compact-nofpu,m5-64media,m5-64media-nofpu ;;\n \t\tsh-superh-*)\tsh_multilibs=m4,m4-single,m4-single-only,m4-nofpu ;;\n-\t\tsh*-*-linux*)\tsh_multilibs=m1,m3e,m4 ;;\n+\t\tsh*-*-linux*)\tsh_multilibs=m1,m2,m2a,m3e,m4 ;;\n \t\tsh*-*-netbsd*)\tsh_multilibs=m3,m3e,m4 ;;\n \t\t*) sh_multilibs=m1,m2,m2e,m4,m4-single,m4-single-only,m2a,m2a-single ;;\n \t\tesac"}, {"sha": "dcbd93286ed8a77efe0c2928d6d411761b2f6763", "filename": "gcc/config/sh/sh.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f6d1c8601131f3ebdab1629ff923fa03ceb7ea5/gcc%2Fconfig%2Fsh%2Fsh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f6d1c8601131f3ebdab1629ff923fa03ceb7ea5/gcc%2Fconfig%2Fsh%2Fsh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.c?ref=8f6d1c8601131f3ebdab1629ff923fa03ceb7ea5", "patch": "@@ -820,7 +820,7 @@ sh_option_override (void)\n \t\t   || (TARGET_HARD_SH4 && TARGET_SH2E)\n \t\t   || (TARGET_SHCOMPACT && TARGET_FPU_ANY)))\n \tsh_div_strategy = SH_DIV_CALL_FP;\n-      else if (! strcmp (sh_div_str, \"call-table\") && TARGET_SH2)\n+      else if (! strcmp (sh_div_str, \"call-table\") && TARGET_DYNSHIFT)\n \tsh_div_strategy = SH_DIV_CALL_TABLE;\n       else\n \t/* Pick one that makes most sense for the target in general.\n@@ -840,8 +840,6 @@ sh_option_override (void)\n \t  sh_div_strategy = SH_DIV_CALL_FP;\n \t/* SH1 .. SH3 cores often go into small-footprint systems, so\n \t   default to the smallest implementation available.  */\n-\telse if (TARGET_SH2)\t/* ??? EXPERIMENTAL */\n-\t  sh_div_strategy = SH_DIV_CALL_TABLE;\n \telse\n \t  sh_div_strategy = SH_DIV_CALL_DIV1;\n     }"}, {"sha": "11c34d8781b5605919ef4833a10eee07111308de", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 32, "deletions": 2, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f6d1c8601131f3ebdab1629ff923fa03ceb7ea5/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f6d1c8601131f3ebdab1629ff923fa03ceb7ea5/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=8f6d1c8601131f3ebdab1629ff923fa03ceb7ea5", "patch": "@@ -18749,8 +18749,8 @@ Set the cost to assume for a multiply insn.\n \n @item -mdiv=@var{strategy}\n @opindex mdiv=@var{strategy}\n-Set the division strategy to use for SHmedia code.  @var{strategy} must be\n-one of: \n+Set the division strategy to be used for integer division operations.\n+For SHmedia @var{strategy} can be one of: \n \n @table @samp\n \n@@ -18808,6 +18808,36 @@ a small dividend to be unlikely, and @samp{inv20l} assumes it to be likely.\n \n @end table\n \n+For targets other than SHmedia @var{strategy} can be one of:\n+\n+@table @samp\n+\n+@item call-div1\n+Calls a library function that uses the single-step division instruction\n+@code{div1} to perform the operation.  Division by zero calculates an\n+unspecified result and does not trap.  This is the default except for SH4,\n+SH2A and SHcompact.\n+\n+@item call-fp\n+Calls a library function that performs the operation in double precision\n+floating point.  Division by zero causes a floating-point exception.  This is\n+the default for SHcompact with FPU.  Specifying this for targets that do not\n+have a double precision FPU will default to @code{call-div1}.\n+\n+@item call-table\n+Calls a library function that uses a lookup table for small divisors and\n+the @code{div1} instruction with case distinction for larger divisors.  Division\n+by zero calculates an unspecified result and does not trap.  This is the default\n+for SH4.  Specifying this for targets that do not have dynamic shift\n+instructions will default to @code{call-div1}.\n+\n+@end table\n+\n+When a division strategy has not been specified the default strategy will be\n+selected based on the current target.  For SH2A the default strategy is to\n+use the @code{divs} and @code{divu} instructions instead of library function\n+calls.\n+\n @item -maccumulate-outgoing-args\n @opindex maccumulate-outgoing-args\n Reserve space once for outgoing arguments in the function prologue rather"}, {"sha": "8482f1fc09b80525fcf3a97c6756eb47612c888c", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f6d1c8601131f3ebdab1629ff923fa03ceb7ea5/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f6d1c8601131f3ebdab1629ff923fa03ceb7ea5/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=8f6d1c8601131f3ebdab1629ff923fa03ceb7ea5", "patch": "@@ -1,3 +1,9 @@\n+2013-03-06  Oleg Endo  <olegendo@gcc.gnu.org>\n+\n+\tPR target/56529\n+\t* config/sh/lib1funcs.S (udivsi3_i4i, sdivsi3_i4i): Add __SH2A__ to\n+\tinclusion list.\n+\n 2013-03-04  Edgar E. Iglesias <edgar.iglesias@gmail.com>\n \n \t* config/microblaze/crti.S: Setup stack protection at entry"}, {"sha": "5625719042153a7c7821e6f7fb22b46d83fa6d69", "filename": "libgcc/config/sh/lib1funcs.S", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f6d1c8601131f3ebdab1629ff923fa03ceb7ea5/libgcc%2Fconfig%2Fsh%2Flib1funcs.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f6d1c8601131f3ebdab1629ff923fa03ceb7ea5/libgcc%2Fconfig%2Fsh%2Flib1funcs.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fsh%2Flib1funcs.S?ref=8f6d1c8601131f3ebdab1629ff923fa03ceb7ea5", "patch": "@@ -3288,8 +3288,8 @@ GLOBAL(div_table):\n \t.word\t17136\n \t.word\t16639\n \n-#elif defined (__SH3__) || defined (__SH3E__) || defined (__SH4__) || defined (__SH4_SINGLE__) || defined (__SH4_SINGLE_ONLY__) || defined (__SH4_NOFPU__)\n-/* This code used shld, thus is not suitable for SH1 / SH2.  */\n+#elif defined (__SH2A__) || defined (__SH3__) || defined (__SH3E__) || defined (__SH4__) || defined (__SH4_SINGLE__) || defined (__SH4_SINGLE_ONLY__) || defined (__SH4_NOFPU__)\n+/* This code uses shld, thus is not suitable for SH1 / SH2.  */\n \n /* Signed / unsigned division without use of FPU, optimized for SH4.\n    Uses a lookup table for divisors in the range -128 .. +128, and"}]}