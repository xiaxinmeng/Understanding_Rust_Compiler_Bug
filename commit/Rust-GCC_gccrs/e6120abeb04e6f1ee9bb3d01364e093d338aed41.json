{"sha": "e6120abeb04e6f1ee9bb3d01364e093d338aed41", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTYxMjBhYmViMDRlNmYxZWU5YmIzZDAxMzY0ZTA5M2QzMzhhZWQ0MQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "rdsandiford@googlemail.com", "date": "2014-06-14T09:49:07Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2014-06-14T09:49:07Z"}, "message": "dg-extract-results.py: For Python 3, force sys.stdout to handle surrogate escape sequences.\n\ncontrib/\n\t* dg-extract-results.py: For Python 3, force sys.stdout to handle\n\tsurrogate escape sequences.\n\t(safe_open): New function.\n\t(output_segment, main): Use it.\n\nFrom-SVN: r211666", "tree": {"sha": "52f402c774ce9e4dc890f8ca02e15d1229f23ba0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/52f402c774ce9e4dc890f8ca02e15d1229f23ba0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e6120abeb04e6f1ee9bb3d01364e093d338aed41", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6120abeb04e6f1ee9bb3d01364e093d338aed41", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e6120abeb04e6f1ee9bb3d01364e093d338aed41", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6120abeb04e6f1ee9bb3d01364e093d338aed41/comments", "author": {"login": "rsandifo", "id": 4235983, "node_id": "MDQ6VXNlcjQyMzU5ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4235983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo", "html_url": "https://github.com/rsandifo", "followers_url": "https://api.github.com/users/rsandifo/followers", "following_url": "https://api.github.com/users/rsandifo/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo/orgs", "repos_url": "https://api.github.com/users/rsandifo/repos", "events_url": "https://api.github.com/users/rsandifo/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "56444a325d0de844b1c6eea5f598b8b268a4fac5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56444a325d0de844b1c6eea5f598b8b268a4fac5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/56444a325d0de844b1c6eea5f598b8b268a4fac5"}], "stats": {"total": 24, "additions": 22, "deletions": 2}, "files": [{"sha": "550a9ebb8e6eb748dc69cdaaff7181ab10b3d91e", "filename": "contrib/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6120abeb04e6f1ee9bb3d01364e093d338aed41/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6120abeb04e6f1ee9bb3d01364e093d338aed41/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=e6120abeb04e6f1ee9bb3d01364e093d338aed41", "patch": "@@ -1,3 +1,10 @@\n+2014-06-14  Richard Sandiford  <rdsandiford@googlemail.com>\n+\n+\t* dg-extract-results.py: For Python 3, force sys.stdout to handle\n+\tsurrogate escape sequences.\n+\t(safe_open): New function.\n+\t(output_segment, main): Use it.\n+\n 2014-05-25  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \t* dg-extract-results.py (Named): Remove __cmp__ method."}, {"sha": "cccbfd391dc7c8559585bd38ecd11a59960450dd", "filename": "contrib/dg-extract-results.py", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6120abeb04e6f1ee9bb3d01364e093d338aed41/contrib%2Fdg-extract-results.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6120abeb04e6f1ee9bb3d01364e093d338aed41/contrib%2Fdg-extract-results.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fdg-extract-results.py?ref=e6120abeb04e6f1ee9bb3d01364e093d338aed41", "patch": "@@ -10,6 +10,7 @@\n import sys\n import getopt\n import re\n+import io\n from datetime import datetime\n from operator import attrgetter\n \n@@ -21,6 +22,18 @@\n # they should keep the original order.\n sort_logs = True\n \n+# A version of open() that is safe against whatever binary output\n+# might be added to the log.\n+def safe_open (filename):\n+    if sys.version_info >= (3, 0):\n+        return open (filename, 'r', errors = 'surrogateescape')\n+    return open (filename, 'r')\n+\n+# Force stdout to handle escape sequences from a safe_open file.\n+if sys.version_info >= (3, 0):\n+    sys.stdout = io.TextIOWrapper (sys.stdout.buffer,\n+                                   errors = 'surrogateescape')\n+\n class Named:\n     def __init__ (self, name):\n         self.name = name\n@@ -457,7 +470,7 @@ def parse_file (self, filename, file):\n \n     # Output a segment of text.\n     def output_segment (self, segment):\n-        with open (segment.filename, 'r') as file:\n+        with safe_open (segment.filename) as file:\n             file.seek (segment.start)\n             for i in range (segment.lines):\n                 sys.stdout.write (file.readline())\n@@ -540,7 +553,7 @@ def main (self):\n         try:\n             # Parse the input files.\n             for filename in self.files:\n-                with open (filename, 'r') as file:\n+                with safe_open (filename) as file:\n                     self.parse_file (filename, file)\n \n             # Decide what to output."}]}