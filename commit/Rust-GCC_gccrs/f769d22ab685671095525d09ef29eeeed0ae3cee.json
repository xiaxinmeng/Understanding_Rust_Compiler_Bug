{"sha": "f769d22ab685671095525d09ef29eeeed0ae3cee", "node_id": "C_kwDOANBUbNoAKGY3NjlkMjJhYjY4NTY3MTA5NTUyNWQwOWVmMjllZWVlZDBhZTNjZWU", "commit": {"author": {"name": "LIU Hao", "email": "lh_mouse@126.com", "date": "2022-05-10T05:19:07Z"}, "committer": {"name": "Jonathan Yong", "email": "10walls@gmail.com", "date": "2023-03-01T13:46:45Z"}, "message": "gcc: Remove size limit of PCH for *-*-mingw32 hosts\n\nPCHs can now be relocated, so the size limit makes no sense any more.\n\nThis patch was submited to MSYS2 9 months ago for GCC 12. No issue has been reported so far.\n\nReference: https://github.com/msys2/MINGW-packages/blob/717d5a5a09e2370e3bd7e12b393a26dbfbe48921/mingw-w64-gcc/0010-Fix-using-large-PCH.patch\nSigned-off-by: LIU Hao <lh_mouse@126.com>\n\ngcc/ChangeLog:\n\n\tPR pch/14940\n\t* config/i386/host-mingw32.cc (mingw32_gt_pch_get_address):\n\tRemove the size limit `pch_VA_max_size`\n\nSigned-off-by: Jonathan Yong <10walls@gmail.com>", "tree": {"sha": "b846c1947ad258cfd66aa25cb36bca92936ca0fd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b846c1947ad258cfd66aa25cb36bca92936ca0fd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f769d22ab685671095525d09ef29eeeed0ae3cee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f769d22ab685671095525d09ef29eeeed0ae3cee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f769d22ab685671095525d09ef29eeeed0ae3cee", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f769d22ab685671095525d09ef29eeeed0ae3cee/comments", "author": {"login": "lhmouse", "id": 5071344, "node_id": "MDQ6VXNlcjUwNzEzNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5071344?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lhmouse", "html_url": "https://github.com/lhmouse", "followers_url": "https://api.github.com/users/lhmouse/followers", "following_url": "https://api.github.com/users/lhmouse/following{/other_user}", "gists_url": "https://api.github.com/users/lhmouse/gists{/gist_id}", "starred_url": "https://api.github.com/users/lhmouse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lhmouse/subscriptions", "organizations_url": "https://api.github.com/users/lhmouse/orgs", "repos_url": "https://api.github.com/users/lhmouse/repos", "events_url": "https://api.github.com/users/lhmouse/events{/privacy}", "received_events_url": "https://api.github.com/users/lhmouse/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jon-y", "id": 4688224, "node_id": "MDQ6VXNlcjQ2ODgyMjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4688224?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jon-y", "html_url": "https://github.com/jon-y", "followers_url": "https://api.github.com/users/jon-y/followers", "following_url": "https://api.github.com/users/jon-y/following{/other_user}", "gists_url": "https://api.github.com/users/jon-y/gists{/gist_id}", "starred_url": "https://api.github.com/users/jon-y/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jon-y/subscriptions", "organizations_url": "https://api.github.com/users/jon-y/orgs", "repos_url": "https://api.github.com/users/jon-y/repos", "events_url": "https://api.github.com/users/jon-y/events{/privacy}", "received_events_url": "https://api.github.com/users/jon-y/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "560f1db37130c07f1e8a0788fac9a800640c59ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/560f1db37130c07f1e8a0788fac9a800640c59ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/560f1db37130c07f1e8a0788fac9a800640c59ad"}], "stats": {"total": 10, "additions": 2, "deletions": 8}, "files": [{"sha": "acff6138d636903ae80c9f560f3168e73ab19ea4", "filename": "gcc/config/i386/host-mingw32.cc", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f769d22ab685671095525d09ef29eeeed0ae3cee/gcc%2Fconfig%2Fi386%2Fhost-mingw32.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f769d22ab685671095525d09ef29eeeed0ae3cee/gcc%2Fconfig%2Fi386%2Fhost-mingw32.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fhost-mingw32.cc?ref=f769d22ab685671095525d09ef29eeeed0ae3cee", "patch": "@@ -44,9 +44,6 @@ static size_t mingw32_gt_pch_alloc_granularity (void);\n \n static inline void w32_error(const char*, const char*, int, const char*);\n \n-/* FIXME: Is this big enough?  */\n-static const size_t pch_VA_max_size  = 128 * 1024 * 1024;\n-\n /* Granularity for reserving address space.  */\n static size_t va_granularity = 0x10000;\n \n@@ -88,9 +85,6 @@ static void *\n mingw32_gt_pch_get_address (size_t size, int)\n {\n   void* res;\n-  size = (size + va_granularity - 1) & ~(va_granularity - 1);\n-  if (size > pch_VA_max_size)\n-    return NULL;\n \n   /* FIXME: We let system determine base by setting first arg to NULL.\n      Allocating at top of available address space avoids unnecessary\n@@ -100,7 +94,7 @@ mingw32_gt_pch_get_address (size_t size, int)\n      If we allocate at bottom we need to reserve the address as early\n      as possible and at the same point in each invocation. */\n  \n-  res = VirtualAlloc (NULL, pch_VA_max_size,\n+  res = VirtualAlloc (NULL, size,\n \t\t      MEM_RESERVE | MEM_TOP_DOWN,\n \t\t      PAGE_NOACCESS);\n   if (!res)\n@@ -150,7 +144,7 @@ mingw32_gt_pch_use_address (void *&addr, size_t size, int fd,\n \n   /* Offset must be also be a multiple of allocation granularity for\n      this to work.  We can't change the offset. */ \n-  if ((offset & (va_granularity - 1)) != 0 || size > pch_VA_max_size)\n+  if ((offset & (va_granularity - 1)) != 0)\n     return -1;\n \n "}]}