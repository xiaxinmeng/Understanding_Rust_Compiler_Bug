{"sha": "ec99573229c53d2c59941aa0732465e0b2629a72", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWM5OTU3MzIyOWM1M2QyYzU5OTQxYWEwNzMyNDY1ZTBiMjYyOWE3Mg==", "commit": {"author": {"name": "Vladimir Makarov", "email": "vmakarov@redhat.com", "date": "2010-04-19T18:22:14Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2010-04-19T18:22:14Z"}, "message": "ira-color.c (allocno_reload_assign): Avoid accumulating reload registers in ALLOCNO_TOTAL_CONFLICT_HARD_REGS.\n\n        * ira-color.c (allocno_reload_assign): Avoid accumulating\n        reload registers in ALLOCNO_TOTAL_CONFLICT_HARD_REGS.\n\nFrom-SVN: r158524", "tree": {"sha": "090e4563f9c015a1efbffa5ab3e9956748433af7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/090e4563f9c015a1efbffa5ab3e9956748433af7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ec99573229c53d2c59941aa0732465e0b2629a72", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec99573229c53d2c59941aa0732465e0b2629a72", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec99573229c53d2c59941aa0732465e0b2629a72", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec99573229c53d2c59941aa0732465e0b2629a72/comments", "author": {"login": "vnmakarov", "id": 9855671, "node_id": "MDQ6VXNlcjk4NTU2NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/9855671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnmakarov", "html_url": "https://github.com/vnmakarov", "followers_url": "https://api.github.com/users/vnmakarov/followers", "following_url": "https://api.github.com/users/vnmakarov/following{/other_user}", "gists_url": "https://api.github.com/users/vnmakarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnmakarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnmakarov/subscriptions", "organizations_url": "https://api.github.com/users/vnmakarov/orgs", "repos_url": "https://api.github.com/users/vnmakarov/repos", "events_url": "https://api.github.com/users/vnmakarov/events{/privacy}", "received_events_url": "https://api.github.com/users/vnmakarov/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "acd638015562cb10a9b70ba5acd0109aeba2f40b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/acd638015562cb10a9b70ba5acd0109aeba2f40b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/acd638015562cb10a9b70ba5acd0109aeba2f40b"}], "stats": {"total": 9, "additions": 8, "deletions": 1}, "files": [{"sha": "18374f038a47b6070b70be9126dcfc58b6c67de0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec99573229c53d2c59941aa0732465e0b2629a72/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec99573229c53d2c59941aa0732465e0b2629a72/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ec99573229c53d2c59941aa0732465e0b2629a72", "patch": "@@ -1,3 +1,8 @@\n+2010-04-19  Vladimir Makarov  <vmakarov@redhat.com>\n+\n+\t* ira-color.c (allocno_reload_assign): Avoid accumulating\n+\treload registers in ALLOCNO_TOTAL_CONFLICT_HARD_REGS.\n+\n 2010-04-19  Martin Jambor  <mjambor@suse.cz>\n \n \t* gimple.h (create_tmp_reg): Declare."}, {"sha": "e01a6abdb47709e307f7e19d1dd53a2b472ed209", "filename": "gcc/ira-color.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec99573229c53d2c59941aa0732465e0b2629a72/gcc%2Fira-color.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec99573229c53d2c59941aa0732465e0b2629a72/gcc%2Fira-color.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fira-color.c?ref=ec99573229c53d2c59941aa0732465e0b2629a72", "patch": "@@ -2786,7 +2786,9 @@ allocno_reload_assign (ira_allocno_t a, HARD_REG_SET forbidden_regs)\n   int hard_regno;\n   enum reg_class cover_class;\n   int regno = ALLOCNO_REGNO (a);\n+  HARD_REG_SET saved;\n \n+  COPY_HARD_REG_SET (saved, ALLOCNO_TOTAL_CONFLICT_HARD_REGS (a));\n   IOR_HARD_REG_SET (ALLOCNO_TOTAL_CONFLICT_HARD_REGS (a), forbidden_regs);\n   if (! flag_caller_saves && ALLOCNO_CALLS_CROSSED_NUM (a) != 0)\n     IOR_HARD_REG_SET (ALLOCNO_TOTAL_CONFLICT_HARD_REGS (a), call_used_reg_set);\n@@ -2830,7 +2832,7 @@ allocno_reload_assign (ira_allocno_t a, HARD_REG_SET forbidden_regs)\n     }\n   else if (internal_flag_ira_verbose > 3 && ira_dump_file != NULL)\n     fprintf (ira_dump_file, \"\\n\");\n-\n+  COPY_HARD_REG_SET (ALLOCNO_TOTAL_CONFLICT_HARD_REGS (a), saved);\n   return reg_renumber[regno] >= 0;\n }\n "}]}