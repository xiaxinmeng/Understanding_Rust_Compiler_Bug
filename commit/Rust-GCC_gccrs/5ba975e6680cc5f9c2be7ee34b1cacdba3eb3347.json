{"sha": "5ba975e6680cc5f9c2be7ee34b1cacdba3eb3347", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWJhOTc1ZTY2ODBjYzVmOWMyYmU3ZWUzNGIxY2FjZGJhM2ViMzM0Nw==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "iant@golang.org", "date": "2020-11-29T02:51:05Z"}, "committer": {"name": "Ian Lance Taylor", "email": "iant@golang.org", "date": "2020-11-30T20:14:23Z"}, "message": "compiler: improve error messages for expected curly brace\n\nFor golang/go#17328\n\nReviewed-on: https://go-review.googlesource.com/c/gofrontend/+/273890", "tree": {"sha": "3c1a0b173e9fb504001b6f3480ea6726c48ec4dd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3c1a0b173e9fb504001b6f3480ea6726c48ec4dd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5ba975e6680cc5f9c2be7ee34b1cacdba3eb3347", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ba975e6680cc5f9c2be7ee34b1cacdba3eb3347", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ba975e6680cc5f9c2be7ee34b1cacdba3eb3347", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ba975e6680cc5f9c2be7ee34b1cacdba3eb3347/comments", "author": {"login": "ianlancetaylor", "id": 3194333, "node_id": "MDQ6VXNlcjMxOTQzMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/3194333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ianlancetaylor", "html_url": "https://github.com/ianlancetaylor", "followers_url": "https://api.github.com/users/ianlancetaylor/followers", "following_url": "https://api.github.com/users/ianlancetaylor/following{/other_user}", "gists_url": "https://api.github.com/users/ianlancetaylor/gists{/gist_id}", "starred_url": "https://api.github.com/users/ianlancetaylor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ianlancetaylor/subscriptions", "organizations_url": "https://api.github.com/users/ianlancetaylor/orgs", "repos_url": "https://api.github.com/users/ianlancetaylor/repos", "events_url": "https://api.github.com/users/ianlancetaylor/events{/privacy}", "received_events_url": "https://api.github.com/users/ianlancetaylor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ianlancetaylor", "id": 3194333, "node_id": "MDQ6VXNlcjMxOTQzMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/3194333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ianlancetaylor", "html_url": "https://github.com/ianlancetaylor", "followers_url": "https://api.github.com/users/ianlancetaylor/followers", "following_url": "https://api.github.com/users/ianlancetaylor/following{/other_user}", "gists_url": "https://api.github.com/users/ianlancetaylor/gists{/gist_id}", "starred_url": "https://api.github.com/users/ianlancetaylor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ianlancetaylor/subscriptions", "organizations_url": "https://api.github.com/users/ianlancetaylor/orgs", "repos_url": "https://api.github.com/users/ianlancetaylor/repos", "events_url": "https://api.github.com/users/ianlancetaylor/events{/privacy}", "received_events_url": "https://api.github.com/users/ianlancetaylor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c7f272e05e1cf8c7d7caefe5ee542845cf4cc7c8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7f272e05e1cf8c7d7caefe5ee542845cf4cc7c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c7f272e05e1cf8c7d7caefe5ee542845cf4cc7c8"}], "stats": {"total": 22, "additions": 10, "deletions": 12}, "files": [{"sha": "41246030f13950c59ab16db5cee2664eabeba58a", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ba975e6680cc5f9c2be7ee34b1cacdba3eb3347/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ba975e6680cc5f9c2be7ee34b1cacdba3eb3347/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=5ba975e6680cc5f9c2be7ee34b1cacdba3eb3347", "patch": "@@ -1,4 +1,4 @@\n-213abeedc85ed638a878f9457e422897fda3a111\n+45461eeba1db1a3b4194dc8ecc331c0e92f5ad4c\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "c9a5485049fc04619575531b0489b87204ba93be", "filename": "gcc/go/gofrontend/parse.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ba975e6680cc5f9c2be7ee34b1cacdba3eb3347/gcc%2Fgo%2Fgofrontend%2Fparse.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ba975e6680cc5f9c2be7ee34b1cacdba3eb3347/gcc%2Fgo%2Fgofrontend%2Fparse.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fparse.cc?ref=5ba975e6680cc5f9c2be7ee34b1cacdba3eb3347", "patch": "@@ -4422,7 +4422,7 @@ Parse::if_stat()\n     {\n       Location semi_loc = this->location();\n       if (this->advance_token()->is_op(OPERATOR_LCURLY))\n-\tgo_error_at(semi_loc, \"missing %<{%> after if clause\");\n+\tgo_error_at(semi_loc, \"unexpected semicolon or newline, expecting %<{%> after if clause\");\n       // Otherwise we will get an error when we call this->block\n       // below.\n     }\n@@ -5359,7 +5359,7 @@ Parse::for_stat(Label* label)\n     {\n       Location semi_loc = this->location();\n       if (this->advance_token()->is_op(OPERATOR_LCURLY))\n-\tgo_error_at(semi_loc, \"missing %<{%> after for clause\");\n+\tgo_error_at(semi_loc, \"unexpected semicolon or newline, expecting %<{%> after for clause\");\n       // Otherwise we will get an error when we call this->block\n       // below.\n     }\n@@ -5430,7 +5430,7 @@ Parse::for_clause(Expression** cond, Block** post)\n     *cond = NULL;\n   else if (this->peek_token()->is_op(OPERATOR_LCURLY))\n     {\n-      go_error_at(this->location(), \"missing %<{%> after for clause\");\n+      go_error_at(this->location(), \"unexpected semicolon or newline, expecting %<{%> after for clause\");\n       *cond = NULL;\n       *post = NULL;\n       return;"}, {"sha": "8eed05c1ca105417f5ebf26291b00f5bb6158bf0", "filename": "gcc/testsuite/go.test/test/syntax/semi1.go", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ba975e6680cc5f9c2be7ee34b1cacdba3eb3347/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fsyntax%2Fsemi1.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ba975e6680cc5f9c2be7ee34b1cacdba3eb3347/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fsyntax%2Fsemi1.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fsyntax%2Fsemi1.go?ref=5ba975e6680cc5f9c2be7ee34b1cacdba3eb3347", "patch": "@@ -1,13 +1,13 @@\n // errorcheck\n \n-// Copyright 2010 The Go Authors.  All rights reserved.\n+// Copyright 2010 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n package main\n \n func main() {\n-\tif x; y\t\t// ERROR \"missing .*{.* after if clause|undefined\"\n+\tif x; y\t\t// ERROR \"expected .*{.* after if clause|undefined\"\n \t{\n \t\tz\t// GCCGO_ERROR \"undefined\"\n "}, {"sha": "d064ce631c946587b441ad1471ed0f174f81a8f4", "filename": "gcc/testsuite/go.test/test/syntax/semi3.go", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ba975e6680cc5f9c2be7ee34b1cacdba3eb3347/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fsyntax%2Fsemi3.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ba975e6680cc5f9c2be7ee34b1cacdba3eb3347/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fsyntax%2Fsemi3.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fsyntax%2Fsemi3.go?ref=5ba975e6680cc5f9c2be7ee34b1cacdba3eb3347", "patch": "@@ -1,13 +1,13 @@\n // errorcheck\n \n-// Copyright 2010 The Go Authors.  All rights reserved.\n+// Copyright 2010 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n package main\n \n func main() {\n-\tfor x; y; z\t// ERROR \"missing .*{.* after for clause|undefined\"\n+\tfor x; y; z\t// ERROR \"expected .*{.* after for clause|undefined\"\n \t{\n \t\tz\t// GCCGO_ERROR \"undefined\"\n "}, {"sha": "08c354751b6da12f5c0004cb5c3ab34f3b565d70", "filename": "gcc/testsuite/go.test/test/syntax/semi4.go", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ba975e6680cc5f9c2be7ee34b1cacdba3eb3347/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fsyntax%2Fsemi4.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ba975e6680cc5f9c2be7ee34b1cacdba3eb3347/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fsyntax%2Fsemi4.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Ftest%2Fsyntax%2Fsemi4.go?ref=5ba975e6680cc5f9c2be7ee34b1cacdba3eb3347", "patch": "@@ -1,14 +1,12 @@\n // errorcheck\n \n-// Copyright 2010 The Go Authors.  All rights reserved.\n+// Copyright 2010 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n package main\n \n func main() {\n \tfor x\t\t// GCCGO_ERROR \"undefined\"\n-\t{\t\t// ERROR \"missing .*{.* after for clause\"\n+\t{\t\t// ERROR \"unexpected {, expecting for loop condition|expecting .*{.* after for clause\"\n \t\tz\t// GCCGO_ERROR \"undefined\"\n-\n-"}]}