{"sha": "2fcc44fae49bcc91a6d47bf92a5388aab4a909d3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmZjYzQ0ZmFlNDliY2M5MWE2ZDQ3YmY5MmE1Mzg4YWFiNGE5MDlkMw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-10-13T11:09:11Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-10-13T11:09:11Z"}, "message": "[multiple changes]\n\n2011-10-13  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_ch9.adb, sem_util.adb, sem_util.ads, exp_ch6.adb, sem_ch4.adb,\n\tsem_ch6.adb, exp_ch3.adb: Minor reformatting.\n\n2011-10-13  Arnaud Charlet  <charlet@adacore.com>\n\n\t* Makefile.rtl (GNATRTL_NONTASKING_OBJS): Add a-ngcoar.o.\n\n2011-10-13  Jerome Guitton  <guitton@adacore.com>\n\n\t* sysdep.c (__gnat_get_task_options): Re-enable VX_SPE_TASK on vThreads\n\n2011-10-13  Eric Botcazou  <ebotcazou@adacore.com>\n\n\t* a-convec.ads (Cursor): Minor reformatting.\n\t* a-convec.adb (Next): Fix minor inconsistencies.\n\t(Previous): Likewise.\n\nFrom-SVN: r179915", "tree": {"sha": "8bd5d0aa7162506ca6480b411e9b09010ded7668", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8bd5d0aa7162506ca6480b411e9b09010ded7668"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2fcc44fae49bcc91a6d47bf92a5388aab4a909d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2fcc44fae49bcc91a6d47bf92a5388aab4a909d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2fcc44fae49bcc91a6d47bf92a5388aab4a909d3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2fcc44fae49bcc91a6d47bf92a5388aab4a909d3/comments", "author": null, "committer": null, "parents": [{"sha": "9b62eb3214596c49540636a2e48981bfc19a8df3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b62eb3214596c49540636a2e48981bfc19a8df3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b62eb3214596c49540636a2e48981bfc19a8df3"}], "stats": {"total": 150, "additions": 82, "deletions": 68}, "files": [{"sha": "f0a7da89f9918c9dc4468cc24757e8a0efe2c268", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fcc44fae49bcc91a6d47bf92a5388aab4a909d3/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fcc44fae49bcc91a6d47bf92a5388aab4a909d3/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=2fcc44fae49bcc91a6d47bf92a5388aab4a909d3", "patch": "@@ -1,3 +1,22 @@\n+2011-10-13  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_ch9.adb, sem_util.adb, sem_util.ads, exp_ch6.adb, sem_ch4.adb,\n+\tsem_ch6.adb, exp_ch3.adb: Minor reformatting.\n+\n+2011-10-13  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* Makefile.rtl (GNATRTL_NONTASKING_OBJS): Add a-ngcoar.o.\n+\n+2011-10-13  Jerome Guitton  <guitton@adacore.com>\n+\n+\t* sysdep.c (__gnat_get_task_options): Re-enable VX_SPE_TASK on vThreads\n+\n+2011-10-13  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* a-convec.ads (Cursor): Minor reformatting.\n+\t* a-convec.adb (Next): Fix minor inconsistencies.\n+\t(Previous): Likewise.\n+\n 2011-10-13  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem_util.ads, sem_util.adb (Available_Full_View_Of_Component):"}, {"sha": "4e03c9e178ece528dd6e9da8069c40f59260b8f8", "filename": "gcc/ada/Makefile.rtl", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fcc44fae49bcc91a6d47bf92a5388aab4a909d3/gcc%2Fada%2FMakefile.rtl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fcc44fae49bcc91a6d47bf92a5388aab4a909d3/gcc%2Fada%2FMakefile.rtl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FMakefile.rtl?ref=2fcc44fae49bcc91a6d47bf92a5388aab4a909d3", "patch": "@@ -186,6 +186,7 @@ GNATRTL_NONTASKING_OBJS= \\\n   a-locale$(objext) \\\n   a-ncelfu$(objext) \\\n   a-ngcefu$(objext) \\\n+  a-ngcoar$(objext) \\\n   a-ngcoty$(objext) \\\n   a-ngelfu$(objext) \\\n   a-ngrear$(objext) \\"}, {"sha": "0fd8dee08dda0a4a9f991d7f4a69ffedf505a800", "filename": "gcc/ada/a-convec.adb", "status": "modified", "additions": 18, "deletions": 28, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fcc44fae49bcc91a6d47bf92a5388aab4a909d3/gcc%2Fada%2Fa-convec.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fcc44fae49bcc91a6d47bf92a5388aab4a909d3/gcc%2Fada%2Fa-convec.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-convec.adb?ref=2fcc44fae49bcc91a6d47bf92a5388aab4a909d3", "patch": "@@ -2204,24 +2204,18 @@ package body Ada.Containers.Vectors is\n \n    function Next (Object : Iterator; Position : Cursor) return Cursor is\n    begin\n-      if Position.Index = Object.Container.Last then\n-         return  No_Element;\n-      else\n+      if Position.Index < Object.Container.Last then\n          return (Object.Container, Position.Index + 1);\n+      else\n+         return No_Element;\n       end if;\n    end Next;\n \n-   ----------\n-   -- Next --\n-   ----------\n-\n    procedure Next (Position : in out Cursor) is\n    begin\n       if Position.Container = null then\n          return;\n-      end if;\n-\n-      if Position.Index < Position.Container.Last then\n+      elsif Position.Index < Position.Container.Last then\n          Position.Index := Position.Index + 1;\n       else\n          Position := No_Element;\n@@ -2253,30 +2247,15 @@ package body Ada.Containers.Vectors is\n    -- Previous --\n    --------------\n \n-   procedure Previous (Position : in out Cursor) is\n-   begin\n-      if Position.Container = null then\n-         return;\n-      end if;\n-\n-      if Position.Index > Index_Type'First then\n-         Position.Index := Position.Index - 1;\n-      else\n-         Position := No_Element;\n-      end if;\n-   end Previous;\n-\n    function Previous (Position : Cursor) return Cursor is\n    begin\n       if Position.Container = null then\n          return No_Element;\n-      end if;\n-\n-      if Position.Index > Index_Type'First then\n+      elsif Position.Index > Index_Type'First then\n          return (Position.Container, Position.Index - 1);\n+      else\n+         return No_Element;\n       end if;\n-\n-      return No_Element;\n    end Previous;\n \n    function Previous (Object : Iterator; Position : Cursor) return Cursor is\n@@ -2288,6 +2267,17 @@ package body Ada.Containers.Vectors is\n       end if;\n    end Previous;\n \n+   procedure Previous (Position : in out Cursor) is\n+   begin\n+      if Position.Container = null then\n+         return;\n+      elsif Position.Index > Index_Type'First then\n+         Position.Index := Position.Index - 1;\n+      else\n+         Position := No_Element;\n+      end if;\n+   end Previous;\n+\n    -------------------\n    -- Query_Element --\n    -------------------"}, {"sha": "c90cf01bde988a63df26de4e4a6eb37bcdcfbd77", "filename": "gcc/ada/a-convec.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fcc44fae49bcc91a6d47bf92a5388aab4a909d3/gcc%2Fada%2Fa-convec.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fcc44fae49bcc91a6d47bf92a5388aab4a909d3/gcc%2Fada%2Fa-convec.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-convec.ads?ref=2fcc44fae49bcc91a6d47bf92a5388aab4a909d3", "patch": "@@ -409,8 +409,8 @@ private\n    for Vector_Access'Storage_Size use 0;\n \n    type Cursor is record\n-      Container   : Vector_Access;\n-      Index       : Index_Type := Index_Type'First;\n+      Container : Vector_Access;\n+      Index     : Index_Type := Index_Type'First;\n    end record;\n \n    procedure Write"}, {"sha": "5f413e31bd338f1feb24645ba7b38b5ac3ceb5a1", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 14, "deletions": 13, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fcc44fae49bcc91a6d47bf92a5388aab4a909d3/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fcc44fae49bcc91a6d47bf92a5388aab4a909d3/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=2fcc44fae49bcc91a6d47bf92a5388aab4a909d3", "patch": "@@ -4156,20 +4156,20 @@ package body Exp_Ch3 is\n          elsif Is_Limited_Class_Wide_Type (Desig_Typ)\n            and then Tasking_Allowed\n \n-            --  Do not create a class-wide master for types whose convention is\n-            --  Java since these types cannot embed Ada tasks anyway. Note that\n-            --  the following test cannot catch the following case:\n+           --  Do not create a class-wide master for types whose convention is\n+           --  Java since these types cannot embed Ada tasks anyway. Note that\n+           --  the following test cannot catch the following case:\n \n-            --      package java.lang.Object is\n-            --         type Typ is tagged limited private;\n-            --         type Ref is access all Typ'Class;\n-            --      private\n-            --         type Typ is tagged limited ...;\n-            --         pragma Convention (Typ, Java)\n-            --      end;\n+           --      package java.lang.Object is\n+           --         type Typ is tagged limited private;\n+           --         type Ref is access all Typ'Class;\n+           --      private\n+           --         type Typ is tagged limited ...;\n+           --         pragma Convention (Typ, Java)\n+           --      end;\n \n-            --  Because the convention appears after we have done the\n-            --  processing for type Ref.\n+           --  Because the convention appears after we have done the\n+           --  processing for type Ref.\n \n            and then Convention (Desig_Typ) /= Convention_Java\n            and then Convention (Desig_Typ) /= Convention_CIL\n@@ -5178,12 +5178,13 @@ package body Exp_Ch3 is\n    ---------------------------------\n \n    procedure Expand_Previous_Access_Type (Def_Id : Entity_Id) is\n-      Ptr_Typ : Entity_Id := First_Entity (Current_Scope);\n+      Ptr_Typ : Entity_Id;\n \n    begin\n       --  Find all access types in the current scope whose designated type is\n       --  Def_Id and build master renamings for them.\n \n+      Ptr_Typ := First_Entity (Current_Scope);\n       while Present (Ptr_Typ) loop\n          if Is_Access_Type (Ptr_Typ)\n            and then Designated_Type (Ptr_Typ) = Def_Id"}, {"sha": "581b52464e1ec9bffd3c5c70fa6be001d777b495", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fcc44fae49bcc91a6d47bf92a5388aab4a909d3/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fcc44fae49bcc91a6d47bf92a5388aab4a909d3/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=2fcc44fae49bcc91a6d47bf92a5388aab4a909d3", "patch": "@@ -479,7 +479,7 @@ package body Exp_Ch6 is\n    is\n       Loc         : constant Source_Ptr := Sloc (Function_Call);\n       Result_Subt : constant Entity_Id := Available_View (Etype (Function_Id));\n-      Actual      : Node_Id := Master_Actual;\n+      Actual      : Node_Id            := Master_Actual;\n \n    begin\n       --  No such extra parameters are needed if there are no tasks\n@@ -504,11 +504,11 @@ package body Exp_Ch6 is\n \n       declare\n          Master_Formal : Node_Id;\n+\n       begin\n          --  Locate implicit master parameter in the called function\n \n          Master_Formal := Build_In_Place_Formal (Function_Id, BIP_Master);\n-\n          Analyze_And_Resolve (Actual, Etype (Master_Formal));\n \n          --  Build the parameter association for the new actual and add it to"}, {"sha": "ed949cbe1bcc5bf24ccdbbfa06b73b20dec228ac", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fcc44fae49bcc91a6d47bf92a5388aab4a909d3/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fcc44fae49bcc91a6d47bf92a5388aab4a909d3/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=2fcc44fae49bcc91a6d47bf92a5388aab4a909d3", "patch": "@@ -5554,7 +5554,7 @@ package body Sem_Ch4 is\n                 and then not Is_Limited_Composite (T1))\n \n                or else\n-                (Is_Array_Type (T1)\n+                 (Is_Array_Type (T1)\n                    and then not Is_Limited_Type (Component_Type (T1))\n                    and then Available_Full_View_Of_Component (T1)))\n          then"}, {"sha": "8675a2bfc9ca3034d983a97d5f278f42d7e19ada", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fcc44fae49bcc91a6d47bf92a5388aab4a909d3/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fcc44fae49bcc91a6d47bf92a5388aab4a909d3/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=2fcc44fae49bcc91a6d47bf92a5388aab4a909d3", "patch": "@@ -6462,10 +6462,10 @@ package body Sem_Ch6 is\n          declare\n             Result_Subt : constant Entity_Id := Etype (E);\n             Full_Subt   : constant Entity_Id := Available_View (Result_Subt);\n+            Formal_Typ  : Entity_Id;\n \n-            Discard     : Entity_Id;\n+            Discard : Entity_Id;\n             pragma Warnings (Off, Discard);\n-            Formal_Typ  : Entity_Id;\n \n          begin\n             --  In the case of functions with unconstrained result subtypes,"}, {"sha": "4b284cd95997139484dcd2d865851a3e910fd1b6", "filename": "gcc/ada/sem_ch9.adb", "status": "modified", "additions": 12, "deletions": 11, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fcc44fae49bcc91a6d47bf92a5388aab4a909d3/gcc%2Fada%2Fsem_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fcc44fae49bcc91a6d47bf92a5388aab4a909d3/gcc%2Fada%2Fsem_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch9.adb?ref=2fcc44fae49bcc91a6d47bf92a5388aab4a909d3", "patch": "@@ -1163,6 +1163,7 @@ package body Sem_Ch9 is\n    begin\n       if No_Run_Time_Mode then\n          Error_Msg_CRT (\"protected type\", N);\n+\n          if Has_Aspects (N) then\n             Analyze_Aspect_Specifications (N, Def_Id);\n          end if;\n@@ -1209,6 +1210,13 @@ package body Sem_Ch9 is\n \n       Set_Is_Constrained (T, not Has_Discriminants (T));\n \n+      --  If aspects are present, analyze them now. They can make references\n+      --  to the discriminants of the type, but not to any components.\n+\n+      if Has_Aspects (N) then\n+         Analyze_Aspect_Specifications (N, Def_Id);\n+      end if;\n+\n       Analyze (Protected_Definition (N));\n \n       --  In the case where the protected type is declared at a nested level\n@@ -1260,13 +1268,6 @@ package body Sem_Ch9 is\n          Next_Entity (E);\n       end loop;\n \n-      --  If aspects are present, analyze them now. They can make references\n-      --  to the discriminants of the type.\n-\n-      if Has_Aspects (N) then\n-         Analyze_Aspect_Specifications (N, Def_Id);\n-      end if;\n-\n       End_Scope;\n \n       --  Case of a completion of a private declaration\n@@ -2052,6 +2053,10 @@ package body Sem_Ch9 is\n \n       Set_Is_Constrained (T, not Has_Discriminants (T));\n \n+      if Has_Aspects (N) then\n+         Analyze_Aspect_Specifications (N, Def_Id);\n+      end if;\n+\n       if Present (Task_Definition (N)) then\n          Analyze_Task_Definition (Task_Definition (N));\n       end if;\n@@ -2106,10 +2111,6 @@ package body Sem_Ch9 is\n             Process_Full_View (N, T, Def_Id);\n          end if;\n       end if;\n-\n-      if Has_Aspects (N) then\n-         Analyze_Aspect_Specifications (N, Def_Id);\n-      end if;\n    end Analyze_Task_Type_Declaration;\n \n    -----------------------------------"}, {"sha": "366be68519c665fe8f7fed4cbbc53b7c561f37b9", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fcc44fae49bcc91a6d47bf92a5388aab4a909d3/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fcc44fae49bcc91a6d47bf92a5388aab4a909d3/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=2fcc44fae49bcc91a6d47bf92a5388aab4a909d3", "patch": "@@ -333,10 +333,13 @@ package body Sem_Util is\n       end if;\n    end Apply_Compile_Time_Constraint_Error;\n \n+   --------------------------------------\n+   -- Available_Full_View_Of_Component --\n+   --------------------------------------\n+\n    function Available_Full_View_Of_Component (T : Entity_Id) return Boolean is\n       ST  : constant Entity_Id := Scope (T);\n       SCT : constant Entity_Id := Scope (Component_Type (T));\n-\n    begin\n       return In_Open_Scopes (ST)\n         and then In_Open_Scopes (SCT)\n@@ -7360,9 +7363,9 @@ package body Sem_Util is\n    ----------------------------\n \n    function Is_Inherited_Operation (E : Entity_Id) return Boolean is\n+      pragma Assert (Is_Overloadable (E));\n       Kind : constant Node_Kind := Nkind (Parent (E));\n    begin\n-      pragma Assert (Is_Overloadable (E));\n       return Kind = N_Full_Type_Declaration\n         or else Kind = N_Private_Extension_Declaration\n         or else Kind = N_Subtype_Declaration\n@@ -7375,7 +7378,8 @@ package body Sem_Util is\n    -------------------------------------\n \n    function Is_Inherited_Operation_For_Type\n-     (E : Entity_Id; Typ : Entity_Id) return Boolean\n+     (E   : Entity_Id;\n+      Typ : Entity_Id) return Boolean\n    is\n    begin\n       return Is_Inherited_Operation (E)"}, {"sha": "eb3528a1a797fb2fcf7bd4935c9ce1892e2f2faa", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fcc44fae49bcc91a6d47bf92a5388aab4a909d3/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fcc44fae49bcc91a6d47bf92a5388aab4a909d3/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=2fcc44fae49bcc91a6d47bf92a5388aab4a909d3", "patch": "@@ -845,8 +845,8 @@ package Sem_Util is\n    --  by the derived type declaration for type Typ.\n \n    function Is_Iterator (Typ : Entity_Id) return Boolean;\n-   --  AI05-0139-2 : check whether Typ is one of the predefined interfaces\n-   --  in Ada.Iterator_Interfaces, or it is derived from one.\n+   --  AI05-0139-2: Check whether Typ is one of the predefined interfaces in\n+   --  Ada.Iterator_Interfaces, or it is derived from one.\n \n    function Is_LHS (N : Node_Id) return Boolean;\n    --  Returns True iff N is used as Name in an assignment statement\n@@ -856,8 +856,7 @@ package Sem_Util is\n    --  i.e. a library unit or an entity declared in a library package.\n \n    function Is_Limited_Class_Wide_Type (Typ : Entity_Id) return Boolean;\n-   --  Given an arbitrary type, determine whether it is a limited class-wide\n-   --  type.\n+   --  Determine whether a given arbitrary type is a limited class-wide type\n \n    function Is_Local_Variable_Reference (Expr : Node_Id) return Boolean;\n    --  Determines whether Expr is a reference to a variable or IN OUT mode"}, {"sha": "4d383fd0608de53f063efc89bf5d9443e198ba43", "filename": "gcc/ada/sysdep.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fcc44fae49bcc91a6d47bf92a5388aab4a909d3/gcc%2Fada%2Fsysdep.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fcc44fae49bcc91a6d47bf92a5388aab4a909d3/gcc%2Fada%2Fsysdep.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsysdep.c?ref=2fcc44fae49bcc91a6d47bf92a5388aab4a909d3", "patch": "@@ -911,8 +911,7 @@ __gnat_get_task_options (void)\n \n   /* Force VX_FP_TASK because it is almost always required */\n   options |= VX_FP_TASK;\n-#if defined (__SPE__) && (! defined (__VXWORKSMILS__)) \\\n-    && (! defined (VTHREADS))\n+#if defined (__SPE__) && (! defined (__VXWORKSMILS__))\n   options |= VX_SPE_TASK;\n #endif\n "}]}