{"sha": "3bff15c1c9fb3eb0bb042717e072476ec2d6d88c", "node_id": "C_kwDOANBUbNoAKDNiZmYxNWMxYzlmYjNlYjBiYjA0MjcxN2UwNzI0NzZlYzJkNmQ4OGM", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2022-11-07T07:40:12Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2022-11-07T11:41:41Z"}, "message": "[range-op] Restrict division by power of 2 optimization to positive numbers.\n\nThe problem here is that we are transforming a division by a power of\n2 into a right shift, and using this to shift the maybe nonzero bits.\nThis gives the wrong result when the number being divided is negative.\n\nIn the testcase we are dividing this by 8:\n\n\t[irange] int [-256, -255] NONZERO 0xffffff01\n\nand coming up with:\n\n\t[irange] int [-32, -31] NONZERO 0xffffffe0\n\nThe maybe nonzero bits are wrong as -31 has the LSB set (0xffffffe1)\nwhereas the bitmask says the lower 4 bits are off.\n\n\tPR tree-optimization/107541\n\ngcc/ChangeLog:\n\n\t* range-op.cc (operator_div::fold_range): Restrict power of 2\n\toptimization to positive numbers.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.dg/tree-ssa/pr107541.c: New test.", "tree": {"sha": "1add755d5da016e9f67cb16be214c9cdad47cc07", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1add755d5da016e9f67cb16be214c9cdad47cc07"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3bff15c1c9fb3eb0bb042717e072476ec2d6d88c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3bff15c1c9fb3eb0bb042717e072476ec2d6d88c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3bff15c1c9fb3eb0bb042717e072476ec2d6d88c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3bff15c1c9fb3eb0bb042717e072476ec2d6d88c/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "071d00e0faabbd45449d2e83f207fca0f8e8ef68", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/071d00e0faabbd45449d2e83f207fca0f8e8ef68", "html_url": "https://github.com/Rust-GCC/gccrs/commit/071d00e0faabbd45449d2e83f207fca0f8e8ef68"}], "stats": {"total": 20, "additions": 19, "deletions": 1}, "files": [{"sha": "2b5db0cac8574f853c9c10181cce3204af20aeb2", "filename": "gcc/range-op.cc", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bff15c1c9fb3eb0bb042717e072476ec2d6d88c/gcc%2Frange-op.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bff15c1c9fb3eb0bb042717e072476ec2d6d88c/gcc%2Frange-op.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frange-op.cc?ref=3bff15c1c9fb3eb0bb042717e072476ec2d6d88c", "patch": "@@ -1953,7 +1953,9 @@ operator_div::fold_range (irange &r, tree type,\n     return true;\n \n   tree t;\n-  if (rh.singleton_p (&t))\n+  if (code == TRUNC_DIV_EXPR\n+      && rh.singleton_p (&t)\n+      && !wi::neg_p (lh.lower_bound ()))\n     {\n       wide_int wi = wi::to_wide (t);\n       int shift = wi::exact_log2 (wi);"}, {"sha": "475142186b50028ac6e2cd7d91ac0e6a6bf72810", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr107541.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bff15c1c9fb3eb0bb042717e072476ec2d6d88c/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr107541.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bff15c1c9fb3eb0bb042717e072476ec2d6d88c/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr107541.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr107541.c?ref=3bff15c1c9fb3eb0bb042717e072476ec2d6d88c", "patch": "@@ -0,0 +1,16 @@\n+// { dg-do run }\n+// { dg-options \"-O1\" }\n+\n+unsigned char a = 1;\n+char b, e;\n+long c;\n+short d;\n+int main() {\n+  a = ~(1 && a);\n+  c = ~((~a / 8 | -2) & 11007578330939886389LLU);\n+  e = -c;\n+  d = ~c / e;\n+  if (d < 2000)\n+    __builtin_abort();\n+  return 0;\n+}"}]}