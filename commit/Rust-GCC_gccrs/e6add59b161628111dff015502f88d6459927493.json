{"sha": "e6add59b161628111dff015502f88d6459927493", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTZhZGQ1OWIxNjE2MjgxMTFkZmYwMTU1MDJmODhkNjQ1OTkyNzQ5Mw==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard@codesourcery.com", "date": "2005-12-15T16:42:10Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2005-12-15T16:42:10Z"}, "message": "predicates.md (call_memory_operand): New.\n\n\t* config/arm/predicates.md (call_memory_operand): New.\n\t* config/arm/arm.md (*call_mem, *call_value_mem): Use it.\n\ntestsuite/\n\t* gcc.dg/20051215-1.c: New file.\n\nFrom-SVN: r108583", "tree": {"sha": "4f62a760e67319ae6549f22ca192ab7fbe5a8e7a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4f62a760e67319ae6549f22ca192ab7fbe5a8e7a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e6add59b161628111dff015502f88d6459927493", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6add59b161628111dff015502f88d6459927493", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e6add59b161628111dff015502f88d6459927493", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6add59b161628111dff015502f88d6459927493/comments", "author": null, "committer": null, "parents": [{"sha": "a8acd1c48099154ef824961457aa1aecfc10bbee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8acd1c48099154ef824961457aa1aecfc10bbee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a8acd1c48099154ef824961457aa1aecfc10bbee"}], "stats": {"total": 57, "additions": 55, "deletions": 2}, "files": [{"sha": "19cd3f07089ac742724bf629ef3f306e2bc35aac", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6add59b161628111dff015502f88d6459927493/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6add59b161628111dff015502f88d6459927493/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e6add59b161628111dff015502f88d6459927493", "patch": "@@ -1,3 +1,8 @@\n+2005-12-15  Richard Sandiford  <richard@codesourcery.com>\n+\n+\t* config/arm/predicates.md (call_memory_operand): New.\n+\t* config/arm/arm.md (*call_mem, *call_value_mem): Use it.\n+\n 2005-12-15  Andrew Haley  <aph@redhat.com>\n \n \t* unwind-dw2-fde-glibc.c (_Unwind_IteratePhdrCallback): Guard"}, {"sha": "a161d4d5a43f2f198a5426a52f9bf24de5391132", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6add59b161628111dff015502f88d6459927493/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6add59b161628111dff015502f88d6459927493/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=e6add59b161628111dff015502f88d6459927493", "patch": "@@ -7561,7 +7561,7 @@\n )\n \n (define_insn \"*call_mem\"\n-  [(call (mem:SI (match_operand:SI 0 \"memory_operand\" \"m\"))\n+  [(call (mem:SI (match_operand:SI 0 \"call_memory_operand\" \"m\"))\n \t (match_operand 1 \"\" \"\"))\n    (use (match_operand 2 \"\" \"\"))\n    (clobber (reg:SI LR_REGNUM))]\n@@ -7655,7 +7655,7 @@\n \n (define_insn \"*call_value_mem\"\n   [(set (match_operand 0 \"\" \"\")\n-\t(call (mem:SI (match_operand:SI 1 \"memory_operand\" \"m\"))\n+\t(call (mem:SI (match_operand:SI 1 \"call_memory_operand\" \"m\"))\n \t      (match_operand 2 \"\" \"\")))\n    (use (match_operand 3 \"\" \"\"))\n    (clobber (reg:SI LR_REGNUM))]"}, {"sha": "4a08204d155b6227600e0ce0f3a109e3f721fa44", "filename": "gcc/config/arm/predicates.md", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6add59b161628111dff015502f88d6459927493/gcc%2Fconfig%2Farm%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6add59b161628111dff015502f88d6459927493/gcc%2Fconfig%2Farm%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fpredicates.md?ref=e6add59b161628111dff015502f88d6459927493", "patch": "@@ -110,6 +110,14 @@\n         \"offsettable_address_p (reload_completed | reload_in_progress,\n \t\t\t\tmode, XEXP (op, 0))\")))\n \n+;; True if the operand is a memory operand that does not have an\n+;; automodified base register (and thus will not generate output reloads).\n+(define_predicate \"call_memory_operand\"\n+  (and (match_code \"mem\")\n+       (and (match_test \"GET_RTX_CLASS (GET_CODE (XEXP (op, 0)))\n+\t\t\t != RTX_AUTOINC\")\n+\t    (match_operand 0 \"memory_operand\"))))\n+\n (define_predicate \"arm_reload_memory_operand\"\n   (and (match_code \"mem,reg,subreg\")\n        (match_test \"(!CONSTANT_P (op)"}, {"sha": "efeb2a51c4f61f39a2adabd93ae359686f68e14e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6add59b161628111dff015502f88d6459927493/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6add59b161628111dff015502f88d6459927493/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e6add59b161628111dff015502f88d6459927493", "patch": "@@ -1,3 +1,7 @@\n+2005-12-15  Richard Sandiford  <richard@codesourcery.com>\n+\n+\t* gcc.dg/20051215-1.c: New file.\n+\n 2005-12-14  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* g++.dg/rtti/repo1.C: Call cleanup-repo-files."}, {"sha": "0bb06d9be3ebd8d814954174e11c5d7456edfdb9", "filename": "gcc/testsuite/gcc.dg/20051215-1.c", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6add59b161628111dff015502f88d6459927493/gcc%2Ftestsuite%2Fgcc.dg%2F20051215-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6add59b161628111dff015502f88d6459927493/gcc%2Ftestsuite%2Fgcc.dg%2F20051215-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20051215-1.c?ref=e6add59b161628111dff015502f88d6459927493", "patch": "@@ -0,0 +1,36 @@\n+/* ARM's load-and-call patterns used to allow automodified addresses.\n+   This was wrong, because if the modified register were spilled,\n+   the call would need an output reload.  */\n+/* { dg-do run { target arm*-*-* } } */\n+/* { dg-options \"-O2 -fno-omit-frame-pointer\" } */\n+extern void abort (void);\n+typedef void (*callback) (void);\n+\n+static void\n+foo (callback *first, callback *p)\n+{\n+  while (p > first)\n+    {\n+      (*--p) ();\n+#ifndef __thumb__\n+      asm (\"\" : \"=r\" (p) : \"0\" (p)\n+\t   : \"r4\", \"r5\", \"r6\", \"r7\", \"r8\", \"r9\", \"r10\");\n+#endif\n+    }   \n+}\n+\n+static void\n+dummy (void)\n+{\n+  static int count;\n+  if (count++ == 1)\n+    abort ();\n+}\n+\n+int\n+main (void)\n+{\n+  callback list[1] = { dummy };\n+  foo (&list[0], &list[1]);\n+  return 0;\n+}"}]}