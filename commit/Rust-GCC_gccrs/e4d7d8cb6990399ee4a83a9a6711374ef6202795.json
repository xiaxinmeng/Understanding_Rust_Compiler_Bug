{"sha": "e4d7d8cb6990399ee4a83a9a6711374ef6202795", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTRkN2Q4Y2I2OTkwMzk5ZWU0YTgzYTlhNjcxMTM3NGVmNjIwMjc5NQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2013-01-07T18:00:18Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2013-01-07T18:00:18Z"}, "message": "re PR c++/55753 ([C++11][4.7/4.8 Regression] ICE constexpr ctor, tsubst_copy_and_build, at cp/pt.c:14336)\n\n\tPR c++/55753\n\t* tree.c (build_aggr_init_expr): Do nothing in a template.\n\t* pt.c (tsubst_copy_and_build) [CALL_EXPR]: Strip an ADDR_EXPR off\n\ta FUNCTION_DECL before tsubsting.\n\nFrom-SVN: r194986", "tree": {"sha": "4eab6b88d3becdcd887ac239524845fd3741e197", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4eab6b88d3becdcd887ac239524845fd3741e197"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e4d7d8cb6990399ee4a83a9a6711374ef6202795", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4d7d8cb6990399ee4a83a9a6711374ef6202795", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e4d7d8cb6990399ee4a83a9a6711374ef6202795", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4d7d8cb6990399ee4a83a9a6711374ef6202795/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "656e6f3761bb4bfe3efe8279710f5f4b980604fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/656e6f3761bb4bfe3efe8279710f5f4b980604fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/656e6f3761bb4bfe3efe8279710f5f4b980604fa"}], "stats": {"total": 31, "additions": 31, "deletions": 0}, "files": [{"sha": "74ed223339cba1a933c10884dbe86ff52c050a16", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4d7d8cb6990399ee4a83a9a6711374ef6202795/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4d7d8cb6990399ee4a83a9a6711374ef6202795/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=e4d7d8cb6990399ee4a83a9a6711374ef6202795", "patch": "@@ -1,3 +1,10 @@\n+2013-01-07  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/55753\n+\t* tree.c (build_aggr_init_expr): Do nothing in a template.\n+\t* pt.c (tsubst_copy_and_build) [CALL_EXPR]: Strip an ADDR_EXPR off\n+\ta FUNCTION_DECL before tsubsting.\n+\n 2013-01-04  Dodji Seketeli  <dodji@redhat.com>\n \n \tPR c++/52343"}, {"sha": "c55dabef7e2ed149dd5a1d85e2b2c06abdb1b883", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4d7d8cb6990399ee4a83a9a6711374ef6202795/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4d7d8cb6990399ee4a83a9a6711374ef6202795/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=e4d7d8cb6990399ee4a83a9a6711374ef6202795", "patch": "@@ -13743,6 +13743,11 @@ tsubst_copy_and_build (tree t,\n \t    else\n \t      qualified_p = false;\n \n+\t    if (TREE_CODE (function) == ADDR_EXPR\n+\t\t&& TREE_CODE (TREE_OPERAND (function, 0)) == FUNCTION_DECL)\n+\t      /* Avoid error about taking the address of a constructor.  */\n+\t      function = TREE_OPERAND (function, 0);\n+\n \t    function = tsubst_copy_and_build (function, args, complain,\n \t\t\t\t\t      in_decl,\n \t\t\t\t\t      !qualified_p,"}, {"sha": "08242141cb108d7fac11b74c204f908847192f5a", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4d7d8cb6990399ee4a83a9a6711374ef6202795/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4d7d8cb6990399ee4a83a9a6711374ef6202795/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=e4d7d8cb6990399ee4a83a9a6711374ef6202795", "patch": "@@ -412,6 +412,10 @@ build_aggr_init_expr (tree type, tree init)\n   tree rval;\n   int is_ctor;\n \n+  /* Don't build AGGR_INIT_EXPR in a template.  */\n+  if (processing_template_decl)\n+    return init;\n+\n   if (TREE_CODE (init) == CALL_EXPR)\n     fn = CALL_EXPR_FN (init);\n   else if (TREE_CODE (init) == AGGR_INIT_EXPR)"}, {"sha": "ed01a3112fcc28a916232de60a51ecc14e3b1afb", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-ctor13.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4d7d8cb6990399ee4a83a9a6711374ef6202795/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ctor13.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4d7d8cb6990399ee4a83a9a6711374ef6202795/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ctor13.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ctor13.C?ref=e4d7d8cb6990399ee4a83a9a6711374ef6202795", "patch": "@@ -0,0 +1,15 @@\n+// PR c++/55753\n+// { dg-options -std=c++11 }\n+\n+struct A\n+{\n+  double r,i;\n+  constexpr A(double r = 0.0, double i = 0.0): r(r), i(i) {}\n+};\n+\n+template <typename Tp>\n+struct B {\n+  B() {\n+    A((true ? 1.0 : A()));\n+  }\n+};"}]}