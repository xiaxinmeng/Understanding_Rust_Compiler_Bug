{"sha": "1951f1016cd8eec62db59a76840bde6a61d53ad4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTk1MWYxMDE2Y2Q4ZWVjNjJkYjU5YTc2ODQwYmRlNmE2MWQ1M2FkNA==", "commit": {"author": {"name": "Marc Glisse", "email": "marc.glisse@inria.fr", "date": "2013-06-12T17:56:30Z"}, "committer": {"name": "Marc Glisse", "email": "glisse@gcc.gnu.org", "date": "2013-06-12T17:56:30Z"}, "message": "re PR tree-optimization/57361 (Remove self memory assignment)\n\n2013-06-12  Marc Glisse  <marc.glisse@inria.fr>\n\n\tPR tree-optimization/57361\ngcc/\n\t* tree-ssa-dse.c (dse_possible_dead_store_p): Handle self-assignment.\n\ngcc/testsuite/\n\t* gcc.dg/tree-ssa/pr57361.c: New file.\n\nFrom-SVN: r200034", "tree": {"sha": "324bf4aca8069a6f23641b2b376e381099a0ca1e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/324bf4aca8069a6f23641b2b376e381099a0ca1e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1951f1016cd8eec62db59a76840bde6a61d53ad4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1951f1016cd8eec62db59a76840bde6a61d53ad4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1951f1016cd8eec62db59a76840bde6a61d53ad4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1951f1016cd8eec62db59a76840bde6a61d53ad4/comments", "author": {"login": "mglisse", "id": 10097863, "node_id": "MDQ6VXNlcjEwMDk3ODYz", "avatar_url": "https://avatars.githubusercontent.com/u/10097863?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mglisse", "html_url": "https://github.com/mglisse", "followers_url": "https://api.github.com/users/mglisse/followers", "following_url": "https://api.github.com/users/mglisse/following{/other_user}", "gists_url": "https://api.github.com/users/mglisse/gists{/gist_id}", "starred_url": "https://api.github.com/users/mglisse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mglisse/subscriptions", "organizations_url": "https://api.github.com/users/mglisse/orgs", "repos_url": "https://api.github.com/users/mglisse/repos", "events_url": "https://api.github.com/users/mglisse/events{/privacy}", "received_events_url": "https://api.github.com/users/mglisse/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8b033a8a927afab88532af22bdb7cd87d57e1f6d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b033a8a927afab88532af22bdb7cd87d57e1f6d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b033a8a927afab88532af22bdb7cd87d57e1f6d"}], "stats": {"total": 26, "additions": 26, "deletions": 0}, "files": [{"sha": "ec3daf24ed6bb2023b482d2f1658c295cfbfeec9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1951f1016cd8eec62db59a76840bde6a61d53ad4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1951f1016cd8eec62db59a76840bde6a61d53ad4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1951f1016cd8eec62db59a76840bde6a61d53ad4", "patch": "@@ -1,3 +1,8 @@\n+2013-06-12  Marc Glisse  <marc.glisse@inria.fr>\n+\n+\tPR tree-optimization/57361\n+\t* tree-ssa-dse.c (dse_possible_dead_store_p): Handle self-assignment.\n+\n 2013-06-12  Sofiane Naci  <sofiane.naci@arm.com>\n \n \t* config/aarch64/aarch64-simd.md (aarch64_combine<mode>): convert to split."}, {"sha": "dc29124a7ee26c4f01c7bf82cde66c416de35ec3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1951f1016cd8eec62db59a76840bde6a61d53ad4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1951f1016cd8eec62db59a76840bde6a61d53ad4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1951f1016cd8eec62db59a76840bde6a61d53ad4", "patch": "@@ -1,3 +1,8 @@\n+2013-06-12  Marc Glisse  <marc.glisse@inria.fr>\n+\n+\tPR tree-optimization/57361\n+\t* gcc.dg/tree-ssa/pr57361.c: New file.\n+\n 2013-06-12  Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>\n \n \t* gcc.target/arm/unaligned-memcpy-4.c (src, dst): Initialize"}, {"sha": "81f27b3cd1f219feebb2dd7d0c50ae84f8c6173a", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr57361.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1951f1016cd8eec62db59a76840bde6a61d53ad4/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr57361.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1951f1016cd8eec62db59a76840bde6a61d53ad4/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr57361.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr57361.c?ref=1951f1016cd8eec62db59a76840bde6a61d53ad4", "patch": "@@ -0,0 +1,9 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O -fdump-tree-dse1-details\" } */\n+\n+struct A { int x; double y; };\n+void f (struct A *a) {\n+  *a = *a;\n+}\n+\n+/* { dg-final { scan-tree-dump \"Deleted dead store\" \"dse1\"} } */"}, {"sha": "39f47abd83be37df4114e767d050b2491a1899ad", "filename": "gcc/tree-ssa-dse.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1951f1016cd8eec62db59a76840bde6a61d53ad4/gcc%2Ftree-ssa-dse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1951f1016cd8eec62db59a76840bde6a61d53ad4/gcc%2Ftree-ssa-dse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-dse.c?ref=1951f1016cd8eec62db59a76840bde6a61d53ad4", "patch": "@@ -84,6 +84,13 @@ dse_possible_dead_store_p (gimple stmt, gimple *use_stmt)\n \n   *use_stmt = NULL;\n \n+  /* Self-assignments are zombies.  */\n+  if (operand_equal_p (gimple_assign_rhs1 (stmt), gimple_assign_lhs (stmt), 0))\n+    {\n+      *use_stmt = stmt;\n+      return true;\n+    }\n+\n   /* Find the first dominated statement that clobbers (part of) the\n      memory stmt stores to with no intermediate statement that may use\n      part of the memory stmt stores.  That is, find a store that may"}]}