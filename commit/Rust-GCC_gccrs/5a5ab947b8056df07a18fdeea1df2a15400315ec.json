{"sha": "5a5ab947b8056df07a18fdeea1df2a15400315ec", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWE1YWI5NDdiODA1NmRmMDdhMThmZGVlYTFkZjJhMTU0MDAzMTVlYw==", "commit": {"author": {"name": "Paul Eggert", "email": "eggert@twinsun.com", "date": "1997-12-12T07:37:57Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1997-12-12T07:37:57Z"}, "message": "collect2.c (write_c_file_glob): Allocate initial frame object in static storage and pass its address.\n\n        * collect2.c (write_c_file_glob): Allocate initial frame object\n        in static storage and pass its address.\n\nFrom-SVN: r17066", "tree": {"sha": "70c60c961090bf19fcd082685f003aeb7fdbcf9c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/70c60c961090bf19fcd082685f003aeb7fdbcf9c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5a5ab947b8056df07a18fdeea1df2a15400315ec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a5ab947b8056df07a18fdeea1df2a15400315ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a5ab947b8056df07a18fdeea1df2a15400315ec", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a5ab947b8056df07a18fdeea1df2a15400315ec/comments", "author": null, "committer": null, "parents": [{"sha": "01eb7f9a1ccd7a2edb8902dee4546cc9f5e154ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01eb7f9a1ccd7a2edb8902dee4546cc9f5e154ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/01eb7f9a1ccd7a2edb8902dee4546cc9f5e154ec"}], "stats": {"total": 20, "additions": 18, "deletions": 2}, "files": [{"sha": "983e355f911c094460b9b24b56dd0d6eaff10dc5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a5ab947b8056df07a18fdeea1df2a15400315ec/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a5ab947b8056df07a18fdeea1df2a15400315ec/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5a5ab947b8056df07a18fdeea1df2a15400315ec", "patch": "@@ -1,3 +1,8 @@\n+1997-12-11  Paul Eggert  <eggert@twinsun.com>\n+\n+\t* collect2.c (write_c_file_glob): Allocate initial frame object\n+\tin static storage and pass its address.\n+\n Thu Dec 11 23:33:48 1997  Jason Merrill  <jason@yorick.cygnus.com>\n \n \t* except.c (call_get_eh_context): Don't take a parm."}, {"sha": "a79f7a849f9ad95efab848f49a0d62fab55c2c1b", "filename": "gcc/collect2.c", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a5ab947b8056df07a18fdeea1df2a15400315ec/gcc%2Fcollect2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a5ab947b8056df07a18fdeea1df2a15400315ec/gcc%2Fcollect2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcollect2.c?ref=5a5ab947b8056df07a18fdeea1df2a15400315ec", "patch": "@@ -1866,11 +1866,22 @@ write_c_file_glob (stream, name)\n       write_list (stream, \"\\t\\t&\", frame_tables.first);\n       fprintf (stream, \"\\t0\\n};\\n\");\n \n-      fprintf (stream, \"extern void __register_frame_table (void *);\\n\");\n+      /* This must match what's in frame.h.  */\n+      fprintf (stream, \"struct object {\\n\");\n+      fprintf (stream, \"  void *pc_begin;\\n\");\n+      fprintf (stream, \"  void *pc_end;\\n\");\n+      fprintf (stream, \"  void *fde_begin;\\n\");\n+      fprintf (stream, \"  void *fde_array;\\n\");\n+      fprintf (stream, \"  __SIZE_TYPE__ count;\\n\");\n+      fprintf (stream, \"  struct object *next;\\n\");\n+      fprintf (stream, \"};\\n\");\n+\n+      fprintf (stream, \"extern void __register_frame_table (void *, struct object *);\\n\");\n       fprintf (stream, \"extern void __deregister_frame (void *);\\n\");\n \n       fprintf (stream, \"static void reg_frame () {\\n\");\n-      fprintf (stream, \"\\t__register_frame_table (frame_table);\\n\");\n+      fprintf (stream, \"\\tstatic struct object ob;\\n\");\n+      fprintf (stream, \"\\t__register_frame_table (frame_table, &ob);\\n\");\n       fprintf (stream, \"\\t}\\n\");\n \n       fprintf (stream, \"static void dereg_frame () {\\n\");"}]}