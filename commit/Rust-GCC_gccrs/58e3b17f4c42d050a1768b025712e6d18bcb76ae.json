{"sha": "58e3b17f4c42d050a1768b025712e6d18bcb76ae", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NThlM2IxN2Y0YzQyZDA1MGExNzY4YjAyNTcxMmU2ZDE4YmNiNzZhZQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2021-06-16T20:46:38Z"}, "committer": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2021-06-17T17:15:57Z"}, "message": "mklog: add subject line skeleton\n\nIn the recent gcc-commit-mklog thread on gcc@ it occurred to me that the\ncommand could also fill in part of the subject line.  If the first PR is\nfoo/1234, and the commit does not yet have a subject line, this will add\n\nfoo: [PR1234]\n\ncontrib/ChangeLog:\n\n\t* mklog.py: Add an initial component: [PRnnnnn] line when\n\twe have a PR.", "tree": {"sha": "1a965d1d8e4e247856b919f1e2f0f4b22587e427", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1a965d1d8e4e247856b919f1e2f0f4b22587e427"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/58e3b17f4c42d050a1768b025712e6d18bcb76ae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58e3b17f4c42d050a1768b025712e6d18bcb76ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/58e3b17f4c42d050a1768b025712e6d18bcb76ae", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58e3b17f4c42d050a1768b025712e6d18bcb76ae/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "00f730ec3a24fd1453b3ee96e8a50a29d5db3ac3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00f730ec3a24fd1453b3ee96e8a50a29d5db3ac3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/00f730ec3a24fd1453b3ee96e8a50a29d5db3ac3"}], "stats": {"total": 15, "additions": 14, "deletions": 1}, "files": [{"sha": "1f59055e723872956d0d08fe61d5efebd536c0bb", "filename": "contrib/mklog.py", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58e3b17f4c42d050a1768b025712e6d18bcb76ae/contrib%2Fmklog.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58e3b17f4c42d050a1768b025712e6d18bcb76ae/contrib%2Fmklog.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fmklog.py?ref=58e3b17f4c42d050a1768b025712e6d18bcb76ae", "patch": "@@ -39,6 +39,7 @@\n from unidiff import PatchSet\n \n pr_regex = re.compile(r'(\\/(\\/|\\*)|[Cc*!])\\s+(?P<pr>PR [a-z+-]+\\/[0-9]+)')\n+prnum_regex = re.compile(r'PR (?P<comp>[a-z+-]+)/(?P<num>[0-9]+)')\n dr_regex = re.compile(r'(\\/(\\/|\\*)|[Cc*!])\\s+(?P<dr>DR [0-9]+)')\n dg_regex = re.compile(r'{\\s+dg-(error|warning)')\n identifier_regex = re.compile(r'^([a-zA-Z0-9_#].*)')\n@@ -67,6 +68,8 @@\n script_folder = os.path.realpath(__file__)\n root = os.path.dirname(os.path.dirname(script_folder))\n \n+firstpr = ''\n+\n \n def find_changelog(path):\n     folder = os.path.split(path)[0]\n@@ -134,6 +137,7 @@ def generate_changelog(data, no_functions=False, fill_pr_titles=False):\n     prs = []\n     out = ''\n     diff = PatchSet(data)\n+    global firstpr\n \n     for file in diff:\n         # skip files that can't be parsed\n@@ -166,6 +170,9 @@ def generate_changelog(data, no_functions=False, fill_pr_titles=False):\n                         # Found dg-warning/dg-error line\n                         break\n \n+    if prs:\n+        firstpr = prs[0]\n+\n     if fill_pr_titles:\n         out += get_pr_titles(prs)\n \n@@ -308,8 +315,14 @@ def update_copyright(data):\n             start = list(takewhile(lambda l: not l.startswith('#'), lines))\n             end = lines[len(start):]\n             with open(args.changelog, 'w') as f:\n+                if not start or not start[0]:\n+                    # initial commit subject line 'component: [PRnnnnn]'\n+                    m = prnum_regex.match(firstpr)\n+                    if m:\n+                        title = f'{m.group(\"comp\")}: [PR{m.group(\"num\")}]'\n+                        start.insert(0, title)\n                 if start:\n-                    # appent empty line\n+                    # append empty line\n                     if start[-1] != '':\n                         start.append('')\n                 else:"}]}