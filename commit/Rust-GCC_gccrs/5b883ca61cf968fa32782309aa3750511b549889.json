{"sha": "5b883ca61cf968fa32782309aa3750511b549889", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWI4ODNjYTYxY2Y5NjhmYTMyNzgyMzA5YWEzNzUwNTExYjU0OTg4OQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2011-02-10T16:29:39Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-02-10T16:29:39Z"}, "message": "re PR c++/47511 ([C++0x] ICE: unexpected ast of kind template_decl in potential_constant_expression_1, at cp/semantics.c:7711)\n\n\tPR c++/47511\n\t* semantics.c (potential_constant_expression_1): Handle TEMPLATE_DECL.\n\nFrom-SVN: r170005", "tree": {"sha": "dc276c2aad82f106457b7855e6995e5ea8788043", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dc276c2aad82f106457b7855e6995e5ea8788043"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5b883ca61cf968fa32782309aa3750511b549889", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b883ca61cf968fa32782309aa3750511b549889", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5b883ca61cf968fa32782309aa3750511b549889", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b883ca61cf968fa32782309aa3750511b549889/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "72602cd16b4e34843845c7b39aa5028e211cdbbf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72602cd16b4e34843845c7b39aa5028e211cdbbf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/72602cd16b4e34843845c7b39aa5028e211cdbbf"}], "stats": {"total": 29, "additions": 29, "deletions": 0}, "files": [{"sha": "f247933dba04ca90cba6ab75453806087bf4cd60", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b883ca61cf968fa32782309aa3750511b549889/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b883ca61cf968fa32782309aa3750511b549889/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=5b883ca61cf968fa32782309aa3750511b549889", "patch": "@@ -1,3 +1,8 @@\n+2011-02-09  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/47511\n+\t* semantics.c (potential_constant_expression_1): Handle TEMPLATE_DECL.\n+\n 2011-02-03  Dodji Seketeli  <dodji@redhat.com>\n \n \tPR c++/47398"}, {"sha": "7c06cc3d84fc6fc41ac62bec90eef2dbc39b39ca", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b883ca61cf968fa32782309aa3750511b549889/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b883ca61cf968fa32782309aa3750511b549889/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=5b883ca61cf968fa32782309aa3750511b549889", "patch": "@@ -7263,6 +7263,7 @@ potential_constant_expression_1 (tree t, bool want_rval, tsubst_flags_t flags)\n     {\n     case FUNCTION_DECL:\n     case BASELINK:\n+    case TEMPLATE_DECL:\n     case OVERLOAD:\n     case TEMPLATE_ID_EXPR:\n     case LABEL_DECL:"}, {"sha": "c37a2730f5a1a47344280ed036471755858f77d5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b883ca61cf968fa32782309aa3750511b549889/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b883ca61cf968fa32782309aa3750511b549889/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5b883ca61cf968fa32782309aa3750511b549889", "patch": "@@ -1,3 +1,10 @@\n+2011-02-09  Jason Merrill  <jason@redhat.com>\n+\n+\t* g++.dg/cpp0x/regress: New directory.\n+\t* g++.dg/cpp0x/constexpr-regress1.C: Move to regress/regress1.C.\n+\t* g++.dg/cpp0x/constexpr-regress2.C: Move to regress/regress2.C.\n+\t* g++.dg/cpp0x/regress/regress3.C: New.\n+\n 2011-02-10  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/47677"}, {"sha": "5c3402e748522fcf297a5d247da49459afdceac9", "filename": "gcc/testsuite/g++.dg/cpp0x/regress/README", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b883ca61cf968fa32782309aa3750511b549889/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fregress%2FREADME", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b883ca61cf968fa32782309aa3750511b549889/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fregress%2FREADME", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fregress%2FREADME?ref=5b883ca61cf968fa32782309aa3750511b549889", "patch": "@@ -0,0 +1,3 @@\n+This directory contains tests that were passing in C++98 mode but failing\n+in C++0x mode; it should be replaced by an improvement to the test harness\n+to run all tests in both modes."}, {"sha": "a6fe3999c984ce03456d0678e05d26fb444d61e2", "filename": "gcc/testsuite/g++.dg/cpp0x/regress/regress1.C", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b883ca61cf968fa32782309aa3750511b549889/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fregress%2Fregress1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b883ca61cf968fa32782309aa3750511b549889/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fregress%2Fregress1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fregress%2Fregress1.C?ref=5b883ca61cf968fa32782309aa3750511b549889", "previous_filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-regress1.C"}, {"sha": "470ee1c4c8095e0d3d8bb97dac4db3a2cbd8318f", "filename": "gcc/testsuite/g++.dg/cpp0x/regress/regress2.C", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b883ca61cf968fa32782309aa3750511b549889/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fregress%2Fregress2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b883ca61cf968fa32782309aa3750511b549889/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fregress%2Fregress2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fregress%2Fregress2.C?ref=5b883ca61cf968fa32782309aa3750511b549889", "previous_filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-regress2.C"}, {"sha": "ffbb97f6b8559ef2c740eda2a6775f73aeb75e53", "filename": "gcc/testsuite/g++.dg/cpp0x/regress/regress3.C", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b883ca61cf968fa32782309aa3750511b549889/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fregress%2Fregress3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b883ca61cf968fa32782309aa3750511b549889/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fregress%2Fregress3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fregress%2Fregress3.C?ref=5b883ca61cf968fa32782309aa3750511b549889", "patch": "@@ -0,0 +1,13 @@\n+// PR c++/47511\n+// { dg-options -std=c++0x }\n+\n+namespace N {\n+    template <typename T> bool g( T ) {\n+        return true;\n+    }\n+    struct A { };\n+}\n+template <class T> void f(const T&) {\n+    N::A x;\n+    g(x) ;\n+}"}]}