{"sha": "d7a33a4cb02589a3f336ae831e67c8981ab24b4f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDdhMzNhNGNiMDI1ODlhM2YzMzZhZTgzMWU2N2M4OTgxYWIyNGI0Zg==", "commit": {"author": {"name": "Julia Koval", "email": "julia.koval@intel.com", "date": "2017-05-11T18:01:12Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2017-05-11T18:01:12Z"}, "message": "* config/i386/avx512fintrin.h (_mm_mask_rsqrt14_sd)\n\t(_mm_maskz_rsqrt14_sd, _mm_mask_rsqrt14_ss, _mm_maskz_rsqrt14_ss):\n\tNew intrinsics.\n\t* config/i386/i386-builtin.def (__builtin_ia32_rsqrt14sd_mask)\n\t(__builtin_ia32_rsqrt14ss_mask): New builtins.\n\t* config/i386/sse.md (rsqrt14_<mode>_mask): New pattern.\n\ntestsuite/ChangeLog:\n\n\t* gcc.target/i386/avx512f-vrsqrt14sd-1.c: Test new intrinsics.\n\t* gcc.target/i386/avx512f-vrsqrt14sd-2.c: Ditto.\n\t* gcc.target/i386/avx512f-vrsqrt14ss-1.c: Ditto.\n\t* gcc.target/i386/avx512f-vrsqrt14ss-2.c: Ditto.\n\nFrom-SVN: r247920", "tree": {"sha": "386c70bd14bff7e6ff87e00912026ee01b109c09", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/386c70bd14bff7e6ff87e00912026ee01b109c09"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d7a33a4cb02589a3f336ae831e67c8981ab24b4f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7a33a4cb02589a3f336ae831e67c8981ab24b4f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7a33a4cb02589a3f336ae831e67c8981ab24b4f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7a33a4cb02589a3f336ae831e67c8981ab24b4f/comments", "author": {"login": "vaalfreja", "id": 5216345, "node_id": "MDQ6VXNlcjUyMTYzNDU=", "avatar_url": "https://avatars.githubusercontent.com/u/5216345?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vaalfreja", "html_url": "https://github.com/vaalfreja", "followers_url": "https://api.github.com/users/vaalfreja/followers", "following_url": "https://api.github.com/users/vaalfreja/following{/other_user}", "gists_url": "https://api.github.com/users/vaalfreja/gists{/gist_id}", "starred_url": "https://api.github.com/users/vaalfreja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vaalfreja/subscriptions", "organizations_url": "https://api.github.com/users/vaalfreja/orgs", "repos_url": "https://api.github.com/users/vaalfreja/repos", "events_url": "https://api.github.com/users/vaalfreja/events{/privacy}", "received_events_url": "https://api.github.com/users/vaalfreja/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "31cf88b660fd8b72f81976eaf792d6b288ab6efb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31cf88b660fd8b72f81976eaf792d6b288ab6efb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/31cf88b660fd8b72f81976eaf792d6b288ab6efb"}], "stats": {"total": 113, "additions": 109, "deletions": 4}, "files": [{"sha": "ce139d137f2ba4c4921e1b2ad7284a2d49ac092a", "filename": "gcc/config/i386/avx512fintrin.h", "status": "modified", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7a33a4cb02589a3f336ae831e67c8981ab24b4f/gcc%2Fconfig%2Fi386%2Favx512fintrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7a33a4cb02589a3f336ae831e67c8981ab24b4f/gcc%2Fconfig%2Fi386%2Favx512fintrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Favx512fintrin.h?ref=d7a33a4cb02589a3f336ae831e67c8981ab24b4f", "patch": "@@ -1843,6 +1843,26 @@ _mm_rsqrt14_sd (__m128d __A, __m128d __B)\n \t\t\t\t\t     (__v2df) __A);\n }\n \n+extern __inline __m128d\n+__attribute__ ((__gnu_inline__, __always_inline__, __artificial__))\n+_mm_mask_rsqrt14_sd (__m128d __W, __mmask8 __U, __m128d __A, __m128d __B)\n+{\n+  return (__m128d) __builtin_ia32_rsqrt14sd_mask ((__v2df) __B,\n+\t\t\t\t\t\t (__v2df) __A,\n+\t\t\t\t\t\t (__v2df) __W,\n+\t\t\t\t\t\t (__mmask8) __U);\n+}\n+\n+extern __inline __m128d\n+__attribute__ ((__gnu_inline__, __always_inline__, __artificial__))\n+_mm_maskz_rsqrt14_sd (__mmask8 __U, __m128d __A, __m128d __B)\n+{\n+  return (__m128d) __builtin_ia32_rsqrt14sd_mask ((__v2df) __B,\n+\t\t\t\t\t\t (__v2df) __A,\n+\t\t\t\t\t\t (__v2df) _mm_setzero_pd (),\n+\t\t\t\t\t\t (__mmask8) __U);\n+}\n+\n extern __inline __m128\n __attribute__ ((__gnu_inline__, __always_inline__, __artificial__))\n _mm_rsqrt14_ss (__m128 __A, __m128 __B)\n@@ -1851,6 +1871,26 @@ _mm_rsqrt14_ss (__m128 __A, __m128 __B)\n \t\t\t\t\t    (__v4sf) __A);\n }\n \n+extern __inline __m128\n+__attribute__ ((__gnu_inline__, __always_inline__, __artificial__))\n+_mm_mask_rsqrt14_ss (__m128 __W, __mmask8 __U, __m128 __A, __m128 __B)\n+{\n+  return (__m128) __builtin_ia32_rsqrt14ss_mask ((__v4sf) __B,\n+\t\t\t\t\t\t (__v4sf) __A,\n+\t\t\t\t\t\t (__v4sf) __W,\n+\t\t\t\t\t\t (__mmask8) __U);\n+}\n+\n+extern __inline __m128\n+__attribute__ ((__gnu_inline__, __always_inline__, __artificial__))\n+_mm_maskz_rsqrt14_ss (__mmask8 __U, __m128 __A, __m128 __B)\n+{\n+  return (__m128) __builtin_ia32_rsqrt14ss_mask ((__v4sf) __B,\n+\t\t\t\t\t\t(__v4sf) __A,\n+\t\t\t\t\t\t(__v4sf) _mm_setzero_ps (),\n+\t\t\t\t\t\t(__mmask8) __U);\n+}\n+\n #ifdef __OPTIMIZE__\n extern __inline __m512d\n __attribute__ ((__gnu_inline__, __always_inline__, __artificial__))"}, {"sha": "1e29198ad07e4262452ec88614f06b163cc292ca", "filename": "gcc/config/i386/i386-builtin.def", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7a33a4cb02589a3f336ae831e67c8981ab24b4f/gcc%2Fconfig%2Fi386%2Fi386-builtin.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7a33a4cb02589a3f336ae831e67c8981ab24b4f/gcc%2Fconfig%2Fi386%2Fi386-builtin.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-builtin.def?ref=d7a33a4cb02589a3f336ae831e67c8981ab24b4f", "patch": "@@ -1377,7 +1377,9 @@ BDESC (OPTION_MASK_ISA_AVX512F, CODE_FOR_srcp14v4sf_mask, \"__builtin_ia32_rcp14s\n BDESC (OPTION_MASK_ISA_AVX512F, CODE_FOR_rsqrt14v8df_mask, \"__builtin_ia32_rsqrt14pd512_mask\", IX86_BUILTIN_RSQRT14PD512, UNKNOWN, (int) V8DF_FTYPE_V8DF_V8DF_UQI)\n BDESC (OPTION_MASK_ISA_AVX512F, CODE_FOR_rsqrt14v16sf_mask, \"__builtin_ia32_rsqrt14ps512_mask\", IX86_BUILTIN_RSQRT14PS512, UNKNOWN, (int) V16SF_FTYPE_V16SF_V16SF_UHI)\n BDESC (OPTION_MASK_ISA_AVX512F, CODE_FOR_rsqrt14v2df, \"__builtin_ia32_rsqrt14sd\", IX86_BUILTIN_RSQRT14SD, UNKNOWN, (int) V2DF_FTYPE_V2DF_V2DF)\n+BDESC (OPTION_MASK_ISA_AVX512F, CODE_FOR_rsqrt14_v2df_mask, \"__builtin_ia32_rsqrt14sd_mask\", IX86_BUILTIN_RSQRT14SDMASK, UNKNOWN, (int) V2DF_FTYPE_V2DF_V2DF_V2DF_UQI)\n BDESC (OPTION_MASK_ISA_AVX512F, CODE_FOR_rsqrt14v4sf, \"__builtin_ia32_rsqrt14ss\", IX86_BUILTIN_RSQRT14SS, UNKNOWN, (int) V4SF_FTYPE_V4SF_V4SF)\n+BDESC (OPTION_MASK_ISA_AVX512F, CODE_FOR_rsqrt14_v4sf_mask, \"__builtin_ia32_rsqrt14ss_mask\", IX86_BUILTIN_RSQRT14SSMASK, UNKNOWN, (int) V4SF_FTYPE_V4SF_V4SF_V4SF_UQI)\n BDESC (OPTION_MASK_ISA_AVX512F, CODE_FOR_avx512f_shufpd512_mask, \"__builtin_ia32_shufpd512_mask\", IX86_BUILTIN_SHUFPD512, UNKNOWN, (int) V8DF_FTYPE_V8DF_V8DF_INT_V8DF_UQI)\n BDESC (OPTION_MASK_ISA_AVX512F, CODE_FOR_avx512f_shufps512_mask, \"__builtin_ia32_shufps512_mask\", IX86_BUILTIN_SHUFPS512, UNKNOWN, (int) V16SF_FTYPE_V16SF_V16SF_INT_V16SF_UHI)\n BDESC (OPTION_MASK_ISA_AVX512F, CODE_FOR_avx512f_shuf_f32x4_mask, \"__builtin_ia32_shuf_f32x4_mask\", IX86_BUILTIN_SHUF_F32x4, UNKNOWN, (int) V16SF_FTYPE_V16SF_V16SF_INT_V16SF_UHI)"}, {"sha": "220f69f098017f202a3f6cfed884ffea182763c6", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7a33a4cb02589a3f336ae831e67c8981ab24b4f/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7a33a4cb02589a3f336ae831e67c8981ab24b4f/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=d7a33a4cb02589a3f336ae831e67c8981ab24b4f", "patch": "@@ -1847,6 +1847,23 @@\n    (set_attr \"prefix\" \"evex\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n+(define_insn \"rsqrt14_<mode>_mask\"\n+  [(set (match_operand:VF_128 0 \"register_operand\" \"=v\")\n+\t(vec_merge:VF_128\n+\t  (vec_merge:VF_128\n+\t    (unspec:VF_128\n+\t      [(match_operand:VF_128 1 \"nonimmediate_operand\" \"vm\")]\n+\t      UNSPEC_RSQRT14)\n+\t      (match_operand:VF_128 3 \"vector_move_operand\" \"0C\")\n+\t      (match_operand:<avx512fmaskmode> 4 \"register_operand\" \"Yk\"))\n+\t  (match_operand:VF_128 2 \"register_operand\" \"v\")\n+\t  (const_int 1)))]\n+  \"TARGET_AVX512F\"\n+  \"vrsqrt14<ssescalarmodesuffix>\\t{%1, %2, %0%{%4%}%N3|%0%{%4%}%N3, %2, %<iptr>1}\"\n+  [(set_attr \"type\" \"sse\")\n+   (set_attr \"prefix\" \"evex\")\n+   (set_attr \"mode\" \"<MODE>\")])\n+\n (define_insn \"sse_vmrsqrtv4sf2\"\n   [(set (match_operand:V4SF 0 \"register_operand\" \"=x,x\")\n \t(vec_merge:V4SF"}, {"sha": "eed64824127cfe5da9d97a4effabb62eeae3ffe7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7a33a4cb02589a3f336ae831e67c8981ab24b4f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7a33a4cb02589a3f336ae831e67c8981ab24b4f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d7a33a4cb02589a3f336ae831e67c8981ab24b4f", "patch": "@@ -1,3 +1,10 @@\n+2017-05-11  Julia Koval  <julia.koval@intel.com>\n+\n+\t* gcc.target/i386/avx512f-vrsqrt14sd-1.c: Test new intrinsics.\n+\t* gcc.target/i386/avx512f-vrsqrt14sd-2.c: Ditto.\n+\t* gcc.target/i386/avx512f-vrsqrt14ss-1.c: Ditto.\n+\t* gcc.target/i386/avx512f-vrsqrt14ss-2.c: Ditto.\n+\n 2017-05-11  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/70538"}, {"sha": "8f2369263f12feeeadd55187aab10009a3fc668b", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vrsqrt14sd-1.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7a33a4cb02589a3f336ae831e67c8981ab24b4f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vrsqrt14sd-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7a33a4cb02589a3f336ae831e67c8981ab24b4f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vrsqrt14sd-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vrsqrt14sd-1.c?ref=d7a33a4cb02589a3f336ae831e67c8981ab24b4f", "patch": "@@ -1,14 +1,18 @@\n /* { dg-do compile } */\n /* { dg-options \"-mavx512f -O2\" } */\n /* { dg-final { scan-assembler-times \"vrsqrt14sd\\[ \\\\t\\]+\\[^\\{\\n\\]*%xmm\\[0-9\\]+(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vrsqrt14sd\\[ \\\\t\\]+\\[^\\{\\n\\]*%xmm\\[0-9\\]+\\{%k\\[1-7\\]\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vrsqrt14sd\\[ \\\\t\\]+\\[^\\{\\n\\]*%xmm\\[0-9\\]+\\{%k\\[1-7\\]\\}\\{z\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n \n #include <immintrin.h>\n \n-volatile __m128d x1, x2;\n+volatile __m128d x1, x2, x3;\n volatile __mmask8 m;\n \n void extern\n avx512f_test (void)\n {\n   x1 = _mm_rsqrt14_sd (x1, x2);\n+  x1 = _mm_mask_rsqrt14_sd (x3, m, x1, x2);\n+  x1 = _mm_maskz_rsqrt14_sd (m, x1, x2);\n }"}, {"sha": "d106682ff0e0a5ce4459b01afb8b2f3bbd431968", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vrsqrt14sd-2.c", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7a33a4cb02589a3f336ae831e67c8981ab24b4f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vrsqrt14sd-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7a33a4cb02589a3f336ae831e67c8981ab24b4f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vrsqrt14sd-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vrsqrt14sd-2.c?ref=d7a33a4cb02589a3f336ae831e67c8981ab24b4f", "patch": "@@ -4,6 +4,7 @@\n \n #include <math.h>\n #include \"avx512f-check.h\"\n+#include \"avx512f-helper.h\"\n \n static void\n compute_vrsqrt14sd (double *s1, double *s2, double *r)\n@@ -15,7 +16,8 @@ compute_vrsqrt14sd (double *s1, double *s2, double *r)\n static void\n avx512f_test (void)\n {\n-  union128d s1, s2, res1;\n+  union128d s1, s2, res1, res2, res3;\n+  __mmask8 m = 0;\n   double res_ref[2];\n \n   s1.x = _mm_set_pd (-3.0, 111.111);\n@@ -27,4 +29,17 @@ avx512f_test (void)\n \n   if (check_fp_union128d (res1, res_ref))\n     abort ();\n+\n+  res2.x = _mm_set_pd (-4.0, DEFAULT_VALUE);\n+  res2.x = _mm_mask_rsqrt14_sd(res2.x, m, s1.x, s2.x);\n+ \n+  MASK_MERGE (d) (res_ref, m, 1);\n+  if (checkVd (res2.a, res_ref, 2))\n+    abort();\n+\n+  res3.x = _mm_maskz_rsqrt14_sd(m, s1.x, s2.x);\n+  \n+  MASK_ZERO (d) (res_ref, m, 1);\n+  if (checkVd (res3.a, res_ref, 2))\n+    abort();\n }"}, {"sha": "098df0d7370a1fdcacb29f9635c9ee09acdaf65b", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vrsqrt14ss-1.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7a33a4cb02589a3f336ae831e67c8981ab24b4f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vrsqrt14ss-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7a33a4cb02589a3f336ae831e67c8981ab24b4f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vrsqrt14ss-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vrsqrt14ss-1.c?ref=d7a33a4cb02589a3f336ae831e67c8981ab24b4f", "patch": "@@ -1,13 +1,18 @@\n /* { dg-do compile } */\n /* { dg-options \"-mavx512f -O2\" } */\n /* { dg-final { scan-assembler-times \"vrsqrt14ss\\[ \\\\t\\]+\\[^\\{\\n\\]*%xmm\\[0-9\\]+(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vrsqrt14ss\\[ \\\\t\\]+\\[^\\{\\n\\]*%xmm\\[0-9\\]+\\{%k\\[1-7\\]\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vrsqrt14ss\\[ \\\\t\\]+\\[^\\{\\n\\]*%xmm\\[0-9\\]+\\{%k\\[1-7\\]\\}\\{z\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n \n #include <immintrin.h>\n \n-volatile __m128 x1, x2;\n+volatile __m128 x1, x2, x3;\n+volatile __mmask8 m;\n \n void extern\n avx512f_test (void)\n {\n   x1 = _mm_rsqrt14_ss (x1, x2);\n+  x1 = _mm_mask_rsqrt14_ss (x3, m, x1, x2);\n+  x1 = _mm_maskz_rsqrt14_ss (m, x1, x2);\n }"}, {"sha": "739a852cea648197dbaffe4fc7e9472323a4bf73", "filename": "gcc/testsuite/gcc.target/i386/avx512f-vrsqrt14ss-2.c", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7a33a4cb02589a3f336ae831e67c8981ab24b4f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vrsqrt14ss-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7a33a4cb02589a3f336ae831e67c8981ab24b4f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vrsqrt14ss-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-vrsqrt14ss-2.c?ref=d7a33a4cb02589a3f336ae831e67c8981ab24b4f", "patch": "@@ -4,6 +4,7 @@\n \n #include <math.h>\n #include \"avx512f-check.h\"\n+#include \"avx512f-helper.h\"\n \n static void\n compute_vrsqrt14ss (float *s1, float *s2, float *r)\n@@ -17,7 +18,8 @@ compute_vrsqrt14ss (float *s1, float *s2, float *r)\n static void\n avx512f_test (void)\n {\n-  union128 s1, s2, res1;\n+  union128 s1, s2, res1, res2, res3;\n+  __mmask8 m = 0;\n   float res_ref[4];\n \n   s1.x = _mm_set_ps (-24.43, 68.346, -43.35, 546.46);\n@@ -29,4 +31,17 @@ avx512f_test (void)\n \n   if (check_fp_union128 (res1, res_ref))\n     abort ();\n+\n+  res2.x = _mm_set_ps (5.0, 6.0, 7.0, DEFAULT_VALUE);\n+  res2.x = _mm_mask_rsqrt14_ss(res2.x, m, s1.x, s2.x);\n+\n+  MASK_MERGE () (res_ref, m, 1);\n+  if (checkVf (res2.a, res_ref, 4))\n+    abort();\n+\n+  res3.x = _mm_maskz_rsqrt14_ss(m, s1.x, s2.x);\n+  \n+  MASK_ZERO () (res_ref, m, 1);\n+  if (checkVf (res3.a, res_ref, 4))\n+    abort();\n }"}]}