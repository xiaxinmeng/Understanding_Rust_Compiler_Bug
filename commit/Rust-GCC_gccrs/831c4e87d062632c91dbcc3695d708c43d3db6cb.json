{"sha": "831c4e87d062632c91dbcc3695d708c43d3db6cb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODMxYzRlODdkMDYyNjMyYzkxZGJjYzM2OTVkNzA4YzQzZDNkYjZjYg==", "commit": {"author": {"name": "Kelley Cook", "email": "kelleycook@comcast.net", "date": "2002-02-27T00:29:00Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2002-02-27T00:29:00Z"}, "message": "i386.c (print_operand): Don't append ATT-style length suffixs to x87 opcodes when in Intel mode.\n\n        * config/i386/i386.c (print_operand): Don't append ATT-style\n        length suffixs to x87 opcodes when in Intel mode.\n\nFrom-SVN: r50075", "tree": {"sha": "fca581463832e6c6113b5bb48434a6ae66a20d22", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fca581463832e6c6113b5bb48434a6ae66a20d22"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/831c4e87d062632c91dbcc3695d708c43d3db6cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/831c4e87d062632c91dbcc3695d708c43d3db6cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/831c4e87d062632c91dbcc3695d708c43d3db6cb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/831c4e87d062632c91dbcc3695d708c43d3db6cb/comments", "author": null, "committer": null, "parents": [{"sha": "ff88fe10350cc5bdb652fdc37c99507cc8b41242", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff88fe10350cc5bdb652fdc37c99507cc8b41242", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ff88fe10350cc5bdb652fdc37c99507cc8b41242"}], "stats": {"total": 140, "additions": 74, "deletions": 66}, "files": [{"sha": "a4131703fc20a2d2763be97c7895e6eec01d803f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 69, "deletions": 64, "changes": 133, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/831c4e87d062632c91dbcc3695d708c43d3db6cb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/831c4e87d062632c91dbcc3695d708c43d3db6cb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=831c4e87d062632c91dbcc3695d708c43d3db6cb", "patch": "@@ -1,3 +1,8 @@\n+2002-02-26  Kelley Cook  <kelleycook@comcast.net>\n+\n+\t* config/i386/i386.c (print_operand): Don't append ATT-style\n+\tlength suffixs to x87 opcodes when in Intel mode.\n+\n 2002-02-26  Ryan T. Sammartino <ryants@shaw.ca>\n \n \t* emit-rtl.c (gen_const_vector_0): Remove TYPE argument.\n@@ -62,27 +67,27 @@\n \n 2002-02-26  Aldy Hernandez  <aldyh@redhat.com>\n \n-        * dwarf2out.c (modified_type_die): Do not call type_main_variant\n-        for vectors.\n-        (gen_type_die): Same.\n+\t* dwarf2out.c (modified_type_die): Do not call type_main_variant\n+\tfor vectors.\n+\t(gen_type_die): Same.\n \n-        * attribs.c (handle_vector_size_attribute): Set debug information.\n+\t* attribs.c (handle_vector_size_attribute): Set debug information.\n \n 2002-02-26  Daniel Egger  <degger@fhm.edu>\n \n-        * config/rs6000/rs6000.md: Swap define_insn attributes to\n-        fix incorrect generation of merge high instructions instead\n-        of merge low.\n+\t* config/rs6000/rs6000.md: Swap define_insn attributes to\n+\tfix incorrect generation of merge high instructions instead\n+\tof merge low.\n \n 2002-02-26  Aldy Hernandez  <aldyh@redhat.com>\n \n-        * c-typeck.c (really_start_incremental_init): Use\n-        bitsize_zero_node for vectors.\n+\t* c-typeck.c (really_start_incremental_init): Use\n+\tbitsize_zero_node for vectors.\n \n 2002-02-26  Aldy Hernandez  <aldyh@redhat.com>\n \n-        * config/rs6000/rs6000.md (get_vrsave_internal): Fix typo.\n-        (\"*set_vrsave_internal\"): Same.\n+\t* config/rs6000/rs6000.md (get_vrsave_internal): Fix typo.\n+\t(\"*set_vrsave_internal\"): Same.\n \n 2002-02-25  Richard Henderson  <rth@redhat.com>\n \n@@ -108,7 +113,7 @@\n \n 2002-02-25  Aldy Hernandez  <aldyh@redhat.com>\n \n-        * c-typeck.c (push_init_level): Handle vectors.\n+\t* c-typeck.c (push_init_level): Handle vectors.\n \n 2002-02-25  Alexandre Oliva  <aoliva@redhat.com>\n \n@@ -126,11 +131,11 @@\n \n 2002-02-25  Aldy Hernandez  <aldyh@redhat.com>\n \n-        * config/rs6000/rs6000.md (\"get_vrsave_internal\"): New.\n-        (\"*set_vrsave_internal\"): use mfspr for Darwin.\n+\t* config/rs6000/rs6000.md (\"get_vrsave_internal\"): New.\n+\t(\"*set_vrsave_internal\"): use mfspr for Darwin.\n \n-        * config/rs6000/rs6000.c (rs6000_emit_prologue): Call\n-        gen_get_vrsave_internal.\n+\t* config/rs6000/rs6000.c (rs6000_emit_prologue): Call\n+\tgen_get_vrsave_internal.\n \n Sun Feb 24 16:38:56 2002  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n@@ -224,7 +229,7 @@ Sat Feb 23 08:42:47 2002  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n 2002-02-23  Aldy Hernandez  <aldyh@redhat.com>\n \n-        * config/rs6000/altivec.h: Add extra level of parentheses on casts.\n+\t* config/rs6000/altivec.h: Add extra level of parentheses on casts.\n \n 2002-02-22  David Edelsohn  <edelsohn@gnu.org>\n \n@@ -374,7 +379,7 @@ Thu Feb 21 21:17:21 2002  J\"orn Rennecke <joern.rennecke@superh.com>\n 2002-02-20  Torbjorn Granlund  <tege@swox.com>\n \n \t* config/avr/avr.md: Add more patterns for mized-mode add and subtract\n-        (addsi3_zero_extend, subhi3_zero_extend1, subsi3_zero_extend).\n+\t(addsi3_zero_extend, subhi3_zero_extend1, subsi3_zero_extend).\n \n Thu Feb 21 16:20:46 2002  Alexandre Oliva  <aoliva@redhat.com>\n \n@@ -1046,20 +1051,20 @@ Sat Feb 16 13:39:09 2002  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n 2002-02-14  Aldy Hernandez  <aldyh@redhat.com>\n \n-        * config/rs6000/darwin.h (ROUND_TYPE_ALIGN): Adjust for vectors.\n+\t* config/rs6000/darwin.h (ROUND_TYPE_ALIGN): Adjust for vectors.\n \n-        * config/rs6000/sysv4.h (ROUND_TYPE_ALIGN): Add MAX.\n+\t* config/rs6000/sysv4.h (ROUND_TYPE_ALIGN): Add MAX.\n \n 2002-02-14  Aldy Hernandez  <aldyh@redhat.com>\n \n-        * config/rs6000/rs6000.md (\"*movv4si_internal\"): Add m<-r and r<-r\n-        alternatives.\n-        (\"*movv8hi_internal1\"): Same.\n-        (\"*movv16qi_internal1\"): Same.\n-        (\"*movv4sf_internal1\"): Same.\n+\t* config/rs6000/rs6000.md (\"*movv4si_internal\"): Add m<-r and r<-r\n+\talternatives.\n+\t(\"*movv8hi_internal1\"): Same.\n+\t(\"*movv16qi_internal1\"): Same.\n+\t(\"*movv4sf_internal1\"): Same.\n \n-        * config/rs6000/rs6000.c (rs6000_legitimize_reload_address): Do\n-        not push_reload for altivec modes.\n+\t* config/rs6000/rs6000.c (rs6000_legitimize_reload_address): Do\n+\tnot push_reload for altivec modes.\n \n 2002-02-13  Joel Sherrill  <joel@OARcorp.com>\n \n@@ -1172,17 +1177,17 @@ Wed Feb 13 10:35:56 CET 2002  Jan Hubicka  <jh@suse.cz>\n \n 2002-02-12  Aldy Hernandez  <aldyh@redhat.com>\n \n-        * config/rs6000/rs6000.md: Use predicate altivec_register_operand\n-        for altivec_lvx* and altivec_stvx*.\n-        (\"*movv4si_internal\"): Add constraint for loading from GPRs.\n-        (\"*movv8hi_internal1\"): Same.\n-        (\"*movv16qi_internal1\"): Same.\n-        (\"*movv4sf_internal1\"): Same.\n+\t* config/rs6000/rs6000.md: Use predicate altivec_register_operand\n+\tfor altivec_lvx* and altivec_stvx*.\n+\t(\"*movv4si_internal\"): Add constraint for loading from GPRs.\n+\t(\"*movv8hi_internal1\"): Same.\n+\t(\"*movv16qi_internal1\"): Same.\n+\t(\"*movv4sf_internal1\"): Same.\n \n-        * config/rs6000/rs6000.c (altivec_register_operand): New.\n+\t* config/rs6000/rs6000.c (altivec_register_operand): New.\n \n-        * config/rs6000/rs6000.h (PREDICATE_CODES): Add\n-        altivec_register_operand.\n+\t* config/rs6000/rs6000.h (PREDICATE_CODES): Add\n+\taltivec_register_operand.\n \n 2002-02-13  Hans-Peter Nilsson  <hp@bitrange.com>\n \n@@ -1191,15 +1196,15 @@ Wed Feb 13 10:35:56 CET 2002  Jan Hubicka  <jh@suse.cz>\n \n 2002-02-13  Stan Shebs  <shebs@apple.com>\n \n-        * c-typeck.c (digest_init): Handle vectors.\n-        (really_start_incremental_init): Same.\n-        (pop_init_level): Same.\n-        (process_init_element): Same.\n+\t* c-typeck.c (digest_init): Handle vectors.\n+\t(really_start_incremental_init): Same.\n+\t(pop_init_level): Same.\n+\t(process_init_element): Same.\n \n-        * varasm.c (output_constant): Same.\n+\t* varasm.c (output_constant): Same.\n \n-        * expr.c (clear_storage): Same.\n-        (store_constructor): Same.\n+\t* expr.c (clear_storage): Same.\n+\t(store_constructor): Same.\n \n 2002-02-12  Eric Christopher  <echristo@redhat.com>\n \n@@ -2268,9 +2273,9 @@ Sat Feb  9 18:28:02 CET 2002  Jan Hubicka  <jh@suse.cz>\n \n 2002-02-08  Chris Demetriou  <cgd@broadcom.com>\n \n-        * config/mips/mips.md (casesi_internal, casesi_internal_di):\n-        Protect jump delay slot instructions with .set noreorder and\n-        .set nomacro.\n+\t* config/mips/mips.md (casesi_internal, casesi_internal_di):\n+\tProtect jump delay slot instructions with .set noreorder and\n+\t.set nomacro.\n \n 2002-02-08  Chris Demetriou  <cgd@broadcom.com>\n \n@@ -2506,7 +2511,7 @@ Thu Feb  7 12:14:17 CET 2002  Jan Hubicka  <jh@suse.cz>\n \n 2002-02-06  Aldy Hernandez  <aldyh@redhat.com>\n \n-        * config/rs6000/altivec.h: Change elem to _S_elem.\n+\t* config/rs6000/altivec.h: Change elem to _S_elem.\n \n 2002-02-05  Jason Thorpe  <thorpej@wasabisystems.com>\n \n@@ -2656,10 +2661,10 @@ Mon Feb\t 4 19:23:19 2002  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n \t* config/arm/arm.h (machine_function): Add uses_anonymous_args\n \tfield.\n-        (SETUP_INCOMING_VARARGS): Set uses_anonymous_args.\n+\t(SETUP_INCOMING_VARARGS): Set uses_anonymous_args.\n \t* config/arm/arm.c (current_function_anonymous_args): Delete,\n-        replace uses with cfun->machine->uses_anonymous_args.\n-        (arm_reorg): Do not reset uses_anonymous_args.\n+\treplace uses with cfun->machine->uses_anonymous_args.\n+\t(arm_reorg): Do not reset uses_anonymous_args.\n \n \t* config/arm/arm.c (arm_hard_regno_mode_ok): Allow any value in\n \tany geenral register.\n@@ -2766,8 +2771,8 @@ Mon Feb  4 09:05:58 2002  Jeffrey A Law  (law@redhat.com)\n \n 2002-02-04  Hartmut Penner  <hpenner@de.ibm.com>\n \n-        * varasm.c (decode_rtx_const): Allow unspec (symbol_ref) in\n-        constant pool to be identical by string address and index.\n+\t* varasm.c (decode_rtx_const): Allow unspec (symbol_ref) in\n+\tconstant pool to be identical by string address and index.\n \n 2002-02-04  Anthony Green  <green@redhat.com>\n \n@@ -2922,18 +2927,18 @@ doc:\n \n 2002-01-30  Andrew Haley  <aph@cambridge.redhat.com>\n \n-        * config/stormy16/stormy16.md (pushqi): New.\n-        (popqi): New.\n-        (pushhi): New.\n-        (pophi): New.\n-        (movhi): Remove stack operands.\n-        (movqi): Likewise.\n-        * config/stormy16/stormy16.h (PREDICATE_CODES): Add\n-        nonimmediate_nonstack_operand.\n-        * config/stormy16/stormy16.c (nonimmediate_nonstack_operand):\n-        New.\n-        * config/stormy16/stormy16-protos.h (nonimmediate_nonstack_operand)\n-        New.\n+\t* config/stormy16/stormy16.md (pushqi): New.\n+\t(popqi): New.\n+\t(pushhi): New.\n+\t(pophi): New.\n+\t(movhi): Remove stack operands.\n+\t(movqi): Likewise.\n+\t* config/stormy16/stormy16.h (PREDICATE_CODES): Add\n+\tnonimmediate_nonstack_operand.\n+\t* config/stormy16/stormy16.c (nonimmediate_nonstack_operand):\n+\tNew.\n+\t* config/stormy16/stormy16-protos.h (nonimmediate_nonstack_operand)\n+\tNew.\n \n 2002-01-31  Jason Merrill  <jason@redhat.com>\n "}, {"sha": "0a354d666771f4156d77cbce2ef295eda09d8318", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/831c4e87d062632c91dbcc3695d708c43d3db6cb/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/831c4e87d062632c91dbcc3695d708c43d3db6cb/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=831c4e87d062632c91dbcc3695d708c43d3db6cb", "patch": "@@ -5731,11 +5731,14 @@ print_operand (file, x, code)\n \tcase 'z':\n \t  /* 387 opcodes don't get size suffixes if the operands are\n \t     registers.  */\n-\n \t  if (STACK_REG_P (x))\n \t    return;\n \n-\t  /* this is the size of op from size of operand */\n+\t  /* Likewise if using Intel opcodes.  */\n+\t  if (ASSEMBLER_DIALECT == ASM_INTEL)\n+\t    return;\n+\n+\t  /* This is the size of op from size of operand.  */\n \t  switch (GET_MODE_SIZE (GET_MODE (x)))\n \t    {\n \t    case 2:"}]}