{"sha": "570e2ca01e8a80aadd18eb0b85c982077e76aef4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTcwZTJjYTAxZThhODBhYWRkMThlYjBiODVjOTgyMDc3ZTc2YWVmNA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2013-04-01T21:18:05Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2013-04-01T21:18:05Z"}, "message": "re PR c++/56794 (C++11 Error in range-based for with parameter pack array)\n\n\tPR c++/56794\n\t* parser.c (cp_parser_range_for): Don't try to do auto deduction\n\tin a template if the type of the range is incomplete.\n\nFrom-SVN: r197324", "tree": {"sha": "95fd9ea2d5dcbf958c70ddc714c2b883948216a3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/95fd9ea2d5dcbf958c70ddc714c2b883948216a3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/570e2ca01e8a80aadd18eb0b85c982077e76aef4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/570e2ca01e8a80aadd18eb0b85c982077e76aef4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/570e2ca01e8a80aadd18eb0b85c982077e76aef4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/570e2ca01e8a80aadd18eb0b85c982077e76aef4/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "123d7a94342b49153722fe385b60dfd54a216aaa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/123d7a94342b49153722fe385b60dfd54a216aaa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/123d7a94342b49153722fe385b60dfd54a216aaa"}], "stats": {"total": 24, "additions": 23, "deletions": 1}, "files": [{"sha": "c7e140ed579f1d5a695a1647156719fdf2c121c9", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/570e2ca01e8a80aadd18eb0b85c982077e76aef4/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/570e2ca01e8a80aadd18eb0b85c982077e76aef4/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=570e2ca01e8a80aadd18eb0b85c982077e76aef4", "patch": "@@ -1,5 +1,9 @@\n 2013-04-01  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/56794\n+\t* parser.c (cp_parser_range_for): Don't try to do auto deduction\n+\tin a template if the type of the range is incomplete.\n+\n \t* call.c (add_function_candidate): Take the address of 'this' here.\n \t(build_over_call): And here.\n \t(build_new_method_call_1, build_op_call_1): Not here."}, {"sha": "05c03f45d27c658a24654efb0ca997e8f33ffa23", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/570e2ca01e8a80aadd18eb0b85c982077e76aef4/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/570e2ca01e8a80aadd18eb0b85c982077e76aef4/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=570e2ca01e8a80aadd18eb0b85c982077e76aef4", "patch": "@@ -9615,7 +9615,10 @@ cp_parser_range_for (cp_parser *parser, tree scope, tree init, tree range_decl)\n \trange_expr = error_mark_node;\n       stmt = begin_range_for_stmt (scope, init);\n       finish_range_for_decl (stmt, range_decl, range_expr);\n-      if (!type_dependent_expression_p (range_expr)\n+      if (range_expr != error_mark_node\n+\t  && !type_dependent_expression_p (range_expr)\n+\t  /* The length of an array might be dependent.  */\n+\t  && COMPLETE_TYPE_P (TREE_TYPE (range_expr))\n \t  /* do_auto_deduction doesn't mess with template init-lists.  */\n \t  && !BRACE_ENCLOSED_INITIALIZER_P (range_expr))\n \tdo_range_for_auto_deduction (range_decl, range_expr);"}, {"sha": "b4a5b185bd7857f5a7885f27063fdc9d59db3da2", "filename": "gcc/testsuite/g++.dg/cpp0x/range-for24.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/570e2ca01e8a80aadd18eb0b85c982077e76aef4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frange-for24.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/570e2ca01e8a80aadd18eb0b85c982077e76aef4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frange-for24.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frange-for24.C?ref=570e2ca01e8a80aadd18eb0b85c982077e76aef4", "patch": "@@ -0,0 +1,15 @@\n+// PR c++/56794\n+// { dg-require-effective-target c++11 }\n+\n+template<int... values>\n+static void Colors()\n+{\n+    static const int colors[] = { values... };\n+\n+    for(auto c: colors) { }\n+}\n+\n+int main()\n+{\n+    Colors<0,1,2> ();\n+}"}]}