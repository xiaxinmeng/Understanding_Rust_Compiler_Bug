{"sha": "54fbd24d8eee02af48624d091452d9267887f722", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTRmYmQyNGQ4ZWVlMDJhZjQ4NjI0ZDA5MTQ1MmQ5MjY3ODg3ZjcyMg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2018-02-23T13:32:41Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2018-02-23T13:32:41Z"}, "message": "PR c++/70468 - ICE with constructor delegation via typedef.\n\n\t* pt.c (tsubst_initializer_list): Check for other mem-initializers\n\twith constructor delegation.\n\nFrom-SVN: r257931", "tree": {"sha": "fbc07790e6c6abf18fbebf72473a01abcff45ac9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fbc07790e6c6abf18fbebf72473a01abcff45ac9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/54fbd24d8eee02af48624d091452d9267887f722", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54fbd24d8eee02af48624d091452d9267887f722", "html_url": "https://github.com/Rust-GCC/gccrs/commit/54fbd24d8eee02af48624d091452d9267887f722", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54fbd24d8eee02af48624d091452d9267887f722/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c287dea0c4a9319979288995e449c09184528a2f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c287dea0c4a9319979288995e449c09184528a2f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c287dea0c4a9319979288995e449c09184528a2f"}], "stats": {"total": 59, "additions": 59, "deletions": 0}, "files": [{"sha": "58710a9178735e77355992699337c4866063a9aa", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54fbd24d8eee02af48624d091452d9267887f722/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54fbd24d8eee02af48624d091452d9267887f722/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=54fbd24d8eee02af48624d091452d9267887f722", "patch": "@@ -1,3 +1,9 @@\n+2018-02-22  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/70468 - ICE with constructor delegation via typedef.\n+\t* pt.c (tsubst_initializer_list): Check for other mem-initializers\n+\twith constructor delegation.\n+\n 2018-02-22  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/84424 - ICE with constexpr and __builtin_shuffle."}, {"sha": "85d1adbbe3c3f495a97fe4bfaba496d5a1561765", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54fbd24d8eee02af48624d091452d9267887f722/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54fbd24d8eee02af48624d091452d9267887f722/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=54fbd24d8eee02af48624d091452d9267887f722", "patch": "@@ -23558,6 +23558,7 @@ static tree\n tsubst_initializer_list (tree t, tree argvec)\n {\n   tree inits = NULL_TREE;\n+  tree target_ctor = error_mark_node;\n \n   for (; t; t = TREE_CHAIN (t))\n     {\n@@ -23674,6 +23675,28 @@ tsubst_initializer_list (tree t, tree argvec)\n               in_base_initializer = 0;\n             }\n \n+\t  if (target_ctor != error_mark_node\n+\t      && init != error_mark_node)\n+\t    {\n+\t      error (\"mem-initializer for %qD follows constructor delegation\",\n+\t\t     decl);\n+\t      return inits;\n+\t    }\n+\t  /* Look for a target constructor. */\n+\t  if (init != error_mark_node\n+\t      && decl && CLASS_TYPE_P (decl)\n+\t      && same_type_p (decl, current_class_type))\n+\t    {\n+\t      maybe_warn_cpp0x (CPP0X_DELEGATING_CTORS);\n+\t      if (inits)\n+\t\t{\n+\t\t  error (\"constructor delegation follows mem-initializer for %qD\",\n+\t\t\t TREE_PURPOSE (inits));\n+\t\t  continue;\n+\t\t}\n+\t      target_ctor = init;\n+\t    }\n+\n           if (decl)\n             {\n               init = build_tree_list (decl, init);"}, {"sha": "b87f5ce618d020b83436e05bccb7d5a349223dad", "filename": "gcc/testsuite/g++.dg/cpp0x/dc9.C", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54fbd24d8eee02af48624d091452d9267887f722/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdc9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54fbd24d8eee02af48624d091452d9267887f722/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdc9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdc9.C?ref=54fbd24d8eee02af48624d091452d9267887f722", "patch": "@@ -0,0 +1,30 @@\n+// PR c++/70468\n+// { dg-do compile { target c++11 } }\n+// { dg-additional-options -w }\n+\n+struct S {}; \n+\n+template < typename = S > \n+class A \n+{\n+public:\n+  A () : f0 (), f1 () {}\t// { dg-error \"\" }\n+\n+private:\n+  typedef A<> f0; \n+  int f1;\n+};\n+\n+template < typename = S, typename = S > \n+class B\n+{\n+}; \n+\n+template < typename T1, typename T2 > \n+B < T1, T2 > &operator<< (B < T1, T2 >&, const int) \n+{\n+  A<> (); \n+}\n+\n+template \n+B < S, S > &operator<< (B < S, S >&, const int);"}]}