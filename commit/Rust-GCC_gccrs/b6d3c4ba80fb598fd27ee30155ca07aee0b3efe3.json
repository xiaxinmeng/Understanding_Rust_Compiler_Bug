{"sha": "b6d3c4ba80fb598fd27ee30155ca07aee0b3efe3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjZkM2M0YmE4MGZiNTk4ZmQyN2VlMzAxNTVjYTA3YWVlMGIzZWZlMw==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1994-08-02T18:44:45Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1994-08-02T18:44:45Z"}, "message": "(all DF/TFmode patterns): Use `e' in contraint field\ninstead of `f'.\n\nFrom-SVN: r7849", "tree": {"sha": "caff3261cd14a6d12dc1df6f8e4684ef6238f1a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/caff3261cd14a6d12dc1df6f8e4684ef6238f1a1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b6d3c4ba80fb598fd27ee30155ca07aee0b3efe3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6d3c4ba80fb598fd27ee30155ca07aee0b3efe3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b6d3c4ba80fb598fd27ee30155ca07aee0b3efe3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6d3c4ba80fb598fd27ee30155ca07aee0b3efe3/comments", "author": null, "committer": null, "parents": [{"sha": "24b63396435a68f90b24077b246b601194229a74", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24b63396435a68f90b24077b246b601194229a74", "html_url": "https://github.com/Rust-GCC/gccrs/commit/24b63396435a68f90b24077b246b601194229a74"}], "stats": {"total": 251, "additions": 128, "deletions": 123}, "files": [{"sha": "685714ea381e7a0c9489322aaa0398960076b224", "filename": "gcc/config/sparc/sparc.md", "status": "modified", "additions": 128, "deletions": 123, "changes": 251, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6d3c4ba80fb598fd27ee30155ca07aee0b3efe3/gcc%2Fconfig%2Fsparc%2Fsparc.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6d3c4ba80fb598fd27ee30155ca07aee0b3efe3/gcc%2Fconfig%2Fsparc%2Fsparc.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.md?ref=b6d3c4ba80fb598fd27ee30155ca07aee0b3efe3", "patch": "@@ -20,9 +20,14 @@\n ;; along with GNU CC; see the file COPYING.  If not, write to\n ;; the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.\n \n-\n ;;- See file \"rtl.def\" for documentation on define_insn, match_*, et. al.\n \n+;; The upper 32 fp regs on the v9 can't hold SFmode values.  To deal with this\n+;; a second register class, EXTRA_FP_REGS, exists for the v9 chip.  The name\n+;; is a bit of a misnomer as it covers all 64 fp regs.  The corresponding\n+;; constraint letter is 'e'.  To avoid any confusion, 'e' is used instead of\n+;; 'f' for all DF/TFmode values, including those that are specific to the v8.\n+\n ;; Architecture type.  Arch32bit includes v7, sparclite, v8.\n \n (define_attr \"arch\" \"arch32bit,arch64bit\"\n@@ -701,16 +706,16 @@\n \n (define_insn \"\"\n   [(set (reg:CCFPE 0)\n-\t(compare:CCFPE (match_operand:DF 0 \"register_operand\" \"f\")\n-\t\t       (match_operand:DF 1 \"register_operand\" \"f\")))]\n+\t(compare:CCFPE (match_operand:DF 0 \"register_operand\" \"e\")\n+\t\t       (match_operand:DF 1 \"register_operand\" \"e\")))]\n   \"! TARGET_V9 && TARGET_FPU\"\n   \"fcmped %0,%1\"\n   [(set_attr \"type\" \"fpcmp\")])\n \n (define_insn \"\"\n   [(set (reg:CCFPE 0)\n-\t(compare:CCFPE (match_operand:TF 0 \"register_operand\" \"f\")\n-\t\t       (match_operand:TF 1 \"register_operand\" \"f\")))]\n+\t(compare:CCFPE (match_operand:TF 0 \"register_operand\" \"e\")\n+\t\t       (match_operand:TF 1 \"register_operand\" \"e\")))]\n   \"! TARGET_V9 && TARGET_FPU && TARGET_HARD_QUAD\"\n   \"fcmpeq %0,%1\"\n   [(set_attr \"type\" \"fpcmp\")])\n@@ -725,16 +730,16 @@\n \n (define_insn \"\"\n   [(set (reg:CCFP 0)\n-\t(compare:CCFP (match_operand:DF 0 \"register_operand\" \"f\")\n-\t\t      (match_operand:DF 1 \"register_operand\" \"f\")))]\n+\t(compare:CCFP (match_operand:DF 0 \"register_operand\" \"e\")\n+\t\t      (match_operand:DF 1 \"register_operand\" \"e\")))]\n   \"! TARGET_V9 && TARGET_FPU\"\n   \"fcmpd %0,%1\"\n   [(set_attr \"type\" \"fpcmp\")])\n \n (define_insn \"\"\n   [(set (reg:CCFP 0)\n-\t(compare:CCFP (match_operand:TF 0 \"register_operand\" \"f\")\n-\t\t      (match_operand:TF 1 \"register_operand\" \"f\")))]\n+\t(compare:CCFP (match_operand:TF 0 \"register_operand\" \"e\")\n+\t\t      (match_operand:TF 1 \"register_operand\" \"e\")))]\n   \"! TARGET_V9 && TARGET_FPU && TARGET_HARD_QUAD\"\n   \"fcmpq %0,%1\"\n   [(set_attr \"type\" \"fpcmp\")])\n@@ -757,16 +762,16 @@\n \n (define_insn \"\"\n   [(set (match_operand:CCFPE 0 \"ccfp_reg_operand\" \"=c\")\n-\t(compare:CCFPE (match_operand:DF 1 \"register_operand\" \"f\")\n-\t\t       (match_operand:DF 2 \"register_operand\" \"f\")))]\n+\t(compare:CCFPE (match_operand:DF 1 \"register_operand\" \"e\")\n+\t\t       (match_operand:DF 2 \"register_operand\" \"e\")))]\n   \"TARGET_V9 && TARGET_FPU\"\n   \"fcmped %0,%1,%2\"\n   [(set_attr \"type\" \"fpcmp\")])\n \n (define_insn \"\"\n   [(set (match_operand:CCFPE 0 \"ccfp_reg_operand\" \"=c\")\n-\t(compare:CCFPE (match_operand:TF 1 \"register_operand\" \"f\")\n-\t\t       (match_operand:TF 2 \"register_operand\" \"f\")))]\n+\t(compare:CCFPE (match_operand:TF 1 \"register_operand\" \"e\")\n+\t\t       (match_operand:TF 2 \"register_operand\" \"e\")))]\n   \"TARGET_V9 && TARGET_FPU && TARGET_HARD_QUAD\"\n   \"fcmpeq %0,%1,%2\"\n   [(set_attr \"type\" \"fpcmp\")])\n@@ -781,16 +786,16 @@\n \n (define_insn \"\"\n   [(set (match_operand:CCFP 0 \"ccfp_reg_operand\" \"=c\")\n-\t(compare:CCFP (match_operand:DF 1 \"register_operand\" \"f\")\n-\t\t      (match_operand:DF 2 \"register_operand\" \"f\")))]\n+\t(compare:CCFP (match_operand:DF 1 \"register_operand\" \"e\")\n+\t\t      (match_operand:DF 2 \"register_operand\" \"e\")))]\n   \"TARGET_V9 && TARGET_FPU\"\n   \"fcmpd %0,%1,%2\"\n   [(set_attr \"type\" \"fpcmp\")])\n \n (define_insn \"\"\n   [(set (match_operand:CCFP 0 \"ccfp_reg_operand\" \"=c\")\n-\t(compare:CCFP (match_operand:TF 1 \"register_operand\" \"f\")\n-\t\t      (match_operand:TF 2 \"register_operand\" \"f\")))]\n+\t(compare:CCFP (match_operand:TF 1 \"register_operand\" \"e\")\n+\t\t      (match_operand:TF 2 \"register_operand\" \"e\")))]\n   \"TARGET_V9 && TARGET_FPU && TARGET_HARD_QUAD\"\n   \"fcmpq %0,%1,%2\"\n   [(set_attr \"type\" \"fpcmp\")])\n@@ -1969,7 +1974,7 @@\n ;; It must come before the more general movdf pattern.\n \n (define_insn \"\"\n-  [(set (match_operand:DF 0 \"general_operand\" \"=?r,f,o\")\n+  [(set (match_operand:DF 0 \"general_operand\" \"=?r,e,o\")\n \t(match_operand:DF 1 \"\" \"?E,m,G\"))]\n   \"TARGET_FPU && GET_CODE (operands[1]) == CONST_DOUBLE\"\n   \"*\n@@ -2006,8 +2011,8 @@\n }\")\n \n (define_insn \"\"\n-  [(set (match_operand:DF 0 \"reg_or_nonsymb_mem_operand\" \"=T,U,f,r,Q,Q,f,r\")\n-\t(match_operand:DF 1 \"reg_or_nonsymb_mem_operand\" \"U,T,f,r,f,r,Q,Q\"))]\n+  [(set (match_operand:DF 0 \"reg_or_nonsymb_mem_operand\" \"=T,U,e,r,Q,Q,e,r\")\n+\t(match_operand:DF 1 \"reg_or_nonsymb_mem_operand\" \"U,T,e,r,e,r,Q,Q\"))]\n   \"TARGET_FPU\n    && (register_operand (operands[0], DFmode)\n        || register_operand (operands[1], DFmode))\"\n@@ -2020,8 +2025,8 @@\n   [(set_attr \"type\" \"fpstore,fpload,fp,move,fpstore,store,fpload,load\")\n    (set_attr \"length\" \"1,1,2,2,3,3,3,3\")])\n \n-;; Exactly the same as above, except that all `f' cases are deleted.\n-;; This is necessary to prevent reload from ever trying to use a `f' reg\n+;; Exactly the same as above, except that all `e' cases are deleted.\n+;; This is necessary to prevent reload from ever trying to use a `e' reg\n ;; when -mno-fpu.\n \n (define_insn \"\"\n@@ -2049,7 +2054,7 @@\n \n (define_insn \"\"\n   [(set (mem:DF (match_operand:SI 0 \"symbolic_operand\" \"i,i\"))\n-\t(match_operand:DF 1 \"reg_or_0_operand\" \"rf,G\"))\n+\t(match_operand:DF 1 \"reg_or_0_operand\" \"re,G\"))\n    (clobber (match_scratch:SI 2 \"=&r,&r\"))]\n   \"(reload_completed || reload_in_progress) && ! TARGET_PTR64\"\n   \"*\n@@ -2067,7 +2072,7 @@\n ;; to be reloaded by putting the constant into memory.\n ;; It must come before the more general movtf pattern.\n (define_insn \"\"\n-  [(set (match_operand:TF 0 \"general_operand\" \"=?r,f,o\")\n+  [(set (match_operand:TF 0 \"general_operand\" \"=?r,e,o\")\n \t(match_operand:TF 1 \"\" \"?E,m,G\"))]\n   \"TARGET_FPU && GET_CODE (operands[1]) == CONST_DOUBLE\"\n   \"*\n@@ -2108,8 +2113,8 @@\n }\")\n \n (define_insn \"\"\n-  [(set (match_operand:TF 0 \"reg_or_nonsymb_mem_operand\" \"=f,r,Q,Q,f,&r\")\n-\t(match_operand:TF 1 \"reg_or_nonsymb_mem_operand\" \"f,r,f,r,Q,Q\"))]\n+  [(set (match_operand:TF 0 \"reg_or_nonsymb_mem_operand\" \"=e,r,Q,Q,e,&r\")\n+\t(match_operand:TF 1 \"reg_or_nonsymb_mem_operand\" \"e,r,e,r,Q,Q\"))]\n   \"TARGET_FPU\n    && (register_operand (operands[0], TFmode)\n        || register_operand (operands[1], TFmode))\"\n@@ -2122,8 +2127,8 @@\n   [(set_attr \"type\" \"fp,move,fpstore,store,fpload,load\")\n    (set_attr \"length\" \"4,4,5,5,5,5\")])\n \n-;; Exactly the same as above, except that all `f' cases are deleted.\n-;; This is necessary to prevent reload from ever trying to use a `f' reg\n+;; Exactly the same as above, except that all `e' cases are deleted.\n+;; This is necessary to prevent reload from ever trying to use a `e' reg\n ;; when -mno-fpu.\n \n (define_insn \"\"\n@@ -2143,7 +2148,7 @@\n \n (define_insn \"\"\n   [(set (mem:TF (match_operand:SI 0 \"symbolic_operand\" \"i,i\"))\n-\t(match_operand:TF 1 \"reg_or_0_operand\" \"rf,G\"))\n+\t(match_operand:TF 1 \"reg_or_0_operand\" \"re,G\"))\n    (clobber (match_scratch:SI 2 \"=&r,&r\"))]\n   \"(reload_completed || reload_in_progress) && ! TARGET_PTR64\"\n   \"*\n@@ -2282,22 +2287,22 @@\n   [(set_attr \"type\" \"cmove\")])\n \n (define_insn \"\"\n-  [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n+  [(set (match_operand:DF 0 \"register_operand\" \"=e\")\n \t(if_then_else (match_operator 1 \"v9_regcmp_op\"\n \t\t\t\t[(match_operand:DI 2 \"register_operand\" \"r\")\n \t\t\t\t (const_int 0)])\n-\t\t      (match_operand:DF 3 \"register_operand\" \"f\")\n+\t\t      (match_operand:DF 3 \"register_operand\" \"e\")\n \t\t      (match_operand:DF 4 \"register_operand\" \"0\")))]\n   \"TARGET_V9 && TARGET_FPU\"\n   \"fmovrd%D1 %2,%r3,%0\"\n   [(set_attr \"type\" \"cmove\")])\n \n (define_insn \"\"\n-  [(set (match_operand:TF 0 \"register_operand\" \"=f\")\n+  [(set (match_operand:TF 0 \"register_operand\" \"=e\")\n \t(if_then_else (match_operator 1 \"v9_regcmp_op\"\n \t\t\t\t[(match_operand:DI 2 \"register_operand\" \"r\")\n \t\t\t\t (const_int 0)])\n-\t\t      (match_operand:TF 3 \"register_operand\" \"f\")\n+\t\t      (match_operand:TF 3 \"register_operand\" \"e\")\n \t\t      (match_operand:TF 4 \"register_operand\" \"0\")))]\n   \"TARGET_V9 && TARGET_FPU\"\n   \"fmovrq%D1 %2,%r3,%0\"\n@@ -2326,44 +2331,44 @@\n   [(set_attr \"type\" \"cmove\")])\n \n (define_insn \"\"\n-  [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n+  [(set (match_operand:DF 0 \"register_operand\" \"=e\")\n \t(if_then_else (match_operator 1 \"comparison_operator\"\n \t\t\t\t[(match_operand:CCFP 2 \"ccfp_reg_operand\" \"c\")\n \t\t\t\t (const_int 0)])\n-\t\t      (match_operand:DF 3 \"register_operand\" \"f\")\n+\t\t      (match_operand:DF 3 \"register_operand\" \"e\")\n \t\t      (match_operand:DF 4 \"register_operand\" \"0\")))]\n   \"TARGET_V9 && TARGET_FPU\"\n   \"fmovd%C1 %2,%3,%0\"\n   [(set_attr \"type\" \"cmove\")])\n \n (define_insn \"\"\n-  [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n+  [(set (match_operand:DF 0 \"register_operand\" \"=e\")\n \t(if_then_else (match_operator 1 \"comparison_operator\"\n \t\t\t\t[(match_operand:CCFPE 2 \"ccfp_reg_operand\" \"c\")\n \t\t\t\t (const_int 0)])\n-\t\t      (match_operand:DF 3 \"register_operand\" \"f\")\n+\t\t      (match_operand:DF 3 \"register_operand\" \"e\")\n \t\t      (match_operand:DF 4 \"register_operand\" \"0\")))]\n   \"TARGET_V9 && TARGET_FPU\"\n   \"fmovd%C1 %2,%3,%0\"\n   [(set_attr \"type\" \"cmove\")])\n \n (define_insn \"\"\n-  [(set (match_operand:TF 0 \"register_operand\" \"=f\")\n+  [(set (match_operand:TF 0 \"register_operand\" \"=e\")\n \t(if_then_else (match_operator 1 \"comparison_operator\"\n \t\t\t\t[(match_operand:CCFP 2 \"ccfp_reg_operand\" \"c\")\n \t\t\t\t (const_int 0)])\n-\t\t      (match_operand:TF 3 \"register_operand\" \"f\")\n+\t\t      (match_operand:TF 3 \"register_operand\" \"e\")\n \t\t      (match_operand:TF 4 \"register_operand\" \"0\")))]\n   \"TARGET_V9 && TARGET_FPU\"\n   \"fmovq%C1 %2,%3,%0\"\n   [(set_attr \"type\" \"cmove\")])\n \n (define_insn \"\"\n-  [(set (match_operand:TF 0 \"register_operand\" \"=f\")\n+  [(set (match_operand:TF 0 \"register_operand\" \"=e\")\n \t(if_then_else (match_operator 1 \"comparison_operator\"\n \t\t\t\t[(match_operand:CCFPE 2 \"ccfp_reg_operand\" \"c\")\n \t\t\t\t (const_int 0)])\n-\t\t      (match_operand:TF 3 \"register_operand\" \"f\")\n+\t\t      (match_operand:TF 3 \"register_operand\" \"e\")\n \t\t      (match_operand:TF 4 \"register_operand\" \"0\")))]\n   \"TARGET_V9 && TARGET_FPU\"\n   \"fmovq%C1 %2,%3,%0\"\n@@ -2380,20 +2385,20 @@\n   [(set_attr \"type\" \"cmove\")])\n \n (define_insn \"\"\n-  [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n+  [(set (match_operand:DF 0 \"register_operand\" \"=e\")\n \t(if_then_else (match_operator 1 \"comparison_operator\"\n \t\t\t\t      [(reg:CC 0) (const_int 0)])\n-\t\t      (match_operand:DF 2 \"register_operand\" \"f\")\n+\t\t      (match_operand:DF 2 \"register_operand\" \"e\")\n \t\t      (match_operand:DF 3 \"register_operand\" \"0\")))]\n   \"TARGET_V9 && TARGET_FPU\"\n   \"fmovd%C1 %%icc,%2,%0\"\n   [(set_attr \"type\" \"cmove\")])\n \n (define_insn \"\"\n-  [(set (match_operand:TF 0 \"register_operand\" \"=f\")\n+  [(set (match_operand:TF 0 \"register_operand\" \"=e\")\n \t(if_then_else (match_operator 1 \"comparison_operator\"\n \t\t\t\t      [(reg:CC 0) (const_int 0)])\n-\t\t      (match_operand:TF 2 \"register_operand\" \"f\")\n+\t\t      (match_operand:TF 2 \"register_operand\" \"e\")\n \t\t      (match_operand:TF 3 \"register_operand\" \"0\")))]\n   \"TARGET_V9 && TARGET_FPU\"\n   \"fmovq%C1 %%icc,%2,%0\"\n@@ -2410,20 +2415,20 @@\n   [(set_attr \"type\" \"cmove\")])\n \n (define_insn \"\"\n-  [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n+  [(set (match_operand:DF 0 \"register_operand\" \"=e\")\n \t(if_then_else (match_operator 1 \"comparison_operator\"\n \t\t\t\t      [(reg:CCX 0) (const_int 0)])\n-\t\t      (match_operand:DF 2 \"register_operand\" \"f\")\n+\t\t      (match_operand:DF 2 \"register_operand\" \"e\")\n \t\t      (match_operand:DF 3 \"register_operand\" \"0\")))]\n   \"TARGET_V9 && TARGET_FPU\"\n   \"fmovd%C1 %%xcc,%2,%0\"\n   [(set_attr \"type\" \"cmove\")])\n \n (define_insn \"\"\n-  [(set (match_operand:TF 0 \"register_operand\" \"=f\")\n+  [(set (match_operand:TF 0 \"register_operand\" \"=e\")\n \t(if_then_else (match_operator 1 \"comparison_operator\"\n \t\t\t\t      [(reg:CCX 0) (const_int 0)])\n-\t\t      (match_operand:TF 2 \"register_operand\" \"f\")\n+\t\t      (match_operand:TF 2 \"register_operand\" \"e\")\n \t\t      (match_operand:TF 3 \"register_operand\" \"0\")))]\n   \"TARGET_V9 && TARGET_FPU\"\n   \"fmovq%C1 %%xcc,%2,%0\"\n@@ -2822,49 +2827,49 @@\n ;; Conversions between float, double and long double.\n \n (define_insn \"extendsfdf2\"\n-  [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n+  [(set (match_operand:DF 0 \"register_operand\" \"=e\")\n \t(float_extend:DF\n \t (match_operand:SF 1 \"register_operand\" \"f\")))]\n   \"TARGET_FPU\"\n   \"fstod %1,%0\"\n   [(set_attr \"type\" \"fp\")])\n \n (define_insn \"extendsftf2\"\n-  [(set (match_operand:TF 0 \"register_operand\" \"=f\")\n+  [(set (match_operand:TF 0 \"register_operand\" \"=e\")\n \t(float_extend:TF\n \t (match_operand:SF 1 \"register_operand\" \"f\")))]\n   \"TARGET_FPU && TARGET_HARD_QUAD\"\n   \"fstoq %1,%0\"\n   [(set_attr \"type\" \"fp\")])\n \n (define_insn \"extenddftf2\"\n-  [(set (match_operand:TF 0 \"register_operand\" \"=f\")\n+  [(set (match_operand:TF 0 \"register_operand\" \"=e\")\n \t(float_extend:TF\n-\t (match_operand:DF 1 \"register_operand\" \"f\")))]\n+\t (match_operand:DF 1 \"register_operand\" \"e\")))]\n   \"TARGET_FPU && TARGET_HARD_QUAD\"\n   \"fdtoq %1,%0\"\n   [(set_attr \"type\" \"fp\")])\n \n (define_insn \"truncdfsf2\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n \t(float_truncate:SF\n-\t (match_operand:DF 1 \"register_operand\" \"f\")))]\n+\t (match_operand:DF 1 \"register_operand\" \"e\")))]\n   \"TARGET_FPU\"\n   \"fdtos %1,%0\"\n   [(set_attr \"type\" \"fp\")])\n \n (define_insn \"trunctfsf2\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n \t(float_truncate:SF\n-\t (match_operand:TF 1 \"register_operand\" \"f\")))]\n+\t (match_operand:TF 1 \"register_operand\" \"e\")))]\n   \"TARGET_FPU && TARGET_HARD_QUAD\"\n   \"fqtos %1,%0\"\n   [(set_attr \"type\" \"fp\")])\n \n (define_insn \"trunctfdf2\"\n-  [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n+  [(set (match_operand:DF 0 \"register_operand\" \"=e\")\n \t(float_truncate:DF\n-\t (match_operand:TF 1 \"register_operand\" \"f\")))]\n+\t (match_operand:TF 1 \"register_operand\" \"e\")))]\n   \"TARGET_FPU && TARGET_HARD_QUAD\"\n   \"fqtod %1,%0\"\n   [(set_attr \"type\" \"fp\")])\n@@ -2879,14 +2884,14 @@\n   [(set_attr \"type\" \"fp\")])\n \n (define_insn \"floatsidf2\"\n-  [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n+  [(set (match_operand:DF 0 \"register_operand\" \"=e\")\n \t(float:DF (match_operand:SI 1 \"register_operand\" \"f\")))]\n   \"TARGET_FPU\"\n   \"fitod %1,%0\"\n   [(set_attr \"type\" \"fp\")])\n \n (define_insn \"floatsitf2\"\n-  [(set (match_operand:TF 0 \"register_operand\" \"=f\")\n+  [(set (match_operand:TF 0 \"register_operand\" \"=e\")\n \t(float:TF (match_operand:SI 1 \"register_operand\" \"f\")))]\n   \"TARGET_FPU && TARGET_HARD_QUAD\"\n   \"fitoq %1,%0\"\n@@ -2934,7 +2939,7 @@\n (define_insn \"\"\n   [(parallel [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n \t\t   (float:SF (match_operand:DI 1 \"general_operand\" \"rm\")))\n-\t      (clobber (match_operand:DF 2 \"register_operand\" \"=&f\"))\n+\t      (clobber (match_operand:DF 2 \"register_operand\" \"=&e\"))\n \t      (clobber (match_operand:DI 3 \"memory_operand\" \"m\"))])]\n   \"TARGET_V9 && TARGET_FPU\"\n   \"*\n@@ -2949,9 +2954,9 @@\n    (set_attr \"length\" \"3\")])\n \n (define_insn \"\"\n-  [(parallel [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n+  [(parallel [(set (match_operand:DF 0 \"register_operand\" \"=e\")\n \t\t   (float:DF (match_operand:DI 1 \"general_operand\" \"rm\")))\n-\t      (clobber (match_operand:DF 2 \"register_operand\" \"=&f\"))\n+\t      (clobber (match_operand:DF 2 \"register_operand\" \"=&e\"))\n \t      (clobber (match_operand:DI 3 \"memory_operand\" \"m\"))])]\n   \"TARGET_V9 && TARGET_FPU\"\n   \"*\n@@ -2966,9 +2971,9 @@\n    (set_attr \"length\" \"3\")])\n \n (define_insn \"\"\n-  [(parallel [(set (match_operand:TF 0 \"register_operand\" \"=f\")\n+  [(parallel [(set (match_operand:TF 0 \"register_operand\" \"=e\")\n \t\t   (float:TF (match_operand:DI 1 \"general_operand\" \"rm\")))\n-\t      (clobber (match_operand:DF 2 \"register_operand\" \"=&f\"))\n+\t      (clobber (match_operand:DF 2 \"register_operand\" \"=&e\"))\n \t      (clobber (match_operand:DI 3 \"memory_operand\" \"m\"))])]\n   \"TARGET_V9 && TARGET_FPU && TARGET_HARD_QUAD\"\n   \"*\n@@ -2986,21 +2991,21 @@\n \n (define_insn \"floatdisf2_v9\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n-\t(float:SF (match_operand:DI 1 \"register_operand\" \"f\")))]\n+\t(float:SF (match_operand:DI 1 \"register_operand\" \"e\")))]\n   \"0 && TARGET_V9 && TARGET_FPU\"\n   \"fxtos %1,%0\"\n   [(set_attr \"type\" \"fp\")])\n \n (define_insn \"floatdidf2_v9\"\n-  [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n-\t(float:DF (match_operand:DI 1 \"register_operand\" \"f\")))]\n+  [(set (match_operand:DF 0 \"register_operand\" \"=e\")\n+\t(float:DF (match_operand:DI 1 \"register_operand\" \"e\")))]\n   \"0 && TARGET_V9 && TARGET_FPU\"\n   \"fxtod %1,%0\"\n   [(set_attr \"type\" \"fp\")])\n \n (define_insn \"floatditf2_v9\"\n-  [(set (match_operand:TF 0 \"register_operand\" \"=f\")\n-\t(float:TF (match_operand:DI 1 \"register_operand\" \"f\")))]\n+  [(set (match_operand:TF 0 \"register_operand\" \"=e\")\n+\t(float:TF (match_operand:DI 1 \"register_operand\" \"e\")))]\n   \"0 && TARGET_V9 && TARGET_FPU && TARGET_HARD_QUAD\"\n   \"fxtoq %1,%0\"\n   [(set_attr \"type\" \"fp\")])\n@@ -3017,14 +3022,14 @@\n \n (define_insn \"fix_truncdfsi2\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=f\")\n-\t(fix:SI (fix:DF (match_operand:DF 1 \"register_operand\" \"f\"))))]\n+\t(fix:SI (fix:DF (match_operand:DF 1 \"register_operand\" \"e\"))))]\n   \"TARGET_FPU\"\n   \"fdtoi %1,%0\"\n   [(set_attr \"type\" \"fp\")])\n \n (define_insn \"fix_trunctfsi2\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=f\")\n-\t(fix:SI (fix:TF (match_operand:TF 1 \"register_operand\" \"f\"))))]\n+\t(fix:SI (fix:TF (match_operand:TF 1 \"register_operand\" \"e\"))))]\n   \"TARGET_FPU && TARGET_HARD_QUAD\"\n   \"fqtoi %1,%0\"\n   [(set_attr \"type\" \"fp\")])\n@@ -3076,7 +3081,7 @@\n (define_insn \"\"\n   [(parallel [(set (match_operand:DI 0 \"general_operand\" \"=rm\")\n \t\t   (fix:DI (fix:SF (match_operand:SF 1 \"register_operand\" \"f\"))))\n-\t      (clobber (match_operand:DF 2 \"register_operand\" \"=&f\"))\n+\t      (clobber (match_operand:DF 2 \"register_operand\" \"=&e\"))\n \t      (clobber (match_operand:DI 3 \"memory_operand\" \"m\"))])]\n   \"TARGET_V9 && TARGET_FPU\"\n   \"*\n@@ -3092,8 +3097,8 @@\n \n (define_insn \"\"\n   [(parallel [(set (match_operand:DI 0 \"general_operand\" \"=rm\")\n-\t\t   (fix:DI (fix:DF (match_operand:DF 1 \"register_operand\" \"f\"))))\n-\t      (clobber (match_operand:DF 2 \"register_operand\" \"=&f\"))\n+\t\t   (fix:DI (fix:DF (match_operand:DF 1 \"register_operand\" \"e\"))))\n+\t      (clobber (match_operand:DF 2 \"register_operand\" \"=&e\"))\n \t      (clobber (match_operand:DI 3 \"memory_operand\" \"m\"))])]\n   \"TARGET_V9 && TARGET_FPU\"\n   \"*\n@@ -3109,8 +3114,8 @@\n \n (define_insn \"\"\n   [(parallel [(set (match_operand:DI 0 \"general_operand\" \"=rm\")\n-\t\t   (fix:DI (fix:TF (match_operand:TF 1 \"register_operand\" \"f\"))))\n-\t      (clobber (match_operand:DF 2 \"register_operand\" \"=&f\"))\n+\t\t   (fix:DI (fix:TF (match_operand:TF 1 \"register_operand\" \"e\"))))\n+\t      (clobber (match_operand:DF 2 \"register_operand\" \"=&e\"))\n \t      (clobber (match_operand:DI 3 \"memory_operand\" \"m\"))])]\n   \"TARGET_V9 && TARGET_FPU && TARGET_HARD_QUAD\"\n   \"*\n@@ -3127,22 +3132,22 @@\n ;; ??? Ideally, these are what we would like to use.\n \n (define_insn \"fix_truncsfdi2_v9\"\n-  [(set (match_operand:DI 0 \"register_operand\" \"=f\")\n+  [(set (match_operand:DI 0 \"register_operand\" \"=e\")\n \t(fix:DI (fix:SF (match_operand:SF 1 \"register_operand\" \"f\"))))]\n   \"0 && TARGET_V9 && TARGET_FPU\"\n   \"fstox %1,%0\"\n   [(set_attr \"type\" \"fp\")])\n \n (define_insn \"fix_truncdfdi2_v9\"\n-  [(set (match_operand:DI 0 \"register_operand\" \"=f\")\n-\t(fix:DI (fix:DF (match_operand:DF 1 \"register_operand\" \"f\"))))]\n+  [(set (match_operand:DI 0 \"register_operand\" \"=e\")\n+\t(fix:DI (fix:DF (match_operand:DF 1 \"register_operand\" \"e\"))))]\n   \"0 && TARGET_V9 && TARGET_FPU\"\n   \"fdtox %1,%0\"\n   [(set_attr \"type\" \"fp\")])\n \n (define_insn \"fix_trunctfdi2_v9\"\n-  [(set (match_operand:DI 0 \"register_operand\" \"=f\")\n-\t(fix:DI (fix:TF (match_operand:TF 1 \"register_operand\" \"f\"))))]\n+  [(set (match_operand:DI 0 \"register_operand\" \"=e\")\n+\t(fix:DI (fix:TF (match_operand:TF 1 \"register_operand\" \"e\"))))]\n   \"0 && TARGET_V9 && TARGET_FPU && TARGET_HARD_QUAD\"\n   \"fqtox %1,%0\"\n   [(set_attr \"type\" \"fp\")])\n@@ -4179,17 +4184,17 @@\n ;; Floating point arithmetic instructions.\n \n (define_insn \"addtf3\"\n-  [(set (match_operand:TF 0 \"register_operand\" \"=f\")\n-\t(plus:TF (match_operand:TF 1 \"register_operand\" \"f\")\n-\t\t (match_operand:TF 2 \"register_operand\" \"f\")))]\n+  [(set (match_operand:TF 0 \"register_operand\" \"=e\")\n+\t(plus:TF (match_operand:TF 1 \"register_operand\" \"e\")\n+\t\t (match_operand:TF 2 \"register_operand\" \"e\")))]\n   \"TARGET_FPU && TARGET_HARD_QUAD\"\n   \"faddq %1,%2,%0\"\n   [(set_attr \"type\" \"fp\")])\n \n (define_insn \"adddf3\"\n-  [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n-\t(plus:DF (match_operand:DF 1 \"register_operand\" \"f\")\n-\t\t (match_operand:DF 2 \"register_operand\" \"f\")))]\n+  [(set (match_operand:DF 0 \"register_operand\" \"=e\")\n+\t(plus:DF (match_operand:DF 1 \"register_operand\" \"e\")\n+\t\t (match_operand:DF 2 \"register_operand\" \"e\")))]\n   \"TARGET_FPU\"\n   \"faddd %1,%2,%0\"\n   [(set_attr \"type\" \"fp\")])\n@@ -4203,17 +4208,17 @@\n   [(set_attr \"type\" \"fp\")])\n \n (define_insn \"subtf3\"\n-  [(set (match_operand:TF 0 \"register_operand\" \"=f\")\n-\t(minus:TF (match_operand:TF 1 \"register_operand\" \"f\")\n-\t\t  (match_operand:TF 2 \"register_operand\" \"f\")))]\n+  [(set (match_operand:TF 0 \"register_operand\" \"=e\")\n+\t(minus:TF (match_operand:TF 1 \"register_operand\" \"e\")\n+\t\t  (match_operand:TF 2 \"register_operand\" \"e\")))]\n   \"TARGET_FPU && TARGET_HARD_QUAD\"\n   \"fsubq %1,%2,%0\"\n   [(set_attr \"type\" \"fp\")])\n \n (define_insn \"subdf3\"\n-  [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n-\t(minus:DF (match_operand:DF 1 \"register_operand\" \"f\")\n-\t\t  (match_operand:DF 2 \"register_operand\" \"f\")))]\n+  [(set (match_operand:DF 0 \"register_operand\" \"=e\")\n+\t(minus:DF (match_operand:DF 1 \"register_operand\" \"e\")\n+\t\t  (match_operand:DF 2 \"register_operand\" \"e\")))]\n   \"TARGET_FPU\"\n   \"fsubd %1,%2,%0\"\n   [(set_attr \"type\" \"fp\")])\n@@ -4227,17 +4232,17 @@\n   [(set_attr \"type\" \"fp\")])\n \n (define_insn \"multf3\"\n-  [(set (match_operand:TF 0 \"register_operand\" \"=f\")\n-\t(mult:TF (match_operand:TF 1 \"register_operand\" \"f\")\n-\t\t (match_operand:TF 2 \"register_operand\" \"f\")))]\n+  [(set (match_operand:TF 0 \"register_operand\" \"=e\")\n+\t(mult:TF (match_operand:TF 1 \"register_operand\" \"e\")\n+\t\t (match_operand:TF 2 \"register_operand\" \"e\")))]\n   \"TARGET_FPU && TARGET_HARD_QUAD\"\n   \"fmulq %1,%2,%0\"\n   [(set_attr \"type\" \"fpmul\")])\n \n (define_insn \"muldf3\"\n-  [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n-\t(mult:DF (match_operand:DF 1 \"register_operand\" \"f\")\n-\t\t (match_operand:DF 2 \"register_operand\" \"f\")))]\n+  [(set (match_operand:DF 0 \"register_operand\" \"=e\")\n+\t(mult:DF (match_operand:DF 1 \"register_operand\" \"e\")\n+\t\t (match_operand:DF 2 \"register_operand\" \"e\")))]\n   \"TARGET_FPU\"\n   \"fmuld %1,%2,%0\"\n   [(set_attr \"type\" \"fpmul\")])\n@@ -4251,34 +4256,34 @@\n   [(set_attr \"type\" \"fpmul\")])\n \n (define_insn \"\"\n-  [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n+  [(set (match_operand:DF 0 \"register_operand\" \"=e\")\n \t(mult:DF (float_extend:DF (match_operand:SF 1 \"register_operand\" \"f\"))\n \t\t (float_extend:DF (match_operand:SF 2 \"register_operand\" \"f\"))))]\n   \"(TARGET_V8 || TARGET_V9) && TARGET_FPU\"\n   \"fsmuld %1,%2,%0\"\n   [(set_attr \"type\" \"fpmul\")])\n \n (define_insn \"\"\n-  [(set (match_operand:TF 0 \"register_operand\" \"=f\")\n-\t(mult:TF (float_extend:TF (match_operand:DF 1 \"register_operand\" \"f\"))\n-\t\t (float_extend:TF (match_operand:DF 2 \"register_operand\" \"f\"))))]\n+  [(set (match_operand:TF 0 \"register_operand\" \"=e\")\n+\t(mult:TF (float_extend:TF (match_operand:DF 1 \"register_operand\" \"e\"))\n+\t\t (float_extend:TF (match_operand:DF 2 \"register_operand\" \"e\"))))]\n   \"(TARGET_V8 || TARGET_V9) && TARGET_FPU\"\n   \"fdmulq %1,%2,%0\"\n   [(set_attr \"type\" \"fpmul\")])\n \n ;; don't have timing for quad-prec. divide.\n (define_insn \"divtf3\"\n-  [(set (match_operand:TF 0 \"register_operand\" \"=f\")\n-\t(div:TF (match_operand:TF 1 \"register_operand\" \"f\")\n-\t\t(match_operand:TF 2 \"register_operand\" \"f\")))]\n+  [(set (match_operand:TF 0 \"register_operand\" \"=e\")\n+\t(div:TF (match_operand:TF 1 \"register_operand\" \"e\")\n+\t\t(match_operand:TF 2 \"register_operand\" \"e\")))]\n   \"TARGET_FPU && TARGET_HARD_QUAD\"\n   \"fdivq %1,%2,%0\"\n   [(set_attr \"type\" \"fpdivd\")])\n \n (define_insn \"divdf3\"\n-  [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n-\t(div:DF (match_operand:DF 1 \"register_operand\" \"f\")\n-\t\t(match_operand:DF 2 \"register_operand\" \"f\")))]\n+  [(set (match_operand:DF 0 \"register_operand\" \"=e\")\n+\t(div:DF (match_operand:DF 1 \"register_operand\" \"e\")\n+\t\t(match_operand:DF 2 \"register_operand\" \"e\")))]\n   \"TARGET_FPU\"\n   \"fdivd %1,%2,%0\"\n   [(set_attr \"type\" \"fpdivd\")])\n@@ -4292,8 +4297,8 @@\n   [(set_attr \"type\" \"fpdivs\")])\n \n (define_insn \"negtf2\"\n-  [(set (match_operand:TF 0 \"register_operand\" \"=f,f\")\n-\t(neg:TF (match_operand:TF 1 \"register_operand\" \"0,f\")))]\n+  [(set (match_operand:TF 0 \"register_operand\" \"=e,e\")\n+\t(neg:TF (match_operand:TF 1 \"register_operand\" \"0,e\")))]\n   \"TARGET_FPU\"\n   \"*\n {\n@@ -4310,8 +4315,8 @@\n       (if_then_else (eq_attr \"arch\" \"arch32bit\") (const_int 4) (const_int 1))])])\n \n (define_insn \"negdf2\"\n-  [(set (match_operand:DF 0 \"register_operand\" \"=f,f\")\n-\t(neg:DF (match_operand:DF 1 \"register_operand\" \"0,f\")))]\n+  [(set (match_operand:DF 0 \"register_operand\" \"=e,e\")\n+\t(neg:DF (match_operand:DF 1 \"register_operand\" \"0,e\")))]\n   \"TARGET_FPU\"\n   \"*\n {\n@@ -4335,8 +4340,8 @@\n   [(set_attr \"type\" \"fp\")])\n \n (define_insn \"abstf2\"\n-  [(set (match_operand:TF 0 \"register_operand\" \"=f,f\")\n-\t(abs:TF (match_operand:TF 1 \"register_operand\" \"0,f\")))]\n+  [(set (match_operand:TF 0 \"register_operand\" \"=e,e\")\n+\t(abs:TF (match_operand:TF 1 \"register_operand\" \"0,e\")))]\n   \"TARGET_FPU\"\n   \"*\n {\n@@ -4353,8 +4358,8 @@\n       (if_then_else (eq_attr \"arch\" \"arch32bit\") (const_int 4) (const_int 1))])])\n \n (define_insn \"absdf2\"\n-  [(set (match_operand:DF 0 \"register_operand\" \"=f,f\")\n-\t(abs:DF (match_operand:DF 1 \"register_operand\" \"0,f\")))]\n+  [(set (match_operand:DF 0 \"register_operand\" \"=e,e\")\n+\t(abs:DF (match_operand:DF 1 \"register_operand\" \"0,e\")))]\n   \"TARGET_FPU\"\n   \"*\n {\n@@ -4378,15 +4383,15 @@\n   [(set_attr \"type\" \"fp\")])\n \n (define_insn \"sqrttf2\"\n-  [(set (match_operand:TF 0 \"register_operand\" \"=f\")\n-\t(sqrt:TF (match_operand:TF 1 \"register_operand\" \"f\")))]\n+  [(set (match_operand:TF 0 \"register_operand\" \"=e\")\n+\t(sqrt:TF (match_operand:TF 1 \"register_operand\" \"e\")))]\n   \"TARGET_FPU && TARGET_HARD_QUAD\"\n   \"fsqrtq %1,%0\"\n   [(set_attr \"type\" \"fpsqrt\")])\n \n (define_insn \"sqrtdf2\"\n-  [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n-\t(sqrt:DF (match_operand:DF 1 \"register_operand\" \"f\")))]\n+  [(set (match_operand:DF 0 \"register_operand\" \"=e\")\n+\t(sqrt:DF (match_operand:DF 1 \"register_operand\" \"e\")))]\n   \"TARGET_FPU\"\n   \"fsqrtd %1,%0\"\n   [(set_attr \"type\" \"fpsqrt\")])\n@@ -5010,7 +5015,7 @@\n   \"\"\n   \"\n {\n-  /* Trap instruction to flush all the registers window.  */\n+  /* Trap instruction to flush all the register windows.  */\n   emit_insn (gen_flush_register_windows ());\n   /* Load the fp value for the containing fn into %fp.\n      This is needed because operands[2] refers to %fp.\n@@ -5478,7 +5483,7 @@\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n \t(lo_sum:SI (match_dup 0)\n \t\t   (match_operand:SI 1 \"immediate_operand\" \"i\")))\n-   (set (match_operand:DF 2 \"register_operand\" \"=fr\")\n+   (set (match_operand:DF 2 \"register_operand\" \"=er\")\n \t(mem:DF (match_dup 0)))]\n   \"RTX_UNCHANGING_P (operands[1]) && reg_unused_after (operands[0], insn)\"\n   \"*"}]}