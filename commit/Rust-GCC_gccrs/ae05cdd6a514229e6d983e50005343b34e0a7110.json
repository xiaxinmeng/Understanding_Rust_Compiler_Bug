{"sha": "ae05cdd6a514229e6d983e50005343b34e0a7110", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWUwNWNkZDZhNTE0MjI5ZTZkOTgzZTUwMDA1MzQzYjM0ZTBhNzExMA==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2013-01-04T09:12:00Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-01-04T09:12:00Z"}, "message": "exp_prag.adb, [...]: Minor reformatting.\n\n2013-01-04  Robert Dewar  <dewar@adacore.com>\n\n\t* exp_prag.adb, gnatcmd.adb, exp_util.adb, table.adb, sem_prag.adb,\n\tfreeze.adb, sem_ch4.adb, sem_warn.adb, opt.ads, exp_aggr.adb,\n\tprj-conf.adb, sem_ch13.adb: Minor reformatting.\n\nFrom-SVN: r194888", "tree": {"sha": "ebd210105c51af2cd0a248f2210c7c8e00c4e6f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ebd210105c51af2cd0a248f2210c7c8e00c4e6f1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ae05cdd6a514229e6d983e50005343b34e0a7110", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae05cdd6a514229e6d983e50005343b34e0a7110", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae05cdd6a514229e6d983e50005343b34e0a7110", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae05cdd6a514229e6d983e50005343b34e0a7110/comments", "author": null, "committer": null, "parents": [{"sha": "3a3af4c32cf7d5f4caf79031da89bc6972cdfbd3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a3af4c32cf7d5f4caf79031da89bc6972cdfbd3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a3af4c32cf7d5f4caf79031da89bc6972cdfbd3"}], "stats": {"total": 185, "additions": 99, "deletions": 86}, "files": [{"sha": "f765a8eab359f3f5f22195025dc3ce59539d734a", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae05cdd6a514229e6d983e50005343b34e0a7110/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae05cdd6a514229e6d983e50005343b34e0a7110/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=ae05cdd6a514229e6d983e50005343b34e0a7110", "patch": "@@ -1,3 +1,9 @@\n+2013-01-04  Robert Dewar  <dewar@adacore.com>\n+\n+\t* exp_prag.adb, gnatcmd.adb, exp_util.adb, table.adb, sem_prag.adb,\n+\tfreeze.adb, sem_ch4.adb, sem_warn.adb, opt.ads, exp_aggr.adb,\n+\tprj-conf.adb, sem_ch13.adb: Minor reformatting.\n+\n 2013-01-04  Thomas Quinot  <quinot@adacore.com>\n \n \t* sinfo.ads: Minor documentation update."}, {"sha": "3b9d06febac1aa4670a82c6ee5ba68c1fb81c8b2", "filename": "gcc/ada/exp_aggr.adb", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae05cdd6a514229e6d983e50005343b34e0a7110/gcc%2Fada%2Fexp_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae05cdd6a514229e6d983e50005343b34e0a7110/gcc%2Fada%2Fexp_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_aggr.adb?ref=ae05cdd6a514229e6d983e50005343b34e0a7110", "patch": "@@ -2962,9 +2962,10 @@ package body Exp_Aggr is\n       Node_After : Node_Id)\n    is\n       Loc          : constant Source_Ptr := Sloc (N);\n+      Init_Actions : constant List_Id    := New_List;\n       Init_Node    : Node_Id;\n       EA           : Node_Id;\n-      Init_Actions : constant List_Id := New_List;\n+\n    begin\n       --  Nothing to do if Obj is already frozen, as in this case we known we\n       --  won't need to move the initialization statements about later on.\n@@ -2974,15 +2975,15 @@ package body Exp_Aggr is\n       end if;\n \n       Init_Node := N;\n-\n       while Next (Init_Node) /= Node_After loop\n          Append_To (Init_Actions, Remove_Next (Init_Node));\n       end loop;\n \n       if not Is_Empty_List (Init_Actions) then\n-         EA := Make_Expression_With_Actions (Loc,\n-                 Actions    => Init_Actions,\n-                 Expression => Make_Null_Statement (Loc));\n+         EA :=\n+           Make_Expression_With_Actions (Loc,\n+             Actions    => Init_Actions,\n+             Expression => Make_Null_Statement (Loc));\n          Insert_Action_After (Init_Node, EA);\n          Set_Initialization_Statements (Obj, EA);\n       end if;\n@@ -5123,6 +5124,7 @@ package body Exp_Aggr is\n       if Comes_From_Source (Tmp) then\n          declare\n             Node_After : constant Node_Id := Next (Parent_Node);\n+\n          begin\n             Insert_Actions_After (Parent_Node, Aggr_Code);\n "}, {"sha": "68a340d7c4791eb1b95a152312ff33282647dd0a", "filename": "gcc/ada/exp_prag.adb", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae05cdd6a514229e6d983e50005343b34e0a7110/gcc%2Fada%2Fexp_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae05cdd6a514229e6d983e50005343b34e0a7110/gcc%2Fada%2Fexp_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_prag.adb?ref=ae05cdd6a514229e6d983e50005343b34e0a7110", "patch": "@@ -530,16 +530,16 @@ package body Exp_Prag is\n    -- Expand_Pragma_Import_Or_Interface --\n    ---------------------------------------\n \n-   --  When applied to a variable, the default initialization must not be\n-   --  done. As it is already done when the pragma is found, we just get rid\n-   --  of the call the initialization procedure which followed the object\n-   --  declaration. The call is inserted after the declaration, but validity\n-   --  checks may also have been inserted and the initialization call does\n-   --  not necessarily appear immediately after the object declaration.\n+   --  When applied to a variable, the default initialization must not be done.\n+   --  As it is already done when the pragma is found, we just get rid of the\n+   --  call the initialization procedure which followed the object declaration.\n+   --  The call is inserted after the declaration, but validity checks may\n+   --  also have been inserted and the initialization call does not necessarily\n+   --  appear immediately after the object declaration.\n \n-   --  We can't use the freezing mechanism for this purpose, since we\n-   --  have to elaborate the initialization expression when it is first\n-   --  seen (i.e. this elaboration cannot be deferred to the freeze point).\n+   --  We can't use the freezing mechanism for this purpose, since we have to\n+   --  elaborate the initialization expression when it is first seen (i.e. this\n+   --  elaboration cannot be deferred to the freeze point).\n \n    procedure Expand_Pragma_Import_Or_Interface (N : Node_Id) is\n       Def_Id    : Entity_Id;\n@@ -553,11 +553,11 @@ package body Exp_Prag is\n \n          Init_Call := Remove_Init_Call (Def_Id, Rep_Clause => N);\n \n-         --  Any default initialization expression should be removed\n-         --  (e.g., null defaults for access objects, zero initialization\n-         --  of packed bit arrays). Imported objects aren't allowed to\n-         --  have explicit initialization, so the expression must have\n-         --  been generated by the compiler.\n+         --  Any default initialization expression should be removed (e.g.,\n+         --  null defaults for access objects, zero initialization of packed\n+         --  bit arrays). Imported objects aren't allowed to have explicit\n+         --  initialization, so the expression must have been generated by\n+         --  the compiler.\n \n          if No (Init_Call) and then Present (Expression (Parent (Def_Id))) then\n             Set_Expression (Parent (Def_Id), Empty);"}, {"sha": "b6afb8f5d69b607fef482dc562a7bf03eefa5878", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae05cdd6a514229e6d983e50005343b34e0a7110/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae05cdd6a514229e6d983e50005343b34e0a7110/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=ae05cdd6a514229e6d983e50005343b34e0a7110", "patch": "@@ -6227,9 +6227,9 @@ package body Exp_Util is\n \n       function Find_Init_Call_In_List (From : Node_Id) return Node_Id is\n          Init_Call : Node_Id;\n+\n       begin\n          Init_Call := From;\n-\n          while Present (Init_Call) and then Init_Call /= Rep_Clause loop\n             if Nkind (Init_Call) = N_Procedure_Call_Statement\n               and then Is_Entity_Name (Name (Init_Call))"}, {"sha": "234cdd2cb42d62045dbd7ff1579358fe62a624d6", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae05cdd6a514229e6d983e50005343b34e0a7110/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae05cdd6a514229e6d983e50005343b34e0a7110/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=ae05cdd6a514229e6d983e50005343b34e0a7110", "patch": "@@ -1114,9 +1114,7 @@ package body Freeze is\n                 Attribute_Scalar_Storage_Order);\n \n       if Is_Record_Type (Comp_Type) or else Is_Array_Type (Comp_Type) then\n-         if Present (Comp)\n-              and then Chars (Comp) = Name_uParent\n-         then\n+         if Present (Comp) and then Chars (Comp) = Name_uParent then\n             if Reverse_Storage_Order (Encl_Type)\n                  /=\n                Reverse_Storage_Order (Comp_Type)\n@@ -3358,9 +3356,8 @@ package body Freeze is\n                                  Initialization_Statements (E);\n                begin\n                   if Present (Init_Stmts)\n-                       and then Nkind (Init_Stmts) = N_Expression_With_Actions\n-                       and then Nkind (Expression (Init_Stmts))\n-                         = N_Null_Statement\n+                    and then Nkind (Init_Stmts) = N_Expression_With_Actions\n+                    and then Nkind (Expression (Init_Stmts)) = N_Null_Statement\n                   then\n                      Insert_List_Before (Init_Stmts, Actions (Init_Stmts));\n                      Remove (Init_Stmts);"}, {"sha": "2fa479cc98069977646ffc73ee06c251b5a6a380", "filename": "gcc/ada/gnatcmd.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae05cdd6a514229e6d983e50005343b34e0a7110/gcc%2Fada%2Fgnatcmd.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae05cdd6a514229e6d983e50005343b34e0a7110/gcc%2Fada%2Fgnatcmd.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatcmd.adb?ref=ae05cdd6a514229e6d983e50005343b34e0a7110", "patch": "@@ -2001,10 +2001,10 @@ begin\n                      Name_Len := 0;\n \n                      --  If the single main has been specified as an absolute\n-                     --  path, we use only the simple file name. If the\n-                     --  absolute path is incorrect, an error will be reported\n-                     --  by the underlying tool and it does not make a\n-                     --  difference what switches are used.\n+                     --  path, use only the simple file name. If the absolute\n+                     --  path is incorrect, an error will be reported by the\n+                     --  underlying tool and it does not make a difference\n+                     --  what switches are used.\n \n                      if Is_Absolute_Path (Main.all) then\n                         Add_Str_To_Name_Buffer (File_Name (Main.all));"}, {"sha": "2bd5956434ff2b51935d1d62ef7170454ceb02cd", "filename": "gcc/ada/opt.ads", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae05cdd6a514229e6d983e50005343b34e0a7110/gcc%2Fada%2Fopt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae05cdd6a514229e6d983e50005343b34e0a7110/gcc%2Fada%2Fopt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.ads?ref=ae05cdd6a514229e6d983e50005343b34e0a7110", "patch": "@@ -537,16 +537,16 @@ package Opt is\n    --  Determines the handling of exceptions. See Exp_Ch11 for details\n    --\n      (Front_End_Setjmp_Longjmp_Exceptions,\n-      --  Exceptions use setjmp/longjmp generated explicitly by the\n-      --  front end (this includes gigi or other equivalent parts of\n-      --  the code generator). AT END handlers are converted into\n-      --  exception handlers by the front end in this mode.\n+      --  Exceptions use setjmp/longjmp generated explicitly by the front end\n+      --  (this includes gigi or other equivalent parts of the code generator).\n+      --  AT END handlers are converted into exception handlers by the front\n+      --  end in this mode.\n \n       Back_End_Exceptions);\n       --  Exceptions are handled by the back end. The front end simply\n-      --  generates the handlers as they appear in the source, and AT\n-      --  END handlers are left untouched (they are not converted into\n-      --  exception handlers when operating in this mode.\n+      --  generates the handlers as they appear in the source, and AT END\n+      --  handlers are left untouched (they are not converted into exception\n+      --  handlers when operating in this mode.\n    pragma Convention (C, Exception_Mechanism_Type);\n \n    Exception_Mechanism : Exception_Mechanism_Type :="}, {"sha": "3da9c1bdaa5087021e9f02feced9f2cc4a5bfab5", "filename": "gcc/ada/prj-conf.adb", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae05cdd6a514229e6d983e50005343b34e0a7110/gcc%2Fada%2Fprj-conf.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae05cdd6a514229e6d983e50005343b34e0a7110/gcc%2Fada%2Fprj-conf.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-conf.adb?ref=ae05cdd6a514229e6d983e50005343b34e0a7110", "patch": "@@ -1187,18 +1187,19 @@ package body Prj.Conf is\n \n                   declare\n                      Variable : Variable_Value;\n-                     Proj : Project_Id;\n+                     Proj     : Project_Id;\n                      Tgt_Name : Name_Id := No_Name;\n+\n                   begin\n                      Proj := Project;\n                      Project_Loop :\n                      while Proj /= No_Project loop\n                         Variable :=\n                           Value_Of (Name_Target, Proj.Decl.Attributes, Shared);\n \n-                        if Variable /= Nil_Variable_Value and then\n-                          not Variable.Default and then\n-                          Variable.Value /= No_Name\n+                        if Variable /= Nil_Variable_Value\n+                          and then not Variable.Default\n+                          and then Variable.Value /= No_Name\n                         then\n                            Tgt_Name := Variable.Value;\n                            exit Project_Loop;"}, {"sha": "124769d5f6c0c62d0f5c5a4a355d62d3c3f02ad6", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 26, "deletions": 20, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae05cdd6a514229e6d983e50005343b34e0a7110/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae05cdd6a514229e6d983e50005343b34e0a7110/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=ae05cdd6a514229e6d983e50005343b34e0a7110", "patch": "@@ -1318,14 +1318,16 @@ package body Sem_Ch13 is\n                            P_Name := A_Name;\n \n                         elsif A_Name = Name_Link_Name then\n-                           L_Assoc := Make_Pragma_Argument_Association (Loc,\n-                              Chars => A_Name,\n-                              Expression => Relocate_Node (Expression (A)));\n+                           L_Assoc :=\n+                             Make_Pragma_Argument_Association (Loc,\n+                               Chars      => A_Name,\n+                               Expression => Relocate_Node (Expression (A)));\n \n                         elsif A_Name = Name_External_Name then\n-                           E_Assoc := Make_Pragma_Argument_Association (Loc,\n-                              Chars => A_Name,\n-                              Expression => Relocate_Node (Expression (A)));\n+                           E_Assoc :=\n+                             Make_Pragma_Argument_Association (Loc,\n+                               Chars      => A_Name,\n+                               Expression => Relocate_Node (Expression (A)));\n                         end if;\n \n                         Next (A);\n@@ -2905,15 +2907,16 @@ package body Sem_Ch13 is\n                   declare\n                      Init_Call : constant Node_Id :=\n                                    Remove_Init_Call (U_Ent, N);\n+\n                   begin\n                      if Present (Init_Call) then\n \n                         --  If the init call is an expression with actions with\n                         --  null expression, just extract the actions.\n \n                         if Nkind (Init_Call) = N_Expression_With_Actions\n-                             and then Nkind (Expression (Init_Call))\n-                               = N_Null_Statement\n+                          and then\n+                            Nkind (Expression (Init_Call)) = N_Null_Statement\n                         then\n                            Append_Freeze_Actions (U_Ent, Actions (Init_Call));\n \n@@ -2930,9 +2933,8 @@ package body Sem_Ch13 is\n                        (\"& cannot be exported if an address clause is given\",\n                         Nam);\n                      Error_Msg_N\n-                       (\"\\define and export a variable \" &\n-                        \"that holds its address instead\",\n-                        Nam);\n+                       (\"\\define and export a variable \"\n+                        & \"that holds its address instead\", Nam);\n                   end if;\n \n                   --  Entity has delayed freeze, so we will generate an\n@@ -4698,15 +4700,19 @@ package body Sem_Ch13 is\n \n       function Is_Inherited (Comp : Entity_Id) return Boolean is\n          Comp_Base : Entity_Id;\n+\n       begin\n          if Ekind (Rectype) = E_Record_Subtype then\n             Comp_Base := Original_Record_Component (Comp);\n          else\n             Comp_Base := Comp;\n          end if;\n+\n          return Comp_Base /= Original_Record_Component (Comp_Base);\n       end Is_Inherited;\n \n+      --  Local variables\n+\n       Is_Record_Extension : Boolean;\n       --  True if Rectype is a record extension\n \n@@ -4723,9 +4729,7 @@ package body Sem_Ch13 is\n       Find_Type (Ident);\n       Rectype := Entity (Ident);\n \n-      if Rectype = Any_Type\n-        or else Rep_Item_Too_Early (Rectype, N)\n-      then\n+      if Rectype = Any_Type or else Rep_Item_Too_Early (Rectype, N) then\n          return;\n       else\n          Rectype := Underlying_Type (Rectype);\n@@ -5155,8 +5159,9 @@ package body Sem_Ch13 is\n          return Empty;\n       end if;\n \n-      SId := Make_Defining_Identifier (Loc,\n-         Chars => New_External_Name (Chars (Typ), \"Invariant\"));\n+      SId :=\n+        Make_Defining_Identifier (Loc,\n+          Chars => New_External_Name (Chars (Typ), \"Invariant\"));\n       Set_Has_Invariants (SId);\n       Set_Has_Invariants (Typ);\n       Set_Ekind (SId, E_Procedure);\n@@ -8779,10 +8784,11 @@ package body Sem_Ch13 is\n                                 Designated_Type (Etype (F)), Loc))));\n \n          if Nam = TSS_Stream_Input then\n-            Spec := Make_Function_Specification (Loc,\n-                      Defining_Unit_Name       => Subp_Id,\n-                      Parameter_Specifications => Formals,\n-                      Result_Definition        => T_Ref);\n+            Spec :=\n+              Make_Function_Specification (Loc,\n+                Defining_Unit_Name       => Subp_Id,\n+                Parameter_Specifications => Formals,\n+                Result_Definition        => T_Ref);\n          else\n             --  V : [out] T\n "}, {"sha": "541a75ced0ec7f37eb53070fbfdc227b8dd705d2", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae05cdd6a514229e6d983e50005343b34e0a7110/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae05cdd6a514229e6d983e50005343b34e0a7110/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=ae05cdd6a514229e6d983e50005343b34e0a7110", "patch": "@@ -1902,6 +1902,8 @@ package body Sem_Ch4 is\n          exit when No (A);\n       end loop;\n \n+      --  This test needs a comment ???\n+\n       if Nkind (Expression (N)) = N_Null_Statement then\n          Set_Etype (N, Standard_Void_Type);\n       else"}, {"sha": "13d8be518a819ee7ee33f6dd0b0a59499235b3ff", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae05cdd6a514229e6d983e50005343b34e0a7110/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae05cdd6a514229e6d983e50005343b34e0a7110/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=ae05cdd6a514229e6d983e50005343b34e0a7110", "patch": "@@ -6775,7 +6775,7 @@ package body Sem_Prag is\n                   if Volatile_Seen\n                     and then\n                       ((Input_Seen and then Output_Seen)           --  both\n-                          or else\n+                         or else\n                        (not Input_Seen and then not Output_Seen))  --  none\n                   then\n                      Error_Msg_N\n@@ -6785,7 +6785,7 @@ package body Sem_Prag is\n \n                   --  Either Input or Output require Volatile\n \n-                  if (Input_Seen or else Output_Seen)\n+                  if (Input_Seen or Output_Seen)\n                     and then not Volatile_Seen\n                   then\n                      Error_Msg_N"}, {"sha": "be4532e609ac46cc9f5ba9e10373b2d35b2032ac", "filename": "gcc/ada/sem_warn.adb", "status": "modified", "additions": 16, "deletions": 19, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae05cdd6a514229e6d983e50005343b34e0a7110/gcc%2Fada%2Fsem_warn.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae05cdd6a514229e6d983e50005343b34e0a7110/gcc%2Fada%2Fsem_warn.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_warn.adb?ref=ae05cdd6a514229e6d983e50005343b34e0a7110", "patch": "@@ -3281,7 +3281,7 @@ package body Sem_Warn is\n    begin\n       return\n         (Warn_On_Modified_Unread and then Is_Only_Out_Parameter (E))\n-           or else Warn_On_All_Unread_Out_Parameters;\n+          or else Warn_On_All_Unread_Out_Parameters;\n    end Warn_On_Modified_As_Out_Parameter;\n \n    ---------------------------------\n@@ -3293,7 +3293,7 @@ package body Sem_Warn is\n       Form1, Form2 : Entity_Id;\n \n       function Is_Covered_Formal (Formal : Node_Id) return Boolean;\n-      --  Return True if Formal is covered by the rule.\n+      --  Return True if Formal is covered by the rule\n \n       function Refer_Same_Object (Act1, Act2 : Node_Id) return Boolean;\n       --  Two names are known to refer to the same object if the two names\n@@ -3321,11 +3321,10 @@ package body Sem_Warn is\n       function Is_Covered_Formal (Formal : Node_Id) return Boolean is\n       begin\n          return\n-           Ekind_In (Formal, E_Out_Parameter,\n-                             E_In_Out_Parameter)\n+           Ekind_In (Formal, E_Out_Parameter, E_In_Out_Parameter)\n              and then (Is_Elementary_Type (Etype (Formal))\n-                         or else Is_Record_Type (Etype (Formal))\n-                         or else Is_Array_Type (Etype (Formal)));\n+                        or else Is_Record_Type (Etype (Formal))\n+                        or else Is_Array_Type (Etype (Formal)));\n       end Is_Covered_Formal;\n \n    begin\n@@ -3347,13 +3346,12 @@ package body Sem_Warn is\n       --  there is no other name among the other parameters of mode in out or\n       --  out to C that is known to denote the same object (RM 6.4.1(6.15/3))\n \n-      --  Compiling under -gnatw.i we also report warnings on overlapping\n-      --  parameters that are record types or array types.\n+      --  If appropriate warning switch is set, we also report warnings on\n+      --  overlapping parameters that are record types or array types.\n \n       Form1 := First_Formal (Subp);\n       Act1  := First_Actual (N);\n       while Present (Form1) and then Present (Act1) loop\n-\n          if Is_Covered_Formal (Form1) then\n             Form2 := First_Formal (Subp);\n             Act2  := First_Actual (N);\n@@ -3376,25 +3374,24 @@ package body Sem_Warn is\n                   elsif Nkind (Act2) = N_Function_Call then\n                      null;\n \n-                  --  If type is not by-copy we can assume that the aliasing is\n-                  --  intended.\n+                  --  If type is not by-copy, assume that aliasing is intended\n \n                   elsif\n                     Present (Underlying_Type (Etype (Form1)))\n                       and then\n                         (Is_By_Reference_Type (Underlying_Type (Etype (Form1)))\n                            or else\n-                             Convention (Underlying_Type (Etype (Form1)))\n-                               = Convention_Ada_Pass_By_Reference)\n+                             Convention (Underlying_Type (Etype (Form1))) =\n+                               Convention_Ada_Pass_By_Reference)\n                   then\n                      null;\n \n                   --  Under Ada 2012 we only report warnings on overlapping\n-                  --  arrays and record types if compiling under -gnatw.i\n+                  --  arrays and record types if switch is set.\n \n                   elsif Ada_Version >= Ada_2012\n-                     and then not Is_Elementary_Type (Etype (Form1))\n-                     and then not Warn_On_Overlap\n+                    and then not Is_Elementary_Type (Etype (Form1))\n+                    and then not Warn_On_Overlap\n                   then\n                      null;\n \n@@ -3449,7 +3446,7 @@ package body Sem_Warn is\n                                  & \"actual for&?I?\", Act1, Form);\n \n                            else\n-                              --  For greater clarity, give name of formal.\n+                              --  For greater clarity, give name of formal\n \n                               Error_Msg_Node_2 := Form;\n                               Error_Msg_FE\n@@ -3460,8 +3457,8 @@ package body Sem_Warn is\n                         else\n                            Error_Msg_Node_2 := Form;\n                            Error_Msg_FE\n-                             (\"writable actual for & overlaps with\"\n-                               & \" actual for&?I?\", Act1, Form1);\n+                             (\"writable actual for & overlaps with \"\n+                               & \"actual for&?I?\", Act1, Form1);\n                         end if;\n                      end;\n                   end if;"}, {"sha": "a7fdd557888e0ddbd47b4ba4c5341ab33d886466", "filename": "gcc/ada/table.adb", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae05cdd6a514229e6d983e50005343b34e0a7110/gcc%2Fada%2Ftable.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae05cdd6a514229e6d983e50005343b34e0a7110/gcc%2Fada%2Ftable.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftable.adb?ref=ae05cdd6a514229e6d983e50005343b34e0a7110", "patch": "@@ -172,7 +172,7 @@ package body Table is\n \n       procedure Reallocate is\n          New_Size   : Memory.size_t;\n-         New_Length : Long_Integer;\n+         New_Length : Long_Long_Integer;\n \n       begin\n          if Max < Last_Val then\n@@ -188,12 +188,14 @@ package body Table is\n             --  for the use of 10 here is to ensure that the table does really\n             --  increase in size (which would not be the case for a table of\n             --  length 10 increased by 3% for instance). Do the intermediate\n-            --  calculation in Long_Integer to avoid overflow.\n+            --  calculation in Long_Long_Integer to avoid overflow. Note that\n+            --  Long_Integer has the same range as Integer on Windows, so we\n+            --  need Long_Long_.\n \n             while Max < Last_Val loop\n                New_Length :=\n-                 Long_Integer (Length) *\n-                 (100 + Long_Integer (Table_Increment))\n+                 Long_Long_Integer (Length) *\n+                 (100 + Long_Long_Integer (Table_Increment))\n                  / 100;\n                Length := Int'Max (Int (New_Length), Length + 10);\n                Max := Min + Length - 1;"}]}