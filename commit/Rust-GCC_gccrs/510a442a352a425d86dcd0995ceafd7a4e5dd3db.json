{"sha": "510a442a352a425d86dcd0995ceafd7a4e5dd3db", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTEwYTQ0MmEzNTJhNDI1ZDg2ZGNkMDk5NWNlYWZkN2E0ZTVkZDNkYg==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2011-07-20T22:14:36Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2011-07-20T22:14:36Z"}, "message": "Dump basic_block flags.\n\nFrom-SVN: r176537", "tree": {"sha": "12e5ece87d8bf4aec813974464481c9479dc8ed6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/12e5ece87d8bf4aec813974464481c9479dc8ed6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/510a442a352a425d86dcd0995ceafd7a4e5dd3db", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/510a442a352a425d86dcd0995ceafd7a4e5dd3db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/510a442a352a425d86dcd0995ceafd7a4e5dd3db", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/510a442a352a425d86dcd0995ceafd7a4e5dd3db/comments", "author": null, "committer": null, "parents": [{"sha": "00b40d0da26a32c18f696c8f301b51f55960d155", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00b40d0da26a32c18f696c8f301b51f55960d155", "html_url": "https://github.com/Rust-GCC/gccrs/commit/00b40d0da26a32c18f696c8f301b51f55960d155"}], "stats": {"total": 75, "additions": 31, "deletions": 44}, "files": [{"sha": "7e07cfd5f788207f59744c7e65546755863493ed", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/510a442a352a425d86dcd0995ceafd7a4e5dd3db/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/510a442a352a425d86dcd0995ceafd7a4e5dd3db/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=510a442a352a425d86dcd0995ceafd7a4e5dd3db", "patch": "@@ -1,3 +1,8 @@\n+2011-07-20  Richard Henderson  <rth@redhat.com>\n+\n+\t* cfg.c (dump_bb_info): Dump basic_block->flags.\n+\t* cfgrtl.c (print_rtl_with_bb): Use dump_bb_info.\n+\n 2011-07-20  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/i386.c (ix86_decompose_address): Allow only subregs"}, {"sha": "00d1d5cb7d8e5fee548cf6c1886232d6c6fec33b", "filename": "gcc/cfg.c", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/510a442a352a425d86dcd0995ceafd7a4e5dd3db/gcc%2Fcfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/510a442a352a425d86dcd0995ceafd7a4e5dd3db/gcc%2Fcfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfg.c?ref=510a442a352a425d86dcd0995ceafd7a4e5dd3db", "patch": "@@ -549,6 +549,26 @@ dump_bb_info (basic_block bb, bool header, bool footer, int flags,\n \tfputs (\", maybe hot\", file);\n       if (cfun && probably_never_executed_bb_p (bb))\n \tfputs (\", probably never executed\", file);\n+      if (bb->flags)\n+\t{\n+\t  static const char * const bits[] = {\n+\t    \"new\", \"reachable\", \"irr_loop\", \"superblock\", \"disable_sched\",\n+\t    \"hot_partition\", \"cold_partition\", \"duplicated\",\n+\t    \"non_local_goto_target\", \"rtl\", \"forwarder\", \"nonthreadable\",\n+\t    \"modified\"\n+\t  };\n+\t  unsigned int flags;\n+\n+\t  fputs (\", flags:\", file);\n+\t  for (flags = bb->flags; flags ; flags &= flags - 1)\n+\t    {\n+\t      unsigned i = ctz_hwi (flags);\n+\t      if (i < ARRAY_SIZE (bits))\n+\t\tfprintf (file, \" %s\", bits[i]);\n+\t      else\n+\t\tfprintf (file, \" <%d>\", i);\n+\t    }\n+\t}\n       fputs (\".\\n\", file);\n \n       fprintf (file, \"%sPredecessors: \", prefix);"}, {"sha": "b8843cae579537a0dcd891da12b72f144b6cd808", "filename": "gcc/cfgrtl.c", "status": "modified", "additions": 6, "deletions": 44, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/510a442a352a425d86dcd0995ceafd7a4e5dd3db/gcc%2Fcfgrtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/510a442a352a425d86dcd0995ceafd7a4e5dd3db/gcc%2Fcfgrtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgrtl.c?ref=510a442a352a425d86dcd0995ceafd7a4e5dd3db", "patch": "@@ -1664,28 +1664,10 @@ print_rtl_with_bb (FILE *outf, const_rtx rtx_first)\n       for (tmp_rtx = rtx_first; NULL != tmp_rtx; tmp_rtx = NEXT_INSN (tmp_rtx))\n \t{\n \t  int did_output;\n-\t  if ((bb = start[INSN_UID (tmp_rtx)]) != NULL)\n-\t    {\n-\t      edge e;\n-\t      edge_iterator ei;\n \n-\t      fprintf (outf, \";; Start of basic block (\");\n-\t      FOR_EACH_EDGE (e, ei, bb->preds)\n-\t\tfprintf (outf, \" %d\", e->src->index);\n-\t      fprintf (outf, \") -> %d\\n\", bb->index);\n-\n-\t      if (df)\n-\t\t{\n-\t\t  df_dump_top (bb, outf);\n-\t\t  putc ('\\n', outf);\n-\t\t}\n-\t      FOR_EACH_EDGE (e, ei, bb->preds)\n-\t\t{\n-\t\t  fputs (\";; Pred edge \", outf);\n-\t\t  dump_edge_info (outf, e, 0);\n-\t\t  fputc ('\\n', outf);\n-\t\t}\n-\t    }\n+\t  bb = start[INSN_UID (tmp_rtx)];\n+\t  if (bb != NULL)\n+\t    dump_bb_info (bb, true, false, dump_flags, \";; \", outf);\n \n \t  if (in_bb_p[INSN_UID (tmp_rtx)] == NOT_IN_BB\n \t      && !NOTE_P (tmp_rtx)\n@@ -1696,29 +1678,9 @@ print_rtl_with_bb (FILE *outf, const_rtx rtx_first)\n \n \t  did_output = print_rtl_single (outf, tmp_rtx);\n \n-\t  if ((bb = end[INSN_UID (tmp_rtx)]) != NULL)\n-\t    {\n-\t      edge e;\n-\t      edge_iterator ei;\n-\n-\t      fprintf (outf, \";; End of basic block %d -> (\", bb->index);\n-\t      FOR_EACH_EDGE (e, ei, bb->succs)\n-\t\tfprintf (outf, \" %d\", e->dest->index);\n-\t      fprintf (outf, \")\\n\");\n-\n-\t      if (df)\n-\t\t{\n-\t\t  df_dump_bottom (bb, outf);\n-\t\t  putc ('\\n', outf);\n-\t\t}\n-\t      putc ('\\n', outf);\n-\t      FOR_EACH_EDGE (e, ei, bb->succs)\n-\t\t{\n-\t\t  fputs (\";; Succ edge \", outf);\n-\t\t  dump_edge_info (outf, e, 1);\n-\t\t  fputc ('\\n', outf);\n-\t\t}\n-\t    }\n+\t  bb = end[INSN_UID (tmp_rtx)];\n+\t  if (bb != NULL)\n+\t    dump_bb_info (bb, false, true, dump_flags, \";; \", outf);\n \t  if (did_output)\n \t    putc ('\\n', outf);\n \t}"}]}