{"sha": "f4fce7eda4a9e54552afc1847716eb583e6bf92f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjRmY2U3ZWRhNGE5ZTU0NTUyYWZjMTg0NzcxNmViNTgzZTZiZjkyZg==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@cygnus.com", "date": "2000-10-20T00:58:35Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "2000-10-20T00:58:35Z"}, "message": "Fix tree-checking abort on testcase with undefined macro as array size.\n\n\t* c-decl.c (start_decl): Check for error_mark_node type before using\n\tCOMPLETE_TYPE_P.\n\t(finish_decl): Likewise.  Don't give an error if decl type is\n\talready error_mark_node.\n\nFrom-SVN: r36955", "tree": {"sha": "26999095bf77649f560d24d3823ee28f35530487", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/26999095bf77649f560d24d3823ee28f35530487"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f4fce7eda4a9e54552afc1847716eb583e6bf92f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4fce7eda4a9e54552afc1847716eb583e6bf92f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f4fce7eda4a9e54552afc1847716eb583e6bf92f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4fce7eda4a9e54552afc1847716eb583e6bf92f/comments", "author": null, "committer": null, "parents": [{"sha": "ef3751295c3062d9084ab72b681d53a911af2cc2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef3751295c3062d9084ab72b681d53a911af2cc2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef3751295c3062d9084ab72b681d53a911af2cc2"}], "stats": {"total": 20, "additions": 17, "deletions": 3}, "files": [{"sha": "51ac06786850154c63e0327aad2082e26c80fe7e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4fce7eda4a9e54552afc1847716eb583e6bf92f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4fce7eda4a9e54552afc1847716eb583e6bf92f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f4fce7eda4a9e54552afc1847716eb583e6bf92f", "patch": "@@ -1,5 +1,10 @@\n 2000-10-19  Jim Wilson  <wilson@cygnus.com>\n \n+\t* c-decl.c (start_decl): Check for error_mark_node type before using\n+\tCOMPLETE_TYPE_P.\n+\t(finish_decl): Likewise.  Don't give an error if decl type is\n+\talready error_mark_node.\n+\n \t* haifa-sched.c (compute_trg_info): Add explanatory comments.\n \tNew local update_blocks.  Use update_blocks to remove duplicates\n \twhen computing update blocks.  Check for bblst_table overflow."}, {"sha": "00e7b910d727892401c7f2cc41bc0f50a1a90bd7", "filename": "gcc/c-decl.c", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4fce7eda4a9e54552afc1847716eb583e6bf92f/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4fce7eda4a9e54552afc1847716eb583e6bf92f/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=f4fce7eda4a9e54552afc1847716eb583e6bf92f", "patch": "@@ -3506,7 +3506,12 @@ start_decl (declarator, declspecs, initialized, attributes, prefix_attributes)\n       default:\n \t/* Don't allow initializations for incomplete types\n \t   except for arrays which might be completed by the initialization.  */\n-\tif (COMPLETE_TYPE_P (TREE_TYPE (decl)))\n+\n+\t/* This can happen if the array size is an undefined macro.  We already\n+\t   gave a warning, so we don't need another one.  */\n+\tif (TREE_TYPE (decl) == error_mark_node)\n+\t  initialized = 0;\n+\telse if (COMPLETE_TYPE_P (TREE_TYPE (decl)))\n \t  {\n \t    /* A complete type is ok if size is fixed.  */\n \n@@ -3584,7 +3589,8 @@ start_decl (declarator, declspecs, initialized, attributes, prefix_attributes)\n       && DECL_RTL (tem) == 0\n       && !DECL_CONTEXT (tem))\n     {\n-      if (COMPLETE_TYPE_P (TREE_TYPE (tem)))\n+      if (TREE_TYPE (tem) != error_mark_node\n+\t  && COMPLETE_TYPE_P (TREE_TYPE (tem)))\n \texpand_decl (tem);\n       else if (TREE_CODE (TREE_TYPE (tem)) == ARRAY_TYPE\n \t       && DECL_INITIAL (tem) != 0)\n@@ -3679,10 +3685,13 @@ finish_decl (decl, init, asmspec_tree)\n \n   if (TREE_CODE (decl) == VAR_DECL)\n     {\n-      if (DECL_SIZE (decl) == 0 && COMPLETE_TYPE_P (TREE_TYPE (decl)))\n+      if (DECL_SIZE (decl) == 0 && TREE_TYPE (decl) != error_mark_node\n+\t  && COMPLETE_TYPE_P (TREE_TYPE (decl)))\n \tlayout_decl (decl, 0);\n \n       if (DECL_SIZE (decl) == 0\n+\t  /* Don't give an error if we already gave one earlier.  */\n+\t  && TREE_TYPE (decl) != error_mark_node\n \t  && (TREE_STATIC (decl)\n \t      ?\n \t\t/* A static variable with an incomplete type"}]}