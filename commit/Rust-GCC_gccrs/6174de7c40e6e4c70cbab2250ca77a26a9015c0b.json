{"sha": "6174de7c40e6e4c70cbab2250ca77a26a9015c0b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjE3NGRlN2M0MGU2ZTRjNzBjYmFiMjI1MGNhNzdhMjZhOTAxNWMwYg==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2019-02-13T15:48:37Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2019-02-13T15:48:37Z"}, "message": "C++ concepts: fix ICE with requires on dtors (PR c++/89036)\n\nPR c++/89036 reports an ICE due to this assertion failing\n\n1136\t  /* A class should never have more than one destructor.  */\n1137\t  gcc_assert (!current_fns || via_using || !DECL_DESTRUCTOR_P (method));\n\non this template with a pair of dtors, with\nmutually exclusive \"requires\" clauses:\n\ntemplate<typename T>\nstruct Y {\n    ~Y() requires(true) = default;\n    ~Y() requires(false) {}\n};\n\nNathan introduced this assertion as part of:\n\n  ca9219bf18c68a001d62ecb981bc9176b0feaf12 (aka r251340):\n    2017-08-24  Nathan Sidwell  <nathan@acm.org>\n       Conversion operators kept on single overload set\n\nwhich, amongst other changes to add_method had this:\n     /* A class should never have more than one destructor.  */\n  -  if (current_fns && DECL_MAYBE_IN_CHARGE_DESTRUCTOR_P (method))\n  -    return false;\n  +  gcc_assert (!current_fns || !DECL_DESTRUCTOR_P (method));\n\nThe following patch drops the assertion (I already had to generalize\nthe assertion in r268041 to fix PR c++/88699).\n\ngcc/cp/ChangeLog:\n\tPR c++/89036\n\t* class.c (add_method): Drop destructor assertion.\n\ngcc/testsuite/ChangeLog:\n\tPR c++/89036\n\t* g++.dg/concepts/pr89036.C: New test.\n\nFrom-SVN: r268847", "tree": {"sha": "838b1c00a49568f1bf793a8e4e40340d7aeb611e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/838b1c00a49568f1bf793a8e4e40340d7aeb611e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6174de7c40e6e4c70cbab2250ca77a26a9015c0b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6174de7c40e6e4c70cbab2250ca77a26a9015c0b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6174de7c40e6e4c70cbab2250ca77a26a9015c0b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6174de7c40e6e4c70cbab2250ca77a26a9015c0b/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0c63a8ee9168d4d3cb0e7b97b78e324f65e1a22a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c63a8ee9168d4d3cb0e7b97b78e324f65e1a22a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0c63a8ee9168d4d3cb0e7b97b78e324f65e1a22a"}], "stats": {"total": 21, "additions": 18, "deletions": 3}, "files": [{"sha": "8533fa81ee6fdb6f88b3d7ad82ba49090ff9269f", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6174de7c40e6e4c70cbab2250ca77a26a9015c0b/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6174de7c40e6e4c70cbab2250ca77a26a9015c0b/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=6174de7c40e6e4c70cbab2250ca77a26a9015c0b", "patch": "@@ -1,3 +1,8 @@\n+2019-02-13  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR c++/89036\n+\t* class.c (add_method): Drop destructor assertion.\n+\n 2019-02-13  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/88986"}, {"sha": "f44acfd62b5eaaaf230173d1fc020360a78bb748", "filename": "gcc/cp/class.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6174de7c40e6e4c70cbab2250ca77a26a9015c0b/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6174de7c40e6e4c70cbab2250ca77a26a9015c0b/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=6174de7c40e6e4c70cbab2250ca77a26a9015c0b", "patch": "@@ -1134,9 +1134,6 @@ add_method (tree type, tree method, bool via_using)\n \t}\n     }\n \n-  /* A class should never have more than one destructor.  */\n-  gcc_assert (!current_fns || via_using || !DECL_DESTRUCTOR_P (method));\n-\n   current_fns = ovl_insert (method, current_fns, via_using);\n \n   if (!COMPLETE_TYPE_P (type) && !DECL_CONV_FN_P (method)"}, {"sha": "583b0452d61d9a04ac9e7a69d1a3f6db49804cbb", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6174de7c40e6e4c70cbab2250ca77a26a9015c0b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6174de7c40e6e4c70cbab2250ca77a26a9015c0b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6174de7c40e6e4c70cbab2250ca77a26a9015c0b", "patch": "@@ -1,3 +1,8 @@\n+2019-02-13  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR c++/89036\n+\t* g++.dg/concepts/pr89036.C: New test.\n+\n 2019-02-13  Tamar Christina  <tamar.christina@arm.com>\n \n \tPR target/88847"}, {"sha": "f83ef8b96793b25b3f661181eb9a332d3c43502f", "filename": "gcc/testsuite/g++.dg/concepts/pr89036.C", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6174de7c40e6e4c70cbab2250ca77a26a9015c0b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr89036.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6174de7c40e6e4c70cbab2250ca77a26a9015c0b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr89036.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr89036.C?ref=6174de7c40e6e4c70cbab2250ca77a26a9015c0b", "patch": "@@ -0,0 +1,8 @@\n+// { dg-do compile { target c++11 } }\n+// { dg-options \"-fconcepts\" }\n+\n+template<typename T>\n+struct Y {\n+  ~Y() requires(true) = default;\n+  ~Y() requires(false) {}\n+};"}]}