{"sha": "03d458af28af1edbef846324348bf1fe7b66c9cc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDNkNDU4YWYyOGFmMWVkYmVmODQ2MzI0MzQ4YmYxZmU3YjY2YzljYw==", "commit": {"author": {"name": "Gerald Pfeifer", "email": "gerald@pfeifer.com", "date": "2011-02-27T01:02:11Z"}, "committer": {"name": "Gerald Pfeifer", "email": "gerald@gcc.gnu.org", "date": "2011-02-27T01:02:11Z"}, "message": "invoke.texi (ARC Options): Use CPU instead of cpu.\n\n\t* doc/invoke.texi (ARC Options): Use CPU instead of cpu.\n\t(ARM Options): Ditto.\n\t(i386 and x86-64 Options): Ditto.\n\t(RX Options): Ditto.\n\t(SPARC Options): Ditto.\n\nFrom-SVN: r170528", "tree": {"sha": "d0554364e46ec4e1861c99ab4541c2378f6754df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d0554364e46ec4e1861c99ab4541c2378f6754df"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/03d458af28af1edbef846324348bf1fe7b66c9cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03d458af28af1edbef846324348bf1fe7b66c9cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/03d458af28af1edbef846324348bf1fe7b66c9cc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03d458af28af1edbef846324348bf1fe7b66c9cc/comments", "author": {"login": "GeraldPfeifer", "id": 4573532, "node_id": "MDQ6VXNlcjQ1NzM1MzI=", "avatar_url": "https://avatars.githubusercontent.com/u/4573532?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GeraldPfeifer", "html_url": "https://github.com/GeraldPfeifer", "followers_url": "https://api.github.com/users/GeraldPfeifer/followers", "following_url": "https://api.github.com/users/GeraldPfeifer/following{/other_user}", "gists_url": "https://api.github.com/users/GeraldPfeifer/gists{/gist_id}", "starred_url": "https://api.github.com/users/GeraldPfeifer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GeraldPfeifer/subscriptions", "organizations_url": "https://api.github.com/users/GeraldPfeifer/orgs", "repos_url": "https://api.github.com/users/GeraldPfeifer/repos", "events_url": "https://api.github.com/users/GeraldPfeifer/events{/privacy}", "received_events_url": "https://api.github.com/users/GeraldPfeifer/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3e5a4bfd199f77dd1eb757a552f615ac17b9dd3d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e5a4bfd199f77dd1eb757a552f615ac17b9dd3d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e5a4bfd199f77dd1eb757a552f615ac17b9dd3d"}], "stats": {"total": 20, "additions": 14, "deletions": 6}, "files": [{"sha": "684fad15089586e2203b0df5261f70dd4a4d6029", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03d458af28af1edbef846324348bf1fe7b66c9cc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03d458af28af1edbef846324348bf1fe7b66c9cc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=03d458af28af1edbef846324348bf1fe7b66c9cc", "patch": "@@ -1,3 +1,11 @@\n+2011-02-26  Gerald Pfeifer  <gerald@pfeifer.com>\n+\n+\t* doc/invoke.texi (ARC Options): Use CPU instead of cpu.\n+\t(ARM Options): Ditto.\n+\t(i386 and x86-64 Options): Ditto.\n+\t(RX Options): Ditto.\n+\t(SPARC Options): Ditto.\n+\n 2011-02-26  Tijl Coosemans  <tijl@coosemans.org>\n \n \t* config.gcc (i386-*-freebsd*): Make i486 the default arch on"}, {"sha": "e642c39bf09c884ea71946bb8619cd04cdf94fff", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03d458af28af1edbef846324348bf1fe7b66c9cc/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03d458af28af1edbef846324348bf1fe7b66c9cc/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=03d458af28af1edbef846324348bf1fe7b66c9cc", "patch": "@@ -10019,10 +10019,10 @@ Compile code for big endian mode.\n \n @item -mmangle-cpu\n @opindex mmangle-cpu\n-Prepend the name of the cpu to all public symbol names.\n+Prepend the name of the CPU to all public symbol names.\n In multiple-processor systems, there are many ARC variants with different\n instruction and register set characteristics.  This flag prevents code\n-compiled for one cpu to be linked with code compiled for another.\n+compiled for one CPU to be linked with code compiled for another.\n No facility exists for handling variants that are ``almost identical''.\n This is an all or nothing option.\n \n@@ -10195,7 +10195,7 @@ instead of specifying the actual target processor type, and hence\n restricting which instructions can be used, it specifies that GCC should\n tune the performance of the code as if the target were of the type\n specified in this option, but still choosing the instructions that it\n-will generate based on the cpu specified by a @option{-mcpu=} option.\n+will generate based on the CPU specified by a @option{-mcpu=} option.\n For some ARM implementations better performance can be obtained by using\n this option.\n \n@@ -12298,7 +12298,7 @@ Some 387 emulators do not support the @code{sin}, @code{cos} and\n @code{sqrt} instructions for the 387.  Specify this option to avoid\n generating those instructions.  This option is the default on FreeBSD,\n OpenBSD and NetBSD@.  This option is overridden when @option{-march}\n-indicates that the target cpu will always have an FPU and so the\n+indicates that the target CPU will always have an FPU and so the\n instruction will not need emulation.  As of revision 2.6.1, these\n instructions are not generated unless you also use the\n @option{-funsafe-math-optimizations} switch.\n@@ -16245,7 +16245,7 @@ This is because the RX FPU instructions are themselves unsafe.\n @opindex -mcpu\n Selects the type of RX CPU to be targeted.  Currently three types are\n supported, the generic @var{RX600} and @var{RX200} series hardware and\n-the specific @var{RX610} cpu.  The default is @var{RX600}.\n+the specific @var{RX610} CPU.  The default is @var{RX600}.\n \n The only difference between @var{RX600} and @var{RX610} is that the\n @var{RX610} does not support the @code{MVTIPL} instruction.\n@@ -17098,7 +17098,7 @@ option @option{-mcpu=@var{cpu_type}} would.\n \n The same values for @option{-mcpu=@var{cpu_type}} can be used for\n @option{-mtune=@var{cpu_type}}, but the only useful values are those\n-that select a particular cpu implementation.  Those are @samp{cypress},\n+that select a particular CPU implementation.  Those are @samp{cypress},\n @samp{supersparc}, @samp{hypersparc}, @samp{leon}, @samp{f930}, @samp{f934},\n @samp{sparclite86x}, @samp{tsc701}, @samp{ultrasparc}, @samp{ultrasparc3},\n @samp{niagara}, and @samp{niagara2}."}]}