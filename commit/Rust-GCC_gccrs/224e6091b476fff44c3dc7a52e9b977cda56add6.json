{"sha": "224e6091b476fff44c3dc7a52e9b977cda56add6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjI0ZTYwOTFiNDc2ZmZmNDRjM2RjN2E1MmU5Yjk3N2NkYTU2YWRkNg==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@unitus.it", "date": "2002-04-08T12:29:38Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2002-04-08T12:29:38Z"}, "message": "parse.y (namespace_qualifier, [...]): Add ending ';', in accordance with POSIX.\n\n2002-04-08  Paolo Carlini  <pcarlini@unitus.it>\n\n\t* parse.y (namespace_qualifier, maybe_identifier,\n\tbegin_explicit_instantiation, end_explicit_instantiation,\n\tapparent_template_type, .finish_template_type,\n\tdo_id, maybe_init, defarg_again, component_decl_1):\n\tAdd ending ';', in accordance with POSIX.\n\nFrom-SVN: r52026", "tree": {"sha": "7d4de9c99f3c1fca995dadd5749547f683c44371", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7d4de9c99f3c1fca995dadd5749547f683c44371"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/224e6091b476fff44c3dc7a52e9b977cda56add6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/224e6091b476fff44c3dc7a52e9b977cda56add6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/224e6091b476fff44c3dc7a52e9b977cda56add6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/224e6091b476fff44c3dc7a52e9b977cda56add6/comments", "author": null, "committer": null, "parents": [{"sha": "b57215d9bd0bf6653e24f4faaab6c017c1fd0141", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b57215d9bd0bf6653e24f4faaab6c017c1fd0141", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b57215d9bd0bf6653e24f4faaab6c017c1fd0141"}], "stats": {"total": 18, "additions": 18, "deletions": 0}, "files": [{"sha": "940afa03cb0d5fd93b3e44bf535fa80d0ba9ff0f", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/224e6091b476fff44c3dc7a52e9b977cda56add6/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/224e6091b476fff44c3dc7a52e9b977cda56add6/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=224e6091b476fff44c3dc7a52e9b977cda56add6", "patch": "@@ -1,3 +1,11 @@\n+2002-04-08  Paolo Carlini  <pcarlini@unitus.it>\n+\n+\t* parse.y (namespace_qualifier, maybe_identifier,\n+\tbegin_explicit_instantiation, end_explicit_instantiation,\n+\tapparent_template_type, .finish_template_type,\n+\tdo_id, maybe_init, defarg_again, component_decl_1):\n+\tAdd ending ';', in accordance with POSIX.\n+\n 2002-04-06  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/5571"}, {"sha": "8a33c870f077a4535bb1a15da485c5f8fa59a76e", "filename": "gcc/cp/parse.y", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/224e6091b476fff44c3dc7a52e9b977cda56add6/gcc%2Fcp%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/224e6091b476fff44c3dc7a52e9b977cda56add6/gcc%2Fcp%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparse.y?ref=224e6091b476fff44c3dc7a52e9b977cda56add6", "patch": "@@ -593,6 +593,7 @@ namespace_qualifier:\n \t\t    $$ = lastiddecl;\n \t\t  got_scope = $$;\n \t\t}\n+        ;\n \n any_id:\n \t  unqualified_id\n@@ -642,6 +643,7 @@ maybe_identifier:\n \t  \t{ $$ = $1; }\n \t|\t/* empty */\n \t\t{ $$ = NULL_TREE; }\n+        ;\n \n template_type_parm:\n \t  aggr maybe_identifier\n@@ -1039,9 +1041,11 @@ explicit_instantiation:\n \n begin_explicit_instantiation: \n       { begin_explicit_instantiation(); }\n+        ;\n \n end_explicit_instantiation: \n       { end_explicit_instantiation(); }\n+        ;\n \n /* The TYPENAME expansions are to deal with use of a template class name as\n   a template within the class itself, where the template decl is hidden by\n@@ -1062,6 +1066,7 @@ apparent_template_type:\n \t| identifier '<' template_arg_list_opt '>'\n \t    .finish_template_type\n \t\t{ $$ = $5; }\n+        ;\n \n self_template_type:\n \t  SELFNAME  '<' template_arg_list_opt template_close_bracket\n@@ -1077,6 +1082,7 @@ self_template_type:\n \t\t  $$ = finish_template_type ($<ttype>-3, $<ttype>-1, \n \t\t\t\t\t     yychar == SCOPE);\n \t\t}\n+        ;\n \n template_close_bracket:\n \t  '>'\n@@ -1496,6 +1502,7 @@ do_id:\n \t\t  else\n \t\t    $$ = $<ttype>-1;\n \t\t}\n+        ;\n \n template_id:\n           PFUNCNAME '<' do_id template_arg_list_opt template_close_bracket \n@@ -2182,6 +2189,7 @@ maybe_init:\n \t\t{ $$ = NULL_TREE; }\n \t| '=' init\n \t\t{ $$ = $2; }\n+        ;\n \n /* If we are processing a template, we don't want to expand this\n    initializer yet.  */\n@@ -2246,6 +2254,7 @@ defarg_again:\n \t\t{ replace_defarg ($1, $2); }\n \t| DEFARG_MARKER error END_OF_SAVED_INPUT\n \t\t{ replace_defarg ($1, error_mark_node); }\n+        ;\n \n pending_defargs:\n \t  /* empty */ %prec EMPTY\n@@ -2677,6 +2686,7 @@ component_decl_1:\n \t\t{ $$ = grokfield ($$, NULL_TREE, $4, $2, $3); }\n \t| using_decl\n \t\t{ $$ = do_class_using_decl ($1); }\n+        ;\n \n /* The case of exactly one component is handled directly by component_decl.  */\n /* ??? Huh? ^^^ */"}]}