{"sha": "86ef85d3f7e790e2bbace497fe55ca93d99dad32", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODZlZjg1ZDNmN2U3OTBlMmJiYWNlNDk3ZmU1NWNhOTNkOTlkYWQzMg==", "commit": {"author": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2017-08-17T16:50:06Z"}, "committer": {"name": "Martin Sebor", "email": "msebor@gcc.gnu.org", "date": "2017-08-17T16:50:06Z"}, "message": "PR c/81859 - [8 Regression] valgrind error from warn_about_normalization\n\ngcc/ChangeLog:\n\n\tPR c/81859\n\t* pretty-print.c (pp_format): Use strnlen in %.*s to avoid reading\n\tpast the end of an array.\n\t(test_pp_format): Add test cases.\n\nFrom-SVN: r251157", "tree": {"sha": "0ac480a59d309d6f4974999384db866f4ad37bbe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0ac480a59d309d6f4974999384db866f4ad37bbe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/86ef85d3f7e790e2bbace497fe55ca93d99dad32", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86ef85d3f7e790e2bbace497fe55ca93d99dad32", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86ef85d3f7e790e2bbace497fe55ca93d99dad32", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86ef85d3f7e790e2bbace497fe55ca93d99dad32/comments", "author": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f8c770ddb4b5499780a5e2d58c861a9c903cdd29", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8c770ddb4b5499780a5e2d58c861a9c903cdd29", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f8c770ddb4b5499780a5e2d58c861a9c903cdd29"}], "stats": {"total": 26, "additions": 18, "deletions": 8}, "files": [{"sha": "0b4b336d614fbddaadcb25df6381caae9b41c8c0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86ef85d3f7e790e2bbace497fe55ca93d99dad32/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86ef85d3f7e790e2bbace497fe55ca93d99dad32/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=86ef85d3f7e790e2bbace497fe55ca93d99dad32", "patch": "@@ -1,3 +1,10 @@\n+2017-08-17  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR c/81859\n+\t* pretty-print.c (pp_format): Use strnlen in %.*s to avoid reading\n+\tpast the end of an array.\n+\t(test_pp_format): Add test cases.\n+\n 2017-08-17  Richard Sandiford  <richard.sandiford@linaro.org>\n \n \t* internal-fn.def (CLRSB, CLZ, CTZ, FFS, PARITY, POPCOUNT): Add"}, {"sha": "7340cd4a565faf938c55ac57bd55f7b0952e120d", "filename": "gcc/pretty-print.c", "status": "modified", "additions": 11, "deletions": 8, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86ef85d3f7e790e2bbace497fe55ca93d99dad32/gcc%2Fpretty-print.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86ef85d3f7e790e2bbace497fe55ca93d99dad32/gcc%2Fpretty-print.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpretty-print.c?ref=86ef85d3f7e790e2bbace497fe55ca93d99dad32", "patch": "@@ -668,14 +668,10 @@ pp_format (pretty_printer *pp, text_info *text)\n \n \t    s = va_arg (*text->args_ptr, const char *);\n \n-\t    /* Negative precision is treated as if it were omitted.  */\n-\t    if (n < 0)\n-\t      n = INT_MAX;\n-\n-\t    /* Append the lesser of precision and strlen (s) characters.  */\n-\t    size_t len = strlen (s);\n-\t    if ((unsigned) n < len)\n-\t      len = n;\n+\t    /* Append the lesser of precision and strlen (s) characters\n+\t       from the array (which need not be a nul-terminated string).\n+\t       Negative precision is treated as if it were omitted.  */\n+\t    size_t len = n < 0 ? strlen (s) : strnlen (s, n);\n \n \t    pp_append_text (pp, s, s + len);\n \t  }\n@@ -1438,6 +1434,13 @@ test_pp_format ()\n   ASSERT_PP_FORMAT_2 (\"A 12345678\", \"%c %x\", 'A', 0x12345678);\n   ASSERT_PP_FORMAT_2 (\"hello world 12345678\", \"%s %x\", \"hello world\",\n \t\t      0x12345678);\n+\n+  /* Not nul-terminated.  */\n+  char arr[5] = { '1', '2', '3', '4', '5' };\n+  ASSERT_PP_FORMAT_3 (\"123 12345678\", \"%.*s %x\", 3, arr, 0x12345678);\n+  ASSERT_PP_FORMAT_3 (\"1234 12345678\", \"%.*s %x\", -1, \"1234\", 0x12345678);\n+  ASSERT_PP_FORMAT_3 (\"12345 12345678\", \"%.*s %x\", 7, \"12345\", 0x12345678);\n+\n   /* We can't test for %p; the pointer is printed in an implementation-defined\n      manner.  */\n   ASSERT_PP_FORMAT_2 (\"normal colored normal 12345678\","}]}