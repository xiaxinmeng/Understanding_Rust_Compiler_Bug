{"sha": "d95ba652abbbfda10f29ca8b80c2126825a65eeb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDk1YmE2NTJhYmJiZmRhMTBmMjljYThiODBjMjEyNjgyNWE2NWVlYg==", "commit": {"author": {"name": "Johannes Singler", "email": "singler@kit.edu", "date": "2009-11-19T16:43:20Z"}, "committer": {"name": "Johannes Singler", "email": "singler@gcc.gnu.org", "date": "2009-11-19T16:43:20Z"}, "message": "partition.h (__parallel_partition): Correctly initialize chunk size.\n\n2009-11-19  Johannes Singler  <singler@kit.edu>\n\n        * include/parallel/partition.h (__parallel_partition): Correctly\n        initialize chunk size.\n        (__parallel_nth_element): Respect nth_element_minimal_n.  Use\n        sequential nth_element as base case, instead of sequential sort.\n\nFrom-SVN: r154333", "tree": {"sha": "00becbbe063e4775c84ee513458dc9b6c1c6f1e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/00becbbe063e4775c84ee513458dc9b6c1c6f1e5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d95ba652abbbfda10f29ca8b80c2126825a65eeb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d95ba652abbbfda10f29ca8b80c2126825a65eeb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d95ba652abbbfda10f29ca8b80c2126825a65eeb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d95ba652abbbfda10f29ca8b80c2126825a65eeb/comments", "author": null, "committer": null, "parents": [{"sha": "b66a1bac4615611113eafcd633406e761b1f544c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b66a1bac4615611113eafcd633406e761b1f544c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b66a1bac4615611113eafcd633406e761b1f544c"}], "stats": {"total": 18, "additions": 13, "deletions": 5}, "files": [{"sha": "db8246e199d7fc0c726e627f65343a1599f63d94", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d95ba652abbbfda10f29ca8b80c2126825a65eeb/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d95ba652abbbfda10f29ca8b80c2126825a65eeb/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=d95ba652abbbfda10f29ca8b80c2126825a65eeb", "patch": "@@ -1,3 +1,10 @@\n+2009-11-19  Johannes Singler  <singler@kit.edu>\n+\n+        * include/parallel/partition.h (__parallel_partition): Correctly\n+        initialize chunk size.\n+        (__parallel_nth_element): Respect nth_element_minimal_n.  Use\n+        sequential nth_element as base case, instead of sequential sort.\n+\n 2009-11-17  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* include/profile/impl/profiler.h: Remove namespace markup."}, {"sha": "52993c86c957abc1c051711a38417be1c4ea849c", "filename": "libstdc++-v3/include/parallel/partition.h", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d95ba652abbbfda10f29ca8b80c2126825a65eeb/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fpartition.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d95ba652abbbfda10f29ca8b80c2126825a65eeb/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fpartition.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fpartition.h?ref=d95ba652abbbfda10f29ca8b80c2126825a65eeb", "patch": "@@ -73,7 +73,7 @@ namespace __gnu_parallel\n \n       bool* __reserved_left = NULL, * __reserved_right = NULL;\n \n-      _DifferenceType __chunk_size;\n+      _DifferenceType __chunk_size = __s.partition_chunk_size;\n \n       omp_lock_t __result_lock;\n       omp_init_lock(&__result_lock);\n@@ -345,15 +345,16 @@ namespace __gnu_parallel\n       _RAIter __split;\n       _RandomNumber __rng;\n \n-      _DifferenceType __minimum_length =\n-\tstd::max<_DifferenceType>(2, _Settings::get().partition_minimal_n);\n+      const _Settings& __s = _Settings::get();\n+      _DifferenceType __minimum_length = std::max<_DifferenceType>(2,\n+        std::max(__s.nth_element_minimal_n, __s.partition_minimal_n));\n \n       // Break if input range to small.\n       while (static_cast<_SequenceIndex>(__end - __begin) >= __minimum_length)\n \t{\n           _DifferenceType __n = __end - __begin;\n \n-          _RAIter __pivot_pos = __begin +  __rng(__n);\n+          _RAIter __pivot_pos = __begin + __rng(__n);\n \n           // Swap __pivot_pos value to end.\n           if (__pivot_pos != (__end - 1))\n@@ -412,7 +413,7 @@ namespace __gnu_parallel\n \t}\n \n       // Only at most _Settings::partition_minimal_n __elements __left.\n-      __gnu_sequential::sort(__begin, __end, __comp);\n+      __gnu_sequential::nth_element(__begin, __nth, __end, __comp);\n     }\n \n   /** @brief Parallel implementation of std::partial_sort()."}]}