{"sha": "b8cd1630d0f66086dac1c6233e18e58967a18904", "node_id": "C_kwDOANBUbNoAKGI4Y2QxNjMwZDBmNjYwODZkYWMxYzYyMzNlMThlNTg5NjdhMTg5MDQ", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2022-09-07T14:33:59Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2022-09-07T17:41:53Z"}, "message": "Restore detection of HAVE_XCOFF_DWARF_EXTRAS\n\ngcc/ChangeLog:\n\n\t* configure.ac: Restore detection of  HAVE_XCOFF_DWARF_EXTRAS.\n\t* config/rs6000/rs6000.cc (HAVE_XCOFF_DWARF_EXTRAS): Reset it.\n\t* configure: Regenerate.\n\t* config.in: Regenerate.", "tree": {"sha": "2b2823596396b36005286030d31e65a5fddb42f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2b2823596396b36005286030d31e65a5fddb42f7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b8cd1630d0f66086dac1c6233e18e58967a18904", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8cd1630d0f66086dac1c6233e18e58967a18904", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b8cd1630d0f66086dac1c6233e18e58967a18904", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8cd1630d0f66086dac1c6233e18e58967a18904/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b9cb441c98f265bff86a1c228932524c5fd37dd3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9cb441c98f265bff86a1c228932524c5fd37dd3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b9cb441c98f265bff86a1c228932524c5fd37dd3"}], "stats": {"total": 56, "additions": 56, "deletions": 0}, "files": [{"sha": "6ac17be189eb36305c70d3c9f69636391c30c66c", "filename": "gcc/config.in", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8cd1630d0f66086dac1c6233e18e58967a18904/gcc%2Fconfig.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8cd1630d0f66086dac1c6233e18e58967a18904/gcc%2Fconfig.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.in?ref=b8cd1630d0f66086dac1c6233e18e58967a18904", "patch": "@@ -2099,6 +2099,13 @@\n #endif\n \n \n+/* Define if your assembler supports AIX debug frame section label reference.\n+   */\n+#ifndef USED_FOR_TARGET\n+#undef HAVE_XCOFF_DWARF_EXTRAS\n+#endif\n+\n+\n /* Define if you have a working <zstd.h> header file. */\n #ifndef USED_FOR_TARGET\n #undef HAVE_ZSTD_H"}, {"sha": "a656cb32a4726ab9706d3f83decff268ea479882", "filename": "gcc/config/rs6000/rs6000.cc", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8cd1630d0f66086dac1c6233e18e58967a18904/gcc%2Fconfig%2Frs6000%2Frs6000.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8cd1630d0f66086dac1c6233e18e58967a18904/gcc%2Fconfig%2Frs6000%2Frs6000.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.cc?ref=b8cd1630d0f66086dac1c6233e18e58967a18904", "patch": "@@ -20946,6 +20946,11 @@ rs6000_elf_file_end (void)\n \n #if TARGET_XCOFF\n \n+#ifndef HAVE_XCOFF_DWARF_EXTRAS\n+#define HAVE_XCOFF_DWARF_EXTRAS 0\n+#endif\n+\n+\n /* Names of bss and data sections.  These should be unique names for each\n    compilation unit.  */\n "}, {"sha": "817d765568e06dd26487bc03a8d9b65f9fc65078", "filename": "gcc/configure", "status": "modified", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8cd1630d0f66086dac1c6233e18e58967a18904/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8cd1630d0f66086dac1c6233e18e58967a18904/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=b8cd1630d0f66086dac1c6233e18e58967a18904", "patch": "@@ -28142,6 +28142,41 @@ if test $gcc_cv_as_aix_ref = yes; then\n \n $as_echo \"#define HAVE_AS_REF 1\" >>confdefs.h\n \n+fi\n+\n+\n+\t{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking assembler for AIX DWARF location lists section support\" >&5\n+$as_echo_n \"checking assembler for AIX DWARF location lists section support... \" >&6; }\n+if ${gcc_cv_as_aix_dwloc+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  gcc_cv_as_aix_dwloc=no\n+  if test x$gcc_cv_as != x; then\n+    $as_echo '\t.dwsect 0xA0000\n+\tLframe..0:\n+\t\t.vbyte 4,Lframe..0\n+\t  ' > conftest.s\n+    if { ac_try='$gcc_cv_as $gcc_cv_as_flags  -o conftest.o conftest.s >&5'\n+  { { eval echo \"\\\"\\$as_me\\\":${as_lineno-$LINENO}: \\\"$ac_try\\\"\"; } >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n+  test $ac_status = 0; }; }\n+    then\n+\tgcc_cv_as_aix_dwloc=yes\n+    else\n+      echo \"configure: failed program was\" >&5\n+      cat conftest.s >&5\n+    fi\n+    rm -f conftest.o conftest.s\n+  fi\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $gcc_cv_as_aix_dwloc\" >&5\n+$as_echo \"$gcc_cv_as_aix_dwloc\" >&6; }\n+if test $gcc_cv_as_aix_dwloc = yes; then\n+\n+$as_echo \"#define HAVE_XCOFF_DWARF_EXTRAS 1\" >>confdefs.h\n+\n fi\n \n \t;;"}, {"sha": "59f205a1781589aa0b70a934c9c040167b7bbee3", "filename": "gcc/configure.ac", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8cd1630d0f66086dac1c6233e18e58967a18904/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8cd1630d0f66086dac1c6233e18e58967a18904/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=b8cd1630d0f66086dac1c6233e18e58967a18904", "patch": "@@ -5066,6 +5066,15 @@ LCF0:\n \t  ],,\n \t  [AC_DEFINE(HAVE_AS_REF, 1,\n \t    [Define if your assembler supports .ref])])\n+\n+\tgcc_GAS_CHECK_FEATURE([AIX DWARF location lists section support],\n+\t  gcc_cv_as_aix_dwloc,,\n+\t  [\t.dwsect 0xA0000\n+\tLframe..0:\n+\t\t.vbyte 4,Lframe..0\n+\t  ],,\n+\t  [AC_DEFINE(HAVE_XCOFF_DWARF_EXTRAS, 1,\n+\t    [Define if your assembler supports AIX debug frame section label reference.])])\n \t;;\n     esac\n     ;;"}]}