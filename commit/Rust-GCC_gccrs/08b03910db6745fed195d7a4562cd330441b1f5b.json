{"sha": "08b03910db6745fed195d7a4562cd330441b1f5b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDhiMDM5MTBkYjY3NDVmZWQxOTVkN2E0NTYyY2QzMzA0NDFiMWY1Yg==", "commit": {"author": {"name": "Jeremy Bennett", "email": "jeremy.bennett@embecosm.com", "date": "2012-03-01T23:34:36Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "2012-03-01T23:34:36Z"}, "message": "extend.texi: Expand and update information on interrupt attribute for Epiphany.\n\n2012-03-01  Jeremy Bennett  <jeremy.bennett@embecosm.com>\n            Joern Rennecke  <joern.rennecke@embecosm.com>\n\n        * doc/extend.texi: Expand and update information on interrupt\n        attribute for Epiphany.\n\nCo-Authored-By: Joern Rennecke <joern.rennecke@embecosm.com>\n\nFrom-SVN: r184765", "tree": {"sha": "609026f63252e2a4aa4ea00e5175306f8b547b80", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/609026f63252e2a4aa4ea00e5175306f8b547b80"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/08b03910db6745fed195d7a4562cd330441b1f5b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08b03910db6745fed195d7a4562cd330441b1f5b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/08b03910db6745fed195d7a4562cd330441b1f5b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08b03910db6745fed195d7a4562cd330441b1f5b/comments", "author": {"login": "jeremybennett", "id": 1662021, "node_id": "MDQ6VXNlcjE2NjIwMjE=", "avatar_url": "https://avatars.githubusercontent.com/u/1662021?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jeremybennett", "html_url": "https://github.com/jeremybennett", "followers_url": "https://api.github.com/users/jeremybennett/followers", "following_url": "https://api.github.com/users/jeremybennett/following{/other_user}", "gists_url": "https://api.github.com/users/jeremybennett/gists{/gist_id}", "starred_url": "https://api.github.com/users/jeremybennett/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jeremybennett/subscriptions", "organizations_url": "https://api.github.com/users/jeremybennett/orgs", "repos_url": "https://api.github.com/users/jeremybennett/repos", "events_url": "https://api.github.com/users/jeremybennett/events{/privacy}", "received_events_url": "https://api.github.com/users/jeremybennett/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1ce35c11f79daf56cc745e7b8eb9e98853838c1f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ce35c11f79daf56cc745e7b8eb9e98853838c1f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ce35c11f79daf56cc745e7b8eb9e98853838c1f"}], "stats": {"total": 51, "additions": 50, "deletions": 1}, "files": [{"sha": "8da046483d3d0ee75c04868ea3fafee9f8e1eea5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08b03910db6745fed195d7a4562cd330441b1f5b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08b03910db6745fed195d7a4562cd330441b1f5b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=08b03910db6745fed195d7a4562cd330441b1f5b", "patch": "@@ -1,3 +1,9 @@\n+2012-03-01  Jeremy Bennett  <jeremy.bennett@embecosm.com>\n+\t    Joern Rennecke  <joern.rennecke@embecosm.com>\n+\n+\t* doc/extend.texi: Expand and update information on interrupt\n+\tattribute for Epiphany.\n+\n 2012-03-01  Oleg Endo  <olegendo@gcc.gnu.org>\n \n \t* config/sh/sh-protos.h: Update copyright notice dates."}, {"sha": "c770e35cb7f8001a7e94ac9037d68eb351286451", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 44, "deletions": 1, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08b03910db6745fed195d7a4562cd330441b1f5b/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08b03910db6745fed195d7a4562cd330441b1f5b/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=08b03910db6745fed195d7a4562cd330441b1f5b", "patch": "@@ -2719,7 +2719,8 @@ Use this attribute on the ARM, AVR, CR16, Epiphany, M32C, M32R/D, m68k, MeP, MIP\n RL78, RX and Xstormy16 ports to indicate that the specified function is an\n interrupt handler.  The compiler will generate function entry and exit\n sequences suitable for use in an interrupt handler when this attribute\n-is present.\n+is present.  With Epiphany targets it may also generate a special section with\n+code to initialize the interrupt vector table.\n \n Note, interrupt handlers for the Blackfin, H8/300, H8/300H, H8S, MicroBlaze,\n and SH processors can be specified via the @code{interrupt_handler} attribute.\n@@ -2738,6 +2739,48 @@ Permissible values for this parameter are: IRQ, FIQ, SWI, ABORT and UNDEF@.\n On ARMv7-M the interrupt type is ignored, and the attribute means the function\n may be called with a word aligned stack pointer.\n \n+On Epiphany targets one or more optional parameters can be added like this:\n+\n+@smallexample\n+void __attribute__ ((interrupt (\"dma0, dma1\"))) universal_dma_handler ();\n+@end smallexample\n+\n+Permissible values for these parameters are: @w{@code{reset}},\n+@w{@code{software_exception}}, @w{@code{page_miss}},\n+@w{@code{timer0}}, @w{@code{timer1}}, @w{@code{message}},\n+@w{@code{dma0}}, @w{@code{dma1}}, @w{@code{wand}} and @w{@code{swi}}.\n+Multiple parameters indicate that multiple entries in the interrupt\n+vector table should be initialized for this function, i.e. for each\n+parameter @w{@var{name}}, a jump to the function will be emitted in\n+the section @w{ivt_entry_@var{name}}.  The parameter(s) may be omitted\n+entirely, in which case no interrupt vector table entry will be provided.\n+\n+Note, on Epiphany targets, interrupts are enabled inside the function\n+unless the @code{disinterrupt} attribute is also specified.\n+\n+On Epiphany targets, you can also use the following attribute to\n+modify the behavior of an interrupt handler:\n+@table @code\n+@item forwarder_section\n+@cindex @code{forwarder_section} attribute\n+The interrupt handler may be in external memory which cannot be\n+reached by a branch instruction, so generate a local memory trampoline\n+to transfer control.  The single parameter identifies the section where\n+the trampoline will be placed.\n+@end table\n+\n+The following examples are all valid uses of these attributes on\n+Epiphany targets:\n+@smallexample\n+void __attribute__ ((interrupt)) universal_handler ();\n+void __attribute__ ((interrupt (\"dma1\"))) dma1_handler ();\n+void __attribute__ ((interrupt (\"dma0, dma1\"))) universal_dma_handler ();\n+void __attribute__ ((interrupt (\"timer0\"), disinterrupt))\n+  fast_timer_handler ();\n+void __attribute__ ((interrupt (\"dma0, dma1\"), forwarder_section (\"tramp\")))\n+  external_dma_handler ();\n+@end smallexample\n+\n On MIPS targets, you can use the following attributes to modify the behavior\n of an interrupt handler:\n @table @code"}]}