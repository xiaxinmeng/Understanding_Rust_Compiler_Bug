{"sha": "e571fa591212572f2839eb64ad879aed81846f45", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTU3MWZhNTkxMjEyNTcyZjI4MzllYjY0YWQ4NzlhZWQ4MTg0NmY0NQ==", "commit": {"author": {"name": "Kaushik Phatak", "email": "kaushik.phatak@kpitcummins.com", "date": "2013-05-31T04:23:02Z"}, "committer": {"name": "Kaushik Phatak", "email": "kaushikp@gcc.gnu.org", "date": "2013-05-31T04:23:02Z"}, "message": "rl78.md (mulqi3,mulhi3): New define_expands.\n\n* config/rl78/rl78.md (mulqi3,mulhi3): New define_expands.\n(mulqi3_rl78,mulhi3_rl78,mulhi3_g13): New define_insns.\n\nFrom-SVN: r199469", "tree": {"sha": "add109e0e4b29f46acc1f7c79ed236bab348a345", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/add109e0e4b29f46acc1f7c79ed236bab348a345"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e571fa591212572f2839eb64ad879aed81846f45", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e571fa591212572f2839eb64ad879aed81846f45", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e571fa591212572f2839eb64ad879aed81846f45", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e571fa591212572f2839eb64ad879aed81846f45/comments", "author": null, "committer": null, "parents": [{"sha": "a75a6c8625af72d9be1444f81d25619f2d7ace57", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a75a6c8625af72d9be1444f81d25619f2d7ace57", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a75a6c8625af72d9be1444f81d25619f2d7ace57"}], "stats": {"total": 72, "additions": 72, "deletions": 0}, "files": [{"sha": "42ed62640e7395f721ed53cab901a2c074f2560c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e571fa591212572f2839eb64ad879aed81846f45/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e571fa591212572f2839eb64ad879aed81846f45/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e571fa591212572f2839eb64ad879aed81846f45", "patch": "@@ -1,3 +1,8 @@\n+2013-05-31  Kaushik Phatak  <kaushik.phatak@kpitcummins.com>\n+\n+\t* config/rl78/rl78.md (mulqi3,mulhi3): New define_expands.\n+\t(*mulqi3_rl78,*mulhi3_rl78,*mulhi3_g13): New define_insns.\n+\n 2013-05-30  Tobias Burnus  <burnus@net-b.de>\n \t    Thomas Koenig  <tkoenig@gcc.gnu.org>\n "}, {"sha": "1bcfc84fdb9e46f5c43e5daf1884918154ff1c5b", "filename": "gcc/config/rl78/rl78.md", "status": "modified", "additions": 67, "deletions": 0, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e571fa591212572f2839eb64ad879aed81846f45/gcc%2Fconfig%2Frl78%2Frl78.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e571fa591212572f2839eb64ad879aed81846f45/gcc%2Fconfig%2Frl78%2Frl78.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frl78%2Frl78.md?ref=e571fa591212572f2839eb64ad879aed81846f45", "patch": "@@ -235,6 +235,24 @@\n   [(set_attr \"valloc\" \"macax\")]\n )\n \n+(define_expand \"mulqi3\"\n+  [(set (match_operand:QI          0 \"register_operand\" \"\")\n+\t(mult:QI  (match_operand:QI 1 \"general_operand\" \"\")\n+\t\t  (match_operand:QI 2 \"nonmemory_operand\" \"\")))\n+   ]\n+  \"\" ; mulu supported by all targets\n+  \"\"\n+)\n+\n+(define_expand \"mulhi3\"\n+  [(set (match_operand:HI          0 \"register_operand\" \"\")\n+\t(mult:HI (match_operand:HI 1 \"general_operand\" \"\")\n+\t\t (match_operand:HI 2 \"nonmemory_operand\" \"\")))\n+   ]\n+  \"! RL78_MUL_NONE\"\n+  \"\"\n+)\n+\n (define_expand \"mulsi3\"\n   [(set (match_operand:SI          0 \"register_operand\" \"=&v\")\n \t(mult:SI (match_operand:SI 1 \"nonmemory_operand\" \"vi\")\n@@ -244,6 +262,55 @@\n   \"\"\n )\n \n+(define_insn \"*mulqi3_rl78\"\n+  [(set (match_operand:QI          0 \"register_operand\" \"=&v\")\n+\t(mult:QI (match_operand:QI 1 \"general_operand\" \"+viU\")\n+\t\t (match_operand:QI 2 \"general_operand\" \"vi\")))\n+   ]\n+  \"\" ; mulu supported by all targets\n+  \"; mulqi macro %0 = %1 * %2\n+\tmov    a, %h1\n+\tmov    x, a\n+\tmov    a, %h2\n+\tmulu   x ; ax = a * x\n+\tmov    a, x\n+\tmov    %h0, a\n+\t; end of mulqi macro\"\n+)\n+\n+(define_insn \"*mulhi3_rl78\"\n+  [(set (match_operand:HI          0 \"register_operand\" \"=&v\")\n+\t(mult:HI (match_operand:HI 1 \"general_operand\" \"+viU\")\n+\t\t (match_operand:HI 2 \"general_operand\" \"vi\")))\n+   ]\n+  \"RL78_MUL_RL78\"\n+  \"; mulhi macro %0 = %1 * %2\n+\tmovw    ax, %h1\n+\tmovw    bc, %h2\n+\tmulhu   ; bcax = bc * ax\n+\tmovw    %h0, ax\n+\t; end of mulhi macro\"\n+)\n+\n+(define_insn \"*mulhi3_g13\"\n+  [(set (match_operand:HI          0 \"register_operand\" \"=&v\")\n+\t(mult:HI (match_operand:HI 1 \"general_operand\" \"+viU\")\n+\t\t (match_operand:HI 2 \"general_operand\" \"vi\")))\n+   ]\n+  \"RL78_MUL_G13\"\n+  \"; mulhi macro %0 = %1 * %2\n+\tmov     a, #0x00\n+\tmov     !0xf00e8, a     ; MDUC\n+\tmovw    ax, %h1\n+\tmovw    0xffff0, ax     ; MDAL\n+\tmovw    ax, %h2\n+\tmovw    0xffff2, ax     ; MDAH\n+\tnop     ; mdb = mdal * mdah\n+\tmovw    ax, 0xffff6     ; MDBL\n+\tmovw    %h0, ax\n+        ; end of mulhi macro\"\n+)\n+\n ;; 0xFFFF0 is MACR(L).  0xFFFF2 is MACR(H) but we don't care about it\n ;; because we're only using the lower 16 bits (which is the upper 16\n ;; bits of the result)."}]}