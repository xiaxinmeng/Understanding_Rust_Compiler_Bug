{"sha": "5dcc96058c3aba9e9c7f10cf1648c7b76d080c90", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWRjYzk2MDU4YzNhYmE5ZTljN2YxMGNmMTY0OGM3Yjc2ZDA4MGM5MA==", "commit": {"author": {"name": "John David Anglin", "email": "dave.anglin@nrc-cnrc.gc.ca", "date": "2005-11-13T18:06:55Z"}, "committer": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2005-11-13T18:06:55Z"}, "message": "pa.c (store_reg): Revise generation of frame notes in large frames.\n\n\t* pa.c (store_reg): Revise generation of frame notes in large frames.\n\t(set_reg_plus_d): Likewise.\n\nFrom-SVN: r106867", "tree": {"sha": "564f92f4bacc337d881505488dec5b8a36778371", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/564f92f4bacc337d881505488dec5b8a36778371"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5dcc96058c3aba9e9c7f10cf1648c7b76d080c90", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5dcc96058c3aba9e9c7f10cf1648c7b76d080c90", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5dcc96058c3aba9e9c7f10cf1648c7b76d080c90", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5dcc96058c3aba9e9c7f10cf1648c7b76d080c90/comments", "author": null, "committer": null, "parents": [{"sha": "e84d8064505d56eb6c04de548160faa7acb83833", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e84d8064505d56eb6c04de548160faa7acb83833", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e84d8064505d56eb6c04de548160faa7acb83833"}], "stats": {"total": 25, "additions": 17, "deletions": 8}, "files": [{"sha": "37cf1ef1f3a4b448f2c3e3f3491f7446ce45b02c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5dcc96058c3aba9e9c7f10cf1648c7b76d080c90/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5dcc96058c3aba9e9c7f10cf1648c7b76d080c90/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5dcc96058c3aba9e9c7f10cf1648c7b76d080c90", "patch": "@@ -1,3 +1,8 @@\n+2005-11-13  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n+\n+\t* pa.c (store_reg): Revise generation of frame notes in large frames.\n+\t(set_reg_plus_d): Likewise.\n+\n 2005-11-13  Andrew MacLeod  <amacleod@redhat.com>\n \n \tPR tree-optimization/24709"}, {"sha": "f79d30a86455d4a1baf55941a1cbc88aa388583c", "filename": "gcc/config/pa/pa.c", "status": "modified", "additions": 12, "deletions": 8, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5dcc96058c3aba9e9c7f10cf1648c7b76d080c90/gcc%2Fconfig%2Fpa%2Fpa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5dcc96058c3aba9e9c7f10cf1648c7b76d080c90/gcc%2Fconfig%2Fpa%2Fpa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.c?ref=5dcc96058c3aba9e9c7f10cf1648c7b76d080c90", "patch": "@@ -3265,20 +3265,18 @@ store_reg (int reg, HOST_WIDE_INT disp, int base)\n       rtx tmpreg = gen_rtx_REG (Pmode, 1);\n \n       emit_move_insn (tmpreg, delta);\n-      emit_move_insn (tmpreg, gen_rtx_PLUS (Pmode, tmpreg, basereg));\n-      dest = gen_rtx_MEM (word_mode, tmpreg);\n-      insn = emit_move_insn (dest, src);\n+      insn = emit_move_insn (tmpreg, gen_rtx_PLUS (Pmode, tmpreg, basereg));\n       if (DO_FRAME_NOTES)\n \t{\n \t  REG_NOTES (insn)\n \t    = gen_rtx_EXPR_LIST (REG_FRAME_RELATED_EXPR,\n-\t\tgen_rtx_SET (VOIDmode,\n-\t\t\t     gen_rtx_MEM (word_mode,\n-\t\t\t\t\t  gen_rtx_PLUS (word_mode, basereg,\n-\t\t\t\t\t\t\tdelta)),\n-                             src),\n+\t\tgen_rtx_SET (VOIDmode, tmpreg,\n+\t\t\t     gen_rtx_PLUS (Pmode, basereg, delta)),\n                 REG_NOTES (insn));\n+\t  RTX_FRAME_RELATED_P (insn) = 1;\n \t}\n+      dest = gen_rtx_MEM (word_mode, tmpreg);\n+      insn = emit_move_insn (dest, src);\n     }\n   else\n     {\n@@ -3358,6 +3356,12 @@ set_reg_plus_d (int reg, int base, HOST_WIDE_INT disp, int note)\n       emit_move_insn (tmpreg, delta);\n       insn = emit_move_insn (gen_rtx_REG (Pmode, reg),\n \t\t\t     gen_rtx_PLUS (Pmode, tmpreg, basereg));\n+      if (DO_FRAME_NOTES)\n+\tREG_NOTES (insn)\n+\t  = gen_rtx_EXPR_LIST (REG_FRAME_RELATED_EXPR,\n+\t      gen_rtx_SET (VOIDmode, tmpreg,\n+\t\t\t   gen_rtx_PLUS (Pmode, basereg, delta)),\n+\t      REG_NOTES (insn));\n     }\n   else\n     {"}]}