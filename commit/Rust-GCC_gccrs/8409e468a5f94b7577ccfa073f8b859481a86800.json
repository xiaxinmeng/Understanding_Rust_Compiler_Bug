{"sha": "8409e468a5f94b7577ccfa073f8b859481a86800", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODQwOWU0NjhhNWY5NGI3NTc3Y2NmYTA3M2Y4Yjg1OTQ4MWE4NjgwMA==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2015-04-21T11:24:05Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2015-04-21T11:24:05Z"}, "message": "[AArch64] Add zero_extend variants of logical+not ops\n\n\t* config/aarch64/aarch64.md (*<NLOGICAL:optab>_one_cmplsidi3_ze):\n\tNew pattern.\n\t(*xor_one_cmplsidi3_ze): Likewise.\n\nFrom-SVN: r222263", "tree": {"sha": "6e942a7bac25815b14a048ec7298994c9c07d87d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6e942a7bac25815b14a048ec7298994c9c07d87d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8409e468a5f94b7577ccfa073f8b859481a86800", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8409e468a5f94b7577ccfa073f8b859481a86800", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8409e468a5f94b7577ccfa073f8b859481a86800", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8409e468a5f94b7577ccfa073f8b859481a86800/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8a29fdfd2313cde40aad2dcabe3ddc4d2aca0f91", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a29fdfd2313cde40aad2dcabe3ddc4d2aca0f91", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8a29fdfd2313cde40aad2dcabe3ddc4d2aca0f91"}], "stats": {"total": 26, "additions": 26, "deletions": 0}, "files": [{"sha": "2a982b1bd7f0fe0eb96c86e5e5af17366ad4f5c0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8409e468a5f94b7577ccfa073f8b859481a86800/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8409e468a5f94b7577ccfa073f8b859481a86800/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8409e468a5f94b7577ccfa073f8b859481a86800", "patch": "@@ -1,3 +1,9 @@\n+2015-04-21  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* config/aarch64/aarch64.md (*<NLOGICAL:optab>_one_cmplsidi3_ze):\n+\tNew pattern.\n+\t(*xor_one_cmplsidi3_ze): Likewise.\n+\n 2015-04-21  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n \n \t* df-core.c (df_finish_pass): Iterate over df->problems_by_index[] and"}, {"sha": "429c5bac00078b1b3d751518f0f4b0e488a9d338", "filename": "gcc/config/aarch64/aarch64.md", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8409e468a5f94b7577ccfa073f8b859481a86800/gcc%2Fconfig%2Faarch64%2Faarch64.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8409e468a5f94b7577ccfa073f8b859481a86800/gcc%2Fconfig%2Faarch64%2Faarch64.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.md?ref=8409e468a5f94b7577ccfa073f8b859481a86800", "patch": "@@ -3058,6 +3058,26 @@\n    (set_attr \"simd\" \"*,yes\")]\n )\n \n+(define_insn \"*<NLOGICAL:optab>_one_cmplsidi3_ze\"\n+  [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n+\t(zero_extend:DI\n+\t  (NLOGICAL:SI (not:SI (match_operand:SI 1 \"register_operand\" \"r\"))\n+\t               (match_operand:SI 2 \"register_operand\" \"r\"))))]\n+  \"\"\n+  \"<NLOGICAL:nlogical>\\\\t%w0, %w2, %w1\"\n+  [(set_attr \"type\" \"logic_reg\")]\n+)\n+\n+(define_insn \"*xor_one_cmplsidi3_ze\"\n+  [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n+        (zero_extend:DI\n+          (not:SI (xor:SI (match_operand:SI 1 \"register_operand\" \"r\")\n+                          (match_operand:SI 2 \"register_operand\" \"r\")))))]\n+  \"\"\n+  \"eon\\\\t%w0, %w1, %w2\"\n+  [(set_attr \"type\" \"logic_reg\")]\n+)\n+\n ;; (xor (not a) b) is simplify_rtx-ed down to (not (xor a b)).\n ;; eon does not operate on SIMD registers so the vector variant must be split.\n (define_insn_and_split \"*xor_one_cmpl<mode>3\""}]}