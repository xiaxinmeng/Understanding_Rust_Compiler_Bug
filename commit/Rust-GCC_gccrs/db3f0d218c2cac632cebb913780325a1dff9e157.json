{"sha": "db3f0d218c2cac632cebb913780325a1dff9e157", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGIzZjBkMjE4YzJjYWM2MzJjZWJiOTEzNzgwMzI1YTFkZmY5ZTE1Nw==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2020-11-03T08:46:59Z"}, "committer": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2020-11-03T08:46:59Z"}, "message": "x86: Fix comment in ix86_expand_builtin\n\n2020-11-03  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n\ngcc/\n\n\t* config/i386/i386-expand.c (ix86_expand_builtin): Fix comment.", "tree": {"sha": "14a1fec98bc5d3c5aeebf3faa03443ef177fbbc1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/14a1fec98bc5d3c5aeebf3faa03443ef177fbbc1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/db3f0d218c2cac632cebb913780325a1dff9e157", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db3f0d218c2cac632cebb913780325a1dff9e157", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db3f0d218c2cac632cebb913780325a1dff9e157", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db3f0d218c2cac632cebb913780325a1dff9e157/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "64dc14b1a764bd3059170431c9b43c6192dbd48f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64dc14b1a764bd3059170431c9b43c6192dbd48f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/64dc14b1a764bd3059170431c9b43c6192dbd48f"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "6f81b58a08ec820d0c04eb765f3018905e26ed45", "filename": "gcc/config/i386/i386-expand.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db3f0d218c2cac632cebb913780325a1dff9e157/gcc%2Fconfig%2Fi386%2Fi386-expand.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db3f0d218c2cac632cebb913780325a1dff9e157/gcc%2Fconfig%2Fi386%2Fi386-expand.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-expand.c?ref=db3f0d218c2cac632cebb913780325a1dff9e157", "patch": "@@ -11066,19 +11066,19 @@ ix86_expand_builtin (tree exp, rtx target, rtx subtarget,\n        == (OPTION_MASK_ISA_SSE | OPTION_MASK_ISA_3DNOW_A))\n       && (isa & (OPTION_MASK_ISA_SSE | OPTION_MASK_ISA_3DNOW_A)) != 0)\n     isa |= (OPTION_MASK_ISA_SSE | OPTION_MASK_ISA_3DNOW_A);\n+\n   if (((bisa & (OPTION_MASK_ISA_SSE4_2 | OPTION_MASK_ISA_CRC32))\n        == (OPTION_MASK_ISA_SSE4_2 | OPTION_MASK_ISA_CRC32))\n       && (isa & (OPTION_MASK_ISA_SSE4_2 | OPTION_MASK_ISA_CRC32)) != 0)\n     isa |= (OPTION_MASK_ISA_SSE4_2 | OPTION_MASK_ISA_CRC32);\n+\n   if (((bisa & (OPTION_MASK_ISA_FMA | OPTION_MASK_ISA_FMA4))\n        == (OPTION_MASK_ISA_FMA | OPTION_MASK_ISA_FMA4))\n       && (isa & (OPTION_MASK_ISA_FMA | OPTION_MASK_ISA_FMA4)) != 0)\n     isa |= (OPTION_MASK_ISA_FMA | OPTION_MASK_ISA_FMA4);\n \n-  if ((bisa & OPTION_MASK_ISA_MMX)\n-      && !TARGET_MMX\n-      && TARGET_MMX_WITH_SSE\n-      /* NB: __builtin_ia32_maskmovq also requires MMX.  */\n+  if ((bisa & OPTION_MASK_ISA_MMX) && !TARGET_MMX && TARGET_MMX_WITH_SSE\n+      /* __builtin_ia32_maskmovq requires MMX registers.  */\n       && fcode != IX86_BUILTIN_MASKMOVQ)\n     {\n       bisa &= ~OPTION_MASK_ISA_MMX;"}]}