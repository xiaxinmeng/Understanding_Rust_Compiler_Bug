{"sha": "72a10effc6fc22f1ac2d86332a65d709bb95aabe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzJhMTBlZmZjNmZjMjJmMWFjMmQ4NjMzMmE2NWQ3MDliYjk1YWFiZQ==", "commit": {"author": {"name": "Roger Sayle", "email": "roger@eyesopen.com", "date": "2005-12-24T18:35:02Z"}, "committer": {"name": "Roger Sayle", "email": "sayle@gcc.gnu.org", "date": "2005-12-24T18:35:02Z"}, "message": "expr.c (force_operand): Use expand_fix and expand_float to implement integer <-> FP conversions instead...\n\n\n\t* expr.c (force_operand): Use expand_fix and expand_float to\n\timplement integer <-> FP conversions instead of convert_to_mode.\n\nFrom-SVN: r109041", "tree": {"sha": "8bb34f32e31df100f54cdf9967ef00e0ac207219", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8bb34f32e31df100f54cdf9967ef00e0ac207219"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/72a10effc6fc22f1ac2d86332a65d709bb95aabe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72a10effc6fc22f1ac2d86332a65d709bb95aabe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/72a10effc6fc22f1ac2d86332a65d709bb95aabe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72a10effc6fc22f1ac2d86332a65d709bb95aabe/comments", "author": null, "committer": null, "parents": [{"sha": "4fe70c9b0dfef5e416c2a91aa0887320700d7923", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4fe70c9b0dfef5e416c2a91aa0887320700d7923", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4fe70c9b0dfef5e416c2a91aa0887320700d7923"}], "stats": {"total": 38, "additions": 22, "deletions": 16}, "files": [{"sha": "6d23fdc1121a4a456f8dec5cec14c8f39bd81853", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72a10effc6fc22f1ac2d86332a65d709bb95aabe/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72a10effc6fc22f1ac2d86332a65d709bb95aabe/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=72a10effc6fc22f1ac2d86332a65d709bb95aabe", "patch": "@@ -1,3 +1,8 @@\n+2005-12-24  Roger Sayle  <roger@eyesopen.com>\n+\n+\t* expr.c (force_operand): Use expand_fix and expand_float to\n+\timplement integer <-> FP conversions instead of convert_to_mode.\n+\n 2005-12-24  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/23171"}, {"sha": "7a83b7e317f75656c2230d6799e95335e658639f", "filename": "gcc/expr.c", "status": "modified", "additions": 17, "deletions": 16, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72a10effc6fc22f1ac2d86332a65d709bb95aabe/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72a10effc6fc22f1ac2d86332a65d709bb95aabe/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=72a10effc6fc22f1ac2d86332a65d709bb95aabe", "patch": "@@ -5805,15 +5805,6 @@ force_operand (rtx value, rtx target)\n       return subtarget;\n     }\n \n-  if (code == ZERO_EXTEND || code == SIGN_EXTEND)\n-    {\n-      if (!target)\n-\ttarget = gen_reg_rtx (GET_MODE (value));\n-      convert_move (target, force_operand (XEXP (value, 0), NULL),\n-\t\t    code == ZERO_EXTEND);\n-      return target;\n-    }\n-\n   if (ARITHMETIC_P (value))\n     {\n       op2 = XEXP (value, 1);\n@@ -5885,17 +5876,27 @@ force_operand (rtx value, rtx target)\n     }\n   if (UNARY_P (value))\n     {\n-      int unsignedp = 0;\n-\n+      if (!target)\n+\ttarget = gen_reg_rtx (GET_MODE (value));\n       op1 = force_operand (XEXP (value, 0), NULL_RTX);\n       switch (code)\n \t{\n-\tcase ZERO_EXTEND: case UNSIGNED_FIX: case UNSIGNED_FLOAT:\n-\t  unsignedp = 1;\n-\t  /* fall through.  */\n+\tcase ZERO_EXTEND:\n+\tcase SIGN_EXTEND:\n \tcase TRUNCATE:\n-\tcase SIGN_EXTEND: case FIX: case FLOAT:\n-\t  return convert_to_mode (GET_MODE (value), op1, unsignedp);\n+\t  convert_move (target, op1, code == ZERO_EXTEND);\n+\t  return target;\n+\n+\tcase FIX:\n+\tcase UNSIGNED_FIX:\n+\t  expand_fix (target, op1, code == UNSIGNED_FIX);\n+\t  return target;\n+\n+\tcase FLOAT:\n+\tcase UNSIGNED_FLOAT:\n+\t  expand_float (target, op1, code == UNSIGNED_FLOAT);\n+\t  return target;\n+\n \tdefault:\n \t  return expand_simple_unop (GET_MODE (value), code, op1, target, 0);\n \t}"}]}