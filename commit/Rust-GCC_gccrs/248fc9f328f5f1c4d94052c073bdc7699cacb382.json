{"sha": "248fc9f328f5f1c4d94052c073bdc7699cacb382", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjQ4ZmM5ZjMyOGY1ZjFjNGQ5NDA1MmMwNzNiZGM3Njk5Y2FjYjM4Mg==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2009-05-15T12:26:48Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2009-05-15T12:26:48Z"}, "message": "common.opt (-ftree-forwprop, [...]): New options, enabled by default.\n\n2009-05-15  Richard Guenther  <rguenther@suse.de>\n\n\t* common.opt (-ftree-forwprop, -ftree-phiprop, -ftree-pta):\n\tNew options, enabled by default.\n\t* doc/invoke.texi (-ftree-forwprop, -ftree-phiprop, -ftree-pta):\n\tDocument.\n\t* tree-ssa-forwprop.c (gate_forwprop): Use flag_tree_forwprop.\n\t* tree-ssa-phiprop.c (gate_phiprop): Use flag_tree_phiprop.\n\t* tree-ssa-structalias.c (gate_tree_pta): New function.\n\t(pass_build_alias): Use it.\n\nFrom-SVN: r147571", "tree": {"sha": "1818051a5c78b937696e26c156e5645bc99247d6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1818051a5c78b937696e26c156e5645bc99247d6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/248fc9f328f5f1c4d94052c073bdc7699cacb382", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/248fc9f328f5f1c4d94052c073bdc7699cacb382", "html_url": "https://github.com/Rust-GCC/gccrs/commit/248fc9f328f5f1c4d94052c073bdc7699cacb382", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/248fc9f328f5f1c4d94052c073bdc7699cacb382/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "16b29cc4d6294f78af7026dbf5aae68b03531da3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16b29cc4d6294f78af7026dbf5aae68b03531da3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/16b29cc4d6294f78af7026dbf5aae68b03531da3"}], "stats": {"total": 60, "additions": 54, "deletions": 6}, "files": [{"sha": "f3b70b09c489efa1b6b3303b65ca5bd8827d2eaa", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/248fc9f328f5f1c4d94052c073bdc7699cacb382/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/248fc9f328f5f1c4d94052c073bdc7699cacb382/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=248fc9f328f5f1c4d94052c073bdc7699cacb382", "patch": "@@ -1,3 +1,14 @@\n+2009-05-15  Richard Guenther  <rguenther@suse.de>\n+\n+\t* common.opt (-ftree-forwprop, -ftree-phiprop, -ftree-pta):\n+\tNew options, enabled by default.\n+\t* doc/invoke.texi (-ftree-forwprop, -ftree-phiprop, -ftree-pta):\n+\tDocument.\n+\t* tree-ssa-forwprop.c (gate_forwprop): Use flag_tree_forwprop.\n+\t* tree-ssa-phiprop.c (gate_phiprop): Use flag_tree_phiprop.\n+\t* tree-ssa-structalias.c (gate_tree_pta): New function.\n+\t(pass_build_alias): Use it.\n+\n 2009-05-15  Joseph Myers  <joseph@codesourcery.com>\n \n \t* tree-ssa-forwprop.c (forward_propagate_addr_expr_1): Also"}, {"sha": "d29b0c1752ec84554f7dac64dcd39c3c31ee979d", "filename": "gcc/common.opt", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/248fc9f328f5f1c4d94052c073bdc7699cacb382/gcc%2Fcommon.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/248fc9f328f5f1c4d94052c073bdc7699cacb382/gcc%2Fcommon.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon.opt?ref=248fc9f328f5f1c4d94052c073bdc7699cacb382", "patch": "@@ -1202,6 +1202,10 @@ ftree-dse\n Common Report Var(flag_tree_dse) Optimization\n Enable dead store elimination\n \n+ftree-forwprop\n+Common Report Var(flag_tree_forwprop) Init(1) Optimization\n+Enable forward propagation on trees\n+\n ftree-fre\n Common Report Var(flag_tree_fre) Optimization\n Enable Full Redundancy Elimination (FRE) on trees\n@@ -1230,10 +1234,18 @@ ftree-parallelize-loops=\n Common Report Joined UInteger Var(flag_tree_parallelize_loops) Init(1)\n Enable automatic parallelization of loops\n \n+ftree-phiprop\n+Common Report Var(flag_tree_phiprop) Init(1) Optimization\n+Enable hoisting loads from conditional pointers.\n+\n ftree-pre\n Common Report Var(flag_tree_pre) Optimization\n Enable SSA-PRE optimization on trees\n \n+ftree-pta\n+Common Report Var(flag_tree_pta) Init(1) Optimization\n+Perform function-local points-to analysis on trees.\n+\n ftree-reassoc\n Common Report Var(flag_tree_reassoc) Init(1) Optimization\n Enable reassociation on tree level"}, {"sha": "d22d1da942f41a1d2d95fd4aa6bab74ccad7fbd5", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 23, "deletions": 3, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/248fc9f328f5f1c4d94052c073bdc7699cacb382/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/248fc9f328f5f1c4d94052c073bdc7699cacb382/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=248fc9f328f5f1c4d94052c073bdc7699cacb382", "patch": "@@ -290,12 +290,14 @@ Objective-C and Objective-C++ Dialects}.\n -fdump-tree-gimple@r{[}-raw@r{]} -fdump-tree-mudflap@r{[}-@var{n}@r{]} @gol\n -fdump-tree-dom@r{[}-@var{n}@r{]} @gol\n -fdump-tree-dse@r{[}-@var{n}@r{]} @gol\n+-fdump-tree-phiprop@r{[}-@var{n}@r{]} @gol\n -fdump-tree-phiopt@r{[}-@var{n}@r{]} @gol\n -fdump-tree-forwprop@r{[}-@var{n}@r{]} @gol\n -fdump-tree-copyrename@r{[}-@var{n}@r{]} @gol\n -fdump-tree-nrv -fdump-tree-vect @gol\n -fdump-tree-sink @gol\n -fdump-tree-sra@r{[}-@var{n}@r{]} @gol\n+-fdump-tree-forwprop@r{[}-@var{n}@r{]} @gol\n -fdump-tree-fre@r{[}-@var{n}@r{]} @gol\n -fdump-tree-vrp@r{[}-@var{n}@r{]} @gol\n -ftree-vectorizer-verbose=@var{n} @gol\n@@ -368,10 +370,10 @@ Objective-C and Objective-C++ Dialects}.\n -fstrict-aliasing -fstrict-overflow -fthread-jumps -ftracer @gol\n -ftree-builtin-call-dce -ftree-ccp -ftree-ch -ftree-copy-prop @gol\n -ftree-copyrename -ftree-dce @gol\n--ftree-dominator-opts -ftree-dse -ftree-fre -ftree-loop-im @gol\n--ftree-loop-distribution @gol\n+-ftree-dominator-opts -ftree-dse -ftree-forwprop -ftree-fre -ftree-loop-im @gol\n+-ftree-phiprop -ftree-loop-distribution @gol\n -ftree-loop-ivcanon -ftree-loop-linear -ftree-loop-optimize @gol\n--ftree-parallelize-loops=@var{n} -ftree-pre -ftree-reassoc @gol\n+-ftree-parallelize-loops=@var{n} -ftree-pre -ftree-pta -ftree-reassoc @gol\n -ftree-sink -ftree-sra -ftree-switch-conversion @gol\n -ftree-ter -ftree-vect-loop-version -ftree-vectorize -ftree-vrp @gol\n -funit-at-a-time -funroll-all-loops -funroll-loops @gol\n@@ -5448,8 +5450,11 @@ compilation time.\n -ftree-dce @gol\n -ftree-dominator-opts @gol\n -ftree-dse @gol\n+-ftree-forwprop @gol\n -ftree-fre @gol\n+-ftree-phiprop @gol\n -ftree-sra @gol\n+-ftree-pta @gol\n -ftree-ter @gol\n -funit-at-a-time}\n \n@@ -6162,6 +6167,11 @@ at @option{-O} and higher.\n Perform partial redundancy elimination (PRE) on trees.  This flag is\n enabled by default at @option{-O2} and @option{-O3}.\n \n+@item -ftree-forwprop\n+@opindex ftree-forwprop\n+Perform forward propagation on trees.  This flag is enabled by default\n+at @option{-O} and higher.\n+\n @item -ftree-fre\n @opindex ftree-fre\n Perform full redundancy elimination (FRE) on trees.  The difference\n@@ -6170,6 +6180,11 @@ that are computed on all paths leading to the redundant computation.\n This analysis is faster than PRE, though it exposes fewer redundancies.\n This flag is enabled by default at @option{-O} and higher.\n \n+@item -ftree-phiprop\n+@opindex ftree-phiprop\n+Perform hoisting of loads from conditional pointers on trees.  This\n+pass is enabled by default at @option{-O} and higher.\n+\n @item -ftree-copy-prop\n @opindex ftree-copy-prop\n Perform copy propagation on trees.  This pass eliminates unnecessary\n@@ -6436,6 +6451,11 @@ rather than constrained e.g.@: by memory bandwidth.  This option\n implies @option{-pthread}, and thus is only supported on targets\n that have support for @option{-pthread}.\n \n+@item -ftree-pta\n+@opindex ftree-pta\n+Perform function-local points-to analysis on trees.  This flag is\n+enabled by default at @option{-O} and higher.\n+\n @item -ftree-sra\n @opindex ftree-sra\n Perform scalar replacement of aggregates.  This pass replaces structure"}, {"sha": "31f2ad71640b74f578bf997148f78c7d0b28cf80", "filename": "gcc/tree-ssa-forwprop.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/248fc9f328f5f1c4d94052c073bdc7699cacb382/gcc%2Ftree-ssa-forwprop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/248fc9f328f5f1c4d94052c073bdc7699cacb382/gcc%2Ftree-ssa-forwprop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-forwprop.c?ref=248fc9f328f5f1c4d94052c073bdc7699cacb382", "patch": "@@ -1346,7 +1346,7 @@ tree_ssa_forward_propagate_single_use_vars (void)\n static bool\n gate_forwprop (void)\n {\n-  return 1;\n+  return flag_tree_forwprop;\n }\n \n struct gimple_opt_pass pass_forwprop = "}, {"sha": "022e4af9a4847f83928b591d4fa8ffc8ef170473", "filename": "gcc/tree-ssa-phiprop.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/248fc9f328f5f1c4d94052c073bdc7699cacb382/gcc%2Ftree-ssa-phiprop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/248fc9f328f5f1c4d94052c073bdc7699cacb382/gcc%2Ftree-ssa-phiprop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-phiprop.c?ref=248fc9f328f5f1c4d94052c073bdc7699cacb382", "patch": "@@ -381,7 +381,7 @@ tree_ssa_phiprop (void)\n static bool\n gate_phiprop (void)\n {\n-  return 1;\n+  return flag_tree_phiprop;\n }\n \n struct gimple_opt_pass pass_phiprop = "}, {"sha": "c830f2f8d752d9323717b1b354df2c42f74ad110", "filename": "gcc/tree-ssa-structalias.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/248fc9f328f5f1c4d94052c073bdc7699cacb382/gcc%2Ftree-ssa-structalias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/248fc9f328f5f1c4d94052c073bdc7699cacb382/gcc%2Ftree-ssa-structalias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-structalias.c?ref=248fc9f328f5f1c4d94052c073bdc7699cacb382", "patch": "@@ -5737,6 +5737,11 @@ compute_may_aliases (void)\n   return 0;\n }\n \n+static bool\n+gate_tree_pta (void)\n+{\n+  return flag_tree_pta;\n+}\n \n /* A dummy pass to cause points-to information to be computed via\n    TODO_rebuild_alias.  */\n@@ -5746,7 +5751,7 @@ struct gimple_opt_pass pass_build_alias =\n  {\n   GIMPLE_PASS,\n   \"alias\",\t\t    /* name */\n-  NULL,\t\t\t    /* gate */\n+  gate_tree_pta,\t    /* gate */\n   NULL,                     /* execute */\n   NULL,                     /* sub */\n   NULL,                     /* next */"}]}