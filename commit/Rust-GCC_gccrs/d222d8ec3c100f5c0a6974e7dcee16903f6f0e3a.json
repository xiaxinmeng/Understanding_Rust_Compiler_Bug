{"sha": "d222d8ec3c100f5c0a6974e7dcee16903f6f0e3a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDIyMmQ4ZWMzYzEwMGY1YzBhNjk3NGU3ZGNlZTE2OTAzZjZmMGUzYQ==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-02-07T16:46:42Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-02-07T16:54:54Z"}, "message": "libstdc++: Fix bug in iterator_traits<common_iterator<S,I>>\n\nThe wrong type was being used in the __common_iter_has_arrow constraint,\ncreating a circular dependency where the iterator_traits specialization\nwas needed before it was complete. The correct parameter for the\n__common_iter_has_arrow concept is the first template argument of  the\ncommon_iterator, not the common_iterator itself.\n\n\t* include/bits/stl_iterator.h (__detail::__common_iter_ptr): Change\n\tto take parameters of common_iterator, instead of the common_iterator\n\ttype itself. Fix argument for __common_iter_has_arrow constraint.\n\t(iterator_traits<common_iterator<I, S>>::pointer): Adjust.", "tree": {"sha": "8d9d748edb42fa3e99f5548cdebfc34fbbbc5b6a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8d9d748edb42fa3e99f5548cdebfc34fbbbc5b6a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d222d8ec3c100f5c0a6974e7dcee16903f6f0e3a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d222d8ec3c100f5c0a6974e7dcee16903f6f0e3a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d222d8ec3c100f5c0a6974e7dcee16903f6f0e3a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d222d8ec3c100f5c0a6974e7dcee16903f6f0e3a/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6fa476f6e1a07cf7fafec256ae52cdcb948b133d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6fa476f6e1a07cf7fafec256ae52cdcb948b133d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6fa476f6e1a07cf7fafec256ae52cdcb948b133d"}], "stats": {"total": 23, "additions": 16, "deletions": 7}, "files": [{"sha": "4d8ea9d82123ee608513777c026da382e46fc5e3", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d222d8ec3c100f5c0a6974e7dcee16903f6f0e3a/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d222d8ec3c100f5c0a6974e7dcee16903f6f0e3a/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=d222d8ec3c100f5c0a6974e7dcee16903f6f0e3a", "patch": "@@ -1,3 +1,10 @@\n+2020-02-07  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/bits/stl_iterator.h (__detail::__common_iter_ptr): Change\n+\tto take parameters of common_iterator, instead of the common_iterator\n+\ttype itself. Fix argument for __common_iter_has_arrow constraint.\n+\t(iterator_traits<common_iterator<I, S>>::pointer): Adjust.\n+\n 2020-02-07  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* include/std/ranges (iota_view): Add braces to prevent -Wempty-body"}, {"sha": "46804656801345cde1cb7bac2b4ca43b87c6c91c", "filename": "libstdc++-v3/include/bits/stl_iterator.h", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d222d8ec3c100f5c0a6974e7dcee16903f6f0e3a/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_iterator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d222d8ec3c100f5c0a6974e7dcee16903f6f0e3a/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_iterator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_iterator.h?ref=d222d8ec3c100f5c0a6974e7dcee16903f6f0e3a", "patch": "@@ -1738,17 +1738,20 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   namespace __detail\n   {\n     // FIXME: This has to be at namespace-scope because of PR 92103.\n-    template<typename _Iter>\n+    template<typename _It, typename _Sent>\n       struct __common_iter_ptr\n       {\n \tusing type = void;\n       };\n \n-    template<typename _Iter>\n-      requires __detail::__common_iter_has_arrow<_Iter>\n-      struct __common_iter_ptr<_Iter>\n+    template<typename _It, typename _Sent>\n+      requires __detail::__common_iter_has_arrow<_It>\n+      struct __common_iter_ptr<_It, _Sent>\n       {\n-\tusing type = decltype(std::declval<const _Iter&>().operator->());\n+\tusing common_iterator = std::common_iterator<_It, _Sent>;\n+\n+\tusing type\n+\t  = decltype(std::declval<const common_iterator&>().operator->());\n       };\n   } // namespace __detail\n \n@@ -1762,8 +1765,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \tforward_iterator_tag, input_iterator_tag>;\n       using value_type = iter_value_t<_It>;\n       using difference_type = iter_difference_t<_It>;\n-      using pointer = typename\n-\t__detail::__common_iter_ptr<common_iterator<_It, _Sent>>::type;\n+      using pointer = typename __detail::__common_iter_ptr<_It, _Sent>::type;\n       using reference = iter_reference_t<_It>;\n     };\n "}]}