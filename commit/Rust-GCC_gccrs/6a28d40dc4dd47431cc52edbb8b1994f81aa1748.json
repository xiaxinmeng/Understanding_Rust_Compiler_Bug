{"sha": "6a28d40dc4dd47431cc52edbb8b1994f81aa1748", "node_id": "C_kwDOANBUbNoAKDZhMjhkNDBkYzRkZDQ3NDMxY2M1MmVkYmI4YjE5OTRmODFhYTE3NDg", "commit": {"author": {"name": "Justin Squirek", "email": "squirek@adacore.com", "date": "2022-01-31T21:51:38Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2022-05-13T08:04:32Z"}, "message": "[Ada] Improve expected type error messages\n\nThis patch improves error messages concerning type mismatches by\nprinting the actual expected type in more cases instead of the expected\ntype's first subtype.\n\ngcc/ada/\n\n\t* sem_util.adb (Wrong_Type): Avoid using the first subtype of\n\tthe expected type in error messages when the expected type is\n\tnot internally generated.", "tree": {"sha": "6dd2fe2ee289f89c6a57047d2052b5d1f00c48a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6dd2fe2ee289f89c6a57047d2052b5d1f00c48a6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6a28d40dc4dd47431cc52edbb8b1994f81aa1748", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a28d40dc4dd47431cc52edbb8b1994f81aa1748", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a28d40dc4dd47431cc52edbb8b1994f81aa1748", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a28d40dc4dd47431cc52edbb8b1994f81aa1748/comments", "author": {"login": "AdaDoom3", "id": 3445599, "node_id": "MDQ6VXNlcjM0NDU1OTk=", "avatar_url": "https://avatars.githubusercontent.com/u/3445599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AdaDoom3", "html_url": "https://github.com/AdaDoom3", "followers_url": "https://api.github.com/users/AdaDoom3/followers", "following_url": "https://api.github.com/users/AdaDoom3/following{/other_user}", "gists_url": "https://api.github.com/users/AdaDoom3/gists{/gist_id}", "starred_url": "https://api.github.com/users/AdaDoom3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AdaDoom3/subscriptions", "organizations_url": "https://api.github.com/users/AdaDoom3/orgs", "repos_url": "https://api.github.com/users/AdaDoom3/repos", "events_url": "https://api.github.com/users/AdaDoom3/events{/privacy}", "received_events_url": "https://api.github.com/users/AdaDoom3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cf54619a8e33d2494b9f216f27d0110b8e0a4e49", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf54619a8e33d2494b9f216f27d0110b8e0a4e49", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf54619a8e33d2494b9f216f27d0110b8e0a4e49"}], "stats": {"total": 16, "additions": 14, "deletions": 2}, "files": [{"sha": "b7ebd4abbaac5e608d8640e53d89e88ae1ab8215", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a28d40dc4dd47431cc52edbb8b1994f81aa1748/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a28d40dc4dd47431cc52edbb8b1994f81aa1748/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=6a28d40dc4dd47431cc52edbb8b1994f81aa1748", "patch": "@@ -30374,6 +30374,9 @@ package body Sem_Util is\n       Found_Type : constant Entity_Id := First_Subtype (Etype (Expr));\n       Expec_Type : constant Entity_Id := First_Subtype (Expected_Type);\n \n+      Err_Msg_Exp_Typ : Entity_Id := Expected_Type;\n+      --  Type entity used when printing errors concerning the expected type\n+\n       Matching_Field : Entity_Id;\n       --  Entity to give a more precise suggestion on how to write a one-\n       --  element positional aggregate.\n@@ -30531,6 +30534,15 @@ package body Sem_Util is\n          end if;\n       end if;\n \n+      --  Avoid printing internally generated subtypes in error messages and\n+      --  instead use the corresponding first subtype in such cases.\n+\n+      if not Comes_From_Source (Err_Msg_Exp_Typ)\n+        or else not Comes_From_Source (Declaration_Node (Err_Msg_Exp_Typ))\n+      then\n+         Err_Msg_Exp_Typ := First_Subtype (Err_Msg_Exp_Typ);\n+      end if;\n+\n       --  An interesting special check. If the expression is parenthesized\n       --  and its type corresponds to the type of the sole component of the\n       --  expected record type, or to the component type of the expected one\n@@ -30568,7 +30580,7 @@ package body Sem_Util is\n          Error_Msg_N\n            (\"result must be general access type!\", Expr);\n          Error_Msg_NE -- CODEFIX\n-           (\"\\add ALL to }!\", Expr, Expec_Type);\n+           (\"\\add ALL to }!\", Expr, Err_Msg_Exp_Typ);\n \n       --  Another special check, if the expected type is an integer type,\n       --  but the expression is of type System.Address, and the parent is\n@@ -30660,7 +30672,7 @@ package body Sem_Util is\n             Error_Msg_NE (\"expected}!\", Expr,\n                           Corresponding_Remote_Type (Expec_Type));\n          else\n-            Error_Msg_NE (\"expected}!\", Expr, Expec_Type);\n+            Error_Msg_NE (\"expected}!\", Expr, Err_Msg_Exp_Typ);\n          end if;\n \n          if Is_Entity_Name (Expr)"}]}