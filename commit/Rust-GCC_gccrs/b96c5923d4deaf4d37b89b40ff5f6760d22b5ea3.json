{"sha": "b96c5923d4deaf4d37b89b40ff5f6760d22b5ea3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yjk2YzU5MjNkNGRlYWY0ZDM3Yjg5YjQwZmY1ZjY3NjBkMjJiNWVhMw==", "commit": {"author": {"name": "David Daney", "email": "ddaney@caviumnetworks.com", "date": "2009-07-10T22:49:52Z"}, "committer": {"name": "David Daney", "email": "daney@gcc.gnu.org", "date": "2009-07-10T22:49:52Z"}, "message": "re PR target/39079 (MIPS: __builtin___clear_cache() broken on SMP ISA_HAS_SYNCI systems.)\n\n2009-07-10  David Daney  <ddaney@caviumnetworks.com>\n\n\tPR target/39079\n\t* testsuite/gcc.target/mips/mips.exp: Make -msynci a known option.\n\t* gcc.target/mips/clear-cache-1.c (dg-options): Add -msynci.\n\n2009-07-10  David Daney  <ddaney@caviumnetworks.com>\n\n\tPR target/39079\n\t* config.gcc (supported_defaults): Add synci.\n\t(with_synci): Add validation.\n\t(all_defaults): Add synci.\n\t* config/mips/mips.md (clear_cache): Use TARGET_SYNCI instead of\n\tISA_HAS_SYNCI.\n\t(synci): Same.\n\t* config/mips/mips.opt (msynci): New option.\n\t* config/mips/mips.c (mips_override_options): Warn on use of\n\t-msynci for targets that do now support it.\n\t* gcc/config/mips/mips.h (OPTION_DEFAULT_SPECS): Add a default for\n\tmsynci.\n\t* gcc/doc/invoke.texi (-msynci): Document the new option.\n\t* doc/install.texi (--with-synci): Document the new option.\n\nFrom-SVN: r149500", "tree": {"sha": "e846e50d187b33820a2ae16a58b477f3b1568603", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e846e50d187b33820a2ae16a58b477f3b1568603"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b96c5923d4deaf4d37b89b40ff5f6760d22b5ea3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b96c5923d4deaf4d37b89b40ff5f6760d22b5ea3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b96c5923d4deaf4d37b89b40ff5f6760d22b5ea3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b96c5923d4deaf4d37b89b40ff5f6760d22b5ea3/comments", "author": null, "committer": null, "parents": [{"sha": "5bde96d27e87d819a33236ad3a3ee718fe633d37", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5bde96d27e87d819a33236ad3a3ee718fe633d37", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5bde96d27e87d819a33236ad3a3ee718fe633d37"}], "stats": {"total": 88, "additions": 81, "deletions": 7}, "files": [{"sha": "bff4bd70ac3f6d32ae63832fa1583415da3e52e0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b96c5923d4deaf4d37b89b40ff5f6760d22b5ea3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b96c5923d4deaf4d37b89b40ff5f6760d22b5ea3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b96c5923d4deaf4d37b89b40ff5f6760d22b5ea3", "patch": "@@ -1,3 +1,20 @@\n+2009-07-10  David Daney  <ddaney@caviumnetworks.com>\n+\n+\tPR target/39079\n+\t* config.gcc (supported_defaults): Add synci.\n+\t(with_synci): Add validation.\n+\t(all_defaults): Add synci.\n+\t* config/mips/mips.md (clear_cache): Use TARGET_SYNCI instead of\n+\tISA_HAS_SYNCI.\n+\t(synci): Same.\n+\t* config/mips/mips.opt (msynci): New option.\n+\t* config/mips/mips.c (mips_override_options): Warn on use of\n+\t-msynci for targets that do now support it.\n+\t* gcc/config/mips/mips.h (OPTION_DEFAULT_SPECS): Add a default for\n+\tmsynci.\n+\t* gcc/doc/invoke.texi (-msynci): Document the new option.\n+\t* doc/install.texi (--with-synci): Document the new option.\n+\n 2009-07-10  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/40496"}, {"sha": "98d7771b322808df16e76547ce5ff6289babe34e", "filename": "gcc/config.gcc", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b96c5923d4deaf4d37b89b40ff5f6760d22b5ea3/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b96c5923d4deaf4d37b89b40ff5f6760d22b5ea3/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=b96c5923d4deaf4d37b89b40ff5f6760d22b5ea3", "patch": "@@ -2902,7 +2902,7 @@ case \"${target}\" in\n \t\t;;\n \n \tmips*-*-*)\n-\t\tsupported_defaults=\"abi arch arch_32 arch_64 float tune tune_32 tune_64 divide llsc mips-plt\"\n+\t\tsupported_defaults=\"abi arch arch_32 arch_64 float tune tune_32 tune_64 divide llsc mips-plt synci\"\n \n \t\tcase ${with_float} in\n \t\t\"\" | soft | hard)\n@@ -2964,6 +2964,20 @@ case \"${target}\" in\n \t\t\texit 1\n \t\t\t;;\n \t\tesac\n+\n+\t\tcase ${with_synci} in\n+\t\tyes)\n+\t\t\twith_synci=synci\n+\t\t\t;;\n+\t\t\"\" | no)\n+\t\t\t# No is the default.\n+\t\t\twith_synci=no-synci\n+\t\t\t;;\n+\t\t*)\n+\t\t\techo \"Unknown synci type used in --with-synci\" 1>&2\n+\t\t\texit 1\n+\t\t\t;;\n+\t\tesac\n \t\t;;\n \n \tpowerpc*-*-* | rs6000-*-*)\n@@ -3230,7 +3244,7 @@ case ${target} in\n esac\n \n t=\n-all_defaults=\"abi cpu cpu_32 cpu_64 arch arch_32 arch_64 tune tune_32 tune_64 schedule float mode fpu divide llsc mips-plt\"\n+all_defaults=\"abi cpu cpu_32 cpu_64 arch arch_32 arch_64 tune tune_32 tune_64 schedule float mode fpu divide llsc mips-plt synci\"\n for option in $all_defaults\n do\n \teval \"val=\\$with_\"`echo $option | sed s/-/_/g`"}, {"sha": "4a10fb47244dfa53d8837976115967f0c72550cb", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b96c5923d4deaf4d37b89b40ff5f6760d22b5ea3/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b96c5923d4deaf4d37b89b40ff5f6760d22b5ea3/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=b96c5923d4deaf4d37b89b40ff5f6760d22b5ea3", "patch": "@@ -14524,6 +14524,13 @@ mips_override_options (void)\n           : !TARGET_BRANCHLIKELY))\n     sorry (\"%qs requires branch-likely instructions\", \"-mfix-r10000\");\n \n+  if (TARGET_SYNCI && !ISA_HAS_SYNCI)\n+    {\n+      warning (0, \"the %qs architecture does not support the synci \"\n+\t       \"instruction\", mips_arch_info->name);\n+      target_flags &= ~MASK_SYNCI;\n+    }\n+\n   /* Save base state of options.  */\n   mips_base_target_flags = target_flags;\n   mips_base_schedule_insns = flag_schedule_insns;"}, {"sha": "a3ab2f8bb8fef63f6260e79057085ed14acaa8ab", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b96c5923d4deaf4d37b89b40ff5f6760d22b5ea3/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b96c5923d4deaf4d37b89b40ff5f6760d22b5ea3/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=b96c5923d4deaf4d37b89b40ff5f6760d22b5ea3", "patch": "@@ -787,7 +787,8 @@ enum mips_code_readable_setting {\n   {\"float\", \"%{!msoft-float:%{!mhard-float:-m%(VALUE)-float}}\" }, \\\n   {\"divide\", \"%{!mdivide-traps:%{!mdivide-breaks:-mdivide-%(VALUE)}}\" }, \\\n   {\"llsc\", \"%{!mllsc:%{!mno-llsc:-m%(VALUE)}}\" }, \\\n-  {\"mips-plt\", \"%{!mplt:%{!mno-plt:-m%(VALUE)}}\" }\n+  {\"mips-plt\", \"%{!mplt:%{!mno-plt:-m%(VALUE)}}\" }, \\\n+  {\"synci\", \"%{!msynci:%{!mno-synci:-m%(VALUE)}}\" }\n \n \n /* A spec that infers the -mdsp setting from an -march argument.  */"}, {"sha": "3c42b4656935e032464fe2079c3e2fa176a77a9d", "filename": "gcc/config/mips/mips.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b96c5923d4deaf4d37b89b40ff5f6760d22b5ea3/gcc%2Fconfig%2Fmips%2Fmips.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b96c5923d4deaf4d37b89b40ff5f6760d22b5ea3/gcc%2Fconfig%2Fmips%2Fmips.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.md?ref=b96c5923d4deaf4d37b89b40ff5f6760d22b5ea3", "patch": "@@ -4728,7 +4728,7 @@\n   \"\"\n   \"\n {\n-  if (ISA_HAS_SYNCI)\n+  if (TARGET_SYNCI)\n     {\n       mips_expand_synci_loop (operands[0], operands[1]);\n       emit_insn (gen_sync ());\n@@ -4753,7 +4753,7 @@\n (define_insn \"synci\"\n   [(unspec_volatile [(match_operand 0 \"pmode_register_operand\" \"d\")]\n \t\t    UNSPEC_SYNCI)]\n-  \"ISA_HAS_SYNCI\"\n+  \"TARGET_SYNCI\"\n   \"synci\\t0(%0)\")\n \n (define_insn \"rdhwr_synci_step_<mode>\""}, {"sha": "9038125fae4b9d6b607d86db12fcedbe94f23cbc", "filename": "gcc/config/mips/mips.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b96c5923d4deaf4d37b89b40ff5f6760d22b5ea3/gcc%2Fconfig%2Fmips%2Fmips.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b96c5923d4deaf4d37b89b40ff5f6760d22b5ea3/gcc%2Fconfig%2Fmips%2Fmips.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.opt?ref=b96c5923d4deaf4d37b89b40ff5f6760d22b5ea3", "patch": "@@ -268,6 +268,10 @@ msym32\n Target Report Var(TARGET_SYM32)\n Assume all symbols have 32-bit values\n \n+msynci\n+Target Report Mask(SYNCI)\n+Use synci instruction to invalidate i-cache\n+\n mtune=\n Target RejectNegative Joined Var(mips_tune_string)\n -mtune=PROCESSOR\tOptimize the output for PROCESSOR"}, {"sha": "a480dc5e066c39074ec26b538c0325908eeb8218", "filename": "gcc/doc/install.texi", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b96c5923d4deaf4d37b89b40ff5f6760d22b5ea3/gcc%2Fdoc%2Finstall.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b96c5923d4deaf4d37b89b40ff5f6760d22b5ea3/gcc%2Fdoc%2Finstall.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finstall.texi?ref=b96c5923d4deaf4d37b89b40ff5f6760d22b5ea3", "patch": "@@ -1170,6 +1170,14 @@ not provide them.\n On MIPS targets, make @option{-mno-llsc} the default when no\n @option{-mllsc} option is passed.\n \n+@item --with-synci\n+On MIPS targets, make @option{-msynci} the default when no\n+@option{-mno-synci} option is passed.\n+\n+@item --without-synci \n+On MIPS targets, make @option{-mno-synci} the default when no\n+@option{-msynci} option is passed.  This is the default.\n+\n @item --with-mips-plt\n On MIPS targets, make use of copy relocations and PLTs.\n These features are extensions to the traditional"}, {"sha": "b8313956d2d0dd290549d87f9d08127d4f2fa93a", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b96c5923d4deaf4d37b89b40ff5f6760d22b5ea3/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b96c5923d4deaf4d37b89b40ff5f6760d22b5ea3/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=b96c5923d4deaf4d37b89b40ff5f6760d22b5ea3", "patch": "@@ -695,7 +695,7 @@ Objective-C and Objective-C++ Dialects}.\n -mflush-func=@var{func}  -mno-flush-func @gol\n -mbranch-cost=@var{num}  -mbranch-likely  -mno-branch-likely @gol\n -mfp-exceptions -mno-fp-exceptions @gol\n--mvr4130-align -mno-vr4130-align}\n+-mvr4130-align -mno-vr4130-align -msynci -mno-synci}\n \n @emph{MMIX Options}\n @gccoptlist{-mlibfuncs  -mno-libfuncs  -mepsilon  -mno-epsilon  -mabi=gnu @gol\n@@ -13712,6 +13712,22 @@ thinks should execute in parallel.\n This option only has an effect when optimizing for the VR4130.\n It normally makes code faster, but at the expense of making it bigger.\n It is enabled by default at optimization level @option{-O3}.\n+\n+@item -msynci\n+@itemx -mno-synci\n+@opindex msynci\n+Enable (disable) generation of @code{synci} instructions on\n+architectures that support it.  The @code{synci} instructions (if\n+enabled) will be generated when @code{__builtin___clear_cache()} is\n+compiled.\n+\n+This option defaults to @code{-mno-synci}, but the default can be\n+overridden by configuring with @code{--with-synci}.\n+\n+When compiling code for single processor systems, it is generally safe\n+to use @code{synci}.  However, on many multi-core (SMP) systems, it\n+will not invalidate the instruction caches on all cores and may lead\n+to undefined behavior.\n @end table\n \n @node MMIX Options"}, {"sha": "6a873c7846a257cd9dbf501d2538b85cdec7114a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b96c5923d4deaf4d37b89b40ff5f6760d22b5ea3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b96c5923d4deaf4d37b89b40ff5f6760d22b5ea3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b96c5923d4deaf4d37b89b40ff5f6760d22b5ea3", "patch": "@@ -1,3 +1,9 @@\n+2009-07-10  David Daney  <ddaney@caviumnetworks.com>\n+\n+\tPR target/39079\n+\t* testsuite/gcc.target/mips/mips.exp: Make -msynci a known option.\n+\t* gcc.target/mips/clear-cache-1.c (dg-options): Add -msynci.\n+\n 2009-07-10  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/40502"}, {"sha": "0ccc007fbc789cd22fb6843fd00b7018742cfaff", "filename": "gcc/testsuite/gcc.target/mips/clear-cache-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b96c5923d4deaf4d37b89b40ff5f6760d22b5ea3/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fclear-cache-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b96c5923d4deaf4d37b89b40ff5f6760d22b5ea3/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fclear-cache-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fclear-cache-1.c?ref=b96c5923d4deaf4d37b89b40ff5f6760d22b5ea3", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 isa_rev>=2\" } */\n+/* { dg-options \"-O2 -msynci isa_rev>=2\" } */\n /* { dg-final { scan-assembler \"synci\" } } */\n /* { dg-final { scan-assembler \"jr.hb\" } } */\n /* { dg-final { scan-assembler-not \"_flush_cache\" } } */"}, {"sha": "5ec2142224284c221de74f73e0bd55d9a6eb63c1", "filename": "gcc/testsuite/gcc.target/mips/mips.exp", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b96c5923d4deaf4d37b89b40ff5f6760d22b5ea3/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b96c5923d4deaf4d37b89b40ff5f6760d22b5ea3/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmips.exp?ref=b96c5923d4deaf4d37b89b40ff5f6760d22b5ea3", "patch": "@@ -234,6 +234,7 @@ foreach option {\n     shared\n     smartmips\n     sym32\n+    synci\n } {\n     lappend mips_option_groups $option \"-m(no-|)$option\"\n }"}]}