{"sha": "4491f0aeaff463602a5b6488eef2e67e2c13ecfe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDQ5MWYwYWVhZmY0NjM2MDJhNWI2NDg4ZWVmMmU2N2UyYzEzZWNmZQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2007-06-06T10:54:04Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2007-06-06T10:54:04Z"}, "message": "Minor editing.\n\nUpdate constants.\nUpdate copyright notice.\n\nFrom-SVN: r125479", "tree": {"sha": "9305b277c803381c3308ee5a53057084a808937c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9305b277c803381c3308ee5a53057084a808937c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4491f0aeaff463602a5b6488eef2e67e2c13ecfe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4491f0aeaff463602a5b6488eef2e67e2c13ecfe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4491f0aeaff463602a5b6488eef2e67e2c13ecfe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4491f0aeaff463602a5b6488eef2e67e2c13ecfe/comments", "author": null, "committer": null, "parents": [{"sha": "a99ada67cfc0517c1c827743bedbe11c24a64074", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a99ada67cfc0517c1c827743bedbe11c24a64074", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a99ada67cfc0517c1c827743bedbe11c24a64074"}], "stats": {"total": 507, "additions": 411, "deletions": 96}, "files": [{"sha": "4d00671d77ebea681ce545424116ea0e34b6e1a3", "filename": "gcc/ada/alloc.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4491f0aeaff463602a5b6488eef2e67e2c13ecfe/gcc%2Fada%2Falloc.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4491f0aeaff463602a5b6488eef2e67e2c13ecfe/gcc%2Fada%2Falloc.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Falloc.ads?ref=4491f0aeaff463602a5b6488eef2e67e2c13ecfe", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "2d11b2f485fbaae6a250c063702c290ef4ae0d7e", "filename": "gcc/ada/cuintp.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4491f0aeaff463602a5b6488eef2e67e2c13ecfe/gcc%2Fada%2Fcuintp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4491f0aeaff463602a5b6488eef2e67e2c13ecfe/gcc%2Fada%2Fcuintp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcuintp.c?ref=4491f0aeaff463602a5b6488eef2e67e2c13ecfe", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                          C Implementation File                           *\n  *                                                                          *\n- *          Copyright (C) 1992-2007 Free Software Foundation, Inc.          *\n+ *          Copyright (C) 1992-2007, Free Software Foundation, Inc.         *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *"}, {"sha": "125a706f533bc9b3ab399faea8960f15a071cfdc", "filename": "gcc/ada/freeze.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4491f0aeaff463602a5b6488eef2e67e2c13ecfe/gcc%2Fada%2Ffreeze.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4491f0aeaff463602a5b6488eef2e67e2c13ecfe/gcc%2Fada%2Ffreeze.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.ads?ref=4491f0aeaff463602a5b6488eef2e67e2c13ecfe", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "5c2946b4b348517617d33ed78b6cc4e8b1a60d80", "filename": "gcc/ada/g-soccon-linux-64.ads", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4491f0aeaff463602a5b6488eef2e67e2c13ecfe/gcc%2Fada%2Fg-soccon-linux-64.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4491f0aeaff463602a5b6488eef2e67e2c13ecfe/gcc%2Fada%2Fg-soccon-linux-64.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-soccon-linux-64.ads?ref=4491f0aeaff463602a5b6488eef2e67e2c13ecfe", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2000-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2000-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -178,4 +178,17 @@ package GNAT.Sockets.Constants is\n    SIZEOF_tv_sec      : constant :=            8; --  tv_sec\n    SIZEOF_tv_usec     : constant :=            8; --  tv_usec\n \n+   ----------------------------------------\n+   -- Properties of supported interfaces --\n+   ----------------------------------------\n+\n+   Need_Netdb_Buffer  : constant :=            1; --  Need buffer for Netdb ops\n+\n+   ----------------------\n+   -- Additional flags --\n+   ----------------------\n+\n+   Thread_Blocking_IO : constant Boolean := True;\n+   --  Set False for contexts where socket i/o are process blocking\n+\n end GNAT.Sockets.Constants;"}, {"sha": "eb254e94ca2b79831651ea6aa74e63ef47308b3f", "filename": "gcc/ada/g-soccon-linux-ppc.ads", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4491f0aeaff463602a5b6488eef2e67e2c13ecfe/gcc%2Fada%2Fg-soccon-linux-ppc.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4491f0aeaff463602a5b6488eef2e67e2c13ecfe/gcc%2Fada%2Fg-soccon-linux-ppc.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-soccon-linux-ppc.ads?ref=4491f0aeaff463602a5b6488eef2e67e2c13ecfe", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2000-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2000-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -178,4 +178,17 @@ package GNAT.Sockets.Constants is\n    SIZEOF_tv_sec      : constant :=            4; --  tv_sec\n    SIZEOF_tv_usec     : constant :=            4; --  tv_usec\n \n+   ----------------------------------------\n+   -- Properties of supported interfaces --\n+   ----------------------------------------\n+\n+   Need_Netdb_Buffer  : constant :=            1; --  Need buffer for Netdb ops\n+\n+   ----------------------\n+   -- Additional flags --\n+   ----------------------\n+\n+   Thread_Blocking_IO : constant Boolean := True;\n+   --  Set False for contexts where socket i/o are process blocking\n+\n end GNAT.Sockets.Constants;"}, {"sha": "cb42441a57c6e93ba37b52a717c94e0c9e1014df", "filename": "gcc/ada/g-soccon-linux-x86.ads", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4491f0aeaff463602a5b6488eef2e67e2c13ecfe/gcc%2Fada%2Fg-soccon-linux-x86.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4491f0aeaff463602a5b6488eef2e67e2c13ecfe/gcc%2Fada%2Fg-soccon-linux-x86.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-soccon-linux-x86.ads?ref=4491f0aeaff463602a5b6488eef2e67e2c13ecfe", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2000-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2000-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -178,4 +178,17 @@ package GNAT.Sockets.Constants is\n    SIZEOF_tv_sec      : constant :=            4; --  tv_sec\n    SIZEOF_tv_usec     : constant :=            4; --  tv_usec\n \n+   ----------------------------------------\n+   -- Properties of supported interfaces --\n+   ----------------------------------------\n+\n+   Need_Netdb_Buffer  : constant :=            1; --  Need buffer for Netdb ops\n+\n+   ----------------------\n+   -- Additional flags --\n+   ----------------------\n+\n+   Thread_Blocking_IO : constant Boolean := True;\n+   --  Set False for contexts where socket i/o are process blocking\n+\n end GNAT.Sockets.Constants;"}, {"sha": "851bfbe7cc308cd08eaedfc90f327558a83290f3", "filename": "gcc/ada/g-soccon-lynxos.ads", "status": "added", "additions": 194, "deletions": 0, "changes": 194, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4491f0aeaff463602a5b6488eef2e67e2c13ecfe/gcc%2Fada%2Fg-soccon-lynxos.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4491f0aeaff463602a5b6488eef2e67e2c13ecfe/gcc%2Fada%2Fg-soccon-lynxos.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-soccon-lynxos.ads?ref=4491f0aeaff463602a5b6488eef2e67e2c13ecfe", "patch": "@@ -0,0 +1,194 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                         GNAT COMPILER COMPONENTS                         --\n+--                                                                          --\n+--               G N A T . S O C K E T S . C O N S T A N T S                --\n+--                                                                          --\n+--                                 S p e c                                  --\n+--                                                                          --\n+--          Copyright (C) 2000-2007, Free Software Foundation, Inc.         --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n+-- for  more details.  You should have  received  a copy of the GNU General --\n+-- Public License  distributed with GNAT;  see file COPYING.  If not, write --\n+-- to  the  Free Software Foundation,  51  Franklin  Street,  Fifth  Floor, --\n+-- Boston, MA 02110-1301, USA.                                              --\n+--                                                                          --\n+-- As a special exception,  if other files  instantiate  generics from this --\n+-- unit, or you link  this unit with other files  to produce an executable, --\n+-- this  unit  does not  by itself cause  the resulting  executable  to  be --\n+-- covered  by the  GNU  General  Public  License.  This exception does not --\n+-- however invalidate  any other reasons why  the executable file  might be --\n+-- covered by the  GNU Public License.                                      --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+--  This package provides target dependent definitions of constant for use\n+--  by the GNAT.Sockets package (g-socket.ads). This package should not be\n+--  directly with'ed by an applications program.\n+\n+--  This is the version for i386-elf-lynxos\n+--  This file is generated automatically, do not modify it by hand! Instead,\n+--  make changes to gen-soccon.c and re-run it on each target.\n+\n+package GNAT.Sockets.Constants is\n+\n+   --------------\n+   -- Families --\n+   --------------\n+\n+   AF_INET            : constant :=          2; --  IPv4 address family\n+   AF_INET6           : constant :=         28; --  IPv6 address family\n+\n+   -----------\n+   -- Modes --\n+   -----------\n+\n+   SOCK_STREAM        : constant :=          1; --  Stream socket\n+   SOCK_DGRAM         : constant :=          2; --  Datagram socket\n+\n+   -------------------\n+   -- Socket errors --\n+   -------------------\n+\n+   EACCES             : constant :=         13; --  Permission denied\n+   EADDRINUSE         : constant :=         98; --  Address already in use\n+   EADDRNOTAVAIL      : constant :=         99; --  Cannot assign address\n+   EAFNOSUPPORT       : constant :=         97; --  Addr family not supported\n+   EALREADY           : constant :=        114; --  Operation in progress\n+   EBADF              : constant :=          9; --  Bad file descriptor\n+   ECONNABORTED       : constant :=        103; --  Connection aborted\n+   ECONNREFUSED       : constant :=        111; --  Connection refused\n+   ECONNRESET         : constant :=        104; --  Connection reset by peer\n+   EDESTADDRREQ       : constant :=         89; --  Destination addr required\n+   EFAULT             : constant :=         14; --  Bad address\n+   EHOSTDOWN          : constant :=        112; --  Host is down\n+   EHOSTUNREACH       : constant :=        113; --  No route to host\n+   EINPROGRESS        : constant :=        115; --  Operation now in progress\n+   EINTR              : constant :=          4; --  Interrupted system call\n+   EINVAL             : constant :=         22; --  Invalid argument\n+   EIO                : constant :=          5; --  Input output error\n+   EISCONN            : constant :=        106; --  Socket already connected\n+   ELOOP              : constant :=         40; --  Too many symbolic lynks\n+   EMFILE             : constant :=         24; --  Too many open files\n+   EMSGSIZE           : constant :=         90; --  Message too long\n+   ENAMETOOLONG       : constant :=         36; --  Name too long\n+   ENETDOWN           : constant :=        100; --  Network is down\n+   ENETRESET          : constant :=        102; --  Disconn. on network reset\n+   ENETUNREACH        : constant :=        101; --  Network is unreachable\n+   ENOBUFS            : constant :=        105; --  No buffer space available\n+   ENOPROTOOPT        : constant :=         92; --  Protocol not available\n+   ENOTCONN           : constant :=        107; --  Socket not connected\n+   ENOTSOCK           : constant :=         88; --  Operation on non socket\n+   EOPNOTSUPP         : constant :=         95; --  Operation not supported\n+   EPFNOSUPPORT       : constant :=         96; --  Unknown protocol family\n+   EPROTONOSUPPORT    : constant :=         93; --  Unknown protocol\n+   EPROTOTYPE         : constant :=         91; --  Unknown protocol type\n+   ESHUTDOWN          : constant :=        108; --  Cannot send once shutdown\n+   ESOCKTNOSUPPORT    : constant :=         94; --  Socket type not supported\n+   ETIMEDOUT          : constant :=        110; --  Connection timed out\n+   ETOOMANYREFS       : constant :=        109; --  Too many references\n+   EWOULDBLOCK        : constant :=         11; --  Operation would block\n+\n+   -----------------\n+   -- Host errors --\n+   -----------------\n+\n+   HOST_NOT_FOUND     : constant :=          1; --  Unknown host\n+   TRY_AGAIN          : constant :=          2; --  Host name lookup failure\n+   NO_DATA            : constant :=          4; --  No data record for name\n+   NO_RECOVERY        : constant :=          3; --  Non recoverable errors\n+\n+   -------------------\n+   -- Control flags --\n+   -------------------\n+\n+   FIONBIO            : constant :=      21537; --  Set/clear non-blocking io\n+   FIONREAD           : constant :=      21531; --  How many bytes to read\n+\n+   --------------------\n+   -- Shutdown modes --\n+   --------------------\n+\n+   SHUT_RD            : constant :=          0; --  No more recv\n+   SHUT_WR            : constant :=          1; --  No more send\n+   SHUT_RDWR          : constant :=          2; --  No more recv/send\n+\n+   ---------------------\n+   -- Protocol levels --\n+   ---------------------\n+\n+   SOL_SOCKET         : constant :=      65535; --  Options for socket level\n+   IPPROTO_IP         : constant :=          0; --  Dummy protocol for IP\n+   IPPROTO_UDP        : constant :=         17; --  UDP\n+   IPPROTO_TCP        : constant :=          6; --  TCP\n+\n+   -------------------\n+   -- Request flags --\n+   -------------------\n+\n+   MSG_OOB            : constant :=          1; --  Process out-of-band data\n+   MSG_PEEK           : constant :=          2; --  Peek at incoming data\n+   MSG_EOR            : constant :=        128; --  Send end of record\n+   MSG_WAITALL        : constant :=        256; --  Wait for full reception\n+   MSG_NOSIGNAL       : constant :=         -1; --  No SIGPIPE on send\n+   MSG_Forced_Flags   : constant :=          0;\n+   --  Flags set on all send(2) calls\n+\n+   --------------------\n+   -- Socket options --\n+   --------------------\n+\n+   TCP_NODELAY        : constant :=          1; --  Do not coalesce packets\n+   SO_REUSEADDR       : constant :=          4; --  Bind reuse local address\n+   SO_KEEPALIVE       : constant :=          8; --  Enable keep-alive msgs\n+   SO_LINGER          : constant :=        128; --  Defer close to flush data\n+   SO_BROADCAST       : constant :=         32; --  Can send broadcast msgs\n+   SO_SNDBUF          : constant :=       4097; --  Set/get send buffer size\n+   SO_RCVBUF          : constant :=       4098; --  Set/get recv buffer size\n+   SO_SNDTIMEO        : constant :=       4101; --  Emission timeout\n+   SO_RCVTIMEO        : constant :=       4102; --  Reception timeout\n+   SO_ERROR           : constant :=       4103; --  Get/clear error status\n+   IP_MULTICAST_IF    : constant :=          9; --  Set/get mcast interface\n+   IP_MULTICAST_TTL   : constant :=         10; --  Set/get multicast TTL\n+   IP_MULTICAST_LOOP  : constant :=         11; --  Set/get mcast loopback\n+   IP_ADD_MEMBERSHIP  : constant :=         12; --  Join a multicast group\n+   IP_DROP_MEMBERSHIP : constant :=         13; --  Leave a multicast group\n+\n+   -------------------\n+   -- System limits --\n+   -------------------\n+\n+   IOV_MAX            : constant := 2147483647; --  Maximum writev iovcnt\n+\n+   ----------------------\n+   -- Type definitions --\n+   ----------------------\n+\n+   --  Sizes (in bytes) of the components of struct timeval\n+\n+   SIZEOF_tv_sec      : constant :=          4; --  tv_sec\n+   SIZEOF_tv_usec     : constant :=          4; --  tv_usec\n+\n+   ----------------------------------------\n+   -- Properties of supported interfaces --\n+   ----------------------------------------\n+\n+   Need_Netdb_Buffer  : constant :=          1; --  Need buffer for Netdb ops\n+\n+   ----------------------\n+   -- Additional flags --\n+   ----------------------\n+\n+   Thread_Blocking_IO : constant Boolean := True;\n+   --  Set False for contexts where socket i/o are process blocking\n+\n+end GNAT.Sockets.Constants;"}, {"sha": "a99db4bb0a05a4eabc0beca64a622d27306ccf1e", "filename": "gcc/ada/g-socthi-mingw.adb", "status": "modified", "additions": 49, "deletions": 56, "changes": 105, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4491f0aeaff463602a5b6488eef2e67e2c13ecfe/gcc%2Fada%2Fg-socthi-mingw.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4491f0aeaff463602a5b6488eef2e67e2c13ecfe/gcc%2Fada%2Fg-socthi-mingw.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socthi-mingw.adb?ref=4491f0aeaff463602a5b6488eef2e67e2c13ecfe", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                     Copyright (C) 2001-2006, AdaCore                     --\n+--                     Copyright (C) 2001-2007, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -37,10 +37,8 @@\n \n --  This version is for NT\n \n-with GNAT.Sockets.Constants; use GNAT.Sockets.Constants;\n-with Interfaces.C.Strings;   use Interfaces.C.Strings;\n-\n-with System; use System;\n+with Interfaces.C.Strings; use Interfaces.C.Strings;\n+with System;               use System;\n \n package body GNAT.Sockets.Thin is\n \n@@ -51,11 +49,6 @@ package body GNAT.Sockets.Thin is\n    WS_Version  : constant := 16#0202#;\n    Initialized : Boolean := False;\n \n-   SYSNOTREADY     : constant := 10091;\n-   VERNOTSUPPORTED : constant := 10092;\n-   NOTINITIALISED  : constant := 10093;\n-   EDISCON         : constant := 10101;\n-\n    function Standard_Connect\n      (S       : C.int;\n       Name    : System.Address;\n@@ -108,10 +101,10 @@ package body GNAT.Sockets.Thin is\n       N_ENAMETOOLONG,\n       N_EHOSTDOWN,\n       N_EHOSTUNREACH,\n-      N_SYSNOTREADY,\n-      N_VERNOTSUPPORTED,\n-      N_NOTINITIALISED,\n-      N_EDISCON,\n+      N_WSASYSNOTREADY,\n+      N_WSAVERNOTSUPPORTED,\n+      N_WSANOTINITIALISED,\n+      N_WSAEDISCON,\n       N_HOST_NOT_FOUND,\n       N_TRY_AGAIN,\n       N_NO_RECOVERY,\n@@ -199,20 +192,20 @@ package body GNAT.Sockets.Thin is\n         New_String (\"Host is down\"),\n       N_EHOSTUNREACH =>\n         New_String (\"No route to host\"),\n-      N_SYSNOTREADY =>\n+      N_WSASYSNOTREADY =>\n         New_String (\"Returned by WSAStartup(), indicating that \"\n                     & \"the network subsystem is unusable\"),\n-      N_VERNOTSUPPORTED =>\n+      N_WSAVERNOTSUPPORTED =>\n         New_String (\"Returned by WSAStartup(), indicating that \"\n                     & \"the Windows Sockets DLL cannot support \"\n                     & \"this application\"),\n-      N_NOTINITIALISED =>\n+      N_WSANOTINITIALISED =>\n         New_String (\"Winsock not initialized. This message is \"\n                     & \"returned by any function except WSAStartup(), \"\n                     & \"indicating that a successful WSAStartup() has \"\n                     & \"not yet been performed\"),\n-      N_EDISCON =>\n-        New_String (\"Disconnect\"),\n+      N_WSAEDISCON =>\n+        New_String (\"Disconnected\"),\n       N_HOST_NOT_FOUND =>\n         New_String (\"Host not found. This message indicates \"\n                     & \"that the key (name, address, and so on) was not found\"),\n@@ -245,8 +238,8 @@ package body GNAT.Sockets.Thin is\n       Res := Standard_Connect (S, Name, Namelen);\n \n       if Res = -1 then\n-         if Socket_Errno = EWOULDBLOCK then\n-            Set_Socket_Errno (EINPROGRESS);\n+         if Socket_Errno = Constants.EWOULDBLOCK then\n+            Set_Socket_Errno (Constants.EINPROGRESS);\n          end if;\n       end if;\n \n@@ -347,7 +340,7 @@ package body GNAT.Sockets.Thin is\n       if EFS /= No_Fd_Set then\n          declare\n             EFSC    : constant Fd_Set_Access := New_Socket_Set (EFS);\n-            Flag    : constant C.int := MSG_PEEK + MSG_OOB;\n+            Flag    : constant C.int := Constants.MSG_PEEK + Constants.MSG_OOB;\n             Buffer  : Character;\n             Length  : C.int;\n             Fromlen : aliased C.int;\n@@ -404,31 +397,6 @@ package body GNAT.Sockets.Thin is\n       return Res;\n    end C_Select;\n \n-   -----------------\n-   -- C_Inet_Addr --\n-   -----------------\n-\n-   function C_Inet_Addr\n-     (Cp : C.Strings.chars_ptr) return C.int\n-   is\n-      use type C.unsigned_long;\n-\n-      function Internal_Inet_Addr\n-        (Cp : C.Strings.chars_ptr) return C.unsigned_long;\n-      pragma Import (Stdcall, Internal_Inet_Addr, \"inet_addr\");\n-\n-      Res : C.unsigned_long;\n-   begin\n-      Res := Internal_Inet_Addr (Cp);\n-\n-      if Res = C.unsigned_long'Last then\n-         --  This value is returned in case of error\n-         return -1;\n-      else\n-         return C.int (Internal_Inet_Addr (Cp));\n-      end if;\n-   end C_Inet_Addr;\n-\n    --------------\n    -- C_Writev --\n    --------------\n@@ -474,19 +442,34 @@ package body GNAT.Sockets.Thin is\n       end if;\n    end Finalize;\n \n+   -------------------------\n+   -- Host_Error_Messages --\n+   -------------------------\n+\n+   package body Host_Error_Messages is\n+\n+      --  On Windows, socket and host errors share the same code space, and\n+      --  error messages are provided by Socket_Error_Message. The default\n+      --  separate body for Host_Error_Messages is therefore not used in\n+      --  this case.\n+\n+      function Host_Error_Message\n+        (H_Errno : Integer) return C.Strings.chars_ptr\n+        renames Socket_Error_Message;\n+\n+   end Host_Error_Messages;\n+\n    ----------------\n    -- Initialize --\n    ----------------\n \n-   procedure Initialize (Process_Blocking_IO : Boolean) is\n-      pragma Unreferenced (Process_Blocking_IO);\n-\n+   procedure Initialize is\n+      use type Interfaces.C.int;\n       Return_Value : Interfaces.C.int;\n-\n    begin\n       if not Initialized then\n          Return_Value := WSAStartup (WS_Version, WSAData_Dummy'Address);\n-         pragma Assert (Interfaces.C.\"=\" (Return_Value, 0));\n+         pragma Assert (Return_Value = 0);\n          Initialized := True;\n       end if;\n    end Initialize;\n@@ -555,6 +538,7 @@ package body GNAT.Sockets.Thin is\n    function Socket_Error_Message\n      (Errno : Integer) return C.Strings.chars_ptr\n    is\n+      use GNAT.Sockets.Constants;\n    begin\n       case Errno is\n          when EINTR =>           return Error_Messages (N_EINTR);\n@@ -594,14 +578,23 @@ package body GNAT.Sockets.Thin is\n          when ENAMETOOLONG =>    return Error_Messages (N_ENAMETOOLONG);\n          when EHOSTDOWN =>       return Error_Messages (N_EHOSTDOWN);\n          when EHOSTUNREACH =>    return Error_Messages (N_EHOSTUNREACH);\n-         when SYSNOTREADY =>     return Error_Messages (N_SYSNOTREADY);\n-         when VERNOTSUPPORTED => return Error_Messages (N_VERNOTSUPPORTED);\n-         when NOTINITIALISED =>  return Error_Messages (N_NOTINITIALISED);\n-         when EDISCON =>         return Error_Messages (N_EDISCON);\n+\n+         --  Windows-specific error codes\n+\n+         when WSASYSNOTREADY =>  return Error_Messages (N_WSASYSNOTREADY);\n+         when WSAVERNOTSUPPORTED =>\n+                                 return Error_Messages (N_WSAVERNOTSUPPORTED);\n+         when WSANOTINITIALISED =>\n+                                 return Error_Messages (N_WSANOTINITIALISED);\n+         when WSAEDISCON =>      return Error_Messages (N_WSAEDISCON);\n+\n+         --  h_errno values\n+\n          when HOST_NOT_FOUND =>  return Error_Messages (N_HOST_NOT_FOUND);\n          when TRY_AGAIN =>       return Error_Messages (N_TRY_AGAIN);\n          when NO_RECOVERY =>     return Error_Messages (N_NO_RECOVERY);\n          when NO_DATA =>         return Error_Messages (N_NO_DATA);\n+\n          when others =>          return Error_Messages (N_OTHERS);\n       end case;\n    end Socket_Error_Message;"}, {"sha": "906b6691e0c317680a507a4e1de2d678d5fad2a1", "filename": "gcc/ada/g-socthi-mingw.ads", "status": "modified", "additions": 38, "deletions": 29, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4491f0aeaff463602a5b6488eef2e67e2c13ecfe/gcc%2Fada%2Fg-socthi-mingw.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4491f0aeaff463602a5b6488eef2e67e2c13ecfe/gcc%2Fada%2Fg-socthi-mingw.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socthi-mingw.ads?ref=4491f0aeaff463602a5b6488eef2e67e2c13ecfe", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                     Copyright (C) 2001-2006, AdaCore                     --\n+--                     Copyright (C) 2001-2007, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -62,12 +62,21 @@ package GNAT.Sockets.Thin is\n \n    function Socket_Error_Message (Errno : Integer) return C.Strings.chars_ptr;\n    --  Returns the error message string for the error number Errno. If Errno is\n-   --  not known it returns \"Unknown system error\".\n+   --  not known, returns \"Unknown system error\".\n \n    function Host_Errno return Integer;\n    pragma Import (C, Host_Errno, \"__gnat_get_h_errno\");\n    --  Returns last host error number\n \n+   package Host_Error_Messages is\n+\n+      function Host_Error_Message\n+        (H_Errno : Integer) return C.Strings.chars_ptr;\n+      --  Returns the error message string for the host error number H_Errno.\n+      --  If H_Errno is not known, returns \"Unknown system error\".\n+\n+   end Host_Error_Messages;\n+\n    subtype Fd_Set_Access is System.Address;\n    No_Fd_Set : constant Fd_Set_Access := System.Null_Address;\n \n@@ -109,8 +118,11 @@ package GNAT.Sockets.Thin is\n    type In_Addr is record\n       S_B1, S_B2, S_B3, S_B4 : C.unsigned_char;\n    end record;\n+   for In_Addr'Alignment use C.int'Alignment;\n    pragma Convention (C, In_Addr);\n-   --  Internet address\n+   --  IPv4 address, represented as a network-order C.int. Note that the\n+   --  underlying operating system may assume that values of this type have\n+   --  C.int alignment, so we need to provide a suitable alignment clause here.\n \n    type In_Addr_Access is access all In_Addr;\n    pragma Convention (C, In_Addr_Access);\n@@ -217,6 +229,10 @@ package GNAT.Sockets.Thin is\n    --  Indices into an Fd_Pair value providing access to each of the connected\n    --  file descriptors.\n \n+   --------------------------------\n+   -- Standard library functions --\n+   --------------------------------\n+\n    function C_Accept\n      (S       : C.int;\n       Addr    : System.Address;\n@@ -235,14 +251,6 @@ package GNAT.Sockets.Thin is\n       Name    : System.Address;\n       Namelen : C.int) return C.int;\n \n-   function C_Gethostbyaddr\n-     (Addr : System.Address;\n-      Len  : C.int;\n-      Typ  : C.int) return Hostent_Access;\n-\n-   function C_Gethostbyname\n-     (Name : C.char_array) return Hostent_Access;\n-\n    function C_Gethostname\n      (Name    : System.Address;\n       Namelen : C.int) return C.int;\n@@ -252,14 +260,6 @@ package GNAT.Sockets.Thin is\n       Name    : System.Address;\n       Namelen : not null access C.int) return C.int;\n \n-   function C_Getservbyname\n-     (Name  : C.char_array;\n-      Proto : C.char_array) return Servent_Access;\n-\n-   function C_Getservbyport\n-     (Port  : C.int;\n-      Proto : C.char_array) return Servent_Access;\n-\n    function C_Getsockname\n      (S       : C.int;\n       Name    : System.Address;\n@@ -355,6 +355,10 @@ package GNAT.Sockets.Thin is\n      (WS_Version     : Interfaces.C.int;\n       WSADataAddress : System.Address) return Interfaces.C.int;\n \n+   -------------------------------------------------------\n+   -- Signalling file descriptors for selector abortion --\n+   -------------------------------------------------------\n+\n    package Signalling_Fds is\n \n       function Create (Fds : not null access Fd_Pair) return C.int;\n@@ -372,8 +376,16 @@ package GNAT.Sockets.Thin is\n       --  Write one byte of data to wsig, the write end of a pair of signalling\n       --  fds created by Create_Signalling_Fds.\n \n+      procedure Close (Sig : C.int);\n+      pragma Convention (C, Close);\n+      --  Close one end of a pair of signalling fds (ignoring any error)\n+\n    end Signalling_Fds;\n \n+   ----------------------------\n+   -- Socket sets management --\n+   ----------------------------\n+\n    procedure Free_Socket_Set\n      (Set : Fd_Set_Access);\n    --  Free system-dependent socket set\n@@ -382,11 +394,11 @@ package GNAT.Sockets.Thin is\n      (Set    : Fd_Set_Access;\n       Socket : Int_Access;\n       Last   : Int_Access);\n-   --  Get last socket in Socket and remove it from the socket\n-   --  set. The parameter Last is a maximum value of the largest\n-   --  socket. This hint is used to avoid scanning very large socket\n-   --  sets. After a call to Get_Socket_From_Set, Last is set back to\n-   --  the real largest socket in the socket set.\n+   --  Get last socket in Socket and remove it from the socket set. The\n+   --  parameter Last is a maximum value of the largest socket. This hint is\n+   --  used to avoid scanning very large socket sets. After a call to\n+   --  Get_Socket_From_Set, Last is set back to the real largest socket in the\n+   --  socket set.\n \n    procedure Insert_Socket_In_Set\n      (Set    : Fd_Set_Access;\n@@ -421,21 +433,18 @@ package GNAT.Sockets.Thin is\n \n    procedure WSACleanup;\n \n+   procedure Initialize;\n    procedure Finalize;\n-   procedure Initialize (Process_Blocking_IO : Boolean);\n \n private\n    pragma Import (Stdcall, C_Accept, \"accept\");\n    pragma Import (Stdcall, C_Bind, \"bind\");\n    pragma Import (Stdcall, C_Close, \"closesocket\");\n-   pragma Import (Stdcall, C_Gethostbyaddr, \"gethostbyaddr\");\n-   pragma Import (Stdcall, C_Gethostbyname, \"gethostbyname\");\n    pragma Import (Stdcall, C_Gethostname, \"gethostname\");\n    pragma Import (Stdcall, C_Getpeername, \"getpeername\");\n-   pragma Import (Stdcall, C_Getservbyname, \"getservbyname\");\n-   pragma Import (Stdcall, C_Getservbyport, \"getservbyport\");\n    pragma Import (Stdcall, C_Getsockname, \"getsockname\");\n    pragma Import (Stdcall, C_Getsockopt, \"getsockopt\");\n+   pragma Import (Stdcall, C_Inet_Addr, \"inet_addr\");\n    pragma Import (Stdcall, C_Ioctl, \"ioctlsocket\");\n    pragma Import (Stdcall, C_Listen, \"listen\");\n    pragma Import (Stdcall, C_Recv, \"recv\");"}, {"sha": "df2c67613f754e22b4a18d56dccfa46193d4249d", "filename": "gcc/ada/g-thread.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4491f0aeaff463602a5b6488eef2e67e2c13ecfe/gcc%2Fada%2Fg-thread.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4491f0aeaff463602a5b6488eef2e67e2c13ecfe/gcc%2Fada%2Fg-thread.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-thread.ads?ref=4491f0aeaff463602a5b6488eef2e67e2c13ecfe", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                     Copyright (C) 1998-2005 AdaCore                      --\n+--                     Copyright (C) 1998-2007, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -133,7 +133,7 @@ package GNAT.Threads is\n    --  extern void __gnat_get_thread (void *id, pthread_t *thread);\n \n    function To_Task_Id\n-     (Id   : System.Address)\n+     (Id : System.Address)\n       return Ada.Task_Identification.Task_Id;\n    --  Ada interface only.\n    --  Given a low level Id, as returned by Create_Thread, return a Task_Id,"}, {"sha": "81464aa1cb06f9a46e91530614fdef4ca391cd08", "filename": "gcc/ada/i-forbla-darwin.adb", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4491f0aeaff463602a5b6488eef2e67e2c13ecfe/gcc%2Fada%2Fi-forbla-darwin.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4491f0aeaff463602a5b6488eef2e67e2c13ecfe/gcc%2Fada%2Fi-forbla-darwin.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fi-forbla-darwin.adb?ref=4491f0aeaff463602a5b6488eef2e67e2c13ecfe", "patch": "@@ -0,0 +1,38 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                         GNAT RUN-TIME COMPONENTS                         --\n+--                                                                          --\n+--                         INTERFACES.FORTRAN.BLAS                          --\n+--                                                                          --\n+--                                 B o d y                                  --\n+--                                                                          --\n+--            Copyright (C) 2006, Free Software Foundation, Inc.            --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n+-- for  more details.  You should have  received  a copy of the GNU General --\n+-- Public License  distributed with GNAT;  see file COPYING.  If not, write --\n+-- to  the  Free Software Foundation,  51  Franklin  Street,  Fifth  Floor, --\n+-- Boston, MA 02110-1301, USA.                                              --\n+--                                                                          --\n+-- As a special exception,  if other files  instantiate  generics from this --\n+-- unit, or you link  this unit with other files  to produce an executable, --\n+-- this  unit  does not  by itself cause  the resulting  executable  to  be --\n+-- covered  by the  GNU  General  Public  License.  This exception does not --\n+-- however invalidate  any other reasons why  the executable file  might be --\n+-- covered by the  GNU Public License.                                      --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+--  Version for Mac OS X\n+\n+package body Interfaces.Fortran.BLAS is\n+   pragma Linker_Options (\"-Wl,-framework,vecLib\");\n+end Interfaces.Fortran.BLAS;"}, {"sha": "2f7198cadb63a15ae0adbd15ae944fed7865c02a", "filename": "gcc/ada/i-forbla.adb", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4491f0aeaff463602a5b6488eef2e67e2c13ecfe/gcc%2Fada%2Fi-forbla.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4491f0aeaff463602a5b6488eef2e67e2c13ecfe/gcc%2Fada%2Fi-forbla.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fi-forbla.adb?ref=4491f0aeaff463602a5b6488eef2e67e2c13ecfe", "patch": "@@ -0,0 +1,39 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                         GNAT RUN-TIME COMPONENTS                         --\n+--                                                                          --\n+--               I N T E R F A C E S . F O R T R A N . B L A S              --\n+--                                                                          --\n+--                                 B o d y                                  --\n+--                                                                          --\n+--            Copyright (C) 2006, Free Software Foundation, Inc.            --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n+-- for  more details.  You should have  received  a copy of the GNU General --\n+-- Public License  distributed with GNAT;  see file COPYING.  If not, write --\n+-- to  the  Free Software Foundation,  51  Franklin  Street,  Fifth  Floor, --\n+-- Boston, MA 02110-1301, USA.                                              --\n+--                                                                          --\n+-- As a special exception,  if other files  instantiate  generics from this --\n+-- unit, or you link  this unit with other files  to produce an executable, --\n+-- this  unit  does not  by itself cause  the resulting  executable  to  be --\n+-- covered  by the  GNU  General  Public  License.  This exception does not --\n+-- however invalidate  any other reasons why  the executable file  might be --\n+-- covered by the  GNU Public License.                                      --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+--  For platforms without, or with unknown libraries, no libraries are linked\n+--  by default. The user has to specify the required BLAS and LAPACK libraries\n+--  explicitly on the command line.\n+\n+package body Interfaces.Fortran.BLAS is\n+end Interfaces.Fortran.BLAS;"}, {"sha": "e58b45f760a0aece0557bf8c0f91e4c49c6f69e0", "filename": "gcc/ada/mingw32.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4491f0aeaff463602a5b6488eef2e67e2c13ecfe/gcc%2Fada%2Fmingw32.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4491f0aeaff463602a5b6488eef2e67e2c13ecfe/gcc%2Fada%2Fmingw32.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmingw32.h?ref=4491f0aeaff463602a5b6488eef2e67e2c13ecfe", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                              C Header File                               *\n  *                                                                          *\n- *          Copyright (C) 2002-2006, Free Software Foundation, Inc.         *\n+ *          Copyright (C) 2002-2007, Free Software Foundation, Inc.         *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *"}, {"sha": "fe9c9414821644ca80bc0ca657516b5f795a7848", "filename": "gcc/ada/nlists.ads", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4491f0aeaff463602a5b6488eef2e67e2c13ecfe/gcc%2Fada%2Fnlists.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4491f0aeaff463602a5b6488eef2e67e2c13ecfe/gcc%2Fada%2Fnlists.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fnlists.ads?ref=4491f0aeaff463602a5b6488eef2e67e2c13ecfe", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -291,6 +291,9 @@ package Nlists is\n    procedure Lock;\n    --  Called to lock tables before back end is called\n \n+   procedure Unlock;\n+   --  Unlock tables, in cases where the back end needs to modify them\n+\n    procedure Tree_Read;\n    --  Initializes internal tables from current tree file using the relevant\n    --  Table.Tree_Read routines. Note that Initialize should not be called if"}, {"sha": "f27a9e60005452d2f750057dda841f3fc5b717c2", "filename": "gcc/ada/sem_dist.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4491f0aeaff463602a5b6488eef2e67e2c13ecfe/gcc%2Fada%2Fsem_dist.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4491f0aeaff463602a5b6488eef2e67e2c13ecfe/gcc%2Fada%2Fsem_dist.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_dist.ads?ref=4491f0aeaff463602a5b6488eef2e67e2c13ecfe", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}]}