{"sha": "7d6da11fce054b25b50d0dec7f8d49cf22852680", "node_id": "C_kwDOANBUbNoAKDdkNmRhMTFmY2UwNTRiMjViNTBkMGRlYzdmOGQ0OWNmMjI4NTI2ODA", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-11-12T11:41:22Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-11-12T11:41:22Z"}, "message": "openmp: Honor OpenMP 5.1 num_teams lower bound\n\nThe following patch implements what I've been talking about earlier,\nhonor that for explicit num_teams clause we create at least the\nlower-bound (if not specified, upper-bound) teams in the league.\nFor host fallback, it still means we only have one thread doing all the\nteams, sequentially one after another.\nFor PTX and GCN, I think the new teams-2.c test and maybe teams-4.c too\nwill or might fail.\nFor these offloads, I think it is ok to remove symbols no longer used\nfrom libgomp.a.\nIf num_teams_lower is bigger than the provided num_blocks or num_workgroups,\nwe should arrange for gomp_num_teams_var to be num_teams_lower - 1,\nstop using the %ctaid.x or __builtin_gcn_dim_pos (0) for omp_get_team_num ()\nand instead use for it some .shared var that GOMP_teams4 initializes to\n%ctaid.x or __builtin_gcn_dim_pos (0) when first and for !first\nincrement that by num_blocks or num_workgroups each time and only\nreturn false when we are above num_teams_lower.\nAny help with actually implementing this for the 2 architectures highly\nappreciated.\n\n2021-11-12  Jakub Jelinek  <jakub@redhat.com>\n\ngcc/\n\t* omp-builtins.def (BUILT_IN_GOMP_TEAMS): Remove.\n\t(BUILT_IN_GOMP_TEAMS4): New.\n\t* builtin-types.def (BT_FN_VOID_UINT_UINT): Remove.\n\t(BT_FN_BOOL_UINT_UINT_UINT_BOOL): New.\n\t* omp-low.c (lower_omp_teams): Use GOMP_teams4 instead of\n\tGOMP_teams, pass to it also num_teams lower-bound expression\n\tor a dup of upper-bound if it is missing and a flag whether\n\tit is the first call or not.\ngcc/fortran/\n\t* types.def (BT_FN_VOID_UINT_UINT): Remove.\n\t(BT_FN_BOOL_UINT_UINT_UINT_BOOL): New.\nlibgomp/\n\t* libgomp_g.h (GOMP_teams4): Declare.\n\t* libgomp.map (GOMP_5.1): Export GOMP_teams4.\n\t* target.c (GOMP_teams4): New function.\n\t* config/nvptx/target.c (GOMP_teams): Remove.\n\t(GOMP_teams4): New function.\n\t* config/gcn/target.c (GOMP_teams): Remove.\n\t(GOMP_teams4): New function.\n\t* testsuite/libgomp.c/teams-4.c (main): Expect exactly 2\n\tteams instead of <= 2.\n\t* testsuite/libgomp.c-c++-common/teams-2.c: New test.", "tree": {"sha": "a52c163e2c2d9eb14ec2cc43f59029673863cc12", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a52c163e2c2d9eb14ec2cc43f59029673863cc12"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7d6da11fce054b25b50d0dec7f8d49cf22852680", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d6da11fce054b25b50d0dec7f8d49cf22852680", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d6da11fce054b25b50d0dec7f8d49cf22852680", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d6da11fce054b25b50d0dec7f8d49cf22852680/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5f516a6a5d7ecce48a86d01fed1aeb4fc4ccc534", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f516a6a5d7ecce48a86d01fed1aeb4fc4ccc534", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f516a6a5d7ecce48a86d01fed1aeb4fc4ccc534"}], "stats": {"total": 200, "additions": 169, "deletions": 31}, "files": [{"sha": "3f1c81bd7a8749ef013884d3ce60ce40eda7563e", "filename": "gcc/builtin-types.def", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d6da11fce054b25b50d0dec7f8d49cf22852680/gcc%2Fbuiltin-types.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d6da11fce054b25b50d0dec7f8d49cf22852680/gcc%2Fbuiltin-types.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltin-types.def?ref=7d6da11fce054b25b50d0dec7f8d49cf22852680", "patch": "@@ -489,7 +489,6 @@ DEF_FUNCTION_TYPE_2 (BT_FN_BOOL_VPTR_INT, BT_BOOL, BT_VOLATILE_PTR, BT_INT)\n DEF_FUNCTION_TYPE_2 (BT_FN_BOOL_SIZE_CONST_VPTR, BT_BOOL, BT_SIZE,\n \t\t     BT_CONST_VOLATILE_PTR)\n DEF_FUNCTION_TYPE_2 (BT_FN_BOOL_INT_BOOL, BT_BOOL, BT_INT, BT_BOOL)\n-DEF_FUNCTION_TYPE_2 (BT_FN_VOID_UINT_UINT, BT_VOID, BT_UINT, BT_UINT)\n DEF_FUNCTION_TYPE_2 (BT_FN_UINT_UINT_PTR, BT_UINT, BT_UINT, BT_PTR)\n DEF_FUNCTION_TYPE_2 (BT_FN_UINT_UINT_CONST_PTR, BT_UINT, BT_UINT, BT_CONST_PTR)\n DEF_FUNCTION_TYPE_2 (BT_FN_PTR_CONST_PTR_SIZE, BT_PTR, BT_CONST_PTR, BT_SIZE)\n@@ -680,6 +679,8 @@ DEF_FUNCTION_TYPE_4 (BT_FN_BOOL_UINT_ULLPTR_ULLPTR_ULLPTR,\n \t\t     BT_PTR_ULONGLONG)\n DEF_FUNCTION_TYPE_4 (BT_FN_VOID_UINT_PTR_INT_PTR, BT_VOID, BT_INT, BT_PTR,\n \t\t     BT_INT, BT_PTR)\n+DEF_FUNCTION_TYPE_4 (BT_FN_BOOL_UINT_UINT_UINT_BOOL,\n+\t\t     BT_BOOL, BT_UINT, BT_UINT, BT_UINT, BT_BOOL)\n \n DEF_FUNCTION_TYPE_5 (BT_FN_INT_STRING_INT_SIZE_CONST_STRING_VALIST_ARG,\n \t\t     BT_INT, BT_STRING, BT_INT, BT_SIZE, BT_CONST_STRING,"}, {"sha": "850fe97c6d3d8d773902c2165539c9c99bf0b06b", "filename": "gcc/fortran/types.def", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d6da11fce054b25b50d0dec7f8d49cf22852680/gcc%2Ffortran%2Ftypes.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d6da11fce054b25b50d0dec7f8d49cf22852680/gcc%2Ffortran%2Ftypes.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftypes.def?ref=7d6da11fce054b25b50d0dec7f8d49cf22852680", "patch": "@@ -117,7 +117,6 @@ DEF_FUNCTION_TYPE_2 (BT_FN_BOOL_VPTR_INT, BT_BOOL, BT_VOLATILE_PTR, BT_INT)\n DEF_FUNCTION_TYPE_2 (BT_FN_BOOL_SIZE_CONST_VPTR, BT_BOOL, BT_SIZE,\n \t\t     BT_CONST_VOLATILE_PTR)\n DEF_FUNCTION_TYPE_2 (BT_FN_BOOL_INT_BOOL, BT_BOOL, BT_INT, BT_BOOL)\n-DEF_FUNCTION_TYPE_2 (BT_FN_VOID_UINT_UINT, BT_VOID, BT_UINT, BT_UINT)\n DEF_FUNCTION_TYPE_2 (BT_FN_VOID_PTR_PTRMODE,\n \t\t     BT_VOID, BT_PTR, BT_PTRMODE)\n DEF_FUNCTION_TYPE_2 (BT_FN_VOID_CONST_PTR_SIZE, BT_VOID, BT_CONST_PTR, BT_SIZE)\n@@ -173,6 +172,8 @@ DEF_FUNCTION_TYPE_4 (BT_FN_BOOL_UINT_ULLPTR_ULLPTR_ULLPTR,\n \t\t     BT_PTR_ULONGLONG)\n DEF_FUNCTION_TYPE_4 (BT_FN_VOID_UINT_PTR_INT_PTR, BT_VOID, BT_INT, BT_PTR,\n \t\t     BT_INT, BT_PTR)\n+DEF_FUNCTION_TYPE_4 (BT_FN_BOOL_UINT_UINT_UINT_BOOL,\n+\t\t     BT_BOOL, BT_UINT, BT_UINT, BT_UINT, BT_BOOL)\n \n DEF_FUNCTION_TYPE_5 (BT_FN_VOID_OMPFN_PTR_UINT_UINT_UINT,\n \t\t     BT_VOID, BT_PTR_FN_VOID_PTR, BT_PTR, BT_UINT, BT_UINT,"}, {"sha": "295081318c85a196514f3677b63f6d3837a2263e", "filename": "gcc/omp-builtins.def", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d6da11fce054b25b50d0dec7f8d49cf22852680/gcc%2Fomp-builtins.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d6da11fce054b25b50d0dec7f8d49cf22852680/gcc%2Fomp-builtins.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomp-builtins.def?ref=7d6da11fce054b25b50d0dec7f8d49cf22852680", "patch": "@@ -442,8 +442,8 @@ DEF_GOMP_BUILTIN (BUILT_IN_GOMP_TARGET_UPDATE, \"GOMP_target_update_ext\",\n DEF_GOMP_BUILTIN (BUILT_IN_GOMP_TARGET_ENTER_EXIT_DATA,\n \t\t  \"GOMP_target_enter_exit_data\",\n \t\t  BT_FN_VOID_INT_SIZE_PTR_PTR_PTR_UINT_PTR, ATTR_NOTHROW_LIST)\n-DEF_GOMP_BUILTIN (BUILT_IN_GOMP_TEAMS, \"GOMP_teams\",\n-\t\t  BT_FN_VOID_UINT_UINT, ATTR_NOTHROW_LIST)\n+DEF_GOMP_BUILTIN (BUILT_IN_GOMP_TEAMS4, \"GOMP_teams4\",\n+\t\t  BT_FN_BOOL_UINT_UINT_UINT_BOOL, ATTR_NOTHROW_LIST)\n DEF_GOMP_BUILTIN (BUILT_IN_GOMP_TEAMS_REG, \"GOMP_teams_reg\",\n \t\t  BT_FN_VOID_OMPFN_PTR_UINT_UINT_UINT, ATTR_NOTHROW_LIST)\n DEF_GOMP_BUILTIN (BUILT_IN_GOMP_TASKGROUP_REDUCTION_REGISTER,"}, {"sha": "5b6aa30eb9caa128e02ad2472fc7ad76639fca52", "filename": "gcc/omp-low.c", "status": "modified", "additions": 36, "deletions": 6, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d6da11fce054b25b50d0dec7f8d49cf22852680/gcc%2Fomp-low.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d6da11fce054b25b50d0dec7f8d49cf22852680/gcc%2Fomp-low.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomp-low.c?ref=7d6da11fce054b25b50d0dec7f8d49cf22852680", "patch": "@@ -13902,14 +13902,24 @@ lower_omp_teams (gimple_stmt_iterator *gsi_p, omp_context *ctx)\n \n   tree num_teams = omp_find_clause (gimple_omp_teams_clauses (teams_stmt),\n \t\t\t\t    OMP_CLAUSE_NUM_TEAMS);\n+  tree num_teams_lower = NULL_TREE;\n   if (num_teams == NULL_TREE)\n     num_teams = build_int_cst (unsigned_type_node, 0);\n   else\n     {\n+      num_teams_lower = OMP_CLAUSE_NUM_TEAMS_LOWER_EXPR (num_teams);\n+      if (num_teams_lower)\n+\t{\n+\t  num_teams_lower = fold_convert (unsigned_type_node, num_teams_lower);\n+\t  gimplify_expr (&num_teams_lower, &bind_body, NULL, is_gimple_val,\n+\t\t\t fb_rvalue);\n+\t}\n       num_teams = OMP_CLAUSE_NUM_TEAMS_UPPER_EXPR (num_teams);\n       num_teams = fold_convert (unsigned_type_node, num_teams);\n       gimplify_expr (&num_teams, &bind_body, NULL, is_gimple_val, fb_rvalue);\n     }\n+  if (num_teams_lower == NULL_TREE)\n+    num_teams_lower = num_teams;\n   tree thread_limit = omp_find_clause (gimple_omp_teams_clauses (teams_stmt),\n \t\t\t\t       OMP_CLAUSE_THREAD_LIMIT);\n   if (thread_limit == NULL_TREE)\n@@ -13921,6 +13931,30 @@ lower_omp_teams (gimple_stmt_iterator *gsi_p, omp_context *ctx)\n       gimplify_expr (&thread_limit, &bind_body, NULL, is_gimple_val,\n \t\t     fb_rvalue);\n     }\n+  location_t loc = gimple_location (teams_stmt);\n+  tree decl = builtin_decl_explicit (BUILT_IN_GOMP_TEAMS4);\n+  tree rettype = TREE_TYPE (TREE_TYPE (decl));\n+  tree first = create_tmp_var (rettype);\n+  gimple_seq_add_stmt (&bind_body,\n+\t\t       gimple_build_assign (first, build_one_cst (rettype)));\n+  tree llabel = create_artificial_label (loc);\n+  gimple_seq_add_stmt (&bind_body, gimple_build_label (llabel));\n+  gimple *call\n+    = gimple_build_call (decl, 4, num_teams_lower, num_teams, thread_limit,\n+\t\t\t first);\n+  gimple_set_location (call, loc);\n+  tree temp = create_tmp_var (rettype);\n+  gimple_call_set_lhs (call, temp);\n+  gimple_seq_add_stmt (&bind_body, call);\n+\n+  tree tlabel = create_artificial_label (loc);\n+  tree flabel = create_artificial_label (loc);\n+  gimple *cond = gimple_build_cond (NE_EXPR, temp, build_zero_cst (rettype),\n+\t\t\t\t    tlabel, flabel);\n+  gimple_seq_add_stmt (&bind_body, cond);\n+  gimple_seq_add_stmt (&bind_body, gimple_build_label (tlabel));\n+  gimple_seq_add_stmt (&bind_body,\n+\t\t       gimple_build_assign (first, build_zero_cst (rettype)));\n \n   lower_rec_input_clauses (gimple_omp_teams_clauses (teams_stmt),\n \t\t\t   &bind_body, &dlist, ctx, NULL);\n@@ -13929,17 +13963,13 @@ lower_omp_teams (gimple_stmt_iterator *gsi_p, omp_context *ctx)\n \t\t\t   NULL, ctx);\n   gimple_seq_add_stmt (&bind_body, teams_stmt);\n \n-  location_t loc = gimple_location (teams_stmt);\n-  tree decl = builtin_decl_explicit (BUILT_IN_GOMP_TEAMS);\n-  gimple *call = gimple_build_call (decl, 2, num_teams, thread_limit);\n-  gimple_set_location (call, loc);\n-  gimple_seq_add_stmt (&bind_body, call);\n-\n   gimple_seq_add_seq (&bind_body, gimple_omp_body (teams_stmt));\n   gimple_omp_set_body (teams_stmt, NULL);\n   gimple_seq_add_seq (&bind_body, olist);\n   gimple_seq_add_seq (&bind_body, dlist);\n   gimple_seq_add_stmt (&bind_body, gimple_build_omp_return (true));\n+  gimple_seq_add_stmt (&bind_body, gimple_build_goto (llabel));\n+  gimple_seq_add_stmt (&bind_body, gimple_build_label (flabel));\n   gimple_bind_set_body (bind, bind_body);\n \n   pop_gimplify_context (bind);"}, {"sha": "ba830006453a40d9b439d8a1f406724da3d89fa3", "filename": "libgomp/config/gcn/target.c", "status": "modified", "additions": 14, "deletions": 10, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d6da11fce054b25b50d0dec7f8d49cf22852680/libgomp%2Fconfig%2Fgcn%2Ftarget.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d6da11fce054b25b50d0dec7f8d49cf22852680/libgomp%2Fconfig%2Fgcn%2Ftarget.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fconfig%2Fgcn%2Ftarget.c?ref=7d6da11fce054b25b50d0dec7f8d49cf22852680", "patch": "@@ -26,9 +26,12 @@\n #include \"libgomp.h\"\n #include <limits.h>\n \n-void\n-GOMP_teams (unsigned int num_teams, unsigned int thread_limit)\n+bool\n+GOMP_teams4 (unsigned int num_teams_lower, unsigned int num_teams_upper,\n+\t     unsigned int thread_limit, bool first)\n {\n+  if (!first)\n+    return false;\n   if (thread_limit)\n     {\n       struct gomp_task_icv *icv = gomp_icv (true);\n@@ -38,14 +41,15 @@ GOMP_teams (unsigned int num_teams, unsigned int thread_limit)\n   unsigned int num_workgroups, workgroup_id;\n   num_workgroups = __builtin_gcn_dim_size (0);\n   workgroup_id = __builtin_gcn_dim_pos (0);\n-  if (!num_teams || num_teams >= num_workgroups)\n-    num_teams = num_workgroups;\n-  else if (workgroup_id >= num_teams)\n-    {\n-      gomp_free_thread (gcn_thrs ());\n-      exit (0);\n-    }\n-  gomp_num_teams_var = num_teams - 1;\n+  /* FIXME: If num_teams_lower > num_workgroups, we want to loop\n+     multiple times at least for some workgroups.  */\n+  (void) num_teams_lower;\n+  if (!num_teams_upper || num_teams_upper >= num_workgroups)\n+    num_teams_upper = num_workgroups;\n+  else if (workgroup_id >= num_teams_upper)\n+    return false;\n+  gomp_num_teams_var = num_teams_upper - 1;\n+  return true;\n }\n \n int"}, {"sha": "3d815bb0cb613aa2e83133bf44cabdfbdededce8", "filename": "libgomp/config/nvptx/target.c", "status": "modified", "additions": 14, "deletions": 10, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d6da11fce054b25b50d0dec7f8d49cf22852680/libgomp%2Fconfig%2Fnvptx%2Ftarget.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d6da11fce054b25b50d0dec7f8d49cf22852680/libgomp%2Fconfig%2Fnvptx%2Ftarget.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fconfig%2Fnvptx%2Ftarget.c?ref=7d6da11fce054b25b50d0dec7f8d49cf22852680", "patch": "@@ -26,9 +26,12 @@\n #include \"libgomp.h\"\n #include <limits.h>\n \n-void\n-GOMP_teams (unsigned int num_teams, unsigned int thread_limit)\n+bool\n+GOMP_teams4 (unsigned int num_teams_lower, unsigned int num_teams_upper,\n+\t     unsigned int thread_limit, bool first)\n {\n+  if (!first)\n+    return false;\n   if (thread_limit)\n     {\n       struct gomp_task_icv *icv = gomp_icv (true);\n@@ -38,14 +41,15 @@ GOMP_teams (unsigned int num_teams, unsigned int thread_limit)\n   unsigned int num_blocks, block_id;\n   asm (\"mov.u32 %0, %%nctaid.x;\" : \"=r\" (num_blocks));\n   asm (\"mov.u32 %0, %%ctaid.x;\" : \"=r\" (block_id));\n-  if (!num_teams || num_teams >= num_blocks)\n-    num_teams = num_blocks;\n-  else if (block_id >= num_teams)\n-    {\n-      gomp_free_thread (nvptx_thrs);\n-      asm (\"exit;\");\n-    }\n-  gomp_num_teams_var = num_teams - 1;\n+  /* FIXME: If num_teams_lower > num_blocks, we want to loop multiple\n+     times for some CTAs.  */\n+  (void) num_teams_lower;\n+  if (!num_teams_upper || num_teams_upper >= num_blocks)\n+    num_teams_upper = num_blocks;\n+  else if (block_id >= num_teams_upper)\n+    return false;\n+  gomp_num_teams_var = num_teams_upper - 1;\n+  return true;\n }\n \n int"}, {"sha": "2ac580941695b816dae0fe0b2bcece58273002ac", "filename": "libgomp/libgomp.map", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d6da11fce054b25b50d0dec7f8d49cf22852680/libgomp%2Flibgomp.map", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d6da11fce054b25b50d0dec7f8d49cf22852680/libgomp%2Flibgomp.map", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Flibgomp.map?ref=7d6da11fce054b25b50d0dec7f8d49cf22852680", "patch": "@@ -399,6 +399,7 @@ GOMP_5.1 {\n \tGOMP_error;\n \tGOMP_scope_start;\n \tGOMP_warning;\n+\tGOMP_teams4;\n } GOMP_5.0.1;\n \n OACC_2.0 {"}, {"sha": "ab50f6542dce908370287908aac75e8c59b6670c", "filename": "libgomp/libgomp_g.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d6da11fce054b25b50d0dec7f8d49cf22852680/libgomp%2Flibgomp_g.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d6da11fce054b25b50d0dec7f8d49cf22852680/libgomp%2Flibgomp_g.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Flibgomp_g.h?ref=7d6da11fce054b25b50d0dec7f8d49cf22852680", "patch": "@@ -355,6 +355,7 @@ extern void GOMP_target_enter_exit_data (int, size_t, void **, size_t *,\n \t\t\t\t\t unsigned short *, unsigned int,\n \t\t\t\t\t void **);\n extern void GOMP_teams (unsigned int, unsigned int);\n+extern bool GOMP_teams4 (unsigned int, unsigned int, unsigned int, bool);\n \n /* teams.c */\n "}, {"sha": "ecf09f9131239a77f2c2c9df2d7d77b25f789936", "filename": "libgomp/target.c", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d6da11fce054b25b50d0dec7f8d49cf22852680/libgomp%2Ftarget.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d6da11fce054b25b50d0dec7f8d49cf22852680/libgomp%2Ftarget.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftarget.c?ref=7d6da11fce054b25b50d0dec7f8d49cf22852680", "patch": "@@ -3088,6 +3088,32 @@ GOMP_teams (unsigned int num_teams, unsigned int thread_limit)\n   (void) num_teams;\n }\n \n+bool\n+GOMP_teams4 (unsigned int num_teams_low, unsigned int num_teams_high,\n+\t     unsigned int thread_limit, bool first)\n+{\n+  struct gomp_thread *thr = gomp_thread ();\n+  if (first)\n+    {\n+      if (thread_limit)\n+\t{\n+\t  struct gomp_task_icv *icv = gomp_icv (true);\n+\t  icv->thread_limit_var\n+\t    = thread_limit > INT_MAX ? UINT_MAX : thread_limit;\n+\t}\n+      (void) num_teams_high;\n+      if (num_teams_low == 0)\n+\tnum_teams_low = 1;\n+      thr->num_teams = num_teams_low - 1;\n+      thr->team_num = 0;\n+    }\n+  else if (thr->team_num == thr->num_teams)\n+    return false;\n+  else\n+    ++thr->team_num;\n+  return true;\n+}\n+\n void *\n omp_target_alloc (size_t size, int device_num)\n {"}, {"sha": "316bcfe58486874d948fc9686e6708ade48d5124", "filename": "libgomp/testsuite/libgomp.c-c++-common/teams-2.c", "status": "added", "additions": 70, "deletions": 0, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d6da11fce054b25b50d0dec7f8d49cf22852680/libgomp%2Ftestsuite%2Flibgomp.c-c%2B%2B-common%2Fteams-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d6da11fce054b25b50d0dec7f8d49cf22852680/libgomp%2Ftestsuite%2Flibgomp.c-c%2B%2B-common%2Fteams-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.c-c%2B%2B-common%2Fteams-2.c?ref=7d6da11fce054b25b50d0dec7f8d49cf22852680", "patch": "@@ -0,0 +1,70 @@\n+#include <omp.h>\n+#include <stdlib.h>\n+\n+int\n+foo ()\n+{\n+  return 934;\n+}\n+\n+int\n+main ()\n+{\n+  int a[934] = {};\n+  int k, e;\n+  #pragma omp target map(a)\n+  #pragma omp teams num_teams (foo ())\n+  {\n+    int i = omp_get_team_num ();\n+    if (omp_get_num_teams () != 934\n+\t|| (unsigned) i >= 934U\n+\t|| a[i] != 0)\n+      abort ();\n+    ++a[i];\n+  }\n+  #pragma omp target map(a)\n+  #pragma omp teams num_teams (foo () - 50 : foo ())\n+  {\n+    int i = omp_get_team_num ();\n+    int j = omp_get_num_teams ();\n+    if (j < 884\n+\t|| j > 934\n+\t|| (unsigned) i >= (unsigned) j\n+\t|| a[i] != 1)\n+      abort ();\n+    ++a[i];\n+  }\n+  #pragma omp target teams map(a) num_teams (foo () / 2)\n+  {\n+    int i = omp_get_team_num ();\n+    if (omp_get_num_teams () != 467\n+\t|| (unsigned) i >= 467U\n+\t|| a[i] != 2)\n+      abort ();\n+    ++a[i];\n+  }\n+  #pragma omp target teams map(a) num_teams (foo () / 2 - 50 : foo () / 2)\n+  {\n+    int i = omp_get_team_num ();\n+    int j = omp_get_num_teams ();\n+    if (j < 417\n+\t|| j > 467\n+\t|| (unsigned) i >= (unsigned) j\n+\t|| a[i] != 3)\n+      abort ();\n+    ++a[i];\n+  }\n+  e = 4;\n+  for (k = 0; k < 934; k++)\n+    {\n+      if (k >= 417 && k < 467 && a[k] == 3)\n+\te = 3;\n+      else if (k == 467)\n+\te = 2;\n+      else if (k >= 884 && a[k] == 1)\n+\te = 1;\n+      if (a[k] != e)\n+\tabort ();\n+    }\n+  return 0;\n+}"}, {"sha": "6e065c51948fed492a5281e203d835288dd5b3cd", "filename": "libgomp/testsuite/libgomp.c/teams-4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d6da11fce054b25b50d0dec7f8d49cf22852680/libgomp%2Ftestsuite%2Flibgomp.c%2Fteams-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d6da11fce054b25b50d0dec7f8d49cf22852680/libgomp%2Ftestsuite%2Flibgomp.c%2Fteams-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.c%2Fteams-4.c?ref=7d6da11fce054b25b50d0dec7f8d49cf22852680", "patch": "@@ -20,7 +20,7 @@ main ()\n     #pragma omp parallel if (0)\n     #pragma omp target\n     #pragma omp teams num_teams (2)\n-    if (omp_get_num_teams () > 2\n+    if (omp_get_num_teams () != 2\n \t|| (unsigned) omp_get_team_num () >= 2U)\n       abort ();\n     if (omp_get_num_teams () != 4 || (unsigned) team >= 4U)"}]}