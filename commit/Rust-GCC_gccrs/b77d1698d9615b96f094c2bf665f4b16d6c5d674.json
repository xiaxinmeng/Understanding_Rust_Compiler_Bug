{"sha": "b77d1698d9615b96f094c2bf665f4b16d6c5d674", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yjc3ZDE2OThkOTYxNWI5NmYwOTRjMmJmNjY1ZjRiMTZkNmM1ZDY3NA==", "commit": {"author": {"name": "Michael Koch", "email": "konqueror@gmx.de", "date": "2003-10-12T13:33:32Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2003-10-12T13:33:32Z"}, "message": "DefaultTableModel.java, [...]: Removed redundant modifiers.\n\n2003-10-12  Michael Koch  <konqueror@gmx.de>\n\n\t* javax/swing/table/DefaultTableModel.java,\n\tjavax/swing/table/TableCellEditor.java,\n\tjavax/swing/table/TableCellRenderer.java,\n\tjavax/swing/table/TableColumnModel.java,\n\tjavax/swing/table/TableModel.java,\n\tjavax/swing/text/AbstractDocument.java,\n\tjavax/swing/text/Document.java,\n\tjavax/swing/text/MutableAttributeSet.java,\n\tjavax/swing/text/StyledDocument.java,\n\tjavax/swing/text/ViewFactory.java,\n\tjavax/swing/tree/DefaultMutableTreeNode.java,\n\tjavax/swing/tree/MutableTreeNode.java,\n\tjavax/swing/tree/RowMapper.java,\n\tjavax/swing/tree/TreeCellEditor.java,\n\tjavax/swing/tree/TreeCellRenderer.java,\n\tjavax/swing/tree/TreeModel.java,\n\tjavax/swing/tree/TreeNode.java,\n\tjavax/swing/tree/TreeSelectionModel.java,\n\tjavax/swing/undo/StateEditable.java,\n\tjavax/swing/undo/UndoableEdit.java:\n\tRemoved redundant modifiers.\n\nFrom-SVN: r72396", "tree": {"sha": "56b63af7ba519a67ea0a08fd60e99cf9b9648b3b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/56b63af7ba519a67ea0a08fd60e99cf9b9648b3b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b77d1698d9615b96f094c2bf665f4b16d6c5d674", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b77d1698d9615b96f094c2bf665f4b16d6c5d674", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b77d1698d9615b96f094c2bf665f4b16d6c5d674", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b77d1698d9615b96f094c2bf665f4b16d6c5d674/comments", "author": null, "committer": null, "parents": [{"sha": "463bc6afde1be6df9710a0cc70e796711da2200a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/463bc6afde1be6df9710a0cc70e796711da2200a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/463bc6afde1be6df9710a0cc70e796711da2200a"}], "stats": {"total": 321, "additions": 168, "deletions": 153}, "files": [{"sha": "b2e1692069198e46f4343a9acb7e3c9b33cd1a92", "filename": "libjava/ChangeLog", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b77d1698d9615b96f094c2bf665f4b16d6c5d674/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b77d1698d9615b96f094c2bf665f4b16d6c5d674/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=b77d1698d9615b96f094c2bf665f4b16d6c5d674", "patch": "@@ -1,3 +1,27 @@\n+2003-10-12  Michael Koch  <konqueror@gmx.de>\n+\n+\t* javax/swing/table/DefaultTableModel.java,\n+\tjavax/swing/table/TableCellEditor.java,\n+\tjavax/swing/table/TableCellRenderer.java,\n+\tjavax/swing/table/TableColumnModel.java,\n+\tjavax/swing/table/TableModel.java,\n+\tjavax/swing/text/AbstractDocument.java,\n+\tjavax/swing/text/Document.java,\n+\tjavax/swing/text/MutableAttributeSet.java,\n+\tjavax/swing/text/StyledDocument.java,\n+\tjavax/swing/text/ViewFactory.java,\n+\tjavax/swing/tree/DefaultMutableTreeNode.java,\n+\tjavax/swing/tree/MutableTreeNode.java,\n+\tjavax/swing/tree/RowMapper.java,\n+\tjavax/swing/tree/TreeCellEditor.java,\n+\tjavax/swing/tree/TreeCellRenderer.java,\n+\tjavax/swing/tree/TreeModel.java,\n+\tjavax/swing/tree/TreeNode.java,\n+\tjavax/swing/tree/TreeSelectionModel.java,\n+\tjavax/swing/undo/StateEditable.java,\n+\tjavax/swing/undo/UndoableEdit.java:\n+\tRemoved redundant modifiers.\n+\n 2003-10-12  Michael Koch  <konqueror@gmx.de>\n \n \t* javax/swing/event/AncestorListener.java,"}, {"sha": "5c57f81c6396e3036d3e36c72dbc0d2f64125168", "filename": "libjava/javax/swing/table/DefaultTableModel.java", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b77d1698d9615b96f094c2bf665f4b16d6c5d674/libjava%2Fjavax%2Fswing%2Ftable%2FDefaultTableModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b77d1698d9615b96f094c2bf665f4b16d6c5d674/libjava%2Fjavax%2Fswing%2Ftable%2FDefaultTableModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Ftable%2FDefaultTableModel.java?ref=b77d1698d9615b96f094c2bf665f4b16d6c5d674", "patch": "@@ -110,7 +110,6 @@ public DefaultTableModel(Vector columnNames, int numRows) {\n \t\tVector\t\tdata;\n \t\tVector\t\trowData;\n \t\tint\t\trowIndex;\n-\t\tint\t\tcolumnIndex;\n \t\tint\t\tnumColumns;\n \n \t\t// Create Data\n@@ -180,7 +179,6 @@ public void setDataVector(Vector data, Vector columnNames) {\n \n \t\t// Variables\n \t\tint\trowIndex;\n-\t\tint\tcolumnIndex;\n \t\tint\tnumRows;\n \t\tint\tnumColumns;\n \t\tVector\tcolumnVector;"}, {"sha": "bb7904e3d40b8a08205baeb3d8b246c7dae37823", "filename": "libjava/javax/swing/table/TableCellEditor.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b77d1698d9615b96f094c2bf665f4b16d6c5d674/libjava%2Fjavax%2Fswing%2Ftable%2FTableCellEditor.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b77d1698d9615b96f094c2bf665f4b16d6c5d674/libjava%2Fjavax%2Fswing%2Ftable%2FTableCellEditor.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Ftable%2FTableCellEditor.java?ref=b77d1698d9615b96f094c2bf665f4b16d6c5d674", "patch": "@@ -43,7 +43,7 @@\n import javax.swing.CellEditor;\n \n /**\n- * TableCellEditor interface\n+ * TableCellEditor public interface\n  * @author Andrew Selkirk\n  */\n public interface TableCellEditor extends CellEditor {\n@@ -57,7 +57,7 @@ public interface TableCellEditor extends CellEditor {\n \t * @param column Column of cell\n \t * @returns Component\n \t */\n-\tpublic Component getTableCellEditorComponent(JTable table,\n+\tComponent getTableCellEditorComponent(JTable table,\n \t\t\tObject value, boolean isSelected, int row, int column);\n \n "}, {"sha": "6ad91c7e9b8de73df580dedf3a52dcf3459428c0", "filename": "libjava/javax/swing/table/TableCellRenderer.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b77d1698d9615b96f094c2bf665f4b16d6c5d674/libjava%2Fjavax%2Fswing%2Ftable%2FTableCellRenderer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b77d1698d9615b96f094c2bf665f4b16d6c5d674/libjava%2Fjavax%2Fswing%2Ftable%2FTableCellRenderer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Ftable%2FTableCellRenderer.java?ref=b77d1698d9615b96f094c2bf665f4b16d6c5d674", "patch": "@@ -42,7 +42,7 @@\n import javax.swing.JTable;\n \n /**\n- * TableCellRenderer interface\n+ * TableCellRenderer public interface\n  * @author Andrew Selkirk\n  */\n public interface TableCellRenderer {\n@@ -57,7 +57,7 @@ public interface TableCellRenderer {\n \t * @param column Column of cell\n \t * @returns Component\n \t */\n-\tpublic Component getTableCellRendererComponent(JTable table,\n+\tComponent getTableCellRendererComponent(JTable table,\n \t\t\tObject value, boolean isSelected, boolean hasFocus,\n \t\t\tint row, int column);\n "}, {"sha": "184569730f4238d3dc870841ace7c162f8753356", "filename": "libjava/javax/swing/table/TableColumnModel.java", "status": "modified", "additions": 20, "deletions": 20, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b77d1698d9615b96f094c2bf665f4b16d6c5d674/libjava%2Fjavax%2Fswing%2Ftable%2FTableColumnModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b77d1698d9615b96f094c2bf665f4b16d6c5d674/libjava%2Fjavax%2Fswing%2Ftable%2FTableColumnModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Ftable%2FTableColumnModel.java?ref=b77d1698d9615b96f094c2bf665f4b16d6c5d674", "patch": "@@ -43,7 +43,7 @@\n import javax.swing.event.TableColumnModelListener;\n \n /**\n- * TableColumnModel interface\n+ * TableColumnModel public interface\n  * @author Andrew Selkirk\n  */\n public interface TableColumnModel {\n@@ -52,116 +52,116 @@ public interface TableColumnModel {\n \t * addColumn\n \t * @param column TableColumn\n \t */\n-\tpublic void addColumn(TableColumn column);\n+\tvoid addColumn(TableColumn column);\n \n \t/**\n \t * removeColumn\n \t * @param column TableColumn\n \t */\n-\tpublic void removeColumn(TableColumn column);\n+\tvoid removeColumn(TableColumn column);\n \n \t/**\n \t * moveColumn\n \t * @param columnIndex Index of column to move\n \t * @param newIndex New index of column\n \t */\n-\tpublic void moveColumn(int columnIndex, int newIndex);\n+\tvoid moveColumn(int columnIndex, int newIndex);\n \n \t/**\n \t * setColumnMargin\n \t * @param margin Margin of column\n \t */\n-\tpublic void setColumnMargin(int margin);\n+\tvoid setColumnMargin(int margin);\n \n \t/**\n \t * getColumnCount\n \t * @returns Column count\n \t */\n-\tpublic int getColumnCount();\n+\tint getColumnCount();\n \n \t/**\n \t * getColumns\n \t * @returns Enumeration of columns\n \t */\n-\tpublic Enumeration getColumns();\n+\tEnumeration getColumns();\n \n \t/**\n \t * getColumnIndex\n \t * @param columnIdentifier Column id\n \t */\n-\tpublic int getColumnIndex(Object columnIdentifier);\n+\tint getColumnIndex(Object columnIdentifier);\n \n \t/**\n \t * getColumn\n \t * @param columnIndex Index of column\n \t */\n-\tpublic TableColumn getColumn(int columnIndex);\n+\tTableColumn getColumn(int columnIndex);\n \n \t/**\n \t * getColumnMargin\n \t * @returns Column margin\n \t */\n-\tpublic int getColumnMargin();\n+\tint getColumnMargin();\n \n \t/**\n \t * getColumnIndexAtX\n \t * @returns Column index as position x\n \t */\n-\tpublic int getColumnIndexAtX(int xPosition);\n+\tint getColumnIndexAtX(int xPosition);\n \n \t/**\n \t * getTotalColumnWidth\n \t * @returns Total column width\n \t */\n-\tpublic int getTotalColumnWidth();\n+\tint getTotalColumnWidth();\n \n \t/**\n \t * setColumnSelectionAllowed\n \t * @param value Set column selection\n \t */\n-\tpublic void setColumnSelectionAllowed(boolean value);\n+\tvoid setColumnSelectionAllowed(boolean value);\n \n \t/**\n \t * getColumnSelectionAllowed\n \t * @returns true if column selection allowed, false otherwise\n \t */\n-\tpublic boolean getColumnSelectionAllowed();\n+\tboolean getColumnSelectionAllowed();\n \n \t/**\n \t * getSelectedColumns\n \t * @returns Selected columns\n \t */\n-\tpublic int[] getSelectedColumns();\n+\tint[] getSelectedColumns();\n \n \t/**\n \t * getSelectedColumnCount\n \t * @returns Count of selected columns\n \t */\n-\tpublic int getSelectedColumnCount();\n+\tint getSelectedColumnCount();\n \n \t/**\n \t * setSelectionModel\n \t * @param model ListSelectionModel\n \t */\n-\tpublic void setSelectionModel(ListSelectionModel model);\n+\tvoid setSelectionModel(ListSelectionModel model);\n \n \t/**\n \t * getSelectionModel\n \t * @param column TableColumn\n \t */\n-\tpublic ListSelectionModel getSelectionModel();\n+\tListSelectionModel getSelectionModel();\n \n \t/**\n \t * addColumnModelListener\n \t * @param listener TableColumnModelListener\n \t */\n-\tpublic void addColumnModelListener(TableColumnModelListener listener);\n+\tvoid addColumnModelListener(TableColumnModelListener listener);\n \n \t/**\n \t * removeColumnModelListener\n \t * @param listener TableColumnModelListener\n \t */\n-\tpublic void removeColumnModelListener(TableColumnModelListener listener);\n+\tvoid removeColumnModelListener(TableColumnModelListener listener);\n \n \n } // TableColumnModel"}, {"sha": "64a08559eabaf1fb9b32f7386d03cac445e8e9ce", "filename": "libjava/javax/swing/table/TableModel.java", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b77d1698d9615b96f094c2bf665f4b16d6c5d674/libjava%2Fjavax%2Fswing%2Ftable%2FTableModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b77d1698d9615b96f094c2bf665f4b16d6c5d674/libjava%2Fjavax%2Fswing%2Ftable%2FTableModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Ftable%2FTableModel.java?ref=b77d1698d9615b96f094c2bf665f4b16d6c5d674", "patch": "@@ -41,7 +41,7 @@\n import javax.swing.event.TableModelListener;\n \n /**\n- * TableModel interface\n+ * TableModel public interface\n  * @author Andrew Selkirk\n  */\n public interface TableModel {\n@@ -50,63 +50,63 @@ public interface TableModel {\n \t * getRowCount\n \t * @returns row count\n \t */\n-\tpublic int getRowCount();\n+\tint getRowCount();\n \n \t/**\n \t * getColumnCount\n \t * @returns column count\n \t */\n-\tpublic int getColumnCount();\n+\tint getColumnCount();\n \n \t/**\n \t * getColumnName\n \t * @param columnIndex Column index\n \t * @returns Column name\n \t */\n-\tpublic String getColumnName(int columnIndex);\n+\tString getColumnName(int columnIndex);\n \n \t/**\n \t * getColumnClass\n \t * @param columnIndex Column index\n \t * @returns Column class\n \t */\n-\tpublic Class getColumnClass(int columnIndex);\n+\tClass getColumnClass(int columnIndex);\n \n \t/**\n \t * isCellEditable\n \t * @param rowIndex Row index\n \t * @param columnIndex Column index\n \t * @returns true if editable, false otherwise\n \t */\n-\tpublic boolean isCellEditable(int rowIndex, int columnIndex);\n+\tboolean isCellEditable(int rowIndex, int columnIndex);\n \n \t/**\n \t * getValueAt\n \t * @param rowIndex Row index\n \t * @param columnIndex Column index\n \t * @returns Value at specified indices\n \t */\n-\tpublic Object getValueAt(int rowIndex, int columnIndex);\n+\tObject getValueAt(int rowIndex, int columnIndex);\n \n \t/**\n \t * setValueAt\n \t * @param aValue Value to set\n \t * @param rowIndex Row index\n \t * @param columnIndex Column index\n \t */\n-\tpublic void setValueAt(Object aValue, int rowIndex, int columnIndex);\n+\tvoid setValueAt(Object aValue, int rowIndex, int columnIndex);\n \n \t/**\n \t * addTableModelListener\n \t * @param listener TableModelListener\n \t */\n-\tpublic void addTableModelListener(TableModelListener listener);\n+\tvoid addTableModelListener(TableModelListener listener);\n \n \t/**\n \t * removeTableModelListener\n \t * @param listener TableModelListener\n \t */\n-\tpublic void removeTableModelListener(TableModelListener listener);\n+\tvoid removeTableModelListener(TableModelListener listener);\n \n \n } // TableModel"}, {"sha": "50a92ff85bf49acfbbc7d29b7366caab3482a644", "filename": "libjava/javax/swing/text/AbstractDocument.java", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b77d1698d9615b96f094c2bf665f4b16d6c5d674/libjava%2Fjavax%2Fswing%2Ftext%2FAbstractDocument.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b77d1698d9615b96f094c2bf665f4b16d6c5d674/libjava%2Fjavax%2Fswing%2Ftext%2FAbstractDocument.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Ftext%2FAbstractDocument.java?ref=b77d1698d9615b96f094c2bf665f4b16d6c5d674", "patch": "@@ -102,19 +102,19 @@ public BranchElement(Element e, AttributeSet a, int s, int end)\n \tpublic int getStartOffset() { return 0; }\n     }\n     \n-    public interface Content\n+    interface Content\n     {\n-        public Position createPosition(int offset) throws BadLocationException;\n-        public int length();\n-        public UndoableEdit insertString(int where, String str) throws BadLocationException;\n-        public UndoableEdit remove(int where, int nitems) throws BadLocationException;\t\n-        public String getString(int where, int len) throws BadLocationException;\n-        public void getChars(int where, int len, Segment txt) throws BadLocationException;\n+        Position createPosition(int offset) throws BadLocationException;\n+        int length();\n+        UndoableEdit insertString(int where, String str) throws BadLocationException;\n+        UndoableEdit remove(int where, int nitems) throws BadLocationException;\t\n+        String getString(int where, int len) throws BadLocationException;\n+        void getChars(int where, int len, Segment txt) throws BadLocationException;\n     }\n     \n     class DefaultDocumentEvent implements DocumentEvent\n     {\n-\tint len, off;\n+\tpublic int len, off;\n \tpublic Document getDocument() { return AbstractDocument.this; }\n \tpublic int getLength() { return len; }\n \tpublic int getOffset() { return off; }\n@@ -226,7 +226,7 @@ protected  Thread getCurrentWriter()\n     }\n \n \n-    Dictionary getDocumentProperties()\n+    public Dictionary getDocumentProperties()\n     {\n \treturn null;\n     }\n@@ -241,7 +241,7 @@ public int getLength()\n \treturn content.length();\n     }\n     \n-    EventListener[] getListeners(Class listenerType)\n+    public EventListener[] getListeners(Class listenerType)\n     {\n \treturn null;\n     }\n@@ -314,11 +314,11 @@ public void putProperty(Object key, Object value)\n     {\n     }\n   \n-    void readLock()\n+    public void readLock()\n     {\n     }\n   \n-    void readUnlock()\n+    public void readUnlock()\n     {\n     }\n   "}, {"sha": "97ee9f39906648e75e45315d3274dc1ff8104155", "filename": "libjava/javax/swing/text/Document.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b77d1698d9615b96f094c2bf665f4b16d6c5d674/libjava%2Fjavax%2Fswing%2Ftext%2FDocument.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b77d1698d9615b96f094c2bf665f4b16d6c5d674/libjava%2Fjavax%2Fswing%2Ftext%2FDocument.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Ftext%2FDocument.java?ref=b77d1698d9615b96f094c2bf665f4b16d6c5d674", "patch": "@@ -42,9 +42,9 @@\n \n public interface Document\n { \n-  public static final String StreamDescriptionProperty = \"stream\";\n+  String StreamDescriptionProperty = \"stream\";\n   \n-  public static final String TitleProperty = \"text\";\n+  String TitleProperty = \"text\";\n \n   void addDocumentListener(DocumentListener listener);\n   void addUndoableEditListener(UndoableEditListener listener);"}, {"sha": "fdd4bbedca1d076d457bfeac391e444ae765c538", "filename": "libjava/javax/swing/text/MutableAttributeSet.java", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b77d1698d9615b96f094c2bf665f4b16d6c5d674/libjava%2Fjavax%2Fswing%2Ftext%2FMutableAttributeSet.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b77d1698d9615b96f094c2bf665f4b16d6c5d674/libjava%2Fjavax%2Fswing%2Ftext%2FMutableAttributeSet.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Ftext%2FMutableAttributeSet.java?ref=b77d1698d9615b96f094c2bf665f4b16d6c5d674", "patch": "@@ -56,37 +56,37 @@ public interface MutableAttributeSet extends AttributeSet {\n \t * @param name TODO\n \t * @param value TODO\n \t */\n-\tpublic void addAttribute(Object name, Object value);\n+\tvoid addAttribute(Object name, Object value);\n \n \t/**\n \t * addAttributes\n \t * @param attributes TODO\n \t */\n-\tpublic void addAttributes(AttributeSet attributes);\n+\tvoid addAttributes(AttributeSet attributes);\n \n \t/**\n \t * removeAttribute\n \t * @param name TODO\n \t */\n-\tpublic void removeAttribute(Object name);\n+\tvoid removeAttribute(Object name);\n \n \t/**\n \t * removeAttributes\n \t * @param names TODO\n \t */\n-\tpublic void removeAttributes(Enumeration names);\n+\tvoid removeAttributes(Enumeration names);\n \n \t/**\n \t * removeAttributes\n \t * @param attributes TODO\n \t */\n-\tpublic void removeAttributes(AttributeSet attributes);\n+\tvoid removeAttributes(AttributeSet attributes);\n \n \t/**\n \t * setResolveParent\n \t * @param parent TODO\n \t */\n-\tpublic void setResolveParent(AttributeSet parent);\n+\tvoid setResolveParent(AttributeSet parent);\n \n \n } // MutableAttributeSet"}, {"sha": "852dde75fba729a4d3c888696f9122419711d97e", "filename": "libjava/javax/swing/text/StyledDocument.java", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b77d1698d9615b96f094c2bf665f4b16d6c5d674/libjava%2Fjavax%2Fswing%2Ftext%2FStyledDocument.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b77d1698d9615b96f094c2bf665f4b16d6c5d674/libjava%2Fjavax%2Fswing%2Ftext%2FStyledDocument.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Ftext%2FStyledDocument.java?ref=b77d1698d9615b96f094c2bf665f4b16d6c5d674", "patch": "@@ -57,20 +57,20 @@ public interface StyledDocument extends Document {\n \t * @param rent TODO\n \t * @returns Style\n \t */\n-\tpublic Style addStyle(String nm, Style parent);\n+\tStyle addStyle(String nm, Style parent);\n \n \t/**\n \t * removeStyle\n \t * @param nm TODO\n \t */\n-\tpublic void removeStyle(String nm);\n+\tvoid removeStyle(String nm);\n \n \t/**\n \t * getStyle\n \t * @param nm TODO\n \t * @returns Style\n \t */\n-\tpublic Style getStyle(String nm);\n+\tStyle getStyle(String nm);\n \n \t/**\n \t * setCharacterAttributes\n@@ -79,7 +79,7 @@ public interface StyledDocument extends Document {\n \t * @param set TODO\n \t * @param replace TODO\n \t */\n-\tpublic void setCharacterAttributes(int offset, int length,\n+\tvoid setCharacterAttributes(int offset, int length,\n \t\tAttributeSet set, boolean replace);\n \n \t/**\n@@ -89,57 +89,57 @@ public void setCharacterAttributes(int offset, int length,\n \t * @param set TODO\n \t * @param replace TODO\n \t */\n-\tpublic void setParagraphAttributes(int offset, int length,\n+\tvoid setParagraphAttributes(int offset, int length,\n \t\tAttributeSet set, boolean replace);\n \n \t/**\n \t * getLogicalStyle\n \t * @param position TODO\n \t * @returns Style\n \t */\n-\tpublic Style getLogicalStyle(int position);\n+\tStyle getLogicalStyle(int position);\n \n \t/**\n \t * setLogicalStyle\n \t * @param position TODO\n \t * @param style TODO\n \t */\n-\tpublic void setLogicalStyle(int position, Style style);\n+\tvoid setLogicalStyle(int position, Style style);\n \n \t/**\n \t * getParagraphElement\n \t * @param position TODO\n \t * @returns Element\n \t */\n-\tpublic abstract Element getParagraphElement(int position);\n+\tElement getParagraphElement(int position);\n \n \t/**\n \t * getCharacterElement\n \t * @param position TODO\n \t * @returns Element\n \t */\n-\tpublic Element getCharacterElement(int position);\n+\tElement getCharacterElement(int position);\n \n \t/**\n \t * getForeground\n \t * @param set TODO\n \t * @returns Color\n \t */\n-\tpublic Color getForeground(AttributeSet set);\n+\tColor getForeground(AttributeSet set);\n \n \t/**\n \t * getBackground\n \t * @param set TODO\n \t * @returns Color\n \t */\n-\tpublic Color getBackground(AttributeSet set);\n+\tColor getBackground(AttributeSet set);\n \n \t/**\n \t * getFont\n \t * @param set TODO\n \t * @returns Font\n \t */\n-\tpublic Font getFont(AttributeSet set);\n+\tFont getFont(AttributeSet set);\n \n \n } // StyledDocument"}, {"sha": "1fef6bceb96cc4768a90deaa8c3a14db5a001e22", "filename": "libjava/javax/swing/text/ViewFactory.java", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b77d1698d9615b96f094c2bf665f4b16d6c5d674/libjava%2Fjavax%2Fswing%2Ftext%2FViewFactory.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b77d1698d9615b96f094c2bf665f4b16d6c5d674/libjava%2Fjavax%2Fswing%2Ftext%2FViewFactory.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Ftext%2FViewFactory.java?ref=b77d1698d9615b96f094c2bf665f4b16d6c5d674", "patch": "@@ -37,8 +37,7 @@\n \n package javax.swing.text;\n \n-\n public interface ViewFactory\n {\n-    public View create(Element elem);\n+    View create (Element elem);\n }"}, {"sha": "020e7410f9766b265e56604dbaa348c722694ef3", "filename": "libjava/javax/swing/tree/DefaultMutableTreeNode.java", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b77d1698d9615b96f094c2bf665f4b16d6c5d674/libjava%2Fjavax%2Fswing%2Ftree%2FDefaultMutableTreeNode.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b77d1698d9615b96f094c2bf665f4b16d6c5d674/libjava%2Fjavax%2Fswing%2Ftree%2FDefaultMutableTreeNode.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Ftree%2FDefaultMutableTreeNode.java?ref=b77d1698d9615b96f094c2bf665f4b16d6c5d674", "patch": "@@ -511,7 +511,6 @@ public int getDepth() {\n \tpublic static void growTree(DefaultMutableTreeNode root) {\n \n \t\t// Variables\n-\t\tint\t\t\t\t\t\tsize;\n \t\tint\t\t\t\t\t\tindex;\n \t\tDefaultMutableTreeNode\tnode;\n \t\tDefaultMutableTreeNode\tcurrent;\n@@ -626,7 +625,6 @@ public Object[] getUserObjectPath() {\n \t\t// Variables\n \t\tTreeNode[]\tpath;\n \t\tObject[]\tobject;\n-\t\tint\t\t\tsize;\n \t\tint\t\t\tindex;\n \n \t\t// Get Path for Tree Nodes\n@@ -739,7 +737,6 @@ public boolean isNodeChild(TreeNode node) {\n \n \t\t// Variables\n \t\tTreeNode\tcurrent;\n-\t\tint\t\t\tindex;\n \n \t\t// Sanity Check\n \t\tif (node == null) {\n@@ -841,9 +838,6 @@ public TreeNode getChildBefore(TreeNode node) {\n \t */\n \tpublic boolean isNodeSibling(TreeNode node) {\n \n-\t\t// Variables\n-\t\tint\t\t\tindex;\n-\n \t\t// Check for null\n \t\tif (node == null) {\n \t\t\treturn false;"}, {"sha": "ff038d5b3f1a5740ac8ecbdb9b8b3aa347d36f90", "filename": "libjava/javax/swing/tree/MutableTreeNode.java", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b77d1698d9615b96f094c2bf665f4b16d6c5d674/libjava%2Fjavax%2Fswing%2Ftree%2FMutableTreeNode.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b77d1698d9615b96f094c2bf665f4b16d6c5d674/libjava%2Fjavax%2Fswing%2Ftree%2FMutableTreeNode.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Ftree%2FMutableTreeNode.java?ref=b77d1698d9615b96f094c2bf665f4b16d6c5d674", "patch": "@@ -38,7 +38,7 @@\n package javax.swing.tree;\n \n /**\n- * MutableTreeNode interface\n+ * MutableTreeNode public interface\n  * @author Andrew Selkirk\n  */\n public interface MutableTreeNode extends TreeNode {\n@@ -48,36 +48,36 @@ public interface MutableTreeNode extends TreeNode {\n \t * @param child MutableTreeNode\n \t * @param index Index\n \t */\n-\tpublic void insert(MutableTreeNode child, int index);\n+\tvoid insert(MutableTreeNode child, int index);\n \n \t/**\n \t * remove\n \t * @param index Index\n \t */\n-\tpublic void remove(int index);\n+\tvoid remove(int index);\n \n \t/**\n \t * remove\n \t * @param node MutableTreeNode\n \t */\n-\tpublic void remove(MutableTreeNode node);\n+\tvoid remove(MutableTreeNode node);\n \n \t/**\n \t * setUserObject\n \t * @param object Object\n \t */\n-\tpublic void setUserObject(Object object);\n+\tvoid setUserObject(Object object);\n \n \t/**\n \t * removeFromParent\n \t */\n-\tpublic void removeFromParent();\n+\tvoid removeFromParent();\n \n \t/**\n \t * setParent\n \t * @param parent MutableTreeNode\n \t */\n-\tpublic void setParent(MutableTreeNode parent);\n+\tvoid setParent(MutableTreeNode parent);\n \n \n } // MutableTreeNode"}, {"sha": "ea3122a46ca7f4f9c6ae213a750498df2b14ea9f", "filename": "libjava/javax/swing/tree/RowMapper.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b77d1698d9615b96f094c2bf665f4b16d6c5d674/libjava%2Fjavax%2Fswing%2Ftree%2FRowMapper.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b77d1698d9615b96f094c2bf665f4b16d6c5d674/libjava%2Fjavax%2Fswing%2Ftree%2FRowMapper.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Ftree%2FRowMapper.java?ref=b77d1698d9615b96f094c2bf665f4b16d6c5d674", "patch": "@@ -38,7 +38,7 @@\n package javax.swing.tree;\n \n /**\n- * RowMapper interface\n+ * RowMapper public interface\n  * @author Andrew Selkirk\n  */\n public interface RowMapper {\n@@ -48,7 +48,7 @@ public interface RowMapper {\n \t * @param path TreePath\n \t * @return TODO\n \t */\n-\tpublic int[] getRowsForPaths(TreePath[] path);\n+\tint[] getRowsForPaths(TreePath[] path);\n \n \n } // RowMapper"}, {"sha": "bdc0b5d64686e96654b199ef8398d52fa3f5940d", "filename": "libjava/javax/swing/tree/TreeCellEditor.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b77d1698d9615b96f094c2bf665f4b16d6c5d674/libjava%2Fjavax%2Fswing%2Ftree%2FTreeCellEditor.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b77d1698d9615b96f094c2bf665f4b16d6c5d674/libjava%2Fjavax%2Fswing%2Ftree%2FTreeCellEditor.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Ftree%2FTreeCellEditor.java?ref=b77d1698d9615b96f094c2bf665f4b16d6c5d674", "patch": "@@ -42,7 +42,7 @@\n import javax.swing.JTree;\n \n /**\n- * TreeCellEditor interface\n+ * TreeCellEditor public interface\n  * @author Andrew Selkirk\n  */\n public interface TreeCellEditor {\n@@ -57,7 +57,7 @@ public interface TreeCellEditor {\n \t * @param row TODO\n \t * @returns TODO\n \t */\n-\tpublic Component getTreeCellEditorComponent(JTree tree,\n+\tComponent getTreeCellEditorComponent(JTree tree,\n \t\t\tObject value, boolean isSelected, boolean expanded,\n \t\t\tboolean leaf, int row);\n "}, {"sha": "3be8870ece5a66fc60012d2133592a0b2a22aefb", "filename": "libjava/javax/swing/tree/TreeCellRenderer.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b77d1698d9615b96f094c2bf665f4b16d6c5d674/libjava%2Fjavax%2Fswing%2Ftree%2FTreeCellRenderer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b77d1698d9615b96f094c2bf665f4b16d6c5d674/libjava%2Fjavax%2Fswing%2Ftree%2FTreeCellRenderer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Ftree%2FTreeCellRenderer.java?ref=b77d1698d9615b96f094c2bf665f4b16d6c5d674", "patch": "@@ -42,7 +42,7 @@\n import javax.swing.JTree;\n \n /**\n- * TreeCellRenderer interface\n+ * TreeCellRenderer public interface\n  * @author Andrew Selkirk\n  */\n public interface TreeCellRenderer {\n@@ -58,7 +58,7 @@ public interface TreeCellRenderer {\n \t * @param us TODO\n \t * @returns TODO\n \t */\n-\tpublic Component getTreeCellRendererComponent(JTree tree,\n+\tComponent getTreeCellRendererComponent(JTree tree,\n \t\t\tObject value, boolean selected, boolean expanded,\n \t\t\tboolean leaf, int row, boolean hasFocus);\n "}, {"sha": "00bd88b4c16814131759c1e9a7fed34f4df335d0", "filename": "libjava/javax/swing/tree/TreeModel.java", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b77d1698d9615b96f094c2bf665f4b16d6c5d674/libjava%2Fjavax%2Fswing%2Ftree%2FTreeModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b77d1698d9615b96f094c2bf665f4b16d6c5d674/libjava%2Fjavax%2Fswing%2Ftree%2FTreeModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Ftree%2FTreeModel.java?ref=b77d1698d9615b96f094c2bf665f4b16d6c5d674", "patch": "@@ -41,7 +41,7 @@\n import javax.swing.event.TreeModelListener;\n \n /**\n- * TreeModel interface\n+ * TreeModel public interface\n  * @author Andrew Selkirk\n  */\n public interface TreeModel {\n@@ -54,56 +54,56 @@ public interface TreeModel {\n \t * getRoot\n \t * @returns Object\n \t */\n-\tpublic abstract Object getRoot();\n+\tObject getRoot();\n \n \t/**\n \t * getChild\n \t * @param parent TODO\n \t * @param index TODO\n \t * @returns Object\n \t */\n-\tpublic abstract Object getChild(Object parent, int index);\n+\tObject getChild(Object parent, int index);\n \n \t/**\n \t * getChildCount\n \t * @param parent TODO\n \t * @returns int\n \t */\n-\tpublic abstract int getChildCount(Object parent);\n+\tint getChildCount(Object parent);\n \n \t/**\n \t * isLeaf\n \t * @param node TODO\n \t * @returns boolean\n \t */\n-\tpublic abstract boolean isLeaf(Object node);\n+\tboolean isLeaf(Object node);\n \n \t/**\n \t * valueForPathChanged\n \t * @param path TODO\n \t * @param newvalue TODO\n \t */\n-\tpublic abstract void valueForPathChanged(TreePath path, Object newvalue);\n+\tvoid valueForPathChanged(TreePath path, Object newvalue);\n \n \t/**\n \t * getIndexOfChild\n \t * @param parent TODO\n \t * @param ild TODO\n \t * @returns int\n \t */\n-\tpublic abstract int getIndexOfChild(Object parent, Object child);\n+\tint getIndexOfChild(Object parent, Object child);\n \n \t/**\n \t * addTreeModelListener\n \t * @param listener TODO\n \t */\n-\tpublic abstract void addTreeModelListener(TreeModelListener listener);\n+\tvoid addTreeModelListener(TreeModelListener listener);\n \n \t/**\n \t * removeTreeModelListener\n \t * @param listener TODO\n \t */\n-\tpublic abstract void removeTreeModelListener(TreeModelListener listener);\n+\tvoid removeTreeModelListener(TreeModelListener listener);\n \n \n } // TreeModel"}, {"sha": "d7967f0efb3729087e1e12572ff917ccd8ff7a3e", "filename": "libjava/javax/swing/tree/TreeNode.java", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b77d1698d9615b96f094c2bf665f4b16d6c5d674/libjava%2Fjavax%2Fswing%2Ftree%2FTreeNode.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b77d1698d9615b96f094c2bf665f4b16d6c5d674/libjava%2Fjavax%2Fswing%2Ftree%2FTreeNode.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Ftree%2FTreeNode.java?ref=b77d1698d9615b96f094c2bf665f4b16d6c5d674", "patch": "@@ -41,7 +41,7 @@\n import java.util.Enumeration;\n \n /**\n- * TreeNode interface\n+ * TreeNode public interface\n  * @author Andrew Selkirk\n  */\n public interface TreeNode {\n@@ -54,45 +54,45 @@ public interface TreeNode {\n \t * getParent\n \t * @returns TreeNode\n \t */\n-\tpublic TreeNode getParent();\n+\tTreeNode getParent();\n \n \t/**\n \t * getIndex\n \t * @param node TODO\n \t * @returns int\n \t */\n-\tpublic int getIndex(TreeNode node);\n+\tint getIndex(TreeNode node);\n \n \t/**\n \t * getChildAt\n \t * @param index TODO\n \t * @returns TreeNode\n \t */\n-\tpublic TreeNode getChildAt(int index);\n+\tTreeNode getChildAt(int index);\n \n \t/**\n \t * getChildCount\n \t * @returns int\n \t */\n-\tpublic int getChildCount();\n+\tint getChildCount();\n \n \t/**\n \t * getAllowsChildren\n \t * @returns boolean\n \t */\n-\tpublic abstract boolean getAllowsChildren();\n+\tboolean getAllowsChildren();\n \n \t/**\n \t * isLeaf\n \t * @returns boolean\n \t */\n-\tpublic boolean isLeaf();\n+\tboolean isLeaf();\n \n \t/**\n \t * children\n \t * @returns Enumeration\n \t */\n-\tpublic Enumeration children();\n+\tEnumeration children();\n \n \n } // TreeNode"}, {"sha": "85dfe29a9cc34c195e092b8d7ee83ca0a05a2239", "filename": "libjava/javax/swing/tree/TreeSelectionModel.java", "status": "modified", "additions": 31, "deletions": 31, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b77d1698d9615b96f094c2bf665f4b16d6c5d674/libjava%2Fjavax%2Fswing%2Ftree%2FTreeSelectionModel.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b77d1698d9615b96f094c2bf665f4b16d6c5d674/libjava%2Fjavax%2Fswing%2Ftree%2FTreeSelectionModel.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Ftree%2FTreeSelectionModel.java?ref=b77d1698d9615b96f094c2bf665f4b16d6c5d674", "patch": "@@ -42,42 +42,42 @@\n import javax.swing.event.TreeSelectionListener;\n \n /**\n- * TreeSelectionModel interface\n+ * TreeSelectionModel public interface\n  * @author Andrew Selkirk\n  */\n public interface TreeSelectionModel {\n \n-\tpublic static final int SINGLE_TREE_SELECTION\t\t\t= 1;\n-\tpublic static final int CONTIGUOUS_TREE_SELECTION\t\t= 2;\n-\tpublic static final int DISCONTIGUOUS_TREE_SELECTION\t= 4;\n+\tint SINGLE_TREE_SELECTION\t\t\t= 1;\n+\tint CONTIGUOUS_TREE_SELECTION\t\t= 2;\n+\tint DISCONTIGUOUS_TREE_SELECTION\t= 4;\n \n-\tpublic void setSelectionMode(int mode);\n-\tpublic int getSelectionMode();\n-\tpublic void setSelectionPath(TreePath path);\n-\tpublic void setSelectionPaths(TreePath[] paths);\n-\tpublic void addSelectionPath(TreePath path);\n-\tpublic void addSelectionPaths(TreePath[] paths);\n-\tpublic void removeSelectionPath(TreePath path);\n-\tpublic void removeSelectionPaths(TreePath[] paths);\n-\tpublic TreePath getSelectionPath();\n-\tpublic TreePath[] getSelectionPaths();\n-\tpublic int getSelectionCount();\n-\tpublic boolean isPathSelected(TreePath path);\n-\tpublic boolean isSelectionEmpty();\n-\tpublic void clearSelection();\n-\tpublic void setRowMapper(RowMapper newMapper);\n-\tpublic RowMapper getRowMapper();\n-\tpublic int[] getSelectionRows();\n-\tpublic int getMinSelectionRow();\n-\tpublic int getMaxSelectionRow();\n-\tpublic boolean isRowSelected(int row);\n-\tpublic void resetRowSelection();\n-\tpublic int getLeadSelectionRow();\n-\tpublic TreePath getLeadSelectionPath();\n-\tpublic void addPropertyChangeListener(PropertyChangeListener listener);\n-\tpublic void removePropertyChangeListener(PropertyChangeListener listener);\n-\tpublic void addTreeSelectionListener(TreeSelectionListener x);\n-\tpublic void removeTreeSelectionListener(TreeSelectionListener x);\n+\tvoid setSelectionMode(int mode);\n+\tint getSelectionMode();\n+\tvoid setSelectionPath(TreePath path);\n+\tvoid setSelectionPaths(TreePath[] paths);\n+\tvoid addSelectionPath(TreePath path);\n+\tvoid addSelectionPaths(TreePath[] paths);\n+\tvoid removeSelectionPath(TreePath path);\n+\tvoid removeSelectionPaths(TreePath[] paths);\n+\tTreePath getSelectionPath();\n+\tTreePath[] getSelectionPaths();\n+\tint getSelectionCount();\n+\tboolean isPathSelected(TreePath path);\n+\tboolean isSelectionEmpty();\n+\tvoid clearSelection();\n+\tvoid setRowMapper(RowMapper newMapper);\n+\tRowMapper getRowMapper();\n+\tint[] getSelectionRows();\n+\tint getMinSelectionRow();\n+\tint getMaxSelectionRow();\n+\tboolean isRowSelected(int row);\n+\tvoid resetRowSelection();\n+\tint getLeadSelectionRow();\n+\tTreePath getLeadSelectionPath();\n+\tvoid addPropertyChangeListener(PropertyChangeListener listener);\n+\tvoid removePropertyChangeListener(PropertyChangeListener listener);\n+\tvoid addTreeSelectionListener(TreeSelectionListener x);\n+\tvoid removeTreeSelectionListener(TreeSelectionListener x);\n \n \n } // TreeSelectionModel"}, {"sha": "016a54371d7b13902b3785498e4c67fa71e3b228", "filename": "libjava/javax/swing/undo/StateEditable.java", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b77d1698d9615b96f094c2bf665f4b16d6c5d674/libjava%2Fjavax%2Fswing%2Fundo%2FStateEditable.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b77d1698d9615b96f094c2bf665f4b16d6c5d674/libjava%2Fjavax%2Fswing%2Fundo%2FStateEditable.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fundo%2FStateEditable.java?ref=b77d1698d9615b96f094c2bf665f4b16d6c5d674", "patch": "@@ -41,7 +41,7 @@\n import java.util.Hashtable;\n \n /**\n- * StateEditable interface\n+ * StateEditable public interface\n  * @author Andrew Selkirk\n  */\n public interface StateEditable\n@@ -50,16 +50,16 @@\n    * Restore State\n    * @param state State\n    */\n-  public void restoreState(Hashtable state);\n+  void restoreState(Hashtable state);\n \n   /**\n    * Store State\n    * @param state State\n    */\n-  public void storeState(Hashtable state);\n+  void storeState(Hashtable state);\n \n   /**\n    * For some reason, Sun made the RCS IDs visible.\n    */\n-  public static final String RCSID = \"We aren't compatible\";\n+  String RCSID = \"We aren't compatible\";\n } // StateEditable"}, {"sha": "055fae0cdf82af2fb0fd46c3e176cd2c31168ba8", "filename": "libjava/javax/swing/undo/UndoableEdit.java", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b77d1698d9615b96f094c2bf665f4b16d6c5d674/libjava%2Fjavax%2Fswing%2Fundo%2FUndoableEdit.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b77d1698d9615b96f094c2bf665f4b16d6c5d674/libjava%2Fjavax%2Fswing%2Fundo%2FUndoableEdit.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fundo%2FUndoableEdit.java?ref=b77d1698d9615b96f094c2bf665f4b16d6c5d674", "patch": "@@ -38,7 +38,7 @@\n package javax.swing.undo;\n \n /**\n- * UndoableEdit interface\n+ * UndoableEdit public interface\n  * @author Andrew Selkirk\n  */\n public interface UndoableEdit {\n@@ -48,67 +48,67 @@ public interface UndoableEdit {\n \t * @param anEdit TODO\n \t * @returns TODO\n \t */\n-\tpublic boolean addEdit(UndoableEdit anEdit);\n+\tboolean addEdit(UndoableEdit anEdit);\n \n \t/**\n \t * canRedo\n \t * @returns TODO\n \t */\n-\tpublic boolean canRedo();\n+\tboolean canRedo();\n \n \t/**\n \t * canRedo\n \t * @returns TODO\n \t */\n-\tpublic boolean canUndo();\n+\tboolean canUndo();\n \n \t/**\n \t * die\n \t */\n-\tpublic void die();\n+\tvoid die();\n \n \t/**\n \t * getPresentationName\n \t * @returns TODO\n \t */\n-\tpublic String getPresentationName();\n+\tString getPresentationName();\n \n \t/**\n \t * getRedoPresentationName\n \t * @returns TODO\n \t */\n-\tpublic String getRedoPresentationName();\n+\tString getRedoPresentationName();\n \n \t/**\n \t * getUndoPresentationName\n \t * @returns TODO\n \t */\n-\tpublic String getUndoPresentationName();\n+\tString getUndoPresentationName();\n \n \t/**\n \t * isSignificant\n \t * @returns TODO\n \t */\n-\tpublic boolean isSignificant();\n+\tboolean isSignificant();\n \n \t/**\n \t * redo\n \t * @throws CannotRedoException TODO\n \t */\n-\tpublic void redo() throws CannotRedoException;\n+\tvoid redo() throws CannotRedoException;\n \n \t/**\n \t * replaceEdit\n \t * @param anEdit TODO\n \t * @returns TODO\n \t */\n-\tpublic boolean replaceEdit(UndoableEdit anEdit);\n+\tboolean replaceEdit(UndoableEdit anEdit);\n \n \t/**\n \t * undo\n \t * @throws CannotUndoException TODO\n \t */\n-\tpublic void undo() throws CannotUndoException;\n+\tvoid undo() throws CannotUndoException;\n \n \n } // UndoableEdit"}]}