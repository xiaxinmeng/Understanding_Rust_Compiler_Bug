{"sha": "9ef2eff0d40fb59ee7538148fc8eb25088777297", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWVmMmVmZjBkNDBmYjU5ZWU3NTM4MTQ4ZmM4ZWIyNTA4ODc3NzI5Nw==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2016-09-22T12:16:42Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2016-09-22T12:16:42Z"}, "message": "re PR tree-optimization/77697 (suspicious code in tree-ssa-forwprop.c)\n\n2016-09-22  Richard Biener  <rguenther@suse.de>\n\n\tPR middle-end/77697\n\t* gimple-fold.c (fold_array_ctor_reference): Turn asserts into\n\tfold fails.\n\nFrom-SVN: r240353", "tree": {"sha": "780b38bd2bac90111b2a475dc108d206c07874aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/780b38bd2bac90111b2a475dc108d206c07874aa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9ef2eff0d40fb59ee7538148fc8eb25088777297", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ef2eff0d40fb59ee7538148fc8eb25088777297", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ef2eff0d40fb59ee7538148fc8eb25088777297", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ef2eff0d40fb59ee7538148fc8eb25088777297/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1f3131cb1e238fa37d0fedb8d5b05761c3dbfef6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f3131cb1e238fa37d0fedb8d5b05761c3dbfef6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f3131cb1e238fa37d0fedb8d5b05761c3dbfef6"}], "stats": {"total": 13, "additions": 10, "deletions": 3}, "files": [{"sha": "c2b4470aef1f42d1e99a71b85ed362499c12c96d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ef2eff0d40fb59ee7538148fc8eb25088777297/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ef2eff0d40fb59ee7538148fc8eb25088777297/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9ef2eff0d40fb59ee7538148fc8eb25088777297", "patch": "@@ -1,3 +1,9 @@\n+2016-09-22  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/77697\n+\t* gimple-fold.c (fold_array_ctor_reference): Turn asserts into\n+\tfold fails.\n+\n 2016-09-22  Richard Biener  <rguenther@suse.de>\n \n \tPR middle-end/77677"}, {"sha": "23e4516e02039035c814334c1d8ef2f002bbe724", "filename": "gcc/gimple-fold.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ef2eff0d40fb59ee7538148fc8eb25088777297/gcc%2Fgimple-fold.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ef2eff0d40fb59ee7538148fc8eb25088777297/gcc%2Fgimple-fold.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-fold.c?ref=9ef2eff0d40fb59ee7538148fc8eb25088777297", "patch": "@@ -5647,14 +5647,15 @@ fold_array_ctor_reference (tree type, tree ctor,\n   if (domain_type && TYPE_MIN_VALUE (domain_type))\n     {\n       /* Static constructors for variably sized objects makes no sense.  */\n-      gcc_assert (TREE_CODE (TYPE_MIN_VALUE (domain_type)) == INTEGER_CST);\n+      if (TREE_CODE (TYPE_MIN_VALUE (domain_type)) != INTEGER_CST)\n+\treturn NULL_TREE;\n       low_bound = wi::to_offset (TYPE_MIN_VALUE (domain_type));\n     }\n   else\n     low_bound = 0;\n   /* Static constructors for variably sized objects makes no sense.  */\n-  gcc_assert (TREE_CODE (TYPE_SIZE_UNIT (TREE_TYPE (TREE_TYPE (ctor))))\n-\t      == INTEGER_CST);\n+  if (TREE_CODE (TYPE_SIZE_UNIT (TREE_TYPE (TREE_TYPE (ctor)))) != INTEGER_CST)\n+    return NULL_TREE;\n   elt_size = wi::to_offset (TYPE_SIZE_UNIT (TREE_TYPE (TREE_TYPE (ctor))));\n \n   /* We can handle only constantly sized accesses that are known to not"}]}