{"sha": "dde23f43f9b80286ebed873431d7707a800f9043", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGRlMjNmNDNmOWI4MDI4NmViZWQ4NzM0MzFkNzcwN2E4MDBmOTA0Mw==", "commit": {"author": {"name": "Kristina Martsenko", "email": "kristina.martsenko@arm.com", "date": "2016-07-28T14:29:28Z"}, "committer": {"name": "Wilco Dijkstra", "email": "wilco@gcc.gnu.org", "date": "2016-07-28T14:29:28Z"}, "message": "This patchset improves zero extend costs and code generation.\n\nWhen zero extending a 32-bit register, we emit a \"mov\", but currently\nreport the cost of the \"mov\" incorrectly.\n\nIn terms of speed, we currently say the cost is that of an extend\noperation. But the cost of a \"mov\" is the cost of 1 instruction, so fix\nthat.\n\nIn terms of size, we currently say that the \"mov\" takes 0 instructions.\nFix it by changing it to 1.\n\nBootstrapped and tested on aarch64-none-elf.\n\n    gcc/\n\t* config/aarch64/aarch64.c (aarch64_rtx_costs): Fix cost of zero extend.\n\nFrom-SVN: r238820", "tree": {"sha": "f82b0fcf97f2cdf5376d6c3f63001934b8c4a480", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f82b0fcf97f2cdf5376d6c3f63001934b8c4a480"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dde23f43f9b80286ebed873431d7707a800f9043", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dde23f43f9b80286ebed873431d7707a800f9043", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dde23f43f9b80286ebed873431d7707a800f9043", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dde23f43f9b80286ebed873431d7707a800f9043/comments", "author": {"login": "kristina-martsenko", "id": 651341, "node_id": "MDQ6VXNlcjY1MTM0MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/651341?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kristina-martsenko", "html_url": "https://github.com/kristina-martsenko", "followers_url": "https://api.github.com/users/kristina-martsenko/followers", "following_url": "https://api.github.com/users/kristina-martsenko/following{/other_user}", "gists_url": "https://api.github.com/users/kristina-martsenko/gists{/gist_id}", "starred_url": "https://api.github.com/users/kristina-martsenko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kristina-martsenko/subscriptions", "organizations_url": "https://api.github.com/users/kristina-martsenko/orgs", "repos_url": "https://api.github.com/users/kristina-martsenko/repos", "events_url": "https://api.github.com/users/kristina-martsenko/events{/privacy}", "received_events_url": "https://api.github.com/users/kristina-martsenko/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "89ac681e18c3eace27e14bf03ff028bacd37e841", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89ac681e18c3eace27e14bf03ff028bacd37e841", "html_url": "https://github.com/Rust-GCC/gccrs/commit/89ac681e18c3eace27e14bf03ff028bacd37e841"}], "stats": {"total": 15, "additions": 10, "deletions": 5}, "files": [{"sha": "6945af97956381abbcef0b36acf8a95687a043b7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dde23f43f9b80286ebed873431d7707a800f9043/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dde23f43f9b80286ebed873431d7707a800f9043/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dde23f43f9b80286ebed873431d7707a800f9043", "patch": "@@ -1,3 +1,7 @@\n+2016-07-28  Kristina Martsenko  <kristina.martsenko@arm.com>\n+\n+\t* config/aarch64/aarch64.c (aarch64_rtx_costs): Fix cost of zero extend.\n+\n 2016-07-28  Wilco Dijkstra  <wdijkstr@arm.com>\n \n \t* config/aarch64/aarch64.c (aarch64_pushwb_pair_reg): Rename."}, {"sha": "e91811d2cae689c3177af87ff0520ccd1ff8d720", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dde23f43f9b80286ebed873431d7707a800f9043/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dde23f43f9b80286ebed873431d7707a800f9043/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=dde23f43f9b80286ebed873431d7707a800f9043", "patch": "@@ -6803,11 +6803,12 @@ aarch64_rtx_costs (rtx x, machine_mode mode, int outer ATTRIBUTE_UNUSED,\n \t{\n \t  int op_cost = rtx_cost (op0, VOIDmode, ZERO_EXTEND, 0, speed);\n \n-\t  if (!op_cost && speed)\n-\t    /* MOV.  */\n-\t    *cost += extra_cost->alu.extend;\n-\t  else\n-\t    /* Free, the cost is that of the SI mode operation.  */\n+\t/* If OP_COST is non-zero, then the cost of the zero extend\n+\t   is effectively the cost of the inner operation.  Otherwise\n+\t   we have a MOV instruction and we take the cost from the MOV\n+\t   itself.  This is true independently of whether we are\n+\t   optimizing for space or time.  */\n+\t  if (op_cost)\n \t    *cost = op_cost;\n \n \t  return true;"}]}