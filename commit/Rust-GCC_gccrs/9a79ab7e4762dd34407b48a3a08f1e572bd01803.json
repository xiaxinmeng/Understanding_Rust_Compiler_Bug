{"sha": "9a79ab7e4762dd34407b48a3a08f1e572bd01803", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWE3OWFiN2U0NzYyZGQzNDQwN2I0OGEzYTA4ZjFlNTcyYmQwMTgwMw==", "commit": {"author": {"name": "Andreas Jaeger", "email": "aj@gcc.gnu.org", "date": "2003-03-04T18:01:16Z"}, "committer": {"name": "Andreas Jaeger", "email": "aj@gcc.gnu.org", "date": "2003-03-04T18:01:16Z"}, "message": "Oops forgot to commit ChangeLog for:\n\n\t* configure.in: Check for <memcheck.h>.\n        * configure: Regenerated.\n\n\t* config.in: Define HAVE_MEMCHECK_H.\n\n\t* ggc-common.c: Use <memcheck.h> if available instead of\n\t<valgrind.h>.\n\t* ggc-page.c: Likewise.\n\t* cppfiles.c: Likewise.\n\nFrom-SVN: r63790", "tree": {"sha": "22e12a798b2b6071995423837668bd93e196b6f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/22e12a798b2b6071995423837668bd93e196b6f9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9a79ab7e4762dd34407b48a3a08f1e572bd01803", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a79ab7e4762dd34407b48a3a08f1e572bd01803", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a79ab7e4762dd34407b48a3a08f1e572bd01803", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a79ab7e4762dd34407b48a3a08f1e572bd01803/comments", "author": null, "committer": null, "parents": [{"sha": "14011ca451d20d1d01d81d7f7e8055a98405966d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14011ca451d20d1d01d81d7f7e8055a98405966d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/14011ca451d20d1d01d81d7f7e8055a98405966d"}], "stats": {"total": 30, "additions": 21, "deletions": 9}, "files": [{"sha": "e4bdb0e3d8e919919a6759de4bb05c9b8eaaa3fa", "filename": "gcc/ChangeLog", "status": "modified", "additions": 21, "deletions": 9, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a79ab7e4762dd34407b48a3a08f1e572bd01803/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a79ab7e4762dd34407b48a3a08f1e572bd01803/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9a79ab7e4762dd34407b48a3a08f1e572bd01803", "patch": "@@ -1,3 +1,15 @@\n+2003-03-04  Andreas Jaeger  <aj@suse.de>\n+\n+\t* configure.in: Check for <memcheck.h>.\n+        * configure: Regenerated.\n+\n+\t* config.in: Define HAVE_MEMCHECK_H.\n+\n+\t* ggc-common.c: Use <memcheck.h> if available instead of\n+\t<valgrind.h>.\n+\t* ggc-page.c: Likewise.\n+\t* cppfiles.c: Likewise.\n+\n 2003-03-04  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* config/h8300/h8300.md (*extzv_8_8): Fix cc and lengths.\n@@ -187,7 +199,7 @@ Mon Mar  3 19:07:21 CET 2003  Jan Hubicka  <jh@suse.cz>\n \t* configure.in (HAVE_AS_LTOFFX_LDXMOV_RELOCS): New ia64 test.\n \t* config.in, configure: Rebuild.\n \t* config/ia64/ia64.c (ia64_ld_address_bypass_p): Accept lo_sum.\n-\t* config/ia64/ia64.md (load_symptr): Use high/lo_sum for the \n+\t* config/ia64/ia64.md (load_symptr): Use high/lo_sum for the\n \tpaired ldtoffx and ldxmov annotations.\n \t(load_symptr_internal1): Remove.\n \t(load_symptr_high, load_symptr_low): New.\n@@ -202,7 +214,7 @@ Mon Mar  3 19:07:21 CET 2003  Jan Hubicka  <jh@suse.cz>\n \ta separate limit for the RTL inliner.\n \t* params.h: Likewise.\n \t* integrate.c (function_cannot_inline_p): Use it.\n-\t* toplev.c (decode_f_option): Set multiple parameters \n+\t* toplev.c (decode_f_option): Set multiple parameters\n \tcontrolling inlining with -finline-limit.\n \t* params.def: Fix orthographic and typographic errors.\n \t* doc/invoke.texi: Document parameters controlling inlining\n@@ -244,7 +256,7 @@ Mon Mar  3 19:07:21 CET 2003  Jan Hubicka  <jh@suse.cz>\n \t* config/m68hc11/m68hc11.c (m68hc11_shift_operator): New function.\n \t* config/m68hc11/m68hc11-protos.h (m68hc11_shift_operator): Declare.\n \t* config/m68hc11/m68hc11.h (PREDICATE_CODES): Register.\n-\t* config/m68hc11/m68hc11.md (\"rotrhi3\", \"rotlhi3\"): New patterns for \n+\t* config/m68hc11/m68hc11.md (\"rotrhi3\", \"rotlhi3\"): New patterns for\n \trotatert and rotate.\n \t(\"rotrhi3_const\", \"rotlhi3_const\"): Rename of old 'rotrhi3' insns.\n \t(\"*rotrhi3\", \"*rotlhi3\"): New insn pattern for non-const rotatert.\n@@ -476,7 +488,7 @@ Mon Mar  3 19:07:21 CET 2003  Jan Hubicka  <jh@suse.cz>\n 2003-02-28  Joel Sherrill <joel@OARcorp.com>\n \n \tPR 9638/other\n-\t* config/i386/i386.c (DEFAULT_PCC_STRUCT_RETURN): Ensure the \n+\t* config/i386/i386.c (DEFAULT_PCC_STRUCT_RETURN): Ensure the\n \tthis constant defaults to 1.\n \n 2003-02-28  Bob Wilson  <bob.wilson@acm.org>\n@@ -485,7 +497,7 @@ Mon Mar  3 19:07:21 CET 2003  Jan Hubicka  <jh@suse.cz>\n \n 2003-02-28  Richard Earnshaw  <rearnsha@arm.com>\n \n-\t* arm.md (mulhisi3, mulhisi3addsi, mulhidi3adddi): Enable for any \n+\t* arm.md (mulhisi3, mulhisi3addsi, mulhidi3adddi): Enable for any\n \tARMv5e processor, not just for XScale.  Instructions are predicable.\n \t(mulhisi3tb, mulhisi3bt, mulhisi3tt): New patterns for ARMv5e.\n \n@@ -658,7 +670,7 @@ Wed Feb 26 19:46:25 CET 2003  Jan Hubicka  <jh@suse.cz>\n         * config/arm/cirrus.md (\"cirrus_fpu\" attribute): Delete.\n         (\"cirrus_type\" attribute): Delete - use \"type\" instead.\n         (\"cirrus\" attribute): Replace 'no' with 'not' and 'yes' with\n-        'normal'.        \n+        'normal'.\n \n Tue Feb 25 22:46:27 CET 2003  Jan Hubicka  <jh@suse.cz>\n \n@@ -804,7 +816,7 @@ Tue Feb 25 22:46:27 CET 2003  Jan Hubicka  <jh@suse.cz>\n \tentry.\n \t(add_forward_dependence): New function.\n \t(compute_forward_dependences): Use the function.\n-\t\n+\n \t* sched-ebb.c (earliest_block_with_similiar_load): New function.\n \t(add_deps_for_risky_insns): New function.\n \t(schedule_ebb): Call the function.\n@@ -878,12 +890,12 @@ Mon Feb 24 22:08:22 CET 2003  Jan Hubicka  <jh@suse.cz>\n \t* doc/extend.texi (Tru64 Pragmas): Reflect this.\n \n \t* fixinc/inclhack.def (alpha___extern_prefix): Indicate #pragma\n-\textern_prefix support for Tru64 UNIX V5 <sys/stat.h>. \n+\textern_prefix support for Tru64 UNIX V5 <sys/stat.h>.\n \t* fixinc/fixincl.x: Regenerate.\n \t* fixinc/tests/base/sys/stat.h [ALPHA___EXTERN_PREFIX_CHECK]: New\n \ttestcase.\n \tFixes PR c/5059, c/6126, other/9671.\n-\t\n+\n 2003-02-24  Roger Sayle  <roger@eyesopen.com>\n \n \t* gcc.c (do_spec_1) ['{']:  Handle pending argument upon return"}]}