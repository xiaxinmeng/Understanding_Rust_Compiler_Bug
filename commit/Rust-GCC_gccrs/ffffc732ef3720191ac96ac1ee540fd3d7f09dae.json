{"sha": "ffffc732ef3720191ac96ac1ee540fd3d7f09dae", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmZmZmM3MzJlZjM3MjAxOTFhYzk2YWMxZWU1NDBmZDNkN2YwOWRhZQ==", "commit": {"author": {"name": "R\u00fcdiger Sonderfeld", "email": "ruediger@c-plusplus.de", "date": "2014-10-14T17:01:25Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2014-10-14T17:01:25Z"}, "message": "re PR libstdc++/54354 (TODO extended iomanip manipulators std::get_time and std::put_time (C++11, section 27.7.5))\n\n2014-10-14  R\u00fcdiger Sonderfeld  <ruediger@c-plusplus.de>\n\n\tPR libstdc++/54354\n\t* include/std/iomanip (_Put_time): New struct.\n\t(put_time): New manipulator.\n\t(operator<<): New overloaded function.\n\t* testsuite/27_io/manipulators/extended/put_time/char/1.cc: New.\n\t* testsuite/27_io/manipulators/extended/put_time/char/2.cc: New.\n\t* testsuite/27_io/manipulators/extended/put_time/wchar_t/1.cc: New.\n\t* testsuite/27_io/manipulators/extended/put_time/wchar_t/2.cc: New.\n\nFrom-SVN: r216211", "tree": {"sha": "7d3af76a33f6b9be7b121e185c09306278bb122b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7d3af76a33f6b9be7b121e185c09306278bb122b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ffffc732ef3720191ac96ac1ee540fd3d7f09dae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ffffc732ef3720191ac96ac1ee540fd3d7f09dae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ffffc732ef3720191ac96ac1ee540fd3d7f09dae", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ffffc732ef3720191ac96ac1ee540fd3d7f09dae/comments", "author": {"login": "ruediger", "id": 1803, "node_id": "MDQ6VXNlcjE4MDM=", "avatar_url": "https://avatars.githubusercontent.com/u/1803?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ruediger", "html_url": "https://github.com/ruediger", "followers_url": "https://api.github.com/users/ruediger/followers", "following_url": "https://api.github.com/users/ruediger/following{/other_user}", "gists_url": "https://api.github.com/users/ruediger/gists{/gist_id}", "starred_url": "https://api.github.com/users/ruediger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ruediger/subscriptions", "organizations_url": "https://api.github.com/users/ruediger/orgs", "repos_url": "https://api.github.com/users/ruediger/repos", "events_url": "https://api.github.com/users/ruediger/events{/privacy}", "received_events_url": "https://api.github.com/users/ruediger/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "78bd42c42341f3ef984c585928baf7282c872885", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78bd42c42341f3ef984c585928baf7282c872885", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78bd42c42341f3ef984c585928baf7282c872885"}], "stats": {"total": 248, "additions": 248, "deletions": 0}, "files": [{"sha": "3175c8c508d78fc2fee4032d0b37dee1acbb0e01", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffffc732ef3720191ac96ac1ee540fd3d7f09dae/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffffc732ef3720191ac96ac1ee540fd3d7f09dae/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=ffffc732ef3720191ac96ac1ee540fd3d7f09dae", "patch": "@@ -1,3 +1,14 @@\n+2014-10-14  R\u00fcdiger Sonderfeld  <ruediger@c-plusplus.de>\n+\n+\tPR libstdc++/54354\n+\t* include/std/iomanip (_Put_time): New struct.\n+\t(put_time): New manipulator.\n+\t(operator<<): New overloaded function.\n+\t* testsuite/27_io/manipulators/extended/put_time/char/1.cc: New.\n+\t* testsuite/27_io/manipulators/extended/put_time/char/2.cc: New.\n+\t* testsuite/27_io/manipulators/extended/put_time/wchar_t/1.cc: New.\n+\t* testsuite/27_io/manipulators/extended/put_time/wchar_t/2.cc: New.\n+\n 2014-10-14  Kai Tietz  <ktietz@redhat.com>\n \n \tPR libstdc++/57440"}, {"sha": "fce74c95f01d79b52d8d333c3e5803c7e26909b7", "filename": "libstdc++-v3/include/std/iomanip", "status": "modified", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffffc732ef3720191ac96ac1ee540fd3d7f09dae/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fiomanip", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffffc732ef3720191ac96ac1ee540fd3d7f09dae/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fiomanip", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fiomanip?ref=ffffc732ef3720191ac96ac1ee540fd3d7f09dae", "patch": "@@ -337,6 +337,61 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       return __os; \n     }\n \n+  template<typename _CharT>\n+    struct _Put_time\n+    {\n+      const std::tm* _M_tmb;\n+      const _CharT* _M_fmt;\n+    };\n+\n+  /**\n+   *  @brief  Extended manipulator for formatting time.\n+   *\n+   *  This manipulator uses time_put::put to format time.\n+   *  [ext.manip]\n+   *\n+   *  @param __tmb  struct tm time data to format.\n+   *  @param __fmt  format string.\n+   */\n+  template<typename _CharT>\n+    inline _Put_time<_CharT>\n+    put_time(const std::tm* __tmb, const _CharT* __fmt)\n+    { return { __tmb, __fmt }; }\n+\n+  template<typename _CharT, typename _Traits>\n+    basic_ostream<_CharT, _Traits>&\n+    operator<<(basic_ostream<_CharT, _Traits>& __os, _Put_time<_CharT> __f)\n+    {\n+      typename basic_ostream<_CharT, _Traits>::sentry __cerb(__os);\n+      if (__cerb)\n+        {\n+          ios_base::iostate __err = ios_base::goodbit;\n+          __try\n+            {\n+              typedef ostreambuf_iterator<_CharT, _Traits>   _Iter;\n+              typedef time_put<_CharT, _Iter>                _TimePut;\n+\n+              const _CharT* const __fmt_end = __f._M_fmt +\n+                _Traits::length(__f._M_fmt);\n+\n+              const _TimePut& __mp = use_facet<_TimePut>(__os.getloc());\n+              if (__mp.put(_Iter(__os.rdbuf()), __os, __os.fill(),\n+                           __f._M_tmb, __f._M_fmt, __fmt_end).failed())\n+                __err |= ios_base::badbit;\n+            }\n+          __catch(__cxxabiv1::__forced_unwind&)\n+            {\n+              __os._M_setstate(ios_base::badbit);\n+              __throw_exception_again;\n+            }\n+          __catch(...)\n+            { __os._M_setstate(ios_base::badbit); }\n+          if (__err)\n+            __os.setstate(__err);\n+        }\n+      return __os;\n+    }\n+\n #if __cplusplus > 201103L\n \n #define __cpp_lib_quoted_string_io 201304"}, {"sha": "76e64ea08433340450804021d97520c60674c40d", "filename": "libstdc++-v3/testsuite/27_io/manipulators/extended/put_time/char/1.cc", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffffc732ef3720191ac96ac1ee540fd3d7f09dae/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fmanipulators%2Fextended%2Fput_time%2Fchar%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffffc732ef3720191ac96ac1ee540fd3d7f09dae/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fmanipulators%2Fextended%2Fput_time%2Fchar%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fmanipulators%2Fextended%2Fput_time%2Fchar%2F1.cc?ref=ffffc732ef3720191ac96ac1ee540fd3d7f09dae", "patch": "@@ -0,0 +1,44 @@\n+// { dg-options \" -std=gnu++11 \" }\n+\n+// 2014-04-14 R\u00fcdiger Sonderfeld  <ruediger@c-plusplus.de>\n+\n+// Copyright (C) 2014 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// 27.7.5. (C++11) Extended manipulators [ext.manip]: put_time\n+\n+#include <locale>\n+#include <sstream>\n+#include <iomanip>\n+#include <testsuite_hooks.h>\n+\n+void test01()\n+{\n+  using namespace std;\n+  bool test __attribute__((unused)) = true;\n+  locale loc_c = locale::classic();\n+  ostringstream oss;\n+  oss.imbue(loc_c);\n+  const tm time1 = __gnu_test::test_tm(0, 0, 12, 4, 3, 71, 0, 93, 0);\n+  oss << put_time(&time1, \"%a %Y\");\n+  VERIFY(oss.str() == \"Sun 1971\");\n+}\n+\n+int main()\n+{\n+  test01();\n+}"}, {"sha": "bc3a387a06b3f51cce4edb6d1098e89c0b5d7274", "filename": "libstdc++-v3/testsuite/27_io/manipulators/extended/put_time/char/2.cc", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffffc732ef3720191ac96ac1ee540fd3d7f09dae/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fmanipulators%2Fextended%2Fput_time%2Fchar%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffffc732ef3720191ac96ac1ee540fd3d7f09dae/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fmanipulators%2Fextended%2Fput_time%2Fchar%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fmanipulators%2Fextended%2Fput_time%2Fchar%2F2.cc?ref=ffffc732ef3720191ac96ac1ee540fd3d7f09dae", "patch": "@@ -0,0 +1,47 @@\n+// { dg-require-namedlocale \"de_DE.utf8\" }\n+// { dg-options \" -std=gnu++11 \" }\n+\n+// 2014-04-14 R\u00fcdiger Sonderfeld  <ruediger@c-plusplus.de>\n+\n+// Copyright (C) 2014 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// 27.7.5. (C++11) Extended manipulators [ext.manip]: put_time\n+\n+#include <locale>\n+#include <sstream>\n+#include <iomanip>\n+#include <testsuite_hooks.h>\n+\n+void test01()\n+{\n+  using namespace std;\n+  bool test __attribute__((unused)) = true;\n+  locale loc_c = locale::classic();\n+  locale loc_de = locale(\"de_DE.utf8\");\n+  VERIFY( loc_de != loc_c );\n+  ostringstream oss;\n+  oss.imbue(loc_de);\n+  const tm time1 = __gnu_test::test_tm(0, 0, 12, 4, 3, 71, 0, 93, 0);\n+  oss << put_time(&time1, \"%A %Y\");\n+  VERIFY(oss.str() == \"Sonntag 1971\");\n+}\n+\n+int main()\n+{\n+  test01();\n+}"}, {"sha": "3b5d5fa10db5bb49327a997aa10129da97b21526", "filename": "libstdc++-v3/testsuite/27_io/manipulators/extended/put_time/wchar_t/1.cc", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffffc732ef3720191ac96ac1ee540fd3d7f09dae/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fmanipulators%2Fextended%2Fput_time%2Fwchar_t%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffffc732ef3720191ac96ac1ee540fd3d7f09dae/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fmanipulators%2Fextended%2Fput_time%2Fwchar_t%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fmanipulators%2Fextended%2Fput_time%2Fwchar_t%2F1.cc?ref=ffffc732ef3720191ac96ac1ee540fd3d7f09dae", "patch": "@@ -0,0 +1,44 @@\n+// { dg-options \" -std=gnu++11 \" }\n+\n+// 2014-04-14 R\u00fcdiger Sonderfeld  <ruediger@c-plusplus.de>\n+\n+// Copyright (C) 2014 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// 27.7.5. (C++11) Extended manipulators [ext.manip]: put_time\n+\n+#include <locale>\n+#include <sstream>\n+#include <iomanip>\n+#include <testsuite_hooks.h>\n+\n+void test01()\n+{\n+  using namespace std;\n+  bool test __attribute__((unused)) = true;\n+  locale loc_c = locale::classic();\n+  wostringstream oss;\n+  oss.imbue(loc_c);\n+  const tm time1 = __gnu_test::test_tm(0, 0, 12, 4, 3, 71, 0, 93, 0);\n+  oss << put_time(&time1, L\"%a %Y\");\n+  VERIFY(oss.str() == L\"Sun 1971\");\n+}\n+\n+int main()\n+{\n+  test01();\n+}"}, {"sha": "7dc90d052481144e0468d512f3b2066de3473fe4", "filename": "libstdc++-v3/testsuite/27_io/manipulators/extended/put_time/wchar_t/2.cc", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffffc732ef3720191ac96ac1ee540fd3d7f09dae/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fmanipulators%2Fextended%2Fput_time%2Fwchar_t%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffffc732ef3720191ac96ac1ee540fd3d7f09dae/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fmanipulators%2Fextended%2Fput_time%2Fwchar_t%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fmanipulators%2Fextended%2Fput_time%2Fwchar_t%2F2.cc?ref=ffffc732ef3720191ac96ac1ee540fd3d7f09dae", "patch": "@@ -0,0 +1,47 @@\n+// { dg-require-namedlocale \"de_DE.utf8\" }\n+// { dg-options \" -std=gnu++11 \" }\n+\n+// 2014-04-14 R\u00fcdiger Sonderfeld  <ruediger@c-plusplus.de>\n+\n+// Copyright (C) 2014 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// 27.7.5. (C++11) Extended manipulators [ext.manip]: put_time\n+\n+#include <locale>\n+#include <sstream>\n+#include <iomanip>\n+#include <testsuite_hooks.h>\n+\n+void test01()\n+{\n+  using namespace std;\n+  bool test __attribute__((unused)) = true;\n+  locale loc_c = locale::classic();\n+  locale loc_de = locale(\"de_DE.utf8\");\n+  VERIFY( loc_de != loc_c );\n+  wostringstream oss;\n+  oss.imbue(loc_de);\n+  const tm time1 = __gnu_test::test_tm(0, 0, 12, 4, 3, 71, 0, 93, 0);\n+  oss << put_time(&time1, L\"%A %Y\");\n+  VERIFY(oss.str() == L\"Sonntag 1971\");\n+}\n+\n+int main()\n+{\n+  test01();\n+}"}]}