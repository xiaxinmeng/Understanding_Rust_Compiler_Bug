{"sha": "cd3fe55a185181aeb1a6b626cfbaa6e14839b7e9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2QzZmU1NWExODUxODFhZWIxYTZiNjI2Y2ZiYWE2ZTE0ODM5YjdlOQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2016-12-06T19:56:03Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2016-12-06T19:56:03Z"}, "message": "predicates.md (general_gr_operand): New predicate.\n\n\t* config/i386/predicates.md (general_gr_operand): New predicate.\n\t* config/i386/i386.md (TImode and DImode push_operand splitter):\n\tUse general_gr_operand.  Macroize using DWI mode macro.\n\t(TImode and DImode nonimmediate_operand splitter): Use\n\tnonimmediate_gr_operand and general_gr_operand.  Macroize using\n\tDWI mode macro.\n\t(TF/XF/DFmode push_operand splitter): Use general_gr_operand.\n\t(TFmode nonimmediate_operand splitter): Use nonimmediate_gr_operand\n\tand general_gr_operand.\n\t(XFmode nonimmediate_operand splitter): Ditto.\n\t(DFmode nonimmediate_operand splitter): Ditto.\n\t* config/i386/mmx.md (MMXMODE nonimmediate_operand splitter): Ditto.\n\nFrom-SVN: r243315", "tree": {"sha": "e5d7ada93d3369d411c35b277527a654890ec9da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e5d7ada93d3369d411c35b277527a654890ec9da"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cd3fe55a185181aeb1a6b626cfbaa6e14839b7e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd3fe55a185181aeb1a6b626cfbaa6e14839b7e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd3fe55a185181aeb1a6b626cfbaa6e14839b7e9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd3fe55a185181aeb1a6b626cfbaa6e14839b7e9/comments", "author": null, "committer": null, "parents": [{"sha": "f68963c09232f56ee793ab12b902f16c45af0214", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f68963c09232f56ee793ab12b902f16c45af0214", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f68963c09232f56ee793ab12b902f16c45af0214"}], "stats": {"total": 93, "additions": 42, "deletions": 51}, "files": [{"sha": "49dc64634969bd4bfb1ea9da4acc752545672652", "filename": "gcc/ChangeLog", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd3fe55a185181aeb1a6b626cfbaa6e14839b7e9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd3fe55a185181aeb1a6b626cfbaa6e14839b7e9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cd3fe55a185181aeb1a6b626cfbaa6e14839b7e9", "patch": "@@ -1,3 +1,18 @@\n+2016-12-06  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/predicates.md (general_gr_operand): New predicate.\n+\t* config/i386/i386.md (TImode and DImode push_operand splitter):\n+\tUse general_gr_operand.  Macroize using DWI mode macro.\n+\t(TImode and DImode nonimmediate_operand splitter): Use\n+\tnonimmediate_gr_operand and general_gr_operand.  Macroize using\n+\tDWI mode macro.\n+\t(TF/XF/DFmode push_operand splitter): Use general_gr_operand.\n+\t(TFmode nonimmediate_operand splitter): Use nonimmediate_gr_operand\n+\tand general_gr_operand.\n+\t(XFmode nonimmediate_operand splitter): Ditto.\n+\t(DFmode nonimmediate_operand splitter): Ditto.\n+\t* config/i386/mmx.md (MMXMODE nonimmediate_operand splitter): Ditto.\n+\n 2016-12-06  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \t* config/arm/arm-cores.def (cortex-m23, cortex-m33): Move into\n@@ -138,8 +153,7 @@\n \t* diagnostic.c (diagnostic_check_max_errors): New, broken out of ...\n \t(diagnostic_action_after_output): ... here.\n \t(diagnostic_report_diagnostic): Call it for non-notes.\n-\t* diagnostic.h (struct diagnostic_context): Make max_errors signed\n-\tint.\n+\t* diagnostic.h (struct diagnostic_context): Make max_errors signed int.\n \t(diagnostic_check_max_errors): Declare.\n \n 2016-12-05  Cupertino Miranda  <cmiranda@synopsys.com>"}, {"sha": "f2248a5da952c7b4754a4d3be4af4213a3ba11a5", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 17, "deletions": 44, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd3fe55a185181aeb1a6b626cfbaa6e14839b7e9/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd3fe55a185181aeb1a6b626cfbaa6e14839b7e9/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=cd3fe55a185181aeb1a6b626cfbaa6e14839b7e9", "patch": "@@ -1749,10 +1749,9 @@\n    (set_attr \"mode\" \"<MODE>\")])\n \n (define_split\n-  [(set (match_operand:TI 0 \"push_operand\")\n-        (match_operand:TI 1 \"general_operand\"))]\n-  \"TARGET_64BIT && reload_completed\n-   && !SSE_REG_P (operands[1])\"\n+  [(set (match_operand:DWI 0 \"push_operand\")\n+        (match_operand:DWI 1 \"general_gr_operand\"))]\n+  \"reload_completed\"\n   [(const_int 0)]\n   \"ix86_split_long_move (operands); DONE;\")\n \n@@ -1814,14 +1813,6 @@\n \t\t\t\t\t\t   GEN_INT (4)));\n })\n \n-(define_split\n-  [(set (match_operand:DI 0 \"push_operand\")\n-        (match_operand:DI 1 \"general_operand\"))]\n-  \"!TARGET_64BIT && reload_completed\n-   && !(MMX_REG_P (operands[1]) || SSE_REG_P (operands[1]))\"\n-  [(const_int 0)]\n-  \"ix86_split_long_move (operands); DONE;\")\n-\n (define_insn \"*pushsi2\"\n   [(set (match_operand:SI 0 \"push_operand\" \"=<\")\n \t(match_operand:SI 1 \"general_no_elim_operand\" \"ri*m\"))]\n@@ -2150,14 +2141,6 @@\n \t       ]\n \t       (const_string \"TI\")))])\n \n-(define_split\n-  [(set (match_operand:TI 0 \"nonimmediate_operand\")\n-\t(match_operand:TI 1 \"general_operand\"))]\n-  \"reload_completed\n-   && !SSE_REG_P (operands[0]) && !SSE_REG_P (operands[1])\"\n-  [(const_int 0)]\n-  \"ix86_split_long_move (operands); DONE;\")\n-\n (define_insn \"*movdi_internal\"\n   [(set (match_operand:DI 0 \"nonimmediate_operand\"\n     \"=r  ,o  ,r,r  ,r,m ,*y,*y,?*y,?m,?r ,?*Ym,*v,*v,*v,m ,m,?r ,?r,?*Yi,?*Ym,?*Yi,*k,*k ,*r,*m\")\n@@ -2333,15 +2316,9 @@\n \t   (const_string \"*\")))])\n \n (define_split\n-  [(set (match_operand:DI 0 \"nonimmediate_operand\")\n-        (match_operand:DI 1 \"general_operand\"))]\n-  \"!TARGET_64BIT && reload_completed\n-   && !(MMX_REG_P (operands[0])\n-\t|| SSE_REG_P (operands[0])\n-\t|| MASK_REG_P (operands[0]))\n-   && !(MMX_REG_P (operands[1])\n-\t|| SSE_REG_P (operands[1])\n-\t|| MASK_REG_P (operands[1]))\"\n+  [(set (match_operand:DWI 0 \"nonimmediate_gr_operand\")\n+        (match_operand:DWI 1 \"general_gr_operand\"))]\n+  \"reload_completed\"\n   [(const_int 0)]\n   \"ix86_split_long_move (operands); DONE;\")\n \n@@ -3098,12 +3075,11 @@\n \n (define_split\n   [(set (match_operand 0 \"push_operand\")\n-\t(match_operand 1 \"general_operand\"))]\n+\t(match_operand 1 \"general_gr_operand\"))]\n   \"reload_completed\n    && (GET_MODE (operands[0]) == TFmode\n        || GET_MODE (operands[0]) == XFmode\n-       || GET_MODE (operands[0]) == DFmode)\n-   && !ANY_FP_REG_P (operands[1])\"\n+       || GET_MODE (operands[0]) == DFmode)\"\n   [(const_int 0)]\n   \"ix86_split_long_move (operands); DONE;\")\n \f\n@@ -3197,10 +3173,9 @@\n \t       (const_string \"TI\")))])\n \n (define_split\n-  [(set (match_operand:TF 0 \"nonimmediate_operand\")\n-        (match_operand:TF 1 \"general_operand\"))]\n-  \"reload_completed\n-   && !(ANY_FP_REG_P (operands[0]) || ANY_FP_REG_P (operands[1]))\"\n+  [(set (match_operand:TF 0 \"nonimmediate_gr_operand\")\n+        (match_operand:TF 1 \"general_gr_operand\"))]\n+  \"reload_completed\"\n   [(const_int 0)]\n   \"ix86_split_long_move (operands); DONE;\")\n \n@@ -3271,10 +3246,9 @@\n \t   (const_string \"*\")))])\n    \n (define_split\n-  [(set (match_operand:XF 0 \"nonimmediate_operand\")\n-        (match_operand:XF 1 \"general_operand\"))]\n-  \"reload_completed\n-   && !(ANY_FP_REG_P (operands[0]) || ANY_FP_REG_P (operands[1]))\"\n+  [(set (match_operand:XF 0 \"nonimmediate_gr_operand\")\n+        (match_operand:XF 1 \"general_gr_operand\"))]\n+  \"reload_completed\"\n   [(const_int 0)]\n   \"ix86_split_long_move (operands); DONE;\")\n \n@@ -3474,10 +3448,9 @@\n \t   (const_string \"*\")))])\n \n (define_split\n-  [(set (match_operand:DF 0 \"nonimmediate_operand\")\n-        (match_operand:DF 1 \"general_operand\"))]\n-  \"!TARGET_64BIT && reload_completed\n-   && !(ANY_FP_REG_P (operands[0]) || ANY_FP_REG_P (operands[1]))\"\n+  [(set (match_operand:DF 0 \"nonimmediate_gr_operand\")\n+        (match_operand:DF 1 \"general_gr_operand\"))]\n+  \"!TARGET_64BIT && reload_completed\"\n   [(const_int 0)]\n   \"ix86_split_long_move (operands); DONE;\")\n "}, {"sha": "37e6a28de680fe13303a697ef1b980c2f22f1e8e", "filename": "gcc/config/i386/mmx.md", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd3fe55a185181aeb1a6b626cfbaa6e14839b7e9/gcc%2Fconfig%2Fi386%2Fmmx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd3fe55a185181aeb1a6b626cfbaa6e14839b7e9/gcc%2Fconfig%2Fi386%2Fmmx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fmmx.md?ref=cd3fe55a185181aeb1a6b626cfbaa6e14839b7e9", "patch": "@@ -205,11 +205,9 @@\n \t   (const_string \"DI\")))])\n \n (define_split\n-  [(set (match_operand:MMXMODE 0 \"nonimmediate_operand\")\n-        (match_operand:MMXMODE 1 \"general_operand\"))]\n-  \"!TARGET_64BIT && reload_completed\n-   && !(MMX_REG_P (operands[0]) || SSE_REG_P (operands[0]))\n-   && !(MMX_REG_P (operands[1]) || SSE_REG_P (operands[1]))\"\n+  [(set (match_operand:MMXMODE 0 \"nonimmediate_gr_operand\")\n+        (match_operand:MMXMODE 1 \"general_gr_operand\"))]\n+  \"!TARGET_64BIT && reload_completed\"\n   [(const_int 0)]\n   \"ix86_split_long_move (operands); DONE;\")\n "}, {"sha": "4c45df68a48806912b984d658f396329a0e3421e", "filename": "gcc/config/i386/predicates.md", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd3fe55a185181aeb1a6b626cfbaa6e14839b7e9/gcc%2Fconfig%2Fi386%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd3fe55a185181aeb1a6b626cfbaa6e14839b7e9/gcc%2Fconfig%2Fi386%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fpredicates.md?ref=cd3fe55a185181aeb1a6b626cfbaa6e14839b7e9", "patch": "@@ -38,6 +38,12 @@\n     (match_test \"GENERAL_REGNO_P (REGNO (op))\")\n     (match_operand 0 \"nonimmediate_operand\")))\n \n+;; True if the operand is a general operand with GENERAL class register.\n+(define_predicate \"general_gr_operand\"\n+  (if_then_else (match_code \"reg\")\n+    (match_test \"GENERAL_REGNO_P (REGNO (op))\")\n+    (match_operand 0 \"general_operand\")))\n+\n ;; True if the operand is an MMX register.\n (define_predicate \"mmx_reg_operand\"\n   (and (match_code \"reg\")"}]}