{"sha": "aa2bd2db03ce5bef785823ebca7b97cc2fa7f807", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWEyYmQyZGIwM2NlNWJlZjc4NTgyM2ViY2E3Yjk3Y2MyZmE3ZjgwNw==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2007-05-04T17:42:49Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2007-05-04T17:42:49Z"}, "message": "atexit_arm.cc: New file.\n\n\t* libsupc++/atexit_arm.cc: New file.\n\t* libsupc++/vec.cc (__aeabi_atexit): Remove.\n\t* libsupc++/cxxabi.h (__cxa_atexit): Add exception specification.\n\t* libsupc++/Makefile.am: Add atexit_arm.cc.\n\t* libsupc++/Makefile.in: Regenerated.\n\nFrom-SVN: r124436", "tree": {"sha": "9487e86764e6f3b2948dceab9c0cfd84d34a1a2e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9487e86764e6f3b2948dceab9c0cfd84d34a1a2e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aa2bd2db03ce5bef785823ebca7b97cc2fa7f807", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa2bd2db03ce5bef785823ebca7b97cc2fa7f807", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa2bd2db03ce5bef785823ebca7b97cc2fa7f807", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa2bd2db03ce5bef785823ebca7b97cc2fa7f807/comments", "author": null, "committer": null, "parents": [{"sha": "2420cc4d11918fb283a06f6db8aa5609e928171b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2420cc4d11918fb283a06f6db8aa5609e928171b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2420cc4d11918fb283a06f6db8aa5609e928171b"}], "stats": {"total": 90, "additions": 68, "deletions": 22}, "files": [{"sha": "a1e6e306cdb350f0d1b18bc3b501b5ae9ec37832", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa2bd2db03ce5bef785823ebca7b97cc2fa7f807/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa2bd2db03ce5bef785823ebca7b97cc2fa7f807/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=aa2bd2db03ce5bef785823ebca7b97cc2fa7f807", "patch": "@@ -1,3 +1,11 @@\n+2007-05-04  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* libsupc++/atexit_arm.cc: New file.\n+\t* libsupc++/vec.cc (__aeabi_atexit): Remove.\n+\t* libsupc++/cxxabi.h (__cxa_atexit): Add exception specification.\n+\t* libsupc++/Makefile.am: Add atexit_arm.cc.\n+\t* libsupc++/Makefile.in: Regenerated.\n+\n 2007-05-04  Paolo Carlini  <pcarlini@suse.de>\n \n \t* include/bits/stl_construct.h (_Destroy(_ForwardIterator,"}, {"sha": "7bc48b7c9b4bf4e49be41cb1388ee2ae5b67e618", "filename": "libstdc++-v3/libsupc++/Makefile.am", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa2bd2db03ce5bef785823ebca7b97cc2fa7f807/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa2bd2db03ce5bef785823ebca7b97cc2fa7f807/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.am?ref=aa2bd2db03ce5bef785823ebca7b97cc2fa7f807", "patch": "@@ -42,6 +42,7 @@ endif\n \n sources = \\\n \tarray_type_info.cc \\\n+\tatexit_arm.cc \\\n \tbad_cast.cc \\\n \tbad_typeid.cc \\\n \tclass_type_info.cc \\"}, {"sha": "686312714030e1db271fa71089610e6fe2f93fcd", "filename": "libstdc++-v3/libsupc++/Makefile.in", "status": "modified", "additions": 14, "deletions": 13, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa2bd2db03ce5bef785823ebca7b97cc2fa7f807/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa2bd2db03ce5bef785823ebca7b97cc2fa7f807/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in?ref=aa2bd2db03ce5bef785823ebca7b97cc2fa7f807", "patch": "@@ -69,21 +69,21 @@ am__installdirs = \"$(DESTDIR)$(toolexeclibdir)\" \\\n toolexeclibLTLIBRARIES_INSTALL = $(INSTALL)\n LTLIBRARIES = $(noinst_LTLIBRARIES) $(toolexeclib_LTLIBRARIES)\n libsupc___la_LIBADD =\n-am__libsupc___la_SOURCES_DIST = array_type_info.cc bad_cast.cc \\\n-\tbad_typeid.cc class_type_info.cc del_op.cc del_opnt.cc \\\n-\tdel_opv.cc del_opvnt.cc dyncast.cc eh_alloc.cc eh_arm.cc \\\n-\teh_aux_runtime.cc eh_call.cc eh_catch.cc eh_exception.cc \\\n-\teh_globals.cc eh_personality.cc eh_term_handler.cc \\\n-\teh_terminate.cc eh_throw.cc eh_type.cc eh_unex_handler.cc \\\n-\tenum_type_info.cc function_type_info.cc \\\n+am__libsupc___la_SOURCES_DIST = array_type_info.cc atexit_arm.cc \\\n+\tbad_cast.cc bad_typeid.cc class_type_info.cc del_op.cc \\\n+\tdel_opnt.cc del_opv.cc del_opvnt.cc dyncast.cc eh_alloc.cc \\\n+\teh_arm.cc eh_aux_runtime.cc eh_call.cc eh_catch.cc \\\n+\teh_exception.cc eh_globals.cc eh_personality.cc \\\n+\teh_term_handler.cc eh_terminate.cc eh_throw.cc eh_type.cc \\\n+\teh_unex_handler.cc enum_type_info.cc function_type_info.cc \\\n \tfundamental_type_info.cc guard.cc new_handler.cc new_op.cc \\\n \tnew_opnt.cc new_opv.cc new_opvnt.cc pbase_type_info.cc \\\n \tpmem_type_info.cc pointer_type_info.cc pure.cc \\\n \tsi_class_type_info.cc tinfo.cc tinfo2.cc vec.cc \\\n \tvmi_class_type_info.cc vterminate.cc cp-demangle.c\n-am__objects_1 = array_type_info.lo bad_cast.lo bad_typeid.lo \\\n-\tclass_type_info.lo del_op.lo del_opnt.lo del_opv.lo \\\n-\tdel_opvnt.lo dyncast.lo eh_alloc.lo eh_arm.lo \\\n+am__objects_1 = array_type_info.lo atexit_arm.lo bad_cast.lo \\\n+\tbad_typeid.lo class_type_info.lo del_op.lo del_opnt.lo \\\n+\tdel_opv.lo del_opvnt.lo dyncast.lo eh_alloc.lo eh_arm.lo \\\n \teh_aux_runtime.lo eh_call.lo eh_catch.lo eh_exception.lo \\\n \teh_globals.lo eh_personality.lo eh_term_handler.lo \\\n \teh_terminate.lo eh_throw.lo eh_type.lo eh_unex_handler.lo \\\n@@ -98,9 +98,9 @@ am_libsupc___la_OBJECTS = $(am__objects_1) $(am__objects_2)\n libsupc___la_OBJECTS = $(am_libsupc___la_OBJECTS)\n libsupc__convenience_la_LIBADD =\n am__libsupc__convenience_la_SOURCES_DIST = array_type_info.cc \\\n-\tbad_cast.cc bad_typeid.cc class_type_info.cc del_op.cc \\\n-\tdel_opnt.cc del_opv.cc del_opvnt.cc dyncast.cc eh_alloc.cc \\\n-\teh_arm.cc eh_aux_runtime.cc eh_call.cc eh_catch.cc \\\n+\tatexit_arm.cc bad_cast.cc bad_typeid.cc class_type_info.cc \\\n+\tdel_op.cc del_opnt.cc del_opv.cc del_opvnt.cc dyncast.cc \\\n+\teh_alloc.cc eh_arm.cc eh_aux_runtime.cc eh_call.cc eh_catch.cc \\\n \teh_exception.cc eh_globals.cc eh_personality.cc \\\n \teh_term_handler.cc eh_terminate.cc eh_throw.cc eh_type.cc \\\n \teh_unex_handler.cc enum_type_info.cc function_type_info.cc \\\n@@ -342,6 +342,7 @@ headers = \\\n \n sources = \\\n \tarray_type_info.cc \\\n+\tatexit_arm.cc \\\n \tbad_cast.cc \\\n \tbad_typeid.cc \\\n \tclass_type_info.cc \\"}, {"sha": "fe2143b42b14a3c4095b339d27dcd80297f889a7", "filename": "libstdc++-v3/libsupc++/atexit_arm.cc", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa2bd2db03ce5bef785823ebca7b97cc2fa7f807/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fatexit_arm.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa2bd2db03ce5bef785823ebca7b97cc2fa7f807/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fatexit_arm.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fatexit_arm.cc?ref=aa2bd2db03ce5bef785823ebca7b97cc2fa7f807", "patch": "@@ -0,0 +1,44 @@\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//  \n+// This file is part of GCC.\n+//\n+// GCC is free software; you can redistribute it and/or modify\n+// it under the terms of the GNU General Public License as published by\n+// the Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// GCC is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License\n+// along with GCC; see the file COPYING.  If not, write to\n+// the Free Software Foundation, 51 Franklin Street, Fifth Floor,\n+// Boston, MA 02110-1301, USA. \n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <cxxabi.h>\n+\n+#if defined(__arm__) && defined(__ARM_EABI__)\n+\n+namespace __aeabiv1\n+{\n+  extern \"C\" int\n+  __aeabi_atexit (void *object, \n+\t\t  void (*destructor) (void *),\n+\t\t  void *dso_handle) throw ()\n+  {\n+    return abi::__cxa_atexit(destructor, object, dso_handle);\n+  }\n+} // namespace __aeabiv1\n+\n+#endif // defined(__arm__) && defined(__ARM_EABI__)"}, {"sha": "fb082d32ac2d8809c22f8592f165f05af9c6f62e", "filename": "libstdc++-v3/libsupc++/cxxabi.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa2bd2db03ce5bef785823ebca7b97cc2fa7f807/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fcxxabi.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa2bd2db03ce5bef785823ebca7b97cc2fa7f807/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fcxxabi.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fcxxabi.h?ref=aa2bd2db03ce5bef785823ebca7b97cc2fa7f807", "patch": "@@ -136,7 +136,7 @@ namespace __cxxabiv1\n \n   // DSO destruction.\n   int\n-  __cxa_atexit(void (*)(void*), void*, void*);\n+  __cxa_atexit(void (*)(void*), void*, void*) throw ();\n \n   int\n   __cxa_finalize(void*);"}, {"sha": "67caec866274ebcde5ff53a6509d0243fbefc3c1", "filename": "libstdc++-v3/libsupc++/vec.cc", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa2bd2db03ce5bef785823ebca7b97cc2fa7f807/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fvec.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa2bd2db03ce5bef785823ebca7b97cc2fa7f807/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fvec.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fvec.cc?ref=aa2bd2db03ce5bef785823ebca7b97cc2fa7f807", "patch": "@@ -499,14 +499,6 @@ namespace __aeabiv1\n \t\t\t    2 * sizeof (std::size_t),\n \t\t\t    /*destructor=*/NULL, dealloc);\n   }\n-  \n-  extern \"C\" int\n-  __aeabi_atexit (void *object, \n-\t\t  void (*destructor) (void *),\n-\t\t  void *dso_handle)\n-  {\n-    return abi::__cxa_atexit(destructor, object, dso_handle);\n-  }\n } // namespace __aeabiv1\n \n #endif // defined(__arm__) && defined(__ARM_EABI__)"}]}