{"sha": "29e5e2f9e2b920c29711785963895b755e930035", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjllNWUyZjllMmI5MjBjMjk3MTE3ODU5NjM4OTViNzU1ZTkzMDAzNQ==", "commit": {"author": {"name": "Charles Baylis", "email": "charles.baylis@linaro.org", "date": "2014-10-24T15:00:20Z"}, "committer": {"name": "Charles Baylis", "email": "cbaylis@gcc.gnu.org", "date": "2014-10-24T15:00:20Z"}, "message": "[PATCH 2/2] [AARCH64,NEON] Convert arm_neon.h to use new builtins for vld[234](q?)_lane_*\n\n\n2014-10-24  Charles Baylis  <charles.baylis@linaro.org>\n\n\t* config/aarch64/arm_neon.h (__LD2_LANE_FUNC): Rewrite using builtins,\n\tupdate uses to use new macro arguments.\n\t(__LD3_LANE_FUNC): Likewise.\n\t(__LD4_LANE_FUNC): Likewise.\n\nFrom-SVN: r216672", "tree": {"sha": "6b309ce67ac16cc127906e1011def83d8a6a6223", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6b309ce67ac16cc127906e1011def83d8a6a6223"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/29e5e2f9e2b920c29711785963895b755e930035", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29e5e2f9e2b920c29711785963895b755e930035", "html_url": "https://github.com/Rust-GCC/gccrs/commit/29e5e2f9e2b920c29711785963895b755e930035", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29e5e2f9e2b920c29711785963895b755e930035/comments", "author": null, "committer": null, "parents": [{"sha": "3ec1be97aca4a9707c6a368b406353ac49e494cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ec1be97aca4a9707c6a368b406353ac49e494cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ec1be97aca4a9707c6a368b406353ac49e494cc"}], "stats": {"total": 413, "additions": 288, "deletions": 125}, "files": [{"sha": "3a48bb131263585d6933f97e4d4b3cbf1d265e60", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29e5e2f9e2b920c29711785963895b755e930035/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29e5e2f9e2b920c29711785963895b755e930035/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=29e5e2f9e2b920c29711785963895b755e930035", "patch": "@@ -1,3 +1,10 @@\n+2014-10-24  Charles Baylis  <charles.baylis@linaro.org>\n+\n+\t* config/aarch64/arm_neon.h (__LD2_LANE_FUNC): Rewrite using builtins,\n+\tupdate uses to use new macro arguments.\n+\t(__LD3_LANE_FUNC): Likewise.\n+\t(__LD4_LANE_FUNC): Likewise.\n+\n 2014-10-24  Charles Baylis  <charles.baylis@linaro.org>\n \t* config/aarch64/aarch64-builtins.c\n \t(aarch64_types_loadstruct_lane_qualifiers): Define."}, {"sha": "9eb04c4881a749e7e357f7731224fa482a249239", "filename": "gcc/config/aarch64/arm_neon.h", "status": "modified", "additions": 281, "deletions": 125, "changes": 406, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29e5e2f9e2b920c29711785963895b755e930035/gcc%2Fconfig%2Faarch64%2Farm_neon.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29e5e2f9e2b920c29711785963895b755e930035/gcc%2Fconfig%2Faarch64%2Farm_neon.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Farm_neon.h?ref=29e5e2f9e2b920c29711785963895b755e930035", "patch": "@@ -11765,131 +11765,6 @@ __STRUCTN (poly, 8, 4)\n __STRUCTN (float, 64, 4)\n #undef __STRUCTN\n \n-#define __LD2_LANE_FUNC(rettype, ptrtype, regsuffix,\t\t\t\\\n-\t\t\tlnsuffix, funcsuffix, Q)\t\t\t\\\n-  __extension__ static __inline rettype\t\t\t\t\t\\\n-  __attribute__ ((__always_inline__))\t\t\t\t\t\\\n-  vld2 ## Q ## _lane_ ## funcsuffix (const ptrtype *ptr,\t\t\\\n-\t\t\t\t     rettype b, const int c)\t\t\\\n-  {\t\t\t\t\t\t\t\t\t\\\n-    rettype result;\t\t\t\t\t\t\t\\\n-    __asm__ (\"ld1 {v16.\" #regsuffix \", v17.\" #regsuffix \"}, %1\\n\\t\"\t\\\n-\t     \"ld2 {v16.\" #lnsuffix \", v17.\" #lnsuffix \"}[%3], %2\\n\\t\"\t\\\n-\t     \"st1 {v16.\" #regsuffix \", v17.\" #regsuffix \"}, %0\\n\\t\"\t\\\n-\t     : \"=Q\"(result)\t\t\t\t\t\t\\\n-\t     : \"Q\"(b), \"Q\"(*(const rettype *)ptr), \"i\"(c)\t\t\\\n-\t     : \"memory\", \"v16\", \"v17\");\t\t\t\t\t\\\n-    return result;\t\t\t\t\t\t\t\\\n-  }\n-\n-__LD2_LANE_FUNC (int8x8x2_t, uint8_t, 8b, b, s8,)\n-__LD2_LANE_FUNC (float32x2x2_t, float32_t, 2s, s, f32,)\n-__LD2_LANE_FUNC (float64x1x2_t, float64_t, 1d, d, f64,)\n-__LD2_LANE_FUNC (poly8x8x2_t, poly8_t, 8b, b, p8,)\n-__LD2_LANE_FUNC (poly16x4x2_t, poly16_t, 4h, h, p16,)\n-__LD2_LANE_FUNC (int16x4x2_t, int16_t, 4h, h, s16,)\n-__LD2_LANE_FUNC (int32x2x2_t, int32_t, 2s, s, s32,)\n-__LD2_LANE_FUNC (int64x1x2_t, int64_t, 1d, d, s64,)\n-__LD2_LANE_FUNC (uint8x8x2_t, uint8_t, 8b, b, u8,)\n-__LD2_LANE_FUNC (uint16x4x2_t, uint16_t, 4h, h, u16,)\n-__LD2_LANE_FUNC (uint32x2x2_t, uint32_t, 2s, s, u32,)\n-__LD2_LANE_FUNC (uint64x1x2_t, uint64_t, 1d, d, u64,)\n-__LD2_LANE_FUNC (float32x4x2_t, float32_t, 4s, s, f32, q)\n-__LD2_LANE_FUNC (float64x2x2_t, float64_t, 2d, d, f64, q)\n-__LD2_LANE_FUNC (poly8x16x2_t, poly8_t, 16b, b, p8, q)\n-__LD2_LANE_FUNC (poly16x8x2_t, poly16_t, 8h, h, p16, q)\n-__LD2_LANE_FUNC (int8x16x2_t, int8_t, 16b, b, s8, q)\n-__LD2_LANE_FUNC (int16x8x2_t, int16_t, 8h, h, s16, q)\n-__LD2_LANE_FUNC (int32x4x2_t, int32_t, 4s, s, s32, q)\n-__LD2_LANE_FUNC (int64x2x2_t, int64_t, 2d, d, s64, q)\n-__LD2_LANE_FUNC (uint8x16x2_t, uint8_t, 16b, b, u8, q)\n-__LD2_LANE_FUNC (uint16x8x2_t, uint16_t, 8h, h, u16, q)\n-__LD2_LANE_FUNC (uint32x4x2_t, uint32_t, 4s, s, u32, q)\n-__LD2_LANE_FUNC (uint64x2x2_t, uint64_t, 2d, d, u64, q)\n-\n-#define __LD3_LANE_FUNC(rettype, ptrtype, regsuffix,\t\t\t\\\n-\t\t\tlnsuffix, funcsuffix, Q)\t\t\t\\\n-  __extension__ static __inline rettype\t\t\t\t\t\\\n-  __attribute__ ((__always_inline__))\t\t\t\t\t\\\n-  vld3 ## Q ## _lane_ ## funcsuffix (const ptrtype *ptr,\t\t\\\n-\t\t\t\t     rettype b, const int c)\t\t\\\n-  {\t\t\t\t\t\t\t\t\t\\\n-    rettype result;\t\t\t\t\t\t\t\\\n-    __asm__ (\"ld1 {v16.\" #regsuffix \" - v18.\" #regsuffix \"}, %1\\n\\t\"\t\\\n-\t     \"ld3 {v16.\" #lnsuffix \" - v18.\" #lnsuffix \"}[%3], %2\\n\\t\"\t\\\n-\t     \"st1 {v16.\" #regsuffix \" - v18.\" #regsuffix \"}, %0\\n\\t\"\t\\\n-\t     : \"=Q\"(result)\t\t\t\t\t\t\\\n-\t     : \"Q\"(b), \"Q\"(*(const rettype *)ptr), \"i\"(c)\t\t\\\n-\t     : \"memory\", \"v16\", \"v17\", \"v18\");\t\t\t\t\\\n-    return result;\t\t\t\t\t\t\t\\\n-  }\n-\n-__LD3_LANE_FUNC (int8x8x3_t, uint8_t, 8b, b, s8,)\n-__LD3_LANE_FUNC (float32x2x3_t, float32_t, 2s, s, f32,)\n-__LD3_LANE_FUNC (float64x1x3_t, float64_t, 1d, d, f64,)\n-__LD3_LANE_FUNC (poly8x8x3_t, poly8_t, 8b, b, p8,)\n-__LD3_LANE_FUNC (poly16x4x3_t, poly16_t, 4h, h, p16,)\n-__LD3_LANE_FUNC (int16x4x3_t, int16_t, 4h, h, s16,)\n-__LD3_LANE_FUNC (int32x2x3_t, int32_t, 2s, s, s32,)\n-__LD3_LANE_FUNC (int64x1x3_t, int64_t, 1d, d, s64,)\n-__LD3_LANE_FUNC (uint8x8x3_t, uint8_t, 8b, b, u8,)\n-__LD3_LANE_FUNC (uint16x4x3_t, uint16_t, 4h, h, u16,)\n-__LD3_LANE_FUNC (uint32x2x3_t, uint32_t, 2s, s, u32,)\n-__LD3_LANE_FUNC (uint64x1x3_t, uint64_t, 1d, d, u64,)\n-__LD3_LANE_FUNC (float32x4x3_t, float32_t, 4s, s, f32, q)\n-__LD3_LANE_FUNC (float64x2x3_t, float64_t, 2d, d, f64, q)\n-__LD3_LANE_FUNC (poly8x16x3_t, poly8_t, 16b, b, p8, q)\n-__LD3_LANE_FUNC (poly16x8x3_t, poly16_t, 8h, h, p16, q)\n-__LD3_LANE_FUNC (int8x16x3_t, int8_t, 16b, b, s8, q)\n-__LD3_LANE_FUNC (int16x8x3_t, int16_t, 8h, h, s16, q)\n-__LD3_LANE_FUNC (int32x4x3_t, int32_t, 4s, s, s32, q)\n-__LD3_LANE_FUNC (int64x2x3_t, int64_t, 2d, d, s64, q)\n-__LD3_LANE_FUNC (uint8x16x3_t, uint8_t, 16b, b, u8, q)\n-__LD3_LANE_FUNC (uint16x8x3_t, uint16_t, 8h, h, u16, q)\n-__LD3_LANE_FUNC (uint32x4x3_t, uint32_t, 4s, s, u32, q)\n-__LD3_LANE_FUNC (uint64x2x3_t, uint64_t, 2d, d, u64, q)\n-\n-#define __LD4_LANE_FUNC(rettype, ptrtype, regsuffix,\t\t\t\\\n-\t\t\tlnsuffix, funcsuffix, Q)\t\t\t\\\n-  __extension__ static __inline rettype\t\t\t\t\t\\\n-  __attribute__ ((__always_inline__))\t\t\t\t\t\\\n-  vld4 ## Q ## _lane_ ## funcsuffix (const ptrtype *ptr,\t\t\\\n-\t\t\t\t     rettype b, const int c)\t\t\\\n-  {\t\t\t\t\t\t\t\t\t\\\n-    rettype result;\t\t\t\t\t\t\t\\\n-    __asm__ (\"ld1 {v16.\" #regsuffix \" - v19.\" #regsuffix \"}, %1\\n\\t\"\t\\\n-\t     \"ld4 {v16.\" #lnsuffix \" - v19.\" #lnsuffix \"}[%3], %2\\n\\t\"\t\\\n-\t     \"st1 {v16.\" #regsuffix \" - v19.\" #regsuffix \"}, %0\\n\\t\"\t\\\n-\t     : \"=Q\"(result)\t\t\t\t\t\t\\\n-\t     : \"Q\"(b), \"Q\"(*(const rettype *)ptr), \"i\"(c)\t\t\\\n-\t     : \"memory\", \"v16\", \"v17\", \"v18\", \"v19\");\t\t\t\\\n-    return result;\t\t\t\t\t\t\t\\\n-  }\n-\n-__LD4_LANE_FUNC (int8x8x4_t, uint8_t, 8b, b, s8,)\n-__LD4_LANE_FUNC (float32x2x4_t, float32_t, 2s, s, f32,)\n-__LD4_LANE_FUNC (float64x1x4_t, float64_t, 1d, d, f64,)\n-__LD4_LANE_FUNC (poly8x8x4_t, poly8_t, 8b, b, p8,)\n-__LD4_LANE_FUNC (poly16x4x4_t, poly16_t, 4h, h, p16,)\n-__LD4_LANE_FUNC (int16x4x4_t, int16_t, 4h, h, s16,)\n-__LD4_LANE_FUNC (int32x2x4_t, int32_t, 2s, s, s32,)\n-__LD4_LANE_FUNC (int64x1x4_t, int64_t, 1d, d, s64,)\n-__LD4_LANE_FUNC (uint8x8x4_t, uint8_t, 8b, b, u8,)\n-__LD4_LANE_FUNC (uint16x4x4_t, uint16_t, 4h, h, u16,)\n-__LD4_LANE_FUNC (uint32x2x4_t, uint32_t, 2s, s, u32,)\n-__LD4_LANE_FUNC (uint64x1x4_t, uint64_t, 1d, d, u64,)\n-__LD4_LANE_FUNC (float32x4x4_t, float32_t, 4s, s, f32, q)\n-__LD4_LANE_FUNC (float64x2x4_t, float64_t, 2d, d, f64, q)\n-__LD4_LANE_FUNC (poly8x16x4_t, poly8_t, 16b, b, p8, q)\n-__LD4_LANE_FUNC (poly16x8x4_t, poly16_t, 8h, h, p16, q)\n-__LD4_LANE_FUNC (int8x16x4_t, int8_t, 16b, b, s8, q)\n-__LD4_LANE_FUNC (int16x8x4_t, int16_t, 8h, h, s16, q)\n-__LD4_LANE_FUNC (int32x4x4_t, int32_t, 4s, s, s32, q)\n-__LD4_LANE_FUNC (int64x2x4_t, int64_t, 2d, d, s64, q)\n-__LD4_LANE_FUNC (uint8x16x4_t, uint8_t, 16b, b, u8, q)\n-__LD4_LANE_FUNC (uint16x8x4_t, uint16_t, 8h, h, u16, q)\n-__LD4_LANE_FUNC (uint32x4x4_t, uint32_t, 4s, s, u32, q)\n-__LD4_LANE_FUNC (uint64x2x4_t, uint64_t, 2d, d, u64, q)\n \n #define __ST2_LANE_FUNC(intype, largetype, ptrtype,\t\t\t     \\\n \t\t\tmode, ptr_mode, funcsuffix, signedtype)\t\t     \\\n@@ -18329,6 +18204,287 @@ vld4q_dup_f64 (const float64_t * __a)\n   return ret;\n }\n \n+/* vld2_lane */\n+\n+#define __LD2_LANE_FUNC(intype, vectype, largetype, ptrtype,\t\t   \\\n+\t\t\t mode, ptrmode, funcsuffix, signedtype)\t\t   \\\n+__extension__ static __inline intype __attribute__ ((__always_inline__))   \\\n+vld2_lane_##funcsuffix (const ptrtype * __ptr, intype __b, const int __c)  \\\n+{\t\t\t\t\t\t\t\t\t   \\\n+  __builtin_aarch64_simd_oi __o;\t\t\t\t\t   \\\n+  largetype __temp;\t\t\t\t\t\t\t   \\\n+  __temp.val[0] =\t\t\t\t\t\t\t   \\\n+    vcombine_##funcsuffix (__b.val[0], vcreate_##funcsuffix (0));\t   \\\n+  __temp.val[1] =\t\t\t\t\t\t\t   \\\n+    vcombine_##funcsuffix (__b.val[1], vcreate_##funcsuffix (0));\t   \\\n+  __o = __builtin_aarch64_set_qregoi##mode (__o,\t\t\t   \\\n+\t\t\t\t\t   (signedtype) __temp.val[0],\t   \\\n+\t\t\t\t\t   0);\t\t\t\t   \\\n+  __o = __builtin_aarch64_set_qregoi##mode (__o,\t\t\t   \\\n+\t\t\t\t\t   (signedtype) __temp.val[1],\t   \\\n+\t\t\t\t\t   1);\t\t\t\t   \\\n+  __o =\t__builtin_aarch64_ld2_lane##mode (\t\t\t\t   \\\n+\t  (__builtin_aarch64_simd_##ptrmode *) __ptr, __o, __c);\t   \\\n+  __b.val[0] = (vectype) __builtin_aarch64_get_dregoidi (__o, 0);\t   \\\n+  __b.val[1] = (vectype) __builtin_aarch64_get_dregoidi (__o, 1);\t   \\\n+  return __b;\t\t\t\t\t\t\t\t   \\\n+}\n+\n+__LD2_LANE_FUNC (float32x2x2_t, float32x2_t, float32x4x2_t, float32_t, v4sf,\n+\t\t sf, f32, float32x4_t)\n+__LD2_LANE_FUNC (float64x1x2_t, float64x1_t, float64x2x2_t, float64_t, v2df,\n+\t\t df, f64, float64x2_t)\n+__LD2_LANE_FUNC (poly8x8x2_t, poly8x8_t, poly8x16x2_t, poly8_t, v16qi, qi, p8,\n+\t\t int8x16_t)\n+__LD2_LANE_FUNC (poly16x4x2_t, poly16x4_t, poly16x8x2_t, poly16_t, v8hi, hi,\n+\t\t p16, int16x8_t)\n+__LD2_LANE_FUNC (int8x8x2_t, int8x8_t, int8x16x2_t, int8_t, v16qi, qi, s8,\n+\t\t int8x16_t)\n+__LD2_LANE_FUNC (int16x4x2_t, int16x4_t, int16x8x2_t, int16_t, v8hi, hi, s16,\n+\t\t int16x8_t)\n+__LD2_LANE_FUNC (int32x2x2_t, int32x2_t, int32x4x2_t, int32_t, v4si, si, s32,\n+\t\t int32x4_t)\n+__LD2_LANE_FUNC (int64x1x2_t, int64x1_t, int64x2x2_t, int64_t, v2di, di, s64,\n+\t\t int64x2_t)\n+__LD2_LANE_FUNC (uint8x8x2_t, uint8x8_t, uint8x16x2_t, uint8_t, v16qi, qi, u8,\n+\t\t int8x16_t)\n+__LD2_LANE_FUNC (uint16x4x2_t, uint16x4_t, uint16x8x2_t, uint16_t, v8hi, hi,\n+\t\t u16, int16x8_t)\n+__LD2_LANE_FUNC (uint32x2x2_t, uint32x2_t, uint32x4x2_t, uint32_t, v4si, si,\n+\t\t u32, int32x4_t)\n+__LD2_LANE_FUNC (uint64x1x2_t, uint64x1_t, uint64x2x2_t, uint64_t, v2di, di,\n+\t\t u64, int64x2_t)\n+\n+#undef __LD2_LANE_FUNC\n+\n+/* vld2q_lane */\n+\n+#define __LD2_LANE_FUNC(intype, vtype, ptrtype, mode, ptrmode, funcsuffix) \\\n+__extension__ static __inline intype __attribute__ ((__always_inline__))   \\\n+vld2q_lane_##funcsuffix (const ptrtype * __ptr, intype __b, const int __c) \\\n+{\t\t\t\t\t\t\t\t\t   \\\n+  __builtin_aarch64_simd_oi __o;\t\t\t\t\t   \\\n+  intype ret;\t\t\t\t\t\t\t\t   \\\n+  __o = __builtin_aarch64_set_qregoiv4si (__o, (int32x4_t) __b.val[0], 0); \\\n+  __o = __builtin_aarch64_set_qregoiv4si (__o, (int32x4_t) __b.val[1], 1); \\\n+  __o = __builtin_aarch64_ld2_lane##mode (\t\t\t\t   \\\n+\t(__builtin_aarch64_simd_##ptrmode *) __ptr, __o, __c);\t\t   \\\n+  ret.val[0] = (vtype) __builtin_aarch64_get_qregoiv4si (__o, 0);\t   \\\n+  ret.val[1] = (vtype) __builtin_aarch64_get_qregoiv4si (__o, 1);\t   \\\n+  return ret;\t\t\t\t\t\t\t\t   \\\n+}\n+\n+__LD2_LANE_FUNC (float32x4x2_t, float32x4_t, float32_t, v4sf, sf, f32)\n+__LD2_LANE_FUNC (float64x2x2_t, float64x2_t, float64_t, v2df, df, f64)\n+__LD2_LANE_FUNC (poly8x16x2_t, poly8x16_t, poly8_t, v16qi, qi, p8)\n+__LD2_LANE_FUNC (poly16x8x2_t, poly16x8_t, poly16_t, v8hi, hi, p16)\n+__LD2_LANE_FUNC (int8x16x2_t, int8x16_t, int8_t, v16qi, qi, s8)\n+__LD2_LANE_FUNC (int16x8x2_t, int16x8_t, int16_t, v8hi, hi, s16)\n+__LD2_LANE_FUNC (int32x4x2_t, int32x4_t, int32_t, v4si, si, s32)\n+__LD2_LANE_FUNC (int64x2x2_t, int64x2_t, int64_t, v2di, di, s64)\n+__LD2_LANE_FUNC (uint8x16x2_t, uint8x16_t, uint8_t, v16qi, qi, u8)\n+__LD2_LANE_FUNC (uint16x8x2_t, uint16x8_t, uint16_t, v8hi, hi, u16)\n+__LD2_LANE_FUNC (uint32x4x2_t, uint32x4_t, uint32_t, v4si, si, u32)\n+__LD2_LANE_FUNC (uint64x2x2_t, uint64x2_t, uint64_t, v2di, di, u64)\n+\n+#undef __LD2_LANE_FUNC\n+\n+/* vld3_lane */\n+\n+#define __LD3_LANE_FUNC(intype, vectype, largetype, ptrtype,\t\t   \\\n+\t\t\t mode, ptrmode, funcsuffix, signedtype)\t\t   \\\n+__extension__ static __inline intype __attribute__ ((__always_inline__))   \\\n+vld3_lane_##funcsuffix (const ptrtype * __ptr, intype __b, const int __c)  \\\n+{\t\t\t\t\t\t\t\t\t   \\\n+  __builtin_aarch64_simd_ci __o;\t\t\t\t\t   \\\n+  largetype __temp;\t\t\t\t\t\t\t   \\\n+  __temp.val[0] =\t\t\t\t\t\t\t   \\\n+    vcombine_##funcsuffix (__b.val[0], vcreate_##funcsuffix (0));\t   \\\n+  __temp.val[1] =\t\t\t\t\t\t\t   \\\n+    vcombine_##funcsuffix (__b.val[1], vcreate_##funcsuffix (0));\t   \\\n+  __temp.val[2] =\t\t\t\t\t\t\t   \\\n+    vcombine_##funcsuffix (__b.val[2], vcreate_##funcsuffix (0));\t   \\\n+  __o = __builtin_aarch64_set_qregci##mode (__o,\t\t\t   \\\n+\t\t\t\t\t   (signedtype) __temp.val[0],\t   \\\n+\t\t\t\t\t   0);\t\t\t\t   \\\n+  __o = __builtin_aarch64_set_qregci##mode (__o,\t\t\t   \\\n+\t\t\t\t\t   (signedtype) __temp.val[1],\t   \\\n+\t\t\t\t\t   1);\t\t\t\t   \\\n+  __o = __builtin_aarch64_set_qregci##mode (__o,\t\t\t   \\\n+\t\t\t\t\t   (signedtype) __temp.val[2],\t   \\\n+\t\t\t\t\t   2);\t\t\t\t   \\\n+  __o =\t__builtin_aarch64_ld3_lane##mode (\t\t\t\t   \\\n+\t  (__builtin_aarch64_simd_##ptrmode *) __ptr, __o, __c);\t   \\\n+  __b.val[0] = (vectype) __builtin_aarch64_get_dregcidi (__o, 0);\t   \\\n+  __b.val[1] = (vectype) __builtin_aarch64_get_dregcidi (__o, 1);\t   \\\n+  __b.val[2] = (vectype) __builtin_aarch64_get_dregcidi (__o, 2);\t   \\\n+  return __b;\t\t\t\t\t\t\t\t   \\\n+}\n+\n+__LD3_LANE_FUNC (float32x2x3_t, float32x2_t, float32x4x3_t, float32_t, v4sf,\n+\t\t sf, f32, float32x4_t)\n+__LD3_LANE_FUNC (float64x1x3_t, float64x1_t, float64x2x3_t, float64_t, v2df,\n+\t\t df, f64, float64x2_t)\n+__LD3_LANE_FUNC (poly8x8x3_t, poly8x8_t, poly8x16x3_t, poly8_t, v16qi, qi, p8,\n+\t\t int8x16_t)\n+__LD3_LANE_FUNC (poly16x4x3_t, poly16x4_t, poly16x8x3_t, poly16_t, v8hi, hi,\n+\t\t p16, int16x8_t)\n+__LD3_LANE_FUNC (int8x8x3_t, int8x8_t, int8x16x3_t, int8_t, v16qi, qi, s8,\n+\t\t int8x16_t)\n+__LD3_LANE_FUNC (int16x4x3_t, int16x4_t, int16x8x3_t, int16_t, v8hi, hi, s16,\n+\t\t int16x8_t)\n+__LD3_LANE_FUNC (int32x2x3_t, int32x2_t, int32x4x3_t, int32_t, v4si, si, s32,\n+\t\t int32x4_t)\n+__LD3_LANE_FUNC (int64x1x3_t, int64x1_t, int64x2x3_t, int64_t, v2di, di, s64,\n+\t\t int64x2_t)\n+__LD3_LANE_FUNC (uint8x8x3_t, uint8x8_t, uint8x16x3_t, uint8_t, v16qi, qi, u8,\n+\t\t int8x16_t)\n+__LD3_LANE_FUNC (uint16x4x3_t, uint16x4_t, uint16x8x3_t, uint16_t, v8hi, hi,\n+\t\t u16, int16x8_t)\n+__LD3_LANE_FUNC (uint32x2x3_t, uint32x2_t, uint32x4x3_t, uint32_t, v4si, si,\n+\t\t u32, int32x4_t)\n+__LD3_LANE_FUNC (uint64x1x3_t, uint64x1_t, uint64x2x3_t, uint64_t, v2di, di,\n+\t\t u64, int64x2_t)\n+\n+#undef __LD3_LANE_FUNC\n+\n+/* vld3q_lane */\n+\n+#define __LD3_LANE_FUNC(intype, vtype, ptrtype, mode, ptrmode, funcsuffix) \\\n+__extension__ static __inline intype __attribute__ ((__always_inline__))   \\\n+vld3q_lane_##funcsuffix (const ptrtype * __ptr, intype __b, const int __c) \\\n+{\t\t\t\t\t\t\t\t\t   \\\n+  __builtin_aarch64_simd_ci __o;\t\t\t\t\t   \\\n+  intype ret;\t\t\t\t\t\t\t\t   \\\n+  __o = __builtin_aarch64_set_qregciv4si (__o, (int32x4_t) __b.val[0], 0); \\\n+  __o = __builtin_aarch64_set_qregciv4si (__o, (int32x4_t) __b.val[1], 1); \\\n+  __o = __builtin_aarch64_set_qregciv4si (__o, (int32x4_t) __b.val[2], 2); \\\n+  __o = __builtin_aarch64_ld3_lane##mode (\t\t\t\t   \\\n+\t(__builtin_aarch64_simd_##ptrmode *) __ptr, __o, __c);\t\t   \\\n+  ret.val[0] = (vtype) __builtin_aarch64_get_qregciv4si (__o, 0);\t   \\\n+  ret.val[1] = (vtype) __builtin_aarch64_get_qregciv4si (__o, 1);\t   \\\n+  ret.val[2] = (vtype) __builtin_aarch64_get_qregciv4si (__o, 2);\t   \\\n+  return ret;\t\t\t\t\t\t\t\t   \\\n+}\n+\n+__LD3_LANE_FUNC (float32x4x3_t, float32x4_t, float32_t, v4sf, sf, f32)\n+__LD3_LANE_FUNC (float64x2x3_t, float64x2_t, float64_t, v2df, df, f64)\n+__LD3_LANE_FUNC (poly8x16x3_t, poly8x16_t, poly8_t, v16qi, qi, p8)\n+__LD3_LANE_FUNC (poly16x8x3_t, poly16x8_t, poly16_t, v8hi, hi, p16)\n+__LD3_LANE_FUNC (int8x16x3_t, int8x16_t, int8_t, v16qi, qi, s8)\n+__LD3_LANE_FUNC (int16x8x3_t, int16x8_t, int16_t, v8hi, hi, s16)\n+__LD3_LANE_FUNC (int32x4x3_t, int32x4_t, int32_t, v4si, si, s32)\n+__LD3_LANE_FUNC (int64x2x3_t, int64x2_t, int64_t, v2di, di, s64)\n+__LD3_LANE_FUNC (uint8x16x3_t, uint8x16_t, uint8_t, v16qi, qi, u8)\n+__LD3_LANE_FUNC (uint16x8x3_t, uint16x8_t, uint16_t, v8hi, hi, u16)\n+__LD3_LANE_FUNC (uint32x4x3_t, uint32x4_t, uint32_t, v4si, si, u32)\n+__LD3_LANE_FUNC (uint64x2x3_t, uint64x2_t, uint64_t, v2di, di, u64)\n+\n+#undef __LD3_LANE_FUNC\n+\n+/* vld4_lane */\n+\n+#define __LD4_LANE_FUNC(intype, vectype, largetype, ptrtype,\t\t   \\\n+\t\t\t mode, ptrmode, funcsuffix, signedtype)\t\t   \\\n+__extension__ static __inline intype __attribute__ ((__always_inline__))   \\\n+vld4_lane_##funcsuffix (const ptrtype * __ptr, intype __b, const int __c)  \\\n+{\t\t\t\t\t\t\t\t\t   \\\n+  __builtin_aarch64_simd_xi __o;\t\t\t\t\t   \\\n+  largetype __temp;\t\t\t\t\t\t\t   \\\n+  __temp.val[0] =\t\t\t\t\t\t\t   \\\n+    vcombine_##funcsuffix (__b.val[0], vcreate_##funcsuffix (0));\t   \\\n+  __temp.val[1] =\t\t\t\t\t\t\t   \\\n+    vcombine_##funcsuffix (__b.val[1], vcreate_##funcsuffix (0));\t   \\\n+  __temp.val[2] =\t\t\t\t\t\t\t   \\\n+    vcombine_##funcsuffix (__b.val[2], vcreate_##funcsuffix (0));\t   \\\n+  __temp.val[3] =\t\t\t\t\t\t\t   \\\n+    vcombine_##funcsuffix (__b.val[3], vcreate_##funcsuffix (0));\t   \\\n+  __o = __builtin_aarch64_set_qregxi##mode (__o,\t\t\t   \\\n+\t\t\t\t\t   (signedtype) __temp.val[0],\t   \\\n+\t\t\t\t\t   0);\t\t\t\t   \\\n+  __o = __builtin_aarch64_set_qregxi##mode (__o,\t\t\t   \\\n+\t\t\t\t\t   (signedtype) __temp.val[1],\t   \\\n+\t\t\t\t\t   1);\t\t\t\t   \\\n+  __o = __builtin_aarch64_set_qregxi##mode (__o,\t\t\t   \\\n+\t\t\t\t\t   (signedtype) __temp.val[2],\t   \\\n+\t\t\t\t\t   2);\t\t\t\t   \\\n+  __o = __builtin_aarch64_set_qregxi##mode (__o,\t\t\t   \\\n+\t\t\t\t\t   (signedtype) __temp.val[3],\t   \\\n+\t\t\t\t\t   3);\t\t\t\t   \\\n+  __o =\t__builtin_aarch64_ld4_lane##mode (\t\t\t\t   \\\n+\t  (__builtin_aarch64_simd_##ptrmode *) __ptr, __o, __c);\t   \\\n+  __b.val[0] = (vectype) __builtin_aarch64_get_dregxidi (__o, 0);\t   \\\n+  __b.val[1] = (vectype) __builtin_aarch64_get_dregxidi (__o, 1);\t   \\\n+  __b.val[2] = (vectype) __builtin_aarch64_get_dregxidi (__o, 2);\t   \\\n+  __b.val[3] = (vectype) __builtin_aarch64_get_dregxidi (__o, 3);\t   \\\n+  return __b;\t\t\t\t\t\t\t\t   \\\n+}\n+\n+/* vld4q_lane */\n+\n+__LD4_LANE_FUNC (float32x2x4_t, float32x2_t, float32x4x4_t, float32_t, v4sf,\n+\t\t sf, f32, float32x4_t)\n+__LD4_LANE_FUNC (float64x1x4_t, float64x1_t, float64x2x4_t, float64_t, v2df,\n+\t\t df, f64, float64x2_t)\n+__LD4_LANE_FUNC (poly8x8x4_t, poly8x8_t, poly8x16x4_t, poly8_t, v16qi, qi, p8,\n+\t\t int8x16_t)\n+__LD4_LANE_FUNC (poly16x4x4_t, poly16x4_t, poly16x8x4_t, poly16_t, v8hi, hi,\n+\t\t p16, int16x8_t)\n+__LD4_LANE_FUNC (int8x8x4_t, int8x8_t, int8x16x4_t, int8_t, v16qi, qi, s8,\n+\t\t int8x16_t)\n+__LD4_LANE_FUNC (int16x4x4_t, int16x4_t, int16x8x4_t, int16_t, v8hi, hi, s16,\n+\t\t int16x8_t)\n+__LD4_LANE_FUNC (int32x2x4_t, int32x2_t, int32x4x4_t, int32_t, v4si, si, s32,\n+\t\t int32x4_t)\n+__LD4_LANE_FUNC (int64x1x4_t, int64x1_t, int64x2x4_t, int64_t, v2di, di, s64,\n+\t\t int64x2_t)\n+__LD4_LANE_FUNC (uint8x8x4_t, uint8x8_t, uint8x16x4_t, uint8_t, v16qi, qi, u8,\n+\t\t int8x16_t)\n+__LD4_LANE_FUNC (uint16x4x4_t, uint16x4_t, uint16x8x4_t, uint16_t, v8hi, hi,\n+\t\t u16, int16x8_t)\n+__LD4_LANE_FUNC (uint32x2x4_t, uint32x2_t, uint32x4x4_t, uint32_t, v4si, si,\n+\t\t u32, int32x4_t)\n+__LD4_LANE_FUNC (uint64x1x4_t, uint64x1_t, uint64x2x4_t, uint64_t, v2di, di,\n+\t\t u64, int64x2_t)\n+\n+#undef __LD4_LANE_FUNC\n+\n+/* vld4q_lane */\n+\n+#define __LD4_LANE_FUNC(intype, vtype, ptrtype, mode, ptrmode, funcsuffix) \\\n+__extension__ static __inline intype __attribute__ ((__always_inline__))   \\\n+vld4q_lane_##funcsuffix (const ptrtype * __ptr, intype __b, const int __c) \\\n+{\t\t\t\t\t\t\t\t\t   \\\n+  __builtin_aarch64_simd_xi __o;\t\t\t\t\t   \\\n+  intype ret;\t\t\t\t\t\t\t\t   \\\n+  __o = __builtin_aarch64_set_qregxiv4si (__o, (int32x4_t) __b.val[0], 0); \\\n+  __o = __builtin_aarch64_set_qregxiv4si (__o, (int32x4_t) __b.val[1], 1); \\\n+  __o = __builtin_aarch64_set_qregxiv4si (__o, (int32x4_t) __b.val[2], 2); \\\n+  __o = __builtin_aarch64_set_qregxiv4si (__o, (int32x4_t) __b.val[3], 3); \\\n+  __o = __builtin_aarch64_ld4_lane##mode (\t\t\t\t   \\\n+\t(__builtin_aarch64_simd_##ptrmode *) __ptr, __o, __c);\t\t   \\\n+  ret.val[0] = (vtype) __builtin_aarch64_get_qregxiv4si (__o, 0);\t   \\\n+  ret.val[1] = (vtype) __builtin_aarch64_get_qregxiv4si (__o, 1);\t   \\\n+  ret.val[2] = (vtype) __builtin_aarch64_get_qregxiv4si (__o, 2);\t   \\\n+  ret.val[3] = (vtype) __builtin_aarch64_get_qregxiv4si (__o, 3);\t   \\\n+  return ret;\t\t\t\t\t\t\t\t   \\\n+}\n+\n+__LD4_LANE_FUNC (float32x4x4_t, float32x4_t, float32_t, v4sf, sf, f32)\n+__LD4_LANE_FUNC (float64x2x4_t, float64x2_t, float64_t, v2df, df, f64)\n+__LD4_LANE_FUNC (poly8x16x4_t, poly8x16_t, poly8_t, v16qi, qi, p8)\n+__LD4_LANE_FUNC (poly16x8x4_t, poly16x8_t, poly16_t, v8hi, hi, p16)\n+__LD4_LANE_FUNC (int8x16x4_t, int8x16_t, int8_t, v16qi, qi, s8)\n+__LD4_LANE_FUNC (int16x8x4_t, int16x8_t, int16_t, v8hi, hi, s16)\n+__LD4_LANE_FUNC (int32x4x4_t, int32x4_t, int32_t, v4si, si, s32)\n+__LD4_LANE_FUNC (int64x2x4_t, int64x2_t, int64_t, v2di, di, s64)\n+__LD4_LANE_FUNC (uint8x16x4_t, uint8x16_t, uint8_t, v16qi, qi, u8)\n+__LD4_LANE_FUNC (uint16x8x4_t, uint16x8_t, uint16_t, v8hi, hi, u16)\n+__LD4_LANE_FUNC (uint32x4x4_t, uint32x4_t, uint32_t, v4si, si, u32)\n+__LD4_LANE_FUNC (uint64x2x4_t, uint64x2_t, uint64_t, v2di, di, u64)\n+\n+#undef __LD4_LANE_FUNC\n+\n /* vmax */\n \n __extension__ static __inline float32x2_t __attribute__ ((__always_inline__))"}]}