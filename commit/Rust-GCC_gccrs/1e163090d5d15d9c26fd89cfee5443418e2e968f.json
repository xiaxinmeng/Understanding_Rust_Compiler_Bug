{"sha": "1e163090d5d15d9c26fd89cfee5443418e2e968f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWUxNjMwOTBkNWQxNWQ5YzI2ZmQ4OWNmZWU1NDQzNDE4ZTJlOTY4Zg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2017-02-16T16:42:06Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2017-02-16T16:42:06Z"}, "message": "PR c++/78572 - ICE with self-modifying array initializer\n\n\t* constexpr.c (cxx_eval_store_expression): The object we're\n\tinitializing is outside the constant-expression.\n\nFrom-SVN: r245511", "tree": {"sha": "f6e1e0d3c41a04ecfbd7c9d4942a3a6ad34a523a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f6e1e0d3c41a04ecfbd7c9d4942a3a6ad34a523a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1e163090d5d15d9c26fd89cfee5443418e2e968f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e163090d5d15d9c26fd89cfee5443418e2e968f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e163090d5d15d9c26fd89cfee5443418e2e968f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e163090d5d15d9c26fd89cfee5443418e2e968f/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "61cee2603036c29761a49c07a6531561ca507ddc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61cee2603036c29761a49c07a6531561ca507ddc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/61cee2603036c29761a49c07a6531561ca507ddc"}], "stats": {"total": 17, "additions": 16, "deletions": 1}, "files": [{"sha": "66c491e1bf86b71f35962f05d55c96e56ce7961c", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e163090d5d15d9c26fd89cfee5443418e2e968f/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e163090d5d15d9c26fd89cfee5443418e2e968f/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=1e163090d5d15d9c26fd89cfee5443418e2e968f", "patch": "@@ -1,5 +1,10 @@\n 2017-02-16  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/78572 - ICE with self-modifying array initializer\n+\t* constexpr.c (cxx_eval_store_expression): The object we're\n+\tinitializing is outside the constant-expression.\n+\t(cxx_eval_call_expression): Set ctx->call.\n+\n \tPR c++/79050 - ICE with undeduced auto and LTO\n \t* decl.c (poplevel): Remove undeduced auto decls.\n "}, {"sha": "fc7d46cc2eb667d019769c0465cf65fd673d6fb7", "filename": "gcc/cp/constexpr.c", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e163090d5d15d9c26fd89cfee5443418e2e968f/gcc%2Fcp%2Fconstexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e163090d5d15d9c26fd89cfee5443418e2e968f/gcc%2Fcp%2Fconstexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fconstexpr.c?ref=1e163090d5d15d9c26fd89cfee5443418e2e968f", "patch": "@@ -1635,6 +1635,7 @@ cxx_eval_call_expression (const constexpr_ctx *ctx, tree t,\n \t  constexpr_ctx ctx_with_save_exprs = *ctx;\n \t  hash_set<tree> save_exprs;\n \t  ctx_with_save_exprs.save_exprs = &save_exprs;\n+\t  ctx_with_save_exprs.call = &new_call;\n \n \t  tree jump_target = NULL_TREE;\n \t  cxx_eval_constant_expression (&ctx_with_save_exprs, body,\n@@ -3386,7 +3387,13 @@ cxx_eval_store_expression (const constexpr_ctx *ctx, tree t,\n   /* And then find/build up our initializer for the path to the subobject\n      we're initializing.  */\n   tree *valp;\n-  if (DECL_P (object))\n+  if (object == ctx->object && VAR_P (object)\n+      && DECL_NAME (object) && ctx->call == NULL)\n+    /* The variable we're building up an aggregate initializer for is outside\n+       the constant-expression, so don't evaluate the store.  We check\n+       DECL_NAME to handle TARGET_EXPR temporaries, which are fair game.  */\n+    valp = NULL;\n+  else if (DECL_P (object))\n     valp = ctx->values->get (object);\n   else\n     valp = NULL;"}, {"sha": "e3cb1b854a9beb4d039533d8aa3a0aade29a250b", "filename": "gcc/testsuite/g++.dg/init/array47.C", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e163090d5d15d9c26fd89cfee5443418e2e968f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Farray47.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e163090d5d15d9c26fd89cfee5443418e2e968f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Farray47.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Farray47.C?ref=1e163090d5d15d9c26fd89cfee5443418e2e968f", "patch": "@@ -0,0 +1,3 @@\n+// PR c++/78572\n+\n+static int array[10] = { array[3]=5, array[7]=3, };"}]}