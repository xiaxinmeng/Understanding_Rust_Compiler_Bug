{"sha": "49003ff65a7278718691182fb429cd9b7680cfa3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDkwMDNmZjY1YTcyNzg3MTg2OTExODJmYjQyOWNkOWI3NjgwY2ZhMw==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-11-30T23:03:05Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-11-30T23:03:05Z"}, "message": "(LINK_LIBGCC_SPECIAL_1): New parameter.\n\nFrom-SVN: r2818", "tree": {"sha": "982b2f2746ecd644ab8198e628d9e86733dc7b61", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/982b2f2746ecd644ab8198e628d9e86733dc7b61"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/49003ff65a7278718691182fb429cd9b7680cfa3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49003ff65a7278718691182fb429cd9b7680cfa3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/49003ff65a7278718691182fb429cd9b7680cfa3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49003ff65a7278718691182fb429cd9b7680cfa3/comments", "author": null, "committer": null, "parents": [{"sha": "d5c97601dc3f71c7fa32d2e3cf87262063eda34f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5c97601dc3f71c7fa32d2e3cf87262063eda34f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d5c97601dc3f71c7fa32d2e3cf87262063eda34f"}], "stats": {"total": 13, "additions": 11, "deletions": 2}, "files": [{"sha": "1463f2bae5742681046b24a2569decc9a0f16234", "filename": "gcc/gcc.c", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49003ff65a7278718691182fb429cd9b7680cfa3/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49003ff65a7278718691182fb429cd9b7680cfa3/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=49003ff65a7278718691182fb429cd9b7680cfa3", "patch": "@@ -565,11 +565,19 @@ static int n_default_compilers\n \n /* Here is the spec for running the linker, after compiling all files.  */\n \n-#ifdef LINK_LIBGCC_SPECIAL\n-/* Have gcc do the search for libgcc.a.  */\n /* -u* was put back because both BSD and SysV seem to support it.  */\n /* %{static:} simply prevents an error message if the target machine\n    doesn't handle -static.  */\n+#ifdef LINK_LIBGCC_SPECIAL_1\n+/* Have gcc do the search for libgcc.a, but generate -L options as usual.  */\n+static char *link_command_spec = \"\\\n+%{!c:%{!M:%{!MM:%{!E:%{!S:ld %l %X %{o*} %{A} %{d} %{e*} %{m} %{N} %{n} \\\n+\t\t\t%{r} %{s} %{T*} %{t} %{u*} %{x} %{z}\\\n+\t\t\t%{!A:%{!nostdlib:%S}} %{static:}\\\n+\t\t\t%{L*} %D %o %{!nostdlib:libgcc.a%s %L libgcc.a%s %{!A:%E}}\\n }}}}}\";\n+#else\n+#ifdef LINK_LIBGCC_SPECIAL\n+/* Have gcc do the search for libgcc.a, and don't generate -L options.  */\n static char *link_command_spec = \"\\\n %{!c:%{!M:%{!MM:%{!E:%{!S:ld %l %X %{o*} %{A} %{d} %{e*} %{m} %{N} %{n} \\\n \t\t\t%{r} %{s} %{T*} %{t} %{u*} %{x} %{z}\\\n@@ -583,6 +591,7 @@ static char *link_command_spec = \"\\\n \t\t\t%{!A:%{!nostdlib:%S}} %{static:}\\\n \t\t\t%{L*} %D %o %{!nostdlib:-lgcc %L -lgcc %{!A:%E}}\\n }}}}}\";\n #endif\n+#endif\n \n /* A vector of options to give to the linker.\n    These options are accumulated by -Xlinker and -Wl,"}]}