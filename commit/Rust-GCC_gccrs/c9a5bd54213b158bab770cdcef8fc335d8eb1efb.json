{"sha": "c9a5bd54213b158bab770cdcef8fc335d8eb1efb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzlhNWJkNTQyMTNiMTU4YmFiNzcwY2RjZWY4ZmMzMzVkOGViMWVmYg==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2006-10-09T10:49:50Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2006-10-09T10:49:50Z"}, "message": "PR libstdc++/28277 (partial: money_put bits)\n\n2006-10-09  Paolo Carlini  <pcarlini@suse.de>\n\n\tPR libstdc++/28277 (partial: money_put bits)\n\t* include/bits/locale_facets.tcc (money_put<>::_M_insert(iter_type,\n\tios_base&, char_type, const string_type&)): Avoid __builtin_alloca\n\twith no limit, do the work in place.\n\n\t* include/bits/locale_facets.tcc (money_put<>::do_put(iter_type,\n\tbool, ios_base&, char_type, long double)): Avoid unnecessary\n\t__builtin_alloca, do the work in place.\n\nFrom-SVN: r117571", "tree": {"sha": "c5b1013bc798a6d0ab383e8cfb690328c3f30e08", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c5b1013bc798a6d0ab383e8cfb690328c3f30e08"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c9a5bd54213b158bab770cdcef8fc335d8eb1efb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9a5bd54213b158bab770cdcef8fc335d8eb1efb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c9a5bd54213b158bab770cdcef8fc335d8eb1efb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9a5bd54213b158bab770cdcef8fc335d8eb1efb/comments", "author": null, "committer": null, "parents": [{"sha": "a145e9b64fcc52b1c5274f92140c2571d0ced500", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a145e9b64fcc52b1c5274f92140c2571d0ced500", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a145e9b64fcc52b1c5274f92140c2571d0ced500"}], "stats": {"total": 33, "additions": 19, "deletions": 14}, "files": [{"sha": "aceb26e7d275484a275a2ae6a184a8f07f8d24eb", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9a5bd54213b158bab770cdcef8fc335d8eb1efb/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9a5bd54213b158bab770cdcef8fc335d8eb1efb/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=c9a5bd54213b158bab770cdcef8fc335d8eb1efb", "patch": "@@ -1,3 +1,14 @@\n+2006-10-09  Paolo Carlini  <pcarlini@suse.de>\n+\n+\tPR libstdc++/28277 (partial: money_put bits)\n+\t* include/bits/locale_facets.tcc (money_put<>::_M_insert(iter_type,\n+\tios_base&, char_type, const string_type&)): Avoid __builtin_alloca\n+\twith no limit, do the work in place.\n+\n+\t* include/bits/locale_facets.tcc (money_put<>::do_put(iter_type,\n+\tbool, ios_base&, char_type, long double)): Avoid unnecessary\n+\t__builtin_alloca, do the work in place.\n+\n 2006-10-09  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* src/globals_io.cc (_GLIBCXX_once): Remove, unused."}, {"sha": "43051a1a71a9da5a458f6ffe9a5e13ab2dddc189", "filename": "libstdc++-v3/include/bits/locale_facets.tcc", "status": "modified", "additions": 8, "deletions": 14, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9a5bd54213b158bab770cdcef8fc335d8eb1efb/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9a5bd54213b158bab770cdcef8fc335d8eb1efb/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc?ref=c9a5bd54213b158bab770cdcef8fc335d8eb1efb", "patch": "@@ -1640,22 +1640,20 @@ _GLIBCXX_BEGIN_LDBL_NAMESPACE\n \n \t    // Add thousands separators to non-decimal digits, per\n \t    // grouping rules.\n-\t    int __paddec = __len - __lc->_M_frac_digits;\n+\t    long __paddec = __len - __lc->_M_frac_digits;\n \t    if (__paddec > 0)\n   \t      {\n \t\tif (__lc->_M_frac_digits < 0)\n \t\t  __paddec = __len;\n   \t\tif (__lc->_M_grouping_size)\n   \t\t  {\n-\t\t    _CharT* __ws =\n-  \t\t      static_cast<_CharT*>(__builtin_alloca(sizeof(_CharT)\n-  \t\t\t\t\t\t\t    * 2 * __len));\n-  \t\t    _CharT* __ws_end =\n-\t\t      std::__add_grouping(__ws, __lc->_M_thousands_sep,\n+\t\t    __value.assign(2 * __paddec, char_type());\n+ \t\t    _CharT* __vend = \n+\t\t      std::__add_grouping(&__value[0], __lc->_M_thousands_sep,\n \t\t\t\t\t  __lc->_M_grouping,\n \t\t\t\t\t  __lc->_M_grouping_size,\n \t\t\t\t\t  __beg, __beg + __paddec);\n-\t\t    __value.assign(__ws, __ws_end - __ws);\n+\t\t    __value.erase(__vend - &__value[0]);\n   \t\t  }\n   \t\telse\n \t\t  __value.assign(__beg, __paddec);\n@@ -1755,9 +1753,7 @@ _GLIBCXX_BEGIN_LDBL_NAMESPACE\n     money_put<_CharT, _OutIter>::\n     __do_put(iter_type __s, bool __intl, ios_base& __io, char_type __fill,\n \t     double __units) const\n-    {\n-      return this->do_put(__s, __intl, __io, __fill, (long double) __units);\n-    }\n+    { return this->do_put(__s, __intl, __io, __fill, (long double) __units); }\n #endif\n \n   template<typename _CharT, typename _OutIter>\n@@ -1791,10 +1787,8 @@ _GLIBCXX_BEGIN_LDBL_NAMESPACE\n       int __len = std::__convert_from_v(_S_get_c_locale(), __cs, 0, \"%.*Lf\", \n \t\t\t\t\t0, __units);\n #endif\n-      _CharT* __ws = static_cast<_CharT*>(__builtin_alloca(sizeof(_CharT)\n-\t\t\t\t\t\t\t   * __cs_size));\n-      __ctype.widen(__cs, __cs + __len, __ws);\n-      const string_type __digits(__ws, __len);\n+      string_type __digits(__len, char_type());\n+      __ctype.widen(__cs, __cs + __len, &__digits[0]);\n       return __intl ? _M_insert<true>(__s, __io, __fill, __digits)\n \t            : _M_insert<false>(__s, __io, __fill, __digits);\n     }"}]}