{"sha": "aee42017074928c401cc7faf2dffc4c00c677eb1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWVlNDIwMTcwNzQ5MjhjNDAxY2M3ZmFmMmRmZmM0YzAwYzY3N2ViMQ==", "commit": {"author": {"name": "Anthony Green", "email": "green@redhat.com", "date": "2001-11-17T21:32:22Z"}, "committer": {"name": "Anthony Green", "email": "green@gcc.gnu.org", "date": "2001-11-17T21:32:22Z"}, "message": "Obvious jni weak reference fix\n\nFrom-SVN: r47128", "tree": {"sha": "50f5d71f5ab9a9ed10efa48b3c55cd6969433dfb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/50f5d71f5ab9a9ed10efa48b3c55cd6969433dfb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aee42017074928c401cc7faf2dffc4c00c677eb1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aee42017074928c401cc7faf2dffc4c00c677eb1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aee42017074928c401cc7faf2dffc4c00c677eb1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aee42017074928c401cc7faf2dffc4c00c677eb1/comments", "author": {"login": "atgreen", "id": 89993, "node_id": "MDQ6VXNlcjg5OTkz", "avatar_url": "https://avatars.githubusercontent.com/u/89993?v=4", "gravatar_id": "", "url": "https://api.github.com/users/atgreen", "html_url": "https://github.com/atgreen", "followers_url": "https://api.github.com/users/atgreen/followers", "following_url": "https://api.github.com/users/atgreen/following{/other_user}", "gists_url": "https://api.github.com/users/atgreen/gists{/gist_id}", "starred_url": "https://api.github.com/users/atgreen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/atgreen/subscriptions", "organizations_url": "https://api.github.com/users/atgreen/orgs", "repos_url": "https://api.github.com/users/atgreen/repos", "events_url": "https://api.github.com/users/atgreen/events{/privacy}", "received_events_url": "https://api.github.com/users/atgreen/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "089a05b8d7a14016a8bb36c94170a1c0e72872da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/089a05b8d7a14016a8bb36c94170a1c0e72872da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/089a05b8d7a14016a8bb36c94170a1c0e72872da"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "173cef9892f248156b488c357f1cb6b751eaf1ae", "filename": "libjava/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aee42017074928c401cc7faf2dffc4c00c677eb1/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aee42017074928c401cc7faf2dffc4c00c677eb1/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=aee42017074928c401cc7faf2dffc4c00c677eb1", "patch": "@@ -1,3 +1,7 @@\n+2001-11-17  Anthony Green  <green@redhat.com>\n+\n+\t* jni.cc (unwrap): Fix test for wrapped objects.\n+\n 2001-11-16  Tom Tromey  <tromey@redhat.com>\n \n \t* verify.cc (_Jv_BytecodeVerifier::check_field_constant): Handle"}, {"sha": "dbe1d1f4f2970a95a6412c60915d1c243b76ef19", "filename": "libjava/jni.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aee42017074928c401cc7faf2dffc4c00c677eb1/libjava%2Fjni.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aee42017074928c401cc7faf2dffc4c00c677eb1/libjava%2Fjni.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni.cc?ref=aee42017074928c401cc7faf2dffc4c00c677eb1", "patch": "@@ -212,7 +212,7 @@ unwrap (T *obj)\n   using namespace gnu::gcj::runtime;\n   // We can compare the class directly because JNIWeakRef is `final'.\n   // Doing it this way is much faster.\n-  if (obj == NULL || obj->getClass () == &JNIWeakRef::class$)\n+  if (obj == NULL || obj->getClass () != &JNIWeakRef::class$)\n     return obj;\n   JNIWeakRef *wr = reinterpret_cast<JNIWeakRef *> (obj);\n   return reinterpret_cast<T *> (wr->get ());"}]}