{"sha": "4fb296d9f0522b25a7c02329e1786f2f90b06fd7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGZiMjk2ZDlmMDUyMmIyNWE3YzAyMzI5ZTE3ODZmMmY5MGIwNmZkNw==", "commit": {"author": {"name": "Richard Sandiford", "email": "rdsandiford@googlemail.com", "date": "2009-10-22T22:30:27Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2009-10-22T22:30:27Z"}, "message": "simplify-rtx.c (simplify_replace_fn_rtx): Add a fallback case for rtxes that aren't handled specially.\n\ngcc/\n\t* simplify-rtx.c (simplify_replace_fn_rtx): Add a fallback case\n\tfor rtxes that aren't handled specially.\n\nFrom-SVN: r153476", "tree": {"sha": "f8b945989ef9a3176d159c0e8477139fd73772a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f8b945989ef9a3176d159c0e8477139fd73772a5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4fb296d9f0522b25a7c02329e1786f2f90b06fd7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4fb296d9f0522b25a7c02329e1786f2f90b06fd7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4fb296d9f0522b25a7c02329e1786f2f90b06fd7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4fb296d9f0522b25a7c02329e1786f2f90b06fd7/comments", "author": {"login": "rsandifo", "id": 4235983, "node_id": "MDQ6VXNlcjQyMzU5ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4235983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo", "html_url": "https://github.com/rsandifo", "followers_url": "https://api.github.com/users/rsandifo/followers", "following_url": "https://api.github.com/users/rsandifo/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo/orgs", "repos_url": "https://api.github.com/users/rsandifo/repos", "events_url": "https://api.github.com/users/rsandifo/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bd7960b1e4ce9d64b2631d0b644eb8bf83845005", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd7960b1e4ce9d64b2631d0b644eb8bf83845005", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd7960b1e4ce9d64b2631d0b644eb8bf83845005"}], "stats": {"total": 50, "additions": 47, "deletions": 3}, "files": [{"sha": "b48375b571849855a20b6d50068894d66c18d7f2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4fb296d9f0522b25a7c02329e1786f2f90b06fd7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4fb296d9f0522b25a7c02329e1786f2f90b06fd7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4fb296d9f0522b25a7c02329e1786f2f90b06fd7", "patch": "@@ -1,3 +1,8 @@\n+2009-10-22  Richard Sandiford  <rdsandiford@googlemail.com>\n+\n+\t* simplify-rtx.c (simplify_replace_fn_rtx): Add a fallback case\n+\tfor rtxes that aren't handled specially.\n+\n 2009-10-22  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \t* rtl.h (shallow_copy_rtvec): Declare."}, {"sha": "926615ec86f2e1e3fdb701226cc98156b9e37734", "filename": "gcc/simplify-rtx.c", "status": "modified", "additions": 42, "deletions": 3, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4fb296d9f0522b25a7c02329e1786f2f90b06fd7/gcc%2Fsimplify-rtx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4fb296d9f0522b25a7c02329e1786f2f90b06fd7/gcc%2Fsimplify-rtx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsimplify-rtx.c?ref=4fb296d9f0522b25a7c02329e1786f2f90b06fd7", "patch": "@@ -363,7 +363,10 @@ simplify_replace_fn_rtx (rtx x, const_rtx old_rtx,\n   enum rtx_code code = GET_CODE (x);\n   enum machine_mode mode = GET_MODE (x);\n   enum machine_mode op_mode;\n-  rtx op0, op1, op2;\n+  const char *fmt;\n+  rtx op0, op1, op2, newx, op;\n+  rtvec vec, newvec;\n+  int i, j;\n \n   /* If X is OLD_RTX, return FN (X, DATA), with a null FN.  Otherwise,\n      if this is an expression, try to build a new expression, substituting\n@@ -420,7 +423,6 @@ simplify_replace_fn_rtx (rtx x, const_rtx old_rtx,\n       return simplify_gen_ternary (code, mode, op_mode, op0, op1, op2);\n \n     case RTX_EXTRA:\n-      /* The only case we try to handle is a SUBREG.  */\n       if (code == SUBREG)\n \t{\n \t  op0 = simplify_replace_fn_rtx (SUBREG_REG (x), old_rtx, fn, data);\n@@ -459,7 +461,44 @@ simplify_replace_fn_rtx (rtx x, const_rtx old_rtx,\n     default:\n       break;\n     }\n-  return x;\n+\n+  newx = x;\n+  fmt = GET_RTX_FORMAT (code);\n+  for (i = 0; fmt[i]; i++)\n+    switch (fmt[i])\n+      {\n+      case 'E':\n+\tvec = XVEC (x, i);\n+\tnewvec = XVEC (newx, i);\n+\tfor (j = 0; j < GET_NUM_ELEM (vec); j++)\n+\t  {\n+\t    op = simplify_replace_fn_rtx (RTVEC_ELT (vec, j),\n+\t\t\t\t\t  old_rtx, fn, data);\n+\t    if (op != RTVEC_ELT (vec, j))\n+\t      {\n+\t\tif (newvec == vec)\n+\t\t  {\n+\t\t    newvec = shallow_copy_rtvec (vec);\n+\t\t    if (x == newx)\n+\t\t      newx = shallow_copy_rtx (x);\n+\t\t    XVEC (newx, i) = newvec;\n+\t\t  }\n+\t\tRTVEC_ELT (newvec, j) = op;\n+\t      }\n+\t  }\n+\tbreak;\n+\n+      case 'e':\n+\top = simplify_replace_fn_rtx (XEXP (x, i), old_rtx, fn, data);\n+\tif (op != XEXP (x, i))\n+\t  {\n+\t    if (x == newx)\n+\t      newx = shallow_copy_rtx (x);\n+\t    XEXP (newx, i) = op;\n+\t  }\n+\tbreak;\n+      }\n+  return newx;\n }\n \n /* Replace all occurrences of OLD_RTX in X with NEW_RTX and try to simplify the"}]}