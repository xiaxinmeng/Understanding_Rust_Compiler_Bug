{"sha": "c2c51a3e358294b5ddfa522fa4d973c3360699b4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzJjNTFhM2UzNTgyOTRiNWRkZmE1MjJmYTRkOTczYzMzNjA2OTliNA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2018-09-04T10:55:46Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2018-09-04T10:55:46Z"}, "message": "re PR tree-optimization/87176 (wrong code at -Os and above on x86-64-linux-gnu)\n\n2018-09-04  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/87176\n\t* tree-ssa-sccvn.c (visit_phi): Remove redundant allsame\n\tvariable.  When value-numbering a virtual PHI node make sure\n\tto not value-number to the backedge value.\n\n\t* gcc.dg/torture/pr87176.c: New testcase.\n\t* gcc.dg/torture/ssa-fre-1.c: Likewise.\n\nFrom-SVN: r264077", "tree": {"sha": "6f6ecfbfcc692b9233cf702e2437761aa05a4fb8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6f6ecfbfcc692b9233cf702e2437761aa05a4fb8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c2c51a3e358294b5ddfa522fa4d973c3360699b4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2c51a3e358294b5ddfa522fa4d973c3360699b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c2c51a3e358294b5ddfa522fa4d973c3360699b4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2c51a3e358294b5ddfa522fa4d973c3360699b4/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "727c8c82e14021cad992443bb32693293a55e33d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/727c8c82e14021cad992443bb32693293a55e33d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/727c8c82e14021cad992443bb32693293a55e33d"}], "stats": {"total": 88, "additions": 78, "deletions": 10}, "files": [{"sha": "cfd6b2500c83f7285457c52c61f82fa01426b914", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2c51a3e358294b5ddfa522fa4d973c3360699b4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2c51a3e358294b5ddfa522fa4d973c3360699b4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c2c51a3e358294b5ddfa522fa4d973c3360699b4", "patch": "@@ -1,3 +1,10 @@\n+2018-09-04  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/87176\n+\t* tree-ssa-sccvn.c (visit_phi): Remove redundant allsame\n+\tvariable.  When value-numbering a virtual PHI node make sure\n+\tto not value-number to the backedge value.\n+\n 2018-09-04  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* doc/extend.texi (Long Long, Hex Floats): Document support for"}, {"sha": "8602ff4988ac3ec65375f44e00cc5687370a6255", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2c51a3e358294b5ddfa522fa4d973c3360699b4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2c51a3e358294b5ddfa522fa4d973c3360699b4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c2c51a3e358294b5ddfa522fa4d973c3360699b4", "patch": "@@ -1,3 +1,9 @@\n+2018-09-04  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/87176\n+\t* gcc.dg/torture/pr87176.c: New testcase.\n+\t* gcc.dg/torture/ssa-fre-1.c: Likewise.\n+\n 2018-09-03  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \t* gfortran.dg/modulo_check: New test."}, {"sha": "6295779b1394fe2ed62f8571cdac08cae4eee449", "filename": "gcc/testsuite/gcc.dg/torture/pr87176.c", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2c51a3e358294b5ddfa522fa4d973c3360699b4/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr87176.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2c51a3e358294b5ddfa522fa4d973c3360699b4/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr87176.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr87176.c?ref=c2c51a3e358294b5ddfa522fa4d973c3360699b4", "patch": "@@ -0,0 +1,28 @@\n+/* { dg-do run } */\n+\n+int a, b, c;\n+\n+int main ()\n+{\n+  int d = a = 0;\n+  while (1)\n+    {\n+      a = a ^ 6;\n+      if (!a)\n+\tbreak;\n+      if (d)\n+\tgoto L;\n+      d = a;\n+      for (b = 0; b < 2; b++)\n+\t{\n+\t  const int *f[3] = { &c };\n+\t  const int **g[] = { &f[2] };\n+\t  int h = ~d;\n+\t  if (d)\n+\t    L:\n+\t\tif (h > 1)\n+\t\t  continue;\n+\t}\n+    }\n+  return 0;\n+}"}, {"sha": "15971223e01be44da2b1493b91432f5675c1fda0", "filename": "gcc/testsuite/gcc.dg/torture/ssa-fre-1.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2c51a3e358294b5ddfa522fa4d973c3360699b4/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fssa-fre-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2c51a3e358294b5ddfa522fa4d973c3360699b4/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fssa-fre-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fssa-fre-1.c?ref=c2c51a3e358294b5ddfa522fa4d973c3360699b4", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do compile } */\n+/* { dg-skip-if \"\" { *-*-* } { \"-O0\" } { \"\" } } */\n+/* { dg-additional-options \"-fstrict-aliasing -fdump-tree-fre1\" } */\n+\n+float f;\n+int foo(int *p, int *q)\n+{\n+  *p = 0;\n+  if (*p)\n+    *q = 1;\n+  else\n+    f = 8.0f;\n+  return *p;\n+}\n+\n+/* { dg-final { scan-tree-dump \"return 0;\" \"fre1\" } } */"}, {"sha": "8d68b6bac5995fcc4b45d3e5ae49ffb43d2f7f53", "filename": "gcc/tree-ssa-sccvn.c", "status": "modified", "additions": 21, "deletions": 10, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2c51a3e358294b5ddfa522fa4d973c3360699b4/gcc%2Ftree-ssa-sccvn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2c51a3e358294b5ddfa522fa4d973c3360699b4/gcc%2Ftree-ssa-sccvn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-sccvn.c?ref=c2c51a3e358294b5ddfa522fa4d973c3360699b4", "patch": "@@ -4110,11 +4110,11 @@ static bool\n visit_phi (gimple *phi, bool *inserted, bool backedges_varying_p)\n {\n   tree result, sameval = VN_TOP, seen_undef = NULL_TREE;\n-  tree backedge_name = NULL_TREE;\n+  tree backedge_val = NULL_TREE;\n+  bool seen_non_backedge = false;\n   tree sameval_base = NULL_TREE;\n   poly_int64 soff, doff;\n   unsigned n_executable = 0;\n-  bool allsame = true;\n   edge_iterator ei;\n   edge e;\n \n@@ -4139,11 +4139,13 @@ visit_phi (gimple *phi, bool *inserted, bool backedges_varying_p)\n \t++n_executable;\n \tif (TREE_CODE (def) == SSA_NAME)\n \t  {\n-\t    if (e->flags & EDGE_DFS_BACK)\n-\t      backedge_name = def;\n \t    if (!backedges_varying_p || !(e->flags & EDGE_DFS_BACK))\n \t      def = SSA_VAL (def);\n+\t    if (e->flags & EDGE_DFS_BACK)\n+\t      backedge_val = def;\n \t  }\n+\tif (!(e->flags & EDGE_DFS_BACK))\n+\t  seen_non_backedge = true;\n \tif (def == VN_TOP)\n \t  ;\n \t/* Ignore undefined defs for sameval but record one.  */\n@@ -4172,16 +4174,25 @@ visit_phi (gimple *phi, bool *inserted, bool backedges_varying_p)\n \t\t\t && known_eq (soff, doff))\n \t\t  continue;\n \t      }\n-\t    allsame = false;\n+\t    sameval = NULL_TREE;\n \t    break;\n \t  }\n       }\n \n   /* If the value we want to use is the backedge and that wasn't visited\n-     yet drop to VARYING.  */ \n-  if (backedge_name\n-      && sameval == backedge_name\n-      && !SSA_VISITED (backedge_name))\n+     yet drop to VARYING.  This only happens when not iterating.\n+     If we value-number a virtual operand never value-number to the\n+     value from the backedge as that confuses the alias-walking code.\n+     See gcc.dg/torture/pr87176.c.  If the value is the same on a\n+     non-backedge everything is OK though.  */\n+  if (backedge_val\n+      && !seen_non_backedge\n+      && TREE_CODE (backedge_val) == SSA_NAME\n+      && sameval == backedge_val\n+      && (SSA_NAME_IS_VIRTUAL_OPERAND (backedge_val)\n+\t  || !SSA_VISITED (backedge_val)))\n+    /* Note this just drops to VARYING without inserting the PHI into\n+       the hashes.  */\n     result = PHI_RESULT (phi);\n   /* If none of the edges was executable keep the value-number at VN_TOP,\n      if only a single edge is exectuable use its value.  */\n@@ -4212,7 +4223,7 @@ visit_phi (gimple *phi, bool *inserted, bool backedges_varying_p)\n   /* If all values are the same use that, unless we've seen undefined\n      values as well and the value isn't constant.\n      CCP/copyprop have the same restriction to not remove uninit warnings.  */\n-  else if (allsame\n+  else if (sameval\n \t   && (! seen_undef || is_gimple_min_invariant (sameval)))\n     result = sameval;\n   else"}]}