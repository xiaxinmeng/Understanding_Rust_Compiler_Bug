{"sha": "f63023fafbbc13545fef67e6b32a55b48a945fcf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjYzMDIzZmFmYmJjMTM1NDVmZWY2N2U2YjMyYTU1YjQ4YTk0NWZjZg==", "commit": {"author": {"name": "Alex Coplan", "email": "alex.coplan@arm.com", "date": "2020-09-30T08:02:47Z"}, "committer": {"name": "Alex Coplan", "email": "alex.coplan@arm.com", "date": "2020-09-30T08:02:47Z"}, "message": "arm: Fix ICEs in no-literal-pool.c on MVE [PR97251]\n\nThis patch fixes ICEs when compiling\ngcc/testsuite/gcc.target/arm/pure-code/no-literal-pool.c with\n-mfp16-format=ieee -mfloat-abi=hard -march=armv8.1-m.main+mve\n-mpure-code.\n\nThe existing conditions in the movsf/movdf expanders (as well as the\nno_literal_pool patterns) were too restrictive, requiring\nTARGET_HARD_FLOAT instead of TARGET_VFP_BASE, which caused unrecognised\ninsns when compiling this testcase with integer MVE and -mpure-code.\n\ngcc/ChangeLog:\n\n\tPR target/97251\n\t* config/arm/arm.md (movsf): Relax TARGET_HARD_FLOAT to\n\tTARGET_VFP_BASE.\n\t(movdf): Likewise.\n\t* config/arm/vfp.md (no_literal_pool_df_immediate): Likewise.\n\t(no_literal_pool_sf_immediate): Likewise.", "tree": {"sha": "d67c33c7e792a350dc2a042abba27a6aab21ff3e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d67c33c7e792a350dc2a042abba27a6aab21ff3e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f63023fafbbc13545fef67e6b32a55b48a945fcf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f63023fafbbc13545fef67e6b32a55b48a945fcf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f63023fafbbc13545fef67e6b32a55b48a945fcf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f63023fafbbc13545fef67e6b32a55b48a945fcf/comments", "author": {"login": "acoplan-arm", "id": 86676934, "node_id": "MDQ6VXNlcjg2Njc2OTM0", "avatar_url": "https://avatars.githubusercontent.com/u/86676934?v=4", "gravatar_id": "", "url": "https://api.github.com/users/acoplan-arm", "html_url": "https://github.com/acoplan-arm", "followers_url": "https://api.github.com/users/acoplan-arm/followers", "following_url": "https://api.github.com/users/acoplan-arm/following{/other_user}", "gists_url": "https://api.github.com/users/acoplan-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/acoplan-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/acoplan-arm/subscriptions", "organizations_url": "https://api.github.com/users/acoplan-arm/orgs", "repos_url": "https://api.github.com/users/acoplan-arm/repos", "events_url": "https://api.github.com/users/acoplan-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/acoplan-arm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "acoplan-arm", "id": 86676934, "node_id": "MDQ6VXNlcjg2Njc2OTM0", "avatar_url": "https://avatars.githubusercontent.com/u/86676934?v=4", "gravatar_id": "", "url": "https://api.github.com/users/acoplan-arm", "html_url": "https://github.com/acoplan-arm", "followers_url": "https://api.github.com/users/acoplan-arm/followers", "following_url": "https://api.github.com/users/acoplan-arm/following{/other_user}", "gists_url": "https://api.github.com/users/acoplan-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/acoplan-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/acoplan-arm/subscriptions", "organizations_url": "https://api.github.com/users/acoplan-arm/orgs", "repos_url": "https://api.github.com/users/acoplan-arm/repos", "events_url": "https://api.github.com/users/acoplan-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/acoplan-arm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "de2c1d00f27bfaa1f917a2e3a933a45e3b8ba95a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de2c1d00f27bfaa1f917a2e3a933a45e3b8ba95a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de2c1d00f27bfaa1f917a2e3a933a45e3b8ba95a"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "1a8e498ba4c34dbbf87b2b205adf6c5c0a74ca6c", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f63023fafbbc13545fef67e6b32a55b48a945fcf/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f63023fafbbc13545fef67e6b32a55b48a945fcf/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=f63023fafbbc13545fef67e6b32a55b48a945fcf", "patch": "@@ -7357,7 +7357,7 @@\n   if (arm_disable_literal_pool\n       && (REG_P (operands[0]) || SUBREG_P (operands[0]))\n       && CONST_DOUBLE_P (operands[1])\n-      && TARGET_HARD_FLOAT\n+      && TARGET_VFP_BASE\n       && !vfp3_const_double_rtx (operands[1]))\n     {\n       rtx clobreg = gen_reg_rtx (SFmode);\n@@ -7454,7 +7454,7 @@\n   if (arm_disable_literal_pool\n       && (REG_P (operands[0]) || SUBREG_P (operands[0]))\n       && CONSTANT_P (operands[1])\n-      && TARGET_HARD_FLOAT\n+      && TARGET_VFP_BASE\n       && !arm_const_double_rtx (operands[1])\n       && !(TARGET_VFP_DOUBLE && vfp3_const_double_rtx (operands[1])))\n     {"}, {"sha": "e6c287c1a8574a9452fde3d31956c9208b810aab", "filename": "gcc/config/arm/vfp.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f63023fafbbc13545fef67e6b32a55b48a945fcf/gcc%2Fconfig%2Farm%2Fvfp.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f63023fafbbc13545fef67e6b32a55b48a945fcf/gcc%2Fconfig%2Farm%2Fvfp.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fvfp.md?ref=f63023fafbbc13545fef67e6b32a55b48a945fcf", "patch": "@@ -2125,7 +2125,7 @@\n \t(match_operand:DF 1 \"const_double_operand\" \"F\"))\n    (clobber (match_operand:DF 2 \"s_register_operand\" \"=r\"))]\n   \"arm_disable_literal_pool\n-   && TARGET_HARD_FLOAT\n+   && TARGET_VFP_BASE\n    && !arm_const_double_rtx (operands[1])\n    && !(TARGET_VFP_DOUBLE && vfp3_const_double_rtx (operands[1]))\"\n   \"#\"\n@@ -2151,7 +2151,7 @@\n \t(match_operand:SF 1 \"const_double_operand\" \"E\"))\n    (clobber (match_operand:SF 2 \"s_register_operand\" \"=r\"))]\n   \"arm_disable_literal_pool\n-   && TARGET_HARD_FLOAT\n+   && TARGET_VFP_BASE\n    && !vfp3_const_double_rtx (operands[1])\"\n   \"#\"\n   \"\""}]}