{"sha": "b089937ac0257754ccc1eb0e9c9c88e4b77f610c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjA4OTkzN2FjMDI1Nzc1NGNjYzFlYjBlOWM5Yzg4ZTRiNzdmNjEwYw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-04-16T12:37:28Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-04-16T12:37:28Z"}, "message": "(expand_builtin, case BUILT_IN_LONGJMP): Make a decl for __dummy, so\nwe can call make_function_rtl on it.\n\nFrom-SVN: r11805", "tree": {"sha": "6bf30074749f37cc73792347f87df0ed12b0070d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6bf30074749f37cc73792347f87df0ed12b0070d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b089937ac0257754ccc1eb0e9c9c88e4b77f610c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b089937ac0257754ccc1eb0e9c9c88e4b77f610c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b089937ac0257754ccc1eb0e9c9c88e4b77f610c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b089937ac0257754ccc1eb0e9c9c88e4b77f610c/comments", "author": null, "committer": null, "parents": [{"sha": "b35cd3c16c6bcbeddfac00f6c2cfc8b83b14a372", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b35cd3c16c6bcbeddfac00f6c2cfc8b83b14a372", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b35cd3c16c6bcbeddfac00f6c2cfc8b83b14a372"}], "stats": {"total": 15, "additions": 11, "deletions": 4}, "files": [{"sha": "831be61836dfd3c7f55dbd25721915c3bd6679be", "filename": "gcc/expr.c", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b089937ac0257754ccc1eb0e9c9c88e4b77f610c/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b089937ac0257754ccc1eb0e9c9c88e4b77f610c/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=b089937ac0257754ccc1eb0e9c9c88e4b77f610c", "patch": "@@ -8672,6 +8672,9 @@ expand_builtin (exp, target, subtarget, mode, ignore)\n \tbreak;\n \n       {\n+\ttree dummy_id = get_identifier (\"__dummy\");\n+\ttree dummy_type = build_function_type (void_type_node, NULL_TREE);\n+\ttree dummy_decl = build_decl (FUNCTION_DECL, dummy_id, dummy_type); \n \trtx buf_addr\n \t  = force_reg (Pmode, expand_expr (TREE_VALUE (arglist), NULL_RTX,\n \t\t\t\t\t   VOIDmode, 0));\n@@ -8689,19 +8692,23 @@ expand_builtin (exp, target, subtarget, mode, ignore)\n \trtx stack = gen_rtx (MEM, sa_mode,\n \t\t\t     plus_constant (buf_addr,\n \t\t\t\t\t    2 * GET_MODE_SIZE (Pmode)));\n-\trtx value = gen_rtx (SYMBOL_REF, Pmode, \"__dummy\");\n+\n+\tDECL_EXTERNAL (dummy_decl) = 1;\n+\tTREE_PUBLIC (dummy_decl) = 1;\n+\tmake_decl_rtl (dummy_decl, NULL_PTR, 1);\n \n \t/* Expand the second expression just for side-effects.  */\n \texpand_expr (TREE_VALUE (TREE_CHAIN (arglist)),\n \t\t     const0_rtx, VOIDmode, 0);\n \n-\tassemble_external_libcall (value);\n+\tassemble_external (dummy_decl);\n \n \t/* Pick up FP, label, and SP from the block and jump.  This code is\n \t   from expand_goto in stmt.c; see there for detailed comments.  */\n #if HAVE_nonlocal_goto\n \tif (HAVE_nonlocal_goto)\n-\t  emit_insn (gen_nonlocal_goto (fp, lab, stack, value));\n+\t  emit_insn (gen_nonlocal_goto (fp, lab, stack,\n+\t\t\t\t\tXEXP (DECL_RTL (dummy_decl), 0)));\n       else\n #endif\n \t{\n@@ -8711,7 +8718,7 @@ expand_builtin (exp, target, subtarget, mode, ignore)\n \n \t  /* Put in the static chain register the address of the dummy\n \t     function.  */\n-\t  emit_move_insn (static_chain_rtx, value);\n+\t  emit_move_insn (static_chain_rtx, XEXP (DECL_RTL (dummy_decl), 0));\n \t  emit_insn (gen_rtx (USE, VOIDmode, hard_frame_pointer_rtx));\n \t  emit_insn (gen_rtx (USE, VOIDmode, stack_pointer_rtx));\n \t  emit_insn (gen_rtx (USE, VOIDmode, static_chain_rtx));"}]}