{"sha": "4e089a757d0e64a243ab54969d2dcb094f88e3a6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGUwODlhNzU3ZDBlNjRhMjQzYWI1NDk2OWQyZGNiMDk0Zjg4ZTNhNg==", "commit": {"author": {"name": "Ziemowit Laski", "email": "zlaski@apple.com", "date": "2001-12-04T00:25:20Z"}, "committer": {"name": "Ziemowit Laski", "email": "zlaski@gcc.gnu.org", "date": "2001-12-04T00:25:20Z"}, "message": "Make-lang.in: Update copyright.\n\n        * objc/Make-lang.in: Update copyright.\n        (OBJC_OBJS): Add objc-lang.o.\n        (objc-lang.o): New rule.\n        * objc/config-lang.in: Fix file description and update\n        copyright.\n        * objc/objc-act.c: Do not include langhooks.h and\n        langhooks-def.h\n        (lang_hooks): Move (along with LANG_HOOKS...) to objc-lang.c.\n        (objc_post_options): Move to objc-lang.c.\n        (objc_init_options): Move to objc-lang.c.\n        (objc_init): Make non-static.\n        (HASHFUNCTION): Remove macro.\n        (hash_func): New function.\n        (hash_enter): Replace HASHFUNCTION with hash_func.\n        (hash_lookup): Replace HASHFUNCTION with hash_func.\n        (maybe_objc_tree_codes): New function.\n        (init_objc): Move ObjC tree code initialization to\n        maybe_objc_tree_codes().\n        * objc/objc-act.h (GCC_OBJC_ACT_H): New include guard.\n        (objc_init): New public prototype.\n        (objc_decode_option): New public prototype.\n        (maybe_add_objc_tree_codes): New public prototype.\n        * objc/objc-lang.c: New file.\n        (lang_hooks): Moved from objc-act.c.\n        (objc_post_options): Moved from objc-act.c.\n        (objc_init_options): Moved from objc-act.c.\n\nFrom-SVN: r47575", "tree": {"sha": "d7559bc52fc1fa75f1a70224b1c1db1fc1998772", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d7559bc52fc1fa75f1a70224b1c1db1fc1998772"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4e089a757d0e64a243ab54969d2dcb094f88e3a6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e089a757d0e64a243ab54969d2dcb094f88e3a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e089a757d0e64a243ab54969d2dcb094f88e3a6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e089a757d0e64a243ab54969d2dcb094f88e3a6/comments", "author": null, "committer": null, "parents": [{"sha": "9904592eca02e2525bc70247c25b1aa54a5b3b99", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9904592eca02e2525bc70247c25b1aa54a5b3b99", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9904592eca02e2525bc70247c25b1aa54a5b3b99"}], "stats": {"total": 233, "additions": 163, "deletions": 70}, "files": [{"sha": "a88fb188f6da1de7a5efc242a4110c7706319df0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e089a757d0e64a243ab54969d2dcb094f88e3a6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e089a757d0e64a243ab54969d2dcb094f88e3a6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4e089a757d0e64a243ab54969d2dcb094f88e3a6", "patch": "@@ -1,3 +1,33 @@\n+2001-12-02  Ziemowit Laski  <zlaski@apple.com>\n+\n+\t* objc/Make-lang.in: Update copyright.\n+\t(OBJC_OBJS): Add objc-lang.o.\n+\t(objc-lang.o): New rule.\n+\t* objc/config-lang.in: Fix file description and update\n+\tcopyright.\n+\t* objc/objc-act.c: Do not include langhooks.h and\n+\tlanghooks-def.h\n+\t(lang_hooks): Move (along with LANG_HOOKS...) to objc-lang.c.\n+\t(objc_post_options): Move to objc-lang.c.\n+\t(objc_init_options): Move to objc-lang.c.\n+\t(objc_init): Make non-static.\n+\t(objc_decode_option): Make non-static.\n+\t(HASHFUNCTION): Remove macro.\n+\t(hash_func): New function.\n+\t(hash_enter): Replace HASHFUNCTION with hash_func.\n+\t(hash_lookup): Replace HASHFUNCTION with hash_func.\n+\t(maybe_objc_tree_codes): New function.\n+\t(init_objc): Move ObjC tree code initialization to\n+\tmaybe_objc_tree_codes().\n+\t* objc/objc-act.h (GCC_OBJC_ACT_H): New include guard.\n+\t(objc_init): New public prototype.\n+\t(objc_decode_option): New public prototype.\n+\t(maybe_add_objc_tree_codes): New public prototype.\n+\t* objc/objc-lang.c: New file.\n+\t(lang_hooks): Moved from objc-act.c.\n+\t(objc_post_options): Moved from objc-act.c.\n+\t(objc_init_options): Moved from objc-act.c.\n+\n 2001-12-03  Geoff Keating  <geoffk@redhat.com>\n \n \t* emit-rtl.c (gen_lowpart_common): Avoid unwanted sign-extension"}, {"sha": "6f48a919da9b3b5a80fcfed994d28a5710cadada", "filename": "gcc/objc/Make-lang.in", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e089a757d0e64a243ab54969d2dcb094f88e3a6/gcc%2Fobjc%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e089a757d0e64a243ab54969d2dcb094f88e3a6/gcc%2Fobjc%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2FMake-lang.in?ref=4e089a757d0e64a243ab54969d2dcb094f88e3a6", "patch": "@@ -1,5 +1,5 @@\n # Top level makefile fragment for GNU Objective-C\n-#   Copyright (C) 1997, 1998, 2000 Free Software Foundation, Inc.\n+#   Copyright (C) 1997, 1998, 2000, 2001 Free Software Foundation, Inc.\n \n #This file is part of GNU CC.\n \n@@ -48,13 +48,20 @@ OBJECTIVE-C objective-c: cc1obj$(exeext)\n objc-warn = $(STRICT_WARN)\n \n # Language-specific object files for Objective C.\n-OBJC_OBJS = objc-parse.o objc-act.o $(C_AND_OBJC_OBJS)\n+OBJC_OBJS = objc-lang.o objc-parse.o objc-act.o $(C_AND_OBJC_OBJS)\n \n cc1obj$(exeext): $(OBJC_OBJS) $(BACKEND) $(LIBDEPS)\n \t$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o $@ $(OBJC_OBJS) $(BACKEND) $(LIBS)\n \n # Objective C language specific files.\n \n+objc-lang.o : $(srcdir)/objc/objc-lang.c \\\n+   $(CONFIG_H) $(SYSTEM_H) $(TREE_H) $(srcdir)/c-tree.h \\\n+   $(srcdir)/c-common.h $(srcdir)/toplev.h $(srcdir)/objc/objc-act.h \\\n+   $(srcdir)/langhooks.h $(srcdir)/langhooks-def.h\n+\t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) -I$(srcdir)/objc \\\n+\t-c $(srcdir)/objc/objc-lang.c $(OUTPUT_OPTION)\n+\n objc-parse.o : $(srcdir)/objc/objc-parse.c \\\n    $(CONFIG_H) $(TREE_H) $(srcdir)/toplev.h $(srcdir)/ggc.h \\\n    $(srcdir)/c-lex.h $(srcdir)/c-tree.h $(srcdir)/c-common.h \\"}, {"sha": "9155d9d86599be2bcdf712a1e14406765b771d2d", "filename": "gcc/objc/config-lang.in", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e089a757d0e64a243ab54969d2dcb094f88e3a6/gcc%2Fobjc%2Fconfig-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e089a757d0e64a243ab54969d2dcb094f88e3a6/gcc%2Fobjc%2Fconfig-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fconfig-lang.in?ref=4e089a757d0e64a243ab54969d2dcb094f88e3a6", "patch": "@@ -1,5 +1,5 @@\n-# Top level configure fragment for the GNU Objective-C Runtime Library.\n-#   Copyright (C) 1997, 1998, 2000 Free Software Foundation, Inc.\n+# Top level configure fragment for GNU Objective-C\n+#   Copyright (C) 1997, 1998, 2000, 2001 Free Software Foundation, Inc.\n \n #This file is part of GNU CC.\n "}, {"sha": "a04f631e405caeca3fb48d4f07cf219d1b717890", "filename": "gcc/objc/objc-act.c", "status": "modified", "additions": 37, "deletions": 66, "changes": 103, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e089a757d0e64a243ab54969d2dcb094f88e3a6/gcc%2Fobjc%2Fobjc-act.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e089a757d0e64a243ab54969d2dcb094f88e3a6/gcc%2Fobjc%2Fobjc-act.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-act.c?ref=4e089a757d0e64a243ab54969d2dcb094f88e3a6", "patch": "@@ -59,8 +59,6 @@ Boston, MA 02111-1307, USA.  */\n #include \"debug.h\"\n #include \"target.h\"\n #include \"varray.h\"\n-#include \"langhooks.h\"\n-#include \"langhooks-def.h\"\n \n /* This is the default way of generating a method name.  */\n /* I am not sure it is really correct.\n@@ -157,10 +155,6 @@ char *util_firstobj;\n \n static void init_objc\t\t\t\tPARAMS ((void));\n static void finish_objc\t\t\t\tPARAMS ((void));\n-static const char *objc_init\t\t\tPARAMS ((const char *));\n-static void objc_init_options\t\t\tPARAMS ((void));\n-static int objc_decode_option\t\t\tPARAMS ((int, char **));\n-static void objc_post_options\t\t\tPARAMS ((void));\n \n /* Code generation.  */\n \n@@ -214,6 +208,7 @@ static void objc_expand_function_end            PARAMS ((void));\n hash *nst_method_hash_list = 0;\n hash *cls_method_hash_list = 0;\n \n+static size_t hash_func\t\t\t\tPARAMS ((tree));\n static void hash_init\t\t\t\tPARAMS ((void));\n static void hash_enter\t\t\t\tPARAMS ((hash *, tree));\n static hash hash_lookup\t\t\t\tPARAMS ((hash *, tree));\n@@ -276,6 +271,7 @@ static void dump_interface\t\t\tPARAMS ((FILE *, tree));\n \n /* Everything else.  */\n \n+static void add_objc_tree_codes\t\t\tPARAMS ((void));\n static tree define_decl\t\t\t\tPARAMS ((tree, tree));\n static tree lookup_method_in_protocol_list\tPARAMS ((tree, tree, int));\n static tree lookup_protocol_in_reflist\t\tPARAMS ((tree, tree));\n@@ -452,45 +448,8 @@ static int generating_instance_variables = 0;\n \n static int print_struct_values = 0;\n \n-#undef LANG_HOOKS_NAME\n-#define LANG_HOOKS_NAME \"GNU Objective-C\"\n-#undef LANG_HOOKS_INIT\n-#define LANG_HOOKS_INIT objc_init\n-#undef LANG_HOOKS_FINISH\n-#define LANG_HOOKS_FINISH c_common_finish\n-#undef LANG_HOOKS_INIT_OPTIONS\n-#define LANG_HOOKS_INIT_OPTIONS objc_init_options\n-#undef LANG_HOOKS_DECODE_OPTION\n-#define LANG_HOOKS_DECODE_OPTION objc_decode_option\n-#undef LANG_HOOKS_POST_OPTIONS\n-#define LANG_HOOKS_POST_OPTIONS objc_post_options\n-#undef LANG_HOOKS_PRINT_IDENTIFIER\n-#define LANG_HOOKS_PRINT_IDENTIFIER c_print_identifier\n-#undef LANG_HOOKS_SET_YYDEBUG\n-#define LANG_HOOKS_SET_YYDEBUG c_set_yydebug\n-/* Inlining hooks same as the C front end.  */\n-#undef LANG_HOOKS_TREE_INLINING_CANNOT_INLINE_TREE_FN\n-#define LANG_HOOKS_TREE_INLINING_CANNOT_INLINE_TREE_FN \\\n-  c_cannot_inline_tree_fn\n-#undef LANG_HOOKS_TREE_INLINING_DISREGARD_INLINE_LIMITS\n-#define LANG_HOOKS_TREE_INLINING_DISREGARD_INLINE_LIMITS \\\n-  c_disregard_inline_limits\n-#undef LANG_HOOKS_TREE_INLINING_ANON_AGGR_TYPE_P\n-#define LANG_HOOKS_TREE_INLINING_ANON_AGGR_TYPE_P \\\n-  anon_aggr_type_p\n-\n-/* Each front end provides its own.  */\n-const struct lang_hooks lang_hooks = LANG_HOOKS_INITIALIZER;\n-\n static varray_type deferred_fns;\n \n-/* Post-switch processing.  */\n-static void\n-objc_post_options ()\n-{\n-  c_common_post_options ();\n-}\n-\n /* Some platforms pass small structures through registers versus through\n    an invisible pointer.  Determine at what size structure is the \n    transition point between the two possibilities. */\n@@ -554,17 +513,12 @@ generate_struct_by_value_array ()\n   exit (0);\n }\n \n-static void\n-objc_init_options ()\n-{\n-  c_common_init_options (clk_objective_c);\n-}\n-\n-static const char *\n+const char *\n objc_init (filename)\n      const char *filename;\n {\n   filename = c_objc_common_init (filename);\n+  add_objc_tree_codes ();\n \n   decl_printable_name = objc_printable_name;\n \n@@ -647,7 +601,7 @@ finish_file ()\n     fclose (gen_declaration_file);\n }\n \n-static int\n+int\n objc_decode_option (argc, argv)\n      int argc;\n      char **argv;\n@@ -5314,9 +5268,22 @@ build_ivar_reference (id)\n \n   return build_component_ref (build_indirect_ref (self_decl, \"->\"), id);\n }\n-\f/* Make the hash value positive.  */\n-#define HASHFUNCTION(key)\t((size_t) key & 0x7fffffff)\n+\f\n+/* Compute a hash value for a given method SEL_NAME.  */\n \n+static size_t\n+hash_func (sel_name)\n+     tree sel_name;\n+{\n+  const unsigned char *s \n+    = (const unsigned char *)IDENTIFIER_POINTER (sel_name);\n+  size_t h = 0;\n+  \n+  while (*s)\n+    h = h * 67 + *s++ - 113;\n+  return h;  \n+}\n+     \n static void\n hash_init ()\n {\n@@ -5337,7 +5304,7 @@ hash_enter (hashlist, method)\n   static hash \thash_alloc_list = 0;\n   static int\thash_alloc_index = 0;\n   hash obj;\n-  int slot = HASHFUNCTION (METHOD_SEL_NAME (method)) % SIZEHASHTABLE;\n+  int slot = hash_func (METHOD_SEL_NAME (method)) % SIZEHASHTABLE;\n \n   if (! hash_alloc_list || hash_alloc_index >= HASH_ALLOC_LIST_SIZE)\n     {\n@@ -5360,7 +5327,7 @@ hash_lookup (hashlist, sel_name)\n {\n   hash target;\n \n-  target = hashlist[HASHFUNCTION (sel_name) % SIZEHASHTABLE];\n+  target = hashlist[hash_func (sel_name) % SIZEHASHTABLE];\n \n   while (target)\n     {\n@@ -8074,23 +8041,27 @@ objc_printable_name (decl, kind)\n   return objc_demangle (IDENTIFIER_POINTER (DECL_NAME (decl)));\n }\n \n+/* Adds the tree codes specific to the ObjC/ObjC++ front end to the\n+   list of all tree codes.  */\n+\n static void\n-init_objc ()\n+add_objc_tree_codes ()\n {\n-  /* Add the special tree codes of Objective C to the tables.  */\n-\n-  gcc_obstack_init (&util_obstack);\n-  util_firstobj = (char *) obstack_finish (&util_obstack);\n+  int add = (int) LAST_OBJC_TREE_CODE - (int) LAST_BASE_TREE_CODE;\n \n   memcpy (tree_code_type + (int) LAST_BASE_TREE_CODE,\n-\t  objc_tree_code_type,\n-\t  (int) LAST_OBJC_TREE_CODE - (int) LAST_BASE_TREE_CODE);\n+\t  objc_tree_code_type, add);\n   memcpy (tree_code_length + (int) LAST_BASE_TREE_CODE,\n-\t  objc_tree_code_length,\n-\t  (((int) LAST_OBJC_TREE_CODE - (int) LAST_BASE_TREE_CODE) * sizeof (int)));\n+\t  objc_tree_code_length, add * sizeof (int));\n   memcpy (tree_code_name + (int) LAST_BASE_TREE_CODE,\n-\t  objc_tree_code_name,\n-\t  (((int) LAST_OBJC_TREE_CODE - (int) LAST_BASE_TREE_CODE) * sizeof (char *)));\n+\t  objc_tree_code_name, add * sizeof (char *));\n+}\n+\n+static void\n+init_objc ()\n+{\n+  gcc_obstack_init (&util_obstack);\n+  util_firstobj = (char *) obstack_finish (&util_obstack);\n \n   errbuf = (char *)xmalloc (BUFSIZE);\n   hash_init ();"}, {"sha": "72b8b3e34b9261f9ac30e8531662019ab110e563", "filename": "gcc/objc/objc-act.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e089a757d0e64a243ab54969d2dcb094f88e3a6/gcc%2Fobjc%2Fobjc-act.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e089a757d0e64a243ab54969d2dcb094f88e3a6/gcc%2Fobjc%2Fobjc-act.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-act.h?ref=4e089a757d0e64a243ab54969d2dcb094f88e3a6", "patch": "@@ -18,9 +18,14 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n+#ifndef GCC_OBJC_ACT_H\n+#define GCC_OBJC_ACT_H\n \n /*** Public Interface (procedures) ***/\n \n+const char *objc_init\t\t\t\tPARAMS ((const char *));\n+int objc_decode_option\t\t\t\tPARAMS ((int, char **));\n+\n /* used by yyparse */\n \n void finish_file\t\t\t\tPARAMS ((void));\n@@ -353,3 +358,4 @@ extern tree objc_global_trees[OCTI_MAX];\n #define string_class_decl\tobjc_global_trees[OCTI_STRING_CLASS_DECL]\n #define UOBJC_SUPER_decl\tobjc_global_trees[OCTI_SUPER_DECL]\n \n+#endif /* GCC_OBJC_ACT_H */"}, {"sha": "33d2cde6ce35bea2e2d761025eb85ea89a43fb8b", "filename": "gcc/objc/objc-lang.c", "status": "added", "additions": 79, "deletions": 0, "changes": 79, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e089a757d0e64a243ab54969d2dcb094f88e3a6/gcc%2Fobjc%2Fobjc-lang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e089a757d0e64a243ab54969d2dcb094f88e3a6/gcc%2Fobjc%2Fobjc-lang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-lang.c?ref=4e089a757d0e64a243ab54969d2dcb094f88e3a6", "patch": "@@ -0,0 +1,79 @@\n+/* Language-dependent hooks for Objective-C.\n+   Copyright 2001 Free Software Foundation, Inc.\n+   Contributed by Ziemowit Laski  <zlaski@apple.com>\n+\n+This file is part of GNU CC.\n+\n+GNU CC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU CC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU CC; see the file COPYING.  If not, write to\n+the Free Software Foundation, 59 Temple Place - Suite 330,\n+Boston, MA 02111-1307, USA.  */\n+\n+#include \"config.h\"\n+#include \"system.h\"\n+#include \"tree.h\"\n+#include \"c-tree.h\"\n+#include \"c-common.h\"\n+#include \"toplev.h\"\n+#include \"objc-act.h\"\n+#include \"langhooks.h\"\n+#include \"langhooks-def.h\"\n+\n+static void objc_init_options                   PARAMS ((void));\n+static void objc_post_options                   PARAMS ((void));\n+\n+#undef LANG_HOOKS_NAME\n+#define LANG_HOOKS_NAME \"GNU Objective-C\"  \n+#undef LANG_HOOKS_INIT\n+#define LANG_HOOKS_INIT objc_init\n+#undef LANG_HOOKS_FINISH\n+#define LANG_HOOKS_FINISH c_common_finish\n+#undef LANG_HOOKS_INIT_OPTIONS\n+#define LANG_HOOKS_INIT_OPTIONS objc_init_options\n+#undef LANG_HOOKS_DECODE_OPTION\n+#define LANG_HOOKS_DECODE_OPTION objc_decode_option\n+#undef LANG_HOOKS_POST_OPTIONS\n+#define LANG_HOOKS_POST_OPTIONS objc_post_options\n+#undef LANG_HOOKS_PRINT_IDENTIFIER\n+#define LANG_HOOKS_PRINT_IDENTIFIER c_print_identifier\n+#undef LANG_HOOKS_SET_YYDEBUG\n+#define LANG_HOOKS_SET_YYDEBUG c_set_yydebug\n+/* Inlining hooks same as the C front end.  */\n+#undef LANG_HOOKS_TREE_INLINING_CANNOT_INLINE_TREE_FN\n+#define LANG_HOOKS_TREE_INLINING_CANNOT_INLINE_TREE_FN \\\n+  c_cannot_inline_tree_fn\n+#undef LANG_HOOKS_TREE_INLINING_DISREGARD_INLINE_LIMITS\n+#define LANG_HOOKS_TREE_INLINING_DISREGARD_INLINE_LIMITS \\\n+  c_disregard_inline_limits\n+#undef LANG_HOOKS_TREE_INLINING_ANON_AGGR_TYPE_P\n+#define LANG_HOOKS_TREE_INLINING_ANON_AGGR_TYPE_P \\\n+  anon_aggr_type_p\n+\n+/* Each front end provides its own hooks, for toplev.c.  */\n+const struct lang_hooks lang_hooks = LANG_HOOKS_INITIALIZER;\n+\n+static void \n+objc_init_options ()\n+{\n+  c_common_init_options (clk_objective_c);\n+} \n+\n+/* Post-switch processing.  */\n+\n+static void\n+objc_post_options ()\n+{\n+  c_common_post_options ();\n+}\n+\n+"}]}