{"sha": "60370fb12798f314c3fd4f8cbb557a4cc9a164c1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjAzNzBmYjEyNzk4ZjMxNGMzZmQ0ZjhjYmI1NTdhNGNjOWExNjRjMQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-29T13:01:34Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-29T13:01:34Z"}, "message": "[multiple changes]\n\n2011-08-29  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* s-finmas.adb (Finalize): Check Finalize_Address of the master rather\n\tthan the current node.\n\t* s-finmas.ads: Move field Finalize_Address from type FM_Node to\n\tFinalization_Master. The list headers have two fields instead of three.\n\tThis should fix alignment issue but subpool allocations are now\n\tunusable. Alphabetize subprograms.\n\t* s-stposu.adb (Allocate_Any_Controlled): Use the offset rather than\n\tthe size of the header when converting the beginning of the object to\n\ta FM_Node. Set the master's Finalize_Address attribute if not already\n\tset.\n\t(Deallocate_Any_Controlled): Use the offset rather than the size of the\n\theader when converting the beginning of the object to a FM_Node.\n\n2011-08-29  Gary Dismukes  <dismukes@adacore.com>\n\n\t* exp_ch11.adb (Expand_N_Raise_Statement): Don't suppress expansion of\n\treraise when compiling for CodePeer.\n\n2011-08-29  Arnaud Charlet  <charlet@adacore.com>\n\n\t* a-iteint.ads, Makefile.rtl: Add missing compilation of a-iteint.ads,\n\tnow needed by a-convec.adb. Fix warning.\n\n2011-08-29  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* exp_util.adb (Build_Allocate_Deallocate_Proc): Add a guard for the\n\tprocessing of TSS routine Finalize_Address when compiling in\n\tCodePeer_Mode.\n\n2011-08-29  Thomas Quinot  <quinot@adacore.com>\n\n\t* a-strunb.ads, einfo.ads, g-comlin.ads, sem_ch6.adb,\n\tsem_warn.adb: Minor reformatting.\n\n2011-08-29  Emmanuel Briot  <briot@adacore.com>\n\n\t* prj-conf.adb (Get_Config_Switches): Also collect the list of\n\tlanguages from aggregated projects.\n\n2011-08-29  Yannick Moy  <moy@adacore.com>\n\n\t* lib-xref-alfa.adb, lib-xref.ads (Traverse_Declarations_Or_Statements,\n\tTraverse_Handled_Statement_Sequence, Traverse_Package_Body,\n\tTraverse_Package_Declaration, Traverse_Subprogram_Body,\n\tTraverse_Compilation_Unit): Add a parameter Inside_Stubs so that bodies\n\tfor stubs are traversed too when parameter is set\n\t(Traverse_All_Compilation_Units): Traverse without going inside stubs\n\t(Traverse_Declarations_Or_Statements): Do the special traversing for\n\tstubs when required.\n\t* sem_util.adb, sem_util.ads (Get_Body_From_Stub): New function to\n\treturn subprogram or package body from stub.\n\t(Is_Subprogram_Stub_Without_Prior_Declaration): New function to detect\n\tstubs without prior subprogram decl.\n\n2011-08-29  Vasiliy Fofanov  <fofanov@adacore.com>\n\n\t* gnat_ugn.texi: Fix typo.\n\nFrom-SVN: r178219", "tree": {"sha": "7412f8c28844cfbce864ebf8faec6233f94235e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7412f8c28844cfbce864ebf8faec6233f94235e8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/60370fb12798f314c3fd4f8cbb557a4cc9a164c1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60370fb12798f314c3fd4f8cbb557a4cc9a164c1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/60370fb12798f314c3fd4f8cbb557a4cc9a164c1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60370fb12798f314c3fd4f8cbb557a4cc9a164c1/comments", "author": null, "committer": null, "parents": [{"sha": "e9c9d12236905df71cc9d5132d9fb632fb8f269e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9c9d12236905df71cc9d5132d9fb632fb8f269e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e9c9d12236905df71cc9d5132d9fb632fb8f269e"}], "stats": {"total": 412, "additions": 287, "deletions": 125}, "files": [{"sha": "3d4853fe7ad66ddfab498b5b6d51870ee6421115", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 60, "deletions": 0, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60370fb12798f314c3fd4f8cbb557a4cc9a164c1/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60370fb12798f314c3fd4f8cbb557a4cc9a164c1/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=60370fb12798f314c3fd4f8cbb557a4cc9a164c1", "patch": "@@ -1,3 +1,63 @@\n+2011-08-29  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* s-finmas.adb (Finalize): Check Finalize_Address of the master rather\n+\tthan the current node.\n+\t* s-finmas.ads: Move field Finalize_Address from type FM_Node to\n+\tFinalization_Master. The list headers have two fields instead of three.\n+\tThis should fix alignment issue but subpool allocations are now\n+\tunusable. Alphabetize subprograms.\n+\t* s-stposu.adb (Allocate_Any_Controlled): Use the offset rather than\n+\tthe size of the header when converting the beginning of the object to\n+\ta FM_Node. Set the master's Finalize_Address attribute if not already\n+\tset.\n+\t(Deallocate_Any_Controlled): Use the offset rather than the size of the\n+\theader when converting the beginning of the object to a FM_Node.\n+\n+2011-08-29  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* exp_ch11.adb (Expand_N_Raise_Statement): Don't suppress expansion of\n+\treraise when compiling for CodePeer.\n+\n+2011-08-29  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* a-iteint.ads, Makefile.rtl: Add missing compilation of a-iteint.ads,\n+\tnow needed by a-convec.adb. Fix warning.\n+\n+2011-08-29  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* exp_util.adb (Build_Allocate_Deallocate_Proc): Add a guard for the\n+\tprocessing of TSS routine Finalize_Address when compiling in\n+\tCodePeer_Mode.\n+\n+2011-08-29  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* a-strunb.ads, einfo.ads, g-comlin.ads, sem_ch6.adb,\n+\tsem_warn.adb: Minor reformatting.\n+\n+2011-08-29  Emmanuel Briot  <briot@adacore.com>\n+\n+\t* prj-conf.adb (Get_Config_Switches): Also collect the list of\n+\tlanguages from aggregated projects.\n+\n+2011-08-29  Yannick Moy  <moy@adacore.com>\n+\n+\t* lib-xref-alfa.adb, lib-xref.ads (Traverse_Declarations_Or_Statements,\n+\tTraverse_Handled_Statement_Sequence, Traverse_Package_Body,\n+\tTraverse_Package_Declaration, Traverse_Subprogram_Body,\n+\tTraverse_Compilation_Unit): Add a parameter Inside_Stubs so that bodies\n+\tfor stubs are traversed too when parameter is set\n+\t(Traverse_All_Compilation_Units): Traverse without going inside stubs\n+\t(Traverse_Declarations_Or_Statements): Do the special traversing for\n+\tstubs when required.\n+\t* sem_util.adb, sem_util.ads (Get_Body_From_Stub): New function to\n+\treturn subprogram or package body from stub.\n+\t(Is_Subprogram_Stub_Without_Prior_Declaration): New function to detect\n+\tstubs without prior subprogram decl.\n+\n+2011-08-29  Vasiliy Fofanov  <fofanov@adacore.com>\n+\n+\t* gnat_ugn.texi: Fix typo.\n+\n 2011-08-29  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* s-stposu.adb (Allocate_Any_Controlled): Reimplement the mechanism"}, {"sha": "3115cb7a80ec5433e3ce3819024440b4e2e65eae", "filename": "gcc/ada/Makefile.rtl", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60370fb12798f314c3fd4f8cbb557a4cc9a164c1/gcc%2Fada%2FMakefile.rtl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60370fb12798f314c3fd4f8cbb557a4cc9a164c1/gcc%2Fada%2FMakefile.rtl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FMakefile.rtl?ref=60370fb12798f314c3fd4f8cbb557a4cc9a164c1", "patch": "@@ -161,6 +161,7 @@ GNATRTL_NONTASKING_OBJS= \\\n   a-fzteio$(objext) \\\n   a-inteio$(objext) \\\n   a-ioexce$(objext) \\\n+  a-iteint$(objext) \\\n   a-iwteio$(objext) \\\n   a-izteio$(objext) \\\n   a-lcteio$(objext) \\"}, {"sha": "192bdcb430b166b4612c1fcaec4af50197c9b4a3", "filename": "gcc/ada/a-iteint.ads", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60370fb12798f314c3fd4f8cbb557a4cc9a164c1/gcc%2Fada%2Fa-iteint.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60370fb12798f314c3fd4f8cbb557a4cc9a164c1/gcc%2Fada%2Fa-iteint.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-iteint.ads?ref=60370fb12798f314c3fd4f8cbb557a4cc9a164c1", "patch": "@@ -33,6 +33,7 @@\n generic\n    type Cursor;\n    with function Has_Element (Position : Cursor) return Boolean;\n+   pragma Unreferenced (Has_Element);\n package Ada.Iterator_Interfaces is\n    pragma Pure;\n "}, {"sha": "334146665ae46a280c6d1ff071756480151fad5f", "filename": "gcc/ada/a-strunb.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60370fb12798f314c3fd4f8cbb557a4cc9a164c1/gcc%2Fada%2Fa-strunb.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60370fb12798f314c3fd4f8cbb557a4cc9a164c1/gcc%2Fada%2Fa-strunb.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-strunb.ads?ref=60370fb12798f314c3fd4f8cbb557a4cc9a164c1", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -433,5 +433,5 @@ private\n    Null_Unbounded_String : constant Unbounded_String :=\n                              (AF.Controlled with\n                                 Reference => Null_String'Access,\n-                                Last => 0);\n+                                Last      => 0);\n end Ada.Strings.Unbounded;"}, {"sha": "c60fdd1aeb02a7a85430333379ae565267b1c3eb", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60370fb12798f314c3fd4f8cbb557a4cc9a164c1/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60370fb12798f314c3fd4f8cbb557a4cc9a164c1/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=60370fb12798f314c3fd4f8cbb557a4cc9a164c1", "patch": "@@ -1237,10 +1237,10 @@ package Einfo is\n --       representation pragmas nodes and representation clause nodes that\n --       apply to the entity, linked using Next_Rep_Item, with Empty marking\n --       the end of the list. In the case of derived types and subtypes, the\n---       new entity inherits the chain at the point of declaration. This\n---       means that it is possible to have multiple instances of the same\n---       kind of rep item on the chain, in which case it is the first one\n---       that applies to the entity.\n+--       new entity inherits the chain at the point of declaration. This means\n+--       that it is possible to have multiple instances of the same kind of rep\n+--       item on the chain, in which case it is the first one that applies to\n+--       the entity.\n --\n --       Note: pragmas that can apply to more than one overloadable entity,\n --       (Convention, Interface, Inline, Inline_Always, Import, Export,\n@@ -1260,8 +1260,8 @@ package Einfo is\n --          Linker_Section pragma\n --          Weak_External pragma\n --\n---       If any of these items are present, then the flag Has_Gigi_Rep_Item\n---       is set, indicating that Gigi should search the chain.\n+--       If any of these items are present, then the flag Has_Gigi_Rep_Item is\n+--       set, indicating that Gigi should search the chain.\n --\n --       Other representation items are included in the chain so that error\n --       messages can easily locate the relevant nodes for posting errors.\n@@ -1274,10 +1274,10 @@ package Einfo is\n --       the floating-point representation to be used.\n \n --    Freeze_Node (Node7)\n---       Present in all entities. If there is an associated freeze node for\n---       the entity, this field references this freeze node. If no freeze\n---       node is associated with the entity, then this field is Empty. See\n---       package Freeze for further details.\n+--       Present in all entities. If there is an associated freeze node for the\n+--       entity, this field references this freeze node. If no freeze node is\n+--       associated with the entity, then this field is Empty. See package\n+--       Freeze for further details.\n \n --    From_With_Type (Flag159)\n --       Present in package and type entities. Indicates that the entity\n@@ -3265,7 +3265,7 @@ package Einfo is\n \n --    Package_Instantiation (Node26)\n --       Present in packages and generic packages. When present, this field\n---       references an N_Package_Instantiation node associated with an\n+--       references an N_Generic_Instantiation node associated with an\n --       instantiated package. In the case where the referenced node has\n --       been rewritten to an N_Package_Specification, the instantiation\n --       node is available from the Original_Node field of the package spec"}, {"sha": "ceca349d05848ec3205928e75d5dbc55ab7f1e64", "filename": "gcc/ada/exp_ch11.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60370fb12798f314c3fd4f8cbb557a4cc9a164c1/gcc%2Fada%2Fexp_ch11.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60370fb12798f314c3fd4f8cbb557a4cc9a164c1/gcc%2Fada%2Fexp_ch11.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch11.adb?ref=60370fb12798f314c3fd4f8cbb557a4cc9a164c1", "patch": "@@ -1666,9 +1666,11 @@ package body Exp_Ch11 is\n \n       else\n \n-         --  Don't expand if back end exception handling active\n+         --  Bypass expansion to a run-time call when back-end exception\n+         --  handling is active, unless the target is a VM or CodePeer.\n \n          if VM_Target = No_VM\n+           and then not CodePeer_Mode\n            and then Exception_Mechanism = Back_End_Exceptions\n          then\n             return;"}, {"sha": "d712570d920edb0207de04fbb590e2fd81713ac4", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60370fb12798f314c3fd4f8cbb557a4cc9a164c1/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60370fb12798f314c3fd4f8cbb557a4cc9a164c1/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=60370fb12798f314c3fd4f8cbb557a4cc9a164c1", "patch": "@@ -628,9 +628,13 @@ package body Exp_Util is\n \n             --  d) Finalize_Address\n \n-            Fin_Addr_Id := Find_Finalize_Address (Desig_Typ);\n+            --  Primitive Finalize_Address is never generated in CodePeer mode\n+            --  since it contains an Unchecked_Conversion.\n \n-            if Needs_Finalization (Desig_Typ) then\n+            if Needs_Finalization (Desig_Typ)\n+              and then not CodePeer_Mode\n+            then\n+               Fin_Addr_Id := Find_Finalize_Address (Desig_Typ);\n                pragma Assert (Present (Fin_Addr_Id));\n \n                Append_To (Actuals,"}, {"sha": "ec842800386cabb4b52a03e99a351a7d54c64bea", "filename": "gcc/ada/g-comlin.ads", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60370fb12798f314c3fd4f8cbb557a4cc9a164c1/gcc%2Fada%2Fg-comlin.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60370fb12798f314c3fd4f8cbb557a4cc9a164c1/gcc%2Fada%2Fg-comlin.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-comlin.ads?ref=60370fb12798f314c3fd4f8cbb557a4cc9a164c1", "patch": "@@ -492,11 +492,12 @@ package GNAT.Command_Line is\n \n    Invalid_Parameter : exception;\n    --  Raised when a parameter is missing, or an attempt is made to obtain a\n-   --  parameter for a switch that does not allow a parameter\n+   --  parameter for a switch that does not allow a parameter.\n \n    -----------------------------------------\n    -- Expansion of command line arguments --\n    -----------------------------------------\n+\n    --  These subprograms take care of of expanding globbing patterns on the\n    --  command line. On Unix, such expansion is done by the shell before your\n    --  application is called. But on Windows you must do this expansion"}, {"sha": "def9349d4e9746c4abb74b50633aaaeed618529e", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60370fb12798f314c3fd4f8cbb557a4cc9a164c1/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60370fb12798f314c3fd4f8cbb557a4cc9a164c1/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=60370fb12798f314c3fd4f8cbb557a4cc9a164c1", "patch": "@@ -21373,7 +21373,7 @@ information about several specific platforms.\n @item @code{@ @ @ @ }Tasking    @tab native Win32 threads\n @item @code{@ @ @ @ }Exceptions @tab ZCX\n @*\n-@item @code{@ @ }@i{rts-sjlj (default)}\n+@item @code{@ @ }@i{rts-sjlj}\n @item @code{@ @ @ @ }Tasking    @tab native Win32 threads\n @item @code{@ @ @ @ }Exceptions @tab SJLJ\n @*"}, {"sha": "75dea7f12ec59fb355b0a91bd00f4bfcb44d983b", "filename": "gcc/ada/lib-xref-alfa.adb", "status": "modified", "additions": 87, "deletions": 46, "changes": 133, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60370fb12798f314c3fd4f8cbb557a4cc9a164c1/gcc%2Fada%2Flib-xref-alfa.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60370fb12798f314c3fd4f8cbb557a4cc9a164c1/gcc%2Fada%2Flib-xref-alfa.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-xref-alfa.adb?ref=60370fb12798f314c3fd4f8cbb557a4cc9a164c1", "patch": "@@ -165,20 +165,25 @@ package body ALFA is\n    --  Hash function for hash table\n \n    procedure Traverse_Declarations_Or_Statements\n-     (L       : List_Id;\n-      Process : Node_Processing);\n+     (L            : List_Id;\n+      Process      : Node_Processing;\n+      Inside_Stubs : Boolean);\n    procedure Traverse_Handled_Statement_Sequence\n-     (N       : Node_Id;\n-      Process : Node_Processing);\n+     (N            : Node_Id;\n+      Process      : Node_Processing;\n+      Inside_Stubs : Boolean);\n    procedure Traverse_Package_Body\n-     (N       : Node_Id;\n-      Process : Node_Processing);\n+     (N            : Node_Id;\n+      Process      : Node_Processing;\n+      Inside_Stubs : Boolean);\n    procedure Traverse_Package_Declaration\n-     (N       : Node_Id;\n-      Process : Node_Processing);\n+     (N            : Node_Id;\n+      Process      : Node_Processing;\n+      Inside_Stubs : Boolean);\n    procedure Traverse_Subprogram_Body\n-     (N       : Node_Id;\n-      Process : Node_Processing);\n+     (N            : Node_Id;\n+      Process      : Node_Processing;\n+      Inside_Stubs : Boolean);\n    --  Traverse the corresponding constructs, calling Process on all\n    --  declarations.\n \n@@ -201,7 +206,8 @@ package body ALFA is\n \n       From := ALFA_Scope_Table.Last + 1;\n \n-      Traverse_Compilation_Unit (Cunit (U), Detect_And_Add_ALFA_Scope'Access);\n+      Traverse_Compilation_Unit (Cunit (U), Detect_And_Add_ALFA_Scope'Access,\n+                                 Inside_Stubs => False);\n \n       --  Update scope numbers\n \n@@ -904,7 +910,7 @@ package body ALFA is\n    procedure Traverse_All_Compilation_Units (Process : Node_Processing) is\n    begin\n       for U in Units.First .. Last_Unit loop\n-         Traverse_Compilation_Unit (Cunit (U), Process);\n+         Traverse_Compilation_Unit (Cunit (U), Process, Inside_Stubs => False);\n       end loop;\n    end Traverse_All_Compilation_Units;\n \n@@ -913,8 +919,9 @@ package body ALFA is\n    -------------------------------\n \n    procedure Traverse_Compilation_Unit\n-     (CU      : Node_Id;\n-      Process : Node_Processing)\n+     (CU           : Node_Id;\n+      Process      : Node_Processing;\n+      Inside_Stubs : Boolean)\n    is\n       Lu : Node_Id;\n \n@@ -938,16 +945,16 @@ package body ALFA is\n       --  Traverse the unit\n \n       if Nkind (Lu) = N_Subprogram_Body then\n-         Traverse_Subprogram_Body (Lu, Process);\n+         Traverse_Subprogram_Body (Lu, Process, Inside_Stubs);\n \n       elsif Nkind (Lu) = N_Subprogram_Declaration then\n          null;\n \n       elsif Nkind (Lu) = N_Package_Declaration then\n-         Traverse_Package_Declaration (Lu, Process);\n+         Traverse_Package_Declaration (Lu, Process, Inside_Stubs);\n \n       elsif Nkind (Lu) = N_Package_Body then\n-         Traverse_Package_Body (Lu, Process);\n+         Traverse_Package_Body (Lu, Process, Inside_Stubs);\n \n       --  ??? TBD\n \n@@ -972,8 +979,9 @@ package body ALFA is\n    -----------------------------------------\n \n    procedure Traverse_Declarations_Or_Statements\n-     (L       : List_Id;\n-      Process : Node_Processing)\n+     (L            : List_Id;\n+      Process      : Node_Processing;\n+      Inside_Stubs : Boolean)\n    is\n       N : Node_Id;\n \n@@ -996,7 +1004,7 @@ package body ALFA is\n             --  Package declaration\n \n             when N_Package_Declaration =>\n-               Traverse_Package_Declaration (N, Process);\n+               Traverse_Package_Declaration (N, Process, Inside_Stubs);\n \n             --  Generic package declaration ??? TBD\n \n@@ -1007,9 +1015,21 @@ package body ALFA is\n \n             when N_Package_Body =>\n                if Ekind (Defining_Entity (N)) /= E_Generic_Package then\n-                  Traverse_Package_Body (N, Process);\n+                  Traverse_Package_Body (N, Process, Inside_Stubs);\n                end if;\n \n+            when N_Package_Body_Stub =>\n+               declare\n+                  Body_N : constant Node_Id := Get_Body_From_Stub (N);\n+               begin\n+                  if Inside_Stubs\n+                    and then\n+                      Ekind (Defining_Entity (Body_N)) /= E_Generic_Package\n+                  then\n+                     Traverse_Package_Body (Body_N, Process, Inside_Stubs);\n+                  end if;\n+               end;\n+\n             --  Subprogram declaration\n \n             when N_Subprogram_Declaration =>\n@@ -1024,22 +1044,35 @@ package body ALFA is\n \n             when N_Subprogram_Body =>\n                if not Is_Generic_Subprogram (Defining_Entity (N)) then\n-                  Traverse_Subprogram_Body (N, Process);\n+                  Traverse_Subprogram_Body (N, Process, Inside_Stubs);\n                end if;\n \n+            when N_Subprogram_Body_Stub =>\n+               declare\n+                  Body_N : constant Node_Id := Get_Body_From_Stub (N);\n+               begin\n+                  if Inside_Stubs\n+                    and then\n+                      not Is_Generic_Subprogram (Defining_Entity (Body_N))\n+                  then\n+                     Traverse_Subprogram_Body (Body_N, Process, Inside_Stubs);\n+                  end if;\n+               end;\n+\n             --  Block statement\n \n             when N_Block_Statement =>\n-               Traverse_Declarations_Or_Statements (Declarations (N), Process);\n+               Traverse_Declarations_Or_Statements\n+                 (Declarations (N), Process, Inside_Stubs);\n                Traverse_Handled_Statement_Sequence\n-                 (Handled_Statement_Sequence (N), Process);\n+                 (Handled_Statement_Sequence (N), Process, Inside_Stubs);\n \n             when N_If_Statement =>\n \n                --  Traverse the statements in the THEN part\n \n                Traverse_Declarations_Or_Statements\n-                 (Then_Statements (N), Process);\n+                 (Then_Statements (N), Process, Inside_Stubs);\n \n                --  Loop through ELSIF parts if present\n \n@@ -1050,7 +1083,7 @@ package body ALFA is\n                   begin\n                      while Present (Elif) loop\n                         Traverse_Declarations_Or_Statements\n-                          (Then_Statements (Elif), Process);\n+                          (Then_Statements (Elif), Process, Inside_Stubs);\n                         Next (Elif);\n                      end loop;\n                   end;\n@@ -1059,7 +1092,7 @@ package body ALFA is\n                --  Finally traverse the ELSE statements if present\n \n                Traverse_Declarations_Or_Statements\n-                 (Else_Statements (N), Process);\n+                 (Else_Statements (N), Process, Inside_Stubs);\n \n             --  Case statement\n \n@@ -1073,7 +1106,7 @@ package body ALFA is\n                   Alt := First (Alternatives (N));\n                   while Present (Alt) loop\n                      Traverse_Declarations_Or_Statements\n-                       (Statements (Alt), Process);\n+                       (Statements (Alt), Process, Inside_Stubs);\n                      Next (Alt);\n                   end loop;\n                end;\n@@ -1082,12 +1115,13 @@ package body ALFA is\n \n             when N_Extended_Return_Statement =>\n                Traverse_Handled_Statement_Sequence\n-                 (Handled_Statement_Sequence (N), Process);\n+                 (Handled_Statement_Sequence (N), Process, Inside_Stubs);\n \n             --  Loop\n \n             when N_Loop_Statement =>\n-               Traverse_Declarations_Or_Statements (Statements (N), Process);\n+               Traverse_Declarations_Or_Statements\n+                 (Statements (N), Process, Inside_Stubs);\n \n             when others =>\n                null;\n@@ -1102,20 +1136,22 @@ package body ALFA is\n    -----------------------------------------\n \n    procedure Traverse_Handled_Statement_Sequence\n-     (N       : Node_Id;\n-      Process : Node_Processing)\n+     (N            : Node_Id;\n+      Process      : Node_Processing;\n+      Inside_Stubs : Boolean)\n    is\n       Handler : Node_Id;\n \n    begin\n       if Present (N) then\n-         Traverse_Declarations_Or_Statements (Statements (N), Process);\n+         Traverse_Declarations_Or_Statements\n+           (Statements (N), Process, Inside_Stubs);\n \n          if Present (Exception_Handlers (N)) then\n             Handler := First (Exception_Handlers (N));\n             while Present (Handler) loop\n                Traverse_Declarations_Or_Statements\n-                 (Statements (Handler), Process);\n+                 (Statements (Handler), Process, Inside_Stubs);\n                Next (Handler);\n             end loop;\n          end if;\n@@ -1127,41 +1163,46 @@ package body ALFA is\n    ---------------------------\n \n    procedure Traverse_Package_Body\n-     (N       : Node_Id;\n-      Process : Node_Processing) is\n+     (N            : Node_Id;\n+      Process      : Node_Processing;\n+      Inside_Stubs : Boolean) is\n    begin\n-      Traverse_Declarations_Or_Statements (Declarations (N), Process);\n+      Traverse_Declarations_Or_Statements\n+        (Declarations (N), Process, Inside_Stubs);\n       Traverse_Handled_Statement_Sequence\n-        (Handled_Statement_Sequence (N), Process);\n+        (Handled_Statement_Sequence (N), Process, Inside_Stubs);\n    end Traverse_Package_Body;\n \n    ----------------------------------\n    -- Traverse_Package_Declaration --\n    ----------------------------------\n \n    procedure Traverse_Package_Declaration\n-     (N       : Node_Id;\n-      Process : Node_Processing)\n+     (N            : Node_Id;\n+      Process      : Node_Processing;\n+      Inside_Stubs : Boolean)\n    is\n       Spec : constant Node_Id := Specification (N);\n    begin\n       Traverse_Declarations_Or_Statements\n-        (Visible_Declarations (Spec), Process);\n+        (Visible_Declarations (Spec), Process, Inside_Stubs);\n       Traverse_Declarations_Or_Statements\n-        (Private_Declarations (Spec), Process);\n+        (Private_Declarations (Spec), Process, Inside_Stubs);\n    end Traverse_Package_Declaration;\n \n    ------------------------------\n    -- Traverse_Subprogram_Body --\n    ------------------------------\n \n    procedure Traverse_Subprogram_Body\n-     (N       : Node_Id;\n-      Process : Node_Processing) is\n+     (N            : Node_Id;\n+      Process      : Node_Processing;\n+      Inside_Stubs : Boolean) is\n    begin\n-      Traverse_Declarations_Or_Statements (Declarations (N), Process);\n+      Traverse_Declarations_Or_Statements\n+        (Declarations (N), Process, Inside_Stubs);\n       Traverse_Handled_Statement_Sequence\n-        (Handled_Statement_Sequence (N), Process);\n+        (Handled_Statement_Sequence (N), Process, Inside_Stubs);\n    end Traverse_Subprogram_Body;\n \n end ALFA;"}, {"sha": "60c4b357817f2c20011c0def9ffe50adf77f2d4f", "filename": "gcc/ada/lib-xref.ads", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60370fb12798f314c3fd4f8cbb557a4cc9a164c1/gcc%2Fada%2Flib-xref.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60370fb12798f314c3fd4f8cbb557a4cc9a164c1/gcc%2Fada%2Flib-xref.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-xref.ads?ref=60370fb12798f314c3fd4f8cbb557a4cc9a164c1", "patch": "@@ -593,8 +593,9 @@ package Lib.Xref is\n       type Node_Processing is access procedure (N : Node_Id);\n \n       procedure Traverse_Compilation_Unit\n-        (CU      : Node_Id;\n-         Process : Node_Processing);\n+        (CU           : Node_Id;\n+         Process      : Node_Processing;\n+         Inside_Stubs : Boolean);\n \n       procedure Traverse_All_Compilation_Units (Process : Node_Processing);\n       --  Call Process on all declarations through all compilation units"}, {"sha": "c6e37ee3da9f2c55fc2e237ddd262368aed0a323", "filename": "gcc/ada/prj-conf.adb", "status": "modified", "additions": 44, "deletions": 26, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60370fb12798f314c3fd4f8cbb557a4cc9a164c1/gcc%2Fada%2Fprj-conf.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60370fb12798f314c3fd4f8cbb557a4cc9a164c1/gcc%2Fada%2Fprj-conf.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-conf.adb?ref=60370fb12798f314c3fd4f8cbb557a4cc9a164c1", "patch": "@@ -722,28 +722,32 @@ package body Prj.Conf is\n          --  Hash table to keep the languages used in the project tree\n \n          IDE : constant Package_Id :=\n-                 Value_Of (Name_Ide, Project.Decl.Packages, Shared);\n-\n-         Prj_Iter : Project_List;\n-         List     : String_List_Id;\n-         Elem     : String_Element;\n-         Lang     : Name_Id;\n-         Variable : Variable_Value;\n-         Name     : Name_Id;\n-         Count    : Natural;\n-         Result   : Argument_List_Access;\n-\n-         Check_Default : Boolean;\n-\n-      begin\n-         Prj_Iter := Project_Tree.Projects;\n-         while Prj_Iter /= null loop\n-            if Might_Have_Sources (Prj_Iter.Project) then\n+           Value_Of (Name_Ide, Project.Decl.Packages, Shared);\n+\n+         procedure Add_Config_Switches_For_Project\n+           (Project    : Project_Id;\n+            Tree       : Project_Tree_Ref;\n+            With_State : in out Integer);\n+         --  Add all --config switches for this project. This is also called\n+         --  for aggregate projects.\n+\n+         procedure Add_Config_Switches_For_Project\n+           (Project    : Project_Id;\n+            Tree       : Project_Tree_Ref;\n+            With_State : in out Integer)\n+         is\n+            pragma Unreferenced (With_State);\n+            Shared : constant Shared_Project_Tree_Data_Access := Tree.Shared;\n+\n+            Variable      : Variable_Value;\n+            Check_Default : Boolean;\n+            Lang          : Name_Id;\n+            List          : String_List_Id;\n+            Elem          : String_Element;\n+         begin\n+            if Might_Have_Sources (Project) then\n                Variable :=\n-                 Value_Of\n-                   (Name_Languages,\n-                    Prj_Iter.Project.Decl.Attributes,\n-                    Shared);\n+                 Value_Of (Name_Languages, Project.Decl.Attributes, Shared);\n \n                if Variable = Nil_Variable_Value\n                  or else Variable.Default\n@@ -752,13 +756,13 @@ package body Prj.Conf is\n                   --  project, or if it extends a project with no Languages,\n                   --  check for Default_Language.\n \n-                  Check_Default := Prj_Iter.Project.Extends = No_Project;\n+                  Check_Default := Project.Extends = No_Project;\n \n                   if not Check_Default then\n                      Variable :=\n                        Value_Of\n                          (Name_Languages,\n-                          Prj_Iter.Project.Extends.Decl.Attributes,\n+                          Project.Extends.Decl.Attributes,\n                           Shared);\n                      Check_Default :=\n                        Variable /= Nil_Variable_Value\n@@ -769,7 +773,7 @@ package body Prj.Conf is\n                      Variable :=\n                        Value_Of\n                          (Name_Default_Language,\n-                          Prj_Iter.Project.Decl.Attributes,\n+                          Project.Decl.Attributes,\n                           Shared);\n \n                      if Variable /= Nil_Variable_Value\n@@ -805,9 +809,23 @@ package body Prj.Conf is\n                   end loop;\n                end if;\n             end if;\n+         end Add_Config_Switches_For_Project;\n \n-            Prj_Iter := Prj_Iter.Next;\n-         end loop;\n+         procedure For_Every_Imported_Project is new For_Every_Project_Imported\n+           (State => Integer, Action => Add_Config_Switches_For_Project);\n+\n+         Name     : Name_Id;\n+         Count    : Natural;\n+         Result   : Argument_List_Access;\n+         Variable : Variable_Value;\n+         Dummy    : Integer := 0;\n+\n+      begin\n+         For_Every_Imported_Project\n+           (By         => Project,\n+            Tree       => Project_Tree,\n+            With_State => Dummy,\n+            Include_Aggregated => True);\n \n          Name  := Language_Htable.Get_First;\n          Count := 0;"}, {"sha": "71dbeb8ab34642944d85011d55c80616d5ed7922", "filename": "gcc/ada/s-finmas.adb", "status": "modified", "additions": 16, "deletions": 20, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60370fb12798f314c3fd4f8cbb557a4cc9a164c1/gcc%2Fada%2Fs-finmas.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60370fb12798f314c3fd4f8cbb557a4cc9a164c1/gcc%2Fada%2Fs-finmas.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-finmas.adb?ref=60370fb12798f314c3fd4f8cbb557a4cc9a164c1", "patch": "@@ -128,27 +128,23 @@ package body System.Finalization_Masters is\n \n       Curr_Ptr := Master.Objects.Next;\n       while Curr_Ptr /= Master.Objects'Unchecked_Access loop\n+\n+         --  If primitive Finalize_Address is not set, then the expansion of\n+         --  the designated type or that of the allocator failed. This is a\n+         --  serious error.\n+\n+         if Master.Finalize_Address = null then\n+            raise Program_Error\n+              with \"primitive Finalize_Address not available\";\n+         end if;\n+\n+         --  Skip the list header in order to offer proper object layout for\n+         --  finalization and call Finalize_Address.\n+\n+         Obj_Addr := Curr_Ptr.all'Address + Header_Offset;\n+\n          begin\n-            --  If primitive Finalize_Address is not set, then the expansion of\n-            --  the designated type or that of the allocator failed. This is a\n-            --  serious error.\n-\n-            --  Note: The Program_Error must be raised from the same block as\n-            --  the finalization call. If Finalize_Address is not present for\n-            --  a particular object, this should not stop the finalization of\n-            --  the remaining objects.\n-\n-            if Curr_Ptr.Finalize_Address = null then\n-               raise Program_Error\n-                 with \"primitive Finalize_Address not available\";\n-\n-            --  Skip the list header in order to offer proper object layout for\n-            --  finalization and call Finalize_Address.\n-\n-            else\n-               Obj_Addr := Curr_Ptr.all'Address + Header_Offset;\n-               Curr_Ptr.Finalize_Address (Obj_Addr);\n-            end if;\n+            Master.Finalize_Address (Obj_Addr);\n \n          exception\n             when Fin_Occur : others =>"}, {"sha": "3932021b734fa772bbd6b4a568d4e348ff24b75d", "filename": "gcc/ada/s-finmas.ads", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60370fb12798f314c3fd4f8cbb557a4cc9a164c1/gcc%2Fada%2Fs-finmas.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60370fb12798f314c3fd4f8cbb557a4cc9a164c1/gcc%2Fada%2Fs-finmas.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-finmas.ads?ref=60370fb12798f314c3fd4f8cbb557a4cc9a164c1", "patch": "@@ -56,9 +56,8 @@ package System.Finalization_Masters is\n    type FM_Node_Ptr is access all FM_Node;\n \n    type FM_Node is record\n-      Prev             : FM_Node_Ptr := null;\n-      Next             : FM_Node_Ptr := null;\n-      Finalize_Address : Finalize_Address_Ptr := null;\n+      Prev : FM_Node_Ptr := null;\n+      Next : FM_Node_Ptr := null;\n    end record;\n \n    --  A reference to any derivation from Root_Storage_Pool. Since this type\n@@ -83,6 +82,9 @@ package System.Finalization_Masters is\n       --  A doubly linked list which contains the headers of all controlled\n       --  objects allocated in a [sub]pool.\n \n+      Finalize_Address : Finalize_Address_Ptr := null;\n+      --  A reference to the routine reponsible for object finalization\n+\n       Finalization_Started : Boolean := False;\n       pragma Atomic (Finalization_Started);\n       --  A flag used to detect allocations which occur during the finalization\n@@ -120,12 +122,12 @@ package System.Finalization_Masters is\n    --  the list of allocated controlled objects, finalizing each one by calling\n    --  its specific Finalize_Address. In the end, deallocate the dummy head.\n \n-   function Header_Size return System.Storage_Elements.Storage_Count;\n-   --  Return the size of type FM_Node as Storage_Count\n-\n    function Header_Offset return System.Storage_Elements.Storage_Offset;\n    --  Return the size of type FM_Node as Storage_Offset\n \n+   function Header_Size return System.Storage_Elements.Storage_Count;\n+   --  Return the size of type FM_Node as Storage_Count\n+\n    overriding procedure Initialize (Master : in out Finalization_Master);\n    --  Initialize the dummy head of a finalization master\n "}, {"sha": "4fb0b96cc01a103d922a55d3d3fb8da679cb4c39", "filename": "gcc/ada/s-stposu.adb", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60370fb12798f314c3fd4f8cbb557a4cc9a164c1/gcc%2Fada%2Fs-stposu.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60370fb12798f314c3fd4f8cbb557a4cc9a164c1/gcc%2Fada%2Fs-stposu.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-stposu.adb?ref=60370fb12798f314c3fd4f8cbb557a4cc9a164c1", "patch": "@@ -247,10 +247,12 @@ package body System.Storage_Pools.Subpools is\n          --     |                       |\n          --     +- Header_And_Padding --+\n \n-         N_Ptr :=\n-           Address_To_FM_Node_Ptr (N_Addr + Header_And_Padding - Header_Size);\n+         N_Ptr := Address_To_FM_Node_Ptr\n+                   (N_Addr + Header_And_Padding - Header_Offset);\n \n-         N_Ptr.Finalize_Address := Fin_Address;\n+         if Master.Finalize_Address = null then\n+            Master.Finalize_Address := Fin_Address;\n+         end if;\n \n          --  Prepend the allocated object to the finalization master\n \n@@ -334,7 +336,7 @@ package body System.Storage_Pools.Subpools is\n \n          --  Convert the bits preceding the object into a list header\n \n-         N_Ptr := Address_To_FM_Node_Ptr (Addr - Header_Size);\n+         N_Ptr := Address_To_FM_Node_Ptr (Addr - Header_Offset);\n \n          --  Detach the object from the related finalization master. This\n          --  action does not need to know the prior context used during"}, {"sha": "a4b0c3ce05ba8b96c19a3b08bedb6b0271776a65", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60370fb12798f314c3fd4f8cbb557a4cc9a164c1/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60370fb12798f314c3fd4f8cbb557a4cc9a164c1/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=60370fb12798f314c3fd4f8cbb557a4cc9a164c1", "patch": "@@ -4716,7 +4716,7 @@ package body Sem_Ch6 is\n                --  Grouping (use of comma in param lists) must be the same\n                --  This is where we catch a misconformance like:\n \n-               --    A,B : Integer\n+               --    A, B : Integer\n                --    A : Integer; B : Integer\n \n                --  which are represented identically in the tree except"}, {"sha": "e6730f20bc77e6f50e48646d2fd7989d22db083c", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60370fb12798f314c3fd4f8cbb557a4cc9a164c1/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60370fb12798f314c3fd4f8cbb557a4cc9a164c1/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=60370fb12798f314c3fd4f8cbb557a4cc9a164c1", "patch": "@@ -4168,6 +4168,15 @@ package body Sem_Util is\n       end if;\n    end Get_Actual_Subtype_If_Available;\n \n+   ------------------------\n+   -- Get_Body_From_Stub --\n+   ------------------------\n+\n+   function Get_Body_From_Stub (N : Node_Id) return Node_Id is\n+   begin\n+      return Proper_Body (Unit (Library_Unit (N)));\n+   end Get_Body_From_Stub;\n+\n    -------------------------------\n    -- Get_Default_External_Name --\n    -------------------------------\n@@ -7939,6 +7948,22 @@ package body Sem_Util is\n           or else Nkind (N) = N_Procedure_Call_Statement;\n    end Is_Statement;\n \n+   --------------------------------------------------\n+   -- Is_Subprogram_Stub_Without_Prior_Declaration --\n+   --------------------------------------------------\n+\n+   function Is_Subprogram_Stub_Without_Prior_Declaration\n+     (N : Node_Id) return Boolean is\n+\n+   begin\n+      --  A subprogram stub without prior declaration serves as declaration for\n+      --  the actual subprogram body. As such, it has an attached defining\n+      --  entity of E_[Generic_]Function or E_[Generic_]Procedure.\n+\n+      return Nkind (N) = N_Subprogram_Body_Stub\n+        and then Ekind (Defining_Entity (N)) /= E_Subprogram_Body;\n+   end Is_Subprogram_Stub_Without_Prior_Declaration;\n+\n    ---------------------------------\n    -- Is_Synchronized_Tagged_Type --\n    ---------------------------------"}, {"sha": "bc36fb228f05a1b55134458b3b86dceb507326c9", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60370fb12798f314c3fd4f8cbb557a4cc9a164c1/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60370fb12798f314c3fd4f8cbb557a4cc9a164c1/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=60370fb12798f314c3fd4f8cbb557a4cc9a164c1", "patch": "@@ -479,6 +479,9 @@ package Sem_Util is\n    --  Actual_Subtype field of the corresponding entity is set, then it is\n    --  returned. Otherwise the Etype of the node is returned.\n \n+   function Get_Body_From_Stub (N : Node_Id) return Node_Id;\n+   --  Return the body node for a stub (subprogram or package)\n+\n    function Get_Default_External_Name (E : Node_Or_Entity_Id) return Node_Id;\n    --  This is used to construct the string literal node representing a\n    --  default external name, i.e. one that is constructed from the name of an\n@@ -884,6 +887,11 @@ package Sem_Util is\n    --  the N_Statement_Other_Than_Procedure_Call subtype from Sinfo).\n    --  Note that a label is *not* a statement, and will return False.\n \n+   function Is_Subprogram_Stub_Without_Prior_Declaration\n+     (N : Node_Id) return Boolean;\n+   --  Return True if N is a subprogram stub with no prior subprogram\n+   --  declaration.\n+\n    function Is_Synchronized_Tagged_Type (E : Entity_Id) return Boolean;\n    --  Returns True if E is a synchronized tagged type (AARM 3.9.4 (6/2))\n "}, {"sha": "044efd872e8c0f3dd385ecfeb968eb257ac0a298", "filename": "gcc/ada/sem_warn.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60370fb12798f314c3fd4f8cbb557a4cc9a164c1/gcc%2Fada%2Fsem_warn.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60370fb12798f314c3fd4f8cbb557a4cc9a164c1/gcc%2Fada%2Fsem_warn.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_warn.adb?ref=60370fb12798f314c3fd4f8cbb557a4cc9a164c1", "patch": "@@ -3340,12 +3340,12 @@ package body Sem_Warn is\n                         if Is_Elementary_Type (Etype (Act1))\n                           and then Ekind (Form2) = E_In_Parameter\n                         then\n-                           null;  --  no real aliasing.\n+                           null;  --  No real aliasing\n \n                         elsif Is_Elementary_Type (Etype (Act2))\n                           and then Ekind (Form2) = E_In_Parameter\n                         then\n-                           null;  --  ditto\n+                           null;  --  Ditto\n \n                         --  If the call was written in prefix notation, and\n                         --  thus its prefix before rewriting was a selected"}]}