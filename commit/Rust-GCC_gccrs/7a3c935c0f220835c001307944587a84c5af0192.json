{"sha": "7a3c935c0f220835c001307944587a84c5af0192", "node_id": "C_kwDOANBUbNoAKDdhM2M5MzVjMGYyMjA4MzVjMDAxMzA3OTQ0NTg3YTg0YzVhZjAxOTI", "commit": {"author": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2022-03-04T13:45:34Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2022-03-07T12:06:20Z"}, "message": "Check if this constant item might already be compiled", "tree": {"sha": "e11d47ff68f7a251e283ff7e3e8094f1b21b8c9f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e11d47ff68f7a251e283ff7e3e8094f1b21b8c9f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7a3c935c0f220835c001307944587a84c5af0192", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a3c935c0f220835c001307944587a84c5af0192", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a3c935c0f220835c001307944587a84c5af0192", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a3c935c0f220835c001307944587a84c5af0192/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "366c53371ad40025984a98e01b02d452d49816aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/366c53371ad40025984a98e01b02d452d49816aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/366c53371ad40025984a98e01b02d452d49816aa"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "21cbb1ce905595d51e615bfe54569eb467a3819c", "filename": "gcc/rust/backend/rust-compile-item.cc", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a3c935c0f220835c001307944587a84c5af0192/gcc%2Frust%2Fbackend%2Frust-compile-item.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a3c935c0f220835c001307944587a84c5af0192/gcc%2Frust%2Fbackend%2Frust-compile-item.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fbackend%2Frust-compile-item.cc?ref=7a3c935c0f220835c001307944587a84c5af0192", "patch": "@@ -73,6 +73,10 @@ CompileItem::visit (HIR::StaticItem &var)\n void\n CompileItem::visit (HIR::ConstantItem &constant)\n {\n+  if (ctx->lookup_const_decl (constant.get_mappings ().get_hirid (),\n+\t\t\t      &reference))\n+    return;\n+\n   // resolve the type\n   TyTy::BaseType *resolved_type = nullptr;\n   bool ok"}]}