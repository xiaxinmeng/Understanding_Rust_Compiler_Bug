{"sha": "09177a4b3c97ed5864a631cfeba7b63cc5dc013f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDkxNzdhNGIzYzk3ZWQ1ODY0YTYzMWNmZWJhN2I2M2NjNWRjMDEzZg==", "commit": {"author": {"name": "Tom de Vries", "email": "tom@codesourcery.com", "date": "2017-05-04T07:54:59Z"}, "committer": {"name": "Tom de Vries", "email": "vries@gcc.gnu.org", "date": "2017-05-04T07:54:59Z"}, "message": "Replace absolute line numbers in gcc.target/i386\n\n2017-05-04  Tom de Vries  <tom@codesourcery.com>\n\n\tPR testsuite/80557\n\t* gcc.target/i386/pr57655.c: Replace absolute line numbers.\n\t* gcc.target/i386/pr68657.c: Same.\n\t* gcc.target/i386/pr69255-1.c: Same.\n\t* gcc.target/i386/pr69255-2.c: Same.\n\t* gcc.target/i386/pr69255-3.c: Same.\n\nFrom-SVN: r247579", "tree": {"sha": "169983ed98ef2d47bd3535e238965f9d491546e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/169983ed98ef2d47bd3535e238965f9d491546e3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/09177a4b3c97ed5864a631cfeba7b63cc5dc013f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09177a4b3c97ed5864a631cfeba7b63cc5dc013f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/09177a4b3c97ed5864a631cfeba7b63cc5dc013f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09177a4b3c97ed5864a631cfeba7b63cc5dc013f/comments", "author": null, "committer": null, "parents": [{"sha": "02c6414935bddf1c2d0ee6d3a659874d062d04bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02c6414935bddf1c2d0ee6d3a659874d062d04bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/02c6414935bddf1c2d0ee6d3a659874d062d04bb"}], "stats": {"total": 32, "additions": 18, "deletions": 14}, "files": [{"sha": "8bf91a8006839ca21537d98d4e5d7f8b3778ee68", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09177a4b3c97ed5864a631cfeba7b63cc5dc013f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09177a4b3c97ed5864a631cfeba7b63cc5dc013f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=09177a4b3c97ed5864a631cfeba7b63cc5dc013f", "patch": "@@ -1,3 +1,12 @@\n+2017-05-04  Tom de Vries  <tom@codesourcery.com>\n+\n+\tPR testsuite/80557\n+\t* gcc.target/i386/pr57655.c: Replace absolute line numbers.\n+\t* gcc.target/i386/pr68657.c: Same.\n+\t* gcc.target/i386/pr69255-1.c: Same.\n+\t* gcc.target/i386/pr69255-2.c: Same.\n+\t* gcc.target/i386/pr69255-3.c: Same.\n+\n 2017-05-04  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/31130"}, {"sha": "33a59d3a2634edc7fb3f0bcb71b61435cd428687", "filename": "gcc/testsuite/gcc.target/i386/pr57655.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09177a4b3c97ed5864a631cfeba7b63cc5dc013f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr57655.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09177a4b3c97ed5864a631cfeba7b63cc5dc013f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr57655.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr57655.c?ref=09177a4b3c97ed5864a631cfeba7b63cc5dc013f", "patch": "@@ -1,10 +1,8 @@\n /* { dg-do compile } */\n-/* { dg-options \"-mavx -mvzeroupper -mno-fp-ret-in-387\" }\n-\n-/* { dg-error \"x87 register return with x87 disabled\" \"\" { target { ! ia32 } } 8 } */\n+/* { dg-options \"-mavx -mvzeroupper -mno-fp-ret-in-387\" } */\n \n long double\n foo (long double x)\n-{\n+{ /* { dg-error \"x87 register return with x87 disabled\" \"\" { target { ! ia32 } } } */\n   return __builtin_ilogbl (x);\n }"}, {"sha": "fcfb489a061963deb658fe1f0b542833f5a198c0", "filename": "gcc/testsuite/gcc.target/i386/pr68657.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09177a4b3c97ed5864a631cfeba7b63cc5dc013f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr68657.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09177a4b3c97ed5864a631cfeba7b63cc5dc013f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr68657.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr68657.c?ref=09177a4b3c97ed5864a631cfeba7b63cc5dc013f", "patch": "@@ -4,12 +4,12 @@\n typedef int V __attribute__((vector_size (64)));\n \n void foo (V x, V *y) {\t/* { dg-error \"AVX512F vector argument without AVX512F enabled\" } */\n+  /* { dg-message \"The ABI for passing parameters with 64-byte alignment has changed\" \"\" { target *-*-* } .-1 } */\n   *y = x;\n }\n \n V bar (V *x) {\t\t/* { dg-error \"AVX512F vector return without AVX512F enabled\" } */\n   return *x;\n }\n \n-/* { dg-message \"The ABI for passing parameters with 64-byte alignment has changed\" \"\" { target *-*-* } 6 } */\n /* { dg-message \"some warnings being treated as errors\" \"\" { target *-*-* } 0 } */"}, {"sha": "4545ce2149be3a71f610da3e747cfd3e721498d7", "filename": "gcc/testsuite/gcc.target/i386/pr69255-1.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09177a4b3c97ed5864a631cfeba7b63cc5dc013f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr69255-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09177a4b3c97ed5864a631cfeba7b63cc5dc013f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr69255-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr69255-1.c?ref=09177a4b3c97ed5864a631cfeba7b63cc5dc013f", "patch": "@@ -13,7 +13,6 @@ void\n foo (const long long *p)\n {\n   a = __builtin_ia32_gather3siv4di (a, p, b, 1, 1);\t/* { dg-error \"needs isa option -m32 -mavx512vl\" } */\n+  /* { dg-warning \"AVX vector return without AVX enabled changes the ABI\" \"\" { target *-*-* } .-1 } */\n+  /* { dg-warning \"AVX vector argument without AVX enabled changes the ABI\" \"\" { target *-*-* } .-2 } */\n }\n-\n-/* { dg-warning \"AVX vector return without AVX enabled changes the ABI\" \"\" { target *-*-* } 15 } */\n-/* { dg-warning \"AVX vector argument without AVX enabled changes the ABI\" \"\" { target *-*-* } 15 } */"}, {"sha": "ebe6828e188642e4e9ebb7cdd2764949773b6988", "filename": "gcc/testsuite/gcc.target/i386/pr69255-2.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09177a4b3c97ed5864a631cfeba7b63cc5dc013f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr69255-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09177a4b3c97ed5864a631cfeba7b63cc5dc013f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr69255-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr69255-2.c?ref=09177a4b3c97ed5864a631cfeba7b63cc5dc013f", "patch": "@@ -13,7 +13,6 @@ void\n foo (const long long *p)\n {\n   __builtin_ia32_gather3siv4di (a, p, b, 1, 1);\t\t/* { dg-error \"needs isa option -m32 -mavx512vl\" } */\n+  /* { dg-warning \"AVX vector return without AVX enabled changes the ABI\" \"\" { target *-*-* } .-1 } */\n+  /* { dg-warning \"AVX vector argument without AVX enabled changes the ABI\" \"\" { target *-*-* } .-2 } */\n }\n-\n-/* { dg-warning \"AVX vector return without AVX enabled changes the ABI\" \"\" { target *-*-* } 15 } */\n-/* { dg-warning \"AVX vector argument without AVX enabled changes the ABI\" \"\" { target *-*-* } 15 } */"}, {"sha": "724e40b98b6a8d7051f51edc119480ec64bcfd9a", "filename": "gcc/testsuite/gcc.target/i386/pr69255-3.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/09177a4b3c97ed5864a631cfeba7b63cc5dc013f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr69255-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/09177a4b3c97ed5864a631cfeba7b63cc5dc013f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr69255-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr69255-3.c?ref=09177a4b3c97ed5864a631cfeba7b63cc5dc013f", "patch": "@@ -13,7 +13,6 @@ void\n foo (const long long *p, __attribute__ ((__vector_size__ (32))) long long *q)\n {\n   *q = __builtin_ia32_gather3siv4di (a, p, b, 1, 1);\t/* { dg-error \"needs isa option -m32 -mavx512vl\" } */\n+  /* { dg-warning \"AVX vector return without AVX enabled changes the ABI\" \"\" { target *-*-* } .-1 } */\n+  /* { dg-warning \"AVX vector argument without AVX enabled changes the ABI\" \"\" { target *-*-* } .-2 } */\n }\n-\n-/* { dg-warning \"AVX vector return without AVX enabled changes the ABI\" \"\" { target *-*-* } 15 } */\n-/* { dg-warning \"AVX vector argument without AVX enabled changes the ABI\" \"\" { target *-*-* } 15 } */"}]}