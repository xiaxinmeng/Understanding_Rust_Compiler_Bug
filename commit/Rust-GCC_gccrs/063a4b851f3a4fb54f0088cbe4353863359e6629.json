{"sha": "063a4b851f3a4fb54f0088cbe4353863359e6629", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDYzYTRiODUxZjNhNGZiNTRmMDA4OGNiZTQzNTM4NjMzNTllNjYyOQ==", "commit": {"author": {"name": "Zack Weinberg", "email": "zack@wolery.cumb.org", "date": "2000-06-21T00:27:53Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2000-06-21T00:27:53Z"}, "message": "configure.in: Use 'test a = b' not 'test a == b'.\n\n\t* configure.in: Use 'test a = b' not 'test a == b'.\n\t* configure: Regen.\n\nFrom-SVN: r34624", "tree": {"sha": "c780844726735633cf58566202cdb0bdc7b6fe24", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c780844726735633cf58566202cdb0bdc7b6fe24"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/063a4b851f3a4fb54f0088cbe4353863359e6629", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/063a4b851f3a4fb54f0088cbe4353863359e6629", "html_url": "https://github.com/Rust-GCC/gccrs/commit/063a4b851f3a4fb54f0088cbe4353863359e6629", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/063a4b851f3a4fb54f0088cbe4353863359e6629/comments", "author": null, "committer": null, "parents": [{"sha": "6650a443a830b419596bbcb858684cc57f26dd8f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6650a443a830b419596bbcb858684cc57f26dd8f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6650a443a830b419596bbcb858684cc57f26dd8f"}], "stats": {"total": 13, "additions": 8, "deletions": 5}, "files": [{"sha": "dd502a822e15bcd2ab0e27347765faae01d0bd76", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/063a4b851f3a4fb54f0088cbe4353863359e6629/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/063a4b851f3a4fb54f0088cbe4353863359e6629/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=063a4b851f3a4fb54f0088cbe4353863359e6629", "patch": "@@ -1,5 +1,8 @@\n 2000-06-20  Zack Weinberg  <zack@wolery.cumb.org>\n \n+\t* configure.in: Use 'test a = b' not 'test a == b'.\n+\t* configure: Regen.\n+\n \t* Makefile.in (fix-header): Link with $(LIBS) not $(HOST_LIBS).\n \n \t* Makefile.in: Remove all references to HOST_INTLLIBS."}, {"sha": "e5272df9cf8a383d31089d48dd4d09209613cf22", "filename": "gcc/configure", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/063a4b851f3a4fb54f0088cbe4353863359e6629/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/063a4b851f3a4fb54f0088cbe4353863359e6629/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=063a4b851f3a4fb54f0088cbe4353863359e6629", "patch": "@@ -1445,7 +1445,7 @@ for ac_kw in inline __inline__ __inline; do\n #include \"confdefs.h\"\n \n int main() {\n-} $ac_kw foo() {\n+} int $ac_kw foo() {\n ; return 0; }\n EOF\n if { (eval echo configure:1452: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n@@ -6923,7 +6923,7 @@ fi\n # if cross compiling, disable NLS support.\n # It's not worth the trouble, at least for now.\n \n-if test \"${build}\" != \"${host}\" && test \"x$enable_nls\" == \"xyes\"; then\n+if test \"${build}\" != \"${host}\" && test \"x$enable_nls\" = \"xyes\"; then\n   echo \"configure: warning: Disabling NLS support for canadian cross compiler.\" 1>&2\n   enable_nls=no\n fi\n@@ -6983,7 +6983,7 @@ else\n int main() {\n \n /* Ultrix mips cc rejects this.  */\n-typedef int charset[2]; const charset x;\n+typedef int charset[2]; const charset x = {0,0};\n /* SunOS 4.1.1 cc rejects this.  */\n char const *const *ccp;\n char **p;\n@@ -7124,7 +7124,7 @@ else\n #include \"confdefs.h\"\n #include <alloca.h>\n int main() {\n-char *p = alloca(2 * sizeof(int));\n+void *p = alloca(2 * sizeof(int));\n ; return 0; }\n EOF\n if { (eval echo configure:7131: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then"}, {"sha": "d2b5b3007addfc1bd3e3c5caa4b4ef2a3238a089", "filename": "gcc/configure.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/063a4b851f3a4fb54f0088cbe4353863359e6629/gcc%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/063a4b851f3a4fb54f0088cbe4353863359e6629/gcc%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.in?ref=063a4b851f3a4fb54f0088cbe4353863359e6629", "patch": "@@ -4117,7 +4117,7 @@ AC_ARG_ENABLE(nls,\n # if cross compiling, disable NLS support.\n # It's not worth the trouble, at least for now.\n \n-if test \"${build}\" != \"${host}\" && test \"x$enable_nls\" == \"xyes\"; then\n+if test \"${build}\" != \"${host}\" && test \"x$enable_nls\" = \"xyes\"; then\n   AC_MSG_WARN(Disabling NLS support for canadian cross compiler.)\n   enable_nls=no\n fi"}]}