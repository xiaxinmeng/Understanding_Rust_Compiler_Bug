{"sha": "3ba358bf20a292e277df4de02b2f57c203e627cc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2JhMzU4YmYyMGEyOTJlMjc3ZGY0ZGUwMmIyZjU3YzIwM2U2MjdjYw==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2017-06-29T19:21:25Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2017-06-29T19:21:25Z"}, "message": "expr.c (expand_expr): When testing for unaligned objects...\n\n\t* expr.c (expand_expr) <normal_inner_ref>: When testing for unaligned\n\tobjects, take into account only the alignment of 'op0' and 'mode1' if\n\t'op0' is a MEM.\n\nFrom-SVN: r249811", "tree": {"sha": "55e1d6b786135609443047541d2d9148636913b0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/55e1d6b786135609443047541d2d9148636913b0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3ba358bf20a292e277df4de02b2f57c203e627cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ba358bf20a292e277df4de02b2f57c203e627cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ba358bf20a292e277df4de02b2f57c203e627cc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ba358bf20a292e277df4de02b2f57c203e627cc/comments", "author": null, "committer": null, "parents": [{"sha": "74582a3e2e01068437410fb75f2f9282ee4923e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74582a3e2e01068437410fb75f2f9282ee4923e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/74582a3e2e01068437410fb75f2f9282ee4923e3"}], "stats": {"total": 16, "additions": 11, "deletions": 5}, "files": [{"sha": "4f8868bc8bea68dbb49894105d623243c5b01e00", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ba358bf20a292e277df4de02b2f57c203e627cc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ba358bf20a292e277df4de02b2f57c203e627cc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3ba358bf20a292e277df4de02b2f57c203e627cc", "patch": "@@ -1,3 +1,9 @@\n+2017-06-29  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* expr.c (expand_expr) <normal_inner_ref>: When testing for unaligned\n+\tobjects, take into account only the alignment of 'op0' and 'mode1' if\n+\t'op0' is a MEM.\n+\n 2017-06-29  Steve Ellcey  <sellcey@cavium.com>\n \n \t* ccmp.c (ccmp_tree_comparison_p): New function."}, {"sha": "0e8216ba7d00652ff0fe8558aacacf5783631c07", "filename": "gcc/expr.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ba358bf20a292e277df4de02b2f57c203e627cc/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ba358bf20a292e277df4de02b2f57c203e627cc/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=3ba358bf20a292e277df4de02b2f57c203e627cc", "patch": "@@ -10639,11 +10639,11 @@ expand_expr_real_1 (tree exp, rtx target, machine_mode tmode,\n \t    /* If the field isn't aligned enough to fetch as a memref,\n \t       fetch it as a bit field.  */\n \t    || (mode1 != BLKmode\n-\t\t&& (((TYPE_ALIGN (TREE_TYPE (tem)) < GET_MODE_ALIGNMENT (mode)\n-\t\t      || (bitpos % GET_MODE_ALIGNMENT (mode) != 0)\n-\t\t      || (MEM_P (op0)\n-\t\t\t  && (MEM_ALIGN (op0) < GET_MODE_ALIGNMENT (mode1)\n-\t\t\t      || (bitpos % GET_MODE_ALIGNMENT (mode1) != 0))))\n+\t\t&& (((MEM_P (op0)\n+\t\t      ? MEM_ALIGN (op0) < GET_MODE_ALIGNMENT (mode1)\n+\t\t        || (bitpos % GET_MODE_ALIGNMENT (mode1) != 0)\n+\t\t      : TYPE_ALIGN (TREE_TYPE (tem)) < GET_MODE_ALIGNMENT (mode)\n+\t\t        || (bitpos % GET_MODE_ALIGNMENT (mode) != 0))\n \t\t     && modifier != EXPAND_MEMORY\n \t\t     && ((modifier == EXPAND_CONST_ADDRESS\n \t\t\t  || modifier == EXPAND_INITIALIZER)"}]}