{"sha": "3e72ec9a0c6489eee81ca607577bb837b68d9278", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2U3MmVjOWEwYzY0ODllZWU4MWNhNjA3NTc3YmI4MzdiNjhkOTI3OA==", "commit": {"author": {"name": "Gabriel Dos Reis", "email": "gdr@nerim.net", "date": "2002-08-11T16:05:27Z"}, "committer": {"name": "Gabriel Dos Reis", "email": "gdr@gcc.gnu.org", "date": "2002-08-11T16:05:27Z"}, "message": "decl.c (duplicate_decls): Replace DECL_SOURCE_FILE + DECL_SOURCE_LINE with DECL_SOURCE_LOCATION.\n\n\t* decl.c (duplicate_decls): Replace DECL_SOURCE_FILE +\n\tDECL_SOURCE_LINE with DECL_SOURCE_LOCATION.\n\t* optimize.c (maybe_clone_body): Likewise.\n\t* pt.c (tsubst_enum): Likewise.\n\t(lookup_template_class): Likewise.\n\t* tree.c (cp_copy_res_decl_for_inlining): Likewise.\n\nFrom-SVN: r56206", "tree": {"sha": "b17126c8d87b88f8ea701553b81b017e6c7d4013", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b17126c8d87b88f8ea701553b81b017e6c7d4013"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3e72ec9a0c6489eee81ca607577bb837b68d9278", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e72ec9a0c6489eee81ca607577bb837b68d9278", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e72ec9a0c6489eee81ca607577bb837b68d9278", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e72ec9a0c6489eee81ca607577bb837b68d9278/comments", "author": null, "committer": null, "parents": [{"sha": "08767a6fcd3c063186b94690e279cad4ce10dcf3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08767a6fcd3c063186b94690e279cad4ce10dcf3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/08767a6fcd3c063186b94690e279cad4ce10dcf3"}], "stats": {"total": 40, "additions": 20, "deletions": 20}, "files": [{"sha": "fe1802b796af6f315f88f9dd0a48f23c7b7c37de", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e72ec9a0c6489eee81ca607577bb837b68d9278/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e72ec9a0c6489eee81ca607577bb837b68d9278/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=3e72ec9a0c6489eee81ca607577bb837b68d9278", "patch": "@@ -1,3 +1,12 @@\n+2002-08-11  Gabriel Dos Reis  <gdr@nerim.net>\n+\n+\t* decl.c (duplicate_decls): Replace DECL_SOURCE_FILE +\n+\tDECL_SOURCE_LINE with DECL_SOURCE_LOCATION.\n+\t* optimize.c (maybe_clone_body): Likewise.\n+\t* pt.c (tsubst_enum): Likewise.\n+\t(lookup_template_class): Likewise.\n+\t* tree.c (cp_copy_res_decl_for_inlining): Likewise.\n+\n 2002-08-10  Neil Booth  <neil@daikokuya.co.uk>\n \n \t* lang-specs.h: Remove -ansi."}, {"sha": "874baf955d41bd2a8baaf8742bc24bded361a6c2", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e72ec9a0c6489eee81ca607577bb837b68d9278/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e72ec9a0c6489eee81ca607577bb837b68d9278/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=3e72ec9a0c6489eee81ca607577bb837b68d9278", "patch": "@@ -3402,12 +3402,9 @@ duplicate_decls (newdecl, olddecl)\n       if (DECL_INITIAL (DECL_TEMPLATE_RESULT (olddecl)) == NULL_TREE\n \t  && DECL_INITIAL (DECL_TEMPLATE_RESULT (newdecl)) != NULL_TREE)\n \t{\n-\t  DECL_SOURCE_LINE (olddecl) \n-\t    = DECL_SOURCE_LINE (DECL_TEMPLATE_RESULT (olddecl))\n-\t    = DECL_SOURCE_LINE (newdecl);\n-\t  DECL_SOURCE_FILE (olddecl) \n-\t    = DECL_SOURCE_FILE (DECL_TEMPLATE_RESULT (olddecl))\n-\t    = DECL_SOURCE_FILE (newdecl);\n+\t  DECL_SOURCE_LOCATION (olddecl) \n+\t    = DECL_SOURCE_LOCATION (DECL_TEMPLATE_RESULT (olddecl))\n+\t    = DECL_SOURCE_LOCATION (newdecl);\n \t}\n \n       return 1;\n@@ -3478,8 +3475,7 @@ duplicate_decls (newdecl, olddecl)\n \t  && DECL_INITIAL (olddecl) != NULL_TREE)\n \t{\n \t  DECL_INITIAL (newdecl) = DECL_INITIAL (olddecl);\n-\t  DECL_SOURCE_FILE (newdecl) = DECL_SOURCE_FILE (olddecl);\n-\t  DECL_SOURCE_LINE (newdecl) = DECL_SOURCE_LINE (olddecl);\n+\t  DECL_SOURCE_LOCATION (newdecl) = DECL_SOURCE_LOCATION (olddecl);\n \t  if (CAN_HAVE_FULL_LANG_DECL_P (newdecl)\n \t      && DECL_LANG_SPECIFIC (newdecl)\n \t      && DECL_LANG_SPECIFIC (olddecl))"}, {"sha": "177b74232c5b571e7e9bc1184f285baec073208a", "filename": "gcc/cp/optimize.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e72ec9a0c6489eee81ca607577bb837b68d9278/gcc%2Fcp%2Foptimize.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e72ec9a0c6489eee81ca607577bb837b68d9278/gcc%2Fcp%2Foptimize.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Foptimize.c?ref=3e72ec9a0c6489eee81ca607577bb837b68d9278", "patch": "@@ -129,8 +129,7 @@ update_cloned_parm (parm, cloned_parm)\n   \n   /* The name may have changed from the declaration. */\n   DECL_NAME (cloned_parm) = DECL_NAME (parm);\n-  DECL_SOURCE_FILE (cloned_parm) = DECL_SOURCE_FILE (parm);\n-  DECL_SOURCE_LINE (cloned_parm) = DECL_SOURCE_LINE (parm);\n+  DECL_SOURCE_LOCATION (cloned_parm) = DECL_SOURCE_LOCATION (parm);\n }\n \n /* FN is a function that has a complete body.  Clone the body as\n@@ -164,8 +163,7 @@ maybe_clone_body (fn)\n       splay_tree decl_map;\n \n       /* Update CLONE's source position information to match FN's.  */\n-      DECL_SOURCE_FILE (clone) = DECL_SOURCE_FILE (fn);\n-      DECL_SOURCE_LINE (clone) = DECL_SOURCE_LINE (fn);\n+      DECL_SOURCE_LOCATION (clone) = DECL_SOURCE_LOCATION (fn);\n       DECL_INLINE (clone) = DECL_INLINE (fn);\n       DECL_DECLARED_INLINE_P (clone) = DECL_DECLARED_INLINE_P (fn);\n       DECL_COMDAT (clone) = DECL_COMDAT (fn);"}, {"sha": "42218eb31503aa52b16ba416ec30dcc5f4e3cd03", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e72ec9a0c6489eee81ca607577bb837b68d9278/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e72ec9a0c6489eee81ca607577bb837b68d9278/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=3e72ec9a0c6489eee81ca607577bb837b68d9278", "patch": "@@ -4215,10 +4215,8 @@ lookup_template_class (d1, arglist, in_decl, context, entering_scope, complain)\n \t  type_decl = create_implicit_typedef (DECL_NAME (template), t);\n \t  DECL_CONTEXT (type_decl) = TYPE_CONTEXT (t);\n \t  TYPE_STUB_DECL (t) = type_decl;\n-\t  DECL_SOURCE_FILE (type_decl) \n-\t    = DECL_SOURCE_FILE (TYPE_STUB_DECL (template_type));\n-\t  DECL_SOURCE_LINE (type_decl) \n-\t    = DECL_SOURCE_LINE (TYPE_STUB_DECL (template_type));\n+\t  DECL_SOURCE_LOCATION (type_decl) \n+\t    = DECL_SOURCE_LOCATION (TYPE_STUB_DECL (template_type));\n \t}\n       else\n \ttype_decl = TYPE_NAME (t);\n@@ -10363,8 +10361,8 @@ tsubst_enum (tag, newtag, args)\n     }\n \n   finish_enum (newtag);\n-  DECL_SOURCE_LINE (TYPE_NAME (newtag)) = DECL_SOURCE_LINE (TYPE_NAME (tag));\n-  DECL_SOURCE_FILE (TYPE_NAME (newtag)) = DECL_SOURCE_FILE (TYPE_NAME (tag));\n+  DECL_SOURCE_LOCATION (TYPE_NAME (newtag))\n+    = DECL_SOURCE_LOCATION (TYPE_NAME (tag));\n }\n \n /* DECL is a FUNCTION_DECL that is a template specialization.  Return"}, {"sha": "3630566037256a9bd04db46d1662c1898e3f7b75", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e72ec9a0c6489eee81ca607577bb837b68d9278/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e72ec9a0c6489eee81ca607577bb837b68d9278/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=3e72ec9a0c6489eee81ca607577bb837b68d9278", "patch": "@@ -2289,8 +2289,7 @@ cp_copy_res_decl_for_inlining (result, fn, caller, decl_map_,\n \t     position so we can get reasonable debugging information, and\n \t     register the return variable as its equivalent.  */\n \t  DECL_NAME (var) = DECL_NAME (nrv);\n-\t  DECL_SOURCE_FILE (var) = DECL_SOURCE_FILE (nrv);\n-\t  DECL_SOURCE_LINE (var) = DECL_SOURCE_LINE (nrv);\n+\t  DECL_SOURCE_LOCATION (var) = DECL_SOURCE_LOCATION (nrv);\n \t  DECL_ABSTRACT_ORIGIN (var) = DECL_ORIGIN (nrv);\n \t  /* Don't lose initialization info.  */\n \t  DECL_INITIAL (var) = DECL_INITIAL (nrv);"}]}