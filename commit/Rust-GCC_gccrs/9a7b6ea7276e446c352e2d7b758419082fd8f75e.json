{"sha": "9a7b6ea7276e446c352e2d7b758419082fd8f75e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWE3YjZlYTcyNzZlNDQ2YzM1MmUyZDdiNzU4NDE5MDgyZmQ4Zjc1ZQ==", "commit": {"author": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2007-03-23T00:13:19Z"}, "committer": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2007-03-23T00:13:19Z"}, "message": "re PR libfortran/31052 ([4.2 only] Bad IOSTAT values when readings NAMELISTs past EOF)\n\n2007-03-22  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n\n\tPR libgfortran/31052\n\t* file_pos.c: Update Copyright year.\n\t* io/open.c (test_endfile): Restore test_endfile to fix SPEC regression.\n\tUpdate Copyright year.\n\t* io/io.h: Same.\n\t* io/unix.c (is_special): Add missing type for this function.\n\tUpdate Copyright year.\n\t* io/transfer.c (next_record_r): Restore test_endfile.\n\t(st_read): Fix whitespace.  Update Copyright year\n\nFrom-SVN: r123139", "tree": {"sha": "ebb6f19d686e7bc7043bbf86c7dabbafe6051e15", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ebb6f19d686e7bc7043bbf86c7dabbafe6051e15"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9a7b6ea7276e446c352e2d7b758419082fd8f75e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a7b6ea7276e446c352e2d7b758419082fd8f75e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a7b6ea7276e446c352e2d7b758419082fd8f75e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a7b6ea7276e446c352e2d7b758419082fd8f75e/comments", "author": null, "committer": null, "parents": [{"sha": "46ecc2bc5c8455615f9739847277cbc5fe746c25", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46ecc2bc5c8455615f9739847277cbc5fe746c25", "html_url": "https://github.com/Rust-GCC/gccrs/commit/46ecc2bc5c8455615f9739847277cbc5fe746c25"}], "stats": {"total": 53, "additions": 48, "deletions": 5}, "files": [{"sha": "1281bbb12ca470e976acb8eb6cdf1b12f57439dd", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a7b6ea7276e446c352e2d7b758419082fd8f75e/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a7b6ea7276e446c352e2d7b758419082fd8f75e/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=9a7b6ea7276e446c352e2d7b758419082fd8f75e", "patch": "@@ -1,3 +1,15 @@\n+2007-03-22  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libgfortran/31052\n+\t* file_pos.c: Update Copyright year.\n+\t* io/open.c (test_endfile): Restore test_endfile to fix SPEC regression.\n+\tUpdate Copyright year.\n+\t* io/io.h: Same.\n+\t* io/unix.c (is_special): Add missing type for this function.\n+\tUpdate Copyright year.\n+\t* io/transfer.c (next_record_r): Restore test_endfile.\n+\t(st_read): Fix whitespace.  Update Copyright year\n+\n 2007-03-20  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n \n \t* configure.ac: Add missing check for gettimeofday."}, {"sha": "846dae932ecd6f018115f60e13f5d6c22dd8910f", "filename": "libgfortran/io/file_pos.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a7b6ea7276e446c352e2d7b758419082fd8f75e/libgfortran%2Fio%2Ffile_pos.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a7b6ea7276e446c352e2d7b758419082fd8f75e/libgfortran%2Fio%2Ffile_pos.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Ffile_pos.c?ref=9a7b6ea7276e446c352e2d7b758419082fd8f75e", "patch": "@@ -1,4 +1,4 @@\n-/* Copyright (C) 2002-2003, 2005, 2006 Free Software Foundation, Inc.\n+/* Copyright (C) 2002-2003, 2005, 2006, 2007 Free Software Foundation, Inc.\n    Contributed by Andy Vaught and Janne Blomqvist\n \n This file is part of the GNU Fortran runtime library (libgfortran)."}, {"sha": "26273d9018e80aee1d22a717f36180ed8d02c014", "filename": "libgfortran/io/io.h", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a7b6ea7276e446c352e2d7b758419082fd8f75e/libgfortran%2Fio%2Fio.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a7b6ea7276e446c352e2d7b758419082fd8f75e/libgfortran%2Fio%2Fio.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Fio.h?ref=9a7b6ea7276e446c352e2d7b758419082fd8f75e", "patch": "@@ -1,4 +1,5 @@\n-/* Copyright (C) 2002, 2003, 2004, 2005, 2006 Free Software Foundation, Inc.\n+/* Copyright (C) 2002, 2003, 2004, 2005, 2006, 2007\n+   Free Software Foundation, Inc.\n    Contributed by Andy Vaught\n \n This file is part of the GNU Fortran 95 runtime library (libgfortran).\n@@ -694,6 +695,9 @@ internal_proto(unlock_unit);\n \n /* open.c */\n \n+extern void test_endfile (gfc_unit *);\n+internal_proto(test_endfile);\n+\n extern gfc_unit *new_unit (st_parameter_open *, gfc_unit *, unit_flags *);\n internal_proto(new_unit);\n "}, {"sha": "8c6f9fb06188428f3587c55d19f2886c23f97b62", "filename": "libgfortran/io/open.c", "status": "modified", "additions": 23, "deletions": 1, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a7b6ea7276e446c352e2d7b758419082fd8f75e/libgfortran%2Fio%2Fopen.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a7b6ea7276e446c352e2d7b758419082fd8f75e/libgfortran%2Fio%2Fopen.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Fopen.c?ref=9a7b6ea7276e446c352e2d7b758419082fd8f75e", "patch": "@@ -1,4 +1,4 @@\n-/* Copyright (C) 2002, 2003, 2004, 2005\n+/* Copyright (C) 2002, 2003, 2004, 2005, 2007\n    Free Software Foundation, Inc.\n    Contributed by Andy Vaught\n \n@@ -109,6 +109,19 @@ static const st_option convert_opt[] =\n   { NULL, 0}\n };\n \n+/* Given a unit, test to see if the file is positioned at the terminal\n+   point, and if so, change state from NO_ENDFILE flag to AT_ENDFILE.\n+   This prevents us from changing the state from AFTER_ENDFILE to\n+   AT_ENDFILE.  */\n+\n+void\n+test_endfile (gfc_unit * u)\n+{\n+  if (u->endfile == NO_ENDFILE && file_length (u->s) == file_position (u->s))\n+    u->endfile = AT_ENDFILE;\n+}\n+\n+\n /* Change the modes of a file, those that are allowed * to be\n    changed.  */\n \n@@ -195,6 +208,8 @@ edit_modes (st_parameter_open *opp, gfc_unit * u, unit_flags * flags)\n \n       u->current_record = 0;\n       u->last_record = 0;\n+\n+      test_endfile (u);\t\t/* We might be at the end.  */\n       break;\n \n     case POSITION_APPEND:\n@@ -471,6 +486,13 @@ new_unit (st_parameter_open *opp, gfc_unit *u, unit_flags * flags)\n   memmove (u->file, opp->file, opp->file_len);\n   u->file_len = opp->file_len;\n \n+  /* Curiously, the standard requires that the\n+     position specifier be ignored for new files so a newly connected\n+     file starts out at the initial point.  We still need to figure\n+     out if the file is at the end or not.  */\n+\n+  test_endfile (u);\n+\n   if (flags->status == STATUS_SCRATCH && opp->file != NULL)\n     free_mem (opp->file);\n   return u;"}, {"sha": "77e2ab1344a50a441b6f5322d2e34ec87fb3a148", "filename": "libgfortran/io/transfer.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a7b6ea7276e446c352e2d7b758419082fd8f75e/libgfortran%2Fio%2Ftransfer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a7b6ea7276e446c352e2d7b758419082fd8f75e/libgfortran%2Fio%2Ftransfer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Ftransfer.c?ref=9a7b6ea7276e446c352e2d7b758419082fd8f75e", "patch": "@@ -1,4 +1,5 @@\n-/* Copyright (C) 2002, 2003, 2004, 2005, 2006 Free Software Foundation, Inc.\n+/* Copyright (C) 2002, 2003, 2004, 2005, 2006, 2007\n+   Free Software Foundation, Inc.\n    Contributed by Andy Vaught\n    Namelist transfer functions contributed by Paul Thomas\n \n@@ -2222,6 +2223,9 @@ next_record_r (st_parameter_dt *dtp)\n \n       break;\n     }\n+\n+  if (dtp->u.p.current_unit->flags.access == ACCESS_SEQUENTIAL)\n+    test_endfile (dtp->u.p.current_unit);\n }\n \n \n@@ -2681,7 +2685,7 @@ st_read (st_parameter_dt *dtp)\n \n   data_transfer_init (dtp, 1);\n \n-  /* Handle complications dealing with the endfile record. */\n+  /* Handle complications dealing with the endfile record.  */\n \n   if (dtp->u.p.current_unit->flags.access == ACCESS_SEQUENTIAL)\n     switch (dtp->u.p.current_unit->endfile)"}, {"sha": "458983c4595b978fa93f18d5e9e0be8814e151b5", "filename": "libgfortran/io/unix.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a7b6ea7276e446c352e2d7b758419082fd8f75e/libgfortran%2Fio%2Funix.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a7b6ea7276e446c352e2d7b758419082fd8f75e/libgfortran%2Fio%2Funix.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Funix.c?ref=9a7b6ea7276e446c352e2d7b758419082fd8f75e", "patch": "@@ -1892,6 +1892,7 @@ is_seekable (stream *s)\n \n /* is_special()-- Return nonzero if the stream is not a regular file.  */\n \n+int\n is_special (stream *s)\n {\n   return ((unix_stream *) s)->special_file;"}]}