{"sha": "7cc4770980e20f6f480152277d2a64c226fdee2a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2NjNDc3MDk4MGUyMGY2ZjQ4MDE1MjI3N2QyYTY0YzIyNmZkZWUyYQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@ucw.cz", "date": "2019-10-13T11:25:57Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2019-10-13T11:25:57Z"}, "message": "lto-common.c (read_cgraph_and_symbols): Grow ggc memory use after summary streaming.\n\n\t* lto-common.c (read_cgraph_and_symbols): Grow ggc memory use after\n\tsummary streaming.\n\nFrom-SVN: r276936", "tree": {"sha": "356b9851888fc5f5ec9f179911e5c5f8c69ee49e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/356b9851888fc5f5ec9f179911e5c5f8c69ee49e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7cc4770980e20f6f480152277d2a64c226fdee2a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7cc4770980e20f6f480152277d2a64c226fdee2a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7cc4770980e20f6f480152277d2a64c226fdee2a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7cc4770980e20f6f480152277d2a64c226fdee2a/comments", "author": null, "committer": null, "parents": [{"sha": "f8cf94cd21b4b29e53eb779d2da50dc317690cb9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8cf94cd21b4b29e53eb779d2da50dc317690cb9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f8cf94cd21b4b29e53eb779d2da50dc317690cb9"}], "stats": {"total": 14, "additions": 12, "deletions": 2}, "files": [{"sha": "bb4e57ef131e0df372c43a8614f419a53cfeaf08", "filename": "gcc/lto/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7cc4770980e20f6f480152277d2a64c226fdee2a/gcc%2Flto%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7cc4770980e20f6f480152277d2a64c226fdee2a/gcc%2Flto%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2FChangeLog?ref=7cc4770980e20f6f480152277d2a64c226fdee2a", "patch": "@@ -1,3 +1,8 @@\n+2019-10-12  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* lto-common.c (read_cgraph_and_symbols): Grow ggc memory use after\n+\tsummary streaming.\n+\n 2019-10-12  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* lto.c (lto_wpa_write_files): Do not update bodies of clones."}, {"sha": "967f2285a73f441f91f9267d011a167886bfb591", "filename": "gcc/lto/lto-common.c", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7cc4770980e20f6f480152277d2a64c226fdee2a/gcc%2Flto%2Flto-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7cc4770980e20f6f480152277d2a64c226fdee2a/gcc%2Flto%2Flto-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2Flto-common.c?ref=7cc4770980e20f6f480152277d2a64c226fdee2a", "patch": "@@ -2781,7 +2781,6 @@ read_cgraph_and_symbols (unsigned nfiles, const char **fnames)\n   /* At this stage we know that majority of GGC memory is reachable.\n      Growing the limits prevents unnecesary invocation of GGC.  */\n   ggc_grow ();\n-  ggc_collect ();\n \n   /* Set the hooks so that all of the ipa passes can read in their data.  */\n   lto_set_in_hooks (all_file_decl_data, get_section_data, free_section_data);\n@@ -2852,7 +2851,11 @@ read_cgraph_and_symbols (unsigned nfiles, const char **fnames)\n   if (tree_with_vars)\n     ggc_free (tree_with_vars);\n   tree_with_vars = NULL;\n-  ggc_collect ();\n+  /* During WPA we want to prevent ggc collecting by default.  Grow limits\n+     until after the IPA summaries are streamed in.  Basically all IPA memory\n+     is explcitly managed by ggc_free and ggc collect is not useful.\n+     Exception are the merged declarations.  */\n+  ggc_grow ();\n \n   timevar_pop (TV_IPA_LTO_DECL_MERGE);\n   /* Each pass will set the appropriate timer.  */\n@@ -2866,6 +2869,8 @@ read_cgraph_and_symbols (unsigned nfiles, const char **fnames)\n   else\n     ipa_read_summaries ();\n \n+  ggc_grow ();\n+\n   for (i = 0; all_file_decl_data[i]; i++)\n     {\n       gcc_assert (all_file_decl_data[i]->symtab_node_encoder);"}]}