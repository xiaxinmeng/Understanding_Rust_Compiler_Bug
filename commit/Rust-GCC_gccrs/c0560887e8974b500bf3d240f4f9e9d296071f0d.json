{"sha": "c0560887e8974b500bf3d240f4f9e9d296071f0d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzA1NjA4ODdlODk3NGI1MDBiZjNkMjQwZjRmOWU5ZDI5NjA3MWYwZA==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "1997-01-14T20:32:22Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "1997-01-14T20:32:22Z"}, "message": "Copy a CONST_INT rtx in force_const_mem\n\nFrom-SVN: r13490", "tree": {"sha": "41e214d8c7232c83a5cf5e715a65ba2fe9a80607", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/41e214d8c7232c83a5cf5e715a65ba2fe9a80607"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c0560887e8974b500bf3d240f4f9e9d296071f0d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0560887e8974b500bf3d240f4f9e9d296071f0d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c0560887e8974b500bf3d240f4f9e9d296071f0d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0560887e8974b500bf3d240f4f9e9d296071f0d/comments", "author": null, "committer": null, "parents": [{"sha": "8839fca41b657d9ced3d73db60f1cb1198c7a32a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8839fca41b657d9ced3d73db60f1cb1198c7a32a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8839fca41b657d9ced3d73db60f1cb1198c7a32a"}], "stats": {"total": 22, "additions": 14, "deletions": 8}, "files": [{"sha": "c62fd7e6d99fc777f915f50297f0214c7b8b0bd2", "filename": "gcc/varasm.c", "status": "modified", "additions": 14, "deletions": 8, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0560887e8974b500bf3d240f4f9e9d296071f0d/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0560887e8974b500bf3d240f4f9e9d296071f0d/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=c0560887e8974b500bf3d240f4f9e9d296071f0d", "patch": "@@ -3407,19 +3407,25 @@ force_const_mem (mode, x)\n       pool_offset &= ~ (align - 1);\n \n       /* If RTL is not being placed into the saveable obstack, make a\n-\t copy of X that is in the saveable obstack in case we are being\n-\t called from combine or some other phase that discards memory\n-\t it allocates.  We need only do this if it is a CONST, since\n-\t no other RTX should be allocated in this situation.  */\n+\t copy of X that is in the saveable obstack in case we are\n+\t being called from combine or some other phase that discards\n+\t memory it allocates.  We used to only do this if it is a\n+\t CONST; however, reload can allocate a CONST_INT when\n+\t eliminating registers.  */\n       if (rtl_obstack != saveable_obstack\n-\t  && GET_CODE (x) == CONST)\n+\t  && (GET_CODE (x) == CONST || GET_CODE (x) == CONST_INT))\n \t{\n \t  push_obstacks_nochange ();\n \t  rtl_in_saveable_obstack ();\n \n-\t  x = gen_rtx (CONST, GET_MODE (x), \n-\t\t       gen_rtx (PLUS, GET_MODE (x), \n-\t\t\t\tXEXP (XEXP (x, 0), 0), XEXP (XEXP (x, 0), 1)));\n+\t  if (GET_CODE (x) == CONST)\n+\t    x = gen_rtx (CONST, GET_MODE (x), \n+\t\t\t gen_rtx (PLUS, GET_MODE (x), \n+\t\t\t\t  XEXP (XEXP (x, 0), 0),\n+\t\t\t\t  XEXP (XEXP (x, 0), 1)));\n+\t  else\n+\t    x = GEN_INT (INTVAL (x));\n+\n \t  pop_obstacks ();\n \t}\n "}]}