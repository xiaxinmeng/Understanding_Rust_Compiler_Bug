{"sha": "ad103b01538743f91ba51cfa51da273d34c901c4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWQxMDNiMDE1Mzg3NDNmOTFiYTUxY2ZhNTFkYTI3M2QzNGM5MDFjNA==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@CeBiTec.Uni-Bielefeld.DE", "date": "2016-05-09T11:54:55Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2016-05-09T11:54:55Z"}, "message": "Error out on -fvtable-verify without --enable-vtable-verify\n\n\t* configure.ac (enable_vtable_verify): Handle --enable-vtable-verify.\n\t* configure: Regenerate.\n\t* config.in: Regenerate.\n\t* gcc.c (VTABLE_VERIFICATION_SPEC) [!ENABLE_VTABLE_VERIFY]: Error\n\ton -fvtable-verify.\n\t* config/sol2.h [!ENABLE_VTABLE_VERIFY] (STARTFILE_VTV_SPEC): Define.\n\t(ENDFILE_VTV_SPEC): Define.\n\nFrom-SVN: r236029", "tree": {"sha": "2b0dc7dd0a636ef6539f2e6f8994a35788eef858", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2b0dc7dd0a636ef6539f2e6f8994a35788eef858"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ad103b01538743f91ba51cfa51da273d34c901c4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad103b01538743f91ba51cfa51da273d34c901c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad103b01538743f91ba51cfa51da273d34c901c4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad103b01538743f91ba51cfa51da273d34c901c4/comments", "author": {"login": "rorth", "id": 3930951, "node_id": "MDQ6VXNlcjM5MzA5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3930951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rorth", "html_url": "https://github.com/rorth", "followers_url": "https://api.github.com/users/rorth/followers", "following_url": "https://api.github.com/users/rorth/following{/other_user}", "gists_url": "https://api.github.com/users/rorth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rorth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rorth/subscriptions", "organizations_url": "https://api.github.com/users/rorth/orgs", "repos_url": "https://api.github.com/users/rorth/repos", "events_url": "https://api.github.com/users/rorth/events{/privacy}", "received_events_url": "https://api.github.com/users/rorth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7972e24663f00ba9319b71b6cb7d931d6ded5fa1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7972e24663f00ba9319b71b6cb7d931d6ded5fa1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7972e24663f00ba9319b71b6cb7d931d6ded5fa1"}], "stats": {"total": 66, "additions": 60, "deletions": 6}, "files": [{"sha": "b00dc71cb1a4a3870248439869278d86d008a51e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad103b01538743f91ba51cfa51da273d34c901c4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad103b01538743f91ba51cfa51da273d34c901c4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ad103b01538743f91ba51cfa51da273d34c901c4", "patch": "@@ -1,3 +1,13 @@\n+2016-05-09  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* configure.ac (enable_vtable_verify): Handle --enable-vtable-verify.\n+\t* configure: Regenerate.\n+\t* config.in: Regenerate.\n+\t* gcc.c (VTABLE_VERIFICATION_SPEC) [!ENABLE_VTABLE_VERIFY]: Error\n+\ton -fvtable-verify.\n+\t* config/sol2.h [!ENABLE_VTABLE_VERIFY] (STARTFILE_VTV_SPEC): Define.\n+\t(ENDFILE_VTV_SPEC): Define.\n+\n 2016-05-09  Kaushik Phatak  <kaushik.phatak@kpit.com>\n \n \t* config/rl78/rl78.c (rl78_expand_prologue): Save the MDUC related"}, {"sha": "39d1e7524f8edb0ad46ae6bc72534fa60b02f4e8", "filename": "gcc/config.in", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad103b01538743f91ba51cfa51da273d34c901c4/gcc%2Fconfig.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad103b01538743f91ba51cfa51da273d34c901c4/gcc%2Fconfig.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.in?ref=ad103b01538743f91ba51cfa51da273d34c901c4", "patch": "@@ -234,6 +234,12 @@\n #endif\n \n \n+/* Define 0/1 if vtable verification feature is enabled. */\n+#ifndef USED_FOR_TARGET\n+#undef ENABLE_VTABLE_VERIFY\n+#endif\n+\n+\n /* Define to 1 if installation paths should be looked up in the Windows\n    Registry. Ignored on non-Windows hosts. */\n #ifndef USED_FOR_TARGET"}, {"sha": "50f2b383a1b7007c1d7654fbcbea56c1395a7d0d", "filename": "gcc/config/sol2.h", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad103b01538743f91ba51cfa51da273d34c901c4/gcc%2Fconfig%2Fsol2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad103b01538743f91ba51cfa51da273d34c901c4/gcc%2Fconfig%2Fsol2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsol2.h?ref=ad103b01538743f91ba51cfa51da273d34c901c4", "patch": "@@ -166,21 +166,26 @@ along with GCC; see the file COPYING3.  If not see\n #define STARTFILE_CRTBEGIN_SPEC\t\"crtbegin.o%s\"\n #endif\n \n+#if ENABLE_VTABLE_VERIFY\n #if SUPPORTS_INIT_PRIORITY\n #define STARTFILE_VTV_SPEC \\\n   \"%{fvtable-verify=none:%s; \\\n      fvtable-verify=preinit:vtv_start_preinit.o%s; \\\n      fvtable-verify=std:vtv_start.o%s}\"\n-\n #define ENDFILE_VTV_SPEC \\\n   \"%{fvtable-verify=none:%s; \\\n      fvtable-verify=preinit:vtv_end_preinit.o%s; \\\n      fvtable-verify=std:vtv_end.o%s}\"\n-#else\n+#else /* !SUPPORTS_INIT_PRIORITY */\n #define STARTFILE_VTV_SPEC \\\n-  \"%{fvtable-verify:%e-fvtable-verify is not supported in this configuration}\"\n+  \"%{fvtable-verify=*: \\\n+     %e-fvtable-verify=%* is not supported in this configuration}\"\n #define ENDFILE_VTV_SPEC \"\"\n-#endif\n+#endif /* !SUPPORTS_INIT_PRIORITY */\n+#else /* !ENABLE_VTABLE_VERIFY */\n+#define STARTFILE_VTV_SPEC \"\"\n+#define ENDFILE_VTV_SPEC \"\"\n+#endif /* !ENABLE_VTABLE_VERIFY */\n \n /* We don't use the standard svr4 STARTFILE_SPEC because it's wrong for us.  */\n #undef STARTFILE_SPEC"}, {"sha": "319dcc3125e3cb351080e9c7da85fa9d2dcaa893", "filename": "gcc/configure", "status": "modified", "additions": 18, "deletions": 2, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad103b01538743f91ba51cfa51da273d34c901c4/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad103b01538743f91ba51cfa51da273d34c901c4/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=ad103b01538743f91ba51cfa51da273d34c901c4", "patch": "@@ -904,6 +904,7 @@ enable_decimal_float\n enable_fixed_point\n enable_threads\n enable_tls\n+enable_vtable_verify\n enable_objc_gc\n with_dwarf2\n enable_shared\n@@ -1619,6 +1620,7 @@ Optional Features:\n                           package\n   --enable-tls            enable or disable generation of tls code overriding\n                           the assembler check for tls support\n+  --enable-vtable-verify  enable vtable verification feature\n   --enable-objc-gc        enable the use of Boehm's garbage collector with the\n                           GNU Objective-C runtime\n   --disable-shared        don't provide a shared libgcc\n@@ -7591,6 +7593,20 @@ else\n fi\n \n \n+# Check whether --enable-vtable-verify was given.\n+if test \"${enable_vtable_verify+set}\" = set; then :\n+  enableval=$enable_vtable_verify;\n+else\n+  enable_vtable_verify=no\n+fi\n+\n+vtable_verify=`if test x$enable_vtable_verify = xyes; then echo 1; else echo 0; fi`\n+\n+cat >>confdefs.h <<_ACEOF\n+#define ENABLE_VTABLE_VERIFY $vtable_verify\n+_ACEOF\n+\n+\n # Check whether --enable-objc-gc was given.\n if test \"${enable_objc_gc+set}\" = set; then :\n   enableval=$enable_objc_gc; if test x$enable_objc_gc = xno; then\n@@ -18458,7 +18474,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 18462 \"configure\"\n+#line 18477 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -18564,7 +18580,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 18568 \"configure\"\n+#line 18583 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"}, {"sha": "d55f84589432359d1345ef686ade65ac76bc1216", "filename": "gcc/configure.ac", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad103b01538743f91ba51cfa51da273d34c901c4/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad103b01538743f91ba51cfa51da273d34c901c4/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=ad103b01538743f91ba51cfa51da273d34c901c4", "patch": "@@ -865,6 +865,14 @@ Valid choices are 'yes' and 'no'.]) ;;\n   esac\n ], [enable_tls=''])\n \n+AC_ARG_ENABLE(vtable-verify,\n+[AS_HELP_STRING([--enable-vtable-verify],\n+\t\t[enable vtable verification feature])],,\n+[enable_vtable_verify=no])\n+vtable_verify=`if test x$enable_vtable_verify = xyes; then echo 1; else echo 0; fi`\n+AC_DEFINE_UNQUOTED(ENABLE_VTABLE_VERIFY, $vtable_verify,\n+[Define 0/1 if vtable verification feature is enabled.])\n+\n AC_ARG_ENABLE(objc-gc,\n [AS_HELP_STRING([--enable-objc-gc],\n \t\t[enable the use of Boehm's garbage collector with"}, {"sha": "7bcf3b375e5912b7ff95b2fb34f9b5b9f0c44ed8", "filename": "gcc/gcc.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad103b01538743f91ba51cfa51da273d34c901c4/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad103b01538743f91ba51cfa51da273d34c901c4/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=ad103b01538743f91ba51cfa51da273d34c901c4", "patch": "@@ -989,9 +989,18 @@ proper position among the other output files.  */\n     the vtable verification runtime functions are in libstdc++, so we use\n     the spec just below this one.  */\n #ifndef VTABLE_VERIFICATION_SPEC\n+#if ENABLE_VTABLE_VERIFY\n #define VTABLE_VERIFICATION_SPEC \"\\\n %{!nostdlib:%{fvtable-verify=std: -lvtv -u_vtable_map_vars_start -u_vtable_map_vars_end}\\\n     %{fvtable-verify=preinit: -lvtv -u_vtable_map_vars_start -u_vtable_map_vars_end}}\"\n+#else\n+#define VTABLE_VERIFICATION_SPEC \"\\\n+%{fvtable-verify=none:} \\\n+%{fvtable-verify=std: \\\n+  %e-fvtable-verify=std is not supported in this configuration} \\\n+%{fvtable-verify=preinit: \\\n+  %e-fvtable-verify=preinit is not supported in this configuration}\"\n+#endif\n #endif\n \n #ifndef CHKP_SPEC"}]}