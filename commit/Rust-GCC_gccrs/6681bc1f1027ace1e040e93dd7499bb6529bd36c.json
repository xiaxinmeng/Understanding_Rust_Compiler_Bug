{"sha": "6681bc1f1027ace1e040e93dd7499bb6529bd36c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjY4MWJjMWYxMDI3YWNlMWUwNDBlOTNkZDc0OTliYjY1MjliZDM2Yw==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2001-07-29T02:46:18Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2001-07-29T02:46:18Z"}, "message": "varasm.c (immed_real_const_1): Don't elide special cases for nested functions.\n\n        * varasm.c (immed_real_const_1): Don't elide special cases for\n        nested functions.\n        (clear_const_double_mem): Clear const_tiny_rtx too.\n\nFrom-SVN: r44445", "tree": {"sha": "adce87512ed7bf4c8a6ebe4cf0b0c0d3c3a54216", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/adce87512ed7bf4c8a6ebe4cf0b0c0d3c3a54216"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6681bc1f1027ace1e040e93dd7499bb6529bd36c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6681bc1f1027ace1e040e93dd7499bb6529bd36c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6681bc1f1027ace1e040e93dd7499bb6529bd36c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6681bc1f1027ace1e040e93dd7499bb6529bd36c/comments", "author": null, "committer": null, "parents": [{"sha": "a20612aa8b221eff034088038287f16449bb9e09", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a20612aa8b221eff034088038287f16449bb9e09", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a20612aa8b221eff034088038287f16449bb9e09"}], "stats": {"total": 27, "additions": 20, "deletions": 7}, "files": [{"sha": "c47536af777fa200f3a21ca1471d39dfce6da5fa", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6681bc1f1027ace1e040e93dd7499bb6529bd36c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6681bc1f1027ace1e040e93dd7499bb6529bd36c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6681bc1f1027ace1e040e93dd7499bb6529bd36c", "patch": "@@ -1,3 +1,9 @@\n+2001-07-28  Richard Henderson  <rth@redhat.com>\n+\n+\t* varasm.c (immed_real_const_1): Don't elide special cases for\n+\tnested functions.\n+\t(clear_const_double_mem): Clear const_tiny_rtx too.\n+\n 2001-07-28  Richard Henderson  <rth@redhat.com>\n \n \t* dwarf2out.c (dw_val_class_offset): New."}, {"sha": "4b9438e21366921a9398e060feceb11835c2167d", "filename": "gcc/varasm.c", "status": "modified", "additions": 14, "deletions": 7, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6681bc1f1027ace1e040e93dd7499bb6529bd36c/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6681bc1f1027ace1e040e93dd7499bb6529bd36c/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=6681bc1f1027ace1e040e93dd7499bb6529bd36c", "patch": "@@ -1917,19 +1917,15 @@ immed_real_const_1 (d, mode)\n \n   u.d = d;\n \n-  /* Detect special cases.  But be careful we don't use a CONST_DOUBLE\n-     that's from a parent function since it may be in its constant pool.  */\n-  if (REAL_VALUES_IDENTICAL (dconst0, d)\n-      && (cfun == 0 || decl_function_context (current_function_decl) == 0))\n+  /* Detect special cases.  */\n+  if (REAL_VALUES_IDENTICAL (dconst0, d))\n     return CONST0_RTX (mode);\n \n   /* Check for NaN first, because some ports (specifically the i386) do not\n      emit correct ieee-fp code by default, and thus will generate a core\n      dump here if we pass a NaN to REAL_VALUES_EQUAL and if REAL_VALUES_EQUAL\n      does a floating point comparison.  */\n-  else if ((! REAL_VALUE_ISNAN (d) && REAL_VALUES_EQUAL (dconst1, d))\n-\t   && (cfun == 0\n-\t       || decl_function_context (current_function_decl) == 0))\n+  else if (! REAL_VALUE_ISNAN (d) && REAL_VALUES_EQUAL (dconst1, d))\n     return CONST1_RTX (mode);\n \n   if (sizeof u == sizeof (HOST_WIDE_INT))\n@@ -1996,6 +1992,8 @@ void\n clear_const_double_mem ()\n {\n   register rtx r, next;\n+  enum machine_mode mode;\n+  int i;\n \n   for (r = const_double_chain; r; r = next)\n     {\n@@ -2004,6 +2002,15 @@ clear_const_double_mem ()\n       CONST_DOUBLE_MEM (r) = cc0_rtx;\n     }\n   const_double_chain = 0;\n+\n+  for (i = 0; i <= 2; i++)\n+    for (mode = GET_CLASS_NARROWEST_MODE (MODE_FLOAT); mode != VOIDmode;\n+         mode = GET_MODE_WIDER_MODE (mode))\n+      {\n+\tr = const_tiny_rtx[i][(int) mode];\n+\tCONST_DOUBLE_CHAIN (r) = 0;\n+\tCONST_DOUBLE_MEM (r) = cc0_rtx;\n+      }\n }\n \f\n /* Given an expression EXP with a constant value,"}]}