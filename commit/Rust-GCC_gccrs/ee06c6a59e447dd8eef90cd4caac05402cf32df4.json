{"sha": "ee06c6a59e447dd8eef90cd4caac05402cf32df4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWUwNmM2YTU5ZTQ0N2RkOGVlZjkwY2Q0Y2FhYzA1NDAyY2YzMmRmNA==", "commit": {"author": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2008-10-15T12:23:55Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2008-10-15T12:23:55Z"}, "message": "re PR c++/35483 (GCC on AIX doesn't support dollar in symbols name.)\n\n        PR target/35483\n        Based on patches by Laurent Vivier.\n        * xcoffout.h (DBX_FINISH_STABS): Translate dollar sign to underscore.\n        * config/rs6000/rs6000-protos.h (rs6000_xcoff_strip_dollar): Declare.\n        * config/rs6000/xcoff.h (ASM_DECLARE_FUNCTION_NAME): Translate\n        dollar sign to underscore.\n        (ASM_OUTPUT_EXTERNAL): Same.\n        (ASM_OUTPUT_LABELREF): New.\n        * config/rs6000/rs6000.c (rs6000_xcoff_strip_dollar): New.\n\n        * config/rs6000/aix51.h (TARGET_USE_JCR_SECTION): Define.\n        * config/rs6000/aix52.h (TARGET_USE_JCR_SECTION): Define.\n        * config/rs6000/aix53.h (TARGET_USE_JCR_SECTION): Define.\n        * config/rs6000/aix61.h (TARGET_USE_JCR_SECTION): Define.\n\nFrom-SVN: r141134", "tree": {"sha": "1b2c780421da8cfa5c7c460e21fa7cc634af1f3b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1b2c780421da8cfa5c7c460e21fa7cc634af1f3b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ee06c6a59e447dd8eef90cd4caac05402cf32df4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee06c6a59e447dd8eef90cd4caac05402cf32df4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee06c6a59e447dd8eef90cd4caac05402cf32df4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee06c6a59e447dd8eef90cd4caac05402cf32df4/comments", "author": null, "committer": null, "parents": [{"sha": "307233c206c8853cb277f7e62b14c99fb695b6be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/307233c206c8853cb277f7e62b14c99fb695b6be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/307233c206c8853cb277f7e62b14c99fb695b6be"}], "stats": {"total": 119, "additions": 108, "deletions": 11}, "files": [{"sha": "981b94a6058312d2124ef4a9c7557299aed121b1", "filename": "gcc/config/rs6000/aix51.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee06c6a59e447dd8eef90cd4caac05402cf32df4/gcc%2Fconfig%2Frs6000%2Faix51.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee06c6a59e447dd8eef90cd4caac05402cf32df4/gcc%2Fconfig%2Frs6000%2Faix51.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faix51.h?ref=ee06c6a59e447dd8eef90cd4caac05402cf32df4", "patch": "@@ -185,3 +185,8 @@ do {\t\t\t\t\t\t\t\t\t\\\n \n /* This target uses the aix64.opt file.  */\n #define TARGET_USES_AIX64_OPT 1\n+\n+/* This target defines SUPPORTS_WEAK and TARGET_ASM_NAMED_SECTION,\n+   but does not have crtbegin/end.  */\n+\n+#define TARGET_USE_JCR_SECTION 0"}, {"sha": "b40e4670e00bd3dec38e7889330cf777267ac8d2", "filename": "gcc/config/rs6000/aix52.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee06c6a59e447dd8eef90cd4caac05402cf32df4/gcc%2Fconfig%2Frs6000%2Faix52.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee06c6a59e447dd8eef90cd4caac05402cf32df4/gcc%2Fconfig%2Frs6000%2Faix52.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faix52.h?ref=ee06c6a59e447dd8eef90cd4caac05402cf32df4", "patch": "@@ -196,3 +196,8 @@ extern long long int    atoll(const char *);\n \n /* This target uses the aix64.opt file.  */\n #define TARGET_USES_AIX64_OPT 1\n+\n+/* This target defines SUPPORTS_WEAK and TARGET_ASM_NAMED_SECTION,\n+   but does not have crtbegin/end.  */\n+\n+#define TARGET_USE_JCR_SECTION 0"}, {"sha": "09cd2bfce33068d21b80d84904246fb062461f54", "filename": "gcc/config/rs6000/aix53.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee06c6a59e447dd8eef90cd4caac05402cf32df4/gcc%2Fconfig%2Frs6000%2Faix53.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee06c6a59e447dd8eef90cd4caac05402cf32df4/gcc%2Fconfig%2Frs6000%2Faix53.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faix53.h?ref=ee06c6a59e447dd8eef90cd4caac05402cf32df4", "patch": "@@ -192,3 +192,8 @@ extern long long int    atoll(const char *);\n \n /* This target uses the aix64.opt file.  */\n #define TARGET_USES_AIX64_OPT 1\n+\n+/* This target defines SUPPORTS_WEAK and TARGET_ASM_NAMED_SECTION,\n+   but does not have crtbegin/end.  */\n+\n+#define TARGET_USE_JCR_SECTION 0"}, {"sha": "e62a775c745e3932fcd5fea748e9833cb540d2af", "filename": "gcc/config/rs6000/aix61.h", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee06c6a59e447dd8eef90cd4caac05402cf32df4/gcc%2Fconfig%2Frs6000%2Faix61.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee06c6a59e447dd8eef90cd4caac05402cf32df4/gcc%2Fconfig%2Frs6000%2Faix61.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faix61.h?ref=ee06c6a59e447dd8eef90cd4caac05402cf32df4", "patch": "@@ -194,4 +194,11 @@ extern long long int    atoll(const char *);\n /* This target uses the aix64.opt file.  */\n #define TARGET_USES_AIX64_OPT 1\n \n+/* This target defines SUPPORTS_WEAK and TARGET_ASM_NAMED_SECTION,\n+   but does not have crtbegin/end.  */\n+\n+#define TARGET_USE_JCR_SECTION 0\n+\n+/* Default to 128 bit long double.  */\n+\n #define RS6000_DEFAULT_LONG_DOUBLE_SIZE 128"}, {"sha": "2f1b04c4f386983543e0ad0aec122208bdec165e", "filename": "gcc/config/rs6000/rs6000-protos.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee06c6a59e447dd8eef90cd4caac05402cf32df4/gcc%2Fconfig%2Frs6000%2Frs6000-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee06c6a59e447dd8eef90cd4caac05402cf32df4/gcc%2Fconfig%2Frs6000%2Frs6000-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-protos.h?ref=ee06c6a59e447dd8eef90cd4caac05402cf32df4", "patch": "@@ -181,6 +181,10 @@ extern void rs6000_cpu_cpp_builtins (struct cpp_reader *);\n char *output_call (rtx, rtx *, int, int);\n #endif\n \n+#ifdef NO_DOLLAR_IN_LABEL\n+const char * rs6000_xcoff_strip_dollar (const char *);\n+#endif\n+\n void rs6000_final_prescan_insn (rtx, rtx *operand, int num_operands);\n \n extern bool rs6000_hard_regno_mode_ok_p[][FIRST_PSEUDO_REGISTER];"}, {"sha": "612c7d45d6724f3f627d6e948e72e1ea05a4a212", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee06c6a59e447dd8eef90cd4caac05402cf32df4/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee06c6a59e447dd8eef90cd4caac05402cf32df4/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=ee06c6a59e447dd8eef90cd4caac05402cf32df4", "patch": "@@ -18041,6 +18041,35 @@ toc_hash_eq (const void *h1, const void *h2)\n   || strncmp (\"_ZTI\", name, strlen (\"_ZTI\")) == 0\t\\\n   || strncmp (\"_ZTC\", name, strlen (\"_ZTC\")) == 0)\n \n+#ifdef NO_DOLLAR_IN_LABEL\n+/* Return a GGC-allocated character string translating dollar signs in\n+   input NAME to underscores.  Used by XCOFF ASM_OUTPUT_LABELREF.  */\n+\n+const char *\n+rs6000_xcoff_strip_dollar (const char *name)\n+{\n+  char *strip, *p;\n+  int len;\n+\n+  p = strchr (name, '$');\n+\n+  if (p == 0 || p == name)\n+    return name;\n+\n+  len = strlen (name);\n+  strip = (char *) alloca (len + 1);\n+  strcpy (strip, name);\n+  p = strchr (strip, '$');\n+  while (p)\n+    {\n+      *p = '_';\n+      p = strchr (p + 1, '$');\n+    }\n+\n+  return ggc_alloc_string (strip, len);\n+}\n+#endif\n+\n void\n rs6000_output_symbol_ref (FILE *file, rtx x)\n {"}, {"sha": "08e06b4a757468a631cbaaeabf14862187c09a2f", "filename": "gcc/config/rs6000/xcoff.h", "status": "modified", "additions": 52, "deletions": 10, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee06c6a59e447dd8eef90cd4caac05402cf32df4/gcc%2Fconfig%2Frs6000%2Fxcoff.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee06c6a59e447dd8eef90cd4caac05402cf32df4/gcc%2Fconfig%2Frs6000%2Fxcoff.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fxcoff.h?ref=ee06c6a59e447dd8eef90cd4caac05402cf32df4", "patch": "@@ -135,6 +135,7 @@\n /* This macro produces the initial definition of a function name.\n    On the RS/6000, we need to place an extra '.' in the function name and\n    output the function descriptor.\n+   Dollar signs are converted to underscores.\n \n    The csect for the function will have already been created when\n    text_section was selected.  We do have to go back to that csect, however.\n@@ -143,48 +144,83 @@\n    are placeholders which no longer have any use.  */\n \n #define ASM_DECLARE_FUNCTION_NAME(FILE,NAME,DECL)\t\t\\\n-{ if (TREE_PUBLIC (DECL))\t\t\t\t\t\\\n+{ char *buffer = (char *) alloca (strlen (NAME) + 1);\t\t\\\n+  char *p;\t\t\t\t\t\t\t\\\n+  int dollar_inside = 0;\t\t\t\t\t\\\n+  strcpy (buffer, NAME);\t\t\t\t\t\\\n+  p = strchr (buffer, '$');\t\t\t\t\t\\\n+  while (p) {\t\t\t\t\t\t\t\\\n+    *p = '_';\t\t\t\t\t\t\t\\\n+    dollar_inside++;\t\t\t\t\t\t\\\n+    p = strchr (p + 1, '$');\t\t\t\t\t\\\n+  }\t\t\t\t\t\t\t\t\\\n+  if (TREE_PUBLIC (DECL))\t\t\t\t\t\\\n     {\t\t\t\t\t\t\t\t\\\n       if (!RS6000_WEAK || !DECL_WEAK (decl))\t\t\t\\\n \t{\t\t\t\t\t\t\t\\\n+          if (dollar_inside) {\t\t\t\t\t\\\n+              fprintf(FILE, \"\\t.rename .%s,\\\".%s\\\"\\n\", buffer, NAME);\t\\\n+              fprintf(FILE, \"\\t.rename %s,\\\"%s\\\"\\n\", buffer, NAME);\t\\\n+\t    }\t\t\t\t\t\t\t\\\n \t  fputs (\"\\t.globl .\", FILE);\t\t\t\t\\\n-\t  RS6000_OUTPUT_BASENAME (FILE, NAME);\t\t\t\\\n+\t  RS6000_OUTPUT_BASENAME (FILE, buffer);\t\t\\\n \t  putc ('\\n', FILE);\t\t\t\t\t\\\n \t}\t\t\t\t\t\t\t\\\n     }\t\t\t\t\t\t\t\t\\\n   else\t\t\t\t\t\t\t\t\\\n     {\t\t\t\t\t\t\t\t\\\n+      if (dollar_inside) {\t\t\t\t\t\\\n+          fprintf(FILE, \"\\t.rename .%s,\\\".%s\\\"\\n\", buffer, NAME);\t\\\n+          fprintf(FILE, \"\\t.rename %s,\\\"%s\\\"\\n\", buffer, NAME);\t\\\n+\t}\t\t\t\t\t\t\t\\\n       fputs (\"\\t.lglobl .\", FILE);\t\t\t\t\\\n-      RS6000_OUTPUT_BASENAME (FILE, NAME);\t\t\t\\\n+      RS6000_OUTPUT_BASENAME (FILE, buffer);\t\t\t\\\n       putc ('\\n', FILE);\t\t\t\t\t\\\n     }\t\t\t\t\t\t\t\t\\\n   fputs (\"\\t.csect \", FILE);\t\t\t\t\t\\\n-  RS6000_OUTPUT_BASENAME (FILE, NAME);\t\t\t\t\\\n+  RS6000_OUTPUT_BASENAME (FILE, buffer);\t\t\t\\\n   fputs (TARGET_32BIT ? \"[DS]\\n\" : \"[DS],3\\n\", FILE);\t\t\\\n-  RS6000_OUTPUT_BASENAME (FILE, NAME);\t\t\t\t\\\n+  RS6000_OUTPUT_BASENAME (FILE, buffer);\t\t\t\\\n   fputs (\":\\n\", FILE);\t\t\t\t\t\t\\\n   fputs (TARGET_32BIT ? \"\\t.long .\" : \"\\t.llong .\", FILE);\t\\\n-  RS6000_OUTPUT_BASENAME (FILE, NAME);\t\t\t\t\\\n+  RS6000_OUTPUT_BASENAME (FILE, buffer);\t\t\t\\\n   fputs (\", TOC[tc0], 0\\n\", FILE);\t\t\t\t\\\n   in_section = NULL;\t\t\t\t\t\t\\\n   switch_to_section (function_section (DECL));\t\t\t\\\n   putc ('.', FILE);\t\t\t\t\t\t\\\n-  RS6000_OUTPUT_BASENAME (FILE, NAME);\t\t\t\t\\\n+  RS6000_OUTPUT_BASENAME (FILE, buffer);\t\t\t\\\n   fputs (\":\\n\", FILE);\t\t\t\t\t\t\\\n   if (write_symbols != NO_DEBUG)\t\t\t\t\\\n-    xcoffout_declare_function (FILE, DECL, NAME);\t\t\\\n+    xcoffout_declare_function (FILE, DECL, buffer);\t\t\\\n }\n \n /* Output a reference to SYM on FILE.  */\n \n #define ASM_OUTPUT_SYMBOL_REF(FILE, SYM) \\\n   rs6000_output_symbol_ref (FILE, SYM)\n \n-/* This says how to output an external.  */\n+/* This says how to output an external.\n+   Dollar signs are converted to underscores.  */\n \n #undef  ASM_OUTPUT_EXTERNAL\n #define ASM_OUTPUT_EXTERNAL(FILE, DECL, NAME)\t\t\t\t\\\n-{ rtx _symref = XEXP (DECL_RTL (DECL), 0);\t\t\t\t\\\n+{ char *buffer = (char *) alloca (strlen (NAME) + 1);\t\t\t\\\n+  char *p;\t\t\t\t\t\t\t\t\\\n+  rtx _symref = XEXP (DECL_RTL (DECL), 0);\t\t\t\t\\\n+  int dollar_inside = 0;\t\t\t\t\t\t\\\n+  strcpy (buffer, NAME);\t\t\t\t\t\t\\\n+  p = strchr (buffer, '$');\t\t\t\t\t\t\\\n+  while (p) {\t\t\t\t\t\t\t\t\\\n+    *p = '_';\t\t\t\t\t\t\t\t\\\n+    dollar_inside++;\t\t\t\t\t\t\t\\\n+    p = strchr (p + 1, '$');\t\t\t\t\t\t\\\n+  }\t\t\t\t\t\t\t\t\t\\\n+  if (dollar_inside) {\t\t\t\t\t\t\t\\\n+      fputs (\"\\t.extern .\", FILE);\t\t\t\t\t\\\n+      RS6000_OUTPUT_BASENAME (FILE, buffer);\t\t\t\t\\\n+      putc ('\\n', FILE);\t\t\t\t\t\t\\\n+      fprintf(FILE, \"\\t.rename .%s,\\\".%s\\\"\\n\", buffer, NAME);\t\t\\\n+    }\t\t\t\t\t\t\t\t\t\\\n   if ((TREE_CODE (DECL) == VAR_DECL\t\t\t\t\t\\\n        || TREE_CODE (DECL) == FUNCTION_DECL)\t\t\t\t\\\n       && (NAME)[strlen (NAME) - 1] != ']')\t\t\t\t\\\n@@ -196,6 +232,12 @@\n     }\t\t\t\t\t\t\t\t\t\\\n }\n \n+/* This is how to output a reference to a user-level label named NAME.\n+   `assemble_name' uses this.  */\n+\n+#define ASM_OUTPUT_LABELREF(FILE,NAME)\t\\\n+  asm_fprintf ((FILE), \"%U%s\", rs6000_xcoff_strip_dollar (NAME));\n+\n /* This is how to output an internal label prefix.  rs6000.c uses this\n    when generating traceback tables.  */\n "}, {"sha": "2143192c38fe33a972af3d953489762184ca9423", "filename": "gcc/xcoffout.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee06c6a59e447dd8eef90cd4caac05402cf32df4/gcc%2Fxcoffout.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee06c6a59e447dd8eef90cd4caac05402cf32df4/gcc%2Fxcoffout.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fxcoffout.h?ref=ee06c6a59e447dd8eef90cd4caac05402cf32df4", "patch": "@@ -84,7 +84,7 @@ along with GCC; see the file COPYING3.  If not see\n \t    fputs (_p+1, asm_out_file);\t\t\t\t\t\\\n \t  else\t\t\t\t\t\t\t\t\\\n \t    for (; *_p != '[' && *_p; _p++)\t\t\t\t\\\n-\t      putc (*_p, asm_out_file);\t\t\t\t\t\\\n+\t      putc (*_p != '$' ? *_p : '_', asm_out_file);\t\t\\\n \t}\t\t\t\t\t\t\t\t\\\n       else\t\t\t\t\t\t\t\t\\\n \toutput_addr_const (asm_out_file, ADDR);\t\t\t\t\\"}]}