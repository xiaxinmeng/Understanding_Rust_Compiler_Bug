{"sha": "9be3bb2c0a258fd6a7d3d05d232a21930c757d3c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWJlM2JiMmMwYTI1OGZkNmE3ZDNkMDVkMjMyYTIxOTMwYzc1N2QzYw==", "commit": {"author": {"name": "H.J. Lu", "email": "hjl.tools@gmail.com", "date": "2020-04-29T11:52:46Z"}, "committer": {"name": "H.J. Lu", "email": "hjl.tools@gmail.com", "date": "2020-04-29T11:53:02Z"}, "message": "x86: Allow -fcf-protection with external thunk\n\nAllow -fcf-protection with external thunk since the external thunk can be\nmade compatible with -fcf-protection.\n\ngcc/\n\n\tPR target/93654\n\t* config/i386/i386-options.c (ix86_set_indirect_branch_type):\n\tAllow -fcf-protection with -mindirect-branch=thunk-extern and\n\t-mfunction-return=thunk-extern.\n\t* doc/invoke.texi: Update notes for -fcf-protection=branch with\n\t-mindirect-branch=thunk-extern and -mindirect-return=thunk-extern.\n\ngcc/testsuite/\n\n\tPR target/93654\n\t* gcc.target/i386/pr93654.c: New test.", "tree": {"sha": "9ef8c3abbb149bc351e1b1f09038177c0240f003", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9ef8c3abbb149bc351e1b1f09038177c0240f003"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9be3bb2c0a258fd6a7d3d05d232a21930c757d3c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9be3bb2c0a258fd6a7d3d05d232a21930c757d3c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9be3bb2c0a258fd6a7d3d05d232a21930c757d3c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9be3bb2c0a258fd6a7d3d05d232a21930c757d3c/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "668d8f3c0c61905bc69a1c73f16fa4fa6273db2a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/668d8f3c0c61905bc69a1c73f16fa4fa6273db2a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/668d8f3c0c61905bc69a1c73f16fa4fa6273db2a"}], "stats": {"total": 37, "additions": 34, "deletions": 3}, "files": [{"sha": "67417932afc69b2b3a5138fea1a193948b4816a9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9be3bb2c0a258fd6a7d3d05d232a21930c757d3c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9be3bb2c0a258fd6a7d3d05d232a21930c757d3c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9be3bb2c0a258fd6a7d3d05d232a21930c757d3c", "patch": "@@ -1,3 +1,12 @@\n+2020-04-29  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/93654\n+\t* config/i386/i386-options.c (ix86_set_indirect_branch_type):\n+\tAllow -fcf-protection with -mindirect-branch=thunk-extern and\n+\t-mfunction-return=thunk-extern.\n+\t* doc/invoke.texi: Update notes for -fcf-protection=branch with\n+\t-mindirect-branch=thunk-extern and -mindirect-return=thunk-extern.\n+\n 2020-04-29  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* doc/sourcebuild.texi: Add missing arm_arch_v8a_hard_ok anchor."}, {"sha": "5c21fce06a4c2a650293bf8cc970ec7c1a7b5f6a", "filename": "gcc/config/i386/i386-options.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9be3bb2c0a258fd6a7d3d05d232a21930c757d3c/gcc%2Fconfig%2Fi386%2Fi386-options.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9be3bb2c0a258fd6a7d3d05d232a21930c757d3c/gcc%2Fconfig%2Fi386%2Fi386-options.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-options.c?ref=9be3bb2c0a258fd6a7d3d05d232a21930c757d3c", "patch": "@@ -3083,6 +3083,8 @@ ix86_set_indirect_branch_type (tree fndecl)\n \t\t? \"thunk-extern\" : \"thunk\"));\n \n       if (cfun->machine->indirect_branch_type != indirect_branch_keep\n+\t  && (cfun->machine->indirect_branch_type\n+\t      != indirect_branch_thunk_extern)\n \t  && (flag_cf_protection & CF_RETURN))\n \terror (\"%<-mindirect-branch%> and %<-fcf-protection%> are not \"\n \t       \"compatible\");\n@@ -3126,6 +3128,8 @@ ix86_set_indirect_branch_type (tree fndecl)\n \t\t? \"thunk-extern\" : \"thunk\"));\n \n       if (cfun->machine->function_return_type != indirect_branch_keep\n+\t  && (cfun->machine->function_return_type\n+\t      != indirect_branch_thunk_extern)\n \t  && (flag_cf_protection & CF_RETURN))\n \terror (\"%<-mfunction-return%> and %<-fcf-protection%> are not \"\n \t       \"compatible\");"}, {"sha": "5bb7d94833e52ce7023434188fbb9a38da20baaf", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9be3bb2c0a258fd6a7d3d05d232a21930c757d3c/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9be3bb2c0a258fd6a7d3d05d232a21930c757d3c/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=9be3bb2c0a258fd6a7d3d05d232a21930c757d3c", "patch": "@@ -30097,9 +30097,9 @@ Note that @option{-mcmodel=large} is incompatible with\n @option{-mindirect-branch=thunk-extern} since the thunk function may\n not be reachable in the large code model.\n \n-Note that @option{-mindirect-branch=thunk-extern} is incompatible with\n-@option{-fcf-protection=branch} since the external thunk cannot be modified\n-to disable control-flow check.\n+Note that @option{-mindirect-branch=thunk-extern} is compatible with\n+@option{-fcf-protection=branch} since the external thunk can be made\n+to enable control-flow check.\n \n @item -mfunction-return=@var{choice}\n @opindex mfunction-return\n@@ -30112,6 +30112,10 @@ object file.  You can control this behavior for a specific function by\n using the function attribute @code{function_return}.\n @xref{Function Attributes}.\n \n+Note that @option{-mindirect-return=thunk-extern} is compatible with\n+@option{-fcf-protection=branch} since the external thunk can be made\n+to enable control-flow check.\n+\n Note that @option{-mcmodel=large} is incompatible with\n @option{-mfunction-return=thunk} and\n @option{-mfunction-return=thunk-extern} since the thunk function may"}, {"sha": "b635ce1939d698ac977e8948c0dbd42b7264faa3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9be3bb2c0a258fd6a7d3d05d232a21930c757d3c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9be3bb2c0a258fd6a7d3d05d232a21930c757d3c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9be3bb2c0a258fd6a7d3d05d232a21930c757d3c", "patch": "@@ -1,3 +1,8 @@\n+2020-04-29  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/93654\n+\t* gcc.target/i386/pr93654.c: New test.\n+\n 2020-04-29  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* lib/target-supports.exp: Add v8a_hard to the list of arm_arch_*"}, {"sha": "ec5bdce86a6bfc763cea94f95d00b44a16f9eda1", "filename": "gcc/testsuite/gcc.target/i386/pr93654.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9be3bb2c0a258fd6a7d3d05d232a21930c757d3c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr93654.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9be3bb2c0a258fd6a7d3d05d232a21930c757d3c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr93654.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr93654.c?ref=9be3bb2c0a258fd6a7d3d05d232a21930c757d3c", "patch": "@@ -0,0 +1,9 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fcf-protection -mfunction-return=thunk-extern -mindirect-branch=thunk-extern\" } */\n+\n+int\n+bar (void (*foo) (void))\n+{\n+  foo (); \n+  return 0;\n+}"}]}