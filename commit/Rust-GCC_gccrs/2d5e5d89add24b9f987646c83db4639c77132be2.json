{"sha": "2d5e5d89add24b9f987646c83db4639c77132be2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmQ1ZTVkODlhZGQyNGI5Zjk4NzY0NmM4M2RiNDYzOWM3NzEzMmJlMg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@adacore.com", "date": "2021-01-05T13:05:12Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-05-04T09:17:32Z"}, "message": "[Ada] Address some ??? comments\n\ngcc/ada/\n\n\t* cstand.adb, sprint.adb, switch-c.adb, xr_tabls.ads,\n\txr_tabls.adb, xref_lib.adb: Address ??? comments.", "tree": {"sha": "f4c543ee3010f464cfc6fdc3019a98fa0aa79f1b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f4c543ee3010f464cfc6fdc3019a98fa0aa79f1b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2d5e5d89add24b9f987646c83db4639c77132be2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d5e5d89add24b9f987646c83db4639c77132be2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d5e5d89add24b9f987646c83db4639c77132be2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d5e5d89add24b9f987646c83db4639c77132be2/comments", "author": {"login": "ArnaudCharlet", "id": 30291825, "node_id": "MDQ6VXNlcjMwMjkxODI1", "avatar_url": "https://avatars.githubusercontent.com/u/30291825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArnaudCharlet", "html_url": "https://github.com/ArnaudCharlet", "followers_url": "https://api.github.com/users/ArnaudCharlet/followers", "following_url": "https://api.github.com/users/ArnaudCharlet/following{/other_user}", "gists_url": "https://api.github.com/users/ArnaudCharlet/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArnaudCharlet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArnaudCharlet/subscriptions", "organizations_url": "https://api.github.com/users/ArnaudCharlet/orgs", "repos_url": "https://api.github.com/users/ArnaudCharlet/repos", "events_url": "https://api.github.com/users/ArnaudCharlet/events{/privacy}", "received_events_url": "https://api.github.com/users/ArnaudCharlet/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0a272ac33f4baa3f616718aa9168dded33cde21b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a272ac33f4baa3f616718aa9168dded33cde21b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0a272ac33f4baa3f616718aa9168dded33cde21b"}], "stats": {"total": 52, "additions": 24, "deletions": 28}, "files": [{"sha": "d15708bdbba7ea51ff8a8080c7418dab39e610fe", "filename": "gcc/ada/cstand.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d5e5d89add24b9f987646c83db4639c77132be2/gcc%2Fada%2Fcstand.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d5e5d89add24b9f987646c83db4639c77132be2/gcc%2Fada%2Fcstand.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcstand.adb?ref=2d5e5d89add24b9f987646c83db4639c77132be2", "patch": "@@ -817,7 +817,7 @@ package body CStand is\n \n       B_Node := New_Node (N_Character_Literal, Stloc);\n       Set_Is_Static_Expression (B_Node);\n-      Set_Chars                (B_Node, No_Name);    --  ???\n+      Set_Chars                (B_Node, No_Name);\n       Set_Char_Literal_Value   (B_Node, Uint_0);\n       Set_Entity               (B_Node, Empty);\n       Set_Etype                (B_Node, Standard_Wide_Character);\n@@ -827,7 +827,7 @@ package body CStand is\n \n       B_Node := New_Node (N_Character_Literal, Stloc);\n       Set_Is_Static_Expression (B_Node);\n-      Set_Chars                (B_Node, No_Name);    --  ???\n+      Set_Chars                (B_Node, No_Name);\n       Set_Char_Literal_Value   (B_Node, UI_From_Int (16#FFFF#));\n       Set_Entity               (B_Node, Empty);\n       Set_Etype                (B_Node, Standard_Wide_Character);\n@@ -866,7 +866,7 @@ package body CStand is\n \n       B_Node := New_Node (N_Character_Literal, Stloc);\n       Set_Is_Static_Expression (B_Node);\n-      Set_Chars                (B_Node, No_Name);    --  ???\n+      Set_Chars                (B_Node, No_Name);\n       Set_Char_Literal_Value   (B_Node, Uint_0);\n       Set_Entity               (B_Node, Empty);\n       Set_Etype                (B_Node, Standard_Wide_Wide_Character);\n@@ -876,7 +876,7 @@ package body CStand is\n \n       B_Node := New_Node (N_Character_Literal, Stloc);\n       Set_Is_Static_Expression (B_Node);\n-      Set_Chars                (B_Node, No_Name);    --  ???\n+      Set_Chars                (B_Node, No_Name);\n       Set_Char_Literal_Value   (B_Node, UI_From_Int (16#7FFF_FFFF#));\n       Set_Entity               (B_Node, Empty);\n       Set_Etype                (B_Node, Standard_Wide_Wide_Character);"}, {"sha": "213b63171060f6c4b55e9da097273c9befde9d74", "filename": "gcc/ada/sprint.adb", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d5e5d89add24b9f987646c83db4639c77132be2/gcc%2Fada%2Fsprint.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d5e5d89add24b9f987646c83db4639c77132be2/gcc%2Fada%2Fsprint.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsprint.adb?ref=2d5e5d89add24b9f987646c83db4639c77132be2", "patch": "@@ -3132,11 +3132,6 @@ package body Sprint is\n \n             Write_Char (';');\n \n-         --  Don't we want to print more detail???\n-\n-         --  Doc of this extended syntax belongs in sinfo.ads and/or\n-         --  sprint.ads ???\n-\n          when N_SCIL_Dispatch_Table_Tag_Init =>\n             Write_Indent_Str (\"[N_SCIL_Dispatch_Table_Tag_Init]\");\n \n@@ -4578,7 +4573,8 @@ package body Sprint is\n                         Write_Str (\");\");\n                      end;\n \n-                  --  For all other Itypes, print ??? (fill in later)\n+                  --  For all other Itypes, print a triple ? (fill in later\n+                  --  if needed).\n \n                   when others =>\n                      Write_Header (True);"}, {"sha": "1e94aded0851f2dc4fc59e8e63f8c1d26c795421", "filename": "gcc/ada/switch-c.adb", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d5e5d89add24b9f987646c83db4639c77132be2/gcc%2Fada%2Fswitch-c.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d5e5d89add24b9f987646c83db4639c77132be2/gcc%2Fada%2Fswitch-c.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fswitch-c.adb?ref=2d5e5d89add24b9f987646c83db4639c77132be2", "patch": "@@ -427,7 +427,7 @@ package body Switch.C is\n                --  The reason for this prohibition is that the rewriting of\n                --  Sloc values causes strange malfunctions in the tests of\n                --  whether units belong to the main source. This is really a\n-               --  bug, but too hard to fix for a marginal capability ???\n+               --  bug, but too hard to fix for a marginal capability.\n \n                --  The proper fix is to completely redo -gnatD processing so\n                --  that the tree is not messed with, and instead a separate\n@@ -1613,11 +1613,6 @@ package body Switch.C is\n                   Ptr := Ptr + 1;\n                end if;\n \n-            --  We ignore '/' in switches, this is historical, still needed???\n-\n-            when '/' =>\n-               Store_Switch := False;\n-\n             --  Anything else is an error (illegal switch character)\n \n             when others =>"}, {"sha": "a4c52d0ab9b01cbc33505738781fd663c1eaac5c", "filename": "gcc/ada/xr_tabls.adb", "status": "modified", "additions": 15, "deletions": 10, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d5e5d89add24b9f987646c83db4639c77132be2/gcc%2Fada%2Fxr_tabls.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d5e5d89add24b9f987646c83db4639c77132be2/gcc%2Fada%2Fxr_tabls.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fxr_tabls.adb?ref=2d5e5d89add24b9f987646c83db4639c77132be2", "patch": "@@ -106,10 +106,16 @@ package body Xr_Tabls is\n    --  when sorting the table.\n \n    Longest_File_Name_In_Table : Natural := 0;\n-   Unvisited_Files            : Unvisited_Files_Access := null;\n-   Directories                : Project_File_Ptr;\n-   Default_Match              : Boolean := False;\n-   --  The above need commenting ???\n+   --  The length of the longest file name stored\n+\n+   Unvisited_Files : Unvisited_Files_Access := null;\n+   --  Linked list of unvisited files\n+\n+   Directories : Project_File_Ptr;\n+   --  Store the list of directories to visit\n+\n+   Default_Match : Boolean := False;\n+   --  Default value for match in declarations\n \n    function Parse_Gnatls_Src return String;\n    --  Return the standard source directories (taking into account the\n@@ -482,9 +488,8 @@ package body Xr_Tabls is\n    -------------------\n \n    function ALI_File_Name (Ada_File_Name : String) return String is\n-\n-      --  ??? Should ideally be based on the naming scheme defined in\n-      --  project files.\n+      --  Should ideally be based on the naming scheme defined in\n+      --  project files but this is too late for an obsolescent feature.\n \n       Index : constant Natural :=\n                 Ada.Strings.Fixed.Index\n@@ -762,7 +767,7 @@ package body Xr_Tabls is\n       Strip    : Natural    := 0) return String\n    is\n       pragma Annotate (CodePeer, Skip_Analysis);\n-      --  ??? To disable false positives currently generated\n+      --  Disable CodePeer false positives\n \n       Tmp : GNAT.OS_Lib.String_Access;\n \n@@ -1385,8 +1390,8 @@ package body Xr_Tabls is\n    begin\n       File_Ref.Visited := False;\n \n-      --  ??? Do not add a source file to the list. This is true at\n-      --  least for gnatxref, and probably for gnatfind as well\n+      --  Do not add a source file to the list. This is true for gnatxref\n+      --  gnatfind, so good enough.\n \n       if F'Length > 4\n         and then F (F'Last - 3 .. F'Last) = \".\" & Osint.ALI_Suffix.all"}, {"sha": "2f4dea0903c937195d5b2a565c6cf15062a8279c", "filename": "gcc/ada/xr_tabls.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d5e5d89add24b9f987646c83db4639c77132be2/gcc%2Fada%2Fxr_tabls.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d5e5d89add24b9f987646c83db4639c77132be2/gcc%2Fada%2Fxr_tabls.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fxr_tabls.ads?ref=2d5e5d89add24b9f987646c83db4639c77132be2", "patch": "@@ -23,7 +23,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  We need comment here saying what this package is???\n+--  Cross reference utilities used by gnatxref and gnatfind\n \n with GNAT.OS_Lib;\n "}, {"sha": "9a584a454a7397659b1cbd59fbfa8a3012db4cd5", "filename": "gcc/ada/xref_lib.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d5e5d89add24b9f987646c83db4639c77132be2/gcc%2Fada%2Fxref_lib.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d5e5d89add24b9f987646c83db4639c77132be2/gcc%2Fada%2Fxref_lib.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fxref_lib.adb?ref=2d5e5d89add24b9f987646c83db4639c77132be2", "patch": "@@ -786,7 +786,7 @@ package body Xref_Lib is\n       --  line and column in the dependent unit number Eun. For this we need\n       --  to parse the ali file again because the parent entity is not in\n       --  the declaration table if it did not match the search pattern.\n-      --  If the symbol is not found, we return \"???\".\n+      --  If the symbol is not found, we return (1 .. 3 => '?').\n \n       procedure Skip_To_Matching_Closing_Bracket;\n       --  When Ptr points to an opening square bracket, moves it to the"}]}