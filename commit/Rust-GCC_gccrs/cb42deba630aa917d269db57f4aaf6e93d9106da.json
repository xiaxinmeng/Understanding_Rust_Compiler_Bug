{"sha": "cb42deba630aa917d269db57f4aaf6e93d9106da", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2I0MmRlYmE2MzBhYTkxN2QyNjlkYjU3ZjRhYWY2ZTkzZDkxMDZkYQ==", "commit": {"author": {"name": "Andreas Schwab", "email": "schwab@suse.de", "date": "2004-07-05T18:36:47Z"}, "committer": {"name": "Andreas Schwab", "email": "schwab@gcc.gnu.org", "date": "2004-07-05T18:36:47Z"}, "message": "ada-tree.h (TYPE_LEFT_JUSTIFIED_MODULAR_P): Use RECORD_OR_UNION_CHECK.\n\n\t* ada-tree.h (TYPE_LEFT_JUSTIFIED_MODULAR_P): Use\n\tRECORD_OR_UNION_CHECK.\n\t(TYPE_CONTAINS_TEMPLATE_P): Likewise.\n\nFrom-SVN: r84127", "tree": {"sha": "2825d325a0fec7e2c2ed4e95b99c1d912f1dda85", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2825d325a0fec7e2c2ed4e95b99c1d912f1dda85"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cb42deba630aa917d269db57f4aaf6e93d9106da", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb42deba630aa917d269db57f4aaf6e93d9106da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb42deba630aa917d269db57f4aaf6e93d9106da", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb42deba630aa917d269db57f4aaf6e93d9106da/comments", "author": {"login": "andreas-schwab", "id": 2175493, "node_id": "MDQ6VXNlcjIxNzU0OTM=", "avatar_url": "https://avatars.githubusercontent.com/u/2175493?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andreas-schwab", "html_url": "https://github.com/andreas-schwab", "followers_url": "https://api.github.com/users/andreas-schwab/followers", "following_url": "https://api.github.com/users/andreas-schwab/following{/other_user}", "gists_url": "https://api.github.com/users/andreas-schwab/gists{/gist_id}", "starred_url": "https://api.github.com/users/andreas-schwab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andreas-schwab/subscriptions", "organizations_url": "https://api.github.com/users/andreas-schwab/orgs", "repos_url": "https://api.github.com/users/andreas-schwab/repos", "events_url": "https://api.github.com/users/andreas-schwab/events{/privacy}", "received_events_url": "https://api.github.com/users/andreas-schwab/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c31b8e1b17c56b489399c674ed242c657dd8bf62", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c31b8e1b17c56b489399c674ed242c657dd8bf62", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c31b8e1b17c56b489399c674ed242c657dd8bf62"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "ac4e70ab74473a2d66964a043d9bd07a15525e28", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb42deba630aa917d269db57f4aaf6e93d9106da/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb42deba630aa917d269db57f4aaf6e93d9106da/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=cb42deba630aa917d269db57f4aaf6e93d9106da", "patch": "@@ -1,3 +1,9 @@\n+2004-07-05  Andreas Schwab  <schwab@suse.de>\n+\n+\t* ada-tree.h (TYPE_LEFT_JUSTIFIED_MODULAR_P): Use\n+\tRECORD_OR_UNION_CHECK.\n+\t(TYPE_CONTAINS_TEMPLATE_P): Likewise.\n+\n 2004-07-04  Kelley Cook  <kcook@gcc.gnu.org>\n \n \t* Make-lang.in (doc/gnat_ugn_unw.texi): Eliminate explicit"}, {"sha": "b0126846e8cb4c7790fbaa8fb2873dbfc76507c4", "filename": "gcc/ada/ada-tree.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb42deba630aa917d269db57f4aaf6e93d9106da/gcc%2Fada%2Fada-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb42deba630aa917d269db57f4aaf6e93d9106da/gcc%2Fada%2Fada-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fada-tree.h?ref=cb42deba630aa917d269db57f4aaf6e93d9106da", "patch": "@@ -71,7 +71,7 @@ struct lang_type GTY(()) {union lang_tree_node t; };\n /* For RECORD_TYPE, UNION_TYPE, and QUAL_UNION_TYPE, nonzero if this denotes\n    a left-justified modular type (will only be true for RECORD_TYPE).  */\n #define TYPE_LEFT_JUSTIFIED_MODULAR_P(NODE) \\\n-  TYPE_LANG_FLAG_1 (REC_OR_UNION_CHECK (NODE))\n+  TYPE_LANG_FLAG_1 (RECORD_OR_UNION_CHECK (NODE))\n \n /* Nonzero in an arithmetic subtype if this is a subtype not known to the\n    front-end.  */\n@@ -84,7 +84,7 @@ struct lang_type GTY(()) {union lang_tree_node t; };\n    type for an object whose type includes its template in addition to\n    its value (only true for RECORD_TYPE).  */\n #define TYPE_CONTAINS_TEMPLATE_P(NODE) \\\n-  TYPE_LANG_FLAG_3 (REC_OR_UNION_CHECK (NODE))\n+  TYPE_LANG_FLAG_3 (RECORD_OR_UNION_CHECK (NODE))\n \n /* For INTEGER_TYPE, nonzero if this really represents a VAX\n    floating-point type.  */"}]}