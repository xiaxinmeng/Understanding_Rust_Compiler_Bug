{"sha": "a995c40d03ea8829a7c05836c5f4ca557dddfae4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTk5NWM0MGQwM2VhODgyOWE3YzA1ODM2YzVmNGNhNTU3ZGRkZmFlNA==", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2020-09-08T00:16:32Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2020-09-08T00:16:32Z"}, "message": "Daily bump.", "tree": {"sha": "b82658e370846aa84a53a3c7641a04ed10f9fcb4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b82658e370846aa84a53a3c7641a04ed10f9fcb4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a995c40d03ea8829a7c05836c5f4ca557dddfae4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a995c40d03ea8829a7c05836c5f4ca557dddfae4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a995c40d03ea8829a7c05836c5f4ca557dddfae4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a995c40d03ea8829a7c05836c5f4ca557dddfae4/comments", "author": null, "committer": null, "parents": [{"sha": "9164caf25cb210ad0a69357b226e39913aff00d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9164caf25cb210ad0a69357b226e39913aff00d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9164caf25cb210ad0a69357b226e39913aff00d1"}], "stats": {"total": 200, "additions": 199, "deletions": 1}, "files": [{"sha": "55089aa26923d5327bfa0633c7d25a71d27419b2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 109, "deletions": 0, "changes": 109, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a995c40d03ea8829a7c05836c5f4ca557dddfae4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a995c40d03ea8829a7c05836c5f4ca557dddfae4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a995c40d03ea8829a7c05836c5f4ca557dddfae4", "patch": "@@ -1,3 +1,112 @@\n+2020-09-07  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\tPR rtl-optimization/96796\n+\t* lra-constraints.c (in_class_p): Add a default-false\n+\tallow_all_reload_class_changes_p parameter.  Do not treat\n+\treload moves specially when the parameter is true.\n+\t(get_reload_reg): Try to narrow the class of an existing OP_OUT\n+\treload if we're reloading a reload pseudo in a reload instruction.\n+\n+2020-09-07  Andrea Corallo  <andrea.corallo@arm.com>\n+\n+\t* tree-vect-loop.c (vect_estimate_min_profitable_iters): Revert\n+\tdead-code removal introduced by 09fa6acd8d9 + add a comment to\n+\tclarify.\n+\n+2020-09-07  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n+\n+\t* doc/rtl.texi (subreg): Fix documentation to state there is a known\n+\tnumber of undefined bits in regs and subregs of MODE_PARTIAL_INT modes.\n+\n+2020-09-07  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n+\n+\t* config/msp430/msp430.c (msp430_option_override): Don't set the\n+\tISA to 430 when the MCU is unrecognized.\n+\n+2020-09-07  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\t* config/darwin.c (darwin_libc_has_function): Report sincos\n+\tavailable from 10.9.\n+\n+2020-09-07  Alex Coplan  <alex.coplan@arm.com>\n+\n+\t* config/aarch64/aarch64.md (*adds_mul_imm_<mode>): Delete.\n+\t(*subs_mul_imm_<mode>): Delete.\n+\t(*adds_<optab><mode>_multp2): Delete.\n+\t(*subs_<optab><mode>_multp2): Delete.\n+\t(*add_mul_imm_<mode>): Delete.\n+\t(*add_<optab><ALLX:mode>_mult_<GPI:mode>): Delete.\n+\t(*add_<optab><SHORT:mode>_mult_si_uxtw): Delete.\n+\t(*add_<optab><mode>_multp2): Delete.\n+\t(*add_<optab>si_multp2_uxtw): Delete.\n+\t(*add_uxt<mode>_multp2): Delete.\n+\t(*add_uxtsi_multp2_uxtw): Delete.\n+\t(*sub_mul_imm_<mode>): Delete.\n+\t(*sub_mul_imm_si_uxtw): Delete.\n+\t(*sub_<optab><mode>_multp2): Delete.\n+\t(*sub_<optab>si_multp2_uxtw): Delete.\n+\t(*sub_uxt<mode>_multp2): Delete.\n+\t(*sub_uxtsi_multp2_uxtw): Delete.\n+\t(*neg_mul_imm_<mode>2): Delete.\n+\t(*neg_mul_imm_si2_uxtw): Delete.\n+\t* config/aarch64/predicates.md (aarch64_pwr_imm3): Delete.\n+\t(aarch64_pwr_2_si): Delete.\n+\t(aarch64_pwr_2_di): Delete.\n+\n+2020-09-07  Alex Coplan  <alex.coplan@arm.com>\n+\n+\t* config/aarch64/aarch64.md\n+\t(*adds_<optab><ALLX:mode>_<GPI:mode>): Ensure extended operand\n+\tagrees with width of extension specifier.\n+\t(*subs_<optab><ALLX:mode>_<GPI:mode>): Likewise.\n+\t(*adds_<optab><ALLX:mode>_shift_<GPI:mode>): Likewise.\n+\t(*subs_<optab><ALLX:mode>_shift_<GPI:mode>): Likewise.\n+\t(*add_<optab><ALLX:mode>_<GPI:mode>): Likewise.\n+\t(*add_<optab><ALLX:mode>_shft_<GPI:mode>): Likewise.\n+\t(*add_uxt<mode>_shift2): Likewise.\n+\t(*sub_<optab><ALLX:mode>_<GPI:mode>): Likewise.\n+\t(*sub_<optab><ALLX:mode>_shft_<GPI:mode>): Likewise.\n+\t(*sub_uxt<mode>_shift2): Likewise.\n+\t(*cmp_swp_<optab><ALLX:mode>_reg<GPI:mode>): Likewise.\n+\t(*cmp_swp_<optab><ALLX:mode>_shft_<GPI:mode>): Likewise.\n+\n+2020-09-07  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-vect-slp.c (vect_analyze_slp_instance): Dump\n+\tstmts we start SLP analysis from, failure and splitting.\n+\t(vect_schedule_slp): Dump SLP graph entry and root stmt\n+\twe are about to emit code for.\n+\n+2020-09-07  Martin Storsj\u00f6  <martin@martin.st>\n+\n+\t* dwarf2out.c (file_name_acquire): Make a strchr return value\n+\tpointer to const.\n+\n+2020-09-07  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR debug/94235\n+\t* lto-streamer-out.c (output_cfg): Also stream goto_locus for edges.\n+\tUse bp_pack_var_len_unsigned instead of streamer_write_uhwi to stream\n+\te->dest->index and e->flags.\n+\t(output_function): Call output_cfg before output_ssa_name, rather than\n+\tafter streaming all bbs.\n+\t* lto-streamer-in.c (input_cfg): Stream in goto_locus for edges.\n+\tUse bp_unpack_var_len_unsigned instead of streamer_read_uhwi to stream\n+\tin dest_index and edge_flags.\n+\n+2020-09-07  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-vectorizer.h (vectorizable_live_operation): Adjust.\n+\t* tree-vect-loop.c (vectorizable_live_operation): Vectorize\n+\tlive lanes out of basic-block vectorization nodes.\n+\t* tree-vect-slp.c (vect_bb_slp_mark_live_stmts): New function.\n+\t(vect_slp_analyze_operations): Analyze live lanes and their\n+\tvectorization possibility after the whole SLP graph is final.\n+\t(vect_bb_slp_scalar_cost): Adjust for vectorized live lanes.\n+\t* tree-vect-stmts.c (can_vectorize_live_stmts): Adjust.\n+\t(vect_transform_stmt): Call can_vectorize_live_stmts also for\n+\tbasic-block vectorization.\n+\n 2020-09-04  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/96698"}, {"sha": "07b43358ffee97fb8a7095d0675066e9e43a9b5f", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a995c40d03ea8829a7c05836c5f4ca557dddfae4/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a995c40d03ea8829a7c05836c5f4ca557dddfae4/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=a995c40d03ea8829a7c05836c5f4ca557dddfae4", "patch": "@@ -1 +1 @@\n-20200907\n+20200908"}, {"sha": "746c4a7fcfaed5f53b77aab6e95b29fea5749efa", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a995c40d03ea8829a7c05836c5f4ca557dddfae4/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a995c40d03ea8829a7c05836c5f4ca557dddfae4/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=a995c40d03ea8829a7c05836c5f4ca557dddfae4", "patch": "@@ -1,3 +1,24 @@\n+2020-09-07  Harald Anlauf  <anlauf@gmx.de>\n+\n+\t* trans-intrinsic.c (build_round_expr): Use temporary with\n+\tappropriate kind for conversion before rounding to nearest\n+\tinteger when the result precision is 128 bits.\n+\n+2020-09-07  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\tPR fortran/96896\n+\t* resolve.c (get_temp_from_expr): Also reset proc_pointer +\n+\tuse_assoc attribute.\n+\t(resolve_ptr_fcn_assign): Use information from the LHS.\n+\n+2020-09-07  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n+\n+\t* trans-types.c (gfc_get_derived_type): Fix argument types.\n+\n+2020-09-07  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n+\n+\t* resolve.c (resolve_select_type): Provide a formal arg list.\n+\n 2020-09-06  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n \n \t* trans-types.c (gfc_get_ppc_type): Add comment."}, {"sha": "1a3576675ebc6bed36569866a24923170f7fa3a3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a995c40d03ea8829a7c05836c5f4ca557dddfae4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a995c40d03ea8829a7c05836c5f4ca557dddfae4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a995c40d03ea8829a7c05836c5f4ca557dddfae4", "patch": "@@ -1,3 +1,53 @@\n+2020-09-07  Harald Anlauf  <anlauf@gmx.de>\n+\n+\t* gfortran.dg/pr96711.f90: New test.\n+\n+2020-09-07  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\tPR rtl-optimization/96796\n+\t* gcc.c-torture/compile/pr96796.c: New test.\n+\n+2020-09-07  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n+\n+\t* gcc.target/msp430/430x-default-isa.c: New test.\n+\n+2020-09-07  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\t* gcc.dg/pubtypes-2.c: Amend Pub Info Length.\n+\t* gcc.dg/pubtypes-3.c: Likewise.\n+\t* gcc.dg/pubtypes-4.c: Likewise.\n+\n+2020-09-07  Alex Coplan  <alex.coplan@arm.com>\n+\n+\t* gcc.target/aarch64/adds3.c: Fix test w.r.t. new syntax.\n+\t* gcc.target/aarch64/cmp.c: Likewise.\n+\t* gcc.target/aarch64/subs3.c: Likewise.\n+\t* gcc.target/aarch64/subsp.c: Likewise.\n+\t* gcc.target/aarch64/extend-syntax.c: New test.\n+\n+2020-09-07  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\tPR fortran/96896\n+\t* gfortran.dg/ptr_func_assign_4.f08: Update dg-error.\n+\t* gfortran.dg/ptr-func-3.f90: New test.\n+\n+2020-09-07  liuhongt  <hongtao.liu@intel.com>\n+\n+\t* gcc.dg/vect/slp-46.c: Add --param vect-epilogues-nomask=0 to\n+\tvoid backend interference.\n+\n+2020-09-07  Richard Biener  <rguenther@suse.de>\n+\n+\t* gcc.dg/vect/bb-slp-46.c: New testcase.\n+\t* gcc.dg/vect/bb-slp-47.c: Likewise.\n+\t* gcc.dg/vect/bb-slp-32.c: Adjust.\n+\n+2020-09-07  liuhongt  <hongtao.liu@intel.com>\n+\n+\t* gcc.target/i386/pr92658-avx512bw-trunc.c: Add\n+\t-mprefer-vector-width=512 to avoid impact of different default\n+\ttune which gcc is built with.\n+\n 2020-09-06  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n \n \t* gfortran.dg/coarray_fail_st.f90: Adjust test."}, {"sha": "ce4fdef004ee05d37bbe006ed3f63bd7a23431d9", "filename": "libatomic/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a995c40d03ea8829a7c05836c5f4ca557dddfae4/libatomic%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a995c40d03ea8829a7c05836c5f4ca557dddfae4/libatomic%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libatomic%2FChangeLog?ref=a995c40d03ea8829a7c05836c5f4ca557dddfae4", "patch": "@@ -1,3 +1,7 @@\n+2020-09-07  Tom de Vries  <tdevries@suse.de>\n+\n+\t* testsuite/libatomic.c/atomic-generic.c: Include string.h.\n+\n 2020-07-14  David Edelsohn  <dje.gcc@gmail.com>\n \n \t* config/t-aix: Set BITS from compiler cpp macro."}, {"sha": "e3b4e3d297eb5015c34df0bfa548fcac6e64ef42", "filename": "libcpp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a995c40d03ea8829a7c05836c5f4ca557dddfae4/libcpp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a995c40d03ea8829a7c05836c5f4ca557dddfae4/libcpp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2FChangeLog?ref=a995c40d03ea8829a7c05836c5f4ca557dddfae4", "patch": "@@ -1,3 +1,8 @@\n+2020-09-07  Martin Storsj\u00f6  <martin@martin.st>\n+\n+\t* files.c (remap_filename): Make a strchr return value pointer\n+\tto const.\n+\n 2020-07-30  H.J. Lu  <hjl.tools@gmail.com>\n \n \tPR bootstrap/96202"}, {"sha": "db46c407d6e9ec71161e13d704b4f0e314baef25", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a995c40d03ea8829a7c05836c5f4ca557dddfae4/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a995c40d03ea8829a7c05836c5f4ca557dddfae4/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=a995c40d03ea8829a7c05836c5f4ca557dddfae4", "patch": "@@ -1,3 +1,12 @@\n+2020-09-07  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/std/chrono (duration::_S_gcd): Use invariant that\n+\tneither value is zero initially.\n+\n+2020-09-07  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/std/ranges (__box): Simplify constraints as per LWG 3477.\n+\n 2020-09-03  Jonathan Wakely  <jwakely@redhat.com>\n \n \tPR libstdc++/96592"}]}