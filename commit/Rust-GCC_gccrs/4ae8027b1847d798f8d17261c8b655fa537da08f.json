{"sha": "4ae8027b1847d798f8d17261c8b655fa537da08f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGFlODAyN2IxODQ3ZDc5OGY4ZDE3MjYxYzhiNjU1ZmE1MzdkYTA4Zg==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2008-09-11T17:08:04Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2008-09-11T17:08:04Z"}, "message": "i386.h: Fix whitespace issues.\n\n\t* config/i386/i386.h: Fix whitespace issues.\n\nFrom-SVN: r140294", "tree": {"sha": "4229ba1bef8842893b63e7cdd140f8ec5980ce61", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4229ba1bef8842893b63e7cdd140f8ec5980ce61"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4ae8027b1847d798f8d17261c8b655fa537da08f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ae8027b1847d798f8d17261c8b655fa537da08f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ae8027b1847d798f8d17261c8b655fa537da08f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ae8027b1847d798f8d17261c8b655fa537da08f/comments", "author": null, "committer": null, "parents": [{"sha": "f8e2a1ed3b746951a5d07e03f91d1f8209ebe775", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8e2a1ed3b746951a5d07e03f91d1f8209ebe775", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f8e2a1ed3b746951a5d07e03f91d1f8209ebe775"}], "stats": {"total": 197, "additions": 105, "deletions": 92}, "files": [{"sha": "73f34cdd91ca21863ed5538689954e644a5c4eb5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 85, "deletions": 73, "changes": 158, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ae8027b1847d798f8d17261c8b655fa537da08f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ae8027b1847d798f8d17261c8b655fa537da08f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4ae8027b1847d798f8d17261c8b655fa537da08f", "patch": "@@ -1,3 +1,7 @@\n+2008-09-11  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.h: Fix whitespace issues.\n+\n 2008-09-11  Martin Jambor  <mjambor@suse.cz>\n \n \t* ipa-prop.h (struct ipa_param_flags): Removed.\n@@ -40,7 +44,7 @@\n \t* ipa-inline.c (cgraph_mark_inline_edge): New parameter new_edges,\n \tchanged all callers.  Call ipa_propagate_indirect_call_infos if doing\n \tindirect inlining.  Made static.\n-        (cgraph_decide_inlining): Freeing ipa-prop structures after inlining\n+\t(cgraph_decide_inlining): Freeing ipa-prop structures after inlining\n \tfunctions called only once.\n \t(cgraph_decide_recursive_inlining): Don't call\n \tipa_propagate_indirect_call_infos, pass new_edges to\n@@ -144,7 +148,8 @@\n \n 2008-09-11  Jan Hubicka  <jh@suse.cz>\n \n-\t* ifcvt.c (check_cond_move_block): Make regs argument pointer to vector pointer.\n+\t* ifcvt.c (check_cond_move_block): Make regs argument pointer to\n+\tvector pointer.\n \t(cond_move_process_if_block): Update call.\n \n 2008-09-11  Jan Hubicka  <jh@suse.cz>\n@@ -233,8 +238,8 @@\n 2008-09-10  Jan Hubicka  <jh@suse.cz>\n \n \t* value-prof.c (gimple_ic): Fix tuplification bug.\n-\t* sched-deps.c (sched_insns_conditions_mutex_p): Silence unitialized var\n-\twarning.\n+\t* sched-deps.c (sched_insns_conditions_mutex_p): Silence unitialized\n+\tvar warning.\n \n 2008-09-10  Jakub Jelinek  <jakub@redhat.com>\n \n@@ -327,8 +332,8 @@\n \tset_instantiated_value): Pass instantiated_below.\n \t(analyze_scalar_evolution_1, analyze_scalar_evolution): Update calls to\n \tabove functions.\n-\t(instantiate_scev_1, instantiate_scev): Pass a basic block above which the\n-\tdefinitions are not instantiated.\n+\t(instantiate_scev_1, instantiate_scev): Pass a basic block above which\n+\tthe definitions are not instantiated.\n \n \t* tree-scalar-evolution.h (instantiate_scev): Update declaration.\n \t(block_before_loop): New.\n@@ -377,8 +382,8 @@\n \n 2008-09-09  Jan Hubicka  <jh@suse.cz>\n \n-\t* profile.c (is_edge_inconsistent): Add debug output; ignore negative count\n-\ton fake edges.\n+\t* profile.c (is_edge_inconsistent): Add debug output; ignore\n+\tnegative count on fake edges.\n \t(is_inconsistent): Add debug output.\n \n 2008-09-09  Andrey Belevantsev  <abel@ispras.ru>\n@@ -558,7 +563,8 @@\n 2008-09-06  Jan Hubicka  <jh@suse.cz>\n \n \tPR tree-optimization/14703\n-\t* tree-ssa-live.c (remove_unused_scope_block_p): Remove ignored declarations.\n+\t* tree-ssa-live.c (remove_unused_scope_block_p): Remove ignored\n+\tdeclarations.\n \t* passes.c (init_optimization_passes): Recompute inline parameters.\n \n 2008-09-06  Richard Sandiford  <rdsandiford@googlemail.com>\n@@ -617,9 +623,8 @@\n \n 2008-09-05  Vladimir Makarov  <vmakarov@redhat.com>\n \n-\t* ira-color.c (ira_fast_allocation): Permit global allocno\n-\tallocation.\n-\t\n+\t* ira-color.c (ira_fast_allocation): Permit global allocno allocation.\n+\n 2008-09-05  Trevor Smigiel <Trevor_Smigiel@playstation.sony.com>\n \n \tImproved branch hints, safe hints, and scheduling.\n@@ -890,8 +895,7 @@\n \n 2008-09-04  Nick Clifton  <nickc@redhat.com>\n \n-\t* configure.ac (HAVE_GAS_LCOMM_WITH_ALIGNMENT): New assembler\n-\tcheck.\n+\t* configure.ac (HAVE_GAS_LCOMM_WITH_ALIGNMENT): New assembler check.\n \t* configure: Regenerate.\n \t* config.in: Regenerate.\n \t* config/i386/bsd.h (ASM_OUTPUT_ALIGNED_LOCAL): Use .lcomm with an\n@@ -1051,11 +1055,9 @@\n \n 2008-09-03 Danny Smith  <dannysmith@usrs.sourceforge.net>\n \n-\t* gthr-win32.h (CONST_CAST2): Really make sure CONST_CAST2 is\n-\tdefined.\n+\t* gthr-win32.h (CONST_CAST2): Really make sure CONST_CAST2 is defined.\n \t(__gthread_setspecific): Revert 2008-08-31 change to\n-\t__GTHREAD_HIDE_W32API case.  Apply it to !__GTHREAD_HIDE_W32API\n-\tcase.\n+\t__GTHREAD_HIDE_W32API case.  Apply it to !__GTHREAD_HIDE_W32API case.\n \n 2008-09-02  Aldy Hernandez  <aldyh@redhat.com>\n \n@@ -1122,7 +1124,8 @@\n 2008-09-02  Jan Hubicka  <jh@suse.cz>\n \n \t* predict.c (pass_strip_predict_hints): Avoid bugs dump file.\n-\t* expmed.c (expand_divmod): Fix test of smod_pow2_cheap and sdiv_pow2_cheap\n+\t* expmed.c (expand_divmod): Fix test of smod_pow2_cheap and\n+\tsdiv_pow2_cheap\n \n 2008-09-02  H.J. Lu  <hongjiu.lu@intel.com>\n \n@@ -1317,8 +1320,7 @@\n \terror.\n \t* c-omp.c (c_finish_omp_atomic): Pass location when calling\n \tbuild_indirect_ref.\n-\t* c-common.c (finish_label_address_expr): Handle new location\n-\targument.\n+\t* c-common.c (finish_label_address_expr): Handle new location argument.\n \t* c-common.h (build_indirect_ref): Add argument.\n \t(finish_label_address_expr): Same.\n \t* c-parser.c (c_parser_unary_expression): Pass location to build\n@@ -1336,8 +1338,7 @@\n \t* config/arm/vfp.md: Document fcpys, ffariths, ffarithd, fadds, faddd,\n \tfconsts, fconstd, fcmps and fcmpd.  Use them in insn patterns.\n \t* config/arm/arm.c (arm_issue_rate): Add cortexr4f.\n-\t* config/arm/arm1020e.md (v10_ffarith, v10_farith): Use new insn\n-\ttypes.\n+\t* config/arm/arm1020e.md (v10_ffarith, v10_farith): Use new insn types.\n \t* config/arm/cortex-a8-neon.md (cortex_a8_vfp_add_sub,\n \tcortex_a8_vfp_farith: Ditto.\n \t* config/arm/vfp11.md (vfp_ffarith, vfp_farith): Ditto.\n@@ -1374,7 +1375,8 @@\n \n \t* config/spu/spu.c (spu_expand_block_move) Update call of MOVE_RATIO.\n \n-\t* expr.c (MOVE_BY_PIECES_P, CLEAR_BY_PIECES_P, SET_BY_PIECES_P): Pass speed operand.\n+\t* expr.c (MOVE_BY_PIECES_P, CLEAR_BY_PIECES_P, SET_BY_PIECES_P):\n+\tPass speed operand.\n \t* expr.h (MOVE_RATIO, CLEAR_RATIO, SET_RATIO): Update.\n \t* gimplify.c (gimplify_init_constructor): Add speed operand.\n \t* tree-sra.c (decide_block_copy): Likewise.\n@@ -1390,16 +1392,17 @@\n \t* config/arm/arm.h (MOVE_RATIO): Update.\n \t* config/pa/pa.md: Update uses of MOVE_RATIO\n \t* config/pa/pa.h (MOVE_RATIO): Update.\n-\t* config/mips/mips.h (MOVE_RATIO, MOVE_BY_PIECES, CLEAR_RATIO, SET_RATIO): Update.\n+\t* config/mips/mips.h (MOVE_RATIO, MOVE_BY_PIECES,\n+\tCLEAR_RATIO, SET_RATIO): Update.\n \t* config/h8300/h8300.h (MOVE_RATIO): Update.\n \t* config/v850/v850.h (MOVE_RATIO): Update.\n \t* config/bfin/bfin.h (MOVE_RATIO): Update.\n \n 2008-08-31  Andrey Belevantsev  <abel@ispras.ru>\n-\tDmitry Melnik  <dm@ispras.ru>\n-\tDmitry Zhurikhin  <zhur@ispras.ru>\n-\tAlexander Monakov  <amonakov@ispras.ru>\n-\tMaxim Kuvyrkov  <maxim@codesourcery.com>\n+\t    Dmitry Melnik  <dm@ispras.ru>\n+\t    Dmitry Zhurikhin  <zhur@ispras.ru>\n+\t    Alexander Monakov  <amonakov@ispras.ru>\n+\t    Maxim Kuvyrkov  <maxim@codesourcery.com>\n \n \t* sel-sched.h, sel-sched-dump.h, sel-sched-ir.h, sel-sched.c,\n \tsel-sched-dump.c, sel-sched-ir.c: New files.\n@@ -1422,13 +1425,15 @@\n \t* common.opt (fsel-sched-bookkeeping, fsel-sched-pipelining,\n \tfsel-sched-pipelining-outer-loops, fsel-sched-renaming,\n \tfsel-sched-substitution, fselective-scheduling): New flags.\n-    \t* cse.c (hash_rtx_cb): New.\n+\t* cse.c (hash_rtx_cb): New.\n \t(hash_rtx): Use it.\n \t* dbgcnt.def (sel_sched_cnt, sel_sched_region_cnt,\n \tsel_sched_insn_cnt): New counters.\n-\t* final.c (compute_alignments): Export.  Free dominance info after loop_optimizer_finalize.\n+\t* final.c (compute_alignments): Export.  Free dominance\n+\tinfo after loop_optimizer_finalize.\n \t* genattr.c (main): Output maximal_insn_latency prototype.\n-\t* genautomata.c (output_default_latencies): New. Factor its code from ...\n+\t* genautomata.c (output_default_latencies): New.\n+\tFactor its code from ...\n \t(output_internal_insn_latency_func): ... here.\n \t(output_internal_maximal_insn_latency_func): New.\n \t(output_maximal_insn_latency_func): New.\n@@ -1439,8 +1444,9 @@\n \t(EXECUTE_IF_SET_IN_HARD_REG_SET): New macro.\n \t* lists.c (remove_free_INSN_LIST_node,\n \tremove_free_EXPR_LIST_node): New functions.\n-\t* loop-init.c (loop_optimizer_init): When LOOPS_HAVE_FALLTHRU_PREHEADERS,\n-\tset CP_FALLTHRU_PREHEADERS when calling create_preheaders.\n+\t* loop-init.c (loop_optimizer_init): When\n+\tLOOPS_HAVE_FALLTHRU_PREHEADERS, set CP_FALLTHRU_PREHEADERS when\n+\tcalling create_preheaders.\n \t(loop_optimizer_finalize): Do not verify flow info after reload.\n \t* recog.c (validate_replace_rtx_1): New parameter simplify.\n \tDefault it to true.  Update all uses.  Factor out simplifying\n@@ -1668,7 +1674,8 @@\n \t(deps_t): New.\n \t(struct sched_info): Rename to haifa_sched_info.  Use const_rtx for\n \tprint_insn field.  Move add_block and fix_recovery_cfg to\n-\tcommon_sched_info_def.  Move compute_jump_reg_dependencies, use_cselib  ...\n+\tcommon_sched_info_def.  Move compute_jump_reg_dependencies,\n+\tuse_cselib  ...\n \t(struct sched_deps_info_def): ... this new structure.\n \t(sched_deps_info): Declare.\n \t(struct spec_info_def): Remove weakness_cutoff, add\n@@ -1732,7 +1739,8 @@\n \t(find_single_block_region): Add new argument to indicate that EBB\n \tregions should be constructed.\n \t(debug_live): Delete declaration.\n-\t(current_nr_blocks, current_blocks, target_bb): Remove static qualifiers.\n+\t(current_nr_blocks, current_blocks, target_bb):\n+\tRemove static qualifiers.\n \t(compute_dom_prob_ps, check_live, update_live, set_spec_fed): Delete\n \tdeclaration.\n \t(init_regions): Delete declaration.\n@@ -1751,7 +1759,8 @@\n \t(debug_rgn_dependencies): Delete static qualifier.\n \t(new_ready): Use sched_deps_info.  Simplify.\n \t(rgn_common_sched_info, rgn_const_sched_deps_info,\n-\trgn_const_sel_sched_deps_info, rgn_sched_deps_info, rgn_sched_info): New.\n+\trgn_const_sel_sched_deps_info, rgn_sched_deps_info, rgn_sched_info):\n+\tNew.\n \t(region_sched_info): Rename to rgn_const_sched_info.\n \t(deps_join): New, extracted from ...\n \t(propagate_deps): ... here.\n@@ -1789,7 +1798,8 @@\n \trequested from command line.\n \t* doc/invoke.texi: Document new flags and parameters.\n \t* doc/tm.texi: Document new target hooks.\n-\t* config/ia64/ia64.c (TARGET_SCHED_GEN_SPEC_CHECK): Define to ia64_gen_check.\n+\t* config/ia64/ia64.c (TARGET_SCHED_GEN_SPEC_CHECK): Define to\n+\tia64_gen_check.\n \t(dfa_state_size): Do not declare locally.\n \t* config/ia64/ia64.opt (msched-ar-data-spec): Default to 0.\n \t* config/rs6000/rs6000.c (rs6000_init_sched_context,\n@@ -1868,7 +1878,8 @@\n \n 2008-08-31  Jan Hubicka  <jh@suse.cz>\n \n-\t* postreload-gcse.c (eliminate_partially_redundant_loads): Use optimize_bb_for_size_p.\n+\t* postreload-gcse.c (eliminate_partially_redundant_loads):\n+\tUse optimize_bb_for_size_p.\n \t* predict.c (maybe_hot_frequency_p): Make inline.\n \t(maybe_hot_count_p): Break out from ...\n \t(maybe_hot_bb_p): ... this one.\n@@ -2027,8 +2038,10 @@\n \t* config/m68hc11/m68hc11.c\n \t(m68hc11_address_cost, m68hc11_rtx_costs): Update.\n \t* config/cris/cris.c (cris_rtx_costs, cris_address_cost): Update.\n-\t* config/iq2000/iq2000.c (iq2000_rtx_costs, iq2000_address_cost): Update.\n-\t* config/mn10300/mn10300.c (mn10300_address_cost, mn10300_rtx_costs): Update\n+\t* config/iq2000/iq2000.c (iq2000_rtx_costs, iq2000_address_cost):\n+\tUpdate.\n+\t* config/mn10300/mn10300.c (mn10300_address_cost, mn10300_rtx_costs):\n+\tUpdate\n \t* config/ia64/ia64.c (ia64_rtx_costs): Update.\n \t* config/m68k/m68k.c (m68k_rtx_costs): Update.\n \t* config/rs6000/rs6000.c (rs6000_rtx_costs): Update.\n@@ -2233,10 +2246,10 @@\n \t* dojump.c (do_jump): Likewise.\n \t* ifcvt.c (MAX_CONDITIONAL_EXECUTE): Likewise.\n \t(note-if_info): Add BRANCH_COST.\n-\t(noce_try_store_flag_constants, noce_try_addcc, noce_try_store_flag_mask,\n-\tnoce_try_cmove_arith, noce_try_cmove_arith, noce_try_cmove_arith,\n-\tnoce_find_if_block, find_if_case_1, find_if_case_2): Use compuated\n-\tbranch cost.\n+\t(noce_try_store_flag_constants, noce_try_addcc,\n+\tnoce_try_store_flag_mask, noce_try_cmove_arith, noce_try_cmove_arith,\n+\tnoce_try_cmove_arith, noce_find_if_block, find_if_case_1,\n+\tfind_if_case_2): Use computed branch cost.\n \t* expr.h (BRANCH_COST): Update default.\n \t* predict.c (predictable_edge_p): New function.\n \t* expmed.c (expand_smod_pow2, expand_sdiv_pow2, emit_store_flag):\n@@ -2444,7 +2457,6 @@\n 2008-08-29  Vladimir Makarov  <vmakarov@redhat.com>\n \n \tPR rtl-opt/37251\n-\n \t* ira-color.c (push_allocnos_to_stack): Truncate\n \tremoved_splay_allocno_vec.\n \n@@ -2546,9 +2558,11 @@\n 2008-08-29  Jan Hubicka  <jh@suse.cz>\n \n \t* loop-unswitch.c (unswitch_single_loop): Use optimize_loop_for_speed_p.\n-\t* tree-ssa-threadupdate.c (mark_threaded_blocks): Use optimize_function_for_size_p.\n+\t* tree-ssa-threadupdate.c (mark_threaded_blocks):\n+\tUse optimize_function_for_size_p.\n \t* tracer.c (ignore_bb_p): Use optimize_bb_for_size_p.\n-\t* postreload-gcse.c (eliminate_partially_redundant_load): Use optimize_bb_for_size_p.\n+\t* postreload-gcse.c (eliminate_partially_redundant_load):\n+\tUse optimize_bb_for_size_p.\n \t* value-prof.c (gimple_divmod_fixed_value_transform,\n \tgimple_mod_pow2_value_transform, gimple_mod_subtract_transform,\n \tgimple_stringops_transform): Use optimize_bb_for_size_p.\n@@ -2559,16 +2573,18 @@\n \toptimize_function_for_size_p.\n \t* fold-const.c (tree_swap_operands_p): Use optimize_function_for_size_p.\n \t* recog.c (relax_delay_slots): Likewise.\n-\t* tree-ssa-math-opts.c (replace_reciprocal): Use optimize_bb_for_speed_p.\n+\t* tree-ssa-math-opts.c (replace_reciprocal):\n+\tUse optimize_bb_for_speed_p.\n \t(execute_cse_reciprocals): Use optimize_bb_for_size_p.\n \t* ipa-inline.c (cgraph_decide_recursive_inlining): Use\n \toptimize_function_for_size_p.\n \t(cgraph_decide_inlining_of_small_function): Use\n \toptimize_function_for_size_p.\n \t* global.c (find_reg): Use optimize_function_for_size_p.\n-\t* opts.c (decode_options): Do not clear flag_tree_ch, flag_inline_functions,\n-\tflag_unswitch_loops, flag_unroll_loops, flag_unroll_all_loops and\n-\tflag_prefetch_loop_arrays. Those can work it out from profile.\n+\t* opts.c (decode_options): Do not clear flag_tree_ch,\n+\tflag_inline_functions, flag_unswitch_loops, flag_unroll_loops,\n+\tflag_unroll_all_loops and flag_prefetch_loop_arrays. Those can\n+\twork it out from profile.\n \t* tree-ssa-loop-ivcanon.c (tree_unroll_loops_completely): Use\n \toptimize_loop_for_speed_p.\n \t* predict.c (optimize_bb_for_size_p, optimize_bb_for_speed_p): Constify\n@@ -2579,13 +2595,15 @@\n \t* local-alloc.c (block_alloc): Pass BB pointer.\n \t(find_free_reg): Add BB pointer, use optimize_bb_for_size_p.\n \t* gcse.c (gcse_main): Use optimize_function_for_size_p.\n-\t* loop-unroll.c (decide_unrolling_and_peeling): Use optimize_loop_for_size_p.\n+\t* loop-unroll.c (decide_unrolling_and_peeling):\n+\tUse optimize_loop_for_size_p.\n \t(decide_peel_completely): Likewise.\n \t* tree-vect-analyze.c (vect_mark_for_runtime_alias_test): Use\n \toptimize_loop_for_size_p.\n \t(vect_enhance_data_refs_alignment): Likewise.\n \t* tree-ssa-coalesce.c (coalesce_cost): Add optimize_for_size argument.\n-\t(coalesce_cost_bb, coalesce_cost_edge, create_outofssa_var_map): Update call.\n+\t(coalesce_cost_bb, coalesce_cost_edge, create_outofssa_var_map):\n+\tUpdate call.\n \t* cfgcleanup.c (outgoing_edges_match): Use optimize_bb_for_speed_p.\n \t(try_crossjump_bb): Use optimize_bb_for_size_p.\n \t* tree-ssa-loop-prefetch.c (loop_prefetch_arrays): Use\n@@ -2620,8 +2638,8 @@\n \t(tree_bb_level_predictions): Do not remove GIMPLE_PREDICT.\n \t(tree_estimate_probability): Do not strip builtin_expect.\n \t(pass_strip_predict_hints): New pass.\n-\t* tree-inline.c (expand_call_inline): When inlining cold function, predict\n-\tit as unlikely.\n+\t* tree-inline.c (expand_call_inline): When inlining cold function,\n+\tpredict it as unlikely.\n \t* passes.c (init_optimization_passes): Add pass_strip_predict_hints.\n \n 2008-08-29  Richard Guenther  <rguenther@suse.de>\n@@ -2671,8 +2689,7 @@\n \t* config/mips/mips.h (ISA_HAS_DMUL3): New macro.\n \t* config/mips/mips.md (D): New mode attribute.\n \t(mulsi3, muldi3): Merge it into ...\n-\t(mul<mode>3): ... new template.  Use _mul3 ending for 3-op\n-\tpatterns.\n+\t(mul<mode>3): ... new template.  Use _mul3 ending for 3-op patterns.\n \t(muldi3_mul3): New pattern.\n \t(mulsi3_mult3): Rename to mulsi3_mul3.\n \n@@ -3577,7 +3594,7 @@\n \t* config/arm/arm1020e.md: Remove out of date duplicate comment.\n \t(v10_cvt): Use new fmul types.\n \n-2008-08-26  Paul Brook   <paul@codesourcery.com>\n+2008-08-26  Paul Brook  <paul@codesourcery.com>\n \n \t* config/arm/vfp.md: Move pipeline description for VFP11 to...\n \t* config/arm/vfp11.md: ...here.  New.\n@@ -3965,7 +3982,8 @@\n \t(ipcp_create_replace_map): Reformat.\n \t(ipcp_need_redirect_p): Simplify.\n \t(ipcp_insert_stage): Check that argument is used before clonning.\n-\t* ipa-prop.c (ipa_print_node_jump_functions): Do not handle IPA_CONST_REF.\n+\t* ipa-prop.c (ipa_print_node_jump_functions): Do not handle\n+\tIPA_CONST_REF.\n \t(compute_scalar_jump_functions): Simplify using is_gimple_ip_invariat.\n \t(determine_cst_member_ptr): Keep wrapping ADDR_EXPR of members.\n \t(update_call_notes_after_inlining): Expect ADDR_EXPR in operand.\n@@ -4083,8 +4101,7 @@\n \n \t* c-tree.h (grokfield): New argument.\n \t* c-decl.c (grokfield): Handle new location argument.\n-\t* c-parser.c (c_parser_struct_declaration): Pass location to\n-\tgrokfield.\n+\t* c-parser.c (c_parser_struct_declaration): Pass location to grokfield.\n \n 2008-08-21  Richard Guenther  <rguenther@suse.de>\n \n@@ -4669,13 +4686,12 @@\n \t(\"type\" attribute): Removed itof and added ftrunctf,ftruncdf,\n \tftruncsd, ftruncdd, itoftf, itofdf, itofsf, itofdd, itoftd,\n \tfdivdd, fdivtd, floaddd, floadsd, fmuldd, fmultd, fsimpdd,\n-\tfsimpsd, fsimptd, fstoredd, fstoresd, ftoidfp as possible\n-\tvalues.\n+\tfsimpsd, fsimptd, fstoredd, fstoresd, ftoidfp as possible values.\n \t(\"bfp\" mode attribute): Removed.  Every occurence replaced\n \twith <mode>.\n \t* config/s390/s390.c (struct \"z10_cost\"): Updated entries.\n \t* config/s390/2084.md (insn_reservation \"x_itof\"): Updated\n-\t  type attribute.\n+\ttype attribute.\n \n 2008-08-14  Manuel Lopez-Ibanez  <manu@gcc.gnu.org>\n \n@@ -4770,8 +4786,7 @@\n \thandled. -pedantic also enables Wmain.\n \t(c_common_post_options): Handle all logic for Wmain here.\n \t* c-common.c (warn_main): Delete.\n-\t(check_main_parameter_types): Make pedwarns conditional on\n-\tOPT_Wmain.\n+\t(check_main_parameter_types): Make pedwarns conditional on OPT_Wmain.\n \t* c-common.h (warn_main): Delete.\n \n 2008-08-13  H.J. Lu  <hongjiu.lu@intel.com>\n@@ -5264,8 +5279,7 @@\n \t* c-typeck.c (digest_init): Call verify_sequence_points from here.\n \t(c_finish_return): Likewise.\n \t(c_start_case): Likewise.\n-\t* c-common.c (warn_for_collisions_1): Use explicit location in\n-\twarning.\n+\t* c-common.c (warn_for_collisions_1): Use explicit location in warning.\n \t* c-parser.c (c_parser_condition): New. Call\n \tverify_sequence_points.\n \t(c_parser_paren_condition): Call c_parser_condition.\n@@ -5439,8 +5453,7 @@\n 2008-08-07  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR target/36992\n-\t* config/i386/emmintrin.h (_mm_move_epi64): Use\n-\t__builtin_ia32_movq128.\n+\t* config/i386/emmintrin.h (_mm_move_epi64): Use __builtin_ia32_movq128.\n \n \t* config/i386/i386.c (ix86_builtins): Add IX86_BUILTIN_MOVQ128.\n \t(bdesc_args): Add IX86_BUILTIN_MOVQ128.\n@@ -5584,8 +5597,7 @@\n \t* config/sh/sh.c (prepare_move_operands, output_far_jump,\n \toutput_branchy_insn, add_constant, gen_block_redirect,\n \tsh_insn_length_adjustment, sh_cannot_change_mode_class,\n-\tsh_output_mi_thunk, replace_n_hard_rtx, sh_secondary_reload):\n-\tLikewise.\n+\tsh_output_mi_thunk, replace_n_hard_rtx, sh_secondary_reload): Likewise.\n \t* config/sparc/sparc.c (sparc_output_mi_thunk): Likewise.\n \t* config/stormy16/stormy16.c (xstormy16_output_cbranch_hi,\n \txstormy16_output_cbranch_si, xstormy16_secondary_reload_class,"}, {"sha": "3af68e9a8a6270ab7b32cf541147418843dcbe04", "filename": "gcc/config/i386/i386.h", "status": "modified", "additions": 18, "deletions": 17, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ae8027b1847d798f8d17261c8b655fa537da08f/gcc%2Fconfig%2Fi386%2Fi386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ae8027b1847d798f8d17261c8b655fa537da08f/gcc%2Fconfig%2Fi386%2Fi386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.h?ref=4ae8027b1847d798f8d17261c8b655fa537da08f", "patch": "@@ -640,7 +640,7 @@ enum target_cpu_default\n #define WORDS_BIG_ENDIAN 0\n \n /* Width of a word, in units (bytes).  */\n-#define UNITS_PER_WORD (TARGET_64BIT ? 8 : 4)\n+#define UNITS_PER_WORD\t\t(TARGET_64BIT ? 8 : 4)\n #ifdef IN_LIBGCC2\n #define MIN_UNITS_PER_WORD\t(TARGET_64BIT ? 8 : 4)\n #else\n@@ -651,8 +651,8 @@ enum target_cpu_default\n #define PARM_BOUNDARY BITS_PER_WORD\n \n /* Boundary (in *bits*) on which stack pointer should be aligned.  */\n-#define STACK_BOUNDARY\t(TARGET_64BIT && DEFAULT_ABI == MS_ABI ? 128 \\\n-\t\t\t\t\t\t\t       : BITS_PER_WORD)\n+#define STACK_BOUNDARY \\\n+ (TARGET_64BIT && DEFAULT_ABI == MS_ABI ? 128 : BITS_PER_WORD)\n \n /* Stack boundary of the main function guaranteed by OS.  */\n #define MAIN_STACK_BOUNDARY (TARGET_64BIT ? 128 : 32)\n@@ -1533,7 +1533,8 @@ enum reg_class\n    which.  */\n #define REG_PARM_STACK_SPACE(FNDECL) ix86_reg_parm_stack_space (FNDECL)\n \n-#define OUTGOING_REG_PARM_STACK_SPACE(FNTYPE) (ix86_function_type_abi (FNTYPE) == MS_ABI ? 1 : 0)\n+#define OUTGOING_REG_PARM_STACK_SPACE(FNTYPE) \\\n+  (ix86_function_type_abi (FNTYPE) == MS_ABI)\n \n /* Value is the number of bytes of arguments automatically\n    popped when returning from a subroutine call.\n@@ -1555,14 +1556,12 @@ enum reg_class\n #define RETURN_POPS_ARGS(FUNDECL, FUNTYPE, SIZE) \\\n   ix86_return_pops_args ((FUNDECL), (FUNTYPE), (SIZE))\n \n-#define FUNCTION_VALUE_REGNO_P(N) \\\n-  ix86_function_value_regno_p (N)\n+#define FUNCTION_VALUE_REGNO_P(N) ix86_function_value_regno_p (N)\n \n /* Define how to find the value returned by a library function\n    assuming the value has mode MODE.  */\n \n-#define LIBCALL_VALUE(MODE) \\\n-  ix86_libcall_value (MODE)\n+#define LIBCALL_VALUE(MODE) ix86_libcall_value (MODE)\n \n /* Define the size of the result block used for communication between\n    untyped_call and untyped_return.  The block contains a DImode value\n@@ -1871,13 +1870,15 @@ do {\t\t\t\t\t\t\t\t\t\\\n #define X64_SSE_REGPARM_MAX 4\n #define X86_32_SSE_REGPARM_MAX (TARGET_SSE ? 3 : 0)\n \n-#define REGPARM_MAX (TARGET_64BIT ? (TARGET_64BIT_MS_ABI ? X64_REGPARM_MAX \\\n-\t\t\t\t\t\t\t : X86_64_REGPARM_MAX) \\\n-\t\t\t\t  : X86_32_REGPARM_MAX)\n+#define REGPARM_MAX\t\t\t\t\t\t\t\\\n+  (TARGET_64BIT ? (TARGET_64BIT_MS_ABI ? X64_REGPARM_MAX\t\t\\\n+\t\t   : X86_64_REGPARM_MAX)\t\t\t\t\\\n+   : X86_32_REGPARM_MAX)\n \n-#define SSE_REGPARM_MAX (TARGET_64BIT ? (TARGET_64BIT_MS_ABI ? X64_SSE_REGPARM_MAX \\\n-\t\t\t\t\t\t\t     : X86_64_SSE_REGPARM_MAX) \\\n-\t\t\t\t      : X86_32_SSE_REGPARM_MAX)\n+#define SSE_REGPARM_MAX\t\t\t\t\t\t\t\\\n+  (TARGET_64BIT ? (TARGET_64BIT_MS_ABI ? X64_SSE_REGPARM_MAX\t\t\\\n+\t\t   : X86_64_SSE_REGPARM_MAX)\t\t\t\t\\\n+   : X86_32_SSE_REGPARM_MAX)\n \n #define MMX_REGPARM_MAX (TARGET_64BIT ? 0 : (TARGET_MMX ? 3 : 0))\n \n@@ -2456,10 +2457,10 @@ struct machine_function GTY(())\n #undef TARG_COND_BRANCH_COST\n #define TARG_COND_BRANCH_COST           ix86_cost->branch_cost\n \n-/* Enum through the target specific extra va_list types. Please, do not\n-   iterate the base va_list type name.  */\n+/* Enum through the target specific extra va_list types.\n+   Please, do not iterate the base va_list type name.  */\n #define TARGET_ENUM_VA_LIST(IDX, PNAME, PTYPE) \\\n-  (!TARGET_64BIT ? 0 : ix86_enum_va_list (IDX, PNAME, PTYPE))\n+  (TARGET_64BIT ? ix86_enum_va_list (IDX, PNAME, PTYPE) : 0)\n \n /* Cost of any scalar operation, excluding load and store.  */\n #undef TARG_SCALAR_STMT_COST"}, {"sha": "433ab4fc66b9e7f34e3c5d3e76a7c337c5915fce", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ae8027b1847d798f8d17261c8b655fa537da08f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ae8027b1847d798f8d17261c8b655fa537da08f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4ae8027b1847d798f8d17261c8b655fa537da08f", "patch": "@@ -1901,7 +1901,7 @@\n \n \t* gcc.dg/vect/vect-multitypes-15.c: Fix typo.\n \t* gcc/testsuite/lib/target-supports.exp\n-\t   (check_effective_target_vect_long_long): Remove spu-*-*.\n+\t(check_effective_target_vect_long_long): Remove spu-*-*.\n \t* gcc.dg/vect/vect-multitypes-16.c: Make init loop unvectorizable.\n \t* gcc.dg/vect/slp-widen-mult-u8.c: Likewise.\n \t\n@@ -5598,7 +5598,7 @@\n \tPR libfortran/35995\n \t* gfortran.dg/intrinsic_ifunction_1.f90:  New test case.\n \n-2008-05-04   Andy Hutchinson   <hutchinsonandy@aim.com>\n+2008-05-04  Andy Hutchinson  <hutchinsonandy@aim.com>\n \n \t* gcc.dg/nested-func-5.c: Skip for target without trampolines.\n \t* gcc.dg/torture/nested-fn-1.c: Ditto."}]}