{"sha": "37a4c06f3dac9b0b831a8f34af73422aa4f42fbe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzdhNGMwNmYzZGFjOWIwYjgzMWE4ZjM0YWY3MzQyMmFhNGY0MmZiZQ==", "commit": {"author": {"name": "Roger Sayle", "email": "roger@nextmovesoftware.com", "date": "2020-08-04T13:31:42Z"}, "committer": {"name": "Tom de Vries", "email": "tdevries@suse.de", "date": "2020-08-04T22:44:10Z"}, "message": "[PATCH] nvptx: Add support for PTX highpart multiplications (HI/SI)\n\nThis patch adds support for signed and unsigned, HImode and SImode highpart\nmultiplications to the nvptx backend.\n\nThis patch has been tested on nvptx-none hosted on x86_64-pc-linux-gnu\nwith a \"make\" and \"make -k check\" with no new failures with the\nabove patch.\n\n2020-08-04  Roger Sayle  <roger@nextmovesoftware.com>\n\ngcc/ChangeLog:\n\n\t* config/nvptx/nvptx.md (smulhi3_highpart, smulsi3_highpart)\n\t(umulhi3_highpart, umulsi3_highpart): New instructions.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.target/nvptx/mul-hi.c: New test.\n\t* gcc.target/nvptx/umul-hi.c: New test.", "tree": {"sha": "4138e044ce8fec52b2257ef0ef427a51f173768f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4138e044ce8fec52b2257ef0ef427a51f173768f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/37a4c06f3dac9b0b831a8f34af73422aa4f42fbe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37a4c06f3dac9b0b831a8f34af73422aa4f42fbe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/37a4c06f3dac9b0b831a8f34af73422aa4f42fbe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37a4c06f3dac9b0b831a8f34af73422aa4f42fbe/comments", "author": {"login": "rogersayle", "id": 13512313, "node_id": "MDQ6VXNlcjEzNTEyMzEz", "avatar_url": "https://avatars.githubusercontent.com/u/13512313?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rogersayle", "html_url": "https://github.com/rogersayle", "followers_url": "https://api.github.com/users/rogersayle/followers", "following_url": "https://api.github.com/users/rogersayle/following{/other_user}", "gists_url": "https://api.github.com/users/rogersayle/gists{/gist_id}", "starred_url": "https://api.github.com/users/rogersayle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rogersayle/subscriptions", "organizations_url": "https://api.github.com/users/rogersayle/orgs", "repos_url": "https://api.github.com/users/rogersayle/repos", "events_url": "https://api.github.com/users/rogersayle/events{/privacy}", "received_events_url": "https://api.github.com/users/rogersayle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vries", "id": 4057235, "node_id": "MDQ6VXNlcjQwNTcyMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vries", "html_url": "https://github.com/vries", "followers_url": "https://api.github.com/users/vries/followers", "following_url": "https://api.github.com/users/vries/following{/other_user}", "gists_url": "https://api.github.com/users/vries/gists{/gist_id}", "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vries/subscriptions", "organizations_url": "https://api.github.com/users/vries/orgs", "repos_url": "https://api.github.com/users/vries/repos", "events_url": "https://api.github.com/users/vries/events{/privacy}", "received_events_url": "https://api.github.com/users/vries/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "97def1f34c134d78d4423e9ac3e9b262417ea390", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97def1f34c134d78d4423e9ac3e9b262417ea390", "html_url": "https://github.com/Rust-GCC/gccrs/commit/97def1f34c134d78d4423e9ac3e9b262417ea390"}], "stats": {"total": 78, "additions": 78, "deletions": 0}, "files": [{"sha": "4168190fa42d208f9930e1f3632e4f967c4d81d7", "filename": "gcc/config/nvptx/nvptx.md", "status": "modified", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37a4c06f3dac9b0b831a8f34af73422aa4f42fbe/gcc%2Fconfig%2Fnvptx%2Fnvptx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37a4c06f3dac9b0b831a8f34af73422aa4f42fbe/gcc%2Fconfig%2Fnvptx%2Fnvptx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnvptx%2Fnvptx.md?ref=37a4c06f3dac9b0b831a8f34af73422aa4f42fbe", "patch": "@@ -568,6 +568,54 @@\n   \"\"\n   \"%.\\\\tmul.wide.u32\\\\t%0, %1, %2;\")\n \n+(define_insn \"smulhi3_highpart\"\n+  [(set (match_operand:HI 0 \"nvptx_register_operand\" \"=R\")\n+\t(truncate:HI\n+\t (lshiftrt:SI\n+\t  (mult:SI (sign_extend:SI\n+\t\t    (match_operand:HI 1 \"nvptx_register_operand\" \"R\"))\n+\t\t   (sign_extend:SI\n+\t\t    (match_operand:HI 2 \"nvptx_register_operand\" \"R\")))\n+\t  (const_int 16))))]\n+  \"\"\n+  \"%.\\\\tmul.hi.s16\\\\t%0, %1, %2;\")\n+\n+(define_insn \"smulsi3_highpart\"\n+  [(set (match_operand:SI 0 \"nvptx_register_operand\" \"=R\")\n+\t(truncate:SI\n+\t (lshiftrt:DI\n+\t  (mult:DI (sign_extend:DI\n+\t\t    (match_operand:SI 1 \"nvptx_register_operand\" \"R\"))\n+\t\t   (sign_extend:DI\n+\t\t    (match_operand:SI 2 \"nvptx_register_operand\" \"R\")))\n+\t  (const_int 32))))]\n+  \"\"\n+  \"%.\\\\tmul.hi.s32\\\\t%0, %1, %2;\")\n+\n+(define_insn \"umulhi3_highpart\"\n+  [(set (match_operand:HI 0 \"nvptx_register_operand\" \"=R\")\n+\t(truncate:HI\n+\t (lshiftrt:SI\n+\t  (mult:SI (zero_extend:SI\n+\t\t    (match_operand:HI 1 \"nvptx_register_operand\" \"R\"))\n+\t\t   (zero_extend:SI\n+\t\t    (match_operand:HI 2 \"nvptx_register_operand\" \"R\")))\n+\t  (const_int 16))))]\n+  \"\"\n+  \"%.\\\\tmul.hi.u16\\\\t%0, %1, %2;\")\n+\n+(define_insn \"umulsi3_highpart\"\n+  [(set (match_operand:SI 0 \"nvptx_register_operand\" \"=R\")\n+\t(truncate:SI\n+\t (lshiftrt:DI\n+\t  (mult:DI (zero_extend:DI\n+\t\t    (match_operand:SI 1 \"nvptx_register_operand\" \"R\"))\n+\t\t   (zero_extend:DI\n+\t\t    (match_operand:SI 2 \"nvptx_register_operand\" \"R\")))\n+\t  (const_int 32))))]\n+  \"\"\n+  \"%.\\\\tmul.hi.u32\\\\t%0, %1, %2;\")\n+\n ;; Shifts\n \n (define_insn \"ashl<mode>3\""}, {"sha": "c66fa38623bd3281085861719facfb15c9781ec6", "filename": "gcc/testsuite/gcc.target/nvptx/mul-hi.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37a4c06f3dac9b0b831a8f34af73422aa4f42fbe/gcc%2Ftestsuite%2Fgcc.target%2Fnvptx%2Fmul-hi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37a4c06f3dac9b0b831a8f34af73422aa4f42fbe/gcc%2Ftestsuite%2Fgcc.target%2Fnvptx%2Fmul-hi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fnvptx%2Fmul-hi.c?ref=37a4c06f3dac9b0b831a8f34af73422aa4f42fbe", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-do assemble } */\n+/* { dg-options \"-O2 -save-temps\" } */\n+\n+short smulhi3_highpart(short x, short y)\n+{\n+  return ((int)x * (int)y) >> 16;\n+}\n+\n+int smulsi3_highpart(int x, int y)\n+{\n+  return ((long)x * (long)y) >> 32;\n+}\n+\n+/* { dg-final { scan-assembler-times \"mul.hi.s16\" 1 } } */\n+/* { dg-final { scan-assembler-times \"mul.hi.s32\" 1 } } */"}, {"sha": "3b35d6b50ec3e5e50d53de586a7915936977966c", "filename": "gcc/testsuite/gcc.target/nvptx/umul-hi.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37a4c06f3dac9b0b831a8f34af73422aa4f42fbe/gcc%2Ftestsuite%2Fgcc.target%2Fnvptx%2Fumul-hi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37a4c06f3dac9b0b831a8f34af73422aa4f42fbe/gcc%2Ftestsuite%2Fgcc.target%2Fnvptx%2Fumul-hi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fnvptx%2Fumul-hi.c?ref=37a4c06f3dac9b0b831a8f34af73422aa4f42fbe", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-do assemble } */\n+/* { dg-options \"-O2 -save-temps\" } */\n+\n+unsigned short umulhi3_highpart(unsigned short x, unsigned short y)\n+{\n+  return ((unsigned int)x * (unsigned int)y) >> 16;\n+}\n+\n+unsigned int umulsi3_highpart(unsigned int x, unsigned int y)\n+{\n+  return ((unsigned long)x * (unsigned long)y) >> 32;\n+}\n+\n+/* { dg-final { scan-assembler-times \"mul.hi.u16\" 1 } } */\n+/* { dg-final { scan-assembler-times \"mul.hi.u32\" 1 } } */"}]}