{"sha": "bbedc1ae06a2b1e8ac5e687c754618d56e417d6c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmJlZGMxYWUwNmEyYjFlOGFjNWU2ODdjNzU0NjE4ZDU2ZTQxN2Q2Yw==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2019-08-15T11:29:37Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2019-08-15T11:29:37Z"}, "message": "Clean up dead condition for operators in DCE.\n\n2019-08-15  Martin Liska  <mliska@suse.cz>\n\n\t* tree-ssa-dce.c (propagate_necessity): We can't reach now\n\toperators with no arguments.\n\t(eliminate_unnecessary_stmts): Likewise here.\n\nFrom-SVN: r274529", "tree": {"sha": "13e46eea65e5dc729475dddb92d17a827f708733", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/13e46eea65e5dc729475dddb92d17a827f708733"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bbedc1ae06a2b1e8ac5e687c754618d56e417d6c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bbedc1ae06a2b1e8ac5e687c754618d56e417d6c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bbedc1ae06a2b1e8ac5e687c754618d56e417d6c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bbedc1ae06a2b1e8ac5e687c754618d56e417d6c/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "21c1e205664a2736741777ca34523d53b0edafa0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21c1e205664a2736741777ca34523d53b0edafa0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/21c1e205664a2736741777ca34523d53b0edafa0"}], "stats": {"total": 28, "additions": 12, "deletions": 16}, "files": [{"sha": "49aabbeb08e0f9ccaffccfe0fddd866b5a0b2f89", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbedc1ae06a2b1e8ac5e687c754618d56e417d6c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbedc1ae06a2b1e8ac5e687c754618d56e417d6c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bbedc1ae06a2b1e8ac5e687c754618d56e417d6c", "patch": "@@ -1,3 +1,9 @@\n+2019-08-15  Martin Liska  <mliska@suse.cz>\n+\n+\t* tree-ssa-dce.c (propagate_necessity): We can't reach now\n+\toperators with no arguments.\n+\t(eliminate_unnecessary_stmts): Likewise here.\n+\n 2019-08-15  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/i386-features.c (general_scalar_chain::convert_insn)"}, {"sha": "80d5f5c30f7f4bbe209db5357414ff443ee88b5f", "filename": "gcc/tree-ssa-dce.c", "status": "modified", "additions": 6, "deletions": 16, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbedc1ae06a2b1e8ac5e687c754618d56e417d6c/gcc%2Ftree-ssa-dce.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbedc1ae06a2b1e8ac5e687c754618d56e417d6c/gcc%2Ftree-ssa-dce.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-dce.c?ref=bbedc1ae06a2b1e8ac5e687c754618d56e417d6c", "patch": "@@ -810,11 +810,6 @@ propagate_necessity (bool aggressive)\n \t  if (is_delete_operator\n \t      || gimple_call_builtin_p (stmt, BUILT_IN_FREE))\n \t    {\n-\t      /* It can happen that a user delete operator has the pointer\n-\t\t argument optimized out already.  */\n-\t      if (gimple_call_num_args (stmt) == 0)\n-\t\tcontinue;\n-\n \t      tree ptr = gimple_call_arg (stmt, 0);\n \t      gimple *def_stmt;\n \t      tree def_callee;\n@@ -1328,18 +1323,13 @@ eliminate_unnecessary_stmts (void)\n \t\t  || (is_gimple_call (stmt)\n \t\t      && gimple_call_operator_delete_p (as_a <gcall *> (stmt)))))\n \t    {\n-\t      /* It can happen that a user delete operator has the pointer\n-\t\t argument optimized out already.  */\n-\t      if (gimple_call_num_args (stmt) > 0)\n+\t      tree ptr = gimple_call_arg (stmt, 0);\n+\t      if (TREE_CODE (ptr) == SSA_NAME)\n \t\t{\n-\t\t  tree ptr = gimple_call_arg (stmt, 0);\n-\t\t  if (TREE_CODE (ptr) == SSA_NAME)\n-\t\t    {\n-\t\t      gimple *def_stmt = SSA_NAME_DEF_STMT (ptr);\n-\t\t      if (!gimple_nop_p (def_stmt)\n-\t\t\t  && !gimple_plf (def_stmt, STMT_NECESSARY))\n-\t\t\tgimple_set_plf (stmt, STMT_NECESSARY, false);\n-\t\t    }\n+\t\t  gimple *def_stmt = SSA_NAME_DEF_STMT (ptr);\n+\t\t  if (!gimple_nop_p (def_stmt)\n+\t\t      && !gimple_plf (def_stmt, STMT_NECESSARY))\n+\t\t    gimple_set_plf (stmt, STMT_NECESSARY, false);\n \t\t}\n \t    }\n "}]}