{"sha": "b7ce44d17e7ad9b8d109f403b6a384931376b632", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjdjZTQ0ZDE3ZTdhZDliOGQxMDlmNDAzYjZhMzg0OTMxMzc2YjYzMg==", "commit": {"author": {"name": "Mike Stump", "email": "mikestump@comcast.net", "date": "2013-11-16T00:09:34Z"}, "committer": {"name": "Mike Stump", "email": "mrs@gcc.gnu.org", "date": "2013-11-16T00:09:34Z"}, "message": "gcc.exp (gcc_target_compile): Add support for random runtime\n\n\t* lib/gcc.exp (gcc_target_compile): Add support for random runtime\n\t* lib/g++.exp (g++_target_compile): Likewise.\n\tlibraries.\n\t* gcc.dg/cilk-plus/cilk-plus.exp: Improve support for runtime\n\tlibraries.  Remove debugging.\n\t* g++.dg/cilk-plus/cilk-plus.exp: Add support to find runtime\n\tlibraries.  Remove -O0, redundant with default.\n\nFrom-SVN: r204887", "tree": {"sha": "7dd800c49c3a7bbde97565c4bf1887aa1a6807e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7dd800c49c3a7bbde97565c4bf1887aa1a6807e6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b7ce44d17e7ad9b8d109f403b6a384931376b632", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7ce44d17e7ad9b8d109f403b6a384931376b632", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b7ce44d17e7ad9b8d109f403b6a384931376b632", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7ce44d17e7ad9b8d109f403b6a384931376b632/comments", "author": null, "committer": null, "parents": [{"sha": "d3f4ff8b51b8875a7862fae1fb574735db4bfd36", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3f4ff8b51b8875a7862fae1fb574735db4bfd36", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d3f4ff8b51b8875a7862fae1fb574735db4bfd36"}], "stats": {"total": 51, "additions": 39, "deletions": 12}, "files": [{"sha": "791e3410cca9ff75a9f8740b55a44138c1d1bc56", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7ce44d17e7ad9b8d109f403b6a384931376b632/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7ce44d17e7ad9b8d109f403b6a384931376b632/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b7ce44d17e7ad9b8d109f403b6a384931376b632", "patch": "@@ -1,3 +1,13 @@\n+2013-11-15  Mike Stump  <mikestump@comcast.net>\n+\n+\t* lib/gcc.exp (gcc_target_compile): Add support for random runtime\n+\t* lib/g++.exp (g++_target_compile): Likewise.\n+\tlibraries.\n+\t* gcc.dg/cilk-plus/cilk-plus.exp: Improve support for runtime\n+\tlibraries.  Remove debugging.\n+\t* g++.dg/cilk-plus/cilk-plus.exp: Add support to find runtime\n+\tlibraries.  Remove -O0, redundant with default.\n+\n 2013-11-15  Joseph Myers  <joseph@codesourcery.com>\n \n \t* c-c++-common/cpp/ucnid-2011-1.c: New test."}, {"sha": "a66ec44f297783bb99c2030c702ea20f087e8b97", "filename": "gcc/testsuite/g++.dg/cilk-plus/cilk-plus.exp", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7ce44d17e7ad9b8d109f403b6a384931376b632/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcilk-plus%2Fcilk-plus.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7ce44d17e7ad9b8d109f403b6a384931376b632/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcilk-plus%2Fcilk-plus.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcilk-plus%2Fcilk-plus.exp?ref=b7ce44d17e7ad9b8d109f403b6a384931376b632", "patch": "@@ -29,14 +29,19 @@ g++-dg-runtest [lsort [glob -nocomplain $srcdir/c-c++-common/cilk-plus/PS/*.c]]\n g++-dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*.C]] \"\"\n dg-finish\n \n+set library_var [get_multilibs]\n+# Pointing the ld_library_path to the Cilk Runtime library binaries. \n+set ld_library_path \"${library_var}/libcilkrts/.libs\"\n+\n+global TEST_EXTRA_LIBS\n+set TEST_EXTRA_LIBS \"-L${library_var}/libcilkrts/.libs\"\n+\n dg-init\n dg-runtest [lsort [glob -nocomplain $srcdir/c-c++-common/cilk-plus/AN/*.c]] \" -fcilkplus\" \" \"\n-dg-runtest [lsort [glob -nocomplain $srcdir/c-c++-common/cilk-plus/AN/*.c]] \" -O0 -fcilkplus\" \" \"\n dg-runtest [lsort [glob -nocomplain $srcdir/c-c++-common/cilk-plus/AN/*.c]] \" -O1 -fcilkplus\" \" \"\n dg-runtest [lsort [glob -nocomplain $srcdir/c-c++-common/cilk-plus/AN/*.c]] \" -O2 -ftree-vectorize -fcilkplus\" \" \"\n dg-runtest [lsort [glob -nocomplain $srcdir/c-c++-common/cilk-plus/AN/*.c]] \" -O3 -fcilkplus\" \" \"\n dg-runtest [lsort [glob -nocomplain $srcdir/c-c++-common/cilk-plus/AN/*.c]] \" -g -fcilkplus\" \" \"\n-dg-runtest [lsort [glob -nocomplain $srcdir/c-c++-common/cilk-plus/AN/*.c]] \" -g -O0 -fcilkplus\" \" \"\n dg-runtest [lsort [glob -nocomplain $srcdir/c-c++-common/cilk-plus/AN/*.c]] \" -g -O1 -fcilkplus\" \" \"\n dg-runtest [lsort [glob -nocomplain $srcdir/c-c++-common/cilk-plus/AN/*.c]] \" -g -O2 -ftree-vectorize -fcilkplus\" \" \"\n dg-runtest [lsort [glob -nocomplain $srcdir/c-c++-common/cilk-plus/AN/*.c]] \" -g -O3 -fcilkplus\" \" \"\n@@ -56,3 +61,5 @@ dg-runtest [lsort [glob -nocomplain $srcdir/g++.dg/cilk-plus/AN/*.cc]] \" -g -O2\n dg-runtest [lsort [glob -nocomplain $srcdir/g++.dg/cilk-plus/AN/*.cc]] \" -g -O3 -fcilkplus\" \" \"\n dg-runtest [lsort [glob -nocomplain $srcdir/g++.dg/cilk-plus/AN/*.cc]] \" -O3 -ftree-vectorize -fcilkplus -g\" \" \"\n dg-finish\n+\n+unset TEST_EXTRA_LIBS"}, {"sha": "dc66fcb4c0c02752372f88442771f2696e9ece4f", "filename": "gcc/testsuite/gcc.dg/cilk-plus/cilk-plus.exp", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7ce44d17e7ad9b8d109f403b6a384931376b632/gcc%2Ftestsuite%2Fgcc.dg%2Fcilk-plus%2Fcilk-plus.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7ce44d17e7ad9b8d109f403b6a384931376b632/gcc%2Ftestsuite%2Fgcc.dg%2Fcilk-plus%2Fcilk-plus.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcilk-plus%2Fcilk-plus.exp?ref=b7ce44d17e7ad9b8d109f403b6a384931376b632", "patch": "@@ -24,13 +24,12 @@ if { ![check_effective_target_cilkplus] } {\n     return;\n }\n \n-verbose \"$tool $libdir\" 1\n set library_var [get_multilibs]\n # Pointing the ld_library_path to the Cilk Runtime library binaries. \n set ld_library_path \"${library_var}/libcilkrts/.libs\"\n \n-set ALWAYS_CFLAGS \"\"\n-lappend ALWAYS_CFLAGS \"-L${library_var}/libcilkrts/.libs\"\n+global TEST_EXTRA_LIBS\n+set TEST_EXTRA_LIBS \"-L${library_var}/libcilkrts/.libs\"\n \n dg-init\n \n@@ -51,14 +50,15 @@ dg-runtest [lsort [glob -nocomplain $srcdir/c-c++-common/cilk-plus/AN/*.c]] \" -f\n dg-runtest [lsort [glob -nocomplain $srcdir/c-c++-common/cilk-plus/AN/*.c]] \" -fcilkplus -O3 -std=c99\" \" \"\n dg-runtest [lsort [glob -nocomplain $srcdir/c-c++-common/cilk-plus/AN/*.c]] \" -fcilkplus -g -O0 -std=c99\" \" \"\n \n-dg-runtest [lsort [glob -nocomplain $srcdir/c-c++-common/cilk-plus/CK/*.c]] \" -g -fcilkplus $ALWAYS_CFLAGS \" \" \"\n-dg-runtest [lsort [glob -nocomplain $srcdir/c-c++-common/cilk-plus/CK/*.c]] \" -O1 -fcilkplus $ALWAYS_CFLAGS\" \" \"\n-dg-runtest [lsort [glob -nocomplain $srcdir/c-c++-common/cilk-plus/CK/*.c]] \" -O2 -std=c99 -fcilkplus $ALWAYS_CFLAGS\" \" \"\n-dg-runtest [lsort [glob -nocomplain $srcdir/c-c++-common/cilk-plus/CK/*.c]] \" -O2 -ftree-vectorize -fcilkplus $ALWAYS_CFLAGS\" \" \"\n-dg-runtest [lsort [glob -nocomplain $srcdir/c-c++-common/cilk-plus/CK/*.c]] \" -O3 -g -fcilkplus $ALWAYS_CFLAGS\" \" \"\n+dg-runtest [lsort [glob -nocomplain $srcdir/c-c++-common/cilk-plus/CK/*.c]] \" -g -fcilkplus\" \" \"\n+dg-runtest [lsort [glob -nocomplain $srcdir/c-c++-common/cilk-plus/CK/*.c]] \" -O1 -fcilkplus\" \" \"\n+dg-runtest [lsort [glob -nocomplain $srcdir/c-c++-common/cilk-plus/CK/*.c]] \" -O2 -std=c99 -fcilkplus\" \" \"\n+dg-runtest [lsort [glob -nocomplain $srcdir/c-c++-common/cilk-plus/CK/*.c]] \" -O2 -ftree-vectorize -fcilkplus\" \" \"\n+dg-runtest [lsort [glob -nocomplain $srcdir/c-c++-common/cilk-plus/CK/*.c]] \" -O3 -g -fcilkplus\" \" \"\n if { [check_effective_target_lto] } {\n-    dg-runtest [lsort [glob -nocomplain $srcdir/c-c++-common/cilk-plus/CK/*.c]] \" -O3 -flto -g -fcilkplus $ALWAYS_CFLAGS\" \" \"\n+    dg-runtest [lsort [glob -nocomplain $srcdir/c-c++-common/cilk-plus/CK/*.c]] \" -O3 -flto -g -fcilkplus\" \" \"\n }\n \n-\n dg-finish\n+\n+unset TEST_EXTRA_LIBS"}, {"sha": "2018ae57626d27189f0907e5de3afee19d076f8e", "filename": "gcc/testsuite/lib/g++.exp", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7ce44d17e7ad9b8d109f403b6a384931376b632/gcc%2Ftestsuite%2Flib%2Fg%2B%2B.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7ce44d17e7ad9b8d109f403b6a384931376b632/gcc%2Ftestsuite%2Flib%2Fg%2B%2B.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fg%2B%2B.exp?ref=b7ce44d17e7ad9b8d109f403b6a384931376b632", "patch": "@@ -294,6 +294,11 @@ proc g++_target_compile { source dest type options } {\n \tlappend options \"ldflags=${wrap_flags}\"\n     }\n \n+    global TEST_EXTRA_LIBS\n+    if [info exists TEST_EXTRA_LIBS] {\n+\tlappend options \"ldflags=$TEST_EXTRA_LIBS\"\n+    }\n+\n     lappend options \"additional_flags=[libio_include_flags]\"\n     lappend options \"compiler=$GXX_UNDER_TEST\"\n     lappend options \"timeout=[timeout_value]\""}, {"sha": "d9251ab44abb01555cde1caa5a4efadafb664b30", "filename": "gcc/testsuite/lib/gcc.exp", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7ce44d17e7ad9b8d109f403b6a384931376b632/gcc%2Ftestsuite%2Flib%2Fgcc.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7ce44d17e7ad9b8d109f403b6a384931376b632/gcc%2Ftestsuite%2Flib%2Fgcc.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fgcc.exp?ref=b7ce44d17e7ad9b8d109f403b6a384931376b632", "patch": "@@ -134,6 +134,11 @@ proc gcc_target_compile { source dest type options } {\n \tlappend options \"ldflags=$wrap_flags\"\n     }\n \n+    global TEST_EXTRA_LIBS\n+    if [info exists TEST_EXTRA_LIBS] {\n+\tlappend options \"ldflags=$TEST_EXTRA_LIBS\"\n+    }\n+\n     if [target_info exists gcc,stack_size] {\n \tlappend options \"additional_flags=-DSTACK_SIZE=[target_info gcc,stack_size]\"\n     }"}]}