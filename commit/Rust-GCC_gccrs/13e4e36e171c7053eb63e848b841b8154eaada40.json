{"sha": "13e4e36e171c7053eb63e848b841b8154eaada40", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTNlNGUzNmUxNzFjNzA1M2ViNjNlODQ4Yjg0MWI4MTU0ZWFhZGE0MA==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2009-03-03T18:08:01Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2009-03-03T18:08:01Z"}, "message": "re PR tree-optimization/39345 (ICE in copy_tree_body_r, at tree-inline.c:1020)\n\n2009-03-03  H.J. Lu  <hongjiu.lu@intel.com>\n\n\tPR middle-end/39345\n\t* tree-inline.c (remapped_type): New.\n\t(can_be_nonlocal): Call remapped_type instead of remap_type.\n\nFrom-SVN: r144581", "tree": {"sha": "07b2104b534faffa886609f1d43a8463761aacb1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/07b2104b534faffa886609f1d43a8463761aacb1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/13e4e36e171c7053eb63e848b841b8154eaada40", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13e4e36e171c7053eb63e848b841b8154eaada40", "html_url": "https://github.com/Rust-GCC/gccrs/commit/13e4e36e171c7053eb63e848b841b8154eaada40", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13e4e36e171c7053eb63e848b841b8154eaada40/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6eaf85d0018e29f7fed19301d94f2320bed63af2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6eaf85d0018e29f7fed19301d94f2320bed63af2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6eaf85d0018e29f7fed19301d94f2320bed63af2"}], "stats": {"total": 32, "additions": 30, "deletions": 2}, "files": [{"sha": "3d4b017a92cc6e7556c4b7f45b387059be774381", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13e4e36e171c7053eb63e848b841b8154eaada40/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13e4e36e171c7053eb63e848b841b8154eaada40/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=13e4e36e171c7053eb63e848b841b8154eaada40", "patch": "@@ -1,3 +1,9 @@\n+2009-03-03  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR middle-end/39345\n+\t* tree-inline.c (remapped_type): New.\n+\t(can_be_nonlocal): Call remapped_type instead of remap_type.\n+\n 2009-03-03  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR fortran/39354"}, {"sha": "63392e21c4bf2cb8ba83de65c29f8172637ecfb7", "filename": "gcc/tree-inline.c", "status": "modified", "additions": 24, "deletions": 2, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13e4e36e171c7053eb63e848b841b8154eaada40/gcc%2Ftree-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13e4e36e171c7053eb63e848b841b8154eaada40/gcc%2Ftree-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.c?ref=13e4e36e171c7053eb63e848b841b8154eaada40", "patch": "@@ -426,6 +426,26 @@ remap_type (tree type, copy_body_data *id)\n   return tmp;\n }\n \n+/* Return previously remapped type of TYPE in ID.  Return NULL if TYPE\n+   is NULL or TYPE has not been remapped before.  */\n+\n+static tree\n+remapped_type (tree type, copy_body_data *id)\n+{\n+  tree *node;\n+\n+  if (type == NULL)\n+    return type;\n+\n+  /* See if we have remapped this type.  */\n+  node = (tree *) pointer_map_contains (id->decl_map, type);\n+  if (node)\n+    return *node;\n+  else\n+    return NULL;\n+}\n+\n+  /* The type only needs remapping if it's variably modified.  */\n /* Decide if DECL can be put into BLOCK_NONLOCAL_VARs.  */\n   \n static bool\n@@ -446,8 +466,10 @@ can_be_nonlocal (tree decl, copy_body_data *id)\n   if (TREE_CODE (decl) != VAR_DECL && TREE_CODE (decl) != PARM_DECL)\n     return false;\n \n-  /* We must use global type.  */\n-  if (TREE_TYPE (decl) != remap_type (TREE_TYPE (decl), id))\n+  /* We must use global type.  We call remapped_type instead of\n+     remap_type since we don't want to remap this type here if it\n+     hasn't been remapped before.  */\n+  if (TREE_TYPE (decl) != remapped_type (TREE_TYPE (decl), id))\n     return false;\n \n   /* Wihtout SSA we can't tell if variable is used.  */"}]}