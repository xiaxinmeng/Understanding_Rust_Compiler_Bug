{"sha": "2c9c6adac944e2705131400a24570ae884388c71", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmM5YzZhZGFjOTQ0ZTI3MDUxMzE0MDBhMjQ1NzBhZTg4NDM4OGM3MQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2018-05-10T18:41:00Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2018-05-10T18:41:00Z"}, "message": "* parser.c (cp_parser_class_head): Use num_template_headers_for_class.\n\nFrom-SVN: r260125", "tree": {"sha": "205934adca5326abd2b7cfc5cb4be6bbcd1f1dc9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/205934adca5326abd2b7cfc5cb4be6bbcd1f1dc9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2c9c6adac944e2705131400a24570ae884388c71", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c9c6adac944e2705131400a24570ae884388c71", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c9c6adac944e2705131400a24570ae884388c71", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c9c6adac944e2705131400a24570ae884388c71/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5d7b4c6fe9b1d69417c0c2e8f618603d2d93b2d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d7b4c6fe9b1d69417c0c2e8f618603d2d93b2d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d7b4c6fe9b1d69417c0c2e8f618603d2d93b2d3"}], "stats": {"total": 17, "additions": 3, "deletions": 14}, "files": [{"sha": "76a7087bb218689d7e6fce8c2a47660be9c78ac0", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c9c6adac944e2705131400a24570ae884388c71/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c9c6adac944e2705131400a24570ae884388c71/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=2c9c6adac944e2705131400a24570ae884388c71", "patch": "@@ -1,5 +1,7 @@\n 2018-05-09  Jason Merrill  <jason@redhat.com>\n \n+\t* parser.c (cp_parser_class_head): Use num_template_headers_for_class.\n+\n \t* pt.c (instantiate_decl): Make sure we aren't trying to do a nested\n \tinstantiation in template context.\n "}, {"sha": "82b8ef87ed7c5f5fac96a5da445c3722af266ea3", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 1, "deletions": 14, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c9c6adac944e2705131400a24570ae884388c71/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c9c6adac944e2705131400a24570ae884388c71/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=2c9c6adac944e2705131400a24570ae884388c71", "patch": "@@ -22930,20 +22930,7 @@ cp_parser_class_head (cp_parser* parser,\n       /* Otherwise, count the number of templates used in TYPE and its\n \t containing scopes.  */\n       else\n-\t{\n-\t  tree scope;\n-\n-\t  for (scope = TREE_TYPE (type);\n-\t       scope && TREE_CODE (scope) != NAMESPACE_DECL;\n-\t       scope = get_containing_scope (scope))\n-\t    if (TYPE_P (scope)\n-\t\t&& CLASS_TYPE_P (scope)\n-\t\t&& CLASSTYPE_TEMPLATE_INFO (scope)\n-\t\t&& PRIMARY_TEMPLATE_P (CLASSTYPE_TI_TEMPLATE (scope))\n-\t\t&& (!CLASSTYPE_TEMPLATE_SPECIALIZATION (scope)\n-\t\t    || uses_template_parms (CLASSTYPE_TI_ARGS (scope))))\n-\t      ++num_templates;\n-\t}\n+\tnum_templates = num_template_headers_for_class (TREE_TYPE (type));\n     }\n   /* Otherwise, the identifier is optional.  */\n   else"}]}