{"sha": "bc3ca41b4911ec74cd970904c5a91402bdeeb424", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmMzY2E0MWI0OTExZWM3NGNkOTcwOTA0YzVhOTE0MDJiZGVlYjQyNA==", "commit": {"author": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "1999-01-06T17:49:38Z"}, "committer": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "1999-01-06T17:49:38Z"}, "message": "check-init.c: New file.\n\n8\n\t* check-init.c:  New file.  Checks for definite assignment.\nVarious minor other changes;  see ChangeLog.\n\nFrom-SVN: r24523", "tree": {"sha": "9647622d16819ec0f75febbe118ae5caf9d32937", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9647622d16819ec0f75febbe118ae5caf9d32937"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bc3ca41b4911ec74cd970904c5a91402bdeeb424", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc3ca41b4911ec74cd970904c5a91402bdeeb424", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bc3ca41b4911ec74cd970904c5a91402bdeeb424", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc3ca41b4911ec74cd970904c5a91402bdeeb424/comments", "author": null, "committer": null, "parents": [{"sha": "4ba9a1aa641fb88c0ede517de0cf4e86cd305b58", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ba9a1aa641fb88c0ede517de0cf4e86cd305b58", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ba9a1aa641fb88c0ede517de0cf4e86cd305b58"}], "stats": {"total": 1123, "additions": 647, "deletions": 476}, "files": [{"sha": "158d584e0f23363e74f30df771a62adfa0463bb3", "filename": "gcc/java/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc3ca41b4911ec74cd970904c5a91402bdeeb424/gcc%2Fjava%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc3ca41b4911ec74cd970904c5a91402bdeeb424/gcc%2Fjava%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FMakefile.in?ref=bc3ca41b4911ec74cd970904c5a91402bdeeb424", "patch": "@@ -175,7 +175,7 @@ INCLUDES = -I. -I.. -I$(srcdir) -I$(srcdir)/.. -I$(srcdir)/../config -I$(srcdir)\n #\n JAVA_OBJS = parse.o class.o decl.o expr.o constants.o lang.o typeck.o \\\n   except.o verify.o zextract.o jcf-io.o jcf-parse.o mangle.o jcf-write.o \\\n-  buffer.o jcf-depend.o jcf-path.o\n+  buffer.o check-init.o jcf-depend.o jcf-path.o\n \n JAVA_OBJS_LITE = parse-scan.o jv-scan.o\n "}, {"sha": "9c55437d2722a718b5e130da60aacdc36c46d0fe", "filename": "gcc/java/expr.c", "status": "modified", "additions": 31, "deletions": 1, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc3ca41b4911ec74cd970904c5a91402bdeeb424/gcc%2Fjava%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc3ca41b4911ec74cd970904c5a91402bdeeb424/gcc%2Fjava%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fexpr.c?ref=bc3ca41b4911ec74cd970904c5a91402bdeeb424", "patch": "@@ -1765,7 +1765,37 @@ java_lang_expand_expr (exp, target, tmode, modifier)\n \tHOST_WIDE_INT ilength = java_array_type_length (array_type);\n \ttree length = build_int_2 (ilength, 0);\n \ttree init = TREE_OPERAND (exp, 0);\n-\ttree array_decl = build_decl (VAR_DECL, NULL_TREE, TREE_TYPE (exp));\n+\ttree array_decl;\n+#if 0\n+\t/* Enable this once we can set the vtable field statically.  FIXME */\n+\tif (TREE_CONSTANT (init) && TREE_STATIC (init)\n+\t    && JPRIMITIVE_TYPE_P (element_type))\n+\t  {\n+\t    tree temp, value, init_decl;\n+\t    START_RECORD_CONSTRUCTOR (temp, object_type_node);\n+\t    PUSH_FIELD_VALUE (temp, \"vtable\",\n+\t\t\t      null_pointer_node /* FIXME */\n+\t\t\t      );\n+\t    PUSH_FIELD_VALUE (temp, \"sync_info\", null_pointer_node);\n+\t    FINISH_RECORD_CONSTRUCTOR (temp);\n+\t    START_RECORD_CONSTRUCTOR (value, array_type);\n+\t    PUSH_SUPER_VALUE (value, temp);\n+\t    PUSH_FIELD_VALUE (value, \"length\", length);\n+\t    PUSH_FIELD_VALUE (value, \"data\", init);\n+\t    FINISH_RECORD_CONSTRUCTOR (value);\n+\n+\t    init_decl = build_decl (VAR_DECL, generate_name (), array_type);\n+\t    pushdecl_top_level (init_decl);\n+\t    TREE_STATIC (init_decl) = 1;\n+\t    DECL_INITIAL (init_decl) = value;\n+\t    DECL_IGNORED_P (init_decl) = 1;\n+\t    TREE_READONLY (init_decl) = 1;\n+\t    make_decl_rtl (init_decl, NULL, 1);\n+\t    init = build1 (ADDR_EXPR, TREE_TYPE (exp), init_decl);\n+\t    return expand_expr (init, target, tmode, modifier);\n+\t  }\n+#endif\n+\tarray_decl = build_decl (VAR_DECL, NULL_TREE, TREE_TYPE (exp));\n \texpand_decl (array_decl);\n \ttmp = expand_assignment (array_decl,\n \t\t\t\t build_new_array (element_type, length),"}, {"sha": "2e9ac7cf72d770ef4ba180caaaf5653b3dd9c42e", "filename": "gcc/java/java-tree.h", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc3ca41b4911ec74cd970904c5a91402bdeeb424/gcc%2Fjava%2Fjava-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc3ca41b4911ec74cd970904c5a91402bdeeb424/gcc%2Fjava%2Fjava-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjava-tree.h?ref=bc3ca41b4911ec74cd970904c5a91402bdeeb424", "patch": "@@ -520,6 +520,7 @@ extern tree decode_newarray_type PROTO ((int));\n extern tree lookup_field PROTO ((tree*, tree));\n extern int is_array_type_p PROTO ((tree));\n extern HOST_WIDE_INT java_array_type_length PROTO ((tree));\n+extern int read_class PROTO ((tree));\n extern void load_class PROTO ((tree, int));\n \n extern tree lookup_name PROTO ((tree));\n@@ -833,6 +834,9 @@ extern tree *type_map;\n #define FINALLY_EXPR_LABEL(NODE) TREE_OPERAND ((NODE), 0)\n #define FINALLY_EXPR_BLOCK(NODE) TREE_OPERAND ((NODE), 1)\n \n+#define BLOCK_EXPR_DECLS(NODE)  BLOCK_VARS(NODE)\n+#define BLOCK_EXPR_BODY(NODE)   BLOCK_SUBBLOCKS(NODE)\n+\n /* Using a CATCH_EXPR node */\n #define CATCH_EXPR_GET_EXPR(NODE, V) (V ? LABELED_BLOCK_BODY (NODE) : (NODE))\n \n@@ -841,11 +845,12 @@ extern tree *type_map;\n   (inherits_from_p ((TYPE), runtime_exception_type_node)\t\\\n    || inherits_from_p ((TYPE), error_exception_type_node))\n \n+extern int java_error_count;\t\t\t\t\t\\\n+\n /* Make the current function where this macro is invoked report error\n    messages and and return, if any */\n #define java_parse_abort_on_error()\t\t\t\t\t\\\n   {\t\t\t\t\t\t\t\t\t\\\n-     extern int java_error_count;\t\t\t\t\t\\\n-     if (java_error_count)\t\t\t\t\t\t\\\n+     if (java_error_count > save_error_count)\t\t\t\t\\\n        return;\t\t\t\t\t\t\t\t\\\n    }"}, {"sha": "6aafb5af42058518a7229a8aa7137811f825682f", "filename": "gcc/java/jcf-parse.c", "status": "modified", "additions": 53, "deletions": 33, "changes": 86, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc3ca41b4911ec74cd970904c5a91402bdeeb424/gcc%2Fjava%2Fjcf-parse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc3ca41b4911ec74cd970904c5a91402bdeeb424/gcc%2Fjava%2Fjcf-parse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjcf-parse.c?ref=bc3ca41b4911ec74cd970904c5a91402bdeeb424", "patch": "@@ -449,35 +449,23 @@ DEFUN(jcf_out_of_synch, (jcf),\n   free (source);\n }\n \n-/* Load CLASS_OR_NAME. CLASS_OR_NAME can be a mere identifier if\n-   called from the parser, otherwise it's a RECORD_TYPE node. If\n-   VERBOSE is 1, print error message on failure to load a class. */\n+/* Read a class with the fully qualified-name NAME.\n+   Return 1 iff we read the requested file.\n+   (It is still possible we failed if the file did not\n+   define the class it is supposed to.) */\n \n-void\n-load_class (class_or_name, verbose)\n-     tree class_or_name;\n-     int verbose;\n+int\n+read_class (name)\n+     tree name;\n {\n   JCF this_jcf, *jcf;\n-  tree name;\n   tree save_current_class = current_class;\n   char *save_input_filename = input_filename;\n   JCF *save_current_jcf = current_jcf;\n   long saved_pos;\n   if (current_jcf->read_state)\n     saved_pos = ftell (current_jcf->read_state);\n \n-  /* class_or_name can be the name of the class we want to load */\n-  if (TREE_CODE (class_or_name) == IDENTIFIER_NODE)\n-    name = class_or_name;\n-  /* In some cases, it's a dependency that we process earlier that\n-     we though */\n-  else if (TREE_CODE (class_or_name) == TREE_LIST)\n-    name = TYPE_NAME (TREE_PURPOSE (class_or_name));\n-  /* Or it's a type in the making */\n-  else\n-    name = DECL_NAME (TYPE_NAME (class_or_name));\n-\n   push_obstacks (&permanent_obstack, &permanent_obstack);\n \n   /* Search in current zip first.  */\n@@ -491,19 +479,8 @@ load_class (class_or_name, verbose)\n     if (find_class (IDENTIFIER_POINTER (name), IDENTIFIER_LENGTH (name),\n \t\t     &this_jcf, saw_java_source) == 0)\n       {\n-\tif (verbose)\n-\t  {\n-\t    error (\"Cannot find class file for class %s.\",\n-\t\t   IDENTIFIER_POINTER (name));\n-\t    TYPE_SIZE (class_or_name) = error_mark_node;\n-#if 0\n-\t    /* FIXME: what to do here?  */\n-\t    if (!strcmp (classpath, DEFAULT_CLASS_PATH))\n-\t      fatal (\"giving up\");\n-#endif\n-\t    pop_obstacks ();\t/* FIXME: one pop_obstack() per function */\n-\t  }\n-\treturn;\n+\tpop_obstacks ();\t/* FIXME: one pop_obstack() per function */\n+\treturn 0;\n       }\n     else\n       {\n@@ -528,14 +505,54 @@ load_class (class_or_name, verbose)\n \n   if (!current_jcf->seen_in_zip)\n     JCF_FINISH (current_jcf);\n-/*  DECL_IGNORED_P (TYPE_NAME (class_or_name)) = 1;*/\n   pop_obstacks ();\n \n   current_class = save_current_class;\n   input_filename = save_input_filename;\n   current_jcf = save_current_jcf;\n   if (current_jcf->read_state)\n     fseek (current_jcf->read_state, saved_pos, SEEK_SET);\n+  return 1;\n+}\n+\n+/* Load CLASS_OR_NAME. CLASS_OR_NAME can be a mere identifier if\n+   called from the parser, otherwise it's a RECORD_TYPE node. If\n+   VERBOSE is 1, print error message on failure to load a class. */\n+\n+/* Replace calls to load_class by having callers call read_class directly\n+   - and then perhaps rename read_class to load_class.  FIXME */\n+\n+void\n+load_class (class_or_name, verbose)\n+     tree class_or_name;\n+     int verbose;\n+{\n+  tree name;\n+\n+  /* class_or_name can be the name of the class we want to load */\n+  if (TREE_CODE (class_or_name) == IDENTIFIER_NODE)\n+    name = class_or_name;\n+  /* In some cases, it's a dependency that we process earlier that\n+     we though */\n+  else if (TREE_CODE (class_or_name) == TREE_LIST)\n+    name = TYPE_NAME (TREE_PURPOSE (class_or_name));\n+  /* Or it's a type in the making */\n+  else\n+    name = DECL_NAME (TYPE_NAME (class_or_name));\n+\n+  if (read_class (name) == 0 && verbose)\n+    {\n+      error (\"Cannot find file for class %s.\",\n+\t     IDENTIFIER_POINTER (name));\n+      if (TREE_CODE (class_or_name) == RECORD_TYPE)\n+\tTYPE_SIZE (class_or_name) = error_mark_node;\n+#if 0\n+      /* FIXME: what to do here?  */\n+      if (!strcmp (classpath, DEFAULT_CLASS_PATH))\n+\tfatal (\"giving up\");\n+#endif\n+      return;\n+    }\n }\n \n /* Parse a source file when JCF refers to a source file.  */\n@@ -717,12 +734,15 @@ static void\n parse_source_file (file)\n      tree file;\n {\n+  int save_error_count = java_error_count;\n   /* Mark the file as parsed */\n   HAS_BEEN_ALREADY_PARSED_P (file) = 1;\n \n   lang_init_source (1);\t\t    /* Error msgs have no method prototypes */\n+\n   java_init_lex ();\t\t    /* Initialize the parser */\n   java_parse_abort_on_error ();\n+\n   java_parse ();\t\t    /* Parse and build partial tree nodes. */\n   java_parse_abort_on_error ();\n   java_complete_class ();\t    /* Parse unsatisfied class decl. */"}, {"sha": "78a0745eb4873b4ff354c90129bdbb4d140f6fd9", "filename": "gcc/java/parse.c", "status": "modified", "additions": 489, "deletions": 435, "changes": 924, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc3ca41b4911ec74cd970904c5a91402bdeeb424/gcc%2Fjava%2Fparse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc3ca41b4911ec74cd970904c5a91402bdeeb424/gcc%2Fjava%2Fparse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.c?ref=bc3ca41b4911ec74cd970904c5a91402bdeeb424", "patch": "@@ -122,17 +122,9 @@\n \n #line 48 \"./parse.y\"\n \n-#include <stdio.h>\n-#include <stdlib.h>\n-#include <string.h>\n-#include <dirent.h>\n-#ifdef __STDC__\n-#include <stdarg.h>\n-#else\n-#include <varargs.h>\n-#endif\n-\n #include \"config.h\"\n+#include \"system.h\"\n+#include <dirent.h>\n #include \"tree.h\"\n #include \"rtl.h\"\n #include \"obstack.h\"\n@@ -366,7 +358,7 @@ static tree wfl_append = NULL_TREE;\n /* The \"toString\" identifier used for String `+' operator. */\n static tree wfl_to_string = NULL_TREE;\n \n-#line 294 \"./parse.y\"\n+#line 286 \"./parse.y\"\n typedef union {\n   tree node;\n   int sub_token;\n@@ -670,56 +662,56 @@ static const short yyrhs[] = {   123,\n \n #if YYDEBUG != 0\n static const short yyrline[] = { 0,\n-   444,   450,   452,   453,   454,   455,   456,   460,   462,   465,\n-   467,   468,   471,   473,   476,   480,   484,   488,   494,   496,\n-   498,   500,   505,   507,   510,   514,   519,   524,   526,   527,\n-   528,   529,   530,   531,   532,   535,   540,   546,   548,   551,\n-   554,   556,   560,   562,   565,   592,   594,   598,   607,   609,\n-   613,   620,   621,   623,   633,   638,   653,   657,   660,   663,\n-   666,   668,   670,   672,   676,   678,   680,   682,   686,   688,\n-   690,   697,   703,   708,   712,   715,   719,   721,   724,   726,\n-   727,   728,   732,   734,   735,   737,   742,   745,   755,   758,\n-   760,   764,   767,   774,   780,   788,   790,   792,   794,   796,\n-   800,   802,   806,   813,   814,   818,   821,   823,   825,   827,\n-   829,   831,   833,   835,   842,   845,   847,   856,   858,   862,\n-   867,   872,   876,   881,   883,   885,   892,   894,   896,   900,\n-   903,   905,   909,   911,   912,   917,   922,   928,   936,   943,\n-   946,   949,   953,   956,   960,   969,   971,   973,   978,   985,\n-   993,   995,   999,  1007,  1018,  1022,  1025,  1028,  1031,  1034,\n-  1037,  1040,  1043,  1045,  1049,  1055,  1060,  1062,  1066,  1069,\n-  1073,  1075,  1078,  1080,  1081,  1083,  1087,  1091,  1097,  1102,\n-  1105,  1107,  1111,  1117,  1121,  1126,  1129,  1133,  1138,  1146,\n-  1148,  1151,  1153,  1155,  1159,  1163,  1166,  1170,  1172,  1173,\n-  1174,  1175,  1176,  1186,  1188,  1189,  1190,  1191,  1194,  1196,\n-  1197,  1198,  1199,  1200,  1201,  1202,  1203,  1204,  1205,  1208,\n-  1213,  1224,  1231,  1235,  1246,  1256,  1262,  1268,  1274,  1276,\n-  1282,  1284,  1290,  1292,  1294,  1296,  1298,  1302,  1304,  1305,\n-  1306,  1307,  1308,  1309,  1312,  1315,  1317,  1319,  1323,  1328,\n-  1333,  1339,  1349,  1355,  1357,  1359,  1366,  1369,  1371,  1373,\n-  1377,  1379,  1382,  1386,  1388,  1391,  1398,  1404,  1406,  1408,\n-  1412,  1420,  1423,  1425,  1427,  1431,  1436,  1445,  1450,  1453,\n-  1460,  1462,  1464,  1468,  1471,  1480,  1487,  1489,  1493,  1506,\n-  1508,  1514,  1520,  1524,  1526,  1530,  1533,  1535,  1539,  1542,\n-  1544,  1546,  1550,  1553,  1555,  1557,  1561,  1564,  1566,  1568,\n-  1572,  1578,  1580,  1584,  1591,  1593,  1595,  1597,  1601,  1609,\n-  1612,  1614,  1616,  1620,  1622,  1629,  1637,  1654,  1656,  1658,\n-  1662,  1668,  1673,  1675,  1678,  1680,  1682,  1684,  1685,  1686,\n-  1687,  1691,  1693,  1695,  1700,  1702,  1704,  1706,  1708,  1712,\n-  1715,  1720,  1722,  1727,  1728,  1729,  1730,  1731,  1733,  1735,\n-  1737,  1739,  1741,  1745,  1747,  1750,  1756,  1761,  1765,  1768,\n-  1770,  1772,  1776,  1778,  1780,  1782,  1786,  1789,  1793,  1799,\n-  1801,  1809,  1812,  1814,  1818,  1823,  1831,  1835,  1838,  1840,\n-  1851,  1862,  1867,  1876,  1878,  1882,  1885,  1887,  1892,  1897,\n-  1902,  1909,  1911,  1912,  1913,  1916,  1921,  1926,  1928,  1929,\n-  1931,  1933,  1934,  1936,  1940,  1943,  1947,  1950,  1954,  1956,\n-  1958,  1960,  1961,  1963,  1967,  1975,  1977,  1979,  1991,  1993,\n-  1999,  2001,  2003,  2007,  2009,  2014,  2019,  2024,  2026,  2028,\n-  2032,  2034,  2039,  2044,  2046,  2050,  2052,  2057,  2062,  2067,\n-  2069,  2071,  2075,  2077,  2082,  2087,  2092,  2097,  2099,  2101,\n-  2103,  2105,  2107,  2111,  2113,  2118,  2123,  2125,  2129,  2131,\n-  2136,  2140,  2142,  2147,  2151,  2153,  2158,  2162,  2164,  2169,\n-  2173,  2175,  2180,  2184,  2186,  2191,  2197,  2199,  2203,  2205,\n-  2208,  2211,  2219,  2221,  2222,  2225,  2227,  2230,  2234\n+   436,   442,   444,   445,   446,   447,   448,   452,   454,   457,\n+   459,   460,   463,   465,   468,   472,   476,   480,   486,   488,\n+   490,   492,   497,   499,   502,   506,   511,   516,   518,   519,\n+   520,   521,   522,   523,   524,   527,   532,   538,   540,   543,\n+   546,   548,   552,   554,   557,   584,   586,   590,   599,   601,\n+   605,   612,   613,   615,   625,   630,   645,   649,   652,   655,\n+   658,   660,   662,   664,   668,   670,   672,   674,   678,   680,\n+   682,   689,   695,   700,   704,   707,   711,   713,   716,   718,\n+   719,   720,   724,   726,   727,   729,   734,   737,   747,   750,\n+   752,   756,   759,   766,   772,   780,   782,   784,   786,   788,\n+   792,   794,   798,   805,   806,   810,   813,   815,   817,   819,\n+   821,   823,   825,   827,   834,   837,   839,   848,   850,   854,\n+   859,   864,   868,   873,   875,   877,   884,   886,   888,   892,\n+   895,   897,   901,   903,   904,   909,   914,   920,   928,   935,\n+   938,   941,   945,   948,   952,   961,   963,   965,   970,   977,\n+   985,   987,   991,   999,  1010,  1014,  1017,  1020,  1023,  1026,\n+  1029,  1032,  1035,  1037,  1041,  1047,  1052,  1054,  1058,  1061,\n+  1065,  1067,  1070,  1072,  1073,  1075,  1079,  1083,  1089,  1094,\n+  1097,  1099,  1103,  1109,  1113,  1118,  1121,  1125,  1130,  1138,\n+  1140,  1143,  1145,  1147,  1151,  1155,  1158,  1162,  1164,  1165,\n+  1166,  1167,  1168,  1178,  1180,  1181,  1182,  1183,  1186,  1188,\n+  1189,  1190,  1191,  1192,  1193,  1194,  1195,  1196,  1197,  1200,\n+  1205,  1216,  1223,  1227,  1238,  1248,  1254,  1260,  1266,  1268,\n+  1274,  1276,  1282,  1284,  1286,  1288,  1290,  1294,  1296,  1297,\n+  1298,  1299,  1300,  1301,  1304,  1307,  1309,  1311,  1315,  1320,\n+  1325,  1331,  1341,  1347,  1349,  1351,  1358,  1361,  1363,  1365,\n+  1369,  1371,  1374,  1378,  1380,  1383,  1390,  1396,  1398,  1400,\n+  1404,  1412,  1415,  1417,  1419,  1423,  1428,  1437,  1442,  1445,\n+  1452,  1454,  1456,  1460,  1463,  1472,  1479,  1481,  1485,  1498,\n+  1500,  1506,  1512,  1516,  1518,  1522,  1525,  1527,  1531,  1534,\n+  1536,  1538,  1542,  1545,  1547,  1549,  1553,  1556,  1558,  1560,\n+  1564,  1570,  1572,  1576,  1583,  1585,  1587,  1589,  1593,  1601,\n+  1604,  1606,  1608,  1612,  1614,  1621,  1629,  1646,  1648,  1650,\n+  1654,  1660,  1665,  1667,  1670,  1672,  1674,  1676,  1677,  1678,\n+  1679,  1683,  1685,  1687,  1692,  1694,  1696,  1698,  1700,  1704,\n+  1707,  1712,  1714,  1719,  1720,  1721,  1722,  1723,  1725,  1727,\n+  1729,  1731,  1733,  1737,  1739,  1742,  1748,  1753,  1757,  1760,\n+  1762,  1764,  1768,  1770,  1772,  1774,  1778,  1781,  1785,  1791,\n+  1793,  1801,  1804,  1806,  1810,  1815,  1823,  1827,  1830,  1832,\n+  1843,  1854,  1859,  1868,  1870,  1874,  1877,  1879,  1884,  1889,\n+  1894,  1901,  1903,  1904,  1905,  1908,  1913,  1918,  1920,  1921,\n+  1923,  1925,  1926,  1928,  1932,  1935,  1939,  1942,  1946,  1948,\n+  1950,  1952,  1953,  1955,  1959,  1967,  1969,  1971,  1983,  1985,\n+  1991,  1993,  1995,  1999,  2001,  2006,  2011,  2016,  2018,  2020,\n+  2024,  2026,  2031,  2036,  2038,  2042,  2044,  2049,  2054,  2059,\n+  2061,  2063,  2067,  2069,  2074,  2079,  2084,  2089,  2091,  2093,\n+  2095,  2097,  2099,  2103,  2105,  2110,  2115,  2117,  2121,  2123,\n+  2128,  2132,  2134,  2139,  2143,  2145,  2150,  2154,  2156,  2161,\n+  2165,  2167,  2172,  2176,  2178,  2183,  2189,  2191,  2195,  2197,\n+  2200,  2203,  2211,  2213,  2214,  2217,  2219,  2222,  2226\n };\n #endif\n \n@@ -2753,66 +2745,66 @@ yyparse(YYPARSE_PARAM_ARG)\n   switch (yyn) {\n \n case 1:\n-#line 446 \"./parse.y\"\n+#line 438 \"./parse.y\"\n {;\n     break;}\n case 18:\n-#line 490 \"./parse.y\"\n+#line 482 \"./parse.y\"\n { \n \t\t  yyval.node = build_java_array_type (yyvsp[-2].node, -1);\n \t\t  CLASS_LOADED_P (yyval.node) = 1;\n \t\t;\n     break;}\n case 19:\n-#line 495 \"./parse.y\"\n+#line 487 \"./parse.y\"\n { yyval.node = build_unresolved_array_type (yyvsp[-2].node); ;\n     break;}\n case 20:\n-#line 497 \"./parse.y\"\n+#line 489 \"./parse.y\"\n { yyval.node = build_unresolved_array_type (yyvsp[-2].node); ;\n     break;}\n case 21:\n-#line 499 \"./parse.y\"\n+#line 491 \"./parse.y\"\n {RULE (\"']' expected\"); RECOVER;;\n     break;}\n case 22:\n-#line 501 \"./parse.y\"\n+#line 493 \"./parse.y\"\n {RULE (\"']' expected\"); RECOVER;;\n     break;}\n case 26:\n-#line 516 \"./parse.y\"\n+#line 508 \"./parse.y\"\n { yyval.node = make_qualified_name (yyvsp[-2].node, yyvsp[0].node, yyvsp[-1].operator.location); ;\n     break;}\n case 28:\n-#line 525 \"./parse.y\"\n+#line 517 \"./parse.y\"\n {yyval.node = NULL;;\n     break;}\n case 36:\n-#line 537 \"./parse.y\"\n+#line 529 \"./parse.y\"\n {\n \t\t  yyval.node = NULL;\n \t\t;\n     break;}\n case 37:\n-#line 541 \"./parse.y\"\n+#line 533 \"./parse.y\"\n {\n \t\t  yyval.node = NULL;\n \t\t;\n     break;}\n case 40:\n-#line 553 \"./parse.y\"\n+#line 545 \"./parse.y\"\n { ctxp->package = EXPR_WFL_NODE (yyvsp[-1].node); ;\n     break;}\n case 41:\n-#line 555 \"./parse.y\"\n+#line 547 \"./parse.y\"\n {yyerror (\"Missing name\"); RECOVER;;\n     break;}\n case 42:\n-#line 557 \"./parse.y\"\n+#line 549 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 45:\n-#line 567 \"./parse.y\"\n+#line 559 \"./parse.y\"\n {\n \t\t  tree name = EXPR_WFL_NODE (yyvsp[-1].node), node, last_name;\n \t\t  int   i = IDENTIFIER_LENGTH (name)-1;\n@@ -2840,15 +2832,15 @@ case 45:\n \t\t;\n     break;}\n case 46:\n-#line 593 \"./parse.y\"\n+#line 585 \"./parse.y\"\n {yyerror (\"Missing name\"); RECOVER;;\n     break;}\n case 47:\n-#line 595 \"./parse.y\"\n+#line 587 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 48:\n-#line 600 \"./parse.y\"\n+#line 592 \"./parse.y\"\n {\n \t\t  tree name = EXPR_WFL_NODE (yyvsp[-3].node);\n \t\t  tree node = build_tree_list (yyvsp[-3].node, NULL_TREE);\n@@ -2858,40 +2850,40 @@ case 48:\n \t\t;\n     break;}\n case 49:\n-#line 608 \"./parse.y\"\n+#line 600 \"./parse.y\"\n {yyerror (\"'*' expected\"); RECOVER;;\n     break;}\n case 50:\n-#line 610 \"./parse.y\"\n+#line 602 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 51:\n-#line 615 \"./parse.y\"\n+#line 607 \"./parse.y\"\n {\n \t\t  maybe_generate_finit ();\n \t\t  maybe_generate_clinit ();\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 53:\n-#line 622 \"./parse.y\"\n+#line 614 \"./parse.y\"\n { yyval.node = NULL; ;\n     break;}\n case 54:\n-#line 624 \"./parse.y\"\n+#line 616 \"./parse.y\"\n {\n \t\t  YYERROR_NOW;\n \t\t  yyerror (\"Class or interface declaration expected\");\n \t\t;\n     break;}\n case 55:\n-#line 635 \"./parse.y\"\n+#line 627 \"./parse.y\"\n {\n \t\t  yyval.value = (1 << yyvsp[0].value);\n \t\t;\n     break;}\n case 56:\n-#line 639 \"./parse.y\"\n+#line 631 \"./parse.y\"\n {\n \t\t  int acc = (1 << yyvsp[0].value);\n \t\t  if (yyval.value & acc)\n@@ -2905,116 +2897,116 @@ case 56:\n \t\t;\n     break;}\n case 57:\n-#line 655 \"./parse.y\"\n+#line 647 \"./parse.y\"\n { create_class (yyvsp[-4].value, yyvsp[-2].node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 58:\n-#line 657 \"./parse.y\"\n+#line 649 \"./parse.y\"\n { \n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 59:\n-#line 661 \"./parse.y\"\n+#line 653 \"./parse.y\"\n { create_class (0, yyvsp[-2].node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 60:\n-#line 663 \"./parse.y\"\n+#line 655 \"./parse.y\"\n { \t\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 61:\n-#line 667 \"./parse.y\"\n+#line 659 \"./parse.y\"\n {yyerror (\"Missing class name\"); RECOVER;;\n     break;}\n case 62:\n-#line 669 \"./parse.y\"\n+#line 661 \"./parse.y\"\n {yyerror (\"Missing class name\"); RECOVER;;\n     break;}\n case 63:\n-#line 671 \"./parse.y\"\n+#line 663 \"./parse.y\"\n {if (!ctxp->class_err) yyerror (\"'{' expected\"); DRECOVER(class1);;\n     break;}\n case 64:\n-#line 673 \"./parse.y\"\n+#line 665 \"./parse.y\"\n {if (!ctxp->class_err) yyerror (\"'{' expected\"); RECOVER;;\n     break;}\n case 65:\n-#line 677 \"./parse.y\"\n+#line 669 \"./parse.y\"\n { yyval.node = NULL; ;\n     break;}\n case 66:\n-#line 679 \"./parse.y\"\n+#line 671 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 67:\n-#line 681 \"./parse.y\"\n+#line 673 \"./parse.y\"\n {yyerror (\"'{' expected\"); ctxp->class_err=1;;\n     break;}\n case 68:\n-#line 683 \"./parse.y\"\n+#line 675 \"./parse.y\"\n {yyerror (\"Missing super class name\"); ctxp->class_err=1;;\n     break;}\n case 69:\n-#line 687 \"./parse.y\"\n+#line 679 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 70:\n-#line 689 \"./parse.y\"\n+#line 681 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 71:\n-#line 691 \"./parse.y\"\n+#line 683 \"./parse.y\"\n {\n \t\t  ctxp->class_err=1;\n \t\t  yyerror (\"Missing interface name\"); \n \t\t;\n     break;}\n case 72:\n-#line 699 \"./parse.y\"\n+#line 691 \"./parse.y\"\n { \n \t\t  ctxp->interface_number = 1;\n \t\t  yyval.node = build_tree_list (yyvsp[0].node, NULL_TREE);\n \t\t;\n     break;}\n case 73:\n-#line 704 \"./parse.y\"\n+#line 696 \"./parse.y\"\n { \n \t\t  ctxp->interface_number++;\n \t\t  yyval.node = chainon (yyvsp[-2].node, build_tree_list (yyvsp[0].node, NULL_TREE));\n \t\t;\n     break;}\n case 74:\n-#line 709 \"./parse.y\"\n+#line 701 \"./parse.y\"\n {yyerror (\"Missing interface name\"); RECOVER;;\n     break;}\n case 75:\n-#line 714 \"./parse.y\"\n+#line 706 \"./parse.y\"\n { yyval.node = ctxp->current_parsed_class; ;\n     break;}\n case 76:\n-#line 716 \"./parse.y\"\n+#line 708 \"./parse.y\"\n { yyval.node = ctxp->current_parsed_class; ;\n     break;}\n case 82:\n-#line 729 \"./parse.y\"\n+#line 721 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"instance initializer\"); ;\n     break;}\n case 85:\n-#line 736 \"./parse.y\"\n+#line 728 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"inner classe declaration\"); ;\n     break;}\n case 86:\n-#line 738 \"./parse.y\"\n+#line 730 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"inner interface declaration\"); ;\n     break;}\n case 87:\n-#line 744 \"./parse.y\"\n+#line 736 \"./parse.y\"\n { register_fields (0, yyvsp[-2].node, yyvsp[-1].node); ;\n     break;}\n case 88:\n-#line 746 \"./parse.y\"\n+#line 738 \"./parse.y\"\n {\n \t\t  check_modifiers \n \t\t    (\"Illegal modifier `%s' for field declaration\",\n@@ -3024,19 +3016,19 @@ case 88:\n \t\t;\n     break;}\n case 90:\n-#line 759 \"./parse.y\"\n+#line 751 \"./parse.y\"\n { yyval.node = chainon (yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 91:\n-#line 761 \"./parse.y\"\n+#line 753 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 92:\n-#line 766 \"./parse.y\"\n+#line 758 \"./parse.y\"\n { yyval.node = build_tree_list (yyvsp[0].node, NULL_TREE); ;\n     break;}\n case 93:\n-#line 768 \"./parse.y\"\n+#line 760 \"./parse.y\"\n { \n \t\t  if (java_error_count)\n \t\t    yyvsp[0].node = NULL_TREE;\n@@ -3045,101 +3037,101 @@ case 93:\n \t\t;\n     break;}\n case 94:\n-#line 775 \"./parse.y\"\n+#line 767 \"./parse.y\"\n {\n \t\t  yyerror (\"Missing variable initializer\");\n \t\t  yyval.node = build_tree_list (yyvsp[-2].node, NULL_TREE);\n \t\t  RECOVER;\n \t\t;\n     break;}\n case 95:\n-#line 781 \"./parse.y\"\n+#line 773 \"./parse.y\"\n {\n \t\t  yyerror (\"';' expected\");\n \t\t  yyval.node = build_tree_list (yyvsp[-3].node, NULL_TREE);\n \t\t  RECOVER;\n \t\t;\n     break;}\n case 97:\n-#line 791 \"./parse.y\"\n+#line 783 \"./parse.y\"\n { yyval.node = build_unresolved_array_type (yyvsp[-2].node); ;\n     break;}\n case 98:\n-#line 793 \"./parse.y\"\n+#line 785 \"./parse.y\"\n {yyerror (\"Invalid declaration\"); DRECOVER(vdi);;\n     break;}\n case 99:\n-#line 795 \"./parse.y\"\n+#line 787 \"./parse.y\"\n {yyerror (\"']' expected\"); DRECOVER(vdi);;\n     break;}\n case 100:\n-#line 797 \"./parse.y\"\n+#line 789 \"./parse.y\"\n {yyerror (\"Unbalanced ']'\"); DRECOVER(vdi);;\n     break;}\n case 103:\n-#line 808 \"./parse.y\"\n+#line 800 \"./parse.y\"\n {\n \t\t  current_function_decl = yyvsp[0].node;\n \t\t  source_start_java_method (current_function_decl);\n \t\t;\n     break;}\n case 104:\n-#line 813 \"./parse.y\"\n+#line 805 \"./parse.y\"\n { complete_method_declaration (yyvsp[0].node); ;\n     break;}\n case 105:\n-#line 815 \"./parse.y\"\n+#line 807 \"./parse.y\"\n {YYNOT_TWICE yyerror (\"'{' expected\"); RECOVER;;\n     break;}\n case 106:\n-#line 820 \"./parse.y\"\n+#line 812 \"./parse.y\"\n { yyval.node = method_header (0, yyvsp[-2].node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 107:\n-#line 822 \"./parse.y\"\n+#line 814 \"./parse.y\"\n { yyval.node = method_header (0, void_type_node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 108:\n-#line 824 \"./parse.y\"\n+#line 816 \"./parse.y\"\n { yyval.node = method_header (yyvsp[-3].value, yyvsp[-2].node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 109:\n-#line 826 \"./parse.y\"\n+#line 818 \"./parse.y\"\n { yyval.node = method_header (yyvsp[-3].value, void_type_node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 110:\n-#line 828 \"./parse.y\"\n+#line 820 \"./parse.y\"\n {RECOVER;;\n     break;}\n case 111:\n-#line 830 \"./parse.y\"\n+#line 822 \"./parse.y\"\n {RECOVER;;\n     break;}\n case 112:\n-#line 832 \"./parse.y\"\n+#line 824 \"./parse.y\"\n {yyerror (\"Identifier expected\"); RECOVER;;\n     break;}\n case 113:\n-#line 834 \"./parse.y\"\n+#line 826 \"./parse.y\"\n {yyerror (\"Identifier expected\"); RECOVER;;\n     break;}\n case 114:\n-#line 836 \"./parse.y\"\n+#line 828 \"./parse.y\"\n {\n \t\t  yyerror (\"Invalid method declaration, return type required\");\n \t\t  RECOVER;\n \t\t;\n     break;}\n case 115:\n-#line 844 \"./parse.y\"\n+#line 836 \"./parse.y\"\n { yyval.node = method_declarator (yyvsp[-2].node, NULL_TREE); ;\n     break;}\n case 116:\n-#line 846 \"./parse.y\"\n+#line 838 \"./parse.y\"\n { yyval.node = method_declarator (yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 117:\n-#line 848 \"./parse.y\"\n+#line 840 \"./parse.y\"\n {\n \t\t  EXPR_WFL_LINECOL (wfl_operator) = yyvsp[-1].operator.location;\n \t\t  TREE_PURPOSE (yyvsp[-2].node) = \n@@ -3150,169 +3142,169 @@ case 117:\n \t\t;\n     break;}\n case 118:\n-#line 857 \"./parse.y\"\n+#line 849 \"./parse.y\"\n {yyerror (\"')' expected\"); DRECOVER(method_declarator);;\n     break;}\n case 119:\n-#line 859 \"./parse.y\"\n+#line 851 \"./parse.y\"\n {yyerror (\"']' expected\"); RECOVER;;\n     break;}\n case 120:\n-#line 864 \"./parse.y\"\n+#line 856 \"./parse.y\"\n {\n \t\t  ctxp->formal_parameter_number = 1;\n \t\t;\n     break;}\n case 121:\n-#line 868 \"./parse.y\"\n+#line 860 \"./parse.y\"\n {\n \t\t  ctxp->formal_parameter_number += 1;\n \t\t  yyval.node = chainon (yyvsp[-2].node, yyvsp[0].node);\n \t\t;\n     break;}\n case 122:\n-#line 873 \"./parse.y\"\n+#line 865 \"./parse.y\"\n {yyerror (\"Missing formal parameter term\"); RECOVER;;\n     break;}\n case 123:\n-#line 878 \"./parse.y\"\n+#line 870 \"./parse.y\"\n {\n \t\t  yyval.node = build_tree_list (yyvsp[0].node, yyvsp[-1].node);\n \t\t;\n     break;}\n case 124:\n-#line 882 \"./parse.y\"\n+#line 874 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"final parameters\"); ;\n     break;}\n case 125:\n-#line 884 \"./parse.y\"\n+#line 876 \"./parse.y\"\n {yyerror (\"Missing identifier\"); RECOVER;;\n     break;}\n case 126:\n-#line 886 \"./parse.y\"\n+#line 878 \"./parse.y\"\n {\n \t\t  SOURCE_FRONTEND_DEBUG ((\"Modifiers: %d\", yyvsp[-2].value));\n \t\t  yyerror (\"Missing identifier\"); RECOVER;\n \t\t;\n     break;}\n case 127:\n-#line 893 \"./parse.y\"\n+#line 885 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 128:\n-#line 895 \"./parse.y\"\n+#line 887 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 129:\n-#line 897 \"./parse.y\"\n+#line 889 \"./parse.y\"\n {yyerror (\"Missing class type term\"); RECOVER;;\n     break;}\n case 130:\n-#line 902 \"./parse.y\"\n+#line 894 \"./parse.y\"\n { yyval.node = build_tree_list (yyvsp[0].node, yyvsp[0].node); ;\n     break;}\n case 131:\n-#line 904 \"./parse.y\"\n+#line 896 \"./parse.y\"\n { yyval.node = tree_cons (yyvsp[0].node, yyvsp[0].node, yyvsp[-2].node); ;\n     break;}\n case 132:\n-#line 906 \"./parse.y\"\n+#line 898 \"./parse.y\"\n {yyerror (\"Missing class type term\"); RECOVER;;\n     break;}\n case 135:\n-#line 913 \"./parse.y\"\n+#line 905 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 136:\n-#line 919 \"./parse.y\"\n+#line 911 \"./parse.y\"\n {\n \t\t  RULE (\"STATIC_INITIALIZER\");\n \t\t;\n     break;}\n case 137:\n-#line 923 \"./parse.y\"\n+#line 915 \"./parse.y\"\n {\n \t\t  RULE (\"STATIC_INITIALIZER\");\n \t\t;\n     break;}\n case 138:\n-#line 930 \"./parse.y\"\n+#line 922 \"./parse.y\"\n {\n \t\t  SOURCE_FRONTEND_DEBUG ((\"Modifiers: %d\", yyvsp[0].value));\n \t\t;\n     break;}\n case 139:\n-#line 938 \"./parse.y\"\n+#line 930 \"./parse.y\"\n {\n \t\t  current_function_decl = yyvsp[0].node;\n \t\t  source_start_java_method (current_function_decl);\n \t\t;\n     break;}\n case 140:\n-#line 943 \"./parse.y\"\n+#line 935 \"./parse.y\"\n { complete_method_declaration (yyvsp[0].node); ;\n     break;}\n case 141:\n-#line 948 \"./parse.y\"\n+#line 940 \"./parse.y\"\n { yyval.node = method_header (0, NULL_TREE, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 142:\n-#line 950 \"./parse.y\"\n+#line 942 \"./parse.y\"\n { yyval.node = method_header (yyvsp[-2].value, NULL_TREE, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 143:\n-#line 955 \"./parse.y\"\n+#line 947 \"./parse.y\"\n { yyval.node = method_declarator (yyvsp[-2].node, NULL_TREE); ;\n     break;}\n case 144:\n-#line 957 \"./parse.y\"\n+#line 949 \"./parse.y\"\n { yyval.node = method_declarator (yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 145:\n-#line 965 \"./parse.y\"\n+#line 957 \"./parse.y\"\n { \n \t\t  BLOCK_EXPR_BODY (yyvsp[0].node) = empty_stmt_node;\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 146:\n-#line 970 \"./parse.y\"\n+#line 962 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 147:\n-#line 972 \"./parse.y\"\n+#line 964 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 148:\n-#line 974 \"./parse.y\"\n+#line 966 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 149:\n-#line 980 \"./parse.y\"\n+#line 972 \"./parse.y\"\n { \n \t\t  yyval.node = build_method_invocation (yyvsp[-3].node, NULL_TREE); \n \t\t  yyval.node = build_debugable_stmt (EXPR_WFL_LINECOL (yyvsp[-3].node), yyval.node);\n \t\t  yyval.node = java_method_add_stmt (current_function_decl, yyval.node);\n \t\t;\n     break;}\n case 150:\n-#line 986 \"./parse.y\"\n+#line 978 \"./parse.y\"\n { \n \t\t  yyval.node = build_method_invocation (yyvsp[-4].node, yyvsp[-2].node); \n \t\t  yyval.node = build_debugable_stmt (EXPR_WFL_LINECOL (yyvsp[-4].node), yyval.node);\n \t\t  yyval.node = java_method_add_stmt (current_function_decl, yyval.node);\n \t\t;\n     break;}\n case 151:\n-#line 994 \"./parse.y\"\n+#line 986 \"./parse.y\"\n {yyval.node = parse_jdk1_1_error (\"explicit constructor invocation\"); ;\n     break;}\n case 152:\n-#line 996 \"./parse.y\"\n+#line 988 \"./parse.y\"\n {yyval.node = parse_jdk1_1_error (\"explicit constructor invocation\"); ;\n     break;}\n case 153:\n-#line 1001 \"./parse.y\"\n+#line 993 \"./parse.y\"\n {\n \t\t  tree wfl = build_wfl_node (this_identifier_node, \n \t\t\t\t\t     input_filename, 0, 0);\n@@ -3321,7 +3313,7 @@ case 153:\n \t\t;\n     break;}\n case 154:\n-#line 1008 \"./parse.y\"\n+#line 1000 \"./parse.y\"\n {\n \t\t  tree wfl = build_wfl_node (super_identifier_node,\n \t\t\t\t\t     input_filename, 0, 0);\n@@ -3330,168 +3322,168 @@ case 154:\n \t\t;\n     break;}\n case 155:\n-#line 1020 \"./parse.y\"\n+#line 1012 \"./parse.y\"\n { create_interface (0, yyvsp[0].node, NULL_TREE); ;\n     break;}\n case 156:\n-#line 1022 \"./parse.y\"\n+#line 1014 \"./parse.y\"\n {\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 157:\n-#line 1026 \"./parse.y\"\n+#line 1018 \"./parse.y\"\n { create_interface (yyvsp[-2].value, yyvsp[0].node, NULL_TREE); ;\n     break;}\n case 158:\n-#line 1028 \"./parse.y\"\n+#line 1020 \"./parse.y\"\n {\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 159:\n-#line 1032 \"./parse.y\"\n+#line 1024 \"./parse.y\"\n { create_interface (0, yyvsp[-1].node, yyvsp[0].node);\t;\n     break;}\n case 160:\n-#line 1034 \"./parse.y\"\n+#line 1026 \"./parse.y\"\n {\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 161:\n-#line 1038 \"./parse.y\"\n+#line 1030 \"./parse.y\"\n { create_interface (yyvsp[-3].value, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 162:\n-#line 1040 \"./parse.y\"\n+#line 1032 \"./parse.y\"\n {\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 163:\n-#line 1044 \"./parse.y\"\n+#line 1036 \"./parse.y\"\n {yyerror (\"(here)'{' expected\"); RECOVER;;\n     break;}\n case 164:\n-#line 1046 \"./parse.y\"\n+#line 1038 \"./parse.y\"\n {yyerror (\"(there)'{' expected\"); RECOVER;;\n     break;}\n case 165:\n-#line 1051 \"./parse.y\"\n+#line 1043 \"./parse.y\"\n { \n \t\t  ctxp->interface_number = 1;\n \t\t  yyval.node = build_tree_list (yyvsp[0].node, NULL_TREE);\n \t\t;\n     break;}\n case 166:\n-#line 1056 \"./parse.y\"\n+#line 1048 \"./parse.y\"\n { \n \t\t  ctxp->interface_number++;\n \t\t  yyval.node = chainon (yyvsp[-2].node, build_tree_list (yyvsp[0].node, NULL_TREE));\n \t\t;\n     break;}\n case 167:\n-#line 1061 \"./parse.y\"\n+#line 1053 \"./parse.y\"\n {yyerror (\"Invalid interface type\"); RECOVER;;\n     break;}\n case 168:\n-#line 1063 \"./parse.y\"\n+#line 1055 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 169:\n-#line 1068 \"./parse.y\"\n+#line 1060 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 170:\n-#line 1070 \"./parse.y\"\n+#line 1062 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 175:\n-#line 1082 \"./parse.y\"\n+#line 1074 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"inner class declaration\"); ;\n     break;}\n case 176:\n-#line 1084 \"./parse.y\"\n+#line 1076 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"inner interface declaration\"); ;\n     break;}\n case 178:\n-#line 1093 \"./parse.y\"\n+#line 1085 \"./parse.y\"\n { \n \t\t  check_abstract_method_header (yyvsp[-1].node);\n \t\t  current_function_decl = NULL_TREE; /* FIXME ? */\n \t\t;\n     break;}\n case 179:\n-#line 1098 \"./parse.y\"\n+#line 1090 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 180:\n-#line 1104 \"./parse.y\"\n+#line 1096 \"./parse.y\"\n { yyval.node = build_new_array_init (yyvsp[-1].operator.location, NULL_TREE); ;\n     break;}\n case 181:\n-#line 1106 \"./parse.y\"\n+#line 1098 \"./parse.y\"\n { yyval.node = build_new_array_init (yyvsp[-2].operator.location, yyvsp[-1].node); ;\n     break;}\n case 182:\n-#line 1108 \"./parse.y\"\n+#line 1100 \"./parse.y\"\n { yyval.node = build_new_array_init (yyvsp[-3].operator.location, yyvsp[-2].node); ;\n     break;}\n case 183:\n-#line 1113 \"./parse.y\"\n+#line 1105 \"./parse.y\"\n { \n \t\t  yyval.node = tree_cons (maybe_build_array_element_wfl (yyvsp[0].node), \n \t\t\t\t  yyvsp[0].node, NULL_TREE);\n \t\t;\n     break;}\n case 184:\n-#line 1118 \"./parse.y\"\n+#line 1110 \"./parse.y\"\n {\n \t\t  yyval.node = tree_cons (maybe_build_array_element_wfl (yyvsp[0].node), yyvsp[0].node, yyvsp[-2].node);\n \t\t;\n     break;}\n case 185:\n-#line 1122 \"./parse.y\"\n+#line 1114 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 186:\n-#line 1128 \"./parse.y\"\n+#line 1120 \"./parse.y\"\n { yyval.node = empty_stmt_node; ;\n     break;}\n case 187:\n-#line 1130 \"./parse.y\"\n+#line 1122 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 188:\n-#line 1135 \"./parse.y\"\n+#line 1127 \"./parse.y\"\n { enter_block (); ;\n     break;}\n case 189:\n-#line 1140 \"./parse.y\"\n+#line 1132 \"./parse.y\"\n { \n \t\t  maybe_absorb_scoping_blocks ();\n \t\t  yyval.node = exit_block ();\n \t\t;\n     break;}\n case 193:\n-#line 1154 \"./parse.y\"\n+#line 1146 \"./parse.y\"\n { java_method_add_stmt (current_function_decl, yyvsp[0].node); ;\n     break;}\n case 194:\n-#line 1156 \"./parse.y\"\n+#line 1148 \"./parse.y\"\n { parse_jdk1_1_error (\"inner class declaration\"); ;\n     break;}\n case 196:\n-#line 1165 \"./parse.y\"\n+#line 1157 \"./parse.y\"\n { declare_local_variables (0, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 197:\n-#line 1167 \"./parse.y\"\n+#line 1159 \"./parse.y\"\n { declare_local_variables (yyvsp[-2].value, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 203:\n-#line 1177 \"./parse.y\"\n+#line 1169 \"./parse.y\"\n { \n \t\t  /* If the for loop is unlabeled, we must return the\n \t\t     block it was defined it. It our last chance to\n@@ -3501,11 +3493,11 @@ case 203:\n \t\t;\n     break;}\n case 220:\n-#line 1210 \"./parse.y\"\n+#line 1202 \"./parse.y\"\n { yyval.node = empty_stmt_node; ;\n     break;}\n case 221:\n-#line 1215 \"./parse.y\"\n+#line 1207 \"./parse.y\"\n {\n \t\t  yyval.node = build_labeled_block (EXPR_WFL_LINECOL (yyvsp[-1].node), \n \t\t\t\t\t    EXPR_WFL_NODE (yyvsp[-1].node));\n@@ -3515,27 +3507,27 @@ case 221:\n \t\t;\n     break;}\n case 222:\n-#line 1226 \"./parse.y\"\n+#line 1218 \"./parse.y\"\n { \n \t\t  yyval.node = complete_labeled_statement (yyvsp[-1].node, yyvsp[0].node);\n \t\t  pop_labeled_block ();\n \t\t  POP_LABELED_BLOCK ();\n \t\t;\n     break;}\n case 223:\n-#line 1232 \"./parse.y\"\n+#line 1224 \"./parse.y\"\n {yyerror (\"':' expected\"); RECOVER;;\n     break;}\n case 224:\n-#line 1237 \"./parse.y\"\n+#line 1229 \"./parse.y\"\n { \n \t\t  yyval.node = complete_labeled_statement (yyvsp[-1].node, yyvsp[0].node);\n \t\t  pop_labeled_block ();\n \t\t  POP_LABELED_BLOCK ();\n \t\t;\n     break;}\n case 225:\n-#line 1248 \"./parse.y\"\n+#line 1240 \"./parse.y\"\n {\n \t\t  /* We have a statement. Generate a WFL around it so\n \t\t     we can debug it */\n@@ -3546,105 +3538,105 @@ case 225:\n \t\t;\n     break;}\n case 226:\n-#line 1257 \"./parse.y\"\n+#line 1249 \"./parse.y\"\n {\n \t\t  if (ctxp->prevent_ese != lineno)\n \t\t    yyerror (\"Invalid expression statement\");\n \t\t  DRECOVER (expr_stmt);\n \t\t;\n     break;}\n case 227:\n-#line 1263 \"./parse.y\"\n+#line 1255 \"./parse.y\"\n {\n \t\t  if (ctxp->prevent_ese != lineno)\n \t\t    yyerror (\"Invalid expression statement\");\n \t\t  DRECOVER (expr_stmt);\n \t\t;\n     break;}\n case 228:\n-#line 1269 \"./parse.y\"\n+#line 1261 \"./parse.y\"\n {\n \t\t  if (ctxp->prevent_ese != lineno)\n \t\t    yyerror (\"Invalid expression statement\");\n \t\t  DRECOVER (expr_stmt);\n \t\t;\n     break;}\n case 229:\n-#line 1275 \"./parse.y\"\n+#line 1267 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 230:\n-#line 1277 \"./parse.y\"\n+#line 1269 \"./parse.y\"\n {\n \t\t  yyerror (\"Constructor invocation must be first \"\n \t\t\t   \"thing in a constructor\"); \n \t\t  RECOVER;\n \t\t;\n     break;}\n case 231:\n-#line 1283 \"./parse.y\"\n+#line 1275 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 232:\n-#line 1285 \"./parse.y\"\n+#line 1277 \"./parse.y\"\n {\n \t\t  yyerror (\"Constructor invocation must be first \"\n \t\t\t   \"thing in a constructor\"); \n \t\t  RECOVER;\n \t\t;\n     break;}\n case 233:\n-#line 1291 \"./parse.y\"\n+#line 1283 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 234:\n-#line 1293 \"./parse.y\"\n+#line 1285 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 235:\n-#line 1295 \"./parse.y\"\n+#line 1287 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 236:\n-#line 1297 \"./parse.y\"\n+#line 1289 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 237:\n-#line 1299 \"./parse.y\"\n+#line 1291 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 245:\n-#line 1314 \"./parse.y\"\n+#line 1306 \"./parse.y\"\n { yyval.node = build_if_else_statement (yyvsp[-3].operator.location, yyvsp[-2].node, yyvsp[0].node, NULL_TREE); ;\n     break;}\n case 246:\n-#line 1316 \"./parse.y\"\n+#line 1308 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 247:\n-#line 1318 \"./parse.y\"\n+#line 1310 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 248:\n-#line 1320 \"./parse.y\"\n+#line 1312 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 249:\n-#line 1325 \"./parse.y\"\n+#line 1317 \"./parse.y\"\n { yyval.node = build_if_else_statement (yyvsp[-5].operator.location, yyvsp[-4].node, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 250:\n-#line 1330 \"./parse.y\"\n+#line 1322 \"./parse.y\"\n { yyval.node = build_if_else_statement (yyvsp[-5].operator.location, yyvsp[-4].node, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 251:\n-#line 1335 \"./parse.y\"\n+#line 1327 \"./parse.y\"\n {\n \t\t  enter_block ();\n \t\t;\n     break;}\n case 252:\n-#line 1339 \"./parse.y\"\n+#line 1331 \"./parse.y\"\n { \n \t\t  /* Make into \"proper list\" of COMPOUND_EXPRs.\n \t\t     I.e. make the last statment also have its own\n@@ -3655,112 +3647,112 @@ case 252:\n \t\t;\n     break;}\n case 253:\n-#line 1351 \"./parse.y\"\n+#line 1343 \"./parse.y\"\n { \n \t\t  yyval.node = build (SWITCH_EXPR, NULL_TREE, yyvsp[-1].node, NULL_TREE);\n \t\t  EXPR_WFL_LINECOL (yyval.node) = yyvsp[-2].operator.location;\n \t\t;\n     break;}\n case 254:\n-#line 1356 \"./parse.y\"\n+#line 1348 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 255:\n-#line 1358 \"./parse.y\"\n+#line 1350 \"./parse.y\"\n {yyerror (\"Missing term or ')'\"); DRECOVER(switch_statement);;\n     break;}\n case 256:\n-#line 1360 \"./parse.y\"\n+#line 1352 \"./parse.y\"\n {yyerror (\"'{' expected\"); RECOVER;;\n     break;}\n case 257:\n-#line 1368 \"./parse.y\"\n+#line 1360 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 258:\n-#line 1370 \"./parse.y\"\n+#line 1362 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 259:\n-#line 1372 \"./parse.y\"\n+#line 1364 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 260:\n-#line 1374 \"./parse.y\"\n+#line 1366 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 266:\n-#line 1393 \"./parse.y\"\n+#line 1385 \"./parse.y\"\n { \n \t\t  tree lab = build1 (CASE_EXPR, NULL_TREE, yyvsp[-1].node);\n \t\t  EXPR_WFL_LINECOL (lab) = yyvsp[-2].operator.location;\n \t\t  java_method_add_stmt (current_function_decl, lab);\n \t\t;\n     break;}\n case 267:\n-#line 1399 \"./parse.y\"\n+#line 1391 \"./parse.y\"\n { \n \t\t  tree lab = build1 (DEFAULT_EXPR, NULL_TREE, NULL_TREE);\n \t\t  EXPR_WFL_LINECOL (lab) = yyvsp[-1].operator.location;\n \t\t  java_method_add_stmt (current_function_decl, lab);\n \t\t;\n     break;}\n case 268:\n-#line 1405 \"./parse.y\"\n+#line 1397 \"./parse.y\"\n {yyerror (\"Missing or invalid constant expression\"); RECOVER;;\n     break;}\n case 269:\n-#line 1407 \"./parse.y\"\n+#line 1399 \"./parse.y\"\n {yyerror (\"':' expected\"); RECOVER;;\n     break;}\n case 270:\n-#line 1409 \"./parse.y\"\n+#line 1401 \"./parse.y\"\n {yyerror (\"':' expected\"); RECOVER;;\n     break;}\n case 271:\n-#line 1414 \"./parse.y\"\n+#line 1406 \"./parse.y\"\n { \n \t\t  tree body = build_loop_body (yyvsp[-2].operator.location, yyvsp[-1].node, 0);\n \t\t  yyval.node = build_new_loop (body);\n \t\t;\n     break;}\n case 272:\n-#line 1422 \"./parse.y\"\n+#line 1414 \"./parse.y\"\n { yyval.node = complete_loop_body (0, NULL_TREE, yyvsp[0].node, 0); ;\n     break;}\n case 273:\n-#line 1424 \"./parse.y\"\n+#line 1416 \"./parse.y\"\n {YYERROR_NOW; yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 274:\n-#line 1426 \"./parse.y\"\n+#line 1418 \"./parse.y\"\n {yyerror (\"Missing term and ')' expected\"); RECOVER;;\n     break;}\n case 275:\n-#line 1428 \"./parse.y\"\n+#line 1420 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 276:\n-#line 1433 \"./parse.y\"\n+#line 1425 \"./parse.y\"\n { yyval.node = complete_loop_body (0, NULL_TREE, yyvsp[0].node, 0); ;\n     break;}\n case 277:\n-#line 1438 \"./parse.y\"\n+#line 1430 \"./parse.y\"\n { \n \t\t  tree body = build_loop_body (0, NULL_TREE, 1);\n \t\t  yyval.node = build_new_loop (body);\n \t\t;\n     break;}\n case 278:\n-#line 1447 \"./parse.y\"\n+#line 1439 \"./parse.y\"\n { yyval.node = complete_loop_body (yyvsp[-3].operator.location, yyvsp[-2].node, yyvsp[-5].node, 1); ;\n     break;}\n case 279:\n-#line 1452 \"./parse.y\"\n+#line 1444 \"./parse.y\"\n { yyval.node = complete_for_loop (EXPR_WFL_LINECOL (yyvsp[-4].node), yyvsp[-4].node, yyvsp[-2].node, yyvsp[0].node);;\n     break;}\n case 280:\n-#line 1454 \"./parse.y\"\n+#line 1446 \"./parse.y\"\n { \n \t\t  yyval.node = complete_for_loop (0, NULL_TREE, yyvsp[-2].node, yyvsp[0].node);\n \t\t  /* We have not condition, so we get rid of the EXIT_EXPR */\n@@ -3769,23 +3761,23 @@ case 280:\n \t\t;\n     break;}\n case 281:\n-#line 1461 \"./parse.y\"\n+#line 1453 \"./parse.y\"\n {yyerror (\"Invalid control expression\"); RECOVER;;\n     break;}\n case 282:\n-#line 1463 \"./parse.y\"\n+#line 1455 \"./parse.y\"\n {yyerror (\"Invalid update expression\"); RECOVER;;\n     break;}\n case 283:\n-#line 1465 \"./parse.y\"\n+#line 1457 \"./parse.y\"\n {yyerror (\"Invalid update expression\"); RECOVER;;\n     break;}\n case 284:\n-#line 1470 \"./parse.y\"\n+#line 1462 \"./parse.y\"\n { yyval.node = complete_for_loop (EXPR_WFL_LINECOL (yyvsp[-4].node), yyvsp[-4].node, yyvsp[-2].node, yyvsp[0].node);;\n     break;}\n case 285:\n-#line 1472 \"./parse.y\"\n+#line 1464 \"./parse.y\"\n { \n \t\t  yyval.node = complete_for_loop (0, NULL_TREE, yyvsp[-2].node, yyvsp[0].node);\n \t\t  /* We have not condition, so we get rid of the EXIT_EXPR */\n@@ -3794,23 +3786,23 @@ case 285:\n \t\t;\n     break;}\n case 286:\n-#line 1482 \"./parse.y\"\n+#line 1474 \"./parse.y\"\n { \n \t\t  /* This scope defined for local variable that may be\n                      defined within the scope of the for loop */\n \t\t  enter_block (); \n \t\t;\n     break;}\n case 287:\n-#line 1488 \"./parse.y\"\n+#line 1480 \"./parse.y\"\n {yyerror (\"'(' expected\"); DRECOVER(for_1);;\n     break;}\n case 288:\n-#line 1490 \"./parse.y\"\n+#line 1482 \"./parse.y\"\n {yyerror (\"Invalid init statement\"); RECOVER;;\n     break;}\n case 289:\n-#line 1495 \"./parse.y\"\n+#line 1487 \"./parse.y\"\n { \n \t\t  /* We now declare the loop body. The loop is\n                      declared as a for loop. */\n@@ -3823,176 +3815,176 @@ case 289:\n \t\t;\n     break;}\n case 290:\n-#line 1507 \"./parse.y\"\n+#line 1499 \"./parse.y\"\n { yyval.node = empty_stmt_node; ;\n     break;}\n case 291:\n-#line 1509 \"./parse.y\"\n+#line 1501 \"./parse.y\"\n { \n \t\t  /* Init statement recorded within the previously\n                      defined block scope */\n \t\t  yyval.node = java_method_add_stmt (current_function_decl, yyvsp[0].node);\n \t\t;\n     break;}\n case 292:\n-#line 1515 \"./parse.y\"\n+#line 1507 \"./parse.y\"\n { \n \t\t  /* Local variable are recorded within the previously\n \t\t     defined block scope */\n \t\t  yyval.node = NULL_TREE;\n \t\t;\n     break;}\n case 293:\n-#line 1521 \"./parse.y\"\n+#line 1513 \"./parse.y\"\n {yyerror (\"';' expected\"); DRECOVER(for_init_1);;\n     break;}\n case 294:\n-#line 1525 \"./parse.y\"\n+#line 1517 \"./parse.y\"\n {yyval.node = empty_stmt_node;;\n     break;}\n case 295:\n-#line 1527 \"./parse.y\"\n+#line 1519 \"./parse.y\"\n { yyval.node = build_debugable_stmt (BUILD_LOCATION (), yyvsp[0].node); ;\n     break;}\n case 296:\n-#line 1532 \"./parse.y\"\n+#line 1524 \"./parse.y\"\n { yyval.node = add_stmt_to_compound (NULL_TREE, NULL_TREE, yyvsp[0].node); ;\n     break;}\n case 297:\n-#line 1534 \"./parse.y\"\n+#line 1526 \"./parse.y\"\n { yyval.node = add_stmt_to_compound (yyvsp[-2].node, NULL_TREE, yyvsp[0].node); ;\n     break;}\n case 298:\n-#line 1536 \"./parse.y\"\n+#line 1528 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 299:\n-#line 1541 \"./parse.y\"\n+#line 1533 \"./parse.y\"\n { yyval.node = build_bc_statement (yyvsp[-1].operator.location, 1, NULL_TREE); ;\n     break;}\n case 300:\n-#line 1543 \"./parse.y\"\n+#line 1535 \"./parse.y\"\n { yyval.node = build_bc_statement (yyvsp[-2].operator.location, 1, yyvsp[-1].node); ;\n     break;}\n case 301:\n-#line 1545 \"./parse.y\"\n+#line 1537 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 302:\n-#line 1547 \"./parse.y\"\n+#line 1539 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 303:\n-#line 1552 \"./parse.y\"\n+#line 1544 \"./parse.y\"\n { yyval.node = build_bc_statement (yyvsp[-1].operator.location, 0, NULL_TREE); ;\n     break;}\n case 304:\n-#line 1554 \"./parse.y\"\n+#line 1546 \"./parse.y\"\n { yyval.node = build_bc_statement (yyvsp[-2].operator.location, 0, yyvsp[-1].node); ;\n     break;}\n case 305:\n-#line 1556 \"./parse.y\"\n+#line 1548 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 306:\n-#line 1558 \"./parse.y\"\n+#line 1550 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 307:\n-#line 1563 \"./parse.y\"\n+#line 1555 \"./parse.y\"\n { yyval.node = build_return (yyvsp[-1].operator.location, NULL_TREE); ;\n     break;}\n case 308:\n-#line 1565 \"./parse.y\"\n+#line 1557 \"./parse.y\"\n { yyval.node = build_return (yyvsp[-2].operator.location, yyvsp[-1].node); ;\n     break;}\n case 309:\n-#line 1567 \"./parse.y\"\n+#line 1559 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 310:\n-#line 1569 \"./parse.y\"\n+#line 1561 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 311:\n-#line 1574 \"./parse.y\"\n+#line 1566 \"./parse.y\"\n { \n \t\t  yyval.node = build1 (THROW_EXPR, NULL_TREE, yyvsp[-1].node);\n \t\t  EXPR_WFL_LINECOL (yyval.node) = yyvsp[-2].operator.location;\n \t\t;\n     break;}\n case 312:\n-#line 1579 \"./parse.y\"\n+#line 1571 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 313:\n-#line 1581 \"./parse.y\"\n+#line 1573 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 314:\n-#line 1586 \"./parse.y\"\n+#line 1578 \"./parse.y\"\n { \n \t\t  yyval.node = build (SYNCHRONIZED_EXPR, NULL_TREE, yyvsp[-2].node, yyvsp[0].node);\n \t\t  EXPR_WFL_LINECOL (yyval.node) = \n \t\t    EXPR_WFL_LINECOL (MODIFIER_WFL (SYNCHRONIZED_TK));\n \t\t;\n     break;}\n case 315:\n-#line 1592 \"./parse.y\"\n+#line 1584 \"./parse.y\"\n {yyerror (\"'{' expected\"); RECOVER;;\n     break;}\n case 316:\n-#line 1594 \"./parse.y\"\n+#line 1586 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 317:\n-#line 1596 \"./parse.y\"\n+#line 1588 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 318:\n-#line 1598 \"./parse.y\"\n+#line 1590 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 319:\n-#line 1603 \"./parse.y\"\n+#line 1595 \"./parse.y\"\n {\n \t\t  if ((1 << yyvsp[0].value) != ACC_SYNCHRONIZED)\n \t\t    fatal (\"synchronized was '%d' - yyparse\", (1 << yyvsp[0].value));\n \t\t;\n     break;}\n case 320:\n-#line 1611 \"./parse.y\"\n+#line 1603 \"./parse.y\"\n { yyval.node = build_try_statement (yyvsp[-2].operator.location, yyvsp[-1].node, yyvsp[0].node, NULL_TREE); ;\n     break;}\n case 321:\n-#line 1613 \"./parse.y\"\n+#line 1605 \"./parse.y\"\n { yyval.node = build_try_statement (yyvsp[-2].operator.location, yyvsp[-1].node, NULL_TREE, yyvsp[0].node); ;\n     break;}\n case 322:\n-#line 1615 \"./parse.y\"\n+#line 1607 \"./parse.y\"\n { yyval.node = build_try_statement (yyvsp[-3].operator.location, yyvsp[-2].node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 323:\n-#line 1617 \"./parse.y\"\n+#line 1609 \"./parse.y\"\n {yyerror (\"'{' expected\"); DRECOVER (try_statement);;\n     break;}\n case 325:\n-#line 1623 \"./parse.y\"\n+#line 1615 \"./parse.y\"\n { \n \t\t  TREE_CHAIN (yyvsp[0].node) = yyvsp[-1].node;\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 326:\n-#line 1631 \"./parse.y\"\n+#line 1623 \"./parse.y\"\n { \n \t\t  java_method_add_stmt (current_function_decl, yyvsp[0].node);\n \t\t  exit_block ();\n \t\t  yyval.node = yyvsp[-1].node;\n \t\t;\n     break;}\n case 327:\n-#line 1639 \"./parse.y\"\n+#line 1631 \"./parse.y\"\n { \n \t\t  /* We add a block to define a scope for\n \t\t     formal_parameter (CCBP). The formal parameter is\n@@ -4010,203 +4002,203 @@ case 327:\n \t\t;\n     break;}\n case 328:\n-#line 1655 \"./parse.y\"\n+#line 1647 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 329:\n-#line 1657 \"./parse.y\"\n+#line 1649 \"./parse.y\"\n {yyerror (\"Missing term or ')' expected\"); DRECOVER (2);;\n     break;}\n case 330:\n-#line 1659 \"./parse.y\"\n+#line 1651 \"./parse.y\"\n {yyerror (\"')' expected\"); DRECOVER (1);;\n     break;}\n case 331:\n-#line 1664 \"./parse.y\"\n+#line 1656 \"./parse.y\"\n { \n \t\t  yyval.node = build (FINALLY_EXPR, NULL_TREE,\n \t\t\t      create_label_decl (generate_name ()), yyvsp[0].node);\n \t\t;\n     break;}\n case 332:\n-#line 1669 \"./parse.y\"\n+#line 1661 \"./parse.y\"\n {yyerror (\"'{' expected\"); RECOVER; ;\n     break;}\n case 336:\n-#line 1681 \"./parse.y\"\n+#line 1673 \"./parse.y\"\n { yyval.node = build_this (yyvsp[0].operator.location); ;\n     break;}\n case 337:\n-#line 1683 \"./parse.y\"\n+#line 1675 \"./parse.y\"\n {yyval.node = yyvsp[-1].node;;\n     break;}\n case 342:\n-#line 1692 \"./parse.y\"\n+#line 1684 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"named class literals\"); ;\n     break;}\n case 343:\n-#line 1694 \"./parse.y\"\n+#line 1686 \"./parse.y\"\n { yyval.node = build_class_ref (yyvsp[-2].node); ;\n     break;}\n case 344:\n-#line 1696 \"./parse.y\"\n+#line 1688 \"./parse.y\"\n { yyval.node = build_class_ref (void_type_node); ;\n     break;}\n case 345:\n-#line 1701 \"./parse.y\"\n+#line 1693 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"class literals\"); ;\n     break;}\n case 346:\n-#line 1703 \"./parse.y\"\n+#line 1695 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 347:\n-#line 1705 \"./parse.y\"\n+#line 1697 \"./parse.y\"\n {yyerror (\"'class' or 'this' expected\" ); RECOVER;;\n     break;}\n case 348:\n-#line 1707 \"./parse.y\"\n+#line 1699 \"./parse.y\"\n {yyerror (\"'class' expected\" ); RECOVER;;\n     break;}\n case 349:\n-#line 1709 \"./parse.y\"\n+#line 1701 \"./parse.y\"\n {yyerror (\"'class' expected\" ); RECOVER;;\n     break;}\n case 350:\n-#line 1714 \"./parse.y\"\n+#line 1706 \"./parse.y\"\n { yyval.node = build_new_invocation (yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 351:\n-#line 1716 \"./parse.y\"\n+#line 1708 \"./parse.y\"\n { yyval.node = build_new_invocation (yyvsp[-2].node, NULL_TREE); ;\n     break;}\n case 352:\n-#line 1721 \"./parse.y\"\n+#line 1713 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"inner class instance creation\"); ;\n     break;}\n case 353:\n-#line 1723 \"./parse.y\"\n+#line 1715 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"inner class instance creation\"); ;\n     break;}\n case 358:\n-#line 1732 \"./parse.y\"\n+#line 1724 \"./parse.y\"\n {yyerror (\"'(' expected\"); DRECOVER(new_1);;\n     break;}\n case 359:\n-#line 1734 \"./parse.y\"\n+#line 1726 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 360:\n-#line 1736 \"./parse.y\"\n+#line 1728 \"./parse.y\"\n {yyerror (\"')' or term expected\"); RECOVER;;\n     break;}\n case 361:\n-#line 1738 \"./parse.y\"\n+#line 1730 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 362:\n-#line 1740 \"./parse.y\"\n+#line 1732 \"./parse.y\"\n {YYERROR_NOW; yyerror (\"Identifier expected\"); RECOVER;;\n     break;}\n case 363:\n-#line 1742 \"./parse.y\"\n+#line 1734 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 366:\n-#line 1752 \"./parse.y\"\n+#line 1744 \"./parse.y\"\n { \n \t\t  yyval.node = tree_cons (NULL_TREE, yyvsp[0].node, NULL_TREE);\n \t\t  ctxp->formal_parameter_number = 1; \n \t\t;\n     break;}\n case 367:\n-#line 1757 \"./parse.y\"\n+#line 1749 \"./parse.y\"\n {\n \t\t  ctxp->formal_parameter_number += 1;\n \t\t  yyval.node = tree_cons (NULL_TREE, yyvsp[0].node, yyvsp[-2].node);\n \t\t;\n     break;}\n case 368:\n-#line 1762 \"./parse.y\"\n+#line 1754 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 369:\n-#line 1767 \"./parse.y\"\n+#line 1759 \"./parse.y\"\n { yyval.node = build_newarray_node (yyvsp[-1].node, yyvsp[0].node, 0); ;\n     break;}\n case 370:\n-#line 1769 \"./parse.y\"\n+#line 1761 \"./parse.y\"\n { yyval.node = build_newarray_node (yyvsp[-1].node, yyvsp[0].node, 0); ;\n     break;}\n case 371:\n-#line 1771 \"./parse.y\"\n+#line 1763 \"./parse.y\"\n { yyval.node = build_newarray_node (yyvsp[-2].node, yyvsp[-1].node, ctxp->osb_number); ;\n     break;}\n case 372:\n-#line 1773 \"./parse.y\"\n+#line 1765 \"./parse.y\"\n { yyval.node = build_newarray_node (yyvsp[-2].node, yyvsp[-1].node, ctxp->osb_number); ;\n     break;}\n case 373:\n-#line 1777 \"./parse.y\"\n+#line 1769 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"anonymous array\"); ;\n     break;}\n case 374:\n-#line 1779 \"./parse.y\"\n+#line 1771 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"anonymous array\"); ;\n     break;}\n case 375:\n-#line 1781 \"./parse.y\"\n+#line 1773 \"./parse.y\"\n {yyerror (\"'[' expected\"); DRECOVER (\"]\");;\n     break;}\n case 376:\n-#line 1783 \"./parse.y\"\n+#line 1775 \"./parse.y\"\n {yyerror (\"']' expected\"); RECOVER;;\n     break;}\n case 377:\n-#line 1788 \"./parse.y\"\n+#line 1780 \"./parse.y\"\n { yyval.node = build_tree_list (NULL_TREE, yyvsp[0].node); ;\n     break;}\n case 378:\n-#line 1790 \"./parse.y\"\n+#line 1782 \"./parse.y\"\n { yyval.node = tree_cons (NULL_TREE, yyvsp[0].node, yyval.node); ;\n     break;}\n case 379:\n-#line 1795 \"./parse.y\"\n+#line 1787 \"./parse.y\"\n { \n \t\t  EXPR_WFL_LINECOL (yyvsp[-1].node) = yyvsp[-2].operator.location;\n \t\t  yyval.node = yyvsp[-1].node;\n \t\t;\n     break;}\n case 380:\n-#line 1800 \"./parse.y\"\n+#line 1792 \"./parse.y\"\n {yyerror (\"']' expected\"); RECOVER;;\n     break;}\n case 381:\n-#line 1802 \"./parse.y\"\n+#line 1794 \"./parse.y\"\n {\n \t\t  yyerror (\"Missing term\");\n \t\t  yyerror (\"']' expected\");\n \t\t  RECOVER;\n \t\t;\n     break;}\n case 382:\n-#line 1811 \"./parse.y\"\n+#line 1803 \"./parse.y\"\n { ctxp->osb_number = 1; ;\n     break;}\n case 383:\n-#line 1813 \"./parse.y\"\n+#line 1805 \"./parse.y\"\n { ctxp->osb_number++; ;\n     break;}\n case 384:\n-#line 1815 \"./parse.y\"\n+#line 1807 \"./parse.y\"\n { yyerror (\"']' expected\"); RECOVER;;\n     break;}\n case 385:\n-#line 1820 \"./parse.y\"\n+#line 1812 \"./parse.y\"\n { yyval.node = make_qualified_primary (yyvsp[-2].node, yyvsp[0].node, yyvsp[-1].operator.location); ;\n     break;}\n case 386:\n-#line 1824 \"./parse.y\"\n+#line 1816 \"./parse.y\"\n {\n \t\t  tree super_wfl = \n \t\t    build_wfl_node (super_identifier_node, \n@@ -4216,19 +4208,19 @@ case 386:\n \t\t;\n     break;}\n case 387:\n-#line 1832 \"./parse.y\"\n+#line 1824 \"./parse.y\"\n {yyerror (\"Field expected\"); DRECOVER (super_field_acces);;\n     break;}\n case 388:\n-#line 1837 \"./parse.y\"\n+#line 1829 \"./parse.y\"\n { yyval.node = build_method_invocation (yyvsp[-2].node, NULL_TREE); ;\n     break;}\n case 389:\n-#line 1839 \"./parse.y\"\n+#line 1831 \"./parse.y\"\n { yyval.node = build_method_invocation (yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 390:\n-#line 1841 \"./parse.y\"\n+#line 1833 \"./parse.y\"\n { \n \t\t  if (TREE_CODE (yyvsp[-4].node) == THIS_EXPR)\n \t\t    yyval.node = build_this_super_qualified_invocation \n@@ -4241,7 +4233,7 @@ case 390:\n \t\t;\n     break;}\n case 391:\n-#line 1852 \"./parse.y\"\n+#line 1844 \"./parse.y\"\n { \n \t\t  if (TREE_CODE (yyvsp[-5].node) == THIS_EXPR)\n \t\t    yyval.node = build_this_super_qualified_invocation \n@@ -4254,121 +4246,121 @@ case 391:\n \t\t;\n     break;}\n case 392:\n-#line 1863 \"./parse.y\"\n+#line 1855 \"./parse.y\"\n { \n \t\t  yyval.node = build_this_super_qualified_invocation \n \t\t    (0, yyvsp[-2].node, NULL_TREE, yyvsp[-4].operator.location, yyvsp[-3].operator.location);\n \t\t;\n     break;}\n case 393:\n-#line 1868 \"./parse.y\"\n+#line 1860 \"./parse.y\"\n {\n \t\t  yyval.node = build_this_super_qualified_invocation \n \t\t    (0, yyvsp[-3].node, yyvsp[-1].node, yyvsp[-5].operator.location, yyvsp[-4].operator.location);\n \t\t;\n     break;}\n case 394:\n-#line 1877 \"./parse.y\"\n+#line 1869 \"./parse.y\"\n { yyerror (\"'(' expected\"); DRECOVER (method_invocation); ;\n     break;}\n case 395:\n-#line 1879 \"./parse.y\"\n+#line 1871 \"./parse.y\"\n { yyerror (\"'(' expected\"); DRECOVER (method_invocation); ;\n     break;}\n case 396:\n-#line 1884 \"./parse.y\"\n+#line 1876 \"./parse.y\"\n { yyval.node = build_array_ref (yyvsp[-2].operator.location, yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 397:\n-#line 1886 \"./parse.y\"\n+#line 1878 \"./parse.y\"\n { yyval.node = build_array_ref (yyvsp[-2].operator.location, yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 398:\n-#line 1888 \"./parse.y\"\n+#line 1880 \"./parse.y\"\n {\n \t\t  yyerror (\"Missing term and ']' expected\");\n \t\t  DRECOVER(array_access);\n \t\t;\n     break;}\n case 399:\n-#line 1893 \"./parse.y\"\n+#line 1885 \"./parse.y\"\n {\n \t\t  yyerror (\"']' expected\");\n \t\t  DRECOVER(array_access);\n \t\t;\n     break;}\n case 400:\n-#line 1898 \"./parse.y\"\n+#line 1890 \"./parse.y\"\n {\n \t\t  yyerror (\"Missing term and ']' expected\");\n \t\t  DRECOVER(array_access);\n \t\t;\n     break;}\n case 401:\n-#line 1903 \"./parse.y\"\n+#line 1895 \"./parse.y\"\n {\n \t\t  yyerror (\"']' expected\");\n \t\t  DRECOVER(array_access);\n \t\t;\n     break;}\n case 406:\n-#line 1918 \"./parse.y\"\n+#line 1910 \"./parse.y\"\n { yyval.node = build_incdec (yyvsp[0].operator.token, yyvsp[0].operator.location, yyvsp[-1].node, 1); ;\n     break;}\n case 407:\n-#line 1923 \"./parse.y\"\n+#line 1915 \"./parse.y\"\n { yyval.node = build_incdec (yyvsp[0].operator.token, yyvsp[0].operator.location, yyvsp[-1].node, 1); ;\n     break;}\n case 410:\n-#line 1930 \"./parse.y\"\n+#line 1922 \"./parse.y\"\n {yyval.node = build_unaryop (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node); ;\n     break;}\n case 411:\n-#line 1932 \"./parse.y\"\n+#line 1924 \"./parse.y\"\n {yyval.node = build_unaryop (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node); ;\n     break;}\n case 413:\n-#line 1935 \"./parse.y\"\n+#line 1927 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 414:\n-#line 1937 \"./parse.y\"\n+#line 1929 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 415:\n-#line 1942 \"./parse.y\"\n+#line 1934 \"./parse.y\"\n {yyval.node = build_incdec (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node, 0); ;\n     break;}\n case 416:\n-#line 1944 \"./parse.y\"\n+#line 1936 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 417:\n-#line 1949 \"./parse.y\"\n+#line 1941 \"./parse.y\"\n {yyval.node = build_incdec (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node, 0); ;\n     break;}\n case 418:\n-#line 1951 \"./parse.y\"\n+#line 1943 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 420:\n-#line 1957 \"./parse.y\"\n+#line 1949 \"./parse.y\"\n {yyval.node = build_unaryop (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node); ;\n     break;}\n case 421:\n-#line 1959 \"./parse.y\"\n+#line 1951 \"./parse.y\"\n {yyval.node = build_unaryop (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node); ;\n     break;}\n case 423:\n-#line 1962 \"./parse.y\"\n+#line 1954 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 424:\n-#line 1964 \"./parse.y\"\n+#line 1956 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 425:\n-#line 1969 \"./parse.y\"\n+#line 1961 \"./parse.y\"\n { \n \t\t  tree type = yyvsp[-3].node;\n \t\t  while (ctxp->osb_number--)\n@@ -4377,15 +4369,15 @@ case 425:\n \t\t;\n     break;}\n case 426:\n-#line 1976 \"./parse.y\"\n+#line 1968 \"./parse.y\"\n { yyval.node = build_cast (yyvsp[-3].operator.location, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 427:\n-#line 1978 \"./parse.y\"\n+#line 1970 \"./parse.y\"\n { yyval.node = build_cast (yyvsp[-3].operator.location, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 428:\n-#line 1980 \"./parse.y\"\n+#line 1972 \"./parse.y\"\n { \n \t\t  char *ptr;\n \t\t  while (ctxp->osb_number--)\n@@ -4399,275 +4391,275 @@ case 428:\n \t\t;\n     break;}\n case 429:\n-#line 1992 \"./parse.y\"\n+#line 1984 \"./parse.y\"\n {yyerror (\"']' expected, invalid type expression\");;\n     break;}\n case 430:\n-#line 1994 \"./parse.y\"\n+#line 1986 \"./parse.y\"\n {\n \t          if (ctxp->prevent_ese != lineno)\n \t\t    yyerror (\"Invalid type expression\"); RECOVER;\n \t\t  RECOVER;\n \t\t;\n     break;}\n case 431:\n-#line 2000 \"./parse.y\"\n+#line 1992 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 432:\n-#line 2002 \"./parse.y\"\n+#line 1994 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 433:\n-#line 2004 \"./parse.y\"\n+#line 1996 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 435:\n-#line 2010 \"./parse.y\"\n+#line 2002 \"./parse.y\"\n { \n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), \n \t\t\t\t    yyvsp[-1].operator.location, yyvsp[-2].node, yyvsp[0].node);\n \t\t;\n     break;}\n case 436:\n-#line 2015 \"./parse.y\"\n+#line 2007 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 437:\n-#line 2020 \"./parse.y\"\n+#line 2012 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 438:\n-#line 2025 \"./parse.y\"\n+#line 2017 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 439:\n-#line 2027 \"./parse.y\"\n+#line 2019 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 440:\n-#line 2029 \"./parse.y\"\n+#line 2021 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 442:\n-#line 2035 \"./parse.y\"\n+#line 2027 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 443:\n-#line 2040 \"./parse.y\"\n+#line 2032 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 444:\n-#line 2045 \"./parse.y\"\n+#line 2037 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 445:\n-#line 2047 \"./parse.y\"\n+#line 2039 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 447:\n-#line 2053 \"./parse.y\"\n+#line 2045 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 448:\n-#line 2058 \"./parse.y\"\n+#line 2050 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 449:\n-#line 2063 \"./parse.y\"\n+#line 2055 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 450:\n-#line 2068 \"./parse.y\"\n+#line 2060 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 451:\n-#line 2070 \"./parse.y\"\n+#line 2062 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 452:\n-#line 2072 \"./parse.y\"\n+#line 2064 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 454:\n-#line 2078 \"./parse.y\"\n+#line 2070 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 455:\n-#line 2083 \"./parse.y\"\n+#line 2075 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 456:\n-#line 2088 \"./parse.y\"\n+#line 2080 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 457:\n-#line 2093 \"./parse.y\"\n+#line 2085 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 458:\n-#line 2098 \"./parse.y\"\n+#line 2090 \"./parse.y\"\n { yyval.node = build_binop (INSTANCEOF_EXPR, yyvsp[-1].operator.location, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 459:\n-#line 2100 \"./parse.y\"\n+#line 2092 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 460:\n-#line 2102 \"./parse.y\"\n+#line 2094 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 461:\n-#line 2104 \"./parse.y\"\n+#line 2096 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 462:\n-#line 2106 \"./parse.y\"\n+#line 2098 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 463:\n-#line 2108 \"./parse.y\"\n+#line 2100 \"./parse.y\"\n {yyerror (\"Invalid reference type\"); RECOVER;;\n     break;}\n case 465:\n-#line 2114 \"./parse.y\"\n+#line 2106 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 466:\n-#line 2119 \"./parse.y\"\n+#line 2111 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 467:\n-#line 2124 \"./parse.y\"\n+#line 2116 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 468:\n-#line 2126 \"./parse.y\"\n+#line 2118 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 470:\n-#line 2132 \"./parse.y\"\n+#line 2124 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 471:\n-#line 2137 \"./parse.y\"\n+#line 2129 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 473:\n-#line 2143 \"./parse.y\"\n+#line 2135 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 474:\n-#line 2148 \"./parse.y\"\n+#line 2140 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 476:\n-#line 2154 \"./parse.y\"\n+#line 2146 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 477:\n-#line 2159 \"./parse.y\"\n+#line 2151 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 479:\n-#line 2165 \"./parse.y\"\n+#line 2157 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 480:\n-#line 2170 \"./parse.y\"\n+#line 2162 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 482:\n-#line 2176 \"./parse.y\"\n+#line 2168 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 483:\n-#line 2181 \"./parse.y\"\n+#line 2173 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 485:\n-#line 2187 \"./parse.y\"\n+#line 2179 \"./parse.y\"\n {\n \t\t  yyval.node = build (CONDITIONAL_EXPR, NULL_TREE, yyvsp[-4].node, yyvsp[-2].node, yyvsp[0].node);\n \t\t  EXPR_WFL_LINECOL (yyval.node) = yyvsp[-3].operator.location;\n \t\t;\n     break;}\n case 486:\n-#line 2192 \"./parse.y\"\n+#line 2184 \"./parse.y\"\n {\n \t\t  YYERROR_NOW;\n \t\t  yyerror (\"Missing term\");\n \t\t  DRECOVER (1);\n \t\t;\n     break;}\n case 487:\n-#line 2198 \"./parse.y\"\n+#line 2190 \"./parse.y\"\n {yyerror (\"Missing term\"); DRECOVER (2);;\n     break;}\n case 488:\n-#line 2200 \"./parse.y\"\n+#line 2192 \"./parse.y\"\n {yyerror (\"Missing term\"); DRECOVER (3);;\n     break;}\n case 491:\n-#line 2210 \"./parse.y\"\n+#line 2202 \"./parse.y\"\n { yyval.node = build_assignment (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 492:\n-#line 2212 \"./parse.y\"\n+#line 2204 \"./parse.y\"\n {\n \t\t  if (ctxp->prevent_ese != lineno)\n \t\t    yyerror (\"Missing term\");\n@@ -4872,7 +4864,7 @@ case 492:\n   yystate = yyn;\n   goto yynewstate;\n }\n-#line 2238 \"./parse.y\"\n+#line 2230 \"./parse.y\"\n \n \f\n \n@@ -5783,6 +5775,8 @@ register_fields (flags, type, variable_list)\n \t      TREE_CHAIN (init) = ctxp->static_initialized;\n \t      ctxp->static_initialized = init;\n \t      DECL_INITIAL (field_decl) = TREE_OPERAND (init, 1);\n+\t      if (TREE_CODE (TREE_OPERAND (init, 1)) == NEW_ARRAY_INIT)\n+\t\tTREE_STATIC (TREE_OPERAND (TREE_OPERAND (init, 1), 0)) = 1;\n \t    }\n \t  /* A non-static field declared with an immediate initialization is\n \t     to be initialized in <init>, if any.  This field is remembered\n@@ -6723,6 +6717,7 @@ do_resolve_class (class_type, decl, cl)\n      tree cl;\n {\n   tree new_class_decl;\n+  tree new_name;\n   tree original_name = NULL_TREE;\n \n   /* Do not try to replace TYPE_NAME (class_type) by a variable, since\n@@ -6746,6 +6741,7 @@ do_resolve_class (class_type, decl, cl)\n   if (!QUALIFIED_P (TYPE_NAME (class_type)) && ctxp->package)\n     TYPE_NAME (class_type) = merge_qualified_name (ctxp->package, \n \t\t\t\t\t\t   TYPE_NAME (class_type));\n+#if 1\n   if (!(new_class_decl = IDENTIFIER_CLASS_VALUE (TYPE_NAME (class_type))))\n     load_class (TYPE_NAME (class_type), 0);\n   if ((new_class_decl = IDENTIFIER_CLASS_VALUE (TYPE_NAME (class_type))))\n@@ -6755,6 +6751,27 @@ do_resolve_class (class_type, decl, cl)\n \tload_class (TYPE_NAME (class_type), 0);\n       return IDENTIFIER_CLASS_VALUE (TYPE_NAME (class_type));\n     }\n+#else\n+  new_name = TYPE_NAME (class_type);\n+  if ((new_class_decl = IDENTIFIER_CLASS_VALUE (new_name)) != NULL_TREE)\n+    {\n+      if (!CLASS_LOADED_P (TREE_TYPE (new_class_decl)) &&\n+          !CLASS_FROM_SOURCE_P (TREE_TYPE (new_class_decl)))\n+        load_class (new_name, 0);\n+      return IDENTIFIER_CLASS_VALUE (new_name);\n+    }\n+  else\n+    {\n+      tree class = read_class (new_name);\n+      if (class != NULL_TREE)\n+\t{\n+\t  tree decl = IDENTIFIER_CLASS_VALUE (new_name);\n+\t  if (decl == NULL_TREE)\n+\t    decl = push_class (class, new_name);\n+\t  return decl;\n+\t}\n+    }\n+#endif\n   TYPE_NAME (class_type) = original_name;\n \n   /* 3- Check an other compilation unit that bears the name of type */\n@@ -8132,6 +8149,7 @@ void\n java_layout_classes ()\n {\n   tree current;\n+  int save_error_count = java_error_count;\n \n   /* Layout the methods of all classes seen so far */\n   java_layout_seen_class_methods ();\n@@ -8293,7 +8311,10 @@ java_complete_expand_method (mdecl)\n       PUSH_EXCEPTIONS (DECL_FUNCTION_THROWS (mdecl));\n \n       if (block_body != NULL_TREE)\n-\tblock_body = java_complete_tree (block_body);\n+\t{\n+\t  block_body = java_complete_tree (block_body);\n+\t  check_for_initialization (block_body);\n+\t}\n       BLOCK_EXPR_BODY (fbody) = block_body;\n \n       if ((block_body == NULL_TREE || CAN_COMPLETE_NORMALLY (block_body))\n@@ -8432,6 +8453,7 @@ java_expand_finals ()\n void\n java_expand_classes ()\n {\n+  int save_error_count = java_error_count;\n   java_parse_abort_on_error ();\n   if (!(ctxp = ctxp_for_generation))\n     return;\n@@ -8522,6 +8544,11 @@ make_qualified_name (left, right, location)\n      tree left, right;\n      int location;\n {\n+#ifdef USE_COMPONENT_REF\n+  tree node = build (COMPONENT_REF, NULL_TREE, left, right);\n+  EXPR_WFL_LINECOL (node) = location;\n+  return node;\n+#else\n   tree left_id = EXPR_WFL_NODE (left);\n   tree right_id = EXPR_WFL_NODE (right);\n   tree wfl, merge;\n@@ -8542,6 +8569,7 @@ make_qualified_name (left, right, location)\n \n   EXPR_WFL_NODE (left) = merge;\n   return left;\n+#endif\n }\n \n /* Extract the last identifier component of the qualified in WFL. The\n@@ -12510,6 +12538,7 @@ patch_new_array_init (type, node)\n   TREE_TYPE (init) = TREE_TYPE (TREE_CHAIN (TREE_CHAIN (TYPE_FIELDS (type))));\n   TREE_TYPE (node) = promote_type (type);\n   TREE_CONSTANT (init) = all_constant;\n+  TREE_CONSTANT (node) = all_constant;\n   return node;\n }\n \n@@ -13730,17 +13759,17 @@ fold_constant_for_init (node, context)\n \n   switch (code)\n     {\n-    case MULT_EXPR:\n     case PLUS_EXPR:\n     case MINUS_EXPR:\n+    case MULT_EXPR:\n+    case TRUNC_MOD_EXPR:\n+    case RDIV_EXPR:\n     case LSHIFT_EXPR:\n     case RSHIFT_EXPR:\n     case URSHIFT_EXPR:\n     case BIT_AND_EXPR:\n     case BIT_XOR_EXPR:\n     case BIT_IOR_EXPR:\n-    case TRUNC_MOD_EXPR:\n-    case RDIV_EXPR:\n     case TRUTH_ANDIF_EXPR:\n     case TRUTH_ORIF_EXPR:\n     case EQ_EXPR: \n@@ -13839,7 +13868,32 @@ fold_constant_for_init (node, context)\n \t  return val;\n \t}\n \n+#ifdef USE_COMPONENT_REF\n+    case IDENTIFIER:\n+    case COMPONENT_REF:\n+      ?;\n+#endif\n+\n     default:\n       return NULL_TREE;\n     }\n }\n+\n+#ifdef USE_COMPONENT_REF\n+/* Context is 'T' for TypeName, 'P' for PackageName,\n+   'M' for MethodName, 'E' for ExpressionName, and 'A' for AmbiguousName. */\n+\n+tree\n+resolve_simple_name (name, context)\n+     tree name;\n+     int context;\n+{\n+}\n+\n+tree\n+resolve_qualified_name (name, context)\n+     tree name;\n+     int context;\n+{\n+}\n+#endif"}, {"sha": "874d72291c208ec89269f8bd22c2060733b21b31", "filename": "gcc/java/parse.y", "status": "modified", "additions": 66, "deletions": 4, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc3ca41b4911ec74cd970904c5a91402bdeeb424/gcc%2Fjava%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc3ca41b4911ec74cd970904c5a91402bdeeb424/gcc%2Fjava%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.y?ref=bc3ca41b4911ec74cd970904c5a91402bdeeb424", "patch": "@@ -3137,6 +3137,8 @@ register_fields (flags, type, variable_list)\n \t      TREE_CHAIN (init) = ctxp->static_initialized;\n \t      ctxp->static_initialized = init;\n \t      DECL_INITIAL (field_decl) = TREE_OPERAND (init, 1);\n+\t      if (TREE_CODE (TREE_OPERAND (init, 1)) == NEW_ARRAY_INIT)\n+\t\tTREE_STATIC (TREE_OPERAND (TREE_OPERAND (init, 1), 0)) = 1;\n \t    }\n \t  /* A non-static field declared with an immediate initialization is\n \t     to be initialized in <init>, if any.  This field is remembered\n@@ -4077,6 +4079,7 @@ do_resolve_class (class_type, decl, cl)\n      tree cl;\n {\n   tree new_class_decl;\n+  tree new_name;\n   tree original_name = NULL_TREE;\n \n   /* Do not try to replace TYPE_NAME (class_type) by a variable, since\n@@ -4100,6 +4103,7 @@ do_resolve_class (class_type, decl, cl)\n   if (!QUALIFIED_P (TYPE_NAME (class_type)) && ctxp->package)\n     TYPE_NAME (class_type) = merge_qualified_name (ctxp->package, \n \t\t\t\t\t\t   TYPE_NAME (class_type));\n+#if 1\n   if (!(new_class_decl = IDENTIFIER_CLASS_VALUE (TYPE_NAME (class_type))))\n     load_class (TYPE_NAME (class_type), 0);\n   if ((new_class_decl = IDENTIFIER_CLASS_VALUE (TYPE_NAME (class_type))))\n@@ -4109,6 +4113,27 @@ do_resolve_class (class_type, decl, cl)\n \tload_class (TYPE_NAME (class_type), 0);\n       return IDENTIFIER_CLASS_VALUE (TYPE_NAME (class_type));\n     }\n+#else\n+  new_name = TYPE_NAME (class_type);\n+  if ((new_class_decl = IDENTIFIER_CLASS_VALUE (new_name)) != NULL_TREE)\n+    {\n+      if (!CLASS_LOADED_P (TREE_TYPE (new_class_decl)) &&\n+          !CLASS_FROM_SOURCE_P (TREE_TYPE (new_class_decl)))\n+        load_class (new_name, 0);\n+      return IDENTIFIER_CLASS_VALUE (new_name);\n+    }\n+  else\n+    {\n+      tree class = read_class (new_name);\n+      if (class != NULL_TREE)\n+\t{\n+\t  tree decl = IDENTIFIER_CLASS_VALUE (new_name);\n+\t  if (decl == NULL_TREE)\n+\t    decl = push_class (class, new_name);\n+\t  return decl;\n+\t}\n+    }\n+#endif\n   TYPE_NAME (class_type) = original_name;\n \n   /* 3- Check an other compilation unit that bears the name of type */\n@@ -5486,6 +5511,7 @@ void\n java_layout_classes ()\n {\n   tree current;\n+  int save_error_count = java_error_count;\n \n   /* Layout the methods of all classes seen so far */\n   java_layout_seen_class_methods ();\n@@ -5647,7 +5673,10 @@ java_complete_expand_method (mdecl)\n       PUSH_EXCEPTIONS (DECL_FUNCTION_THROWS (mdecl));\n \n       if (block_body != NULL_TREE)\n-\tblock_body = java_complete_tree (block_body);\n+\t{\n+\t  block_body = java_complete_tree (block_body);\n+\t  check_for_initialization (block_body);\n+\t}\n       BLOCK_EXPR_BODY (fbody) = block_body;\n \n       if ((block_body == NULL_TREE || CAN_COMPLETE_NORMALLY (block_body))\n@@ -5786,6 +5815,7 @@ java_expand_finals ()\n void\n java_expand_classes ()\n {\n+  int save_error_count = java_error_count;\n   java_parse_abort_on_error ();\n   if (!(ctxp = ctxp_for_generation))\n     return;\n@@ -5876,6 +5906,11 @@ make_qualified_name (left, right, location)\n      tree left, right;\n      int location;\n {\n+#ifdef USE_COMPONENT_REF\n+  tree node = build (COMPONENT_REF, NULL_TREE, left, right);\n+  EXPR_WFL_LINECOL (node) = location;\n+  return node;\n+#else\n   tree left_id = EXPR_WFL_NODE (left);\n   tree right_id = EXPR_WFL_NODE (right);\n   tree wfl, merge;\n@@ -5896,6 +5931,7 @@ make_qualified_name (left, right, location)\n \n   EXPR_WFL_NODE (left) = merge;\n   return left;\n+#endif\n }\n \n /* Extract the last identifier component of the qualified in WFL. The\n@@ -9864,6 +9900,7 @@ patch_new_array_init (type, node)\n   TREE_TYPE (init) = TREE_TYPE (TREE_CHAIN (TREE_CHAIN (TYPE_FIELDS (type))));\n   TREE_TYPE (node) = promote_type (type);\n   TREE_CONSTANT (init) = all_constant;\n+  TREE_CONSTANT (node) = all_constant;\n   return node;\n }\n \n@@ -11084,17 +11121,17 @@ fold_constant_for_init (node, context)\n \n   switch (code)\n     {\n-    case MULT_EXPR:\n     case PLUS_EXPR:\n     case MINUS_EXPR:\n+    case MULT_EXPR:\n+    case TRUNC_MOD_EXPR:\n+    case RDIV_EXPR:\n     case LSHIFT_EXPR:\n     case RSHIFT_EXPR:\n     case URSHIFT_EXPR:\n     case BIT_AND_EXPR:\n     case BIT_XOR_EXPR:\n     case BIT_IOR_EXPR:\n-    case TRUNC_MOD_EXPR:\n-    case RDIV_EXPR:\n     case TRUTH_ANDIF_EXPR:\n     case TRUTH_ORIF_EXPR:\n     case EQ_EXPR: \n@@ -11193,7 +11230,32 @@ fold_constant_for_init (node, context)\n \t  return val;\n \t}\n \n+#ifdef USE_COMPONENT_REF\n+    case IDENTIFIER:\n+    case COMPONENT_REF:\n+      ?;\n+#endif\n+\n     default:\n       return NULL_TREE;\n     }\n }\n+\n+#ifdef USE_COMPONENT_REF\n+/* Context is 'T' for TypeName, 'P' for PackageName,\n+   'M' for MethodName, 'E' for ExpressionName, and 'A' for AmbiguousName. */\n+\n+tree\n+resolve_simple_name (name, context)\n+     tree name;\n+     int context;\n+{\n+}\n+\n+tree\n+resolve_qualified_name (name, context)\n+     tree name;\n+     int context;\n+{\n+}\n+#endif"}]}