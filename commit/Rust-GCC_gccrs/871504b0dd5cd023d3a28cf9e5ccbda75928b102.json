{"sha": "871504b0dd5cd023d3a28cf9e5ccbda75928b102", "node_id": "C_kwDOANBUbNoAKDg3MTUwNGIwZGQ1Y2QwMjNkM2EyOGNmOWU1Y2NiZGE3NTkyOGIxMDI", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2021-12-15T22:14:54Z"}, "committer": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2021-12-17T03:28:49Z"}, "message": "c++: tweak comment\n\nThe comment documented a parameter that no longer exists.\n\ngcc/cp/ChangeLog:\n\n\t* constraint.cc (deduce_concept_introduction): Adjust comment.", "tree": {"sha": "367ce6147ba30b4afd21c215cd300a56717bc93c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/367ce6147ba30b4afd21c215cd300a56717bc93c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/871504b0dd5cd023d3a28cf9e5ccbda75928b102", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/871504b0dd5cd023d3a28cf9e5ccbda75928b102", "html_url": "https://github.com/Rust-GCC/gccrs/commit/871504b0dd5cd023d3a28cf9e5ccbda75928b102", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/871504b0dd5cd023d3a28cf9e5ccbda75928b102/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a37e8ce3b66325f0c6de55c80d50ac1664c3d0eb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a37e8ce3b66325f0c6de55c80d50ac1664c3d0eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a37e8ce3b66325f0c6de55c80d50ac1664c3d0eb"}], "stats": {"total": 2, "additions": 0, "deletions": 2}, "files": [{"sha": "8386a7dd411ce1498c5ad24ecb0060b035864b61", "filename": "gcc/cp/constraint.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/871504b0dd5cd023d3a28cf9e5ccbda75928b102/gcc%2Fcp%2Fconstraint.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/871504b0dd5cd023d3a28cf9e5ccbda75928b102/gcc%2Fcp%2Fconstraint.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fconstraint.cc?ref=871504b0dd5cd023d3a28cf9e5ccbda75928b102", "patch": "@@ -450,8 +450,6 @@ deduce_concept_introduction (tree check)\n /* Build a constrained placeholder type where SPEC is a type-constraint.\n    SPEC can be anything were concept_definition_p is true.\n \n-   If DECLTYPE_P is true, then the placeholder is decltype(auto).\n-\n    Returns a pair whose FIRST is the concept being checked and whose\n    SECOND is the prototype parameter.  */\n "}]}