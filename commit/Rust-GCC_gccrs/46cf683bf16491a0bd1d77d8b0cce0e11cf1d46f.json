{"sha": "46cf683bf16491a0bd1d77d8b0cce0e11cf1d46f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDZjZjY4M2JmMTY0OTFhMGJkMWQ3N2Q4YjBjY2UwZTExY2YxZDQ2Zg==", "commit": {"author": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2020-04-21T06:50:12Z"}, "committer": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2020-04-21T06:58:08Z"}, "message": "d/dmd: Merge upstream dmd 62ce36f37\n\nAdjusts the hardcoded index of Error.bypassException.\n\nFixes: PR d/94623\n\nReviewed-on: https://github.com/dlang/dmd/pull/11052", "tree": {"sha": "10f7558f16f3c7e34cd94e28c011a94b759688ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/10f7558f16f3c7e34cd94e28c011a94b759688ae"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/46cf683bf16491a0bd1d77d8b0cce0e11cf1d46f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46cf683bf16491a0bd1d77d8b0cce0e11cf1d46f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/46cf683bf16491a0bd1d77d8b0cce0e11cf1d46f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46cf683bf16491a0bd1d77d8b0cce0e11cf1d46f/comments", "author": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8e841bd419fb9dc3e027367fc11078b677541a9a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e841bd419fb9dc3e027367fc11078b677541a9a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e841bd419fb9dc3e027367fc11078b677541a9a"}], "stats": {"total": 21, "additions": 14, "deletions": 7}, "files": [{"sha": "155286dd765541563dc02efcf13ff3541b330de1", "filename": "gcc/d/dmd/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46cf683bf16491a0bd1d77d8b0cce0e11cf1d46f/gcc%2Fd%2Fdmd%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46cf683bf16491a0bd1d77d8b0cce0e11cf1d46f/gcc%2Fd%2Fdmd%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2FMERGE?ref=46cf683bf16491a0bd1d77d8b0cce0e11cf1d46f", "patch": "@@ -1,4 +1,4 @@\n-ba99ee345694da61eca7b555517d540ff3dc0a56\n+62ce36f3737de691217c21f0173f411734eb1d43\n \n The first line of this file holds the git revision number of the last\n merge done from the dlang/dmd repository."}, {"sha": "e2d49b9e8f147a14cab6e911a08d243c2da0ad4d", "filename": "gcc/d/dmd/dinterpret.c", "status": "modified", "additions": 13, "deletions": 6, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46cf683bf16491a0bd1d77d8b0cce0e11cf1d46f/gcc%2Fd%2Fdmd%2Fdinterpret.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46cf683bf16491a0bd1d77d8b0cce0e11cf1d46f/gcc%2Fd%2Fdmd%2Fdinterpret.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdmd%2Fdinterpret.c?ref=46cf683bf16491a0bd1d77d8b0cce0e11cf1d46f", "patch": "@@ -1652,21 +1652,28 @@ class Interpreter : public Visitor\n     {\n         // Little sanity check to make sure it's really a Throwable\n         ClassReferenceExp *boss = oldest->thrown;\n-        assert((*boss->value->elements)[4]->type->ty == Tclass);    // Throwable.next\n+        const int next = 4;                         // index of Throwable.next\n+        assert((*boss->value->elements)[next]->type->ty == Tclass); // Throwable.next\n         ClassReferenceExp *collateral = newest->thrown;\n         if ( isAnErrorException(collateral->originalClass()) &&\n             !isAnErrorException(boss->originalClass()))\n         {\n+            /* Find the index of the Error.bypassException field\n+             */\n+            int bypass = next + 1;\n+            if ((*collateral->value->elements)[bypass]->type->ty == Tuns32)\n+                bypass += 1;  // skip over _refcount field\n+            assert((*collateral->value->elements)[bypass]->type->ty == Tclass);\n+\n             // The new exception bypass the existing chain\n-            assert((*collateral->value->elements)[5]->type->ty == Tclass);\n-            (*collateral->value->elements)[5] = boss;\n+            (*collateral->value->elements)[bypass] = boss;\n             return newest;\n         }\n-        while ((*boss->value->elements)[4]->op == TOKclassreference)\n+        while ((*boss->value->elements)[next]->op == TOKclassreference)\n         {\n-            boss = (ClassReferenceExp *)(*boss->value->elements)[4];\n+            boss = (ClassReferenceExp *)(*boss->value->elements)[next];\n         }\n-        (*boss->value->elements)[4] = collateral;\n+        (*boss->value->elements)[next] = collateral;\n         return oldest;\n     }\n "}]}