{"sha": "5ae5f596510d05e1419873404d58177c597d9dbd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWFlNWY1OTY1MTBkMDVlMTQxOTg3MzQwNGQ1ODE3N2M1OTdkOWRiZA==", "commit": {"author": {"name": "Cary Coutant", "email": "ccoutant@google.com", "date": "2009-09-25T18:33:04Z"}, "committer": {"name": "Cary Coutant", "email": "ccoutant@gcc.gnu.org", "date": "2009-09-25T18:33:04Z"}, "message": "Add rest of new values from DWARF Version 4.\n\ninclude/\n\n\tAdd rest of new values from DWARF Version 4.\n\t* dwarf2.h (DW_TAG_rvalue_reference_type, DW_TAG_template_alias):\n\tNew tags.\n\t(DW_FORM_ref_sig8): New name for DW_FORM_sig8.\n\t(DW_AT_main_subprogram, DW_AT_data_bit_offset, DW_AT_const_expr,\n\tDW_AT_enum_class, DW_AT_linkage_name, DW_AT_GNU_guarded_by,\n\tDW_AT_GNU_pt_guarded_by, DW_AT_GNU_guarded, DW_AT_GNU_pt_guarded,\n\tDW_AT_GNU_locks_excluded, DW_AT_GNU_exclusive_locks_required,\n\tDW_AT_GNU_shared_locks_required, DW_AT_GNU_odr_signature): New\n\tattributes.\n\t(DW_LANG_Python): New language.\n\nFrom-SVN: r152181", "tree": {"sha": "224f189ce65ba3eb64eb386f52204308fd863218", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/224f189ce65ba3eb64eb386f52204308fd863218"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5ae5f596510d05e1419873404d58177c597d9dbd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ae5f596510d05e1419873404d58177c597d9dbd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ae5f596510d05e1419873404d58177c597d9dbd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ae5f596510d05e1419873404d58177c597d9dbd/comments", "author": null, "committer": null, "parents": [{"sha": "14a878f35e0177a0ae892ce0b9f39e1dcc375af5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14a878f35e0177a0ae892ce0b9f39e1dcc375af5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/14a878f35e0177a0ae892ce0b9f39e1dcc375af5"}], "stats": {"total": 39, "additions": 37, "deletions": 2}, "files": [{"sha": "b1158a2dd90e20ac683207466e0af80e6cf6b7ab", "filename": "include/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ae5f596510d05e1419873404d58177c597d9dbd/include%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ae5f596510d05e1419873404d58177c597d9dbd/include%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2FChangeLog?ref=5ae5f596510d05e1419873404d58177c597d9dbd", "patch": "@@ -1,3 +1,17 @@\n+2009-09-25  Cary Coutant  <ccoutant@google.com>\n+\n+\tAdd rest of new values from DWARF Version 4.\n+\t* dwarf2.h (DW_TAG_rvalue_reference_type, DW_TAG_template_alias):\n+\tNew tags.\n+\t(DW_FORM_ref_sig8): New name for DW_FORM_sig8.\n+\t(DW_AT_main_subprogram, DW_AT_data_bit_offset, DW_AT_const_expr,\n+\tDW_AT_enum_class, DW_AT_linkage_name, DW_AT_GNU_guarded_by,\n+\tDW_AT_GNU_pt_guarded_by, DW_AT_GNU_guarded, DW_AT_GNU_pt_guarded,\n+\tDW_AT_GNU_locks_excluded, DW_AT_GNU_exclusive_locks_required,\n+\tDW_AT_GNU_shared_locks_required, DW_AT_GNU_odr_signature): New\n+\tattributes.\n+\t(DW_LANG_Python): New language.\n+\n 2009-09-22  Dodji Seketeli  <dodji@redhat.com>\n \n \t* dwarf2.h (enum dwarf_tag): Add"}, {"sha": "4aa10d5a873d1a518f8675028836578d9a65f1e8", "filename": "include/dwarf2.h", "status": "modified", "additions": 23, "deletions": 2, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ae5f596510d05e1419873404d58177c597d9dbd/include%2Fdwarf2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ae5f596510d05e1419873404d58177c597d9dbd/include%2Fdwarf2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2Fdwarf2.h?ref=5ae5f596510d05e1419873404d58177c597d9dbd", "patch": "@@ -196,6 +196,8 @@ enum dwarf_tag\n     DW_TAG_shared_type = 0x40,\n     /* DWARF 4.  */\n     DW_TAG_type_unit = 0x41,\n+    DW_TAG_rvalue_reference_type = 0x42,\n+    DW_TAG_template_alias = 0x43,\n \n     DW_TAG_lo_user = 0x4080,\n     DW_TAG_hi_user = 0xffff,\n@@ -262,7 +264,8 @@ enum dwarf_form\n     DW_FORM_sec_offset = 0x17,\n     DW_FORM_exprloc = 0x18,\n     DW_FORM_flag_present = 0x19,\n-    DW_FORM_sig8 = 0x20\n+    DW_FORM_ref_sig8 = 0x20\n+#define DW_FORM_sig8  DW_FORM_ref_sig8  /* Note: The use of DW_FORM_sig8 is deprecated.  */\n   };\n \n /* Attribute names and codes.  */\n@@ -361,7 +364,12 @@ enum dwarf_attribute\n     DW_AT_pure          = 0x67,\n     DW_AT_recursive     = 0x68,\n     /* DWARF 4.  */\n-    DW_AT_signature     = 0x69,\n+    DW_AT_signature       = 0x69,\n+    DW_AT_main_subprogram = 0x6a,\n+    DW_AT_data_bit_offset = 0x6b,\n+    DW_AT_const_expr      = 0x6c,\n+    DW_AT_enum_class      = 0x6d,\n+    DW_AT_linkage_name    = 0x6e,\n \n     DW_AT_lo_user = 0x2000,\t/* Implementation-defined range start.  */\n     DW_AT_hi_user = 0x3ff0,\t/* Implementation-defined range end.  */\n@@ -401,6 +409,18 @@ enum dwarf_attribute\n     DW_AT_body_begin = 0x2105,\n     DW_AT_body_end   = 0x2106,\n     DW_AT_GNU_vector = 0x2107,\n+    /* Thread-safety annotations.\n+       See http://gcc.gnu.org/wiki/ThreadSafetyAnnotation .  */\n+    DW_AT_GNU_guarded_by    = 0x2108,\n+    DW_AT_GNU_pt_guarded_by = 0x2109,\n+    DW_AT_GNU_guarded       = 0x210a,\n+    DW_AT_GNU_pt_guarded    = 0x210b,\n+    DW_AT_GNU_locks_excluded = 0x210c,\n+    DW_AT_GNU_exclusive_locks_required = 0x210d,\n+    DW_AT_GNU_shared_locks_required = 0x210e,\n+    /* One-definition rule violation detection.\n+       See http://gcc.gnu.org/wiki/DwarfSeparateTypeInfo .  */\n+    DW_AT_GNU_odr_signature = 0x210f,\n     /* Template template argument name.\n        See http://gcc.gnu.org/wiki/TemplateParmsDwarf .  */\n     DW_AT_GNU_template_name = 0x2110,\n@@ -839,6 +859,7 @@ enum dwarf_source_language\n     DW_LANG_ObjC_plus_plus = 0x0011,\n     DW_LANG_UPC = 0x0012,\n     DW_LANG_D = 0x0013,\n+    DW_LANG_Python = 0x0014,\n \n     DW_LANG_lo_user = 0x8000,\t/* Implementation-defined range start.  */\n     DW_LANG_hi_user = 0xffff,\t/* Implementation-defined range start.  */"}]}