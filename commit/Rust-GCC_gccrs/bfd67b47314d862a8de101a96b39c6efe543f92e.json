{"sha": "bfd67b47314d862a8de101a96b39c6efe543f92e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmZkNjdiNDczMTRkODYyYThkZTEwMWE5NmIzOWM2ZWZlNTQzZjkyZQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2016-06-07T12:41:46Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2016-06-07T12:41:46Z"}, "message": "re PR c++/61564 (#pragma GCC optimize (\"-fno-lto\") causes the compiler to crash)\n\n2016-06-07  Richard Biener  <rguenther@suse.de>\n\n\tPR c/61564\n\t* c-common.c (parse_optimize_options): Only apply CL_OPTIMIZATION\n\toptions and warn about others.\n\t* common.opt (ffast-math): Make Optimization.\n\n\t* gcc.dg/Wpragmas-1.c: New testcase.\n\t* gcc.dg/Wattributes-4.c: Likewise.\n\t* gcc.dg/ipa/pr70646.c: Drop optimize pragma in favor of dg-option\n\tentry.\n\nFrom-SVN: r237174", "tree": {"sha": "5c06cbe701912bec4befdebe7c3a65237f2f14cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5c06cbe701912bec4befdebe7c3a65237f2f14cc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bfd67b47314d862a8de101a96b39c6efe543f92e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bfd67b47314d862a8de101a96b39c6efe543f92e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bfd67b47314d862a8de101a96b39c6efe543f92e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bfd67b47314d862a8de101a96b39c6efe543f92e/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6dc046586724bc68108d481eb0c75238fb641892", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6dc046586724bc68108d481eb0c75238fb641892", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6dc046586724bc68108d481eb0c75238fb641892"}], "stats": {"total": 62, "additions": 58, "deletions": 4}, "files": [{"sha": "64ec93ff5a28f73c4ebaa474e3d9994a6ab91e7d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfd67b47314d862a8de101a96b39c6efe543f92e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfd67b47314d862a8de101a96b39c6efe543f92e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bfd67b47314d862a8de101a96b39c6efe543f92e", "patch": "@@ -1,3 +1,8 @@\n+2016-06-07  Richard Biener  <rguenther@suse.de>\n+\n+\tPR c/61564\n+\t* common.opt (ffast-math): Make Optimization.\n+\n 2016-06-07  Simon Dardis  <simon.dardis@imgtec.com>\n \t    Prachi Godbole  <prachi.godbole@imgtec.com>\n "}, {"sha": "6d8307d9f2ae8a4d73818d6da602800226a93be8", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfd67b47314d862a8de101a96b39c6efe543f92e/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfd67b47314d862a8de101a96b39c6efe543f92e/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=bfd67b47314d862a8de101a96b39c6efe543f92e", "patch": "@@ -1,3 +1,9 @@\n+2016-06-07  Richard Biener  <rguenther@suse.de>\n+\n+\tPR c/61564\n+\t* c-common.c (parse_optimize_options): Only apply CL_OPTIMIZATION\n+\toptions and warn about others.\n+\n 2016-06-01  Eduard Sanou  <dhole@openmailbox.org>\n \n \t* c-common.c (get_source_date_epoch): Rename to"}, {"sha": "2e29dfc6a1774f119c1d0721a3d6ee3e6d1fcff4", "filename": "gcc/c-family/c-common.c", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfd67b47314d862a8de101a96b39c6efe543f92e/gcc%2Fc-family%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfd67b47314d862a8de101a96b39c6efe543f92e/gcc%2Fc-family%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-common.c?ref=bfd67b47314d862a8de101a96b39c6efe543f92e", "patch": "@@ -9580,6 +9580,29 @@ parse_optimize_options (tree args, bool attr_p)\n   decode_cmdline_options_to_array_default_mask (opt_argc, opt_argv,\n \t\t\t\t\t\t&decoded_options,\n \t\t\t\t\t\t&decoded_options_count);\n+  /* Drop non-Optimization options.  */\n+  unsigned j = 1;\n+  for (i = 1; i < decoded_options_count; ++i)\n+    {\n+      if (! (cl_options[decoded_options[i].opt_index].flags & CL_OPTIMIZATION))\n+\t{\n+\t  ret = false;\n+\t  if (attr_p)\n+\t    warning (OPT_Wattributes,\n+\t\t     \"bad option %s to optimize attribute\",\n+\t\t     decoded_options[i].orig_option_with_args_text);\n+\t  else\n+\t    warning (OPT_Wpragmas,\n+\t\t     \"bad option %s to pragma attribute\",\n+\t\t     decoded_options[i].orig_option_with_args_text);\n+\t  continue;\n+\t}\n+      if (i != j)\n+\tdecoded_options[j] = decoded_options[i];\n+      j++;\n+    }\n+  decoded_options_count = j;\n+  /* And apply them.  */\n   decode_options (&global_options, &global_options_set,\n \t\t  decoded_options, decoded_options_count,\n \t\t  input_location, global_dc);"}, {"sha": "f0d71966cdf3e17945dd57892ba41dbb06d06a47", "filename": "gcc/common.opt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfd67b47314d862a8de101a96b39c6efe543f92e/gcc%2Fcommon.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfd67b47314d862a8de101a96b39c6efe543f92e/gcc%2Fcommon.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon.opt?ref=bfd67b47314d862a8de101a96b39c6efe543f92e", "patch": "@@ -1287,7 +1287,7 @@ EnumValue\n Enum(excess_precision) String(standard) Value(EXCESS_PRECISION_STANDARD)\n \n ffast-math\n-Common\n+Common Optimization\n \n ffat-lto-objects\n Common Var(flag_fat_lto_objects)"}, {"sha": "33540eaa20e982516c50aec75fc0aba1233bd7c8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfd67b47314d862a8de101a96b39c6efe543f92e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfd67b47314d862a8de101a96b39c6efe543f92e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=bfd67b47314d862a8de101a96b39c6efe543f92e", "patch": "@@ -1,3 +1,11 @@\n+2016-06-07  Richard Biener  <rguenther@suse.de>\n+\n+\tPR c/61564\n+\t* gcc.dg/Wpragmas-1.c: New testcase.\n+\t* gcc.dg/Wattributes-4.c: Likewise.\n+\t* gcc.dg/ipa/pr70646.c: Drop optimize pragma in favor of dg-option\n+\tentry.\n+\n 2016-06-07  Christophe Lyon  <christophe.lyon@linaro.org>\n \n \t* gcc.target/aarch64/advsimd-intrinsics/p64_p128.c: Remove"}, {"sha": "abda5a30b0083bfd677171ef6065415d8807a34a", "filename": "gcc/testsuite/gcc.dg/Wattributes-4.c", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfd67b47314d862a8de101a96b39c6efe543f92e/gcc%2Ftestsuite%2Fgcc.dg%2FWattributes-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfd67b47314d862a8de101a96b39c6efe543f92e/gcc%2Ftestsuite%2Fgcc.dg%2FWattributes-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWattributes-4.c?ref=bfd67b47314d862a8de101a96b39c6efe543f92e", "patch": "@@ -0,0 +1,3 @@\n+/* { dg-do compile } */\n+\n+int __attribute__((optimize(\"no-lto\"))) main(void){return 0;} /* { dg-warning \"bad option\" } */"}, {"sha": "139519ea172b627fc143d08196ae56b3c51d60ee", "filename": "gcc/testsuite/gcc.dg/Wpragmas-1.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfd67b47314d862a8de101a96b39c6efe543f92e/gcc%2Ftestsuite%2Fgcc.dg%2FWpragmas-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfd67b47314d862a8de101a96b39c6efe543f92e/gcc%2Ftestsuite%2Fgcc.dg%2FWpragmas-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWpragmas-1.c?ref=bfd67b47314d862a8de101a96b39c6efe543f92e", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-do compile } */\n+\n+#pragma GCC push_options\n+#pragma GCC optimize (\"-fno-lto\") /* { dg-warning \"bad option\" } */\n+int main(void){return 0;}\n+#pragma GCC pop_options\n+\n+/* ???  The FEs still apply the pragma string as optimize attribute to\n+   all functions thus the diagnostic will be repeated for each function\n+   affected.  */\n+/* { dg-message \"bad option\" \"\" { target *-*-* } 0 } */"}, {"sha": "ba6f781a1458531d279ea7f7830e32f92a7746c6", "filename": "gcc/testsuite/gcc.dg/ipa/pr70646.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfd67b47314d862a8de101a96b39c6efe543f92e/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fpr70646.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfd67b47314d862a8de101a96b39c6efe543f92e/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fpr70646.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fpr70646.c?ref=bfd67b47314d862a8de101a96b39c6efe543f92e", "patch": "@@ -1,7 +1,5 @@\n /* { dg-do run } */\n-/* { dg-options \"-O2\" } */\n-\n-#pragma GCC optimize(\"no-unit-at-a-time\")\n+/* { dg-options \"-O2 -fno-unit-at-a-time\" } */\n \n typedef unsigned char u8;\n typedef unsigned long long u64;"}]}