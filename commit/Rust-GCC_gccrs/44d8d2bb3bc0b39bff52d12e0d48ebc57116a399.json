{"sha": "44d8d2bb3bc0b39bff52d12e0d48ebc57116a399", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDRkOGQyYmIzYmMwYjM5YmZmNTJkMTJlMGQ0OGViYzU3MTE2YTM5OQ==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonber@gnat.com", "date": "2001-10-11T23:54:52Z"}, "committer": {"name": "Geert Bosch", "email": "bosch@gcc.gnu.org", "date": "2001-10-11T23:54:52Z"}, "message": "exp_ch7.adb (Find_Final_List): for a type appearing in a with_type clause...\n\n\t* exp_ch7.adb (Find_Final_List): for a type appearing in a with_type\n\tclause, return the gobal finalization list, for lack of anthing else.\n\nFrom-SVN: r46210", "tree": {"sha": "9da2303d0f6f213449674c2bdfc5322fc7ac0c20", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9da2303d0f6f213449674c2bdfc5322fc7ac0c20"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/44d8d2bb3bc0b39bff52d12e0d48ebc57116a399", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44d8d2bb3bc0b39bff52d12e0d48ebc57116a399", "html_url": "https://github.com/Rust-GCC/gccrs/commit/44d8d2bb3bc0b39bff52d12e0d48ebc57116a399", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44d8d2bb3bc0b39bff52d12e0d48ebc57116a399/comments", "author": null, "committer": null, "parents": [{"sha": "89b894e19b9297d4d7e2f85c33253c59356a48b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89b894e19b9297d4d7e2f85c33253c59356a48b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/89b894e19b9297d4d7e2f85c33253c59356a48b1"}], "stats": {"total": 24, "additions": 18, "deletions": 6}, "files": [{"sha": "7e563c5feb4ed7f704d0f4c4df23a0d3076f691d", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44d8d2bb3bc0b39bff52d12e0d48ebc57116a399/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44d8d2bb3bc0b39bff52d12e0d48ebc57116a399/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=44d8d2bb3bc0b39bff52d12e0d48ebc57116a399", "patch": "@@ -1,3 +1,8 @@\n+2001-10-11  Ed Schonberg <schonber@gnat.com>\n+\n+\t* exp_ch7.adb (Find_Final_List): for a type appearing in a with_type \n+\tclause, return the gobal finalization list, for lack of anthing else. \n+\n 2001-10-11  Ed Schonberg <schonber@gnat.com>\n \n \t* exp_ch7.adb (Make_Transient_Block): if statement is within "}, {"sha": "825a44d336ac565eb49b67d2630624ed1a9b1d4f", "filename": "gcc/ada/exp_ch7.adb", "status": "modified", "additions": 13, "deletions": 6, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44d8d2bb3bc0b39bff52d12e0d48ebc57116a399/gcc%2Fada%2Fexp_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44d8d2bb3bc0b39bff52d12e0d48ebc57116a399/gcc%2Fada%2Fexp_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch7.adb?ref=44d8d2bb3bc0b39bff52d12e0d48ebc57116a399", "patch": "@@ -1140,14 +1140,21 @@ package body Exp_Ch7 is\n \n       --  Case of a dynamically allocated object. The final list is the\n       --  corresponding list controller (The next entity in the scope of\n-      --  the access type with the right type)\n+      --  the access type with the right type). If the type comes from a\n+      --  With_Type clause, no controller was created, and we use the\n+      --  global chain instead.\n \n       elsif Is_Access_Type (E) then\n-         return\n-           Make_Selected_Component (Loc,\n-             Prefix        =>\n-               New_Reference_To (Associated_Final_Chain (Base_Type (E)), Loc),\n-             Selector_Name => Make_Identifier (Loc, Name_F));\n+         if not From_With_Type (E) then\n+            return\n+              Make_Selected_Component (Loc,\n+                Prefix        =>\n+                  New_Reference_To\n+                    (Associated_Final_Chain (Base_Type (E)), Loc),\n+                Selector_Name => Make_Identifier (Loc, Name_F));\n+         else\n+            return New_Reference_To (RTE (RE_Global_Final_List), Sloc (E));\n+         end if;\n \n       else\n          if Is_Dynamic_Scope (E) then"}]}