{"sha": "d16250de4a4c8a63ebf68095dfb18581b655734c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDE2MjUwZGU0YTRjOGE2M2ViZjY4MDk1ZGZiMTg1ODFiNjU1NzM0Yw==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2019-05-02T15:44:59Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2019-05-02T15:44:59Z"}, "message": "Improve API docs for mathematical special functions\n\nThis prevents \"Mathematical Special Functions\" appearing in the\ntop-level menu of the generated HTML docs, and adds \"TR1\" to the title\nfor the TR1 docs, to avoid duplicate titles.\n\n\t* include/bits/specfun.h: Improve docs.\n\t* include/tr1/cmath: Likewise. Fix nesting of preprocessor conditions\n\tand namespaces.\n\nFrom-SVN: r270806", "tree": {"sha": "84655aa318ef839340389911abec3ad8565fcf71", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/84655aa318ef839340389911abec3ad8565fcf71"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d16250de4a4c8a63ebf68095dfb18581b655734c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d16250de4a4c8a63ebf68095dfb18581b655734c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d16250de4a4c8a63ebf68095dfb18581b655734c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d16250de4a4c8a63ebf68095dfb18581b655734c/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "19aaf8141253101cf9d0dd9be6bb04de41ad3fbb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19aaf8141253101cf9d0dd9be6bb04de41ad3fbb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/19aaf8141253101cf9d0dd9be6bb04de41ad3fbb"}], "stats": {"total": 95, "additions": 56, "deletions": 39}, "files": [{"sha": "596d485ff0fe33d95d397d7343d9d1ee651ca1ba", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d16250de4a4c8a63ebf68095dfb18581b655734c/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d16250de4a4c8a63ebf68095dfb18581b655734c/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=d16250de4a4c8a63ebf68095dfb18581b655734c", "patch": "@@ -1,5 +1,9 @@\n 2019-05-02  Jonathan Wakely  <jwakely@redhat.com>\n \n+\t* include/bits/specfun.h: Improve docs.\n+\t* include/tr1/cmath: Likewise. Fix nesting of preprocessor conditions\n+\tand namespaces.\n+\n \t* doc/doxygen/doxygroups.cc (std::tr2, std::__gnu_cxx): Improve docs.\n \t(std::experimental): Add docs.\n \t* doc/doxygen/user.cfg.in (PREDEFINED): Expand macros for __cxx11"}, {"sha": "1ddac5773aedae93911bd22e05c39bb5e2ef1736", "filename": "libstdc++-v3/include/bits/specfun.h", "status": "modified", "additions": 22, "deletions": 17, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d16250de4a4c8a63ebf68095dfb18581b655734c/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fspecfun.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d16250de4a4c8a63ebf68095dfb18581b655734c/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fspecfun.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fspecfun.h?ref=d16250de4a4c8a63ebf68095dfb18581b655734c", "patch": "@@ -66,15 +66,13 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n    * @defgroup mathsf Mathematical Special Functions\n    * @ingroup numerics\n    *\n+   * @section mathsf_desc Mathematical Special Functions\n+   *\n    * A collection of advanced mathematical special functions,\n-   * defined by ISO/IEC IS 29124.\n-   * @{\n-   */\n-\n-  /**\n-   * @mainpage Mathematical Special Functions\n+   * defined by ISO/IEC IS 29124 and then added to ISO C++ 2017.\n    *\n-   * @section intro Introduction and History\n+   *\n+   * @subsection mathsf_intro Introduction and History\n    * The first significant library upgrade on the road to C++2011,\n    * <a href=\"http://www.open-std.org/JTC1/SC22/WG21/docs/papers/2005/n1836.pdf\">\n    * TR1</a>, included a set of 23 mathematical functions that significantly\n@@ -90,7 +88,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n    *\n    * For C++17 these functions were incorporated into the main standard.\n    *\n-   * @section contents Contents\n+   * @subsection mathsf_contents Contents\n    * The following functions are implemented in namespace @c std:\n    * - @ref assoc_laguerre \"assoc_laguerre - Associated Laguerre functions\"\n    * - @ref assoc_legendre \"assoc_legendre - Associated Legendre functions\"\n@@ -121,22 +119,22 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n    * - @ref __gnu_cxx::conf_hyperg \"conf_hyperg - Confluent hypergeometric functions\"\n    * - @ref __gnu_cxx::hyperg \"hyperg - Hypergeometric functions\"\n    *\n-   * @section general General Features\n+   * <!-- @subsection mathsf_general General Features -->\n    *\n-   * @subsection promotion Argument Promotion\n+   * @subsection mathsf_promotion Argument Promotion\n    * The arguments suppled to the non-suffixed functions will be promoted\n    * according to the following rules:\n    * 1. If any argument intended to be floating point is given an integral value\n    * That integral value is promoted to double.\n    * 2. All floating point arguments are promoted up to the largest floating\n    *    point precision among them.\n    *\n-   * @subsection NaN NaN Arguments\n+   * @subsection mathsf_NaN NaN Arguments\n    * If any of the floating point arguments supplied to these functions is\n    * invalid or NaN (std::numeric_limits<Tp>::quiet_NaN),\n    * the value NaN is returned.\n    *\n-   * @section impl Implementation\n+   * @subsection mathsf_impl Implementation\n    *\n    * We strive to implement the underlying math with type generic algorithms\n    * to the greatest extent possible.  In practice, the functions are thin\n@@ -149,23 +147,23 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n    * Similaryly, <tt>long double</tt> should give you more dynamic range\n    * and slightly more pecision than @c double on many systems.\n    *\n-   * @section testing Testing\n+   * @subsection mathsf_testing Testing\n    *\n    * These functions have been tested against equivalent implementations\n    * from the <a href=\"http://www.gnu.org/software/gsl\">\n    * Gnu Scientific Library, GSL</a> and\n-   * <a href=\"http://www.boost.org/doc/libs/1_60_0/libs/math/doc/html/index.html>Boost</a>\n+   * <a href=\"http://www.boost.org/doc/libs/1_60_0/libs/math/doc/html/index.html\">Boost</a>\n    * and the ratio\n    * @f[\n    *   \\frac{|f - f_{test}|}{|f_{test}|}\n    * @f]\n-   * is generally found to be within 10^-15 for 64-bit double on linux-x86_64 systems\n-   * over most of the ranges of validity.\n+   * is generally found to be within 10<sup>-15</sup> for 64-bit double on\n+   * linux-x86_64 systems over most of the ranges of validity.\n    * \n    * @todo Provide accuracy comparisons on a per-function basis for a small\n    *       number of targets.\n    *\n-   * @section bibliography General Bibliography\n+   * @subsection mathsf_bibliography General Bibliography\n    *\n    * @see Abramowitz and Stegun: Handbook of Mathematical Functions,\n    * with Formulas, Graphs, and Mathematical Tables\n@@ -192,6 +190,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n    *\n    * @see The Special Functions and Their Approximations: Volumes 1 and 2,\n    * by Yudell L. Luke, Academic Press, 1969\n+   *\n+   * @{\n    */\n \n   // Associated Laguerre polynomials\n@@ -1206,6 +1206,10 @@ namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)\n {\n _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n+  /** @addtogroup mathsf\n+   *  @{\n+   */\n+\n   // Airy functions\n \n   /**\n@@ -1376,6 +1380,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       return std::__detail::__hyperg<__type>(__a, __b, __c, __x);\n     }\n \n+  // @}\n _GLIBCXX_END_NAMESPACE_VERSION\n } // namespace __gnu_cxx\n #endif // __STRICT_ANSI__"}, {"sha": "3e7276bcf00878d96b5b2d0aef8e726eb5f47846", "filename": "libstdc++-v3/include/tr1/cmath", "status": "modified", "additions": 30, "deletions": 22, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d16250de4a4c8a63ebf68095dfb18581b655734c/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fcmath", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d16250de4a4c8a63ebf68095dfb18581b655734c/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fcmath", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fcmath?ref=d16250de4a4c8a63ebf68095dfb18581b655734c", "patch": "@@ -1126,16 +1126,25 @@ namespace tr1\n \n #endif // C++11\n \n+} // namespace tr1\n+_GLIBCXX_END_NAMESPACE_VERSION\n+} // namespace std\n+\n+/**\n+ * @defgroup tr1_math_spec_func TR1 Mathematical Special Functions\n+ * @ingroup numerics\n+ *\n+ * A collection of advanced mathematical special functions.\n+ */\n+\n #if _GLIBCXX_USE_STD_SPEC_FUNCS\n \n-  /**\n-   * @defgroup tr1_math_spec_func Mathematical Special Functions\n-   * @ingroup numerics\n-   *\n-   * A collection of advanced mathematical special functions.\n-   * @{\n-   */\n+namespace std _GLIBCXX_VISIBILITY(default)\n+{\n+_GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n+namespace tr1\n+{\n   using std::assoc_laguerref;\n   using std::assoc_laguerrel;\n   using std::assoc_laguerre;\n@@ -1220,15 +1229,12 @@ namespace tr1\n   using std::sph_neumannl;\n   using std::sph_neumann;\n \n-  /* @} */ // tr1_math_spec_func\n-\n-#else // ! _GLIBCXX_USE_STD_SPEC_FUNCS\n-\n } // namespace tr1\n-\n _GLIBCXX_END_NAMESPACE_VERSION\n } // namespace std\n \n+#else // ! _GLIBCXX_USE_STD_SPEC_FUNCS\n+\n #include <bits/stl_algobase.h>\n #include <limits>\n #include <tr1/type_traits>\n@@ -1247,15 +1253,10 @@ _GLIBCXX_END_NAMESPACE_VERSION\n namespace std _GLIBCXX_VISIBILITY(default)\n {\n _GLIBCXX_BEGIN_NAMESPACE_VERSION\n-\n namespace tr1\n-{\n-  /**\n-   * @defgroup tr1_math_spec_func Mathematical Special Functions\n-   * @ingroup numerics\n-   *\n-   * A collection of advanced mathematical special functions.\n-   * @{\n+  {\n+  /** @addtogroup tr1_math_spec_func\n+   *  @{\n    */\n \n   inline float\n@@ -1617,14 +1618,15 @@ namespace tr1\n       return __detail::__sph_neumann<__type>(__n, __x);\n     }\n \n-  /* @} */ // tr1_math_spec_func\n-#endif // _GLIBCXX_USE_STD_SPEC_FUNCS\n+  // @} tr1_math_spec_func\n \n } // namespace tr1\n \n _GLIBCXX_END_NAMESPACE_VERSION\n } // namespace std\n \n+#endif // _GLIBCXX_USE_STD_SPEC_FUNCS\n+\n #if _GLIBCXX_USE_STD_SPEC_FUNCS && !defined(__STRICT_ANSI__)\n namespace std _GLIBCXX_VISIBILITY(default)\n {\n@@ -1658,6 +1660,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n namespace tr1\n {\n+  /** @addtogroup tr1_math_spec_func\n+   *  @{\n+   */\n+\n   inline float\n   conf_hypergf(float __a, float __c, float __x)\n   { return __detail::__conf_hyperg<float>(__a, __c, __x); }\n@@ -1692,6 +1698,8 @@ namespace tr1\n       return __detail::__hyperg<__type>(__a, __b, __c, __x);\n     }\n \n+  // @} tr1_math_spec_func\n+\n } // namespace tr1\n \n _GLIBCXX_END_NAMESPACE_VERSION"}]}