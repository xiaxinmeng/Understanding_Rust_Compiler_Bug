{"sha": "57568d910cc8f333c9513ed9df37449e3ee97856", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTc1NjhkOTEwY2M4ZjMzM2M5NTEzZWQ5ZGYzNzQ0OWUzZWU5Nzg1Ng==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonber@gnat.com", "date": "2001-12-05T02:07:10Z"}, "committer": {"name": "Geert Bosch", "email": "bosch@gcc.gnu.org", "date": "2001-12-05T02:07:10Z"}, "message": "einfo.ads: Block_Node points to the identifier of the block...\n\n\t* einfo.ads: Block_Node points to the identifier of the block, not to\n\tthe block node itself, to preserve the link when the block is\n\trewritten, e.g. within an if-statement with a static condition.\n\n\t* inline.adb (Cleanup_Scopes): recover block statement from block\n\tentity using new meaning of Block_Node.\n\n\t* sem_ch5.adb (Analyze_Block_Statement): set Block_Node to point to\n\tidentifier of block node, rather than to node itself.\n\nFrom-SVN: r47649", "tree": {"sha": "41fa677b75bc4e9d96cdf8e68f525654d05c5f22", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/41fa677b75bc4e9d96cdf8e68f525654d05c5f22"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/57568d910cc8f333c9513ed9df37449e3ee97856", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57568d910cc8f333c9513ed9df37449e3ee97856", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57568d910cc8f333c9513ed9df37449e3ee97856", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57568d910cc8f333c9513ed9df37449e3ee97856/comments", "author": null, "committer": null, "parents": [{"sha": "0815d36a987898b2e76fabb53f76d895be7769ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0815d36a987898b2e76fabb53f76d895be7769ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0815d36a987898b2e76fabb53f76d895be7769ad"}], "stats": {"total": 27, "additions": 23, "deletions": 4}, "files": [{"sha": "cfe75b91e923f98c42724d72ebd2131b3f4fb6cf", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57568d910cc8f333c9513ed9df37449e3ee97856/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57568d910cc8f333c9513ed9df37449e3ee97856/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=57568d910cc8f333c9513ed9df37449e3ee97856", "patch": "@@ -1,3 +1,15 @@\n+2001-12-04  Ed Schonberg <schonber@gnat.com>\n+\n+\t* einfo.ads: Block_Node points to the identifier of the block, not to \n+\tthe block node itself, to preserve the link when the block is \n+\trewritten, e.g. within an if-statement with a static condition. \n+\t\n+\t* inline.adb (Cleanup_Scopes): recover block statement from block \n+\tentity using new meaning of Block_Node.\n+\t\n+\t* sem_ch5.adb (Analyze_Block_Statement): set Block_Node to point to \n+\tidentifier of block node, rather than to node itself.\n+\n 2001-12-04  Gary Dismukes <dismukes@gnat.com>\n \t\n \t* layout.adb:"}, {"sha": "af3c131c963082c7120fd48ac405fe07d808230a", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57568d910cc8f333c9513ed9df37449e3ee97856/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57568d910cc8f333c9513ed9df37449e3ee97856/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=57568d910cc8f333c9513ed9df37449e3ee97856", "patch": "@@ -394,7 +394,14 @@ package Einfo is\n --       returns the entity unchanged.\n \n --    Block_Node (Node11)\n---       Present in block entities. Points to the Block_Statement itself.\n+--       Present in block entities. Points to the identifier in the\n+--       Block_Statement itself. Used when retrieving the block construct\n+--       for finalization purposes, The block entity has an implicit label\n+--       declaration in the enclosing declarative part, and has otherwise\n+--       no direct connection in the tree with the block statement.\n+--       The link is to the identifier (which is an occurence of the entity)\n+--       and not to the block_statement itself, because the statement may\n+--       be rewritten, e.g. in the process of removing dead code.\n \n --    Body_Entity (Node19)\n --       Present in package and generic package entities, points to the"}, {"sha": "84a08ac659ed89e5113735a108c66d196e1eba0c", "filename": "gcc/ada/inline.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57568d910cc8f333c9513ed9df37449e3ee97856/gcc%2Fada%2Finline.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57568d910cc8f333c9513ed9df37449e3ee97856/gcc%2Fada%2Finline.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finline.adb?ref=57568d910cc8f333c9513ed9df37449e3ee97856", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                            $Revision: 1.55 $\n+--                            $Revision$\n --                                                                          --\n --          Copyright (C) 1992-2001 Free Software Foundation, Inc.          --\n --                                                                          --\n@@ -672,7 +672,7 @@ package body Inline is\n          end if;\n \n          if Ekind (Scop) = E_Block then\n-            Decl := Block_Node (Scop);\n+            Decl := Parent (Block_Node (Scop));\n \n          else\n             Decl := Unit_Declaration_Node (Scop);"}, {"sha": "fcb7c78e795dd61da00dd2343c7b1fbf92f75fc2", "filename": "gcc/ada/sem_ch5.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57568d910cc8f333c9513ed9df37449e3ee97856/gcc%2Fada%2Fsem_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57568d910cc8f333c9513ed9df37449e3ee97856/gcc%2Fada%2Fsem_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch5.adb?ref=57568d910cc8f333c9513ed9df37449e3ee97856", "patch": "@@ -427,7 +427,7 @@ package body Sem_Ch5 is\n       end if;\n \n       Set_Etype (Ent, Standard_Void_Type);\n-      Set_Block_Node (Ent, N);\n+      Set_Block_Node (Ent, Identifier (N));\n       New_Scope (Ent);\n \n       if Present (Decls) then"}]}