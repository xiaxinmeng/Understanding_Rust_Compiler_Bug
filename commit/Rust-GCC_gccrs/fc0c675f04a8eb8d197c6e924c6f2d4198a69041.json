{"sha": "fc0c675f04a8eb8d197c6e924c6f2d4198a69041", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmMwYzY3NWYwNGE4ZWI4ZDE5N2M2ZTkyNGM2ZjJkNDE5OGE2OTA0MQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-05-06T19:41:35Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-05-06T19:41:35Z"}, "message": "(truthvalue_conversion, case ADDR_EXPR): Don't treat address of\nexternal decl as always nonzero.\n\nFrom-SVN: r11941", "tree": {"sha": "b7c3068c5cd0dc096f0504f078d57356136e08eb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b7c3068c5cd0dc096f0504f078d57356136e08eb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fc0c675f04a8eb8d197c6e924c6f2d4198a69041", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc0c675f04a8eb8d197c6e924c6f2d4198a69041", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fc0c675f04a8eb8d197c6e924c6f2d4198a69041", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc0c675f04a8eb8d197c6e924c6f2d4198a69041/comments", "author": null, "committer": null, "parents": [{"sha": "2786cbadc7943950874df60f65da3f6a081162d9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2786cbadc7943950874df60f65da3f6a081162d9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2786cbadc7943950874df60f65da3f6a081162d9"}], "stats": {"total": 6, "additions": 6, "deletions": 0}, "files": [{"sha": "8a834dd072f1aa6e9d1fe6f547d446e92f3ca3ef", "filename": "gcc/c-common.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc0c675f04a8eb8d197c6e924c6f2d4198a69041/gcc%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc0c675f04a8eb8d197c6e924c6f2d4198a69041/gcc%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.c?ref=fc0c675f04a8eb8d197c6e924c6f2d4198a69041", "patch": "@@ -2080,6 +2080,12 @@ truthvalue_conversion (expr)\n       return real_zerop (expr) ? boolean_false_node : boolean_true_node;\n \n     case ADDR_EXPR:\n+      /* If we are taking the address of a external decl, it might be zero\n+\t if it is weak, so we cannot optimize.  */\n+      if (TREE_CODE_CLASS (TREE_CODE (TREE_OPERAND (expr, 0))) == 'd'\n+\t  && DECL_EXTERNAL (TREE_OPERAND (expr, 0)))\n+\tbreak;\n+\n       if (TREE_SIDE_EFFECTS (TREE_OPERAND (expr, 0)))\n \treturn build (COMPOUND_EXPR, boolean_type_node,\n \t\t      TREE_OPERAND (expr, 0), boolean_true_node);"}]}