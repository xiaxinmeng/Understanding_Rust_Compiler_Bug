{"sha": "250a60f3879d2d508d0d08e9da1dfa1648e1a369", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjUwYTYwZjM4NzlkMmQ1MDhkMGQwOGU5ZGExZGZhMTY0OGUxYTM2OQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@linaro.org", "date": "2017-10-13T09:53:00Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2017-10-13T09:53:00Z"}, "message": "Make more use of GET_MODE_UNIT_BITSIZE\n\nThis patch is like the previous GET_MODE_UNIT_SIZE one,\nbut for bit rather than byte sizes.\n\n2017-10-13  Richard Sandiford  <richard.sandiford@linaro.org>\n\t    Alan Hayward  <alan.hayward@arm.com>\n\t    David Sherwood  <david.sherwood@arm.com>\n\ngcc/\n\t* cfgexpand.c (expand_debug_expr): Use GET_MODE_UNIT_BITSIZE.\n\t(expand_debug_source_expr): Likewise.\n\t* combine.c (combine_simplify_rtx): Likewise.\n\t* cse.c (fold_rtx): Likewise.\n\t* fwprop.c (canonicalize_address): Likewise.\n\t* targhooks.c (default_shift_truncation_mask): Likewise.\n\nCo-Authored-By: Alan Hayward <alan.hayward@arm.com>\nCo-Authored-By: David Sherwood <david.sherwood@arm.com>\n\nFrom-SVN: r253716", "tree": {"sha": "fc2db3da8cc97b1a2250ffa755f81ed79f7052be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fc2db3da8cc97b1a2250ffa755f81ed79f7052be"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/250a60f3879d2d508d0d08e9da1dfa1648e1a369", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/250a60f3879d2d508d0d08e9da1dfa1648e1a369", "html_url": "https://github.com/Rust-GCC/gccrs/commit/250a60f3879d2d508d0d08e9da1dfa1648e1a369", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/250a60f3879d2d508d0d08e9da1dfa1648e1a369/comments", "author": null, "committer": null, "parents": [{"sha": "fb98441af9c84caef6a0e3210ace4b8ffc7e3840", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb98441af9c84caef6a0e3210ace4b8ffc7e3840", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb98441af9c84caef6a0e3210ace4b8ffc7e3840"}], "stats": {"total": 39, "additions": 28, "deletions": 11}, "files": [{"sha": "0e29ae8a95d363c7e8e7b80f2a2d0e02e3ec0c09", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/250a60f3879d2d508d0d08e9da1dfa1648e1a369/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/250a60f3879d2d508d0d08e9da1dfa1648e1a369/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=250a60f3879d2d508d0d08e9da1dfa1648e1a369", "patch": "@@ -1,3 +1,14 @@\n+2017-10-13  Richard Sandiford  <richard.sandiford@linaro.org>\n+\t    Alan Hayward  <alan.hayward@arm.com>\n+\t    David Sherwood  <david.sherwood@arm.com>\n+\n+\t* cfgexpand.c (expand_debug_expr): Use GET_MODE_UNIT_BITSIZE.\n+\t(expand_debug_source_expr): Likewise.\n+\t* combine.c (combine_simplify_rtx): Likewise.\n+\t* cse.c (fold_rtx): Likewise.\n+\t* fwprop.c (canonicalize_address): Likewise.\n+\t* targhooks.c (default_shift_truncation_mask): Likewise.\n+\n 2017-10-13  Richard Sandiford  <richard.sandiford@linaro.org>\n \t    Alan Hayward  <alan.hayward@arm.com>\n \t    David Sherwood  <david.sherwood@arm.com>"}, {"sha": "be93c5843e50c6157edd61437240c9f578152540", "filename": "gcc/cfgexpand.c", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/250a60f3879d2d508d0d08e9da1dfa1648e1a369/gcc%2Fcfgexpand.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/250a60f3879d2d508d0d08e9da1dfa1648e1a369/gcc%2Fcfgexpand.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgexpand.c?ref=250a60f3879d2d508d0d08e9da1dfa1648e1a369", "patch": "@@ -4326,9 +4326,11 @@ expand_debug_expr (tree exp)\n \n \tif (FLOAT_MODE_P (mode) && FLOAT_MODE_P (inner_mode))\n \t  {\n-\t    if (GET_MODE_BITSIZE (mode) == GET_MODE_BITSIZE (inner_mode))\n+\t    if (GET_MODE_UNIT_BITSIZE (mode)\n+\t\t== GET_MODE_UNIT_BITSIZE (inner_mode))\n \t      op0 = simplify_gen_subreg (mode, op0, inner_mode, 0);\n-\t    else if (GET_MODE_BITSIZE (mode) < GET_MODE_BITSIZE (inner_mode))\n+\t    else if (GET_MODE_UNIT_BITSIZE (mode)\n+\t\t     < GET_MODE_UNIT_BITSIZE (inner_mode))\n \t      op0 = simplify_gen_unary (FLOAT_TRUNCATE, mode, op0, inner_mode);\n \t    else\n \t      op0 = simplify_gen_unary (FLOAT_EXTEND, mode, op0, inner_mode);\n@@ -5191,9 +5193,11 @@ expand_debug_source_expr (tree exp)\n \n   if (FLOAT_MODE_P (mode) && FLOAT_MODE_P (inner_mode))\n     {\n-      if (GET_MODE_BITSIZE (mode) == GET_MODE_BITSIZE (inner_mode))\n+      if (GET_MODE_UNIT_BITSIZE (mode)\n+\t  == GET_MODE_UNIT_BITSIZE (inner_mode))\n \top0 = simplify_gen_subreg (mode, op0, inner_mode, 0);\n-      else if (GET_MODE_BITSIZE (mode) < GET_MODE_BITSIZE (inner_mode))\n+      else if (GET_MODE_UNIT_BITSIZE (mode)\n+\t       < GET_MODE_UNIT_BITSIZE (inner_mode))\n \top0 = simplify_gen_unary (FLOAT_TRUNCATE, mode, op0, inner_mode);\n       else\n \top0 = simplify_gen_unary (FLOAT_EXTEND, mode, op0, inner_mode);"}, {"sha": "aa246e67babd1128b60fdad2449ef624a78e3d1c", "filename": "gcc/combine.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/250a60f3879d2d508d0d08e9da1dfa1648e1a369/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/250a60f3879d2d508d0d08e9da1dfa1648e1a369/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=250a60f3879d2d508d0d08e9da1dfa1648e1a369", "patch": "@@ -6304,7 +6304,8 @@ combine_simplify_rtx (rtx x, machine_mode op0_mode, int in_dest,\n \tSUBST (XEXP (x, 1),\n \t       force_to_mode (XEXP (x, 1), GET_MODE (XEXP (x, 1)),\n \t\t\t      (HOST_WIDE_INT_1U\n-\t\t\t       << exact_log2 (GET_MODE_BITSIZE (GET_MODE (x))))\n+\t\t\t       << exact_log2 (GET_MODE_UNIT_BITSIZE\n+\t\t\t\t\t      (GET_MODE (x))))\n \t\t\t      - 1,\n \t\t\t      0));\n       break;"}, {"sha": "25653ac77bb0d9b702f4235099b4411220371a23", "filename": "gcc/cse.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/250a60f3879d2d508d0d08e9da1dfa1648e1a369/gcc%2Fcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/250a60f3879d2d508d0d08e9da1dfa1648e1a369/gcc%2Fcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcse.c?ref=250a60f3879d2d508d0d08e9da1dfa1648e1a369", "patch": "@@ -3612,7 +3612,7 @@ fold_rtx (rtx x, rtx_insn *insn)\n \t\t{\n \t\t  if (SHIFT_COUNT_TRUNCATED)\n \t\t    canon_const_arg1 = GEN_INT (INTVAL (const_arg1)\n-\t\t\t\t\t\t& (GET_MODE_BITSIZE (mode)\n+\t\t\t\t\t\t& (GET_MODE_UNIT_BITSIZE (mode)\n \t\t\t\t\t\t   - 1));\n \t\t  else\n \t\t    break;\n@@ -3661,7 +3661,8 @@ fold_rtx (rtx x, rtx_insn *insn)\n \t\t{\n \t\t  if (SHIFT_COUNT_TRUNCATED)\n \t\t    inner_const = GEN_INT (INTVAL (inner_const)\n-\t\t\t\t\t   & (GET_MODE_BITSIZE (mode) - 1));\n+\t\t\t\t\t   & (GET_MODE_UNIT_BITSIZE (mode)\n+\t\t\t\t\t      - 1));\n \t\t  else\n \t\t    break;\n \t\t}\n@@ -3691,7 +3692,7 @@ fold_rtx (rtx x, rtx_insn *insn)\n \t\t  /* As an exception, we can turn an ASHIFTRT of this\n \t\t     form into a shift of the number of bits - 1.  */\n \t\t  if (code == ASHIFTRT)\n-\t\t    new_const = GEN_INT (GET_MODE_BITSIZE (mode) - 1);\n+\t\t    new_const = GEN_INT (GET_MODE_UNIT_BITSIZE (mode) - 1);\n \t\t  else if (!side_effects_p (XEXP (y, 0)))\n \t\t    return CONST0_RTX (mode);\n \t\t  else"}, {"sha": "b77006b48019d87a229a80fff819e75338d27aa3", "filename": "gcc/fwprop.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/250a60f3879d2d508d0d08e9da1dfa1648e1a369/gcc%2Ffwprop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/250a60f3879d2d508d0d08e9da1dfa1648e1a369/gcc%2Ffwprop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffwprop.c?ref=250a60f3879d2d508d0d08e9da1dfa1648e1a369", "patch": "@@ -357,8 +357,8 @@ canonicalize_address (rtx x)\n       {\n       case ASHIFT:\n         if (CONST_INT_P (XEXP (x, 1))\n-            && INTVAL (XEXP (x, 1)) < GET_MODE_BITSIZE (GET_MODE (x))\n-            && INTVAL (XEXP (x, 1)) >= 0)\n+\t    && INTVAL (XEXP (x, 1)) < GET_MODE_UNIT_BITSIZE (GET_MODE (x))\n+\t    && INTVAL (XEXP (x, 1)) >= 0)\n \t  {\n \t    HOST_WIDE_INT shift = INTVAL (XEXP (x, 1));\n \t    PUT_CODE (x, MULT);"}, {"sha": "ae2595113f89120a694e0ebb06bcf9424412be2a", "filename": "gcc/targhooks.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/250a60f3879d2d508d0d08e9da1dfa1648e1a369/gcc%2Ftarghooks.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/250a60f3879d2d508d0d08e9da1dfa1648e1a369/gcc%2Ftarghooks.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftarghooks.c?ref=250a60f3879d2d508d0d08e9da1dfa1648e1a369", "patch": "@@ -245,7 +245,7 @@ default_unwind_word_mode (void)\n unsigned HOST_WIDE_INT\n default_shift_truncation_mask (machine_mode mode)\n {\n-  return SHIFT_COUNT_TRUNCATED ? GET_MODE_BITSIZE (mode) - 1 : 0;\n+  return SHIFT_COUNT_TRUNCATED ? GET_MODE_UNIT_BITSIZE (mode) - 1 : 0;\n }\n \n /* The default implementation of TARGET_MIN_DIVISIONS_FOR_RECIP_MUL.  */"}]}