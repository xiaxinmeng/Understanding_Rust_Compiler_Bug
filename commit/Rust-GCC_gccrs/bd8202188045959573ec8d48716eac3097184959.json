{"sha": "bd8202188045959573ec8d48716eac3097184959", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmQ4MjAyMTg4MDQ1OTU5NTczZWM4ZDQ4NzE2ZWFjMzA5NzE4NDk1OQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2011-08-06T17:38:04Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2011-08-06T17:38:04Z"}, "message": "test-expandargv.c (writeout_test): Check result of fwrite.\n\n\t* testsuite/test-expandargv.c (writeout_test): Check result of fwrite.\n\nFrom-SVN: r177529", "tree": {"sha": "98208d7c3fe93d7908f55ce89f8251c3954eeeea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/98208d7c3fe93d7908f55ce89f8251c3954eeeea"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bd8202188045959573ec8d48716eac3097184959", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd8202188045959573ec8d48716eac3097184959", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd8202188045959573ec8d48716eac3097184959", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd8202188045959573ec8d48716eac3097184959/comments", "author": null, "committer": null, "parents": [{"sha": "bc336d6308e600f2cff5be634cfc4e16c8ac0d38", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc336d6308e600f2cff5be634cfc4e16c8ac0d38", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bc336d6308e600f2cff5be634cfc4e16c8ac0d38"}], "stats": {"total": 39, "additions": 23, "deletions": 16}, "files": [{"sha": "fe9da85587f462be343fb90498aec25f9f5a5897", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 18, "deletions": 14, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd8202188045959573ec8d48716eac3097184959/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd8202188045959573ec8d48716eac3097184959/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=bd8202188045959573ec8d48716eac3097184959", "patch": "@@ -1,3 +1,7 @@\n+2011-08-06  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* testsuite/test-expandargv.c (writeout_test): Check result of fwrite.\n+\n 2011-08-01  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/49932\n@@ -582,7 +586,7 @@\n \n 2009-05-29  Kai Tietz  <kai.tietz@onevision.com>\n \n-        * pex-win32.c (pex_win32_fdopenr): Set INHERIT to false.\n+\t* pex-win32.c (pex_win32_fdopenr): Set INHERIT to false.\n \n 2009-05-29  Michael Matz  <matz@suse.de>\n \n@@ -613,7 +617,7 @@\n \n 2009-04-29  Julian Brown  <julian@codesourcery.com>\n \n-\t* pex-win32.c (pex_win32_pipe): Add _O_NOINHERIT.    \n+\t* pex-win32.c (pex_win32_pipe): Add _O_NOINHERIT.\n \t(pex_win32_exec_child): Ensure each process has only one handle open\n \ton pipe endpoints. Close standard input after creating child for\n \tsymmetry with standard output/standard error.\n@@ -631,22 +635,22 @@\n \tsection, so that the native build does detect them at configure\n \ttime.\n \t* configure: Regenerated.\n-\t\n+\n 2009-04-13  Ozkan Sezer  <sezeroz@gmail.com>\n \n-        PR target/39397\n-        * pex-common.h (struct pex_obj): Store pid values as pid_t,\n-        not as long (members *children and (*wait))\n-        * pex-common.c (pex_run_in_environment): Likewise.\n-        * pex-win32.c (pex_win32_wait): Return pid_t and properly check\n-        returned pid value.\n-        * pex-djgpp.c (pex_djgpp_wait): Return pid_t.\n-        * pex-msdos.c (pex_msdos_wait): Likewise.\n+\tPR target/39397\n+\t* pex-common.h (struct pex_obj): Store pid values as pid_t,\n+\tnot as long (members *children and (*wait))\n+\t* pex-common.c (pex_run_in_environment): Likewise.\n+\t* pex-win32.c (pex_win32_wait): Return pid_t and properly check\n+\treturned pid value.\n+\t* pex-djgpp.c (pex_djgpp_wait): Return pid_t.\n+\t* pex-msdos.c (pex_msdos_wait): Likewise.\n \n 2009-04-07  Arnaud Patard <apatard@mandriva.com>\n \n-       * libiberty/configure.ac: Fix Linux/MIPS matching rule.\n-       * libiberty/configure: Regenerate.\n+\t* libiberty/configure.ac: Fix Linux/MIPS matching rule.\n+\t* libiberty/configure: Regenerate.\n \n 2009-03-27  Ian Lance Taylor  <iant@google.com>\n \n@@ -731,7 +735,7 @@\n 2008-10-08  David Edelsohn  <edelsohn@gnu.org>\n \n \t* xstrdup.c: Include <sys/types.h> after \"config.h\"\n- \n+\n 2008-10-07  Jan Kratochvil  <jan.kratochvil@redhat.com>\n \n \t* configure.ac: Call AC_SYS_LARGEFILE."}, {"sha": "dff20d41daff414f0d125f1f814bca0eed3b9ed9", "filename": "libiberty/testsuite/test-expandargv.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd8202188045959573ec8d48716eac3097184959/libiberty%2Ftestsuite%2Ftest-expandargv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd8202188045959573ec8d48716eac3097184959/libiberty%2Ftestsuite%2Ftest-expandargv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Ftestsuite%2Ftest-expandargv.c?ref=bd8202188045959573ec8d48716eac3097184959", "patch": "@@ -189,7 +189,7 @@ writeout_test (int test, const char * test_data)\n {\n   char filename[256];\n   FILE *fd;\n-  size_t len;\n+  size_t len, sys_fwrite;\n   char * parse;\n \n   /* Unique filename per test */\n@@ -208,7 +208,10 @@ writeout_test (int test, const char * test_data)\n   /* Run all possible replaces */\n   run_replaces (parse);\n \n-  fwrite (parse, len, sizeof (char), fd);\n+  sys_fwrite = fwrite (parse, sizeof (char), len, fd);\n+  if (sys_fwrite != len)\n+    fatal_error (__LINE__, \"Failed to write to test file.\", errno);\n+\n   free (parse);\n   fclose (fd);\n }"}]}