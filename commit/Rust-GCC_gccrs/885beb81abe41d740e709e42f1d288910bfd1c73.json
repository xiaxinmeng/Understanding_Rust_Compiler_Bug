{"sha": "885beb81abe41d740e709e42f1d288910bfd1c73", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODg1YmViODFhYmU0MWQ3NDBlNzA5ZTQyZjFkMjg4OTEwYmZkMWM3Mw==", "commit": {"author": {"name": "Per Bothner", "email": "per@bothner.com", "date": "2005-06-13T19:30:47Z"}, "committer": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "2005-06-13T19:30:47Z"}, "message": "expr.c (int highest_label_pc_this_method, [...]): New globals.\n\n\n\t* expr.c (int highest_label_pc_this_method,\n\tstart_label_pc_this_method): New globals.\n\t(lookup_label): Add start_label_pc_this_method to pc for label, and\n\tupdate highest_label_pc_this_method.  This prevents conflicts between\n\tlabels from different methods.\n\t* java-tree.h: Declare new globals.\n\t* jcf-parse.c (parse_class_file): If needed bump\n\tstart_label_pc_this_method and reset highest_label_pc_this_method.\n\nFrom-SVN: r100896", "tree": {"sha": "381fbfa6314b752218f977d1bb3a01148c26892e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/381fbfa6314b752218f977d1bb3a01148c26892e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/885beb81abe41d740e709e42f1d288910bfd1c73", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/885beb81abe41d740e709e42f1d288910bfd1c73", "html_url": "https://github.com/Rust-GCC/gccrs/commit/885beb81abe41d740e709e42f1d288910bfd1c73", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/885beb81abe41d740e709e42f1d288910bfd1c73/comments", "author": {"login": "PerBothner", "id": 10293361, "node_id": "MDQ6VXNlcjEwMjkzMzYx", "avatar_url": "https://avatars.githubusercontent.com/u/10293361?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PerBothner", "html_url": "https://github.com/PerBothner", "followers_url": "https://api.github.com/users/PerBothner/followers", "following_url": "https://api.github.com/users/PerBothner/following{/other_user}", "gists_url": "https://api.github.com/users/PerBothner/gists{/gist_id}", "starred_url": "https://api.github.com/users/PerBothner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PerBothner/subscriptions", "organizations_url": "https://api.github.com/users/PerBothner/orgs", "repos_url": "https://api.github.com/users/PerBothner/repos", "events_url": "https://api.github.com/users/PerBothner/events{/privacy}", "received_events_url": "https://api.github.com/users/PerBothner/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a1b6a5910bb7a4db753e0cbc28e4c9496e40fc13", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1b6a5910bb7a4db753e0cbc28e4c9496e40fc13", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a1b6a5910bb7a4db753e0cbc28e4c9496e40fc13"}], "stats": {"total": 42, "additions": 41, "deletions": 1}, "files": [{"sha": "320be475713e06928a178d5c22b72306da0b6578", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/885beb81abe41d740e709e42f1d288910bfd1c73/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/885beb81abe41d740e709e42f1d288910bfd1c73/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=885beb81abe41d740e709e42f1d288910bfd1c73", "patch": "@@ -1,3 +1,14 @@\n+2005-06-13  Per Bothner  <per@bothner.com>\n+\n+\t* expr.c (int highest_label_pc_this_method,\n+\tstart_label_pc_this_method): New globals.\n+\t(lookup_label): Add start_label_pc_this_method to pc for label, and\n+\tupdate highest_label_pc_this_method.  This prevents conflicts between\n+\tlabels from different methods.\n+\t* java-tree.h: Declare new globals.\n+\t* jcf-parse.c (parse_class_file): If needed bump\n+\tstart_label_pc_this_method and reset highest_label_pc_this_method.\n+\n 2005-06-13  Tom Tromey  <tromey@redhat.com>\n \n \tPR java/21844:"}, {"sha": "90f8ff404602cd08f8b0c8631a0b80657d03580b", "filename": "gcc/java/expr.c", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/885beb81abe41d740e709e42f1d288910bfd1c73/gcc%2Fjava%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/885beb81abe41d740e709e42f1d288910bfd1c73/gcc%2Fjava%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fexpr.c?ref=885beb81abe41d740e709e42f1d288910bfd1c73", "patch": "@@ -138,6 +138,12 @@ int stack_pointer;\n const unsigned char *linenumber_table;\n int linenumber_count;\n \n+/* Largest pc so far in this method that has been passed to lookup_label. */\n+int highest_label_pc_this_method = -1;\n+\n+/* Base value for this method to add to pc to get generated label. */\n+int start_label_pc_this_method = 0;\n+\n void\n init_expr_processing (void)\n {\n@@ -1766,7 +1772,9 @@ lookup_label (int pc)\n {\n   tree name;\n   char buf[32];\n-  ASM_GENERATE_INTERNAL_LABEL(buf, \"LJpc=\", pc);\n+  if (pc > highest_label_pc_this_method)\n+    highest_label_pc_this_method = pc;\n+  ASM_GENERATE_INTERNAL_LABEL(buf, \"LJpc=\", start_label_pc_this_method + pc);\n   name = get_identifier (buf);\n   if (IDENTIFIER_LOCAL_VALUE (name))\n     return IDENTIFIER_LOCAL_VALUE (name);"}, {"sha": "5651dc3f64309b1604edaffc1588438b6bbc3eb6", "filename": "gcc/java/java-tree.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/885beb81abe41d740e709e42f1d288910bfd1c73/gcc%2Fjava%2Fjava-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/885beb81abe41d740e709e42f1d288910bfd1c73/gcc%2Fjava%2Fjava-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjava-tree.h?ref=885beb81abe41d740e709e42f1d288910bfd1c73", "patch": "@@ -234,6 +234,12 @@ extern int always_initialize_class_p;\n \n extern int flag_verify_invocations;\n \n+/* Largest pc so far in this method that has been passed to lookup_label. */\n+extern int highest_label_pc_this_method;\n+\n+/* Base value for this method to add to pc to get generated label. */\n+extern int start_label_pc_this_method;\n+\n typedef struct CPool constant_pool;\n \n #define CONSTANT_ResolvedFlag 16"}, {"sha": "29c257fe951a947588408f8f26288df7ec44c5f3", "filename": "gcc/java/jcf-parse.c", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/885beb81abe41d740e709e42f1d288910bfd1c73/gcc%2Fjava%2Fjcf-parse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/885beb81abe41d740e709e42f1d288910bfd1c73/gcc%2Fjava%2Fjcf-parse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjcf-parse.c?ref=885beb81abe41d740e709e42f1d288910bfd1c73", "patch": "@@ -929,6 +929,21 @@ parse_class_file (void)\n \n       give_name_to_locals (jcf);\n \n+      /* Bump up start_label_pc_this_method so we get a unique label number\n+\t and reset highest_label_pc_this_method. */\n+      if (highest_label_pc_this_method >= 0)\n+\t{\n+\t  /* We adjust to the next multiple of 1000.  This is just a frill\n+\t     so the last 3 digits of the label number match the bytecode\n+\t     offset, which might make debugging marginally more convenient. */\n+\t  start_label_pc_this_method\n+\t    = ((((start_label_pc_this_method + highest_label_pc_this_method)\n+\t\t / 1000)\n+\t\t+ 1)\n+\t       * 1000);\n+\t  highest_label_pc_this_method = -1;\n+\t}\n+\n       /* Convert bytecode to trees.  */\n       expand_byte_code (jcf, method);\n "}]}