{"sha": "3469bd8660b6c79a4727287ef4214d2b9c864ba6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzQ2OWJkODY2MGI2Yzc5YTQ3MjcyODdlZjQyMTRkMmI5Yzg2NGJhNg==", "commit": {"author": {"name": "Janne Blomqvist", "email": "jb@gcc.gnu.org", "date": "2011-10-31T14:52:26Z"}, "committer": {"name": "Janne Blomqvist", "email": "jb@gcc.gnu.org", "date": "2011-10-31T14:52:26Z"}, "message": "Introduce a size member function to struct stream.\n\n2011-10-31  Janne Blomqvist  <jb@gcc.gnu.org>\n\n\t* io/unix.h (struct stream): Add size function pointer.\n\t(ssize): New inline function.\n\t(file_length): Remove prototype.\n\t* io/unix.c (raw_size): New function.\n\t(raw_init): Initialize st.size pointer.\n\t(buf_size): New function.\n\t(buf_init): Initialize st.size pointer.\n\t(open_internal): Likewise.\n\t(open_internal4): Likewise.\n\t(file_length): Remove function.\n\t* io/file_pos.c (st_rewind): Use ssize instead of file_length.\n\t* io/open.c (test_endfile): Likewise.\n\t* io/transfer.c (data_transfer_init): Likewise.\n\t(next_record_r): Likewise.\n\t(next_record_w): Likewise.\n\t* io/unit.c (update_position): Likewise.\n\nFrom-SVN: r180702", "tree": {"sha": "9abe59faaeca5c3b0989af7c8a5b04030589fb90", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9abe59faaeca5c3b0989af7c8a5b04030589fb90"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3469bd8660b6c79a4727287ef4214d2b9c864ba6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3469bd8660b6c79a4727287ef4214d2b9c864ba6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3469bd8660b6c79a4727287ef4214d2b9c864ba6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3469bd8660b6c79a4727287ef4214d2b9c864ba6/comments", "author": null, "committer": null, "parents": [{"sha": "7d5ee219357f0ec4e9d67285eec50677ff2583ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d5ee219357f0ec4e9d67285eec50677ff2583ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d5ee219357f0ec4e9d67285eec50677ff2583ce"}], "stats": {"total": 80, "additions": 56, "deletions": 24}, "files": [{"sha": "68ff646e4b671c3b9fa99a3023bf36859467df31", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3469bd8660b6c79a4727287ef4214d2b9c864ba6/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3469bd8660b6c79a4727287ef4214d2b9c864ba6/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=3469bd8660b6c79a4727287ef4214d2b9c864ba6", "patch": "@@ -1,3 +1,22 @@\n+2011-10-31  Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+\t* io/unix.h (struct stream): Add size function pointer.\n+\t(ssize): New inline function.\n+\t(file_length): Remove prototype.\n+\t* io/unix.c (raw_size): New function.\n+\t(raw_init): Initialize st.size pointer.\n+\t(buf_size): New function.\n+\t(buf_init): Initialize st.size pointer.\n+\t(open_internal): Likewise.\n+\t(open_internal4): Likewise.\n+\t(file_length): Remove function.\n+\t* io/file_pos.c (st_rewind): Use ssize instead of file_length.\n+\t* io/open.c (test_endfile): Likewise.\n+\t* io/transfer.c (data_transfer_init): Likewise.\n+\t(next_record_r): Likewise.\n+\t(next_record_w): Likewise.\n+\t* io/unit.c (update_position): Likewise.\n+\n 2011-10-31  Janne Blomqvist  <jb@gcc.gnu.org>\n \n \t* io/file_pos.c (st_rewind): Handle regular and special files"}, {"sha": "c8ecc3ad66e22d42b297d34c7287696c2784241a", "filename": "libgfortran/io/file_pos.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3469bd8660b6c79a4727287ef4214d2b9c864ba6/libgfortran%2Fio%2Ffile_pos.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3469bd8660b6c79a4727287ef4214d2b9c864ba6/libgfortran%2Fio%2Ffile_pos.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Ffile_pos.c?ref=3469bd8660b6c79a4727287ef4214d2b9c864ba6", "patch": "@@ -408,7 +408,7 @@ st_rewind (st_parameter_filepos *fpp)\n \t    generate_error (&fpp->common, LIBERROR_OS, NULL);\n \n \t  /* Set this for compatibilty with g77 for /dev/null.  */\n-\t  if (file_length (u->s) == 0)\n+\t  if (ssize (u->s) == 0)\n \t    u->endfile = AT_ENDFILE;\n \t  else\n \t    {"}, {"sha": "0102b9cf99f6e0bc3d59f55597b053a45bf31dad", "filename": "libgfortran/io/open.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3469bd8660b6c79a4727287ef4214d2b9c864ba6/libgfortran%2Fio%2Fopen.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3469bd8660b6c79a4727287ef4214d2b9c864ba6/libgfortran%2Fio%2Fopen.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Fopen.c?ref=3469bd8660b6c79a4727287ef4214d2b9c864ba6", "patch": "@@ -153,7 +153,7 @@ static const st_option async_opt[] =\n static void\n test_endfile (gfc_unit * u)\n {\n-  if (u->endfile == NO_ENDFILE && file_length (u->s) == stell (u->s))\n+  if (u->endfile == NO_ENDFILE && ssize (u->s) == stell (u->s))\n     u->endfile = AT_ENDFILE;\n }\n "}, {"sha": "26263aef0ae3d051d0e1892fe06a1c11ace8f0a8", "filename": "libgfortran/io/transfer.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3469bd8660b6c79a4727287ef4214d2b9c864ba6/libgfortran%2Fio%2Ftransfer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3469bd8660b6c79a4727287ef4214d2b9c864ba6/libgfortran%2Fio%2Ftransfer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Ftransfer.c?ref=3469bd8660b6c79a4727287ef4214d2b9c864ba6", "patch": "@@ -2627,7 +2627,7 @@ data_transfer_init (st_parameter_dt *dtp, int read_flag)\n \t a partial record needs to exist.  */\n \n       if (dtp->u.p.mode == READING && (dtp->rec - 1)\n-\t  * dtp->u.p.current_unit->recl >= file_length (dtp->u.p.current_unit->s))\n+\t  * dtp->u.p.current_unit->recl >= ssize (dtp->u.p.current_unit->s))\n \t{\n \t  generate_error (&dtp->common, LIBERROR_BAD_OPTION,\n \t\t\t  \"Non-existing record number\");\n@@ -2944,7 +2944,7 @@ next_record_r (st_parameter_dt *dtp, int done)\n \t    {\n \t      bytes_left = (int) dtp->u.p.current_unit->bytes_left;\n \t      bytes_left = min_off (bytes_left, \n-\t\t      file_length (dtp->u.p.current_unit->s)\n+\t\t      ssize (dtp->u.p.current_unit->s)\n \t\t      - stell (dtp->u.p.current_unit->s));\n \t      if (sseek (dtp->u.p.current_unit->s, \n \t\t\t bytes_left, SEEK_CUR) < 0)\n@@ -3309,7 +3309,7 @@ next_record_w (st_parameter_dt *dtp, int done)\n \t    {\n \t      dtp->u.p.current_unit->strm_pos += len;\n \t      if (dtp->u.p.current_unit->strm_pos\n-\t\t  < file_length (dtp->u.p.current_unit->s))\n+\t\t  < ssize (dtp->u.p.current_unit->s))\n \t\tunit_truncate (dtp->u.p.current_unit,\n                                dtp->u.p.current_unit->strm_pos - 1,\n                                &dtp->common);"}, {"sha": "1d36214b1cdd9c25ba0afebd286db2919b34338d", "filename": "libgfortran/io/unit.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3469bd8660b6c79a4727287ef4214d2b9c864ba6/libgfortran%2Fio%2Funit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3469bd8660b6c79a4727287ef4214d2b9c864ba6/libgfortran%2Fio%2Funit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Funit.c?ref=3469bd8660b6c79a4727287ef4214d2b9c864ba6", "patch": "@@ -719,7 +719,7 @@ update_position (gfc_unit *u)\n     return;\n   else if (cur == 0)\n     u->flags.position = POSITION_REWIND;\n-  else if (file_length (u->s) == cur)\n+  else if (ssize (u->s) == cur)\n     u->flags.position = POSITION_APPEND;\n   else\n     u->flags.position = POSITION_ASIS;"}, {"sha": "c87be134a691fafd6637e788dbe9a2021cc762ab", "filename": "libgfortran/io/unix.c", "status": "modified", "additions": 24, "deletions": 15, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3469bd8660b6c79a4727287ef4214d2b9c864ba6/libgfortran%2Fio%2Funix.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3469bd8660b6c79a4727287ef4214d2b9c864ba6/libgfortran%2Fio%2Funix.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Funix.c?ref=3469bd8660b6c79a4727287ef4214d2b9c864ba6", "patch": "@@ -332,6 +332,16 @@ raw_tell (unix_stream * s)\n   return lseek (s->fd, 0, SEEK_CUR);\n }\n \n+static gfc_offset\n+raw_size (unix_stream * s)\n+{\n+  struct stat statbuf;\n+  int ret = fstat (s->fd, &statbuf);\n+  if (ret == -1)\n+    return ret;\n+  return statbuf.st_size;\n+}\n+\n static int\n raw_truncate (unix_stream * s, gfc_offset length)\n {\n@@ -398,6 +408,7 @@ raw_init (unix_stream * s)\n   s->st.write = (void *) raw_write;\n   s->st.seek = (void *) raw_seek;\n   s->st.tell = (void *) raw_tell;\n+  s->st.size = (void *) raw_size;\n   s->st.trunc = (void *) raw_truncate;\n   s->st.close = (void *) raw_close;\n   s->st.flush = (void *) raw_flush;\n@@ -584,6 +595,12 @@ buf_tell (unix_stream * s)\n   return buf_seek (s, 0, SEEK_CUR);\n }\n \n+static gfc_offset\n+buf_size (unix_stream * s)\n+{\n+  return s->file_length;\n+}\n+\n static int\n buf_truncate (unix_stream * s, gfc_offset length)\n {\n@@ -613,6 +630,7 @@ buf_init (unix_stream * s)\n   s->st.write = (void *) buf_write;\n   s->st.seek = (void *) buf_seek;\n   s->st.tell = (void *) buf_tell;\n+  s->st.size = (void *) buf_size;\n   s->st.trunc = (void *) buf_truncate;\n   s->st.close = (void *) buf_close;\n   s->st.flush = (void *) buf_flush;\n@@ -884,6 +902,9 @@ open_internal (char *base, int length, gfc_offset offset)\n   s->st.close = (void *) mem_close;\n   s->st.seek = (void *) mem_seek;\n   s->st.tell = (void *) mem_tell;\n+  /* buf_size is not a typo, we just reuse an identical\n+     implementation.  */\n+  s->st.size = (void *) buf_size;\n   s->st.trunc = (void *) mem_truncate;\n   s->st.read = (void *) mem_read;\n   s->st.write = (void *) mem_write;\n@@ -912,6 +933,9 @@ open_internal4 (char *base, int length, gfc_offset offset)\n   s->st.close = (void *) mem_close;\n   s->st.seek = (void *) mem_seek;\n   s->st.tell = (void *) mem_tell;\n+  /* buf_size is not a typo, we just reuse an identical\n+     implementation.  */\n+  s->st.size = (void *) buf_size;\n   s->st.trunc = (void *) mem_truncate;\n   s->st.read = (void *) mem_read4;\n   s->st.write = (void *) mem_write4;\n@@ -1740,21 +1764,6 @@ inquire_readwrite (const char *string, int len)\n }\n \n \n-/* file_length()-- Return the file length in bytes, -1 if unknown */\n-\n-gfc_offset\n-file_length (stream * s)\n-{\n-  gfc_offset curr, end;\n-  curr = stell (s);\n-  if (curr == -1)\n-    return curr;\n-  end = sseek (s, 0, SEEK_END);\n-  sseek (s, curr, SEEK_SET);\n-  return end;\n-}\n-\n-\n int\n stream_isatty (stream *s)\n {"}, {"sha": "52f3e0c811120b18fda3340f055b303f83dc24cc", "filename": "libgfortran/io/unix.h", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3469bd8660b6c79a4727287ef4214d2b9c864ba6/libgfortran%2Fio%2Funix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3469bd8660b6c79a4727287ef4214d2b9c864ba6/libgfortran%2Fio%2Funix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Funix.h?ref=3469bd8660b6c79a4727287ef4214d2b9c864ba6", "patch": "@@ -35,6 +35,7 @@ struct stream\n   ssize_t (*write) (struct stream *, const void *, ssize_t);\n   gfc_offset (*seek) (struct stream *, gfc_offset, int);\n   gfc_offset (*tell) (struct stream *);\n+  gfc_offset (*size) (struct stream *);\n   /* Avoid keyword truncate due to AIX namespace collision.  */\n   int (*trunc) (struct stream *, gfc_offset);\n   int (*flush) (struct stream *);\n@@ -67,6 +68,12 @@ stell (stream * s)\n   return s->tell (s);\n }\n \n+static inline gfc_offset\n+ssize (stream * s)\n+{\n+  return s->size (s);\n+}\n+\n static inline int\n struncate (stream * s, gfc_offset length)\n {\n@@ -155,9 +162,6 @@ internal_proto(inquire_write);\n extern const char *inquire_readwrite (const char *, int);\n internal_proto(inquire_readwrite);\n \n-extern gfc_offset file_length (stream *);\n-internal_proto(file_length);\n-\n extern void flush_if_preconnected (stream *);\n internal_proto(flush_if_preconnected);\n "}]}