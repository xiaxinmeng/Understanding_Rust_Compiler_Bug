{"sha": "648f19f64760673ea9cbf6c429477353b92e68c6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjQ4ZjE5ZjY0NzYwNjczZWE5Y2JmNmM0Mjk0NzczNTNiOTJlNjhjNg==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@markmitchell.com", "date": "1998-08-17T22:33:58Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "1998-08-17T22:33:58Z"}, "message": "cp-tree.h (enter_scope_of): New function.\n\n\t* cp-tree.h (enter_scope_of): New function.\n\t* parse.y (complex_direct_notype_declarator): Use it.\n\t* semantics.c (enter_scope_of): New function.\n\nFrom-SVN: r21812", "tree": {"sha": "0b31b05411246df1cd831c93c55e228a06066691", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0b31b05411246df1cd831c93c55e228a06066691"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/648f19f64760673ea9cbf6c429477353b92e68c6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/648f19f64760673ea9cbf6c429477353b92e68c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/648f19f64760673ea9cbf6c429477353b92e68c6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/648f19f64760673ea9cbf6c429477353b92e68c6/comments", "author": null, "committer": null, "parents": [{"sha": "def9b0064bda2dc13454a0a963ad143eff5f3993", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/def9b0064bda2dc13454a0a963ad143eff5f3993", "html_url": "https://github.com/Rust-GCC/gccrs/commit/def9b0064bda2dc13454a0a963ad143eff5f3993"}], "stats": {"total": 552, "additions": 282, "deletions": 270}, "files": [{"sha": "a1dc384c037045ed2e55af1625102f5e6960d675", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/648f19f64760673ea9cbf6c429477353b92e68c6/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/648f19f64760673ea9cbf6c429477353b92e68c6/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=648f19f64760673ea9cbf6c429477353b92e68c6", "patch": "@@ -1,3 +1,9 @@\n+1998-08-17  Mark Mitchell  <mark@markmitchell.com>\n+\n+\t* cp-tree.h (enter_scope_of): New function.\n+\t* parse.y (complex_direct_notype_declarator): Use it.\n+\t* semantics.c (enter_scope_of): New function.\n+\n 1998-08-17  Jason Merrill  <jason@yorick.cygnus.com>\n \n \t* decl.c (grokparms): No, here."}, {"sha": "5fe07cba74c913de4f288182dd346c3b13ce14cc", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/648f19f64760673ea9cbf6c429477353b92e68c6/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/648f19f64760673ea9cbf6c429477353b92e68c6/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=648f19f64760673ea9cbf6c429477353b92e68c6", "patch": "@@ -2962,6 +2962,7 @@ extern void begin_inline_definitions            PROTO((void));\n extern tree finish_member_class_template        PROTO((tree, tree));\n extern void finish_template_decl                PROTO((tree));\n extern tree finish_template_type                PROTO((tree, tree, int));\n+extern void enter_scope_of                      PROTO((tree));\n \n /* in sig.c */\n extern tree build_signature_pointer_type\tPROTO((tree, int, int));"}, {"sha": "9a2d07cfff0fb279d1f3b9ae210ae24671adc37e", "filename": "gcc/cp/parse.c", "status": "modified", "additions": 240, "deletions": 254, "changes": 494, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/648f19f64760673ea9cbf6c429477353b92e68c6/gcc%2Fcp%2Fparse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/648f19f64760673ea9cbf6c429477353b92e68c6/gcc%2Fcp%2Fparse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparse.c?ref=648f19f64760673ea9cbf6c429477353b92e68c6", "patch": "@@ -697,32 +697,32 @@ static const short yyrline[] = { 0,\n   2696,  2698,  2704,  2707,  2709,  2711,  2713,  2717,  2720,  2738,\n   2748,  2750,  2751,  2755,  2760,  2763,  2765,  2767,  2769,  2773,\n   2779,  2782,  2784,  2786,  2788,  2792,  2795,  2798,  2800,  2802,\n-  2804,  2808,  2811,  2814,  2816,  2818,  2820,  2832,  2843,  2847,\n-  2852,  2856,  2861,  2863,  2867,  2870,  2872,  2876,  2878,  2879,\n-  2882,  2884,  2886,  2892,  2907,  2913,  2919,  2933,  2935,  2939,\n-  2953,  2955,  2957,  2961,  2967,  2980,  2982,  2986,  2999,  3005,\n-  3007,  3008,  3009,  3017,  3022,  3031,  3032,  3036,  3039,  3045,\n-  3051,  3054,  3056,  3058,  3060,  3064,  3068,  3072,  3075,  3080,\n-  3083,  3085,  3087,  3089,  3091,  3093,  3095,  3097,  3101,  3105,\n-  3109,  3113,  3114,  3116,  3118,  3120,  3122,  3124,  3126,  3128,\n-  3130,  3138,  3140,  3141,  3142,  3145,  3151,  3153,  3158,  3160,\n-  3163,  3177,  3180,  3183,  3187,  3190,  3197,  3199,  3202,  3204,\n-  3206,  3209,  3212,  3215,  3218,  3220,  3223,  3227,  3229,  3235,\n-  3237,  3238,  3240,  3245,  3247,  3249,  3251,  3253,  3256,  3257,\n-  3259,  3262,  3263,  3266,  3266,  3269,  3269,  3272,  3272,  3274,\n-  3276,  3278,  3280,  3286,  3292,  3295,  3298,  3304,  3306,  3308,\n-  3312,  3314,  3315,  3316,  3318,  3321,  3328,  3333,  3341,  3345,\n-  3347,  3350,  3352,  3355,  3359,  3361,  3364,  3366,  3369,  3386,\n-  3392,  3400,  3402,  3404,  3408,  3411,  3412,  3420,  3424,  3428,\n-  3431,  3432,  3438,  3441,  3444,  3446,  3450,  3455,  3458,  3468,\n-  3473,  3474,  3481,  3484,  3487,  3489,  3492,  3494,  3504,  3518,\n-  3522,  3525,  3527,  3531,  3535,  3538,  3541,  3543,  3547,  3549,\n-  3556,  3563,  3566,  3569,  3573,  3577,  3583,  3587,  3592,  3594,\n-  3597,  3602,  3608,  3619,  3622,  3624,  3628,  3633,  3635,  3642,\n-  3645,  3647,  3649,  3655,  3660,  3663,  3665,  3667,  3669,  3671,\n-  3673,  3675,  3677,  3679,  3681,  3683,  3685,  3687,  3689,  3691,\n-  3693,  3695,  3697,  3699,  3701,  3703,  3705,  3707,  3709,  3711,\n-  3713,  3715,  3717,  3719,  3721,  3723,  3725,  3728,  3730\n+  2804,  2808,  2811,  2814,  2816,  2818,  2820,  2822,  2829,  2833,\n+  2838,  2842,  2847,  2849,  2853,  2856,  2858,  2862,  2864,  2865,\n+  2868,  2870,  2872,  2878,  2893,  2899,  2905,  2919,  2921,  2925,\n+  2939,  2941,  2943,  2947,  2953,  2966,  2968,  2972,  2985,  2991,\n+  2993,  2994,  2995,  3003,  3008,  3017,  3018,  3022,  3025,  3031,\n+  3037,  3040,  3042,  3044,  3046,  3050,  3054,  3058,  3061,  3066,\n+  3069,  3071,  3073,  3075,  3077,  3079,  3081,  3083,  3087,  3091,\n+  3095,  3099,  3100,  3102,  3104,  3106,  3108,  3110,  3112,  3114,\n+  3116,  3124,  3126,  3127,  3128,  3131,  3137,  3139,  3144,  3146,\n+  3149,  3163,  3166,  3169,  3173,  3176,  3183,  3185,  3188,  3190,\n+  3192,  3195,  3198,  3201,  3204,  3206,  3209,  3213,  3215,  3221,\n+  3223,  3224,  3226,  3231,  3233,  3235,  3237,  3239,  3242,  3243,\n+  3245,  3248,  3249,  3252,  3252,  3255,  3255,  3258,  3258,  3260,\n+  3262,  3264,  3266,  3272,  3278,  3281,  3284,  3290,  3292,  3294,\n+  3298,  3300,  3301,  3302,  3304,  3307,  3314,  3319,  3327,  3331,\n+  3333,  3336,  3338,  3341,  3345,  3347,  3350,  3352,  3355,  3372,\n+  3378,  3386,  3388,  3390,  3394,  3397,  3398,  3406,  3410,  3414,\n+  3417,  3418,  3424,  3427,  3430,  3432,  3436,  3441,  3444,  3454,\n+  3459,  3460,  3467,  3470,  3473,  3475,  3478,  3480,  3490,  3504,\n+  3508,  3511,  3513,  3517,  3521,  3524,  3527,  3529,  3533,  3535,\n+  3542,  3549,  3552,  3555,  3559,  3563,  3569,  3573,  3578,  3580,\n+  3583,  3588,  3594,  3605,  3608,  3610,  3614,  3619,  3621,  3628,\n+  3631,  3633,  3635,  3641,  3646,  3649,  3651,  3653,  3655,  3657,\n+  3659,  3661,  3663,  3665,  3667,  3669,  3671,  3673,  3675,  3677,\n+  3679,  3681,  3683,  3685,  3687,  3689,  3691,  3693,  3695,  3697,\n+  3699,  3701,  3703,  3705,  3707,  3709,  3711,  3714,  3716\n };\n #endif\n \n@@ -3591,7 +3591,7 @@ static const short yycheck[] = {     4,\n     82,    83,    84\n };\n /* -*-C-*-  Note some compilers choke on comments on `#line' lines.  */\n-#line 3 \"/usr/cygnus/gnupro-98r1/share/bison.simple\"\n+#line 3 \"/usr/lib/bison.simple\"\n \n /* Skeleton output parser for bison,\n    Copyright (C) 1984, 1989, 1990 Free Software Foundation, Inc.\n@@ -3784,7 +3784,7 @@ __yy_memcpy (char *to, char *from, int count)\n #endif\n #endif\n \f\n-#line 196 \"/usr/cygnus/gnupro-98r1/share/bison.simple\"\n+#line 196 \"/usr/lib/bison.simple\"\n \n /* The user can define YYPARSE_PARAM as the name of an argument to be passed\n    into yyparse.  The argument should have type void *.\n@@ -6793,75 +6793,61 @@ case 616:\n     break;}\n case 617:\n #line 2821 \"parse.y\"\n-{ if (TREE_CODE (OP0 (yyvsp[0].ttype)) == NAMESPACE_DECL)\n-\t\t    {\n-\t\t      push_decl_namespace (OP0 (yyvsp[0].ttype));\n-\t\t      TREE_COMPLEXITY (yyvsp[0].ttype) = -1;\n-\t\t    }\n-\t\t  else if (OP0 (yyvsp[0].ttype) != current_class_type)\n-\t\t    {\n-\t\t      push_nested_class (OP0 (yyvsp[0].ttype), 3);\n-\t\t      TREE_COMPLEXITY (yyvsp[0].ttype) = current_class_depth;\n-\t\t    }\n-\t\t;\n+{ enter_scope_of (yyvsp[0].ttype); ;\n     break;}\n case 618:\n-#line 2833 \"parse.y\"\n+#line 2823 \"parse.y\"\n { got_scope = NULL_TREE;\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-1].ttype, yyvsp[0].ttype);\n-\t\t  if (yyvsp[-1].ttype != current_class_type)\n-\t\t    {\n-\t\t      push_nested_class (yyvsp[-1].ttype, 3);\n-\t\t      TREE_COMPLEXITY (yyval.ttype) = current_class_depth;\n-\t\t    }\n+\t\t  enter_scope_of (yyval.ttype);\n \t\t;\n     break;}\n case 619:\n-#line 2845 \"parse.y\"\n+#line 2831 \"parse.y\"\n { got_scope = NULL_TREE;\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyval.ttype, yyvsp[0].ttype); ;\n     break;}\n case 620:\n-#line 2848 \"parse.y\"\n+#line 2834 \"parse.y\"\n { got_scope = NULL_TREE;\n  \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 621:\n-#line 2854 \"parse.y\"\n+#line 2840 \"parse.y\"\n { got_scope = NULL_TREE;\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyval.ttype, yyvsp[0].ttype); ;\n     break;}\n case 622:\n-#line 2857 \"parse.y\"\n+#line 2843 \"parse.y\"\n { got_scope = NULL_TREE;\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 624:\n-#line 2864 \"parse.y\"\n+#line 2850 \"parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 625:\n-#line 2869 \"parse.y\"\n+#line 2855 \"parse.y\"\n { yyval.ttype = build_functional_cast (yyvsp[-3].ftype.t, yyvsp[-1].ttype); ;\n     break;}\n case 626:\n-#line 2871 \"parse.y\"\n+#line 2857 \"parse.y\"\n { yyval.ttype = reparse_decl_as_expr (yyvsp[-3].ftype.t, yyvsp[-1].ttype); ;\n     break;}\n case 627:\n-#line 2873 \"parse.y\"\n+#line 2859 \"parse.y\"\n { yyval.ttype = reparse_absdcl_as_expr (yyvsp[-1].ftype.t, yyvsp[0].ttype); ;\n     break;}\n case 632:\n-#line 2885 \"parse.y\"\n+#line 2871 \"parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 633:\n-#line 2887 \"parse.y\"\n+#line 2873 \"parse.y\"\n { got_scope = yyval.ttype = make_typename_type (yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 634:\n-#line 2894 \"parse.y\"\n+#line 2880 \"parse.y\"\n {\n \t\t  if (TREE_CODE (yyvsp[-1].ttype) == IDENTIFIER_NODE)\n \t\t    {\n@@ -6877,31 +6863,31 @@ case 634:\n \t\t;\n     break;}\n case 635:\n-#line 2908 \"parse.y\"\n+#line 2894 \"parse.y\"\n {\n \t\t  if (TREE_CODE (yyvsp[-1].ttype) == IDENTIFIER_NODE)\n \t\t    yyval.ttype = lastiddecl;\n \t\t  got_scope = yyval.ttype = TREE_TYPE (yyval.ttype);\n \t\t;\n     break;}\n case 636:\n-#line 2914 \"parse.y\"\n+#line 2900 \"parse.y\"\n {\n \t\t  if (TREE_CODE (yyval.ttype) == IDENTIFIER_NODE)\n \t\t    yyval.ttype = lastiddecl;\n \t\t  got_scope = yyval.ttype;\n \t\t;\n     break;}\n case 637:\n-#line 2920 \"parse.y\"\n+#line 2906 \"parse.y\"\n { got_scope = yyval.ttype = complete_type (TREE_TYPE (yyvsp[-1].ttype)); ;\n     break;}\n case 639:\n-#line 2936 \"parse.y\"\n+#line 2922 \"parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 640:\n-#line 2941 \"parse.y\"\n+#line 2927 \"parse.y\"\n {\n \t\t  if (TREE_CODE_CLASS (TREE_CODE (yyvsp[-1].ttype)) == 't')\n \t\t    yyval.ttype = make_typename_type (yyvsp[-1].ttype, yyvsp[0].ttype);\n@@ -6916,26 +6902,26 @@ case 640:\n \t\t;\n     break;}\n case 641:\n-#line 2954 \"parse.y\"\n+#line 2940 \"parse.y\"\n { yyval.ttype = TREE_TYPE (yyvsp[0].ttype); ;\n     break;}\n case 642:\n-#line 2956 \"parse.y\"\n+#line 2942 \"parse.y\"\n { yyval.ttype = make_typename_type (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 643:\n-#line 2958 \"parse.y\"\n+#line 2944 \"parse.y\"\n { yyval.ttype = make_typename_type (yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 644:\n-#line 2963 \"parse.y\"\n+#line 2949 \"parse.y\"\n {\n \t\t  if (TREE_CODE (yyvsp[0].ttype) == IDENTIFIER_NODE)\n \t\t    cp_error (\"`%T' is not a class or namespace\", yyvsp[0].ttype);\n \t\t;\n     break;}\n case 645:\n-#line 2968 \"parse.y\"\n+#line 2954 \"parse.y\"\n {\n \t\t  if (TREE_CODE_CLASS (TREE_CODE (yyvsp[-1].ttype)) == 't')\n \t\t    yyval.ttype = make_typename_type (yyvsp[-1].ttype, yyvsp[0].ttype);\n@@ -6950,15 +6936,15 @@ case 645:\n \t\t;\n     break;}\n case 646:\n-#line 2981 \"parse.y\"\n+#line 2967 \"parse.y\"\n { got_scope = yyval.ttype = make_typename_type (yyvsp[-2].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 647:\n-#line 2983 \"parse.y\"\n+#line 2969 \"parse.y\"\n { got_scope = yyval.ttype = make_typename_type (yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 648:\n-#line 2988 \"parse.y\"\n+#line 2974 \"parse.y\"\n {\n \t\t  if (TREE_CODE (yyvsp[-1].ttype) != IDENTIFIER_NODE)\n \t\t    yyvsp[-1].ttype = lastiddecl;\n@@ -6972,31 +6958,31 @@ case 648:\n \t\t;\n     break;}\n case 649:\n-#line 3000 \"parse.y\"\n+#line 2986 \"parse.y\"\n {\n \t\t  if (TREE_CODE (yyvsp[-1].ttype) != IDENTIFIER_NODE)\n \t\t    yyval.ttype = lastiddecl;\n \t\t  got_scope = yyval.ttype = complete_type (TREE_TYPE (yyval.ttype));\n \t\t;\n     break;}\n case 650:\n-#line 3006 \"parse.y\"\n+#line 2992 \"parse.y\"\n { got_scope = yyval.ttype = complete_type (TREE_TYPE (yyval.ttype)); ;\n     break;}\n case 653:\n-#line 3010 \"parse.y\"\n+#line 2996 \"parse.y\"\n {\n \t\t  if (TREE_CODE (yyval.ttype) == IDENTIFIER_NODE)\n \t\t    yyval.ttype = lastiddecl;\n \t\t  got_scope = yyval.ttype;\n \t\t;\n     break;}\n case 654:\n-#line 3019 \"parse.y\"\n+#line 3005 \"parse.y\"\n { yyval.ttype = build_min_nt (TEMPLATE_ID_EXPR, yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 655:\n-#line 3024 \"parse.y\"\n+#line 3010 \"parse.y\"\n {\n \t\t  if (TREE_CODE (yyvsp[0].ttype) == IDENTIFIER_NODE)\n \t\t    yyval.ttype = IDENTIFIER_GLOBAL_VALUE (yyvsp[0].ttype);\n@@ -7006,148 +6992,148 @@ case 655:\n \t\t;\n     break;}\n case 657:\n-#line 3033 \"parse.y\"\n+#line 3019 \"parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 658:\n-#line 3038 \"parse.y\"\n+#line 3024 \"parse.y\"\n { got_scope = NULL_TREE; ;\n     break;}\n case 659:\n-#line 3040 \"parse.y\"\n+#line 3026 \"parse.y\"\n { yyval.ttype = yyvsp[-1].ttype; got_scope = NULL_TREE; ;\n     break;}\n case 660:\n-#line 3047 \"parse.y\"\n+#line 3033 \"parse.y\"\n { got_scope = void_type_node; ;\n     break;}\n case 661:\n-#line 3053 \"parse.y\"\n+#line 3039 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 662:\n-#line 3055 \"parse.y\"\n+#line 3041 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 663:\n-#line 3057 \"parse.y\"\n+#line 3043 \"parse.y\"\n { yyval.ttype = make_reference_declarator (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 664:\n-#line 3059 \"parse.y\"\n+#line 3045 \"parse.y\"\n { yyval.ttype = make_reference_declarator (yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 665:\n-#line 3061 \"parse.y\"\n+#line 3047 \"parse.y\"\n { tree arg = make_pointer_declarator (yyvsp[0].ttype, NULL_TREE);\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-1].ttype, arg);\n \t\t;\n     break;}\n case 666:\n-#line 3065 \"parse.y\"\n+#line 3051 \"parse.y\"\n { tree arg = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-2].ttype, arg);\n \t\t;\n     break;}\n case 668:\n-#line 3074 \"parse.y\"\n+#line 3060 \"parse.y\"\n { yyval.ttype = build_parse_node (ARRAY_REF, NULL_TREE, yyvsp[-1].ttype); ;\n     break;}\n case 669:\n-#line 3076 \"parse.y\"\n+#line 3062 \"parse.y\"\n { yyval.ttype = build_parse_node (ARRAY_REF, yyval.ttype, yyvsp[-1].ttype); ;\n     break;}\n case 670:\n-#line 3082 \"parse.y\"\n+#line 3068 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[-1].ftype.t, yyvsp[0].ttype); ;\n     break;}\n case 671:\n-#line 3084 \"parse.y\"\n+#line 3070 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 672:\n-#line 3086 \"parse.y\"\n+#line 3072 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[0].ftype.t, NULL_TREE); ;\n     break;}\n case 673:\n-#line 3088 \"parse.y\"\n+#line 3074 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (NULL_TREE, NULL_TREE); ;\n     break;}\n case 674:\n-#line 3090 \"parse.y\"\n+#line 3076 \"parse.y\"\n { yyval.ttype = make_reference_declarator (yyvsp[-1].ftype.t, yyvsp[0].ttype); ;\n     break;}\n case 675:\n-#line 3092 \"parse.y\"\n+#line 3078 \"parse.y\"\n { yyval.ttype = make_reference_declarator (NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 676:\n-#line 3094 \"parse.y\"\n+#line 3080 \"parse.y\"\n { yyval.ttype = make_reference_declarator (yyvsp[0].ftype.t, NULL_TREE); ;\n     break;}\n case 677:\n-#line 3096 \"parse.y\"\n+#line 3082 \"parse.y\"\n { yyval.ttype = make_reference_declarator (NULL_TREE, NULL_TREE); ;\n     break;}\n case 678:\n-#line 3098 \"parse.y\"\n+#line 3084 \"parse.y\"\n { tree arg = make_pointer_declarator (yyvsp[0].ttype, NULL_TREE);\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-1].ttype, arg);\n \t\t;\n     break;}\n case 679:\n-#line 3102 \"parse.y\"\n+#line 3088 \"parse.y\"\n { tree arg = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-2].ttype, arg);\n \t\t;\n     break;}\n case 681:\n-#line 3111 \"parse.y\"\n+#line 3097 \"parse.y\"\n { yyval.ttype = yyvsp[-1].ttype; ;\n     break;}\n case 683:\n-#line 3115 \"parse.y\"\n+#line 3101 \"parse.y\"\n { yyval.ttype = make_call_declarator (yyval.ttype, yyvsp[-3].ttype, yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 684:\n-#line 3117 \"parse.y\"\n+#line 3103 \"parse.y\"\n { yyval.ttype = make_call_declarator (yyval.ttype, empty_parms (), yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 685:\n-#line 3119 \"parse.y\"\n+#line 3105 \"parse.y\"\n { yyval.ttype = build_parse_node (ARRAY_REF, yyval.ttype, yyvsp[-1].ttype); ;\n     break;}\n case 686:\n-#line 3121 \"parse.y\"\n+#line 3107 \"parse.y\"\n { yyval.ttype = build_parse_node (ARRAY_REF, yyval.ttype, NULL_TREE); ;\n     break;}\n case 687:\n-#line 3123 \"parse.y\"\n+#line 3109 \"parse.y\"\n { yyval.ttype = make_call_declarator (NULL_TREE, yyvsp[-3].ttype, yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 688:\n-#line 3125 \"parse.y\"\n+#line 3111 \"parse.y\"\n { set_quals_and_spec (yyval.ttype, yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 689:\n-#line 3127 \"parse.y\"\n+#line 3113 \"parse.y\"\n { set_quals_and_spec (yyval.ttype, yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 690:\n-#line 3129 \"parse.y\"\n+#line 3115 \"parse.y\"\n { yyval.ttype = build_parse_node (ARRAY_REF, NULL_TREE, yyvsp[-1].ttype); ;\n     break;}\n case 691:\n-#line 3131 \"parse.y\"\n+#line 3117 \"parse.y\"\n { yyval.ttype = build_parse_node (ARRAY_REF, NULL_TREE, NULL_TREE); ;\n     break;}\n case 698:\n-#line 3154 \"parse.y\"\n+#line 3140 \"parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"ANSI C++ forbids label declarations\"); ;\n     break;}\n case 701:\n-#line 3165 \"parse.y\"\n+#line 3151 \"parse.y\"\n { tree link;\n \t\t  for (link = yyvsp[-1].ttype; link; link = TREE_CHAIN (link))\n \t\t    {\n@@ -7158,225 +7144,225 @@ case 701:\n \t\t;\n     break;}\n case 702:\n-#line 3179 \"parse.y\"\n+#line 3165 \"parse.y\"\n {;\n     break;}\n case 704:\n-#line 3185 \"parse.y\"\n+#line 3171 \"parse.y\"\n { yyval.ttype = begin_compound_stmt (0); ;\n     break;}\n case 705:\n-#line 3187 \"parse.y\"\n+#line 3173 \"parse.y\"\n { yyval.ttype = finish_compound_stmt (0, yyvsp[-1].ttype); ;\n     break;}\n case 706:\n-#line 3192 \"parse.y\"\n+#line 3178 \"parse.y\"\n {\n \t\t  yyval.ttype = begin_if_stmt ();\n \t\t  cond_stmt_keyword = \"if\";\n \t\t;\n     break;}\n case 707:\n-#line 3197 \"parse.y\"\n+#line 3183 \"parse.y\"\n { finish_if_stmt_cond (yyvsp[0].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 708:\n-#line 3199 \"parse.y\"\n+#line 3185 \"parse.y\"\n { yyval.ttype = finish_then_clause (yyvsp[-3].ttype); ;\n     break;}\n case 710:\n-#line 3204 \"parse.y\"\n+#line 3190 \"parse.y\"\n { yyval.ttype = begin_compound_stmt (0); ;\n     break;}\n case 711:\n-#line 3206 \"parse.y\"\n+#line 3192 \"parse.y\"\n { yyval.ttype = finish_compound_stmt (0, yyvsp[-1].ttype); ;\n     break;}\n case 712:\n-#line 3211 \"parse.y\"\n+#line 3197 \"parse.y\"\n {;\n     break;}\n case 714:\n-#line 3217 \"parse.y\"\n+#line 3203 \"parse.y\"\n { finish_stmt (); ;\n     break;}\n case 715:\n-#line 3219 \"parse.y\"\n+#line 3205 \"parse.y\"\n { finish_expr_stmt (yyvsp[-1].ttype); ;\n     break;}\n case 716:\n-#line 3221 \"parse.y\"\n+#line 3207 \"parse.y\"\n { begin_else_clause (); ;\n     break;}\n case 717:\n-#line 3223 \"parse.y\"\n+#line 3209 \"parse.y\"\n { \n \t\t  finish_else_clause (yyvsp[-3].ttype); \n \t\t  finish_if_stmt ();\n \t\t;\n     break;}\n case 718:\n-#line 3228 \"parse.y\"\n+#line 3214 \"parse.y\"\n { finish_if_stmt (); ;\n     break;}\n case 719:\n-#line 3230 \"parse.y\"\n+#line 3216 \"parse.y\"\n {\n \t\t  yyval.ttype = begin_while_stmt ();\n \t\t  cond_stmt_keyword = \"while\";\n \t\t;\n     break;}\n case 720:\n-#line 3235 \"parse.y\"\n+#line 3221 \"parse.y\"\n { finish_while_stmt_cond (yyvsp[0].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 721:\n-#line 3237 \"parse.y\"\n+#line 3223 \"parse.y\"\n { finish_while_stmt (yyvsp[-3].ttype); ;\n     break;}\n case 722:\n-#line 3239 \"parse.y\"\n+#line 3225 \"parse.y\"\n { yyval.ttype = begin_do_stmt (); ;\n     break;}\n case 723:\n-#line 3241 \"parse.y\"\n+#line 3227 \"parse.y\"\n {\n \t\t  finish_do_body (yyvsp[-2].ttype);\n \t\t  cond_stmt_keyword = \"do\";\n \t\t;\n     break;}\n case 724:\n-#line 3246 \"parse.y\"\n+#line 3232 \"parse.y\"\n { finish_do_stmt (yyvsp[-1].ttype, yyvsp[-5].ttype); ;\n     break;}\n case 725:\n-#line 3248 \"parse.y\"\n+#line 3234 \"parse.y\"\n { yyval.ttype = begin_for_stmt (); ;\n     break;}\n case 726:\n-#line 3250 \"parse.y\"\n+#line 3236 \"parse.y\"\n { finish_for_init_stmt (yyvsp[-2].ttype); ;\n     break;}\n case 727:\n-#line 3252 \"parse.y\"\n+#line 3238 \"parse.y\"\n { finish_for_cond (yyvsp[-1].ttype, yyvsp[-5].ttype); ;\n     break;}\n case 728:\n-#line 3254 \"parse.y\"\n+#line 3240 \"parse.y\"\n { finish_for_expr (yyvsp[-1].ttype, yyvsp[-8].ttype); ;\n     break;}\n case 729:\n-#line 3256 \"parse.y\"\n+#line 3242 \"parse.y\"\n { finish_for_stmt (yyvsp[-3].ttype, yyvsp[-10].ttype); ;\n     break;}\n case 730:\n-#line 3258 \"parse.y\"\n+#line 3244 \"parse.y\"\n { begin_switch_stmt (); ;\n     break;}\n case 731:\n-#line 3260 \"parse.y\"\n+#line 3246 \"parse.y\"\n { yyval.ttype = finish_switch_cond (yyvsp[-1].ttype); ;\n     break;}\n case 732:\n-#line 3262 \"parse.y\"\n+#line 3248 \"parse.y\"\n { finish_switch_stmt (yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 733:\n-#line 3264 \"parse.y\"\n+#line 3250 \"parse.y\"\n { finish_case_label (yyvsp[-1].ttype, NULL_TREE); ;\n     break;}\n case 735:\n-#line 3267 \"parse.y\"\n+#line 3253 \"parse.y\"\n { finish_case_label (yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 737:\n-#line 3270 \"parse.y\"\n+#line 3256 \"parse.y\"\n { finish_case_label (NULL_TREE, NULL_TREE); ;\n     break;}\n case 739:\n-#line 3273 \"parse.y\"\n+#line 3259 \"parse.y\"\n { finish_break_stmt (); ;\n     break;}\n case 740:\n-#line 3275 \"parse.y\"\n+#line 3261 \"parse.y\"\n { finish_continue_stmt (); ;\n     break;}\n case 741:\n-#line 3277 \"parse.y\"\n+#line 3263 \"parse.y\"\n { finish_return_stmt (NULL_TREE); ;\n     break;}\n case 742:\n-#line 3279 \"parse.y\"\n+#line 3265 \"parse.y\"\n { finish_return_stmt (yyvsp[-1].ttype); ;\n     break;}\n case 743:\n-#line 3281 \"parse.y\"\n+#line 3267 \"parse.y\"\n { \n \t\t  finish_asm_stmt (yyvsp[-4].ttype, yyvsp[-2].ttype, NULL_TREE, NULL_TREE,\n \t\t\t\t   NULL_TREE); \n \t\t;\n     break;}\n case 744:\n-#line 3287 \"parse.y\"\n+#line 3273 \"parse.y\"\n { \n \t\t  finish_asm_stmt (yyvsp[-6].ttype, yyvsp[-4].ttype, yyvsp[-2].ttype, NULL_TREE,\n \t\t\t\t   NULL_TREE); \n \t\t;\n     break;}\n case 745:\n-#line 3293 \"parse.y\"\n+#line 3279 \"parse.y\"\n { finish_asm_stmt (yyvsp[-8].ttype, yyvsp[-6].ttype, yyvsp[-4].ttype, yyvsp[-2].ttype, NULL_TREE); ;\n     break;}\n case 746:\n-#line 3297 \"parse.y\"\n+#line 3283 \"parse.y\"\n { finish_asm_stmt (yyvsp[-10].ttype, yyvsp[-8].ttype, yyvsp[-6].ttype, yyvsp[-4].ttype, yyvsp[-2].ttype); ;\n     break;}\n case 747:\n-#line 3299 \"parse.y\"\n+#line 3285 \"parse.y\"\n { \n \t\t  if (pedantic)\n \t\t    pedwarn (\"ANSI C++ forbids computed gotos\");\n \t\t  finish_goto_stmt (yyvsp[-1].ttype);\n \t\t;\n     break;}\n case 748:\n-#line 3305 \"parse.y\"\n+#line 3291 \"parse.y\"\n { finish_goto_stmt (yyvsp[-1].ttype); ;\n     break;}\n case 749:\n-#line 3307 \"parse.y\"\n+#line 3293 \"parse.y\"\n { finish_stmt (); ;\n     break;}\n case 750:\n-#line 3309 \"parse.y\"\n+#line 3295 \"parse.y\"\n { error (\"label must be followed by statement\");\n \t\t  yyungetc ('}', 0);\n \t\t  finish_stmt (); ;\n     break;}\n case 751:\n-#line 3313 \"parse.y\"\n+#line 3299 \"parse.y\"\n { finish_stmt (); ;\n     break;}\n case 754:\n-#line 3317 \"parse.y\"\n+#line 3303 \"parse.y\"\n { do_local_using_decl (yyvsp[0].ttype); ;\n     break;}\n case 756:\n-#line 3323 \"parse.y\"\n+#line 3309 \"parse.y\"\n {\n \t\t  if (! current_function_parms_stored)\n \t\t    store_parm_decls ();\n \t\t  expand_start_early_try_stmts ();\n \t\t;\n     break;}\n case 757:\n-#line 3329 \"parse.y\"\n+#line 3315 \"parse.y\"\n { \n                   expand_start_all_catch (); \n                 ;\n     break;}\n case 758:\n-#line 3333 \"parse.y\"\n+#line 3319 \"parse.y\"\n {\n \t\t  int nested = (hack_decl_function_context\n \t\t\t\t(current_function_decl) != NULL_TREE);\n@@ -7385,41 +7371,41 @@ case 758:\n \t\t;\n     break;}\n case 759:\n-#line 3343 \"parse.y\"\n+#line 3329 \"parse.y\"\n { yyval.ttype = begin_try_block (); ;\n     break;}\n case 760:\n-#line 3345 \"parse.y\"\n+#line 3331 \"parse.y\"\n { finish_try_block (yyvsp[-1].ttype); ;\n     break;}\n case 761:\n-#line 3347 \"parse.y\"\n+#line 3333 \"parse.y\"\n { finish_handler_sequence (yyvsp[-3].ttype); ;\n     break;}\n case 764:\n-#line 3357 \"parse.y\"\n+#line 3343 \"parse.y\"\n { yyval.ttype = begin_handler(); ;\n     break;}\n case 765:\n-#line 3359 \"parse.y\"\n+#line 3345 \"parse.y\"\n { finish_handler_parms (yyvsp[-1].ttype); ;\n     break;}\n case 766:\n-#line 3361 \"parse.y\"\n+#line 3347 \"parse.y\"\n { finish_handler (yyvsp[-3].ttype); ;\n     break;}\n case 769:\n-#line 3371 \"parse.y\"\n+#line 3357 \"parse.y\"\n { expand_start_catch_block (NULL_TREE, NULL_TREE); ;\n     break;}\n case 770:\n-#line 3387 \"parse.y\"\n+#line 3373 \"parse.y\"\n { check_for_new_type (\"inside exception declarations\", yyvsp[-1].ftype);\n \t\t  expand_start_catch_block (TREE_PURPOSE (yyvsp[-1].ftype.t),\n \t\t\t\t\t    TREE_VALUE (yyvsp[-1].ftype.t)); ;\n     break;}\n case 771:\n-#line 3394 \"parse.y\"\n+#line 3380 \"parse.y\"\n { tree label;\n \t\tdo_label:\n \t\t  label = define_label (input_filename, lineno, yyvsp[-1].ttype);\n@@ -7428,98 +7414,98 @@ case 771:\n \t\t;\n     break;}\n case 772:\n-#line 3401 \"parse.y\"\n+#line 3387 \"parse.y\"\n { goto do_label; ;\n     break;}\n case 773:\n-#line 3403 \"parse.y\"\n+#line 3389 \"parse.y\"\n { goto do_label; ;\n     break;}\n case 774:\n-#line 3405 \"parse.y\"\n+#line 3391 \"parse.y\"\n { goto do_label; ;\n     break;}\n case 775:\n-#line 3410 \"parse.y\"\n+#line 3396 \"parse.y\"\n { if (yyvsp[-1].ttype) cplus_expand_expr_stmt (yyvsp[-1].ttype); ;\n     break;}\n case 777:\n-#line 3413 \"parse.y\"\n+#line 3399 \"parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"ANSI C++ forbids compound statements inside for initializations\");\n \t\t;\n     break;}\n case 778:\n-#line 3422 \"parse.y\"\n+#line 3408 \"parse.y\"\n { emit_line_note (input_filename, lineno);\n \t\t  yyval.ttype = NULL_TREE; ;\n     break;}\n case 779:\n-#line 3425 \"parse.y\"\n+#line 3411 \"parse.y\"\n { emit_line_note (input_filename, lineno); ;\n     break;}\n case 780:\n-#line 3430 \"parse.y\"\n+#line 3416 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 782:\n-#line 3433 \"parse.y\"\n+#line 3419 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 783:\n-#line 3440 \"parse.y\"\n+#line 3426 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 786:\n-#line 3447 \"parse.y\"\n+#line 3433 \"parse.y\"\n { yyval.ttype = chainon (yyval.ttype, yyvsp[0].ttype); ;\n     break;}\n case 787:\n-#line 3452 \"parse.y\"\n+#line 3438 \"parse.y\"\n { yyval.ttype = build_tree_list (yyval.ttype, yyvsp[-1].ttype); ;\n     break;}\n case 788:\n-#line 3457 \"parse.y\"\n+#line 3443 \"parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyval.ttype, NULL_TREE); ;\n     break;}\n case 789:\n-#line 3459 \"parse.y\"\n+#line 3445 \"parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, yyval.ttype); ;\n     break;}\n case 790:\n-#line 3470 \"parse.y\"\n+#line 3456 \"parse.y\"\n {\n \t\t  yyval.ttype = empty_parms();\n \t\t;\n     break;}\n case 792:\n-#line 3475 \"parse.y\"\n+#line 3461 \"parse.y\"\n { yyval.ttype = finish_parmlist (build_tree_list (NULL_TREE, yyvsp[0].ftype.t), 0);\n \t\t  check_for_new_type (\"inside parameter list\", yyvsp[0].ftype); ;\n     break;}\n case 793:\n-#line 3483 \"parse.y\"\n+#line 3469 \"parse.y\"\n { yyval.ttype = finish_parmlist (yyval.ttype, 0); ;\n     break;}\n case 794:\n-#line 3485 \"parse.y\"\n+#line 3471 \"parse.y\"\n { yyval.ttype = finish_parmlist (yyvsp[-1].ttype, 1); ;\n     break;}\n case 795:\n-#line 3488 \"parse.y\"\n+#line 3474 \"parse.y\"\n { yyval.ttype = finish_parmlist (yyvsp[-1].ttype, 1); ;\n     break;}\n case 796:\n-#line 3490 \"parse.y\"\n+#line 3476 \"parse.y\"\n { yyval.ttype = finish_parmlist (build_tree_list (NULL_TREE,\n \t\t\t\t\t\t\t yyvsp[-1].ftype.t), 1); ;\n     break;}\n case 797:\n-#line 3493 \"parse.y\"\n+#line 3479 \"parse.y\"\n { yyval.ttype = finish_parmlist (NULL_TREE, 1); ;\n     break;}\n case 798:\n-#line 3495 \"parse.y\"\n+#line 3481 \"parse.y\"\n {\n \t\t  /* This helps us recover from really nasty\n \t\t     parse errors, for example, a missing right\n@@ -7531,7 +7517,7 @@ case 798:\n \t\t;\n     break;}\n case 799:\n-#line 3505 \"parse.y\"\n+#line 3491 \"parse.y\"\n {\n \t\t  /* This helps us recover from really nasty\n \t\t     parse errors, for example, a missing right\n@@ -7544,98 +7530,98 @@ case 799:\n \t\t;\n     break;}\n case 800:\n-#line 3520 \"parse.y\"\n+#line 3506 \"parse.y\"\n { maybe_snarf_defarg (); ;\n     break;}\n case 801:\n-#line 3522 \"parse.y\"\n+#line 3508 \"parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 804:\n-#line 3533 \"parse.y\"\n+#line 3519 \"parse.y\"\n { check_for_new_type (\"in a parameter list\", yyvsp[0].ftype);\n \t\t  yyval.ttype = build_tree_list (NULL_TREE, yyvsp[0].ftype.t); ;\n     break;}\n case 805:\n-#line 3536 \"parse.y\"\n+#line 3522 \"parse.y\"\n { check_for_new_type (\"in a parameter list\", yyvsp[-1].ftype);\n \t\t  yyval.ttype = build_tree_list (yyvsp[0].ttype, yyvsp[-1].ftype.t); ;\n     break;}\n case 806:\n-#line 3539 \"parse.y\"\n+#line 3525 \"parse.y\"\n { check_for_new_type (\"in a parameter list\", yyvsp[0].ftype);\n \t\t  yyval.ttype = chainon (yyval.ttype, yyvsp[0].ftype.t); ;\n     break;}\n case 807:\n-#line 3542 \"parse.y\"\n+#line 3528 \"parse.y\"\n { yyval.ttype = chainon (yyval.ttype, build_tree_list (NULL_TREE, yyvsp[0].ttype)); ;\n     break;}\n case 808:\n-#line 3544 \"parse.y\"\n+#line 3530 \"parse.y\"\n { yyval.ttype = chainon (yyval.ttype, build_tree_list (yyvsp[0].ttype, yyvsp[-2].ttype)); ;\n     break;}\n case 810:\n-#line 3550 \"parse.y\"\n+#line 3536 \"parse.y\"\n { check_for_new_type (\"in a parameter list\", yyvsp[-1].ftype);\n \t\t  yyval.ttype = build_tree_list (NULL_TREE, yyvsp[-1].ftype.t); ;\n     break;}\n case 811:\n-#line 3560 \"parse.y\"\n+#line 3546 \"parse.y\"\n { tree specs = strip_attrs (yyvsp[-1].ftype.t);\n \t\t  yyval.ftype.new_type_flag = yyvsp[-1].ftype.new_type_flag;\n \t\t  yyval.ftype.t = build_tree_list (specs, yyvsp[0].ttype); ;\n     break;}\n case 812:\n-#line 3564 \"parse.y\"\n+#line 3550 \"parse.y\"\n { yyval.ftype.t = build_tree_list (yyvsp[-1].ftype.t, yyvsp[0].ttype); \n \t\t  yyval.ftype.new_type_flag = yyvsp[-1].ftype.new_type_flag; ;\n     break;}\n case 813:\n-#line 3567 \"parse.y\"\n+#line 3553 \"parse.y\"\n { yyval.ftype.t = build_tree_list (get_decl_list (yyvsp[-1].ftype.t), yyvsp[0].ttype); \n \t\t  yyval.ftype.new_type_flag = yyvsp[-1].ftype.new_type_flag; ;\n     break;}\n case 814:\n-#line 3570 \"parse.y\"\n+#line 3556 \"parse.y\"\n { tree specs = strip_attrs (yyvsp[-1].ftype.t);\n \t\t  yyval.ftype.t = build_tree_list (specs, yyvsp[0].ttype);\n \t\t  yyval.ftype.new_type_flag = yyvsp[-1].ftype.new_type_flag; ;\n     break;}\n case 815:\n-#line 3574 \"parse.y\"\n+#line 3560 \"parse.y\"\n { tree specs = strip_attrs (yyvsp[0].ftype.t);\n \t\t  yyval.ftype.t = build_tree_list (specs, NULL_TREE); \n \t\t  yyval.ftype.new_type_flag = yyvsp[0].ftype.new_type_flag; ;\n     break;}\n case 816:\n-#line 3578 \"parse.y\"\n+#line 3564 \"parse.y\"\n { tree specs = strip_attrs (yyvsp[-1].ttype);\n \t\t  yyval.ftype.t = build_tree_list (specs, yyvsp[0].ttype); \n \t\t  yyval.ftype.new_type_flag = 0; ;\n     break;}\n case 817:\n-#line 3585 \"parse.y\"\n+#line 3571 \"parse.y\"\n { yyval.ftype.t = build_tree_list (NULL_TREE, yyvsp[0].ftype.t);\n \t\t  yyval.ftype.new_type_flag = yyvsp[0].ftype.new_type_flag;  ;\n     break;}\n case 818:\n-#line 3588 \"parse.y\"\n+#line 3574 \"parse.y\"\n { yyval.ftype.t = build_tree_list (yyvsp[0].ttype, yyvsp[-1].ftype.t);\n \t\t  yyval.ftype.new_type_flag = yyvsp[-1].ftype.new_type_flag;  ;\n     break;}\n case 821:\n-#line 3599 \"parse.y\"\n+#line 3585 \"parse.y\"\n { see_typename (); ;\n     break;}\n case 822:\n-#line 3604 \"parse.y\"\n+#line 3590 \"parse.y\"\n {\n \t\t  error (\"type specifier omitted for parameter\");\n \t\t  yyval.ttype = build_tree_list (integer_type_node, NULL_TREE);\n \t\t;\n     break;}\n case 823:\n-#line 3609 \"parse.y\"\n+#line 3595 \"parse.y\"\n {\n \t\t  error (\"type specifier omitted for parameter\");\n \t\t  if (TREE_CODE (yyval.ttype) == SCOPE_REF\n@@ -7646,193 +7632,193 @@ case 823:\n \t\t;\n     break;}\n case 824:\n-#line 3621 \"parse.y\"\n+#line 3607 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 825:\n-#line 3623 \"parse.y\"\n+#line 3609 \"parse.y\"\n { yyval.ttype = yyvsp[-1].ttype; ;\n     break;}\n case 826:\n-#line 3625 \"parse.y\"\n+#line 3611 \"parse.y\"\n { yyval.ttype = build_decl_list (NULL_TREE, NULL_TREE); ;\n     break;}\n case 827:\n-#line 3630 \"parse.y\"\n+#line 3616 \"parse.y\"\n { yyval.ttype = build_decl_list (NULL_TREE, groktypename(yyvsp[0].ftype.t)); ;\n     break;}\n case 829:\n-#line 3636 \"parse.y\"\n+#line 3622 \"parse.y\"\n {\n \t\t  TREE_CHAIN (yyvsp[0].ttype) = yyval.ttype;\n \t\t  yyval.ttype = yyvsp[0].ttype;\n \t\t;\n     break;}\n case 830:\n-#line 3644 \"parse.y\"\n+#line 3630 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 831:\n-#line 3646 \"parse.y\"\n+#line 3632 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 832:\n-#line 3648 \"parse.y\"\n+#line 3634 \"parse.y\"\n { yyval.ttype = make_reference_declarator (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 833:\n-#line 3650 \"parse.y\"\n+#line 3636 \"parse.y\"\n { tree arg = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-2].ttype, arg);\n \t\t;\n     break;}\n case 834:\n-#line 3657 \"parse.y\"\n+#line 3643 \"parse.y\"\n { got_scope = NULL_TREE; ;\n     break;}\n case 835:\n-#line 3662 \"parse.y\"\n+#line 3648 \"parse.y\"\n { yyval.ttype = ansi_opname[MULT_EXPR]; ;\n     break;}\n case 836:\n-#line 3664 \"parse.y\"\n+#line 3650 \"parse.y\"\n { yyval.ttype = ansi_opname[TRUNC_DIV_EXPR]; ;\n     break;}\n case 837:\n-#line 3666 \"parse.y\"\n+#line 3652 \"parse.y\"\n { yyval.ttype = ansi_opname[TRUNC_MOD_EXPR]; ;\n     break;}\n case 838:\n-#line 3668 \"parse.y\"\n+#line 3654 \"parse.y\"\n { yyval.ttype = ansi_opname[PLUS_EXPR]; ;\n     break;}\n case 839:\n-#line 3670 \"parse.y\"\n+#line 3656 \"parse.y\"\n { yyval.ttype = ansi_opname[MINUS_EXPR]; ;\n     break;}\n case 840:\n-#line 3672 \"parse.y\"\n+#line 3658 \"parse.y\"\n { yyval.ttype = ansi_opname[BIT_AND_EXPR]; ;\n     break;}\n case 841:\n-#line 3674 \"parse.y\"\n+#line 3660 \"parse.y\"\n { yyval.ttype = ansi_opname[BIT_IOR_EXPR]; ;\n     break;}\n case 842:\n-#line 3676 \"parse.y\"\n+#line 3662 \"parse.y\"\n { yyval.ttype = ansi_opname[BIT_XOR_EXPR]; ;\n     break;}\n case 843:\n-#line 3678 \"parse.y\"\n+#line 3664 \"parse.y\"\n { yyval.ttype = ansi_opname[BIT_NOT_EXPR]; ;\n     break;}\n case 844:\n-#line 3680 \"parse.y\"\n+#line 3666 \"parse.y\"\n { yyval.ttype = ansi_opname[COMPOUND_EXPR]; ;\n     break;}\n case 845:\n-#line 3682 \"parse.y\"\n+#line 3668 \"parse.y\"\n { yyval.ttype = ansi_opname[yyvsp[0].code]; ;\n     break;}\n case 846:\n-#line 3684 \"parse.y\"\n+#line 3670 \"parse.y\"\n { yyval.ttype = ansi_opname[LT_EXPR]; ;\n     break;}\n case 847:\n-#line 3686 \"parse.y\"\n+#line 3672 \"parse.y\"\n { yyval.ttype = ansi_opname[GT_EXPR]; ;\n     break;}\n case 848:\n-#line 3688 \"parse.y\"\n+#line 3674 \"parse.y\"\n { yyval.ttype = ansi_opname[yyvsp[0].code]; ;\n     break;}\n case 849:\n-#line 3690 \"parse.y\"\n+#line 3676 \"parse.y\"\n { yyval.ttype = ansi_assopname[yyvsp[0].code]; ;\n     break;}\n case 850:\n-#line 3692 \"parse.y\"\n+#line 3678 \"parse.y\"\n { yyval.ttype = ansi_opname [MODIFY_EXPR]; ;\n     break;}\n case 851:\n-#line 3694 \"parse.y\"\n+#line 3680 \"parse.y\"\n { yyval.ttype = ansi_opname[yyvsp[0].code]; ;\n     break;}\n case 852:\n-#line 3696 \"parse.y\"\n+#line 3682 \"parse.y\"\n { yyval.ttype = ansi_opname[yyvsp[0].code]; ;\n     break;}\n case 853:\n-#line 3698 \"parse.y\"\n+#line 3684 \"parse.y\"\n { yyval.ttype = ansi_opname[POSTINCREMENT_EXPR]; ;\n     break;}\n case 854:\n-#line 3700 \"parse.y\"\n+#line 3686 \"parse.y\"\n { yyval.ttype = ansi_opname[PREDECREMENT_EXPR]; ;\n     break;}\n case 855:\n-#line 3702 \"parse.y\"\n+#line 3688 \"parse.y\"\n { yyval.ttype = ansi_opname[TRUTH_ANDIF_EXPR]; ;\n     break;}\n case 856:\n-#line 3704 \"parse.y\"\n+#line 3690 \"parse.y\"\n { yyval.ttype = ansi_opname[TRUTH_ORIF_EXPR]; ;\n     break;}\n case 857:\n-#line 3706 \"parse.y\"\n+#line 3692 \"parse.y\"\n { yyval.ttype = ansi_opname[TRUTH_NOT_EXPR]; ;\n     break;}\n case 858:\n-#line 3708 \"parse.y\"\n+#line 3694 \"parse.y\"\n { yyval.ttype = ansi_opname[COND_EXPR]; ;\n     break;}\n case 859:\n-#line 3710 \"parse.y\"\n+#line 3696 \"parse.y\"\n { yyval.ttype = ansi_opname[yyvsp[0].code]; ;\n     break;}\n case 860:\n-#line 3712 \"parse.y\"\n+#line 3698 \"parse.y\"\n { yyval.ttype = ansi_opname[COMPONENT_REF]; ;\n     break;}\n case 861:\n-#line 3714 \"parse.y\"\n+#line 3700 \"parse.y\"\n { yyval.ttype = ansi_opname[MEMBER_REF]; ;\n     break;}\n case 862:\n-#line 3716 \"parse.y\"\n+#line 3702 \"parse.y\"\n { yyval.ttype = ansi_opname[CALL_EXPR]; ;\n     break;}\n case 863:\n-#line 3718 \"parse.y\"\n+#line 3704 \"parse.y\"\n { yyval.ttype = ansi_opname[ARRAY_REF]; ;\n     break;}\n case 864:\n-#line 3720 \"parse.y\"\n+#line 3706 \"parse.y\"\n { yyval.ttype = ansi_opname[NEW_EXPR]; ;\n     break;}\n case 865:\n-#line 3722 \"parse.y\"\n+#line 3708 \"parse.y\"\n { yyval.ttype = ansi_opname[DELETE_EXPR]; ;\n     break;}\n case 866:\n-#line 3724 \"parse.y\"\n+#line 3710 \"parse.y\"\n { yyval.ttype = ansi_opname[VEC_NEW_EXPR]; ;\n     break;}\n case 867:\n-#line 3726 \"parse.y\"\n+#line 3712 \"parse.y\"\n { yyval.ttype = ansi_opname[VEC_DELETE_EXPR]; ;\n     break;}\n case 868:\n-#line 3729 \"parse.y\"\n+#line 3715 \"parse.y\"\n { yyval.ttype = grokoptypename (yyvsp[-1].ftype.t, yyvsp[0].ttype); ;\n     break;}\n case 869:\n-#line 3731 \"parse.y\"\n+#line 3717 \"parse.y\"\n { yyval.ttype = ansi_opname[ERROR_MARK]; ;\n     break;}\n }\n    /* the action file gets copied in in place of this dollarsign */\n-#line 498 \"/usr/cygnus/gnupro-98r1/share/bison.simple\"\n+#line 498 \"/usr/lib/bison.simple\"\n \f\n   yyvsp -= yylen;\n   yyssp -= yylen;\n@@ -8028,7 +8014,7 @@ case 869:\n   yystate = yyn;\n   goto yynewstate;\n }\n-#line 3734 \"parse.y\"\n+#line 3720 \"parse.y\"\n \n \n #ifdef SPEW_DEBUG"}, {"sha": "e9551ccc330ee7cf071a3637216602468d784eca", "filename": "gcc/cp/parse.y", "status": "modified", "additions": 2, "deletions": 16, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/648f19f64760673ea9cbf6c429477353b92e68c6/gcc%2Fcp%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/648f19f64760673ea9cbf6c429477353b92e68c6/gcc%2Fcp%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparse.y?ref=648f19f64760673ea9cbf6c429477353b92e68c6", "patch": "@@ -2818,25 +2818,11 @@ complex_direct_notype_declarator:\n \t| direct_notype_declarator '[' ']'\n \t\t{ $$ = build_parse_node (ARRAY_REF, $$, NULL_TREE); }\n \t| notype_qualified_id\n-\t\t{ if (TREE_CODE (OP0 ($1)) == NAMESPACE_DECL)\n-\t\t    {\n-\t\t      push_decl_namespace (OP0 ($1));\n-\t\t      TREE_COMPLEXITY ($1) = -1;\n-\t\t    }\n-\t\t  else if (OP0 ($1) != current_class_type)\n-\t\t    {\n-\t\t      push_nested_class (OP0 ($1), 3);\n-\t\t      TREE_COMPLEXITY ($1) = current_class_depth;\n-\t\t    }\n-\t\t}\n+                { enter_scope_of ($1); }\n         | nested_name_specifier notype_template_declarator\n                 { got_scope = NULL_TREE;\n \t\t  $$ = build_parse_node (SCOPE_REF, $1, $2);\n-\t\t  if ($1 != current_class_type)\n-\t\t    {\n-\t\t      push_nested_class ($1, 3);\n-\t\t      TREE_COMPLEXITY ($$) = current_class_depth;\n-\t\t    }\n+\t\t  enter_scope_of ($$);\n \t\t}\n \t;\n "}, {"sha": "0daab0868069ee1d85034052675795534ffbab91", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/648f19f64760673ea9cbf6c429477353b92e68c6/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/648f19f64760673ea9cbf6c429477353b92e68c6/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=648f19f64760673ea9cbf6c429477353b92e68c6", "patch": "@@ -1427,3 +1427,24 @@ finish_template_type (name, args, entering_scope)\n \n   return decl;\n }\n+\n+/* SR is a SCOPE_REF node.  Enter the scope of SR, whether it is a\n+   namespace scope or a class scope.  */\n+\n+void\n+enter_scope_of (sr)\n+     tree sr;\n+{\n+  tree scope = TREE_OPERAND (sr, 0);\n+\n+  if (TREE_CODE (scope) == NAMESPACE_DECL)\n+    {\n+      push_decl_namespace (scope);\n+      TREE_COMPLEXITY (sr) = -1;\n+    }\n+  else if (scope != current_class_type)\n+    {\n+      push_nested_class (scope, 3);\n+      TREE_COMPLEXITY (sr) = current_class_depth;\n+    }\n+}"}, {"sha": "5a002bd7bf95694bd6694ae6832da5f7ab699c7e", "filename": "gcc/testsuite/g++.old-deja/g++.ns/crash1.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/648f19f64760673ea9cbf6c429477353b92e68c6/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ns%2Fcrash1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/648f19f64760673ea9cbf6c429477353b92e68c6/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ns%2Fcrash1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ns%2Fcrash1.C?ref=648f19f64760673ea9cbf6c429477353b92e68c6", "patch": "@@ -0,0 +1,12 @@\n+// Build don't link:\n+\n+template <class T> \n+struct S1 {};\n+\n+namespace N {\n+}\n+\n+struct S2 \n+{\n+  typedef N::S1<int> S2_T; // ERROR - parse error\n+};"}]}