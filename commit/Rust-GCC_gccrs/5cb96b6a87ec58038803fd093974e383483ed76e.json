{"sha": "5cb96b6a87ec58038803fd093974e383483ed76e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWNiOTZiNmE4N2VjNTgwMzg4MDNmZDA5Mzk3NGUzODM0ODNlZDc2ZQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2016-10-18T14:39:39Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2016-10-18T14:39:39Z"}, "message": "re PR target/77991 (ICE on x32 in plus_constant, at explow.c:87)\n\n\tPR target/77991\n\t* config/i386/i386.c (legitimize_tls_address)\n\t<case TLS_MODEL_INITIAL_EXEC>: For TARGET_64BIT || TARGET_ANY_GNU_TLS\n\tconvert dest to Pmode if different than Pmode.\n\ntestsuite/ChangeLog:\n\n\tPR target/77991\n\t* gcc.target/i386/pr77991.c: New test.\n\nFrom-SVN: r241308", "tree": {"sha": "ca19209cf12776f0c855b965c246702429ba054b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ca19209cf12776f0c855b965c246702429ba054b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5cb96b6a87ec58038803fd093974e383483ed76e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5cb96b6a87ec58038803fd093974e383483ed76e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5cb96b6a87ec58038803fd093974e383483ed76e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5cb96b6a87ec58038803fd093974e383483ed76e/comments", "author": null, "committer": null, "parents": [{"sha": "812ba636c7b12f2c503e34aaf9e2da50d5777b82", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/812ba636c7b12f2c503e34aaf9e2da50d5777b82", "html_url": "https://github.com/Rust-GCC/gccrs/commit/812ba636c7b12f2c503e34aaf9e2da50d5777b82"}], "stats": {"total": 44, "additions": 38, "deletions": 6}, "files": [{"sha": "5fc85caaf7d45e337f4375241bc64ead326bf7ef", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cb96b6a87ec58038803fd093974e383483ed76e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cb96b6a87ec58038803fd093974e383483ed76e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5cb96b6a87ec58038803fd093974e383483ed76e", "patch": "@@ -1,3 +1,10 @@\n+2016-10-18  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/77991\n+\t* config/i386/i386.c (legitimize_tls_address)\n+\t<case TLS_MODEL_INITIAL_EXEC>: For TARGET_64BIT || TARGET_ANY_GNU_TLS\n+\tconvert dest to Pmode if different than Pmode.\n+\n 2016-10-18  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n \n \tPR tree-optimization/77916"}, {"sha": "5cac21d41418e515e9d91b5448589a8445b1a6d0", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cb96b6a87ec58038803fd093974e383483ed76e/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cb96b6a87ec58038803fd093974e383483ed76e/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=5cb96b6a87ec58038803fd093974e383483ed76e", "patch": "@@ -16357,7 +16357,9 @@ legitimize_tls_address (rtx x, enum tls_model model, bool for_mov)\n \t  base = get_thread_pointer (tp_mode,\n \t\t\t\t     for_mov || !TARGET_TLS_DIRECT_SEG_REFS);\n \t  off = force_reg (tp_mode, off);\n-\t  return gen_rtx_PLUS (tp_mode, base, off);\n+\t  dest = gen_rtx_PLUS (tp_mode, base, off);\n+\t  if (tp_mode != Pmode)\n+\t    dest = convert_to_mode (Pmode, dest, 1);\n \t}\n       else\n \t{"}, {"sha": "8e878821f107184f0889d36183af2a730c155b70", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cb96b6a87ec58038803fd093974e383483ed76e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cb96b6a87ec58038803fd093974e383483ed76e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5cb96b6a87ec58038803fd093974e383483ed76e", "patch": "@@ -1,12 +1,16 @@\n+2016-10-18  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/77991\n+\t* gcc.target/i386/pr77991.c: New test.\n+\n 2016-10-18  Matthew Fortune  <matthew.fortune@imgtec.com>\n \n \t* lib/gcc-dg.exp: Set gcc_force_conventional_output whenever\n \tLTO is used.\n \n 2016-10-18  Senthil Kumar Selvaraj  <senthil_kumar.selvaraj@atmel.com>\n \n-\t* gcc.dg/sso/sso.exp: Return early if not \n-\teffective_target_int32.\n+\t* gcc.dg/sso/sso.exp: Return early if not effective_target_int32.\n \n 2016-10-18  Richard Biener  <rguenther@suse.de>\n \n@@ -228,8 +232,8 @@\n \t* g++.dg/ext/flexary18.C: New test.\n \t* g++.dg/torture/pr64312.C: Add a dg-error directive to an ill-formed\n \tregression test.\n-        * g++.dg/compat/struct-layout-1_generate.c (subfield): Add argument.\n-        Avoid generating a flexible array member in an array.\n+\t* g++.dg/compat/struct-layout-1_generate.c (subfield): Add argument.\n+\tAvoid generating a flexible array member in an array.\n \n 2016-10-13  Martin Sebor  <msebor@redhat.com>\n \n@@ -706,7 +710,7 @@\n \t* gcc.dg/torture/pr77855.c: New testcase.\n \n 2016-10-06  James Clarke  <jrtc27@jrtc27.com>\n-            Eric Botcazou  <ebotcazou@adacore.com>\n+\t    Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* g++.dg/other/pr77759.C: New test.\n "}, {"sha": "6784fbcb9fb4351651d5708b236ec074d2dcd7e1", "filename": "gcc/testsuite/gcc.target/i386/pr77991.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5cb96b6a87ec58038803fd093974e383483ed76e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr77991.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5cb96b6a87ec58038803fd093974e383483ed76e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr77991.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr77991.c?ref=5cb96b6a87ec58038803fd093974e383483ed76e", "patch": "@@ -0,0 +1,19 @@\n+/* { dg-do compile { target { ! ia32 } } } */\n+/* { dg-require-effective-target maybe_x32 } */\n+/* { dg-options \"-O2 -mx32 -maddress-mode=short\" } */\n+\n+struct rcu_reader_data\n+{\n+  unsigned ctr;\n+  _Bool waiting;\n+}\n+\n+extern __thread rcu_reader;\n+\n+void rcu_read_lock()\n+{\n+  struct rcu_reader_data *x = &rcu_reader;\n+  _Bool val = 0;\n+\n+  __atomic_store(&x->waiting, &val, 0);\n+}"}]}