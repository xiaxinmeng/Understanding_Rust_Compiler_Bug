{"sha": "83532fb78e33c960520f97b8a94632245ba3ff60", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODM1MzJmYjc4ZTMzYzk2MDUyMGY5N2I4YTk0NjMyMjQ1YmEzZmY2MA==", "commit": {"author": {"name": "Josef Zlomek", "email": "zlomekj@suse.cz", "date": "2004-04-28T06:00:45Z"}, "committer": {"name": "Josef Zlomek", "email": "zlomek@gcc.gnu.org", "date": "2004-04-28T06:00:45Z"}, "message": "var-tracking.c (variable_different_p): Add a parameter compare_current_location...\n\n\t* var-tracking.c (variable_different_p): Add a parameter\n\tcompare_current_location, compare current location of variable parts\n\tif it is true.\n\t(dataflow_set_different_1): Pass compare_current_location == false.\n\t(dataflow_set_different_2): Pass compare_current_location == false.\n\t(emit_notes_for_differences_1): Pass compare_current_location == true.\n\nFrom-SVN: r81242", "tree": {"sha": "59429b428bd2342b0855330999b0587741d5df96", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/59429b428bd2342b0855330999b0587741d5df96"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/83532fb78e33c960520f97b8a94632245ba3ff60", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83532fb78e33c960520f97b8a94632245ba3ff60", "html_url": "https://github.com/Rust-GCC/gccrs/commit/83532fb78e33c960520f97b8a94632245ba3ff60", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83532fb78e33c960520f97b8a94632245ba3ff60/comments", "author": null, "committer": null, "parents": [{"sha": "cfa2949646db7f26ee3d00e584fa4c9a781895c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cfa2949646db7f26ee3d00e584fa4c9a781895c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cfa2949646db7f26ee3d00e584fa4c9a781895c0"}], "stats": {"total": 36, "additions": 28, "deletions": 8}, "files": [{"sha": "6770285e3627a588ac3187646caacd8cc5b4cdaf", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83532fb78e33c960520f97b8a94632245ba3ff60/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83532fb78e33c960520f97b8a94632245ba3ff60/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=83532fb78e33c960520f97b8a94632245ba3ff60", "patch": "@@ -1,3 +1,12 @@\n+2004-04-28  Josef Zlomek  <zlomekj@suse.cz>\n+\n+\t* var-tracking.c (variable_different_p): Add a parameter\n+\tcompare_current_location, compare current location of variable parts\n+\tif it is true.\n+\t(dataflow_set_different_1): Pass compare_current_location == false.\n+\t(dataflow_set_different_2): Pass compare_current_location == false.\n+\t(emit_notes_for_differences_1): Pass compare_current_location == true.\n+\n 2004-04-28  Ulrich Weigand  <uweigand@de.ibm.com>\n \n \t* config/s390/s390.md (\"casesi\"): Mark jump table access as"}, {"sha": "28c0c6fbdbaad2b31bd8bf6865c47546af669978", "filename": "gcc/var-tracking.c", "status": "modified", "additions": 19, "deletions": 8, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83532fb78e33c960520f97b8a94632245ba3ff60/gcc%2Fvar-tracking.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83532fb78e33c960520f97b8a94632245ba3ff60/gcc%2Fvar-tracking.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvar-tracking.c?ref=83532fb78e33c960520f97b8a94632245ba3ff60", "patch": "@@ -304,7 +304,7 @@ static int variable_union_info_cmp_pos (const void *, const void *);\n static int variable_union (void **, void *);\n static void dataflow_set_union (dataflow_set *, dataflow_set *);\n static bool variable_part_different_p (variable_part *, variable_part *);\n-static bool variable_different_p (variable, variable);\n+static bool variable_different_p (variable, variable, bool);\n static int dataflow_set_different_1 (void **, void *);\n static int dataflow_set_different_2 (void **, void *);\n static bool dataflow_set_different (dataflow_set *, dataflow_set *);\n@@ -1260,12 +1260,13 @@ variable_part_different_p (variable_part *vp1, variable_part *vp2)\n   return false;\n }\n \n-/* Return true if variables VAR1 and VAR2 are different (only the first\n-   location in the list of locations is checked for each offset,\n-   i.e. when true is returned a note should be emitted).  */\n+/* Return true if variables VAR1 and VAR2 are different.\n+   If COMPARE_CURRENT_LOCATION is true compare also the cur_loc of each\n+   variable part.  */\n \n static bool\n-variable_different_p (variable var1, variable var2)\n+variable_different_p (variable var1, variable var2,\n+\t\t      bool compare_current_location)\n {\n   int i;\n \n@@ -1279,6 +1280,16 @@ variable_different_p (variable var1, variable var2)\n     {\n       if (var1->var_part[i].offset != var2->var_part[i].offset)\n \treturn true;\n+      if (compare_current_location)\n+\t{\n+\t  if (!((GET_CODE (var1->var_part[i].cur_loc) == REG\n+\t\t && GET_CODE (var2->var_part[i].cur_loc) == REG\n+\t\t && (REGNO (var1->var_part[i].cur_loc)\n+\t\t     == REGNO (var2->var_part[i].cur_loc)))\n+\t\t|| rtx_equal_p (var1->var_part[i].cur_loc,\n+\t\t\t\tvar2->var_part[i].cur_loc)))\n+\t    return true;\n+\t}\n       if (variable_part_different_p (&var1->var_part[i], &var2->var_part[i]))\n \treturn true;\n       if (variable_part_different_p (&var2->var_part[i], &var1->var_part[i]))\n@@ -1307,7 +1318,7 @@ dataflow_set_different_1 (void **slot, void *data)\n       return 0;\n     }\n \n-  if (variable_different_p (var1, var2))\n+  if (variable_different_p (var1, var2, false))\n     {\n       dataflow_set_different_value = true;\n \n@@ -1342,7 +1353,7 @@ dataflow_set_different_2 (void **slot, void *data)\n #ifdef ENABLE_CHECKING\n   /* If both variables are defined they have been already checked for\n      equivalence.  */\n-  if (variable_different_p (var1, var2))\n+  if (variable_different_p (var1, var2, false))\n     abort ();\n #endif\n \n@@ -2286,7 +2297,7 @@ emit_notes_for_differences_1 (void **slot, void *data)\n       empty_var->n_var_parts = 0;\n       variable_was_changed (empty_var, NULL);\n     }\n-  else if (variable_different_p (old_var, new_var))\n+  else if (variable_different_p (old_var, new_var, true))\n     {\n       variable_was_changed (new_var, NULL);\n     }"}]}