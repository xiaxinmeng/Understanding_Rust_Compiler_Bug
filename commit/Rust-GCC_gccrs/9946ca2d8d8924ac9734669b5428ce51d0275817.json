{"sha": "9946ca2d8d8924ac9734669b5428ce51d0275817", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTk0NmNhMmQ4ZDg5MjRhYzk3MzQ2NjliNTQyOGNlNTFkMDI3NTgxNw==", "commit": {"author": {"name": "Raksit Ashok", "email": "raksit@google.com", "date": "2008-07-08T22:17:07Z"}, "committer": {"name": "Raksit Ashok", "email": "raksit@gcc.gnu.org", "date": "2008-07-08T22:17:07Z"}, "message": "expr.c (emit_block_move_via_movmem): Fix expected_align parameter.\n\n2008-07-08  Raksit Ashok  <raksit@google.com>\n\n\t* expr.c (emit_block_move_via_movmem): Fix expected_align parameter.\n\t(set_storage_via_setmem): Fix expected_align parameter.\n\t* doc/invoke.texi (i386 and x86-64 Options): Add a couple of options\n\tmissing from the list.\n\t* doc/md.texi (movmem): Explicitly state that expected alignment is\n\tto be expressed in bytes.\n\t(setmem): Explicitly state that expected alignment is to be expressed\n\tin bytes.\n\nFrom-SVN: r137646", "tree": {"sha": "676ef68ed6b19e87b05cd397cf60db4bd3567eff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/676ef68ed6b19e87b05cd397cf60db4bd3567eff"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9946ca2d8d8924ac9734669b5428ce51d0275817", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9946ca2d8d8924ac9734669b5428ce51d0275817", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9946ca2d8d8924ac9734669b5428ce51d0275817", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9946ca2d8d8924ac9734669b5428ce51d0275817/comments", "author": null, "committer": null, "parents": [{"sha": "10932211a8e7096f44a9295d6b73d54bfd2a246a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10932211a8e7096f44a9295d6b73d54bfd2a246a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/10932211a8e7096f44a9295d6b73d54bfd2a246a"}], "stats": {"total": 24, "additions": 20, "deletions": 4}, "files": [{"sha": "376fb12edd181c5395b120dafd956577799b124d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9946ca2d8d8924ac9734669b5428ce51d0275817/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9946ca2d8d8924ac9734669b5428ce51d0275817/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9946ca2d8d8924ac9734669b5428ce51d0275817", "patch": "@@ -1,3 +1,14 @@\n+2008-07-08  Raksit Ashok  <raksit@google.com>\n+\n+\t* expr.c (emit_block_move_via_movmem): Fix expected_align parameter.\n+\t(set_storage_via_setmem): Fix expected_align parameter.\n+\t* doc/invoke.texi (i386 and x86-64 Options): Add a couple of options\n+\tmissing from the list.\n+\t* doc/md.texi (movmem): Explicitly state that expected alignment is\n+\tto be expressed in bytes.\n+\t(setmem): Explicitly state that expected alignment is to be expressed\n+\tin bytes.\n+\n 2008-07-08  Joseph Myers  <joseph@codesourcery.com>\n \n \t* reload.c (find_reloads_subreg_address): Do not require validity"}, {"sha": "689f8381e1b744bb1e15a3faac025ad0f3690c45", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9946ca2d8d8924ac9734669b5428ce51d0275817/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9946ca2d8d8924ac9734669b5428ce51d0275817/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=9946ca2d8d8924ac9734669b5428ce51d0275817", "patch": "@@ -559,6 +559,7 @@ Objective-C and Objective-C++ Dialects}.\n -maes -mpclmul @gol\n -msse4a -m3dnow -mpopcnt -mabm -msse5 @gol\n -mthreads  -mno-align-stringops  -minline-all-stringops @gol\n+-minline-stringops-dynamically -mstringop-strategy=@var{alg} @gol\n -mpush-args  -maccumulate-outgoing-args  -m128bit-long-double @gol\n -m96bit-long-double  -mregparm=@var{num}  -msseregparm @gol\n -mveclibabi=@var{type} -mpc32 -mpc64 -mpc80 -mstackrealign @gol"}, {"sha": "c96fd56619cbf6c352c7bc2eb58fcb2c2ad66ea1", "filename": "gcc/doc/md.texi", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9946ca2d8d8924ac9734669b5428ce51d0275817/gcc%2Fdoc%2Fmd.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9946ca2d8d8924ac9734669b5428ce51d0275817/gcc%2Fdoc%2Fmd.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fmd.texi?ref=9946ca2d8d8924ac9734669b5428ce51d0275817", "patch": "@@ -4217,7 +4217,8 @@ it may provide the value 4 for this operand.\n Optional operands 5 and 6 specify expected alignment and size of block\n respectively.  The expected alignment differs from alignment in operand 4\n in a way that the blocks are not required to be aligned according to it in\n-all cases. Expected size, when unknown, is set to @code{(const_int -1)}.\n+all cases. This expected alignment is also in bytes, just like operand 4.\n+Expected size, when unknown, is set to @code{(const_int -1)}.\n \n Descriptions of multiple @code{movmem@var{m}} patterns can only be\n beneficial if the patterns for smaller modes have fewer restrictions\n@@ -4254,7 +4255,8 @@ operand.\n Optional operands 5 and 6 specify expected alignment and size of block\n respectively.  The expected alignment differs from alignment in operand 4\n in a way that the blocks are not required to be aligned according to it in\n-all cases. Expected size, when unknown, is set to @code{(const_int -1)}.\n+all cases. This expected alignment is also in bytes, just like operand 4.\n+Expected size, when unknown, is set to @code{(const_int -1)}.\n \n The use for multiple @code{setmem@var{m}} is as for @code{movmem@var{m}}.\n "}, {"sha": "e7c24e2b838671e48962baa755eff9a0d6cd7551", "filename": "gcc/expr.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9946ca2d8d8924ac9734669b5428ce51d0275817/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9946ca2d8d8924ac9734669b5428ce51d0275817/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=9946ca2d8d8924ac9734669b5428ce51d0275817", "patch": "@@ -1360,7 +1360,8 @@ emit_block_move_via_movmem (rtx x, rtx y, rtx size, unsigned int align,\n \t    pat = GEN_FCN ((int) code) (x, y, op2, opalign);\n \t  else\n \t    pat = GEN_FCN ((int) code) (x, y, op2, opalign,\n-\t\t\t\t\tGEN_INT (expected_align),\n+\t\t\t\t\tGEN_INT (expected_align\n+\t\t\t\t\t\t / BITS_PER_UNIT),\n \t\t\t\t\tGEN_INT (expected_size));\n \t  if (pat)\n \t    {\n@@ -2780,7 +2781,8 @@ set_storage_via_setmem (rtx object, rtx size, rtx val, unsigned int align,\n \t    pat = GEN_FCN ((int) code) (object, opsize, opchar, opalign);\n \t  else\n \t    pat = GEN_FCN ((int) code) (object, opsize, opchar, opalign,\n-\t\t\t\t\tGEN_INT (expected_align),\n+\t\t\t\t\tGEN_INT (expected_align\n+\t\t\t\t\t\t / BITS_PER_UNIT),\n \t\t\t\t\tGEN_INT (expected_size));\n \t  if (pat)\n \t    {"}]}