{"sha": "72ba655679d88cd4f5bb2bbd716a6c44e2170394", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzJiYTY1NTY3OWQ4OGNkNGY1YmIyYmJkNzE2YTZjNDRlMjE3MDM5NA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-02-28T12:12:17Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-02-28T12:12:17Z"}, "message": "(READONLY_DATA_SECTION, LEGITIMATE_PIC_OPERAND_P): Defined.\n\n(FUNCTION_PROLOGUE): Emit PIC prologue.\n\nFrom-SVN: r6673", "tree": {"sha": "72f56cee1f5eb86184bf956509b1292b3149df89", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/72f56cee1f5eb86184bf956509b1292b3149df89"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/72ba655679d88cd4f5bb2bbd716a6c44e2170394", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72ba655679d88cd4f5bb2bbd716a6c44e2170394", "html_url": "https://github.com/Rust-GCC/gccrs/commit/72ba655679d88cd4f5bb2bbd716a6c44e2170394", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72ba655679d88cd4f5bb2bbd716a6c44e2170394/comments", "author": null, "committer": null, "parents": [{"sha": "9524442b901f273279d34ef7c8607854cae923e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9524442b901f273279d34ef7c8607854cae923e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9524442b901f273279d34ef7c8607854cae923e5"}], "stats": {"total": 21, "additions": 18, "deletions": 3}, "files": [{"sha": "54220c0f785c36446f483942090caf0ab1c2ac3f", "filename": "gcc/config/m68k/hp320.h", "status": "modified", "additions": 18, "deletions": 3, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72ba655679d88cd4f5bb2bbd716a6c44e2170394/gcc%2Fconfig%2Fm68k%2Fhp320.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72ba655679d88cd4f5bb2bbd716a6c44e2170394/gcc%2Fconfig%2Fm68k%2Fhp320.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fhp320.h?ref=72ba655679d88cd4f5bb2bbd716a6c44e2170394", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of target machine for GNU compiler.  HP-UX 68000/68020 version.\n-   Copyright (C) 1987, 1988, 1993 Free Software Foundation, Inc.\n+   Copyright (C) 1987, 1988, 1993, 1994 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -160,6 +160,7 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n #undef ASM_APP_OFF\n #undef TEXT_SECTION_ASM_OP\n #undef DATA_SECTION_ASM_OP\n+#undef READONLY_DATA_SECTION\n #undef ASM_OUTPUT_DOUBLE\n #undef ASM_OUTPUT_FLOAT\n #undef ASM_OUTPUT_INT\n@@ -211,7 +212,15 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n     mask &= ~ (1 << (15-FRAME_POINTER_REGNUM));\t\t\t\\\n   if (exact_log2 (mask) >= 0)\t\t\t\t\t\\\n     fprintf (FILE, \"\\tmov.l %s,-(%%sp)\\n\", reg_names[15 - exact_log2 (mask)]);  \\\n-  else if (mask) fprintf (FILE, \"\\tmovm.l &0x%x,-(%%sp)\\n\", mask); }\n+  else if (mask) fprintf (FILE, \"\\tmovm.l &0x%x,-(%%sp)\\n\", mask); }\\\n+  if (flag_pic && current_function_uses_pic_offset_table)       \\\n+    {                                                           \\\n+      fprintf (FILE, \"\\tmov.l &DLT, %s\\n\",\\\n+\t\t   reg_names[PIC_OFFSET_TABLE_REGNUM]);         \\\n+      fprintf (FILE, \"\\tlea.l -0x6(%%pc,%s.l),%s\\n\",          \\\n+\t\t   reg_names[PIC_OFFSET_TABLE_REGNUM],          \\\n+\t\t   reg_names[PIC_OFFSET_TABLE_REGNUM]);         \\\n+    }\n \n #define FUNCTION_PROFILER(FILE, LABEL_NO) \\\n    fprintf (FILE, \"\\tmov.l &LP%d,%%a0\\n\\tjsr mcount\\n\", (LABEL_NO));\n@@ -307,7 +316,7 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n #define TEXT_SECTION_ASM_OP \"text\"\n #define DATA_SECTION_ASM_OP \"data\"\n #endif\n-\n+#define READONLY_DATA_SECTION data_section\n #define\tASCII_DATA_ASM_OP \"byte\"\n  \n /* This is the command to make the user-level label named NAME\n@@ -669,3 +678,9 @@ do { register int i;\t\t\t\\\n \t   (LABEL_NO));\n \n #endif /* not HPUX_ASM */\n+/* In m68k svr4, a symbol_ref rtx can be a valid PIC operand if it is an\n+   operand of a function call. */\n+#undef LEGITIMATE_PIC_OPERAND_P\n+#define LEGITIMATE_PIC_OPERAND_P(X) \\\n+  (! symbolic_operand (X, VOIDmode) \\\n+   || ((GET_CODE(X) == SYMBOL_REF) && SYMBOL_REF_FLAG(X)))"}]}