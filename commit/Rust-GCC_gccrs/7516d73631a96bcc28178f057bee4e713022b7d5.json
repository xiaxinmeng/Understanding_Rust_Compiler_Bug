{"sha": "7516d73631a96bcc28178f057bee4e713022b7d5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzUxNmQ3MzYzMWE5NmJjYzI4MTc4ZjA1N2JlZTRlNzEzMDIyYjdkNQ==", "commit": {"author": {"name": "Janis Johnson", "email": "janis187@us.ibm.com", "date": "2003-07-03T20:37:42Z"}, "committer": {"name": "Janis Johnson", "email": "janis@gcc.gnu.org", "date": "2003-07-03T20:37:42Z"}, "message": "vector-defs.h: New file.\n\n\t* gcc.dg/compat/vector-defs.h: New file.\n\t* gcc.dg/compat/vector-setup.h: New file.\n\t* gcc.dg/compat/vector-check.h: New file.\n\t* gcc.dg/compat/vector-1_main.c: New file.\n\t* gcc.dg/compat/vector-1_x.c: New file.\n\t* gcc.dg/compat/vector-1_y.c: New file.\n\t* gcc.dg/compat/vector-2_main.c: New file.\n\t* gcc.dg/compat/vector-2_x.c: New file.\n\t* gcc.dg/compat/vector-2_y.c: New file.\n\nFrom-SVN: r68902", "tree": {"sha": "d583d919965c4a6d72f0e2f070ecb232bd6307eb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d583d919965c4a6d72f0e2f070ecb232bd6307eb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7516d73631a96bcc28178f057bee4e713022b7d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7516d73631a96bcc28178f057bee4e713022b7d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7516d73631a96bcc28178f057bee4e713022b7d5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7516d73631a96bcc28178f057bee4e713022b7d5/comments", "author": null, "committer": null, "parents": [{"sha": "0964c98c4c3e37652497515f187b29da47e3776b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0964c98c4c3e37652497515f187b29da47e3776b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0964c98c4c3e37652497515f187b29da47e3776b"}], "stats": {"total": 255, "additions": 255, "deletions": 0}, "files": [{"sha": "7e4c0e659d4662db04de39ea7679d4460fd9b44c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7516d73631a96bcc28178f057bee4e713022b7d5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7516d73631a96bcc28178f057bee4e713022b7d5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7516d73631a96bcc28178f057bee4e713022b7d5", "patch": "@@ -1,5 +1,15 @@\n 2003-07-03  Janis Johnson  <janis187@us.ibm.com>\n \n+\t* gcc.dg/compat/vector-defs.h: New file.\n+\t* gcc.dg/compat/vector-setup.h: New file.\n+\t* gcc.dg/compat/vector-check.h: New file.\n+\t* gcc.dg/compat/vector-1_main.c: New file.\n+\t* gcc.dg/compat/vector-1_x.c: New file.\n+\t* gcc.dg/compat/vector-1_y.c: New file.\n+\t* gcc.dg/compat/vector-2_main.c: New file.\n+\t* gcc.dg/compat/vector-2_x.c: New file.\n+\t* gcc.dg/compat/vector-2_y.c: New file.\n+\n \t* gcc.dg/compat/fnptr-by-value-1_main.c: New file.\n \t* gcc.dg/compat/fnptr-by-value-1_x.c: New file.\n \t* gcc.dg/compat/fnptr-by-value-1_y.c: New file."}, {"sha": "6c995e7c4bb8fb3458effd2f83f3c65e21f8a97b", "filename": "gcc/testsuite/gcc.dg/compat/vector-1_main.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7516d73631a96bcc28178f057bee4e713022b7d5/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fvector-1_main.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7516d73631a96bcc28178f057bee4e713022b7d5/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fvector-1_main.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fvector-1_main.c?ref=7516d73631a96bcc28178f057bee4e713022b7d5", "patch": "@@ -0,0 +1,14 @@\n+/* Test compatibility of vector types: layout between separately-compiled\n+   modules, parameter passing, and function return.  This test uses\n+   vectors of integer values.  */\n+\n+extern void vector_1_x (void);\n+extern void exit (int);\n+int fails;\n+\n+int\n+main ()\n+{\n+  vector_1_x ();\n+  exit (0);\n+}"}, {"sha": "b32a07581f986b4bfaea1b863b821ebd132d6e22", "filename": "gcc/testsuite/gcc.dg/compat/vector-1_x.c", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7516d73631a96bcc28178f057bee4e713022b7d5/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fvector-1_x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7516d73631a96bcc28178f057bee4e713022b7d5/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fvector-1_x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fvector-1_x.c?ref=7516d73631a96bcc28178f057bee4e713022b7d5", "patch": "@@ -0,0 +1,34 @@\n+#include \"compat-common.h\"\n+#include \"vector-defs.h\"\n+#include \"vector-setup.h\"\n+\n+SETUP (8, qi);\n+SETUP (16, qi);\n+SETUP (2, hi);\n+SETUP (4, hi);\n+SETUP (8, hi);\n+SETUP (2, si);\n+SETUP (4, si);\n+SETUP (1, di);\n+SETUP (2, di);\n+\n+void\n+vector_1_x (void)\n+{\n+  DEBUG_INIT\n+\n+  CHECK (8, qi);\n+  CHECK (16, qi);\n+  CHECK (2, hi);\n+  CHECK (4, hi);\n+  CHECK (8, hi);\n+  CHECK (2, si);\n+  CHECK (4, si);\n+  CHECK (1, di);\n+  CHECK (2, di);\n+\n+  DEBUG_FINI\n+\n+  if (fails != 0)\n+    abort ();\n+}"}, {"sha": "5a8336f2004ba7707bcb76ebb560bbda73ebf8bd", "filename": "gcc/testsuite/gcc.dg/compat/vector-1_y.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7516d73631a96bcc28178f057bee4e713022b7d5/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fvector-1_y.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7516d73631a96bcc28178f057bee4e713022b7d5/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fvector-1_y.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fvector-1_y.c?ref=7516d73631a96bcc28178f057bee4e713022b7d5", "patch": "@@ -0,0 +1,13 @@\n+#include \"compat-common.h\"\n+#include \"vector-defs.h\"\n+#include \"vector-check.h\"\n+\n+TEST (8, qi, 101)\n+TEST (16, qi, 101)\n+TEST (2, hi, 201)\n+TEST (4, hi, 202)\n+TEST (8, hi, 203)\n+TEST (2, si, 301)\n+TEST (4, si, 302)\n+TEST (1, di, 401)\n+TEST (2, di, 402)"}, {"sha": "37f36fe0eca4a54b599ef576da9b7a4556533c17", "filename": "gcc/testsuite/gcc.dg/compat/vector-2_main.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7516d73631a96bcc28178f057bee4e713022b7d5/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fvector-2_main.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7516d73631a96bcc28178f057bee4e713022b7d5/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fvector-2_main.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fvector-2_main.c?ref=7516d73631a96bcc28178f057bee4e713022b7d5", "patch": "@@ -0,0 +1,14 @@\n+/* Test compatibility of vector types: layout between separately-compiled\n+   modules, parameter passing, and function return.  This test uses\n+   vectors of floating points values.  */\n+\n+extern void vector_2_x (void);\n+extern void exit (int);\n+int fails;\n+\n+int\n+main ()\n+{\n+  vector_2_x ();\n+  exit (0);\n+}"}, {"sha": "53fddedef480b761f93735452a0faf871c584860", "filename": "gcc/testsuite/gcc.dg/compat/vector-2_x.c", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7516d73631a96bcc28178f057bee4e713022b7d5/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fvector-2_x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7516d73631a96bcc28178f057bee4e713022b7d5/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fvector-2_x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fvector-2_x.c?ref=7516d73631a96bcc28178f057bee4e713022b7d5", "patch": "@@ -0,0 +1,24 @@\n+#include \"compat-common.h\"\n+#include \"vector-defs.h\"\n+#include \"vector-setup.h\"\n+\n+SETUP (2, sf);\n+SETUP (4, sf);\n+SETUP (16, sf);\n+SETUP (2, df);\n+\n+void\n+vector_2_x (void)\n+{\n+  DEBUG_INIT\n+\n+  CHECK (2, sf);\n+  CHECK (4, sf);\n+  CHECK (16, sf);\n+  CHECK (2, df);\n+\n+  DEBUG_FINI\n+\n+  if (fails != 0)\n+    abort ();\n+}"}, {"sha": "a15964d526c8a9980fdd4a20ae76822e9c5e0faa", "filename": "gcc/testsuite/gcc.dg/compat/vector-2_y.c", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7516d73631a96bcc28178f057bee4e713022b7d5/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fvector-2_y.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7516d73631a96bcc28178f057bee4e713022b7d5/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fvector-2_y.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fvector-2_y.c?ref=7516d73631a96bcc28178f057bee4e713022b7d5", "patch": "@@ -0,0 +1,8 @@\n+#include \"compat-common.h\"\n+#include \"vector-defs.h\"\n+#include \"vector-check.h\"\n+\n+TEST (2, sf, 301.0)\n+TEST (4, sf, 302.0)\n+TEST (16, sf, 304.0)\n+TEST (2, df, 402.0)"}, {"sha": "f500bd4f43a2745b60f7c98556500d18fb7a3ac1", "filename": "gcc/testsuite/gcc.dg/compat/vector-check.h", "status": "added", "additions": 64, "deletions": 0, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7516d73631a96bcc28178f057bee4e713022b7d5/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fvector-check.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7516d73631a96bcc28178f057bee4e713022b7d5/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fvector-check.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fvector-check.h?ref=7516d73631a96bcc28178f057bee4e713022b7d5", "patch": "@@ -0,0 +1,64 @@\n+#define TEST(NUM,TMODE,VAL)\t\t\t\t\\\n+extern v##NUM##TMODE g_v##NUM##TMODE;\t\t\t\\\n+extern int g_##TMODE;\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\\\n+extern void pass_v##NUM##TMODE (v##NUM##TMODE);\t\t\\\n+extern v##NUM##TMODE return_v##NUM##TMODE (void);\t\\\n+\t\t\t\t\t\t\t\\\n+void\t\t\t\t\t\t\t\\\n+checkp_##NUM##TMODE (TMODE *p)\t\t\t\t\\\n+{\t\t\t\t\t\t\t\\\n+  int i;\t\t\t\t\t\t\\\n+  for (i = 0; i < NUM; i++)\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\\\n+      if (p[i] != g_##TMODE + i)\t\t\t\\\n+\tDEBUG_CHECK;\t\t\t\t\t\\\n+    }\t\t\t\t\t\t\t\\\n+}\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\\\n+void\t\t\t\t\t\t\t\\\n+checkg_##NUM##TMODE (void)\t\t\t\t\\\n+{\t\t\t\t\t\t\t\\\n+  u##NUM##TMODE u;\t\t\t\t\t\\\n+  TMODE *p = u.a;\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\\\n+  u.v = g_v##NUM##TMODE;\t\t\t\t\\\n+  checkp_##NUM##TMODE (p);\t\t\t\t\\\n+}\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\\\n+void\t\t\t\t\t\t\t\\\n+init_##NUM##TMODE (void)\t\t\t\t\\\n+{\t\t\t\t\t\t\t\\\n+  int i;\t\t\t\t\t\t\\\n+  u##NUM##TMODE u;\t\t\t\t\t\\\n+  g_##TMODE = VAL;\t\t\t\t\t\\\n+  for (i = 0; i < NUM; i++)\t\t\t\t\\\n+    u.a[i] = VAL + i;\t\t\t\t\t\\\n+  g_v##NUM##TMODE = u.v;\t\t\t\t\\\n+}\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\\\n+void\t\t\t\t\t\t\t\\\n+test_v##NUM##TMODE (void)\t\t\t\t\\\n+{\t\t\t\t\t\t\t\\\n+  v##NUM##TMODE v;\t\t\t\t\t\\\n+  u##NUM##TMODE u;\t\t\t\t\t\\\n+  TMODE *p = u.a;\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\\\n+  DEBUG_FPUTS (\"v\" #NUM #TMODE);\t\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\\\n+  DEBUG_FPUTS (\"  global variable:\");\t\t\t\\\n+  init_##NUM##TMODE ();\t\t\t\t\t\\\n+  checkg_##NUM##TMODE ();\t\t\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\\\n+  DEBUG_FPUTS (\"  pass global variable:\");\t\t\\\n+  pass_v##NUM##TMODE (g_v##NUM##TMODE);\t\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\\\n+  DEBUG_FPUTS (\"  pass local variable:\");\t\t\\\n+  v = g_v##NUM##TMODE;\t\t\t\t\t\\\n+  pass_v##NUM##TMODE (v);\t\t\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\\\n+  DEBUG_FPUTS (\"  function return:\");\t\t\t\\\n+  u.v = return_v##NUM##TMODE ();\t\t\t\\\n+  checkp_##NUM##TMODE (p);\t\t\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\\\n+}"}, {"sha": "cef5d76b2a2e0d9673ba3ef1357c3d45888d4ad7", "filename": "gcc/testsuite/gcc.dg/compat/vector-defs.h", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7516d73631a96bcc28178f057bee4e713022b7d5/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fvector-defs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7516d73631a96bcc28178f057bee4e713022b7d5/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fvector-defs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fvector-defs.h?ref=7516d73631a96bcc28178f057bee4e713022b7d5", "patch": "@@ -0,0 +1,46 @@\n+/* This includes all of the vector modes that are recognized by\n+   c_common_type_for_mode, grouped by base mode.  */\n+\n+typedef int __attribute__((mode(QI))) qi;\n+typedef int __attribute__((mode(V8QI))) v8qi;\n+typedef int __attribute__((mode(V16QI))) v16qi;\n+\n+typedef union U8QI { v8qi v; qi a[8]; } u8qi;\n+typedef union U16QI { v16qi v; qi a[16]; } u16qi;\n+\n+typedef int __attribute__((mode(HI))) hi;\n+typedef int __attribute__((mode(V2HI))) v2hi;\n+typedef int __attribute__((mode(V4HI))) v4hi;\n+typedef int __attribute__((mode(V8HI))) v8hi;\n+\n+typedef union U2HI { v2hi v; hi a[2]; } u2hi;\n+typedef union U4HI { v4hi v; hi a[4]; } u4hi;\n+typedef union U8HI { v8hi v; hi a[8]; } u8hi;\n+\n+typedef int __attribute__((mode(SI))) si;\n+typedef int __attribute__((mode(V2SI))) v2si;\n+typedef int __attribute__((mode(V4SI))) v4si;\n+\n+typedef union U2SI { v2si v; si a[2]; } u2si;\n+typedef union U4SI { v4si v; si a[4]; } u4si;\n+\n+typedef int __attribute__((mode(DI))) di;\n+typedef int __attribute__((mode(V1DI))) v1di;\n+typedef int __attribute__((mode(V2DI))) v2di;\n+\n+typedef union U1DI { v1di v; di a[1]; } u1di;\n+typedef union U2DI { v2di v; di a[2]; } u2di;\n+\n+typedef float __attribute__((mode(SF))) sf;\n+typedef float __attribute__((mode(V2SF))) v2sf;\n+typedef float __attribute__((mode(V4SF))) v4sf;\n+typedef float __attribute__((mode(V16SF))) v16sf;\n+\n+typedef union U2SF { v2sf v; sf a[2]; } u2sf;\n+typedef union U4SF { v4sf v; sf a[4]; } u4sf;\n+typedef union U16SF { v16sf v; sf a[16]; } u16sf;\n+\n+typedef float __attribute__((mode(DF))) df;\n+typedef float __attribute__((mode(V2DF))) v2df;\n+\n+typedef union U2DF { v2df v; df a[2]; } u2df;"}, {"sha": "60419f851fbe9ef3b86065ca89027f0f5ba4aefd", "filename": "gcc/testsuite/gcc.dg/compat/vector-setup.h", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7516d73631a96bcc28178f057bee4e713022b7d5/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fvector-setup.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7516d73631a96bcc28178f057bee4e713022b7d5/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fvector-setup.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fvector-setup.h?ref=7516d73631a96bcc28178f057bee4e713022b7d5", "patch": "@@ -0,0 +1,28 @@\n+#define SETUP(NUM,TMODE)\t\t\t\t\\\n+v##NUM##TMODE g_v##NUM##TMODE;\t\t\t\t\\\n+TMODE g_##TMODE;\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\\\n+extern void test_v##NUM##TMODE (void);\t\t\t\\\n+extern void checkp_##NUM##TMODE (TMODE *);\t\t\\\n+\t\t\t\t\t\t\t\\\n+void\t\t\t\t\t\t\t\\\n+pass_v##NUM##TMODE (v##NUM##TMODE v)\t\t\t\\\n+{\t\t\t\t\t\t\t\\\n+  u##NUM##TMODE u;\t\t\t\t\t\\\n+  int j;\t\t\t\t\t\t\\\n+  TMODE a[NUM];\t\t\t\t\t\t\\\n+  \t\t\t\t\t\t\t\\\n+  u.v = v;\t\t\t\t\t\t\\\n+  for (j = 0; j < NUM; j++)\t\t\t\t\\\n+    a[j] = u.a[j];\t\t\t\t\t\\\n+  checkp_##NUM##TMODE (a);\t\t\t\t\\\n+}\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\\\n+v##NUM##TMODE\t\t\t\t\t\t\\\n+return_v##NUM##TMODE (void)\t\t\t\t\\\n+{\t\t\t\t\t\t\t\\\n+  return g_v##NUM##TMODE;\t\t\t\t\\\n+}\n+\n+#define CHECK(NUM,TMODE)\t\t\t\t\\\n+  test_v##NUM##TMODE()"}]}