{"sha": "2ac26e152e6ee91698ddd752d3ec788ead9c90df", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmFjMjZlMTUyZTZlZTkxNjk4ZGRkNzUyZDNlYzc4OGVhZDljOTBkZg==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2009-03-27T22:37:39Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2009-03-27T22:37:39Z"}, "message": "re PR middle-end/39315 (Unaligned move used on aligned stack variable)\n\ngcc/\n\n2009-03-27  H.J. Lu  <hongjiu.lu@intel.com>\n\n\tPR middle-end/39315\n\t* cfgexpand.c (expand_one_stack_var_at): Change alignment\n\tlimit to MAX_SUPPORTED_STACK_ALIGNMENT.\n\ngcc/testsuite/\n\n2009-03-27  H.J. Lu  <hongjiu.lu@intel.com>\n\n\tPR middle-end/39315\n\t* gcc.target/i386/pr39315-1.c: New.\n\t* gcc.target/i386/pr39315-2.c: Likewise.\n\t* gcc.target/i386/pr39315-3.c: Likewise.\n\t* gcc.target/i386/pr39315-4.c: Likewise.\n\t* gcc.target/i386/pr39315-check.c: Likewise.\n\nFrom-SVN: r145138", "tree": {"sha": "cbedb3f56b939f163e28dad691890cef4b42f791", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cbedb3f56b939f163e28dad691890cef4b42f791"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2ac26e152e6ee91698ddd752d3ec788ead9c90df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ac26e152e6ee91698ddd752d3ec788ead9c90df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ac26e152e6ee91698ddd752d3ec788ead9c90df", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ac26e152e6ee91698ddd752d3ec788ead9c90df/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "472c7fbd0979129313e49c2fb73ff5b36d4b1d57", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/472c7fbd0979129313e49c2fb73ff5b36d4b1d57", "html_url": "https://github.com/Rust-GCC/gccrs/commit/472c7fbd0979129313e49c2fb73ff5b36d4b1d57"}], "stats": {"total": 111, "additions": 109, "deletions": 2}, "files": [{"sha": "e7d95c74b2828c1e20df406881640aad26787bdf", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ac26e152e6ee91698ddd752d3ec788ead9c90df/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ac26e152e6ee91698ddd752d3ec788ead9c90df/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2ac26e152e6ee91698ddd752d3ec788ead9c90df", "patch": "@@ -1,3 +1,9 @@\n+2009-03-27  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR middle-end/39315\n+\t* cfgexpand.c (expand_one_stack_var_at): Change alignment\n+\tlimit to MAX_SUPPORTED_STACK_ALIGNMENT.\n+\n 2009-03-27  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/39120"}, {"sha": "695e4ef0ef90a78cffebc1ec81285d1cce21d215", "filename": "gcc/cfgexpand.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ac26e152e6ee91698ddd752d3ec788ead9c90df/gcc%2Fcfgexpand.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ac26e152e6ee91698ddd752d3ec788ead9c90df/gcc%2Fcfgexpand.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgexpand.c?ref=2ac26e152e6ee91698ddd752d3ec788ead9c90df", "patch": "@@ -866,7 +866,8 @@ dump_stack_var_partition (void)\n static void\n expand_one_stack_var_at (tree decl, HOST_WIDE_INT offset)\n {\n-  HOST_WIDE_INT align;\n+  /* Alignment is unsigned.   */\n+  unsigned HOST_WIDE_INT align;\n   rtx x;\n \n   /* If this fails, we've overflowed the stack frame.  Error nicely?  */\n@@ -879,8 +880,10 @@ expand_one_stack_var_at (tree decl, HOST_WIDE_INT offset)\n   offset -= frame_phase;\n   align = offset & -offset;\n   align *= BITS_PER_UNIT;\n-  if (align > STACK_BOUNDARY || align == 0)\n+  if (align == 0)\n     align = STACK_BOUNDARY;\n+  else if (align > MAX_SUPPORTED_STACK_ALIGNMENT)\n+    align = MAX_SUPPORTED_STACK_ALIGNMENT;\n   DECL_ALIGN (decl) = align;\n   DECL_USER_ALIGN (decl) = 0;\n "}, {"sha": "ff739aca938fe20cc2e6c1a20f4625f74a95b5c9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ac26e152e6ee91698ddd752d3ec788ead9c90df/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ac26e152e6ee91698ddd752d3ec788ead9c90df/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2ac26e152e6ee91698ddd752d3ec788ead9c90df", "patch": "@@ -8,6 +8,15 @@\n \tPR tree-optimization/39120\n \t* gcc.dg/torture/pta-callused-1.c: New testcase.\n \n+2009-03-27  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR middle-end/39315\n+\t* gcc.target/i386/pr39315-1.c: New.\n+\t* gcc.target/i386/pr39315-2.c: Likewise.\n+\t* gcc.target/i386/pr39315-3.c: Likewise.\n+\t* gcc.target/i386/pr39315-4.c: Likewise.\n+\t* gcc.target/i386/pr39315-check.c: Likewise.\n+\n 2009-03-27  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR c/39323"}, {"sha": "16ba5d59fe43c73d734aaa7ac9f86432e4472be4", "filename": "gcc/testsuite/gcc.target/i386/pr39315-1.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ac26e152e6ee91698ddd752d3ec788ead9c90df/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr39315-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ac26e152e6ee91698ddd752d3ec788ead9c90df/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr39315-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr39315-1.c?ref=2ac26e152e6ee91698ddd752d3ec788ead9c90df", "patch": "@@ -0,0 +1,18 @@\n+/* PR middle-end/39315  */\n+/* { dg-do compile } */\n+/* { dg-options \"-O -msse2 -mtune=generic\" } */\n+/* { dg-final { scan-assembler-not \"movups\" } } */\n+/* { dg-final { scan-assembler-not \"movlps\" } } */\n+/* { dg-final { scan-assembler-not \"movhps\" } } */\n+/* { dg-final { scan-assembler \"movaps\" } } */\n+\n+typedef float __m128 __attribute__ ((__vector_size__ (16)));\n+\n+extern void bar (__m128 *);\n+\n+void\n+foo (__m128 *x)\n+{\n+  __m128 b = *x;\n+  bar (&b);\n+}"}, {"sha": "ab3dcd0d24a20ddc56635cc27a4d2e32913ab9db", "filename": "gcc/testsuite/gcc.target/i386/pr39315-2.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ac26e152e6ee91698ddd752d3ec788ead9c90df/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr39315-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ac26e152e6ee91698ddd752d3ec788ead9c90df/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr39315-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr39315-2.c?ref=2ac26e152e6ee91698ddd752d3ec788ead9c90df", "patch": "@@ -0,0 +1,15 @@\n+/* PR middle-end/39315  */\n+/* { dg-do run } */\n+/* { dg-options \"-O -msse2 -mtune=generic\" } */\n+/* { dg-additional-sources pr39315-check.c } */\n+\n+typedef float __m128 __attribute__ ((__vector_size__ (16)));\n+\n+extern void bar (__m128 *, int);\n+\n+void\n+foo (__m128 *x)\n+{\n+  __m128 b = *x;\n+  bar (&b, __alignof__ (x));\n+}"}, {"sha": "07862db603a6331acb42e2f0ae6d7a7ff0591d19", "filename": "gcc/testsuite/gcc.target/i386/pr39315-3.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ac26e152e6ee91698ddd752d3ec788ead9c90df/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr39315-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ac26e152e6ee91698ddd752d3ec788ead9c90df/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr39315-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr39315-3.c?ref=2ac26e152e6ee91698ddd752d3ec788ead9c90df", "patch": "@@ -0,0 +1,19 @@\n+/* PR middle-end/39315  */\n+/* { dg-do compile } */\n+/* { dg-options \"-O -msse2 -mtune=generic\" } */\n+/* { dg-final { scan-assembler-not \"movups\" } } */\n+/* { dg-final { scan-assembler-not \"movlps\" } } */\n+/* { dg-final { scan-assembler-not \"movhps\" } } */\n+/* { dg-final { scan-assembler \"and\\[lq\\]?\\[\\\\t \\]*\\\\$-128,\\[\\\\t \\]*%\\[re\\]?sp\" } } */\n+/* { dg-final { scan-assembler \"movaps\" } } */\n+\n+typedef float __m128 __attribute__ ((__vector_size__ (16)));\n+\n+extern void bar (__m128 *);\n+\n+void\n+foo (__m128 *x)\n+{\n+  __m128 b  __attribute__ ((aligned(128))) = *x;\n+  bar (&b);\n+}"}, {"sha": "2e55c251b03fda7ea0a8101cd4a5e32fafd2014d", "filename": "gcc/testsuite/gcc.target/i386/pr39315-4.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ac26e152e6ee91698ddd752d3ec788ead9c90df/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr39315-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ac26e152e6ee91698ddd752d3ec788ead9c90df/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr39315-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr39315-4.c?ref=2ac26e152e6ee91698ddd752d3ec788ead9c90df", "patch": "@@ -0,0 +1,15 @@\n+/* PR middle-end/39315  */\n+/* { dg-do run } */\n+/* { dg-options \"-O -msse2 -mtune=generic\" } */\n+/* { dg-additional-sources pr39315-check.c } */\n+\n+typedef float __m128 __attribute__ ((__vector_size__ (16)));\n+\n+extern void bar (__m128 *, int);\n+\n+void\n+foo (__m128 *x)\n+{\n+  __m128 b __attribute__ ((aligned(128))) = *x;\n+  bar (&b, __alignof__ (x));\n+}"}, {"sha": "ff926057536ba4dbca403056e1452b0a260e576d", "filename": "gcc/testsuite/gcc.target/i386/pr39315-check.c", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ac26e152e6ee91698ddd752d3ec788ead9c90df/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr39315-check.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ac26e152e6ee91698ddd752d3ec788ead9c90df/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr39315-check.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr39315-check.c?ref=2ac26e152e6ee91698ddd752d3ec788ead9c90df", "patch": "@@ -0,0 +1,22 @@\n+typedef float __m128 __attribute__ ((__vector_size__ (16)));\n+\n+extern void foo (__m128 *);\n+extern void abort (void);\n+\n+__m128 y = { 0.0, 1.0, 2.0, 3.0 };\n+\n+void\n+bar (__m128 *x, int align)\n+{\n+  if ((((__PTRDIFF_TYPE__) x) & (align - 1)) != 0)\n+    abort ();\n+  if (__builtin_memcmp (x, &y, sizeof (y)) != 0)\n+    abort ();\n+}\n+\n+int\n+main ()\n+{\n+  foo (&y);\n+  return 0;\n+}"}]}