{"sha": "2083b5be4d96aefccfb38fc972bf211570209e33", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjA4M2I1YmU0ZDk2YWVmY2NmYjM4ZmM5NzJiZjIxMTU3MDIwOWUzMw==", "commit": {"author": {"name": "Loren J. Rittle", "email": "ljrittle@acm.org", "date": "2002-01-31T00:47:05Z"}, "committer": {"name": "Loren J. Rittle", "email": "ljrittle@gcc.gnu.org", "date": "2002-01-31T00:47:05Z"}, "message": "c_locale_generic.cc: Check errno for ERANGE instead of non-zero to aid portability.\n\n\t* config/locale/c_locale_generic.cc: Check errno for ERANGE\n\tinstead of non-zero to aid portability.\n\nFrom-SVN: r49350", "tree": {"sha": "3fd2a0f0e2cf46fcbf96eb4465b80b24ded2b860", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3fd2a0f0e2cf46fcbf96eb4465b80b24ded2b860"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2083b5be4d96aefccfb38fc972bf211570209e33", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2083b5be4d96aefccfb38fc972bf211570209e33", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2083b5be4d96aefccfb38fc972bf211570209e33", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2083b5be4d96aefccfb38fc972bf211570209e33/comments", "author": null, "committer": null, "parents": [{"sha": "c3a7de6ad83ba50db476c9c212b94f18cdcac3b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3a7de6ad83ba50db476c9c212b94f18cdcac3b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c3a7de6ad83ba50db476c9c212b94f18cdcac3b2"}], "stats": {"total": 19, "additions": 12, "deletions": 7}, "files": [{"sha": "56bca718d7ba092ce3c8f58bc7bc3586f8cd4dd6", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2083b5be4d96aefccfb38fc972bf211570209e33/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2083b5be4d96aefccfb38fc972bf211570209e33/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=2083b5be4d96aefccfb38fc972bf211570209e33", "patch": "@@ -1,3 +1,8 @@\n+2002-01-30  Loren Rittle <ljrittle@acm.org>\n+\n+\t* config/locale/c_locale_generic.cc: Check errno for ERANGE\n+\tinstead of non-zero to aid portability.\n+\n 2002-01-30  Peter Schmid  <schmid@snake.iap.physik.tu-darmstadt.de>\n \n \t* docs/html/22_locale/messages.html: Fix example code."}, {"sha": "0d601aeb21455a95720ae2b021624d1391dfa691", "filename": "libstdc++-v3/config/locale/c_locale_generic.cc", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2083b5be4d96aefccfb38fc972bf211570209e33/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fc_locale_generic.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2083b5be4d96aefccfb38fc972bf211570209e33/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fc_locale_generic.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fc_locale_generic.cc?ref=2083b5be4d96aefccfb38fc972bf211570209e33", "patch": "@@ -48,7 +48,7 @@ namespace std\n \tchar* __sanity;\n \terrno = 0;\n \tlong __l = strtol(__s, &__sanity, __base);\n-\tif (__sanity != __s && *__sanity == '\\0' && errno == 0)\n+\tif (__sanity != __s && *__sanity == '\\0' && errno != ERANGE)\n \t  __v = __l;\n \telse\n \t  __err |= ios_base::failbit;\n@@ -65,7 +65,7 @@ namespace std\n \t  char* __sanity;\n \t  errno = 0;\n \t  unsigned long __ul = strtoul(__s, &__sanity, __base);\n-          if (__sanity != __s && *__sanity == '\\0' && errno == 0)\n+          if (__sanity != __s && *__sanity == '\\0' && errno != ERANGE)\n \t    __v = __ul;\n \t  else\n \t    __err |= ios_base::failbit;\n@@ -83,7 +83,7 @@ namespace std\n \t  char* __sanity;\n \t  errno = 0;\n \t  long long __ll = strtoll(__s, &__sanity, __base);\n-          if (__sanity != __s && *__sanity == '\\0' && errno == 0)\n+          if (__sanity != __s && *__sanity == '\\0' && errno != ERANGE)\n \t    __v = __ll;\n \t  else\n \t    __err |= ios_base::failbit;\n@@ -100,7 +100,7 @@ namespace std\n \t  char* __sanity;\n \t  errno = 0;\n \t  unsigned long long __ull = strtoull(__s, &__sanity, __base);\n-          if (__sanity != __s && *__sanity == '\\0' && errno == 0)\n+          if (__sanity != __s && *__sanity == '\\0' && errno != ERANGE)\n \t    __v = __ull;\n \t  else\n \t    __err |= ios_base::failbit;\n@@ -124,7 +124,7 @@ namespace std\n #else\n \t  float __f = static_cast<float>(strtod(__s, &__sanity));\n #endif\n-          if (__sanity != __s && *__sanity == '\\0' && errno == 0)\n+          if (__sanity != __s && *__sanity == '\\0' && errno != ERANGE)\n \t    __v = __f;\n \t  else\n \t    __err |= ios_base::failbit;\n@@ -144,7 +144,7 @@ namespace std\n \t  char* __sanity;\n \t  errno = 0;\n \t  double __d = strtod(__s, &__sanity);\n-          if (__sanity != __s && *__sanity == '\\0' && errno == 0)\n+          if (__sanity != __s && *__sanity == '\\0' && errno != ERANGE)\n \t    __v = __d;\n \t  else\n \t    __err |= ios_base::failbit;\n@@ -165,7 +165,7 @@ namespace std\n \t  char* __sanity;\n \t  errno = 0;\n \t  long double __ld = strtold(__s, &__sanity);\n-          if (__sanity != __s && *__sanity == '\\0' && errno == 0)\n+          if (__sanity != __s && *__sanity == '\\0' && errno != ERANGE)\n \t    __v = __ld;\n #else\n \t  typedef char_traits<char>::int_type int_type;"}]}