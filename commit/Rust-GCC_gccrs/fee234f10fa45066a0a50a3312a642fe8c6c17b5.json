{"sha": "fee234f10fa45066a0a50a3312a642fe8c6c17b5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmVlMjM0ZjEwZmE0NTA2NmEwYTUwYTMzMTJhNjQyZmU4YzZjMTdiNQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@ucw.cz", "date": "2017-11-14T09:22:49Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2017-11-14T09:22:49Z"}, "message": "tracer.c (better_p): Do not compare frequencies.\n\n\t* tracer.c (better_p): Do not compare frequencies.\n\t* reg-stack.c (better_edge): Likewise.\n\t* shrink-wrap.c (try_shrink_wrapping): Do not convert to gcov counts\n\tand back.\n\nFrom-SVN: r254726", "tree": {"sha": "38717716367363bc9c6333ad40a0bc238b90eeec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/38717716367363bc9c6333ad40a0bc238b90eeec"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fee234f10fa45066a0a50a3312a642fe8c6c17b5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fee234f10fa45066a0a50a3312a642fe8c6c17b5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fee234f10fa45066a0a50a3312a642fe8c6c17b5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fee234f10fa45066a0a50a3312a642fe8c6c17b5/comments", "author": null, "committer": null, "parents": [{"sha": "fc06ae0d196a321425aefe9e2e262abfb10c0775", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc06ae0d196a321425aefe9e2e262abfb10c0775", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fc06ae0d196a321425aefe9e2e262abfb10c0775"}], "stats": {"total": 32, "additions": 16, "deletions": 16}, "files": [{"sha": "3aa83fec31a1e2ba78965db08cb852394db03482", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fee234f10fa45066a0a50a3312a642fe8c6c17b5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fee234f10fa45066a0a50a3312a642fe8c6c17b5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fee234f10fa45066a0a50a3312a642fe8c6c17b5", "patch": "@@ -1,3 +1,10 @@\n+2017-11-13  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* tracer.c (better_p): Do not compare frequencies.\n+\t* reg-stack.c (better_edge): Likewise.\n+\t* shrink-wrap.c (try_shrink_wrapping): Do not convert to gcov counts\n+\tand back.\n+\n 2017-11-13  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* auto-profile.c (afdo_annotate_cfg): Use update_max_bb_count."}, {"sha": "4f67a7bfa5076f17c0fc24bbf9772f5f8d7c8951", "filename": "gcc/reg-stack.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fee234f10fa45066a0a50a3312a642fe8c6c17b5/gcc%2Freg-stack.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fee234f10fa45066a0a50a3312a642fe8c6c17b5/gcc%2Freg-stack.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freg-stack.c?ref=fee234f10fa45066a0a50a3312a642fe8c6c17b5", "patch": "@@ -2954,11 +2954,6 @@ better_edge (edge e1, edge e2)\n   if (!e1)\n     return e2;\n \n-  if (EDGE_FREQUENCY (e1) > EDGE_FREQUENCY (e2))\n-    return e1;\n-  if (EDGE_FREQUENCY (e1) < EDGE_FREQUENCY (e2))\n-    return e2;\n-\n   if (e1->count () > e2->count ())\n     return e1;\n   if (e1->count () < e2->count ())"}, {"sha": "ce2ddfc09f783c9b3354649438760c19f4f9b735", "filename": "gcc/shrink-wrap.c", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fee234f10fa45066a0a50a3312a642fe8c6c17b5/gcc%2Fshrink-wrap.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fee234f10fa45066a0a50a3312a642fe8c6c17b5/gcc%2Fshrink-wrap.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fshrink-wrap.c?ref=fee234f10fa45066a0a50a3312a642fe8c6c17b5", "patch": "@@ -880,19 +880,18 @@ try_shrink_wrapping (edge *entry_edge, rtx_insn *prologue_seq)\n      the correct answer for reducible flow graphs; for irreducible flow graphs\n      our profile is messed up beyond repair anyway.  */\n \n-  gcov_type num = 0;\n-  gcov_type den = 0;\n+  profile_count num = profile_count::zero ();\n+  profile_count den = profile_count::zero ();\n \n   FOR_EACH_EDGE (e, ei, pro->preds)\n     if (!dominated_by_p (CDI_DOMINATORS, e->src, pro))\n       {\n-\tnum += EDGE_FREQUENCY (e);\n-\tden += e->src->count.to_frequency (cfun);\n+\tif (e->count ().initialized_p ())\n+\t  num += e->count ();\n+\tif (e->src->count.initialized_p ())\n+\t  den += e->src->count;\n       }\n \n-  if (den == 0)\n-    den = 1;\n-\n   /* All is okay, so do it.  */\n \n   crtl->shrink_wrapped = true;\n@@ -919,8 +918,9 @@ try_shrink_wrapping (edge *entry_edge, rtx_insn *prologue_seq)\n \n \tif (dump_file)\n \t  fprintf (dump_file, \"Duplicated %d to %d\\n\", bb->index, dup->index);\n-\n-\tbb->count = bb->count.apply_scale (num, den);\n+\t\n+\tif (num == profile_count::zero () || den.nonzero_p ())\n+\t  bb->count = bb->count.apply_scale (num, den);\n \tdup->count -= bb->count;\n       }\n "}, {"sha": "0c7a9536735da4f4c5fa1eaf1258603809bcf53e", "filename": "gcc/tracer.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fee234f10fa45066a0a50a3312a642fe8c6c17b5/gcc%2Ftracer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fee234f10fa45066a0a50a3312a642fe8c6c17b5/gcc%2Ftracer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftracer.c?ref=fee234f10fa45066a0a50a3312a642fe8c6c17b5", "patch": "@@ -135,8 +135,6 @@ better_p (const_edge e1, const_edge e2)\n   if (e1->count ().initialized_p () && e2->count ().initialized_p ()\n       && ((e1->count () > e2->count ()) || (e1->count () < e2->count  ())))\n     return e1->count () > e2->count ();\n-  if (EDGE_FREQUENCY (e1) != EDGE_FREQUENCY (e2))\n-    return EDGE_FREQUENCY (e1) > EDGE_FREQUENCY (e2);\n   /* This is needed to avoid changes in the decision after\n      CFG is modified.  */\n   if (e1->src != e2->src)"}]}