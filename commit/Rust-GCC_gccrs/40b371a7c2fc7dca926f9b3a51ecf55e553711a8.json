{"sha": "40b371a7c2fc7dca926f9b3a51ecf55e553711a8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDBiMzcxYTdjMmZjN2RjYTkyNmY5YjNhNTFlY2Y1NWU1NTM3MTFhOA==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2021-01-13T11:37:18Z"}, "committer": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2021-01-13T11:37:18Z"}, "message": "sh: Remove match_scratch operand test\n\nThis patch fixes a regression on sh4 introduced by the rtl-ssa stuff.\nThe port had a pattern:\n\n(define_insn \"movsf_ie\"\n  [(set (match_operand:SF 0 \"general_movdst_operand\"\n\t\t\t        \"=f,r,f,f,fy, f,m, r, r,m,f,y,y,rf,r,y,<,y,y\")\n\t(match_operand:SF 1 \"general_movsrc_operand\"\n\t\t\t        \" f,r,G,H,FQ,mf,f,FQ,mr,r,y,f,>,fr,y,r,y,>,y\"))\n   (use (reg:SI FPSCR_MODES_REG))\n   (clobber (match_scratch:SI 2 \"=X,X,X,X,&z, X,X, X, X,X,X,X,X, y,X,X,X,X,X\"))]\n  \"TARGET_SH2E\n   && (arith_reg_operand (operands[0], SFmode)\n       || fpul_operand (operands[0], SFmode)\n       || arith_reg_operand (operands[1], SFmode)\n       || fpul_operand (operands[1], SFmode)\n       || arith_reg_operand (operands[2], SImode))\"\n\nBut recog can generate this pattern from something that matches:\n\n  [(set (match_operand:SF 0 \"general_movdst_operand\")\n\t(match_operand:SF 1 \"general_movsrc_operand\")\n   (use (reg:SI FPSCR_MODES_REG))]\n\nwith recog adding the (clobber (match_scratch:SI)) automatically.\nrecog tests the C condition before adding the clobber, so there might\nnot be an operands[2] to test.\n\nSimilarly, gen_movsf_ie takes only two arguments, with operand 2\nbeing filled in automatically.  The only way to create this pattern\nwith a REG operands[2] before RA would be to generate it directly\nfrom RTL.  AFAICT the only things that do this are the secondary\nreload patterns, which are generated during RA and come with\npre-vetted operands.\n\narith_reg_operand rejects 6 specific registers:\n\n      return (regno != T_REG && regno != PR_REG\n\t      && regno != FPUL_REG && regno != FPSCR_REG\n\t      && regno != MACH_REG && regno != MACL_REG);\n\nThe fpul_operand tests allow FPUL_REG, leaving 5 invalid registers.\nHowever, in all alternatives of movsf_ie, either operand 0 or\noperand 1 is a register that belongs r, f or y, none of which\ninclude any of the 5 rejected registers.  This means that any\npost-RA pattern would satisfy the operands[0] or operands[1]\ncondition without the operands[2] test being necessary.\n\ngcc/\n\t* config/sh/sh.md (movsf_ie): Remove operands[2] test.", "tree": {"sha": "4bf7f6bedcc1cf853249035087a4d569332f87d6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4bf7f6bedcc1cf853249035087a4d569332f87d6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/40b371a7c2fc7dca926f9b3a51ecf55e553711a8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40b371a7c2fc7dca926f9b3a51ecf55e553711a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40b371a7c2fc7dca926f9b3a51ecf55e553711a8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40b371a7c2fc7dca926f9b3a51ecf55e553711a8/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e9cb89b936f831a02318d45fc4ddb06f7be55ae4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9cb89b936f831a02318d45fc4ddb06f7be55ae4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e9cb89b936f831a02318d45fc4ddb06f7be55ae4"}], "stats": {"total": 3, "additions": 1, "deletions": 2}, "files": [{"sha": "e3af9ae21c1dccb40fa07401ba30357fa085784d", "filename": "gcc/config/sh/sh.md", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40b371a7c2fc7dca926f9b3a51ecf55e553711a8/gcc%2Fconfig%2Fsh%2Fsh.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40b371a7c2fc7dca926f9b3a51ecf55e553711a8/gcc%2Fconfig%2Fsh%2Fsh.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.md?ref=40b371a7c2fc7dca926f9b3a51ecf55e553711a8", "patch": "@@ -6067,8 +6067,7 @@\n    && (arith_reg_operand (operands[0], SFmode)\n        || fpul_operand (operands[0], SFmode)\n        || arith_reg_operand (operands[1], SFmode)\n-       || fpul_operand (operands[1], SFmode)\n-       || arith_reg_operand (operands[2], SImode))\"\n+       || fpul_operand (operands[1], SFmode))\"\n   \"@\n \tfmov\t%1,%0\n \tmov\t%1,%0"}]}