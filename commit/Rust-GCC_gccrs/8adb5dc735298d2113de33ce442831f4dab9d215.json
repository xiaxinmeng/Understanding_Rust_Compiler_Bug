{"sha": "8adb5dc735298d2113de33ce442831f4dab9d215", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGFkYjVkYzczNTI5OGQyMTEzZGUzM2NlNDQyODMxZjRkYWI5ZDIxNQ==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2014-07-07T09:13:32Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2014-07-07T09:13:32Z"}, "message": "[ARM] Remove deprecated mwords-little-endian.\n\n\t* config/arm/arm.opt (mwords-little-endian): Delete.\n\t* config/arm/arm.h (TARGET_CPU_CPP_BUILTINS): Remove handling\n\tof TARGET_LITTLE_WORDS.\n\t(WORDS_BIG_ENDIAN): Define to BYTES_BIG_ENDIAN.\n\t* config/arm/arm.c (arm_option_override): Remove TARGET_LITTLE_WORDS\n\twarning.\n\t* doc/invoke.texi: Remove references to -mwords-little-endian.\n\nFrom-SVN: r212326", "tree": {"sha": "017e30cc569acf3b031dfb774205b3b58c804e43", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/017e30cc569acf3b031dfb774205b3b58c804e43"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8adb5dc735298d2113de33ce442831f4dab9d215", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8adb5dc735298d2113de33ce442831f4dab9d215", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8adb5dc735298d2113de33ce442831f4dab9d215", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8adb5dc735298d2113de33ce442831f4dab9d215/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c83cf304523c57ff552eb760957936245e29acf8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c83cf304523c57ff552eb760957936245e29acf8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c83cf304523c57ff552eb760957936245e29acf8"}], "stats": {"total": 36, "additions": 13, "deletions": 23}, "files": [{"sha": "f1115223d11cb87ea9d943f2bdde393db16f9ba8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8adb5dc735298d2113de33ce442831f4dab9d215/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8adb5dc735298d2113de33ce442831f4dab9d215/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8adb5dc735298d2113de33ce442831f4dab9d215", "patch": "@@ -1,3 +1,13 @@\n+2014-07-07  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* config/arm/arm.opt (mwords-little-endian): Delete.\n+\t* config/arm/arm.h (TARGET_CPU_CPP_BUILTINS): Remove handling\n+\tof TARGET_LITTLE_WORDS.\n+\t(WORDS_BIG_ENDIAN): Define to BYTES_BIG_ENDIAN.\n+\t* config/arm/arm.c (arm_option_override): Remove TARGET_LITTLE_WORDS\n+\twarning.\n+\t* doc/invoke.texi: Remove references to -mwords-little-endian.\n+\n 2014-07-07  Jakub Jelinek  <jakub@redhat.com>\n \n \t* expmed.c (struct init_expmed_rtl): Change all fields but"}, {"sha": "a6af12fe846b80692c105eb3296d1b970fa6ad9a", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8adb5dc735298d2113de33ce442831f4dab9d215/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8adb5dc735298d2113de33ce442831f4dab9d215/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=8adb5dc735298d2113de33ce442831f4dab9d215", "patch": "@@ -2618,10 +2618,6 @@ arm_option_override (void)\n   if (TARGET_APCS_FLOAT)\n     warning (0, \"passing floating point arguments in fp regs not yet supported\");\n \n-  if (TARGET_LITTLE_WORDS)\n-    warning (OPT_Wdeprecated, \"%<mwords-little-endian%> is deprecated and \"\n-\t     \"will be removed in a future release\");\n-\n   /* Initialize boolean versions of the flags, for use in the arm.md file.  */\n   arm_arch3m = (insn_flags & FL_ARCH3M) != 0;\n   arm_arch4 = (insn_flags & FL_ARCH4) != 0;"}, {"sha": "047df9771b6549af46b819eb0749249ae557dbd0", "filename": "gcc/config/arm/arm.h", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8adb5dc735298d2113de33ce442831f4dab9d215/gcc%2Fconfig%2Farm%2Farm.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8adb5dc735298d2113de33ce442831f4dab9d215/gcc%2Fconfig%2Farm%2Farm.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.h?ref=8adb5dc735298d2113de33ce442831f4dab9d215", "patch": "@@ -104,8 +104,6 @@ extern char arm_arch_name[];\n \t    builtin_define (\"__ARM_BIG_ENDIAN\");\t\\\n \t    if (TARGET_THUMB)\t\t\t\t\\\n \t      builtin_define (\"__THUMBEB__\");\t\t\\\n-\t    if (TARGET_LITTLE_WORDS)\t\t\t\\\n-\t      builtin_define (\"__ARMWEL__\");\t\t\\\n \t  }\t\t\t\t\t\t\\\n         else\t\t\t\t\t\t\\\n \t  {\t\t\t\t\t\t\\\n@@ -643,9 +641,8 @@ extern int arm_arch_crc;\n #define BYTES_BIG_ENDIAN  (TARGET_BIG_END != 0)\n \n /* Define this if most significant word of a multiword number is the lowest\n-   numbered.\n-   This is always false, even when in big-endian mode.  */\n-#define WORDS_BIG_ENDIAN  (BYTES_BIG_ENDIAN && ! TARGET_LITTLE_WORDS)\n+   numbered.  */\n+#define WORDS_BIG_ENDIAN  (BYTES_BIG_ENDIAN)\n \n #define UNITS_PER_WORD\t4\n "}, {"sha": "0a80513e70ff1a210d3ad56971b7f42911d02f54", "filename": "gcc/config/arm/arm.opt", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8adb5dc735298d2113de33ce442831f4dab9d215/gcc%2Fconfig%2Farm%2Farm.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8adb5dc735298d2113de33ce442831f4dab9d215/gcc%2Fconfig%2Farm%2Farm.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.opt?ref=8adb5dc735298d2113de33ce442831f4dab9d215", "patch": "@@ -231,10 +231,6 @@ Tune code for the given processor\n EnumValue\n Enum(processor_type) String(native) Value(-1) DriverOnly\n \n-mwords-little-endian\n-Target Report RejectNegative Mask(LITTLE_WORDS)\n-Assume big endian bytes, little endian words.  This option is deprecated.\n-\n mvectorize-with-neon-quad\n Target Report RejectNegative InverseMask(NEON_VECTORIZE_DOUBLE)\n Use Neon quad-word (rather than double-word) registers for vectorization"}, {"sha": "a83f6c6ad12a81081b7b830349ab495e04f91b39", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 1, "deletions": 10, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8adb5dc735298d2113de33ce442831f4dab9d215/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8adb5dc735298d2113de33ce442831f4dab9d215/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=8adb5dc735298d2113de33ce442831f4dab9d215", "patch": "@@ -518,7 +518,7 @@ Objective-C and Objective-C++ Dialects}.\n -mapcs-float  -mno-apcs-float @gol\n -mapcs-reentrant  -mno-apcs-reentrant @gol\n -msched-prolog  -mno-sched-prolog @gol\n--mlittle-endian  -mbig-endian  -mwords-little-endian @gol\n+-mlittle-endian  -mbig-endian @gol\n -mfloat-abi=@var{name} @gol\n -mfp16-format=@var{name}\n -mthumb-interwork  -mno-thumb-interwork @gol\n@@ -12399,15 +12399,6 @@ the default for all standard configurations.\n Generate code for a processor running in big-endian mode; the default is\n to compile code for a little-endian processor.\n \n-@item -mwords-little-endian\n-@opindex mwords-little-endian\n-This option only applies when generating code for big-endian processors.\n-Generate code for a little-endian word order but a big-endian byte\n-order.  That is, a byte order of the form @samp{32107654}.  Note: this\n-option should only be used if you require compatibility with code for\n-big-endian ARM processors generated by versions of the compiler prior to\n-2.8.  This option is now deprecated.\n-\n @item -march=@var{name}\n @opindex march\n This specifies the name of the target ARM architecture.  GCC uses this"}]}