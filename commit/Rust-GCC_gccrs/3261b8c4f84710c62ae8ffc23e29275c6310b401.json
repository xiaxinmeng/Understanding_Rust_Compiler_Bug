{"sha": "3261b8c4f84710c62ae8ffc23e29275c6310b401", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzI2MWI4YzRmODQ3MTBjNjJhZThmZmMyM2UyOTI3NWM2MzEwYjQwMQ==", "commit": {"author": {"name": "Hans-Peter Nilsson", "email": "hp@gcc.gnu.org", "date": "2007-12-15T21:37:22Z"}, "committer": {"name": "Hans-Peter Nilsson", "email": "hp@gcc.gnu.org", "date": "2007-12-15T21:37:22Z"}, "message": "* config/cris/predicates.md\n\t(\"cris_general_operand_or_pic_source\"): New predicate.\n\t(\"cris_general_operand_or_plt_symbol\"): Replace by...\n\t(\"cris_nonmemory_operand_or_callable_symbol\"): New predicate.\n\nFrom-SVN: r130968", "tree": {"sha": "b7aecb2945dc88651bec92b0bf26abdeaea0768f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b7aecb2945dc88651bec92b0bf26abdeaea0768f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3261b8c4f84710c62ae8ffc23e29275c6310b401", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3261b8c4f84710c62ae8ffc23e29275c6310b401", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3261b8c4f84710c62ae8ffc23e29275c6310b401", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3261b8c4f84710c62ae8ffc23e29275c6310b401/comments", "author": null, "committer": null, "parents": [{"sha": "047c66928daec858239eb733df16791c1446d2bd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/047c66928daec858239eb733df16791c1446d2bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/047c66928daec858239eb733df16791c1446d2bd"}], "stats": {"total": 21, "additions": 16, "deletions": 5}, "files": [{"sha": "edd16bbdd8e5706c3650e1800fdf1311cf0b0c08", "filename": "gcc/config/cris/predicates.md", "status": "modified", "additions": 16, "deletions": 5, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3261b8c4f84710c62ae8ffc23e29275c6310b401/gcc%2Fconfig%2Fcris%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3261b8c4f84710c62ae8ffc23e29275c6310b401/gcc%2Fconfig%2Fcris%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fcris%2Fpredicates.md?ref=3261b8c4f84710c62ae8ffc23e29275c6310b401", "patch": "@@ -63,7 +63,7 @@\n (define_predicate \"cris_bdap_const_operand\"\n   (and (match_code \"label_ref, symbol_ref, const_int, const_double, const\")\n        (ior (not (match_test \"flag_pic\"))\n-\t    (match_test \"cris_valid_pic_const (op)\"))))\n+\t    (match_test \"cris_valid_pic_const (op, true)\"))))\n \n (define_predicate \"cris_simple_address_operand\"\n   (ior (match_operand:SI 0 \"register_operand\")\n@@ -140,15 +140,26 @@\n        \t    ; The following test is actually just an assertion.\n \t    (match_test \"cris_pic_symbol_type_of (op) != cris_no_symbol\"))))\n \n+;; A predicate for the anon movsi expansion, one that fits a PCREL\n+;; operand as well as general_operand.\n+\n+(define_special_predicate \"cris_general_operand_or_pic_source\"\n+  (ior (match_operand 0 \"general_operand\")\n+       (and (match_test \"flag_pic\")\n+\t    (match_test \"cris_valid_pic_const (op, false)\"))))\n+\n ;; Since a PLT symbol is not a general_operand, we have to have a\n ;; predicate that matches it when we need it.  We use this in the expanded\n ;; \"call\" and \"call_value\" anonymous patterns.\n \n-(define_predicate \"cris_general_operand_or_plt_symbol\"\n-  (ior (match_operand 0 \"general_operand\")\n+(define_predicate \"cris_nonmemory_operand_or_callable_symbol\"\n+  (ior (match_operand 0 \"nonmemory_operand\")\n        (and (match_code \"const\")\n-\t    (and (match_test \"GET_CODE (XEXP (op, 0)) == UNSPEC\")\n-\t\t (not (match_test \"TARGET_AVOID_GOTPLT\"))))))\n+\t    (and\n+\t     (match_test \"GET_CODE (XEXP (op, 0)) == UNSPEC\")\n+\t     (ior\n+\t      (match_test \"XINT (XEXP (op, 0), 1) == CRIS_UNSPEC_PLT_PCREL\")\n+\t      (match_test \"XINT (XEXP (op, 0), 1) == CRIS_UNSPEC_PCREL\"))))))\n \n ;; This matches a (MEM (general_operand)) or\n ;; (MEM (cris_general_operand_or_symbol)).  The second one isn't a valid"}]}