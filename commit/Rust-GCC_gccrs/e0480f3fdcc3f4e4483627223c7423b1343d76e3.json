{"sha": "e0480f3fdcc3f4e4483627223c7423b1343d76e3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTA0ODBmM2ZkY2MzZjRlNDQ4MzYyNzIyM2M3NDIzYjEzNDNkNzZlMw==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2006-06-21T22:21:45Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2006-06-21T22:21:45Z"}, "message": "postypes.h (operator==(const fpos<>&, const fpos<>&), [...]): Add.\n\n2006-06-21  Paolo Carlini  <pcarlini@suse.de>\n\n\t* include/bits/postypes.h (operator==(const fpos<>&, const fpos<>&),\n\toperator!=(const fpos<>&, const fpos<>&)): Add.\n\t* testsuite/27_io/fpos/mbstate_t/6.cc: New.\n\nFrom-SVN: r114871", "tree": {"sha": "7031387285374b20d3d4e65d4914d1592f635be7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7031387285374b20d3d4e65d4914d1592f635be7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e0480f3fdcc3f4e4483627223c7423b1343d76e3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0480f3fdcc3f4e4483627223c7423b1343d76e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e0480f3fdcc3f4e4483627223c7423b1343d76e3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0480f3fdcc3f4e4483627223c7423b1343d76e3/comments", "author": null, "committer": null, "parents": [{"sha": "35fa89150a5de322e7c32ad168172890b7fb1be3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35fa89150a5de322e7c32ad168172890b7fb1be3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/35fa89150a5de322e7c32ad168172890b7fb1be3"}], "stats": {"total": 76, "additions": 71, "deletions": 5}, "files": [{"sha": "bdaa70c72c829f34c5648579f29a92b83f733a09", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0480f3fdcc3f4e4483627223c7423b1343d76e3/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0480f3fdcc3f4e4483627223c7423b1343d76e3/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=e0480f3fdcc3f4e4483627223c7423b1343d76e3", "patch": "@@ -1,3 +1,9 @@\n+2006-06-21  Paolo Carlini  <pcarlini@suse.de>\n+\n+\t* include/bits/postypes.h (operator==(const fpos<>&, const fpos<>&),\n+\toperator!=(const fpos<>&, const fpos<>&)): Add.\n+\t* testsuite/27_io/fpos/mbstate_t/6.cc: New.\n+\n 2006-06-21  Mark Mitchell  <mark@codesourcery.com>\n \n \t* acinclude.m4 (GLIBCXX_EXPORT_INSTALL_INFO): When"}, {"sha": "d145563e476fac21dd744df69d80eeee11d58260", "filename": "libstdc++-v3/include/bits/postypes.h", "status": "modified", "additions": 15, "deletions": 5, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0480f3fdcc3f4e4483627223c7423b1343d76e3/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fpostypes.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0480f3fdcc3f4e4483627223c7423b1343d76e3/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fpostypes.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fpostypes.h?ref=e0480f3fdcc3f4e4483627223c7423b1343d76e3", "patch": "@@ -119,11 +119,6 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n       /// Convert to streamoff.\n       operator streamoff() const { return _M_off; }\n \n-      // NB: Via conversion to streamoff, two fpos objects can be compared.\n-      // The standard only requires that operator== must be an equivalence\n-      // relation.  In this implementation two fpos objects belong to the\n-      // same equivalence class if the contained offsets compare equal.\n-\n       /// Remember the value of @a st.\n       void\n       state(_StateT __st)\n@@ -194,6 +189,21 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n       { return _M_off - __other._M_off; }\n     };\n \n+  // The standard only requires that operator== must be an\n+  // equivalence relation. In this implementation two fpos<StateT>\n+  // objects belong to the same equivalence class if the contained\n+  // offsets compare equal.\n+  /// Test if equivalent to another position.\n+  template<typename _StateT>\n+    inline bool\n+    operator==(const fpos<_StateT>& __lhs, const fpos<_StateT>& __rhs)\n+    { return streamoff(__lhs) == streamoff(__rhs); }\n+\n+  template<typename _StateT>\n+    inline bool\n+    operator!=(const fpos<_StateT>& __lhs, const fpos<_StateT>& __rhs)\n+    { return streamoff(__lhs) != streamoff(__rhs); }\n+\n   // Clauses 21.1.3.1 and 21.1.3.2 describe streampos and wstreampos\n   // as implementation defined types, but clause 27.2 requires that\n   // they must both be typedefs for fpos<mbstate_t>"}, {"sha": "8c55e1c03de32fd02da1797e723770c5e218e90c", "filename": "libstdc++-v3/testsuite/27_io/fpos/mbstate_t/6.cc", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0480f3fdcc3f4e4483627223c7423b1343d76e3/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffpos%2Fmbstate_t%2F6.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0480f3fdcc3f4e4483627223c7423b1343d76e3/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffpos%2Fmbstate_t%2F6.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffpos%2Fmbstate_t%2F6.cc?ref=e0480f3fdcc3f4e4483627223c7423b1343d76e3", "patch": "@@ -0,0 +1,50 @@\n+// { dg-do compile }\n+\n+// 2006-06-21  Paolo Carlini  <pcarlini@suse.de>\n+\n+// Copyright (C) 2006 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+// 27.4.3 template class fpos\n+\n+#include <ios>\n+\n+class\n+octave_int\n+{\n+  template<class U>\n+    octave_int(U i);\n+};\n+\n+bool\n+operator==(const octave_int& lhs, const octave_int& rhs);\n+\n+bool\n+Fsave(void)\n+{\n+  return std::streampos(0) == std::streampos(0);\n+}"}]}