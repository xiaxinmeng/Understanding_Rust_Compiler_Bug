{"sha": "9aa2470ab2c98bdd276c2682a96e5a4bdfcdbb48", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWFhMjQ3MGFiMmM5OGJkZDI3NmMyNjgyYTk2ZTVhNGJkZmNkYmI0OA==", "commit": {"author": {"name": "Marc Glisse", "email": "marc.glisse@inria.fr", "date": "2019-02-05T09:33:36Z"}, "committer": {"name": "Marc Glisse", "email": "glisse@gcc.gnu.org", "date": "2019-02-05T09:33:36Z"}, "message": "Rename __is_trivially_relocatable to __is_bitwise_relocatable.\n\n2019-02-05  Marc Glisse  <marc.glisse@inria.fr>\n\n\tPR libstdc++/87106\n\t* include/bits/stl_uninitialized.h (__is_trivially_relocatable):\n\tRename...\n\t(__is_bitwise_relocatable): ... to this.\n\t(__relocate_a_1): Adapt.\n\t* include/bits/stl_deque.h (__is_trivially_relocatable): Rename...\n\t(__is_bitwise_relocatable): ... to this.\n\nFrom-SVN: r268532", "tree": {"sha": "a67acbc74fdae307723c27a30d3733f02dddeb60", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a67acbc74fdae307723c27a30d3733f02dddeb60"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9aa2470ab2c98bdd276c2682a96e5a4bdfcdbb48", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9aa2470ab2c98bdd276c2682a96e5a4bdfcdbb48", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9aa2470ab2c98bdd276c2682a96e5a4bdfcdbb48", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9aa2470ab2c98bdd276c2682a96e5a4bdfcdbb48/comments", "author": {"login": "mglisse", "id": 10097863, "node_id": "MDQ6VXNlcjEwMDk3ODYz", "avatar_url": "https://avatars.githubusercontent.com/u/10097863?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mglisse", "html_url": "https://github.com/mglisse", "followers_url": "https://api.github.com/users/mglisse/followers", "following_url": "https://api.github.com/users/mglisse/following{/other_user}", "gists_url": "https://api.github.com/users/mglisse/gists{/gist_id}", "starred_url": "https://api.github.com/users/mglisse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mglisse/subscriptions", "organizations_url": "https://api.github.com/users/mglisse/orgs", "repos_url": "https://api.github.com/users/mglisse/repos", "events_url": "https://api.github.com/users/mglisse/events{/privacy}", "received_events_url": "https://api.github.com/users/mglisse/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c8010d70be43ae96908bb82000518e03b5b65829", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8010d70be43ae96908bb82000518e03b5b65829", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c8010d70be43ae96908bb82000518e03b5b65829"}], "stats": {"total": 19, "additions": 15, "deletions": 4}, "files": [{"sha": "a3c0002d8bd7181768b95ca1c11a41f254e4fbba", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9aa2470ab2c98bdd276c2682a96e5a4bdfcdbb48/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9aa2470ab2c98bdd276c2682a96e5a4bdfcdbb48/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=9aa2470ab2c98bdd276c2682a96e5a4bdfcdbb48", "patch": "@@ -1,3 +1,13 @@\n+2019-02-05  Marc Glisse  <marc.glisse@inria.fr>\n+\n+\tPR libstdc++/87106\n+\t* include/bits/stl_uninitialized.h (__is_trivially_relocatable):\n+\tRename...\n+\t(__is_bitwise_relocatable): ... to this.\n+\t(__relocate_a_1): Adapt.\n+\t* include/bits/stl_deque.h (__is_trivially_relocatable): Rename...\n+\t(__is_bitwise_relocatable): ... to this.\n+\n 2019-01-30  Jonathan Wakely  <jwakely@redhat.com>\n \n \tPR libstdc++/89117"}, {"sha": "5c86efc0db2b586a8a1aec51645268f3e9998c3a", "filename": "libstdc++-v3/include/bits/stl_deque.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9aa2470ab2c98bdd276c2682a96e5a4bdfcdbb48/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_deque.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9aa2470ab2c98bdd276c2682a96e5a4bdfcdbb48/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_deque.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_deque.h?ref=9aa2470ab2c98bdd276c2682a96e5a4bdfcdbb48", "patch": "@@ -61,7 +61,7 @@\n #include <bits/stl_iterator_base_funcs.h>\n #if __cplusplus >= 201103L\n #include <initializer_list>\n-#include <bits/stl_uninitialized.h> // for __is_trivially_relocatable\n+#include <bits/stl_uninitialized.h> // for __is_bitwise_relocatable\n #endif\n \n #include <debug/assertions.h>\n@@ -2372,7 +2372,7 @@ _GLIBCXX_END_NAMESPACE_CONTAINER\n   // std::allocator is safe, but it is not the only allocator\n   // for which this is valid.\n   template<class _Tp>\n-    struct __is_trivially_relocatable<_GLIBCXX_STD_C::deque<_Tp>>\n+    struct __is_bitwise_relocatable<_GLIBCXX_STD_C::deque<_Tp>>\n     : true_type { };\n #endif\n "}, {"sha": "03ed16b8c1a69626153616b8e278b2308f5f9f28", "filename": "libstdc++-v3/include/bits/stl_uninitialized.h", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9aa2470ab2c98bdd276c2682a96e5a4bdfcdbb48/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_uninitialized.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9aa2470ab2c98bdd276c2682a96e5a4bdfcdbb48/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_uninitialized.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_uninitialized.h?ref=9aa2470ab2c98bdd276c2682a96e5a4bdfcdbb48", "patch": "@@ -896,12 +896,13 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     }\n \n   // This class may be specialized for specific types.\n+  // Also known as is_trivially_relocatable.\n   template<typename _Tp, typename = void>\n-    struct __is_trivially_relocatable\n+    struct __is_bitwise_relocatable\n     : is_trivial<_Tp> { };\n \n   template <typename _Tp, typename _Up>\n-    inline __enable_if_t<std::__is_trivially_relocatable<_Tp>::value, _Tp*>\n+    inline __enable_if_t<std::__is_bitwise_relocatable<_Tp>::value, _Tp*>\n     __relocate_a_1(_Tp* __first, _Tp* __last,\n \t\t   _Tp* __result, allocator<_Up>& __alloc) noexcept\n     {"}]}