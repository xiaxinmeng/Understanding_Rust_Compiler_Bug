{"sha": "15442c9c4fc7bb169629a75c170d801e9fa07fd7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTU0NDJjOWM0ZmM3YmIxNjk2MjlhNzVjMTcwZDgwMWU5ZmEwN2ZkNw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2011-09-27T02:12:42Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-09-27T02:12:42Z"}, "message": "re PR c++/50508 ([C++0x] ICE cxx_eval_logical_expression cp/semantics.c:6487)\n\n\tPR c++/50508\n\t* semantics.c (cxx_eval_logical_expression): Use tree_int_cst_equal\n\trather than ==.\n\nFrom-SVN: r179228", "tree": {"sha": "0137508a143f6407bb5e58b2b1e443359dc09c28", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0137508a143f6407bb5e58b2b1e443359dc09c28"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/15442c9c4fc7bb169629a75c170d801e9fa07fd7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15442c9c4fc7bb169629a75c170d801e9fa07fd7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/15442c9c4fc7bb169629a75c170d801e9fa07fd7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15442c9c4fc7bb169629a75c170d801e9fa07fd7/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cb8bbba89e8db9b585dd0d3935ffef5e77920d5a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb8bbba89e8db9b585dd0d3935ffef5e77920d5a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb8bbba89e8db9b585dd0d3935ffef5e77920d5a"}], "stats": {"total": 26, "additions": 24, "deletions": 2}, "files": [{"sha": "0efa0d682e72b438d426ec6ec7bc7d0d880b5639", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15442c9c4fc7bb169629a75c170d801e9fa07fd7/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15442c9c4fc7bb169629a75c170d801e9fa07fd7/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=15442c9c4fc7bb169629a75c170d801e9fa07fd7", "patch": "@@ -1,3 +1,9 @@\n+2011-09-26  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/50508\n+\t* semantics.c (cxx_eval_logical_expression): Use tree_int_cst_equal\n+\trather than ==.\n+\n 2011-09-26  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/45487"}, {"sha": "89c76d5a12645cca62bd8549b833ff0cf9ec0025", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15442c9c4fc7bb169629a75c170d801e9fa07fd7/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15442c9c4fc7bb169629a75c170d801e9fa07fd7/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=15442c9c4fc7bb169629a75c170d801e9fa07fd7", "patch": "@@ -6680,9 +6680,9 @@ cxx_eval_logical_expression (const constexpr_call *call, tree t,\n \t\t\t\t\t   allow_non_constant, addr,\n \t\t\t\t\t   non_constant_p);\n   VERIFY_CONSTANT (lhs);\n-  if (lhs == bailout_value)\n+  if (tree_int_cst_equal (lhs, bailout_value))\n     return lhs;\n-  gcc_assert (lhs == continue_value);\n+  gcc_assert (tree_int_cst_equal (lhs, continue_value));\n   r = cxx_eval_constant_expression (call, TREE_OPERAND (t, 1),\n \t\t\t\t    allow_non_constant, addr, non_constant_p);\n   VERIFY_CONSTANT (r);"}, {"sha": "bc362edf21b7db1021c83a84d738a39b69945e36", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15442c9c4fc7bb169629a75c170d801e9fa07fd7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15442c9c4fc7bb169629a75c170d801e9fa07fd7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=15442c9c4fc7bb169629a75c170d801e9fa07fd7", "patch": "@@ -1,3 +1,8 @@\n+2011-09-26  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/50508\n+\t* g++.dg/cpp0x/constexpr-typedef1.C: New.\n+\n 2011-09-26  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/45487"}, {"sha": "2719e3aea12a32c06d28851642aba63f2b881e6c", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-typedef1.C", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15442c9c4fc7bb169629a75c170d801e9fa07fd7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-typedef1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15442c9c4fc7bb169629a75c170d801e9fa07fd7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-typedef1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-typedef1.C?ref=15442c9c4fc7bb169629a75c170d801e9fa07fd7", "patch": "@@ -0,0 +1,11 @@\n+// PR c++/50508\n+// { dg-options -std=c++0x }\n+\n+template <class T>\n+  struct integral_constant {\n+    typedef T value_type;\n+    constexpr operator value_type() { return true; }\n+  };\n+\n+static constexpr bool value = integral_constant<bool>()\n+                              && true;"}]}