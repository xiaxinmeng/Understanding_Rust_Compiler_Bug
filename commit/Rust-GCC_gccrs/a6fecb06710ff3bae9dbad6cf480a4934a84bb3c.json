{"sha": "a6fecb06710ff3bae9dbad6cf480a4934a84bb3c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTZmZWNiMDY3MTBmZjNiYWU5ZGJhZDZjZjQ4MGE0OTM0YTg0YmIzYw==", "commit": {"author": {"name": "Yannick Moy", "email": "moy@adacore.com", "date": "2020-10-09T13:59:24Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-11-25T13:22:29Z"}, "message": "[Ada] Minimize side-effect removal in GNATprove mode\n\ngcc/ada/\n\n\t* exp_util.adb (Remove_Side_Effects): Only remove side-effects\n\tin GNATprove mode when this is useful.\n\t* sem_res.adb (Set_Slice_Subtype): Make sure in GNATprove mode\n\tto define the Itype when needed, so that run-time errors can be\n\tanalyzed.\n\t* sem_util.adb (Enclosing_Declaration): Correctly take into\n\taccount renaming declarations.", "tree": {"sha": "d37b17cbe6c79b29c866ead273c12e43b63ae0e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d37b17cbe6c79b29c866ead273c12e43b63ae0e4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a6fecb06710ff3bae9dbad6cf480a4934a84bb3c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6fecb06710ff3bae9dbad6cf480a4934a84bb3c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6fecb06710ff3bae9dbad6cf480a4934a84bb3c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6fecb06710ff3bae9dbad6cf480a4934a84bb3c/comments", "author": {"login": "yannickmoy", "id": 859440, "node_id": "MDQ6VXNlcjg1OTQ0MA==", "avatar_url": "https://avatars.githubusercontent.com/u/859440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yannickmoy", "html_url": "https://github.com/yannickmoy", "followers_url": "https://api.github.com/users/yannickmoy/followers", "following_url": "https://api.github.com/users/yannickmoy/following{/other_user}", "gists_url": "https://api.github.com/users/yannickmoy/gists{/gist_id}", "starred_url": "https://api.github.com/users/yannickmoy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yannickmoy/subscriptions", "organizations_url": "https://api.github.com/users/yannickmoy/orgs", "repos_url": "https://api.github.com/users/yannickmoy/repos", "events_url": "https://api.github.com/users/yannickmoy/events{/privacy}", "received_events_url": "https://api.github.com/users/yannickmoy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9d41d78b05f262d638fa205c7d60415321535834", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d41d78b05f262d638fa205c7d60415321535834", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9d41d78b05f262d638fa205c7d60415321535834"}], "stats": {"total": 47, "additions": 34, "deletions": 13}, "files": [{"sha": "fa30e8f7de3f423ad99f649882cfd3a8cb62a177", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 29, "deletions": 11, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6fecb06710ff3bae9dbad6cf480a4934a84bb3c/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6fecb06710ff3bae9dbad6cf480a4934a84bb3c/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=a6fecb06710ff3bae9dbad6cf480a4934a84bb3c", "patch": "@@ -11124,6 +11124,12 @@ package body Exp_Util is\n       --  otherwise it generates an internal temporary. The created temporary\n       --  entity is marked as internal.\n \n+      function Possible_Side_Effect_In_SPARK (Exp : Node_Id) return Boolean;\n+      --  Computes whether a side-effect is possible in SPARK, which should\n+      --  be handled by removing it from the expression for GNATprove. Note\n+      --  that other side-effects related to volatile variables are handled\n+      --  separately.\n+\n       ---------------------\n       -- Build_Temporary --\n       ---------------------\n@@ -11159,6 +11165,26 @@ package body Exp_Util is\n          return Temp_Id;\n       end Build_Temporary;\n \n+      -----------------------------------\n+      -- Possible_Side_Effect_In_SPARK --\n+      -----------------------------------\n+\n+      function Possible_Side_Effect_In_SPARK (Exp : Node_Id) return Boolean is\n+      begin\n+        --  Side-effect removal in SPARK should only occur when not inside a\n+        --  generic and not doing a preanalysis, inside an object renaming or\n+        --  a type declaration or a for-loop iteration scheme.\n+\n+         return not Inside_A_Generic\n+           and then Full_Analysis\n+           and then Nkind (Enclosing_Declaration (Exp)) in\n+                      N_Full_Type_Declaration\n+                    | N_Iterator_Specification\n+                    | N_Loop_Parameter_Specification\n+                    | N_Object_Renaming_Declaration\n+                    | N_Subtype_Declaration;\n+      end Possible_Side_Effect_In_SPARK;\n+\n       --  Local variables\n \n       Loc          : constant Source_Ptr      := Sloc (Exp);\n@@ -11176,11 +11202,11 @@ package body Exp_Util is\n    begin\n       --  Handle cases in which there is nothing to do. In GNATprove mode,\n       --  removal of side effects is useful for the light expansion of\n-      --  renamings. This removal should only occur when not inside a\n-      --  generic and not doing a preanalysis.\n+      --  renamings.\n \n       if not Expander_Active\n-        and (Inside_A_Generic or not Full_Analysis or not GNATprove_Mode)\n+        and then not\n+          (GNATprove_Mode and then Possible_Side_Effect_In_SPARK (Exp))\n       then\n          return;\n \n@@ -11218,14 +11244,6 @@ package body Exp_Util is\n         and then Is_Class_Wide_Type (Etype (Exp))\n       then\n          return;\n-\n-      --  An expression which is in SPARK mode is considered side effect free\n-      --  if the resulting value is captured by a variable or a constant.\n-\n-      elsif GNATprove_Mode\n-        and then Nkind (Parent (Exp)) = N_Object_Declaration\n-      then\n-         return;\n       end if;\n \n       --  The remaining processing is done with all checks suppressed"}, {"sha": "c169467fa775db73d2bf792e28af4a2440b852ef", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6fecb06710ff3bae9dbad6cf480a4934a84bb3c/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6fecb06710ff3bae9dbad6cf480a4934a84bb3c/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=a6fecb06710ff3bae9dbad6cf480a4934a84bb3c", "patch": "@@ -12438,9 +12438,10 @@ package body Sem_Res is\n       --  the point where actions for the slice are analyzed). Note that this\n       --  is different from freezing the itype immediately, which might be\n       --  premature (e.g. if the slice is within a transient scope). This needs\n-      --  to be done only if expansion is enabled.\n+      --  to be done only if expansion is enabled, or in GNATprove mode to\n+      --  capture the associated run-time exceptions if any.\n \n-      elsif Expander_Active then\n+      elsif Expander_Active or GNATprove_Mode then\n          Ensure_Defined (Typ => Slice_Subtype, N => N);\n       end if;\n    end Set_Slice_Subtype;"}, {"sha": "34714729df405a718a07b86b396e2a1245e7e433", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6fecb06710ff3bae9dbad6cf480a4934a84bb3c/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6fecb06710ff3bae9dbad6cf480a4934a84bb3c/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=a6fecb06710ff3bae9dbad6cf480a4934a84bb3c", "patch": "@@ -7859,6 +7859,8 @@ package body Sem_Util is\n                         or else\n                       Nkind (Decl) in N_Later_Decl_Item\n                         or else\n+                      Nkind (Decl) in N_Renaming_Declaration\n+                        or else\n                       Nkind (Decl) = N_Number_Declaration)\n       loop\n          Decl := Parent (Decl);"}]}