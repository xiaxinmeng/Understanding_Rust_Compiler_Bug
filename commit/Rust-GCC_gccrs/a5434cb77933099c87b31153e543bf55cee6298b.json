{"sha": "a5434cb77933099c87b31153e543bf55cee6298b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTU0MzRjYjc3OTMzMDk5Yzg3YjMxMTUzZTU0M2JmNTVjZWU2Mjk4Yg==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2001-04-06T22:05:10Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2001-04-06T22:05:10Z"}, "message": "15071.C (main): Update to conformant headers and constructs.\n\n\n\n\n\n\n2001-04-06  Benjamin Kosnik  <bkoz@redhat.com>\n\n\t* g++.old-deja/g++.benjamin/15071.C (main): Update to conformant\n\theaders and constructs.\n\t* g++.old-deja/g++.robertl/eb79.C: Same.\n\t* g++.old-deja/g++.robertl/eb77.C (main): Same.\n\t* g++.old-deja/g++.robertl/eb73.C: Same.\n\t* g++.old-deja/g++.robertl/eb66.C (main): Same.\n\t* g++.old-deja/g++.robertl/eb55.C (t): Same.\n\t* g++.old-deja/g++.robertl/eb54.C (main): Same.\n\t* g++.old-deja/g++.robertl/eb46.C (main): Same.\n\t* g++.old-deja/g++.robertl/eb44.C: Same.\n\t* g++.old-deja/g++.robertl/eb41.C (main): Same.\n\t* g++.old-deja/g++.robertl/eb4.C (main): Same.\n\t* g++.old-deja/g++.robertl/eb39.C: Same.\n\t* g++.old-deja/g++.robertl/eb33.C (main): Same.\n\t* g++.old-deja/g++.robertl/eb31.C (main): Same.\n\t* g++.old-deja/g++.robertl/eb30.C: Same.\n\t* g++.old-deja/g++.robertl/eb3.C: Same.\n\t* g++.old-deja/g++.robertl/eb24.C (T>): Same.\n\t* g++.old-deja/g++.robertl/eb21.C: Same.\n\t* g++.old-deja/g++.robertl/eb15.C: Same.\n\t* g++.old-deja/g++.robertl/eb118.C: Same.\n\t* g++.old-deja/g++.robertl/eb115.C (main): Same.\n\t* g++.old-deja/g++.robertl/eb113.C (streambuf): Same.\n\t* g++.old-deja/g++.robertl/eb109.C: Same.\n\t* g++.old-deja/g++.other/sibcall1.C (main): Same.\n\t* g++.old-deja/g++.mike/rtti1.C: Same.\n\t* g++.old-deja/g++.mike/p658.C: Same.\n\t* g++.old-deja/g++.mike/net46.C: Same.\n\t* g++.old-deja/g++.mike/net34.C: Same.\n\t* g++.old-deja/g++.mike/memoize1.C: Same.\n\t* g++.old-deja/g++.mike/eh2.C: Same.\n\t* g++.old-deja/g++.law/weak.C: Same.\n\t* g++.old-deja/g++.law/visibility7.C: Same.\n\t* g++.old-deja/g++.law/visibility25.C: Same.\n\t* g++.old-deja/g++.law/visibility22.C: Same.\n\t* g++.old-deja/g++.law/visibility2.C: Same.\n\t* g++.old-deja/g++.law/visibility17.C: Same.\n\t* g++.old-deja/g++.law/visibility13.C: Same.\n\t* g++.old-deja/g++.law/visibility10.C: Same.\n\t* g++.old-deja/g++.law/visibility1.C: Same.\n\t* g++.old-deja/g++.law/virtual3.C (eval): Same.\n\t* g++.old-deja/g++.law/vbase1.C: Same.\n\t* g++.old-deja/g++.law/operators32.C: Same.\n\t* g++.old-deja/g++.law/nest3.C: Same.\n\t* g++.old-deja/g++.law/missed-error2.C (foo): Same.\n\t* g++.old-deja/g++.law/except5.C (main): Same.\n\t* g++.old-deja/g++.law/cvt7.C (run): Same.\n\t* g++.old-deja/g++.law/cvt2.C: Same.\n\t* g++.old-deja/g++.law/cvt16.C: Same.\n\t* g++.old-deja/g++.law/ctors6.C (bar): Same.\n\t* g++.old-deja/g++.law/ctors17.C (main): Same.\n\t* g++.old-deja/g++.law/ctors13.C: Same.\n\t* g++.old-deja/g++.law/ctors12.C (main): Same.\n\t* g++.old-deja/g++.law/ctors10.C: Same.\n\t* g++.old-deja/g++.law/code-gen5.C: Same.\n\t* g++.old-deja/g++.law/bad-error7.C: Same.\n\t* g++.old-deja/g++.law/arm9.C: Same.\n\t* g++.old-deja/g++.law/arm12.C: Same.\n\t* g++.old-deja/g++.law/arg8.C: Same.\n\t* g++.old-deja/g++.law/arg1.C: Same.\n\t* g++.old-deja/g++.jason/typeid1.C (struct foo): Same.\n\t* g++.old-deja/g++.jason/template31.C: Same.\n\t* g++.old-deja/g++.jason/template24.C (main): Same.\n\t* g++.old-deja/g++.jason/2371.C: Same.\n\t* g++.old-deja/g++.eh/new2.C: Same.\n\t* g++.old-deja/g++.eh/new1.C: Same.\n\t* g++.old-deja/g++.brendan/ptolemy2.C: Same.\n\t* g++.old-deja/g++.brendan/nest21.C (main): Same.\n\t* g++.old-deja/g++.brendan/err-msg3.C: Same.\n\t* g++.old-deja/g++.brendan/crash62.C: Same.\n\t* g++.old-deja/g++.brendan/crash52.C: Same.\n\t* g++.old-deja/g++.brendan/crash49.C (main): Same.\n\t* g++.old-deja/g++.brendan/crash38.C: Same.\n\t* g++.old-deja/g++.brendan/crash15.C (main): Same.\n\t* g++.old-deja/g++.brendan/copy9.C: Same.\n\nFrom-SVN: r41167", "tree": {"sha": "75e5dd7c05dad1434608a056e278baa8fd50c005", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/75e5dd7c05dad1434608a056e278baa8fd50c005"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a5434cb77933099c87b31153e543bf55cee6298b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5434cb77933099c87b31153e543bf55cee6298b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5434cb77933099c87b31153e543bf55cee6298b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5434cb77933099c87b31153e543bf55cee6298b/comments", "author": null, "committer": null, "parents": [{"sha": "62fce11f4521012120b124433bfa5a76c81917ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62fce11f4521012120b124433bfa5a76c81917ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62fce11f4521012120b124433bfa5a76c81917ee"}], "stats": {"total": 705, "additions": 428, "deletions": 277}, "files": [{"sha": "9d8f5922533ac60bf86e065fa795f95b85eac4dd", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 78, "deletions": 0, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a5434cb77933099c87b31153e543bf55cee6298b", "patch": "@@ -1,3 +1,81 @@\n+2001-04-06  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\t* g++.old-deja/g++.benjamin/15071.C (main): Update to conformant\n+\theaders and constructs.\n+\t* g++.old-deja/g++.robertl/eb79.C: Same.\n+\t* g++.old-deja/g++.robertl/eb77.C (main): Same.\n+\t* g++.old-deja/g++.robertl/eb73.C: Same.\n+\t* g++.old-deja/g++.robertl/eb66.C (main): Same.\n+\t* g++.old-deja/g++.robertl/eb55.C (t): Same.\n+\t* g++.old-deja/g++.robertl/eb54.C (main): Same.\n+\t* g++.old-deja/g++.robertl/eb46.C (main): Same.\n+\t* g++.old-deja/g++.robertl/eb44.C: Same.\n+\t* g++.old-deja/g++.robertl/eb41.C (main): Same.\n+\t* g++.old-deja/g++.robertl/eb4.C (main): Same.\n+\t* g++.old-deja/g++.robertl/eb39.C: Same.\n+\t* g++.old-deja/g++.robertl/eb33.C (main): Same.\n+\t* g++.old-deja/g++.robertl/eb31.C (main): Same.\n+\t* g++.old-deja/g++.robertl/eb30.C: Same.\n+\t* g++.old-deja/g++.robertl/eb3.C: Same.\n+\t* g++.old-deja/g++.robertl/eb24.C (T>): Same.\n+\t* g++.old-deja/g++.robertl/eb21.C: Same.\n+\t* g++.old-deja/g++.robertl/eb15.C: Same.\n+\t* g++.old-deja/g++.robertl/eb118.C: Same.\n+\t* g++.old-deja/g++.robertl/eb115.C (main): Same.\n+\t* g++.old-deja/g++.robertl/eb113.C (streambuf): Same.\n+\t* g++.old-deja/g++.robertl/eb109.C: Same.\n+\t* g++.old-deja/g++.other/sibcall1.C (main): Same.\n+\t* g++.old-deja/g++.mike/rtti1.C: Same.\n+\t* g++.old-deja/g++.mike/p658.C: Same.\n+\t* g++.old-deja/g++.mike/net46.C: Same.\n+\t* g++.old-deja/g++.mike/net34.C: Same.\n+\t* g++.old-deja/g++.mike/memoize1.C: Same.\n+\t* g++.old-deja/g++.mike/eh2.C: Same.\n+\t* g++.old-deja/g++.law/weak.C: Same.\n+\t* g++.old-deja/g++.law/visibility7.C: Same.\n+\t* g++.old-deja/g++.law/visibility25.C: Same.\n+\t* g++.old-deja/g++.law/visibility22.C: Same.\n+\t* g++.old-deja/g++.law/visibility2.C: Same.\n+\t* g++.old-deja/g++.law/visibility17.C: Same.\n+\t* g++.old-deja/g++.law/visibility13.C: Same.\n+\t* g++.old-deja/g++.law/visibility10.C: Same.\n+\t* g++.old-deja/g++.law/visibility1.C: Same.\n+\t* g++.old-deja/g++.law/virtual3.C (eval): Same.\n+\t* g++.old-deja/g++.law/vbase1.C: Same.\n+\t* g++.old-deja/g++.law/operators32.C: Same.\n+\t* g++.old-deja/g++.law/nest3.C: Same.\n+\t* g++.old-deja/g++.law/missed-error2.C (foo): Same.\n+\t* g++.old-deja/g++.law/except5.C (main): Same.\n+\t* g++.old-deja/g++.law/cvt7.C (run): Same.\n+\t* g++.old-deja/g++.law/cvt2.C: Same.\n+\t* g++.old-deja/g++.law/cvt16.C: Same.\n+\t* g++.old-deja/g++.law/ctors6.C (bar): Same.\n+\t* g++.old-deja/g++.law/ctors17.C (main): Same.\n+\t* g++.old-deja/g++.law/ctors13.C: Same.\n+\t* g++.old-deja/g++.law/ctors12.C (main): Same.\n+\t* g++.old-deja/g++.law/ctors10.C: Same.\n+\t* g++.old-deja/g++.law/code-gen5.C: Same.\n+\t* g++.old-deja/g++.law/bad-error7.C: Same.\n+\t* g++.old-deja/g++.law/arm9.C: Same.\n+\t* g++.old-deja/g++.law/arm12.C: Same.\n+\t* g++.old-deja/g++.law/arg8.C: Same.\n+\t* g++.old-deja/g++.law/arg1.C: Same.\n+\t* g++.old-deja/g++.jason/typeid1.C (struct foo): Same.\n+\t* g++.old-deja/g++.jason/template31.C: Same.\n+\t* g++.old-deja/g++.jason/template24.C (main): Same.\n+\t* g++.old-deja/g++.jason/2371.C: Same.\n+\t* g++.old-deja/g++.eh/new2.C: Same.\n+\t* g++.old-deja/g++.eh/new1.C: Same.\n+\t* g++.old-deja/g++.brendan/ptolemy2.C: Same.\n+\t* g++.old-deja/g++.brendan/nest21.C (main): Same.\n+\t* g++.old-deja/g++.brendan/err-msg3.C: Same.\n+\t* g++.old-deja/g++.brendan/crash62.C: Same.\n+\t* g++.old-deja/g++.brendan/crash52.C: Same.\n+\t* g++.old-deja/g++.brendan/crash49.C (main): Same.\n+\t* g++.old-deja/g++.brendan/crash38.C: Same.\n+\t* g++.old-deja/g++.brendan/crash15.C (main): Same.\n+\t* g++.old-deja/g++.brendan/copy9.C: Same.\n+\n Fri Apr  6 15:36:15 2001  J\"orn Rennecke <amylaar@redhat.com>\n \n \t* gcc.c-torture/execute/20001203-2.c (main):"}, {"sha": "eaa8eeebd1058a3f13ed463bb299c5b643330a1a", "filename": "gcc/testsuite/g++.old-deja/g++.benjamin/15071.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.benjamin%2F15071.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.benjamin%2F15071.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.benjamin%2F15071.C?ref=a5434cb77933099c87b31153e543bf55cee6298b", "patch": "@@ -2,10 +2,10 @@\n // g++/15071\n // gcc invocation fails to link in libstdc++\n \n-#include <iostream.h>\n+#include <iostream>\n \n int main() {\n-  cout<<\"hi\"<<endl;\n+  std::cout << \"hi\" << std::endl;\n \n   return 0;\n }"}, {"sha": "edaf99775de148898845624348668e3e5d8e9ce3", "filename": "gcc/testsuite/g++.old-deja/g++.brendan/copy9.C", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcopy9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcopy9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcopy9.C?ref=a5434cb77933099c87b31153e543bf55cee6298b", "patch": "@@ -1,5 +1,5 @@\n // GROUPS passed copy-ctors\n-#include <iostream.h>\n+#include <iostream>\n \n // token types: from state parser\n const int T_EOF = 257;\n@@ -35,10 +35,11 @@ main () {\n \tParseToken b(a);\n \n \tif (b.doubleval == 23.2)\n-\t  cout << \"PASS\\n\";\n+\t  std::cout << \"PASS\\n\";\n \telse\n \t  {\n-\t    cout << \"FAIL\\n\";\n+\t    std::cout << \"FAIL\\n\";\n \t    return 1;\n \t  }\n }\n+"}, {"sha": "953144ac5ac71f8e07f8d596df8aac70dba8bd28", "filename": "gcc/testsuite/g++.old-deja/g++.brendan/crash15.C", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash15.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash15.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash15.C?ref=a5434cb77933099c87b31153e543bf55cee6298b", "patch": "@@ -1,22 +1,22 @@\n // Build don't link: \n // GROUPS passed old-abort\n-#include <iostream.h>\n+#include <iostream>\n \n class A {\n  public:\n-  virtual ~A() {cout << \"executed ~A()\\n\";};\n+  virtual ~A() {std::cout << \"executed ~A()\\n\";};\n };\n \n class B : public A {\n  public:\n-  virtual ~B() {cout << \"executed ~B()\\n\";};\n+  virtual ~B() {std::cout << \"executed ~B()\\n\";};\n };\n \n int\n main() {\n-  cout << \"starting\\n\";\n+  std::cout << \"starting\\n\";\n   B b;\n   b.~A();// ERROR -  destructor\n-  cout << \"done\\n\";\n+  std::cout << \"done\\n\";\n };\n "}, {"sha": "5f0cf9bd2c25f53be75fbbb661e30f561e8e82da", "filename": "gcc/testsuite/g++.old-deja/g++.brendan/crash38.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash38.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash38.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash38.C?ref=a5434cb77933099c87b31153e543bf55cee6298b", "patch": "@@ -8,15 +8,15 @@\n    main.cc: Please report this to 'bug-g++@prep.ai.mit.edu'\n    */\n \n-#include <stream.h>\n+#include <iostream>\n \n class INTEGER {\n int x;\n public:\n    typedef int BASE;\n    INTEGER(int y) : x(y) {}\n    INTEGER() {}\n-   void encode() { cout << \"Integer encoder\";}\n+   void encode() { std::cout << \"Integer encoder\";}\n    int operator=(int y) { x=y; return x; }\n    operator int() {return x; }\n };"}, {"sha": "3f2e2256e359f300196b8d91f1632dcf53f21a78", "filename": "gcc/testsuite/g++.old-deja/g++.brendan/crash49.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash49.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash49.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash49.C?ref=a5434cb77933099c87b31153e543bf55cee6298b", "patch": "@@ -1,12 +1,12 @@\n // Build don't link: \n // GROUPS passed old-abort\n-#include<iostream.h>\n+#include<iostream>\n \n const int keys = 10;\n const int key[keys] = {6, key[1], 2, keys, 1, 7, 6, key[2], key[8]};\n \n void main()\n { // ERROR - return type for main\n-        for(int i = 0; i < keys;) cout << key[i++] << \" \";\n-        endl(cout);\n+        for(int i = 0; i < keys;) std::cout << key[i++] << \" \";\n+        std::endl(std::cout);\n }"}, {"sha": "e8c51e8be2f633794a0ac5068c1fcffc0e46f5d5", "filename": "gcc/testsuite/g++.old-deja/g++.brendan/crash52.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash52.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash52.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash52.C?ref=a5434cb77933099c87b31153e543bf55cee6298b", "patch": "@@ -1,14 +1,14 @@\n // Build don't link: \n // GROUPS passed old-abort\n // Special g++ Options: -Wreturn-type\n-#include <iostream.h>\n+#include <iostream>\n \n class A {\n public:\n   friend A f(A &a);// ERROR -  ambiguates.*\n };\n \n A &f(A &a) {// ERROR -  new decl.*\n-  cout << \"Blah\\n\";\n+  std::cout << \"Blah\\n\";\n } // ERROR - non-void function\n "}, {"sha": "c86f9e6bb4ac083250df9bfa5f806b7a2d7cf8d3", "filename": "gcc/testsuite/g++.old-deja/g++.brendan/crash62.C", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash62.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash62.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash62.C?ref=a5434cb77933099c87b31153e543bf55cee6298b", "patch": "@@ -1,11 +1,11 @@\n // Build don't link: \n // GROUPS passed old-abort\n-#include <iostream.h>\n+#include <iostream>\n \n \tvoid\n-\tfubar(ostream* out, const char* string)\n+\tfubar(std::ostream* out, const char* s)\n \t{\n-  \t  (*out) << string << endl;\n+  \t  (*out) << s << std::endl;\n   \t  return;\n \t}\n \n@@ -14,8 +14,8 @@\n \t{\n   \t  // Declare a ref and a pointer to the same ostream.\n   \t  //\n-  \t  ostream* out = &cerr;\n-  \t  ostream& die = cerr;\n+  \t  std::ostream* out = &std::cerr;\n+  \t  std::ostream& die = std::cerr;\n \n   \t  // Valid call to fubar.\n   \t  //"}, {"sha": "4574a36725402d7c52f5b73a5681ed5ed926373a", "filename": "gcc/testsuite/g++.old-deja/g++.brendan/cvt1.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcvt1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcvt1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcvt1.C?ref=a5434cb77933099c87b31153e543bf55cee6298b", "patch": "@@ -1,6 +1,6 @@\n // Build don't link: \n // GROUPS passed conversions\n-#include <iostream.h>\n+#include <iostream>\n \n class Thing\n {\n@@ -39,6 +39,6 @@ main (int argc, char** argv)\n \tGroup g (Group::THIS_GROUP) ;\n \n \tg += new Thing (Thing::GOOD_THING) ;\n-\tcout << \"Group type is \" << (Group::GroupType) g << endl ;\n+\tstd::cout << \"Group type is \" << (Group::GroupType) g << std::endl ;\n \treturn 0 ;\n }"}, {"sha": "76a084090aea091f748c99668e68e9494728963a", "filename": "gcc/testsuite/g++.old-deja/g++.brendan/err-msg3.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Ferr-msg3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Ferr-msg3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Ferr-msg3.C?ref=a5434cb77933099c87b31153e543bf55cee6298b", "patch": "@@ -1,7 +1,7 @@\n // Build don't link: \n // GROUPS passed error-messages\n-#include <fstream.h>\n-#include <iomanip.h>\n+#include <fstream>\n+#include <iomanip>\n \n // This error should not appear:\n // bug.C: In method `test::test(const class test &)':"}, {"sha": "03d3f32ad74c80cb3e0a569d3511b88ca653cb9f", "filename": "gcc/testsuite/g++.old-deja/g++.brendan/nest21.C", "status": "modified", "additions": 19, "deletions": 19, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fnest21.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fnest21.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fnest21.C?ref=a5434cb77933099c87b31153e543bf55cee6298b", "patch": "@@ -1,7 +1,7 @@\n // GROUPS passed nested-classes\n-#include <iostream.h>\n-#include <stdio.h>\n-#include <string.h>\n+#include <iostream>\n+#include <cstdio>\n+#include <cstring>\n \n static char output[1024];\n \n@@ -32,52 +32,52 @@ public:\n BDDRetrace::Dump&\n BDDRetrace::Dump1::operator<<(char c)\n { char tempout[1024];\n-  sprintf (tempout, \"%s%s%c\", output, \"1-\", c);\n-  strcpy (output, tempout);\n+  std::sprintf(tempout, \"%s%s%c\", output, \"1-\", c);\n+  std::strcpy(output, tempout);\n   return *this;\n }\n \n BDDRetrace::Dump&\n BDDRetrace::Dump1::operator<<(int i)\n { char tempout[1024];\n-  sprintf (tempout, \"%s%s%d\", output, \"1-\", i);\n-  strcpy (output, tempout);\n+  std::sprintf (tempout, \"%s%s%d\", output, \"1-\", i);\n+  std::strcpy (output, tempout);\n   return *this; }\n \n BDDRetrace::Dump&\n BDDRetrace::Dump1::operator<<(double r)\n { char tempout[1024];\n-  sprintf (tempout, \"%s%s%1.0f\", output, \"1-\", r);\n-  strcpy (output, tempout);\n+  std::sprintf (tempout, \"%s%s%1.0f\", output, \"1-\", r);\n+  std::strcpy (output, tempout);\n   return *this; }\n \n BDDRetrace::Dump&\n Dump2::operator<<(char c)\n { char tempout[1024];\n-  sprintf (tempout, \"%s%s%c\", output, \"2-\", c);\n-  strcpy (output, tempout);\n+  std::sprintf (tempout, \"%s%s%c\", output, \"2-\", c);\n+  std::strcpy (output, tempout);\n   return *this; }\n \n BDDRetrace::Dump&\n Dump2::operator<<(int i)\n { char tempout[1024];\n-  sprintf (tempout, \"%s%s%d\", output, \"2-\", i);\n-  strcpy (output, tempout);\n+  std::sprintf (tempout, \"%s%s%d\", output, \"2-\", i);\n+  std::strcpy (output, tempout);\n   return *this; }\n \n BDDRetrace::Dump&\n Dump2::operator<<(double r)\n { char tempout[1024];\n-  sprintf (tempout, \"%s%s%1.0f\", output, \"2-\", r);\n-  strcpy (output, tempout);\n+  std::sprintf (tempout, \"%s%s%1.0f\", output, \"2-\", r);\n+  std::strcpy (output, tempout);\n   return *this; }\n \n int main()\n {\n     BDDRetrace::Dump1 d1;\n     Dump2 d2;\n \n-    sprintf (output, \" \");\n+    std::sprintf (output, \" \");\n \n     d1 << 'a';\n     d1 << 1;\n@@ -87,10 +87,10 @@ int main()\n     d2 << 1;\n     d2 << 1.0;\n \n-    if (strcmp (output, \" 1-a1-11-12-a2-12-1\") == 0)\n-      printf (\"PASS\\n\");\n+    if (std::strcmp (output, \" 1-a1-11-12-a2-12-1\") == 0)\n+      std::printf (\"PASS\\n\");\n     else\n-      { printf (\"FAIL\\n\"); return 1; }\n+      { std::printf (\"FAIL\\n\"); return 1; }\n \n     return 0;\n }"}, {"sha": "0d053c2cda70dc0b0610c68a2ccfe5153a502599", "filename": "gcc/testsuite/g++.old-deja/g++.brendan/ptolemy2.C", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fptolemy2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fptolemy2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fptolemy2.C?ref=a5434cb77933099c87b31153e543bf55cee6298b", "patch": "@@ -1,5 +1,5 @@\n // GROUPS passed ptolemy-bugs\n-#include <iostream.h>\n+#include <iostream>\n \n class PTcl {\n public:\n@@ -45,19 +45,19 @@ void printargs(char** argv) {\n }\n \n int PTcl::one(int, char** argv) {\n-  cout << \"FAIL\\n\";\n+  std::cout << \"FAIL\\n\";\n \tprintargs(argv);\n \treturn 1;\n }\n \n int PTcl::two(int, char** argv) {\n-  cout << \"PASS\\n\";\n+  std::cout << \"PASS\\n\";\n \tprintargs(argv);\n \treturn 0;\n }\n \n int PTcl::three(int, char** argv) {\n-  cout << \"FAIL\\n\";\n+  std::cout << \"FAIL\\n\";\n \tprintargs(argv);\n \treturn 1;\n }"}, {"sha": "788a39b2958fefd50855cf29aa95c8f478a3b88f", "filename": "gcc/testsuite/g++.old-deja/g++.eh/new1.C", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.eh%2Fnew1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.eh%2Fnew1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.eh%2Fnew1.C?ref=a5434cb77933099c87b31153e543bf55cee6298b", "patch": "@@ -1,8 +1,8 @@\n // Test that a throw in foo destroys the A, but does not free the memory.\n \n-#include <stddef.h>\n-#include <stdlib.h>\n-#include <new.h>\n+#include <cstddef>\n+#include <cstdlib>\n+#include <new>\n \n struct A {\n   A();\n@@ -34,11 +34,15 @@ void foo (B*) { throw 1; }\n void* operator new (size_t size) throw (std::bad_alloc)\n {\n   ++newed;\n-  return (void *) malloc (size);\n+  return (void *) std::malloc (size);\n }\n \n void operator delete (void *p) throw ()\n {\n   --newed;\n-  free (p);\n+  std::free (p);\n }\n+\n+\n+\n+"}, {"sha": "316afffbfc68543081b46fd6e2bd1db86143b710", "filename": "gcc/testsuite/g++.old-deja/g++.eh/new2.C", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.eh%2Fnew2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.eh%2Fnew2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.eh%2Fnew2.C?ref=a5434cb77933099c87b31153e543bf55cee6298b", "patch": "@@ -1,8 +1,8 @@\n // Test that a throw in B's constructor destroys the A and frees the memory.\n \n-#include <stddef.h>\n-#include <stdlib.h>\n-#include <new.h>\n+#include <cstddef>\n+#include <cstdlib>\n+#include <new>\n \n struct A {\n   A();\n@@ -35,11 +35,12 @@ void foo (B*) { }\n void* operator new (size_t size) throw (std::bad_alloc)\n {\n   ++newed;\n-  return (void *) malloc (size);\n+  return (void *) std::malloc (size);\n }\n \n void operator delete (void *p) throw ()\n {\n   --newed;\n   free (p);\n }\n+"}, {"sha": "a982d4042e4e169f6b4170cb0426b549bd13378f", "filename": "gcc/testsuite/g++.old-deja/g++.jason/2371.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2F2371.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2F2371.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2F2371.C?ref=a5434cb77933099c87b31153e543bf55cee6298b", "patch": "@@ -7,12 +7,12 @@\n // Wendell Baker, Berkeley CAD Group, 1993 (wbaker@ic.Berkeley.EDU)\n //\n \n-\n #pragma implementation \"ListS.h\"\n #pragma implementation \"SetLS.h\"\n \n-#include <stdlib.h>\n-#include <iostream.h>\n+#include <cstdlib>\n+#include <iostream>\n+using namespace std;\n \n # 1 \"../../templates/SetLS.h\" 1\n // -*- C++ -*-"}, {"sha": "3315d182c42072ecd71487cd29c2554b681cb58b", "filename": "gcc/testsuite/g++.old-deja/g++.jason/template24.C", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Ftemplate24.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Ftemplate24.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Ftemplate24.C?ref=a5434cb77933099c87b31153e543bf55cee6298b", "patch": "@@ -1,14 +1,14 @@\n // Bug: g++ doesn't find the conversion from ostream_withassign to ostream.\n \n-#include <iostream.h>\n+#include <iostream>\n \n template <class T>\n struct A {\n   T t;\n };\n \n template <class T>\n-ostream & operator<< (ostream & os, A<T> & a)\n+std::ostream & operator<< (std::ostream & os, A<T> & a)\n {\n   os << a.t;\n   return os;\n@@ -17,5 +17,6 @@ ostream & operator<< (ostream & os, A<T> & a)\n int main ()\n {\n   A<int> a = { 1 };\n-  cout << a << endl;\n+  std::cout << a << std::endl;\n }\n+"}, {"sha": "15e91fde7f786899b3566149d0e653f4e1624ec0", "filename": "gcc/testsuite/g++.old-deja/g++.jason/template31.C", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Ftemplate31.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Ftemplate31.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Ftemplate31.C?ref=a5434cb77933099c87b31153e543bf55cee6298b", "patch": "@@ -1,6 +1,6 @@\n // PRMS Id: 8569\n \n-#include <iostream.h>\n+#include <iostream>\n #include <vector>\n \n using std::vector;\n@@ -33,10 +33,15 @@ private:\n int main(int argc, char**argv)   {\n     IncludeIt foo;\n     IncludeIt* bar;\n-    exit(0);\n+    std::exit(0);\n }\n \n template class std::__malloc_alloc_template<0>;\n #ifndef __USE_MALLOC\n template class std::__default_alloc_template<false, 0>;\n #endif\n+\n+\n+\n+\n+"}, {"sha": "0f44cb75ed18a978819a22da131d028b22a71d50", "filename": "gcc/testsuite/g++.old-deja/g++.jason/typeid1.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Ftypeid1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Ftypeid1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Ftypeid1.C?ref=a5434cb77933099c87b31153e543bf55cee6298b", "patch": "@@ -1,11 +1,11 @@\n #include <typeinfo>\n-#include <iostream.h>\n+#include <iostream>\n \n struct foo { double f(int); };\n \n int main() {\n   double f (int);\n   const std::type_info &r = typeid (f);\n-  cout << typeid(f).name() << endl;\n-  cout << typeid(foo::f).name() << endl;\n+  std::cout << typeid(f).name() << std::endl;\n+  std::cout << typeid(foo::f).name() << std::endl;\n }"}, {"sha": "e017ea0e12a0a82723c615400d9c3daf91e4da5e", "filename": "gcc/testsuite/g++.old-deja/g++.law/arg1.C", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Farg1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Farg1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Farg1.C?ref=a5434cb77933099c87b31153e543bf55cee6298b", "patch": "@@ -5,18 +5,18 @@\n // From: kondo@akane.mech.ibaraki.ac.jp\n // Date: Fri, 04 Sep 92 17:41:05 JST\n \n-#include <iostream.h>\n+#include <iostream>\n //  check the order of declarations\n class A {\n public:\n-      void f(double* p) { cout << \"A(double*)\\n\"; } // ERROR - candidate\n-      void f(int* p) { cout << \"A(int*)\\n\"; } // ERROR - candidate\n+      void f(double* p) { std::cout << \"A(double*)\\n\"; } // ERROR - candidate\n+      void f(int* p) { std::cout << \"A(int*)\\n\"; } // ERROR - candidate\n };\n \n class B {\n public:\n-      void f(int* p) { cout << \"B(int*)\\n\"; } // ERROR - candidate\n-      void f(double* p) { cout << \"B(double*)\\n\"; } // ERROR - candidate\n+      void f(int* p) { std::cout << \"B(int*)\\n\"; } // ERROR - candidate\n+      void f(double* p) { std::cout << \"B(double*)\\n\"; } // ERROR - candidate\n };\n \n int main()\n@@ -27,3 +27,4 @@ int main()\n     a.f(0);// ERROR - .*\n     b.f(0);// ERROR - .*\n }\n+"}, {"sha": "5f7360d5e495e0f83b1aaefced1b7587ab008292", "filename": "gcc/testsuite/g++.old-deja/g++.law/arg8.C", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Farg8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Farg8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Farg8.C?ref=a5434cb77933099c87b31153e543bf55cee6298b", "patch": "@@ -6,22 +6,22 @@\n // Date: Thu, 8 Jul 93 11:47:28 MDT\n \n \n-#include <iostream.h>\n-#include <stdio.h>\n+#include <iostream>\n+#include <cstdio>\n \n // With this declaration the program will not link.\n-template <class Type> ostream & save(ostream & os, Type T);\n+template <class Type> std::ostream & save(std::ostream & os, Type T);\n \n-   template <class Type> ostream &\n-save(ostream & os, Type T) {\n+   template <class Type> std::ostream &\n+save(std::ostream & os, Type T) {\n    return os << T;\n }  // save\n \n    int\n main() {\n    int i = 10;\n-   save((ostream &)cout, i) << endl;\n+   save((std::ostream &)std::cout, i) << std::endl;\n    short int s = 5;\n-   save((ostream &)cout, s) << endl;\n-   printf (\"PASS\\n\");\n+   save((std::ostream &)std::cout, s) << std::endl;\n+   std::printf (\"PASS\\n\");\n }  // main"}, {"sha": "49d39d5a4dbd15d2c56ebaabd76d124f7e63f773", "filename": "gcc/testsuite/g++.old-deja/g++.law/arm12.C", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Farm12.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Farm12.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Farm12.C?ref=a5434cb77933099c87b31153e543bf55cee6298b", "patch": "@@ -5,7 +5,7 @@\n // Subject: Bad access control with private constructor and derivation\n // Date: Fri, 28 May 1993 12:39:57 -0400 (EDT)\n \n-#include <iostream.h>\n+#include <iostream>\n \n class X\n {\n@@ -24,17 +24,17 @@ public:\n \n X::X()\n {// ERROR - .*\n-  cout << \"X::X()\" << endl;\n+  std::cout << \"X::X()\" << std::endl;\n }\n \n void X::f()\n {\n-  cout << \"X::f()\" << endl;\n+  std::cout << \"X::f()\" << std::endl;\n }\n \n Y::Y()\n {// ERROR -  within this\n-  cout << \"Y::Y()\" << endl;\n+  std::cout << \"Y::Y()\" << std::endl;\n }\n \n \n@@ -45,3 +45,5 @@ int main()\n }\n \n \n+\n+"}, {"sha": "7e79fdcdc56c9773ebe35430a336005ce4017151", "filename": "gcc/testsuite/g++.old-deja/g++.law/arm9.C", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Farm9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Farm9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Farm9.C?ref=a5434cb77933099c87b31153e543bf55cee6298b", "patch": "@@ -1,6 +1,6 @@\n // Build don't link: \n // GROUPS passed ARM-compliance\n-#include        <iostream.h>\n+#include        <iostream>\n enum f1 {\n      F1\n };\n@@ -13,13 +13,13 @@ class A {\n public:\n     void set (f1 f);\n };\n-void A::set (f1 f) { cout << \"called A f1\\n\";}\n+void A::set (f1 f) { std::cout << \"called A f1\\n\";}\n \n class B : public A {\n public:\n     void set (f2 f);\n };\n-void B::set (f2 f) { cout << \"called B\\n\";} // ERROR - candidate\n+void B::set (f2 f) { std::cout << \"called B\\n\";} // ERROR - candidate\n \n int main() {\n     B b;\n@@ -31,3 +31,8 @@ int main() {\n                // belong to different scopes.  Thus B::set() should have\n                // hidden (completely) the A::set() function.\n }\n+\n+\n+\n+\n+"}, {"sha": "05b3033b1cf629bdfcaae2b1afeb954213e7c6cd", "filename": "gcc/testsuite/g++.old-deja/g++.law/bad-error7.C", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fbad-error7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fbad-error7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fbad-error7.C?ref=a5434cb77933099c87b31153e543bf55cee6298b", "patch": "@@ -1,6 +1,6 @@\n // Build don't link: \n // GROUPS passed bad-errors\n-#include <iostream.h>\n+#include <iostream>\n \n class ParX\n         {\n@@ -11,7 +11,7 @@ class ParX\n class X : public ParX\n         {\n         public:\n-                void fn2() { cout << \"hi\" << endl; }\n+                void fn2() { std::cout << \"hi\" << std::endl; }\n         };\n \n int main()\n@@ -22,3 +22,9 @@ int main()\n \n         (pParX->*p)();\n         }\n+\n+\n+\n+\n+\n+"}, {"sha": "188eaac4c16843abe4e63aadafeeb936257accbc", "filename": "gcc/testsuite/g++.old-deja/g++.law/code-gen5.C", "status": "modified", "additions": 18, "deletions": 15, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fcode-gen5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fcode-gen5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fcode-gen5.C?ref=a5434cb77933099c87b31153e543bf55cee6298b", "patch": "@@ -5,12 +5,12 @@\n // Subject:  An error!\n // Message-ID: <9311160259.AA03353@pi14.arc.umn.edu>\n \n-#include <stdlib.h>\n-#include <stdio.h>\n-#include <assert.h>\n-#include <fstream.h>\n-#include <iostream.h>\n-#include <math.h>\n+#include <cstdlib>\n+#include <cstdio>\n+#include <cassert>\n+#include <fstream>\n+#include <iostream>\n+#include <cmath>\n \n #define ANSI_C\n \n@@ -79,7 +79,7 @@ class Vector\n \n \tdouble assign( int, double );\n \n-\tfriend ostream& operator<<( ostream&, const Vector& m );\n+\tfriend std::ostream& operator<<(std::ostream&, const Vector& m );\n \t\n \tprivate:\n \n@@ -162,10 +162,10 @@ assign( int rownum, double d )\n \tassert(r);\n \n \tif( rownum > row() || rownum <= 0 ) {\n-\t\tcerr << \"Warning: trying to assign out of bounds\" << endl;\n-\t\tcerr << \"row \" << rownum << endl;\n-\t\tcerr << \"Vector size \" << row() << endl;\n-\t\tabort();\n+\t  std::cerr << \"Warning: trying to assign out of bounds\" << std::endl;\n+\t  std::cerr << \"row \" << rownum << std::endl;\n+\t  std::cerr << \"Vector size \" << row() << std::endl;\n+\t  std::abort();\n \t}\n \n \tif( r->count == 1 ) {\n@@ -232,8 +232,9 @@ VecElem( Vector &vec, int r )\n \t: v(vec), row(r)\n {\n \tif( r < 1 || r > vec.row() ) {\n-\t\tcerr << \"Trying to access vector element out of bounds\" << endl;\n-\t\tabort();\n+\t  std::cerr << \"Trying to access vector element out of bounds\";\n+\t  std::cerr << std::endl;\n+\t  std::abort();\n \t}\n }\n \n@@ -268,9 +269,9 @@ int main()\n \tint i, j;\n \n \tif (makeforms (cen,a,b) != 10)\n-\t  { printf (\"FAIL\\n\"); return 1; }\n+\t  { std::printf (\"FAIL\\n\"); return 1; }\n \telse\n-\t  printf (\"PASS\\n\");\n+\t  std::printf (\"PASS\\n\");\n \n \n }\n@@ -281,3 +282,5 @@ makeforms( Vector cen, Vector **a, Vector **b)\n \treturn 10;\n }\n \n+\n+"}, {"sha": "3a5f3c7a6b317575f7377a54a1bd3d3a5f00758a", "filename": "gcc/testsuite/g++.old-deja/g++.law/ctors10.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fctors10.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fctors10.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fctors10.C?ref=a5434cb77933099c87b31153e543bf55cee6298b", "patch": "@@ -6,14 +6,14 @@\n // Subject: bug019.cc\n // Date: Fri, 5 Feb 93 15:51:42 -0800\n \n-#include <iostream.h>\n+#include <iostream>\n \n class Class\n {\n-        class Err : public ostream\n+        class Err : public std::ostream\n         {\n         public:\n-                Err(void) : ostream(NULL) { }\n+                Err(void) : std::ostream(NULL) { }\n                 ~Err(void) { }\n         };\n public:"}, {"sha": "0d81ced4455651c5ff1fc4131b5a953a5230c30d", "filename": "gcc/testsuite/g++.old-deja/g++.law/ctors12.C", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fctors12.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fctors12.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fctors12.C?ref=a5434cb77933099c87b31153e543bf55cee6298b", "patch": "@@ -1,7 +1,7 @@\n // GROUPS passed constructors\n-#include <stdio.h>\n-#include <stdlib.h>\n-#include <iostream.h>\n+#include <cstdio>\n+#include <cstdlib>\n+#include <iostream>\n \n #define MAGIC 7654\n \n@@ -14,9 +14,9 @@ public:\n         complex() { re=im=0; magic=MAGIC; }\n         complex(double d) { re=d; im=0; magic=MAGIC; }\n         complex(double d, double d2) {re=d; im=d2; magic=MAGIC; }\n-        ~complex() {if(magic!=MAGIC) {printf(\"FAIL\\n\");exit(1);}}\n-        friend ostream& operator << (ostream& o, const complex& c)\n-                { return o << \"(\" << c.re << \",\" << c.im << \")\"; }\n+        ~complex() {if(magic!=MAGIC) {std::printf(\"FAIL\\n\"); std::exit(1);}}\n+        friend std::ostream& operator << (std::ostream& o, const complex& c)\n+        { return o << \"(\" << c.re << \",\" << c.im << \")\"; }\n };\n \n int complex::count=0;\n@@ -27,7 +27,7 @@ int main()\n         int i;                                           // page 289\n \n         for(i=0; i<6; i++) ;\n-\tprintf (\"PASS\\n\");\n+\tstd::printf (\"PASS\\n\");\n \n         return 0;\n }"}, {"sha": "1442b02eb56d23a5826c87e001db709b8c2136d7", "filename": "gcc/testsuite/g++.old-deja/g++.law/ctors13.C", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fctors13.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fctors13.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fctors13.C?ref=a5434cb77933099c87b31153e543bf55cee6298b", "patch": "@@ -1,6 +1,6 @@\n // Build don't link: \n // GROUPS passed constructors\n-#include <iostream.h>\n+#include <iostream>\n \n class A {\n    A() {}    // private constructor// ERROR - .*\n@@ -9,8 +9,10 @@ class A {\n int main() {\n   A* a = new A();// ERROR - .*\n   if (a) {\n-     cout << \"a != NULL\\n\";\n+     std::cout << \"a != NULL\\n\";\n   } else {\n-     cout << \"a == NULL\\n\";\n+     std::cout << \"a == NULL\\n\";\n   }\n }\n+\n+"}, {"sha": "5fe1724df78f9a9ceddb1b56fc0d7604684b85e0", "filename": "gcc/testsuite/g++.old-deja/g++.law/ctors17.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fctors17.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fctors17.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fctors17.C?ref=a5434cb77933099c87b31153e543bf55cee6298b", "patch": "@@ -7,9 +7,9 @@\n // Date: Tue, 15 Jun 1993 18:34:14 +0200 (MET DST)\n \n \n-#include <fstream.h>\n+#include <fstream>\n \n-class X : public ifstream { // ERROR - candidate\n+class X : public std::ifstream { // ERROR - candidate\n     public:\n       X(int a, char *b) {} // ERROR - candidate\n };"}, {"sha": "b2d0a197d51afe45b67a37e609495e7164f606bf", "filename": "gcc/testsuite/g++.old-deja/g++.law/ctors6.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fctors6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fctors6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fctors6.C?ref=a5434cb77933099c87b31153e543bf55cee6298b", "patch": "@@ -1,15 +1,15 @@\n // Build don't link: \n // GROUPS passed constructors\n-#include <complex.h>\n+#include <complex>\n \n-double foo(double_complex *a)\n+double foo(std::complex<double> *a)\n {\n   return 0.0;\n }\n \n \n double bar(void)\n {\n-  double_complex v[10];\n+  std::complex<double> v[10];\n   return foo(v);\n }"}, {"sha": "2d75c4c31061e6ba41612c33b6d87042026c3f9e", "filename": "gcc/testsuite/g++.old-deja/g++.law/cvt16.C", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fcvt16.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fcvt16.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fcvt16.C?ref=a5434cb77933099c87b31153e543bf55cee6298b", "patch": "@@ -6,7 +6,7 @@\n // Subject: g++ bug\n // Date: Mon, 12 Apr 93 10:47:01 MDT\n \n-#include <iostream.h>\n+#include <iostream>\n \n class B {\n };\n@@ -22,8 +22,9 @@ public:\n main() {\n    A a(37);\n    //cout << a << endl;\n-   cout << (short)a << endl;\n+   std::cout << (short)a << std::endl;\n \n    return 0;\n }  // main\n \n+"}, {"sha": "b7439f5d52107ddfc1a8a805f31540c50c4455b5", "filename": "gcc/testsuite/g++.old-deja/g++.law/cvt2.C", "status": "modified", "additions": 10, "deletions": 11, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fcvt2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fcvt2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fcvt2.C?ref=a5434cb77933099c87b31153e543bf55cee6298b", "patch": "@@ -1,9 +1,9 @@\n // GROUPS passed conversions\n-#include <stdio.h>\n-#include <stdlib.h>\n-#include <string.h>\n-#include <iostream.h>\n-#include <fstream.h>\n+#include <cstdio>\n+#include <cstdlib>\n+#include <cstring>\n+#include <iostream>\n+#include <fstream>\n \n class cvec {\n public:\n@@ -25,18 +25,17 @@ void\n A(const char* s)\n {\n         // s still ok here\n-        ifstream inf(s);\n-\tif (strncmp (\"aaa\", s, 3))\n+        std::ifstream inf(s);\n+\tif (std::strncmp (\"aaa\", s, 3))\n \t  {\n-\t    printf (\"FAIL\\n\");\n-\t    exit (1);\n+\t    std::printf (\"FAIL\\n\");\n+\t    std::exit (1);\n \t  }\n \telse\n-\t  printf (\"PASS\\n\");\n+\t  std::printf (\"PASS\\n\");\n }\n \n int main()\n {\n         A(B(\"aaa\"));\n }\n-"}, {"sha": "7529bc24bbc9be28039fb53bf5ce03a1f9bd1adc", "filename": "gcc/testsuite/g++.old-deja/g++.law/cvt7.C", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fcvt7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fcvt7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fcvt7.C?ref=a5434cb77933099c87b31153e543bf55cee6298b", "patch": "@@ -5,8 +5,7 @@\n // Message-Id: <9208250205.AA26351@icsib43.ICSI.Berkeley.EDU>\n // Subject: implicit int. convs. from member refs. in switch expressions\n \n-#include <stream.h>\n-#include <stdio.h>\n+#include <cstdio>\n \n class A\n {\n@@ -58,10 +57,10 @@ int main()\n     switch (ar2)\n     {\n     case 1:\n-\tprintf (\"PASS\\n\");\n+\tstd::printf (\"PASS\\n\");\n         break;\n     default:\n-\t{ printf (\"FAIL\\n\"); return 1; }\n+\t{ std::printf (\"FAIL\\n\"); return 1; }\n     }\n \n     B b(a);\n@@ -72,3 +71,10 @@ int main()\n \n     return 0;\n }\n+\n+\n+\n+\n+\n+\n+"}, {"sha": "18174e7fcf5ad9d55075b4329259dd9fee325391", "filename": "gcc/testsuite/g++.old-deja/g++.law/except5.C", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fexcept5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fexcept5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fexcept5.C?ref=a5434cb77933099c87b31153e543bf55cee6298b", "patch": "@@ -7,7 +7,8 @@\n // Subject: exception's bug?\n // Date: Wed, 10 Nov 1993 11:07:12 -0500\n \n-#include <stream.h>\n+#include <iostream>\n+\n class X {\n         int     *a;\n         int     sz;\n@@ -33,7 +34,7 @@ main()\n                 for (int i = 0; i < 12; i++)\n                         c[i] = 1;\n         } catch (X::range) {\n-                cerr << \"invalid range\\n\";\n+                std::cerr << \"invalid range\\n\";\n         }\n         return 0;\n }"}, {"sha": "2fc1ddf532689e1e244267209707865766fe3495", "filename": "gcc/testsuite/g++.old-deja/g++.law/missed-error2.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fmissed-error2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fmissed-error2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fmissed-error2.C?ref=a5434cb77933099c87b31153e543bf55cee6298b", "patch": "@@ -6,7 +6,7 @@\n // Subject:  More on [g++ 2.1 : overloaded function selection incorrect]\n // Message-ID: <9205212240.AA17934@ndc.com>\n \n-#include <iostream.h>\n+#include <iostream>\n \n inline int max(int a, int b) {return a > b ? a : b;}; // ERROR - candidate\n inline double max(double a, double b) {return a > b ? a : b;}; // ERROR - candidate\n@@ -21,8 +21,8 @@ int main() {\n // about the declaration above\n static void foo(int i, int j, double x, double y) { \n \n-   cout << \"Max(int): \" << max(i,j) << \" Max(double): \" <<\n+   std::cout << \"Max(int): \" << max(i,j) << \" Max(double): \" <<\n max(x,y) << '\\n';\n-   cout << \"Max(int, double): \" << max(i, y) << '\\n';// ERROR - \n+   std::cout << \"Max(int, double): \" << max(i, y) << '\\n';// ERROR - \n }\n "}, {"sha": "d390bc485825c29103c18a3e8d278305f2c42747", "filename": "gcc/testsuite/g++.old-deja/g++.law/nest3.C", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fnest3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fnest3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fnest3.C?ref=a5434cb77933099c87b31153e543bf55cee6298b", "patch": "@@ -1,15 +1,15 @@\n // Build don't link: \n // GROUPS passed nest\n-#include <iostream.h>\n+#include <iostream>\n \n struct inner {\n-  static void f() { cout << \"inner::f()\\n\";}\n+  static void f() { std::cout << \"inner::f()\\n\";}\n };\n \n struct outer {\n \n   struct inner {\n-    static void f() { cout << \"outer::inner::f()\\n\";}\n+    static void f() { std::cout << \"outer::inner::f()\\n\";}\n   };\n \n   static void f() {\n@@ -20,6 +20,6 @@ struct outer {\n \n int main() {\n   outer::f();\n-  cout << endl;\n+  std::cout << std::endl;\n   return 0;\n }"}, {"sha": "daebcefd33904d5edb44568dd59735c84bcbec2b", "filename": "gcc/testsuite/g++.old-deja/g++.law/operators32.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Foperators32.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Foperators32.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Foperators32.C?ref=a5434cb77933099c87b31153e543bf55cee6298b", "patch": "@@ -1,6 +1,6 @@\n // Build don't link: \n // GROUPS passed operators\n-#include <iostream.h>\n+#include <iostream>\n \n //\n // frees space allocated for N-D array\n@@ -43,9 +43,9 @@ long d1 = 3, d2 = 4;\n class foo\n {\n public:\n-foo() {cout << \"foo created\" << endl; }\n+foo() {std::cout << \"foo created\" << std::endl; }\n \n-~foo() {cout << \"foo deleted\" << endl; }\n+~foo() {std::cout << \"foo deleted\" << std::endl; }\n };\n \n foo **f2;"}, {"sha": "a013c72901b9523f26ac6197ef7185e8210823e2", "filename": "gcc/testsuite/g++.old-deja/g++.law/vbase1.C", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fvbase1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fvbase1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fvbase1.C?ref=a5434cb77933099c87b31153e543bf55cee6298b", "patch": "@@ -7,11 +7,11 @@\n // Message-ID: <317f1j$o9c@agate.berkeley.edu>\n \n \n-#include <iostream.h>\n+#include <iostream>\n \n class a {\n protected:\n-\tvirtual void foo() { cout << \"Class A\\n\";}\n+\tvirtual void foo() { std::cout << \"Class A\\n\";}\n };\n \n class b : public virtual a {};\n@@ -26,3 +26,4 @@ int main() {\n \ttest.bar();\n }\n \n+"}, {"sha": "8c30b7689a4afb96eb4a20ae30234b183c83660d", "filename": "gcc/testsuite/g++.old-deja/g++.law/virtual3.C", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fvirtual3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fvirtual3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fvirtual3.C?ref=a5434cb77933099c87b31153e543bf55cee6298b", "patch": "@@ -5,12 +5,12 @@\n // Date: 4 Nov 1993 22:57:36 -0500\n // Message-ID: <9311041820.AA05942@ramjet.multinet.DE>\n \n-#include <iostream.h>\n-#include <strstream.h>\n+#include <iostream>\n+#include <sstream>\n \n using namespace std;\n \n-class BugStream : public ostrstream {\n+class BugStream : public ostringstream {\n public:\n     BugStream() {}\n     BugStream& eval();\n@@ -26,12 +26,12 @@ BugStream& BugStream::eval()\n    *this << ends;\n    \n    // eval the command and set the status\n-   char* s = str();\n+   const char* s = str().data();\n    cerr << s << endl;\n    \n    // reset the stream for the next command    \n    clear(ios::goodbit);\n-   rdbuf()->freeze(0);\n+   //   rdbuf()->freeze(0);\n    seekp(0);\n    \n    return *this;"}, {"sha": "736c11ab8ad4d765114cd6002894af84793c4bff", "filename": "gcc/testsuite/g++.old-deja/g++.law/visibility1.C", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fvisibility1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fvisibility1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fvisibility1.C?ref=a5434cb77933099c87b31153e543bf55cee6298b", "patch": "@@ -1,24 +1,24 @@\n // Build don't link: \n // GROUPS passed visibility\n-#include <iostream.h>\n+#include <iostream>\n \n \n \n class base {\n //==========\n \n     void base_priv(char * n) \t\t\n-\t{ cout << \"base_priv called from: \" << n << \"\\n\";  };\n+\t{ std::cout << \"base_priv called from: \" << n << \"\\n\";  };\n \n protected:\n \n     void base_prot(char * n) \n-\t{ cout << \"base_prot called from: \" << n << \"\\n\"; };\n+\t{ std::cout << \"base_prot called from: \" << n << \"\\n\"; };\n \n public:\n \n     void base_publ(char * n) \n-\t{ cout << \"base_publ called from: \" << n << \"\\n\"; };\n+\t{ std::cout << \"base_publ called from: \" << n << \"\\n\"; };\n \n     void test(char * n) { base_publ(n); base_prot(n); base_priv(n); }\n \n@@ -57,12 +57,12 @@ int main(int argc, char *argv[])\n     base b;\n     b.base_publ(\"base class object\");\n     b.test(\"member of base class object\");\n-    cout << \"\\n\";\n+    std::cout << \"\\n\";\n \n     derived pd;\n     pd.test(\"member of derived class object\");\n     derived_friend();\n-    cout << \"\\n\";\n+    std::cout << \"\\n\";\n \n } /* main */\n "}, {"sha": "7f68af05b246b62f9b8b756f472de03e73ad19c1", "filename": "gcc/testsuite/g++.old-deja/g++.law/visibility10.C", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fvisibility10.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fvisibility10.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fvisibility10.C?ref=a5434cb77933099c87b31153e543bf55cee6298b", "patch": "@@ -1,12 +1,12 @@\n // Build don't link: \n // GROUPS passed visibility\n \n-#include <iostream.h>\n+#include <iostream>\n \n class base {\n public:\n-  void f1 () { cout << \"f1\" << endl; };\n-  void f2 () { cout << \"f2\" << endl; };\n+  void f1 () { std::cout << \"f1\" << std::endl; };\n+  void f2 () { std::cout << \"f2\" << std::endl; };\n };\n \n class deriv : public base {\n@@ -19,3 +19,4 @@ int main ()\n \n   d.f2();\n }\n+"}, {"sha": "dbde720d2762301b19a14bf92dc0948f49d09e45", "filename": "gcc/testsuite/g++.old-deja/g++.law/visibility13.C", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fvisibility13.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fvisibility13.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fvisibility13.C?ref=a5434cb77933099c87b31153e543bf55cee6298b", "patch": "@@ -6,11 +6,13 @@\n // Subject:  class, template and their scoping problem\n // Message-ID: <9307130521.AA18312@oahu.cs.ucla.edu>\n \n-#include <iostream.h>\n-#include <assert.h>\n+#include <iostream>\n+#include <cassert>\n \n //     ---------------   Array.h  &&  Array.cc   ------------------\n \n+using namespace std;\n+\n const int ArraySize = 12;\n \n template <class Type>"}, {"sha": "2aa08a09169edf34bf631299c00c8c48299ad2e2", "filename": "gcc/testsuite/g++.old-deja/g++.law/visibility17.C", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fvisibility17.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fvisibility17.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fvisibility17.C?ref=a5434cb77933099c87b31153e543bf55cee6298b", "patch": "@@ -5,8 +5,8 @@\n // Date:     Thu, 05 Aug 1993 17:23:20 -0700\n // Subject:  Access to private constructor.\n // Message-ID: <9308060023.AA10283@neptune.caere.com>\n-#include <iostream.h>\n-#include <string.h>\n+#include <iostream>\n+#include <cstring>\n \n class Base\n {\n@@ -33,13 +33,13 @@ private:\n \n Base::Base()\n { // ERROR - private\n-  name_ = strcpy(new char[strlen(\" \") + 1], \" \");\n+  name_ = std::strcpy(new char[std::strlen(\" \") + 1], \" \");\n }\n \n Base::Base(char* str)\n { // ERROR - private\n   if(str != NULL)\n-    name_ = strcpy(new char[strlen(str) + 1], str);\n+    name_ = std::strcpy(new char[std::strlen(str) + 1], str);\n }\n \n Derived::Derived(int n, char* str) : Base(str)\n@@ -59,6 +59,8 @@ int main()\n   // Derived* d = new Derived(10, \"test\");\n   Derived* d = new Derived(10);\n \n-  cerr << d->getNum() << \"\\t\" << d->getName() << endl;\n+  std::cerr << d->getNum() << \"\\t\" << d->getName() << std::endl;\n }\n \n+\n+"}, {"sha": "9d038d468912af20650b54cc97276586d14eec9e", "filename": "gcc/testsuite/g++.old-deja/g++.law/visibility2.C", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fvisibility2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fvisibility2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fvisibility2.C?ref=a5434cb77933099c87b31153e543bf55cee6298b", "patch": "@@ -1,24 +1,24 @@\n // Build don't link: \n // GROUPS passed visibility\n-#include <iostream.h>\n+#include <iostream>\n \n \n \n class base {\n //==========\n \n     void base_priv(char * n) \t\t\n-\t{ cout << \"base_priv called from: \" << n << \"\\n\";  };\n+\t{ std::cout << \"base_priv called from: \" << n << \"\\n\";  };\n \n protected:\n \n     void base_prot(char * n) \n-\t{ cout << \"base_prot called from: \" << n << \"\\n\"; };\n+\t{ std::cout << \"base_prot called from: \" << n << \"\\n\"; };\n \n public:\n \n     void base_publ(char * n) \n-\t{ cout << \"base_publ called from: \" << n << \"\\n\"; };\n+\t{ std::cout << \"base_publ called from: \" << n << \"\\n\"; };\n \n     void test(char * n) { base_publ(n); base_prot(n); base_priv(n); }\n \n@@ -57,12 +57,12 @@ int main(int argc, char *argv[])\n     base b;\n     b.base_publ(\"base class object\");\n     b.test(\"member of base class object\");\n-    cout << \"\\n\";\n+    std::cout << \"\\n\";\n \n     derived pd;\n     pd.test(\"member of derived class object\");\n     derived_friend();\n-    cout << \"\\n\";\n+    std::cout << \"\\n\";\n \n } /* main */\n "}, {"sha": "a03421ab6c9e33b347d1a62a529880d68731dbcb", "filename": "gcc/testsuite/g++.old-deja/g++.law/visibility22.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fvisibility22.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fvisibility22.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fvisibility22.C?ref=a5434cb77933099c87b31153e543bf55cee6298b", "patch": "@@ -7,7 +7,7 @@\n // Message-ID: <9308121348.aa26256@Paris.ics.uci.edu>\n \n // 5.cc\n-#include <stream.h>\n+#include <iostream>\n \n class A {\n         int x;"}, {"sha": "56a7df60f186b121f8f4247522ddc33728214016", "filename": "gcc/testsuite/g++.old-deja/g++.law/visibility25.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fvisibility25.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fvisibility25.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fvisibility25.C?ref=a5434cb77933099c87b31153e543bf55cee6298b", "patch": "@@ -5,7 +5,7 @@\n // Date:     Wed, 17 Nov 93 21:30:32 EST\n // Subject:  gcc 2.5.3 - can't privately inherit and contain same class\n // Message-ID: <9311171030.AA00604@mencon>\n-#include        <iostream.h>\n+#include        <iostream>\n \n class A {\n public:"}, {"sha": "ec7947c5503d2997f9117ead2769cf0de841871f", "filename": "gcc/testsuite/g++.old-deja/g++.law/visibility7.C", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fvisibility7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fvisibility7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fvisibility7.C?ref=a5434cb77933099c87b31153e543bf55cee6298b", "patch": "@@ -5,7 +5,7 @@\n // Date:     Wed, 21 Apr 93 09:42:07 +0100\n // Subject:  /*** BUG REPORT : THE MYTH OF PRIVATE INHERITANCE ***/\n // Message-ID: <9304210842.AA01815@life.ai.mit.edu>\n-#include <iostream.h>\n+#include <iostream>\n \n class A {\n  private:\n@@ -64,8 +64,10 @@ int main()\n   B* bobject = new B(2, 1);\n   C* cobject = new C(bobject);\n   cobject->setBValue(8);\n-  cout << cobject->getBValue() << endl;\n+  std::cout << cobject->getBValue() << std::endl;\n   delete bobject;\n   delete cobject;\n }\n \n+\n+"}, {"sha": "5937979f3012a89a11f8f54e939684cda98b39f9", "filename": "gcc/testsuite/g++.old-deja/g++.law/weak.C", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fweak.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fweak.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fweak.C?ref=a5434cb77933099c87b31153e543bf55cee6298b", "patch": "@@ -5,16 +5,16 @@\n \n // libc-5.4.xx has __IO_putc in its static C library, which can conflict\n // with the copy of __IO_putc in the libstdc++ library built by egcs.\n-#include <iostream.h>\n-#include <streambuf.h>\n-#include <stdio.h>\n+#include <iostream>\n+#include <streambuf>\n+#include <cstdio>\n \n-istream x (0);\n+std::istream x (0);\n \n main () {\n   x.get();\n-  putc(0, 0);\n-  fgets(0, 0, 0); \n+  std::putc(0, 0);\n+  std::fgets(0, 0, 0); \n   x.get((char*) 0, 0);\n }\n "}, {"sha": "c92afde4cd45a0d72d89178fa60157fb17bf9ca4", "filename": "gcc/testsuite/g++.old-deja/g++.mike/eh2.C", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Feh2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Feh2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Feh2.C?ref=a5434cb77933099c87b31153e543bf55cee6298b", "patch": "@@ -1,8 +1,8 @@\n // Special g++ Options: -fexceptions\n // excess errors test - XFAIL a29k-*-* sparc64-*-elf arm-*-pe\n \n-#include <stdlib.h>\n-#include <iostream.h>\n+#include <cstdlib>\n+#include <iostream>\n \n class Vector {\n private:\n@@ -57,9 +57,9 @@ f(Vector& v) {\n   try {\n     do_something( v );\n   } catch (Vector::Range& r) {\n-    cout << \"Invalid vector range \" << r.value()\n-      << \" caught in f()\" << endl;\n-    exit(0);\n+    std::cout << \"Invalid vector range \" << r.value()\n+      << \" caught in f()\" << std::endl;\n+    std::exit(0);\n   }\n }\n \n@@ -69,3 +69,6 @@ main() {\n   f( v );\n   return 1;\n }\n+\n+\n+"}, {"sha": "cc98cfae2fae8ee00b22c8aefdfbd74a65874db5", "filename": "gcc/testsuite/g++.old-deja/g++.mike/memoize1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fmemoize1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fmemoize1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fmemoize1.C?ref=a5434cb77933099c87b31153e543bf55cee6298b", "patch": "@@ -1,4 +1,4 @@\n // Build don't link:\n // Special g++ Options: -fsave-memoized\n \n-#include <iostream.h>\n+#include <iostream>"}, {"sha": "9cf550c126ed834b8ead7d13a4300185aaf00975", "filename": "gcc/testsuite/g++.old-deja/g++.mike/net34.C", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fnet34.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fnet34.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fnet34.C?ref=a5434cb77933099c87b31153e543bf55cee6298b", "patch": "@@ -1,6 +1,6 @@\n // Special g++ Options:\n \n-#include <iostream.h>\n+#include <iostream>\n \n class foo {\n public:\n@@ -25,14 +25,16 @@ class multiple : public bar_1, public bar_2 {\n public:\n         multiple(int i1, int i2) : bar_1(i1), bar_2(i2) {}\n         void print() {\n-                cout << \"bar_1::k -> \" << bar_1::k << \"\\n\";\n-                cout << \"bar_2::k -> \" << bar_2::k << \"\\n\";\n-                cout << \"bar_1::get_k() -> \" << bar_1::get_k() << \"\\n\";\n-                cout << \"bar_2::get_k() -> \" << bar_2::get_k() << \"\\n\";\n+                std::cout << \"bar_1::k -> \" << bar_1::k << \"\\n\";\n+                std::cout << \"bar_2::k -> \" << bar_2::k << \"\\n\";\n+                std::cout << \"bar_1::get_k() -> \" << bar_1::get_k() << \"\\n\";\n+                std::cout << \"bar_2::get_k() -> \" << bar_2::get_k() << \"\\n\";\n         }\n };\n \n int main() {\n         multiple m(1,2);\n         m.print();\n }\n+\n+"}, {"sha": "bacee852c85fdfffec29dda8d8b01009236d5855", "filename": "gcc/testsuite/g++.old-deja/g++.mike/net46.C", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fnet46.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fnet46.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fnet46.C?ref=a5434cb77933099c87b31153e543bf55cee6298b", "patch": "@@ -1,6 +1,6 @@\n-#include <iostream.h>\n-#include <stdlib.h>\n-#include <stddef.h>\n+#include <iostream>\n+#include <cstdlib>\n+#include <cstddef>\n #include <new>\n \n int fail = 1;\n@@ -14,7 +14,7 @@ void *operator new(size_t size) throw (std::bad_alloc) {\n }\n \n int main() {\n-  cout << \"\";\n+  std::cout << \"\";\n   in_main = 1;\n   new int;\n   return fail;"}, {"sha": "b9137fb8ca2fcf150c0fb5afe61d5aaffb8e2a7d", "filename": "gcc/testsuite/g++.old-deja/g++.mike/p658.C", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp658.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp658.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp658.C?ref=a5434cb77933099c87b31153e543bf55cee6298b", "patch": "@@ -1,7 +1,7 @@\n // prms-id: 658\n \n-#include <ostream.h>\n-#include <stdlib.h>\n+#include <iostream>\n+#include <cstdlib>\n \n /* We may not find the libg++ <bool.h>.  */\n #ifndef FALSE\n@@ -65,8 +65,8 @@ void\n Object::OK() const\n {\n     if (_destructed) {\n-\tcerr << \"FAILURE - reference was made to a destructed object\\n\";\n-\tabort();\n+\tstd::cerr << \"FAILURE - reference was made to a destructed object\\n\";\n+\tstd::abort();\n     }\n }\n \n@@ -98,3 +98,5 @@ Char::operator char () const\n {\n     return _c;\n }\n+\n+"}, {"sha": "3403abf09992052c0d58393340a96dfc80e76929", "filename": "gcc/testsuite/g++.old-deja/g++.mike/rtti1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Frtti1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Frtti1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Frtti1.C?ref=a5434cb77933099c87b31153e543bf55cee6298b", "patch": "@@ -1,4 +1,4 @@\n // Build don't link:\n \n #include <typeinfo>\n-#include <iostream.h>\n+#include <iostream>"}, {"sha": "c6eadaa3dd5621b6e4f7ec4b7316f27e6dea707c", "filename": "gcc/testsuite/g++.old-deja/g++.other/sibcall1.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fsibcall1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fsibcall1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fsibcall1.C?ref=a5434cb77933099c87b31153e543bf55cee6298b", "patch": "@@ -1,13 +1,13 @@\n // Special g++ Options: -O2\n \n-#include <iostream.h>\n+#include <iostream>\n \n-ostream& foo (char *x, ostream &y)\n+std::ostream& foo (char *x, std::ostream &y)\n {\n   return y << \"\" << x;\n }\n \n int main ()\n {\n-  foo (\"\", cout);\n+  foo (\"\", std::cout);\n }"}, {"sha": "7a7c56cd34f9a81ec803b9fc1622a5ffb072cc21", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/eb109.C", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb109.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb109.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb109.C?ref=a5434cb77933099c87b31153e543bf55cee6298b", "patch": "@@ -1,8 +1,10 @@\n #include<map>\n-#include<iostream.h>\n+#include<iostream>\n #include<vector>\n #include<string>\n \n+using namespace std;\n+\n // empty parameter class with a minimal set of operations\n // if there are no weights for edges necessary\n struct Empty"}, {"sha": "88d33b148d76a5e65e8c8a965a80c2ca538ab633", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/eb113.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb113.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb113.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb113.C?ref=a5434cb77933099c87b31153e543bf55cee6298b", "patch": "@@ -1,5 +1,5 @@\n // Build don't link: \n-#include <iostream.h>\n+#include <iostream>\n \n class X : public std::streambuf\n {"}, {"sha": "fc404d9ae3229245b688cbf9bbfa4e892a5e6c8e", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/eb115.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb115.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb115.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb115.C?ref=a5434cb77933099c87b31153e543bf55cee6298b", "patch": "@@ -1,9 +1,9 @@\n // Special g++ Options: -O\n \n-#include <iostream.h>\n+#include <iostream>\n #include <typeinfo>\n \n int main() {\n   int *i1, *i2;\n-  cerr << (typeid(i1)==typeid(i2)) << endl;\n+  std::cerr << (typeid(i1)==typeid(i2)) << std::endl;\n }"}, {"sha": "b191ac11717187276365811a00975a19b1d4406a", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/eb118.C", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb118.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb118.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb118.C?ref=a5434cb77933099c87b31153e543bf55cee6298b", "patch": "@@ -1,7 +1,7 @@\n // Test for obsolete specialization syntax.  Turn off -pedantic.\n // Special g++ Options:\n \n-#include <iostream.h>\n+#include <iostream>\n #include <typeinfo>\n \n template <typename T>\n@@ -13,7 +13,7 @@ public:\n template <typename T>\n void\n A<T>::test(){\n-  cerr << \"test for \" << typeid(*this).name() << endl;\n+  std::cerr << \"test for \" << typeid(*this).name() << std::endl;\n }\n // Specialization declaration\n void                           \n@@ -22,7 +22,7 @@ A<double>::test();\n // Specialization definition\n void\n A<double>::test(){\n-  cerr << \"specialization for \" << typeid(*this).name() << endl;\n+  std::cerr << \"specialization for \" << typeid(*this).name() << std::endl;\n }\n \n \n@@ -35,3 +35,4 @@ main(){\n   return 0;\n }\n \n+"}, {"sha": "f56f3137e64a06a27bedf7ea2391f57926049695", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/eb15.C", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb15.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb15.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb15.C?ref=a5434cb77933099c87b31153e543bf55cee6298b", "patch": "@@ -1,18 +1,18 @@\n // Build don't link:\n-#include<iostream.h>\n-#include<stddef.h>\n+#include<iostream>\n+#include<cstddef>\n \n struct A {\n   A() {\n-    cerr<<\"A constructing\\n\";\n+    std::cerr<<\"A constructing\\n\";\n     throw 1;\n   }\n   void *operator new(size_t sz) {\n-    cerr<<\"A allocated\\n\";\n+    std::cerr<<\"A allocated\\n\";\n     return ::operator new(sz);\n   }\n   void operator delete (void *p) {\n-    cerr<<\"A deleted\\n\";\n+    std::cerr<<\"A deleted\\n\";\n     ::operator delete (p);\n   }\n };\n@@ -23,3 +23,6 @@ int main() {\n   } catch (...) {\n   }\n }\n+\n+\n+"}, {"sha": "11b38cdc731bc8e19f321904a983fd0824a164c8", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/eb21.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb21.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb21.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb21.C?ref=a5434cb77933099c87b31153e543bf55cee6298b", "patch": "@@ -1,6 +1,6 @@\n #include <vector>\n \n-#include <strstream.h>\n+#include <sstream>\n \n using namespace std;\n \n@@ -16,7 +16,7 @@ std::vector<connection_t> connections;\n \n int\n main() {\n-  ostrstream str;\n+  ostringstream str;\n \n   connections.insert(connections.end(), connection_t());\n "}, {"sha": "7ea7b41205b4c44405d63622f9bbc9bf59b0e1a3", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/eb24.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb24.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb24.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb24.C?ref=a5434cb77933099c87b31153e543bf55cee6298b", "patch": "@@ -1,5 +1,5 @@\n // Build don't link:\n-#include <iostream.h>\n+#include <iostream>\n \n template < class T >\n class X\n@@ -19,5 +19,5 @@ class Y : public X<T>\n \n     using X<T>::x;\n \n-    void        f () { cout << x << endl; }\n+    void        f () { std::cout << x << std::endl; }\n };"}, {"sha": "ccf6027102a6c829e489ae6c1d5575e033586ac2", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/eb3.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb3.C?ref=a5434cb77933099c87b31153e543bf55cee6298b", "patch": "@@ -1,5 +1,5 @@\n // Build don't link:\n-#include <complex.h>\n+#include <complex>\n template<class T>\n class Vec {\n public:\n@@ -8,4 +8,4 @@ public:\n     void operator=(const Vec<T> &v) { data = new T; }\n     T *data;\n };\n-template class Vec<complex<double> >;\n+template class Vec<std::complex<double> >;"}, {"sha": "9814697b141cb3ff11ddcdd03bc50fa2fd453dba", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/eb30.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb30.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb30.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb30.C?ref=a5434cb77933099c87b31153e543bf55cee6298b", "patch": "@@ -1,7 +1,7 @@\n // Build don't link:\n-#include <fstream.h>\n+#include <fstream>\n \n-class bifstream : public ifstream {\n+class bifstream : public std::ifstream {\n public:\n     bifstream();\n //     ~bifstream();"}, {"sha": "33a12b89ac22435413adcca1c116197c926faa49", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/eb31.C", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb31.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb31.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb31.C?ref=a5434cb77933099c87b31153e543bf55cee6298b", "patch": "@@ -1,4 +1,4 @@\n-#include<iostream.h>\n+#include<iostream>\n \n int main() {\n   try {\n@@ -15,3 +15,5 @@ int main() {\n   }\n   return 0;\n }\n+\n+"}, {"sha": "9664f42e941b474261a38c2ecd57130b3f57abb9", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/eb33.C", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb33.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb33.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb33.C?ref=a5434cb77933099c87b31153e543bf55cee6298b", "patch": "@@ -1,11 +1,11 @@\n-#include <fstream.h>\n-#include <stdio.h>\n+#include <fstream>\n+#include <cstdio>\n \n int\n main()\n {\n-    printf(\"If you see this, you don't have a problem!\\n\");\n+    std::printf(\"If you see this, you don't have a problem!\\n\");\n #ifdef EXPOSE_BUG\n-    ifstream a;\n+    std::ifstream a;\n #endif\n }"}, {"sha": "f243facec8ac4a0868084aeb1e139051c1f800c4", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/eb39.C", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb39.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb39.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb39.C?ref=a5434cb77933099c87b31153e543bf55cee6298b", "patch": "@@ -1,10 +1,8 @@\n // Build don't link: \n-#include <ctype.h>\n-#include <iostream.h>\n-// #include <streambuf.h>\n-// #include <libio.h>\n-#include <strstream.h>\n-#include <string.h>\n+#include <cctype>\n+#include <iostream>\n+#include <sstream>\n+#include <cstring>\n \n using namespace std;\n \n@@ -13,7 +11,8 @@ extern bool foo2 (ostream &out, istream &in);\n bool\n foo1 (ostream &out, const char *in)\n {\n-  strstreambuf sb (in, (int) strlen (in));\n+  string tmp(in, strlen(in));\n+  stringbuf sb (tmp);\n   istream fmt (&sb);\n   return foo2 (out, fmt);\n }"}, {"sha": "69728967480f0f20dbf0910f9f0bc4568b854e81", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/eb4.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb4.C?ref=a5434cb77933099c87b31153e543bf55cee6298b", "patch": "@@ -1,6 +1,6 @@\n // Error: Internal Compiler Error in GCC 2.7.2 and EGCS 1998/05/28 snapshot.\n \n-#include <iostream.h>\n+#include <iostream>\n \n class some_base\n         {\n@@ -31,7 +31,7 @@ public:\n \n class some_derived::func(derived_func_args &a)  // ERROR - illegal member syntax\n         {\n-        cout << a.i << ' ' << a.f << endl;\n+        std::cout << a.i << ' ' << a.f << std::endl;\n         }\n \n int"}, {"sha": "1cc7509314afdd05d82ea78811b4d5bb6f68167a", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/eb41.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb41.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb41.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb41.C?ref=a5434cb77933099c87b31153e543bf55cee6298b", "patch": "@@ -1,8 +1,8 @@\n-#include <iostream.h>\n-#include <iterator.h>\n+#include <iostream>\n+#include <iterator>\n #include <string>\n \n-ostream_iterator<std::string> oo(cout);\n+std::ostream_iterator<std::string> oo(std::cout);\n \n int main()\n {"}, {"sha": "3604233741705fa9dc30f6d098d6c7b29f4171ba", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/eb44.C", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb44.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb44.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb44.C?ref=a5434cb77933099c87b31153e543bf55cee6298b", "patch": "@@ -4,9 +4,11 @@\n // Also, the template instantiation does not provide the missing\n // friend function, the non-template function does\n \n-#include <stdio.h>\n-#include <stdlib.h>\n-#include <iostream.h>\n+#include <cstdio>\n+#include <cstdlib>\n+#include <iostream>\n+\n+using namespace std;\n \n template <class T>\n class Vector"}, {"sha": "d4a9d65eb9a13f2a7092fd35bacb34373dbe07f6", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/eb46.C", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb46.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb46.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb46.C?ref=a5434cb77933099c87b31153e543bf55cee6298b", "patch": "@@ -1,4 +1,4 @@\n-#include <iostream.h>\n+#include <iostream>\n \n class A1 {\n         friend class B;\n@@ -22,6 +22,9 @@ int main()\n         A1* a=new A3;\n         B b(a);\n \n-        if (b.itsA) cout << \"cast ok\" << endl; else cout << \"cast failed\" << endl;\n+        if (b.itsA) \n+\t  std::cout << \"cast ok\" << std::endl; \n+\telse \n+\t  std::cout << \"cast failed\" << std::endl;\n         return 0;\n }"}, {"sha": "b8ac4035e6836fe1b5869f708247815f98557ebd", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/eb54.C", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb54.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb54.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb54.C?ref=a5434cb77933099c87b31153e543bf55cee6298b", "patch": "@@ -1,8 +1,9 @@\n-#include <iomanip.h>\n-#include <stdlib.h>\n+#include <iomanip>\n+#include <iostream>\n+#include <cstdlib>\n \n int main()\n {\n-\tcout << setbase(3) << endl;\n-\texit (0);\n+  std::cout << std::setbase(3) << std::endl;\n+  std::exit (0);\n }"}, {"sha": "0ab10d5d424bb4eb6957274c5ca7882b4e38b778", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/eb55.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb55.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb55.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb55.C?ref=a5434cb77933099c87b31153e543bf55cee6298b", "patch": "@@ -2,11 +2,11 @@\n // Since the constructor is in streambuf.h, additional diagnostics are\n // produced, which are not really supported in the old-deja framework\n \n-#include <strstream.h>\n+#include <sstream>\n \n void\n t( char* buf )\n {\n-  istrstream str = buf;  //ERROR - inaccessible copy constructor\n+  std::istrstream str = buf;  //ERROR - inaccessible copy constructor\n }\n "}, {"sha": "00ef6b0b62b84de032e77c738f29b1d627556b9b", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/eb66.C", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb66.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb66.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb66.C?ref=a5434cb77933099c87b31153e543bf55cee6298b", "patch": "@@ -1,5 +1,5 @@\n-#include <assert.h>\n-#include <iostream.h>\n+#include <cassert>\n+#include <iostream>\n \n int bar ()\n {\n@@ -17,6 +17,10 @@ int main ()\n     {\n     }\n \n-//  cout << \"i = \" << i << endl;\n+//  std::cout << \"i = \" << i << std::endl;\n   assert (i == 0) ; \n }\n+\n+\n+\n+"}, {"sha": "622d3ec9d3f12efe91770a9ce18e0a76b4206c94", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/eb73.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb73.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb73.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb73.C?ref=a5434cb77933099c87b31153e543bf55cee6298b", "patch": "@@ -1,7 +1,7 @@\n // Special g++ Options: -O -Wall\n // Depletes VM.\n \n-#include <iostream.h>\n+#include <iostream>\n #include <list>\n #include <algorithm>\n using namespace std;"}, {"sha": "3db45cc80079bc5e7a80c00f4c7eeeec9198b1e4", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/eb77.C", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb77.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb77.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb77.C?ref=a5434cb77933099c87b31153e543bf55cee6298b", "patch": "@@ -1,15 +1,15 @@\n-#include <stream.h>\n-#include <strstream.h>\n+#include <iostream>\n+#include <sstream>\n \n using namespace std;\n \n int\n main(int, char* [])\n {\n-  strstream s;\n+  stringstream s;\n \n   s << \"line 1\\nline 2\\n\\nline 4\";\n-  s << ends;\n+  s << std::ends;\n \n   int nLine = 0;\n \n@@ -22,7 +22,7 @@ main(int, char* [])\n     }\n \n     ++nLine;\n-    cout << nLine << \": \" << line << endl;\n+    std::cout << nLine << \": \" << line << std::endl;\n \n     if( nLine > 10 ) {  // stop infinite loop\n       break;"}, {"sha": "453916ed0977bdde7f9de57efd6ae6f71fc66900", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/eb79.C", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb79.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb79.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb79.C?ref=a5434cb77933099c87b31153e543bf55cee6298b", "patch": "@@ -1,5 +1,7 @@\n // Makes bogus x86 assembly code.\n-#include <iostream.h>\n+#include <iostream>\n+\n+using namespace std;\n \n template<class T>\n T max(T a, T b)"}, {"sha": "0f42cf4afa7a126f462f0a695645bb140febaa58", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/eb83.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb83.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb83.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb83.C?ref=a5434cb77933099c87b31153e543bf55cee6298b", "patch": "@@ -1,7 +1,7 @@\n // Skip if not native\n // Special g++ Options: -fprofile-arcs -ftest-coverage\n void\n-swap(int& x, int& y) throw()\n+test_swap(int& x, int& y) throw()\n {\n   int tmp = x;\n   x = y;\n@@ -12,5 +12,5 @@ main()\n {\n   int i = 5;\n   int j = 7;\n-  swap(i, j);\n+  test_swap(i, j);\n }"}, {"sha": "b7a47faa25add40ec1b83a313f86e57278bb0e90", "filename": "gcc/testsuite/g++.old-deja/g++.warn/iomanip.C", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.warn%2Fiomanip.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5434cb77933099c87b31153e543bf55cee6298b/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.warn%2Fiomanip.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.warn%2Fiomanip.C?ref=a5434cb77933099c87b31153e543bf55cee6298b", "patch": "@@ -3,10 +3,11 @@\n // Special g++ Options: -O -Winline\n // Build don't link:\n \n-#include <iomanip.h>\n+#include <iomanip>\n+#include <iostream>\n \n void\n f()\n {\n-  cout << setw(3);\n+  std::cout << std::setw(3);\n }"}]}