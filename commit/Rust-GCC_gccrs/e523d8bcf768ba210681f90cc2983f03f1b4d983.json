{"sha": "e523d8bcf768ba210681f90cc2983f03f1b4d983", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTUyM2Q4YmNmNzY4YmEyMTA2ODFmOTBjYzI5ODNmMDNmMWI0ZDk4Mw==", "commit": {"author": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2009-08-24T04:41:51Z"}, "committer": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2009-08-24T04:41:51Z"}, "message": "re PR fortran/35754 (-std=f95: Reject \"1P2E12.4\" w/o a comma after the \"P\")\n\n2009-08-23  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n\n\tPR fortran/35754\n\t* io.c (check_format): Add checks for comma and the allowed\n\tformat specifiers after the 'P' specifier. Fix typo in error message\n\tand adjust locus.\n\nFrom-SVN: r151045", "tree": {"sha": "ed19f806cfbcfe9ab1cffa240a3553922607d012", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ed19f806cfbcfe9ab1cffa240a3553922607d012"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e523d8bcf768ba210681f90cc2983f03f1b4d983", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e523d8bcf768ba210681f90cc2983f03f1b4d983", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e523d8bcf768ba210681f90cc2983f03f1b4d983", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e523d8bcf768ba210681f90cc2983f03f1b4d983/comments", "author": null, "committer": null, "parents": [{"sha": "a14e5b7e0e7ed93f3be7fde973f5ee7ab0225cc4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a14e5b7e0e7ed93f3be7fde973f5ee7ab0225cc4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a14e5b7e0e7ed93f3be7fde973f5ee7ab0225cc4"}], "stats": {"total": 42, "additions": 32, "deletions": 10}, "files": [{"sha": "a5e5b446f547a35c0bb7f0ecc048872e989adf7a", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e523d8bcf768ba210681f90cc2983f03f1b4d983/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e523d8bcf768ba210681f90cc2983f03f1b4d983/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=e523d8bcf768ba210681f90cc2983f03f1b4d983", "patch": "@@ -1,3 +1,10 @@\n+2009-08-23  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR fortran/35754\n+\t* io.c (check_format): Add checks for comma and the allowed\n+\tformat specifiers after the 'P' specifier. Fix typo in error message\n+\tand adjust locus.\n+\n 2009-08-23  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR fortran/37446"}, {"sha": "7191a58382ec9f82760b4a345f0a3f24bd7945a0", "filename": "gcc/fortran/io.c", "status": "modified", "additions": 25, "deletions": 10, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e523d8bcf768ba210681f90cc2983f03f1b4d983/gcc%2Ffortran%2Fio.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e523d8bcf768ba210681f90cc2983f03f1b4d983/gcc%2Ffortran%2Fio.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fio.c?ref=e523d8bcf768ba210681f90cc2983f03f1b4d983", "patch": "@@ -687,20 +687,35 @@ check_format (bool is_input)\n       break;\n \n     case FMT_P:\n-      if (pedantic)\n+      /* Comma after P is allowed only for F, E, EN, ES, D, or G.\n+\t 10.1.1 (1).  */\n+      t = format_lex ();\n+      if (t == FMT_ERROR)\n+\tgoto fail;\n+      if (gfc_option.allow_std < GFC_STD_F2003 && t != FMT_COMMA\n+\t  && t != FMT_F && t != FMT_E && t != FMT_EN && t != FMT_ES\n+\t  && t != FMT_D && t != FMT_G)\n+\t{\n+\t  error = _(\"Comma required after P descriptor\");\n+\t  goto syntax;\n+\t}\n+      if (t != FMT_COMMA)\n \t{\n-\t  t = format_lex ();\n-\t  if (t == FMT_ERROR)\n-\t    goto fail;\n \t  if (t == FMT_POSINT)\n \t    {\n-\t      error = _(\"Repeat count cannot follow P descriptor\");\n+\t      t = format_lex ();\n+\t      if (t == FMT_ERROR)\n+\t\tgoto fail;\n+\t    }\n+          if (t != FMT_F && t != FMT_E && t != FMT_EN && t != FMT_ES && t != FMT_D\n+\t      && t != FMT_G)\n+\t    {\n+\t      error = _(\"Comma required after P descriptor\");\n \t      goto syntax;\n \t    }\n-\n-\t  saved_token = t;\n \t}\n \n+      saved_token = t;\n       goto optional_comma;\n \n     case FMT_T:\n@@ -883,13 +898,13 @@ check_format (bool is_input)\n       if (t != FMT_PERIOD)\n \t{\n \t  /* Warn if -std=legacy, otherwise error.  */\n-\t  if (mode != MODE_FORMAT)\n-\t    format_locus.nextc += format_string_pos;\n \t  if (gfc_option.warn_std != 0)\n \t    {\n-\t      error = _(\"Period required in format specifier at %L\");\n+\t      error = _(\"Period required in format specifier\");\n \t      goto syntax;\n \t    }\n+\t  if (mode != MODE_FORMAT)\n+\t    format_locus.nextc += format_string_pos;\n \t  gfc_warning (\"Period required in format specifier at %L\",\n \t\t       &format_locus);\n \t  saved_token = t;"}]}