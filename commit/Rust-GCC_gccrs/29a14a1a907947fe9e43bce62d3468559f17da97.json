{"sha": "29a14a1a907947fe9e43bce62d3468559f17da97", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjlhMTRhMWE5MDc5NDdmZTllNDNiY2U2MmQzNDY4NTU5ZjE3ZGE5Nw==", "commit": {"author": {"name": "Matthias Klose", "email": "doko@ubuntu.com", "date": "2020-07-24T14:17:44Z"}, "committer": {"name": "Matthias Klose", "email": "doko@ubuntu.com", "date": "2020-07-24T14:17:44Z"}, "message": "iDefine TARGET_OFFLOAD_OPTIONS for AArch64\n\n2020-07-24  Matthias Klose  <doko@ubuntu.com>\n\n\t* config/aarch64/aarch64.c (+aarch64_offload_options,\n\tTARGET_OFFLOAD_OPTIONS): New.", "tree": {"sha": "22ff7d35f3f6aa1e4a512addf1240bbd81e20e52", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/22ff7d35f3f6aa1e4a512addf1240bbd81e20e52"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/29a14a1a907947fe9e43bce62d3468559f17da97", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29a14a1a907947fe9e43bce62d3468559f17da97", "html_url": "https://github.com/Rust-GCC/gccrs/commit/29a14a1a907947fe9e43bce62d3468559f17da97", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29a14a1a907947fe9e43bce62d3468559f17da97/comments", "author": {"login": "doko42", "id": 11258518, "node_id": "MDQ6VXNlcjExMjU4NTE4", "avatar_url": "https://avatars.githubusercontent.com/u/11258518?v=4", "gravatar_id": "", "url": "https://api.github.com/users/doko42", "html_url": "https://github.com/doko42", "followers_url": "https://api.github.com/users/doko42/followers", "following_url": "https://api.github.com/users/doko42/following{/other_user}", "gists_url": "https://api.github.com/users/doko42/gists{/gist_id}", "starred_url": "https://api.github.com/users/doko42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/doko42/subscriptions", "organizations_url": "https://api.github.com/users/doko42/orgs", "repos_url": "https://api.github.com/users/doko42/repos", "events_url": "https://api.github.com/users/doko42/events{/privacy}", "received_events_url": "https://api.github.com/users/doko42/received_events", "type": "User", "site_admin": false}, "committer": {"login": "doko42", "id": 11258518, "node_id": "MDQ6VXNlcjExMjU4NTE4", "avatar_url": "https://avatars.githubusercontent.com/u/11258518?v=4", "gravatar_id": "", "url": "https://api.github.com/users/doko42", "html_url": "https://github.com/doko42", "followers_url": "https://api.github.com/users/doko42/followers", "following_url": "https://api.github.com/users/doko42/following{/other_user}", "gists_url": "https://api.github.com/users/doko42/gists{/gist_id}", "starred_url": "https://api.github.com/users/doko42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/doko42/subscriptions", "organizations_url": "https://api.github.com/users/doko42/orgs", "repos_url": "https://api.github.com/users/doko42/repos", "events_url": "https://api.github.com/users/doko42/events{/privacy}", "received_events_url": "https://api.github.com/users/doko42/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8c7bb540803e8bff9998bc86806e8a83acc75370", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c7bb540803e8bff9998bc86806e8a83acc75370", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c7bb540803e8bff9998bc86806e8a83acc75370"}], "stats": {"total": 13, "additions": 13, "deletions": 0}, "files": [{"sha": "a108119ba3e1160809c48a80897c0c0ac175b271", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29a14a1a907947fe9e43bce62d3468559f17da97/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29a14a1a907947fe9e43bce62d3468559f17da97/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=29a14a1a907947fe9e43bce62d3468559f17da97", "patch": "@@ -15005,6 +15005,16 @@ aarch64_override_options_after_change (void)\n   aarch64_override_options_after_change_1 (&global_options);\n }\n \n+/* Implement the TARGET_OFFLOAD_OPTIONS hook.  */\n+static char *\n+aarch64_offload_options (void)\n+{\n+  if (TARGET_ILP32)\n+    return xstrdup (\"-foffload-abi=ilp32\");\n+  else\n+    return xstrdup (\"-foffload-abi=lp64\");\n+}\n+\n static struct machine_function *\n aarch64_init_machine_status (void)\n {\n@@ -23580,6 +23590,9 @@ aarch64_libgcc_floating_mode_supported_p\n #define TARGET_OVERRIDE_OPTIONS_AFTER_CHANGE \\\n   aarch64_override_options_after_change\n \n+#undef TARGET_OFFLOAD_OPTIONS\n+#define TARGET_OFFLOAD_OPTIONS aarch64_offload_options\n+\n #undef TARGET_OPTION_SAVE\n #define TARGET_OPTION_SAVE aarch64_option_save\n "}]}