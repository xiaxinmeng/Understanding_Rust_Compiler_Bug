{"sha": "12ba225d76f5e210fe59c3d5f8fd6615fef2d118", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTJiYTIyNWQ3NmY1ZTIxMGZlNTljM2Q1ZjhmZDY2MTVmZWYyZDExOA==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2008-08-23T18:12:30Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2008-08-23T18:12:30Z"}, "message": "re PR fortran/37025 (ICE with TRANSFER to non-default-kind character: transfer(int(z'bde4'),4_'a'))\n\n2008-08-23  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/37025\n        * target-memory.c (gfc_interpret_character): Support\n        kind=4 characters.\n\n2008-08-23  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/37025\n        * gfortran.dg/widechar_8.f90: New.\n\nFrom-SVN: r139520", "tree": {"sha": "273b66f99e74c0b500509ce36f63ef0c4928f48d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/273b66f99e74c0b500509ce36f63ef0c4928f48d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/12ba225d76f5e210fe59c3d5f8fd6615fef2d118", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12ba225d76f5e210fe59c3d5f8fd6615fef2d118", "html_url": "https://github.com/Rust-GCC/gccrs/commit/12ba225d76f5e210fe59c3d5f8fd6615fef2d118", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12ba225d76f5e210fe59c3d5f8fd6615fef2d118/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8b7b9d66fe761fb42a55d016c90a4790f301f6c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b7b9d66fe761fb42a55d016c90a4790f301f6c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b7b9d66fe761fb42a55d016c90a4790f301f6c0"}], "stats": {"total": 64, "additions": 61, "deletions": 3}, "files": [{"sha": "30ec837bea7b742b335e7f3029b7ff3399decfd7", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12ba225d76f5e210fe59c3d5f8fd6615fef2d118/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12ba225d76f5e210fe59c3d5f8fd6615fef2d118/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=12ba225d76f5e210fe59c3d5f8fd6615fef2d118", "patch": "@@ -1,3 +1,9 @@\n+2008-08-23  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/37025\n+\t* target-memory.c (gfc_interpret_character): Support\n+\tkind=4 characters.\n+\n 2008-08-22  Daniel Kraft  <d@domob.eu>\n \n \tPR fortran/30239"}, {"sha": "b1029dfa5dc6d77159d376e187eba91934865d3a", "filename": "gcc/fortran/target-memory.c", "status": "modified", "additions": 22, "deletions": 3, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12ba225d76f5e210fe59c3d5f8fd6615fef2d118/gcc%2Ffortran%2Ftarget-memory.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12ba225d76f5e210fe59c3d5f8fd6615fef2d118/gcc%2Ffortran%2Ftarget-memory.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftarget-memory.c?ref=12ba225d76f5e210fe59c3d5f8fd6615fef2d118", "patch": "@@ -399,9 +399,28 @@ gfc_interpret_character (unsigned char *buffer, size_t buffer_size,\n   result->value.character.string =\n     gfc_get_wide_string (result->value.character.length + 1);\n \n-  gcc_assert (result->ts.kind == gfc_default_character_kind);\n-  for (i = 0; i < result->value.character.length; i++)\n-    result->value.character.string[i] = (gfc_char_t) buffer[i];\n+  if (result->ts.kind == gfc_default_character_kind)\n+    for (i = 0; i < result->value.character.length; i++)\n+      result->value.character.string[i] = (gfc_char_t) buffer[i];\n+  else\n+    {\n+      mpz_t integer;\n+      unsigned bytes = size_character (1, result->ts.kind);\n+      mpz_init (integer);\n+      gcc_assert (bytes <= sizeof (unsigned long));\n+\n+      for (i = 0; i < result->value.character.length; i++)\n+\t{\n+\t  gfc_conv_tree_to_mpz (integer,\n+\t    native_interpret_expr (gfc_get_char_type (result->ts.kind),\n+\t\t\t\t   &buffer[bytes*i], buffer_size-bytes*i));\n+\t  result->value.character.string[i]\n+\t    = (gfc_char_t) mpz_get_ui (integer);\n+\t}\n+\n+      mpz_clear (integer);\n+    }\n+\n   result->value.character.string[result->value.character.length] = '\\0';\n \n   return result->value.character.length;"}, {"sha": "a87e47d2a217d7db539d4a252f09185828ff3a48", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12ba225d76f5e210fe59c3d5f8fd6615fef2d118/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12ba225d76f5e210fe59c3d5f8fd6615fef2d118/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=12ba225d76f5e210fe59c3d5f8fd6615fef2d118", "patch": "@@ -1,3 +1,8 @@\n+2008-08-23  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/37025\n+\t* gfortran.dg/widechar_8.f90: New.\n+\n 2008-08-23  Ira Rosen  <irar@il.ibm.com>\n \n \tPR tree-optimization/37174"}, {"sha": "e61129416cfacc2b23c92ca85a76a37ee2e5afd3", "filename": "gcc/testsuite/gfortran.dg/widechar_8.f90", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12ba225d76f5e210fe59c3d5f8fd6615fef2d118/gcc%2Ftestsuite%2Fgfortran.dg%2Fwidechar_8.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12ba225d76f5e210fe59c3d5f8fd6615fef2d118/gcc%2Ftestsuite%2Fgfortran.dg%2Fwidechar_8.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fwidechar_8.f90?ref=12ba225d76f5e210fe59c3d5f8fd6615fef2d118", "patch": "@@ -0,0 +1,28 @@\n+! { dg-do run }\n+! { dg-options \"-fbackslash\" }\n+!\n+! PR fortran/37025\n+!\n+! Check whether transferring to character(kind=4) and transferring back works\n+!\n+implicit none\n+character(len=4,kind=4) :: str\n+integer(4) :: buffer(4) = [int(z'039f'),int(z'03cd'),int(z'03c7'),  &\n+                           int(z'30b8') ], &\n+              buffer2(4)\n+\n+open(6,encoding=\"UTF-8\")\n+str = transfer(buffer, str)\n+!print *, str\n+!print *, 4_'\\u039f\\u03cd\\u03c7\\u30b8'\n+if (str /= 4_'\\u039f\\u03cd\\u03c7\\u30b8') call abort()\n+str = transfer([int(z'039f'),int(z'03cd'),int(z'03c7'),  &\n+                           int(z'30b8') ], str)\n+if (str /= 4_'\\u039f\\u03cd\\u03c7\\u30b8') call abort()\n+\n+buffer2 = transfer(4_'\\u039f\\u03cd\\u03c7\\u30b8', buffer2, 4)\n+!print *, buffer\n+!print *, buffer2\n+buffer2 = transfer(str, buffer2, 4)\n+if (any(buffer2 /= buffer)) call abort()\n+end"}]}