{"sha": "44fadf1e3a92c5fcade1c2c65d349e2e9b08f6e6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDRmYWRmMWUzYTkyYzVmY2FkZTFjMmM2NWQzNDllMmU5YjA4ZjZlNg==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@cygnus.com", "date": "2000-07-13T18:25:37Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2000-07-13T18:25:37Z"}, "message": "* lang-specs.h: Added %{I*}.\n\nFrom-SVN: r35018", "tree": {"sha": "459d2e71b69887ae82c69e2f0d2cb7337f225fc7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/459d2e71b69887ae82c69e2f0d2cb7337f225fc7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/44fadf1e3a92c5fcade1c2c65d349e2e9b08f6e6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44fadf1e3a92c5fcade1c2c65d349e2e9b08f6e6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/44fadf1e3a92c5fcade1c2c65d349e2e9b08f6e6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44fadf1e3a92c5fcade1c2c65d349e2e9b08f6e6/comments", "author": null, "committer": null, "parents": [{"sha": "c67846f2826f296dbe8a2232310c6ffcfbb682a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c67846f2826f296dbe8a2232310c6ffcfbb682a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c67846f2826f296dbe8a2232310c6ffcfbb682a2"}], "stats": {"total": 30, "additions": 27, "deletions": 3}, "files": [{"sha": "4857d0182195988dcfd039bc71f28219aca13698", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44fadf1e3a92c5fcade1c2c65d349e2e9b08f6e6/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44fadf1e3a92c5fcade1c2c65d349e2e9b08f6e6/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=44fadf1e3a92c5fcade1c2c65d349e2e9b08f6e6", "patch": "@@ -1,3 +1,7 @@\n+2000-07-13  Tom Tromey  <tromey@cygnus.com>\n+\n+\t* lang-specs.h: Added %{I*}.\n+\n 2000-07-13  Zack Weinberg  <zack@wolery.cumb.org>\n \n \t* lang-specs.h: Use the new named specs.  Remove unnecessary braces."}, {"sha": "0ef29cab20b2a8ba8e9462b79580acad7c459944", "filename": "gcc/java/jcf-write.c", "status": "modified", "additions": 22, "deletions": 2, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44fadf1e3a92c5fcade1c2c65d349e2e9b08f6e6/gcc%2Fjava%2Fjcf-write.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44fadf1e3a92c5fcade1c2c65d349e2e9b08f6e6/gcc%2Fjava%2Fjcf-write.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjcf-write.c?ref=44fadf1e3a92c5fcade1c2c65d349e2e9b08f6e6", "patch": "@@ -290,6 +290,7 @@ static struct jcf_block * get_jcf_label_here PARAMS ((struct jcf_partial *));\n static void put_linenumber PARAMS ((int, struct jcf_partial *));\n static void localvar_alloc PARAMS ((tree, struct jcf_partial *));\n static void localvar_free PARAMS ((tree, struct jcf_partial *));\n+static void localvar_finish PARAMS ((tree, struct jcf_partial *));\n static int get_access_flags PARAMS ((tree));\n static void write_chunks PARAMS ((FILE *, struct chunk *));\n static int adjust_typed_op PARAMS ((tree, int));\n@@ -644,6 +645,25 @@ localvar_free (decl, state)\n     }\n }\n \n+/* Like localvar_free, but leaves the variable allocated.  This lets\n+   us avoid problems with inappropriate variable reuse in some\n+   situations.  */\n+static void\n+localvar_finish (decl, state)\n+     tree decl;     \n+     struct jcf_partial *state;\n+{\n+  struct jcf_block *end_label = get_jcf_label_here (state);\n+  int index = DECL_LOCAL_INDEX (decl);\n+  register struct localvar_info **ptr = &localvar_buffer [index];\n+  register struct localvar_info *info = *ptr;\n+\n+  info->end_label = end_label;\n+\n+  if (info->decl != decl)\n+    abort ();\n+}\n+\n \f\n #define STACK_TARGET 1\n #define IGNORE_TARGET 2\n@@ -2379,7 +2399,7 @@ generate_bytecode_insns (exp, target, state)\n \tRESERVE (1);\n \tOP1 (OPCODE_athrow);\n \tNOTE_POP (1);\n-\tlocalvar_free (exception_decl, state);\n+\tlocalvar_finish (exception_decl, state);\n \n \t/* The finally block.  First save return PC into return_link. */\n \tdefine_jcf_label (finally_label, state);\n@@ -2388,7 +2408,7 @@ generate_bytecode_insns (exp, target, state)\n \n \tgenerate_bytecode_insns (finally, IGNORE_TARGET, state);\n \tmaybe_wide (OPCODE_ret, DECL_LOCAL_INDEX (return_link), state);\n-\tlocalvar_free (return_link, state);\n+\tlocalvar_finish (return_link, state);\n \tdefine_jcf_label (finished_label, state);\n       }\n       break;"}, {"sha": "d912724dc30254394aaf15b75aa470fee5810cd4", "filename": "gcc/java/lang-specs.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44fadf1e3a92c5fcade1c2c65d349e2e9b08f6e6/gcc%2Fjava%2Flang-specs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44fadf1e3a92c5fcade1c2c65d349e2e9b08f6e6/gcc%2Fjava%2Flang-specs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Flang-specs.h?ref=44fadf1e3a92c5fcade1c2c65d349e2e9b08f6e6", "patch": "@@ -31,6 +31,6 @@ The Free Software Foundation is independent of Sun Microsystems, Inc.  */\n   {\".jar\",    \"@java\" },\n   {\"@java\",\n    \"%{fjni:%{femit-class-file:%e-fjni and -femit-class-file are incompatible}}\\\n-    %{!E:jc1 %i %(cc1_options) %{+e*} %{MD} %{MMD} %{M} %{MM}\\\n+    %{!E:jc1 %i %(cc1_options) %{+e*} %{I*} %{MD} %{MMD} %{M} %{MM}\\\n              %{!S:-o %{|!pipe:%g.s} |\\n\\\n     as %(asm_options) %{!pipe:%g.s} %A }}\"},"}]}