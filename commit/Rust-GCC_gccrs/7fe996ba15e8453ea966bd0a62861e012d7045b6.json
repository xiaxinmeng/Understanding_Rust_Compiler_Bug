{"sha": "7fe996ba15e8453ea966bd0a62861e012d7045b6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2ZlOTk2YmExNWU4NDUzZWE5NjZiZDBhNjI4NjFlMDEyZDcwNDViNg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2015-12-04T08:09:46Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2015-12-04T08:09:46Z"}, "message": "re PR middle-end/67438 (~X op ~Y pattern relocation causes loop performance degradation on 32bit x86)\n\n2015-12-04  Richard Biener  <rguenther@suse.de>\n\n\tPR middle-end/67438\n\t* match.pd: Guard ~X cmp ~Y -> Y cmp X and the variant with\n\ta constant with single_use.\n\nFrom-SVN: r231245", "tree": {"sha": "5b1f6a744761eba66a206207975df198712c3b92", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5b1f6a744761eba66a206207975df198712c3b92"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7fe996ba15e8453ea966bd0a62861e012d7045b6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7fe996ba15e8453ea966bd0a62861e012d7045b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7fe996ba15e8453ea966bd0a62861e012d7045b6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7fe996ba15e8453ea966bd0a62861e012d7045b6/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e8426e0a22212f9b355364186c9d1748a38b0549", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8426e0a22212f9b355364186c9d1748a38b0549", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e8426e0a22212f9b355364186c9d1748a38b0549"}], "stats": {"total": 16, "additions": 12, "deletions": 4}, "files": [{"sha": "0a3fd7939dd5496e6e6b83c517efe87992c63184", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fe996ba15e8453ea966bd0a62861e012d7045b6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fe996ba15e8453ea966bd0a62861e012d7045b6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7fe996ba15e8453ea966bd0a62861e012d7045b6", "patch": "@@ -1,3 +1,9 @@\n+2015-12-04  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/67438\n+\t* match.pd: Guard ~X cmp ~Y -> Y cmp X and the variant with\n+\ta constant with single_use.\n+\n 2015-12-04  Bin Cheng  <bin.cheng@arm.com>\n \t    Jiong Wang  <jiong.wang@arm.com>\n "}, {"sha": "5ac30eb078fc79965b7352f621beeba7659e373e", "filename": "gcc/match.pd", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fe996ba15e8453ea966bd0a62861e012d7045b6/gcc%2Fmatch.pd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fe996ba15e8453ea966bd0a62861e012d7045b6/gcc%2Fmatch.pd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmatch.pd?ref=7fe996ba15e8453ea966bd0a62861e012d7045b6", "patch": "@@ -1855,15 +1855,17 @@ DEFINE_INT_AND_FLOAT_ROUND_FN (RINT)\n /* Fold ~X op ~Y as Y op X.  */\n (for cmp (simple_comparison)\n  (simplify\n-  (cmp (bit_not @0) (bit_not @1))\n-  (cmp @1 @0)))\n+  (cmp (bit_not@2 @0) (bit_not@3 @1))\n+  (if (single_use (@2) && single_use (@3))\n+   (cmp @1 @0))))\n \n /* Fold ~X op C as X op' ~C, where op' is the swapped comparison.  */\n (for cmp (simple_comparison)\n      scmp (swapped_simple_comparison)\n  (simplify\n-  (cmp (bit_not @0) CONSTANT_CLASS_P@1)\n-  (if (TREE_CODE (@1) == INTEGER_CST || TREE_CODE (@1) == VECTOR_CST)\n+  (cmp (bit_not@2 @0) CONSTANT_CLASS_P@1)\n+  (if (single_use (@2)\n+       && (TREE_CODE (@1) == INTEGER_CST || TREE_CODE (@1) == VECTOR_CST))\n    (scmp @0 (bit_not @1)))))\n \n (for cmp (simple_comparison)"}]}