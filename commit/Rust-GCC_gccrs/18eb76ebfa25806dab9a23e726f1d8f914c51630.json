{"sha": "18eb76ebfa25806dab9a23e726f1d8f914c51630", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MThlYjc2ZWJmYTI1ODA2ZGFiOWEyM2U3MjZmMWQ4ZjkxNGM1MTYzMA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2012-09-05T13:29:13Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2012-09-05T13:29:13Z"}, "message": "re PR tree-optimization/46590 (long compile time with -O2 and many loops)\n\n2012-09-05  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/46590\n\t* tree-ssa-loop-ivcanon.c (try_unroll_loop_completely): Do not\n\tupdate SSA form here.\n\t(canonicalize_induction_variables): Assert we do not need to\n\tupdate SSA form.\n\t(tree_unroll_loops_completely): Update SSA form here.\n\t* tree-ssa-loop-manip.c (gimple_duplicate_loop_to_header_edge):\n\tDo not verify loop-closed SSA form if SSA form is not up-to-date.\n\nFrom-SVN: r190978", "tree": {"sha": "6a4da24f3eeac38fb070a1b1006f7948c7c1d8c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6a4da24f3eeac38fb070a1b1006f7948c7c1d8c3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/18eb76ebfa25806dab9a23e726f1d8f914c51630", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18eb76ebfa25806dab9a23e726f1d8f914c51630", "html_url": "https://github.com/Rust-GCC/gccrs/commit/18eb76ebfa25806dab9a23e726f1d8f914c51630", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18eb76ebfa25806dab9a23e726f1d8f914c51630/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e124e65f35b41bf118766d910bc307db160f3073", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e124e65f35b41bf118766d910bc307db160f3073", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e124e65f35b41bf118766d910bc307db160f3073"}], "stats": {"total": 23, "additions": 21, "deletions": 2}, "files": [{"sha": "33a8dfd2c7f8690ad925e328c3458718797931f2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18eb76ebfa25806dab9a23e726f1d8f914c51630/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18eb76ebfa25806dab9a23e726f1d8f914c51630/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=18eb76ebfa25806dab9a23e726f1d8f914c51630", "patch": "@@ -1,3 +1,14 @@\n+2012-09-05  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/46590\n+\t* tree-ssa-loop-ivcanon.c (try_unroll_loop_completely): Do not\n+\tupdate SSA form here.\n+\t(canonicalize_induction_variables): Assert we do not need to\n+\tupdate SSA form.\n+\t(tree_unroll_loops_completely): Update SSA form here.\n+\t* tree-ssa-loop-manip.c (gimple_duplicate_loop_to_header_edge):\n+\tDo not verify loop-closed SSA form if SSA form is not up-to-date.\n+\n 2012-09-05  Georg-Johann Lay  <avr@gjlay.de>\n \n \tPR target/54461"}, {"sha": "e1584b44e93e4a259609db3a96c5b524309e5bfe", "filename": "gcc/tree-ssa-loop-ivcanon.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18eb76ebfa25806dab9a23e726f1d8f914c51630/gcc%2Ftree-ssa-loop-ivcanon.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18eb76ebfa25806dab9a23e726f1d8f914c51630/gcc%2Ftree-ssa-loop-ivcanon.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-ivcanon.c?ref=18eb76ebfa25806dab9a23e726f1d8f914c51630", "patch": "@@ -414,7 +414,6 @@ try_unroll_loop_completely (struct loop *loop,\n   else\n     gimple_cond_make_false (cond);\n   update_stmt (cond);\n-  update_ssa (TODO_update_ssa);\n \n   if (dump_file && (dump_flags & TDF_DETAILS))\n     fprintf (dump_file, \"Unrolled loop %d completely.\\n\", loop->num);\n@@ -493,6 +492,7 @@ canonicalize_induction_variables (void)\n \t\t\t\t\t\t\ttrue, UL_SINGLE_ITER,\n \t\t\t\t\t\t\ttrue);\n     }\n+  gcc_assert (!need_ssa_update_p (cfun));\n \n   /* Clean up the information about numbers of iterations, since brute force\n      evaluation could reveal new information.  */\n@@ -536,6 +536,8 @@ tree_unroll_loops_completely (bool may_increase_size, bool unroll_outer)\n \n       if (changed)\n \t{\n+\t  update_ssa (TODO_update_ssa);\n+\n \t  /* This will take care of removing completely unrolled loops\n \t     from the loop structures so we can continue unrolling now\n \t     innermost loops.  */"}, {"sha": "9732fbe484a8fa0d1a42ec5efe845e34d68a2934", "filename": "gcc/tree-ssa-loop-manip.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18eb76ebfa25806dab9a23e726f1d8f914c51630/gcc%2Ftree-ssa-loop-manip.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18eb76ebfa25806dab9a23e726f1d8f914c51630/gcc%2Ftree-ssa-loop-manip.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-manip.c?ref=18eb76ebfa25806dab9a23e726f1d8f914c51630", "patch": "@@ -752,7 +752,13 @@ gimple_duplicate_loop_to_header_edge (struct loop *loop, edge e,\n     return false;\n \n #ifdef ENABLE_CHECKING\n-  if (loops_state_satisfies_p (LOOP_CLOSED_SSA))\n+  /* ???  This forces needless update_ssa calls after processing each\n+     loop instead of just once after processing all loops.  We should\n+     instead verify that loop-closed SSA form is up-to-date for LOOP\n+     only (and possibly SSA form).  For now just skip verifying if\n+     there are to-be renamed variables.  */\n+  if (!need_ssa_update_p (cfun)\n+      && loops_state_satisfies_p (LOOP_CLOSED_SSA))\n     verify_loop_closed_ssa (true);\n #endif\n "}]}