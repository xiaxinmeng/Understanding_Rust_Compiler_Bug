{"sha": "6a4ed6c8a9866e7e467467cbe2f70be3457a189e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmE0ZWQ2YzhhOTg2NmU3ZTQ2NzQ2N2NiZTJmNzBiZTM0NTdhMTg5ZQ==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2002-03-18T21:39:09Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2002-03-18T21:39:09Z"}, "message": "jni.exp (gcj_jni_test_one): Find libstdc++ in build tree.\n\n\t* libjava.jni/jni.exp (gcj_jni_test_one): Find libstdc++ in build\n\ttree.\n\t(gcj_invoke): Added ld_library_additions argument.\n\nFrom-SVN: r51006", "tree": {"sha": "67869a238242e4452f57056c20b84ee0ab886259", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/67869a238242e4452f57056c20b84ee0ab886259"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6a4ed6c8a9866e7e467467cbe2f70be3457a189e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a4ed6c8a9866e7e467467cbe2f70be3457a189e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a4ed6c8a9866e7e467467cbe2f70be3457a189e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a4ed6c8a9866e7e467467cbe2f70be3457a189e/comments", "author": null, "committer": null, "parents": [{"sha": "c79ca0ac59c9cfb4c10b01a61260ff0b7925ea10", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c79ca0ac59c9cfb4c10b01a61260ff0b7925ea10", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c79ca0ac59c9cfb4c10b01a61260ff0b7925ea10"}], "stats": {"total": 40, "additions": 35, "deletions": 5}, "files": [{"sha": "ab77ce9be1b40a3cb1e8e4923da02af0e9bd0692", "filename": "libjava/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a4ed6c8a9866e7e467467cbe2f70be3457a189e/libjava%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a4ed6c8a9866e7e467467cbe2f70be3457a189e/libjava%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2FChangeLog?ref=6a4ed6c8a9866e7e467467cbe2f70be3457a189e", "patch": "@@ -1,3 +1,9 @@\n+2002-03-18  Tom Tromey  <tromey@redhat.com>\n+\n+\t* libjava.jni/jni.exp (gcj_jni_test_one): Find libstdc++ in build\n+\ttree.\n+\t(gcj_invoke): Added ld_library_additions argument.\n+\n 2002-03-17  Tom Tromey  <tromey@redhat.com>\n \n \t* libjava.jni/jni.exp (gcj_jni_build_header): Use local_exec, not"}, {"sha": "049383eb17795b833339a1af0d72b2b877307975", "filename": "libjava/testsuite/libjava.jni/jni.exp", "status": "modified", "additions": 29, "deletions": 5, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a4ed6c8a9866e7e467467cbe2f70be3457a189e/libjava%2Ftestsuite%2Flibjava.jni%2Fjni.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a4ed6c8a9866e7e467467cbe2f70be3457a189e/libjava%2Ftestsuite%2Flibjava.jni%2Fjni.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.jni%2Fjni.exp?ref=6a4ed6c8a9866e7e467467cbe2f70be3457a189e", "patch": "@@ -43,11 +43,18 @@ proc gcj_jni_build_header {file} {\n }\n \n # Invoke the program and see what happens.  Return 0 on failure.\n-proc gcj_invoke {program expectFile} {\n+proc gcj_invoke {program expectFile ld_library_additions} {\n   global env\n   set lib_path $env(LD_LIBRARY_PATH)\n-  setenv LD_LIBRARY_PATH .:$lib_path\n-  setenv SHLIB_PATH .:$lib_path\n+\n+  set newval .\n+  if {[llength $ld_library_additions] > 0} {\n+    append newval :[join $ld_library_additions :]\n+  }\n+  append newval :$lib_path\n+\n+  setenv LD_LIBRARY_PATH $newval\n+  setenv SHLIB_PATH $newval\n \n   verbose \"LD_LIBRARY_PATH=$env(LD_LIBRARY_PATH)\"\n \n@@ -106,10 +113,27 @@ proc gcj_jni_test_one {file} {\n \n   set cfile [file rootname $file].c\n   set cxxflags \"\"\n+  set cxxldlibflags {}\n   # If there is no `.c' file, assume there is a `.cc' file.\n   if {! [file exists $cfile]} {\n     set cfile [file rootname $file].cc\n-    set cxxflags \"-lstdc++\"\n+\n+    set cxxflaglist {}\n+    foreach arg [split [libjava_find_lib libstdc++-v3/src stdc++] \" \"] {\n+      switch -glob -- $arg {\n+\t\"-L*\" {\n+\t  set arg [string range $arg 2 end]\n+\t  lappend cxxldlibflags $arg\n+\t  # Strip the `.libs' directory; we link with libtool which\n+\t  # doesn't need it.\n+\t  set arg \"-L[file dirname $arg]\"\n+\t}\n+      }\n+      lappend cxxflaglist $arg\n+    }\n+\n+    lappend cxxflaglist \"-lstdc++\"\n+    set cxxflags [join $cxxflaglist]\n   }\n \n   if {! [gcj_jni_compile_c_to_so $cfile]} {\n@@ -125,7 +149,7 @@ proc gcj_jni_test_one {file} {\n     return 0\n   }\n \n-  if {! [gcj_invoke $main [file rootname $file].out]} {\n+  if {! [gcj_invoke $main [file rootname $file].out $cxxldlibflags]} {\n     # FIXME\n     return 0\n   }"}]}