{"sha": "83c3a2d826778223e827ab541ada1c3ffde04034", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODNjM2EyZDgyNjc3ODIyM2U4MjdhYjU0MWFkYTFjM2ZmZGUwNDAzNA==", "commit": {"author": {"name": "Ramana Radhakrishnan", "email": "ramana.radhakrishnan@arm.com", "date": "2009-12-23T16:36:40Z"}, "committer": {"name": "Ramana Radhakrishnan", "email": "ramana@gcc.gnu.org", "date": "2009-12-23T16:36:40Z"}, "message": "re PR target/42093 (Compressed switch tables for Thumb2 have signed offsets)\n\nFix PR target/42093\n\n\n2009-12-23  Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>\n\n        PR target/42093\n        * config/arm/arm.h (CASE_VECTOR_PC_RELATIVE): Fix macro usage\n        to TARGET_THUMB1.\n        (CASE_VECTOR_SHORTEN_MODE): Allow signed offsets \n        only for TARGET_THUMB1.\n\n2009-12-23  Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>\n\n        PR target/42093\n        * gcc.target/arm/pr42093.c: New test.\n\nFrom-SVN: r155428", "tree": {"sha": "38a83d3bb56c8033348f31d5c3ba454883552ceb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/38a83d3bb56c8033348f31d5c3ba454883552ceb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/83c3a2d826778223e827ab541ada1c3ffde04034", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83c3a2d826778223e827ab541ada1c3ffde04034", "html_url": "https://github.com/Rust-GCC/gccrs/commit/83c3a2d826778223e827ab541ada1c3ffde04034", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83c3a2d826778223e827ab541ada1c3ffde04034/comments", "author": null, "committer": null, "parents": [{"sha": "07422036e30a34fa3fba20c6b6a7534bcd509e1c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07422036e30a34fa3fba20c6b6a7534bcd509e1c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/07422036e30a34fa3fba20c6b6a7534bcd509e1c"}], "stats": {"total": 68, "additions": 66, "deletions": 2}, "files": [{"sha": "be2608887616f099561a660973cb597beaf41a4d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83c3a2d826778223e827ab541ada1c3ffde04034/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83c3a2d826778223e827ab541ada1c3ffde04034/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=83c3a2d826778223e827ab541ada1c3ffde04034", "patch": "@@ -1,3 +1,11 @@\n+2009-12-23  Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>\n+\n+        PR target/42093\n+        * config/arm/arm.h (CASE_VECTOR_PC_RELATIVE): Fix macro usage\n+        to TARGET_THUMB1.\n+        (CASE_VECTOR_SHORTEN_MODE): Allow signed offsets\n+        only for TARGET_THUMB1.\n+\n 2009-12-23  Ramana Radhakrishnan  <ramrad01@arm.com>\n \n \tPR target/40670"}, {"sha": "26ffaf8dff80276e1b2eefd8c83aeee87c1baf14", "filename": "gcc/config/arm/arm.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83c3a2d826778223e827ab541ada1c3ffde04034/gcc%2Fconfig%2Farm%2Farm.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83c3a2d826778223e827ab541ada1c3ffde04034/gcc%2Fconfig%2Farm%2Farm.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.h?ref=83c3a2d826778223e827ab541ada1c3ffde04034", "patch": "@@ -2118,11 +2118,11 @@ typedef struct\n #define CASE_VECTOR_MODE Pmode\n \n #define CASE_VECTOR_PC_RELATIVE (TARGET_THUMB2\t\t\t\t\\\n-\t\t\t\t || (TARGET_THUMB\t\t\t\\\n+\t\t\t\t || (TARGET_THUMB1\t\t\t\\\n \t\t\t\t     && (optimize_size || flag_pic)))\n \n #define CASE_VECTOR_SHORTEN_MODE(min, max, body)\t\t\t\\\n-  (TARGET_THUMB\t\t\t\t\t\t\t\t\\\n+  (TARGET_THUMB1\t\t\t\t\t\t\t\\\n    ? (min >= 0 && max < 512\t\t\t\t\t\t\\\n       ? (ADDR_DIFF_VEC_FLAGS (body).offset_unsigned = 1, QImode)\t\\\n       : min >= -256 && max < 256\t\t\t\t\t\\"}, {"sha": "da6d3b1e5b3939656e503829772a5723d8d922ad", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83c3a2d826778223e827ab541ada1c3ffde04034/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83c3a2d826778223e827ab541ada1c3ffde04034/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=83c3a2d826778223e827ab541ada1c3ffde04034", "patch": "@@ -1,3 +1,8 @@\n+2009-12-23  Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>\n+\n+        PR target/42093\n+        * gcc.target/arm/pr42093.c: New test.\n+\n 2009-12-23  Ramana Radhakrishnan  <ramrad01@arm.com>\n \n \tPR target/40670"}, {"sha": "5d43982bf1c85fde2d780c0dbd126d03f807716a", "filename": "gcc/testsuite/gcc.target/arm/pr42093.c", "status": "added", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83c3a2d826778223e827ab541ada1c3ffde04034/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr42093.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83c3a2d826778223e827ab541ada1c3ffde04034/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr42093.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr42093.c?ref=83c3a2d826778223e827ab541ada1c3ffde04034", "patch": "@@ -0,0 +1,51 @@\n+/* { dg-options \"-mthumb -O2\" }  */\n+/* { dg-require-effective-target arm_thumb2_ok } */\n+/* { dg-final { scan-assembler-not \"tbb\" } } */\n+/* { dg-final { scan-assembler-not \"tbh\" } } */\n+\n+#include <stdlib.h>\n+\n+int gbl;\n+int foo (int *buf, int n)\n+{\n+  int ctr = 0;\n+  int c;\n+  while (1)\n+    {\n+      c = buf[ctr++];\n+      switch (c)\n+        {\n+        case '\\n':\n+          gbl++;\n+          break;\n+\n+        case ' ': case '\\t' : case '\\f' : case '\\r':\n+          break;\n+\n+        case ';':\n+          do\n+            c = buf [ctr++];\n+          while (c != '\\n' && c != -1);\n+          gbl++;\n+          break;\n+\n+        case '/':\n+          {\n+            int prevc;\n+            c = buf [ctr++];\n+            if (c != '*')\n+              abort ();\n+\n+            prevc = 0;\n+            while ((c = buf[ctr++]) && c != -1)\n+              {\n+                if (c == '\\n')\n+                  gbl++;\n+              }\n+            break;\n+          }\n+        default:\n+          return c;\n+        }\n+    }\n+}"}]}