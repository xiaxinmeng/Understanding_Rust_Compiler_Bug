{"sha": "d49718d6ff41cdf8ed6b013b9e099f7ec3541053", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDQ5NzE4ZDZmZjQxY2RmOGVkNmIwMTNiOWUwOTlmN2VjMzU0MTA1Mw==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2017-07-25T09:49:08Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2017-07-25T09:49:08Z"}, "message": "re PR c/81364 (Bogus -Wmultistatement-macros warning)\n\n\tPR c/81364\n\t* c-parser.c (c_parser_else_body): Don't warn about multistatement\n\tmacro expansion if the body is in { }.\n\t(c_parser_while_statement): Likewise.\n\t(c_parser_for_statement): Likewise.\n\n\t* Wmultistatement-macros-12.c: New test.\n\nFrom-SVN: r250498", "tree": {"sha": "1cb6cf103468770b4f76a042134eac5a3ae9a58b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1cb6cf103468770b4f76a042134eac5a3ae9a58b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d49718d6ff41cdf8ed6b013b9e099f7ec3541053", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d49718d6ff41cdf8ed6b013b9e099f7ec3541053", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d49718d6ff41cdf8ed6b013b9e099f7ec3541053", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d49718d6ff41cdf8ed6b013b9e099f7ec3541053/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0e82a9b9422447fe9730831a5072655e0f5780f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e82a9b9422447fe9730831a5072655e0f5780f7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e82a9b9422447fe9730831a5072655e0f5780f7"}], "stats": {"total": 65, "additions": 62, "deletions": 3}, "files": [{"sha": "4e4d20bbe20772d3d6d5d2b8e543d860add38c31", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d49718d6ff41cdf8ed6b013b9e099f7ec3541053/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d49718d6ff41cdf8ed6b013b9e099f7ec3541053/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=d49718d6ff41cdf8ed6b013b9e099f7ec3541053", "patch": "@@ -1,3 +1,11 @@\n+2017-07-25  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c/81364\n+\t* c-parser.c (c_parser_else_body): Don't warn about multistatement\n+\tmacro expansion if the body is in { }.\n+\t(c_parser_while_statement): Likewise.\n+\t(c_parser_for_statement): Likewise.\n+\n 2017-07-18  Nathan Sidwell  <nathan@acm.org>\n \n \t* c-parser.c (c_parser_array_notation): Use TYPE_{MIN,MAX}_VALUE."}, {"sha": "16cd3579972917994115657bc0511d619baddd88", "filename": "gcc/c/c-parser.c", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d49718d6ff41cdf8ed6b013b9e099f7ec3541053/gcc%2Fc%2Fc-parser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d49718d6ff41cdf8ed6b013b9e099f7ec3541053/gcc%2Fc%2Fc-parser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-parser.c?ref=d49718d6ff41cdf8ed6b013b9e099f7ec3541053", "patch": "@@ -5557,7 +5557,8 @@ c_parser_else_body (c_parser *parser, const token_indent_info &else_tinfo,\n     }\n   else\n     {\n-      body_loc_after_labels = c_parser_peek_token (parser)->location;\n+      if (!c_parser_next_token_is (parser, CPP_OPEN_BRACE))\n+\tbody_loc_after_labels = c_parser_peek_token (parser)->location;\n       c_parser_statement_after_labels (parser, NULL, chain);\n     }\n \n@@ -5811,6 +5812,7 @@ c_parser_while_statement (c_parser *parser, bool ivdep, bool *if_p)\n     = get_token_indent_info (c_parser_peek_token (parser));\n \n   location_t loc_after_labels;\n+  bool open_brace = c_parser_next_token_is (parser, CPP_OPEN_BRACE);\n   body = c_parser_c99_block_statement (parser, if_p, &loc_after_labels);\n   c_finish_loop (loc, cond, NULL, body, c_break_label, c_cont_label, true);\n   add_stmt (c_end_compound_stmt (loc, block, flag_isoc99));\n@@ -5820,7 +5822,7 @@ c_parser_while_statement (c_parser *parser, bool ivdep, bool *if_p)\n     = get_token_indent_info (c_parser_peek_token (parser));\n   warn_for_misleading_indentation (while_tinfo, body_tinfo, next_tinfo);\n \n-  if (next_tinfo.type != CPP_SEMICOLON)\n+  if (next_tinfo.type != CPP_SEMICOLON && !open_brace)\n     warn_for_multistatement_macros (loc_after_labels, next_tinfo.location,\n \t\t\t\t    while_tinfo.location, RID_WHILE);\n \n@@ -6109,6 +6111,7 @@ c_parser_for_statement (c_parser *parser, bool ivdep, bool *if_p)\n     = get_token_indent_info (c_parser_peek_token (parser));\n \n   location_t loc_after_labels;\n+  bool open_brace = c_parser_next_token_is (parser, CPP_OPEN_BRACE);\n   body = c_parser_c99_block_statement (parser, if_p, &loc_after_labels);\n \n   if (is_foreach_statement)\n@@ -6122,7 +6125,7 @@ c_parser_for_statement (c_parser *parser, bool ivdep, bool *if_p)\n     = get_token_indent_info (c_parser_peek_token (parser));\n   warn_for_misleading_indentation (for_tinfo, body_tinfo, next_tinfo);\n \n-  if (next_tinfo.type != CPP_SEMICOLON)\n+  if (next_tinfo.type != CPP_SEMICOLON && !open_brace)\n     warn_for_multistatement_macros (loc_after_labels, next_tinfo.location,\n \t\t\t\t    for_tinfo.location, RID_FOR);\n "}, {"sha": "f3a4812308c1822c3966fe96928f0d705902789a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d49718d6ff41cdf8ed6b013b9e099f7ec3541053/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d49718d6ff41cdf8ed6b013b9e099f7ec3541053/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d49718d6ff41cdf8ed6b013b9e099f7ec3541053", "patch": "@@ -1,3 +1,8 @@\n+2017-07-25  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c/81364\n+\t* Wmultistatement-macros-12.c: New test.\n+\n 2017-07-25  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \tPR target/81414"}, {"sha": "ac8915c24b0fa70e5f7975add0d9e4bef15bc8e5", "filename": "gcc/testsuite/c-c++-common/Wmultistatement-macros-12.c", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d49718d6ff41cdf8ed6b013b9e099f7ec3541053/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWmultistatement-macros-12.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d49718d6ff41cdf8ed6b013b9e099f7ec3541053/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWmultistatement-macros-12.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWmultistatement-macros-12.c?ref=d49718d6ff41cdf8ed6b013b9e099f7ec3541053", "patch": "@@ -0,0 +1,43 @@\n+/* PR c/81364 */\n+/* { dg-do compile } */\n+/* { dg-options \"-Wmultistatement-macros\" } */\n+\n+#define FOO0 if (1) { } else\n+#define TST0 \\\n+void bar0 (void) \\\n+{ \\\n+  FOO0 { } /* { dg-bogus \"macro expands to multiple statements\" } */ \\\n+}\n+TST0\n+\n+#define FOO1 for (;;)\n+#define TST1 \\\n+void bar1 (void) \\\n+{ \\\n+  FOO1 { } /* { dg-bogus \"macro expands to multiple statements\" } */ \\\n+}\n+TST1\n+\n+#define FOO2 while (1)\n+#define TST2 \\\n+void bar2 (void) \\\n+{ \\\n+  FOO2 { } /* { dg-bogus \"macro expands to multiple statements\" } */ \\\n+}\n+TST2\n+\n+#define FOO3 switch (1)\n+#define TST3 \\\n+void bar3 (void) \\\n+{ \\\n+  FOO3 { } /* { dg-bogus \"macro expands to multiple statements\" } */ \\\n+}\n+TST3\n+\n+#define FOO4 if (1)\n+#define TST4 \\\n+void bar4 (void) \\\n+{ \\\n+  FOO4 { } /* { dg-bogus \"macro expands to multiple statements\" } */ \\\n+}\n+TST4"}]}