{"sha": "014dcf477d1504e3259a901fc9ebc4f091cf07f6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDE0ZGNmNDc3ZDE1MDRlMzI1OWE5MDFmYzllYmM0ZjA5MWNmMDdmNg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2018-05-02T07:52:08Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2018-05-02T07:52:08Z"}, "message": "re PR target/85582 (wrong code at -O1 and above on x86_64-linux-gnu in 32-bit mode)\n\n\tPR target/85582\n\t* config/i386/i386.md (*ashl<dwi>3_doubleword_mask,\n\t*ashl<dwi>3_doubleword_mask_1, *<shift_insn><dwi>3_doubleword_mask,\n\t*<shift_insn><dwi>3_doubleword_mask_1): If and[sq]i3 is needed, don't\n\tclobber operands[2], instead use a new pseudo.  Formatting fixes.\n\n\t* gcc.c-torture/execute/pr85582-1.c: New test.\n\t* gcc.c-torture/execute/pr85582-2.c: New test.\n\nFrom-SVN: r259825", "tree": {"sha": "d969467ed4a36be70259c7c49832fcb3a9b26c67", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d969467ed4a36be70259c7c49832fcb3a9b26c67"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/014dcf477d1504e3259a901fc9ebc4f091cf07f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/014dcf477d1504e3259a901fc9ebc4f091cf07f6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/014dcf477d1504e3259a901fc9ebc4f091cf07f6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/014dcf477d1504e3259a901fc9ebc4f091cf07f6/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9e4da9b5d5d3d8e14ab1748fafb08c6b9bfcf629", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e4da9b5d5d3d8e14ab1748fafb08c6b9bfcf629", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e4da9b5d5d3d8e14ab1748fafb08c6b9bfcf629"}], "stats": {"total": 124, "additions": 113, "deletions": 11}, "files": [{"sha": "2792c886b67b9b6c208a1fb5eb3bdb8f678e519e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/014dcf477d1504e3259a901fc9ebc4f091cf07f6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/014dcf477d1504e3259a901fc9ebc4f091cf07f6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=014dcf477d1504e3259a901fc9ebc4f091cf07f6", "patch": "@@ -1,3 +1,11 @@\n+2018-05-02  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/85582\n+\t* config/i386/i386.md (*ashl<dwi>3_doubleword_mask,\n+\t*ashl<dwi>3_doubleword_mask_1, *<shift_insn><dwi>3_doubleword_mask,\n+\t*<shift_insn><dwi>3_doubleword_mask_1): If and[sq]i3 is needed, don't\n+\tclobber operands[2], instead use a new pseudo.  Formatting fixes.\n+\n 2018-05-02  Richard Sandiford  <richard.sandiford@linaro.org>\n \n \tPR tree-optimization/85586"}, {"sha": "5913424cfc18791ac9644bad1414b41d892d689c", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 27, "deletions": 11, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/014dcf477d1504e3259a901fc9ebc4f091cf07f6/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/014dcf477d1504e3259a901fc9ebc4f091cf07f6/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=014dcf477d1504e3259a901fc9ebc4f091cf07f6", "patch": "@@ -10366,7 +10366,7 @@\n \t      (match_operand:SI 2 \"register_operand\" \"c\")\n \t      (match_operand:SI 3 \"const_int_operand\")) 0)))\n    (clobber (reg:CC FLAGS_REG))]\n-  \"INTVAL (operands[3]) <= (<MODE_SIZE> * BITS_PER_UNIT)-1\n+  \"INTVAL (operands[3]) <= (<MODE_SIZE> * BITS_PER_UNIT) - 1\n    && can_create_pseudo_p ()\"\n   \"#\"\n   \"&& 1\"\n@@ -10385,8 +10385,12 @@\n \n   operands[8] = GEN_INT (<MODE_SIZE> * BITS_PER_UNIT);\n \n-  if (INTVAL (operands[3]) < (<MODE_SIZE> * BITS_PER_UNIT)-1)\n-    emit_insn (gen_andsi3 (operands[2], operands[2], operands[3]));\n+  if (INTVAL (operands[3]) < (<MODE_SIZE> * BITS_PER_UNIT) - 1)\n+    {\n+      rtx tem = gen_reg_rtx (SImode);\n+      emit_insn (gen_andsi3 (tem, operands[2], operands[3]));\n+      operands[2] = tem;\n+    }\n \n   operands[2] = gen_lowpart (QImode, operands[2]);\n \n@@ -10402,7 +10406,7 @@\n \t    (match_operand:QI 2 \"register_operand\" \"c\")\n \t    (match_operand:QI 3 \"const_int_operand\"))))\n    (clobber (reg:CC FLAGS_REG))]\n-  \"INTVAL (operands[3]) <= (<MODE_SIZE> * BITS_PER_UNIT)-1\n+  \"INTVAL (operands[3]) <= (<MODE_SIZE> * BITS_PER_UNIT) - 1\n    && can_create_pseudo_p ()\"\n   \"#\"\n   \"&& 1\"\n@@ -10421,8 +10425,12 @@\n \n   operands[8] = GEN_INT (<MODE_SIZE> * BITS_PER_UNIT);\n \n-  if (INTVAL (operands[3]) < (<MODE_SIZE> * BITS_PER_UNIT)-1)\n-    emit_insn (gen_andqi3 (operands[2], operands[2], operands[3]));\n+  if (INTVAL (operands[3]) < (<MODE_SIZE> * BITS_PER_UNIT) - 1)\n+    {\n+      rtx tem = gen_reg_rtx (QImode);\n+      emit_insn (gen_andqi3 (tem, operands[2], operands[3]));\n+      operands[2] = tem;\n+    }\n \n   if (!rtx_equal_p (operands[6], operands[7]))\n     emit_move_insn (operands[6], operands[7]);\n@@ -11118,7 +11126,7 @@\n \t      (match_operand:SI 2 \"register_operand\" \"c\")\n \t      (match_operand:SI 3 \"const_int_operand\")) 0)))\n    (clobber (reg:CC FLAGS_REG))]\n-  \"INTVAL (operands[3]) <= (<MODE_SIZE> * BITS_PER_UNIT)-1\n+  \"INTVAL (operands[3]) <= (<MODE_SIZE> * BITS_PER_UNIT) - 1\n    && can_create_pseudo_p ()\"\n   \"#\"\n   \"&& 1\"\n@@ -11138,7 +11146,11 @@\n   operands[8] = GEN_INT (<MODE_SIZE> * BITS_PER_UNIT);\n \n   if (INTVAL (operands[3]) < (<MODE_SIZE> * BITS_PER_UNIT)-1)\n-    emit_insn (gen_andsi3 (operands[2], operands[2], operands[3]));\n+    {\n+      rtx tem = gen_reg_rtx (SImode);\n+      emit_insn (gen_andsi3 (tem, operands[2], operands[3]));\n+      operands[2] = tem;\n+    }\n \n   operands[2] = gen_lowpart (QImode, operands[2]);\n \n@@ -11154,7 +11166,7 @@\n \t    (match_operand:QI 2 \"register_operand\" \"c\")\n \t    (match_operand:QI 3 \"const_int_operand\"))))\n    (clobber (reg:CC FLAGS_REG))]\n-  \"INTVAL (operands[3]) <= (<MODE_SIZE> * BITS_PER_UNIT)-1\n+  \"INTVAL (operands[3]) <= (<MODE_SIZE> * BITS_PER_UNIT) - 1\n    && can_create_pseudo_p ()\"\n   \"#\"\n   \"&& 1\"\n@@ -11173,8 +11185,12 @@\n \n   operands[8] = GEN_INT (<MODE_SIZE> * BITS_PER_UNIT);\n \n-  if (INTVAL (operands[3]) < (<MODE_SIZE> * BITS_PER_UNIT)-1)\n-    emit_insn (gen_andqi3 (operands[2], operands[2], operands[3]));\n+  if (INTVAL (operands[3]) < (<MODE_SIZE> * BITS_PER_UNIT) - 1)\n+    {\n+      rtx tem = gen_reg_rtx (QImode);\n+      emit_insn (gen_andqi3 (tem, operands[2], operands[3]));\n+      operands[2] = tem;\n+    }\n \n   if (!rtx_equal_p (operands[4], operands[5]))\n     emit_move_insn (operands[4], operands[5]);"}, {"sha": "bdbdd17fd463bb9930a63ae6e9ec182ec5565e3a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/014dcf477d1504e3259a901fc9ebc4f091cf07f6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/014dcf477d1504e3259a901fc9ebc4f091cf07f6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=014dcf477d1504e3259a901fc9ebc4f091cf07f6", "patch": "@@ -1,3 +1,9 @@\n+2018-05-02  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/85582\n+\t* gcc.c-torture/execute/pr85582-1.c: New test.\n+\t* gcc.c-torture/execute/pr85582-2.c: New test.\n+\n 2018-05-02  Richard Sandiford  <richard.sandiford@linaro.org>\n \n \tPR tree-optimization/85586"}, {"sha": "2a5c5b1fe26a924db64a7a18385f5994e871154b", "filename": "gcc/testsuite/gcc.c-torture/execute/pr85582-1.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/014dcf477d1504e3259a901fc9ebc4f091cf07f6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr85582-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/014dcf477d1504e3259a901fc9ebc4f091cf07f6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr85582-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr85582-1.c?ref=014dcf477d1504e3259a901fc9ebc4f091cf07f6", "patch": "@@ -0,0 +1,21 @@\n+/* PR target/85582 */\n+\n+int a, b, d = 2, e;\n+long long c = 1;\n+\n+int\n+main ()\n+{\n+  int g = 6;\n+L1:\n+  e = d;\n+  if (a)\n+    goto L1;\n+  g--;\n+  int i = c >> ~(~e | ~g);\n+L2:\n+  c = (b % c) * i;\n+  if (!e)\n+    goto L2;\n+  return 0;\n+}"}, {"sha": "7fd5b55ab28d855d3bdd19c749afa9cbc3dc3d10", "filename": "gcc/testsuite/gcc.c-torture/execute/pr85582-2.c", "status": "added", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/014dcf477d1504e3259a901fc9ebc4f091cf07f6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr85582-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/014dcf477d1504e3259a901fc9ebc4f091cf07f6/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr85582-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr85582-2.c?ref=014dcf477d1504e3259a901fc9ebc4f091cf07f6", "patch": "@@ -0,0 +1,51 @@\n+/* PR target/85582 */\n+\n+#ifdef __SIZEOF_INT128__\n+typedef __int128 S;\n+typedef unsigned __int128 U;\n+#else\n+typedef long long S;\n+typedef unsigned long long U;\n+#endif\n+\n+__attribute__((noipa)) S\n+f1 (S x, int y)\n+{\n+  x = x << (y & 5);\n+  x += y;\n+  return x;\n+}\n+\n+__attribute__((noipa)) S\n+f2 (S x, int y)\n+{\n+  x = x >> (y & 5);\n+  x += y;\n+  return x;\n+}\n+\n+__attribute__((noipa)) U\n+f3 (U x, int y)\n+{\n+  x = x >> (y & 5);\n+  x += y;\n+  return x;\n+}\n+\n+int\n+main ()\n+{\n+  S a = (S) 1 << (sizeof (S) * __CHAR_BIT__ - 7);\n+  S b = f1 (a, 12);\n+  if (b != ((S) 1 << (sizeof (S) * __CHAR_BIT__ - 3)) + 12)\n+    __builtin_abort ();\n+  S c = (U) 1 << (sizeof (S) * __CHAR_BIT__ - 1);\n+  S d = f2 (c, 12);\n+  if ((U) d != ((U) 0x1f << (sizeof (S) * __CHAR_BIT__ - 5)) + 12)\n+    __builtin_abort ();\n+  U e = (U) 1 << (sizeof (U) * __CHAR_BIT__ - 1);\n+  U f = f3 (c, 12);\n+  if (f != ((U) 1 << (sizeof (U) * __CHAR_BIT__ - 5)) + 12)\n+    __builtin_abort ();\n+  return 0;\n+}"}]}