{"sha": "a73b8b59fb0c47fdf8a31f812867ec56744ec6a4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTczYjhiNTlmYjBjNDdmZGY4YTMxZjgxMjg2N2VjNTY3NDRlYzZhNA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2012-07-19T20:02:08Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2012-07-19T20:02:08Z"}, "message": "re PR c++/54021 ([c++0x] __builtin_constant_p should be constexpr)\n\n\tPR c++/54021\n\t* call.c (build_cxx_call): Set optimize when folding\n\t__builtin_constant_p in a constexpr function.\n\nFrom-SVN: r189677", "tree": {"sha": "3930abc2d16c552b405d6e4d116fc01675144f2c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3930abc2d16c552b405d6e4d116fc01675144f2c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a73b8b59fb0c47fdf8a31f812867ec56744ec6a4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a73b8b59fb0c47fdf8a31f812867ec56744ec6a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a73b8b59fb0c47fdf8a31f812867ec56744ec6a4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a73b8b59fb0c47fdf8a31f812867ec56744ec6a4/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e1310984b5ea59b3478b7a37d008d1f16c1effde", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1310984b5ea59b3478b7a37d008d1f16c1effde", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e1310984b5ea59b3478b7a37d008d1f16c1effde"}], "stats": {"total": 37, "additions": 36, "deletions": 1}, "files": [{"sha": "649b6561ca8d5ade316d2657d22830ae35e8c5b7", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a73b8b59fb0c47fdf8a31f812867ec56744ec6a4/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a73b8b59fb0c47fdf8a31f812867ec56744ec6a4/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=a73b8b59fb0c47fdf8a31f812867ec56744ec6a4", "patch": "@@ -1,3 +1,9 @@\n+2012-07-19  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/54021\n+\t* call.c (build_cxx_call): Set optimize when folding\n+\t__builtin_constant_p in a constexpr function.\n+\n 2012-07-18  Jason Merrill  <jason@redhat.com>\n \n \t* pt.c (instantiate_decl): Don't recheck substitutions."}, {"sha": "cf50e88e132eb24c8a3908574d3322403cf06274", "filename": "gcc/cp/call.c", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a73b8b59fb0c47fdf8a31f812867ec56744ec6a4/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a73b8b59fb0c47fdf8a31f812867ec56744ec6a4/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=a73b8b59fb0c47fdf8a31f812867ec56744ec6a4", "patch": "@@ -6900,6 +6900,7 @@ tree\n build_cxx_call (tree fn, int nargs, tree *argarray)\n {\n   tree fndecl;\n+  int optimize_sav;\n \n   /* Remember roughly where this call is.  */\n   location_t loc = EXPR_LOC_OR_HERE (fn);\n@@ -6916,8 +6917,15 @@ build_cxx_call (tree fn, int nargs, tree *argarray)\n     return error_mark_node;\n \n   /* Some built-in function calls will be evaluated at compile-time in\n-     fold ().  */\n+     fold ().  Set optimize to 1 when folding __builtin_constant_p inside\n+     a constexpr function so that fold_builtin_1 doesn't fold it to 0.  */\n+  optimize_sav = optimize;\n+  if (!optimize && fndecl && DECL_IS_BUILTIN_CONSTANT_P (fndecl)\n+      && current_function_decl\n+      && DECL_DECLARED_CONSTEXPR_P (current_function_decl))\n+    optimize = 1;\n   fn = fold_if_not_in_template (fn);\n+  optimize = optimize_sav;\n \n   if (VOID_TYPE_P (TREE_TYPE (fn)))\n     return fn;"}, {"sha": "c406d7ecaac6332b383406b8ac40f83d2a35cbef", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a73b8b59fb0c47fdf8a31f812867ec56744ec6a4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a73b8b59fb0c47fdf8a31f812867ec56744ec6a4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a73b8b59fb0c47fdf8a31f812867ec56744ec6a4", "patch": "@@ -1,3 +1,8 @@\n+2012-07-19  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/54021\n+\t* g++.dg/cpp0x/constexpr-builtin2.C: New.\n+\n 2012-07-19  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gnat.dg/discr38.adb: New test."}, {"sha": "dde38f05acded200e892dea993ed7f2a7f7bfb44", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-builtin2.C", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a73b8b59fb0c47fdf8a31f812867ec56744ec6a4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-builtin2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a73b8b59fb0c47fdf8a31f812867ec56744ec6a4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-builtin2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-builtin2.C?ref=a73b8b59fb0c47fdf8a31f812867ec56744ec6a4", "patch": "@@ -0,0 +1,16 @@\n+// PR c++/54021\n+// { dg-do compile { target c++11 } }\n+\n+extern int nonconst_func(int);\n+constexpr int identity(int x) { return x; }\n+constexpr int zero() { return identity(0); }\n+constexpr int one() { return identity(1); }\n+\n+// These are the same.  Only the latter is accepted, though.\n+constexpr int rejected_const_4(int x)\n+{ return __builtin_constant_p(x) ? 4 : nonconst_func(x); }\n+constexpr int accepted_const_4(int x)\n+{ return identity(__builtin_constant_p(x)) ? 4 : nonconst_func(x); }\n+\n+// This is rejected.  I would like it to work.\n+constexpr int four = accepted_const_4(1);"}]}