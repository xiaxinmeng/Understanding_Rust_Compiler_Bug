{"sha": "4563bc4dc63664a64cb9ce6c426c689619c209e4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDU2M2JjNGRjNjM2NjRhNjRjYjljZTZjNDI2YzY4OTYxOWMyMDllNA==", "commit": {"author": {"name": "Christophe Lyon", "email": "christophe.lyon@st.com", "date": "2019-09-10T07:32:41Z"}, "committer": {"name": "Christophe Lyon", "email": "clyon@gcc.gnu.org", "date": "2019-09-10T07:32:41Z"}, "message": "[ARM/FDPIC 01/24] [ARM] FDPIC: Add -mfdpic option support\n\n2019-09-10  Christophe Lyon  <christophe.lyon@st.com>\n\tMicka\u00ebl Gu\u00ean\u00e9  <mickael.guene@st.com>\n\n\t* config/arm/arm.opt: Add -mfdpic option.\n\t* doc/invoke.texi: Add documentation for -mfdpic.\n\n\n\nCo-Authored-By: Micka\u00ebl Gu\u00ean\u00e9 <mickael.guene@st.com>\n\nFrom-SVN: r275561", "tree": {"sha": "24b885eb15d5b3b265161be4b3813ad95b263e8e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/24b885eb15d5b3b265161be4b3813ad95b263e8e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4563bc4dc63664a64cb9ce6c426c689619c209e4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4563bc4dc63664a64cb9ce6c426c689619c209e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4563bc4dc63664a64cb9ce6c426c689619c209e4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4563bc4dc63664a64cb9ce6c426c689619c209e4/comments", "author": null, "committer": null, "parents": [{"sha": "b30ee71a406f6d14265cf5b92b0c650d1d9b5696", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b30ee71a406f6d14265cf5b92b0c650d1d9b5696", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b30ee71a406f6d14265cf5b92b0c650d1d9b5696"}], "stats": {"total": 34, "additions": 33, "deletions": 1}, "files": [{"sha": "8fae4ec0280daa945da5ae9b7f92e769015b0a68", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4563bc4dc63664a64cb9ce6c426c689619c209e4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4563bc4dc63664a64cb9ce6c426c689619c209e4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4563bc4dc63664a64cb9ce6c426c689619c209e4", "patch": "@@ -1,3 +1,9 @@\n+2019-09-10  Christophe Lyon  <christophe.lyon@st.com>\n+\tMicka\u00ebl Gu\u00ean\u00e9  <mickael.guene@st.com>\n+\n+\t* config/arm/arm.opt: Add -mfdpic option.\n+\t* doc/invoke.texi: Add documentation for -mfdpic.\n+\n 2019-09-09  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n \n \t* expmed.c (extract_bit_field): Update function comment"}, {"sha": "545ec49e23186a4832dd3b9d4a0973e37cf56e2e", "filename": "gcc/config/arm/arm.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4563bc4dc63664a64cb9ce6c426c689619c209e4/gcc%2Fconfig%2Farm%2Farm.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4563bc4dc63664a64cb9ce6c426c689619c209e4/gcc%2Fconfig%2Farm%2Farm.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.opt?ref=4563bc4dc63664a64cb9ce6c426c689619c209e4", "patch": "@@ -306,3 +306,7 @@ Cost to assume for a branch insn.\n mgeneral-regs-only\n Target Report RejectNegative Mask(GENERAL_REGS_ONLY) Save\n Generate code which uses the core registers only (r0-r14).\n+\n+mfdpic\n+Target Report Mask(FDPIC)\n+Enable Function Descriptor PIC mode."}, {"sha": "234c1b7cadf9838c5b6d186a1a920174b16b4a8a", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 23, "deletions": 1, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4563bc4dc63664a64cb9ce6c426c689619c209e4/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4563bc4dc63664a64cb9ce6c426c689619c209e4/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=4563bc4dc63664a64cb9ce6c426c689619c209e4", "patch": "@@ -710,7 +710,8 @@ Objective-C and Objective-C++ Dialects}.\n -mrestrict-it @gol\n -mverbose-cost-dump @gol\n -mpure-code @gol\n--mcmse}\n+-mcmse @gol\n+-mfdpic}\n \n @emph{AVR Options}\n @gccoptlist{-mmcu=@var{mcu}  -mabsdata  -maccumulate-args @gol\n@@ -18029,6 +18030,27 @@ MOVT instruction.\n Generate secure code as per the \"ARMv8-M Security Extensions: Requirements on\n Development Tools Engineering Specification\", which can be found on\n @url{http://infocenter.arm.com/help/topic/com.arm.doc.ecm0359818/ECM0359818_armv8m_security_extensions_reqs_on_dev_tools_1_0.pdf}.\n+\n+@item -mfdpic\n+@itemx -mno-fdpic\n+@opindex mfdpic\n+@opindex mno-fdpic\n+Select the FDPIC ABI, which uses 64-bit function descriptors to\n+represent pointers to functions.  When the compiler is configured for\n+@code{arm-*-uclinuxfdpiceabi} targets, this option is on by default\n+and implies @option{-fPIE} if none of the PIC/PIE-related options is\n+provided.  On other targets, it only enables the FDPIC-specific code\n+generation features, and the user should explicitly provide the\n+PIC/PIE-related options as needed.\n+\n+Note that static linking is not supported because it would still\n+involve the dynamic linker when the program self-relocates.  If such\n+behavior is acceptable, use -static and -Wl,-dynamic-linker options.\n+\n+The opposite @option{-mno-fdpic} option is useful (and required) to\n+build the Linux kernel using the same (@code{arm-*-uclinuxfdpiceabi})\n+toolchain as the one used to build the userland programs.\n+\n @end table\n \n @node AVR Options"}]}