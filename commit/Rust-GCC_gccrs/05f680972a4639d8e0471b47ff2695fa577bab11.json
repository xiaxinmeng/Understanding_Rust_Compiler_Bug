{"sha": "05f680972a4639d8e0471b47ff2695fa577bab11", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDVmNjgwOTcyYTQ2MzlkOGUwNDcxYjQ3ZmYyNjk1ZmE1NzdiYWIxMQ==", "commit": {"author": {"name": "David Edelsohn", "email": "edelsohn@gnu.org", "date": "2005-10-07T14:29:29Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2005-10-07T14:29:29Z"}, "message": "rs6000.md (eqsi_power): New.\n\n\t* config/rs6000/rs6000.md (eqsi_power): New.\n\t(neg_eq0si): Add TARGET_POWER to final condition.\n\t(neg_eqsi): Same.\n\nFrom-SVN: r105089", "tree": {"sha": "ceb5cb3788e1d05fc2d278c7231a0fd54e062382", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ceb5cb3788e1d05fc2d278c7231a0fd54e062382"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/05f680972a4639d8e0471b47ff2695fa577bab11", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05f680972a4639d8e0471b47ff2695fa577bab11", "html_url": "https://github.com/Rust-GCC/gccrs/commit/05f680972a4639d8e0471b47ff2695fa577bab11", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05f680972a4639d8e0471b47ff2695fa577bab11/comments", "author": null, "committer": null, "parents": [{"sha": "cb1208528e75472c2f70cf9afa8453d210b8c823", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb1208528e75472c2f70cf9afa8453d210b8c823", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb1208528e75472c2f70cf9afa8453d210b8c823"}], "stats": {"total": 27, "additions": 24, "deletions": 3}, "files": [{"sha": "249eb2153f600ae889cc9c00f7aabad08db1df17", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05f680972a4639d8e0471b47ff2695fa577bab11/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05f680972a4639d8e0471b47ff2695fa577bab11/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=05f680972a4639d8e0471b47ff2695fa577bab11", "patch": "@@ -1,3 +1,9 @@\n+2005-10-07  David Edelsohn  <edelsohn@gnu.org>\n+\n+\t* config/rs6000/rs6000.md (eqsi_power): New.\n+\t(neg_eq0si): Add TARGET_POWER to final condition.\n+\t(neg_eqsi): Same.\n+\n 2005-10-06  Richard Henderson  <rth@redhat.com>\n \n \t* config/rs6000/rs6000.c: Revert last change."}, {"sha": "70a620f5569fe7a89b2a7fdbebd412bb590ac3d9", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 18, "deletions": 3, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05f680972a4639d8e0471b47ff2695fa577bab11/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05f680972a4639d8e0471b47ff2695fa577bab11/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=05f680972a4639d8e0471b47ff2695fa577bab11", "patch": "@@ -11229,6 +11229,21 @@\n     operands[5] = GEN_INT (exact_log2 (GET_MODE_BITSIZE (<MODE>mode)));\n   })\n \n+(define_insn \"*eqsi_power\"\n+  [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r,r,r,r,r\")\n+\t(eq:SI (match_operand:SI 1 \"gpc_reg_operand\" \"%r,r,r,r,r\")\n+\t       (match_operand:SI 2 \"reg_or_cint_operand\" \"r,O,K,L,I\")))\n+   (clobber (match_scratch:SI 3 \"=r,&r,r,r,r\"))]\n+  \"TARGET_POWER\"\n+  \"@\n+   xor %0,%1,%2\\;{sfi|subfic} %3,%0,0\\;{ae|adde} %0,%3,%0\n+   {sfi|subfic} %3,%1,0\\;{ae|adde} %0,%3,%1\n+   {xoril|xori} %0,%1,%b2\\;{sfi|subfic} %3,%0,0\\;{ae|adde} %0,%3,%0\n+   {xoriu|xoris} %0,%1,%u2\\;{sfi|subfic} %3,%0,0\\;{ae|adde} %0,%3,%0\n+   {sfi|subfic} %0,%1,%2\\;{sfi|subfic} %3,%0,0\\;{ae|adde} %0,%3,%0\"\n+  [(set_attr \"type\" \"three,two,three,three,three\")\n+   (set_attr \"length\" \"12,8,12,12,12\")])\n+\n ;; We have insns of the form shown by the first define_insn below.  If\n ;; there is something inside the comparison operation, we must split it.\n (define_split\n@@ -11349,7 +11364,7 @@\n   [(set (match_operand:P 0 \"gpc_reg_operand\" \"=r\")\n \t(neg:P (eq:P (match_operand:P 1 \"gpc_reg_operand\" \"r\")\n \t\t     (const_int 0))))]\n-  \"optimize_size\"\n+  \"optimize_size || TARGET_POWER\"\n   \"{ai|addic} %0,%1,-1\\;{sfe|subfe} %0,%0,%0\"\n   [(set_attr \"type\" \"two\")\n    (set_attr \"length\" \"8\")])\n@@ -11358,9 +11373,9 @@\n   [(set (match_operand:P 0 \"gpc_reg_operand\" \"=r\")\n \t(neg:P (eq:P (match_operand:P 1 \"gpc_reg_operand\" \"%r\")\n \t\t     (match_operand:P 2 \"scc_eq_operand\" \"<scc_eq_op2>\"))))]\n-  \"optimize_size\"\n+  \"optimize_size || TARGET_POWER\"\n   \"#\"\n-  \"optimize_size\"\n+  \"optimize_size || TARGET_POWER\"\n   [(set (match_dup 0) (neg:P (eq:P (match_dup 3) (const_int 0))))]\n   {\n     if (GET_CODE (operands[2]) != CONST_INT || INTVAL (operands[2]) != 0)"}]}