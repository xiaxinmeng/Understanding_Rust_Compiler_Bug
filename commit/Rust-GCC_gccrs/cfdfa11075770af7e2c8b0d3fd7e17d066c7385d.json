{"sha": "cfdfa11075770af7e2c8b0d3fd7e17d066c7385d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2ZkZmExMTA3NTc3MGFmN2UyYzhiMGQzZmQ3ZTE3ZDA2NmM3Mzg1ZA==", "commit": {"author": {"name": "Zack Weinberg", "email": "zack@codesourcery.com", "date": "2004-03-30T19:23:16Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2004-03-30T19:23:16Z"}, "message": "* hashtab.h, splay-tree.h: Use new shorter form of GTY markers.\n\nFrom-SVN: r80092", "tree": {"sha": "e44731ee130634d2645be6d9a6feda7384576183", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e44731ee130634d2645be6d9a6feda7384576183"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cfdfa11075770af7e2c8b0d3fd7e17d066c7385d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cfdfa11075770af7e2c8b0d3fd7e17d066c7385d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cfdfa11075770af7e2c8b0d3fd7e17d066c7385d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cfdfa11075770af7e2c8b0d3fd7e17d066c7385d/comments", "author": null, "committer": null, "parents": [{"sha": "1431042ef1f76baf550557885af9945aa76148e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1431042ef1f76baf550557885af9945aa76148e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1431042ef1f76baf550557885af9945aa76148e8"}], "stats": {"total": 20, "additions": 12, "deletions": 8}, "files": [{"sha": "e415afaaf9b5c4860f13fdb4535be33675797e91", "filename": "include/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfdfa11075770af7e2c8b0d3fd7e17d066c7385d/include%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfdfa11075770af7e2c8b0d3fd7e17d066c7385d/include%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2FChangeLog?ref=cfdfa11075770af7e2c8b0d3fd7e17d066c7385d", "patch": "@@ -1,3 +1,7 @@\n+2004-03-30  Zack Weinberg  <zack@codesourcery.com>\n+\n+\t* hashtab.h, splay-tree.h: Use new shorter form of GTY markers.\n+\n 2004-02-24  Ian Lance Taylor  <ian@wasabisystems.com>\n \n \t* dyn-string.h: Update copyright date."}, {"sha": "1af7368d338bd44cdc462b7ecdb31784c8e70b6b", "filename": "include/hashtab.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfdfa11075770af7e2c8b0d3fd7e17d066c7385d/include%2Fhashtab.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfdfa11075770af7e2c8b0d3fd7e17d066c7385d/include%2Fhashtab.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2Fhashtab.h?ref=cfdfa11075770af7e2c8b0d3fd7e17d066c7385d", "patch": "@@ -99,7 +99,7 @@ struct htab GTY(())\n   htab_del del_f;\n \n   /* Table itself.  */\n-  PTR * GTY ((use_param (\"\"), length (\"%h.size\"))) entries;\n+  PTR * GTY ((use_param, length (\"%h.size\"))) entries;\n \n   /* Current size (in entries) of the hash table */\n   size_t size;\n@@ -123,7 +123,7 @@ struct htab GTY(())\n   htab_free free_f;\n \n   /* Alternate allocate/free functions, which take an extra argument.  */\n-  PTR GTY((skip (\"\"))) alloc_arg;\n+  PTR GTY((skip)) alloc_arg;\n   htab_alloc_with_arg alloc_with_arg_f;\n   htab_free_with_arg free_with_arg_f;\n };"}, {"sha": "e05aeb5afb8444760edef13b15fa3d7327f4add5", "filename": "include/splay-tree.h", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfdfa11075770af7e2c8b0d3fd7e17d066c7385d/include%2Fsplay-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfdfa11075770af7e2c8b0d3fd7e17d066c7385d/include%2Fsplay-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2Fsplay-tree.h?ref=cfdfa11075770af7e2c8b0d3fd7e17d066c7385d", "patch": "@@ -81,21 +81,21 @@ typedef void (*splay_tree_deallocate_fn) PARAMS((void *, void *));\n struct splay_tree_node_s GTY(())\n {\n   /* The key.  */\n-  splay_tree_key GTY ((use_param1 (\"\"))) key;\n+  splay_tree_key GTY ((use_param1)) key;\n \n   /* The value.  */\n-  splay_tree_value GTY ((use_param2 (\"\"))) value;\n+  splay_tree_value GTY ((use_param2)) value;\n \n   /* The left and right children, respectively.  */\n-  splay_tree_node GTY ((use_params (\"\"))) left;\n-  splay_tree_node GTY ((use_params (\"\"))) right;\n+  splay_tree_node GTY ((use_params)) left;\n+  splay_tree_node GTY ((use_params)) right;\n };\n \n /* The splay tree itself.  */\n struct splay_tree_s GTY(())\n {\n   /* The root of the tree.  */\n-  splay_tree_node GTY ((use_params (\"\"))) root;\n+  splay_tree_node GTY ((use_params)) root;\n \n   /* The comparision function.  */\n   splay_tree_compare_fn comp;\n@@ -109,7 +109,7 @@ struct splay_tree_s GTY(())\n   /* Allocate/free functions, and a data pointer to pass to them.  */\n   splay_tree_allocate_fn allocate;\n   splay_tree_deallocate_fn deallocate;\n-  PTR GTY((skip (\"\"))) allocate_data;\n+  PTR GTY((skip)) allocate_data;\n \n };\n typedef struct splay_tree_s *splay_tree;"}]}