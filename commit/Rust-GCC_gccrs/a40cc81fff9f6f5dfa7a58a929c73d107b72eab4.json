{"sha": "a40cc81fff9f6f5dfa7a58a929c73d107b72eab4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTQwY2M4MWZmZjlmNmY1ZGZhN2E1OGE5MjljNzNkMTA3YjcyZWFiNA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2010-06-15T21:05:22Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2010-06-15T21:05:22Z"}, "message": "libstdc++.exp: Set additional_prunes.\n\n\t* testsuite/lib/libstdc++.exp: Set additional_prunes.\n\t(libstdc++-dg-test): Don't prune here.\n\t* testsuite/lib/prune.exp (dg-prune-output): New.\n\t(libstdc++-dg-prune): Rename from prune_g++_output.\n\tAdd a bunch of prunes from gcc's prune.exp.\n\nFrom-SVN: r160812", "tree": {"sha": "fde983759cddf45bf72435acf222798059919f6a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fde983759cddf45bf72435acf222798059919f6a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a40cc81fff9f6f5dfa7a58a929c73d107b72eab4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a40cc81fff9f6f5dfa7a58a929c73d107b72eab4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a40cc81fff9f6f5dfa7a58a929c73d107b72eab4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a40cc81fff9f6f5dfa7a58a929c73d107b72eab4/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e4f7c48321cb916273e0a77c4924c416921a2c52", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4f7c48321cb916273e0a77c4924c416921a2c52", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e4f7c48321cb916273e0a77c4924c416921a2c52"}], "stats": {"total": 149, "additions": 100, "deletions": 49}, "files": [{"sha": "d231ba2a62a2aee95e70124c5070daa08a5457f1", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a40cc81fff9f6f5dfa7a58a929c73d107b72eab4/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a40cc81fff9f6f5dfa7a58a929c73d107b72eab4/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=a40cc81fff9f6f5dfa7a58a929c73d107b72eab4", "patch": "@@ -1,3 +1,47 @@\n+2010-06-15  Jason Merrill  <jason@redhat.com>\n+\n+\t* testsuite/lib/libstdc++.exp: Set additional_prunes.\n+\t(libstdc++-dg-test): Don't prune here.\n+\t* testsuite/lib/prune.exp (dg-prune-output): New.\n+\t(libstdc++-dg-prune): Rename from prune_g++_output.\n+\tAdd a bunch of prunes from gcc's prune.exp.\n+\t* testsuite/18_support/headers/cstdbool/std_c++0x_neg.cc: Remove dg-excess-errors.\n+\t* testsuite/18_support/headers/cstdint/std_c++0x_neg.cc: Likewise.\n+\t* testsuite/19_diagnostics/error_category/cons/copy_neg.cc: Likewise.\n+\t* testsuite/19_diagnostics/headers/system_error/std_c++0x_neg.cc: Likewise.\n+\t* testsuite/20_util/declval/requirements/1_neg.cc: Likewise.\n+\t* testsuite/20_util/duration/requirements/typedefs_neg1.cc: Likewise.\n+\t* testsuite/20_util/duration/requirements/typedefs_neg3.cc: Likewise.\n+\t* testsuite/20_util/headers/type_traits/std_c++0x_neg.cc: Likewise.\n+\t* testsuite/20_util/make_signed/requirements/typedefs_neg.cc: Likewise.\n+\t* testsuite/20_util/make_unsigned/requirements/typedefs_neg.cc: Likewise.\n+\t* testsuite/20_util/ratio/cons/cons_overflow_neg.cc: Likewise.\n+\t* testsuite/20_util/shared_ptr/assign/shared_ptr_neg.cc: Likewise.\n+\t* testsuite/20_util/shared_ptr/cons/43820.cc: Likewise.\n+\t* testsuite/23_containers/headers/array/std_c++0x_neg.cc: Likewise.\n+\t* testsuite/23_containers/headers/tuple/std_c++0x_neg.cc: Likewise.\n+\t* testsuite/23_containers/headers/unordered_map/std_c++0x_neg.cc: Likewise.\n+\t* testsuite/23_containers/headers/unordered_set/std_c++0x_neg.cc: Likewise.\n+\t* testsuite/26_numerics/headers/ccomplex/std_c++0x_neg.cc: Likewise.\n+\t* testsuite/26_numerics/headers/cfenv/std_c++0x_neg.cc: Likewise.\n+\t* testsuite/26_numerics/headers/ctgmath/std_c++0x_neg.cc: Likewise.\n+\t* testsuite/26_numerics/headers/random/std_c++0x_neg.cc: Likewise.\n+\t* testsuite/27_io/headers/cinttypes/std_c++0x_neg.cc: Likewise.\n+\t* testsuite/28_regex/headers/regex/std_c++0x_neg.cc: Likewise.\n+\t* testsuite/29_atomics/atomic/cons/copy_neg.cc: Likewise.\n+\t* testsuite/29_atomics/atomic_integral/operators/decrement_neg.cc: Likewise.\n+\t* testsuite/29_atomics/atomic_integral/operators/increment_neg.cc: Likewise.\n+\t* testsuite/30_threads/headers/condition_variable/std_c++0x_neg.cc: Likewise.\n+\t* testsuite/30_threads/headers/future/std_c++0x_neg.cc: Likewise.\n+\t* testsuite/30_threads/headers/mutex/std_c++0x_neg.cc: Likewise.\n+\t* testsuite/30_threads/headers/thread/std_c++0x_neg.cc: Likewise.\n+\t* testsuite/ext/pb_ds/example/hash_resize_neg.cc: Likewise.\n+\t* testsuite/ext/profile/mutex_extensions.cc: Likewise.\n+\t* testsuite/ext/type_traits/add_unsigned_floating_neg.cc: Likewise.\n+\t* testsuite/ext/type_traits/remove_unsigned_floating_neg.cc: Likewise.\n+\t* testsuite/tr1/2_general_utilities/shared_ptr/assign/shared_ptr_neg.cc: Likewise.\n+\t* testsuite/tr1/2_general_utilities/shared_ptr/cons/43820.cc: Likewise.\n+\n 2010-06-13  Paolo Carlini <paolo.carlini@oracle.com>\n \n \t* include/parallel/base.h (min, max): Mark inline."}, {"sha": "264e1a3692bab60232d7731ed3e912d8bd12eda0", "filename": "libstdc++-v3/testsuite/18_support/headers/cstdbool/std_c++0x_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a40cc81fff9f6f5dfa7a58a929c73d107b72eab4/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fheaders%2Fcstdbool%2Fstd_c%2B%2B0x_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a40cc81fff9f6f5dfa7a58a929c73d107b72eab4/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fheaders%2Fcstdbool%2Fstd_c%2B%2B0x_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fheaders%2Fcstdbool%2Fstd_c%2B%2B0x_neg.cc?ref=a40cc81fff9f6f5dfa7a58a929c73d107b72eab4", "patch": "@@ -18,7 +18,7 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n-#include <cstdbool>  // { dg-excess-errors \"In file included from\" }\n+#include <cstdbool>\n \n // { dg-error \"upcoming ISO\" \"\" { target *-*-* } 31 } \n "}, {"sha": "fdbb1dae515fb3326a88f54a1bea7550859361e0", "filename": "libstdc++-v3/testsuite/18_support/headers/cstdint/std_c++0x_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a40cc81fff9f6f5dfa7a58a929c73d107b72eab4/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fheaders%2Fcstdint%2Fstd_c%2B%2B0x_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a40cc81fff9f6f5dfa7a58a929c73d107b72eab4/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fheaders%2Fcstdint%2Fstd_c%2B%2B0x_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fheaders%2Fcstdint%2Fstd_c%2B%2B0x_neg.cc?ref=a40cc81fff9f6f5dfa7a58a929c73d107b72eab4", "patch": "@@ -18,7 +18,7 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n-#include <cstdint>  // { dg-excess-errors \"In file included from\" }\n+#include <cstdint>\n \n // { dg-error \"upcoming ISO\" \"\" { target *-*-* } 31 } \n "}, {"sha": "3b74f7e52f7f53b77eed53b62eaecb8f9c028dab", "filename": "libstdc++-v3/testsuite/19_diagnostics/error_category/cons/copy_neg.cc", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a40cc81fff9f6f5dfa7a58a929c73d107b72eab4/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Ferror_category%2Fcons%2Fcopy_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a40cc81fff9f6f5dfa7a58a929c73d107b72eab4/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Ferror_category%2Fcons%2Fcopy_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Ferror_category%2Fcons%2Fcopy_neg.cc?ref=a40cc81fff9f6f5dfa7a58a929c73d107b72eab4", "patch": "@@ -27,12 +27,10 @@ int main()\n   bool test __attribute__((unused)) = true;\n \n   __gnu_test::test_category c1;\n-  __gnu_test::test_category c2(c1); \n+  __gnu_test::test_category c2(c1); // { dg-error \"first required here\" }\n \n   return 0;\n }\n \n // { dg-error \"deleted function\" \"\" { target *-*-* } 72 }\n // { dg-error \"used here\" \"\" { target *-*-* } 30 }\n-// { dg-error \"first required here\" \"\" { target *-*-* } 30 }\n-// { dg-excess-errors \"copy constructor\" }"}, {"sha": "46f046d65701ff98c6c71fb9b1acab93cbcd0ada", "filename": "libstdc++-v3/testsuite/19_diagnostics/headers/system_error/std_c++0x_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a40cc81fff9f6f5dfa7a58a929c73d107b72eab4/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Fheaders%2Fsystem_error%2Fstd_c%2B%2B0x_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a40cc81fff9f6f5dfa7a58a929c73d107b72eab4/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Fheaders%2Fsystem_error%2Fstd_c%2B%2B0x_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Fheaders%2Fsystem_error%2Fstd_c%2B%2B0x_neg.cc?ref=a40cc81fff9f6f5dfa7a58a929c73d107b72eab4", "patch": "@@ -17,7 +17,7 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n-#include <system_error>  // { dg-excess-errors \"In file included from\" }\n+#include <system_error>\n \n // { dg-error \"upcoming ISO\" \"\" { target *-*-* } 31 } \n "}, {"sha": "115c32368395affea6faec868f4a3daf4cdfa73e", "filename": "libstdc++-v3/testsuite/20_util/declval/requirements/1_neg.cc", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a40cc81fff9f6f5dfa7a58a929c73d107b72eab4/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fdeclval%2Frequirements%2F1_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a40cc81fff9f6f5dfa7a58a929c73d107b72eab4/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fdeclval%2Frequirements%2F1_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fdeclval%2Frequirements%2F1_neg.cc?ref=a40cc81fff9f6f5dfa7a58a929c73d107b72eab4", "patch": "@@ -20,12 +20,10 @@\n // <http://www.gnu.org/licenses/>.\n \n // { dg-error \"static assertion failed\" \"\" { target *-*-* } 676 }\n-// { dg-error \"instantiated from here\" \"\" { target *-*-* } 30 }\n-// { dg-excess-errors \"In function\" }\n \n #include <utility>\n \n void test01()\n {\n-  std::declval<int>();\n+  std::declval<int>();\t\t// { dg-error \"instantiated from here\" }\n }"}, {"sha": "98a35f105395c81a86be8b47258a041984cd1836", "filename": "libstdc++-v3/testsuite/20_util/duration/requirements/typedefs_neg1.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a40cc81fff9f6f5dfa7a58a929c73d107b72eab4/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fduration%2Frequirements%2Ftypedefs_neg1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a40cc81fff9f6f5dfa7a58a929c73d107b72eab4/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fduration%2Frequirements%2Ftypedefs_neg1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fduration%2Frequirements%2Ftypedefs_neg1.cc?ref=a40cc81fff9f6f5dfa7a58a929c73d107b72eab4", "patch": "@@ -33,4 +33,3 @@ void test01()\n \n // { dg-error \"rep cannot be a duration\" \"\" { target *-*-* } 203 }\n // { dg-error \"instantiated from here\" \"\" { target *-*-* } 31 }\n-// { dg-excess-errors \"In instantiation of\" }"}, {"sha": "86f349319f01a73d3d95ddcb329d48c85db0377e", "filename": "libstdc++-v3/testsuite/20_util/duration/requirements/typedefs_neg3.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a40cc81fff9f6f5dfa7a58a929c73d107b72eab4/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fduration%2Frequirements%2Ftypedefs_neg3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a40cc81fff9f6f5dfa7a58a929c73d107b72eab4/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fduration%2Frequirements%2Ftypedefs_neg3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fduration%2Frequirements%2Ftypedefs_neg3.cc?ref=a40cc81fff9f6f5dfa7a58a929c73d107b72eab4", "patch": "@@ -35,4 +35,3 @@ void test01()\n \n // { dg-error \"period must be positive\" \"\" { target *-*-* } 206 }\n // { dg-error \"instantiated from here\" \"\" { target *-*-* } 33 }\n-// { dg-excess-errors \"In instantiation of\" }"}, {"sha": "e596b6ac6eec1510df5a0fe74a954ce9140332ce", "filename": "libstdc++-v3/testsuite/20_util/headers/type_traits/std_c++0x_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a40cc81fff9f6f5dfa7a58a929c73d107b72eab4/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fheaders%2Ftype_traits%2Fstd_c%2B%2B0x_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a40cc81fff9f6f5dfa7a58a929c73d107b72eab4/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fheaders%2Ftype_traits%2Fstd_c%2B%2B0x_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fheaders%2Ftype_traits%2Fstd_c%2B%2B0x_neg.cc?ref=a40cc81fff9f6f5dfa7a58a929c73d107b72eab4", "patch": "@@ -18,7 +18,7 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n-#include <type_traits>  // { dg-excess-errors \"In file included from\" }\n+#include <type_traits>\n \n // { dg-error \"upcoming ISO\" \"\" { target *-*-* } 31 } \n "}, {"sha": "8953dac16d43f21453dcc56fce748a2c28afd95c", "filename": "libstdc++-v3/testsuite/20_util/make_signed/requirements/typedefs_neg.cc", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a40cc81fff9f6f5dfa7a58a929c73d107b72eab4/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmake_signed%2Frequirements%2Ftypedefs_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a40cc81fff9f6f5dfa7a58a929c73d107b72eab4/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmake_signed%2Frequirements%2Ftypedefs_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmake_signed%2Frequirements%2Ftypedefs_neg.cc?ref=a40cc81fff9f6f5dfa7a58a929c73d107b72eab4", "patch": "@@ -50,6 +50,3 @@ void test01()\n \n // { dg-error \"invalid use of incomplete type\" \"\" { target *-*-* } 639 }\n // { dg-error \"declaration of\" \"\" { target *-*-* } 603 }\n-\n-// { dg-excess-errors \"At global scope\" }\n-// { dg-excess-errors \"In instantiation of\" }"}, {"sha": "e06005dca6c0dcfb9e1abc9bc72f03c428793872", "filename": "libstdc++-v3/testsuite/20_util/make_unsigned/requirements/typedefs_neg.cc", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a40cc81fff9f6f5dfa7a58a929c73d107b72eab4/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmake_unsigned%2Frequirements%2Ftypedefs_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a40cc81fff9f6f5dfa7a58a929c73d107b72eab4/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmake_unsigned%2Frequirements%2Ftypedefs_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fmake_unsigned%2Frequirements%2Ftypedefs_neg.cc?ref=a40cc81fff9f6f5dfa7a58a929c73d107b72eab4", "patch": "@@ -50,6 +50,3 @@ void test01()\n \n // { dg-error \"invalid use of incomplete type\" \"\" { target *-*-* } 562 }\n // { dg-error \"declaration of\" \"\" { target *-*-* } 526 }\n-\n-// { dg-excess-errors \"At global scope\" }\n-// { dg-excess-errors \"In instantiation of\" }"}, {"sha": "eee2644035c2a9bfee8d883c93bddc17be38978d", "filename": "libstdc++-v3/testsuite/20_util/ratio/cons/cons_overflow_neg.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a40cc81fff9f6f5dfa7a58a929c73d107b72eab4/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fratio%2Fcons%2Fcons_overflow_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a40cc81fff9f6f5dfa7a58a929c73d107b72eab4/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fratio%2Fcons%2Fcons_overflow_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fratio%2Fcons%2Fcons_overflow_neg.cc?ref=a40cc81fff9f6f5dfa7a58a929c73d107b72eab4", "patch": "@@ -51,4 +51,3 @@ test04()\n // { dg-error \"instantiated from here\" \"\" { target *-*-* } 46 }\n // { dg-error \"denominator cannot be zero\" \"\" { target *-*-* } 153 }\n // { dg-error \"out of range\" \"\" { target *-*-* } 154 }\n-// { dg-excess-errors \"In instantiation of\" }"}, {"sha": "e0d09dee900171836fc1c6ed5b896c1e08413b23", "filename": "libstdc++-v3/testsuite/20_util/shared_ptr/assign/shared_ptr_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a40cc81fff9f6f5dfa7a58a929c73d107b72eab4/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fassign%2Fshared_ptr_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a40cc81fff9f6f5dfa7a58a929c73d107b72eab4/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fassign%2Fshared_ptr_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fassign%2Fshared_ptr_neg.cc?ref=a40cc81fff9f6f5dfa7a58a929c73d107b72eab4", "patch": "@@ -20,7 +20,7 @@\n \n // 20.6.6.2 Template class shared_ptr [util.smartptr.shared]\n \n-#include <memory>  // { dg-excess-errors \"In file included from\" }\n+#include <memory>\n #include <testsuite_hooks.h>\n \n struct A { };"}, {"sha": "09be153d4c6c2ad971c7c1dd201e991f22636463", "filename": "libstdc++-v3/testsuite/20_util/shared_ptr/cons/43820.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a40cc81fff9f6f5dfa7a58a929c73d107b72eab4/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcons%2F43820.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a40cc81fff9f6f5dfa7a58a929c73d107b72eab4/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcons%2F43820.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcons%2F43820.cc?ref=a40cc81fff9f6f5dfa7a58a929c73d107b72eab4", "patch": "@@ -38,5 +38,3 @@ void test01()\n   // { dg-error \"incomplete\" \"\" { target *-*-* } 657 }\n \n }\n-\n-// { dg-excess-errors \"\" }"}, {"sha": "5d9bf7e0a3f6a162c69e02d9ca3fd791e07b0086", "filename": "libstdc++-v3/testsuite/23_containers/headers/array/std_c++0x_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a40cc81fff9f6f5dfa7a58a929c73d107b72eab4/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fheaders%2Farray%2Fstd_c%2B%2B0x_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a40cc81fff9f6f5dfa7a58a929c73d107b72eab4/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fheaders%2Farray%2Fstd_c%2B%2B0x_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fheaders%2Farray%2Fstd_c%2B%2B0x_neg.cc?ref=a40cc81fff9f6f5dfa7a58a929c73d107b72eab4", "patch": "@@ -18,7 +18,7 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n-#include <array>  // { dg-excess-errors \"In file included from\" }\n+#include <array>\n \n // { dg-error \"upcoming ISO\" \"\" { target *-*-* } 31 } \n "}, {"sha": "266874da23b6d526896978ae6d4919b3e3ce4be5", "filename": "libstdc++-v3/testsuite/23_containers/headers/tuple/std_c++0x_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a40cc81fff9f6f5dfa7a58a929c73d107b72eab4/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fheaders%2Ftuple%2Fstd_c%2B%2B0x_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a40cc81fff9f6f5dfa7a58a929c73d107b72eab4/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fheaders%2Ftuple%2Fstd_c%2B%2B0x_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fheaders%2Ftuple%2Fstd_c%2B%2B0x_neg.cc?ref=a40cc81fff9f6f5dfa7a58a929c73d107b72eab4", "patch": "@@ -18,7 +18,7 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n-#include <tuple>  // { dg-excess-errors \"In file included from\" }\n+#include <tuple>\n \n // { dg-error \"upcoming ISO\" \"\" { target *-*-* } 31 } \n "}, {"sha": "dc85bc50e92799363cd45c08e6deb5d4a29ac2de", "filename": "libstdc++-v3/testsuite/23_containers/headers/unordered_map/std_c++0x_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a40cc81fff9f6f5dfa7a58a929c73d107b72eab4/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fheaders%2Funordered_map%2Fstd_c%2B%2B0x_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a40cc81fff9f6f5dfa7a58a929c73d107b72eab4/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fheaders%2Funordered_map%2Fstd_c%2B%2B0x_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fheaders%2Funordered_map%2Fstd_c%2B%2B0x_neg.cc?ref=a40cc81fff9f6f5dfa7a58a929c73d107b72eab4", "patch": "@@ -18,7 +18,7 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n-#include <unordered_map>  // { dg-excess-errors \"In file included from\" }\n+#include <unordered_map>\n \n // { dg-error \"upcoming ISO\" \"\" { target *-*-* } 31 } \n "}, {"sha": "ab22c39a6ba6d18aa1512da78b63c70c30478d7d", "filename": "libstdc++-v3/testsuite/23_containers/headers/unordered_set/std_c++0x_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a40cc81fff9f6f5dfa7a58a929c73d107b72eab4/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fheaders%2Funordered_set%2Fstd_c%2B%2B0x_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a40cc81fff9f6f5dfa7a58a929c73d107b72eab4/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fheaders%2Funordered_set%2Fstd_c%2B%2B0x_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fheaders%2Funordered_set%2Fstd_c%2B%2B0x_neg.cc?ref=a40cc81fff9f6f5dfa7a58a929c73d107b72eab4", "patch": "@@ -18,7 +18,7 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n-#include <unordered_set>  // { dg-excess-errors \"In file included from\" }\n+#include <unordered_set>\n \n // { dg-error \"upcoming ISO\" \"\" { target *-*-* } 31 } \n "}, {"sha": "d81271ab07aff75ab75994a3d839228e24fe2167", "filename": "libstdc++-v3/testsuite/26_numerics/headers/ccomplex/std_c++0x_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a40cc81fff9f6f5dfa7a58a929c73d107b72eab4/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fheaders%2Fccomplex%2Fstd_c%2B%2B0x_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a40cc81fff9f6f5dfa7a58a929c73d107b72eab4/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fheaders%2Fccomplex%2Fstd_c%2B%2B0x_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fheaders%2Fccomplex%2Fstd_c%2B%2B0x_neg.cc?ref=a40cc81fff9f6f5dfa7a58a929c73d107b72eab4", "patch": "@@ -18,7 +18,7 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n-#include <ccomplex>  // { dg-excess-errors \"In file included from\" }\n+#include <ccomplex>\n \n // { dg-error \"upcoming ISO\" \"\" { target *-*-* } 31 } \n "}, {"sha": "a353da9e82059068595b9b7109b2348615de8dbc", "filename": "libstdc++-v3/testsuite/26_numerics/headers/cfenv/std_c++0x_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a40cc81fff9f6f5dfa7a58a929c73d107b72eab4/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fheaders%2Fcfenv%2Fstd_c%2B%2B0x_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a40cc81fff9f6f5dfa7a58a929c73d107b72eab4/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fheaders%2Fcfenv%2Fstd_c%2B%2B0x_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fheaders%2Fcfenv%2Fstd_c%2B%2B0x_neg.cc?ref=a40cc81fff9f6f5dfa7a58a929c73d107b72eab4", "patch": "@@ -18,7 +18,7 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n-#include <cfenv>  // { dg-excess-errors \"In file included from\" }\n+#include <cfenv>\n \n // { dg-error \"upcoming ISO\" \"\" { target *-*-* } 31 } \n "}, {"sha": "15175885cb405d7f0f3acae5235ab6cb10a5f8d6", "filename": "libstdc++-v3/testsuite/26_numerics/headers/ctgmath/std_c++0x_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a40cc81fff9f6f5dfa7a58a929c73d107b72eab4/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fheaders%2Fctgmath%2Fstd_c%2B%2B0x_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a40cc81fff9f6f5dfa7a58a929c73d107b72eab4/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fheaders%2Fctgmath%2Fstd_c%2B%2B0x_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fheaders%2Fctgmath%2Fstd_c%2B%2B0x_neg.cc?ref=a40cc81fff9f6f5dfa7a58a929c73d107b72eab4", "patch": "@@ -18,7 +18,7 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n-#include <ctgmath>  // { dg-excess-errors \"In file included from\" }\n+#include <ctgmath>\n \n // { dg-error \"upcoming ISO\" \"\" { target *-*-* } 31 } \n "}, {"sha": "41311965aff1a00786577e08224cac22ceb79d7a", "filename": "libstdc++-v3/testsuite/26_numerics/headers/random/std_c++0x_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a40cc81fff9f6f5dfa7a58a929c73d107b72eab4/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fheaders%2Frandom%2Fstd_c%2B%2B0x_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a40cc81fff9f6f5dfa7a58a929c73d107b72eab4/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fheaders%2Frandom%2Fstd_c%2B%2B0x_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fheaders%2Frandom%2Fstd_c%2B%2B0x_neg.cc?ref=a40cc81fff9f6f5dfa7a58a929c73d107b72eab4", "patch": "@@ -18,7 +18,7 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n-#include <random>  // { dg-excess-errors \"In file included from\" }\n+#include <random>\n \n // { dg-error \"upcoming ISO\" \"\" { target *-*-* } 31 } \n "}, {"sha": "b59638fc341e27b70e09834ad7acca72b8a10bdb", "filename": "libstdc++-v3/testsuite/27_io/headers/cinttypes/std_c++0x_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a40cc81fff9f6f5dfa7a58a929c73d107b72eab4/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fheaders%2Fcinttypes%2Fstd_c%2B%2B0x_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a40cc81fff9f6f5dfa7a58a929c73d107b72eab4/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fheaders%2Fcinttypes%2Fstd_c%2B%2B0x_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fheaders%2Fcinttypes%2Fstd_c%2B%2B0x_neg.cc?ref=a40cc81fff9f6f5dfa7a58a929c73d107b72eab4", "patch": "@@ -18,7 +18,7 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n-#include <cinttypes>  // { dg-excess-errors \"In file included from\" }\n+#include <cinttypes>\n \n // { dg-error \"upcoming ISO\" \"\" { target *-*-* } 31 } \n "}, {"sha": "3afec89b710545a106a21b91dedc353fcc88ba1d", "filename": "libstdc++-v3/testsuite/28_regex/headers/regex/std_c++0x_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a40cc81fff9f6f5dfa7a58a929c73d107b72eab4/libstdc%2B%2B-v3%2Ftestsuite%2F28_regex%2Fheaders%2Fregex%2Fstd_c%2B%2B0x_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a40cc81fff9f6f5dfa7a58a929c73d107b72eab4/libstdc%2B%2B-v3%2Ftestsuite%2F28_regex%2Fheaders%2Fregex%2Fstd_c%2B%2B0x_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F28_regex%2Fheaders%2Fregex%2Fstd_c%2B%2B0x_neg.cc?ref=a40cc81fff9f6f5dfa7a58a929c73d107b72eab4", "patch": "@@ -18,7 +18,7 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n-#include <regex>  // { dg-excess-errors \"In file included from\" }\n+#include <regex>\n \n // { dg-error \"upcoming ISO\" \"\" { target *-*-* } 31 } \n "}, {"sha": "d70a66c1ec8a1c2eef6b2bc40464ebd5241971e5", "filename": "libstdc++-v3/testsuite/29_atomics/atomic/cons/copy_neg.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a40cc81fff9f6f5dfa7a58a929c73d107b72eab4/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic%2Fcons%2Fcopy_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a40cc81fff9f6f5dfa7a58a929c73d107b72eab4/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic%2Fcons%2Fcopy_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic%2Fcons%2Fcopy_neg.cc?ref=a40cc81fff9f6f5dfa7a58a929c73d107b72eab4", "patch": "@@ -44,4 +44,3 @@ int main()\n // { dg-error \"deleted function\" \"\" { target *-*-* } 445 }\n // { dg-error \"deleted function\" \"\" { target *-*-* } 463 }\n // { dg-error \"deleted function\" \"\" { target *-*-* } 481 }\n-// { dg-excess-errors \"In member function\" }"}, {"sha": "974c947e66452976b3bdcb2b1abeb4bf8ba0c33c", "filename": "libstdc++-v3/testsuite/29_atomics/atomic_integral/operators/decrement_neg.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a40cc81fff9f6f5dfa7a58a929c73d107b72eab4/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_integral%2Foperators%2Fdecrement_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a40cc81fff9f6f5dfa7a58a929c73d107b72eab4/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_integral%2Foperators%2Fdecrement_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_integral%2Foperators%2Fdecrement_neg.cc?ref=a40cc81fff9f6f5dfa7a58a929c73d107b72eab4", "patch": "@@ -31,4 +31,3 @@ int main()\n // { dg-error \"operator\" \"\" { target *-*-* } 376 }\n // { dg-error \"operator\" \"\" { target *-*-* } 377 }\n // { dg-error \"operator\" \"\" { target *-*-* } 378 }\n-// { dg-excess-errors \"In file included from\" }"}, {"sha": "4927fcf18549409f0f6b73a0c93c2975321be6a0", "filename": "libstdc++-v3/testsuite/29_atomics/atomic_integral/operators/increment_neg.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a40cc81fff9f6f5dfa7a58a929c73d107b72eab4/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_integral%2Foperators%2Fincrement_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a40cc81fff9f6f5dfa7a58a929c73d107b72eab4/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_integral%2Foperators%2Fincrement_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_integral%2Foperators%2Fincrement_neg.cc?ref=a40cc81fff9f6f5dfa7a58a929c73d107b72eab4", "patch": "@@ -31,4 +31,3 @@ int main()\n // { dg-error \"operator\" \"\" { target *-*-* } 354 }\n // { dg-error \"operator\" \"\" { target *-*-* } 355 }\n // { dg-error \"operator\" \"\" { target *-*-* } 356 }\n-// { dg-excess-errors \"In file included from\" }"}, {"sha": "e31e91fa2147937bbb50979f4f9cfe1826c90cc3", "filename": "libstdc++-v3/testsuite/30_threads/headers/condition_variable/std_c++0x_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a40cc81fff9f6f5dfa7a58a929c73d107b72eab4/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fheaders%2Fcondition_variable%2Fstd_c%2B%2B0x_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a40cc81fff9f6f5dfa7a58a929c73d107b72eab4/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fheaders%2Fcondition_variable%2Fstd_c%2B%2B0x_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fheaders%2Fcondition_variable%2Fstd_c%2B%2B0x_neg.cc?ref=a40cc81fff9f6f5dfa7a58a929c73d107b72eab4", "patch": "@@ -18,7 +18,7 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n-#include <condition_variable>  // { dg-excess-errors \"In file included from\" }\n+#include <condition_variable>\n \n // { dg-error \"upcoming ISO\" \"\" { target *-*-* } 31 } \n "}, {"sha": "b9fb18d9dad30023d5009a95be62e0c0696cc9fd", "filename": "libstdc++-v3/testsuite/30_threads/headers/future/std_c++0x_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a40cc81fff9f6f5dfa7a58a929c73d107b72eab4/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fheaders%2Ffuture%2Fstd_c%2B%2B0x_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a40cc81fff9f6f5dfa7a58a929c73d107b72eab4/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fheaders%2Ffuture%2Fstd_c%2B%2B0x_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fheaders%2Ffuture%2Fstd_c%2B%2B0x_neg.cc?ref=a40cc81fff9f6f5dfa7a58a929c73d107b72eab4", "patch": "@@ -18,7 +18,7 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n-#include <future>  // { dg-excess-errors \"In file included from\" }\n+#include <future>\n \n // { dg-error \"upcoming ISO\" \"\" { target *-*-* } 31 } \n "}, {"sha": "ed993d5f83b30143842bb29f926651abf5114ad2", "filename": "libstdc++-v3/testsuite/30_threads/headers/mutex/std_c++0x_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a40cc81fff9f6f5dfa7a58a929c73d107b72eab4/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fheaders%2Fmutex%2Fstd_c%2B%2B0x_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a40cc81fff9f6f5dfa7a58a929c73d107b72eab4/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fheaders%2Fmutex%2Fstd_c%2B%2B0x_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fheaders%2Fmutex%2Fstd_c%2B%2B0x_neg.cc?ref=a40cc81fff9f6f5dfa7a58a929c73d107b72eab4", "patch": "@@ -18,7 +18,7 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n-#include <mutex>  // { dg-excess-errors \"In file included from\" }\n+#include <mutex>\n \n // { dg-error \"upcoming ISO\" \"\" { target *-*-* } 31 } \n "}, {"sha": "d056c023f0fdf584436c0d600b68c788238ef302", "filename": "libstdc++-v3/testsuite/30_threads/headers/thread/std_c++0x_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a40cc81fff9f6f5dfa7a58a929c73d107b72eab4/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fheaders%2Fthread%2Fstd_c%2B%2B0x_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a40cc81fff9f6f5dfa7a58a929c73d107b72eab4/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fheaders%2Fthread%2Fstd_c%2B%2B0x_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fheaders%2Fthread%2Fstd_c%2B%2B0x_neg.cc?ref=a40cc81fff9f6f5dfa7a58a929c73d107b72eab4", "patch": "@@ -20,6 +20,6 @@\n // with this library; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n-#include <thread>  // { dg-excess-errors \"In file included from\" }\n+#include <thread>\n \n // { dg-error \"upcoming ISO\" \"\" { target *-*-* } 31 }"}, {"sha": "9577dfbc033a69b7596cae4434fda452d428cc42", "filename": "libstdc++-v3/testsuite/ext/pb_ds/example/hash_resize_neg.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a40cc81fff9f6f5dfa7a58a929c73d107b72eab4/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fexample%2Fhash_resize_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a40cc81fff9f6f5dfa7a58a929c73d107b72eab4/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fexample%2Fhash_resize_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fexample%2Fhash_resize_neg.cc?ref=a40cc81fff9f6f5dfa7a58a929c73d107b72eab4", "patch": "@@ -61,4 +61,3 @@ int main()\n }\n \n // { dg-error \"invalid\" \"\" { target *-*-* } 187 } \n-// { dg-excess-errors \"member function\" } "}, {"sha": "4b306619ff9fc820e6ddc7e3c2af95c63e4b7e5f", "filename": "libstdc++-v3/testsuite/ext/profile/mutex_extensions.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a40cc81fff9f6f5dfa7a58a929c73d107b72eab4/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fprofile%2Fmutex_extensions.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a40cc81fff9f6f5dfa7a58a929c73d107b72eab4/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fprofile%2Fmutex_extensions.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fprofile%2Fmutex_extensions.cc?ref=a40cc81fff9f6f5dfa7a58a929c73d107b72eab4", "patch": "@@ -23,4 +23,3 @@\n #include <vector>\n \n // { dg-error \"Cannot use -D_GLIBCXX_PROFILE with \" \"\" { target *-*-* } 167 }\n-// { dg-excess-errors \"In file included from\" }"}, {"sha": "de72e141c0c624d9c2596bd1abef8dc974015ce4", "filename": "libstdc++-v3/testsuite/ext/type_traits/add_unsigned_floating_neg.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a40cc81fff9f6f5dfa7a58a929c73d107b72eab4/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Ftype_traits%2Fadd_unsigned_floating_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a40cc81fff9f6f5dfa7a58a929c73d107b72eab4/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Ftype_traits%2Fadd_unsigned_floating_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Ftype_traits%2Fadd_unsigned_floating_neg.cc?ref=a40cc81fff9f6f5dfa7a58a929c73d107b72eab4", "patch": "@@ -36,4 +36,3 @@ int main()\n \n // { dg-error \"instantiated from\" \"\" { target *-*-* } 28 } \n // { dg-error \"no type\" \"\" { target *-*-* } 67 } \n-// { dg-excess-errors \"In instantiation of\" }"}, {"sha": "847beda5bc737b33958c2827e077abeb8923cfc3", "filename": "libstdc++-v3/testsuite/ext/type_traits/remove_unsigned_floating_neg.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a40cc81fff9f6f5dfa7a58a929c73d107b72eab4/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Ftype_traits%2Fremove_unsigned_floating_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a40cc81fff9f6f5dfa7a58a929c73d107b72eab4/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Ftype_traits%2Fremove_unsigned_floating_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Ftype_traits%2Fremove_unsigned_floating_neg.cc?ref=a40cc81fff9f6f5dfa7a58a929c73d107b72eab4", "patch": "@@ -36,4 +36,3 @@ int main()\n \n // { dg-error \"instantiated from\" \"\" { target *-*-* } 28 }\n // { dg-error \"no type\" \"\" { target *-*-* } 110 }\n-// { dg-excess-errors \"In instantiation of\" }"}, {"sha": "33dc120a0b251ec65249e2c671c2528829db3cbe", "filename": "libstdc++-v3/testsuite/lib/libstdc++.exp", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a40cc81fff9f6f5dfa7a58a929c73d107b72eab4/libstdc%2B%2B-v3%2Ftestsuite%2Flib%2Flibstdc%2B%2B.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a40cc81fff9f6f5dfa7a58a929c73d107b72eab4/libstdc%2B%2B-v3%2Ftestsuite%2Flib%2Flibstdc%2B%2B.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Flib%2Flibstdc%2B%2B.exp?ref=a40cc81fff9f6f5dfa7a58a929c73d107b72eab4", "patch": "@@ -374,7 +374,6 @@ proc libstdc++-dg-test { prog do_what extra_tool_flags } {\n     # There is a libstdc++_compile made for us by default (via the tool-\n     # and-target file), but the defaults are lacking in goodness.\n     set comp_output [$select_compile \"$prog\" \"$output_file\" \"$compile_type\" $options];\n-    set comp_output [ prune_g++_output $comp_output ];\n \n     return [list $comp_output $output_file]\n }\n@@ -386,13 +385,16 @@ if { [info procs saved-dg-test] == [list] } {\n     rename dg-test saved-dg-test\n \n     proc dg-test { args } {\n+\tglobal additional_prunes\n \tglobal errorInfo\n \n \tif { [ catch { eval saved-dg-test $args } errmsg ] } {\n \t    set saved_info $errorInfo\n+\t    set additional_prunes \"\"\n \t    unset_timeout_vars\n \t    error $errmsg $saved_info\n \t}\n+\tset additional_prunes \"\"\n \tunset_timeout_vars\n     }\n }\n@@ -1470,3 +1472,5 @@ proc check_v3_target_binary_io { } {\n     verbose \"check_v3_target_binary_io: $et_binary_io\" 2\n     return $et_binary_io\n }\n+\n+set additional_prunes \"\""}, {"sha": "a390878d76ff433645da7dc2dc7c40c65d1ed91b", "filename": "libstdc++-v3/testsuite/lib/prune.exp", "status": "modified", "additions": 29, "deletions": 2, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a40cc81fff9f6f5dfa7a58a929c73d107b72eab4/libstdc%2B%2B-v3%2Ftestsuite%2Flib%2Fprune.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a40cc81fff9f6f5dfa7a58a929c73d107b72eab4/libstdc%2B%2B-v3%2Ftestsuite%2Flib%2Fprune.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Flib%2Fprune.exp?ref=a40cc81fff9f6f5dfa7a58a929c73d107b72eab4", "patch": "@@ -17,18 +17,45 @@\n \n # Prune messages from g++ that aren't useful.\n \n-proc prune_g++_output { text } {\n+# Prune any messages matching ARGS[1] (a regexp) from test output.\n+proc dg-prune-output { args } {\n+    global additional_prunes\n+\n+    if { [llength $args] != 2 } {\n+\terror \"[lindex $args 1]: need one argument\"\n+\treturn\n+    }\n+\n+    lappend additional_prunes [lindex $args 1]\n+}\n+\n+proc libstdc++-dg-prune { system text } {\n+    global additional_prunes\n \n     # Cygwin warns about -ffunction-sections\n     regsub -all \"(^|\\n)\\[^\\n\\]*: -ffunction-sections may affect debugging on some targets\\[^\\n\\]*\" $text \"\" text\n \n     # Remove parts of warnings that refer to location of previous\n     # definitions, etc as these confuse dejagnu\n-    regsub -all \"(^|\\n)\\[^\\n\\]*: In function \\[^\\n\\]*\" $text \"\" text\n+    regsub -all \"(^|\\n)(\\[^\\n\\]*: )?In ((static member |lambda )?function|member|method|(copy )?constructor|destructor|instantiation|program|subroutine|block-data)\\[^\\n\\]*\" $text \"\" text\n+    regsub -all \"(^|\\n)\\[^\\n\\]*(: )?At (top level|global scope):\\[^\\n\\]*\" $text \"\" text\n+    regsub -all \"(^|\\n)\\[^\\n\\]*:   (recursively )?instantiated from \\[^\\n\\]*\" $text \"\" text\n+    regsub -all \"(^|\\n)\\[^\\n\\]*:   . skipping \\[0-9\\]* instantiation contexts \\[^\\n\\]*\" $text \"\" text\n+    regsub -all \"(^|\\n)    inlined from \\[^\\n\\]*\" $text \"\" text\n+    # Why doesn't GCC need these to strip header context?\n+    regsub -all \"(^|\\n)In file included from \\[^\\n\\]*\" $text \"\" text\n+    regsub -all \"(^|\\n)\\[ \\t\\]*from \\[^\\n\\]*\" $text \"\" text\n \n     # Ignore errata warning from IA64 assembler.\n     regsub -all \"(^|\\n)\\[^\\n\\]*: Additional NOP may be necessary to workaround Itanium processor A/B step errata\" $text \"\" text\n     regsub -all \"(^|\\n)\\[^\\n*\\]*: Assembler messages:\\[^\\n\\]*\" $text \"\" text\n \n+    foreach p $additional_prunes {\n+\tif { [string length $p] > 0 } {\n+\t    # Following regexp matches a complete line containing $p.\n+\t    regsub -all \"(^|\\n)\\[^\\n\\]*$p\\[^\\n\\]*\" $text \"\" text\n+\t}\n+    }\n+\n     return $text\n }"}, {"sha": "490cfc4cce69a906dc54b4d9f284228a922770c6", "filename": "libstdc++-v3/testsuite/tr1/2_general_utilities/shared_ptr/assign/shared_ptr_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a40cc81fff9f6f5dfa7a58a929c73d107b72eab4/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F2_general_utilities%2Fshared_ptr%2Fassign%2Fshared_ptr_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a40cc81fff9f6f5dfa7a58a929c73d107b72eab4/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F2_general_utilities%2Fshared_ptr%2Fassign%2Fshared_ptr_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F2_general_utilities%2Fshared_ptr%2Fassign%2Fshared_ptr_neg.cc?ref=a40cc81fff9f6f5dfa7a58a929c73d107b72eab4", "patch": "@@ -19,7 +19,7 @@\n \n // TR1 2.2.2 Template class shared_ptr [tr.util.smartptr.shared]\n \n-#include <tr1/memory>  // { dg-excess-errors \"In file included from\" }\n+#include <tr1/memory>\n #include <testsuite_hooks.h>\n \n struct A { };"}, {"sha": "a80a2eec85fc25185b2a12374e8e4e023a049dca", "filename": "libstdc++-v3/testsuite/tr1/2_general_utilities/shared_ptr/cons/43820.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a40cc81fff9f6f5dfa7a58a929c73d107b72eab4/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F2_general_utilities%2Fshared_ptr%2Fcons%2F43820.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a40cc81fff9f6f5dfa7a58a929c73d107b72eab4/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F2_general_utilities%2Fshared_ptr%2Fcons%2F43820.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F2_general_utilities%2Fshared_ptr%2Fcons%2F43820.cc?ref=a40cc81fff9f6f5dfa7a58a929c73d107b72eab4", "patch": "@@ -36,5 +36,3 @@ void test01()\n   // { dg-error \"incomplete\" \"\" { target *-*-* } 409 }\n \n }\n-\n-// { dg-excess-errors \"\" }"}]}