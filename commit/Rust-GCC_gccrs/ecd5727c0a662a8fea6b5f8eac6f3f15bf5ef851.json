{"sha": "ecd5727c0a662a8fea6b5f8eac6f3f15bf5ef851", "node_id": "C_kwDOANBUbNoAKGVjZDU3MjdjMGE2NjJhOGZlYTZiNWY4ZWFjNmYzZjE1YmY1ZWY4NTE", "commit": {"author": {"name": "Iain Sandoe", "email": "iain@sandoe.co.uk", "date": "2022-05-02T18:42:49Z"}, "committer": {"name": "Iain Sandoe", "email": "iain@sandoe.co.uk", "date": "2022-05-03T18:38:34Z"}, "message": "Objective-C, NeXT: Adjust symbol marking to match host tools.\n\nCurrent host tools mark some additional symbols as 'no dead strip' and also\nexpose one additional group to the linker.  This does not affect older Darwin\nversions or x86_64, but omitting these changes results in link errors for\naarch64.\n\nSigned-off-by: Iain Sandoe <iain@sandoe.co.uk>\n\ngcc/ChangeLog:\n\n\t* config/darwin.cc (darwin_label_is_anonymous_local_objc_name): Make\n\tprotocol class methods linker-visible.\n\ngcc/objc/ChangeLog:\n\n\t* objc-next-runtime-abi-02.cc (next_runtime_abi_02_protocol_decl): Do\n\tnot dead-strip the runtime meta-data symbols.\n\t(build_v2_classrefs_table): Likewise.\n\t(build_v2_protocol_list_address_table): Likewise.", "tree": {"sha": "511ab0f555e15f7b331bfd02a307fee3c67e6860", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/511ab0f555e15f7b331bfd02a307fee3c67e6860"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ecd5727c0a662a8fea6b5f8eac6f3f15bf5ef851", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ecd5727c0a662a8fea6b5f8eac6f3f15bf5ef851", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ecd5727c0a662a8fea6b5f8eac6f3f15bf5ef851", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ecd5727c0a662a8fea6b5f8eac6f3f15bf5ef851/comments", "author": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "25389f3de489c25a6983db96428a6bf06aedc829", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25389f3de489c25a6983db96428a6bf06aedc829", "html_url": "https://github.com/Rust-GCC/gccrs/commit/25389f3de489c25a6983db96428a6bf06aedc829"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "1b3de338926da5a229c1c712e9afd37ef386fefa", "filename": "gcc/config/darwin.cc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecd5727c0a662a8fea6b5f8eac6f3f15bf5ef851/gcc%2Fconfig%2Fdarwin.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecd5727c0a662a8fea6b5f8eac6f3f15bf5ef851/gcc%2Fconfig%2Fdarwin.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin.cc?ref=ecd5727c0a662a8fea6b5f8eac6f3f15bf5ef851", "patch": "@@ -1936,6 +1936,8 @@ darwin_label_is_anonymous_local_objc_name (const char *name)\n     }\n   else if (startswith ((const char *)p, \"ClassMethods\"))\n     return false;\n+  else if (startswith ((const char *)p, \"ClassProtocols\"))\n+    return false;\n   else if (startswith ((const char *)p, \"Instance\"))\n     {\n       if (p[8] == 'I' || p[8] == 'M')"}, {"sha": "9ea63b189c76bb5fec0582aa3aae62c8911a7791", "filename": "gcc/objc/objc-next-runtime-abi-02.cc", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecd5727c0a662a8fea6b5f8eac6f3f15bf5ef851/gcc%2Fobjc%2Fobjc-next-runtime-abi-02.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecd5727c0a662a8fea6b5f8eac6f3f15bf5ef851/gcc%2Fobjc%2Fobjc-next-runtime-abi-02.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-next-runtime-abi-02.cc?ref=ecd5727c0a662a8fea6b5f8eac6f3f15bf5ef851", "patch": "@@ -1033,6 +1033,7 @@ next_runtime_abi_02_protocol_decl (tree p)\n   else\n     decl = start_var_decl (objc_v2_protocol_template, buf);\n   OBJCMETA (decl, objc_meta, meta_protocol);\n+  DECL_PRESERVE_P (decl) = 1;\n   return decl;\n }\n \n@@ -2115,8 +2116,8 @@ build_v2_classrefs_table (void)\n \t  expr = convert (objc_class_type, build_fold_addr_expr (expr));\n \t}\n       /* The runtime wants this, even if it appears unused, so we must force the\n-\t output.\n-      DECL_PRESERVE_P (decl) = 1; */\n+\t output.  */\n+      DECL_PRESERVE_P (decl) = 1;\n       finish_var_decl (decl, expr);\n     }\n }\n@@ -2318,6 +2319,7 @@ build_v2_protocol_list_address_table (void)\n       expr = convert (objc_protocol_type, build_fold_addr_expr (ref->refdecl));\n       OBJCMETA (decl, objc_meta, meta_label_protocollist);\n       finish_var_decl (decl, expr);\n+      DECL_PRESERVE_P (decl) = 1;\n     }\n \n     /* TODO: delete the vec.  */"}]}