{"sha": "bc5ada84727516c1617c604837fa9c58a4a689db", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmM1YWRhODQ3Mjc1MTZjMTYxN2M2MDQ4MzdmYTljNThhNGE2ODlkYg==", "commit": {"author": {"name": "Kriang Lerdsuwanakij", "email": "lerdsuwa@users.sourceforge.net", "date": "2003-12-18T14:14:48Z"}, "committer": {"name": "Kriang Lerdsuwanakij", "email": "lerdsuwa@gcc.gnu.org", "date": "2003-12-18T14:14:48Z"}, "message": "re PR c++/13262 (\"xxx is private within this context\" when initializing a *self-contained* template class)\n\n\tPR c++/13262\n\t* pt.c (instantiate_decl): Wrap push_nested_class and\n\tpop_nested_class around cp_finish_decl call for static member\n\tvariable.\n\n\t* g++.dg/template/access13.C: New test.\n\nFrom-SVN: r74780", "tree": {"sha": "78873f365080098891486f2efb05027c8a8519ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/78873f365080098891486f2efb05027c8a8519ca"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bc5ada84727516c1617c604837fa9c58a4a689db", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc5ada84727516c1617c604837fa9c58a4a689db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bc5ada84727516c1617c604837fa9c58a4a689db", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc5ada84727516c1617c604837fa9c58a4a689db/comments", "author": null, "committer": null, "parents": [{"sha": "cebf212fa5edc019a992981e7aab39517ac93c3f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cebf212fa5edc019a992981e7aab39517ac93c3f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cebf212fa5edc019a992981e7aab39517ac93c3f"}], "stats": {"total": 38, "additions": 38, "deletions": 0}, "files": [{"sha": "1789243894617789cffc554ab698e139718ad770", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc5ada84727516c1617c604837fa9c58a4a689db/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc5ada84727516c1617c604837fa9c58a4a689db/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=bc5ada84727516c1617c604837fa9c58a4a689db", "patch": "@@ -1,3 +1,10 @@\n+2003-12-18  Kriang Lerdsuwanakij  <lerdsuwa@users.sourceforge.net>\n+\n+\tPR c++/13262\n+\t* pt.c (instantiate_decl): Wrap push_nested_class and\n+\tpop_nested_class around cp_finish_decl call for static member\n+\tvariable.\n+\n 2003-12-18  Giovanni Bajo  <giovannibajo@gcc.gnu.org>\n \n \tPR c++/9154"}, {"sha": "8445dcec53f5b15fd3077485aa22a1a87bab115a", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc5ada84727516c1617c604837fa9c58a4a689db/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc5ada84727516c1617c604837fa9c58a4a689db/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=bc5ada84727516c1617c604837fa9c58a4a689db", "patch": "@@ -11115,10 +11115,20 @@ instantiate_decl (tree d, int defer_ok)\n \t  /* Mark D as instantiated so that recursive calls to\n \t     instantiate_decl do not try to instantiate it again.  */\n \t  DECL_TEMPLATE_INSTANTIATED (d) = 1;\n+\t  /* This is done in analogous to `start_decl'.  It is\n+\t     required for correct access checking.  */\n+\t  push_nested_class (DECL_CONTEXT (d));\n \t  cp_finish_decl (d, \n \t\t\t  (!DECL_INITIALIZED_IN_CLASS_P (d) \n \t\t\t   ? DECL_INITIAL (d) : NULL_TREE),\n \t\t\t  NULL_TREE, 0);\n+\t  /* Normally, pop_nested_class is called by cp_finish_decl\n+\t     above.  But when instantiate_decl is triggered during\n+\t     instantiate_class_template processing, its DECL_CONTEXT\n+\t     is still not completed yet, and pop_nested_class isn't\n+\t     called.  */\n+\t  if (!COMPLETE_TYPE_P (DECL_CONTEXT (d)))\n+\t    pop_nested_class ();\n \t}\n     }\n   else if (TREE_CODE (d) == FUNCTION_DECL)"}, {"sha": "009c8e9c691114d1cf5a08a3cfd805d88ebf7858", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc5ada84727516c1617c604837fa9c58a4a689db/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc5ada84727516c1617c604837fa9c58a4a689db/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=bc5ada84727516c1617c604837fa9c58a4a689db", "patch": "@@ -1,3 +1,8 @@\n+2003-12-18  Kriang Lerdsuwanakij  <lerdsuwa@users.sourceforge.net>\n+\n+\tPR c++/13262\n+\t* g++.dg/template/access13.C: New test.\n+\n 2003-12-18  Ulrich Weigand  <uweigand@de.ibm.com>\n \n \t* gcc.dg/20031216-1.c: New test."}, {"sha": "3a1442bb0e27f7d2b437696817012b2085d076f8", "filename": "gcc/testsuite/g++.dg/template/access13.C", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc5ada84727516c1617c604837fa9c58a4a689db/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Faccess13.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc5ada84727516c1617c604837fa9c58a4a689db/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Faccess13.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Faccess13.C?ref=bc5ada84727516c1617c604837fa9c58a4a689db", "patch": "@@ -0,0 +1,16 @@\n+// { dg-do compile }\n+\n+// Origin: Francesco Monica <fmonica@ce.unipr.it>\n+\n+// PR c++/13262: Access checking during instantiation of static data\n+// member.\n+\n+template <typename T> class Aclass {\n+  private:\n+    Aclass() {}\n+    static Aclass instance;\n+};\n+\n+template <typename T> Aclass<T> Aclass<T>::instance;\n+\n+template class Aclass<int>;"}]}