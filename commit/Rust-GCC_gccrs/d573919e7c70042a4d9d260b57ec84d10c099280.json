{"sha": "d573919e7c70042a4d9d260b57ec84d10c099280", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDU3MzkxOWU3YzcwMDQyYTRkOWQyNjBiNTdlYzg0ZDEwYzA5OTI4MA==", "commit": {"author": {"name": "Georg-Johann Lay", "email": "avr@gjlay.de", "date": "2011-10-21T12:48:04Z"}, "committer": {"name": "Georg-Johann Lay", "email": "gjl@gcc.gnu.org", "date": "2011-10-21T12:48:04Z"}, "message": "re PR target/50820 ([avr] Use EIND consistently)\n\n\tPR target/50820\n\t* config/avr/libgcc.S (__EIND__): New define to 0x3C.\n\t(__tablejump__): Consistently use EIND for indirect jump/call.\n\t(__tablejump_elpm__): Ditto.\n\nFrom-SVN: r180299", "tree": {"sha": "0e6d975520d904cf483abcc29700d8a023b36772", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0e6d975520d904cf483abcc29700d8a023b36772"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d573919e7c70042a4d9d260b57ec84d10c099280", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d573919e7c70042a4d9d260b57ec84d10c099280", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d573919e7c70042a4d9d260b57ec84d10c099280", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d573919e7c70042a4d9d260b57ec84d10c099280/comments", "author": null, "committer": {"login": "sprintersb", "id": 8905355, "node_id": "MDQ6VXNlcjg5MDUzNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/8905355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sprintersb", "html_url": "https://github.com/sprintersb", "followers_url": "https://api.github.com/users/sprintersb/followers", "following_url": "https://api.github.com/users/sprintersb/following{/other_user}", "gists_url": "https://api.github.com/users/sprintersb/gists{/gist_id}", "starred_url": "https://api.github.com/users/sprintersb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sprintersb/subscriptions", "organizations_url": "https://api.github.com/users/sprintersb/orgs", "repos_url": "https://api.github.com/users/sprintersb/repos", "events_url": "https://api.github.com/users/sprintersb/events{/privacy}", "received_events_url": "https://api.github.com/users/sprintersb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8076c3e3e4e29ce18299bc1e5e3e1535993eaf15", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8076c3e3e4e29ce18299bc1e5e3e1535993eaf15", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8076c3e3e4e29ce18299bc1e5e3e1535993eaf15"}], "stats": {"total": 25, "additions": 15, "deletions": 10}, "files": [{"sha": "ac292bc31cba709191369e1d386b3a5d906d0911", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d573919e7c70042a4d9d260b57ec84d10c099280/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d573919e7c70042a4d9d260b57ec84d10c099280/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d573919e7c70042a4d9d260b57ec84d10c099280", "patch": "@@ -1,3 +1,10 @@\n+2011-10-21  Georg-Johann Lay  <avr@gjlay.de>\n+\n+\tPR target/50820\n+\t* config/avr/libgcc.S (__EIND__): New define to 0x3C.\n+\t(__tablejump__): Consistently use EIND for indirect jump/call.\n+\t(__tablejump_elpm__): Ditto.\n+\n 2011-10-21  Bernd Schmidt  <bernds@codesourcery.com>\n \n \t* config/c6x/c6x.md (attr \"op_pattern\"): New."}, {"sha": "8c369c96a7717b79ec09f57655f0ab842bc1e468", "filename": "gcc/config/avr/libgcc.S", "status": "modified", "additions": 8, "deletions": 10, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d573919e7c70042a4d9d260b57ec84d10c099280/gcc%2Fconfig%2Favr%2Flibgcc.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d573919e7c70042a4d9d260b57ec84d10c099280/gcc%2Fconfig%2Favr%2Flibgcc.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Flibgcc.S?ref=d573919e7c70042a4d9d260b57ec84d10c099280", "patch": "@@ -28,6 +28,7 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #define __SP_H__ 0x3e\n #define __SP_L__ 0x3d\n #define __RAMPZ__ 0x3B\n+#define __EIND__  0x3C\n \n /* Most of the functions here are called directly from avr.md\n    patterns, instead of using the standard libcall mechanisms.\n@@ -821,17 +822,12 @@ ENDF __tablejump2__\n \n DEFUN __tablejump__\n #if defined (__AVR_HAVE_LPMX__)\n-#if defined (__AVR_HAVE_EIJMP_EICALL__)\n-\tlpm  __tmp_reg__, Z+\t\t\n-\tpush __tmp_reg__\n-\tlpm  __tmp_reg__, Z\t\t\n-\tpush __tmp_reg__\n-\tpush __zero_reg__\n-\tret\n-#else    \n \tlpm __tmp_reg__, Z+\n \tlpm r31, Z\n \tmov r30, __tmp_reg__\n+#if defined (__AVR_HAVE_EIJMP_EICALL__)\n+\teijmp\n+#else\n \tijmp\n #endif\n \n@@ -842,7 +838,8 @@ DEFUN __tablejump__\n \tlpm\n \tpush r0\n #if defined (__AVR_HAVE_EIJMP_EICALL__)\n-\tpush __zero_reg__\n+\tin   __tmp_reg__, __EIND__\n+\tpush __tmp_reg__\n #endif\n \tret\n #endif /* !HAVE_LPMX */\n@@ -1034,7 +1031,8 @@ DEFUN __tablejump_elpm__\n \telpm\n \tpush\tr0\n #if defined (__AVR_HAVE_EIJMP_EICALL__)\n-        push    __zero_reg__\n+\tin      __tmp_reg__, __EIND__\n+\tpush    __tmp_reg__\n #endif\n \tret\n #endif"}]}