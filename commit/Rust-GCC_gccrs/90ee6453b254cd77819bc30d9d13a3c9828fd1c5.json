{"sha": "90ee6453b254cd77819bc30d9d13a3c9828fd1c5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTBlZTY0NTNiMjU0Y2Q3NzgxOWJjMzBkOWQxM2EzYzk4MjhmZDFjNQ==", "commit": {"author": {"name": "Elizebeth Punnoose", "email": "elizebeth.punnoose@hpe.com", "date": "2016-12-01T23:11:35Z"}, "committer": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2016-12-01T23:11:35Z"}, "message": "re PR fortran/77505 (Negative character length not treated as LEN=0)\n\n2016-12-01  Elizebeth Punnoose  <elizebeth.punnoose@hpe.com>\n\n\tPR fortran/77505\n\t* trans-array.c (trans_array_constructor): Treat negative character\n\tlength as LEN = 0.\n\n\n2016-12-01  Elizebeth Punnoose  <elizebeth.punnoose@hpe.com>\n\n\tPR fortran/77505\n\t* gfortran.dg/char_length_20.f90: New test.\n\t* gfortran.dg/char_length_21.f90: Ditto.\n\nFrom-SVN: r243143", "tree": {"sha": "e978b10c7fd3f6f62136d3ca91e264d1c7042540", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e978b10c7fd3f6f62136d3ca91e264d1c7042540"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/90ee6453b254cd77819bc30d9d13a3c9828fd1c5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90ee6453b254cd77819bc30d9d13a3c9828fd1c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/90ee6453b254cd77819bc30d9d13a3c9828fd1c5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90ee6453b254cd77819bc30d9d13a3c9828fd1c5/comments", "author": {"login": "elizebethp", "id": 77828199, "node_id": "MDQ6VXNlcjc3ODI4MTk5", "avatar_url": "https://avatars.githubusercontent.com/u/77828199?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elizebethp", "html_url": "https://github.com/elizebethp", "followers_url": "https://api.github.com/users/elizebethp/followers", "following_url": "https://api.github.com/users/elizebethp/following{/other_user}", "gists_url": "https://api.github.com/users/elizebethp/gists{/gist_id}", "starred_url": "https://api.github.com/users/elizebethp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elizebethp/subscriptions", "organizations_url": "https://api.github.com/users/elizebethp/orgs", "repos_url": "https://api.github.com/users/elizebethp/repos", "events_url": "https://api.github.com/users/elizebethp/events{/privacy}", "received_events_url": "https://api.github.com/users/elizebethp/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b55e6680dec27409fe0e6dc800500564f1a06b53", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b55e6680dec27409fe0e6dc800500564f1a06b53", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b55e6680dec27409fe0e6dc800500564f1a06b53"}], "stats": {"total": 61, "additions": 61, "deletions": 0}, "files": [{"sha": "20a9f2e2ba75c036e654f09cd5167734921068ac", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90ee6453b254cd77819bc30d9d13a3c9828fd1c5/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90ee6453b254cd77819bc30d9d13a3c9828fd1c5/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=90ee6453b254cd77819bc30d9d13a3c9828fd1c5", "patch": "@@ -1,3 +1,9 @@\n+2016-12-01  Elizebeth Punnoose  <elizebeth.punnoose@hpe.com>\n+\n+\tPR fortran/77505\n+\t* trans-array.c (trans_array_constructor): Treat negative character\n+\tlength as LEN = 0.\n+\n 2016-12-01  Steven G. Kargl  <kargl@gcc.gnu.org>\n \n \tPR fortran/78279"}, {"sha": "ac90a4ba188cda196851041ad88286a4a05ee01a", "filename": "gcc/fortran/trans-array.c", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90ee6453b254cd77819bc30d9d13a3c9828fd1c5/gcc%2Ffortran%2Ftrans-array.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90ee6453b254cd77819bc30d9d13a3c9828fd1c5/gcc%2Ffortran%2Ftrans-array.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-array.c?ref=90ee6453b254cd77819bc30d9d13a3c9828fd1c5", "patch": "@@ -2226,6 +2226,8 @@ trans_array_constructor (gfc_ss * ss, locus * where)\n   gfc_ss_info *ss_info;\n   gfc_expr *expr;\n   gfc_ss *s;\n+  tree neg_len;\n+  char *msg;\n \n   /* Save the old values for nested checking.  */\n   old_first_len = first_len;\n@@ -2271,6 +2273,29 @@ trans_array_constructor (gfc_ss * ss, locus * where)\n \t  gfc_conv_expr_type (&length_se, expr->ts.u.cl->length,\n \t\t\t      gfc_charlen_type_node);\n \t  ss_info->string_length = length_se.expr;\n+\n+\t  /* Check if the character length is negative.  If it is, then\n+\t     set LEN = 0.  */\n+\t  neg_len = fold_build2_loc (input_location, LT_EXPR,\n+\t\t\t\t     boolean_type_node, ss_info->string_length,\n+\t\t\t\t     build_int_cst (gfc_charlen_type_node, 0));\n+\t  /* Print a warning if bounds checking is enabled.  */\n+\t  if (gfc_option.rtcheck & GFC_RTCHECK_BOUNDS)\n+\t    {\n+\t      msg = xasprintf (\"Negative character length treated as LEN = 0\");\n+\t      gfc_trans_runtime_check (false, true, neg_len, &length_se.pre,\n+\t\t\t\t       where, msg);\n+\t      free (msg);\n+\t    }\n+\n+\t  ss_info->string_length\n+\t    = fold_build3_loc (input_location, COND_EXPR,\n+\t\t\t       gfc_charlen_type_node, neg_len,\n+\t\t\t       build_int_cst (gfc_charlen_type_node, 0),\n+\t\t\t       ss_info->string_length);\n+\t  ss_info->string_length = gfc_evaluate_now (ss_info->string_length,\n+\t\t\t\t\t\t     &length_se.pre);\n+\n \t  gfc_add_block_to_block (&outer_loop->pre, &length_se.pre);\n \t  gfc_add_block_to_block (&outer_loop->post, &length_se.post);\n \t}"}, {"sha": "dcbdf565208edba5a69d5ee631a7167d3252db64", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90ee6453b254cd77819bc30d9d13a3c9828fd1c5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90ee6453b254cd77819bc30d9d13a3c9828fd1c5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=90ee6453b254cd77819bc30d9d13a3c9828fd1c5", "patch": "@@ -1,3 +1,9 @@\n+2016-12-01  Elizebeth Punnoose  <elizebeth.punnoose@hpe.com>\n+\n+\tPR fortran/77505\n+\t* gfortran.dg/char_length_20.f90: New test.\n+\t* gfortran.dg/char_length_21.f90: Ditto.\n+\n 2016-12-01  Steven G. Kargl  <kargl@gcc.gnu.org>\n \n \tPR fortran/78279"}, {"sha": "38a19c5b0bae81f5942aeabb5709ee6408823fec", "filename": "gcc/testsuite/gfortran.dg/char_length_20.f90", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90ee6453b254cd77819bc30d9d13a3c9828fd1c5/gcc%2Ftestsuite%2Fgfortran.dg%2Fchar_length_20.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90ee6453b254cd77819bc30d9d13a3c9828fd1c5/gcc%2Ftestsuite%2Fgfortran.dg%2Fchar_length_20.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fchar_length_20.f90?ref=90ee6453b254cd77819bc30d9d13a3c9828fd1c5", "patch": "@@ -0,0 +1,13 @@\n+! { dg-do run }\n+! { dg-options \"-fcheck=bounds\" }\n+program rabbithole\n+   implicit none\n+   character(len=:), allocatable :: text_block(:)\n+   integer i, ii\n+   character(len=10) :: cten='abcdefghij'\n+   character(len=20) :: ctwenty='abcdefghijabcdefghij'\n+   ii = -6\n+   text_block=[ character(len=ii) :: cten, ctwenty ]\n+   if (any(len_trim(text_block) /= 0)) call abort\n+end program rabbithole\n+! { dg-output \"At line 10 of file .*char_length_20.f90.*Fortran runtime warning: Negative character length treated as LEN = 0\" }"}, {"sha": "76b7e8e28e8d96f5143be39afdac374e13de640a", "filename": "gcc/testsuite/gfortran.dg/char_length_21.f90", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90ee6453b254cd77819bc30d9d13a3c9828fd1c5/gcc%2Ftestsuite%2Fgfortran.dg%2Fchar_length_21.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90ee6453b254cd77819bc30d9d13a3c9828fd1c5/gcc%2Ftestsuite%2Fgfortran.dg%2Fchar_length_21.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fchar_length_21.f90?ref=90ee6453b254cd77819bc30d9d13a3c9828fd1c5", "patch": "@@ -0,0 +1,11 @@\n+! { dg-do run }\n+program rabbithole\n+   implicit none\n+   character(len=:), allocatable :: text_block(:)\n+   integer i, ii\n+   character(len=10) :: cten='abcdefghij'\n+   character(len=20) :: ctwenty='abcdefghijabcdefghij'\n+   ii = -6\n+   text_block = [character(len=ii) :: cten, ctwenty]\n+   if (any(len_trim(text_block) /= 0)) call abort\n+end program rabbithole"}]}