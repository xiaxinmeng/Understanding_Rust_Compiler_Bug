{"sha": "69cb258c42f443c2def36a9e6864c7a3538e323c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjljYjI1OGM0MmY0NDNjMmRlZjM2YTllNjg2NGM3YTM1MzhlMzIzYw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-04-29T12:03:14Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-04-29T12:03:14Z"}, "message": "[multiple changes]\n\n2009-04-29  Albert Lee  <lee@adacore.com>\n\n\t* g-socthi-vxworks.ads: Change the spec of Msghdr to match the one in\n\tthe default version of GNAT.Sockets.Thin.\n\n\t* g-socthi-vms.ads: Change the spec of Msghdr to match the one in the\n\tdefault version of GNAT.Sockets.Thin.\n\n2009-04-29  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch6.adb (Analyze_Subprogram_Specification): If the subprogram is\n\tan overriding operation of an inherited interface operation, and the\n\tcontrolling type is a synchronized type, we replace the type with its\n\tcorresponding record, to match the proper signature of an overriding\n\toperation. The same processing must be performed for an access\n\tparameter whose designated type is derived from a synchronized\n\tinterface.\n\nFrom-SVN: r146954", "tree": {"sha": "9f5514a9ff096b956b1cb4f99ac9d21c7f159811", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9f5514a9ff096b956b1cb4f99ac9d21c7f159811"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/69cb258c42f443c2def36a9e6864c7a3538e323c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69cb258c42f443c2def36a9e6864c7a3538e323c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/69cb258c42f443c2def36a9e6864c7a3538e323c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69cb258c42f443c2def36a9e6864c7a3538e323c/comments", "author": null, "committer": null, "parents": [{"sha": "6874160d02e7dbcee6f2539daa6f884f3d958359", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6874160d02e7dbcee6f2539daa6f884f3d958359", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6874160d02e7dbcee6f2539daa6f884f3d958359"}], "stats": {"total": 29, "additions": 23, "deletions": 6}, "files": [{"sha": "6df93351edde486545bcdc6b7f96108f12f49c20", "filename": "gcc/ada/g-socthi-vms.ads", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69cb258c42f443c2def36a9e6864c7a3538e323c/gcc%2Fada%2Fg-socthi-vms.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69cb258c42f443c2def36a9e6864c7a3538e323c/gcc%2Fada%2Fg-socthi-vms.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socthi-vms.ads?ref=69cb258c42f443c2def36a9e6864c7a3538e323c", "patch": "@@ -59,14 +59,15 @@ package GNAT.Sockets.Thin is\n \n    type Msghdr is record\n       Msg_Name       : System.Address;\n-      Msg_Namelen    : C.int;\n+      Msg_Namelen    : C.unsigned;\n       Msg_Iov        : System.Address;\n-      Msg_Iovlen     : C.int;\n+      Msg_Iovlen     : C.size_t;\n       Msg_Control    : System.Address;\n-      Msg_Controllen : C.int;\n+      Msg_Controllen : C.size_t;\n       Msg_Flags      : C.int;\n    end record;\n    pragma Convention (C, Msghdr);\n+   --  This type needs comments???\n \n    function Socket_Errno return Integer renames GNAT.OS_Lib.Errno;\n    --  Returns last socket error number"}, {"sha": "88638f99d0217c47b2ff29cc4ed8dd1d2d5d9fab", "filename": "gcc/ada/g-socthi-vxworks.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69cb258c42f443c2def36a9e6864c7a3538e323c/gcc%2Fada%2Fg-socthi-vxworks.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69cb258c42f443c2def36a9e6864c7a3538e323c/gcc%2Fada%2Fg-socthi-vxworks.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socthi-vxworks.ads?ref=69cb258c42f443c2def36a9e6864c7a3538e323c", "patch": "@@ -59,9 +59,9 @@ package GNAT.Sockets.Thin is\n       Msg_Name       : System.Address;\n       Msg_Namelen    : C.unsigned;\n       Msg_Iov        : System.Address;\n-      Msg_Iovlen     : C.int;\n+      Msg_Iovlen     : C.size_t;\n       Msg_Control    : System.Address;\n-      Msg_Controllen : C.unsigned;\n+      Msg_Controllen : C.size_t;\n       Msg_Flags      : C.int;\n    end record;\n    pragma Convention (C, Msghdr);"}, {"sha": "1e7bf886d6a17e5b5cea6462edf1382c1490e23e", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69cb258c42f443c2def36a9e6864c7a3538e323c/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69cb258c42f443c2def36a9e6864c7a3538e323c/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=69cb258c42f443c2def36a9e6864c7a3538e323c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2008, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -2835,12 +2835,15 @@ package body Sem_Ch6 is\n          --  inherited interface operation, and the controlling type is\n          --  a synchronized type, replace the type with its corresponding\n          --  record, to match the proper signature of an overriding operation.\n+         --  Same processing for an access parameter whose designated type is\n+         --  derived from a synchronized interface.\n \n          if Ada_Version >= Ada_05 then\n             declare\n                Formal     : Entity_Id;\n                Formal_Typ : Entity_Id;\n                Rec_Typ    : Entity_Id;\n+               Desig_Typ  : Entity_Id;\n \n             begin\n                Formal := First_Formal (Designator);\n@@ -2855,6 +2858,19 @@ package body Sem_Ch6 is\n                      if Present (Interfaces (Rec_Typ)) then\n                         Set_Etype (Formal, Rec_Typ);\n                      end if;\n+\n+                  elsif Ekind (Formal_Typ) = E_Anonymous_Access_Type then\n+                     Desig_Typ := Designated_Type (Formal_Typ);\n+\n+                     if Is_Concurrent_Type (Desig_Typ)\n+                       and then Present (Corresponding_Record_Type (Desig_Typ))\n+                     then\n+                        Rec_Typ := Corresponding_Record_Type (Desig_Typ);\n+\n+                        if Present (Interfaces (Rec_Typ)) then\n+                           Set_Directly_Designated_Type (Formal_Typ, Rec_Typ);\n+                        end if;\n+                     end if;\n                   end if;\n \n                   Next_Formal (Formal);"}]}