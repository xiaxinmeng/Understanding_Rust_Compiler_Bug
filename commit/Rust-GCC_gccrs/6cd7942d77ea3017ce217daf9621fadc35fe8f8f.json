{"sha": "6cd7942d77ea3017ce217daf9621fadc35fe8f8f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmNkNzk0MmQ3N2VhMzAxN2NlMjE3ZGFmOTYyMWZhZGMzNWZlOGY4Zg==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2008-08-13T16:20:42Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2008-08-13T16:20:42Z"}, "message": "re PR middle-end/36701 (unaligned access in gcc.c-torture/execute/complex-7.c)\n\n2008-08-13  H.J. Lu  <hongjiu.lu@intel.com>\n\n\tPR middle-end/36701\n\t* expr.c (emit_group_store): Allocate stack temp with the\n\tlargest alignment when copying from register to stack.\n\nFrom-SVN: r139062", "tree": {"sha": "417b7d9431e8a76ff8f86aa88b71d0a3c1031102", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/417b7d9431e8a76ff8f86aa88b71d0a3c1031102"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6cd7942d77ea3017ce217daf9621fadc35fe8f8f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6cd7942d77ea3017ce217daf9621fadc35fe8f8f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6cd7942d77ea3017ce217daf9621fadc35fe8f8f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6cd7942d77ea3017ce217daf9621fadc35fe8f8f/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "99f536cc68422955e36cc1a5f590d790f92f8001", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99f536cc68422955e36cc1a5f590d790f92f8001", "html_url": "https://github.com/Rust-GCC/gccrs/commit/99f536cc68422955e36cc1a5f590d790f92f8001"}], "stats": {"total": 37, "additions": 31, "deletions": 6}, "files": [{"sha": "d74b64aee3a9b76b306caa110e85711845f3f2e4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cd7942d77ea3017ce217daf9621fadc35fe8f8f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cd7942d77ea3017ce217daf9621fadc35fe8f8f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6cd7942d77ea3017ce217daf9621fadc35fe8f8f", "patch": "@@ -1,3 +1,9 @@\n+2008-08-13  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR middle-end/36701\n+\t* expr.c (emit_group_store): Allocate stack temp with the\n+\tlargest alignment when copying from register to stack.\n+\n 2008-08-13  Richard Guenther  <rguenther@suse.de>\n \n \t* tree.h (maybe_fold_offset_to_address): Declare."}, {"sha": "7cc8783e0bca1a13aa0cb8f13d9995aa88e82fc0", "filename": "gcc/expr.c", "status": "modified", "additions": 25, "deletions": 6, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cd7942d77ea3017ce217daf9621fadc35fe8f8f/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cd7942d77ea3017ce217daf9621fadc35fe8f8f/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=6cd7942d77ea3017ce217daf9621fadc35fe8f8f", "patch": "@@ -2074,12 +2074,31 @@ emit_group_store (rtx orig_dst, rtx src, tree type ATTRIBUTE_UNUSED, int ssize)\n \t    }\n \t  else\n \t    {\n-\t      gcc_assert (bytepos == 0 && XVECLEN (src, 0));\n-\t      dest = assign_stack_temp (GET_MODE (dest),\n-\t\t\t\t        GET_MODE_SIZE (GET_MODE (dest)), 0);\n-\t      emit_move_insn (adjust_address (dest, GET_MODE (tmps[i]), bytepos),\n-\t\t\t      tmps[i]);\n-\t      dst = dest;\n+\t      enum machine_mode dest_mode = GET_MODE (dest);\n+\t      enum machine_mode tmp_mode = GET_MODE (tmps[i]);\n+\t      int dest_size = GET_MODE_SIZE (dest_mode);\n+\t      int tmp_size = GET_MODE_SIZE (tmp_mode);\n+\n+\t      gcc_assert (bytepos == 0\n+\t\t\t  && XVECLEN (src, 0)\n+\t\t\t  && dest_size == tmp_size);\n+\n+\t      if (GET_MODE_ALIGNMENT (dest_mode)\n+\t\t  >= GET_MODE_ALIGNMENT (tmp_mode))\n+\t\t{\n+\t\t  dest = assign_stack_temp (dest_mode, dest_size, 0);\n+\t\t  emit_move_insn (adjust_address (dest,\n+\t\t\t\t\t\t  tmp_mode,\n+\t\t\t\t\t\t  bytepos),\n+\t\t\t\t  tmps[i]);\n+\t\t  dst = dest;\n+\t\t}\n+\t      else\n+\t\t{\n+\t\t  dest = assign_stack_temp (tmp_mode, tmp_size, 0);\n+\t\t  emit_move_insn (dest, tmps[i]);\n+\t\t  dst = adjust_address (dest, dest_mode, bytepos);\n+\t\t}\n \t      break;\n \t    }\n \t}"}]}