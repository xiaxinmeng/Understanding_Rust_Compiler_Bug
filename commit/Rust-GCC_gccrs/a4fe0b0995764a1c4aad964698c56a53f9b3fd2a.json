{"sha": "a4fe0b0995764a1c4aad964698c56a53f9b3fd2a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTRmZTBiMDk5NTc2NGExYzRhYWQ5NjQ2OThjNTZhNTNmOWIzZmQyYQ==", "commit": {"author": {"name": "Andreas Schwab", "email": "schwab@issan.cs.uni-dortmund.de", "date": "1999-03-16T21:10:35Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1999-03-16T21:10:35Z"}, "message": "cexp.y (yyerror): Call verror to get a usefull error message.\n\n        * cexp.y (yyerror): Call verror to get a usefull error message.\n        * cexp.c: Rebuilt.\n\nFrom-SVN: r25811", "tree": {"sha": "2aef470ab4dd8e881c114b174824ef0d0f2bb44e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2aef470ab4dd8e881c114b174824ef0d0f2bb44e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a4fe0b0995764a1c4aad964698c56a53f9b3fd2a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4fe0b0995764a1c4aad964698c56a53f9b3fd2a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a4fe0b0995764a1c4aad964698c56a53f9b3fd2a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4fe0b0995764a1c4aad964698c56a53f9b3fd2a/comments", "author": null, "committer": null, "parents": [{"sha": "b14a4f5a2860843afe94587a36f01ba8d192e490", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b14a4f5a2860843afe94587a36f01ba8d192e490", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b14a4f5a2860843afe94587a36f01ba8d192e490"}], "stats": {"total": 109, "additions": 55, "deletions": 54}, "files": [{"sha": "26de5b884ca910c7564de66f0dfcafed55fa67b9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4fe0b0995764a1c4aad964698c56a53f9b3fd2a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4fe0b0995764a1c4aad964698c56a53f9b3fd2a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a4fe0b0995764a1c4aad964698c56a53f9b3fd2a", "patch": "@@ -1,5 +1,8 @@\n 1999-03-16  Andreas Schwab  <schwab@issan.cs.uni-dortmund.de>\n \n+\t* cexp.y (yyerror): Call verror to get a usefull error message.\n+\t* cexp.c: Rebuilt.\n+\n \t* .gdbinit: Move command to put breakpoint at abort to end of file\n \tso that gdb does not bail out early.\n "}, {"sha": "ed318a9e3e4fb9d4948ac02163fba61c474a4bf7", "filename": "gcc/cexp.c", "status": "modified", "additions": 50, "deletions": 51, "changes": 101, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4fe0b0995764a1c4aad964698c56a53f9b3fd2a/gcc%2Fcexp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4fe0b0995764a1c4aad964698c56a53f9b3fd2a/gcc%2Fcexp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcexp.c?ref=a4fe0b0995764a1c4aad964698c56a53f9b3fd2a", "patch": "@@ -133,6 +133,7 @@ HOST_WIDEST_INT parse_escape PROTO((char **, HOST_WIDEST_INT));\n int check_assertion PROTO((U_CHAR *, int, int, struct arglist *));\n struct hashnode *lookup PROTO((U_CHAR *, int, int));\n void error PVPROTO((const char *, ...)) ATTRIBUTE_PRINTF_1;\n+void verror PROTO((const char *, va_list));\n void pedwarn PVPROTO((const char *, ...)) ATTRIBUTE_PRINTF_1;\n void warning PVPROTO((const char *, ...)) ATTRIBUTE_PRINTF_1;\n \n@@ -145,7 +146,7 @@ static void integer_overflow PROTO((void));\n #define SIGNED (~0)\n #define UNSIGNED 0\n \n-#line 153 \"cexp.y\"\n+#line 154 \"cexp.y\"\n typedef union {\n   struct constant {HOST_WIDEST_INT value; int signedp;} integer;\n   struct name {U_CHAR *address; int length;} name;\n@@ -226,10 +227,10 @@ static const short yyrhs[] = {    35,\n \n #if YYDEBUG != 0\n static const short yyrline[] = { 0,\n-   183,   193,   194,   201,   206,   209,   211,   214,   218,   220,\n-   225,   230,   243,   260,   273,   279,   285,   291,   297,   300,\n-   303,   310,   317,   324,   331,   334,   337,   340,   343,   346,\n-   349,   352,   354,   357,   360,   362,   364,   372,   374,   387\n+   184,   194,   195,   202,   207,   210,   212,   215,   219,   221,\n+   226,   231,   244,   261,   274,   280,   286,   292,   298,   301,\n+   304,   311,   318,   325,   332,   335,   338,   341,   344,   347,\n+   350,   353,   355,   358,   361,   363,   365,   373,   375,   388\n };\n #endif\n \n@@ -335,7 +336,7 @@ static const short yycheck[] = {     4,\n     26,    27,    23,    24,    25,    26,    27,     0,     9\n };\n /* -*-C-*-  Note some compilers choke on comments on `#line' lines.  */\n-#line 3 \"/usr/local/gnu/share/bison.simple\"\n+#line 3 \"/tmp/sky/share/bison.simple\"\n \n /* Skeleton output parser for bison,\n    Copyright (C) 1984, 1989, 1990 Free Software Foundation, Inc.\n@@ -528,7 +529,7 @@ __yy_memcpy (char *to, char *from, int count)\n #endif\n #endif\n \f\n-#line 196 \"/usr/local/gnu/share/bison.simple\"\n+#line 196 \"/tmp/sky/share/bison.simple\"\n \n /* The user can define YYPARSE_PARAM as the name of an argument to be passed\n    into yyparse.  The argument should have type void *.\n@@ -833,7 +834,7 @@ yyparse(YYPARSE_PARAM_ARG)\n   switch (yyn) {\n \n case 1:\n-#line 184 \"cexp.y\"\n+#line 185 \"cexp.y\"\n {\n \t\t  expression_value = yyvsp[0].integer.value;\n #ifdef TEST_EXP_READER\n@@ -842,55 +843,55 @@ case 1:\n \t\t;\n     break;}\n case 3:\n-#line 195 \"cexp.y\"\n+#line 196 \"cexp.y\"\n { if (pedantic)\n \t\t\t    pedwarn (\"comma operator in operand of `#if'\");\n \t\t\t  yyval.integer = yyvsp[0].integer; ;\n     break;}\n case 4:\n-#line 202 \"cexp.y\"\n+#line 203 \"cexp.y\"\n { yyval.integer.value = - yyvsp[0].integer.value;\n \t\t\t  yyval.integer.signedp = yyvsp[0].integer.signedp;\n \t\t\t  if ((yyval.integer.value & yyvsp[0].integer.value & yyval.integer.signedp) < 0)\n \t\t\t    integer_overflow (); ;\n     break;}\n case 5:\n-#line 207 \"cexp.y\"\n+#line 208 \"cexp.y\"\n { yyval.integer.value = ! yyvsp[0].integer.value;\n \t\t\t  yyval.integer.signedp = SIGNED; ;\n     break;}\n case 6:\n-#line 210 \"cexp.y\"\n+#line 211 \"cexp.y\"\n { yyval.integer = yyvsp[0].integer; ;\n     break;}\n case 7:\n-#line 212 \"cexp.y\"\n+#line 213 \"cexp.y\"\n { yyval.integer.value = ~ yyvsp[0].integer.value;\n \t\t\t  yyval.integer.signedp = yyvsp[0].integer.signedp; ;\n     break;}\n case 8:\n-#line 215 \"cexp.y\"\n+#line 216 \"cexp.y\"\n { yyval.integer.value = check_assertion (yyvsp[0].name.address, yyvsp[0].name.length,\n \t\t\t\t\t\t      0, NULL_PTR);\n \t\t\t  yyval.integer.signedp = SIGNED; ;\n     break;}\n case 9:\n-#line 219 \"cexp.y\"\n+#line 220 \"cexp.y\"\n { keyword_parsing = 1; ;\n     break;}\n case 10:\n-#line 221 \"cexp.y\"\n+#line 222 \"cexp.y\"\n { yyval.integer.value = check_assertion (yyvsp[-4].name.address, yyvsp[-4].name.length,\n \t\t\t\t\t\t      1, yyvsp[-1].keywords);\n \t\t\t  keyword_parsing = 0;\n \t\t\t  yyval.integer.signedp = SIGNED; ;\n     break;}\n case 11:\n-#line 226 \"cexp.y\"\n+#line 227 \"cexp.y\"\n { yyval.integer = yyvsp[-1].integer; ;\n     break;}\n case 12:\n-#line 231 \"cexp.y\"\n+#line 232 \"cexp.y\"\n { yyval.integer.signedp = yyvsp[-2].integer.signedp & yyvsp[0].integer.signedp;\n \t\t\t  if (yyval.integer.signedp)\n \t\t\t    {\n@@ -905,7 +906,7 @@ case 12:\n \t\t\t\t\t* yyvsp[0].integer.value); ;\n     break;}\n case 13:\n-#line 244 \"cexp.y\"\n+#line 245 \"cexp.y\"\n { if (yyvsp[0].integer.value == 0)\n \t\t\t    {\n \t\t\t      if (!skip_evaluation)\n@@ -924,7 +925,7 @@ case 13:\n \t\t\t\t\t/ yyvsp[0].integer.value); ;\n     break;}\n case 14:\n-#line 261 \"cexp.y\"\n+#line 262 \"cexp.y\"\n { if (yyvsp[0].integer.value == 0)\n \t\t\t    {\n \t\t\t      if (!skip_evaluation)\n@@ -939,49 +940,49 @@ case 14:\n \t\t\t\t\t% yyvsp[0].integer.value); ;\n     break;}\n case 15:\n-#line 274 \"cexp.y\"\n+#line 275 \"cexp.y\"\n { yyval.integer.value = yyvsp[-2].integer.value + yyvsp[0].integer.value;\n \t\t\t  yyval.integer.signedp = yyvsp[-2].integer.signedp & yyvsp[0].integer.signedp;\n \t\t\t  if (overflow_sum_sign (yyvsp[-2].integer.value, yyvsp[0].integer.value,\n \t\t\t\t\t\t yyval.integer.value, yyval.integer.signedp))\n \t\t\t    integer_overflow (); ;\n     break;}\n case 16:\n-#line 280 \"cexp.y\"\n+#line 281 \"cexp.y\"\n { yyval.integer.value = yyvsp[-2].integer.value - yyvsp[0].integer.value;\n \t\t\t  yyval.integer.signedp = yyvsp[-2].integer.signedp & yyvsp[0].integer.signedp;\n \t\t\t  if (overflow_sum_sign (yyval.integer.value, yyvsp[0].integer.value,\n \t\t\t\t\t\t yyvsp[-2].integer.value, yyval.integer.signedp))\n \t\t\t    integer_overflow (); ;\n     break;}\n case 17:\n-#line 286 \"cexp.y\"\n+#line 287 \"cexp.y\"\n { yyval.integer.signedp = yyvsp[-2].integer.signedp;\n \t\t\t  if ((yyvsp[0].integer.value & yyvsp[0].integer.signedp) < 0)\n \t\t\t    yyval.integer.value = right_shift (&yyvsp[-2].integer, -yyvsp[0].integer.value);\n \t\t\t  else\n \t\t\t    yyval.integer.value = left_shift (&yyvsp[-2].integer, yyvsp[0].integer.value); ;\n     break;}\n case 18:\n-#line 292 \"cexp.y\"\n+#line 293 \"cexp.y\"\n { yyval.integer.signedp = yyvsp[-2].integer.signedp;\n \t\t\t  if ((yyvsp[0].integer.value & yyvsp[0].integer.signedp) < 0)\n \t\t\t    yyval.integer.value = left_shift (&yyvsp[-2].integer, -yyvsp[0].integer.value);\n \t\t\t  else\n \t\t\t    yyval.integer.value = right_shift (&yyvsp[-2].integer, yyvsp[0].integer.value); ;\n     break;}\n case 19:\n-#line 298 \"cexp.y\"\n+#line 299 \"cexp.y\"\n { yyval.integer.value = (yyvsp[-2].integer.value == yyvsp[0].integer.value);\n \t\t\t  yyval.integer.signedp = SIGNED; ;\n     break;}\n case 20:\n-#line 301 \"cexp.y\"\n+#line 302 \"cexp.y\"\n { yyval.integer.value = (yyvsp[-2].integer.value != yyvsp[0].integer.value);\n \t\t\t  yyval.integer.signedp = SIGNED; ;\n     break;}\n case 21:\n-#line 304 \"cexp.y\"\n+#line 305 \"cexp.y\"\n { yyval.integer.signedp = SIGNED;\n \t\t\t  if (yyvsp[-2].integer.signedp & yyvsp[0].integer.signedp)\n \t\t\t    yyval.integer.value = yyvsp[-2].integer.value <= yyvsp[0].integer.value;\n@@ -990,7 +991,7 @@ case 21:\n \t\t\t\t\t<= yyvsp[0].integer.value); ;\n     break;}\n case 22:\n-#line 311 \"cexp.y\"\n+#line 312 \"cexp.y\"\n { yyval.integer.signedp = SIGNED;\n \t\t\t  if (yyvsp[-2].integer.signedp & yyvsp[0].integer.signedp)\n \t\t\t    yyval.integer.value = yyvsp[-2].integer.value >= yyvsp[0].integer.value;\n@@ -999,7 +1000,7 @@ case 22:\n \t\t\t\t\t>= yyvsp[0].integer.value); ;\n     break;}\n case 23:\n-#line 318 \"cexp.y\"\n+#line 319 \"cexp.y\"\n { yyval.integer.signedp = SIGNED;\n \t\t\t  if (yyvsp[-2].integer.signedp & yyvsp[0].integer.signedp)\n \t\t\t    yyval.integer.value = yyvsp[-2].integer.value < yyvsp[0].integer.value;\n@@ -1008,7 +1009,7 @@ case 23:\n \t\t\t\t\t< yyvsp[0].integer.value); ;\n     break;}\n case 24:\n-#line 325 \"cexp.y\"\n+#line 326 \"cexp.y\"\n { yyval.integer.signedp = SIGNED;\n \t\t\t  if (yyvsp[-2].integer.signedp & yyvsp[0].integer.signedp)\n \t\t\t    yyval.integer.value = yyvsp[-2].integer.value > yyvsp[0].integer.value;\n@@ -1017,76 +1018,76 @@ case 24:\n \t\t\t\t\t> yyvsp[0].integer.value); ;\n     break;}\n case 25:\n-#line 332 \"cexp.y\"\n+#line 333 \"cexp.y\"\n { yyval.integer.value = yyvsp[-2].integer.value & yyvsp[0].integer.value;\n \t\t\t  yyval.integer.signedp = yyvsp[-2].integer.signedp & yyvsp[0].integer.signedp; ;\n     break;}\n case 26:\n-#line 335 \"cexp.y\"\n+#line 336 \"cexp.y\"\n { yyval.integer.value = yyvsp[-2].integer.value ^ yyvsp[0].integer.value;\n \t\t\t  yyval.integer.signedp = yyvsp[-2].integer.signedp & yyvsp[0].integer.signedp; ;\n     break;}\n case 27:\n-#line 338 \"cexp.y\"\n+#line 339 \"cexp.y\"\n { yyval.integer.value = yyvsp[-2].integer.value | yyvsp[0].integer.value;\n \t\t\t  yyval.integer.signedp = yyvsp[-2].integer.signedp & yyvsp[0].integer.signedp; ;\n     break;}\n case 28:\n-#line 341 \"cexp.y\"\n+#line 342 \"cexp.y\"\n { skip_evaluation += !yyvsp[-1].integer.value; ;\n     break;}\n case 29:\n-#line 343 \"cexp.y\"\n+#line 344 \"cexp.y\"\n { skip_evaluation -= !yyvsp[-3].integer.value;\n \t\t\t  yyval.integer.value = (yyvsp[-3].integer.value && yyvsp[0].integer.value);\n \t\t\t  yyval.integer.signedp = SIGNED; ;\n     break;}\n case 30:\n-#line 347 \"cexp.y\"\n+#line 348 \"cexp.y\"\n { skip_evaluation += !!yyvsp[-1].integer.value; ;\n     break;}\n case 31:\n-#line 349 \"cexp.y\"\n+#line 350 \"cexp.y\"\n { skip_evaluation -= !!yyvsp[-3].integer.value;\n \t\t\t  yyval.integer.value = (yyvsp[-3].integer.value || yyvsp[0].integer.value);\n \t\t\t  yyval.integer.signedp = SIGNED; ;\n     break;}\n case 32:\n-#line 353 \"cexp.y\"\n+#line 354 \"cexp.y\"\n { skip_evaluation += !yyvsp[-1].integer.value; ;\n     break;}\n case 33:\n-#line 355 \"cexp.y\"\n+#line 356 \"cexp.y\"\n { skip_evaluation += !!yyvsp[-4].integer.value - !yyvsp[-4].integer.value; ;\n     break;}\n case 34:\n-#line 357 \"cexp.y\"\n+#line 358 \"cexp.y\"\n { skip_evaluation -= !!yyvsp[-6].integer.value;\n \t\t\t  yyval.integer.value = yyvsp[-6].integer.value ? yyvsp[-3].integer.value : yyvsp[0].integer.value;\n \t\t\t  yyval.integer.signedp = yyvsp[-3].integer.signedp & yyvsp[0].integer.signedp; ;\n     break;}\n case 35:\n-#line 361 \"cexp.y\"\n+#line 362 \"cexp.y\"\n { yyval.integer = yylval.integer; ;\n     break;}\n case 36:\n-#line 363 \"cexp.y\"\n+#line 364 \"cexp.y\"\n { yyval.integer = yylval.integer; ;\n     break;}\n case 37:\n-#line 365 \"cexp.y\"\n+#line 366 \"cexp.y\"\n { if (warn_undef && !skip_evaluation)\n \t\t\t    warning (\"`%.*s' is not defined\",\n \t\t\t\t     yyvsp[0].name.length, yyvsp[0].name.address);\n \t\t\t  yyval.integer.value = 0;\n \t\t\t  yyval.integer.signedp = SIGNED; ;\n     break;}\n case 38:\n-#line 373 \"cexp.y\"\n+#line 374 \"cexp.y\"\n { yyval.keywords = 0; ;\n     break;}\n case 39:\n-#line 375 \"cexp.y\"\n+#line 376 \"cexp.y\"\n { struct arglist *temp;\n \t\t\t  yyval.keywords = (struct arglist *) xmalloc (sizeof (struct arglist));\n \t\t\t  yyval.keywords->next = yyvsp[-2].keywords;\n@@ -1101,15 +1102,15 @@ case 39:\n \t\t\t  temp->next->length = 1; ;\n     break;}\n case 40:\n-#line 388 \"cexp.y\"\n+#line 389 \"cexp.y\"\n { yyval.keywords = (struct arglist *) xmalloc (sizeof (struct arglist));\n \t\t\t  yyval.keywords->name = yyvsp[-1].name.address;\n \t\t\t  yyval.keywords->length = yyvsp[-1].name.length;\n \t\t\t  yyval.keywords->next = yyvsp[0].keywords; ;\n     break;}\n }\n    /* the action file gets copied in in place of this dollarsign */\n-#line 498 \"/usr/local/gnu/share/bison.simple\"\n+#line 498 \"/tmp/sky/share/bison.simple\"\n \f\n   yyvsp -= yylen;\n   yyssp -= yylen;\n@@ -1305,7 +1306,7 @@ case 40:\n   yystate = yyn;\n   goto yynewstate;\n }\n-#line 393 \"cexp.y\"\n+#line 394 \"cexp.y\"\n \n \f\n /* During parsing of a C expression, the pointer to the next character\n@@ -1931,9 +1932,7 @@ yyerror VPROTO ((const char * msgid, ...))\n   msgid = va_arg (args, const char *);\n #endif\n \n-  fprintf (stderr, \"error: \");\n-  vfprintf (stderr, _(msgid), args);\n-  fprintf (stderr, \"\\n\");\n+  verror (msgid, args);\n   va_end (args);\n   skip_evaluation = 0;\n   longjmp (parse_return_error, 1);"}, {"sha": "9364ac3a8a0336c14d213a5a8374638572fc8234", "filename": "gcc/cexp.y", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4fe0b0995764a1c4aad964698c56a53f9b3fd2a/gcc%2Fcexp.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4fe0b0995764a1c4aad964698c56a53f9b3fd2a/gcc%2Fcexp.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcexp.y?ref=a4fe0b0995764a1c4aad964698c56a53f9b3fd2a", "patch": "@@ -137,6 +137,7 @@ HOST_WIDEST_INT parse_escape PROTO((char **, HOST_WIDEST_INT));\n int check_assertion PROTO((U_CHAR *, int, int, struct arglist *));\n struct hashnode *lookup PROTO((U_CHAR *, int, int));\n void error PVPROTO((const char *, ...)) ATTRIBUTE_PRINTF_1;\n+void verror PROTO((const char *, va_list));\n void pedwarn PVPROTO((const char *, ...)) ATTRIBUTE_PRINTF_1;\n void warning PVPROTO((const char *, ...)) ATTRIBUTE_PRINTF_1;\n \n@@ -1015,9 +1016,7 @@ yyerror VPROTO ((const char * msgid, ...))\n   msgid = va_arg (args, const char *);\n #endif\n \n-  fprintf (stderr, \"error: \");\n-  vfprintf (stderr, _(msgid), args);\n-  fprintf (stderr, \"\\n\");\n+  verror (msgid, args);\n   va_end (args);\n   skip_evaluation = 0;\n   longjmp (parse_return_error, 1);"}]}