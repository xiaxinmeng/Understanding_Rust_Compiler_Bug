{"sha": "37ebaabde2b88d446369240ae8f03b8e6a284a7b", "node_id": "C_kwDOANBUbNoAKDM3ZWJhYWJkZTJiODhkNDQ2MzY5MjQwYWU4ZjAzYjhlNmEyODRhN2I", "commit": {"author": {"name": "Tamar Christina", "email": "tamar.christina@arm.com", "date": "2022-08-30T06:49:02Z"}, "committer": {"name": "Tamar Christina", "email": "tamar.christina@arm.com", "date": "2022-08-30T06:49:02Z"}, "message": "middle-end: fix min/max phiopts reduction [PR106744]\n\nThis corrects the argument usage to use them in the order that they occur in\nthe comparisons in gimple.\n\ngcc/ChangeLog:\n\n\tPR tree-optimization/106744\n\t* tree-ssa-phiopt.cc (minmax_replacement): Correct arguments.\n\ngcc/testsuite/ChangeLog:\n\n\tPR tree-optimization/106744\n\t* gcc.dg/tree-ssa/minmax-10.c: Make runtime test.\n\t* gcc.dg/tree-ssa/minmax-11.c: Likewise.\n\t* gcc.dg/tree-ssa/minmax-12.c: Likewise.\n\t* gcc.dg/tree-ssa/minmax-13.c: Likewise.\n\t* gcc.dg/tree-ssa/minmax-14.c: Likewise.\n\t* gcc.dg/tree-ssa/minmax-15.c: Likewise.\n\t* gcc.dg/tree-ssa/minmax-16.c: Likewise.\n\t* gcc.dg/tree-ssa/minmax-3.c: Likewise.\n\t* gcc.dg/tree-ssa/minmax-4.c: Likewise.\n\t* gcc.dg/tree-ssa/minmax-5.c: Likewise.\n\t* gcc.dg/tree-ssa/minmax-6.c: Likewise.\n\t* gcc.dg/tree-ssa/minmax-7.c: Likewise.\n\t* gcc.dg/tree-ssa/minmax-8.c: Likewise.\n\t* gcc.dg/tree-ssa/minmax-9.c: Likewise.", "tree": {"sha": "816123da04540cc74381273c073e775aaa8d086c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/816123da04540cc74381273c073e775aaa8d086c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/37ebaabde2b88d446369240ae8f03b8e6a284a7b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37ebaabde2b88d446369240ae8f03b8e6a284a7b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/37ebaabde2b88d446369240ae8f03b8e6a284a7b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37ebaabde2b88d446369240ae8f03b8e6a284a7b/comments", "author": {"login": "TamarChristinaArm", "id": 48126768, "node_id": "MDQ6VXNlcjQ4MTI2NzY4", "avatar_url": "https://avatars.githubusercontent.com/u/48126768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TamarChristinaArm", "html_url": "https://github.com/TamarChristinaArm", "followers_url": "https://api.github.com/users/TamarChristinaArm/followers", "following_url": "https://api.github.com/users/TamarChristinaArm/following{/other_user}", "gists_url": "https://api.github.com/users/TamarChristinaArm/gists{/gist_id}", "starred_url": "https://api.github.com/users/TamarChristinaArm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TamarChristinaArm/subscriptions", "organizations_url": "https://api.github.com/users/TamarChristinaArm/orgs", "repos_url": "https://api.github.com/users/TamarChristinaArm/repos", "events_url": "https://api.github.com/users/TamarChristinaArm/events{/privacy}", "received_events_url": "https://api.github.com/users/TamarChristinaArm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TamarChristinaArm", "id": 48126768, "node_id": "MDQ6VXNlcjQ4MTI2NzY4", "avatar_url": "https://avatars.githubusercontent.com/u/48126768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TamarChristinaArm", "html_url": "https://github.com/TamarChristinaArm", "followers_url": "https://api.github.com/users/TamarChristinaArm/followers", "following_url": "https://api.github.com/users/TamarChristinaArm/following{/other_user}", "gists_url": "https://api.github.com/users/TamarChristinaArm/gists{/gist_id}", "starred_url": "https://api.github.com/users/TamarChristinaArm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TamarChristinaArm/subscriptions", "organizations_url": "https://api.github.com/users/TamarChristinaArm/orgs", "repos_url": "https://api.github.com/users/TamarChristinaArm/repos", "events_url": "https://api.github.com/users/TamarChristinaArm/events{/privacy}", "received_events_url": "https://api.github.com/users/TamarChristinaArm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "368dbb23c5efaf86b2b18945508d379713c0d12c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/368dbb23c5efaf86b2b18945508d379713c0d12c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/368dbb23c5efaf86b2b18945508d379713c0d12c"}], "stats": {"total": 206, "additions": 189, "deletions": 17}, "files": [{"sha": "c9322a17a4af8e01add2f04176805c812af62e07", "filename": "gcc/testsuite/gcc.dg/tree-ssa/minmax-10.c", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37ebaabde2b88d446369240ae8f03b8e6a284a7b/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fminmax-10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37ebaabde2b88d446369240ae8f03b8e6a284a7b/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fminmax-10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fminmax-10.c?ref=37ebaabde2b88d446369240ae8f03b8e6a284a7b", "patch": "@@ -1,8 +1,9 @@\n-/* { dg-do compile } */\n+/* { dg-do run } */\n /* { dg-options \"-O -fdump-tree-optimized\" } */\n \n #include <stdint.h>\n \n+__attribute__ ((noipa, noinline))\n uint8_t three_max (uint8_t xc, uint8_t xm, uint8_t xy) {\n     uint8_t\t xk;\n     xc=~xc;\n@@ -16,5 +17,16 @@ uint8_t three_max (uint8_t xc, uint8_t xm, uint8_t xy) {\n     return xk;\n }\n \n+int\n+main (void)\n+{\n+  volatile uint8_t xy = 255;\n+  volatile uint8_t xm = 0;\n+  volatile uint8_t xc = 127;\n+  if (three_max (xc, xm, xy) != 255)\n+    __builtin_abort ();\n+  return 0;\n+}\n+\n /* { dg-final { scan-tree-dump-times \"MIN_EXPR\" 2 \"optimized\" } } */\n /* { dg-final { scan-tree-dump-times \"= ~\" 1 \"optimized\" } } */"}, {"sha": "b1da41712b342cd7344167a0da91ffd419491391", "filename": "gcc/testsuite/gcc.dg/tree-ssa/minmax-11.c", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37ebaabde2b88d446369240ae8f03b8e6a284a7b/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fminmax-11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37ebaabde2b88d446369240ae8f03b8e6a284a7b/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fminmax-11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fminmax-11.c?ref=37ebaabde2b88d446369240ae8f03b8e6a284a7b", "patch": "@@ -1,8 +1,10 @@\n-/* { dg-do compile } */\n+/* { dg-do run } */\n /* { dg-options \"-O -fdump-tree-optimized\" } */\n \n #include <stdint.h>\n \n+\n+__attribute__ ((noipa, noinline))\n uint8_t three_minmax1 (uint8_t xc, uint8_t xm, uint8_t xy) {\n \tuint8_t\t xk;\n     xc=~xc;\n@@ -16,6 +18,17 @@ uint8_t three_minmax1 (uint8_t xc, uint8_t xm, uint8_t xy) {\n     return xk;\n }\n \n+int\n+main (void)\n+{\n+  volatile uint8_t xy = 255;\n+  volatile uint8_t xm = 0;\n+  volatile uint8_t xc = 127;\n+  if (three_minmax1 (xc, xm, xy) != 0)\n+    __builtin_abort ();\n+  return 0;\n+}\n+\n /* { dg-final { scan-tree-dump-times \"MIN_EXPR\" 1 \"optimized\" } } */\n /* { dg-final { scan-tree-dump-times \"MAX_EXPR\" 1 \"optimized\" } } */\n /* { dg-final { scan-tree-dump-times \"= ~\" 1 \"optimized\" } } */"}, {"sha": "cb9188f90e8e12c6244d559e63723177102177ee", "filename": "gcc/testsuite/gcc.dg/tree-ssa/minmax-12.c", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37ebaabde2b88d446369240ae8f03b8e6a284a7b/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fminmax-12.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37ebaabde2b88d446369240ae8f03b8e6a284a7b/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fminmax-12.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fminmax-12.c?ref=37ebaabde2b88d446369240ae8f03b8e6a284a7b", "patch": "@@ -1,8 +1,9 @@\n-/* { dg-do compile } */\n+/* { dg-do run } */\n /* { dg-options \"-O -fdump-tree-phiopt\" } */\n \n #include <stdint.h>\n \n+__attribute__ ((noinline, noipa))\n uint8_t three_minmax3 (uint8_t xc, uint8_t xm, uint8_t xy) {\n         uint8_t  xk;\n     xc=~xc;\n@@ -16,5 +17,16 @@ uint8_t three_minmax3 (uint8_t xc, uint8_t xm, uint8_t xy) {\n     return xk;\n }\n \n+int\n+main (void)\n+{\n+  volatile uint8_t xy = 255;\n+  volatile uint8_t xm = 0;\n+  volatile uint8_t xc = 127;\n+  if (three_minmax3 (xc, xm, xy) != 0)\n+    __builtin_abort ();\n+  return 0;\n+}\n+\n /* { dg-final { scan-tree-dump-times \"MIN_EXPR\" 1 \"phiopt1\" } } */\n /* { dg-final { scan-tree-dump-times \"MAX_EXPR\" 1 \"phiopt1\" } } */"}, {"sha": "62ba71e8c3f21f1cb33ae2473fd2b30bfdc13c81", "filename": "gcc/testsuite/gcc.dg/tree-ssa/minmax-13.c", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37ebaabde2b88d446369240ae8f03b8e6a284a7b/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fminmax-13.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37ebaabde2b88d446369240ae8f03b8e6a284a7b/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fminmax-13.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fminmax-13.c?ref=37ebaabde2b88d446369240ae8f03b8e6a284a7b", "patch": "@@ -1,8 +1,9 @@\n-/* { dg-do compile } */\n+/* { dg-do run } */\n /* { dg-options \"-O -fdump-tree-phiopt\" } */\n \n #include <stdint.h>\n \n+__attribute__ ((noipa, noinline))\n uint8_t three_minmax2 (uint8_t xc, uint8_t xm, uint8_t xy) {\n \tuint8_t\t xk;\n     xc=~xc;\n@@ -15,5 +16,17 @@ uint8_t three_minmax2 (uint8_t xc, uint8_t xm, uint8_t xy) {\n     }\n     return xk;\n }\n+\n+int\n+main (void)\n+{\n+  volatile uint8_t xy = 255;\n+  volatile uint8_t xm = 127;\n+  volatile uint8_t xc = 0;\n+  if (three_minmax2 (xc, xm, xy) != 255)\n+    __builtin_abort ();\n+  return 0;\n+}\n+\n /* { dg-final { scan-tree-dump-times \"MIN_EXPR\" 1 \"phiopt1\" } } */\n /* { dg-final { scan-tree-dump-times \"MAX_EXPR\" 1 \"phiopt1\" } } */"}, {"sha": "a3ec58460838ebbcfa5451a2471dde07608a38e3", "filename": "gcc/testsuite/gcc.dg/tree-ssa/minmax-14.c", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37ebaabde2b88d446369240ae8f03b8e6a284a7b/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fminmax-14.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37ebaabde2b88d446369240ae8f03b8e6a284a7b/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fminmax-14.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fminmax-14.c?ref=37ebaabde2b88d446369240ae8f03b8e6a284a7b", "patch": "@@ -1,8 +1,9 @@\n-/* { dg-do compile } */\n+/* { dg-do run } */\n /* { dg-options \"-O -fdump-tree-optimized\" } */\n \n #include <stdint.h>\n \n+__attribute__ ((noipa, noinline))\n uint8_t three_minmax11 (uint8_t xc, uint8_t xm, uint8_t xy) {\n         uint8_t  xk;\n     xc=~xc;\n@@ -16,6 +17,17 @@ uint8_t three_minmax11 (uint8_t xc, uint8_t xm, uint8_t xy) {\n     return xk;\n }\n \n+int\n+main (void)\n+{\n+  volatile uint8_t xy = 255;\n+  volatile uint8_t xm = 0;\n+  volatile uint8_t xc = 127;\n+  if (three_minmax11 (xc, xm, xy) != 128)\n+    __builtin_abort ();\n+  return 0;\n+}\n+\n /* { dg-final { scan-tree-dump-times \"MIN_EXPR\" 1 \"optimized\" } } */\n /* { dg-final { scan-tree-dump-times \"MAX_EXPR\" 1 \"optimized\" } } */\n /* { dg-final { scan-tree-dump-times \"= ~\" 1 \"optimized\" } } */"}, {"sha": "8a39871c93890b553dc8d4aed494c2f14f8508fe", "filename": "gcc/testsuite/gcc.dg/tree-ssa/minmax-15.c", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37ebaabde2b88d446369240ae8f03b8e6a284a7b/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fminmax-15.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37ebaabde2b88d446369240ae8f03b8e6a284a7b/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fminmax-15.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fminmax-15.c?ref=37ebaabde2b88d446369240ae8f03b8e6a284a7b", "patch": "@@ -1,10 +1,11 @@\n-/* { dg-do compile } */\n+/* { dg-do run } */\n /* { dg-options \"-O -fdump-tree-phiopt\" } */\n \n #include <stdint.h>\n #include <stdbool.h>\n \n-uint8_t three_min (uint8_t xc, uint8_t xm, uint8_t xy, bool m) {\n+__attribute__ ((noinline, noipa))\n+uint8_t three_min (uint8_t xc, uint8_t xm, uint8_t xy) {\n     uint8_t  xk;\n     if (xc)\n       {\n@@ -17,5 +18,17 @@ uint8_t three_min (uint8_t xc, uint8_t xm, uint8_t xy, bool m) {\n \n     return xk;\n }\n+\n+int\n+main (void)\n+{\n+  volatile uint8_t xy = 255;\n+  volatile uint8_t xm = 0;\n+  volatile uint8_t xc = 127;\n+  if (three_min (xc, xm, xy) != 0)\n+    __builtin_abort ();\n+  return 0;\n+}\n+\n /* { dg-final { scan-tree-dump-times \"MIN_EXPR\" 3 \"phiopt1\" } } */\n /* { dg-final { scan-tree-dump-times \"MAX_EXPR\" 0 \"phiopt1\" } } */"}, {"sha": "4febd092d837542017438bcc4f8554fdb05c4adf", "filename": "gcc/testsuite/gcc.dg/tree-ssa/minmax-16.c", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37ebaabde2b88d446369240ae8f03b8e6a284a7b/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fminmax-16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37ebaabde2b88d446369240ae8f03b8e6a284a7b/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fminmax-16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fminmax-16.c?ref=37ebaabde2b88d446369240ae8f03b8e6a284a7b", "patch": "@@ -1,8 +1,9 @@\n-/* { dg-do compile } */\n+/* { dg-do run } */\n /* { dg-options \"-O -fdump-tree-phiopt -g\" } */\n \n #include <stdint.h>\n \n+__attribute__ ((noipa, noinline))\n uint8_t three_min (uint8_t xc, uint8_t xm, uint8_t xy) {\n \tuint8_t\t xk;\n     if (xc < xm) {\n@@ -13,5 +14,16 @@ uint8_t three_min (uint8_t xc, uint8_t xm, uint8_t xy) {\n     return xk;\n }\n \n+int\n+main (void)\n+{\n+  volatile uint8_t xy = 255;\n+  volatile uint8_t xm = 0;\n+  volatile uint8_t xc = 127;\n+  if (three_min (xc, xm, xy) != 0)\n+    __builtin_abort ();\n+  return 0;\n+}\n+\n /* { dg-final { scan-tree-dump-times \"MIN_EXPR\" 3 \"phiopt1\" } } */\n /* { dg-final { scan-tree-dump-times \"MAX_EXPR\" 0 \"phiopt1\" } } */"}, {"sha": "2af107763469cd16401b618f0e6b556e5ac2b04d", "filename": "gcc/testsuite/gcc.dg/tree-ssa/minmax-3.c", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37ebaabde2b88d446369240ae8f03b8e6a284a7b/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fminmax-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37ebaabde2b88d446369240ae8f03b8e6a284a7b/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fminmax-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fminmax-3.c?ref=37ebaabde2b88d446369240ae8f03b8e6a284a7b", "patch": "@@ -1,8 +1,9 @@\n-/* { dg-do compile } */\n+/* { dg-do run } */\n /* { dg-options \"-O -fdump-tree-phiopt\" } */\n \n #include <stdint.h>\n \n+__attribute__ ((noipa, noinline))\n uint8_t three_min (uint8_t xc, uint8_t xm, uint8_t xy) {\n \tuint8_t\t xk;\n     if (xc < xm) {\n@@ -13,5 +14,16 @@ uint8_t three_min (uint8_t xc, uint8_t xm, uint8_t xy) {\n     return xk;\n }\n \n+int\n+main (void)\n+{\n+  volatile uint8_t xy = 255;\n+  volatile uint8_t xm = 0;\n+  volatile uint8_t xc = 127;\n+  if (three_min (xc, xm, xy) != 0)\n+    __builtin_abort ();\n+  return 0;\n+}\n+\n /* { dg-final { scan-tree-dump-times \"MIN_EXPR\" 3 \"phiopt1\" } } */\n /* { dg-final { scan-tree-dump-times \"MAX_EXPR\" 0 \"phiopt1\" } } */"}, {"sha": "973f39bfed305d636cd7290ab5dbb726d6d75f12", "filename": "gcc/testsuite/gcc.dg/tree-ssa/minmax-4.c", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37ebaabde2b88d446369240ae8f03b8e6a284a7b/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fminmax-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37ebaabde2b88d446369240ae8f03b8e6a284a7b/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fminmax-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fminmax-4.c?ref=37ebaabde2b88d446369240ae8f03b8e6a284a7b", "patch": "@@ -1,8 +1,9 @@\n-/* { dg-do compile } */\n+/* { dg-do run } */\n /* { dg-options \"-O -fdump-tree-phiopt\" } */\n \n #include <stdint.h>\n \n+__attribute__ ((noipa, noinline))\n uint8_t three_max (uint8_t xc, uint8_t xm, uint8_t xy) {\n     uint8_t\t xk;\n     if (xc > xm) {\n@@ -13,5 +14,16 @@ uint8_t three_max (uint8_t xc, uint8_t xm, uint8_t xy) {\n     return xk;\n }\n \n+int\n+main (void)\n+{\n+  volatile uint8_t xy = 255;\n+  volatile uint8_t xm = 0;\n+  volatile uint8_t xc = 127;\n+  if (three_max (xc, xm, xy) != 255)\n+    __builtin_abort ();\n+  return 0;\n+}\n+\n /* { dg-final { scan-tree-dump-times \"MIN_EXPR\" 0 \"phiopt1\" } } */\n /* { dg-final { scan-tree-dump-times \"MAX_EXPR\" 3 \"phiopt1\" } } */"}, {"sha": "34e4e7205111b6c3e28fbe7c8cde85740ac52630", "filename": "gcc/testsuite/gcc.dg/tree-ssa/minmax-5.c", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37ebaabde2b88d446369240ae8f03b8e6a284a7b/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fminmax-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37ebaabde2b88d446369240ae8f03b8e6a284a7b/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fminmax-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fminmax-5.c?ref=37ebaabde2b88d446369240ae8f03b8e6a284a7b", "patch": "@@ -1,8 +1,9 @@\n-/* { dg-do compile } */\n+/* { dg-do run } */\n /* { dg-options \"-O -fdump-tree-phiopt\" } */\n \n #include <stdint.h>\n \n+__attribute__ ((noipa, noinline))\n uint8_t three_minmax1 (uint8_t xc, uint8_t xm, uint8_t xy) {\n \tuint8_t\t xk;\n     if (xc > xm) {\n@@ -13,5 +14,16 @@ uint8_t three_minmax1 (uint8_t xc, uint8_t xm, uint8_t xy) {\n     return xk;\n }\n \n+int\n+main (void)\n+{\n+  volatile uint8_t xy = 255;\n+  volatile uint8_t xm = 0;\n+  volatile uint8_t xc = 127;\n+  if (three_minmax1 (xc, xm, xy) != 127)\n+    __builtin_abort ();\n+  return 0;\n+}\n+\n /* { dg-final { scan-tree-dump-times \"MIN_EXPR\" 2 \"phiopt1\" } } */\n /* { dg-final { scan-tree-dump-times \"MAX_EXPR\" 1 \"phiopt1\" } } */"}, {"sha": "443d68f826db91118ff8fa4f62333f660fdf5546", "filename": "gcc/testsuite/gcc.dg/tree-ssa/minmax-6.c", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37ebaabde2b88d446369240ae8f03b8e6a284a7b/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fminmax-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37ebaabde2b88d446369240ae8f03b8e6a284a7b/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fminmax-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fminmax-6.c?ref=37ebaabde2b88d446369240ae8f03b8e6a284a7b", "patch": "@@ -1,8 +1,9 @@\n-/* { dg-do compile } */\n+/* { dg-do run } */\n /* { dg-options \"-O -fdump-tree-phiopt\" } */\n \n #include <stdint.h>\n \n+__attribute__ ((noipa, noinline))\n uint8_t three_minmax3 (uint8_t xc, uint8_t xm, uint8_t xy) {\n         uint8_t  xk;\n     if (xc > xm) {\n@@ -13,5 +14,16 @@ uint8_t three_minmax3 (uint8_t xc, uint8_t xm, uint8_t xy) {\n     return xk;\n }\n \n+int\n+main (void)\n+{\n+  volatile uint8_t xy = 255;\n+  volatile uint8_t xm = 0;\n+  volatile uint8_t xc = 127;\n+  if (three_minmax3 (xc, xm, xy) != 255)\n+    __builtin_abort ();\n+  return 0;\n+}\n+\n /* { dg-final { scan-tree-dump-times \"MIN_EXPR\" 1 \"phiopt1\" } } */\n /* { dg-final { scan-tree-dump-times \"MAX_EXPR\" 1 \"phiopt1\" } } */"}, {"sha": "7e2a3f08060bc84f33ad416a4c89d0ef74dc9cb3", "filename": "gcc/testsuite/gcc.dg/tree-ssa/minmax-7.c", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37ebaabde2b88d446369240ae8f03b8e6a284a7b/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fminmax-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37ebaabde2b88d446369240ae8f03b8e6a284a7b/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fminmax-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fminmax-7.c?ref=37ebaabde2b88d446369240ae8f03b8e6a284a7b", "patch": "@@ -1,8 +1,9 @@\n-/* { dg-do compile } */\n+/* { dg-do run } */\n /* { dg-options \"-O -fdump-tree-phiopt\" } */\n \n #include <stdint.h>\n \n+__attribute__ ((noipa, noinline))\n uint8_t three_minmax2 (uint8_t xc, uint8_t xm, uint8_t xy) {\n \tuint8_t\t xk;\n     if (xc > xm) {\n@@ -12,5 +13,17 @@ uint8_t three_minmax2 (uint8_t xc, uint8_t xm, uint8_t xy) {\n     }\n     return xk;\n }\n+\n+int\n+main (void)\n+{\n+  volatile uint8_t xy = 255;\n+  volatile uint8_t xm = 0;\n+  volatile uint8_t xc = 127;\n+  if (three_minmax2 (xc, xm, xy) != 255)\n+    __builtin_abort ();\n+  return 0;\n+}\n+\n /* { dg-final { scan-tree-dump-times \"MIN_EXPR\" 1 \"phiopt1\" } } */\n /* { dg-final { scan-tree-dump-times \"MAX_EXPR\" 1 \"phiopt1\" } } */"}, {"sha": "0160e573fef8aba106d4f8ef86b5c958ab52cb30", "filename": "gcc/testsuite/gcc.dg/tree-ssa/minmax-8.c", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37ebaabde2b88d446369240ae8f03b8e6a284a7b/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fminmax-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37ebaabde2b88d446369240ae8f03b8e6a284a7b/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fminmax-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fminmax-8.c?ref=37ebaabde2b88d446369240ae8f03b8e6a284a7b", "patch": "@@ -1,8 +1,9 @@\n-/* { dg-do compile } */\n+/* { dg-do run } */\n /* { dg-options \"-O -fdump-tree-phiopt\" } */\n \n #include <stdint.h>\n \n+__attribute__ ((noinline, noipa))\n uint8_t three_minmax11 (uint8_t xc, uint8_t xm, uint8_t xy) {\n         uint8_t  xk;\n     if (xc < xm) {\n@@ -13,5 +14,16 @@ uint8_t three_minmax11 (uint8_t xc, uint8_t xm, uint8_t xy) {\n     return xk;\n }\n \n+int\n+main (void)\n+{\n+  volatile uint8_t xy = 255;\n+  volatile uint8_t xm = 0;\n+  volatile uint8_t xc = 127;\n+  if (three_minmax11 (xc, xm, xy) != 255)\n+    __builtin_abort ();\n+  return 0;\n+}\n+\n /* { dg-final { scan-tree-dump-times \"MIN_EXPR\" 1 \"phiopt1\" } } */\n /* { dg-final { scan-tree-dump-times \"MAX_EXPR\" 2 \"phiopt1\" } } */"}, {"sha": "0cfb65845889af4f25f7c6c57264617a72cda0ad", "filename": "gcc/testsuite/gcc.dg/tree-ssa/minmax-9.c", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37ebaabde2b88d446369240ae8f03b8e6a284a7b/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fminmax-9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37ebaabde2b88d446369240ae8f03b8e6a284a7b/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fminmax-9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fminmax-9.c?ref=37ebaabde2b88d446369240ae8f03b8e6a284a7b", "patch": "@@ -1,8 +1,9 @@\n-/* { dg-do compile } */\n+/* { dg-do run } */\n /* { dg-options \"-O -fdump-tree-optimized\" } */\n \n #include <stdint.h>\n \n+__attribute__ ((noipa, noinline))\n uint8_t three_min (uint8_t xc, uint8_t xm, uint8_t xy) {\n \tuint8_t\t xk;\n     xc=~xc;\n@@ -16,5 +17,16 @@ uint8_t three_min (uint8_t xc, uint8_t xm, uint8_t xy) {\n     return xk;\n }\n \n+int\n+main (void)\n+{\n+  volatile uint8_t xy = 255;\n+  volatile uint8_t xm = 0;\n+  volatile uint8_t xc = 127;\n+  if (three_min (xc, xm, xy) != 0)\n+    __builtin_abort ();\n+  return 0;\n+}\n+\n /* { dg-final { scan-tree-dump-times \"= ~\" 1 \"optimized\" } } */\n /* { dg-final { scan-tree-dump-times \"MAX_EXPR\" 2 \"optimized\" } } */"}, {"sha": "925bd7d885357dce114a9b29176d953e30ae3b4d", "filename": "gcc/tree-ssa-phiopt.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37ebaabde2b88d446369240ae8f03b8e6a284a7b/gcc%2Ftree-ssa-phiopt.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37ebaabde2b88d446369240ae8f03b8e6a284a7b/gcc%2Ftree-ssa-phiopt.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-phiopt.cc?ref=37ebaabde2b88d446369240ae8f03b8e6a284a7b", "patch": "@@ -2150,9 +2150,9 @@ minmax_replacement (basic_block cond_bb, basic_block middle_bb, basic_block alt_\n       gimple_seq stmts = NULL;\n       tree phi_result = PHI_RESULT (phi);\n       result = gimple_build (&stmts, locus, minmax, TREE_TYPE (phi_result),\n-\t\t\t     arg0, bound);\n+\t\t\t     arg0, arg1);\n       result = gimple_build (&stmts, locus, ass_code, TREE_TYPE (phi_result),\n-\t\t\t     result, arg1);\n+\t\t\t     result, bound);\n       if (invert)\n \tresult = gimple_build (&stmts, locus, BIT_NOT_EXPR, TREE_TYPE (phi_result),\n \t\t\t       result);"}]}