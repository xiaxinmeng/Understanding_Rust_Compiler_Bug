{"sha": "ec1e2a4097535d7075929d638f4120c5a5694725", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWMxZTJhNDA5NzUzNWQ3MDc1OTI5ZDYzOGY0MTIwYzVhNTY5NDcyNQ==", "commit": {"author": {"name": "Bernd Edlinger", "email": "bernd.edlinger@hotmail.de", "date": "2016-07-27T20:35:35Z"}, "committer": {"name": "Bernd Edlinger", "email": "edlinger@gcc.gnu.org", "date": "2016-07-27T20:35:35Z"}, "message": "defaults.h (LOG2_BITS_PER_UNIT): Move from here...\n\n2016-07-27  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n\n        * defaults.h (LOG2_BITS_PER_UNIT): Move from here...\n        * tree.h (LOG2_BITS_PER_UNIT): ...to here.\n        (BITS_PER_UNIT_LOG): Remove.\n        (int_bit_position): Use LOG2_BITS_PER_UNIT instead of BITS_PER_UNIT_LOG.\n        * expr.c (expand_assignment): Likewise. \n        * stor-layout.c (initialize_sizetypes): Likewise.\n\nc-family:\n2016-07-27  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n\n        * c-common.c (check_user_alignment): Use LOG2_BITS_PER_UNIT instead of\n        BITS_PER_UNIT_LOG.\n\nFrom-SVN: r238800", "tree": {"sha": "30936762c7a8b046127e013b16d6d42f50e93b71", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/30936762c7a8b046127e013b16d6d42f50e93b71"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ec1e2a4097535d7075929d638f4120c5a5694725", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec1e2a4097535d7075929d638f4120c5a5694725", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec1e2a4097535d7075929d638f4120c5a5694725", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec1e2a4097535d7075929d638f4120c5a5694725/comments", "author": {"login": "bernd-edlinger", "id": 17638929, "node_id": "MDQ6VXNlcjE3NjM4OTI5", "avatar_url": "https://avatars.githubusercontent.com/u/17638929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bernd-edlinger", "html_url": "https://github.com/bernd-edlinger", "followers_url": "https://api.github.com/users/bernd-edlinger/followers", "following_url": "https://api.github.com/users/bernd-edlinger/following{/other_user}", "gists_url": "https://api.github.com/users/bernd-edlinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/bernd-edlinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bernd-edlinger/subscriptions", "organizations_url": "https://api.github.com/users/bernd-edlinger/orgs", "repos_url": "https://api.github.com/users/bernd-edlinger/repos", "events_url": "https://api.github.com/users/bernd-edlinger/events{/privacy}", "received_events_url": "https://api.github.com/users/bernd-edlinger/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "98060bbea842d8b0f3b5d41efa6ef15c266efcf4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98060bbea842d8b0f3b5d41efa6ef15c266efcf4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/98060bbea842d8b0f3b5d41efa6ef15c266efcf4"}], "stats": {"total": 48, "additions": 29, "deletions": 19}, "files": [{"sha": "3289d0affa3e863fa3a7098523b1f9e16f68e4a3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec1e2a4097535d7075929d638f4120c5a5694725/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec1e2a4097535d7075929d638f4120c5a5694725/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ec1e2a4097535d7075929d638f4120c5a5694725", "patch": "@@ -1,3 +1,12 @@\n+2016-07-27  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n+\n+\t* defaults.h (LOG2_BITS_PER_UNIT): Move from here...\n+\t* tree.h (LOG2_BITS_PER_UNIT): ...to here.\n+\t(BITS_PER_UNIT_LOG): Remove.\n+\t(int_bit_position): Use LOG2_BITS_PER_UNIT instead of BITS_PER_UNIT_LOG.\n+\t* expr.c (expand_assignment): Likewise.\n+\t* stor-layout.c (initialize_sizetypes): Likewise.\n+\n 2016-07-27  Michael Meissner  <meissner@linux.vnet.ibm.com>\n \n \t* config/rs6000/vector.md (vec_extract<mode>): Change the calling"}, {"sha": "34c65ecc7f8ecee22092070aeb849fca34cd765a", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec1e2a4097535d7075929d638f4120c5a5694725/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec1e2a4097535d7075929d638f4120c5a5694725/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=ec1e2a4097535d7075929d638f4120c5a5694725", "patch": "@@ -1,3 +1,8 @@\n+2016-07-27  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n+\n+\t* c-common.c (check_user_alignment): Use LOG2_BITS_PER_UNIT instead of\n+\tBITS_PER_UNIT_LOG.\n+\n 2016-07-25  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/65970"}, {"sha": "38a7b2e383dd55b137286d341459893a046f1dd5", "filename": "gcc/c-family/c-common.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec1e2a4097535d7075929d638f4120c5a5694725/gcc%2Fc-family%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec1e2a4097535d7075929d638f4120c5a5694725/gcc%2Fc-family%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-common.c?ref=ec1e2a4097535d7075929d638f4120c5a5694725", "patch": "@@ -7679,7 +7679,7 @@ check_user_alignment (const_tree align, bool allow_zero)\n       error (\"requested alignment is not a positive power of 2\");\n       return -1;\n     }\n-  else if (i >= HOST_BITS_PER_INT - BITS_PER_UNIT_LOG)\n+  else if (i >= HOST_BITS_PER_INT - LOG2_BITS_PER_UNIT)\n     {\n       error (\"requested alignment is too large\");\n       return -1;"}, {"sha": "af8fe916be49e745c842d992a5af372c46ec2fe3", "filename": "gcc/defaults.h", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec1e2a4097535d7075929d638f4120c5a5694725/gcc%2Fdefaults.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec1e2a4097535d7075929d638f4120c5a5694725/gcc%2Fdefaults.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdefaults.h?ref=ec1e2a4097535d7075929d638f4120c5a5694725", "patch": "@@ -491,14 +491,6 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n    your target, you should override these values by defining the\n    appropriate symbols in your tm.h file.  */\n \n-#if BITS_PER_UNIT == 8\n-#define LOG2_BITS_PER_UNIT 3\n-#elif BITS_PER_UNIT == 16\n-#define LOG2_BITS_PER_UNIT 4\n-#else\n-#error Unknown BITS_PER_UNIT\n-#endif\n-\n #ifndef BITS_PER_WORD\n #define BITS_PER_WORD (BITS_PER_UNIT * UNITS_PER_WORD)\n #endif"}, {"sha": "46de35f25492a0a39d8f1263bebbf01f153e3b08", "filename": "gcc/expr.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec1e2a4097535d7075929d638f4120c5a5694725/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec1e2a4097535d7075929d638f4120c5a5694725/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=ec1e2a4097535d7075929d638f4120c5a5694725", "patch": "@@ -4990,8 +4990,7 @@ expand_assignment (tree to, tree from, bool nontemporal)\n       if (bitpos < 0)\n \t{\n \t  gcc_assert (offset == NULL_TREE);\n-\t  offset = size_int (bitpos >> (BITS_PER_UNIT == 8\n-\t\t\t\t\t? 3 : exact_log2 (BITS_PER_UNIT)));\n+\t  offset = size_int (bitpos >> LOG2_BITS_PER_UNIT);\n \t  bitpos &= BITS_PER_UNIT - 1;\n \t}\n "}, {"sha": "242e79b6d9db1565fe0012ab8836c948cb4f36ea", "filename": "gcc/stor-layout.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec1e2a4097535d7075929d638f4120c5a5694725/gcc%2Fstor-layout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec1e2a4097535d7075929d638f4120c5a5694725/gcc%2Fstor-layout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstor-layout.c?ref=ec1e2a4097535d7075929d638f4120c5a5694725", "patch": "@@ -2572,7 +2572,7 @@ initialize_sizetypes (void)\n     }\n \n   bprecision\n-    = MIN (precision + BITS_PER_UNIT_LOG + 1, MAX_FIXED_MODE_SIZE);\n+    = MIN (precision + LOG2_BITS_PER_UNIT + 1, MAX_FIXED_MODE_SIZE);\n   bprecision\n     = GET_MODE_PRECISION (smallest_mode_for_size (bprecision, MODE_INT));\n   if (bprecision > HOST_BITS_PER_DOUBLE_INT)"}, {"sha": "fff65d6c80957758b5d15243d641652dce1236ec", "filename": "gcc/tree.h", "status": "modified", "additions": 12, "deletions": 7, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec1e2a4097535d7075929d638f4120c5a5694725/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec1e2a4097535d7075929d638f4120c5a5694725/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=ec1e2a4097535d7075929d638f4120c5a5694725", "patch": "@@ -4235,6 +4235,8 @@ extern tree bit_position (const_tree);\n extern tree byte_position (const_tree);\n extern HOST_WIDE_INT int_byte_position (const_tree);\n \n+/* Type for sizes of data-type.  */\n+\n #define sizetype sizetype_tab[(int) stk_sizetype]\n #define bitsizetype sizetype_tab[(int) stk_bitsizetype]\n #define ssizetype sizetype_tab[(int) stk_ssizetype]\n@@ -4244,12 +4246,15 @@ extern HOST_WIDE_INT int_byte_position (const_tree);\n #define bitsize_int(L) size_int_kind (L, stk_bitsizetype)\n #define sbitsize_int(L) size_int_kind (L, stk_sbitsizetype)\n \n-/* Type for sizes of data-type.  */\n+/* Log2 of BITS_PER_UNIT.  */\n \n-#define BITS_PER_UNIT_LOG \\\n-  ((BITS_PER_UNIT > 1) + (BITS_PER_UNIT > 2) + (BITS_PER_UNIT > 4) \\\n-   + (BITS_PER_UNIT > 8) + (BITS_PER_UNIT > 16) + (BITS_PER_UNIT > 32) \\\n-   + (BITS_PER_UNIT > 64) + (BITS_PER_UNIT > 128) + (BITS_PER_UNIT > 256))\n+#if BITS_PER_UNIT == 8\n+#define LOG2_BITS_PER_UNIT 3\n+#elif BITS_PER_UNIT == 16\n+#define LOG2_BITS_PER_UNIT 4\n+#else\n+#error Unknown BITS_PER_UNIT\n+#endif\n \n /* Concatenate two lists (chains of TREE_LIST nodes) X and Y\n    by making the last node in X point to Y.\n@@ -5400,8 +5405,8 @@ extern GTY(()) struct int_n_trees_t int_n_trees[NUM_INT_N_ENTS];\n \n inline HOST_WIDE_INT\n int_bit_position (const_tree field)\n-{ \n-  return ((wi::to_offset (DECL_FIELD_OFFSET (field)) << BITS_PER_UNIT_LOG)\n+{\n+  return ((wi::to_offset (DECL_FIELD_OFFSET (field)) << LOG2_BITS_PER_UNIT)\n \t  + wi::to_offset (DECL_FIELD_BIT_OFFSET (field))).to_shwi ();\n }\n "}]}