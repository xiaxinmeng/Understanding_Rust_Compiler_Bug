{"sha": "f9b9fb8216c379df67b4f0d3c024e8fb4ef4b948", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjliOWZiODIxNmMzNzlkZjY3YjRmMGQzYzAyNGU4ZmI0ZWY0Yjk0OA==", "commit": {"author": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2007-12-19T05:55:17Z"}, "committer": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2007-12-19T05:55:17Z"}, "message": "re PR fortran/34325 (Wrong error message for syntax error)\n\n2007-12-19  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n\n\tPR fortran/34325\n\t* match.h: New function declaration.\n\t* match.c (gfc_match_parens): New function to look for mismatched\n\tparenthesis. (gfc_match_if): Use new function to catch missing '('.\n\nFrom-SVN: r131052", "tree": {"sha": "8d46a7fd4ab40e69eada39bcffb95ac4624d95c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8d46a7fd4ab40e69eada39bcffb95ac4624d95c4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f9b9fb8216c379df67b4f0d3c024e8fb4ef4b948", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9b9fb8216c379df67b4f0d3c024e8fb4ef4b948", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f9b9fb8216c379df67b4f0d3c024e8fb4ef4b948", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9b9fb8216c379df67b4f0d3c024e8fb4ef4b948/comments", "author": null, "committer": null, "parents": [{"sha": "c2cc79221ad0c669ec7b3cfbbaa3878da94fe6c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2cc79221ad0c669ec7b3cfbbaa3878da94fe6c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c2cc79221ad0c669ec7b3cfbbaa3878da94fe6c0"}], "stats": {"total": 82, "additions": 80, "deletions": 2}, "files": [{"sha": "e3d109232328684c8e0590b9aa0c84ed16c8352b", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9b9fb8216c379df67b4f0d3c024e8fb4ef4b948/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9b9fb8216c379df67b4f0d3c024e8fb4ef4b948/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=f9b9fb8216c379df67b4f0d3c024e8fb4ef4b948", "patch": "@@ -1,3 +1,10 @@\n+2007-12-19  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR fortran/34325\n+\t* match.h: New function declaration.\n+\t* match.c (gfc_match_parens): New function to look for mismatched\n+\tparenthesis. (gfc_match_if): Use new function to catch missing '('.\n+\n 2007-12-19  Daniel Franke  <franke.daniel@gmail.com>\n \n \tPR fortran/34495"}, {"sha": "78ed75413b20624c20c3fc72eb990bef4dc31c8f", "filename": "gcc/fortran/match.c", "status": "modified", "additions": 72, "deletions": 2, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9b9fb8216c379df67b4f0d3c024e8fb4ef4b948/gcc%2Ffortran%2Fmatch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9b9fb8216c379df67b4f0d3c024e8fb4ef4b948/gcc%2Ffortran%2Fmatch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fmatch.c?ref=f9b9fb8216c379df67b4f0d3c024e8fb4ef4b948", "patch": "@@ -104,6 +104,68 @@ gfc_op2string (gfc_intrinsic_op op)\n \n /******************** Generic matching subroutines ************************/\n \n+/* This function scans the current statement counting the opened and closed\n+   parenthesis to make sure they are balanced.  */\n+\n+match\n+gfc_match_parens (void)\n+{\n+  locus old_loc, where;\n+  int c, count, instring;\n+  char quote;\n+\n+  old_loc = gfc_current_locus;\n+  count = 0;\n+  instring = 0;\n+  quote = ' ';\n+\n+  for (;;)\n+    {\n+      c = gfc_next_char_literal (instring);\n+      if (c == '\\n')\n+\tbreak;\n+      if (quote == ' ' && ((c == '\\'') || (c == '\"')))\n+\t{\n+\t  quote = (char) c;\n+\t  instring = 1;\n+\t  continue;\n+\t}\n+      if (quote != ' ' && c == quote)\n+\t{\n+\t  quote = ' ';\n+\t  instring = 0;\n+\t  continue;\n+\t}\n+\n+      if (c == '(' && quote == ' ')\n+\t{\n+\t  count++;\n+\t  where = gfc_current_locus;\n+\t}\n+      if (c == ')' && quote == ' ')\n+\t{\n+\t  count--;\n+\t  where = gfc_current_locus;\n+\t}\n+    }\n+\n+  gfc_current_locus = old_loc;\n+\n+  if (count > 0)\n+    {\n+      gfc_error (\"Missing ')' in statement before %L\", &where);\n+      return MATCH_ERROR;\n+    }\n+  if (count < 0)\n+    {\n+      gfc_error (\"Missing '(' in statement before %L\", &where);\n+      return MATCH_ERROR;\n+    }\n+\n+  return MATCH_YES;\n+}\n+\n+\n /* See if the next character is a special character that has\n    escaped by a \\ via the -fbackslash option.  */\n \n@@ -1321,7 +1383,7 @@ gfc_match_if (gfc_statement *if_type)\n {\n   gfc_expr *expr;\n   gfc_st_label *l1, *l2, *l3;\n-  locus old_loc;\n+  locus old_loc, old_loc2;\n   gfc_code *p;\n   match m, n;\n \n@@ -1335,6 +1397,14 @@ gfc_match_if (gfc_statement *if_type)\n   if (m != MATCH_YES)\n     return m;\n \n+  old_loc2 = gfc_current_locus;\n+  gfc_current_locus = old_loc;\n+  \n+  if (gfc_match_parens () == MATCH_ERROR)\n+    return MATCH_ERROR;\n+\n+  gfc_current_locus = old_loc2;\n+\n   if (gfc_match_char (')') != MATCH_YES)\n     {\n       gfc_error (\"Syntax error in IF-expression at %C\");\n@@ -1386,7 +1456,7 @@ gfc_match_if (gfc_statement *if_type)\n \n   if (n == MATCH_YES)\n     {\n-      gfc_error (\"Block label is not appropriate IF statement at %C\");\n+      gfc_error (\"Block label is not appropriate for IF statement at %C\");\n       gfc_free_expr (expr);\n       return MATCH_ERROR;\n     }"}, {"sha": "eac543308f419c4537baa5ca82ad529ed5dc8ffd", "filename": "gcc/fortran/match.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9b9fb8216c379df67b4f0d3c024e8fb4ef4b948/gcc%2Ffortran%2Fmatch.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9b9fb8216c379df67b4f0d3c024e8fb4ef4b948/gcc%2Ffortran%2Fmatch.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fmatch.h?ref=f9b9fb8216c379df67b4f0d3c024e8fb4ef4b948", "patch": "@@ -54,6 +54,7 @@ match gfc_match_intrinsic_op (gfc_intrinsic_op *);\n match gfc_match_char (char);\n match gfc_match (const char *, ...);\n match gfc_match_iterator (gfc_iterator *, int);\n+match gfc_match_parens (void);\n \n /* Statement matchers.  */\n match gfc_match_program (void);"}]}