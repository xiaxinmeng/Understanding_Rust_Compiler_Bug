{"sha": "4b3b53287de4c2ff7d8105b4045157a8b886737b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGIzYjUzMjg3ZGU0YzJmZjdkODEwNWI0MDQ1MTU3YThiODg2NzM3Yg==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2000-01-03T21:32:58Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2000-01-03T21:32:58Z"}, "message": "cp-tree.h (CLASSTYPE_VBASECLASSES): Improve documentation.\n\n\t* cp-tree.h (CLASSTYPE_VBASECLASSES): Improve documentation.\n\t* class.c (layout_basetypes): Don't set BINFO_INHERITANCE_CHAIN\n\tor unshare_base_binfos for virtual bases here.\n\t* search.c (dfs_get_vbase_types): Do it here.\n\t(get_vbase_types): Adjust.\n\nFrom-SVN: r31184", "tree": {"sha": "4a521c0b3f24972f16458e5d56629150b4d8c037", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4a521c0b3f24972f16458e5d56629150b4d8c037"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4b3b53287de4c2ff7d8105b4045157a8b886737b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b3b53287de4c2ff7d8105b4045157a8b886737b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b3b53287de4c2ff7d8105b4045157a8b886737b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b3b53287de4c2ff7d8105b4045157a8b886737b/comments", "author": null, "committer": null, "parents": [{"sha": "f540ec244888cce9614dd91eff8a013897f01f9b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f540ec244888cce9614dd91eff8a013897f01f9b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f540ec244888cce9614dd91eff8a013897f01f9b"}], "stats": {"total": 40, "additions": 29, "deletions": 11}, "files": [{"sha": "6c6179f0b7f6e9d8984cb6f7d509a1316ab2628b", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b3b53287de4c2ff7d8105b4045157a8b886737b/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b3b53287de4c2ff7d8105b4045157a8b886737b/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=4b3b53287de4c2ff7d8105b4045157a8b886737b", "patch": "@@ -1,3 +1,11 @@\n+2000-01-03  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* cp-tree.h (CLASSTYPE_VBASECLASSES): Improve documentation.\n+\t* class.c (layout_basetypes): Don't set BINFO_INHERITANCE_CHAIN\n+\tor unshare_base_binfos for virtual bases here.\n+\t* search.c (dfs_get_vbase_types): Do it here.\n+\t(get_vbase_types): Adjust.\n+\t\n 2000-01-02  Mark Mitchell  <mark@codesourcery.com>\n \n \t* cp-tree.h (CLASSTYPE_VFIELDS): Move definition."}, {"sha": "86cb92647ab28ff45253d9560e1f9aa1271b5682", "filename": "gcc/cp/class.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b3b53287de4c2ff7d8105b4045157a8b886737b/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b3b53287de4c2ff7d8105b4045157a8b886737b/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=4b3b53287de4c2ff7d8105b4045157a8b886737b", "patch": "@@ -4379,8 +4379,6 @@ layout_basetypes (rec)\n   for (vbase_types = CLASSTYPE_VBASECLASSES (rec); vbase_types;\n        vbase_types = TREE_CHAIN (vbase_types))\n     {\n-      BINFO_INHERITANCE_CHAIN (vbase_types) = TYPE_BINFO (rec);\n-      unshare_base_binfos (vbase_types);\n       propagate_binfo_offsets (vbase_types, BINFO_OFFSET (vbase_types));\n \n       if (extra_warnings)"}, {"sha": "a172ec13b26fb5bf7f51a86b62671269590609ff", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b3b53287de4c2ff7d8105b4045157a8b886737b/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b3b53287de4c2ff7d8105b4045157a8b886737b/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=4b3b53287de4c2ff7d8105b4045157a8b886737b", "patch": "@@ -1408,7 +1408,20 @@ struct lang_type\n #define CLASSTYPE_VSIZE(NODE) (TYPE_LANG_SPECIFIC(NODE)->vsize)\n \n /* A chain of BINFOs for the direct and indirect virtual base classes\n-   that this type uses in depth-first left-to-right order.  */\n+   that this type uses in depth-first left-to-right order.  These\n+   BINFOs are distinct from those in the TYPE_BINFO hierarchy.  So,\n+   given: \n+\n+     struct A {};\n+     struct B : public A {};\n+     struct C : virtual public B {};\n+     struct D : virtual public B {};\n+     struct E : public C, public D {};\n+\n+   there will be two copies of `A' and `B' in the TYPE_BINFO hierarchy\n+   for `E'.  On the CLASSTYPE_VBASECLASSES list, there will be just\n+   one copy of `A' (distinct from the other two) with its own copy of `B'\n+   (also distinct from the copies in the TYPE_BINFO hierarchy.)  */\n #define CLASSTYPE_VBASECLASSES(NODE) (TYPE_LANG_SPECIFIC(NODE)->vbases)\n \n /* The BINFO (if any) for the virtual baseclass T of the class C.  */"}, {"sha": "28ef1a17ac2090f38e1e3a3782eba98005abedfc", "filename": "gcc/cp/search.c", "status": "modified", "additions": 7, "deletions": 8, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b3b53287de4c2ff7d8105b4045157a8b886737b/gcc%2Fcp%2Fsearch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b3b53287de4c2ff7d8105b4045157a8b886737b/gcc%2Fcp%2Fsearch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsearch.c?ref=4b3b53287de4c2ff7d8105b4045157a8b886737b", "patch": "@@ -2907,33 +2907,32 @@ dfs_get_vbase_types (binfo, data)\n      tree binfo;\n      void *data;\n {\n-  tree *vbase_types = (tree *) data;\n+  tree type = (tree) data;\n \n   if (TREE_VIA_VIRTUAL (binfo) && ! BINFO_VBASE_MARKED (binfo))\n     {\n       tree new_vbase = make_binfo (integer_zero_node, binfo,\n \t\t\t\t   BINFO_VTABLE (binfo),\n \t\t\t\t   BINFO_VIRTUALS (binfo));\n-      TREE_CHAIN (new_vbase) = *vbase_types;\n+      unshare_base_binfos (new_vbase);\n       TREE_VIA_VIRTUAL (new_vbase) = 1;\n-      *vbase_types = new_vbase;\n+      BINFO_INHERITANCE_CHAIN (new_vbase) = TYPE_BINFO (type);\n+      TREE_CHAIN (new_vbase) = CLASSTYPE_VBASECLASSES (type);\n+      CLASSTYPE_VBASECLASSES (type) = new_vbase;\n       SET_BINFO_VBASE_MARKED (binfo);\n     }\n   SET_BINFO_MARKED (binfo);\n   return NULL_TREE;\n }\n \n-/* Return a list of binfos for the virtual base classes for TYPE, in\n-   depth-first search order.  The list is freshly allocated, so\n-   no modification is made to  the current binfo hierarchy.  */\n+/* Set CLASSTYPE_VBASECLASSES for TYPE.  */\n \n void\n get_vbase_types (type)\n      tree type;\n {\n   CLASSTYPE_VBASECLASSES (type) = NULL_TREE;\n-  dfs_walk (TYPE_BINFO (type), dfs_get_vbase_types, unmarkedp,\n-\t    &CLASSTYPE_VBASECLASSES (type));\n+  dfs_walk (TYPE_BINFO (type), dfs_get_vbase_types, unmarkedp, type);\n   /* Rely upon the reverse dfs ordering from dfs_get_vbase_types, and now\n      reverse it so that we get normal dfs ordering.  */\n   CLASSTYPE_VBASECLASSES (type) = nreverse (CLASSTYPE_VBASECLASSES (type));"}]}