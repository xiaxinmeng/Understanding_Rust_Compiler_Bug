{"sha": "b43e7294ab697f3e0d198855b016792ee742ad27", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjQzZTcyOTRhYjY5N2YzZTBkMTk4ODU1YjAxNjc5MmVlNzQyYWQyNw==", "commit": {"author": {"name": "Nathanael Nerode", "email": "neroden@gcc.gnu.org", "date": "2004-04-09T11:59:27Z"}, "committer": {"name": "Nathanael Nerode", "email": "neroden@gcc.gnu.org", "date": "2004-04-09T11:59:27Z"}, "message": "configure.in: Improve comments on gthread_cflags.\n\n\t* configure.in: Improve comments on gthread_cflags.  Improve m4\n\tquotation, and replace 'if test' with 'case', for --enable-objc-gc.\n\t* configure: Regenerate.\n\nFrom-SVN: r80548", "tree": {"sha": "3f169aa6ec76c4f324396d4d56f580f7e34f7749", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3f169aa6ec76c4f324396d4d56f580f7e34f7749"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b43e7294ab697f3e0d198855b016792ee742ad27", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b43e7294ab697f3e0d198855b016792ee742ad27", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b43e7294ab697f3e0d198855b016792ee742ad27", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b43e7294ab697f3e0d198855b016792ee742ad27/comments", "author": null, "committer": null, "parents": [{"sha": "1fcfac9834ccf59d8997749cf80e9351709c29d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1fcfac9834ccf59d8997749cf80e9351709c29d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1fcfac9834ccf59d8997749cf80e9351709c29d7"}], "stats": {"total": 34, "additions": 18, "deletions": 16}, "files": [{"sha": "eb706920ec4ae047fdf72c8eb3ebf99891e486a5", "filename": "libobjc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b43e7294ab697f3e0d198855b016792ee742ad27/libobjc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b43e7294ab697f3e0d198855b016792ee742ad27/libobjc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2FChangeLog?ref=b43e7294ab697f3e0d198855b016792ee742ad27", "patch": "@@ -1,5 +1,9 @@\n 2004-04-09  Nathanael Nerode  <neroden@gcc.gnu.org>\n \n+\t* configure.in: Improve comments on gthread_cflags.  Improve m4\n+\tquotation, and replace 'if test' with 'case', for --enable-objc-gc.\n+\t* configure: Regenerate.\n+\n \t* configure.in: Move PACKAGE and VERSION settings up top.  Remove\n \tunused call to AC_PROG_LN_S.  Default RANLIB to ':'.  Remove\n \tredundant checks for values of RANLIB, AR, INSTALL."}, {"sha": "ec35252927e50216ec98376d6ba20b75a34a370e", "filename": "libobjc/configure", "status": "modified", "additions": 7, "deletions": 8, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b43e7294ab697f3e0d198855b016792ee742ad27/libobjc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b43e7294ab697f3e0d198855b016792ee742ad27/libobjc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Fconfigure?ref=b43e7294ab697f3e0d198855b016792ee742ad27", "patch": "@@ -2790,9 +2790,10 @@ done\n \n \n # Determine CFLAGS for gthread.\n-\n+# FIXME: the current implementation is dependent on the 'r' variable\n+# passed down from the top level\n echo $ac_n \"checking for gthread cflags\"\"... $ac_c\" 1>&6\n-echo \"configure:2796: checking for gthread cflags\" >&5\n+echo \"configure:2797: checking for gthread cflags\" >&5\n if eval \"test \\\"`echo '$''{'objc_cv_gthread_flags'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -2811,18 +2812,16 @@ GTHREAD_FLAGS=$objc_cv_gthread_flags\n # Check whether --enable-objc-gc or --disable-objc-gc was given.\n if test \"${enable_objc_gc+set}\" = set; then\n   enableval=\"$enable_objc_gc\"\n-  if [ x$enable_objc_gc = xno ]; then\n-        OBJC_BOEHM_GC=''\n-else\n-        OBJC_BOEHM_GC=libobjc_gc.la\n-fi\n+  case $enable_objc_gc in\n+  no) OBJC_BOEHM_GC='' ;;\n+  *) OBJC_BOEHM_GC=libobjc_gc.la ;;\n+esac\n else\n   OBJC_BOEHM_GC=''\n fi\n \n \n \n-\n # We need multilib support, but only if configuring for the target.\n trap '' 1 2 15\n cat > confcache <<\\EOF"}, {"sha": "040976d2290a1e61a305ef4b65ebcc823be595b2", "filename": "libobjc/configure.in", "status": "modified", "additions": 7, "deletions": 8, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b43e7294ab697f3e0d198855b016792ee742ad27/libobjc%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b43e7294ab697f3e0d198855b016792ee742ad27/libobjc%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Fconfigure.in?ref=b43e7294ab697f3e0d198855b016792ee742ad27", "patch": "@@ -223,7 +223,8 @@ AC_HEADER_STDC\n AC_CHECK_HEADERS(sched.h)\n \n # Determine CFLAGS for gthread.\n-\n+# FIXME: the current implementation is dependent on the 'r' variable\n+# passed down from the top level\n AC_CACHE_CHECK([for gthread cflags],objc_cv_gthread_flags,\n [if test -f \"$r\"/gcc/Makefile\n then\n@@ -237,15 +238,13 @@ AC_SUBST(GTHREAD_FLAGS)\n AC_ARG_ENABLE(objc-gc,\n [  --enable-objc-gc       enable the use of Boehm's garbage collector with\n                           the GNU Objective-C runtime.],\n-if [[[ x$enable_objc_gc = xno ]]]; then\n-        OBJC_BOEHM_GC=''\n-else\n-        OBJC_BOEHM_GC=libobjc_gc.la\n-fi,\n-OBJC_BOEHM_GC='')\n+[case $enable_objc_gc in\n+  no) OBJC_BOEHM_GC='' ;;\n+  *) OBJC_BOEHM_GC=libobjc_gc.la ;;\n+esac],\n+[OBJC_BOEHM_GC=''])\n AC_SUBST(OBJC_BOEHM_GC)\n \n-\n # We need multilib support, but only if configuring for the target.\n AC_OUTPUT(Makefile,\n  [test -z \"$CONFIG_HEADERS\" || echo timestamp > stamp-h"}]}