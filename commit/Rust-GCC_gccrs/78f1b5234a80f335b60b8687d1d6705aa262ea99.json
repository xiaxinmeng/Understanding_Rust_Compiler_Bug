{"sha": "78f1b5234a80f335b60b8687d1d6705aa262ea99", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzhmMWI1MjM0YTgwZjMzNWI2MGI4Njg3ZDFkNjcwNWFhMjYyZWE5OQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2015-03-31T13:32:59Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2015-03-31T13:32:59Z"}, "message": "tree-sra.c (create_access_replacement): Drop under-/over-alignment of types.\n\n2015-03-31  Richard Biener  <rguenther@suse.de>\n\n\t* tree-sra.c (create_access_replacement): Drop under-/over-alignment\n\tof types.\n\nFrom-SVN: r221795", "tree": {"sha": "efacf95b9b4bef0d10521890c23716f2a62224b0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/efacf95b9b4bef0d10521890c23716f2a62224b0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/78f1b5234a80f335b60b8687d1d6705aa262ea99", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78f1b5234a80f335b60b8687d1d6705aa262ea99", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78f1b5234a80f335b60b8687d1d6705aa262ea99", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78f1b5234a80f335b60b8687d1d6705aa262ea99/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2d38d80934cd2e8a60b212ed34ffc7b062d7960a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d38d80934cd2e8a60b212ed34ffc7b062d7960a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d38d80934cd2e8a60b212ed34ffc7b062d7960a"}], "stats": {"total": 11, "additions": 10, "deletions": 1}, "files": [{"sha": "e37abf98162c6a606aeab1adcd320f2170f43e1d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78f1b5234a80f335b60b8687d1d6705aa262ea99/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78f1b5234a80f335b60b8687d1d6705aa262ea99/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=78f1b5234a80f335b60b8687d1d6705aa262ea99", "patch": "@@ -1,3 +1,8 @@\n+2015-03-31  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-sra.c (create_access_replacement): Drop under-/over-alignment\n+\tof types.\n+\n 2015-03-31  Dominik Vogt  <vogt@linux.vnet.ibm.com>\n \n \t* config/s390/s390.c (s390_function_num_hotpatch_hw): Allow hotpatching"}, {"sha": "6adee70bce5c04b95f839b4aaea8ecdc32052b94", "filename": "gcc/tree-sra.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78f1b5234a80f335b60b8687d1d6705aa262ea99/gcc%2Ftree-sra.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78f1b5234a80f335b60b8687d1d6705aa262ea99/gcc%2Ftree-sra.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-sra.c?ref=78f1b5234a80f335b60b8687d1d6705aa262ea99", "patch": "@@ -2012,7 +2012,11 @@ create_access_replacement (struct access *access)\n       DECL_CONTEXT (repl) = current_function_decl;\n     }\n   else\n-    repl = create_tmp_var (access->type, \"SR\");\n+    /* Drop any special alignment on the type if it's not on the main\n+       variant.  This avoids issues with weirdo ABIs like AAPCS.  */\n+    repl = create_tmp_var (build_qualified_type\n+\t\t\t     (TYPE_MAIN_VARIANT (access->type),\n+\t\t\t      TYPE_QUALS (access->type)), \"SR\");\n   if (TREE_CODE (access->type) == COMPLEX_TYPE\n       || TREE_CODE (access->type) == VECTOR_TYPE)\n     {"}]}