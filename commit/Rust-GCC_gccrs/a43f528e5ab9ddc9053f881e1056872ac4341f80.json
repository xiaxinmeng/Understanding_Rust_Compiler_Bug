{"sha": "a43f528e5ab9ddc9053f881e1056872ac4341f80", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTQzZjUyOGU1YWI5ZGRjOTA1M2Y4ODFlMTA1Njg3MmFjNDM0MWY4MA==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@gcc.gnu.org", "date": "2001-02-21T18:25:34Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@gcc.gnu.org", "date": "2001-02-21T18:25:34Z"}, "message": "fixed typo in last commit re REVERSE_CONDEXEC_PREDICATES_P\n\nFrom-SVN: r39954", "tree": {"sha": "8fa7d6713a1938802ee5e35d1e1856634a843890", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8fa7d6713a1938802ee5e35d1e1856634a843890"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a43f528e5ab9ddc9053f881e1056872ac4341f80", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a43f528e5ab9ddc9053f881e1056872ac4341f80", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a43f528e5ab9ddc9053f881e1056872ac4341f80", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a43f528e5ab9ddc9053f881e1056872ac4341f80/comments", "author": null, "committer": null, "parents": [{"sha": "2b71bf377cc9f20f94822f3d5f41af9dc6c986cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b71bf377cc9f20f94822f3d5f41af9dc6c986cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b71bf377cc9f20f94822f3d5f41af9dc6c986cc"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "69574c27841e62db7120c761be940054cd470683", "filename": "gcc/tm.texi", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a43f528e5ab9ddc9053f881e1056872ac4341f80/gcc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a43f528e5ab9ddc9053f881e1056872ac4341f80/gcc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftm.texi?ref=a43f528e5ab9ddc9053f881e1056872ac4341f80", "patch": "@@ -4885,7 +4885,8 @@ like:\n A C expression that returns true if the conditional execution predicate\n @var{code1} is the inverse of @var{code2} and vice versa.  Define this to\n return 0 if the target has conditional execution predicates that cannot be\n-reversed safely.  If none is specified, this macro expands to:\n+reversed safely.  If no expansion is specified, this macro is defined as\n+follows:\n \n @smallexample\n #define REVERSE_CONDEXEC_PREDICATES_P (x, y) ((x) == reverse_condition (y))"}]}