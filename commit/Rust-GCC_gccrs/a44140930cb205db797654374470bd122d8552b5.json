{"sha": "a44140930cb205db797654374470bd122d8552b5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTQ0MTQwOTMwY2IyMDVkYjc5NzY1NDM3NDQ3MGJkMTIyZDg1NTJiNQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2000-09-04T10:13:02Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2000-09-04T10:13:02Z"}, "message": "i386.md (pushsi2, [...]): Add '*' to insn pattern name.\n\n\n\t* i386.md (pushsi2, pushhi2, pophi2, swapsf, swapdf,\n\tumulsi3_highpart, smulsi3_highpart, testqi_ccno_1, xorqi_ext_1):\n\tAdd '*' to insn pattern name.\n\nFrom-SVN: r36129", "tree": {"sha": "776e97e81cc32cd93ee00a39b5882cb00fef58ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/776e97e81cc32cd93ee00a39b5882cb00fef58ad"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a44140930cb205db797654374470bd122d8552b5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a44140930cb205db797654374470bd122d8552b5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a44140930cb205db797654374470bd122d8552b5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a44140930cb205db797654374470bd122d8552b5/comments", "author": null, "committer": null, "parents": [{"sha": "29844fa7c724106adef78cb758ae1a57461758ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29844fa7c724106adef78cb758ae1a57461758ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/29844fa7c724106adef78cb758ae1a57461758ae"}], "stats": {"total": 22, "additions": 11, "deletions": 11}, "files": [{"sha": "1fd1a9b6bf58ac1b12ab053e3576ceb9e91785d0", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a44140930cb205db797654374470bd122d8552b5/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a44140930cb205db797654374470bd122d8552b5/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=a44140930cb205db797654374470bd122d8552b5", "patch": "@@ -1465,7 +1465,7 @@\n ;; targets without our curiosities, and it is just as easy to represent\n ;; this differently.\n \n-(define_insn \"pushsi2\"\n+(define_insn \"*pushsi2\"\n   [(set (match_operand:SI 0 \"push_operand\" \"=<\")\n \t(match_operand:SI 1 \"general_no_elim_operand\" \"ri*m\"))]\n   \"\"\n@@ -1574,7 +1574,7 @@\n   \"\"\n   \"ix86_expand_move (HImode, operands); DONE;\")\n \n-(define_insn \"pushhi2\"\n+(define_insn \"*pushhi2\"\n   [(set (match_operand:HI 0 \"push_operand\" \"=<,<\")\n \t(match_operand:HI 1 \"general_no_elim_operand\" \"n,r*m\"))]\n   \"\"\n@@ -1584,7 +1584,7 @@\n   [(set_attr \"type\" \"push\")\n    (set_attr \"mode\" \"HI\")])\n \n-(define_insn \"pophi1\"\n+(define_insn \"*pophi1\"\n   [(set (match_operand:HI 0 \"nonimmediate_operand\" \"=r*m\")\n \t(mem:HI (reg:SI 7)))\n    (set (reg:SI 7)\n@@ -1711,7 +1711,7 @@\n ;; \"push a byte\".  But actually we use pushw, which has the effect\n ;; of rounding the amount pushed up to a halfword.\n \n-(define_insn \"pushqi2\"\n+(define_insn \"*pushqi2\"\n   [(set (match_operand:QI 0 \"push_operand\" \"=<,<\")\n \t(match_operand:QI 1 \"nonmemory_no_elim_operand\" \"n,r\"))]\n   \"\"\n@@ -1721,7 +1721,7 @@\n   [(set_attr \"type\" \"push\")\n    (set_attr \"mode\" \"HI\")])\n \n-(define_insn \"popqi1\"\n+(define_insn \"*popqi1\"\n   [(set (match_operand:QI 0 \"nonimmediate_operand\" \"=r*m\")\n \t(mem:QI (reg:SI 7)))\n    (set (reg:SI 7)\n@@ -2120,7 +2120,7 @@\n \t(match_dup 1))]\n   \"operands[1] = get_pool_constant (XEXP (operands[1], 0));\")\n \n-(define_insn \"swapsf\"\n+(define_insn \"*swapsf\"\n   [(set (match_operand:SF 0 \"register_operand\" \"+f\")\n \t(match_operand:SF 1 \"register_operand\" \"+f\"))\n    (set (match_dup 1)\n@@ -2347,7 +2347,7 @@\n \t(match_dup 1))]\n   \"operands[1] = get_pool_constant (XEXP (operands[1], 0));\")\n \n-(define_insn \"swapdf\"\n+(define_insn \"*swapdf\"\n   [(set (match_operand:DF 0 \"register_operand\" \"+f\")\n \t(match_operand:DF 1 \"register_operand\" \"+f\"))\n    (set (match_dup 1)\n@@ -4657,7 +4657,7 @@\n    (set_attr \"length_immediate\" \"0\")\n    (set_attr \"mode\" \"SI\")])\n \n-(define_insn \"umulsi3_highpart\"\n+(define_insn \"*umulsi3_highpart\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=d\")\n \t(truncate:SI\n \t  (lshiftrt:DI\n@@ -4675,7 +4675,7 @@\n    (set_attr \"length_immediate\" \"0\")\n    (set_attr \"mode\" \"SI\")])\n \n-(define_insn \"smulsi3_highpart\"\n+(define_insn \"*smulsi3_highpart\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=d\")\n \t(truncate:SI\n \t  (lshiftrt:DI\n@@ -5007,7 +5007,7 @@\n    (set_attr \"mode\" \"QI\")\n    (set_attr \"pent_pair\" \"uv,np,uv\")])\n \n-(define_insn \"testqi_ccno_1\"\n+(define_insn \"*testqi_ccno_1\"\n   [(set (reg:CCNO 17)\n         (compare:CCNO (and:QI (match_operand:QI 0 \"nonimmediate_operand\" \"%*a,q,qm,r\")\n \t\t\t      (match_operand:QI 1 \"nonmemory_operand\" \"n,n,qn,n\"))\n@@ -5616,7 +5616,7 @@\n   [(set_attr \"type\" \"alu\")\n    (set_attr \"mode\" \"QI,QI,SI\")])\n \n-(define_insn \"xorqi_ext_1\"\n+(define_insn \"*xorqi_ext_1\"\n   [(set (zero_extract:SI (match_operand 0 \"ext_register_operand\" \"=q\")\n \t\t\t (const_int 8)\n \t\t\t (const_int 8))"}]}