{"sha": "7fcdbdd21d6adc14421bc8de439bf91b58eae6d1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2ZjZGJkZDIxZDZhZGMxNDQyMWJjOGRlNDM5YmY5MWI1OGVhZTZkMQ==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2015-10-02T19:38:38Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2015-10-02T19:38:38Z"}, "message": "Allow Filesystem TS to compile without wchar_t\n\n\t* include/bits/locale_conv.h [!_GLIBCXX_USE_WCHAR_T]\n\t(__do_str_codecvt, __str_codecvt_in, __str_codecvt_out): Enable.\n\t* include/experimental/fs_path.h [!_GLIBCXX_USE_WCHAR_T]\n\t(path::wstring, path::generic_wstring): Disable.\n\t* src/filesystem/path.cc (path::_S_convert_loc)\n\t[!_GLIBCXX_USE_WCHAR_T]: Skip conversion.\n\t* testsuite/experimental/filesystem/path/assign/assign.cc: Check for\n\twchar_t support.\n\t* testsuite/experimental/filesystem/path/concat/strings.cc: Likewise.\n\t* testsuite/experimental/filesystem/path/construct/range.cc: Likewise.\n\nFrom-SVN: r228417", "tree": {"sha": "b5f3384755c093faaa1c510b9ac28d3738c27c76", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b5f3384755c093faaa1c510b9ac28d3738c27c76"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7fcdbdd21d6adc14421bc8de439bf91b58eae6d1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7fcdbdd21d6adc14421bc8de439bf91b58eae6d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7fcdbdd21d6adc14421bc8de439bf91b58eae6d1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7fcdbdd21d6adc14421bc8de439bf91b58eae6d1/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "43222a5ec8d80b39a3731194c2e960be50dde221", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43222a5ec8d80b39a3731194c2e960be50dde221", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43222a5ec8d80b39a3731194c2e960be50dde221"}], "stats": {"total": 50, "additions": 42, "deletions": 8}, "files": [{"sha": "57b9f470bf5d4cc89fee78d0c6e008a2eda1d886", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fcdbdd21d6adc14421bc8de439bf91b58eae6d1/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fcdbdd21d6adc14421bc8de439bf91b58eae6d1/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=7fcdbdd21d6adc14421bc8de439bf91b58eae6d1", "patch": "@@ -1,5 +1,16 @@\n 2015-10-02  Jonathan Wakely  <jwakely@redhat.com>\n \n+\t* include/bits/locale_conv.h [!_GLIBCXX_USE_WCHAR_T]\n+\t(__do_str_codecvt, __str_codecvt_in, __str_codecvt_out): Enable.\n+\t* include/experimental/fs_path.h [!_GLIBCXX_USE_WCHAR_T]\n+\t(path::wstring, path::generic_wstring): Disable.\n+\t* src/filesystem/path.cc (path::_S_convert_loc)\n+\t[!_GLIBCXX_USE_WCHAR_T]: Skip conversion.\n+\t* testsuite/experimental/filesystem/path/assign/assign.cc: Check for\n+\twchar_t support.\n+\t* testsuite/experimental/filesystem/path/concat/strings.cc: Likewise.\n+\t* testsuite/experimental/filesystem/path/construct/range.cc: Likewise.\n+\n \t* testsuite/util/testsuite_fs.h (nonexistent_path): Use less generic\n \tname for paths. Prefer snprintf to sprintf.\n "}, {"sha": "16b48758e772af88332d603795dfda52bbcfe746", "filename": "libstdc++-v3/include/bits/locale_conv.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fcdbdd21d6adc14421bc8de439bf91b58eae6d1/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_conv.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fcdbdd21d6adc14421bc8de439bf91b58eae6d1/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_conv.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_conv.h?ref=7fcdbdd21d6adc14421bc8de439bf91b58eae6d1", "patch": "@@ -44,8 +44,6 @@ namespace std _GLIBCXX_VISIBILITY(default)\n {\n _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n-#ifdef _GLIBCXX_USE_WCHAR_T\n-\n   /**\n    * @addtogroup locales\n    * @{\n@@ -157,6 +155,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       return __str_codecvt_out(__first, __last, __outstr, __cvt, __state, __n);\n     }\n \n+#ifdef _GLIBCXX_USE_WCHAR_T\n+\n _GLIBCXX_BEGIN_NAMESPACE_CXX11\n \n   /// String conversions\n@@ -533,10 +533,10 @@ _GLIBCXX_END_NAMESPACE_CXX11\n       bool\t\t\t_M_always_noconv;\n     };\n \n-  /// @} group locales\n-\n #endif  // _GLIBCXX_USE_WCHAR_T\n \n+  /// @} group locales\n+\n _GLIBCXX_END_NAMESPACE_VERSION\n } // namespace\n "}, {"sha": "40462a6ab197d2cc860cd7857d66928e90bc60af", "filename": "libstdc++-v3/include/experimental/fs_path.h", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fcdbdd21d6adc14421bc8de439bf91b58eae6d1/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Ffs_path.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fcdbdd21d6adc14421bc8de439bf91b58eae6d1/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Ffs_path.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Ffs_path.h?ref=7fcdbdd21d6adc14421bc8de439bf91b58eae6d1", "patch": "@@ -279,7 +279,9 @@ _GLIBCXX_BEGIN_NAMESPACE_CXX11\n       string(const _Allocator& __a = _Allocator()) const;\n \n     std::string    string() const;\n+#if _GLIBCXX_USE_WCHAR_T\n     std::wstring   wstring() const;\n+#endif\n     std::string    u8string() const;\n     std::u16string u16string() const;\n     std::u32string u32string() const;\n@@ -291,7 +293,9 @@ _GLIBCXX_BEGIN_NAMESPACE_CXX11\n       generic_string(const _Allocator& __a = _Allocator()) const;\n \n     std::string    generic_string() const;\n+#if _GLIBCXX_USE_WCHAR_T\n     std::wstring   generic_wstring() const;\n+#endif\n     std::string    generic_u8string() const;\n     std::u16string generic_u16string() const;\n     std::u32string generic_u32string() const;\n@@ -828,8 +832,10 @@ _GLIBCXX_BEGIN_NAMESPACE_CXX11\n   inline std::string\n   path::string() const { return string<char>(); }\n \n+#if _GLIBCXX_USE_WCHAR_T\n   inline std::wstring\n   path::wstring() const { return string<wchar_t>(); }\n+#endif\n \n   inline std::string\n   path::u8string() const\n@@ -865,8 +871,10 @@ _GLIBCXX_BEGIN_NAMESPACE_CXX11\n   inline std::string\n   path::generic_string() const { return string(); }\n \n+#if _GLIBCXX_USE_WCHAR_T\n   inline std::wstring\n   path::generic_wstring() const { return wstring(); }\n+#endif\n \n   inline std::string\n   path::generic_u8string() const { return u8string(); }"}, {"sha": "e85c9fccd9a746f1fc5f92315f3dc6852ddfbf2f", "filename": "libstdc++-v3/src/filesystem/path.cc", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fcdbdd21d6adc14421bc8de439bf91b58eae6d1/libstdc%2B%2B-v3%2Fsrc%2Ffilesystem%2Fpath.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fcdbdd21d6adc14421bc8de439bf91b58eae6d1/libstdc%2B%2B-v3%2Fsrc%2Ffilesystem%2Fpath.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Ffilesystem%2Fpath.cc?ref=7fcdbdd21d6adc14421bc8de439bf91b58eae6d1", "patch": "@@ -437,8 +437,9 @@ path::_M_trim()\n \n path::string_type\n path::_S_convert_loc(const char* __first, const char* __last,\n-               const std::locale& __loc)\n+\t\t     const std::locale& __loc)\n {\n+#if _GLIBCXX_USE_WCHAR_T\n   auto& __cvt = std::use_facet<codecvt<wchar_t, char, mbstate_t>>(__loc);\n   basic_string<wchar_t> __ws;\n   if (!__str_codecvt_in(__first, __last, __ws, __cvt))\n@@ -450,6 +451,9 @@ path::_S_convert_loc(const char* __first, const char* __last,\n #else\n   return _Cvt<wchar_t>::_S_convert(__ws.data(), __ws.data() + __ws.size());\n #endif\n+#else\n+  return {__first, __last};\n+#endif\n }\n \n std::size_t"}, {"sha": "fe4f96cde9b8a80fd0a0d755bde25a5c1ab07c98", "filename": "libstdc++-v3/testsuite/experimental/filesystem/path/assign/assign.cc", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fcdbdd21d6adc14421bc8de439bf91b58eae6d1/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Fpath%2Fassign%2Fassign.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fcdbdd21d6adc14421bc8de439bf91b58eae6d1/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Fpath%2Fassign%2Fassign.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Fpath%2Fassign%2Fassign.cc?ref=7fcdbdd21d6adc14421bc8de439bf91b58eae6d1", "patch": "@@ -36,13 +36,15 @@ test01()\n     p2 = s.c_str();\n     compare_paths(p0, p2);\n \n+#if _GLIBCXX_USE_WCHAR_T\n     std::wstring ws(s.begin(), s.end());\n \n     p3 = ws;\n     compare_paths(p0, p3);\n \n     p4 = ws.c_str();\n     compare_paths(p0, p4);\n+#endif\n   }\n }\n \n@@ -65,6 +67,7 @@ test02()\n     p4.assign( s.c_str(), s.c_str() + s.size() );\n     compare_paths(p0, p4);\n \n+#if _GLIBCXX_USE_WCHAR_T\n     std::wstring ws(s.begin(), s.end());\n \n     p5.assign(ws);\n@@ -78,6 +81,7 @@ test02()\n \n     p8.assign( ws.c_str(), ws.c_str() + ws.size() );\n     compare_paths(p0, p8);\n+#endif\n   }\n }\n "}, {"sha": "61ef7e40cfceee8e159401b4c36b35e1808b9121", "filename": "libstdc++-v3/testsuite/experimental/filesystem/path/concat/strings.cc", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fcdbdd21d6adc14421bc8de439bf91b58eae6d1/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Fpath%2Fconcat%2Fstrings.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fcdbdd21d6adc14421bc8de439bf91b58eae6d1/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Fpath%2Fconcat%2Fstrings.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Fpath%2Fconcat%2Fstrings.cc?ref=7fcdbdd21d6adc14421bc8de439bf91b58eae6d1", "patch": "@@ -35,7 +35,11 @@ test01()\n   VERIFY( p.filename() == \"foobar\" );\n   p += '/';\n   VERIFY( p.parent_path() == \"/foobar\" && p.filename() == \".\" );\n+#if _GLIBCXX_USE_WCHAR_T\n   p += L\"baz.txt\";\n+#else\n+  p += \"baz.txt\";\n+#endif\n   VERIFY( p.filename() == \"baz.txt\" );\n   p.concat(\"/dir/\");\n   VERIFY( p.parent_path() == \"/foobar/baz.txt/dir\" && p.filename() == \".\" );"}, {"sha": "2e8922913cf3d3051ad0fb1b6fc244a1b6ea77b2", "filename": "libstdc++-v3/testsuite/experimental/filesystem/path/construct/range.cc", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fcdbdd21d6adc14421bc8de439bf91b58eae6d1/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Fpath%2Fconstruct%2Frange.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fcdbdd21d6adc14421bc8de439bf91b58eae6d1/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Fpath%2Fconstruct%2Frange.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Fpath%2Fconstruct%2Frange.cc?ref=7fcdbdd21d6adc14421bc8de439bf91b58eae6d1", "patch": "@@ -37,19 +37,22 @@ test01()\n     path p3( s.c_str() );\n     path p4( s.c_str(), s.c_str() + s.size() );\n \n+    compare_paths(p1, p2);\n+    compare_paths(p1, p3);\n+    compare_paths(p1, p4);\n+\n+#if _GLIBCXX_USE_WCHAR_T\n     std::wstring ws(s.begin(), s.end());\n     path p5 = ws;\n     path p6( ws.begin(), ws.end() );\n     path p7( ws.c_str() );\n     path p8( ws.c_str(), ws.c_str() + ws.size() );\n \n-    compare_paths(p1, p2);\n-    compare_paths(p1, p3);\n-    compare_paths(p1, p4);\n     compare_paths(p1, p5);\n     compare_paths(p1, p6);\n     compare_paths(p1, p7);\n     compare_paths(p1, p8);\n+#endif\n   }\n }\n "}]}