{"sha": "0c012e9bf7a7c16283091714f18f8aa3633d89b6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGMwMTJlOWJmN2E3YzE2MjgzMDkxNzE0ZjE4ZjhhYTM2MzNkODliNg==", "commit": {"author": {"name": "Richard Earnshaw", "email": "rearnsha@arm.com", "date": "2016-11-16T14:02:10Z"}, "committer": {"name": "Richard Earnshaw", "email": "rearnsha@gcc.gnu.org", "date": "2016-11-16T14:02:10Z"}, "message": "[arm] Add vfpv2 and neon-vfpv3\n\n\t* arm/arm-fpus.def (vfpv2): New FPU, currently an alias for 'vfp'.\n\t(neon-vfpv3): New FPU, currently an alias for 'neon'.\n\t* arm/arm-tables.opt: Regenerated.\n        * arm/t-aprofile (MULTILIB_REUSE): Add reuse rules for vfpv2 and\n        neon-vfpv3.\n\t* doc/invoke.texi (ARM: -mfpu): Document new options.  Note that 'vfp'\n\tand 'neon' are aliases for specific implementations.\n\nFrom-SVN: r242491", "tree": {"sha": "66fc9bd96846765d68e179c22d336c8d01093894", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/66fc9bd96846765d68e179c22d336c8d01093894"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0c012e9bf7a7c16283091714f18f8aa3633d89b6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c012e9bf7a7c16283091714f18f8aa3633d89b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0c012e9bf7a7c16283091714f18f8aa3633d89b6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c012e9bf7a7c16283091714f18f8aa3633d89b6/comments", "author": null, "committer": null, "parents": [{"sha": "dc9e0b66b22fa73f396645d7efd8b73649f2fe6b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc9e0b66b22fa73f396645d7efd8b73649f2fe6b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dc9e0b66b22fa73f396645d7efd8b73649f2fe6b"}], "stats": {"total": 62, "additions": 42, "deletions": 20}, "files": [{"sha": "205afa8e1803eb3073a26157581faceebf5a59aa", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c012e9bf7a7c16283091714f18f8aa3633d89b6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c012e9bf7a7c16283091714f18f8aa3633d89b6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0c012e9bf7a7c16283091714f18f8aa3633d89b6", "patch": "@@ -1,3 +1,13 @@\n+2016-11-16  Richard Earnshaw  <rearnsha@arm.com>\n+\n+\t* arm/arm-fpus.def (vfpv2): New FPU, currently an alias for 'vfp'.\n+\t(neon-vfpv3): New FPU, currently an alias for 'neon'.\n+\t* arm/arm-tables.opt: Regenerated.\n+        * arm/t-aprofile (MULTILIB_REUSE): Add reuse rules for vfpv2 and\n+        neon-vfpv3.\n+\t* doc/invoke.texi (ARM: -mfpu): Document new options.  Note that 'vfp'\n+\tand 'neon' are aliases for specific implementations.\n+\n 2016-11-16  Richard Sandiford  <richard.sandiford@arm.com>\n \t    Alan Hayward  <alan.hayward@arm.com>\n \t    David Sherwood  <david.sherwood@arm.com>"}, {"sha": "04b2ef140c44d78a1797a5125896fdf05a5a6fba", "filename": "gcc/config/arm/arm-fpus.def", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c012e9bf7a7c16283091714f18f8aa3633d89b6/gcc%2Fconfig%2Farm%2Farm-fpus.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c012e9bf7a7c16283091714f18f8aa3633d89b6/gcc%2Fconfig%2Farm%2Farm-fpus.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-fpus.def?ref=0c012e9bf7a7c16283091714f18f8aa3633d89b6", "patch": "@@ -26,13 +26,15 @@\n    genopt.sh assumes no whitespace up to the first \",\" in each entry.  */\n \n ARM_FPU(\"vfp\",\t\t2, VFP_REG_D16, FPU_FL_NONE)\n+ARM_FPU(\"vfpv2\",\t2, VFP_REG_D16, FPU_FL_NONE)\n ARM_FPU(\"vfpv3\",\t3, VFP_REG_D32, FPU_FL_NONE)\n ARM_FPU(\"vfpv3-fp16\",\t3, VFP_REG_D32, FPU_FL_FP16)\n ARM_FPU(\"vfpv3-d16\",\t3, VFP_REG_D16, FPU_FL_NONE)\n ARM_FPU(\"vfpv3-d16-fp16\", 3, VFP_REG_D16, FPU_FL_FP16)\n ARM_FPU(\"vfpv3xd\",\t3, VFP_REG_SINGLE, FPU_FL_NONE)\n ARM_FPU(\"vfpv3xd-fp16\",\t3, VFP_REG_SINGLE, FPU_FL_FP16)\n ARM_FPU(\"neon\",\t\t3, VFP_REG_D32, FPU_FL_NEON)\n+ARM_FPU(\"neon-vfpv3\",\t3, VFP_REG_D32, FPU_FL_NEON)\n ARM_FPU(\"neon-fp16\",\t3, VFP_REG_D32, FPU_FL_NEON | FPU_FL_FP16)\n ARM_FPU(\"vfpv4\",\t4, VFP_REG_D32, FPU_FL_FP16)\n ARM_FPU(\"vfpv4-d16\",\t4, VFP_REG_D16, FPU_FL_FP16)"}, {"sha": "b12e4588557ae54cd32fce22e3590e75ef0d7cbf", "filename": "gcc/config/arm/arm-tables.opt", "status": "modified", "additions": 24, "deletions": 18, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c012e9bf7a7c16283091714f18f8aa3633d89b6/gcc%2Fconfig%2Farm%2Farm-tables.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c012e9bf7a7c16283091714f18f8aa3633d89b6/gcc%2Fconfig%2Farm%2Farm-tables.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-tables.opt?ref=0c012e9bf7a7c16283091714f18f8aa3633d89b6", "patch": "@@ -474,56 +474,62 @@ EnumValue\n Enum(arm_fpu) String(vfp) Value(0)\n \n EnumValue\n-Enum(arm_fpu) String(vfpv3) Value(1)\n+Enum(arm_fpu) String(vfpv2) Value(1)\n \n EnumValue\n-Enum(arm_fpu) String(vfpv3-fp16) Value(2)\n+Enum(arm_fpu) String(vfpv3) Value(2)\n \n EnumValue\n-Enum(arm_fpu) String(vfpv3-d16) Value(3)\n+Enum(arm_fpu) String(vfpv3-fp16) Value(3)\n \n EnumValue\n-Enum(arm_fpu) String(vfpv3-d16-fp16) Value(4)\n+Enum(arm_fpu) String(vfpv3-d16) Value(4)\n \n EnumValue\n-Enum(arm_fpu) String(vfpv3xd) Value(5)\n+Enum(arm_fpu) String(vfpv3-d16-fp16) Value(5)\n \n EnumValue\n-Enum(arm_fpu) String(vfpv3xd-fp16) Value(6)\n+Enum(arm_fpu) String(vfpv3xd) Value(6)\n \n EnumValue\n-Enum(arm_fpu) String(neon) Value(7)\n+Enum(arm_fpu) String(vfpv3xd-fp16) Value(7)\n \n EnumValue\n-Enum(arm_fpu) String(neon-fp16) Value(8)\n+Enum(arm_fpu) String(neon) Value(8)\n \n EnumValue\n-Enum(arm_fpu) String(vfpv4) Value(9)\n+Enum(arm_fpu) String(neon-vfpv3) Value(9)\n \n EnumValue\n-Enum(arm_fpu) String(vfpv4-d16) Value(10)\n+Enum(arm_fpu) String(neon-fp16) Value(10)\n \n EnumValue\n-Enum(arm_fpu) String(fpv4-sp-d16) Value(11)\n+Enum(arm_fpu) String(vfpv4) Value(11)\n \n EnumValue\n-Enum(arm_fpu) String(fpv5-sp-d16) Value(12)\n+Enum(arm_fpu) String(vfpv4-d16) Value(12)\n \n EnumValue\n-Enum(arm_fpu) String(fpv5-d16) Value(13)\n+Enum(arm_fpu) String(fpv4-sp-d16) Value(13)\n \n EnumValue\n-Enum(arm_fpu) String(neon-vfpv4) Value(14)\n+Enum(arm_fpu) String(fpv5-sp-d16) Value(14)\n \n EnumValue\n-Enum(arm_fpu) String(fp-armv8) Value(15)\n+Enum(arm_fpu) String(fpv5-d16) Value(15)\n \n EnumValue\n-Enum(arm_fpu) String(neon-fp-armv8) Value(16)\n+Enum(arm_fpu) String(neon-vfpv4) Value(16)\n \n EnumValue\n-Enum(arm_fpu) String(crypto-neon-fp-armv8) Value(17)\n+Enum(arm_fpu) String(fp-armv8) Value(17)\n \n EnumValue\n-Enum(arm_fpu) String(vfp3) Value(18)\n+Enum(arm_fpu) String(neon-fp-armv8) Value(18)\n+\n+EnumValue\n+Enum(arm_fpu) String(crypto-neon-fp-armv8) Value(19)\n+\n+EnumValue\n+Enum(arm_fpu) String(vfp3) Value(20)\n "}, {"sha": "4ca8ea3d002530fdeb26eb93be93260a3fd35818", "filename": "gcc/config/arm/t-aprofile", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c012e9bf7a7c16283091714f18f8aa3633d89b6/gcc%2Fconfig%2Farm%2Ft-aprofile", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c012e9bf7a7c16283091714f18f8aa3633d89b6/gcc%2Fconfig%2Farm%2Ft-aprofile", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ft-aprofile?ref=0c012e9bf7a7c16283091714f18f8aa3633d89b6", "patch": "@@ -112,6 +112,8 @@ MULTILIB_MATCHES       += mfpu?vfpv4-d16=mfpu?vfpv4\n MULTILIB_MATCHES       += mfpu?vfpv4-d16=mfpu?fpv5-d16\n MULTILIB_MATCHES       += mfpu?vfpv4-d16=mfpu?fp-armv8\n MULTILIB_MATCHES       += mfpu?neon-fp-armv8=mfpu?crypto-neon-fp-armv8\n+MULTILIB_MATCHES       += mfpu?vfp=mfpu?vfpv2\n+MULTILIB_MATCHES       += mfpu?neon=mfpu?neon-vfpv3\n \n \n # Map all requests for vfpv3 with a later CPU to vfpv3-d16 v7-a."}, {"sha": "1d24b31a3f9d08b957886e6ac56146a62a093680", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c012e9bf7a7c16283091714f18f8aa3633d89b6/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c012e9bf7a7c16283091714f18f8aa3633d89b6/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=0c012e9bf7a7c16283091714f18f8aa3633d89b6", "patch": "@@ -15103,12 +15103,14 @@ is unsuccessful the option has no effect.\n @item -mfpu=@var{name}\n @opindex mfpu\n This specifies what floating-point hardware (or hardware emulation) is\n-available on the target.  Permissible names are: @samp{vfp}, @samp{vfpv3},\n+available on the target.  Permissible names are: @samp{vfpv2}, @samp{vfpv3},\n @samp{vfpv3-fp16}, @samp{vfpv3-d16}, @samp{vfpv3-d16-fp16}, @samp{vfpv3xd},\n-@samp{vfpv3xd-fp16}, @samp{neon}, @samp{neon-fp16}, @samp{vfpv4},\n+@samp{vfpv3xd-fp16}, @samp{neon-vfpv3}, @samp{neon-fp16}, @samp{vfpv4},\n @samp{vfpv4-d16}, @samp{fpv4-sp-d16}, @samp{neon-vfpv4},\n @samp{fpv5-d16}, @samp{fpv5-sp-d16},\n @samp{fp-armv8}, @samp{neon-fp-armv8} and @samp{crypto-neon-fp-armv8}.\n+Note that @samp{neon} is an alias for @samp{neon-vfpv3} and @samp{vfp}\n+is an alias for @samp{vfpv2}.\n \n If @option{-msoft-float} is specified this specifies the format of\n floating-point values."}]}