{"sha": "1daa198aafd72925ca8dd8616385f523ff180d4a", "node_id": "C_kwDOANBUbNoAKDFkYWExOThhYWZkNzI5MjVjYThkZDg2MTYzODVmNTIzZmYxODBkNGE", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-03-23T11:21:32Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-03-23T14:57:33Z"}, "message": "rtl-optimization/105028 - fix compile-time hog in form_threads_from_copies\n\nform_threads_from_copies processes a sorted array of copies, skipping\nthose with the same thread and conflicting threads and merging the\nfirst non-conflicting ones.  After that it terminates the loop and\ngathers the remaining elements of the array, skipping same thread\ncopies, re-starting the process.  For a large number of copies this\ngathering of the rest takes considerable time and it also appears\npointless.  The following simply continues processing the array\nwhich should be equivalent as far as I can see.\n\nThis takes form_threads_from_copies off the profile radar from\npreviously taking ~50% of the compile-time.\n\n2022-03-23  Richard Biener  <rguenther@suse.de>\n\n\tPR rtl-optimization/105028\n\t* ira-color.cc (form_threads_from_copies): Remove unnecessary\n\tcopying of the sorted_copies tail.", "tree": {"sha": "1e83579a042cb3667f0d5156e9d25ef212027ef4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1e83579a042cb3667f0d5156e9d25ef212027ef4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1daa198aafd72925ca8dd8616385f523ff180d4a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1daa198aafd72925ca8dd8616385f523ff180d4a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1daa198aafd72925ca8dd8616385f523ff180d4a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1daa198aafd72925ca8dd8616385f523ff180d4a/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a3f78748fab6b24e3d4a8b319afd3f8afa17248f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3f78748fab6b24e3d4a8b319afd3f8afa17248f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a3f78748fab6b24e3d4a8b319afd3f8afa17248f"}], "stats": {"total": 71, "additions": 28, "deletions": 43}, "files": [{"sha": "4a1a325e8e31bc495846e840b0a61251406aeb92", "filename": "gcc/ira-color.cc", "status": "modified", "additions": 28, "deletions": 43, "changes": 71, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1daa198aafd72925ca8dd8616385f523ff180d4a/gcc%2Fira-color.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1daa198aafd72925ca8dd8616385f523ff180d4a/gcc%2Fira-color.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fira-color.cc?ref=1daa198aafd72925ca8dd8616385f523ff180d4a", "patch": "@@ -2348,58 +2348,43 @@ form_threads_from_copies (int cp_num)\n {\n   ira_allocno_t a, thread1, thread2;\n   ira_copy_t cp;\n-  int i, n;\n \n   qsort (sorted_copies, cp_num, sizeof (ira_copy_t), copy_freq_compare_func);\n   /* Form threads processing copies, most frequently executed\n      first.  */\n-  for (; cp_num != 0;)\n+  for (int i = 0; i < cp_num; i++)\n     {\n-      for (i = 0; i < cp_num; i++)\n+      cp = sorted_copies[i];\n+      thread1 = ALLOCNO_COLOR_DATA (cp->first)->first_thread_allocno;\n+      thread2 = ALLOCNO_COLOR_DATA (cp->second)->first_thread_allocno;\n+      if (thread1 == thread2)\n+\tcontinue;\n+      if (! allocno_thread_conflict_p (thread1, thread2))\n \t{\n-\t  cp = sorted_copies[i];\n-\t  thread1 = ALLOCNO_COLOR_DATA (cp->first)->first_thread_allocno;\n-\t  thread2 = ALLOCNO_COLOR_DATA (cp->second)->first_thread_allocno;\n-\t  if (thread1 == thread2)\n-\t    continue;\n-\t  if (! allocno_thread_conflict_p (thread1, thread2))\n+\t  if (internal_flag_ira_verbose > 3 && ira_dump_file != NULL)\n+\t    fprintf\n+\t\t(ira_dump_file,\n+\t\t \"        Forming thread by copy %d:a%dr%d-a%dr%d (freq=%d):\\n\",\n+\t\t cp->num, ALLOCNO_NUM (cp->first), ALLOCNO_REGNO (cp->first),\n+\t\t ALLOCNO_NUM (cp->second), ALLOCNO_REGNO (cp->second),\n+\t\t cp->freq);\n+\t  merge_threads (thread1, thread2);\n+\t  if (internal_flag_ira_verbose > 3 && ira_dump_file != NULL)\n \t    {\n-\t      if (internal_flag_ira_verbose > 3 && ira_dump_file != NULL)\n-\t\tfprintf\n-\t\t  (ira_dump_file,\n-\t\t   \"        Forming thread by copy %d:a%dr%d-a%dr%d (freq=%d):\\n\",\n-\t\t   cp->num, ALLOCNO_NUM (cp->first), ALLOCNO_REGNO (cp->first),\n-\t\t   ALLOCNO_NUM (cp->second), ALLOCNO_REGNO (cp->second),\n-\t\t   cp->freq);\n-\t      merge_threads (thread1, thread2);\n-\t      if (internal_flag_ira_verbose > 3 && ira_dump_file != NULL)\n-\t\t{\n-\t\t  thread1 = ALLOCNO_COLOR_DATA (thread1)->first_thread_allocno;\n-\t\t  fprintf (ira_dump_file, \"          Result (freq=%d): a%dr%d(%d)\",\n-\t\t\t   ALLOCNO_COLOR_DATA (thread1)->thread_freq,\n-\t\t\t   ALLOCNO_NUM (thread1), ALLOCNO_REGNO (thread1),\n-\t\t\t   ALLOCNO_FREQ (thread1));\n-\t\t  for (a = ALLOCNO_COLOR_DATA (thread1)->next_thread_allocno;\n-\t\t       a != thread1;\n-\t\t       a = ALLOCNO_COLOR_DATA (a)->next_thread_allocno)\n-\t\t    fprintf (ira_dump_file, \" a%dr%d(%d)\",\n-\t\t\t     ALLOCNO_NUM (a), ALLOCNO_REGNO (a),\n-\t\t\t     ALLOCNO_FREQ (a));\n-\t\t  fprintf (ira_dump_file, \"\\n\");\n-\t\t}\n-\t      i++;\n-\t      break;\n+\t      thread1 = ALLOCNO_COLOR_DATA (thread1)->first_thread_allocno;\n+\t      fprintf (ira_dump_file, \"          Result (freq=%d): a%dr%d(%d)\",\n+\t\t       ALLOCNO_COLOR_DATA (thread1)->thread_freq,\n+\t\t       ALLOCNO_NUM (thread1), ALLOCNO_REGNO (thread1),\n+\t\t       ALLOCNO_FREQ (thread1));\n+\t      for (a = ALLOCNO_COLOR_DATA (thread1)->next_thread_allocno;\n+\t\t   a != thread1;\n+\t\t   a = ALLOCNO_COLOR_DATA (a)->next_thread_allocno)\n+\t\tfprintf (ira_dump_file, \" a%dr%d(%d)\",\n+\t\t\t ALLOCNO_NUM (a), ALLOCNO_REGNO (a),\n+\t\t\t ALLOCNO_FREQ (a));\n+\t      fprintf (ira_dump_file, \"\\n\");\n \t    }\n \t}\n-      /* Collect the rest of copies.  */\n-      for (n = 0; i < cp_num; i++)\n-\t{\n-\t  cp = sorted_copies[i];\n-\t  if (ALLOCNO_COLOR_DATA (cp->first)->first_thread_allocno\n-\t      != ALLOCNO_COLOR_DATA (cp->second)->first_thread_allocno)\n-\t    sorted_copies[n++] = cp;\n-\t}\n-      cp_num = n;\n     }\n }\n "}]}