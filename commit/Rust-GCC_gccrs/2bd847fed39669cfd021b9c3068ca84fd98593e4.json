{"sha": "2bd847fed39669cfd021b9c3068ca84fd98593e4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmJkODQ3ZmVkMzk2NjljZmQwMjFiOWMzMDY4Y2E4NGZkOTg1OTNlNA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2016-01-15T15:37:38Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2016-01-15T15:37:38Z"}, "message": "re PR debug/69137 (ICE in odr_type_p, at ipa-utils.h:257)\n\n2016-01-15  Richard Biener  <rguenther@suse.de>\n\n\tPR debug/69137\n\t* dwarf2out.c (add_linkage_name_raw): New function split out from ...\n\t(add_linkage_name): ... here.\n\t(gen_typedef_die): Use add_linkage_name_raw instead of\n\tadd_linkage_attr to delay DECL_ASSEMBLER_NAME computation\n\tif necessary.\n\n\t* g++.dg/lto/pr69137_0.C: New testcase.\n\nFrom-SVN: r232434", "tree": {"sha": "e8a572d85ba2a84569866ceceeae4a27be711b4f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e8a572d85ba2a84569866ceceeae4a27be711b4f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2bd847fed39669cfd021b9c3068ca84fd98593e4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2bd847fed39669cfd021b9c3068ca84fd98593e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2bd847fed39669cfd021b9c3068ca84fd98593e4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2bd847fed39669cfd021b9c3068ca84fd98593e4/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "33a126a6f2669a29a6657bffa96214ea33de211b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33a126a6f2669a29a6657bffa96214ea33de211b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/33a126a6f2669a29a6657bffa96214ea33de211b"}], "stats": {"total": 60, "additions": 44, "deletions": 16}, "files": [{"sha": "675893e69931d207ae629e23116c645e1aa18c6f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bd847fed39669cfd021b9c3068ca84fd98593e4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bd847fed39669cfd021b9c3068ca84fd98593e4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2bd847fed39669cfd021b9c3068ca84fd98593e4", "patch": "@@ -1,3 +1,12 @@\n+2016-01-15  Richard Biener  <rguenther@suse.de>\n+\n+\tPR debug/69137\n+\t* dwarf2out.c (add_linkage_name_raw): New function split out from ...\n+\t(add_linkage_name): ... here.\n+\t(gen_typedef_die): Use add_linkage_name_raw instead of\n+\tadd_linkage_attr to delay DECL_ASSEMBLER_NAME computation\n+\tif necessary.\n+\n 2016-01-15  Cesar Philippidis  <cesar@codesourcery.com>\n \n \t* gimplify.c (oacc_default_clause): Decode reference and pointer"}, {"sha": "f742900037bfb0ababde15727c46ac17cd5346bc", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 22, "deletions": 16, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bd847fed39669cfd021b9c3068ca84fd98593e4/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bd847fed39669cfd021b9c3068ca84fd98593e4/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=2bd847fed39669cfd021b9c3068ca84fd98593e4", "patch": "@@ -18573,6 +18573,26 @@ add_src_coords_attributes (dw_die_ref die, tree decl)\n \n /* Add DW_AT_{,MIPS_}linkage_name attribute for the given decl.  */\n \n+static void\n+add_linkage_name_raw (dw_die_ref die, tree decl)\n+{\n+  /* Defer until we have an assembler name set.  */\n+  if (!DECL_ASSEMBLER_NAME_SET_P (decl))\n+    {\n+      limbo_die_node *asm_name;\n+\n+      asm_name = ggc_cleared_alloc<limbo_die_node> ();\n+      asm_name->die = die;\n+      asm_name->created_for = decl;\n+      asm_name->next = deferred_asm_name;\n+      deferred_asm_name = asm_name;\n+    }\n+  else if (DECL_ASSEMBLER_NAME (decl) != DECL_NAME (decl))\n+    add_linkage_attr (die, decl);\n+}\n+\n+/* Add DW_AT_{,MIPS_}linkage_name attribute for the given decl if desired.  */\n+\n static void\n add_linkage_name (dw_die_ref die, tree decl)\n {\n@@ -18581,21 +18601,7 @@ add_linkage_name (dw_die_ref die, tree decl)\n       && TREE_PUBLIC (decl)\n       && !(TREE_CODE (decl) == VAR_DECL && DECL_REGISTER (decl))\n       && die->die_tag != DW_TAG_member)\n-    {\n-      /* Defer until we have an assembler name set.  */\n-      if (!DECL_ASSEMBLER_NAME_SET_P (decl))\n-\t{\n-\t  limbo_die_node *asm_name;\n-\n-\t  asm_name = ggc_cleared_alloc<limbo_die_node> ();\n-\t  asm_name->die = die;\n-\t  asm_name->created_for = decl;\n-\t  asm_name->next = deferred_asm_name;\n-\t  deferred_asm_name = asm_name;\n-\t}\n-      else if (DECL_ASSEMBLER_NAME (decl) != DECL_NAME (decl))\n-\tadd_linkage_attr (die, decl);\n-    }\n+    add_linkage_name_raw (die, decl);\n }\n \n /* Add a DW_AT_name attribute and source coordinate attribute for the\n@@ -22425,7 +22431,7 @@ gen_typedef_die (tree decl, dw_die_ref context_die)\n \t\t is the name of the typedef decl naming the anonymous\n \t\t struct.  This greatly eases the work of consumers of\n \t\t this debug info.  */\n-\t      add_linkage_attr (lookup_type_die (type), decl);\n+\t      add_linkage_name_raw (lookup_type_die (type), decl);\n \t    }\n \t}\n "}, {"sha": "a09358502f6775a8512dd7231cc623ebdac0f03b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bd847fed39669cfd021b9c3068ca84fd98593e4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bd847fed39669cfd021b9c3068ca84fd98593e4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2bd847fed39669cfd021b9c3068ca84fd98593e4", "patch": "@@ -1,3 +1,8 @@\n+2016-01-15  Richard Biener  <rguenther@suse.de>\n+\n+\tPR debug/69137\n+\t* g++.dg/lto/pr69137_0.C: New testcase.\n+\n 2016-01-15  Richard Sandiford  <richard.sandiford@arm.com>\n \n \tPR middle-end/69246"}, {"sha": "09367e2109f325c9700b69caffe0dfa6a693b6f7", "filename": "gcc/testsuite/g++.dg/lto/pr69137_0.C", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bd847fed39669cfd021b9c3068ca84fd98593e4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fpr69137_0.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bd847fed39669cfd021b9c3068ca84fd98593e4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fpr69137_0.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fpr69137_0.C?ref=2bd847fed39669cfd021b9c3068ca84fd98593e4", "patch": "@@ -0,0 +1,8 @@\n+// { dg-lto-do link }\n+// { dg-lto-options { { -std=c++11 -g -flto } } }\n+// { dg-extra-ld-options \"-r -nostdlib\" }\n+\n+typedef struct {\n+  typedef struct { } VarSelectorRecord;\n+} Format14Cmap;\n+void fn1() { Format14Cmap a; }"}]}