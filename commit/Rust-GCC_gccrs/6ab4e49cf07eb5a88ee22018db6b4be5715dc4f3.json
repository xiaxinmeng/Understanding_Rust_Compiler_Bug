{"sha": "6ab4e49cf07eb5a88ee22018db6b4be5715dc4f3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmFiNGU0OWNmMDdlYjVhODhlZTIyMDE4ZGI2YjRiZTU3MTVkYzRmMw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2010-05-27T18:39:28Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2010-05-27T18:39:28Z"}, "message": "re PR c++/43555 (wrong address calculation of multidimensional variable-length array element)\n\n\tPR c++/43555\n\t* decl.c (grokdeclarator) [cdk_pointer et al]: Force evaluation of\n\tanonymous VLA size.\n\nFrom-SVN: r159939", "tree": {"sha": "1b85f7a0d257ecc9011ec995e7345b82efe83f45", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1b85f7a0d257ecc9011ec995e7345b82efe83f45"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6ab4e49cf07eb5a88ee22018db6b4be5715dc4f3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ab4e49cf07eb5a88ee22018db6b4be5715dc4f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ab4e49cf07eb5a88ee22018db6b4be5715dc4f3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ab4e49cf07eb5a88ee22018db6b4be5715dc4f3/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7ec62b257548e59a77eb7b7c2ffc467bc5fa21c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ec62b257548e59a77eb7b7c2ffc467bc5fa21c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ec62b257548e59a77eb7b7c2ffc467bc5fa21c7"}], "stats": {"total": 77, "additions": 77, "deletions": 0}, "files": [{"sha": "f63703ead046f5a975cb9be245836cee5749de0f", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ab4e49cf07eb5a88ee22018db6b4be5715dc4f3/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ab4e49cf07eb5a88ee22018db6b4be5715dc4f3/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=6ab4e49cf07eb5a88ee22018db6b4be5715dc4f3", "patch": "@@ -1,3 +1,9 @@\n+2010-05-27  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/43555\n+\t* decl.c (grokdeclarator) [cdk_pointer et al]: Force evaluation of\n+\tanonymous VLA size.\n+\n 2010-05-27  Kai Tietz  <kai.tietz@onevision.com>\n \n \tPR bootstrap/44287"}, {"sha": "0d30340358867d08c275b35c5d5462afadb35b2c", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ab4e49cf07eb5a88ee22018db6b4be5715dc4f3/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ab4e49cf07eb5a88ee22018db6b4be5715dc4f3/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=6ab4e49cf07eb5a88ee22018db6b4be5715dc4f3", "patch": "@@ -8705,6 +8705,34 @@ grokdeclarator (const cp_declarator *declarator,\n                    : G_(\"cannot declare pointer to qualified function type %qT\"),\n \t\t   type);\n \n+\t  /* When the pointed-to type involves components of variable size,\n+\t     care must be taken to ensure that the size evaluation code is\n+\t     emitted early enough to dominate all the possible later uses\n+\t     and late enough for the variables on which it depends to have\n+\t     been assigned.\n+\n+\t     This is expected to happen automatically when the pointed-to\n+\t     type has a name/declaration of it's own, but special attention\n+\t     is required if the type is anonymous.\n+\n+\t     We handle the NORMAL and FIELD contexts here by inserting a\n+\t     dummy statement that just evaluates the size at a safe point\n+\t     and ensures it is not deferred until e.g. within a deeper\n+\t     conditional context (c++/43555).\n+\n+\t     We expect nothing to be needed here for PARM or TYPENAME.\n+\t     Evaluating the size at this point for TYPENAME would\n+\t     actually be incorrect, as we might be in the middle of an\n+\t     expression with side effects on the pointed-to type size\n+\t     \"arguments\" prior to the pointer declaration point and the\n+\t     size evaluation could end up prior to the side effects.  */\n+\n+\t  if (!TYPE_NAME (type)\n+\t      && (decl_context == NORMAL || decl_context == FIELD)\n+\t      && at_function_scope_p ()\n+\t      && variably_modified_type_p (type, NULL_TREE))\n+\t    finish_expr_stmt (TYPE_SIZE (type));\n+\n \t  if (declarator->kind == cdk_reference)\n \t    {\n \t      /* In C++0x, the type we are creating a reference to might be"}, {"sha": "5501c8dd93ee627644fc3c33d5b5826689232058", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ab4e49cf07eb5a88ee22018db6b4be5715dc4f3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ab4e49cf07eb5a88ee22018db6b4be5715dc4f3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6ab4e49cf07eb5a88ee22018db6b4be5715dc4f3", "patch": "@@ -1,3 +1,8 @@\n+2010-05-27  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/43555\n+\t* g++.dg/ext/vla9.C: New.\n+\n 2010-05-27  Iain Sandoe  <iains@gcc.gnu.org>\n \n \tPR ObjC/44140"}, {"sha": "c58edbc9bd1bc1c026488b4918099d2059fb2728", "filename": "gcc/testsuite/g++.dg/ext/vla9.C", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ab4e49cf07eb5a88ee22018db6b4be5715dc4f3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fvla9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ab4e49cf07eb5a88ee22018db6b4be5715dc4f3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fvla9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fvla9.C?ref=6ab4e49cf07eb5a88ee22018db6b4be5715dc4f3", "patch": "@@ -0,0 +1,38 @@\n+// PR c++/43555\n+// { dg-options \"\" }\n+// { dg-do run }\n+\n+extern \"C\" void * malloc (__SIZE_TYPE__);\n+extern \"C\" int printf (const char *, ...);\n+extern \"C\" void abort(void);\n+\n+int nx,ny;\n+\n+void f(double *x1d,int choice)\n+{\n+  double (*x2d)[nx][ny]=(double(*)[nx][ny])x1d;\n+  unsigned long delta;\n+//  (*x2d)[0][0]=123; // <- this line affects the result\n+  if (choice!=0)\n+  {\n+    delta=&(*x2d)[1][0]-x1d;\n+  }\n+  else\n+  {\n+    delta=&(*x2d)[1][0]-x1d;\n+  }\n+  printf(\"Choice: %d, Delta: %ld\\n\",choice,delta);\n+  if (delta != ny)\n+    abort ();\n+}\n+\n+int main()\n+{\n+  double *data;\n+  nx=100;\n+  ny=100;\n+  data=(double*)malloc(nx*ny*sizeof(double));\n+  f(data,0);\n+  f(data,1);\n+  return 0;\n+}"}]}