{"sha": "ce4ae1f4893e322495c5d24b2f0e807a7f7cf92f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2U0YWUxZjQ4OTNlMzIyNDk1YzVkMjRiMmYwZTgwN2E3ZjdjZjkyZg==", "commit": {"author": {"name": "Kewen Lin", "email": "linkw@linux.ibm.com", "date": "2020-11-09T02:35:21Z"}, "committer": {"name": "Kewen Lin", "email": "linkw@linux.ibm.com", "date": "2020-11-09T02:35:21Z"}, "message": "ira: Recompute regstat as max_regno changes [PR97705]\n\nAs PR97705 shows, the commit r11-4637 caused some dumping\ncomparison difference error on pass ira.  It exposed one\nissue about the newly introduced function remove_scratches,\nwhich can increase the largest pseudo reg number if it\nsucceeds, later some function will use the max_reg_num()\nto get the latest max_regno, when iterating the numbers\nwe can access some data structures which are allocated as\nthe previous max_regno, some out of array bound accesses\ncan occur, the failure can be random since the values\nbeyond the array could be random.\n\nThis patch is to free/reinit/recompute the relevant data\nstructures that is regstat_n_sets_and_refs and reg_info_p\nto ensure we won't access beyond some array bounds.\n\nBootstrapped/regtested on powerpc64le-linux-gnu P9 and\npowerpc64-linux-gnu P8.\n\ngcc/ChangeLog:\n\n\tPR rtl-optimization/97705\n\t* ira.c (ira): Refactor some regstat free/init/compute invocation\n\tinto lambda function regstat_recompute_for_max_regno, and call it\n\twhen max_regno increases as remove_scratches succeeds.", "tree": {"sha": "58d905f74ecd558b1615f53fd527df26467b630d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/58d905f74ecd558b1615f53fd527df26467b630d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ce4ae1f4893e322495c5d24b2f0e807a7f7cf92f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce4ae1f4893e322495c5d24b2f0e807a7f7cf92f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce4ae1f4893e322495c5d24b2f0e807a7f7cf92f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce4ae1f4893e322495c5d24b2f0e807a7f7cf92f/comments", "author": {"login": "jedilyn", "id": 38515402, "node_id": "MDQ6VXNlcjM4NTE1NDAy", "avatar_url": "https://avatars.githubusercontent.com/u/38515402?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jedilyn", "html_url": "https://github.com/jedilyn", "followers_url": "https://api.github.com/users/jedilyn/followers", "following_url": "https://api.github.com/users/jedilyn/following{/other_user}", "gists_url": "https://api.github.com/users/jedilyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/jedilyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jedilyn/subscriptions", "organizations_url": "https://api.github.com/users/jedilyn/orgs", "repos_url": "https://api.github.com/users/jedilyn/repos", "events_url": "https://api.github.com/users/jedilyn/events{/privacy}", "received_events_url": "https://api.github.com/users/jedilyn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jedilyn", "id": 38515402, "node_id": "MDQ6VXNlcjM4NTE1NDAy", "avatar_url": "https://avatars.githubusercontent.com/u/38515402?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jedilyn", "html_url": "https://github.com/jedilyn", "followers_url": "https://api.github.com/users/jedilyn/followers", "following_url": "https://api.github.com/users/jedilyn/following{/other_user}", "gists_url": "https://api.github.com/users/jedilyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/jedilyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jedilyn/subscriptions", "organizations_url": "https://api.github.com/users/jedilyn/orgs", "repos_url": "https://api.github.com/users/jedilyn/repos", "events_url": "https://api.github.com/users/jedilyn/events{/privacy}", "received_events_url": "https://api.github.com/users/jedilyn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fb95de7a11b8ac438857a02aaa0e1e50e9613f90", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb95de7a11b8ac438857a02aaa0e1e50e9613f90", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb95de7a11b8ac438857a02aaa0e1e50e9613f90"}], "stats": {"total": 27, "additions": 20, "deletions": 7}, "files": [{"sha": "5443031674e501a4f462d4655ecb8da3bff7bd12", "filename": "gcc/ira.c", "status": "modified", "additions": 20, "deletions": 7, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce4ae1f4893e322495c5d24b2f0e807a7f7cf92f/gcc%2Fira.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce4ae1f4893e322495c5d24b2f0e807a7f7cf92f/gcc%2Fira.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fira.c?ref=ce4ae1f4893e322495c5d24b2f0e807a7f7cf92f", "patch": "@@ -5526,8 +5526,26 @@ ira (FILE *f)\n   end_alias_analysis ();\n   free (reg_equiv);\n \n+  /* Once max_regno changes, we need to free and re-init/re-compute\n+     some data structures like regstat_n_sets_and_refs and reg_info_p.  */\n+  auto regstat_recompute_for_max_regno = []() {\n+    regstat_free_n_sets_and_refs ();\n+    regstat_free_ri ();\n+    regstat_init_n_sets_and_refs ();\n+    regstat_compute_ri ();\n+  };\n+\n+  int max_regno_before_rm = max_reg_num ();\n   if (ira_use_lra_p && remove_scratches ())\n-    ira_expand_reg_equiv ();\n+    {\n+      ira_expand_reg_equiv ();\n+      /* For now remove_scatches is supposed to create pseudos when it\n+\t succeeds, assert this happens all the time.  Once it doesn't\n+\t hold, we should guard the regstat recompute for the case\n+\t max_regno changes.  */\n+      gcc_assert (max_regno_before_rm != max_reg_num ());\n+      regstat_recompute_for_max_regno ();\n+    }\n \n   if (resize_reg_info () && flag_ira_loop_pressure)\n     ira_set_pseudo_classes (true, ira_dump_file);\n@@ -5654,12 +5672,7 @@ ira (FILE *f)\n #endif\n \n   if (max_regno != max_regno_before_ira)\n-    {\n-      regstat_free_n_sets_and_refs ();\n-      regstat_free_ri ();\n-      regstat_init_n_sets_and_refs ();\n-      regstat_compute_ri ();\n-    }\n+    regstat_recompute_for_max_regno ();\n \n   overall_cost_before = ira_overall_cost;\n   if (! ira_conflicts_p)"}]}