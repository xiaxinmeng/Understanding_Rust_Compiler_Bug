{"sha": "944ce67865dc2a15dd2eded977935cbe3545f2b4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTQ0Y2U2Nzg2NWRjMmExNWRkMmVkZWQ5Nzc5MzVjYmUzNTQ1ZjJiNA==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2015-05-15T05:04:32Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2015-05-15T05:04:32Z"}, "message": "alpha.md (extendqidi2): Use general_operand instead of some_operand for operand[1] predicate.\n\n\t* config/alpha/alpha.md (extendqidi2): Use general_operand\n\tinstead of some_operand for operand[1] predicate.\n\t(extendhidi2): Ditto.\n\t(cbranchdi4): Use general_operand instead of some_operand\n\tfor operand[1] and operands[2] predicates.\n\t(cstoredi4): Ditto.\n\t* config/alpha/predicates.md (some_operand): Remove unused predicate.\n\t(some_ni_operand): Ditto.\n\nFrom-SVN: r223211", "tree": {"sha": "24e0ef038c835d8451c829aeb6bb99cd02034cf6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/24e0ef038c835d8451c829aeb6bb99cd02034cf6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/944ce67865dc2a15dd2eded977935cbe3545f2b4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/944ce67865dc2a15dd2eded977935cbe3545f2b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/944ce67865dc2a15dd2eded977935cbe3545f2b4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/944ce67865dc2a15dd2eded977935cbe3545f2b4/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7eb05850a844a5e24f1bb66718324596c034ae8e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7eb05850a844a5e24f1bb66718324596c034ae8e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7eb05850a844a5e24f1bb66718324596c034ae8e"}], "stats": {"total": 37, "additions": 17, "deletions": 20}, "files": [{"sha": "d621d0317d97d86e38f3b53e23b5b4c69b2a8bbe", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/944ce67865dc2a15dd2eded977935cbe3545f2b4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/944ce67865dc2a15dd2eded977935cbe3545f2b4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=944ce67865dc2a15dd2eded977935cbe3545f2b4", "patch": "@@ -1,3 +1,14 @@\n+2015-05-15  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/alpha/alpha.md (extendqidi2): Use general_operand\n+\tinstead of some_operand for operand[1] predicate.\n+\t(extendhidi2): Ditto.\n+\t(cbranchdi4): Use general_operand instead of some_operand\n+\tfor operand[1] and operands[2] predicates.\n+\t(cstoredi4): Ditto.\n+\t* config/alpha/predicates.md (some_operand): Remove unused predicate.\n+\t(some_ni_operand): Ditto.\n+\n 2015-05-15  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/alpha/alpha.c (alpha_extract_integer): Do not handle"}, {"sha": "81c2d4f53a430e3ec91ebb2de00aeac50ff153d4", "filename": "gcc/config/alpha/alpha.md", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/944ce67865dc2a15dd2eded977935cbe3545f2b4/gcc%2Fconfig%2Falpha%2Falpha.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/944ce67865dc2a15dd2eded977935cbe3545f2b4/gcc%2Fconfig%2Falpha%2Falpha.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.md?ref=944ce67865dc2a15dd2eded977935cbe3545f2b4", "patch": "@@ -1235,7 +1235,7 @@\n \n (define_expand \"extendqidi2\"\n   [(set (match_operand:DI 0 \"register_operand\")\n-\t(sign_extend:DI (match_operand:QI 1 \"some_operand\")))]\n+\t(sign_extend:DI (match_operand:QI 1 \"general_operand\")))]\n   \"\"\n {\n   if (TARGET_BWX)\n@@ -1280,7 +1280,7 @@\n \n (define_expand \"extendhidi2\"\n   [(set (match_operand:DI 0 \"register_operand\")\n-\t(sign_extend:DI (match_operand:HI 1 \"some_operand\")))]\n+\t(sign_extend:DI (match_operand:HI 1 \"general_operand\")))]\n   \"\"\n {\n   if (TARGET_BWX)\n@@ -2902,8 +2902,8 @@\n \n (define_expand \"cbranchdi4\"\n   [(use (match_operator 0 \"alpha_cbranch_operator\"\n-         [(match_operand:DI 1 \"some_operand\")\n-          (match_operand:DI 2 \"some_operand\")]))\n+         [(match_operand:DI 1 \"general_operand\")\n+          (match_operand:DI 2 \"general_operand\")]))\n    (use (match_operand 3))]\n   \"\"\n   \"alpha_emit_conditional_branch (operands, DImode); DONE;\")\n@@ -2936,8 +2936,8 @@\n \n (define_expand \"cstoredi4\"\n   [(use (match_operator:DI 1 \"alpha_cbranch_operator\"\n-         [(match_operand:DI 2 \"some_operand\")\n-          (match_operand:DI 3 \"some_operand\")]))\n+         [(match_operand:DI 2 \"general_operand\")\n+          (match_operand:DI 3 \"general_operand\")]))\n    (clobber (match_operand:DI 0 \"register_operand\"))]\n   \"\"\n {"}, {"sha": "2a76710c4fc876f5fa3135473b8519c40c7988ff", "filename": "gcc/config/alpha/predicates.md", "status": "modified", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/944ce67865dc2a15dd2eded977935cbe3545f2b4/gcc%2Fconfig%2Falpha%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/944ce67865dc2a15dd2eded977935cbe3545f2b4/gcc%2Fconfig%2Falpha%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Fpredicates.md?ref=944ce67865dc2a15dd2eded977935cbe3545f2b4", "patch": "@@ -148,20 +148,6 @@\n   return REGNO_REG_CLASS (REGNO (op)) == GENERAL_REGS;\n })\n \n-;; Return 1 if OP is something that can be reloaded into a register;\n-;; if it is a MEM, it need not be valid.\n-(define_predicate \"some_operand\"\n-  (ior (match_code \"reg,mem,const_int,const_wide_int,const_double,const_vector,\n-\t\t    label_ref,symbol_ref,const,high\")\n-       (and (match_code \"subreg\")\n-\t    (match_test \"some_operand (SUBREG_REG (op), VOIDmode)\"))))\n-\n-;; Likewise, but don't accept constants.\n-(define_predicate \"some_ni_operand\"\n-  (ior (match_code \"reg,mem\")\n-       (and (match_code \"subreg\")\n-\t    (match_test \"some_ni_operand (SUBREG_REG (op), VOIDmode)\"))))\n-\n ;; Return 1 if OP is a valid operand for the source of a move insn.\n (define_predicate \"input_operand\"\n   (match_code \"label_ref,symbol_ref,const,high,reg,subreg,mem,"}]}