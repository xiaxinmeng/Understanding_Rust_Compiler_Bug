{"sha": "c981d2231dfd8a3415450c1944b4e6c6e4cebadf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yzk4MWQyMjMxZGZkOGEzNDE1NDUwYzE5NDRiNGU2YzZlNGNlYmFkZg==", "commit": {"author": {"name": "Gabriel Dos Reis", "email": "gdr@integrable-solutions.net", "date": "2005-12-12T09:14:12Z"}, "committer": {"name": "Gabriel Dos Reis", "email": "gdr@gcc.gnu.org", "date": "2005-12-12T09:14:12Z"}, "message": "varray.h: Allow compilation with a C++ compiler.\n\n        * varray.h: Allow compilation with a C++ compiler.\n        (union varray_data_tag): Prefix all field names with \"vdt_\".\n        (VARRAY_CHAR, VARRAY_UCHAR, VARRAY_SHORT, VARRAY_USHORT,\n        VARRAY_INT, VARRAY_UINT, VARRAY_LONG, VARRAY_ULONG,\n        VARRAY_WIDE_INT, VARRAY_UWIDE_INT, VARRAY_GENERIC_PTR,\n        VARRAY_GENERIC_PTR_NOGC, VARRAY_CHAR_PTR, VARRAY_RTX,\n        VARRAY_RTVEC, VARRAY_TREE, VARRAY_BITMAP, VARRAY_REG, VARRAY_BB,\n        VARRAY_ELT_LIST, VARRAY_EDGE, VARRAY_TREE_PTR): Adjust definition.\n        (VARRAY_PUSH_CHAR, VARRAY_PUSH_UCHAR, VARRAY_PUSH_SHORT,\n        VARRAY_PUSH_USHORT, VARRAY_PUSH_INT, VARRAY_PUSH_UINT, \n        VARRAY_PUSH_LONG, VARRAY_PUSH_ULONG, VARRAY_PUSH_WIDE_INT, \n        VARRAY_PUSH_UWIDE_INT, VARRAY_PUSH_GENERIC_PTR, \n        VARRAY_PUSH_GENERIC_PTR_NOGC, VARRAY_PUSH_CHAR_PTR, \n        VARRAY_PUSH_RTX, VARRAY_PUSH_RTVEC, VARRAY_PUSH_TREE, \n        VARRAY_PUSH_BITMAP, VARRAY_PUSH_REG, VARRAY_PUSH_BB, \n        VARRAY_PUSH_EDGE, VARRAY_PUSH_TREE_PTR): Likewise.\n        (VARRAY_TOP_CHAR, VARRAY_TOP_UCHAR, VARRAY_TOP_SHORT, \n        VARRAY_TOP_USHORT, VARRAY_TOP_INT, VARRAY_TOP_UINT, \n        VARRAY_TOP_LONG, VARRAY_TOP_ULONG, VARRAY_TOP_WIDE_INT, \n        VARRAY_TOP_UWIDE_INT, VARRAY_TOP_GENERIC_PTR, \n        VARRAY_TOP_GENERIC_PTR_NOGC, VARRAY_TOP_CHAR_PTR, VARRAY_TOP_RTX, \n        VARRAY_TOP_RTVEC, VARRAY_TOP_TREE, VARRAY_TOP_BITMAP, \n        VARRAY_TOP_REG, VARRAY_TOP_BB, VARRAY_TOP_EDGE, \n        VARRAY_TOP_TREE_PTR): Likewise.\n        * varray.c (varray_grow): Likewise.\n        (varray_clear): Likewise.\n\nFrom-SVN: r108399", "tree": {"sha": "8a8b68e916f78e689dd774be76f6e069e21e749a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8a8b68e916f78e689dd774be76f6e069e21e749a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c981d2231dfd8a3415450c1944b4e6c6e4cebadf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c981d2231dfd8a3415450c1944b4e6c6e4cebadf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c981d2231dfd8a3415450c1944b4e6c6e4cebadf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c981d2231dfd8a3415450c1944b4e6c6e4cebadf/comments", "author": {"login": "cxx-undef", "id": 5528103, "node_id": "MDQ6VXNlcjU1MjgxMDM=", "avatar_url": "https://avatars.githubusercontent.com/u/5528103?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cxx-undef", "html_url": "https://github.com/cxx-undef", "followers_url": "https://api.github.com/users/cxx-undef/followers", "following_url": "https://api.github.com/users/cxx-undef/following{/other_user}", "gists_url": "https://api.github.com/users/cxx-undef/gists{/gist_id}", "starred_url": "https://api.github.com/users/cxx-undef/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cxx-undef/subscriptions", "organizations_url": "https://api.github.com/users/cxx-undef/orgs", "repos_url": "https://api.github.com/users/cxx-undef/repos", "events_url": "https://api.github.com/users/cxx-undef/events{/privacy}", "received_events_url": "https://api.github.com/users/cxx-undef/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "761c0d29cba01652030743630ae66dd4d5c58946", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/761c0d29cba01652030743630ae66dd4d5c58946", "html_url": "https://github.com/Rust-GCC/gccrs/commit/761c0d29cba01652030743630ae66dd4d5c58946"}], "stats": {"total": 205, "additions": 117, "deletions": 88}, "files": [{"sha": "1ec497a184c0132600d86afee5421c07a97f6070", "filename": "gcc/ChangeLog", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c981d2231dfd8a3415450c1944b4e6c6e4cebadf/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c981d2231dfd8a3415450c1944b4e6c6e4cebadf/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c981d2231dfd8a3415450c1944b4e6c6e4cebadf", "patch": "@@ -1,3 +1,32 @@\n+2005-12-12  Gabriel Dos Reis  <gdr@integrable-solutions.net>\n+\n+\t* varray.h: Allow compilation with a C++ compiler.\n+\t(union varray_data_tag): Prefix all field names with \"vdt_\".\n+\t(VARRAY_CHAR, VARRAY_UCHAR, VARRAY_SHORT, VARRAY_USHORT,\n+\tVARRAY_INT, VARRAY_UINT, VARRAY_LONG, VARRAY_ULONG,\n+\tVARRAY_WIDE_INT, VARRAY_UWIDE_INT, VARRAY_GENERIC_PTR,\n+\tVARRAY_GENERIC_PTR_NOGC, VARRAY_CHAR_PTR, VARRAY_RTX,\n+\tVARRAY_RTVEC, VARRAY_TREE, VARRAY_BITMAP, VARRAY_REG, VARRAY_BB,\n+\tVARRAY_ELT_LIST, VARRAY_EDGE, VARRAY_TREE_PTR): Adjust definition.\n+\t(VARRAY_PUSH_CHAR, VARRAY_PUSH_UCHAR, VARRAY_PUSH_SHORT,\n+\tVARRAY_PUSH_USHORT, VARRAY_PUSH_INT, VARRAY_PUSH_UINT, \n+\tVARRAY_PUSH_LONG, VARRAY_PUSH_ULONG, VARRAY_PUSH_WIDE_INT, \n+\tVARRAY_PUSH_UWIDE_INT, VARRAY_PUSH_GENERIC_PTR, \n+\tVARRAY_PUSH_GENERIC_PTR_NOGC, VARRAY_PUSH_CHAR_PTR, \n+\tVARRAY_PUSH_RTX, VARRAY_PUSH_RTVEC, VARRAY_PUSH_TREE, \n+\tVARRAY_PUSH_BITMAP, VARRAY_PUSH_REG, VARRAY_PUSH_BB, \n+\tVARRAY_PUSH_EDGE, VARRAY_PUSH_TREE_PTR): Likewise.\n+\t(VARRAY_TOP_CHAR, VARRAY_TOP_UCHAR, VARRAY_TOP_SHORT, \n+\tVARRAY_TOP_USHORT, VARRAY_TOP_INT, VARRAY_TOP_UINT, \n+\tVARRAY_TOP_LONG, VARRAY_TOP_ULONG, VARRAY_TOP_WIDE_INT, \n+\tVARRAY_TOP_UWIDE_INT, VARRAY_TOP_GENERIC_PTR, \n+\tVARRAY_TOP_GENERIC_PTR_NOGC, VARRAY_TOP_CHAR_PTR, VARRAY_TOP_RTX, \n+\tVARRAY_TOP_RTVEC, VARRAY_TOP_TREE, VARRAY_TOP_BITMAP, \n+\tVARRAY_TOP_REG, VARRAY_TOP_BB, VARRAY_TOP_EDGE, \n+\tVARRAY_TOP_TREE_PTR): Likewise.\n+\t* varray.c (varray_grow): Likewise.\n+\t(varray_clear): Likewise.\n+\n 2005-12-12  Alan Modra  <amodra@bigpond.net.au>\n \n \tPR target/25299"}, {"sha": "ceec02760b0177036bbb7ffb336c2589b34b049d", "filename": "gcc/varray.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c981d2231dfd8a3415450c1944b4e6c6e4cebadf/gcc%2Fvarray.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c981d2231dfd8a3415450c1944b4e6c6e4cebadf/gcc%2Fvarray.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarray.c?ref=c981d2231dfd8a3415450c1944b4e6c6e4cebadf", "patch": "@@ -176,7 +176,7 @@ varray_grow (varray_type va, size_t n)\n \tva = xrealloc (va, VARRAY_HDR_SIZE + data_size);\n       va->num_elements = n;\n       if (n > old_elements)\n-\tmemset (&va->data.c[old_data_size], 0, data_size - old_data_size);\n+\tmemset (&va->data.vdt_c[old_data_size], 0, data_size - old_data_size);\n #ifdef GATHER_STATISTICS\n       if (oldva != va)\n         desc->copied++;\n@@ -192,7 +192,7 @@ varray_clear (varray_type va)\n {\n   size_t data_size = element[va->type].size * va->num_elements;\n \n-  memset (va->data.c, 0, data_size);\n+  memset (va->data.vdt_c, 0, data_size);\n   va->elements_used = 0;\n }\n "}, {"sha": "6463f2e4dbd521ba032e936a16bae7dc4046ae5f", "filename": "gcc/varray.h", "status": "modified", "additions": 86, "deletions": 86, "changes": 172, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c981d2231dfd8a3415450c1944b4e6c6e4cebadf/gcc%2Fvarray.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c981d2231dfd8a3415450c1944b4e6c6e4cebadf/gcc%2Fvarray.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarray.h?ref=c981d2231dfd8a3415450c1944b4e6c6e4cebadf", "patch": "@@ -65,49 +65,49 @@ enum varray_data_enum {\n /* Union of various array types that are used.  */\n typedef union varray_data_tag GTY (()) {\n   char\t\t\t  GTY ((length (\"%0.num_elements\"),\n-\t\t\t\ttag (\"VARRAY_DATA_C\")))\t\tc[1];\n+\t\t\t\ttag (\"VARRAY_DATA_C\")))\t\tvdt_c[1];\n   unsigned char\t\t  GTY ((length (\"%0.num_elements\"),\n-\t\t\t\ttag (\"VARRAY_DATA_UC\")))\tuc[1];\n+\t\t\t\ttag (\"VARRAY_DATA_UC\")))\tvdt_uc[1];\n   short\t\t\t  GTY ((length (\"%0.num_elements\"),\n-\t\t\t\ttag (\"VARRAY_DATA_S\")))\t\ts[1];\n+\t\t\t\ttag (\"VARRAY_DATA_S\")))\t\tvdt_s[1];\n   unsigned short\t  GTY ((length (\"%0.num_elements\"),\n-\t\t\t\ttag (\"VARRAY_DATA_US\")))\tus[1];\n+\t\t\t\ttag (\"VARRAY_DATA_US\")))\tvdt_us[1];\n   int\t\t\t  GTY ((length (\"%0.num_elements\"),\n-\t\t\t\ttag (\"VARRAY_DATA_I\")))\t\ti[1];\n+\t\t\t\ttag (\"VARRAY_DATA_I\")))\t\tvdt_i[1];\n   unsigned int\t\t  GTY ((length (\"%0.num_elements\"),\n-\t\t\t\ttag (\"VARRAY_DATA_U\")))\t\tu[1];\n+\t\t\t\ttag (\"VARRAY_DATA_U\")))\t\tvdt_u[1];\n   long\t\t\t  GTY ((length (\"%0.num_elements\"),\n-\t\t\t\ttag (\"VARRAY_DATA_L\")))\t\tl[1];\n+\t\t\t\ttag (\"VARRAY_DATA_L\")))\t\tvdt_l[1];\n   unsigned long\t\t  GTY ((length (\"%0.num_elements\"),\n-\t\t\t\ttag (\"VARRAY_DATA_UL\")))\tul[1];\n+\t\t\t\ttag (\"VARRAY_DATA_UL\")))\tvdt_ul[1];\n   HOST_WIDE_INT\t\t  GTY ((length (\"%0.num_elements\"),\n-\t\t\t\ttag (\"VARRAY_DATA_HINT\")))\thint[1];\n+\t\t\t\ttag (\"VARRAY_DATA_HINT\")))\tvdt_hint[1];\n   unsigned HOST_WIDE_INT  GTY ((length (\"%0.num_elements\"),\n-\t\t\t\ttag (\"VARRAY_DATA_UHINT\")))\tuhint[1];\n+\t\t\t\ttag (\"VARRAY_DATA_UHINT\")))\tvdt_uhint[1];\n   PTR\t\t\t  GTY ((length (\"%0.num_elements\"), use_param,\n-\t\t\t\ttag (\"VARRAY_DATA_GENERIC\")))\tgeneric[1];\n+\t\t\t\ttag (\"VARRAY_DATA_GENERIC\")))\tvdt_generic[1];\n   PTR\t\t\t  GTY ((length (\"%0.num_elements\"), skip (\"\"),\n-\t\t\t\ttag (\"VARRAY_DATA_GENERIC_NOGC\")))\tgeneric_nogc[1];\n+\t\t\t\ttag (\"VARRAY_DATA_GENERIC_NOGC\")))\tvdt_generic_nogc[1];\n   char\t\t\t *GTY ((length (\"%0.num_elements\"),\n-\t\t\t\ttag (\"VARRAY_DATA_CPTR\")))\tcptr[1];\n+\t\t\t\ttag (\"VARRAY_DATA_CPTR\")))\tvdt_cptr[1];\n   rtx\t\t\t  GTY ((length (\"%0.num_elements\"),\n-\t\t\t\ttag (\"VARRAY_DATA_RTX\")))\trtx[1];\n+\t\t\t\ttag (\"VARRAY_DATA_RTX\")))\tvdt_rtx[1];\n   rtvec\t\t\t  GTY ((length (\"%0.num_elements\"),\n-\t\t\t\ttag (\"VARRAY_DATA_RTVEC\")))\trtvec[1];\n+\t\t\t\ttag (\"VARRAY_DATA_RTVEC\")))\tvdt_rtvec[1];\n   tree\t\t\t  GTY ((length (\"%0.num_elements\"),\n-\t\t\t\ttag (\"VARRAY_DATA_TREE\")))\ttree[1];\n+\t\t\t\ttag (\"VARRAY_DATA_TREE\")))\tvdt_tree[1];\n   struct bitmap_head_def *GTY ((length (\"%0.num_elements\"),\n-\t\t\t\ttag (\"VARRAY_DATA_BITMAP\")))\tbitmap[1];\n+\t\t\t\ttag (\"VARRAY_DATA_BITMAP\")))\tvdt_bitmap[1];\n   struct reg_info_def\t *GTY ((length (\"%0.num_elements\"), skip,\n-\t\t\t\ttag (\"VARRAY_DATA_REG\")))\treg[1];\n+\t\t\t\ttag (\"VARRAY_DATA_REG\")))\tvdt_reg[1];\n   struct basic_block_def *GTY ((length (\"%0.num_elements\"), skip,\n-\t\t\t\ttag (\"VARRAY_DATA_BB\")))\tbb[1];\n+\t\t\t\ttag (\"VARRAY_DATA_BB\")))\tvdt_bb[1];\n   struct elt_list\t *GTY ((length (\"%0.num_elements\"),\n-\t\t\t\ttag (\"VARRAY_DATA_TE\")))\tte[1];\n+\t\t\t\ttag (\"VARRAY_DATA_TE\")))\tvdt_te[1];\n   struct edge_def        *GTY ((length (\"%0.num_elements\"),\n-\t                        tag (\"VARRAY_DATA_EDGE\")))\te[1];\n+\t                        tag (\"VARRAY_DATA_EDGE\")))\tvdt_e[1];\n   tree                   *GTY ((length (\"%0.num_elements\"), skip (\"\"),\n-\t                        tag (\"VARRAY_DATA_TREE_PTR\")))\ttp[1];\n+\t                        tag (\"VARRAY_DATA_TREE_PTR\")))\tvdt_tp[1];\n } varray_data;\n \n /* Virtual array of pointers header.  */\n@@ -250,75 +250,75 @@ extern void varray_underflow (varray_type, const char *, int, const char *)\n     }\t\t\t\t\t\t\t\\\n   while (0)\n \n-#define VARRAY_CHAR(VA, N)\t\tVARRAY_CHECK (VA, N, c)\n-#define VARRAY_UCHAR(VA, N)\t\tVARRAY_CHECK (VA, N, uc)\n-#define VARRAY_SHORT(VA, N)\t\tVARRAY_CHECK (VA, N, s)\n-#define VARRAY_USHORT(VA, N)\t\tVARRAY_CHECK (VA, N, us)\n-#define VARRAY_INT(VA, N)\t\tVARRAY_CHECK (VA, N, i)\n-#define VARRAY_UINT(VA, N)\t\tVARRAY_CHECK (VA, N, u)\n-#define VARRAY_LONG(VA, N)\t\tVARRAY_CHECK (VA, N, l)\n-#define VARRAY_ULONG(VA, N)\t\tVARRAY_CHECK (VA, N, ul)\n-#define VARRAY_WIDE_INT(VA, N)\t\tVARRAY_CHECK (VA, N, hint)\n-#define VARRAY_UWIDE_INT(VA, N)\t\tVARRAY_CHECK (VA, N, uhint)\n-#define VARRAY_GENERIC_PTR(VA,N)\tVARRAY_CHECK (VA, N, generic)\n-#define VARRAY_GENERIC_PTR_NOGC(VA,N)\tVARRAY_CHECK (VA, N, generic_nogc)\n-#define VARRAY_CHAR_PTR(VA,N)\t\tVARRAY_CHECK (VA, N, cptr)\n-#define VARRAY_RTX(VA, N)\t\tVARRAY_CHECK (VA, N, rtx)\n-#define VARRAY_RTVEC(VA, N)\t\tVARRAY_CHECK (VA, N, rtvec)\n-#define VARRAY_TREE(VA, N)\t\tVARRAY_CHECK (VA, N, tree)\n-#define VARRAY_BITMAP(VA, N)\t\tVARRAY_CHECK (VA, N, bitmap)\n-#define VARRAY_REG(VA, N)\t\tVARRAY_CHECK (VA, N, reg)\n-#define VARRAY_BB(VA, N)\t\tVARRAY_CHECK (VA, N, bb)\n-#define VARRAY_ELT_LIST(VA, N)\t\tVARRAY_CHECK (VA, N, te)\n-#define VARRAY_EDGE(VA, N)\t\tVARRAY_CHECK (VA, N, e)\n-#define VARRAY_TREE_PTR(VA, N)\t\tVARRAY_CHECK (VA, N, tp)\n+#define VARRAY_CHAR(VA, N)\t\tVARRAY_CHECK (VA, N, vdt_c)\n+#define VARRAY_UCHAR(VA, N)\t\tVARRAY_CHECK (VA, N, vdt_uc)\n+#define VARRAY_SHORT(VA, N)\t\tVARRAY_CHECK (VA, N, vdt_s)\n+#define VARRAY_USHORT(VA, N)\t\tVARRAY_CHECK (VA, N, vdt_us)\n+#define VARRAY_INT(VA, N)\t\tVARRAY_CHECK (VA, N, vdt_i)\n+#define VARRAY_UINT(VA, N)\t\tVARRAY_CHECK (VA, N, vdt_u)\n+#define VARRAY_LONG(VA, N)\t\tVARRAY_CHECK (VA, N, vdt_l)\n+#define VARRAY_ULONG(VA, N)\t\tVARRAY_CHECK (VA, N, vdt_ul)\n+#define VARRAY_WIDE_INT(VA, N)\t\tVARRAY_CHECK (VA, N, vdt_hint)\n+#define VARRAY_UWIDE_INT(VA, N)\t\tVARRAY_CHECK (VA, N, vdt_uhint)\n+#define VARRAY_GENERIC_PTR(VA,N)\tVARRAY_CHECK (VA, N, vdt_generic)\n+#define VARRAY_GENERIC_PTR_NOGC(VA,N)\tVARRAY_CHECK (VA, N, vdt_generic_nogc)\n+#define VARRAY_CHAR_PTR(VA,N)\t\tVARRAY_CHECK (VA, N, vdt_cptr)\n+#define VARRAY_RTX(VA, N)\t\tVARRAY_CHECK (VA, N, vdt_rtx)\n+#define VARRAY_RTVEC(VA, N)\t\tVARRAY_CHECK (VA, N, vdt_rtvec)\n+#define VARRAY_TREE(VA, N)\t\tVARRAY_CHECK (VA, N, vdt_tree)\n+#define VARRAY_BITMAP(VA, N)\t\tVARRAY_CHECK (VA, N, vdt_bitmap)\n+#define VARRAY_REG(VA, N)\t\tVARRAY_CHECK (VA, N, vdt_reg)\n+#define VARRAY_BB(VA, N)\t\tVARRAY_CHECK (VA, N, vdt_bb)\n+#define VARRAY_ELT_LIST(VA, N)\t\tVARRAY_CHECK (VA, N, vdt_te)\n+#define VARRAY_EDGE(VA, N)\t\tVARRAY_CHECK (VA, N, vdt_e)\n+#define VARRAY_TREE_PTR(VA, N)\t\tVARRAY_CHECK (VA, N, vdt_tp)\n \n /* Push a new element on the end of VA, extending it if necessary.  */\n-#define VARRAY_PUSH_CHAR(VA, X)\t\tVARRAY_PUSH (VA, c, X)\n-#define VARRAY_PUSH_UCHAR(VA, X)\tVARRAY_PUSH (VA, uc, X)\n-#define VARRAY_PUSH_SHORT(VA, X)\tVARRAY_PUSH (VA, s, X)\n-#define VARRAY_PUSH_USHORT(VA, X)\tVARRAY_PUSH (VA, us, X)\n-#define VARRAY_PUSH_INT(VA, X)\t\tVARRAY_PUSH (VA, i, X)\n-#define VARRAY_PUSH_UINT(VA, X)\t\tVARRAY_PUSH (VA, u, X)\n-#define VARRAY_PUSH_LONG(VA, X)\t\tVARRAY_PUSH (VA, l, X)\n-#define VARRAY_PUSH_ULONG(VA, X)\tVARRAY_PUSH (VA, ul, X)\n-#define VARRAY_PUSH_WIDE_INT(VA, X)\tVARRAY_PUSH (VA, hint, X)\n-#define VARRAY_PUSH_UWIDE_INT(VA, X)\tVARRAY_PUSH (VA, uhint, X)\n-#define VARRAY_PUSH_GENERIC_PTR(VA, X)\tVARRAY_PUSH (VA, generic, X)\n-#define VARRAY_PUSH_GENERIC_PTR_NOGC(VA, X)\tVARRAY_PUSH (VA, generic_nogc, X)\n-#define VARRAY_PUSH_CHAR_PTR(VA, X)\tVARRAY_PUSH (VA, cptr, X)\n-#define VARRAY_PUSH_RTX(VA, X)\t\tVARRAY_PUSH (VA, rtx, X)\n-#define VARRAY_PUSH_RTVEC(VA, X)\tVARRAY_PUSH (VA, rtvec, X)\n-#define VARRAY_PUSH_TREE(VA, X)\t\tVARRAY_PUSH (VA, tree, X)\n-#define VARRAY_PUSH_BITMAP(VA, X)\tVARRAY_PUSH (VA, bitmap, X)\n-#define VARRAY_PUSH_REG(VA, X)\t\tVARRAY_PUSH (VA, reg, X)\n-#define VARRAY_PUSH_BB(VA, X)\t\tVARRAY_PUSH (VA, bb, X)\n-#define VARRAY_PUSH_EDGE(VA, X)\t\tVARRAY_PUSH (VA, e, X)\n-#define VARRAY_PUSH_TREE_PTR(VA, X)\tVARRAY_PUSH (VA, tp, X)\n+#define VARRAY_PUSH_CHAR(VA, X)\t\tVARRAY_PUSH (VA, vdt_c, X)\n+#define VARRAY_PUSH_UCHAR(VA, X)\tVARRAY_PUSH (VA, vdt_uc, X)\n+#define VARRAY_PUSH_SHORT(VA, X)\tVARRAY_PUSH (VA, vdt_s, X)\n+#define VARRAY_PUSH_USHORT(VA, X)\tVARRAY_PUSH (VA, vdt_us, X)\n+#define VARRAY_PUSH_INT(VA, X)\t\tVARRAY_PUSH (VA, vdt_i, X)\n+#define VARRAY_PUSH_UINT(VA, X)\t\tVARRAY_PUSH (VA, vdt_u, X)\n+#define VARRAY_PUSH_LONG(VA, X)\t\tVARRAY_PUSH (VA, vdt_l, X)\n+#define VARRAY_PUSH_ULONG(VA, X)\tVARRAY_PUSH (VA, vdt_ul, X)\n+#define VARRAY_PUSH_WIDE_INT(VA, X)\tVARRAY_PUSH (VA, vdt_hint, X)\n+#define VARRAY_PUSH_UWIDE_INT(VA, X)\tVARRAY_PUSH (VA, vdt_uhint, X)\n+#define VARRAY_PUSH_GENERIC_PTR(VA, X)\tVARRAY_PUSH (VA, vdt_generic, X)\n+#define VARRAY_PUSH_GENERIC_PTR_NOGC(VA, X)\tVARRAY_PUSH (VA, vdt_generic_nogc, X)\n+#define VARRAY_PUSH_CHAR_PTR(VA, X)\tVARRAY_PUSH (VA, vdt_cptr, X)\n+#define VARRAY_PUSH_RTX(VA, X)\t\tVARRAY_PUSH (VA, vdt_rtx, X)\n+#define VARRAY_PUSH_RTVEC(VA, X)\tVARRAY_PUSH (VA, vdt_rtvec, X)\n+#define VARRAY_PUSH_TREE(VA, X)\t\tVARRAY_PUSH (VA, vdt_tree, X)\n+#define VARRAY_PUSH_BITMAP(VA, X)\tVARRAY_PUSH (VA, vdt_bitmap, X)\n+#define VARRAY_PUSH_REG(VA, X)\t\tVARRAY_PUSH (VA, vdt_reg, X)\n+#define VARRAY_PUSH_BB(VA, X)\t\tVARRAY_PUSH (VA, vdt_bb, X)\n+#define VARRAY_PUSH_EDGE(VA, X)\t\tVARRAY_PUSH (VA, vdt_e, X)\n+#define VARRAY_PUSH_TREE_PTR(VA, X)\tVARRAY_PUSH (VA, vdt_tp, X)\n \n /* Return the last element of VA.  */\n #define VARRAY_TOP(VA, T) VARRAY_CHECK(VA, (VA)->elements_used - 1, T)\n \n-#define VARRAY_TOP_CHAR(VA)\t\tVARRAY_TOP (VA, c)\n-#define VARRAY_TOP_UCHAR(VA)\t        VARRAY_TOP (VA, uc)\n-#define VARRAY_TOP_SHORT(VA)\t        VARRAY_TOP (VA, s)\n-#define VARRAY_TOP_USHORT(VA)\t        VARRAY_TOP (VA, us)\n-#define VARRAY_TOP_INT(VA)\t\tVARRAY_TOP (VA, i)\n-#define VARRAY_TOP_UINT(VA)\t\tVARRAY_TOP (VA, u)\n-#define VARRAY_TOP_LONG(VA)\t\tVARRAY_TOP (VA, l)\n-#define VARRAY_TOP_ULONG(VA)\t        VARRAY_TOP (VA, ul)\n-#define VARRAY_TOP_WIDE_INT(VA)\t        VARRAY_TOP (VA, hint)\n-#define VARRAY_TOP_UWIDE_INT(VA)\tVARRAY_TOP (VA, uhint)\n-#define VARRAY_TOP_GENERIC_PTR(VA)\tVARRAY_TOP (VA, generic)\n-#define VARRAY_TOP_GENERIC_PTR_NOGC(VA)\tVARRAY_TOP (VA, generic_nogc)\n-#define VARRAY_TOP_CHAR_PTR(VA)\t\tVARRAY_TOP (VA, cptr)\n-#define VARRAY_TOP_RTX(VA)\t\tVARRAY_TOP (VA, rtx)\n-#define VARRAY_TOP_RTVEC(VA)\t        VARRAY_TOP (VA, rtvec)\n-#define VARRAY_TOP_TREE(VA)\t\tVARRAY_TOP (VA, tree)\n-#define VARRAY_TOP_BITMAP(VA)\t        VARRAY_TOP (VA, bitmap)\n-#define VARRAY_TOP_REG(VA)\t\tVARRAY_TOP (VA, reg)\n-#define VARRAY_TOP_BB(VA)\t\tVARRAY_TOP (VA, bb)\n-#define VARRAY_TOP_EDGE(VA)\t\tVARRAY_TOP (VA, e)\n-#define VARRAY_TOP_TREE_PTR(VA)\t\tVARRAY_TOP (VA, tp)\n+#define VARRAY_TOP_CHAR(VA)\t\tVARRAY_TOP (VA, vdt_c)\n+#define VARRAY_TOP_UCHAR(VA)\t        VARRAY_TOP (VA, vdt_uc)\n+#define VARRAY_TOP_SHORT(VA)\t        VARRAY_TOP (VA, vdt_s)\n+#define VARRAY_TOP_USHORT(VA)\t        VARRAY_TOP (VA, vdt_us)\n+#define VARRAY_TOP_INT(VA)\t\tVARRAY_TOP (VA, vdt_i)\n+#define VARRAY_TOP_UINT(VA)\t\tVARRAY_TOP (VA, vdt_u)\n+#define VARRAY_TOP_LONG(VA)\t\tVARRAY_TOP (VA, vdt_l)\n+#define VARRAY_TOP_ULONG(VA)\t        VARRAY_TOP (VA, vdt_ul)\n+#define VARRAY_TOP_WIDE_INT(VA)\t        VARRAY_TOP (VA, vdt_hint)\n+#define VARRAY_TOP_UWIDE_INT(VA)\tVARRAY_TOP (VA, vdt_uhint)\n+#define VARRAY_TOP_GENERIC_PTR(VA)\tVARRAY_TOP (VA, vdt_generic)\n+#define VARRAY_TOP_GENERIC_PTR_NOGC(VA)\tVARRAY_TOP (VA, vdt_generic_nogc)\n+#define VARRAY_TOP_CHAR_PTR(VA)\t\tVARRAY_TOP (VA, vdt_cptr)\n+#define VARRAY_TOP_RTX(VA)\t\tVARRAY_TOP (VA, vdt_rtx)\n+#define VARRAY_TOP_RTVEC(VA)\t        VARRAY_TOP (VA, vdt_rtvec)\n+#define VARRAY_TOP_TREE(VA)\t\tVARRAY_TOP (VA, vdt_tree)\n+#define VARRAY_TOP_BITMAP(VA)\t        VARRAY_TOP (VA, vdt_bitmap)\n+#define VARRAY_TOP_REG(VA)\t\tVARRAY_TOP (VA, vdt_reg)\n+#define VARRAY_TOP_BB(VA)\t\tVARRAY_TOP (VA, vdt_bb)\n+#define VARRAY_TOP_EDGE(VA)\t\tVARRAY_TOP (VA, vdt_e)\n+#define VARRAY_TOP_TREE_PTR(VA)\t\tVARRAY_TOP (VA, vdt_tp)\n \n #endif /* ! GCC_VARRAY_H */"}]}