{"sha": "ce1140e3f2f7cd0a2533998369e60a085f703c3f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2UxMTQwZTNmMmY3Y2QwYTI1MzM5OTgzNjllNjBhMDg1ZjcwM2MzZg==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2011-07-29T22:31:30Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2011-07-29T22:31:30Z"}, "message": "Docbook conversion of existing ext/pb_ds documentation.\n\n2011-07-29  Benjamin Kosnik  <bkoz@redhat.com>\n\n\tDocbook conversion of existing ext/pb_ds documentation.\n\t* doc/Makefile.am (xml_sources_manual): Add\n\tpolicy_data_structures.xml and\n\ttest_policy_data_structures.xml.\n\t(stamp-html-copy): Remove special-case for ext/pb_ds directory.\n\t(XSLTPROC_FLAGS): Split into XSLT_FLAGS and XSLT_PARAM, use.\n\t* doc/Makefile.in: Regenerate.\n\t* doc/xml/manual/policy_data_structures.xml: New, adapted from\n\t  previous html-only instance in doc/html/ext/pb_ds.\n\t* doc/xml/manual/test_policy_data_structures.xml: New, same as above.\n\n\t* doc/xml/spine.xml: Update copyright.\n\t* doc/xml/manual/spine.xml: Same.\n\t* doc/xml/manual/extensions.xml: Adjust set, chapter, sections.\n\t* doc/xml/manual/bitmap_allocator.xml: Same.\n\t* doc/xml/manual/mt_allocator.xml: Same.\n\n\tPopulate image directory.\n\t* doc/xml/images/(pbds_balls_and_bins.png,\n\tpbds_binary_priority_queue_random_int_push_timing_test_local.pdf,\n\tpbds_binary_priority_queue_random_int_push_timing_test_local.png,\n\tpbds_binary_priority_queue_random_int_push_timing_test_local.svg,\n\tpbds_cc_hash_random_int_find_timing_test_local.pdf,\n\tpbds_cc_hash_random_int_find_timing_test_local.png,\n\tpbds_cc_hash_random_int_find_timing_test_local.svg,\n\tpbds_cc_hash_random_int_subscript_timing_test_find_local.pdf,\n\tpbds_cc_hash_random_int_subscript_timing_test_find_local.png,\n\tpbds_cc_hash_random_int_subscript_timing_test_find_local.svg,\n\tpbds_cc_hash_random_int_subscript_timing_test_insert_local.pdf,\n\tpbds_cc_hash_random_int_subscript_timing_test_insert_local.png,\n\tpbds_cc_hash_random_int_subscript_timing_test_insert_local.svg,\n\tpbds_container_tag_hierarchy.pdf,\n\tpbds_container_tag_hierarchy.png,\n\tpbds_container_tag_hierarchy.svg,\n\tpbds_different_underlying_dss_1.png,\n\tpbds_different_underlying_dss_2.png,\n\tpbds_embedded_lists_1.png, pbds_embedded_lists_2.png,\n\tpbds_embedded_lists_3.png, pbds_exception_hierarchy.pdf,\n\tpbds_exception_hierarchy.png, pbds_exception_hierarchy.svg,\n\tpbds_gp_hash_random_int_find_timing_test_local.pdf,\n\tpbds_gp_hash_random_int_find_timing_test_local.png,\n\tpbds_gp_hash_random_int_find_timing_test_local.svg,\n\tpbds_gp_hash_random_int_subscript_timing_test_find_local.pdf,\n\tpbds_gp_hash_random_int_subscript_timing_test_find_local.png,\n\tpbds_gp_hash_random_int_subscript_timing_test_find_local.svg,\n\tpbds_gp_hash_random_int_subscript_timing_test_insert_local.pdf,\n\tpbds_gp_hash_random_int_subscript_timing_test_insert_local.png,\n\tpbds_gp_hash_random_int_subscript_timing_test_insert_local.svg,\n\tpbds_hash_policy_cd.png,\n\tpbds_hash_random_int_erase_mem_usage_test_local.pdf,\n\tpbds_hash_random_int_erase_mem_usage_test_local.png,\n\tpbds_hash_random_int_erase_mem_usage_test_local.svg,\n\tpbds_hash_ranged_hash_range_hashing_fns.png,\n\tpbds_hash_range_hashing_seq_diagram2.png,\n\tpbds_hash_range_hashing_seq_diagram.png,\n\tpbds_hash_zlob_random_int_find_timing_test_local.pdf,\n\tpbds_hash_zlob_random_int_find_timing_test_local.png,\n\tpbds_hash_zlob_random_int_find_timing_test_local.svg,\n\tpbds_insert_resize_sequence_diagram1.png,\n\tpbds_insert_resize_sequence_diagram2.png,\n\tpbds_insert_resize_sequence_diagram3.png,\n\tpbds_invalidation_guarantee_erase.png,\n\tpbds_invalidation_tag_hierarchy.pdf,\n\tpbds_invalidation_tag_hierarchy.png,\n\tpbds_invalidation_tag_hierarchy.svg, pbds_list_update.png,\n\tpbds_multimap_text_find_timing_test_large_s2p_hash_local.pdf,\n\tpbds_multimap_text_find_timing_test_large_s2p_hash_local.png,\n\tpbds_multimap_text_find_timing_test_large_s2p_hash_local.svg,\n\tpbds_multimap_text_find_timing_test_large_s2p_tree_local.pdf,\n\tpbds_multimap_text_find_timing_test_large_s2p_tree_local.png,\n\tpbds_multimap_text_find_timing_test_large_s2p_tree_local.svg,\n\tpbds_multimap_text_find_timing_test_small_s2p_hash_local.pdf,\n\tpbds_multimap_text_find_timing_test_small_s2p_hash_local.png,\n\tpbds_multimap_text_find_timing_test_small_s2p_hash_local.svg,\n\tpbds_multimap_text_find_timing_test_small_s2p_tree_local.pdf,\n\tpbds_multimap_text_find_timing_test_small_s2p_tree_local.png,\n\tpbds_multimap_text_find_timing_test_small_s2p_tree_local.svg,\n\tpbds_multimap_text_insert_mem_usage_test_large_s2p_hash_local.pdf,\n\tpbds_multimap_text_insert_mem_usage_test_large_s2p_hash_local.png,\n\tpbds_multimap_text_insert_mem_usage_test_large_s2p_hash_local.svg,\n\tpbds_multimap_text_insert_mem_usage_test_large_s2p_tree_local.pdf,\n\tpbds_multimap_text_insert_mem_usage_test_large_s2p_tree_local.png,\n\tpbds_multimap_text_insert_mem_usage_test_large_s2p_tree_local.svg,\n\tpbds_multimap_text_insert_mem_usage_test_small_s2p_hash_local.pdf,\n\tpbds_multimap_text_insert_mem_usage_test_small_s2p_hash_local.png,\n\tpbds_multimap_text_insert_mem_usage_test_small_s2p_hash_local.svg,\n\tpbds_multimap_text_insert_mem_usage_test_small_s2p_tree_local.pdf,\n\tpbds_multimap_text_insert_mem_usage_test_small_s2p_tree_local.png,\n\tpbds_multimap_text_insert_mem_usage_test_small_s2p_tree_local.svg,\n\tpbds_multimap_text_insert_timing_test_large_s2p_hash_local.pdf,\n\tpbds_multimap_text_insert_timing_test_large_s2p_hash_local.png,\n\tpbds_multimap_text_insert_timing_test_large_s2p_hash_local.svg,\n\tpbds_multimap_text_insert_timing_test_large_s2p_tree_local.pdf,\n\tpbds_multimap_text_insert_timing_test_large_s2p_tree_local.png,\n\tpbds_multimap_text_insert_timing_test_large_s2p_tree_local.svg,\n\tpbds_multimap_text_insert_timing_test_small_s2p_hash_local.pdf,\n\tpbds_multimap_text_insert_timing_test_small_s2p_hash_local.png,\n\tpbds_multimap_text_insert_timing_test_small_s2p_hash_local.svg,\n\tpbds_multimap_text_insert_timing_test_small_s2p_tree_local.pdf,\n\tpbds_multimap_text_insert_timing_test_small_s2p_tree_local.png,\n\tpbds_multimap_text_insert_timing_test_small_s2p_tree_local.svg,\n\tpbds_node_invariants.png,\n\tpbds_pairing_priority_queue_text_push_pop_timing_test_local.pdf,\n\tpbds_pairing_priority_queue_text_push_pop_timing_test_local.png,\n\tpbds_pairing_priority_queue_text_push_pop_timing_test_local.svg,\n\tpbds_pairing_priority_queue_text_push_timing_test_local.pdf,\n\tpbds_pairing_priority_queue_text_push_timing_test_local.png,\n\tpbds_pairing_priority_queue_text_push_timing_test_local.svg,\n\tpbds_pat_trie.png, pbds_point_iterator_hierarchy.png,\n\tpbds_point_iterators_range_ops_1.png,\n\tpbds_point_iterators_range_ops_2.png,\n\tpbds_priority_queue_different_underlying_dss.png,\n\tpbds_priority_queue_random_int_push_pop_timing_test_local.pdf,\n\tpbds_priority_queue_random_int_push_pop_timing_test_local.png,\n\tpbds_priority_queue_random_int_push_pop_timing_test_local.svg,\n\tpbds_priority_queue_random_int_push_timing_test_local.pdf,\n\tpbds_priority_queue_random_int_push_timing_test_local.png,\n\tpbds_priority_queue_random_int_push_timing_test_local.svg,\n\tpbds_priority_queue_tag_hierarchy.pdf,\n\tpbds_priority_queue_tag_hierarchy.png,\n\tpbds_priority_queue_tag_hierarchy.svg,\n\tpbds_priority_queue_text_join_timing_test_local.pdf,\n\tpbds_priority_queue_text_join_timing_test_local.png,\n\tpbds_priority_queue_text_join_timing_test_local.svg,\n\tpbds_priority_queue_text_modify_down_timing_test_local.pdf,\n\tpbds_priority_queue_text_modify_down_timing_test_local.png,\n\tpbds_priority_queue_text_modify_down_timing_test_local.svg,\n\tpbds_priority_queue_text_modify_down_timing_test_pairing_thin_local.pdf,\n\tpbds_priority_queue_text_modify_down_timing_test_pairing_thin_local.png,\n\tpbds_priority_queue_text_modify_down_timing_test_pairing_thin_local.svg,\n\tpbds_priority_queue_text_modify_up_timing_test_local.pdf,\n\tpbds_priority_queue_text_modify_up_timing_test_local.png,\n\tpbds_priority_queue_text_modify_up_timing_test_local.svg,\n\tpbds_priority_queue_text_modify_up_timing_test_pairing_thin_local.pdf,\n\tpbds_priority_queue_text_modify_up_timing_test_pairing_thin_local.png,\n\tpbds_priority_queue_text_modify_up_timing_test_pairing_thin_local.svg,\n\tpbds_priority_queue_text_pop_mem_usage_test_local.pdf,\n\tpbds_priority_queue_text_pop_mem_usage_test_local.png,\n\tpbds_priority_queue_text_pop_mem_usage_test_local.svg,\n\tpbds_priority_queue_text_push_pop_timing_test_local.pdf,\n\tpbds_priority_queue_text_push_pop_timing_test_local.png,\n\tpbds_priority_queue_text_push_pop_timing_test_local.svg,\n\tpbds_priority_queue_text_push_timing_test_local.pdf,\n\tpbds_priority_queue_text_push_timing_test_local.png,\n\tpbds_priority_queue_text_push_timing_test_local.svg,\n\tpbds_rationale_null_node_updator.png,\n\tpbds_resize_policy_cd.png, pbds_restoring_node_invariants.png,\n\tpbds_simple_list.png,\n\tpbds_text_find_timing_test_hash_local.pdf,\n\tpbds_text_find_timing_test_hash_local.png,\n\tpbds_text_find_timing_test_hash_local.svg,\n\tpbds_text_find_timing_test_tree_like_local.pdf,\n\tpbds_text_find_timing_test_tree_like_local.png,\n\tpbds_text_find_timing_test_tree_like_local.svg,\n\tpbds_tree_node_invalidations.png,\n\tpbds_tree_node_invariants.png,\n\tpbds_tree_node_updator_policy_cd.png,\n\tpbds_tree_order_statistics_timing_test_local.pdf,\n\tpbds_tree_order_statistics_timing_test_local.png,\n\tpbds_tree_order_statistics_timing_test_local.svg,\n\tpbds_tree_split_join_timing_test_local.pdf,\n\tpbds_tree_split_join_timing_test_local.png,\n\tpbds_tree_split_join_timing_test_local.svg,\n\tpbds_tree_text_insert_timing_test_node_tree_local.pdf,\n\tpbds_tree_text_insert_timing_test_node_tree_local.png,\n\tpbds_tree_text_insert_timing_test_node_tree_local.svg,\n\tpbds_tree_text_insert_timing_test_pat_trie_local.pdf,\n\tpbds_tree_text_insert_timing_test_pat_trie_local.png,\n\tpbds_tree_text_insert_timing_test_pat_trie_local.svg,\n\tpbds_tree_text_insert_timing_test_vector_tree_local.pdf,\n\tpbds_tree_text_insert_timing_test_vector_tree_local.png,\n\tpbds_tree_text_insert_timing_test_vector_tree_local.svg,\n\tpbds_tree_text_lor_find_timing_test_local.pdf,\n\tpbds_tree_text_lor_find_timing_test_local.png,\n\tpbds_tree_text_lor_find_timing_test_local.svg,\n\tpbds_trie_node_updator_policy_cd.png,\n\tpbds_update_seq_diagram.png): Add.\n\n\t* doc/html/ext/pb_ds: Remove.\n\t* doc/html/ext/pb_ds/(acks.html, assoc_container_tag_cd.png,\n\tassoc_container_tag_cd.svg, assoc_container_traits.html,\n\tassoc_design.html, assoc_examples.html,\n\tassociative_container_tag.html, assoc_performance_tests.html,\n\tassoc_regression_tests.html, assoc_tests.html,\n\tballs_and_bins.png, basic_hash_table.html,\n\tbasic_hash_tag.html, basic_invalidation_guarantee.html,\n\tbasic_tree_assoc_container_const_node_iterator.html,\n\tbasic_tree.html, basic_tree_tag.html, binary_heap_tag.html,\n\tbinary_priority_queue_random_int_push_timing_test_gcc.png,\n\tbinary_priority_queue_random_int_push_timing_test_local.png,\n\tbinary_priority_queue_random_int_push_timing_test_msvc.png,\n\tbinomial_heap_tag.html,\n\tccgp_hash_random_int_subscript_timing_test_insert_gcc.png,\n\tccgp_hash_random_int_subscript_timing_test_insert_local.png,\n\tccgp_hash_random_int_subscript_timing_test_insert_msvc.png,\n\tcc_hash_max_collision_check_resize_trigger.html,\n\tcc_hash_random_int_find_timing_test_gcc.png,\n\tcc_hash_random_int_find_timing_test_local.png,\n\tcc_hash_random_int_find_timing_test_msvc.png,\n\tcc_hash_random_int_subscript_timing_test_find_gcc.png,\n\tcc_hash_random_int_subscript_timing_test_find_local.png,\n\tcc_hash_random_int_subscript_timing_test_find_msvc.png,\n\tcc_hash_random_int_subscript_timing_test_insert_gcc.png,\n\tcc_hash_random_int_subscript_timing_test_insert_local.png,\n\tcc_hash_random_int_subscript_timing_test_insert_msvc.png,\n\tcc_hash_table.html, cc_hash_tag.html, checked_by_tidy.gif\n\tconcepts.html, contact.html, container_base.html,\n\tcontainer_cd.png, container_cd.svg, container_tag.html,\n\tcounter_lu_policy.html, design.html,\n\tdifferent_underlying_dss.png, direct_mask_range_hashing.html,\n\tdirect_mod_range_hashing.html, disclaimer.html, ds_gen.html,\n\tembedded_lists_1.png, embedded_lists_2.png,\n\tembedded_lists_3.png, examples.html, exceptions.html,\n\tgp_hash_random_int_find_timing_test_gcc.png,\n\tgp_hash_random_int_find_timing_test_local.png,\n\tgp_hash_random_int_find_timing_test_msvc.png,\n\tgp_hash_random_int_subscript_timing_test_find_gcc.png,\n\tgp_hash_random_int_subscript_timing_test_find_local.png,\n\tgp_hash_random_int_subscript_timing_test_find_msvc.png,\n\tgp_hash_random_int_subscript_timing_test_insert_gcc.png,\n\tgp_hash_random_int_subscript_timing_test_insert_local.png,\n\tgp_hash_random_int_subscript_timing_test_insert_msvc.png,\n\tgp_hash_table.html, gp_hash_tag.html,\n\thash_based_containers.html, hash_exponential_size_policy.html,\n\thash_load_check_resize_trigger.html, hash_policy_cd.png,\n\thash_prime_size_policy.html,\n\thash_random_int_erase_mem_usage_test_gcc.png,\n\thash_random_int_erase_mem_usage_test.html,\n\thash_random_int_erase_mem_usage_test_local.png,\n\thash_random_int_erase_mem_usage_test_msvc.png,\n\thash_random_int_find_find_timing_test.html,\n\thash_random_int_subscript_find_timing_test.html,\n\thash_random_int_subscript_insert_timing_test.html,\n\thash_ranged_hash_range_hashing_fns.png,\n\thash_range_hashing_seq_diagram2.png,\n\thash_range_hashing_seq_diagram.png,\n\thash_standard_resize_policy.html,\n\thash_text_find_find_timing_test.html,\n\thash_zlob_random_int_find_find_timing_test.html,\n\thash_zlob_random_int_find_timing_test_gcc.png,\n\thash_zlob_random_int_find_timing_test_local.png,\n\thash_zlob_random_int_find_timing_test_msvc.png, index.html,\n\tinsert_error.html, insert_resize_sequence_diagram1.png,\n\tinsert_resize_sequence_diagram2.png,\n\tinsert_resize_sequence_diagram3.png, interface.html,\n\tintroduction.html, invalidation_guarantee_cd.png,\n\tinvalidation_guarantee_erase.png, join_error.html,\n\tlinear_probe_fn.html, list_update.html, list_update_tag.html,\n\tlu_based_containers.html, lu.png, misc.html, motivation.html,\n\tmove_to_front_lu_policy.html,\n\tmultimap_text_find_timing_test_large.html,\n\tmultimap_text_find_timing_test_large_s2p_hash_gcc.png,\n\tmultimap_text_find_timing_test_large_s2p_hash_local.png,\n\tmultimap_text_find_timing_test_large_s2p_hash_msvc.png,\n\tmultimap_text_find_timing_test_large_s2p_tree_gcc.png,\n\tmultimap_text_find_timing_test_large_s2p_tree_local.png,\n\tmultimap_text_find_timing_test_large_s2p_tree_msvc.png,\n\tmultimap_text_find_timing_test_small.html,\n\tmultimap_text_find_timing_test_small_s2p_hash_gcc.png,\n\tmultimap_text_find_timing_test_small_s2p_hash_local.png,\n\tmultimap_text_find_timing_test_small_s2p_hash_msvc.png,\n\tmultimap_text_find_timing_test_small_s2p_tree_gcc.png,\n\tmultimap_text_find_timing_test_small_s2p_tree_local.png,\n\tmultimap_text_find_timing_test_small_s2p_tree_msvc.png,\n\tmultimap_text_insert_mem_usage_test_large.html,\n\tmultimap_text_insert_mem_usage_test_large_s2p_hash_gcc.png,\n\tmultimap_text_insert_mem_usage_test_large_s2p_hash_local.png,\n\tmultimap_text_insert_mem_usage_test_large_s2p_hash_msvc.png,\n\tmultimap_text_insert_mem_usage_test_large_s2p_tree_gcc.png,\n\tmultimap_text_insert_mem_usage_test_large_s2p_tree_local.png,\n\tmultimap_text_insert_mem_usage_test_large_s2p_tree_msvc.png,\n\tmultimap_text_insert_mem_usage_test_small.html,\n\tmultimap_text_insert_mem_usage_test_small_s2p_hash_gcc.png,\n\tmultimap_text_insert_mem_usage_test_small_s2p_hash_local.png,\n\tmultimap_text_insert_mem_usage_test_small_s2p_hash_msvc.png,\n\tmultimap_text_insert_mem_usage_test_small_s2p_tree_gcc.png,\n\tmultimap_text_insert_mem_usage_test_small_s2p_tree_local.png,\n\tmultimap_text_insert_mem_usage_test_small_s2p_tree_msvc.png,\n\tmultimap_text_insert_timing_test_large.html,\n\tmultimap_text_insert_timing_test_large_s2p_hash_gcc.png,\n\tmultimap_text_insert_timing_test_large_s2p_hash_local.png,\n\tmultimap_text_insert_timing_test_large_s2p_hash_msvc.png,\n\tmultimap_text_insert_timing_test_large_s2p_tree_gcc.png,\n\tmultimap_text_insert_timing_test_large_s2p_tree_local.png,\n\tmultimap_text_insert_timing_test_large_s2p_tree_msvc.png,\n\tmultimap_text_insert_timing_test_small.html,\n\tmultimap_text_insert_timing_test_small_s2p_hash_gcc.png,\n\tmultimap_text_insert_timing_test_small_s2p_hash_local.png,\n\tmultimap_text_insert_timing_test_small_s2p_hash_msvc.png,\n\tmultimap_text_insert_timing_test_small_s2p_tree_gcc.png,\n\tmultimap_text_insert_timing_test_small_s2p_tree_local.png,\n\tmultimap_text_insert_timing_test_small_s2p_tree_msvc.png,\n\tnode_invariant_invalidations.png, node_invariants.png,\n\tnull_hash_fn.html, null_lu_metadata.html,\n\tnull_mapped_type.html, null_probe_fn.html,\n\tnull_tree_node_update.html, null_trie_node_update.html,\n\tov_tree_tag.html, pairing_heap_tag.html,\n\tpairing_priority_queue_text_push_pop_timing_test_gcc.png,\n\tpairing_priority_queue_text_push_pop_timing_test_local.png,\n\tpairing_priority_queue_text_push_pop_timing_test_msvc.png,\n\tpairing_priority_queue_text_push_timing_test_gcc.png,\n\tpairing_priority_queue_text_push_timing_test_local.png,\n\tpairing_priority_queue_text_push_timing_test_msvc.png,\n\tpat_trie.png, pat_trie_tag.html,\n\tpoint_invalidation_guarantee.html, point_iterators_cd.png,\n\tpoint_iterators_range_ops_1.png,\n\tpoint_iterators_range_ops_2.png, pq_container_traits.html,\n\tpq_design.html, pq_different_underlying_dss.png,\n\tpq_examples.html, pq_performance_tests.html,\n\tpq_regression_tests.html, pq_tests.html, prerequisites.html,\n\tpriority_queue.html,\n\tpriority_queue_random_int_push_pop_timing_test_gcc.png,\n\tpriority_queue_random_int_push_pop_timing_test.html,\n\tpriority_queue_random_int_push_pop_timing_test_local.png,\n\tpriority_queue_random_int_push_pop_timing_test_msvc.png,\n\tpriority_queue_random_int_push_timing_test_gcc.png,\n\tpriority_queue_random_int_push_timing_test.html,\n\tpriority_queue_random_int_push_timing_test_local.png,\n\tpriority_queue_random_int_push_timing_test_msvc.png,\n\tpriority_queue_tag_cd.png, priority_queue_tag_cd.svg,\n\tpriority_queue_tag.html,\n\tpriority_queue_text_join_timing_test_gcc.png,\n\tpriority_queue_text_join_timing_test.html,\n\tpriority_queue_text_join_timing_test_local.png,\n\tpriority_queue_text_join_timing_test_msvc.png,\n\tpriority_queue_text_modify_down_timing_test_gcc.png,\n\tpriority_queue_text_modify_down_timing_test.html,\n\tpriority_queue_text_modify_down_timing_test_local.png,\n\tpriority_queue_text_modify_down_timing_test_msvc.png,\n\tpriority_queue_text_modify_down_timing_test_pairing_thin_gcc.png,\n\tpriority_queue_text_modify_down_timing_test_pairing_thin_local.png,\n\tpriority_queue_text_modify_down_timing_test_pairing_thin_msvc.png,\n\tpriority_queue_text_modify_up_timing_test_gcc.png,\n\tpriority_queue_text_modify_up_timing_test.html,\n\tpriority_queue_text_modify_up_timing_test_local.png,\n\tpriority_queue_text_modify_up_timing_test_msvc.png,\n\tpriority_queue_text_modify_up_timing_test_pairing_thin_gcc.png,\n\tpriority_queue_text_modify_up_timing_test_pairing_thin_local.png,\n\tpriority_queue_text_modify_up_timing_test_pairing_thin_msvc.png,\n\tpriority_queue_text_pop_mem_usage_test_gcc.png,\n\tpriority_queue_text_pop_mem_usage_test.html,\n\tpriority_queue_text_pop_mem_usage_test_local.png,\n\tpriority_queue_text_pop_mem_usage_test_msvc.png,\n\tpriority_queue_text_push_pop_timing_test_gcc.png,\n\tpriority_queue_text_push_pop_timing_test.html,\n\tpriority_queue_text_push_pop_timing_test_local.png,\n\tpriority_queue_text_push_pop_timing_test_msvc.png,\n\tpriority_queue_text_push_timing_test_gcc.png,\n\tpriority_queue_text_push_timing_test.html,\n\tpriority_queue_text_push_timing_test_local.png,\n\tpriority_queue_text_push_timing_test_msvc.png,\n\tPythonPoweredSmall.gif quadratic_probe_fn.html,\n\trandom_int_find_find_timing_test_tree_gcc.png,\n\trandom_int_find_find_timing_test_tree_local.png,\n\trandom_int_find_find_timing_test_tree_msvc.png,\n\trange_invalidation_guarantee.html,\n\trationale_null_node_updator.png, rb_tree_tag.html,\n\trc_binomial_heap_tag.html, references.html, resize_error.html,\n\tresize_policy_cd.png, restoring_node_invariants.png,\n\tsample_probe_fn.html, sample_ranged_hash_fn.html,\n\tsample_ranged_probe_fn.html, sample_range_hashing.html,\n\tsample_resize_policy.html, sample_resize_trigger.html,\n\tsample_size_policy.html, sample_tree_node_update.html,\n\tsample_trie_access_traits.html, sample_trie_node_update.html,\n\tsample_update_policy.html, simple_list.png,\n\tsplay_tree_tag.html, tests.html,\n\ttext_find_timing_test_hash_gcc.png,\n\ttext_find_timing_test_hash_local.png,\n\ttext_find_timing_test_hash_msvc.png,\n\ttext_find_timing_test_tree_like_gcc.png,\n\ttext_find_timing_test_tree_like_local.png,\n\ttext_find_timing_test_tree_like_msvc.png, thin_heap_tag.html,\n\ttree_based_containers.html, tree.html,\n\ttree_node_iterator.html, tree_node_updator_policy_cd.png,\n\ttree_order_statistics_node_update.html,\n\ttree_order_statistics_timing_test_gcc.png,\n\ttree_order_statistics_timing_test.html,\n\ttree_order_statistics_timing_test_local.png,\n\ttree_order_statistics_timing_test_msvc.png,\n\ttree_random_int_find_find_timing_test.html,\n\ttree_split_join_timing_test_gcc.png,\n\ttree_split_join_timing_test.html,\n\ttree_split_join_timing_test_local.png,\n\ttree_split_join_timing_test_msvc.png, tree_tag.html,\n\ttree_text_find_find_timing_test.html,\n\ttree_text_insert_timing_test.html,\n\ttree_text_insert_timing_test_node_tree_gcc.png,\n\ttree_text_insert_timing_test_node_tree_local.png,\n\ttree_text_insert_timing_test_node_tree_msvc.png,\n\ttree_text_insert_timing_test_pat_trie_gcc.png,\n\ttree_text_insert_timing_test_pat_trie_local.png,\n\ttree_text_insert_timing_test_pat_trie_msvc.png,\n\ttree_text_insert_timing_test_vector_tree_gcc.png,\n\ttree_text_insert_timing_test_vector_tree_local.png,\n\ttree_text_insert_timing_test_vector_tree_msvc.png,\n\ttree_text_lor_find_find_timing_test.html,\n\ttree_text_lor_find_timing_test_gcc.png,\n\ttree_text_lor_find_timing_test_local.png,\n\ttree_text_lor_find_timing_test_msvc.png,\n\ttrie_based_containers.html, trie_const_node_iterator.html,\n\ttrie.html, trie_node_iterator.html,\n\ttrie_node_updator_policy_cd.png,\n\ttrie_order_statistics_node_update.html,\n\ttrie_prefix_search_node_update.html,\n\ttrie_string_access_traits.html, trie_tag.html,\n\ttrivial_iterator_tag.html, tutorial.html,\n\tupdate_policy_cd.png, update_seq_diagram.png): Remove.\n\nFrom-SVN: r176952", "tree": {"sha": "1eb8f8218adde319094ed8529dd5eb269987ffa2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1eb8f8218adde319094ed8529dd5eb269987ffa2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ce1140e3f2f7cd0a2533998369e60a085f703c3f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce1140e3f2f7cd0a2533998369e60a085f703c3f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce1140e3f2f7cd0a2533998369e60a085f703c3f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce1140e3f2f7cd0a2533998369e60a085f703c3f/comments", "author": null, "committer": null, "parents": [{"sha": "cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}], "stats": {"total": 66525, "additions": 36092, "deletions": 30433}, "files": [{"sha": "3a24ca4bc6f65ef9664dbeb4306dc9a5cd38fc6a", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 410, "deletions": 0, "changes": 410, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce1140e3f2f7cd0a2533998369e60a085f703c3f/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce1140e3f2f7cd0a2533998369e60a085f703c3f/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=ce1140e3f2f7cd0a2533998369e60a085f703c3f", "patch": "@@ -1,3 +1,413 @@\n+2011-07-29  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\tDocbook conversion of existing ext/pb_ds documentation.\n+\t* doc/Makefile.am (xml_sources_manual): Add\n+\tpolicy_data_structures.xml and\n+\ttest_policy_data_structures.xml.\n+\t(stamp-html-copy): Remove special-case for ext/pb_ds directory.\n+\t(XSLTPROC_FLAGS): Split into XSLT_FLAGS and XSLT_PARAM, use.\n+\t* doc/Makefile.in: Regenerate.\n+\t* doc/xml/manual/policy_data_structures.xml: New, adapted from\n+\t  previous html-only instance in doc/html/ext/pb_ds.\n+\t* doc/xml/manual/test_policy_data_structures.xml: New, same as above.\n+\n+\t* doc/xml/spine.xml: Update copyright.\n+\t* doc/xml/manual/spine.xml: Same.\n+\t* doc/xml/manual/extensions.xml: Adjust set, chapter, sections.\n+\t* doc/xml/manual/bitmap_allocator.xml: Same.\n+\t* doc/xml/manual/mt_allocator.xml: Same.\n+\n+\tPopulate image directory.\n+\t* doc/xml/images/(pbds_balls_and_bins.png,\n+\tpbds_binary_priority_queue_random_int_push_timing_test_local.pdf,\n+\tpbds_binary_priority_queue_random_int_push_timing_test_local.png,\n+\tpbds_binary_priority_queue_random_int_push_timing_test_local.svg,\n+\tpbds_cc_hash_random_int_find_timing_test_local.pdf,\n+\tpbds_cc_hash_random_int_find_timing_test_local.png,\n+\tpbds_cc_hash_random_int_find_timing_test_local.svg,\n+\tpbds_cc_hash_random_int_subscript_timing_test_find_local.pdf,\n+\tpbds_cc_hash_random_int_subscript_timing_test_find_local.png,\n+\tpbds_cc_hash_random_int_subscript_timing_test_find_local.svg,\n+\tpbds_cc_hash_random_int_subscript_timing_test_insert_local.pdf,\n+\tpbds_cc_hash_random_int_subscript_timing_test_insert_local.png,\n+\tpbds_cc_hash_random_int_subscript_timing_test_insert_local.svg,\n+\tpbds_container_tag_hierarchy.pdf,\n+\tpbds_container_tag_hierarchy.png,\n+\tpbds_container_tag_hierarchy.svg,\n+\tpbds_different_underlying_dss_1.png,\n+\tpbds_different_underlying_dss_2.png,\n+\tpbds_embedded_lists_1.png, pbds_embedded_lists_2.png,\n+\tpbds_embedded_lists_3.png, pbds_exception_hierarchy.pdf,\n+\tpbds_exception_hierarchy.png, pbds_exception_hierarchy.svg,\n+\tpbds_gp_hash_random_int_find_timing_test_local.pdf,\n+\tpbds_gp_hash_random_int_find_timing_test_local.png,\n+\tpbds_gp_hash_random_int_find_timing_test_local.svg,\n+\tpbds_gp_hash_random_int_subscript_timing_test_find_local.pdf,\n+\tpbds_gp_hash_random_int_subscript_timing_test_find_local.png,\n+\tpbds_gp_hash_random_int_subscript_timing_test_find_local.svg,\n+\tpbds_gp_hash_random_int_subscript_timing_test_insert_local.pdf,\n+\tpbds_gp_hash_random_int_subscript_timing_test_insert_local.png,\n+\tpbds_gp_hash_random_int_subscript_timing_test_insert_local.svg,\n+\tpbds_hash_policy_cd.png,\n+\tpbds_hash_random_int_erase_mem_usage_test_local.pdf,\n+\tpbds_hash_random_int_erase_mem_usage_test_local.png,\n+\tpbds_hash_random_int_erase_mem_usage_test_local.svg,\n+\tpbds_hash_ranged_hash_range_hashing_fns.png,\n+\tpbds_hash_range_hashing_seq_diagram2.png,\n+\tpbds_hash_range_hashing_seq_diagram.png,\n+\tpbds_hash_zlob_random_int_find_timing_test_local.pdf,\n+\tpbds_hash_zlob_random_int_find_timing_test_local.png,\n+\tpbds_hash_zlob_random_int_find_timing_test_local.svg,\n+\tpbds_insert_resize_sequence_diagram1.png,\n+\tpbds_insert_resize_sequence_diagram2.png,\n+\tpbds_insert_resize_sequence_diagram3.png,\n+\tpbds_invalidation_guarantee_erase.png,\n+\tpbds_invalidation_tag_hierarchy.pdf,\n+\tpbds_invalidation_tag_hierarchy.png,\n+\tpbds_invalidation_tag_hierarchy.svg, pbds_list_update.png,\n+\tpbds_multimap_text_find_timing_test_large_s2p_hash_local.pdf,\n+\tpbds_multimap_text_find_timing_test_large_s2p_hash_local.png,\n+\tpbds_multimap_text_find_timing_test_large_s2p_hash_local.svg,\n+\tpbds_multimap_text_find_timing_test_large_s2p_tree_local.pdf,\n+\tpbds_multimap_text_find_timing_test_large_s2p_tree_local.png,\n+\tpbds_multimap_text_find_timing_test_large_s2p_tree_local.svg,\n+\tpbds_multimap_text_find_timing_test_small_s2p_hash_local.pdf,\n+\tpbds_multimap_text_find_timing_test_small_s2p_hash_local.png,\n+\tpbds_multimap_text_find_timing_test_small_s2p_hash_local.svg,\n+\tpbds_multimap_text_find_timing_test_small_s2p_tree_local.pdf,\n+\tpbds_multimap_text_find_timing_test_small_s2p_tree_local.png,\n+\tpbds_multimap_text_find_timing_test_small_s2p_tree_local.svg,\n+\tpbds_multimap_text_insert_mem_usage_test_large_s2p_hash_local.pdf,\n+\tpbds_multimap_text_insert_mem_usage_test_large_s2p_hash_local.png,\n+\tpbds_multimap_text_insert_mem_usage_test_large_s2p_hash_local.svg,\n+\tpbds_multimap_text_insert_mem_usage_test_large_s2p_tree_local.pdf,\n+\tpbds_multimap_text_insert_mem_usage_test_large_s2p_tree_local.png,\n+\tpbds_multimap_text_insert_mem_usage_test_large_s2p_tree_local.svg,\n+\tpbds_multimap_text_insert_mem_usage_test_small_s2p_hash_local.pdf,\n+\tpbds_multimap_text_insert_mem_usage_test_small_s2p_hash_local.png,\n+\tpbds_multimap_text_insert_mem_usage_test_small_s2p_hash_local.svg,\n+\tpbds_multimap_text_insert_mem_usage_test_small_s2p_tree_local.pdf,\n+\tpbds_multimap_text_insert_mem_usage_test_small_s2p_tree_local.png,\n+\tpbds_multimap_text_insert_mem_usage_test_small_s2p_tree_local.svg,\n+\tpbds_multimap_text_insert_timing_test_large_s2p_hash_local.pdf,\n+\tpbds_multimap_text_insert_timing_test_large_s2p_hash_local.png,\n+\tpbds_multimap_text_insert_timing_test_large_s2p_hash_local.svg,\n+\tpbds_multimap_text_insert_timing_test_large_s2p_tree_local.pdf,\n+\tpbds_multimap_text_insert_timing_test_large_s2p_tree_local.png,\n+\tpbds_multimap_text_insert_timing_test_large_s2p_tree_local.svg,\n+\tpbds_multimap_text_insert_timing_test_small_s2p_hash_local.pdf,\n+\tpbds_multimap_text_insert_timing_test_small_s2p_hash_local.png,\n+\tpbds_multimap_text_insert_timing_test_small_s2p_hash_local.svg,\n+\tpbds_multimap_text_insert_timing_test_small_s2p_tree_local.pdf,\n+\tpbds_multimap_text_insert_timing_test_small_s2p_tree_local.png,\n+\tpbds_multimap_text_insert_timing_test_small_s2p_tree_local.svg,\n+\tpbds_node_invariants.png,\n+\tpbds_pairing_priority_queue_text_push_pop_timing_test_local.pdf,\n+\tpbds_pairing_priority_queue_text_push_pop_timing_test_local.png,\n+\tpbds_pairing_priority_queue_text_push_pop_timing_test_local.svg,\n+\tpbds_pairing_priority_queue_text_push_timing_test_local.pdf,\n+\tpbds_pairing_priority_queue_text_push_timing_test_local.png,\n+\tpbds_pairing_priority_queue_text_push_timing_test_local.svg,\n+\tpbds_pat_trie.png, pbds_point_iterator_hierarchy.png,\n+\tpbds_point_iterators_range_ops_1.png,\n+\tpbds_point_iterators_range_ops_2.png,\n+\tpbds_priority_queue_different_underlying_dss.png,\n+\tpbds_priority_queue_random_int_push_pop_timing_test_local.pdf,\n+\tpbds_priority_queue_random_int_push_pop_timing_test_local.png,\n+\tpbds_priority_queue_random_int_push_pop_timing_test_local.svg,\n+\tpbds_priority_queue_random_int_push_timing_test_local.pdf,\n+\tpbds_priority_queue_random_int_push_timing_test_local.png,\n+\tpbds_priority_queue_random_int_push_timing_test_local.svg,\n+\tpbds_priority_queue_tag_hierarchy.pdf,\n+\tpbds_priority_queue_tag_hierarchy.png,\n+\tpbds_priority_queue_tag_hierarchy.svg,\n+\tpbds_priority_queue_text_join_timing_test_local.pdf,\n+\tpbds_priority_queue_text_join_timing_test_local.png,\n+\tpbds_priority_queue_text_join_timing_test_local.svg,\n+\tpbds_priority_queue_text_modify_down_timing_test_local.pdf,\n+\tpbds_priority_queue_text_modify_down_timing_test_local.png,\n+\tpbds_priority_queue_text_modify_down_timing_test_local.svg,\n+\tpbds_priority_queue_text_modify_down_timing_test_pairing_thin_local.pdf,\n+\tpbds_priority_queue_text_modify_down_timing_test_pairing_thin_local.png,\n+\tpbds_priority_queue_text_modify_down_timing_test_pairing_thin_local.svg,\n+\tpbds_priority_queue_text_modify_up_timing_test_local.pdf,\n+\tpbds_priority_queue_text_modify_up_timing_test_local.png,\n+\tpbds_priority_queue_text_modify_up_timing_test_local.svg,\n+\tpbds_priority_queue_text_modify_up_timing_test_pairing_thin_local.pdf,\n+\tpbds_priority_queue_text_modify_up_timing_test_pairing_thin_local.png,\n+\tpbds_priority_queue_text_modify_up_timing_test_pairing_thin_local.svg,\n+\tpbds_priority_queue_text_pop_mem_usage_test_local.pdf,\n+\tpbds_priority_queue_text_pop_mem_usage_test_local.png,\n+\tpbds_priority_queue_text_pop_mem_usage_test_local.svg,\n+\tpbds_priority_queue_text_push_pop_timing_test_local.pdf,\n+\tpbds_priority_queue_text_push_pop_timing_test_local.png,\n+\tpbds_priority_queue_text_push_pop_timing_test_local.svg,\n+\tpbds_priority_queue_text_push_timing_test_local.pdf,\n+\tpbds_priority_queue_text_push_timing_test_local.png,\n+\tpbds_priority_queue_text_push_timing_test_local.svg,\n+\tpbds_rationale_null_node_updator.png,\n+\tpbds_resize_policy_cd.png, pbds_restoring_node_invariants.png,\n+\tpbds_simple_list.png,\n+\tpbds_text_find_timing_test_hash_local.pdf,\n+\tpbds_text_find_timing_test_hash_local.png,\n+\tpbds_text_find_timing_test_hash_local.svg,\n+\tpbds_text_find_timing_test_tree_like_local.pdf,\n+\tpbds_text_find_timing_test_tree_like_local.png,\n+\tpbds_text_find_timing_test_tree_like_local.svg,\n+\tpbds_tree_node_invalidations.png,\n+\tpbds_tree_node_invariants.png,\n+\tpbds_tree_node_updator_policy_cd.png,\n+\tpbds_tree_order_statistics_timing_test_local.pdf,\n+\tpbds_tree_order_statistics_timing_test_local.png,\n+\tpbds_tree_order_statistics_timing_test_local.svg,\n+\tpbds_tree_split_join_timing_test_local.pdf,\n+\tpbds_tree_split_join_timing_test_local.png,\n+\tpbds_tree_split_join_timing_test_local.svg,\n+\tpbds_tree_text_insert_timing_test_node_tree_local.pdf,\n+\tpbds_tree_text_insert_timing_test_node_tree_local.png,\n+\tpbds_tree_text_insert_timing_test_node_tree_local.svg,\n+\tpbds_tree_text_insert_timing_test_pat_trie_local.pdf,\n+\tpbds_tree_text_insert_timing_test_pat_trie_local.png,\n+\tpbds_tree_text_insert_timing_test_pat_trie_local.svg,\n+\tpbds_tree_text_insert_timing_test_vector_tree_local.pdf,\n+\tpbds_tree_text_insert_timing_test_vector_tree_local.png,\n+\tpbds_tree_text_insert_timing_test_vector_tree_local.svg,\n+\tpbds_tree_text_lor_find_timing_test_local.pdf,\n+\tpbds_tree_text_lor_find_timing_test_local.png,\n+\tpbds_tree_text_lor_find_timing_test_local.svg,\n+\tpbds_trie_node_updator_policy_cd.png,\n+\tpbds_update_seq_diagram.png): Add.\n+\n+\t* doc/html/ext/pb_ds: Remove.\n+\t* doc/html/ext/pb_ds/(acks.html, assoc_container_tag_cd.png,\n+\tassoc_container_tag_cd.svg, assoc_container_traits.html,\n+\tassoc_design.html, assoc_examples.html,\n+\tassociative_container_tag.html, assoc_performance_tests.html,\n+\tassoc_regression_tests.html, assoc_tests.html,\n+\tballs_and_bins.png, basic_hash_table.html,\n+\tbasic_hash_tag.html, basic_invalidation_guarantee.html,\n+\tbasic_tree_assoc_container_const_node_iterator.html,\n+\tbasic_tree.html, basic_tree_tag.html, binary_heap_tag.html,\n+\tbinary_priority_queue_random_int_push_timing_test_gcc.png,\n+\tbinary_priority_queue_random_int_push_timing_test_local.png,\n+\tbinary_priority_queue_random_int_push_timing_test_msvc.png,\n+\tbinomial_heap_tag.html,\n+\tccgp_hash_random_int_subscript_timing_test_insert_gcc.png,\n+\tccgp_hash_random_int_subscript_timing_test_insert_local.png,\n+\tccgp_hash_random_int_subscript_timing_test_insert_msvc.png,\n+\tcc_hash_max_collision_check_resize_trigger.html,\n+\tcc_hash_random_int_find_timing_test_gcc.png,\n+\tcc_hash_random_int_find_timing_test_local.png,\n+\tcc_hash_random_int_find_timing_test_msvc.png,\n+\tcc_hash_random_int_subscript_timing_test_find_gcc.png,\n+\tcc_hash_random_int_subscript_timing_test_find_local.png,\n+\tcc_hash_random_int_subscript_timing_test_find_msvc.png,\n+\tcc_hash_random_int_subscript_timing_test_insert_gcc.png,\n+\tcc_hash_random_int_subscript_timing_test_insert_local.png,\n+\tcc_hash_random_int_subscript_timing_test_insert_msvc.png,\n+\tcc_hash_table.html, cc_hash_tag.html, checked_by_tidy.gif\n+\tconcepts.html, contact.html, container_base.html,\n+\tcontainer_cd.png, container_cd.svg, container_tag.html,\n+\tcounter_lu_policy.html, design.html,\n+\tdifferent_underlying_dss.png, direct_mask_range_hashing.html,\n+\tdirect_mod_range_hashing.html, disclaimer.html, ds_gen.html,\n+\tembedded_lists_1.png, embedded_lists_2.png,\n+\tembedded_lists_3.png, examples.html, exceptions.html,\n+\tgp_hash_random_int_find_timing_test_gcc.png,\n+\tgp_hash_random_int_find_timing_test_local.png,\n+\tgp_hash_random_int_find_timing_test_msvc.png,\n+\tgp_hash_random_int_subscript_timing_test_find_gcc.png,\n+\tgp_hash_random_int_subscript_timing_test_find_local.png,\n+\tgp_hash_random_int_subscript_timing_test_find_msvc.png,\n+\tgp_hash_random_int_subscript_timing_test_insert_gcc.png,\n+\tgp_hash_random_int_subscript_timing_test_insert_local.png,\n+\tgp_hash_random_int_subscript_timing_test_insert_msvc.png,\n+\tgp_hash_table.html, gp_hash_tag.html,\n+\thash_based_containers.html, hash_exponential_size_policy.html,\n+\thash_load_check_resize_trigger.html, hash_policy_cd.png,\n+\thash_prime_size_policy.html,\n+\thash_random_int_erase_mem_usage_test_gcc.png,\n+\thash_random_int_erase_mem_usage_test.html,\n+\thash_random_int_erase_mem_usage_test_local.png,\n+\thash_random_int_erase_mem_usage_test_msvc.png,\n+\thash_random_int_find_find_timing_test.html,\n+\thash_random_int_subscript_find_timing_test.html,\n+\thash_random_int_subscript_insert_timing_test.html,\n+\thash_ranged_hash_range_hashing_fns.png,\n+\thash_range_hashing_seq_diagram2.png,\n+\thash_range_hashing_seq_diagram.png,\n+\thash_standard_resize_policy.html,\n+\thash_text_find_find_timing_test.html,\n+\thash_zlob_random_int_find_find_timing_test.html,\n+\thash_zlob_random_int_find_timing_test_gcc.png,\n+\thash_zlob_random_int_find_timing_test_local.png,\n+\thash_zlob_random_int_find_timing_test_msvc.png, index.html,\n+\tinsert_error.html, insert_resize_sequence_diagram1.png,\n+\tinsert_resize_sequence_diagram2.png,\n+\tinsert_resize_sequence_diagram3.png, interface.html,\n+\tintroduction.html, invalidation_guarantee_cd.png,\n+\tinvalidation_guarantee_erase.png, join_error.html,\n+\tlinear_probe_fn.html, list_update.html, list_update_tag.html,\n+\tlu_based_containers.html, lu.png, misc.html, motivation.html,\n+\tmove_to_front_lu_policy.html,\n+\tmultimap_text_find_timing_test_large.html,\n+\tmultimap_text_find_timing_test_large_s2p_hash_gcc.png,\n+\tmultimap_text_find_timing_test_large_s2p_hash_local.png,\n+\tmultimap_text_find_timing_test_large_s2p_hash_msvc.png,\n+\tmultimap_text_find_timing_test_large_s2p_tree_gcc.png,\n+\tmultimap_text_find_timing_test_large_s2p_tree_local.png,\n+\tmultimap_text_find_timing_test_large_s2p_tree_msvc.png,\n+\tmultimap_text_find_timing_test_small.html,\n+\tmultimap_text_find_timing_test_small_s2p_hash_gcc.png,\n+\tmultimap_text_find_timing_test_small_s2p_hash_local.png,\n+\tmultimap_text_find_timing_test_small_s2p_hash_msvc.png,\n+\tmultimap_text_find_timing_test_small_s2p_tree_gcc.png,\n+\tmultimap_text_find_timing_test_small_s2p_tree_local.png,\n+\tmultimap_text_find_timing_test_small_s2p_tree_msvc.png,\n+\tmultimap_text_insert_mem_usage_test_large.html,\n+\tmultimap_text_insert_mem_usage_test_large_s2p_hash_gcc.png,\n+\tmultimap_text_insert_mem_usage_test_large_s2p_hash_local.png,\n+\tmultimap_text_insert_mem_usage_test_large_s2p_hash_msvc.png,\n+\tmultimap_text_insert_mem_usage_test_large_s2p_tree_gcc.png,\n+\tmultimap_text_insert_mem_usage_test_large_s2p_tree_local.png,\n+\tmultimap_text_insert_mem_usage_test_large_s2p_tree_msvc.png,\n+\tmultimap_text_insert_mem_usage_test_small.html,\n+\tmultimap_text_insert_mem_usage_test_small_s2p_hash_gcc.png,\n+\tmultimap_text_insert_mem_usage_test_small_s2p_hash_local.png,\n+\tmultimap_text_insert_mem_usage_test_small_s2p_hash_msvc.png,\n+\tmultimap_text_insert_mem_usage_test_small_s2p_tree_gcc.png,\n+\tmultimap_text_insert_mem_usage_test_small_s2p_tree_local.png,\n+\tmultimap_text_insert_mem_usage_test_small_s2p_tree_msvc.png,\n+\tmultimap_text_insert_timing_test_large.html,\n+\tmultimap_text_insert_timing_test_large_s2p_hash_gcc.png,\n+\tmultimap_text_insert_timing_test_large_s2p_hash_local.png,\n+\tmultimap_text_insert_timing_test_large_s2p_hash_msvc.png,\n+\tmultimap_text_insert_timing_test_large_s2p_tree_gcc.png,\n+\tmultimap_text_insert_timing_test_large_s2p_tree_local.png,\n+\tmultimap_text_insert_timing_test_large_s2p_tree_msvc.png,\n+\tmultimap_text_insert_timing_test_small.html,\n+\tmultimap_text_insert_timing_test_small_s2p_hash_gcc.png,\n+\tmultimap_text_insert_timing_test_small_s2p_hash_local.png,\n+\tmultimap_text_insert_timing_test_small_s2p_hash_msvc.png,\n+\tmultimap_text_insert_timing_test_small_s2p_tree_gcc.png,\n+\tmultimap_text_insert_timing_test_small_s2p_tree_local.png,\n+\tmultimap_text_insert_timing_test_small_s2p_tree_msvc.png,\n+\tnode_invariant_invalidations.png, node_invariants.png,\n+\tnull_hash_fn.html, null_lu_metadata.html,\n+\tnull_mapped_type.html, null_probe_fn.html,\n+\tnull_tree_node_update.html, null_trie_node_update.html,\n+\tov_tree_tag.html, pairing_heap_tag.html,\n+\tpairing_priority_queue_text_push_pop_timing_test_gcc.png,\n+\tpairing_priority_queue_text_push_pop_timing_test_local.png,\n+\tpairing_priority_queue_text_push_pop_timing_test_msvc.png,\n+\tpairing_priority_queue_text_push_timing_test_gcc.png,\n+\tpairing_priority_queue_text_push_timing_test_local.png,\n+\tpairing_priority_queue_text_push_timing_test_msvc.png,\n+\tpat_trie.png, pat_trie_tag.html,\n+\tpoint_invalidation_guarantee.html, point_iterators_cd.png,\n+\tpoint_iterators_range_ops_1.png,\n+\tpoint_iterators_range_ops_2.png, pq_container_traits.html,\n+\tpq_design.html, pq_different_underlying_dss.png,\n+\tpq_examples.html, pq_performance_tests.html,\n+\tpq_regression_tests.html, pq_tests.html, prerequisites.html,\n+\tpriority_queue.html,\n+\tpriority_queue_random_int_push_pop_timing_test_gcc.png,\n+\tpriority_queue_random_int_push_pop_timing_test.html,\n+\tpriority_queue_random_int_push_pop_timing_test_local.png,\n+\tpriority_queue_random_int_push_pop_timing_test_msvc.png,\n+\tpriority_queue_random_int_push_timing_test_gcc.png,\n+\tpriority_queue_random_int_push_timing_test.html,\n+\tpriority_queue_random_int_push_timing_test_local.png,\n+\tpriority_queue_random_int_push_timing_test_msvc.png,\n+\tpriority_queue_tag_cd.png, priority_queue_tag_cd.svg,\n+\tpriority_queue_tag.html,\n+\tpriority_queue_text_join_timing_test_gcc.png,\n+\tpriority_queue_text_join_timing_test.html,\n+\tpriority_queue_text_join_timing_test_local.png,\n+\tpriority_queue_text_join_timing_test_msvc.png,\n+\tpriority_queue_text_modify_down_timing_test_gcc.png,\n+\tpriority_queue_text_modify_down_timing_test.html,\n+\tpriority_queue_text_modify_down_timing_test_local.png,\n+\tpriority_queue_text_modify_down_timing_test_msvc.png,\n+\tpriority_queue_text_modify_down_timing_test_pairing_thin_gcc.png,\n+\tpriority_queue_text_modify_down_timing_test_pairing_thin_local.png,\n+\tpriority_queue_text_modify_down_timing_test_pairing_thin_msvc.png,\n+\tpriority_queue_text_modify_up_timing_test_gcc.png,\n+\tpriority_queue_text_modify_up_timing_test.html,\n+\tpriority_queue_text_modify_up_timing_test_local.png,\n+\tpriority_queue_text_modify_up_timing_test_msvc.png,\n+\tpriority_queue_text_modify_up_timing_test_pairing_thin_gcc.png,\n+\tpriority_queue_text_modify_up_timing_test_pairing_thin_local.png,\n+\tpriority_queue_text_modify_up_timing_test_pairing_thin_msvc.png,\n+\tpriority_queue_text_pop_mem_usage_test_gcc.png,\n+\tpriority_queue_text_pop_mem_usage_test.html,\n+\tpriority_queue_text_pop_mem_usage_test_local.png,\n+\tpriority_queue_text_pop_mem_usage_test_msvc.png,\n+\tpriority_queue_text_push_pop_timing_test_gcc.png,\n+\tpriority_queue_text_push_pop_timing_test.html,\n+\tpriority_queue_text_push_pop_timing_test_local.png,\n+\tpriority_queue_text_push_pop_timing_test_msvc.png,\n+\tpriority_queue_text_push_timing_test_gcc.png,\n+\tpriority_queue_text_push_timing_test.html,\n+\tpriority_queue_text_push_timing_test_local.png,\n+\tpriority_queue_text_push_timing_test_msvc.png,\n+\tPythonPoweredSmall.gif quadratic_probe_fn.html,\n+\trandom_int_find_find_timing_test_tree_gcc.png,\n+\trandom_int_find_find_timing_test_tree_local.png,\n+\trandom_int_find_find_timing_test_tree_msvc.png,\n+\trange_invalidation_guarantee.html,\n+\trationale_null_node_updator.png, rb_tree_tag.html,\n+\trc_binomial_heap_tag.html, references.html, resize_error.html,\n+\tresize_policy_cd.png, restoring_node_invariants.png,\n+\tsample_probe_fn.html, sample_ranged_hash_fn.html,\n+\tsample_ranged_probe_fn.html, sample_range_hashing.html,\n+\tsample_resize_policy.html, sample_resize_trigger.html,\n+\tsample_size_policy.html, sample_tree_node_update.html,\n+\tsample_trie_access_traits.html, sample_trie_node_update.html,\n+\tsample_update_policy.html, simple_list.png,\n+\tsplay_tree_tag.html, tests.html,\n+\ttext_find_timing_test_hash_gcc.png,\n+\ttext_find_timing_test_hash_local.png,\n+\ttext_find_timing_test_hash_msvc.png,\n+\ttext_find_timing_test_tree_like_gcc.png,\n+\ttext_find_timing_test_tree_like_local.png,\n+\ttext_find_timing_test_tree_like_msvc.png, thin_heap_tag.html,\n+\ttree_based_containers.html, tree.html,\n+\ttree_node_iterator.html, tree_node_updator_policy_cd.png,\n+\ttree_order_statistics_node_update.html,\n+\ttree_order_statistics_timing_test_gcc.png,\n+\ttree_order_statistics_timing_test.html,\n+\ttree_order_statistics_timing_test_local.png,\n+\ttree_order_statistics_timing_test_msvc.png,\n+\ttree_random_int_find_find_timing_test.html,\n+\ttree_split_join_timing_test_gcc.png,\n+\ttree_split_join_timing_test.html,\n+\ttree_split_join_timing_test_local.png,\n+\ttree_split_join_timing_test_msvc.png, tree_tag.html,\n+\ttree_text_find_find_timing_test.html,\n+\ttree_text_insert_timing_test.html,\n+\ttree_text_insert_timing_test_node_tree_gcc.png,\n+\ttree_text_insert_timing_test_node_tree_local.png,\n+\ttree_text_insert_timing_test_node_tree_msvc.png,\n+\ttree_text_insert_timing_test_pat_trie_gcc.png,\n+\ttree_text_insert_timing_test_pat_trie_local.png,\n+\ttree_text_insert_timing_test_pat_trie_msvc.png,\n+\ttree_text_insert_timing_test_vector_tree_gcc.png,\n+\ttree_text_insert_timing_test_vector_tree_local.png,\n+\ttree_text_insert_timing_test_vector_tree_msvc.png,\n+\ttree_text_lor_find_find_timing_test.html,\n+\ttree_text_lor_find_timing_test_gcc.png,\n+\ttree_text_lor_find_timing_test_local.png,\n+\ttree_text_lor_find_timing_test_msvc.png,\n+\ttrie_based_containers.html, trie_const_node_iterator.html,\n+\ttrie.html, trie_node_iterator.html,\n+\ttrie_node_updator_policy_cd.png,\n+\ttrie_order_statistics_node_update.html,\n+\ttrie_prefix_search_node_update.html,\n+\ttrie_string_access_traits.html, trie_tag.html,\n+\ttrivial_iterator_tag.html, tutorial.html,\n+\tupdate_policy_cd.png, update_seq_diagram.png): Remove.\n+\n 2011-07-27  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/49813"}, {"sha": "e9df245968306cecc81dc5b68c3c68a0967e01d7", "filename": "libstdc++-v3/doc/Makefile.am", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce1140e3f2f7cd0a2533998369e60a085f703c3f/libstdc%2B%2B-v3%2Fdoc%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce1140e3f2f7cd0a2533998369e60a085f703c3f/libstdc%2B%2B-v3%2Fdoc%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2FMakefile.am?ref=ce1140e3f2f7cd0a2533998369e60a085f703c3f", "patch": "@@ -144,7 +144,6 @@ stamp-html-copy: stamp-html-docbook\n \tcp -r ${top_srcdir}/doc/html/ext ${docbook_outdir}/html/manual/ext\n \tcd ${docbook_outdir}/html/manual/ext\n \trm -rf ${docbook_outdir}/html/manual/ext/.svn \n-\trm -rf ${docbook_outdir}/html/manual/ext/pb_ds/.svn\n \t$(STAMP) stamp-html-copy\n \n doc-html: stamp-html\n@@ -339,6 +338,7 @@ xml_sources_manual = \\\n \t${xml_dir}/manual/mt_allocator.xml \\\n \t${xml_dir}/manual/numerics.xml \\\n \t${xml_dir}/manual/parallel_mode.xml \\\n+\t${xml_dir}/manual/policy_data_structures.xml \\\n \t${xml_dir}/manual/prerequisites.xml \\\n \t${xml_dir}/manual/profile_mode.xml \\\n \t${xml_dir}/manual/shared_ptr.xml \\\n@@ -350,6 +350,7 @@ xml_sources_manual = \\\n \t${xml_dir}/manual/strings.xml \\\n \t${xml_dir}/manual/support.xml \\\n \t${xml_dir}/manual/test.xml \\\n+\t${xml_dir}/manual/test_policy_data_structures.xml \\\n \t${xml_dir}/manual/using.xml \\\n \t${xml_dir}/manual/using_exceptions.xml \\\n \t${xml_dir}/manual/utilities.xml \\\n@@ -375,7 +376,8 @@ xml_noinst = \\\n \t${xml_dir}/images/confdeps.pdf\n \n XSLTPROC       = xsltproc\n-XSLTPROC_FLAGS = --nonet --xinclude\n+XSLT_FLAGS = --nonet --xinclude\n+XSLT_PARAM = --param toc.section.depth 4\n #XSL_STYLE_DIR = /usr/share/xml/docbook/stylesheet/docbook-xsl-ns\n #XSL_STYLE_DIR = /usr/share/sgml/docbook/xsl-ns-stylesheets\n XSL_FO_STYLE = $(XSL_STYLE_DIR)/fo/docbook.xsl\n@@ -433,7 +435,7 @@ doc-xml-single-docbook: stamp-xml-single-docbook\n # HTML, index plus chapters\n stamp-html-docbook: $(xml_sources) ${docbook_outdir}/html\n \t@echo \"Generating html files...\"\n-\t$(XSLTPROC) $(XSLTPROC_FLAGS) -o ${docbook_outdir}/html/ \\\n+\t$(XSLTPROC) $(XSLT_PARAM) $(XSLT_FLAGS) -o ${docbook_outdir}/html/ \\\n \t$(XSL_HTML_STYLE) ${top_srcdir}/doc/xml/spine.xml\n \t$(STAMP) stamp-html-docbook\n \n@@ -443,7 +445,7 @@ doc-html-docbook: stamp-html-docbook\n manual_html = ${docbook_outdir}/html/libstdc++-manual-single.html\n stamp-html-single-docbook: $(xml_sources) ${docbook_outdir}/html\n \t@echo \"Generating html single file...\"\n-\t$(XSLTPROC) $(XSLTPROC_FLAGS) -o ${manual_html} \\\n+\t$(XSLTPROC) $(XSLT_PARAM) $(XSLT_FLAGS) -o ${manual_html} \\\n \t$(XSL_HTML_SINGLE_STYLE) ${top_srcdir}/doc/xml/spine.xml\n \t$(STAMP) stamp-html-single-docbook\n \n@@ -452,7 +454,7 @@ doc-html-single-docbook: stamp-html-single-docbook\n # FO\n stamp-fo-docbook: $(xml_sources) ${docbook_outdir}/fo\n \t@echo \"Generating FO files...\"\n-\t$(XSLTPROC) $(XSLTPROC_FLAGS) -o ${docbook_outdir}/fo/spine.fo \\\n+\t$(XSLTPROC) $(XSLT_FLAGS) -o ${docbook_outdir}/fo/spine.fo \\\n \t$(XSL_FO_STYLE) ${top_srcdir}/doc/xml/spine.xml\n \t$(STAMP) stamp-fo-docbook\n \n@@ -506,6 +508,7 @@ doc-epub-docbook: stamp-epub-docbook\n # Performance doc and graph configuration.\n # Assumes pychart, beautiful soup installed.\n # Generates the plots and graphs for performance testing.\n+# XXX this needs to be re-worked to create only the SVG charts\n doc_performance_script=${top_srcdir}/scripts/make_graphs.py\n doc-html-performance:\n \t-@(chmod + ${doc_performance_script}; \\"}, {"sha": "503a304dfa2a6fe66553e9cc93a6554dffc54f94", "filename": "libstdc++-v3/doc/Makefile.in", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce1140e3f2f7cd0a2533998369e60a085f703c3f/libstdc%2B%2B-v3%2Fdoc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce1140e3f2f7cd0a2533998369e60a085f703c3f/libstdc%2B%2B-v3%2Fdoc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2FMakefile.in?ref=ce1140e3f2f7cd0a2533998369e60a085f703c3f", "patch": "@@ -385,6 +385,7 @@ xml_sources_manual = \\\n \t${xml_dir}/manual/mt_allocator.xml \\\n \t${xml_dir}/manual/numerics.xml \\\n \t${xml_dir}/manual/parallel_mode.xml \\\n+\t${xml_dir}/manual/policy_data_structures.xml \\\n \t${xml_dir}/manual/prerequisites.xml \\\n \t${xml_dir}/manual/profile_mode.xml \\\n \t${xml_dir}/manual/shared_ptr.xml \\\n@@ -396,6 +397,7 @@ xml_sources_manual = \\\n \t${xml_dir}/manual/strings.xml \\\n \t${xml_dir}/manual/support.xml \\\n \t${xml_dir}/manual/test.xml \\\n+\t${xml_dir}/manual/test_policy_data_structures.xml \\\n \t${xml_dir}/manual/using.xml \\\n \t${xml_dir}/manual/using_exceptions.xml \\\n \t${xml_dir}/manual/utilities.xml \\\n@@ -420,7 +422,8 @@ xml_noinst = \\\n \t${xml_dir}/images/confdeps.png \\\n \t${xml_dir}/images/confdeps.pdf\n \n-XSLTPROC_FLAGS = --nonet --xinclude\n+XSLT_FLAGS = --nonet --xinclude\n+XSLT_PARAM = --param toc.section.depth 4\n #XSL_STYLE_DIR = /usr/share/xml/docbook/stylesheet/docbook-xsl-ns\n #XSL_STYLE_DIR = /usr/share/sgml/docbook/xsl-ns-stylesheets\n XSL_FO_STYLE = $(XSL_STYLE_DIR)/fo/docbook.xsl\n@@ -463,6 +466,7 @@ manual_epub = ${docbook_outdir}/epub/libstdc++-manual.epub\n # Performance doc and graph configuration.\n # Assumes pychart, beautiful soup installed.\n # Generates the plots and graphs for performance testing.\n+# XXX this needs to be re-worked to create only the SVG charts\n doc_performance_script = ${top_srcdir}/scripts/make_graphs.py\n \n # By adding these files here, automake will remove them for 'make clean'\n@@ -657,7 +661,6 @@ stamp-html-copy: stamp-html-docbook\n \tcp -r ${top_srcdir}/doc/html/ext ${docbook_outdir}/html/manual/ext\n \tcd ${docbook_outdir}/html/manual/ext\n \trm -rf ${docbook_outdir}/html/manual/ext/.svn \n-\trm -rf ${docbook_outdir}/html/manual/ext/pb_ds/.svn\n \t$(STAMP) stamp-html-copy\n \n doc-html: stamp-html\n@@ -818,14 +821,14 @@ doc-xml-single-docbook: stamp-xml-single-docbook\n # HTML, index plus chapters\n stamp-html-docbook: $(xml_sources) ${docbook_outdir}/html\n \t@echo \"Generating html files...\"\n-\t$(XSLTPROC) $(XSLTPROC_FLAGS) -o ${docbook_outdir}/html/ \\\n+\t$(XSLTPROC) $(XSLT_PARAM) $(XSLT_FLAGS) -o ${docbook_outdir}/html/ \\\n \t$(XSL_HTML_STYLE) ${top_srcdir}/doc/xml/spine.xml\n \t$(STAMP) stamp-html-docbook\n \n doc-html-docbook: stamp-html-docbook\n stamp-html-single-docbook: $(xml_sources) ${docbook_outdir}/html\n \t@echo \"Generating html single file...\"\n-\t$(XSLTPROC) $(XSLTPROC_FLAGS) -o ${manual_html} \\\n+\t$(XSLTPROC) $(XSLT_PARAM) $(XSLT_FLAGS) -o ${manual_html} \\\n \t$(XSL_HTML_SINGLE_STYLE) ${top_srcdir}/doc/xml/spine.xml\n \t$(STAMP) stamp-html-single-docbook\n \n@@ -834,7 +837,7 @@ doc-html-single-docbook: stamp-html-single-docbook\n # FO\n stamp-fo-docbook: $(xml_sources) ${docbook_outdir}/fo\n \t@echo \"Generating FO files...\"\n-\t$(XSLTPROC) $(XSLTPROC_FLAGS) -o ${docbook_outdir}/fo/spine.fo \\\n+\t$(XSLTPROC) $(XSLT_FLAGS) -o ${docbook_outdir}/fo/spine.fo \\\n \t$(XSL_FO_STYLE) ${top_srcdir}/doc/xml/spine.xml\n \t$(STAMP) stamp-fo-docbook\n "}, {"sha": "268980706ab40af54e7de6d03af2e0fd467b9bd6", "filename": "libstdc++-v3/doc/html/ext/pb_ds/PythonPoweredSmall.gif", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2FPythonPoweredSmall.gif", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2FPythonPoweredSmall.gif", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2FPythonPoweredSmall.gif?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "6612a4a8184f8c08e05cfdb56a67c69d9b7e375b", "filename": "libstdc++-v3/doc/html/ext/pb_ds/acks.html", "status": "removed", "additions": 0, "deletions": 65, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Facks.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Facks.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Facks.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7", "patch": "@@ -1,65 +0,0 @@\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n-    \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n-<head>\n-  <meta name=\"generator\" content=\n-  \"HTML Tidy for Linux/x86 (vers 12 April 2005), see www.w3.org\" />\n-\n-  <title>Acknowledgments</title>\n-  <meta http-equiv=\"Content-Type\" content=\n-  \"text/html; charset=us-ascii\" />\n-  </head>\n-\n-<body>\n-  <div id=\"page\">\n-    <h1>Acknowledgments</h1>\n-\n-    <ol>\n-      <li>This library was partially written at <a href=\n-      \"http://www.haifa.il.ibm.com/\">IBM's Haifa Research\n-      Labs</a>.</li>\n-\n-      <li>The library is based heavily on policy-based design and\n-      uses many useful techniques from [<a href=\n-      \"references.html#alexandrescu01modern\">alexandrescu01modern</a>].</li>\n-\n-      <li>Two ideas are borrowed from the SGI-STL implementation\n-      [<a href=\"references.html#sgi_stl\">sgi_stl</a>]:\n-\n-        <ol>\n-          <li>The prime-based resize policies use a list of primes\n-          taken from the SGI-STL implementation.</li>\n-\n-          <li>The red-black trees contain both a root node and a\n-          header node (containing metadata), connected in a way\n-          that forward and reverse iteration can be performed\n-          efficiently.</li>\n-        </ol>\n-      </li>\n-\n-      <li>Some test utilities borrow ideas from [<a href=\n-      \"references.html#boost_timer\">boost_timer</a>].</li>\n-\n-      <li>We would like to thank Scott Meyers for useful comments\n-      (without attributing to him any flaws in the design or\n-      implementation of the library).</li>\n-\n-      <li>Much of the documentation is <a href=\n-      \"http://www.python.org/\"><img src=\"PythonPoweredSmall.gif\"\n-      align=\"middle\" width=\"55\" height=\"22\" alt=\"[Python Powered]\"\n-      border=\"0\" /></a> (especially through <a href=\n-      \"http://home.gna.org/pychart/\">PyChart</a>, <a href=\n-      \"http://www.crummy.com/software/BeautifulSoup/\">Beautiful\n-      Soup</a>, and <a href=\n-      \"http://starship.python.net/crew/aaron_watters/kjbuckets/\">kjbuckets</a>)\n-      and uses <a href=\"http://tidy.sourceforge.net/\"><img src=\n-      \"checked_by_tidy.gif\" align=\"middle\" width=\"55\" height=\"45\"\n-      alt=\"[HTML tidy]\" border=\"0\" /></a>. The CSS-driven menus are\n-      slightly modified from <a href=\n-      \"http://www.brothercake.com/scripts/navmeister/page.php\">Brothercake</a>\n-      (hopefully without introducing errors).</li>\n-    </ol>\n-  </div>\n-</body>\n-</html>"}, {"sha": "16cc6da870df0ad2a7899bfa366d4a8720e53114", "filename": "libstdc++-v3/doc/html/ext/pb_ds/assoc_container_tag_cd.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fassoc_container_tag_cd.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fassoc_container_tag_cd.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fassoc_container_tag_cd.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "02be62416478c7fcd1c24bba1f3c1579e397bac6", "filename": "libstdc++-v3/doc/html/ext/pb_ds/assoc_container_tag_cd.svg", "status": "removed", "additions": 0, "deletions": 491, "changes": 491, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fassoc_container_tag_cd.svg", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fassoc_container_tag_cd.svg", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fassoc_container_tag_cd.svg?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7", "patch": "@@ -1,491 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!-- Created with Inkscape (http://www.inkscape.org/) -->\n-<svg\n-   xmlns:dc=\"http://purl.org/dc/elements/1.1/\"\n-   xmlns:cc=\"http://web.resource.org/cc/\"\n-   xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n-   xmlns:svg=\"http://www.w3.org/2000/svg\"\n-   xmlns=\"http://www.w3.org/2000/svg\"\n-   xmlns:sodipodi=\"http://inkscape.sourceforge.net/DTD/sodipodi-0.dtd\"\n-   xmlns:inkscape=\"http://www.inkscape.org/namespaces/inkscape\"\n-   width=\"11in\"\n-   height=\"8.5in\"\n-   id=\"svg2\"\n-   sodipodi:version=\"0.32\"\n-   inkscape:version=\"0.43\"\n-   version=\"1.0\"\n-   sodipodi:docbase=\"/mnt/share/src/policy_based_data_structures/pb_ds_images\"\n-   sodipodi:docname=\"assoc_tag_diagram_2.svg\"\n-   inkscape:export-filename=\"/mnt/share/src/policy_based_data_structures/pb_ds_images/assoc_tag_diagram_2.png\"\n-   inkscape:export-xdpi=\"90\"\n-   inkscape:export-ydpi=\"90\">\n-  <defs\n-     id=\"defs4\">\n-    <marker\n-       inkscape:stockid=\"Arrow1Mstart\"\n-       orient=\"auto\"\n-       refY=\"0.0\"\n-       refX=\"0.0\"\n-       id=\"Arrow1Mstart\"\n-       style=\"overflow:visible\">\n-      <path\n-         id=\"path3311\"\n-         d=\"M 0.0,0.0 L 5.0,-5.0 L -12.5,0.0 L 5.0,5.0 L 0.0,0.0 z \"\n-         style=\"fill-rule:evenodd;stroke:#000000;stroke-width:1.0pt;marker-start:none\"\n-         transform=\"scale(0.4)\" />\n-    </marker>\n-    <marker\n-       inkscape:stockid=\"Arrow2Sstart\"\n-       orient=\"auto\"\n-       refY=\"0\"\n-       refX=\"0\"\n-       id=\"Arrow2Sstart\"\n-       style=\"overflow:visible\">\n-      <path\n-         id=\"path3319\"\n-         style=\"font-size:12px;fill-rule:evenodd;stroke-width:0.625;stroke-linejoin:round\"\n-         d=\"M 8.7185878,4.0337352 L -2.2072895,0.016013256 L 8.7185884,-4.0017078 C 6.97309,-1.6296469 6.9831476,1.6157441 8.7185878,4.0337352 z \"\n-         transform=\"matrix(0.3,0,0,0.3,-1.5,0)\" />\n-    </marker>\n-    <marker\n-       inkscape:stockid=\"Arrow1Sstart\"\n-       orient=\"auto\"\n-       refY=\"0\"\n-       refX=\"0\"\n-       id=\"Arrow1Sstart\"\n-       style=\"overflow:visible\">\n-      <path\n-         id=\"path3337\"\n-         d=\"M 0,0 L 5,-5 L -12.5,0 L 5,5 L 0,0 z \"\n-         style=\"fill-rule:evenodd;stroke:#000000;stroke-width:1pt;marker-start:none\"\n-         transform=\"scale(0.2,0.2)\" />\n-    </marker>\n-    <marker\n-       inkscape:stockid=\"Arrow2Send\"\n-       orient=\"auto\"\n-       refY=\"0\"\n-       refX=\"0\"\n-       id=\"Arrow2Send\"\n-       style=\"overflow:visible\">\n-      <path\n-         id=\"path3316\"\n-         style=\"font-size:12px;fill-rule:evenodd;stroke-width:0.625;stroke-linejoin:round\"\n-         d=\"M 8.7185878,4.0337352 L -2.2072895,0.016013256 L 8.7185884,-4.0017078 C 6.97309,-1.6296469 6.9831476,1.6157441 8.7185878,4.0337352 z \"\n-         transform=\"matrix(-0.3,0,0,-0.3,1.5,0)\" />\n-    </marker>\n-    <marker\n-       inkscape:stockid=\"Arrow2Mend\"\n-       orient=\"auto\"\n-       refY=\"0\"\n-       refX=\"0\"\n-       id=\"Arrow2Mend\"\n-       style=\"overflow:visible\">\n-      <path\n-         id=\"path3322\"\n-         style=\"font-size:12px;fill-rule:evenodd;stroke-width:0.625;stroke-linejoin:round\"\n-         d=\"M 8.7185878,4.0337352 L -2.2072895,0.016013256 L 8.7185884,-4.0017078 C 6.97309,-1.6296469 6.9831476,1.6157441 8.7185878,4.0337352 z \"\n-         transform=\"matrix(-0.6,0,0,-0.6,3,0)\" />\n-    </marker>\n-    <marker\n-       inkscape:stockid=\"Arrow1Lend\"\n-       orient=\"auto\"\n-       refY=\"0\"\n-       refX=\"0\"\n-       id=\"Arrow1Lend\"\n-       style=\"overflow:visible\">\n-      <path\n-         id=\"path3346\"\n-         d=\"M 0,0 L 5,-5 L -12.5,0 L 5,5 L 0,0 z \"\n-         style=\"fill-rule:evenodd;stroke:#000000;stroke-width:1pt;marker-start:none\"\n-         transform=\"scale(-0.8,-0.8)\" />\n-    </marker>\n-    <marker\n-       inkscape:stockid=\"Arrow2Lstart\"\n-       orient=\"auto\"\n-       refY=\"0\"\n-       refX=\"0\"\n-       id=\"Arrow2Lstart\"\n-       style=\"overflow:visible\">\n-      <path\n-         id=\"path3331\"\n-         style=\"font-size:12px;fill-rule:evenodd;stroke-width:0.625;stroke-linejoin:round\"\n-         d=\"M 8.7185878,4.0337352 L -2.2072895,0.016013256 L 8.7185884,-4.0017078 C 6.97309,-1.6296469 6.9831476,1.6157441 8.7185878,4.0337352 z \"\n-         transform=\"matrix(1.1,0,0,1.1,-5.5,0)\" />\n-    </marker>\n-    <marker\n-       inkscape:stockid=\"Arrow2Lend\"\n-       orient=\"auto\"\n-       refY=\"0\"\n-       refX=\"0\"\n-       id=\"Arrow2Lend\"\n-       style=\"overflow:visible\">\n-      <path\n-         id=\"path3328\"\n-         style=\"font-size:12px;fill-rule:evenodd;stroke-width:0.625;stroke-linejoin:round\"\n-         d=\"M 8.7185878,4.0337352 L -2.2072895,0.016013256 L 8.7185884,-4.0017078 C 6.97309,-1.6296469 6.9831476,1.6157441 8.7185878,4.0337352 z \"\n-         transform=\"matrix(-1.1,0,0,-1.1,5.5,0)\" />\n-    </marker>\n-  </defs>\n-  <sodipodi:namedview\n-     id=\"base\"\n-     pagecolor=\"#ffffff\"\n-     bordercolor=\"#666666\"\n-     borderopacity=\"1.0\"\n-     inkscape:pageopacity=\"0.0\"\n-     inkscape:pageshadow=\"2\"\n-     inkscape:zoom=\"2\"\n-     inkscape:cx=\"613.85775\"\n-     inkscape:cy=\"310.05621\"\n-     inkscape:document-units=\"in\"\n-     inkscape:current-layer=\"layer1\"\n-     showguides=\"true\"\n-     inkscape:guide-bbox=\"true\"\n-     inkscape:window-width=\"1278\"\n-     inkscape:window-height=\"973\"\n-     inkscape:window-x=\"0\"\n-     inkscape:window-y=\"0\"\n-     gridtolerance=\"0.125in\"\n-     guidetolerance=\"0.125in\">\n-    <sodipodi:guide\n-       orientation=\"horizontal\"\n-       position=\"629\"\n-       id=\"guide1307\" />\n-    <sodipodi:guide\n-       orientation=\"horizontal\"\n-       position=\"449\"\n-       id=\"guide1309\" />\n-    <sodipodi:guide\n-       orientation=\"horizontal\"\n-       position=\"269\"\n-       id=\"guide1311\" />\n-    <sodipodi:guide\n-       orientation=\"vertical\"\n-       position=\"496\"\n-       id=\"guide1313\" />\n-    <sodipodi:guide\n-       orientation=\"vertical\"\n-       position=\"361\"\n-       id=\"guide1315\" />\n-    <sodipodi:guide\n-       orientation=\"vertical\"\n-       position=\"226\"\n-       id=\"guide1317\" />\n-    <sodipodi:guide\n-       orientation=\"vertical\"\n-       position=\"631\"\n-       id=\"guide1319\" />\n-    <sodipodi:guide\n-       orientation=\"vertical\"\n-       position=\"766\"\n-       id=\"guide1321\" />\n-    <sodipodi:guide\n-       orientation=\"vertical\"\n-       position=\"91\"\n-       id=\"guide1345\" />\n-    <sodipodi:guide\n-       orientation=\"vertical\"\n-       position=\"901\"\n-       id=\"guide1347\" />\n-    <sodipodi:guide\n-       orientation=\"horizontal\"\n-       position=\"539\"\n-       id=\"guide3390\" />\n-    <sodipodi:guide\n-       orientation=\"horizontal\"\n-       position=\"359\"\n-       id=\"guide3392\" />\n-    <sodipodi:guide\n-       orientation=\"vertical\"\n-       position=\"280.5\"\n-       id=\"guide3324\" />\n-    <sodipodi:guide\n-       orientation=\"vertical\"\n-       position=\"172\"\n-       id=\"guide3326\" />\n-    <sodipodi:guide\n-       orientation=\"vertical\"\n-       position=\"427\"\n-       id=\"guide3328\" />\n-    <sodipodi:guide\n-       orientation=\"vertical\"\n-       position=\"711.5\"\n-       id=\"guide3340\" />\n-    <sodipodi:guide\n-       orientation=\"horizontal\"\n-       position=\"179\"\n-       id=\"guide1395\" />\n-  </sodipodi:namedview>\n-  <metadata\n-     id=\"metadata7\">\n-    <rdf:RDF>\n-      <cc:Work\n-         rdf:about=\"\">\n-        <dc:format>image/svg+xml</dc:format>\n-        <dc:type\n-           rdf:resource=\"http://purl.org/dc/dcmitype/StillImage\" />\n-        <dc:creator>\n-          <cc:Agent>\n-            <dc:title>Benjamin Kosnik</dc:title>\n-          </cc:Agent>\n-        </dc:creator>\n-      </cc:Work>\n-    </rdf:RDF>\n-  </metadata>\n-  <g\n-     inkscape:label=\"Layer 1\"\n-     inkscape:groupmode=\"layer\"\n-     id=\"layer1\">\n-    <rect\n-       y=\"562.32806\"\n-       x=\"237.8916\"\n-       height=\"23.200001\"\n-       width=\"80.769417\"\n-       id=\"rect1495\"\n-       style=\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:0.94391561;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\" />\n-    <rect\n-       style=\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:0.94391561;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\"\n-       id=\"rect1497\"\n-       width=\"80.769417\"\n-       height=\"23.200001\"\n-       x=\"132.8916\"\n-       y=\"562.32806\" />\n-    <rect\n-       style=\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:0.94391561;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\"\n-       id=\"rect1493\"\n-       width=\"80.769417\"\n-       height=\"23.200001\"\n-       x=\"21.891602\"\n-       y=\"562.32806\" />\n-    <rect\n-       style=\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:1.25;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\"\n-       id=\"rect1425\"\n-       width=\"141.64481\"\n-       height=\"23.200001\"\n-       x=\"209.57762\"\n-       y=\"382.56177\" />\n-    <rect\n-       style=\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:1.25;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\"\n-       id=\"rect3378\"\n-       width=\"141.64481\"\n-       height=\"23.200001\"\n-       x=\"640.77765\"\n-       y=\"382.56177\" />\n-    <text\n-       xml:space=\"preserve\"\n-       style=\"font-size:9.60000038;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:center;line-height:100%;writing-mode:lr;text-anchor:middle;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1.25;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;font-family:Bitstream Vera Sans;stroke-miterlimit:4;stroke-dasharray:none\"\n-       x=\"710.40002\"\n-       y=\"397.09772\"\n-       id=\"use1337\"\n-       sodipodi:linespacing=\"100%\"><tspan\n-         sodipodi:role=\"line\"\n-         id=\"tspan1391\"\n-         x=\"710.40003\"\n-         y=\"397.09772\">basic_hash_table_tag</tspan></text>\n-    <text\n-       xml:space=\"preserve\"\n-       style=\"font-size:9.60000038;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:center;line-height:100%;writing-mode:lr;text-anchor:middle;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;font-family:Bitstream Vera Sans\"\n-       x=\"280\"\n-       y=\"397.09772\"\n-       id=\"text1339\"\n-       sodipodi:linespacing=\"100%\"><tspan\n-         sodipodi:role=\"line\"\n-         id=\"tspan1385\"\n-         x=\"280\"\n-         y=\"397.09772\">basic_tree_tag</tspan></text>\n-    <rect\n-       style=\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:1.25;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\"\n-       id=\"rect3418\"\n-       width=\"141.64481\"\n-       height=\"23.200001\"\n-       x=\"101.57762\"\n-       y=\"472.5618\" />\n-    <rect\n-       y=\"472.5618\"\n-       x=\"317.57761\"\n-       height=\"23.200001\"\n-       width=\"141.64481\"\n-       id=\"rect3420\"\n-       style=\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:1.25;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\" />\n-    <text\n-       xml:space=\"preserve\"\n-       style=\"font-size:9.60000038;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:center;line-height:100%;writing-mode:lr;text-anchor:middle;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;font-family:Bitstream Vera Sans\"\n-       x=\"171.20001\"\n-       y=\"486.29773\"\n-       id=\"text3394\"\n-       sodipodi:linespacing=\"100%\"><tspan\n-         sodipodi:role=\"line\"\n-         id=\"tspan1387\"\n-         x=\"171.20001\"\n-         y=\"486.29773\">tree_tag</tspan></text>\n-    <text\n-       sodipodi:linespacing=\"100%\"\n-       id=\"text3400\"\n-       y=\"486.29773\"\n-       x=\"388.39999\"\n-       style=\"font-size:9.60000038px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:center;line-height:100%;writing-mode:lr-tb;text-anchor:middle;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;font-family:Bitstream Vera Sans\"\n-       xml:space=\"preserve\"><tspan\n-         sodipodi:role=\"line\"\n-         id=\"tspan1389\"\n-         x=\"388.39999\"\n-         y=\"486.29773\">trie_tag</tspan></text>\n-    <rect\n-       style=\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:1.25;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\"\n-       id=\"rect3380\"\n-       width=\"141.64481\"\n-       height=\"23.200001\"\n-       x=\"425.57764\"\n-       y=\"292.56177\" />\n-    <text\n-       xml:space=\"preserve\"\n-       style=\"font-size:9.60000038;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:center;line-height:100%;writing-mode:lr;text-anchor:middle;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1.5625;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;font-family:Bitstream Vera Sans\"\n-       x=\"495.20001\"\n-       y=\"307.09772\"\n-       id=\"text1323\"\n-       sodipodi:linespacing=\"100%\"><tspan\n-         sodipodi:role=\"line\"\n-         id=\"tspan1384\"\n-         x=\"495.20001\"\n-         y=\"307.09772\">associative_container_tag</tspan></text>\n-    <path\n-       style=\"fill:none;fill-opacity:0.75;fill-rule:evenodd;stroke:#000000;stroke-width:1.25;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\"\n-       d=\"M 170.97058,472.5 L 170.97058,451 L 387.51871,450 L 387.51871,472.5\"\n-       id=\"path2244\" />\n-    <path\n-       style=\"fill:none;fill-opacity:0.75;fill-rule:evenodd;stroke:#000000;stroke-width:1.25;stroke-linecap:butt;stroke-linejoin:miter;marker-end:url(#Arrow2Mend);stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\"\n-       d=\"M 280.5,450.53297 L 280.5,410.62445\"\n-       id=\"path3332\" />\n-    <rect\n-       style=\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:1.25;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\"\n-       id=\"rect3422\"\n-       width=\"141.64481\"\n-       height=\"23.200001\"\n-       x=\"533.57764\"\n-       y=\"472.5618\" />\n-    <rect\n-       y=\"472.5618\"\n-       x=\"748.77765\"\n-       height=\"23.200001\"\n-       width=\"141.64481\"\n-       id=\"rect3424\"\n-       style=\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:1.25;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\" />\n-    <text\n-       sodipodi:linespacing=\"100%\"\n-       id=\"text3406\"\n-       y=\"486.29773\"\n-       x=\"601.20001\"\n-       style=\"font-size:9.60000038px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:center;line-height:100%;writing-mode:lr-tb;text-anchor:middle;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1.25;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;font-family:Bitstream Vera Sans\"\n-       xml:space=\"preserve\"><tspan\n-         sodipodi:role=\"line\"\n-         id=\"tspan1393\"\n-         x=\"601.20001\"\n-         y=\"486.29773\">cc_hash_table_tag</tspan></text>\n-    <text\n-       xml:space=\"preserve\"\n-       style=\"font-size:9.60000038px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:center;line-height:100%;writing-mode:lr-tb;text-anchor:middle;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1.25;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;font-family:Bitstream Vera Sans\"\n-       x=\"818\"\n-       y=\"486.29773\"\n-       id=\"text3412\"\n-       sodipodi:linespacing=\"100%\"><tspan\n-         sodipodi:role=\"line\"\n-         id=\"tspan1395\"\n-         x=\"818\"\n-         y=\"486.29773\">gp_hash_table_tag</tspan></text>\n-    <path\n-       id=\"path3353\"\n-       d=\"M 601.47058,472.5 L 601.47058,451 L 818.01871,450 L 818.01871,472.5\"\n-       style=\"fill:none;fill-opacity:0.75;fill-rule:evenodd;stroke:#000000;stroke-width:1.25;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\" />\n-    <path\n-       id=\"path3355\"\n-       d=\"M 711,450.53297 L 711,410.62445\"\n-       style=\"fill:none;fill-opacity:0.75;fill-rule:evenodd;stroke:#000000;stroke-width:1.25;stroke-linecap:butt;stroke-linejoin:miter;marker-end:url(#Arrow2Mend);stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\" />\n-    <path\n-       id=\"path3344\"\n-       d=\"M 281.18218,383.28102 L 281.18218,361.78102 L 711.79281,360.78102 L 711.79281,383.28102\"\n-       style=\"fill:none;fill-opacity:0.75;fill-rule:evenodd;stroke:#000000;stroke-width:1.25;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\" />\n-    <rect\n-       y=\"383.1962\"\n-       x=\"425.625\"\n-       height=\"23.200001\"\n-       width=\"141.64481\"\n-       id=\"rect3376\"\n-       style=\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:1.25;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\" />\n-    <text\n-       sodipodi:linespacing=\"100%\"\n-       id=\"use1329\"\n-       y=\"397.73215\"\n-       x=\"497.24741\"\n-       style=\"font-size:9.60000038px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:center;line-height:100%;writing-mode:lr-tb;text-anchor:middle;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;font-family:Bitstream Vera Sans\"\n-       xml:space=\"preserve\"><tspan\n-         sodipodi:role=\"line\"\n-         id=\"tspan1382\"\n-         x=\"497.24741\"\n-         y=\"397.73215\">list_update_tag</tspan></text>\n-    <path\n-       id=\"path3347\"\n-       d=\"M 497.79886,384.13056 L 497.79886,323.40547\"\n-       style=\"fill:none;fill-opacity:0.75;fill-rule:evenodd;stroke:#000000;stroke-width:1.25;stroke-linecap:butt;stroke-linejoin:miter;marker-end:url(#Arrow2Mend);stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\" />\n-    <text\n-       xml:space=\"preserve\"\n-       style=\"font-size:9.60000038px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:center;line-height:100%;writing-mode:lr-tb;text-anchor:middle;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1.25;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;font-family:Bitstream Vera Sans\"\n-       x=\"61.152512\"\n-       y=\"577.07874\"\n-       id=\"text1423\"\n-       sodipodi:linespacing=\"100%\"><tspan\n-         sodipodi:role=\"line\"\n-         id=\"tspan1418\"\n-         x=\"61.152512\"\n-         y=\"577.07874\">rb_tree_tag</tspan></text>\n-    <text\n-       sodipodi:linespacing=\"100%\"\n-       id=\"text1427\"\n-       y=\"577.07874\"\n-       x=\"277.95251\"\n-       style=\"font-size:9.60000038px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:center;line-height:100%;writing-mode:lr-tb;text-anchor:middle;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1.25;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;font-family:Bitstream Vera Sans\"\n-       xml:space=\"preserve\"><tspan\n-         sodipodi:role=\"line\"\n-         id=\"tspan1414\"\n-         x=\"277.95252\"\n-         y=\"577.07874\">splay_tree_tag</tspan></text>\n-    <path\n-       style=\"fill:none;fill-opacity:0.75;fill-rule:evenodd;stroke:#000000;stroke-width:1.25;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none\"\n-       d=\"M 61.42308,563.28102 L 61.42308,541.78102 L 277.97121,540.78102 L 277.97121,563.28102\"\n-       id=\"path1431\" />\n-    <path\n-       style=\"fill:none;fill-opacity:0.75;fill-rule:evenodd;stroke:#000000;stroke-width:1.25;stroke-linecap:butt;stroke-linejoin:miter;marker-end:url(#Arrow2Mend);stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\"\n-       d=\"M 170.9525,561.5357 L 170.9525,503.81235\"\n-       id=\"path1433\" />\n-    <rect\n-       y=\"562.17499\"\n-       x=\"347.8916\"\n-       height=\"23.200001\"\n-       width=\"80.769417\"\n-       id=\"rect1469\"\n-       style=\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:0.94391561;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\" />\n-    <text\n-       sodipodi:linespacing=\"100%\"\n-       id=\"text1471\"\n-       y=\"576.71094\"\n-       x=\"388.80002\"\n-       style=\"font-size:9.60000038px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:center;line-height:100%;writing-mode:lr-tb;text-anchor:middle;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;font-family:Bitstream Vera Sans\"\n-       xml:space=\"preserve\"><tspan\n-         sodipodi:role=\"line\"\n-         id=\"tspan1412\"\n-         x=\"388.80002\"\n-         y=\"576.71094\">pat_trie_tag</tspan></text>\n-    <path\n-       id=\"path1475\"\n-       d=\"M 389.35146,563.10936 L 389.35146,502.38427\"\n-       style=\"fill:none;fill-opacity:0.75;fill-rule:evenodd;stroke:#000000;stroke-width:1.25;stroke-linecap:butt;stroke-linejoin:miter;marker-end:url(#Arrow2Mend);stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\" />\n-    <text\n-       xml:space=\"preserve\"\n-       style=\"font-size:9.60000038px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:center;line-height:100%;writing-mode:lr-tb;text-anchor:middle;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1.25;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;font-family:Bitstream Vera Sans\"\n-       x=\"173.95251\"\n-       y=\"577.07874\"\n-       id=\"text1487\"\n-       sodipodi:linespacing=\"100%\"><tspan\n-         sodipodi:role=\"line\"\n-         id=\"tspan1416\"\n-         x=\"173.95251\"\n-         y=\"577.07874\">ov_tree_tag</tspan></text>\n-  </g>\n-</svg>"}, {"sha": "7814712c36f9aa508c7eef72cdc8e316fea76250", "filename": "libstdc++-v3/doc/html/ext/pb_ds/assoc_container_traits.html", "status": "removed", "additions": 0, "deletions": 170, "changes": 170, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fassoc_container_traits.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fassoc_container_traits.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fassoc_container_traits.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7", "patch": "@@ -1,170 +0,0 @@\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n-    \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n-<head>\n-  <meta name=\"generator\" content=\n-  \"HTML Tidy for Linux/x86 (vers 12 April 2005), see www.w3.org\" />\n-\n-  <title>container_traits Interface</title>\n-  <meta http-equiv=\"Content-Type\" content=\n-  \"text/html; charset=us-ascii\" />\n-  </head>\n-\n-<body>\n-  <div id=\"page\">\n-    <h1><tt>container_traits</tt> Interface</h1>\n-\n-    <p>Traits of an associative-container based on its underlying\n-    data structure.</p>\n-\n-    <p>Defined in: <a href=\n-    \"http://gcc.gnu.org/viewcvs/*checkout*/trunk/libstdc%2B%2B-v3/include/ext/pb_ds/tag_and_trait.hpp\"><tt>tag_and_trait.hpp</tt></a></p>\n-\n-    <h2><a name=\"link1\" id=\"link1\">Template Parameters</a></h2>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\n-    \"Template Parameters\">\n-      <tr>\n-        <td width=\"20%\" align=\"left\"><b>Parameter</b></td>\n-\n-        <td width=\"50%\" align=\"left\"><b>Description</b></td>\n-\n-        <td width=\"30%\" align=\"left\"><b>Default Value</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"Cntnr59189\" id=\"Cntnr59189\"><b>class</b> Cntnr</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Container type.</p>\n-        </td>\n-\n-        <td>-</td>\n-      </tr>\n-    </table>\n-\n-    <h2><a name=\"link2\" id=\"link2\">Public Types and\n-    Constants</a></h2>\n-\n-    <h3><a name=\"link3\" id=\"link3\">Container Attributes</a></h3>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Types\">\n-      <tr>\n-        <td width=\"30%\" align=\"left\"><b>Type</b></td>\n-\n-        <td width=\"55%\" align=\"left\"><b>Definition</b></td>\n-\n-        <td width=\"15%\" align=\"left\"><b>Description</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"invalidation_guarantee3793555937\" id=\n-\"invalidation_guarantee3793555937\">invalidation_guarantee</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <pre>\n-Invalidation guarantee.\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Invalidation-guarantee type.</p>\n-\n-          <p>This is either <a href=\n-          \"basic_invalidation_guarantee.html\"><span class=\n-          \"c2\"><tt>basic_invalidation_guarantee</tt></span></a>,\n-          <a href=\"point_invalidation_guarantee.html\"><span class=\n-          \"c2\"><tt>point_invalidation_guarantee</tt></span></a>, or\n-          <a href=\"range_invalidation_guarantee.html\"><span class=\n-          \"c2\"><tt>range_invalidation_guarantee</tt></span></a></p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"order_preserving1910229172\" id=\n-\"order_preserving1910229172\">order_preserving</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <pre>\n-True only if Cntnr objects guarantee storing  keys by order.\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Order-preserving indicator.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"erase_can_throw153323856\" id=\n-\"erase_can_throw153323856\">erase_can_throw</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <pre>\n-True only if erasing a key can throw.\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Erase-throw indicator.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"reverse_iteration894617078\" id=\n-\"reverse_iteration894617078\">reverse_iteration</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <pre>\n-True only reverse iterators are supported.\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Reverse iteration indicator.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"split_join_can_throw3200477759\" id=\n-\"split_join_can_throw3200477759\">split_join_can_throw</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <pre>\n-True only if split or join operations can throw.\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Split-join throw indicator.</p>\n-        </td>\n-      </tr>\n-    </table>\n-  </div>\n-</body>\n-</html>"}, {"sha": "6c501e26bbd6eff0422aca68c749c78044e927c4", "filename": "libstdc++-v3/doc/html/ext/pb_ds/assoc_design.html", "status": "removed", "additions": 0, "deletions": 46, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fassoc_design.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fassoc_design.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fassoc_design.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7", "patch": "@@ -1,46 +0,0 @@\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\"\n-    \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n-\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n-<head>\n-  <meta name=\"generator\" content=\n-  \"HTML Tidy for Linux/x86 (vers 12 April 2005), see www.w3.org\" />\n-\n-  <title>Associative Containers</title>\n-  <meta http-equiv=\"Content-Type\" content=\n-  \"text/html; charset=us-ascii\" />\n-  </head>\n-\n-<body>\n-  <div id=\"page\">\n-    <h1>Associative-Container Design</h1>\n-\n-    <ol>\n-      <li><a href=\"ds_gen.html\">Data-Structure Genericity</a></li>\n-\n-      <li class=\"c1\">Genericity discusses generic manipulation of\n-      containers based on different underlying\n-      data structures.</li>\n-\n-      <li class=\"c1\">Genericity discusses generic manipulation of\n-      containers with different mapping semantics.</li>\n-\n-      <li><a href=\"tree_based_containers.html\">Tree-Based\n-      Containers</a> describes the design and policies of\n-      tree-based containers.</li>\n-\n-      <li><a href=\"trie_based_containers.html\">Trie-Based\n-      Containers</a> describes the design and policies of\n-      trie-based containers.</li>\n-\n-      <li><a href=\"hash_based_containers.html\">Hash-Based\n-      Containers</a> describes the design and policies of\n-      hash-based containers.</li>\n-\n-      <li><a href=\"lu_based_containers.html\">List-Based\n-      Containers</a> describes the design and policies of\n-      list-based containers with update policies.</li>\n-    </ol>\n-  </div>\n-</body>\n-</html>"}, {"sha": "b64c747454cccccecf2fe5f3434b986795b39c9f", "filename": "libstdc++-v3/doc/html/ext/pb_ds/assoc_examples.html", "status": "removed", "additions": 0, "deletions": 151, "changes": 151, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fassoc_examples.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fassoc_examples.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fassoc_examples.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7", "patch": "@@ -1,151 +0,0 @@\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\"\n-    \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n-\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n-<head>\n-  <meta name=\"generator\" content=\n-  \"HTML Tidy for Linux/x86 (vers 12 April 2005), see www.w3.org\" />\n-\n-  <title>Examples</title>\n-  <meta http-equiv=\"Content-Type\" content=\n-  \"text/html; charset=us-ascii\" />\n-  </head>\n-\n-<body>\n-  <div id=\"page\">\n-    <h1>Associative-Container Examples</h1>\n-    \n-    <h2><a name=\"basic_usage\" id=\"basic_usage\">Basic Use</a></h2>\n-\n-    <ol>\n-      <li>\n-\t<a href= \"http://gcc.gnu.org/viewcvs/*checkout*/trunk/libstdc%2B%2B-v3/testsuite/ext/pb_ds/example/basic_map.cc\"><tt>basic_map.cc</tt></a>\n-      Basic use of \"maps\".</li>\n-\n-      <li><a href= \"http://gcc.gnu.org/viewcvs/*checkout*/trunk/libstdc%2B%2B-v3/testsuite/ext/pb_ds/example/basic_set.cc\"><tt>basic_set.cc</tt></a>\n-      Basic use of \"sets\".</li>\n-\n-      <li><a href= \"http://gcc.gnu.org/viewcvs/*checkout*/trunk/libstdc%2B%2B-v3/testsuite/ext/pb_ds/example/erase_if.cc\"><tt>erase_if.cc</tt></a>\n-      Conditionally erasing values from a container object.</li>\n-    </ol>\n-\n-    <h2><a name=\"generics\" id=\"generics\">Generics</a></h2>\n-\n-    <ol>\n-      <li><a href= \"http://gcc.gnu.org/viewcvs/*checkout*/trunk/libstdc%2B%2B-v3/testsuite/ext/pb_ds/example/assoc_container_traits.cc\"><tt>assoc_container_traits.cc</tt></a>\n-      Using <a href=\n-      \"assoc_container_traits.html\"><tt>container_traits</tt></a> to query\n-      about underlying data structure behavior.</li>\n-\n-      <li><a href= \"http://gcc.gnu.org/viewcvs/*checkout*/trunk/libstdc%2B%2B-v3/testsuite/ext/pb_ds/example/hash_find_neg.cc\"><tt>hash_find_neg.cc</tt></a>\n-      A non-compiling example showing wrong use of finding keys in\n-      hash-based containers.</li>\n-    </ol>\n-\n-    <h2><a name=\"hash_based\" id=\"hash_based\">Hash-Based\n-    Containers</a></h2>\n-\n-  \n-    <h3><a name=\"resize_related\" id=\"resize_related\">Resize\n-    Related</a></h3>\n-\n-\n-    <ol>\n-      <li><a href= \"http://gcc.gnu.org/viewcvs/*checkout*/trunk/libstdc%2B%2B-v3/testsuite/ext/pb_ds/example/hash_initial_size.cc\"><tt>hash_initial_size.cc</tt></a>\n-      Setting the initial size of a hash-based container\n-      object.</li>\n-\n-      <li><a href= \"http://gcc.gnu.org/viewcvs/*checkout*/trunk/libstdc%2B%2B-v3/testsuite/ext/pb_ds/example/hash_resize_neg.cc\"><tt>hash_resize_neg.cc</tt></a>\n-      A non-compiling example showing how not to resize a\n-      hash-based container object.</li>\n-\n-      <li><a href= \"http://gcc.gnu.org/viewcvs/*checkout*/trunk/libstdc%2B%2B-v3/testsuite/ext/pb_ds/example/hash_resize.cc\"><tt>hash_resize.cc</tt></a>\n-      Resizing the size of a hash-based container object.</li>\n-\n-      <li><a href= \"http://gcc.gnu.org/viewcvs/*checkout*/trunk/libstdc%2B%2B-v3/testsuite/ext/pb_ds/example/hash_illegal_resize.cc\"><tt>hash_illegal_resize.cc</tt></a>\n-      Showing an illegal resize of a hash-based container\n-      object.</li>\n-\n-      <li><a href= \"http://gcc.gnu.org/viewcvs/*checkout*/trunk/libstdc%2B%2B-v3/testsuite/ext/pb_ds/example/hash_load_set_change.cc\"><tt>hash_load_set_change.cc</tt></a>\n-      Changing the load factors of a hash-based container\n-      object.</li>\n-    </ol>\n-\n-    <h3><a name=\"hash_related\" id=\"hash_related\">Hash-Function\n-    Related</a></h3>\n-\n-\n-    <ol>\n-      <li><a href= \"http://gcc.gnu.org/viewcvs/*checkout*/trunk/libstdc%2B%2B-v3/testsuite/ext/pb_ds/example/hash_mod.cc\"><tt>hash_mod.cc</tt></a>\n-      Using a modulo range-hashing function for the case of an\n-      unknown skewed key distribution.</li>\n-\n-      <li><a href= \"http://gcc.gnu.org/viewcvs/*checkout*/trunk/libstdc%2B%2B-v3/testsuite/ext/pb_ds/example/hash_shift_mask.cc\"><tt>shift_mask.cc</tt></a>\n-      Writing a range-hashing functor for the case of a known\n-      skewed key distribution.</li>\n-\n-      <li><a href= \"http://gcc.gnu.org/viewcvs/*checkout*/trunk/libstdc%2B%2B-v3/testsuite/ext/pb_ds/example/store_hash.cc\"><tt>store_hash.cc</tt></a>\n-      Storing the hash value along with each key.</li>\n-\n-      <li><a href= \"http://gcc.gnu.org/viewcvs/*checkout*/trunk/libstdc%2B%2B-v3/testsuite/ext/pb_ds/example/ranged_hash.cc\"><tt>ranged_hash.cc</tt></a>\n-      Writing a ranged-hash functor.</li>\n-    </ol>\n-\n-    <h2><a name=\"tree_like_based\" id= \"tree_like_based\">Tree-Like Containers (Trees and\n-    Tries)</a></h2>\n-\n- \n-    <h3><a name=\"node_invariants\" id=\n-    \"node_invariants\">Node-Invariants</a></h3>\n-\n- \n-    <ol>\n-      <li><a href= \"http://gcc.gnu.org/viewcvs/*checkout*/trunk/libstdc%2B%2B-v3/testsuite/ext/pb_ds/example/tree_order_statistics.cc\"><tt>tree_order_statistics.cc</tt></a>\n-      Using trees for order statistics.</li>\n-\n-      <li><a href= \"http://gcc.gnu.org/viewcvs/*checkout*/trunk/libstdc%2B%2B-v3/testsuite/ext/pb_ds/example/tree_intervals.cc\"><tt>tree_intervals.cc</tt></a>\n-      Augmenting trees to support operations on line\n-      intervals.</li>\n-    </ol>\n-\n-    <h3><a name=\"split_join\" id=\"split_join\">Split and\n-    Join</a></h3>\n-\n-\n-    <ol>\n-      <li><a href= \"http://gcc.gnu.org/viewcvs/*checkout*/trunk/libstdc%2B%2B-v3/testsuite/ext/pb_ds/example/tree_join.cc\"><tt>tree_join.cc</tt></a>\n-      Joining two tree-based container objects.</li>\n-\n-      <li><a href= \"http://gcc.gnu.org/viewcvs/*checkout*/trunk/libstdc%2B%2B-v3/testsuite/ext/pb_ds/example/trie_split.cc\"><tt>trie_split.cc</tt></a>\n-      Splitting a PATRICIA trie container object.</li>\n-\n-      <li><a href= \"http://gcc.gnu.org/viewcvs/*checkout*/trunk/libstdc%2B%2B-v3/testsuite/ext/pb_ds/example/tree_order_statistics_join.cc\"><tt>tree_order_statistics_join.cc</tt></a>\n-      Order statistics while joining two tree-based container\n-      objects.</li>\n-    </ol>\n-\n-    <h2><a name=\"trie_based\" id=\"trie_based\">Trie-Based\n-    Containers</a></h2>\n-\n-\n-    <ol>\n-      <li><a href= \"http://gcc.gnu.org/viewcvs/*checkout*/trunk/libstdc%2B%2B-v3/testsuite/ext/pb_ds/example/trie_dna.cc\"><tt>trie_dna.cc</tt></a>\n-      Using a PATRICIA trie for DNA strings.</li>\n-\n-      <li><a href= \"http://gcc.gnu.org/viewcvs/*checkout*/trunk/libstdc%2B%2B-v3/testsuite/ext/pb_ds/example/trie_prefix_search.cc\"><tt>trie_prefix_search.cc</tt></a>\n-      Using a PATRICIA trie for finding all entries whose key\n-      matches a given prefix.</li>\n-    </ol>\n-\n-    <h2><a name=\"mmaps\" id=\"mmaps\">\"Multimaps\" and\n-    \"Multisets\".</a></h2>\n-    <ol>\n-      <li><a href= \"http://gcc.gnu.org/viewcvs/*checkout*/trunk/libstdc%2B%2B-v3/testsuite/ext/pb_ds/example/basic_multimap.cc\"><tt>basic_multimap.cc</tt></a>\n-      Basic use of \"multimaps\".</li>\n-\n-      <li><a href= \"http://gcc.gnu.org/viewcvs/*checkout*/trunk/libstdc%2B%2B-v3/testsuite/ext/pb_ds/example/basic_multiset.cc\"><tt>basic_multiset.cc</tt></a>\n-      Basic use of \"multisets\".</li>\n-    </ol>\n-  </div>\n-</body>\n-</html>"}, {"sha": "642f8480953a9292a344b2f8d4c285b5dba385ba", "filename": "libstdc++-v3/doc/html/ext/pb_ds/assoc_performance_tests.html", "status": "removed", "additions": 0, "deletions": 345, "changes": 345, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fassoc_performance_tests.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fassoc_performance_tests.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fassoc_performance_tests.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7", "patch": "@@ -1,345 +0,0 @@\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n-    \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n-<head>\n-<meta name=\"generator\" content=\"HTML Tidy for Linux/x86 (vers 12 April 2005), see www.w3.org\" />\n-<title>Associative-Container Performance Tests</title>\n-<meta http-equiv=\"Content-Type\" content=\"text/html; charset=us-ascii\" />\n-</head>\n-<body>\n-<div id=\"page\">\n-<h1><a name=\"assoc\" id=\"assoc\">Associative-Container\n-    Performance Tests</a></h1>\n-<h2><a name=\"settings\" id=\"settings\">Settings</a></h2>\n-<p>This section describes performance tests and their results.\n-    In the following, <a href=\"#gcc\"><u>g++</u></a>, <a href=\"#msvc\"><u>msvc++</u></a>, and <a href=\"#local\"><u>local</u></a> (the build used for generating this\n-    documentation) stand for three different builds:</p>\n-<div id=\"gcc_settings_div\">\n-<div class=\"c1\">\n-<h3><a name=\"gcc\" id=\"gcc\"><u>g++</u></a></h3>\n-<ul>\n-<li>CPU speed - cpu MHz : 2660.644</li>\n-<li>Memory - MemTotal: 484412 kB</li>\n-<li>Platform -\n-          Linux-2.6.12-9-386-i686-with-debian-testing-unstable</li>\n-<li>Compiler - g++ (GCC) 4.0.2 20050808 (prerelease)\n-          (Ubuntu 4.0.1-4ubuntu9) Copyright (C) 2005 Free Software\n-          Foundation, Inc. This is free software; see the source\n-          for copying conditions. There is NO warranty; not even\n-          for MERCHANTABILITY or FITNESS FOR A PARTICULAR\n-          PURPOSE.</li>\n-</ul>\n-</div>\n-<div class=\"c2\"></div>\n-</div>\n-<div id=\"msvc_settings_div\">\n-<div class=\"c1\">\n-<h3><a name=\"msvc\" id=\"msvc\"><u>msvc++</u></a></h3>\n-<ul>\n-<li>CPU speed - cpu MHz : 2660.554</li>\n-<li>Memory - MemTotal: 484412 kB</li>\n-<li>Platform - Windows XP Pro</li>\n-<li>Compiler - Microsoft (R) 32-bit C/C++ Optimizing\n-          Compiler Version 13.10.3077 for 80x86 Copyright (C)\n-          Microsoft Corporation 1984-2002. All rights\n-          reserved.</li>\n-</ul>\n-</div>\n-<div class=\"c2\"></div>\n-</div>\n-<div id=\"local_settings_div\"><div style = \"border-style: dotted; border-width: 1px; border-color: lightgray\"><h3><a name = \"local\"><u>local</u></a></h3><ul>\n-<li>CPU speed - cpu MHz\t\t: 2250.000</li>\n-<li>Memory - MemTotal:      2076248 kB</li>\n-<li>Platform - Linux-2.6.16-1.2133_FC5-i686-with-redhat-5-Bordeaux</li>\n-<li>Compiler - g++ (GCC) 4.1.1 20060525 (Red Hat 4.1.1-1)\n-Copyright (C) 2006 Free Software Foundation, Inc.\n-This is free software; see the source for copying conditions.  There is NO\n-warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n-</li>\n-</ul>\n-</div><div style = \"width: 100%; height: 20px\"></div></div>\n-<h2><a name=\"assoc_tests\" id=\"assoc_tests\">Tests</a></h2>\n-<h3><a name=\"hash_based\" id=\"hash_based\">Hash-Based\n-    Containers</a></h3>\n-<ol>\n-<li><a href=\"hash_text_find_find_timing_test.html\">Hash-Based\n-      Text <tt>find</tt> Find Timing Test</a></li>\n-<li><a href=\"hash_random_int_find_find_timing_test.html\">Hash-Based\n-      Random-Integer <tt>find</tt> Find Timing Test</a></li>\n-<li><a href=\"hash_random_int_subscript_find_timing_test.html\">Hash-Based\n-      Random-Integer Subscript Find Timing Test</a></li>\n-<li><a href=\"hash_random_int_subscript_insert_timing_test.html\">Hash-Based\n-      Random-Integer Subscript Insert Timing Test</a></li>\n-<li><a href=\"hash_zlob_random_int_find_find_timing_test.html\">Hash-Based\n-      Skewed-Distribution Random-Integer <tt>find</tt> Find Timing\n-      Test</a></li>\n-<li><a href=\"hash_random_int_erase_mem_usage_test.html\">Hash-Based Erase\n-      Memory Use Test</a></li>\n-</ol>\n-<h3><a name=\"tree_like_based\" id=\"tree_like_based\">Tree-Like-Based Containers</a></h3>\n-<ol>\n-<li><a href=\"tree_text_insert_timing_test.html\">Tree-Based\n-      and Trie-Based Text Insert Timing Test</a></li>\n-<li><a href=\"tree_text_find_find_timing_test.html\">Tree-Based\n-      and Trie-Based Text <tt>find</tt> Find Timing Test</a></li>\n-<li><a href=\"tree_text_lor_find_find_timing_test.html\">Tree-Based\n-      Locality-of-Reference Text <tt>find</tt> Find Timing\n-      Test</a></li>\n-<li><a href=\"tree_random_int_find_find_timing_test.html\">Tree-Based\n-      Random-Integer <tt>find</tt> Find Timing Test</a></li>\n-<li><a href=\"tree_split_join_timing_test.html\">Tree Split and\n-      Join Timing Test</a></li>\n-<li><a href=\"tree_order_statistics_timing_test.html\">Tree\n-      Order-Statistics Timing Test</a></li>\n-</ol>\n-<h3><a name=\"multimaps\" id=\"multimaps\">Multimaps</a></h3>\n-<ol>\n-<li><a href=\"multimap_text_find_timing_test_small.html\">\"Multimap\"\n-      Text Find Timing Test with <u>Small</u> Average Secondary-Key\n-      to Primary-Key Ratio</a></li>\n-<li><a href=\"multimap_text_find_timing_test_large.html\">\"Multimap\"\n-      Text Find Timing Test with <u>Large</u> Average Secondary-Key\n-      to Primary-Key Ratio</a></li>\n-<li><a href=\"multimap_text_insert_timing_test_small.html\">\"Multimap\"\n-      Text Insert Timing Test with <u>Small</u> Average\n-      Secondary-Key to Primary-Key Ratio</a></li>\n-<li><a href=\"multimap_text_insert_timing_test_large.html\">\"Multimap\"\n-      Text Insert Timing Test with <u>Large</u> Average\n-      Secondary-Key to Primary-Key Ratio</a></li>\n-<li><a href=\"multimap_text_insert_mem_usage_test_small.html\">\"Multimap\"\n-      Text Insert Memory-Use Test with <u>Small</u> Average\n-      Secondary-Key to Primary-Key Ratio</a></li>\n-<li><a href=\"multimap_text_insert_mem_usage_test_large.html\">\"Multimap\"\n-      Text Insert Memory-Use Test with <u>Large</u> Average\n-      Secondary-Key to Primary-Key Ratio</a></li>\n-</ol>\n-<h2><a name=\"assoc_observations\" id=\"assoc_observations\">Observations</a></h2>\n-<h3><a name=\"dss_family_choice\" id=\"dss_family_choice\">Underlying Data-Structure Families</a></h3>\n-<p>In general, hash-based containers (see <a href=\"hash_based_containers.html\">Design::Associative\n-    Containers::Hash-Based Containers</a>) have better timing\n-    performance than containers based on different underlying-data\n-    structures. The main reason to choose a tree-based (see\n-    <a href=\"tree_based_containers.html\">Design::Associative\n-    Containers::Tree-Based Containers</a>) or trie-based container\n-    (see <a href=\"trie_based_containers.html\">Design::Associative\n-    Containers::Trie-Based Containers</a>) is if a byproduct of the\n-    tree-like structure is required: either order-preservation, or\n-    the ability to utilize node invariants (see <a href=\"tree_based_containers.html#invariants\">Design::Associative\n-    Containers::Tree-Based Containers::Node Invariants</a> and\n-    <a href=\"trie_based_containers.html#invariants\">Design::Associative\n-    Containers::Trie-Based Containers::Node Invariants</a>). If\n-    memory-use is the major factor, an ordered-vector tree (see\n-    <a href=\"tree_based_containers.html\">Design::Associative\n-    Containers::Tree-Based Containers</a>) gives optimal results\n-    (albeit with high modificiation costs), and a list-based\n-    container (see <a href=\"lu_based_containers.html\">Design::Associative\n-    Containers::List-Based Containers</a>) gives reasonable\n-    results.</p>\n-<h3><a name=\"hash_based_types\" id=\"hash_based_types\">Hash-Based\n-    Container Types</a></h3>\n-<p>Hash-based containers are typically either collision\n-    chaining or probing (see <a href=\"hash_based_containers.html\">Design::Associative\n-    Containers::Hash-Based Containers</a>). Collision-chaining\n-    containers are more flexible internally, and so offer better\n-    timing performance. Probing containers, if used for simple\n-    value-types, manage memory more efficiently (they perform far\n-    fewer allocation-related calls). In general, therefore, a\n-    collision-chaining table should be used. A probing container,\n-    conversely, might be used efficiently for operations such as\n-    eliminating duplicates in a sequence, or counting the number of\n-    occurrences within a sequence. Probing containers might be more\n-    useful also in multithreaded applications where each thread\n-    manipulates a hash-based container: in the STL, allocators have\n-    class-wise semantics (see [<a href=\"references.html#meyers96more\">meyers96more</a>] - Item 10); a\n-    probing container might incur less contention in this case.</p>\n-<h3><a name=\"hash_based_policies\" id=\"hash_based_policies\">Hash-Based Containers' Policies</a></h3>\n-<p>In hash-based containers, the range-hashing scheme (see\n-    <a href=\"hash_based_containers.html#hash_policies\">Design::Associative\n-    Containers::Hash-Based Containers::Hash Policies</a>) seems to\n-    affect performance more than other considerations. In most\n-    settings, a mask-based scheme works well (or can be made to\n-    work well). If the key-distribution can be estimated a-priori,\n-    a simple hash function can produce nearly uniform hash-value\n-    distribution. In many other cases (<i>e.g.</i>, text hashing,\n-    floating-point hashing), the hash function is powerful enough\n-    to generate hash values with good uniformity properties\n-    [<a href=\"references.html#knuth98sorting\">knuth98sorting</a>];\n-    a modulo-based scheme, taking into account all bits of the hash\n-    value, appears to overlap the hash function in its effort.</p>\n-<p>The range-hashing scheme determines many of the other\n-    policies (see <a href=\"hash_based_containers.html#policy_interaction\">Design::Hash-Based\n-    Containers::Policy Interaction</a>). A mask-based scheme works\n-    well with an exponential-size policy (see <a href=\"hash_based_containers.html#resize_policies\">Design::Associative\n-    Containers::Hash-Based Containers::Resize Policies</a>) ; for\n-    probing-based containers, it goes well with a linear-probe\n-    function (see <a href=\"hash_based_containers.html#hash_policies\">Design::Associative\n-    Containers::Hash-Based Containers::Hash Policies</a>).</p>\n-<p>An orthogonal consideration is the trigger policy (see\n-    <a href=\"hash_based_containers.html#resize_policies\">Design::Associative\n-    Containers::Hash-Based Containers::Resize Policies</a>). This\n-    presents difficult tradeoffs. <i>E.g.</i>, different load\n-    factors in a load-check trigger policy yield a\n-    space/amortized-cost tradeoff.</p>\n-<h3><a name=\"tree_like_based_types\" id=\"tree_like_based_types\">Tree-Like-Based Container\n-    Types</a></h3>\n-<p>In general, there are several families of tree-based\n-    underlying data structures: balanced node-based trees\n-    (<i>e.g.</i>, red-black or AVL trees), high-probability\n-    balanced node-based trees (<i>e.g.</i>, random treaps or\n-    skip-lists), competitive node-based trees (<i>e.g.</i>, splay\n-    trees), vector-based \"trees\", and tries. (Additionally, there\n-    are disk-residing or network-residing trees, such as B-Trees\n-    and their numerous variants. An interface for this would have\n-    to deal with the execution model and ACID guarantees; this is\n-    out of the scope of this library.) Following are some\n-    observations on their application to different settings.</p>\n-<p>Of the balanced node-based trees, this library includes a\n-    red-black tree (see <a href=\"tree_based_containers.html\">Design::Associative\n-    Containers::Tree-Based Containers</a>), as does STL (in\n-    practice). This type of tree is the \"workhorse\" of tree-based\n-    containers: it offers both reasonable modification and\n-    reasonable lookup time. Unfortunately, this data structure\n-    stores a huge amount of metadata. Each node must contain,\n-    besides a value, three pointers and a boolean. This type might\n-    be avoided if space is at a premium [<a href=\"references.html#austern00noset\">austern00noset</a>].</p>\n-<p>High-probability balanced node-based trees suffer the\n-    drawbacks of deterministic balanced trees. Although they are\n-    fascinating data structures, preliminary tests with them showed\n-    their performance was worse than red-black trees. The library\n-    does not contain any such trees, therefore.</p>\n-<p>Competitive node-based trees have two drawbacks. They are\n-    usually somewhat unbalanced, and they perform a large number of\n-    comparisons. Balanced trees perform one comparison per each\n-    node they encounter on a search path; a splay tree performs two\n-    comparisons. If the keys are complex objects, <i>e.g.</i>,\n-    <tt>std::string</tt>, this can increase the running time.\n-    Conversely, such trees do well when there is much locality of\n-    reference. It is difficult to determine in which case to prefer\n-    such trees over balanced trees. This library includes a splay\n-    tree (see <a href=\"tree_based_containers.html\">Design::Associative\n-    Containers::Tree-Based Containers</a>).</p>\n-<p>Ordered-vector trees (see <a href=\"tree_based_containers.html\">Design::Associative\n-    Containers::Tree-Based Containers</a>) use very little space\n-    [<a href=\"references.html#austern00noset\">austern00noset</a>].\n-    They do not have any other advantages (at least in this\n-    implementation).</p>\n-<p>Large-fan-out PATRICIA tries (see <a href=\"trie_based_containers.html\">Design::Associative\n-    Containers::Trie-Based Containers</a>) have excellent lookup\n-    performance, but they do so through maintaining, for each node,\n-    a miniature \"hash-table\". Their space efficiency is low, and\n-    their modification performance is bad. These tries might be\n-    used for semi-static settings, where order preservation is\n-    important. Alternatively, red-black trees cross-referenced with\n-    hash tables can be used. [<a href=\"references.html#okasaki98mereable\">okasaki98mereable</a>]\n-    discusses small-fan-out PATRICIA tries for integers, but the\n-    cited results seem to indicate that the amortized cost of\n-    maintaining such trees is higher than that of balanced trees.\n-    Moderate-fan-out trees might be useful for sequences where each\n-    element has a limited number of choices, <i>e.g.</i>, DNA\n-    strings (see <a href=\"assoc_examples.html#trie_based\">Examples::Associative\n-    Containers::Trie-Based Containers</a>).</p>\n-<h3><a name=\"msc\" id=\"msc\">Mapping-Semantics\n-    Considerations</a></h3>\n-<p>Different mapping semantics were discussed in <a href=\"motivation.html#assoc_mapping_semantics\">Motivation::Associative\n-    Containers::Alternative to Multiple Equivalent Keys</a> and\n-    <a href=\"tutorial.html#assoc_ms\">Tutorial::Associative\n-    Containers::Associative Containers Others than Maps</a>. We\n-    will focus here on the case where a keys can be composed into\n-    primary keys and secondary keys. (In the case where some keys\n-    are completely identical, it is trivial that one should use an\n-    associative container mapping values to size types.) In this\n-    case there are (at least) five possibilities:</p>\n-<ol>\n-<li>Use an associative container that allows equivalent-key\n-      values (such as <tt>std::multimap</tt>)</li>\n-<li>Use a unique-key value associative container that maps\n-      each primary key to some complex associative container of\n-      secondary keys, say a tree-based or hash-based container (see\n-      <a href=\"tree_based_containers.html\">Design::Associative\n-      Containers::Tree-Based Containers</a> and <a href=\"hash_based_containers.html\">Design::Associative\n-      Containers::Hash-Based Containers</a>)</li>\n-<li>Use a unique-key value associative container that maps\n-      each primary key to some simple associative container of\n-      secondary keys, say a list-based container (see <a href=\"lu_based_containers.html\">Design::Associative\n-      Containers::List-Based Containers</a>)</li>\n-<li>Use a unique-key value associative container that maps\n-      each primary key to some non-associative container\n-      (<i>e.g.</i>, <tt>std::vector</tt>)</li>\n-<li>Use a unique-key value associative container that takes\n-      into account both primary and secondary keys.</li>\n-</ol>\n-<p>We do not think there is a simple answer for this (excluding\n-    option 1, which we think should be avoided in all cases).</p>\n-<p>If the expected ratio of secondary keys to primary keys is\n-    small, then 3 and 4 seem reasonable. Both types of secondary\n-    containers are relatively lightweight (in terms of memory use\n-    and construction time), and so creating an entire container\n-    object for each primary key is not too expensive. Option 4\n-    might be preferable to option 3 if changing the secondary key\n-    of some primary key is frequent - one cannot modify an\n-    associative container's key, and the only possibility,\n-    therefore, is erasing the secondary key and inserting another\n-    one instead; a non-associative container, conversely, can\n-    support in-place modification. The actual cost of erasing a\n-    secondary key and inserting another one depends also on the\n-    allocator used for secondary associative-containers (The tests\n-    above used the standard allocator, but in practice one might\n-    choose to use, <i>e.g.</i>, [<a href=\"references.html#boost_pool\">boost_pool</a>]). Option 2 is\n-    definitely an overkill in this case. Option 1 loses out either\n-    immediately (when there is one secondary key per primary key)\n-    or almost immediately after that. Option 5 has the same\n-    drawbacks as option 2, but it has the additional drawback that\n-    finding all values whose primary key is equivalent to some key,\n-    might be linear in the total number of values stored (for\n-    example, if using a hash-based container).</p>\n-<p>If the expected ratio of secondary keys to primary keys is\n-    large, then the answer is more complicated. It depends on the\n-    distribution of secondary keys to primary keys, the\n-    distribution of accesses according to primary keys, and the\n-    types of operations most frequent.</p>\n-<p>To be more precise, assume there are <i>m</i> primary keys,\n-    primary key <i>i</i> is mapped to <i>n<sub>i</sub></i>\n-    secondary keys, and each primary key is mapped, on average, to\n-    <i>n</i> secondary keys (<i>i.e.</i>,\n-    <i><b>E</b>(n<sub>i</sub>) = n</i>).</p>\n-<p>Suppose one wants to find a specific pair of primary and\n-    secondary keys. Using 1 with a tree based container\n-    (<tt>std::multimap</tt>), the expected cost is\n-    <i><b>E</b>(&Theta;(log(m) + n<sub>i</sub>)) = &Theta;(log(m) +\n-    n)</i>; using 1 with a hash-based container\n-    (<tt>std::tr1::unordered_multimap</tt>), the expected cost is\n-    <i>&Theta;(n)</i>. Using 2 with a primary hash-based container\n-    and secondary hash-based containers, the expected cost is\n-    <i>O(1)</i>; using 2 with a primary tree-based container and\n-    secondary tree-based containers, the expected cost is (using\n-    the Jensen inequality [<a href=\"references.html#motwani95random\">motwani95random</a>])\n-    <i><b>E</b>(O(log(m) + log(n<sub>i</sub>)) = O(log(m)) +\n-    <b>E</b>(O(log(n<sub>i</sub>)) = O(log(m)) + O(log(n))</i>,\n-    assuming that primary keys are accessed equiprobably. 3 and 4\n-    are similar to 1, but with lower constants. Using 5 with a\n-    hash-based container, the expected cost is <i>O(1)</i>; using 5\n-    with a tree based container, the cost is\n-    <i><b>E</b>(&Theta;(log(mn))) = &Theta;(log(m) +\n-    log(n))</i>.</p>\n-<p>Suppose one needs the values whose primary key matches some\n-    given key. Using 1 with a hash-based container, the expected\n-    cost is <i>&Theta;(n)</i>, but the values will not be ordered\n-    by secondary keys (which may or may not be required); using 1\n-    with a tree-based container, the expected cost is\n-    <i>&Theta;(log(m) + n)</i>, but with high constants; again the\n-    values will not be ordered by secondary keys. 2, 3, and 4 are\n-    similar to 1, but typically with lower constants (and,\n-    additionally, if one uses a tree-based container for secondary\n-    keys, they will be ordered). Using 5 with a hash-based\n-    container, the cost is <i>&Theta;(mn)</i>.</p>\n-<p>Suppose one wants to assign to a primary key all secondary\n-    keys assigned to a different primary key. Using 1 with a\n-    hash-based container, the expected cost is <i>&Theta;(n)</i>,\n-    but with very high constants; using 1 with a tree-based\n-    container, the cost is <i>&Theta;(nlog(mn))</i>. Using 2, 3,\n-    and 4, the expected cost is <i>&Theta;(n)</i>, but typically\n-    with far lower costs than 1. 5 is similar to 1.</p>\n-</div>\n-</body>\n-</html>"}, {"sha": "9b6b6b83982aabc9adccb659d920bf57cec60cc7", "filename": "libstdc++-v3/doc/html/ext/pb_ds/assoc_regression_tests.html", "status": "removed", "additions": 0, "deletions": 93, "changes": 93, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fassoc_regression_tests.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fassoc_regression_tests.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fassoc_regression_tests.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7", "patch": "@@ -1,93 +0,0 @@\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\"\n-    \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n-\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n-<head>\n-  <meta name=\"generator\" content=\n-  \"HTML Tidy for Linux/x86 (vers 12 April 2005), see www.w3.org\" />\n-\n-  <title>Associative-Container Regression Tests</title>\n-  <meta http-equiv=\"Content-Type\" content=\n-  \"text/html; charset=us-ascii\" />\n-<base href=\"http://gcc.gnu.org/viewcvs/*checkout*/trunk/libstdc%2B%2B-v3/testsuite/ext/pb_ds/regression/\">\n-  </head>\n-\n-<body>\n-  <div id=\"page\">\n-    <h1>Associative-Container Regression Tests</h1>\n-\n-    <h2><a name=\"assoc_desc\" id=\"assoc_desc\">Description</a></h2>\n-\n-    <p>The library contains a single comprehensive regression test.\n-    For a given container type in <tt>pb_ds</tt>, the test creates\n-    an object of the container type and an object of the\n-    corresponding STL type (<i>e.g.</i>, <tt>std::set</tt>). It\n-    then performs a random sequence of methods with random\n-    arguments (<i>e.g.</i>, inserts, erases, and so forth) on both\n-    objects. At each operation, the test checks the return value of\n-    the method, and optionally both compares <tt>pb_ds</tt>'s\n-    object with the STL's object as well as performing other\n-    consistency checks on <tt>pb_ds</tt>'s object (<i>e.g.</i>,\n-    order preservation, when applicable, or node invariants, when\n-    applicable).</p>\n-\n-    <p>Additionally, the test integrally checks exception safety\n-    and resource leaks. This is done as follows. A special\n-    allocator type, written for the purpose of the test, both\n-    randomly throws an exceptions when allocations are performed,\n-    and tracks allocations and de-allocations. The exceptions thrown\n-    at allocations simulate memory-allocation failures; the\n-    tracking mechanism checks for memory-related bugs (<i>e.g.</i>,\n-    resource leaks and multiple de-allocations). Both\n-    <tt>pb_ds</tt>'s containers and the containers' value-types are\n-    configured to use this allocator.</p>\n-\n-    <p>Due to compiler constraints, the test is split into the\n-    several sources, each checking only some containers.</p>\n-\n-    <h2><a name=\"assoc_tests\" id=\"assoc_tests\">Tests</a></h2>\n-\n-    <h3><a name=\"assoc_tests_set\" id=\"assoc_tests_set\">\"Set\"\n-    Tests</a></h3>\n-\n-    <p>The following check all \"set\" types:</p>\n-\n-    <ol>\n-      <li><a href=\n-      \"hash_no_data_map_rand.cc\"><tt>hash_no_data_map_rand.cc</tt></a>\n-      checks all hash-based \"set\" types.</li>\n-\n-      <li><a href=\n-      \"list_update_no_data_map_rand.cc\"><tt>list_update_no_data_map_rand.cc</tt></a>\n-      checks all list-based \"set\" types.</li>\n-\n-      <li><a href=\n-      \"tree_no_data_map_rand.cc\"><tt>tree_no_data_map_rand.cc</tt></a>\n-      checks all tree-based \"set\" types.</li>\n-\n-      <li><a href=\n-      \"trie_no_data_map_rand.cc\"><tt>trie_no_data_map_rand.cc</tt></a>\n-      checks all PATRICIA-trie-based \"set\" types.</li>\n-    </ol>\n-\n-    <h3><a name=\"assoc_tests_map\" id=\"assoc_tests_map\">\"Map\"\n-    Tests</a></h3>\n-\n-    <p>The following check all \"map\" types:</p>\n-\n-    <ol>\n-      <li><a href= \"hash_data_map_rand.cc\"><tt>hash_data_map_rand.cc</tt></a>\n-      checks all hash-based \"map\" types.</li>\n-\n-      <li><a href= \"list_update_data_map_rand.cc\"><tt>list_update_data_map_rand.cc</tt></a>\n-      checks all list-based \"map\" types.</li>\n-\n-      <li><a href= \"tree_data_map_rand.cc\"><tt>tree_data_map_rand.cc</tt></a>\n-      checks all tree-based \"map\" types.</li>\n-\n-      <li><a href= \"trie_data_map_rand.cc\"><tt>trie_data_map_rand.cc</tt></a>\n-      checks all PATRICIA-trie-based \"map\" types.</li>\n-    </ol>\n-  </div>\n-</body>\n-</html>"}, {"sha": "6e4474945d329c19bebaef1cb83630f2bf1c696a", "filename": "libstdc++-v3/doc/html/ext/pb_ds/assoc_tests.html", "status": "removed", "additions": 0, "deletions": 24, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fassoc_tests.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fassoc_tests.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fassoc_tests.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7", "patch": "@@ -1,24 +0,0 @@\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\"\n-    \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n-\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n-<head>\n-  <meta name=\"generator\" content=\n-  \"HTML Tidy for Linux/x86 (vers 12 April 2005), see www.w3.org\" />\n-\n-  <title>Associative-Container Tests</title>\n-  <meta http-equiv=\"Content-Type\" content=\n-  \"text/html; charset=us-ascii\" />\n-  </head>\n-\n-<body>\n-  <div id=\"page\">\n-    <h1>Associative-Container Tests</h1>\n-\n-    <p><a href=\"assoc_regression_tests.html\">Associative-Container\n-    Regression Tests</a> describes the regression tests; <a href=\n-    \"assoc_performance_tests.html\">Associative-Container\n-    Performance Tests</a> describes the performance tests.</p>\n-  </div>\n-</body>\n-</html>"}, {"sha": "ceb91cdc7472649c19806b89486566666996d9d4", "filename": "libstdc++-v3/doc/html/ext/pb_ds/associative_container_tag.html", "status": "removed", "additions": 0, "deletions": 47, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fassociative_container_tag.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fassociative_container_tag.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fassociative_container_tag.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7", "patch": "@@ -1,47 +0,0 @@\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n-    \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n-<head>\n-  <meta name=\"generator\" content=\n-  \"HTML Tidy for Linux/x86 (vers 12 April 2005), see www.w3.org\" />\n-\n-  <title>associative_container_tag Interface</title>\n-  <meta http-equiv=\"Content-Type\" content=\n-  \"text/html; charset=us-ascii\" />\n-  </head>\n-\n-<body>\n-  <div id=\"page\">\n-    <h1><tt>associative_container_tag</tt> Interface</h1>\n-\n-    <p>Basic associative-container data structure tag.</p>\n-\n-    <p>Defined in: <a href=\n-    \"http://gcc.gnu.org/viewcvs/*checkout*/trunk/libstdc%2B%2B-v3/include/ext/pb_ds/tag_and_trait.hpp\"><tt>tag_and_trait.hpp</tt></a></p>\n-\n-    <h2><a name=\"link1\" id=\"link1\">Base Classes</a></h2>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Bases\">\n-      <tr>\n-        <td width=\"80%\" align=\"left\"><b>Class</b></td>\n-\n-        <td width=\"20%\" align=\"left\"><b>Derivation Type</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a href=\"container_tag.html\"><span class=\n-\"c2\"><tt>container_tag</tt></span></a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>public</p>\n-        </td>\n-      </tr>\n-    </table>\n-  </div>\n-</body>\n-</html>"}, {"sha": "668e681d8c0b3356c367f42f5fa1ad39fe65b47c", "filename": "libstdc++-v3/doc/html/ext/pb_ds/basic_hash_table.html", "status": "removed", "additions": 0, "deletions": 436, "changes": 436, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fbasic_hash_table.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fbasic_hash_table.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fbasic_hash_table.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7", "patch": "@@ -1,436 +0,0 @@\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n-    \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n-<head>\n-  <meta name=\"generator\" content=\n-  \"HTML Tidy for Linux/x86 (vers 12 April 2005), see www.w3.org\" />\n-\n-  <title>basic_hash_table Interface</title>\n-  <meta http-equiv=\"Content-Type\" content=\n-  \"text/html; charset=us-ascii\" />\n-  </head>\n-\n-<body>\n-  <div id=\"page\">\n-    <h1><tt>basic_hash_table</tt> Interface</h1>\n-\n-    <p>An abstract basic hash-based associative container.</p>\n-\n-    <p>Defined in: <a href=\n-    \"http://gcc.gnu.org/viewcvs/*checkout*/trunk/libstdc%2B%2B-v3/include/ext/pb_ds/assoc_container.hpp\"><tt>assoc_container.hpp</tt></a></p>\n-\n-    <h2><a name=\"link1\" id=\"link1\">Template Parameters</a></h2>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\n-    \"Template Parameters\">\n-      <tr>\n-        <td width=\"20%\" align=\"left\"><b>Parameter</b></td>\n-\n-        <td width=\"50%\" align=\"left\"><b>Description</b></td>\n-\n-        <td width=\"30%\" align=\"left\"><b>Default Value</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"Key2501\" id=\"Key2501\"><b>typename</b> Key</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Key type.</p>\n-        </td>\n-\n-        <td>-</td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"Mapped318655\" id=\"Mapped318655\"><b>typename</b> Mapped</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Mapped type.</p>\n-        </td>\n-\n-        <td>-</td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"Hash_Fn1515835\" id=\n-\"Hash_Fn1515835\"><b>class</b> Hash_Fn</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Hash functor.</p>\n-        </td>\n-\n-        <td>-</td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"Eq_Fn60085\" id=\"Eq_Fn60085\"><b>class</b> Eq_Fn</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Equivalence functor.</p>\n-        </td>\n-\n-        <td>-</td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"Resize_Policy566860465\" id=\n-\"Resize_Policy566860465\"><b>class</b> Resize_Policy</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Resize policy.</p>\n-        </td>\n-\n-        <td>-</td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"Store_Hash218262104\" id=\n-\"Store_Hash218262104\"><b>bool</b> Store_Hash</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Indicates whether the hash value will be stored along\n-          with each key.</p>\n-        </td>\n-\n-        <td>-</td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"Tag278938\" id=\"Tag278938\"><b>class</b> Tag</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Mapped-structure tag.</p>\n-        </td>\n-\n-        <td>-</td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"Allocator35940069\" id=\n-\"Allocator35940069\"><b>class</b> Allocator</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Allocator type.</p>\n-        </td>\n-\n-        <td>-</td>\n-      </tr>\n-    </table>\n-\n-    <h2><a name=\"link2\" id=\"link2\">Base Classes</a></h2>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Bases\">\n-      <tr>\n-        <td width=\"80%\" align=\"left\"><b>Class</b></td>\n-\n-        <td width=\"20%\" align=\"left\"><b>Derivation Type</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a href=\"#Resize_Policy566860465\"><tt>Resize_Policy</tt></a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>public</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a href=\"container_base.html\"><span class=\n-\"c2\"><tt>container_base</tt></span></a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>public</p>\n-        </td>\n-      </tr>\n-    </table>\n-\n-    <h2><a name=\"link3\" id=\"link3\">Public Types and\n-    Constants</a></h2>\n-\n-    <h3><a name=\"link4\" id=\"link4\">Policy Definitions</a></h3>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Types\">\n-      <tr>\n-        <td width=\"30%\" align=\"left\"><b>Type</b></td>\n-\n-        <td width=\"55%\" align=\"left\"><b>Definition</b></td>\n-\n-        <td width=\"15%\" align=\"left\"><b>Description</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"hash_fn2015995\" id=\"hash_fn2015995\">hash_fn</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <pre>\n-<a href=\"#Hash_Fn1515835\"><tt>Hash_Fn</tt></a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Hash functor type.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"eq_fn80245\" id=\"eq_fn80245\">eq_fn</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <pre>\n-<a href=\"#Eq_Fn60085\"><tt>Eq_Fn</tt></a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Equivalence functor type.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"resize_policy4084493169\" id=\n-\"resize_policy4084493169\">resize_policy</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <pre>\n-<a href=\"#Resize_Policy566860465\"><tt>Resize_Policy</tt></a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Resize policy type.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"store_hash280766104\" id=\n-\"store_hash280766104\">store_hash</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <pre>\n-<a href=\"#Store_Hash218262104\"><tt>Store_Hash</tt></a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Indicates whether a hash value is stored with each\n-          entry.</p>\n-        </td>\n-      </tr>\n-    </table>\n-\n-    <h2><a name=\"link5\" id=\"link5\">Public Methods</a></h2>\n-\n-    <h3><a name=\"link6\" id=\"link6\">Constructors, Destructor, and\n-    Related</a></h3>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Methods\">\n-      <tr>\n-        <td width=\"45%\" align=\"left\"><b>Method</b></td>\n-\n-        <td width=\"55%\" align=\"left\"><b>Description</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>virtual</b> \n-  ~basic_hash_table\n-  ()\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Destructor.</p>\n-        </td>\n-      </tr>\n-    </table>\n-\n-    <h3><a name=\"link7\" id=\"link7\">Policy Access Methods</a></h3>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Methods\">\n-      <tr>\n-        <td width=\"45%\" align=\"left\"><b>Method</b></td>\n-\n-        <td width=\"55%\" align=\"left\"><b>Description</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a href=\"#hash_fn2015995\"><tt>hash_fn</tt></a> &amp;\n-  get_hash_fn\n-  ()\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Access to the <a href=\n-          \"#hash_fn2015995\"><tt>hash_fn</tt></a> object.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>const</b> <a href=\"#hash_fn2015995\"><tt>hash_fn</tt></a> &amp;\n-  get_hash_fn\n-  () <b>const</b>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Const access to the <a href=\n-          \"#hash_fn2015995\"><tt>hash_fn</tt></a> object.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a href=\"#eq_fn80245\"><tt>eq_fn</tt></a> &amp;\n-  get_eq_fn\n-  ()\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Access to the <a href=\"#eq_fn80245\"><tt>eq_fn</tt></a>\n-          object.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>const</b> <a href=\"#eq_fn80245\"><tt>eq_fn</tt></a> &amp;\n-  get_eq_fn\n-  () <b>const</b>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Const access to the <a href=\n-          \"#eq_fn80245\"><tt>eq_fn</tt></a> object.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a href=\"#resize_policy4084493169\"><tt>resize_policy</tt></a> &amp;\n-  get_resize_policy\n-  ()\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Access to the <a href=\n-          \"#resize_policy4084493169\"><tt>resize_policy</tt></a>\n-          object.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>const</b> <a href=\n-\"#resize_policy4084493169\"><tt>resize_policy</tt></a> &amp;\n-  get_resize_policy\n-  () <b>const</b>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Const access to the <a href=\n-          \"#resize_policy4084493169\"><tt>resize_policy</tt></a>\n-          object.</p>\n-        </td>\n-      </tr>\n-    </table>\n-\n-    <h2><a name=\"link8\" id=\"link8\">Private Methods</a></h2>\n-\n-    <h3><a name=\"link9\" id=\"link9\">Resize Methods</a></h3>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Methods\">\n-      <tr>\n-        <td width=\"45%\" align=\"left\"><b>Method</b></td>\n-\n-        <td width=\"55%\" align=\"left\"><b>Description</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>virtual</b> <b>void</b> \n-  do_resize\n-  (size_type new_size)\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Resizes the container object to <span class=\n-          \"c1\"><tt>new_size</tt></span>.</p>\n-        </td>\n-      </tr>\n-    </table>\n-  </div>\n-</body>\n-</html>"}, {"sha": "9dc5e6d86b44633ccfc85ac4c189f281b21b5a61", "filename": "libstdc++-v3/doc/html/ext/pb_ds/basic_hash_tag.html", "status": "removed", "additions": 0, "deletions": 47, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fbasic_hash_tag.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fbasic_hash_tag.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fbasic_hash_tag.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7", "patch": "@@ -1,47 +0,0 @@\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n-    \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n-<head>\n-  <meta name=\"generator\" content=\n-  \"HTML Tidy for Linux/x86 (vers 12 April 2005), see www.w3.org\" />\n-\n-  <title>basic_hash_tag Interface</title>\n-  <meta http-equiv=\"Content-Type\" content=\n-  \"text/html; charset=us-ascii\" />\n-  </head>\n-\n-<body>\n-  <div id=\"page\">\n-    <h1><tt>basic_hash_tag</tt> Interface</h1>\n-\n-    <p>Basic hash data structure tag.</p>\n-\n-    <p>Defined in: <a href=\n-    \"http://gcc.gnu.org/viewcvs/*checkout*/trunk/libstdc%2B%2B-v3/include/ext/pb_ds/tag_and_trait.hpp\"><tt>tag_and_trait.hpp</tt></a></p>\n-\n-    <h2><a name=\"link1\" id=\"link1\">Base Classes</a></h2>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Bases\">\n-      <tr>\n-        <td width=\"80%\" align=\"left\"><b>Class</b></td>\n-\n-        <td width=\"20%\" align=\"left\"><b>Derivation Type</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a href=\"associative_container_tag.html\"><span class=\n-\"c2\"><tt>associative_container_tag</tt></span></a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>public</p>\n-        </td>\n-      </tr>\n-    </table>\n-  </div>\n-</body>\n-</html>"}, {"sha": "d4a0df23fcac309e794711dda5b442a1b73af4f8", "filename": "libstdc++-v3/doc/html/ext/pb_ds/basic_invalidation_guarantee.html", "status": "removed", "additions": 0, "deletions": 26, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fbasic_invalidation_guarantee.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fbasic_invalidation_guarantee.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fbasic_invalidation_guarantee.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7", "patch": "@@ -1,26 +0,0 @@\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\"\n-    \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n-\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n-<head>\n-  <meta name=\"generator\" content=\n-  \"HTML Tidy for Linux/x86 (vers 12 April 2005), see www.w3.org\" />\n-\n-  <title>basic_invalidation_guarantee Interface</title>\n-  <meta http-equiv=\"Content-Type\" content=\n-  \"text/html; charset=us-ascii\" />\n-  </head>\n-\n-<body>\n-  <div id=\"page\">\n-    <h1><tt>basic_invalidation_guarantee</tt> Interface</h1>\n-\n-    <p>Signifies a basic invalidation guarantee that any iterator,\n-    pointer, or reference to a container object's mapped value type\n-    is valid as long as the container is not modified.</p>\n-\n-    <p>Defined in: <a href=\n-    \"http://gcc.gnu.org/viewcvs/*checkout*/trunk/libstdc%2B%2B-v3/include/ext/pb_ds/tag_and_trait.hpp\"><tt>tag_and_trait.hpp</tt></a></p>\n-  </div>\n-</body>\n-</html>"}, {"sha": "3811707fa06447358b3016a00de09b17daf5b907", "filename": "libstdc++-v3/doc/html/ext/pb_ds/basic_tree.html", "status": "removed", "additions": 0, "deletions": 660, "changes": 660, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fbasic_tree.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fbasic_tree.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fbasic_tree.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7", "patch": "@@ -1,660 +0,0 @@\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n-    \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n-<head>\n-  <meta name=\"generator\" content=\n-  \"HTML Tidy for Linux/x86 (vers 12 April 2005), see www.w3.org\" />\n-\n-  <title>basic_tree Interface</title>\n-  <meta http-equiv=\"Content-Type\" content=\n-  \"text/html; charset=us-ascii\" />\n-  </head>\n-\n-<body>\n-  <div id=\"page\">\n-    <h1><tt>basic_tree</tt> Interface</h1>\n-\n-    <p>An abstract basic tree-like-based associative container.</p>\n-\n-    <p>Defined in: <a href=\n-    \"http://gcc.gnu.org/viewcvs/*checkout*/trunk/libstdc%2B%2B-v3/include/ext/pb_ds/assoc_container.hpp\"><tt>assoc_container.hpp</tt></a></p>\n-\n-    <h2><a name=\"link1\" id=\"link1\">Template Parameters</a></h2>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\n-    \"Template Parameters\">\n-      <tr>\n-        <td width=\"20%\" align=\"left\"><b>Parameter</b></td>\n-\n-        <td width=\"50%\" align=\"left\"><b>Description</b></td>\n-\n-        <td width=\"30%\" align=\"left\"><b>Default Value</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"Key2501\" id=\"Key2501\"><b>typename</b> Key</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Key type.</p>\n-        </td>\n-\n-        <td>-</td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"Mapped318655\" id=\"Mapped318655\"><b>typename</b> Mapped</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Mapped type.</p>\n-        </td>\n-\n-        <td>-</td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"Tag278938\" id=\"Tag278938\"><b>class</b> Tag</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Mapped-structure tag.</p>\n-        </td>\n-\n-        <td>-</td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"Node_Update841554648\" id=\n-\"Node_Update841554648\"><b>class</b> Node_Update</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Node updater.</p>\n-\n-          <p>Restores node-invariants when invalidated.</p>\n-        </td>\n-\n-        <td>-</td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"Policy_Tl42017403\" id=\n-\"Policy_Tl42017403\"><b>class</b> Policy_Tl</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Policy typelist.</p>\n-\n-          <p>Contains subclasses' policies.</p>\n-        </td>\n-\n-        <td>-</td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"Allocator35940069\" id=\n-\"Allocator35940069\"><b>class</b> Allocator</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Allocator type.</p>\n-        </td>\n-\n-        <td>-</td>\n-      </tr>\n-    </table>\n-\n-    <h2><a name=\"link2\" id=\"link2\">Base Classes</a></h2>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Bases\">\n-      <tr>\n-        <td width=\"80%\" align=\"left\"><b>Class</b></td>\n-\n-        <td width=\"20%\" align=\"left\"><b>Derivation Type</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a href=\"#Node_Update841554648\"><tt>Node_Update</tt></a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>public</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a href=\"container_base.html\"><span class=\n-\"c2\"><tt>container_base</tt></span></a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>public</p>\n-        </td>\n-      </tr>\n-    </table>\n-\n-    <h2><a name=\"link3\" id=\"link3\">Public Types and\n-    Constants</a></h2>\n-\n-    <h3><a name=\"link4\" id=\"link4\">Key-Type Definitions</a></h3>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Types\">\n-      <tr>\n-        <td width=\"30%\" align=\"left\"><b>Type</b></td>\n-\n-        <td width=\"55%\" align=\"left\"><b>Definition</b></td>\n-\n-        <td width=\"15%\" align=\"left\"><b>Description</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"const_key_reference3185471705\" id=\n-\"const_key_reference3185471705\">const_key_reference</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <pre>\n-<b>typename</b> <a href=\"container_base.html\"><span class=\n-\"c2\"><tt>container_base</tt></span></a>::const_key_reference\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Const key reference type.</p>\n-        </td>\n-      </tr>\n-    </table>\n-\n-    <h3><a name=\"link5\" id=\"link5\">Policy Definitions</a></h3>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Types\">\n-      <tr>\n-        <td width=\"30%\" align=\"left\"><b>Type</b></td>\n-\n-        <td width=\"55%\" align=\"left\"><b>Definition</b></td>\n-\n-        <td width=\"15%\" align=\"left\"><b>Description</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"node_update2404554648\" id=\n-\"node_update2404554648\">node_update</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <pre>\n-<a href=\"#Node_Update841554648\"><tt>Node_Update</tt></a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Node updater type.</p>\n-        </td>\n-      </tr>\n-    </table>\n-\n-    <h3><a name=\"link6\" id=\"link6\">Iterator Definitions</a></h3>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Types\">\n-      <tr>\n-        <td width=\"30%\" align=\"left\"><b>Type</b></td>\n-\n-        <td width=\"55%\" align=\"left\"><b>Definition</b></td>\n-\n-        <td width=\"15%\" align=\"left\"><b>Description</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"const_iterator98626788\" id=\n-\"const_iterator98626788\">const_iterator</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <pre>\n-<b>typename</b> <a href=\"container_base.html\"><span class=\n-\"c2\"><tt>container_base</tt></span></a>::const_iterator\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Const range-type iterator.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"iterator10418194\" id=\"iterator10418194\">iterator</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <pre>\n-<b>typename</b> <a href=\"container_base.html\"><span class=\n-\"c2\"><tt>container_base</tt></span></a>::iterator\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Range-type iterator.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"const_reverse_iterator4151293083\" id=\n-\"const_reverse_iterator4151293083\">const_reverse_iterator</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <pre>\n-Const reverse range-type iterator.\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Const reverse range-type <a href=\n-          \"#iterator10418194\"><tt>iterator</tt></a>.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"reverse_iterator1896910345\" id=\n-\"reverse_iterator1896910345\">reverse_iterator</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <pre>\n-Reverse range-type iterator.<br />\n-If <a href=\"#Mapped318655\"><tt>Mapped</tt></a> is <a href=\n-\"null_mapped_type.html\"><span class=\n-\"c2\"><tt>null_mapped_type</tt></span></a>, then this is synonymous to <a href=\"#const_reverse_iterator4151293083\"><tt>const_reverse_iterator</tt></a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Reverse range-type <a href=\n-          \"#iterator10418194\"><tt>iterator</tt></a>.</p>\n-        </td>\n-      </tr>\n-    </table>\n-\n-    <h2><a name=\"link7\" id=\"link7\">Public Methods</a></h2>\n-\n-    <h3><a name=\"link8\" id=\"link8\">Constructors, Destructor, and\n-    Related</a></h3>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Methods\">\n-      <tr>\n-        <td width=\"45%\" align=\"left\"><b>Method</b></td>\n-\n-        <td width=\"55%\" align=\"left\"><b>Description</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>virtual</b> \n-  ~basic_tree\n-  ()\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Destructor.</p>\n-        </td>\n-      </tr>\n-    </table>\n-\n-    <h3><a name=\"link9\" id=\"link9\">Policy Access Methods</a></h3>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Methods\">\n-      <tr>\n-        <td width=\"45%\" align=\"left\"><b>Method</b></td>\n-\n-        <td width=\"55%\" align=\"left\"><b>Description</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a href=\"#node_update2404554648\"><tt>node_update</tt></a> &amp;\n-  get_node_update\n-  ()\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Access to the <a href=\n-          \"#node_update2404554648\"><tt>node_update</tt></a>\n-          object.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>const</b> <a href=\n-\"#node_update2404554648\"><tt>node_update</tt></a> &amp;\n-  get_node_update\n-  () <b>const</b>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Const access to the <a href=\n-          \"#node_update2404554648\"><tt>node_update</tt></a>\n-          object.</p>\n-        </td>\n-      </tr>\n-    </table>\n-\n-    <h3><a name=\"link10\" id=\"link10\">Find Methods</a></h3>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Methods\">\n-      <tr>\n-        <td width=\"45%\" align=\"left\"><b>Method</b></td>\n-\n-        <td width=\"55%\" align=\"left\"><b>Description</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a href=\"#iterator10418194\"><tt>iterator</tt></a>\n-  lower_bound\n-  (<a href=\n-\"#const_key_reference3185471705\"><tt>const_key_reference</tt></a> r_key)\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Returns an <a href=\n-          \"#iterator10418194\"><tt>iterator</tt></a> corresponding\n-          to the entry whose key is the smallest one at least as\n-          large as <span class=\"c1\"><tt>r_key</tt></span>.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a href=\"#const_iterator98626788\"><tt>const_iterator</tt></a>\n-  lower_bound\n-  (<a href=\n-\"#const_key_reference3185471705\"><tt>const_key_reference</tt></a> r_key) <b>const</b>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Returns a <tt><b>const</b></tt> <a href=\n-          \"#iterator10418194\"><tt>iterator</tt></a> corresponding\n-          to the entry whose key is the smallest one at least as\n-          large as <span class=\"c1\"><tt>r_key</tt></span>.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a href=\"#iterator10418194\"><tt>iterator</tt></a>\n-  upper_bound\n-  (<a href=\n-\"#const_key_reference3185471705\"><tt>const_key_reference</tt></a> r_key)\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Returns an <a href=\n-          \"#iterator10418194\"><tt>iterator</tt></a> corresponding\n-          to the entry whose key is the smallest one larger than\n-          <span class=\"c1\"><tt>r_key</tt></span>.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a href=\"#const_iterator98626788\"><tt>const_iterator</tt></a>\n-  upper_bound\n-  (<a href=\n-\"#const_key_reference3185471705\"><tt>const_key_reference</tt></a> r_key) <b>const</b>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Returns a <a href=\n-          \"#const_iterator98626788\"><tt>const_iterator</tt></a>\n-          corresponding to the entry whose key is the smallest one\n-          larger than <span class=\"c1\"><tt>r_key</tt></span>.</p>\n-        </td>\n-      </tr>\n-    </table>\n-\n-    <h3><a name=\"link11\" id=\"link11\">Erase Methods</a></h3>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Methods\">\n-      <tr>\n-        <td width=\"45%\" align=\"left\"><b>Method</b></td>\n-\n-        <td width=\"55%\" align=\"left\"><b>Description</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a href=\"#iterator10418194\"><tt>iterator</tt></a>\n-  erase\n-  (<a href=\"#iterator10418194\"><tt>iterator</tt></a> it)\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Erases the value_type corresponding to the <a href=\n-          \"#iterator10418194\"><tt>iterator</tt></a> <span class=\n-          \"c1\"><tt>it</tt></span>. Returns the <a href=\n-          \"#iterator10418194\"><tt>iterator</tt></a> corresponding\n-          to the next value_type.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a href=\"#reverse_iterator1896910345\"><tt>reverse_iterator</tt></a>\n-  erase\n-  (<a href=\n-\"#reverse_iterator1896910345\"><tt>reverse_iterator</tt></a> it)\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Erases the value_type corresponding to the <a href=\n-          \"#reverse_iterator1896910345\"><tt>reverse_iterator</tt></a>\n-          <span class=\"c1\"><tt>it</tt></span>. Returns the <a href=\n-          \"#reverse_iterator1896910345\"><tt>reverse_iterator</tt></a>\n-          corresponding to the previous value_type.</p>\n-        </td>\n-      </tr>\n-    </table>\n-\n-    <h3><a name=\"link12\" id=\"link12\">Iteration Methods</a></h3>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Methods\">\n-      <tr>\n-        <td width=\"45%\" align=\"left\"><b>Method</b></td>\n-\n-        <td width=\"55%\" align=\"left\"><b>Description</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a href=\"#reverse_iterator1896910345\"><tt>reverse_iterator</tt></a>\n-  rbegin\n-  ()\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Returns a <a href=\n-          \"#reverse_iterator1896910345\"><tt>reverse_iterator</tt></a>\n-          corresponding to the last value_type in the\n-          container.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a href=\n-\"#const_reverse_iterator4151293083\"><tt>const_reverse_iterator</tt></a>\n-  rbegin\n-  () <b>const</b>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Returns a <a href=\n-          \"#const_reverse_iterator4151293083\"><tt>const_reverse_iterator</tt></a>\n-          corresponding to the last value_type in the\n-          container.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a href=\"#reverse_iterator1896910345\"><tt>reverse_iterator</tt></a>\n-  rend\n-  ()\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Returns a <a href=\n-          \"#reverse_iterator1896910345\"><tt>reverse_iterator</tt></a>\n-          corresponding to the just-before-first value_type in the\n-          container.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a href=\n-\"#const_reverse_iterator4151293083\"><tt>const_reverse_iterator</tt></a>\n-  rend\n-  () <b>const</b>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Returns a <a href=\n-          \"#const_reverse_iterator4151293083\"><tt>const_reverse_iterator</tt></a>\n-          corresponding to the just-before-first value_type in the\n-          container.</p>\n-        </td>\n-      </tr>\n-    </table>\n-\n-    <h3><a name=\"link13\" id=\"link13\">Split and join\n-    Methods</a></h3>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Methods\">\n-      <tr>\n-        <td width=\"45%\" align=\"left\"><b>Method</b></td>\n-\n-        <td width=\"55%\" align=\"left\"><b>Description</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>void</b> \n-  join\n-  (<span class=\n-\"c2\"><tt>basic_tree</tt></span> &amp;other)\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Joins two trees. When this function returns,\n-          <span class=\"c1\"><tt>other</tt></span> will be\n-          empty.</p>\n-\n-          <p>When calling this method, <span class=\n-          \"c1\"><tt>other</tt></span>'s keys must be all larger or\n-          all smaller than this object's keys, and <span class=\n-          \"c1\"><tt>other</tt></span>'s policies must be\n-          equivalent to this object's policies.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>void</b>\n-  split\n-  (<a href=\n-\"#const_key_reference3185471705\"><tt>const_key_reference</tt></a> r_key, \n-    <span class=\n-\"c2\"><tt>basic_tree</tt></span> &amp;other)\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Splits into two trees. When this function returns,\n-          <span class=\"c1\"><tt>other</tt></span> will contain\n-          only keys larger than <span class=\n-          \"c1\"><tt>r_key</tt></span>.</p>\n-\n-          <p>When calling this method, <span class=\n-          \"c1\"><tt>other</tt></span>'s policies must be\n-          equivalent to this object's policies.</p>\n-        </td>\n-      </tr>\n-    </table>\n-  </div>\n-</body>\n-</html>"}, {"sha": "5647f551e95089ce7c50dbeda98c14b83351cb4b", "filename": "libstdc++-v3/doc/html/ext/pb_ds/basic_tree_assoc_container_const_node_iterator.html", "status": "removed", "additions": 0, "deletions": 383, "changes": 383, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fbasic_tree_assoc_container_const_node_iterator.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fbasic_tree_assoc_container_const_node_iterator.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fbasic_tree_assoc_container_const_node_iterator.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7", "patch": "@@ -1,383 +0,0 @@\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n-    \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n-<head>\n-  <meta name=\"generator\" content=\n-  \"HTML Tidy for Linux/x86 (vers 12 April 2005), see www.w3.org\" />\n-\n-  <title>tree::const_node_iterator\n-  Interface</title>\n-  <meta http-equiv=\"Content-Type\" content=\n-  \"text/html; charset=us-ascii\" />\n-  </head>\n-\n-<body>\n-  <div id=\"page\">\n-    <h1><tt><span class=\n-    \"c2\"><tt>tree</tt></span>::const_node_iterator</tt>\n-    Interface</h1>\n-\n-    <p>Const node iterator.</p>\n-\n-    <p>This is an &amp;qout;iterator to an iterator&amp;qout; - it\n-    iterates over nodes, and de-referencing it returns one of the\n-    tree's iterators</p>\n-\n-    <h2><a name=\"link1\" id=\"link1\">Public Types and\n-    Constants</a></h2>\n-\n-    <h3><a name=\"link2\" id=\"link2\">Iterator Definitions</a></h3>\n-\n-    <table class=\"c2\" width=\"100%\" border=\"1\" summary=\"Types\">\n-      <tr>\n-        <td width=\"30%\" align=\"left\"><b>Type</b></td>\n-\n-        <td width=\"55%\" align=\"left\"><b>Definition</b></td>\n-\n-        <td width=\"15%\" align=\"left\"><b>Description</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"iterator_category2821876439\" id=\n-\"iterator_category2821876439\">iterator_category</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <pre>\n-trivial_iterator_tag\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Category.</p>\n-\n-          <p>This tag identifies that the iterator has none of the\n-          STL's iterators' movement abilities.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"difference_type868028452\" id=\n-\"difference_type868028452\">difference_type</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <pre class=\"c1\">\n-void\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Difference type.</p>\n-        </td>\n-      </tr>\n-    </table>\n-\n-    <h3><a name=\"link3\" id=\"link3\">Value-Type Definitions</a></h3>\n-\n-    <p>Note that a node iterator's value type is actually a tree\n-    iterator.</p>\n-\n-    <table class=\"c2\" width=\"100%\" border=\"1\" summary=\"Types\">\n-      <tr>\n-        <td width=\"30%\" align=\"left\"><b>Type</b></td>\n-\n-        <td width=\"55%\" align=\"left\"><b>Definition</b></td>\n-\n-        <td width=\"15%\" align=\"left\"><b>Description</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"value_type279018186\" id=\n-\"value_type279018186\">value_type</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <pre>\n-<a href=\n-\"container_base.html#const_iterator98626788\"><span class=\"c2\"><tt>container_base</tt></span>::const_iterator</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Iterator's value type.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"reference54418471\" id=\"reference54418471\">reference</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <pre>\n-<a href=\n-\"container_base.html#const_iterator98626788\"><span class=\"c2\"><tt>container_base</tt></span>::const_iterator</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Iterator's reference type.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"const_reference495461441\" id=\n-\"const_reference495461441\">const_reference</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <pre>\n-<a href=\n-\"container_base.html#const_iterator98626788\"><span class=\"c2\"><tt>container_base</tt></span>::const_iterator</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Iterator's const <a href=\n-          \"#reference54418471\"><tt>reference</tt></a> type.</p>\n-        </td>\n-      </tr>\n-    </table>\n-\n-    <h3><a name=\"link4\" id=\"link4\">Metadata Definitions</a></h3>\n-\n-    <p>These are only defined if <a href=\n-    \"basic_tree.html#Node_Update841554648\"><span class=\"c2\">\n-    <tt>basic_tree</tt></span>::Node_Update</a>\n-    is not <a href=\"null_tree_node_update.html\"><span class=\n-    \"c2\"><tt>null_tree_node_update</tt></span></a></p>\n-\n-    <table class=\"c2\" width=\"100%\" border=\"1\" summary=\"Types\">\n-      <tr>\n-        <td width=\"30%\" align=\"left\"><b>Type</b></td>\n-\n-        <td width=\"55%\" align=\"left\"><b>Definition</b></td>\n-\n-        <td width=\"15%\" align=\"left\"><b>Description</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"metadata_type2849297114\" id=\n-\"metadata_type2849297114\">metadata_type</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <pre>\n-<tt><b>typename</b></tt> <a href=\n-\"basic_tree.html#Node_Update841554648\"><span class=\"c2\"><tt>basic_tree</tt></span>::Node_Update</a><tt>::metadata_type</tt>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Metadata type.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"const_metadata_reference1108857465\" id=\n-\"const_metadata_reference1108857465\">const_metadata_reference</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <pre>\n-<b>typename</b> Allocator::<b>template</b> rebind&lt;\n-    <a href=\n-\"#metadata_type2849297114\"><tt>metadata_type</tt></a>&gt;::other::<a href=\"#const_reference495461441\"><tt>const_reference</tt></a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Const metadata <a href=\n-          \"#reference54418471\"><tt>reference</tt></a> type.</p>\n-        </td>\n-      </tr>\n-    </table>\n-\n-    <h2><a name=\"link5\" id=\"link5\">Public Methods</a></h2>\n-\n-    <h3><a name=\"link6\" id=\"link6\">Constructors, Destructor, and\n-    Related</a></h3>\n-\n-    <table class=\"c2\" width=\"100%\" border=\"1\" summary=\"Methods\">\n-      <tr>\n-        <td width=\"45%\" align=\"left\"><b>Method</b></td>\n-\n-        <td width=\"55%\" align=\"left\"><b>Description</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>inline</b> \n-  const_node_iterator\n-  ()\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Default constructor.</p>\n-        </td>\n-      </tr>\n-    </table>\n-\n-    <h3><a name=\"link7\" id=\"link7\">Access Methods</a></h3>\n-\n-    <table class=\"c2\" width=\"100%\" border=\"1\" summary=\"Methods\">\n-      <tr>\n-        <td width=\"45%\" align=\"left\"><b>Method</b></td>\n-\n-        <td width=\"55%\" align=\"left\"><b>Description</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>inline</b> <a href=\n-\"#const_reference495461441\"><tt>const_reference</tt></a>\n-  <b>operator</b>*\n-  () <b>const</b>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Access.</p>\n-        </td>\n-      </tr>\n-    </table>\n-\n-    <h3><a name=\"link8\" id=\"link8\">Metadata Access Methods</a></h3>\n-\n-    <p>These are only defined if <a href=\n-    \"basic_tree.html#Node_Update841554648\"><span class=\"c2\">\n-    <tt>basic_tree</tt></span>::Node_Update</a>\n-    is not <a href=\"null_tree_node_update.html\"><span class=\n-    \"c2\"><tt>null_tree_node_update</tt></span></a></p>\n-\n-    <table class=\"c2\" width=\"100%\" border=\"1\" summary=\"Methods\">\n-      <tr>\n-        <td width=\"45%\" align=\"left\"><b>Method</b></td>\n-\n-        <td width=\"55%\" align=\"left\"><b>Description</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>inline</b> <a href=\n-\"#const_metadata_reference1108857465\"><tt>const_metadata_reference</tt></a>\n-  get_metadata\n-  () <b>const</b>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Metadata access.</p>\n-        </td>\n-      </tr>\n-    </table>\n-\n-    <h3><a name=\"link9\" id=\"link9\">Movement Methods</a></h3>\n-\n-    <table class=\"c2\" width=\"100%\" border=\"1\" summary=\"Methods\">\n-      <tr>\n-        <td width=\"45%\" align=\"left\"><b>Method</b></td>\n-\n-        <td width=\"55%\" align=\"left\"><b>Description</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>inline</b> <span class=\"c2\"><tt>const_node_iterator</tt></span>\n-  get_l_child\n-  () <b>const</b>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Returns the const node iterator associated with the\n-          left node.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>inline</b> <span class=\"c2\"><tt>const_node_iterator</tt></span>\n-  get_r_child\n-  () <b>const</b>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Returns the const node iterator associated with the\n-          right node.</p>\n-        </td>\n-      </tr>\n-    </table>\n-\n-    <h3><a name=\"link10\" id=\"link10\">Comparison Methods</a></h3>\n-\n-    <table class=\"c2\" width=\"100%\" border=\"1\" summary=\"Methods\">\n-      <tr>\n-        <td width=\"45%\" align=\"left\"><b>Method</b></td>\n-\n-        <td width=\"55%\" align=\"left\"><b>Description</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>inline</b> <b>bool</b>\n-  <b>operator</b>==\n-  (<b>const</b> <span class=\n-\"c2\"><tt>const_node_iterator</tt></span> &amp;other) <b>const</b>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Compares to a different iterator object.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>inline</b> <b>bool</b>\n-  <b>operator</b>!=\n-  (<b>const</b> <span class=\n-\"c2\"><tt>const_node_iterator</tt></span> &amp;other) <b>const</b>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Compares (negatively) to a different iterator\n-          object.</p>\n-        </td>\n-      </tr>\n-    </table>\n-  </div>\n-</body>\n-</html>"}, {"sha": "8eca2a81859141cfc48227418f519e9473b794bb", "filename": "libstdc++-v3/doc/html/ext/pb_ds/basic_tree_tag.html", "status": "removed", "additions": 0, "deletions": 47, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fbasic_tree_tag.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fbasic_tree_tag.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fbasic_tree_tag.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7", "patch": "@@ -1,47 +0,0 @@\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n-    \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n-<head>\n-  <meta name=\"generator\" content=\n-  \"HTML Tidy for Linux/x86 (vers 12 April 2005), see www.w3.org\" />\n-\n-  <title>basic_tree_tag Interface</title>\n-  <meta http-equiv=\"Content-Type\" content=\n-  \"text/html; charset=us-ascii\" />\n-  </head>\n-\n-<body>\n-  <div id=\"page\">\n-    <h1><tt>basic_tree_tag</tt> Interface</h1>\n-\n-    <p>Basic tree-like data structure tag.</p>\n-\n-    <p>Defined in: <a href=\n-    \"http://gcc.gnu.org/viewcvs/*checkout*/trunk/libstdc%2B%2B-v3/include/ext/pb_ds/tag_and_trait.hpp\"><tt>tag_and_trait.hpp</tt></a></p>\n-\n-    <h2><a name=\"link1\" id=\"link1\">Base Classes</a></h2>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Bases\">\n-      <tr>\n-        <td width=\"80%\" align=\"left\"><b>Class</b></td>\n-\n-        <td width=\"20%\" align=\"left\"><b>Derivation Type</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a href=\"associative_container_tag.html\"><span class=\n-\"c2\"><tt>associative_container_tag</tt></span></a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>public</p>\n-        </td>\n-      </tr>\n-    </table>\n-  </div>\n-</body>\n-</html>"}, {"sha": "47873b1cfb91b7a63edfcb8f5900267be7274726", "filename": "libstdc++-v3/doc/html/ext/pb_ds/binary_heap_tag.html", "status": "removed", "additions": 0, "deletions": 47, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fbinary_heap_tag.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fbinary_heap_tag.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fbinary_heap_tag.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7", "patch": "@@ -1,47 +0,0 @@\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n-    \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n-<head>\n-  <meta name=\"generator\" content=\n-  \"HTML Tidy for Linux/x86 (vers 12 April 2005), see www.w3.org\" />\n-\n-  <title>binary_heap_tag Interface</title>\n-  <meta http-equiv=\"Content-Type\" content=\n-  \"text/html; charset=us-ascii\" />\n-  </head>\n-\n-<body>\n-  <div id=\"page\">\n-    <h1><tt>binary_heap_tag</tt> Interface</h1>\n-\n-    <p>Binary-heap (array-based) data structure tag.</p>\n-\n-    <p>Defined in: <a href=\n-    \"http://gcc.gnu.org/viewcvs/*checkout*/trunk/libstdc%2B%2B-v3/include/ext/pb_ds/tag_and_trait.hpp\"><tt>tag_and_trait.hpp</tt></a></p>\n-\n-    <h2><a name=\"link1\" id=\"link1\">Base Classes</a></h2>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Bases\">\n-      <tr>\n-        <td width=\"80%\" align=\"left\"><b>Class</b></td>\n-\n-        <td width=\"20%\" align=\"left\"><b>Derivation Type</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a href=\"priority_queue_tag.html\"><span class=\n-\"c2\"><tt>priority_queue_tag</tt></span></a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>public</p>\n-        </td>\n-      </tr>\n-    </table>\n-  </div>\n-</body>\n-</html>"}, {"sha": "07f0953a661467d0953c8cf555161522bdc26b89", "filename": "libstdc++-v3/doc/html/ext/pb_ds/binary_priority_queue_random_int_push_timing_test_gcc.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fbinary_priority_queue_random_int_push_timing_test_gcc.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fbinary_priority_queue_random_int_push_timing_test_gcc.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fbinary_priority_queue_random_int_push_timing_test_gcc.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "c69cf1e7641a7fe8a51bc8f073daf582026bbb21", "filename": "libstdc++-v3/doc/html/ext/pb_ds/binary_priority_queue_random_int_push_timing_test_local.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fbinary_priority_queue_random_int_push_timing_test_local.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fbinary_priority_queue_random_int_push_timing_test_local.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fbinary_priority_queue_random_int_push_timing_test_local.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "b8a3b237124d077b6af7aebf5c169fc25dcb9c2c", "filename": "libstdc++-v3/doc/html/ext/pb_ds/binary_priority_queue_random_int_push_timing_test_msvc.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fbinary_priority_queue_random_int_push_timing_test_msvc.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fbinary_priority_queue_random_int_push_timing_test_msvc.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fbinary_priority_queue_random_int_push_timing_test_msvc.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "fde6a913badf1ee8759e3cec2d3ec5d8c54fed5a", "filename": "libstdc++-v3/doc/html/ext/pb_ds/binomial_heap_tag.html", "status": "removed", "additions": 0, "deletions": 47, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fbinomial_heap_tag.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fbinomial_heap_tag.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fbinomial_heap_tag.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7", "patch": "@@ -1,47 +0,0 @@\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n-    \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n-<head>\n-  <meta name=\"generator\" content=\n-  \"HTML Tidy for Linux/x86 (vers 12 April 2005), see www.w3.org\" />\n-\n-  <title>binomial_heap_tag Interface</title>\n-  <meta http-equiv=\"Content-Type\" content=\n-  \"text/html; charset=us-ascii\" />\n-  </head>\n-\n-<body>\n-  <div id=\"page\">\n-    <h1><tt>binomial_heap_tag</tt> Interface</h1>\n-\n-    <p>Binomial-heap data structure tag.</p>\n-\n-    <p>Defined in: <a href=\n-    \"http://gcc.gnu.org/viewcvs/*checkout*/trunk/libstdc%2B%2B-v3/include/ext/pb_ds/tag_and_trait.hpp\"><tt>tag_and_trait.hpp</tt></a></p>\n-\n-    <h2><a name=\"link1\" id=\"link1\">Base Classes</a></h2>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Bases\">\n-      <tr>\n-        <td width=\"80%\" align=\"left\"><b>Class</b></td>\n-\n-        <td width=\"20%\" align=\"left\"><b>Derivation Type</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a href=\"priority_queue_tag.html\"><span class=\n-\"c2\"><tt>priority_queue_tag</tt></span></a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>public</p>\n-        </td>\n-      </tr>\n-    </table>\n-  </div>\n-</body>\n-</html>"}, {"sha": "a6b512b0d1630bee267b2c9d08e587c0569822c4", "filename": "libstdc++-v3/doc/html/ext/pb_ds/cc_hash_max_collision_check_resize_trigger.html", "status": "removed", "additions": 0, "deletions": 532, "changes": 532, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fcc_hash_max_collision_check_resize_trigger.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fcc_hash_max_collision_check_resize_trigger.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fcc_hash_max_collision_check_resize_trigger.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7", "patch": "@@ -1,532 +0,0 @@\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n-    \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n-<head>\n-  <meta name=\"generator\" content=\n-  \"HTML Tidy for Linux/x86 (vers 12 April 2005), see www.w3.org\" />\n-\n-  <title>cc_hash_max_collision_check_resize_trigger\n-  Interface</title>\n-  <meta http-equiv=\"Content-Type\" content=\n-  \"text/html; charset=us-ascii\" />\n-  </head>\n-\n-<body>\n-  <div id=\"page\">\n-    <h1><tt>cc_hash_max_collision_check_resize_trigger</tt>\n-    Interface</h1>\n-\n-    <p>A resize trigger policy based on collision checks. It keeps\n-    the simulated load factor lower than some given load\n-    factor.</p>\n-\n-    <p>Defined in: <a href=\n-    \"http://gcc.gnu.org/viewcvs/*checkout*/trunk/libstdc%2B%2B-v3/include/ext/pb_ds/hash_policy.hpp\"><tt>hash_policy.hpp</tt></a></p>\n-\n-    <h2><a name=\"link1\" id=\"link1\">Template Parameters</a></h2>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\n-    \"Template Parameters\">\n-      <tr>\n-        <td width=\"20%\" align=\"left\"><b>Parameter</b></td>\n-\n-        <td width=\"50%\" align=\"left\"><b>Description</b></td>\n-\n-        <td width=\"30%\" align=\"left\"><b>Default Value</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"External_Load_Access1313998607\" id=\n-\"External_Load_Access1313998607\"><b>bool</b> External_Load_Access </a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Specifies whether the load factor can be accessed\n-          externally. The two options have different trade-offs in\n-          terms of flexibility, genericity, and encapsulation.</p>\n-        </td>\n-\n-        <td><tt><b>false</b></tt></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"Size_Type42920436\" id=\n-\"Size_Type42920436\"><b>typename</b> Size_Type </a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Size type.</p>\n-        </td>\n-\n-        <td>size_t</td>\n-      </tr>\n-    </table>\n-\n-    <h2><a name=\"link2\" id=\"link2\">Public Types and\n-    Constants</a></h2>\n-\n-    <h3><a name=\"link3\" id=\"link3\">General Definitions</a></h3>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Types\">\n-      <tr>\n-        <td width=\"30%\" align=\"left\"><b>Type</b></td>\n-\n-        <td width=\"55%\" align=\"left\"><b>Definition</b></td>\n-\n-        <td width=\"15%\" align=\"left\"><b>Description</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"size_type55424436\" id=\"size_type55424436\">size_type</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <pre>\n-<a href=\"#Size_Type42920436\"><tt>Size_Type</tt></a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Size type.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"external_load_access3976598639\" id=\n-\"external_load_access3976598639\">external_load_access</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <pre>\n-<a href=\n-\"#External_Load_Access1313998607\"><tt>External_Load_Access</tt></a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Indicates whether loads can be accessed externally</p>\n-        </td>\n-      </tr>\n-    </table>\n-\n-    <h2><a name=\"link4\" id=\"link4\">Public Methods</a></h2>\n-\n-    <h3><a name=\"link5\" id=\"link5\">Constructors, Destructor, and\n-    Related</a></h3>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Methods\">\n-      <tr>\n-        <td width=\"45%\" align=\"left\"><b>Method</b></td>\n-\n-        <td width=\"55%\" align=\"left\"><b>Description</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-  cc_hash_max_collision_check_resize_trigger\n-  (float load = 0.5)\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Default constructor, or constructor taking\n-          <span class=\"c1\"><tt>load</tt></span>, a load factor\n-          which it will attempt to maintain.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>void</b>\n-  swap\n-  (<span class=\n-\"c2\"><tt>cc_hash_max_collision_check_resize_trigger</tt></span> &amp;other)\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Swaps content.</p>\n-        </td>\n-      </tr>\n-    </table>\n-\n-    <h3><a name=\"link6\" id=\"link6\">Load Access Methods</a></h3>\n-\n-    <p>These methods are only available if the external access\n-    parameter is set.</p>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Methods\">\n-      <tr>\n-        <td width=\"45%\" align=\"left\"><b>Method</b></td>\n-\n-        <td width=\"55%\" align=\"left\"><b>Description</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>inline</b> float\n-  get_load\n-  () <b>const</b>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Returns the current load.</p>\n-\n-          <p>Calling this method will not compile when <a href=\n-          \"#External_Load_Access1313998607\"><tt>External_Load_Access</tt></a>\n-          == <tt><b>false</b></tt>.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>void</b> \n-  set_load\n-  (float load)\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Sets the <span class=\"c1\"><tt>load</tt></span>; does\n-          not resize the container.</p>\n-\n-          <p>It is the responsibility of the user to pass an\n-          appropriate <span class=\"c1\"><tt>load</tt></span> to this\n-          function. Calling this method will not compile when\n-          <a href=\n-          \"#External_Load_Access1313998607\"><tt>External_Load_Access</tt></a>\n-          == <tt><b>false</b></tt>.</p>\n-        </td>\n-      </tr>\n-    </table>\n-\n-    <h2><a name=\"link7\" id=\"link7\">Protected Methods</a></h2>\n-\n-    <h3><a name=\"link8\" id=\"link8\">Insert Search\n-    Notifications.</a></h3>\n-\n-    <p>Notifications called during an insert operation.</p>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Methods\">\n-      <tr>\n-        <td width=\"45%\" align=\"left\"><b>Method</b></td>\n-\n-        <td width=\"55%\" align=\"left\"><b>Description</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>inline</b> <b>void</b>\n-  notify_insert_search_start\n-  ()\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Notifies a search started.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>inline</b> <b>void</b>\n-  notify_insert_search_collision\n-  ()\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Notifies a search encountered a collision.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>inline</b> <b>void</b>\n-  notify_insert_search_end\n-  ()\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Notifies a search ended.</p>\n-        </td>\n-      </tr>\n-    </table>\n-\n-    <h3><a name=\"link9\" id=\"link9\">Find Search\n-    Notifications.</a></h3>\n-\n-    <p>Notifications called during a find operation.</p>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Methods\">\n-      <tr>\n-        <td width=\"45%\" align=\"left\"><b>Method</b></td>\n-\n-        <td width=\"55%\" align=\"left\"><b>Description</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>inline</b> <b>void</b>\n-  notify_find_search_start\n-  ()\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Notifies a search started.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>inline</b> <b>void</b>\n-  notify_find_search_collision\n-  ()\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Notifies a search encountered a collision.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>inline</b> <b>void</b>\n-  notify_find_search_end\n-  ()\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Notifies a search ended.</p>\n-        </td>\n-      </tr>\n-    </table>\n-\n-    <h3><a name=\"link10\" id=\"link10\">Erase Search\n-    Notifications.</a></h3>\n-\n-    <p>Notifications called during an insert operation.</p>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Methods\">\n-      <tr>\n-        <td width=\"45%\" align=\"left\"><b>Method</b></td>\n-\n-        <td width=\"55%\" align=\"left\"><b>Description</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>inline</b> <b>void</b>\n-  notify_erase_search_start\n-  ()\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Notifies a search started.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>inline</b> <b>void</b>\n-  notify_erase_search_collision\n-  ()\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Notifies a search encountered a collision.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>inline</b> <b>void</b>\n-  notify_erase_search_end\n-  ()\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Notifies a search ended.</p>\n-        </td>\n-      </tr>\n-    </table>\n-\n-    <h3><a name=\"link11\" id=\"link11\">Content Change\n-    Notifications</a></h3>\n-\n-    <p>Notifications called when the content of the table changes\n-    in a way that can affect the resize policy.</p>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Methods\">\n-      <tr>\n-        <td width=\"45%\" align=\"left\"><b>Method</b></td>\n-\n-        <td width=\"55%\" align=\"left\"><b>Description</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>inline</b> <b>void</b>\n-  notify_inserted\n-  (<a href=\"#size_type55424436\"><tt>size_type</tt></a> num_entries)\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Notifies an element was inserted.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>inline</b> <b>void</b>\n-  notify_erased\n-  (<a href=\"#size_type55424436\"><tt>size_type</tt></a> num_entries)\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Notifies an element was erased.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>void</b> \n-  notify_cleared\n-  ()\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Notifies the table was cleared.</p>\n-        </td>\n-      </tr>\n-    </table>\n-\n-    <h3><a name=\"link12\" id=\"link12\">Size Change\n-    Notifications</a></h3>\n-\n-    <p>Notifications called when the table changes size.</p>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Methods\">\n-      <tr>\n-        <td width=\"45%\" align=\"left\"><b>Method</b></td>\n-\n-        <td width=\"55%\" align=\"left\"><b>Description</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>void</b>\n-  notify_resized\n-  (<a href=\"#size_type55424436\"><tt>size_type</tt></a> new_size)\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Notifies the table was resized as a result of this\n-          object's signifying that a resize is needed.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>void</b>\n-  notify_externally_resized\n-  (<a href=\"#size_type55424436\"><tt>size_type</tt></a> new_size)\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Notifies the table was resized externally.</p>\n-        </td>\n-      </tr>\n-    </table>\n-\n-    <h3><a name=\"link13\" id=\"link13\">Queries</a></h3>\n-\n-    <p>Called to query whether/how to resize.</p>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Methods\">\n-      <tr>\n-        <td width=\"45%\" align=\"left\"><b>Method</b></td>\n-\n-        <td width=\"55%\" align=\"left\"><b>Description</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>inline</b> <b>bool</b> \n-  is_resize_needed\n-  () <b>const</b>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Queries whether a resize is needed.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>inline</b> <b>bool</b>\n-  is_grow_needed\n-  (<a href=\n-\"#size_type55424436\"><tt>size_type</tt></a> size, <a href=\n-\"#size_type55424436\"><tt>size_type</tt></a> num_entries) <b>const</b>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Queries whether a grow is needed.</p>\n-\n-          <p>This method is called only if this object indicated is\n-          needed.</p>\n-        </td>\n-      </tr>\n-    </table>\n-  </div>\n-</body>\n-</html>"}, {"sha": "85b9eca4ff621bae92b74d47a17dfff387c69101", "filename": "libstdc++-v3/doc/html/ext/pb_ds/cc_hash_random_int_find_timing_test_gcc.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fcc_hash_random_int_find_timing_test_gcc.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fcc_hash_random_int_find_timing_test_gcc.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fcc_hash_random_int_find_timing_test_gcc.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "40404c87518e00b14dc433de6c1c06a489a7321e", "filename": "libstdc++-v3/doc/html/ext/pb_ds/cc_hash_random_int_find_timing_test_local.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fcc_hash_random_int_find_timing_test_local.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fcc_hash_random_int_find_timing_test_local.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fcc_hash_random_int_find_timing_test_local.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "d1234aa11d8fc2886d6b0b36dabca8282272d79c", "filename": "libstdc++-v3/doc/html/ext/pb_ds/cc_hash_random_int_find_timing_test_msvc.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fcc_hash_random_int_find_timing_test_msvc.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fcc_hash_random_int_find_timing_test_msvc.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fcc_hash_random_int_find_timing_test_msvc.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "1db2cc0c6a8b4ddbbfcc49fa5f65cdcef89d990e", "filename": "libstdc++-v3/doc/html/ext/pb_ds/cc_hash_random_int_subscript_timing_test_find_gcc.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fcc_hash_random_int_subscript_timing_test_find_gcc.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fcc_hash_random_int_subscript_timing_test_find_gcc.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fcc_hash_random_int_subscript_timing_test_find_gcc.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "bb5f30b68b9749ab61540d9c1ec31e66f610b7f4", "filename": "libstdc++-v3/doc/html/ext/pb_ds/cc_hash_random_int_subscript_timing_test_find_local.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fcc_hash_random_int_subscript_timing_test_find_local.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fcc_hash_random_int_subscript_timing_test_find_local.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fcc_hash_random_int_subscript_timing_test_find_local.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "0b51d9432a9e40c342f61cfe6bec6123771ea479", "filename": "libstdc++-v3/doc/html/ext/pb_ds/cc_hash_random_int_subscript_timing_test_find_msvc.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fcc_hash_random_int_subscript_timing_test_find_msvc.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fcc_hash_random_int_subscript_timing_test_find_msvc.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fcc_hash_random_int_subscript_timing_test_find_msvc.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "6e494038125307760faed5281441a5c85c4c3036", "filename": "libstdc++-v3/doc/html/ext/pb_ds/cc_hash_random_int_subscript_timing_test_insert_gcc.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fcc_hash_random_int_subscript_timing_test_insert_gcc.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fcc_hash_random_int_subscript_timing_test_insert_gcc.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fcc_hash_random_int_subscript_timing_test_insert_gcc.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "8dc7735c113589440027c3d3b03c4beea1087518", "filename": "libstdc++-v3/doc/html/ext/pb_ds/cc_hash_random_int_subscript_timing_test_insert_local.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fcc_hash_random_int_subscript_timing_test_insert_local.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fcc_hash_random_int_subscript_timing_test_insert_local.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fcc_hash_random_int_subscript_timing_test_insert_local.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "39c96ad8daf3900880a53f2b5ec4dba63c5169da", "filename": "libstdc++-v3/doc/html/ext/pb_ds/cc_hash_random_int_subscript_timing_test_insert_msvc.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fcc_hash_random_int_subscript_timing_test_insert_msvc.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fcc_hash_random_int_subscript_timing_test_insert_msvc.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fcc_hash_random_int_subscript_timing_test_insert_msvc.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "0557732a55f9a636317da80b9fbed3c9bfe2cdee", "filename": "libstdc++-v3/doc/html/ext/pb_ds/cc_hash_table.html", "status": "removed", "additions": 0, "deletions": 724, "changes": 724, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fcc_hash_table.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fcc_hash_table.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fcc_hash_table.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7", "patch": "@@ -1,724 +0,0 @@\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n-    \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n-<head>\n-  <meta name=\"generator\" content=\n-  \"HTML Tidy for Linux/x86 (vers 12 April 2005), see www.w3.org\" />\n-\n-  <title>cc_hash_table Interface</title>\n-  <meta http-equiv=\"Content-Type\" content=\n-  \"text/html; charset=us-ascii\" />\n-  </head>\n-\n-<body>\n-  <div id=\"page\">\n-    <h1><tt>cc_hash_table</tt> Interface</h1>\n-\n-    <p>A concrete collision-chaining hash-based associative\n-    container.</p>\n-\n-    <p>Defined in: <a href=\n-    \"http://gcc.gnu.org/viewcvs/*checkout*/trunk/libstdc%2B%2B-v3/include/ext/pb_ds/assoc_container.hpp\"><tt>assoc_container.hpp</tt></a></p>\n-\n-    <h2><a name=\"link1\" id=\"link1\">Template Parameters</a></h2>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\n-    \"Template Parameters\">\n-      <tr>\n-        <td width=\"20%\" align=\"left\"><b>Parameter</b></td>\n-\n-        <td width=\"50%\" align=\"left\"><b>Description</b></td>\n-\n-        <td width=\"30%\" align=\"left\"><b>Default Value</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"Key2501\" id=\"Key2501\"><b>typename</b> Key</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Key type.</p>\n-        </td>\n-\n-        <td>-</td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"Mapped318655\" id=\"Mapped318655\"><b>typename</b> Mapped</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Mapped type.</p>\n-        </td>\n-\n-        <td>-</td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"Hash_Fn1515835\" id=\n-\"Hash_Fn1515835\"><b>class</b> Hash_Fn </a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Hash functor.</p>\n-        </td>\n-\n-        <td>\n-          <pre>\n-__gnu_cxx::hash&lt;<a href=\"#Key2501\"><tt>Key</tt></a>&gt;\n-</pre>if using gcc;\n-          <pre>\n-stdext::hash_value&lt;<a href=\"#Key2501\"><tt>Key</tt></a>&gt;\n-</pre>if using Visual C++ .net\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"Eq_Fn60085\" id=\"Eq_Fn60085\"><b>class</b> Eq_Fn </a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Equivalence functor.</p>\n-        </td>\n-\n-        <td>\n-          <pre>\n-std::equal_to&lt;<a href=\"#Key2501\"><tt>Key</tt></a>&gt;\n-</pre>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"Comb_Hash_Fn320611039\" id=\n-\"Comb_Hash_Fn320611039\"><b>class</b> Comb_Hash_Fn </a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Combining hash functor.</p>\n-\n-          <p>If <a href=\"#Hash_Fn1515835\"><tt>Hash_Fn</tt></a> is\n-          not <a href=\"null_hash_fn.html\"><span class=\n-          \"c2\"><tt>null_hash_fn</tt></span></a>, then this is the\n-          ranged-hash functor; otherwise, this is the range-hashing\n-          functor.</p>\n-\n-          <p>(See <a href=\n-          \"hash_based_containers.html#hash_policies\">Design::Hash-Based\n-          Containers::Hash Policies</a>.)</p>\n-        </td>\n-\n-        <td>\n-          <pre>\n-<a href=\"direct_mask_range_hashing.html\"><span class=\n-\"c2\"><tt>direct_mask_range_hashing</tt></span></a>\n-</pre>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"Resize_Policy566860465\" id=\n-\"Resize_Policy566860465\"><b>class</b> Resize_Policy </a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Resize policy.</p>\n-        </td>\n-\n-        <td>\n-          If <tt><a href=\n-          \"#Comb_Hash_Fn320611039\"><tt>Comb_Hash_Fn</tt></a></tt>\n-          is <tt><a href=\n-          \"direct_mask_range_hashing.html\"><span class=\n-          \"c2\"><tt>direct_mask_range_hashing</tt></span></a></tt>,\n-          then\n-          <pre>\n-<a href=\"hash_standard_resize_policy.html\"><span class=\n-\"c2\"><tt>hash_standard_resize_policy</tt></span></a>&lt;\n-  <a href=\"hash_exponential_size_policy.html\"><span class=\n-\"c2\"><tt>hash_exponential_size_policy</tt></span></a>&lt;\n-    <b>typename</b> <a href=\n-\"#Comb_Hash_Fn320611039\"><tt>Comb_Hash_Fn</tt></a>::size_type&gt;,\n-  <a href=\"hash_load_check_resize_trigger.html\"><span class=\n-\"c2\"><tt>hash_load_check_resize_trigger</tt></span></a>&lt;\n-    <b>typename</b> <a href=\n-\"#Comb_Hash_Fn320611039\"><tt>Comb_Hash_Fn</tt></a>::size_type&gt;,\n-  <b>false</b>,\n-  <b>typename</b> <a href=\n-\"#Comb_Hash_Fn320611039\"><tt>Comb_Hash_Fn</tt></a>::size_type&gt;\n-</pre>otherwise,\n-          <pre>\n-<a href=\"hash_standard_resize_policy.html\"><span class=\n-\"c2\"><tt>hash_standard_resize_policy</tt></span></a>&lt;\n-  <a href=\"hash_exponential_size_policy.html\"><span class=\n-\"c2\"><tt>hash_exponential_size_policy</tt></span></a>&lt;\n-    <b>typename</b> <a href=\n-\"#Comb_Hash_Fn320611039\"><tt>Comb_Hash_Fn</tt></a>::size_type&gt;,\n-  <a href=\"hash_load_check_resize_trigger.html\"><span class=\n-\"c2\"><tt>hash_load_check_resize_trigger</tt></span></a>&lt;\n-    <b>typename</b> <a href=\n-\"#Comb_Hash_Fn320611039\"><tt>Comb_Hash_Fn</tt></a>::size_type&gt;,\n-  <b>false</b>,\n-  <b>typename</b> <a href=\n-\"#Comb_Hash_Fn320611039\"><tt>Comb_Hash_Fn</tt></a>::size_type&gt;\n-</pre>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"Store_Hash218262104\" id=\n-\"Store_Hash218262104\"><b>bool</b> Store_Hash </a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Indicates whether the hash value will be stored along\n-          with each key.</p>\n-\n-          <p>If <tt><a href=\n-          \"#hash_fn2015995\"><tt>hash_fn</tt></a></tt> is <a href=\n-          \"null_hash_fn.html\"><span class=\n-          \"c2\"><tt>null_hash_fn</tt></span></a>, then the container\n-          will not compile if this value is\n-          <tt><b>true</b></tt></p>\n-        </td>\n-\n-        <td>\n-          <pre>\n-<tt><b>false</b></tt>\n-</pre>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"Allocator35940069\" id=\n-\"Allocator35940069\"><b>class</b> Allocator </a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Allocator type.</p>\n-        </td>\n-\n-        <td>\n-          <pre>\n-std::allocator&lt;<b>char</b>&gt;\n-</pre>\n-        </td>\n-      </tr>\n-    </table>\n-\n-    <h2><a name=\"link2\" id=\"link2\">Base Classes</a></h2>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Bases\">\n-      <tr>\n-        <td width=\"80%\" align=\"left\"><b>Class</b></td>\n-\n-        <td width=\"20%\" align=\"left\"><b>Derivation Type</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a href=\"basic_hash_table.html\"><span class=\n-\"c2\"><tt>basic_hash_table</tt></span></a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>public</p>\n-        </td>\n-      </tr>\n-    </table>\n-\n-    <h2><a name=\"link3\" id=\"link3\">Public Types and\n-    Constants</a></h2>\n-\n-    <h3><a name=\"link4\" id=\"link4\">Policy Definitions</a></h3>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Types\">\n-      <tr>\n-        <td width=\"30%\" align=\"left\"><b>Type</b></td>\n-\n-        <td width=\"55%\" align=\"left\"><b>Definition</b></td>\n-\n-        <td width=\"15%\" align=\"left\"><b>Description</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"hash_fn2015995\" id=\"hash_fn2015995\">hash_fn</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <pre>\n-<a href=\"#Hash_Fn1515835\"><tt>Hash_Fn</tt></a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Hash functor type.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"eq_fn80245\" id=\"eq_fn80245\">eq_fn</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <pre>\n-<a href=\"#Eq_Fn60085\"><tt>Eq_Fn</tt></a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Equivalence functor type.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"resize_policy4084493169\" id=\n-\"resize_policy4084493169\">resize_policy</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <pre>\n-<a href=\"#Resize_Policy566860465\"><tt>Resize_Policy</tt></a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Resize policy type.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"comb_hash_fn1883611199\" id=\n-\"comb_hash_fn1883611199\">comb_hash_fn</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <pre>\n-<a href=\"#Comb_Hash_Fn320611039\"><tt>Comb_Hash_Fn</tt></a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Combining hash functor type.</p>\n-        </td>\n-      </tr>\n-    </table>\n-\n-    <h2><a name=\"link5\" id=\"link5\">Public Methods</a></h2>\n-\n-    <h3><a name=\"link6\" id=\"link6\">Constructors, Destructor, and\n-    Related</a></h3>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Methods\">\n-      <tr>\n-        <td width=\"45%\" align=\"left\"><b>Method</b></td>\n-\n-        <td width=\"55%\" align=\"left\"><b>Description</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-  cc_hash_table\n-  ()\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Default constructor.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-  cc_hash_table\n-  (<b>const</b> <a href=\n-\"#hash_fn2015995\"><tt>hash_fn</tt></a> &amp;r_hash_fn)\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Constructor taking some policy objects. <span class=\n-          \"c1\"><tt>r_hash_fn</tt></span> will be copied by the\n-          <a href=\"#Hash_Fn1515835\"><tt>Hash_Fn</tt></a> object of\n-          the container object.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-  cc_hash_table\n-  (<b>const</b> <a href=\n-\"#hash_fn2015995\"><tt>hash_fn</tt></a> &amp;r_hash_fn, \n-    <b>const</b> <a href=\n-\"#eq_fn80245\"><tt>eq_fn</tt></a> &amp;r_eq_fn)\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Constructor taking some policy objects. <span class=\n-          \"c1\"><tt>r_hash_fn</tt></span> will be copied by the\n-          <a href=\"#hash_fn2015995\"><tt>hash_fn</tt></a> object of\n-          the container object, and <span class=\n-          \"c1\"><tt>r_eq_fn</tt></span> will be copied by the\n-          <a href=\"#eq_fn80245\"><tt>eq_fn</tt></a> object of the\n-          container object.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-  cc_hash_table\n-  (<b>const</b> <a href=\n-\"#hash_fn2015995\"><tt>hash_fn</tt></a> &amp;r_hash_fn, \n-    <b>const</b> <a href=\n-\"#eq_fn80245\"><tt>eq_fn</tt></a> &amp;r_eq_fn, \n-    <b>const</b> <a href=\n-\"#comb_hash_fn1883611199\"><tt>comb_hash_fn</tt></a> &amp;r_comb_hash_fn)\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Constructor taking some policy objects. <span class=\n-          \"c1\"><tt>r_hash_fn</tt></span> will be copied by the\n-          <a href=\"#hash_fn2015995\"><tt>hash_fn</tt></a> object of\n-          the container object, <span class=\n-          \"c1\"><tt>r_eq_fn</tt></span> will be copied by the\n-          <a href=\"#eq_fn80245\"><tt>eq_fn</tt></a> object of the\n-          container object, and <span class=\n-          \"c1\"><tt>r_comb_hash_fn</tt></span> will be copied by the\n-          <a href=\n-          \"#comb_hash_fn1883611199\"><tt>comb_hash_fn</tt></a>\n-          object of the container object.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-  cc_hash_table\n-  (<b>const</b> <a href=\n-\"#hash_fn2015995\"><tt>hash_fn</tt></a> &amp;r_hash_fn, \n-    <b>const</b> <a href=\n-\"#eq_fn80245\"><tt>eq_fn</tt></a> &amp;r_eq_fn, \n-    <b>const</b> <a href=\n-\"#comb_hash_fn1883611199\"><tt>comb_hash_fn</tt></a> &amp;r_comb_hash_fn, \n-    <b>const</b> <a href=\n-\"#resize_policy4084493169\"><tt>resize_policy</tt></a> &amp;r_resize_policy)\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Constructor taking some policy objects. <span class=\n-          \"c1\"><tt>r_hash_fn</tt></span> will be copied by the\n-          <a href=\"#hash_fn2015995\"><tt>hash_fn</tt></a> object of\n-          the container object, <span class=\n-          \"c1\"><tt>r_eq_fn</tt></span> will be copied by the\n-          <a href=\"#eq_fn80245\"><tt>eq_fn</tt></a> object of the\n-          container object, <span class=\n-          \"c1\"><tt>r_comb_hash_fn</tt></span> will be copied by the\n-          <a href=\n-          \"#comb_hash_fn1883611199\"><tt>comb_hash_fn</tt></a>\n-          object of the container object, and <span class=\n-          \"c1\"><tt>r_resize_policy</tt></span> will be copied by\n-          the <a href=\n-          \"#resize_policy4084493169\"><tt>resize_policy</tt></a>\n-          object of the container object.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>template</b>&lt;\n-    <b>class</b> It&gt;\n-  cc_hash_table\n-  (It first_it, \n-    It last_it)\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Constructor taking iterators to a range of\n-          value_types. The value_types between <span class=\n-          \"c1\"><tt>first_it</tt></span> and <span class=\n-          \"c1\"><tt>last_it</tt></span> will be inserted into the\n-          container object.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>template</b>&lt;\n-    <b>class</b> It&gt;\n-  cc_hash_table\n-  (It first_it, \n-    It last_it,\n-    <b>const</b> <a href=\n-\"#hash_fn2015995\"><tt>hash_fn</tt></a> &amp;r_hash_fn)\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Constructor taking iterators to a range of value_types\n-          and some policy objects. The value_types between\n-          <span class=\"c1\"><tt>first_it</tt></span> and\n-          <span class=\"c1\"><tt>last_it</tt></span> will be inserted\n-          into the container object.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>template</b>&lt;\n-    <b>class</b> It&gt;\n-  cc_hash_table\n-  (It first_it, \n-    It last_it,\n-    <b>const</b> <a href=\n-\"#hash_fn2015995\"><tt>hash_fn</tt></a> &amp;r_hash_fn, \n-    <b>const</b> <a href=\n-\"#eq_fn80245\"><tt>eq_fn</tt></a> &amp;r_eq_fn)\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Constructor taking iterators to a range of value_types\n-          and some policy objects The value_types between\n-          <span class=\"c1\"><tt>first_it</tt></span> and\n-          <span class=\"c1\"><tt>last_it</tt></span> will be inserted\n-          into the container object. <span class=\n-          \"c1\"><tt>r_hash_fn</tt></span> will be copied by the\n-          <a href=\"#hash_fn2015995\"><tt>hash_fn</tt></a> object of\n-          the container object, and <span class=\n-          \"c1\"><tt>r_eq_fn</tt></span> will be copied by the\n-          <a href=\"#eq_fn80245\"><tt>eq_fn</tt></a> object of the\n-          container object.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>template</b>&lt;\n-    <b>class</b> It&gt;\n-  cc_hash_table\n-  (It first_it, \n-    It last_it,\n-    <b>const</b> <a href=\n-\"#hash_fn2015995\"><tt>hash_fn</tt></a> &amp;r_hash_fn, \n-    <b>const</b> <a href=\n-\"#eq_fn80245\"><tt>eq_fn</tt></a> &amp;r_eq_fn, \n-    <b>const</b> <a href=\n-\"#comb_hash_fn1883611199\"><tt>comb_hash_fn</tt></a> &amp;r_comb_hash_fn)\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Constructor taking iterators to a range of value_types\n-          and some policy objects The value_types between\n-          <span class=\"c1\"><tt>first_it</tt></span> and\n-          <span class=\"c1\"><tt>last_it</tt></span> will be inserted\n-          into the container object. <span class=\n-          \"c1\"><tt>r_hash_fn</tt></span> will be copied by the\n-          <a href=\"#hash_fn2015995\"><tt>hash_fn</tt></a> object of\n-          the container object, <span class=\n-          \"c1\"><tt>r_eq_fn</tt></span> will be copied by the\n-          <a href=\"#eq_fn80245\"><tt>eq_fn</tt></a> object of the\n-          container object, and <span class=\n-          \"c1\"><tt>r_comb_hash_fn</tt></span> will be copied by the\n-          <a href=\n-          \"#comb_hash_fn1883611199\"><tt>comb_hash_fn</tt></a>\n-          object of the container object.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>template</b>&lt;\n-    <b>class</b> It&gt;\n-  cc_hash_table\n-  (It first_it, \n-    It last_it,\n-    <b>const</b> <a href=\n-\"#hash_fn2015995\"><tt>hash_fn</tt></a> &amp;r_hash_fn, \n-    <b>const</b> <a href=\n-\"#eq_fn80245\"><tt>eq_fn</tt></a> &amp;r_eq_fn, \n-    <b>const</b> <a href=\n-\"#comb_hash_fn1883611199\"><tt>comb_hash_fn</tt></a> &amp;r_comb_hash_fn, \n-    <b>const</b> <a href=\n-\"#resize_policy4084493169\"><tt>resize_policy</tt></a> &amp;r_resize_policy)\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Constructor taking iterators to a range of value_types\n-          and some policy objects The value_types between\n-          <span class=\"c1\"><tt>first_it</tt></span> and\n-          <span class=\"c1\"><tt>last_it</tt></span> will be inserted\n-          into the container object. <span class=\n-          \"c1\"><tt>r_hash_fn</tt></span> will be copied by the\n-          <a href=\"#hash_fn2015995\"><tt>hash_fn</tt></a> object of\n-          the container object, <span class=\n-          \"c1\"><tt>r_eq_fn</tt></span> will be copied by the\n-          <a href=\"#eq_fn80245\"><tt>eq_fn</tt></a> object of the\n-          container object, <span class=\n-          \"c1\"><tt>r_comb_hash_fn</tt></span> will be copied by the\n-          <a href=\n-          \"#comb_hash_fn1883611199\"><tt>comb_hash_fn</tt></a>\n-          object of the container object, and <span class=\n-          \"c1\"><tt>r_resize_policy</tt></span> will be copied by\n-          the <a href=\n-          \"#resize_policy4084493169\"><tt>resize_policy</tt></a>\n-          object of the container object.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-  cc_hash_table\n-  (<b>const</b> <span class=\n-\"c2\"><tt>cc_hash_table</tt></span> &amp;other)\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Copy constructor.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>virtual</b> \n-  ~cc_hash_table\n-  ()\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Destructor.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<span class=\"c2\"><tt>cc_hash_table</tt></span> &amp;\n-  <b>operator</b>=\n-  (<b>const</b> <span class=\n-\"c2\"><tt>cc_hash_table</tt></span> &amp;other)\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Assignment operator.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>void</b>\n-  swap\n-  (<span class=\n-\"c2\"><tt>cc_hash_table</tt></span> &amp;other)\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Swaps content.</p>\n-        </td>\n-      </tr>\n-    </table>\n-\n-    <h3><a name=\"link7\" id=\"link7\">Policy Access Methods</a></h3>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Methods\">\n-      <tr>\n-        <td width=\"45%\" align=\"left\"><b>Method</b></td>\n-\n-        <td width=\"55%\" align=\"left\"><b>Description</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a href=\"#comb_hash_fn1883611199\"><tt>comb_hash_fn</tt></a> &amp;\n-  get_comb_hash_fn\n-  ()\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Access to the <a href=\n-          \"#comb_hash_fn1883611199\"><tt>comb_hash_fn</tt></a>\n-          object.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>const</b> <a href=\n-\"#comb_hash_fn1883611199\"><tt>comb_hash_fn</tt></a> &amp;\n-  get_comb_hash_fn\n-  () <b>const</b>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Const access to the <a href=\n-          \"#comb_hash_fn1883611199\"><tt>comb_hash_fn</tt></a>\n-          object.</p>\n-        </td>\n-      </tr>\n-    </table>\n-  </div>\n-</body>\n-</html>"}, {"sha": "1923e20fb42c66a4c3ed10802b93a99d3067333e", "filename": "libstdc++-v3/doc/html/ext/pb_ds/cc_hash_tag.html", "status": "removed", "additions": 0, "deletions": 47, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fcc_hash_tag.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fcc_hash_tag.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fcc_hash_tag.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7", "patch": "@@ -1,47 +0,0 @@\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n-    \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n-<head>\n-  <meta name=\"generator\" content=\n-  \"HTML Tidy for Linux/x86 (vers 12 April 2005), see www.w3.org\" />\n-\n-  <title>cc_hash_tag Interface</title>\n-  <meta http-equiv=\"Content-Type\" content=\n-  \"text/html; charset=us-ascii\" />\n-  </head>\n-\n-<body>\n-  <div id=\"page\">\n-    <h1><tt>cc_hash_tag</tt> Interface</h1>\n-\n-    <p>Collision-chaining hash data structure tag.</p>\n-\n-    <p>Defined in: <a href=\n-    \"http://gcc.gnu.org/viewcvs/*checkout*/trunk/libstdc%2B%2B-v3/include/ext/pb_ds/tag_and_trait.hpp\"><tt>tag_and_trait.hpp</tt></a></p>\n-\n-    <h2><a name=\"link1\" id=\"link1\">Base Classes</a></h2>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Bases\">\n-      <tr>\n-        <td width=\"80%\" align=\"left\"><b>Class</b></td>\n-\n-        <td width=\"20%\" align=\"left\"><b>Derivation Type</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a href=\"basic_hash_tag.html\"><span class=\n-\"c2\"><tt>basic_hash_tag</tt></span></a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>public</p>\n-        </td>\n-      </tr>\n-    </table>\n-  </div>\n-</body>\n-</html>"}, {"sha": "fde6b41bf94f13ea35145fb7a5fba18fabca9dee", "filename": "libstdc++-v3/doc/html/ext/pb_ds/ccgp_hash_random_int_subscript_timing_test_insert_gcc.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fccgp_hash_random_int_subscript_timing_test_insert_gcc.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fccgp_hash_random_int_subscript_timing_test_insert_gcc.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fccgp_hash_random_int_subscript_timing_test_insert_gcc.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "2b8c0e76d5f2453ab0e4e5cd97c0cb34103587ed", "filename": "libstdc++-v3/doc/html/ext/pb_ds/ccgp_hash_random_int_subscript_timing_test_insert_local.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fccgp_hash_random_int_subscript_timing_test_insert_local.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fccgp_hash_random_int_subscript_timing_test_insert_local.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fccgp_hash_random_int_subscript_timing_test_insert_local.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "11dca77fcfebe11183fad329103472d6cc2a2b2e", "filename": "libstdc++-v3/doc/html/ext/pb_ds/ccgp_hash_random_int_subscript_timing_test_insert_msvc.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fccgp_hash_random_int_subscript_timing_test_insert_msvc.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fccgp_hash_random_int_subscript_timing_test_insert_msvc.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fccgp_hash_random_int_subscript_timing_test_insert_msvc.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "47c2c4859c5ef857eaa98b53d509fee17deebac4", "filename": "libstdc++-v3/doc/html/ext/pb_ds/checked_by_tidy.gif", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fchecked_by_tidy.gif", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fchecked_by_tidy.gif", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fchecked_by_tidy.gif?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "9f6c22462548323b57440368cf5445d74132e79b", "filename": "libstdc++-v3/doc/html/ext/pb_ds/concepts.html", "status": "removed", "additions": 0, "deletions": 118, "changes": 118, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fconcepts.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fconcepts.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fconcepts.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7", "patch": "@@ -1,118 +0,0 @@\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\"\n-    \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n-\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n-<head>\n-  <meta name=\"generator\" content=\n-  \"HTML Tidy for Linux/x86 (vers 12 April 2005), see www.w3.org\" />\n-\n-  <title>Concepts</title>\n-  <meta http-equiv=\"Content-Type\" content=\n-  \"text/html; charset=us-ascii\" />\n-  </head>\n-\n-<body>\n-  <div id=\"page\">\n-    <h1>Concepts</h1>\n-\n-    <h2><a name=\"concepts_find_and_range_iterators\" id=\n-    \"concepts_find_and_range_iterators\">Point and Range Methods and\n-    Iterators</a></h2>\n-\n-    <p>A point-type iterator is an iterator that refers to a\n-    specific element, <i>e.g.</i> as returned through an\n-    associative-container's <tt>find</tt> method; a range-type\n-    iterator is an iterator that is used to go over a sequence of\n-    elements, <i>e.g.</i>, as returned by a container's\n-    <tt>find</tt> method. A point-type method is a method that\n-    returns a point-type iterator; a range-type method is a method\n-    that returns a range-type iterator.</p>\n-\n-    <p>For most containers, these types are synonymous; for\n-    self-organizing containers, such as hash-based containers or\n-    priority queues, these are inherently different (in any\n-    implementation, including that of the STL), but in\n-    <tt>pb_ds</tt> this is made explicit - they are distinct\n-    types.</p>\n-\n- \n-    <h2><a name=\"invalidation_guarantees\" id=\n-    \"invalidation_guarantees\">Invalidation Guarantees</a></h2>\n-\n-    <p>If one manipulates a container object, then iterators\n-    previously obtained from it can be invalidated. In some cases a\n-    previously-obtained iterator cannot be de-referenced; in other\n-    cases, the iterator's next or previous element might have\n-    changed unpredictably. This corresponds exactly to the question\n-    whether a point-type or range-type iterator (see previous\n-    concept) is valid or not. In <tt>pb_ds</tt> one can query a\n-    container (in compile time) what are its invalidation\n-    guarantees.</p>\n-\n-     <h2><a name=\"prm_sec\" id=\"prm_sec\">Primary and Secondary Keys\n-    and Associative Containers</a></h2>\n-\n-    <p>In <tt>pb_ds</tt> there are no associative containers which\n-    allow multiple values with equivalent keys (such as the STL's\n-    <tt>std::multimap</tt>, for example). Instead, one maps the\n-    unique part of a key - the primary key, into an\n-    associative-container of the (originally) non-unique parts of\n-    the key - the secondary key. A primary associative-container is\n-    an associative container of primary keys; a secondary\n-    associative-container is an associative container of secondary\n-    keys.</p>\n-\n- \n-    <h2><a name=\"concepts_null_policies\" id=\n-    \"concepts_null_policies\">Null Policy Classes</a></h2>\n-\n-    <p>Associative containers are typically parametrized by\n-    various policies. For example, a hash-based associative\n-    container is parametrized by a hash-functor, transforming each\n-    key into an non-negative numerical type. Each such value is\n-    then further mapped into a position within the table. The\n-    mapping of a key into a position within the table is therefore\n-    a two-step process.</p>\n-\n-    <p>In some cases, instantiations are <i>redundant</i>. For\n-    example, when the keys are integers, it is possible to use a\n-    <i>redundant</i> hash policy, which transforms each key into\n-    its value.</p>\n-\n-    <p>In some other cases, these policies are <i>irrelevant</i>.\n-    For example, a hash-based associative container might transform\n-    keys into positions within a table by a different method than\n-    the two-step method described above. In such a case, the hash\n-    functor is simply irrelevant.</p>\n-\n-    <p><tt>pb_ds</tt> uses special pre-defined \"null policies\"\n-    classes for these cases. Some null policies in <tt>pb_ds</tt>\n-    are:</p>\n-\n-    <ol>\n-      <li><a href=\n-      \"null_mapped_type.html\"><tt>null_mapped_type</tt></a></li>\n-\n-      <li><a href=\n-      \"null_tree_node_update.html\"><tt>null_tree_node_update</tt></a></li>\n-\n-      <li><a href=\n-      \"null_trie_node_update.html\"><tt>null_trie_node_update</tt></a></li>\n-\n-      <li><a href=\n-      \"null_hash_fn.html\"><tt>null_hash_fn</tt></a></li>\n-\n-      <li><a href=\n-      \"null_probe_fn.html\"><tt>null_probe_fn</tt></a></li>\n-    </ol>\n-\n-    <p>A \"set\" in <tt>pb_ds</tt>, for example, is an associative\n-    container with its <tt>Data_Parameter</tt> instantiated by\n-    <a href=\"null_mapped_type.html\"><tt>null_mapped_type</tt></a>.\n-    <a href=\n-    \"tree_based_containers.html#invariants\">Design::Tree-Based\n-    Containers::Node Invariants</a> explains another case where a\n-    null policy is needed.</p>\n-  </div>\n-</body>\n-</html>"}, {"sha": "3d506c975c76f02f3ebc951dc2ea4aa86be91d9c", "filename": "libstdc++-v3/doc/html/ext/pb_ds/contact.html", "status": "removed", "additions": 0, "deletions": 22, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fcontact.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fcontact.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fcontact.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7", "patch": "@@ -1,22 +0,0 @@\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\"\n-    \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n-\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n-<head>\n-  <meta name=\"generator\" content=\n-  \"HTML Tidy for Linux/x86 (vers 12 April 2005), see www.w3.org\" />\n-\n-  <title>Contact</title>\n-  <meta http-equiv=\"Content-Type\" content=\n-  \"text/html; charset=us-ascii\" />\n-  </head>\n-\n-<body>\n-  <div id=\"page\">\n-    <h1>Contact</h1>\n-\n-    <p>For anything relevant, please write to <a href=\n-    \"mailto:pbassoc@gmail.com\">pbassoc@gmail.com</a></p>\n-  </div>\n-</body>\n-</html>"}, {"sha": "359e02459b8fa33f0f782ba24357162d0e51f2f2", "filename": "libstdc++-v3/doc/html/ext/pb_ds/container_base.html", "status": "removed", "additions": 0, "deletions": 1063, "changes": 1063, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fcontainer_base.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fcontainer_base.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fcontainer_base.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7", "patch": "@@ -1,1063 +0,0 @@\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n-    \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n-<head>\n-  <meta name=\"generator\" content=\n-  \"HTML Tidy for Linux/x86 (vers 12 April 2005), see www.w3.org\" />\n-\n-  <title>container_base Interface</title>\n-  <meta http-equiv=\"Content-Type\" content=\n-  \"text/html; charset=us-ascii\" />\n-  </head>\n-\n-<body>\n-  <div id=\"page\">\n-    <h1><tt>container_base</tt> Interface</h1>\n-\n-    <p>An abstract basic associative container.</p>\n-\n-    <p>Defined in: <a href=\n-    \"http://gcc.gnu.org/viewcvs/*checkout*/trunk/libstdc%2B%2B-v3/include/ext/pb_ds/assoc_container.hpp\"><tt>assoc_container.hpp</tt></a></p>\n-\n-    <h2><a name=\"link1\" id=\"link1\">Template Parameters</a></h2>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\n-    \"Template Parameters\">\n-      <tr>\n-        <td width=\"20%\" align=\"left\"><b>Parameter</b></td>\n-\n-        <td width=\"50%\" align=\"left\"><b>Description</b></td>\n-\n-        <td width=\"30%\" align=\"left\"><b>Default Value</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"Key2501\" id=\"Key2501\"><b>typename</b> Key</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Key type.</p>\n-        </td>\n-\n-        <td>-</td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"Mapped318655\" id=\"Mapped318655\"><b>typename</b> Mapped</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Mapped type.</p>\n-        </td>\n-\n-        <td>-</td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"Tag278938\" id=\"Tag278938\"><b>class</b> Tag</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Data structure tag.</p>\n-        </td>\n-\n-        <td>-</td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"Policy_Tl42017403\" id=\n-\"Policy_Tl42017403\"><b>class</b> Policy_Tl</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Policy typelist.</p>\n-\n-          <p>Contains subclasses' policies.</p>\n-        </td>\n-\n-        <td>-</td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"Allocator35940069\" id=\n-\"Allocator35940069\"><b>class</b> Allocator</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Allocator type.</p>\n-        </td>\n-\n-        <td>-</td>\n-      </tr>\n-    </table>\n-\n-    <h2><a name=\"link2\" id=\"link2\">Public Types and\n-    Constants</a></h2>\n-\n-    <h3><a name=\"link3\" id=\"link3\">General Container\n-    Definitions</a></h3>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Types\">\n-      <tr>\n-        <td width=\"30%\" align=\"left\"><b>Type</b></td>\n-\n-        <td width=\"55%\" align=\"left\"><b>Definition</b></td>\n-\n-        <td width=\"15%\" align=\"left\"><b>Description</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"size_type55424436\" id=\"size_type55424436\">size_type</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <pre>\n-<b>typename</b> <a href=\n-\"#Allocator35940069\"><tt>Allocator</tt></a>::size_type\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Size type.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"difference_type868028452\" id=\n-\"difference_type868028452\">difference_type</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <pre>\n-<b>typename</b> <a href=\n-\"#Allocator35940069\"><tt>Allocator</tt></a>::difference_type\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Difference type.</p>\n-        </td>\n-      </tr>\n-    </table>\n-\n-    <h3><a name=\"link4\" id=\"link4\">Categories</a></h3>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Types\">\n-      <tr>\n-        <td width=\"30%\" align=\"left\"><b>Type</b></td>\n-\n-        <td width=\"55%\" align=\"left\"><b>Definition</b></td>\n-\n-        <td width=\"15%\" align=\"left\"><b>Description</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"container_category1247973216\" id=\n-\"container_category1247973216\">container_category</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <pre>\n-<a href=\"#Tag278938\"><tt>Tag</tt></a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>The underlying mapped-structure tag of the\n-          container.</p>\n-\n-          <p>This is one of:</p>\n-\n-          <ol>\n-            <li><a href=\"cc_hash_tag.html\"><span class=\n-            \"c2\"><tt>cc_hash_tag</tt></span></a></li>\n-\n-            <li><a href=\"gp_hash_tag.html\"><span class=\n-            \"c2\"><tt>gp_hash_tag</tt></span></a></li>\n-\n-            <li><a href=\"rb_tree_tag.html\"><span class=\n-            \"c2\"><tt>rb_tree_tag</tt></span></a></li>\n-\n-            <li><a href=\"ov_tree_tag.html\"><span class=\n-            \"c2\"><tt>ov_tree_tag</tt></span></a></li>\n-\n-            <li><a href=\"splay_tree_tag.html\"><span class=\n-            \"c2\"><tt>splay_tree_tag</tt></span></a></li>\n-\n-            <li><a href=\"pat_trie_tag.html\"><span class=\n-            \"c2\"><tt>pat_trie_tag</tt></span></a></li>\n-\n-            <li><a href=\"list_update_tag.html\"><span class=\n-            \"c2\"><tt>list_update_tag</tt></span></a></li>\n-          </ol>\n-        </td>\n-      </tr>\n-    </table>\n-\n-    <h3><a name=\"link5\" id=\"link5\">Policy Definitions</a></h3>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Types\">\n-      <tr>\n-        <td width=\"30%\" align=\"left\"><b>Type</b></td>\n-\n-        <td width=\"55%\" align=\"left\"><b>Definition</b></td>\n-\n-        <td width=\"15%\" align=\"left\"><b>Description</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"allocator48440069\" id=\"allocator48440069\">allocator</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <pre>\n-<a href=\"#Allocator35940069\"><tt>Allocator</tt></a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p><a href=\"#Allocator35940069\"><tt>Allocator</tt></a>\n-          type.</p>\n-        </td>\n-      </tr>\n-    </table>\n-\n-    <h3><a name=\"link6\" id=\"link6\">Key-Type Definitions</a></h3>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Types\">\n-      <tr>\n-        <td width=\"30%\" align=\"left\"><b>Type</b></td>\n-\n-        <td width=\"55%\" align=\"left\"><b>Definition</b></td>\n-\n-        <td width=\"15%\" align=\"left\"><b>Description</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"key_type10393186\" id=\"key_type10393186\">key_type</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <pre>\n-<b>typename</b> <a href=\n-\"#allocator48440069\"><tt>allocator</tt></a>::<b>template</b> rebind&lt;\n-    <a href=\"#Key2501\"><tt>Key</tt></a>&gt;::other::value_type\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p><a href=\"#Key2501\"><tt>Key</tt></a> type.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"key_reference2411522399\" id=\n-\"key_reference2411522399\">key_reference</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <pre>\n-<b>typename</b> <a href=\n-\"#allocator48440069\"><tt>allocator</tt></a>::<b>template</b> rebind&lt;\n-    <a href=\n-\"#key_type10393186\"><tt>key_type</tt></a>&gt;::other::reference\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p><a href=\"#Key2501\"><tt>Key</tt></a> reference\n-          type.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"const_key_reference3185471705\" id=\n-\"const_key_reference3185471705\">const_key_reference</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <pre>\n-<b>typename</b> <a href=\n-\"#allocator48440069\"><tt>allocator</tt></a>::<b>template</b> rebind&lt;\n-    <a href=\n-\"#key_type10393186\"><tt>key_type</tt></a>&gt;::other::const_reference\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Const key reference type.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"key_pointer1299054769\" id=\n-\"key_pointer1299054769\">key_pointer</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <pre>\n-<b>typename</b> <a href=\n-\"#allocator48440069\"><tt>allocator</tt></a>::<b>template</b> rebind&lt;\n-    <a href=\n-\"#key_type10393186\"><tt>key_type</tt></a>&gt;::other::pointer\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p><a href=\"#Key2501\"><tt>Key</tt></a> pointer type.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"const_key_pointer3735194427\" id=\n-\"const_key_pointer3735194427\">const_key_pointer</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <pre>\n-<b>typename</b> <a href=\n-\"#allocator48440069\"><tt>allocator</tt></a>::<b>template</b> rebind&lt;\n-    <a href=\n-\"#key_type10393186\"><tt>key_type</tt></a>&gt;::other::const_pointer\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Const key pointer type.</p>\n-        </td>\n-      </tr>\n-    </table>\n-\n-    <h3><a name=\"link7\" id=\"link7\">Mapped-Type Definitions</a></h3>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Types\">\n-      <tr>\n-        <td width=\"30%\" align=\"left\"><b>Type</b></td>\n-\n-        <td width=\"55%\" align=\"left\"><b>Definition</b></td>\n-\n-        <td width=\"15%\" align=\"left\"><b>Description</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"mapped_type1308374436\" id=\n-\"mapped_type1308374436\">mapped_type</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <pre>\n-<a href=\"#Mapped318655\"><tt>Mapped</tt></a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p><a href=\"#Mapped318655\"><tt>Mapped</tt></a> type.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"mapped_reference4153801225\" id=\n-\"mapped_reference4153801225\">mapped_reference</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <pre>\n-<b>typename</b> <a href=\n-\"#allocator48440069\"><tt>allocator</tt></a>::<b>template</b> rebind&lt;\n-    <a href=\n-\"#mapped_type1308374436\"><tt>mapped_type</tt></a>&gt;::other::reference\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p><a href=\"#Mapped318655\"><tt>Mapped</tt></a> reference\n-          type.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"const_mapped_reference2113216667\" id=\n-\"const_mapped_reference2113216667\">const_mapped_reference</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <pre>\n-<b>typename</b> <a href=\n-\"#allocator48440069\"><tt>allocator</tt></a>::<b>template</b> rebind&lt;\n-    <a href=\n-\"#mapped_type1308374436\"><tt>mapped_type</tt></a>&gt;::other::const_reference\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Const mapped reference type.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"mapped_pointer337953771\" id=\n-\"mapped_pointer337953771\">mapped_pointer</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <pre>\n-<b>typename</b> <a href=\n-\"#allocator48440069\"><tt>allocator</tt></a>::<b>template</b> rebind&lt;\n-    <a href=\n-\"#mapped_type1308374436\"><tt>mapped_type</tt></a>&gt;::other::pointer\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p><a href=\"#Mapped318655\"><tt>Mapped</tt></a> pointer\n-          type.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"const_mapped_pointer4207700301\" id=\n-\"const_mapped_pointer4207700301\">const_mapped_pointer</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <pre>\n-<b>typename</b> <a href=\n-\"#allocator48440069\"><tt>allocator</tt></a>::<b>template</b> rebind&lt;\n-    <a href=\n-\"#mapped_type1308374436\"><tt>mapped_type</tt></a>&gt;::other::const_pointer\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Const mapped pointer type.</p>\n-        </td>\n-      </tr>\n-    </table>\n-\n-    <h3><a name=\"link8\" id=\"link8\">Value-Type Definitions</a></h3>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Types\">\n-      <tr>\n-        <td width=\"30%\" align=\"left\"><b>Type</b></td>\n-\n-        <td width=\"55%\" align=\"left\"><b>Definition</b></td>\n-\n-        <td width=\"15%\" align=\"left\"><b>Description</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"value_type279018186\" id=\n-\"value_type279018186\">value_type</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <pre>\n-<br />\n-If <a href=\"#Mapped318655\"><tt>Mapped</tt></a> is <a href=\n-\"null_mapped_type.html\"><span class=\n-\"c2\"><tt>null_mapped_type</tt></span></a>, then <a href=\n-\"#Key2501\"><tt>Key</tt></a><br />\n-Otherwise, <a href=\"#Mapped318655\"><tt>Mapped</tt></a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Value type.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"reference54418471\" id=\"reference54418471\">reference</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <pre>\n-<b>typename</b> <a href=\n-\"#allocator48440069\"><tt>allocator</tt></a>::<b>template</b> rebind&lt;\n-    <a href=\n-\"#value_type279018186\"><tt>value_type</tt></a>&gt;::other::reference\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Value reference type.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"const_reference495461441\" id=\n-\"const_reference495461441\">const_reference</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <pre>\n-<b>typename</b> <a href=\n-\"#allocator48440069\"><tt>allocator</tt></a>::<b>template</b> rebind&lt;\n-    <a href=\n-\"#value_type279018186\"><tt>value_type</tt></a>&gt;::other::const_reference\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Const value <a href=\n-          \"#reference54418471\"><tt>reference</tt></a> type.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"pointer2179769\" id=\"pointer2179769\">pointer</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <pre>\n-<b>typename</b> <a href=\n-\"#allocator48440069\"><tt>allocator</tt></a>::<b>template</b> rebind&lt;\n-    <a href=\n-\"#value_type279018186\"><tt>value_type</tt></a>&gt;::other::pointer\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Value pointer type.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"const_pointer878814947\" id=\n-\"const_pointer878814947\">const_pointer</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <pre>\n-<b>typename</b> <a href=\n-\"#allocator48440069\"><tt>allocator</tt></a>::<b>template</b> rebind&lt;\n-    <a href=\n-\"#value_type279018186\"><tt>value_type</tt></a>&gt;::other::const_pointer\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Const Value <a href=\n-          \"#pointer2179769\"><tt>pointer</tt></a> type.</p>\n-        </td>\n-      </tr>\n-    </table>\n-\n-    <h3><a name=\"link9\" id=\"link9\">Iterator Definitions</a></h3>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Types\">\n-      <tr>\n-        <td width=\"30%\" align=\"left\"><b>Type</b></td>\n-\n-        <td width=\"55%\" align=\"left\"><b>Definition</b></td>\n-\n-        <td width=\"15%\" align=\"left\"><b>Description</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"const_point_iterator2364676009\" id=\n-\"const_point_iterator2364676009\">const_point_iterator</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <pre>\n-Const point-type iterator.\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Const point-type iterator.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"point_iterator2789896775\" id=\n-\"point_iterator2789896775\">point_iterator</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <pre>\n-<br />\n-Point-type iterator.<br />\n-If <a href=\"#Mapped318655\"><tt>Mapped</tt></a> is <a href=\n-\"null_mapped_type.html\"><span class=\n-\"c2\"><tt>null_mapped_type</tt></span></a>, then this is synonymous to <a href=\"#const_point_iterator2364676009\"><tt>const_point_iterator</tt></a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Point-type iterator.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"const_iterator98626788\" id=\n-\"const_iterator98626788\">const_iterator</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <pre>\n-Const range-type iterator.\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Const range-type iterator.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"iterator10418194\" id=\"iterator10418194\">iterator</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <pre>\n-<br />\n-Range-type iterator.<br />\n-If <a href=\"#Mapped318655\"><tt>Mapped</tt></a> is <a href=\n-\"null_mapped_type.html\"><span class=\n-\"c2\"><tt>null_mapped_type</tt></span></a>, then this is synonymous to <a href=\"#const_iterator98626788\"><tt>const_iterator</tt></a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Range-type iterator.</p>\n-        </td>\n-      </tr>\n-    </table>\n-\n-    <h2><a name=\"link10\" id=\"link10\">Public Methods</a></h2>\n-\n-    <h3><a name=\"link11\" id=\"link11\">Constructors, Destructor, and\n-    Related</a></h3>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Methods\">\n-      <tr>\n-        <td width=\"45%\" align=\"left\"><b>Method</b></td>\n-\n-        <td width=\"55%\" align=\"left\"><b>Description</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>virtual</b> \n-  ~container_base\n-  ()\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Destructor.</p>\n-        </td>\n-      </tr>\n-    </table>\n-\n-    <h3><a name=\"link12\" id=\"link12\">Information Methods</a></h3>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Methods\">\n-      <tr>\n-        <td width=\"45%\" align=\"left\"><b>Method</b></td>\n-\n-        <td width=\"55%\" align=\"left\"><b>Description</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>inline</b> <a href=\"#size_type55424436\"><tt>size_type</tt></a>\n-  size\n-  () <b>const</b>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Returns the number of distinct <a href=\n-          \"#value_type279018186\"><tt>value_type</tt></a> objects\n-          the container object is storing.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>inline</b> <a href=\"#size_type55424436\"><tt>size_type</tt></a>\n-  max_size\n-  () <b>const</b>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Returns an upper bound on the number of distinct\n-          <a href=\"#value_type279018186\"><tt>value_type</tt></a>\n-          objects this container can store.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>inline</b> <b>bool</b>\n-  empty\n-  () <b>const</b>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Returns whether the container object is not storing\n-          any <a href=\n-          \"#value_type279018186\"><tt>value_type</tt></a>\n-          objects.</p>\n-        </td>\n-      </tr>\n-    </table>\n-\n-    <h3><a name=\"link13\" id=\"link13\">Insert Methods</a></h3>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Methods\">\n-      <tr>\n-        <td width=\"45%\" align=\"left\"><b>Method</b></td>\n-\n-        <td width=\"55%\" align=\"left\"><b>Description</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-std::pair&lt;<a href=\n-\"#point_iterator2789896775\"><tt>point_iterator</tt></a>, <b>bool</b>&gt;\n-  insert\n-  (<a href=\n-\"#const_reference495461441\"><tt>const_reference</tt></a> r_val)\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Inserts a <a href=\n-          \"#value_type279018186\"><tt>value_type</tt></a> object. If\n-          no <a href=\"#value_type279018186\"><tt>value_type</tt></a>\n-          with <span class=\"c1\"><tt>r_val</tt></span>'s key was in\n-          the container object, inserts and returns (<a href=\n-          \"#point_iterator2789896775\"><tt>point_iterator</tt></a>\n-          object associated with <span class=\n-          \"c1\"><tt>r_val</tt></span>, <tt><b>true</b></tt>);\n-          otherwise just returns (<a href=\n-          \"#point_iterator2789896775\"><tt>point_iterator</tt></a>\n-          object associated with <span class=\n-          \"c1\"><tt>r_val</tt></span>'s key,\n-          <tt><b>false</b></tt>).</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a href=\"#mapped_reference4153801225\"><tt>mapped_reference</tt></a>\n-  <b>operator</b>[]\n-  (<a href=\n-\"#const_key_reference3185471705\"><tt>const_key_reference</tt></a> r_key)\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Subscript operator.</p>\n-        </td>\n-      </tr>\n-    </table>\n-\n-    <h3><a name=\"link14\" id=\"link14\">Find Methods</a></h3>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Methods\">\n-      <tr>\n-        <td width=\"45%\" align=\"left\"><b>Method</b></td>\n-\n-        <td width=\"55%\" align=\"left\"><b>Description</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a href=\"#point_iterator2789896775\"><tt>point_iterator</tt></a> \n-  find\n-  (<a href=\n-\"#const_key_reference3185471705\"><tt>const_key_reference</tt></a> r_key)\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Returns the <a href=\n-          \"#point_iterator2789896775\"><tt>point_iterator</tt></a>\n-          corresponding to the <a href=\n-          \"#value_type279018186\"><tt>value_type</tt></a> with\n-          <span class=\"c1\"><tt>r_key</tt></span> as its key, or the\n-          <a href=\n-          \"#point_iterator2789896775\"><tt>point_iterator</tt></a>\n-          corresponding to the just-after-last entry if no such\n-          <a href=\n-          \"#value_type279018186\"><tt>value_type</tt></a>.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a href=\n-\"#const_point_iterator2364676009\"><tt>const_point_iterator</tt></a> \n-  find\n-  (<a href=\n-\"#const_key_reference3185471705\"><tt>const_key_reference</tt></a> r_key) <b>const</b>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Returns the <a href=\n-          \"#const_point_iterator2364676009\"><tt>const_point_iterator</tt></a>\n-          corresponding to the <a href=\n-          \"#value_type279018186\"><tt>value_type</tt></a> with\n-          <span class=\"c1\"><tt>r_key</tt></span> as its key, or the\n-          <a href=\n-          \"#const_point_iterator2364676009\"><tt>const_point_iterator</tt></a>\n-          corresponding to the just-after-last entry if no such\n-          <a href=\n-          \"#value_type279018186\"><tt>value_type</tt></a>.</p>\n-        </td>\n-      </tr>\n-    </table>\n-\n-    <h3><a name=\"link15\" id=\"link15\">Erase Methods</a></h3>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Methods\">\n-      <tr>\n-        <td width=\"45%\" align=\"left\"><b>Method</b></td>\n-\n-        <td width=\"55%\" align=\"left\"><b>Description</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>bool</b>\n-  erase\n-  (<a href=\n-\"#const_key_reference3185471705\"><tt>const_key_reference</tt></a> r_key)\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Erases the <a href=\n-          \"#value_type279018186\"><tt>value_type</tt></a> associated\n-          with <span class=\"c1\"><tt>r_key</tt></span>. returns\n-          <tt><b>false</b></tt> iff <span class=\n-          \"c1\"><tt>r_key</tt></span> was not contained.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>template</b>&lt;\n-  <b>class</b> Pred&gt;\n-<a href=\"#size_type55424436\"><tt>size_type</tt></a> \n-  erase_if\n-  (Pred prd)\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Erases any <a href=\n-          \"#value_type279018186\"><tt>value_type</tt></a> satisfying\n-          the predicate <span class=\"c1\"><tt>prd</tt></span> (this\n-          is transactional, either all matching <a href=\n-          \"#value_type279018186\"><tt>value_type</tt></a>s are\n-          erased, or, if an exception is thrown (for types whose\n-          erase can throw an exception) none); returns the number\n-          of <a href=\n-          \"#value_type279018186\"><tt>value_type</tt></a>s\n-          erased.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>void</b> \n-  clear\n-  ()\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Clears the container object.</p>\n-        </td>\n-      </tr>\n-    </table>\n-\n-    <h3><a name=\"link16\" id=\"link16\">Iteration Methods</a></h3>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Methods\">\n-      <tr>\n-        <td width=\"45%\" align=\"left\"><b>Method</b></td>\n-\n-        <td width=\"55%\" align=\"left\"><b>Description</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a href=\"#iterator10418194\"><tt>iterator</tt></a>\n-  begin\n-  ()\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Returns an <a href=\n-          \"#iterator10418194\"><tt>iterator</tt></a> corresponding\n-          to the first <a href=\n-          \"#value_type279018186\"><tt>value_type</tt></a> in the\n-          container.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a href=\"#const_iterator98626788\"><tt>const_iterator</tt></a>\n-  begin\n-  () <b>const</b>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Returns a <a href=\n-          \"#const_iterator98626788\"><tt>const_iterator</tt></a>\n-          corresponding to the first <a href=\n-          \"#value_type279018186\"><tt>value_type</tt></a> in the\n-          container.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a href=\"#iterator10418194\"><tt>iterator</tt></a>\n-  end\n-  ()\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Returns an <a href=\n-          \"#iterator10418194\"><tt>iterator</tt></a> corresponding\n-          to the just-after-last <a href=\n-          \"#value_type279018186\"><tt>value_type</tt></a> in the\n-          container.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a href=\"#const_iterator98626788\"><tt>const_iterator</tt></a>\n-  end\n-  () <b>const</b>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Returns a <a href=\n-          \"#const_iterator98626788\"><tt>const_iterator</tt></a>\n-          corresponding to the just-after-last <a href=\n-          \"#value_type279018186\"><tt>value_type</tt></a> in the\n-          container.</p>\n-        </td>\n-      </tr>\n-    </table>\n-  </div>\n-</body>\n-</html>"}, {"sha": "52553278cac2614875adc035c8b109bcff3631b2", "filename": "libstdc++-v3/doc/html/ext/pb_ds/container_cd.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fcontainer_cd.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fcontainer_cd.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fcontainer_cd.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "3b5a9818967db89ec1898aa41988e907a4f67cc3", "filename": "libstdc++-v3/doc/html/ext/pb_ds/container_cd.svg", "status": "removed", "additions": 0, "deletions": 418, "changes": 418, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fcontainer_cd.svg", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fcontainer_cd.svg", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fcontainer_cd.svg?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7", "patch": "@@ -1,418 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!-- Created with Inkscape (http://www.inkscape.org/) -->\n-<svg\n-   xmlns:dc=\"http://purl.org/dc/elements/1.1/\"\n-   xmlns:cc=\"http://web.resource.org/cc/\"\n-   xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n-   xmlns:svg=\"http://www.w3.org/2000/svg\"\n-   xmlns=\"http://www.w3.org/2000/svg\"\n-   xmlns:sodipodi=\"http://inkscape.sourceforge.net/DTD/sodipodi-0.dtd\"\n-   xmlns:inkscape=\"http://www.inkscape.org/namespaces/inkscape\"\n-   width=\"11in\"\n-   height=\"8.5in\"\n-   id=\"svg2\"\n-   sodipodi:version=\"0.32\"\n-   inkscape:version=\"0.43\"\n-   version=\"1.0\"\n-   sodipodi:docbase=\"/mnt/share/src/policy_based_data_structures/current/pb_ds/doc\"\n-   sodipodi:docname=\"container_cd.svg\"\n-   inkscape:export-filename=\"/mnt/share/src/policy_based_data_structures/current/pb_ds/doc/container_cd.png\"\n-   inkscape:export-xdpi=\"90\"\n-   inkscape:export-ydpi=\"90\">\n-  <defs\n-     id=\"defs4\">\n-    <marker\n-       inkscape:stockid=\"Arrow1Mstart\"\n-       orient=\"auto\"\n-       refY=\"0.0\"\n-       refX=\"0.0\"\n-       id=\"Arrow1Mstart\"\n-       style=\"overflow:visible\">\n-      <path\n-         id=\"path3311\"\n-         d=\"M 0.0,0.0 L 5.0,-5.0 L -12.5,0.0 L 5.0,5.0 L 0.0,0.0 z \"\n-         style=\"fill-rule:evenodd;stroke:#000000;stroke-width:1.0pt;marker-start:none\"\n-         transform=\"scale(0.4)\" />\n-    </marker>\n-    <marker\n-       inkscape:stockid=\"Arrow2Sstart\"\n-       orient=\"auto\"\n-       refY=\"0\"\n-       refX=\"0\"\n-       id=\"Arrow2Sstart\"\n-       style=\"overflow:visible\">\n-      <path\n-         id=\"path3319\"\n-         style=\"font-size:12px;fill-rule:evenodd;stroke-width:0.625;stroke-linejoin:round\"\n-         d=\"M 8.7185878,4.0337352 L -2.2072895,0.016013256 L 8.7185884,-4.0017078 C 6.97309,-1.6296469 6.9831476,1.6157441 8.7185878,4.0337352 z \"\n-         transform=\"matrix(0.3,0,0,0.3,-1.5,0)\" />\n-    </marker>\n-    <marker\n-       inkscape:stockid=\"Arrow1Sstart\"\n-       orient=\"auto\"\n-       refY=\"0\"\n-       refX=\"0\"\n-       id=\"Arrow1Sstart\"\n-       style=\"overflow:visible\">\n-      <path\n-         id=\"path3337\"\n-         d=\"M 0,0 L 5,-5 L -12.5,0 L 5,5 L 0,0 z \"\n-         style=\"fill-rule:evenodd;stroke:#000000;stroke-width:1pt;marker-start:none\"\n-         transform=\"scale(0.2,0.2)\" />\n-    </marker>\n-    <marker\n-       inkscape:stockid=\"Arrow2Send\"\n-       orient=\"auto\"\n-       refY=\"0\"\n-       refX=\"0\"\n-       id=\"Arrow2Send\"\n-       style=\"overflow:visible\">\n-      <path\n-         id=\"path3316\"\n-         style=\"font-size:12px;fill-rule:evenodd;stroke-width:0.625;stroke-linejoin:round\"\n-         d=\"M 8.7185878,4.0337352 L -2.2072895,0.016013256 L 8.7185884,-4.0017078 C 6.97309,-1.6296469 6.9831476,1.6157441 8.7185878,4.0337352 z \"\n-         transform=\"matrix(-0.3,0,0,-0.3,1.5,0)\" />\n-    </marker>\n-    <marker\n-       inkscape:stockid=\"Arrow2Mend\"\n-       orient=\"auto\"\n-       refY=\"0\"\n-       refX=\"0\"\n-       id=\"Arrow2Mend\"\n-       style=\"overflow:visible\">\n-      <path\n-         id=\"path3322\"\n-         style=\"font-size:12px;fill-rule:evenodd;stroke-width:0.625;stroke-linejoin:round\"\n-         d=\"M 8.7185878,4.0337352 L -2.2072895,0.016013256 L 8.7185884,-4.0017078 C 6.97309,-1.6296469 6.9831476,1.6157441 8.7185878,4.0337352 z \"\n-         transform=\"matrix(-0.6,0,0,-0.6,3,0)\" />\n-    </marker>\n-    <marker\n-       inkscape:stockid=\"Arrow1Lend\"\n-       orient=\"auto\"\n-       refY=\"0\"\n-       refX=\"0\"\n-       id=\"Arrow1Lend\"\n-       style=\"overflow:visible\">\n-      <path\n-         id=\"path3346\"\n-         d=\"M 0,0 L 5,-5 L -12.5,0 L 5,5 L 0,0 z \"\n-         style=\"fill-rule:evenodd;stroke:#000000;stroke-width:1pt;marker-start:none\"\n-         transform=\"scale(-0.8,-0.8)\" />\n-    </marker>\n-    <marker\n-       inkscape:stockid=\"Arrow2Lstart\"\n-       orient=\"auto\"\n-       refY=\"0\"\n-       refX=\"0\"\n-       id=\"Arrow2Lstart\"\n-       style=\"overflow:visible\">\n-      <path\n-         id=\"path3331\"\n-         style=\"font-size:12px;fill-rule:evenodd;stroke-width:0.625;stroke-linejoin:round\"\n-         d=\"M 8.7185878,4.0337352 L -2.2072895,0.016013256 L 8.7185884,-4.0017078 C 6.97309,-1.6296469 6.9831476,1.6157441 8.7185878,4.0337352 z \"\n-         transform=\"matrix(1.1,0,0,1.1,-5.5,0)\" />\n-    </marker>\n-    <marker\n-       inkscape:stockid=\"Arrow2Lend\"\n-       orient=\"auto\"\n-       refY=\"0\"\n-       refX=\"0\"\n-       id=\"Arrow2Lend\"\n-       style=\"overflow:visible\">\n-      <path\n-         id=\"path3328\"\n-         style=\"font-size:12px;fill-rule:evenodd;stroke-width:0.625;stroke-linejoin:round\"\n-         d=\"M 8.7185878,4.0337352 L -2.2072895,0.016013256 L 8.7185884,-4.0017078 C 6.97309,-1.6296469 6.9831476,1.6157441 8.7185878,4.0337352 z \"\n-         transform=\"matrix(-1.1,0,0,-1.1,5.5,0)\" />\n-    </marker>\n-  </defs>\n-  <sodipodi:namedview\n-     id=\"base\"\n-     pagecolor=\"#ffffff\"\n-     bordercolor=\"#666666\"\n-     borderopacity=\"1.0\"\n-     inkscape:pageopacity=\"0.0\"\n-     inkscape:pageshadow=\"2\"\n-     inkscape:zoom=\"2\"\n-     inkscape:cx=\"396.81316\"\n-     inkscape:cy=\"280\"\n-     inkscape:document-units=\"in\"\n-     inkscape:current-layer=\"layer1\"\n-     showguides=\"true\"\n-     inkscape:guide-bbox=\"true\"\n-     inkscape:window-width=\"1278\"\n-     inkscape:window-height=\"973\"\n-     inkscape:window-x=\"0\"\n-     inkscape:window-y=\"0\"\n-     gridtolerance=\"0.125in\"\n-     guidetolerance=\"0.125in\">\n-    <sodipodi:guide\n-       orientation=\"horizontal\"\n-       position=\"629\"\n-       id=\"guide1307\" />\n-    <sodipodi:guide\n-       orientation=\"horizontal\"\n-       position=\"449\"\n-       id=\"guide1309\" />\n-    <sodipodi:guide\n-       orientation=\"horizontal\"\n-       position=\"269\"\n-       id=\"guide1311\" />\n-    <sodipodi:guide\n-       orientation=\"vertical\"\n-       position=\"496\"\n-       id=\"guide1313\" />\n-    <sodipodi:guide\n-       orientation=\"vertical\"\n-       position=\"361\"\n-       id=\"guide1315\" />\n-    <sodipodi:guide\n-       orientation=\"vertical\"\n-       position=\"226\"\n-       id=\"guide1317\" />\n-    <sodipodi:guide\n-       orientation=\"vertical\"\n-       position=\"631\"\n-       id=\"guide1319\" />\n-    <sodipodi:guide\n-       orientation=\"vertical\"\n-       position=\"766\"\n-       id=\"guide1321\" />\n-    <sodipodi:guide\n-       orientation=\"vertical\"\n-       position=\"91\"\n-       id=\"guide1345\" />\n-    <sodipodi:guide\n-       orientation=\"vertical\"\n-       position=\"901\"\n-       id=\"guide1347\" />\n-    <sodipodi:guide\n-       orientation=\"horizontal\"\n-       position=\"539\"\n-       id=\"guide3390\" />\n-    <sodipodi:guide\n-       orientation=\"horizontal\"\n-       position=\"359\"\n-       id=\"guide3392\" />\n-    <sodipodi:guide\n-       orientation=\"vertical\"\n-       position=\"280.5\"\n-       id=\"guide3324\" />\n-    <sodipodi:guide\n-       orientation=\"vertical\"\n-       position=\"172\"\n-       id=\"guide3326\" />\n-    <sodipodi:guide\n-       orientation=\"vertical\"\n-       position=\"388\"\n-       id=\"guide3328\" />\n-    <sodipodi:guide\n-       orientation=\"vertical\"\n-       position=\"711.5\"\n-       id=\"guide3340\" />\n-  </sodipodi:namedview>\n-  <metadata\n-     id=\"metadata7\">\n-    <rdf:RDF>\n-      <cc:Work\n-         rdf:about=\"\">\n-        <dc:format>image/svg+xml</dc:format>\n-        <dc:type\n-           rdf:resource=\"http://purl.org/dc/dcmitype/StillImage\" />\n-        <dc:creator>\n-          <cc:Agent>\n-            <dc:title>Benjamin Kosnik</dc:title>\n-          </cc:Agent>\n-        </dc:creator>\n-      </cc:Work>\n-    </rdf:RDF>\n-  </metadata>\n-  <g\n-     inkscape:label=\"Layer 1\"\n-     inkscape:groupmode=\"layer\"\n-     id=\"layer1\">\n-    <rect\n-       style=\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:1.25;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\"\n-       id=\"rect1425\"\n-       width=\"141.64481\"\n-       height=\"23.200001\"\n-       x=\"209.57762\"\n-       y=\"382.56177\" />\n-    <rect\n-       y=\"382.56177\"\n-       x=\"425.57761\"\n-       height=\"23.200001\"\n-       width=\"141.64481\"\n-       id=\"rect3376\"\n-       style=\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:1.25;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\" />\n-    <rect\n-       style=\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:1.25;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\"\n-       id=\"rect3378\"\n-       width=\"141.64481\"\n-       height=\"23.200001\"\n-       x=\"640.77765\"\n-       y=\"382.56177\" />\n-    <text\n-       sodipodi:linespacing=\"100%\"\n-       id=\"use1329\"\n-       y=\"397.09772\"\n-       x=\"497.20001\"\n-       style=\"font-size:9.60000038px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:center;line-height:100%;writing-mode:lr-tb;text-anchor:middle;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;font-family:Bitstream Vera Sans\"\n-       xml:space=\"preserve\"><tspan\n-         sodipodi:role=\"line\"\n-         id=\"tspan1703\"\n-         x=\"497.20001\"\n-         y=\"397.09772\">list_update</tspan><tspan\n-         sodipodi:role=\"line\"\n-         id=\"tspan1705\"\n-         x=\"497.20001\"\n-         y=\"406.69772\" /></text>\n-    <text\n-       xml:space=\"preserve\"\n-       style=\"font-size:9.60000038px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:center;line-height:100%;writing-mode:lr-tb;text-anchor:middle;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1.25;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;font-family:Bitstream Vera Sans\"\n-       x=\"712.40002\"\n-       y=\"397.09772\"\n-       id=\"use1337\"\n-       sodipodi:linespacing=\"100%\"><tspan\n-         sodipodi:role=\"line\"\n-         id=\"tspan1707\"\n-         x=\"712.40002\"\n-         y=\"397.09772\">basic_hash_table</tspan></text>\n-    <text\n-       xml:space=\"preserve\"\n-       style=\"font-size:9.60000038px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:center;line-height:100%;writing-mode:lr-tb;text-anchor:middle;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;font-family:Bitstream Vera Sans\"\n-       x=\"282\"\n-       y=\"397.09772\"\n-       id=\"text1339\"\n-       sodipodi:linespacing=\"100%\"><tspan\n-         sodipodi:role=\"line\"\n-         id=\"tspan1701\"\n-         x=\"282\"\n-         y=\"397.09772\">basic_tree</tspan></text>\n-    <rect\n-       style=\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:1.25;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\"\n-       id=\"rect3418\"\n-       width=\"141.64481\"\n-       height=\"23.200001\"\n-       x=\"101.57762\"\n-       y=\"472.5618\" />\n-    <rect\n-       y=\"472.5618\"\n-       x=\"317.57761\"\n-       height=\"23.200001\"\n-       width=\"141.64481\"\n-       id=\"rect3420\"\n-       style=\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:1.25;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\" />\n-    <rect\n-       style=\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:1.25;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\"\n-       id=\"rect3422\"\n-       width=\"141.64481\"\n-       height=\"23.200001\"\n-       x=\"533.57764\"\n-       y=\"472.5618\" />\n-    <rect\n-       y=\"472.5618\"\n-       x=\"748.77765\"\n-       height=\"23.200001\"\n-       width=\"141.64481\"\n-       id=\"rect3424\"\n-       style=\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:1.25;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\" />\n-    <text\n-       xml:space=\"preserve\"\n-       style=\"font-size:9.60000038;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:center;line-height:100%;writing-mode:lr;text-anchor:middle;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;font-family:Bitstream Vera Sans\"\n-       x=\"171.20001\"\n-       y=\"486.29773\"\n-       id=\"text3394\"\n-       sodipodi:linespacing=\"100%\"><tspan\n-         sodipodi:role=\"line\"\n-         id=\"tspan1715\"\n-         x=\"171.20001\"\n-         y=\"486.29773\">tree</tspan><tspan\n-         sodipodi:role=\"line\"\n-         id=\"tspan1717\"\n-         x=\"171.20001\"\n-         y=\"495.89773\" /></text>\n-    <text\n-       sodipodi:linespacing=\"100%\"\n-       id=\"text3400\"\n-       y=\"486.29773\"\n-       x=\"386.39999\"\n-       style=\"font-size:9.60000038;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:center;line-height:100%;writing-mode:lr;text-anchor:middle;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;font-family:Bitstream Vera Sans\"\n-       xml:space=\"preserve\"><tspan\n-         sodipodi:role=\"line\"\n-         id=\"tspan1709\"\n-         x=\"386.39999\"\n-         y=\"486.29773\">trie</tspan><tspan\n-         sodipodi:role=\"line\"\n-         id=\"tspan1711\"\n-         x=\"386.39999\"\n-         y=\"495.89773\" /></text>\n-    <text\n-       sodipodi:linespacing=\"100%\"\n-       id=\"text3406\"\n-       y=\"486.29773\"\n-       x=\"601.20001\"\n-       style=\"font-size:9.60000038px;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:center;line-height:100%;writing-mode:lr-tb;text-anchor:middle;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1.25;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;font-family:Bitstream Vera Sans\"\n-       xml:space=\"preserve\"><tspan\n-         sodipodi:role=\"line\"\n-         id=\"tspan1713\"\n-         x=\"601.20001\"\n-         y=\"486.29773\">cc_hash_table</tspan></text>\n-    <text\n-       xml:space=\"preserve\"\n-       style=\"font-size:9.60000038;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:center;line-height:100%;writing-mode:lr;text-anchor:middle;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1.25;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;font-family:Bitstream Vera Sans\"\n-       x=\"818\"\n-       y=\"486.29773\"\n-       id=\"text3412\"\n-       sodipodi:linespacing=\"100%\"><tspan\n-         sodipodi:role=\"line\"\n-         id=\"tspan1719\"\n-         x=\"818\"\n-         y=\"486.29773\">gp_hash_table</tspan></text>\n-    <rect\n-       style=\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:1.25;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\"\n-       id=\"rect3380\"\n-       width=\"141.64481\"\n-       height=\"23.200001\"\n-       x=\"425.57764\"\n-       y=\"292.56177\" />\n-    <text\n-       xml:space=\"preserve\"\n-       style=\"font-size:9.60000038;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:center;line-height:100%;writing-mode:lr;text-anchor:middle;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1.5625;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;font-family:Bitstream Vera Sans\"\n-       x=\"497.20001\"\n-       y=\"307.09772\"\n-       id=\"text1323\"\n-       sodipodi:linespacing=\"100%\"\n-       inkscape:export-xdpi=\"90\"\n-       inkscape:export-ydpi=\"90\"\n-       inkscape:export-filename=\"/mnt/share/src/policy_based_data_structures/pb_ds_images/container_diagram.png\"><tspan\n-         sodipodi:role=\"line\"\n-         id=\"tspan1369\"\n-         x=\"497.20001\"\n-         y=\"307.09772\">container_base</tspan></text>\n-    <path\n-       style=\"fill:none;fill-opacity:0.75;fill-rule:evenodd;stroke:#000000;stroke-width:0.97031623px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\"\n-       d=\"M 170.97058,472.5 L 170.97058,451 L 387.51871,450 L 387.51871,472.5\"\n-       id=\"path2244\" />\n-    <path\n-       style=\"fill:none;fill-opacity:0.75;fill-rule:evenodd;stroke:#000000;stroke-width:1.25;stroke-linecap:butt;stroke-linejoin:miter;marker-end:url(#Arrow2Mend);stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\"\n-       d=\"M 280.5,450.53297 L 280.5,410.62445\"\n-       id=\"path3332\" />\n-    <path\n-       id=\"path3353\"\n-       d=\"M 601.47058,472.5 L 601.47058,451 L 818.01871,450 L 818.01871,472.5\"\n-       style=\"fill:none;fill-opacity:0.75;fill-rule:evenodd;stroke:#000000;stroke-width:0.97031623px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\" />\n-    <path\n-       id=\"path3355\"\n-       d=\"M 711,450.53297 L 711,410.62445\"\n-       style=\"fill:none;fill-opacity:0.75;fill-rule:evenodd;stroke:#000000;stroke-width:1.25;stroke-linecap:butt;stroke-linejoin:miter;marker-end:url(#Arrow2Mend);stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\" />\n-    <path\n-       id=\"path3344\"\n-       d=\"M 281.18218,383.28102 L 281.18218,361.78102 L 711.79281,360.78102 L 711.79281,383.28102\"\n-       style=\"fill:none;fill-opacity:0.75;fill-rule:evenodd;stroke:#000000;stroke-width:1.3682909px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1\" />\n-    <path\n-       id=\"path3347\"\n-       d=\"M 497.75146,383.49616 L 497.75146,322.77107\"\n-       style=\"fill:none;fill-opacity:0.75;fill-rule:evenodd;stroke:#000000;stroke-width:1.25;stroke-linecap:butt;stroke-linejoin:miter;marker-end:url(#Arrow2Mend);stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\" />\n-  </g>\n-</svg>"}, {"sha": "de187a94dab8a33f996aa259330d7ac47c8da5df", "filename": "libstdc++-v3/doc/html/ext/pb_ds/container_tag.html", "status": "removed", "additions": 0, "deletions": 24, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fcontainer_tag.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fcontainer_tag.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fcontainer_tag.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7", "patch": "@@ -1,24 +0,0 @@\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\"\n-    \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n-\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n-<head>\n-  <meta name=\"generator\" content=\n-  \"HTML Tidy for Linux/x86 (vers 12 April 2005), see www.w3.org\" />\n-\n-  <title>container _tag Interface</title>\n-  <meta http-equiv=\"Content-Type\" content=\n-  \"text/html; charset=us-ascii\" />\n-  </head>\n-\n-<body>\n-  <div id=\"page\">\n-    <h1><tt>container _tag</tt> Interface</h1>\n-\n-    <p>Basic data structure tag.</p>\n-\n-    <p>Defined in: <a href=\n-    \"http://gcc.gnu.org/viewcvs/*checkout*/trunk/libstdc%2B%2B-v3/include/ext/pb_ds/tag_and_trait.hpp\"><tt>tag_and_trait.hpp</tt></a></p>\n-  </div>\n-</body>\n-</html>"}, {"sha": "d9d5112c03bdf7bba4dc1cd62ec81a3229475e6e", "filename": "libstdc++-v3/doc/html/ext/pb_ds/counter_lu_policy.html", "status": "removed", "additions": 0, "deletions": 259, "changes": 259, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fcounter_lu_policy.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fcounter_lu_policy.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fcounter_lu_policy.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7", "patch": "@@ -1,259 +0,0 @@\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n-    \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n-<head>\n-  <meta name=\"generator\" content=\n-  \"HTML Tidy for Linux/x86 (vers 12 April 2005), see www.w3.org\" />\n-\n-  <title>counter_lu_policy Interface</title>\n-  <meta http-equiv=\"Content-Type\" content=\n-  \"text/html; charset=us-ascii\" />\n-  </head>\n-\n-<body>\n-  <div id=\"page\">\n-    <h1><tt>counter_lu_policy</tt> Interface</h1>\n-\n-    <p>A list-update policy that moves elements to the front of the\n-    list based on the counter algorithm.</p>\n-\n-    <p>Defined in: <a href=\n-    \"http://gcc.gnu.org/viewcvs/*checkout*/trunk/libstdc%2B%2B-v3/include/ext/pb_ds/list_update_policy.hpp\"><tt>list_update_policy.hpp</tt></a></p>\n-\n-    <h2><a name=\"link1\" id=\"link1\">Template Parameters</a></h2>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\n-    \"Template Parameters\">\n-      <tr>\n-        <td width=\"20%\" align=\"left\"><b>Parameter</b></td>\n-\n-        <td width=\"50%\" align=\"left\"><b>Description</b></td>\n-\n-        <td width=\"30%\" align=\"left\"><b>Default Value</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"Max_Count39887466\" id=\n-\"Max_Count39887466\">size_t Max_Count </a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Maximum count.</p>\n-\n-          <p>When some element is accessed this number of times, it\n-          will be moved to the front of the list.</p>\n-        </td>\n-\n-        <td>5</td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"Allocator35940069\" id=\n-\"Allocator35940069\"><b>class</b> Allocator </a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Allocator type.</p>\n-\n-          <p>This is used only for definitions, e.g., the size\n-          type.</p>\n-        </td>\n-\n-        <td>\n-          <pre>\n-std::allocator&lt;<b>char</b>&gt;\n-</pre>\n-        </td>\n-      </tr>\n-    </table>\n-\n-    <h2><a name=\"link2\" id=\"link2\">Public Types and\n-    Constants</a></h2>\n-\n-    <h3><a name=\"link3\" id=\"link3\">Policy Definitions</a></h3>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Types\">\n-      <tr>\n-        <td width=\"30%\" align=\"left\"><b>Type</b></td>\n-\n-        <td width=\"55%\" align=\"left\"><b>Definition</b></td>\n-\n-        <td width=\"15%\" align=\"left\"><b>Description</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"allocator48440069\" id=\"allocator48440069\">allocator</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <pre>\n-<a href=\"#Allocator35940069\"><tt>Allocator</tt></a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p><a href=\"#Allocator35940069\"><tt>Allocator</tt></a>\n-          type.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"max_count52407466\" id=\"max_count52407466\">max_count</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <pre>\n-<a href=\"#Max_Count39887466\"><tt>Max_Count</tt></a>\n-}\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Maximum count.</p>\n-        </td>\n-      </tr>\n-    </table>\n-\n-    <h3><a name=\"link4\" id=\"link4\">General Definitions</a></h3>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Types\">\n-      <tr>\n-        <td width=\"30%\" align=\"left\"><b>Type</b></td>\n-\n-        <td width=\"55%\" align=\"left\"><b>Definition</b></td>\n-\n-        <td width=\"15%\" align=\"left\"><b>Description</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"size_type55424436\" id=\"size_type55424436\">size_type</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <pre>\n-<b>typename</b> <a href=\n-\"#allocator48440069\"><tt>allocator</tt></a>::size_type\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Size type.</p>\n-        </td>\n-      </tr>\n-    </table>\n-\n-    <h3><a name=\"link5\" id=\"link5\">Metadata-Type\n-    Definitions</a></h3>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Types\">\n-      <tr>\n-        <td width=\"30%\" align=\"left\"><b>Type</b></td>\n-\n-        <td width=\"55%\" align=\"left\"><b>Definition</b></td>\n-\n-        <td width=\"15%\" align=\"left\"><b>Description</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"metadata_type2849297114\" id=\n-\"metadata_type2849297114\">metadata_type</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <pre>\n-Some class containing a counter.\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Metadata on which this functor operates.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"metadata_reference583863863\" id=\n-\"metadata_reference583863863\">metadata_reference</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <pre>\n-<b>typename</b> <a href=\n-\"#Allocator35940069\"><tt>Allocator</tt></a>::<b>template</b> rebind&lt;\n-    <a href=\n-\"#metadata_type2849297114\"><tt>metadata_type</tt></a>&gt;::other::reference\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Reference to metadata on which this functor\n-          operates.</p>\n-        </td>\n-      </tr>\n-    </table>\n-\n-    <h2><a name=\"link6\" id=\"link6\">Public Methods</a></h2>\n-\n-    <h3><a name=\"link7\" id=\"link7\">Metadata Methods</a></h3>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Methods\">\n-      <tr>\n-        <td width=\"45%\" align=\"left\"><b>Method</b></td>\n-\n-        <td width=\"55%\" align=\"left\"><b>Description</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a href=\"#metadata_type2849297114\"><tt>metadata_type</tt></a>\n-  <b>operator</b>()\n-  () <b>const</b>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Creates a metadata object.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>bool</b> \n-  <b>operator</b>()\n-  (<a href=\n-\"#metadata_reference583863863\"><tt>metadata_reference</tt></a> r_metadata) <b>const</b>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Decides whether a metadata object should be moved to\n-          the front of the list.</p>\n-        </td>\n-      </tr>\n-    </table>\n-  </div>\n-</body>\n-</html>"}, {"sha": "e83bd4dd20a86c6d45daf14bd361708102889e42", "filename": "libstdc++-v3/doc/html/ext/pb_ds/design.html", "status": "removed", "additions": 0, "deletions": 96, "changes": 96, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fdesign.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fdesign.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fdesign.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7", "patch": "@@ -1,96 +0,0 @@\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\"\n-    \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n-\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n-<head>\n-  <meta name=\"generator\" content=\n-  \"HTML Tidy for Linux/x86 (vers 12 April 2005), see www.w3.org\" />\n-\n-  <title>Design</title>\n-  <meta http-equiv=\"Content-Type\" content=\n-  \"text/html; charset=us-ascii\" />\n-  </head>\n-\n-<body>\n-  <div id=\"page\">\n-    <h1>Design</h1>\n-\n-    <p>The <tt>pb_ds</tt> namespace contains:</p>\n-\n-    <ol>\n-      <li>Exception classes (see <a href=\n-      \"interface.html#exceptions_common\">Interface::Exceptions::Common</a>)</li>\n-\n-      <li>Invalidation-guarantee tags (see <a href=\n-      \"ds_gen.html#inv_guar\">Design::Invalidation Guarantees</a>\n-      and <a href=\n-      \"interface.html#ds_inv_tag\">Interface::Data-Structure Tags\n-      and Traits::Invalidation-Guarantee Tags</a>).</li>\n-\n-      <li>Associative Containers (see <a href=\n-      \"tree_based_containers.html\">Design::Associative\n-      Containers::Tree-Based Containers</a>, <a href=\n-      \"trie_based_containers.html\">Design::Associative\n-      Containers::Trie-Based Containers</a>, <a href=\n-      \"hash_based_containers.html\">Design::Associative\n-      Containers::Hash-Based Containers</a>, and <a href=\n-      \"lu_based_containers.html\">Design::Associative\n-      Containers::List-Based Containers</a>, and <a href=\n-      \"interface.html#containers_assoc\">Interface::Containers::Associative\n-      Containers</a>).</li>\n-\n-      <li>Associative Container tags and traits\n-      (see <a href=\"ds_gen.html\">Design::Associative\n-      Containers::Data-Structure Genericity</a>, <a href=\n-      \"interface.html#ds_ts_assoc\">Interface::Data-Structure Tags\n-      and Traits::Data-Structure Tags::Associative-Containers</a>,\n-      and <a href=\n-      \"interface.html#container_traits\">Interface::Data-Structure Tags and\n-      Traits::Data-Structure\n-      Traits::Associative-Containers</a>).</li>\n-\n-     <li>Associative Container policies (see\n-      <a href=\"tree_based_containers.html\">Design::Associative\n-      Containers::Tree-Based Containers</a>, <a href=\n-      \"trie_based_containers.html\">Design::Associative\n-      Containers::Trie-Based Containers</a>, <a href=\n-      \"hash_based_containers.html\">Design::Associative\n-      Containers::Hash-Based Containers</a>, and <a href=\n-      \"lu_based_containers.html\">Design::Associative\n-      Containers::List-Based Containers</a>, and <a href=\n-      \"interface.html#ds_policy_classes\">Interface::Container\n-      Policy Classes</a>).</li>\n-\n-\n-      <li>Mapped types for setting the mapping semantics of\n-      associative containers (see <a href=\n-      \"tutorial.html#assoc_ms\">Tutorial::Associative\n-      Containers::Associative Containers Others than Maps</a> and\n-      <a href=\"interface.html#ds_pol\">Interface::Mapped-Type\n-      Policies</a>).</li>\n-\n-\n-      <li>Priority Queues (see <a href=\"pq_design.html\">Design::Priority\n-      Queues</a> and <a href=\n-      \"interface.html#containers_pq\">Interface::Containers::Priority\n-      Queues</a>).</li>\n-\n-      <li>Priority Queue tags and traits\n-      (see <a href=\"pq_design.html#pq_traits\">Design::Priority\n-      Queues::Traits</a>, <a href=\n-      \"interface.html#ds_ts_pq\">Interface::Data-Structure Tags and\n-      Traits::Data-Structure Tags::Priority Queues</a>, and\n-      <a href=\"interface.html#container_traits\">Interface::Data-Structure\n-      Tags and Traits::Data-Structure Traits::Priority\n-      Queues</a>).</li>\n-   </ol>\n-\n-\n-    <p><a href=\"assoc_design.html\">Associative-Container Design</a>\n-    describes associative-container design.</p>\n-\n-    <p><a href=\"pq_design.html\">Priority-Queue Design</a> describes\n-    priority-queue design.</p>\n-  </div>\n-</body>\n-</html>"}, {"sha": "19f8621c22056de3dd3cdced88ba543c9fa3b1b7", "filename": "libstdc++-v3/doc/html/ext/pb_ds/direct_mask_range_hashing.html", "status": "removed", "additions": 0, "deletions": 167, "changes": 167, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fdirect_mask_range_hashing.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fdirect_mask_range_hashing.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fdirect_mask_range_hashing.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7", "patch": "@@ -1,167 +0,0 @@\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n-    \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n-<head>\n-  <meta name=\"generator\" content=\n-  \"HTML Tidy for Linux/x86 (vers 12 April 2005), see www.w3.org\" />\n-\n-  <title>direct_mask_range_hashing Interface</title>\n-  <meta http-equiv=\"Content-Type\" content=\n-  \"text/html; charset=us-ascii\" />\n-  </head>\n-\n-<body>\n-  <div id=\"page\">\n-    <h1><tt>direct_mask_range_hashing</tt> Interface</h1>\n-\n-    <p>A mask range-hashing class (uses a bit-mask).</p>\n-\n-    <p>Defined in: <a href=\n-    \"http://gcc.gnu.org/viewcvs/*checkout*/trunk/libstdc%2B%2B-v3/include/ext/pb_ds/hash_policy.hpp\"><tt>hash_policy.hpp</tt></a></p>\n-\n-    <h2><a name=\"link1\" id=\"link1\">Template Parameters</a></h2>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\n-    \"Template Parameters\">\n-      <tr>\n-        <td width=\"20%\" align=\"left\"><b>Parameter</b></td>\n-\n-        <td width=\"50%\" align=\"left\"><b>Description</b></td>\n-\n-        <td width=\"30%\" align=\"left\"><b>Default Value</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"Size_Type42920436\" id=\n-\"Size_Type42920436\"><b>typename</b> Size_Type </a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Size type.</p>\n-        </td>\n-\n-        <td>size_t</td>\n-      </tr>\n-    </table>\n-\n-    <h2><a name=\"link2\" id=\"link2\">Public Types and\n-    Constants</a></h2>\n-\n-    <h3><a name=\"link3\" id=\"link3\">General Definitions</a></h3>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Types\">\n-      <tr>\n-        <td width=\"30%\" align=\"left\"><b>Type</b></td>\n-\n-        <td width=\"55%\" align=\"left\"><b>Definition</b></td>\n-\n-        <td width=\"15%\" align=\"left\"><b>Description</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"size_type55424436\" id=\"size_type55424436\">size_type</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <pre>\n-<a href=\"#Size_Type42920436\"><tt>Size_Type</tt></a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Size type.</p>\n-        </td>\n-      </tr>\n-    </table>\n-\n-    <h2><a name=\"link4\" id=\"link4\">Public Methods</a></h2>\n-\n-    <h3><a name=\"link5\" id=\"link5\">Constructors, Destructor, and\n-    Related</a></h3>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Methods\">\n-      <tr>\n-        <td width=\"45%\" align=\"left\"><b>Method</b></td>\n-\n-        <td width=\"55%\" align=\"left\"><b>Description</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>void</b>\n-  swap\n-  (<span class=\n-\"c2\"><tt>direct_mask_range_hashing</tt></span> &amp;other)\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Swaps content.</p>\n-        </td>\n-      </tr>\n-    </table>\n-\n-    <h2><a name=\"link6\" id=\"link6\">Protected Methods</a></h2>\n-\n-    <h3><a name=\"link7\" id=\"link7\">Notification Methods</a></h3>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Methods\">\n-      <tr>\n-        <td width=\"45%\" align=\"left\"><b>Method</b></td>\n-\n-        <td width=\"55%\" align=\"left\"><b>Description</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>void</b> \n-  notify_resized\n-  (<a href=\"#size_type55424436\"><tt>size_type</tt></a> size)\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Notifies the policy object that the container's size\n-          has changed to <span class=\"c1\"><tt>size</tt></span>.</p>\n-        </td>\n-      </tr>\n-    </table>\n-\n-    <h3><a name=\"link8\" id=\"link8\">Operators.</a></h3>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Methods\">\n-      <tr>\n-        <td width=\"45%\" align=\"left\"><b>Method</b></td>\n-\n-        <td width=\"55%\" align=\"left\"><b>Description</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>inline</b> <a href=\"#size_type55424436\"><tt>size_type</tt></a>\n-  <b>operator</b>()\n-  (<a href=\n-\"#size_type55424436\"><tt>size_type</tt></a> hash) <b>const</b>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Transforms the hash value <span class=\n-          \"c1\"><tt>hash</tt></span> into a ranged-hash value (using\n-          a bit-mask).</p>\n-        </td>\n-      </tr>\n-    </table>\n-  </div>\n-</body>\n-</html>"}, {"sha": "f3f9295d4310e7bd785302f628e89aa8f8a419c8", "filename": "libstdc++-v3/doc/html/ext/pb_ds/direct_mod_range_hashing.html", "status": "removed", "additions": 0, "deletions": 144, "changes": 144, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fdirect_mod_range_hashing.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fdirect_mod_range_hashing.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fdirect_mod_range_hashing.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7", "patch": "@@ -1,144 +0,0 @@\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n-    \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n-<head>\n-  <meta name=\"generator\" content=\n-  \"HTML Tidy for Linux/x86 (vers 12 April 2005), see www.w3.org\" />\n-\n-  <title>direct_mod_range_hashing Interface</title>\n-  <meta http-equiv=\"Content-Type\" content=\n-  \"text/html; charset=us-ascii\" />\n-  </head>\n-\n-<body>\n-  <div id=\"page\">\n-    <h1><tt>direct_mod_range_hashing</tt> Interface</h1>\n-\n-    <p>A mod range-hashing class (uses the modulo function).</p>\n-\n-    <p>Defined in: <a href=\n-    \"http://gcc.gnu.org/viewcvs/*checkout*/trunk/libstdc%2B%2B-v3/include/ext/pb_ds/hash_policy.hpp\"><tt>hash_policy.hpp</tt></a></p>\n-\n-    <h2><a name=\"link1\" id=\"link1\">Template Parameters</a></h2>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\n-    \"Template Parameters\">\n-      <tr>\n-        <td width=\"20%\" align=\"left\"><b>Parameter</b></td>\n-\n-        <td width=\"50%\" align=\"left\"><b>Description</b></td>\n-\n-        <td width=\"30%\" align=\"left\"><b>Default Value</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"Size_Type42920436\" id=\n-\"Size_Type42920436\"><b>typename</b> Size_Type </a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Size type.</p>\n-        </td>\n-\n-        <td>size_t</td>\n-      </tr>\n-    </table>\n-\n-    <h2><a name=\"link2\" id=\"link2\">Public Types and\n-    Constants</a></h2>\n-\n-    <h3><a name=\"link3\" id=\"link3\">General Definitions</a></h3>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Types\">\n-      <tr>\n-        <td width=\"30%\" align=\"left\"><b>Type</b></td>\n-\n-        <td width=\"55%\" align=\"left\"><b>Definition</b></td>\n-\n-        <td width=\"15%\" align=\"left\"><b>Description</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"size_type55424436\" id=\"size_type55424436\">size_type</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <pre>\n-<a href=\"#Size_Type42920436\"><tt>Size_Type</tt></a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Size type.</p>\n-        </td>\n-      </tr>\n-    </table>\n-\n-    <h2><a name=\"link4\" id=\"link4\">Public Methods</a></h2>\n-\n-    <h3><a name=\"link5\" id=\"link5\">Constructors, Destructor, and\n-    Related</a></h3>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Methods\">\n-      <tr>\n-        <td width=\"45%\" align=\"left\"><b>Method</b></td>\n-\n-        <td width=\"55%\" align=\"left\"><b>Description</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>void</b>\n-  swap\n-  (<span class=\n-\"c2\"><tt>direct_mod_range_hashing</tt></span> &amp;other)\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Swaps content.</p>\n-        </td>\n-      </tr>\n-    </table>\n-\n-    <h2><a name=\"link6\" id=\"link6\">Protected Methods</a></h2>\n-\n-    <h3><a name=\"link7\" id=\"link7\">Notification Methods</a></h3>\n-\n-    <h3><a name=\"link8\" id=\"link8\">Operators.</a></h3>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Methods\">\n-      <tr>\n-        <td width=\"45%\" align=\"left\"><b>Method</b></td>\n-\n-        <td width=\"55%\" align=\"left\"><b>Description</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>inline</b> <a href=\"#size_type55424436\"><tt>size_type</tt></a>\n-  <b>operator</b>()\n-  (<a href=\n-\"#size_type55424436\"><tt>size_type</tt></a> hash) <b>const</b>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Transforms the hash value <span class=\n-          \"c1\"><tt>hash</tt></span> into a ranged-hash value (using\n-          a modulo operation).</p>\n-        </td>\n-      </tr>\n-    </table>\n-  </div>\n-</body>\n-</html>"}, {"sha": "681af4edf7201c73e4feedbe998dfd796827fddd", "filename": "libstdc++-v3/doc/html/ext/pb_ds/disclaimer.html", "status": "removed", "additions": 0, "deletions": 34, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fdisclaimer.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fdisclaimer.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fdisclaimer.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7", "patch": "@@ -1,34 +0,0 @@\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\"\n-    \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n-\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n-<head>\n-  <meta name=\"generator\" content=\n-  \"HTML Tidy for Linux/x86 (vers 12 April 2005), see www.w3.org\" />\n-\n-  <title>What, me worry?</title>\n-  <meta http-equiv=\"Content-Type\" content=\n-  \"text/html; charset=us-ascii\" />\n-  </head>\n-\n-<body>\n-  <div id=\"page\">\n-    <h2>Disclaimer and Copyright</h2>\n-\n-    <p>Revised 16 February, 2004</p>&copy; Copyright Ami Tavory and\n-    Vladimir Dreizin, IBM-HRL, 2004, and Benjamin Kosnik, Red Hat,\n-    2004.\n-\n-    <p>Permission to use, copy, modify, sell, and distribute this\n-    software is hereby granted without fee, provided that the above\n-    copyright notice appears in all copies, and that both that\n-    copyright notice and this permission notice appear in\n-    supporting documentation.</p>\n-\n-    <p>None of the above authors, nor IBM Haifa Research\n-    Laboratories, Red Hat, or both, make any representation about\n-    the suitability of this software for any purpose. It is\n-    provided \"as is\" without express or implied warranty.</p>\n-  </div>\n-</body>\n-</html>"}, {"sha": "ec99c4d5f7ef1c8b948651c65c58feef4513e76c", "filename": "libstdc++-v3/doc/html/ext/pb_ds/ds_gen.html", "status": "removed", "additions": 0, "deletions": 344, "changes": 344, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fds_gen.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fds_gen.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fds_gen.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7", "patch": "@@ -1,344 +0,0 @@\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n-    \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n-<head>\n-  <meta name=\"generator\" content=\n-  \"HTML Tidy for Linux/x86 (vers 12 April 2005), see www.w3.org\" />\n-\n-  <title>Data-Structure Genericity</title>\n-  <meta http-equiv=\"Content-Type\" content=\n-  \"text/html; charset=us-ascii\" />\n-  </head>\n-\n-<body>\n-  <div id=\"page\">\n-    <h1>Data-Structure Genericity</h1>\n-\n-    <h2><a name=\"problem\" id=\"problem\">The Basic Problem</a></h2>\n-\n-    <p>The design attempts to address the following problem. When\n-    writing a function manipulating a generic container object,\n-    what is the behavior of the object? <i>E.g.</i>, suppose one\n-    writes</p>\n-    <pre>\n-<b>template</b>&lt;<b>typename</b> Cntnr&gt;\n-<b>void</b>\n-some_op_sequence(Cntnr &amp;r_container)\n-{\n-    ...\n-}\n-</pre>then one needs to address the following questions in the body\n-of <tt>some_op_sequence</tt>:\n-\n-    <ol>\n-      <li>Which types and methods does <tt>Cntnr</tt> support?\n-      Containers based on hash tables can be queries for the\n-      hash-functor type and object; this is meaningless for\n-      tree-based containers. Containers based on trees can be\n-      split, joined, or can erase iterators and return the\n-      following iterator; this cannot be done by hash-based\n-      containers.</li>\n-\n-      <li>What are the guarantees of <tt>Cntnr</tt>? A container\n-      based on a probing hash-table invalidates all iterators when\n-      it is modified; this is not the case for containers based on\n-      node-based trees. Containers based on a node-based tree can\n-      be split or joined without exceptions; this is not the case\n-      for containers based on vector-based trees.</li>\n-\n-      <li>How does the container maintain its elements? Tree-based\n-      and Trie-based containers store elements by key order;\n-      others, typically, do not. A container based on a splay trees\n-      or lists with update policies \"cache\" \"frequently accessed\"\n-      elements; containers based on most other underlying\n-      data structures do not.</li>\n-    </ol>\n-\n-    <p>The remainder of this section deals with these issues.</p>\n-\n-    <h2><a name=\"ds_hierarchy\" id=\"ds_hierarchy\">Container\n-    Hierarchy</a></h2>\n-\n-    <p>Figure <a href=\"#cd\">Container class hierarchy</a> shows the\n-    container hierarchy.</p>\n-\n-    <h6 class=\"c1\"><a name=\"cd\" id=\"cd\"><img src=\"container_cd.png\" alt=\n-    \"no image\" /></a></h6>\n-\n-    <h6 class=\"c1\">Container class hierarchy.</h6>\n-\n-    <ol>\n-      <li><a href=\n-      \"container_base.html\"><tt>container_base</tt></a> is an\n-      abstract base class for associative containers.</li>\n-\n-      <li>Tree-Like-Based Associative-Containers:\n-\n-        <ol>\n-          <li><a href=\n-          \"basic_tree.html\"><tt>basic_tree</tt></a>\n-          is an abstract base class for tree-like-based\n-          associative-containers</li>\n-\n-          <li><a href=\n-          \"tree.html\"><tt>tree</tt></a>\n-          is a concrete base class for tree-based\n-          associative-containers</li>\n-\n-          <li><a href=\n-          \"trie.html\"><tt>trie</tt></a>\n-          is a concrete base class trie-based\n-          associative-containers</li>\n-        </ol>\n-      </li>\n-\n-      <li>Hash-Based Associative-Containers:\n-\n-        <ol>\n-          <li><a href=\n-          \"basic_hash_table.html\"><tt>basic_hash_table</tt></a>\n-          is an abstract base class for hash-based\n-          associative-containers</li>\n-\n-          <li><a href=\n-          \"cc_hash_table.html\"><tt>cc_hash_table</tt></a>\n-          is a concrete collision-chaining hash-based\n-          associative-containers</li>\n-\n-          <li><a href=\n-          \"gp_hash_table.html\"><tt>gp_hash_table</tt></a>\n-          is a concrete (general) probing hash-based\n-          associative-containers</li>\n-        </ol>\n-      </li>\n-\n-      <li>List-Based Associative-Containers:\n-\n-        <ol>\n-          <li><a href=\n-          \"list_update.html\"><tt>list_update</tt></a> -\n-          list-based update-policy associative container</li>\n-        </ol>\n-      </li>\n-    </ol>\n-\n-    <p>The hierarchy is composed naturally so that commonality is\n-    captured by base classes. Thus <tt><b>operator[]</b></tt> is\n-    defined <a href=\n-    \"container_base.html\"><tt>container_base</tt></a>, since\n-    all containers support it. Conversely <tt>split</tt> is defined\n-    in <a href=\n-    \"basic_tree.html\"><tt>basic_tree</tt></a>,\n-    since only tree-like containers support it. <a href=\n-    \"#container_traits\">Data-Structure Tags and Traits</a> discusses how\n-    to query which types and methods each container supports.</p>\n-\n-    <h2><a name=\"container_traits\" id=\"container_traits\">Data-Structure Tags and\n-    Traits</a></h2>\n-\n-    <p>Tags and traits are very useful for manipulating generic\n-    types. For example, if <tt>It</tt> is an iterator class, then\n-    <tt><b>typename</b> It::iterator_category</tt> or\n-    <tt><b>typename</b>\n-    std::iterator_traits&lt;It&gt;::iterator_category</tt> will\n-    yield its category, and <tt><b>typename</b>\n-    std::iterator_traits&lt;It&gt;::value_type</tt> will yield its\n-    value type.</p>\n-\n-    <p><tt>pb_ds</tt> contains a tag hierarchy corresponding to the\n-    hierarchy in Figure <a href=\"#cd\">Class hierarchy</a>. The tag\n-    hierarchy is shown in Figure <a href=\n-    \"#tag_cd\">Data-structure tag class hierarchy</a>.</p>\n-\n-    <h6 class=\"c1\"><a name=\"tag_cd\" id=\"tag_cd\"><img src=\n-    \"assoc_container_tag_cd.png\" alt=\"no image\" /></a></h6>\n-\n-    <h6 class=\"c1\">Data-structure tag class hierarchy.</h6>\n-\n-    <p><a href=\n-    \"container_base.html\"><tt>container_base</tt></a>\n-    publicly defines <tt>container_category</tt> as one of the classes in\n-    Figure <a href=\"#tag_cd\">Data-structure tag class\n-    hierarchy</a>. Given any container <tt>Cntnr</tt>, the tag of\n-    the underlying data structure can be found via\n-    <tt><b>typename</b> Cntnr::container_category</tt>.</p>\n-\n-    <p>Additionally, a traits mechanism can be used to query a\n-    container type for its attributes. Given any container\n-    <tt>Cntnr</tt>, then <tt><a href=\n-    \"assoc_container_traits.html\">__gnu_pbds::container_traits</a>&lt;Cntnr&gt;</tt>\n-    is a traits class identifying the properties of the\n-    container.</p>\n-\n-    <p>To find if a container can throw when a key is erased (which\n-    is true for vector-based trees, for example), one can\n-    use</p><a href=\n-    \"assoc_container_traits.html\"><tt>container_traits</tt></a><tt>&lt;Cntnr&gt;::erase_can_throw</tt>,\n-    for example.\n-\n-    <p>Some of the definitions in <a href=\n-    \"assoc_container_traits.html\"><tt>container_traits</tt></a> are\n-    dependent on other definitions. <i>E.g.</i>, if <a href=\n-    \"assoc_container_traits.html\"><tt>container_traits</tt></a><tt>&lt;Cntnr&gt;::order_preserving</tt>\n-    is <tt><b>true</b></tt> (which is the case for containers based\n-    on trees and tries), then the container can be split or joined;\n-    in this case, <a href=\n-    \"assoc_container_traits.html\"><tt>container_traits</tt></a><tt>&lt;Cntnr&gt;::split_join_can_throw</tt>\n-    indicates whether splits or joins can throw exceptions (which\n-    is true for vector-based trees); otherwise <a href=\n-    \"assoc_container_traits.html\"><tt>container_traits</tt></a><tt>&lt;Cntnr&gt;::split_join_can_throw</tt>\n-    will yield a compilation error. (This is somewhat similar to a\n-    compile-time version of the COM model [<a href=\n-    \"references.html#mscom\">mscom</a>]).</p>\n-\n-    <h2><a name=\"find_range\" id=\"find_range\">Point-Type and\n-    Range-Type Methods and Iterators</a></h2>\n-\n-    <h3><a name=\"it_unordered\" id=\"it_unordered\">Iterators in\n-    Unordered Container Types</a></h3>\n-\n-    <p><tt>pb_ds</tt> differentiates between two types of methods\n-    and iterators: point-type methods and iterators, and range-type\n-    methods and iterators (see <a href=\n-    \"motivation.html#assoc_diff_it\">Motivation::Associative\n-    Containers::Differentiating between Iterator Types</a> and\n-    <a href=\"tutorial.html#assoc_find_range\">Tutorial::Associative\n-    Containers::Point-Type and Range-Type Methods and\n-    Iterators</a>). Each associative container's interface includes\n-    the methods:</p>\n-    <pre>\n-const_point_iterator\n-find(const_key_reference r_key) const;                \n-\n-point_iterator\n-find(const_key_reference r_key);         \n-    \n-std::pair&lt;point_iterator,<b>bool</b>&gt;\n-insert(const_reference r_val);\n-</pre>\n-\n-    <p>The relationship between these iterator types varies between\n-    container types. Figure <a href=\n-    \"#point_iterators_cd\">Point-type and range-type iterators</a>-A\n-    shows the most general invariant between point-type and\n-    range-type iterators: <tt>iterator</tt>, <i>e.g.</i>, can\n-    always be converted to <tt>point_iterator</tt>. Figure <a href=\n-    \"#point_iterators_cd\">Point-type and range-type iterators</a>-B\n-    shows invariants for order-preserving containers: point-type\n-    iterators are synonymous with range-type iterators.\n-    Orthogonally, Figure <a href=\"#point_iterators_cd\">Point-type\n-    and range-type iterators</a>-C shows invariants for \"set\"\n-    containers: iterators are synonymous with const iterators.</p>\n-\n-    <h6 class=\"c1\"><a name=\"point_iterators_cd\" id=\n-    \"point_iterators_cd\"><img src=\"point_iterators_cd.png\" alt=\n-    \"no image\" /></a></h6>\n-\n-    <h6 class=\"c1\">Point-type and range-type iterators.</h6>\n-\n-    <p>Note that point-type iterators in self-organizing containers\n-    (<i>e.g.</i>, hash-based associative containers) lack movement\n-    operators, such as <tt><b>operator++</b></tt> - in fact, this\n-    is the reason why <tt>pb_ds</tt> differentiates from the STL's\n-    design on this point.</p>\n-\n-    <p>Typically, one can determine an iterator's movement\n-    capabilities in the STL using\n-    <tt>std::iterator_traits&lt;It&gt;iterator_category</tt>, which\n-    is a <tt><b>struct</b></tt> indicating the iterator's movement\n-    capabilities. Unfortunately, none of the STL's predefined\n-    categories reflect a pointer's <u>not</u> having any movement\n-    capabilities whatsoever. Consequently, <tt>pb_ds</tt> adds a\n-    type <a href=\n-    \"trivial_iterator_tag.html\"><tt>trivial_iterator_tag</tt></a>\n-    (whose name is taken from a concept in [<a href=\n-    \"references.html#sgi_stl\">sgi_stl</a>]), which is the category\n-    of iterators with no movement capabilities. All other STL tags,\n-    such as <tt>forward_iterator_tag</tt> retain their common\n-    use.</p>\n-\n-    <h3><a name=\"inv_guar\" id=\"inv_guar\">Invalidation\n-    Guarantees</a></h3>\n-\n-    <p><a href=\n-    \"motivation.html#assoc_inv_guar\">Motivation::Associative\n-    Containers::Differentiating between Iterator\n-    Types::Invalidation Guarantees</a> posed a problem. Given three\n-    different types of associative containers, a modifying\n-    operation (in that example, <tt>erase</tt>) invalidated\n-    iterators in three different ways: the iterator of one\n-    container remained completely valid - it could be de-referenced\n-    and incremented; the iterator of a different container could\n-    not even be de-referenced; the iterator of the third container\n-    could be de-referenced, but its \"next\" iterator changed\n-    unpredictably.</p>\n-\n-    <p>Distinguishing between find and range types allows\n-    fine-grained invalidation guarantees, because these questions\n-    correspond exactly to the question of whether point-type\n-    iterators and range-type iterators are valid. <a href=\n-    \"#invalidation_guarantee_cd\">Invalidation guarantees class\n-    hierarchy</a> shows tags corresponding to different types of\n-    invalidation guarantees.</p>\n-\n-    <h6 class=\"c1\"><a name=\"invalidation_guarantee_cd\" id=\n-    \"invalidation_guarantee_cd\"><img src=\n-    \"invalidation_guarantee_cd.png\" alt=\"no image\" /></a></h6>\n-\n-    <h6 class=\"c1\">Invalidation guarantees class hierarchy.</h6>\n-\n-    <ol>\n-      <li><a href=\n-      \"basic_invalidation_guarantee.html\"><tt>basic_invalidation_guarantee</tt></a>\n-      corresponds to a basic guarantee that a point-type iterator,\n-      a found pointer, or a found reference, remains valid as long\n-      as the container object is not modified.</li>\n-\n-      <li><a href=\n-      \"point_invalidation_guarantee.html\"><tt>point_invalidation_guarantee</tt></a>\n-      corresponds to a guarantee that a point-type iterator, a\n-      found pointer, or a found reference, remains valid even if\n-      the container object is modified.</li>\n-\n-      <li><a href=\n-      \"range_invalidation_guarantee.html\"><tt>range_invalidation_guarantee</tt></a>\n-      corresponds to a guarantee that a range-type iterator remains\n-      valid even if the container object is modified.</li>\n-    </ol>\n-\n-    <p>As shown in <a href=\n-    \"tutorial.html#assoc_find_range\">Tutorial::Associative\n-    Containers::Point-Type and Range-Type Methods and\n-    Iterators</a>, to find the invalidation guarantee of a\n-    container, one can use</p>\n-    <pre>\n-<b>typename</b> <a href=\n-\"assoc_container_traits.html\">container_traits</a>&lt;Cntnr&gt;::invalidation_guarantee\n-</pre>\n-\n-    <p>which is one of the classes in Figure <a href=\n-    \"#invalidation_guarantee_cd\">Invalidation guarantees class\n-    hierarchy</a>.</p>\n-\n-    <p>Note that this hierarchy corresponds to the logic it\n-    represents: if a container has range-invalidation guarantees,\n-    then it must also have find invalidation guarantees;\n-    correspondingly, its invalidation guarantee (in this case\n-    <a href=\n-    \"range_invalidation_guarantee.html\"><tt>range_invalidation_guarantee</tt></a>)\n-    can be cast to its base class (in this case <a href=\n-    \"point_invalidation_guarantee.html\"><tt>point_invalidation_guarantee</tt></a>).\n-    This means that this this hierarchy can be used easily using\n-    standard metaprogramming techniques, by specializing on the\n-    type of <tt>invalidation_guarantee</tt>.</p>\n-\n-    <p>(These types of problems were addressed, in a more general\n-    setting, in [<a href=\n-    \"references.html#meyers96more\">meyers96more</a>] - Item 2. In\n-    our opinion, an invalidation-guarantee hierarchy would solve\n-    these problems in all container types - not just associative\n-    containers.)</p>\n-  </div>\n-</body>\n-</html>"}, {"sha": "03c7a39100370c1cffd14457a405d6bb4bbb4688", "filename": "libstdc++-v3/doc/html/ext/pb_ds/examples.html", "status": "removed", "additions": 0, "deletions": 24, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fexamples.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fexamples.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fexamples.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7", "patch": "@@ -1,24 +0,0 @@\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\"\n-    \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n-\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n-<head>\n-  <meta name=\"generator\" content=\n-  \"HTML Tidy for Linux/x86 (vers 12 April 2005), see www.w3.org\" />\n-\n-  <title>Examples</title>\n-  <meta http-equiv=\"Content-Type\" content=\n-  \"text/html; charset=us-ascii\" />\n-  </head>\n-\n-<body>\n-  <div id=\"page\">\n-    <h1>Examples</h1>\n-\n-    <p><a href=\"assoc_examples.html\">Associative-Container\n-    Examples</a> shows examples for associative containers;\n-    <a href=\"pq_examples.html\">Priority-Queue Examples</a> shows\n-    examples for priority queues.</p>\n-  </div>\n-</body>\n-</html>"}, {"sha": "a51e8ebe0b089002ce4c4b314c0cb55872dbcfb2", "filename": "libstdc++-v3/doc/html/ext/pb_ds/exceptions.html", "status": "removed", "additions": 0, "deletions": 46, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fexceptions.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fexceptions.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fexceptions.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7", "patch": "@@ -1,46 +0,0 @@\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n- \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n-<head>\n-<meta name=\"generator\" content=\n- \"HTML Tidy for Linux/x86 (vers 12 April 2005), see www.w3.org\" />\n-\n-<title>container_error Interface</title>\n-<meta http-equiv=\"Content-Type\" content=\n- \"text/html; charset=us-ascii\" />\n-</head>\n-\n-<body>\n-<div id=\"page\">\n-<h1><tt>container_error</tt> Interface</h1>\n-\n-<p>Base class for associative-container exceptions.</p>\n-\n-<p>Defined in: <a href=\n-\t\t\"http://gcc.gnu.org/viewcvs/*checkout*/trunk/libstdc%2B%2B-v3/include/ext/pb_ds/exception.hpp\"><tt>exception.hpp</tt></a></p>\n-\n-<h2><a name=\"link1\" id=\"link1\">Base Classes</a></h2>\n-\n-<table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Bases\">\n-<tr>\n-<td width=\"80%\" align=\"left\"><b>Class</b></td>\n-\n-<td width=\"20%\" align=\"left\"><b>Derivation Type</b></td>\n-</tr>\n-\n-<tr>\n-<td>\n-<pre>\n-std::logic_error\n-</pre>\n-</td>\n-\n-<td>\n-<p>public</p>\n-</td>\n-</tr>\n-</table>\n-</div>\n-</body>\n-</html>"}, {"sha": "d86299b7e3ec1f3fd57d866f3b5edb7fd35fdcf2", "filename": "libstdc++-v3/doc/html/ext/pb_ds/gp_hash_random_int_find_timing_test_gcc.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fgp_hash_random_int_find_timing_test_gcc.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fgp_hash_random_int_find_timing_test_gcc.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fgp_hash_random_int_find_timing_test_gcc.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "299737dd6fc6f3be1527d8033f80164be169d54e", "filename": "libstdc++-v3/doc/html/ext/pb_ds/gp_hash_random_int_find_timing_test_local.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fgp_hash_random_int_find_timing_test_local.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fgp_hash_random_int_find_timing_test_local.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fgp_hash_random_int_find_timing_test_local.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "b7082f2860514bac85590c14eca7a93a1763475e", "filename": "libstdc++-v3/doc/html/ext/pb_ds/gp_hash_random_int_find_timing_test_msvc.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fgp_hash_random_int_find_timing_test_msvc.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fgp_hash_random_int_find_timing_test_msvc.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fgp_hash_random_int_find_timing_test_msvc.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "b9fbe00deff6081db30bf14fae9d942fe652f8dd", "filename": "libstdc++-v3/doc/html/ext/pb_ds/gp_hash_random_int_subscript_timing_test_find_gcc.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fgp_hash_random_int_subscript_timing_test_find_gcc.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fgp_hash_random_int_subscript_timing_test_find_gcc.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fgp_hash_random_int_subscript_timing_test_find_gcc.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "7e4d7fadc62a31bbcf230a4f074cc3d3b056cff5", "filename": "libstdc++-v3/doc/html/ext/pb_ds/gp_hash_random_int_subscript_timing_test_find_local.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fgp_hash_random_int_subscript_timing_test_find_local.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fgp_hash_random_int_subscript_timing_test_find_local.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fgp_hash_random_int_subscript_timing_test_find_local.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "248ff6b8872c9be6335a328fce6eaa8006537f74", "filename": "libstdc++-v3/doc/html/ext/pb_ds/gp_hash_random_int_subscript_timing_test_find_msvc.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fgp_hash_random_int_subscript_timing_test_find_msvc.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fgp_hash_random_int_subscript_timing_test_find_msvc.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fgp_hash_random_int_subscript_timing_test_find_msvc.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "ac4f838fe261c5bfdd897368d9880ed8306e6031", "filename": "libstdc++-v3/doc/html/ext/pb_ds/gp_hash_random_int_subscript_timing_test_insert_gcc.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fgp_hash_random_int_subscript_timing_test_insert_gcc.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fgp_hash_random_int_subscript_timing_test_insert_gcc.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fgp_hash_random_int_subscript_timing_test_insert_gcc.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "587ff1d145c8f6f32cefa6a2909b6287cfb8733b", "filename": "libstdc++-v3/doc/html/ext/pb_ds/gp_hash_random_int_subscript_timing_test_insert_local.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fgp_hash_random_int_subscript_timing_test_insert_local.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fgp_hash_random_int_subscript_timing_test_insert_local.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fgp_hash_random_int_subscript_timing_test_insert_local.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "5f1d740b817a6872d1fcf9cc03f6eb884ade320f", "filename": "libstdc++-v3/doc/html/ext/pb_ds/gp_hash_random_int_subscript_timing_test_insert_msvc.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fgp_hash_random_int_subscript_timing_test_insert_msvc.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fgp_hash_random_int_subscript_timing_test_insert_msvc.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fgp_hash_random_int_subscript_timing_test_insert_msvc.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "dd9d725d3b9507f2cd8795c9ddf3d0ea039ab50e", "filename": "libstdc++-v3/doc/html/ext/pb_ds/gp_hash_table.html", "status": "removed", "additions": 0, "deletions": 891, "changes": 891, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fgp_hash_table.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fgp_hash_table.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fgp_hash_table.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7", "patch": "@@ -1,891 +0,0 @@\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n-    \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n-<head>\n-  <meta name=\"generator\" content=\n-  \"HTML Tidy for Linux/x86 (vers 12 April 2005), see www.w3.org\" />\n-\n-  <title>gp_hash_table Interface</title>\n-  <meta http-equiv=\"Content-Type\" content=\n-  \"text/html; charset=us-ascii\" />\n-  </head>\n-\n-<body>\n-  <div id=\"page\">\n-    <h1><tt>gp_hash_table</tt> Interface</h1>\n-\n-    <p>A concrete general-probing hash-based associative\n-    container.</p>\n-\n-    <p>Defined in: <a href=\n-    \"http://gcc.gnu.org/viewcvs/*checkout*/trunk/libstdc%2B%2B-v3/include/ext/pb_ds/assoc_container.hpp\"><tt>assoc_container.hpp</tt></a></p>\n-\n-    <h2><a name=\"link1\" id=\"link1\">Template Parameters</a></h2>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\n-    \"Template Parameters\">\n-      <tr>\n-        <td width=\"20%\" align=\"left\"><b>Parameter</b></td>\n-\n-        <td width=\"50%\" align=\"left\"><b>Description</b></td>\n-\n-        <td width=\"30%\" align=\"left\"><b>Default Value</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"Key2501\" id=\"Key2501\"><b>typename</b> Key</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Key type.</p>\n-        </td>\n-\n-        <td>-</td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"Mapped318655\" id=\"Mapped318655\"><b>typename</b> Mapped</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Mapped type.</p>\n-        </td>\n-\n-        <td>-</td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"Hash_Fn1515835\" id=\n-\"Hash_Fn1515835\"><b>class</b> Hash_Fn </a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Hash functor.</p>\n-        </td>\n-\n-        <td>\n-          <pre>\n-__gnu_cxx::hash&lt;<a href=\"#Key2501\"><tt>Key</tt></a>&gt;\n-</pre>if using gcc;\n-          <pre>\n-stdext::hash_value&lt;<a href=\"#Key2501\"><tt>Key</tt></a>&gt;\n-</pre>if using Visual C++ .net\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"Eq_Fn60085\" id=\"Eq_Fn60085\"><b>class</b> Eq_Fn </a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Equivalence functor.</p>\n-        </td>\n-\n-        <td>\n-          <pre>\n-std::equal_to&lt;<a href=\"#Key2501\"><tt>Key</tt></a>&gt;\n-</pre>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"Comb_Probe_Fn1603930855\" id=\n-\"Comb_Probe_Fn1603930855\"><b>class</b> Comb_Probe_Fn </a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Combining probe functor.</p>\n-\n-          <p>If <a href=\"#Hash_Fn1515835\"><tt>Hash_Fn</tt></a> is\n-          <a href=\"null_hash_fn.html\"><span class=\n-          \"c2\"><tt>null_hash_fn</tt></span></a>, and <a href=\n-          \"#Probe_Fn8454835\"><tt>Probe_Fn</tt></a> is <a href=\n-          \"null_probe_fn.html\"><span class=\n-          \"c2\"><tt>null_probe_fn</tt></span></a>, then this is the\n-          ranged-probe functor; otherwise, this is the\n-          range-hashing functor.</p>\n-\n-          <p>(See <a href=\n-          \"hash_based_containers.html#hash_policies\">Design::Hash-Based\n-          Containers::Hash Policies</a>.)</p>\n-        </td>\n-\n-        <td><a href=\"direct_mask_range_hashing.html\"><span class=\n-        \"c2\"><tt>direct_mask_range_hashing</tt></span></a></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"Probe_Fn8454835\" id=\n-\"Probe_Fn8454835\"><b>class</b> Probe_Fn </a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Probe functor.</p>\n-        </td>\n-\n-        <td>\n-          If <tt><a href=\n-          \"#Comb_Probe_Fn1603930855\"><tt>Comb_Probe_Fn</tt></a></tt>\n-          is <a href=\"direct_mask_range_hashing.html\"><span class=\n-          \"c2\"><tt>direct_mask_range_hashing</tt></span></a>, then\n-          <pre>\n-<a href=\"linear_probe_fn.html\"><span class=\n-\"c2\"><tt>linear_probe_fn</tt></span></a>&lt;\n-  <b>typename</b> <a href=\n-\"#Comb_Probe_Fn1603930855\"><tt>Comb_Probe_Fn</tt></a>::size_type&gt;\n-</pre>otherwise,\n-          <pre>\n-<a href=\"quadratic_probe_fn.html\"><span class=\n-\"c2\"><tt>quadratic_probe_fn</tt></span></a>&lt;\n-  <b>typename</b> <a href=\n-\"#Comb_Probe_Fn1603930855\"><tt>Comb_Probe_Fn</tt></a>::size_type&gt;\n-</pre>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"Resize_Policy566860465\" id=\n-\"Resize_Policy566860465\"><b>class</b> Resize_Policy </a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Resize policy.</p>\n-        </td>\n-\n-        <td>\n-          If <tt><a href=\n-          \"#Comb_Probe_Fn1603930855\"><tt>Comb_Probe_Fn</tt></a></tt>\n-          is <tt><a href=\n-          \"direct_mask_range_hashing.html\"><span class=\n-          \"c2\"><tt>direct_mask_range_hashing</tt></span></a></tt>,\n-          then\n-          <pre>\n-<a href=\"hash_standard_resize_policy.html\"><span class=\n-\"c2\"><tt>hash_standard_resize_policy</tt></span></a>&lt;\n-  <a href=\"hash_exponential_size_policy.html\"><span class=\n-\"c2\"><tt>hash_exponential_size_policy</tt></span></a>&lt;\n-    <b>typename</b> <a href=\n-\"#Comb_Probe_Fn1603930855\"><tt>Comb_Probe_Fn</tt></a>::size_type&gt;,\n-  <a href=\"hash_load_check_resize_trigger.html\"><span class=\n-\"c2\"><tt>hash_load_check_resize_trigger</tt></span></a>&lt;\n-    <b>typename</b> <a href=\n-\"#Comb_Probe_Fn1603930855\"><tt>Comb_Probe_Fn</tt></a>::size_type&gt;,\n-  <b>false</b>,\n-  <b>typename</b> <a href=\n-\"#Comb_Probe_Fn1603930855\"><tt>Comb_Probe_Fn</tt></a>::size_type&gt;\n-</pre>otherwise,\n-          <pre>\n-<a href=\"hash_standard_resize_policy.html\"><span class=\n-\"c2\"><tt>hash_standard_resize_policy</tt></span></a>&lt;\n-  <a href=\"hash_exponential_size_policy.html\"><span class=\n-\"c2\"><tt>hash_exponential_size_policy</tt></span></a>&lt;\n-    <b>typename</b> <a href=\n-\"#Comb_Probe_Fn1603930855\"><tt>Comb_Probe_Fn</tt></a>::size_type&gt;,\n-  <a href=\"hash_load_check_resize_trigger.html\"><span class=\n-\"c2\"><tt>hash_load_check_resize_trigger</tt></span></a>&lt;\n-    <b>typename</b> <a href=\n-\"#Comb_Probe_Fn1603930855\"><tt>Comb_Probe_Fn</tt></a>::size_type&gt;,\n-  <b>false</b>,\n-  <b>typename</b> <a href=\n-\"#Comb_Probe_Fn1603930855\"><tt>Comb_Probe_Fn</tt></a>::size_type&gt;\n-</pre>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"Store_Hash218262104\" id=\n-\"Store_Hash218262104\"><b>bool</b> Store_Hash </a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Indicates whether the hash value will be stored along\n-          with each key.</p>\n-\n-          <p>If <tt><a href=\n-          \"#hash_fn2015995\"><tt>hash_fn</tt></a></tt> is <a href=\n-          \"null_hash_fn.html\"><span class=\n-          \"c2\"><tt>null_hash_fn</tt></span></a>, then the container\n-          will not compile if this value is\n-          <tt><b>true</b></tt></p>\n-        </td>\n-\n-        <td>\n-          <pre>\n-<tt><b>false</b></tt>\n-</pre>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"Allocator35940069\" id=\n-\"Allocator35940069\"><b>class</b> Allocator </a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Allocator type.</p>\n-        </td>\n-\n-        <td>\n-          <pre>\n-std::allocator&lt;<b>char</b>&gt;\n-</pre>\n-        </td>\n-      </tr>\n-    </table>\n-\n-    <h2><a name=\"link2\" id=\"link2\">Base Classes</a></h2>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Bases\">\n-      <tr>\n-        <td width=\"80%\" align=\"left\"><b>Class</b></td>\n-\n-        <td width=\"20%\" align=\"left\"><b>Derivation Type</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a href=\"basic_hash_table.html\"><span class=\n-\"c2\"><tt>basic_hash_table</tt></span></a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>public</p>\n-        </td>\n-      </tr>\n-    </table>\n-\n-    <h2><a name=\"link3\" id=\"link3\">Public Types and\n-    Constants</a></h2>\n-\n-    <h3><a name=\"link4\" id=\"link4\">Policy Definitions</a></h3>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Types\">\n-      <tr>\n-        <td width=\"30%\" align=\"left\"><b>Type</b></td>\n-\n-        <td width=\"55%\" align=\"left\"><b>Definition</b></td>\n-\n-        <td width=\"15%\" align=\"left\"><b>Description</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"hash_fn2015995\" id=\"hash_fn2015995\">hash_fn</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <pre>\n-<a href=\"#Hash_Fn1515835\"><tt>Hash_Fn</tt></a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Hash functor type.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"eq_fn80245\" id=\"eq_fn80245\">eq_fn</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <pre>\n-<a href=\"#Eq_Fn60085\"><tt>Eq_Fn</tt></a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Equivalence functor type.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"comb_probe_fn828996423\" id=\n-\"comb_probe_fn828996423\">comb_probe_fn</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <pre>\n-<a href=\"#Comb_Probe_Fn1603930855\"><tt>Comb_Probe_Fn</tt></a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Combining probe functor type.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"probe_fn10954995\" id=\"probe_fn10954995\">probe_fn</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <pre>\n-<a href=\"#Probe_Fn8454835\"><tt>Probe_Fn</tt></a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Probe functor type.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"resize_policy4084493169\" id=\n-\"resize_policy4084493169\">resize_policy</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <pre>\n-<a href=\"#Resize_Policy566860465\"><tt>Resize_Policy</tt></a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Resize policy type.</p>\n-        </td>\n-      </tr>\n-    </table>\n-\n-    <h2><a name=\"link5\" id=\"link5\">Public Methods</a></h2>\n-\n-    <h3><a name=\"link6\" id=\"link6\">Constructors, Destructor, and\n-    Related</a></h3>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Methods\">\n-      <tr>\n-        <td width=\"45%\" align=\"left\"><b>Method</b></td>\n-\n-        <td width=\"55%\" align=\"left\"><b>Description</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-  gp_hash_table\n-  ()\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Default constructor.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-  gp_hash_table\n-  (<b>const</b> <a href=\n-\"#hash_fn2015995\"><tt>hash_fn</tt></a> &amp;r_hash_fn)\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Constructor taking some policy objects. <span class=\n-          \"c1\"><tt>r_hash_fn</tt></span> will be copied by the\n-          <a href=\"#hash_fn2015995\"><tt>hash_fn</tt></a> object of\n-          the container object.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-  gp_hash_table\n-  (<b>const</b> <a href=\n-\"#hash_fn2015995\"><tt>hash_fn</tt></a> &amp;r_hash_fn, \n-    <b>const</b> <a href=\n-\"#eq_fn80245\"><tt>eq_fn</tt></a> &amp;r_eq_fn)\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Constructor taking some policy objects. <span class=\n-          \"c1\"><tt>r_hash_fn</tt></span> will be copied by the\n-          <a href=\"#hash_fn2015995\"><tt>hash_fn</tt></a> object of\n-          the container object, and <span class=\n-          \"c1\"><tt>r_eq_fn</tt></span> will be copied by the\n-          <a href=\"#eq_fn80245\"><tt>eq_fn</tt></a> object of the\n-          container object.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-  gp_hash_table\n-  (<b>const</b> <a href=\n-\"#hash_fn2015995\"><tt>hash_fn</tt></a> &amp;r_hash_fn, \n-    <b>const</b> <a href=\n-\"#eq_fn80245\"><tt>eq_fn</tt></a> &amp;r_eq_fn, \n-    <b>const</b> <a href=\n-\"#comb_probe_fn828996423\"><tt>comb_probe_fn</tt></a> &amp;r_comb_probe_fn)\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Constructor taking some policy objects. <span class=\n-          \"c1\"><tt>r_hash_fn</tt></span> will be copied by the\n-          <a href=\"#hash_fn2015995\"><tt>hash_fn</tt></a> object of\n-          the container object, <span class=\n-          \"c1\"><tt>r_eq_fn</tt></span> will be copied by the\n-          <a href=\"#eq_fn80245\"><tt>eq_fn</tt></a> object of the\n-          container object, and <span class=\n-          \"c1\"><tt>r_comb_probe_fn</tt></span> will be copied by\n-          the <a href=\n-          \"#comb_probe_fn828996423\"><tt>comb_probe_fn</tt></a>\n-          object of the container object.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-  gp_hash_table\n-  (<b>const</b> <a href=\n-\"#hash_fn2015995\"><tt>hash_fn</tt></a> &amp;r_hash_fn, \n-    <b>const</b> <a href=\n-\"#eq_fn80245\"><tt>eq_fn</tt></a> &amp;r_eq_fn, \n-    <b>const</b> <a href=\n-\"#comb_probe_fn828996423\"><tt>comb_probe_fn</tt></a> &amp;r_comb_probe_fn,\n-    <b>const</b> <a href=\n-\"#probe_fn10954995\"><tt>probe_fn</tt></a> &amp;r_probe_fn)\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Constructor taking some policy objects. <span class=\n-          \"c1\"><tt>r_hash_fn</tt></span> will be copied by the\n-          <a href=\"#hash_fn2015995\"><tt>hash_fn</tt></a> object of\n-          the container object, <span class=\n-          \"c1\"><tt>r_eq_fn</tt></span> will be copied by the\n-          <a href=\"#eq_fn80245\"><tt>eq_fn</tt></a> object of the\n-          container object, <span class=\n-          \"c1\"><tt>r_comb_probe_fn</tt></span> will be copied by\n-          the <a href=\n-          \"#comb_probe_fn828996423\"><tt>comb_probe_fn</tt></a>\n-          object of the container object, and <span class=\n-          \"c1\"><tt>r_probe_fn</tt></span> will be copied by the\n-          <a href=\"#probe_fn10954995\"><tt>probe_fn</tt></a> object\n-          of the container object.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-  gp_hash_table\n-  (<b>const</b> <a href=\n-\"#hash_fn2015995\"><tt>hash_fn</tt></a> &amp;r_hash_fn, \n-    <b>const</b> <a href=\n-\"#eq_fn80245\"><tt>eq_fn</tt></a> &amp;r_eq_fn, \n-    <b>const</b> <a href=\n-\"#comb_probe_fn828996423\"><tt>comb_probe_fn</tt></a> &amp;r_comb_probe_fn, \n-    <b>const</b> <a href=\n-\"#probe_fn10954995\"><tt>probe_fn</tt></a> &amp;r_probe_fn,\n-    <b>const</b> <a href=\n-\"#resize_policy4084493169\"><tt>resize_policy</tt></a> &amp;r_resize_policy)\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Constructor taking some policy objects. <span class=\n-          \"c1\"><tt>r_hash_fn</tt></span> will be copied by the\n-          <a href=\"#hash_fn2015995\"><tt>hash_fn</tt></a> object of\n-          the container object, <span class=\n-          \"c1\"><tt>r_eq_fn</tt></span> will be copied by the\n-          <a href=\"#eq_fn80245\"><tt>eq_fn</tt></a> object of the\n-          container object, <span class=\n-          \"c1\"><tt>r_comb_probe_fn</tt></span> will be copied by\n-          the <a href=\n-          \"#comb_probe_fn828996423\"><tt>comb_probe_fn</tt></a>\n-          object of the container object, <span class=\n-          \"c1\"><tt>r_probe_fn</tt></span> will be copied by the\n-          <a href=\"#probe_fn10954995\"><tt>probe_fn</tt></a> object\n-          of the container object, and <span class=\n-          \"c1\"><tt>r_resize_policy</tt></span> will be copied by\n-          the <a href=\n-          \"#Resize_Policy566860465\"><tt>Resize_Policy</tt></a>\n-          object of the container object.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>template</b>&lt;\n-    <b>class</b> It&gt;\n-  gp_hash_table\n-  (It first_it, \n-    It last_it)\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Constructor taking iterators to a range of\n-          value_types. The value_types between <span class=\n-          \"c1\"><tt>first_it</tt></span> and <span class=\n-          \"c1\"><tt>last_it</tt></span> will be inserted into the\n-          container object.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>template</b>&lt;\n-    <b>class</b> It&gt;\n-  gp_hash_table\n-  (It first_it, \n-    It last_it,\n-    <b>const</b> <a href=\n-\"#hash_fn2015995\"><tt>hash_fn</tt></a> &amp;r_hash_fn)\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Constructor taking iterators to a range of value_types\n-          and some policy objects. The value_types between\n-          <span class=\"c1\"><tt>first_it</tt></span> and\n-          <span class=\"c1\"><tt>last_it</tt></span> will be inserted\n-          into the container object. <span class=\n-          \"c1\"><tt>r_hash_fn</tt></span> will be copied by the\n-          <a href=\"#hash_fn2015995\"><tt>hash_fn</tt></a> object of\n-          the container object.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>template</b>&lt;\n-    <b>class</b> It&gt;\n-  gp_hash_table\n-  (It first_it, \n-    It last_it,\n-    <b>const</b> <a href=\n-\"#hash_fn2015995\"><tt>hash_fn</tt></a> &amp;r_hash_fn, \n-    <b>const</b> <a href=\n-\"#eq_fn80245\"><tt>eq_fn</tt></a> &amp;r_eq_fn)\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Constructor taking iterators to a range of value_types\n-          and some policy objects. The value_types between\n-          <span class=\"c1\"><tt>first_it</tt></span> and\n-          <span class=\"c1\"><tt>last_it</tt></span> will be inserted\n-          into the container object. <span class=\n-          \"c1\"><tt>r_hash_fn</tt></span> will be copied by the\n-          <a href=\"#hash_fn2015995\"><tt>hash_fn</tt></a> object of\n-          the container object, and <span class=\n-          \"c1\"><tt>r_eq_fn</tt></span> will be copied by the\n-          <a href=\"#eq_fn80245\"><tt>eq_fn</tt></a> object of the\n-          container object.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>template</b>&lt;\n-    <b>class</b> It&gt;\n-  gp_hash_table\n-  (It first_it, \n-    It last_it,\n-    <b>const</b> <a href=\n-\"#hash_fn2015995\"><tt>hash_fn</tt></a> &amp;r_hash_fn, \n-    <b>const</b> <a href=\n-\"#eq_fn80245\"><tt>eq_fn</tt></a> &amp;r_eq_fn, \n-    <b>const</b> <a href=\n-\"#comb_probe_fn828996423\"><tt>comb_probe_fn</tt></a> &amp;r_comb_probe_fn)\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Constructor taking iterators to a range of value_types\n-          and some policy objects. The value_types between\n-          <span class=\"c1\"><tt>first_it</tt></span> and\n-          <span class=\"c1\"><tt>last_it</tt></span> will be inserted\n-          into the container object. <span class=\n-          \"c1\"><tt>r_hash_fn</tt></span> will be copied by the\n-          <a href=\"#hash_fn2015995\"><tt>hash_fn</tt></a> object of\n-          the container object, <span class=\n-          \"c1\"><tt>r_eq_fn</tt></span> will be copied by the\n-          <a href=\"#eq_fn80245\"><tt>eq_fn</tt></a> object of the\n-          container object, and <span class=\n-          \"c1\"><tt>r_comb_probe_fn</tt></span> will be copied by\n-          the <a href=\n-          \"#comb_probe_fn828996423\"><tt>comb_probe_fn</tt></a>\n-          object of the container object.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>template</b>&lt;\n-    <b>class</b> It&gt;\n-  gp_hash_table\n-  (It first_it, \n-    It last_it,\n-    <b>const</b> <a href=\n-\"#hash_fn2015995\"><tt>hash_fn</tt></a> &amp;r_hash_fn, \n-    <b>const</b> <a href=\n-\"#eq_fn80245\"><tt>eq_fn</tt></a> &amp;r_eq_fn, \n-    <b>const</b> <a href=\n-\"#comb_probe_fn828996423\"><tt>comb_probe_fn</tt></a> &amp;r_comb_probe_fn,\n-    <b>const</b> <a href=\n-\"#probe_fn10954995\"><tt>probe_fn</tt></a> &amp;r_probe_fn)\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Constructor taking iterators to a range of value_types\n-          and some policy objects. The value_types between\n-          <span class=\"c1\"><tt>first_it</tt></span> and\n-          <span class=\"c1\"><tt>last_it</tt></span> will be inserted\n-          into the container object. <span class=\n-          \"c1\"><tt>r_hash_fn</tt></span> will be copied by the\n-          <a href=\"#hash_fn2015995\"><tt>hash_fn</tt></a> object of\n-          the container object, <span class=\n-          \"c1\"><tt>r_eq_fn</tt></span> will be copied by the\n-          <a href=\"#eq_fn80245\"><tt>eq_fn</tt></a> object of the\n-          container object, <span class=\n-          \"c1\"><tt>r_comb_probe_fn</tt></span> will be copied by\n-          the <a href=\n-          \"#comb_probe_fn828996423\"><tt>comb_probe_fn</tt></a>\n-          object of the container object, and <span class=\n-          \"c1\"><tt>r_probe_fn</tt></span> will be copied by the\n-          <a href=\"#probe_fn10954995\"><tt>probe_fn</tt></a> object\n-          of the container object.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>template</b>&lt;\n-    <b>class</b> It&gt;\n-  gp_hash_table\n-  (It first_it, \n-    It last_it,\n-    <b>const</b> <a href=\n-\"#hash_fn2015995\"><tt>hash_fn</tt></a> &amp;r_hash_fn, \n-    <b>const</b> <a href=\n-\"#eq_fn80245\"><tt>eq_fn</tt></a> &amp;r_eq_fn, \n-    <b>const</b> <a href=\n-\"#comb_probe_fn828996423\"><tt>comb_probe_fn</tt></a> &amp;r_comb_probe_fn, \n-    <b>const</b> <a href=\n-\"#probe_fn10954995\"><tt>probe_fn</tt></a> &amp;r_probe_fn,      \n-    <b>const</b> <a href=\n-\"#resize_policy4084493169\"><tt>resize_policy</tt></a> &amp;r_resize_policy)\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Constructor taking iterators to a range of value_types\n-          and some policy objects. The value_types between\n-          <span class=\"c1\"><tt>first_it</tt></span> and\n-          <span class=\"c1\"><tt>last_it</tt></span> will be inserted\n-          into the container object. <span class=\n-          \"c1\"><tt>r_hash_fn</tt></span> will be copied by the\n-          <a href=\"#hash_fn2015995\"><tt>hash_fn</tt></a> object of\n-          the container object, <span class=\n-          \"c1\"><tt>r_eq_fn</tt></span> will be copied by the\n-          <a href=\"#eq_fn80245\"><tt>eq_fn</tt></a> object of the\n-          container object, <span class=\n-          \"c1\"><tt>r_comb_probe_fn</tt></span> will be copied by\n-          the <a href=\n-          \"#comb_probe_fn828996423\"><tt>comb_probe_fn</tt></a>\n-          object of the container object, <span class=\n-          \"c1\"><tt>r_probe_fn</tt></span> will be copied by the\n-          <a href=\"#probe_fn10954995\"><tt>probe_fn</tt></a> object\n-          of the container object, and <span class=\n-          \"c1\"><tt>r_resize_policy</tt></span> will be copied by\n-          the <a href=\n-          \"#resize_policy4084493169\"><tt>resize_policy</tt></a>\n-          object of the container object.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-  gp_hash_table\n-  (<b>const</b> <span class=\n-\"c2\"><tt>gp_hash_table</tt></span> &amp;other)\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Copy constructor.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>virtual</b> \n-  ~gp_hash_table\n-  ()\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Destructor.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<span class=\"c2\"><tt>gp_hash_table</tt></span> &amp;\n-  <b>operator</b>=\n-  (<b>const</b> <span class=\n-\"c2\"><tt>gp_hash_table</tt></span> &amp;other)\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Assignment operator.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>void</b>\n-  swap\n-  (<span class=\n-\"c2\"><tt>gp_hash_table</tt></span> &amp;other)\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Swaps content.</p>\n-        </td>\n-      </tr>\n-    </table>\n-\n-    <h3><a name=\"link7\" id=\"link7\">Policy Access Methods</a></h3>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Methods\">\n-      <tr>\n-        <td width=\"45%\" align=\"left\"><b>Method</b></td>\n-\n-        <td width=\"55%\" align=\"left\"><b>Description</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a href=\"#comb_probe_fn828996423\"><tt>comb_probe_fn</tt></a> &amp;\n-  get_comb_probe_fn\n-  ()\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Access to the <a href=\n-          \"#comb_probe_fn828996423\"><tt>comb_probe_fn</tt></a>\n-          object.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>const</b> <a href=\n-\"#comb_probe_fn828996423\"><tt>comb_probe_fn</tt></a> &amp;\n-  get_comb_probe_fn\n-  () <b>const</b>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Const access to the <a href=\n-          \"#comb_probe_fn828996423\"><tt>comb_probe_fn</tt></a>\n-          object.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a href=\"#probe_fn10954995\"><tt>probe_fn</tt></a> &amp;\n-  get_probe_fn\n-  ()\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Access to the <a href=\n-          \"#probe_fn10954995\"><tt>probe_fn</tt></a> object.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>const</b> <a href=\n-\"#probe_fn10954995\"><tt>probe_fn</tt></a> &amp;\n-  get_probe_fn\n-  () <b>const</b>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Const access to the <a href=\n-          \"#probe_fn10954995\"><tt>probe_fn</tt></a> object.</p>\n-        </td>\n-      </tr>\n-    </table>\n-  </div>\n-</body>\n-</html>"}, {"sha": "4c5f06b579c8d23edb3d11bdf53da691cf8b5916", "filename": "libstdc++-v3/doc/html/ext/pb_ds/gp_hash_tag.html", "status": "removed", "additions": 0, "deletions": 47, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fgp_hash_tag.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fgp_hash_tag.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fgp_hash_tag.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7", "patch": "@@ -1,47 +0,0 @@\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n-    \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n-<head>\n-  <meta name=\"generator\" content=\n-  \"HTML Tidy for Linux/x86 (vers 12 April 2005), see www.w3.org\" />\n-\n-  <title>gp_hash_tag Interface</title>\n-  <meta http-equiv=\"Content-Type\" content=\n-  \"text/html; charset=us-ascii\" />\n-  </head>\n-\n-<body>\n-  <div id=\"page\">\n-    <h1><tt>gp_hash_tag</tt> Interface</h1>\n-\n-    <p>General-probing hash data structure tag.</p>\n-\n-    <p>Defined in: <a href=\n-    \"http://gcc.gnu.org/viewcvs/*checkout*/trunk/libstdc%2B%2B-v3/include/ext/pb_ds/tag_and_trait.hpp\"><tt>tag_and_trait.hpp</tt></a></p>\n-\n-    <h2><a name=\"link1\" id=\"link1\">Base Classes</a></h2>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Bases\">\n-      <tr>\n-        <td width=\"80%\" align=\"left\"><b>Class</b></td>\n-\n-        <td width=\"20%\" align=\"left\"><b>Derivation Type</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a href=\"basic_hash_tag.html\"><span class=\n-\"c2\"><tt>basic_hash_tag</tt></span></a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>public</p>\n-        </td>\n-      </tr>\n-    </table>\n-  </div>\n-</body>\n-</html>"}, {"sha": "21d092a76ef19933d7716a81ecded8dbc1eef55d", "filename": "libstdc++-v3/doc/html/ext/pb_ds/hash_based_containers.html", "status": "removed", "additions": 0, "deletions": 835, "changes": 835, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fhash_based_containers.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fhash_based_containers.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fhash_based_containers.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7", "patch": "@@ -1,835 +0,0 @@\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\"\n-    \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n-\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n-<head>\n-  <meta name=\"generator\" content=\n-  \"HTML Tidy for Linux/x86 (vers 12 April 2005), see www.w3.org\" />\n-\n-  <title>Hash-Based Containers</title>\n-  <meta http-equiv=\"Content-Type\" content=\n-  \"text/html; charset=us-ascii\" />\n-  </head>\n-\n-<body>\n-  <div id=\"page\">\n-    <h1>Hash Table Design</h1>\n-\n-    <h2><a name=\"overview\" id=\"overview\">Overview</a></h2>\n-\n-    <p>The collision-chaining hash-based container has the\n-    following declaration.</p>\n-    <pre>\n-<b>template</b>&lt;\n-    <b>typename</b> Key,\n-    <b>typename</b> Mapped,\n-    <b>typename</b> Hash_Fn = std::hash&lt;Key&gt;,\n-    <b>typename</b> Eq_Fn = std::equal_to&lt;Key&gt;,\n-    <b>typename</b> Comb_Hash_Fn = <a href=\n-\"direct_mask_range_hashing.html\">direct_mask_range_hashing</a>&lt;&gt;\n-    <b>typename</b> Resize_Policy = <i>default explained below.</i>\n-     <b>bool</b> Store_Hash = <b>false</b>,\n-     <b>typename</b> Allocator = std::allocator&lt;<b>char</b>&gt; &gt;\n-<b>class</b> <a href=\n-\"cc_hash_table.html\">cc_hash_table</a>;\n-</pre>\n-\n-    <p>The parameters have the following meaning:</p>\n-\n-    <ol>\n-      <li><tt>Key</tt> is the key type.</li>\n-\n-      <li><tt>Mapped</tt> is the mapped-policy, and is explained in\n-      <a href=\"tutorial.html#assoc_ms\">Tutorial::Associative\n-      Containers::Associative Containers Others than Maps</a>.</li>\n-\n-      <li><tt>Hash_Fn</tt> is a key hashing functor.</li>\n-\n-      <li><tt>Eq_Fn</tt> is a key equivalence functor.</li>\n-\n-      <li><tt>Comb_Hash_Fn</tt> is a <i>range-hashing_functor</i>;\n-      it describes how to translate hash values into positions\n-      within the table. This is described in <a href=\n-      \"#hash_policies\">Hash Policies</a>.</li>\n-\n-      <li><tt>Resize_Policy</tt> describes how a container object\n-      should change its internal size. This is described in\n-      <a href=\"#resize_policies\">Resize Policies</a>.</li>\n-\n-      <li><tt>Store_Hash</tt> indicates whether the hash value\n-      should be stored with each entry. This is described in\n-      <a href=\"#policy_interaction\">Policy Interaction</a>.</li>\n-\n-      <li><tt>Allocator</tt> is an allocator\n-      type.</li>\n-    </ol>\n-\n-    <p>The probing hash-based container has the following\n-    declaration.</p>\n-    <pre>\n-<b>template</b>&lt;\n-    <b>typename</b> Key,\n-    <b>typename</b> Mapped,\n-    <b>typename</b> Hash_Fn = std::hash&lt;Key&gt;,\n-    <b>typename</b> Eq_Fn = std::equal_to&lt;Key&gt;,\n-    <b>typename</b> Comb_Probe_Fn = <a href=\n-\"direct_mask_range_hashing.html\">direct_mask_range_hashing</a>&lt;&gt;\n-    <b>typename</b> Probe_Fn = <i>default explained below.</i>\n-    <b>typename</b> Resize_Policy = <i>default explained below.</i>\n-    <b>bool</b> Store_Hash = <b>false</b>,\n-    <b>typename</b> Allocator =  std::allocator&lt;<b>char</b>&gt; &gt;\n-<b>class</b> <a href=\n-\"gp_hash_table.html\">gp_hash_table</a>;\n-</pre>\n-\n-    <p>The parameters are identical to those of the\n-    collision-chaining container, except for the following.</p>\n-\n-    <ol>\n-      <li><tt>Comb_Probe_Fn</tt> describes how to transform a probe\n-      sequence into a sequence of positions within the table.</li>\n-\n-      <li><tt>Probe_Fn</tt> describes a probe sequence policy.</li>\n-    </ol>\n-\n-    <p>Some of the default template values depend on the values of\n-    other parameters, and are explained in <a href=\n-    \"#policy_interaction\">Policy Interaction</a>.</p>\n-\n-    <h2><a name=\"hash_policies\" id=\"hash_policies\">Hash\n-    Policies</a></h2>\n-\n-    <h3><a name=\"general_terms\" id=\"general_terms\">General\n-    Terms</a></h3>\n-\n-    <p>Following is an explanation of some functions which hashing\n-    involves. Figure <a href=\n-    \"#hash_ranged_hash_range_hashing_fns\">Hash functions,\n-    ranged-hash functions, and range-hashing functions</a>)\n-    illustrates the discussion.</p>\n-\n-    <h6 class=\"c1\"><a name=\"hash_ranged_hash_range_hashing_fns\" id=\n-    \"hash_ranged_hash_range_hashing_fns\"><img src=\n-    \"hash_ranged_hash_range_hashing_fns.png\" alt=\n-    \"no image\" /></a></h6>\n-\n-    <h6 class=\"c1\">Hash functions, ranged-hash functions, and\n-    range-hashing functions.</h6>\n-\n-    <p>Let <i>U</i> be a domain (<i>e.g.</i>, the integers, or the\n-    strings of 3 characters). A hash-table algorithm needs to map\n-    elements of <i>U</i> \"uniformly\" into the range <i>[0,..., m -\n-    1]</i> (where <i>m</i> is a non-negative integral value, and\n-    is, in general, time varying). <i>I.e.</i>, the algorithm needs\n-    a <i>ranged-hash</i> function</p>\n-\n-    <p><i>f : U &times; Z<sub>+</sub> &rarr; Z<sub>+</sub></i>\n-    ,</p>\n-\n-    <p>such that for any <i>u</i> in <i>U</i> ,</p>\n-\n-    <p><i>0 &le; f(u, m) &le; m - 1</i> ,</p>\n-\n-    <p>and which has \"good uniformity\" properties [<a href=\n-    \"references.html#knuth98sorting\">knuth98sorting</a>]. One\n-    common solution is to use the composition of the hash\n-    function</p>\n-\n-    <p><i>h : U &rarr; Z<sub>+</sub></i> ,</p>\n-\n-    <p>which maps elements of <i>U</i> into the non-negative\n-    integrals, and</p>\n-\n-    <p class=\"c2\">g : Z<sub>+</sub> &times; Z<sub>+</sub> &rarr;\n-    Z<sub>+</sub>,</p>\n-\n-    <p>which maps a non-negative hash value, and a non-negative\n-    range upper-bound into a non-negative integral in the range\n-    between 0 (inclusive) and the range upper bound (exclusive),\n-    <i>i.e.</i>, for any <i>r</i> in <i>Z<sub>+</sub></i>,</p>\n-\n-    <p><i>0 &le; g(r, m) &le; m - 1</i> .</p>\n-\n-    <p>The resulting ranged-hash function, is</p>\n-\n-    <p><i><a name=\"ranged_hash_composed_of_hash_and_range_hashing\"\n-    id=\"ranged_hash_composed_of_hash_and_range_hashing\">f(u , m) =\n-    g(h(u), m)</a></i> (1) .</p>\n-\n-    <p>From the above, it is obvious that given <i>g</i> and\n-    <i>h</i>, <i>f</i> can always be composed (however the converse\n-    is not true). The STL's hash-based containers allow specifying\n-    a hash function, and use a hard-wired range-hashing function;\n-    the ranged-hash function is implicitly composed.</p>\n-\n-    <p>The above describes the case where a key is to be mapped\n-    into a <i>single position</i> within a hash table, <i>e.g.</i>,\n-    in a collision-chaining table. In other cases, a key is to be\n-    mapped into a <i>sequence of positions</i> within a table,\n-    <i>e.g.</i>, in a probing table. Similar terms apply in this\n-    case: the table requires a <i>ranged probe</i> function,\n-    mapping a key into a sequence of positions withing the table.\n-    This is typically achieved by composing a <i>hash function</i>\n-    mapping the key into a non-negative integral type, a\n-    <i>probe</i> function transforming the hash value into a\n-    sequence of hash values, and a <i>range-hashing</i> function\n-    transforming the sequence of hash values into a sequence of\n-    positions.</p>\n-\n-    <h3><a name=\"range_hashing_fns\" id=\n-    \"range_hashing_fns\">Range-Hashing Functions</a></h3>\n-\n-    <p>Some common choices for range-hashing functions are the\n-    division, multiplication, and middle-square methods [<a href=\n-    \"references.html#knuth98sorting\">knuth98sorting</a>], defined\n-    as</p>\n-\n-    <p><i><a name=\"division_method\" id=\"division_method\">g(r, m) =\n-    r mod m</a></i> (2) ,</p>\n-\n-    <p><i>g(r, m) = &lceil; u/v ( a r mod v ) &rceil;</i> ,</p>\n-\n-    <p>and</p>\n-\n-    <p><i>g(r, m) = &lceil; u/v ( r<sup>2</sup> mod v ) &rceil;</i>\n-    ,</p>\n-\n-    <p>respectively, for some positive integrals <i>u</i> and\n-    <i>v</i> (typically powers of 2), and some <i>a</i>. Each of\n-    these range-hashing functions works best for some different\n-    setting.</p>\n-\n-    <p>The division method <a href=\"#division_method\">(2)</a> is a\n-    very common choice. However, even this single method can be\n-    implemented in two very different ways. It is possible to\n-    implement <a href=\"#division_method\">(2)</a> using the low\n-    level <i>%</i> (modulo) operation (for any <i>m</i>), or the\n-    low level <i>&amp;</i> (bit-mask) operation (for the case where\n-    <i>m</i> is a power of 2), <i>i.e.</i>,</p>\n-\n-    <p><i><a name=\"division_method_prime_mod\" id=\n-    \"division_method_prime_mod\">g(r, m) = r % m</a></i> (3) ,</p>\n-\n-    <p>and</p>\n-\n-    <p><i><a name=\"division_method_bit_mask\" id=\n-    \"division_method_bit_mask\">g(r, m) = r &amp; m - 1, (m =\n-    2<sup>k</sup>)</a></i> for some <i>k)</i> (4),</p>\n-\n-    <p>respectively.</p>\n-\n-    <p>The <i>%</i> (modulo) implementation <a href=\n-    \"#division_method_prime_mod\">(3)</a> has the advantage that for\n-    <i>m</i> a prime far from a power of 2, <i>g(r, m)</i> is\n-    affected by all the bits of <i>r</i> (minimizing the chance of\n-    collision). It has the disadvantage of using the costly modulo\n-    operation. This method is hard-wired into SGI's implementation\n-    [<a href=\"references.html#sgi_stl\">sgi_stl</a>].</p>\n-\n-    <p>The <i>&amp;</i> (bit-mask) implementation <a href=\n-    \"#division_method_bit_mask\">(4)</a> has the advantage of\n-    relying on the fast bit-wise and operation. It has the\n-    disadvantage that for <i>g(r, m)</i> is affected only by the\n-    low order bits of <i>r</i>. This method is hard-wired into\n-    Dinkumware's implementation [<a href=\n-    \"references.html#dinkumware_stl\">dinkumware_stl</a>].</p>\n-\n-    <h3><a name=\"hash_policies_ranged_hash_policies\" id=\n-    \"hash_policies_ranged_hash_policies\">Ranged-Hash\n-    Functions</a></h3>\n-\n-    <p>In cases it is beneficial to allow the\n-    client to directly specify a ranged-hash hash function. It is\n-    true, that the writer of the ranged-hash function cannot rely\n-    on the values of <i>m</i> having specific numerical properties\n-    suitable for hashing (in the sense used in [<a href=\n-    \"references.html#knuth98sorting\">knuth98sorting</a>]), since\n-    the values of <i>m</i> are determined by a resize policy with\n-    possibly orthogonal considerations.</p>\n-\n-    <p>There are two cases where a ranged-hash function can be\n-    superior. The firs is when using perfect hashing [<a href=\n-    \"references.html#knuth98sorting\">knuth98sorting</a>]; the\n-    second is when the values of <i>m</i> can be used to estimate\n-    the \"general\" number of distinct values required. This is\n-    described in the following.</p>\n-\n-    <p>Let</p>\n-\n-    <p class=\"c2\">s = [ s<sub>0</sub>,..., s<sub>t - 1</sub>]</p>\n-\n-    <p>be a string of <i>t</i> characters, each of which is from\n-    domain <i>S</i>. Consider the following ranged-hash\n-    function:</p>\n-\n-    <p><a name=\"total_string_dna_hash\" id=\n-    \"total_string_dna_hash\"><i>f<sub>1</sub>(s, m) = &sum; <sub>i =\n-    0</sub><sup>t - 1</sup> s<sub>i</sub> a<sup>i</sup></i> mod\n-    <i>m</i></a> (5) ,</p>\n-\n-    <p>where <i>a</i> is some non-negative integral value. This is\n-    the standard string-hashing function used in SGI's\n-    implementation (with <i>a = 5</i>) [<a href=\n-    \"references.html#sgi_stl\">sgi_stl</a>]. Its advantage is that\n-    it takes into account all of the characters of the string.</p>\n-\n-    <p>Now assume that <i>s</i> is the string representation of a\n-    of a long DNA sequence (and so <i>S = {'A', 'C', 'G',\n-    'T'}</i>). In this case, scanning the entire string might be\n-    prohibitively expensive. A possible alternative might be to use\n-    only the first <i>k</i> characters of the string, where</p>\n-\n-    <p>|S|<sup>k</sup> &ge; m ,</p>\n-\n-    <p><i>i.e.</i>, using the hash function</p>\n-\n-    <p><a name=\"only_k_string_dna_hash\" id=\n-    \"only_k_string_dna_hash\"><i>f<sub>2</sub>(s, m) = &sum; <sub>i\n-    = 0</sub><sup>k - 1</sup> s<sub>i</sub> a<sup>i</sup></i> mod\n-    <i>m</i></a> , (6)</p>\n-\n-    <p>requiring scanning over only</p>\n-\n-    <p><i>k =</i> log<i><sub>4</sub>( m )</i></p>\n-\n-    <p>characters.</p>\n-\n-    <p>Other more elaborate hash-functions might scan <i>k</i>\n-    characters starting at a random position (determined at each\n-    resize), or scanning <i>k</i> random positions (determined at\n-    each resize), <i>i.e.</i>, using</p>\n-\n-    <p><i>f<sub>3</sub>(s, m) = &sum; <sub>i =\n-    r</sub>0</i><sup>r<sub>0</sub> + k - 1</sup> s<sub>i</sub>\n-    a<sup>i</sup> mod <i>m</i> ,</p>\n-\n-    <p>or</p>\n-\n-    <p><i>f<sub>4</sub>(s, m) = &sum; <sub>i = 0</sub><sup>k -\n-    1</sup> s<sub>r</sub>i</i> a<sup>r<sub>i</sub></sup> mod\n-    <i>m</i> ,</p>\n-\n-    <p>respectively, for <i>r<sub>0</sub>,..., r<sub>k-1</sub></i>\n-    each in the (inclusive) range <i>[0,...,t-1]</i>.</p>\n-\n-    <p>It should be noted that the above functions cannot be\n-    decomposed as <a href=\n-    \"#ranged_hash_composed_of_hash_and_range_hashing\">(1)</a> .</p>\n-\n-    <h3><a name=\"pb_ds_imp\" id=\"pb_ds_imp\">Implementation</a></h3>\n-\n-    <p>This sub-subsection describes the implementation of the\n-    above in <tt>pb_ds</tt>. It first explains range-hashing\n-    functions in collision-chaining tables, then ranged-hash\n-    functions in collision-chaining tables, then probing-based\n-    tables, and, finally, lists the relevant classes in\n-    <tt>pb_ds</tt>.</p>\n-\n-    <h4>Range-Hashing and Ranged-Hashes in Collision-Chaining\n-    Tables</h4>\n-\n-    <p><a href=\n-    \"cc_hash_table.html\"><tt>cc_hash_table</tt></a> is\n-    parametrized by <tt>Hash_Fn</tt> and <tt>Comb_Hash_Fn</tt>, a\n-    hash functor and a combining hash functor, respectively.</p>\n-\n-    <p>In general, <tt>Comb_Hash_Fn</tt> is considered a\n-    range-hashing functor. <a href=\n-    \"cc_hash_table.html\"><tt>cc_hash_table</tt></a>\n-    synthesizes a ranged-hash function from <tt>Hash_Fn</tt> and\n-    <tt>Comb_Hash_Fn</tt> (see <a href=\n-    \"#ranged_hash_composed_of_hash_and_range_hashing\">(1)</a>\n-    above). Figure <a href=\"#hash_range_hashing_seq_diagram\">Insert\n-    hash sequence diagram</a> shows an <tt>insert</tt> sequence\n-    diagram for this case. The user inserts an element (point A),\n-    the container transforms the key into a non-negative integral\n-    using the hash functor (points B and C), and transforms the\n-    result into a position using the combining functor (points D\n-    and E).</p>\n-\n-    <h6 class=\"c1\"><a name=\"hash_range_hashing_seq_diagram\" id=\n-    \"hash_range_hashing_seq_diagram\"><img src=\n-    \"hash_range_hashing_seq_diagram.png\" alt=\"no image\" /></a></h6>\n-\n-    <h6 class=\"c1\">Insert hash sequence diagram.</h6>\n-\n-    <p>If <a href=\n-    \"cc_hash_table.html\"><tt>cc_hash_table</tt></a>'s\n-    hash-functor, <tt>Hash_Fn</tt> is instantiated by <a href=\n-    \"null_hash_fn.html\"><tt>null_hash_fn</tt></a> (see <a href=\n-    \"concepts.html#concepts_null_policies\">Interface::Concepts::Null\n-    Policy Classes</a>), then <tt>Comb_Hash_Fn</tt> is taken to be\n-    a ranged-hash function. Figure <a href=\n-    \"#hash_range_hashing_seq_diagram2\">Insert hash sequence diagram\n-    with a null hash policy</a> shows an <tt>insert</tt> sequence\n-    diagram. The user inserts an element (point A), the container\n-    transforms the key into a position using the combining functor\n-    (points B and C).</p>\n-\n-    <h6 class=\"c1\"><a name=\"hash_range_hashing_seq_diagram2\" id=\n-    \"hash_range_hashing_seq_diagram2\"><img src=\n-    \"hash_range_hashing_seq_diagram2.png\" alt=\n-    \"no image\" /></a></h6>\n-\n-    <h6 class=\"c1\">Insert hash sequence diagram with a null hash\n-    policy.</h6>\n-\n-    <h4>Probing Tables</h4>\n-\n-    <p><a href=\n-    \"gp_hash_table.html\"></a><tt>gp_hash_table</tt> is\n-    parametrized by <tt>Hash_Fn</tt>, <tt>Probe_Fn</tt>, and\n-    <tt>Comb_Probe_Fn</tt>. As before, if <tt>Hash_Fn</tt> and\n-    <tt>Probe_Fn</tt> are, respectively, <a href=\n-    \"null_hash_fn.html\"><tt>null_hash_fn</tt></a> and <a href=\n-    \"null_probe_fn.html\"><tt>null_probe_fn</tt></a>, then\n-    <tt>Comb_Probe_Fn</tt> is a ranged-probe functor. Otherwise,\n-    <tt>Hash_Fn</tt> is a hash functor, <tt>Probe_Fn</tt> is a\n-    functor for offsets from a hash value, and\n-    <tt>Comb_Probe_Fn</tt> transforms a probe sequence into a\n-    sequence of positions within the table.</p>\n-\n-    <h4>Pre-Defined Policies</h4>\n-\n-    <p><tt>pb_ds</tt> contains some pre-defined classes\n-    implementing range-hashing and probing functions:</p>\n-\n-    <ol>\n-      <li><a href=\n-      \"direct_mask_range_hashing.html\"><tt>direct_mask_range_hashing</tt></a>\n-      and <a href=\n-      \"direct_mod_range_hashing.html\"><tt>direct_mod_range_hashing</tt></a>\n-      are range-hashing functions based on a bit-mask and a modulo\n-      operation, respectively.</li>\n-\n-      <li><a href=\n-      \"linear_probe_fn.html\"><tt>linear_probe_fn</tt></a>, and\n-      <a href=\n-      \"quadratic_probe_fn.html\"><tt>quadratic_probe_fn</tt></a> are\n-      a linear probe and a quadratic probe function,\n-      respectively.</li>\n-    </ol>Figure <a href=\"#hash_policy_cd\">Hash policy class\n-    diagram</a> shows a class diagram.\n-\n-    <h6 class=\"c1\"><a name=\"hash_policy_cd\" id=\n-    \"hash_policy_cd\"><img src=\"hash_policy_cd.png\" alt=\n-    \"no image\" /></a></h6>\n-\n-    <h6 class=\"c1\">Hash policy class diagram.</h6>\n-\n-    <h2><a name=\"resize_policies\" id=\"resize_policies\">Resize\n-    Policies</a></h2>\n-\n-    <h3><a name=\"general\" id=\"general\">General Terms</a></h3>\n-\n-    <p>Hash-tables, as opposed to trees, do not naturally grow or\n-    shrink. It is necessary to specify policies to determine how\n-    and when a hash table should change its size. Usually, resize\n-    policies can be decomposed into orthogonal policies:</p>\n-\n-    <ol>\n-      <li>A <i>size policy</i> indicating <i>how</i> a hash table\n-      should grow (<i>e.g.,</i> it should multiply by powers of\n-      2).</li>\n-\n-      <li>A <i>trigger policy</i> indicating <i>when</i> a hash\n-      table should grow (<i>e.g.,</i> a load factor is\n-      exceeded).</li>\n-    </ol>\n-\n-    <h3><a name=\"size_policies\" id=\"size_policies\">Size\n-    Policies</a></h3>\n-\n-    <p>Size policies determine how a hash table changes size. These\n-    policies are simple, and there are relatively few sensible\n-    options. An exponential-size policy (with the initial size and\n-    growth factors both powers of 2) works well with a mask-based\n-    range-hashing function (see <a href=\n-    \"#hash_policies\">Range-Hashing Policies</a>), and is the\n-    hard-wired policy used by Dinkumware [<a href=\n-    \"references.html#dinkumware_stl\">dinkumware_stl</a>]. A\n-    prime-list based policy works well with a modulo-prime range\n-    hashing function (see <a href=\"#hash_policies\">Range-Hashing\n-    Policies</a>), and is the hard-wired policy used by SGI's\n-    implementation [<a href=\n-    \"references.html#sgi_stl\">sgi_stl</a>].</p>\n-\n-    <h3><a name=\"trigger_policies\" id=\"trigger_policies\">Trigger\n-    Policies</a></h3>\n-\n-    <p>Trigger policies determine when a hash table changes size.\n-    Following is a description of two policies: <i>load-check</i>\n-    policies, and collision-check policies.</p>\n-\n-    <p>Load-check policies are straightforward. The user specifies\n-    two factors, <i>&alpha;<sub>min</sub></i> and\n-    <i>&alpha;<sub>max</sub></i>, and the hash table maintains the\n-    invariant that</p>\n-\n-    <p><i><a name=\"load_factor_min_max\" id=\n-    \"load_factor_min_max\">&alpha;<sub>min</sub> &le; (number of\n-    stored elements) / (hash-table size) &le;\n-    &alpha;<sub>max</sub></a></i> (1) .</p>\n-\n-    <p>Collision-check policies work in the opposite direction of\n-    load-check policies. They focus on keeping the number of\n-    collisions moderate and hoping that the size of the table will\n-    not grow very large, instead of keeping a moderate load-factor\n-    and hoping that the number of collisions will be small. A\n-    maximal collision-check policy resizes when the longest\n-    probe-sequence grows too large.</p>\n-\n-    <p>Consider Figure <a href=\"#balls_and_bins\">Balls and\n-    bins</a>. Let the size of the hash table be denoted by\n-    <i>m</i>, the length of a probe sequence be denoted by\n-    <i>k</i>, and some load factor be denoted by &alpha;. We would\n-    like to calculate the minimal length of <i>k</i>, such that if\n-    there were <i>&alpha; m</i> elements in the hash table, a probe\n-    sequence of length <i>k</i> would be found with probability at\n-    most <i>1/m</i>.</p>\n-\n-    <h6 class=\"c1\"><a name=\"balls_and_bins\" id=\n-    \"balls_and_bins\"><img src=\"balls_and_bins.png\" alt=\n-    \"no image\" /></a></h6>\n-\n-    <h6 class=\"c1\">Balls and bins.</h6>\n-\n-    <p>Denote the probability that a probe sequence of length\n-    <i>k</i> appears in bin <i>i</i> by <i>p<sub>i</sub></i>, the\n-    length of the probe sequence of bin <i>i</i> by\n-    <i>l<sub>i</sub></i>, and assume uniform distribution. Then</p>\n-\n-    <p><a name=\"prob_of_p1\" id=\n-    \"prob_of_p1\"><i>p<sub>1</sub></i></a> = (3)</p>\n-\n-    <p class=\"c2\"><b>P</b>(l<sub>1</sub> &ge; k) =</p>\n-\n-    <p><i><b>P</b>(l<sub>1</sub> &ge; &alpha; ( 1 + k / &alpha; - 1\n-    ) &le;</i> (a)</p>\n-\n-    <p><i>e ^ ( - ( &alpha; ( k / &alpha; - 1 )<sup>2</sup> ) /2\n-    )</i> ,</p>\n-\n-    <p>where (a) follows from the Chernoff bound [<a href=\n-    \"references.html#motwani95random\">motwani95random</a>]. To\n-    calculate the probability that <i>some</i> bin contains a probe\n-    sequence greater than <i>k</i>, we note that the\n-    <i>l<sub>i</sub></i> are negatively-dependent [<a href=\n-    \"references.html#dubhashi98neg\">dubhashi98neg</a>]. Let\n-    <i><b>I</b>(.)</i> denote the indicator function. Then</p>\n-\n-    <p><a name=\"at_least_k_i_n_some_bin\" id=\n-    \"at_least_k_i_n_some_bin\"><i><b>P</b>( exists<sub>i</sub>\n-    l<sub>i</sub> &ge; k ) =</i> (3)</a></p>\n-\n-    <p class=\"c2\"><b>P</b> ( &sum; <sub>i = 1</sub><sup>m</sup>\n-    <b>I</b>(l<sub>i</sub> &ge; k) &ge; 1 ) =</p>\n-\n-    <p><i><b>P</b> ( &sum; <sub>i = 1</sub><sup>m</sup> <b>I</b> (\n-    l<sub>i</sub> &ge; k ) &ge; m p<sub>1</sub> ( 1 + 1 / (m\n-    p<sub>1</sub>) - 1 ) ) &le;</i> (a)</p>\n-\n-    <p class=\"c2\">e ^ ( ( - m p<sub>1</sub> ( 1 / (m p<sub>1</sub>)\n-    - 1 ) <sup>2</sup> ) / 2 ) ,</p>\n-\n-    <p>where (a) follows from the fact that the Chernoff bound can\n-    be applied to negatively-dependent variables [<a href=\n-    \"references.html#dubhashi98neg\">dubhashi98neg</a>]. Inserting\n-    <a href=\"#prob_of_p1\">(2)</a> into <a href=\n-    \"#at_least_k_i_n_some_bin\">(3)</a>, and equating with\n-    <i>1/m</i>, we obtain</p>\n-\n-    <p><i>k ~ &radic; ( 2 &alpha;</i> ln <i>2 m</i> ln<i>(m) )\n-    )</i> .</p>\n-\n-    <h3><a name=\"imp_pb_ds\" id=\"imp_pb_ds\">Implementation</a></h3>\n-\n-    <p>This sub-subsection describes the implementation of the\n-    above in <tt>pb_ds</tt>. It first describes resize policies and\n-    their decomposition into trigger and size policies, then\n-    describes pre-defined classes, and finally discusses controlled\n-    access the policies' internals.</p>\n-\n-    <h4>Resize Policies and Their Decomposition</h4>\n-\n-    <p>Each hash-based container is parametrized by a\n-    <tt>Resize_Policy</tt> parameter; the container derives\n-    <tt><b>public</b></tt>ly from <tt>Resize_Policy</tt>. For\n-    example:</p>\n-    <pre>\n-<a href=\"cc_hash_table.html\">cc_hash_table</a>&lt;\n-    <b>typename</b> Key,\n-    <b>typename</b> Mapped,\n-    ...\n-    <b>typename</b> Resize_Policy\n-    ...&gt; :\n-        <b>public</b> Resize_Policy\n-</pre>\n-\n-    <p>As a container object is modified, it continuously notifies\n-    its <tt>Resize_Policy</tt> base of internal changes\n-    (<i>e.g.</i>, collisions encountered and elements being\n-    inserted). It queries its <tt>Resize_Policy</tt> base whether\n-    it needs to be resized, and if so, to what size.</p>\n-\n-    <p>Figure <a href=\"#insert_resize_sequence_diagram1\">Insert\n-    resize sequence diagram</a> shows a (possible) sequence diagram\n-    of an insert operation. The user inserts an element; the hash\n-    table notifies its resize policy that a search has started\n-    (point A); in this case, a single collision is encountered -\n-    the table notifies its resize policy of this (point B); the\n-    container finally notifies its resize policy that the search\n-    has ended (point C); it then queries its resize policy whether\n-    a resize is needed, and if so, what is the new size (points D\n-    to G); following the resize, it notifies the policy that a\n-    resize has completed (point H); finally, the element is\n-    inserted, and the policy notified (point I).</p>\n-\n-    <h6 class=\"c1\"><a name=\"insert_resize_sequence_diagram1\" id=\n-    \"insert_resize_sequence_diagram1\"><img src=\n-    \"insert_resize_sequence_diagram1.png\" alt=\n-    \"no image\" /></a></h6>\n-\n-    <h6 class=\"c1\">Insert resize sequence diagram.</h6>\n-\n-    <p>In practice, a resize policy can be usually orthogonally\n-    decomposed to a size policy and a trigger policy. Consequently,\n-    the library contains a single class for instantiating a resize\n-    policy: <a href=\n-    \"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n-    is parametrized by <tt>Size_Policy</tt> and\n-    <tt>Trigger_Policy</tt>, derives <tt><b>public</b></tt>ly from\n-    both, and acts as a standard delegate [<a href=\n-    \"references.html#gamma95designpatterns\">gamma95designpatterns</a>]\n-    to these policies.</p>\n-\n-    <p>Figures <a href=\"#insert_resize_sequence_diagram2\">Standard\n-    resize policy trigger sequence diagram</a> and <a href=\n-    \"#insert_resize_sequence_diagram3\">Standard resize policy size\n-    sequence diagram</a> show sequence diagrams illustrating the\n-    interaction between the standard resize policy and its trigger\n-    and size policies, respectively.</p>\n-\n-    <h6 class=\"c1\"><a name=\"insert_resize_sequence_diagram2\" id=\n-    \"insert_resize_sequence_diagram2\"><img src=\n-    \"insert_resize_sequence_diagram2.png\" alt=\n-    \"no image\" /></a></h6>\n-\n-    <h6 class=\"c1\">Standard resize policy trigger sequence\n-    diagram.</h6>\n-\n-    <h6 class=\"c1\"><a name=\"insert_resize_sequence_diagram3\" id=\n-    \"insert_resize_sequence_diagram3\"><img src=\n-    \"insert_resize_sequence_diagram3.png\" alt=\n-    \"no image\" /></a></h6>\n-\n-    <h6 class=\"c1\">Standard resize policy size sequence\n-    diagram.</h6>\n-\n-    <h4>Pre-Defined Policies</h4>\n-\n-    <p>The library includes the following\n-    instantiations of size and trigger policies:</p>\n-\n-    <ol>\n-      <li><a href=\n-      \"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n-      implements a load check trigger policy.</li>\n-\n-      <li><a href=\n-      \"cc_hash_max_collision_check_resize_trigger.html\"><tt>cc_hash_max_collision_check_resize_trigger</tt></a>\n-      implements a collision check trigger policy.</li>\n-\n-      <li><a href=\n-      \"hash_exponential_size_policy.html\"><tt>hash_exponential_size_policy</tt></a>\n-      implements an exponential-size policy (which should be used\n-      with mask range hashing).</li>\n-\n-      <li><a href=\n-      \"hash_prime_size_policy.html\"><tt>hash_prime_size_policy</tt></a>\n-      implementing a size policy based on a sequence of primes\n-      [<a href=\"references.html#sgi_stl\">sgi_stl</a>] (which should\n-      be used with mod range hashing</li>\n-    </ol>\n-\n-    <p>Figure <a href=\"#resize_policy_cd\">Resize policy class\n-    diagram</a> gives an overall picture of the resize-related\n-    classes. <a href=\n-    \"basic_hash_table.html\"><tt>basic_hash_table</tt></a>\n-    is parametrized by <tt>Resize_Policy</tt>, which it subclasses\n-    publicly. This class is currently instantiated only by <a href=\n-    \"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>.\n-    <a href=\n-    \"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n-    itself is parametrized by <tt>Trigger_Policy</tt> and\n-    <tt>Size_Policy</tt>. Currently, <tt>Trigger_Policy</tt> is\n-    instantiated by <a href=\n-    \"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>,\n-    or <a href=\n-    \"cc_hash_max_collision_check_resize_trigger.html\"><tt>cc_hash_max_collision_check_resize_trigger</tt></a>;\n-    <tt>Size_Policy</tt> is instantiated by <a href=\n-    \"hash_exponential_size_policy.html\"><tt>hash_exponential_size_policy</tt></a>,\n-    or <a href=\n-    \"hash_prime_size_policy.html\"><tt>hash_prime_size_policy</tt></a>.</p>\n-\n-    <h6 class=\"c1\"><a name=\"resize_policy_cd\" id=\n-    \"resize_policy_cd\"><img src=\"resize_policy_cd.png\" alt=\n-    \"no image\" /></a></h6>\n-\n-    <h6 class=\"c1\">Resize policy class diagram.</h6>\n-\n-    <h4>Controlled Access to Policies' Internals</h4>\n-\n-    <p>There are cases where (controlled) access to resize\n-    policies' internals is beneficial. <i>E.g.</i>, it is sometimes\n-    useful to query a hash-table for the table's actual size (as\n-    opposed to its <tt>size()</tt> - the number of values it\n-    currently holds); it is sometimes useful to set a table's\n-    initial size, externally resize it, or change load factors.</p>\n-\n-    <p>Clearly, supporting such methods both decreases the\n-    encapsulation of hash-based containers, and increases the\n-    diversity between different associative-containers' interfaces.\n-    Conversely, omitting such methods can decrease containers'\n-    flexibility.</p>\n-\n-    <p>In order to avoid, to the extent possible, the above\n-    conflict, the hash-based containers themselves do not address\n-    any of these questions; this is deferred to the resize policies,\n-    which are easier to change or replace. Thus, for example,\n-    neither <a href=\n-    \"cc_hash_table.html\"><tt>cc_hash_table</tt></a> nor\n-    <a href=\n-    \"gp_hash_table.html\"><tt>gp_hash_table</tt></a>\n-    contain methods for querying the actual size of the table; this\n-    is deferred to <a href=\n-    \"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>.</p>\n-\n-    <p>Furthermore, the policies themselves are parametrized by\n-    template arguments that determine the methods they support\n-    ([<a href=\n-    \"references.html#alexandrescu01modern\">alexandrescu01modern</a>]\n-    shows techniques for doing so). <a href=\n-    \"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n-    is parametrized by <tt>External_Size_Access</tt> that\n-    determines whether it supports methods for querying the actual\n-    size of the table or resizing it. <a href=\n-    \"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n-    is parametrized by <tt>External_Load_Access</tt> that\n-    determines whether it supports methods for querying or\n-    modifying the loads. <a href=\n-    \"cc_hash_max_collision_check_resize_trigger.html\"><tt>cc_hash_max_collision_check_resize_trigger</tt></a>\n-    is parametrized by <tt>External_Load_Access</tt> that\n-    determines whether it supports methods for querying the\n-    load.</p>\n-\n-    <p>Some operations, for example, resizing a container at\n-    run time, or changing the load factors of a load-check trigger\n-    policy, require the container itself to resize. As mentioned\n-    above, the hash-based containers themselves do not contain\n-    these types of methods, only their resize policies.\n-    Consequently, there must be some mechanism for a resize policy\n-    to manipulate the hash-based container. As the hash-based\n-    container is a subclass of the resize policy, this is done\n-    through virtual methods. Each hash-based container has a\n-    <tt><b>private</b></tt> <tt><b>virtual</b></tt> method:</p>\n-    <pre>\n-<b>virtual void</b>\n-    do_resize\n-    (size_type new_size);\n-</pre>\n-\n-    <p>which resizes the container. Implementations of\n-    <tt>Resize_Policy</tt> can export public methods for resizing\n-    the container externally; these methods internally call\n-    <tt>do_resize</tt> to resize the table.</p>\n-\n-    <h2><a name=\"policy_interaction\" id=\"policy_interaction\">Policy\n-    Interaction</a></h2>\n-\n-    <p>Hash-tables are unfortunately especially susceptible to\n-    choice of policies. One of the more complicated aspects of this\n-    is that poor combinations of good policies can form a poor\n-    container. Following are some considerations.</p>\n-\n-    <h3><a name=\"policy_interaction_probe_size_trigger\" id=\n-    \"policy_interaction_probe_size_trigger\">Probe Policies, Size\n-    Policies, and Trigger Policies</a></h3>\n-\n-    <p>Some combinations do not work well for probing containers.\n-    For example, combining a quadratic probe policy with an\n-    exponential size policy can yield a poor container: when an\n-    element is inserted, a trigger policy might decide that there\n-    is no need to resize, as the table still contains unused\n-    entries; the probe sequence, however, might never reach any of\n-    the unused entries.</p>\n-\n-    <p>Unfortunately, <tt>pb_ds</tt> cannot detect such problems at\n-    compilation (they are halting reducible). It therefore defines\n-    an exception class <a href=\n-    \"insert_error.html\"><tt>insert_error</tt></a> to throw an\n-    exception in this case.</p>\n-\n-    <h3><a name=\"policy_interaction_hash_trigger\" id=\n-    \"policy_interaction_hash_trigger\">Hash Policies and Trigger\n-    Policies</a></h3>\n-\n-    <p>Some trigger policies are especially susceptible to poor\n-    hash functions. Suppose, as an extreme case, that the hash\n-    function transforms each key to the same hash value. After some\n-    inserts, a collision detecting policy will always indicate that\n-    the container needs to grow.</p>\n-\n-    <p>The library, therefore, by design, limits each operation to\n-    one resize. For each <tt>insert</tt>, for example, it queries\n-    only once whether a resize is needed.</p>\n-\n-    <h3><a name=\"policy_interaction_eq_sth_hash\" id=\n-    \"policy_interaction_eq_sth_hash\">Equivalence Functors, Storing\n-    Hash Values, and Hash Functions</a></h3>\n-\n-    <p><a href=\n-    \"cc_hash_table.html\"><tt>cc_hash_table</tt></a> and\n-    <a href=\n-    \"gp_hash_table.html\"><tt>gp_hash_table</tt></a> are\n-    parametrized by an equivalence functor and by a\n-    <tt>Store_Hash</tt> parameter. If the latter parameter is\n-    <tt><b>true</b></tt>, then the container stores with each entry\n-    a hash value, and uses this value in case of collisions to\n-    determine whether to apply a hash value. This can lower the\n-    cost of collision for some types, but increase the cost of\n-    collisions for other types.</p>\n-\n-    <p>If a ranged-hash function or ranged probe function is\n-    directly supplied, however, then it makes no sense to store the\n-    hash value with each entry. <tt>pb_ds</tt>'s container will\n-    fail at compilation, by design, if this is attempted.</p>\n-\n-    <h3><a name=\"policy_interaction_size_load_check\" id=\n-    \"policy_interaction_size_load_check\">Size Policies and\n-    Load-Check Trigger Policies</a></h3>\n-\n-    <p>Assume a size policy issues an increasing sequence of sizes\n-    <i>a, a q, a q<sup>1</sup>, a q<sup>2</sup>, ...</i> For\n-    example, an exponential size policy might issue the sequence of\n-    sizes <i>8, 16, 32, 64, ...</i></p>\n-\n-    <p>If a load-check trigger policy is used, with loads\n-    <i>&alpha;<sub>min</sub></i> and <i>&alpha;<sub>max</sub></i>,\n-    respectively, then it is a good idea to have:</p>\n-\n-    <ol>\n-      <li><i>&alpha;<sub>max</sub> ~ 1 / q</i></li>\n-\n-      <li><i>&alpha;<sub>min</sub> &lt; 1 / (2 q)</i></li>\n-    </ol>\n-\n-    <p>This will ensure that the amortized hash cost of each\n-    modifying operation is at most approximately 3.</p>\n-\n-    <p><i>&alpha;<sub>min</sub> ~ &alpha;<sub>max</sub></i> is, in\n-    any case, a bad choice, and <i>&alpha;<sub>min</sub> &gt;\n-    &alpha;<sub>max</sub></i> is horrendous.</p>\n-  </div>\n-</body>\n-</html>"}, {"sha": "1089b1544786ca0d9fc4a9b05f990ca972fc2c08", "filename": "libstdc++-v3/doc/html/ext/pb_ds/hash_exponential_size_policy.html", "status": "removed", "additions": 0, "deletions": 183, "changes": 183, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fhash_exponential_size_policy.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fhash_exponential_size_policy.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fhash_exponential_size_policy.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7", "patch": "@@ -1,183 +0,0 @@\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n-    \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n-<head>\n-  <meta name=\"generator\" content=\n-  \"HTML Tidy for Linux/x86 (vers 12 April 2005), see www.w3.org\" />\n-\n-  <title>hash_exponential_size_policy Interface</title>\n-  <meta http-equiv=\"Content-Type\" content=\n-  \"text/html; charset=us-ascii\" />\n-  </head>\n-\n-<body>\n-  <div id=\"page\">\n-    <h1><tt>hash_exponential_size_policy</tt> Interface</h1>\n-\n-    <p>A size policy whose sequence of sizes form an exponential\n-    sequence (typically powers of 2)</p>\n-\n-    <p>Defined in: <a href=\n-    \"http://gcc.gnu.org/viewcvs/*checkout*/trunk/libstdc%2B%2B-v3/include/ext/pb_ds/hash_policy.hpp\"><tt>hash_policy.hpp</tt></a></p>\n-\n-    <h2><a name=\"link1\" id=\"link1\">Template Parameters</a></h2>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\n-    \"Template Parameters\">\n-      <tr>\n-        <td width=\"20%\" align=\"left\"><b>Parameter</b></td>\n-\n-        <td width=\"50%\" align=\"left\"><b>Description</b></td>\n-\n-        <td width=\"30%\" align=\"left\"><b>Default Value</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"Size_Type42920436\" id=\n-\"Size_Type42920436\"><b>typename</b> Size_Type </a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Size type.</p>\n-        </td>\n-\n-        <td>size_t</td>\n-      </tr>\n-    </table>\n-\n-    <h2><a name=\"link2\" id=\"link2\">Public Types and\n-    Constants</a></h2>\n-\n-    <h3><a name=\"link3\" id=\"link3\">General Definitions</a></h3>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Types\">\n-      <tr>\n-        <td width=\"30%\" align=\"left\"><b>Type</b></td>\n-\n-        <td width=\"55%\" align=\"left\"><b>Definition</b></td>\n-\n-        <td width=\"15%\" align=\"left\"><b>Description</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"size_type55424436\" id=\"size_type55424436\">size_type</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <pre>\n-<a href=\"#Size_Type42920436\"><tt>Size_Type</tt></a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Size type.</p>\n-        </td>\n-      </tr>\n-    </table>\n-\n-    <h2><a name=\"link4\" id=\"link4\">Public Methods</a></h2>\n-\n-    <h3><a name=\"link5\" id=\"link5\">Constructors, Destructor, and\n-    Related</a></h3>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Methods\">\n-      <tr>\n-        <td width=\"45%\" align=\"left\"><b>Method</b></td>\n-\n-        <td width=\"55%\" align=\"left\"><b>Description</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-  hash_exponential_size_policy\n-  (<a href=\n-\"#size_type55424436\"><tt>size_type</tt></a> start_size = 8, \n-    <a href=\n-\"#size_type55424436\"><tt>size_type</tt></a> grow_factor = 2)\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Default constructor, or constructor taking a\n-          <span class=\"c1\"><tt>start_size</tt></span>, or\n-          constructor taking a start size and <span class=\n-          \"c1\"><tt>grow_factor</tt></span>. The policy will use the\n-          sequence of sizes <span class=\n-          \"c1\"><tt>start_size</tt></span>, <span class=\n-          \"c1\"><tt>start_size</tt></span> * <span class=\n-          \"c1\"><tt>grow_factor</tt></span>, <span class=\n-          \"c1\"><tt>start_size</tt></span> * <span class=\n-          \"c1\"><tt>grow_factor</tt></span>^2, ...</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>void</b> \n-  swap\n-  (<span class=\n-\"c2\"><tt>hash_exponential_size_policy</tt></span> &amp;other)\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Swaps content.</p>\n-        </td>\n-      </tr>\n-    </table>\n-\n-    <h2><a name=\"link6\" id=\"link6\">Protected Methods</a></h2>\n-\n-    <h3><a name=\"link7\" id=\"link7\">Size methods</a></h3>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Methods\">\n-      <tr>\n-        <td width=\"45%\" align=\"left\"><b>Method</b></td>\n-\n-        <td width=\"55%\" align=\"left\"><b>Description</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a href=\"#size_type55424436\"><tt>size_type</tt></a>\n-  get_nearest_larger_size\n-  (<a href=\n-\"#size_type55424436\"><tt>size_type</tt></a> size) <b>const</b>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Given a size <span class=\"c1\"><tt>size</tt></span>,\n-          returns a size that is larger.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a href=\"#size_type55424436\"><tt>size_type</tt></a>\n-  get_nearest_smaller_size\n-  (<a href=\n-\"#size_type55424436\"><tt>size_type</tt></a> size) <b>const</b>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Given a size <span class=\"c1\"><tt>size</tt></span>,\n-          returns a size that is smaller.</p>\n-        </td>\n-      </tr>\n-    </table>\n-  </div>\n-</body>\n-</html>"}, {"sha": "b22b7b5cfddee589513cc93ccdad38cac0d9574d", "filename": "libstdc++-v3/doc/html/ext/pb_ds/hash_load_check_resize_trigger.html", "status": "removed", "additions": 0, "deletions": 583, "changes": 583, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fhash_load_check_resize_trigger.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fhash_load_check_resize_trigger.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fhash_load_check_resize_trigger.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7", "patch": "@@ -1,583 +0,0 @@\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n-    \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n-<head>\n-  <meta name=\"generator\" content=\n-  \"HTML Tidy for Linux/x86 (vers 12 April 2005), see www.w3.org\" />\n-\n-  <title>hash_load_check_resize_trigger Interface</title>\n-  <meta http-equiv=\"Content-Type\" content=\n-  \"text/html; charset=us-ascii\" />\n-  </head>\n-\n-<body>\n-  <div id=\"page\">\n-    <h1><tt>hash_load_check_resize_trigger</tt> Interface</h1>\n-\n-    <p>A resize trigger policy based on a load check. It keeps the\n-    load factor between some load factors load_min and\n-    load_max.</p>\n-\n-    <p>Defined in: <a href=\n-    \"http://gcc.gnu.org/viewcvs/*checkout*/trunk/libstdc%2B%2B-v3/include/ext/pb_ds/hash_policy.hpp\"><tt>hash_policy.hpp</tt></a></p>\n-\n-    <h2><a name=\"link1\" id=\"link1\">Template Parameters</a></h2>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\n-    \"Template Parameters\">\n-      <tr>\n-        <td width=\"20%\" align=\"left\"><b>Parameter</b></td>\n-\n-        <td width=\"50%\" align=\"left\"><b>Description</b></td>\n-\n-        <td width=\"30%\" align=\"left\"><b>Default Value</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"External_Load_Access1313998607\" id=\n-\"External_Load_Access1313998607\"><b>bool</b> External_Load_Access </a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Specifies whether the load factor can be accessed\n-          externally. The two options have different trade-offs in\n-          terms of flexibility, genericity, and encapsulation.</p>\n-        </td>\n-\n-        <td><tt><b>false</b></tt></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"Size_Type42920436\" id=\n-\"Size_Type42920436\"><b>typename</b> Size_Type </a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Size type.</p>\n-        </td>\n-\n-        <td>size_t</td>\n-      </tr>\n-    </table>\n-\n-    <h2><a name=\"link2\" id=\"link2\">Public Types and\n-    Constants</a></h2>\n-\n-    <h3><a name=\"link3\" id=\"link3\">General Definitions</a></h3>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Types\">\n-      <tr>\n-        <td width=\"30%\" align=\"left\"><b>Type</b></td>\n-\n-        <td width=\"55%\" align=\"left\"><b>Definition</b></td>\n-\n-        <td width=\"15%\" align=\"left\"><b>Description</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"size_type55424436\" id=\"size_type55424436\">size_type</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <pre>\n-<a href=\"#Size_Type42920436\"><tt>Size_Type</tt></a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Size type.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"external_load_access3976598639\" id=\n-\"external_load_access3976598639\">external_load_access</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <pre>\n-<a href=\n-\"#External_Load_Access1313998607\"><tt>External_Load_Access</tt></a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Indicates whether loads can be accessed externally</p>\n-        </td>\n-      </tr>\n-    </table>\n-\n-    <h2><a name=\"link4\" id=\"link4\">Public Methods</a></h2>\n-\n-    <h3><a name=\"link5\" id=\"link5\">Constructors, Destructor, and\n-    Related</a></h3>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Methods\">\n-      <tr>\n-        <td width=\"45%\" align=\"left\"><b>Method</b></td>\n-\n-        <td width=\"55%\" align=\"left\"><b>Description</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-  hash_load_check_resize_trigger\n-  (float load_min = 0.125, \n-    float load_max = 0.5)\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Default constructor, or constructor taking\n-          <span class=\"c1\"><tt>load_min</tt></span> and\n-          <span class=\"c1\"><tt>load_max</tt></span> load factors\n-          between which this policy will keep the actual load.</p>\n-\n-          <p>It is the responsibility of the user to ensure that\n-          <span class=\"c1\"><tt>load_min</tt></span> is smaller than\n-          <span class=\"c1\"><tt>load_max</tt></span>.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>void</b>\n-  swap\n-  (<span class=\n-\"c2\"><tt>hash_load_check_resize_trigger</tt></span> &amp;other)\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Swaps content.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-  <b>virtual</b>\n-    ~hash_load_check_resize_trigger\n-    ()\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Destructor.</p>\n-        </td>\n-      </tr>\n-    </table>\n-\n-    <h3><a name=\"link6\" id=\"link6\">Load Access Methods</a></h3>\n-\n-    <p>These methods are only available if the external access\n-    parameter is set.</p>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Methods\">\n-      <tr>\n-        <td width=\"45%\" align=\"left\"><b>Method</b></td>\n-\n-        <td width=\"55%\" align=\"left\"><b>Description</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>inline</b> std::pair&lt;float, float&gt;\n-  get_loads\n-  () <b>const</b>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Returns a pair of the minimal and maximal loads,\n-          respectively.</p>\n-\n-          <p>Calling this method will not compile when <a href=\n-          \"#External_Load_Access1313998607\"><tt>External_Load_Access</tt></a>\n-          == <tt><b>false</b></tt>.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>void</b> \n-  set_loads\n-  (std::pair&lt;float, float&gt; load_pair)\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Sets the loads through a pair of the minimal and\n-          maximal loads, respectively.</p>\n-\n-          <p>Calling this method resizes the container, and might\n-          throw an exception. It is the responsibility of the user\n-          to pass appropriate loads to this function. Calling this\n-          method will not compile when <a href=\n-          \"#External_Load_Access1313998607\"><tt>External_Load_Access</tt></a>\n-          == <tt><b>false</b></tt>.</p>\n-        </td>\n-      </tr>\n-    </table>\n-\n-    <h2><a name=\"link7\" id=\"link7\">Protected Methods</a></h2>\n-\n-    <h3><a name=\"link8\" id=\"link8\">Insert Search\n-    Notifications.</a></h3>\n-\n-    <p>Notifications called during an insert operation.</p>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Methods\">\n-      <tr>\n-        <td width=\"45%\" align=\"left\"><b>Method</b></td>\n-\n-        <td width=\"55%\" align=\"left\"><b>Description</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>inline</b> <b>void</b>\n-  notify_insert_search_start\n-  ()\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Notifies a search started.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>inline</b> <b>void</b>\n-  notify_insert_search_collision\n-  ()\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Notifies a search encountered a collision.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>inline</b> <b>void</b>\n-  notify_insert_search_end\n-  ()\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Notifies a search ended.</p>\n-        </td>\n-      </tr>\n-    </table>\n-\n-    <h3><a name=\"link9\" id=\"link9\">Find Search\n-    Notifications.</a></h3>\n-\n-    <p>Notifications called during a find operation.</p>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Methods\">\n-      <tr>\n-        <td width=\"45%\" align=\"left\"><b>Method</b></td>\n-\n-        <td width=\"55%\" align=\"left\"><b>Description</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>inline</b> <b>void</b>\n-  notify_find_search_start\n-  ()\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Notifies a search started.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>inline</b> <b>void</b>\n-  notify_find_search_collision\n-  ()\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Notifies a search encountered a collision.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>inline</b> <b>void</b>\n-  notify_find_search_end\n-  ()\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Notifies a search ended.</p>\n-        </td>\n-      </tr>\n-    </table>\n-\n-    <h3><a name=\"link10\" id=\"link10\">Erase Search\n-    Notifications.</a></h3>\n-\n-    <p>Notifications called during an insert operation.</p>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Methods\">\n-      <tr>\n-        <td width=\"45%\" align=\"left\"><b>Method</b></td>\n-\n-        <td width=\"55%\" align=\"left\"><b>Description</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>inline</b> <b>void</b>\n-  notify_erase_search_start\n-  ()\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Notifies a search started.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>inline</b> <b>void</b>\n-  notify_erase_search_collision\n-  ()\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Notifies a search encountered a collision.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>inline</b> <b>void</b>\n-  notify_erase_search_end\n-  ()\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Notifies a search ended.</p>\n-        </td>\n-      </tr>\n-    </table>\n-\n-    <h3><a name=\"link11\" id=\"link11\">Content Change\n-    Notifications.</a></h3>\n-\n-    <p>Notifications called when the content of the table changes\n-    in a way that can affect the resize policy.</p>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Methods\">\n-      <tr>\n-        <td width=\"45%\" align=\"left\"><b>Method</b></td>\n-\n-        <td width=\"55%\" align=\"left\"><b>Description</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>inline</b> <b>void</b>\n-  notify_inserted\n-  (<a href=\"#size_type55424436\"><tt>size_type</tt></a> num_entries)\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Notifies an element was inserted. the total number of\n-          entries in the table is <span class=\n-          \"c1\"><tt>num_entries</tt></span>.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>inline</b> <b>void</b>\n-  notify_erased\n-  (<a href=\"#size_type55424436\"><tt>size_type</tt></a> num_entries)\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Notifies an element was erased.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>void</b> \n-  notify_cleared\n-  ()\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Notifies the table was cleared.</p>\n-        </td>\n-      </tr>\n-    </table>\n-\n-    <h3><a name=\"link12\" id=\"link12\">Size Change\n-    Notifications.</a></h3>\n-\n-    <p>Notifications called when the table changes size.</p>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Methods\">\n-      <tr>\n-        <td width=\"45%\" align=\"left\"><b>Method</b></td>\n-\n-        <td width=\"55%\" align=\"left\"><b>Description</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>void</b>\n-  notify_resized\n-  (<a href=\"#size_type55424436\"><tt>size_type</tt></a> new_size)\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Notifies the table was resized as a result of this\n-          object's signifying that a resize is needed.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>void</b>\n-  notify_externally_resized\n-  (<a href=\"#size_type55424436\"><tt>size_type</tt></a> new_size)\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Notifies the table was resized externally.</p>\n-        </td>\n-      </tr>\n-    </table>\n-\n-    <h3><a name=\"link13\" id=\"link13\">Queries</a></h3>\n-\n-    <p>Called to query whether/how to resize.</p>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Methods\">\n-      <tr>\n-        <td width=\"45%\" align=\"left\"><b>Method</b></td>\n-\n-        <td width=\"55%\" align=\"left\"><b>Description</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>inline</b> <b>bool</b> \n-  is_resize_needed\n-  () <b>const</b>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Queries whether a resize is needed.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>inline</b> <b>bool</b>\n-  is_grow_needed\n-  (<a href=\"#size_type55424436\"><tt>size_type</tt></a> size, \n-    <a href=\n-\"#size_type55424436\"><tt>size_type</tt></a> num_entries) <b>const</b>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Queries whether a grow is needed.</p>\n-\n-          <p>This method is called only if this object indicated\n-          resize is needed. The actual <span class=\n-          \"c1\"><tt>size</tt></span> of the table is <span class=\n-          \"c1\"><tt>size</tt></span>, and the number of entries in\n-          it is <span class=\"c1\"><tt>num_entries</tt></span>.</p>\n-        </td>\n-      </tr>\n-    </table>\n-\n-    <h2><a name=\"link14\" id=\"link14\">Private Methods</a></h2>\n-\n-    <h3><a name=\"link15\" id=\"link15\">Overrides</a></h3>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Methods\">\n-      <tr>\n-        <td width=\"45%\" align=\"left\"><b>Method</b></td>\n-\n-        <td width=\"55%\" align=\"left\"><b>Description</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>virtual</b> <b>void</b>\n-  do_resize\n-  (<a href=\"#size_type55424436\"><tt>size_type</tt></a> new_size)\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Resizes to <span class=\n-          \"c1\"><tt>new_size</tt></span>.</p>\n-        </td>\n-      </tr>\n-    </table>\n-  </div>\n-</body>\n-</html>"}, {"sha": "8976767b4f0e6e5e54e7e7e3088f192643c4d804", "filename": "libstdc++-v3/doc/html/ext/pb_ds/hash_prime_size_policy.html", "status": "removed", "additions": 0, "deletions": 149, "changes": 149, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fhash_prime_size_policy.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fhash_prime_size_policy.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fhash_prime_size_policy.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7", "patch": "@@ -1,149 +0,0 @@\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n-    \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n-<head>\n-  <meta name=\"generator\" content=\n-  \"HTML Tidy for Linux/x86 (vers 12 April 2005), see www.w3.org\" />\n-\n-  <title>hash_prime_size_policy Interface</title>\n-  <meta http-equiv=\"Content-Type\" content=\n-  \"text/html; charset=us-ascii\" />\n-  </head>\n-\n-<body>\n-  <div id=\"page\">\n-    <h1><tt>hash_prime_size_policy</tt> Interface</h1>\n-\n-    <p>A size policy whose sequence of sizes form a\n-    nearly-exponential sequence of primes.</p>\n-\n-    <p>Defined in: <a href=\n-    \"http://gcc.gnu.org/viewcvs/*checkout*/trunk/libstdc%2B%2B-v3/include/ext/pb_ds/hash_policy.hpp\"><tt>hash_policy.hpp</tt></a></p>\n-\n-    <h2><a name=\"link1\" id=\"link1\">Public Types and\n-    Constants</a></h2>\n-\n-    <h3><a name=\"link2\" id=\"link2\">General Definitions</a></h3>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Types\">\n-      <tr>\n-        <td width=\"30%\" align=\"left\"><b>Type</b></td>\n-\n-        <td width=\"55%\" align=\"left\"><b>Definition</b></td>\n-\n-        <td width=\"15%\" align=\"left\"><b>Description</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"size_type55424436\" id=\"size_type55424436\">size_type</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <pre>\n-size_t\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Size type.</p>\n-        </td>\n-      </tr>\n-    </table>\n-\n-    <h2><a name=\"link3\" id=\"link3\">Public Methods</a></h2>\n-\n-    <h3><a name=\"link4\" id=\"link4\">Constructors, Destructor, and\n-    Related</a></h3>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Methods\">\n-      <tr>\n-        <td width=\"45%\" align=\"left\"><b>Method</b></td>\n-\n-        <td width=\"55%\" align=\"left\"><b>Description</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-  hash_prime_size_policy\n-  (<a href=\n-\"#size_type55424436\"><tt>size_type</tt></a> start_size = 8)\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Default constructor, or constructor taking a\n-          <span class=\"c1\"><tt>start_size</tt></span> The policy\n-          will use the sequence of sizes approximately <span class=\n-          \"c1\"><tt>start_size</tt></span>, <span class=\n-          \"c1\"><tt>start_size</tt></span> * 2, <span class=\n-          \"c1\"><tt>start_size</tt></span> * 2^2, ...</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>inline</b> <b>void</b>\n-  swap\n-  (<span class=\n-\"c2\"><tt>hash_prime_size_policy</tt></span> &amp;other)\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Swaps content.</p>\n-        </td>\n-      </tr>\n-    </table>\n-\n-    <h2><a name=\"link5\" id=\"link5\">Protected Methods</a></h2>\n-\n-    <h3><a name=\"link6\" id=\"link6\">Size methods</a></h3>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Methods\">\n-      <tr>\n-        <td width=\"45%\" align=\"left\"><b>Method</b></td>\n-\n-        <td width=\"55%\" align=\"left\"><b>Description</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a href=\"#size_type55424436\"><tt>size_type</tt></a>\n-  get_nearest_larger_size\n-  (<a href=\n-\"#size_type55424436\"><tt>size_type</tt></a> size) <b>const</b>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Given a size <span class=\"c1\"><tt>size</tt></span>,\n-          returns a size that is larger.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a href=\"#size_type55424436\"><tt>size_type</tt></a>\n-  get_nearest_smaller_size\n-  (<a href=\n-\"#size_type55424436\"><tt>size_type</tt></a> size) <b>const</b>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Given a size <span class=\"c1\"><tt>size</tt></span>,\n-          returns a size that is smaller.</p>\n-        </td>\n-      </tr>\n-    </table>\n-  </div>\n-</body>\n-</html>"}, {"sha": "2867595b09154c145de72fce1b9270d6df56fdce", "filename": "libstdc++-v3/doc/html/ext/pb_ds/hash_random_int_erase_mem_usage_test.html", "status": "removed", "additions": 0, "deletions": 173, "changes": 173, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fhash_random_int_erase_mem_usage_test.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fhash_random_int_erase_mem_usage_test.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fhash_random_int_erase_mem_usage_test.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7", "patch": "@@ -1,173 +0,0 @@\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n-    \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n-<head>\n-<meta name=\"generator\" content=\"HTML Tidy for Linux/x86 (vers 12 April 2005), see www.w3.org\" />\n-<title>Tree Text Locality of Reference Timing Test</title>\n-<meta http-equiv=\"Content-Type\" content=\"text/html; charset=us-ascii\" />\n-</head>\n-<body>\n-<div id=\"page\">\n-<h1>Hash-Based Erase Memory-Use Test</h1>\n-<h2><a name=\"description\" id=\"description\">Description</a></h2>\n-<p>This test inserts a number of uniform i.i.d. integer keys\n-    into a container, then erases all keys except one. It measures\n-    the final size of the container.</p>\n-<p>(The test was executed with <a href=\"http://gcc.gnu.org/viewcvs/*checkout*/trunk/libstdc%2B%2B-v3/testsuite/performance/ext/pb_ds/hash_random_int_erase_mem_usage.cc\"><tt>hash_random_int_erase_mem_usage.cc</tt></a>\n-    2000 2000 2100)</p>\n-<h2><a name=\"purpose\" id=\"purpose\">Purpose</a></h2>\n-<p>The test checks how containers adjust internally as their\n-    logical size decreases (see <a href=\"motivation.html#assoc_ers_methods\">Motivation::Associative\n-    Containers::Slightly Different Methods::Methods Related to\n-    Erase</a>).</p>\n-<h2><a name=\"results\" id=\"results\">Results</a></h2>\n-<p>Figures <a href=\"#NHG\">NHG</a>, <a href=\"#NHM\">NHM</a> and\n-    <a href=\"#NHL\">NHL</a> show the results for the native and\n-    collision-chaining types in <a href=\"assoc_performance_tests.html#gcc\"><u>g++</u></a>, <a href=\"assoc_performance_tests.html#msvc\"><u>msvc++</u></a> and\n-    <a href=\"assoc_performance_tests.html#local\"><u>local</u></a>,\n-    respectively.</p>\n-<div id=\"NHG_res_div\">\n-<div id=\"NHG_gcc\">\n-<div id=\"NHG_hash_random_int_erase_mem_usage_test\">\n-<div id=\"NHG_assoc\">\n-<div id=\"NHG_Native_456_collision-chaing_456_and_probing_456_hash_random_int_erase_test\"><div style=\"border-style: dotted; border-width: 1px; border-color: lightgray\"><h6 class=\"c1\"><a name=\"NHG\" id=\"NHG\"><img src=\"hash_random_int_erase_mem_usage_test_gcc.png\" alt=\"no image\" /></a></h6>NHG: Native, collision-chaing, and probing, hash random int erase test - <a href=\"assoc_performance_tests.html#gcc\">g++</a><p>In the above figure, the names in the legends have the following meaning:</p>\n-<ol>\n-<li>\n-n_hash_set_ncah-\n-<tt>std::tr1::unordered_set</tt> with <tt>cache_hash_code</tt> = <tt><b>false</b></tt></li>\n-<li>\n-gp_hash_mask_linp_exp_nea_lc_1div8_1div2_nsth_set-\n-<a href=\"gp_hash_table.html\"><tt>gp_hash_table</tt></a>\n- with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mask_range_hashing.html\"><tt>direct_mask_range_hashing</tt></a>\n-, <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_exponential_size_policy.html\"><tt>hash_exponential_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/2</i>, and <tt>Probe_Fn</tt> = <a href=\"linear_probe_fn.html\"><tt>linear_probe_fn</tt></a>\n-</li>\n-<li>\n-cc_hash_mod_prime_nea_lc_1div8_1div1_nsth_set-\n-<a href=\"cc_hash_table.html\"><tt>cc_hash_table</tt></a>\n-with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mod_range_hashing.html\"><tt>direct_mod_range_hashing</tt></a>\n-, and <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_prime_size_policy.html\"><tt>hash_prime_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/1</i></li>\n-<li>\n-cc_hash_mask_exp_nea_lc_1div8_1div2_nsth_set-\n-<a href=\"cc_hash_table.html\"><tt>cc_hash_table</tt></a>\n-with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mask_range_hashing.html\"><tt>direct_mask_range_hashing</tt></a>\n-, and <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_exponential_size_policy.html\"><tt>hash_exponential_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/2</i></li>\n-</ol>\n-</div><div style=\"width: 100%; height: 20px\"></div></div>\n-</div>\n-</div>\n-</div>\n-</div>\n-<div id=\"NHM_res_div\">\n-<div id=\"NHM_msvc\">\n-<div id=\"NHM_hash_random_int_erase_mem_usage_test\">\n-<div id=\"NHM_assoc\">\n-<div id=\"NHM_Native_456_collision-chaing_456_and_probing_456_hash_random_int_erase_test\"><div style=\"border-style: dotted; border-width: 1px; border-color: lightgray\"><h6 class=\"c1\"><a name=\"NHM\" id=\"NHM\"><img src=\"hash_random_int_erase_mem_usage_test_msvc.png\" alt=\"no image\" /></a></h6>NHM: Native, collision-chaing, and probing, hash random int erase test - <a href=\"assoc_performance_tests.html#msvc\">msvc++</a><p>In the above figure, the names in the legends have the following meaning:</p>\n-<ol>\n-<li>\n-n_hash_set_ncah-\n-<tt>stdext::hash_set</tt></li>\n-<li>\n-gp_hash_mask_linp_exp_nea_lc_1div8_1div2_nsth_set-\n-<a href=\"gp_hash_table.html\"><tt>gp_hash_table</tt></a>\n- with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mask_range_hashing.html\"><tt>direct_mask_range_hashing</tt></a>\n-, <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_exponential_size_policy.html\"><tt>hash_exponential_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/2</i>, and <tt>Probe_Fn</tt> = <a href=\"linear_probe_fn.html\"><tt>linear_probe_fn</tt></a>\n-</li>\n-<li>\n-cc_hash_mod_prime_nea_lc_1div8_1div1_nsth_set-\n-<a href=\"cc_hash_table.html\"><tt>cc_hash_table</tt></a>\n-with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mod_range_hashing.html\"><tt>direct_mod_range_hashing</tt></a>\n-, and <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_prime_size_policy.html\"><tt>hash_prime_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/1</i></li>\n-<li>\n-cc_hash_mask_exp_nea_lc_1div8_1div2_nsth_set-\n-<a href=\"cc_hash_table.html\"><tt>cc_hash_table</tt></a>\n-with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mask_range_hashing.html\"><tt>direct_mask_range_hashing</tt></a>\n-, and <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_exponential_size_policy.html\"><tt>hash_exponential_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/2</i></li>\n-</ol>\n-</div><div style=\"width: 100%; height: 20px\"></div></div>\n-</div>\n-</div>\n-</div>\n-</div>\n-<div id=\"NHM_res_div\">\n-<div id=\"NHM_msvc\">\n-<div id=\"NHM_hash_random_int_erase_mem_usage_test\">\n-<div id=\"NHM_assoc\">\n-<div id=\"NHM_Native_456_collision-chaing_456_and_probing_456_hash_random_int_erase_test\"><div style=\"border-style: dotted; border-width: 1px; border-color: lightgray\"><h6 class=\"c1\"><a name=\"NHM\" id=\"NHM\"><img src=\"hash_random_int_erase_mem_usage_test_msvc.png\" alt=\"no image\" /></a></h6>NHM: Native, collision-chaing, and probing, hash random int erase test - <a href=\"assoc_performance_tests.html#msvc\">msvc++</a><p>In the above figure, the names in the legends have the following meaning:</p>\n-<ol>\n-<li>\n-n_hash_set_ncah-\n-<tt>stdext::hash_set</tt></li>\n-<li>\n-gp_hash_mask_linp_exp_nea_lc_1div8_1div2_nsth_set-\n-<a href=\"gp_hash_table.html\"><tt>gp_hash_table</tt></a>\n- with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mask_range_hashing.html\"><tt>direct_mask_range_hashing</tt></a>\n-, <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_exponential_size_policy.html\"><tt>hash_exponential_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/2</i>, and <tt>Probe_Fn</tt> = <a href=\"linear_probe_fn.html\"><tt>linear_probe_fn</tt></a>\n-</li>\n-<li>\n-cc_hash_mod_prime_nea_lc_1div8_1div1_nsth_set-\n-<a href=\"cc_hash_table.html\"><tt>cc_hash_table</tt></a>\n-with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mod_range_hashing.html\"><tt>direct_mod_range_hashing</tt></a>\n-, and <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_prime_size_policy.html\"><tt>hash_prime_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/1</i></li>\n-<li>\n-cc_hash_mask_exp_nea_lc_1div8_1div2_nsth_set-\n-<a href=\"cc_hash_table.html\"><tt>cc_hash_table</tt></a>\n-with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mask_range_hashing.html\"><tt>direct_mask_range_hashing</tt></a>\n-, and <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_exponential_size_policy.html\"><tt>hash_exponential_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/2</i></li>\n-</ol>\n-</div><div style=\"width: 100%; height: 20px\"></div></div>\n-</div>\n-</div>\n-</div>\n-</div>\n-<div id=\"NHL_res_div\">\n-<div id=\"NHL_local\">\n-<div id=\"NHL_hash_random_int_erase_mem_usage_test\">\n-<div id=\"NHL_assoc\">\n-<div id=\"NHL_Native_456_collision-chaing_456_and_probing_456_hash_random_int_erase_test\"><div style = \"border-style: dotted; border-width: 1px; border-color: lightgray\"><h6 class=\"c1\"><a name=\"NHL\" id= \"NHL\"><img src=\"hash_random_int_erase_mem_usage_test_local.png\" alt=\"no image\" /></a></h6>NHL: Native, collision-chaing, and probing, hash random int erase test - <a href = \"assoc_performance_tests.html#local\">local</a></div><div style = \"width: 100%; height: 20px\"></div></div>\n-</div>\n-</div>\n-</div>\n-</div>\n-<h2><a name=\"observations\" id=\"observations\">Observations</a></h2>\n-<p>STL hash-based containers act very differently than trees in\n-    this respect. When erasing numerous keys from an STL\n-    associative-container, the resulting memory user varies greatly\n-    depending on whether the container is tree-based or hash-based.\n-    As noted in <a href=\"motivation.html#assoc_methods\">Motivation::Choice of\n-    Methods</a> , this is a fundamental consequence of the STL's\n-    associative containers' interface, it is not due to a specific\n-    implementation.</p>\n-<p>(See <a href=\"priority_queue_text_pop_mem_usage_test.html\">Priority Queue\n-    Text <tt>pop</tt> Memory Use Test</a> for a similar phenomenon\n-    regarding priority queues.)</p>\n-</div>\n-</body>\n-</html>"}, {"sha": "c552506a7557aa598a9de877bbe45bd20bda39f2", "filename": "libstdc++-v3/doc/html/ext/pb_ds/hash_random_int_erase_mem_usage_test_gcc.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fhash_random_int_erase_mem_usage_test_gcc.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fhash_random_int_erase_mem_usage_test_gcc.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fhash_random_int_erase_mem_usage_test_gcc.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "66bb0eb46e2804f1e6343ac9b149b027546f6c04", "filename": "libstdc++-v3/doc/html/ext/pb_ds/hash_random_int_erase_mem_usage_test_local.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fhash_random_int_erase_mem_usage_test_local.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fhash_random_int_erase_mem_usage_test_local.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fhash_random_int_erase_mem_usage_test_local.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "8c23d46da395543715ebbbac37665e0ff0fe7192", "filename": "libstdc++-v3/doc/html/ext/pb_ds/hash_random_int_erase_mem_usage_test_msvc.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fhash_random_int_erase_mem_usage_test_msvc.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fhash_random_int_erase_mem_usage_test_msvc.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fhash_random_int_erase_mem_usage_test_msvc.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "b6066e7cf424203befd1f1a93792f3dde9fcd9d6", "filename": "libstdc++-v3/doc/html/ext/pb_ds/hash_random_int_find_find_timing_test.html", "status": "removed", "additions": 0, "deletions": 247, "changes": 247, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fhash_random_int_find_find_timing_test.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fhash_random_int_find_find_timing_test.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fhash_random_int_find_find_timing_test.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7", "patch": "@@ -1,247 +0,0 @@\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n-    \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n-<head>\n-<meta name=\"generator\" content=\"HTML Tidy for Linux/x86 (vers 12 April 2005), see www.w3.org\" />\n-<title>Hash Random Int Find Timing Test</title>\n-<meta http-equiv=\"Content-Type\" content=\"text/html; charset=us-ascii\" />\n-</head>\n-<body>\n-<div id=\"page\">\n-<h1>Hash-Based Random-Integer <tt>find</tt> Find Timing\n-    Test</h1>\n-<h2><a name=\"description\" id=\"description\">Description</a></h2>\n-<p>This test inserts a number of values with uniform i.i.d.\n-    integer keys into a container, then performs a series of finds\n-    using <tt>find</tt>. It measures the average time\n-    for<tt>find</tt> as a function of the number of values\n-    inserted.</p>\n-<p>(The test was executed with <a href=\"http://gcc.gnu.org/viewcvs/*checkout*/trunk/libstdc%2B%2B-v3/testsuite/performance/ext/pb_ds/random_int_find_timing.cc\"><tt>random_int_find_timing_test</tt></a>\n-    200 200 2100)</p>\n-<h2><a name=\"purpose\" id=\"purpose\">Purpose</a></h2>\n-<p>The test checks the effect of different underlying\n-    hash-tables (see <a href=\"hash_based_containers.html\">Design::Associative\n-    Containers::Associative Containers::Hash-Based Containers</a>),\n-    range-hashing functions, and trigger policies (see <a href=\"hash_based_containers.html#hash_policies\">Design::Associative\n-    Containers::Hash-Based Containers::Hash Policies</a> and\n-    <a href=\"hash_based_containers.html#resize_policies\">Design::Associative\n-    Containers::Hash-Based Containers::Resize Policies</a>).</p>\n-<h2><a name=\"results\" id=\"results\">Results</a></h2>\n-<p>Figures <a href=\"#NCCG\">NCCG</a>, <a href=\"#NCCM\">NCCM</a>,\n-    and <a href=\"#NCCL\">NCCL</a> show the results for the native\n-    and collision-chaining types in <a href=\"assoc_performance_tests.html#gcc\"><u>g++</u></a>, <a href=\"assoc_performance_tests.html#msvc\"><u>MSVC++</u></a>, and\n-    <a href=\"assoc_performance_tests.html#local\"><u>local</u></a>,\n-    respectively; Figures <a href=\"#NGPG\">NGPG</a>, <a href=\"#NGPM\">NGPM</a>, and <a href=\"#NGPL\">NGPL</a> show the results\n-    for the native and probing types in <a href=\"assoc_performance_tests.html#gcc\"><u>g++</u></a>, <a href=\"assoc_performance_tests.html#msvc\"><u>MSVC++</u></a>, and\n-    <a href=\"assoc_performance_tests.html#local\"><u>local</u></a>\n-    respectively.</p>\n-<div id=\"NCCG_res_div\">\n-<div id=\"NCCG_gcc\">\n-<div id=\"NCCG_cc_hash_random_int_find_timing_test\">\n-<div id=\"NCCG_assoc\">\n-<div id=\"NCCG_Native_and_collision-chaining_hash_random_int_find_timing_test_using__tt_find_455tt_\"><div style=\"border-style: dotted; border-width: 1px; border-color: lightgray\"><h6 class=\"c1\"><a name=\"NCCG\" id=\"NCCG\"><img src=\"cc_hash_random_int_find_timing_test_gcc.png\" alt=\"no image\" /></a></h6>NCCG: Native and collision-chaining hash random int find timing test using <tt>find</tt> - <a href=\"assoc_performance_tests.html#gcc\">g++</a><p>In the above figure, the names in the legends have the following meaning:</p>\n-<ol>\n-<li>\n-n_hash_map_ncah-\n-<tt>std::tr1::unordered_map</tt> with <tt>cache_hash_code</tt> = <tt><b>false</b></tt></li>\n-<li>\n-cc_hash_mod_prime_nea_lc_1div8_1div1_nsth_map-\n-<a href=\"cc_hash_table.html\"><tt>cc_hash_table</tt></a>\n-with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mod_range_hashing.html\"><tt>direct_mod_range_hashing</tt></a>\n-, and <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_prime_size_policy.html\"><tt>hash_prime_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/1</i></li>\n-<li>\n-cc_hash_mod_prime_nea_lc_1div8_1div2_nsth_map-\n-<a href=\"cc_hash_table.html\"><tt>cc_hash_table</tt></a>\n-with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mod_range_hashing.html\"><tt>direct_mod_range_hashing</tt></a>\n-, and <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_prime_size_policy.html\"><tt>hash_prime_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/2</i></li>\n-<li>\n-cc_hash_mask_exp_nea_lc_1div8_1div1_nsth_map-\n-<a href=\"cc_hash_table.html\"><tt>cc_hash_table</tt></a>\n-with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mask_range_hashing.html\"><tt>direct_mask_range_hashing</tt></a>\n-, and <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_exponential_size_policy.html\"><tt>hash_exponential_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/1</i></li>\n-<li>\n-cc_hash_mask_exp_nea_lc_1div8_1div2_nsth_map-\n-<a href=\"cc_hash_table.html\"><tt>cc_hash_table</tt></a>\n-with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mask_range_hashing.html\"><tt>direct_mask_range_hashing</tt></a>\n-, and <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_exponential_size_policy.html\"><tt>hash_exponential_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/2</i></li>\n-</ol>\n-</div><div style=\"width: 100%; height: 20px\"></div></div>\n-</div>\n-</div>\n-</div>\n-</div>\n-<div id=\"NCCM_res_div\">\n-<div id=\"NCCM_msvc\">\n-<div id=\"NCCM_cc_hash_random_int_find_timing_test\">\n-<div id=\"NCCM_assoc\">\n-<div id=\"NCCM_Native_and_collision-chaining_hash_random_int_find_timing_test_using__tt_find_455tt_\"><div style=\"border-style: dotted; border-width: 1px; border-color: lightgray\"><h6 class=\"c1\"><a name=\"NCCM\" id=\"NCCM\"><img src=\"cc_hash_random_int_find_timing_test_msvc.png\" alt=\"no image\" /></a></h6>NCCM: Native and collision-chaining hash random int find timing test using <tt>find</tt> - <a href=\"assoc_performance_tests.html#msvc\">msvc++</a><p>In the above figure, the names in the legends have the following meaning:</p>\n-<ol>\n-<li>\n-cc_hash_mod_prime_nea_lc_1div8_1div1_nsth_map-\n-<a href=\"cc_hash_table.html\"><tt>cc_hash_table</tt></a>\n-with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mod_range_hashing.html\"><tt>direct_mod_range_hashing</tt></a>\n-, and <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_prime_size_policy.html\"><tt>hash_prime_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/1</i></li>\n-<li>\n-cc_hash_mod_prime_nea_lc_1div8_1div2_nsth_map-\n-<a href=\"cc_hash_table.html\"><tt>cc_hash_table</tt></a>\n-with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mod_range_hashing.html\"><tt>direct_mod_range_hashing</tt></a>\n-, and <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_prime_size_policy.html\"><tt>hash_prime_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/2</i></li>\n-<li>\n-n_hash_map_ncah-\n-<tt>stdext::hash_map</tt></li>\n-<li>\n-cc_hash_mask_exp_nea_lc_1div8_1div1_nsth_map-\n-<a href=\"cc_hash_table.html\"><tt>cc_hash_table</tt></a>\n-with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mask_range_hashing.html\"><tt>direct_mask_range_hashing</tt></a>\n-, and <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_exponential_size_policy.html\"><tt>hash_exponential_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/1</i></li>\n-<li>\n-cc_hash_mask_exp_nea_lc_1div8_1div2_nsth_map-\n-<a href=\"cc_hash_table.html\"><tt>cc_hash_table</tt></a>\n-with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mask_range_hashing.html\"><tt>direct_mask_range_hashing</tt></a>\n-, and <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_exponential_size_policy.html\"><tt>hash_exponential_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/2</i></li>\n-</ol>\n-</div><div style=\"width: 100%; height: 20px\"></div></div>\n-</div>\n-</div>\n-</div>\n-</div>\n-<div id=\"NCCL_res_div\">\n-<div id=\"NCCL_local\">\n-<div id=\"NCCL_cc_hash_random_int_find_timing_test\">\n-<div id=\"NCCL_assoc\">\n-<div id=\"NCCL_Native_and_collision-chaining_hash_random_int_find_timing_test_using__tt_find_455tt_\"><div style = \"border-style: dotted; border-width: 1px; border-color: lightgray\"><h6 class=\"c1\"><a name=\"NCCL\" id= \"NCCL\"><img src=\"cc_hash_random_int_find_timing_test_local.png\" alt=\"no image\" /></a></h6>NCCL: Native and collision-chaining hash random int find timing test using <tt>find</tt> - <a href = \"assoc_performance_tests.html#local\">local</a></div><div style = \"width: 100%; height: 20px\"></div></div>\n-</div>\n-</div>\n-</div>\n-</div>\n-<div id=\"NGPG_res_div\">\n-<div id=\"NGPG_gcc\">\n-<div id=\"NGPG_gp_hash_random_int_find_timing_test\">\n-<div id=\"NGPG_assoc\">\n-<div id=\"NGPG_Native_and_collision-chaining_hash_random_int_find_timing_test_using__tt_find_455tt_\"><div style=\"border-style: dotted; border-width: 1px; border-color: lightgray\"><h6 class=\"c1\"><a name=\"NGPG\" id=\"NGPG\"><img src=\"gp_hash_random_int_find_timing_test_gcc.png\" alt=\"no image\" /></a></h6>NGPG: Native and collision-chaining hash random int find timing test using <tt>find</tt> - <a href=\"assoc_performance_tests.html#gcc\">g++</a><p>In the above figure, the names in the legends have the following meaning:</p>\n-<ol>\n-<li>\n-gp_hash_mod_quadp_prime_nea_lc_1div8_1div2_nsth_map-\n-<a href=\"gp_hash_table.html\"><tt>gp_hash_table</tt></a>\n- with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mod_range_hashing.html\"><tt>direct_mod_range_hashing</tt></a>\n-, <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_prime_size_policy.html\"><tt>hash_prime_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/2</i>, and <tt>Probe_Fn</tt> = <a href=\"quadratic_probe_fn.html\"><tt>quadratic_probe_fn</tt></a>\n-</li>\n-<li>\n-n_hash_map_ncah-\n-<tt>std::tr1::unordered_map</tt> with <tt>cache_hash_code</tt> = <tt><b>false</b></tt></li>\n-<li>\n-gp_hash_mask_linp_exp_nea_lc_1div8_1div2_nsth_map-\n-<a href=\"gp_hash_table.html\"><tt>gp_hash_table</tt></a>\n- with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mask_range_hashing.html\"><tt>direct_mask_range_hashing</tt></a>\n-, <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_exponential_size_policy.html\"><tt>hash_exponential_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/2</i>, and <tt>Probe_Fn</tt> = <a href=\"linear_probe_fn.html\"><tt>linear_probe_fn</tt></a>\n-</li>\n-</ol>\n-</div><div style=\"width: 100%; height: 20px\"></div></div>\n-</div>\n-</div>\n-</div>\n-</div>\n-<div id=\"NGPM_res_div\">\n-<div id=\"NGPM_msvc\">\n-<div id=\"NGPM_gp_hash_random_int_find_timing_test\">\n-<div id=\"NGPM_assoc\">\n-<div id=\"NGPM_Native_and_collision-chaining_hash_random_int_find_timing_test_using__tt_find_455tt_\"><div style=\"border-style: dotted; border-width: 1px; border-color: lightgray\"><h6 class=\"c1\"><a name=\"NGPM\" id=\"NGPM\"><img src=\"gp_hash_random_int_find_timing_test_msvc.png\" alt=\"no image\" /></a></h6>NGPM: Native and collision-chaining hash random int find timing test using <tt>find</tt> - <a href=\"assoc_performance_tests.html#msvc\">msvc++</a><p>In the above figure, the names in the legends have the following meaning:</p>\n-<ol>\n-<li>\n-gp_hash_mod_quadp_prime_nea_lc_1div8_1div2_nsth_map-\n-<a href=\"gp_hash_table.html\"><tt>gp_hash_table</tt></a>\n- with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mod_range_hashing.html\"><tt>direct_mod_range_hashing</tt></a>\n-, <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_prime_size_policy.html\"><tt>hash_prime_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/2</i>, and <tt>Probe_Fn</tt> = <a href=\"quadratic_probe_fn.html\"><tt>quadratic_probe_fn</tt></a>\n-</li>\n-<li>\n-n_hash_map_ncah-\n-<tt>stdext::hash_map</tt></li>\n-<li>\n-gp_hash_mask_linp_exp_nea_lc_1div8_1div2_nsth_map-\n-<a href=\"gp_hash_table.html\"><tt>gp_hash_table</tt></a>\n- with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mask_range_hashing.html\"><tt>direct_mask_range_hashing</tt></a>\n-, <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_exponential_size_policy.html\"><tt>hash_exponential_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/2</i>, and <tt>Probe_Fn</tt> = <a href=\"linear_probe_fn.html\"><tt>linear_probe_fn</tt></a>\n-</li>\n-</ol>\n-</div><div style=\"width: 100%; height: 20px\"></div></div>\n-</div>\n-</div>\n-</div>\n-</div>\n-<div id=\"NGPL_res_div\">\n-<div id=\"NGPL_local\">\n-<div id=\"NGPL_gp_hash_random_int_find_timing_test\">\n-<div id=\"NGPL_assoc\">\n-<div id=\"NGPL_Native_and_collision-chaining_hash_random_int_find_timing_test_using__tt_find_455tt_\"><div style = \"border-style: dotted; border-width: 1px; border-color: lightgray\"><h6 class=\"c1\"><a name=\"NGPL\" id= \"NGPL\"><img src=\"gp_hash_random_int_find_timing_test_local.png\" alt=\"no image\" /></a></h6>NGPL: Native and collision-chaining hash random int find timing test using <tt>find</tt> - <a href = \"assoc_performance_tests.html#local\">local</a></div><div style = \"width: 100%; height: 20px\"></div></div>\n-</div>\n-</div>\n-</div>\n-</div>\n-<h2><a name=\"observations\" id=\"observations\">Observations</a></h2>\n-<p>In this setting, the choice of underlying hash-table (see\n-    <a href=\"hash_based_containers.html\">Design::Associative\n-    Containers::Hash-Based Containers</a> ) affects performance\n-    most, then the range-hashing scheme (See <a href=\"hash_based_containers.html#hash_policies\">Design::Associative\n-    Containers::Hash-Based Containers::Hash Policies</a> ), and,\n-    only finally, other policies.</p>\n-<p>When comparing Figures <a href=\"#NCCG\">NCCG</a> and <a href=\"#NCCM\">NCCM</a> to <a href=\"#NGPG\">NGPG</a> and <a href=\"#NGPM\">NGPM</a> , respectively, it is apparent that the\n-    probing containers are less efficient than the\n-    collision-chaining containers (both\n-    <tt>std::tr1::unordered_map</tt> and <tt>stdext::hash_map</tt>\n-    use collision-chaining) in this case.</p>\n-<p>( <a href=\"hash_random_int_subscript_insert_timing_test.html\">Hash-Based\n-    Random-Integer Subscript Insert Timing Test</a> shows a\n-    different case, where the situation is reversed; <a href=\"assoc_performance_tests.html#hash_based_types\">Observations::Hash-Based\n-    Container Types</a> discusses some further considerations.)</p>\n-<p>Within each type of hash-table, the range-hashing scheme\n-    affects performance more than other policies; <a href=\"hash_text_find_find_timing_test.html#observations\">Hash-Based\n-    Text <tt>find</tt> Find Timing Test::Observations</a> discusses\n-    this. In Figures <a href=\"#NCCG\">NCCG</a> , <a href=\"#NCCM\">NCCM</a> , <a href=\"#NGPG\">NGPG</a> , and <a href=\"#NGPM\">NGPM</a> , it should be noted that\n-    <tt>std::tr1::unordered_map</tt> and <tt>stdext::hash_map</tt>\n-    are hard-wired currently to mod-based and mask-based schemes,\n-    respectively.</p>\n-<p><a href=\"assoc_performance_tests.html#hash_based_types\">Observations::Hash-Based\n-    Container Types</a> summarizes some observations on hash-based\n-    containers; <a href=\"assoc_performance_tests.html#hash_based_policies\">Observations::Hash-Based\n-    Containers' Policies</a> summarizes some observations on\n-    hash-based containers' policies.</p>\n-</div>\n-</body>\n-</html>"}, {"sha": "0025163704516438852eeefbcd2bb624343dd9ee", "filename": "libstdc++-v3/doc/html/ext/pb_ds/hash_random_int_subscript_find_timing_test.html", "status": "removed", "additions": 0, "deletions": 220, "changes": 220, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fhash_random_int_subscript_find_timing_test.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fhash_random_int_subscript_find_timing_test.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fhash_random_int_subscript_find_timing_test.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7", "patch": "@@ -1,220 +0,0 @@\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n-    \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n-<head>\n-<meta name=\"generator\" content=\"HTML Tidy for Linux/x86 (vers 12 April 2005), see www.w3.org\" />\n-<title>Hash Random Int Subscript Find Timing Test</title>\n-<meta http-equiv=\"Content-Type\" content=\"text/html; charset=us-ascii\" />\n-</head>\n-<body>\n-<div id=\"page\">\n-<h1>Hash-Based Random-Integer <tt><b>operator</b>[]</tt>\n-    FindTiming Test</h1>\n-<h2><a name=\"description\" id=\"description\">Description</a></h2>\n-<p>This test inserts a number of values with uniform i.i.d.\n-    integer keys into a container, then performs a series of finds\n-    using <tt><b>operator</b>[]</tt>. It measures the average time\n-    for <tt><b>operator</b>[]</tt> as a function of the number of\n-    values inserted.</p>\n-<p>(The test was executed with <a href=\"http://gcc.gnu.org/viewcvs/*checkout*/trunk/libstdc%2B%2B-v3/testsuite/performance/ext/pb_ds/random_int_subscript_find_timing.cc\"><tt>hash_random_int_subscript_find_timing_test</tt></a>\n-    200 200 2100)</p>\n-<h2><a name=\"purpose\" id=\"purpose\">Purpose</a></h2>\n-<p>The test checks the effect of different underlying\n-    hash-tables (see <a href=\"hash_based_containers.html\">Design::Hash-Based Containers</a>\n-    ), range-hashing functions, and trigger policies (see <a href=\"hash_based_containers.html#hash_policies\">Design::Hash-Based\n-    Containers::Hash Policies</a> and <a href=\"hash_based_containers.html#resize_policies\">Design::Hash-Based\n-    Containers::Resize Policies</a> ).</p>\n-<h2><a name=\"results\" id=\"results\">Results</a></h2>\n-<p>Figures <a href=\"#NCCG\">NCCG</a>, <a href=\"#NCCM\">NCCM</a>,\n-    and <a href=\"#NCCL\">NCCL</a> show the results for the native\n-    and collision-chaining types in <a href=\"assoc_performance_tests.html#gcc\"><u>g++</u></a>, <a href=\"assoc_performance_tests.html#msvc\"><u>MSVC++</u></a>, and\n-    <a href=\"assoc_performance_tests.html#local\"><u>local</u></a>,\n-    respectively; Figures <a href=\"#NGPG\">NGPG</a>, <a href=\"#NGPM\">NGPM</a>, and <a href=\"#NGPL\">NGPL</a> show the results\n-    for the native and probing types in <a href=\"assoc_performance_tests.html#gcc\"><u>g++</u></a>, <a href=\"assoc_performance_tests.html#msvc\"><u>MSVC++</u></a>, and\n-    <a href=\"assoc_performance_tests.html#local\"><u>local</u></a>,\n-    respectively.</p>\n-<div id=\"NCCG_res_div\">\n-<div id=\"NCCG_gcc\">\n-<div id=\"NCCG_cc_hash_random_int_subscript_timing_test_find\">\n-<div id=\"NCCG_assoc\">\n-<div id=\"NCCG_Native_and_collision-chaining_hash_random_int_find_timing_test_using__tt__b_operator_455b__455tt__457\"><div style=\"border-style: dotted; border-width: 1px; border-color: lightgray\"><h6 class=\"c1\"><a name=\"NCCG\" id=\"NCCG\"><img src=\"cc_hash_random_int_subscript_timing_test_find_gcc.png\" alt=\"no image\" /></a></h6>NCCG: Native and collision-chaining hash random int find timing test using <tt><b>operator</b></tt>[] - <a href=\"assoc_performance_tests.html#gcc\">g++</a><p>In the above figure, the names in the legends have the following meaning:</p>\n-<ol>\n-<li>\n-n_hash_map_ncah-\n-<tt>std::tr1::unordered_map</tt> with <tt>cache_hash_code</tt> = <tt><b>false</b></tt></li>\n-<li>\n-cc_hash_mod_prime_nea_lc_1div8_1div1_nsth_map-\n-<a href=\"cc_hash_table.html\"><tt>cc_hash_table</tt></a>\n-with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mod_range_hashing.html\"><tt>direct_mod_range_hashing</tt></a>\n-, and <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_prime_size_policy.html\"><tt>hash_prime_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/1</i></li>\n-<li>\n-cc_hash_mod_prime_nea_lc_1div8_1div2_nsth_map-\n-<a href=\"cc_hash_table.html\"><tt>cc_hash_table</tt></a>\n-with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mod_range_hashing.html\"><tt>direct_mod_range_hashing</tt></a>\n-, and <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_prime_size_policy.html\"><tt>hash_prime_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/2</i></li>\n-<li>\n-cc_hash_mask_exp_nea_lc_1div8_1div1_nsth_map-\n-<a href=\"cc_hash_table.html\"><tt>cc_hash_table</tt></a>\n-with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mask_range_hashing.html\"><tt>direct_mask_range_hashing</tt></a>\n-, and <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_exponential_size_policy.html\"><tt>hash_exponential_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/1</i></li>\n-<li>\n-cc_hash_mask_exp_nea_lc_1div8_1div2_nsth_map-\n-<a href=\"cc_hash_table.html\"><tt>cc_hash_table</tt></a>\n-with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mask_range_hashing.html\"><tt>direct_mask_range_hashing</tt></a>\n-, and <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_exponential_size_policy.html\"><tt>hash_exponential_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/2</i></li>\n-</ol>\n-</div><div style=\"width: 100%; height: 20px\"></div></div>\n-</div>\n-</div>\n-</div>\n-</div>\n-<div id=\"NCCM_res_div\">\n-<div id=\"NCCM_msvc\">\n-<div id=\"NCCM_cc_hash_random_int_subscript_timing_test_find\">\n-<div id=\"NCCM_assoc\">\n-<div id=\"NCCM_Native_and_collision-chaining_hash_random_int_find_timing_test_using__tt__b_operator_455b__455tt__457\"><div style=\"border-style: dotted; border-width: 1px; border-color: lightgray\"><h6 class=\"c1\"><a name=\"NCCM\" id=\"NCCM\"><img src=\"cc_hash_random_int_subscript_timing_test_find_msvc.png\" alt=\"no image\" /></a></h6>NCCM: Native and collision-chaining hash random int find timing test using <tt><b>operator</b></tt>[] - <a href=\"assoc_performance_tests.html#msvc\">msvc++</a><p>In the above figure, the names in the legends have the following meaning:</p>\n-<ol>\n-<li>\n-cc_hash_mod_prime_nea_lc_1div8_1div1_nsth_map-\n-<a href=\"cc_hash_table.html\"><tt>cc_hash_table</tt></a>\n-with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mod_range_hashing.html\"><tt>direct_mod_range_hashing</tt></a>\n-, and <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_prime_size_policy.html\"><tt>hash_prime_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/1</i></li>\n-<li>\n-cc_hash_mod_prime_nea_lc_1div8_1div2_nsth_map-\n-<a href=\"cc_hash_table.html\"><tt>cc_hash_table</tt></a>\n-with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mod_range_hashing.html\"><tt>direct_mod_range_hashing</tt></a>\n-, and <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_prime_size_policy.html\"><tt>hash_prime_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/2</i></li>\n-<li>\n-n_hash_map_ncah-\n-<tt>stdext::hash_map</tt></li>\n-<li>\n-cc_hash_mask_exp_nea_lc_1div8_1div1_nsth_map-\n-<a href=\"cc_hash_table.html\"><tt>cc_hash_table</tt></a>\n-with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mask_range_hashing.html\"><tt>direct_mask_range_hashing</tt></a>\n-, and <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_exponential_size_policy.html\"><tt>hash_exponential_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/1</i></li>\n-<li>\n-cc_hash_mask_exp_nea_lc_1div8_1div2_nsth_map-\n-<a href=\"cc_hash_table.html\"><tt>cc_hash_table</tt></a>\n-with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mask_range_hashing.html\"><tt>direct_mask_range_hashing</tt></a>\n-, and <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_exponential_size_policy.html\"><tt>hash_exponential_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/2</i></li>\n-</ol>\n-</div><div style=\"width: 100%; height: 20px\"></div></div>\n-</div>\n-</div>\n-</div>\n-</div>\n-<div id=\"NCCL_res_div\">\n-<div id=\"NCCL_local\">\n-<div id=\"NCCL_cc_hash_random_int_subscript_timing_test_find\">\n-<div id=\"NCCL_assoc\">\n-<div id=\"NCCL_Native_and_collision-chaining_hash_random_int_find_timing_test_using__tt__b_operator_455b__455tt__457\"><div style = \"border-style: dotted; border-width: 1px; border-color: lightgray\"><h6 class=\"c1\"><a name=\"NCCL\" id= \"NCCL\"><img src=\"cc_hash_random_int_subscript_timing_test_find_local.png\" alt=\"no image\" /></a></h6>NCCL: Native and collision-chaining hash random int find timing test using <tt><b>operator</b></tt>[] - <a href = \"assoc_performance_tests.html#local\">local</a></div><div style = \"width: 100%; height: 20px\"></div></div>\n-</div>\n-</div>\n-</div>\n-</div>\n-<div id=\"NGPG_res_div\">\n-<div id=\"NGPG_gcc\">\n-<div id=\"NGPG_gp_hash_random_int_subscript_timing_test_find\">\n-<div id=\"NGPG_assoc\">\n-<div id=\"NGPG_Native_and_probing_hash_random_int_find_timing_test_using__tt__b_operator_455b__455tt__457\"><div style=\"border-style: dotted; border-width: 1px; border-color: lightgray\"><h6 class=\"c1\"><a name=\"NGPG\" id=\"NGPG\"><img src=\"gp_hash_random_int_subscript_timing_test_find_gcc.png\" alt=\"no image\" /></a></h6>NGPG: Native and probing hash random int find timing test using <tt><b>operator</b></tt>[] - <a href=\"assoc_performance_tests.html#gcc\">g++</a><p>In the above figure, the names in the legends have the following meaning:</p>\n-<ol>\n-<li>\n-n_hash_map_ncah-\n-<tt>std::tr1::unordered_map</tt> with <tt>cache_hash_code</tt> = <tt><b>false</b></tt></li>\n-<li>\n-gp_hash_mod_quadp_prime_nea_lc_1div8_1div2_nsth_map-\n-<a href=\"gp_hash_table.html\"><tt>gp_hash_table</tt></a>\n- with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mod_range_hashing.html\"><tt>direct_mod_range_hashing</tt></a>\n-, <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_prime_size_policy.html\"><tt>hash_prime_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/2</i>, and <tt>Probe_Fn</tt> = <a href=\"quadratic_probe_fn.html\"><tt>quadratic_probe_fn</tt></a>\n-</li>\n-<li>\n-gp_hash_mask_linp_exp_nea_lc_1div8_1div2_nsth_map-\n-<a href=\"gp_hash_table.html\"><tt>gp_hash_table</tt></a>\n- with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mask_range_hashing.html\"><tt>direct_mask_range_hashing</tt></a>\n-, <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_exponential_size_policy.html\"><tt>hash_exponential_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/2</i>, and <tt>Probe_Fn</tt> = <a href=\"linear_probe_fn.html\"><tt>linear_probe_fn</tt></a>\n-</li>\n-</ol>\n-</div><div style=\"width: 100%; height: 20px\"></div></div>\n-</div>\n-</div>\n-</div>\n-</div>\n-<div id=\"NGPM_res_div\">\n-<div id=\"NGPM_msvc\">\n-<div id=\"NGPM_gp_hash_random_int_subscript_timing_test_find\">\n-<div id=\"NGPM_assoc\">\n-<div id=\"NGPM_Native_and_probing_hash_random_int_find_timing_test_using__tt__b_operator_455b__455tt__457\"><div style=\"border-style: dotted; border-width: 1px; border-color: lightgray\"><h6 class=\"c1\"><a name=\"NGPM\" id=\"NGPM\"><img src=\"gp_hash_random_int_subscript_timing_test_find_msvc.png\" alt=\"no image\" /></a></h6>NGPM: Native and probing hash random int find timing test using <tt><b>operator</b></tt>[] - <a href=\"assoc_performance_tests.html#msvc\">msvc++</a><p>In the above figure, the names in the legends have the following meaning:</p>\n-<ol>\n-<li>\n-gp_hash_mod_quadp_prime_nea_lc_1div8_1div2_nsth_map-\n-<a href=\"gp_hash_table.html\"><tt>gp_hash_table</tt></a>\n- with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mod_range_hashing.html\"><tt>direct_mod_range_hashing</tt></a>\n-, <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_prime_size_policy.html\"><tt>hash_prime_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/2</i>, and <tt>Probe_Fn</tt> = <a href=\"quadratic_probe_fn.html\"><tt>quadratic_probe_fn</tt></a>\n-</li>\n-<li>\n-n_hash_map_ncah-\n-<tt>stdext::hash_map</tt></li>\n-<li>\n-gp_hash_mask_linp_exp_nea_lc_1div8_1div2_nsth_map-\n-<a href=\"gp_hash_table.html\"><tt>gp_hash_table</tt></a>\n- with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mask_range_hashing.html\"><tt>direct_mask_range_hashing</tt></a>\n-, <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_exponential_size_policy.html\"><tt>hash_exponential_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/2</i>, and <tt>Probe_Fn</tt> = <a href=\"linear_probe_fn.html\"><tt>linear_probe_fn</tt></a>\n-</li>\n-</ol>\n-</div><div style=\"width: 100%; height: 20px\"></div></div>\n-</div>\n-</div>\n-</div>\n-</div>\n-<div id=\"NGPL_res_div\">\n-<div id=\"NGPL_local\">\n-<div id=\"NGPL_gp_hash_random_int_subscript_timing_test_find\">\n-<div id=\"NGPL_assoc\">\n-<div id=\"NGPL_Native_and_probing_hash_random_int_find_timing_test_using__tt__b_operator_455b__455tt__457\"><div style = \"border-style: dotted; border-width: 1px; border-color: lightgray\"><h6 class=\"c1\"><a name=\"NGPL\" id= \"NGPL\"><img src=\"gp_hash_random_int_subscript_timing_test_find_local.png\" alt=\"no image\" /></a></h6>NGPL: Native and probing hash random int find timing test using <tt><b>operator</b></tt>[] - <a href = \"assoc_performance_tests.html#local\">local</a></div><div style = \"width: 100%; height: 20px\"></div></div>\n-</div>\n-</div>\n-</div>\n-</div>\n-<h2><a name=\"observations\" id=\"observations\">Observations</a></h2>\n-<p>This test shows similar results to <a href=\"hash_random_int_find_find_timing_test.html\">Hash-Based\n-    Random-Integer <tt>find</tt> Find Timing Test</a> .</p>\n-</div>\n-</body>\n-</html>"}, {"sha": "a15d03ba4cb42cc6db72deec79d00053a5544e8c", "filename": "libstdc++-v3/doc/html/ext/pb_ds/hash_random_int_subscript_insert_timing_test.html", "status": "removed", "additions": 0, "deletions": 365, "changes": 365, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fhash_random_int_subscript_insert_timing_test.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fhash_random_int_subscript_insert_timing_test.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fhash_random_int_subscript_insert_timing_test.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7", "patch": "@@ -1,365 +0,0 @@\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n-    \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n-<head>\n-<meta name=\"generator\" content=\"HTML Tidy for Linux/x86 (vers 12 April 2005), see www.w3.org\" />\n-<title>Hash Random Int Subscript Insert Timing Test</title>\n-<meta http-equiv=\"Content-Type\" content=\"text/html; charset=us-ascii\" />\n-</head>\n-<body>\n-<div id=\"page\">\n-<h1>Hash-Based Random-Integer <tt><b>operator</b>[]</tt> Insert\n-    Timing Test</h1>\n-<h2><a name=\"description\" id=\"description\">Description</a></h2>\n-<p>This test inserts a number of values with uniform i.i.d.\n-    integer keys into a container, using\n-    <tt><b>operator</b>[]</tt>. It measures the average time for\n-    <tt><b>operator</b>[]</tt> as a function of the number of\n-    values inserted.</p>\n-<p>(The test was executed with <a href=\"http://gcc.gnu.org/viewcvs/*checkout*/trunk/libstdc%2B%2B-v3/testsuite/performance/ext/pb_ds/random_int_subscript_insert_timing.cc\"><tt>hash_random_int_subscript_insert_timing_test</tt></a>\n-    200 200 2100)</p>\n-<h2><a name=\"purpose\" id=\"purpose\">Purpose</a></h2>\n-<p>The test primarily checks the effect of different underlying\n-    hash-tables (see <a href=\"hash_based_containers.html\">Design::Associative\n-    Containers::Associative Containers::Hash-Based\n-    Containers</a>).</p>\n-<h2><a name=\"results\" id=\"results\">Results</a></h2>\n-<p>Figures <a href=\"#NCCG\">NCCG</a>, <a href=\"#NCCM\">NCCM</a>,\n-    and <a href=\"#NCCL\">NCCL</a> show the results for the native\n-    and collision-chaining types in <a href=\"assoc_performance_tests.html#gcc\"><u>g++</u></a>, <a href=\"assoc_performance_tests.html#msvc\"><u>MSVC++</u></a>, and\n-    <a href=\"assoc_performance_tests.html#local\"><u>local</u></a>,\n-    respectively; Figures <a href=\"#NGPG\">NGPG</a>, <a href=\"#NGPM\">NGPM</a>, and <a href=\"#NGPL\">NGPL</a> show the results\n-    for the native and probing types in <a href=\"assoc_performance_tests.html#gcc\"><u>g++</u></a>, <a href=\"assoc_performance_tests.html#msvc\"><u>msvc++</u></a>, and\n-    <a href=\"assoc_performance_tests.html#local\"><u>local</u></a>\n-    respectively; Figures <a href=\"#CCGPG\">CCGPG</a>, <a href=\"#CCGPM\">CCGPM</a>, and <a href=\"#CCGPL\">CCGPL</a> compare the\n-    results for the collision-chaining and probing types of\n-    <tt>pb_ds</tt> only, in <a href=\"assoc_performance_tests.html#gcc\"><u>g++</u></a>, <a href=\"assoc_performance_tests.html#msvc\"><u>MSVC++</u></a>, and\n-    <a href=\"assoc_performance_tests.html#local\"><u>local</u></a>\n-    respectively.</p>\n-<div id=\"NCCG_res_div\">\n-<div id=\"NCCG_gcc\">\n-<div id=\"NCCG_cc_hash_random_int_subscript_timing_test_insert\">\n-<div id=\"NCCG_assoc\">\n-<div id=\"NCCG_Native_and_collision-chaining_hash_random_int_insert_timing_test_using__tt__b_operator_455b__455tt_\"><div style=\"border-style: dotted; border-width: 1px; border-color: lightgray\"><h6 class=\"c1\"><a name=\"NCCG\" id=\"NCCG\"><img src=\"cc_hash_random_int_subscript_timing_test_insert_gcc.png\" alt=\"no image\" /></a></h6>NCCG: Native and collision-chaining hash random int insert timing test using <tt><b>operator</b></tt> - <a href=\"assoc_performance_tests.html#gcc\">g++</a><p>In the above figure, the names in the legends have the following meaning:</p>\n-<ol>\n-<li>\n-cc_hash_mod_prime_nea_lc_1div8_1div2_nsth_map-\n-<a href=\"cc_hash_table.html\"><tt>cc_hash_table</tt></a>\n-with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mod_range_hashing.html\"><tt>direct_mod_range_hashing</tt></a>\n-, and <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_prime_size_policy.html\"><tt>hash_prime_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/2</i></li>\n-<li>\n-n_hash_map_ncah-\n-<tt>std::tr1::unordered_map</tt> with <tt>cache_hash_code</tt> = <tt><b>false</b></tt></li>\n-<li>\n-cc_hash_mask_exp_nea_lc_1div8_1div2_nsth_map-\n-<a href=\"cc_hash_table.html\"><tt>cc_hash_table</tt></a>\n-with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mask_range_hashing.html\"><tt>direct_mask_range_hashing</tt></a>\n-, and <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_exponential_size_policy.html\"><tt>hash_exponential_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/2</i></li>\n-<li>\n-cc_hash_mod_prime_nea_lc_1div8_1div1_nsth_map-\n-<a href=\"cc_hash_table.html\"><tt>cc_hash_table</tt></a>\n-with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mod_range_hashing.html\"><tt>direct_mod_range_hashing</tt></a>\n-, and <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_prime_size_policy.html\"><tt>hash_prime_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/1</i></li>\n-<li>\n-cc_hash_mask_exp_nea_lc_1div8_1div1_nsth_map-\n-<a href=\"cc_hash_table.html\"><tt>cc_hash_table</tt></a>\n-with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mask_range_hashing.html\"><tt>direct_mask_range_hashing</tt></a>\n-, and <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_exponential_size_policy.html\"><tt>hash_exponential_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/1</i></li>\n-</ol>\n-</div><div style=\"width: 100%; height: 20px\"></div></div>\n-</div>\n-</div>\n-</div>\n-</div>\n-<div id=\"NCCM_res_div\">\n-<div id=\"NCCM_msvc\">\n-<div id=\"NCCM_cc_hash_random_int_subscript_timing_test_insert\">\n-<div id=\"NCCM_assoc\">\n-<div id=\"NCCM_Native_and_collision-chaining_hash_random_int_insert_timing_test_using__tt__b_operator_455b__455tt_\"><div style=\"border-style: dotted; border-width: 1px; border-color: lightgray\"><h6 class=\"c1\"><a name=\"NCCM\" id=\"NCCM\"><img src=\"cc_hash_random_int_subscript_timing_test_insert_msvc.png\" alt=\"no image\" /></a></h6>NCCM: Native and collision-chaining hash random int insert timing test using <tt><b>operator</b></tt> - <a href=\"assoc_performance_tests.html#msvc\">msvc++</a><p>In the above figure, the names in the legends have the following meaning:</p>\n-<ol>\n-<li>\n-n_hash_map_ncah-\n-<tt>stdext::hash_map</tt></li>\n-<li>\n-cc_hash_mod_prime_nea_lc_1div8_1div2_nsth_map-\n-<a href=\"cc_hash_table.html\"><tt>cc_hash_table</tt></a>\n-with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mod_range_hashing.html\"><tt>direct_mod_range_hashing</tt></a>\n-, and <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_prime_size_policy.html\"><tt>hash_prime_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/2</i></li>\n-<li>\n-cc_hash_mod_prime_nea_lc_1div8_1div1_nsth_map-\n-<a href=\"cc_hash_table.html\"><tt>cc_hash_table</tt></a>\n-with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mod_range_hashing.html\"><tt>direct_mod_range_hashing</tt></a>\n-, and <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_prime_size_policy.html\"><tt>hash_prime_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/1</i></li>\n-<li>\n-cc_hash_mask_exp_nea_lc_1div8_1div2_nsth_map-\n-<a href=\"cc_hash_table.html\"><tt>cc_hash_table</tt></a>\n-with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mask_range_hashing.html\"><tt>direct_mask_range_hashing</tt></a>\n-, and <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_exponential_size_policy.html\"><tt>hash_exponential_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/2</i></li>\n-<li>\n-cc_hash_mask_exp_nea_lc_1div8_1div1_nsth_map-\n-<a href=\"cc_hash_table.html\"><tt>cc_hash_table</tt></a>\n-with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mask_range_hashing.html\"><tt>direct_mask_range_hashing</tt></a>\n-, and <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_exponential_size_policy.html\"><tt>hash_exponential_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/1</i></li>\n-</ol>\n-</div><div style=\"width: 100%; height: 20px\"></div></div>\n-</div>\n-</div>\n-</div>\n-</div>\n-<div id=\"NCCL_res_div\">\n-<div id=\"NCCL_local\">\n-<div id=\"NCCL_cc_hash_random_int_subscript_timing_test_insert\">\n-<div id=\"NCCL_assoc\">\n-<div id=\"NCCL_Native_and_collision-chaining_hash_random_int_insert_timing_test_using__tt__b_operator_455b__455tt_\"><div style = \"border-style: dotted; border-width: 1px; border-color: lightgray\"><h6 class=\"c1\"><a name=\"NCCL\" id= \"NCCL\"><img src=\"cc_hash_random_int_subscript_timing_test_insert_local.png\" alt=\"no image\" /></a></h6>NCCL: Native and collision-chaining hash random int insert timing test using <tt><b>operator</b></tt> - <a href = \"assoc_performance_tests.html#local\">local</a></div><div style = \"width: 100%; height: 20px\"></div></div>\n-</div>\n-</div>\n-</div>\n-</div>\n-<div id=\"NGPG_res_div\">\n-<div id=\"NGPG_gcc\">\n-<div id=\"NGPG_gp_hash_random_int_subscript_timing_test_insert\">\n-<div id=\"NGPG_assoc\">\n-<div id=\"NGPG_Native_and_probing_hash_random_int_insert_timing_test_using__tt__b_operator_455b__455tt_\"><div style=\"border-style: dotted; border-width: 1px; border-color: lightgray\"><h6 class=\"c1\"><a name=\"NGPG\" id=\"NGPG\"><img src=\"gp_hash_random_int_subscript_timing_test_insert_gcc.png\" alt=\"no image\" /></a></h6>NGPG: Native and probing hash random int insert timing test using <tt><b>operator</b></tt> - <a href=\"assoc_performance_tests.html#gcc\">g++</a><p>In the above figure, the names in the legends have the following meaning:</p>\n-<ol>\n-<li>\n-gp_hash_mod_quadp_prime_nea_lc_1div8_1div2_nsth_map-\n-<a href=\"gp_hash_table.html\"><tt>gp_hash_table</tt></a>\n- with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mod_range_hashing.html\"><tt>direct_mod_range_hashing</tt></a>\n-, <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_prime_size_policy.html\"><tt>hash_prime_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/2</i>, and <tt>Probe_Fn</tt> = <a href=\"quadratic_probe_fn.html\"><tt>quadratic_probe_fn</tt></a>\n-</li>\n-<li>\n-n_hash_map_ncah-\n-<tt>std::tr1::unordered_map</tt> with <tt>cache_hash_code</tt> = <tt><b>false</b></tt></li>\n-<li>\n-gp_hash_mask_linp_exp_nea_lc_1div8_1div2_nsth_map-\n-<a href=\"gp_hash_table.html\"><tt>gp_hash_table</tt></a>\n- with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mask_range_hashing.html\"><tt>direct_mask_range_hashing</tt></a>\n-, <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_exponential_size_policy.html\"><tt>hash_exponential_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/2</i>, and <tt>Probe_Fn</tt> = <a href=\"linear_probe_fn.html\"><tt>linear_probe_fn</tt></a>\n-</li>\n-</ol>\n-</div><div style=\"width: 100%; height: 20px\"></div></div>\n-</div>\n-</div>\n-</div>\n-</div>\n-<div id=\"NGPM_res_div\">\n-<div id=\"NGPM_msvc\">\n-<div id=\"NGPM_gp_hash_random_int_subscript_timing_test_insert\">\n-<div id=\"NGPM_assoc\">\n-<div id=\"NGPM_Native_and_probing_hash_random_int_insert_timing_test_using__tt__b_operator_455b__455tt_\"><div style=\"border-style: dotted; border-width: 1px; border-color: lightgray\"><h6 class=\"c1\"><a name=\"NGPM\" id=\"NGPM\"><img src=\"gp_hash_random_int_subscript_timing_test_insert_msvc.png\" alt=\"no image\" /></a></h6>NGPM: Native and probing hash random int insert timing test using <tt><b>operator</b></tt> - <a href=\"assoc_performance_tests.html#msvc\">msvc++</a><p>In the above figure, the names in the legends have the following meaning:</p>\n-<ol>\n-<li>\n-n_hash_map_ncah-\n-<tt>stdext::hash_map</tt></li>\n-<li>\n-gp_hash_mod_quadp_prime_nea_lc_1div8_1div2_nsth_map-\n-<a href=\"gp_hash_table.html\"><tt>gp_hash_table</tt></a>\n- with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mod_range_hashing.html\"><tt>direct_mod_range_hashing</tt></a>\n-, <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_prime_size_policy.html\"><tt>hash_prime_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/2</i>, and <tt>Probe_Fn</tt> = <a href=\"quadratic_probe_fn.html\"><tt>quadratic_probe_fn</tt></a>\n-</li>\n-<li>\n-gp_hash_mask_linp_exp_nea_lc_1div8_1div2_nsth_map-\n-<a href=\"gp_hash_table.html\"><tt>gp_hash_table</tt></a>\n- with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mask_range_hashing.html\"><tt>direct_mask_range_hashing</tt></a>\n-, <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_exponential_size_policy.html\"><tt>hash_exponential_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/2</i>, and <tt>Probe_Fn</tt> = <a href=\"linear_probe_fn.html\"><tt>linear_probe_fn</tt></a>\n-</li>\n-</ol>\n-</div><div style=\"width: 100%; height: 20px\"></div></div>\n-</div>\n-</div>\n-</div>\n-</div>\n-<div id=\"NGPL_res_div\">\n-<div id=\"NGPL_local\">\n-<div id=\"NGPL_gp_hash_random_int_subscript_timing_test_insert\">\n-<div id=\"NGPL_assoc\">\n-<div id=\"NGPL_Native_and_probing_hash_random_int_insert_timing_test_using__tt__b_operator_455b__455tt_\"><div style = \"border-style: dotted; border-width: 1px; border-color: lightgray\"><h6 class=\"c1\"><a name=\"NGPL\" id= \"NGPL\"><img src=\"gp_hash_random_int_subscript_timing_test_insert_local.png\" alt=\"no image\" /></a></h6>NGPL: Native and probing hash random int insert timing test using <tt><b>operator</b></tt> - <a href = \"assoc_performance_tests.html#local\">local</a></div><div style = \"width: 100%; height: 20px\"></div></div>\n-</div>\n-</div>\n-</div>\n-</div>\n-<div id=\"CCGPG_res_div\">\n-<div id=\"CCGPG_gcc\">\n-<div id=\"CCGPG_ccgp_hash_random_int_subscript_timing_test_insert\">\n-<div id=\"CCGPG_assoc\">\n-<div id=\"CCGPG_Collision-chaining_and_probing_hash_random_int_insert_timing_test_using__tt__b_operator_455b__455tt_\"><div style=\"border-style: dotted; border-width: 1px; border-color: lightgray\"><h6 class=\"c1\"><a name=\"CCGPG\" id=\"CCGPG\"><img src=\"ccgp_hash_random_int_subscript_timing_test_insert_gcc.png\" alt=\"no image\" /></a></h6>CCGPG: Collision-chaining and probing hash random int insert timing test using <tt><b>operator</b></tt> - <a href=\"assoc_performance_tests.html#gcc\">g++</a><p>In the above figure, the names in the legends have the following meaning:</p>\n-<ol>\n-<li>\n-gp_hash_mod_quadp_prime_nea_lc_1div8_1div2_nsth_map-\n-<a href=\"gp_hash_table.html\"><tt>gp_hash_table</tt></a>\n- with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mod_range_hashing.html\"><tt>direct_mod_range_hashing</tt></a>\n-, <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_prime_size_policy.html\"><tt>hash_prime_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/2</i>, and <tt>Probe_Fn</tt> = <a href=\"quadratic_probe_fn.html\"><tt>quadratic_probe_fn</tt></a>\n-</li>\n-<li>\n-cc_hash_mod_prime_nea_lc_1div8_1div2_nsth_map-\n-<a href=\"cc_hash_table.html\"><tt>cc_hash_table</tt></a>\n-with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mod_range_hashing.html\"><tt>direct_mod_range_hashing</tt></a>\n-, and <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_prime_size_policy.html\"><tt>hash_prime_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/2</i></li>\n-<li>\n-cc_hash_mask_exp_nea_lc_1div8_1div2_nsth_map-\n-<a href=\"cc_hash_table.html\"><tt>cc_hash_table</tt></a>\n-with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mask_range_hashing.html\"><tt>direct_mask_range_hashing</tt></a>\n-, and <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_exponential_size_policy.html\"><tt>hash_exponential_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/2</i></li>\n-<li>\n-gp_hash_mask_linp_exp_nea_lc_1div8_1div2_nsth_map-\n-<a href=\"gp_hash_table.html\"><tt>gp_hash_table</tt></a>\n- with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mask_range_hashing.html\"><tt>direct_mask_range_hashing</tt></a>\n-, <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_exponential_size_policy.html\"><tt>hash_exponential_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/2</i>, and <tt>Probe_Fn</tt> = <a href=\"linear_probe_fn.html\"><tt>linear_probe_fn</tt></a>\n-</li>\n-</ol>\n-</div><div style=\"width: 100%; height: 20px\"></div></div>\n-</div>\n-</div>\n-</div>\n-</div>\n-<div id=\"CCGPM_res_div\">\n-<div id=\"CCGPM_msvc\">\n-<div id=\"CCGPM_ccgp_hash_random_int_subscript_timing_test_insert\">\n-<div id=\"CCGPM_assoc\">\n-<div id=\"CCGPM_Collision-chaining_and_probing_hash_random_int_insert_timing_test_using__tt__b_operator_455b__455tt_\"><div style=\"border-style: dotted; border-width: 1px; border-color: lightgray\"><h6 class=\"c1\"><a name=\"CCGPM\" id=\"CCGPM\"><img src=\"ccgp_hash_random_int_subscript_timing_test_insert_msvc.png\" alt=\"no image\" /></a></h6>CCGPM: Collision-chaining and probing hash random int insert timing test using <tt><b>operator</b></tt> - <a href=\"assoc_performance_tests.html#msvc\">msvc++</a><p>In the above figure, the names in the legends have the following meaning:</p>\n-<ol>\n-<li>\n-cc_hash_mod_prime_nea_lc_1div8_1div2_nsth_map-\n-<a href=\"cc_hash_table.html\"><tt>cc_hash_table</tt></a>\n-with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mod_range_hashing.html\"><tt>direct_mod_range_hashing</tt></a>\n-, and <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_prime_size_policy.html\"><tt>hash_prime_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/2</i></li>\n-<li>\n-cc_hash_mask_exp_nea_lc_1div8_1div2_nsth_map-\n-<a href=\"cc_hash_table.html\"><tt>cc_hash_table</tt></a>\n-with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mask_range_hashing.html\"><tt>direct_mask_range_hashing</tt></a>\n-, and <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_exponential_size_policy.html\"><tt>hash_exponential_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/2</i></li>\n-<li>\n-gp_hash_mod_quadp_prime_nea_lc_1div8_1div2_nsth_map-\n-<a href=\"gp_hash_table.html\"><tt>gp_hash_table</tt></a>\n- with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mod_range_hashing.html\"><tt>direct_mod_range_hashing</tt></a>\n-, <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_prime_size_policy.html\"><tt>hash_prime_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/2</i>, and <tt>Probe_Fn</tt> = <a href=\"quadratic_probe_fn.html\"><tt>quadratic_probe_fn</tt></a>\n-</li>\n-<li>\n-gp_hash_mask_linp_exp_nea_lc_1div8_1div2_nsth_map-\n-<a href=\"gp_hash_table.html\"><tt>gp_hash_table</tt></a>\n- with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mask_range_hashing.html\"><tt>direct_mask_range_hashing</tt></a>\n-, <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_exponential_size_policy.html\"><tt>hash_exponential_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/2</i>, and <tt>Probe_Fn</tt> = <a href=\"linear_probe_fn.html\"><tt>linear_probe_fn</tt></a>\n-</li>\n-</ol>\n-</div><div style=\"width: 100%; height: 20px\"></div></div>\n-</div>\n-</div>\n-</div>\n-</div>\n-<div id=\"CCGPL_res_div\">\n-<div id=\"CCGPL_local\">\n-<div id=\"CCGPL_ccgp_hash_random_int_subscript_timing_test_insert\">\n-<div id=\"CCGPL_assoc\">\n-<div id=\"CCGPL_Collision-chaining_and_probing_hash_random_int_insert_timing_test_using__tt__b_operator_455b__455tt_\"><div style = \"border-style: dotted; border-width: 1px; border-color: lightgray\"><h6 class=\"c1\"><a name=\"CCGPL\" id= \"CCGPL\"><img src=\"ccgp_hash_random_int_subscript_timing_test_insert_local.png\" alt=\"no image\" /></a></h6>CCGPL: Collision-chaining and probing hash random int insert timing test using <tt><b>operator</b></tt> - <a href = \"assoc_performance_tests.html#local\">local</a></div><div style = \"width: 100%; height: 20px\"></div></div>\n-</div>\n-</div>\n-</div>\n-</div>\n-<h2><a name=\"observations\" id=\"observations\">Observations</a></h2>\n-<p>In this setting, as in <a href=\"hash_text_find_find_timing_test.html\">Hash-Based Text\n-    <tt>find</tt> Find Timing Test</a> and <a href=\"hash_random_int_find_find_timing_test.html\">Hash-Based\n-    Random-Integer <tt>find</tt> Find Timing Test</a> , the choice\n-    of underlying hash-table underlying hash-table (see <a href=\"hash_based_containers.html\">Design::Associative\n-    Containers::Hash-Based Containers</a> ) affects performance\n-    most, then the range-hashing scheme (See <a href=\"hash_based_containers.html#hash_policies\">Design::Associative\n-    Containers::Hash-Based Containers::Hash Policies</a> ), and,\n-    only finally, other policies.</p>\n-<p>There are some differences, however:</p>\n-<ol>\n-<li>In this setting, probing tables function sometimes more\n-      efficiently than collision-chaining tables (see Figures\n-      <a href=\"#CCGPG\">CCGPG</a> and <a href=\"#CCGPM\">CCGPM</a> ).\n-      This is explained shortly.</li>\n-<li>The performance graphs have a \"saw-tooth\" shape. The\n-      average insert time rises and falls. As values are inserted\n-      into the container, the load factor grows larger. Eventually,\n-      a resize occurs. The reallocations and rehashing are\n-      relatively expensive. After this, the load factor is smaller\n-      than before.</li>\n-</ol>\n-<p>Collision-chaining containers use indirection for greater\n-    flexibility; probing containers store values contiguously, in\n-    an array (see Figure <a href=\"motivation.html#different_underlying_data_structures\">Motivation::Different\n-    underlying data structures</a> A and B, respectively). It\n-    follows that for simple data types, probing containers access\n-    their allocator less frequently than collision-chaining\n-    containers, (although they still have less efficient probing\n-    sequences). This explains why some probing containers fare\n-    better than collision-chaining containers in this case.</p>\n-<p>Within each type of hash-table, the range-hashing scheme\n-    affects performance more than other policies. This is similar\n-    to the situation in <a href=\"hash_text_find_find_timing_test.html\">Hash-Based Text\n-    <tt>find</tt> Find Timing Test</a> and <a href=\"hash_random_int_find_find_timing_test.html\">Hash-Based\n-    Random-Integer <tt>find</tt> Find Timing Test</a>.\n-    Unsurprisingly, however, containers with <u>lower</u>\n-<i>alpha<sub>max</sub></i> perform <u>worse</u> in this case,\n-    since more re-hashes are performed.</p>\n-<p><a href=\"assoc_performance_tests.html#hash_based_types\">Observations::Hash-Based\n-    Container Types</a> summarizes some observations on hash-based\n-    containers; <a href=\"assoc_performance_tests.html#hash_based_policies\">Observations::Hash-Based\n-    Containers' Policies</a> summarizes some observations on\n-    hash-based containers' policies.</p>\n-</div>\n-</body>\n-</html>"}, {"sha": "8dbc57ce2776c571facd739596fbea837a8cbf66", "filename": "libstdc++-v3/doc/html/ext/pb_ds/hash_standard_resize_policy.html", "status": "removed", "additions": 0, "deletions": 795, "changes": 795, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fhash_standard_resize_policy.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fhash_standard_resize_policy.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fhash_standard_resize_policy.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7", "patch": "@@ -1,795 +0,0 @@\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n-    \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n-<head>\n-  <meta name=\"generator\" content=\n-  \"HTML Tidy for Linux/x86 (vers 12 April 2005), see www.w3.org\" />\n-\n-  <title>hash_standard_resize_policy Interface</title>\n-  <meta http-equiv=\"Content-Type\" content=\n-  \"text/html; charset=us-ascii\" />\n-  </head>\n-\n-<body>\n-  <div id=\"page\">\n-    <h1><tt>hash_standard_resize_policy</tt> Interface</h1>\n-\n-    <p>A resize policy which delegates operations to size and\n-    trigger policies.</p>\n-\n-    <p>Defined in: <a href=\n-    \"http://gcc.gnu.org/viewcvs/*checkout*/trunk/libstdc%2B%2B-v3/include/ext/pb_ds/hash_policy.hpp\"><tt>hash_policy.hpp</tt></a></p>\n-\n-    <h2><a name=\"link1\" id=\"link1\">Template Parameters</a></h2>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\n-    \"Template Parameters\">\n-      <tr>\n-        <td width=\"20%\" align=\"left\"><b>Parameter</b></td>\n-\n-        <td width=\"50%\" align=\"left\"><b>Description</b></td>\n-\n-        <td width=\"30%\" align=\"left\"><b>Default Value</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"Size_Policy1072992366\" id=\n-\"Size_Policy1072992366\"><b>class</b> Size_Policy </a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Size policy type.</p>\n-        </td>\n-\n-        <td><a href=\n-        \"hash_exponential_size_policy.html\"><span class=\"c2\"><tt>hash_exponential_size_policy</tt></span></a></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"Trigger_Policy3611271815\" id=\n-\"Trigger_Policy3611271815\"><b>class</b> Trigger_Policy </a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Trigger policy type.</p>\n-        </td>\n-\n-        <td><a href=\n-        \"hash_load_check_resize_trigger.html\"><span class=\n-        \"c2\"><tt>hash_load_check_resize_trigger</tt></span></a></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"External_Size_Access1380482982\" id=\n-\"External_Size_Access1380482982\"><b>bool</b> External_Size_Access </a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Indicates whether physical sizes can be accessed\n-          externally.</p>\n-        </td>\n-\n-        <td><tt><b>false</b></tt></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"Size_Type42920436\" id=\n-\"Size_Type42920436\"><b>typename</b> Size_Type </a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Size type.</p>\n-        </td>\n-\n-        <td>size_t</td>\n-      </tr>\n-    </table>\n-\n-    <h2><a name=\"link2\" id=\"link2\">Base Classes</a></h2>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Bases\">\n-      <tr>\n-        <td width=\"80%\" align=\"left\"><b>Class</b></td>\n-\n-        <td width=\"20%\" align=\"left\"><b>Derivation Type</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a href=\"#Size_Policy1072992366\"><tt>Size_Policy</tt></a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>public</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a href=\"#Trigger_Policy3611271815\"><tt>Trigger_Policy</tt></a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>public</p>\n-        </td>\n-      </tr>\n-    </table>\n-\n-    <h2><a name=\"link3\" id=\"link3\">Public Types and\n-    Constants</a></h2>\n-\n-    <h3><a name=\"link4\" id=\"link4\">General Definitions</a></h3>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Types\">\n-      <tr>\n-        <td width=\"30%\" align=\"left\"><b>Type</b></td>\n-\n-        <td width=\"55%\" align=\"left\"><b>Definition</b></td>\n-\n-        <td width=\"15%\" align=\"left\"><b>Description</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"size_type55424436\" id=\"size_type55424436\">size_type</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <pre>\n-<a href=\"#Size_Type42920436\"><tt>Size_Type</tt></a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Size type.</p>\n-        </td>\n-      </tr>\n-    </table>\n-\n-    <h3><a name=\"link5\" id=\"link5\">Policy Definitions</a></h3>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Types\">\n-      <tr>\n-        <td width=\"30%\" align=\"left\"><b>Type</b></td>\n-\n-        <td width=\"55%\" align=\"left\"><b>Definition</b></td>\n-\n-        <td width=\"15%\" align=\"left\"><b>Description</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"trigger_policy4019166151\" id=\n-\"trigger_policy4019166151\">trigger_policy</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <pre>\n-<a href=\"#Trigger_Policy3611271815\"><tt>Trigger_Policy</tt></a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Trigger policy type.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"size_policy1385592366\" id=\n-\"size_policy1385592366\">size_policy</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <pre>\n-<a href=\"#Size_Policy1072992366\"><tt>Size_Policy</tt></a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Size policy type.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"external_size_access4043083014\" id=\n-\"external_size_access4043083014\">external_size_access</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <pre>\n-<a href=\n-\"#External_Size_Access1380482982\"><tt>External_Size_Access</tt></a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Indicates whether sizes can be accessed\n-          externally.</p>\n-        </td>\n-      </tr>\n-    </table>\n-\n-    <h2><a name=\"link6\" id=\"link6\">Public Methods</a></h2>\n-\n-    <h3><a name=\"link7\" id=\"link7\">Constructors, Destructor, and\n-    Related</a></h3>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Methods\">\n-      <tr>\n-        <td width=\"45%\" align=\"left\"><b>Method</b></td>\n-\n-        <td width=\"55%\" align=\"left\"><b>Description</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-  hash_standard_resize_policy\n-  ()\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Default constructor.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-  hash_standard_resize_policy\n-  (<b>const</b> <a href=\n-\"#Size_Policy1072992366\"><tt>Size_Policy</tt></a> &amp;r_size_policy)\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>constructor taking some policies <span class=\n-          \"c1\"><tt>r_size_policy</tt></span> will be copied by the\n-          <a href=\"#Size_Policy1072992366\"><tt>Size_Policy</tt></a>\n-          object of this object.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-  hash_standard_resize_policy\n-  (<b>const</b> <a href=\n-\"#Size_Policy1072992366\"><tt>Size_Policy</tt></a> &amp;r_size_policy,\n-    <b>const</b> <a href=\n-\"#Trigger_Policy3611271815\"><tt>Trigger_Policy</tt></a> &amp;r_trigger_policy)\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>constructor taking some policies. <span class=\n-          \"c1\"><tt>r_size_policy</tt></span> will be copied by the\n-          <a href=\"#Size_Policy1072992366\"><tt>Size_Policy</tt></a>\n-          object of this object. <span class=\n-          \"c1\"><tt>r_trigger_policy</tt></span> will be copied by\n-          the <a href=\n-          \"#Trigger_Policy3611271815\"><tt>Trigger_Policy</tt></a>\n-          object of this object.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>virtual</b> \n-  ~hash_standard_resize_policy\n-  ()\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Destructor.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>inline</b> <b>void</b> \n-  swap\n-  (<span class=\n-\"c2\"><tt>hash_standard_resize_policy</tt></span> &amp;other)\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Swaps content.</p>\n-        </td>\n-      </tr>\n-    </table>\n-\n-    <h3><a name=\"link8\" id=\"link8\">Policy Access Methods</a></h3>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Methods\">\n-      <tr>\n-        <td width=\"45%\" align=\"left\"><b>Method</b></td>\n-\n-        <td width=\"55%\" align=\"left\"><b>Description</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a href=\"#Size_Policy1072992366\"><tt>Size_Policy</tt></a> &amp;\n-  get_size_policy\n-  ()\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Access to the <a href=\n-          \"#Size_Policy1072992366\"><tt>Size_Policy</tt></a> object\n-          used.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>const</b> <a href=\n-\"#Size_Policy1072992366\"><tt>Size_Policy</tt></a> &amp;\n-  get_size_policy\n-  () <b>const</b>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Const access to the <a href=\n-          \"#Size_Policy1072992366\"><tt>Size_Policy</tt></a> object\n-          used.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a href=\n-\"#Trigger_Policy3611271815\"><tt>Trigger_Policy</tt></a> &amp;\n-  get_trigger_policy\n-  ()\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Access to the <a href=\n-          \"#Trigger_Policy3611271815\"><tt>Trigger_Policy</tt></a>\n-          object used.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>const</b> <a href=\n-\"#Trigger_Policy3611271815\"><tt>Trigger_Policy</tt></a> &amp;\n-  get_trigger_policy\n-  () <b>const</b>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Access to the <a href=\n-          \"#Trigger_Policy3611271815\"><tt>Trigger_Policy</tt></a>\n-          object used.</p>\n-        </td>\n-      </tr>\n-    </table>\n-\n-    <h3><a name=\"link9\" id=\"link9\">Size Access Methods</a></h3>\n-\n-    <p>These methods are available only if the external size\n-    parameter indicates that external size access is allowed.</p>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Methods\">\n-      <tr>\n-        <td width=\"45%\" align=\"left\"><b>Method</b></td>\n-\n-        <td width=\"55%\" align=\"left\"><b>Description</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>inline</b> <a href=\"#size_type55424436\"><tt>size_type</tt></a> \n-  get_actual_size\n-  () <b>const</b>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Returns the actual size of the container.</p>\n-\n-          <p>This method returns the number of entries (used and\n-          unused) in the container. It is different from the\n-          container's size method, which returns the number of used\n-          entries. Calling this method will not compile when\n-          <a href=\n-          \"#External_Size_Access1380482982\"><tt>External_Size_Access</tt></a>\n-          == <tt><b>false</b></tt>.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>void</b> \n-  resize\n-  (<a href=\n-\"#size_type55424436\"><tt>size_type</tt></a> suggested_new_size)\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Resizes the container to <span class=\n-          \"c1\"><tt>suggested_new_size</tt></span>, a suggested size\n-          (the actual size will be determined by the <a href=\n-          \"#Size_Policy1072992366\"><tt>Size_Policy</tt></a>\n-          object).</p>\n-\n-          <p>Calling this method will not compile when <a href=\n-          \"#External_Size_Access1380482982\"><tt>External_Size_Access</tt></a>\n-          == <tt><b>false</b></tt>.</p>\n-        </td>\n-      </tr>\n-    </table>\n-\n-    <h2><a name=\"link10\" id=\"link10\">Protected Methods</a></h2>\n-\n-    <h3><a name=\"link11\" id=\"link11\">Insert Search\n-    Notifications.</a></h3>\n-\n-    <p>Notifications called during an insert operation.</p>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Methods\">\n-      <tr>\n-        <td width=\"45%\" align=\"left\"><b>Method</b></td>\n-\n-        <td width=\"55%\" align=\"left\"><b>Description</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>inline</b> <b>void</b>\n-  notify_insert_search_start\n-  ()\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Notifies a search started.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>inline</b> <b>void</b>\n-  notify_insert_search_collision\n-  ()\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Notifies a search encountered a collision.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>inline</b> <b>void</b>\n-  notify_insert_search_end\n-  ()\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Notifies a search ended.</p>\n-        </td>\n-      </tr>\n-    </table>\n-\n-    <h3><a name=\"link12\" id=\"link12\">Find Search\n-    Notifications.</a></h3>\n-\n-    <p>Notifications called during a find operation.</p>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Methods\">\n-      <tr>\n-        <td width=\"45%\" align=\"left\"><b>Method</b></td>\n-\n-        <td width=\"55%\" align=\"left\"><b>Description</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>inline</b> <b>void</b>\n-  notify_find_search_start\n-  ()\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Notifies a search started.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>inline</b> <b>void</b>\n-  notify_find_search_collision\n-  ()\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Notifies a search encountered a collision.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>inline</b> <b>void</b>\n-  notify_find_search_end\n-  ()\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Notifies a search ended.</p>\n-        </td>\n-      </tr>\n-    </table>\n-\n-    <h3><a name=\"link13\" id=\"link13\">Erase Search\n-    Notifications.</a></h3>\n-\n-    <p>Notifications called during an insert operation.</p>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Methods\">\n-      <tr>\n-        <td width=\"45%\" align=\"left\"><b>Method</b></td>\n-\n-        <td width=\"55%\" align=\"left\"><b>Description</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>inline</b> <b>void</b>\n-  notify_erase_search_start\n-  ()\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Notifies a search started.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>inline</b> <b>void</b>\n-  notify_erase_search_collision\n-  ()\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Notifies a search encountered a collision.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>inline</b> <b>void</b>\n-  notify_erase_search_end\n-  ()\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Notifies a search ended.</p>\n-        </td>\n-      </tr>\n-    </table>\n-\n-    <h3><a name=\"link14\" id=\"link14\">Content Change\n-    Notifications</a></h3>\n-\n-    <p>Notifications called when the content of the table changes\n-    in a way that can affect the resize policy.</p>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Methods\">\n-      <tr>\n-        <td width=\"45%\" align=\"left\"><b>Method</b></td>\n-\n-        <td width=\"55%\" align=\"left\"><b>Description</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>inline</b> <b>void</b>\n-  notify_inserted\n-  (<a href=\"#size_type55424436\"><tt>size_type</tt></a> num_e)\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Notifies an element was inserted.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>inline</b> <b>void</b>\n-  notify_erased\n-  (<a href=\"#size_type55424436\"><tt>size_type</tt></a> num_e)\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Notifies an element was erased.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>void</b> \n-  notify_cleared\n-  ()\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Notifies the table was cleared.</p>\n-        </td>\n-      </tr>\n-    </table>\n-\n-    <h3><a name=\"link15\" id=\"link15\">Size Change\n-    Notifications</a></h3>\n-\n-    <p>Notifications called when the table changes size.</p>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Methods\">\n-      <tr>\n-        <td width=\"45%\" align=\"left\"><b>Method</b></td>\n-\n-        <td width=\"55%\" align=\"left\"><b>Description</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>void</b>\n-  notify_resized\n-  (<a href=\"#size_type55424436\"><tt>size_type</tt></a> new_size)\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Notifies the table was resized to <span class=\n-          \"c1\"><tt>new_size</tt></span>.</p>\n-        </td>\n-      </tr>\n-    </table>\n-\n-    <h3><a name=\"link16\" id=\"link16\">Queries</a></h3>\n-\n-    <p>Called to query whether/how to resize.</p>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Methods\">\n-      <tr>\n-        <td width=\"45%\" align=\"left\"><b>Method</b></td>\n-\n-        <td width=\"55%\" align=\"left\"><b>Description</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>inline</b> <b>bool</b>\n-  is_resize_needed\n-  () <b>const</b>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Queries whether a resize is needed.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a href=\"#size_type55424436\"><tt>size_type</tt></a>\n-  get_new_size\n-  (<a href=\"#size_type55424436\"><tt>size_type</tt></a> size, \n-    <a href=\n-\"#size_type55424436\"><tt>size_type</tt></a> num_used_e) <b>const</b>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Queries what the new <span class=\n-          \"c1\"><tt>size</tt></span> should be, when the container\n-          is resized naturally. The current size of the container\n-          is <span class=\"c1\"><tt>size</tt></span>, and the number\n-          of used entries within the container is <span class=\n-          \"c1\"><tt>num_used_e</tt></span>.</p>\n-        </td>\n-      </tr>\n-    </table>\n-\n-    <h2><a name=\"link17\" id=\"link17\">Private Methods</a></h2>\n-\n-    <h3><a name=\"link18\" id=\"link18\">Overrides</a></h3>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Methods\">\n-      <tr>\n-        <td width=\"45%\" align=\"left\"><b>Method</b></td>\n-\n-        <td width=\"55%\" align=\"left\"><b>Description</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>virtual</b> <b>void</b>\n-  do_resize\n-  (<a href=\"#size_type55424436\"><tt>size_type</tt></a> new_size)\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Resizes to <span class=\n-          \"c1\"><tt>new_size</tt></span>.</p>\n-        </td>\n-      </tr>\n-    </table>\n-  </div>\n-</body>\n-</html>"}, {"sha": "60c30fd343c2588ecf4818efbac57e9997dcedef", "filename": "libstdc++-v3/doc/html/ext/pb_ds/hash_text_find_find_timing_test.html", "status": "removed", "additions": 0, "deletions": 164, "changes": 164, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fhash_text_find_find_timing_test.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fhash_text_find_find_timing_test.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fhash_text_find_find_timing_test.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7", "patch": "@@ -1,164 +0,0 @@\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n-    \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-\n-<html xmlns=\"http://www.w3.org/1999/xhtml\">\n-<head>\n-<meta name=\"generator\" content=\"HTML Tidy for Linux/x86 (vers 12 April 2005), see www.w3.org\" />\n-<title>Hash Text Find Timing Test</title>\n-<meta http-equiv=\"Content-Type\" content=\"text/html; charset=us-ascii\" />\n-</head>\n-<body>\n-<div id=\"page\">\n-<h1>Hash-Based Text <tt>find</tt> Find Timing Test</h1>\n-<h2><a name=\"description\" id=\"description\">Description</a></h2>\n-<p>This test inserts a number of values with keys from an\n-    arbitrary text ([ <a href=\"references.html#wickland96thirty\">wickland96thirty</a> ]) into\n-    a container, then performs a series of finds using\n-    <tt>find</tt> . It measures the average time for <tt>find</tt>\n-    as a function of the number of values inserted.</p>\n-<p>(The test was executed with <a href=\"http://gcc.gnu.org/viewcvs/*checkout*/trunk/libstdc%2B%2B-v3/testsuite/performance/ext/pb_ds/text_find_timing.cc\"><tt>text_find_timing_test</tt></a>\n-    thirty_years_among_the_dead_preproc.txt 200 200 2100)</p>\n-<h2><a name=\"purpose\" id=\"purpose\">Purpose</a></h2>\n-<p>The test checks the effect of different range-hashing\n-    functions, trigger policies, and cache-hashing policies (see\n-    <a href=\"hash_based_containers.html#hash_policies\">Design::Associative\n-    Containers::Associative Containers::Hash-Based Containers::Hash\n-    Policies</a> and <a href=\"hash_based_containers.html#resize_policies\">Design::Associative\n-    Containers::Hash-Based Containers::Resize Policies</a> ).</p>\n-<h2><a name=\"results\" id=\"results\">Results</a></h2>\n-<p>Figures <a href=\"#NCCG\">NCCG</a>, <a href=\"#NCCM\">NCCM</a>\n-    and <a href=\"#NCCL\">NCCL</a> show the results for the native\n-    and collision-chaining types in <a href=\"assoc_performance_tests.html#gcc\"><u>g++</u></a>, <a href=\"assoc_performance_tests.html#msvc\"><u>msvc++</u></a>, and\n-    <a href=\"assoc_performance_tests.html#local\"><u>local</u></a>,\n-    respetively.</p>\n-<div id=\"NCCG_res_div\">\n-<div id=\"NCCG_gcc\">\n-<div id=\"NCCG_text_find_timing_test_hash\">\n-<div id=\"NCCG_assoc\">\n-<div id=\"NCCG_Native_and_collision-chaining_hash_text_find_timing_test_using__tt_find_455tt_\"><div style=\"border-style: dotted; border-width: 1px; border-color: lightgray\"><h6 class=\"c1\"><a name=\"NCCG\" id=\"NCCG\"><img src=\"text_find_timing_test_hash_gcc.png\" alt=\"no image\" /></a></h6>NCCG: Native and collision-chaining hash text find timing test using <tt>find</tt> - <a href=\"assoc_performance_tests.html#gcc\">g++</a><p>In the above figure, the names in the legends have the following meaning:</p>\n-<ol>\n-<li>\n-n_hash_map_ncah-\n-<tt>std::tr1::unordered_map</tt> with <tt>cache_hash_code</tt> = <tt><b>false</b></tt></li>\n-<li>\n-cc_hash_mod_prime_nea_lc_1div8_1div1_nsth_map-\n-<a href=\"cc_hash_table.html\"><tt>cc_hash_table</tt></a>\n-with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mod_range_hashing.html\"><tt>direct_mod_range_hashing</tt></a>\n-, and <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_prime_size_policy.html\"><tt>hash_prime_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/1</i></li>\n-<li>\n-cc_hash_mask_exp_nea_lc_1div8_1div2_sth_map-\n-<a href=\"cc_hash_table.html\"><tt>cc_hash_table</tt></a>\n-with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mask_range_hashing.html\"><tt>direct_mask_range_hashing</tt></a>\n-, and <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_exponential_size_policy.html\"><tt>hash_exponential_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/2</i></li>\n-<li>\n-cc_hash_mask_exp_nea_lc_1div8_1div1_nsth_map-\n-<a href=\"cc_hash_table.html\"><tt>cc_hash_table</tt></a>\n-with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mask_range_hashing.html\"><tt>direct_mask_range_hashing</tt></a>\n-, and <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_exponential_size_policy.html\"><tt>hash_exponential_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/1</i></li>\n-<li>\n-cc_hash_mask_exp_nea_lc_1div8_1div2_nsth_map-\n-<a href=\"cc_hash_table.html\"><tt>cc_hash_table</tt></a>\n-with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mask_range_hashing.html\"><tt>direct_mask_range_hashing</tt></a>\n-, and <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_exponential_size_policy.html\"><tt>hash_exponential_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/2</i></li>\n-</ol>\n-</div><div style=\"width: 100%; height: 20px\"></div></div>\n-</div>\n-</div>\n-</div>\n-</div>\n-<div id=\"NCCM_res_div\">\n-<div id=\"NCCM_msvc\">\n-<div id=\"NCCM_text_find_timing_test_hash\">\n-<div id=\"NCCM_assoc\">\n-<div id=\"NCCM_Native_and_collision-chaining_hash_text_find_timing_test_using__tt_find_455tt_\"><div style=\"border-style: dotted; border-width: 1px; border-color: lightgray\"><h6 class=\"c1\"><a name=\"NCCM\" id=\"NCCM\"><img src=\"text_find_timing_test_hash_msvc.png\" alt=\"no image\" /></a></h6>NCCM: Native and collision-chaining hash text find timing test using <tt>find</tt> - <a href=\"assoc_performance_tests.html#msvc\">msvc++</a><p>In the above figure, the names in the legends have the following meaning:</p>\n-<ol>\n-<li>\n-n_hash_map_ncah-\n-<tt>stdext::hash_map</tt></li>\n-<li>\n-cc_hash_mod_prime_nea_lc_1div8_1div1_nsth_map-\n-<a href=\"cc_hash_table.html\"><tt>cc_hash_table</tt></a>\n-with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mod_range_hashing.html\"><tt>direct_mod_range_hashing</tt></a>\n-, and <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_prime_size_policy.html\"><tt>hash_prime_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/1</i></li>\n-<li>\n-cc_hash_mask_exp_nea_lc_1div8_1div1_nsth_map-\n-<a href=\"cc_hash_table.html\"><tt>cc_hash_table</tt></a>\n-with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mask_range_hashing.html\"><tt>direct_mask_range_hashing</tt></a>\n-, and <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_exponential_size_policy.html\"><tt>hash_exponential_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/1</i></li>\n-<li>\n-cc_hash_mask_exp_nea_lc_1div8_1div2_nsth_map-\n-<a href=\"cc_hash_table.html\"><tt>cc_hash_table</tt></a>\n-with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mask_range_hashing.html\"><tt>direct_mask_range_hashing</tt></a>\n-, and <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_exponential_size_policy.html\"><tt>hash_exponential_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/2</i></li>\n-<li>\n-cc_hash_mask_exp_nea_lc_1div8_1div2_sth_map-\n-<a href=\"cc_hash_table.html\"><tt>cc_hash_table</tt></a>\n-with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mask_range_hashing.html\"><tt>direct_mask_range_hashing</tt></a>\n-, and <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_exponential_size_policy.html\"><tt>hash_exponential_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/2</i></li>\n-</ol>\n-</div><div style=\"width: 100%; height: 20px\"></div></div>\n-</div>\n-</div>\n-</div>\n-</div>\n-<div id=\"NCCL_res_div\">\n-<div id=\"NCCL_local\">\n-<div id=\"NCCL_text_find_timing_test_hash\">\n-<div id=\"NCCL_assoc\">\n-<div id=\"NCCL_Native_and_collision-chaining_hash_text_find_timing_test_using__tt_find_455tt_\"><div style = \"border-style: dotted; border-width: 1px; border-color: lightgray\"><h6 class=\"c1\"><a name=\"NCCL\" id= \"NCCL\"><img src=\"text_find_timing_test_hash_local.png\" alt=\"no image\" /></a></h6>NCCL: Native and collision-chaining hash text find timing test using <tt>find</tt> - <a href = \"assoc_performance_tests.html#local\">local</a></div><div style = \"width: 100%; height: 20px\"></div></div>\n-</div>\n-</div>\n-</div>\n-</div>\n-<h2><a name=\"observations\" id=\"observations\">Observations</a></h2>\n-<p>In this setting, the range-hashing scheme (See <a href=\"hash_based_containers.html#hash_policies\">Design::Associative\n-    Containers::Hash-Based Containers::Hash Policies</a> ) affects\n-    performance more than other policies. As Figure <a href=\"#NCCG\">NCCG</a> shows, containers using mod-based\n-    range-hashing (including the native hash-based container, which\n-    is currently hard-wired to this scheme) have lower performance\n-    than those using mask-based range-hashing. A modulo-based\n-    range-hashing scheme's main benefit is that it takes into\n-    account all hash-value bits. Standard string hash-functions are\n-    designed to create hash values that are nearly-uniform as is [\n-    <a href=\"references.html#knuth98sorting\">knuth98sorting</a>\n-    ].</p>\n-<p>Trigger policies (see <a href=\"hash_based_containers.html#resize_policies\">Design::Associative\n-    Containers::Hash-Based Containers::Resize Policies</a> ),\n-    <i>i.e.</i> the load-checks constants, affect performance to a\n-    lesser extent.</p>\n-<p>Perhaps surprisingly, storing the hash value alongside each\n-    entry affects performance only marginally, at least in\n-    <tt>pb_ds</tt> 's implementation. (Unfortunately, it was not\n-    possible to run the tests with <tt>std::tr1::unordered_map</tt>\n-    's <tt>cache_hash_code = <b>true</b></tt> , as it appeared to\n-    malfuntion.)</p>\n-<p><a href=\"assoc_performance_tests.html#hash_based_policies\">Observations::Hash-Based\n-    Containers' Policies</a> summarizes some observations on\n-    hash-based containers' policies.</p>\n-</div>\n-</body>\n-</html>"}, {"sha": "bfbb3b0866f3ba1c44d2e086676a886999798575", "filename": "libstdc++-v3/doc/html/ext/pb_ds/hash_zlob_random_int_find_find_timing_test.html", "status": "removed", "additions": 0, "deletions": 163, "changes": 163, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fhash_zlob_random_int_find_find_timing_test.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fhash_zlob_random_int_find_find_timing_test.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fhash_zlob_random_int_find_find_timing_test.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7", "patch": "@@ -1,163 +0,0 @@\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n-    \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n-<head>\n-<meta name=\"generator\" content=\"HTML Tidy for Linux/x86 (vers 12 April 2005), see www.w3.org\" />\n-<title>Hash Skewed Distribution Memory Use Test</title>\n-<meta http-equiv=\"Content-Type\" content=\"text/html; charset=us-ascii\" />\n-</head>\n-<body>\n-<div id=\"page\">\n-<h1>Hash-Based Skewed-Distribution Random-Integer <tt>find</tt>\n-    Find Timing Test</h1>\n-<h2><a name=\"description\" id=\"description\">Description</a></h2>\n-<p>This test inserts a number of values with a markedly\n-    non-uniform i.i.d. integer keys into a container, then performs\n-    a series of finds using <tt>find</tt> . It measures the average\n-    time for <tt>find</tt> as a function of the number of values in\n-    the containers. The keys are generated as follows. First, a\n-    uniform integer is created; it is then shifted left 8 bits.</p>\n-<p>(The test was executed with <a href=\"http://gcc.gnu.org/viewcvs/*checkout*/trunk/libstdc%2B%2B-v3/testsuite/performance/ext/pb_ds/hash_zlob_random_int_find_timing.cc\"><tt>hash_zlob_random_int_find_timing_test</tt></a>\n-    200 200 2100)</p>\n-<h2><a name=\"purpose\" id=\"purpose\">Purpose</a></h2>\n-<p>The test checks the effect of different range-hashing\n-    functions and trigger policies (see <a href=\"hash_based_containers.html#hash_policies\">Design::Associative\n-    Containers::Hash-Based Containers::Hash Policies</a> and\n-    <a href=\"hash_based_containers.html#resize_policies\">Design::Associative\n-    Containers::Hash-Based Containers::Resize Policies</a>).</p>\n-<h2><a name=\"results\" id=\"results\">Results</a></h2>\n-<p>Figures <a href=\"#NHG\">NHG</a>, <a href=\"#NHM\">NHM</a>, and\n-    <a href=\"#NHL\">NHL</a> show the results for various hash-based\n-    associative-containers in <a href=\"assoc_performance_tests.html#gcc\"><u>g++</u></a>, <a href=\"assoc_performance_tests.html#msvc\"><u>MSVC++</u></a>, and\n-    <a href=\"assoc_performance_tests.html#local\"><u>local</u></a>,\n-    respectively.</p>\n-<div id=\"NHG_res_div\">\n-<div id=\"NHG_gcc\">\n-<div id=\"NHG_hash_zlob_random_int_find_timing_test\">\n-<div id=\"NHG_assoc\">\n-<div id=\"NHG_Skewed-distribution_random_int_find_timing_test_using__tt_find_455tt_\"><div style=\"border-style: dotted; border-width: 1px; border-color: lightgray\"><h6 class=\"c1\"><a name=\"NHG\" id=\"NHG\"><img src=\"hash_zlob_random_int_find_timing_test_gcc.png\" alt=\"no image\" /></a></h6>NHG: Skewed-distribution random int find timing test using <tt>find</tt> - <a href=\"assoc_performance_tests.html#gcc\">g++</a><p>In the above figure, the names in the legends have the following meaning:</p>\n-<ol>\n-<li>\n-cc_hash_mask_exp_nea_lc_1div8_1div1_nsth_map-\n-<a href=\"cc_hash_table.html\"><tt>cc_hash_table</tt></a>\n-with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mask_range_hashing.html\"><tt>direct_mask_range_hashing</tt></a>\n-, and <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_exponential_size_policy.html\"><tt>hash_exponential_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/1</i></li>\n-<li>\n-gp_hash_mod_quadp_prime_nea_lc_1div8_1div2_nsth_map-\n-<a href=\"gp_hash_table.html\"><tt>gp_hash_table</tt></a>\n- with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mod_range_hashing.html\"><tt>direct_mod_range_hashing</tt></a>\n-, <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_prime_size_policy.html\"><tt>hash_prime_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/2</i>, and <tt>Probe_Fn</tt> = <a href=\"quadratic_probe_fn.html\"><tt>quadratic_probe_fn</tt></a>\n-</li>\n-<li>\n-n_hash_map_ncah-\n-<tt>std::tr1::unordered_map</tt> with <tt>cache_hash_code</tt> = <tt><b>false</b></tt></li>\n-<li>\n-cc_hash_mod_prime_nea_lc_1div8_1div1_nsth_map-\n-<a href=\"cc_hash_table.html\"><tt>cc_hash_table</tt></a>\n-with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mod_range_hashing.html\"><tt>direct_mod_range_hashing</tt></a>\n-, and <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_prime_size_policy.html\"><tt>hash_prime_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/1</i></li>\n-</ol>\n-</div><div style=\"width: 100%; height: 20px\"></div></div>\n-</div>\n-</div>\n-</div>\n-</div>\n-<div id=\"NHM_res_div\">\n-<div id=\"NHM_msvc\">\n-<div id=\"NHM_hash_zlob_random_int_find_timing_test\">\n-<div id=\"NHM_assoc\">\n-<div id=\"NHM_Skewed-distribution_random_int_find_timing_test_using__tt_find_455tt_\"><div style=\"border-style: dotted; border-width: 1px; border-color: lightgray\"><h6 class=\"c1\"><a name=\"NHM\" id=\"NHM\"><img src=\"hash_zlob_random_int_find_timing_test_msvc.png\" alt=\"no image\" /></a></h6>NHM: Skewed-distribution random int find timing test using <tt>find</tt> - <a href=\"assoc_performance_tests.html#msvc\">msvc++</a><p>In the above figure, the names in the legends have the following meaning:</p>\n-<ol>\n-<li>\n-n_hash_map_ncah-\n-<tt>stdext::hash_map</tt></li>\n-<li>\n-cc_hash_mask_exp_nea_lc_1div8_1div1_nsth_map-\n-<a href=\"cc_hash_table.html\"><tt>cc_hash_table</tt></a>\n-with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mask_range_hashing.html\"><tt>direct_mask_range_hashing</tt></a>\n-, and <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_exponential_size_policy.html\"><tt>hash_exponential_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/1</i></li>\n-<li>\n-gp_hash_mod_quadp_prime_nea_lc_1div8_1div2_nsth_map-\n-<a href=\"gp_hash_table.html\"><tt>gp_hash_table</tt></a>\n- with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mod_range_hashing.html\"><tt>direct_mod_range_hashing</tt></a>\n-, <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_prime_size_policy.html\"><tt>hash_prime_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/2</i>, and <tt>Probe_Fn</tt> = <a href=\"quadratic_probe_fn.html\"><tt>quadratic_probe_fn</tt></a>\n-</li>\n-<li>\n-cc_hash_mod_prime_nea_lc_1div8_1div1_nsth_map-\n-<a href=\"cc_hash_table.html\"><tt>cc_hash_table</tt></a>\n-with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mod_range_hashing.html\"><tt>direct_mod_range_hashing</tt></a>\n-, and <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_prime_size_policy.html\"><tt>hash_prime_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/1</i></li>\n-</ol>\n-</div><div style=\"width: 100%; height: 20px\"></div></div>\n-</div>\n-</div>\n-</div>\n-</div>\n-<div id=\"NHL_res_div\">\n-<div id=\"NHL_local\">\n-<div id=\"NHL_hash_zlob_random_int_find_timing_test\">\n-<div id=\"NHL_assoc\">\n-<div id=\"NHL_Skewed-distribution_random_int_find_timing_test_using__tt_find_455tt_\"><div style = \"border-style: dotted; border-width: 1px; border-color: lightgray\"><h6 class=\"c1\"><a name=\"NHL\" id= \"NHL\"><img src=\"hash_zlob_random_int_find_timing_test_local.png\" alt=\"no image\" /></a></h6>NHL: Skewed-distribution random int find timing test using <tt>find</tt> - <a href = \"assoc_performance_tests.html#local\">local</a></div><div style = \"width: 100%; height: 20px\"></div></div>\n-</div>\n-</div>\n-</div>\n-</div>\n-<h2><a name=\"observations\" id=\"observations\">Observations</a></h2>\n-<p>In this setting, the keys' distribution is so skewed that\n-    the unerlying hash-table type affects performance marginally.\n-    (This is in contrast with <a href=\"hash_text_find_find_timing_test.html\">Hash-Based Text\n-    <tt>find</tt> Find Timing Test</a> , <a href=\"hash_random_int_find_find_timing_test.html\">Hash-Based\n-    Random-Integer <tt>find</tt> Find Timing Test</a> , <a href=\"hash_random_int_subscript_find_timing_test.html\">Hash-Based\n-    Random-Integer Subscript Find Timing Test</a> and <a href=\"hash_random_int_subscript_insert_timing_test.html\">Hash-Based\n-    Random-Integer Subscript Insert Timing Test</a> .)</p>\n-<p>The range-hashing scheme affects performance dramatically. A\n-    mask-based range-hashing scheme effectively maps all values\n-    into the same bucket. Access degenerates into a search within\n-    an unordered linked-list. In Figures <a href=\"#NHG\">NHG</a> and\n-    <a href=\"#NHM\">NHM</a> , it should be noted that\n-    <tt>std::tr1::unordered_map</tt> and <tt>stdext::hash_map</tt>\n-    are hard-wired currently to mod-based and mask-based schemes,\n-    respectively.</p>\n-<p>When observing the settings of this test, it is apparent\n-    that the keys' distribution is far from natural. One might ask\n-    if the test is not contrived to show that, in some cases,\n-    mod-based range hashing does better than mask-based range\n-    hashing. This is, in fact just the case. We did not encounter a\n-    more natural case in which mod-based range hashing is better.\n-    In our opnion, real-life key distributions are handled better\n-    with an appropriate hash function and a mask-based\n-    range-hashing function. (<a href=\"http://gcc.gnu.org/viewcvs/*checkout*/trunk/libstdc%2B%2B-v3/testsuite/ext/pb_ds/example/hash_shift_mask.cc\"><tt>shift_mask.cc</tt></a>\n-    shows an example of handling this a-priori known skewed\n-    distribution with a mask-based range-hashing function). If hash\n-    performance is bad, a <i>&Chi;<sup>2</sup></i> test can be used\n-    to check how to transform it into a more uniform\n-    distribution.</p>\n-<p>For this reason, <tt>pb_ds</tt>'s default range-hashing\n-    function is mask-based.</p>\n-<p><a href=\"assoc_performance_tests.html#hash_based_types\">Observations::Hash-Based\n-    Container Types</a> summarizes some observations on hash-based\n-    containers; <a href=\"assoc_performance_tests.html#hash_based_policies\">Observations::Hash-Based\n-    Containers' Policies</a> summarizes some observations on\n-    hash-based containers' policies.</p>\n-</div>\n-</body>\n-</html>"}, {"sha": "8d170db1a2aede74640d042caba4082ba914b545", "filename": "libstdc++-v3/doc/html/ext/pb_ds/hash_zlob_random_int_find_timing_test_gcc.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fhash_zlob_random_int_find_timing_test_gcc.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fhash_zlob_random_int_find_timing_test_gcc.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fhash_zlob_random_int_find_timing_test_gcc.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "81848ba8b2e3d445667e8fd3f9b75a37d0d978a1", "filename": "libstdc++-v3/doc/html/ext/pb_ds/hash_zlob_random_int_find_timing_test_local.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fhash_zlob_random_int_find_timing_test_local.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fhash_zlob_random_int_find_timing_test_local.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fhash_zlob_random_int_find_timing_test_local.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "874e7a780e66b2e2765c51cdb856daf45bf504c6", "filename": "libstdc++-v3/doc/html/ext/pb_ds/hash_zlob_random_int_find_timing_test_msvc.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fhash_zlob_random_int_find_timing_test_msvc.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fhash_zlob_random_int_find_timing_test_msvc.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fhash_zlob_random_int_find_timing_test_msvc.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "4c73c2e915a30bc860c9f9908dd81569eccc805d", "filename": "libstdc++-v3/doc/html/ext/pb_ds/index.html", "status": "removed", "additions": 0, "deletions": 146, "changes": 146, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Findex.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Findex.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Findex.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7", "patch": "@@ -1,146 +0,0 @@\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\"\n-    \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n-\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n-<head>\n-  <meta name=\"generator\" content=\n-  \"HTML Tidy for Linux/x86 (vers 12 April 2005), see www.w3.org\" />\n-\n-  <title>Policy-Based Data Structures</title>\n-  <meta http-equiv=\"Content-Type\" content=\n-  \"text/html; charset=us-ascii\" />\n-  </head>\n-\n-<body>\n-  <div id=\"page\">\n-    <h1>Policy-Based Data Structures</h1>\n-\n-    <h5>Ami Tavory and Vladimir Dreizin, IBM Haifa Research\n-    Laboratories, and Benjamin Kosnik, Red Hat</h5>\n-\n-    <h5><a href=\"mailto:pbassoc@gmail.com\">pbassoc@gmail.com</a></h5>\n-\n-    <p>This is a library of policy-based elementary\n-    data structures: associative containers and priority queues. It\n-    is designed for high-performance, flexibility, semantic safety,\n-    and conformance to the corresponding containers in <tt>std</tt>\n-    and std::tr1 (except for some points where it differs by\n-    design).</p>\n-\n-    <p>The documentation is organized as follows:</p>\n-\n-    <ol>\n-      <li>\n-        <a href=\"introduction.html\">Introductory</a>\n-\n-        <ol>\n-          <li><a href=\"introduction.html\">Introduction</a></li>\n-\n-          <li><a href=\"motivation.html\">Motivation</a></li>\n-\n-          <li><a href=\"prerequisites.html\">Usage\n-          Prerequisites</a></li>\n-        </ol>\n-      </li>\n-\n-      <li>\n-        <a href=\"interface.html\">Interface</a>\n-\n-        <ol>\n-          <li><a href=\"tutorial.html\">Short Tutorial</a></li>\n-\n-          <li><a href=\"concepts.html\">Concepts</a></li>\n-\n-          <li><a href=\"interface.html\">Specifics</a></li>\n-        </ol>\n-      </li>\n-\n-      <li>\n-        <a href=\"design.html\">Design</a>\n-\n-        <ol>\n-          <li>\n-            <a href=\"assoc_design.html\">Associative Containers</a>\n-\n-            <ol>\n-              <li><a href=\"ds_gen.html\">Data-Structure\n-              Genericity and Interface</a> </li>\n-\n-              <li><a href=\"tree_based_containers.html\">Tree-Based\n-              Containers</a></li>\n-\n-              <li><a href=\"trie_based_containers.html\">Trie-Based\n-              Containers</a></li>\n-\n-              <li><a href=\"hash_based_containers.html\">Hash-Based\n-              Containers</a></li>\n-\n-              <li><a href=\"lu_based_containers.html\">List-Based\n-              Containers</a> </li>\n-            </ol>\n-          </li>\n-\n-          <li><a href=\"pq_design.html\">Priority Queues</a></li>\n-        </ol>\n-      </li>\n-\n-      <li>\n-        <a href=\"examples.html\">Examples</a>\n-\n-        <ol>\n-          <li><a href=\"assoc_examples.html\">Associative\n-          Containers</a></li>\n-\n-          <li><a href=\"pq_examples.html\">Priority Queues</a></li>\n-        </ol>\n-      </li>\n-\n-      <li>\n-        <a href=\"tests.html\">Tests</a>\n-\n-        <ol>\n-          <li>\n-            <a href=\"assoc_tests.html\">Associative Containers</a>\n-\n-            <ol>\n-              <li><a href=\"assoc_regression_tests.html\">Regression\n-              Tests</a></li>\n-\n-              <li><a href=\n-              \"assoc_performance_tests.html\">Performance\n-              Tests</a></li>\n-            </ol>\n-          </li>\n-\n-          <li>\n-            <a href=\"pq_tests.html\">Priority Queues</a>\n-\n-            <ol>\n-              <li><a href=\"pq_regression_tests.html\">Regression\n-              Tests</a></li>\n-\n-              <li><a href=\"pq_performance_tests.html\">Performance\n-              Tests</a></li>\n-            </ol>\n-          </li>\n-        </ol>\n-      </li>\n-\n-      <li>\n-        <a href=\"misc.html\">Misc.</a>\n-\n-        <ol>\n-          <li><a href=\"acks.html\">Acknowledgments</a></li>\n-\n-          <li><a href=\"contact.html\">Contact</a></li>\n-\n-          <li><a href=\"disclaimer.html\">Disclaimer and\n-          Copyright</a></li>\n-\n-          <li><a href=\"references.html\">References</a></li>\n-        </ol>\n-      </li>\n-    </ol>\n-  </div>\n-</body>\n-</html>"}, {"sha": "37a89aaf9e099f4a92e97c28c0104244bfa90fd0", "filename": "libstdc++-v3/doc/html/ext/pb_ds/insert_error.html", "status": "removed", "additions": 0, "deletions": 53, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Finsert_error.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Finsert_error.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Finsert_error.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7", "patch": "@@ -1,53 +0,0 @@\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n- \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n-<head>\n-<meta name=\"generator\" content=\n- \"HTML Tidy for Linux/x86 (vers 12 April 2005), see www.w3.org\" />\n-\n-<title>insert_error Interface</title>\n-<meta http-equiv=\"Content-Type\" content=\n- \"text/html; charset=us-ascii\" />\n-</head>\n-\n-<body>\n-<div id=\"page\">\n-<h1><tt>insert_error</tt> Interface</h1>\n-\n-<p>An entry cannot be inserted into a container object for logical\n-reasons (not, e.g., if memory is unavailable, in which case the\n-allocator's exception will be thrown).</p>\n-\n-    <p>This exception may be thrown, e.g., when a probe sequence in\n-    a probing hash table does not encounter any free positions,\n-    even though free positions are available.</p>\n-\n-    <p>Defined in: <a href=\n-    \"http://gcc.gnu.org/viewcvs/*checkout*/trunk/libstdc%2B%2B-v3/include/ext/pb_ds/exception.hpp\"><tt>exception.hpp</tt></a></p>\n-\n-    <h2><a name=\"link1\" id=\"link1\">Base Classes</a></h2>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Bases\">\n-      <tr>\n-        <td width=\"80%\" align=\"left\"><b>Class</b></td>\n-\n-        <td width=\"20%\" align=\"left\"><b>Derivation Type</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a href=\"exceptions.html\"><span class=\n-\"c2\"><tt>insert_error</tt></span></a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>public</p>\n-        </td>\n-      </tr>\n-    </table>\n-  </div>\n-</body>\n-</html>"}, {"sha": "a48a8bbadde8b2426af801160851885b101cc01e", "filename": "libstdc++-v3/doc/html/ext/pb_ds/interface.html", "status": "removed", "additions": 0, "deletions": 446, "changes": 446, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Finterface.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Finterface.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Finterface.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7", "patch": "@@ -1,446 +0,0 @@\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\"\n- \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n-\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n-<head>\n-<meta name=\"generator\" content=\n- \"HTML Tidy for Linux/x86 (vers 12 April 2005), see www.w3.org\" />\n-\n-<title>Interface</title>\n-<meta http-equiv=\"Content-Type\" content=\n- \"text/html; charset=us-ascii\" />\n-</head>\n-\n-<body>\n-<div id=\"page\">\n-<h1>Interface Specifics</h1>\n-\n-<p>Following are the library's interface specifics. <a href=\n-    \"tutorial.html\">Short Tutorial</a> is a short tutorial, and\n-    <a href=\"concepts.html\">Concepts</a> describes some\n-    concepts.</p>\n-    <hr />\n-\n-    <h2><a name=\"namespaces\" id=\"namespaces\">Namespace</a></h2>\n-\n-    <p>All code is enclosed in namespace <tt>pb_ds</tt>. Nested within\n-    this is namespace <tt>detail</tt>, which contains the parts of this\n-    library that are considered implementation details.</p>\n-    <hr />\n-\n-    <h2><a name=\"containers\" id=\"containers\">Containers</a></h2>\n-\n-    <h3><a name=\"containers_assoc\" id=\n-    \"containers_assoc\">Associative Containers</a></h3>\n-\n-    <ol>\n-      <li><a href=\n-      \"container_base.html\"><tt>container_base</tt></a> -\n-      abstract base class for associative containers.</li>\n-\n-      <li>Hash-based:\n-\n-        <ol>\n-          <li><a href=\n-          \"basic_hash_table.html\"><tt>basic_hash_table</tt></a>\n-          - abstract base class for hash-based\n-          containers</li>\n-\n-          <li><a href=\n-          \"cc_hash_table.html\"><tt>cc_hash_table</tt></a>\n-          - concrete collision-chaining hash-based\n-          containers</li>\n-\n-          <li><a href=\n-          \"gp_hash_table.html\"><tt>gp_hash_table</tt></a>\n-          - concrete (general) probing hash-based\n-          containers</li>\n-        </ol>\n-      </li>\n-\n-      <li>Tree-based:\n-\n-        <ol>\n-          <li><a href=\n-          \"basic_tree.html\"><tt>basic_tree</tt></a>\n-          - abstract base class for tree and trie based\n-          containers</li>\n-\n-          <li><a href=\n-          \"tree.html\"><tt>tree</tt></a>\n-          - concrete base class for tree-based\n-          containers</li>\n-\n-          <li><a href=\n-          \"trie.html\"><tt>trie</tt></a>\n-          - concrete base class for trie-based\n-          containers</li>\n-        </ol>\n-      </li>\n-\n-      <li>List-based:\n-\n-        <ol>\n-          <li><a href=\n-          \"list_update.html\"><tt>list_update</tt></a> -\n-          singly-linked list with update-policy container</li>\n-        </ol>\n-      </li>\n-    </ol>\n-\n-    <h3><a name=\"containers_pq\" id=\"containers_pq\">Priority\n-    Queues</a></h3>\n-\n-    <ol>\n-      <li><a href=\"priority_queue.html\"><tt>priority_queue</tt></a>\n-      - priority queue</li>\n-    </ol>\n-    <hr />\n-\n-    <h2><a name=\"tag\" id=\"tag\">Container Tags and\n-    Traits</a></h2>\n-\n-    <h3><a name=\"ds_ts\" id=\"ds_ts\">Container Tags</a></h3>\n-\n-    <h4><a name=\"ds_ts_common\" id=\"ds_ts_common\">Common</a></h4>\n-\n-    <ol>\n-      <li><a href=\"container_tag.html\"><tt>container_tag</tt></a> -\n-      base class for data structure tags</li>\n-    </ol>\n-\n-    <h4><a name=\"ds_ts_assoc\" id=\n-    \"ds_ts_assoc\">Associative-Containers</a></h4>\n-\n-     <ol>\n-      <li><a href=\n-      \"associative_container_tag.html\"><tt>associative_container_tag</tt></a> -\n-      base class for associative-container data structure tags</li>\n-\n-      <li><a href=\n-      \"basic_hash_tag.html\"><tt>basic_hash_tag</tt></a> -\n-      base class for hash-based structure tags</li>\n-\n-      <li><a href=\"cc_hash_tag.html\"><tt>cc_hash_tag</tt></a>\n-      - collision-chaining hash structure tag</li>\n-\n-      <li><a href=\"gp_hash_tag.html\"><tt>gp_hash_tag</tt></a>\n-      - (general) probing hash structure tag</li>\n-\n-      <li><a href=\n-      \"basic_tree_tag.html\"><tt>basic_tree_tag</tt></a>\n-      - base class for tree-like structure tags</li>\n-\n-      <li><a href=\n-      \"tree_tag.html\"><tt>tree_tag</tt></a> -\n-      base class for tree structure tags</li>\n-\n-      <li><a href=\"rb_tree_tag.html\"><tt>rb_tree_tag</tt></a>\n-      - red-black tree structure tag/li&gt;</li>\n-\n-      <li><a href=\n-      \"splay_tree_tag.html\"><tt>splay_tree_tag</tt></a> -\n-      splay tree structure tag</li>\n-\n-      <li><a href=\"ov_tree_tag.html\"><tt>ov_tree_tag</tt></a>\n-      - ordered-vector tree structure tag</li>\n-\n-      <li><a href=\n-      \"trie_tag.html\"><tt>trie_tag</tt></a> -\n-      trie structure tag</li>\n-\n-      <li><a href=\n-      \"pat_trie_tag.html\"><tt>pat_trie_tag</tt></a> -\n-      PATRICIA trie structure tag</li>\n-\n-      <li><a href=\"list_update_tag.html\"><tt>list_update_tag</tt></a> - list\n-      (with updates) structure tag</li>\n-    </ol>\n-\n-    <h4><a name=\"ds_ts_pq\" id=\"ds_ts_pq\">Priority-Queues</a></h4>\n-\n-     <ol>\n-      <li><a href=\n-      \"priority_queue_tag.html\"><tt>priority_queue_tag</tt></a> - base\n-      class for priority-queue data structure tags</li>\n-\n-      <li><a href=\n-      \"pairing_heap_tag.html\"><tt>pairing_heap_tag</tt></a> -\n-      pairing-heap structure tag.</li>\n-\n-      <li><a href=\n-      \"binomial_heap_tag.html\"><tt>binomial_heap_tag</tt></a>\n-      - binomial-heap structure tag</li>\n-\n-      <li><a href=\n-      \"rc_binomial_heap_tag.html\"><tt>rc_binomial_heap_tag</tt></a>\n-      - redundant-counter binomial-heap (<i>i.e.</i>, a heap where\n-      binomial trees form a sequence that is similar to a\n-      de-amortized bit-addition algorithm) structure tag</li>\n-\n-      <li><a href=\n-      \"binary_heap_tag.html\"><tt>binary_heap_tag</tt></a> -\n-      binary heap (based on an array or an array of nodes)\n-      structure tag</li>\n-\n-      <li><a href=\n-      \"thin_heap_tag.html\"><tt>thin_heap_tag</tt></a> - thin\n-      heap (an alternative [<a href=\n-      \"references.html#kt99fat_heaps\">kt99fat_heaps</a>] to\n-      Fibonacci heap) data structure tag.</li>\n-    </ol>\n-\n-    <h3><a name=\"ds_inv_tag\" id=\"ds_inv_tag\">Invalidation-Guarantee\n-    Tags</a></h3>\n-\n-    <ol>\n-      <li><a href=\n-      \"basic_invalidation_guarantee.html\"><tt>basic_invalidation_guarantee</tt></a>\n-      - weakest invalidation guarantee</li>\n-\n-      <li><a href=\n-      \"point_invalidation_guarantee.html\"><tt>point_invalidation_guarantee</tt></a>\n-      - stronger invalidation guarantee</li>\n-\n-      <li><a href=\n-      \"range_invalidation_guarantee.html\"><tt>range_invalidation_guarantee</tt></a>\n-      - strongest invalidation guarantee</li>\n-    </ol>\n-\n-    <h3><a name=\"container_traits\" id=\"container_traits\">Container\n-    Traits</a></h3>\n-\n-    <ol>\n-      <li><a href=\"pq_container_traits.html\"><tt>container_traits</tt></a> -\n-      traits for determining underlying data structure \n-      properties</li>\n-    </ol>\n-    <hr />\n-\n-    <h2><a name=\"ds_policy_classes\" id=\n-    \"ds_policy_classes\">Container Policy Classes</a></h2>\n-\n-    <h3><a name=\"hash_related_policies\" id=\n-    \"hash_related_policies\">Hash Policies</a></h3>\n-\n-    <h4>Hash and Probe Policies</h4>\n-\n-    <ol>\n-      <li>Hash Functions:\n-\n-        <ol>\n-          <li><a href=\"null_hash_fn.html\"><tt>null_hash_fn</tt></a>\n-          - type indicating one-step range-hashing</li>\n-        </ol>\n-      </li>\n-\n-      <li>Range-Hashing Functions:\n-\n-        <ol>\n-          <li><a href=\"sample_range_hashing.html\">Sample\n-          range-hashing function</a> - interface required of a\n-          range-hashing functor</li>\n-\n-          <li><a href=\n-          \"direct_mask_range_hashing.html\"><tt>direct_mask_range_hashing</tt></a>\n-          - (bit) mask-based range hashing functor</li>\n-\n-          <li><a href=\n-          \"direct_mod_range_hashing.html\"><tt>direct_mod_range_hashing</tt></a>\n-          - modulo-based range hashing functor</li>\n-        </ol>\n-      </li>\n-\n-      <li>Probe Functions:\n-\n-        <ol>\n-          <li><a href=\"sample_probe_fn.html\">Sample probe\n-          function</a> - interface required of a probe functor</li>\n-\n-          <li><a href=\n-          \"null_probe_fn.html\"><tt>null_probe_fn</tt></a> - type\n-          indicating one-step ranged-probe</li>\n-\n-          <li><a href=\n-          \"linear_probe_fn.html\"><tt>linear_probe_fn</tt></a> -\n-          linear-probe functor</li>\n-\n-          <li><a href=\n-          \"quadratic_probe_fn.html\"><tt>quadratic_probe_fn</tt></a>-\n-          quadratic-probe functor</li>\n-        </ol>\n-      </li>\n-\n-      <li>Ranged-Hash Functions:\n-\n-        <ol>\n-          <li><a href=\"sample_ranged_hash_fn.html\">Sample\n-          ranged-hash function</a> - interface required of a\n-          ranged-hash functor</li>\n-        </ol>\n-      </li>\n-\n-      <li>Ranged-Probe Functions:\n-\n-        <ol>\n-          <li><a href=\"sample_ranged_probe_fn.html\">Sample\n-          ranged-probe function</a> - interface required of a\n-          ranged-probe functor</li>\n-        </ol>\n-      </li>\n-    </ol>\n-\n-    <h4>Resize Policies</h4>\n-    <ol>\n-      <li>Resize Policies:\n-\n-        <ol>\n-          <li><a href=\"sample_resize_policy.html\">Sample resize\n-          policy</a> - interface required of a resize policy</li>\n-\n-          <li><a href=\n-          \"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n-          - standard resize policy</li>\n-        </ol>\n-      </li>\n-\n-      <li>Size Policies:\n-\n-        <ol>\n-          <li><a href=\"sample_size_policy.html\">Sample size\n-          policy</a> - interface required of a size policy</li>\n-\n-          <li><a href=\n-          \"hash_exponential_size_policy.html\"><tt>hash_exponential_size_policy</tt></a>\n-          - exponential size policy (typically used with (bit) mask\n-          range-hashing)</li>\n-\n-          <li><a href=\n-          \"hash_prime_size_policy.html\"><tt>hash_prime_size_policy</tt></a>\n-          - prime size policy (typically used with modulo\n-          range-hashing)</li>\n-        </ol>\n-      </li>\n-\n-      <li>Trigger Policies:\n-\n-        <ol>\n-          <li><a href=\"sample_resize_trigger.html\">Sample trigger\n-          policy</a> - interface required of a trigger policy</li>\n-\n-          <li><a href=\n-          \"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n-          - trigger policy based on load checks</li>\n-\n-          <li><a href=\n-          \"cc_hash_max_collision_check_resize_trigger.html\"><tt>cc_hash_max_collision_check_resize_trigger</tt></a>\n-          - trigger policy based on collision checks</li>\n-        </ol>\n-      </li>\n-    </ol>\n-\n-    <h3><a name=\"tree_related_policies\" id=\n-    \"tree_related_policies\">Tree Policies</a></h3>\n-\n-    <h4>Tree Node-Update Policies</h4>\n-\n-\n-<ol>\n-<li><a href=\"sample_tree_node_update.html\">Sample node\n-updater policy</a> - interface required of a tree\n-node-updating functor</li>\n-\n-<li><a href=\n-     \"null_tree_node_update.html\"><tt>null_tree_node_update</tt></a>\n-- null policy indicating no updates are required</li>\n-\n-<li><a href=\n-     \"tree_order_statistics_node_update.html\"><tt>tree_order_statistics_node_update</tt></a>\n-- updater enabling order statistics queries</li>\n-</ol>\n-\n-<h3><a name=\"trie_related_policies\" id=\n-     \"trie_related_policies\">Trie Policies</a></h3>\n-\n-\n-<h4>Trie Element-Access Traits</h4>\n-\n-    <ol>\n-      <li><a href=\"sample_trie_e_access_traits.html\">Sample\n-      element-access traits</a> - interface required of\n-      element-access traits</li>\n-\n-      <li><a href=\n-      \"string_trie_e_access_traits.html\"><tt>string_trie_e_access_traits</tt></a>\n-      - String element-access traits</li>\n-    </ol>\n-\n-    <h4>Trie Node-Update Policies</h4>\n-\n-\n-<ol>\n-<li><a href=\"sample_trie_node_update.html\">Sample node\n-updater policy</a> - interface required of a trie node\n-updater</li>\n-\n-<li><a href=\n-     \"null_trie_node_update.html\"><tt>null_trie_node_update</tt></a>\n-- null policy indicating no updates are required</li>\n-\n-<li><a href=\n-     \"trie_prefix_search_node_update.html\"><tt>trie_prefix_search_node_update</tt></a>\n-- updater enabling prefix searches</li>\n-\n-<li><a href=\n-     \"trie_order_statistics_node_update.html\"><tt>trie_order_statistics_node_update</tt></a>\n-- updater enabling order statistics queries</li>\n-</ol>\n-\n-<h3><a name=\"list_related_policies\" id=\n-     \"list_related_policies\">List Policies</a></h3>\n-\n-<h4>List Update Policies</h4>\n-\n-\n-    <ol>\n-      <li><a href=\"sample_update_policy.html\">Sample list update\n-      policy</a> - interface required of a list update policy</li>\n-\n-      <li><a href=\n-      \"move_to_front_lu_policy.html\"><tt>move_to_front_lu_policy</tt></a>\n-      - move-to-front update algorithm</li>\n-\n-      <li><a href=\n-      \"counter_lu_policy.html\"><tt>counter_lu_policy</tt></a> -\n-      counter update algorithm</li>\n-    </ol>\n-\n-    <h3><a name=\"ds_pol\" id=\"ds_pol\">Mapped-Type Policies</a></h3>\n-\n-\n-    <ol>\n-      <li><a href=\n-      \"null_mapped_type.html\"><tt>null_mapped_type</tt></a> - data\n-      policy indicating that a container is a \"set\"</li>\n-    </ol>\n-    <hr />\n-\n-    <h2><a name=\"exceptions\" id=\"exceptions\">Exceptions</a></h2>\n-\n-\n-    <ol>\n-      <li><a href=\"exceptions.html\"><tt>container_error</tt></a>\n-      - base class for all policy-based data structure errors</li>\n-\n-      <li><a href=\n-      \"insert_error.html\"><tt>insert_error</tt></a></li>\n-\n-      <li><a href=\"join_error.html\"><tt>join_error</tt></a></li>\n-\n-      <li><a href=\n-      \"resize_error.html\"><tt>resize_error</tt></a></li>\n-    </ol>\n-\n-  </div>\n-</body>\n-</html>"}, {"sha": "b3ccbd76aee49f79262c3bbd838df56c97b948fb", "filename": "libstdc++-v3/doc/html/ext/pb_ds/introduction.html", "status": "removed", "additions": 0, "deletions": 120, "changes": 120, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fintroduction.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fintroduction.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fintroduction.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7", "patch": "@@ -1,120 +0,0 @@\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\"\n-    \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n-\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n-<head>\n-  <meta name=\"generator\" content=\n-  \"HTML Tidy for Linux/x86 (vers 12 April 2005), see www.w3.org\" />\n-\n-  <title>Introduction</title>\n-  <meta http-equiv=\"Content-Type\" content=\n-  \"text/html; charset=us-ascii\" />\n-  </head>\n-\n-<body>\n-  <div id=\"page\">\n-    <h1>Introduction</h1>\n-\n-    <p>This section describes what problems the library attempts to\n-    solve. <a href=\"motivation.html\">Motivation</a> describes the\n-    reasons we think it solves these problems better than similar\n-    libraries.</p>\n-\n-    <h2><a name=\"assoc\" id=\"assoc\">Associative Containers</a></h2>\n-\n-    <ol>\n-      <li>Associative containers depend on their policies to a very\n-      large extent. Implicitly hard-wiring policies can hamper their\n-      performance and limit their functionality. An efficient\n-      hash-based container, for example, requires policies for\n-      testing key equivalence, hashing keys, translating hash\n-      values into positions within the hash table, and determining\n-      when and how to resize the table internally. A tree-based\n-      container can efficiently support order statistics,\n-      <i>i.e.</i>, the ability to query what is the order of each\n-      key within the sequence of keys in the container, but only if\n-      the container is supplied with a policy to internally update\n-      meta-data. There are many other such examples.<p></p></li>\n-\n-      <li>Ideally, all associative containers would share the same\n-      interface. Unfortunately, underlying data structures and\n-      mapping semantics differentiate between different containers.\n-      For example, suppose one writes a generic function\n-      manipulating an associative container <tt>Cntnr</tt>:\n-        <pre>\n-template&lt;typename Cntnr&gt;\n-  void\n-  some_op_sequence(Cntnr&amp; r_cnt)\n-  {\n-    ...\n-  }\n-</pre>\n-\n-then what can one assume about <tt>Cntnr</tt>? The answer\n-varies according to its underlying data structure. If the\n-underlying data structure of <tt>Cntnr</tt> is based on a tree or\n-trie, then the order of elements is well defined; otherwise, it is\n-not, in general. If the underlying data structure of <tt>Cntnr</tt>\n-is based on a collision-chaining hash table, then modifying\n-r_<tt>Cntnr</tt> will not invalidate its iterators' order; if the\n-underlying data structure is a probing hash table, then this is not\n-the case. If the underlying data structure is based on a tree or\n-trie, then <tt>r_cnt</tt> can efficiently be split; otherwise, it\n-cannot, in general. If the underlying data structure is a red-black\n-tree, then splitting <tt>r_cnt</tt> is exception-free; if it is an\n-ordered-vector tree, exceptions can be thrown.\n-      <p></p></li>\n-    </ol>\n-\n-    <h2><a name=\"pq\" id=\"pq\">Priority Queues</a></h2>\n-\n-    <p>Priority queues are useful when one needs to efficiently\n-    access a minimum (or maximum) value as the set of values\n-    changes.</p>\n-\n-    <ol>\n-      <li>Most useful data structures for priority queues have a\n-      relatively simple structure, as they are geared toward\n-      relatively simple requirements. Unfortunately, these structures\n-      do not support access to an arbitrary value, which turns out to\n-      be necessary in many algorithms. Say, decreasing an arbitrary\n-      value in a graph algorithm. Therefore, some extra mechanism is\n-      necessary and must be invented for accessing arbitrary\n-      values. There are at least two alternatives: embedding an\n-      associative container in a priority queue, or allowing\n-      cross-referencing through iterators. The first solution adds\n-      significant overhead; the second solution requires a precise\n-      definition of iterator invalidation. Which is the next\n-      point...<p></p></li>\n-\n-      <li>Priority queues, like hash-based containers, store values in\n-      an order that is meaningless and undefined externally.  For\n-      example, a <tt>push</tt> operation can internally reorganize the\n-      values. Because of this characteristic, describing a priority\n-      queues' iterator is difficult: on one hand, the values to which\n-      iterators point can remain valid, but on the other, the logical\n-      order of iterators can change unpredictably.<p></p></li>\n-\n-      <li>Roughly speaking, any element that is both inserted to a\n-      priority queue (<i>e.g.</i>, through <tt>push</tt>) and removed\n-      from it (<i>e.g.</i>, through <tt>pop</tt>), incurs a\n-      logarithmic overhead (in the amortized sense). Different\n-      underlying data structures place the actual cost differently:\n-      some are optimized for amortized complexity, whereas others\n-      guarantee that specific operations only have a constant\n-      cost. One underlying data structure might be chosen if modifying\n-      a value is frequent (Dijkstra's shortest-path algorithm),\n-      whereas a different one might be chosen\n-      otherwise. Unfortunately, an array-based binary heap - an\n-      underlying data structure that optimizes (in the amortized\n-      sense) <tt>push</tt> and <tt>pop</tt> operations, differs from\n-      the others in terms of its invalidation guarantees. Other design\n-      decisions also impact the cost and placement of the overhead, at\n-      the expense of more difference in the the kinds of operations\n-      that the underlying data structure can support. These\n-      differences pose a challenge when creating a uniform interface\n-      for priority queues.<p></p></li>\n-    </ol>\n-  </div>\n-</body>\n-</html>"}, {"sha": "1f9d1243c6a3f44738f275d382f3db7fa6348a67", "filename": "libstdc++-v3/doc/html/ext/pb_ds/invalidation_guarantee_cd.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Finvalidation_guarantee_cd.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Finvalidation_guarantee_cd.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Finvalidation_guarantee_cd.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "f3e3eaf979f2a98cd88dd899aeb9ded120b860dd", "filename": "libstdc++-v3/doc/html/ext/pb_ds/join_error.html", "status": "removed", "additions": 0, "deletions": 48, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fjoin_error.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fjoin_error.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fjoin_error.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7", "patch": "@@ -1,48 +0,0 @@\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n- \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n-<head>\n-<meta name=\"generator\" content=\n- \"HTML Tidy for Linux/x86 (vers 12 April 2005), see www.w3.org\" />\n-\n-<title>join_error Interface</title>\n-<meta http-equiv=\"Content-Type\" content=\n- \"text/html; charset=us-ascii\" />\n-</head>\n-\n-<body>\n-<div id=\"page\">\n-<h1><tt>join_error</tt> Interface</h1>\n-\n-<p>A join cannot be performed logical reasons (i.e., the ranges of the\n-\t\t\t\t\t       two container objects\n-\t\t\t\t\t       being joined\n-\t\t\t\t\t       overlaps.</p>\n-\n-\t\t\t\t\t       <p>Defined in: <a href=\n-\t\t\t\t\t       \"http://gcc.gnu.org/viewcvs/*checkout*/trunk/libstdc%2B%2B-v3/include/ext/pb_ds/exception.hpp\"><tt>exception.hpp</tt></a></p>\n-\n-\t\t\t\t\t       <h2><a name=\"link1\" id=\"link1\">Base Classes</a></h2>\n-\n-\t\t\t\t\t       <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Bases\">\n-\t\t\t\t\t       <tr>\n-\t\t\t\t\t       <td width=\"80%\" align=\"left\"><b>Class</b></td>\n-\n-\t\t\t\t\t       <td width=\"20%\" align=\"left\"><b>Derivation Type</b></td>\n-\t\t\t\t\t       </tr>\n-\n-\t\t\t\t\t       <tr>\n-\t\t\t\t\t       <td>\n-<pre><a href=\"exceptions.html\"><span class=\"c2\"><tt>join_error</tt></span></a>\n-</pre>\n- </td>\n-\n-<td>\n-<p>public</p>\n-</td>\n-</tr>\n-\t\t\t\t\t       </table>\n-\t\t\t\t\t       </div>\n-\t\t\t\t\t       </body>\n-\t\t\t\t\t       </html>"}, {"sha": "6387d3a337ef0ec1688d62fdbe03e95d28a36946", "filename": "libstdc++-v3/doc/html/ext/pb_ds/linear_probe_fn.html", "status": "removed", "additions": 0, "deletions": 140, "changes": 140, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Flinear_probe_fn.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Flinear_probe_fn.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Flinear_probe_fn.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7", "patch": "@@ -1,140 +0,0 @@\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n-    \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n-<head>\n-  <meta name=\"generator\" content=\n-  \"HTML Tidy for Linux/x86 (vers 12 April 2005), see www.w3.org\" />\n-\n-  <title>linear_probe_fn Interface</title>\n-  <meta http-equiv=\"Content-Type\" content=\n-  \"text/html; charset=us-ascii\" />\n-  </head>\n-\n-<body>\n-  <div id=\"page\">\n-    <h1><tt>linear_probe_fn</tt> Interface</h1>\n-\n-    <p>A probe sequence policy using fixed increments.</p>\n-\n-    <p>Defined in: <a href=\n-    \"http://gcc.gnu.org/viewcvs/*checkout*/trunk/libstdc%2B%2B-v3/include/ext/pb_ds/hash_policy.hpp\"><tt>hash_policy.hpp</tt></a></p>\n-\n-    <h2><a name=\"link1\" id=\"link1\">Template Parameters</a></h2>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\n-    \"Template Parameters\">\n-      <tr>\n-        <td width=\"20%\" align=\"left\"><b>Parameter</b></td>\n-\n-        <td width=\"50%\" align=\"left\"><b>Description</b></td>\n-\n-        <td width=\"30%\" align=\"left\"><b>Default Value</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"Size_Type42920436\" id=\n-\"Size_Type42920436\"><b>typename</b> Size_Type </a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Size type.</p>\n-        </td>\n-\n-        <td>size_t</td>\n-      </tr>\n-    </table>\n-\n-    <h2><a name=\"link2\" id=\"link2\">Public Types and\n-    Constants</a></h2>\n-\n-    <h3><a name=\"link3\" id=\"link3\">General Definitions</a></h3>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Types\">\n-      <tr>\n-        <td width=\"30%\" align=\"left\"><b>Type</b></td>\n-\n-        <td width=\"55%\" align=\"left\"><b>Definition</b></td>\n-\n-        <td width=\"15%\" align=\"left\"><b>Description</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"size_type55424436\" id=\"size_type55424436\">size_type</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <pre>\n-<a href=\"#Size_Type42920436\"><tt>Size_Type</tt></a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Size type.</p>\n-        </td>\n-      </tr>\n-    </table>\n-\n-    <h2><a name=\"link4\" id=\"link4\">Public Methods</a></h2>\n-\n-    <h3><a name=\"link5\" id=\"link5\">Constructors, Destructor, and\n-    Related</a></h3>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Methods\">\n-      <tr>\n-        <td width=\"45%\" align=\"left\"><b>Method</b></td>\n-\n-        <td width=\"55%\" align=\"left\"><b>Description</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>void</b>\n-  swap\n-  (<span class=\"c2\"><tt>linear_probe_fn</tt></span> &amp;other)\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Swaps content.</p>\n-        </td>\n-      </tr>\n-    </table>\n-\n-    <h2><a name=\"link6\" id=\"link6\">Protected Methods</a></h2>\n-\n-    <h3><a name=\"link7\" id=\"link7\">Offset Methods</a></h3>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Methods\">\n-      <tr>\n-        <td width=\"45%\" align=\"left\"><b>Method</b></td>\n-\n-        <td width=\"55%\" align=\"left\"><b>Description</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>inline</b> <a href=\"#size_type55424436\"><tt>size_type</tt></a>\n-  <b>operator</b>()\n-  (<a href=\n-\"#size_type55424436\"><tt>size_type</tt></a> i) <b>const</b>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Returns the <span class=\"c1\"><tt>i</tt></span>-th\n-          offset from the hash value.</p>\n-        </td>\n-      </tr>\n-    </table>\n-  </div>\n-</body>\n-</html>"}, {"sha": "434e82f42fc849df2d81b03c0577a19a76eb0268", "filename": "libstdc++-v3/doc/html/ext/pb_ds/list_update.html", "status": "removed", "additions": 0, "deletions": 316, "changes": 316, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Flist_update.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Flist_update.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Flist_update.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7", "patch": "@@ -1,316 +0,0 @@\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n-    \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n-<head>\n-  <meta name=\"generator\" content=\n-  \"HTML Tidy for Linux/x86 (vers 12 April 2005), see www.w3.org\" />\n-\n-  <title>list_update Interface</title>\n-  <meta http-equiv=\"Content-Type\" content=\n-  \"text/html; charset=us-ascii\" />\n-  </head>\n-\n-<body>\n-  <div id=\"page\">\n-    <h1><tt>list_update</tt> Interface</h1>\n-\n-    <p>A list-update based associative container.</p>\n-\n-    <p>Defined in: <a href=\n-    \"http://gcc.gnu.org/viewcvs/*checkout*/trunk/libstdc%2B%2B-v3/include/ext/pb_ds/assoc_container.hpp\"><tt>assoc_container.hpp</tt></a></p>\n-\n-    <h2><a name=\"link1\" id=\"link1\">Template Parameters</a></h2>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\n-    \"Template Parameters\">\n-      <tr>\n-        <td width=\"20%\" align=\"left\"><b>Parameter</b></td>\n-\n-        <td width=\"50%\" align=\"left\"><b>Description</b></td>\n-\n-        <td width=\"30%\" align=\"left\"><b>Default Value</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"Key2501\" id=\"Key2501\"><b>typename</b> Key</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Key type.</p>\n-        </td>\n-\n-        <td>-</td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"Mapped318655\" id=\"Mapped318655\"><b>typename</b> Mapped</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Mapped type.</p>\n-        </td>\n-\n-        <td>-</td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"Eq_Fn60085\" id=\"Eq_Fn60085\"><b>class</b> Eq_Fn </a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Equivalence functor.</p>\n-        </td>\n-\n-        <td>\n-          <pre>\n-std::equal_to&lt;<a href=\"#Key2501\"><tt>Key</tt></a>&gt;\n-</pre>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"Update_Policy1671938590\" id=\n-\"Update_Policy1671938590\"><b>class</b> Update_Policy </a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Update policy (determines when an element will be\n-          moved to the front of the list.</p>\n-        </td>\n-\n-        <td><a href=\"move_to_front_lu_policy.html\"><span class=\n-        \"c2\"><tt>move_to_front_lu_policy</tt></span></a></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"Allocator35940069\" id=\n-\"Allocator35940069\"><b>class</b> Allocator </a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Allocator type.</p>\n-        </td>\n-\n-        <td>\n-          <pre>\n-std::allocator&lt;<b>char</b>&gt;\n-</pre>\n-        </td>\n-      </tr>\n-    </table>\n-\n-    <h2><a name=\"link2\" id=\"link2\">Base Classes</a></h2>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Bases\">\n-      <tr>\n-        <td width=\"80%\" align=\"left\"><b>Class</b></td>\n-\n-        <td width=\"20%\" align=\"left\"><b>Derivation Type</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a href=\"container_base.html\"><span class=\n-\"c2\"><tt>container_base</tt></span></a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>public</p>\n-        </td>\n-      </tr>\n-    </table>\n-\n-    <h2><a name=\"link3\" id=\"link3\">Public Types and\n-    Constants</a></h2>\n-\n-    <h3><a name=\"link4\" id=\"link4\">Policy definitions.</a></h3>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Types\">\n-      <tr>\n-        <td width=\"30%\" align=\"left\"><b>Type</b></td>\n-\n-        <td width=\"55%\" align=\"left\"><b>Definition</b></td>\n-\n-        <td width=\"15%\" align=\"left\"><b>Description</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"eq_fn80245\" id=\"eq_fn80245\">eq_fn</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <pre>\n-<a href=\"#Eq_Fn60085\"><tt>Eq_Fn</tt></a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Equivalence functor type.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"update_policy894603998\" id=\n-\"update_policy894603998\">update_policy</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <pre>\n-<a href=\"#Update_Policy1671938590\"><tt>Update_Policy</tt></a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>List update policy type.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"allocator48440069\" id=\"allocator48440069\">allocator</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <pre>\n-<a href=\"#Allocator35940069\"><tt>Allocator</tt></a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p><a href=\"#Allocator35940069\"><tt>Allocator</tt></a>\n-          type.</p>\n-        </td>\n-      </tr>\n-    </table>\n-\n-    <h2><a name=\"link5\" id=\"link5\">Public Methods</a></h2>\n-\n-    <h3><a name=\"link6\" id=\"link6\">Constructors, Destructor, and\n-    Related</a></h3>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Methods\">\n-      <tr>\n-        <td width=\"45%\" align=\"left\"><b>Method</b></td>\n-\n-        <td width=\"55%\" align=\"left\"><b>Description</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-  list_update\n-  ()\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Default constructor.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>template</b>&lt;\n-    <b>class</b> It&gt;\n-  list_update\n-  (It first_it, \n-    It last_it)\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Constructor taking iterators to a range of\n-          value_types. The value_types between <span class=\n-          \"c1\"><tt>first_it</tt></span> and <span class=\n-          \"c1\"><tt>last_it</tt></span> will be inserted into the\n-          container object.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-  list_update\n-  (<b>const</b> <span class=\n-\"c2\"><tt>list_update</tt></span> &amp;other)\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Copy constructor.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>virtual</b> \n-  ~list_update\n-  ()\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Destructor.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<span class=\"c2\"><tt>list_update</tt></span> &amp;\n-  <b>operator</b>=\n-  (<b>const</b> <span class=\n-\"c2\"><tt>list_update</tt></span> &amp;other)\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Assignment operator.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>void</b>\n-  swap\n-  (<span class=\"c2\"><tt>list_update</tt></span> &amp;other)\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Swaps content.</p>\n-        </td>\n-      </tr>\n-    </table>\n-  </div>\n-</body>\n-</html>"}, {"sha": "f04aaeacbd102f3cba3ab2b2e721b036ffc6f789", "filename": "libstdc++-v3/doc/html/ext/pb_ds/list_update_tag.html", "status": "removed", "additions": 0, "deletions": 47, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Flist_update_tag.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Flist_update_tag.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Flist_update_tag.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7", "patch": "@@ -1,47 +0,0 @@\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n-    \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n-<head>\n-  <meta name=\"generator\" content=\n-  \"HTML Tidy for Linux/x86 (vers 12 April 2005), see www.w3.org\" />\n-\n-  <title>list_update_tag Interface</title>\n-  <meta http-equiv=\"Content-Type\" content=\n-  \"text/html; charset=us-ascii\" />\n-  </head>\n-\n-<body>\n-  <div id=\"page\">\n-    <h1><tt>list_update_tag</tt> Interface</h1>\n-\n-    <p>List-update data structure tag.</p>\n-\n-    <p>Defined in: <a href=\n-    \"http://gcc.gnu.org/viewcvs/*checkout*/trunk/libstdc%2B%2B-v3/include/ext/pb_ds/tag_and_trait.hpp\"><tt>tag_and_trait.hpp</tt></a></p>\n-\n-    <h2><a name=\"link1\" id=\"link1\">Base Classes</a></h2>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Bases\">\n-      <tr>\n-        <td width=\"80%\" align=\"left\"><b>Class</b></td>\n-\n-        <td width=\"20%\" align=\"left\"><b>Derivation Type</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a href=\"associative_container_tag.html\"><span class=\n-\"c2\"><tt>associative_container_tag</tt></span></a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>public</p>\n-        </td>\n-      </tr>\n-    </table>\n-  </div>\n-</body>\n-</html>"}, {"sha": "c8693437d9e39516abd884650726fe0a81d00f09", "filename": "libstdc++-v3/doc/html/ext/pb_ds/lu_based_containers.html", "status": "removed", "additions": 0, "deletions": 229, "changes": 229, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Flu_based_containers.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Flu_based_containers.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Flu_based_containers.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7", "patch": "@@ -1,229 +0,0 @@\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\"\n-    \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n-\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n-<head>\n-  <meta name=\"generator\" content=\n-  \"HTML Tidy for Linux/x86 (vers 12 April 2005), see www.w3.org\" />\n-\n-  <title>List-Based Containers</title>\n-  <meta http-equiv=\"Content-Type\" content=\n-  \"text/html; charset=us-ascii\" />\n-  </head>\n-\n-<body>\n-  <div id=\"page\">\n-    <h1>List-Update Design</h1>\n-\n-    <h2><a name=\"overview\" id=\"overview\">Overview</a></h2>\n-\n-    <p>The list-based container has the following declaration:</p>\n-    <pre>\n-<b>template</b>&lt;\n-    <b>typename</b> Key,\n-    <b>typename</b> Mapped,\n-    <b>typename</b> Eq_Fn = std::equal_to&lt;Key&gt;,\n-    <b>typename</b> Update_Policy = <a href=\n-\"move_to_front_lu_policy.html\">move_to_front_lu_policy&lt;&gt;</a>,\n-    <b>typename</b> Allocator = std::allocator&lt;<b>char</b>&gt; &gt;\n-<b>class</b> <a href=\"list_update.html\">list_update</a>;\n-</pre>\n-\n-    <p>The parameters have the following meaning:</p>\n-\n-    <ol>\n-      <li><tt>Key</tt> is the key type.</li>\n-\n-      <li><tt>Mapped</tt> is the mapped-policy, and is explained in\n-      <a href=\"tutorial.html#assoc_ms\">Tutorial::Associative\n-      Containers::Associative Containers Others than Maps</a>.</li>\n-\n-      <li><tt>Eq_Fn</tt> is a key equivalence functor.</li>\n-\n-      <li><tt>Update_Policy</tt> is a policy updating positions in\n-      the list based on access patterns. It is described in the\n-      following subsection.</li>\n-\n-      <li><tt>Allocator</tt> is an allocator\n-      type.</li>\n-    </ol>\n-\n-    <p>A list-based associative container is a container that\n-    stores elements in a linked-list. It does not order the\n-    elements by any particular order related to the keys.\n-    List-based containers are primarily useful for creating\n-    \"multimaps\" (see <a href=\n-    \"motivation.html#assoc_mapping_semantics\">Motivation::Associative\n-    Containers::Avoiding Multiple Keys</a> and <a href=\n-    \"tutorial.html#assoc_ms\">Tutorial::Associative\n-    Containers::Associative Containers Others than Maps</a>). In\n-    fact, list-based containers are designed in <tt>pb_ds</tt>\n-    expressly for this purpose. This is explained further in\n-    <a href=\"#mmaps\">Use for \"Multimaps\"</a>.</p>\n-\n-    <p>List-based containers might also be useful for some rare\n-    cases, where a key is encapsulated to the extent that only\n-    key-equivalence can be tested. Hash-based containers need to\n-    know how to transform a key into a size type, and tree-based\n-    containers need to know if some key is larger than another.\n-    List-based associative containers, conversely, only need to\n-    know if two keys are equivalent.</p>\n-\n-    <p>Since a list-based associative container does not order\n-    elements by keys, is it possible to order the list in some\n-    useful manner? Remarkably, many on-line competitive [<a href=\n-    \"references.html#motwani95random\">motwani95random</a>]\n-    algorithms exist for reordering lists to reflect access\n-    prediction [<a href=\n-    \"references.html#andrew04mtf\">andrew04mtf</a>].</p>\n-\n-    <h2><a name=\"list_updates\" id=\"list_updates\">List\n-    Updates</a></h2>\n-\n-    <h3><a name=\"general\" id=\"general\">General Terms</a></h3>\n-\n-    <p>Figure <a href=\"#simple_list\">A simple list</a> shows a\n-    simple list of integer keys. If we search for the integer 6, we\n-    are paying an overhead: the link with key 6 is only the fifth\n-    link; if it were the first link, it could be accessed\n-    faster.</p>\n-\n-    <h6 class=\"c1\"><a name=\"simple_list\" id=\"simple_list\"><img src=\n-    \"simple_list.png\" alt=\"no image\" /></a></h6>\n-\n-    <h6 class=\"c1\">A simple list.</h6>\n-\n-    <p>List-update algorithms reorder lists as elements are\n-    accessed. They try to determine, by the access history, which\n-    keys to move to the front of the list. Some of these algorithms\n-    require adding some metadata alongside each entry.</p>\n-\n-    <p>For example, Figure <a href=\"#lu\">The counter algorithm</a>\n-    -A shows the counter algorithm. Each node contains both a key\n-    and a count metadata (shown in bold). When an element is\n-    accessed (<i>e.g.</i> 6) its count is incremented, as shown in\n-    Figure <a href=\"#lu\">The counter algorithm</a> -B. If the count\n-    reaches some predetermined value, say 10, as shown in Figure\n-    <a href=\"#lu\">The counter algorithm</a> -C, the count is set to\n-    0 and the node is moved to the front of the list, as in Figure\n-    <a href=\"#lu\">The counter algorithm</a> -D.</p>\n-\n-    <h6 class=\"c1\"><a name=\"lu\" id=\"lu\"><img src=\"lu.png\" alt=\n-    \"no image\" /></a></h6>\n-\n-    <h6 class=\"c1\">The counter algorithm.</h6>\n-\n-    <h3><a name=\"imp_pb_ds\" id=\"imp_pb_ds\">Implementation</a></h3>\n-\n-    <p><tt>pb_ds</tt> allows instantiating lists with policies\n-    implementing any algorithm moving nodes to the front of the\n-    list (policies implementing algorithms interchanging nodes are\n-    unsupported).</p>\n-\n-    <p>Associative containers based on lists are parametrized by a\n-    <tt>Update_Policy</tt> parameter. This parameter defines the\n-    type of metadata each node contains, how to create the\n-    metadata, and how to decide, using this metadata, whether to\n-    move a node to the front of the list. A list-based associative\n-    container object derives (publicly) from its update policy.\n-    Figure <a href=\"#update_policy_cd\">A list and its update\n-    policy</a> shows the scheme, as well as some predefined\n-    policies (which are explained below).</p>\n-\n-    <h6 class=\"c1\"><a name=\"update_policy_cd\" id=\n-    \"update_policy_cd\"><img src=\"update_policy_cd.png\" alt=\n-    \"no image\" /></a></h6>\n-\n-    <h6 class=\"c1\">A list and its update policy.</h6>\n-\n-    <p>An instantiation of <tt>Update_Policy</tt> must define\n-    internally <tt>update_metadata</tt> as the metadata it\n-    requires. Internally, each node of the list contains, besides\n-    the usual key and data, an instance of <tt><b>typename</b>\n-    Update_Policy::update_metadata</tt>.</p>\n-\n-    <p>An instantiation of <tt>Update_Policy</tt> must define\n-    internally two operators:</p>\n-    <pre>\n-update_metadata\n-<b>operator</b>()();\n-\n-<b>bool</b>\n-<b>operator</b>()(update_metadata &amp;);\n-</pre>\n-\n-    <p>The first is called by the container object, when creating a\n-    new node, to create the node's metadata. The second is called\n-    by the container object, when a node is accessed (<i>e.g.</i>,\n-    when a find operation's key is equivalent to the key of the\n-    node), to determine whether to move the node to the front of\n-    the list.</p>\n-\n-    <p>The library contains two predefined implementations of\n-    list-update policies [<a href=\n-    \"references.html#andrew04mtf\">andrew04mtf</a>]. The first is\n-    <a href=\n-    \"counter_lu_policy.html\"><tt>counter_lu_policy</tt></a>, which\n-    implements the counter algorithm described above. The second is\n-    <a href=\n-    \"move_to_front_lu_policy.html\"><tt>move_to_front_lu_policy</tt></a>,\n-    which unconditionally move an accessed element to the front of\n-    the list. The latter type is very useful in <tt>pb_ds</tt>,\n-    since there is no need to associate metadata with each element\n-    (this is explained further in <a href=\"#mmaps\">Use for\n-    \"Multimaps\"</a>).</p>\n-\n-    <h2><a name=\"mmaps\" id=\"mmaps\">Use for \"Multimaps\"</a></h2>\n-\n-    <p>In <tt>pb_ds</tt>, there are no equivalents for the STL's\n-    multimaps and multisets; instead one uses an associative\n-    container mapping primary keys to secondary keys (see <a href=\n-    \"motivation.html#assoc_mapping_semantics\">Motivation::Associative\n-    Containers::Alternative to Multiple Equivalent Keys</a> and\n-    <a href=\"tutorial.html#assoc_ms\">Tutorial::Associative\n-    Containers::Associative Containers Others than Maps</a>).</p>\n-\n-    <p>List-based containers are especially useful as associative\n-    containers for secondary keys. In fact, they are implemented\n-    here expressly for this purpose.</p>\n-\n-    <p>To begin with, these containers use very little per-entry\n-    structure memory overhead, since they can be implemented as\n-    singly-linked lists. (Arrays use even lower per-entry memory\n-    overhead, but they are less flexible in moving around entries,\n-    and have weaker invalidation guarantees).</p>\n-\n-    <p>More importantly, though, list-based containers use very\n-    little per-container memory overhead. The memory overhead of an\n-    empty list-based container is practically that of a pointer.\n-    This is important for when they are used as secondary\n-    associative-containers in situations where the average ratio of\n-    secondary keys to primary keys is low (or even 1).</p>\n-\n-    <p>In order to reduce the per-container memory overhead as much\n-    as possible, they are implemented as closely as possible to\n-    singly-linked lists.</p>\n-\n-    <ol>\n-      <li>List-based containers do not store internally the number\n-      of values that they hold. This means that their <tt>size</tt>\n-      method has linear complexity (just like <tt>std::list</tt>).\n-      Note that finding the number of equivalent-key values in an\n-      STL multimap also has linear complexity (because it must be\n-      done, <i>e.g.</i>, via <tt>std::distance</tt> of the\n-      multimap's <tt>equal_range</tt> method), but usually with\n-      higher constants.</li>\n-\n-      <li>Most associative-container objects each hold a policy\n-      object (<i>e.g.</i>, a hash-based container object holds a\n-      hash functor). List-based containers, conversely, only have\n-      class-wide policy objects.</li>\n-    </ol>\n-\n-    <p>See also <a href=\n-    \"assoc_performance_tests.html#msc\">Associative-Container\n-    Performance Tests::Observations::Mapping-Semantics\n-    Considerations</a>.</p>\n-  </div>\n-</body>\n-</html>"}, {"sha": "01029e13454b2422f838bad589ef0da416c69509", "filename": "libstdc++-v3/doc/html/ext/pb_ds/misc.html", "status": "removed", "additions": 0, "deletions": 26, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmisc.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmisc.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmisc.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7", "patch": "@@ -1,26 +0,0 @@\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\"\n-    \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n-\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n-<head>\n-  <meta name=\"generator\" content=\n-  \"HTML Tidy for Linux/x86 (vers 12 April 2005), see www.w3.org\" />\n-\n-  <title>Misc.</title>\n-  <meta http-equiv=\"Content-Type\" content=\n-  \"text/html; charset=us-ascii\" />\n-  </head>\n-\n-<body>\n-  <div id=\"page\">\n-    <h1>Misc.</h1>\n-\n-    <p><a href=\"acks.html\" title=\"Acknowledgements\">Acks</a>\n-    contains acknowledgments; <a href=\"contact.html\">Contact</a>\n-    contains contact information;<a href=\n-    \"disclaimer.html\">Disclaimer and Copyright</a> is a standard\n-    disclaimer, and <a href=\"references.html\">References</a>\n-    contains references.</p>\n-  </div>\n-</body>\n-</html>"}, {"sha": "627317217f085558797f465b46f27be8e69351f0", "filename": "libstdc++-v3/doc/html/ext/pb_ds/motivation.html", "status": "removed", "additions": 0, "deletions": 993, "changes": 993, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmotivation.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmotivation.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmotivation.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7", "patch": "@@ -1,993 +0,0 @@\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n-    \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n-<head>\n-  <meta name=\"generator\" content=\n-  \"HTML Tidy for Linux/x86 (vers 12 April 2005), see www.w3.org\" />\n-\n-  <title>Motivation</title>\n-  <meta http-equiv=\"Content-Type\" content=\n-  \"text/html; charset=us-ascii\" />\n-  </head>\n-\n-<body>\n-  <div id=\"page\">\n-    <h1>Motivation</h1>\n-\n-    <p>Many fine associative-container libraries were already\n-    written, most notably, the STL's associative containers. Why\n-    then write another library? This section shows some possible\n-    advantages of this library, when considering the challenges in\n-    <a href=\"introduction.html\">Introduction</a>. Many of these\n-    points stem from the fact that the STL introduced\n-    associative-containers in a two-step process (first\n-    standardizing tree-based containers, only then adding\n-    hash-based containers, which are fundamentally different), did\n-    not standardize priority queues as containers, and (in our\n-    opinion) overloads the iterator concept.</p>\n-\n-    <h2><a name=\"assoc\" id=\"assoc\">Associative Containers</a></h2>\n-\n-    <h3><a name=\"assoc_policies\" id=\"assoc_policies\">More\n-    Configuration Choices</a></h3>\n-\n-    <p>Associative containers require a relatively large number of\n-    policies to function efficiently in various settings. In some\n-    cases this is needed for making their common operations more\n-    efficient, and in other cases this allows them to support a\n-    larger set of operations</p>\n-\n-    <ol>\n-      <li>Hash-based containers, for example, support look-up and\n-      insertion methods (<i>e.g.</i>, <tt>find</tt> and\n-      <tt>insert</tt>). In order to locate elements quickly, they\n-      are supplied a hash functor, which instruct how to transform\n-      a key object into some size type; <i>e.g.</i>, a hash functor\n-      might transform <tt>\"hello\"</tt> into <tt>1123002298</tt>. A\n-      hash table, though, requires transforming each key object\n-      into some size-type type in some specific domain;\n-      <i>e.g.</i>, a hash table with a 128-long table might\n-      transform <tt>\"hello\"</tt> into position 63. The policy by\n-      which the hash value is transformed into a position within\n-      the table can dramatically affect performance (see <a href=\n-      \"hash_based_containers.html#hash_policies\">Design::Associative\n-      Containers::Hash-Based Containers::Hash Policies</a>).\n-      Hash-based containers also do not resize naturally (as\n-      opposed to tree-based containers, for example). The\n-      appropriate resize policy is unfortunately intertwined with\n-      the policy that transforms hash value into a position within\n-      the table (see <a href=\n-      \"hash_based_containers.html#resize_policies\">Design::Associative\n-      Containers::Hash-Based Containers::Resize Policies</a>).\n-\n-        <p><a href=\n-        \"assoc_performance_tests.html#hash_based\">Associative-Container\n-        Performance Tests::Hash-Based Containers</a> quantifies\n-        some of these points.</p>\n-      </li>\n-\n-      <li>Tree-based containers, for example, also support look-up\n-      and insertion methods, and are primarily useful when\n-      maintaining order between elements is important. In some\n-      cases, though, one can utilize their balancing algorithms for\n-      completely different purposes.\n-\n-        <p>Figure <a href=\"#node_invariants\">Metadata for\n-        order-statistics and interval intersections</a>-A, for\n-        example, shows a tree whose each node contains two entries:\n-        a floating-point key, and some size-type <i>metadata</i>\n-        (in bold beneath it) that is the number of nodes in the\n-        sub-tree. (<i>E.g.</i>, the root has key 0.99, and has 5\n-        nodes (including itself) in its sub-tree.) A container based\n-        on this data structure can obviously answer efficiently\n-        whether 0.3 is in the container object, but it can also\n-        answer what is the order of 0.3 among all those in the\n-        container object [<a href=\n-        \"references.html#clrs2001\">clrs2001</a>] (see <a href=\n-        \"assoc_examples.html#tree_like_based\">Associative Container\n-        Examples::Tree-Like-Based Containers (Trees and\n-        Tries)</a>).</p>\n-\n-        <p>As another example, Figure <a href=\n-        \"#node_invariants\">Metadata for order-statistics and\n-        interval intersections</a>-B shows a tree whose each node\n-        contains two entries: a half-open geometric line interval,\n-        and a number <i>metadata</i> (in bold beneath it) that is\n-        the largest endpoint of all intervals in its sub-tree.\n-        (<i>E.g.</i>, the root describes the interval <i>[20,\n-        36)</i>, and the largest endpoint in its sub-tree is 99.) A\n-        container based on this data structure can obviously answer\n-        efficiently whether <i>[3, 41)</i> is in the container\n-        object, but it can also answer efficiently whether the\n-        container object has intervals that intersect <i>[3,\n-        41)</i> (see <a href=\n-        \"assoc_examples.html#tree_like_based\">Associative Container\n-        Examples::Tree-Like-Based Containers (Trees and\n-        Tries)</a>). These types of queries are very useful in\n-        geometric algorithms and lease-management algorithms.</p>\n-\n-        <p>It is important to note, however, that as the trees are\n-        modified, their internal structure changes. To maintain\n-        these invariants, one must supply some policy that is aware\n-        of these changes (see <a href=\n-        \"tree_based_containers.html#invariants\">Design::Associative\n-        Containers::Tree-Based Containers::Node Invariants</a>);\n-        without this, it would be better to use a linked list (in\n-        itself very efficient for these purposes).</p>\n-\n-        <p><a href=\n-        \"assoc_performance_tests.html#tree_like_based\">Associative-Container\n-        Performance Tests::Tree-Like-Based Containers</a>\n-        quantifies some of these points.</p>\n-      </li>\n-    </ol>\n-\n-    <h6 class=\"c1\"><a name=\"node_invariants\" id=\n-    \"node_invariants\"><img src=\"node_invariants.png\" alt=\n-    \"no image\" /></a></h6>\n-\n-    <h6 class=\"c1\">Metadata for order-statistics and interval\n-    intersections.</h6>\n-\n-    <h3><a name=\"assoc_ds_genericity\" id=\"assoc_ds_genericity\">More\n-    Data Structures and Traits</a></h3>\n-\n-    <p>The STL contains associative containers based on red-black\n-    trees and collision-chaining hash tables. These are obviously\n-    very useful, but they are not ideal for all types of\n-    settings.</p>\n-\n-    <p>Figure <a href=\n-    \"#different_underlying_data_structures\">Different underlying\n-    data structures</a> shows different underlying data structures\n-    (the ones currently supported in <tt>pb_ds</tt>). A shows a\n-    collision-chaining hash-table, B shows a probing hash-table, C\n-    shows a red-black tree, D shows a splay tree, E shows a tree\n-    based on an ordered vector(implicit in the order of the\n-    elements), F shows a PATRICIA trie, and G shows a list-based\n-    container with update policies.</p>\n-\n-    <p>Each of these data structures has some performance benefits,\n-    in terms of speed, size or both (see <a href=\n-    \"assoc_performance_tests.html\">Associative-Container\n-    Performance Tests</a> and <a href=\n-    \"assoc_performance_tests.html#dss_family_choice\">Associative-Container\n-    Performance Tests::Observations::Underlying Data-Structure\n-    Families</a>). For now, though, note that <i>e.g.</i>,\n-    vector-based trees and probing hash tables manipulate memory\n-    more efficiently than red-black trees and collision-chaining\n-    hash tables, and that list-based associative containers are\n-    very useful for constructing \"multimaps\" (see <a href=\n-    \"#assoc_mapping_semantics\">Alternative to Multiple Equivalent\n-    Keys</a>, <a href=\n-    \"assoc_performance_tests.html#multimaps\">Associative Container\n-    Performance Tests::Multimaps</a>, and <a href=\n-    \"assoc_performance_tests.html#msc\">Associative Container\n-    Performance Tests::Observations::Mapping-Semantics\n-    Considerations</a>).</p>\n-\n-    <h6 class=\"c1\"><a name=\"different_underlying_data_structures\"\n-    id=\"different_underlying_data_structures\"><img src=\n-    \"different_underlying_dss.png\" alt=\"no image\" /></a></h6>\n-\n-    <h6 class=\"c1\">Different underlying data structures.</h6>\n-\n-    <p>Now consider a function manipulating a generic associative\n-    container, <i>e.g.</i>,</p>\n-    <pre>\n-<b>template</b>&lt;\n-    <b>class</b> Cntnr&gt;\n-<b>int</b> \n-    some_op_sequence\n-    (Cntnr &amp;r_cnt)\n-{\n-    ...\n-}\n-</pre>\n-\n-    <p>Ideally, the underlying data structure of <tt>Cntnr</tt>\n-    would not affect what can be done with <tt>r_cnt</tt>.\n-    Unfortunately, this is not the case.</p>\n-\n-    <p>For example, if <tt>Cntnr</tt> is <tt>std::map</tt>, then\n-    the function can use <tt>std::for_each(r_cnt.find(foo),\n-    r_cnt.find(bar), foobar)</tt> in order to apply <tt>foobar</tt>\n-    to all elements between <tt>foo</tt> and <tt>bar</tt>. If\n-    <tt>Cntnr</tt> is a hash-based container, then this call's\n-    results are undefined.</p>\n-\n-    <p>Also, if <tt>Cntnr</tt> is tree-based, the type and object\n-    of the comparison functor can be accessed. If <tt>Cntnr</tt> is\n-    hash based, these queries are nonsensical.</p>\n-\n-    <p>There are various other differences based on the container's\n-    underlying data structure. For one, they can be constructed by,\n-    and queried for, different policies. Furthermore:</p>\n-\n-    <ol>\n-      <li>Containers based on C, D, E and F store elements in a\n-      meaningful order; the others store elements in a meaningless\n-      (and probably time-varying) order. By implication, only\n-      containers based on C, D, E and F can support erase\n-      operations taking an iterator and returning an iterator to\n-      the following element without performance loss (see <a href=\n-      \"#assoc_ers_methods\">Slightly Different Methods::Methods\n-      Related to Erase</a>).</li>\n-\n-      <li>Containers based on C, D, E, and F can be split and\n-      joined efficiently, while the others cannot. Containers based\n-      on C and D, furthermore, can guarantee that this is\n-      exception-free; containers based on E cannot guarantee\n-      this.</li>\n-\n-      <li>Containers based on all but E can guarantee that erasing\n-      an element is exception free; containers based on E cannot\n-      guarantee this. Containers based on all but B and E can\n-      guarantee that modifying an object of their type does not\n-      invalidate iterators or references to their elements, while\n-      containers based on B and E cannot. Containers based on C, D,\n-      and E can furthermore make a stronger guarantee, namely that\n-      modifying an object of their type does not affect the order\n-      of iterators.</li>\n-    </ol>\n-\n-    <p>A unified tag and traits system (as used for the STL's\n-    iterators, for example) can ease generic manipulation of\n-    associative containers based on different underlying\n-    data structures (see <a href=\n-    \"tutorial.html#assoc_ds_gen\">Tutorial::Associative\n-    Containers::Determining Containers' Attributes</a> and <a href=\n-    \"ds_gen.html#container_traits\">Design::Associative\n-    Containers::Data-Structure Genericity::Data-Structure Tags and\n-    Traits</a>).</p>\n-\n-    <h3><a name=\"assoc_diff_it\" id=\"assoc_diff_it\">Differentiating\n-    between Iterator Types</a></h3>\n-\n-    <p>Iterators are centric to the STL's design, because of the\n-    container/algorithm/iterator decomposition that allows an\n-    algorithm to operate on a range through iterators of some\n-    sequence (<i>e.g.</i>, one originating from a container).\n-    Iterators, then, are useful because they allow going over a\n-    <u>sequence</u>. The STL also uses iterators for accessing a\n-    <u>specific</u> element - <i>e.g.</i>, when an associative\n-    container returns one through <tt>find</tt>. The STL, however,\n-    consistently uses the same types of iterators for both\n-    purposes: going over a range, and accessing a specific found\n-    element. Before the introduction of hash-based containers to\n-    the STL, this made sense (with the exception of priority\n-    queues, which are discussed in <a href=\"#pq\">Priority\n-    Queues</a>).</p>\n-\n-    <p>Using the STL's associative containers together with\n-    non-order-preserving associative containers (and also because\n-    of priority-queues container), there is a possible need for\n-    different types of iterators for self-organizing containers -\n-    the iterator concept seems overloaded to mean two different\n-    things (in some cases). The following subsections explain this;\n-    <a href=\"tutorial.html#assoc_find_range\">Tutorial::Associative\n-    Containers::Point-Type and Range-Type Methods</a> explains an\n-    alternative design which does not complicate the use of\n-    order-preserving containers, but is better for unordered\n-    containers; <a href=\n-    \"ds_gen.html#find_range\">Design::Associative\n-    Containers::Data-Structure Genericity::Point-Type and\n-    Range-Type Methods</a> explains the design further.</p>\n-\n-    <h4><a name=\"assoc_find_it_range_it\" id=\n-    \"assoc_find_it_range_it\">Using Point-Type Iterators for\n-    Range-Type Operations</a></h4>\n-\n-    <p>Suppose <tt>cntnr</tt> is some associative container, and\n-    say <tt>c</tt> is an object of type <tt>cntnr</tt>. Then what\n-    will be the outcome of</p>\n-    <pre>\n-std::for_each(c.find(1), c.find(5), foo);\n-</pre>\n-\n-    <p>If <tt>cntnr</tt> is a tree-based container object, then an\n-    in-order walk will apply <tt>foo</tt> to the relevant elements,\n-    <i>e.g.</i>, as in Figure <a href=\"#range_it_in_hts\">Range\n-    iteration in different data structures</a> -A. If <tt>c</tt> is\n-    a hash-based container, then the order of elements between any\n-    two elements is undefined (and probably time-varying); there is\n-    no guarantee that the elements traversed will coincide with the\n-    <i>logical</i> elements between 1 and 5, <i>e.g.</i>, as in\n-    Figure <a href=\"#range_it_in_hts\">Range iteration in different\n-    data structures</a>-B.</p>\n-\n-    <h6 class=\"c1\"><a name=\"range_it_in_hts\" id=\n-    \"range_it_in_hts\"><img src=\"point_iterators_range_ops_1.png\"\n-    alt=\"no image\" /></a></h6>\n-\n-    <h6 class=\"c1\">Range iteration in different\n-    data structures.</h6>\n-\n-    <p>In our opinion, this problem is not caused just because\n-    red-black trees are order preserving while collision-chaining\n-    hash tables are (generally) not - it is more fundamental. Most\n-    of the STL's containers order sequences in a well-defined\n-    manner that is determined by their <u>interface</u>: calling\n-    <tt>insert</tt> on a tree-based container modifies its sequence\n-    in a predictable way, as does calling <tt>push_back</tt> on a\n-    list or a vector. Conversely, collision-chaining hash tables,\n-    probing hash tables, priority queues, and list-based containers\n-    (which are very useful for \"multimaps\") are self-organizing\n-    data structures; the effect of each operation modifies their\n-    sequences in a manner that is (practically) determined by their\n-    <u>implementation</u>.</p>\n-\n-    <p>Consequently, applying an algorithm to a sequence obtained\n-    from most containers <u>may or may not</u> make sense, but\n-    applying it to a sub-sequence of a self-organizing container\n-    <u>does not</u>.</p>\n-\n-    <h4><a name=\"assoc_range_it_for_find_it\" id=\n-    \"assoc_range_it_for_find_it\">The Cost of Enabling Range\n-    Capabilities to Point-Type Iterators</a></h4>\n-\n-    <p>Suppose <tt>c</tt> is some collision-chaining hash-based\n-    container object, and one calls <tt>c.find(3)</tt>. Then what\n-    composes the returned iterator?</p>\n-\n-    <p>Figure <a href=\"#find_its_in_hash_tables\">Point-type\n-    iterators in hash tables</a>-A shows the simplest (and most\n-    efficient) implementation of a collision-chaining hash table.\n-    The little box marked <tt>point_iterator</tt> shows an object\n-    that contains a pointer to the element's node. Note that this\n-    \"iterator\" has no way to move to the next element (<i>i.e.</i>,\n-    it cannot support <tt><b>operator</b>++</tt>). Conversely, the\n-    little box marked <tt>iterator</tt> stores both a pointer to\n-    the element, as well as some other information (<i>e.g.</i>,\n-    the bucket number of the element). the second iterator, then,\n-    is \"heavier\" than the first one- it requires more time and\n-    space. If we were to use a different container to\n-    cross-reference into this hash-table using these iterators - it\n-    would take much more space. As noted in <a href=\n-    \"#assoc_find_it_range_it\">Using Point-Type Iterators for\n-    Range-Type Operations</a>, nothing much can be done by\n-    incrementing these iterators, so why is this extra information\n-    needed?</p>\n-\n-    <p>Alternatively, one might create a collision-chaining\n-    hash-table where the lists might be linked, forming a\n-    monolithic total-element list, as in Figure <a href=\n-    \"#find_its_in_hash_tables\">Point-type iterators in hash\n-    tables</a>-B (this seems similar to the Dinkumware design\n-    [<a href=\"references.html#dinkumware_stl\">dinkumware_stl</a>]).\n-    Here the iterators are as light as can be, but the hash-table's\n-    operations are more complicated.</p>\n-\n-    <h6 class=\"c1\"><a name=\"find_its_in_hash_tables\" id=\n-    \"find_its_in_hash_tables\"><img src=\n-    \"point_iterators_range_ops_2.png\" alt=\"no image\" /></a></h6>\n-\n-    <h6 class=\"c1\">Point-type iterators in hash tables.</h6>\n-\n-    <p>It should be noted that containers based on\n-    collision-chaining hash-tables are not the only ones with this\n-    type of behavior; many other self-organizing data structures\n-    display it as well.</p>\n-\n-    <h4><a name=\"assoc_inv_guar\" id=\"assoc_inv_guar\">Invalidation\n-    Guarantees</a></h4>\n-\n-    <p>Consider the following snippet:</p>\n-    <pre>\n-it = c.find(3);\n-\n-c.erase(5);\n-</pre>\n-\n-    <p>Following the call to <tt>erase</tt>, what is the validity\n-    of <tt>it</tt>: can it be de-referenced? can it be\n-    incremented?</p>\n-\n-    <p>The answer depends on the underlying data structure of the\n-    container. Figure <a href=\n-    \"#invalidation_guarantee_erase\">Effect of erase in different\n-    underlying data structures</a> shows three cases: A1 and A2\n-    show a red-black tree; B1 and B2 show a probing hash-table; C1\n-    and C2 show a collision-chaining hash table.</p>\n-\n-    <h6 class=\"c1\"><a name=\"invalidation_guarantee_erase\" id=\n-    \"invalidation_guarantee_erase\"><img src=\n-    \"invalidation_guarantee_erase.png\" alt=\"no image\" /></a></h6>\n-\n-    <h6 class=\"c1\">Effect of erase in different underlying\n-    data structures.</h6>\n-\n-    <ol>\n-      <li>Erasing 5 from A1 yields A2. Clearly, an iterator to 3\n-      can be de-referenced and incremented. The sequence of\n-      iterators changed, but in a way that is well-defined by the\n-      <u>interface</u>.</li>\n-\n-      <li>Erasing 5 from B1 yields B2. Clearly, an iterator to 3 is\n-      not valid at all - it cannot be de-referenced or incremented;\n-      the order of iterators changed in a way that is (practically)\n-      determined by the <u>implementation</u> and not by the\n-      <u>interface</u>.</li>\n-\n-      <li>Erasing 5 from C1 yields C2. Here the situation is more\n-      complicated. On the one hand, there is no problem in\n-      de-referencing <tt>it</tt>. On the other hand, the order of\n-      iterators changed in a way that is (practically) determined\n-      by the <u>implementation</u> and not by the\n-      <u>interface</u>.</li>\n-    </ol>\n-\n-    <p>So in classic STL, it is not always possible to express\n-    whether <tt>it</tt> is valid or not. This is true also for\n-    <tt>insert</tt>, <i>e.g.</i>. Again, the iterator concept seems\n-    overloaded.</p>\n-\n-    <h3><a name=\"assoc_methods\" id=\"assoc_methods\">Slightly\n-    Different Methods</a></h3>\n-\n-    <p>[<a href=\"references.html#meyers02both\">meyers02both</a>]\n-    points out that a class's methods should comprise only\n-    operations which depend on the class's internal structure;\n-    other operations are best designed as external functions.\n-    Possibly, therefore, the STL's associative containers lack some\n-    useful methods, and provide some other methods which would be\n-    better left out (<i>e.g.</i>, [<a href=\n-    \"references.html#sgi_stl\">sgi_stl</a>] ).</p>\n-\n-    <h4><a name=\"assoc_ers_methods\" id=\"assoc_ers_methods\">Methods\n-    Related to Erase</a></h4>\n-\n-    <ol>\n-      <li>Order-preserving STL associative containers provide the\n-      method\n-        <pre>\n-iterator \n-    erase\n-    (iterator it)\n-</pre>which takes an iterator, erases the corresponding element,\n-and returns an iterator to the following element. Also hash-based\n-STL associative containers provide this method. This <u>seemingly\n-increases</u> genericity between associative containers, since, <i>\n-        e.g.</i>, it is possible to use\n-        <pre>\n-<b>typename</b> C::iterator it = c.begin();\n-<b>typename</b> C::iterator e_it = c.end();\n-\n-<b>while</b>(it != e_it)\n-    it = pred(*it)? c.erase(it) : ++it;\n-</pre>in order to erase from a container object <tt>\n-        c</tt> all element which match a predicate <tt>pred</tt>.\n-        However, in a different sense this actually\n-        <u>decreases</u> genericity: an integral implication of\n-        this method is that tree-based associative containers'\n-        memory use is linear in the total number of elements they\n-        store, while hash-based containers' memory use is unbounded\n-        in the total number of elements they store. Assume a\n-        hash-based container is allowed to decrease its size when\n-        an element is erased. Then the elements might be rehashed,\n-        which means that there is no \"next\" element - it is simply\n-        undefined. Consequently, it is possible to infer from the\n-        fact that STL hash-based containers provide this method\n-        that they cannot downsize when elements are erased\n-        (<a href=\"assoc_performance_tests.html#hash_based\">Performance\n-        Tests::Hash-Based Container Tests</a> quantifies this.) As\n-        a consequence, different code is needed to manipulate\n-        different containers, assuming that memory should be\n-        conserved. <tt>pb_ds</tt>'s non-order preserving\n-        associative containers omit this method.\n-      </li>\n-\n-      <li>All of <tt>pb_ds</tt>'s associative containers include a\n-      conditional-erase method\n-        <pre>\n-<b>template</b>&lt;\n-    <b>class</b> Pred&gt;\n-size_type\n-    erase_if\n-    (Pred pred)\n-</pre>which erases all elements matching a predicate. This is\n-probably the only way to ensure linear-time multiple-item erase\n-which can actually downsize a container.\n-      </li>\n-\n-      <li>STL associative containers provide methods for\n-      multiple-item erase of the form\n-        <pre>\n-size_type\n-    erase\n-    (It b, \n-        It e)\n-</pre>erasing a range of elements given by a pair of iterators. For\n-tree-based or trie-based containers, this can implemented more\n-efficiently as a (small) sequence of split and join operations. For\n-other, unordered, containers, this method isn't much better than an\n-external loop. Moreover, if <tt>c</tt> is a hash-based container,\n-then, <i>e.g.</i>, <tt>c.erase(c.find(2), c.find(5))</tt> is almost\n-certain to do something different than erasing all elements whose\n-keys are between 2 and 5, and is likely to produce other undefined\n-behavior.\n-      </li>\n-    </ol>\n-\n-    <h4><a name=\"assoc_split_join_methods\" id=\n-    \"assoc_split_join_methods\">Methods Related to Split and\n-    Join</a></h4>\n-\n-    <p>It is well-known that tree-based and trie-based container\n-    objects can be efficiently split or joined [<a href=\n-    \"references.html#clrs2001\">clrs2001</a>]. Externally splitting\n-    or joining trees is super-linear, and, furthermore, can throw\n-    exceptions. Split and join methods, consequently, seem good\n-    choices for tree-based container methods, especially, since as\n-    noted just before, they are efficient replacements for erasing\n-    sub-sequences. <a href=\n-    \"assoc_performance_tests.html#tree_like_based\">Performance\n-    Tests::Tree-Like-Based Container Tests</a> quantifies this.</p>\n-\n-    <h4><a name=\"assoc_insert_methods\" id=\n-    \"assoc_insert_methods\">Methods Related to Insert</a></h4>\n-\n-    <p>STL associative containers provide methods of the form</p>\n-    <pre>\n-<b>template</b>&lt;\n-    <b>class</b> It&gt;\n-size_type\n-    insert\n-    (It b,\n-        It e);\n-</pre>for inserting a range of elements given by a pair of\n-iterators. At best, this can be implemented as an external loop,\n-or, even more efficiently, as a join operation (for the case of\n-tree-based or trie-based containers). Moreover, these methods seem\n-similar to constructors taking a range given by a pair of\n-iterators; the constructors, however, are transactional, whereas\n-the insert methods are not; this is possibly confusing.\n-\n-    <h4><a name=\"assoc_equiv_comp_methods\" id=\n-    \"assoc_equiv_comp_methods\">Functions Related to\n-    Comparison</a></h4>\n-\n-    <p>Associative containers are parametrized by policies\n-    allowing to test key equivalence; <i>e.g.</i> a hash-based\n-    container can do this through its equivalence functor, and a\n-    tree-based container can do this through its comparison\n-    functor. In addition, some STL associative containers have\n-    global function operators, <i>e.g.</i>,\n-    <tt><b>operator</b>==</tt> and <tt><b>operator</b>&lt;=</tt>,\n-    that allow comparing entire associative containers.</p>\n-\n-    <p>In our opinion, these functions are better left out. To\n-    begin with, they do not significantly improve over an external\n-    loop. More importantly, however, they are possibly misleading -\n-    <tt><b>operator</b>==</tt>, for example, usually checks for\n-    equivalence, or interchangeability, but the associative\n-    container cannot check for values' equivalence, only keys'\n-    equivalence; also, are two containers considered equivalent if\n-    they store the same values in different order? this is an\n-    arbitrary decision.</p>\n-\n-    <h3><a name=\"assoc_mapping_semantics\" id=\n-    \"assoc_mapping_semantics\">Alternative to Multiple Equivalent\n-    Keys</a></h3>\n-\n-    <p>Maps (or sets) allow mapping (or storing) unique-key values.\n-    The STL, however, also supplies associative containers which\n-    map (or store) multiple values with equivalent keys:\n-    <tt>std::multimap</tt>, <tt>std::multiset</tt>,\n-    <tt>std::tr1::unordered_multimap</tt>, and\n-    <tt>unordered_multiset</tt>. We first discuss how these might\n-    be used, then why we think it is best to avoid them.</p>\n-\n-    <p>Suppose one builds a simple bank-account application that\n-    records for each client (identified by an <tt>std::string</tt>)\n-    and account-id (marked by an <tt><b>unsigned long</b></tt>) -\n-    the balance in the account (described by a\n-    <tt><b>float</b></tt>). Suppose further that ordering this\n-    information is not useful, so a hash-based container is\n-    preferable to a tree based container. Then one can use</p>\n-    <pre>\n-std::tr1::unordered_map&lt;std::pair&lt;std::string, <b>unsigned long</b>&gt;, <b>float</b>, ...&gt;\n-</pre>which <u>hashes every combination of client and\n-account-id</u>. This might work well, except for the fact that it\n-is now impossible to efficiently list all of the accounts of a\n-specific client (this would practically require iterating over all\n-entries). Instead, one can use\n-    <pre>\n-std::tr1::unordered_multimap&lt;std::pair&lt;std::string, <tt><b>unsigned long</b></tt>&gt;, <b>float</b>, ...&gt;\n-</pre>which <u>hashes every client</u>, and <u>decides equivalence\n-based on client</u> only. This will ensure that all accounts\n-belonging to a specific user are stored consecutively.\n-\n-    <p>Also, suppose one wants an integers' priority queue\n-    (<i>i.e.,</i> a container that supports <tt>push</tt>,\n-    <tt>pop</tt>, and <tt>top</tt> operations, the last of which\n-    returns the largest <tt><b>int</b></tt>) that also supports\n-    operations such as <tt>find</tt> and <tt>lower_bound</tt>. A\n-    reasonable solution is to build an adapter over\n-    <tt>std::set&lt;<b>int</b>&gt;</tt>. In this adapter,\n-    <i>e.g.</i>, <tt>push</tt> will just call the tree-based\n-    associative container's <tt>insert</tt> method; <tt>pop</tt>\n-    will call its <tt>end</tt> method, and use it to return the\n-    preceding element (which must be the largest). Then this might\n-    work well, except that the container object cannot hold\n-    multiple instances of the same integer (<tt>push(4)</tt>,\n-    <i>e.g.</i>, will be a no-op if <tt>4</tt> is already in the\n-    container object). If multiple keys are necessary, then one\n-    might build the adapter over an\n-    <tt>std::multiset&lt;<b>int</b>&gt;</tt>.</p>\n-\n-    <p class=\"c1\">STL non-unique-mapping containers, then, are\n-    useful when (1) a key can be decomposed in to a primary key and\n-    a secondary key, (2) a key is needed multiple times, or (3) any\n-    combination of (1) and (2).</p>\n-\n-    <p>Figure <a href=\"#embedded_lists_1\">Non-unique mapping\n-    containers in the STL's design</a> shows how the STL's design\n-    works internally; in this figure nodes shaded equally represent\n-    equivalent-key values. Equivalent keys are stored consecutively\n-    using the properties of the underlying data structure: binary\n-    search trees (Figure <a href=\"#embedded_lists_1\">Non-unique\n-    mapping containers in the STL's design</a>-A) store\n-    equivalent-key values consecutively (in the sense of an\n-    in-order walk) naturally; collision-chaining hash tables\n-    (Figure <a href=\"#embedded_lists_1\">Non-unique mapping\n-    containers in the STL's design</a>-B) store equivalent-key\n-    values in the same bucket, the bucket can be arranged so that\n-    equivalent-key values are consecutive.</p>\n-\n-    <h6 class=\"c1\"><a name=\"embedded_lists_1\" id=\n-    \"embedded_lists_1\"><img src=\"embedded_lists_1.png\" alt=\n-    \"no image\" /></a></h6>\n-\n-    <h6 class=\"c1\">Non-unique mapping containers in the STL's\n-    design.</h6>\n-\n-    <p>Put differently, STL non-unique mapping\n-    associative-containers are associative containers that map\n-    primary keys to linked lists that are embedded into the\n-    container. Figure <a href=\"#embedded_lists_2\">Effect of\n-    embedded lists in STL multimaps</a> shows again the two\n-    containers from Figure <a href=\"#embedded_lists_1\">Non-unique\n-    mapping containers in the STL's design</a>, this time with the\n-    embedded linked lists of the grayed nodes marked\n-    explicitly.</p>\n-\n-    <h6 class=\"c1\"><a name=\"embedded_lists_2\" id=\n-    \"embedded_lists_2\"><img src=\"embedded_lists_2.png\" alt=\n-    \"no image\" /></a></h6>\n-\n-    <h6 class=\"c1\">Effect of embedded lists in STL multimaps.</h6>\n-\n-    <p>These embedded linked lists have several disadvantages.</p>\n-\n-    <ol>\n-      <li>The underlying data structure embeds the linked lists\n-      according to its own consideration, which means that the\n-      search path for a value might include several different\n-      equivalent-key values. For example, the search path for the\n-      the black node in either of Figures <a href=\n-      \"#embedded_lists_1\">Non-unique mapping containers in the\n-      STL's design</a> A or B, includes more than a single gray\n-      node.</li>\n-\n-      <li>The links of the linked lists are the underlying\n-      data structures' nodes, which typically are quite structured.\n-      <i>E.g.</i>, in the case of tree-based containers (Figure\n-      <a href=\"#embedded_lists_2\">Effect of embedded lists in STL\n-      multimaps</a>-B), each \"link\" is actually a node with three\n-      pointers (one to a parent and two to children), and a\n-      relatively-complicated iteration algorithm. The linked lists,\n-      therefore, can take up quite a lot of memory, and iterating\n-      over all values equal to a given key (<i>e.g.</i>, through\n-      the return value of the STL's <tt>equal_range</tt>) can be\n-      expensive.</li>\n-\n-      <li>The primary key is stored multiply; this uses more\n-      memory.</li>\n-\n-      <li>Finally, the interface of this design excludes several\n-      useful underlying data structures. <i>E.g.</i>, of all the\n-      unordered self-organizing data structures, practically only\n-      collision-chaining hash tables can (efficiently) guarantee\n-      that equivalent-key values are stored consecutively.</li>\n-    </ol>\n-\n-    <p>The above reasons hold even when the ratio of secondary keys\n-    to primary keys (or average number of identical keys) is small,\n-    but when it is large, there are more severe problems:</p>\n-\n-    <ol>\n-      <li>The underlying data structures order the links inside\n-      each embedded linked-lists according to their internal\n-      considerations, which effectively means that each of the\n-      links is unordered. Irrespective of the underlying\n-      data structure, searching for a specific value can degrade to\n-      linear complexity.</li>\n-\n-      <li>Similarly to the above point, it is impossible to apply\n-      to the secondary keys considerations that apply to primary\n-      keys. For example, it is not possible to maintain secondary\n-      keys by sorted order.</li>\n-\n-      <li>While the interface \"understands\" that all equivalent-key\n-      values constitute a distinct list (<i>e.g.</i>, through\n-      <tt>equal_range</tt>), the underlying data structure\n-      typically does not. This means, <i>e.g.</i>, that operations\n-      such as erasing from a tree-based container all values whose\n-      keys are equivalent to a a given key can be super-linear in\n-      the size of the tree; this is also true also for several\n-      other operations that target a specific list.</li>\n-    </ol>\n-\n-    <p>In <tt>pb_ds</tt>, therefore, all associative containers map\n-    (or store) unique-key values. One can (1) map primary keys to\n-    secondary associative-containers (<i>i.e.</i>, containers of\n-    secondary keys) or non-associative containers (2) map identical\n-    keys to a size-type representing the number of times they\n-    occur, or (3) any combination of (1) and (2). Instead of\n-    allowing multiple equivalent-key values, <tt>pb_ds</tt>\n-    supplies associative containers based on underlying\n-    data structures that are suitable as secondary\n-    associative-containers (see <a href=\n-    \"assoc_performance_tests.html#msc\">Associative-Container\n-    Performance Tests::Observations::Mapping-Semantics\n-    Considerations</a>).</p>\n-\n-    <p>Figures <a href=\"#embedded_lists_3\">Non-unique mapping\n-    containers in <tt>pb_ds</tt></a> A and B show the equivalent\n-    structures in <tt>pb_ds</tt>'s design, to those in Figures\n-    <a href=\"#embedded_lists_1\">Non-unique mapping containers in\n-    the STL's design</a> A and B, respectively. Each shaded box\n-    represents some size-type or secondary\n-    associative-container.</p>\n-\n-    <h6 class=\"c1\"><a name=\"embedded_lists_3\" id=\n-    \"embedded_lists_3\"><img src=\"embedded_lists_3.png\" alt=\n-    \"no image\" /></a></h6>\n-\n-    <h6 class=\"c1\">Non-unique mapping containers in the\n-    <tt>pb_ds</tt>.</h6>\n-\n-    <p>In the first example above, then, one would use an\n-    associative container mapping each user to an associative\n-    container which maps each application id to a start time (see\n-    <a href=\n-    \"http://gcc.gnu.org/viewcvs/*checkout*/trunk/libstdc%2B%2B-v3/testsuite/ext/pb_ds/example/basic_multimap.cc\"><tt>basic_multimap.cc</tt></a>);\n-    in the second example, one would use an associative container\n-    mapping each <tt><b>int</b></tt> to some size-type indicating\n-    the number of times it logically occurs (see <a href=\n-    \"http://gcc.gnu.org/viewcvs/*checkout*/trunk/libstdc%2B%2B-v3/testsuite/ext/pb_ds/example/basic_multiset.cc\"><tt>basic_multiset.cc</tt></a>).</p>\n-\n-    <p><a href=\n-    \"assoc_performance_tests.html#multimaps\">Associative-Container\n-    Performance Tests::Multimaps</a> quantifies some of these\n-    points, and <a href=\n-    \"assoc_performance_tests.html#msc\">Associative-Container\n-    Performance Tests::Observations::Mapping-Semantics\n-    Considerations</a> shows some simple calculations.</p>\n-\n-    <p><a href=\"assoc_examples.html#mmaps\">Associative-Container\n-    Examples::Multimaps</a> shows some simple examples of using\n-    \"multimaps\".</p>\n-\n-    <p><a href=\"lu_based_containers.html\">Design::Associative\n-    Containers::List-Based Containers</a> discusses types of\n-    containers especially suited as secondary\n-    associative-containers.</p>\n-\n-    <h2><a name=\"pq\" id=\"pq\">Priority Queues</a></h2>\n-\n-    <h3><a name=\"pq_more_ops\" id=\"pq_more_ops\">Slightly Different\n-    Methods</a></h3>\n-\n-    <p>Priority queues are containers that allow efficiently\n-    inserting values and accessing the maximal value (in the sense\n-    of the container's comparison functor); <i>i.e.</i>, their\n-    interface supports <tt>push</tt> and <tt>pop</tt>. The STL's\n-    priority queues indeed support these methods, but they support\n-    little else. For algorithmic and software-engineering purposes,\n-    other methods are needed:</p>\n-\n-    <ol>\n-      <li>Many graph algorithms [<a href=\n-      \"references.html#clrs2001\">clrs2001</a>] require increasing a\n-      value in a priority queue (again, in the sense of the\n-      container's comparison functor), or joining two\n-      priority-queue objects.</li>\n-\n-      <li>It is sometimes necessary to erase an arbitrary value in\n-      a priority queue. For example, consider the <tt>select</tt>\n-      function for monitoring file descriptors:\n-        <pre>\n-<b>int</b> \n-    select\n-    (<b>int</b> nfds,             \n-        fd_set *readfds,                \n-        fd_set *writefds,\n-        fd_set *errorfds, \n-        <b>struct</b> timeval *timeout);\n-</pre>then, as the <tt>select</tt> manual page [<a href=\n-\"references.html#select_man\">select_man</a>] states:\n-\n-        <p><q>The nfds argument specifies the range of file\n-        descriptors to be tested. The select() function tests file\n-        descriptors in the range of 0 to nfds-1.</q></p>\n-\n-        <p>It stands to reason, therefore, that we might wish to\n-        maintain a minimal value for <tt>nfds</tt>, and priority\n-        queues immediately come to mind. Note, though, that when a\n-        socket is closed, the minimal file description might\n-        change; in the absence of an efficient means to erase an\n-        arbitrary value from a priority queue, we might as well\n-        avoid its use altogether.</p>\n-\n-        <p><a href=\"pq_examples.html#xref\">Priority-Queue\n-        Examples::Cross-Referencing</a> shows examples for these\n-        types of operations.</p>\n-      </li>\n-\n-      <li>STL containers typically support iterators. It is\n-      somewhat unusual for <tt>std::priority_queue</tt> to omit\n-      them (see, <i>e.g.</i>, [<a href=\n-      \"references.html#meyers01stl\">meyers01stl</a>]). One might\n-      ask why do priority queues need to support iterators, since\n-      they are self-organizing containers with a different purpose\n-      than abstracting sequences. There are several reasons:\n-\n-        <ol>\n-          <li>Iterators (even in self-organizing containers) are\n-          useful for many purposes, <i>e.g.</i>, cross-referencing\n-          containers, serialization, and debugging code that uses\n-          these containers.</li>\n-\n-          <li>The STL's hash-based containers support iterators,\n-          even though they too are self-organizing containers with\n-          a different purpose than abstracting sequences.</li>\n-\n-          <li>In STL-like containers, it is natural to specify the\n-          interface of operations for modifying a value or erasing\n-          a value (discussed previously) in terms of a iterators.\n-          This is discussed further in <a href=\n-          \"pq_design.html#pq_it\">Design::Priority\n-          Queues::Iterators</a>. It should be noted that the STL's\n-          containers also use iterators for accessing and\n-          manipulating a specific value. <i>E.g.</i>, in hash-based\n-          containers, one checks the existence of a key by\n-          comparing the iterator returned by <tt>find</tt> to the\n-          iterator returned by <tt>end</tt>, and not by comparing a\n-          pointer returned by <tt>find</tt> to <tt>NULL</tt>.</li>\n-        </ol>\n-      </li>\n-    </ol>\n-\n-    <p><a href=\"pq_performance_tests.html\">Performance\n-    Tests::Priority Queues</a> quantifies some of these points.</p>\n-\n-    <h3><a name=\"pq_ds_genericity\" id=\"pq_ds_genericity\">More Data\n-    Structures and Traits</a></h3>\n-\n-    <p>There are three main implementations of priority queues: the\n-    first employs a binary heap, typically one which uses a\n-    sequence; the second uses a tree (or forest of trees), which is\n-    typically less structured than an associative container's tree;\n-    the third simply uses an associative container. These are\n-    shown, respectively, in Figures <a href=\n-    \"#pq_different_underlying_dss\">Underlying Priority-Queue\n-    Data-Structures</a> A1 and A2, B, and C.</p>\n-\n-    <h6 class=\"c1\"><a name=\"pq_different_underlying_dss\" id=\n-    \"pq_different_underlying_dss\"><img src=\n-    \"pq_different_underlying_dss.png\" alt=\"no image\" /></a></h6>\n-\n-    <h6 class=\"c1\">Underlying Priority-Queue Data-Structures.</h6>\n-\n-    <p>No single implementation can completely replace any of the\n-    others. Some have better <tt>push</tt> and <tt>pop</tt>\n-    amortized performance, some have better bounded (worst case)\n-    response time than others, some optimize a single method at the\n-    expense of others, <i>etc.</i>. In general the \"best\"\n-    implementation is dictated by the problem (see <a href=\n-    \"pq_performance_tests.html#pq_observations\">Performance\n-    Tests::Priority Queues::Observations</a>).</p>\n-\n-    <p>As with associative containers (see <a href=\n-    \"#assoc_ds_genericity\">Associative Containers::Traits for\n-    Underlying Data-Structures</a>), the more implementations\n-    co-exist, the more necessary a traits mechanism is for handling\n-    generic containers safely and efficiently. This is especially\n-    important for priority queues, since the invalidation\n-    guarantees of one of the most useful data structures - binary\n-    heaps - is markedly different than those of most of the\n-    others.</p>\n-\n-    <p><a href=\"pq_design.html#pq_traits\">Design::Priority\n-    Queues::Traits</a> discusses this further.</p>\n-\n-    <h3><a name=\"pq_binary_heap\" id=\"pq_binary_heap\">Binary Heap\n-    Implementation</a></h3>\n-\n-    <p>Binary heaps are one of the most useful underlying\n-    data structures for priority queues. They are very efficient in\n-    terms of memory (since they don't require per-value structure\n-    metadata), and have the best amortized <tt>push</tt> and\n-    <tt>pop</tt> performance for primitive types (<i>e.g.</i>,\n-    <tt><b>int</b></tt>s).</p>\n-\n-    <p>The STL's <tt>priority_queue</tt> implements this data\n-    structure as an adapter over a sequence, typically\n-    <tt>std::vector</tt> or <tt>std::deque</tt>, which correspond\n-    to Figures <a href=\"#pq_different_underlying_dss\">Underlying\n-    Priority-Queue Data-Structures</a> A1 and A2, respectively.</p>\n-\n-    <p>This is indeed an elegant example of the adapter concept and\n-    the algorithm/container/iterator decomposition (see [<a href=\n-    \"references.html#nelson96stlpq\">nelson96stlpql</a>]). There are\n-    possibly reasons, however, why a binary-heap priority queue\n-    would be better implemented as a container instead of a\n-    sequence adapter:</p>\n-\n-    <ol>\n-      <li><tt>std::priority_queue</tt> cannot erase values from its\n-      adapted sequence (irrespective of the sequence type). This\n-      means that the memory use of an <tt>std::priority_queue</tt>\n-      object is always proportional to the maximal number of values\n-      it ever contained, and not to the number of values that it\n-      currently contains (see <a href=\n-      \"priority_queue_text_pop_mem_usage_test.html\">Priority Queue\n-      Text <tt>pop</tt> Memory Use Test</a>); this implementation\n-      of binary heaps acts very differently than other underlying\n-      data structures (<i>e.g.</i>, pairing heaps).</li>\n-\n-      <li>Some combinations of adapted sequences and value types\n-      are very inefficient or just don't make sense. If one uses\n-      <tt>std::priority_queue&lt;std::vector&lt;std::string&gt;\n-      &gt; &gt;</tt>, for example, then not only will each\n-      operation perform a logarithmic number of\n-      <tt>std::string</tt> assignments, but, furthermore, any\n-      operation (including <tt>pop</tt>) can render the container\n-      useless due to exceptions. Conversely, if one uses\n-      <tt>std::priority_queue&lt;std::deque&lt;<b>int</b>&gt; &gt;\n-      &gt;</tt>, then each operation uses incurs a logarithmic\n-      number of indirect accesses (through pointers) unnecessarily.\n-      It might be better to let the container make a conservative\n-      deduction whether to use the structure in Figures <a href=\n-      \"#pq_different_underlying_dss\">Underlying Priority-Queue\n-      Data-Structures</a> A1 or A2.</li>\n-\n-      <li>There does not seem to be a systematic way to determine\n-      what exactly can be done with the priority queue.\n-\n-        <ol>\n-          <li>If <tt>p</tt> is a priority queue adapting an\n-          <tt>std::vector</tt>, then it is possible to iterate over\n-          all values by using <tt>&amp;p.top()</tt> and\n-          <tt>&amp;p.top() + p.size()</tt>, but this will not work\n-          if <tt>p</tt> is adapting an <tt>std::deque</tt>; in any\n-          case, one cannot use <tt>p.begin()</tt> and\n-          <tt>p.end()</tt>. If a different sequence is adapted, it\n-          is even more difficult to determine what can be\n-          done.</li>\n-\n-          <li>If <tt>p</tt> is a priority queue adapting an\n-          <tt>std::deque</tt>, then the reference return by\n-          <tt>p.top()</tt> will remain valid until it is popped,\n-          but if <tt>p</tt> adapts an <tt>std::vector</tt>, the\n-          next <tt>push</tt> will invalidate it. If a different\n-          sequence is adapted, it is even more difficult to\n-          determine what can be done.</li>\n-        </ol>\n-      </li>\n-\n-      <li>Sequence-based binary heaps can still implement\n-      linear-time <tt>erase</tt> and <tt>modify</tt> operations.\n-      This means that if one needs, <i>e.g.</i>, to erase a small\n-      (say logarithmic) number of values, then one might still\n-      choose this underlying data structure. Using\n-      <tt>std::priority_queue</tt>, however, this will generally\n-      change the order of growth of the entire sequence of\n-      operations.</li>\n-    </ol>\n-  </div>\n-</body>\n-</html>"}, {"sha": "4ed4d40bd06150ac0a60bcea099e09491661d435", "filename": "libstdc++-v3/doc/html/ext/pb_ds/move_to_front_lu_policy.html", "status": "removed", "additions": 0, "deletions": 194, "changes": 194, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmove_to_front_lu_policy.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmove_to_front_lu_policy.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmove_to_front_lu_policy.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7", "patch": "@@ -1,194 +0,0 @@\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n-    \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n-<head>\n-  <meta name=\"generator\" content=\n-  \"HTML Tidy for Linux/x86 (vers 12 April 2005), see www.w3.org\" />\n-\n-  <title>move_to_front_lu_policy Interface</title>\n-  <meta http-equiv=\"Content-Type\" content=\n-  \"text/html; charset=us-ascii\" />\n-  </head>\n-\n-<body>\n-  <div id=\"page\">\n-    <h1><tt>move_to_front_lu_policy</tt> Interface</h1>\n-\n-    <p>A list-update policy that unconditionally moves elements to\n-    the front of the list.</p>\n-\n-    <p>Defined in: <a href=\n-    \"http://gcc.gnu.org/viewcvs/*checkout*/trunk/libstdc%2B%2B-v3/include/ext/pb_ds/list_update_policy.hpp\"><tt>list_update_policy.hpp</tt></a></p>\n-\n-    <h2><a name=\"link1\" id=\"link1\">Template Parameters</a></h2>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\n-    \"Template Parameters\">\n-      <tr>\n-        <td width=\"20%\" align=\"left\"><b>Parameter</b></td>\n-\n-        <td width=\"50%\" align=\"left\"><b>Description</b></td>\n-\n-        <td width=\"30%\" align=\"left\"><b>Default Value</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"Allocator35940069\" id=\n-\"Allocator35940069\"><b>class</b> Allocator </a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Allocator type.</p>\n-\n-          <p>This is used only for definitions, e.g., the size\n-          type.</p>\n-        </td>\n-\n-        <td>\n-          <pre>\n-std::allocator&lt;<b>char</b>&gt;\n-</pre>\n-        </td>\n-      </tr>\n-    </table>\n-\n-    <h2><a name=\"link2\" id=\"link2\">Public Types and\n-    Constants</a></h2>\n-\n-    <h3><a name=\"link3\" id=\"link3\">Policy Definitions</a></h3>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Types\">\n-      <tr>\n-        <td width=\"30%\" align=\"left\"><b>Type</b></td>\n-\n-        <td width=\"55%\" align=\"left\"><b>Definition</b></td>\n-\n-        <td width=\"15%\" align=\"left\"><b>Description</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"allocator48440069\" id=\"allocator48440069\">allocator</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <pre>\n-<a href=\"#Allocator35940069\"><tt>Allocator</tt></a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p><a href=\"#Allocator35940069\"><tt>Allocator</tt></a>\n-          type.</p>\n-        </td>\n-      </tr>\n-    </table>\n-\n-    <h3><a name=\"link4\" id=\"link4\">Metadata-Type\n-    Definitions</a></h3>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Types\">\n-      <tr>\n-        <td width=\"30%\" align=\"left\"><b>Type</b></td>\n-\n-        <td width=\"55%\" align=\"left\"><b>Definition</b></td>\n-\n-        <td width=\"15%\" align=\"left\"><b>Description</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"metadata_type2849297114\" id=\n-\"metadata_type2849297114\">metadata_type</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <pre>\n-<a href=\"null_lu_metadata.html\"><span class=\n-\"c2\"><tt>null_lu_metadata</tt></span></a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Metadata on which this functor operates.</p>\n-\n-          <p>In this case, none.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"metadata_reference583863863\" id=\n-\"metadata_reference583863863\">metadata_reference</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <pre>\n-<b>typename</b> <a href=\n-\"#Allocator35940069\"><tt>Allocator</tt></a>::<b>template</b> rebind&lt;  \n-    <a href=\n-\"#metadata_type2849297114\"><tt>metadata_type</tt></a>&gt;::other::reference\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Reference to metadata on which this functor\n-          operates.</p>\n-        </td>\n-      </tr>\n-    </table>\n-\n-    <h2><a name=\"link5\" id=\"link5\">Public Methods</a></h2>\n-\n-    <h3><a name=\"link6\" id=\"link6\">Metadata Methods</a></h3>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Methods\">\n-      <tr>\n-        <td width=\"45%\" align=\"left\"><b>Method</b></td>\n-\n-        <td width=\"55%\" align=\"left\"><b>Description</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a href=\"#metadata_type2849297114\"><tt>metadata_type</tt></a>\n-  <b>operator</b>()\n-  () <b>const</b>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Creates a metadata object.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>inline</b> <b>bool</b> \n-  <b>operator</b>()\n-  (<a href=\n-\"#metadata_reference583863863\"><tt>metadata_reference</tt></a> r_metadata) <b>const</b>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Decides whether a metadata object should be moved to\n-          the front of the list.</p>\n-        </td>\n-      </tr>\n-    </table>\n-  </div>\n-</body>\n-</html>"}, {"sha": "74d33a32606d8ac1bb6cbf2964d573ed360a6f2d", "filename": "libstdc++-v3/doc/html/ext/pb_ds/multimap_text_find_timing_test_large.html", "status": "removed", "additions": 0, "deletions": 215, "changes": 215, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_find_timing_test_large.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_find_timing_test_large.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_find_timing_test_large.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7", "patch": "@@ -1,215 +0,0 @@\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n-    \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n-<head>\n-<meta name=\"generator\" content=\"HTML Tidy for Linux/x86 (vers 12 April 2005), see www.w3.org\" />\n-<title>\"Multimap\" Text Find Timing Test with Large Average\n-  Secondary-Key to Primary-Key Ratio</title>\n-<meta http-equiv=\"Content-Type\" content=\"text/html; charset=us-ascii\" />\n-</head>\n-<body>\n-<div id=\"page\">\n-<h1>\"Multimap\" Text Find Timing Test with Large Average\n-    Secondary-Key to Primary-Key Ratio</h1>\n-<h2><a name=\"description\" id=\"description\">Description</a></h2>\n-<p>This test inserts a number of pairs into a container. The\n-    first item of each pair is a string from an arbitrary text\n-    [<a href=\"references.html#wickland96thirty\">wickland96thirty</a>], and\n-    the second is a uniform i.i.d.integer. The container is a\n-    \"multimap\" - it considers the first member of each pair as a\n-    primary key, and the second member of each pair as a secondary\n-    key (see <a href=\"motivation.html#assoc_mapping_semantics\">Motivation::Associative\n-    Containers::Alternative to Multiple Equivalent Keys</a>). There\n-    are 100 distinct primary keys, and the ratio of secondary keys\n-    to primary keys ranges to about 20.</p>\n-<p>The test measures the average find-time as a function of the\n-    number of values inserted. For <tt>pb_ds</tt>'s containers, it\n-    finds the secondary key from a container obtained from finding\n-    a primary key. For the native multimaps, it searches a range\n-    obtained using <tt>std::equal_range</tt> on a primary key.</p>\n-<p>(The test was executed with <a href=\"http://gcc.gnu.org/viewcvs/*checkout*/trunk/libstdc%2B%2B-v3/testsuite/performance/ext/pb_ds/multimap_text_find_timing_large.cc\"><tt>multimap_text_find_timing_test</tt></a>\n-    thirty_years_among_the_dead_preproc.txt 100 3 4 4)</p>\n-<h2><a name=\"purpose\" id=\"purpose\">Purpose</a></h2>\n-<p>The test checks the find-time scalability of different\n-    \"multimap\" designs (see <a href=\"motivation.html#assoc_mapping_semantics\">Motivation::Associative\n-    Containers::Mapping Semantics</a>).</p>\n-<h2><a name=\"results\" id=\"results\">Results</a></h2>\n-<p>Figures <a href=\"#NTG\">NTG</a>, <a href=\"#NTM\">NTM</a>, and\n-    <a href=\"#NTL\">NTL</a> show the results for \"multimaps\" which\n-    use a tree-based container for primary keys, in <a href=\"assoc_performance_tests.html#gcc\"><u>g++</u></a>, <a href=\"assoc_performance_tests.html#msvc\"><u>msvc++</u></a>, and\n-    <a href=\"assoc_performance_tests.html#local\"><u>local</u></a>,\n-    respectively; Figures <a href=\"#NHG\"></a>NHG, <a href=\"#NHM\">NHM</a>, and <a href=\"#NHL\">NHL</a> show the results for\n-    \"multimaps\" which use a hash-based container for primary keys,\n-    in <a href=\"assoc_performance_tests.html#gcc\"><u>g++</u></a>,\n-    <a href=\"assoc_performance_tests.html#msvc\"><u>msvc++</u></a>,\n-    and <a href=\"assoc_performance_tests.html#local\"><u>local</u></a>,\n-    respectively.</p>\n-<div id=\"NTG_res_div\">\n-<div id=\"NTG_gcc\">\n-<div id=\"NTG_multimap_text_find_timing_test_large_s2p_tree\">\n-<div id=\"NTG_assoc\">\n-<div id=\"NTG_Native_and_primary_tree-based_multimap_types_find_timing_test\"><div style=\"border-style: dotted; border-width: 1px; border-color: lightgray\"><h6 class=\"c1\"><a name=\"NTG\" id=\"NTG\"><img src=\"multimap_text_find_timing_test_large_s2p_tree_gcc.png\" alt=\"no image\" /></a></h6>NTG: Native and primary tree-based multimap types find timing test - <a href=\"assoc_performance_tests.html#gcc\">g++</a><p>In the above figure, the names in the legends have the following meaning:</p>\n-<ol>\n-<li>\n-n_mmap-\n-<tt>std::multimap</tt></li>\n-<li>\n-rb_tree_mmap_lu_mtf_set-\n-<a href=\"tree.html\"><tt>tree</tt></a>\n- with <tt>Tag</tt> = <a href=\"rb_tree_tag.html\"><tt>rb_tree_tag</tt></a>\n-, and <tt>Node_Update</tt> = <a href=\"null_tree_node_update.html\"><tt>null_tree_node_update</tt></a>\n-, mapping each key to <a href=\"list_update.html\"><tt>list_update</tt></a>\n- with <tt>Update_Policy</tt> = <a href=\"move_to_front_lu_policy.html\"><tt>move_to_front_lu_policy</tt></a>\n-</li>\n-<li>\n-rb_tree_mmap_cc_hash_mask_exp_nea_lc_1div8_1div2_nsth_set-\n-<a href=\"tree.html\"><tt>tree</tt></a>\n- with <tt>Tag</tt> = <a href=\"rb_tree_tag.html\"><tt>rb_tree_tag</tt></a>\n-, and <tt>Node_Update</tt> = <a href=\"null_tree_node_update.html\"><tt>null_tree_node_update</tt></a>\n-, mapping each key to <a href=\"cc_hash_table.html\"><tt>cc_hash_table</tt></a>\n-with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mask_range_hashing.html\"><tt>direct_mask_range_hashing</tt></a>\n-, and <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_exponential_size_policy.html\"><tt>hash_exponential_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/2</i></li>\n-</ol>\n-</div><div style=\"width: 100%; height: 20px\"></div></div>\n-</div>\n-</div>\n-</div>\n-</div>\n-<div id=\"NTM_res_div\">\n-<div id=\"NTM_msvc\">\n-<div id=\"NTM_multimap_text_find_timing_test_large_s2p_tree\">\n-<div id=\"NTM_assoc\">\n-<div id=\"NTM_Native_and_primary_tree-based_multimap_types_find_timing_test\"><div style=\"border-style: dotted; border-width: 1px; border-color: lightgray\"><h6 class=\"c1\"><a name=\"NTM\" id=\"NTM\"><img src=\"multimap_text_find_timing_test_large_s2p_tree_msvc.png\" alt=\"no image\" /></a></h6>NTM: Native and primary tree-based multimap types find timing test - <a href=\"assoc_performance_tests.html#msvc\">msvc++</a><p>In the above figure, the names in the legends have the following meaning:</p>\n-<ol>\n-<li>\n-n_mmap-\n-<tt>std::multimap</tt></li>\n-<li>\n-rb_tree_mmap_lu_mtf_set-\n-<a href=\"tree.html\"><tt>tree</tt></a>\n- with <tt>Tag</tt> = <a href=\"rb_tree_tag.html\"><tt>rb_tree_tag</tt></a>\n-, and <tt>Node_Update</tt> = <a href=\"null_tree_node_update.html\"><tt>null_tree_node_update</tt></a>\n-, mapping each key to <a href=\"list_update.html\"><tt>list_update</tt></a>\n- with <tt>Update_Policy</tt> = <a href=\"move_to_front_lu_policy.html\"><tt>move_to_front_lu_policy</tt></a>\n-</li>\n-<li>\n-rb_tree_mmap_cc_hash_mask_exp_nea_lc_1div8_1div2_nsth_set-\n-<a href=\"tree.html\"><tt>tree</tt></a>\n- with <tt>Tag</tt> = <a href=\"rb_tree_tag.html\"><tt>rb_tree_tag</tt></a>\n-, and <tt>Node_Update</tt> = <a href=\"null_tree_node_update.html\"><tt>null_tree_node_update</tt></a>\n-, mapping each key to <a href=\"cc_hash_table.html\"><tt>cc_hash_table</tt></a>\n-with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mask_range_hashing.html\"><tt>direct_mask_range_hashing</tt></a>\n-, and <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_exponential_size_policy.html\"><tt>hash_exponential_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/2</i></li>\n-</ol>\n-</div><div style=\"width: 100%; height: 20px\"></div></div>\n-</div>\n-</div>\n-</div>\n-</div>\n-<div id=\"NTL_res_div\">\n-<div id=\"NTL_local\">\n-<div id=\"NTL_multimap_text_find_timing_test_large_s2p_tree\">\n-<div id=\"NTL_assoc\">\n-<div id=\"NTL_Native_and_primary_tree-based_multimap_types_find_timing_test\"><div style = \"border-style: dotted; border-width: 1px; border-color: lightgray\"><h6 class=\"c1\"><a name=\"NTL\" id= \"NTL\"><img src=\"multimap_text_find_timing_test_large_s2p_tree_local.png\" alt=\"no image\" /></a></h6>NTL: Native and primary tree-based multimap types find timing test - <a href = \"assoc_performance_tests.html#local\">local</a></div><div style = \"width: 100%; height: 20px\"></div></div>\n-</div>\n-</div>\n-</div>\n-</div>\n-<div id=\"NHG_res_div\">\n-<div id=\"NHG_gcc\">\n-<div id=\"NHG_multimap_text_find_timing_test_large_s2p_hash\">\n-<div id=\"NHG_assoc\">\n-<div id=\"NHG_Native_and_primary_hash-based_multimap_types_find_timing_test\"><div style=\"border-style: dotted; border-width: 1px; border-color: lightgray\"><h6 class=\"c1\"><a name=\"NHG\" id=\"NHG\"><img src=\"multimap_text_find_timing_test_large_s2p_hash_gcc.png\" alt=\"no image\" /></a></h6>NHG: Native and primary hash-based multimap types find timing test - <a href=\"assoc_performance_tests.html#gcc\">g++</a><p>In the above figure, the names in the legends have the following meaning:</p>\n-<ol>\n-<li>\n-n_hash_mmap-\n-<tt>__gnucxx::hash_multimap</tt></li>\n-<li>\n-cc_hash_mask_exp_nea_lc_1div8_1div2_nsth_mmap_lu_mtf_set-\n-<a href=\"cc_hash_table.html\"><tt>cc_hash_table</tt></a>\n-with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mask_range_hashing.html\"><tt>direct_mask_range_hashing</tt></a>\n-, and <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_exponential_size_policy.html\"><tt>hash_exponential_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/2</i>, mapping each key to <a href=\"list_update.html\"><tt>list_update</tt></a>\n- with <tt>Update_Policy</tt> = <a href=\"move_to_front_lu_policy.html\"><tt>move_to_front_lu_policy</tt></a>\n-</li>\n-<li>\n-cc_hash_mask_exp_nea_lc_1div8_1div2_nsth_mmap_cc_hash_mask_exp_nea_lc_1div8_1div2_nsth_set-\n-<a href=\"cc_hash_table.html\"><tt>cc_hash_table</tt></a>\n-with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mask_range_hashing.html\"><tt>direct_mask_range_hashing</tt></a>\n-, and <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_exponential_size_policy.html\"><tt>hash_exponential_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/2</i>, mapping each key to <a href=\"cc_hash_table.html\"><tt>cc_hash_table</tt></a>\n-with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mask_range_hashing.html\"><tt>direct_mask_range_hashing</tt></a>\n-, and <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_exponential_size_policy.html\"><tt>hash_exponential_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/2</i></li>\n-</ol>\n-</div><div style=\"width: 100%; height: 20px\"></div></div>\n-</div>\n-</div>\n-</div>\n-</div>\n-<div id=\"NHM_res_div\">\n-<div id=\"NHM_msvc\">\n-<div id=\"NHM_multimap_text_find_timing_test_large_s2p_hash\">\n-<div id=\"NHM_assoc\">\n-<div id=\"NHM_Native_and_primary_hash-based_multimap_types_find_timing_test\"><div style=\"border-style: dotted; border-width: 1px; border-color: lightgray\"><h6 class=\"c1\"><a name=\"NHM\" id=\"NHM\"><img src=\"multimap_text_find_timing_test_large_s2p_hash_msvc.png\" alt=\"no image\" /></a></h6>NHM: Native and primary hash-based multimap types find timing test - <a href=\"assoc_performance_tests.html#msvc\">msvc++</a><p>In the above figure, the names in the legends have the following meaning:</p>\n-<ol>\n-<li>\n-n_hash_mmap-\n-<tt>stdext::hash_multimap</tt></li>\n-<li>\n-cc_hash_mask_exp_nea_lc_1div8_1div2_nsth_mmap_lu_mtf_set-\n-<a href=\"cc_hash_table.html\"><tt>cc_hash_table</tt></a>\n-with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mask_range_hashing.html\"><tt>direct_mask_range_hashing</tt></a>\n-, and <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_exponential_size_policy.html\"><tt>hash_exponential_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/2</i>, mapping each key to <a href=\"list_update.html\"><tt>list_update</tt></a>\n- with <tt>Update_Policy</tt> = <a href=\"move_to_front_lu_policy.html\"><tt>move_to_front_lu_policy</tt></a>\n-</li>\n-<li>\n-cc_hash_mask_exp_nea_lc_1div8_1div2_nsth_mmap_cc_hash_mask_exp_nea_lc_1div8_1div2_nsth_set-\n-<a href=\"cc_hash_table.html\"><tt>cc_hash_table</tt></a>\n-with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mask_range_hashing.html\"><tt>direct_mask_range_hashing</tt></a>\n-, and <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_exponential_size_policy.html\"><tt>hash_exponential_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/2</i>, mapping each key to <a href=\"cc_hash_table.html\"><tt>cc_hash_table</tt></a>\n-with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mask_range_hashing.html\"><tt>direct_mask_range_hashing</tt></a>\n-, and <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_exponential_size_policy.html\"><tt>hash_exponential_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/2</i></li>\n-</ol>\n-</div><div style=\"width: 100%; height: 20px\"></div></div>\n-</div>\n-</div>\n-</div>\n-</div>\n-<div id=\"NHL_res_div\">\n-<div id=\"NHL_local\">\n-<div id=\"NHL_multimap_text_find_timing_test_large_s2p_hash\">\n-<div id=\"NHL_assoc\">\n-<div id=\"NHL__Native_and_primary_hash-based_multimap_types_find_timing_test\"><div style = \"border-style: dotted; border-width: 1px; border-color: lightgray\"><h6 class=\"c1\"><a name=\"NHL\" id= \"NHL\"><img src=\"multimap_text_find_timing_test_large_s2p_hash_local.png\" alt=\"no image\" /></a></h6>NHL:  Native and primary hash-based multimap types find timing test - <a href = \"assoc_performance_tests.html#local\">local</a></div><div style = \"width: 100%; height: 20px\"></div></div>\n-</div>\n-</div>\n-</div>\n-</div>\n-<h2><a name=\"observations\" id=\"observations\">Observations</a></h2>\n-<p>See <a href=\"assoc_performance_tests.html#msc\">Observations::Mapping-Semantics\n-    Considerations</a>.</p>\n-</div>\n-</body>\n-</html>"}, {"sha": "03a62f52b0436666ab6829c36e48af3cc6321566", "filename": "libstdc++-v3/doc/html/ext/pb_ds/multimap_text_find_timing_test_large_s2p_hash_gcc.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_find_timing_test_large_s2p_hash_gcc.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_find_timing_test_large_s2p_hash_gcc.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_find_timing_test_large_s2p_hash_gcc.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "121af9e45a1b5e6946ab8bd8079e6d3f3aa170bf", "filename": "libstdc++-v3/doc/html/ext/pb_ds/multimap_text_find_timing_test_large_s2p_hash_local.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_find_timing_test_large_s2p_hash_local.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_find_timing_test_large_s2p_hash_local.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_find_timing_test_large_s2p_hash_local.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "4462d289afd0d90b8dabc9c453fcb24cd628d7ec", "filename": "libstdc++-v3/doc/html/ext/pb_ds/multimap_text_find_timing_test_large_s2p_hash_msvc.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_find_timing_test_large_s2p_hash_msvc.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_find_timing_test_large_s2p_hash_msvc.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_find_timing_test_large_s2p_hash_msvc.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "89e464481fd932d84c01a89f2f23c1c3132108e9", "filename": "libstdc++-v3/doc/html/ext/pb_ds/multimap_text_find_timing_test_large_s2p_tree_gcc.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_find_timing_test_large_s2p_tree_gcc.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_find_timing_test_large_s2p_tree_gcc.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_find_timing_test_large_s2p_tree_gcc.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "3ac90d56c860aa3999b2b74590d5fe20fc48d4c1", "filename": "libstdc++-v3/doc/html/ext/pb_ds/multimap_text_find_timing_test_large_s2p_tree_local.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_find_timing_test_large_s2p_tree_local.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_find_timing_test_large_s2p_tree_local.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_find_timing_test_large_s2p_tree_local.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "20320953e0d7f7d28f7a12161cb6f9d24bb73b58", "filename": "libstdc++-v3/doc/html/ext/pb_ds/multimap_text_find_timing_test_large_s2p_tree_msvc.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_find_timing_test_large_s2p_tree_msvc.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_find_timing_test_large_s2p_tree_msvc.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_find_timing_test_large_s2p_tree_msvc.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "1b379d821c35a459d3ceac4e050c6faaa96a0340", "filename": "libstdc++-v3/doc/html/ext/pb_ds/multimap_text_find_timing_test_small.html", "status": "removed", "additions": 0, "deletions": 215, "changes": 215, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_find_timing_test_small.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_find_timing_test_small.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_find_timing_test_small.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7", "patch": "@@ -1,215 +0,0 @@\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n-    \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n-<head>\n-<meta name=\"generator\" content=\"HTML Tidy for Linux/x86 (vers 12 April 2005), see www.w3.org\" />\n-<title>\"Multimap\" Text Find Timing Test with Small Average\n-  Secondary-Key to Primary-Key Ratio</title>\n-<meta http-equiv=\"Content-Type\" content=\"text/html; charset=us-ascii\" />\n-</head>\n-<body>\n-<div id=\"page\">\n-<h1>\"Multimap\" Text Find Timing Test with Small Average\n-    Secondary-Key to Primary-Key Ratio</h1>\n-<h2><a name=\"description\" id=\"description\">Description</a></h2>\n-<p>This test inserts a number of pairs into a container. The\n-    first item of each pair is a string from an arbitrary text\n-    [<a href=\"references.html#wickland96thirty\">wickland96thirty</a>], and\n-    the second is a uniform i.i.d.integer. The container is a\n-    \"multimap\" - it considers the first member of each pair as a\n-    primary key, and the second member of each pair as a secondary\n-    key (see <a href=\"motivation.html#assoc_mapping_semantics\">Motivation::Associative\n-    Containers::Alternative to Multiple Equivalent Keys</a>). There\n-    are 400 distinct primary keys, and the ratio of secondary keys\n-    to primary keys ranges from 1 to 5.</p>\n-<p>The test measures the average find-time as a function of the\n-    number of values inserted. For <tt>pb_ds</tt>'s containers, it\n-    finds the secondary key from a container obtained from finding\n-    a primary key. For the native multimaps, it searches a range\n-    obtained using <tt>std::equal_range</tt> on a primary key.</p>\n-<p>(The test was executed with <a href=\"http://gcc.gnu.org/viewcvs/*checkout*/trunk/libstdc%2B%2B-v3/testsuite/performance/ext/pb_ds/multimap_text_find_timing_small.cc\"><tt>multimap_text_find_timing_test</tt></a>\n-    thirty_years_among_the_dead_preproc.txt 400 1 1 6)</p>\n-<h2><a name=\"purpose\" id=\"purpose\">Purpose</a></h2>\n-<p>The test checks the find-time scalability of different\n-    \"multimap\" designs (see <a href=\"motivation.html#assoc_mapping_semantics\">Motivation::Associative\n-    Containers::Mapping Semantics</a>).</p>\n-<h2><a name=\"results\" id=\"results\">Results</a></h2>\n-<p>Figures <a href=\"#NTG\">NTG</a>, <a href=\"#NTM\">NTM</a>, and\n-    <a href=\"#NTL\">NTL</a> show the results for \"multimaps\" which\n-    use a tree-based container for primary keys, in <a href=\"assoc_performance_tests.html#gcc\"><u>g++</u></a>, <a href=\"assoc_performance_tests.html#msvc\"><u>msvc++</u></a>, and\n-    <a href=\"assoc_performance_tests.html#local\"><u>local</u></a>,\n-    respectively; Figures <a href=\"#NHG\"></a>NHG, <a href=\"#NHM\">NHM</a>, and <a href=\"#NHL\">NHL</a> show the results for\n-    \"multimaps\" which use a hash-based container for primary keys,\n-    in <a href=\"assoc_performance_tests.html#gcc\"><u>g++</u></a>,\n-    <a href=\"assoc_performance_tests.html#msvc\"><u>msvc++</u></a>,\n-    and <a href=\"assoc_performance_tests.html#local\"><u>local</u></a>,\n-    respectively.</p>\n-<div id=\"NTG_res_div\">\n-<div id=\"NTG_gcc\">\n-<div id=\"NTG_multimap_text_find_timing_test_small_s2p_tree\">\n-<div id=\"NTG_assoc\">\n-<div id=\"NHG_Native_and_primary_tree-based_multimap_types_find_timing_test\"><div style=\"border-style: dotted; border-width: 1px; border-color: lightgray\"><h6 class=\"c1\"><a name=\"NTG\" id=\"NTG\"><img src=\"multimap_text_find_timing_test_small_s2p_tree_gcc.png\" alt=\"no image\" /></a></h6>NTG: NHG Native and primary tree-based multimap types find timing test - <a href=\"assoc_performance_tests.html#gcc\">g++</a><p>In the above figure, the names in the legends have the following meaning:</p>\n-<ol>\n-<li>\n-n_mmap-\n-<tt>std::multimap</tt></li>\n-<li>\n-rb_tree_mmap_lu_mtf_set-\n-<a href=\"tree.html\"><tt>tree</tt></a>\n- with <tt>Tag</tt> = <a href=\"rb_tree_tag.html\"><tt>rb_tree_tag</tt></a>\n-, and <tt>Node_Update</tt> = <a href=\"null_tree_node_update.html\"><tt>null_tree_node_update</tt></a>\n-, mapping each key to <a href=\"list_update.html\"><tt>list_update</tt></a>\n- with <tt>Update_Policy</tt> = <a href=\"move_to_front_lu_policy.html\"><tt>move_to_front_lu_policy</tt></a>\n-</li>\n-<li>\n-rb_tree_mmap_cc_hash_mask_exp_nea_lc_1div8_1div2_nsth_set-\n-<a href=\"tree.html\"><tt>tree</tt></a>\n- with <tt>Tag</tt> = <a href=\"rb_tree_tag.html\"><tt>rb_tree_tag</tt></a>\n-, and <tt>Node_Update</tt> = <a href=\"null_tree_node_update.html\"><tt>null_tree_node_update</tt></a>\n-, mapping each key to <a href=\"cc_hash_table.html\"><tt>cc_hash_table</tt></a>\n-with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mask_range_hashing.html\"><tt>direct_mask_range_hashing</tt></a>\n-, and <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_exponential_size_policy.html\"><tt>hash_exponential_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/2</i></li>\n-</ol>\n-</div><div style=\"width: 100%; height: 20px\"></div></div>\n-</div>\n-</div>\n-</div>\n-</div>\n-<div id=\"NTM_res_div\">\n-<div id=\"NTM_msvc\">\n-<div id=\"NTM_multimap_text_find_timing_test_small_s2p_tree\">\n-<div id=\"NTM_assoc\">\n-<div id=\"NHM_Native_and_primary_tree-based_multimap_types_find_timing_test\"><div style=\"border-style: dotted; border-width: 1px; border-color: lightgray\"><h6 class=\"c1\"><a name=\"NTM\" id=\"NTM\"><img src=\"multimap_text_find_timing_test_small_s2p_tree_msvc.png\" alt=\"no image\" /></a></h6>NTM: NHM Native and primary tree-based multimap types find timing test - <a href=\"assoc_performance_tests.html#msvc\">msvc++</a><p>In the above figure, the names in the legends have the following meaning:</p>\n-<ol>\n-<li>\n-n_mmap-\n-<tt>std::multimap</tt></li>\n-<li>\n-rb_tree_mmap_lu_mtf_set-\n-<a href=\"tree.html\"><tt>tree</tt></a>\n- with <tt>Tag</tt> = <a href=\"rb_tree_tag.html\"><tt>rb_tree_tag</tt></a>\n-, and <tt>Node_Update</tt> = <a href=\"null_tree_node_update.html\"><tt>null_tree_node_update</tt></a>\n-, mapping each key to <a href=\"list_update.html\"><tt>list_update</tt></a>\n- with <tt>Update_Policy</tt> = <a href=\"move_to_front_lu_policy.html\"><tt>move_to_front_lu_policy</tt></a>\n-</li>\n-<li>\n-rb_tree_mmap_cc_hash_mask_exp_nea_lc_1div8_1div2_nsth_set-\n-<a href=\"tree.html\"><tt>tree</tt></a>\n- with <tt>Tag</tt> = <a href=\"rb_tree_tag.html\"><tt>rb_tree_tag</tt></a>\n-, and <tt>Node_Update</tt> = <a href=\"null_tree_node_update.html\"><tt>null_tree_node_update</tt></a>\n-, mapping each key to <a href=\"cc_hash_table.html\"><tt>cc_hash_table</tt></a>\n-with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mask_range_hashing.html\"><tt>direct_mask_range_hashing</tt></a>\n-, and <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_exponential_size_policy.html\"><tt>hash_exponential_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/2</i></li>\n-</ol>\n-</div><div style=\"width: 100%; height: 20px\"></div></div>\n-</div>\n-</div>\n-</div>\n-</div>\n-<div id=\"NTL_res_div\">\n-<div id=\"NTL_local\">\n-<div id=\"NTL_multimap_text_find_timing_test_small_s2p_tree\">\n-<div id=\"NTL_assoc\">\n-<div id=\"NTL_Native_and_primary_tree-based_multimap_types_find_timing_test\"><div style = \"border-style: dotted; border-width: 1px; border-color: lightgray\"><h6 class=\"c1\"><a name=\"NTL\" id= \"NTL\"><img src=\"multimap_text_find_timing_test_small_s2p_tree_local.png\" alt=\"no image\" /></a></h6>NTL: Native and primary tree-based multimap types find timing test - <a href = \"assoc_performance_tests.html#local\">local</a></div><div style = \"width: 100%; height: 20px\"></div></div>\n-</div>\n-</div>\n-</div>\n-</div>\n-<div id=\"NHG_res_div\">\n-<div id=\"NHG_gcc\">\n-<div id=\"NHG_multimap_text_find_timing_test_small_s2p_hash\">\n-<div id=\"NHG_assoc\">\n-<div id=\"NHG_Native_and_primary_hash-based_multimap_types_find_timing_test\"><div style=\"border-style: dotted; border-width: 1px; border-color: lightgray\"><h6 class=\"c1\"><a name=\"NHG\" id=\"NHG\"><img src=\"multimap_text_find_timing_test_small_s2p_hash_gcc.png\" alt=\"no image\" /></a></h6>NHG: Native and primary hash-based multimap types find timing test - <a href=\"assoc_performance_tests.html#gcc\">g++</a><p>In the above figure, the names in the legends have the following meaning:</p>\n-<ol>\n-<li>\n-n_hash_mmap-\n-<tt>__gnucxx::hash_multimap</tt></li>\n-<li>\n-cc_hash_mask_exp_nea_lc_1div8_1div2_nsth_mmap_lu_mtf_set-\n-<a href=\"cc_hash_table.html\"><tt>cc_hash_table</tt></a>\n-with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mask_range_hashing.html\"><tt>direct_mask_range_hashing</tt></a>\n-, and <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_exponential_size_policy.html\"><tt>hash_exponential_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/2</i>, mapping each key to <a href=\"list_update.html\"><tt>list_update</tt></a>\n- with <tt>Update_Policy</tt> = <a href=\"move_to_front_lu_policy.html\"><tt>move_to_front_lu_policy</tt></a>\n-</li>\n-<li>\n-cc_hash_mask_exp_nea_lc_1div8_1div2_nsth_mmap_cc_hash_mask_exp_nea_lc_1div8_1div2_nsth_set-\n-<a href=\"cc_hash_table.html\"><tt>cc_hash_table</tt></a>\n-with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mask_range_hashing.html\"><tt>direct_mask_range_hashing</tt></a>\n-, and <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_exponential_size_policy.html\"><tt>hash_exponential_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/2</i>, mapping each key to <a href=\"cc_hash_table.html\"><tt>cc_hash_table</tt></a>\n-with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mask_range_hashing.html\"><tt>direct_mask_range_hashing</tt></a>\n-, and <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_exponential_size_policy.html\"><tt>hash_exponential_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/2</i></li>\n-</ol>\n-</div><div style=\"width: 100%; height: 20px\"></div></div>\n-</div>\n-</div>\n-</div>\n-</div>\n-<div id=\"NHM_res_div\">\n-<div id=\"NHM_msvc\">\n-<div id=\"NHM_multimap_text_find_timing_test_small_s2p_hash\">\n-<div id=\"NHM_assoc\">\n-<div id=\"NHM_Native_and_primary_hash-based_multimap_types_find_timing_test\"><div style=\"border-style: dotted; border-width: 1px; border-color: lightgray\"><h6 class=\"c1\"><a name=\"NHM\" id=\"NHM\"><img src=\"multimap_text_find_timing_test_small_s2p_hash_msvc.png\" alt=\"no image\" /></a></h6>NHM: Native and primary hash-based multimap types find timing test - <a href=\"assoc_performance_tests.html#msvc\">msvc++</a><p>In the above figure, the names in the legends have the following meaning:</p>\n-<ol>\n-<li>\n-n_hash_mmap-\n-<tt>stdext::hash_multimap</tt></li>\n-<li>\n-cc_hash_mask_exp_nea_lc_1div8_1div2_nsth_mmap_lu_mtf_set-\n-<a href=\"cc_hash_table.html\"><tt>cc_hash_table</tt></a>\n-with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mask_range_hashing.html\"><tt>direct_mask_range_hashing</tt></a>\n-, and <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_exponential_size_policy.html\"><tt>hash_exponential_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/2</i>, mapping each key to <a href=\"list_update.html\"><tt>list_update</tt></a>\n- with <tt>Update_Policy</tt> = <a href=\"move_to_front_lu_policy.html\"><tt>move_to_front_lu_policy</tt></a>\n-</li>\n-<li>\n-cc_hash_mask_exp_nea_lc_1div8_1div2_nsth_mmap_cc_hash_mask_exp_nea_lc_1div8_1div2_nsth_set-\n-<a href=\"cc_hash_table.html\"><tt>cc_hash_table</tt></a>\n-with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mask_range_hashing.html\"><tt>direct_mask_range_hashing</tt></a>\n-, and <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_exponential_size_policy.html\"><tt>hash_exponential_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/2</i>, mapping each key to <a href=\"cc_hash_table.html\"><tt>cc_hash_table</tt></a>\n-with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mask_range_hashing.html\"><tt>direct_mask_range_hashing</tt></a>\n-, and <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_exponential_size_policy.html\"><tt>hash_exponential_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/2</i></li>\n-</ol>\n-</div><div style=\"width: 100%; height: 20px\"></div></div>\n-</div>\n-</div>\n-</div>\n-</div>\n-<div id=\"NHL_res_div\">\n-<div id=\"NHL_local\">\n-<div id=\"NHL_multimap_text_find_timing_test_small_s2p_hash\">\n-<div id=\"NHL_assoc\">\n-<div id=\"NHL__Native_and_primary_hash-based_multimap_types_find_timing_test\"><div style = \"border-style: dotted; border-width: 1px; border-color: lightgray\"><h6 class=\"c1\"><a name=\"NHL\" id= \"NHL\"><img src=\"multimap_text_find_timing_test_small_s2p_hash_local.png\" alt=\"no image\" /></a></h6>NHL:  Native and primary hash-based multimap types find timing test - <a href = \"assoc_performance_tests.html#local\">local</a></div><div style = \"width: 100%; height: 20px\"></div></div>\n-</div>\n-</div>\n-</div>\n-</div>\n-<h2><a name=\"observations\" id=\"observations\">Observations</a></h2>\n-<p>See <a href=\"assoc_performance_tests.html#msc\">Observations::Mapping-Semantics\n-    Considerations</a>.</p>\n-</div>\n-</body>\n-</html>"}, {"sha": "60e850937a9eebfeeab0765a360102d6a75d7879", "filename": "libstdc++-v3/doc/html/ext/pb_ds/multimap_text_find_timing_test_small_s2p_hash_gcc.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_find_timing_test_small_s2p_hash_gcc.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_find_timing_test_small_s2p_hash_gcc.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_find_timing_test_small_s2p_hash_gcc.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "4fc3d594afc943b6bcb20b5e37602781a3166b20", "filename": "libstdc++-v3/doc/html/ext/pb_ds/multimap_text_find_timing_test_small_s2p_hash_local.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_find_timing_test_small_s2p_hash_local.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_find_timing_test_small_s2p_hash_local.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_find_timing_test_small_s2p_hash_local.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "11aa9e07b6a0dcc4ea8452390a2e2a8e479432a8", "filename": "libstdc++-v3/doc/html/ext/pb_ds/multimap_text_find_timing_test_small_s2p_hash_msvc.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_find_timing_test_small_s2p_hash_msvc.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_find_timing_test_small_s2p_hash_msvc.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_find_timing_test_small_s2p_hash_msvc.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "f54369b15b4a147f3348d9407344d6d670abe2c6", "filename": "libstdc++-v3/doc/html/ext/pb_ds/multimap_text_find_timing_test_small_s2p_tree_gcc.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_find_timing_test_small_s2p_tree_gcc.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_find_timing_test_small_s2p_tree_gcc.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_find_timing_test_small_s2p_tree_gcc.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "123c3a648b80bd5e0376a54cb41aa87be12c2b00", "filename": "libstdc++-v3/doc/html/ext/pb_ds/multimap_text_find_timing_test_small_s2p_tree_local.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_find_timing_test_small_s2p_tree_local.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_find_timing_test_small_s2p_tree_local.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_find_timing_test_small_s2p_tree_local.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "035fd9389b60423fdcd7dd07f53cfbb3ba784d99", "filename": "libstdc++-v3/doc/html/ext/pb_ds/multimap_text_find_timing_test_small_s2p_tree_msvc.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_find_timing_test_small_s2p_tree_msvc.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_find_timing_test_small_s2p_tree_msvc.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_find_timing_test_small_s2p_tree_msvc.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "4affbf44054fcb24895339ad7b54ab914050a940", "filename": "libstdc++-v3/doc/html/ext/pb_ds/multimap_text_insert_mem_usage_test_large.html", "status": "removed", "additions": 0, "deletions": 210, "changes": 210, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_insert_mem_usage_test_large.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_insert_mem_usage_test_large.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_insert_mem_usage_test_large.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7", "patch": "@@ -1,210 +0,0 @@\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n-    \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n-<head>\n-<meta name=\"generator\" content=\"HTML Tidy for Linux/x86 (vers 12 April 2005), see www.w3.org\" />\n-<title>Hash-List \"Multimap\" Text Memory Use Test with Large\n-  Average Secondary-Key to Primary-Key Ratio</title>\n-<meta http-equiv=\"Content-Type\" content=\"text/html; charset=us-ascii\" />\n-</head>\n-<body>\n-<div id=\"page\">\n-<h1>\"Multimap\" Text Memory Use Test with Large Average\n-    Secondary-Key to Primary-Key Ratio</h1>\n-<h2><a name=\"description\" id=\"description\">Description</a></h2>\n-<p>This test inserts a number of pairs into a container. The\n-    first item of each pair is a string from an arbitrary text\n-    [<a href=\"references.html#wickland96thirty\">wickland96thirty</a>], and\n-    the second is a uniform i.i.d.integer. The container is a\n-    \"multimap\" - it considers the first member of each pair as a\n-    primary key, and the second member of each pair as a secondary\n-    key (see <a href=\"motivation.html#assoc_mapping_semantics\">Motivation::Associative\n-    Containers::Alternative to Multiple Equivalent Keys</a>). There\n-    are 100 distinct primary keys. The test measures the memory use\n-    as a function of the number of values inserted.</p>\n-<p>(The test was executed with <a href=\"http://gcc.gnu.org/viewcvs/*checkout*/trunk/libstdc%2B%2B-v3/testsuite/performance/ext/pb_ds/multimap_text_insert_mem_usage_large.cc\"><tt>multimap_text_insert_mem_usage_test</tt></a>\n-    thirty_years_among_the_dead_preproc.txt 100 200 2100 100)</p>\n-<h2><a name=\"purpose\" id=\"purpose\">Purpose</a></h2>\n-<p>The test checks the memory scalability of different\n-    \"multimap\" designs (see <a href=\"motivation.html#assoc_mapping_semantics\">Motivation::Associative\n-    Containers::Mapping Semantics</a>).</p>\n-<h2><a name=\"results\" id=\"results\">Results</a></h2>\n-<p>Figures <a href=\"#NTG\">NTG</a>, <a href=\"#NTM\">NTM</a>, and\n-    <a href=\"#NTL\">NTL</a> show the results for \"multimaps\" which\n-    use a tree-based container for primary keys, in <a href=\"assoc_performance_tests.html#gcc\"><u>g++</u></a>, <a href=\"assoc_performance_tests.html#msvc\"><u>msvc++</u></a>, and\n-    <a href=\"assoc_performance_tests.html#local\"><u>local</u></a>,\n-    respectively; Figures <a href=\"#NHG\"></a>NHG, <a href=\"#NHM\">NHM</a>, and <a href=\"#NHL\">NHL</a> show the results for\n-    \"multimaps\" which use a hash-based container for primary keys,\n-    in <a href=\"assoc_performance_tests.html#gcc\"><u>g++</u></a>,\n-    <a href=\"assoc_performance_tests.html#msvc\"><u>msvc++</u></a>,\n-    and <a href=\"assoc_performance_tests.html#local\"><u>local</u></a>,\n-    respectively.</p>\n-<div id=\"NTG_res_div\">\n-<div id=\"NTG_gcc\">\n-<div id=\"NTG_multimap_text_insert_mem_usage_test_large_s2p_tree\">\n-<div id=\"NTG_assoc\">\n-<div id=\"NHG_Native_and_primary_tree-based_multimap_types_mem_usage_test\"><div style=\"border-style: dotted; border-width: 1px; border-color: lightgray\"><h6 class=\"c1\"><a name=\"NTG\" id=\"NTG\"><img src=\"multimap_text_insert_mem_usage_test_large_s2p_tree_gcc.png\" alt=\"no image\" /></a></h6>NTG: NHG Native and primary tree-based multimap types mem usage test - <a href=\"assoc_performance_tests.html#gcc\">g++</a><p>In the above figure, the names in the legends have the following meaning:</p>\n-<ol>\n-<li>\n-rb_tree_mmap_cc_hash_mask_exp_nea_lc_1div8_1div2_nsth_set-\n-<a href=\"tree.html\"><tt>tree</tt></a>\n- with <tt>Tag</tt> = <a href=\"rb_tree_tag.html\"><tt>rb_tree_tag</tt></a>\n-, and <tt>Node_Update</tt> = <a href=\"null_tree_node_update.html\"><tt>null_tree_node_update</tt></a>\n-, mapping each key to <a href=\"cc_hash_table.html\"><tt>cc_hash_table</tt></a>\n-with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mask_range_hashing.html\"><tt>direct_mask_range_hashing</tt></a>\n-, and <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_exponential_size_policy.html\"><tt>hash_exponential_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/2</i></li>\n-<li>\n-n_mmap-\n-<tt>std::multimap</tt></li>\n-<li>\n-rb_tree_mmap_lu_mtf_set-\n-<a href=\"tree.html\"><tt>tree</tt></a>\n- with <tt>Tag</tt> = <a href=\"rb_tree_tag.html\"><tt>rb_tree_tag</tt></a>\n-, and <tt>Node_Update</tt> = <a href=\"null_tree_node_update.html\"><tt>null_tree_node_update</tt></a>\n-, mapping each key to <a href=\"list_update.html\"><tt>list_update</tt></a>\n- with <tt>Update_Policy</tt> = <a href=\"move_to_front_lu_policy.html\"><tt>move_to_front_lu_policy</tt></a>\n-</li>\n-</ol>\n-</div><div style=\"width: 100%; height: 20px\"></div></div>\n-</div>\n-</div>\n-</div>\n-</div>\n-<div id=\"NTM_res_div\">\n-<div id=\"NTM_msvc\">\n-<div id=\"NTM_multimap_text_insert_mem_usage_test_large_s2p_tree\">\n-<div id=\"NTM_assoc\">\n-<div id=\"NHM_Native_and_primary_tree-based_multimap_types_mem_usage_test\"><div style=\"border-style: dotted; border-width: 1px; border-color: lightgray\"><h6 class=\"c1\"><a name=\"NTM\" id=\"NTM\"><img src=\"multimap_text_insert_mem_usage_test_large_s2p_tree_msvc.png\" alt=\"no image\" /></a></h6>NTM: NHM Native and primary tree-based multimap types mem usage test - <a href=\"assoc_performance_tests.html#msvc\">msvc++</a><p>In the above figure, the names in the legends have the following meaning:</p>\n-<ol>\n-<li>\n-n_mmap-\n-<tt>std::multimap</tt></li>\n-<li>\n-rb_tree_mmap_cc_hash_mask_exp_nea_lc_1div8_1div2_nsth_set-\n-<a href=\"tree.html\"><tt>tree</tt></a>\n- with <tt>Tag</tt> = <a href=\"rb_tree_tag.html\"><tt>rb_tree_tag</tt></a>\n-, and <tt>Node_Update</tt> = <a href=\"null_tree_node_update.html\"><tt>null_tree_node_update</tt></a>\n-, mapping each key to <a href=\"cc_hash_table.html\"><tt>cc_hash_table</tt></a>\n-with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mask_range_hashing.html\"><tt>direct_mask_range_hashing</tt></a>\n-, and <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_exponential_size_policy.html\"><tt>hash_exponential_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/2</i></li>\n-<li>\n-rb_tree_mmap_lu_mtf_set-\n-<a href=\"tree.html\"><tt>tree</tt></a>\n- with <tt>Tag</tt> = <a href=\"rb_tree_tag.html\"><tt>rb_tree_tag</tt></a>\n-, and <tt>Node_Update</tt> = <a href=\"null_tree_node_update.html\"><tt>null_tree_node_update</tt></a>\n-, mapping each key to <a href=\"list_update.html\"><tt>list_update</tt></a>\n- with <tt>Update_Policy</tt> = <a href=\"move_to_front_lu_policy.html\"><tt>move_to_front_lu_policy</tt></a>\n-</li>\n-</ol>\n-</div><div style=\"width: 100%; height: 20px\"></div></div>\n-</div>\n-</div>\n-</div>\n-</div>\n-<div id=\"NTL_res_div\">\n-<div id=\"NTL_local\">\n-<div id=\"NTL_multimap_text_insert_mem_usage_test_large_s2p_tree\">\n-<div id=\"NTL_assoc\">\n-<div id=\"NTL_Native_and_primary_tree-based_multimap_types_mem_usage_test\"><div style = \"border-style: dotted; border-width: 1px; border-color: lightgray\"><h6 class=\"c1\"><a name=\"NTL\" id= \"NTL\"><img src=\"multimap_text_insert_mem_usage_test_large_s2p_tree_local.png\" alt=\"no image\" /></a></h6>NTL: Native and primary tree-based multimap types mem usage test - <a href = \"assoc_performance_tests.html#local\">local</a></div><div style = \"width: 100%; height: 20px\"></div></div>\n-</div>\n-</div>\n-</div>\n-</div>\n-<div id=\"NHG_res_div\">\n-<div id=\"NHG_gcc\">\n-<div id=\"NHG_multimap_text_insert_mem_usage_test_large_s2p_hash\">\n-<div id=\"NHG_assoc\">\n-<div id=\"NHG_Native_and_primary_hash-based_multimap_types_mem_usage_test\"><div style=\"border-style: dotted; border-width: 1px; border-color: lightgray\"><h6 class=\"c1\"><a name=\"NHG\" id=\"NHG\"><img src=\"multimap_text_insert_mem_usage_test_large_s2p_hash_gcc.png\" alt=\"no image\" /></a></h6>NHG: Native and primary hash-based multimap types mem usage test - <a href=\"assoc_performance_tests.html#gcc\">g++</a><p>In the above figure, the names in the legends have the following meaning:</p>\n-<ol>\n-<li>\n-cc_hash_mask_exp_nea_lc_1div8_1div2_nsth_mmap_cc_hash_mask_exp_nea_lc_1div8_1div2_nsth_set-\n-<a href=\"cc_hash_table.html\"><tt>cc_hash_table</tt></a>\n-with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mask_range_hashing.html\"><tt>direct_mask_range_hashing</tt></a>\n-, and <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_exponential_size_policy.html\"><tt>hash_exponential_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/2</i>, mapping each key to <a href=\"cc_hash_table.html\"><tt>cc_hash_table</tt></a>\n-with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mask_range_hashing.html\"><tt>direct_mask_range_hashing</tt></a>\n-, and <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_exponential_size_policy.html\"><tt>hash_exponential_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/2</i></li>\n-<li>\n-n_hash_mmap-\n-<tt>__gnucxx::hash_multimap</tt></li>\n-<li>\n-cc_hash_mask_exp_nea_lc_1div8_1div2_nsth_mmap_lu_mtf_set-\n-<a href=\"cc_hash_table.html\"><tt>cc_hash_table</tt></a>\n-with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mask_range_hashing.html\"><tt>direct_mask_range_hashing</tt></a>\n-, and <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_exponential_size_policy.html\"><tt>hash_exponential_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/2</i>, mapping each key to <a href=\"list_update.html\"><tt>list_update</tt></a>\n- with <tt>Update_Policy</tt> = <a href=\"move_to_front_lu_policy.html\"><tt>move_to_front_lu_policy</tt></a>\n-</li>\n-</ol>\n-</div><div style=\"width: 100%; height: 20px\"></div></div>\n-</div>\n-</div>\n-</div>\n-</div>\n-<div id=\"NHM_res_div\">\n-<div id=\"NHM_msvc\">\n-<div id=\"NHM_multimap_text_insert_mem_usage_test_large_s2p_hash\">\n-<div id=\"NHM_assoc\">\n-<div id=\"NHM_Native_and_primary_hash-based_multimap_types_mem_usage_test\"><div style=\"border-style: dotted; border-width: 1px; border-color: lightgray\"><h6 class=\"c1\"><a name=\"NHM\" id=\"NHM\"><img src=\"multimap_text_insert_mem_usage_test_large_s2p_hash_msvc.png\" alt=\"no image\" /></a></h6>NHM: Native and primary hash-based multimap types mem usage test - <a href=\"assoc_performance_tests.html#msvc\">msvc++</a><p>In the above figure, the names in the legends have the following meaning:</p>\n-<ol>\n-<li>\n-n_hash_mmap-\n-<tt>stdext::hash_multimap</tt></li>\n-<li>\n-cc_hash_mask_exp_nea_lc_1div8_1div2_nsth_mmap_cc_hash_mask_exp_nea_lc_1div8_1div2_nsth_set-\n-<a href=\"cc_hash_table.html\"><tt>cc_hash_table</tt></a>\n-with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mask_range_hashing.html\"><tt>direct_mask_range_hashing</tt></a>\n-, and <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_exponential_size_policy.html\"><tt>hash_exponential_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/2</i>, mapping each key to <a href=\"cc_hash_table.html\"><tt>cc_hash_table</tt></a>\n-with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mask_range_hashing.html\"><tt>direct_mask_range_hashing</tt></a>\n-, and <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_exponential_size_policy.html\"><tt>hash_exponential_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/2</i></li>\n-<li>\n-cc_hash_mask_exp_nea_lc_1div8_1div2_nsth_mmap_lu_mtf_set-\n-<a href=\"cc_hash_table.html\"><tt>cc_hash_table</tt></a>\n-with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mask_range_hashing.html\"><tt>direct_mask_range_hashing</tt></a>\n-, and <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_exponential_size_policy.html\"><tt>hash_exponential_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/2</i>, mapping each key to <a href=\"list_update.html\"><tt>list_update</tt></a>\n- with <tt>Update_Policy</tt> = <a href=\"move_to_front_lu_policy.html\"><tt>move_to_front_lu_policy</tt></a>\n-</li>\n-</ol>\n-</div><div style=\"width: 100%; height: 20px\"></div></div>\n-</div>\n-</div>\n-</div>\n-</div>\n-<div id=\"NHL_res_div\">\n-<div id=\"NHL_local\">\n-<div id=\"NHL_multimap_text_insert_mem_usage_test_large_s2p_hash\">\n-<div id=\"NHL_assoc\">\n-<div id=\"NHL__Native_and_primary_hash-based_multimap_types_mem_usage_test\"><div style = \"border-style: dotted; border-width: 1px; border-color: lightgray\"><h6 class=\"c1\"><a name=\"NHL\" id= \"NHL\"><img src=\"multimap_text_insert_mem_usage_test_large_s2p_hash_local.png\" alt=\"no image\" /></a></h6>NHL:  Native and primary hash-based multimap types mem usage test - <a href = \"assoc_performance_tests.html#local\">local</a></div><div style = \"width: 100%; height: 20px\"></div></div>\n-</div>\n-</div>\n-</div>\n-</div>\n-<h2><a name=\"observations\" id=\"observations\">Observations</a></h2>\n-<p>See <a href=\"assoc_performance_tests.html#msc\">Observations::Mapping-Semantics\n-    Considerations</a>.</p>\n-</div>\n-</body>\n-</html>"}, {"sha": "51a3f8d61c1ee4bdeaacb30d74eedabe3a3b4f63", "filename": "libstdc++-v3/doc/html/ext/pb_ds/multimap_text_insert_mem_usage_test_large_s2p_hash_gcc.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_insert_mem_usage_test_large_s2p_hash_gcc.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_insert_mem_usage_test_large_s2p_hash_gcc.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_insert_mem_usage_test_large_s2p_hash_gcc.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "73a35cef612f6a565f8cd4624aa2faed6123fa87", "filename": "libstdc++-v3/doc/html/ext/pb_ds/multimap_text_insert_mem_usage_test_large_s2p_hash_local.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_insert_mem_usage_test_large_s2p_hash_local.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_insert_mem_usage_test_large_s2p_hash_local.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_insert_mem_usage_test_large_s2p_hash_local.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "3a938c0bb0f68ffd71499685cb5a2778ade3022a", "filename": "libstdc++-v3/doc/html/ext/pb_ds/multimap_text_insert_mem_usage_test_large_s2p_hash_msvc.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_insert_mem_usage_test_large_s2p_hash_msvc.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_insert_mem_usage_test_large_s2p_hash_msvc.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_insert_mem_usage_test_large_s2p_hash_msvc.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "a992d8f7cfbede6789f7acba7d822fe6242c3388", "filename": "libstdc++-v3/doc/html/ext/pb_ds/multimap_text_insert_mem_usage_test_large_s2p_tree_gcc.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_insert_mem_usage_test_large_s2p_tree_gcc.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_insert_mem_usage_test_large_s2p_tree_gcc.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_insert_mem_usage_test_large_s2p_tree_gcc.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "fce364cb318d8814b72e0c6cb42c0fa4e9e58d2f", "filename": "libstdc++-v3/doc/html/ext/pb_ds/multimap_text_insert_mem_usage_test_large_s2p_tree_local.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_insert_mem_usage_test_large_s2p_tree_local.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_insert_mem_usage_test_large_s2p_tree_local.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_insert_mem_usage_test_large_s2p_tree_local.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "26841bd10732adc31dadb90a56da4aa3b8223d9f", "filename": "libstdc++-v3/doc/html/ext/pb_ds/multimap_text_insert_mem_usage_test_large_s2p_tree_msvc.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_insert_mem_usage_test_large_s2p_tree_msvc.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_insert_mem_usage_test_large_s2p_tree_msvc.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_insert_mem_usage_test_large_s2p_tree_msvc.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "462fce4ca361a7e48ab54f8cb9a86c35779a6869", "filename": "libstdc++-v3/doc/html/ext/pb_ds/multimap_text_insert_mem_usage_test_small.html", "status": "removed", "additions": 0, "deletions": 212, "changes": 212, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_insert_mem_usage_test_small.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_insert_mem_usage_test_small.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_insert_mem_usage_test_small.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7", "patch": "@@ -1,212 +0,0 @@\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n-    \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n-<head>\n-<meta name=\"generator\" content=\"HTML Tidy for Linux/x86 (vers 12 April 2005), see www.w3.org\" />\n-<title>Hash-List \"Multimap\" Text Memory Use Test with Small\n-  Average Secondary-Key to Primary-Key Ratio</title>\n-<meta http-equiv=\"Content-Type\" content=\"text/html; charset=us-ascii\" />\n-</head>\n-<body>\n-<div id=\"page\">\n-<h1>\"Multimap\" Text Memory Use Test with Small Average\n-    Secondary-Key to Primary-Key Ratio</h1>\n-<h2><a name=\"description\" id=\"description\">Description</a></h2>\n-<p>This test inserts a number of pairs into a container. The\n-    first item of each pair is a string from an arbitrary text\n-    [<a href=\"references.html#wickland96thirty\">wickland96thirty</a>], and\n-    the second is a uniform i.i.d.integer. The container is a\n-    \"multimap\" - it considers the first member of each pair as a\n-    primary key, and the second member of each pair as a secondary\n-    key (see <a href=\"motivation.html#assoc_mapping_semantics\">Motivation::Associative\n-    Containers::Alternative to Multiple Equivalent Keys</a>). There\n-    are 100 distinct primary keys, and the ratio of secondary keys\n-    to primary keys ranges to about 20.</p>\n-<p>The test measures the memory use as a function of the number\n-    of values inserted.</p>\n-<p>(The test was executed with <a href=\"http://gcc.gnu.org/viewcvs/*checkout*/trunk/libstdc%2B%2B-v3/testsuite/performance/ext/pb_ds/multimap_text_insert_mem_usage_small.cc\"><tt>multimap_text_insert_mem_usage_test</tt></a>\n-    thirty_years_among_the_dead_preproc.txt 100 3 4 4)</p>\n-<h2><a name=\"purpose\" id=\"purpose\">Purpose</a></h2>\n-<p>The test checks the memory scalability of different\n-    \"multimap\" designs (see <a href=\"motivation.html#assoc_mapping_semantics\">Motivation::Associative\n-    Containers::Mapping Semantics</a>).</p>\n-<h2><a name=\"results\" id=\"results\">Results</a></h2>\n-<p>Figures <a href=\"#NTG\">NTG</a>, <a href=\"#NTM\">NTM</a>, and\n-    <a href=\"#NTL\">NTL</a> show the results for \"multimaps\" which\n-    use a tree-based container for primary keys, in <a href=\"assoc_performance_tests.html#gcc\"><u>g++</u></a>, <a href=\"assoc_performance_tests.html#msvc\"><u>msvc++</u></a>, and\n-    <a href=\"assoc_performance_tests.html#local\"><u>local</u></a>,\n-    respectively; Figures <a href=\"#NHG\"></a>NHG, <a href=\"#NHM\">NHM</a>, and <a href=\"#NHL\">NHL</a> show the results for\n-    \"multimaps\" which use a hash-based container for primary keys,\n-    in <a href=\"assoc_performance_tests.html#gcc\"><u>g++</u></a>,\n-    <a href=\"assoc_performance_tests.html#msvc\"><u>msvc++</u></a>,\n-    and <a href=\"assoc_performance_tests.html#local\"><u>local</u></a>,\n-    respectively.</p>\n-<div id=\"NTG_res_div\">\n-<div id=\"NTG_gcc\">\n-<div id=\"NTG_multimap_text_insert_mem_usage_test_small_s2p_tree\">\n-<div id=\"NTG_assoc\">\n-<div id=\"NTG_Native_and_primary_tree-based_multimap_types_mem_usage_test\"><div style=\"border-style: dotted; border-width: 1px; border-color: lightgray\"><h6 class=\"c1\"><a name=\"NTG\" id=\"NTG\"><img src=\"multimap_text_insert_mem_usage_test_small_s2p_tree_gcc.png\" alt=\"no image\" /></a></h6>NTG: Native and primary tree-based multimap types mem usage test - <a href=\"assoc_performance_tests.html#gcc\">g++</a><p>In the above figure, the names in the legends have the following meaning:</p>\n-<ol>\n-<li>\n-rb_tree_mmap_cc_hash_mask_exp_nea_lc_1div8_1div2_nsth_set-\n-<a href=\"tree.html\"><tt>tree</tt></a>\n- with <tt>Tag</tt> = <a href=\"rb_tree_tag.html\"><tt>rb_tree_tag</tt></a>\n-, and <tt>Node_Update</tt> = <a href=\"null_tree_node_update.html\"><tt>null_tree_node_update</tt></a>\n-, mapping each key to <a href=\"cc_hash_table.html\"><tt>cc_hash_table</tt></a>\n-with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mask_range_hashing.html\"><tt>direct_mask_range_hashing</tt></a>\n-, and <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_exponential_size_policy.html\"><tt>hash_exponential_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/2</i></li>\n-<li>\n-n_mmap-\n-<tt>std::multimap</tt></li>\n-<li>\n-rb_tree_mmap_lu_mtf_set-\n-<a href=\"tree.html\"><tt>tree</tt></a>\n- with <tt>Tag</tt> = <a href=\"rb_tree_tag.html\"><tt>rb_tree_tag</tt></a>\n-, and <tt>Node_Update</tt> = <a href=\"null_tree_node_update.html\"><tt>null_tree_node_update</tt></a>\n-, mapping each key to <a href=\"list_update.html\"><tt>list_update</tt></a>\n- with <tt>Update_Policy</tt> = <a href=\"move_to_front_lu_policy.html\"><tt>move_to_front_lu_policy</tt></a>\n-</li>\n-</ol>\n-</div><div style=\"width: 100%; height: 20px\"></div></div>\n-</div>\n-</div>\n-</div>\n-</div>\n-<div id=\"NTM_res_div\">\n-<div id=\"NTM_msvc\">\n-<div id=\"NTM_multimap_text_insert_mem_usage_test_small_s2p_tree\">\n-<div id=\"NTM_assoc\">\n-<div id=\"NHM_Native_and_primary_tree-based_multimap_types_mem_usage_test\"><div style=\"border-style: dotted; border-width: 1px; border-color: lightgray\"><h6 class=\"c1\"><a name=\"NTM\" id=\"NTM\"><img src=\"multimap_text_insert_mem_usage_test_small_s2p_tree_msvc.png\" alt=\"no image\" /></a></h6>NTM: NHM Native and primary tree-based multimap types mem usage test - <a href=\"assoc_performance_tests.html#msvc\">msvc++</a><p>In the above figure, the names in the legends have the following meaning:</p>\n-<ol>\n-<li>\n-rb_tree_mmap_cc_hash_mask_exp_nea_lc_1div8_1div2_nsth_set-\n-<a href=\"tree.html\"><tt>tree</tt></a>\n- with <tt>Tag</tt> = <a href=\"rb_tree_tag.html\"><tt>rb_tree_tag</tt></a>\n-, and <tt>Node_Update</tt> = <a href=\"null_tree_node_update.html\"><tt>null_tree_node_update</tt></a>\n-, mapping each key to <a href=\"cc_hash_table.html\"><tt>cc_hash_table</tt></a>\n-with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mask_range_hashing.html\"><tt>direct_mask_range_hashing</tt></a>\n-, and <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_exponential_size_policy.html\"><tt>hash_exponential_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/2</i></li>\n-<li>\n-n_mmap-\n-<tt>std::multimap</tt></li>\n-<li>\n-rb_tree_mmap_lu_mtf_set-\n-<a href=\"tree.html\"><tt>tree</tt></a>\n- with <tt>Tag</tt> = <a href=\"rb_tree_tag.html\"><tt>rb_tree_tag</tt></a>\n-, and <tt>Node_Update</tt> = <a href=\"null_tree_node_update.html\"><tt>null_tree_node_update</tt></a>\n-, mapping each key to <a href=\"list_update.html\"><tt>list_update</tt></a>\n- with <tt>Update_Policy</tt> = <a href=\"move_to_front_lu_policy.html\"><tt>move_to_front_lu_policy</tt></a>\n-</li>\n-</ol>\n-</div><div style=\"width: 100%; height: 20px\"></div></div>\n-</div>\n-</div>\n-</div>\n-</div>\n-<div id=\"NTL_res_div\">\n-<div id=\"NTL_local\">\n-<div id=\"NTL_multimap_text_insert_mem_usage_test_small_s2p_tree\">\n-<div id=\"NTL_assoc\">\n-<div id=\"NTL_Native_and_primary_tree-based_multimap_types_mem_usage_test\"><div style = \"border-style: dotted; border-width: 1px; border-color: lightgray\"><h6 class=\"c1\"><a name=\"NTL\" id= \"NTL\"><img src=\"multimap_text_insert_mem_usage_test_small_s2p_tree_local.png\" alt=\"no image\" /></a></h6>NTL: Native and primary tree-based multimap types mem usage test - <a href = \"assoc_performance_tests.html#local\">local</a></div><div style = \"width: 100%; height: 20px\"></div></div>\n-</div>\n-</div>\n-</div>\n-</div>\n-<div id=\"NHG_res_div\">\n-<div id=\"NHG_gcc\">\n-<div id=\"NHG_multimap_text_insert_mem_usage_test_small_s2p_hash\">\n-<div id=\"NHG_assoc\">\n-<div id=\"NHG_Native_and_primary_hash-based_multimap_types_mem_usage_test\"><div style=\"border-style: dotted; border-width: 1px; border-color: lightgray\"><h6 class=\"c1\"><a name=\"NHG\" id=\"NHG\"><img src=\"multimap_text_insert_mem_usage_test_small_s2p_hash_gcc.png\" alt=\"no image\" /></a></h6>NHG: Native and primary hash-based multimap types mem usage test - <a href=\"assoc_performance_tests.html#gcc\">g++</a><p>In the above figure, the names in the legends have the following meaning:</p>\n-<ol>\n-<li>\n-cc_hash_mask_exp_nea_lc_1div8_1div2_nsth_mmap_cc_hash_mask_exp_nea_lc_1div8_1div2_nsth_set-\n-<a href=\"cc_hash_table.html\"><tt>cc_hash_table</tt></a>\n-with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mask_range_hashing.html\"><tt>direct_mask_range_hashing</tt></a>\n-, and <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_exponential_size_policy.html\"><tt>hash_exponential_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/2</i>, mapping each key to <a href=\"cc_hash_table.html\"><tt>cc_hash_table</tt></a>\n-with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mask_range_hashing.html\"><tt>direct_mask_range_hashing</tt></a>\n-, and <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_exponential_size_policy.html\"><tt>hash_exponential_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/2</i></li>\n-<li>\n-n_hash_mmap-\n-<tt>__gnucxx::hash_multimap</tt></li>\n-<li>\n-cc_hash_mask_exp_nea_lc_1div8_1div2_nsth_mmap_lu_mtf_set-\n-<a href=\"cc_hash_table.html\"><tt>cc_hash_table</tt></a>\n-with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mask_range_hashing.html\"><tt>direct_mask_range_hashing</tt></a>\n-, and <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_exponential_size_policy.html\"><tt>hash_exponential_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/2</i>, mapping each key to <a href=\"list_update.html\"><tt>list_update</tt></a>\n- with <tt>Update_Policy</tt> = <a href=\"move_to_front_lu_policy.html\"><tt>move_to_front_lu_policy</tt></a>\n-</li>\n-</ol>\n-</div><div style=\"width: 100%; height: 20px\"></div></div>\n-</div>\n-</div>\n-</div>\n-</div>\n-<div id=\"NHM_res_div\">\n-<div id=\"NHM_msvc\">\n-<div id=\"NHM_multimap_text_insert_mem_usage_test_small_s2p_hash\">\n-<div id=\"NHM_assoc\">\n-<div id=\"NHM_Native_and_primary_hash-based_multimap_types_mem_usage_test\"><div style=\"border-style: dotted; border-width: 1px; border-color: lightgray\"><h6 class=\"c1\"><a name=\"NHM\" id=\"NHM\"><img src=\"multimap_text_insert_mem_usage_test_small_s2p_hash_msvc.png\" alt=\"no image\" /></a></h6>NHM: Native and primary hash-based multimap types mem usage test - <a href=\"assoc_performance_tests.html#msvc\">msvc++</a><p>In the above figure, the names in the legends have the following meaning:</p>\n-<ol>\n-<li>\n-cc_hash_mask_exp_nea_lc_1div8_1div2_nsth_mmap_cc_hash_mask_exp_nea_lc_1div8_1div2_nsth_set-\n-<a href=\"cc_hash_table.html\"><tt>cc_hash_table</tt></a>\n-with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mask_range_hashing.html\"><tt>direct_mask_range_hashing</tt></a>\n-, and <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_exponential_size_policy.html\"><tt>hash_exponential_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/2</i>, mapping each key to <a href=\"cc_hash_table.html\"><tt>cc_hash_table</tt></a>\n-with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mask_range_hashing.html\"><tt>direct_mask_range_hashing</tt></a>\n-, and <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_exponential_size_policy.html\"><tt>hash_exponential_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/2</i></li>\n-<li>\n-n_hash_mmap-\n-<tt>stdext::hash_multimap</tt></li>\n-<li>\n-cc_hash_mask_exp_nea_lc_1div8_1div2_nsth_mmap_lu_mtf_set-\n-<a href=\"cc_hash_table.html\"><tt>cc_hash_table</tt></a>\n-with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mask_range_hashing.html\"><tt>direct_mask_range_hashing</tt></a>\n-, and <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_exponential_size_policy.html\"><tt>hash_exponential_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/2</i>, mapping each key to <a href=\"list_update.html\"><tt>list_update</tt></a>\n- with <tt>Update_Policy</tt> = <a href=\"move_to_front_lu_policy.html\"><tt>move_to_front_lu_policy</tt></a>\n-</li>\n-</ol>\n-</div><div style=\"width: 100%; height: 20px\"></div></div>\n-</div>\n-</div>\n-</div>\n-</div>\n-<div id=\"NHL_res_div\">\n-<div id=\"NHL_local\">\n-<div id=\"NHL_multimap_text_insert_mem_usage_test_small_s2p_hash\">\n-<div id=\"NHL_assoc\">\n-<div id=\"NHL__Native_and_primary_hash-based_multimap_types_mem_usage_test\"><div style = \"border-style: dotted; border-width: 1px; border-color: lightgray\"><h6 class=\"c1\"><a name=\"NHL\" id= \"NHL\"><img src=\"multimap_text_insert_mem_usage_test_small_s2p_hash_local.png\" alt=\"no image\" /></a></h6>NHL:  Native and primary hash-based multimap types mem usage test - <a href = \"assoc_performance_tests.html#local\">local</a></div><div style = \"width: 100%; height: 20px\"></div></div>\n-</div>\n-</div>\n-</div>\n-</div>\n-<h2><a name=\"observations\" id=\"observations\">Observations</a></h2>\n-<p>See <a href=\"assoc_performance_tests.html#msc\">Observations::Mapping-Semantics\n-    Considerations</a>.</p>\n-</div>\n-</body>\n-</html>"}, {"sha": "d3eba9da47e21c1b2a8c24da7415846a0e43115a", "filename": "libstdc++-v3/doc/html/ext/pb_ds/multimap_text_insert_mem_usage_test_small_s2p_hash_gcc.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_insert_mem_usage_test_small_s2p_hash_gcc.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_insert_mem_usage_test_small_s2p_hash_gcc.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_insert_mem_usage_test_small_s2p_hash_gcc.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "df0becc112c9964855b1a8ae32e95fb00ac0e970", "filename": "libstdc++-v3/doc/html/ext/pb_ds/multimap_text_insert_mem_usage_test_small_s2p_hash_local.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_insert_mem_usage_test_small_s2p_hash_local.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_insert_mem_usage_test_small_s2p_hash_local.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_insert_mem_usage_test_small_s2p_hash_local.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "1828896ee5f3017d02890349129b8e7a605f3636", "filename": "libstdc++-v3/doc/html/ext/pb_ds/multimap_text_insert_mem_usage_test_small_s2p_hash_msvc.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_insert_mem_usage_test_small_s2p_hash_msvc.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_insert_mem_usage_test_small_s2p_hash_msvc.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_insert_mem_usage_test_small_s2p_hash_msvc.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "9334bc35bc7318ea2d7405fcb33edc7f9781de7a", "filename": "libstdc++-v3/doc/html/ext/pb_ds/multimap_text_insert_mem_usage_test_small_s2p_tree_gcc.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_insert_mem_usage_test_small_s2p_tree_gcc.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_insert_mem_usage_test_small_s2p_tree_gcc.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_insert_mem_usage_test_small_s2p_tree_gcc.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "9bacb35ce545c0915825c622326ac994b0cf52ef", "filename": "libstdc++-v3/doc/html/ext/pb_ds/multimap_text_insert_mem_usage_test_small_s2p_tree_local.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_insert_mem_usage_test_small_s2p_tree_local.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_insert_mem_usage_test_small_s2p_tree_local.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_insert_mem_usage_test_small_s2p_tree_local.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "2f20e57e555bb6e79dfa3a905d944bbf48613bff", "filename": "libstdc++-v3/doc/html/ext/pb_ds/multimap_text_insert_mem_usage_test_small_s2p_tree_msvc.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_insert_mem_usage_test_small_s2p_tree_msvc.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_insert_mem_usage_test_small_s2p_tree_msvc.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_insert_mem_usage_test_small_s2p_tree_msvc.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "b9a2d9952948608d47399e81576016ed29dc3af7", "filename": "libstdc++-v3/doc/html/ext/pb_ds/multimap_text_insert_timing_test_large.html", "status": "removed", "additions": 0, "deletions": 212, "changes": 212, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_insert_timing_test_large.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_insert_timing_test_large.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_insert_timing_test_large.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7", "patch": "@@ -1,212 +0,0 @@\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n-    \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n-<head>\n-<meta name=\"generator\" content=\"HTML Tidy for Linux/x86 (vers 12 April 2005), see www.w3.org\" />\n-<title>\"Multimap\" Text Insert Timing Test with Large Average\n-  Secondary-Key to Primary-Key Ratio</title>\n-<meta http-equiv=\"Content-Type\" content=\"text/html; charset=us-ascii\" />\n-</head>\n-<body>\n-<div id=\"page\">\n-<h1>\"Multimap\" Text Insert Timing Test with Large Average\n-    Secondary-Key to Primary-Key Ratio</h1>\n-<h2><a name=\"description\" id=\"description\">Description</a></h2>\n-<p>This test inserts a number of pairs into a container. The\n-    first item of each pair is a string from an arbitrary text\n-    [<a href=\"references.html#wickland96thirty\">wickland96thirty</a>], and\n-    the second is a uniform i.i.d.integer. The container is a\n-    \"multimap\" - it considers the first member of each pair as a\n-    primary key, and the second member of each pair as a secondary\n-    key (see <a href=\"motivation.html#assoc_mapping_semantics\">Motivation::Associative\n-    Containers::Alternative to Multiple Equivalent Keys</a>). There\n-    are 100 distinct primary keys, and the ratio of secondary keys\n-    to primary keys ranges to about 20.</p>\n-<p>The test measures the memory use as a function of the number\n-    of values inserted.</p>\n-<p>(The test was executed with <a href=\"http://gcc.gnu.org/viewcvs/*checkout*/trunk/libstdc%2B%2B-v3/testsuite/performance/ext/pb_ds/multimap_text_insert_mem_usage_large.cc\"><tt>multimap_text_insert_mem_usage_test</tt></a>\n-    thirty_years_among_the_dead_preproc.txt 400 1 6 6)</p>\n-<h2><a name=\"purpose\" id=\"purpose\">Purpose</a></h2>\n-<p>The test checks the insert-time scalability of different\n-    \"multimap\" designs (see <a href=\"motivation.html#assoc_mapping_semantics\">Motivation::Associative\n-    Containers::Mapping Semantics</a>).</p>\n-<h2><a name=\"results\" id=\"results\">Results</a></h2>\n-<p>Figures <a href=\"#NTG\">NTG</a>, <a href=\"#NTM\">NTM</a>, and\n-    <a href=\"#NTL\">NTL</a> show the results for \"multimaps\" which\n-    use a tree-based container for primary keys, in <a href=\"assoc_performance_tests.html#gcc\"><u>g++</u></a>, <a href=\"assoc_performance_tests.html#msvc\"><u>msvc++</u></a>, and\n-    <a href=\"assoc_performance_tests.html#local\"><u>local</u></a>,\n-    respectively; Figures <a href=\"#NHG\"></a>NHG, <a href=\"#NHM\">NHM</a>, and <a href=\"#NHL\">NHL</a> show the results for\n-    \"multimaps\" which use a hash-based container for primary keys,\n-    in <a href=\"assoc_performance_tests.html#gcc\"><u>g++</u></a>,\n-    <a href=\"assoc_performance_tests.html#msvc\"><u>msvc++</u></a>,\n-    and <a href=\"assoc_performance_tests.html#local\"><u>local</u></a>,\n-    respectively.</p>\n-<div id=\"NTG_res_div\">\n-<div id=\"NTG_gcc\">\n-<div id=\"NTG_multimap_text_insert_timing_test_large_s2p_tree\">\n-<div id=\"NTG_assoc\">\n-<div id=\"NTG_Native_and_primary_tree-based_multimap_types_insert_timing_test\"><div style=\"border-style: dotted; border-width: 1px; border-color: lightgray\"><h6 class=\"c1\"><a name=\"NTG\" id=\"NTG\"><img src=\"multimap_text_insert_timing_test_large_s2p_tree_gcc.png\" alt=\"no image\" /></a></h6>NTG: Native and primary tree-based multimap types insert timing test - <a href=\"assoc_performance_tests.html#gcc\">g++</a><p>In the above figure, the names in the legends have the following meaning:</p>\n-<ol>\n-<li>\n-n_mmap-\n-<tt>std::multimap</tt></li>\n-<li>\n-rb_tree_mmap_cc_hash_mask_exp_nea_lc_1div8_1div2_nsth_set-\n-<a href=\"tree.html\"><tt>tree</tt></a>\n- with <tt>Tag</tt> = <a href=\"rb_tree_tag.html\"><tt>rb_tree_tag</tt></a>\n-, and <tt>Node_Update</tt> = <a href=\"null_tree_node_update.html\"><tt>null_tree_node_update</tt></a>\n-, mapping each key to <a href=\"cc_hash_table.html\"><tt>cc_hash_table</tt></a>\n-with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mask_range_hashing.html\"><tt>direct_mask_range_hashing</tt></a>\n-, and <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_exponential_size_policy.html\"><tt>hash_exponential_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/2</i></li>\n-<li>\n-rb_tree_mmap_lu_mtf_set-\n-<a href=\"tree.html\"><tt>tree</tt></a>\n- with <tt>Tag</tt> = <a href=\"rb_tree_tag.html\"><tt>rb_tree_tag</tt></a>\n-, and <tt>Node_Update</tt> = <a href=\"null_tree_node_update.html\"><tt>null_tree_node_update</tt></a>\n-, mapping each key to <a href=\"list_update.html\"><tt>list_update</tt></a>\n- with <tt>Update_Policy</tt> = <a href=\"move_to_front_lu_policy.html\"><tt>move_to_front_lu_policy</tt></a>\n-</li>\n-</ol>\n-</div><div style=\"width: 100%; height: 20px\"></div></div>\n-</div>\n-</div>\n-</div>\n-</div>\n-<div id=\"NTM_res_div\">\n-<div id=\"NTM_msvc\">\n-<div id=\"NTM_multimap_text_insert_timing_test_large_s2p_tree\">\n-<div id=\"NTM_assoc\">\n-<div id=\"NHM_Native_and_primary_tree-based_multimap_types_insert_timing_test\"><div style=\"border-style: dotted; border-width: 1px; border-color: lightgray\"><h6 class=\"c1\"><a name=\"NTM\" id=\"NTM\"><img src=\"multimap_text_insert_timing_test_large_s2p_tree_msvc.png\" alt=\"no image\" /></a></h6>NTM: NHM Native and primary tree-based multimap types insert timing test - <a href=\"assoc_performance_tests.html#msvc\">msvc++</a><p>In the above figure, the names in the legends have the following meaning:</p>\n-<ol>\n-<li>\n-rb_tree_mmap_cc_hash_mask_exp_nea_lc_1div8_1div2_nsth_set-\n-<a href=\"tree.html\"><tt>tree</tt></a>\n- with <tt>Tag</tt> = <a href=\"rb_tree_tag.html\"><tt>rb_tree_tag</tt></a>\n-, and <tt>Node_Update</tt> = <a href=\"null_tree_node_update.html\"><tt>null_tree_node_update</tt></a>\n-, mapping each key to <a href=\"cc_hash_table.html\"><tt>cc_hash_table</tt></a>\n-with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mask_range_hashing.html\"><tt>direct_mask_range_hashing</tt></a>\n-, and <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_exponential_size_policy.html\"><tt>hash_exponential_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/2</i></li>\n-<li>\n-n_mmap-\n-<tt>std::multimap</tt></li>\n-<li>\n-rb_tree_mmap_lu_mtf_set-\n-<a href=\"tree.html\"><tt>tree</tt></a>\n- with <tt>Tag</tt> = <a href=\"rb_tree_tag.html\"><tt>rb_tree_tag</tt></a>\n-, and <tt>Node_Update</tt> = <a href=\"null_tree_node_update.html\"><tt>null_tree_node_update</tt></a>\n-, mapping each key to <a href=\"list_update.html\"><tt>list_update</tt></a>\n- with <tt>Update_Policy</tt> = <a href=\"move_to_front_lu_policy.html\"><tt>move_to_front_lu_policy</tt></a>\n-</li>\n-</ol>\n-</div><div style=\"width: 100%; height: 20px\"></div></div>\n-</div>\n-</div>\n-</div>\n-</div>\n-<div id=\"NTL_res_div\">\n-<div id=\"NTL_local\">\n-<div id=\"NTL_multimap_text_insert_timing_test_large_s2p_tree\">\n-<div id=\"NTL_assoc\">\n-<div id=\"NTL_Native_and_primary_tree-based_multimap_types_insert_timing_test\"><div style = \"border-style: dotted; border-width: 1px; border-color: lightgray\"><h6 class=\"c1\"><a name=\"NTL\" id= \"NTL\"><img src=\"multimap_text_insert_timing_test_large_s2p_tree_local.png\" alt=\"no image\" /></a></h6>NTL: Native and primary tree-based multimap types insert timing test - <a href = \"assoc_performance_tests.html#local\">local</a></div><div style = \"width: 100%; height: 20px\"></div></div>\n-</div>\n-</div>\n-</div>\n-</div>\n-<div id=\"NHG_res_div\">\n-<div id=\"NHG_gcc\">\n-<div id=\"NHG_multimap_text_insert_timing_test_large_s2p_hash\">\n-<div id=\"NHG_assoc\">\n-<div id=\"NHG_Native_and_primary_hash-based_multimap_types_insert_timing_test\"><div style=\"border-style: dotted; border-width: 1px; border-color: lightgray\"><h6 class=\"c1\"><a name=\"NHG\" id=\"NHG\"><img src=\"multimap_text_insert_timing_test_large_s2p_hash_gcc.png\" alt=\"no image\" /></a></h6>NHG: Native and primary hash-based multimap types insert timing test - <a href=\"assoc_performance_tests.html#gcc\">g++</a><p>In the above figure, the names in the legends have the following meaning:</p>\n-<ol>\n-<li>\n-n_hash_mmap-\n-<tt>__gnucxx::hash_multimap</tt></li>\n-<li>\n-cc_hash_mask_exp_nea_lc_1div8_1div2_nsth_mmap_cc_hash_mask_exp_nea_lc_1div8_1div2_nsth_set-\n-<a href=\"cc_hash_table.html\"><tt>cc_hash_table</tt></a>\n-with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mask_range_hashing.html\"><tt>direct_mask_range_hashing</tt></a>\n-, and <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_exponential_size_policy.html\"><tt>hash_exponential_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/2</i>, mapping each key to <a href=\"cc_hash_table.html\"><tt>cc_hash_table</tt></a>\n-with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mask_range_hashing.html\"><tt>direct_mask_range_hashing</tt></a>\n-, and <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_exponential_size_policy.html\"><tt>hash_exponential_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/2</i></li>\n-<li>\n-cc_hash_mask_exp_nea_lc_1div8_1div2_nsth_mmap_lu_mtf_set-\n-<a href=\"cc_hash_table.html\"><tt>cc_hash_table</tt></a>\n-with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mask_range_hashing.html\"><tt>direct_mask_range_hashing</tt></a>\n-, and <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_exponential_size_policy.html\"><tt>hash_exponential_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/2</i>, mapping each key to <a href=\"list_update.html\"><tt>list_update</tt></a>\n- with <tt>Update_Policy</tt> = <a href=\"move_to_front_lu_policy.html\"><tt>move_to_front_lu_policy</tt></a>\n-</li>\n-</ol>\n-</div><div style=\"width: 100%; height: 20px\"></div></div>\n-</div>\n-</div>\n-</div>\n-</div>\n-<div id=\"NHM_res_div\">\n-<div id=\"NHM_msvc\">\n-<div id=\"NHM_multimap_text_insert_timing_test_large_s2p_hash\">\n-<div id=\"NHM_assoc\">\n-<div id=\"NHM_Native_and_primary_hash-based_multimap_types_insert_timing_test\"><div style=\"border-style: dotted; border-width: 1px; border-color: lightgray\"><h6 class=\"c1\"><a name=\"NHM\" id=\"NHM\"><img src=\"multimap_text_insert_timing_test_large_s2p_hash_msvc.png\" alt=\"no image\" /></a></h6>NHM: Native and primary hash-based multimap types insert timing test - <a href=\"assoc_performance_tests.html#msvc\">msvc++</a><p>In the above figure, the names in the legends have the following meaning:</p>\n-<ol>\n-<li>\n-n_hash_mmap-\n-<tt>stdext::hash_multimap</tt></li>\n-<li>\n-cc_hash_mask_exp_nea_lc_1div8_1div2_nsth_mmap_cc_hash_mask_exp_nea_lc_1div8_1div2_nsth_set-\n-<a href=\"cc_hash_table.html\"><tt>cc_hash_table</tt></a>\n-with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mask_range_hashing.html\"><tt>direct_mask_range_hashing</tt></a>\n-, and <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_exponential_size_policy.html\"><tt>hash_exponential_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/2</i>, mapping each key to <a href=\"cc_hash_table.html\"><tt>cc_hash_table</tt></a>\n-with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mask_range_hashing.html\"><tt>direct_mask_range_hashing</tt></a>\n-, and <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_exponential_size_policy.html\"><tt>hash_exponential_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/2</i></li>\n-<li>\n-cc_hash_mask_exp_nea_lc_1div8_1div2_nsth_mmap_lu_mtf_set-\n-<a href=\"cc_hash_table.html\"><tt>cc_hash_table</tt></a>\n-with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mask_range_hashing.html\"><tt>direct_mask_range_hashing</tt></a>\n-, and <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_exponential_size_policy.html\"><tt>hash_exponential_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/2</i>, mapping each key to <a href=\"list_update.html\"><tt>list_update</tt></a>\n- with <tt>Update_Policy</tt> = <a href=\"move_to_front_lu_policy.html\"><tt>move_to_front_lu_policy</tt></a>\n-</li>\n-</ol>\n-</div><div style=\"width: 100%; height: 20px\"></div></div>\n-</div>\n-</div>\n-</div>\n-</div>\n-<div id=\"NHL_res_div\">\n-<div id=\"NHL_local\">\n-<div id=\"NHL_multimap_text_insert_timing_test_large_s2p_hash\">\n-<div id=\"NHL_assoc\">\n-<div id=\"NHL__Native_and_primary_hash-based_multimap_types_insert_timing_test\"><div style = \"border-style: dotted; border-width: 1px; border-color: lightgray\"><h6 class=\"c1\"><a name=\"NHL\" id= \"NHL\"><img src=\"multimap_text_insert_timing_test_large_s2p_hash_local.png\" alt=\"no image\" /></a></h6>NHL:  Native and primary hash-based multimap types insert timing test - <a href = \"assoc_performance_tests.html#local\">local</a></div><div style = \"width: 100%; height: 20px\"></div></div>\n-</div>\n-</div>\n-</div>\n-</div>\n-<h2><a name=\"observations\" id=\"observations\">Observations</a></h2>\n-<p>See <a href=\"assoc_performance_tests.html#msc\">Observations::Mapping-Semantics\n-    Considerations</a>.</p>\n-</div>\n-</body>\n-</html>"}, {"sha": "55b0bf46732a19cf75a54c848fbb3fa84392989a", "filename": "libstdc++-v3/doc/html/ext/pb_ds/multimap_text_insert_timing_test_large_s2p_hash_gcc.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_insert_timing_test_large_s2p_hash_gcc.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_insert_timing_test_large_s2p_hash_gcc.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_insert_timing_test_large_s2p_hash_gcc.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "de6ee23391e117e95b524d366c56f36990af89bf", "filename": "libstdc++-v3/doc/html/ext/pb_ds/multimap_text_insert_timing_test_large_s2p_hash_local.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_insert_timing_test_large_s2p_hash_local.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_insert_timing_test_large_s2p_hash_local.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_insert_timing_test_large_s2p_hash_local.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "02f5d0b20aedda7ba081db75284d3e5e3817aec9", "filename": "libstdc++-v3/doc/html/ext/pb_ds/multimap_text_insert_timing_test_large_s2p_hash_msvc.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_insert_timing_test_large_s2p_hash_msvc.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_insert_timing_test_large_s2p_hash_msvc.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_insert_timing_test_large_s2p_hash_msvc.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "83366eb3756f1c38ce1b1ab5f81b8ca41ac374ce", "filename": "libstdc++-v3/doc/html/ext/pb_ds/multimap_text_insert_timing_test_large_s2p_tree_gcc.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_insert_timing_test_large_s2p_tree_gcc.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_insert_timing_test_large_s2p_tree_gcc.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_insert_timing_test_large_s2p_tree_gcc.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "307ca2db18763402e240492698308a7dc8bca8a2", "filename": "libstdc++-v3/doc/html/ext/pb_ds/multimap_text_insert_timing_test_large_s2p_tree_local.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_insert_timing_test_large_s2p_tree_local.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_insert_timing_test_large_s2p_tree_local.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_insert_timing_test_large_s2p_tree_local.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "47196bff7f2990502e536c8632e613b86975a37e", "filename": "libstdc++-v3/doc/html/ext/pb_ds/multimap_text_insert_timing_test_large_s2p_tree_msvc.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_insert_timing_test_large_s2p_tree_msvc.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_insert_timing_test_large_s2p_tree_msvc.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_insert_timing_test_large_s2p_tree_msvc.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "cda3629b7b29088c660e1c57a0a5b223ce2d2bf1", "filename": "libstdc++-v3/doc/html/ext/pb_ds/multimap_text_insert_timing_test_small.html", "status": "removed", "additions": 0, "deletions": 217, "changes": 217, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_insert_timing_test_small.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_insert_timing_test_small.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_insert_timing_test_small.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7", "patch": "@@ -1,217 +0,0 @@\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n-    \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n-<head>\n-<meta name=\"generator\" content=\"HTML Tidy for Linux/x86 (vers 12 April 2005), see www.w3.org\" />\n-<title>\"Multimap\" Text Insert Timing Test with Small Average\n-  Secondary-Key to Primary-Key Ratio</title>\n-<meta http-equiv=\"Content-Type\" content=\"text/html; charset=us-ascii\" />\n-</head>\n-<body>\n-<div id=\"page\">\n-<h1>\"Multimap\" Text Insert Timing Test with Small Average\n-    Secondary-Key to Primary-Key Ratio</h1>\n-<h2><a name=\"description\" id=\"description\">Description</a></h2>\n-<p>This test inserts a number of pairs into a container. The\n-    first item of each pair is a string from an arbitrary text\n-    [<a href=\"references.html#wickland96thirty\">wickland96thirty</a>], and\n-    the second is a uniform i.i.d.integer. The container is a\n-    \"multimap\" - it considers the first member of each pair as a\n-    primary key, and the second member of each pair as a secondary\n-    key (see <a href=\"motivation.html#assoc_mapping_semantics\">Motivation::Associative\n-    Containers::Alternative to Multiple Equivalent Keys</a>). There\n-    are 400 distinct primary keys, and the ratio of secondary keys\n-    to primary keys ranges from 1 to 5.</p>\n-<p>The test measures the average insert-time as a function of\n-    the number of values inserted. For <tt>pb_ds</tt>'s containers,\n-    it inserts a primary key into the primary associative\n-    container, then a secondary key into the secondary associative\n-    container. For the native multimaps, it obtains a range using\n-    <tt>std::equal_range</tt>, and inserts a value only if it was\n-    not contained already.</p>\n-<p>(The test was executed with <a href=\"http://gcc.gnu.org/viewcvs/*checkout*/trunk/libstdc%2B%2B-v3/testsuite/performance/ext/pb_ds/multimap_text_insert_timing_small.cc\"><tt>multimap_text_insert_timing_test</tt></a>\n-    thirty_years_among_the_dead_preproc.txt 400 1 1 6)</p>\n-<h2><a name=\"purpose\" id=\"purpose\">Purpose</a></h2>\n-<p>The test checks the insert-time scalability of different\n-    \"multimap\" designs (see <a href=\"motivation.html#assoc_mapping_semantics\">Motivation::Associative\n-    Containers::Alternative to Multiple Equivalent Keys</a>).</p>\n-<h2><a name=\"results\" id=\"results\">Results</a></h2>\n-<p>Figures <a href=\"#NTG\">NTG</a>, <a href=\"#NTM\">NTM</a>, and\n-    <a href=\"#NTL\">NTL</a> show the results for \"multimaps\" which\n-    use a tree-based container for primary keys, in <a href=\"assoc_performance_tests.html#gcc\"><u>g++</u></a>, <a href=\"assoc_performance_tests.html#msvc\"><u>msvc++</u></a>, and\n-    <a href=\"assoc_performance_tests.html#local\"><u>local</u></a>,\n-    respectively; Figures <a href=\"#NHG\"></a>NHG, <a href=\"#NHM\">NHM</a>, and <a href=\"#NHL\">NHL</a> show the results for\n-    \"multimaps\" which use a hash-based container for primary keys,\n-    in <a href=\"assoc_performance_tests.html#gcc\"><u>g++</u></a>,\n-    <a href=\"assoc_performance_tests.html#msvc\"><u>msvc++</u></a>,\n-    and <a href=\"assoc_performance_tests.html#local\"><u>local</u></a>,\n-    respectively.</p>\n-<div id=\"NTG_res_div\">\n-<div id=\"NTG_gcc\">\n-<div id=\"NTG_multimap_text_insert_timing_test_small_s2p_tree\">\n-<div id=\"NTG_assoc\">\n-<div id=\"NTG_Native_and_primary_tree-based_multimap_types_insert_timing_test\"><div style=\"border-style: dotted; border-width: 1px; border-color: lightgray\"><h6 class=\"c1\"><a name=\"NTG\" id=\"NTG\"><img src=\"multimap_text_insert_timing_test_small_s2p_tree_gcc.png\" alt=\"no image\" /></a></h6>NTG: Native and primary tree-based multimap types insert timing test - <a href=\"assoc_performance_tests.html#gcc\">g++</a><p>In the above figure, the names in the legends have the following meaning:</p>\n-<ol>\n-<li>\n-n_mmap-\n-<tt>std::multimap</tt></li>\n-<li>\n-rb_tree_mmap_cc_hash_mask_exp_nea_lc_1div8_1div2_nsth_set-\n-<a href=\"tree.html\"><tt>tree</tt></a>\n- with <tt>Tag</tt> = <a href=\"rb_tree_tag.html\"><tt>rb_tree_tag</tt></a>\n-, and <tt>Node_Update</tt> = <a href=\"null_tree_node_update.html\"><tt>null_tree_node_update</tt></a>\n-, mapping each key to <a href=\"cc_hash_table.html\"><tt>cc_hash_table</tt></a>\n-with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mask_range_hashing.html\"><tt>direct_mask_range_hashing</tt></a>\n-, and <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_exponential_size_policy.html\"><tt>hash_exponential_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/2</i></li>\n-<li>\n-rb_tree_mmap_lu_mtf_set-\n-<a href=\"tree.html\"><tt>tree</tt></a>\n- with <tt>Tag</tt> = <a href=\"rb_tree_tag.html\"><tt>rb_tree_tag</tt></a>\n-, and <tt>Node_Update</tt> = <a href=\"null_tree_node_update.html\"><tt>null_tree_node_update</tt></a>\n-, mapping each key to <a href=\"list_update.html\"><tt>list_update</tt></a>\n- with <tt>Update_Policy</tt> = <a href=\"move_to_front_lu_policy.html\"><tt>move_to_front_lu_policy</tt></a>\n-</li>\n-</ol>\n-</div><div style=\"width: 100%; height: 20px\"></div></div>\n-</div>\n-</div>\n-</div>\n-</div>\n-<div id=\"NTM_res_div\">\n-<div id=\"NTM_msvc\">\n-<div id=\"NTM_multimap_text_insert_timing_test_small_s2p_tree\">\n-<div id=\"NTM_assoc\">\n-<div id=\"NHM_Native_and_primary_tree-based_multimap_types_insert_timing_test\"><div style=\"border-style: dotted; border-width: 1px; border-color: lightgray\"><h6 class=\"c1\"><a name=\"NTM\" id=\"NTM\"><img src=\"multimap_text_insert_timing_test_small_s2p_tree_msvc.png\" alt=\"no image\" /></a></h6>NTM: NHM Native and primary tree-based multimap types insert timing test - <a href=\"assoc_performance_tests.html#msvc\">msvc++</a><p>In the above figure, the names in the legends have the following meaning:</p>\n-<ol>\n-<li>\n-rb_tree_mmap_cc_hash_mask_exp_nea_lc_1div8_1div2_nsth_set-\n-<a href=\"tree.html\"><tt>tree</tt></a>\n- with <tt>Tag</tt> = <a href=\"rb_tree_tag.html\"><tt>rb_tree_tag</tt></a>\n-, and <tt>Node_Update</tt> = <a href=\"null_tree_node_update.html\"><tt>null_tree_node_update</tt></a>\n-, mapping each key to <a href=\"cc_hash_table.html\"><tt>cc_hash_table</tt></a>\n-with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mask_range_hashing.html\"><tt>direct_mask_range_hashing</tt></a>\n-, and <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_exponential_size_policy.html\"><tt>hash_exponential_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/2</i></li>\n-<li>\n-n_mmap-\n-<tt>std::multimap</tt></li>\n-<li>\n-rb_tree_mmap_lu_mtf_set-\n-<a href=\"tree.html\"><tt>tree</tt></a>\n- with <tt>Tag</tt> = <a href=\"rb_tree_tag.html\"><tt>rb_tree_tag</tt></a>\n-, and <tt>Node_Update</tt> = <a href=\"null_tree_node_update.html\"><tt>null_tree_node_update</tt></a>\n-, mapping each key to <a href=\"list_update.html\"><tt>list_update</tt></a>\n- with <tt>Update_Policy</tt> = <a href=\"move_to_front_lu_policy.html\"><tt>move_to_front_lu_policy</tt></a>\n-</li>\n-</ol>\n-</div><div style=\"width: 100%; height: 20px\"></div></div>\n-</div>\n-</div>\n-</div>\n-</div>\n-<div id=\"NTL_res_div\">\n-<div id=\"NTL_local\">\n-<div id=\"NTL_multimap_text_insert_timing_test_small_s2p_tree\">\n-<div id=\"NTL_assoc\">\n-<div id=\"NTL_Native_and_primary_tree-based_multimap_types_insert_timing_test\"><div style = \"border-style: dotted; border-width: 1px; border-color: lightgray\"><h6 class=\"c1\"><a name=\"NTL\" id= \"NTL\"><img src=\"multimap_text_insert_timing_test_small_s2p_tree_local.png\" alt=\"no image\" /></a></h6>NTL: Native and primary tree-based multimap types insert timing test - <a href = \"assoc_performance_tests.html#local\">local</a></div><div style = \"width: 100%; height: 20px\"></div></div>\n-</div>\n-</div>\n-</div>\n-</div>\n-<div id=\"NHG_res_div\">\n-<div id=\"NHG_gcc\">\n-<div id=\"NHG_multimap_text_insert_timing_test_small_s2p_hash\">\n-<div id=\"NHG_assoc\">\n-<div id=\"NHG_Native_and_primary_hash-based_multimap_types_insert_timing_test\"><div style=\"border-style: dotted; border-width: 1px; border-color: lightgray\"><h6 class=\"c1\"><a name=\"NHG\" id=\"NHG\"><img src=\"multimap_text_insert_timing_test_small_s2p_hash_gcc.png\" alt=\"no image\" /></a></h6>NHG: Native and primary hash-based multimap types insert timing test - <a href=\"assoc_performance_tests.html#gcc\">g++</a><p>In the above figure, the names in the legends have the following meaning:</p>\n-<ol>\n-<li>\n-n_hash_mmap-\n-<tt>__gnucxx::hash_multimap</tt></li>\n-<li>\n-cc_hash_mask_exp_nea_lc_1div8_1div2_nsth_mmap_cc_hash_mask_exp_nea_lc_1div8_1div2_nsth_set-\n-<a href=\"cc_hash_table.html\"><tt>cc_hash_table</tt></a>\n-with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mask_range_hashing.html\"><tt>direct_mask_range_hashing</tt></a>\n-, and <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_exponential_size_policy.html\"><tt>hash_exponential_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/2</i>, mapping each key to <a href=\"cc_hash_table.html\"><tt>cc_hash_table</tt></a>\n-with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mask_range_hashing.html\"><tt>direct_mask_range_hashing</tt></a>\n-, and <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_exponential_size_policy.html\"><tt>hash_exponential_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/2</i></li>\n-<li>\n-cc_hash_mask_exp_nea_lc_1div8_1div2_nsth_mmap_lu_mtf_set-\n-<a href=\"cc_hash_table.html\"><tt>cc_hash_table</tt></a>\n-with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mask_range_hashing.html\"><tt>direct_mask_range_hashing</tt></a>\n-, and <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_exponential_size_policy.html\"><tt>hash_exponential_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/2</i>, mapping each key to <a href=\"list_update.html\"><tt>list_update</tt></a>\n- with <tt>Update_Policy</tt> = <a href=\"move_to_front_lu_policy.html\"><tt>move_to_front_lu_policy</tt></a>\n-</li>\n-</ol>\n-</div><div style=\"width: 100%; height: 20px\"></div></div>\n-</div>\n-</div>\n-</div>\n-</div>\n-<div id=\"NHM_res_div\">\n-<div id=\"NHM_msvc\">\n-<div id=\"NHM_multimap_text_insert_timing_test_small_s2p_hash\">\n-<div id=\"NHM_assoc\">\n-<div id=\"NHM_Native_and_primary_hash-based_multimap_types_insert_timing_test\"><div style=\"border-style: dotted; border-width: 1px; border-color: lightgray\"><h6 class=\"c1\"><a name=\"NHM\" id=\"NHM\"><img src=\"multimap_text_insert_timing_test_small_s2p_hash_msvc.png\" alt=\"no image\" /></a></h6>NHM: Native and primary hash-based multimap types insert timing test - <a href=\"assoc_performance_tests.html#msvc\">msvc++</a><p>In the above figure, the names in the legends have the following meaning:</p>\n-<ol>\n-<li>\n-cc_hash_mask_exp_nea_lc_1div8_1div2_nsth_mmap_cc_hash_mask_exp_nea_lc_1div8_1div2_nsth_set-\n-<a href=\"cc_hash_table.html\"><tt>cc_hash_table</tt></a>\n-with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mask_range_hashing.html\"><tt>direct_mask_range_hashing</tt></a>\n-, and <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_exponential_size_policy.html\"><tt>hash_exponential_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/2</i>, mapping each key to <a href=\"cc_hash_table.html\"><tt>cc_hash_table</tt></a>\n-with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mask_range_hashing.html\"><tt>direct_mask_range_hashing</tt></a>\n-, and <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_exponential_size_policy.html\"><tt>hash_exponential_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/2</i></li>\n-<li>\n-n_hash_mmap-\n-<tt>stdext::hash_multimap</tt></li>\n-<li>\n-cc_hash_mask_exp_nea_lc_1div8_1div2_nsth_mmap_lu_mtf_set-\n-<a href=\"cc_hash_table.html\"><tt>cc_hash_table</tt></a>\n-with <tt>Comb_Hash_Fn</tt> = <a href=\"direct_mask_range_hashing.html\"><tt>direct_mask_range_hashing</tt></a>\n-, and <tt>Resize_Policy</tt> = <a href=\"hash_standard_resize_policy.html\"><tt>hash_standard_resize_policy</tt></a>\n- with <tt>Size_Policy</tt> = <a href=\"hash_exponential_size_policy.html\"><tt>hash_exponential_size_policy</tt></a>\n-, and <tt>Trigger_Policy</tt> = <a href=\"hash_load_check_resize_trigger.html\"><tt>hash_load_check_resize_trigger</tt></a>\n- with <i>&alpha;<sub>min</sub></i> = <i>1/8</i> and <i>&alpha;<sub>max</sub></i> = <i>1/2</i>, mapping each key to <a href=\"list_update.html\"><tt>list_update</tt></a>\n- with <tt>Update_Policy</tt> = <a href=\"move_to_front_lu_policy.html\"><tt>move_to_front_lu_policy</tt></a>\n-</li>\n-</ol>\n-</div><div style=\"width: 100%; height: 20px\"></div></div>\n-</div>\n-</div>\n-</div>\n-</div>\n-<div id=\"NHL_res_div\">\n-<div id=\"NHL_local\">\n-<div id=\"NHL_multimap_text_insert_timing_test_small_s2p_hash\">\n-<div id=\"NHL_assoc\">\n-<div id=\"NHL_Native_and_primary_hash-based_multimap_types_insert_timing_test\"><div style = \"border-style: dotted; border-width: 1px; border-color: lightgray\"><h6 class=\"c1\"><a name=\"NHL\" id= \"NHL\"><img src=\"multimap_text_insert_timing_test_small_s2p_hash_local.png\" alt=\"no image\" /></a></h6>NHL: Native and primary hash-based multimap types insert timing test - <a href = \"assoc_performance_tests.html#local\">local</a></div><div style = \"width: 100%; height: 20px\"></div></div>\n-</div>\n-</div>\n-</div>\n-</div>\n-<h2><a name=\"observations\" id=\"observations\">Observations</a></h2>\n-<p>See <a href=\"assoc_performance_tests.html#msc\">Observations::Mapping-Semantics\n-    Considerations</a>.</p>\n-</div>\n-</body>\n-</html>"}, {"sha": "3c2d87ecfac5adc071b18420ea78d68c63c0e79a", "filename": "libstdc++-v3/doc/html/ext/pb_ds/multimap_text_insert_timing_test_small_s2p_hash_gcc.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_insert_timing_test_small_s2p_hash_gcc.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_insert_timing_test_small_s2p_hash_gcc.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_insert_timing_test_small_s2p_hash_gcc.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "4174fabe923d64918101af1793e40e4332408f50", "filename": "libstdc++-v3/doc/html/ext/pb_ds/multimap_text_insert_timing_test_small_s2p_hash_local.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_insert_timing_test_small_s2p_hash_local.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_insert_timing_test_small_s2p_hash_local.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_insert_timing_test_small_s2p_hash_local.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "81d5839044eeaa1a6cd014945ac8a5afe1507bdf", "filename": "libstdc++-v3/doc/html/ext/pb_ds/multimap_text_insert_timing_test_small_s2p_hash_msvc.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_insert_timing_test_small_s2p_hash_msvc.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_insert_timing_test_small_s2p_hash_msvc.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_insert_timing_test_small_s2p_hash_msvc.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "368f07350c2b29f93c79c73f14c40527832deb56", "filename": "libstdc++-v3/doc/html/ext/pb_ds/multimap_text_insert_timing_test_small_s2p_tree_gcc.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_insert_timing_test_small_s2p_tree_gcc.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_insert_timing_test_small_s2p_tree_gcc.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_insert_timing_test_small_s2p_tree_gcc.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "c5f4e57e6d7c3e1f238c27c471c71fb59d124420", "filename": "libstdc++-v3/doc/html/ext/pb_ds/multimap_text_insert_timing_test_small_s2p_tree_local.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_insert_timing_test_small_s2p_tree_local.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_insert_timing_test_small_s2p_tree_local.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_insert_timing_test_small_s2p_tree_local.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "99f2d690fa55e92afe669ce7d168c72834da8355", "filename": "libstdc++-v3/doc/html/ext/pb_ds/multimap_text_insert_timing_test_small_s2p_tree_msvc.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_insert_timing_test_small_s2p_tree_msvc.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_insert_timing_test_small_s2p_tree_msvc.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fmultimap_text_insert_timing_test_small_s2p_tree_msvc.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "34f1ee06aa788b6420195a42b0b27f27b0b0be99", "filename": "libstdc++-v3/doc/html/ext/pb_ds/null_hash_fn.html", "status": "removed", "additions": 0, "deletions": 32, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fnull_hash_fn.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fnull_hash_fn.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fnull_hash_fn.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7", "patch": "@@ -1,32 +0,0 @@\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\"\n-    \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n-\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n-<head>\n-  <meta name=\"generator\" content=\n-  \"HTML Tidy for Linux/x86 (vers 12 April 2005), see www.w3.org\" />\n-\n-  <title>null_hash_fn Interface</title>\n-  <meta http-equiv=\"Content-Type\" content=\n-  \"text/html; charset=us-ascii\" />\n-  </head>\n-\n-<body>\n-  <div id=\"page\">\n-    <h1><tt>null_hash_fn</tt> Interface</h1>\n-\n-    <p>A \"null\" hash function, indicating that the combining hash\n-    function is actually a ranged hash function.</p>\n-\n-    <p><a href=\n-    \"concepts.html#concepts_null_policies\">Interface::Concepts::Null\n-    Policy Classes</a> explains the concept of a null policy. See\n-    also <a href=\n-    \"hash_based_containers.html#hash_policies\">Design::Hash-Based\n-    Containers::Hash Policies</a>.</p>\n-\n-    <p>Defined in: <a href=\n-    \"http://gcc.gnu.org/viewcvs/*checkout*/trunk/libstdc%2B%2B-v3/include/ext/pb_ds/hash_policy.hpp\"><tt>hash_policy.hpp</tt></a></p>\n-  </div>\n-</body>\n-</html>"}, {"sha": "e8fb6a3c825d2a975ba81d7d1692f70ce68da86f", "filename": "libstdc++-v3/doc/html/ext/pb_ds/null_lu_metadata.html", "status": "removed", "additions": 0, "deletions": 25, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fnull_lu_metadata.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fnull_lu_metadata.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fnull_lu_metadata.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7", "patch": "@@ -1,25 +0,0 @@\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\"\n-    \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n-\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n-<head>\n-  <meta name=\"generator\" content=\n-  \"HTML Tidy for Linux/x86 (vers 12 April 2005), see www.w3.org\" />\n-\n-  <title>null_lu_metadata Interface</title>\n-  <meta http-equiv=\"Content-Type\" content=\n-  \"text/html; charset=us-ascii\" />\n-  </head>\n-\n-<body>\n-  <div id=\"page\">\n-    <h1><tt>null_lu_metadata</tt> Interface</h1>\n-\n-    <p>A null type that means that each link in a list-based\n-    container does not actually need metadata.</p>\n-\n-    <p>Defined in: <a href=\n-    \"http://gcc.gnu.org/viewcvs/*checkout*/trunk/libstdc%2B%2B-v3/include/ext/pb_ds/list_update_policy.hpp\"><tt>list_update_policy.hpp</tt></a></p>\n-  </div>\n-</body>\n-</html>"}, {"sha": "d62fac5c93e796cd98953ebe73e27f856d65d1c5", "filename": "libstdc++-v3/doc/html/ext/pb_ds/null_mapped_type.html", "status": "removed", "additions": 0, "deletions": 25, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fnull_mapped_type.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fnull_mapped_type.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fnull_mapped_type.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7", "patch": "@@ -1,25 +0,0 @@\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\"\n-    \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n-\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n-<head>\n-  <meta name=\"generator\" content=\n-  \"HTML Tidy for Linux/x86 (vers 12 April 2005), see www.w3.org\" />\n-\n-  <title>null_mapped_type Interface</title>\n-  <meta http-equiv=\"Content-Type\" content=\n-  \"text/html; charset=us-ascii\" />\n-  </head>\n-\n-<body>\n-  <div id=\"page\">\n-    <h1><tt>null_mapped_type</tt> Interface</h1>\n-\n-    <p>A mapped-policy indicating that an associative container is\n-    a \"set\"</p>\n-\n-    <p>Defined in: <a href=\n-    \"http://gcc.gnu.org/viewcvs/*checkout*/trunk/libstdc%2B%2B-v3/include/ext/pb_ds/tag_and_trait.hpp\"><tt>tag_and_trait.hpp</tt></a></p>\n-  </div>\n-</body>\n-</html>"}, {"sha": "1c8811e96526a3a382ebbf8bb39004afcd05a7ec", "filename": "libstdc++-v3/doc/html/ext/pb_ds/null_probe_fn.html", "status": "removed", "additions": 0, "deletions": 29, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fnull_probe_fn.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fnull_probe_fn.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fnull_probe_fn.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7", "patch": "@@ -1,29 +0,0 @@\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\"\n-    \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n-\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n-<head>\n-  <meta name=\"generator\" content=\n-  \"HTML Tidy for Linux/x86 (vers 12 April 2005), see www.w3.org\" />\n-\n-  <title>null_probe_fn Interface</title>\n-  <meta http-equiv=\"Content-Type\" content=\n-  \"text/html; charset=us-ascii\" />\n-  </head>\n-\n-<body>\n-  <div id=\"page\">\n-    <h1><tt>null_probe_fn</tt> Interface</h1>\n-\n-    <p>A \"null\" probe function, indicating that the combining probe\n-    function is actually a ranged probe function.</p>\n-\n-    <p><a href=\n-    \"concepts.html#concepts_null_policies\">Interface::Concepts::Null\n-    Policy Classes</a> explains the concept of a null policy.</p>\n-\n-    <p>Defined in: <a href=\n-    \"http://gcc.gnu.org/viewcvs/*checkout*/trunk/libstdc%2B%2B-v3/include/ext/pb_ds/hash_policy.hpp\"><tt>hash_policy.hpp</tt></a></p>\n-  </div>\n-</body>\n-</html>"}, {"sha": "cc1c90054711726a9d5a3094c9e72a11ed08418e", "filename": "libstdc++-v3/doc/html/ext/pb_ds/null_tree_node_update.html", "status": "removed", "additions": 0, "deletions": 101, "changes": 101, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fnull_tree_node_update.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fnull_tree_node_update.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fnull_tree_node_update.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7", "patch": "@@ -1,101 +0,0 @@\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n-    \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n-<head>\n-  <meta name=\"generator\" content=\n-  \"HTML Tidy for Linux/x86 (vers 12 April 2005), see www.w3.org\" />\n-\n-  <title>null_tree_node_update Interface</title>\n-  <meta http-equiv=\"Content-Type\" content=\n-  \"text/html; charset=us-ascii\" />\n-  </head>\n-\n-<body>\n-  <div id=\"page\">\n-    <h1><tt>null_tree_node_update</tt> Interface</h1>\n-\n-    <p>A \"null\" node updater, indicating that no node updates are\n-    required.</p>\n-\n-    <p><a href=\n-    \"concepts.html#concepts_null_policies\">Interface::Concepts::Null\n-    Policy Classes</a> explains the concept of a null policy.</p>\n-\n-    <p>Defined in: <a href=\n-    \"http://gcc.gnu.org/viewcvs/*checkout*/trunk/libstdc%2B%2B-v3/include/ext/pb_ds/tree_policy.hpp\"><tt>tree_policy.hpp</tt></a></p>\n-\n-    <h2><a name=\"link1\" id=\"link1\">Template Parameters</a></h2>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\n-    \"Template Parameters\">\n-      <tr>\n-        <td width=\"20%\" align=\"left\"><b>Parameter</b></td>\n-\n-        <td width=\"50%\" align=\"left\"><b>Description</b></td>\n-\n-        <td width=\"30%\" align=\"left\"><b>Default Value</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"Const_Node_Iterator1933878761\" id=\n-\"Const_Node_Iterator1933878761\"><b>class</b> Const_Node_Iterator</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Const node iterator type.</p>\n-        </td>\n-\n-        <td>-</td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"Node_Iterator4206909839\" id=\n-\"Node_Iterator4206909839\"><b>class</b> Node_Iterator</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Node iterator type.</p>\n-        </td>\n-\n-        <td>-</td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"Cmp_Fn294335\" id=\"Cmp_Fn294335\"><b>class</b> Cmp_Fn</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Comparison functor.</p>\n-        </td>\n-\n-        <td>-</td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"Allocator35940069\" id=\n-\"Allocator35940069\"><b>class</b> Allocator</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Allocator type.</p>\n-        </td>\n-\n-        <td>-</td>\n-      </tr>\n-    </table>\n-  </div>\n-</body>\n-</html>"}, {"sha": "18ea00739d5b1c7113004b57e37e89226e916fb1", "filename": "libstdc++-v3/doc/html/ext/pb_ds/null_trie_node_update.html", "status": "removed", "additions": 0, "deletions": 102, "changes": 102, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fnull_trie_node_update.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fnull_trie_node_update.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fnull_trie_node_update.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7", "patch": "@@ -1,102 +0,0 @@\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n-    \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n-<head>\n-  <meta name=\"generator\" content=\n-  \"HTML Tidy for Linux/x86 (vers 12 April 2005), see www.w3.org\" />\n-\n-  <title>null_trie_node_update Interface</title>\n-  <meta http-equiv=\"Content-Type\" content=\n-  \"text/html; charset=us-ascii\" />\n-  </head>\n-\n-<body>\n-  <div id=\"page\">\n-    <h1><tt>null_trie_node_update</tt> Interface</h1>\n-\n-    <p>A \"null\" node updater, indicating that no node updates are\n-    required.</p>\n-\n-    <p><a href=\n-    \"concepts.html#concepts_null_policies\">Interface::Concepts::Null\n-    Policy Classes</a> explains the concept of a null policy.</p>\n-\n-    <p>Defined in: <a href=\n-    \"http://gcc.gnu.org/viewcvs/*checkout*/trunk/libstdc%2B%2B-v3/include/ext/pb_ds/trie_policy.hpp\"><tt>trie_policy.hpp</tt></a></p>\n-\n-    <h2><a name=\"link1\" id=\"link1\">Template Parameters</a></h2>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\n-    \"Template Parameters\">\n-      <tr>\n-        <td width=\"20%\" align=\"left\"><b>Parameter</b></td>\n-\n-        <td width=\"50%\" align=\"left\"><b>Description</b></td>\n-\n-        <td width=\"30%\" align=\"left\"><b>Default Value</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"Const_Node_Iterator1933878761\" id=\n-\"Const_Node_Iterator1933878761\"><b>class</b> Const_Node_Iterator</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Const node iterator type.</p>\n-        </td>\n-\n-        <td>-</td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"Node_Iterator4206909839\" id=\n-\"Node_Iterator4206909839\"><b>class</b> Node_Iterator</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Node iterator type.</p>\n-        </td>\n-\n-        <td>-</td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"E_Access_Traits686553840\" id=\n-\"E_Access_Traits686553840\"><b>class</b> E_Access_Traits</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Comparison functor.</p>\n-        </td>\n-\n-        <td>-</td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"Allocator35940069\" id=\n-\"Allocator35940069\"><b>class</b> Allocator</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Allocator type.</p>\n-        </td>\n-\n-        <td>-</td>\n-      </tr>\n-    </table>\n-  </div>\n-</body>\n-</html>"}, {"sha": "01d7f9082f769ab00fe0febd3794504fc2564d6c", "filename": "libstdc++-v3/doc/html/ext/pb_ds/ov_tree_tag.html", "status": "removed", "additions": 0, "deletions": 47, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fov_tree_tag.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fov_tree_tag.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fov_tree_tag.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7", "patch": "@@ -1,47 +0,0 @@\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n-    \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n-<head>\n-  <meta name=\"generator\" content=\n-  \"HTML Tidy for Linux/x86 (vers 12 April 2005), see www.w3.org\" />\n-\n-  <title>ov_tree_tag Interface</title>\n-  <meta http-equiv=\"Content-Type\" content=\n-  \"text/html; charset=us-ascii\" />\n-  </head>\n-\n-<body>\n-  <div id=\"page\">\n-    <h1><tt>ov_tree_tag</tt> Interface</h1>\n-\n-    <p>Ordered-vector tree data structure tag.</p>\n-\n-    <p>Defined in: <a href=\n-    \"http://gcc.gnu.org/viewcvs/*checkout*/trunk/libstdc%2B%2B-v3/include/ext/pb_ds/tag_and_trait.hpp\"><tt>tag_and_trait.hpp</tt></a></p>\n-\n-    <h2><a name=\"link1\" id=\"link1\">Base Classes</a></h2>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Bases\">\n-      <tr>\n-        <td width=\"80%\" align=\"left\"><b>Class</b></td>\n-\n-        <td width=\"20%\" align=\"left\"><b>Derivation Type</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a href=\"tree_tag.html\"><span class=\n-\"c2\"><tt>tree_tag</tt></span></a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>public</p>\n-        </td>\n-      </tr>\n-    </table>\n-  </div>\n-</body>\n-</html>"}, {"sha": "5901d1a88c5a48684586a9ce9a3df4c843adbc9b", "filename": "libstdc++-v3/doc/html/ext/pb_ds/pairing_heap_tag.html", "status": "removed", "additions": 0, "deletions": 47, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpairing_heap_tag.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpairing_heap_tag.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpairing_heap_tag.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7", "patch": "@@ -1,47 +0,0 @@\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n-    \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n-<head>\n-  <meta name=\"generator\" content=\n-  \"HTML Tidy for Linux/x86 (vers 12 April 2005), see www.w3.org\" />\n-\n-  <title>pairing_heap_tag Interface</title>\n-  <meta http-equiv=\"Content-Type\" content=\n-  \"text/html; charset=us-ascii\" />\n-  </head>\n-\n-<body>\n-  <div id=\"page\">\n-    <h1><tt>pairing_heap_tag</tt> Interface</h1>\n-\n-    <p>Pairing-heap data structure tag.</p>\n-\n-    <p>Defined in: <a href=\n-    \"http://gcc.gnu.org/viewcvs/*checkout*/trunk/libstdc%2B%2B-v3/include/ext/pb_ds/tag_and_trait.hpp\"><tt>tag_and_trait.hpp</tt></a></p>\n-\n-    <h2><a name=\"link1\" id=\"link1\">Base Classes</a></h2>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Bases\">\n-      <tr>\n-        <td width=\"80%\" align=\"left\"><b>Class</b></td>\n-\n-        <td width=\"20%\" align=\"left\"><b>Derivation Type</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a href=\"priority_queue_tag.html\"><span class=\n-\"c2\"><tt>priority_queue_tag</tt></span></a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>public</p>\n-        </td>\n-      </tr>\n-    </table>\n-  </div>\n-</body>\n-</html>"}, {"sha": "4168787ecadf37c5c6c5cfb9bfebd32c3b1a5872", "filename": "libstdc++-v3/doc/html/ext/pb_ds/pairing_priority_queue_text_push_pop_timing_test_gcc.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpairing_priority_queue_text_push_pop_timing_test_gcc.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpairing_priority_queue_text_push_pop_timing_test_gcc.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpairing_priority_queue_text_push_pop_timing_test_gcc.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "81f7a5900a023384ccbc4a4c81cc44bcfde231f9", "filename": "libstdc++-v3/doc/html/ext/pb_ds/pairing_priority_queue_text_push_pop_timing_test_local.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpairing_priority_queue_text_push_pop_timing_test_local.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpairing_priority_queue_text_push_pop_timing_test_local.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpairing_priority_queue_text_push_pop_timing_test_local.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "42b707965ff523291bab722050a5e4adb35ee1de", "filename": "libstdc++-v3/doc/html/ext/pb_ds/pairing_priority_queue_text_push_pop_timing_test_msvc.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpairing_priority_queue_text_push_pop_timing_test_msvc.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpairing_priority_queue_text_push_pop_timing_test_msvc.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpairing_priority_queue_text_push_pop_timing_test_msvc.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "9a7ce6c361f85eff0f7afb7291c71be91f1c3ddd", "filename": "libstdc++-v3/doc/html/ext/pb_ds/pairing_priority_queue_text_push_timing_test_gcc.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpairing_priority_queue_text_push_timing_test_gcc.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpairing_priority_queue_text_push_timing_test_gcc.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpairing_priority_queue_text_push_timing_test_gcc.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "472d8691f2e7b69512e89d9c2daa5b138e0117aa", "filename": "libstdc++-v3/doc/html/ext/pb_ds/pairing_priority_queue_text_push_timing_test_local.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpairing_priority_queue_text_push_timing_test_local.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpairing_priority_queue_text_push_timing_test_local.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpairing_priority_queue_text_push_timing_test_local.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "d5488efcf48e95ceeb238610859eb1c5348be582", "filename": "libstdc++-v3/doc/html/ext/pb_ds/pairing_priority_queue_text_push_timing_test_msvc.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpairing_priority_queue_text_push_timing_test_msvc.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpairing_priority_queue_text_push_timing_test_msvc.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpairing_priority_queue_text_push_timing_test_msvc.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "2e9a32c91411fd7c4b2a32dc692d5ae016fb741e", "filename": "libstdc++-v3/doc/html/ext/pb_ds/pat_trie_tag.html", "status": "removed", "additions": 0, "deletions": 47, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpat_trie_tag.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpat_trie_tag.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpat_trie_tag.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7", "patch": "@@ -1,47 +0,0 @@\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n-    \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n-<head>\n-  <meta name=\"generator\" content=\n-  \"HTML Tidy for Linux/x86 (vers 12 April 2005), see www.w3.org\" />\n-\n-  <title>pat_trie_tag Interface</title>\n-  <meta http-equiv=\"Content-Type\" content=\n-  \"text/html; charset=us-ascii\" />\n-  </head>\n-\n-<body>\n-  <div id=\"page\">\n-    <h1><tt>pat_trie_tag</tt> Interface</h1>\n-\n-    <p>PATRICIA trie data structure tag.</p>\n-\n-    <p>Defined in: <a href=\n-    \"http://gcc.gnu.org/viewcvs/*checkout*/trunk/libstdc%2B%2B-v3/include/ext/pb_ds/tag_and_trait.hpp\"><tt>tag_and_trait.hpp</tt></a></p>\n-\n-    <h2><a name=\"link1\" id=\"link1\">Base Classes</a></h2>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Bases\">\n-      <tr>\n-        <td width=\"80%\" align=\"left\"><b>Class</b></td>\n-\n-        <td width=\"20%\" align=\"left\"><b>Derivation Type</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a href=\"tree_tag.html\"><span class=\n-\"c2\"><tt>tree_tag</tt></span></a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>public</p>\n-        </td>\n-      </tr>\n-    </table>\n-  </div>\n-</body>\n-</html>"}, {"sha": "f67722169c1c91e28139415f5241d0b1339a82ff", "filename": "libstdc++-v3/doc/html/ext/pb_ds/point_invalidation_guarantee.html", "status": "removed", "additions": 0, "deletions": 51, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpoint_invalidation_guarantee.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpoint_invalidation_guarantee.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpoint_invalidation_guarantee.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7", "patch": "@@ -1,51 +0,0 @@\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n-    \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n-<head>\n-  <meta name=\"generator\" content=\n-  \"HTML Tidy for Linux/x86 (vers 12 April 2005), see www.w3.org\" />\n-\n-  <title>point_invalidation_guarantee Interface</title>\n-  <meta http-equiv=\"Content-Type\" content=\n-  \"text/html; charset=us-ascii\" />\n-  </head>\n-\n-<body>\n-  <div id=\"page\">\n-    <h1><tt>point_invalidation_guarantee</tt> Interface</h1>\n-\n-    <p>Signifies an invalidation guarantee that includes all those\n-    of its base, and additionally, that any point-type iterator,\n-    pointer, or reference to a container object's mapped value type\n-    is valid as long as its corresponding entry has not be erased,\n-    regardless of modifications to the container object.</p>\n-\n-    <p>Defined in: <a href=\n-    \"http://gcc.gnu.org/viewcvs/*checkout*/trunk/libstdc%2B%2B-v3/include/ext/pb_ds/tag_and_trait.hpp\"><tt>tag_and_trait.hpp</tt></a></p>\n-\n-    <h2><a name=\"link1\" id=\"link1\">Base Classes</a></h2>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Bases\">\n-      <tr>\n-        <td width=\"80%\" align=\"left\"><b>Class</b></td>\n-\n-        <td width=\"20%\" align=\"left\"><b>Derivation Type</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a href=\"basic_invalidation_guarantee.html\"><span class=\n-\"c2\"><tt>basic_invalidation_guarantee</tt></span></a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>public</p>\n-        </td>\n-      </tr>\n-    </table>\n-  </div>\n-</body>\n-</html>"}, {"sha": "dcd995f5f7c7fbcf33a1f68e1c987fec9e852a85", "filename": "libstdc++-v3/doc/html/ext/pb_ds/pq_container_traits.html", "status": "removed", "additions": 0, "deletions": 132, "changes": 132, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpq_container_traits.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpq_container_traits.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpq_container_traits.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7", "patch": "@@ -1,132 +0,0 @@\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n-    \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n-<head>\n-  <meta name=\"generator\" content=\n-  \"HTML Tidy for Linux/x86 (vers 12 April 2005), see www.w3.org\" />\n-\n-  <title>container_traits Interface</title>\n-  <meta http-equiv=\"Content-Type\" content=\n-  \"text/html; charset=us-ascii\" />\n-  </head>\n-\n-<body>\n-  <div id=\"page\">\n-    <h1><tt>container_traits</tt> Interface</h1>\n-\n-    <p>Traits of a priority-queue container based on its underlying\n-    data structure.</p>\n-\n-    <p>Defined in: <a href=\n-    \"http://gcc.gnu.org/viewcvs/*checkout*/trunk/libstdc%2B%2B-v3/include/ext/pb_ds/tag_and_trait.hpp\"><tt>tag_and_trait.hpp</tt></a></p>\n-\n-    <h2><a name=\"link1\" id=\"link1\">Template Parameters</a></h2>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\n-    \"Template Parameters\">\n-      <tr>\n-        <td width=\"20%\" align=\"left\"><b>Parameter</b></td>\n-\n-        <td width=\"50%\" align=\"left\"><b>Description</b></td>\n-\n-        <td width=\"30%\" align=\"left\"><b>Default Value</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"Cntnr59189\" id=\"Cntnr59189\"><b>class</b> Cntnr</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Container type.</p>\n-        </td>\n-\n-        <td>-</td>\n-      </tr>\n-    </table>\n-\n-    <h2><a name=\"link2\" id=\"link2\">Public Types and\n-    Constants</a></h2>\n-\n-    <h3><a name=\"link3\" id=\"link3\">Container Attributes</a></h3>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Types\">\n-      <tr>\n-        <td width=\"30%\" align=\"left\"><b>Type</b></td>\n-\n-        <td width=\"55%\" align=\"left\"><b>Definition</b></td>\n-\n-        <td width=\"15%\" align=\"left\"><b>Description</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"container_category1247973216\" id=\n-\"container_category1247973216\">container_category</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <pre>\n-Underlying data structure.\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Data structure category.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"invalidation_guarantee3793555937\" id=\n-\"invalidation_guarantee3793555937\">invalidation_guarantee</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <pre>\n-Invalidation guarantee.\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Invalidation-guarantee type.</p>\n-\n-          <p>This is either <a href=\n-          \"basic_invalidation_guarantee.html\"><span class=\n-          \"c2\"><tt>basic_invalidation_guarantee</tt></span></a>,\n-          <a href=\"point_invalidation_guarantee.html\"><span class=\n-          \"c2\"><tt>point_invalidation_guarantee</tt></span></a>, or\n-          <a href=\"range_invalidation_guarantee.html\"><span class=\n-          \"c2\"><tt>range_invalidation_guarantee</tt></span></a></p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"split_join_can_throw3200477759\" id=\n-\"split_join_can_throw3200477759\">split_join_can_throw</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <pre>\n-True only if split or join operations can throw.\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Split-join throw indicator.</p>\n-        </td>\n-      </tr>\n-    </table>\n-  </div>\n-</body>\n-</html>"}, {"sha": "95956004527771b4f53f415bcefa50867b742a73", "filename": "libstdc++-v3/doc/html/ext/pb_ds/pq_design.html", "status": "removed", "additions": 0, "deletions": 381, "changes": 381, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpq_design.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpq_design.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpq_design.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7", "patch": "@@ -1,381 +0,0 @@\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n-    \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n-<head>\n-  <meta name=\"generator\" content=\n-  \"HTML Tidy for Linux/x86 (vers 12 April 2005), see www.w3.org\" />\n-\n-  <title>Priority-Queues</title>\n-  <meta http-equiv=\"Content-Type\" content=\n-  \"text/html; charset=us-ascii\" />\n-  </head>\n-\n-<body>\n-  <div id=\"page\">\n-    <h1>Priority-Queue Design</h1>\n-\n-    <h2><a name=\"overview\" id=\"overview\">Overview</a></h2>\n-\n-    <p>The priority-queue container has the following\n-    declaration:</p>\n-    <pre>\n-<b>template</b>&lt;\n-    <b>typename</b> Value_Type,\n-    <b>typename</b> Cmp_Fn = std::less&lt;Value_Type&gt;,\n-    <b>typename</b> Tag = <a href=\"pairing_heap_tag.html\">pairing_heap_tag</a>,\n-    <b>typename</b> Allocator = std::allocator&lt;<b>char</b>&gt; &gt;\n-<b>class</b> <a href=\"priority_queue.html\">priority_queue</a>;\n-</pre>\n-\n-    <p>The parameters have the following meaning:</p>\n-\n-    <ol>\n-      <li><tt>Value_Type</tt> is the value type.</li>\n-\n-      <li><tt>Cmp_Fn</tt> is a value comparison functor</li>\n-\n-      <li><tt>Tag</tt> specifies which underlying data structure\n-      to use.</li>\n-\n-      <li><tt>Allocator</tt> is an allocator\n-      type.</li>\n-    </ol>\n-\n-    <p>The <tt>Tag</tt> parameter specifies which underlying\n-    data structure to use. Instantiating it by <a href=\n-    \"pairing_heap_tag.html\"><tt>pairing_heap_tag</tt></a>,\n-    <a href=\n-    \"binary_heap_tag.html\"><tt>binary_heap_tag</tt></a>,\n-    <a href=\n-    \"binomial_heap_tag.html\"><tt>binomial_heap_tag</tt></a>,\n-    <a href=\n-    \"rc_binomial_heap_tag.html\"><tt>rc_binomial_heap_tag</tt></a>,\n-    or <a href=\n-    \"thin_heap_tag.html\"><tt>thin_heap_tag</tt></a>,\n-    specifies, respectively, an underlying pairing heap [<a href=\n-    \"references.html#fredman86pairing\">fredman86pairing</a>],\n-    binary heap [<a href=\"references.html#clrs2001\">clrs2001</a>],\n-    binomial heap [<a href=\n-    \"references.html#clrs2001\">clrs2001</a>], a binomial heap with\n-    a redundant binary counter [<a href=\n-    \"references.html#maverik_lowerbounds\">maverik_lowerbounds</a>],\n-    or a thin heap [<a href=\n-    \"references.html#kt99fat_heaps\">kt99fat_heas</a>]. These are\n-    explained further in <a href=\"#pq_imp\">Implementations</a>.</p>\n-\n-    <p>As mentioned in <a href=\n-    \"tutorial.html#pq\">Tutorial::Priority Queues</a>, \n-    <a href=\n-    \"priority_queue.html\"><tt>__gnu_pbds::priority_queue</tt></a>\n-    shares most of the same interface with <tt>std::priority_queue</tt>.\n-    <i>E.g.</i> if <tt>q</tt> is a priority queue of type\n-    <tt>Q</tt>, then <tt>q.top()</tt> will return the \"largest\"\n-    value in the container (according to <tt><b>typename</b>\n-    Q::cmp_fn</tt>). <a href=\n-    \"priority_queue.html\"><tt>__gnu_pbds::priority_queue</tt></a>\n-    has a larger (and very slightly different) interface than\n-    <tt>std::priority_queue</tt>, however, since typically\n-    <tt>push</tt> and <tt>pop</tt> are deemed insufficient for\n-    manipulating priority-queues. </p>\n-\n-    <p>Different settings require different priority-queue\n-    implementations which are described in <a href=\n-    \"#pq_imp\">Implementations</a>; <a href=\"#pq_traits\">Traits</a>\n-    discusses ways to differentiate between the different traits of\n-    different implementations.</p>\n-\n-    <h2><a name=\"pq_it\" id=\"pq_it\">Iterators</a></h2>\n-\n-    <p>There are many different underlying-data structures for\n-    implementing priority queues. Unfortunately, most such\n-    structures are oriented towards making <tt>push</tt> and\n-    <tt>top</tt> efficient, and consequently don't allow efficient\n-    access of other elements: for instance, they cannot support an efficient\n-    <tt>find</tt> method. In the use case where it\n-    is important to both access and \"do something with\" an\n-    arbitrary value, one would be out of luck. For example, many graph algorithms require\n-    modifying a value (typically increasing it in the sense of the\n-    priority queue's comparison functor).</p>\n-\n-    <p>In order to access and manipulate an arbitrary value in a\n-    priority queue, one needs to reference the internals of the\n-    priority queue from some form of an associative container -\n-    this is unavoidable. Of course, in order to maintain the\n-    encapsulation of the priority queue, this needs to be done in a\n-    way that minimizes exposure to implementation internals.</p>\n-\n-    <p>In <tt>pb_ds</tt> the priority queue's <tt>insert</tt>\n-    method returns an iterator, which if valid can be used for subsequent <tt>modify</tt> and\n-    <tt>erase</tt> operations. This both preserves the priority\n-    queue's encapsulation, and allows accessing arbitrary values (since the\n-    returned iterators from the <tt>push</tt> operation can be\n-    stored in some form of associative container).</p>\n-\n-    <p>Priority queues' iterators present a problem regarding their\n-    invalidation guarantees. One assumes that calling\n-    <tt><b>operator</b>++</tt> on an iterator will associate it\n-    with the \"next\" value. Priority-queues are\n-    self-organizing: each operation changes what the \"next\" value\n-    means. Consequently, it does not make sense that <tt>push</tt>\n-    will return an iterator that can be incremented - this can have\n-    no possible use. Also, as in the case of hash-based containers,\n-    it is awkward to define if a subsequent <tt>push</tt> operation\n-    invalidates a prior returned iterator: it invalidates it in the\n-    sense that its \"next\" value is not related to what it\n-    previously considered to be its \"next\" value. However, it might not\n-    invalidate it, in the sense that it can be\n-    de-referenced and used for <tt>modify</tt> and <tt>erase</tt>\n-    operations.</p>\n-\n-    <p>Similarly to the case of the other unordered associative\n-    containers, <tt>pb_ds</tt> uses a distinction between\n-    point-type and range type iterators. A priority queue's <tt>iterator</tt> can always be\n-    converted to a <tt>point_iterator</tt>, and a\n-    <tt>const_iterator</tt> can always be converted to a\n-    <tt>const_point_iterator</tt>.</p>\n-\n-    <p>The following snippet demonstrates manipulating an arbitrary\n-    value:</p>\n-    <pre>\n-<i>// A priority queue of integers.</i>\n-<a href=\n-\"priority_queue.html\">priority_queue</a>&lt;<b>int</b>&gt; p;\n-\n-<i>// Insert some values into the priority queue.</i>\n-<a href=\n-\"priority_queue.html\">priority_queue</a>&lt;<b>int</b>&gt;::point_iterator it = p.push(0);\n-\n-p.push(1);\n-p.push(2);\n-\n-<i>// Now modify a value.</i>\n-p.modify(it, 3);\n-\n-assert(p.top() == 3);\n-</pre>\n-\n-    <p>(<a href=\"pq_examples.html#xref\">Priority Queue\n-    Examples::Cross-Referencing</a> shows a more detailed\n-    example.)</p>\n-\n-    <p>It should be noted that an alternative design could embed an\n-    associative container in a priority queue. Could, but most probably should not. To begin with, it should be noted that one\n-    could always encapsulate a priority queue and an associative\n-    container mapping values to priority queue iterators with no\n-    performance loss. One cannot, however, \"un-encapsulate\" a\n-    priority queue embedding an associative container, which might\n-    lead to performance loss. Assume, that one needs to\n-    associate each value with some data unrelated to priority\n-    queues. Then using <tt>pb_ds</tt>'s design, one could use an\n-    associative container mapping each value to a pair consisting\n-    of this data and a priority queue's iterator. Using the\n-    embedded method would need to use two associative\n-    containers. Similar problems might arise in cases where a value\n-    can reside simultaneously in many priority queues.</p>\n-\n-    <h2><a name=\"pq_imp\" id=\"pq_imp\">Implementations</a></h2>\n-\n-    <p>There are three main implementations of priority queues: the\n-    first employs a binary heap, typically one which uses a\n-    sequence; the second uses a tree (or forest of trees), which is\n-    typically less structured than an associative container's tree;\n-    the third simply uses an associative container. These are\n-    shown, respectively, in Figures <a href=\n-    \"#pq_different_underlying_dss\">Underlying Priority-Queue\n-    Data-Structures</a> A1 and A2, Figure <a href=\n-    \"#pq_different_underlying_dss\">Underlying Priority-Queue\n-    Data-Structures</a> B, and Figures <a href=\n-    \"#pq_different_underlying_dss\">Underlying Priority-Queue\n-    Data-Structures</a> C.</p>\n-\n-    <h6 class=\"c1\"><a name=\"pq_different_underlying_dss\" id=\n-    \"pq_different_underlying_dss\"><img src=\n-    \"pq_different_underlying_dss.png\" alt=\"no image\" /></a></h6>\n-\n-    <h6 class=\"c1\">Underlying Priority-Queue Data-Structures.</h6>\n-\n-    <p>Roughly speaking, any value that is both pushed and popped\n-    from a priority queue must incur a logarithmic expense (in the\n-    amortized sense). Any priority queue implementation that would\n-    avoid this, would violate known bounds on comparison-based\n-    sorting (see, <i>e.g.</i>, [<a href=\n-    \"references.html#clrs2001\">clrs2001</a>] and <a href=\n-    \"references.html#brodal96priority\">brodal96priority</a>]).</p>\n-\n-    <p>Most implementations do\n-    not differ in the asymptotic amortized complexity of\n-    <tt>push</tt> and <tt>pop</tt> operations, but they differ in\n-    the constants involved, in the complexity of other operations\n-    (<i>e.g.</i>, <tt>modify</tt>), and in the worst-case\n-    complexity of single operations. In general, the more\n-    \"structured\" an implementation (<i>i.e.</i>, the more internal\n-    invariants it possesses) - the higher its amortized complexity\n-    of <tt>push</tt> and <tt>pop</tt> operations.</p>\n-\n-    <p><tt>pb_ds</tt> implements different algorithms using a\n-    single class: <a href=\"priority_queue.html\">priority_queue</a>.\n-    Instantiating the <tt>Tag</tt> template parameter, \"selects\"\n-    the implementation:</p>\n-\n-    <ol>\n-      <li>Instantiating <tt>Tag = <a href=\n-      \"binary_heap_tag.html\">binary_heap_tag</a></tt> creates\n-      a binary heap of the form in Figures <a href=\n-      \"#pq_different_underlying_dss\">Underlying Priority-Queue\n-      Data-Structures</a> A1 or A2. The former is internally\n-      selected by <a href=\"priority_queue.html\">priority_queue</a>\n-      if <tt>Value_Type</tt> is instantiated by a primitive type\n-      (<i>e.g.</i>, an <tt><b>int</b></tt>); the latter is\n-      internally selected for all other types (<i>e.g.</i>,\n-      <tt>std::string</tt>). This implementations is relatively\n-      unstructured, and so has good <tt>push</tt> and <tt>pop</tt>\n-      performance; it is the \"best-in-kind\" for primitive\n-      types, <i>e.g.</i>, <tt><b>int</b></tt>s. Conversely, it has\n-      high worst-case performance, and can support only linear-time\n-      <tt>modify</tt> and <tt>erase</tt> operations; this is\n-      explained further in <a href=\"#pq_traits\">Traits</a>.</li>\n-\n-      <li>Instantiating <tt>Tag = <a href=\n-      \"pairing_heap_tag.html\">pairing_heap_tag</a></tt>\n-      creates a pairing heap of the form in Figure <a href=\n-      \"#pq_different_underlying_dss\">Underlying Priority-Queue\n-      Data-Structures</a> B. This implementations too is relatively\n-      unstructured, and so has good <tt>push</tt> and <tt>pop</tt>\n-      performance; it is the \"best-in-kind\" for non-primitive\n-      types, <i>e.g.</i>, <tt>std:string</tt>s. It also has very\n-      good worst-case <tt>push</tt> and <tt>join</tt> performance\n-      (<i>O(1)</i>), but has high worst-case <tt>pop</tt>\n-      complexity.</li>\n-\n-      <li>Instantiating <tt>Tag = <a href=\n-      \"binomial_heap_tag.html\">binomial_heap_tag</a></tt>\n-      creates a binomial heap of the form in Figure <a href=\n-      \"#pq_different_underlying_dss\">Underlying Priority-Queue\n-      Data-Structures</a> B. This implementations is more\n-      structured than a pairing heap, and so has worse\n-      <tt>push</tt> and <tt>pop</tt> performance. Conversely, it\n-      has sub-linear worst-case bounds for <tt>pop</tt>,\n-      <i>e.g.</i>, and so it might be preferred in cases where\n-      responsiveness is important.</li>\n-\n-      <li>Instantiating <tt>Tag = <a href=\n-      \"rc_binomial_heap_tag.html\">rc_binomial_heap_tag</a></tt>\n-      creates a binomial heap of the form in Figure <a href=\n-      \"#pq_different_underlying_dss\">Underlying Priority-Queue\n-      Data-Structures</a> B, accompanied by a redundant counter\n-      which governs the trees. This implementations is therefore\n-      more structured than a binomial heap, and so has worse\n-      <tt>push</tt> and <tt>pop</tt> performance. Conversely, it\n-      guarantees <i>O(1)</i> <tt>push</tt> complexity, and so it\n-      might be preferred in cases where the responsiveness of a\n-      binomial heap is insufficient.</li>\n-\n-      <li>Instantiating <tt>Tag = <a href=\n-      \"thin_heap_tag.html\">thin_heap_tag</a></tt> creates a\n-      thin heap of the form in Figure <a href=\n-      \"#pq_different_underlying_dss\">Underlying Priority-Queue\n-      Data-Structures</a> B. This implementations too is more\n-      structured than a pairing heap, and so has worse\n-      <tt>push</tt> and <tt>pop</tt> performance. Conversely, it\n-      has better worst-case and identical amortized complexities\n-      than a Fibonacci heap, and so might be more appropriate for\n-      some graph algorithms.</li>\n-    </ol>\n-\n-    <p><a href=\"pq_performance_tests.html\">Priority-Queue\n-    Performance Tests</a> shows some results for the above, and\n-    discusses these points further.</p>\n-\n-    <p>Of course, one can use any order-preserving associative\n-    container as a priority queue, as in Figure <a href=\n-    \"#pq_different_underlying_dss\">Underlying Priority-Queue\n-    Data-Structures</a> C, possibly by creating an adapter class\n-    over the associative container (much as \n-    <tt>std::priority_queue</tt> can adapt <tt>std::vector</tt>).\n-    This has the advantage that no cross-referencing is necessary\n-    at all; the priority queue itself is an associative container.\n-    Most associative containers are too structured to compete with\n-    priority queues in terms of <tt>push</tt> and <tt>pop</tt>\n-    performance.</p>\n-\n-    <h2><a name=\"pq_traits\" id=\"pq_traits\">Traits</a></h2>\n-\n-    <p>It would be nice if all priority queues could\n-    share exactly the same behavior regardless of implementation. Sadly, this is not possible. Just one for instance is in join operations: joining\n-    two binary heaps might throw an exception (not corrupt\n-    any of the heaps on which it operates), but joining two pairing\n-    heaps is exception free.</p>\n-\n-    <p>Tags and traits are very useful for manipulating generic\n-    types. <a href=\n-    \"priority_queue.html\"><tt>__gnu_pbds::priority_queue</tt></a>\n-    publicly defines <tt>container_category</tt> as one of the tags\n-    discussed in <a href=\"#pq_imp\">Implementations</a>. Given any\n-    container <tt>Cntnr</tt>, the tag of the underlying\n-    data structure can be found via <tt><b>typename</b>\n-    Cntnr::container_category</tt>; this is one of the types shown in\n-    Figure <a href=\"#pq_tag_cd\">Data-structure tag class\n-    hierarchy</a>.</p>\n-\n-    <h6 class=\"c1\"><a name=\"pq_tag_cd\" id=\n-    \"pq_tag_cd\"><img src=\"priority_queue_tag_cd.png\" alt=\n-    \"no image\" /></a></h6>\n-\n-    <h6 class=\"c1\">Data-structure tag class hierarchy.</h6>\n-\n-    <p>Additionally, a traits mechanism can be used to query a\n-    container type for its attributes. Given any container\n-    <tt>Cntnr</tt>, then <tt><a href=\n-    \"assoc_container_traits.html\">__gnu_pbds::container_traits</a>&lt;Cntnr&gt;</tt>\n-    is a traits class identifying the properties of the\n-    container.</p>\n-\n-    <p>To find if a container might throw if two of its objects are\n-    joined, one can use <a href=\n-    \"assoc_container_traits.html\"><tt>container_traits</tt></a><tt>&lt;Cntnr&gt;::split_join_can_throw</tt>,\n-    for example.</p>\n-\n-    <p>Different priority-queue implementations have different invalidation guarantees. This is\n-    especially important, since as explained in <a href=\n-    \"#pq_it\">Iterators</a>, there is no way to access an arbitrary\n-    value of priority queues except for iterators. Similarly to\n-    associative containers, one can use\n-    <a href=\n-    \"assoc_container_traits.html\"><tt>container_traits</tt></a><tt>&lt;Cntnr&gt;::invalidation_guarantee</tt>\n-    to get the invalidation guarantee type of a priority queue.</p>\n-\n-    <p>It is easy to understand from Figure <a href=\n-    \"#pq_different_underlying_dss\">Underlying Priority-Queue\n-    Data-Structures</a>, what <a href=\n-    \"assoc_container_traits.html\"><tt>container_traits</tt></a><tt>&lt;Cntnr&gt;::invalidation_guarantee</tt>\n-    will be for different implementations. All implementations of\n-    type <a href=\"#pq_different_underlying_dss\">Underlying\n-    Priority-Queue Data-Structures</a> B have <a href=\n-    \"point_invalidation_guarantee.html\"><tt>point_invalidation_guarantee</tt></a>:\n-    the container can freely internally reorganize the nodes -\n-    range-type iterators are invalidated, but point-type iterators\n-    are always valid. Implementations of type <a href=\n-    \"#pq_different_underlying_dss\">Underlying Priority-Queue\n-    Data-Structures</a> A1 and A2 have <a href=\n-    \"basic_invalidation_guarantee.html\"><tt>basic_invalidation_guarantee</tt></a>:\n-    the container can freely internally reallocate the array - both\n-    point-type and range-type iterators might be invalidated.</p>\n-\n-    <p>This has major implications, and constitutes a good reason to avoid\n-    using binary heaps. A binary heap can perform <tt>modify</tt>\n-    or <tt>erase</tt> efficiently <u>given a valid point-type\n-    iterator</u>. However, inn order to supply it with a valid point-type\n-    iterator, one needs to iterate (linearly) over all\n-    values, then supply the relevant iterator (recall that a\n-    range-type iterator can always be converted to a point-type\n-    iterator). This means that if the number of <tt>modify</tt> or\n-    <tt>erase</tt> operations is non-negligible (say\n-    super-logarithmic in the total sequence of operations) - binary\n-    heaps will perform badly.</p>\n-    <pre>\n-\n-</pre>\n-  </div>\n-</body>\n-</html>"}, {"sha": "15311ebc35eb00c859d10b3355f2d9abde33c4ed", "filename": "libstdc++-v3/doc/html/ext/pb_ds/pq_examples.html", "status": "removed", "additions": 0, "deletions": 54, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpq_examples.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpq_examples.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpq_examples.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7", "patch": "@@ -1,54 +0,0 @@\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n-    \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n-<head>\n-  <meta name=\"generator\" content=\n-  \"HTML Tidy for Linux/x86 (vers 12 April 2005), see www.w3.org\" />\n-\n-  <title>Examples</title>\n-  <meta http-equiv=\"Content-Type\" content=\n-  \"text/html; charset=us-ascii\" />\n-  </head>\n-\n-<body>\n-  <div id=\"page\">\n-    <h1>Priority-Queue Examples</h1>\n-\n-     <h2><a name=\"basic_usage\" id=\"basic_usage\">Basic Use</a></h2>\n-\n-    <ol>\n-      <li><a href= \"http://gcc.gnu.org/viewcvs/*checkout*/trunk/libstdc%2B%2B-v3/testsuite/ext/pb_ds/example/basic_priority_queue.cc\"><tt>basic_priority_queue.cc</tt></a>\n-      Basic use of priority queues.</li>\n-\n-      <li><a href= \"http://gcc.gnu.org/viewcvs/*checkout*/trunk/libstdc%2B%2B-v3/testsuite/ext/pb_ds/example/priority_queue_split_join.cc\"><tt>priority_queue_split_join.cc</tt></a>\n-      Splitting and joining priority queues.</li>\n-\n-      <li><a href= \"http://gcc.gnu.org/viewcvs/*checkout*/trunk/libstdc%2B%2B-v3/testsuite/ext/pb_ds/example/priority_queue_erase_if.cc\"><tt>priority_queue_erase_if.cc</tt></a>\n-      Conditionally erasing values from a container object.</li>\n-    </ol>\n-\n-    <h2><a name=\"generics\" id=\"generics\">Generics</a></h2>\n-\n-    <ol>\n-      <li><a href= \"http://gcc.gnu.org/viewcvs/*checkout*/trunk/libstdc%2B%2B-v3/testsuite/ext/pb_ds/example/priority_queue_container_traits.cc\"><tt>priority_queue_container_traits.cc</tt></a>\n-      Using <a href=\"assoc_container_traits.html\"><tt>container_traits</tt></a>\n-      to query about underlying data structure behavior.</li>\n-    </ol>\n-\n-    <h2><a name=\"xref\" id=\"xref\">Cross Referencing</a></h2>\n-\n-\n-    <ol>\n-      <li><a href= \"http://gcc.gnu.org/viewcvs/*checkout*/trunk/libstdc%2B%2B-v3/testsuite/ext/pb_ds/example/priority_queue_xref.cc\"><tt>priority_queue_xref.cc</tt></a>\n-      Cross referencing an associative container and a priority\n-      queue.</li>\n-\n-      <li><a href= \"http://gcc.gnu.org/viewcvs/*checkout*/trunk/libstdc%2B%2B-v3/testsuite/ext/pb_ds/example/priority_queue_dijkstra.cc\"><tt>priority_queue_dijkstra.cc</tt></a>\n-      Cross referencing a vector and a priority queue using a\n-      <u>very</u> simple version of Dijkstra's shortest path\n-      algorithm.</li>\n-    </ol>\n-  </div>\n-</body>\n-</html>"}, {"sha": "3a6b269120853e842ba54b16598ee074df67b33e", "filename": "libstdc++-v3/doc/html/ext/pb_ds/pq_performance_tests.html", "status": "removed", "additions": 0, "deletions": 332, "changes": 332, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpq_performance_tests.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpq_performance_tests.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpq_performance_tests.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7", "patch": "@@ -1,332 +0,0 @@\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n-    \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n-<head>\n-<meta name=\"generator\" content=\"HTML Tidy for Linux/x86 (vers 12 April 2005), see www.w3.org\" />\n-<title>Priority-Queue Performance Tests</title>\n-<meta http-equiv=\"Content-Type\" content=\"text/html; charset=us-ascii\" />\n-</head>\n-<body>\n-<div id=\"page\">\n-<h1>Priority-Queue Performance Tests</h1>\n-<h2><a name=\"settings\" id=\"settings\">Settings</a></h2>\n-<p>This section describes performance tests and their results.\n-    In the following, <a href=\"#gcc\"><u>g++</u></a>, <a href=\"#msvc\"><u>msvc++</u></a>, and <a href=\"#local\"><u>local</u></a> (the build used for generating this\n-    documentation) stand for three different builds:</p>\n-<div id=\"gcc_settings_div\">\n-<div class=\"c1\">\n-<h3><a name=\"gcc\" id=\"gcc\"><u>g++</u></a></h3>\n-<ul>\n-<li>CPU speed - cpu MHz : 2660.644</li>\n-<li>Memory - MemTotal: 484412 kB</li>\n-<li>Platform -\n-          Linux-2.6.12-9-386-i686-with-debian-testing-unstable</li>\n-<li>Compiler - g++ (GCC) 4.0.2 20050808 (prerelease)\n-          (Ubuntu 4.0.1-4ubuntu9) Copyright (C) 2005 Free Software\n-          Foundation, Inc. This is free software; see the source\n-          for copying conditions. There is NO warranty; not even\n-          for MERCHANTABILITY or FITNESS FOR A PARTICULAR\n-          PURPOSE.</li>\n-</ul>\n-</div>\n-<div class=\"c2\"></div>\n-</div>\n-<div id=\"msvc_settings_div\">\n-<div class=\"c1\">\n-<h3><a name=\"msvc\" id=\"msvc\"><u>msvc++</u></a></h3>\n-<ul>\n-<li>CPU speed - cpu MHz : 2660.554</li>\n-<li>Memory - MemTotal: 484412 kB</li>\n-<li>Platform - Windows XP Pro</li>\n-<li>Compiler - Microsoft (R) 32-bit C/C++ Optimizing\n-          Compiler Version 13.10.3077 for 80x86 Copyright (C)\n-          Microsoft Corporation 1984-2002. All rights\n-          reserved.</li>\n-</ul>\n-</div>\n-<div class=\"c2\"></div>\n-</div>\n-<div id=\"local_settings_div\"><div style = \"border-style: dotted; border-width: 1px; border-color: lightgray\"><h3><a name = \"local\"><u>local</u></a></h3><ul>\n-<li>CPU speed - cpu MHz\t\t: 2250.000</li>\n-<li>Memory - MemTotal:      2076248 kB</li>\n-<li>Platform - Linux-2.6.16-1.2133_FC5-i686-with-redhat-5-Bordeaux</li>\n-<li>Compiler - g++ (GCC) 4.1.1 20060525 (Red Hat 4.1.1-1)\n-Copyright (C) 2006 Free Software Foundation, Inc.\n-This is free software; see the source for copying conditions.  There is NO\n-warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n-</li>\n-</ul>\n-</div><div style = \"width: 100%; height: 20px\"></div></div>\n-<h2><a name=\"pq_tests\" id=\"pq_tests\">Tests</a></h2>\n-<ol>\n-<li><a href=\"priority_queue_text_push_timing_test.html\">Priority Queue\n-      Text <tt>push</tt> Timing Test</a></li>\n-<li><a href=\"priority_queue_text_push_pop_timing_test.html\">Priority\n-      Queue Text <tt>push</tt> and <tt>pop</tt> Timing\n-      Test</a></li>\n-<li><a href=\"priority_queue_random_int_push_timing_test.html\">Priority\n-      Queue Random Integer <tt>push</tt> Timing Test</a></li>\n-<li><a href=\"priority_queue_random_int_push_pop_timing_test.html\">Priority\n-      Queue Random Integer <tt>push</tt> and <tt>pop</tt> Timing\n-      Test</a></li>\n-<li><a href=\"priority_queue_text_pop_mem_usage_test.html\">Priority Queue\n-      Text <tt>pop</tt> Memory Use Test</a></li>\n-<li><a href=\"priority_queue_text_join_timing_test.html\">Priority Queue\n-      Text <tt>join</tt> Timing Test</a></li>\n-<li><a href=\"priority_queue_text_modify_up_timing_test.html\">Priority\n-      Queue Text <tt>modify</tt> Timing Test - I</a></li>\n-<li><a href=\"priority_queue_text_modify_down_timing_test.html\">Priority\n-      Queue Text <tt>modify</tt> Timing Test - II</a></li>\n-</ol>\n-<h2><a name=\"pq_observations\" id=\"pq_observations\">Observations</a></h2>\n-<h3><a name=\"pq_observations_cplx\" id=\"pq_observations_cplx\">Underlying Data Structures\n-    Complexity</a></h3>\n-<p>The following table shows the complexities of the different\n-    underlying data structures in terms of orders of growth. It is\n-    interesting to note that this table implies something about the\n-    constants of the operations as well (see <a href=\"#pq_observations_amortized_push_pop\">Amortized <tt>push</tt>\n-    and <tt>pop</tt> operations</a>).</p>\n-<table class=\"c1\" width=\"100%\" border=\"1\" summary=\"pq complexities\">\n-<tr>\n-<td align=\"left\"></td>\n-<td align=\"left\"><tt>push</tt></td>\n-<td align=\"left\"><tt>pop</tt></td>\n-<td align=\"left\"><tt>modify</tt></td>\n-<td align=\"left\"><tt>erase</tt></td>\n-<td align=\"left\"><tt>join</tt></td>\n-</tr>\n-<tr>\n-<td align=\"left\">\n-<p><tt>std::priority_queue</tt></p>\n-</td>\n-<td align=\"left\">\n-<p><i>&Theta;(n)</i> worst</p>\n-<p><i>&Theta;(log(n))</i> amortized</p>\n-</td>\n-<td align=\"left\">\n-<p class=\"c1\">&Theta;(log(n)) Worst</p>\n-</td>\n-<td align=\"left\">\n-<p><i>Theta;(n log(n))</i> Worst</p>\n-<p><sub><a href=\"#std_mod1\">[std note 1]</a></sub></p>\n-</td>\n-<td align=\"left\">\n-<p class=\"c3\">&Theta;(n log(n))</p>\n-<p><sub><a href=\"#std_mod2\">[std note 2]</a></sub></p>\n-</td>\n-<td align=\"left\">\n-<p class=\"c3\">&Theta;(n log(n))</p>\n-<p><sub><a href=\"#std_mod1\">[std note 1]</a></sub></p>\n-</td>\n-</tr>\n-<tr>\n-<td align=\"left\">\n-<p><a href=\"priority_queue.html\"><tt>priority_queue</tt></a></p>\n-<p>with <tt>Tag</tt> =</p>\n-<p><a href=\"pairing_heap_tag.html\"><tt>pairing_heap_tag</tt></a></p>\n-</td>\n-<td align=\"left\">\n-<p class=\"c1\">O(1)</p>\n-</td>\n-<td align=\"left\">\n-<p><i>&Theta;(n)</i> worst</p>\n-<p><i>&Theta;(log(n))</i> amortized</p>\n-</td>\n-<td align=\"left\">\n-<p><i>&Theta;(n)</i> worst</p>\n-<p><i>&Theta;(log(n))</i> amortized</p>\n-</td>\n-<td align=\"left\">\n-<p><i>&Theta;(n)</i> worst</p>\n-<p><i>&Theta;(log(n))</i> amortized</p>\n-</td>\n-<td align=\"left\">\n-<p class=\"c1\">O(1)</p>\n-</td>\n-</tr>\n-<tr>\n-<td align=\"left\">\n-<p><a href=\"priority_queue.html\"><tt>priority_queue</tt></a></p>\n-<p>with <tt>Tag</tt> =</p>\n-<p><a href=\"binary_heap_tag.html\"><tt>binary_heap_tag</tt></a></p>\n-</td>\n-<td align=\"left\">\n-<p><i>&Theta;(n)</i> worst</p>\n-<p><i>&Theta;(log(n))</i> amortized</p>\n-</td>\n-<td align=\"left\">\n-<p><i>&Theta;(n)</i> worst</p>\n-<p><i>&Theta;(log(n))</i> amortized</p>\n-</td>\n-<td align=\"left\">\n-<p class=\"c1\">&Theta;(n)</p>\n-</td>\n-<td align=\"left\">\n-<p class=\"c1\">&Theta;(n)</p>\n-</td>\n-<td align=\"left\">\n-<p class=\"c1\">&Theta;(n)</p>\n-</td>\n-</tr>\n-<tr>\n-<td align=\"left\">\n-<p><a href=\"priority_queue.html\"><tt>priority_queue</tt></a></p>\n-<p>with <tt>Tag</tt> =</p>\n-<p><a href=\"binomial_heap_tag.html\"><tt>binomial_heap_tag</tt></a></p>\n-</td>\n-<td align=\"left\">\n-<p><i>&Theta;(log(n))</i> worst</p>\n-<p><i>O(1)</i> amortized</p>\n-</td>\n-<td align=\"left\">\n-<p class=\"c1\">&Theta;(log(n))</p>\n-</td>\n-<td align=\"left\">\n-<p class=\"c1\">&Theta;(log(n))</p>\n-</td>\n-<td align=\"left\">\n-<p class=\"c1\">&Theta;(log(n))</p>\n-</td>\n-<td align=\"left\">\n-<p class=\"c1\">&Theta;(log(n))</p>\n-</td>\n-</tr>\n-<tr>\n-<td align=\"left\">\n-<p><a href=\"priority_queue.html\"><tt>priority_queue</tt></a></p>\n-<p>with <tt>Tag</tt> =</p>\n-<p><a href=\"rc_binomial_heap_tag.html\"><tt>rc_binomial_heap_tag</tt></a></p>\n-</td>\n-<td align=\"left\">\n-<p class=\"c1\">O(1)</p>\n-</td>\n-<td align=\"left\">\n-<p class=\"c1\">&Theta;(log(n))</p>\n-</td>\n-<td align=\"left\">\n-<p class=\"c1\">&Theta;(log(n))</p>\n-</td>\n-<td align=\"left\">\n-<p class=\"c1\">&Theta;(log(n))</p>\n-</td>\n-<td align=\"left\">\n-<p class=\"c1\">&Theta;(log(n))</p>\n-</td>\n-</tr>\n-<tr>\n-<td align=\"left\">\n-<p><a href=\"priority_queue.html\"><tt>priority_queue</tt></a></p>\n-<p>with <tt>Tag</tt> =</p>\n-<p><a href=\"thin_heap_tag.html\"><tt>thin_heap_tag</tt></a></p>\n-</td>\n-<td align=\"left\">\n-<p class=\"c1\">O(1)</p>\n-</td>\n-<td align=\"left\">\n-<p><i>&Theta;(n)</i> worst</p>\n-<p><i>&Theta;(log(n))</i> amortized</p>\n-</td>\n-<td align=\"left\">\n-<p><i>&Theta;(log(n))</i> worst</p>\n-<p><i>O(1)</i> amortized,</p>or\n-\n-          <p><i>&Theta;(log(n))</i> amortized</p>\n-<p><sub><a href=\"#thin_heap_note\">[thin_heap_note]</a></sub></p>\n-</td>\n-<td align=\"left\">\n-<p><i>&Theta;(n)</i> worst</p>\n-<p><i>&Theta;(log(n))</i> amortized</p>\n-</td>\n-<td align=\"left\">\n-<p class=\"c1\">&Theta;(n)</p>\n-</td>\n-</tr>\n-</table>\n-<p><sub><a name=\"std_mod1\" id=\"std_mod1\">[std note 1]</a> This\n-    is not a property of the algorithm, but rather due to the fact\n-    that the STL's priority queue implementation does not support\n-    iterators (and consequently the ability to access a specific\n-    value inside it). If the priority queue is adapting an\n-    <tt>std::vector</tt>, then it is still possible to reduce this\n-    to <i>&Theta;(n)</i> by adapting over the STL's adapter and\n-    using the fact that <tt>top</tt> returns a reference to the\n-    first value; if, however, it is adapting an\n-    <tt>std::deque</tt>, then this is impossible.</sub></p>\n-<p><sub><a name=\"std_mod2\" id=\"std_mod2\">[std note 2]</a> As\n-    with <a href=\"#std_mod1\">[std note 1]</a>, this is not a\n-    property of the algorithm, but rather the STL's implementation.\n-    Again, if the priority queue is adapting an\n-    <tt>std::vector</tt> then it is possible to reduce this to\n-    <i>&Theta;(n)</i>, but with a very high constant (one must call\n-    <tt>std::make_heap</tt> which is an expensive linear\n-    operation); if the priority queue is adapting an\n-    <tt>std::dequeu</tt>, then this is impossible.</sub></p>\n-<p><sub><a name=\"thin_heap_note\" id=\"thin_heap_note\">[thin_heap_note]</a> A thin heap has\n-    <i>&amp;Theta(log(n))</i> worst case <tt>modify</tt> time\n-    always, but the amortized time depends on the nature of the\n-    operation: I) if the operation increases the key (in the sense\n-    of the priority queue's comparison functor), then the amortized\n-    time is <i>O(1)</i>, but if II) it decreases it, then the\n-    amortized time is the same as the worst case time. Note that\n-    for most algorithms, I) is important and II) is not.</sub></p>\n-<h3><a name=\"pq_observations_amortized_push_pop\" id=\"pq_observations_amortized_push_pop\">Amortized <tt>push</tt>\n-    and <tt>pop</tt> operations</a></h3>\n-<p>In many cases, a priority queue is needed primarily for\n-    sequences of <tt>push</tt> and <tt>pop</tt> operations. All of\n-    the underlying data structures have the same amortized\n-    logarithmic complexity, but they differ in terms of\n-    constants.</p>\n-<p>The table above shows that the different data structures are\n-    \"constrained\" in some respects. In general, if a data structure\n-    has lower worst-case complexity than another, then it will\n-    perform slower in the amortized sense. Thus, for example a\n-    redundant-counter binomial heap (<a href=\"priority_queue.html\"><tt>priority_queue</tt></a> with\n-    <tt>Tag</tt> = <a href=\"rc_binomial_heap_tag.html\"><tt>rc_binomial_heap_tag</tt></a>)\n-    has lower worst-case <tt>push</tt> performance than a binomial\n-    heap (<a href=\"priority_queue.html\"><tt>priority_queue</tt></a>\n-    with <tt>Tag</tt> = <a href=\"binomial_heap_tag.html\"><tt>binomial_heap_tag</tt></a>),\n-    and so its amortized <tt>push</tt> performance is slower in\n-    terms of constants.</p>\n-<p>As the table shows, the \"least constrained\" underlying\n-    data structures are binary heaps and pairing heaps.\n-    Consequently, it is not surprising that they perform best in\n-    terms of amortized constants.</p>\n-<ol>\n-<li>Pairing heaps seem to perform best for non-primitive\n-      types (<i>e.g.</i>, <tt>std::string</tt>s), as shown by\n-      <a href=\"priority_queue_text_push_timing_test.html\">Priority\n-      Queue Text <tt>push</tt> Timing Test</a> and <a href=\"priority_queue_text_push_pop_timing_test.html\">Priority\n-      Queue Text <tt>push</tt> and <tt>pop</tt> Timing\n-      Test</a></li>\n-<li>binary heaps seem to perform best for primitive types\n-      (<i>e.g.</i>, <tt><b>int</b></tt>s), as shown by <a href=\"priority_queue_random_int_push_timing_test.html\">Priority\n-      Queue Random Integer <tt>push</tt> Timing Test</a> and\n-      <a href=\"priority_queue_random_int_push_pop_timing_test.html\">Priority\n-      Queue Random Integer <tt>push</tt> and <tt>pop</tt> Timing\n-      Test</a>.</li>\n-</ol>\n-<h3><a name=\"pq_observations_graph\" id=\"pq_observations_graph\">Graph Algorithms</a></h3>\n-<p>In some graph algorithms, a decrease-key operation is\n-    required [<a href=\"references.html#clrs2001\">clrs2001</a>];\n-    this operation is identical to <tt>modify</tt> if a value is\n-    increased (in the sense of the priority queue's comparison\n-    functor). The table above and <a href=\"priority_queue_text_modify_up_timing_test.html\">Priority Queue\n-    Text <tt>modify</tt> Timing Test - I</a> show that a thin heap\n-    (<a href=\"priority_queue.html\"><tt>priority_queue</tt></a> with\n-    <tt>Tag</tt> = <a href=\"thin_heap_tag.html\"><tt>thin_heap_tag</tt></a>)\n-    outperforms a pairing heap (<a href=\"priority_queue.html\"><tt>priority_queue</tt></a> with\n-    <tt>Tag</tt> =<tt>Tag</tt> = <a href=\"pairing_heap_tag.html\"><tt>pairing_heap_tag</tt></a>),\n-    but the rest of the tests show otherwise.</p>\n-<p>This makes it difficult to decide which implementation to\n-    use in this case. Dijkstra's shortest-path algorithm, for\n-    example, requires <i>&Theta;(n)</i> <tt>push</tt> and\n-    <tt>pop</tt> operations (in the number of vertices), but\n-    <i>O(n<sup>2</sup>)</i> <tt>modify</tt> operations, which can\n-    be in practice <i>&Theta;(n)</i> as well. It is difficult to\n-    find an <i>a-priori</i> characterization of graphs in which the\n-    <u>actual</u> number of <tt>modify</tt> operations will dwarf\n-    the number of <tt>push</tt> and <tt>pop</tt> operations.</p>\n-</div>\n-</body>\n-</html>"}, {"sha": "9084409d35011c32bb801e85aad45d0a74ef479b", "filename": "libstdc++-v3/doc/html/ext/pb_ds/pq_regression_tests.html", "status": "removed", "additions": 0, "deletions": 52, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpq_regression_tests.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpq_regression_tests.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpq_regression_tests.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7", "patch": "@@ -1,52 +0,0 @@\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\"\n-    \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n-\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n-<head>\n-  <meta name=\"generator\" content=\n-  \"HTML Tidy for Linux/x86 (vers 12 April 2005), see www.w3.org\" />\n-\n-  <title>Priority-Queue Regression Tests</title>\n-  <meta http-equiv=\"Content-Type\" content=\n-  \"text/html; charset=us-ascii\" />\n-  </head>\n-\n-<body>\n-  <div id=\"page\">\n-    <h1>Priority-Queue Regression Tests</h1>\n-\n-    <h2><a name=\"assoc_desc\" id=\"assoc_desc\">Description</a></h2>\n-\n-    <p>The library contains a single comprehensive regression test.\n-    For a given container type in <tt>pb_ds</tt>, the test creates\n-    an object of the container type and an object of the\n-    corresponding STL type (<i>i.e.</i>,\n-    <tt>std::priority_queue</tt>). It then performs a random\n-    sequence of methods with random arguments (<i>e.g.</i>, pushes,\n-    pops, and so forth) on both objects. At each operation, the\n-    test checks the return value of the method, and optionally both\n-    compares <tt>pb_ds</tt>'s object with the STL's object as well\n-    as performing other consistency checks on <tt>pb_ds</tt>'s\n-    object (<i>e.g.</i>, that the size returned by the\n-    <tt>size</tt> method corresponds to the distance between its\n-    <tt>begin</tt> and end iterators).</p>\n-\n-    <p>Additionally, the test integrally checks exception safety\n-    and resource leaks. This is done as follows. A special\n-    allocator type, written for the purpose of the test, both\n-    randomly throws an exceptions when allocations are performed,\n-    and tracks allocations and de-allocations. The exceptions thrown\n-    at allocations simulate memory-allocation failures; the\n-    tracking mechanism checks for memory-related bugs (<i>e.g.</i>,\n-    resource leaks and multiple de-allocations). Both\n-    <tt>pb_ds</tt>'s containers and the containers' value-types are\n-    configured to use this allocator.</p>\n-\n-    <h2><a name=\"pq_tests\" id=\"pq_tests\">Tests</a></h2>\n-\n-    <p><a href=\n-    \"http://gcc.gnu.org/viewcvs/*checkout*/trunk/libstdc%2B%2B-v3/testsuite/ext/pb_ds/regression/priority_queue_rand.cc\"><tt>priority_queue_rand.cc</tt></a>\n-    checks all priority queue types.</p>\n-  </div>\n-</body>\n-</html>"}, {"sha": "de8cb447c71b8a0362628c27e77d6bd9e24b269b", "filename": "libstdc++-v3/doc/html/ext/pb_ds/pq_tests.html", "status": "removed", "additions": 0, "deletions": 24, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpq_tests.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpq_tests.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpq_tests.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7", "patch": "@@ -1,24 +0,0 @@\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\"\n-    \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n-\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n-<head>\n-  <meta name=\"generator\" content=\n-  \"HTML Tidy for Linux/x86 (vers 12 April 2005), see www.w3.org\" />\n-\n-  <title>Priority-Queue Tests</title>\n-  <meta http-equiv=\"Content-Type\" content=\n-  \"text/html; charset=us-ascii\" />\n-  </head>\n-\n-<body>\n-  <div id=\"page\">\n-    <h1>Priority-Queue Tests</h1>\n-\n-    <p><a href=\"pq_regression_tests.html\">Priority-Queue Regression\n-    Tests</a> describes the regression tests; <a href=\n-    \"pq_performance_tests.html\">Priority-Queue Performance\n-    Tests</a> describes the performance tests.</p>\n-  </div>\n-</body>\n-</html>"}, {"sha": "7c888849918c2ead390285bed8b7547153c0ba50", "filename": "libstdc++-v3/doc/html/ext/pb_ds/prerequisites.html", "status": "removed", "additions": 0, "deletions": 46, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fprerequisites.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fprerequisites.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fprerequisites.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7", "patch": "@@ -1,46 +0,0 @@\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\"\n-    \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n-\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n-<head>\n-  <meta name=\"generator\" content=\n-  \"HTML Tidy for Linux/x86 (vers 12 April 2005), see www.w3.org\" />\n-\n-  <title>Prerequisites</title>\n-  <meta http-equiv=\"Content-Type\" content=\n-  \"text/html; charset=us-ascii\" />\n-  </head>\n-\n-<body>\n-  <div id=\"page\">\n-    <h1>Usage Prerequisites</h1>\n-\n-    <p><tt>pb_ds</tt> has been successfully tested with the\n-    following compilers:</p>\n-\n-    <ol>\n-      <li>g++ 3.3.1, 3.4.4, 4.0, 4.1, and what will be 4.2</li>\n-\n-      <li>Intel icpc 8.1 and 9</li>\n-\n-      <li>Visual C++ .Net 2005</li>\n-    </ol>\n-\n-    <p>The library contains only header files, and does not require\n-    any other libraries except the STL. All classes are defined in\n-    <tt><b>namespace</b> pb_ds</tt>. The library internally uses\n-    macros beginning with <tt>PB_DS</tt> (<i>e.g.</i>, for header\n-    guards), but <tt>#<b>undef</b></tt>s anything it\n-    <tt>#<b>define</b></tt>s (except for header guards). Compiling\n-    the library in an environment where macros beginning in\n-    <tt>PB_DS</tt> are defined, may yield unpredictable results in\n-    compilation, execution, or both.</p>\n-\n-    <p> Further dependencies are necessary to create the visual output\n-    for the performance tests. To create these graphs, two additional\n-    packages will be needed: <b>pychart</b> and <b>Beautiful\n-    Soup</b>. Both are freely available.\n-    </p>\n-  </div>\n-</body>\n-</html>"}, {"sha": "def310f0c004507ac8ae44264df40fef083744bb", "filename": "libstdc++-v3/doc/html/ext/pb_ds/priority_queue.html", "status": "removed", "additions": 0, "deletions": 995, "changes": 995, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7", "patch": "@@ -1,995 +0,0 @@\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n-    \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n-<head>\n-  <meta name=\"generator\" content=\n-  \"HTML Tidy for Linux/x86 (vers 12 April 2005), see www.w3.org\" />\n-\n-  <title>priority_queue Interface</title>\n-  <meta http-equiv=\"Content-Type\" content=\n-  \"text/html; charset=us-ascii\" />\n-  </head>\n-\n-<body>\n-  <div id=\"page\">\n-    <h1><tt>priority_queue</tt> Interface</h1>\n-\n-    <p>Basic priority queue.</p>\n-\n-    <p>Defined in: <a href=\n-    \"http://gcc.gnu.org/viewcvs/*checkout*/trunk/libstdc%2B%2B-v3/include/ext/pb_ds/priority_queue.hpp\"><tt>priority_queue.hpp</tt></a></p>\n-\n-    <h2><a name=\"link1\" id=\"link1\">Template Parameters</a></h2>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\n-    \"Template Parameters\">\n-      <tr>\n-        <td width=\"20%\" align=\"left\"><b>Parameter</b></td>\n-\n-        <td width=\"50%\" align=\"left\"><b>Description</b></td>\n-\n-        <td width=\"30%\" align=\"left\"><b>Default Value</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"Value_Type216514186\" id=\n-\"Value_Type216514186\"><b>typename</b> Value_Type</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Value type.</p>\n-        </td>\n-\n-        <td>-</td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"Cmp_Fn294335\" id=\"Cmp_Fn294335\"><b>class</b> Cmp_Fn </a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Comparison functor.</p>\n-        </td>\n-\n-        <td>\n-          <pre>\n-std::less&lt;<a href=\n-\"#Value_Type216514186\"><tt>Value_Type</tt></a>&gt;\n-</pre>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"Tag278938\" id=\"Tag278938\"><b>class</b> Tag </a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Data-structure tag.</p>\n-        </td>\n-\n-        <td><a href=\"pairing_heap_tag.html\"><span class=\n-        \"c2\"><tt>pairing_heap_tag</tt></span></a></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"Allocator35940069\" id=\n-\"Allocator35940069\"><b>class</b> Allocator </a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Allocator type.</p>\n-        </td>\n-\n-        <td>\n-          <pre>\n-std::allocator&lt;<b>char</b>&gt;\n-</pre>\n-        </td>\n-      </tr>\n-    </table>\n-\n-    <h2><a name=\"link2\" id=\"link2\">Public Types and\n-    Constants</a></h2>\n-\n-    <h3><a name=\"link3\" id=\"link3\">General Container\n-    Definitions</a></h3>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Types\">\n-      <tr>\n-        <td width=\"30%\" align=\"left\"><b>Type</b></td>\n-\n-        <td width=\"55%\" align=\"left\"><b>Definition</b></td>\n-\n-        <td width=\"15%\" align=\"left\"><b>Description</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"size_type55424436\" id=\"size_type55424436\">size_type</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <pre>\n-<b>typename</b> <a href=\n-\"#Allocator35940069\"><tt>Allocator</tt></a>::size_type\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Size type.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"difference_type868028452\" id=\n-\"difference_type868028452\">difference_type</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <pre>\n-<b>typename</b> <a href=\n-\"#Allocator35940069\"><tt>Allocator</tt></a>::difference_type\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Difference type.</p>\n-        </td>\n-      </tr>\n-    </table>\n-\n-    <h3><a name=\"link4\" id=\"link4\">Categories</a></h3>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Types\">\n-      <tr>\n-        <td width=\"30%\" align=\"left\"><b>Type</b></td>\n-\n-        <td width=\"55%\" align=\"left\"><b>Definition</b></td>\n-\n-        <td width=\"15%\" align=\"left\"><b>Description</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"container_category1247973216\" id=\n-\"container_category1247973216\">container_category</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <pre>\n-<a href=\"#Tag278938\"><tt>Tag</tt></a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>The underlying mapped-structure tag of the\n-          container.</p>\n-\n-          <p>This is one of:</p>\n-\n-          <ol>\n-            <li><a href=\"binary_heap_tag.html\"><span class=\n-            \"c2\"><tt>binary_heap_tag</tt></span></a></li>\n-\n-            <li><a href=\"binomial_heap_tag.html\"><span class=\n-            \"c2\"><tt>binomial_heap_tag</tt></span></a></li>\n-\n-            <li><a href=\"rc_binomial_heap_tag.html\"><span class=\n-            \"c2\"><tt>rc_binomial_heap_tag</tt></span></a></li>\n-\n-            <li><a href=\"pairing_heap_tag.html\"><span class=\n-            \"c2\"><tt>pairing_heap_tag</tt></span></a></li>\n-\n-            <li><a href=\"thin_heap_tag.html\"><span class=\n-            \"c2\"><tt>thin_heap_tag</tt></span></a></li>\n-          </ol>\n-        </td>\n-      </tr>\n-    </table>\n-\n-    <h3><a name=\"link5\" id=\"link5\">Policy Definitions</a></h3>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Types\">\n-      <tr>\n-        <td width=\"30%\" align=\"left\"><b>Type</b></td>\n-\n-        <td width=\"55%\" align=\"left\"><b>Definition</b></td>\n-\n-        <td width=\"15%\" align=\"left\"><b>Description</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"cmp_fn394495\" id=\"cmp_fn394495\">cmp_fn</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <pre>\n-<a href=\"#Cmp_Fn294335\"><tt>Cmp_Fn</tt></a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Comparison functor type.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"allocator48440069\" id=\"allocator48440069\">allocator</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <pre>\n-<a href=\"#Allocator35940069\"><tt>Allocator</tt></a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p><a href=\"#Allocator35940069\"><tt>Allocator</tt></a>\n-          type.</p>\n-        </td>\n-      </tr>\n-    </table>\n-\n-    <h3><a name=\"link6\" id=\"link6\">Value-Type Definitions</a></h3>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Types\">\n-      <tr>\n-        <td width=\"30%\" align=\"left\"><b>Type</b></td>\n-\n-        <td width=\"55%\" align=\"left\"><b>Definition</b></td>\n-\n-        <td width=\"15%\" align=\"left\"><b>Description</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"value_type279018186\" id=\n-\"value_type279018186\">value_type</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <pre>\n-<a href=\"#Value_Type216514186\"><tt>Value_Type</tt></a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Value type.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"reference54418471\" id=\"reference54418471\">reference</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <pre>\n-<b>typename</b> <a href=\n-\"#allocator48440069\"><tt>allocator</tt></a>::<b>template</b> rebind&lt;\n-    <a href=\n-\"#value_type279018186\"><tt>value_type</tt></a>&gt;::other::reference\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Value reference type.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"const_reference495461441\" id=\n-\"const_reference495461441\">const_reference</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <pre>\n-<b>typename</b> <a href=\n-\"#allocator48440069\"><tt>allocator</tt></a>::<b>template</b> rebind&lt;\n-    <a href=\n-\"#value_type279018186\"><tt>value_type</tt></a>&gt;::other::const_reference\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Const value <a href=\n-          \"#reference54418471\"><tt>reference</tt></a> type.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"pointer2179769\" id=\"pointer2179769\">pointer</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <pre>\n-<b>typename</b> <a href=\n-\"#allocator48440069\"><tt>allocator</tt></a>::<b>template</b> rebind&lt;\n-    <a href=\n-\"#value_type279018186\"><tt>value_type</tt></a>&gt;::other::pointer\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Value pointer type.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"const_pointer878814947\" id=\n-\"const_pointer878814947\">const_pointer</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <pre>\n-<b>typename</b> <a href=\n-\"#allocator48440069\"><tt>allocator</tt></a>::<b>template</b> rebind&lt;\n-    <a href=\n-\"#value_type279018186\"><tt>value_type</tt></a>&gt;::other::const_pointer\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Const Value <a href=\n-          \"#pointer2179769\"><tt>pointer</tt></a> type.</p>\n-        </td>\n-      </tr>\n-    </table>\n-\n-    <h3><a name=\"link7\" id=\"link7\">Iterator Definitions</a></h3>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Types\">\n-      <tr>\n-        <td width=\"30%\" align=\"left\"><b>Type</b></td>\n-\n-        <td width=\"55%\" align=\"left\"><b>Definition</b></td>\n-\n-        <td width=\"15%\" align=\"left\"><b>Description</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"const_point_iterator2364676009\" id=\n-\"const_point_iterator2364676009\">const_point_iterator</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <pre>\n-Const point-type iterator.\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Const point-type iterator.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"point_iterator2789896775\" id=\n-\"point_iterator2789896775\">point_iterator</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <pre>\n-Point-type iterator.\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Point-type iterator.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"const_iterator98626788\" id=\n-\"const_iterator98626788\">const_iterator</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <pre>\n-Const range-type iterator.\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Const range-type iterator.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a name=\"iterator10418194\" id=\"iterator10418194\">iterator</a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <pre>\n-Range-type iterator.\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Range-type iterator.</p>\n-        </td>\n-      </tr>\n-    </table>\n-\n-    <h2><a name=\"link8\" id=\"link8\">Public Methods</a></h2>\n-\n-    <h3><a name=\"link9\" id=\"link9\">Constructors, Destructor, and\n-    Related</a></h3>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Methods\">\n-      <tr>\n-        <td width=\"45%\" align=\"left\"><b>Method</b></td>\n-\n-        <td width=\"55%\" align=\"left\"><b>Description</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-  priority_queue\n-  ()\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Default constructor.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-  priority_queue\n-  (<b>const</b> <a href=\n-\"#cmp_fn394495\"><tt>cmp_fn</tt></a> &amp;r_cmp_fn)\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Constructor taking some policy objects. <span class=\n-          \"c1\"><tt>r_cmp_fn</tt></span> will be copied by the\n-          <a href=\"#Cmp_Fn294335\"><tt>Cmp_Fn</tt></a> object of the\n-          container object.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>template</b>&lt;\n-    <b>class</b> It&gt;\n-  priority_queue\n-  (It first_it, \n-    It last_it)\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Constructor taking iterators to a range of <a href=\n-          \"#value_type279018186\"><tt>value_type</tt></a>s. The\n-          <a href=\"#value_type279018186\"><tt>value_type</tt></a>s\n-          between <span class=\"c1\"><tt>first_it</tt></span> and\n-          <span class=\"c1\"><tt>last_it</tt></span> will be inserted\n-          into the container object.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>template</b>&lt;\n-    <b>class</b> It&gt;\n-  priority_queue\n-  (It first_it, \n-    It last_it,\n-    <b>const</b> <a href=\n-\"#cmp_fn394495\"><tt>cmp_fn</tt></a> &amp;r_cmp_fn)\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Constructor taking iterators to a range of <a href=\n-          \"#value_type279018186\"><tt>value_type</tt></a>s and some\n-          policy objects The <a href=\n-          \"#value_type279018186\"><tt>value_type</tt></a>s between\n-          <span class=\"c1\"><tt>first_it</tt></span> and\n-          <span class=\"c1\"><tt>last_it</tt></span> will be inserted\n-          into the container object. <span class=\n-          \"c1\"><tt>r_cmp_fn</tt></span> will be copied by the\n-          <a href=\"#cmp_fn394495\"><tt>cmp_fn</tt></a> object of the\n-          container object.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-  priority_queue\n-  (<b>const</b> <span class=\n-\"c2\"><tt>priority_queue</tt></span> &amp;other)\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Copy constructor.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>virtual</b> \n-  ~priority_queue\n-  ()\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Destructor.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<span class=\"c2\"><tt>priority_queue</tt></span> &amp;\n-  <b>operator</b>=\n-  (<b>const</b> <span class=\n-\"c2\"><tt>priority_queue</tt></span> &amp;other)\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Assignment operator.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>void</b>\n-  swap\n-  (<span class=\"c2\"><tt>priority_queue</tt></span> &amp;other)\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Swaps content.</p>\n-        </td>\n-      </tr>\n-    </table>\n-\n-    <h3><a name=\"link10\" id=\"link10\">Information Methods</a></h3>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Methods\">\n-      <tr>\n-        <td width=\"45%\" align=\"left\"><b>Method</b></td>\n-\n-        <td width=\"55%\" align=\"left\"><b>Description</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>inline</b> <a href=\"#size_type55424436\"><tt>size_type</tt></a>\n-  size\n-  () <b>const</b>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Returns the number of distinct <a href=\n-          \"#value_type279018186\"><tt>value_type</tt></a> objects\n-          the container object is storing.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>inline</b> <a href=\"#size_type55424436\"><tt>size_type</tt></a>\n-  max_size\n-  () <b>const</b>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Returns an upper bound on the number of distinct\n-          <a href=\"#value_type279018186\"><tt>value_type</tt></a>\n-          objects this container can store.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>inline</b> <b>bool</b>\n-  empty\n-  () <b>const</b>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Returns whether the container object is not storing\n-          any <a href=\n-          \"#value_type279018186\"><tt>value_type</tt></a>\n-          objects.</p>\n-        </td>\n-      </tr>\n-    </table>\n-\n-    <h3><a name=\"link11\" id=\"link11\">Insert Methods</a></h3>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Methods\">\n-      <tr>\n-        <td width=\"45%\" align=\"left\"><b>Method</b></td>\n-\n-        <td width=\"55%\" align=\"left\"><b>Description</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>inline</b> <a href=\n-\"#point_iterator2789896775\"><tt>point_iterator</tt></a>\n-  push\n-  (<a href=\n-\"#const_reference495461441\"><tt>const_reference</tt></a> r_val)\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Inserts a <a href=\n-          \"#value_type279018186\"><tt>value_type</tt></a> object.\n-          returns a <a href=\n-          \"#point_iterator2789896775\"><tt>point_iterator</tt></a>\n-          object associated with the new pushed <span class=\n-          \"c1\"><tt>r_val</tt></span>.</p>\n-        </td>\n-      </tr>\n-    </table>\n-\n-    <h3><a name=\"link12\" id=\"link12\">Find Methods</a></h3>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Methods\">\n-      <tr>\n-        <td width=\"45%\" align=\"left\"><b>Method</b></td>\n-\n-        <td width=\"55%\" align=\"left\"><b>Description</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>inline</b> <a href=\n-\"#const_reference495461441\"><tt>const_reference</tt></a> \n-  top\n-  () <b>const</b>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Returns the <a href=\n-          \"#const_reference495461441\"><tt>const_reference</tt></a>\n-          of the largest <a href=\n-          \"#value_type279018186\"><tt>value_type</tt></a> in the\n-          container object, i.e., a <a href=\n-          \"#value_type279018186\"><tt>value_type</tt></a> v_max for\n-          which any other <a href=\n-          \"#value_type279018186\"><tt>value_type</tt></a> v in the\n-          container object will satisfy !<a href=\n-          \"#cmp_fn394495\"><tt>cmp_fn</tt></a>()(v_max, v).</p>\n-        </td>\n-      </tr>\n-    </table>\n-\n-    <h3><a name=\"link13\" id=\"link13\">Modify Methods</a></h3>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Methods\">\n-      <tr>\n-        <td width=\"45%\" align=\"left\"><b>Method</b></td>\n-\n-        <td width=\"55%\" align=\"left\"><b>Description</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>inline</b> <b>void</b>\n-  modify\n-  (<a href=\n-\"#point_iterator2789896775\"><tt>point_iterator</tt></a> it,\n-    <a href=\n-\"#const_reference495461441\"><tt>const_reference</tt></a> r_new_val)\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Modifies the <a href=\n-          \"#value_type279018186\"><tt>value_type</tt></a> associated\n-          with the <a href=\n-          \"#point_iterator2789896775\"><tt>point_iterator</tt></a>\n-          <span class=\"c1\"><tt>it</tt></span> into <span class=\n-          \"c1\"><tt>r_new_val</tt></span>.</p>\n-\n-          <p>To use this method, <a href=\n-          \"#value_type279018186\"><tt>value_type</tt></a> must be\n-          assignable.</p>\n-        </td>\n-      </tr>\n-    </table>\n-\n-    <h3><a name=\"link14\" id=\"link14\">Erase Methods</a></h3>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Methods\">\n-      <tr>\n-        <td width=\"45%\" align=\"left\"><b>Method</b></td>\n-\n-        <td width=\"55%\" align=\"left\"><b>Description</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>inline</b> <b>void</b>\n-  pop\n-  ()\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Pops the largest <a href=\n-          \"#value_type279018186\"><tt>value_type</tt></a>.</p>\n-\n-          <p>If the container object is empty, results are\n-          undefined.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>inline</b> <b>void</b>\n-  erase\n-  (<a href=\n-\"#point_iterator2789896775\"><tt>point_iterator</tt></a> it)\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Erases the <a href=\n-          \"#value_type279018186\"><tt>value_type</tt></a> associated\n-          with the <a href=\n-          \"#point_iterator2789896775\"><tt>point_iterator</tt></a>\n-          <span class=\"c1\"><tt>it</tt></span>.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>template</b>&lt;\n-  <b>class</b> Pred&gt;\n-<b>inline</b> <a href=\"#size_type55424436\"><tt>size_type</tt></a> \n-  erase_if\n-  (Pred prd)\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Erases any <a href=\n-          \"#value_type279018186\"><tt>value_type</tt></a> satisfying\n-          the predicate <span class=\"c1\"><tt>prd</tt></span>;\n-          returns the number of <a href=\n-          \"#value_type279018186\"><tt>value_type</tt></a>s\n-          erased.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>void</b> \n-  clear\n-  ()\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Clears the container object.</p>\n-        </td>\n-      </tr>\n-    </table>\n-\n-    <h3><a name=\"link15\" id=\"link15\">Split and join\n-    Methods</a></h3>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Methods\">\n-      <tr>\n-        <td width=\"45%\" align=\"left\"><b>Method</b></td>\n-\n-        <td width=\"55%\" align=\"left\"><b>Description</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>void</b> \n-  join\n-  (<span class=\"c2\"><tt>priority_queue</tt></span> &amp;other)\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Joins two container objects. When this function\n-          returns, <span class=\"c1\"><tt>other</tt></span> will be\n-          empty.</p>\n-\n-          <p>When calling this method, <span class=\n-          \"c1\"><tt>other</tt></span>'s policies must be\n-          equivalent to this object's policies.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>template</b>&lt;\n-  <b>class</b> Pred&gt;\n-<b>inline</b> <b>void</b>\n-  split\n-  (Pred prd,\n-    <span class=\"c2\"><tt>priority_queue</tt></span> &amp;other)\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Splits into two container objects. When this function\n-          returns, <span class=\"c1\"><tt>other</tt></span> will be\n-          contain only values v for which <span class=\n-          \"c1\"><tt>prd</tt></span>(v) is <tt><b>true</b></tt>.</p>\n-\n-          <p>When calling this method, <span class=\n-          \"c1\"><tt>other</tt></span>'s policies must be\n-          equivalent to this object's policies.</p>\n-        </td>\n-      </tr>\n-    </table>\n-\n-    <h3><a name=\"link16\" id=\"link16\">Iteration Methods</a></h3>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Methods\">\n-      <tr>\n-        <td width=\"45%\" align=\"left\"><b>Method</b></td>\n-\n-        <td width=\"55%\" align=\"left\"><b>Description</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>inline</b> <a href=\"#iterator10418194\"><tt>iterator</tt></a>\n-  begin\n-  ()\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Returns an <a href=\n-          \"#iterator10418194\"><tt>iterator</tt></a> corresponding\n-          to the first <a href=\n-          \"#value_type279018186\"><tt>value_type</tt></a> in the\n-          container.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>inline</b> <a href=\n-\"#const_iterator98626788\"><tt>const_iterator</tt></a>\n-  begin\n-  () <b>const</b>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Returns a <a href=\n-          \"#const_iterator98626788\"><tt>const_iterator</tt></a>\n-          corresponding to the first <a href=\n-          \"#value_type279018186\"><tt>value_type</tt></a> in the\n-          container.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>inline</b> <a href=\"#iterator10418194\"><tt>iterator</tt></a>\n-  end\n-  ()\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Returns an <a href=\n-          \"#iterator10418194\"><tt>iterator</tt></a> corresponding\n-          to the just-after-last <a href=\n-          \"#value_type279018186\"><tt>value_type</tt></a> in the\n-          container.</p>\n-        </td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<b>inline</b> <a href=\n-\"#const_iterator98626788\"><tt>const_iterator</tt></a>\n-  end\n-  () <b>const</b>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>Returns a <a href=\n-          \"#const_iterator98626788\"><tt>const_iterator</tt></a>\n-          corresponding to the just-after-last <a href=\n-          \"#value_type279018186\"><tt>value_type</tt></a> in the\n-          container.</p>\n-        </td>\n-      </tr>\n-    </table>\n-  </div>\n-</body>\n-</html>"}, {"sha": "903331d9d7d04cd75fd4b10c3e269342bb8619d3", "filename": "libstdc++-v3/doc/html/ext/pb_ds/priority_queue_random_int_push_pop_timing_test.html", "status": "removed", "additions": 0, "deletions": 161, "changes": 161, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_random_int_push_pop_timing_test.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_random_int_push_pop_timing_test.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_random_int_push_pop_timing_test.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7", "patch": "@@ -1,161 +0,0 @@\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n-    \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n-<head>\n-<meta name=\"generator\" content=\"HTML Tidy for Linux/x86 (vers 12 April 2005), see www.w3.org\" />\n-<title>Priority Queue Random Int Push Pop Timing Test</title>\n-<meta http-equiv=\"Content-Type\" content=\"text/html; charset=us-ascii\" />\n-</head>\n-<body>\n-<div id=\"page\">\n-<h1>Priority Queue Random Integer <tt>push</tt> and\n-    <tt>pop</tt> Timing Test</h1>\n-<h2><a name=\"description\" id=\"description\">Description</a></h2>\n-<p>This test inserts a number of values with i.i.d. integer\n-    keys into a container using <tt>push</tt> , then removes them\n-    using <tt>pop</tt> . It measures the average time for\n-    <tt>push</tt> and <tt>pop</tt> as a function of the number of\n-    values.</p>\n-<p>(The test was executed with <a href=\"http://gcc.gnu.org/viewcvs/*checkout*/trunk/libstdc%2B%2B-v3/testsuite/performance/ext/pb_ds/priority_queue_random_int_push_pop_timing.cc\">\n-<tt>priority_queue_random_int_push_pop_timing_test</tt></a>\n-    thirty_years_among_the_dead_preproc.txt 200 200 2100)</p>\n-<h2><a name=\"purpose\" id=\"purpose\">Purpose</a></h2>\n-<p>The test checks the effect of different underlying\n-    data structures (see <a href=\"pq_design.html#pq_imp\">Design::Priority\n-    Queues::Implementations</a>).</p>\n-<h2><a name=\"results\" id=\"results\">Results</a></h2>\n-<p>Figures <a href=\"#NPG\">NPG</a>, <a href=\"#NPM\">NPM</a>, and\n-    <a href=\"#NPL\">NPL</a> shows the results for the native\n-    priority queues and <tt>pb_ds</tt> 's priority queues in\n-    <a href=\"pq_performance_tests.html#gcc\"><u>g++</u></a>,\n-    <a href=\"pq_performance_tests.html#msvc\"><u>msvc++</u></a>, and\n-    <a href=\"pq_performance_tests.html#local\"><u>local</u></a>,\n-    respectively.</p>\n-<div id=\"NPG_res_div\">\n-<div id=\"NPG_gcc\">\n-<div id=\"NPG_priority_queue_random_int_push_pop_timing_test\">\n-<div id=\"NPG_pq\">\n-<div id=\"NPG_Native_and__tt_pb_ds_455tt__priority_queue__tt_push_455tt___tt_pop_455tt__timing_test\"><div style=\"border-style: dotted; border-width: 1px; border-color: lightgray\"><h6 class=\"c1\"><a name=\"NPG\" id=\"NPG\"><img src=\"priority_queue_random_int_push_pop_timing_test_gcc.png\" alt=\"no image\" /></a></h6>NPG: Native and <tt>pb ds</tt> priority queue <tt>push</tt> <tt>pop</tt> timing test - <a href=\"pq_performance_tests.html#gcc\">g++</a><p>In the above figure, the names in the legends have the following meaning:</p>\n-<ol>\n-<li>\n-thin_heap-\n-<a href=\"priority_queue.html\"><tt>priority_queue</tt></a>\n- with <tt>Tag</tt> = <a href=\"thin_heap_tag.html\"><tt>thin_heap_tag</tt></a>\n-</li>\n-<li>\n-rc_binomial_heap-\n-<a href=\"priority_queue.html\"><tt>priority_queue</tt></a>\n- with <tt>Tag</tt> = <a href=\"rc_binomial_heap_tag.html\"><tt>rc_binomial_heap_tag</tt></a>\n-</li>\n-<li>\n-binomial_heap-\n-<a href=\"priority_queue.html\"><tt>priority_queue</tt></a>\n- with <tt>Tag</tt> = <a href=\"binomial_heap_tag.html\"><tt>binomial_heap_tag</tt></a>\n-</li>\n-<li>\n-pairing_heap-\n-<a href=\"priority_queue.html\"><tt>priority_queue</tt></a>\n- with <tt>Tag</tt> = <a href=\"pairing_heap_tag.html\"><tt>pairing_heap_tag</tt></a>\n-</li>\n-<li>\n-n_pq_deque-\n-<tt>std::priority_queue</tt> adapting <tt>std::deque</tt></li>\n-<li>\n-n_pq_vector-\n-<tt>std::priority_queue</tt> adapting <tt>std::vector</tt></li>\n-<li>\n-binary_heap-\n-<a href=\"priority_queue.html\"><tt>priority_queue</tt></a>\n- with <tt>Tag</tt> = <a href=\"binary_heap_tag.html\"><tt>binary_heap_tag</tt></a>\n-</li>\n-</ol>\n-</div><div style=\"width: 100%; height: 20px\"></div></div>\n-</div>\n-</div>\n-</div>\n-</div>\n-<div id=\"NPM_res_div\">\n-<div id=\"NPM_msvc\">\n-<div id=\"NPM_priority_queue_random_int_push_pop_timing_test\">\n-<div id=\"NPM_pq\">\n-<div id=\"NPM_Native_and__tt_pb_ds_455tt__priority_queue__tt_push_455tt___tt_pop_455tt__timing_test\"><div style=\"border-style: dotted; border-width: 1px; border-color: lightgray\"><h6 class=\"c1\"><a name=\"NPM\" id=\"NPM\"><img src=\"priority_queue_random_int_push_pop_timing_test_msvc.png\" alt=\"no image\" /></a></h6>NPM: Native and <tt>pb ds</tt> priority queue <tt>push</tt> <tt>pop</tt> timing test - <a href=\"pq_performance_tests.html#msvc\">msvc++</a><p>In the above figure, the names in the legends have the following meaning:</p>\n-<ol>\n-<li>\n-thin_heap-\n-<a href=\"priority_queue.html\"><tt>priority_queue</tt></a>\n- with <tt>Tag</tt> = <a href=\"thin_heap_tag.html\"><tt>thin_heap_tag</tt></a>\n-</li>\n-<li>\n-rc_binomial_heap-\n-<a href=\"priority_queue.html\"><tt>priority_queue</tt></a>\n- with <tt>Tag</tt> = <a href=\"rc_binomial_heap_tag.html\"><tt>rc_binomial_heap_tag</tt></a>\n-</li>\n-<li>\n-binomial_heap-\n-<a href=\"priority_queue.html\"><tt>priority_queue</tt></a>\n- with <tt>Tag</tt> = <a href=\"binomial_heap_tag.html\"><tt>binomial_heap_tag</tt></a>\n-</li>\n-<li>\n-pairing_heap-\n-<a href=\"priority_queue.html\"><tt>priority_queue</tt></a>\n- with <tt>Tag</tt> = <a href=\"pairing_heap_tag.html\"><tt>pairing_heap_tag</tt></a>\n-</li>\n-<li>\n-n_pq_deque-\n-<tt>std::priority_queue</tt> adapting <tt>std::deque</tt></li>\n-<li>\n-n_pq_vector-\n-<tt>std::priority_queue</tt> adapting <tt>std::vector</tt></li>\n-<li>\n-binary_heap-\n-<a href=\"priority_queue.html\"><tt>priority_queue</tt></a>\n- with <tt>Tag</tt> = <a href=\"binary_heap_tag.html\"><tt>binary_heap_tag</tt></a>\n-</li>\n-</ol>\n-</div><div style=\"width: 100%; height: 20px\"></div></div>\n-</div>\n-</div>\n-</div>\n-</div>\n-<div id=\"NPL_res_div\">\n-<div id=\"NPL_local\">\n-<div id=\"NPL_priority_queue_random_int_push_pop_timing_test\">\n-<div id=\"NPL_pq\">\n-<div id=\"NPL_Native_and__tt_pb_ds_455tt__priority_queue__tt_push_455tt___tt_pop_455tt__timing_test\"><div style = \"border-style: dotted; border-width: 1px; border-color: lightgray\"><h6 class=\"c1\"><a name=\"NPL\" id= \"NPL\"><img src=\"priority_queue_random_int_push_pop_timing_test_local.png\" alt=\"no image\" /></a></h6>NPL: Native and <tt>pb ds</tt> priority queue <tt>push</tt> <tt>pop</tt> timing test - <a href = \"pq_performance_tests.html#local\">local</a></div><div style = \"width: 100%; height: 20px\"></div></div>\n-</div>\n-</div>\n-</div>\n-</div>\n-<h2><a name=\"observations\" id=\"observations\">Observations</a></h2>\n-<p>Binary heaps are the most suited for sequences of\n-    <tt>push</tt> and <tt>pop</tt> operations of primitive types\n-    (<i>e.g.</i> <tt><b>int</b></tt>s). This is explained in\n-    <a href=\"priority_queue_random_int_push_timing_test.html\">Priority\n-    Queue Random Int <tt>push</tt> Timing Test</a> . (See <a href=\"priority_queue_text_push_pop_timing_test.html\">Priority Queue\n-    Text <tt>push</tt> Timing Test</a> for the case of primitive\n-    types.)</p>\n-<p>At first glance it seems that the STL's vector-based\n-    priority queue is approximately on par with <tt>pb_ds</tt>'s\n-    corresponding priority queue. There are two differences\n-    however:</p>\n-<ol>\n-<li>The STL's priority queue does not downsize the underlying\n-      vector (or deque) as the priority queue becomes smaller\n-      (see <a href=\"priority_queue_text_pop_mem_usage_test.html\">Priority Queue\n-      Text <tt>pop</tt> Memory Use Test</a>). It is therefore\n-      gaining some speed at the expense of space.</li>\n-<li>From <a href=\"priority_queue_random_int_push_pop_timing_test.html\">Priority\n-      Queue Random Integer <tt>push</tt> and <tt>pop</tt> Timing\n-      Test</a>, it seems that the STL's priority queue is slower in\n-      terms of <tt>pus</tt> operations. Since the number of\n-      <tt>pop</tt> operations is at most that of <tt>push</tt>\n-      operations, the test here is the \"best\" for the STL's\n-      priority queue.</li>\n-</ol>\n-<p><a href=\"pq_performance_tests.html#pq_observations\">Priority-Queue\n-    Performance Tests::Observations</a> discusses this further and\n-    summarizes.</p>\n-</div>\n-</body>\n-</html>"}, {"sha": "68f5e2b6bdb66339b14e93ee37f9e229bcf8325c", "filename": "libstdc++-v3/doc/html/ext/pb_ds/priority_queue_random_int_push_pop_timing_test_gcc.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_random_int_push_pop_timing_test_gcc.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_random_int_push_pop_timing_test_gcc.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_random_int_push_pop_timing_test_gcc.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "b8cc15330abeaabdad1f3a138bb0b3b7d72be962", "filename": "libstdc++-v3/doc/html/ext/pb_ds/priority_queue_random_int_push_pop_timing_test_local.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_random_int_push_pop_timing_test_local.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_random_int_push_pop_timing_test_local.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_random_int_push_pop_timing_test_local.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "4fc191c8b1c08681c4ab070058eab34ada853b29", "filename": "libstdc++-v3/doc/html/ext/pb_ds/priority_queue_random_int_push_pop_timing_test_msvc.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_random_int_push_pop_timing_test_msvc.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_random_int_push_pop_timing_test_msvc.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_random_int_push_pop_timing_test_msvc.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "ba91f601a294888494e3c2480dd4be84f00c4af6", "filename": "libstdc++-v3/doc/html/ext/pb_ds/priority_queue_random_int_push_timing_test.html", "status": "removed", "additions": 0, "deletions": 200, "changes": 200, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_random_int_push_timing_test.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_random_int_push_timing_test.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_random_int_push_timing_test.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7", "patch": "@@ -1,200 +0,0 @@\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n-    \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n-<head>\n-<meta name=\"generator\" content=\"HTML Tidy for Linux/x86 (vers 12 April 2005), see www.w3.org\" />\n-<title>Priority Queue Random Int Push Timing Test</title>\n-<meta http-equiv=\"Content-Type\" content=\"text/html; charset=us-ascii\" />\n-</head>\n-<body>\n-<div id=\"page\">\n-<h1>Priority Queue Random Integer <tt>push</tt> Timing\n-    Test</h1>\n-<h2><a name=\"description\" id=\"description\">Description</a></h2>\n-<p>This test inserts a number of values with i.i.d integer keys\n-    into a container using <tt>push</tt> . It measures the average\n-    time for <tt>push</tt> as a function of the number of\n-    values.</p>\n-<p>(The test was executed with <a href=\"http://gcc.gnu.org/viewcvs/*checkout*/trunk/libstdc%2B%2B-v3/testsuite/performance/ext/pb_ds/priority_queue_random_int_push_timing.cc\"><tt>\n-    priority_queue_random_intpush_timing_test</tt></a>\n-    thirty_years_among_the_dead_preproc.txt 200 200 2100)</p>\n-<h2><a name=\"purpose\" id=\"purpose\">Purpose</a></h2>\n-<p>The test checks the effect of different underlying\n-    data structures (see <a href=\"pq_design.html#pq_imp\">Design::Priority\n-    Queues::Implementations</a>).</p>\n-<h2><a name=\"results\" id=\"results\">Results</a></h2>\n-<p>Figures <a href=\"#NPG\">NPG</a>, <a href=\"#NPM\">NPM</a>, and\n-    <a href=\"#NPL\">NPL</a> show the results for the native priority\n-    queues and <tt>pb_ds</tt> 's priority queues in <a href=\"assoc_performance_tests.html#gcc\"><u>g++</u></a>, <a href=\"assoc_performance_tests.html#msvc\"><u>msvc++</u></a>, and\n-    <a href=\"assoc_performance_tests.html#local\"><u>local</u></a>,\n-    respectively; Figures <a href=\"#NBPG\">NBPG</a>, <a href=\"#NBPM\">NBPM</a>, and <a href=\"#NBPL\">NBPL</a> shows the\n-    results for the binary-heap based native priority queues and\n-    <tt>pb_ds</tt> 's priority queues in <a href=\"assoc_performance_tests.html#gcc\"><u>g++</u></a>, <a href=\"assoc_performance_tests.html#msvc\"><u>msvc++</u></a>, and\n-    <a href=\"assoc_performance_tests.html#local\"><u>local</u></a>,\n-    respectively</p>\n-<div id=\"NPG_res_div\">\n-<div id=\"NPG_gcc\">\n-<div id=\"NPG_priority_queue_random_int_push_timing_test\">\n-<div id=\"NPG_pq\">\n-<div id=\"NPG_Native_and__tt_pb_ds_455tt__priority_queue__tt_push_455tt__timing_test\"><div style=\"border-style: dotted; border-width: 1px; border-color: lightgray\"><h6 class=\"c1\"><a name=\"NPG\" id=\"NPG\"><img src=\"priority_queue_random_int_push_timing_test_gcc.png\" alt=\"no image\" /></a></h6>NPG: Native and <tt>pb ds</tt> priority queue <tt>push</tt> timing test - <a href=\"pq_performance_tests.html#gcc\">g++</a><p>In the above figure, the names in the legends have the following meaning:</p>\n-<ol>\n-<li>\n-rc_binomial_heap-\n-<a href=\"priority_queue.html\"><tt>priority_queue</tt></a>\n- with <tt>Tag</tt> = <a href=\"rc_binomial_heap_tag.html\"><tt>rc_binomial_heap_tag</tt></a>\n-</li>\n-<li>\n-binomial_heap-\n-<a href=\"priority_queue.html\"><tt>priority_queue</tt></a>\n- with <tt>Tag</tt> = <a href=\"binomial_heap_tag.html\"><tt>binomial_heap_tag</tt></a>\n-</li>\n-<li>\n-n_pq_deque-\n-<tt>std::priority_queue</tt> adapting <tt>std::deque</tt></li>\n-<li>\n-pairing_heap-\n-<a href=\"priority_queue.html\"><tt>priority_queue</tt></a>\n- with <tt>Tag</tt> = <a href=\"pairing_heap_tag.html\"><tt>pairing_heap_tag</tt></a>\n-</li>\n-<li>\n-thin_heap-\n-<a href=\"priority_queue.html\"><tt>priority_queue</tt></a>\n- with <tt>Tag</tt> = <a href=\"thin_heap_tag.html\"><tt>thin_heap_tag</tt></a>\n-</li>\n-<li>\n-n_pq_vector-\n-<tt>std::priority_queue</tt> adapting <tt>std::vector</tt></li>\n-<li>\n-binary_heap-\n-<a href=\"priority_queue.html\"><tt>priority_queue</tt></a>\n- with <tt>Tag</tt> = <a href=\"binary_heap_tag.html\"><tt>binary_heap_tag</tt></a>\n-</li>\n-</ol>\n-</div><div style=\"width: 100%; height: 20px\"></div></div>\n-</div>\n-</div>\n-</div>\n-</div>\n-<div id=\"NPM_res_div\">\n-<div id=\"NPM_msvc\">\n-<div id=\"NPM_priority_queue_random_int_push_timing_test\">\n-<div id=\"NPM_pq\">\n-<div id=\"NPM_Native_and__tt_pb_ds_455tt__priority_queue__tt_push_455tt__timing_test\"><div style=\"border-style: dotted; border-width: 1px; border-color: lightgray\"><h6 class=\"c1\"><a name=\"NPM\" id=\"NPM\"><img src=\"priority_queue_random_int_push_timing_test_msvc.png\" alt=\"no image\" /></a></h6>NPM: Native and <tt>pb ds</tt> priority queue <tt>push</tt> timing test - <a href=\"pq_performance_tests.html#msvc\">msvc++</a><p>In the above figure, the names in the legends have the following meaning:</p>\n-<ol>\n-<li>\n-rc_binomial_heap-\n-<a href=\"priority_queue.html\"><tt>priority_queue</tt></a>\n- with <tt>Tag</tt> = <a href=\"rc_binomial_heap_tag.html\"><tt>rc_binomial_heap_tag</tt></a>\n-</li>\n-<li>\n-binomial_heap-\n-<a href=\"priority_queue.html\"><tt>priority_queue</tt></a>\n- with <tt>Tag</tt> = <a href=\"binomial_heap_tag.html\"><tt>binomial_heap_tag</tt></a>\n-</li>\n-<li>\n-pairing_heap-\n-<a href=\"priority_queue.html\"><tt>priority_queue</tt></a>\n- with <tt>Tag</tt> = <a href=\"pairing_heap_tag.html\"><tt>pairing_heap_tag</tt></a>\n-</li>\n-<li>\n-thin_heap-\n-<a href=\"priority_queue.html\"><tt>priority_queue</tt></a>\n- with <tt>Tag</tt> = <a href=\"thin_heap_tag.html\"><tt>thin_heap_tag</tt></a>\n-</li>\n-<li>\n-n_pq_deque-\n-<tt>std::priority_queue</tt> adapting <tt>std::deque</tt></li>\n-<li>\n-n_pq_vector-\n-<tt>std::priority_queue</tt> adapting <tt>std::vector</tt></li>\n-<li>\n-binary_heap-\n-<a href=\"priority_queue.html\"><tt>priority_queue</tt></a>\n- with <tt>Tag</tt> = <a href=\"binary_heap_tag.html\"><tt>binary_heap_tag</tt></a>\n-</li>\n-</ol>\n-</div><div style=\"width: 100%; height: 20px\"></div></div>\n-</div>\n-</div>\n-</div>\n-</div>\n-<div id=\"NPL_res_div\">\n-<div id=\"NPL_local\">\n-<div id=\"NPL_priority_queue_random_int_push_timing_test\">\n-<div id=\"NPL_pq\">\n-<div id=\"NPL_Native_and__tt_pb_ds_455tt__priority_queue__tt_push_455tt__timing_test\"><div style = \"border-style: dotted; border-width: 1px; border-color: lightgray\"><h6 class=\"c1\"><a name=\"NPL\" id= \"NPL\"><img src=\"priority_queue_random_int_push_timing_test_local.png\" alt=\"no image\" /></a></h6>NPL: Native and <tt>pb ds</tt> priority queue <tt>push</tt> timing test - <a href = \"pq_performance_tests.html#local\">local</a></div><div style = \"width: 100%; height: 20px\"></div></div>\n-</div>\n-</div>\n-</div>\n-</div>\n-<div id=\"NBPG_res_div\">\n-<div id=\"NBPG_gcc\">\n-<div id=\"NBPG_binary_priority_queue_random_int_push_timing_test\">\n-<div id=\"NBPG_pq\">\n-<div id=\"NBPG_Native_and__tt_pb_ds_455tt__binary_priority_queue__tt_push_455tt__timing_test\"><div style=\"border-style: dotted; border-width: 1px; border-color: lightgray\"><h6 class=\"c1\"><a name=\"NBPG\" id=\"NBPG\"><img src=\"binary_priority_queue_random_int_push_timing_test_gcc.png\" alt=\"no image\" /></a></h6>NBPG: Native and <tt>pb ds</tt> binary priority queue <tt>push</tt> timing test - <a href=\"pq_performance_tests.html#gcc\">g++</a><p>In the above figure, the names in the legends have the following meaning:</p>\n-<ol>\n-<li>\n-n_pq_deque-\n-<tt>std::priority_queue</tt> adapting <tt>std::deque</tt></li>\n-<li>\n-n_pq_vector-\n-<tt>std::priority_queue</tt> adapting <tt>std::vector</tt></li>\n-<li>\n-binary_heap-\n-<a href=\"priority_queue.html\"><tt>priority_queue</tt></a>\n- with <tt>Tag</tt> = <a href=\"binary_heap_tag.html\"><tt>binary_heap_tag</tt></a>\n-</li>\n-</ol>\n-</div><div style=\"width: 100%; height: 20px\"></div></div>\n-</div>\n-</div>\n-</div>\n-</div>\n-<div id=\"NBPM_res_div\">\n-<div id=\"NBPM_msvc\">\n-<div id=\"NBPM_binary_priority_queue_random_int_push_timing_test\">\n-<div id=\"NBPM_pq\">\n-<div id=\"NBPM_Native_and__tt_pb_ds_455tt__binary_priority_queue__tt_push_455tt__timing_test\"><div style=\"border-style: dotted; border-width: 1px; border-color: lightgray\"><h6 class=\"c1\"><a name=\"NBPM\" id=\"NBPM\"><img src=\"binary_priority_queue_random_int_push_timing_test_msvc.png\" alt=\"no image\" /></a></h6>NBPM: Native and <tt>pb ds</tt> binary priority queue <tt>push</tt> timing test - <a href=\"pq_performance_tests.html#msvc\">msvc++</a><p>In the above figure, the names in the legends have the following meaning:</p>\n-<ol>\n-<li>\n-n_pq_deque-\n-<tt>std::priority_queue</tt> adapting <tt>std::deque</tt></li>\n-<li>\n-n_pq_vector-\n-<tt>std::priority_queue</tt> adapting <tt>std::vector</tt></li>\n-<li>\n-binary_heap-\n-<a href=\"priority_queue.html\"><tt>priority_queue</tt></a>\n- with <tt>Tag</tt> = <a href=\"binary_heap_tag.html\"><tt>binary_heap_tag</tt></a>\n-</li>\n-</ol>\n-</div><div style=\"width: 100%; height: 20px\"></div></div>\n-</div>\n-</div>\n-</div>\n-</div>\n-<div id=\"NBPL_res_div\">\n-<div id=\"NBPL_local\">\n-<div id=\"NBPL_binary_priority_queue_random_int_push_timing_test\">\n-<div id=\"NBPL_pq\">\n-<div id=\"NBPL_Native_and__tt_pb_ds_455tt__binary_priority_queue__tt_push_455tt__timing_test\"><div style = \"border-style: dotted; border-width: 1px; border-color: lightgray\"><h6 class=\"c1\"><a name=\"NBPL\" id= \"NBPL\"><img src=\"binary_priority_queue_random_int_push_timing_test_local.png\" alt=\"no image\" /></a></h6>NBPL: Native and <tt>pb ds</tt> binary priority queue <tt>push</tt> timing test - <a href = \"pq_performance_tests.html#local\">local</a></div><div style = \"width: 100%; height: 20px\"></div></div>\n-</div>\n-</div>\n-</div>\n-</div>\n-<h2><a name=\"observations\" id=\"observations\">Observations</a></h2>\n-<p>Binary heaps are the most suited for sequences of\n-    <tt>push</tt> and <tt>pop</tt> operations of primitive types\n-    (<i>e.g.</i> <tt><b>int</b></tt>s). They are less constrained\n-    than any other type, and since it is very efficient to store\n-    such types in arrays, they outperform even pairing heaps. (See\n-    <a href=\"priority_queue_text_push_timing_test.html\">Priority\n-    Queue Text <tt>push</tt> Timing Test</a> for the case of\n-    non-primitive types.)</p>\n-<p><a href=\"pq_performance_tests.html#pq_observations\">Priority-Queue\n-    Performance Tests::Observations</a> discusses this further and\n-    summarizes.</p>\n-</div>\n-</body>\n-</html>"}, {"sha": "ee8c9b7d9a98bcd94689ef585227f61fe635e2c1", "filename": "libstdc++-v3/doc/html/ext/pb_ds/priority_queue_random_int_push_timing_test_gcc.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_random_int_push_timing_test_gcc.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_random_int_push_timing_test_gcc.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_random_int_push_timing_test_gcc.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "51fa718d279e43fcae7f19c619ae2d7484a00471", "filename": "libstdc++-v3/doc/html/ext/pb_ds/priority_queue_random_int_push_timing_test_local.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_random_int_push_timing_test_local.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_random_int_push_timing_test_local.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_random_int_push_timing_test_local.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "0a1a8eaefbcc7c7340025c3e105e9921fbfcb0a0", "filename": "libstdc++-v3/doc/html/ext/pb_ds/priority_queue_random_int_push_timing_test_msvc.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_random_int_push_timing_test_msvc.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_random_int_push_timing_test_msvc.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_random_int_push_timing_test_msvc.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "8b6d81c37ecd21cbc20a72381f1cbfe543455851", "filename": "libstdc++-v3/doc/html/ext/pb_ds/priority_queue_tag.html", "status": "removed", "additions": 0, "deletions": 47, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_tag.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_tag.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_tag.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7", "patch": "@@ -1,47 +0,0 @@\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n-    \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n-\n-<html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\" lang=\"en\">\n-<head>\n-  <meta name=\"generator\" content=\n-  \"HTML Tidy for Linux/x86 (vers 12 April 2005), see www.w3.org\" />\n-\n-  <title>priority_queue_tag Interface</title>\n-  <meta http-equiv=\"Content-Type\" content=\n-  \"text/html; charset=us-ascii\" />\n-  </head>\n-\n-<body>\n-  <div id=\"page\">\n-    <h1><tt>priority_queue_tag</tt> Interface</h1>\n-\n-    <p>Basic priority-queue data structure tag.</p>\n-\n-    <p>Defined in: <a href=\n-    \"http://gcc.gnu.org/viewcvs/*checkout*/trunk/libstdc%2B%2B-v3/include/ext/pb_ds/tag_and_trait.hpp\"><tt>tag_and_trait.hpp</tt></a></p>\n-\n-    <h2><a name=\"link1\" id=\"link1\">Base Classes</a></h2>\n-\n-    <table class=\"c1\" width=\"100%\" border=\"1\" summary=\"Bases\">\n-      <tr>\n-        <td width=\"80%\" align=\"left\"><b>Class</b></td>\n-\n-        <td width=\"20%\" align=\"left\"><b>Derivation Type</b></td>\n-      </tr>\n-\n-      <tr>\n-        <td>\n-          <pre>\n-<a href=\"container_tag.html\"><span class=\n-\"c2\"><tt>container_tag</tt></span></a>\n-</pre>\n-        </td>\n-\n-        <td>\n-          <p>public</p>\n-        </td>\n-      </tr>\n-    </table>\n-  </div>\n-</body>\n-</html>"}, {"sha": "ed8d875f0f883c5fa096bcc8ca2e6ddf7ebc1627", "filename": "libstdc++-v3/doc/html/ext/pb_ds/priority_queue_tag_cd.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_tag_cd.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_tag_cd.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_tag_cd.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "be007aecb8d3e71f9c19b4ea6b88c148d99f7e2a", "filename": "libstdc++-v3/doc/html/ext/pb_ds/priority_queue_tag_cd.svg", "status": "removed", "additions": 0, "deletions": 368, "changes": 368, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_tag_cd.svg", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_tag_cd.svg", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_tag_cd.svg?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7", "patch": "@@ -1,368 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!-- Created with Inkscape (http://www.inkscape.org/) -->\n-<svg\n-   xmlns:dc=\"http://purl.org/dc/elements/1.1/\"\n-   xmlns:cc=\"http://web.resource.org/cc/\"\n-   xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n-   xmlns:svg=\"http://www.w3.org/2000/svg\"\n-   xmlns=\"http://www.w3.org/2000/svg\"\n-   xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n-   xmlns:sodipodi=\"http://inkscape.sourceforge.net/DTD/sodipodi-0.dtd\"\n-   xmlns:inkscape=\"http://www.inkscape.org/namespaces/inkscape\"\n-   width=\"11in\"\n-   height=\"8.5in\"\n-   id=\"svg2\"\n-   sodipodi:version=\"0.32\"\n-   inkscape:version=\"0.43\"\n-   version=\"1.0\"\n-   sodipodi:docbase=\"/mnt/share/src/policy_based_data_structures/pb_ds_images\"\n-   sodipodi:docname=\"pq_tag_diagram_2.svg\"\n-   inkscape:export-filename=\"/mnt/share/src/policy_based_data_structures/pb_ds_images/pq_tag_diagram_2.png\"\n-   inkscape:export-xdpi=\"90\"\n-   inkscape:export-ydpi=\"90\">\n-  <defs\n-     id=\"defs4\">\n-    <marker\n-       inkscape:stockid=\"Arrow1Mstart\"\n-       orient=\"auto\"\n-       refY=\"0.0\"\n-       refX=\"0.0\"\n-       id=\"Arrow1Mstart\"\n-       style=\"overflow:visible\">\n-      <path\n-         id=\"path3311\"\n-         d=\"M 0.0,0.0 L 5.0,-5.0 L -12.5,0.0 L 5.0,5.0 L 0.0,0.0 z \"\n-         style=\"fill-rule:evenodd;stroke:#000000;stroke-width:1.0pt;marker-start:none\"\n-         transform=\"scale(0.4)\" />\n-    </marker>\n-    <marker\n-       inkscape:stockid=\"Arrow2Sstart\"\n-       orient=\"auto\"\n-       refY=\"0\"\n-       refX=\"0\"\n-       id=\"Arrow2Sstart\"\n-       style=\"overflow:visible\">\n-      <path\n-         id=\"path3319\"\n-         style=\"font-size:12px;fill-rule:evenodd;stroke-width:0.625;stroke-linejoin:round\"\n-         d=\"M 8.7185878,4.0337352 L -2.2072895,0.016013256 L 8.7185884,-4.0017078 C 6.97309,-1.6296469 6.9831476,1.6157441 8.7185878,4.0337352 z \"\n-         transform=\"matrix(0.3,0,0,0.3,-1.5,0)\" />\n-    </marker>\n-    <marker\n-       inkscape:stockid=\"Arrow1Sstart\"\n-       orient=\"auto\"\n-       refY=\"0\"\n-       refX=\"0\"\n-       id=\"Arrow1Sstart\"\n-       style=\"overflow:visible\">\n-      <path\n-         id=\"path3337\"\n-         d=\"M 0,0 L 5,-5 L -12.5,0 L 5,5 L 0,0 z \"\n-         style=\"fill-rule:evenodd;stroke:#000000;stroke-width:1pt;marker-start:none\"\n-         transform=\"scale(0.2,0.2)\" />\n-    </marker>\n-    <marker\n-       inkscape:stockid=\"Arrow2Send\"\n-       orient=\"auto\"\n-       refY=\"0\"\n-       refX=\"0\"\n-       id=\"Arrow2Send\"\n-       style=\"overflow:visible\">\n-      <path\n-         id=\"path3316\"\n-         style=\"font-size:12px;fill-rule:evenodd;stroke-width:0.625;stroke-linejoin:round\"\n-         d=\"M 8.7185878,4.0337352 L -2.2072895,0.016013256 L 8.7185884,-4.0017078 C 6.97309,-1.6296469 6.9831476,1.6157441 8.7185878,4.0337352 z \"\n-         transform=\"matrix(-0.3,0,0,-0.3,1.5,0)\" />\n-    </marker>\n-    <marker\n-       inkscape:stockid=\"Arrow2Mend\"\n-       orient=\"auto\"\n-       refY=\"0\"\n-       refX=\"0\"\n-       id=\"Arrow2Mend\"\n-       style=\"overflow:visible\">\n-      <path\n-         id=\"path3322\"\n-         style=\"font-size:12px;fill-rule:evenodd;stroke-width:0.625;stroke-linejoin:round\"\n-         d=\"M 8.7185878,4.0337352 L -2.2072895,0.016013256 L 8.7185884,-4.0017078 C 6.97309,-1.6296469 6.9831476,1.6157441 8.7185878,4.0337352 z \"\n-         transform=\"matrix(-0.6,0,0,-0.6,3,0)\" />\n-    </marker>\n-    <marker\n-       inkscape:stockid=\"Arrow1Lend\"\n-       orient=\"auto\"\n-       refY=\"0\"\n-       refX=\"0\"\n-       id=\"Arrow1Lend\"\n-       style=\"overflow:visible\">\n-      <path\n-         id=\"path3346\"\n-         d=\"M 0,0 L 5,-5 L -12.5,0 L 5,5 L 0,0 z \"\n-         style=\"fill-rule:evenodd;stroke:#000000;stroke-width:1pt;marker-start:none\"\n-         transform=\"scale(-0.8,-0.8)\" />\n-    </marker>\n-    <marker\n-       inkscape:stockid=\"Arrow2Lstart\"\n-       orient=\"auto\"\n-       refY=\"0\"\n-       refX=\"0\"\n-       id=\"Arrow2Lstart\"\n-       style=\"overflow:visible\">\n-      <path\n-         id=\"path3331\"\n-         style=\"font-size:12px;fill-rule:evenodd;stroke-width:0.625;stroke-linejoin:round\"\n-         d=\"M 8.7185878,4.0337352 L -2.2072895,0.016013256 L 8.7185884,-4.0017078 C 6.97309,-1.6296469 6.9831476,1.6157441 8.7185878,4.0337352 z \"\n-         transform=\"matrix(1.1,0,0,1.1,-5.5,0)\" />\n-    </marker>\n-    <marker\n-       inkscape:stockid=\"Arrow2Lend\"\n-       orient=\"auto\"\n-       refY=\"0\"\n-       refX=\"0\"\n-       id=\"Arrow2Lend\"\n-       style=\"overflow:visible\">\n-      <path\n-         id=\"path3328\"\n-         style=\"font-size:12px;fill-rule:evenodd;stroke-width:0.625;stroke-linejoin:round\"\n-         d=\"M 8.7185878,4.0337352 L -2.2072895,0.016013256 L 8.7185884,-4.0017078 C 6.97309,-1.6296469 6.9831476,1.6157441 8.7185878,4.0337352 z \"\n-         transform=\"matrix(-1.1,0,0,-1.1,5.5,0)\" />\n-    </marker>\n-  </defs>\n-  <sodipodi:namedview\n-     id=\"base\"\n-     pagecolor=\"#ffffff\"\n-     bordercolor=\"#666666\"\n-     borderopacity=\"1.0\"\n-     inkscape:pageopacity=\"0.0\"\n-     inkscape:pageshadow=\"2\"\n-     inkscape:zoom=\"2\"\n-     inkscape:cx=\"608.69002\"\n-     inkscape:cy=\"490.05621\"\n-     inkscape:document-units=\"in\"\n-     inkscape:current-layer=\"layer1\"\n-     showguides=\"true\"\n-     inkscape:guide-bbox=\"true\"\n-     inkscape:window-width=\"1278\"\n-     inkscape:window-height=\"973\"\n-     inkscape:window-x=\"0\"\n-     inkscape:window-y=\"0\"\n-     gridtolerance=\"0.125in\"\n-     guidetolerance=\"0.125in\">\n-    <sodipodi:guide\n-       orientation=\"horizontal\"\n-       position=\"629\"\n-       id=\"guide1307\" />\n-    <sodipodi:guide\n-       orientation=\"horizontal\"\n-       position=\"449\"\n-       id=\"guide1309\" />\n-    <sodipodi:guide\n-       orientation=\"horizontal\"\n-       position=\"269\"\n-       id=\"guide1311\" />\n-    <sodipodi:guide\n-       orientation=\"vertical\"\n-       position=\"496\"\n-       id=\"guide1313\" />\n-    <sodipodi:guide\n-       orientation=\"vertical\"\n-       position=\"383\"\n-       id=\"guide1315\" />\n-    <sodipodi:guide\n-       orientation=\"vertical\"\n-       position=\"241\"\n-       id=\"guide1317\" />\n-    <sodipodi:guide\n-       orientation=\"vertical\"\n-       position=\"680\"\n-       id=\"guide1319\" />\n-    <sodipodi:guide\n-       orientation=\"vertical\"\n-       position=\"749\"\n-       id=\"guide1321\" />\n-    <sodipodi:guide\n-       orientation=\"vertical\"\n-       position=\"124\"\n-       id=\"guide1345\" />\n-    <sodipodi:guide\n-       orientation=\"vertical\"\n-       position=\"901\"\n-       id=\"guide1347\" />\n-    <sodipodi:guide\n-       orientation=\"horizontal\"\n-       position=\"539\"\n-       id=\"guide3390\" />\n-    <sodipodi:guide\n-       orientation=\"horizontal\"\n-       position=\"359\"\n-       id=\"guide3392\" />\n-    <sodipodi:guide\n-       orientation=\"vertical\"\n-       position=\"280.5\"\n-       id=\"guide3324\" />\n-    <sodipodi:guide\n-       orientation=\"vertical\"\n-       position=\"195\"\n-       id=\"guide3326\" />\n-    <sodipodi:guide\n-       orientation=\"vertical\"\n-       position=\"427\"\n-       id=\"guide3328\" />\n-    <sodipodi:guide\n-       orientation=\"vertical\"\n-       position=\"795\"\n-       id=\"guide3340\" />\n-    <sodipodi:guide\n-       orientation=\"horizontal\"\n-       position=\"179\"\n-       id=\"guide1395\" />\n-  </sodipodi:namedview>\n-  <metadata\n-     id=\"metadata7\">\n-    <rdf:RDF>\n-      <cc:Work\n-         rdf:about=\"\">\n-        <dc:format>image/svg+xml</dc:format>\n-        <dc:type\n-           rdf:resource=\"http://purl.org/dc/dcmitype/StillImage\" />\n-        <dc:creator>\n-          <cc:Agent>\n-            <dc:title>Benjamin Kosnik</dc:title>\n-          </cc:Agent>\n-        </dc:creator>\n-      </cc:Work>\n-    </rdf:RDF>\n-  </metadata>\n-  <g\n-     inkscape:label=\"Layer 1\"\n-     inkscape:groupmode=\"layer\"\n-     id=\"layer1\">\n-    <rect\n-       y=\"382.17499\"\n-       x=\"241.73018\"\n-       height=\"23.200001\"\n-       width=\"141.64481\"\n-       id=\"rect3420\"\n-       style=\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:1.25;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\" />\n-    <rect\n-       style=\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:1.25;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\"\n-       id=\"rect3418\"\n-       width=\"141.64481\"\n-       height=\"23.200001\"\n-       x=\"52.730194\"\n-       y=\"382.17499\" />\n-    <text\n-       xml:space=\"preserve\"\n-       style=\"font-size:9.60000038;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:center;line-height:100%;writing-mode:lr;text-anchor:middle;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;font-family:Bitstream Vera Sans\"\n-       x=\"122.35258\"\n-       y=\"395.91092\"\n-       id=\"text3394\"\n-       sodipodi:linespacing=\"100%\"><tspan\n-         sodipodi:role=\"line\"\n-         id=\"tspan1383\"\n-         x=\"122.35258\"\n-         y=\"395.91092\">pairing_heap_tag</tspan></text>\n-    <text\n-       sodipodi:linespacing=\"100%\"\n-       id=\"text3400\"\n-       y=\"395.91092\"\n-       x=\"310.55255\"\n-       style=\"font-size:9.60000038;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:center;line-height:100%;writing-mode:lr;text-anchor:middle;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1;font-family:Bitstream Vera Sans\"\n-       xml:space=\"preserve\"><tspan\n-         sodipodi:role=\"line\"\n-         id=\"tspan1381\"\n-         x=\"310.55255\"\n-         y=\"395.91092\">bionomial_heap_tag</tspan></text>\n-    <rect\n-       style=\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:1.25;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\"\n-       id=\"rect3380\"\n-       width=\"141.64481\"\n-       height=\"23.200001\"\n-       x=\"425.57764\"\n-       y=\"292.56177\" />\n-    <text\n-       xml:space=\"preserve\"\n-       style=\"font-size:9.60000038;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:center;line-height:100%;writing-mode:lr;text-anchor:middle;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1.5625;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;font-family:Bitstream Vera Sans\"\n-       x=\"495.20001\"\n-       y=\"307.09772\"\n-       id=\"text1323\"\n-       sodipodi:linespacing=\"100%\"><tspan\n-         sodipodi:role=\"line\"\n-         id=\"tspan1363\"\n-         x=\"495.20001\"\n-         y=\"307.09772\">priority_queue_tag</tspan></text>\n-    <path\n-       style=\"fill:none;fill-opacity:0.75;fill-rule:evenodd;stroke:#000000;stroke-width:1.16226137;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\"\n-       d=\"M 124.54034,382.1132 L 124.54034,360.6132 L 311.75594,359.6132 L 311.75594,382.1132\"\n-       id=\"path2244\" />\n-    <rect\n-       style=\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:1.25;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\"\n-       id=\"rect3422\"\n-       width=\"141.64481\"\n-       height=\"23.200001\"\n-       x=\"425.73022\"\n-       y=\"382.17499\" />\n-    <text\n-       sodipodi:linespacing=\"100%\"\n-       id=\"text3406\"\n-       y=\"395.91092\"\n-       x=\"495.3526\"\n-       style=\"font-size:9.60000038;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:center;line-height:100%;writing-mode:lr;text-anchor:middle;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1.25;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;font-family:Bitstream Vera Sans\"\n-       xml:space=\"preserve\"><tspan\n-         sodipodi:role=\"line\"\n-         id=\"tspan1377\"\n-         x=\"495.3526\"\n-         y=\"395.91092\">rc_binomial_heap_tag</tspan></text>\n-    <rect\n-       y=\"382.17499\"\n-       x=\"607.93024\"\n-       height=\"23.200001\"\n-       width=\"141.64481\"\n-       id=\"rect3424\"\n-       style=\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:1.25;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\" />\n-    <text\n-       xml:space=\"preserve\"\n-       style=\"font-size:9.60000038;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:center;line-height:100%;writing-mode:lr;text-anchor:middle;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1.25;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;font-family:Bitstream Vera Sans\"\n-       x=\"679.15259\"\n-       y=\"395.91092\"\n-       id=\"text3412\"\n-       sodipodi:linespacing=\"100%\"><tspan\n-         sodipodi:role=\"line\"\n-         id=\"tspan1379\"\n-         x=\"679.15259\"\n-         y=\"395.91092\">binary_heap_tag</tspan></text>\n-    <path\n-       id=\"path3347\"\n-       d=\"M 495.79886,382.13056 L 495.79886,321.40547\"\n-       style=\"fill:none;fill-opacity:0.75;fill-rule:evenodd;stroke:#000000;stroke-width:1.25;stroke-linecap:butt;stroke-linejoin:miter;marker-end:url(#Arrow2Mend);stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\" />\n-    <rect\n-       style=\"fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:1.25;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\"\n-       id=\"rect2281\"\n-       width=\"141.64481\"\n-       height=\"23.200001\"\n-       x=\"795.625\"\n-       y=\"382.17499\" />\n-    <text\n-       sodipodi:linespacing=\"100%\"\n-       id=\"text2283\"\n-       y=\"395.91092\"\n-       x=\"866.84735\"\n-       style=\"font-size:9.60000038;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;text-align:center;line-height:100%;writing-mode:lr;text-anchor:middle;fill:#000000;fill-opacity:1;stroke:none;stroke-width:1.25;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1;font-family:Bitstream Vera Sans\"\n-       xml:space=\"preserve\"><tspan\n-         sodipodi:role=\"line\"\n-         id=\"tspan1359\"\n-         x=\"866.84735\"\n-         y=\"395.91092\">thin_heap_tag</tspan></text>\n-    <path\n-       style=\"fill:none;fill-opacity:0.75;fill-rule:evenodd;stroke:#000000;stroke-width:1.25;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1\"\n-       d=\"M 311.5,360 L 680,360\"\n-       id=\"path2309\" />\n-    <use\n-       x=\"0\"\n-       y=\"0\"\n-       xlink:href=\"#path2244\"\n-       id=\"use2311\"\n-       transform=\"matrix(-1,0,0,1,992.3371,0)\"\n-       width=\"990\"\n-       height=\"765\" />\n-  </g>\n-</svg>"}, {"sha": "a4bf576ff52417baa872f0331573044996c3fb63", "filename": "libstdc++-v3/doc/html/ext/pb_ds/priority_queue_text_join_timing_test.html", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_text_join_timing_test.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_text_join_timing_test.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_text_join_timing_test.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "a48bb3586056fb395dc946be22a81bf2bc457650", "filename": "libstdc++-v3/doc/html/ext/pb_ds/priority_queue_text_join_timing_test_gcc.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_text_join_timing_test_gcc.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_text_join_timing_test_gcc.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_text_join_timing_test_gcc.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "67318f04896a176ea21675a4b08d6b8f0728209f", "filename": "libstdc++-v3/doc/html/ext/pb_ds/priority_queue_text_join_timing_test_local.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_text_join_timing_test_local.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_text_join_timing_test_local.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_text_join_timing_test_local.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "0575b99c0c3c5f98c1d740dc5ced91b16a3b4965", "filename": "libstdc++-v3/doc/html/ext/pb_ds/priority_queue_text_join_timing_test_msvc.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_text_join_timing_test_msvc.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_text_join_timing_test_msvc.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_text_join_timing_test_msvc.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "7ece80bcf126b50c2f6be0c295c23f94ac0913fc", "filename": "libstdc++-v3/doc/html/ext/pb_ds/priority_queue_text_modify_down_timing_test.html", "status": "removed", "additions": 0, "deletions": 204, "changes": 204, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_text_modify_down_timing_test.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_text_modify_down_timing_test.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_text_modify_down_timing_test.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "74cbc6523697954b171fb26fb1807cf4f324c599", "filename": "libstdc++-v3/doc/html/ext/pb_ds/priority_queue_text_modify_down_timing_test_gcc.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_text_modify_down_timing_test_gcc.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_text_modify_down_timing_test_gcc.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_text_modify_down_timing_test_gcc.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "d8d3b7a7ada1cbc73cfe83b4460d8a63d40e768b", "filename": "libstdc++-v3/doc/html/ext/pb_ds/priority_queue_text_modify_down_timing_test_local.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_text_modify_down_timing_test_local.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_text_modify_down_timing_test_local.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_text_modify_down_timing_test_local.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "20b663736673562dee4ec41814a98c6e788b11b6", "filename": "libstdc++-v3/doc/html/ext/pb_ds/priority_queue_text_modify_down_timing_test_msvc.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_text_modify_down_timing_test_msvc.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_text_modify_down_timing_test_msvc.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_text_modify_down_timing_test_msvc.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "ca901831eff8c8d26bc862d7ed50c70eb04d65e7", "filename": "libstdc++-v3/doc/html/ext/pb_ds/priority_queue_text_modify_down_timing_test_pairing_thin_gcc.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_text_modify_down_timing_test_pairing_thin_gcc.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_text_modify_down_timing_test_pairing_thin_gcc.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_text_modify_down_timing_test_pairing_thin_gcc.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "23ac5e73ec1c05753d5f6628efdaa8271f52f296", "filename": "libstdc++-v3/doc/html/ext/pb_ds/priority_queue_text_modify_down_timing_test_pairing_thin_local.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_text_modify_down_timing_test_pairing_thin_local.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_text_modify_down_timing_test_pairing_thin_local.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_text_modify_down_timing_test_pairing_thin_local.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "bf68bf9929200db774943cd1e41b6d3d27766258", "filename": "libstdc++-v3/doc/html/ext/pb_ds/priority_queue_text_modify_down_timing_test_pairing_thin_msvc.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_text_modify_down_timing_test_pairing_thin_msvc.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_text_modify_down_timing_test_pairing_thin_msvc.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_text_modify_down_timing_test_pairing_thin_msvc.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "72a1e0a757bcd19399fd26773ca5d3cce1ca3031", "filename": "libstdc++-v3/doc/html/ext/pb_ds/priority_queue_text_modify_up_timing_test.html", "status": "removed", "additions": 0, "deletions": 222, "changes": 222, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_text_modify_up_timing_test.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_text_modify_up_timing_test.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_text_modify_up_timing_test.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "d9dedc20cf402354fdee186a7025fb57d4f78094", "filename": "libstdc++-v3/doc/html/ext/pb_ds/priority_queue_text_modify_up_timing_test_gcc.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_text_modify_up_timing_test_gcc.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_text_modify_up_timing_test_gcc.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_text_modify_up_timing_test_gcc.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "dc48e39df5d8b7dfc778f965a0c1afd5a817a331", "filename": "libstdc++-v3/doc/html/ext/pb_ds/priority_queue_text_modify_up_timing_test_local.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_text_modify_up_timing_test_local.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_text_modify_up_timing_test_local.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_text_modify_up_timing_test_local.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "4005547c8122433230b1fdf562a8ec9f4c550e45", "filename": "libstdc++-v3/doc/html/ext/pb_ds/priority_queue_text_modify_up_timing_test_msvc.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_text_modify_up_timing_test_msvc.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_text_modify_up_timing_test_msvc.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_text_modify_up_timing_test_msvc.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "1aa5aba94bf44068a0686d14cc223aefe36d3054", "filename": "libstdc++-v3/doc/html/ext/pb_ds/priority_queue_text_modify_up_timing_test_pairing_thin_gcc.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_text_modify_up_timing_test_pairing_thin_gcc.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_text_modify_up_timing_test_pairing_thin_gcc.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_text_modify_up_timing_test_pairing_thin_gcc.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "9a73934c7731c4fecfd06601b4db1451f7f230ee", "filename": "libstdc++-v3/doc/html/ext/pb_ds/priority_queue_text_modify_up_timing_test_pairing_thin_local.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_text_modify_up_timing_test_pairing_thin_local.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_text_modify_up_timing_test_pairing_thin_local.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_text_modify_up_timing_test_pairing_thin_local.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "740594384cb9d17127372d7908f6731a088c41f9", "filename": "libstdc++-v3/doc/html/ext/pb_ds/priority_queue_text_modify_up_timing_test_pairing_thin_msvc.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_text_modify_up_timing_test_pairing_thin_msvc.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_text_modify_up_timing_test_pairing_thin_msvc.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_text_modify_up_timing_test_pairing_thin_msvc.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "2545fc07d1f3fd6abf07a217c4c4c5c6c12e437d", "filename": "libstdc++-v3/doc/html/ext/pb_ds/priority_queue_text_pop_mem_usage_test.html", "status": "removed", "additions": 0, "deletions": 143, "changes": 143, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_text_pop_mem_usage_test.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_text_pop_mem_usage_test.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_text_pop_mem_usage_test.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "2c1918d06236307a071b186d3cd35d6f2a7f80d7", "filename": "libstdc++-v3/doc/html/ext/pb_ds/priority_queue_text_pop_mem_usage_test_gcc.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_text_pop_mem_usage_test_gcc.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_text_pop_mem_usage_test_gcc.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_text_pop_mem_usage_test_gcc.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "d1966e33d98b017d60a9e69bf8d7111697046aae", "filename": "libstdc++-v3/doc/html/ext/pb_ds/priority_queue_text_pop_mem_usage_test_local.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_text_pop_mem_usage_test_local.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_text_pop_mem_usage_test_local.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_text_pop_mem_usage_test_local.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "9717f498b7a35d1835c88f700396356347cdfebb", "filename": "libstdc++-v3/doc/html/ext/pb_ds/priority_queue_text_pop_mem_usage_test_msvc.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_text_pop_mem_usage_test_msvc.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_text_pop_mem_usage_test_msvc.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_text_pop_mem_usage_test_msvc.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "3c143fe5a1b10dadc28739535dbc942efc8bba17", "filename": "libstdc++-v3/doc/html/ext/pb_ds/priority_queue_text_push_pop_timing_test.html", "status": "removed", "additions": 0, "deletions": 209, "changes": 209, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_text_push_pop_timing_test.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_text_push_pop_timing_test.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_text_push_pop_timing_test.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "d4886ae5967eb5625920ae3bf0dc3b4cb6466166", "filename": "libstdc++-v3/doc/html/ext/pb_ds/priority_queue_text_push_pop_timing_test_gcc.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_text_push_pop_timing_test_gcc.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_text_push_pop_timing_test_gcc.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_text_push_pop_timing_test_gcc.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "fd52d5a16c5f1a2ca83f4560ee7c8bfa7ad72f63", "filename": "libstdc++-v3/doc/html/ext/pb_ds/priority_queue_text_push_pop_timing_test_local.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_text_push_pop_timing_test_local.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_text_push_pop_timing_test_local.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_text_push_pop_timing_test_local.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "a5720402b3ba687c2760540d01468654d9929f09", "filename": "libstdc++-v3/doc/html/ext/pb_ds/priority_queue_text_push_pop_timing_test_msvc.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_text_push_pop_timing_test_msvc.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_text_push_pop_timing_test_msvc.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_text_push_pop_timing_test_msvc.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "542eb913c49b1675f4cceea58f07c6fc1259b641", "filename": "libstdc++-v3/doc/html/ext/pb_ds/priority_queue_text_push_timing_test.html", "status": "removed", "additions": 0, "deletions": 219, "changes": 219, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_text_push_timing_test.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_text_push_timing_test.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_text_push_timing_test.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "8895f507cfc62503c4e90562e1c58865fe776256", "filename": "libstdc++-v3/doc/html/ext/pb_ds/priority_queue_text_push_timing_test_gcc.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_text_push_timing_test_gcc.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_text_push_timing_test_gcc.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_text_push_timing_test_gcc.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "18cca76c2944f349116169318174bf14e71260a1", "filename": "libstdc++-v3/doc/html/ext/pb_ds/priority_queue_text_push_timing_test_local.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_text_push_timing_test_local.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_text_push_timing_test_local.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_text_push_timing_test_local.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "ff39ca37dd907e3aaf2b32d9e3ef25610dbc6c31", "filename": "libstdc++-v3/doc/html/ext/pb_ds/priority_queue_text_push_timing_test_msvc.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_text_push_timing_test_msvc.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_text_push_timing_test_msvc.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fpriority_queue_text_push_timing_test_msvc.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "00367dac891c04d5ce87a296bfeb98d146e01a13", "filename": "libstdc++-v3/doc/html/ext/pb_ds/quadratic_probe_fn.html", "status": "removed", "additions": 0, "deletions": 141, "changes": 141, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fquadratic_probe_fn.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fquadratic_probe_fn.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fquadratic_probe_fn.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "61962704f71655cfc6b428286e0271c1833530cb", "filename": "libstdc++-v3/doc/html/ext/pb_ds/random_int_find_find_timing_test_tree_gcc.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Frandom_int_find_find_timing_test_tree_gcc.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Frandom_int_find_find_timing_test_tree_gcc.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Frandom_int_find_find_timing_test_tree_gcc.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "dd7c184dd435a19272e88fad490ddb76c8999d57", "filename": "libstdc++-v3/doc/html/ext/pb_ds/random_int_find_find_timing_test_tree_local.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Frandom_int_find_find_timing_test_tree_local.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Frandom_int_find_find_timing_test_tree_local.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Frandom_int_find_find_timing_test_tree_local.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "2206cef5a9042023ee142ea2259ea96139f206a5", "filename": "libstdc++-v3/doc/html/ext/pb_ds/random_int_find_find_timing_test_tree_msvc.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Frandom_int_find_find_timing_test_tree_msvc.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Frandom_int_find_find_timing_test_tree_msvc.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Frandom_int_find_find_timing_test_tree_msvc.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "7bfba19e813939fd6acc90b8443af472b9d62b36", "filename": "libstdc++-v3/doc/html/ext/pb_ds/range_invalidation_guarantee.html", "status": "removed", "additions": 0, "deletions": 52, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Frange_invalidation_guarantee.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Frange_invalidation_guarantee.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Frange_invalidation_guarantee.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "2adbd09bfb34ac5b7c179b7be135a08cf8596ad5", "filename": "libstdc++-v3/doc/html/ext/pb_ds/rb_tree_tag.html", "status": "removed", "additions": 0, "deletions": 47, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Frb_tree_tag.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Frb_tree_tag.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Frb_tree_tag.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "1a4ba9f2e0e8496a15c2bdf3c7f08d1443df567b", "filename": "libstdc++-v3/doc/html/ext/pb_ds/rc_binomial_heap_tag.html", "status": "removed", "additions": 0, "deletions": 47, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Frc_binomial_heap_tag.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Frc_binomial_heap_tag.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Frc_binomial_heap_tag.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "064e924648e7f109bf9535a7dcea3b1282d3faf3", "filename": "libstdc++-v3/doc/html/ext/pb_ds/references.html", "status": "removed", "additions": 0, "deletions": 258, "changes": 258, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Freferences.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Freferences.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Freferences.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "6aab88c15a7be02a12bc0e4e9f519fd6d3e6f250", "filename": "libstdc++-v3/doc/html/ext/pb_ds/resize_error.html", "status": "removed", "additions": 0, "deletions": 50, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fresize_error.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fresize_error.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fresize_error.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "51dccce5ca975fc588f08bca9a82c879e24acddd", "filename": "libstdc++-v3/doc/html/ext/pb_ds/sample_probe_fn.html", "status": "removed", "additions": 0, "deletions": 152, "changes": 152, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fsample_probe_fn.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fsample_probe_fn.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fsample_probe_fn.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "85051873c6415e3b4823bf589278f0d3020188ca", "filename": "libstdc++-v3/doc/html/ext/pb_ds/sample_range_hashing.html", "status": "removed", "additions": 0, "deletions": 172, "changes": 172, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fsample_range_hashing.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fsample_range_hashing.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fsample_range_hashing.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "834f4965043657ed4376a1d18138afc8169a2228", "filename": "libstdc++-v3/doc/html/ext/pb_ds/sample_ranged_hash_fn.html", "status": "removed", "additions": 0, "deletions": 171, "changes": 171, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fsample_ranged_hash_fn.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fsample_ranged_hash_fn.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fsample_ranged_hash_fn.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "ee1bc066423e3b353fe1a9b19d4d359c005cb74d", "filename": "libstdc++-v3/doc/html/ext/pb_ds/sample_ranged_probe_fn.html", "status": "removed", "additions": 0, "deletions": 178, "changes": 178, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fsample_ranged_probe_fn.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fsample_ranged_probe_fn.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fsample_ranged_probe_fn.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "61ff09ba05e949aa1d654617e1e6bd0f25fcdb36", "filename": "libstdc++-v3/doc/html/ext/pb_ds/sample_resize_policy.html", "status": "removed", "additions": 0, "deletions": 413, "changes": 413, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fsample_resize_policy.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fsample_resize_policy.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fsample_resize_policy.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "5c8173c8ebe1d9634e973776862cd81d1d54115f", "filename": "libstdc++-v3/doc/html/ext/pb_ds/sample_resize_trigger.html", "status": "removed", "additions": 0, "deletions": 462, "changes": 462, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fsample_resize_trigger.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fsample_resize_trigger.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fsample_resize_trigger.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "ebb14d30b5df8950e618ecf3e2a49d4031a04339", "filename": "libstdc++-v3/doc/html/ext/pb_ds/sample_size_policy.html", "status": "removed", "additions": 0, "deletions": 163, "changes": 163, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fsample_size_policy.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fsample_size_policy.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fsample_size_policy.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "aefd67056740c647e52c852bcf1be583df115023", "filename": "libstdc++-v3/doc/html/ext/pb_ds/sample_tree_node_update.html", "status": "removed", "additions": 0, "deletions": 193, "changes": 193, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fsample_tree_node_update.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fsample_tree_node_update.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fsample_tree_node_update.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "a46c91b1d1580a93f0ffa8b8259183a5c57b6fd3", "filename": "libstdc++-v3/doc/html/ext/pb_ds/sample_trie_access_traits.html", "status": "removed", "additions": 0, "deletions": 231, "changes": 231, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fsample_trie_access_traits.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fsample_trie_access_traits.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fsample_trie_access_traits.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "61b6b407f61294f06e26979ff19625ffef0ec31f", "filename": "libstdc++-v3/doc/html/ext/pb_ds/sample_trie_node_update.html", "status": "removed", "additions": 0, "deletions": 194, "changes": 194, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fsample_trie_node_update.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fsample_trie_node_update.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fsample_trie_node_update.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "8a286c74c71cc17eb927539bc9c6e3bdc7d4c979", "filename": "libstdc++-v3/doc/html/ext/pb_ds/sample_update_policy.html", "status": "removed", "additions": 0, "deletions": 178, "changes": 178, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fsample_update_policy.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fsample_update_policy.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fsample_update_policy.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "3e6a64b1cae7d9fab0d15cc1c009bf6200e9b9e7", "filename": "libstdc++-v3/doc/html/ext/pb_ds/splay_tree_tag.html", "status": "removed", "additions": 0, "deletions": 47, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fsplay_tree_tag.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fsplay_tree_tag.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fsplay_tree_tag.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "ab5d54bb4ffb73fe2583482454d4f90f6c1764b8", "filename": "libstdc++-v3/doc/html/ext/pb_ds/tests.html", "status": "removed", "additions": 0, "deletions": 24, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftests.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftests.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftests.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "59247ec6ad9bdb3907fc7cd8e3404f3b902abd75", "filename": "libstdc++-v3/doc/html/ext/pb_ds/text_find_timing_test_hash_gcc.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftext_find_timing_test_hash_gcc.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftext_find_timing_test_hash_gcc.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftext_find_timing_test_hash_gcc.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "5364778241dff27501093cfa740c6dea79f2db92", "filename": "libstdc++-v3/doc/html/ext/pb_ds/text_find_timing_test_hash_local.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftext_find_timing_test_hash_local.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftext_find_timing_test_hash_local.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftext_find_timing_test_hash_local.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "227164568f585321cb75d18bdbade49e25b4ebab", "filename": "libstdc++-v3/doc/html/ext/pb_ds/text_find_timing_test_hash_msvc.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftext_find_timing_test_hash_msvc.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftext_find_timing_test_hash_msvc.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftext_find_timing_test_hash_msvc.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "8b6c4f0f058c4c4f0d3b7ec423b70ac0b54e0140", "filename": "libstdc++-v3/doc/html/ext/pb_ds/text_find_timing_test_tree_like_gcc.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftext_find_timing_test_tree_like_gcc.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftext_find_timing_test_tree_like_gcc.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftext_find_timing_test_tree_like_gcc.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "8ec5cfbce7a833e2d3ea738697636e084c2bb9d1", "filename": "libstdc++-v3/doc/html/ext/pb_ds/text_find_timing_test_tree_like_local.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftext_find_timing_test_tree_like_local.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftext_find_timing_test_tree_like_local.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftext_find_timing_test_tree_like_local.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "dc82a4e7e825f1b712af05c89fc988b69b39b13c", "filename": "libstdc++-v3/doc/html/ext/pb_ds/text_find_timing_test_tree_like_msvc.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftext_find_timing_test_tree_like_msvc.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftext_find_timing_test_tree_like_msvc.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftext_find_timing_test_tree_like_msvc.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "c44189664635a4d0dab19216f8cd6d8ae58753e7", "filename": "libstdc++-v3/doc/html/ext/pb_ds/thin_heap_tag.html", "status": "removed", "additions": 0, "deletions": 47, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fthin_heap_tag.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fthin_heap_tag.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fthin_heap_tag.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "3202a6e9f95e9e33ff4a6fa414a4dfab33819056", "filename": "libstdc++-v3/doc/html/ext/pb_ds/tree.html", "status": "removed", "additions": 0, "deletions": 516, "changes": 516, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftree.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftree.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftree.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "63c7c748232b157d8a43ab509ab387bd594c87f7", "filename": "libstdc++-v3/doc/html/ext/pb_ds/tree_based_containers.html", "status": "removed", "additions": 0, "deletions": 358, "changes": 358, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftree_based_containers.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftree_based_containers.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftree_based_containers.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "ba09b5b4db226f31cf01009c86b8d93bf4ac723c", "filename": "libstdc++-v3/doc/html/ext/pb_ds/tree_node_iterator.html", "status": "removed", "additions": 0, "deletions": 143, "changes": 143, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftree_node_iterator.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftree_node_iterator.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftree_node_iterator.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "f4345531f449415adc68acd92b336cebbbf87964", "filename": "libstdc++-v3/doc/html/ext/pb_ds/tree_order_statistics_node_update.html", "status": "removed", "additions": 0, "deletions": 678, "changes": 678, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftree_order_statistics_node_update.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftree_order_statistics_node_update.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftree_order_statistics_node_update.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "ef811613e9c208ba676ff7c89721295bd792ee4f", "filename": "libstdc++-v3/doc/html/ext/pb_ds/tree_order_statistics_timing_test.html", "status": "removed", "additions": 0, "deletions": 118, "changes": 118, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftree_order_statistics_timing_test.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftree_order_statistics_timing_test.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftree_order_statistics_timing_test.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "bdb00d07a7ff61aefa521f02bb4f6eb93fe26eee", "filename": "libstdc++-v3/doc/html/ext/pb_ds/tree_order_statistics_timing_test_gcc.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftree_order_statistics_timing_test_gcc.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftree_order_statistics_timing_test_gcc.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftree_order_statistics_timing_test_gcc.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "9f46319f8081010d6b1bc88819ed44ed937c956a", "filename": "libstdc++-v3/doc/html/ext/pb_ds/tree_order_statistics_timing_test_local.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftree_order_statistics_timing_test_local.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftree_order_statistics_timing_test_local.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftree_order_statistics_timing_test_local.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "76dcbee44fdbb6b9ed8d693ca94260cfca16ac13", "filename": "libstdc++-v3/doc/html/ext/pb_ds/tree_order_statistics_timing_test_msvc.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftree_order_statistics_timing_test_msvc.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftree_order_statistics_timing_test_msvc.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftree_order_statistics_timing_test_msvc.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "c34354f3ed453e6726186086959e6f6f7ca73d0b", "filename": "libstdc++-v3/doc/html/ext/pb_ds/tree_random_int_find_find_timing_test.html", "status": "removed", "additions": 0, "deletions": 160, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftree_random_int_find_find_timing_test.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftree_random_int_find_find_timing_test.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftree_random_int_find_find_timing_test.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "9164984d16d913dbdcf3632ae2ebd755887cc899", "filename": "libstdc++-v3/doc/html/ext/pb_ds/tree_split_join_timing_test.html", "status": "removed", "additions": 0, "deletions": 143, "changes": 143, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftree_split_join_timing_test.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftree_split_join_timing_test.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftree_split_join_timing_test.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "88867eca6bdb45c38e2ad7f751bdbd02f620e815", "filename": "libstdc++-v3/doc/html/ext/pb_ds/tree_split_join_timing_test_gcc.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftree_split_join_timing_test_gcc.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftree_split_join_timing_test_gcc.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftree_split_join_timing_test_gcc.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "fe5ba81c49e29aeffab63609d77ff33547e36dcd", "filename": "libstdc++-v3/doc/html/ext/pb_ds/tree_split_join_timing_test_local.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftree_split_join_timing_test_local.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftree_split_join_timing_test_local.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftree_split_join_timing_test_local.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "37ed1b2e7c0b36c53015290689ef7df0308dc1f0", "filename": "libstdc++-v3/doc/html/ext/pb_ds/tree_split_join_timing_test_msvc.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftree_split_join_timing_test_msvc.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftree_split_join_timing_test_msvc.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftree_split_join_timing_test_msvc.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "d7265ac183998774f6d239de4eb8a8b5c4870051", "filename": "libstdc++-v3/doc/html/ext/pb_ds/tree_tag.html", "status": "removed", "additions": 0, "deletions": 47, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftree_tag.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftree_tag.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftree_tag.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "fbfdfeffa56b2b6763d00729bd5f376f95ddfbf7", "filename": "libstdc++-v3/doc/html/ext/pb_ds/tree_text_find_find_timing_test.html", "status": "removed", "additions": 0, "deletions": 162, "changes": 162, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftree_text_find_find_timing_test.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftree_text_find_find_timing_test.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftree_text_find_find_timing_test.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "a5815fb2e25c7bffa632df79d718dd0267dfeb0a", "filename": "libstdc++-v3/doc/html/ext/pb_ds/tree_text_insert_timing_test.html", "status": "removed", "additions": 0, "deletions": 226, "changes": 226, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftree_text_insert_timing_test.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftree_text_insert_timing_test.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftree_text_insert_timing_test.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "22d8f6fc213009573702095565b856229e1bcd5f", "filename": "libstdc++-v3/doc/html/ext/pb_ds/tree_text_insert_timing_test_node_tree_gcc.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftree_text_insert_timing_test_node_tree_gcc.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftree_text_insert_timing_test_node_tree_gcc.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftree_text_insert_timing_test_node_tree_gcc.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "c98488c041a8fcb2c7a7f5d2adb37cd533a7e05f", "filename": "libstdc++-v3/doc/html/ext/pb_ds/tree_text_insert_timing_test_node_tree_local.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftree_text_insert_timing_test_node_tree_local.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftree_text_insert_timing_test_node_tree_local.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftree_text_insert_timing_test_node_tree_local.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "18b219851c25fbb48f9321b801d9bed115cbf4e4", "filename": "libstdc++-v3/doc/html/ext/pb_ds/tree_text_insert_timing_test_node_tree_msvc.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftree_text_insert_timing_test_node_tree_msvc.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftree_text_insert_timing_test_node_tree_msvc.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftree_text_insert_timing_test_node_tree_msvc.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "5fe063e63c2c5d2296d8e26219c4dcc685623657", "filename": "libstdc++-v3/doc/html/ext/pb_ds/tree_text_insert_timing_test_pat_trie_gcc.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftree_text_insert_timing_test_pat_trie_gcc.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftree_text_insert_timing_test_pat_trie_gcc.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftree_text_insert_timing_test_pat_trie_gcc.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "eff7eefb09d89c0099eabda19010d4832f37b291", "filename": "libstdc++-v3/doc/html/ext/pb_ds/tree_text_insert_timing_test_pat_trie_local.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftree_text_insert_timing_test_pat_trie_local.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftree_text_insert_timing_test_pat_trie_local.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftree_text_insert_timing_test_pat_trie_local.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "9f13db0c093cfac9e98cad9ae4c41799ecb3a0dc", "filename": "libstdc++-v3/doc/html/ext/pb_ds/tree_text_insert_timing_test_pat_trie_msvc.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftree_text_insert_timing_test_pat_trie_msvc.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftree_text_insert_timing_test_pat_trie_msvc.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftree_text_insert_timing_test_pat_trie_msvc.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "dd85dcd7ca2eaf0367a8742d6a8e8cc8054f0b7d", "filename": "libstdc++-v3/doc/html/ext/pb_ds/tree_text_insert_timing_test_vector_tree_gcc.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftree_text_insert_timing_test_vector_tree_gcc.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftree_text_insert_timing_test_vector_tree_gcc.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftree_text_insert_timing_test_vector_tree_gcc.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "f67156d452ee6e0f7cb39df697dcd288533ba525", "filename": "libstdc++-v3/doc/html/ext/pb_ds/tree_text_insert_timing_test_vector_tree_local.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftree_text_insert_timing_test_vector_tree_local.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftree_text_insert_timing_test_vector_tree_local.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftree_text_insert_timing_test_vector_tree_local.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "8c07313910fb7c89bb04a30c1a3bc4c86d183a92", "filename": "libstdc++-v3/doc/html/ext/pb_ds/tree_text_insert_timing_test_vector_tree_msvc.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftree_text_insert_timing_test_vector_tree_msvc.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftree_text_insert_timing_test_vector_tree_msvc.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftree_text_insert_timing_test_vector_tree_msvc.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "c577a56dbcbcce477f3245ef2b8a0ab37a632298", "filename": "libstdc++-v3/doc/html/ext/pb_ds/tree_text_lor_find_find_timing_test.html", "status": "removed", "additions": 0, "deletions": 126, "changes": 126, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftree_text_lor_find_find_timing_test.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftree_text_lor_find_find_timing_test.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftree_text_lor_find_find_timing_test.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "cf5174d99c1cca3d4731ce3f364628c2ce6cb767", "filename": "libstdc++-v3/doc/html/ext/pb_ds/tree_text_lor_find_timing_test_gcc.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftree_text_lor_find_timing_test_gcc.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftree_text_lor_find_timing_test_gcc.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftree_text_lor_find_timing_test_gcc.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "960803b05f5ae58fcc6f52291ae337558bc7f94a", "filename": "libstdc++-v3/doc/html/ext/pb_ds/tree_text_lor_find_timing_test_local.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftree_text_lor_find_timing_test_local.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftree_text_lor_find_timing_test_local.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftree_text_lor_find_timing_test_local.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "583a027f3dcfa6256272c29ebc240c934315ad4b", "filename": "libstdc++-v3/doc/html/ext/pb_ds/tree_text_lor_find_timing_test_msvc.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftree_text_lor_find_timing_test_msvc.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftree_text_lor_find_timing_test_msvc.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftree_text_lor_find_timing_test_msvc.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "32a2ab1b504ce912d6d54d665a7a6218fa4ca1a7", "filename": "libstdc++-v3/doc/html/ext/pb_ds/trie.html", "status": "removed", "additions": 0, "deletions": 489, "changes": 489, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftrie.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftrie.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftrie.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "72bdd069779bc020ccf859ce7602e6e5c24bb94b", "filename": "libstdc++-v3/doc/html/ext/pb_ds/trie_based_containers.html", "status": "removed", "additions": 0, "deletions": 241, "changes": 241, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftrie_based_containers.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftrie_based_containers.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftrie_based_containers.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "0869a7c2f5b92f7355c032f26b294fe7b91c2727", "filename": "libstdc++-v3/doc/html/ext/pb_ds/trie_const_node_iterator.html", "status": "removed", "additions": 0, "deletions": 478, "changes": 478, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftrie_const_node_iterator.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftrie_const_node_iterator.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftrie_const_node_iterator.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "55029c4cb917d809fa1d34c401170c0c5e9e17f2", "filename": "libstdc++-v3/doc/html/ext/pb_ds/trie_node_iterator.html", "status": "removed", "additions": 0, "deletions": 235, "changes": 235, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftrie_node_iterator.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftrie_node_iterator.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftrie_node_iterator.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "66aab26d799c0740e18de7942ecd3c25ee2ed2ef", "filename": "libstdc++-v3/doc/html/ext/pb_ds/trie_order_statistics_node_update.html", "status": "removed", "additions": 0, "deletions": 770, "changes": 770, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftrie_order_statistics_node_update.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftrie_order_statistics_node_update.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftrie_order_statistics_node_update.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "e136495c584119d5124e8ef16a63ea55151f65e8", "filename": "libstdc++-v3/doc/html/ext/pb_ds/trie_prefix_search_node_update.html", "status": "removed", "additions": 0, "deletions": 628, "changes": 628, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftrie_prefix_search_node_update.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftrie_prefix_search_node_update.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftrie_prefix_search_node_update.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "4ce9e864a95198b10d9a580ade7a83eb72b5fdd3", "filename": "libstdc++-v3/doc/html/ext/pb_ds/trie_string_access_traits.html", "status": "removed", "additions": 0, "deletions": 400, "changes": 400, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftrie_string_access_traits.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftrie_string_access_traits.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftrie_string_access_traits.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "62bf124544fd9d3420c32fc2ecbebd0aad435c15", "filename": "libstdc++-v3/doc/html/ext/pb_ds/trie_tag.html", "status": "removed", "additions": 0, "deletions": 47, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftrie_tag.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftrie_tag.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftrie_tag.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "1f59c5102de7abd6c3b37e1fd8340af2aa749b86", "filename": "libstdc++-v3/doc/html/ext/pb_ds/trivial_iterator_tag.html", "status": "removed", "additions": 0, "deletions": 25, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftrivial_iterator_tag.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftrivial_iterator_tag.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftrivial_iterator_tag.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "152cd57b1ab7b3042f79fc62446114fd30c1fb99", "filename": "libstdc++-v3/doc/html/ext/pb_ds/tutorial.html", "status": "removed", "additions": 0, "deletions": 670, "changes": 670, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftutorial.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftutorial.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Ftutorial.html?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "115a751c3503e9ecbafeeae4f11a3f94f3ebc4a5", "filename": "libstdc++-v3/doc/html/ext/pb_ds/update_policy_cd.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fupdate_policy_cd.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fupdate_policy_cd.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fext%2Fpb_ds%2Fupdate_policy_cd.png?ref=cc822cc1f3f06814ccfa21d9d3ebe5405a6975c7"}, {"sha": "529c3ae41bc45cabbeeecd17a3a88d6a82b59e5b", "filename": "libstdc++-v3/doc/xml/images/pbds_balls_and_bins.png", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce1140e3f2f7cd0a2533998369e60a085f703c3f/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fimages%2Fpbds_balls_and_bins.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce1140e3f2f7cd0a2533998369e60a085f703c3f/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fimages%2Fpbds_balls_and_bins.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fimages%2Fpbds_balls_and_bins.png?ref=ce1140e3f2f7cd0a2533998369e60a085f703c3f", "previous_filename": "libstdc++-v3/doc/html/ext/pb_ds/balls_and_bins.png"}, {"sha": "0349bc7d62d2c0017543d8a0055b22d6b06eebca", "filename": "libstdc++-v3/doc/xml/images/pbds_binary_priority_queue_random_int_push_timing_test_local.pdf", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce1140e3f2f7cd0a2533998369e60a085f703c3f/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fimages%2Fpbds_binary_priority_queue_random_int_push_timing_test_local.pdf", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce1140e3f2f7cd0a2533998369e60a085f703c3f/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fimages%2Fpbds_binary_priority_queue_random_int_push_timing_test_local.pdf", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fimages%2Fpbds_binary_priority_queue_random_int_push_timing_test_local.pdf?ref=ce1140e3f2f7cd0a2533998369e60a085f703c3f"}, {"sha": "41bf7476c00fed5811482a9bb6bf97efbf598891", "filename": "libstdc++-v3/doc/xml/images/pbds_binary_priority_queue_random_int_push_timing_test_local.png", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce1140e3f2f7cd0a2533998369e60a085f703c3f/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fimages%2Fpbds_binary_priority_queue_random_int_push_timing_test_local.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce1140e3f2f7cd0a2533998369e60a085f703c3f/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fimages%2Fpbds_binary_priority_queue_random_int_push_timing_test_local.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fimages%2Fpbds_binary_priority_queue_random_int_push_timing_test_local.png?ref=ce1140e3f2f7cd0a2533998369e60a085f703c3f"}, {"sha": "14a8c06bf8784bd16d546130720f723b924b4b01", "filename": "libstdc++-v3/doc/xml/images/pbds_binary_priority_queue_random_int_push_timing_test_local.svg", "status": "added", "additions": 446, "deletions": 0, "changes": 446, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce1140e3f2f7cd0a2533998369e60a085f703c3f/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fimages%2Fpbds_binary_priority_queue_random_int_push_timing_test_local.svg", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce1140e3f2f7cd0a2533998369e60a085f703c3f/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fimages%2Fpbds_binary_priority_queue_random_int_push_timing_test_local.svg", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fimages%2Fpbds_binary_priority_queue_random_int_push_timing_test_local.svg?ref=ce1140e3f2f7cd0a2533998369e60a085f703c3f"}, {"sha": "49f928156de259af0546405a1acb4de7a4f4c8e5", "filename": "libstdc++-v3/doc/xml/images/pbds_cc_hash_random_int_find_timing_test_local.pdf", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce1140e3f2f7cd0a2533998369e60a085f703c3f/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fimages%2Fpbds_cc_hash_random_int_find_timing_test_local.pdf", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce1140e3f2f7cd0a2533998369e60a085f703c3f/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fimages%2Fpbds_cc_hash_random_int_find_timing_test_local.pdf", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fimages%2Fpbds_cc_hash_random_int_find_timing_test_local.pdf?ref=ce1140e3f2f7cd0a2533998369e60a085f703c3f"}, {"sha": "6d1f5d2c80e520829d3c87e8f5deebcc410b3b1f", "filename": "libstdc++-v3/doc/xml/images/pbds_cc_hash_random_int_find_timing_test_local.png", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce1140e3f2f7cd0a2533998369e60a085f703c3f/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fimages%2Fpbds_cc_hash_random_int_find_timing_test_local.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce1140e3f2f7cd0a2533998369e60a085f703c3f/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fimages%2Fpbds_cc_hash_random_int_find_timing_test_local.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fimages%2Fpbds_cc_hash_random_int_find_timing_test_local.png?ref=ce1140e3f2f7cd0a2533998369e60a085f703c3f"}, {"sha": "949ed5f0a57201042d3435f974bfd40964db5e58", "filename": "libstdc++-v3/doc/xml/images/pbds_cc_hash_random_int_find_timing_test_local.svg", "status": "added", "additions": 597, "deletions": 0, "changes": 597, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce1140e3f2f7cd0a2533998369e60a085f703c3f/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fimages%2Fpbds_cc_hash_random_int_find_timing_test_local.svg", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce1140e3f2f7cd0a2533998369e60a085f703c3f/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fimages%2Fpbds_cc_hash_random_int_find_timing_test_local.svg", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fimages%2Fpbds_cc_hash_random_int_find_timing_test_local.svg?ref=ce1140e3f2f7cd0a2533998369e60a085f703c3f"}, {"sha": "a778ac263851bb10c49de54737abea27e4bc833f", "filename": "libstdc++-v3/doc/xml/images/pbds_cc_hash_random_int_subscript_timing_test_find_local.pdf", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce1140e3f2f7cd0a2533998369e60a085f703c3f/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fimages%2Fpbds_cc_hash_random_int_subscript_timing_test_find_local.pdf", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce1140e3f2f7cd0a2533998369e60a085f703c3f/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fimages%2Fpbds_cc_hash_random_int_subscript_timing_test_find_local.pdf", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fimages%2Fpbds_cc_hash_random_int_subscript_timing_test_find_local.pdf?ref=ce1140e3f2f7cd0a2533998369e60a085f703c3f"}, {"sha": "d2d60354edd98c6164f48fa87d89b04edcdabc26", "filename": "libstdc++-v3/doc/xml/images/pbds_cc_hash_random_int_subscript_timing_test_find_local.png", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce1140e3f2f7cd0a2533998369e60a085f703c3f/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fimages%2Fpbds_cc_hash_random_int_subscript_timing_test_find_local.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce1140e3f2f7cd0a2533998369e60a085f703c3f/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fimages%2Fpbds_cc_hash_random_int_subscript_timing_test_find_local.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fimages%2Fpbds_cc_hash_random_int_subscript_timing_test_find_local.png?ref=ce1140e3f2f7cd0a2533998369e60a085f703c3f"}, {"sha": "065aed6d4b2131eace0e25d5de4b7370a85a3380", "filename": "libstdc++-v3/doc/xml/images/pbds_cc_hash_random_int_subscript_timing_test_find_local.svg", "status": "added", "additions": 597, "deletions": 0, "changes": 597, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce1140e3f2f7cd0a2533998369e60a085f703c3f/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fimages%2Fpbds_cc_hash_random_int_subscript_timing_test_find_local.svg", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce1140e3f2f7cd0a2533998369e60a085f703c3f/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fimages%2Fpbds_cc_hash_random_int_subscript_timing_test_find_local.svg", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fimages%2Fpbds_cc_hash_random_int_subscript_timing_test_find_local.svg?ref=ce1140e3f2f7cd0a2533998369e60a085f703c3f"}, {"sha": "6a62da8ae30a65f1d3bf352cb9488b3be2654134", "filename": "libstdc++-v3/doc/xml/images/pbds_cc_hash_random_int_subscript_timing_test_insert_local.pdf", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce1140e3f2f7cd0a2533998369e60a085f703c3f/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fimages%2Fpbds_cc_hash_random_int_subscript_timing_test_insert_local.pdf", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce1140e3f2f7cd0a2533998369e60a085f703c3f/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fimages%2Fpbds_cc_hash_random_int_subscript_timing_test_insert_local.pdf", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fimages%2Fpbds_cc_hash_random_int_subscript_timing_test_insert_local.pdf?ref=ce1140e3f2f7cd0a2533998369e60a085f703c3f"}, {"sha": "71b62064e7473d3ee73c2c7fae4df46951916b02", "filename": "libstdc++-v3/doc/xml/images/pbds_cc_hash_random_int_subscript_timing_test_insert_local.png", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce1140e3f2f7cd0a2533998369e60a085f703c3f/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fimages%2Fpbds_cc_hash_random_int_subscript_timing_test_insert_local.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce1140e3f2f7cd0a2533998369e60a085f703c3f/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fimages%2Fpbds_cc_hash_random_int_subscript_timing_test_insert_local.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fimages%2Fpbds_cc_hash_random_int_subscript_timing_test_insert_local.png?ref=ce1140e3f2f7cd0a2533998369e60a085f703c3f"}, {"sha": "9cb1af8a92cf8d28dd1f7f945f97292f5b3b679d", "filename": "libstdc++-v3/doc/xml/images/pbds_cc_hash_random_int_subscript_timing_test_insert_local.svg", "status": "added", "additions": 598, "deletions": 0, "changes": 598, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce1140e3f2f7cd0a2533998369e60a085f703c3f/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fimages%2Fpbds_cc_hash_random_int_subscript_timing_test_insert_local.svg", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce1140e3f2f7cd0a2533998369e60a085f703c3f/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fimages%2Fpbds_cc_hash_random_int_subscript_timing_test_insert_local.svg", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fimages%2Fpbds_cc_hash_random_int_subscript_timing_test_insert_local.svg?ref=ce1140e3f2f7cd0a2533998369e60a085f703c3f"}, {"sha": "b9581c2ab63f0621b1d1533afc0d41bd53ffc84b", "filename": "libstdc++-v3/doc/xml/images/pbds_container_tag_hierarchy.pdf", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce1140e3f2f7cd0a2533998369e60a085f703c3f/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fimages%2Fpbds_container_tag_hierarchy.pdf", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce1140e3f2f7cd0a2533998369e60a085f703c3f/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fimages%2Fpbds_container_tag_hierarchy.pdf", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fimages%2Fpbds_container_tag_hierarchy.pdf?ref=ce1140e3f2f7cd0a2533998369e60a085f703c3f"}, {"sha": "f827f6e0b03c55b354a273f279e59564d15061bf", "filename": "libstdc++-v3/doc/xml/images/pbds_container_tag_hierarchy.png", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce1140e3f2f7cd0a2533998369e60a085f703c3f/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fimages%2Fpbds_container_tag_hierarchy.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce1140e3f2f7cd0a2533998369e60a085f703c3f/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fimages%2Fpbds_container_tag_hierarchy.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fimages%2Fpbds_container_tag_hierarchy.png?ref=ce1140e3f2f7cd0a2533998369e60a085f703c3f"}, {"sha": "cedb9551111a718940fcd7c84628d269d6ec7bec", "filename": "libstdc++-v3/doc/xml/images/pbds_container_tag_hierarchy.svg", "status": "added", "additions": 256, "deletions": 0, "changes": 256, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce1140e3f2f7cd0a2533998369e60a085f703c3f/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fimages%2Fpbds_container_tag_hierarchy.svg", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce1140e3f2f7cd0a2533998369e60a085f703c3f/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fimages%2Fpbds_container_tag_hierarchy.svg", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fimages%2Fpbds_container_tag_hierarchy.svg?ref=ce1140e3f2f7cd0a2533998369e60a085f703c3f"}, {"sha": "adee1263600f811c4fa883a6ce11e6e840ea0eba", "filename": "libstdc++-v3/doc/xml/images/pbds_different_underlying_dss_1.png", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce1140e3f2f7cd0a2533998369e60a085f703c3f/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fimages%2Fpbds_different_underlying_dss_1.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce1140e3f2f7cd0a2533998369e60a085f703c3f/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fimages%2Fpbds_different_underlying_dss_1.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fimages%2Fpbds_different_underlying_dss_1.png?ref=ce1140e3f2f7cd0a2533998369e60a085f703c3f", "previous_filename": "libstdc++-v3/doc/html/ext/pb_ds/different_underlying_dss.png"}, {"sha": "9d84791fc0d587a98663f0878309c2bb4926bebf", "filename": "libstdc++-v3/doc/xml/images/pbds_different_underlying_dss_2.png", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce1140e3f2f7cd0a2533998369e60a085f703c3f/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fimages%2Fpbds_different_underlying_dss_2.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce1140e3f2f7cd0a2533998369e60a085f703c3f/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fimages%2Fpbds_different_underlying_dss_2.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fimages%2Fpbds_different_underlying_dss_2.png?ref=ce1140e3f2f7cd0a2533998369e60a085f703c3f", "previous_filename": "libstdc++-v3/doc/html/ext/pb_ds/pq_different_underlying_dss.png"}, {"sha": "9470a65b56852600adf6f89b495c50ae45e50d75", "filename": "libstdc++-v3/doc/xml/images/pbds_embedded_lists_1.png", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce1140e3f2f7cd0a2533998369e60a085f703c3f/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fimages%2Fpbds_embedded_lists_1.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce1140e3f2f7cd0a2533998369e60a085f703c3f/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fimages%2Fpbds_embedded_lists_1.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fimages%2Fpbds_embedded_lists_1.png?ref=ce1140e3f2f7cd0a2533998369e60a085f703c3f", "previous_filename": "libstdc++-v3/doc/html/ext/pb_ds/embedded_lists_1.png"}, {"sha": "d2ac91c1ab0200bb03a3d58239aa6b03f72f6d2a", "filename": "libstdc++-v3/doc/xml/images/pbds_embedded_lists_2.png", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce1140e3f2f7cd0a2533998369e60a085f703c3f/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fimages%2Fpbds_embedded_lists_2.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce1140e3f2f7cd0a2533998369e60a085f703c3f/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fimages%2Fpbds_embedded_lists_2.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fimages%2Fpbds_embedded_lists_2.png?ref=ce1140e3f2f7cd0a2533998369e60a085f703c3f", "previous_filename": "libstdc++-v3/doc/html/ext/pb_ds/embedded_lists_2.png"}, {"sha": "08ecb0ffe161627c846b6cc048986bb6fd8e7bab", "filename": "libstdc++-v3/doc/xml/images/pbds_embedded_lists_3.png", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce1140e3f2f7cd0a2533998369e60a085f703c3f/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fimages%2Fpbds_embedded_lists_3.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce1140e3f2f7cd0a2533998369e60a085f703c3f/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fimages%2Fpbds_embedded_lists_3.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fimages%2Fpbds_embedded_lists_3.png?ref=ce1140e3f2f7cd0a2533998369e60a085f703c3f", "previous_filename": "libstdc++-v3/doc/html/ext/pb_ds/embedded_lists_3.png"}, {"sha": "ccc3001173c3b073e0fba948a369c85e4208c23d", "filename": "libstdc++-v3/doc/xml/images/pbds_exception_hierarchy.pdf", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce1140e3f2f7cd0a2533998369e60a085f703c3f/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fimages%2Fpbds_exception_hierarchy.pdf", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce1140e3f2f7cd0a2533998369e60a085f703c3f/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fimages%2Fpbds_exception_hierarchy.pdf", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fimages%2Fpbds_exception_hierarchy.pdf?ref=ce1140e3f2f7cd0a2533998369e60a085f703c3f"}, {"sha": "a7c33838253147efd81f5fe236183e5b2ee06f83", "filename": "libstdc++-v3/doc/xml/images/pbds_exception_hierarchy.png", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce1140e3f2f7cd0a2533998369e60a085f703c3f/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fimages%2Fpbds_exception_hierarchy.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce1140e3f2f7cd0a2533998369e60a085f703c3f/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fimages%2Fpbds_exception_hierarchy.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fimages%2Fpbds_exception_hierarchy.png?ref=ce1140e3f2f7cd0a2533998369e60a085f703c3f"}, {"sha": "ac6067ad803f54037b7b8ee690d37b8e5c121200", "filename": "libstdc++-v3/doc/xml/images/pbds_exception_hierarchy.svg", "status": "added", "additions": 76, "deletions": 0, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce1140e3f2f7cd0a2533998369e60a085f703c3f/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fimages%2Fpbds_exception_hierarchy.svg", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce1140e3f2f7cd0a2533998369e60a085f703c3f/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fimages%2Fpbds_exception_hierarchy.svg", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fimages%2Fpbds_exception_hierarchy.svg?ref=ce1140e3f2f7cd0a2533998369e60a085f703c3f"}, {"sha": "7b570b0695de40d0798c44ab700476aa56a3f030", "filename": "libstdc++-v3/doc/xml/images/pbds_gp_hash_random_int_find_timing_test_local.pdf", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce1140e3f2f7cd0a2533998369e60a085f703c3f/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fimages%2Fpbds_gp_hash_random_int_find_timing_test_local.pdf", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce1140e3f2f7cd0a2533998369e60a085f703c3f/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fimages%2Fpbds_gp_hash_random_int_find_timing_test_local.pdf", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fimages%2Fpbds_gp_hash_random_int_find_timing_test_local.pdf?ref=ce1140e3f2f7cd0a2533998369e60a085f703c3f"}, {"sha": "1e8fdf1ede7fb9f74e840a7f2713ea7a97f89e35", "filename": "libstdc++-v3/doc/xml/images/pbds_gp_hash_random_int_find_timing_test_local.png", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce1140e3f2f7cd0a2533998369e60a085f703c3f/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fimages%2Fpbds_gp_hash_random_int_find_timing_test_local.png", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce1140e3f2f7cd0a2533998369e60a085f703c3f/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fimages%2Fpbds_gp_hash_random_int_find_timing_test_local.png", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fimages%2Fpbds_gp_hash_random_int_find_timing_test_local.png?ref=ce1140e3f2f7cd0a2533998369e60a085f703c3f"}, {"sha": "92a2914bff8bfbdf8cc0ff94a1d827caa8d7192e", "filename": "libstdc++-v3/doc/xml/images/pbds_gp_hash_random_int_find_timing_test_local.svg", "status": "added", "additions": 369, "deletions": 0, "changes": 369, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce1140e3f2f7cd0a2533998369e60a085f703c3f/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fimages%2Fpbds_gp_hash_random_int_find_timing_test_local.svg", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce1140e3f2f7cd0a2533998369e60a085f703c3f/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fimages%2Fpbds_gp_hash_random_int_find_timing_test_local.svg", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fimages%2Fpbds_gp_hash_random_int_find_timing_test_local.svg?ref=ce1140e3f2f7cd0a2533998369e60a085f703c3f"}, {"sha": "1e7f06c9ed2de18fd50e053174a9d495a0948bd3", "filename": "libstdc++-v3/doc/xml/images/pbds_gp_hash_random_int_subscript_timing_test_find_local.pdf", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce1140e3f2f7cd0a2533998369e60a085f703c3f/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fimages%2Fpbds_gp_hash_random_int_subscript_timing_test_find_local.pdf", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce1140e3f2f7cd0a2533998369e60a085f703c3f/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fimages%2Fpbds_gp_hash_random_int_subscript_timing_test_find_local.pdf", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fimages%2Fpbds_gp_hash_random_int_subscript_timing_test_find_local.pdf?ref=ce1140e3f2f7cd0a2533998369e60a085f703c3f"}]}