{"sha": "694e5e4baebff76320ecbb0c119bc086126c4095", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Njk0ZTVlNGJhZWJmZjc2MzIwZWNiYjBjMTE5YmMwODYxMjZjNDA5NQ==", "commit": {"author": {"name": "Tom de Vries", "email": "tom@codesourcery.com", "date": "2015-12-02T13:32:51Z"}, "committer": {"name": "Tom de Vries", "email": "vries@gcc.gnu.org", "date": "2015-12-02T13:32:51Z"}, "message": "Handle BUILT_IN_GOACC_PARALLEL in ipa-pta\n\n2015-12-02  Tom de Vries  <tom@codesourcery.com>\n\n\t* tree-ssa-structalias.c (find_func_aliases_for_builtin_call)\n\t(find_func_clobbers, ipa_pta_execute): Handle BUILT_IN_GOACC_PARALLEL.\n\n\t* c-c++-common/goacc/kernels-alias-ipa-pta-2.c: New test.\n\t* c-c++-common/goacc/kernels-alias-ipa-pta-3.c: New test.\n\t* c-c++-common/goacc/kernels-alias-ipa-pta.c: New test.\n\nFrom-SVN: r231169", "tree": {"sha": "6b472c95b371572ac65f8248f47d8aac5477666b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6b472c95b371572ac65f8248f47d8aac5477666b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/694e5e4baebff76320ecbb0c119bc086126c4095", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/694e5e4baebff76320ecbb0c119bc086126c4095", "html_url": "https://github.com/Rust-GCC/gccrs/commit/694e5e4baebff76320ecbb0c119bc086126c4095", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/694e5e4baebff76320ecbb0c119bc086126c4095/comments", "author": null, "committer": null, "parents": [{"sha": "7dbf36f7cb76a7e2bb8a8658f608ee659fe07cb9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7dbf36f7cb76a7e2bb8a8658f608ee659fe07cb9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7dbf36f7cb76a7e2bb8a8658f608ee659fe07cb9"}], "stats": {"total": 214, "additions": 210, "deletions": 4}, "files": [{"sha": "2c30b300006a52b6131482e50148c7e46f8fdaa5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/694e5e4baebff76320ecbb0c119bc086126c4095/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/694e5e4baebff76320ecbb0c119bc086126c4095/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=694e5e4baebff76320ecbb0c119bc086126c4095", "patch": "@@ -1,3 +1,8 @@\n+2015-12-02  Tom de Vries  <tom@codesourcery.com>\n+\n+\t* tree-ssa-structalias.c (find_func_aliases_for_builtin_call)\n+\t(find_func_clobbers, ipa_pta_execute): Handle BUILT_IN_GOACC_PARALLEL.\n+\n 2015-12-02  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \t* config/rs6000/rs6000.md (cstore_si_as_di): New expander."}, {"sha": "05022b3b470c8e4df0ecee5b5059dab392eb7fc6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/694e5e4baebff76320ecbb0c119bc086126c4095/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/694e5e4baebff76320ecbb0c119bc086126c4095/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=694e5e4baebff76320ecbb0c119bc086126c4095", "patch": "@@ -1,3 +1,9 @@\n+2015-12-02  Tom de Vries  <tom@codesourcery.com>\n+\n+\t* c-c++-common/goacc/kernels-alias-ipa-pta-2.c: New test.\n+\t* c-c++-common/goacc/kernels-alias-ipa-pta-3.c: New test.\n+\t* c-c++-common/goacc/kernels-alias-ipa-pta.c: New test.\n+\n 2015-12-02  Richard Biener  <rguenther@suse.de>\n \n \t* gcc.dg/vect/vect-strided-a-u8-i8-gap7-big-array.c: Fix uninitialized"}, {"sha": "f16d698af0d0b07744c672e3a8137f030cef0d7d", "filename": "gcc/testsuite/c-c++-common/goacc/kernels-alias-ipa-pta-2.c", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/694e5e4baebff76320ecbb0c119bc086126c4095/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fkernels-alias-ipa-pta-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/694e5e4baebff76320ecbb0c119bc086126c4095/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fkernels-alias-ipa-pta-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fkernels-alias-ipa-pta-2.c?ref=694e5e4baebff76320ecbb0c119bc086126c4095", "patch": "@@ -0,0 +1,37 @@\n+/* { dg-additional-options \"-O2\" } */\n+/* { dg-additional-options \"-fipa-pta -fdump-tree-optimized\" } */\n+\n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+typedef __SIZE_TYPE__ size_t;\n+void *malloc (size_t);\n+void free (void *);\n+#ifdef __cplusplus\n+}\n+#endif\n+\n+#define N 2\n+\n+void\n+foo (void)\n+{\n+  unsigned int *a = (unsigned int *)malloc (N * sizeof (unsigned int));\n+  unsigned int *b = (unsigned int *)malloc (N * sizeof (unsigned int));\n+  unsigned int *c = (unsigned int *)malloc (N * sizeof (unsigned int));\n+\n+#pragma acc kernels pcopyout (a[0:N], b[0:N], c[0:N])\n+  {\n+    a[0] = 0;\n+    b[0] = 1;\n+    c[0] = a[0];\n+  }\n+\n+  free (a);\n+  free (b);\n+  free (c);\n+}\n+\n+/* { dg-final { scan-tree-dump-times \"(?n)= 0;$\" 2 \"optimized\" } } */\n+/* { dg-final { scan-tree-dump-times \"(?n)= 1;$\" 1 \"optimized\" } } */\n+/* { dg-final { scan-tree-dump-times \"(?n)= \\\\*a\" 0 \"optimized\" } } */"}, {"sha": "1eb56eb9e62d46e72268a33a4a41b1a2ce892062", "filename": "gcc/testsuite/c-c++-common/goacc/kernels-alias-ipa-pta-3.c", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/694e5e4baebff76320ecbb0c119bc086126c4095/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fkernels-alias-ipa-pta-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/694e5e4baebff76320ecbb0c119bc086126c4095/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fkernels-alias-ipa-pta-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fkernels-alias-ipa-pta-3.c?ref=694e5e4baebff76320ecbb0c119bc086126c4095", "patch": "@@ -0,0 +1,36 @@\n+/* { dg-additional-options \"-O2\" } */\n+/* { dg-additional-options \"-fipa-pta -fdump-tree-optimized\" } */\n+\n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+typedef __SIZE_TYPE__ size_t;\n+void *malloc (size_t);\n+void free (void *);\n+#ifdef __cplusplus\n+}\n+#endif\n+\n+#define N 2\n+\n+void\n+foo (void)\n+{\n+  unsigned int *a = (unsigned int *)malloc (N * sizeof (unsigned int));\n+  unsigned int *b = a;\n+  unsigned int *c = (unsigned int *)malloc (N * sizeof (unsigned int));\n+\n+#pragma acc kernels pcopyout (a[0:N], b[0:N], c[0:N])\n+  {\n+    a[0] = 0;\n+    b[0] = 1;\n+    c[0] = a[0];\n+  }\n+\n+  free (a);\n+  free (c);\n+}\n+\n+/* { dg-final { scan-tree-dump-times \"(?n)= 0;$\" 1 \"optimized\" } } */\n+/* { dg-final { scan-tree-dump-times \"(?n)= 1;$\" 1 \"optimized\" } } */\n+/* { dg-final { scan-tree-dump-times \"(?n)= \\\\*a\" 1 \"optimized\" } } */"}, {"sha": "969b466e8a8a07c26014f8ff63910ce2790de4f2", "filename": "gcc/testsuite/c-c++-common/goacc/kernels-alias-ipa-pta.c", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/694e5e4baebff76320ecbb0c119bc086126c4095/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fkernels-alias-ipa-pta.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/694e5e4baebff76320ecbb0c119bc086126c4095/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fkernels-alias-ipa-pta.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fkernels-alias-ipa-pta.c?ref=694e5e4baebff76320ecbb0c119bc086126c4095", "patch": "@@ -0,0 +1,23 @@\n+/* { dg-additional-options \"-O2\" } */\n+/* { dg-additional-options \"-fipa-pta -fdump-tree-optimized\" } */\n+\n+#define N 2\n+\n+void\n+foo (void)\n+{\n+  unsigned int a[N];\n+  unsigned int b[N];\n+  unsigned int c[N];\n+\n+#pragma acc kernels pcopyout (a, b, c)\n+  {\n+    a[0] = 0;\n+    b[0] = 1;\n+    c[0] = a[0];\n+  }\n+}\n+\n+/* { dg-final { scan-tree-dump-times \"(?n)= 0;$\" 2 \"optimized\" } } */\n+/* { dg-final { scan-tree-dump-times \"(?n)= 1;$\" 1 \"optimized\" } } */\n+/* { dg-final { scan-tree-dump-times \"(?n)= \\\\*_\\[0-9\\]\\\\\\[0\\\\\\];$\" 0 \"optimized\" } } */"}, {"sha": "060ff3efc1d71e7bac339fae917bfe95f7036806", "filename": "gcc/tree-ssa-structalias.c", "status": "modified", "additions": 24, "deletions": 4, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/694e5e4baebff76320ecbb0c119bc086126c4095/gcc%2Ftree-ssa-structalias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/694e5e4baebff76320ecbb0c119bc086126c4095/gcc%2Ftree-ssa-structalias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-structalias.c?ref=694e5e4baebff76320ecbb0c119bc086126c4095", "patch": "@@ -4507,15 +4507,32 @@ find_func_aliases_for_builtin_call (struct function *fn, gcall *t)\n \t  return true;\n \t}\n       case BUILT_IN_GOMP_PARALLEL:\n+      case BUILT_IN_GOACC_PARALLEL:\n \t{\n-\t  /* Handle __builtin_GOMP_parallel (fn, data, num_threads, flags) as\n-\t     fn (data).  */\n \t  if (in_ipa_mode)\n \t    {\n-\t      tree fnarg = gimple_call_arg (t, 0);\n+\t      unsigned int fnpos, argpos;\n+\t      switch (DECL_FUNCTION_CODE (fndecl))\n+\t\t{\n+\t\tcase BUILT_IN_GOMP_PARALLEL:\n+\t\t  /* __builtin_GOMP_parallel (fn, data, num_threads, flags).  */\n+\t\t  fnpos = 0;\n+\t\t  argpos = 1;\n+\t\t  break;\n+\t\tcase BUILT_IN_GOACC_PARALLEL:\n+\t\t  /* __builtin_GOACC_parallel (device, fn, mapnum, hostaddrs,\n+\t\t\t\t\t       sizes, kinds, ...).  */\n+\t\t  fnpos = 1;\n+\t\t  argpos = 3;\n+\t\t  break;\n+\t\tdefault:\n+\t\t  gcc_unreachable ();\n+\t\t}\n+\n+\t      tree fnarg = gimple_call_arg (t, fnpos);\n \t      gcc_assert (TREE_CODE (fnarg) == ADDR_EXPR);\n \t      tree fndecl = TREE_OPERAND (fnarg, 0);\n-\t      tree arg = gimple_call_arg (t, 1);\n+\t      tree arg = gimple_call_arg (t, argpos);\n \t      gcc_assert (TREE_CODE (arg) == ADDR_EXPR);\n \n \t      varinfo_t fi = get_vi_for_tree (fndecl);\n@@ -5064,6 +5081,7 @@ find_func_clobbers (struct function *fn, gimple *origt)\n \t  case BUILT_IN_VA_END:\n \t    return;\n \t  case BUILT_IN_GOMP_PARALLEL:\n+\t  case BUILT_IN_GOACC_PARALLEL:\n \t    return;\n \t  /* printf-style functions may have hooks to set pointers to\n \t     point to somewhere into the generated string.  Leave them\n@@ -7547,6 +7565,8 @@ ipa_pta_execute (void)\n \t      /* Handle direct calls to functions with body.  */\n \t      if (gimple_call_builtin_p (stmt, BUILT_IN_GOMP_PARALLEL))\n \t\tdecl = TREE_OPERAND (gimple_call_arg (stmt, 0), 0);\n+\t      else if (gimple_call_builtin_p (stmt, BUILT_IN_GOACC_PARALLEL))\n+\t\tdecl = TREE_OPERAND (gimple_call_arg (stmt, 1), 0);\n \t      else\n \t\tdecl = gimple_call_fndecl (stmt);\n "}, {"sha": "0f323c82d2cabc4b2f2e3d553eb8c9d9dedbdc9d", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/kernels-alias-ipa-pta-2.c", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/694e5e4baebff76320ecbb0c119bc086126c4095/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fkernels-alias-ipa-pta-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/694e5e4baebff76320ecbb0c119bc086126c4095/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fkernels-alias-ipa-pta-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fkernels-alias-ipa-pta-2.c?ref=694e5e4baebff76320ecbb0c119bc086126c4095", "patch": "@@ -0,0 +1,27 @@\n+/* { dg-additional-options \"-O2 -fipa-pta\" } */\n+\n+#include <stdlib.h>\n+\n+#define N 2\n+\n+int\n+main (void)\n+{\n+  unsigned int *a = (unsigned int *)malloc (N * sizeof (unsigned int));\n+  unsigned int *b = (unsigned int *)malloc (N * sizeof (unsigned int));\n+  unsigned int *c = (unsigned int *)malloc (N * sizeof (unsigned int));\n+\n+#pragma acc kernels pcopyout (a[0:N], b[0:N], c[0:N])\n+  {\n+    a[0] = 0;\n+    b[0] = 1;\n+    c[0] = a[0];\n+  }\n+\n+  if (a[0] != 0 || b[0] != 1 || c[0] != 0)\n+    abort ();\n+\n+  free (a);\n+  free (b);\n+  free (c);\n+}"}, {"sha": "654e750c3b4e3589c805d0666c267e41ffaa4f5a", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/kernels-alias-ipa-pta-3.c", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/694e5e4baebff76320ecbb0c119bc086126c4095/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fkernels-alias-ipa-pta-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/694e5e4baebff76320ecbb0c119bc086126c4095/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fkernels-alias-ipa-pta-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fkernels-alias-ipa-pta-3.c?ref=694e5e4baebff76320ecbb0c119bc086126c4095", "patch": "@@ -0,0 +1,26 @@\n+/* { dg-additional-options \"-O2 -fipa-pta\" } */\n+\n+#include <stdlib.h>\n+\n+#define N 2\n+\n+int\n+main (void)\n+{\n+  unsigned int *a = (unsigned int *)malloc (N * sizeof (unsigned int));\n+  unsigned int *b = a;\n+  unsigned int *c = (unsigned int *)malloc (N * sizeof (unsigned int));\n+\n+#pragma acc kernels pcopyout (a[0:N], b[0:N], c[0:N])\n+  {\n+    a[0] = 0;\n+    b[0] = 1;\n+    c[0] = a[0];\n+  }\n+\n+  if (a[0] != 1 || b[0] != 1 || c[0] != 1)\n+    abort ();\n+\n+  free (a);\n+  free (c);\n+}"}, {"sha": "44d4fd25cd2971b9ca9dd1733d25a0a8ef6a51cb", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/kernels-alias-ipa-pta.c", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/694e5e4baebff76320ecbb0c119bc086126c4095/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fkernels-alias-ipa-pta.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/694e5e4baebff76320ecbb0c119bc086126c4095/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fkernels-alias-ipa-pta.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fkernels-alias-ipa-pta.c?ref=694e5e4baebff76320ecbb0c119bc086126c4095", "patch": "@@ -0,0 +1,26 @@\n+/* { dg-additional-options \"-O2 -fipa-pta\" } */\n+\n+#include <stdlib.h>\n+\n+#define N 2\n+\n+int\n+main (void)\n+{\n+  unsigned int a[N];\n+  unsigned int b[N];\n+  unsigned int c[N];\n+\n+#pragma acc kernels pcopyout (a, b, c)\n+  {\n+    a[0] = 0;\n+    b[0] = 1;\n+    c[0] = a[0];\n+  }\n+\n+  if (a[0] != 0 || b[0] != 1 || c[0] != 0)\n+    abort ();\n+\n+  return 0;\n+}\n+"}]}