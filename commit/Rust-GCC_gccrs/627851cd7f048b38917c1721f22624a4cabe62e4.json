{"sha": "627851cd7f048b38917c1721f22624a4cabe62e4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjI3ODUxY2Q3ZjA0OGIzODkxN2MxNzIxZjIyNjI0YTRjYWJlNjJlNA==", "commit": {"author": {"name": "Jeroen Frijters", "email": "jeroen@frijters.net", "date": "2005-02-22T14:06:53Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2005-02-22T14:06:53Z"}, "message": "2005-02-22  Jeroen Frijters  <jeroen@frijters.net>\n\n\t* java/beans/PropertyDescriptor.java\n\t(PropertyDescriptor,setReadMethod): Set propertyType.\n\nFrom-SVN: r95393", "tree": {"sha": "f9bf21cc86eaa4bedc99cb14bf3385139851a29f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f9bf21cc86eaa4bedc99cb14bf3385139851a29f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/627851cd7f048b38917c1721f22624a4cabe62e4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/627851cd7f048b38917c1721f22624a4cabe62e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/627851cd7f048b38917c1721f22624a4cabe62e4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/627851cd7f048b38917c1721f22624a4cabe62e4/comments", "author": {"login": "jfrijters", "id": 2994393, "node_id": "MDQ6VXNlcjI5OTQzOTM=", "avatar_url": "https://avatars.githubusercontent.com/u/2994393?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jfrijters", "html_url": "https://github.com/jfrijters", "followers_url": "https://api.github.com/users/jfrijters/followers", "following_url": "https://api.github.com/users/jfrijters/following{/other_user}", "gists_url": "https://api.github.com/users/jfrijters/gists{/gist_id}", "starred_url": "https://api.github.com/users/jfrijters/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jfrijters/subscriptions", "organizations_url": "https://api.github.com/users/jfrijters/orgs", "repos_url": "https://api.github.com/users/jfrijters/repos", "events_url": "https://api.github.com/users/jfrijters/events{/privacy}", "received_events_url": "https://api.github.com/users/jfrijters/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a010a29561f5e2db51ccda2946f0112c49523972", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a010a29561f5e2db51ccda2946f0112c49523972", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a010a29561f5e2db51ccda2946f0112c49523972"}], "stats": {"total": 23, "additions": 9, "deletions": 14}, "files": [{"sha": "8eb46e4eb939d55cf599fca66b8deee0afc0f677", "filename": "libjava/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/627851cd7f048b38917c1721f22624a4cabe62e4/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/627851cd7f048b38917c1721f22624a4cabe62e4/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=627851cd7f048b38917c1721f22624a4cabe62e4", "patch": "@@ -1,3 +1,8 @@\n+2005-02-22  Jeroen Frijters  <jeroen@frijters.net>\n+\n+\t* java/beans/PropertyDescriptor.java\n+\t(PropertyDescriptor,setReadMethod): Set propertyType.\n+\n 2005-02-22  Michael Koch  <konqueror@gmx.de>\n \n \t* java/nio/DirectByteBufferImpl.java"}, {"sha": "57ed4f8cadffd3b1ba2baa665f479a79fbc36cee", "filename": "libjava/java/beans/PropertyDescriptor.java", "status": "modified", "additions": 4, "deletions": 14, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/627851cd7f048b38917c1721f22624a4cabe62e4/libjava%2Fjava%2Fbeans%2FPropertyDescriptor.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/627851cd7f048b38917c1721f22624a4cabe62e4/libjava%2Fjava%2Fbeans%2FPropertyDescriptor.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fbeans%2FPropertyDescriptor.java?ref=627851cd7f048b38917c1721f22624a4cabe62e4", "patch": "@@ -126,7 +126,7 @@ public PropertyDescriptor(String name, Class beanClass)\n         }\n \n         // finally check the methods compatibility        \n-        checkMethods(getMethod, setMethod);\n+        propertyType = checkMethods(getMethod, setMethod);\n     }\n \n     /** Create a new PropertyDescriptor by introspection.\n@@ -178,7 +178,7 @@ public PropertyDescriptor(\n                 \"Cannot find a setter method called \" + setMethodName);\n         }\n \n-        checkMethods(getMethod, setMethod);\n+        propertyType = checkMethods(getMethod, setMethod);\n     }\n \n     /** Create a new PropertyDescriptor using explicit Methods.\n@@ -205,17 +205,7 @@ public PropertyDescriptor(\n         setName(name);\n         getMethod = readMethod;\n         setMethod = writeMethod;\n-\n-        if (getMethod != null)\n-        {\n-            this.propertyType = getMethod.getReturnType();\n-        }\n-        else if (setMethod != null)\n-        {\n-            this.propertyType = setMethod.getParameterTypes()[0];\n-        }\n-\n-        checkMethods(getMethod, setMethod);\n+        propertyType = checkMethods(getMethod, setMethod);\n     }\n \n     /** Get the property type.\n@@ -250,7 +240,7 @@ public Method getReadMethod()\n      */\n     public void setReadMethod(Method readMethod) throws IntrospectionException\n     {\n-        checkMethods(readMethod, setMethod);\n+        propertyType = checkMethods(readMethod, setMethod);\n \n         getMethod = readMethod;\n     }"}]}