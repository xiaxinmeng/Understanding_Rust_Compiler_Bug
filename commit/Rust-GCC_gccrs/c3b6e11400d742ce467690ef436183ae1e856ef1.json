{"sha": "c3b6e11400d742ce467690ef436183ae1e856ef1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzNiNmUxMTQwMGQ3NDJjZTQ2NzY5MGVmNDM2MTgzYWUxZTg1NmVmMQ==", "commit": {"author": {"name": "Jim Kingdon", "email": "kingdon@redhat.com", "date": "1999-09-22T12:58:30Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1999-09-22T12:58:30Z"}, "message": "c-parse.in: save and restore warn_pointer_arith on __extension__ along with pedantic.\n\n       * c-parse.in: save and restore warn_pointer_arith on __extension__\n        along with pedantic.\n        (SAVE_WARN_FLAGS, RESTORE_WARN_FLAGS): Added.\n        Set the type of extension to itype rather than $<itype>1 kludge.\n        * extend.texi (Alternate Keywords): Adjust documentation.\n        * c-parse.c, c-parse.y, objc-parse.c, objc-parse.y: Rebuilt.\n\nFrom-SVN: r29588", "tree": {"sha": "23aa2fcbddad93809cf2b6045bcbaed02320a20b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/23aa2fcbddad93809cf2b6045bcbaed02320a20b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c3b6e11400d742ce467690ef436183ae1e856ef1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3b6e11400d742ce467690ef436183ae1e856ef1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c3b6e11400d742ce467690ef436183ae1e856ef1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3b6e11400d742ce467690ef436183ae1e856ef1/comments", "author": null, "committer": null, "parents": [{"sha": "30439f2985a1fa99e0621ce7a426074938c187c8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30439f2985a1fa99e0621ce7a426074938c187c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/30439f2985a1fa99e0621ce7a426074938c187c8"}], "stats": {"total": 1889, "additions": 977, "deletions": 912}, "files": [{"sha": "ef867ff042f0a9e20c8d6852c9009d322f643f7a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3b6e11400d742ce467690ef436183ae1e856ef1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3b6e11400d742ce467690ef436183ae1e856ef1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c3b6e11400d742ce467690ef436183ae1e856ef1", "patch": "@@ -1,3 +1,12 @@\n+Wed Sep 22 06:25:15 1999  Jim Kingdon  <http://developer.redhat.com>\n+\n+\t* c-parse.in: save and restore warn_pointer_arith on __extension__\n+\talong with pedantic.\n+\t(SAVE_WARN_FLAGS, RESTORE_WARN_FLAGS): Added.\n+\tSet the type of extension to itype rather than $<itype>1 kludge.\n+\t* extend.texi (Alternate Keywords): Adjust documentation.\n+\t* c-parse.c, c-parse.y, objc-parse.c, objc-parse.y: Rebuilt.\n+\n Wed Sep 22 06:06:57 1999  Jeffrey A Law  (law@cygnus.com)\n \n \t* flow.c (record_active_eh_regions): Terminate loop after finding"}, {"sha": "ac7022674e42cc5bf4e8cf5044ed9952bc6f344d", "filename": "gcc/c-parse.c", "status": "modified", "additions": 392, "deletions": 382, "changes": 774, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3b6e11400d742ce467690ef436183ae1e856ef1/gcc%2Fc-parse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3b6e11400d742ce467690ef436183ae1e856ef1/gcc%2Fc-parse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-parse.c?ref=c3b6e11400d742ce467690ef436183ae1e856ef1", "patch": "@@ -99,7 +99,7 @@ const char * const language_string = \"GNU C\";\n #line 64 \"c-parse.y\"\n typedef union {long itype; tree ttype; enum tree_code code;\n \tchar *filename; int lineno; int ends_in_label; } YYSTYPE;\n-#line 184 \"c-parse.y\"\n+#line 186 \"c-parse.y\"\n \n /* Number of statements (loosely speaking) and compound statements \n    seen so far.  */\n@@ -121,6 +121,15 @@ static tree declspec_stack;\n /* 1 if we explained undeclared var errors.  */\n static int undeclared_variable_notice;\n \n+/* For __extension__, save/restore the warning flags which are\n+   controlled by __extension__.  */\n+#define SAVE_WARN_FLAGS() (pedantic | (warn_pointer_arith << 1))\n+#define RESTORE_WARN_FLAGS(val) \\\n+  do {                                     \\\n+    pedantic = val & 1;                    \\\n+    warn_pointer_arith = (val >> 1) & 1;   \\\n+  } while (0)\n+\n \n /* Tell yyparse how to print a token's value, if yydebug is set.  */\n \n@@ -370,47 +379,47 @@ static const short yyrhs[] = {    -1,\n \n #if YYDEBUG != 0\n static const short yyrline[] = { 0,\n-   223,   228,   242,   244,   244,   245,   247,   249,   250,   258,\n-   262,   273,   278,   283,   285,   287,   288,   289,   294,   301,\n-   303,   308,   313,   319,   321,   326,   331,   337,   339,   344,\n-   351,   353,   356,   358,   360,   362,   364,   366,   368,   372,\n-   376,   379,   382,   385,   389,   391,   394,   397,   401,   429,\n-   435,   438,   441,   444,   446,   448,   452,   456,   460,   462,\n-   465,   469,   496,   498,   500,   502,   504,   506,   508,   510,\n-   512,   514,   516,   518,   520,   522,   526,   528,   532,   534,\n-   537,   541,   543,   550,   553,   561,   572,   671,   672,   674,\n-   680,   682,   705,   714,   716,   718,   722,   728,   730,   735,\n-   737,   742,   744,   745,   755,   760,   762,   763,   764,   771,\n-   777,   782,   785,   793,   798,   800,   801,   802,   809,   820,\n-   824,   830,   835,   840,   845,   847,   849,   858,   861,   865,\n-   867,   869,   874,   878,   881,   885,   888,   890,   902,   905,\n-   907,   909,   913,   917,   919,   922,   935,   938,   942,   944,\n-   952,   953,   954,   958,   960,   966,   967,   968,   971,   973,\n-   976,   978,   981,   984,   990,   997,   999,  1006,  1013,  1016,\n-  1023,  1026,  1030,  1033,  1037,  1042,  1045,  1049,  1052,  1054,\n-  1056,  1058,  1065,  1067,  1068,  1069,  1074,  1076,  1081,  1089,\n-  1094,  1098,  1101,  1103,  1108,  1110,  1111,  1114,  1114,  1117,\n-  1120,  1122,  1124,  1127,  1129,  1132,  1138,  1140,  1144,  1158,\n-  1166,  1170,  1184,  1192,  1199,  1201,  1206,  1209,  1214,  1216,\n-  1218,  1225,  1227,  1235,  1241,  1246,  1248,  1250,  1257,  1259,\n-  1265,  1271,  1273,  1275,  1280,  1282,  1289,  1291,  1294,  1297,\n-  1301,  1304,  1308,  1311,  1315,  1320,  1322,  1326,  1328,  1330,\n-  1332,  1336,  1338,  1341,  1344,  1347,  1350,  1354,  1356,  1359,\n-  1361,  1366,  1369,  1374,  1376,  1378,  1392,  1399,  1404,  1410,\n-  1415,  1417,  1422,  1424,  1428,  1432,  1436,  1446,  1448,  1453,\n-  1458,  1461,  1465,  1468,  1472,  1475,  1478,  1481,  1485,  1488,\n-  1492,  1496,  1498,  1500,  1502,  1504,  1506,  1508,  1510,  1514,\n-  1522,  1530,  1532,  1534,  1538,  1540,  1543,  1546,  1557,  1559,\n-  1564,  1566,  1569,  1583,  1586,  1589,  1591,  1593,  1601,  1609,\n-  1619,  1637,  1642,  1647,  1650,  1664,  1673,  1677,  1681,  1685,\n-  1691,  1695,  1700,  1703,  1708,  1711,  1712,  1729,  1734,  1737,\n-  1749,  1751,  1761,  1771,  1772,  1780,  1783,  1795,  1799,  1816,\n-  1826,  1835,  1840,  1845,  1850,  1854,  1858,  1869,  1876,  1883,\n-  1890,  1901,  1907,  1910,  1915,  1938,  1972,  2003,  2034,  2049,\n-  2063,  2067,  2071,  2074,  2079,  2081,  2084,  2086,  2090,  2095,\n-  2098,  2104,  2109,  2114,  2116,  2125,  2126,  2132,  2134,  2144,\n-  2146,  2150,  2153,  2159,  2169,  2178,  2187,  2197,  2211,  2216,\n-  2221,  2223,  2232,  2235,  2240,  2243,  2247\n+   234,   239,   253,   255,   255,   256,   258,   260,   261,   269,\n+   273,   284,   289,   294,   296,   298,   299,   300,   305,   312,\n+   314,   319,   324,   330,   332,   337,   342,   348,   350,   355,\n+   362,   364,   367,   369,   371,   373,   375,   377,   379,   383,\n+   387,   390,   393,   396,   400,   402,   405,   408,   412,   440,\n+   446,   449,   452,   455,   457,   459,   463,   467,   471,   473,\n+   476,   480,   507,   509,   511,   513,   515,   517,   519,   521,\n+   523,   525,   527,   529,   531,   533,   537,   539,   543,   545,\n+   548,   552,   554,   561,   564,   572,   583,   682,   683,   685,\n+   691,   693,   716,   725,   727,   729,   733,   739,   741,   746,\n+   748,   753,   755,   756,   766,   771,   773,   774,   775,   782,\n+   788,   793,   796,   804,   809,   811,   812,   813,   820,   831,\n+   835,   841,   846,   851,   856,   858,   860,   869,   872,   876,\n+   878,   880,   885,   889,   892,   896,   899,   901,   913,   916,\n+   918,   920,   924,   928,   930,   933,   946,   949,   953,   955,\n+   963,   964,   965,   969,   971,   977,   978,   979,   982,   984,\n+   987,   989,   992,   995,  1001,  1008,  1010,  1017,  1024,  1027,\n+  1034,  1037,  1041,  1044,  1048,  1053,  1056,  1060,  1063,  1065,\n+  1067,  1069,  1076,  1078,  1079,  1080,  1085,  1087,  1092,  1100,\n+  1105,  1109,  1112,  1114,  1119,  1121,  1122,  1125,  1125,  1128,\n+  1131,  1133,  1135,  1138,  1140,  1143,  1149,  1151,  1155,  1169,\n+  1177,  1181,  1195,  1203,  1210,  1212,  1217,  1220,  1225,  1227,\n+  1229,  1236,  1238,  1246,  1252,  1257,  1259,  1261,  1268,  1270,\n+  1276,  1282,  1284,  1286,  1291,  1293,  1300,  1302,  1305,  1308,\n+  1312,  1315,  1319,  1322,  1326,  1331,  1333,  1337,  1339,  1341,\n+  1343,  1347,  1349,  1352,  1355,  1358,  1361,  1365,  1367,  1370,\n+  1372,  1377,  1380,  1385,  1387,  1389,  1403,  1410,  1415,  1421,\n+  1426,  1428,  1433,  1435,  1439,  1443,  1447,  1457,  1459,  1464,\n+  1469,  1472,  1476,  1479,  1483,  1486,  1489,  1492,  1496,  1499,\n+  1503,  1507,  1509,  1511,  1513,  1515,  1517,  1519,  1521,  1525,\n+  1533,  1541,  1543,  1545,  1549,  1551,  1554,  1557,  1568,  1570,\n+  1575,  1577,  1580,  1594,  1597,  1600,  1602,  1604,  1612,  1620,\n+  1630,  1648,  1653,  1658,  1661,  1675,  1684,  1688,  1692,  1696,\n+  1702,  1706,  1711,  1714,  1719,  1722,  1723,  1740,  1745,  1748,\n+  1760,  1762,  1772,  1782,  1783,  1791,  1794,  1806,  1810,  1827,\n+  1837,  1846,  1851,  1856,  1861,  1865,  1869,  1880,  1887,  1894,\n+  1901,  1912,  1918,  1921,  1926,  1949,  1983,  2014,  2045,  2060,\n+  2074,  2078,  2082,  2085,  2090,  2092,  2095,  2097,  2101,  2106,\n+  2109,  2115,  2120,  2125,  2127,  2136,  2137,  2143,  2145,  2155,\n+  2157,  2161,  2164,  2170,  2180,  2189,  2198,  2208,  2222,  2227,\n+  2232,  2234,  2243,  2246,  2251,  2254,  2258\n };\n #endif\n \n@@ -1255,7 +1264,7 @@ static const short yycheck[] = {    38,\n     53,    54\n };\n /* -*-C-*-  Note some compilers choke on comments on `#line' lines.  */\n-#line 3 \"bison.simple\"\n+#line 3 \"/usr/cygnus/TBD-TBD/share/bison.simple\"\n \n /* Skeleton output parser for bison,\n    Copyright (C) 1984, 1989, 1990 Free Software Foundation, Inc.\n@@ -1448,7 +1457,7 @@ __yy_memcpy (char *to, char *from, int count)\n #endif\n #endif\n \f\n-#line 196 \"bison.simple\"\n+#line 196 \"/usr/cygnus/TBD-TBD/share/bison.simple\"\n \n /* The user can define YYPARSE_PARAM as the name of an argument to be passed\n    into yyparse.  The argument should have type void *.\n@@ -1753,14 +1762,14 @@ yyparse(YYPARSE_PARAM_ARG)\n   switch (yyn) {\n \n case 1:\n-#line 224 \"c-parse.y\"\n+#line 235 \"c-parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"ANSI C forbids an empty source file\");\n \t\t  finish_file ();\n \t\t;\n     break;}\n case 2:\n-#line 229 \"c-parse.y\"\n+#line 240 \"c-parse.y\"\n {\n \t\t  /* In case there were missing closebraces,\n \t\t     get us back to the global binding level.  */\n@@ -1770,15 +1779,15 @@ case 2:\n \t\t;\n     break;}\n case 3:\n-#line 243 \"c-parse.y\"\n+#line 254 \"c-parse.y\"\n {yyval.ttype = NULL_TREE; ;\n     break;}\n case 5:\n-#line 244 \"c-parse.y\"\n+#line 255 \"c-parse.y\"\n {yyval.ttype = NULL_TREE; ;\n     break;}\n case 9:\n-#line 251 \"c-parse.y\"\n+#line 262 \"c-parse.y\"\n { STRIP_NOPS (yyvsp[-2].ttype);\n \t\t  if ((TREE_CODE (yyvsp[-2].ttype) == ADDR_EXPR\n \t\t       && TREE_CODE (TREE_OPERAND (yyvsp[-2].ttype, 0)) == STRING_CST)\n@@ -1788,11 +1797,11 @@ case 9:\n \t\t    error (\"argument of `asm' is not a constant string\"); ;\n     break;}\n case 10:\n-#line 259 \"c-parse.y\"\n-{ pedantic = yyvsp[-1].itype; ;\n+#line 270 \"c-parse.y\"\n+{ RESTORE_WARN_FLAGS (yyvsp[-1].itype); ;\n     break;}\n case 11:\n-#line 264 \"c-parse.y\"\n+#line 275 \"c-parse.y\"\n { if (pedantic)\n \t\t    error (\"ANSI C forbids data definition with no type or storage class\");\n \t\t  else if (!flag_traditional)\n@@ -1804,170 +1813,170 @@ case 11:\n \t\t  resume_momentary (yyvsp[-2].itype); ;\n     break;}\n case 12:\n-#line 274 \"c-parse.y\"\n+#line 285 \"c-parse.y\"\n { current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n \t\t  resume_momentary (yyvsp[-2].itype); ;\n     break;}\n case 13:\n-#line 279 \"c-parse.y\"\n+#line 290 \"c-parse.y\"\n { current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n \t\t  resume_momentary (yyvsp[-2].itype);  ;\n     break;}\n case 14:\n-#line 284 \"c-parse.y\"\n+#line 295 \"c-parse.y\"\n { pedwarn (\"empty declaration\"); ;\n     break;}\n case 15:\n-#line 286 \"c-parse.y\"\n+#line 297 \"c-parse.y\"\n { shadow_tag (yyvsp[-1].ttype); ;\n     break;}\n case 18:\n-#line 290 \"c-parse.y\"\n+#line 301 \"c-parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"ANSI C does not allow extra `;' outside of a function\"); ;\n     break;}\n case 19:\n-#line 296 \"c-parse.y\"\n+#line 307 \"c-parse.y\"\n { if (! start_function (current_declspecs, yyvsp[0].ttype,\n \t\t\t\t\tprefix_attributes, NULL_TREE, 0))\n \t\t    YYERROR1;\n \t\t  reinit_parse_for_function (); ;\n     break;}\n case 20:\n-#line 301 \"c-parse.y\"\n+#line 312 \"c-parse.y\"\n { store_parm_decls (); ;\n     break;}\n case 21:\n-#line 303 \"c-parse.y\"\n+#line 314 \"c-parse.y\"\n { finish_function (0); \n \t\t  current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n \t\t  resume_momentary (yyvsp[-5].itype); ;\n     break;}\n case 22:\n-#line 309 \"c-parse.y\"\n+#line 320 \"c-parse.y\"\n { current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n \t\t  resume_momentary (yyvsp[-2].itype); ;\n     break;}\n case 23:\n-#line 314 \"c-parse.y\"\n+#line 325 \"c-parse.y\"\n { if (! start_function (current_declspecs, yyvsp[0].ttype,\n \t\t\t\t\tprefix_attributes, NULL_TREE, 0))\n \t\t    YYERROR1;\n \t\t  reinit_parse_for_function (); ;\n     break;}\n case 24:\n-#line 319 \"c-parse.y\"\n+#line 330 \"c-parse.y\"\n { store_parm_decls (); ;\n     break;}\n case 25:\n-#line 321 \"c-parse.y\"\n+#line 332 \"c-parse.y\"\n { finish_function (0); \n \t\t  current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n \t\t  resume_momentary (yyvsp[-5].itype); ;\n     break;}\n case 26:\n-#line 327 \"c-parse.y\"\n+#line 338 \"c-parse.y\"\n { current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n \t\t  resume_momentary (yyvsp[-2].itype); ;\n     break;}\n case 27:\n-#line 332 \"c-parse.y\"\n+#line 343 \"c-parse.y\"\n { if (! start_function (NULL_TREE, yyvsp[0].ttype,\n \t\t\t\t\tprefix_attributes, NULL_TREE, 0))\n \t\t    YYERROR1;\n \t\t  reinit_parse_for_function (); ;\n     break;}\n case 28:\n-#line 337 \"c-parse.y\"\n+#line 348 \"c-parse.y\"\n { store_parm_decls (); ;\n     break;}\n case 29:\n-#line 339 \"c-parse.y\"\n+#line 350 \"c-parse.y\"\n { finish_function (0); \n \t\t  current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n \t\t  resume_momentary (yyvsp[-5].itype); ;\n     break;}\n case 30:\n-#line 345 \"c-parse.y\"\n+#line 356 \"c-parse.y\"\n { current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n \t\t  resume_momentary (yyvsp[-2].itype); ;\n     break;}\n case 33:\n-#line 357 \"c-parse.y\"\n+#line 368 \"c-parse.y\"\n { yyval.code = ADDR_EXPR; ;\n     break;}\n case 34:\n-#line 359 \"c-parse.y\"\n+#line 370 \"c-parse.y\"\n { yyval.code = NEGATE_EXPR; ;\n     break;}\n case 35:\n-#line 361 \"c-parse.y\"\n+#line 372 \"c-parse.y\"\n { yyval.code = CONVERT_EXPR; ;\n     break;}\n case 36:\n-#line 363 \"c-parse.y\"\n+#line 374 \"c-parse.y\"\n { yyval.code = PREINCREMENT_EXPR; ;\n     break;}\n case 37:\n-#line 365 \"c-parse.y\"\n+#line 376 \"c-parse.y\"\n { yyval.code = PREDECREMENT_EXPR; ;\n     break;}\n case 38:\n-#line 367 \"c-parse.y\"\n+#line 378 \"c-parse.y\"\n { yyval.code = BIT_NOT_EXPR; ;\n     break;}\n case 39:\n-#line 369 \"c-parse.y\"\n+#line 380 \"c-parse.y\"\n { yyval.code = TRUTH_NOT_EXPR; ;\n     break;}\n case 40:\n-#line 373 \"c-parse.y\"\n+#line 384 \"c-parse.y\"\n { yyval.ttype = build_compound_expr (yyvsp[0].ttype); ;\n     break;}\n case 41:\n-#line 378 \"c-parse.y\"\n+#line 389 \"c-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 43:\n-#line 384 \"c-parse.y\"\n+#line 395 \"c-parse.y\"\n { yyval.ttype = build_tree_list (NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 44:\n-#line 386 \"c-parse.y\"\n+#line 397 \"c-parse.y\"\n { chainon (yyvsp[-2].ttype, build_tree_list (NULL_TREE, yyvsp[0].ttype)); ;\n     break;}\n case 46:\n-#line 392 \"c-parse.y\"\n+#line 403 \"c-parse.y\"\n { yyval.ttype = build_indirect_ref (yyvsp[0].ttype, \"unary *\"); ;\n     break;}\n case 47:\n-#line 395 \"c-parse.y\"\n+#line 406 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype;\n-\t\t  pedantic = yyvsp[-1].itype; ;\n+\t\t  RESTORE_WARN_FLAGS (yyvsp[-1].itype); ;\n     break;}\n case 48:\n-#line 398 \"c-parse.y\"\n+#line 409 \"c-parse.y\"\n { yyval.ttype = build_unary_op (yyvsp[-1].code, yyvsp[0].ttype, 0);\n \t\t  overflow_warning (yyval.ttype); ;\n     break;}\n case 49:\n-#line 402 \"c-parse.y\"\n+#line 413 \"c-parse.y\"\n { tree label = lookup_label (yyvsp[0].ttype);\n \t\t  if (pedantic)\n \t\t    pedwarn (\"ANSI C forbids `&&'\");\n@@ -1982,61 +1991,61 @@ case 49:\n \t\t;\n     break;}\n case 50:\n-#line 430 \"c-parse.y\"\n+#line 441 \"c-parse.y\"\n { skip_evaluation--;\n \t\t  if (TREE_CODE (yyvsp[0].ttype) == COMPONENT_REF\n \t\t      && DECL_C_BIT_FIELD (TREE_OPERAND (yyvsp[0].ttype, 1)))\n \t\t    error (\"`sizeof' applied to a bit-field\");\n \t\t  yyval.ttype = c_sizeof (TREE_TYPE (yyvsp[0].ttype)); ;\n     break;}\n case 51:\n-#line 436 \"c-parse.y\"\n+#line 447 \"c-parse.y\"\n { skip_evaluation--;\n \t\t  yyval.ttype = c_sizeof (groktypename (yyvsp[-1].ttype)); ;\n     break;}\n case 52:\n-#line 439 \"c-parse.y\"\n+#line 450 \"c-parse.y\"\n { skip_evaluation--;\n \t\t  yyval.ttype = c_alignof_expr (yyvsp[0].ttype); ;\n     break;}\n case 53:\n-#line 442 \"c-parse.y\"\n+#line 453 \"c-parse.y\"\n { skip_evaluation--;\n \t\t  yyval.ttype = c_alignof (groktypename (yyvsp[-1].ttype)); ;\n     break;}\n case 54:\n-#line 445 \"c-parse.y\"\n+#line 456 \"c-parse.y\"\n { yyval.ttype = build_unary_op (REALPART_EXPR, yyvsp[0].ttype, 0); ;\n     break;}\n case 55:\n-#line 447 \"c-parse.y\"\n+#line 458 \"c-parse.y\"\n { yyval.ttype = build_unary_op (IMAGPART_EXPR, yyvsp[0].ttype, 0); ;\n     break;}\n case 56:\n-#line 449 \"c-parse.y\"\n+#line 460 \"c-parse.y\"\n { yyval.ttype = build_va_arg (yyvsp[-3].ttype, groktypename (yyvsp[-1].ttype)); ;\n     break;}\n case 57:\n-#line 453 \"c-parse.y\"\n+#line 464 \"c-parse.y\"\n { skip_evaluation++; ;\n     break;}\n case 58:\n-#line 457 \"c-parse.y\"\n+#line 468 \"c-parse.y\"\n { skip_evaluation++; ;\n     break;}\n case 60:\n-#line 463 \"c-parse.y\"\n+#line 474 \"c-parse.y\"\n { tree type = groktypename (yyvsp[-2].ttype);\n \t\t  yyval.ttype = build_c_cast (type, yyvsp[0].ttype); ;\n     break;}\n case 61:\n-#line 466 \"c-parse.y\"\n+#line 477 \"c-parse.y\"\n { start_init (NULL_TREE, NULL, 0);\n \t\t  yyvsp[-2].ttype = groktypename (yyvsp[-2].ttype);\n \t\t  really_start_incremental_init (yyvsp[-2].ttype); ;\n     break;}\n case 62:\n-#line 470 \"c-parse.y\"\n+#line 481 \"c-parse.y\"\n { char *name;\n \t\t  tree result = pop_init_level (0);\n \t\t  tree type = yyvsp[-5].ttype;\n@@ -2063,90 +2072,90 @@ case 62:\n \t\t;\n     break;}\n case 64:\n-#line 499 \"c-parse.y\"\n+#line 510 \"c-parse.y\"\n { yyval.ttype = parser_build_binary_op (yyvsp[-1].code, yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 65:\n-#line 501 \"c-parse.y\"\n+#line 512 \"c-parse.y\"\n { yyval.ttype = parser_build_binary_op (yyvsp[-1].code, yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 66:\n-#line 503 \"c-parse.y\"\n+#line 514 \"c-parse.y\"\n { yyval.ttype = parser_build_binary_op (yyvsp[-1].code, yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 67:\n-#line 505 \"c-parse.y\"\n+#line 516 \"c-parse.y\"\n { yyval.ttype = parser_build_binary_op (yyvsp[-1].code, yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 68:\n-#line 507 \"c-parse.y\"\n+#line 518 \"c-parse.y\"\n { yyval.ttype = parser_build_binary_op (yyvsp[-1].code, yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 69:\n-#line 509 \"c-parse.y\"\n+#line 520 \"c-parse.y\"\n { yyval.ttype = parser_build_binary_op (yyvsp[-1].code, yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 70:\n-#line 511 \"c-parse.y\"\n+#line 522 \"c-parse.y\"\n { yyval.ttype = parser_build_binary_op (yyvsp[-1].code, yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 71:\n-#line 513 \"c-parse.y\"\n+#line 524 \"c-parse.y\"\n { yyval.ttype = parser_build_binary_op (yyvsp[-1].code, yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 72:\n-#line 515 \"c-parse.y\"\n+#line 526 \"c-parse.y\"\n { yyval.ttype = parser_build_binary_op (yyvsp[-1].code, yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 73:\n-#line 517 \"c-parse.y\"\n+#line 528 \"c-parse.y\"\n { yyval.ttype = parser_build_binary_op (yyvsp[-1].code, yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 74:\n-#line 519 \"c-parse.y\"\n+#line 530 \"c-parse.y\"\n { yyval.ttype = parser_build_binary_op (yyvsp[-1].code, yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 75:\n-#line 521 \"c-parse.y\"\n+#line 532 \"c-parse.y\"\n { yyval.ttype = parser_build_binary_op (yyvsp[-1].code, yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 76:\n-#line 523 \"c-parse.y\"\n+#line 534 \"c-parse.y\"\n { yyvsp[-1].ttype = truthvalue_conversion (default_conversion (yyvsp[-1].ttype));\n \t\t  skip_evaluation += yyvsp[-1].ttype == boolean_false_node; ;\n     break;}\n case 77:\n-#line 526 \"c-parse.y\"\n+#line 537 \"c-parse.y\"\n { skip_evaluation -= yyvsp[-3].ttype == boolean_false_node;\n \t\t  yyval.ttype = parser_build_binary_op (TRUTH_ANDIF_EXPR, yyvsp[-3].ttype, yyvsp[0].ttype); ;\n     break;}\n case 78:\n-#line 529 \"c-parse.y\"\n+#line 540 \"c-parse.y\"\n { yyvsp[-1].ttype = truthvalue_conversion (default_conversion (yyvsp[-1].ttype));\n \t\t  skip_evaluation += yyvsp[-1].ttype == boolean_true_node; ;\n     break;}\n case 79:\n-#line 532 \"c-parse.y\"\n+#line 543 \"c-parse.y\"\n { skip_evaluation -= yyvsp[-3].ttype == boolean_true_node;\n \t\t  yyval.ttype = parser_build_binary_op (TRUTH_ORIF_EXPR, yyvsp[-3].ttype, yyvsp[0].ttype); ;\n     break;}\n case 80:\n-#line 535 \"c-parse.y\"\n+#line 546 \"c-parse.y\"\n { yyvsp[-1].ttype = truthvalue_conversion (default_conversion (yyvsp[-1].ttype));\n \t\t  skip_evaluation += yyvsp[-1].ttype == boolean_false_node; ;\n     break;}\n case 81:\n-#line 538 \"c-parse.y\"\n+#line 549 \"c-parse.y\"\n { skip_evaluation += ((yyvsp[-4].ttype == boolean_true_node)\n \t\t\t\t      - (yyvsp[-4].ttype == boolean_false_node)); ;\n     break;}\n case 82:\n-#line 541 \"c-parse.y\"\n+#line 552 \"c-parse.y\"\n { skip_evaluation -= yyvsp[-6].ttype == boolean_true_node;\n \t\t  yyval.ttype = build_conditional_expr (yyvsp[-6].ttype, yyvsp[-3].ttype, yyvsp[0].ttype); ;\n     break;}\n case 83:\n-#line 544 \"c-parse.y\"\n+#line 555 \"c-parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"ANSI C forbids omitting the middle term of a ?: expression\");\n \t\t  /* Make sure first operand is calculated only once.  */\n@@ -2155,12 +2164,12 @@ case 83:\n \t\t  skip_evaluation += yyvsp[-1].ttype == boolean_true_node; ;\n     break;}\n case 84:\n-#line 551 \"c-parse.y\"\n+#line 562 \"c-parse.y\"\n { skip_evaluation -= yyvsp[-4].ttype == boolean_true_node;\n \t\t  yyval.ttype = build_conditional_expr (yyvsp[-4].ttype, yyvsp[-3].ttype, yyvsp[0].ttype); ;\n     break;}\n case 85:\n-#line 554 \"c-parse.y\"\n+#line 565 \"c-parse.y\"\n { char class;\n \t\t  yyval.ttype = build_modify_expr (yyvsp[-2].ttype, NOP_EXPR, yyvsp[0].ttype);\n \t\t  class = TREE_CODE_CLASS (TREE_CODE (yyval.ttype));\n@@ -2170,7 +2179,7 @@ case 85:\n \t\t;\n     break;}\n case 86:\n-#line 562 \"c-parse.y\"\n+#line 573 \"c-parse.y\"\n { char class;\n \t\t  yyval.ttype = build_modify_expr (yyvsp[-2].ttype, yyvsp[-1].code, yyvsp[0].ttype);\n \t\t  /* This inhibits warnings in truthvalue_conversion.  */\n@@ -2181,7 +2190,7 @@ case 86:\n \t\t;\n     break;}\n case 87:\n-#line 574 \"c-parse.y\"\n+#line 585 \"c-parse.y\"\n {\n \t\t  yyval.ttype = lastiddecl;\n \t\t  if (!yyval.ttype || yyval.ttype == error_mark_node)\n@@ -2281,23 +2290,23 @@ case 87:\n \t\t;\n     break;}\n case 89:\n-#line 673 \"c-parse.y\"\n+#line 684 \"c-parse.y\"\n { yyval.ttype = combine_strings (yyvsp[0].ttype); ;\n     break;}\n case 90:\n-#line 675 \"c-parse.y\"\n+#line 686 \"c-parse.y\"\n { char class = TREE_CODE_CLASS (TREE_CODE (yyvsp[-1].ttype));\n \t\t  if (class == 'e' || class == '1'\n \t\t      || class == '2' || class == '<')\n \t\t    C_SET_EXP_ORIGINAL_CODE (yyvsp[-1].ttype, ERROR_MARK);\n \t\t  yyval.ttype = yyvsp[-1].ttype; ;\n     break;}\n case 91:\n-#line 681 \"c-parse.y\"\n+#line 692 \"c-parse.y\"\n { yyval.ttype = error_mark_node; ;\n     break;}\n case 92:\n-#line 683 \"c-parse.y\"\n+#line 694 \"c-parse.y\"\n { tree rtl_exp;\n \t\t  if (pedantic)\n \t\t    pedwarn (\"ANSI C forbids braced-groups within expressions\");\n@@ -2322,7 +2331,7 @@ case 92:\n \t\t;\n     break;}\n case 93:\n-#line 706 \"c-parse.y\"\n+#line 717 \"c-parse.y\"\n {\n \t\t  /* Make sure we call expand_end_stmt_expr.  Otherwise\n \t\t     we are likely to lose sequences and crash later.  */\n@@ -2333,78 +2342,78 @@ case 93:\n \t\t;\n     break;}\n case 94:\n-#line 715 \"c-parse.y\"\n+#line 726 \"c-parse.y\"\n { yyval.ttype = build_function_call (yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 95:\n-#line 717 \"c-parse.y\"\n+#line 728 \"c-parse.y\"\n { yyval.ttype = build_array_ref (yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 96:\n-#line 719 \"c-parse.y\"\n+#line 730 \"c-parse.y\"\n {\n \t\t    yyval.ttype = build_component_ref (yyvsp[-2].ttype, yyvsp[0].ttype);\n \t\t;\n     break;}\n case 97:\n-#line 723 \"c-parse.y\"\n+#line 734 \"c-parse.y\"\n {\n                   tree expr = build_indirect_ref (yyvsp[-2].ttype, \"->\");\n \n                     yyval.ttype = build_component_ref (expr, yyvsp[0].ttype);\n \t\t;\n     break;}\n case 98:\n-#line 729 \"c-parse.y\"\n+#line 740 \"c-parse.y\"\n { yyval.ttype = build_unary_op (POSTINCREMENT_EXPR, yyvsp[-1].ttype, 0); ;\n     break;}\n case 99:\n-#line 731 \"c-parse.y\"\n+#line 742 \"c-parse.y\"\n { yyval.ttype = build_unary_op (POSTDECREMENT_EXPR, yyvsp[-1].ttype, 0); ;\n     break;}\n case 101:\n-#line 738 \"c-parse.y\"\n+#line 749 \"c-parse.y\"\n { yyval.ttype = chainon (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 104:\n-#line 747 \"c-parse.y\"\n+#line 758 \"c-parse.y\"\n { c_mark_varargs ();\n \t\t  if (pedantic)\n \t\t    pedwarn (\"ANSI C does not permit use of `varargs.h'\"); ;\n     break;}\n case 105:\n-#line 757 \"c-parse.y\"\n+#line 768 \"c-parse.y\"\n { ;\n     break;}\n case 110:\n-#line 773 \"c-parse.y\"\n+#line 784 \"c-parse.y\"\n { current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n \t\t  resume_momentary (yyvsp[-2].itype); ;\n     break;}\n case 111:\n-#line 778 \"c-parse.y\"\n+#line 789 \"c-parse.y\"\n { current_declspecs = TREE_VALUE (declspec_stack);\t\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n \t\t  resume_momentary (yyvsp[-2].itype); ;\n     break;}\n case 112:\n-#line 783 \"c-parse.y\"\n+#line 794 \"c-parse.y\"\n { shadow_tag_warned (yyvsp[-1].ttype, 1);\n \t\t  pedwarn (\"empty declaration\"); ;\n     break;}\n case 113:\n-#line 786 \"c-parse.y\"\n+#line 797 \"c-parse.y\"\n { pedwarn (\"empty declaration\"); ;\n     break;}\n case 114:\n-#line 795 \"c-parse.y\"\n+#line 806 \"c-parse.y\"\n { ;\n     break;}\n case 119:\n-#line 810 \"c-parse.y\"\n+#line 821 \"c-parse.y\"\n { yyval.itype = suspend_momentary ();\n \t\t  pending_xref_error ();\n \t\t  declspec_stack = tree_cons (prefix_attributes,\n@@ -2414,270 +2423,270 @@ case 119:\n \t\t\t\t     &current_declspecs, &prefix_attributes); ;\n     break;}\n case 120:\n-#line 821 \"c-parse.y\"\n+#line 832 \"c-parse.y\"\n { prefix_attributes = chainon (prefix_attributes, yyvsp[0].ttype); ;\n     break;}\n case 121:\n-#line 826 \"c-parse.y\"\n+#line 837 \"c-parse.y\"\n { current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n \t\t  resume_momentary (yyvsp[-2].itype); ;\n     break;}\n case 122:\n-#line 831 \"c-parse.y\"\n+#line 842 \"c-parse.y\"\n { current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n \t\t  resume_momentary (yyvsp[-2].itype); ;\n     break;}\n case 123:\n-#line 836 \"c-parse.y\"\n+#line 847 \"c-parse.y\"\n { current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n \t\t  resume_momentary (yyvsp[-1].itype); ;\n     break;}\n case 124:\n-#line 841 \"c-parse.y\"\n+#line 852 \"c-parse.y\"\n { current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n \t\t  resume_momentary (yyvsp[-1].itype); ;\n     break;}\n case 125:\n-#line 846 \"c-parse.y\"\n+#line 857 \"c-parse.y\"\n { shadow_tag (yyvsp[-1].ttype); ;\n     break;}\n case 126:\n-#line 848 \"c-parse.y\"\n+#line 859 \"c-parse.y\"\n { pedwarn (\"empty declaration\"); ;\n     break;}\n case 127:\n-#line 850 \"c-parse.y\"\n-{ pedantic = yyvsp[-1].itype; ;\n+#line 861 \"c-parse.y\"\n+{ RESTORE_WARN_FLAGS (yyvsp[-1].itype); ;\n     break;}\n case 128:\n-#line 860 \"c-parse.y\"\n+#line 871 \"c-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 129:\n-#line 862 \"c-parse.y\"\n+#line 873 \"c-parse.y\"\n { yyval.ttype = chainon (yyvsp[0].ttype, tree_cons (NULL_TREE, yyvsp[-1].ttype, yyvsp[-2].ttype)); ;\n     break;}\n case 130:\n-#line 866 \"c-parse.y\"\n+#line 877 \"c-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 131:\n-#line 868 \"c-parse.y\"\n+#line 879 \"c-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 132:\n-#line 870 \"c-parse.y\"\n+#line 881 \"c-parse.y\"\n { if (extra_warnings)\n \t\t    warning (\"`%s' is not at beginning of declaration\",\n \t\t\t     IDENTIFIER_POINTER (yyvsp[0].ttype));\n \t\t  yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 133:\n-#line 875 \"c-parse.y\"\n+#line 886 \"c-parse.y\"\n { yyval.ttype = tree_cons (yyvsp[0].ttype, NULL_TREE, yyvsp[-1].ttype); ;\n     break;}\n case 134:\n-#line 880 \"c-parse.y\"\n+#line 891 \"c-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 135:\n-#line 882 \"c-parse.y\"\n+#line 893 \"c-parse.y\"\n { yyval.ttype = chainon (yyvsp[0].ttype, tree_cons (NULL_TREE, yyvsp[-1].ttype, yyvsp[-2].ttype)); ;\n     break;}\n case 136:\n-#line 887 \"c-parse.y\"\n+#line 898 \"c-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 137:\n-#line 889 \"c-parse.y\"\n+#line 900 \"c-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 138:\n-#line 891 \"c-parse.y\"\n+#line 902 \"c-parse.y\"\n { if (extra_warnings)\n \t\t    warning (\"`%s' is not at beginning of declaration\",\n \t\t\t     IDENTIFIER_POINTER (yyvsp[0].ttype));\n \t\t  yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 139:\n-#line 904 \"c-parse.y\"\n+#line 915 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 140:\n-#line 906 \"c-parse.y\"\n+#line 917 \"c-parse.y\"\n { yyval.ttype = tree_cons (yyvsp[0].ttype, NULL_TREE, NULL_TREE); ;\n     break;}\n case 141:\n-#line 908 \"c-parse.y\"\n+#line 919 \"c-parse.y\"\n { yyval.ttype = chainon (yyvsp[0].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 142:\n-#line 910 \"c-parse.y\"\n+#line 921 \"c-parse.y\"\n { yyval.ttype = tree_cons (yyvsp[0].ttype, NULL_TREE, yyvsp[-1].ttype); ;\n     break;}\n case 143:\n-#line 915 \"c-parse.y\"\n+#line 926 \"c-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, NULL_TREE);\n \t\t  TREE_STATIC (yyval.ttype) = 1; ;\n     break;}\n case 144:\n-#line 918 \"c-parse.y\"\n+#line 929 \"c-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 145:\n-#line 920 \"c-parse.y\"\n+#line 931 \"c-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, yyvsp[-1].ttype);\n \t\t  TREE_STATIC (yyval.ttype) = 1; ;\n     break;}\n case 146:\n-#line 923 \"c-parse.y\"\n+#line 934 \"c-parse.y\"\n { if (extra_warnings && TREE_STATIC (yyvsp[-1].ttype))\n \t\t    warning (\"`%s' is not at beginning of declaration\",\n \t\t\t     IDENTIFIER_POINTER (yyvsp[0].ttype));\n \t\t  yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, yyvsp[-1].ttype);\n \t\t  TREE_STATIC (yyval.ttype) = TREE_STATIC (yyvsp[-1].ttype); ;\n     break;}\n case 147:\n-#line 937 \"c-parse.y\"\n+#line 948 \"c-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 148:\n-#line 939 \"c-parse.y\"\n+#line 950 \"c-parse.y\"\n { yyval.ttype = chainon (yyvsp[0].ttype, tree_cons (NULL_TREE, yyvsp[-1].ttype, yyvsp[-2].ttype)); ;\n     break;}\n case 149:\n-#line 943 \"c-parse.y\"\n+#line 954 \"c-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 150:\n-#line 945 \"c-parse.y\"\n+#line 956 \"c-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 153:\n-#line 955 \"c-parse.y\"\n+#line 966 \"c-parse.y\"\n { /* For a typedef name, record the meaning, not the name.\n \t\t     In case of `foo foo, bar;'.  */\n \t\t  yyval.ttype = lookup_name (yyvsp[0].ttype); ;\n     break;}\n case 154:\n-#line 959 \"c-parse.y\"\n+#line 970 \"c-parse.y\"\n { yyval.ttype = TREE_TYPE (yyvsp[-1].ttype); ;\n     break;}\n case 155:\n-#line 961 \"c-parse.y\"\n+#line 972 \"c-parse.y\"\n { yyval.ttype = groktypename (yyvsp[-1].ttype); ;\n     break;}\n case 163:\n-#line 983 \"c-parse.y\"\n+#line 994 \"c-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 164:\n-#line 985 \"c-parse.y\"\n+#line 996 \"c-parse.y\"\n { if (TREE_CHAIN (yyvsp[-1].ttype)) yyvsp[-1].ttype = combine_strings (yyvsp[-1].ttype);\n \t\t  yyval.ttype = yyvsp[-1].ttype;\n \t\t;\n     break;}\n case 165:\n-#line 992 \"c-parse.y\"\n+#line 1003 \"c-parse.y\"\n { yyval.ttype = start_decl (yyvsp[-3].ttype, current_declspecs, 1,\n \t\t\t\t\t  yyvsp[-1].ttype, prefix_attributes);\n \t\t  start_init (yyval.ttype, yyvsp[-2].ttype, global_bindings_p ()); ;\n     break;}\n case 166:\n-#line 997 \"c-parse.y\"\n+#line 1008 \"c-parse.y\"\n { finish_init ();\n \t\t  finish_decl (yyvsp[-1].ttype, yyvsp[0].ttype, yyvsp[-4].ttype); ;\n     break;}\n case 167:\n-#line 1000 \"c-parse.y\"\n+#line 1011 \"c-parse.y\"\n { tree d = start_decl (yyvsp[-2].ttype, current_declspecs, 0,\n \t\t\t\t       yyvsp[0].ttype, prefix_attributes);\n \t\t  finish_decl (d, NULL_TREE, yyvsp[-1].ttype); \n                 ;\n     break;}\n case 168:\n-#line 1008 \"c-parse.y\"\n+#line 1019 \"c-parse.y\"\n { yyval.ttype = start_decl (yyvsp[-3].ttype, current_declspecs, 1,\n \t\t\t\t\t  yyvsp[-1].ttype, prefix_attributes);\n \t\t  start_init (yyval.ttype, yyvsp[-2].ttype, global_bindings_p ()); ;\n     break;}\n case 169:\n-#line 1013 \"c-parse.y\"\n+#line 1024 \"c-parse.y\"\n { finish_init ();\n \t\t  decl_attributes (yyvsp[-1].ttype, yyvsp[-3].ttype, prefix_attributes);\n \t\t  finish_decl (yyvsp[-1].ttype, yyvsp[0].ttype, yyvsp[-4].ttype); ;\n     break;}\n case 170:\n-#line 1017 \"c-parse.y\"\n+#line 1028 \"c-parse.y\"\n { tree d = start_decl (yyvsp[-2].ttype, current_declspecs, 0,\n \t\t\t\t       yyvsp[0].ttype, prefix_attributes);\n \t\t  finish_decl (d, NULL_TREE, yyvsp[-1].ttype); ;\n     break;}\n case 171:\n-#line 1025 \"c-parse.y\"\n+#line 1036 \"c-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 172:\n-#line 1027 \"c-parse.y\"\n+#line 1038 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 173:\n-#line 1032 \"c-parse.y\"\n+#line 1043 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 174:\n-#line 1034 \"c-parse.y\"\n+#line 1045 \"c-parse.y\"\n { yyval.ttype = chainon (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 175:\n-#line 1039 \"c-parse.y\"\n+#line 1050 \"c-parse.y\"\n { yyval.ttype = yyvsp[-2].ttype; ;\n     break;}\n case 176:\n-#line 1044 \"c-parse.y\"\n+#line 1055 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 177:\n-#line 1046 \"c-parse.y\"\n+#line 1057 \"c-parse.y\"\n { yyval.ttype = chainon (yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 178:\n-#line 1051 \"c-parse.y\"\n+#line 1062 \"c-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 179:\n-#line 1053 \"c-parse.y\"\n+#line 1064 \"c-parse.y\"\n { yyval.ttype = build_tree_list (yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 180:\n-#line 1055 \"c-parse.y\"\n+#line 1066 \"c-parse.y\"\n { yyval.ttype = build_tree_list (yyvsp[-3].ttype, build_tree_list (NULL_TREE, yyvsp[-1].ttype)); ;\n     break;}\n case 181:\n-#line 1057 \"c-parse.y\"\n+#line 1068 \"c-parse.y\"\n { yyval.ttype = build_tree_list (yyvsp[-5].ttype, tree_cons (NULL_TREE, yyvsp[-3].ttype, yyvsp[-1].ttype)); ;\n     break;}\n case 182:\n-#line 1059 \"c-parse.y\"\n+#line 1070 \"c-parse.y\"\n { yyval.ttype = build_tree_list (yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 188:\n-#line 1077 \"c-parse.y\"\n+#line 1088 \"c-parse.y\"\n { really_start_incremental_init (NULL_TREE);\n \t\t  /* Note that the call to clear_momentary\n \t\t     is in process_init_element.  */\n \t\t  push_momentary (); ;\n     break;}\n case 189:\n-#line 1082 \"c-parse.y\"\n+#line 1093 \"c-parse.y\"\n { yyval.ttype = pop_init_level (0);\n \t\t  if (yyval.ttype == error_mark_node\n \t\t      && ! (yychar == STRING || yychar == CONSTANT))\n@@ -2686,44 +2695,44 @@ case 189:\n \t\t    pop_momentary_nofree (); ;\n     break;}\n case 190:\n-#line 1090 \"c-parse.y\"\n+#line 1101 \"c-parse.y\"\n { yyval.ttype = error_mark_node; ;\n     break;}\n case 191:\n-#line 1096 \"c-parse.y\"\n+#line 1107 \"c-parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"ANSI C forbids empty initializer braces\"); ;\n     break;}\n case 197:\n-#line 1112 \"c-parse.y\"\n+#line 1123 \"c-parse.y\"\n { set_init_label (yyvsp[-1].ttype); ;\n     break;}\n case 200:\n-#line 1119 \"c-parse.y\"\n+#line 1130 \"c-parse.y\"\n { push_init_level (0); ;\n     break;}\n case 201:\n-#line 1121 \"c-parse.y\"\n+#line 1132 \"c-parse.y\"\n { process_init_element (pop_init_level (0)); ;\n     break;}\n case 202:\n-#line 1123 \"c-parse.y\"\n+#line 1134 \"c-parse.y\"\n { process_init_element (yyvsp[0].ttype); ;\n     break;}\n case 206:\n-#line 1134 \"c-parse.y\"\n+#line 1145 \"c-parse.y\"\n { set_init_label (yyvsp[0].ttype); ;\n     break;}\n case 207:\n-#line 1139 \"c-parse.y\"\n+#line 1150 \"c-parse.y\"\n { set_init_index (yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 208:\n-#line 1141 \"c-parse.y\"\n+#line 1152 \"c-parse.y\"\n { set_init_index (yyvsp[-1].ttype, NULL_TREE); ;\n     break;}\n case 209:\n-#line 1146 \"c-parse.y\"\n+#line 1157 \"c-parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"ANSI C forbids nested functions\");\n \n@@ -2737,16 +2746,16 @@ case 209:\n \t\t  reinit_parse_for_function (); ;\n     break;}\n case 210:\n-#line 1158 \"c-parse.y\"\n+#line 1169 \"c-parse.y\"\n { store_parm_decls (); ;\n     break;}\n case 211:\n-#line 1166 \"c-parse.y\"\n+#line 1177 \"c-parse.y\"\n { finish_function (1);\n \t\t  pop_function_context (); ;\n     break;}\n case 212:\n-#line 1172 \"c-parse.y\"\n+#line 1183 \"c-parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"ANSI C forbids nested functions\");\n \n@@ -2760,371 +2769,371 @@ case 212:\n \t\t  reinit_parse_for_function (); ;\n     break;}\n case 213:\n-#line 1184 \"c-parse.y\"\n+#line 1195 \"c-parse.y\"\n { store_parm_decls (); ;\n     break;}\n case 214:\n-#line 1192 \"c-parse.y\"\n+#line 1203 \"c-parse.y\"\n { finish_function (1);\n \t\t  pop_function_context (); ;\n     break;}\n case 217:\n-#line 1208 \"c-parse.y\"\n+#line 1219 \"c-parse.y\"\n { yyval.ttype = yyvsp[-1].ttype; ;\n     break;}\n case 218:\n-#line 1210 \"c-parse.y\"\n+#line 1221 \"c-parse.y\"\n { yyval.ttype = build_nt (CALL_EXPR, yyvsp[-2].ttype, yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 219:\n-#line 1215 \"c-parse.y\"\n+#line 1226 \"c-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 220:\n-#line 1217 \"c-parse.y\"\n+#line 1228 \"c-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, yyvsp[-2].ttype, NULL_TREE); ;\n     break;}\n case 221:\n-#line 1219 \"c-parse.y\"\n+#line 1230 \"c-parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 222:\n-#line 1226 \"c-parse.y\"\n+#line 1237 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 224:\n-#line 1237 \"c-parse.y\"\n+#line 1248 \"c-parse.y\"\n { yyval.ttype = build_nt (CALL_EXPR, yyvsp[-2].ttype, yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 225:\n-#line 1242 \"c-parse.y\"\n+#line 1253 \"c-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, yyvsp[-3].ttype, NULL_TREE);\n \t\t  if (! flag_isoc9x)\n \t\t    error (\"`[*]' in parameter declaration only allowed in ISO C 9x\");\n \t\t;\n     break;}\n case 226:\n-#line 1247 \"c-parse.y\"\n+#line 1258 \"c-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 227:\n-#line 1249 \"c-parse.y\"\n+#line 1260 \"c-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, yyvsp[-2].ttype, NULL_TREE); ;\n     break;}\n case 228:\n-#line 1251 \"c-parse.y\"\n+#line 1262 \"c-parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 229:\n-#line 1258 \"c-parse.y\"\n+#line 1269 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 231:\n-#line 1267 \"c-parse.y\"\n+#line 1278 \"c-parse.y\"\n { yyval.ttype = build_nt (CALL_EXPR, yyvsp[-2].ttype, yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 232:\n-#line 1272 \"c-parse.y\"\n+#line 1283 \"c-parse.y\"\n { yyval.ttype = yyvsp[-1].ttype; ;\n     break;}\n case 233:\n-#line 1274 \"c-parse.y\"\n+#line 1285 \"c-parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 234:\n-#line 1276 \"c-parse.y\"\n+#line 1287 \"c-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, yyvsp[-3].ttype, NULL_TREE);\n \t\t  if (! flag_isoc9x)\n \t\t    error (\"`[*]' in parameter declaration only allowed in ISO C 9x\");\n \t\t;\n     break;}\n case 235:\n-#line 1281 \"c-parse.y\"\n+#line 1292 \"c-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 236:\n-#line 1283 \"c-parse.y\"\n+#line 1294 \"c-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, yyvsp[-2].ttype, NULL_TREE); ;\n     break;}\n case 237:\n-#line 1290 \"c-parse.y\"\n+#line 1301 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 239:\n-#line 1296 \"c-parse.y\"\n+#line 1307 \"c-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 240:\n-#line 1298 \"c-parse.y\"\n+#line 1309 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 241:\n-#line 1303 \"c-parse.y\"\n+#line 1314 \"c-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 242:\n-#line 1305 \"c-parse.y\"\n+#line 1316 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 243:\n-#line 1310 \"c-parse.y\"\n+#line 1321 \"c-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 244:\n-#line 1312 \"c-parse.y\"\n+#line 1323 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 245:\n-#line 1317 \"c-parse.y\"\n+#line 1328 \"c-parse.y\"\n { yyval.ttype = start_struct (RECORD_TYPE, yyvsp[-1].ttype);\n \t\t  /* Start scope of tag before parsing components.  */\n \t\t;\n     break;}\n case 246:\n-#line 1321 \"c-parse.y\"\n+#line 1332 \"c-parse.y\"\n { yyval.ttype = finish_struct (yyvsp[-3].ttype, yyvsp[-2].ttype, chainon (yyvsp[-6].ttype, yyvsp[0].ttype)); ;\n     break;}\n case 247:\n-#line 1323 \"c-parse.y\"\n+#line 1334 \"c-parse.y\"\n { yyval.ttype = finish_struct (start_struct (RECORD_TYPE, NULL_TREE),\n \t\t\t\t      yyvsp[-2].ttype, chainon (yyvsp[-4].ttype, yyvsp[0].ttype));\n \t\t;\n     break;}\n case 248:\n-#line 1327 \"c-parse.y\"\n+#line 1338 \"c-parse.y\"\n { yyval.ttype = xref_tag (RECORD_TYPE, yyvsp[0].ttype); ;\n     break;}\n case 249:\n-#line 1329 \"c-parse.y\"\n+#line 1340 \"c-parse.y\"\n { yyval.ttype = start_struct (UNION_TYPE, yyvsp[-1].ttype); ;\n     break;}\n case 250:\n-#line 1331 \"c-parse.y\"\n+#line 1342 \"c-parse.y\"\n { yyval.ttype = finish_struct (yyvsp[-3].ttype, yyvsp[-2].ttype, chainon (yyvsp[-6].ttype, yyvsp[0].ttype)); ;\n     break;}\n case 251:\n-#line 1333 \"c-parse.y\"\n+#line 1344 \"c-parse.y\"\n { yyval.ttype = finish_struct (start_struct (UNION_TYPE, NULL_TREE),\n \t\t\t\t      yyvsp[-2].ttype, chainon (yyvsp[-4].ttype, yyvsp[0].ttype));\n \t\t;\n     break;}\n case 252:\n-#line 1337 \"c-parse.y\"\n+#line 1348 \"c-parse.y\"\n { yyval.ttype = xref_tag (UNION_TYPE, yyvsp[0].ttype); ;\n     break;}\n case 253:\n-#line 1339 \"c-parse.y\"\n+#line 1350 \"c-parse.y\"\n { yyvsp[0].itype = suspend_momentary ();\n \t\t  yyval.ttype = start_enum (yyvsp[-1].ttype); ;\n     break;}\n case 254:\n-#line 1342 \"c-parse.y\"\n+#line 1353 \"c-parse.y\"\n { yyval.ttype= finish_enum (yyvsp[-4].ttype, nreverse (yyvsp[-3].ttype), chainon (yyvsp[-7].ttype, yyvsp[0].ttype));\n \t\t  resume_momentary (yyvsp[-5].itype); ;\n     break;}\n case 255:\n-#line 1345 \"c-parse.y\"\n+#line 1356 \"c-parse.y\"\n { yyvsp[0].itype = suspend_momentary ();\n \t\t  yyval.ttype = start_enum (NULL_TREE); ;\n     break;}\n case 256:\n-#line 1348 \"c-parse.y\"\n+#line 1359 \"c-parse.y\"\n { yyval.ttype= finish_enum (yyvsp[-4].ttype, nreverse (yyvsp[-3].ttype), chainon (yyvsp[-6].ttype, yyvsp[0].ttype));\n \t\t  resume_momentary (yyvsp[-5].itype); ;\n     break;}\n case 257:\n-#line 1351 \"c-parse.y\"\n+#line 1362 \"c-parse.y\"\n { yyval.ttype = xref_tag (ENUMERAL_TYPE, yyvsp[0].ttype); ;\n     break;}\n case 261:\n-#line 1362 \"c-parse.y\"\n+#line 1373 \"c-parse.y\"\n { if (pedantic && ! flag_isoc9x)\n \t\t    pedwarn (\"comma at end of enumerator list\"); ;\n     break;}\n case 262:\n-#line 1368 \"c-parse.y\"\n+#line 1379 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 263:\n-#line 1370 \"c-parse.y\"\n+#line 1381 \"c-parse.y\"\n { yyval.ttype = chainon (yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t  pedwarn (\"no semicolon at end of struct or union\"); ;\n     break;}\n case 264:\n-#line 1375 \"c-parse.y\"\n+#line 1386 \"c-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 265:\n-#line 1377 \"c-parse.y\"\n+#line 1388 \"c-parse.y\"\n { yyval.ttype = chainon (yyvsp[-2].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 266:\n-#line 1379 \"c-parse.y\"\n+#line 1390 \"c-parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"extra semicolon in struct or union specified\"); ;\n     break;}\n case 267:\n-#line 1394 \"c-parse.y\"\n+#line 1405 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype;\n \t\t  current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n \t\t  resume_momentary (yyvsp[-1].itype); ;\n     break;}\n case 268:\n-#line 1400 \"c-parse.y\"\n+#line 1411 \"c-parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"ANSI C forbids member declarations with no members\");\n \t\t  shadow_tag(yyvsp[0].ttype);\n \t\t  yyval.ttype = NULL_TREE; ;\n     break;}\n case 269:\n-#line 1405 \"c-parse.y\"\n+#line 1416 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype;\n \t\t  current_declspecs = TREE_VALUE (declspec_stack);\n \t\t  prefix_attributes = TREE_PURPOSE (declspec_stack);\n \t\t  declspec_stack = TREE_CHAIN (declspec_stack);\n \t\t  resume_momentary (yyvsp[-1].itype); ;\n     break;}\n case 270:\n-#line 1411 \"c-parse.y\"\n+#line 1422 \"c-parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"ANSI C forbids member declarations with no members\");\n \t\t  shadow_tag(yyvsp[0].ttype);\n \t\t  yyval.ttype = NULL_TREE; ;\n     break;}\n case 271:\n-#line 1416 \"c-parse.y\"\n+#line 1427 \"c-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 272:\n-#line 1418 \"c-parse.y\"\n+#line 1429 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype;\n-\t\t  pedantic = yyvsp[-1].itype; ;\n+\t\t  RESTORE_WARN_FLAGS (yyvsp[-1].itype); ;\n     break;}\n case 274:\n-#line 1425 \"c-parse.y\"\n+#line 1436 \"c-parse.y\"\n { yyval.ttype = chainon (yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 275:\n-#line 1430 \"c-parse.y\"\n+#line 1441 \"c-parse.y\"\n { yyval.ttype = grokfield (yyvsp[-3].filename, yyvsp[-2].lineno, yyvsp[-1].ttype, current_declspecs, NULL_TREE);\n \t\t  decl_attributes (yyval.ttype, yyvsp[0].ttype, prefix_attributes); ;\n     break;}\n case 276:\n-#line 1434 \"c-parse.y\"\n+#line 1445 \"c-parse.y\"\n { yyval.ttype = grokfield (yyvsp[-5].filename, yyvsp[-4].lineno, yyvsp[-3].ttype, current_declspecs, yyvsp[-1].ttype);\n \t\t  decl_attributes (yyval.ttype, yyvsp[0].ttype, prefix_attributes); ;\n     break;}\n case 277:\n-#line 1437 \"c-parse.y\"\n+#line 1448 \"c-parse.y\"\n { yyval.ttype = grokfield (yyvsp[-4].filename, yyvsp[-3].lineno, NULL_TREE, current_declspecs, yyvsp[-1].ttype);\n \t\t  decl_attributes (yyval.ttype, yyvsp[0].ttype, prefix_attributes); ;\n     break;}\n case 279:\n-#line 1449 \"c-parse.y\"\n+#line 1460 \"c-parse.y\"\n { if (yyvsp[-2].ttype == error_mark_node)\n \t\t    yyval.ttype = yyvsp[-2].ttype;\n \t\t  else\n \t\t    yyval.ttype = chainon (yyvsp[0].ttype, yyvsp[-2].ttype); ;\n     break;}\n case 280:\n-#line 1454 \"c-parse.y\"\n+#line 1465 \"c-parse.y\"\n { yyval.ttype = error_mark_node; ;\n     break;}\n case 281:\n-#line 1460 \"c-parse.y\"\n+#line 1471 \"c-parse.y\"\n { yyval.ttype = build_enumerator (yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 282:\n-#line 1462 \"c-parse.y\"\n+#line 1473 \"c-parse.y\"\n { yyval.ttype = build_enumerator (yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 283:\n-#line 1467 \"c-parse.y\"\n+#line 1478 \"c-parse.y\"\n { yyval.ttype = build_tree_list (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 284:\n-#line 1469 \"c-parse.y\"\n+#line 1480 \"c-parse.y\"\n { yyval.ttype = build_tree_list (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 285:\n-#line 1474 \"c-parse.y\"\n+#line 1485 \"c-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 287:\n-#line 1480 \"c-parse.y\"\n+#line 1491 \"c-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 288:\n-#line 1482 \"c-parse.y\"\n+#line 1493 \"c-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 289:\n-#line 1487 \"c-parse.y\"\n+#line 1498 \"c-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 290:\n-#line 1489 \"c-parse.y\"\n+#line 1500 \"c-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 291:\n-#line 1494 \"c-parse.y\"\n+#line 1505 \"c-parse.y\"\n { yyval.ttype = yyvsp[-1].ttype; ;\n     break;}\n case 292:\n-#line 1497 \"c-parse.y\"\n+#line 1508 \"c-parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 293:\n-#line 1499 \"c-parse.y\"\n+#line 1510 \"c-parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 294:\n-#line 1501 \"c-parse.y\"\n+#line 1512 \"c-parse.y\"\n { yyval.ttype = build_nt (CALL_EXPR, yyvsp[-2].ttype, yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 295:\n-#line 1503 \"c-parse.y\"\n+#line 1514 \"c-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 296:\n-#line 1505 \"c-parse.y\"\n+#line 1516 \"c-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, yyvsp[-2].ttype, NULL_TREE); ;\n     break;}\n case 297:\n-#line 1507 \"c-parse.y\"\n+#line 1518 \"c-parse.y\"\n { yyval.ttype = build_nt (CALL_EXPR, NULL_TREE, yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 298:\n-#line 1509 \"c-parse.y\"\n+#line 1520 \"c-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, NULL_TREE, yyvsp[-1].ttype); ;\n     break;}\n case 299:\n-#line 1511 \"c-parse.y\"\n+#line 1522 \"c-parse.y\"\n { yyval.ttype = build_nt (ARRAY_REF, NULL_TREE, NULL_TREE); ;\n     break;}\n case 300:\n-#line 1515 \"c-parse.y\"\n+#line 1526 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 301:\n-#line 1524 \"c-parse.y\"\n+#line 1535 \"c-parse.y\"\n {\n \t\t  if (pedantic && yyvsp[0].ends_in_label)\n \t\t    pedwarn (\"ANSI C forbids label at end of compound statement\");\n \t\t;\n     break;}\n case 303:\n-#line 1533 \"c-parse.y\"\n+#line 1544 \"c-parse.y\"\n { yyval.ends_in_label = yyvsp[0].ends_in_label; ;\n     break;}\n case 304:\n-#line 1535 \"c-parse.y\"\n+#line 1546 \"c-parse.y\"\n { yyval.ends_in_label = 0; ;\n     break;}\n case 308:\n-#line 1547 \"c-parse.y\"\n+#line 1558 \"c-parse.y\"\n { emit_line_note (input_filename, lineno);\n \t\t  pushlevel (0);\n \t\t  clear_last_expr ();\n@@ -3133,12 +3142,12 @@ case 308:\n \t\t;\n     break;}\n case 310:\n-#line 1560 \"c-parse.y\"\n+#line 1571 \"c-parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"ANSI C forbids label declarations\"); ;\n     break;}\n case 313:\n-#line 1571 \"c-parse.y\"\n+#line 1582 \"c-parse.y\"\n { tree link;\n \t\t  for (link = yyvsp[-1].ttype; link; link = TREE_CHAIN (link))\n \t\t    {\n@@ -3149,19 +3158,19 @@ case 313:\n \t\t;\n     break;}\n case 314:\n-#line 1585 \"c-parse.y\"\n+#line 1596 \"c-parse.y\"\n {;\n     break;}\n case 316:\n-#line 1589 \"c-parse.y\"\n+#line 1600 \"c-parse.y\"\n { compstmt_count++; ;\n     break;}\n case 317:\n-#line 1592 \"c-parse.y\"\n+#line 1603 \"c-parse.y\"\n { yyval.ttype = convert (void_type_node, integer_zero_node); ;\n     break;}\n case 318:\n-#line 1594 \"c-parse.y\"\n+#line 1605 \"c-parse.y\"\n { emit_line_note (input_filename, lineno);\n \t\t  expand_end_bindings (getdecls (), 1, 0);\n \t\t  yyval.ttype = poplevel (1, 1, 0);\n@@ -3171,7 +3180,7 @@ case 318:\n \t\t    pop_momentary (); ;\n     break;}\n case 319:\n-#line 1602 \"c-parse.y\"\n+#line 1613 \"c-parse.y\"\n { emit_line_note (input_filename, lineno);\n \t\t  expand_end_bindings (getdecls (), kept_level_p (), 0);\n \t\t  yyval.ttype = poplevel (kept_level_p (), 0, 0);\n@@ -3181,7 +3190,7 @@ case 319:\n \t\t    pop_momentary (); ;\n     break;}\n case 320:\n-#line 1610 \"c-parse.y\"\n+#line 1621 \"c-parse.y\"\n { emit_line_note (input_filename, lineno);\n \t\t  expand_end_bindings (getdecls (), kept_level_p (), 0);\n \t\t  yyval.ttype = poplevel (kept_level_p (), 0, 0);\n@@ -3191,7 +3200,7 @@ case 320:\n \t\t    pop_momentary (); ;\n     break;}\n case 321:\n-#line 1621 \"c-parse.y\"\n+#line 1632 \"c-parse.y\"\n { if (current_function_decl == 0)\n \t\t    {\n \t\t      error (\"braced-group within expression allowed only inside a function\");\n@@ -3209,11 +3218,11 @@ case 321:\n \t\t;\n     break;}\n case 322:\n-#line 1638 \"c-parse.y\"\n+#line 1649 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 325:\n-#line 1652 \"c-parse.y\"\n+#line 1663 \"c-parse.y\"\n { emit_line_note (yyvsp[-5].filename, yyvsp[-4].lineno);\n \t\t  c_expand_start_cond (truthvalue_conversion (yyvsp[-1].ttype), 0, \n \t\t\t\t       compstmt_count);\n@@ -3223,7 +3232,7 @@ case 325:\n \t\t  position_after_white_space (); ;\n     break;}\n case 326:\n-#line 1666 \"c-parse.y\"\n+#line 1677 \"c-parse.y\"\n { stmt_count++;\n \t\t  compstmt_count++;\n \t\t  emit_line_note (yyvsp[-2].filename, yyvsp[-1].lineno);\n@@ -3233,43 +3242,43 @@ case 326:\n \t\t  position_after_white_space (); ;\n     break;}\n case 327:\n-#line 1674 \"c-parse.y\"\n+#line 1685 \"c-parse.y\"\n { expand_loop_continue_here (); ;\n     break;}\n case 328:\n-#line 1678 \"c-parse.y\"\n+#line 1689 \"c-parse.y\"\n { yyval.filename = input_filename; ;\n     break;}\n case 329:\n-#line 1682 \"c-parse.y\"\n+#line 1693 \"c-parse.y\"\n { yyval.lineno = lineno; ;\n     break;}\n case 330:\n-#line 1687 \"c-parse.y\"\n+#line 1698 \"c-parse.y\"\n { ;\n     break;}\n case 331:\n-#line 1692 \"c-parse.y\"\n+#line 1703 \"c-parse.y\"\n { ;\n     break;}\n case 332:\n-#line 1697 \"c-parse.y\"\n+#line 1708 \"c-parse.y\"\n { yyval.ends_in_label = yyvsp[0].ends_in_label; ;\n     break;}\n case 333:\n-#line 1702 \"c-parse.y\"\n+#line 1713 \"c-parse.y\"\n { yyval.ends_in_label = 0; ;\n     break;}\n case 334:\n-#line 1704 \"c-parse.y\"\n+#line 1715 \"c-parse.y\"\n { yyval.ends_in_label = 1; ;\n     break;}\n case 335:\n-#line 1710 \"c-parse.y\"\n+#line 1721 \"c-parse.y\"\n { stmt_count++; ;\n     break;}\n case 337:\n-#line 1713 \"c-parse.y\"\n+#line 1724 \"c-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-3].filename, yyvsp[-2].lineno);\n /* It appears that this should not be done--that a non-lvalue array\n@@ -3288,19 +3297,19 @@ case 337:\n \t\t  clear_momentary (); ;\n     break;}\n case 338:\n-#line 1730 \"c-parse.y\"\n+#line 1741 \"c-parse.y\"\n { c_expand_start_else ();\n \t\t  yyvsp[-1].itype = stmt_count;\n \t\t  position_after_white_space (); ;\n     break;}\n case 339:\n-#line 1734 \"c-parse.y\"\n+#line 1745 \"c-parse.y\"\n { c_expand_end_cond ();\n \t\t  if (extra_warnings && stmt_count == yyvsp[-3].itype)\n \t\t    warning (\"empty body in an else-statement\"); ;\n     break;}\n case 340:\n-#line 1738 \"c-parse.y\"\n+#line 1749 \"c-parse.y\"\n { c_expand_end_cond ();\n \t\t  /* This warning is here instead of in simple_if, because we\n \t\t     do not want a warning if an empty if is followed by an\n@@ -3311,11 +3320,11 @@ case 340:\n \t\t\t\t\t\t\"empty body in an if-statement\"); ;\n     break;}\n case 341:\n-#line 1750 \"c-parse.y\"\n+#line 1761 \"c-parse.y\"\n { c_expand_end_cond (); ;\n     break;}\n case 342:\n-#line 1752 \"c-parse.y\"\n+#line 1763 \"c-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-2].filename, yyvsp[-1].lineno);\n \t\t  /* The emit_nop used to come before emit_line_note,\n@@ -3327,7 +3336,7 @@ case 342:\n \t\t  emit_nop (); ;\n     break;}\n case 343:\n-#line 1762 \"c-parse.y\"\n+#line 1773 \"c-parse.y\"\n { /* Don't start the loop till we have succeeded\n \t\t     in parsing the end test.  This is to make sure\n \t\t     that we end every loop we start.  */\n@@ -3338,24 +3347,24 @@ case 343:\n \t\t  position_after_white_space (); ;\n     break;}\n case 344:\n-#line 1771 \"c-parse.y\"\n+#line 1782 \"c-parse.y\"\n { expand_end_loop (); ;\n     break;}\n case 345:\n-#line 1774 \"c-parse.y\"\n+#line 1785 \"c-parse.y\"\n { emit_line_note (input_filename, lineno);\n \t\t  expand_exit_loop_if_false (NULL_PTR,\n \t\t\t\t\t     truthvalue_conversion (yyvsp[-2].ttype));\n \t\t  expand_end_loop ();\n \t\t  clear_momentary (); ;\n     break;}\n case 346:\n-#line 1781 \"c-parse.y\"\n+#line 1792 \"c-parse.y\"\n { expand_end_loop ();\n \t\t  clear_momentary (); ;\n     break;}\n case 347:\n-#line 1785 \"c-parse.y\"\n+#line 1796 \"c-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-5].filename, yyvsp[-4].lineno);\n \t\t  /* See comment in `while' alternative, above.  */\n@@ -3368,12 +3377,12 @@ case 347:\n \t\t;\n     break;}\n case 348:\n-#line 1797 \"c-parse.y\"\n+#line 1808 \"c-parse.y\"\n { yyvsp[0].lineno = lineno;\n \t\t  yyval.filename = input_filename; ;\n     break;}\n case 349:\n-#line 1800 \"c-parse.y\"\n+#line 1811 \"c-parse.y\"\n { \n \t\t  /* Start the loop.  Doing this after parsing\n \t\t     all the expressions ensures we will end the loop.  */\n@@ -3391,7 +3400,7 @@ case 349:\n \t\t  position_after_white_space (); ;\n     break;}\n case 350:\n-#line 1816 \"c-parse.y\"\n+#line 1827 \"c-parse.y\"\n { /* Emit the increment expression, with a line number.  */\n \t\t  emit_line_note (yyvsp[-4].filename, yyvsp[-5].lineno);\n \t\t  expand_loop_continue_here ();\n@@ -3404,7 +3413,7 @@ case 350:\n \t\t  expand_end_loop (); ;\n     break;}\n case 351:\n-#line 1827 \"c-parse.y\"\n+#line 1838 \"c-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-5].filename, yyvsp[-4].lineno);\n \t\t  c_expand_start_case (yyvsp[-1].ttype);\n@@ -3414,41 +3423,41 @@ case 351:\n \t\t  position_after_white_space (); ;\n     break;}\n case 352:\n-#line 1835 \"c-parse.y\"\n+#line 1846 \"c-parse.y\"\n { expand_end_case (yyvsp[-3].ttype);\n \t\t  if (yychar == CONSTANT || yychar == STRING)\n \t\t    pop_momentary_nofree ();\n \t\t  else\n \t\t    pop_momentary (); ;\n     break;}\n case 353:\n-#line 1841 \"c-parse.y\"\n+#line 1852 \"c-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-3].filename, yyvsp[-2].lineno);\n \t\t  if ( ! expand_exit_something ())\n \t\t    error (\"break statement not within loop or switch\"); ;\n     break;}\n case 354:\n-#line 1846 \"c-parse.y\"\n+#line 1857 \"c-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-3].filename, yyvsp[-2].lineno);\n \t\t  if (! expand_continue_loop (NULL_PTR))\n \t\t    error (\"continue statement not within a loop\"); ;\n     break;}\n case 355:\n-#line 1851 \"c-parse.y\"\n+#line 1862 \"c-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-3].filename, yyvsp[-2].lineno);\n \t\t  c_expand_return (NULL_TREE); ;\n     break;}\n case 356:\n-#line 1855 \"c-parse.y\"\n+#line 1866 \"c-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-4].filename, yyvsp[-3].lineno);\n \t\t  c_expand_return (yyvsp[-1].ttype); ;\n     break;}\n case 357:\n-#line 1859 \"c-parse.y\"\n+#line 1870 \"c-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-7].filename, yyvsp[-6].lineno);\n \t\t  STRIP_NOPS (yyvsp[-2].ttype);\n@@ -3460,31 +3469,31 @@ case 357:\n \t\t    error (\"argument of `asm' is not a constant string\"); ;\n     break;}\n case 358:\n-#line 1870 \"c-parse.y\"\n+#line 1881 \"c-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-9].filename, yyvsp[-8].lineno);\n \t\t  c_expand_asm_operands (yyvsp[-4].ttype, yyvsp[-2].ttype, NULL_TREE, NULL_TREE,\n \t\t\t\t\t yyvsp[-6].ttype == ridpointers[(int)RID_VOLATILE],\n \t\t\t\t\t input_filename, lineno); ;\n     break;}\n case 359:\n-#line 1877 \"c-parse.y\"\n+#line 1888 \"c-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-11].filename, yyvsp[-10].lineno);\n \t\t  c_expand_asm_operands (yyvsp[-6].ttype, yyvsp[-4].ttype, yyvsp[-2].ttype, NULL_TREE,\n \t\t\t\t\t yyvsp[-8].ttype == ridpointers[(int)RID_VOLATILE],\n \t\t\t\t\t input_filename, lineno); ;\n     break;}\n case 360:\n-#line 1885 \"c-parse.y\"\n+#line 1896 \"c-parse.y\"\n { stmt_count++;\n \t\t  emit_line_note (yyvsp[-13].filename, yyvsp[-12].lineno);\n \t\t  c_expand_asm_operands (yyvsp[-8].ttype, yyvsp[-6].ttype, yyvsp[-4].ttype, yyvsp[-2].ttype,\n \t\t\t\t\t yyvsp[-10].ttype == ridpointers[(int)RID_VOLATILE],\n \t\t\t\t\t input_filename, lineno); ;\n     break;}\n case 361:\n-#line 1891 \"c-parse.y\"\n+#line 1902 \"c-parse.y\"\n { tree decl;\n \t\t  stmt_count++;\n \t\t  emit_line_note (yyvsp[-4].filename, yyvsp[-3].lineno);\n@@ -3497,15 +3506,15 @@ case 361:\n \t\t;\n     break;}\n case 362:\n-#line 1902 \"c-parse.y\"\n+#line 1913 \"c-parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"ANSI C forbids `goto *expr;'\");\n \t\t  stmt_count++;\n \t\t  emit_line_note (yyvsp[-5].filename, yyvsp[-4].lineno);\n \t\t  expand_computed_goto (convert (ptr_type_node, yyvsp[-1].ttype)); ;\n     break;}\n case 365:\n-#line 1917 \"c-parse.y\"\n+#line 1928 \"c-parse.y\"\n {\n \t    /* The value returned by this action is  */\n \t    /*      1 if everything is OK */ \n@@ -3528,14 +3537,14 @@ case 365:\n \t  ;\n     break;}\n case 366:\n-#line 1938 \"c-parse.y\"\n+#line 1949 \"c-parse.y\"\n {\n \t    if (yyvsp[-1].itype)\n \t      iterator_for_loop_end (yyvsp[-3].ttype);\n \t  ;\n     break;}\n case 367:\n-#line 1973 \"c-parse.y\"\n+#line 1984 \"c-parse.y\"\n { register tree value = check_case_value (yyvsp[-1].ttype);\n \t\t  register tree label\n \t\t    = build_decl (LABEL_DECL, NULL_TREE, NULL_TREE);\n@@ -3568,7 +3577,7 @@ case 367:\n \t\t  position_after_white_space (); ;\n     break;}\n case 368:\n-#line 2004 \"c-parse.y\"\n+#line 2015 \"c-parse.y\"\n { register tree value1 = check_case_value (yyvsp[-3].ttype);\n \t\t  register tree value2 = check_case_value (yyvsp[-1].ttype);\n \t\t  register tree label\n@@ -3601,7 +3610,7 @@ case 368:\n \t\t  position_after_white_space (); ;\n     break;}\n case 369:\n-#line 2035 \"c-parse.y\"\n+#line 2046 \"c-parse.y\"\n {\n \t\t  tree duplicate;\n \t\t  register tree label\n@@ -3618,7 +3627,7 @@ case 369:\n \t\t  position_after_white_space (); ;\n     break;}\n case 370:\n-#line 2050 \"c-parse.y\"\n+#line 2061 \"c-parse.y\"\n { tree label = define_label (input_filename, lineno, yyvsp[-2].ttype);\n \t\t  stmt_count++;\n \t\t  emit_nop ();\n@@ -3630,52 +3639,52 @@ case 370:\n \t\t  position_after_white_space (); ;\n     break;}\n case 371:\n-#line 2065 \"c-parse.y\"\n+#line 2076 \"c-parse.y\"\n { emit_line_note (input_filename, lineno);\n \t\t  yyval.ttype = NULL_TREE; ;\n     break;}\n case 372:\n-#line 2068 \"c-parse.y\"\n+#line 2079 \"c-parse.y\"\n { emit_line_note (input_filename, lineno); ;\n     break;}\n case 373:\n-#line 2073 \"c-parse.y\"\n+#line 2084 \"c-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 375:\n-#line 2080 \"c-parse.y\"\n+#line 2091 \"c-parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 378:\n-#line 2087 \"c-parse.y\"\n+#line 2098 \"c-parse.y\"\n { yyval.ttype = chainon (yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 379:\n-#line 2092 \"c-parse.y\"\n+#line 2103 \"c-parse.y\"\n { yyval.ttype = build_tree_list (yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 380:\n-#line 2097 \"c-parse.y\"\n+#line 2108 \"c-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, combine_strings (yyvsp[0].ttype), NULL_TREE); ;\n     break;}\n case 381:\n-#line 2099 \"c-parse.y\"\n+#line 2110 \"c-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, combine_strings (yyvsp[0].ttype), yyvsp[-2].ttype); ;\n     break;}\n case 382:\n-#line 2105 \"c-parse.y\"\n+#line 2116 \"c-parse.y\"\n { pushlevel (0);\n \t\t  clear_parm_order ();\n \t\t  declare_parm_level (0); ;\n     break;}\n case 383:\n-#line 2109 \"c-parse.y\"\n+#line 2120 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype;\n \t\t  parmlist_tags_warning ();\n \t\t  poplevel (0, 0, 0); ;\n     break;}\n case 385:\n-#line 2117 \"c-parse.y\"\n+#line 2128 \"c-parse.y\"\n { tree parm;\n \t\t  if (pedantic)\n \t\t    pedwarn (\"ANSI C forbids forward parameter declarations\");\n@@ -3685,19 +3694,19 @@ case 385:\n \t\t  clear_parm_order (); ;\n     break;}\n case 386:\n-#line 2125 \"c-parse.y\"\n+#line 2136 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 387:\n-#line 2127 \"c-parse.y\"\n+#line 2138 \"c-parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, NULL_TREE, NULL_TREE); ;\n     break;}\n case 388:\n-#line 2133 \"c-parse.y\"\n+#line 2144 \"c-parse.y\"\n { yyval.ttype = get_parm_info (0); ;\n     break;}\n case 389:\n-#line 2135 \"c-parse.y\"\n+#line 2146 \"c-parse.y\"\n { yyval.ttype = get_parm_info (0);\n \t\t  /* Gcc used to allow this as an extension.  However, it does\n \t\t     not work for all targets, and thus has been disabled.\n@@ -3709,23 +3718,23 @@ case 389:\n \t\t;\n     break;}\n case 390:\n-#line 2145 \"c-parse.y\"\n+#line 2156 \"c-parse.y\"\n { yyval.ttype = get_parm_info (1); ;\n     break;}\n case 391:\n-#line 2147 \"c-parse.y\"\n+#line 2158 \"c-parse.y\"\n { yyval.ttype = get_parm_info (0); ;\n     break;}\n case 392:\n-#line 2152 \"c-parse.y\"\n+#line 2163 \"c-parse.y\"\n { push_parm_decl (yyvsp[0].ttype); ;\n     break;}\n case 393:\n-#line 2154 \"c-parse.y\"\n+#line 2165 \"c-parse.y\"\n { push_parm_decl (yyvsp[0].ttype); ;\n     break;}\n case 394:\n-#line 2161 \"c-parse.y\"\n+#line 2172 \"c-parse.y\"\n { yyval.ttype = build_tree_list (build_tree_list (current_declspecs,\n \t\t\t\t\t\t\t yyvsp[-1].ttype),\n \t\t\t\t\tbuild_tree_list (prefix_attributes,\n@@ -3736,7 +3745,7 @@ case 394:\n \t\t  resume_momentary (yyvsp[-2].itype); ;\n     break;}\n case 395:\n-#line 2170 \"c-parse.y\"\n+#line 2181 \"c-parse.y\"\n { yyval.ttype = build_tree_list (build_tree_list (current_declspecs,\n \t\t\t\t\t\t\t yyvsp[-1].ttype),\n \t\t\t\t\tbuild_tree_list (prefix_attributes,\n@@ -3747,7 +3756,7 @@ case 395:\n \t\t  resume_momentary (yyvsp[-2].itype); ;\n     break;}\n case 396:\n-#line 2179 \"c-parse.y\"\n+#line 2190 \"c-parse.y\"\n { yyval.ttype = build_tree_list (build_tree_list (current_declspecs,\n \t\t\t\t\t\t\t yyvsp[-1].ttype),\n \t\t\t\t\tbuild_tree_list (prefix_attributes,\n@@ -3758,7 +3767,7 @@ case 396:\n \t\t  resume_momentary (yyvsp[-2].itype); ;\n     break;}\n case 397:\n-#line 2188 \"c-parse.y\"\n+#line 2199 \"c-parse.y\"\n { yyval.ttype = build_tree_list (build_tree_list (current_declspecs,\n \t\t\t\t\t\t\t yyvsp[-1].ttype),\n \t\t\t\t\tbuild_tree_list (prefix_attributes,\n@@ -3769,7 +3778,7 @@ case 397:\n \t\t  resume_momentary (yyvsp[-2].itype);  ;\n     break;}\n case 398:\n-#line 2198 \"c-parse.y\"\n+#line 2209 \"c-parse.y\"\n { yyval.ttype = build_tree_list (build_tree_list (current_declspecs,\n \t\t\t\t\t\t\t yyvsp[-1].ttype),\n \t\t\t\t\tbuild_tree_list (prefix_attributes,\n@@ -3780,49 +3789,50 @@ case 398:\n \t\t  resume_momentary (yyvsp[-2].itype);  ;\n     break;}\n case 399:\n-#line 2212 \"c-parse.y\"\n+#line 2223 \"c-parse.y\"\n { pushlevel (0);\n \t\t  clear_parm_order ();\n \t\t  declare_parm_level (1); ;\n     break;}\n case 400:\n-#line 2216 \"c-parse.y\"\n+#line 2227 \"c-parse.y\"\n { yyval.ttype = yyvsp[0].ttype;\n \t\t  parmlist_tags_warning ();\n \t\t  poplevel (0, 0, 0); ;\n     break;}\n case 402:\n-#line 2224 \"c-parse.y\"\n+#line 2235 \"c-parse.y\"\n { tree t;\n \t\t  for (t = yyvsp[-1].ttype; t; t = TREE_CHAIN (t))\n \t\t    if (TREE_VALUE (t) == NULL_TREE)\n \t\t      error (\"`...' in old-style identifier list\");\n \t\t  yyval.ttype = tree_cons (NULL_TREE, NULL_TREE, yyvsp[-1].ttype); ;\n     break;}\n case 403:\n-#line 2234 \"c-parse.y\"\n+#line 2245 \"c-parse.y\"\n { yyval.ttype = build_tree_list (NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 404:\n-#line 2236 \"c-parse.y\"\n+#line 2247 \"c-parse.y\"\n { yyval.ttype = chainon (yyvsp[-2].ttype, build_tree_list (NULL_TREE, yyvsp[0].ttype)); ;\n     break;}\n case 405:\n-#line 2242 \"c-parse.y\"\n+#line 2253 \"c-parse.y\"\n { yyval.ttype = build_tree_list (NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 406:\n-#line 2244 \"c-parse.y\"\n+#line 2255 \"c-parse.y\"\n { yyval.ttype = chainon (yyvsp[-2].ttype, build_tree_list (NULL_TREE, yyvsp[0].ttype)); ;\n     break;}\n case 407:\n-#line 2249 \"c-parse.y\"\n-{ yyval.itype = pedantic;\n-\t\t  pedantic = 0; ;\n+#line 2260 \"c-parse.y\"\n+{ yyval.itype = SAVE_WARN_FLAGS();\n+\t\t  pedantic = 0;\n+\t\t  warn_pointer_arith = 0; ;\n     break;}\n }\n    /* the action file gets copied in in place of this dollarsign */\n-#line 498 \"bison.simple\"\n+#line 498 \"/usr/cygnus/TBD-TBD/share/bison.simple\"\n \f\n   yyvsp -= yylen;\n   yyssp -= yylen;\n@@ -4018,5 +4028,5 @@ case 407:\n   yystate = yyn;\n   goto yynewstate;\n }\n-#line 2253 \"c-parse.y\"\n+#line 2265 \"c-parse.y\"\n "}, {"sha": "92b50cc22b3b7e7d5b3e0d29506692ce3fe05591", "filename": "gcc/c-parse.in", "status": "modified", "additions": 18, "deletions": 6, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3b6e11400d742ce467690ef436183ae1e856ef1/gcc%2Fc-parse.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3b6e11400d742ce467690ef436183ae1e856ef1/gcc%2Fc-parse.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-parse.in?ref=c3b6e11400d742ce467690ef436183ae1e856ef1", "patch": "@@ -185,6 +185,8 @@ end ifc\n %type <ttype> parmlist_or_identifiers parmlist_or_identifiers_1\n %type <ttype> identifiers_or_typenames\n \n+%type <itype> extension\n+\n %type <itype> setspecs\n \n %type <ends_in_label> lineno_stmt_or_label lineno_stmt_or_labels stmt_or_label\n@@ -227,6 +229,15 @@ static tree declspec_stack;\n /* 1 if we explained undeclared var errors.  */\n static int undeclared_variable_notice;\n \n+/* For __extension__, save/restore the warning flags which are\n+   controlled by __extension__.  */\n+#define SAVE_WARN_FLAGS() (pedantic | (warn_pointer_arith << 1))\n+#define RESTORE_WARN_FLAGS(val) \\\n+  do {                                     \\\n+    pedantic = val & 1;                    \\\n+    warn_pointer_arith = (val >> 1) & 1;   \\\n+  } while (0)\n+\n ifobjc\n /* Objective-C specific information */\n \n@@ -297,7 +308,7 @@ end ifobjc\n \t\t  else\n \t\t    error (\"argument of `asm' is not a constant string\"); }\n \t| extension extdef\n-\t\t{ pedantic = $<itype>1; }\n+\t\t{ RESTORE_WARN_FLAGS ($1); }\n \t;\n \n datadef:\n@@ -438,7 +449,7 @@ unary_expr:\n \t/* __extension__ turns off -pedantic for following primary.  */\n \t| extension cast_expr\t  %prec UNARY\n \t\t{ $$ = $2;\n-\t\t  pedantic = $<itype>1; }\n+\t\t  RESTORE_WARN_FLAGS ($1); }\n \t| unop cast_expr  %prec UNARY\n \t\t{ $$ = build_unary_op ($1, $2, 0);\n \t\t  overflow_warning ($$); }\n@@ -1002,7 +1013,7 @@ decl:\n \t| declmods ';'\n \t\t{ pedwarn (\"empty declaration\"); }\n \t| extension decl\n-\t\t{ pedantic = $<itype>1; }\n+\t\t{ RESTORE_WARN_FLAGS ($1); }\n \t;\n \n /* Declspecs which contain at least one type specifier or typedef name.\n@@ -1607,7 +1618,7 @@ component_decl:\n \t\t{ $$ = NULL_TREE; }\n \t| extension component_decl\n \t\t{ $$ = $2;\n-\t\t  pedantic = $<itype>1; }\n+\t\t  RESTORE_WARN_FLAGS ($1); }\n \t;\n \n components:\n@@ -2441,8 +2452,9 @@ identifiers_or_typenames:\n \n extension:\n \tEXTENSION\n-\t\t{ $<itype>$ = pedantic;\n-\t\t  pedantic = 0; }\n+\t\t{ $$ = SAVE_WARN_FLAGS();\n+\t\t  pedantic = 0;\n+\t\t  warn_pointer_arith = 0; }\n \t;\n \f\n ifobjc"}, {"sha": "7d4e2c69213c58d5ece2b2b944988bf1cb175cfd", "filename": "gcc/c-parse.y", "status": "modified", "additions": 18, "deletions": 6, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3b6e11400d742ce467690ef436183ae1e856ef1/gcc%2Fc-parse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3b6e11400d742ce467690ef436183ae1e856ef1/gcc%2Fc-parse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-parse.y?ref=c3b6e11400d742ce467690ef436183ae1e856ef1", "patch": "@@ -173,6 +173,8 @@ const char * const language_string = \"GNU C\";\n %type <ttype> parmlist_or_identifiers parmlist_or_identifiers_1\n %type <ttype> identifiers_or_typenames\n \n+%type <itype> extension\n+\n %type <itype> setspecs\n \n %type <ends_in_label> lineno_stmt_or_label lineno_stmt_or_labels stmt_or_label\n@@ -202,6 +204,15 @@ static tree declspec_stack;\n /* 1 if we explained undeclared var errors.  */\n static int undeclared_variable_notice;\n \n+/* For __extension__, save/restore the warning flags which are\n+   controlled by __extension__.  */\n+#define SAVE_WARN_FLAGS() (pedantic | (warn_pointer_arith << 1))\n+#define RESTORE_WARN_FLAGS(val) \\\n+  do {                                     \\\n+    pedantic = val & 1;                    \\\n+    warn_pointer_arith = (val >> 1) & 1;   \\\n+  } while (0)\n+\n \n /* Tell yyparse how to print a token's value, if yydebug is set.  */\n \n@@ -256,7 +267,7 @@ extdef:\n \t\t  else\n \t\t    error (\"argument of `asm' is not a constant string\"); }\n \t| extension extdef\n-\t\t{ pedantic = $<itype>1; }\n+\t\t{ RESTORE_WARN_FLAGS ($1); }\n \t;\n \n datadef:\n@@ -393,7 +404,7 @@ unary_expr:\n \t/* __extension__ turns off -pedantic for following primary.  */\n \t| extension cast_expr\t  %prec UNARY\n \t\t{ $$ = $2;\n-\t\t  pedantic = $<itype>1; }\n+\t\t  RESTORE_WARN_FLAGS ($1); }\n \t| unop cast_expr  %prec UNARY\n \t\t{ $$ = build_unary_op ($1, $2, 0);\n \t\t  overflow_warning ($$); }\n@@ -847,7 +858,7 @@ decl:\n \t| declmods ';'\n \t\t{ pedwarn (\"empty declaration\"); }\n \t| extension decl\n-\t\t{ pedantic = $<itype>1; }\n+\t\t{ RESTORE_WARN_FLAGS ($1); }\n \t;\n \n /* Declspecs which contain at least one type specifier or typedef name.\n@@ -1416,7 +1427,7 @@ component_decl:\n \t\t{ $$ = NULL_TREE; }\n \t| extension component_decl\n \t\t{ $$ = $2;\n-\t\t  pedantic = $<itype>1; }\n+\t\t  RESTORE_WARN_FLAGS ($1); }\n \t;\n \n components:\n@@ -2246,8 +2257,9 @@ identifiers_or_typenames:\n \n extension:\n \tEXTENSION\n-\t\t{ $<itype>$ = pedantic;\n-\t\t  pedantic = 0; }\n+\t\t{ $$ = SAVE_WARN_FLAGS();\n+\t\t  pedantic = 0;\n+\t\t  warn_pointer_arith = 0; }\n \t;\n \f\n %%"}, {"sha": "f414ae665c527354ee72238a5f1bbd09228a78fb", "filename": "gcc/objc/objc-parse.c", "status": "modified", "additions": 522, "deletions": 512, "changes": 1034, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3b6e11400d742ce467690ef436183ae1e856ef1/gcc%2Fobjc%2Fobjc-parse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3b6e11400d742ce467690ef436183ae1e856ef1/gcc%2Fobjc%2Fobjc-parse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-parse.c?ref=c3b6e11400d742ce467690ef436183ae1e856ef1"}, {"sha": "f22926f2d2c5b9eb1e27d5f5b826b06b0fa4b298", "filename": "gcc/objc/objc-parse.y", "status": "modified", "additions": 18, "deletions": 6, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3b6e11400d742ce467690ef436183ae1e856ef1/gcc%2Fobjc%2Fobjc-parse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3b6e11400d742ce467690ef436183ae1e856ef1/gcc%2Fobjc%2Fobjc-parse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-parse.y?ref=c3b6e11400d742ce467690ef436183ae1e856ef1", "patch": "@@ -174,6 +174,8 @@ const char * const language_string = \"GNU Obj-C\";\n %type <ttype> parmlist_or_identifiers parmlist_or_identifiers_1\n %type <ttype> identifiers_or_typenames\n \n+%type <itype> extension\n+\n %type <itype> setspecs\n \n %type <ends_in_label> lineno_stmt_or_label lineno_stmt_or_labels stmt_or_label\n@@ -214,6 +216,15 @@ static tree declspec_stack;\n /* 1 if we explained undeclared var errors.  */\n static int undeclared_variable_notice;\n \n+/* For __extension__, save/restore the warning flags which are\n+   controlled by __extension__.  */\n+#define SAVE_WARN_FLAGS() (pedantic | (warn_pointer_arith << 1))\n+#define RESTORE_WARN_FLAGS(val) \\\n+  do {                                     \\\n+    pedantic = val & 1;                    \\\n+    warn_pointer_arith = (val >> 1) & 1;   \\\n+  } while (0)\n+\n /* Objective-C specific information */\n \n tree objc_interface_context;\n@@ -280,7 +291,7 @@ extdef:\n \t\t  else\n \t\t    error (\"argument of `asm' is not a constant string\"); }\n \t| extension extdef\n-\t\t{ pedantic = $<itype>1; }\n+\t\t{ RESTORE_WARN_FLAGS ($1); }\n \t;\n \n datadef:\n@@ -419,7 +430,7 @@ unary_expr:\n \t/* __extension__ turns off -pedantic for following primary.  */\n \t| extension cast_expr\t  %prec UNARY\n \t\t{ $$ = $2;\n-\t\t  pedantic = $<itype>1; }\n+\t\t  RESTORE_WARN_FLAGS ($1); }\n \t| unop cast_expr  %prec UNARY\n \t\t{ $$ = build_unary_op ($1, $2, 0);\n \t\t  overflow_warning ($$); }\n@@ -967,7 +978,7 @@ decl:\n \t| declmods ';'\n \t\t{ pedwarn (\"empty declaration\"); }\n \t| extension decl\n-\t\t{ pedantic = $<itype>1; }\n+\t\t{ RESTORE_WARN_FLAGS ($1); }\n \t;\n \n /* Declspecs which contain at least one type specifier or typedef name.\n@@ -1546,7 +1557,7 @@ component_decl:\n \t\t{ $$ = NULL_TREE; }\n \t| extension component_decl\n \t\t{ $$ = $2;\n-\t\t  pedantic = $<itype>1; }\n+\t\t  RESTORE_WARN_FLAGS ($1); }\n \t;\n \n components:\n@@ -2378,8 +2389,9 @@ identifiers_or_typenames:\n \n extension:\n \tEXTENSION\n-\t\t{ $<itype>$ = pedantic;\n-\t\t  pedantic = 0; }\n+\t\t{ $$ = SAVE_WARN_FLAGS();\n+\t\t  pedantic = 0;\n+\t\t  warn_pointer_arith = 0; }\n \t;\n \f\n /* Objective-C productions.  */"}]}