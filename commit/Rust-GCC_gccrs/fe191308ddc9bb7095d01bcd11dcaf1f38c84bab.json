{"sha": "fe191308ddc9bb7095d01bcd11dcaf1f38c84bab", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmUxOTEzMDhkZGM5YmI3MDk1ZDAxYmNkMTFkY2FmMWYzOGM4NGJhYg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2015-05-09T04:50:10Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2015-05-09T04:50:10Z"}, "message": "lex.c (lex_string): Add -Wc++11-compat warning.\n\nlibcpp/\n\t* lex.c (lex_string): Add -Wc++11-compat warning.\n\t* include/cpplib.h: Add CPP_W_CXX11_COMPAT.\n\t(struct cpp_options): Add cpp_warn_cxx11_compat.\n\t* init.c (cpp_create_reader): Initialize it.\ngcc/c-family/\n\t* c.opt (Wc++0x-compat): Set it.\n\nFrom-SVN: r222961", "tree": {"sha": "61fa36eb422bfdf8906071bacaa096b5ef2c2dbc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/61fa36eb422bfdf8906071bacaa096b5ef2c2dbc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fe191308ddc9bb7095d01bcd11dcaf1f38c84bab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe191308ddc9bb7095d01bcd11dcaf1f38c84bab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe191308ddc9bb7095d01bcd11dcaf1f38c84bab", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe191308ddc9bb7095d01bcd11dcaf1f38c84bab/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "169980942642c39a062529f747e00a7882d046d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/169980942642c39a062529f747e00a7882d046d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/169980942642c39a062529f747e00a7882d046d7"}], "stats": {"total": 30, "additions": 28, "deletions": 2}, "files": [{"sha": "17fb72f879710cc4a9497c1e0afb215e55fb011e", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe191308ddc9bb7095d01bcd11dcaf1f38c84bab/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe191308ddc9bb7095d01bcd11dcaf1f38c84bab/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=fe191308ddc9bb7095d01bcd11dcaf1f38c84bab", "patch": "@@ -1,3 +1,7 @@\n+2015-05-08  Jason Merrill  <jason@redhat.com>\n+\n+\t* c.opt (Wc++0x-compat): Also set cpp_warn_cxx11_compat.\n+\n 2015-05-08  Marek Polacek  <polacek@redhat.com>\n \n \tPR c/64918"}, {"sha": "8f48d84e93e3a019250ab65d9793b42e6bddbaae", "filename": "gcc/c-family/c.opt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe191308ddc9bb7095d01bcd11dcaf1f38c84bab/gcc%2Fc-family%2Fc.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe191308ddc9bb7095d01bcd11dcaf1f38c84bab/gcc%2Fc-family%2Fc.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc.opt?ref=fe191308ddc9bb7095d01bcd11dcaf1f38c84bab", "patch": "@@ -312,7 +312,7 @@ C ObjC Var(warn_cxx_compat) CPP(warn_cxx_operator_names) CppReason(CPP_W_CXX_OPE\n Warn about C constructs that are not in the common subset of C and C++\n \n Wc++0x-compat\n-C++ ObjC++ Var(warn_cxx0x_compat) Warning LangEnabledBy(C++ ObjC++,Wall)\n+C++ ObjC++ Var(warn_cxx0x_compat) Warning LangEnabledBy(C++ ObjC++,Wall) Init(0) CPP(cpp_warn_cxx11_compat) CppReason(CPP_W_CXX11_COMPAT)\n Deprecated in favor of -Wc++11-compat\n \n Wc++11-compat"}, {"sha": "c3f0cf552125e1a232c2ac59c777b2b98e3c63e7", "filename": "gcc/testsuite/g++.dg/cpp0x/warn_cxx0x4.C", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe191308ddc9bb7095d01bcd11dcaf1f38c84bab/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fwarn_cxx0x4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe191308ddc9bb7095d01bcd11dcaf1f38c84bab/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fwarn_cxx0x4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fwarn_cxx0x4.C?ref=fe191308ddc9bb7095d01bcd11dcaf1f38c84bab", "patch": "@@ -0,0 +1,4 @@\n+// { dg-options \"-Wall\" }\n+\n+#define FOO \"foo\"\n+const char *p = \"bar\"FOO;\t// { dg-warning \"macro\" }"}, {"sha": "51304424753e93bebf01a6c7dd907012dbea52f9", "filename": "libcpp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe191308ddc9bb7095d01bcd11dcaf1f38c84bab/libcpp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe191308ddc9bb7095d01bcd11dcaf1f38c84bab/libcpp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2FChangeLog?ref=fe191308ddc9bb7095d01bcd11dcaf1f38c84bab", "patch": "@@ -1,3 +1,10 @@\n+2015-05-08  Jason Merrill  <jason@redhat.com>\n+\n+\t* include/cpplib.h: Add CPP_W_CXX11_COMPAT.\n+\t(struct cpp_options): Add cpp_warn_cxx11_compat.\n+\t* init.c (cpp_create_reader): Initialize it.\n+\t* lex.c (lex_string): Add -Wc++11-compat warning.\n+\n 2015-05-05  David Malcolm  <dmalcolm@redhat.com>\n \n \t* pch.c (cpp_valid_state): Fix indentation so that it reflects the"}, {"sha": "0152ec8aa889269ff4d4064f2eb527460790ad30", "filename": "libcpp/include/cpplib.h", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe191308ddc9bb7095d01bcd11dcaf1f38c84bab/libcpp%2Finclude%2Fcpplib.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe191308ddc9bb7095d01bcd11dcaf1f38c84bab/libcpp%2Finclude%2Fcpplib.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Finclude%2Fcpplib.h?ref=fe191308ddc9bb7095d01bcd11dcaf1f38c84bab", "patch": "@@ -484,6 +484,9 @@ struct cpp_options\n   /* True if warn about differences between C90 and C99.  */\n   signed char cpp_warn_c90_c99_compat;\n \n+  /* True if warn about differences between C++98 and C++11.  */\n+  bool cpp_warn_cxx11_compat;\n+\n   /* Dependency generation.  */\n   struct\n   {\n@@ -960,7 +963,8 @@ enum {\n   CPP_W_LITERAL_SUFFIX,\n   CPP_W_DATE_TIME,\n   CPP_W_PEDANTIC,\n-  CPP_W_C90_C99_COMPAT\n+  CPP_W_C90_C99_COMPAT,\n+  CPP_W_CXX11_COMPAT\n };\n \n /* Output a diagnostic of some kind.  */"}, {"sha": "1ebd709af2c7a09ebd76c91b702744daf0011bac", "filename": "libcpp/init.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe191308ddc9bb7095d01bcd11dcaf1f38c84bab/libcpp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe191308ddc9bb7095d01bcd11dcaf1f38c84bab/libcpp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Finit.c?ref=fe191308ddc9bb7095d01bcd11dcaf1f38c84bab", "patch": "@@ -180,6 +180,7 @@ cpp_create_reader (enum c_lang lang, cpp_hash_table *table,\n   CPP_OPTION (pfile, warn_trigraphs) = 2;\n   CPP_OPTION (pfile, warn_endif_labels) = 1;\n   CPP_OPTION (pfile, cpp_warn_c90_c99_compat) = -1;\n+  CPP_OPTION (pfile, cpp_warn_cxx11_compat) = 0;\n   CPP_OPTION (pfile, cpp_warn_deprecated) = 1;\n   CPP_OPTION (pfile, cpp_warn_long_long) = 0;\n   CPP_OPTION (pfile, dollars_in_ident) = 1;"}, {"sha": "c7296a110b6b0944232c78506e8ba64f1644f79a", "filename": "libcpp/lex.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe191308ddc9bb7095d01bcd11dcaf1f38c84bab/libcpp%2Flex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe191308ddc9bb7095d01bcd11dcaf1f38c84bab/libcpp%2Flex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Flex.c?ref=fe191308ddc9bb7095d01bcd11dcaf1f38c84bab", "patch": "@@ -1905,6 +1905,12 @@ lex_string (cpp_reader *pfile, cpp_token *token, const uchar *base)\n \t    ++cur;\n \t}\n     }\n+  else if (CPP_OPTION (pfile, cpp_warn_cxx11_compat)\n+\t   && is_macro (pfile, cur)\n+\t   && !pfile->state.skipping)\n+    cpp_warning_with_line (pfile, CPP_W_CXX11_COMPAT,\n+\t\t\t   token->src_loc, 0, \"C++11 requires a space \"\n+\t\t\t   \"between string literal and macro\");\n \n   pfile->buffer->cur = cur;\n   create_literal (pfile, token, base, cur - base, type);"}]}