{"sha": "b77e3b4e4589e56c01511fabdbaadb029cd47f5c", "node_id": "C_kwDOANBUbNoAKGI3N2UzYjRlNDU4OWU1NmMwMTUxMWZhYmRiYWFkYjAyOWNkNDdmNWM", "commit": {"author": {"name": "liuhongt", "email": "hongtao.liu@intel.com", "date": "2022-01-13T14:51:49Z"}, "committer": {"name": "liuhongt", "email": "hongtao.liu@intel.com", "date": "2022-01-14T05:02:26Z"}, "message": "Fix ICE of unrecognizable insn. [PR target/104001]\n\nFor define_insn_and_split \"*xor2andn\":\n\n1. Refine predicate of operands[0] from nonimmediate_operand to\nregister_operand.\n2. Remove TARGET_AVX512BW from condition to avoid kmov when TARGET_BMI\nis not available.\n\ngcc/ChangeLog:\n\n\tPR target/104001\n\tPR target/94790\n\tPR target/104014\n\t* config/i386/i386.md (*xor2andn): Refine predicate of\n\toperands[0] from nonimmediate_operand to\n\tregister_operand, remove TARGET_AVX512BW from condition.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.target/i386/pr104001.c: New test.", "tree": {"sha": "b9e980039aa9d6bc6ff6fb08b25933e707e13c89", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b9e980039aa9d6bc6ff6fb08b25933e707e13c89"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b77e3b4e4589e56c01511fabdbaadb029cd47f5c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b77e3b4e4589e56c01511fabdbaadb029cd47f5c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b77e3b4e4589e56c01511fabdbaadb029cd47f5c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b77e3b4e4589e56c01511fabdbaadb029cd47f5c/comments", "author": {"login": "algebra84", "id": 22926165, "node_id": "MDQ6VXNlcjIyOTI2MTY1", "avatar_url": "https://avatars.githubusercontent.com/u/22926165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/algebra84", "html_url": "https://github.com/algebra84", "followers_url": "https://api.github.com/users/algebra84/followers", "following_url": "https://api.github.com/users/algebra84/following{/other_user}", "gists_url": "https://api.github.com/users/algebra84/gists{/gist_id}", "starred_url": "https://api.github.com/users/algebra84/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/algebra84/subscriptions", "organizations_url": "https://api.github.com/users/algebra84/orgs", "repos_url": "https://api.github.com/users/algebra84/repos", "events_url": "https://api.github.com/users/algebra84/events{/privacy}", "received_events_url": "https://api.github.com/users/algebra84/received_events", "type": "User", "site_admin": false}, "committer": {"login": "algebra84", "id": 22926165, "node_id": "MDQ6VXNlcjIyOTI2MTY1", "avatar_url": "https://avatars.githubusercontent.com/u/22926165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/algebra84", "html_url": "https://github.com/algebra84", "followers_url": "https://api.github.com/users/algebra84/followers", "following_url": "https://api.github.com/users/algebra84/following{/other_user}", "gists_url": "https://api.github.com/users/algebra84/gists{/gist_id}", "starred_url": "https://api.github.com/users/algebra84/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/algebra84/subscriptions", "organizations_url": "https://api.github.com/users/algebra84/orgs", "repos_url": "https://api.github.com/users/algebra84/repos", "events_url": "https://api.github.com/users/algebra84/events{/privacy}", "received_events_url": "https://api.github.com/users/algebra84/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b31cec9c22b8dfa40baefd4c2dd774477e8e04c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b31cec9c22b8dfa40baefd4c2dd774477e8e04c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b31cec9c22b8dfa40baefd4c2dd774477e8e04c5"}], "stats": {"total": 32, "additions": 26, "deletions": 6}, "files": [{"sha": "9477ca9b41db3a009ed872105333a569a1a82e3a", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b77e3b4e4589e56c01511fabdbaadb029cd47f5c/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b77e3b4e4589e56c01511fabdbaadb029cd47f5c/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=b77e3b4e4589e56c01511fabdbaadb029cd47f5c", "patch": "@@ -10453,9 +10453,9 @@\n    (set_attr \"znver1_decode\" \"double\")\n    (set_attr \"mode\" \"DI\")])\n \n-;; PR target/94790: Optimize a ^ ((a ^ b) & mask) to (~mask & a) | (b & mask)\n+;; Optimize a ^ ((a ^ b) & mask) to (~mask & a) | (b & mask)\n (define_insn_and_split \"*xor2andn\"\n-  [(set (match_operand:SWI248 0 \"nonimmediate_operand\")\n+  [(set (match_operand:SWI248 0 \"register_operand\")\n \t(xor:SWI248\n \t  (and:SWI248\n \t    (xor:SWI248\n@@ -10464,8 +10464,7 @@\n \t    (match_operand:SWI248 3 \"nonimmediate_operand\"))\n \t  (match_dup 1)))\n     (clobber (reg:CC FLAGS_REG))]\n-  \"(TARGET_BMI || TARGET_AVX512BW)\n-   && ix86_pre_reload_split ()\"\n+  \"TARGET_BMI && ix86_pre_reload_split ()\"\n   \"#\"\n   \"&& 1\"\n   [(parallel [(set (match_dup 4)\n@@ -10476,8 +10475,8 @@\n \t      (clobber (reg:CC FLAGS_REG))])\n    (parallel [(set (match_dup 5)\n \t\t(and:SWI248\n-\t\t  (match_dup 2)\n-\t\t  (match_dup 3)))\n+\t\t  (match_dup 3)\n+\t\t  (match_dup 2)))\n \t      (clobber (reg:CC FLAGS_REG))])\n    (parallel [(set (match_dup 0)\n \t\t(ior:SWI248"}, {"sha": "4efb5936daecbd03548a43410b779b69f41e4c0f", "filename": "gcc/testsuite/gcc.target/i386/pr104001.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b77e3b4e4589e56c01511fabdbaadb029cd47f5c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr104001.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b77e3b4e4589e56c01511fabdbaadb029cd47f5c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr104001.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr104001.c?ref=b77e3b4e4589e56c01511fabdbaadb029cd47f5c", "patch": "@@ -0,0 +1,21 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+/* { dg-final { scan-assembler-not \"kandn\" } } */\n+/* { dg-final { scan-assembler \"andn\" } } */\n+\n+int b, c, d;\n+int r;\n+\n+void\n+__attribute__((target(\"bmi\")))\n+foo ()\n+{\n+  r = ((b & ~d) | (c & d));\n+}\n+\n+void\n+__attribute__((target(\"avx512bw\")))\n+bar ()\n+{\n+  r = ((b & ~d) | (c & d));\n+}"}]}