{"sha": "fac8276f737351afbde34a85f2b6c224b400313b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmFjODI3NmY3MzczNTFhZmJkZTM0YTg1ZjJiNmMyMjRiNDAwMzEzYg==", "commit": {"author": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2021-02-11T13:57:36Z"}, "committer": {"name": "Philip Herron", "email": "herron.philip@googlemail.com", "date": "2021-02-13T09:54:47Z"}, "message": "Fix parsing of Char literals", "tree": {"sha": "8fba0fff8373f98b4da3a684c5ea335a913bdab5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8fba0fff8373f98b4da3a684c5ea335a913bdab5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fac8276f737351afbde34a85f2b6c224b400313b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fac8276f737351afbde34a85f2b6c224b400313b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fac8276f737351afbde34a85f2b6c224b400313b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fac8276f737351afbde34a85f2b6c224b400313b/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ebb5de23436436d4206766552e76cd4b802e0c74", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ebb5de23436436d4206766552e76cd4b802e0c74", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ebb5de23436436d4206766552e76cd4b802e0c74"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "cb65ed27d54299696587db3a92688c08b4bc3f35", "filename": "gcc/rust/parse/rust-parse-impl.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fac8276f737351afbde34a85f2b6c224b400313b/gcc%2Frust%2Fparse%2Frust-parse-impl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fac8276f737351afbde34a85f2b6c224b400313b/gcc%2Frust%2Fparse%2Frust-parse-impl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fparse%2Frust-parse-impl.h?ref=fac8276f737351afbde34a85f2b6c224b400313b", "patch": "@@ -12192,6 +12192,10 @@ Parser<ManagedTokenSource>::null_denotation (\n       return std::unique_ptr<AST::LiteralExpr> (\n \tnew AST::LiteralExpr (tok->get_str (), AST::Literal::STRING,\n \t\t\t      tok->get_type_hint (), {}, tok->get_locus ()));\n+    case CHAR_LITERAL:\n+      return std::unique_ptr<AST::LiteralExpr> (\n+\tnew AST::LiteralExpr (tok->get_str (), AST::Literal::CHAR,\n+\t\t\t      tok->get_type_hint (), {}, tok->get_locus ()));\n     case TRUE_LITERAL:\n       return std::unique_ptr<AST::LiteralExpr> (\n \tnew AST::LiteralExpr (\"true\", AST::Literal::BOOL, tok->get_type_hint (),"}]}