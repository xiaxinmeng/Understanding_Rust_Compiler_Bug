{"sha": "a714e5c5d34f921252d147a23ff3bc0642413824", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTcxNGU1YzVkMzRmOTIxMjUyZDE0N2EyM2ZmM2JjMDY0MjQxMzgyNA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2001-02-18T00:00:29Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2001-02-18T00:00:29Z"}, "message": "decl2.c (build_artificial_parm): Set TREE_READONLY.\n\n        * decl2.c (build_artificial_parm): Set TREE_READONLY.\n\n        * decl.c (bad_specifiers): Allow throw specs on things with\n        pointer-to-function or -member-function type.\n        * init.c (build_default_init): Don't use a CONSTRUCTOR to initialize\n        a pmf.\n\nFrom-SVN: r39810", "tree": {"sha": "b1df6ce88ec335187d7ab55035afb765383f2829", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b1df6ce88ec335187d7ab55035afb765383f2829"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a714e5c5d34f921252d147a23ff3bc0642413824", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a714e5c5d34f921252d147a23ff3bc0642413824", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a714e5c5d34f921252d147a23ff3bc0642413824", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a714e5c5d34f921252d147a23ff3bc0642413824/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8084b91ec40a180177d76f34b3a77a9dedf6d0df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8084b91ec40a180177d76f34b3a77a9dedf6d0df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8084b91ec40a180177d76f34b3a77a9dedf6d0df"}], "stats": {"total": 36, "additions": 34, "deletions": 2}, "files": [{"sha": "efced16555b52a0031a564e87036da131782175e", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a714e5c5d34f921252d147a23ff3bc0642413824/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a714e5c5d34f921252d147a23ff3bc0642413824/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=a714e5c5d34f921252d147a23ff3bc0642413824", "patch": "@@ -1,3 +1,12 @@\n+2001-02-17  Jason Merrill  <jason@redhat.com>\n+\n+\t* decl2.c (build_artificial_parm): Set TREE_READONLY.\n+\n+\t* decl.c (bad_specifiers): Allow throw specs on things with \n+\tpointer-to-function or -member-function type.\n+\t* init.c (build_default_init): Don't use a CONSTRUCTOR to initialize\n+\ta pmf.\n+\n 2001-02-17  Mark Mitchell  <mark@codesourcery.com>\n \n \t* call.c (check_dtor_name): Handle template names correctly."}, {"sha": "4e727ad94b9719973db3ace22338e3ef8dbf67cb", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a714e5c5d34f921252d147a23ff3bc0642413824/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a714e5c5d34f921252d147a23ff3bc0642413824/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=a714e5c5d34f921252d147a23ff3bc0642413824", "patch": "@@ -8638,7 +8638,8 @@ bad_specifiers (object, type, virtualp, quals, inlinep, friendp, raises)\n \t      object, type);\n   if (friendp)\n     cp_error_at (\"`%D' declared as a friend\", object);\n-  if (raises)\n+  if (raises && !TYPE_PTRFN_P (TREE_TYPE (object))\n+      && !TYPE_PTRMEMFUNC_P (TREE_TYPE (object)))\n     cp_error_at (\"`%D' declared with an exception specification\", object);\n }\n "}, {"sha": "20aa6a82d726bddd8a97be17479f20575efa7534", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a714e5c5d34f921252d147a23ff3bc0642413824/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a714e5c5d34f921252d147a23ff3bc0642413824/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=a714e5c5d34f921252d147a23ff3bc0642413824", "patch": "@@ -917,6 +917,9 @@ build_artificial_parm (name, type)\n \n   parm = build_decl (PARM_DECL, name, type);\n   DECL_ARTIFICIAL (parm) = 1;\n+  /* All our artificial parms are implicitly `const'; they cannot be\n+     assigned to.  */\n+  TREE_READONLY (parm) = 1;\n   DECL_ARG_TYPE (parm) = type;\n   return parm;\n }"}, {"sha": "fb6beab8850d7ed6cdcdc8e9522a68e19109b177", "filename": "gcc/cp/init.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a714e5c5d34f921252d147a23ff3bc0642413824/gcc%2Fcp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a714e5c5d34f921252d147a23ff3bc0642413824/gcc%2Fcp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finit.c?ref=a714e5c5d34f921252d147a23ff3bc0642413824", "patch": "@@ -218,7 +218,7 @@ build_default_init (type)\n        anything with a CONSTRUCTOR for arrays here, as that would imply\n        copy-initialization.  */\n     return NULL_TREE;\n-  else if (AGGREGATE_TYPE_P (type))\n+  else if (AGGREGATE_TYPE_P (type) && !TYPE_PTRMEMFUNC_P (type))\n     {\n       /* This is a default initialization of an aggregate, but not one of\n \t non-POD class type.  We cleverly notice that the initialization"}, {"sha": "1945b84aec7103aeb8749555e5dc827b3f08313d", "filename": "gcc/testsuite/g++.old-deja/g++.eh/spec7.C", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a714e5c5d34f921252d147a23ff3bc0642413824/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.eh%2Fspec7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a714e5c5d34f921252d147a23ff3bc0642413824/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.eh%2Fspec7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.eh%2Fspec7.C?ref=a714e5c5d34f921252d147a23ff3bc0642413824", "patch": "@@ -0,0 +1,19 @@\n+// Test that we allow simple throw specs on pointers.\n+\n+void f() throw () { }\n+void (*pf)() throw () = f;\n+\n+struct A\n+{\n+  void g() throw () { }\n+  static void (A::*pmf)() throw ();\n+};\n+\n+void (A::* A::pmf)() = &A::g;\n+\n+int main()\n+{\n+  pf ();\n+  A a;\n+  (a.*A::pmf)();\n+}"}]}