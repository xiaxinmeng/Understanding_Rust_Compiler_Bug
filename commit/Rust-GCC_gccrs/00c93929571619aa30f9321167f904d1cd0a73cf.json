{"sha": "00c93929571619aa30f9321167f904d1cd0a73cf", "node_id": "C_kwDOANBUbNoAKDAwYzkzOTI5NTcxNjE5YWEzMGY5MzIxMTY3ZjkwNGQxY2QwYTczY2Y", "commit": {"author": {"name": "Ju-Zhe Zhong", "email": "juzhe.zhong@rivai.ai", "date": "2023-02-06T05:18:36Z"}, "committer": {"name": "Kito Cheng", "email": "kito.cheng@sifive.com", "date": "2023-02-12T03:04:09Z"}, "message": "RISC-V: Add vsext constraint tests\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.target/riscv/rvv/base/unop_v_constraint-2.c: New test.", "tree": {"sha": "01540f0d75820f28d2bbe8ba77212ca130efe949", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/01540f0d75820f28d2bbe8ba77212ca130efe949"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/00c93929571619aa30f9321167f904d1cd0a73cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00c93929571619aa30f9321167f904d1cd0a73cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/00c93929571619aa30f9321167f904d1cd0a73cf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00c93929571619aa30f9321167f904d1cd0a73cf/comments", "author": {"login": "zhongjuzhe", "id": 66454988, "node_id": "MDQ6VXNlcjY2NDU0OTg4", "avatar_url": "https://avatars.githubusercontent.com/u/66454988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhongjuzhe", "html_url": "https://github.com/zhongjuzhe", "followers_url": "https://api.github.com/users/zhongjuzhe/followers", "following_url": "https://api.github.com/users/zhongjuzhe/following{/other_user}", "gists_url": "https://api.github.com/users/zhongjuzhe/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhongjuzhe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhongjuzhe/subscriptions", "organizations_url": "https://api.github.com/users/zhongjuzhe/orgs", "repos_url": "https://api.github.com/users/zhongjuzhe/repos", "events_url": "https://api.github.com/users/zhongjuzhe/events{/privacy}", "received_events_url": "https://api.github.com/users/zhongjuzhe/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kito-cheng", "id": 2723185, "node_id": "MDQ6VXNlcjI3MjMxODU=", "avatar_url": "https://avatars.githubusercontent.com/u/2723185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kito-cheng", "html_url": "https://github.com/kito-cheng", "followers_url": "https://api.github.com/users/kito-cheng/followers", "following_url": "https://api.github.com/users/kito-cheng/following{/other_user}", "gists_url": "https://api.github.com/users/kito-cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/kito-cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kito-cheng/subscriptions", "organizations_url": "https://api.github.com/users/kito-cheng/orgs", "repos_url": "https://api.github.com/users/kito-cheng/repos", "events_url": "https://api.github.com/users/kito-cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/kito-cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7d2c4a6f07ef2b450c5df8a5a0fae46078d3d21c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d2c4a6f07ef2b450c5df8a5a0fae46078d3d21c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d2c4a6f07ef2b450c5df8a5a0fae46078d3d21c"}], "stats": {"total": 132, "additions": 132, "deletions": 0}, "files": [{"sha": "19f9365b42b5a526eec14c1aa5a96442d1dc9a70", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/unop_v_constraint-2.c", "status": "added", "additions": 132, "deletions": 0, "changes": 132, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00c93929571619aa30f9321167f904d1cd0a73cf/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Funop_v_constraint-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00c93929571619aa30f9321167f904d1cd0a73cf/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Funop_v_constraint-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Funop_v_constraint-2.c?ref=00c93929571619aa30f9321167f904d1cd0a73cf", "patch": "@@ -0,0 +1,132 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv32gcv -mabi=ilp32d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+/* { dg-final { check-function-bodies \"**\" \"\" } } */\n+#include \"riscv_vector.h\"\n+\n+/*\n+** f1:\n+**\tvsetivli\\tzero,4,e32,m1,tu,ma\n+**\tvle16\\.v\\tv[0-9]+,0\\([a-x0-9]+\\)\n+**\tvle16\\.v\\tv[0-9]+,0\\([a-x0-9]+\\)\n+**\tvsext\\.vf2\\tv[0-9]+,\\s*v[0-9]+\n+**\tvsext\\.vf2\\tv[0-9]+,\\s*v[0-9]+\n+**\tvse32\\.v\\tv[0-9]+,0\\([a-x0-9]+\\)\n+**\tret\n+*/\n+void f1 (void * in, void *out)\n+{\n+    vint16mf2_t v = __riscv_vle16_v_i16mf2 (in, 4);\n+    vint16mf2_t v2 = __riscv_vle16_v_i16mf2_tu (v, in, 4);\n+    vint32m1_t v3 = __riscv_vsext_vf2_i32m1 (v2, 4);\n+    vint32m1_t v4 = __riscv_vsext_vf2_i32m1_tu (v3, v2, 4);\n+    __riscv_vse32_v_i32m1 (out, v4, 4);\n+}\n+\n+/*\n+** f2:\n+**\tvsetvli\\t[a-x0-9]+,zero,e8,mf4,ta,ma\n+**\tvlm.v\\tv[0-9]+,0\\([a-x0-9]+\\)\n+**\tvsetivli\\tzero,4,e32,m1,ta,ma\n+**\tvle16\\.v\\tv[0-9]+,0\\([a-x0-9]+\\)\n+**\tvsext\\.vf2\\tv[0-9]+,\\s*v[0-9]+\n+**\tvsetvli\\tzero,zero,e64,m2,ta,ma\n+**\tvsext\\.vf2\\tv[1-9][0-9]?,\\s*v[0-9]+,\\s*v0.t\n+**\tvse64\\.v\\tv[0-9]+,0\\([a-x0-9]+\\)\n+**\tret\n+*/\n+void f2 (void * in, void *out)\n+{\n+    vbool32_t mask = *(vbool32_t*)in;\n+    asm volatile (\"\":::\"memory\");\n+    vint16mf2_t v = __riscv_vle16_v_i16mf2 (in, 4);\n+    vint32m1_t v3 = __riscv_vsext_vf2_i32m1 (v, 4);\n+    vint64m2_t v4 = __riscv_vsext_vf2_i64m2_m (mask, v3, 4);\n+    __riscv_vse64_v_i64m2 (out, v4, 4);\n+}\n+\n+/*\n+** f3:\n+**\tvsetvli\\t[a-x0-9]+,zero,e8,mf4,ta,ma\n+**\tvlm.v\\tv[0-9]+,0\\([a-x0-9]+\\)\n+**\tvsetivli\\tzero,4,e32,m1,tu,mu\n+**\tvle16\\.v\\tv[0-9]+,0\\([a-x0-9]+\\)\n+**\tvle16\\.v\\tv[0-9]+,0\\([a-x0-9]+\\),v0.t\n+**\tvsext\\.vf2\\tv[0-9]+,\\s*v[0-9]+\n+**\tvsext\\.vf2\\tv[1-9][0-9]?,\\s*v[0-9]+,\\s*v0.t\n+**\tvse32.v\\tv[0-9]+,0\\([a-x0-9]+\\)\n+**\tret\n+*/\n+void f3 (void * in, void *out)\n+{\n+    vbool32_t mask = *(vbool32_t*)in;\n+    asm volatile (\"\":::\"memory\");\n+    vint16mf2_t v = __riscv_vle16_v_i16mf2 (in, 4);\n+    vint16mf2_t v2 = __riscv_vle16_v_i16mf2_tumu (mask, v, in, 4);\n+    vint32m1_t v3 = __riscv_vsext_vf2_i32m1 (v2, 4);\n+    vint32m1_t v4 = __riscv_vsext_vf2_i32m1_tumu (mask, v3, v2, 4);\n+    __riscv_vse32_v_i32m1 (out, v4, 4);\n+}\n+\n+/*\n+** f4:\n+**\tvsetivli\\tzero,4,e16,mf4,tu,ma\n+**\tvle8\\.v\\tv[0-9]+,0\\([a-x0-9]+\\)\n+**\tvle8\\.v\\tv[0-9]+,0\\([a-x0-9]+\\)\n+**\tvsext\\.vf2\\tv[0-9]+,\\s*v[0-9]+\n+**\tvsext\\.vf2\\tv[0-9]+,\\s*v[0-9]+\n+**\tvse16\\.v\\tv[0-9]+,0\\([a-x0-9]+\\)\n+**\tret\n+*/\n+void f4 (void * in, void *out)\n+{\n+    vint8mf8_t v = __riscv_vle8_v_i8mf8 (in, 4);\n+    vint8mf8_t v2 = __riscv_vle8_v_i8mf8_tu (v, in, 4);\n+    vint16mf4_t v3 = __riscv_vsext_vf2_i16mf4 (v2, 4);\n+    vint16mf4_t v4 = __riscv_vsext_vf2_i16mf4_tu (v3, v2, 4);\n+    __riscv_vse16_v_i16mf4 (out, v4, 4);\n+}\n+\n+/*\n+** f5:\n+**\tvsetvli\\t[a-x0-9]+,zero,e8,mf8,ta,ma\n+**\tvlm.v\\tv[0-9]+,0\\([a-x0-9]+\\)\n+**\tvsetivli\\tzero,4,e16,mf4,ta,ma\n+**\tvle8.v\\tv[0-9]+,0\\([a-x0-9]+\\)\n+**\tvsext\\.vf2\\tv[0-9]+,\\s*v[0-9]+\n+**\tvsetvli\\tzero,zero,e32,mf2,ta,ma\n+**\tvsext\\.vf2\\tv[1-9][0-9]?,\\s*v[0-9]+,\\s*v0.t\n+**\tvse32.v\\tv[0-9]+,0\\([a-x0-9]+\\)\n+**\tret\n+*/\n+void f5 (void * in, void *out)\n+{\n+    vbool64_t mask = *(vbool64_t*)in;\n+    asm volatile (\"\":::\"memory\");\n+    vint8mf8_t v = __riscv_vle8_v_i8mf8 (in, 4);\n+    vint16mf4_t v3 = __riscv_vsext_vf2_i16mf4 (v, 4);\n+    vint32mf2_t v4 = __riscv_vsext_vf2_i32mf2_m (mask, v3, 4);\n+    __riscv_vse32_v_i32mf2 (out, v4, 4);\n+}\n+\n+/*\n+** f6:\n+**\tvsetvli\\t[a-x0-9]+,zero,e8,mf8,ta,ma\n+**\tvlm.v\\tv[0-9]+,0\\([a-x0-9]+\\)\n+**\tvsetivli\\tzero,4,e16,mf4,tu,mu\n+**\tvle8\\.v\\tv[0-9]+,0\\([a-x0-9]+\\)\n+**\tvle8.v\\tv[0-9]+,0\\([a-x0-9]+\\),v0.t\n+**\tvsext\\.vf2\\tv[0-9]+,\\s*v[0-9]+\n+**\tvsext\\.vf2\\tv[1-9][0-9]?,\\s*v[0-9]+,\\s*v0.t\n+**\tvse16.v\\tv[0-9]+,0\\([a-x0-9]+\\)\n+**\tret\n+*/\n+void f6 (void * in, void *out)\n+{\n+    vbool64_t mask = *(vbool64_t*)in;\n+    asm volatile (\"\":::\"memory\");\n+    vint8mf8_t v = __riscv_vle8_v_i8mf8 (in, 4);\n+    vint8mf8_t v2 = __riscv_vle8_v_i8mf8_tumu (mask, v, in, 4);\n+    vint16mf4_t v3 = __riscv_vsext_vf2_i16mf4 (v2, 4);\n+    vint16mf4_t v4 = __riscv_vsext_vf2_i16mf4_tumu (mask, v3, v2, 4);\n+    __riscv_vse16_v_i16mf4 (out, v4, 4);\n+}"}]}