{"sha": "853a4203b72296bc59f14ae6e8c467208e9679d2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODUzYTQyMDNiNzIyOTZiYzU5ZjE0YWU2ZThjNDY3MjA4ZTk2NzlkMg==", "commit": {"author": {"name": "Francois-Xavier Coudert", "email": "coudert@clipper.ens.fr", "date": "2005-06-17T16:20:29Z"}, "committer": {"name": "Fran\u00e7ois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2005-06-17T16:20:29Z"}, "message": "re PR libfortran/19155 ([4.0 only] blanks not treated as zeros in 'E' format read (NIST FM110.FOR))\n\n\tPR libfortran/19155\n\t* io/read.c (convert_real): strtod can set errno to EINVAL on an\n\tempty string, but we shouldn't have an error in that case.\n\nFrom-SVN: r101128", "tree": {"sha": "12c6f945d4ce6fba2365be96a4264b2795c7a182", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/12c6f945d4ce6fba2365be96a4264b2795c7a182"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/853a4203b72296bc59f14ae6e8c467208e9679d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/853a4203b72296bc59f14ae6e8c467208e9679d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/853a4203b72296bc59f14ae6e8c467208e9679d2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/853a4203b72296bc59f14ae6e8c467208e9679d2/comments", "author": null, "committer": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a2eafc7685e37c0077d9a4c4598b76bab9bec5d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2eafc7685e37c0077d9a4c4598b76bab9bec5d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a2eafc7685e37c0077d9a4c4598b76bab9bec5d2"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "2e7a7a264ce2ccbd8aa51b1193b25df2ab884278", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/853a4203b72296bc59f14ae6e8c467208e9679d2/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/853a4203b72296bc59f14ae6e8c467208e9679d2/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=853a4203b72296bc59f14ae6e8c467208e9679d2", "patch": "@@ -1,3 +1,9 @@\n+2005-06-18  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n+\n+\tPR libfortran/19155\n+\t* io/read.c (convert_real): strtod can set errno to EINVAL on an\n+\tempty string, but we shouldn't have an error in that case.\n+\n 2005-06-17  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n \n \tPR libfortran/19216"}, {"sha": "556e0af38b31a5964ccf0be96cf782f69428a55d", "filename": "libgfortran/io/read.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/853a4203b72296bc59f14ae6e8c467208e9679d2/libgfortran%2Fio%2Fread.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/853a4203b72296bc59f14ae6e8c467208e9679d2/libgfortran%2Fio%2Fread.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Fread.c?ref=853a4203b72296bc59f14ae6e8c467208e9679d2", "patch": "@@ -122,7 +122,7 @@ convert_real (void *dest, const char *buffer, int length)\n       internal_error (\"Unsupported real kind during IO\");\n     }\n \n-  if (errno != 0)\n+  if (errno != 0 && errno != EINVAL)\n     {\n       generate_error (ERROR_READ_VALUE,\n \t\t      \"Range error during floating point read\");"}]}