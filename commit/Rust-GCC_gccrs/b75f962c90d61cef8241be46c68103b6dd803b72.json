{"sha": "b75f962c90d61cef8241be46c68103b6dd803b72", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yjc1Zjk2MmM5MGQ2MWNlZjgyNDFiZTQ2YzY4MTAzYjZkZDgwM2I3Mg==", "commit": {"author": {"name": "Bernd Schmidt", "email": "bernds@codesourcery.com", "date": "2012-02-14T23:26:47Z"}, "committer": {"name": "Bernd Schmidt", "email": "bernds@gcc.gnu.org", "date": "2012-02-14T23:26:47Z"}, "message": "haifa-sched.c (prune_ready_list): Ensure that if there is a sched-group insn...\n\n\t* haifa-sched.c (prune_ready_list): Ensure that if there is a\n\tsched-group insn, it either remains alone or the entire list is\n\tpruned.\n\nFrom-SVN: r184238", "tree": {"sha": "8d227cbc0a5c0e3b40c96092b667476e44770a86", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8d227cbc0a5c0e3b40c96092b667476e44770a86"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b75f962c90d61cef8241be46c68103b6dd803b72", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b75f962c90d61cef8241be46c68103b6dd803b72", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b75f962c90d61cef8241be46c68103b6dd803b72", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b75f962c90d61cef8241be46c68103b6dd803b72/comments", "author": null, "committer": null, "parents": [{"sha": "5cd3514cddd76e0a33208f85c3a623c7fb53470c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5cd3514cddd76e0a33208f85c3a623c7fb53470c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5cd3514cddd76e0a33208f85c3a623c7fb53470c"}], "stats": {"total": 29, "additions": 25, "deletions": 4}, "files": [{"sha": "1536017e43f391e9a90f1d55f90b8e5ceeb642d4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b75f962c90d61cef8241be46c68103b6dd803b72/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b75f962c90d61cef8241be46c68103b6dd803b72/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b75f962c90d61cef8241be46c68103b6dd803b72", "patch": "@@ -1,3 +1,9 @@\n+2012-02-15  Bernd Schmidt  <bernds@codesourcery.com>\n+\n+\t* haifa-sched.c (prune_ready_list): Ensure that if there is a\n+\tsched-group insn, it either remains alone or the entire list is\n+\tpruned.\n+\n 2012-02-14  Jonathan Wakely  <jwakely.gcc@gmail.com>\n \n \t* doc/install.texi (Prerequisites): Fix grammar."}, {"sha": "b6a8b0c8884a4eda9850891481bb19fbad918326", "filename": "gcc/haifa-sched.c", "status": "modified", "additions": 19, "deletions": 4, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b75f962c90d61cef8241be46c68103b6dd803b72/gcc%2Fhaifa-sched.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b75f962c90d61cef8241be46c68103b6dd803b72/gcc%2Fhaifa-sched.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhaifa-sched.c?ref=b75f962c90d61cef8241be46c68103b6dd803b72", "patch": "@@ -1,6 +1,6 @@\n /* Instruction scheduling pass.\n    Copyright (C) 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000,\n-   2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011\n+   2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012\n    Free Software Foundation, Inc.\n    Contributed by Michael Tiemann (tiemann@cygnus.com) Enhanced by,\n    and currently maintained by, Jim Wilson (wilson@cygnus.com)\n@@ -3945,6 +3945,7 @@ prune_ready_list (state_t temp_state, bool first_cycle_insn_p,\n \t\t  bool shadows_only_p, bool modulo_epilogue_p)\n {\n   int i;\n+  bool sched_group_found = false;\n \n  restart:\n   for (i = 0; i < ready.n_ready; i++)\n@@ -3953,13 +3954,27 @@ prune_ready_list (state_t temp_state, bool first_cycle_insn_p,\n       int cost = 0;\n       const char *reason = \"resource conflict\";\n \n-      if (modulo_epilogue_p && !DEBUG_INSN_P (insn)\n-\t  && INSN_EXACT_TICK (insn) == INVALID_TICK)\n+      if (DEBUG_INSN_P (insn))\n+\tcontinue;\n+\n+      if (SCHED_GROUP_P (insn) && !sched_group_found)\n+\t{\n+\t  sched_group_found = true;\n+\t  if (i > 0)\n+\t    goto restart;\n+\t}\n+\n+      if (sched_group_found && !SCHED_GROUP_P (insn))\n+\t{\n+\t  cost = 1;\n+\t  reason = \"not in sched group\";\n+\t}\n+      else if (modulo_epilogue_p && INSN_EXACT_TICK (insn) == INVALID_TICK)\n \t{\n \t  cost = max_insn_queue_index;\n \t  reason = \"not an epilogue insn\";\n \t}\n-      if (shadows_only_p && !DEBUG_INSN_P (insn) && !SHADOW_P (insn))\n+      else if (shadows_only_p && !SHADOW_P (insn))\n \t{\n \t  cost = 1;\n \t  reason = \"not a shadow\";"}]}