{"sha": "8eb8461dc13600aafd77b89928196366a4747786", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGViODQ2MWRjMTM2MDBhYWZkNzdiODk5MjgxOTYzNjZhNDc0Nzc4Ng==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2016-10-13T12:58:24Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2016-10-13T12:58:24Z"}, "message": "[multiple changes]\n\n2016-10-13  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* sem_ch6.adb (Create_Extra_Formals): Generate\n\tan Itype reference for the object extra formal in case the\n\tsubprogram is called within the same or nested scope.\n\n2016-10-13  Claire Dross  <dross@adacore.com>\n\n\t* sem_ch5.adb (Analyze_Iterator_Specification):\n\tAlso create a renaming in GNATprove mode.\n\n2016-10-13  Ed Schonberg  <schonberg@adacore.com>\n\n\t* freeze.adb (Freeze_Fixed_Point_Type): in SPARK mode, the\n\tgiven bounds of the type must be strictly representable, and the\n\trange reduction by one delta (\"shaving\") allowed by the Ada RM,\n\tis not applicable in SPARK.\n\n2016-10-13  Javier Miranda  <miranda@adacore.com>\n\n\t* debug.adb (switch d.9): Used to temporarily disable the support\n\tneeded for this enhancement since it causes regressions with\n\tlarge sources.\n\t* gnat1drv.adb (Post_Compilation_Validation_Checks): Temporarily\n\tleave the validation of pragmas Compile_Time_Warning and\n\tCompile_Time_Error under control of -gnatd.9/\n\nFrom-SVN: r241115", "tree": {"sha": "1b587cbe536285f12b1c92d914937242203eeb6c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1b587cbe536285f12b1c92d914937242203eeb6c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8eb8461dc13600aafd77b89928196366a4747786", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8eb8461dc13600aafd77b89928196366a4747786", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8eb8461dc13600aafd77b89928196366a4747786", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8eb8461dc13600aafd77b89928196366a4747786/comments", "author": null, "committer": null, "parents": [{"sha": "870ce4d51bfe22b2c86fd5ee9fa2e5f4642cd572", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/870ce4d51bfe22b2c86fd5ee9fa2e5f4642cd572", "html_url": "https://github.com/Rust-GCC/gccrs/commit/870ce4d51bfe22b2c86fd5ee9fa2e5f4642cd572"}], "stats": {"total": 136, "additions": 106, "deletions": 30}, "files": [{"sha": "71014fb429b8507dcd5f109ad2c418eab507cc04", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8eb8461dc13600aafd77b89928196366a4747786/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8eb8461dc13600aafd77b89928196366a4747786/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=8eb8461dc13600aafd77b89928196366a4747786", "patch": "@@ -1,3 +1,30 @@\n+2016-10-13  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* sem_ch6.adb (Create_Extra_Formals): Generate\n+\tan Itype reference for the object extra formal in case the\n+\tsubprogram is called within the same or nested scope.\n+\n+2016-10-13  Claire Dross  <dross@adacore.com>\n+\n+\t* sem_ch5.adb (Analyze_Iterator_Specification):\n+\tAlso create a renaming in GNATprove mode.\n+\n+2016-10-13  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* freeze.adb (Freeze_Fixed_Point_Type): in SPARK mode, the\n+\tgiven bounds of the type must be strictly representable, and the\n+\trange reduction by one delta (\"shaving\") allowed by the Ada RM,\n+\tis not applicable in SPARK.\n+\n+2016-10-13  Javier Miranda  <miranda@adacore.com>\n+\n+\t* debug.adb (switch d.9): Used to temporarily disable the support\n+\tneeded for this enhancement since it causes regressions with\n+\tlarge sources.\n+\t* gnat1drv.adb (Post_Compilation_Validation_Checks): Temporarily\n+\tleave the validation of pragmas Compile_Time_Warning and\n+\tCompile_Time_Error under control of -gnatd.9/\n+\n 2016-10-13  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* sem_ch10.adb (Entity_Needs_Body): A generic"}, {"sha": "d9367375e7bfff5413f4465dc6070f5bca3ccdd6", "filename": "gcc/ada/debug.adb", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8eb8461dc13600aafd77b89928196366a4747786/gcc%2Fada%2Fdebug.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8eb8461dc13600aafd77b89928196366a4747786/gcc%2Fada%2Fdebug.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdebug.adb?ref=8eb8461dc13600aafd77b89928196366a4747786", "patch": "@@ -163,7 +163,7 @@ package body Debug is\n    --  d.6\n    --  d.7\n    --  d.8\n-   --  d.9\n+   --  d.9  Enable validation of pragma Compile_Time_[Error/Warning]\n \n    --  Debug flags for binder (GNATBIND)\n \n@@ -774,6 +774,10 @@ package body Debug is\n    --  d.5  By default a subprogram imported generates a subprogram profile.\n    --       This debug flag disables this generation when generating C code,\n    --       assuming a proper #include will be used instead.\n+   --\n+   --  d.9  Flag used temporarily to enable the validation of pragmas Compile_\n+   --       Time_Error and Compile_Time_Warning after the back end has been\n+   --       called.\n \n    ------------------------------------------\n    -- Documentation for Binder Debug Flags --"}, {"sha": "96ae4e4c98c3d394115c1d77bed14fb9f960b697", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 30, "deletions": 11, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8eb8461dc13600aafd77b89928196366a4747786/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8eb8461dc13600aafd77b89928196366a4747786/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=8eb8461dc13600aafd77b89928196366a4747786", "patch": "@@ -7661,18 +7661,37 @@ package body Freeze is\n       --  Check for shaving\n \n       if Comes_From_Source (Typ) then\n-         if Orig_Lo < Expr_Value_R (Lo) then\n-            Error_Msg_N\n-              (\"declared low bound of type & is outside type range??\", Typ);\n-            Error_Msg_N\n-              (\"\\low bound adjusted up by delta (RM 3.5.9(13))??\", Typ);\n-         end if;\n \n-         if Orig_Hi > Expr_Value_R (Hi) then\n-            Error_Msg_N\n-              (\"declared high bound of type & is outside type range??\", Typ);\n-            Error_Msg_N\n-              (\"\\high bound adjusted down by delta (RM 3.5.9(13))??\", Typ);\n+         --  In SPARK mode the given bounds must be strictly representable\n+\n+         if SPARK_Mode = On then\n+            if Orig_Lo < Expr_Value_R (Lo) then\n+               Error_Msg_NE\n+                 (\"declared low bound of type & is outside type range\",\n+                  Lo, Typ);\n+            end if;\n+\n+            if Orig_Hi > Expr_Value_R (Hi) then\n+               Error_Msg_NE\n+                 (\"declared high bound of type & is outside type range\",\n+                  Hi, Typ);\n+            end if;\n+\n+         else\n+            if Orig_Lo < Expr_Value_R (Lo) then\n+               Error_Msg_N\n+                 (\"declared low bound of type & is outside type range??\", Typ);\n+               Error_Msg_N\n+                 (\"\\low bound adjusted up by delta (RM 3.5.9(13))??\", Typ);\n+            end if;\n+\n+            if Orig_Hi > Expr_Value_R (Hi) then\n+               Error_Msg_N\n+                 (\"declared high bound of type & is outside type range??\",\n+                  Typ);\n+               Error_Msg_N\n+                 (\"\\high bound adjusted down by delta (RM 3.5.9(13))??\", Typ);\n+            end if;\n          end if;\n       end if;\n    end Freeze_Fixed_Point_Type;"}, {"sha": "605bac59858fff519f444519764fff196c1b86f5", "filename": "gcc/ada/gnat1drv.adb", "status": "modified", "additions": 12, "deletions": 7, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8eb8461dc13600aafd77b89928196366a4747786/gcc%2Fada%2Fgnat1drv.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8eb8461dc13600aafd77b89928196366a4747786/gcc%2Fada%2Fgnat1drv.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat1drv.adb?ref=8eb8461dc13600aafd77b89928196366a4747786", "patch": "@@ -875,13 +875,18 @@ procedure Gnat1drv is\n       --  and alignment annotated by the backend where possible). We need to\n       --  unlock temporarily these tables to reanalyze their expression.\n \n-      Atree.Unlock;\n-      Nlists.Unlock;\n-      Sem.Unlock;\n-      Sem_Ch13.Validate_Compile_Time_Warning_Errors;\n-      Sem.Lock;\n-      Nlists.Lock;\n-      Atree.Lock;\n+      --  ??? temporarily disabled since it causes regressions with large\n+      --  sources\n+\n+      if Debug_Flag_Dot_9 then\n+         Atree.Unlock;\n+         Nlists.Unlock;\n+         Sem.Unlock;\n+         Sem_Ch13.Validate_Compile_Time_Warning_Errors;\n+         Sem.Lock;\n+         Nlists.Lock;\n+         Atree.Lock;\n+      end if;\n \n       --  Validate unchecked conversions (using the values for size and\n       --  alignment annotated by the backend where possible)."}, {"sha": "5897454d427c1315fd7b114ed0275f569bc372c9", "filename": "gcc/ada/sem_ch5.adb", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8eb8461dc13600aafd77b89928196366a4747786/gcc%2Fada%2Fsem_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8eb8461dc13600aafd77b89928196366a4747786/gcc%2Fada%2Fsem_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch5.adb?ref=8eb8461dc13600aafd77b89928196366a4747786", "patch": "@@ -1932,13 +1932,11 @@ package body Sem_Ch5 is\n         and then (Nkind (Parent (N)) /= N_Quantified_Expression\n                    or else Operating_Mode = Check_Semantics)\n \n-        --  Do not perform this expansion in SPARK mode, since the formal\n-        --  verification directly deals with the source form of the iterator.\n-        --  Ditto for ASIS and when expansion is disabled, where the temporary\n-        --  may hide the transformation of a selected component into a prefixed\n-        --  function call, and references need to see the original expression.\n+        --  Do not perform this expansion for ASIS and when expansion is\n+        --  disabled, where the temporary may hide the transformation of a\n+        --  selected component into a prefixed function call, and references\n+        --  need to see the original expression.\n \n-        and then not GNATprove_Mode\n         and then Expander_Active\n       then\n          declare"}, {"sha": "814d118300362534f23862d384cebb3a4831b1ee", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 28, "deletions": 5, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8eb8461dc13600aafd77b89928196366a4747786/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8eb8461dc13600aafd77b89928196366a4747786/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=8eb8461dc13600aafd77b89928196366a4747786", "patch": "@@ -7307,11 +7307,9 @@ package body Sem_Ch6 is\n    --------------------------\n \n    procedure Create_Extra_Formals (E : Entity_Id) is\n-      Formal      : Entity_Id;\n       First_Extra : Entity_Id := Empty;\n-      Last_Extra  : Entity_Id;\n-      Formal_Type : Entity_Id;\n-      P_Formal    : Entity_Id := Empty;\n+      Formal      : Entity_Id;\n+      Last_Extra  : Entity_Id := Empty;\n \n       function Add_Extra_Formal\n         (Assoc_Entity : Entity_Id;\n@@ -7377,6 +7375,11 @@ package body Sem_Ch6 is\n          return EF;\n       end Add_Extra_Formal;\n \n+      --  Local variables\n+\n+      Formal_Type : Entity_Id;\n+      P_Formal    : Entity_Id := Empty;\n+\n    --  Start of processing for Create_Extra_Formals\n \n    begin\n@@ -7402,7 +7405,6 @@ package body Sem_Ch6 is\n          P_Formal := First_Formal (Alias (E));\n       end if;\n \n-      Last_Extra := Empty;\n       Formal := First_Formal (E);\n       while Present (Formal) loop\n          Last_Extra := Formal;\n@@ -7548,6 +7550,7 @@ package body Sem_Ch6 is\n             Result_Subt : constant Entity_Id := Etype (E);\n             Full_Subt   : constant Entity_Id := Available_View (Result_Subt);\n             Formal_Typ  : Entity_Id;\n+            Subp_Decl   : Node_Id;\n \n             Discard : Entity_Id;\n             pragma Warnings (Off, Discard);\n@@ -7630,6 +7633,26 @@ package body Sem_Ch6 is\n \n             Layout_Type (Formal_Typ);\n \n+            --  Force the definition of the Itype in case of internal function\n+            --  calls within the same or nested scope.\n+\n+            if Is_Subprogram_Or_Generic_Subprogram (E) then\n+               Subp_Decl := Parent (E);\n+\n+               --  The insertion point for an Itype reference should be after\n+               --  the unit declaration node of the subprogram. An exception\n+               --  to this are inherited operations from a parent type in which\n+               --  case the derived type acts as their parent.\n+\n+               if Nkind_In (Subp_Decl, N_Function_Specification,\n+                                       N_Procedure_Specification)\n+               then\n+                  Subp_Decl := Parent (Subp_Decl);\n+               end if;\n+\n+               Build_Itype_Reference (Formal_Typ, Subp_Decl);\n+            end if;\n+\n             Discard :=\n               Add_Extra_Formal\n                 (E, Formal_Typ, E, BIP_Formal_Suffix (BIP_Object_Access));"}]}