{"sha": "3eea1aed40a62c7ba810521ce76282d8964de5e2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2VlYTFhZWQ0MGE2MmM3YmE4MTA1MjFjZTc2MjgyZDg5NjRkZTVlMg==", "commit": {"author": {"name": "Brad Garcia", "email": "bgarcia@laurelnetworks.com", "date": "2000-09-07T21:07:56Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2000-09-07T21:07:56Z"}, "message": "000-09-07  Brad Garcia  <bgarcia@laurelnetworks.com>\n\n\t* bits/stl_tree.h: Make operators !=, == type safe for map, set.\n\t* testsuite/23_containers/set_operators.cc: New file. Should not\n\tcompile.\n\t* testsuite/23_containers/map_operators.cc: New file. Ditto.\n\nFrom-SVN: r36246", "tree": {"sha": "97820b99e42d6e4ae99fbde623284c814cfef027", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/97820b99e42d6e4ae99fbde623284c814cfef027"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3eea1aed40a62c7ba810521ce76282d8964de5e2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3eea1aed40a62c7ba810521ce76282d8964de5e2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3eea1aed40a62c7ba810521ce76282d8964de5e2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3eea1aed40a62c7ba810521ce76282d8964de5e2/comments", "author": null, "committer": null, "parents": [{"sha": "771c4df34e750e7263595e550e214a2d969591e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/771c4df34e750e7263595e550e214a2d969591e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/771c4df34e750e7263595e550e214a2d969591e8"}], "stats": {"total": 86, "additions": 86, "deletions": 0}, "files": [{"sha": "4a46d811ff1df361dd9757d1c654df431726a731", "filename": "libstdc++-v3/testsuite/23_containers/map_operators.cc", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3eea1aed40a62c7ba810521ce76282d8964de5e2/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap_operators.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3eea1aed40a62c7ba810521ce76282d8964de5e2/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap_operators.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap_operators.cc?ref=3eea1aed40a62c7ba810521ce76282d8964de5e2", "patch": "@@ -0,0 +1,44 @@\n+// 2000-09-07 bgarcia@laurelnetworks.com\n+\n+// Copyright (C) 2000 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// 23.3.4 template class multiset\n+\n+#include <map>\n+#include <string>\n+\n+// map and set\n+// libstdc++/86: map & set iterator comparisons are not type-safe\n+// XXX this is XFAIL for the time being, ie this should not compile\n+int main(void)\n+{\n+  bool test = true;\n+  std::map<unsigned int, int> mapByIndex;\n+  std::map<std::string, unsigned> mapByName;\n+  \n+  mapByIndex.insert(std::pair<unsigned, int>(0, 1));\n+  mapByIndex.insert(std::pair<unsigned, int>(6, 5));\n+  \n+  std::map<unsigned, int>::iterator itr(mapByIndex.begin());\n+  \n+  test &= itr != mapByName.end(); // XXX - notice, it's not mapByIndex!!\n+  test &= itr == mapByName.end(); // XXX - notice, it's not mapByIndex!!\n+\n+  return 0;\n+}"}, {"sha": "42e01e9de4af76ce65d6a632c2712c9027fc3f08", "filename": "libstdc++-v3/testsuite/23_containers/set_operators.cc", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3eea1aed40a62c7ba810521ce76282d8964de5e2/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset_operators.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3eea1aed40a62c7ba810521ce76282d8964de5e2/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset_operators.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset_operators.cc?ref=3eea1aed40a62c7ba810521ce76282d8964de5e2", "patch": "@@ -0,0 +1,42 @@\n+// 2000-09-07 bgarcia@laurelnetworks.com\n+\n+// Copyright (C) 2000 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// 23.3.4 template class multiset\n+\n+#include <set>\n+#include <string>\n+\n+// map and set\n+// libstdc++/86: map & set iterator comparisons are not type-safe\n+// XXX this is XFAIL for the time being, ie this should not compile\n+int main(void)\n+{\n+  bool test = true;\n+\n+  std::set<unsigned int> setByIndex;\n+  std::set<std::string> setByName;\n+  \n+  std::set<unsigned int>::iterator itr(setByIndex.begin());\n+  \n+  test &= itr != setByName.end(); // XXX - notice, it's not setByIndex!!\n+  test &= itr == setByName.end(); // XXX - notice, it's not setByIndex!!\n+\n+  return 0;\n+}"}]}