{"sha": "d333c3ebce0df3f2c4d976698bea0d96642a2ead", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDMzM2MzZWJjZTBkZjNmMmM0ZDk3NjY5OGJlYTBkOTY2NDJhMmVhZA==", "commit": {"author": {"name": "David S. Miller", "email": "davem@davemloft.net", "date": "2012-05-03T22:19:35Z"}, "committer": {"name": "David S. Miller", "email": "davem@gcc.gnu.org", "date": "2012-05-03T22:19:35Z"}, "message": "Fix long double float miscompilations on sparc 64-bit.\n\n\tPR target/52684\n\t* config/sparc/sparc.c (emit_soft_tfmode_libcall): If we pass a\n\tMEM directly into a libcall, mark it's MEM_EXPR as addressable.\n\t(sparc_emit_float_lib_cmp): Likewise.\n\nFrom-SVN: r187120", "tree": {"sha": "01a989235afba1e8b1a9134a9399b245310f5a14", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/01a989235afba1e8b1a9134a9399b245310f5a14"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d333c3ebce0df3f2c4d976698bea0d96642a2ead", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d333c3ebce0df3f2c4d976698bea0d96642a2ead", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d333c3ebce0df3f2c4d976698bea0d96642a2ead", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d333c3ebce0df3f2c4d976698bea0d96642a2ead/comments", "author": {"login": "davem330", "id": 1053866, "node_id": "MDQ6VXNlcjEwNTM4NjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1053866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davem330", "html_url": "https://github.com/davem330", "followers_url": "https://api.github.com/users/davem330/followers", "following_url": "https://api.github.com/users/davem330/following{/other_user}", "gists_url": "https://api.github.com/users/davem330/gists{/gist_id}", "starred_url": "https://api.github.com/users/davem330/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davem330/subscriptions", "organizations_url": "https://api.github.com/users/davem330/orgs", "repos_url": "https://api.github.com/users/davem330/repos", "events_url": "https://api.github.com/users/davem330/events{/privacy}", "received_events_url": "https://api.github.com/users/davem330/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "65d512d10ecd585b72a099c54453831c40d2e4f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65d512d10ecd585b72a099c54453831c40d2e4f7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/65d512d10ecd585b72a099c54453831c40d2e4f7"}], "stats": {"total": 30, "additions": 26, "deletions": 4}, "files": [{"sha": "a310e38c7dd083f96a07e422d31588fc572ce189", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d333c3ebce0df3f2c4d976698bea0d96642a2ead/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d333c3ebce0df3f2c4d976698bea0d96642a2ead/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d333c3ebce0df3f2c4d976698bea0d96642a2ead", "patch": "@@ -1,3 +1,10 @@\n+2012-05-03  David S. Miller  <davem@davemloft.net>\n+\n+\tPR target/52684\n+\t* config/sparc/sparc.c (emit_soft_tfmode_libcall): If we pass a\n+\tMEM directly into a libcall, mark it's MEM_EXPR as addressable.\n+\t(sparc_emit_float_lib_cmp): Likewise.\n+\n 2012-05-03  Michael Meissner  <meissner@linux.vnet.ibm.com>\n \n \tPR target/53199"}, {"sha": "0db171854b4bc04431a18bf4600504d06a19e302", "filename": "gcc/config/sparc/sparc.c", "status": "modified", "additions": 19, "deletions": 4, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d333c3ebce0df3f2c4d976698bea0d96642a2ead/gcc%2Fconfig%2Fsparc%2Fsparc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d333c3ebce0df3f2c4d976698bea0d96642a2ead/gcc%2Fconfig%2Fsparc%2Fsparc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.c?ref=d333c3ebce0df3f2c4d976698bea0d96642a2ead", "patch": "@@ -1,7 +1,7 @@\n /* Subroutines for insn-output.c for SPARC.\n    Copyright (C) 1987, 1988, 1989, 1992, 1993, 1994, 1995, 1996, 1997, 1998,\n    1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010,\n-   2011\n+   2011, 2012\n    Free Software Foundation, Inc.\n    Contributed by Michael Tiemann (tiemann@cygnus.com)\n    64-bit SPARC-V9 support by Michael Tiemann, Jim Wilson, and Doug Evans,\n@@ -2724,7 +2724,12 @@ emit_soft_tfmode_libcall (const char *func_name, int nargs, rtx *operands)\n \n \t  if (GET_CODE (this_arg) == MEM\n \t      && ! force_stack_temp)\n-\t    this_arg = XEXP (this_arg, 0);\n+\t    {\n+\t      tree expr = MEM_EXPR (this_arg);\n+\t      if (expr)\n+\t\tmark_addressable (expr);\n+\t      this_arg = XEXP (this_arg, 0);\n+\t    }\n \t  else if (CONSTANT_P (this_arg)\n \t\t   && ! force_stack_temp)\n \t    {\n@@ -7413,15 +7418,25 @@ sparc_emit_float_lib_cmp (rtx x, rtx y, enum rtx_code comparison)\n   if (TARGET_ARCH64)\n     {\n       if (MEM_P (x))\n-\tslot0 = x;\n+\t{\n+\t  tree expr = MEM_EXPR (x);\n+\t  if (expr)\n+\t    mark_addressable (expr);\n+\t  slot0 = x;\n+\t}\n       else\n \t{\n \t  slot0 = assign_stack_temp (TFmode, GET_MODE_SIZE(TFmode), 0);\n \t  emit_move_insn (slot0, x);\n \t}\n \n       if (MEM_P (y))\n-\tslot1 = y;\n+\t{\n+\t  tree expr = MEM_EXPR (y);\n+\t  if (expr)\n+\t    mark_addressable (expr);\n+\t  slot1 = y;\n+\t}\n       else\n \t{\n \t  slot1 = assign_stack_temp (TFmode, GET_MODE_SIZE(TFmode), 0);"}]}