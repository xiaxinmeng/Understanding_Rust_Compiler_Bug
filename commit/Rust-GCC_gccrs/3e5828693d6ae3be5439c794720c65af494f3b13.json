{"sha": "3e5828693d6ae3be5439c794720c65af494f3b13", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2U1ODI4NjkzZDZhZTNiZTU0MzljNzk0NzIwYzY1YWY0OTRmM2IxMw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-03T08:26:17Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-03T08:26:17Z"}, "message": "[multiple changes]\n\n2011-08-03  Gary Dismukes  <dismukes@adacore.com>\n\n\t* sem_ch3.adb (Build_Derived_Record_Type): Test the Derive_Subps formal\n\tas a condition for the delayed call to Derived_Subprograms done for the\n\tcase of the rewriting of a derived type that constrains the\n\tdiscriminants of its parent type.\n\tAvoids redundant subprogram derivations for private subtype derivations.\n\n2011-08-03  Javier Miranda  <miranda@adacore.com>\n\n\t* exp_aggr.adb (Init_Hidden_Discriminants): New subprogram of\n\tBuild_Record_Aggr_Code.\n\t(Build_Record_Aggr_Code): Add missing support to initialize hidden\n\tdiscriminants in extension aggregates.\n\n2011-08-03  Emmanuel Briot  <briot@adacore.com>\n\n\t* prj-pp.adb (Print): also output project qualifiers, since in\n\tparticular \"aggregate\" is mandatory in an aggregate project.\n\n2011-08-03  Emmanuel Briot  <briot@adacore.com>\n\n\t* prj-part.adb, prj.adb, prj.ads, prj-nmsc.adb, prj-env.adb:\n\t(Debug_Output): new function.\n\nFrom-SVN: r177240", "tree": {"sha": "803f7bb6b3bc1622ade0b961c533a13bf1248b45", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/803f7bb6b3bc1622ade0b961c533a13bf1248b45"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3e5828693d6ae3be5439c794720c65af494f3b13", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e5828693d6ae3be5439c794720c65af494f3b13", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e5828693d6ae3be5439c794720c65af494f3b13", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e5828693d6ae3be5439c794720c65af494f3b13/comments", "author": null, "committer": null, "parents": [{"sha": "56e941863ba558a7a3426c686d6e5c08eefca90e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56e941863ba558a7a3426c686d6e5c08eefca90e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/56e941863ba558a7a3426c686d6e5c08eefca90e"}], "stats": {"total": 622, "additions": 352, "deletions": 270}, "files": [{"sha": "a572f6cde9e7924990b920ed9354d5fd9171b0df", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e5828693d6ae3be5439c794720c65af494f3b13/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e5828693d6ae3be5439c794720c65af494f3b13/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=3e5828693d6ae3be5439c794720c65af494f3b13", "patch": "@@ -1,3 +1,28 @@\n+2011-08-03  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* sem_ch3.adb (Build_Derived_Record_Type): Test the Derive_Subps formal\n+\tas a condition for the delayed call to Derived_Subprograms done for the\n+\tcase of the rewriting of a derived type that constrains the\n+\tdiscriminants of its parent type.\n+\tAvoids redundant subprogram derivations for private subtype derivations.\n+\n+2011-08-03  Javier Miranda  <miranda@adacore.com>\n+\n+\t* exp_aggr.adb (Init_Hidden_Discriminants): New subprogram of\n+\tBuild_Record_Aggr_Code.\n+\t(Build_Record_Aggr_Code): Add missing support to initialize hidden\n+\tdiscriminants in extension aggregates.\n+\n+2011-08-03  Emmanuel Briot  <briot@adacore.com>\n+\n+\t* prj-pp.adb (Print): also output project qualifiers, since in\n+\tparticular \"aggregate\" is mandatory in an aggregate project.\n+\n+2011-08-03  Emmanuel Briot  <briot@adacore.com>\n+\n+\t* prj-part.adb, prj.adb, prj.ads, prj-nmsc.adb, prj-env.adb:\n+\t(Debug_Output): new function.\n+\n 2011-08-03  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gnat_ugn.texi: Document -Wstack-usage."}, {"sha": "c083805761c36fd8c04c1748b96348cc4017ec80", "filename": "gcc/ada/exp_aggr.adb", "status": "modified", "additions": 67, "deletions": 53, "changes": 120, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e5828693d6ae3be5439c794720c65af494f3b13/gcc%2Fada%2Fexp_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e5828693d6ae3be5439c794720c65af494f3b13/gcc%2Fada%2Fexp_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_aggr.adb?ref=3e5828693d6ae3be5439c794720c65af494f3b13", "patch": "@@ -1854,6 +1854,11 @@ package body Exp_Aggr is\n       --  to finalization list F. Init_Pr conditions the call to the init proc\n       --  since it may already be done due to ancestor initialization.\n \n+      procedure Init_Hidden_Discriminants (Typ : Entity_Id; List : List_Id);\n+      --  If Typ is derived, and constrains discriminants of the parent type,\n+      --  these discriminants are not components of the aggregate, and must be\n+      --  initialized. The assignments are appended to List.\n+\n       function Is_Int_Range_Bounds (Bounds : Node_Id) return Boolean;\n       --  Check whether Bounds is a range node and its lower and higher bounds\n       --  are integers literals.\n@@ -2156,6 +2161,56 @@ package body Exp_Aggr is\n          return L;\n       end Init_Controller;\n \n+      -------------------------------\n+      -- Init_Hidden_Discriminants --\n+      -------------------------------\n+\n+      procedure Init_Hidden_Discriminants (Typ : Entity_Id; List : List_Id) is\n+         Btype       : Entity_Id;\n+         Parent_Type : Entity_Id;\n+         Disc        : Entity_Id;\n+         Discr_Val   : Elmt_Id;\n+\n+      begin\n+         Btype := Base_Type (Typ);\n+         while Is_Derived_Type (Btype)\n+            and then Present (Stored_Constraint (Btype))\n+         loop\n+            Parent_Type := Etype (Btype);\n+\n+            Disc := First_Discriminant (Parent_Type);\n+            Discr_Val := First_Elmt (Stored_Constraint (Base_Type (Typ)));\n+            while Present (Discr_Val) loop\n+\n+               --  Only those discriminants of the parent that are not\n+               --  renamed by discriminants of the derived type need to\n+               --  be added explicitly.\n+\n+               if not Is_Entity_Name (Node (Discr_Val))\n+                 or else Ekind (Entity (Node (Discr_Val))) /= E_Discriminant\n+               then\n+                  Comp_Expr :=\n+                    Make_Selected_Component (Loc,\n+                      Prefix        => New_Copy_Tree (Target),\n+                      Selector_Name => New_Occurrence_Of (Disc, Loc));\n+\n+                  Instr :=\n+                    Make_OK_Assignment_Statement (Loc,\n+                      Name       => Comp_Expr,\n+                      Expression => New_Copy_Tree (Node (Discr_Val)));\n+\n+                  Set_No_Ctrl_Actions (Instr);\n+                  Append_To (List, Instr);\n+               end if;\n+\n+               Next_Discriminant (Disc);\n+               Next_Elmt (Discr_Val);\n+            end loop;\n+\n+            Btype := Base_Type (Parent_Type);\n+         end loop;\n+      end Init_Hidden_Discriminants;\n+\n       -------------------------\n       -- Is_Int_Range_Bounds --\n       -------------------------\n@@ -2741,6 +2796,17 @@ package body Exp_Aggr is\n             end if;\n          end;\n \n+         --  Generate assignments of hidden assignments. If the base type is an\n+         --  unchecked union, the discriminants are unknown to the back-end and\n+         --  absent from a value of the type, so assignments for them are not\n+         --  emitted.\n+\n+         if Has_Discriminants (Typ)\n+           and then not Is_Unchecked_Union (Base_Type (Typ))\n+         then\n+            Init_Hidden_Discriminants (Typ, L);\n+         end if;\n+\n       --  Normal case (not an extension aggregate)\n \n       else\n@@ -2752,59 +2818,7 @@ package body Exp_Aggr is\n          if Has_Discriminants (Typ)\n            and then not Is_Unchecked_Union (Base_Type (Typ))\n          then\n-            --  If the type is derived, and constrains discriminants of the\n-            --  parent type, these discriminants are not components of the\n-            --  aggregate, and must be initialized explicitly. They are not\n-            --  visible components of the object, but can become visible with\n-            --  a view conversion to the ancestor.\n-\n-            declare\n-               Btype      : Entity_Id;\n-               Parent_Type : Entity_Id;\n-               Disc        : Entity_Id;\n-               Discr_Val   : Elmt_Id;\n-\n-            begin\n-               Btype := Base_Type (Typ);\n-               while Is_Derived_Type (Btype)\n-                  and then Present (Stored_Constraint (Btype))\n-               loop\n-                  Parent_Type := Etype (Btype);\n-\n-                  Disc := First_Discriminant (Parent_Type);\n-                  Discr_Val :=\n-                    First_Elmt (Stored_Constraint (Base_Type (Typ)));\n-                  while Present (Discr_Val) loop\n-\n-                     --  Only those discriminants of the parent that are not\n-                     --  renamed by discriminants of the derived type need to\n-                     --  be added explicitly.\n-\n-                     if not Is_Entity_Name (Node (Discr_Val))\n-                       or else\n-                         Ekind (Entity (Node (Discr_Val))) /= E_Discriminant\n-                     then\n-                        Comp_Expr :=\n-                          Make_Selected_Component (Loc,\n-                            Prefix        => New_Copy_Tree (Target),\n-                            Selector_Name => New_Occurrence_Of (Disc, Loc));\n-\n-                        Instr :=\n-                          Make_OK_Assignment_Statement (Loc,\n-                            Name       => Comp_Expr,\n-                            Expression => New_Copy_Tree (Node (Discr_Val)));\n-\n-                        Set_No_Ctrl_Actions (Instr);\n-                        Append_To (L, Instr);\n-                     end if;\n-\n-                     Next_Discriminant (Disc);\n-                     Next_Elmt (Discr_Val);\n-                  end loop;\n-\n-                  Btype := Base_Type (Parent_Type);\n-               end loop;\n-            end;\n+            Init_Hidden_Discriminants (Typ, L);\n \n             --  Generate discriminant init values for the visible discriminants\n "}, {"sha": "4598a6958bf0584981a2c285efac789ae8423706", "filename": "gcc/ada/prj-env.adb", "status": "modified", "additions": 20, "deletions": 16, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e5828693d6ae3be5439c794720c65af494f3b13/gcc%2Fada%2Fprj-env.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e5828693d6ae3be5439c794720c65af494f3b13/gcc%2Fada%2Fprj-env.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-env.adb?ref=3e5828693d6ae3be5439c794720c65af494f3b13", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2001-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -782,13 +782,12 @@ package body Prj.Env is\n \n       procedure Put_Name_Buffer is\n       begin\n-         Name_Len := Name_Len + 1;\n-         Name_Buffer (Name_Len) := ASCII.LF;\n-\n          if Current_Verbosity = High then\n-            Write_Str (\"Mapping file: \" & Name_Buffer (1 .. Name_Len));\n+            Debug_Output (Name_Buffer (1 .. Name_Len));\n          end if;\n \n+         Name_Len := Name_Len + 1;\n+         Name_Buffer (Name_Len) := ASCII.LF;\n          Add_To_Buffer (Name_Buffer (1 .. Name_Len), Buffer, Buffer_Last);\n       end Put_Name_Buffer;\n \n@@ -875,15 +874,19 @@ package body Prj.Env is\n    --  Start of processing for Create_Mapping_File\n \n    begin\n+      Create_Temp_File (In_Tree, File, Name, \"mapping\");\n+\n+      if Current_Verbosity = High then\n+         Debug_Increase_Indent (\"Create mapping file \", Name_Id (Name));\n+      end if;\n+\n       For_Every_Imported_Project (Project, Dummy);\n \n       declare\n          Last   : Natural;\n          Status : Boolean := False;\n \n       begin\n-         Create_Temp_File (In_Tree, File, Name, \"mapping\");\n-\n          if File /= Invalid_FD then\n             Last := Write (File, Buffer (1)'Address, Buffer_Last);\n \n@@ -898,6 +901,8 @@ package body Prj.Env is\n       end;\n \n       Free (Buffer);\n+\n+      Debug_Decrease_Indent (\"Done create mapping file\");\n    end Create_Mapping_File;\n \n    ----------------------\n@@ -2021,8 +2026,7 @@ package body Prj.Env is\n \n       begin\n          if Current_Verbosity = High then\n-            Write_Str  (\"   Trying \");\n-            Write_Line (Path);\n+            Debug_Output (\"Trying \" & Path);\n          end if;\n \n          if Is_Absolute_Path (Path) then\n@@ -2064,8 +2068,7 @@ package body Prj.Env is\n                Add_Str_To_Name_Buffer (Path);\n \n                if Current_Verbosity = High then\n-                  Write_Str  (\"   Testing file \");\n-                  Write_Line (Name_Buffer (1 .. Name_Len));\n+                  Debug_Output (\"Testing file \" & Name_Buffer (1 .. Name_Len));\n                end if;\n \n                if Is_Regular_File (Name_Buffer (1 .. Name_Len)) then\n@@ -2092,11 +2095,9 @@ package body Prj.Env is\n       Initialize_Project_Path (Self, Target_Name);\n \n       if Current_Verbosity = High then\n-         Write_Str  (\"Searching for project (\"\"\");\n-         Write_Str  (File);\n-         Write_Str  (\"\"\", \"\"\");\n-         Write_Str  (Directory);\n-         Write_Line (\"\"\");\");\n+         Debug_Increase_Indent\n+           (\"Searching for project \"\"\" & File & \"\"\" in \"\"\"\n+            & Directory & '\"');\n       end if;\n \n       --  Check the project cache\n@@ -2107,6 +2108,7 @@ package body Prj.Env is\n       Path := Projects_Paths.Get (Self.Cache, Key);\n \n       if Path /= No_Path then\n+         Debug_Decrease_Indent;\n          return;\n       end if;\n \n@@ -2176,6 +2178,8 @@ package body Prj.Env is\n             Projects_Paths.Set (Self.Cache, Key, Path);\n          end;\n       end if;\n+\n+      Debug_Decrease_Indent;\n    end Find_Project;\n \n    ----------"}, {"sha": "5b9ae4c092252f40d8ee997f98cb6b07df59ad9f", "filename": "gcc/ada/prj-nmsc.adb", "status": "modified", "additions": 107, "deletions": 178, "changes": 285, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e5828693d6ae3be5439c794720c65af494f3b13/gcc%2Fada%2Fprj-nmsc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e5828693d6ae3be5439c794720c65af494f3b13/gcc%2Fada%2Fprj-nmsc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-nmsc.adb?ref=3e5828693d6ae3be5439c794720c65af494f3b13", "patch": "@@ -624,10 +624,7 @@ package body Prj.Nmsc is\n    procedure Write_Attr (Name, Value : String) is\n    begin\n       if Current_Verbosity = High then\n-         Write_Str  (\"  \" & Name & \" = \"\"\");\n-         Write_Str  (Value);\n-         Write_Char ('\"');\n-         Write_Eol;\n+         Debug_Output (Name & \" = \"\"\" & Value & '\"');\n       end if;\n    end Write_Attr;\n \n@@ -804,6 +801,7 @@ package body Prj.Nmsc is\n       Id := new Source_Data;\n \n       if Current_Verbosity = High then\n+         Debug_Indent;\n          Write_Str (\"Adding source File: \");\n          Write_Str (Get_Name_String (Display_File));\n \n@@ -939,11 +937,13 @@ package body Prj.Nmsc is\n                            Data.Tree);\n \n       procedure Found_Project_File (Path : Path_Information; Rank : Natural);\n-      --  Comments required ???\n+      --  Called for each project file aggregated by Project\n \n       procedure Expand_Project_Files is\n         new Expand_Subdirectory_Pattern (Callback => Found_Project_File);\n-      --  Comments required ???\n+      --  Search for all project files referenced by the patterns given in\n+      --  parameter.\n+      --  Calls Found_Project_File for each of them\n \n       ------------------------\n       -- Found_Project_File --\n@@ -952,10 +952,8 @@ package body Prj.Nmsc is\n       procedure Found_Project_File (Path : Path_Information; Rank : Natural) is\n          pragma Unreferenced (Rank);\n       begin\n-         if Current_Verbosity = High then\n-            Write_Str (\"  Aggregates:\");\n-            Write_Line (Get_Name_String (Path.Display_Name));\n-         end if;\n+         Debug_Output (\"Aggregates: \", Name_Id (Path.Display_Name));\n+\n       end Found_Project_File;\n \n    --  Start of processing for Check_Aggregate_Project\n@@ -982,7 +980,6 @@ package body Prj.Nmsc is\n          Ignore        => Nil_String,\n          Search_For    => Search_Files,\n          Resolve_Links => Opt.Follow_Links_For_Files);\n-\n    end Check_Aggregate_Project;\n \n    ----------------------------\n@@ -1040,6 +1037,8 @@ package body Prj.Nmsc is\n       Prj_Data  : Project_Processing_Data;\n \n    begin\n+      Debug_Increase_Indent (\"Check \", Project.Name);\n+\n       Initialize (Prj_Data, Project);\n \n       Check_If_Externally_Built   (Project, Data);\n@@ -1079,6 +1078,8 @@ package body Prj.Nmsc is\n       end if;\n \n       Free (Prj_Data);\n+\n+      Debug_Decrease_Indent (\"Done Check\");\n    end Check;\n \n    --------------------\n@@ -1125,12 +1126,7 @@ package body Prj.Nmsc is\n            and then Name not in Ada_2005_Reserved_Words\n          then\n             Unit := No_Name;\n-\n-            if Current_Verbosity = High then\n-               Write_Str (The_Name);\n-               Write_Line (\" is an Ada reserved word.\");\n-            end if;\n-\n+            Debug_Output (\"Ada reserved word: \", Name);\n             return True;\n \n          else\n@@ -1183,6 +1179,7 @@ package body Prj.Nmsc is\n                OK := False;\n \n                if Current_Verbosity = High then\n+                  Debug_Indent;\n                   Write_Int  (Types.Int (Index));\n                   Write_Str  (\": '\");\n                   Write_Char (The_Name (Index));\n@@ -1201,6 +1198,7 @@ package body Prj.Nmsc is\n             OK := False;\n \n             if Current_Verbosity = High then\n+               Debug_Indent;\n                Write_Int  (Types.Int (Index));\n                Write_Str  (\": '\");\n                Write_Char (The_Name (Index));\n@@ -1235,6 +1233,7 @@ package body Prj.Nmsc is\n                OK := False;\n \n                if Current_Verbosity = High then\n+                  Debug_Indent;\n                   Write_Int  (Types.Int (Index));\n                   Write_Str  (\": '\");\n                   Write_Char (The_Name (Index));\n@@ -2682,14 +2681,10 @@ package body Prj.Nmsc is\n          Project.Externally_Built := Project.Extends.Externally_Built;\n       end if;\n \n-      if Current_Verbosity = High then\n-         Write_Str (\"Project is \");\n-\n-         if not Project.Externally_Built then\n-            Write_Str (\"not \");\n-         end if;\n-\n-         Write_Line (\"externally built.\");\n+      if Project.Externally_Built then\n+         Debug_Output (\"Project is externally built\");\n+      else\n+         Debug_Output (\"Project is not externally built\");\n       end if;\n    end Check_If_Externally_Built;\n \n@@ -2766,10 +2761,8 @@ package body Prj.Nmsc is\n                            Other.Declared_In_Interfaces := True;\n                         end if;\n \n-                        if Current_Verbosity = High then\n-                           Write_Str (\"   interface: \");\n-                           Write_Line (Get_Name_String (Source.Path.Name));\n-                        end if;\n+                        Debug_Output\n+                          (\"interface: \", Name_Id (Source.Path.Name));\n                      end if;\n \n                      exit Big_Loop;\n@@ -2845,10 +2838,8 @@ package body Prj.Nmsc is\n                            Other.Declared_In_Interfaces := True;\n                         end if;\n \n-                        if Current_Verbosity = High then\n-                           Write_Str (\"   interface: \");\n-                           Write_Line (Get_Name_String (Source.Path.Name));\n-                        end if;\n+                        Debug_Output\n+                          (\"interface: \", Name_Id (Source.Path.Name));\n                      end if;\n \n                      exit Big_Loop_2;\n@@ -3497,12 +3488,9 @@ package body Prj.Nmsc is\n             --  If language was not found in project or the projects it extends\n \n             if Lang = null then\n-               if Current_Verbosity = High then\n-                  Write_Line\n-                    (\"Ignoring spec naming data for \"\n-                     & Get_Name_String (Lang_Name)\n-                     & \" since language is not defined for this project\");\n-               end if;\n+               Debug_Output\n+                 (\"Ignoring spec naming data (lang. not in project): \",\n+                  Lang_Name);\n \n             else\n                Value := Data.Tree.Array_Elements.Table (Specs).Value;\n@@ -3523,12 +3511,9 @@ package body Prj.Nmsc is\n                 (Project, Name => Get_Name_String (Lang_Name));\n \n             if Lang = null then\n-               if Current_Verbosity = High then\n-                  Write_Line\n-                    (\"Ignoring impl naming data for \"\n-                     & Get_Name_String (Lang_Name)\n-                     & \" since language is not defined for this project\");\n-               end if;\n+               Debug_Output\n+                 (\"Ignoring impl naming data (lang. not in project): \",\n+                  Lang_Name);\n             else\n                Value := Data.Tree.Array_Elements.Table (Impls).Value;\n \n@@ -3555,14 +3540,10 @@ package body Prj.Nmsc is\n         and then Project.Qualifier /= Configuration\n       then\n          Naming := Data.Tree.Packages.Table (Naming_Id);\n-\n-         if Current_Verbosity = High then\n-            Write_Line (\"Checking package Naming for project \"\n-                        & Get_Name_String (Project.Name));\n-         end if;\n-\n+         Debug_Increase_Indent (\"Checking package Naming for \", Project.Name);\n          Initialize_Naming_Data;\n          Check_Naming;\n+         Debug_Decrease_Indent (\"Done checking package naming\");\n       end if;\n    end Check_Package_Naming;\n \n@@ -3747,6 +3728,7 @@ package body Prj.Nmsc is\n          if Current_Verbosity = High\n            and then Project.Library_Name = No_Name\n          then\n+            Debug_Indent;\n             Write_Line (\"No library name\");\n          end if;\n \n@@ -3758,16 +3740,14 @@ package body Prj.Nmsc is\n \n       if Project.Library_Name /= No_Name then\n          if Current_Verbosity = High then\n-            Write_Attr\n-              (\"Library name\", Get_Name_String (Project.Library_Name));\n+            Write_Attr (\"Library name: \",\n+                        Get_Name_String (Project.Library_Name));\n          end if;\n \n          pragma Assert (Lib_Dir.Kind = Single);\n \n          if not Library_Directory_Present then\n-            if Current_Verbosity = High then\n-               Write_Line (\"No library directory\");\n-            end if;\n+            Debug_Output (\"No library directory\");\n \n          else\n             --  Find path name (unless inherited), check that it is a directory\n@@ -3960,10 +3940,7 @@ package body Prj.Nmsc is\n \n          else\n             if Lib_ALI_Dir.Value = Empty_String then\n-               if Current_Verbosity = High then\n-                  Write_Line (\"No library ALI directory specified\");\n-               end if;\n-\n+               Debug_Output (\"No library ALI directory specified\");\n                Project.Library_ALI_Dir := Project.Library_Dir;\n \n             else\n@@ -4101,9 +4078,7 @@ package body Prj.Nmsc is\n             pragma Assert (Lib_Version.Kind = Single);\n \n             if Lib_Version.Value = Empty_String then\n-               if Current_Verbosity = High then\n-                  Write_Line (\"No library version specified\");\n-               end if;\n+               Debug_Output (\"No library version specified\");\n \n             else\n                Project.Lib_Internal_Name := Lib_Version.Value;\n@@ -4112,9 +4087,7 @@ package body Prj.Nmsc is\n             pragma Assert (The_Lib_Kind.Kind = Single);\n \n             if The_Lib_Kind.Value = Empty_String then\n-               if Current_Verbosity = High then\n-                  Write_Line (\"No library kind specified\");\n-               end if;\n+               Debug_Output (\"No library kind specified\");\n \n             else\n                Get_Name_String (The_Lib_Kind.Value);\n@@ -4199,9 +4172,7 @@ package body Prj.Nmsc is\n             end if;\n \n             if Project.Library then\n-               if Current_Verbosity = High then\n-                  Write_Line (\"This is a library project file\");\n-               end if;\n+               Debug_Output (\"This is a library project file\");\n \n                Check_Library (Project.Extends, Extends => True);\n \n@@ -5080,10 +5051,7 @@ package body Prj.Nmsc is\n          --  The directory is in the list if List is not Nil_String\n \n          if not Remove_Source_Dirs and then List = Nil_String then\n-            if Current_Verbosity = High then\n-               Write_Str  (\"   Adding Source Dir=\");\n-               Write_Line (Get_Name_String (Path.Display_Name));\n-            end if;\n+            Debug_Output (\"Adding source dir=\", Name_Id (Path.Display_Name));\n \n             String_Element_Table.Increment_Last (Data.Tree.String_Elements);\n             Element :=\n@@ -5162,9 +5130,7 @@ package body Prj.Nmsc is\n    --  Start of processing for Get_Directories\n \n    begin\n-      if Current_Verbosity = High then\n-         Write_Line (\"Starting to look for directories\");\n-      end if;\n+      Debug_Output (\"Starting to look for directories\");\n \n       --  Set the object directory to its default which may be nil, if there\n       --  is no sources in the project.\n@@ -5283,19 +5249,17 @@ package body Prj.Nmsc is\n \n       if Current_Verbosity = High then\n          if Project.Exec_Directory = No_Path_Information then\n-            Write_Line (\"No exec directory\");\n+            Debug_Output (\"No exec directory\");\n          else\n-            Write_Str (\"Exec directory: \"\"\");\n-            Write_Str (Get_Name_String (Project.Exec_Directory.Display_Name));\n-            Write_Line (\"\"\"\");\n+            Debug_Output\n+              (\"Exec directory: \",\n+               Name_Id (Project.Exec_Directory.Display_Name));\n          end if;\n       end if;\n \n       --  Look for the source directories\n \n-      if Current_Verbosity = High then\n-         Write_Line (\"Starting to look for source directories\");\n-      end if;\n+      Debug_Output (\"Starting to look for source directories\");\n \n       pragma Assert (Source_Dirs.Kind = List, \"Source_Dirs is not a list\");\n \n@@ -5355,9 +5319,7 @@ package body Prj.Nmsc is\n             Resolve_Links   => Opt.Follow_Links_For_Dirs);\n       end if;\n \n-      if Current_Verbosity = High then\n-         Write_Line (\"Putting source directories in canonical cases\");\n-      end if;\n+      Debug_Output (\"Putting source directories in canonical cases\");\n \n       declare\n          Current : String_List_Id := Project.Source_Dirs;\n@@ -5446,9 +5408,7 @@ package body Prj.Nmsc is\n \n    begin\n       if Current_Verbosity = High then\n-         Write_Str  (\"Opening \"\"\");\n-         Write_Str  (Path);\n-         Write_Line (\"\"\".\");\n+         Debug_Output (\"Opening \"\"\" & Path & '\"');\n       end if;\n \n       --  Open the file\n@@ -5556,10 +5516,7 @@ package body Prj.Nmsc is\n       end if;\n \n       if Naming.Dot_Replacement = No_File then\n-         if Current_Verbosity = High then\n-            Write_Line (\"  No dot_replacement specified\");\n-         end if;\n-\n+         Debug_Output (\"No dot_replacement specified\");\n          return;\n       end if;\n \n@@ -5592,10 +5549,7 @@ package body Prj.Nmsc is\n       end if;\n \n       if Last = Filename'Last then\n-         if Current_Verbosity = High then\n-            Write_Line (\"     no matching suffix\");\n-         end if;\n-\n+         Debug_Output (\"no matching suffix\");\n          return;\n       end if;\n \n@@ -5608,10 +5562,7 @@ package body Prj.Nmsc is\n                   if Is_Letter (Filename (J))\n                     and then not Is_Lower (Filename (J))\n                   then\n-                     if Current_Verbosity = High then\n-                        Write_Line (\"  Invalid casing\");\n-                     end if;\n-\n+                     Debug_Output (\"Invalid casing\");\n                      return;\n                   end if;\n                end loop;\n@@ -5621,10 +5572,7 @@ package body Prj.Nmsc is\n                   if Is_Letter (Filename (J))\n                     and then not Is_Upper (Filename (J))\n                   then\n-                     if Current_Verbosity = High then\n-                        Write_Line (\"  Invalid casing\");\n-                     end if;\n-\n+                     Debug_Output (\"Invalid casing\");\n                      return;\n                   end if;\n                end loop;\n@@ -5645,10 +5593,7 @@ package body Prj.Nmsc is\n          if Dot_Repl /= \".\" then\n             for Index in Filename'First .. Last loop\n                if Filename (Index) = '.' then\n-                  if Current_Verbosity = High then\n-                     Write_Line (\"   Invalid name, contains dot\");\n-                  end if;\n-\n+                  Debug_Output (\"Invalid name, contains dot\");\n                   return;\n                end if;\n             end loop;\n@@ -5731,6 +5676,7 @@ package body Prj.Nmsc is\n \n          if Masked then\n             if Current_Verbosity = High then\n+               Debug_Indent;\n                Write_Str (\"   \"\"\" & Filename & \"\"\" contains the \");\n \n                if Kind = Spec then\n@@ -5752,12 +5698,10 @@ package body Prj.Nmsc is\n         and then Current_Verbosity = High\n       then\n          case Kind is\n-            when Spec => Write_Str (\"   spec of \");\n-            when Impl => Write_Str (\"   body of \");\n-            when Sep  => Write_Str (\"   sep of \");\n+            when Spec => Debug_Output (\"spec of\", Unit);\n+            when Impl => Debug_Output (\"body of\", Unit);\n+            when Sep  => Debug_Output (\"sep of\", Unit);\n          end case;\n-\n-         Write_Line (Get_Name_String (Unit));\n       end if;\n    end Compute_Unit_Name;\n \n@@ -5869,9 +5813,10 @@ package body Prj.Nmsc is\n       The_Name := Name_Find;\n \n       if Current_Verbosity = High then\n+         Debug_Indent;\n          Write_Str (\"Locate_Directory (\"\"\");\n          Write_Str (Get_Name_String (The_Name));\n-         Write_Str (\"\"\", \"\"\");\n+         Write_Str (\"\"\", in \"\"\");\n          Write_Str (The_Parent);\n          Write_Line (\"\"\")\");\n       end if;\n@@ -6411,6 +6356,7 @@ package body Prj.Nmsc is\n                      Source.Path := Path;\n \n                      if Current_Verbosity = High then\n+                        Debug_Indent;\n                         if Source.Path /= No_Path_Information then\n                            Write_Line (\"Setting full path for \"\n                                        & Get_Name_String (Source.File)\n@@ -6562,16 +6508,12 @@ package body Prj.Nmsc is\n             Kind     := Impl;\n             Language := Tmp_Lang;\n \n-            if Current_Verbosity = High then\n-               Write_Str (\"     implementation of language \");\n-               Write_Line (Get_Name_String (Display_Language_Name));\n-            end if;\n+            Debug_Output\n+              (\"Implementation of language \", Display_Language_Name);\n \n          elsif Suffix_Matches (Filename, Config.Naming_Data.Spec_Suffix) then\n-            if Current_Verbosity = High then\n-               Write_Str (\"     header of language \");\n-               Write_Line (Get_Name_String (Display_Language_Name));\n-            end if;\n+            Debug_Output\n+              (\"Header of language \", Display_Language_Name);\n \n             if Header_File then\n                Alternate_Languages := new Language_List_Element'\n@@ -6600,8 +6542,8 @@ package body Prj.Nmsc is\n       Tmp_Lang := Project.Project.Languages;\n       while Tmp_Lang /= No_Language_Index loop\n          if Current_Verbosity = High then\n-            Write_Line\n-              (\"     Testing language \"\n+            Debug_Output\n+              (\"Testing language \"\n                & Get_Name_String (Tmp_Lang.Name)\n                & \" Header_File=\" & Header_File'Img);\n          end if;\n@@ -6639,10 +6581,8 @@ package body Prj.Nmsc is\n          Tmp_Lang := Tmp_Lang.Next;\n       end loop;\n \n-      if Language = No_Language_Index\n-        and then Current_Verbosity = High\n-      then\n-         Write_Line (\"     not a source of any language\");\n+      if Language = No_Language_Index then\n+         Debug_Output (\"not a source of any language\");\n       end if;\n    end Check_File_Naming_Schemes;\n \n@@ -6674,9 +6614,9 @@ package body Prj.Nmsc is\n       if Current_Verbosity = High\n         and then Source.File /= No_File\n       then\n-         Write_Line (\"Override kind for \"\n-                     & Get_Name_String (Source.File)\n-                     & \" kind=\" & Source.Kind'Img);\n+         Debug_Output (\"Override kind for \"\n+                       & Get_Name_String (Source.File)\n+                       & \" kind=\" & Source.Kind'Img);\n       end if;\n \n       if Source.Kind in Spec_Or_Body and then Source.Unit /= null then\n@@ -6714,11 +6654,9 @@ package body Prj.Nmsc is\n \n    begin\n       if Current_Verbosity = High then\n-         Write_Line (\"Checking file:\");\n-         Write_Str (\"   Path = \");\n-         Write_Line (Get_Name_String (Path));\n-         Write_Str (\"   Rank =\");\n-         Write_Line (Source_Dir_Rank'Img);\n+         Debug_Increase_Indent\n+           (\"Checking file (rank=\" & Source_Dir_Rank'Img & \")\",\n+            Name_Id (Path));\n       end if;\n \n       if Name_Loc = No_Name_Location then\n@@ -6825,6 +6763,8 @@ package body Prj.Nmsc is\n             end if;\n          end if;\n       end if;\n+\n+      Debug_Decrease_Indent;\n    end Check_File;\n \n    ---------------------------------\n@@ -6938,11 +6878,7 @@ package body Prj.Nmsc is\n          Success : Boolean := False;\n \n       begin\n-         if Current_Verbosity = High then\n-            Write_Str (\"  Looking for subdirs of \"\"\");\n-            Write_Str (Path_Str);\n-            Write_Line (\"\"\"\");\n-         end if;\n+         Debug_Output (\"Looking for subdirs of \", Name_Id (Path.Display_Name));\n \n          if Recursive_Dirs.Get (Visited, Path.Name) then\n             return Success;\n@@ -7038,11 +6974,7 @@ package body Prj.Nmsc is\n          Success     : Boolean;\n \n       begin\n-         if Current_Verbosity = High then\n-            Write_Str (\"Expand_Subdirectory_Pattern (\"\"\");\n-            Write_Str (Pattern);\n-            Write_Line (\"\"\")\");\n-         end if;\n+         Debug_Increase_Indent (\"Find_Pattern\", Pattern_Id);\n \n          --  If we are looking for files, find the pattern for the files\n \n@@ -7063,9 +6995,10 @@ package body Prj.Nmsc is\n             end if;\n \n             if Current_Verbosity = High then\n-               Write_Str (\"  file pattern=\");\n-               Write_Line (Pattern (Pattern_End + 1 .. Pattern'Last));\n-               Write_Str (\"  Expand directory pattern=\");\n+               Debug_Indent;\n+               Write_Str (\"file_pattern=\");\n+               Write_Str (Pattern (Pattern_End + 1 .. Pattern'Last));\n+               Write_Str (\" dir_pattern=\");\n                Write_Line (Pattern (Pattern'First .. Pattern_End));\n             end if;\n \n@@ -7138,6 +7071,8 @@ package body Prj.Nmsc is\n                end case;\n             end if;\n          end if;\n+\n+         Debug_Decrease_Indent (\"Done Find_Pattern\");\n       end Find_Pattern;\n \n       --  Local variables\n@@ -7179,9 +7114,7 @@ package body Prj.Nmsc is\n       Display_File_Name : File_Name_Type;\n \n    begin\n-      if Current_Verbosity = High then\n-         Write_Line (\"Looking for sources:\");\n-      end if;\n+      Debug_Increase_Indent (\"Looking for sources\");\n \n       --  Loop through subdirectories\n \n@@ -7213,10 +7146,10 @@ package body Prj.Nmsc is\n \n                begin\n                   if Current_Verbosity = High then\n-                     Write_Attr\n-                       (\"Source_Dir\",\n-                        Source_Directory (Source_Directory'First .. Dir_Last));\n-                     Write_Line (Num_Nod.Number'Img);\n+                     Debug_Increase_Indent\n+                       (\"Source_Dir (node=\" & Num_Nod.Number'Img & \") \"\"\"\n+                        & Source_Directory (Source_Directory'First .. Dir_Last)\n+                        & '\"');\n                   end if;\n \n                   --  We look to every entry in the source directory\n@@ -7238,11 +7171,6 @@ package body Prj.Nmsc is\n                        or else Is_Regular_File\n                                  (Display_Source_Directory & Name (1 .. Last))\n                      then\n-                        if Current_Verbosity = High then\n-                           Write_Str  (\"   Checking \");\n-                           Write_Line (Name (1 .. Last));\n-                        end if;\n-\n                         Name_Len := Last;\n                         Name_Buffer (1 .. Name_Len) := Name (1 .. Last);\n                         Display_File_Name := Name_Find;\n@@ -7291,12 +7219,9 @@ package body Prj.Nmsc is\n                                  Excluded_Sources_Htable.Set\n                                    (Project.Excluded, File_Name, FF);\n \n-                                 if Current_Verbosity = High then\n-                                    Write_Str (\"     excluded source \"\"\");\n-                                    Write_Str\n-                                      (Get_Name_String (Display_File_Name));\n-                                    Write_Line (\"\"\"\");\n-                                 end if;\n+                                 Debug_Output\n+                                   (\"Excluded source \",\n+                                    Name_Id (Display_File_Name));\n \n                                  --  Will mark the file as removed, but we\n                                  --  still need to add it to the list: if we\n@@ -7327,9 +7252,15 @@ package body Prj.Nmsc is\n                               Display_File_Name => Display_File_Name,\n                               For_All_Sources   => For_All_Sources);\n                         end;\n+\n+                     else\n+                        if Current_Verbosity = High then\n+                           Debug_Output (\"Ignore \" & Name (1 .. Last));\n+                        end if;\n                      end if;\n                   end loop;\n \n+                  Debug_Decrease_Indent;\n                   Close (Dir);\n                end;\n             end if;\n@@ -7343,9 +7274,7 @@ package body Prj.Nmsc is\n          Src_Dir_Rank := Num_Nod.Next;\n       end loop;\n \n-      if Current_Verbosity = High then\n-         Write_Line (\"end Looking for sources.\");\n-      end if;\n+      Debug_Decrease_Indent (\"end Looking for sources.\");\n    end Search_Directories;\n \n    ----------------------------\n@@ -7377,11 +7306,9 @@ package body Prj.Nmsc is\n                No_Location, Project.Project);\n          end if;\n \n-         if Current_Verbosity = High then\n-            Write_Str (\"Naming exception: Putting source file \");\n-            Write_Str (Get_Name_String (Source.File));\n-            Write_Line (\" in Source_Names\");\n-         end if;\n+         Debug_Output\n+           (\"Naming exception: adding source file to source_Names: \",\n+            Name_Id (Source.File));\n \n          Source_Names_Htable.Set\n            (Project.Source_Names,\n@@ -7568,6 +7495,7 @@ package body Prj.Nmsc is\n                      Source.In_Interfaces   := False;\n \n                      if Current_Verbosity = High then\n+                        Debug_Indent;\n                         Write_Str (\"Removing file \");\n                         Write_Line\n                           (Get_Name_String (Excluded.File)\n@@ -7875,6 +7803,7 @@ package body Prj.Nmsc is\n \n    begin\n       if Current_Verbosity = High then\n+         Debug_Indent;\n          Write_Str (\"Removing source \");\n          Write_Str (Get_Name_String (Id.File));\n \n@@ -7978,7 +7907,7 @@ package body Prj.Nmsc is\n       Element : String_Element;\n \n    begin\n-      Write_Line (\"Source_Dirs:\");\n+      Debug_Increase_Indent (\"Source_Dirs:\");\n \n       Current := Project.Source_Dirs;\n       while Current /= Nil_String loop\n@@ -7988,7 +7917,7 @@ package body Prj.Nmsc is\n          Current := Element.Next;\n       end loop;\n \n-      Write_Line (\"end Source_Dirs.\");\n+      Debug_Decrease_Indent (\"end Source_Dirs.\");\n    end Show_Source_Dirs;\n \n    ---------------------------"}, {"sha": "385ba1d3351fd26c2ff83bd349aaccbcc3f41983", "filename": "gcc/ada/prj-part.adb", "status": "modified", "additions": 5, "deletions": 8, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e5828693d6ae3be5439c794720c65af494f3b13/gcc%2Fada%2Fprj-part.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e5828693d6ae3be5439c794720c65af494f3b13/gcc%2Fada%2Fprj-part.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-part.adb?ref=3e5828693d6ae3be5439c794720c65af494f3b13", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2001-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1308,10 +1308,7 @@ package body Prj.Part is\n       end if;\n \n       if Current_Verbosity >= Medium then\n-         Write_Str  (\"Parsing \"\"\");\n-         Write_Str  (Path_Name);\n-         Write_Char ('\"');\n-         Write_Eol;\n+         Debug_Increase_Indent (\"Parsing \"\"\" & Path_Name & '\"');\n       end if;\n \n       Project_Directory :=\n@@ -1882,6 +1879,8 @@ package body Prj.Part is\n       --  And restore the comment state that was saved\n \n       Tree.Restore_And_Free (Project_Comment_State);\n+\n+      Debug_Decrease_Indent (\"Done parsing project\");\n    end Parse_Single_Project;\n \n    -----------------------\n@@ -1899,9 +1898,7 @@ package body Prj.Part is\n \n    begin\n       if Current_Verbosity = High then\n-         Write_Str (\"Project_Name_From (\"\"\");\n-         Write_Str (Canonical);\n-         Write_Line (\"\"\")\");\n+         Debug_Output (\"Project_Name_From (\"\"\" & Canonical & \"\"\")\");\n       end if;\n \n       --  If the path name is empty, return No_Name to indicate failure"}, {"sha": "4a8680e77cf5fad070ad9f861188be0f24f4a773", "filename": "gcc/ada/prj-pp.adb", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e5828693d6ae3be5439c794720c65af494f3b13/gcc%2Fada%2Fprj-pp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e5828693d6ae3be5439c794720c65af494f3b13/gcc%2Fada%2Fprj-pp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-pp.adb?ref=3e5828693d6ae3be5439c794720c65af494f3b13", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2001-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -373,6 +373,22 @@ package body Prj.PP is\n \n                   Print (First_Comment_Before (Node, In_Tree), Indent);\n                   Start_Line (Indent);\n+\n+                  case Project_Qualifier_Of (Node, In_Tree) is\n+                     when Unspecified | Standard =>\n+                        null;\n+                     when Aggregate   =>\n+                        Write_String (\"aggregate \", Indent);\n+                     when Aggregate_Library =>\n+                        Write_String (\"aggregate library \", Indent);\n+                     when Library     =>\n+                        Write_String (\"library \", Indent);\n+                     when Configuration =>\n+                        Write_String (\"configuration \", Indent);\n+                     when Dry =>\n+                        Write_String (\"abstract \", Indent);\n+                  end case;\n+\n                   Write_String (\"project \", Indent);\n \n                   if Id /= Prj.No_Project then"}, {"sha": "0b9d4ff932a7a4bcc2388122ea11499bdfa66cb7", "filename": "gcc/ada/prj.adb", "status": "modified", "additions": 75, "deletions": 1, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e5828693d6ae3be5439c794720c65af494f3b13/gcc%2Fada%2Fprj.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e5828693d6ae3be5439c794720c65af494f3b13/gcc%2Fada%2Fprj.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.adb?ref=3e5828693d6ae3be5439c794720c65af494f3b13", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2001-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -48,6 +48,9 @@ package body Prj is\n \n    The_Empty_String : Name_Id := No_Name;\n \n+   Debug_Level : Integer := 0;\n+   --  Current indentation level for debug traces.\n+\n    type Cst_String_Access is access constant String;\n \n    All_Lower_Case_Image : aliased constant String := \"lowercase\";\n@@ -1300,6 +1303,77 @@ package body Prj is\n       return Count;\n    end Length;\n \n+   ------------------\n+   -- Debug_Output --\n+   ------------------\n+\n+   procedure Debug_Output (Str : String) is\n+   begin\n+      if Current_Verbosity > Default then\n+         Write_Line ((1 .. Debug_Level * 2 => ' ') & Str);\n+      end if;\n+   end Debug_Output;\n+\n+   ------------------\n+   -- Debug_Indent --\n+   ------------------\n+\n+   procedure Debug_Indent is\n+   begin\n+      if Current_Verbosity = High then\n+         Write_Str ((1 .. Debug_Level * 2 => ' '));\n+      end if;\n+   end Debug_Indent;\n+\n+   ------------------\n+   -- Debug_Output --\n+   ------------------\n+\n+   procedure Debug_Output (Str : String; Str2 : Name_Id) is\n+   begin\n+      if Current_Verbosity = High then\n+         Debug_Indent;\n+         Write_Str (Str);\n+\n+         if Str2 = No_Name then\n+            Write_Line (\" <no_name>\");\n+         else\n+            Write_Line (\" \"\"\" & Get_Name_String (Str2) & '\"');\n+         end if;\n+      end if;\n+   end Debug_Output;\n+\n+   ---------------------------\n+   -- Debug_Increase_Indent --\n+   ---------------------------\n+\n+   procedure Debug_Increase_Indent\n+     (Str : String := \"\"; Str2 : Name_Id := No_Name)\n+   is\n+   begin\n+      if Str2 /= No_Name then\n+         Debug_Output (Str, Str2);\n+      else\n+         Debug_Output (Str);\n+      end if;\n+      Debug_Level := Debug_Level + 1;\n+   end Debug_Increase_Indent;\n+\n+   ---------------------------\n+   -- Debug_Decrease_Indent --\n+   ---------------------------\n+\n+   procedure Debug_Decrease_Indent (Str : String := \"\") is\n+   begin\n+      if Debug_Level > 0 then\n+         Debug_Level := Debug_Level - 1;\n+      end if;\n+\n+      if Str /= \"\" then\n+         Debug_Output (Str);\n+      end if;\n+   end Debug_Decrease_Indent;\n+\n begin\n    --  Make sure that the standard config and user project file extensions are\n    --  compatible with canonical case file naming."}, {"sha": "202e70aeca9df5cc87835d6eeea4982869afdf95", "filename": "gcc/ada/prj.ads", "status": "modified", "additions": 30, "deletions": 11, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e5828693d6ae3be5439c794720c65af494f3b13/gcc%2Fada%2Fprj.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e5828693d6ae3be5439c794720c65af494f3b13/gcc%2Fada%2Fprj.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.ads?ref=3e5828693d6ae3be5439c794720c65af494f3b13", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2001-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -849,16 +849,6 @@ package Prj is\n       Hash       => Hash,\n       Equal      => \"=\");\n \n-   type Verbosity is (Default, Medium, High);\n-   pragma Ordered (Verbosity);\n-   --  Verbosity when parsing GNAT Project Files\n-   --    Default is default (very quiet, if no errors).\n-   --    Medium is more verbose.\n-   --    High is extremely verbose.\n-\n-   Current_Verbosity : Verbosity := Default;\n-   --  The current value of the verbosity the project files are parsed with\n-\n    type Lib_Kind is (Static, Dynamic, Relocatable);\n \n    type Policy is (Autonomous, Compliant, Controlled, Restricted, Direct);\n@@ -1594,6 +1584,35 @@ package Prj is\n    --  The prefix for virtual extending projects. Because of the '$', which is\n    --  normally forbidden for project names, there cannot be any name clash.\n \n+   -----------\n+   -- Debug --\n+   -----------\n+\n+   type Verbosity is (Default, Medium, High);\n+   pragma Ordered (Verbosity);\n+   --  Verbosity when parsing GNAT Project Files\n+   --    Default is default (very quiet, if no errors).\n+   --    Medium is more verbose.\n+   --    High is extremely verbose.\n+\n+   Current_Verbosity : Verbosity := Default;\n+   --  The current value of the verbosity the project files are parsed with\n+\n+   procedure Debug_Indent;\n+   --  Inserts a series of blanks depending on the current indentation level\n+\n+   procedure Debug_Output (Str : String);\n+   procedure Debug_Output (Str : String; Str2 : Name_Id);\n+   --  If Current_Verbosity is not Default, outputs Str.\n+   --  This indents Str based on the current indentation level for traces\n+   --  Debug_Error is intended to be used to report an error in the traces.\n+\n+   procedure Debug_Increase_Indent\n+     (Str : String := \"\"; Str2 : Name_Id := No_Name);\n+   procedure Debug_Decrease_Indent (Str : String := \"\");\n+   --  Increase or decrease the indentation level for debug traces.\n+   --  This indentation level only affects output done through Debug_Output.\n+\n private\n \n    All_Packages : constant String_List_Access := null;"}, {"sha": "297f51e0606d0de1b434dbf221a27265b6afc1cc", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e5828693d6ae3be5439c794720c65af494f3b13/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e5828693d6ae3be5439c794720c65af494f3b13/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=3e5828693d6ae3be5439c794720c65af494f3b13", "patch": "@@ -7226,14 +7226,18 @@ package body Sem_Ch3 is\n          Analyze (N);\n \n          --  Derivation of subprograms must be delayed until the full subtype\n-         --  has been established to ensure proper overriding of subprograms\n+         --  has been established, to ensure proper overriding of subprograms\n          --  inherited by full types. If the derivations occurred as part of\n          --  the call to Build_Derived_Type above, then the check for type\n          --  conformance would fail because earlier primitive subprograms\n          --  could still refer to the full type prior the change to the new\n          --  subtype and hence would not match the new base type created here.\n+         --  Subprograms are not derived, however, when Derive_Subps is False\n+         --  (since otherwise there could be redundant derivations).\n \n-         Derive_Subprograms (Parent_Type, Derived_Type);\n+         if Derive_Subps then\n+            Derive_Subprograms (Parent_Type, Derived_Type);\n+         end if;\n \n          --  For tagged types the Discriminant_Constraint of the new base itype\n          --  is inherited from the first subtype so that no subtype conformance"}]}