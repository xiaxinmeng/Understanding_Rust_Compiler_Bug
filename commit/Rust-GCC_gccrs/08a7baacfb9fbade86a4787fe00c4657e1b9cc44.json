{"sha": "08a7baacfb9fbade86a4787fe00c4657e1b9cc44", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDhhN2JhYWNmYjlmYmFkZTg2YTQ3ODdmZTAwYzQ2NTdlMWI5Y2M0NA==", "commit": {"author": {"name": "James Van Artsdalen", "email": "jrv@gnu.org", "date": "1993-01-20T06:48:48Z"}, "committer": {"name": "James Van Artsdalen", "email": "jrv@gnu.org", "date": "1993-01-20T06:48:48Z"}, "message": "(cmpM_cc): Allow first operand to be a MEM.\n\nDon't allow both operands to be MEM.\n(float addM3,subM3,divM3,mulM3 recognizers): Don't allow either operand\nto be a constant.\n(all float patterns, FLOAT_EXTEND operands): Don't allow GENERAL_REGS\nfor float_extended operand.\n(all float patterns, FLOAT operands): Change constraints to get better\nregister classification.\n(fix_truncMN2 patterns): Likewise.\n(floatMN2 patterns): Likewise.\n\nFrom-SVN: r3296", "tree": {"sha": "4c15ccd38d552a8e570007486f88537da5c0ad6e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4c15ccd38d552a8e570007486f88537da5c0ad6e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/08a7baacfb9fbade86a4787fe00c4657e1b9cc44", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08a7baacfb9fbade86a4787fe00c4657e1b9cc44", "html_url": "https://github.com/Rust-GCC/gccrs/commit/08a7baacfb9fbade86a4787fe00c4657e1b9cc44", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08a7baacfb9fbade86a4787fe00c4657e1b9cc44/comments", "author": null, "committer": null, "parents": [{"sha": "85ff473e569925cbf9858fcc45491dda25b7ae92", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85ff473e569925cbf9858fcc45491dda25b7ae92", "html_url": "https://github.com/Rust-GCC/gccrs/commit/85ff473e569925cbf9858fcc45491dda25b7ae92"}], "stats": {"total": 158, "additions": 98, "deletions": 60}, "files": [{"sha": "9148d9e0f79f99cbb68a5a6334ef0064c14cfb10", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 98, "deletions": 60, "changes": 158, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08a7baacfb9fbade86a4787fe00c4657e1b9cc44/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08a7baacfb9fbade86a4787fe00c4657e1b9cc44/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=08a7baacfb9fbade86a4787fe00c4657e1b9cc44", "patch": "@@ -299,28 +299,47 @@\n ;; is converted to the desired mode.\n \n (define_insn \"cmpdf_cc\"\n+  [(set (cc0)\n+\t(compare:CC (match_operand:DF 0 \"nonimmediate_operand\" \"f,fm\")\n+\t\t    (match_operand:DF 1 \"nonimmediate_operand\" \"fm,f\")))\n+   (clobber (match_scratch:HI 2 \"=a,a\"))]\n+  \"TARGET_80387\n+   && (GET_CODE (operands[0]) != MEM || GET_CODE (operands[1]) != MEM)\"\n+  \"* return (char *) output_float_compare (insn, operands);\")\n+\n+(define_insn \"\"\n   [(set (cc0)\n \t(compare:CC (match_operand:DF 0 \"register_operand\" \"f\")\n-\t\t    (match_operand:DF 1 \"nonimmediate_operand\" \"fm\")))\n+\t\t    (float:DF\n+\t\t     (match_operand:SI 1 \"nonimmediate_operand\" \"rm\"))))\n    (clobber (match_scratch:HI 2 \"=a\"))]\n   \"TARGET_80387\"\n   \"* return (char *) output_float_compare (insn, operands);\")\n \n (define_insn \"\"\n   [(set (cc0)\n-\t(compare:CC (match_operand:DF 0 \"register_operand\" \"f,f\")\n-\t\t    (float:DF\n-\t\t     (match_operand:SI 1 \"nonimmediate_operand\" \"m,!*r\"))))\n-   (clobber (match_scratch:HI 2 \"=a,a\"))]\n+\t(compare:CC (float:DF\n+\t\t     (match_operand:SI 0 \"nonimmediate_operand\" \"rm\"))\n+\t\t    (match_operand:DF 1 \"register_operand\" \"f\")))\n+   (clobber (match_scratch:HI 2 \"=a\"))]\n   \"TARGET_80387\"\n   \"* return (char *) output_float_compare (insn, operands);\")\n \n (define_insn \"\"\n   [(set (cc0)\n-\t(compare:CC (match_operand:DF 0 \"register_operand\" \"f,f\")\n+\t(compare:CC (match_operand:DF 0 \"register_operand\" \"f\")\n \t\t    (float_extend:DF\n-\t\t     (match_operand:SF 1 \"nonimmediate_operand\" \"fm,!*r\"))))\n-   (clobber (match_scratch:HI 2 \"=a,a\"))]\n+\t\t     (match_operand:SF 1 \"nonimmediate_operand\" \"fm\"))))\n+   (clobber (match_scratch:HI 2 \"=a\"))]\n+  \"TARGET_80387\"\n+  \"* return (char *) output_float_compare (insn, operands);\")\n+\n+(define_insn \"\"\n+  [(set (cc0)\n+\t(compare:CC (float_extend:DF\n+\t\t     (match_operand:SF 0 \"nonimmediate_operand\" \"fm\"))\n+\t\t    (match_operand:DF 1 \"register_operand\" \"f\")))\n+   (clobber (match_scratch:HI 2 \"=a\"))]\n   \"TARGET_80387\"\n   \"* return (char *) output_float_compare (insn, operands);\")\n \n@@ -341,20 +360,39 @@\n   \"TARGET_80387\"\n   \"* return (char *) output_float_compare (insn, operands);\")\n \n+(define_insn \"\"\n+  [(set (cc0)\n+\t(compare:CCFPEQ (float_extend:DF\n+\t\t\t (match_operand:SF 0 \"register_operand\" \"f\"))\n+\t\t\t(match_operand:DF 1 \"register_operand\" \"f\")))\n+   (clobber (match_scratch:HI 2 \"=a\"))]\n+  \"TARGET_80387\"\n+  \"* return (char *) output_float_compare (insn, operands);\")\n+\n (define_insn \"cmpsf_cc\"\n+  [(set (cc0)\n+\t(compare:CC (match_operand:SF 0 \"nonimmediate_operand\" \"f,fm\")\n+\t\t    (match_operand:SF 1 \"nonimmediate_operand\" \"fm,f\")))\n+   (clobber (match_scratch:HI 2 \"=a,a\"))]\n+  \"TARGET_80387\n+   && (GET_CODE (operands[0]) != MEM || GET_CODE (operands[1]) != MEM)\"\n+  \"* return (char *) output_float_compare (insn, operands);\")\n+\n+(define_insn \"\"\n   [(set (cc0)\n \t(compare:CC (match_operand:SF 0 \"register_operand\" \"f\")\n-\t\t    (match_operand:SF 1 \"nonimmediate_operand\" \"fm\")))\n+\t\t    (float:SF\n+\t\t     (match_operand:SI 1 \"nonimmediate_operand\" \"rm\"))))\n    (clobber (match_scratch:HI 2 \"=a\"))]\n   \"TARGET_80387\"\n   \"* return (char *) output_float_compare (insn, operands);\")\n \n (define_insn \"\"\n   [(set (cc0)\n-\t(compare:CC (match_operand:SF 0 \"register_operand\" \"f,f\")\n-\t\t    (float:SF\n-\t\t     (match_operand:SI 1 \"nonimmediate_operand\" \"m,!*r\"))))\n-   (clobber (match_scratch:HI 2 \"=a,a\"))]\n+\t(compare:CC (float:SF\n+\t\t     (match_operand:SI 0 \"nonimmediate_operand\" \"rm\"))\n+\t\t    (match_operand:SF 1 \"register_operand\" \"f\")))\n+   (clobber (match_scratch:HI 2 \"=a\"))]\n   \"TARGET_80387\"\n   \"* return (char *) output_float_compare (insn, operands);\")\n \n@@ -1253,17 +1291,17 @@\n ;; These match a signed conversion of either DFmode or SFmode to DImode.\n \n (define_insn \"\"\n-  [(set (match_operand:DI 0 \"general_operand\" \"=m,!*r\")\n-\t(fix:DI (fix:DF (match_operand:DF 1 \"register_operand\" \"f,f\"))))\n-   (clobber (match_scratch:HI 2 \"=&r,&r\"))\n+  [(set (match_operand:DI 0 \"general_operand\" \"=rm\")\n+\t(fix:DI (fix:DF (match_operand:DF 1 \"register_operand\" \"f\"))))\n+   (clobber (match_scratch:HI 2 \"=&r\"))\n    (clobber (match_dup 1))]\n   \"TARGET_80387\"\n   \"* return (char *) output_fix_trunc (insn, operands);\")\n \n (define_insn \"\"\n-  [(set (match_operand:DI 0 \"general_operand\" \"=m,!*r\")\n-\t(fix:DI (fix:SF (match_operand:SF 1 \"register_operand\" \"f,f\"))))\n-   (clobber (match_scratch:HI 2 \"=&r,&r\"))\n+  [(set (match_operand:DI 0 \"general_operand\" \"=rm\")\n+\t(fix:DI (fix:SF (match_operand:SF 1 \"register_operand\" \"f\"))))\n+   (clobber (match_scratch:HI 2 \"=&r\"))\n    (clobber (match_dup 1))]\n   \"TARGET_80387\"\n   \"* return (char *) output_fix_trunc (insn, operands);\")\n@@ -1287,16 +1325,16 @@\n   \"\")\n \n (define_insn \"\"\n-  [(set (match_operand:SI 0 \"general_operand\" \"=m,!*r\")\n-\t(fix:SI (fix:DF (match_operand:DF 1 \"register_operand\" \"f,f\"))))\n-   (clobber (match_scratch:HI 2 \"=&r,&r\"))]\n+  [(set (match_operand:SI 0 \"general_operand\" \"=rm\")\n+\t(fix:SI (fix:DF (match_operand:DF 1 \"register_operand\" \"f\"))))\n+   (clobber (match_scratch:HI 2 \"=&r\"))]\n   \"TARGET_80387\"\n   \"* return (char *) output_fix_trunc (insn, operands);\")\n \n (define_insn \"\"\n-  [(set (match_operand:SI 0 \"general_operand\" \"=m,!*r\")\n-\t(fix:SI (fix:SF (match_operand:SF 1 \"register_operand\" \"f,f\"))))\n-   (clobber (match_scratch:HI 2 \"=&r,&r\"))]\n+  [(set (match_operand:SI 0 \"general_operand\" \"=rm\")\n+\t(fix:SI (fix:SF (match_operand:SF 1 \"register_operand\" \"f\"))))\n+   (clobber (match_scratch:HI 2 \"=&r\"))]\n   \"TARGET_80387\"\n   \"* return (char *) output_fix_trunc (insn, operands);\")\n \f\n@@ -1307,33 +1345,33 @@\n \n (define_expand \"floatsisf2\"\n   [(set (match_operand:SF 0 \"register_operand\" \"\")\n-\t(float:SF (match_operand:SI 1 \"general_operand\" \"\")))]\n+\t(float:SF (match_operand:SI 1 \"nonimmediate_operand\" \"\")))]\n   \"TARGET_80387\"\n   \"\")\n \n (define_expand \"floatdisf2\"\n   [(set (match_operand:SF 0 \"register_operand\" \"\")\n-\t(float:SF (match_operand:DI 1 \"general_operand\" \"\")))]\n+\t(float:SF (match_operand:DI 1 \"nonimmediate_operand\" \"\")))]\n   \"TARGET_80387\"\n   \"\")\n \n (define_expand \"floatsidf2\"\n   [(set (match_operand:DF 0 \"register_operand\" \"\")\n-\t(float:DF (match_operand:SI 1 \"general_operand\" \"\")))]\n+\t(float:DF (match_operand:SI 1 \"nonimmediate_operand\" \"\")))]\n   \"TARGET_80387\"\n   \"\")\n \n (define_expand \"floatdidf2\"\n   [(set (match_operand:DF 0 \"register_operand\" \"\")\n-\t(float:DF (match_operand:DI 1 \"general_operand\" \"\")))]\n+\t(float:DF (match_operand:DI 1 \"nonimmediate_operand\" \"\")))]\n   \"TARGET_80387\"\n   \"\")\n \n ;; This will convert from SImode or DImode to MODE_FLOAT.\n \n (define_insn \"\"\n-  [(set (match_operand:DF 0 \"register_operand\" \"=f,f\")\n-\t(float:DF (match_operand:DI 1 \"general_operand\" \"m,!*r\")))]\n+  [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n+\t(float:DF (match_operand:DI 1 \"nonimmediate_operand\" \"rm\")))]\n   \"TARGET_80387\"\n   \"*\n {\n@@ -1349,8 +1387,8 @@\n }\")\n \n (define_insn \"\"\n-  [(set (match_operand:SF 0 \"register_operand\" \"=f,f\")\n-\t(float:SF (match_operand:DI 1 \"general_operand\" \"m,!*r\")))]\n+  [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n+\t(float:SF (match_operand:DI 1 \"nonimmediate_operand\" \"rm\")))]\n   \"TARGET_80387\"\n   \"*\n {\n@@ -1366,8 +1404,8 @@\n }\")\n \n (define_insn \"\"\n-  [(set (match_operand:DF 0 \"register_operand\" \"=f,f\")\n-\t(float:DF (match_operand:SI 1 \"general_operand\" \"m,!*r\")))]\n+  [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n+\t(float:DF (match_operand:SI 1 \"nonimmediate_operand\" \"rm\")))]\n   \"TARGET_80387\"\n   \"*\n {\n@@ -1383,8 +1421,8 @@\n }\")\n \n (define_insn \"\"\n-  [(set (match_operand:SF 0 \"register_operand\" \"=f,f\")\n-\t(float:SF (match_operand:SI 1 \"general_operand\" \"m,!*r\")))]\n+  [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n+\t(float:SF (match_operand:SI 1 \"nonimmediate_operand\" \"rm\")))]\n   \"TARGET_80387\"\n   \"*\n {\n@@ -4223,65 +4261,65 @@\n (define_insn \"\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f,f\")\n \t(match_operator:DF 3 \"binary_387_op\"\n-\t\t\t[(match_operand:DF 1 \"general_operand\" \"0,fm\")\n-\t\t\t (match_operand:DF 2 \"general_operand\" \"fm,0\")]))]\n+\t\t\t[(match_operand:DF 1 \"nonimmediate_operand\" \"0,fm\")\n+\t\t\t (match_operand:DF 2 \"nonimmediate_operand\" \"fm,0\")]))]\n   \"TARGET_80387\"\n   \"* return (char *) output_387_binary_op (insn, operands);\")\n \n (define_insn \"\"\n-  [(set (match_operand:DF 0 \"register_operand\" \"=f,f\")\n+  [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n \t(match_operator:DF 3 \"binary_387_op\"\n-\t   [(float:DF (match_operand:SI 1 \"general_operand\" \"m,!*r\"))\n-\t    (match_operand:DF 2 \"general_operand\" \"0,0\")]))]\n+\t   [(float:DF (match_operand:SI 1 \"general_operand\" \"rm\"))\n+\t    (match_operand:DF 2 \"general_operand\" \"0\")]))]\n   \"TARGET_80387\"\n   \"* return (char *) output_387_binary_op (insn, operands);\")\n \n (define_insn \"\"\n-  [(set (match_operand:DF 0 \"register_operand\" \"=f,f,f\")\n+  [(set (match_operand:DF 0 \"register_operand\" \"=f,f\")\n \t(match_operator:DF 3 \"binary_387_op\"\n-\t   [(float_extend:DF (match_operand:SF 1 \"general_operand\" \"fm,!*r,0\"))\n-\t    (match_operand:DF 2 \"general_operand\" \"0,0,f\")]))]\n+\t   [(float_extend:DF (match_operand:SF 1 \"general_operand\" \"fm,0\"))\n+\t    (match_operand:DF 2 \"general_operand\" \"0,f\")]))]\n   \"TARGET_80387\"\n   \"* return (char *) output_387_binary_op (insn, operands);\")\n \n (define_insn \"\"\n-  [(set (match_operand:DF 0 \"register_operand\" \"=f,f\")\n+  [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n \t(match_operator:DF 3 \"binary_387_op\"\n-\t  [(match_operand:DF 1 \"general_operand\" \"0,0\")\n-\t   (float:DF (match_operand:SI 2 \"general_operand\" \"m,!*r\"))]))]\n+\t  [(match_operand:DF 1 \"general_operand\" \"0\")\n+\t   (float:DF (match_operand:SI 2 \"general_operand\" \"rm\"))]))]\n   \"TARGET_80387\"\n   \"* return (char *) output_387_binary_op (insn, operands);\")\n \n (define_insn \"\"\n-  [(set (match_operand:DF 0 \"register_operand\" \"=f,f,f\")\n+  [(set (match_operand:DF 0 \"register_operand\" \"=f,f\")\n \t(match_operator:DF 3 \"binary_387_op\"\n-\t  [(match_operand:DF 1 \"general_operand\" \"0,0,f\")\n+\t  [(match_operand:DF 1 \"general_operand\" \"0,f\")\n \t   (float_extend:DF\n-\t    (match_operand:SF 2 \"general_operand\" \"fm,!*r,0\"))]))]\n+\t    (match_operand:SF 2 \"general_operand\" \"fm,0\"))]))]\n   \"TARGET_80387\"\n   \"* return (char *) output_387_binary_op (insn, operands);\")\n \n (define_insn \"\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=f,f\")\n \t(match_operator:SF 3 \"binary_387_op\"\n-\t\t\t[(match_operand:SF 1 \"general_operand\" \"0,fm\")\n-\t\t\t (match_operand:SF 2 \"general_operand\" \"fm,0\")]))]\n+\t\t\t[(match_operand:SF 1 \"nonimmediate_operand\" \"0,fm\")\n+\t\t\t (match_operand:SF 2 \"nonimmediate_operand\" \"fm,0\")]))]\n   \"TARGET_80387\"\n   \"* return (char *) output_387_binary_op (insn, operands);\")\n \n (define_insn \"\"\n-  [(set (match_operand:SF 0 \"register_operand\" \"=f,f\")\n+  [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n \t(match_operator:SF 3 \"binary_387_op\"\n-\t  [(float:SF (match_operand:SI 1 \"general_operand\" \"m,!*r\"))\n-\t   (match_operand:SF 2 \"general_operand\" \"0,0\")]))]\n+\t  [(float:SF (match_operand:SI 1 \"general_operand\" \"rm\"))\n+\t   (match_operand:SF 2 \"general_operand\" \"0\")]))]\n   \"TARGET_80387\"\n   \"* return (char *) output_387_binary_op (insn, operands);\")\n \n (define_insn \"\"\n-  [(set (match_operand:SF 0 \"register_operand\" \"=f,f\")\n+  [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n \t(match_operator:SF 3 \"binary_387_op\"\n-\t  [(match_operand:SF 1 \"general_operand\" \"0,0\")\n-\t   (float:SF (match_operand:SI 2 \"general_operand\" \"m,!*r\"))]))]\n+\t  [(match_operand:SF 1 \"general_operand\" \"0\")\n+\t   (float:SF (match_operand:SI 2 \"general_operand\" \"rm\"))]))]\n   \"TARGET_80387\"\n   \"* return (char *) output_387_binary_op (insn, operands);\")\n \f\n@@ -4306,7 +4344,7 @@\n \n ;; It might seem that operands 0 & 1 could use predicate register_operand.\n ;; But strength reduction might offset the MEM expression.  So we let\n-;; reload put the address into %edi & %esi.\n+;; reload put the address into %edi.\n \n (define_insn \"\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=&c\")"}]}