{"sha": "1e1489810862efafe7d8d4a06d1d9eb25e0eccb3", "node_id": "C_kwDOANBUbNoAKDFlMTQ4OTgxMDg2MmVmYWZlN2Q4ZDRhMDZkMWQ5ZWIyNWUwZWNjYjM", "commit": {"author": {"name": "Pierre-Emmanuel Patry", "email": "pierre-emmanuel.patry@embecosm.com", "date": "2023-04-24T14:46:23Z"}, "committer": {"name": "CohenArthur", "email": "arthur.cohen@embecosm.com", "date": "2023-05-05T07:41:24Z"}, "message": "libproc_macro: Add proc_macro interface structures\n\nAdd the structures that should be used by a compiler opening a\nprocedural macro to either identify or execute it.\n\nChangeLog:\n\n\t* libgrust/libproc_macro/proc_macro.h (struct CustomDerivePayload):\n\tAdd C compatible payload structure.\n\t(struct AttrPayload): Likewise.\n\t(struct BangPayload): Likewise.\n\t(enum ProcmacroTag): Add tag for tagged union.\n\t(union ProcmacroPayload): Proc macro payload union.\n\t(struct Procmacro): Tagged union.\n\nSigned-off-by: Pierre-Emmanuel Patry <pierre-emmanuel.patry@embecosm.com>", "tree": {"sha": "7387bffd9b4909f8d6362a847b62133251315991", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7387bffd9b4909f8d6362a847b62133251315991"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1e1489810862efafe7d8d4a06d1d9eb25e0eccb3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e1489810862efafe7d8d4a06d1d9eb25e0eccb3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e1489810862efafe7d8d4a06d1d9eb25e0eccb3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e1489810862efafe7d8d4a06d1d9eb25e0eccb3/comments", "author": {"login": "P-E-P", "id": 32375388, "node_id": "MDQ6VXNlcjMyMzc1Mzg4", "avatar_url": "https://avatars.githubusercontent.com/u/32375388?v=4", "gravatar_id": "", "url": "https://api.github.com/users/P-E-P", "html_url": "https://github.com/P-E-P", "followers_url": "https://api.github.com/users/P-E-P/followers", "following_url": "https://api.github.com/users/P-E-P/following{/other_user}", "gists_url": "https://api.github.com/users/P-E-P/gists{/gist_id}", "starred_url": "https://api.github.com/users/P-E-P/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/P-E-P/subscriptions", "organizations_url": "https://api.github.com/users/P-E-P/orgs", "repos_url": "https://api.github.com/users/P-E-P/repos", "events_url": "https://api.github.com/users/P-E-P/events{/privacy}", "received_events_url": "https://api.github.com/users/P-E-P/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bb1e40da864addfc2d8dfc310928b7a4e7b13185", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb1e40da864addfc2d8dfc310928b7a4e7b13185", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb1e40da864addfc2d8dfc310928b7a4e7b13185"}], "stats": {"total": 55, "additions": 55, "deletions": 0}, "files": [{"sha": "a5ee77435fea9c38d2f5d8491488f409e5be3bad", "filename": "libgrust/libproc_macro/proc_macro.h", "status": "modified", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e1489810862efafe7d8d4a06d1d9eb25e0eccb3/libgrust%2Flibproc_macro%2Fproc_macro.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e1489810862efafe7d8d4a06d1d9eb25e0eccb3/libgrust%2Flibproc_macro%2Fproc_macro.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgrust%2Flibproc_macro%2Fproc_macro.h?ref=1e1489810862efafe7d8d4a06d1d9eb25e0eccb3", "patch": "@@ -23,11 +23,66 @@\n #ifndef PROC_MACRO_H\n #define PROC_MACRO_H\n \n+#include <cstdint>\n #include \"literal.h\"\n #include \"tokenstream.h\"\n #include \"tokentree.h\"\n #include \"group.h\"\n #include \"punct.h\"\n #include \"ident.h\"\n \n+namespace ProcMacro {\n+\n+extern \"C\" {\n+\n+using CustomDeriveMacro = TokenStream (*) (TokenStream);\n+using AttributeMacro = TokenStream (*) (TokenStream, TokenStream);\n+using BangMacro = TokenStream (*) (TokenStream);\n+\n+struct CustomDerivePayload\n+{\n+  // TODO: UTF-8 function name\n+  char *trait_name;\n+  // TODO: UTF-8 attributes\n+  char **attributes;\n+  std::uint64_t attr_size;\n+  CustomDeriveMacro macro;\n+};\n+\n+struct AttrPayload\n+{\n+  // TODO: UTF-8 function name\n+  char *name;\n+  AttributeMacro macro;\n+};\n+\n+struct BangPayload\n+{\n+  char *name;\n+  BangMacro macro;\n+};\n+}\n+\n+enum ProcmacroTag\n+{\n+  CUSTOM_DERIVE,\n+  ATTR,\n+  BANG,\n+};\n+\n+union ProcmacroPayload\n+{\n+  CustomDerivePayload custom_derive;\n+  AttrPayload attribute;\n+  BangPayload bang;\n+};\n+\n+struct Procmacro\n+{\n+  ProcmacroTag tag;\n+  ProcmacroPayload payload;\n+};\n+\n+} // namespace ProcMacro\n+\n #endif /* ! PROC_MACRO_H */"}]}