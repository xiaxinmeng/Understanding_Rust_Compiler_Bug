{"sha": "c9850009529c89c6b634fda500d9c9dff1533bca", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yzk4NTAwMDk1MjljODljNmI2MzRmZGE1MDBkOWM5ZGZmMTUzM2JjYQ==", "commit": {"author": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2016-10-29T04:23:33Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2016-10-29T04:23:33Z"}, "message": "vax.h (REGNO_REG_CLASS): Access the REGNO argument.\n\n\t* config/vax/vax.h (REGNO_REG_CLASS): Access the REGNO argument.\n\t* config/spu/spu.h (REGNO_REG_CLASS): Likewise.\n\nFrom-SVN: r241675", "tree": {"sha": "ea8703245912f61b2ea157b1fb104bb0c5d86275", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ea8703245912f61b2ea157b1fb104bb0c5d86275"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c9850009529c89c6b634fda500d9c9dff1533bca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9850009529c89c6b634fda500d9c9dff1533bca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c9850009529c89c6b634fda500d9c9dff1533bca", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9850009529c89c6b634fda500d9c9dff1533bca/comments", "author": null, "committer": null, "parents": [{"sha": "fde1c2de05e4d0bd470f2883aa39b3c35395a419", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fde1c2de05e4d0bd470f2883aa39b3c35395a419", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fde1c2de05e4d0bd470f2883aa39b3c35395a419"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "529b58e50e200f22a9574eb041a9ed09da788372", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9850009529c89c6b634fda500d9c9dff1533bca/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9850009529c89c6b634fda500d9c9dff1533bca/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c9850009529c89c6b634fda500d9c9dff1533bca", "patch": "@@ -1,3 +1,8 @@\n+2016-10-28  Jeff Law  <law@redhat.com>\n+\n+\t* config/vax/vax.h (REGNO_REG_CLASS): Access the REGNO argument.\n+\t* config/spu/spu.h (REGNO_REG_CLASS): Likewise.\n+\n 2016-10-28  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* doc/sourcebuild.texi (Ada Tests): Remove mention of gcc chapter."}, {"sha": "7b6bad1500d6520b37afbc76e85850a58de51d12", "filename": "gcc/config/spu/spu.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9850009529c89c6b634fda500d9c9dff1533bca/gcc%2Fconfig%2Fspu%2Fspu.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9850009529c89c6b634fda500d9c9dff1533bca/gcc%2Fconfig%2Fspu%2Fspu.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fspu%2Fspu.h?ref=c9850009529c89c6b634fda500d9c9dff1533bca", "patch": "@@ -205,7 +205,8 @@ enum reg_class {\n     {0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x3}, /* general regs */ \\\n     {0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x3}} /* all regs */\n \n-#define REGNO_REG_CLASS(REGNO) (GENERAL_REGS)\n+#define REGNO_REG_CLASS(REGNO) ((void)(REGNO), GENERAL_REGS)\n+\n \n #define BASE_REG_CLASS GENERAL_REGS\n "}, {"sha": "dc77aa992231e6cd2aa83083600bb9589f14ed3b", "filename": "gcc/config/vax/vax.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9850009529c89c6b634fda500d9c9dff1533bca/gcc%2Fconfig%2Fvax%2Fvax.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9850009529c89c6b634fda500d9c9dff1533bca/gcc%2Fconfig%2Fvax%2Fvax.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvax%2Fvax.h?ref=c9850009529c89c6b634fda500d9c9dff1533bca", "patch": "@@ -226,7 +226,7 @@ enum reg_class { NO_REGS, ALL_REGS, LIM_REG_CLASSES };\n    reg number REGNO.  This could be a conditional expression\n    or could index an array.  */\n \n-#define REGNO_REG_CLASS(REGNO) ALL_REGS\n+#define REGNO_REG_CLASS(REGNO) ((void)(REGNO), ALL_REGS)\n \n /* The class value for index registers, and the one for base regs.  */\n "}]}