{"sha": "e3a325f2f013b6f934863fcd4187154666f84237", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTNhMzI1ZjJmMDEzYjZmOTM0ODYzZmNkNDE4NzE1NDY2NmY4NDIzNw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-06-13T09:47:16Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-06-13T09:47:16Z"}, "message": "[multiple changes]\n\n2014-06-13  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_cat.adb: Minor reformatting.\n\n2014-06-13  Yannick Moy  <moy@adacore.com>\n\n\t* sem_prag.adb (Analyze_Pragma/Post_Class): Fix typo.\n\n2014-06-13  Arnaud Charlet  <charlet@adacore.com>\n\n\t* gnat_rm.texi: Add detail on SPARK_05 restriction.\n\n2014-06-13  Bob Duff  <duff@adacore.com>\n\n\t* s-solita.adb (Get_Sec_Stack_Addr, Init_Tasking_Soft_Links):\n\tAdd assertions requiring the secondary stack to be initialized.\n\t* s-solita.ads (Init_Tasking_Soft_Links): Comment.\n\t* s-taprob.adb, s-tarest.adb, s-tasini.adb (elab code): Make sure the\n\tsecondary stack is initialized before calling Init_Tasking_Soft_Links,\n\tby adding pragmas Elaborate_Body.\n\n2014-06-13  Thomas Quinot  <quinot@adacore.com>\n\n\t* sem_ch13.adb (Analyze_Stream_TSS_Definition): Remove temporary\n\tkludge disabling new legality check.\n\nFrom-SVN: r211614", "tree": {"sha": "5d7f12404b9b5f13ebd1113040453a897d8ba142", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5d7f12404b9b5f13ebd1113040453a897d8ba142"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e3a325f2f013b6f934863fcd4187154666f84237", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3a325f2f013b6f934863fcd4187154666f84237", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e3a325f2f013b6f934863fcd4187154666f84237", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3a325f2f013b6f934863fcd4187154666f84237/comments", "author": null, "committer": null, "parents": [{"sha": "aa6113321ae9e0391e42fc6400d932bf35068432", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa6113321ae9e0391e42fc6400d932bf35068432", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa6113321ae9e0391e42fc6400d932bf35068432"}], "stats": {"total": 198, "additions": 176, "deletions": 22}, "files": [{"sha": "fb9e804b5f434c584de46786f1e38cd31e3027ba", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3a325f2f013b6f934863fcd4187154666f84237/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3a325f2f013b6f934863fcd4187154666f84237/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=e3a325f2f013b6f934863fcd4187154666f84237", "patch": "@@ -1,3 +1,29 @@\n+2014-06-13  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_cat.adb: Minor reformatting.\n+\n+2014-06-13  Yannick Moy  <moy@adacore.com>\n+\n+\t* sem_prag.adb (Analyze_Pragma/Post_Class): Fix typo.\n+\n+2014-06-13  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* gnat_rm.texi: Add detail on SPARK_05 restriction.\n+\n+2014-06-13  Bob Duff  <duff@adacore.com>\n+\n+\t* s-solita.adb (Get_Sec_Stack_Addr, Init_Tasking_Soft_Links):\n+\tAdd assertions requiring the secondary stack to be initialized.\n+\t* s-solita.ads (Init_Tasking_Soft_Links): Comment.\n+\t* s-taprob.adb, s-tarest.adb, s-tasini.adb (elab code): Make sure the\n+\tsecondary stack is initialized before calling Init_Tasking_Soft_Links,\n+\tby adding pragmas Elaborate_Body.\n+\n+2014-06-13  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* sem_ch13.adb (Analyze_Stream_TSS_Definition): Remove temporary\n+\tkludge disabling new legality check.\n+\n 2014-06-13  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* freeze.adb (Freeze_Record_Type): Remove checks related to SPARK"}, {"sha": "351820d64388314682cb68d12c8bff2ccbd3f1d3", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 116, "deletions": 3, "changes": 119, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3a325f2f013b6f934863fcd4187154666f84237/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3a325f2f013b6f934863fcd4187154666f84237/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=e3a325f2f013b6f934863fcd4187154666f84237", "patch": "@@ -10463,8 +10463,8 @@ violation of restriction \"SPARK\" at <file>\n @end smallexample\n \n This is not a replacement for the semantic checks performed by the\n-SPARK Examiner tool, as the compiler only deals currently with code,\n-not at all with SPARK 2005 annotations and does not guarantee catching all\n+SPARK Examiner tool, as the compiler currently only deals with code,\n+not SPARK 2005 annotations, and does not guarantee catching all\n cases of constructs forbidden by SPARK 2005.\n \n Thus it may well be the case that code which passes the compiler with\n@@ -10476,7 +10476,120 @@ This restriction can be useful in providing an initial filter for code\n developed using SPARK 2005, or in examining legacy code to see how far\n it is from meeting SPARK restrictions.\n \n-Note that if a unit is compiled in Ada 95 mode with SPARK restriction,\n+The list below summarises the checks that are performed when this\n+restriction is in force:\n+@itemize @bullet\n+@item No block statements\n+@item No case statements with only an others clause\n+@item Exit statements in loops must respect the SPARK 2005 language restrictions\n+@item No goto statements\n+@item Return can only appear as last statement in function\n+@item Function must have return statement\n+@item Loop parameter specification must include subtype mark\n+@item Prefix of expanded name cannot be a loop statement\n+@item Abstract subprogram not allowed\n+@item User-defined operators not allowed\n+@item Access type parameters not allowed\n+@item Default expressions for parameters not allowed\n+@item Default expressions for record fields not allowed\n+@item No tasking constructs allowed\n+@item Label needed at end of subprograms and packages\n+@item No mixing of positional and named parameter association\n+@item No access types as result type\n+@item No unconstrained arrays as result types\n+@item No null procedures\n+@item Initial and later declarations must be in correct order (declaration can't come after body)\n+@item No attributes on private types if full declaration not visible\n+@item No package declaration within package specification\n+@item No controlled types\n+@item No discriminant types\n+@item No overloading\n+@item Selector name cannot be operator symbol (i.e. operator symbol cannot be prefixed)\n+@item Access attribute not allowed\n+@item Allocator not allowed\n+@item Result of catenation must be String\n+@item Operands of catenation must be string literal, static char or another catenation\n+@item No conditional expressions\n+@item No explicit dereference\n+@item Quantified expression not allowed\n+@item Slicing not allowed\n+@item No exception renaming\n+@item No generic renaming\n+@item No object renaming\n+@item No use clause\n+@item Aggregates must be qualified\n+@item Non-static choice in array aggregates not allowed\n+@item The only view conversions which are allowed as in-out parameters are conversions of a tagged type to an ancestor type\n+@item No mixing of positional and named association in aggregate, no multi choice\n+@item AND, OR and XOR for arrays only allowed when operands have same static bounds\n+@item Fixed point operands to * or / must be qualified or converted\n+@item Comparison operators not allowed for Booleans or arrays (except strings)\n+@item Equality not allowed for arrays with non-matching static bounds (except strings)\n+@item Conversion / qualification not allowed for arrays with non-matching static bounds\n+@item Subprogram declaration only allowed in package spec (unless followed by import)\n+@item Access types not allowed\n+@item Incomplete type declaration not allowed\n+@item Object and subtype declarations must respect SPARK restrictions\n+@item Digits or delta constraint not allowed\n+@item Decimal fixed point type not allowed\n+@item Aliasing of objects not allowed\n+@item Modular type modulus must be power of 2\n+@item Base not allowed on subtype mark\n+@item Unary operators not allowed on modular types (except not)\n+@item Non-tagged record cannot be null\n+@item No class-wide operations\n+@item Initialization expressions must respect SPARK restrictions\n+@item Non-static ranges not allowed except in iteration schemes\n+@item String subtypes must have lower bound of 1\n+@item Subtype of Boolean cannot have constraint\n+@item At most one tagged type or extension per package\n+@item Interface is not allowed\n+@item Character literal cannot be prefixed (selector name cannot be character literal)\n+@item Record aggregate cannot contain 'others'\n+@item Component association in record aggregate must contain a single choice\n+@item Ancestor part cannot be a type mark\n+@item Attributes 'Image, 'Width and 'Value not allowed\n+@item Functions may not update globals\n+@end itemize\n+\n+The following restrictions are enforced, but note that they are actually more\n+strict that the latest SPARK 2005 language definition:\n+\n+@itemize @bullet\n+@item No derived types other than tagged type extensions\n+@item Subtype of unconstrained array must have constraint\n+@end itemize\n+\n+This list summarises the main SPARK 2005 language rules that are not\n+currently checked by the SPARK_05 restriction:\n+\n+@itemize @bullet\n+@item SPARK annotations are treated as comments so are not checked at all\n+@item Based real literals not allowed\n+@item Objects cannot be initialized at declaration by calls to user-defined functions\n+@item Objects cannot be initialized at declaration by assignments from variables\n+@item Objects cannot be initialized at declaration by assignments from indexed/selected components\n+@item Ranges shall not be null\n+@item A fixed point delta expression must be a simple expression\n+@item Restrictions on where renaming declarations may be placed\n+@item Externals of mode 'out' cannot be referenced\n+@item Externals of mode 'in' cannot be updated\n+@item Loop with no iteration scheme or exits only allowed as last statement in main program or task\n+@item Subprogram cannot have parent unit name\n+@item SPARK 2005 inherited subprogram must be prefixed with overriding\n+@item External variables (or functions that reference them) may not be passed as actual parameters\n+@item Globals must be explicitly mentioned in contract\n+@item Deferred constants cannot be completed by pragma Import\n+@item Package initialization cannot read/write variables from other packages\n+@item Prefix not allowed for entities that are directly visible\n+@item Identifier declaration can't override inherited package name\n+@item Cannot use Standard or other predefined packages as identifiers\n+@item After renaming, cannot use the original name\n+@item Subprograms can only be renamed to remove package prefix\n+@item Pragma import must be immediately after entity it names\n+@end itemize\n+\n+Note that if a unit is compiled in Ada 95 mode with the SPARK restriction,\n violations will be reported for constructs forbidden in SPARK 95,\n instead of SPARK 2005.\n "}, {"sha": "a8f101d0fd81fa6e19874cb607a2065c646c02e9", "filename": "gcc/ada/s-solita.adb", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3a325f2f013b6f934863fcd4187154666f84237/gcc%2Fada%2Fs-solita.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3a325f2f013b6f934863fcd4187154666f84237/gcc%2Fada%2Fs-solita.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-solita.adb?ref=e3a325f2f013b6f934863fcd4187154666f84237", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2004-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -95,7 +95,11 @@ package body System.Soft_Links.Tasking is\n \n    function Get_Sec_Stack_Addr return  Address is\n    begin\n-      return STPO.Self.Common.Compiler_Data.Sec_Stack_Addr;\n+      return Result : constant Address :=\n+        STPO.Self.Common.Compiler_Data.Sec_Stack_Addr\n+      do\n+         pragma Assert (Result /= Null_Address);\n+      end return;\n    end Get_Sec_Stack_Addr;\n \n    function Get_Stack_Info return Stack_Checking.Stack_Access is\n@@ -222,6 +226,8 @@ package body System.Soft_Links.Tasking is\n          SSL.Set_Sec_Stack_Addr     (SSL.Get_Sec_Stack_Addr_NT);\n          SSL.Set_Jmpbuf_Address     (SSL.Get_Jmpbuf_Address_NT);\n       end if;\n+\n+      pragma Assert (Get_Sec_Stack_Addr /= Null_Address);\n    end Init_Tasking_Soft_Links;\n \n end System.Soft_Links.Tasking;"}, {"sha": "0e987ea0bab7f58df56c85a958e3bd13c89deffb", "filename": "gcc/ada/s-solita.ads", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3a325f2f013b6f934863fcd4187154666f84237/gcc%2Fada%2Fs-solita.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3a325f2f013b6f934863fcd4187154666f84237/gcc%2Fada%2Fs-solita.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-solita.ads?ref=e3a325f2f013b6f934863fcd4187154666f84237", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---             Copyright (C) 2009, Free Software Foundation, Inc.           --\n+--          Copyright (C) 2009-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -38,6 +38,7 @@ package System.Soft_Links.Tasking is\n \n    procedure Init_Tasking_Soft_Links;\n    --  Set the tasking soft links that are common to the full and the\n-   --  restricted run times.\n+   --  restricted run times. Clients need to make sure the body of\n+   --  System.Secondary_Stack is elaborated before calling this.\n \n end System.Soft_Links.Tasking;"}, {"sha": "ec61f78c40e42635f9565f9ecfeb31c017c06a6e", "filename": "gcc/ada/s-taprob.adb", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3a325f2f013b6f934863fcd4187154666f84237/gcc%2Fada%2Fs-taprob.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3a325f2f013b6f934863fcd4187154666f84237/gcc%2Fada%2Fs-taprob.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprob.adb?ref=e3a325f2f013b6f934863fcd4187154666f84237", "patch": "@@ -7,7 +7,7 @@\n --                                  B o d y                                 --\n --                                                                          --\n --            Copyright (C) 1991-1994, Florida State University             --\n---                     Copyright (C) 1995-2011, AdaCore                     --\n+--                     Copyright (C) 1995-2014, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -38,6 +38,10 @@ with System.Task_Primitives.Operations;\n with System.Parameters;\n with System.Traces;\n with System.Soft_Links.Tasking;\n+with System.Secondary_Stack; pragma Elaborate_All (System.Secondary_Stack);\n+pragma Unreferenced (System.Secondary_Stack);\n+--  Make sure the body of Secondary_Stack is elaborated before calling\n+--  Init_Tasking_Soft_Links.\n \n package body System.Tasking.Protected_Objects is\n "}, {"sha": "f3118dc56c5c327a7ed76142f03e68cad561491a", "filename": "gcc/ada/s-tarest.adb", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3a325f2f013b6f934863fcd4187154666f84237/gcc%2Fada%2Fs-tarest.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3a325f2f013b6f934863fcd4187154666f84237/gcc%2Fada%2Fs-tarest.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tarest.adb?ref=e3a325f2f013b6f934863fcd4187154666f84237", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---         Copyright (C) 1999-2013, Free Software Foundation, Inc.          --\n+--         Copyright (C) 1999-2014, Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -47,9 +47,12 @@ with Ada.Exceptions;\n \n with System.Task_Primitives.Operations;\n with System.Soft_Links.Tasking;\n-with System.Secondary_Stack;\n with System.Storage_Elements;\n \n+with System.Secondary_Stack; pragma Elaborate_All (System.Secondary_Stack);\n+--  Make sure the body of Secondary_Stack is elaborated before calling\n+--  Init_Tasking_Soft_Links.\n+\n with System.Soft_Links;\n --  Used for the non-tasking routines (*_NT) that refer to global data. They\n --  are needed here before the tasking run time has been elaborated. used for"}, {"sha": "387854e68702000c314eff1ffe9e9fd38bb128bc", "filename": "gcc/ada/s-tasini.adb", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3a325f2f013b6f934863fcd4187154666f84237/gcc%2Fada%2Fs-tasini.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3a325f2f013b6f934863fcd4187154666f84237/gcc%2Fada%2Fs-tasini.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tasini.adb?ref=e3a325f2f013b6f934863fcd4187154666f84237", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---         Copyright (C) 1992-2013, Free Software Foundation, Inc.          --\n+--         Copyright (C) 1992-2014, Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -47,6 +47,11 @@ with System.Soft_Links.Tasking;\n with System.Tasking.Debug;\n with System.Parameters;\n \n+with System.Secondary_Stack; pragma Elaborate_All (System.Secondary_Stack);\n+pragma Unreferenced (System.Secondary_Stack);\n+--  Make sure the body of Secondary_Stack is elaborated before calling\n+--  Init_Tasking_Soft_Links.\n+\n package body System.Tasking.Initialization is\n \n    package STPO renames System.Task_Primitives.Operations;"}, {"sha": "b9800c40a9b17bb1f0336e59955ceee833451425", "filename": "gcc/ada/sem_cat.adb", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3a325f2f013b6f934863fcd4187154666f84237/gcc%2Fada%2Fsem_cat.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3a325f2f013b6f934863fcd4187154666f84237/gcc%2Fada%2Fsem_cat.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_cat.adb?ref=e3a325f2f013b6f934863fcd4187154666f84237", "patch": "@@ -2164,10 +2164,10 @@ package body Sem_Cat is\n                                    and then Is_Entity_Name (Renamed_Object (E))\n                                    and then\n                                      (Is_Preelaborated\n-                                       (Scope (Renamed_Object (E)))\n-                                         or else\n-                                           Is_Pure (Scope\n-                                             (Renamed_Object (E))))))\n+                                        (Scope (Renamed_Object (E)))\n+                                       or else\n+                                         Is_Pure\n+                                           (Scope (Renamed_Object (E))))))\n             then\n                null;\n \n@@ -2182,7 +2182,7 @@ package body Sem_Cat is\n               and then Is_Entity_Name (Val)\n               and then Is_Array_Type (Etype (Val))\n               and then not Comes_From_Source (Val)\n-             and then Nkind (Original_Node (Val)) = N_Aggregate\n+              and then Nkind (Original_Node (Val)) = N_Aggregate\n             then\n                null;\n "}, {"sha": "65fca1d1244b17b08108774884bb05269b02d4d6", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3a325f2f013b6f934863fcd4187154666f84237/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3a325f2f013b6f934863fcd4187154666f84237/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=e3a325f2f013b6f934863fcd4187154666f84237", "patch": "@@ -3236,10 +3236,6 @@ package body Sem_Ch13 is\n                 not Null_Present\n                   (Specification\n                      (Unit_Declaration_Node (Ultimate_Alias (Subp))))\n-\n-              --  Disable this test for now till Polyorb issue is fixed???\n-\n-              and then False\n             then\n                Error_Msg_N\n                  (\"stream subprogram for interface type \""}, {"sha": "c4f10ee6635f4f2a0cba759b2c498ee2cb7a35f9", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3a325f2f013b6f934863fcd4187154666f84237/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3a325f2f013b6f934863fcd4187154666f84237/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=e3a325f2f013b6f934863fcd4187154666f84237", "patch": "@@ -18032,10 +18032,10 @@ package body Sem_Prag is\n             Check_No_Identifiers;\n             Check_Pre_Post;\n \n-            --  Rewrite Post[_Class] pragma as Precondition pragma setting the\n+            --  Rewrite Post[_Class] pragma as Postcondition pragma setting the\n             --  flag Class_Present to True for the Post_Class case.\n \n-            Set_Class_Present (N, Prag_Id = Pragma_Pre_Class);\n+            Set_Class_Present (N, Prag_Id = Pragma_Post_Class);\n             PC_Pragma := New_Copy (N);\n             Set_Pragma_Identifier\n               (PC_Pragma, Make_Identifier (Loc, Name_Postcondition));"}]}