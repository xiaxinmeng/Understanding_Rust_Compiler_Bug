{"sha": "32aaf6ef10bf77d8300c0774dcc9bfcc8ed595c2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzJhYWY2ZWYxMGJmNzdkODMwMGMwNzc0ZGNjOWJmY2M4ZWQ1OTVjMg==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2017-07-06T12:42:51Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2017-07-06T12:42:51Z"}, "message": "Fix memory leaks in libstdc++ tests\n\n\t* testsuite/20_util/specialized_algorithms/memory_management_tools/\n\t1.cc: Free memory.\n\t* testsuite/22_locale/locale/cons/5.cc: Remove redundant restoration\n\tof original environment and free memory.\n\nFrom-SVN: r250021", "tree": {"sha": "ef2f6bbe354739636fa3a7c23dbadb29686571b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ef2f6bbe354739636fa3a7c23dbadb29686571b5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/32aaf6ef10bf77d8300c0774dcc9bfcc8ed595c2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32aaf6ef10bf77d8300c0774dcc9bfcc8ed595c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/32aaf6ef10bf77d8300c0774dcc9bfcc8ed595c2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32aaf6ef10bf77d8300c0774dcc9bfcc8ed595c2/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4f7c2c7ff2374cb39386f627fa97e2363dd2f94d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f7c2c7ff2374cb39386f627fa97e2363dd2f94d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f7c2c7ff2374cb39386f627fa97e2363dd2f94d"}], "stats": {"total": 66, "additions": 16, "deletions": 50}, "files": [{"sha": "20d80202ad76decbe5a22e65206461bcf0ca2c16", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32aaf6ef10bf77d8300c0774dcc9bfcc8ed595c2/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32aaf6ef10bf77d8300c0774dcc9bfcc8ed595c2/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=32aaf6ef10bf77d8300c0774dcc9bfcc8ed595c2", "patch": "@@ -1,5 +1,10 @@\n 2017-07-06  Jonathan Wakely  <jwakely@redhat.com>\n \n+\t* testsuite/20_util/specialized_algorithms/memory_management_tools/\n+\t1.cc: Free memory.\n+\t* testsuite/22_locale/locale/cons/5.cc: Remove redundant restoration\n+\tof original environment and free memory.\n+\n \t* testsuite/abi/pr42230.cc: Free memory.\n \t* testsuite/util/testsuite_abi.cc (demangle): Return std::string\n \tinstead of pointer that might need freeing."}, {"sha": "39d3e76ee82e2eebb2dd5522cb3baba448b30b31", "filename": "libstdc++-v3/testsuite/20_util/specialized_algorithms/memory_management_tools/1.cc", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32aaf6ef10bf77d8300c0774dcc9bfcc8ed595c2/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fspecialized_algorithms%2Fmemory_management_tools%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32aaf6ef10bf77d8300c0774dcc9bfcc8ed595c2/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fspecialized_algorithms%2Fmemory_management_tools%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fspecialized_algorithms%2Fmemory_management_tools%2F1.cc?ref=32aaf6ef10bf77d8300c0774dcc9bfcc8ed595c2", "patch": "@@ -180,6 +180,7 @@ void test12()\n     std::uninitialized_default_construct(target, target+10);\n   } catch (...) {\n   }\n+  free(target);\n   VERIFY(ctor_count == 5);\n   VERIFY(del_count == 5);\n   throw_after = 0;\n@@ -198,6 +199,7 @@ void test13()\n     std::uninitialized_value_construct(target, target+10);\n   } catch (...) {\n   }\n+  free(target);\n   VERIFY(ctor_count == 5);\n   VERIFY(del_count == 5);\n   throw_after = 0;\n@@ -216,6 +218,7 @@ void test14()\n     std::uninitialized_default_construct_n(target, 10);\n   } catch (...) {\n   }\n+  free(target);\n   VERIFY(ctor_count == 5);\n   VERIFY(del_count == 5);\n   throw_after = 0;\n@@ -234,6 +237,7 @@ void test15()\n     std::uninitialized_value_construct_n(target, 10);\n   } catch (...) {\n   }\n+  free(target);\n   VERIFY(ctor_count == 5);\n   VERIFY(del_count == 5);\n   throw_after = 0;\n@@ -254,6 +258,7 @@ void test16()\n     std::uninitialized_move(source.begin(), source.end(), target);\n   } catch (...) {\n   }\n+  free(target);\n   VERIFY(ctor_count == 5);\n   VERIFY(del_count == 5);\n   throw_after = 0;\n@@ -273,6 +278,7 @@ void test17()\n     std::uninitialized_move_n(source.begin(), 10, target);\n   } catch (...) {\n   }\n+  free(target);\n   VERIFY(ctor_count == 5);\n   VERIFY(del_count == 5);\n   throw_after = 0;"}, {"sha": "c0a18ce5d5c74527ea7931b2e3c880c989cc4f1e", "filename": "libstdc++-v3/testsuite/22_locale/locale/cons/5.cc", "status": "modified", "additions": 5, "deletions": 50, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32aaf6ef10bf77d8300c0774dcc9bfcc8ed595c2/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Flocale%2Fcons%2F5.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32aaf6ef10bf77d8300c0774dcc9bfcc8ed595c2/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Flocale%2Fcons%2F5.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Flocale%2Fcons%2F5.cc?ref=32aaf6ef10bf77d8300c0774dcc9bfcc8ed595c2", "patch": "@@ -37,34 +37,7 @@ void test04()\n \n #ifdef _GLIBCXX_HAVE_SETENV\n \n-  const char* LANG_orig = getenv(\"LANG\") ? strdup(getenv(\"LANG\")) : \"\";\n-  const char* LC_ALL_orig = getenv(\"LC_ALL\") ? strdup(getenv(\"LC_ALL\")) : \"\";\n-  const char* LC_CTYPE_orig = \n-    getenv(\"LC_CTYPE\") ? strdup(getenv(\"LC_CTYPE\")) : \"\";\n-  const char* LC_NUMERIC_orig = \n-    getenv(\"LC_NUMERIC\") ? strdup(getenv(\"LC_NUMERIC\")) : \"\";\n-  const char* LC_TIME_orig = \n-    getenv(\"LC_TIME\") ? strdup(getenv(\"LC_TIME\")) : \"\";\n-  const char* LC_COLLATE_orig =\n-    getenv(\"LC_COLLATE\") ? strdup(getenv(\"LC_COLLATE\")) : \"\";\n-  const char* LC_MONETARY_orig = \n-    getenv(\"LC_MONETARY\") ? strdup(getenv(\"LC_MONETARY\")) : \"\";\n-  const char* LC_MESSAGES_orig = \n-    getenv(\"LC_MESSAGES\") ? strdup(getenv(\"LC_MESSAGES\")) : \"\";\n-#if _GLIBCXX_NUM_CATEGORIES\n-  const char* LC_PAPER_orig = \n-    getenv(\"LC_PAPER\") ? strdup(getenv(\"LC_PAPER\")) : \"\";\n-  const char* LC_NAME_orig = \n-    getenv(\"LC_NAME\") ? strdup(getenv(\"LC_NAME\")) : \"\";\n-  const char* LC_ADDRESS_orig = \n-    getenv(\"LC_ADDRESS\") ? strdup(getenv(\"LC_ADDRESS\")) : \"\";\n-  const char* LC_TELEPHONE_orig = \n-    getenv(\"LC_TELEPHONE\") ? strdup(getenv(\"LC_TELEPHONE\")) : \"\";\n-  const char* LC_MEASUREMENT_orig = \n-    getenv(\"LC_MEASUREMENT\") ? strdup(getenv(\"LC_MEASUREMENT\")) : \"\";\n-  const char* LC_IDENTIFICATION_orig =\n-    getenv(\"LC_IDENTIFICATION\") ? strdup(getenv(\"LC_IDENTIFICATION\")) : \"\";\n-#endif\n+  char* LANG_orig = strdup(getenv(\"LANG\") ? getenv(\"LANG\") : \"\");\n \n   // Check that a \"POSIX\" LC_ALL is equivalent to \"C\".\n   if (!setenv(\"LC_ALL\", \"POSIX\", 1))\n@@ -91,12 +64,11 @@ void test04()\n \t  VERIFY( loc.name() == \"en_PH\" );\n \t}\n       setenv(\"LC_ALL\", \"\", 1);\n-      setenv(\"LANG\", LANG_orig ? LANG_orig : \"\", 1);\n-      setenv(\"LC_COLLATE\", LC_COLLATE_orig ? LC_COLLATE_orig : \"\", 1);\n+      setenv(\"LANG\", LANG_orig, 1);\n     }\n \n   // NB: LANG checks all LC_* macro settings. As such, all LC_* macros\n-  // must be cleared for these tests, and then restored.\n+  // must be cleared for these tests.\n   setenv(\"LC_ALL\", \"\", 1);\n   setenv(\"LC_CTYPE\", \"\", 1);\n   setenv(\"LC_NUMERIC\", \"\", 1);\n@@ -173,26 +145,9 @@ void test04()\n     }\n #endif\n \n-  // Restore the environment.\n-  setenv(\"LANG\", LANG_orig ? LANG_orig : \"\", 1);\n-  setenv(\"LC_ALL\", LC_ALL_orig ? LC_ALL_orig : \"\", 1);\n-  setenv(\"LC_CTYPE\", LC_CTYPE_orig ? LC_CTYPE_orig : \"\", 1);\n-  setenv(\"LC_NUMERIC\", LC_NUMERIC_orig ? LC_NUMERIC_orig : \"\", 1);\n-  setenv(\"LC_TIME\", LC_TIME_orig ? LC_TIME_orig : \"\", 1);\n-  setenv(\"LC_COLLATE\", LC_COLLATE_orig ? LC_COLLATE_orig : \"\", 1);\n-  setenv(\"LC_MONETARY\", LC_MONETARY_orig ? LC_MONETARY_orig : \"\", 1);\n-  setenv(\"LC_MESSAGES\", LC_MESSAGES_orig ? LC_MESSAGES_orig : \"\", 1);\n-#if _GLIBCXX_NUM_CATEGORIES\n-  setenv(\"LC_PAPER\", LC_PAPER_orig ? LC_PAPER_orig : \"\", 1);\n-  setenv(\"LC_NAME\", LC_NAME_orig ? LC_NAME_orig : \"\", 1);\n-  setenv(\"LC_ADDRESS\", LC_ADDRESS_orig ? LC_ADDRESS_orig : \"\", 1);\n-  setenv(\"LC_TELEPHONE\", LC_TELEPHONE_orig ? LC_TELEPHONE_orig : \"\", 1);\n-  setenv(\"LC_MEASUREMENT\", LC_MEASUREMENT_orig ? LC_MEASUREMENT_orig : \"\", 1);\n-  setenv(\"LC_IDENTIFICATION\", \n-         LC_IDENTIFICATION_orig ? LC_IDENTIFICATION_orig : \"\", 1);\n-#endif\n+  free(LANG_orig);\n \n-#endif\n+#endif // _GLIBCXX_HAVE_SETENV\n }\n \n int main()"}]}