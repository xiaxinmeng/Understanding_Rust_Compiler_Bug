{"sha": "f8fb3155820ca6cd39f2f7dbec796b399f705aa5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjhmYjMxNTU4MjBjYTZjZDM5ZjJmN2RiZWM3OTZiMzk5ZjcwNWFhNQ==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2014-09-19T16:42:26Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2014-09-19T16:42:26Z"}, "message": "recog.c (scratch_operand): Do not simply allow all hard registers: only allow those that are allocatable.\n\n2014-09-19  Segher Boessenkool  <segher@kernel.crashing.org>\n\n\t* recog.c (scratch_operand): Do not simply allow all hard registers:\n\tonly allow those that are allocatable.\n\nFrom-SVN: r215399", "tree": {"sha": "34279d24ff4fd38531af3992c0fe6c7fd25209d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/34279d24ff4fd38531af3992c0fe6c7fd25209d0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f8fb3155820ca6cd39f2f7dbec796b399f705aa5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8fb3155820ca6cd39f2f7dbec796b399f705aa5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f8fb3155820ca6cd39f2f7dbec796b399f705aa5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8fb3155820ca6cd39f2f7dbec796b399f705aa5/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2b9c63a2d8368252eded6fbdbafb4786e2fdf412", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b9c63a2d8368252eded6fbdbafb4786e2fdf412", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b9c63a2d8368252eded6fbdbafb4786e2fdf412"}], "stats": {"total": 9, "additions": 8, "deletions": 1}, "files": [{"sha": "22b068d1cc5690f07ee6b9c63b47ae41f60ccce3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8fb3155820ca6cd39f2f7dbec796b399f705aa5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8fb3155820ca6cd39f2f7dbec796b399f705aa5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f8fb3155820ca6cd39f2f7dbec796b399f705aa5", "patch": "@@ -1,3 +1,8 @@\n+2014-09-19  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\t* recog.c (scratch_operand): Do not simply allow all hard registers:\n+\tonly allow those that are allocatable.\n+\n 2014-09-19  Felix Yang  <felix.yang@huawei.com>\n \n \t* cfgrtl.c ira.c ira-color.c ira-conflicts ira-lives.c: Update"}, {"sha": "5ee3816c7cfdb3e63ebe3f95c9820b07ceebc4a8", "filename": "gcc/recog.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8fb3155820ca6cd39f2f7dbec796b399f705aa5/gcc%2Frecog.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8fb3155820ca6cd39f2f7dbec796b399f705aa5/gcc%2Frecog.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frecog.c?ref=f8fb3155820ca6cd39f2f7dbec796b399f705aa5", "patch": "@@ -1143,7 +1143,9 @@ scratch_operand (rtx op, enum machine_mode mode)\n \n   return (GET_CODE (op) == SCRATCH\n \t  || (REG_P (op)\n-\t      && (lra_in_progress || REGNO (op) < FIRST_PSEUDO_REGISTER)));\n+\t      && (lra_in_progress\n+\t\t  || (REGNO (op) < FIRST_PSEUDO_REGISTER\n+\t\t      && REGNO_REG_CLASS (REGNO (op)) != NO_REGS))));\n }\n \n /* Return 1 if OP is a valid immediate operand for mode MODE."}]}