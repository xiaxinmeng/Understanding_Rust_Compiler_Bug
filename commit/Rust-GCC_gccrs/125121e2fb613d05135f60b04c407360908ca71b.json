{"sha": "125121e2fb613d05135f60b04c407360908ca71b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTI1MTIxZTJmYjYxM2QwNTEzNWY2MGIwNGM0MDczNjA5MDhjYTcxYg==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2005-05-05T21:57:46Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2005-05-05T21:57:46Z"}, "message": "decl2.c (deferred_fns, [...]): Use VEC instead of VARRAY.\n\n\t* decl2.c (deferred_fns, note_vague_linkage_fn,\n\tcp_finish_file): Use VEC instead of VARRAY.\n\nFrom-SVN: r99290", "tree": {"sha": "4bd768fd63ed2e6d94776cacd691b82da34a0acc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4bd768fd63ed2e6d94776cacd691b82da34a0acc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/125121e2fb613d05135f60b04c407360908ca71b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/125121e2fb613d05135f60b04c407360908ca71b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/125121e2fb613d05135f60b04c407360908ca71b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/125121e2fb613d05135f60b04c407360908ca71b/comments", "author": null, "committer": null, "parents": [{"sha": "bd96cd55b4d746cff8f596cb2c0fd564786bc6d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd96cd55b4d746cff8f596cb2c0fd564786bc6d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd96cd55b4d746cff8f596cb2c0fd564786bc6d1"}], "stats": {"total": 22, "additions": 10, "deletions": 12}, "files": [{"sha": "2f268649fdc36a41f9b2dc477893222f2f70dfda", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/125121e2fb613d05135f60b04c407360908ca71b/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/125121e2fb613d05135f60b04c407360908ca71b/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=125121e2fb613d05135f60b04c407360908ca71b", "patch": "@@ -1,3 +1,8 @@\n+2005-05-05  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* decl2.c (deferred_fns, note_vague_linkage_fn,\n+\tcp_finish_file): Use VEC instead of VARRAY.\n+\n 2005-05-05  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/21352"}, {"sha": "91ef55c40466c466539629b35f309caa25066242", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 5, "deletions": 12, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/125121e2fb613d05135f60b04c407360908ca71b/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/125121e2fb613d05135f60b04c407360908ca71b/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=125121e2fb613d05135f60b04c407360908ca71b", "patch": "@@ -92,9 +92,7 @@ static GTY(()) varray_type pending_statics;\n \n /* A list of functions which were declared inline, but which we\n    may need to emit outline anyway.  */\n-static GTY(()) varray_type deferred_fns;\n-#define deferred_fns_used \\\n-  (deferred_fns ? deferred_fns->elements_used : 0)\n+static GTY(()) VEC(tree,gc) *deferred_fns;\n \n /* Flag used when debugging spew.c */\n \n@@ -732,9 +730,7 @@ note_vague_linkage_fn (tree decl)\n     {\n       DECL_DEFERRED_FN (decl) = 1;\n       DECL_DEFER_OUTPUT (decl) = 1;\n-      if (!deferred_fns)\n-\tVARRAY_TREE_INIT (deferred_fns, 32, \"deferred_fns\");\n-      VARRAY_PUSH_TREE (deferred_fns, decl);\n+      VEC_safe_push (tree, gc, deferred_fns, decl);\n     }\n }\n \n@@ -2747,6 +2743,7 @@ cp_finish_file (void)\n   location_t locus;\n   unsigned ssdf_count = 0;\n   int retries = 0;\n+  tree decl;\n \n   locus = input_location;\n   at_eof = 1;\n@@ -2910,10 +2907,8 @@ cp_finish_file (void)\n       /* Go through the set of inline functions whose bodies have not\n \t been emitted yet.  If out-of-line copies of these functions\n \t are required, emit them.  */\n-      for (i = 0; i < deferred_fns_used; ++i)\n+      for (i = 0; VEC_iterate (tree, deferred_fns, i, decl); ++i)\n \t{\n-\t  tree decl = VARRAY_TREE (deferred_fns, i);\n-\n \t  /* Does it need synthesizing?  */\n \t  if (DECL_ARTIFICIAL (decl) && ! DECL_INITIAL (decl)\n \t      && (! DECL_REALLY_EXTERN (decl) || DECL_INLINE (decl)))\n@@ -2998,10 +2993,8 @@ cp_finish_file (void)\n   while (reconsider);\n \n   /* All used inline functions must have a definition at this point.  */\n-  for (i = 0; i < deferred_fns_used; ++i)\n+  for (i = 0; VEC_iterate (tree, deferred_fns, i, decl); ++i)\n     {\n-      tree decl = VARRAY_TREE (deferred_fns, i);\n-\n       if (/* Check online inline functions that were actually used.  */\n \t  TREE_USED (decl) && DECL_DECLARED_INLINE_P (decl)\n \t  /* But not defined.  */"}]}