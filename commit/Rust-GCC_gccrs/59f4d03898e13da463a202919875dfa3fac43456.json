{"sha": "59f4d03898e13da463a202919875dfa3fac43456", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTlmNGQwMzg5OGUxM2RhNDYzYTIwMjkxOTg3NWRmYTNmYWM0MzQ1Ng==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2014-07-17T06:31:56Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-07-17T06:31:56Z"}, "message": "back_end.adb: Minor reformatting and comment additions.\n\n2014-07-17  Robert Dewar  <dewar@adacore.com>\n\n\t* back_end.adb: Minor reformatting and comment additions.\n\t* checks.ads, checks.adb (Duplicated_Tag_Checks_Suppressed): New\n\tfunction.\n\t* exp_disp.adb (Make_DT): Use Duplicated_Tag_Checks_Suppressed.\n\t(Make_VM_TSD): Use Duplicated_Tag_Checks_Suppressed.\n\t* gnat_rm.texi: Document new check Duplicated_Tag_Checks_Suppressed.\n\t* gnat_ugn.texi: Additional documentation for Duplicated_Tag_Check.\n\t* snames.ads-tmpl (Duplicated_Tag_Checks_Suppressed): New check.\n\t* types.ads (Duplicated_Tag_Checks_Suppressed): New check.\n\nFrom-SVN: r212724", "tree": {"sha": "84782b9ac1d2b0036fbe2feefa633ef942ef6fe3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/84782b9ac1d2b0036fbe2feefa633ef942ef6fe3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/59f4d03898e13da463a202919875dfa3fac43456", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59f4d03898e13da463a202919875dfa3fac43456", "html_url": "https://github.com/Rust-GCC/gccrs/commit/59f4d03898e13da463a202919875dfa3fac43456", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59f4d03898e13da463a202919875dfa3fac43456/comments", "author": null, "committer": null, "parents": [{"sha": "26d5fb62eff87da5ee2ff5bf2f7129d2a842f8c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26d5fb62eff87da5ee2ff5bf2f7129d2a842f8c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/26d5fb62eff87da5ee2ff5bf2f7129d2a842f8c6"}], "stats": {"total": 144, "additions": 109, "deletions": 35}, "files": [{"sha": "816b596c61fb229bfaa7558490523087b5cec506", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59f4d03898e13da463a202919875dfa3fac43456/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59f4d03898e13da463a202919875dfa3fac43456/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=59f4d03898e13da463a202919875dfa3fac43456", "patch": "@@ -1,3 +1,15 @@\n+2014-07-17  Robert Dewar  <dewar@adacore.com>\n+\n+\t* back_end.adb: Minor reformatting and comment additions.\n+\t* checks.ads, checks.adb (Duplicated_Tag_Checks_Suppressed): New\n+\tfunction.\n+\t* exp_disp.adb (Make_DT): Use Duplicated_Tag_Checks_Suppressed.\n+\t(Make_VM_TSD): Use Duplicated_Tag_Checks_Suppressed.\n+\t* gnat_rm.texi: Document new check Duplicated_Tag_Checks_Suppressed.\n+\t* gnat_ugn.texi: Additional documentation for Duplicated_Tag_Check.\n+\t* snames.ads-tmpl (Duplicated_Tag_Checks_Suppressed): New check.\n+\t* types.ads (Duplicated_Tag_Checks_Suppressed): New check.\n+\n 2014-07-17  Robert Dewar  <dewar@adacore.com>\n \n \t* gnat_rm.texi: Minor comment updates."}, {"sha": "1d5de114e245624cc6dbed56b26bd6222bb22cbe", "filename": "gcc/ada/back_end.adb", "status": "modified", "additions": 21, "deletions": 17, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59f4d03898e13da463a202919875dfa3fac43456/gcc%2Fada%2Fback_end.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59f4d03898e13da463a202919875dfa3fac43456/gcc%2Fada%2Fback_end.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fback_end.adb?ref=59f4d03898e13da463a202919875dfa3fac43456", "patch": "@@ -23,23 +23,23 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n-with Atree;     use Atree;\n-with Debug;     use Debug;\n-with Elists;    use Elists;\n-with Errout;    use Errout;\n-with Lib;       use Lib;\n-with Osint;     use Osint;\n-with Opt;       use Opt;\n-with Osint.C;   use Osint.C;\n-with Namet;     use Namet;\n-with Nlists;    use Nlists;\n-with Stand;     use Stand;\n-with Sinput;    use Sinput;\n-with Stringt;   use Stringt;\n-with Switch;    use Switch;\n-with Switch.C;  use Switch.C;\n-with System;    use System;\n-with Types;     use Types;\n+with Atree;    use Atree;\n+with Debug;    use Debug;\n+with Elists;   use Elists;\n+with Errout;   use Errout;\n+with Lib;      use Lib;\n+with Osint;    use Osint;\n+with Opt;      use Opt;\n+with Osint.C;  use Osint.C;\n+with Namet;    use Namet;\n+with Nlists;   use Nlists;\n+with Stand;    use Stand;\n+with Sinput;   use Sinput;\n+with Stringt;  use Stringt;\n+with Switch;   use Switch;\n+with Switch.C; use Switch.C;\n+with System;   use System;\n+with Types;    use Types;\n \n with System.OS_Lib; use System.OS_Lib;\n \n@@ -126,6 +126,8 @@ package body Back_End is\n            Nat (Physical_To_Logical (Last_Source_Line (J), J));\n       end loop;\n \n+      --  Deal with case of generating SCIL, we should not be here!\n+\n       if Generate_SCIL then\n          Error_Msg_N (\"'S'C'I'L generation not available\", Cunit (Main_Unit));\n \n@@ -137,6 +139,8 @@ package body Back_End is\n          end if;\n       end if;\n \n+      --  The actual call to the back end\n+\n       gigi\n         (gnat_root          => Int (Cunit (Main_Unit)),\n          max_gnat_node      => Int (Last_Node_Id - First_Node_Id + 1),"}, {"sha": "81bbc67a51220c950a40a2a014569dbd1df1e608", "filename": "gcc/ada/checks.adb", "status": "modified", "additions": 32, "deletions": 3, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59f4d03898e13da463a202919875dfa3fac43456/gcc%2Fada%2Fchecks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59f4d03898e13da463a202919875dfa3fac43456/gcc%2Fada%2Fchecks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.adb?ref=59f4d03898e13da463a202919875dfa3fac43456", "patch": "@@ -423,6 +423,11 @@ package body Checks is\n    -- Allocation_Checks_Suppressed --\n    ----------------------------------\n \n+   --  Note: at the current time there are no calls to this function, because\n+   --  the relevant check is in the run-time, so it is not a check that the\n+   --  compiler can suppress anyway, but we still have to recognize the check\n+   --  name Allocation_Check since it is part of the standard.\n+\n    function Allocation_Checks_Suppressed (E : Entity_Id) return Boolean is\n    begin\n       if Present (E) and then Checks_May_Be_Suppressed (E) then\n@@ -4616,6 +4621,19 @@ package body Checks is\n       end if;\n    end Division_Checks_Suppressed;\n \n+   --------------------------------------\n+   -- Duplicated_Tag_Checks_Suppressed --\n+   --------------------------------------\n+\n+   function Duplicated_Tag_Checks_Suppressed (E : Entity_Id) return Boolean is\n+   begin\n+      if Present (E) and then Checks_May_Be_Suppressed (E) then\n+         return Is_Check_Suppressed (E, Duplicated_Tag_Check);\n+      else\n+         return Scope_Suppress.Suppress (Duplicated_Tag_Check);\n+      end if;\n+   end Duplicated_Tag_Checks_Suppressed;\n+\n    -----------------------------------\n    -- Elaboration_Checks_Suppressed --\n    -----------------------------------\n@@ -6478,15 +6496,24 @@ package body Checks is\n \n          --  Force evaluation to avoid multiple reads for atomic/volatile\n \n+         --  Note: we set Name_Req to False. We used to set it to True, with\n+         --  the thinking that a name is required as the prefix of the 'Valid\n+         --  call, but in fact the check that the prefix of an attribute is\n+         --  a name is in the parser, and we just don't require it here.\n+         --  Moreover, when we set Name_Req to True, that interfered with the\n+         --  checking for Volatile, since we couldn't just capture the value.\n+\n          if Is_Entity_Name (Exp)\n            and then Is_Volatile (Entity (Exp))\n          then\n-            Force_Evaluation (Exp, Name_Req => True);\n+            --  Same reasoning as above for setting Name_Req to False\n+\n+            Force_Evaluation (Exp, Name_Req => False);\n          end if;\n \n          --  Build the prefix for the 'Valid call\n \n-         PV := Duplicate_Subexpr_No_Checks (Exp, Name_Req => True);\n+         PV := Duplicate_Subexpr_No_Checks (Exp, Name_Req => False);\n \n          --  A rather specialized kludge. If PV is an analyzed expression\n          --  which is an indexed component of a packed array that has not\n@@ -6504,7 +6531,9 @@ package body Checks is\n             Set_Analyzed (PV, False);\n          end if;\n \n-         --  Build the raise CE node to check for validity\n+         --  Build the raise CE node to check for validity. We build a type\n+         --  qualification for the prefix, since it may not be of the form of\n+         --  a name, and we don't care in this context!\n \n          CE :=\n             Make_Raise_Constraint_Error (Loc,"}, {"sha": "e1b538d97125dba756d260af37d5cf2b7557dd89", "filename": "gcc/ada/checks.ads", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59f4d03898e13da463a202919875dfa3fac43456/gcc%2Fada%2Fchecks.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59f4d03898e13da463a202919875dfa3fac43456/gcc%2Fada%2Fchecks.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.ads?ref=59f4d03898e13da463a202919875dfa3fac43456", "patch": "@@ -54,6 +54,7 @@ package Checks is\n    function Atomic_Synchronization_Disabled   (E : Entity_Id) return Boolean;\n    function Discriminant_Checks_Suppressed    (E : Entity_Id) return Boolean;\n    function Division_Checks_Suppressed        (E : Entity_Id) return Boolean;\n+   function Duplicated_Tag_Checks_Suppressed  (E : Entity_Id) return Boolean;\n    function Elaboration_Checks_Suppressed     (E : Entity_Id) return Boolean;\n    function Index_Checks_Suppressed           (E : Entity_Id) return Boolean;\n    function Length_Checks_Suppressed          (E : Entity_Id) return Boolean;"}, {"sha": "0cf6eb632569d1d4b6324c3b197986723521b380", "filename": "gcc/ada/exp_disp.adb", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59f4d03898e13da463a202919875dfa3fac43456/gcc%2Fada%2Fexp_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59f4d03898e13da463a202919875dfa3fac43456/gcc%2Fada%2Fexp_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_disp.adb?ref=59f4d03898e13da463a202919875dfa3fac43456", "patch": "@@ -6227,6 +6227,7 @@ package body Exp_Disp is\n         and then Ada_Version >= Ada_2005\n         and then RTE_Available (RE_Check_TSD)\n         and then not Debug_Flag_QQ\n+        and then not Duplicated_Tag_Checks_Suppressed (Typ)\n       then\n          Append_To (Elab_Code,\n            Make_Procedure_Call_Statement (Loc,\n@@ -6815,6 +6816,7 @@ package body Exp_Disp is\n         and then Is_Library_Level_Entity (Typ)\n         and then RTE_Available (RE_Check_TSD)\n         and then not Debug_Flag_QQ\n+        and then not Duplicated_Tag_Checks_Suppressed (Typ)\n       then\n          Append_To (Result,\n            Make_Procedure_Call_Statement (Loc,"}, {"sha": "b82931fbbc34e4c197f5d27c5b72354adaf6e467", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59f4d03898e13da463a202919875dfa3fac43456/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59f4d03898e13da463a202919875dfa3fac43456/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=59f4d03898e13da463a202919875dfa3fac43456", "patch": "@@ -6828,6 +6828,16 @@ on addresses used in address clauses. Such checks can also be suppressed\n by suppressing range checks, but the specific use of @code{Alignment_Check}\n allows suppression of alignment checks without suppressing other range checks.\n \n+@item\n+@code{Atomic_Synchronization} can be used to suppress the special memory\n+synchronization instructions that are normally generated for access to\n+@code{Atomic} variables to ensure correct synchronization between tasks\n+that use such variables for synchronization purposes.\n+\n+@item\n+@code{Duplicated_Tag_Check} Can be used to suppress the check that is generated\n+for a duplicated tag value when a tagged type is declared.\n+\n @item\n @code{Predicate_Check} can be used to control whether predicate checks are\n active. It is applicable only to predicates for which the policy is\n@@ -7458,8 +7468,16 @@ in pragma @code{Suppress}.\n One important application is to ensure that checks are on in cases where\n code depends on the checks for its correct functioning, so that the code\n will compile correctly even if the compiler switches are set to suppress\n-checks.\n+checks. For example, in a program that depends on external names of tagged\n+types and wants to ensure that the duplicated tag check occurs even if all\n+run-time checks are suppressed by a compiler switch, the following\n+configuration pragma will ensure this test is not suppressed:\n \n+@smallexample @c ada\n+pragma Unsuppress (Duplicated_Tag_Check);\n+@end smallexample\n+\n+@noindent\n This pragma is standard in Ada 2005. It is available in all earlier versions\n of Ada as an implementation-defined pragma.\n "}, {"sha": "08d4e086b0dc070aaae56f81a1d858cd037ed09d", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59f4d03898e13da463a202919875dfa3fac43456/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59f4d03898e13da463a202919875dfa3fac43456/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=59f4d03898e13da463a202919875dfa3fac43456", "patch": "@@ -6819,15 +6819,21 @@ unpredictable. The program might crash, or print wrong answers, or\n do anything else. It might even do exactly what you wanted it to do\n (and then it might start failing mysteriously next week or next\n year). The compiler will generate code based on the assumption that\n-the condition being checked is true, which can result in disaster if\n-that assumption is wrong.\n+the condition being checked is true, which can result in erroneous\n+execution if that assumption is wrong.\n \n The checks subject to suppression include all the checks defined by\n the Ada standard, the additional implementation defined checks\n-@code{Alignment_Check}, @code{Atomic_Synchronization},\n+@code{Alignment_Check},\n @code{Duplicated_Tag_Check}, @code{Predicate_Check}, and\n @code{Validity_Check}, as well as any checks introduced using\n-@code{pragma Check_Name}.\n+@code{pragma Check_Name}. Note that code{Atomic_Synchronization}\n+is not automatically suppressed by use of this option.\n+\n+If the code depends on certain checks being active, you can use\n+pragma @code{Unsuppress} either as a configuration pragma or as\n+a local pragma to make sure that a specified check is performed\n+even if @option{gnatp} is specified.\n \n The @option{-gnatp} switch has no effect if a subsequent\n @option{-gnat-p} switch appears."}, {"sha": "ed9e75ed45d75c62b875f1031d15ff15d229a27b", "filename": "gcc/ada/snames.ads-tmpl", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59f4d03898e13da463a202919875dfa3fac43456/gcc%2Fada%2Fsnames.ads-tmpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59f4d03898e13da463a202919875dfa3fac43456/gcc%2Fada%2Fsnames.ads-tmpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.ads-tmpl?ref=59f4d03898e13da463a202919875dfa3fac43456", "patch": "@@ -1100,6 +1100,7 @@ package Snames is\n    Name_Atomic_Synchronization         : constant Name_Id := N + $; -- GNAT\n    Name_Discriminant_Check             : constant Name_Id := N + $;\n    Name_Division_Check                 : constant Name_Id := N + $;\n+   Name_Duplicated_Tag_Check           : constant Name_Id := N + $; -- GNAT\n    Name_Elaboration_Check              : constant Name_Id := N + $;\n    Name_Index_Check                    : constant Name_Id := N + $;\n    Name_Length_Check                   : constant Name_Id := N + $;"}, {"sha": "46fb714ee572ec12e4ea4a8cec05d25e1b718aeb", "filename": "gcc/ada/types.ads", "status": "modified", "additions": 11, "deletions": 10, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59f4d03898e13da463a202919875dfa3fac43456/gcc%2Fada%2Ftypes.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59f4d03898e13da463a202919875dfa3fac43456/gcc%2Fada%2Ftypes.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftypes.ads?ref=59f4d03898e13da463a202919875dfa3fac43456", "patch": "@@ -669,20 +669,21 @@ package Types is\n    Atomic_Synchronization : constant :=  5;\n    Discriminant_Check     : constant :=  6;\n    Division_Check         : constant :=  7;\n-   Elaboration_Check      : constant :=  8;\n-   Index_Check            : constant :=  9;\n-   Length_Check           : constant := 10;\n-   Overflow_Check         : constant := 11;\n-   Predicate_Check        : constant := 12;\n-   Range_Check            : constant := 13;\n-   Storage_Check          : constant := 14;\n-   Tag_Check              : constant := 15;\n-   Validity_Check         : constant := 16;\n+   Duplicated_Tag_Check   : constant :=  8;\n+   Elaboration_Check      : constant :=  9;\n+   Index_Check            : constant := 10;\n+   Length_Check           : constant := 11;\n+   Overflow_Check         : constant := 12;\n+   Predicate_Check        : constant := 13;\n+   Range_Check            : constant := 14;\n+   Storage_Check          : constant := 15;\n+   Tag_Check              : constant := 16;\n+   Validity_Check         : constant := 17;\n    --  Values used to represent individual predefined checks (including the\n    --  setting of Atomic_Synchronization, which is implemented internally using\n    --  a \"check\" whose name is Atomic_Synchronization).\n \n-   All_Checks : constant := 17;\n+   All_Checks : constant := 18;\n    --  Value used to represent All_Checks value\n \n    subtype Predefined_Check_Id is Check_Id range 1 .. All_Checks;"}]}