{"sha": "f603c9855e36cd7ab706174bddb997b7bb3f2ce2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjYwM2M5ODU1ZTM2Y2Q3YWI3MDYxNzRiZGRiOTk3YjdiYjNmMmNlMg==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2019-07-01T13:37:26Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-07-01T13:37:26Z"}, "message": "[Ada] Spurious error private subtype derivation\n\nThis patch fixes a spurious error on a derived type declaration whose\nsubtype indication is a subtype of a private type whose full view is a\nconstrained discriminated type.\n\n2019-07-01  Ed Schonberg  <schonberg@adacore.com>\n\ngcc/ada/\n\n\t* sem_ch3.adb (Build_Derived_Record_Type): If the parent type is\n\tdeclared as a subtype of a private type with an inherited\n\tdiscriminant constraint, its generated full base appears as a\n\trecord subtype, so we need to retrieve its oen base type so that\n\tthe inherited constraint can be applied to it.\n\ngcc/testsuite/\n\n\t* gnat.dg/derived_type6.adb, gnat.dg/derived_type6.ads: New\n\ttestcase.\n\nFrom-SVN: r272879", "tree": {"sha": "5c569b0ca4dcecefcfb0993079cd3ebaa6d18c58", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5c569b0ca4dcecefcfb0993079cd3ebaa6d18c58"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f603c9855e36cd7ab706174bddb997b7bb3f2ce2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f603c9855e36cd7ab706174bddb997b7bb3f2ce2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f603c9855e36cd7ab706174bddb997b7bb3f2ce2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f603c9855e36cd7ab706174bddb997b7bb3f2ce2/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "497ee82ba3b1f9e9154d978022ca51c88e49003e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/497ee82ba3b1f9e9154d978022ca51c88e49003e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/497ee82ba3b1f9e9154d978022ca51c88e49003e"}], "stats": {"total": 37, "additions": 37, "deletions": 0}, "files": [{"sha": "38bd1d7ca2e21f50189050c7ab66065bfa28e7a8", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f603c9855e36cd7ab706174bddb997b7bb3f2ce2/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f603c9855e36cd7ab706174bddb997b7bb3f2ce2/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=f603c9855e36cd7ab706174bddb997b7bb3f2ce2", "patch": "@@ -1,3 +1,11 @@\n+2019-07-01  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch3.adb (Build_Derived_Record_Type): If the parent type is\n+\tdeclared as a subtype of a private type with an inherited\n+\tdiscriminant constraint, its generated full base appears as a\n+\trecord subtype, so we need to retrieve its oen base type so that\n+\tthe inherited constraint can be applied to it.\n+\n 2019-07-01  Yannick Moy  <moy@adacore.com>\n \n \t* sem_spark.adb: Completely rework the algorithm for ownership"}, {"sha": "9fff6b6c9664cdacbfc7adbb74b953cb8c952fba", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f603c9855e36cd7ab706174bddb997b7bb3f2ce2/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f603c9855e36cd7ab706174bddb997b7bb3f2ce2/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=f603c9855e36cd7ab706174bddb997b7bb3f2ce2", "patch": "@@ -8582,6 +8582,16 @@ package body Sem_Ch3 is\n          Parent_Base := Base_Type (Parent_Type);\n       end if;\n \n+      --  If the parent type is declared as a subtype of another private\n+      --  type with inherited discriminants, its generated base type is\n+      --  itself a record subtype. To further inherit the constraint we\n+      --  need to use its own base to have an unconstrained type on which\n+      --  to apply the inherited constraint.\n+\n+      if Ekind (Parent_Base) = E_Record_Subtype then\n+         Parent_Base := Base_Type (Parent_Base);\n+      end if;\n+\n       --  AI05-0115: if this is a derivation from a private type in some\n       --  other scope that may lead to invisible components for the derived\n       --  type, mark it accordingly."}, {"sha": "6b2e98326fed4557746a3c5c9a622fb9a43acbdf", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f603c9855e36cd7ab706174bddb997b7bb3f2ce2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f603c9855e36cd7ab706174bddb997b7bb3f2ce2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f603c9855e36cd7ab706174bddb997b7bb3f2ce2", "patch": "@@ -1,3 +1,8 @@\n+2019-07-01  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* gnat.dg/derived_type6.adb, gnat.dg/derived_type6.ads: New\n+\ttestcase.\n+\n 2019-07-01  Ed Schonberg  <schonberg@adacore.com>\n \n \t* gnat.dg/weak3.adb, gnat.dg/weak3.ads: New testcase."}, {"sha": "8369d627daadb5ea926df9e3125d980b68fcc67b", "filename": "gcc/testsuite/gnat.dg/derived_type6.adb", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f603c9855e36cd7ab706174bddb997b7bb3f2ce2/gcc%2Ftestsuite%2Fgnat.dg%2Fderived_type6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f603c9855e36cd7ab706174bddb997b7bb3f2ce2/gcc%2Ftestsuite%2Fgnat.dg%2Fderived_type6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fderived_type6.adb?ref=f603c9855e36cd7ab706174bddb997b7bb3f2ce2", "patch": "@@ -0,0 +1,5 @@\n+-- { dg-do compile }\n+\n+package body Derived_Type6 is\n+  procedure Foo is null;\n+end Derived_Type6;"}, {"sha": "37728a92a0e582934794ccd502a251139db40914", "filename": "gcc/testsuite/gnat.dg/derived_type6.ads", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f603c9855e36cd7ab706174bddb997b7bb3f2ce2/gcc%2Ftestsuite%2Fgnat.dg%2Fderived_type6.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f603c9855e36cd7ab706174bddb997b7bb3f2ce2/gcc%2Ftestsuite%2Fgnat.dg%2Fderived_type6.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fderived_type6.ads?ref=f603c9855e36cd7ab706174bddb997b7bb3f2ce2", "patch": "@@ -0,0 +1,9 @@\n+with Ada.Strings.Bounded;\n+\n+package Derived_Type6 is\n+  package b is new Ada.Strings.Bounded.Generic_Bounded_Length(10);\n+  subtype s1 is b.Bounded_String;\n+  type s2 is new s1;\n+\n+  procedure Foo;\n+end Derived_Type6;"}]}