{"sha": "f4ecc8fd6b67ce601991e0f59a226bb5a18bed16", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjRlY2M4ZmQ2YjY3Y2U2MDE5OTFlMGY1OWEyMjZiYjVhMThiZWQxNg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2009-11-04T22:29:35Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2009-11-04T22:29:35Z"}, "message": "re PR c++/39413 (static_assert and SFINAE)\n\n\tPR c++/39413\n\t* search.c (lookup_base): Don't complete_type (base).\n\nFrom-SVN: r153920", "tree": {"sha": "dfb6623ce109741f4ca6acf4db63280aef6ca777", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dfb6623ce109741f4ca6acf4db63280aef6ca777"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f4ecc8fd6b67ce601991e0f59a226bb5a18bed16", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4ecc8fd6b67ce601991e0f59a226bb5a18bed16", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f4ecc8fd6b67ce601991e0f59a226bb5a18bed16", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4ecc8fd6b67ce601991e0f59a226bb5a18bed16/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f96b189564f36834bda68bf2a5b24bc50fbd1ea1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f96b189564f36834bda68bf2a5b24bc50fbd1ea1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f96b189564f36834bda68bf2a5b24bc50fbd1ea1"}], "stats": {"total": 49, "additions": 43, "deletions": 6}, "files": [{"sha": "edf3ca86a96839fe619cfb1eb5c960dd57c2cc24", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4ecc8fd6b67ce601991e0f59a226bb5a18bed16/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4ecc8fd6b67ce601991e0f59a226bb5a18bed16/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=f4ecc8fd6b67ce601991e0f59a226bb5a18bed16", "patch": "@@ -1,5 +1,8 @@\n 2009-11-04  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/39413\n+\t* search.c (lookup_base): Don't complete_type (base).\n+\n \tPR c++/35067\n \t* method.c (use_thunk): Check DECL_WEAK as well as\n \tDECL_ONE_ONLY."}, {"sha": "356f3d6f52b532743bea83b84bb5bcc7b04dccf8", "filename": "gcc/cp/search.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4ecc8fd6b67ce601991e0f59a226bb5a18bed16/gcc%2Fcp%2Fsearch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4ecc8fd6b67ce601991e0f59a226bb5a18bed16/gcc%2Fcp%2Fsearch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsearch.c?ref=f4ecc8fd6b67ce601991e0f59a226bb5a18bed16", "patch": "@@ -214,9 +214,11 @@ lookup_base (tree t, tree base, base_access access, base_kind *kind_ptr)\n       t_binfo = TYPE_BINFO (t);\n     }\n \n-  base = complete_type (TYPE_MAIN_VARIANT (base));\n+  base = TYPE_MAIN_VARIANT (base);\n \n-  if (t_binfo)\n+  /* If BASE is incomplete, it can't be a base of T--and instantiating it\n+     might cause an error.  */\n+  if (t_binfo && (COMPLETE_TYPE_P (base) || TYPE_BEING_DEFINED (base)))\n     {\n       struct lookup_base_data_s data;\n "}, {"sha": "61f8450e081aa077064c10cbad96cdc804406be4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4ecc8fd6b67ce601991e0f59a226bb5a18bed16/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4ecc8fd6b67ce601991e0f59a226bb5a18bed16/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f4ecc8fd6b67ce601991e0f59a226bb5a18bed16", "patch": "@@ -1,3 +1,9 @@\n+2009-11-04  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/39413\n+\t* g++.dg/template/overload11.C: New.\n+\t* g++.dg/template/nested3.C: Adjust.\n+\n 2009-11-04  Eric Botcazou  <ebotcazou@adacore.com>\n \n \tPR ada/20548"}, {"sha": "5652e178a7034bd71ee5cd80ad75616aab98d479", "filename": "gcc/testsuite/g++.dg/template/nested3.C", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4ecc8fd6b67ce601991e0f59a226bb5a18bed16/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fnested3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4ecc8fd6b67ce601991e0f59a226bb5a18bed16/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fnested3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fnested3.C?ref=f4ecc8fd6b67ce601991e0f59a226bb5a18bed16", "patch": "@@ -5,21 +5,20 @@ class A {\n     int _k;\n   };\n   T1 _t1;\n-  T2 _t2; // { dg-message \"instantiated\" }\n+  T2 _t2;\n };\n \n template <class U>\n-class B { // { dg-error \"declaration\" }\n+class B {\n   class SubB1 {\n-    B _i; // { dg-error \"incomplete type\" }\n+    B _i;\n   };\n \n   class SubB2 {\n     int _j;\n   };\n   A<U,SubB1>::SubA<SubB2> _a; // { dg-error \"not a base type\" \"not base\" }\n \t\t// { dg-message \"note\" \"note\" { target *-*-* } 20 }\n-\t\t// { dg-message \"instantiated\" \"inst\" { target *-*-* } 20 }\n \t\t// { dg-error \"non-template\" \"non-template\" { target *-*-* } 20 }\n };\n "}, {"sha": "d7b0a7c9f1c323523ed17908860cb784d3e13a38", "filename": "gcc/testsuite/g++.dg/template/overload11.C", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4ecc8fd6b67ce601991e0f59a226bb5a18bed16/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Foverload11.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4ecc8fd6b67ce601991e0f59a226bb5a18bed16/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Foverload11.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Foverload11.C?ref=f4ecc8fd6b67ce601991e0f59a226bb5a18bed16", "patch": "@@ -0,0 +1,27 @@\n+// PR c++/39413\n+// We don't need to instantiate Wrapper<int> to check the\n+// foo(const Thingy&) overload.\n+\n+template <class T> struct Incomplete;\n+\n+template <typename T> class Wrapper\n+{\n+  Incomplete<T> i;\n+};\n+\n+template <typename T> struct Thingy\n+{\n+  Thingy();\n+  Thingy(const Wrapper<T>& v);\n+\n+  template <typename X> void foo(const Thingy<X>&);\n+  void foo(const Thingy&);\n+};\n+\n+int main()\n+{\n+    Thingy<int> ap1;\n+    Thingy<float> bp1;\n+\n+    ap1.foo(bp1);\n+}"}]}