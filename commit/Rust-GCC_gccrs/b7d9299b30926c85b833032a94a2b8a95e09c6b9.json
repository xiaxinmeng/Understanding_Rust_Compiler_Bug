{"sha": "b7d9299b30926c85b833032a94a2b8a95e09c6b9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjdkOTI5OWIzMDkyNmM4NWI4MzMwMzJhOTRhMmI4YTk1ZTA5YzZiOQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-03-15T22:38:40Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-03-15T22:38:40Z"}, "message": "(simplify_plus_minus): Remove last change.\n\n(simplify_plus_minus): Remove last change.  Instead, count initial\noperands and test against that count to see if we did anything.\n\nFrom-SVN: r3748", "tree": {"sha": "e86b7a6552bc3632863e3dbd16b37ed1a1bf1fbb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e86b7a6552bc3632863e3dbd16b37ed1a1bf1fbb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b7d9299b30926c85b833032a94a2b8a95e09c6b9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7d9299b30926c85b833032a94a2b8a95e09c6b9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b7d9299b30926c85b833032a94a2b8a95e09c6b9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7d9299b30926c85b833032a94a2b8a95e09c6b9/comments", "author": null, "committer": null, "parents": [{"sha": "682a59faae257c47f538afab5b31a8e62a6fd42b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/682a59faae257c47f538afab5b31a8e62a6fd42b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/682a59faae257c47f538afab5b31a8e62a6fd42b"}], "stats": {"total": 17, "additions": 4, "deletions": 13}, "files": [{"sha": "d170046d1006bea8d399aa16f2f778616a8875a5", "filename": "gcc/cse.c", "status": "modified", "additions": 4, "deletions": 13, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7d9299b30926c85b833032a94a2b8a95e09c6b9/gcc%2Fcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7d9299b30926c85b833032a94a2b8a95e09c6b9/gcc%2Fcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcse.c?ref=b7d9299b30926c85b833032a94a2b8a95e09c6b9", "patch": "@@ -3928,7 +3928,7 @@ simplify_plus_minus (code, mode, op0, op1)\n   rtx ops[8];\n   int negs[8];\n   rtx result, tem;\n-  int n_ops = 2;\n+  int n_ops = 2, input_ops = 2;\n   int i, j, k;\n   int first = 1, negate = 0, changed;\n \n@@ -3956,6 +3956,7 @@ simplify_plus_minus (code, mode, op0, op1)\n \t    ops[n_ops] = XEXP (ops[i], 1);\n \t    negs[n_ops++] = GET_CODE (ops[i]) == MINUS ? !negs[i] : negs[i];\n \t    ops[i] = XEXP (ops[i], 0);\n+\t    input_ops++;\n \t    changed = 1;\n \t    break;\n \n@@ -4015,17 +4016,7 @@ simplify_plus_minus (code, mode, op0, op1)\n \t\tncode = MINUS;\n \n \t      tem = simplify_binary_operation (ncode, mode, lhs, rhs);\n-\n-\t      /* If we got a simple object, a SUBREG of a simple\n-\t\t object, or a NEG, use it.  Otherwise, we either got nothing\n-\t\t or we got something (like a NOT), which can cause an\n-\t\t infinite loop.  */\n-\n-\t      if (tem != 0\n-\t\t  && ((GET_CODE (tem) == SUBREG\n-\t\t       && GET_RTX_CLASS (GET_CODE (SUBREG_REG (tem))) == 'o')\n-\t\t      || GET_CODE (tem) == NEG\n-\t\t      || GET_RTX_CLASS (GET_CODE (tem)) == 'o'))\n+\t      if (tem)\n \t\t{\n \t\t  ops[i] = tem, ops[j] = 0;\n \t\t  negs[i] = negs[i] && negs[j];\n@@ -4053,7 +4044,7 @@ simplify_plus_minus (code, mode, op0, op1)\n \t  k++;\n       }\n \n-  if (i + k >= n_ops)\n+  if (i + k >= input_ops)\n     return 0;\n \n   n_ops = i;"}]}