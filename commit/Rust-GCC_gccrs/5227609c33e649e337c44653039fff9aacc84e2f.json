{"sha": "5227609c33e649e337c44653039fff9aacc84e2f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTIyNzYwOWMzM2U2NDllMzM3YzQ0NjUzMDM5ZmZmOWFhY2M4NGUyZg==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2019-01-03T11:28:27Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2019-01-03T11:28:27Z"}, "message": "Update config.guess, config.sub (PR target/88535)\n\n\tPR target/88535\n\t* config.guess: Import upstream version 2019-01-03.\n\t* config.sub: Import upstream version 2019-01-01.\n\nFrom-SVN: r267551", "tree": {"sha": "d0e2c8d7becbff22223e52872b7cd073247119aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d0e2c8d7becbff22223e52872b7cd073247119aa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5227609c33e649e337c44653039fff9aacc84e2f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5227609c33e649e337c44653039fff9aacc84e2f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5227609c33e649e337c44653039fff9aacc84e2f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5227609c33e649e337c44653039fff9aacc84e2f/comments", "author": null, "committer": null, "parents": [{"sha": "c04d40dae8a490e28d4f07c46e57719fb0a4eaf6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c04d40dae8a490e28d4f07c46e57719fb0a4eaf6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c04d40dae8a490e28d4f07c46e57719fb0a4eaf6"}], "stats": {"total": 1247, "additions": 634, "deletions": 613}, "files": [{"sha": "e13764b5f96a61f68626361a1334387c8bbd7dc0", "filename": "ChangeLog", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5227609c33e649e337c44653039fff9aacc84e2f/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5227609c33e649e337c44653039fff9aacc84e2f/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=5227609c33e649e337c44653039fff9aacc84e2f", "patch": "@@ -1,3 +1,9 @@\n+2019-01-03  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\tPR target/88535\n+\t* config.guess: Import upstream version 2019-01-03.\n+\t* config.sub: Import upstream version 2019-01-01.\n+\n 2018-12-21  Thomas Preud'homme  <thomas.preudhomme@linaro.org>\n \n \t* MAINTAINERS (Write After Approval): Update my maintainer address.\n@@ -17,9 +23,9 @@\n \t(GCC_TARGET_TOOL): Likewise.\n \t* Makefile.tpl (HOST_EXPORTS): Add OTOOL, OTOOL_FOR_TARGET.\n \t(BASE_TARGET_EXPORTS): OTOOL, export OTOOL_FOR_TARGET.\n-\tOTOOL, OTOOL_FOR_TARGET: New substitutions. \n+\tOTOOL, OTOOL_FOR_TARGET: New substitutions.\n \t(EXTRA_HOST_FLAGS, EXTRA_TARGET_FLAGS): Add OTOOL.\n-\t* configure: Regenerate. \n+\t* configure: Regenerate.\n \t* Makefile.in: Likewise.\n \n 2018-11-28  Johannes Pfau  <johannespfau@gmail.com>"}, {"sha": "8e2a58b864fd4c0bd174bd1d8faeeb1c62b3afe2", "filename": "config.guess", "status": "modified", "additions": 73, "deletions": 43, "changes": 116, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5227609c33e649e337c44653039fff9aacc84e2f/config.guess", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5227609c33e649e337c44653039fff9aacc84e2f/config.guess", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config.guess?ref=5227609c33e649e337c44653039fff9aacc84e2f", "patch": "@@ -1,8 +1,8 @@\n #! /bin/sh\n # Attempt to guess a canonical system name.\n-#   Copyright 1992-2018 Free Software Foundation, Inc.\n+#   Copyright 1992-2019 Free Software Foundation, Inc.\n \n-timestamp='2018-06-26'\n+timestamp='2019-01-03'\n \n # This file is free software; you can redistribute it and/or modify it\n # under the terms of the GNU General Public License as published by\n@@ -50,7 +50,7 @@ version=\"\\\n GNU config.guess ($timestamp)\n \n Originally written by Per Bothner.\n-Copyright 1992-2018 Free Software Foundation, Inc.\n+Copyright 1992-2019 Free Software Foundation, Inc.\n \n This is free software; see the source for copying conditions.  There is NO\n warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\"\n@@ -84,8 +84,6 @@ if test $# != 0; then\n   exit 1\n fi\n \n-trap 'exit 1' 1 2 15\n-\n # CC_FOR_BUILD -- compiler used by this script. Note that the use of a\n # compiler to aid in system detection is discouraged as it requires\n # temporary files to be created and, as you can see below, it is a\n@@ -96,34 +94,38 @@ trap 'exit 1' 1 2 15\n \n # Portable tmp directory creation inspired by the Autoconf team.\n \n-set_cc_for_build='\n-trap \"exitcode=\\$?; (rm -f \\$tmpfiles 2>/dev/null; rmdir \\$tmp 2>/dev/null) && exit \\$exitcode\" 0 ;\n-trap \"rm -f \\$tmpfiles 2>/dev/null; rmdir \\$tmp 2>/dev/null; exit 1\" 1 2 13 15 ;\n-: ${TMPDIR=/tmp} ;\n- { tmp=`(umask 077 && mktemp -d \"$TMPDIR/cgXXXXXX\") 2>/dev/null` && test -n \"$tmp\" && test -d \"$tmp\" ; } ||\n- { test -n \"$RANDOM\" && tmp=$TMPDIR/cg$$-$RANDOM && (umask 077 && mkdir $tmp) ; } ||\n- { tmp=$TMPDIR/cg-$$ && (umask 077 && mkdir $tmp) && echo \"Warning: creating insecure temp directory\" >&2 ; } ||\n- { echo \"$me: cannot create a temporary directory in $TMPDIR\" >&2 ; exit 1 ; } ;\n-dummy=$tmp/dummy ;\n-tmpfiles=\"$dummy.c $dummy.o $dummy.rel $dummy\" ;\n-case ${CC_FOR_BUILD-},${HOST_CC-},${CC-} in\n- ,,)    echo \"int x;\" > \"$dummy.c\" ;\n-\tfor c in cc gcc c89 c99 ; do\n-\t  if ($c -c -o \"$dummy.o\" \"$dummy.c\") >/dev/null 2>&1 ; then\n-\t     CC_FOR_BUILD=\"$c\"; break ;\n-\t  fi ;\n-\tdone ;\n-\tif test x\"$CC_FOR_BUILD\" = x ; then\n-\t  CC_FOR_BUILD=no_compiler_found ;\n-\tfi\n-\t;;\n- ,,*)   CC_FOR_BUILD=$CC ;;\n- ,*,*)  CC_FOR_BUILD=$HOST_CC ;;\n-esac ; set_cc_for_build= ;'\n+tmp=\n+# shellcheck disable=SC2172\n+trap 'test -z \"$tmp\" || rm -fr \"$tmp\"' 0 1 2 13 15\n+\n+set_cc_for_build() {\n+    : \"${TMPDIR=/tmp}\"\n+    # shellcheck disable=SC2039\n+    { tmp=`(umask 077 && mktemp -d \"$TMPDIR/cgXXXXXX\") 2>/dev/null` && test -n \"$tmp\" && test -d \"$tmp\" ; } ||\n+\t{ test -n \"$RANDOM\" && tmp=$TMPDIR/cg$$-$RANDOM && (umask 077 && mkdir \"$tmp\" 2>/dev/null) ; } ||\n+\t{ tmp=$TMPDIR/cg-$$ && (umask 077 && mkdir \"$tmp\" 2>/dev/null) && echo \"Warning: creating insecure temp directory\" >&2 ; } ||\n+\t{ echo \"$me: cannot create a temporary directory in $TMPDIR\" >&2 ; exit 1 ; }\n+    dummy=$tmp/dummy\n+    case ${CC_FOR_BUILD-},${HOST_CC-},${CC-} in\n+\t,,)    echo \"int x;\" > \"$dummy.c\"\n+\t       for driver in cc gcc c89 c99 ; do\n+\t\t   if ($driver -c -o \"$dummy.o\" \"$dummy.c\") >/dev/null 2>&1 ; then\n+\t\t       CC_FOR_BUILD=\"$driver\"\n+\t\t       break\n+\t\t   fi\n+\t       done\n+\t       if test x\"$CC_FOR_BUILD\" = x ; then\n+\t\t   CC_FOR_BUILD=no_compiler_found\n+\t       fi\n+\t       ;;\n+\t,,*)   CC_FOR_BUILD=$CC ;;\n+\t,*,*)  CC_FOR_BUILD=$HOST_CC ;;\n+    esac\n+}\n \n # This is needed to find uname on a Pyramid OSx when run in the BSD universe.\n # (ghazi@noc.rutgers.edu 1994-08-24)\n-if (test -f /.attbin/uname) >/dev/null 2>&1 ; then\n+if test -f /.attbin/uname ; then\n \tPATH=$PATH:/.attbin ; export PATH\n fi\n \n@@ -138,7 +140,7 @@ Linux|GNU|GNU/*)\n \t# We could probably try harder.\n \tLIBC=gnu\n \n-\teval \"$set_cc_for_build\"\n+\tset_cc_for_build\n \tcat <<-EOF > \"$dummy.c\"\n \t#include <features.h>\n \t#if defined(__UCLIBC__)\n@@ -199,7 +201,7 @@ case \"$UNAME_MACHINE:$UNAME_SYSTEM:$UNAME_RELEASE:$UNAME_VERSION\" in\n \t\tos=netbsdelf\n \t\t;;\n \t    arm*|i386|m68k|ns32k|sh3*|sparc|vax)\n-\t\teval \"$set_cc_for_build\"\n+\t\tset_cc_for_build\n \t\tif echo __ELF__ | $CC_FOR_BUILD -E - 2>/dev/null \\\n \t\t\t| grep -q __ELF__\n \t\tthen\n@@ -383,13 +385,26 @@ case \"$UNAME_MACHINE:$UNAME_SYSTEM:$UNAME_RELEASE:$UNAME_VERSION\" in\n \techo sparc-hal-solaris2\"`echo \"$UNAME_RELEASE\"|sed -e 's/[^.]*//'`\"\n \texit ;;\n     sun4*:SunOS:5.*:* | tadpole*:SunOS:5.*:*)\n-\techo sparc-sun-solaris2\"`echo \"$UNAME_RELEASE\" | sed -e 's/[^.]*//'`\"\n+\tset_cc_for_build\n+\tSUN_ARCH=sparc\n+\t# If there is a compiler, see if it is configured for 64-bit objects.\n+\t# Note that the Sun cc does not turn __LP64__ into 1 like gcc does.\n+\t# This test works for both compilers.\n+\tif [ \"$CC_FOR_BUILD\" != no_compiler_found ]; then\n+\t    if (echo '#ifdef __sparcv9'; echo IS_64BIT_ARCH; echo '#endif') | \\\n+\t\t(CCOPTS=\"\" $CC_FOR_BUILD -E - 2>/dev/null) | \\\n+\t\tgrep IS_64BIT_ARCH >/dev/null\n+\t    then\n+\t\tSUN_ARCH=sparcv9\n+\t    fi\n+\tfi\n+\techo \"$SUN_ARCH\"-sun-solaris2\"`echo \"$UNAME_RELEASE\"|sed -e 's/[^.]*//'`\"\n \texit ;;\n     i86pc:AuroraUX:5.*:* | i86xen:AuroraUX:5.*:*)\n \techo i386-pc-auroraux\"$UNAME_RELEASE\"\n \texit ;;\n     i86pc:SunOS:5.*:* | i86xen:SunOS:5.*:*)\n-\teval \"$set_cc_for_build\"\n+\tset_cc_for_build\n \tSUN_ARCH=i386\n \t# If there is a compiler, see if it is configured for 64-bit objects.\n \t# Note that the Sun cc does not turn __LP64__ into 1 like gcc does.\n@@ -482,7 +497,7 @@ case \"$UNAME_MACHINE:$UNAME_SYSTEM:$UNAME_RELEASE:$UNAME_VERSION\" in\n \techo clipper-intergraph-clix\"$UNAME_RELEASE\"\n \texit ;;\n     mips:*:*:UMIPS | mips:*:*:RISCos)\n-\teval \"$set_cc_for_build\"\n+\tset_cc_for_build\n \tsed 's/^\t//' << EOF > \"$dummy.c\"\n #ifdef __cplusplus\n #include <stdio.h>  /* for printf() prototype */\n@@ -579,7 +594,7 @@ EOF\n \texit ;;\n     *:AIX:2:3)\n \tif grep bos325 /usr/include/stdio.h >/dev/null 2>&1; then\n-\t\teval \"$set_cc_for_build\"\n+\t\tset_cc_for_build\n \t\tsed 's/^\t\t//' << EOF > \"$dummy.c\"\n \t\t#include <sys/systemcfg.h>\n \n@@ -660,7 +675,7 @@ EOF\n \t\t    esac\n \t\tfi\n \t\tif [ \"$HP_ARCH\" = \"\" ]; then\n-\t\t    eval \"$set_cc_for_build\"\n+\t\t    set_cc_for_build\n \t\t    sed 's/^\t\t//' << EOF > \"$dummy.c\"\n \n \t\t#define _HPUX_SOURCE\n@@ -700,7 +715,7 @@ EOF\n \tesac\n \tif [ \"$HP_ARCH\" = hppa2.0w ]\n \tthen\n-\t    eval \"$set_cc_for_build\"\n+\t    set_cc_for_build\n \n \t    # hppa2.0w-hp-hpux* has a 64-bit kernel and a compiler generating\n \t    # 32-bit code.  hppa64-hp-hpux* has the same kernel and a compiler\n@@ -726,7 +741,7 @@ EOF\n \techo ia64-hp-hpux\"$HPUX_REV\"\n \texit ;;\n     3050*:HI-UX:*:*)\n-\teval \"$set_cc_for_build\"\n+\tset_cc_for_build\n \tsed 's/^\t//' << EOF > \"$dummy.c\"\n \t#include <unistd.h>\n \tint\n@@ -840,6 +855,17 @@ EOF\n     *:BSD/OS:*:*)\n \techo \"$UNAME_MACHINE\"-unknown-bsdi\"$UNAME_RELEASE\"\n \texit ;;\n+    arm:FreeBSD:*:*)\n+\tUNAME_PROCESSOR=`uname -p`\n+\tset_cc_for_build\n+\tif echo __ARM_PCS_VFP | $CC_FOR_BUILD -E - 2>/dev/null \\\n+\t    | grep -q __ARM_PCS_VFP\n+\tthen\n+\t    echo \"${UNAME_PROCESSOR}\"-unknown-freebsd\"`echo ${UNAME_RELEASE}|sed -e 's/[-(].*//'`\"-gnueabi\n+\telse\n+\t    echo \"${UNAME_PROCESSOR}\"-unknown-freebsd\"`echo ${UNAME_RELEASE}|sed -e 's/[-(].*//'`\"-gnueabihf\n+\tfi\n+\texit ;;\n     *:FreeBSD:*:*)\n \tUNAME_PROCESSOR=`/usr/bin/uname -p`\n \tcase \"$UNAME_PROCESSOR\" in\n@@ -881,7 +907,7 @@ EOF\n \techo \"$UNAME_MACHINE\"-pc-uwin\n \texit ;;\n     amd64:CYGWIN*:*:* | x86_64:CYGWIN*:*:*)\n-\techo x86_64-unknown-cygwin\n+\techo x86_64-pc-cygwin\n \texit ;;\n     prep*:SunOS:5.*:*)\n \techo powerpcle-unknown-solaris2\"`echo \"$UNAME_RELEASE\"|sed -e 's/[^.]*//'`\"\n@@ -922,7 +948,7 @@ EOF\n \techo \"$UNAME_MACHINE\"-unknown-linux-\"$LIBC\"\n \texit ;;\n     arm*:Linux:*:*)\n-\teval \"$set_cc_for_build\"\n+\tset_cc_for_build\n \tif echo __ARM_EABI__ | $CC_FOR_BUILD -E - 2>/dev/null \\\n \t    | grep -q __ARM_EABI__\n \tthen\n@@ -971,7 +997,7 @@ EOF\n \techo \"$UNAME_MACHINE\"-unknown-linux-\"$LIBC\"\n \texit ;;\n     mips:Linux:*:* | mips64:Linux:*:*)\n-\teval \"$set_cc_for_build\"\n+\tset_cc_for_build\n \tsed 's/^\t//' << EOF > \"$dummy.c\"\n \t#undef CPU\n \t#undef ${UNAME_MACHINE}\n@@ -1285,7 +1311,7 @@ EOF\n \texit ;;\n     *:Darwin:*:*)\n \tUNAME_PROCESSOR=`uname -p` || UNAME_PROCESSOR=unknown\n-\teval \"$set_cc_for_build\"\n+\tset_cc_for_build\n \tif test \"$UNAME_PROCESSOR\" = unknown ; then\n \t    UNAME_PROCESSOR=powerpc\n \tfi\n@@ -1358,6 +1384,7 @@ EOF\n \t# \"uname -m\" is not consistent, so use $cputype instead. 386\n \t# is converted to i386 for consistency with other x86\n \t# operating systems.\n+\t# shellcheck disable=SC2154\n \tif test \"$cputype\" = 386; then\n \t    UNAME_MACHINE=i386\n \telse\n@@ -1414,6 +1441,9 @@ EOF\n     amd64:Isilon\\ OneFS:*:*)\n \techo x86_64-unknown-onefs\n \texit ;;\n+    *:Unleashed:*:*)\n+\techo \"$UNAME_MACHINE\"-unknown-unleashed\"$UNAME_RELEASE\"\n+\texit ;;\n esac\n \n echo \"$0: unable to guess system type\" >&2"}, {"sha": "75bb6a3135be264812c272f46d4691c5ed314c04", "filename": "config.sub", "status": "modified", "additions": 553, "deletions": 568, "changes": 1121, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5227609c33e649e337c44653039fff9aacc84e2f/config.sub", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5227609c33e649e337c44653039fff9aacc84e2f/config.sub", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config.sub?ref=5227609c33e649e337c44653039fff9aacc84e2f", "patch": "@@ -1,8 +1,8 @@\n #! /bin/sh\n # Configuration validation subroutine script.\n-#   Copyright 1992-2018 Free Software Foundation, Inc.\n+#   Copyright 1992-2019 Free Software Foundation, Inc.\n \n-timestamp='2018-07-03'\n+timestamp='2019-01-01'\n \n # This file is free software; you can redistribute it and/or modify it\n # under the terms of the GNU General Public License as published by\n@@ -67,7 +67,7 @@ Report bugs and patches to <config-patches@gnu.org>.\"\n version=\"\\\n GNU config.sub ($timestamp)\n \n-Copyright 1992-2018 Free Software Foundation, Inc.\n+Copyright 1992-2019 Free Software Foundation, Inc.\n \n This is free software; see the source for copying conditions.  There is NO\n warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\"\n@@ -89,7 +89,7 @@ while test $# -gt 0 ; do\n     - )\t# Use stdin as input.\n        break ;;\n     -* )\n-       echo \"$me: invalid option $1$help\"\n+       echo \"$me: invalid option $1$help\" >&2\n        exit 1 ;;\n \n     *local*)\n@@ -111,7 +111,8 @@ case $# in\n esac\n \n # Split fields of configuration type\n-IFS=\"-\" read -r field1 field2 field3 field4 <<EOF\n+# shellcheck disable=SC2162\n+IFS=\"-\" read field1 field2 field3 field4 <<EOF\n $1\n EOF\n \n@@ -149,29 +150,39 @@ case $1 in\n \t\tesac\n \t\t;;\n \t*-*)\n-\t\t# Second component is usually, but not always the OS\n-\t\tcase $field2 in\n-\t\t\t# Prevent following clause from handling this valid os\n-\t\t\tsun*os*)\n-\t\t\t\tbasic_machine=$field1\n-\t\t\t\tos=$field2\n-\t\t\t\t;;\n-\t\t\t# Manufacturers\n-\t\t\tdec* | mips* | sequent* | encore* | pc532* | sgi* | sony* \\\n-\t\t\t| att* | 7300* | 3300* | delta* | motorola* | sun[234]* \\\n-\t\t\t| unicom* | ibm* | next | hp | isi* | apollo | altos* \\\n-\t\t\t| convergent* | ncr* | news | 32* | 3600* | 3100* | hitachi* \\\n-\t\t\t| c[123]* | convex* | sun | crds | omron* | dg | ultra | tti* \\\n-\t\t\t| harris | dolphin | highlevel | gould | cbm | ns | masscomp \\\n-\t\t\t| apple | axis | knuth | cray | microblaze* \\\n-\t\t\t| sim | cisco | oki | wec | wrs | winbond)\n-\t\t\t\tbasic_machine=$field1-$field2\n+\t\t# A lone config we happen to match not fitting any pattern\n+\t\tcase $field1-$field2 in\n+\t\t\tdecstation-3100)\n+\t\t\t\tbasic_machine=mips-dec\n \t\t\t\tos=\n \t\t\t\t;;\n-\t\t\t*)\n-\t\t\t\tbasic_machine=$field1\n-\t\t\t\tos=$field2\n-\t\t\t\t;;\n+\t\t\t*-*)\n+\t\t\t\t# Second component is usually, but not always the OS\n+\t\t\t\tcase $field2 in\n+\t\t\t\t\t# Prevent following clause from handling this valid os\n+\t\t\t\t\tsun*os*)\n+\t\t\t\t\t\tbasic_machine=$field1\n+\t\t\t\t\t\tos=$field2\n+\t\t\t\t\t\t;;\n+\t\t\t\t\t# Manufacturers\n+\t\t\t\t\tdec* | mips* | sequent* | encore* | pc533* | sgi* | sony* \\\n+\t\t\t\t\t| att* | 7300* | 3300* | delta* | motorola* | sun[234]* \\\n+\t\t\t\t\t| unicom* | ibm* | next | hp | isi* | apollo | altos* \\\n+\t\t\t\t\t| convergent* | ncr* | news | 32* | 3600* | 3100* \\\n+\t\t\t\t\t| hitachi* | c[123]* | convex* | sun | crds | omron* | dg \\\n+\t\t\t\t\t| ultra | tti* | harris | dolphin | highlevel | gould \\\n+\t\t\t\t\t| cbm | ns | masscomp | apple | axis | knuth | cray \\\n+\t\t\t\t\t| microblaze* | sim | cisco \\\n+\t\t\t\t\t| oki | wec | wrs | winbond)\n+\t\t\t\t\t\tbasic_machine=$field1-$field2\n+\t\t\t\t\t\tos=\n+\t\t\t\t\t\t;;\n+\t\t\t\t\t*)\n+\t\t\t\t\t\tbasic_machine=$field1\n+\t\t\t\t\t\tos=$field2\n+\t\t\t\t\t\t;;\n+\t\t\t\tesac\n+\t\t\t;;\n \t\tesac\n \t\t;;\n \t*)\n@@ -190,6 +201,14 @@ case $1 in\n \t\t\t\tbasic_machine=m68010-adobe\n \t\t\t\tos=scout\n \t\t\t\t;;\n+\t\t\talliant)\n+\t\t\t\tbasic_machine=fx80-alliant\n+\t\t\t\tos=\n+\t\t\t\t;;\n+\t\t\taltos | altos3068)\n+\t\t\t\tbasic_machine=m68k-altos\n+\t\t\t\tos=\n+\t\t\t\t;;\n \t\t\tam29k)\n \t\t\t\tbasic_machine=a29k-none\n \t\t\t\tos=bsd\n@@ -198,6 +217,10 @@ case $1 in\n \t\t\t\tbasic_machine=580-amdahl\n \t\t\t\tos=sysv\n \t\t\t\t;;\n+\t\t\tamiga)\n+\t\t\t\tbasic_machine=m68k-unknown\n+\t\t\t\tos=\n+\t\t\t\t;;\n \t\t\tamigaos | amigados)\n \t\t\t\tbasic_machine=m68k-unknown\n \t\t\t\tos=amigaos\n@@ -234,13 +257,41 @@ case $1 in\n \t\t\t\tbasic_machine=arm-unknown\n \t\t\t\tos=cegcc\n \t\t\t\t;;\n+\t\t\tconvex-c1)\n+\t\t\t\tbasic_machine=c1-convex\n+\t\t\t\tos=bsd\n+\t\t\t\t;;\n+\t\t\tconvex-c2)\n+\t\t\t\tbasic_machine=c2-convex\n+\t\t\t\tos=bsd\n+\t\t\t\t;;\n+\t\t\tconvex-c32)\n+\t\t\t\tbasic_machine=c32-convex\n+\t\t\t\tos=bsd\n+\t\t\t\t;;\n+\t\t\tconvex-c34)\n+\t\t\t\tbasic_machine=c34-convex\n+\t\t\t\tos=bsd\n+\t\t\t\t;;\n+\t\t\tconvex-c38)\n+\t\t\t\tbasic_machine=c38-convex\n+\t\t\t\tos=bsd\n+\t\t\t\t;;\n \t\t\tcray)\n \t\t\t\tbasic_machine=j90-cray\n \t\t\t\tos=unicos\n \t\t\t\t;;\n-\t\t\tcraynv)\n-\t\t\t\tbasic_machine=craynv-cray\n-\t\t\t\tos=unicosmp\n+\t\t\tcrds | unos)\n+\t\t\t\tbasic_machine=m68k-crds\n+\t\t\t\tos=\n+\t\t\t\t;;\n+\t\t\tda30)\n+\t\t\t\tbasic_machine=m68k-da30\n+\t\t\t\tos=\n+\t\t\t\t;;\n+\t\t\tdecstation | pmax | pmin | dec3100 | decstatn)\n+\t\t\t\tbasic_machine=mips-dec\n+\t\t\t\tos=\n \t\t\t\t;;\n \t\t\tdelta88)\n \t\t\t\tbasic_machine=m88k-motorola\n@@ -286,6 +337,9 @@ case $1 in\n \t\t\t\tbasic_machine=m88k-harris\n \t\t\t\tos=sysv3\n \t\t\t\t;;\n+\t\t\thp300)\n+\t\t\t\tbasic_machine=m68k-hp\n+\t\t\t\t;;\n \t\t\thp300bsd)\n \t\t\t\tbasic_machine=m68k-hp\n \t\t\t\tos=bsd\n@@ -307,7 +361,7 @@ case $1 in\n \t\t\t\tos=mach\n \t\t\t\t;;\n \t\t\tvsta)\n-\t\t\t\tbasic_machine=i386-unknown\n+\t\t\t\tbasic_machine=i386-pc\n \t\t\t\tos=vsta\n \t\t\t\t;;\n \t\t\tisi68 | isi)\n@@ -371,7 +425,7 @@ case $1 in\n \t\t\t\tos=sysv4\n \t\t\t\t;;\n \t\t\tnetbsd386)\n-\t\t\t\tbasic_machine=i386-unknown\n+\t\t\t\tbasic_machine=i386-pc\n \t\t\t\tos=netbsd\n \t\t\t\t;;\n \t\t\tnetwinder)\n@@ -454,14 +508,26 @@ case $1 in\n \t\t\t\tbasic_machine=mips-sei\n \t\t\t\tos=seiux\n \t\t\t\t;;\n+\t\t\tsequent)\n+\t\t\t\tbasic_machine=i386-sequent\n+\t\t\t\tos=\n+\t\t\t\t;;\n \t\t\tsps7)\n \t\t\t\tbasic_machine=m68k-bull\n \t\t\t\tos=sysv2\n \t\t\t\t;;\n+\t\t\tst2000)\n+\t\t\t\tbasic_machine=m68k-tandem\n+\t\t\t\tos=\n+\t\t\t\t;;\n \t\t\tstratus)\n \t\t\t\tbasic_machine=i860-stratus\n \t\t\t\tos=sysv4\n \t\t\t\t;;\n+\t\t\tsun2)\n+\t\t\t\tbasic_machine=m68000-sun\n+\t\t\t\tos=\n+\t\t\t\t;;\n \t\t\tsun2os3)\n \t\t\t\tbasic_machine=m68000-sun\n \t\t\t\tos=sunos3\n@@ -470,6 +536,10 @@ case $1 in\n \t\t\t\tbasic_machine=m68000-sun\n \t\t\t\tos=sunos4\n \t\t\t\t;;\n+\t\t\tsun3)\n+\t\t\t\tbasic_machine=m68k-sun\n+\t\t\t\tos=\n+\t\t\t\t;;\n \t\t\tsun3os3)\n \t\t\t\tbasic_machine=m68k-sun\n \t\t\t\tos=sunos3\n@@ -478,6 +548,10 @@ case $1 in\n \t\t\t\tbasic_machine=m68k-sun\n \t\t\t\tos=sunos4\n \t\t\t\t;;\n+\t\t\tsun4)\n+\t\t\t\tbasic_machine=sparc-sun\n+\t\t\t\tos=\n+\t\t\t\t;;\n \t\t\tsun4os3)\n \t\t\t\tbasic_machine=sparc-sun\n \t\t\t\tos=sunos3\n@@ -490,6 +564,10 @@ case $1 in\n \t\t\t\tbasic_machine=sparc-sun\n \t\t\t\tos=solaris2\n \t\t\t\t;;\n+\t\t\tsun386 | sun386i | roadrunner)\n+\t\t\t\tbasic_machine=i386-sun\n+\t\t\t\tos=\n+\t\t\t\t;;\n \t\t\tsv1)\n \t\t\t\tbasic_machine=sv1-cray\n \t\t\t\tos=unicos\n@@ -562,417 +640,162 @@ case $1 in\n \t\t;;\n esac\n \n-# Decode aliases for certain CPU-COMPANY combinations.\n+# Decode 1-component or ad-hoc basic machines\n case $basic_machine in\n-\t# Recognize the basic CPU types without company name.\n-\t# Some are omitted here because they have special meanings below.\n-\t1750a | 580 \\\n-\t| a29k \\\n-\t| aarch64 | aarch64_be \\\n-\t| alpha | alphaev[4-8] | alphaev56 | alphaev6[78] | alphapca5[67] \\\n-\t| alpha64 | alpha64ev[4-8] | alpha64ev56 | alpha64ev6[78] | alpha64pca5[67] \\\n-\t| am33_2.0 \\\n-\t| arc | arceb \\\n-\t| arm | arm[bl]e | arme[lb] | armv[2-8] | armv[3-8][lb] | armv6m | armv[78][arm] \\\n-\t| avr | avr32 \\\n-\t| ba \\\n-\t| be32 | be64 \\\n-\t| bfin \\\n-\t| c4x | c8051 | clipper | csky \\\n-\t| d10v | d30v | dlx | dsp16xx \\\n-\t| e2k | epiphany \\\n-\t| fido | fr30 | frv | ft32 \\\n-\t| h8300 | h8500 | hppa | hppa1.[01] | hppa2.0 | hppa2.0[nw] | hppa64 \\\n-\t| hexagon \\\n-\t| i370 | i860 | i960 | ia16 | ia64 \\\n-\t| ip2k | iq2000 \\\n-\t| k1om \\\n-\t| le32 | le64 \\\n-\t| lm32 \\\n-\t| m32c | m32r | m32rle | m68000 | m68k | m88k \\\n-\t| maxq | mb | microblaze | microblazeel | mcore | mep | metag \\\n-\t| mips | mipsbe | mipseb | mipsel | mipsle \\\n-\t| mips16 \\\n-\t| mips64 | mips64el \\\n-\t| mips64octeon | mips64octeonel \\\n-\t| mips64orion | mips64orionel \\\n-\t| mips64r5900 | mips64r5900el \\\n-\t| mips64vr | mips64vrel \\\n-\t| mips64vr4100 | mips64vr4100el \\\n-\t| mips64vr4300 | mips64vr4300el \\\n-\t| mips64vr5000 | mips64vr5000el \\\n-\t| mips64vr5900 | mips64vr5900el \\\n-\t| mipsisa32 | mipsisa32el \\\n-\t| mipsisa32r2 | mipsisa32r2el \\\n-\t| mipsisa32r6 | mipsisa32r6el \\\n-\t| mipsisa64 | mipsisa64el \\\n-\t| mipsisa64r2 | mipsisa64r2el \\\n-\t| mipsisa64r6 | mipsisa64r6el \\\n-\t| mipsisa64sb1 | mipsisa64sb1el \\\n-\t| mipsisa64sr71k | mipsisa64sr71kel \\\n-\t| mipsr5900 | mipsr5900el \\\n-\t| mipstx39 | mipstx39el \\\n-\t| mn10200 | mn10300 \\\n-\t| moxie \\\n-\t| mt \\\n-\t| msp430 \\\n-\t| nds32 | nds32le | nds32be \\\n-\t| nfp \\\n-\t| nios | nios2 | nios2eb | nios2el \\\n-\t| ns16k | ns32k \\\n-\t| open8 | or1k | or1knd | or32 \\\n-\t| pdp10 | pj | pjl \\\n-\t| powerpc | powerpc64 | powerpc64le | powerpcle \\\n-\t| pru \\\n-\t| pyramid \\\n-\t| riscv | riscv32 | riscv64 \\\n-\t| rl78 | rx \\\n-\t| score \\\n-\t| sh | sh[1234] | sh[24]a | sh[24]aeb | sh[23]e | sh[234]eb | sheb | shbe | shle | sh[1234]le | sh3ele \\\n-\t| sh64 | sh64le \\\n-\t| sparc | sparc64 | sparc64b | sparc64v | sparc86x | sparclet | sparclite \\\n-\t| sparcv8 | sparcv9 | sparcv9b | sparcv9v \\\n-\t| spu \\\n-\t| tahoe | tic4x | tic54x | tic55x | tic6x | tic80 | tron \\\n-\t| ubicom32 \\\n-\t| v850 | v850e | v850e1 | v850e2 | v850es | v850e2v3 \\\n-\t| visium \\\n-\t| wasm32 \\\n-\t| x86 | xc16x | xstormy16 | xtensa \\\n-\t| z8k | z80)\n-\t\tbasic_machine=$basic_machine-unknown\n-\t\t;;\n-\tc54x)\n-\t\tbasic_machine=tic54x-unknown\n-\t\t;;\n-\tc55x)\n-\t\tbasic_machine=tic55x-unknown\n-\t\t;;\n-\tc6x)\n-\t\tbasic_machine=tic6x-unknown\n-\t\t;;\n-\tleon|leon[3-9])\n-\t\tbasic_machine=sparc-$basic_machine\n-\t\t;;\n-\tm6811 | m68hc11 | m6812 | m68hc12 | m68hcs12x | nvptx | picochip)\n-\t\tbasic_machine=$basic_machine-unknown\n-\t\tos=${os:-none}\n-\t\t;;\n-\tm88110 | m680[12346]0 | m683?2 | m68360 | m5200 | v70 | w65)\n+\t# Here we handle the default manufacturer of certain CPU types.  It is in\n+\t# some cases the only manufacturer, in others, it is the most popular.\n+\tw89k)\n+\t\tcpu=hppa1.1\n+\t\tvendor=winbond\n \t\t;;\n-\tm9s12z | m68hcs12z | hcs12z | s12z)\n-\t\tbasic_machine=s12z-unknown\n-\t\tos=${os:-none}\n+\top50n)\n+\t\tcpu=hppa1.1\n+\t\tvendor=oki\n \t\t;;\n-\tms1)\n-\t\tbasic_machine=mt-unknown\n+\top60c)\n+\t\tcpu=hppa1.1\n+\t\tvendor=oki\n \t\t;;\n-\tstrongarm | thumb | xscale)\n-\t\tbasic_machine=arm-unknown\n+\tibm*)\n+\t\tcpu=i370\n+\t\tvendor=ibm\n \t\t;;\n-\txgate)\n-\t\tbasic_machine=$basic_machine-unknown\n-\t\tos=${os:-none}\n+\torion105)\n+\t\tcpu=clipper\n+\t\tvendor=highlevel\n \t\t;;\n-\txscaleeb)\n-\t\tbasic_machine=armeb-unknown\n+\tmac | mpw | mac-mpw)\n+\t\tcpu=m68k\n+\t\tvendor=apple\n \t\t;;\n-\n-\txscaleel)\n-\t\tbasic_machine=armel-unknown\n+\tpmac | pmac-mpw)\n+\t\tcpu=powerpc\n+\t\tvendor=apple\n \t\t;;\n \n-\t# We use `pc' rather than `unknown'\n-\t# because (1) that's what they normally are, and\n-\t# (2) the word \"unknown\" tends to confuse beginning users.\n-\ti*86 | x86_64)\n-\t  basic_machine=$basic_machine-pc\n-\t  ;;\n-\t# Recognize the basic CPU types with company name.\n-\t580-* \\\n-\t| a29k-* \\\n-\t| aarch64-* | aarch64_be-* \\\n-\t| alpha-* | alphaev[4-8]-* | alphaev56-* | alphaev6[78]-* \\\n-\t| alpha64-* | alpha64ev[4-8]-* | alpha64ev56-* | alpha64ev6[78]-* \\\n-\t| alphapca5[67]-* | alpha64pca5[67]-* | arc-* | arceb-* \\\n-\t| arm-*  | armbe-* | armle-* | armeb-* | armv*-* \\\n-\t| avr-* | avr32-* \\\n-\t| ba-* \\\n-\t| be32-* | be64-* \\\n-\t| bfin-* | bs2000-* \\\n-\t| c[123]* | c30-* | [cjt]90-* | c4x-* \\\n-\t| c8051-* | clipper-* | craynv-* | csky-* | cydra-* \\\n-\t| d10v-* | d30v-* | dlx-* \\\n-\t| e2k-* | elxsi-* \\\n-\t| f30[01]-* | f700-* | fido-* | fr30-* | frv-* | fx80-* \\\n-\t| h8300-* | h8500-* \\\n-\t| hppa-* | hppa1.[01]-* | hppa2.0-* | hppa2.0[nw]-* | hppa64-* \\\n-\t| hexagon-* \\\n-\t| i*86-* | i860-* | i960-* | ia16-* | ia64-* \\\n-\t| ip2k-* | iq2000-* \\\n-\t| k1om-* \\\n-\t| le32-* | le64-* \\\n-\t| lm32-* \\\n-\t| m32c-* | m32r-* | m32rle-* \\\n-\t| m68000-* | m680[012346]0-* | m68360-* | m683?2-* | m68k-* \\\n-\t| m88110-* | m88k-* | maxq-* | mcore-* | metag-* \\\n-\t| microblaze-* | microblazeel-* \\\n-\t| mips-* | mipsbe-* | mipseb-* | mipsel-* | mipsle-* \\\n-\t| mips16-* \\\n-\t| mips64-* | mips64el-* \\\n-\t| mips64octeon-* | mips64octeonel-* \\\n-\t| mips64orion-* | mips64orionel-* \\\n-\t| mips64r5900-* | mips64r5900el-* \\\n-\t| mips64vr-* | mips64vrel-* \\\n-\t| mips64vr4100-* | mips64vr4100el-* \\\n-\t| mips64vr4300-* | mips64vr4300el-* \\\n-\t| mips64vr5000-* | mips64vr5000el-* \\\n-\t| mips64vr5900-* | mips64vr5900el-* \\\n-\t| mipsisa32-* | mipsisa32el-* \\\n-\t| mipsisa32r2-* | mipsisa32r2el-* \\\n-\t| mipsisa32r6-* | mipsisa32r6el-* \\\n-\t| mipsisa64-* | mipsisa64el-* \\\n-\t| mipsisa64r2-* | mipsisa64r2el-* \\\n-\t| mipsisa64r6-* | mipsisa64r6el-* \\\n-\t| mipsisa64sb1-* | mipsisa64sb1el-* \\\n-\t| mipsisa64sr71k-* | mipsisa64sr71kel-* \\\n-\t| mipsr5900-* | mipsr5900el-* \\\n-\t| mipstx39-* | mipstx39el-* \\\n-\t| mmix-* \\\n-\t| mt-* \\\n-\t| msp430-* \\\n-\t| nds32-* | nds32le-* | nds32be-* \\\n-\t| nfp-* \\\n-\t| nios-* | nios2-* | nios2eb-* | nios2el-* \\\n-\t| none-* | np1-* | ns16k-* | ns32k-* \\\n-\t| open8-* \\\n-\t| or1k*-* \\\n-\t| orion-* \\\n-\t| pdp10-* | pdp11-* | pj-* | pjl-* | pn-* | power-* \\\n-\t| powerpc-* | powerpc64-* | powerpc64le-* | powerpcle-* \\\n-\t| pru-* \\\n-\t| pyramid-* \\\n-\t| riscv-* | riscv32-* | riscv64-* \\\n-\t| rl78-* | romp-* | rs6000-* | rx-* \\\n-\t| sh-* | sh[1234]-* | sh[24]a-* | sh[24]aeb-* | sh[23]e-* | sh[34]eb-* | sheb-* | shbe-* \\\n-\t| shle-* | sh[1234]le-* | sh3ele-* | sh64-* | sh64le-* \\\n-\t| sparc-* | sparc64-* | sparc64b-* | sparc64v-* | sparc86x-* | sparclet-* \\\n-\t| sparclite-* \\\n-\t| sparcv8-* | sparcv9-* | sparcv9b-* | sparcv9v-* | sv1-* | sx*-* \\\n-\t| tahoe-* \\\n-\t| tic30-* | tic4x-* | tic54x-* | tic55x-* | tic6x-* | tic80-* \\\n-\t| tile*-* \\\n-\t| tron-* \\\n-\t| ubicom32-* \\\n-\t| v850-* | v850e-* | v850e1-* | v850es-* | v850e2-* | v850e2v3-* \\\n-\t| vax-* \\\n-\t| visium-* \\\n-\t| wasm32-* \\\n-\t| we32k-* \\\n-\t| x86-* | x86_64-* | xc16x-* | xps100-* \\\n-\t| xstormy16-* | xtensa*-* \\\n-\t| ymp-* \\\n-\t| z8k-* | z80-*)\n-\t\t;;\n-\t# Recognize the basic CPU types without company name, with glob match.\n-\txtensa*)\n-\t\tbasic_machine=$basic_machine-unknown\n-\t\t;;\n \t# Recognize the various machine names and aliases which stand\n \t# for a CPU type and a company and sometimes even an OS.\n \t3b1 | 7300 | 7300-att | att-7300 | pc7300 | safari | unixpc)\n-\t\tbasic_machine=m68000-att\n+\t\tcpu=m68000\n+\t\tvendor=att\n \t\t;;\n \t3b*)\n-\t\tbasic_machine=we32k-att\n-\t\t;;\n-\tabacus)\n-\t\tbasic_machine=abacus-unknown\n-\t\t;;\n-\talliant | fx80)\n-\t\tbasic_machine=fx80-alliant\n-\t\t;;\n-\taltos | altos3068)\n-\t\tbasic_machine=m68k-altos\n-\t\t;;\n-\tamd64)\n-\t\tbasic_machine=x86_64-pc\n-\t\t;;\n-\tamd64-*)\n-\t\tbasic_machine=x86_64-`echo \"$basic_machine\" | sed 's/^[^-]*-//'`\n-\t\t;;\n-\tamiga | amiga-*)\n-\t\tbasic_machine=m68k-unknown\n-\t\t;;\n-\tasmjs)\n-\t\tbasic_machine=asmjs-unknown\n-\t\t;;\n-\tblackfin-*)\n-\t\tbasic_machine=bfin-`echo \"$basic_machine\" | sed 's/^[^-]*-//'`\n-\t\tos=linux\n+\t\tcpu=we32k\n+\t\tvendor=att\n \t\t;;\n \tbluegene*)\n-\t\tbasic_machine=powerpc-ibm\n+\t\tcpu=powerpc\n+\t\tvendor=ibm\n \t\tos=cnk\n \t\t;;\n-\tc54x-*)\n-\t\tbasic_machine=tic54x-`echo \"$basic_machine\" | sed 's/^[^-]*-//'`\n-\t\t;;\n-\tc55x-*)\n-\t\tbasic_machine=tic55x-`echo \"$basic_machine\" | sed 's/^[^-]*-//'`\n-\t\t;;\n-\tc6x-*)\n-\t\tbasic_machine=tic6x-`echo \"$basic_machine\" | sed 's/^[^-]*-//'`\n-\t\t;;\n-\tc90)\n-\t\tbasic_machine=c90-cray\n-\t\tos=${os:-unicos}\n-\t\t;;\n-\tconvex-c1)\n-\t\tbasic_machine=c1-convex\n-\t\tos=bsd\n-\t\t;;\n-\tconvex-c2)\n-\t\tbasic_machine=c2-convex\n-\t\tos=bsd\n-\t\t;;\n-\tconvex-c32)\n-\t\tbasic_machine=c32-convex\n-\t\tos=bsd\n-\t\t;;\n-\tconvex-c34)\n-\t\tbasic_machine=c34-convex\n-\t\tos=bsd\n-\t\t;;\n-\tconvex-c38)\n-\t\tbasic_machine=c38-convex\n-\t\tos=bsd\n-\t\t;;\n-\tcr16 | cr16-*)\n-\t\tbasic_machine=cr16-unknown\n-\t\tos=${os:-elf}\n-\t\t;;\n-\tcrds | unos)\n-\t\tbasic_machine=m68k-crds\n-\t\t;;\n-\tcrisv32 | crisv32-* | etraxfs*)\n-\t\tbasic_machine=crisv32-axis\n-\t\t;;\n-\tcris | cris-* | etrax*)\n-\t\tbasic_machine=cris-axis\n-\t\t;;\n-\tcrx)\n-\t\tbasic_machine=crx-unknown\n-\t\tos=${os:-elf}\n-\t\t;;\n-\tda30 | da30-*)\n-\t\tbasic_machine=m68k-da30\n-\t\t;;\n-\tdecstation | decstation-3100 | pmax | pmax-* | pmin | dec3100 | decstatn)\n-\t\tbasic_machine=mips-dec\n-\t\t;;\n \tdecsystem10* | dec10*)\n-\t\tbasic_machine=pdp10-dec\n+\t\tcpu=pdp10\n+\t\tvendor=dec\n \t\tos=tops10\n \t\t;;\n \tdecsystem20* | dec20*)\n-\t\tbasic_machine=pdp10-dec\n+\t\tcpu=pdp10\n+\t\tvendor=dec\n \t\tos=tops20\n \t\t;;\n \tdelta | 3300 | motorola-3300 | motorola-delta \\\n \t      | 3300-motorola | delta-motorola)\n-\t\tbasic_machine=m68k-motorola\n-\t\t;;\n-\tdpx20 | dpx20-*)\n-\t\tbasic_machine=rs6000-bull\n-\t\tos=${os:-bosx}\n+\t\tcpu=m68k\n+\t\tvendor=motorola\n \t\t;;\n \tdpx2*)\n-\t\tbasic_machine=m68k-bull\n+\t\tcpu=m68k\n+\t\tvendor=bull\n \t\tos=sysv3\n \t\t;;\n-\te500v[12])\n-\t\tbasic_machine=powerpc-unknown\n-\t\tos=$os\"spe\"\n-\t\t;;\n-\te500v[12]-*)\n-\t\tbasic_machine=powerpc-`echo \"$basic_machine\" | sed 's/^[^-]*-//'`\n-\t\tos=$os\"spe\"\n-\t\t;;\n \tencore | umax | mmax)\n-\t\tbasic_machine=ns32k-encore\n+\t\tcpu=ns32k\n+\t\tvendor=encore\n \t\t;;\n \telxsi)\n-\t\tbasic_machine=elxsi-elxsi\n+\t\tcpu=elxsi\n+\t\tvendor=elxsi\n \t\tos=${os:-bsd}\n \t\t;;\n \tfx2800)\n-\t\tbasic_machine=i860-alliant\n+\t\tcpu=i860\n+\t\tvendor=alliant\n \t\t;;\n \tgenix)\n-\t\tbasic_machine=ns32k-ns\n+\t\tcpu=ns32k\n+\t\tvendor=ns\n \t\t;;\n \th3050r* | hiux*)\n-\t\tbasic_machine=hppa1.1-hitachi\n+\t\tcpu=hppa1.1\n+\t\tvendor=hitachi\n \t\tos=hiuxwe2\n \t\t;;\n-\thp300-*)\n-\t\tbasic_machine=m68k-hp\n-\t\t;;\n \thp3k9[0-9][0-9] | hp9[0-9][0-9])\n-\t\tbasic_machine=hppa1.0-hp\n+\t\tcpu=hppa1.0\n+\t\tvendor=hp\n \t\t;;\n \thp9k2[0-9][0-9] | hp9k31[0-9])\n-\t\tbasic_machine=m68000-hp\n+\t\tcpu=m68000\n+\t\tvendor=hp\n \t\t;;\n \thp9k3[2-9][0-9])\n-\t\tbasic_machine=m68k-hp\n+\t\tcpu=m68k\n+\t\tvendor=hp\n \t\t;;\n \thp9k6[0-9][0-9] | hp6[0-9][0-9])\n-\t\tbasic_machine=hppa1.0-hp\n+\t\tcpu=hppa1.0\n+\t\tvendor=hp\n \t\t;;\n \thp9k7[0-79][0-9] | hp7[0-79][0-9])\n-\t\tbasic_machine=hppa1.1-hp\n+\t\tcpu=hppa1.1\n+\t\tvendor=hp\n \t\t;;\n \thp9k78[0-9] | hp78[0-9])\n \t\t# FIXME: really hppa2.0-hp\n-\t\tbasic_machine=hppa1.1-hp\n+\t\tcpu=hppa1.1\n+\t\tvendor=hp\n \t\t;;\n \thp9k8[67]1 | hp8[67]1 | hp9k80[24] | hp80[24] | hp9k8[78]9 | hp8[78]9 | hp9k893 | hp893)\n \t\t# FIXME: really hppa2.0-hp\n-\t\tbasic_machine=hppa1.1-hp\n+\t\tcpu=hppa1.1\n+\t\tvendor=hp\n \t\t;;\n \thp9k8[0-9][13679] | hp8[0-9][13679])\n-\t\tbasic_machine=hppa1.1-hp\n+\t\tcpu=hppa1.1\n+\t\tvendor=hp\n \t\t;;\n \thp9k8[0-9][0-9] | hp8[0-9][0-9])\n-\t\tbasic_machine=hppa1.0-hp\n-\t\t;;\n-\ti370-ibm* | ibm*)\n-\t\tbasic_machine=i370-ibm\n+\t\tcpu=hppa1.0\n+\t\tvendor=hp\n \t\t;;\n \ti*86v32)\n-\t\tbasic_machine=`echo \"$1\" | sed -e 's/86.*/86-pc/'`\n+\t\tcpu=`echo \"$1\" | sed -e 's/86.*/86/'`\n+\t\tvendor=pc\n \t\tos=sysv32\n \t\t;;\n \ti*86v4*)\n-\t\tbasic_machine=`echo \"$1\" | sed -e 's/86.*/86-pc/'`\n+\t\tcpu=`echo \"$1\" | sed -e 's/86.*/86/'`\n+\t\tvendor=pc\n \t\tos=sysv4\n \t\t;;\n \ti*86v)\n-\t\tbasic_machine=`echo \"$1\" | sed -e 's/86.*/86-pc/'`\n+\t\tcpu=`echo \"$1\" | sed -e 's/86.*/86/'`\n+\t\tvendor=pc\n \t\tos=sysv\n \t\t;;\n \ti*86sol2)\n-\t\tbasic_machine=`echo \"$1\" | sed -e 's/86.*/86-pc/'`\n+\t\tcpu=`echo \"$1\" | sed -e 's/86.*/86/'`\n+\t\tvendor=pc\n \t\tos=solaris2\n \t\t;;\n \tj90 | j90-cray)\n-\t\tbasic_machine=j90-cray\n+\t\tcpu=j90\n+\t\tvendor=cray\n \t\tos=${os:-unicos}\n \t\t;;\n \tiris | iris4d)\n-\t\tbasic_machine=mips-sgi\n+\t\tcpu=mips\n+\t\tvendor=sgi\n \t\tcase $os in\n \t\t    irix*)\n \t\t\t;;\n@@ -981,38 +804,23 @@ case $basic_machine in\n \t\t\t;;\n \t\tesac\n \t\t;;\n-\tleon-*|leon[3-9]-*)\n-\t\tbasic_machine=sparc-`echo \"$basic_machine\" | sed 's/-.*//'`\n-\t\t;;\n-\tm68knommu-*)\n-\t\tbasic_machine=m68k-`echo \"$basic_machine\" | sed 's/^[^-]*-//'`\n-\t\tos=linux\n-\t\t;;\n-\tmicroblaze*)\n-\t\tbasic_machine=microblaze-xilinx\n-\t\t;;\n \tminiframe)\n-\t\tbasic_machine=m68000-convergent\n+\t\tcpu=m68000\n+\t\tvendor=convergent\n \t\t;;\n \t*mint | mint[0-9]* | *MiNT | *MiNT[0-9]*)\n-\t\tbasic_machine=m68k-atari\n+\t\tcpu=m68k\n+\t\tvendor=atari\n \t\tos=mint\n \t\t;;\n-\tmips3*-*)\n-\t\tbasic_machine=`echo \"$basic_machine\" | sed -e 's/mips3/mips64/'`\n-\t\t;;\n-\tmips3*)\n-\t\tbasic_machine=`echo \"$basic_machine\" | sed -e 's/mips3/mips64/'`-unknown\n-\t\t;;\n-\tms1-*)\n-\t\tbasic_machine=`echo \"$basic_machine\" | sed -e 's/ms1-/mt-/'`\n-\t\t;;\n \tnews-3600 | risc-news)\n-\t\tbasic_machine=mips-sony\n+\t\tcpu=mips\n+\t\tvendor=sony\n \t\tos=newsos\n \t\t;;\n \tnext | m*-next)\n-\t\tbasic_machine=m68k-next\n+\t\tcpu=m68k\n+\t\tvendor=next\n \t\tcase $os in\n \t\t    nextstep* )\n \t\t\t;;\n@@ -1025,260 +833,439 @@ case $basic_machine in\n \t\tesac\n \t\t;;\n \tnp1)\n-\t\tbasic_machine=np1-gould\n+\t\tcpu=np1\n+\t\tvendor=gould\n \t\t;;\n-\tneo-tandem)\n-\t\tbasic_machine=neo-tandem\n+\top50n-* | op60c-*)\n+\t\tcpu=hppa1.1\n+\t\tvendor=oki\n+\t\tos=proelf\n \t\t;;\n-\tnse-tandem)\n-\t\tbasic_machine=nse-tandem\n+\tpa-hitachi)\n+\t\tcpu=hppa1.1\n+\t\tvendor=hitachi\n+\t\tos=hiuxwe2\n \t\t;;\n-\tnsr-tandem)\n-\t\tbasic_machine=nsr-tandem\n+\tpbd)\n+\t\tcpu=sparc\n+\t\tvendor=tti\n \t\t;;\n-\tnsv-tandem)\n-\t\tbasic_machine=nsv-tandem\n+\tpbb)\n+\t\tcpu=m68k\n+\t\tvendor=tti\n \t\t;;\n-\tnsx-tandem)\n-\t\tbasic_machine=nsx-tandem\n+\tpc532)\n+\t\tcpu=ns32k\n+\t\tvendor=pc532\n \t\t;;\n-\top50n-* | op60c-*)\n-\t\tbasic_machine=hppa1.1-oki\n-\t\tos=proelf\n+\tpn)\n+\t\tcpu=pn\n+\t\tvendor=gould\n \t\t;;\n-\topenrisc | openrisc-*)\n-\t\tbasic_machine=or32-unknown\n+\tpower)\n+\t\tcpu=power\n+\t\tvendor=ibm\n \t\t;;\n-\tpa-hitachi)\n-\t\tbasic_machine=hppa1.1-hitachi\n-\t\tos=hiuxwe2\n+\tps2)\n+\t\tcpu=i386\n+\t\tvendor=ibm\n \t\t;;\n-\tparisc-*)\n-\t\tbasic_machine=hppa-`echo \"$basic_machine\" | sed 's/^[^-]*-//'`\n-\t\tos=linux\n+\trm[46]00)\n+\t\tcpu=mips\n+\t\tvendor=siemens\n \t\t;;\n-\tpbd)\n-\t\tbasic_machine=sparc-tti\n+\trtpc | rtpc-*)\n+\t\tcpu=romp\n+\t\tvendor=ibm\n \t\t;;\n-\tpbb)\n-\t\tbasic_machine=m68k-tti\n+\tsde)\n+\t\tcpu=mipsisa32\n+\t\tvendor=sde\n+\t\tos=${os:-elf}\n \t\t;;\n-\tpc532 | pc532-*)\n-\t\tbasic_machine=ns32k-pc532\n+\tsimso-wrs)\n+\t\tcpu=sparclite\n+\t\tvendor=wrs\n+\t\tos=vxworks\n \t\t;;\n-\tpc98)\n-\t\tbasic_machine=i386-pc\n+\ttower | tower-32)\n+\t\tcpu=m68k\n+\t\tvendor=ncr\n \t\t;;\n-\tpc98-*)\n-\t\tbasic_machine=i386-`echo \"$basic_machine\" | sed 's/^[^-]*-//'`\n+\tvpp*|vx|vx-*)\n+\t\tcpu=f301\n+\t\tvendor=fujitsu\n+\t\t;;\n+\tw65)\n+\t\tcpu=w65\n+\t\tvendor=wdc\n+\t\t;;\n+\tw89k-*)\n+\t\tcpu=hppa1.1\n+\t\tvendor=winbond\n+\t\tos=proelf\n \t\t;;\n-\tpentium | p5 | k5 | k6 | nexgen | viac3)\n-\t\tbasic_machine=i586-pc\n+\tnone)\n+\t\tcpu=none\n+\t\tvendor=none\n \t\t;;\n-\tpentiumpro | p6 | 6x86 | athlon | athlon_*)\n-\t\tbasic_machine=i686-pc\n+\tleon|leon[3-9])\n+\t\tcpu=sparc\n+\t\tvendor=$basic_machine\n \t\t;;\n-\tpentiumii | pentium2 | pentiumiii | pentium3)\n-\t\tbasic_machine=i686-pc\n+\tleon-*|leon[3-9]-*)\n+\t\tcpu=sparc\n+\t\tvendor=`echo \"$basic_machine\" | sed 's/-.*//'`\n \t\t;;\n-\tpentium4)\n-\t\tbasic_machine=i786-pc\n+\n+\t*-*)\n+\t    \t# shellcheck disable=SC2162\n+\t\tIFS=\"-\" read cpu vendor <<EOF\n+$basic_machine\n+EOF\n \t\t;;\n-\tpentium-* | p5-* | k5-* | k6-* | nexgen-* | viac3-*)\n-\t\tbasic_machine=i586-`echo \"$basic_machine\" | sed 's/^[^-]*-//'`\n+\t# We use `pc' rather than `unknown'\n+\t# because (1) that's what they normally are, and\n+\t# (2) the word \"unknown\" tends to confuse beginning users.\n+\ti*86 | x86_64)\n+\t\tcpu=$basic_machine\n+\t\tvendor=pc\n \t\t;;\n-\tpentiumpro-* | p6-* | 6x86-* | athlon-*)\n-\t\tbasic_machine=i686-`echo \"$basic_machine\" | sed 's/^[^-]*-//'`\n+\t# These rules are duplicated from below for sake of the special case above;\n+\t# i.e. things that normalized to x86 arches should also default to \"pc\"\n+\tpc98)\n+\t\tcpu=i386\n+\t\tvendor=pc\n \t\t;;\n-\tpentiumii-* | pentium2-* | pentiumiii-* | pentium3-*)\n-\t\tbasic_machine=i686-`echo \"$basic_machine\" | sed 's/^[^-]*-//'`\n+\tx64 | amd64)\n+\t\tcpu=x86_64\n+\t\tvendor=pc\n \t\t;;\n-\tpentium4-*)\n-\t\tbasic_machine=i786-`echo \"$basic_machine\" | sed 's/^[^-]*-//'`\n+\t# Recognize the basic CPU types without company name.\n+\t*)\n+\t\tcpu=$basic_machine\n+\t\tvendor=unknown\n \t\t;;\n-\tpn)\n-\t\tbasic_machine=pn-gould\n+esac\n+\n+unset -v basic_machine\n+\n+# Decode basic machines in the full and proper CPU-Company form.\n+case $cpu-$vendor in\n+\t# Here we handle the default manufacturer of certain CPU types in canonical form. It is in\n+\t# some cases the only manufacturer, in others, it is the most popular.\n+\tcraynv-unknown)\n+\t\tvendor=cray\n+\t\tos=${os:-unicosmp}\n+\t\t;;\n+\tc90-unknown | c90-cray)\n+\t\tvendor=cray\n+\t\tos=${os:-unicos}\n \t\t;;\n-\tpower)\tbasic_machine=power-ibm\n+\tfx80-unknown)\n+\t\tvendor=alliant\n \t\t;;\n-\tppc | ppcbe)\tbasic_machine=powerpc-unknown\n+\tromp-unknown)\n+\t\tvendor=ibm\n \t\t;;\n-\tppc-* | ppcbe-*)\n-\t\tbasic_machine=powerpc-`echo \"$basic_machine\" | sed 's/^[^-]*-//'`\n+\tmmix-unknown)\n+\t\tvendor=knuth\n \t\t;;\n-\tppcle | powerpclittle)\n-\t\tbasic_machine=powerpcle-unknown\n+\tmicroblaze-unknown | microblazeel-unknown)\n+\t\tvendor=xilinx\n \t\t;;\n-\tppcle-* | powerpclittle-*)\n-\t\tbasic_machine=powerpcle-`echo \"$basic_machine\" | sed 's/^[^-]*-//'`\n+\trs6000-unknown)\n+\t\tvendor=ibm\n \t\t;;\n-\tppc64)\tbasic_machine=powerpc64-unknown\n+\tvax-unknown)\n+\t\tvendor=dec\n \t\t;;\n-\tppc64-*) basic_machine=powerpc64-`echo \"$basic_machine\" | sed 's/^[^-]*-//'`\n+\tpdp11-unknown)\n+\t\tvendor=dec\n \t\t;;\n-\tppc64le | powerpc64little)\n-\t\tbasic_machine=powerpc64le-unknown\n+\twe32k-unknown)\n+\t\tvendor=att\n \t\t;;\n-\tppc64le-* | powerpc64little-*)\n-\t\tbasic_machine=powerpc64le-`echo \"$basic_machine\" | sed 's/^[^-]*-//'`\n+\tcydra-unknown)\n+\t\tvendor=cydrome\n \t\t;;\n-\tps2)\n-\t\tbasic_machine=i386-ibm\n+\ti370-ibm*)\n+\t\tvendor=ibm\n \t\t;;\n-\trm[46]00)\n-\t\tbasic_machine=mips-siemens\n+\torion-unknown)\n+\t\tvendor=highlevel\n \t\t;;\n-\trtpc | rtpc-*)\n-\t\tbasic_machine=romp-ibm\n+\txps-unknown | xps100-unknown)\n+\t\tcpu=xps100\n+\t\tvendor=honeywell\n+\t\t;;\n+\n+\t# Here we normalize CPU types with a missing or matching vendor\n+\tdpx20-unknown | dpx20-bull)\n+\t\tcpu=rs6000\n+\t\tvendor=bull\n+\t\tos=${os:-bosx}\n \t\t;;\n-\ts390 | s390-*)\n-\t\tbasic_machine=s390-ibm\n+\n+\t# Here we normalize CPU types irrespective of the vendor\n+\tamd64-*)\n+\t\tcpu=x86_64\n \t\t;;\n-\ts390x | s390x-*)\n-\t\tbasic_machine=s390x-ibm\n+\tblackfin-*)\n+\t\tcpu=bfin\n+\t\tos=linux\n \t\t;;\n-\tsb1)\n-\t\tbasic_machine=mipsisa64sb1-unknown\n+\tc54x-*)\n+\t\tcpu=tic54x\n \t\t;;\n-\tsb1el)\n-\t\tbasic_machine=mipsisa64sb1el-unknown\n+\tc55x-*)\n+\t\tcpu=tic55x\n \t\t;;\n-\tsde)\n-\t\tbasic_machine=mipsisa32-sde\n-\t\tos=${os:-elf}\n+\tc6x-*)\n+\t\tcpu=tic6x\n \t\t;;\n-\tsequent)\n-\t\tbasic_machine=i386-sequent\n+\te500v[12]-*)\n+\t\tcpu=powerpc\n+\t\tos=$os\"spe\"\n \t\t;;\n-\tsh5el)\n-\t\tbasic_machine=sh5le-unknown\n+\tmips3*-*)\n+\t\tcpu=mips64\n \t\t;;\n-\tsimso-wrs)\n-\t\tbasic_machine=sparclite-wrs\n-\t\tos=vxworks\n+\tms1-*)\n+\t\tcpu=mt\n \t\t;;\n-\tspur)\n-\t\tbasic_machine=spur-unknown\n+\tm68knommu-*)\n+\t\tcpu=m68k\n+\t\tos=linux\n \t\t;;\n-\tst2000)\n-\t\tbasic_machine=m68k-tandem\n+\tm9s12z-* | m68hcs12z-* | hcs12z-* | s12z-*)\n+\t\tcpu=s12z\n \t\t;;\n-\tstrongarm-* | thumb-*)\n-\t\tbasic_machine=arm-`echo \"$basic_machine\" | sed 's/^[^-]*-//'`\n+\topenrisc-*)\n+\t\tcpu=or32\n \t\t;;\n-\tsun2)\n-\t\tbasic_machine=m68000-sun\n+\tparisc-*)\n+\t\tcpu=hppa\n+\t\tos=linux\n \t\t;;\n-\tsun3 | sun3-*)\n-\t\tbasic_machine=m68k-sun\n+\tpentium-* | p5-* | k5-* | k6-* | nexgen-* | viac3-*)\n+\t\tcpu=i586\n \t\t;;\n-\tsun4)\n-\t\tbasic_machine=sparc-sun\n+\tpentiumpro-* | p6-* | 6x86-* | athlon-* | athalon_*-*)\n+\t\tcpu=i686\n \t\t;;\n-\tsun386 | sun386i | roadrunner)\n-\t\tbasic_machine=i386-sun\n+\tpentiumii-* | pentium2-* | pentiumiii-* | pentium3-*)\n+\t\tcpu=i686\n \t\t;;\n-\ttile*)\n-\t\tbasic_machine=$basic_machine-unknown\n-\t\tos=linux-gnu\n+\tpentium4-*)\n+\t\tcpu=i786\n \t\t;;\n-\ttx39)\n-\t\tbasic_machine=mipstx39-unknown\n+\tpc98-*)\n+\t\tcpu=i386\n \t\t;;\n-\ttx39el)\n-\t\tbasic_machine=mipstx39el-unknown\n+\tppc-* | ppcbe-*)\n+\t\tcpu=powerpc\n \t\t;;\n-\ttower | tower-32)\n-\t\tbasic_machine=m68k-ncr\n+\tppcle-* | powerpclittle-*)\n+\t\tcpu=powerpcle\n \t\t;;\n-\tvpp*|vx|vx-*)\n-\t\tbasic_machine=f301-fujitsu\n+\tppc64-*)\n+\t\tcpu=powerpc64\n \t\t;;\n-\tw65*)\n-\t\tbasic_machine=w65-wdc\n-\t\tos=none\n+\tppc64le-* | powerpc64little-*)\n+\t\tcpu=powerpc64le\n \t\t;;\n-\tw89k-*)\n-\t\tbasic_machine=hppa1.1-winbond\n-\t\tos=proelf\n+\tsb1-*)\n+\t\tcpu=mipsisa64sb1\n \t\t;;\n-\tx64)\n-\t\tbasic_machine=x86_64-pc\n+\tsb1el-*)\n+\t\tcpu=mipsisa64sb1el\n \t\t;;\n-\txps | xps100)\n-\t\tbasic_machine=xps100-honeywell\n+\tsh5e[lb]-*)\n+\t\tcpu=`echo \"$cpu\" | sed 's/^\\(sh.\\)e\\(.\\)$/\\1\\2e/'`\n \t\t;;\n-\txscale-* | xscalee[bl]-*)\n-\t\tbasic_machine=`echo \"$basic_machine\" | sed 's/^xscale/arm/'`\n+\tspur-*)\n+\t\tcpu=spur\n \t\t;;\n-\tnone)\n-\t\tbasic_machine=none-none\n-\t\tos=${os:-none}\n+\tstrongarm-* | thumb-*)\n+\t\tcpu=arm\n \t\t;;\n-\n-# Here we handle the default manufacturer of certain CPU types.  It is in\n-# some cases the only manufacturer, in others, it is the most popular.\n-\tw89k)\n-\t\tbasic_machine=hppa1.1-winbond\n+\ttx39-*)\n+\t\tcpu=mipstx39\n \t\t;;\n-\top50n)\n-\t\tbasic_machine=hppa1.1-oki\n+\ttx39el-*)\n+\t\tcpu=mipstx39el\n \t\t;;\n-\top60c)\n-\t\tbasic_machine=hppa1.1-oki\n+\tx64-*)\n+\t\tcpu=x86_64\n \t\t;;\n-\tromp)\n-\t\tbasic_machine=romp-ibm\n+\txscale-* | xscalee[bl]-*)\n+\t\tcpu=`echo \"$cpu\" | sed 's/^xscale/arm/'`\n \t\t;;\n-\tmmix)\n-\t\tbasic_machine=mmix-knuth\n+\n+\t# Recognize the canonical CPU Types that limit and/or modify the\n+\t# company names they are paired with.\n+\tcr16-*)\n+\t\tos=${os:-elf}\n \t\t;;\n-\trs6000)\n-\t\tbasic_machine=rs6000-ibm\n+\tcrisv32-* | etraxfs*-*)\n+\t\tcpu=crisv32\n+\t\tvendor=axis\n \t\t;;\n-\tvax)\n-\t\tbasic_machine=vax-dec\n+\tcris-* | etrax*-*)\n+\t\tcpu=cris\n+\t\tvendor=axis\n \t\t;;\n-\tpdp11)\n-\t\tbasic_machine=pdp11-dec\n+\tcrx-*)\n+\t\tos=${os:-elf}\n \t\t;;\n-\twe32k)\n-\t\tbasic_machine=we32k-att\n+\tneo-tandem)\n+\t\tcpu=neo\n+\t\tvendor=tandem\n \t\t;;\n-\tsh[1234] | sh[24]a | sh[24]aeb | sh[34]eb | sh[1234]le | sh[23]ele)\n-\t\tbasic_machine=sh-unknown\n+\tnse-tandem)\n+\t\tcpu=nse\n+\t\tvendor=tandem\n \t\t;;\n-\tcydra)\n-\t\tbasic_machine=cydra-cydrome\n+\tnsr-tandem)\n+\t\tcpu=nsr\n+\t\tvendor=tandem\n \t\t;;\n-\torion)\n-\t\tbasic_machine=orion-highlevel\n+\tnsv-tandem)\n+\t\tcpu=nsv\n+\t\tvendor=tandem\n \t\t;;\n-\torion105)\n-\t\tbasic_machine=clipper-highlevel\n+\tnsx-tandem)\n+\t\tcpu=nsx\n+\t\tvendor=tandem\n \t\t;;\n-\tmac | mpw | mac-mpw)\n-\t\tbasic_machine=m68k-apple\n+\ts390-*)\n+\t\tcpu=s390\n+\t\tvendor=ibm\n \t\t;;\n-\tpmac | pmac-mpw)\n-\t\tbasic_machine=powerpc-apple\n+\ts390x-*)\n+\t\tcpu=s390x\n+\t\tvendor=ibm\n \t\t;;\n-\t*-unknown)\n-\t\t# Make sure to match an already-canonicalized machine name.\n+\ttile*-*)\n+\t\tos=${os:-linux-gnu}\n \t\t;;\n+\n \t*)\n-\t\techo Invalid configuration \\`\"$1\"\\': machine \\`\"$basic_machine\"\\' not recognized 1>&2\n-\t\texit 1\n+\t\t# Recognize the canonical CPU types that are allowed with any\n+\t\t# company name.\n+\t\tcase $cpu in\n+\t\t\t1750a | 580 \\\n+\t\t\t| a29k \\\n+\t\t\t| aarch64 | aarch64_be \\\n+\t\t\t| abacus \\\n+\t\t\t| alpha | alphaev[4-8] | alphaev56 | alphaev6[78] \\\n+\t\t\t| alpha64 | alpha64ev[4-8] | alpha64ev56 | alpha64ev6[78] \\\n+\t\t\t| alphapca5[67] | alpha64pca5[67] \\\n+\t\t\t| am33_2.0 \\\n+\t\t\t| amdgcn \\\n+\t\t\t| arc | arceb \\\n+\t\t\t| arm  | arm[lb]e | arme[lb] | armv* \\\n+\t\t\t| avr | avr32 \\\n+\t\t\t| asmjs \\\n+\t\t\t| ba \\\n+\t\t\t| be32 | be64 \\\n+\t\t\t| bfin | bs2000 \\\n+\t\t\t| c[123]* | c30 | [cjt]90 | c4x \\\n+\t\t\t| c8051 | clipper | craynv | csky | cydra \\\n+\t\t\t| d10v | d30v | dlx | dsp16xx \\\n+\t\t\t| e2k | elxsi | epiphany \\\n+\t\t\t| f30[01] | f700 | fido | fr30 | frv | ft32 | fx80 \\\n+\t\t\t| h8300 | h8500 \\\n+\t\t\t| hppa | hppa1.[01] | hppa2.0 | hppa2.0[nw] | hppa64 \\\n+\t\t\t| hexagon \\\n+\t\t\t| i370 | i*86 | i860 | i960 | ia16 | ia64 \\\n+\t\t\t| ip2k | iq2000 \\\n+\t\t\t| k1om \\\n+\t\t\t| le32 | le64 \\\n+\t\t\t| lm32 \\\n+\t\t\t| m32c | m32r | m32rle \\\n+\t\t\t| m5200 | m68000 | m680[012346]0 | m68360 | m683?2 | m68k | v70 | w65 \\\n+\t\t\t| m6811 | m68hc11 | m6812 | m68hc12 | m68hcs12x | nvptx | picochip \\\n+\t\t\t| m88110 | m88k | maxq | mb | mcore | mep | metag \\\n+\t\t\t| microblaze | microblazeel \\\n+\t\t\t| mips | mipsbe | mipseb | mipsel | mipsle \\\n+\t\t\t| mips16 \\\n+\t\t\t| mips64 | mips64el \\\n+\t\t\t| mips64octeon | mips64octeonel \\\n+\t\t\t| mips64orion | mips64orionel \\\n+\t\t\t| mips64r5900 | mips64r5900el \\\n+\t\t\t| mips64vr | mips64vrel \\\n+\t\t\t| mips64vr4100 | mips64vr4100el \\\n+\t\t\t| mips64vr4300 | mips64vr4300el \\\n+\t\t\t| mips64vr5000 | mips64vr5000el \\\n+\t\t\t| mips64vr5900 | mips64vr5900el \\\n+\t\t\t| mipsisa32 | mipsisa32el \\\n+\t\t\t| mipsisa32r2 | mipsisa32r2el \\\n+\t\t\t| mipsisa32r6 | mipsisa32r6el \\\n+\t\t\t| mipsisa64 | mipsisa64el \\\n+\t\t\t| mipsisa64r2 | mipsisa64r2el \\\n+\t\t\t| mipsisa64r6 | mipsisa64r6el \\\n+\t\t\t| mipsisa64sb1 | mipsisa64sb1el \\\n+\t\t\t| mipsisa64sr71k | mipsisa64sr71kel \\\n+\t\t\t| mipsr5900 | mipsr5900el \\\n+\t\t\t| mipstx39 | mipstx39el \\\n+\t\t\t| mmix \\\n+\t\t\t| mn10200 | mn10300 \\\n+\t\t\t| moxie \\\n+\t\t\t| mt \\\n+\t\t\t| msp430 \\\n+\t\t\t| nds32 | nds32le | nds32be \\\n+\t\t\t| nfp \\\n+\t\t\t| nios | nios2 | nios2eb | nios2el \\\n+\t\t\t| none | np1 | ns16k | ns32k \\\n+\t\t\t| open8 \\\n+\t\t\t| or1k* \\\n+\t\t\t| or32 \\\n+\t\t\t| orion \\\n+\t\t\t| pdp10 | pdp11 | pj | pjl | pn | power \\\n+\t\t\t| powerpc | powerpc64 | powerpc64le | powerpcle | powerpcspe \\\n+\t\t\t| pru \\\n+\t\t\t| pyramid \\\n+\t\t\t| riscv | riscv32 | riscv64 \\\n+\t\t\t| rl78 | romp | rs6000 | rx \\\n+\t\t\t| score \\\n+\t\t\t| sh | sh[1234] | sh[24]a | sh[24]ae[lb] | sh[23]e | she[lb] | sh[lb]e \\\n+\t\t\t| sh[1234]e[lb] |  sh[12345][lb]e | sh[23]ele | sh64 | sh64le \\\n+\t\t\t| sparc | sparc64 | sparc64b | sparc64v | sparc86x | sparclet \\\n+\t\t\t| sparclite \\\n+\t\t\t| sparcv8 | sparcv9 | sparcv9b | sparcv9v | sv1 | sx* \\\n+\t\t\t| spu \\\n+\t\t\t| tahoe \\\n+\t\t\t| tic30 | tic4x | tic54x | tic55x | tic6x | tic80 \\\n+\t\t\t| tron \\\n+\t\t\t| ubicom32 \\\n+\t\t\t| v850 | v850e | v850e1 | v850es | v850e2 | v850e2v3 \\\n+\t\t\t| vax \\\n+\t\t\t| visium \\\n+\t\t\t| wasm32 \\\n+\t\t\t| we32k \\\n+\t\t\t| x86 | x86_64 | xc16x | xgate | xps100 \\\n+\t\t\t| xstormy16 | xtensa* \\\n+\t\t\t| ymp \\\n+\t\t\t| z8k | z80)\n+\t\t\t\t;;\n+\n+\t\t\t*)\n+\t\t\t\techo Invalid configuration \\`\"$1\"\\': machine \\`\"$cpu-$vendor\"\\' not recognized 1>&2\n+\t\t\t\texit 1\n+\t\t\t\t;;\n+\t\tesac\n \t\t;;\n esac\n \n # Here we canonicalize certain aliases for manufacturers.\n-case $basic_machine in\n-\t*-digital*)\n-\t\tbasic_machine=`echo \"$basic_machine\" | sed 's/digital.*/dec/'`\n+case $vendor in\n+\tdigital*)\n+\t\tvendor=dec\n \t\t;;\n-\t*-commodore*)\n-\t\tbasic_machine=`echo \"$basic_machine\" | sed 's/commodore.*/cbm/'`\n+\tcommodore*)\n+\t\tvendor=cbm\n \t\t;;\n \t*)\n \t\t;;\n@@ -1356,7 +1343,7 @@ case $os in\n \t     | amigaos* | amigados* | msdos* | newsos* | unicos* | aof* \\\n \t     | aos* | aros* | cloudabi* | sortix* \\\n \t     | nindy* | vxsim* | vxworks* | ebmon* | hms* | mvs* \\\n-\t     | clix* | riscos* | uniplus* | iris* | rtu* | xenix* \\\n+\t     | clix* | riscos* | uniplus* | iris* | isc* | rtu* | xenix* \\\n \t     | knetbsd* | mirbsd* | netbsd* \\\n \t     | bitrig* | openbsd* | solidbsd* | libertybsd* \\\n \t     | ekkobsd* | kfreebsd* | freebsd* | riscix* | lynxos* \\\n@@ -1376,12 +1363,12 @@ case $os in\n \t     | powermax* | dnix* | nx6 | nx7 | sei* | dragonfly* \\\n \t     | skyos* | haiku* | rdos* | toppers* | drops* | es* \\\n \t     | onefs* | tirtos* | phoenix* | fuchsia* | redox* | bme* \\\n-\t     | midnightbsd*)\n+\t     | midnightbsd* | amdhsa* | unleashed* | emscripten*)\n \t# Remember, each alternative MUST END IN *, to match a version number.\n \t\t;;\n \tqnx*)\n-\t\tcase $basic_machine in\n-\t\t    x86-* | i*86-*)\n+\t\tcase $cpu in\n+\t\t    x86 | i*86)\n \t\t\t;;\n \t\t    *)\n \t\t\tos=nto-$os\n@@ -1507,7 +1494,7 @@ case $os in\n \t\t# Until real need of OS specific support for\n \t\t# particular features comes up, bare metal\n \t\t# configurations are quite functional.\n-\t\tcase $basic_machine in\n+\t\tcase $cpu in\n \t\t    arm*)\n \t\t\tos=eabi\n \t\t\t;;\n@@ -1541,7 +1528,7 @@ else\n # will signal an error saying that MANUFACTURER isn't an operating\n # system, and we'll never get to this point.\n \n-case $basic_machine in\n+case $cpu-$vendor in\n \tscore-*)\n \t\tos=elf\n \t\t;;\n@@ -1722,9 +1709,8 @@ fi\n \n # Here we handle the case where we know the os, and the CPU type, but not the\n # manufacturer.  We pick the logical manufacturer.\n-vendor=unknown\n-case $basic_machine in\n-\t*-unknown)\n+case $vendor in\n+\tunknown)\n \t\tcase $os in\n \t\t\triscix*)\n \t\t\t\tvendor=acorn\n@@ -1793,11 +1779,10 @@ case $basic_machine in\n \t\t\t\tvendor=stratus\n \t\t\t\t;;\n \t\tesac\n-\t\tbasic_machine=`echo \"$basic_machine\" | sed \"s/unknown/$vendor/\"`\n \t\t;;\n esac\n \n-echo \"$basic_machine-$os\"\n+echo \"$cpu-$vendor-$os\"\n exit\n \n # Local variables:"}]}