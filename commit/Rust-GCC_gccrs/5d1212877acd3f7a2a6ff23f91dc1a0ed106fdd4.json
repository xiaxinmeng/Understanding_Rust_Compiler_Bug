{"sha": "5d1212877acd3f7a2a6ff23f91dc1a0ed106fdd4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWQxMjEyODc3YWNkM2Y3YTJhNmZmMjNmOTFkYzFhMGVkMTA2ZmRkNA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2019-07-06T07:50:44Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2019-07-06T07:50:44Z"}, "message": "re PR tree-optimization/91096 (Openmp vector max reduction incorrect)\n\n\tPR tree-optimization/91096\n\t* gcc.dg/vect/vect-simd-10.c (FLT_MIN_VALUE): Define.\n\t(bar, main): Use it instead of -__builtin_inff ().\n\t* gcc.dg/vect/vect-simd-14.c (FLT_MIN_VALUE): Define.\n\t(bar, main): Use it instead of -__builtin_inff ().\n\nFrom-SVN: r273156", "tree": {"sha": "3f495840830de71fa7972e9f5c338b2898ff0855", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3f495840830de71fa7972e9f5c338b2898ff0855"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5d1212877acd3f7a2a6ff23f91dc1a0ed106fdd4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d1212877acd3f7a2a6ff23f91dc1a0ed106fdd4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d1212877acd3f7a2a6ff23f91dc1a0ed106fdd4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d1212877acd3f7a2a6ff23f91dc1a0ed106fdd4/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2dcb0d5b59e05b18694173c4c194bcedc1956ff8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2dcb0d5b59e05b18694173c4c194bcedc1956ff8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2dcb0d5b59e05b18694173c4c194bcedc1956ff8"}], "stats": {"total": 28, "additions": 24, "deletions": 4}, "files": [{"sha": "5a848eb77ec8428313b9f11efdd7d4baa7dadea3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d1212877acd3f7a2a6ff23f91dc1a0ed106fdd4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d1212877acd3f7a2a6ff23f91dc1a0ed106fdd4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5d1212877acd3f7a2a6ff23f91dc1a0ed106fdd4", "patch": "@@ -1,3 +1,11 @@\n+2019-07-06  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/91096\n+\t* gcc.dg/vect/vect-simd-10.c (FLT_MIN_VALUE): Define.\n+\t(bar, main): Use it instead of -__builtin_inff ().\n+\t* gcc.dg/vect/vect-simd-14.c (FLT_MIN_VALUE): Define.\n+\t(bar, main): Use it instead of -__builtin_inff ().\n+\n 2019-07-05  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/67184 (again)"}, {"sha": "e49566a3847a97dee412148bed63a4b69af8dd1b", "filename": "gcc/testsuite/gcc.dg/vect/vect-simd-10.c", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d1212877acd3f7a2a6ff23f91dc1a0ed106fdd4/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-simd-10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d1212877acd3f7a2a6ff23f91dc1a0ed106fdd4/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-simd-10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-simd-10.c?ref=5d1212877acd3f7a2a6ff23f91dc1a0ed106fdd4", "patch": "@@ -7,6 +7,12 @@\n #include \"tree-vect.h\"\n #endif\n \n+#ifdef __FAST_MATH__\n+#define FLT_MIN_VALUE (-__FLT_MAX__)\n+#else\n+#define FLT_MIN_VALUE (-__builtin_inff ())\n+#endif\n+\n float r = 1.0f, a[1024], b[1024];\n \n __attribute__((noipa)) void\n@@ -24,7 +30,7 @@ foo (float *a, float *b)\n __attribute__((noipa)) float\n bar (void)\n {\n-  float s = -__builtin_inff ();\n+  float s = FLT_MIN_VALUE;\n   #pragma omp simd reduction (inscan, max:s)\n   for (int i = 0; i < 1024; i++)\n     {\n@@ -84,7 +90,7 @@ main ()\n     }\n   if (bar () != 592.0f)\n     abort ();\n-  s = -__builtin_inff ();\n+  s = FLT_MIN_VALUE;\n   for (int i = 0; i < 1024; ++i)\n     {\n       if (s < a[i])"}, {"sha": "9e73792ed7c36030b2f6885e1257a66991cdc4d1", "filename": "gcc/testsuite/gcc.dg/vect/vect-simd-14.c", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d1212877acd3f7a2a6ff23f91dc1a0ed106fdd4/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-simd-14.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d1212877acd3f7a2a6ff23f91dc1a0ed106fdd4/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-simd-14.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-simd-14.c?ref=5d1212877acd3f7a2a6ff23f91dc1a0ed106fdd4", "patch": "@@ -7,6 +7,12 @@\n #include \"tree-vect.h\"\n #endif\n \n+#ifdef __FAST_MATH__\n+#define FLT_MIN_VALUE (-__FLT_MAX__)\n+#else\n+#define FLT_MIN_VALUE (-__builtin_inff ())\n+#endif\n+\n float r = 1.0f, a[1024], b[1024];\n \n __attribute__((noipa)) void\n@@ -24,7 +30,7 @@ foo (float *a, float *b)\n __attribute__((noipa)) float\n bar (void)\n {\n-  float s = -__builtin_inff ();\n+  float s = FLT_MIN_VALUE;\n   #pragma omp simd reduction (inscan, max:s)\n   for (int i = 0; i < 1024; i++)\n     {\n@@ -82,7 +88,7 @@ main ()\n     }\n   if (bar () != 592.0f)\n     abort ();\n-  s = -__builtin_inff ();\n+  s = FLT_MIN_VALUE;\n   for (int i = 0; i < 1024; ++i)\n     {\n       if (b[i] != s)"}]}