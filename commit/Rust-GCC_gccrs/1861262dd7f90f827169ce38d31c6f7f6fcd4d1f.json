{"sha": "1861262dd7f90f827169ce38d31c6f7f6fcd4d1f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTg2MTI2MmRkN2Y5MGY4MjcxNjljZTM4ZDMxYzZmN2Y2ZmNkNGQxZg==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-03-31T21:35:37Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-03-31T21:35:37Z"}, "message": "(ASM_OUTPUT_FLOAT, ASM_OUTPUT_DOUBLE)\n\n(ASM_OUTPUT_FLOAT, ASM_OUTPUT_DOUBLE)\n(ASM_OUTPUT_DOUBLE_OPERAND): Use REAL_VALUE... macros.\n(ASM_OUTPUT_LONG_DOUBLE): New definition.\n(ASM_OUTPUT_FLOAT_OPERAND): New macro.\n(PRINT_OPERAND_PRINT_FLOAT): Deleted.\n\nFrom-SVN: r3976", "tree": {"sha": "ffbb829596e505e2538cb2448692324cb7552e09", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ffbb829596e505e2538cb2448692324cb7552e09"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1861262dd7f90f827169ce38d31c6f7f6fcd4d1f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1861262dd7f90f827169ce38d31c6f7f6fcd4d1f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1861262dd7f90f827169ce38d31c6f7f6fcd4d1f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1861262dd7f90f827169ce38d31c6f7f6fcd4d1f/comments", "author": null, "committer": null, "parents": [{"sha": "04ea6a84dfc047c64cdefef78a75de5d41aacedb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04ea6a84dfc047c64cdefef78a75de5d41aacedb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/04ea6a84dfc047c64cdefef78a75de5d41aacedb"}], "stats": {"total": 44, "additions": 28, "deletions": 16}, "files": [{"sha": "a326489b2b7f4dbca7de7712bf9ec97c3acb55f6", "filename": "gcc/config/m68k/sgs.h", "status": "modified", "additions": 28, "deletions": 16, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1861262dd7f90f827169ce38d31c6f7f6fcd4d1f/gcc%2Fconfig%2Fm68k%2Fsgs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1861262dd7f90f827169ce38d31c6f7f6fcd4d1f/gcc%2Fconfig%2Fm68k%2Fsgs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fsgs.h?ref=1861262dd7f90f827169ce38d31c6f7f6fcd4d1f", "patch": "@@ -1,7 +1,7 @@\n /* Definitions of target machine for GNU compiler for m68k targets using\n    assemblers derived from AT&T \"SGS\" releases.\n \n-   Copyright (C) 1991 Free Software Foundation, Inc.\n+   Copyright (C) 1991, 1993 Free Software Foundation, Inc.\n \n    Written by Fred Fish (fnf@cygnus.com)\n \n@@ -119,23 +119,31 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n   output_addr_const ((FILE), (VALUE)),\t\t\t\\\n   fprintf ((FILE), \"\\n\"))\n \n+#undef ASM_OUTPUT_LONG_DOUBLE\n+#define ASM_OUTPUT_LONG_DOUBLE(FILE,VALUE)  \t\t\t\\\n+do { long l[3];\t\t\t\t\t\t\t\\\n+     REAL_VALUE_TO_TARGET_LONG_DOUBLE (VALUE, l);\t\t\\\n+     fprintf ((FILE), \"\\t%s 0x%x,0x%x,0x%x\\n\", LONG_ASM_OP,\t\\\n+\t     l[0], l[1], l[2]);\t\t\t\t\t\\\n+   } while (0)\n+\n /* This is how to output an assembler line defining a `double' constant.  */\n \n #undef ASM_OUTPUT_DOUBLE\n #define ASM_OUTPUT_DOUBLE(FILE,VALUE)\t\t\t\\\n-do { union { double d; long l[2]; } tem;\t\t\\\n-     tem.d = (VALUE);\t\t\t\t\t\\\n-     fprintf((FILE), \"\\t%s 0x%x,0x%x\\n\", LONG_ASM_OP,\t\\\n-\t     tem.l[0], tem.l[1]);\t\t\t\\\n+do { long l[2];\t\t\t\t\t\t\\\n+     REAL_VALUE_TO_TARGET_DOUBLE (VALUE, l);\t\t\\\n+     fprintf ((FILE), \"\\t%s 0x%x,0x%x\\n\", LONG_ASM_OP,\t\\\n+\t      l[0], l[1]);\t\t\t\t\\\n    } while (0)\n \n /* This is how to output an assembler line defining a `float' constant.  */\n \n #undef ASM_OUTPUT_FLOAT\n #define ASM_OUTPUT_FLOAT(FILE,VALUE)\t\t\t\\\n-do { union { float f; long l;} tem;\t\t\t\\\n-     tem.f = (VALUE);\t\t\t\t\t\\\n-     fprintf ((FILE), \"\\t%s 0x%x\\n\", LONG_ASM_OP, tem.l); \\\n+do { long l;\t\t\t\t\t\t\\\n+     REAL_VALUE_TO_TARGET_SINGLE (VALUE, l);\t\t\\\n+     fprintf ((FILE), \"\\t%s 0x%x\\n\", LONG_ASM_OP, l);\t\\\n    } while (0)\n \n /* This is how to output an assembler line that says to advance the\n@@ -209,15 +217,19 @@ do { union { float f; long l;} tem;\t\t\t\\\n #define ASM_OUTPUT_REG_POP(FILE,REGNO)  \\\n   asm_fprintf (FILE, \"\\t%Omove.l (%Rsp)+,%s\\n\", reg_names[REGNO])\n \n-#undef PRINT_OPERAND_PRINT_FLOAT\n-#define PRINT_OPERAND_PRINT_FLOAT(CODE,FILE)\t\t\t\\\n-\tasm_fprintf ((FILE), \"%I0x%x\", u1.i);\n-\n+#undef ASM_OUTPUT_FLOAT_OPERAND\n+#define ASM_OUTPUT_FLOAT_OPERAND(CODE,FILE,VALUE)\t\\\n+  do { long l;\t\t\t\t\t\t\\\n+       REAL_VALUE_TO_TARGET_SINGLE (VALUE, l);\t\t\\\n+       asm_fprintf ((FILE), \"%I0x%x\", l);\t\t\\\n+     } while (0)\n+  \n #undef ASM_OUTPUT_DOUBLE_OPERAND\n-#define ASM_OUTPUT_DOUBLE_OPERAND(FILE,VALUE)\t\t\t\\\n-  do {  union real_extract u;\t\t\t\t\t\\\n-\tu.d = (VALUE);\t\t\t\t\t\t\\\n-\tasm_fprintf ((FILE),\"%I0x%x%08x\", u.i[0], u.i[1]); } while (0)\n+#define ASM_OUTPUT_DOUBLE_OPERAND(FILE,VALUE)\t\t\\\n+  do { long l[2];\t\t\t\t\t\\\n+       REAL_VALUE_TO_TARGET_DOUBLE (VALUE, l);\t\t\\\n+       asm_fprintf ((FILE), \"%I0x%x%08x\", l[0], l[1]);\t\\\n+     } while (0)\n \n /* How to output a block of SIZE zero bytes.  Note that the `space' pseudo,\n    when used in the text segment, causes SGS assemblers to output nop insns"}]}