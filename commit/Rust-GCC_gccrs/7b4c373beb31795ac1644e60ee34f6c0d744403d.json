{"sha": "7b4c373beb31795ac1644e60ee34f6c0d744403d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2I0YzM3M2JlYjMxNzk1YWMxNjQ0ZTYwZWUzNGY2YzBkNzQ0NDAzZA==", "commit": {"author": {"name": "Mihail Ionescu", "email": "mihail.ionescu@arm.com", "date": "2020-01-15T13:25:30Z"}, "committer": {"name": "Mihail Ionescu", "email": "mihail.ionescu@arm.com", "date": "2020-01-16T15:12:22Z"}, "message": "Add CLI and multilib support for Armv8.1-M Mainline MVE extensions\n\ngcc/ChangeLog:\n\n2020-01-16  Mihail Ionescu  <mihail.ionescu@arm.com>\n2020-01-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n\n\t* config/arm/arm-cpus.in (mve, mve_float): New features.\n\t(dsp, mve, mve.fp): New options.\n\t* config/arm/arm.h (TARGET_HAVE_MVE, TARGET_HAVE_MVE_FLOAT): Define.\n\t* config/arm/t-rmprofile: Map v8.1-M multilibs to v8-M.\n\t* doc/invoke.texi: Document the armv8.1-m mve and dps options.\n\ngcc/testsuite/ChangeLog:\n\n2020-01-16  Mihail Ionescu  <mihail.ionescu@arm.com>\n2020-01-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n\n\t* testsuite/gcc.target/arm/multilib.exp: Add v8.1-M entries.", "tree": {"sha": "3ce73aeb42c791c59e7b6fb74daeedcd75e67e98", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3ce73aeb42c791c59e7b6fb74daeedcd75e67e98"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7b4c373beb31795ac1644e60ee34f6c0d744403d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b4c373beb31795ac1644e60ee34f6c0d744403d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b4c373beb31795ac1644e60ee34f6c0d744403d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b4c373beb31795ac1644e60ee34f6c0d744403d/comments", "author": null, "committer": null, "parents": [{"sha": "4747e2ccec94dc37f32201b884f574755cbb9ca8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4747e2ccec94dc37f32201b884f574755cbb9ca8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4747e2ccec94dc37f32201b884f574755cbb9ca8"}], "stats": {"total": 76, "additions": 75, "deletions": 1}, "files": [{"sha": "a60fdbd44a47a50ca808b9a886cb7c5599129e1b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b4c373beb31795ac1644e60ee34f6c0d744403d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b4c373beb31795ac1644e60ee34f6c0d744403d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7b4c373beb31795ac1644e60ee34f6c0d744403d", "patch": "@@ -1,3 +1,12 @@\n+2020-01-16  Mihail Ionescu  <mihail.ionescu@arm.com>\n+2020-01-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n+\n+\t* config/arm/arm-cpus.in (mve, mve_float): New features.\n+\t(dsp, mve, mve.fp): New options.\n+\t* config/arm/arm.h (TARGET_HAVE_MVE, TARGET_HAVE_MVE_FLOAT): Define.\n+\t* config/arm/t-rmprofile: Map v8.1-M multilibs to v8-M.\n+\t* doc/invoke.texi: Document the armv8.1-m mve and dps options.\n+\n 2020-01-16  Mihail-Calin Ionescu <mihail.ionescu@arm.com>\n 2020-01-16  Thomas Preud'homme <thomas.preudhomme@arm.com>\n "}, {"sha": "1805b2b1cd8d6f65a967b4e3945257854a7e0fc1", "filename": "gcc/config/arm/arm-cpus.in", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b4c373beb31795ac1644e60ee34f6c0d744403d/gcc%2Fconfig%2Farm%2Farm-cpus.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b4c373beb31795ac1644e60ee34f6c0d744403d/gcc%2Fconfig%2Farm%2Farm-cpus.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-cpus.in?ref=7b4c373beb31795ac1644e60ee34f6c0d744403d", "patch": "@@ -197,6 +197,10 @@ define feature sb\n # v8-A architectures, added by default from v8.5-A\n define feature predres\n \n+# M-profile Vector Extension feature bits\n+define feature mve\n+define feature mve_float\n+\n # 8-bit Integer Matrix Multiply extension. Optional from v8.2-A.\n define feature i8mm\n \n@@ -690,9 +694,12 @@ begin arch armv8.1-m.main\n  base 8M_MAIN\n  isa ARMv8_1m_main\n # fp => FPv5-sp-d16; fp.dp => FPv5-d16\n+ option dsp add armv7em\n  option fp add FPv5 fp16\n  option fp.dp add FPv5 FP_DBL fp16\n  option nofp remove ALL_FP\n+ option mve add mve armv7em\n+ option mve.fp add mve FPv5 fp16 mve_float armv7em\n end arch armv8.1-m.main\n \n begin arch iwmmxt"}, {"sha": "04f8dbf1c375f4a0a2a898b1e8b06acbe04e08d4", "filename": "gcc/config/arm/arm.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b4c373beb31795ac1644e60ee34f6c0d744403d/gcc%2Fconfig%2Farm%2Farm.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b4c373beb31795ac1644e60ee34f6c0d744403d/gcc%2Fconfig%2Farm%2Farm.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.h?ref=7b4c373beb31795ac1644e60ee34f6c0d744403d", "patch": "@@ -319,6 +319,12 @@ emission of floating point pcs attributes.  */\n    instructions (most are floating-point related).  */\n #define TARGET_HAVE_FPCXT_CMSE\t(arm_arch8_1m_main)\n \n+#define TARGET_HAVE_MVE (bitmap_bit_p (arm_active_target.isa, \\\n+\t\t\t\t       isa_bit_mve))\n+\n+#define TARGET_HAVE_MVE_FLOAT (bitmap_bit_p (arm_active_target.isa, \\\n+\t\t\t\t\t     isa_bit_mve_float))\n+\n /* Nonzero if integer division instructions supported.  */\n #define TARGET_IDIV\t((TARGET_ARM && arm_arch_arm_hwdiv)\t\\\n \t\t\t || (TARGET_THUMB && arm_arch_thumb_hwdiv))"}, {"sha": "0fb3084c8b20f16ccadba632fc55162b196651d5", "filename": "gcc/config/arm/t-rmprofile", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b4c373beb31795ac1644e60ee34f6c0d744403d/gcc%2Fconfig%2Farm%2Ft-rmprofile", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b4c373beb31795ac1644e60ee34f6c0d744403d/gcc%2Fconfig%2Farm%2Ft-rmprofile", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ft-rmprofile?ref=7b4c373beb31795ac1644e60ee34f6c0d744403d", "patch": "@@ -54,7 +54,7 @@ MULTILIB_REQUIRED\t+= mthumb/march=armv8-m.main+fp.dp/mfloat-abi=softfp\n # Arch Matches\n MULTILIB_MATCHES\t+= march?armv6s-m=march?armv6-m\n \n-# Map all v8-m.main+dsp FP variants down the the variant without DSP.\n+# Map all v8-m.main+dsp FP variants down to the variant without DSP.\n MULTILIB_MATCHES\t+= march?armv8-m.main=march?armv8-m.main+dsp \\\n \t\t\t   $(foreach FP, +fp +fp.dp, \\\n \t\t\t     march?armv8-m.main$(FP)=march?armv8-m.main+dsp$(FP))\n@@ -66,3 +66,18 @@ MULTILIB_MATCHES\t+= march?armv7e-m+fp=march?armv7e-m+fpv5\n MULTILIB_REUSE\t\t+= $(foreach ARCH, armv6s-m armv7-m armv7e-m armv8-m\\.base armv8-m\\.main, \\\n \t\t\t     mthumb/march.$(ARCH)/mfloat-abi.soft=mthumb/march.$(ARCH)/mfloat-abi.softfp)\n \n+# Map v8.1-M to v8-M.\n+MULTILIB_MATCHES\t+= march?armv8-m.main=march?armv8.1-m.main\n+MULTILIB_MATCHES\t+= march?armv8-m.main=march?armv8.1-m.main+dsp\n+MULTILIB_MATCHES\t+= march?armv8-m.main=march?armv8.1-m.main+mve\n+\n+v8_1m_sp_variants = +fp +dsp+fp +mve.fp\n+v8_1m_dp_variants = +fp.dp +dsp+fp.dp +fp.dp+mve +fp.dp+mve.fp\n+\n+# Map all v8.1-m.main FP sp variants down to v8-m.\n+MULTILIB_MATCHES += $(foreach FP, $(v8_1m_sp_variants), \\\n+\t\t\t     march?armv8-m.main+fp=march?armv8.1-m.main$(FP))\n+\n+# Map all v8.1-m.main FP dp variants down to v8-m.\n+MULTILIB_MATCHES += $(foreach FP, $(v8_1m_dp_variants), \\\n+\t\t\t     march?armv8-m.main+fp.dp=march?armv8.1-m.main$(FP))"}, {"sha": "2bf12a669aad5d9401c70b4b88e5f9e2d4f0376a", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b4c373beb31795ac1644e60ee34f6c0d744403d/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b4c373beb31795ac1644e60ee34f6c0d744403d/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=7b4c373beb31795ac1644e60ee34f6c0d744403d", "patch": "@@ -18488,6 +18488,17 @@ Disable the floating-point extensions.\n \n @item  armv8.1-m.main\n @table @samp\n+\n+@item +dsp\n+The DSP instructions.\n+\n+@item +mve\n+The M-Profile Vector Extension (MVE) integer instructions.\n+\n+@item +mve.fp\n+The M-Profile Vector Extension (MVE) integer and single precision\n+floating-point instructions.\n+\n @item +fp\n The single-precision floating-point instructions.\n "}, {"sha": "880d7634458a607ef1c0d8b22a746e1b784b1725", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b4c373beb31795ac1644e60ee34f6c0d744403d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b4c373beb31795ac1644e60ee34f6c0d744403d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7b4c373beb31795ac1644e60ee34f6c0d744403d", "patch": "@@ -1,3 +1,8 @@\n+2020-01-16  Mihail Ionescu  <mihail.ionescu@arm.com>\n+2020-01-16  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n+\n+\t* testsuite/gcc.target/arm/multilib.exp: Add v8.1-M entries.\n+\n 2020-01-16  Mihail-Calin Ionescu <mihail.ionescu@arm.com>\n 2020-01-16  Thomas Preud'homme <thomas.preudhomme@arm.com>\n "}, {"sha": "67d00266f6b5e69aa2a7831cfb9a4353ac4f4340", "filename": "gcc/testsuite/gcc.target/arm/multilib.exp", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b4c373beb31795ac1644e60ee34f6c0d744403d/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmultilib.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b4c373beb31795ac1644e60ee34f6c0d744403d/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmultilib.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmultilib.exp?ref=7b4c373beb31795ac1644e60ee34f6c0d744403d", "patch": "@@ -799,6 +799,27 @@ if {[multilib_config \"rmprofile\"] } {\n \t{-march=armv8-r+fp.sp -mfpu=auto -mfloat-abi=hard} \"thumb/v7-r+fp.sp/hard\"\n \t{-march=armv8-r+crc+fp.sp -mfpu=auto -mfloat-abi=softfp} \"thumb/v7-r+fp.sp/softfp\"\n \t{-march=armv8-r+crc+fp.sp -mfpu=auto -mfloat-abi=hard} \"thumb/v7-r+fp.sp/hard\"\n+\t{-march=armv8.1-m.main -mfpu=auto -mfloat-abi=soft} \"thumb/v8-m.main/nofp\"\n+\t{-march=armv8.1-m.main+dsp -mfpu=auto -mfloat-abi=soft} \"thumb/v8-m.main/nofp\"\n+\t{-march=armv8.1-m.main+dsp+fp -mfpu=auto -mfloat-abi=soft} \"thumb/v8-m.main/nofp\"\n+\t{-march=armv8.1-m.main+dsp+fp.dp -mfpu=auto -mfloat-abi=soft} \"thumb/v8-m.main/nofp\"\n+\t{-march=armv8.1-m.main -mfpu=auto -mfloat-abi=softfp} \"thumb/v8-m.main/nofp\"\n+\t{-march=armv8.1-m.main+dsp -mfpu=auto -mfloat-abi=softfp} \"thumb/v8-m.main/nofp\"\n+\t{-march=armv8.1-m.main+dsp+fp -mfpu=auto -mfloat-abi=softfp} \"thumb/v8-m.main+fp/softfp\"\n+\t{-march=armv8.1-m.main+dsp+fp.dp -mfpu=auto -mfloat-abi=softfp} \"thumb/v8-m.main+dp/softfp\"\n+\t{-march=armv8.1-m.main+dsp+fp -mfpu=auto -mfloat-abi=hard} \"thumb/v8-m.main+fp/hard\"\n+\t{-march=armv8.1-m.main+dsp+fp.dp -mfpu=auto -mfloat-abi=hard} \"thumb/v8-m.main+dp/hard\"\n+\t{-march=armv8.1-m.main+mve -mfpu=auto -mfloat-abi=soft} \"thumb/v8-m.main/nofp\"\n+\t{-march=armv8.1-m.main+mve.fp -mfpu=auto -mfloat-abi=soft} \"thumb/v8-m.main/nofp\"\n+\t{-march=armv8.1-m.main+mve -mfpu=auto -mfloat-abi=softfp} \"thumb/v8-m.main/nofp\"\n+\t{-march=armv8.1-m.main+mve.fp -mfpu=auto -mfloat-abi=softfp} \"thumb/v8-m.main+fp/softfp\"\n+\t{-march=armv8.1-m.main+mve.fp -mfpu=auto -mfloat-abi=hard} \"thumb/v8-m.main+fp/hard\"\n+\t{-march=armv8.1-m.main+mve+fp.dp -mfpu=auto -mfloat-abi=soft} \"thumb/v8-m.main/nofp\"\n+\t{-march=armv8.1-m.main+mve.fp+fp.dp -mfpu=auto -mfloat-abi=soft} \"thumb/v8-m.main/nofp\"\n+\t{-march=armv8.1-m.main+mve+fp.dp -mfpu=auto -mfloat-abi=softfp} \"thumb/v8-m.main+dp/softfp\"\n+\t{-march=armv8.1-m.main+mve.fp+fp.dp -mfpu=auto -mfloat-abi=softfp} \"thumb/v8-m.main+dp/softfp\"\n+\t{-march=armv8.1-m.main+mve+fp.dp -mfpu=auto -mfloat-abi=hard} \"thumb/v8-m.main+dp/hard\"\n+\t{-march=armv8.1-m.main+mve.fp+fp.dp -mfpu=auto -mfloat-abi=hard} \"thumb/v8-m.main+dp/hard\"\n     } {\n \tcheck_multi_dir $opts $dir\n     }"}]}