{"sha": "8a4602c2e0f81895415ba7ee23bf81dc795d1103", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGE0NjAyYzJlMGY4MTg5NTQxNWJhN2VlMjNiZjgxZGM3OTVkMTEwMw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-09-06T08:08:16Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-09-06T08:08:16Z"}, "message": "match.pd: Fix up __builtin_*_overflow arg demotion [PR102207]\n\nMy earlier patch to demote arguments of __builtin_*_overflow unfortunately\ncaused a wrong-code regression.  The builtins operate on infinite precision\narguments, outer_prec > inner_prec signed -> signed, unsigned -> unsigned\npromotions there are just repeating the sign or 0s and can be demoted,\nsimilarly unsigned -> signed which also is repeating 0s, but as the\ntestcase shows, signed -> unsigned promotions need to be preserved (unless\nwe'd know the inner arguments can't be negative), because for negative\nnumbers such promotion sets the outer_prec -> inner_prec bits to 1 bit the\nbits above that to 0 in the infinite precision.\n\nSo, the following patch avoids the demotions for the signed -> unsigned\npromotions.\n\n2021-09-06  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR tree-optimization/102207\n\t* match.pd: Don't demote operands of IFN_{ADD,SUB,MUL}_OVERFLOW if they\n\twere promoted from signed to wider unsigned type.\n\n\t* gcc.dg/pr102207.c: New test.", "tree": {"sha": "d45c41b2fe49e3573b83c74eb9741ac12c7df030", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d45c41b2fe49e3573b83c74eb9741ac12c7df030"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8a4602c2e0f81895415ba7ee23bf81dc795d1103", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a4602c2e0f81895415ba7ee23bf81dc795d1103", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8a4602c2e0f81895415ba7ee23bf81dc795d1103", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a4602c2e0f81895415ba7ee23bf81dc795d1103/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "564efbf40077c25623cdd6ce2f911c56b5b08f6c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/564efbf40077c25623cdd6ce2f911c56b5b08f6c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/564efbf40077c25623cdd6ce2f911c56b5b08f6c"}], "stats": {"total": 30, "additions": 28, "deletions": 2}, "files": [{"sha": "008f7758c96f3e00083962e06766374243fba75f", "filename": "gcc/match.pd", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a4602c2e0f81895415ba7ee23bf81dc795d1103/gcc%2Fmatch.pd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a4602c2e0f81895415ba7ee23bf81dc795d1103/gcc%2Fmatch.pd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmatch.pd?ref=8a4602c2e0f81895415ba7ee23bf81dc795d1103", "patch": "@@ -5608,13 +5608,15 @@ DEFINE_INT_AND_FLOAT_ROUND_FN (RINT)\n   (ovf (convert@2 @0) @1)\n   (if (INTEGRAL_TYPE_P (TREE_TYPE (@0))\n        && INTEGRAL_TYPE_P (TREE_TYPE (@2))\n-       && TYPE_PRECISION (TREE_TYPE (@2)) > TYPE_PRECISION (TREE_TYPE (@0)))\n+       && TYPE_PRECISION (TREE_TYPE (@2)) > TYPE_PRECISION (TREE_TYPE (@0))\n+       && (!TYPE_UNSIGNED (TREE_TYPE (@2)) || TYPE_UNSIGNED (TREE_TYPE (@0))))\n    (ovf @0 @1)))\n  (simplify\n   (ovf @1 (convert@2 @0))\n   (if (INTEGRAL_TYPE_P (TREE_TYPE (@0))\n        && INTEGRAL_TYPE_P (TREE_TYPE (@2))\n-       && TYPE_PRECISION (TREE_TYPE (@2)) > TYPE_PRECISION (TREE_TYPE (@0)))\n+       && TYPE_PRECISION (TREE_TYPE (@2)) > TYPE_PRECISION (TREE_TYPE (@0))\n+       && (!TYPE_UNSIGNED (TREE_TYPE (@2)) || TYPE_UNSIGNED (TREE_TYPE (@0))))\n    (ovf @1 @0))))\n \n /* Simplification of math builtins.  These rules must all be optimizations"}, {"sha": "08540d0c18013915e0d0b76483332983b65f9809", "filename": "gcc/testsuite/gcc.dg/pr102207.c", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a4602c2e0f81895415ba7ee23bf81dc795d1103/gcc%2Ftestsuite%2Fgcc.dg%2Fpr102207.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a4602c2e0f81895415ba7ee23bf81dc795d1103/gcc%2Ftestsuite%2Fgcc.dg%2Fpr102207.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr102207.c?ref=8a4602c2e0f81895415ba7ee23bf81dc795d1103", "patch": "@@ -0,0 +1,24 @@\n+/* PR tree-optimization/102207 */\n+/* { dg-do run { target int128 } } */\n+/* { dg-options \"-O2\" } */\n+\n+typedef unsigned __int128 u128;\n+\n+u128\n+foo (unsigned short a)\n+{\n+  u128 g;\n+  __builtin_sub_overflow ((unsigned long long) -a, 1, &g);\n+  return g;\n+}\n+\n+int\n+main ()\n+{\n+  if (__SIZEOF_LONG_LONG__ * __CHAR_BIT__ != 64\n+      || __SIZEOF_SHORT__ * __CHAR_BIT__ != 16)\n+    return 0;\n+  if (foo (1) != 0xfffffffffffffffeULL)\n+    __builtin_abort ();\n+  return 0;\n+}"}]}