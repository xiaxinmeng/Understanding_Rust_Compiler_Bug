{"sha": "d0ae31b09e53f18cf51bd9015b8300bef3353e43", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDBhZTMxYjA5ZTUzZjE4Y2Y1MWJkOTAxNWI4MzAwYmVmMzM1M2U0Mw==", "commit": {"author": {"name": "Sandip Matte", "email": "sandip@rmicorp.com", "date": "2008-06-06T14:24:57Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2008-06-06T14:24:57Z"}, "message": "invoke.texi: Document -march=xlr.\n\ngcc/\n2008-06-05  Sandip Matte  <sandip@rmicorp.com>\n\n\t* doc/invoke.texi: Document -march=xlr.\n\t* config/mips/xlr.md: New file.\n\t* config/mips/mips.md: Include it.\n\t(cpu): Add \"xlr\".\n\t* config/mips/mips.h (PROCESSOR_XLR): New processor_type.\n\t* config/mips/mips.c (mips_cpu_info_table): Add an XLR entry.\n\t(mips_rtx_cost_data): Likewise.\n\nFrom-SVN: r136438", "tree": {"sha": "1528e234513c45a5fe487c7a79824b9df3206d86", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1528e234513c45a5fe487c7a79824b9df3206d86"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d0ae31b09e53f18cf51bd9015b8300bef3353e43", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0ae31b09e53f18cf51bd9015b8300bef3353e43", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d0ae31b09e53f18cf51bd9015b8300bef3353e43", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0ae31b09e53f18cf51bd9015b8300bef3353e43/comments", "author": null, "committer": null, "parents": [{"sha": "619fe0646ed1d43239e3b7f3ca74c35184c6eb73", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/619fe0646ed1d43239e3b7f3ca74c35184c6eb73", "html_url": "https://github.com/Rust-GCC/gccrs/commit/619fe0646ed1d43239e3b7f3ca74c35184c6eb73"}], "stats": {"total": 122, "additions": 120, "deletions": 2}, "files": [{"sha": "2447ed4c0e63f613a0affa9a683769fca2a2bb44", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0ae31b09e53f18cf51bd9015b8300bef3353e43/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0ae31b09e53f18cf51bd9015b8300bef3353e43/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d0ae31b09e53f18cf51bd9015b8300bef3353e43", "patch": "@@ -1,3 +1,13 @@\n+2008-06-06  Sandip Matte  <sandip@rmicorp.com>\n+\n+\t* doc/invoke.texi: Document -march=xlr.\n+\t* config/mips/xlr.md: New file.\n+\t* config/mips/mips.md: Include it.\n+\t(cpu): Add \"xlr\".\n+\t* config/mips/mips.h (PROCESSOR_XLR): New processor_type.\n+\t* config/mips/mips.c (mips_cpu_info_table): Add an XLR entry.\n+\t(mips_rtx_cost_data): Likewise.\n+\n 2008-06-06  Nathan Froyd  <froydnj@codesourcery.com>\n \n \t* config/rs6000/rs6000.c (rs6000_mode_dependent_address): Remove"}, {"sha": "820093083498464f3fdbcf25d282ca3ff32c82d9", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0ae31b09e53f18cf51bd9015b8300bef3353e43/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0ae31b09e53f18cf51bd9015b8300bef3353e43/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=d0ae31b09e53f18cf51bd9015b8300bef3353e43", "patch": "@@ -645,6 +645,7 @@ static const struct mips_cpu_info mips_cpu_info_table[] = {\n   { \"sb1\", PROCESSOR_SB1, 64, PTF_AVOID_BRANCHLIKELY },\n   { \"sb1a\", PROCESSOR_SB1A, 64, PTF_AVOID_BRANCHLIKELY },\n   { \"sr71000\", PROCESSOR_SR71000, 64, PTF_AVOID_BRANCHLIKELY },\n+  { \"xlr\", PROCESSOR_XLR, 64, 0 }\n };\n \n /* Default costs.  If these are used for a processor we should look\n@@ -1015,6 +1016,21 @@ static const struct mips_rtx_cost_data mips_rtx_cost_data[PROCESSOR_MAX] = {\n   { /* SR71000 */\n     DEFAULT_COSTS\n   },\n+  { /* XLR */\n+    /* Need to replace first five with the costs of calling the appropriate \n+       libgcc routine.  */\n+    COSTS_N_INSNS (256),          /* fp_add */\n+    COSTS_N_INSNS (256),          /* fp_mult_sf */\n+    COSTS_N_INSNS (256),          /* fp_mult_df */\n+    COSTS_N_INSNS (256),          /* fp_div_sf */\n+    COSTS_N_INSNS (256),          /* fp_div_df */\n+    COSTS_N_INSNS (8),            /* int_mult_si */\n+    COSTS_N_INSNS (8),            /* int_mult_di */\n+    COSTS_N_INSNS (72),           /* int_div_si */\n+    COSTS_N_INSNS (72),           /* int_div_di */\n+\t\t     1,           /* branch_cost */\n+\t\t     4            /* memory_latency */\n+  }\n };\n \f\n /* This hash table keeps track of implicit \"mips16\" and \"nomips16\" attributes"}, {"sha": "e2129a0fcd5f78ee49847f7a1bcd09e9f3ba4a71", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0ae31b09e53f18cf51bd9015b8300bef3353e43/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0ae31b09e53f18cf51bd9015b8300bef3353e43/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=d0ae31b09e53f18cf51bd9015b8300bef3353e43", "patch": "@@ -69,6 +69,7 @@ enum processor_type {\n   PROCESSOR_SB1,\n   PROCESSOR_SB1A,\n   PROCESSOR_SR71000,\n+  PROCESSOR_XLR,\n   PROCESSOR_MAX\n };\n "}, {"sha": "da7cb10f8b55c4e30dc560c0bdb3508df90c8afa", "filename": "gcc/config/mips/mips.md", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0ae31b09e53f18cf51bd9015b8300bef3353e43/gcc%2Fconfig%2Fmips%2Fmips.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0ae31b09e53f18cf51bd9015b8300bef3353e43/gcc%2Fconfig%2Fmips%2Fmips.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.md?ref=d0ae31b09e53f18cf51bd9015b8300bef3353e43", "patch": "@@ -415,7 +415,7 @@\n ;; Attribute describing the processor.  This attribute must match exactly\n ;; with the processor_type enumeration in mips.h.\n (define_attr \"cpu\"\n-  \"r3000,4kc,4kp,5kc,5kf,20kc,24kc,24kf2_1,24kf1_1,74kc,74kf2_1,74kf1_1,74kf3_2,loongson2e,loongson2f,m4k,r3900,r6000,r4000,r4100,r4111,r4120,r4130,r4300,r4600,r4650,r5000,r5400,r5500,r7000,r8000,r9000,sb1,sb1a,sr71000\"\n+  \"r3000,4kc,4kp,5kc,5kf,20kc,24kc,24kf2_1,24kf1_1,74kc,74kf2_1,74kf1_1,74kf3_2,loongson2e,loongson2f,m4k,r3900,r6000,r4000,r4100,r4111,r4120,r4130,r4300,r4600,r4650,r5000,r5400,r5500,r7000,r8000,r9000,sb1,sb1a,sr71000,xlr\"\n   (const (symbol_ref \"mips_tune\")))\n \n ;; The type of hardware hazard associated with this instruction.\n@@ -748,6 +748,7 @@\n (include \"9000.md\")\n (include \"sb1.md\")\n (include \"sr71k.md\")\n+(include \"xlr.md\")\n (include \"generic.md\")\n \f\n ;;"}, {"sha": "21550ba12d9f41b226725c9356bf4abd946611c1", "filename": "gcc/config/mips/xlr.md", "status": "added", "additions": 89, "deletions": 0, "changes": 89, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0ae31b09e53f18cf51bd9015b8300bef3353e43/gcc%2Fconfig%2Fmips%2Fxlr.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0ae31b09e53f18cf51bd9015b8300bef3353e43/gcc%2Fconfig%2Fmips%2Fxlr.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fxlr.md?ref=d0ae31b09e53f18cf51bd9015b8300bef3353e43", "patch": "@@ -0,0 +1,89 @@\n+;; DFA-based pipeline description for the XLR.\n+;;   Copyright (C) 2008 Free Software Foundation, Inc.\n+;;\n+;; xlr.md   Machine Description for the RMI XLR Microprocessor\n+;; This file is part of GCC.\n+\n+;; GCC is free software; you can redistribute it and/or modify it\n+;; under the terms of the GNU General Public License as published\n+;; by the Free Software Foundation; either version 3, or (at your\n+;; option) any later version.\n+\n+;; GCC is distributed in the hope that it will be useful, but WITHOUT\n+;; ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+;; or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+;; License for more details.\n+\n+;; You should have received a copy of the GNU General Public License\n+;; along with GCC; see the file COPYING3.  If not see\n+;; <http://www.gnu.org/licenses/>.\n+\n+(define_automaton \"xlr_main,xlr_muldiv\")\n+\n+;; Definitions for xlr_main automaton.\n+(define_cpu_unit \"xlr_main_pipe\" \"xlr_main\")\n+\n+(define_insn_reservation \"ir_xlr_alu_slt\" 2\n+  (and (eq_attr \"cpu\" \"xlr\") \n+       (eq_attr \"type\" \"slt\"))\n+  \"xlr_main_pipe\")\n+\n+;; Integer arithmetic instructions.\n+(define_insn_reservation \"ir_xlr_alu\" 1\n+  (and (eq_attr \"cpu\" \"xlr\") \n+       (eq_attr \"type\" \"arith,shift,clz,const,unknown,multi,nop,trap\"))\n+  \"xlr_main_pipe\")\n+\n+;; Integer arithmetic instructions.\n+(define_insn_reservation \"ir_xlr_condmove\" 2\n+  (and (eq_attr \"cpu\" \"xlr\") \n+       (eq_attr \"type\" \"condmove\"))\n+  \"xlr_main_pipe\")\n+\n+;; Load/store instructions.\n+(define_insn_reservation \"ir_xlr_load\" 4\n+  (and (eq_attr \"cpu\" \"xlr\") \n+       (eq_attr \"type\" \"load\"))\n+  \"xlr_main_pipe\")\n+\n+(define_insn_reservation \"ir_xlr_store\" 1\n+  (and  (eq_attr \"cpu\" \"xlr\") \n+        (eq_attr \"type\" \"store\"))\n+  \"xlr_main_pipe\")\n+\n+(define_insn_reservation \"ir_xlr_prefetch_x\" 1\n+  (and (eq_attr \"cpu\" \"xlr\")\n+       (eq_attr \"type\" \"prefetch,prefetchx\"))\n+  \"xlr_main_pipe\")\n+\n+;; Branch instructions - use branch misprediction latency.\n+(define_insn_reservation \"ir_xlr_branch\" 1\n+  (and (eq_attr \"cpu\" \"xlr\") \n+       (eq_attr \"type\" \"branch,jump,call\"))\n+  \"xlr_main_pipe\")\n+\n+;; Coprocessor move instructions.\n+(define_insn_reservation \"ir_xlr_xfer\" 2\n+  (and (eq_attr \"cpu\" \"xlr\") \n+       (eq_attr \"type\" \"mtc,mfc\"))\n+  \"xlr_main_pipe\")\n+\n+(define_bypass 5 \"ir_xlr_xfer\" \"ir_xlr_xfer\")\n+\n+;; Definitions for the xlr_muldiv automaton.\n+(define_cpu_unit \"xlr_imuldiv_nopipe\" \"xlr_muldiv\")\n+\n+(define_insn_reservation \"ir_xlr_imul\" 8\n+  (and (eq_attr \"cpu\" \"xlr\") \n+       (eq_attr \"type\" \"imul,imul3,imadd\"))\n+  \"xlr_main_pipe,xlr_imuldiv_nopipe*6\")\n+\n+(define_insn_reservation \"ir_xlr_div\" 68\n+  (and (eq_attr \"cpu\" \"xlr\") \n+       (eq_attr \"type\" \"idiv\"))\n+  \"xlr_main_pipe,xlr_imuldiv_nopipe*67\")\n+\n+(define_insn_reservation \"xlr_hilo\" 2\n+  (and (eq_attr \"cpu\" \"xlr\") \n+       (eq_attr \"type\" \"mfhilo,mthilo\"))\n+  \"xlr_imuldiv_nopipe\")"}, {"sha": "6b41efed8de351cf4e0d9c5ff5aeb8eb5b05fe07", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0ae31b09e53f18cf51bd9015b8300bef3353e43/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0ae31b09e53f18cf51bd9015b8300bef3353e43/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=d0ae31b09e53f18cf51bd9015b8300bef3353e43", "patch": "@@ -11987,7 +11987,8 @@ The processor names are:\n @samp{sb1},\n @samp{sr71000},\n @samp{vr4100}, @samp{vr4111}, @samp{vr4120}, @samp{vr4130}, @samp{vr4300},\n-@samp{vr5000}, @samp{vr5400} and @samp{vr5500}.\n+@samp{vr5000}, @samp{vr5400}, @samp{vr5500}\n+and @samp{xlr}.\n The special value @samp{from-abi} selects the\n most compatible architecture for the selected ABI (that is,\n @samp{mips1} for 32-bit ABIs and @samp{mips3} for 64-bit ABIs)@."}]}