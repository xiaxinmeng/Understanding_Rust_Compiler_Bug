{"sha": "65fedc2c74fc2a77798553ea0dffc070c36a8773", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjVmZWRjMmM3NGZjMmE3Nzc5ODU1M2VhMGRmZmMwNzBjMzZhODc3Mw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2007-08-25T07:28:43Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2007-08-25T07:28:43Z"}, "message": "expr.c (store_expr): Fix order of store_by_pieces arguments.\n\n\t* expr.c (store_expr): Fix order of store_by_pieces arguments.\n\n\t* gcc.dg/array-init-2.c: New test.\n\nFrom-SVN: r127795", "tree": {"sha": "558ea6cac9d8c5ca34adea3a972cdc6a9ca494cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/558ea6cac9d8c5ca34adea3a972cdc6a9ca494cd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/65fedc2c74fc2a77798553ea0dffc070c36a8773", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65fedc2c74fc2a77798553ea0dffc070c36a8773", "html_url": "https://github.com/Rust-GCC/gccrs/commit/65fedc2c74fc2a77798553ea0dffc070c36a8773", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65fedc2c74fc2a77798553ea0dffc070c36a8773/comments", "author": null, "committer": null, "parents": [{"sha": "272a4b3686f415fb0407678b7dd07102a3455f14", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/272a4b3686f415fb0407678b7dd07102a3455f14", "html_url": "https://github.com/Rust-GCC/gccrs/commit/272a4b3686f415fb0407678b7dd07102a3455f14"}], "stats": {"total": 66, "additions": 62, "deletions": 4}, "files": [{"sha": "fefb4b6052de0c4531f2cb32cedac61d2c6a32c4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65fedc2c74fc2a77798553ea0dffc070c36a8773/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65fedc2c74fc2a77798553ea0dffc070c36a8773/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=65fedc2c74fc2a77798553ea0dffc070c36a8773", "patch": "@@ -1,3 +1,7 @@\n+2007-08-25  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* expr.c (store_expr): Fix order of store_by_pieces arguments.\n+\n 2007-08-24  Sandra Loosemore  <sandra@codesourcery.com>\n             Nigel Stephens <nigel@mips.com>\n \n@@ -8,7 +12,7 @@\n \t* expr.c (SET_BY_PIECES_P): Define.\n \t(can_store_by_pieces, store_by_pieces): Add MEMSETP argument; use\n \tit to decide whether to use SET_BY_PIECES_P or STORE_BY_PIECES_P.\n-\t(store_expr):  Pass MEMSETP argument to can_store_by_pieces and\n+\t(store_expr): Pass MEMSETP argument to can_store_by_pieces and\n \tstore_by_pieces.\n \t* expr.h (SET_RATIO): Define.\n \t(can_store_by_pieces, store_by_pieces):\tUpdate prototypes."}, {"sha": "21128958e73822c6e8430b897a940692006aaab0", "filename": "gcc/expr.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65fedc2c74fc2a77798553ea0dffc070c36a8773/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65fedc2c74fc2a77798553ea0dffc070c36a8773/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=65fedc2c74fc2a77798553ea0dffc070c36a8773", "patch": "@@ -4519,9 +4519,8 @@ store_expr (tree exp, rtx target, int call_param_p, bool nontemporal)\n       dest_mem = store_by_pieces (dest_mem,\n \t\t\t\t  str_copy_len, builtin_strncpy_read_str,\n \t\t\t\t  (void *) TREE_STRING_POINTER (exp),\n-\t\t\t\t  MEM_ALIGN (target),\n-\t\t\t\t  exp_len > str_copy_len ? 1 : 0,\n-\t\t\t\t  false);\n+\t\t\t\t  MEM_ALIGN (target), false,\n+\t\t\t\t  exp_len > str_copy_len ? 1 : 0);\n       if (exp_len > str_copy_len)\n \tclear_storage (dest_mem, GEN_INT (exp_len - str_copy_len),\n \t\t       BLOCK_OP_NORMAL);"}, {"sha": "7547f4b4892e6641562158e9b54c59190514f2eb", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65fedc2c74fc2a77798553ea0dffc070c36a8773/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65fedc2c74fc2a77798553ea0dffc070c36a8773/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=65fedc2c74fc2a77798553ea0dffc070c36a8773", "patch": "@@ -1,3 +1,7 @@\n+2007-08-25  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* gcc.dg/array-init-2.c: New test.\n+\n 2007-08-24  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/33178"}, {"sha": "9c425818fe540a0aabc1062b799dac22dff36182", "filename": "gcc/testsuite/gcc.dg/array-init-2.c", "status": "added", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65fedc2c74fc2a77798553ea0dffc070c36a8773/gcc%2Ftestsuite%2Fgcc.dg%2Farray-init-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65fedc2c74fc2a77798553ea0dffc070c36a8773/gcc%2Ftestsuite%2Fgcc.dg%2Farray-init-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Farray-init-2.c?ref=65fedc2c74fc2a77798553ea0dffc070c36a8773", "patch": "@@ -0,0 +1,51 @@\n+/* Test array initializion by store_by_pieces.  */\n+/* { dg-do run } */\n+/* { dg-options \"-O2\" } */\n+\n+struct A { char c[10]; };\n+extern void abort (void);\n+\n+void\n+__attribute__((noinline))\n+check (struct A * a, int b)\n+{\n+  const char *p;\n+  switch (b)\n+    {\n+    case 0:\n+      p = \"abcdefghi\";\n+      break;\n+    case 1:\n+      p = \"j\\0\\0\\0\\0\\0\\0\\0\\0\";\n+      break;\n+    case 2:\n+      p = \"kl\\0\\0\\0\\0\\0\\0\\0\";\n+      break;\n+    case 3:\n+      p = \"mnop\\0\\0\\0\\0\\0\";\n+      break;\n+    case 4:\n+      p = \"qrstuvwx\\0\";\n+      break;\n+    default:\n+      abort ();\n+    }\n+  if (__builtin_memcmp (a->c, p, 10) != 0)\n+    abort ();\n+}\n+\n+int\n+main (void)\n+{\n+  struct A a = { \"abcdefghi\" };\n+  check (&a, 0);\n+  struct A b = { \"j\" };\n+  check (&b, 1);\n+  struct A c = { \"kl\" };\n+  check (&c, 2);\n+  struct A d = { \"mnop\" };\n+  check (&d, 3);\n+  struct A e = { \"qrstuvwx\" };\n+  check (&e, 4);\n+  return 0;\n+}"}]}