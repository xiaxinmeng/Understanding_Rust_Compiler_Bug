{"sha": "4d49d44d6619d257f7635ef4c449d0b036add018", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGQ0OWQ0NGQ2NjE5ZDI1N2Y3NjM1ZWY0YzQ0OWQwYjAzNmFkZDAxOA==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@codesourcery.com", "date": "2006-05-21T15:13:36Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2006-05-21T15:13:36Z"}, "message": "re PR rtl-optimization/27671 (optimization error on pentium4-Linux with %, regression from gcc-4.1.0)\n\ngcc/\n\tPR rtl-optimization/27671\n\t* simplify-rtx.c (simplify_relational_operation_1): Fix\n\tsimplifications of (eq/ne (xor x y) y) and\n\t(eq/ne (xor x y) x).\n\ngcc/testsuite/\n\tPR rtl-optimization/27671\n\t* gcc.c-torture/execute/pr27671-1.c: New.\n\t* gcc.dg/pr27671-2.c: Likewise.\n\nFrom-SVN: r113955", "tree": {"sha": "34fe4de54e40acf8897300094b90a362f9af7693", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/34fe4de54e40acf8897300094b90a362f9af7693"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4d49d44d6619d257f7635ef4c449d0b036add018", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d49d44d6619d257f7635ef4c449d0b036add018", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d49d44d6619d257f7635ef4c449d0b036add018", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d49d44d6619d257f7635ef4c449d0b036add018/comments", "author": null, "committer": null, "parents": [{"sha": "6531d1be909aabc40e765eccd6327512528a94bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6531d1be909aabc40e765eccd6327512528a94bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6531d1be909aabc40e765eccd6327512528a94bc"}], "stats": {"total": 73, "additions": 67, "deletions": 6}, "files": [{"sha": "94ba6516bb02a59ec72aa4a8d1fe2aa8147f9c26", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d49d44d6619d257f7635ef4c449d0b036add018/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d49d44d6619d257f7635ef4c449d0b036add018/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4d49d44d6619d257f7635ef4c449d0b036add018", "patch": "@@ -1,3 +1,10 @@\n+2006-05-21  Kazu Hirata  <kazu@codesourcery.com>\n+\n+\tPR rtl-optimization/27671\n+\t* simplify-rtx.c (simplify_relational_operation_1): Fix\n+\tsimplifications of (eq/ne (xor x y) y) and\n+\t(eq/ne (xor x y) x).\n+\n 2006-05-21  Bernhard Fischer  <aldot@gcc.gnu.org>\n \n \t* tree-cfg.c: Prune whitespace."}, {"sha": "6ab5cb753c697790ef8b017188e7299811992dbf", "filename": "gcc/simplify-rtx.c", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d49d44d6619d257f7635ef4c449d0b036add018/gcc%2Fsimplify-rtx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d49d44d6619d257f7635ef4c449d0b036add018/gcc%2Fsimplify-rtx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsimplify-rtx.c?ref=4d49d44d6619d257f7635ef4c449d0b036add018", "patch": "@@ -3604,18 +3604,21 @@ simplify_relational_operation_1 (enum rtx_code code, enum machine_mode mode,\n     return simplify_gen_relational (code, mode, cmp_mode,\n \t\t\t\t    XEXP (op0, 0), XEXP (op0, 1));\n \n-  /* (eq/ne (xor x y) x) simplifies to (eq/ne x 0).  */\n+  /* (eq/ne (xor x y) x) simplifies to (eq/ne y 0).  */\n   if ((code == EQ || code == NE)\n       && op0code == XOR\n       && rtx_equal_p (XEXP (op0, 0), op1)\n-      && !side_effects_p (XEXP (op0, 1)))\n-    return simplify_gen_relational (code, mode, cmp_mode, op1, const0_rtx);\n-  /* Likewise (eq/ne (xor x y) y) simplifies to (eq/ne y 0).  */\n+      && !side_effects_p (XEXP (op0, 0)))\n+    return simplify_gen_relational (code, mode, cmp_mode,\n+\t\t\t\t    XEXP (op0, 1), const0_rtx);\n+\n+  /* Likewise (eq/ne (xor x y) y) simplifies to (eq/ne x 0).  */\n   if ((code == EQ || code == NE)\n       && op0code == XOR\n       && rtx_equal_p (XEXP (op0, 1), op1)\n-      && !side_effects_p (XEXP (op0, 0)))\n-    return simplify_gen_relational (code, mode, cmp_mode, op1, const0_rtx);\n+      && !side_effects_p (XEXP (op0, 1)))\n+    return simplify_gen_relational (code, mode, cmp_mode,\n+\t\t\t\t    XEXP (op0, 0), const0_rtx);\n \n   /* (eq/ne (xor x C1) C2) simplifies to (eq/ne x (C1^C2)).  */\n   if ((code == EQ || code == NE)"}, {"sha": "11e358a67a18d40d835b74df6f0d789ba901aae9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d49d44d6619d257f7635ef4c449d0b036add018/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d49d44d6619d257f7635ef4c449d0b036add018/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4d49d44d6619d257f7635ef4c449d0b036add018", "patch": "@@ -1,3 +1,9 @@\n+2006-05-21  Kazu Hirata  <kazu@codesourcery.com>\n+\n+\tPR rtl-optimization/27671\n+\t* gcc.c-torture/execute/pr27671-1.c: New.\n+\t* gcc.dg/pr27671-2.c: Likewise.\n+\n 2006-05-21  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/27613"}, {"sha": "dd2982cc843da958f03b37694897a0ea4b6d3f34", "filename": "gcc/testsuite/gcc.c-torture/execute/pr27671-1.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d49d44d6619d257f7635ef4c449d0b036add018/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr27671-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d49d44d6619d257f7635ef4c449d0b036add018/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr27671-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr27671-1.c?ref=4d49d44d6619d257f7635ef4c449d0b036add018", "patch": "@@ -0,0 +1,21 @@\n+/* PR rtl-optimization/27671.\n+   The combiner used to simplify \"a ^ b == a\" to \"a\" via\n+   simplify_relational_operation_1 in simplify-rtx.c.  */\n+\n+extern void abort (void) __attribute__ ((noreturn));\n+extern void exit (int) __attribute__ ((noreturn));\n+\n+static int __attribute__((noinline))\n+foo (int a, int b)\n+{\n+  int c = a ^ b;\n+  if (c == a)\n+    abort ();\n+}\n+\n+int\n+main (void)\n+{\n+  foo (0, 1);\n+  exit (0);\n+}"}, {"sha": "78820427b7b6d56392e7d42331febc4cf0ec95d2", "filename": "gcc/testsuite/gcc.dg/pr27671-2.c", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d49d44d6619d257f7635ef4c449d0b036add018/gcc%2Ftestsuite%2Fgcc.dg%2Fpr27671-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d49d44d6619d257f7635ef4c449d0b036add018/gcc%2Ftestsuite%2Fgcc.dg%2Fpr27671-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr27671-2.c?ref=4d49d44d6619d257f7635ef4c449d0b036add018", "patch": "@@ -0,0 +1,24 @@\n+/* PR rtl-optimization/27671.\n+   The combiner used to simplify \"a ^ b == a\" to \"a\" via\n+   simplify_relational_operation_1 in simplify-rtx.c.  */\n+/* { dg-do run } */\n+/* { dg-options \"-O1\" } */\n+/* { dg-options \"-O1 -march=pentium4\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } } */\n+\n+extern void abort (void) __attribute__ ((noreturn));\n+extern void exit (int) __attribute__ ((noreturn));\n+\n+static void __attribute__ ((noinline))\n+bar (int k)\n+{\n+  int n = k % 2;\n+  if (n == 0)\n+    abort ();\n+}\n+\n+int\n+main (void)\n+{  \n+  bar (1);\n+  exit (0);\n+}"}]}