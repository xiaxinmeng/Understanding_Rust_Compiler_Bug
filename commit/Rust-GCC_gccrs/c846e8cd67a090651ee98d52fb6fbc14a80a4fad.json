{"sha": "c846e8cd67a090651ee98d52fb6fbc14a80a4fad", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yzg0NmU4Y2Q2N2EwOTA2NTFlZTk4ZDUyZmI2ZmJjMTRhODBhNGZhZA==", "commit": {"author": {"name": "Andrew Pinski", "email": "pinskia@physics.uc.edu", "date": "2006-08-23T02:56:43Z"}, "committer": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2006-08-23T02:56:43Z"}, "message": "re PR c++/28450 (ICE with new and complex/vector types)\n\n2006-08-21  Andrew Pinski  <pinskia@physics.uc.edu>\n\n        PR C++/28450\n        * cp/init.c (build_zero_init): Handle VECTOR_TYPE and\n        COMPLEX_TYPEs.\n\n\n2006-08-21  Andrew Pinski  <pinskia@physics.uc.edu>\n\n        PR C++/28450\n        * g++.dg/ext/vector4.C: New test.\n        * g++.dg/ext/complex1.C: New test.\n\nFrom-SVN: r116341", "tree": {"sha": "104ca237a73f6dec8df341cec422f6c96656b042", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/104ca237a73f6dec8df341cec422f6c96656b042"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c846e8cd67a090651ee98d52fb6fbc14a80a4fad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c846e8cd67a090651ee98d52fb6fbc14a80a4fad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c846e8cd67a090651ee98d52fb6fbc14a80a4fad", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c846e8cd67a090651ee98d52fb6fbc14a80a4fad/comments", "author": null, "committer": null, "parents": [{"sha": "bee7c39239d1c02933c01fb65183cd5de12b0e1e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bee7c39239d1c02933c01fb65183cd5de12b0e1e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bee7c39239d1c02933c01fb65183cd5de12b0e1e"}], "stats": {"total": 29, "additions": 28, "deletions": 1}, "files": [{"sha": "f50554cab565becfd4a3bfd33ff0aca2ccd106d7", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c846e8cd67a090651ee98d52fb6fbc14a80a4fad/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c846e8cd67a090651ee98d52fb6fbc14a80a4fad/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=c846e8cd67a090651ee98d52fb6fbc14a80a4fad", "patch": "@@ -1,3 +1,9 @@\n+2006-08-22  Andrew Pinski  <pinskia@physics.uc.edu>\n+\n+\tPR C++/28450\n+\t* cp/init.c (build_zero_init): Handle VECTOR_TYPE and\n+\tCOMPLEX_TYPEs.\n+\n 2006-08-22  Simon Martin  <simartin@users.sourceforge.net>\n \n \tPR c++/28420"}, {"sha": "a88d0c067038a92065f9b44fa8a84a11f25efc97", "filename": "gcc/cp/init.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c846e8cd67a090651ee98d52fb6fbc14a80a4fad/gcc%2Fcp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c846e8cd67a090651ee98d52fb6fbc14a80a4fad/gcc%2Fcp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finit.c?ref=c846e8cd67a090651ee98d52fb6fbc14a80a4fad", "patch": "@@ -178,7 +178,8 @@ build_zero_init (tree type, tree nelts, bool static_storage_p)\n        items with static storage duration that are not otherwise\n        initialized are initialized to zero.  */\n     ;\n-  else if (SCALAR_TYPE_P (type))\n+  else if (SCALAR_TYPE_P (type)\n+\t   || TREE_CODE (type) == COMPLEX_TYPE)\n     init = convert (type, integer_zero_node);\n   else if (CLASS_TYPE_P (type))\n     {\n@@ -248,6 +249,8 @@ build_zero_init (tree type, tree nelts, bool static_storage_p)\n       /* Build a constructor to contain the initializations.  */\n       init = build_constructor (type, v);\n     }\n+  else if (TREE_CODE (type) == VECTOR_TYPE)\n+    init = fold_convert (type, integer_zero_node);\n   else\n     gcc_assert (TREE_CODE (type) == REFERENCE_TYPE);\n "}, {"sha": "0e58baab765cd573720edcb5d7ad862051c58e09", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c846e8cd67a090651ee98d52fb6fbc14a80a4fad/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c846e8cd67a090651ee98d52fb6fbc14a80a4fad/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c846e8cd67a090651ee98d52fb6fbc14a80a4fad", "patch": "@@ -1,3 +1,9 @@\n+2006-08-22  Andrew Pinski  <pinskia@physics.uc.edu>\n+\n+        PR C++/28450\n+\t* g++.dg/ext/vector4.C: New test.\n+\t* g++.dg/ext/complex1.C: New test.\n+\n 2006-08-21  Geoffrey Keating  <geoffk@apple.com>\n \n \tPR debug/28692"}, {"sha": "ac67711068e60936474b3dbf692e67a7f3c26fd8", "filename": "gcc/testsuite/g++.dg/ext/complex1.C", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c846e8cd67a090651ee98d52fb6fbc14a80a4fad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fcomplex1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c846e8cd67a090651ee98d52fb6fbc14a80a4fad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fcomplex1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fcomplex1.C?ref=c846e8cd67a090651ee98d52fb6fbc14a80a4fad", "patch": "@@ -0,0 +1,6 @@\n+/* { dg-options \"\" } */\n+/* { dg-do compile } */\n+//  Testing if we can do a new of a complex type\n+// PR C++/28450\n+\n+void* q = new __complex__ int ();"}, {"sha": "e14578489e6c0acc20ebc60b0b12ba83f100381b", "filename": "gcc/testsuite/g++.dg/ext/vector4.C", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c846e8cd67a090651ee98d52fb6fbc14a80a4fad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fvector4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c846e8cd67a090651ee98d52fb6fbc14a80a4fad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fvector4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fvector4.C?ref=c846e8cd67a090651ee98d52fb6fbc14a80a4fad", "patch": "@@ -0,0 +1,6 @@\n+/* { dg-options \"\" } */\n+/* { dg-do compile } */\n+//  Testing if we can do a new of a vector\n+// PR C++/28450\n+\n+void* q = new int __attribute__((vector_size(8))) ();"}]}