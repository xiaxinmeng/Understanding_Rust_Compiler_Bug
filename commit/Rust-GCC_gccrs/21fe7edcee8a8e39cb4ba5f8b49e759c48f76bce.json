{"sha": "21fe7edcee8a8e39cb4ba5f8b49e759c48f76bce", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjFmZTdlZGNlZThhOGUzOWNiNGJhNWY4YjQ5ZTc1OWM0OGY3NmJjZQ==", "commit": {"author": {"name": "Rafael Avila de Espindola", "email": "espindola@google.com", "date": "2008-08-19T14:11:18Z"}, "committer": {"name": "Rafael Espindola", "email": "espindola@gcc.gnu.org", "date": "2008-08-19T14:11:18Z"}, "message": "varasm.c (weak_decls): Move earlier in the file.\n\n2008-08-19  Rafael Espindola  <espindola@google.com>\n\n      * varasm.c (weak_decls): Move earlier in the file.\n      (assemble_external): Add weak decls to the weak_decls list.\n      (declare_weak): Don't add decls to the weak_decls list.\n\nFrom-SVN: r139233", "tree": {"sha": "8597de88ec65628070ba508f4bd324cbe3d772d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8597de88ec65628070ba508f4bd324cbe3d772d3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/21fe7edcee8a8e39cb4ba5f8b49e759c48f76bce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21fe7edcee8a8e39cb4ba5f8b49e759c48f76bce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/21fe7edcee8a8e39cb4ba5f8b49e759c48f76bce", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21fe7edcee8a8e39cb4ba5f8b49e759c48f76bce/comments", "author": null, "committer": null, "parents": [{"sha": "b8aaf5063d697ee0346ffb820e41d9d842c91b05", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8aaf5063d697ee0346ffb820e41d9d842c91b05", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b8aaf5063d697ee0346ffb820e41d9d842c91b05"}], "stats": {"total": 24, "additions": 14, "deletions": 10}, "files": [{"sha": "a325889eeabbe1d6cef4b22b5439a9a6ff75a506", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21fe7edcee8a8e39cb4ba5f8b49e759c48f76bce/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21fe7edcee8a8e39cb4ba5f8b49e759c48f76bce/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=21fe7edcee8a8e39cb4ba5f8b49e759c48f76bce", "patch": "@@ -1,3 +1,9 @@\n+2008-08-19  Rafael Espindola  <espindola@google.com>\n+\n+      * varasm.c (weak_decls): Move earlier in the file.\n+      (assemble_external): Add weak decls to the weak_decls list.\n+      (declare_weak): Don't add decls to the weak_decls list.\n+\n 2008-08-19  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR target/37157"}, {"sha": "863ffd010f148b98163d7b8199eec9b3e460b982", "filename": "gcc/varasm.c", "status": "modified", "additions": 8, "deletions": 10, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21fe7edcee8a8e39cb4ba5f8b49e759c48f76bce/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21fe7edcee8a8e39cb4ba5f8b49e759c48f76bce/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=21fe7edcee8a8e39cb4ba5f8b49e759c48f76bce", "patch": "@@ -2286,6 +2286,10 @@ process_pending_assemble_externals (void)\n #endif\n }\n \n+/* This TREE_LIST contains any weak symbol declarations waiting\n+   to be emitted.  */\n+static GTY(()) tree weak_decls;\n+\n /* Output something to declare an external symbol to the assembler.\n    (Most assemblers don't need this, so we normally output nothing.)\n    Do nothing if DECL is not external.  */\n@@ -2303,6 +2307,9 @@ assemble_external (tree decl ATTRIBUTE_UNUSED)\n   if (!DECL_P (decl) || !DECL_EXTERNAL (decl) || !TREE_PUBLIC (decl))\n     return;\n \n+  if (SUPPORTS_WEAK && DECL_WEAK (decl))\n+    weak_decls = tree_cons (NULL, decl, weak_decls);\n+\n   /* We want to output external symbols at very last to check if they\n      are references or not.  */\n   pending_assemble_externals = tree_cons (0, decl,\n@@ -4846,10 +4853,6 @@ output_constructor (tree exp, unsigned HOST_WIDE_INT size,\n     assemble_zeros (size - total_bytes);\n }\n \n-/* This TREE_LIST contains any weak symbol declarations waiting\n-   to be emitted.  */\n-static GTY(()) tree weak_decls;\n-\n /* Mark DECL as weak.  */\n \n static void\n@@ -4942,12 +4945,7 @@ declare_weak (tree decl)\n     error (\"weak declaration of %q+D must be public\", decl);\n   else if (TREE_CODE (decl) == FUNCTION_DECL && TREE_ASM_WRITTEN (decl))\n     error (\"weak declaration of %q+D must precede definition\", decl);\n-  else if (SUPPORTS_WEAK)\n-    {\n-      if (! DECL_WEAK (decl))\n-\tweak_decls = tree_cons (NULL, decl, weak_decls);\n-    }\n-  else\n+  else if (!SUPPORTS_WEAK)\n     warning (0, \"weak declaration of %q+D not supported\", decl);\n \n   mark_weak (decl);"}]}