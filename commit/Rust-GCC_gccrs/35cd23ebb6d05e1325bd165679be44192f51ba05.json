{"sha": "35cd23ebb6d05e1325bd165679be44192f51ba05", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzVjZDIzZWJiNmQwNWUxMzI1YmQxNjU2NzliZTQ0MTkyZjUxYmEwNQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@ucw.cz", "date": "2017-11-17T17:41:10Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2017-11-17T17:41:10Z"}, "message": "ipa-cp.c (update_profiling_info): Handle conversion to local profile.\n\n\n\t* ipa-cp.c (update_profiling_info): Handle conversion to local\n\tprofile.\n\t* tree-cfg.c (execute_fixup_cfg): Do fixup same way as inliner does.\n\nFrom-SVN: r254885", "tree": {"sha": "32b8e14f5ff1f5c5cd92e3e8003cc598ed02cc51", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/32b8e14f5ff1f5c5cd92e3e8003cc598ed02cc51"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/35cd23ebb6d05e1325bd165679be44192f51ba05", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35cd23ebb6d05e1325bd165679be44192f51ba05", "html_url": "https://github.com/Rust-GCC/gccrs/commit/35cd23ebb6d05e1325bd165679be44192f51ba05", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35cd23ebb6d05e1325bd165679be44192f51ba05/comments", "author": null, "committer": null, "parents": [{"sha": "6566b0fb86addb5c28d3ff8b2631f7f9516d4054", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6566b0fb86addb5c28d3ff8b2631f7f9516d4054", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6566b0fb86addb5c28d3ff8b2631f7f9516d4054"}], "stats": {"total": 43, "additions": 23, "deletions": 20}, "files": [{"sha": "da0066e00547579614d5b3c263c05c3abccd8e0f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35cd23ebb6d05e1325bd165679be44192f51ba05/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35cd23ebb6d05e1325bd165679be44192f51ba05/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=35cd23ebb6d05e1325bd165679be44192f51ba05", "patch": "@@ -1,3 +1,9 @@\n+2017-11-17  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* ipa-cp.c (update_profiling_info): Handle conversion to local\n+\tprofile.\n+\t* tree-cfg.c (execute_fixup_cfg): Do fixup same way as inliner does.\n+\n 2017-11-17  Jeff Law  <law@redhat.com>\n \n \t* gimple-ssa-evrp.c (class evrp_range_analyzer): New class extracted"}, {"sha": "4421abf0b334571baadab32f1f6597031cf31a06", "filename": "gcc/ipa-cp.c", "status": "modified", "additions": 13, "deletions": 7, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35cd23ebb6d05e1325bd165679be44192f51ba05/gcc%2Fipa-cp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35cd23ebb6d05e1325bd165679be44192f51ba05/gcc%2Fipa-cp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-cp.c?ref=35cd23ebb6d05e1325bd165679be44192f51ba05", "patch": "@@ -3695,16 +3695,22 @@ update_profiling_info (struct cgraph_node *orig_node,\n \t}\n     }\n \n-  new_node->count = new_sum;\n-  remainder = orig_node_count - new_sum;\n+  if (!new_sum.nonzero_p ())\n+    {\n+      new_sum = new_sum.global0 ();\n+      new_node->count = new_sum;\n+      remainder = orig_node->count;\n+    }\n+  else\n+    {\n+      remainder = orig_node_count - new_sum;\n+      if (!remainder.nonzero_p ())\n+\tremainder = orig_node_count.global0 ();\n+    }\n   orig_node->count = remainder;\n \n   for (cs = new_node->callees; cs; cs = cs->next_callee)\n-    /* FIXME: why we care about non-zero frequency here?  */\n-    if (cs->frequency ())\n-      cs->count = cs->count.apply_scale (new_sum, orig_node_count);\n-    else\n-      cs->count = profile_count::zero ();\n+    cs->count = cs->count.apply_scale (new_sum, orig_node_count);\n \n   for (cs = orig_node->callees; cs; cs = cs->next_callee)\n     cs->count = cs->count.apply_scale (remainder, orig_node_count);"}, {"sha": "491ac059c59112d36ec0e37a2224cfc278d55a39", "filename": "gcc/tree-cfg.c", "status": "modified", "additions": 4, "deletions": 13, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35cd23ebb6d05e1325bd165679be44192f51ba05/gcc%2Ftree-cfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35cd23ebb6d05e1325bd165679be44192f51ba05/gcc%2Ftree-cfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.c?ref=35cd23ebb6d05e1325bd165679be44192f51ba05", "patch": "@@ -9227,14 +9227,13 @@ execute_fixup_cfg (void)\n   gimple_stmt_iterator gsi;\n   int todo = 0;\n   cgraph_node *node = cgraph_node::get (current_function_decl);\n-  profile_count num = node->count.ipa ();\n+  profile_count num = node->count;\n   profile_count den = ENTRY_BLOCK_PTR_FOR_FN (cfun)->count;\n-  bool scale = num.initialized_p () && den.ipa_p ()\n-\t       && (den.nonzero_p () || num == profile_count::zero ())\n-\t       && !(num == den.ipa ());\n+  bool scale = num.initialized_p () && !(num == den);\n \n   if (scale)\n     {\n+      profile_count::adjust_for_ipa_scaling (&num, &den);\n       ENTRY_BLOCK_PTR_FOR_FN (cfun)->count = node->count;\n       EXIT_BLOCK_PTR_FOR_FN (cfun)->count\n         = EXIT_BLOCK_PTR_FOR_FN (cfun)->count.apply_scale (num, den);\n@@ -9243,15 +9242,7 @@ execute_fixup_cfg (void)\n   FOR_EACH_BB_FN (bb, cfun)\n     {\n       if (scale)\n-\t{\n-\t  if (num == profile_count::zero ())\n-\t    {\n-\t      if (!(bb->count == profile_count::zero ()))\n-\t        bb->count = bb->count.global0 ();\n-\t    }\n-\t  else\n-            bb->count = bb->count.apply_scale (num, den);\n-\t}\n+        bb->count = bb->count.apply_scale (num, den);\n       for (gsi = gsi_start_bb (bb); !gsi_end_p (gsi);)\n \t{\n \t  gimple *stmt = gsi_stmt (gsi);"}]}