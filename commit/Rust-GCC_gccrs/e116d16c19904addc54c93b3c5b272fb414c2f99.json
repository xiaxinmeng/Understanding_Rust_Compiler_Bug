{"sha": "e116d16c19904addc54c93b3c5b272fb414c2f99", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTExNmQxNmMxOTkwNGFkZGM1NGM5M2IzYzViMjcyZmI0MTRjMmY5OQ==", "commit": {"author": {"name": "Thomas Quinot", "email": "quinot@adacore.com", "date": "2007-12-13T10:29:38Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2007-12-13T10:29:38Z"}, "message": "sem_ch10.adb (Check_Private_Child_Unit): A non-private library level subprogram body that acts as its own spec may not...\n\n2007-12-06  Thomas Quinot  <quinot@adacore.com>\n\t    Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch10.adb (Check_Private_Child_Unit): A non-private library level\n\tsubprogram body that acts as its own spec may not have a non-private\n\tWITH clause on a private sibling.\n\t(Build_Unit_Name): If the parent unit in the name in a with_clause on a\n\tchild unit is a renaming, create an implicit with_clause on that\n\tparent, and not on the unit it renames, to prevent visibility errors\n\tin the current unit.\n\nFrom-SVN: r130850", "tree": {"sha": "1ced1ee74452fbb0a5d7f3dd28fda1ea8db636e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1ced1ee74452fbb0a5d7f3dd28fda1ea8db636e8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e116d16c19904addc54c93b3c5b272fb414c2f99", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e116d16c19904addc54c93b3c5b272fb414c2f99", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e116d16c19904addc54c93b3c5b272fb414c2f99", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e116d16c19904addc54c93b3c5b272fb414c2f99/comments", "author": null, "committer": null, "parents": [{"sha": "b26b5a8f52b45dcbe796cb472997b844b5b22c5d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b26b5a8f52b45dcbe796cb472997b844b5b22c5d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b26b5a8f52b45dcbe796cb472997b844b5b22c5d"}], "stats": {"total": 142, "additions": 79, "deletions": 63}, "files": [{"sha": "cc8fcb390632583be51aa576eb4853941153e7dc", "filename": "gcc/ada/sem_ch10.adb", "status": "modified", "additions": 79, "deletions": 63, "changes": 142, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e116d16c19904addc54c93b3c5b272fb414c2f99/gcc%2Fada%2Fsem_ch10.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e116d16c19904addc54c93b3c5b272fb414c2f99/gcc%2Fada%2Fsem_ch10.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch10.adb?ref=e116d16c19904addc54c93b3c5b272fb414c2f99", "patch": "@@ -85,7 +85,7 @@ package body Sem_Ch10 is\n \n    procedure Check_Private_Child_Unit (N : Node_Id);\n    --  If a with_clause mentions a private child unit, the compilation\n-   --  unit must be a member of the same family, as described in 10.1.2 (8).\n+   --  unit must be a member of the same family, as described in 10.1.2.\n \n    procedure Check_Stub_Level (N : Node_Id);\n    --  Verify that a stub is declared immediately within a compilation unit,\n@@ -671,9 +671,8 @@ package body Sem_Ch10 is\n \n             --  Verify that the library unit is a package declaration\n \n-            if Nkind (Unit (Lib_Unit)) /= N_Package_Declaration\n-                 and then\n-               Nkind (Unit (Lib_Unit)) /= N_Generic_Package_Declaration\n+            if not Nkind_In (Unit (Lib_Unit), N_Package_Declaration,\n+                                              N_Generic_Package_Declaration)\n             then\n                Error_Msg_N\n                  (\"no legal package declaration for package body\", N);\n@@ -687,8 +686,8 @@ package body Sem_Ch10 is\n                Set_Is_Immediately_Visible (Spec_Id, True);\n                Version_Update (N, Lib_Unit);\n \n-               if Nkind (Defining_Unit_Name (Unit_Node))\n-                 = N_Defining_Program_Unit_Name\n+               if Nkind (Defining_Unit_Name (Unit_Node)) =\n+                                             N_Defining_Program_Unit_Name\n                then\n                   Generate_Parent_References (Unit_Node, Scope (Spec_Id));\n                end if;\n@@ -918,10 +917,10 @@ package body Sem_Ch10 is\n       --  the next compilation, which is either the main unit or some\n       --  other unit in the context.\n \n-      if Nkind (Unit_Node) = N_Package_Declaration\n+      if Nkind_In (Unit_Node, N_Package_Declaration,\n+                              N_Package_Renaming_Declaration,\n+                              N_Subprogram_Declaration)\n         or else Nkind (Unit_Node) in N_Generic_Declaration\n-        or else Nkind (Unit_Node) = N_Package_Renaming_Declaration\n-        or else Nkind (Unit_Node) = N_Subprogram_Declaration\n         or else\n           (Nkind (Unit_Node) = N_Subprogram_Body\n             and then Acts_As_Spec (Unit_Node))\n@@ -1063,14 +1062,13 @@ package body Sem_Ch10 is\n       --  units manufactured by the compiler never need elab checks.\n \n       if Comes_From_Source (N)\n-        and then\n-          (Nkind (Unit_Node) = N_Package_Declaration         or else\n-           Nkind (Unit_Node) = N_Generic_Package_Declaration or else\n-           Nkind (Unit_Node) = N_Subprogram_Declaration      or else\n-           Nkind (Unit_Node) = N_Generic_Subprogram_Declaration)\n+        and then Nkind_In (Unit_Node, N_Package_Declaration,\n+                                      N_Generic_Package_Declaration,\n+                                      N_Subprogram_Declaration,\n+                                      N_Generic_Subprogram_Declaration)\n       then\n          declare\n-            Loc  : constant Source_Ptr := Sloc (N);\n+            Loc  : constant Source_Ptr       := Sloc (N);\n             Unum : constant Unit_Number_Type := Get_Source_Unit (Loc);\n \n          begin\n@@ -1305,10 +1303,10 @@ package body Sem_Ch10 is\n \n                --  Check compilation unit containing the limited-with clause\n \n-               if Ukind /= N_Package_Declaration\n-                 and then Ukind /= N_Subprogram_Declaration\n-                 and then Ukind /= N_Package_Renaming_Declaration\n-                 and then Ukind /= N_Subprogram_Renaming_Declaration\n+               if not Nkind_In (Ukind, N_Package_Declaration,\n+                                       N_Subprogram_Declaration,\n+                                       N_Package_Renaming_Declaration,\n+                                       N_Subprogram_Renaming_Declaration)\n                  and then Ukind not in N_Generic_Declaration\n                  and then Ukind not in N_Generic_Renaming_Declaration\n                  and then Ukind not in N_Generic_Instantiation\n@@ -1366,14 +1364,12 @@ package body Sem_Ch10 is\n                           and then Nkind (It) = N_With_Clause\n                           and then not Limited_Present (It)\n                           and then\n-                             (Nkind (Unit (Library_Unit (It)))\n-                               = N_Package_Declaration\n-                            or else\n-                              Nkind (Unit (Library_Unit (It)))\n-                               = N_Package_Renaming_Declaration)\n+                            Nkind_In (Unit (Library_Unit (It)),\n+                                       N_Package_Declaration,\n+                                       N_Package_Renaming_Declaration)\n                         then\n-                           if Nkind (Unit (Library_Unit (It)))\n-                                = N_Package_Declaration\n+                           if Nkind (Unit (Library_Unit (It))) =\n+                                                      N_Package_Declaration\n                            then\n                               Unit_Name := Name (It);\n                            else\n@@ -1788,17 +1784,17 @@ package body Sem_Ch10 is\n       --  Verify that the identifier for the stub is unique within this\n       --  declarative part.\n \n-      if Nkind (Parent (N)) = N_Block_Statement\n-        or else Nkind (Parent (N)) = N_Package_Body\n-        or else Nkind (Parent (N)) = N_Subprogram_Body\n+      if Nkind_In (Parent (N), N_Block_Statement,\n+                               N_Package_Body,\n+                               N_Subprogram_Body)\n       then\n          Decl := First (Declarations (Parent (N)));\n          while Present (Decl)\n            and then Decl /= N\n          loop\n             if Nkind (Decl) = N_Subprogram_Body_Stub\n-              and then (Chars (Defining_Unit_Name (Specification (Decl)))\n-                      = Chars (Defining_Unit_Name (Specification (N))))\n+              and then (Chars (Defining_Unit_Name (Specification (Decl))) =\n+                        Chars (Defining_Unit_Name (Specification (N))))\n             then\n                Error_Msg_N (\"identifier for stub is not unique\", N);\n             end if;\n@@ -2338,7 +2334,7 @@ package body Sem_Ch10 is\n \n       elsif (Unit_Kind = N_Package_Instantiation\n               or else Nkind (Original_Node (Unit (Library_Unit (N)))) =\n-                N_Package_Instantiation)\n+                                                  N_Package_Instantiation)\n         and then Nkind (U) = N_Package_Body\n       then\n          E_Name := Corresponding_Spec (U);\n@@ -2485,9 +2481,7 @@ package body Sem_Ch10 is\n    --  Start of processing for Check_Private_Child_Unit\n \n    begin\n-      if Nkind (Lib_Unit) = N_Package_Body\n-        or else Nkind (Lib_Unit) = N_Subprogram_Body\n-      then\n+      if Nkind_In (Lib_Unit, N_Package_Body, N_Subprogram_Body) then\n          Curr_Unit := Defining_Entity (Unit (Library_Unit (N)));\n          Par_Lib   := Curr_Unit;\n \n@@ -2589,12 +2583,15 @@ package body Sem_Ch10 is\n                         Item, Child_Parent);\n                   end if;\n \n-               elsif not Curr_Private\n-                 and then not Private_Present (Item)\n-                 and then Nkind (Lib_Unit) /= N_Package_Body\n-                 and then Nkind (Lib_Unit) /= N_Subprogram_Body\n-                 and then Nkind (Lib_Unit) /= N_Subunit\n+               elsif Curr_Private\n+                 or else Private_Present (Item)\n+                 or else Nkind_In (Lib_Unit, N_Package_Body, N_Subunit)\n+                 or else (Nkind (Lib_Unit) = N_Subprogram_Body\n+                            and then not Acts_As_Spec (Parent (Lib_Unit)))\n                then\n+                  null;\n+\n+               else\n                   Error_Msg_NE\n                     (\"current unit must also be private descendant of&\",\n                      Item, Child_Parent);\n@@ -2616,12 +2613,11 @@ package body Sem_Ch10 is\n       Kind : constant Node_Kind := Nkind (Par);\n \n    begin\n-      if (Kind = N_Package_Body\n-           or else Kind = N_Subprogram_Body\n-           or else Kind = N_Task_Body\n-           or else Kind = N_Protected_Body)\n-        and then (Nkind (Parent (Par)) = N_Compilation_Unit\n-                    or else Nkind (Parent (Par)) = N_Subunit)\n+      if Nkind_In (Kind, N_Package_Body,\n+                         N_Subprogram_Body,\n+                         N_Task_Body,\n+                         N_Protected_Body)\n+        and then Nkind_In (Parent (Par), N_Compilation_Unit, N_Subunit)\n       then\n          null;\n \n@@ -2654,11 +2650,32 @@ package body Sem_Ch10 is\n       ---------------------\n \n       function Build_Unit_Name (Nam : Node_Id) return Node_Id is\n-         Result : Node_Id;\n+         Renaming : Entity_Id;\n+         Result   : Node_Id;\n \n       begin\n          if Nkind (Nam) = N_Identifier then\n-            return New_Occurrence_Of (Entity (Nam), Loc);\n+\n+            --  If the parent unit P in the name of the with_clause for P.Q\n+            --  is a renaming of package R, then the entity of the parent is\n+            --  set to R, but the identifier retains Chars (P) to be consistent\n+            --  with the source (see details in lib-load). However, the\n+            --  implicit_with_clause for the parent must make the entity for\n+            --  P visible, because P.Q may be used as a prefix within the\n+            --  current unit. The entity for P is the current_entity with that\n+            --  name, because the package renaming declaration for it has just\n+            --  been analyzed. Note that this case can only happen if P.Q has\n+            --  already appeared in a previous with_clause in a related unit,\n+            --  such as the library body of the current unit.\n+\n+            if Chars (Nam) /= Chars (Entity (Nam)) then\n+               Renaming := Current_Entity (Nam);\n+               pragma Assert (Renamed_Entity (Renaming) = Entity (Nam));\n+               return New_Occurrence_Of (Renaming, Loc);\n+\n+            else\n+               return New_Occurrence_Of (Entity (Nam), Loc);\n+            end if;\n \n          else\n             Result :=\n@@ -2689,7 +2706,7 @@ package body Sem_Ch10 is\n       --  private.\n \n       if Nkind (Unit (N)) = N_Package_Declaration then\n-         Set_Private_Present       (Withn, Private_Present (Item));\n+         Set_Private_Present    (Withn, Private_Present (Item));\n       end if;\n \n       Prepend (Withn, Context_Items (N));\n@@ -2952,7 +2969,7 @@ package body Sem_Ch10 is\n                if Nkind (Name (Item)) = N_Expanded_Name then\n                   Expand_With_Clause (Item, Prefix (Name (Item)), N);\n                else\n-                  --  if not an expanded name, the child unit must be a\n+                  --  If not an expanded name, the child unit must be a\n                   --  renaming, nothing to do.\n \n                   null;\n@@ -3110,10 +3127,10 @@ package body Sem_Ch10 is\n          Install_Siblings (Defining_Entity (Unit (Library_Unit (N))), N);\n       end if;\n \n-      if Nkind (Lib_Unit) = N_Generic_Package_Declaration\n-        or else Nkind (Lib_Unit) = N_Generic_Subprogram_Declaration\n-        or else Nkind (Lib_Unit) = N_Package_Declaration\n-        or else Nkind (Lib_Unit) = N_Subprogram_Declaration\n+      if Nkind_In (Lib_Unit, N_Generic_Package_Declaration,\n+                             N_Generic_Subprogram_Declaration,\n+                             N_Package_Declaration,\n+                             N_Subprogram_Declaration)\n       then\n          if Is_Child_Spec (Lib_Unit) then\n             Lib_Parent := Defining_Entity (Unit (Parent_Spec (Lib_Unit)));\n@@ -3303,9 +3320,9 @@ package body Sem_Ch10 is\n \n          elsif not Private_Present (Parent (Item))\n            and then not Private_Present (Item)\n-           and then Nkind (Unit (Parent (Item))) /= N_Package_Body\n-           and then Nkind (Unit (Parent (Item))) /= N_Subprogram_Body\n-           and then Nkind (Unit (Parent (Item))) /= N_Subunit\n+           and then not Nkind_In (Unit (Parent (Item)), N_Package_Body,\n+                                                        N_Subprogram_Body,\n+                                                        N_Subunit)\n          then\n             Error_Msg_NE\n               (\"current unit must also be private descendant of&\",\n@@ -3460,9 +3477,9 @@ package body Sem_Ch10 is\n             then\n                if not Private_Present (Item)\n                  or else Private_Present (N)\n-                 or else Nkind (Unit (N)) = N_Package_Body\n-                 or else Nkind (Unit (N)) = N_Subprogram_Body\n-                 or else Nkind (Unit (N)) = N_Subunit\n+                 or else Nkind_In (Unit (N), N_Package_Body,\n+                                             N_Subprogram_Body,\n+                                             N_Subunit)\n                then\n                   Install_Limited_Withed_Unit (Item);\n                end if;\n@@ -3556,8 +3573,8 @@ package body Sem_Ch10 is\n       end if;\n \n       if Ekind (P_Name) = E_Generic_Package\n-        and then Nkind (Lib_Unit) /= N_Generic_Subprogram_Declaration\n-        and then Nkind (Lib_Unit) /= N_Generic_Package_Declaration\n+        and then not Nkind_In (Lib_Unit, N_Generic_Subprogram_Declaration,\n+                                         N_Generic_Package_Declaration)\n         and then Nkind (Lib_Unit) not in N_Generic_Renaming_Declaration\n       then\n          Error_Msg_N\n@@ -3580,7 +3597,6 @@ package body Sem_Ch10 is\n       --  indicating that we deal with an instance.\n \n       elsif Nkind (Original_Node (P)) = N_Package_Instantiation then\n-\n          if Nkind (Lib_Unit) in N_Renaming_Declaration\n            or else Nkind (Original_Node (Lib_Unit)) in N_Generic_Instantiation\n            or else"}]}