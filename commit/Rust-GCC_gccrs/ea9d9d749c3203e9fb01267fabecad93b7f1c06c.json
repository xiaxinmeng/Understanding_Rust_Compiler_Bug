{"sha": "ea9d9d749c3203e9fb01267fabecad93b7f1c06c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWE5ZDlkNzQ5YzMyMDNlOWZiMDEyNjdmYWJlY2FkOTNiN2YxYzA2Yw==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2019-03-14T09:24:21Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2019-03-14T09:24:21Z"}, "message": "re PR c++/89698 (Run-time error due to optimization of field access after cast at -Os/-O2 and higher)\n\n2019-03-14  Richard Biener  <rguenther@suse.de>\n\n\tPR middle-end/89698\n\t* fold-const.c (operand_equal_p): For INDIRECT_REF check\n\tthat the access types are similar.\n\n\t* g++.dg/torture/pr89698.C: New testcase.\n\nFrom-SVN: r269677", "tree": {"sha": "8ae68e5a87de5cfccd05b9746dad560357dfe764", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8ae68e5a87de5cfccd05b9746dad560357dfe764"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ea9d9d749c3203e9fb01267fabecad93b7f1c06c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea9d9d749c3203e9fb01267fabecad93b7f1c06c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea9d9d749c3203e9fb01267fabecad93b7f1c06c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea9d9d749c3203e9fb01267fabecad93b7f1c06c/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f54e63dfa34c4c9922a4cb35d2f8c28c92135b8c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f54e63dfa34c4c9922a4cb35d2f8c28c92135b8c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f54e63dfa34c4c9922a4cb35d2f8c28c92135b8c"}], "stats": {"total": 53, "additions": 49, "deletions": 4}, "files": [{"sha": "2d2495cba2710e239e8cd9306e218d9885d6db5a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea9d9d749c3203e9fb01267fabecad93b7f1c06c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea9d9d749c3203e9fb01267fabecad93b7f1c06c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ea9d9d749c3203e9fb01267fabecad93b7f1c06c", "patch": "@@ -1,3 +1,9 @@\n+2019-03-14  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/89698\n+\t* fold-const.c (operand_equal_p): For INDIRECT_REF check\n+\tthat the access types are similar.\n+\n 2019-03-14  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/89703"}, {"sha": "dbc96798e656fafd613b92d3e7a9d901edd416b6", "filename": "gcc/fold-const.c", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea9d9d749c3203e9fb01267fabecad93b7f1c06c/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea9d9d749c3203e9fb01267fabecad93b7f1c06c/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=ea9d9d749c3203e9fb01267fabecad93b7f1c06c", "patch": "@@ -3220,10 +3220,16 @@ operand_equal_p (const_tree arg0, const_tree arg1, unsigned int flags)\n       switch (TREE_CODE (arg0))\n \t{\n \tcase INDIRECT_REF:\n-\t  if (!(flags & OEP_ADDRESS_OF)\n-\t      && (TYPE_ALIGN (TREE_TYPE (arg0))\n-\t\t  != TYPE_ALIGN (TREE_TYPE (arg1))))\n-\t    return 0;\n+\t  if (!(flags & OEP_ADDRESS_OF))\n+\t    {\n+\t      if (TYPE_ALIGN (TREE_TYPE (arg0))\n+\t\t  != TYPE_ALIGN (TREE_TYPE (arg1)))\n+\t\treturn 0;\n+\t      /* Verify that the access types are compatible.  */\n+\t      if (TYPE_MAIN_VARIANT (TREE_TYPE (arg0))\n+\t\t  != TYPE_MAIN_VARIANT (TREE_TYPE (arg1)))\n+\t\treturn 0;\n+\t    }\n \t  flags &= ~OEP_ADDRESS_OF;\n \t  return OP_SAME (0);\n "}, {"sha": "b0f9efa63fe63145fe4f52359f9c0437b31eb0a3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea9d9d749c3203e9fb01267fabecad93b7f1c06c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea9d9d749c3203e9fb01267fabecad93b7f1c06c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ea9d9d749c3203e9fb01267fabecad93b7f1c06c", "patch": "@@ -1,3 +1,8 @@\n+2019-03-14  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/89698\n+\t* g++.dg/torture/pr89698.C: New testcase.\n+\n 2019-03-14  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/89703"}, {"sha": "fbeb7976c0fe5c6b63c1f4580713f499e54a6189", "filename": "gcc/testsuite/g++.dg/torture/pr89698.C", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea9d9d749c3203e9fb01267fabecad93b7f1c06c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr89698.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea9d9d749c3203e9fb01267fabecad93b7f1c06c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr89698.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr89698.C?ref=ea9d9d749c3203e9fb01267fabecad93b7f1c06c", "patch": "@@ -0,0 +1,28 @@\n+/* { dg-do run } */\n+\n+extern \"C\" void abort (void);\n+\n+class A {\n+    virtual void f(){};\n+public:\n+    int x;\n+    A(int in): x(in) {};\n+};\n+\n+class B: public A {\n+public:\n+    int y;\n+    B(int in):A(in-1), y(in) {};\n+};\n+\n+int test(void)\n+{\n+  int res;\n+  B b(2);\n+  A* bp = &b;\n+  void* vp = dynamic_cast<void*>(bp);\n+  if (((A*)vp)->x == 1 && ((B*)vp)->y == 2)\n+    return 1;\n+  return 0;\n+}\n+int main() { if (test() != 1) abort (); return 0; }"}]}