{"sha": "acf49e88aaf315ea29c1b96950a91bffd7e7ea3d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWNmNDllODhhYWYzMTVlYTI5YzFiOTY5NTBhOTFiZmZkN2U3ZWEzZA==", "commit": {"author": {"name": "Steve Baird", "email": "baird@adacore.com", "date": "2012-02-17T14:17:21Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-02-17T14:17:21Z"}, "message": "sem_prag.adb (Analyze_PPC_In_Decl_Part): Pre'Class and Post'Class aspects can only be specified for a primitive...\n\n2012-02-17  Steve Baird  <baird@adacore.com>\n\n\t* sem_prag.adb (Analyze_PPC_In_Decl_Part): Pre'Class and\n\tPost'Class aspects can only be specified for a primitive operation\n\tof a tagged type.\n\nFrom-SVN: r184342", "tree": {"sha": "70f44e7069c5df96d0c1ada4e8eb0630c6084213", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/70f44e7069c5df96d0c1ada4e8eb0630c6084213"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/acf49e88aaf315ea29c1b96950a91bffd7e7ea3d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/acf49e88aaf315ea29c1b96950a91bffd7e7ea3d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/acf49e88aaf315ea29c1b96950a91bffd7e7ea3d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/acf49e88aaf315ea29c1b96950a91bffd7e7ea3d/comments", "author": {"login": "swbaird", "id": 50751052, "node_id": "MDQ6VXNlcjUwNzUxMDUy", "avatar_url": "https://avatars.githubusercontent.com/u/50751052?v=4", "gravatar_id": "", "url": "https://api.github.com/users/swbaird", "html_url": "https://github.com/swbaird", "followers_url": "https://api.github.com/users/swbaird/followers", "following_url": "https://api.github.com/users/swbaird/following{/other_user}", "gists_url": "https://api.github.com/users/swbaird/gists{/gist_id}", "starred_url": "https://api.github.com/users/swbaird/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/swbaird/subscriptions", "organizations_url": "https://api.github.com/users/swbaird/orgs", "repos_url": "https://api.github.com/users/swbaird/repos", "events_url": "https://api.github.com/users/swbaird/events{/privacy}", "received_events_url": "https://api.github.com/users/swbaird/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "794b9b72402dbb9eb2182b2fd046322ea2614bc8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/794b9b72402dbb9eb2182b2fd046322ea2614bc8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/794b9b72402dbb9eb2182b2fd046322ea2614bc8"}], "stats": {"total": 49, "additions": 47, "deletions": 2}, "files": [{"sha": "4aba46d19766d56a7f933cfae237bf3972e66c9a", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/acf49e88aaf315ea29c1b96950a91bffd7e7ea3d/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/acf49e88aaf315ea29c1b96950a91bffd7e7ea3d/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=acf49e88aaf315ea29c1b96950a91bffd7e7ea3d", "patch": "@@ -1,3 +1,9 @@\n+2012-02-17  Steve Baird  <baird@adacore.com>\n+\n+\t* sem_prag.adb (Analyze_PPC_In_Decl_Part): Pre'Class and\n+\tPost'Class aspects can only be specified for a primitive operation\n+\tof a tagged type.\n+\n 2012-02-17  Yannick Moy  <moy@adacore.com>\n \n \t* gnat_rm.texi: Minor shuffling."}, {"sha": "f1ea658a10b129af1ec0813d6bce317e9ee1961c", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 41, "deletions": 2, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/acf49e88aaf315ea29c1b96950a91bffd7e7ea3d/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/acf49e88aaf315ea29c1b96950a91bffd7e7ea3d/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=acf49e88aaf315ea29c1b96950a91bffd7e7ea3d", "patch": "@@ -278,13 +278,19 @@ package body Sem_Prag is\n       --  overriding operation (see ARM12 6.6.1 (7)).\n \n       if Class_Present (N) then\n-         declare\n+         Class_Wide_Condition : declare\n             T   : constant Entity_Id := Find_Dispatching_Type (S);\n \n             ACW : Entity_Id := Empty;\n             --  Access to T'class, created if there is a controlling formal\n             --  that is an access parameter.\n \n+            function Aspect_Name return String;\n+            --  Return the name of the aspect being specified (\"Pre\" or \"Post\")\n+            --  properly capitalized for use in an error message. Precondition\n+            --  is Present (Corresponding_Aspect (N)), which will be satisfied\n+            --  if Class_Present (N).\n+\n             function Get_ACW return Entity_Id;\n             --  If the expression has a reference to an controlling access\n             --  parameter, create an access to T'class for the necessary\n@@ -299,6 +305,19 @@ package body Sem_Prag is\n             --  type access-to-T'Class. This ensures the expression is well-\n             --  defined for a primitive subprogram of a type descended from T.\n \n+            -----------------\n+            -- Aspect_Name --\n+            -----------------\n+\n+            function Aspect_Name return String is\n+            begin\n+               if Chars (Identifier (Corresponding_Aspect (N))) = Name_Pre then\n+                  return \"Pre\";\n+               else\n+                  return \"Post\";\n+               end if;\n+            end Aspect_Name;\n+\n             -------------\n             -- Get_ACW --\n             -------------\n@@ -365,9 +384,29 @@ package body Sem_Prag is\n \n             procedure Replace_Type is new Traverse_Proc (Process);\n \n+         --  Start of processing for Class_Wide_Condition\n+\n          begin\n+            if not Present (T) then\n+\n+               --  This is weird code, why not just set Err_Msg_Name_1 to\n+               --  Identifier (Corresponding_Aspect (N)), and Err_Msg_Name_2\n+               --  to Name_Class and then use\n+\n+               --    \"aspect `%''%` can only be specified ...\n+\n+               --  That would be the more normal way of doing things ???\n+               --  Then you get proper identifier casing mode as well,\n+               --  instead of presuming mixed case ???\n+\n+               Error_Msg_N\n+                 (\"aspect \" & Aspect_Name & \"''Class can only be specified \" &\n+                  \"for a primitive operation of a tagged type\",\n+                  Corresponding_Aspect (N));\n+            end if;\n+\n             Replace_Type (Get_Pragma_Arg (Arg1));\n-         end;\n+         end Class_Wide_Condition;\n       end if;\n \n       --  Remove the subprogram from the scope stack now that the pre-analysis"}]}