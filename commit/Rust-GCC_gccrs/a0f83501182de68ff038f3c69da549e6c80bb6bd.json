{"sha": "a0f83501182de68ff038f3c69da549e6c80bb6bd", "node_id": "C_kwDOANBUbNoAKGEwZjgzNTAxMTgyZGU2OGZmMDM4ZjNjNjlkYTU0OWU2YzgwYmI2YmQ", "commit": {"author": {"name": "Fran\u00e7ois Dumont", "email": "fdumont@gcc.gnu.org", "date": "2022-09-08T04:55:20Z"}, "committer": {"name": "Fran\u00e7ois Dumont", "email": "fdumont@gcc.gnu.org", "date": "2022-09-08T19:21:13Z"}, "message": "libstdc++: mallinfo deprecated, use mallinfo2 when glibc => 2.33\n\nglibc mallinfo is now deprecated resulting in make check-performance\nfailure. When glibc => 2.33 prefer mallinfo2.\n\nlibstdc++-v3/ChangeLog:\n\n\t* testsuite/util/testsuite_performance.h (__gnu_test::MallocInfo): New.\n\t(__gnu_test::malloc_info): New, replace mallinfo on current platform\n\tsupporting it and use mallinfo2 when glibc >= 2.33.", "tree": {"sha": "0a15e628d6fc3a45db0dbf4d1583b9a221a88bee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0a15e628d6fc3a45db0dbf4d1583b9a221a88bee"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a0f83501182de68ff038f3c69da549e6c80bb6bd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0f83501182de68ff038f3c69da549e6c80bb6bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a0f83501182de68ff038f3c69da549e6c80bb6bd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0f83501182de68ff038f3c69da549e6c80bb6bd/comments", "author": null, "committer": null, "parents": [{"sha": "264deecb16abcfc8ca8efe9b94b0ad55febd55cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/264deecb16abcfc8ca8efe9b94b0ad55febd55cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/264deecb16abcfc8ca8efe9b94b0ad55febd55cc"}], "stats": {"total": 63, "additions": 30, "deletions": 33}, "files": [{"sha": "4f8b1eab8b9452b62757f3354191774ffd5ccc46", "filename": "libstdc++-v3/testsuite/util/testsuite_performance.h", "status": "modified", "additions": 30, "deletions": 33, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0f83501182de68ff038f3c69da549e6c80bb6bd/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_performance.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0f83501182de68ff038f3c69da549e6c80bb6bd/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_performance.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_performance.h?ref=a0f83501182de68ff038f3c69da549e6c80bb6bd", "patch": "@@ -36,42 +36,39 @@\n #include <testsuite_common_types.h>\n \n #if defined (__linux__) || defined (__GLIBC__)\n-#include <malloc.h>\n-#elif defined (__FreeBSD__)\n-extern \"C\"\n-{\n-  struct mallinfo\n-  {\n-    int uordblks;\n-    int hblkhd;\n-  };\n+#include <malloc.h> // For mallinfo.\n+#endif\n \n-  struct mallinfo\n-  mallinfo(void)\n-  {\n-    struct mallinfo m = { (((std::size_t) sbrk (0) + 1023) / 1024), 0 };\n-    return m;\n-  }\n-}\n-#elif !defined (__hpux__)\n-extern \"C\"\n+namespace __gnu_test\n {\n-  struct mallinfo\n+  struct MallocInfo\n   {\n-    int uordblks;\n-    int hblkhd;\n-  };\n+    MallocInfo() : uordblks(0), hblkhd(0) { }\n+    MallocInfo(std::size_t uordblocks, std::size_t hblockhd)\n+      : uordblks(uordblocks), hblkhd(hblockhd)\n+    { }\n \n-  struct mallinfo empty = { 0, 0 };\n+    std::size_t uordblks;\n+    std::size_t hblkhd;\n+  };\n \n-  struct mallinfo\n-  mallinfo(void)\n-  { return empty; }\n-}\n+  MallocInfo\n+  malloc_info()\n+  {\n+#if defined (__linux__) || defined (__hpux__) || defined (__GLIBC__)\n+#if __GLIBC__ > 2 || __GLIBC__ == 2 && __GLIBC_MINOR__ >= 33\n+    struct mallinfo2 mi = mallinfo2();\n+#else\n+    struct mallinfo mi = mallinfo();\n+#endif\n+    return MallocInfo(mi.uordblks, mi.hblkhd);\n+#elif defined (__FreeBSD__)\n+    return MallocInfo((((std::size_t) sbrk (0) + 1023) / 1024), 0);\n+#else\n+    return MallocInfo();\n #endif\n+  }\n \n-namespace __gnu_test\n-{\n   class time_counter\n   {\n   private:\n@@ -146,8 +143,8 @@ namespace __gnu_test\n     int                 who;\n     rusage\t        rusage_begin;\n     rusage\t        rusage_end;\n-    struct mallinfo  \tallocation_begin;\n-    struct mallinfo  \tallocation_end;\n+    MallocInfo  \tallocation_begin;\n+    MallocInfo  \tallocation_end;\n \n   public:\n     resource_counter(int i = RUSAGE_SELF) : who(i)\n@@ -168,15 +165,15 @@ namespace __gnu_test\n       if (getrusage(who, &rusage_begin) != 0 )\n \tmemset(&rusage_begin, 0, sizeof(rusage_begin));\n       void* p __attribute__((unused)) = malloc(0); // Needed for some implementations.\n-      allocation_begin = mallinfo();\n+      allocation_begin = malloc_info();\n     }\n \n     void\n     stop()\n     {\n       if (getrusage(who, &rusage_end) != 0 )\n \tmemset(&rusage_end, 0, sizeof(rusage_end));\n-      allocation_end = mallinfo();\n+      allocation_end = malloc_info();\n     }\n \n     int"}]}