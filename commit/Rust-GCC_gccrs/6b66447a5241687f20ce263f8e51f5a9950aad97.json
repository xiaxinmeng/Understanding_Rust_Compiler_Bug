{"sha": "6b66447a5241687f20ce263f8e51f5a9950aad97", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmI2NjQ0N2E1MjQxNjg3ZjIwY2UyNjNmOGU1MWY1YTk5NTBhYWQ5Nw==", "commit": {"author": {"name": "Nick Clifton", "email": "nickc@redhat.com", "date": "2004-07-07T09:27:55Z"}, "committer": {"name": "Nick Clifton", "email": "nickc@gcc.gnu.org", "date": "2004-07-07T09:27:55Z"}, "message": "(fr30_setup_incoming_varargs): Change arguments to match\nTARGET_SETUP_INCOMING_VARARGS prototype.\n\nFrom-SVN: r84197", "tree": {"sha": "0be64b710c665f16e1f800a8e0734fd85d0984b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0be64b710c665f16e1f800a8e0734fd85d0984b6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6b66447a5241687f20ce263f8e51f5a9950aad97", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b66447a5241687f20ce263f8e51f5a9950aad97", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b66447a5241687f20ce263f8e51f5a9950aad97", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b66447a5241687f20ce263f8e51f5a9950aad97/comments", "author": {"login": "nickclifton", "id": 31441682, "node_id": "MDQ6VXNlcjMxNDQxNjgy", "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nickclifton", "html_url": "https://github.com/nickclifton", "followers_url": "https://api.github.com/users/nickclifton/followers", "following_url": "https://api.github.com/users/nickclifton/following{/other_user}", "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}", "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions", "organizations_url": "https://api.github.com/users/nickclifton/orgs", "repos_url": "https://api.github.com/users/nickclifton/repos", "events_url": "https://api.github.com/users/nickclifton/events{/privacy}", "received_events_url": "https://api.github.com/users/nickclifton/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "874a4e75a7eccdc84d42a2f61b614c89be906887", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/874a4e75a7eccdc84d42a2f61b614c89be906887", "html_url": "https://github.com/Rust-GCC/gccrs/commit/874a4e75a7eccdc84d42a2f61b614c89be906887"}], "stats": {"total": 32, "additions": 18, "deletions": 14}, "files": [{"sha": "907ff321a252bf45f21f417c80717f62735f07a8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b66447a5241687f20ce263f8e51f5a9950aad97/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b66447a5241687f20ce263f8e51f5a9950aad97/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6b66447a5241687f20ce263f8e51f5a9950aad97", "patch": "@@ -1,3 +1,8 @@\n+2004-07-07  Nick Clifton  <nickc@redhat.com>\n+\n+\t* config/fr30/fr30.c (fr30_setup_incoming_varargs): Change\n+\targuments to match TARGET_SETUP_INCOMING_VARARGS prototype. \n+\n 2004-07-07  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* vec.h: Fix the example use."}, {"sha": "5e11b6330f8e9c18fc64d4073e3f717898df3b57", "filename": "gcc/config/fr30/fr30.c", "status": "modified", "additions": 13, "deletions": 14, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b66447a5241687f20ce263f8e51f5a9950aad97/gcc%2Fconfig%2Ffr30%2Ffr30.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b66447a5241687f20ce263f8e51f5a9950aad97/gcc%2Fconfig%2Ffr30%2Ffr30.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffr30%2Ffr30.c?ref=6b66447a5241687f20ce263f8e51f5a9950aad97", "patch": "@@ -146,15 +146,15 @@ static rtx fr30_pass_by_value (tree, tree);\n #endif\n \f\n /* Initialize the GCC target structure.  */\n-#undef TARGET_ASM_ALIGNED_HI_OP\n+#undef  TARGET_ASM_ALIGNED_HI_OP\n #define TARGET_ASM_ALIGNED_HI_OP \"\\t.hword\\t\"\n-#undef TARGET_ASM_ALIGNED_SI_OP\n+#undef  TARGET_ASM_ALIGNED_SI_OP\n #define TARGET_ASM_ALIGNED_SI_OP \"\\t.word\\t\"\n \n-#undef TARGET_PROMOTE_PROTOTYPES\n+#undef  TARGET_PROMOTE_PROTOTYPES\n #define TARGET_PROMOTE_PROTOTYPES hook_bool_tree_true\n \n-#undef TARGET_SETUP_INCOMING_VARARGS\n+#undef  TARGET_SETUP_INCOMING_VARARGS\n #define TARGET_SETUP_INCOMING_VARARGS fr30_setup_incoming_varargs\n \n struct gcc_target targetm = TARGET_INITIALIZER;\n@@ -413,27 +413,26 @@ fr30_expand_epilogue (void)\n    ARG_REGS_USED_SO_FAR has *not* been updated for the last named argument\n    which has type TYPE and mode MODE, and we rely on this fact.  */\n void\n-fr30_setup_incoming_varargs (CUMULATIVE_ARGS arg_regs_used_so_far,\n-\t\t\t     int int_mode,\n+fr30_setup_incoming_varargs (CUMULATIVE_ARGS *arg_regs_used_so_far,\n+\t\t\t     enum machine_mode mode,\n \t\t\t     tree type ATTRIBUTE_UNUSED,\n-\t\t\t     int *pretend_size)\n+\t\t\t     int *pretend_size,\n+\t\t\t     int second_time ATTRIBUTE_UNUSED)\n {\n-  enum machine_mode mode = (enum machine_mode)int_mode;\n-  int               size;\n+  int size;\n \n-  \n   /* All BLKmode values are passed by reference.  */\n   if (mode == BLKmode)\n     abort ();\n \n   /* ??? This run-time test as well as the code inside the if\n      statement is probably unnecessary.  */\n-  if (targetm.calls.strict_argument_naming (&arg_regs_used_so_far))\n+  if (targetm.calls.strict_argument_naming (arg_regs_used_so_far))\n     /* If TARGET_STRICT_ARGUMENT_NAMING returns true, then the last named\n        arg must not be treated as an anonymous arg.  */\n-    arg_regs_used_so_far += fr30_num_arg_regs (int_mode, type);\n-  \n-  size = FR30_NUM_ARG_REGS - arg_regs_used_so_far;\n+    arg_regs_used_so_far += fr30_num_arg_regs (mode, type);\n+\n+  size = FR30_NUM_ARG_REGS - (* arg_regs_used_so_far);\n \n   if (size <= 0)\n     return;"}]}