{"sha": "fda26abecc9a71f75d654776fdd97183f15f7df7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmRhMjZhYmVjYzlhNzFmNzVkNjU0Nzc2ZmRkOTcxODNmMTVmN2RmNw==", "commit": {"author": {"name": "Igor Tsimbalist", "email": "itsimbal@gcc.gnu.org", "date": "2017-11-17T22:36:50Z"}, "committer": {"name": "Igor Tsimbalist", "email": "itsimbal@gcc.gnu.org", "date": "2017-11-17T22:36:50Z"}, "message": "Enable building libquadmath with Intel CET\n\nlibquadmath/\n\t* Makefile.am: Update AM_CFLAGS.\n\t* Makefile.in: Regenerate:\n\t* acinclude.m4: Add enable.m4 and cet.m4.\n\t* configure: Regenerate.\n\t* configure.ac: Set CET_FLAGS. Update XCFLAGS.\n\nFrom-SVN: r254899", "tree": {"sha": "301126087662937243794b5cafa593feb57091f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/301126087662937243794b5cafa593feb57091f4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fda26abecc9a71f75d654776fdd97183f15f7df7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fda26abecc9a71f75d654776fdd97183f15f7df7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fda26abecc9a71f75d654776fdd97183f15f7df7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fda26abecc9a71f75d654776fdd97183f15f7df7/comments", "author": null, "committer": null, "parents": [{"sha": "ff035ef67334c4a5011d2f28a8b1c5813c1da9d5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff035ef67334c4a5011d2f28a8b1c5813c1da9d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ff035ef67334c4a5011d2f28a8b1c5813c1da9d5"}], "stats": {"total": 99, "additions": 96, "deletions": 3}, "files": [{"sha": "284f4d98e74cdc64019d745b011f09d17f3142ac", "filename": "libquadmath/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fda26abecc9a71f75d654776fdd97183f15f7df7/libquadmath%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fda26abecc9a71f75d654776fdd97183f15f7df7/libquadmath%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libquadmath%2FChangeLog?ref=fda26abecc9a71f75d654776fdd97183f15f7df7", "patch": "@@ -1,3 +1,11 @@\n+ 2017-11-17  Igor Tsimbalist  <igor.v.tsimbalist@intel.com>\n+\n+\t* Makefile.am: Update AM_CFLAGS.\n+\t* Makefile.in: Regenerate:\n+\t* acinclude.m4: Add enable.m4 and cet.m4.\n+\t* configure: Regenerate.\n+\t* configure.ac: Set CET_FLAGS. Update XCFLAGS.\n+\n 2017-11-05  Tom de Vries  <tom@codesourcery.com>\n \n \tPR other/82784"}, {"sha": "6f1fe61158dc66e28e1d6b26e4924cb3baa07aec", "filename": "libquadmath/Makefile.am", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fda26abecc9a71f75d654776fdd97183f15f7df7/libquadmath%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fda26abecc9a71f75d654776fdd97183f15f7df7/libquadmath%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libquadmath%2FMakefile.am?ref=fda26abecc9a71f75d654776fdd97183f15f7df7", "patch": "@@ -7,6 +7,7 @@ AUTOMAKE_OPTIONS = 1.8 foreign\n if BUILD_LIBQUADMATH\n ACLOCAL_AMFLAGS = -I .. -I ../config\n AM_CPPFLAGS = -I $(top_srcdir)/../include\n+AM_CFLAGS = $(XCFLAGS)\n \n ## May be used by toolexeclibdir.\n gcc_version := $(shell @get_gcc_base_ver@ $(top_srcdir)/../gcc/BASE-VER)"}, {"sha": "312f48562693419e80c7ffa6bea15cfd1e49290b", "filename": "libquadmath/Makefile.in", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fda26abecc9a71f75d654776fdd97183f15f7df7/libquadmath%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fda26abecc9a71f75d654776fdd97183f15f7df7/libquadmath%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libquadmath%2FMakefile.in?ref=fda26abecc9a71f75d654776fdd97183f15f7df7", "patch": "@@ -70,7 +70,8 @@ am__aclocal_m4_deps = $(top_srcdir)/../config/acx.m4 \\\n \t$(top_srcdir)/../ltoptions.m4 $(top_srcdir)/../ltsugar.m4 \\\n \t$(top_srcdir)/../ltversion.m4 $(top_srcdir)/../lt~obsolete.m4 \\\n \t$(top_srcdir)/acinclude.m4 $(top_srcdir)/../libtool.m4 \\\n-\t$(top_srcdir)/configure.ac\n+\t$(top_srcdir)/../config/enable.m4 \\\n+\t$(top_srcdir)/../config/cet.m4 $(top_srcdir)/configure.ac\n am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\\n \t$(ACLOCAL_M4)\n am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \\\n@@ -275,6 +276,7 @@ SET_MAKE = @SET_MAKE@\n SHELL = @SHELL@\n STRIP = @STRIP@\n VERSION = @VERSION@\n+XCFLAGS = @XCFLAGS@\n abs_builddir = @abs_builddir@\n abs_srcdir = @abs_srcdir@\n abs_top_builddir = @abs_top_builddir@\n@@ -341,6 +343,7 @@ top_srcdir = @top_srcdir@\n AUTOMAKE_OPTIONS = 1.8 foreign\n @BUILD_LIBQUADMATH_TRUE@ACLOCAL_AMFLAGS = -I .. -I ../config\n @BUILD_LIBQUADMATH_TRUE@AM_CPPFLAGS = -I $(top_srcdir)/../include\n+@BUILD_LIBQUADMATH_TRUE@AM_CFLAGS = $(XCFLAGS)\n @BUILD_LIBQUADMATH_TRUE@gcc_version := $(shell @get_gcc_base_ver@ $(top_srcdir)/../gcc/BASE-VER)\n @BUILD_LIBQUADMATH_TRUE@@LIBQUAD_USE_SYMVER_FALSE@version_arg = \n @BUILD_LIBQUADMATH_TRUE@@LIBQUAD_USE_SYMVER_GNU_TRUE@@LIBQUAD_USE_SYMVER_TRUE@version_arg = -Wl,--version-script=$(srcdir)/quadmath.map"}, {"sha": "3703cd68efdf794090d9725cd9803374745819d3", "filename": "libquadmath/acinclude.m4", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fda26abecc9a71f75d654776fdd97183f15f7df7/libquadmath%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fda26abecc9a71f75d654776fdd97183f15f7df7/libquadmath%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libquadmath%2Facinclude.m4?ref=fda26abecc9a71f75d654776fdd97183f15f7df7", "patch": "@@ -2,6 +2,8 @@ dnl ----------------------------------------------------------------------\n dnl This whole bit snagged from libgfortran.\n \n sinclude(../libtool.m4)\n+sinclude(../config/enable.m4)\n+sinclude(../config/cet.m4)\n dnl The lines below arrange for aclocal not to bring an installed\n dnl libtool.m4 into aclocal.m4, while still arranging for automake to\n dnl add a definition of LIBTOOL to Makefile.in."}, {"sha": "b32dcbc8e03c5fed01f2efc7f5934d3bd14d2c86", "filename": "libquadmath/configure", "status": "modified", "additions": 76, "deletions": 2, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fda26abecc9a71f75d654776fdd97183f15f7df7/libquadmath%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fda26abecc9a71f75d654776fdd97183f15f7df7/libquadmath%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libquadmath%2Fconfigure?ref=fda26abecc9a71f75d654776fdd97183f15f7df7", "patch": "@@ -604,6 +604,7 @@ LIBOBJS\n get_gcc_base_ver\n GENINSRC_FALSE\n GENINSRC_TRUE\n+XCFLAGS\n BUILD_LIBQUADMATH_FALSE\n BUILD_LIBQUADMATH_TRUE\n LIBQUAD_USE_SYMVER_SUN_FALSE\n@@ -750,6 +751,7 @@ with_gnu_ld\n enable_libtool_lock\n enable_maintainer_mode\n enable_symvers\n+enable_cet\n enable_generated_files_in_srcdir\n with_gcc_major_version_only\n '\n@@ -1396,6 +1398,8 @@ Optional Features:\n   --enable-maintainer-mode  enable make rules and dependencies not useful\n \t\t\t  (and sometimes confusing) to the casual installer\n   --disable-symvers       disable symbol versioning for libquadmath\n+  --enable-cet            enable Intel CET in target libraries\n+                          [default=default]\n   --enable-generated-files-in-srcdir\n                           put copies of generated files in source dir intended\n                           for creating source tarballs for users without\n@@ -10572,7 +10576,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10575 \"configure\"\n+#line 10579 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -10678,7 +10682,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10681 \"configure\"\n+#line 10685 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -12819,6 +12823,76 @@ $as_echo \"#define USE_I18N_NUMBER_H 1\" >>confdefs.h\n \n fi\n \n+# Add CET specific flags if CET is enabled\n+ # Check whether --enable-cet was given.\n+if test \"${enable_cet+set}\" = set; then :\n+  enableval=$enable_cet;\n+      case \"$enableval\" in\n+       yes|no|default) ;;\n+       *) as_fn_error \"Unknown argument to enable/disable cet\" \"$LINENO\" 5 ;;\n+                          esac\n+\n+else\n+  enable_cet=default\n+fi\n+\n+\n+case \"$host\" in\n+  i[34567]86-*-linux* | x86_64-*-linux*)\n+    case \"$enable_cet\" in\n+      default)\n+\t# Check if assembler supports CET.\n+\tcat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+int\n+main ()\n+{\n+asm (\"setssbsy\");\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  enable_cet=yes\n+else\n+  enable_cet=no\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+\t;;\n+      yes)\n+\t# Check if assembler supports CET.\n+\tcat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+int\n+main ()\n+{\n+asm (\"setssbsy\");\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+\n+else\n+  as_fn_error \"assembler with CET support is required for --enable-cet\" \"$LINENO\" 5\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+\t;;\n+    esac\n+    ;;\n+  *)\n+    enable_cet=no\n+    ;;\n+esac\n+if test x$enable_cet = xyes; then\n+  CET_FLAGS=\"-fcf-protection -mcet\"\n+fi\n+\n+XCFLAGS=\"$XCFLAGS $CET_FLAGS\"\n+\n+\n cat >confcache <<\\_ACEOF\n # This file is a shell script that caches the results of configure\n # tests run on this system so they can be shared between configure"}, {"sha": "2a721cb9adc548358c7cbbea8a48febaba50f82a", "filename": "libquadmath/configure.ac", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fda26abecc9a71f75d654776fdd97183f15f7df7/libquadmath%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fda26abecc9a71f75d654776fdd97183f15f7df7/libquadmath%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libquadmath%2Fconfigure.ac?ref=fda26abecc9a71f75d654776fdd97183f15f7df7", "patch": "@@ -341,6 +341,11 @@ if test x$quadmath_use_i18n_number_h = xyes; then\n   AC_DEFINE([USE_I18N_NUMBER_H],[1],[whether i18n number rewriting can be supported])\n fi\n \n+# Add CET specific flags if CET is enabled\n+GCC_CET_FLAGS(CET_FLAGS)\n+XCFLAGS=\"$XCFLAGS $CET_FLAGS\"\n+AC_SUBST(XCFLAGS)\n+\n AC_CACHE_SAVE\n \n if test ${multilib} = yes; then"}]}