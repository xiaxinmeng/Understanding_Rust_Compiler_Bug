{"sha": "43855b285f2bd75185cf28329e74fae7b35b9372", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDM4NTViMjg1ZjJiZDc1MTg1Y2YyODMyOWU3NGZhZTdiMzViOTM3Mg==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1992-03-31T22:17:47Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1992-03-31T22:17:47Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r650", "tree": {"sha": "4f1de33a5bed2011a8c7acda0ec89b76a880bfe6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4f1de33a5bed2011a8c7acda0ec89b76a880bfe6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/43855b285f2bd75185cf28329e74fae7b35b9372", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43855b285f2bd75185cf28329e74fae7b35b9372", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43855b285f2bd75185cf28329e74fae7b35b9372", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43855b285f2bd75185cf28329e74fae7b35b9372/comments", "author": null, "committer": null, "parents": [{"sha": "2378088aa6f765f0da07cc7b9408cdcb09e4264e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2378088aa6f765f0da07cc7b9408cdcb09e4264e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2378088aa6f765f0da07cc7b9408cdcb09e4264e"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "d7164d85dc2ccce2bbacfce7c6c16dccd1b7bf23", "filename": "gcc/toplev.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43855b285f2bd75185cf28329e74fae7b35b9372/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43855b285f2bd75185cf28329e74fae7b35b9372/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=43855b285f2bd75185cf28329e74fae7b35b9372", "patch": "@@ -338,6 +338,13 @@ int flag_omit_frame_pointer = 0;\n \n int flag_no_peephole = 0;\n \n+/* Nonzero allows GCC to violate some IEEE or ANSI rules regarding math\n+   operations in the interest of optimization.  For example it allows\n+   GCC to assume arguments to sqrt are nonnegative numbers, allowing\n+   faster code for sqrt to be generated. */\n+\n+int flag_fast_math = 0;\n+\n /* Nonzero means all references through pointers are volatile.  */\n \n int flag_volatile;\n@@ -468,6 +475,7 @@ struct { char *string; int *variable; int on_value;} f_options[] =\n   {\"schedule-insns2\", &flag_schedule_insns_after_reload, 1},\n   {\"pic\", &flag_pic, 1},\n   {\"PIC\", &flag_pic, 2},\n+  {\"fast-math\", &flag_fast_math, 1},\n   {\"common\", &flag_no_common, 0},\n   {\"inhibit-size-directive\", &flag_inhibit_size_directive, 1},\n   {\"gnu-linker\", &flag_gnu_linker, 1}"}]}