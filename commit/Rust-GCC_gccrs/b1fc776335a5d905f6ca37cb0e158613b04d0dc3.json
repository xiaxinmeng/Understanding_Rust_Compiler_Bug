{"sha": "b1fc776335a5d905f6ca37cb0e158613b04d0dc3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjFmYzc3NjMzNWE1ZDkwNWY2Y2EzN2NiMGUxNTg2MTNiMDRkMGRjMw==", "commit": {"author": {"name": "Mark Eggleston", "email": "mark.eggleston@codethink.com", "date": "2019-10-04T14:11:36Z"}, "committer": {"name": "Mark Eggleston", "email": "markeggleston@gcc.gnu.org", "date": "2019-10-04T14:11:36Z"}, "message": "Replace test cases for using automatic variables in equivalence statements.\n\nFrom-SVN: r276580", "tree": {"sha": "0e7aee6ec5e722847c6519257efd77618068d089", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0e7aee6ec5e722847c6519257efd77618068d089"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b1fc776335a5d905f6ca37cb0e158613b04d0dc3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1fc776335a5d905f6ca37cb0e158613b04d0dc3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1fc776335a5d905f6ca37cb0e158613b04d0dc3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1fc776335a5d905f6ca37cb0e158613b04d0dc3/comments", "author": {"login": "markeggleston", "id": 42180582, "node_id": "MDQ6VXNlcjQyMTgwNTgy", "avatar_url": "https://avatars.githubusercontent.com/u/42180582?v=4", "gravatar_id": "", "url": "https://api.github.com/users/markeggleston", "html_url": "https://github.com/markeggleston", "followers_url": "https://api.github.com/users/markeggleston/followers", "following_url": "https://api.github.com/users/markeggleston/following{/other_user}", "gists_url": "https://api.github.com/users/markeggleston/gists{/gist_id}", "starred_url": "https://api.github.com/users/markeggleston/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/markeggleston/subscriptions", "organizations_url": "https://api.github.com/users/markeggleston/orgs", "repos_url": "https://api.github.com/users/markeggleston/repos", "events_url": "https://api.github.com/users/markeggleston/events{/privacy}", "received_events_url": "https://api.github.com/users/markeggleston/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3694418a6d57c5b48383af8a5c6d1b1c2e3cec9b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3694418a6d57c5b48383af8a5c6d1b1c2e3cec9b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3694418a6d57c5b48383af8a5c6d1b1c2e3cec9b"}], "stats": {"total": 105, "additions": 43, "deletions": 62}, "files": [{"sha": "c5ead9fb30fdc6823909222ada4ba0800cf9656a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1fc776335a5d905f6ca37cb0e158613b04d0dc3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1fc776335a5d905f6ca37cb0e158613b04d0dc3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b1fc776335a5d905f6ca37cb0e158613b04d0dc3", "patch": "@@ -1,3 +1,9 @@\n+2019-10-04  Mark Eggleston <mark.eggleston@codethink.com>\n+\n+\t* gfortran.dg/auto_in_equiv_1.f90: Replaced.\n+\t* gfortran.dg/auto_in_equiv_2.f90: Replaced.\n+\t* gfortran.dg/auto_in_equiv_3.f90: Deleted.\n+\n 2019-10-04  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* gcc.target/aarch64/torture/simd-abi-8.c: Use -mlittle-endian."}, {"sha": "2791675af1b554ef3a13ea3a258d82863ac08384", "filename": "gcc/testsuite/gfortran.dg/auto_in_equiv_1.f90", "status": "modified", "additions": 26, "deletions": 27, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1fc776335a5d905f6ca37cb0e158613b04d0dc3/gcc%2Ftestsuite%2Fgfortran.dg%2Fauto_in_equiv_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1fc776335a5d905f6ca37cb0e158613b04d0dc3/gcc%2Ftestsuite%2Fgfortran.dg%2Fauto_in_equiv_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fauto_in_equiv_1.f90?ref=b1fc776335a5d905f6ca37cb0e158613b04d0dc3", "patch": "@@ -1,36 +1,35 @@\n-! { dg-do compile }\n+! { dg-do run }\n+! { dg-options \"-fdec-static -frecursive\" }\n \n ! Contributed by Mark Eggleston <mark.eggleston@codethink.com>\n+!\n+! Check automatic variables can be used in equivalence statements.\n+! Any other variables that do not explicitly have the automatic\n+! attribute will be given the automatic attribute.\n+!\n+! Check that variables are on the stack by incorporating the\n+! equivalence in a recursive function.\n+!\n program test\n-  call suba(0)\n-  call subb(0)\n-  call suba(1)\n+  integer :: f\n+\n+  f = factorial(5)\n+  if (f.ne.120) stop 2\n \n contains\n-  subroutine suba(option) \n-    integer, intent(in) :: option\n-    integer, automatic :: a ! { dg-error \"AUTOMATIC at \\\\(1\\\\) is a DEC extension\" }\n+  function factorial(n) result(f)\n+    integer :: f\n+    integer, intent(in) :: n\n+    integer, automatic :: a\n     integer :: b\n-    integer :: c\n-    equivalence (a, b)\n-    if (option.eq.0) then\n-      ! initialise a and c\n-      a = 9\n-      c = 99\n-      if (a.ne.b) stop 1\n-      if (loc(a).ne.loc(b)) stop 2\n+    equivalence (a,b)\n+\n+    if (loc(a).ne.loc(b)) stop 1\n+    b = n\n+    if (a.eq.1) then\n+      f = 1\n     else\n-      ! a should've been overwritten\n-      if (a.eq.9) stop 3\n+      f = a * factorial(b-1)\n     end if\n-  end subroutine suba\n-\n-  subroutine subb(dummy)\n-    integer, intent(in) :: dummy\n-    integer, automatic :: x ! { dg-error \"AUTOMATIC at \\\\(1\\\\) is a DEC extension\" }\n-    integer :: y\n-    x = 77\n-    y = 7\n-  end subroutine subb\n-\n+  end function\n end program test"}, {"sha": "5d8a9fbb90e16e905fc02f226a2a04675d871468", "filename": "gcc/testsuite/gfortran.dg/auto_in_equiv_2.f90", "status": "modified", "additions": 11, "deletions": 35, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1fc776335a5d905f6ca37cb0e158613b04d0dc3/gcc%2Ftestsuite%2Fgfortran.dg%2Fauto_in_equiv_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1fc776335a5d905f6ca37cb0e158613b04d0dc3/gcc%2Ftestsuite%2Fgfortran.dg%2Fauto_in_equiv_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fauto_in_equiv_2.f90?ref=b1fc776335a5d905f6ca37cb0e158613b04d0dc3", "patch": "@@ -1,38 +1,14 @@\n ! { dg-do run }\n-! { dg-options \"-fdec-static\" }\n+! { dg-options \"-fdec-static -frecursive -fno-automatic\" }\n \n ! Contributed by Mark Eggleston <mark.eggleston@codethink.com>\n-\n-program test\n-  call suba(0)\n-  call subb(0)\n-  call suba(1)\n-\n-contains\n-  subroutine suba(option) \n-    integer, intent(in) :: option\n-    integer, automatic :: a\n-    integer :: b\n-    integer :: c\n-    equivalence (a, b)\n-    if (option.eq.0) then\n-      ! initialise a and c\n-      a = 9\n-      c = 99\n-      if (a.ne.b) stop 1\n-      if (loc(a).ne.loc(b)) stop 2\n-    else\n-      ! a should've been overwritten\n-      if (a.eq.9) stop 3\n-    end if\n-  end subroutine suba\n-\n-  subroutine subb(dummy)\n-    integer, intent(in) :: dummy\n-    integer, automatic :: x\n-    integer :: y\n-    x = 77\n-    y = 7\n-  end subroutine subb\n-\n-end program test\n+!\n+! Check that -fno-automatic does not break recursion. The recursive\n+! function is not marked with the resursive key word consequently\n+! local variables can be made static when -fno-automatic is used. The\n+! recursive function contains an equivalence that has a variable with\n+! the automatic attribute and one without.\n+!\n+include \"auto_in_equiv_1.f90\"\n+\n+! { dg-warning \"Flag '-fno-automatic' overwrites '-frecursive'\" \"warning\" { target *-*-* } 0 } "}]}