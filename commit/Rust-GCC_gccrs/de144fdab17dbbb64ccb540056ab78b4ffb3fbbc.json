{"sha": "de144fdab17dbbb64ccb540056ab78b4ffb3fbbc", "node_id": "C_kwDOANBUbNoAKGRlMTQ0ZmRhYjE3ZGJiYjY0Y2NiNTQwMDU2YWI3OGI0ZmZiM2ZiYmM", "commit": {"author": {"name": "Alex Coplan", "email": "alex.coplan@arm.com", "date": "2022-12-01T17:36:02Z"}, "committer": {"name": "Alex Coplan", "email": "alex.coplan@arm.com", "date": "2022-12-01T17:36:02Z"}, "message": "varasm: Fix type confusion bug\n\nThis patch fixes a type confusion bug in varasm.cc:assemble_variable.\nThe problem is that the current code calls:\n\n  sect = get_variable_section (decl, false);\n\nand then accesses sect->named.name without checking whether the section\nis in fact a named section. In the surrounding else clause, we only know\nthat SECTION_STYLE (sect) != SECTION_NOSWITCH, so it is possible that\nthe section is an unnamed section.\n\nIn practice, this means that we end up doing a wild string compare\nbetween a function pointer and the string literal \".vtable_map_vars\".\nThis is because sect->named.name aliases sect->unnamed.callback in the\nsection union.\n\nThis can be seen in GDB with a simple testcase such as \"int x;\".\n\nThis patch fixes the issue by checking the SECTION_STYLE of the section\nis in fact SECTION_NAMED before trying to do the string comparison.\n\nWe drop the existing check of whether sect->named.name is non-NULL\nbecause this should presumably always be the case for a named section.\n\ngcc/ChangeLog:\n\n\t* varasm.cc (assemble_variable): Fix type confusion bug when\n\tchecking for \".vtable_map_vars\" section.", "tree": {"sha": "4c2aa990111d8064fe8f4d3dbfc8d27d1f92a769", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4c2aa990111d8064fe8f4d3dbfc8d27d1f92a769"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/de144fdab17dbbb64ccb540056ab78b4ffb3fbbc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de144fdab17dbbb64ccb540056ab78b4ffb3fbbc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de144fdab17dbbb64ccb540056ab78b4ffb3fbbc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de144fdab17dbbb64ccb540056ab78b4ffb3fbbc/comments", "author": {"login": "acoplan-arm", "id": 86676934, "node_id": "MDQ6VXNlcjg2Njc2OTM0", "avatar_url": "https://avatars.githubusercontent.com/u/86676934?v=4", "gravatar_id": "", "url": "https://api.github.com/users/acoplan-arm", "html_url": "https://github.com/acoplan-arm", "followers_url": "https://api.github.com/users/acoplan-arm/followers", "following_url": "https://api.github.com/users/acoplan-arm/following{/other_user}", "gists_url": "https://api.github.com/users/acoplan-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/acoplan-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/acoplan-arm/subscriptions", "organizations_url": "https://api.github.com/users/acoplan-arm/orgs", "repos_url": "https://api.github.com/users/acoplan-arm/repos", "events_url": "https://api.github.com/users/acoplan-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/acoplan-arm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "acoplan-arm", "id": 86676934, "node_id": "MDQ6VXNlcjg2Njc2OTM0", "avatar_url": "https://avatars.githubusercontent.com/u/86676934?v=4", "gravatar_id": "", "url": "https://api.github.com/users/acoplan-arm", "html_url": "https://github.com/acoplan-arm", "followers_url": "https://api.github.com/users/acoplan-arm/followers", "following_url": "https://api.github.com/users/acoplan-arm/following{/other_user}", "gists_url": "https://api.github.com/users/acoplan-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/acoplan-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/acoplan-arm/subscriptions", "organizations_url": "https://api.github.com/users/acoplan-arm/orgs", "repos_url": "https://api.github.com/users/acoplan-arm/repos", "events_url": "https://api.github.com/users/acoplan-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/acoplan-arm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a5354dafb30cb13a3fbdf731ccea61ca51f406b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5354dafb30cb13a3fbdf731ccea61ca51f406b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5354dafb30cb13a3fbdf731ccea61ca51f406b1"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "6851201b6a2c1d445bcf10aa6a0f61f2eaf2b9a3", "filename": "gcc/varasm.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de144fdab17dbbb64ccb540056ab78b4ffb3fbbc/gcc%2Fvarasm.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de144fdab17dbbb64ccb540056ab78b4ffb3fbbc/gcc%2Fvarasm.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.cc?ref=de144fdab17dbbb64ccb540056ab78b4ffb3fbbc", "patch": "@@ -2400,7 +2400,7 @@ assemble_variable (tree decl, int top_level ATTRIBUTE_UNUSED,\n   else\n     {\n       /* Special-case handling of vtv comdat sections.  */\n-      if (sect->named.name\n+      if (SECTION_STYLE (sect) == SECTION_NAMED\n \t  && (strcmp (sect->named.name, \".vtable_map_vars\") == 0))\n \thandle_vtv_comdat_section (sect, decl);\n       else"}]}