{"sha": "3746d8b1facdeefa063b3d66716fea3d5315943c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mzc0NmQ4YjFmYWNkZWVmYTA2M2IzZDY2NzE2ZmVhM2Q1MzE1OTQzYw==", "commit": {"author": {"name": "Matthias Klose", "email": "doko@ubuntu.com", "date": "2007-07-12T11:40:27Z"}, "committer": {"name": "Matthias Klose", "email": "doko@gcc.gnu.org", "date": "2007-07-12T11:40:27Z"}, "message": "MethodResult.h, [...]: Regenerate.\n\n2007-07-12  Matthias Klose  <doko@ubuntu.com>\n\n        * gnu/classpath/jdwp/util/MethodResult.h,\n        gnu/classpath/jdwp/value/ObjectValue.h: Regenerate.\n\nFrom-SVN: r126580", "tree": {"sha": "baea50069f38e74f9cecb46a5f6958b049977e66", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/baea50069f38e74f9cecb46a5f6958b049977e66"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3746d8b1facdeefa063b3d66716fea3d5315943c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3746d8b1facdeefa063b3d66716fea3d5315943c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3746d8b1facdeefa063b3d66716fea3d5315943c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3746d8b1facdeefa063b3d66716fea3d5315943c/comments", "author": {"login": "doko42", "id": 11258518, "node_id": "MDQ6VXNlcjExMjU4NTE4", "avatar_url": "https://avatars.githubusercontent.com/u/11258518?v=4", "gravatar_id": "", "url": "https://api.github.com/users/doko42", "html_url": "https://github.com/doko42", "followers_url": "https://api.github.com/users/doko42/followers", "following_url": "https://api.github.com/users/doko42/following{/other_user}", "gists_url": "https://api.github.com/users/doko42/gists{/gist_id}", "starred_url": "https://api.github.com/users/doko42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/doko42/subscriptions", "organizations_url": "https://api.github.com/users/doko42/orgs", "repos_url": "https://api.github.com/users/doko42/repos", "events_url": "https://api.github.com/users/doko42/events{/privacy}", "received_events_url": "https://api.github.com/users/doko42/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d23e87a4c14ffe349ce024e7e47c70e4ec1bf5ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d23e87a4c14ffe349ce024e7e47c70e4ec1bf5ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d23e87a4c14ffe349ce024e7e47c70e4ec1bf5ec"}], "stats": {"total": 25, "additions": 15, "deletions": 10}, "files": [{"sha": "a8f754aac62efb4775141cf7ed11440d5028df8e", "filename": "libjava/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3746d8b1facdeefa063b3d66716fea3d5315943c/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3746d8b1facdeefa063b3d66716fea3d5315943c/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=3746d8b1facdeefa063b3d66716fea3d5315943c", "patch": "@@ -1,3 +1,8 @@\n+2007-07-12  Matthias Klose  <doko@ubuntu.com>\n+\n+\t* gnu/classpath/jdwp/util/MethodResult.h,\n+\tgnu/classpath/jdwp/value/ObjectValue.h: Regenerate.\n+\n 2007-07-11  Keith Seitz  <keiths@redhat.com>\n \n \t* interpret.cc (get_local_var_table) [DIRECT_THREADED]: Make sure the"}, {"sha": "11e26d3c99cea0ee58ad2d5fc130a7e1c60bd932", "filename": "libjava/gnu/classpath/jdwp/util/MethodResult.h", "status": "modified", "additions": 9, "deletions": 10, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3746d8b1facdeefa063b3d66716fea3d5315943c/libjava%2Fgnu%2Fclasspath%2Fjdwp%2Futil%2FMethodResult.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3746d8b1facdeefa063b3d66716fea3d5315943c/libjava%2Fgnu%2Fclasspath%2Fjdwp%2Futil%2FMethodResult.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fclasspath%2Fjdwp%2Futil%2FMethodResult.h?ref=3746d8b1facdeefa063b3d66716fea3d5315943c", "patch": "@@ -19,6 +19,10 @@ extern \"Java\"\n         {\n             class MethodResult;\n         }\n+        namespace value\n+        {\n+            class Value;\n+        }\n       }\n     }\n   }\n@@ -28,17 +32,12 @@ class gnu::classpath::jdwp::util::MethodResult : public ::java::lang::Object\n {\n \n public:\n-  MethodResult();\n-  virtual ::java::lang::Object * getReturnedValue();\n-  virtual void setReturnedValue(::java::lang::Object *);\n-  virtual ::java::lang::Exception * getThrownException();\n-  virtual void setThrownException(::java::lang::Exception *);\n-  virtual ::java::lang::Class * getResultType();\n-  virtual void setResultType(::java::lang::Class *);\n+  MethodResult(::gnu::classpath::jdwp::value::Value *, ::java::lang::Throwable *);\n+  virtual ::gnu::classpath::jdwp::value::Value * getReturnedValue();\n+  virtual ::java::lang::Throwable * getThrownException();\n private:\n-  ::java::lang::Object * __attribute__((aligned(__alignof__( ::java::lang::Object)))) returnedValue;\n-  ::java::lang::Exception * thrownException;\n-  ::java::lang::Class * resType;\n+  ::gnu::classpath::jdwp::value::Value * __attribute__((aligned(__alignof__( ::java::lang::Object)))) returnedValue;\n+  ::java::lang::Throwable * thrownException;\n public:\n   static ::java::lang::Class class$;\n };"}, {"sha": "46bef25bbcbf2587109831d9247e5e690322a3fd", "filename": "libjava/gnu/classpath/jdwp/value/ObjectValue.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3746d8b1facdeefa063b3d66716fea3d5315943c/libjava%2Fgnu%2Fclasspath%2Fjdwp%2Fvalue%2FObjectValue.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3746d8b1facdeefa063b3d66716fea3d5315943c/libjava%2Fgnu%2Fclasspath%2Fjdwp%2Fvalue%2FObjectValue.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fclasspath%2Fjdwp%2Fvalue%2FObjectValue.h?ref=3746d8b1facdeefa063b3d66716fea3d5315943c", "patch": "@@ -29,6 +29,7 @@ class gnu::classpath::jdwp::value::ObjectValue : public ::gnu::classpath::jdwp::\n \n public:\n   ObjectValue(::java::lang::Object *);\n+  ::java::lang::Object * getValue();\n public: // actually protected\n   ::java::lang::Object * getObject();\n   void write(::java::io::DataOutputStream *);"}]}