{"sha": "13a72c0ba3e023f0f585654ed389c76efd4c1590", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTNhNzJjMGJhM2UwMjNmMGY1ODU2NTRlZDM4OWM3NmVmZDRjMTU5MA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2012-02-07T15:48:52Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2012-02-07T15:48:52Z"}, "message": "re PR rtl-optimization/52060 (Invalid constant simplification in combine with parallel result)\n\n\tPR rtl-optimization/52060\n\t* combine.c (try_combine): Add i0src_copy and i0src_copy2 variables,\n\tcopy i1src to i1src_copy whenever added_sets_2 && i1_feeds_i2_n already\n\tbefore i1dest -> i1src substitution in newpat, copy i0src to i0src_copy\n\tand/or i0src_copy2 when needed.\n\n\t* gcc.dg/torture/pr52060.c: New test.\n\nFrom-SVN: r183972", "tree": {"sha": "ca6b0042141862f3c4f03a32d3199c206b2102e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ca6b0042141862f3c4f03a32d3199c206b2102e5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/13a72c0ba3e023f0f585654ed389c76efd4c1590", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13a72c0ba3e023f0f585654ed389c76efd4c1590", "html_url": "https://github.com/Rust-GCC/gccrs/commit/13a72c0ba3e023f0f585654ed389c76efd4c1590", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13a72c0ba3e023f0f585654ed389c76efd4c1590/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "117cb2bc9854cfacb54527e574a2861a09cff731", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/117cb2bc9854cfacb54527e574a2861a09cff731", "html_url": "https://github.com/Rust-GCC/gccrs/commit/117cb2bc9854cfacb54527e574a2861a09cff731"}], "stats": {"total": 93, "additions": 85, "deletions": 8}, "files": [{"sha": "a05e801a8e4ff5a11371b1f85dd898f5b8763b57", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13a72c0ba3e023f0f585654ed389c76efd4c1590/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13a72c0ba3e023f0f585654ed389c76efd4c1590/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=13a72c0ba3e023f0f585654ed389c76efd4c1590", "patch": "@@ -1,3 +1,11 @@\n+2012-02-07  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR rtl-optimization/52060\n+\t* combine.c (try_combine): Add i0src_copy and i0src_copy2 variables,\n+\tcopy i1src to i1src_copy whenever added_sets_2 && i1_feeds_i2_n already\n+\tbefore i1dest -> i1src substitution in newpat, copy i0src to i0src_copy\n+\tand/or i0src_copy2 when needed.\n+\n 2012-02-07  Jakub Jelinek  <jakub@redhat.com>\n \n \t* gcc.c (main): Don't look for lto-wrapper or lto-wrapper"}, {"sha": "d06de04041e8f227e05eb472f14ca7ef7ee305b4", "filename": "gcc/combine.c", "status": "modified", "additions": 17, "deletions": 8, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13a72c0ba3e023f0f585654ed389c76efd4c1590/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13a72c0ba3e023f0f585654ed389c76efd4c1590/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=13a72c0ba3e023f0f585654ed389c76efd4c1590", "patch": "@@ -2591,8 +2591,8 @@ try_combine (rtx i3, rtx i2, rtx i1, rtx i0, int *new_direct_jump_p,\n   rtx i3dest_killed = 0;\n   /* SET_DEST and SET_SRC of I2, I1 and I0.  */\n   rtx i2dest = 0, i2src = 0, i1dest = 0, i1src = 0, i0dest = 0, i0src = 0;\n-  /* Copy of SET_SRC of I1, if needed.  */\n-  rtx i1src_copy = 0;\n+  /* Copy of SET_SRC of I1 and I0, if needed.  */\n+  rtx i1src_copy = 0, i0src_copy = 0, i0src_copy2 = 0;\n   /* Set if I2DEST was reused as a scratch register.  */\n   bool i2scratch = false;\n   /* The PATTERNs of I0, I1, and I2, or a copy of them in certain cases.  */\n@@ -3246,6 +3246,11 @@ try_combine (rtx i3, rtx i2, rtx i1, rtx i0, int *new_direct_jump_p,\n       n_occurrences = 0;\n       subst_low_luid = DF_INSN_LUID (i1);\n \n+      /* If the following substitution will modify I1SRC, make a copy of it\n+\t for the case where it is substituted for I1DEST in I2PAT later.  */\n+      if (added_sets_2 && i1_feeds_i2_n)\n+\ti1src_copy = copy_rtx (i1src);\n+\n       /* If I0 feeds into I1 and I0DEST is in I0SRC, we need to make a unique\n \t copy of I1SRC each time we substitute it, in order to avoid creating\n \t self-referential RTL when we will be substituting I0SRC for I0DEST\n@@ -3273,10 +3278,14 @@ try_combine (rtx i3, rtx i2, rtx i1, rtx i0, int *new_direct_jump_p,\n \t  return 0;\n \t}\n \n-      /* If the following substitution will modify I1SRC, make a copy of it\n-\t for the case where it is substituted for I1DEST in I2PAT later.  */\n-      if (i0_feeds_i1_n && added_sets_2 && i1_feeds_i2_n)\n-\ti1src_copy = copy_rtx (i1src);\n+      /* If the following substitution will modify I0SRC, make a copy of it\n+\t for the case where it is substituted for I0DEST in I1PAT later.  */\n+      if (added_sets_1 && i0_feeds_i1_n)\n+\ti0src_copy = copy_rtx (i0src);\n+      /* And a copy for I0DEST in I2PAT substitution.  */\n+      if (added_sets_2 && ((i0_feeds_i1_n && i1_feeds_i2_n)\n+\t\t\t   || (i0_feeds_i2_n)))\n+\ti0src_copy2 = copy_rtx (i0src);\n \n       n_occurrences = 0;\n       subst_low_luid = DF_INSN_LUID (i0);\n@@ -3342,7 +3351,7 @@ try_combine (rtx i3, rtx i2, rtx i1, rtx i0, int *new_direct_jump_p,\n \t{\n \t  rtx t = i1pat;\n \t  if (i0_feeds_i1_n)\n-\t    t = subst (t, i0dest, i0src, 0, 0, 0);\n+\t    t = subst (t, i0dest, i0src_copy ? i0src_copy : i0src, 0, 0, 0);\n \n \t  XVECEXP (newpat, 0, --total_sets) = t;\n \t}\n@@ -3353,7 +3362,7 @@ try_combine (rtx i3, rtx i2, rtx i1, rtx i0, int *new_direct_jump_p,\n \t    t = subst (t, i1dest, i1src_copy ? i1src_copy : i1src, 0, 0,\n \t\t       i0_feeds_i1_n && i0dest_in_i0src);\n \t  if ((i0_feeds_i1_n && i1_feeds_i2_n) || i0_feeds_i2_n)\n-\t    t = subst (t, i0dest, i0src, 0, 0, 0);\n+\t    t = subst (t, i0dest, i0src_copy2 ? i0src_copy2 : i0src, 0, 0, 0);\n \n \t  XVECEXP (newpat, 0, --total_sets) = t;\n \t}"}, {"sha": "1f63642c01667710f498da511439c49d8ee2589a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13a72c0ba3e023f0f585654ed389c76efd4c1590/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13a72c0ba3e023f0f585654ed389c76efd4c1590/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=13a72c0ba3e023f0f585654ed389c76efd4c1590", "patch": "@@ -1,5 +1,8 @@\n 2012-02-07  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR rtl-optimization/52060\n+\t* gcc.dg/torture/pr52060.c: New test.\n+\n \tPR middle-end/52074\n \t* gcc.c-torture/compile/pr52074.c: New test.\n "}, {"sha": "44207a503c15afd01a7b59a504ae636ee7794627", "filename": "gcc/testsuite/gcc.dg/torture/pr52060.c", "status": "added", "additions": 57, "deletions": 0, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13a72c0ba3e023f0f585654ed389c76efd4c1590/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr52060.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13a72c0ba3e023f0f585654ed389c76efd4c1590/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr52060.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr52060.c?ref=13a72c0ba3e023f0f585654ed389c76efd4c1590", "patch": "@@ -0,0 +1,57 @@\n+/* PR rtl-optimization/52060 */\n+/* { dg-do run { target int32plus } } */\n+\n+extern void abort (void);\n+union U { float f; unsigned int i; };\n+\n+static inline __attribute__((always_inline)) unsigned int\n+foo (float x)\n+{\n+  union U u;\n+  unsigned int a, b, c;\n+  int d;\n+  int e;\n+  u.f = x;\n+  d = ((unsigned) u.i >> 23) & 0xFF;\n+  c = d < 126 ? 0 : ~0;\n+  e = 127 + 30 - d;\n+  a = (u.i << 8) | 0x80000000U;\n+  b = a & ((1 << e) - 1);\n+  a = a >> e;\n+  c &= (b | (a & 2)) ? ~0 : ~1;\n+  a = ((a + 1U) >> 1) & c;\n+  return a;\n+}\n+\n+__attribute__((noinline)) unsigned int\n+bar (float x)\n+{\n+  unsigned int a, b, c;\n+  static const unsigned int d[128] =\n+  {\n+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n+    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n+    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n+    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n+    2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,\n+    3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 6, 7\n+  };\n+  a = foo (1048575.0f * x);\n+  c = d[a >> 13];\n+  b = (c << 13) | ((a >> (7 - c)) & 0x1fff);\n+  return b;\n+}\n+\n+int\n+main ()\n+{\n+  union U u;\n+  u.f = 1048575.0f;\n+  if (sizeof (u.i) == sizeof (u.f)\n+      && u.i == 0x497ffff0U\n+      && bar (1.0f) != 65535)\n+    abort ();\n+  return 0;\n+}"}]}