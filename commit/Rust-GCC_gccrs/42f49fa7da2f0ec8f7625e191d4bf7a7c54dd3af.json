{"sha": "42f49fa7da2f0ec8f7625e191d4bf7a7c54dd3af", "node_id": "C_kwDOANBUbNoAKDQyZjQ5ZmE3ZGEyZjBlYzhmNzYyNWUxOTFkNGJmN2E3YzU0ZGQzYWY", "commit": {"author": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2022-02-04T09:28:02Z"}, "committer": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2022-02-04T12:52:31Z"}, "message": "Fix '-Wformat-diag' issue in 'TypeCheckPattern::visit (HIR::TupleStructPattern &pattern)'\n\nIt's alread now diagnosed, non-fatal warning:\n\n    [...]/source-gcc/gcc/rust/typecheck/rust-hir-type-check-pattern.cc: In member function \u2018virtual void Rust::Resolver::TypeCheckPattern::visit(Rust::HIR::TupleStructPattern&)\u2019:\n    [...]/source-gcc/gcc/rust/typecheck/rust-hir-type-check-pattern.cc:61:69: warning: unquoted operator \u2018::\u2019 in format [-Wformat-diag]\n        61 |         \"expected tuple struct or tuple variant, found %s variant %s::%s\",\n           |                                                                     ^~\n\nA later merge from GCC upstream will bring in\ncommit 34ba4275dcf5162efb9b634e4665734766faf4e3\n\"Enable -Werror=format-diag during bootstrap\", which then causes:\n\n    [...]/source-gcc/gcc/rust/typecheck/rust-hir-type-check-pattern.cc: In member function \u2018virtual void Rust::Resolver::TypeCheckPattern::visit(Rust::HIR::TupleStructPattern&)\u2019:\n    [...]/source-gcc/gcc/rust/typecheck/rust-hir-type-check-pattern.cc:61:69: error: unquoted operator \u2018::\u2019 in format [-Werror=format-diag]\n       61 |         \"expected tuple struct or tuple variant, found %s variant %s::%s\",\n          |                                                                     ^~\n    cc1plus: all warnings being treated as errors\n    make[3]: *** [rust/rust-hir-type-check-pattern.o] Error 1", "tree": {"sha": "ce339b9058e85e4ddcf5eb9656906e2c77206196", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ce339b9058e85e4ddcf5eb9656906e2c77206196"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/42f49fa7da2f0ec8f7625e191d4bf7a7c54dd3af", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42f49fa7da2f0ec8f7625e191d4bf7a7c54dd3af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/42f49fa7da2f0ec8f7625e191d4bf7a7c54dd3af", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42f49fa7da2f0ec8f7625e191d4bf7a7c54dd3af/comments", "author": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "83bfbf0746c87b641754697a3c8e9f7a7cb08aa9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83bfbf0746c87b641754697a3c8e9f7a7cb08aa9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/83bfbf0746c87b641754697a3c8e9f7a7cb08aa9"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "e4ec49bc5c103508f7426d92b3d8ae852135e699", "filename": "gcc/rust/typecheck/rust-hir-type-check-pattern.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42f49fa7da2f0ec8f7625e191d4bf7a7c54dd3af/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-pattern.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42f49fa7da2f0ec8f7625e191d4bf7a7c54dd3af/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-pattern.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-pattern.cc?ref=42f49fa7da2f0ec8f7625e191d4bf7a7c54dd3af", "patch": "@@ -58,7 +58,7 @@ TypeCheckPattern::visit (HIR::TupleStructPattern &pattern)\n \n       rust_error_at (\n \tpattern.get_locus (),\n-\t\"expected tuple struct or tuple variant, found %s variant %s::%s\",\n+\t\"expected tuple struct or tuple variant, found %s variant %<%s::%s%>\",\n \tvariant_type.c_str (), adt->get_name ().c_str (),\n \tvariant->get_identifier ().c_str ());\n       return;"}, {"sha": "a5f934d6aebf020982142011de38048560484aef", "filename": "gcc/testsuite/rust/compile/match5.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42f49fa7da2f0ec8f7625e191d4bf7a7c54dd3af/gcc%2Ftestsuite%2Frust%2Fcompile%2Fmatch5.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42f49fa7da2f0ec8f7625e191d4bf7a7c54dd3af/gcc%2Ftestsuite%2Frust%2Fcompile%2Fmatch5.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fcompile%2Fmatch5.rs?ref=42f49fa7da2f0ec8f7625e191d4bf7a7c54dd3af", "patch": "@@ -10,6 +10,6 @@ fn inspect(f: Foo) {\n         Foo::A => {}\n         Foo::B => {}\n         Foo::C(a) => {}\n-        Foo::D(x, y) => {} // { dg-error \"expected tuple struct or tuple variant, found struct variant Foo::D\" }\n+        Foo::D(x, y) => {} // { dg-error \"expected tuple struct or tuple variant, found struct variant 'Foo::D'\" }\n     }\n }"}]}