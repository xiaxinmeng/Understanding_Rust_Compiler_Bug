{"sha": "3442f18d26ec2224d3aeef72cba25540beaa68e8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzQ0MmYxOGQyNmVjMjIyNGQzYWVlZjcyY2JhMjU1NDBiZWFhNjhlOA==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely.gcc@gmail.com", "date": "2013-03-16T19:45:53Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2013-03-16T19:45:53Z"}, "message": "re PR libstdc++/56002 ([C++11] allow generic locks to be used without requiring plattform support for threads)\n\n\tPR libstdc++/56002\n\t* include/std/mutex (lock_guard, unique_lock, lock): Define without\n\tdepending on _GLIBCXX_HAS_GTHREADS.\n\t* testsuite/30_threads/lock_guard/cons/1.cc: Run on all targets.\n\nFrom-SVN: r196706", "tree": {"sha": "5df54334f014ba2896986b5a10209b3ee2345a10", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5df54334f014ba2896986b5a10209b3ee2345a10"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3442f18d26ec2224d3aeef72cba25540beaa68e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3442f18d26ec2224d3aeef72cba25540beaa68e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3442f18d26ec2224d3aeef72cba25540beaa68e8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3442f18d26ec2224d3aeef72cba25540beaa68e8/comments", "author": null, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b722c9a2a2bb01599706d51554128caa96709a8b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b722c9a2a2bb01599706d51554128caa96709a8b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b722c9a2a2bb01599706d51554128caa96709a8b"}], "stats": {"total": 23, "additions": 15, "deletions": 8}, "files": [{"sha": "8e4c99c280c29e3ec9e3660d110232c36321588c", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3442f18d26ec2224d3aeef72cba25540beaa68e8/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3442f18d26ec2224d3aeef72cba25540beaa68e8/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=3442f18d26ec2224d3aeef72cba25540beaa68e8", "patch": "@@ -1,3 +1,10 @@\n+2013-03-16  Jonathan Wakely  <jwakely.gcc@gmail.com>\n+\n+\tPR libstdc++/56002\n+\t* include/std/mutex (lock_guard, unique_lock, lock): Define without\n+\tdepending on _GLIBCXX_HAS_GTHREADS.\n+\t* testsuite/30_threads/lock_guard/cons/1.cc: Run on all targets.\n+\n 2013-03-16  Jonathan Wakely  <jwakely.gcc@gmail.com>\n \n \tPR libstdc++/56492"}, {"sha": "67f34185deb185ba7fd70f61e1895ff9fc9cc583", "filename": "libstdc++-v3/include/std/mutex", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3442f18d26ec2224d3aeef72cba25540beaa68e8/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fmutex", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3442f18d26ec2224d3aeef72cba25540beaa68e8/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fmutex", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fmutex?ref=3442f18d26ec2224d3aeef72cba25540beaa68e8", "patch": "@@ -45,12 +45,13 @@\n #include <bits/gthr.h>\n #include <bits/move.h> // for std::swap\n \n-#if defined(_GLIBCXX_HAS_GTHREADS) && defined(_GLIBCXX_USE_C99_STDINT_TR1)\n+#ifdef _GLIBCXX_USE_C99_STDINT_TR1\n \n namespace std _GLIBCXX_VISIBILITY(default)\n {\n _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n+#ifdef _GLIBCXX_HAS_GTHREADS\n   // Common base class for std::mutex and std::timed_mutex\n   class __mutex_base\n   {\n@@ -384,6 +385,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       }\n   };\n #endif\n+#endif // _GLIBCXX_HAS_GTHREADS\n \n   /// Do not acquire ownership of the mutex.\n   struct defer_lock_t { };\n@@ -719,6 +721,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n         }\n     }\n \n+#ifdef _GLIBCXX_HAS_GTHREADS\n   /// once_flag\n   struct once_flag\n   {\n@@ -790,12 +793,12 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       if (__e)\n \t__throw_system_error(__e);\n     }\n+#endif // _GLIBCXX_HAS_GTHREADS\n \n   // @} group mutexes\n _GLIBCXX_END_NAMESPACE_VERSION\n } // namespace\n-\n-#endif // _GLIBCXX_HAS_GTHREADS && _GLIBCXX_USE_C99_STDINT_TR1\n+#endif // _GLIBCXX_USE_C99_STDINT_TR1\n \n #endif // C++11\n "}, {"sha": "cd6d9143bdf63fda4fc008146b4c6b94f5926c8a", "filename": "libstdc++-v3/testsuite/30_threads/lock_guard/cons/1.cc", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3442f18d26ec2224d3aeef72cba25540beaa68e8/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Flock_guard%2Fcons%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3442f18d26ec2224d3aeef72cba25540beaa68e8/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Flock_guard%2Fcons%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Flock_guard%2Fcons%2F1.cc?ref=3442f18d26ec2224d3aeef72cba25540beaa68e8", "patch": "@@ -1,9 +1,6 @@\n-// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthread\" { target *-*-freebsd* *-*-netbsd* *-*-linux* powerpc-ibm-aix* } }\n-// { dg-options \" -std=gnu++0x -pthreads\" { target *-*-solaris* } }\n-// { dg-options \" -std=gnu++0x \" { target *-*-cygwin *-*-darwin* } }\n+// { dg-do run }\n+// { dg-options \" -std=gnu++11 \" }\n // { dg-require-cstdint \"\" }\n-// { dg-require-gthreads \"\" }\n \n // Copyright (C) 2010-2013 Free Software Foundation, Inc.\n //"}]}