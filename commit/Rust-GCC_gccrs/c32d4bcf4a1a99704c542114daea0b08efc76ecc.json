{"sha": "c32d4bcf4a1a99704c542114daea0b08efc76ecc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzMyZDRiY2Y0YTFhOTk3MDRjNTQyMTE0ZGFlYTBiMDhlZmM3NmVjYw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-02T13:26:46Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-02T13:26:46Z"}, "message": "Refine previous change.\n\nFrom-SVN: r177149", "tree": {"sha": "1348893efcd12e2d392a1c50f440e8aa0889f2d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1348893efcd12e2d392a1c50f440e8aa0889f2d4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c32d4bcf4a1a99704c542114daea0b08efc76ecc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c32d4bcf4a1a99704c542114daea0b08efc76ecc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c32d4bcf4a1a99704c542114daea0b08efc76ecc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c32d4bcf4a1a99704c542114daea0b08efc76ecc/comments", "author": null, "committer": null, "parents": [{"sha": "76e5271b9c5a2c3111a80c38784b26895c0fedd4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76e5271b9c5a2c3111a80c38784b26895c0fedd4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/76e5271b9c5a2c3111a80c38784b26895c0fedd4"}], "stats": {"total": 19, "additions": 5, "deletions": 14}, "files": [{"sha": "8c3a2575636d1b5c42ad9dfa92a7c23316e663cf", "filename": "gcc/ada/gcc-interface/gigi.h", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c32d4bcf4a1a99704c542114daea0b08efc76ecc/gcc%2Fada%2Fgcc-interface%2Fgigi.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c32d4bcf4a1a99704c542114daea0b08efc76ecc/gcc%2Fada%2Fgcc-interface%2Fgigi.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fgigi.h?ref=c32d4bcf4a1a99704c542114daea0b08efc76ecc", "patch": "@@ -929,11 +929,6 @@ extern bool default_pass_by_ref (tree gnu_type);\n    if it should be passed by reference.  */\n extern bool must_pass_by_ref (tree gnu_type);\n \n-/* This function is called by the front-end to enumerate all the supported\n-   modes for the machine, as well as some predefined C types.  */\n-extern void enumerate_modes (void (*f) (const char *, int, int, int, int, int,\n-                                        int));\n-\n /* Return the size of the FP mode with precision PREC.  */\n extern int fp_prec_to_size (int prec);\n \n@@ -970,6 +965,11 @@ extern Nat get_target_strict_alignment (void);\n extern Nat get_target_double_float_alignment (void);\n extern Nat get_target_double_scalar_alignment (void);\n \n+/* This function is called by the front-end to enumerate all the supported\n+   modes for the machine, as well as some predefined C types.  */\n+extern void enumerate_modes (void (*f) (const char *, int, int, int, int, int,\n+                                        int));\n+\n #ifdef __cplusplus\n }\n #endif"}, {"sha": "a03bb0fbf35d691ce3a648ad6cd3dfe5b2fc7cec", "filename": "gcc/ada/gcc-interface/misc.c", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c32d4bcf4a1a99704c542114daea0b08efc76ecc/gcc%2Fada%2Fgcc-interface%2Fmisc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c32d4bcf4a1a99704c542114daea0b08efc76ecc/gcc%2Fada%2Fgcc-interface%2Fmisc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fmisc.c?ref=c32d4bcf4a1a99704c542114daea0b08efc76ecc", "patch": "@@ -637,10 +637,6 @@ must_pass_by_ref (tree gnu_type)\n \t      && TREE_CODE (TYPE_SIZE (gnu_type)) != INTEGER_CST));\n }\n \n-#ifdef __cplusplus\n-extern \"C\" {\n-#endif\n-\n /* This function is called by the front-end to enumerate all the supported\n    modes for the machine, as well as some predefined C types.  F is a function\n    which is called back with the parameters as listed below, first a string,\n@@ -759,11 +755,6 @@ enumerate_modes (void (*f) (const char *, int, int, int, int, int, int))\n     }\n }\n \n-#ifdef __cplusplus\n-}\n-#endif\n-\n-\n /* Return the size of the FP mode with precision PREC.  */\n \n int"}]}