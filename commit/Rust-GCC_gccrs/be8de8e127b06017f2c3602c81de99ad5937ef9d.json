{"sha": "be8de8e127b06017f2c3602c81de99ad5937ef9d", "node_id": "C_kwDOANBUbNoAKGJlOGRlOGUxMjdiMDYwMTdmMmMzNjAyYzgxZGU5OWFkNTkzN2VmOWQ", "commit": {"author": {"name": "Yannick Moy", "email": "moy@adacore.com", "date": "2021-11-08T10:53:42Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-12-01T10:24:40Z"}, "message": "[Ada] Add query for extended precision floating-point types\n\ngcc/ada/\n\n\t* sem_util.adb (Is_Extended_Precision_Floating_Point_Type): New\n\tfunction.\n\t* sem_util.ads (Is_Extended_Precision_Floating_Point_Type): New\n\tfunction.", "tree": {"sha": "a96518d3ea1104137e0378bd04b096b4a53bbe7e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a96518d3ea1104137e0378bd04b096b4a53bbe7e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/be8de8e127b06017f2c3602c81de99ad5937ef9d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be8de8e127b06017f2c3602c81de99ad5937ef9d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be8de8e127b06017f2c3602c81de99ad5937ef9d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be8de8e127b06017f2c3602c81de99ad5937ef9d/comments", "author": {"login": "yannickmoy", "id": 859440, "node_id": "MDQ6VXNlcjg1OTQ0MA==", "avatar_url": "https://avatars.githubusercontent.com/u/859440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yannickmoy", "html_url": "https://github.com/yannickmoy", "followers_url": "https://api.github.com/users/yannickmoy/followers", "following_url": "https://api.github.com/users/yannickmoy/following{/other_user}", "gists_url": "https://api.github.com/users/yannickmoy/gists{/gist_id}", "starred_url": "https://api.github.com/users/yannickmoy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yannickmoy/subscriptions", "organizations_url": "https://api.github.com/users/yannickmoy/orgs", "repos_url": "https://api.github.com/users/yannickmoy/repos", "events_url": "https://api.github.com/users/yannickmoy/events{/privacy}", "received_events_url": "https://api.github.com/users/yannickmoy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0f3dfe41cb296ff2a53b6b917aa10ff5a78c24fe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f3dfe41cb296ff2a53b6b917aa10ff5a78c24fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f3dfe41cb296ff2a53b6b917aa10ff5a78c24fe"}], "stats": {"total": 23, "additions": 23, "deletions": 0}, "files": [{"sha": "77302924e114faf25ab6c682e99ac5d41a9cdc6c", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be8de8e127b06017f2c3602c81de99ad5937ef9d/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be8de8e127b06017f2c3602c81de99ad5937ef9d/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=be8de8e127b06017f2c3602c81de99ad5937ef9d", "patch": "@@ -17541,6 +17541,20 @@ package body Sem_Util is\n       end if;\n    end Is_Expression_Function_Or_Completion;\n \n+   -----------------------------------------------\n+   -- Is_Extended_Precision_Floating_Point_Type --\n+   -----------------------------------------------\n+\n+   function Is_Extended_Precision_Floating_Point_Type\n+     (E : Entity_Id) return Boolean is\n+   begin\n+      return Is_Floating_Point_Type (E)\n+        and then Machine_Radix_Value (E) = Uint_2\n+        and then Machine_Mantissa_Value (E) = Uint_64\n+        and then Machine_Emax_Value (E) = Uint_2 ** Uint_14\n+        and then Machine_Emin_Value (E) = Uint_3 - (Uint_2 ** Uint_14);\n+   end Is_Extended_Precision_Floating_Point_Type;\n+\n    -----------------------\n    -- Is_EVF_Expression --\n    -----------------------"}, {"sha": "e251f1ad9fcde3a6a6dbea27726f498b7e8a98eb", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be8de8e127b06017f2c3602c81de99ad5937ef9d/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be8de8e127b06017f2c3602c81de99ad5937ef9d/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=be8de8e127b06017f2c3602c81de99ad5937ef9d", "patch": "@@ -2045,6 +2045,15 @@ package Sem_Util is\n    --  Determine whether subprogram [body] Subp denotes an expression function\n    --  or is completed by an expression function body.\n \n+   function Is_Extended_Precision_Floating_Point_Type\n+     (E : Entity_Id) return Boolean;\n+   --  Return whether E is an extended precision floating point type,\n+   --  characterized by:\n+   --  . machine_radix = 2\n+   --  . machine_mantissa = 64\n+   --  . machine_emax = 2**14\n+   --  . machine_emin = 3 - machine_emax\n+\n    function Is_EVF_Expression (N : Node_Id) return Boolean;\n    --  Determine whether node N denotes a reference to a formal parameter of\n    --  a specific tagged type whose related subprogram is subject to pragma"}]}