{"sha": "94c9b1bb79f63d000ebb05efc155c149325e332d", "node_id": "C_kwDOANBUbNoAKDk0YzliMWJiNzlmNjNkMDAwZWJiMDVlZmMxNTVjMTQ5MzI1ZTMzMmQ", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2023-02-17T14:11:02Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2023-02-24T15:23:15Z"}, "message": "asan: adjust module name for global variables\n\nAs mentioned in the PR, when we use LTO, we wrongly use ltrans output\nfile name as a module name of a global variable. That leads to a\nnon-reproducible output.\n\nAfter the suggested change, we emit context name of normal global\nvariables. And for artificial variables (like .Lubsan_data3), we use\naux_base_name (e.g. \"./a.ltrans0.ltrans\").\n\n\tPR sanitizer/108834\n\ngcc/ChangeLog:\n\n\t* asan.cc (asan_add_global): Use proper TU name for normal\n\tglobal variables (and aux_base_name for the artificial one).\n\ngcc/testsuite/ChangeLog:\n\n\t* c-c++-common/asan/global-overflow-1.c: Test line and column\n\tinfo for a global variable.", "tree": {"sha": "cf5f9112f107f340e88b528490e6e05ca320addf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cf5f9112f107f340e88b528490e6e05ca320addf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/94c9b1bb79f63d000ebb05efc155c149325e332d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94c9b1bb79f63d000ebb05efc155c149325e332d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/94c9b1bb79f63d000ebb05efc155c149325e332d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94c9b1bb79f63d000ebb05efc155c149325e332d/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3d1d3ece9bc5a1baa2feb4bf231b709c097b8434", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d1d3ece9bc5a1baa2feb4bf231b709c097b8434", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d1d3ece9bc5a1baa2feb4bf231b709c097b8434"}], "stats": {"total": 14, "additions": 12, "deletions": 2}, "files": [{"sha": "2424cf69ef1145e3209c0d5be69d55ad189ac8f2", "filename": "gcc/asan.cc", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94c9b1bb79f63d000ebb05efc155c149325e332d/gcc%2Fasan.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94c9b1bb79f63d000ebb05efc155c149325e332d/gcc%2Fasan.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fasan.cc?ref=94c9b1bb79f63d000ebb05efc155c149325e332d", "patch": "@@ -3287,7 +3287,17 @@ asan_add_global (tree decl, tree type, vec<constructor_elt, va_gc> *v)\n     pp_string (&asan_pp, \"<unknown>\");\n   str_cst = asan_pp_string (&asan_pp);\n \n-  pp_string (&module_name_pp, main_input_filename);\n+  if (!in_lto_p)\n+    pp_string (&module_name_pp, main_input_filename);\n+  else\n+    {\n+      const_tree tu = get_ultimate_context ((const_tree)decl);\n+      if (tu != NULL_TREE)\n+\tpp_string (&module_name_pp, IDENTIFIER_POINTER (DECL_NAME (tu)));\n+      else\n+\tpp_string (&module_name_pp, aux_base_name);\n+    }\n+\n   module_name_cst = asan_pp_string (&module_name_pp);\n \n   if (asan_needs_local_alias (decl))"}, {"sha": "7e167cee67af79c7f17b16fc89fdbbf4b46a2b35", "filename": "gcc/testsuite/c-c++-common/asan/global-overflow-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94c9b1bb79f63d000ebb05efc155c149325e332d/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fglobal-overflow-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94c9b1bb79f63d000ebb05efc155c149325e332d/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fglobal-overflow-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fglobal-overflow-1.c?ref=94c9b1bb79f63d000ebb05efc155c149325e332d", "patch": "@@ -26,4 +26,4 @@ int main() {\n /* { dg-output \"READ of size 1 at 0x\\[0-9a-f\\]+ thread T0.*(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"    #0 0x\\[0-9a-f\\]+ +(in _*main (\\[^\\n\\r]*global-overflow-1.c:20|\\[^\\n\\r]*:0|\\[^\\n\\r]*\\\\+0x\\[0-9a-z\\]*)|\\[(\\])\\[^\\n\\r]*(\\n|\\r\\n|\\r).*\" } */\n /* { dg-output \"0x\\[0-9a-f\\]+ is located 0 bytes after global variable\" } */\n-/* { dg-output \".*YYY\\[^\\n\\r]* of size 10\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \".*YYY\\[^\\n\\r]*asan/global-overflow-1.c:15:15'\\[^\\n\\r]*of size 10\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */"}]}