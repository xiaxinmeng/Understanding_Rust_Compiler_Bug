{"sha": "638e8b1f02daca4b7eae8722397409a5cd18ceaa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjM4ZThiMWYwMmRhY2E0YjdlYWU4NzIyMzk3NDA5YTVjZDE4Y2VhYQ==", "commit": {"author": {"name": "David S. Miller", "email": "davem@pierdol.cobaltmicro.com", "date": "1998-08-14T04:30:33Z"}, "committer": {"name": "David S. Miller", "email": "davem@gcc.gnu.org", "date": "1998-08-14T04:30:33Z"}, "message": "rtl.def (CONSTANT_P_RTX): Fix typo in string name.\n\n\t* rtl.def (CONSTANT_P_RTX): Fix typo in string name.\n\t* config/sparc/sparc.md (seqdi_special_trunc, snedi_special_trunc,\n\tseqsi_special_extend, snesi_special_extend, snesi_zero_extend and\n\tsplit, snedi_zero_trunc and split, seqsi_zero_extend and split,\n\tseqdi_zero_trunc and split, pic_lo_sum_di, pic_sethi_di,\n\tmovdi_cc_sp64_trunc, movdi_cc_reg_sp64_trunc, addx_extend_sp32 and\n\tsplit, addx_extend_sp64, subx_extend_sp64, subx_extend and split):\n\tFix mismatching modes in SET operands.\n\t(conditional move patterns): Fix formatting.\n\t(unnamed subx arch64 pattern): Remove duplicate insn.\n\nFrom-SVN: r21725", "tree": {"sha": "1c23a255e21e71d2553c8442106c9d23195dfdf7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1c23a255e21e71d2553c8442106c9d23195dfdf7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/638e8b1f02daca4b7eae8722397409a5cd18ceaa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/638e8b1f02daca4b7eae8722397409a5cd18ceaa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/638e8b1f02daca4b7eae8722397409a5cd18ceaa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/638e8b1f02daca4b7eae8722397409a5cd18ceaa/comments", "author": null, "committer": null, "parents": [{"sha": "9208e4b25c6909de6e7032be427c8be101c14ffd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9208e4b25c6909de6e7032be427c8be101c14ffd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9208e4b25c6909de6e7032be427c8be101c14ffd"}], "stats": {"total": 177, "additions": 92, "deletions": 85}, "files": [{"sha": "cb1ca167a4500b8ca90c0124cb433008f260078e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/638e8b1f02daca4b7eae8722397409a5cd18ceaa/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/638e8b1f02daca4b7eae8722397409a5cd18ceaa/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=638e8b1f02daca4b7eae8722397409a5cd18ceaa", "patch": "@@ -1,3 +1,17 @@\n+Fri Aug 14 01:22:31 1998  David S. Miller  <davem@pierdol.cobaltmicro.com>\n+\n+\t* rtl.def (CONSTANT_P_RTX): Fix typo in string name.\n+\n+\t* config/sparc/sparc.md (seqdi_special_trunc, snedi_special_trunc,\n+\tseqsi_special_extend, snesi_special_extend, snesi_zero_extend and\n+\tsplit, snedi_zero_trunc and split, seqsi_zero_extend and split,\n+\tseqdi_zero_trunc and split, pic_lo_sum_di, pic_sethi_di,\n+\tmovdi_cc_sp64_trunc, movdi_cc_reg_sp64_trunc, addx_extend_sp32 and\n+\tsplit, addx_extend_sp64, subx_extend_sp64, subx_extend and split):\n+\tFix mismatching modes in SET operands.\n+\t(conditional move patterns): Fix formatting.\n+\t(unnamed subx arch64 pattern): Remove duplicate insn.\n+\t\n Fri Aug 14 00:34:34 1998  David S. Miller  <davem@pierdol.cobaltmicro.com>\n \n \t* config/sparc/sparc.c (const64_operand, const64_high_operand):"}, {"sha": "47b10ac9ee92fb4c91a20643aa8c4219df29af8a", "filename": "gcc/config/sparc/sparc.md", "status": "modified", "additions": 78, "deletions": 85, "changes": 163, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/638e8b1f02daca4b7eae8722397409a5cd18ceaa/gcc%2Fconfig%2Fsparc%2Fsparc.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/638e8b1f02daca4b7eae8722397409a5cd18ceaa/gcc%2Fconfig%2Fsparc%2Fsparc.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.md?ref=638e8b1f02daca4b7eae8722397409a5cd18ceaa", "patch": "@@ -709,7 +709,7 @@\n \t(xor:DI (match_operand:DI 1 \"register_operand\" \"\")\n \t\t(match_operand:DI 2 \"register_operand\" \"\")))\n    (set (match_operand:SI 0 \"register_operand\" \"\")\n-\t(eq:DI (match_dup 3) (const_int 0)))]\n+\t(eq:SI (match_dup 3) (const_int 0)))]\n   \"TARGET_ARCH64\"\n   \"{ operands[3] = gen_reg_rtx (DImode); }\")\n \n@@ -718,7 +718,7 @@\n \t(xor:DI (match_operand:DI 1 \"register_operand\" \"\")\n \t\t(match_operand:DI 2 \"register_operand\" \"\")))\n    (set (match_operand:SI 0 \"register_operand\" \"\")\n-\t(ne:DI (match_dup 3) (const_int 0)))]\n+\t(ne:SI (match_dup 3) (const_int 0)))]\n   \"TARGET_ARCH64\"\n   \"{ operands[3] = gen_reg_rtx (DImode); }\")\n \n@@ -727,7 +727,7 @@\n \t(xor:SI (match_operand:SI 1 \"register_operand\" \"\")\n \t\t(match_operand:SI 2 \"register_operand\" \"\")))\n    (parallel [(set (match_operand:DI 0 \"register_operand\" \"\")\n-\t\t   (eq:SI (match_dup 3) (const_int 0)))\n+\t\t   (eq:DI (match_dup 3) (const_int 0)))\n \t      (clobber (reg:CC 100))])]\n   \"TARGET_ARCH64\"\n   \"{ operands[3] = gen_reg_rtx (SImode); }\")\n@@ -737,7 +737,7 @@\n \t(xor:SI (match_operand:SI 1 \"register_operand\" \"\")\n \t\t(match_operand:SI 2 \"register_operand\" \"\")))\n    (parallel [(set (match_operand:DI 0 \"register_operand\" \"\")\n-\t\t   (ne:SI (match_dup 3) (const_int 0)))\n+\t\t   (ne:DI (match_dup 3) (const_int 0)))\n \t      (clobber (reg:CC 100))])]\n   \"TARGET_ARCH64\"\n   \"{ operands[3] = gen_reg_rtx (SImode); }\")\n@@ -1080,7 +1080,7 @@\n \n (define_insn \"*snesi_zero_extend\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n-\t(ne:SI (match_operand:SI 1 \"register_operand\" \"r\")\n+\t(ne:DI (match_operand:SI 1 \"register_operand\" \"r\")\n \t       (const_int 0)))\n    (clobber (reg:CC 100))]\n   \"TARGET_ARCH64\"\n@@ -1090,15 +1090,17 @@\n \n (define_split\n   [(set (match_operand:DI 0 \"register_operand\" \"\")\n-        (ne:SI (match_operand:SI 1 \"register_operand\" \"\")\n+        (ne:DI (match_operand:SI 1 \"register_operand\" \"\")\n                (const_int 0)))\n    (clobber (reg:CC 100))]\n   \"TARGET_ARCH64\n    && reload_completed\"\n-  [(set (reg:CC_NOOV 100) (compare:CC_NOOV (minus (const_int 0) (match_dup 1))\n+  [(set (reg:CC_NOOV 100) (compare:CC_NOOV (minus:SI (const_int 0) (match_dup 1))\n                                            (const_int 0)))\n-   (set (match_dup 0) (minus:SI (minus:SI (const_int 0) (const_int 0))\n-                                (ltu:SI (reg:CC_NOOV 100) (const_int 0))))]\n+   (set (match_dup 0) (zero_extend:DI (minus:SI (minus:SI (const_int 0)\n+                                                          (const_int 0))\n+                                                (ltu:SI (reg:CC_NOOV 100)\n+                                                        (const_int 0)))))]\n   \"\")\n \n (define_insn \"*snedi_zero\"\n@@ -1145,7 +1147,7 @@\n \n (define_insn \"*snedi_zero_trunc\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=&r\")\n-\t(ne:DI (match_operand:DI 1 \"register_operand\" \"r\")\n+\t(ne:SI (match_operand:DI 1 \"register_operand\" \"r\")\n \t       (const_int 0)))]\n   \"TARGET_ARCH64\"\n   \"#\"\n@@ -1154,11 +1156,11 @@\n \n (define_split\n   [(set (match_operand:SI 0 \"register_operand\" \"\")\n-        (ne:DI (match_operand:DI 1 \"register_operand\" \"\")\n+        (ne:SI (match_operand:DI 1 \"register_operand\" \"\")\n                (const_int 0)))]\n   \"TARGET_ARCH64\"\n   [(set (match_dup 0) (const_int 0))\n-   (set (match_dup 0) (if_then_else:DI (ne:DI (match_dup 1)\n+   (set (match_dup 0) (if_then_else:SI (ne:DI (match_dup 1)\n                                               (const_int 0))\n                                        (const_int 1)\n                                        (match_dup 0)))]\n@@ -1206,7 +1208,7 @@\n \n (define_insn \"*seqsi_zero_extend\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n-\t(eq:SI (match_operand:SI 1 \"register_operand\" \"r\")\n+\t(eq:DI (match_operand:SI 1 \"register_operand\" \"r\")\n \t       (const_int 0)))\n    (clobber (reg:CC 100))]\n   \"TARGET_ARCH64\"\n@@ -1216,14 +1218,16 @@\n \n (define_split\n   [(set (match_operand:DI 0 \"register_operand\" \"\")\n-        (eq:SI (match_operand:SI 1 \"register_operand\" \"\")\n+        (eq:DI (match_operand:SI 1 \"register_operand\" \"\")\n                (const_int 0)))\n    (clobber (reg:CC 100))]\n   \"TARGET_ARCH64\"\n   [(set (reg:CC_NOOV 100) (compare:CC_NOOV (minus:SI (const_int 0) (match_dup 1))\n                                            (const_int 0)))\n-   (set (match_dup 0) (minus:SI (minus:SI (const_int 0) (const_int -1))\n-                                (ltu:SI (reg:CC_NOOV 100) (const_int 0))))]\n+   (set (match_dup 0) (zero_extend:DI (minus:SI (minus:SI (const_int 0)\n+                                                          (const_int -1))\n+                                                (ltu:SI (reg:CC_NOOV 100)\n+                                                        (const_int 0)))))]\n   \"\")\n \n (define_insn \"*seqdi_zero\"\n@@ -1270,7 +1274,7 @@\n \n (define_insn \"*seqdi_zero_trunc\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=&r\")\n-\t(eq:DI (match_operand:DI 1 \"register_operand\" \"r\")\n+\t(eq:SI (match_operand:DI 1 \"register_operand\" \"r\")\n \t       (const_int 0)))]\n   \"TARGET_ARCH64\"\n   \"#\"\n@@ -1279,11 +1283,11 @@\n \n (define_split\n   [(set (match_operand:SI 0 \"register_operand\" \"\")\n-        (eq:DI (match_operand:DI 1 \"register_operand\" \"\")\n+        (eq:SI (match_operand:DI 1 \"register_operand\" \"\")\n                (const_int 0)))]\n   \"TARGET_ARCH64\"\n   [(set (match_dup 0) (const_int 0))\n-   (set (match_dup 0) (if_then_else:DI (eq:DI (match_dup 1)\n+   (set (match_dup 0) (if_then_else:SI (eq:DI (match_dup 1)\n                                               (const_int 0))\n                                        (const_int 1)\n                                        (match_dup 0)))]\n@@ -2402,15 +2406,15 @@\n \n (define_insn \"*pic_lo_sum_di\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n-        (lo_sum:SI (match_operand:DI 1 \"register_operand\" \"r\")\n-                   (unspec:SI [(match_operand:DI 2 \"immediate_operand\" \"in\")] 0)))]\n+        (lo_sum:DI (match_operand:DI 1 \"register_operand\" \"r\")\n+                   (unspec:DI [(match_operand:DI 2 \"immediate_operand\" \"in\")] 0)))]\n   \"TARGET_ARCH64 && flag_pic\"\n   \"or\\\\t%1, %%lo(%a2), %0\"\n   [(set_attr \"length\" \"1\")])\n \n (define_insn \"*pic_sethi_di\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n-        (high:SI (unspec:SI [(match_operand 1 \"\" \"\")] 0)))]\n+        (high:DI (unspec:DI [(match_operand 1 \"\" \"\")] 0)))]\n   \"TARGET_ARCH64 && flag_pic && check_pic (1)\"\n   \"sethi\\\\t%%hi(%a1), %0\"\n   [(set_attr \"type\" \"move\")\n@@ -3456,8 +3460,8 @@\n \t(if_then_else:QI (match_operator 1 \"comparison_operator\"\n \t\t\t\t[(match_operand 2 \"icc_or_fcc_reg_operand\" \"X,X\")\n \t\t\t\t (const_int 0)])\n-\t\t      (match_operand:QI 3 \"arith11_operand\" \"rL,0\")\n-\t\t      (match_operand:QI 4 \"arith11_operand\" \"0,rL\")))]\n+                         (match_operand:QI 3 \"arith11_operand\" \"rL,0\")\n+                         (match_operand:QI 4 \"arith11_operand\" \"0,rL\")))]\n   \"TARGET_V9\"\n   \"@\n    mov%C1\\\\t%x2, %3, %0\n@@ -3470,8 +3474,8 @@\n \t(if_then_else:HI (match_operator 1 \"comparison_operator\"\n \t\t\t\t[(match_operand 2 \"icc_or_fcc_reg_operand\" \"X,X\")\n \t\t\t\t (const_int 0)])\n-\t\t      (match_operand:HI 3 \"arith11_operand\" \"rL,0\")\n-\t\t      (match_operand:HI 4 \"arith11_operand\" \"0,rL\")))]\n+                         (match_operand:HI 3 \"arith11_operand\" \"rL,0\")\n+                         (match_operand:HI 4 \"arith11_operand\" \"0,rL\")))]\n   \"TARGET_V9\"\n   \"@\n    mov%C1\\\\t%x2, %3, %0\n@@ -3484,8 +3488,8 @@\n \t(if_then_else:SI (match_operator 1 \"comparison_operator\"\n \t\t\t\t[(match_operand 2 \"icc_or_fcc_reg_operand\" \"X,X\")\n \t\t\t\t (const_int 0)])\n-\t\t      (match_operand:SI 3 \"arith11_operand\" \"rL,0\")\n-\t\t      (match_operand:SI 4 \"arith11_operand\" \"0,rL\")))]\n+                         (match_operand:SI 3 \"arith11_operand\" \"rL,0\")\n+                         (match_operand:SI 4 \"arith11_operand\" \"0,rL\")))]\n   \"TARGET_V9\"\n   \"@\n    mov%C1\\\\t%x2, %3, %0\n@@ -3499,8 +3503,8 @@\n \t(if_then_else:DI (match_operator 1 \"comparison_operator\"\n \t\t\t\t[(match_operand 2 \"icc_or_fcc_reg_operand\" \"X,X\")\n \t\t\t\t (const_int 0)])\n-\t\t      (match_operand:DI 3 \"arith11_double_operand\" \"rLH,0\")\n-\t\t      (match_operand:DI 4 \"arith11_double_operand\" \"0,rLH\")))]\n+                         (match_operand:DI 3 \"arith11_double_operand\" \"rLH,0\")\n+                         (match_operand:DI 4 \"arith11_double_operand\" \"0,rLH\")))]\n   \"TARGET_ARCH64\"\n   \"@\n    mov%C1\\\\t%x2, %3, %0\n@@ -3510,11 +3514,11 @@\n \n (define_insn \"*movdi_cc_sp64_trunc\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r,r\")\n-\t(if_then_else:DI (match_operator 1 \"comparison_operator\"\n+\t(if_then_else:SI (match_operator 1 \"comparison_operator\"\n \t\t\t\t[(match_operand 2 \"icc_or_fcc_reg_operand\" \"X,X\")\n \t\t\t\t (const_int 0)])\n-\t\t      (match_operand:SI 3 \"arith11_double_operand\" \"rLH,0\")\n-\t\t      (match_operand:SI 4 \"arith11_double_operand\" \"0,rLH\")))]\n+                         (match_operand:SI 3 \"arith11_double_operand\" \"rLH,0\")\n+                         (match_operand:SI 4 \"arith11_double_operand\" \"0,rLH\")))]\n   \"TARGET_ARCH64\"\n   \"@\n    mov%C1\\\\t%x2, %3, %0\n@@ -3527,8 +3531,8 @@\n \t(if_then_else:SF (match_operator 1 \"comparison_operator\"\n \t\t\t\t[(match_operand 2 \"icc_or_fcc_reg_operand\" \"X,X\")\n \t\t\t\t (const_int 0)])\n-\t\t      (match_operand:SF 3 \"register_operand\" \"f,0\")\n-\t\t      (match_operand:SF 4 \"register_operand\" \"0,f\")))]\n+                         (match_operand:SF 3 \"register_operand\" \"f,0\")\n+                         (match_operand:SF 4 \"register_operand\" \"0,f\")))]\n   \"TARGET_V9 && TARGET_FPU\"\n   \"@\n    fmovs%C1\\\\t%x2, %3, %0\n@@ -3541,8 +3545,8 @@\n \t(if_then_else:DF (match_operator 1 \"comparison_operator\"\n \t\t\t\t[(match_operand 2 \"icc_or_fcc_reg_operand\" \"X,X\")\n \t\t\t\t (const_int 0)])\n-\t\t      (match_operand:DF 3 \"register_operand\" \"e,0\")\n-\t\t      (match_operand:DF 4 \"register_operand\" \"0,e\")))]\n+                         (match_operand:DF 3 \"register_operand\" \"e,0\")\n+                         (match_operand:DF 4 \"register_operand\" \"0,e\")))]\n   \"TARGET_V9 && TARGET_FPU\"\n   \"@\n    fmovd%C1\\\\t%x2, %3, %0\n@@ -3555,8 +3559,8 @@\n \t(if_then_else:TF (match_operator 1 \"comparison_operator\"\n \t\t\t\t[(match_operand 2 \"icc_or_fcc_reg_operand\" \"X,X\")\n \t\t\t\t (const_int 0)])\n-\t\t      (match_operand:TF 3 \"register_operand\" \"e,0\")\n-\t\t      (match_operand:TF 4 \"register_operand\" \"0,e\")))]\n+                         (match_operand:TF 3 \"register_operand\" \"e,0\")\n+                         (match_operand:TF 4 \"register_operand\" \"0,e\")))]\n   \"TARGET_V9 && TARGET_FPU && TARGET_HARD_QUAD\"\n   \"@\n    fmovq%C1\\\\t%x2, %3, %0\n@@ -3569,8 +3573,8 @@\n \t(if_then_else:QI (match_operator 1 \"v9_regcmp_op\"\n \t\t\t\t[(match_operand:DI 2 \"register_operand\" \"r,r\")\n \t\t\t\t (const_int 0)])\n-\t\t      (match_operand:QI 3 \"arith10_operand\" \"rM,0\")\n-\t\t      (match_operand:QI 4 \"arith10_operand\" \"0,rM\")))]\n+                         (match_operand:QI 3 \"arith10_operand\" \"rM,0\")\n+                         (match_operand:QI 4 \"arith10_operand\" \"0,rM\")))]\n   \"TARGET_ARCH64\"\n   \"@\n    movr%D1\\\\t%2, %r3, %0\n@@ -3583,8 +3587,8 @@\n \t(if_then_else:HI (match_operator 1 \"v9_regcmp_op\"\n \t\t\t\t[(match_operand:DI 2 \"register_operand\" \"r,r\")\n \t\t\t\t (const_int 0)])\n-\t\t      (match_operand:HI 3 \"arith10_operand\" \"rM,0\")\n-\t\t      (match_operand:HI 4 \"arith10_operand\" \"0,rM\")))]\n+                         (match_operand:HI 3 \"arith10_operand\" \"rM,0\")\n+                         (match_operand:HI 4 \"arith10_operand\" \"0,rM\")))]\n   \"TARGET_ARCH64\"\n   \"@\n    movr%D1\\\\t%2, %r3, %0\n@@ -3597,8 +3601,8 @@\n \t(if_then_else:SI (match_operator 1 \"v9_regcmp_op\"\n \t\t\t\t[(match_operand:DI 2 \"register_operand\" \"r,r\")\n \t\t\t\t (const_int 0)])\n-\t\t      (match_operand:SI 3 \"arith10_operand\" \"rM,0\")\n-\t\t      (match_operand:SI 4 \"arith10_operand\" \"0,rM\")))]\n+                         (match_operand:SI 3 \"arith10_operand\" \"rM,0\")\n+                         (match_operand:SI 4 \"arith10_operand\" \"0,rM\")))]\n   \"TARGET_ARCH64\"\n   \"@\n    movr%D1\\\\t%2, %r3, %0\n@@ -3612,8 +3616,8 @@\n \t(if_then_else:DI (match_operator 1 \"v9_regcmp_op\"\n \t\t\t\t[(match_operand:DI 2 \"register_operand\" \"r,r\")\n \t\t\t\t (const_int 0)])\n-\t\t      (match_operand:DI 3 \"arith10_double_operand\" \"rMH,0\")\n-\t\t      (match_operand:DI 4 \"arith10_double_operand\" \"0,rMH\")))]\n+                         (match_operand:DI 3 \"arith10_double_operand\" \"rMH,0\")\n+                         (match_operand:DI 4 \"arith10_double_operand\" \"0,rMH\")))]\n   \"TARGET_ARCH64\"\n   \"@\n    movr%D1\\\\t%2, %r3, %0\n@@ -3623,11 +3627,11 @@\n \n (define_insn \"*movdi_cc_reg_sp64_trunc\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r,r\")\n-\t(if_then_else:DI (match_operator 1 \"v9_regcmp_op\"\n+\t(if_then_else:SI (match_operator 1 \"v9_regcmp_op\"\n \t\t\t\t[(match_operand:DI 2 \"register_operand\" \"r,r\")\n \t\t\t\t (const_int 0)])\n-\t\t      (match_operand:SI 3 \"arith10_double_operand\" \"rMH,0\")\n-\t\t      (match_operand:SI 4 \"arith10_double_operand\" \"0,rMH\")))]\n+                         (match_operand:SI 3 \"arith10_double_operand\" \"rMH,0\")\n+                         (match_operand:SI 4 \"arith10_double_operand\" \"0,rMH\")))]\n   \"TARGET_ARCH64\"\n   \"@\n    movr%D1\\\\t%2, %r3, %0\n@@ -3640,8 +3644,8 @@\n \t(if_then_else:SF (match_operator 1 \"v9_regcmp_op\"\n \t\t\t\t[(match_operand:DI 2 \"register_operand\" \"r,r\")\n \t\t\t\t (const_int 0)])\n-\t\t      (match_operand:SF 3 \"register_operand\" \"f,0\")\n-\t\t      (match_operand:SF 4 \"register_operand\" \"0,f\")))]\n+                         (match_operand:SF 3 \"register_operand\" \"f,0\")\n+                         (match_operand:SF 4 \"register_operand\" \"0,f\")))]\n   \"TARGET_ARCH64 && TARGET_FPU\"\n   \"@\n    fmovrs%D1\\\\t%2, %3, %0\n@@ -3654,8 +3658,8 @@\n \t(if_then_else:DF (match_operator 1 \"v9_regcmp_op\"\n \t\t\t\t[(match_operand:DI 2 \"register_operand\" \"r,r\")\n \t\t\t\t (const_int 0)])\n-\t\t      (match_operand:DF 3 \"register_operand\" \"e,0\")\n-\t\t      (match_operand:DF 4 \"register_operand\" \"0,e\")))]\n+                         (match_operand:DF 3 \"register_operand\" \"e,0\")\n+                         (match_operand:DF 4 \"register_operand\" \"0,e\")))]\n   \"TARGET_ARCH64 && TARGET_FPU\"\n   \"@\n    fmovrd%D1\\\\t%2, %3, %0\n@@ -3668,8 +3672,8 @@\n \t(if_then_else:TF (match_operator 1 \"v9_regcmp_op\"\n \t\t\t\t[(match_operand:DI 2 \"register_operand\" \"r,r\")\n \t\t\t\t (const_int 0)])\n-\t\t      (match_operand:TF 3 \"register_operand\" \"e,0\")\n-\t\t      (match_operand:TF 4 \"register_operand\" \"0,e\")))]\n+                         (match_operand:TF 3 \"register_operand\" \"e,0\")\n+                         (match_operand:TF 4 \"register_operand\" \"0,e\")))]\n   \"TARGET_ARCH64 && TARGET_FPU\"\n   \"@\n    fmovrq%D1\\\\t%2, %3, %0\n@@ -4454,19 +4458,19 @@\n \n (define_insn \"*addx_extend_sp32\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n-\t(plus:SI (plus:SI (match_operand:SI 1 \"reg_or_0_operand\" \"%rJ\")\n-\t\t\t  (match_operand:SI 2 \"arith_operand\" \"rI\"))\n-\t\t (ltu:SI (reg:CC_NOOV 100) (const_int 0))))]\n+\t(zero_extend:DI (plus:SI (plus:SI (match_operand:SI 1 \"reg_or_0_operand\" \"%rJ\")\n+                                          (match_operand:SI 2 \"arith_operand\" \"rI\"))\n+                                 (ltu:SI (reg:CC_NOOV 100) (const_int 0)))))]\n   \"! TARGET_ARCH64\"\n   \"#\"\n   [(set_attr \"type\" \"unary\")\n    (set_attr \"length\" \"2\")])\n \n (define_split\n   [(set (match_operand:DI 0 \"register_operand\" \"\")\n-\t(plus:SI (plus:SI (match_operand:SI 1 \"reg_or_0_operand\" \"\")\n-\t\t\t  (match_operand:SI 2 \"arith_operand\" \"\"))\n-\t\t (ltu:SI (reg:CC_NOOV 100) (const_int 0))))]\n+\t(zero_extend:DI (plus:SI (plus:SI (match_operand:SI 1 \"reg_or_0_operand\" \"\")\n+                                          (match_operand:SI 2 \"arith_operand\" \"\"))\n+                                 (ltu:SI (reg:CC_NOOV 100) (const_int 0)))))]\n   \"! TARGET_ARCH64 && reload_completed\"\n   [(set (match_dup 3) (plus:SI (plus:SI (match_dup 1) (match_dup 2))\n                                (ltu:SI (reg:CC_NOOV 100) (const_int 0))))\n@@ -4476,9 +4480,9 @@\n \n (define_insn \"*addx_extend_sp64\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n-\t(plus:SI (plus:SI (match_operand:SI 1 \"reg_or_0_operand\" \"%rJ\")\n-\t\t\t  (match_operand:SI 2 \"arith_operand\" \"rI\"))\n-\t\t (ltu:SI (reg:CC_NOOV 100) (const_int 0))))]\n+\t(zero_extend:DI (plus:SI (plus:SI (match_operand:SI 1 \"reg_or_0_operand\" \"%rJ\")\n+                                          (match_operand:SI 2 \"arith_operand\" \"rI\"))\n+                                 (ltu:SI (reg:CC_NOOV 100) (const_int 0)))))]\n   \"TARGET_ARCH64\"\n   \"addx\\\\t%r1, %2, %0\"\n   [(set_attr \"type\" \"unary\")\n@@ -4496,47 +4500,36 @@\n \n (define_insn \"*subx_extend_sp64\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n-\t(minus:SI (minus:SI (match_operand:SI 1 \"reg_or_0_operand\" \"rJ\")\n-\t\t\t    (match_operand:SI 2 \"arith_operand\" \"rI\"))\n-\t\t  (ltu:SI (reg:CC_NOOV 100) (const_int 0))))]\n+\t(zero_extend:DI (minus:SI (minus:SI (match_operand:SI 1 \"reg_or_0_operand\" \"rJ\")\n+                                            (match_operand:SI 2 \"arith_operand\" \"rI\"))\n+                                  (ltu:SI (reg:CC_NOOV 100) (const_int 0)))))]\n   \"TARGET_ARCH64\"\n   \"subx\\\\t%r1, %2, %0\"\n   [(set_attr \"type\" \"unary\")\n    (set_attr \"length\" \"1\")])\n \n (define_insn \"*subx_extend\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n-\t(minus:SI (minus:SI (match_operand:SI 1 \"reg_or_0_operand\" \"rJ\")\n-\t\t\t    (match_operand:SI 2 \"arith_operand\" \"rI\"))\n-\t\t  (ltu:SI (reg:CC_NOOV 100) (const_int 0))))]\n+\t(zero_extend:DI (minus:SI (minus:SI (match_operand:SI 1 \"reg_or_0_operand\" \"rJ\")\n+                                            (match_operand:SI 2 \"arith_operand\" \"rI\"))\n+                                  (ltu:SI (reg:CC_NOOV 100) (const_int 0)))))]\n   \"! TARGET_ARCH64\"\n   \"#\"\n   [(set_attr \"type\" \"unary\")\n    (set_attr \"length\" \"2\")])\n \n (define_split\n   [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n-\t(minus:SI (minus:SI (match_operand:SI 1 \"reg_or_0_operand\" \"rJ\")\n-\t\t\t    (match_operand:SI 2 \"arith_operand\" \"rI\"))\n-\t\t  (ltu:SI (reg:CC_NOOV 100) (const_int 0))))]\n+\t(zero_extend:DI (minus:SI (minus:SI (match_operand:SI 1 \"reg_or_0_operand\" \"rJ\")\n+                                            (match_operand:SI 2 \"arith_operand\" \"rI\"))\n+                                  (ltu:SI (reg:CC_NOOV 100) (const_int 0)))))]\n   \"! TARGET_ARCH64 && reload_completed\"\n   [(set (match_dup 3) (minus:SI (minus:SI (match_dup 1) (match_dup 2))\n                                 (ltu:SI (reg:CC_NOOV 100) (const_int 0))))\n    (set (match_dup 4) (const_int 0))]\n   \"operands[3] = gen_lowpart (SImode, operands[0]);\n    operands[4] = gen_highpart (SImode, operands[0]);\")\n \n-;; This is only for splits at the moment.\n-(define_insn \"\"\n-  [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n-        (minus:SI (minus:SI (match_operand:SI 1 \"reg_or_0_operand\" \"rJ\")\n-                            (match_operand:SI 2 \"arith_operand\" \"rI\"))\n-                  (ltu:SI (reg:CC_NOOV 100) (const_int 0))))]\n-  \"TARGET_ARCH64\"\n-  \"subx\\\\t%r1, %2, %0\"\n-  [(set_attr \"type\" \"unary\")\n-   (set_attr \"length\" \"1\")])\n-\n (define_insn \"\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n         (plus:DI (zero_extend:DI (match_operand:SI 1 \"register_operand\" \"r\"))"}]}