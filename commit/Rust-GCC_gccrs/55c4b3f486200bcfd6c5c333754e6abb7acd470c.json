{"sha": "55c4b3f486200bcfd6c5c333754e6abb7acd470c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTVjNGIzZjQ4NjIwMGJjZmQ2YzVjMzMzNzU0ZTZhYmI3YWNkNDcwYw==", "commit": {"author": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2020-02-24T21:09:48Z"}, "committer": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2020-02-25T18:04:32Z"}, "message": "libstdc++: LWG 3313 join_view::iterator::operator-- is incorrectly constrained\n\nlibstdc++-v3/ChangeLog:\n\n\tLWG 3313 join_view::_Iterator::operator-- is incorrectly constrained\n\t* include/std/ranges (join_view::_Iterator::operator--): Require that\n\trange_reference_t<_Base> models common_range.\n\t* testsuite/std/ranges/adaptors/lwg3313_neg.cc: New test.", "tree": {"sha": "da068e1e69e8656eb96dba11cc52c3f98297358c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/da068e1e69e8656eb96dba11cc52c3f98297358c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/55c4b3f486200bcfd6c5c333754e6abb7acd470c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55c4b3f486200bcfd6c5c333754e6abb7acd470c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/55c4b3f486200bcfd6c5c333754e6abb7acd470c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55c4b3f486200bcfd6c5c333754e6abb7acd470c/comments", "author": null, "committer": null, "parents": [{"sha": "510bd1c178f3719df7148dd584d30acc2595dc3c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/510bd1c178f3719df7148dd584d30acc2595dc3c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/510bd1c178f3719df7148dd584d30acc2595dc3c"}], "stats": {"total": 47, "additions": 47, "deletions": 0}, "files": [{"sha": "1bb2f3dfaf4e4cb52a5675b27f410ff6a91d982b", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55c4b3f486200bcfd6c5c333754e6abb7acd470c/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55c4b3f486200bcfd6c5c333754e6abb7acd470c/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=55c4b3f486200bcfd6c5c333754e6abb7acd470c", "patch": "@@ -1,5 +1,10 @@\n 2020-02-25  Patrick Palka  <ppalka@redhat.com>\n \n+\tLWG 3313 join_view::_Iterator::operator-- is incorrectly constrained\n+\t* include/std/ranges (join_view::_Iterator::operator--): Require that\n+\trange_reference_t<_Base> models common_range.\n+\t* testsuite/std/ranges/adaptors/lwg3313_neg.cc: New test.\n+\n \tLWG 3301 transform_view::_Iterator has incorrect iterator_category\n \t* include/std/ranges (transform_view::_Iterator::_S_iter_cat): Adjust\n \tdetermination of iterator_category as per LWG 3301."}, {"sha": "ffdd3367b05b98ec19679f1554998049cf36ea64", "filename": "libstdc++-v3/include/std/ranges", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55c4b3f486200bcfd6c5c333754e6abb7acd470c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Franges", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55c4b3f486200bcfd6c5c333754e6abb7acd470c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Franges", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Franges?ref=55c4b3f486200bcfd6c5c333754e6abb7acd470c", "patch": "@@ -2399,6 +2399,7 @@ namespace views\n \t  operator--()\n \t    requires _S_ref_is_glvalue && bidirectional_range<_Base>\n \t      && bidirectional_range<range_reference_t<_Base>>\n+\t      && common_range<range_reference_t<_Base>>\n \t  {\n \t    if (_M_outer == ranges::end(_M_parent->_M_base))\n \t      _M_inner = ranges::end(*--_M_outer);\n@@ -2412,6 +2413,7 @@ namespace views\n \t  operator--(int)\n \t    requires _S_ref_is_glvalue && bidirectional_range<_Base>\n \t      && bidirectional_range<range_reference_t<_Base>>\n+\t      && common_range<range_reference_t<_Base>>\n \t  {\n \t    auto __tmp = *this;\n \t    --*this;"}, {"sha": "054df92554bbb00910d0f0cb4e16ca36b2a132a4", "filename": "libstdc++-v3/testsuite/std/ranges/adaptors/lwg3313_neg.cc", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55c4b3f486200bcfd6c5c333754e6abb7acd470c/libstdc%2B%2B-v3%2Ftestsuite%2Fstd%2Franges%2Fadaptors%2Flwg3313_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55c4b3f486200bcfd6c5c333754e6abb7acd470c/libstdc%2B%2B-v3%2Ftestsuite%2Fstd%2Franges%2Fadaptors%2Flwg3313_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fstd%2Franges%2Fadaptors%2Flwg3313_neg.cc?ref=55c4b3f486200bcfd6c5c333754e6abb7acd470c", "patch": "@@ -0,0 +1,40 @@\n+// Copyright (C) 2020 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-std=gnu++2a\" }\n+// { dg-do compile { target c++2a } }\n+\n+#include <array>\n+#include <iterator>\n+#include <ranges>\n+\n+namespace ranges = std::ranges;\n+namespace views = std::views;\n+\n+void\n+test01()\n+{\n+  int x[] = {1};\n+  auto rx = ranges::subrange{std::counted_iterator(x,1), std::default_sentinel};\n+  std::array<decltype(rx), 5> y = {rx, rx, rx, rx, rx,};\n+  auto v = y | views::join;\n+  auto i = v.begin();\n+  ++i;\n+  ++i;\n+  --i; // { dg-error \"no match\" }\n+  i--; // { dg-error \"\" }\n+}"}]}