{"sha": "1a19a3e4e92c8266f48833e119dd9fd724311753", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWExOWEzZTRlOTJjODI2NmY0ODgzM2UxMTlkZDlmZDcyNDMxMTc1Mw==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2012-10-22T08:59:10Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2012-10-22T08:59:10Z"}, "message": "decl.c (gnat_to_gnu_entity): Force BLKmode on the type if it is passed by reference.\n\n\t* gcc-interface/decl.c (gnat_to_gnu_entity) <E_Array_Type>: Force\n\tBLKmode on the type if it is passed by reference.\n\t<E_Array_Subtype>: Likewise.\n\t<E_Record_Type>: Guard the call to Is_By_Reference_Type predicate.\n\t<E_Record_Subtype>: Likewise.\n\nFrom-SVN: r192673", "tree": {"sha": "b4edfe63c13ba50aadaf34b2256bcf2e6040a10b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b4edfe63c13ba50aadaf34b2256bcf2e6040a10b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1a19a3e4e92c8266f48833e119dd9fd724311753", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a19a3e4e92c8266f48833e119dd9fd724311753", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a19a3e4e92c8266f48833e119dd9fd724311753", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a19a3e4e92c8266f48833e119dd9fd724311753/comments", "author": null, "committer": null, "parents": [{"sha": "f58e663b1ea246625e72635e8c0cffcdfae571da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f58e663b1ea246625e72635e8c0cffcdfae571da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f58e663b1ea246625e72635e8c0cffcdfae571da"}], "stats": {"total": 28, "additions": 24, "deletions": 4}, "files": [{"sha": "e330321e22cc922831e6df665d60f900bf863209", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a19a3e4e92c8266f48833e119dd9fd724311753/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a19a3e4e92c8266f48833e119dd9fd724311753/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=1a19a3e4e92c8266f48833e119dd9fd724311753", "patch": "@@ -1,3 +1,11 @@\n+2012-10-22  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/decl.c (gnat_to_gnu_entity) <E_Array_Type>: Force\n+\tBLKmode on the type if it is passed by reference.\n+\t<E_Array_Subtype>: Likewise.\n+\t<E_Record_Type>: Guard the call to Is_By_Reference_Type predicate.\n+\t<E_Record_Subtype>: Likewise.\n+\n 2012-10-22  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/utils.c (rest_of_record_type_compilation): Simplify and"}, {"sha": "dfefff2e7a71f9d897ef05b42ed4eaed72a427b3", "filename": "gcc/ada/gcc-interface/decl.c", "status": "modified", "additions": 16, "deletions": 4, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a19a3e4e92c8266f48833e119dd9fd724311753/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a19a3e4e92c8266f48833e119dd9fd724311753/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fdecl.c?ref=1a19a3e4e92c8266f48833e119dd9fd724311753", "patch": "@@ -2248,6 +2248,12 @@ gnat_to_gnu_entity (Entity_Id gnat_entity, tree gnu_expr, int definition)\n \t    TYPE_MULTI_ARRAY_P (tem) = (index > 0);\n \t    if (array_type_has_nonaliased_component (tem, gnat_entity))\n \t      TYPE_NONALIASED_COMPONENT (tem) = 1;\n+\n+\t    /* If it is passed by reference, force BLKmode to ensure that\n+\t       objects of this type will always be put in memory.  */\n+\t    if (TYPE_MODE (tem) != BLKmode\n+\t\t&& Is_By_Reference_Type (gnat_entity))\n+\t      SET_TYPE_MODE (tem, BLKmode);\n \t  }\n \n \t/* If an alignment is specified, use it if valid.  But ignore it\n@@ -2588,6 +2594,11 @@ gnat_to_gnu_entity (Entity_Id gnat_entity, tree gnu_expr, int definition)\n \t      TYPE_MULTI_ARRAY_P (gnu_type) = (index > 0);\n \t      if (array_type_has_nonaliased_component (gnu_type, gnat_entity))\n \t\tTYPE_NONALIASED_COMPONENT (gnu_type) = 1;\n+\n+\t      /* See the E_Array_Type case for the rationale.  */\n+\t      if (TYPE_MODE (gnu_type) != BLKmode\n+\t\t  && Is_By_Reference_Type (gnat_entity))\n+\t\tSET_TYPE_MODE (gnu_type, BLKmode);\n \t    }\n \n \t  /* Attach the TYPE_STUB_DECL in case we have a parallel type.  */\n@@ -3161,7 +3172,8 @@ gnat_to_gnu_entity (Entity_Id gnat_entity, tree gnu_expr, int definition)\n \n \t/* If it is passed by reference, force BLKmode to ensure that objects\n \t   of this type will always be put in memory.  */\n-\tif (Is_By_Reference_Type (gnat_entity))\n+\tif (TYPE_MODE (gnu_type) != BLKmode\n+\t    && Is_By_Reference_Type (gnat_entity))\n \t  SET_TYPE_MODE (gnu_type, BLKmode);\n \n \t/* We used to remove the associations of the discriminants and _Parent\n@@ -3527,12 +3539,12 @@ gnat_to_gnu_entity (Entity_Id gnat_entity, tree gnu_expr, int definition)\n \t\t modify it below.  */\n \t      finish_record_type (gnu_type, nreverse (gnu_field_list), 2,\n \t\t\t\t  false);\n+\t      compute_record_mode (gnu_type);\n \n \t      /* See the E_Record_Type case for the rationale.  */\n-\t      if (Is_By_Reference_Type (gnat_entity))\n+\t      if (TYPE_MODE (gnu_type) != BLKmode\n+\t\t  && Is_By_Reference_Type (gnat_entity))\n \t\tSET_TYPE_MODE (gnu_type, BLKmode);\n-\t      else\n-\t\tcompute_record_mode (gnu_type);\n \n \t      TYPE_VOLATILE (gnu_type) = Treat_As_Volatile (gnat_entity);\n "}]}