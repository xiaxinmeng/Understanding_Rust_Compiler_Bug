{"sha": "2a39c42a42cdea4a8962b9e140b88e0051894f38", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmEzOWM0MmE0MmNkZWE0YTg5NjJiOWUxNDBiODhlMDA1MTg5NGYzOA==", "commit": {"author": {"name": "Kewen Lin", "email": "linkw@linux.ibm.com", "date": "2020-07-09T03:27:41Z"}, "committer": {"name": "Kewen Lin", "email": "linkw@linux.ibm.com", "date": "2020-07-09T07:23:42Z"}, "message": "vect: Enhance condition check to use partial vectors\n\nThis patch is derived from the review of vector with length patch\nseries.  The length-based partial vector approach doesn't support\nreduction so far, so we would like to disable vectorization with\npartial vectors explicitly for it in vectorizable_condition.\nOtherwise, it will cause some unexpected failures for a few cases\nlike gcc.dg/vect/pr65947-2.c.\n\nBut if we disable it for the cases excepting for reduction_type equal\nto EXTRACT_LAST_REDUCTION, it cause one regression failure on aarch64:\n\n  gcc.target/aarch64/sve/reduc_8.c -march=armv8.2-a+sve\n\nThe disabling makes the outer loop can't work with partial vectors,\nthe check fails.  But the case is safe to adopt it.  As Richard S.\npointed out in the review comments, the extra inactive lanes only\nmatter for double reductions, so this patch is to permit vectorization\nwith partial vectors for cases EXTRACT_LAST_REDUCTION or nested-cycle\nreduction.\n\nBootstrapped/regtested on aarch64-linux-gnu.\n\ngcc/ChangeLog:\n\n\t* tree-vect-stmts.c (vectorizable_condition): Prohibit vectorization\n\twith partial vectors explicitly excepting for EXTRACT_LAST_REDUCTION\n\tor nested-cycle reduction.", "tree": {"sha": "4c638fd1a50d266774838974eab175006fbbd2f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4c638fd1a50d266774838974eab175006fbbd2f4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2a39c42a42cdea4a8962b9e140b88e0051894f38", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a39c42a42cdea4a8962b9e140b88e0051894f38", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a39c42a42cdea4a8962b9e140b88e0051894f38", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a39c42a42cdea4a8962b9e140b88e0051894f38/comments", "author": {"login": "jedilyn", "id": 38515402, "node_id": "MDQ6VXNlcjM4NTE1NDAy", "avatar_url": "https://avatars.githubusercontent.com/u/38515402?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jedilyn", "html_url": "https://github.com/jedilyn", "followers_url": "https://api.github.com/users/jedilyn/followers", "following_url": "https://api.github.com/users/jedilyn/following{/other_user}", "gists_url": "https://api.github.com/users/jedilyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/jedilyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jedilyn/subscriptions", "organizations_url": "https://api.github.com/users/jedilyn/orgs", "repos_url": "https://api.github.com/users/jedilyn/repos", "events_url": "https://api.github.com/users/jedilyn/events{/privacy}", "received_events_url": "https://api.github.com/users/jedilyn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jedilyn", "id": 38515402, "node_id": "MDQ6VXNlcjM4NTE1NDAy", "avatar_url": "https://avatars.githubusercontent.com/u/38515402?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jedilyn", "html_url": "https://github.com/jedilyn", "followers_url": "https://api.github.com/users/jedilyn/followers", "following_url": "https://api.github.com/users/jedilyn/following{/other_user}", "gists_url": "https://api.github.com/users/jedilyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/jedilyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jedilyn/subscriptions", "organizations_url": "https://api.github.com/users/jedilyn/orgs", "repos_url": "https://api.github.com/users/jedilyn/repos", "events_url": "https://api.github.com/users/jedilyn/events{/privacy}", "received_events_url": "https://api.github.com/users/jedilyn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "23fb9e7c1c403a256b158fdfc97f7f32f636d3d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23fb9e7c1c403a256b158fdfc97f7f32f636d3d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/23fb9e7c1c403a256b158fdfc97f7f32f636d3d0"}], "stats": {"total": 21, "additions": 16, "deletions": 5}, "files": [{"sha": "5eae74e8042ef53a360145e27c9a0a5e0d2bd980", "filename": "gcc/tree-vect-stmts.c", "status": "modified", "additions": 16, "deletions": 5, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a39c42a42cdea4a8962b9e140b88e0051894f38/gcc%2Ftree-vect-stmts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a39c42a42cdea4a8962b9e140b88e0051894f38/gcc%2Ftree-vect-stmts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-stmts.c?ref=2a39c42a42cdea4a8962b9e140b88e0051894f38", "patch": "@@ -9876,11 +9876,22 @@ vectorizable_condition (vec_info *vinfo,\n \t  return false;\n \t}\n \n-      if (loop_vinfo\n-\t  && LOOP_VINFO_CAN_USE_PARTIAL_VECTORS_P (loop_vinfo)\n-\t  && reduction_type == EXTRACT_LAST_REDUCTION)\n-\tvect_record_loop_mask (loop_vinfo, &LOOP_VINFO_MASKS (loop_vinfo),\n-\t\t\t       ncopies * vec_num, vectype, NULL);\n+      if (loop_vinfo && for_reduction\n+\t  && LOOP_VINFO_CAN_USE_PARTIAL_VECTORS_P (loop_vinfo))\n+\t{\n+\t  if (reduction_type == EXTRACT_LAST_REDUCTION)\n+\t    vect_record_loop_mask (loop_vinfo, &LOOP_VINFO_MASKS (loop_vinfo),\n+\t\t\t\t   ncopies * vec_num, vectype, NULL);\n+\t  /* Extra inactive lanes should be safe for vect_nested_cycle.  */\n+\t  else if (STMT_VINFO_DEF_TYPE (reduc_info) != vect_nested_cycle)\n+\t    {\n+\t      if (dump_enabled_p ())\n+\t\tdump_printf_loc (MSG_MISSED_OPTIMIZATION, vect_location,\n+\t\t\t\t \"conditional reduction prevents the use\"\n+\t\t\t\t \" of partial vectors.\\n\");\n+\t      LOOP_VINFO_CAN_USE_PARTIAL_VECTORS_P (loop_vinfo) = false;\n+\t    }\n+\t}\n \n       STMT_VINFO_TYPE (stmt_info) = condition_vec_info_type;\n       vect_model_simple_cost (vinfo, stmt_info, ncopies, dts, ndts, slp_node,"}]}