{"sha": "1aee688e8a8973f17bb6f8e742ce42dc5c3c3316", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWFlZTY4OGU4YTg5NzNmMTdiYjZmOGU3NDJjZTQyZGM1YzNjMzMxNg==", "commit": {"author": {"name": "Eric Christopher", "email": "echristo@gcc.gnu.org", "date": "2004-09-09T23:57:19Z"}, "committer": {"name": "Eric Christopher", "email": "echristo@gcc.gnu.org", "date": "2004-09-09T23:57:19Z"}, "message": "ra-colorize.c (reset_lists): Move variable declaration inside ENABLE_CHECKING to avoid unused variable...\n\n2004-09-09  Eric Christopher  <echristo@redhat.com>\n\n\t* ra-colorize.c (reset_lists): Move variable declaration inside\n\tENABLE_CHECKING to avoid unused variable warnings when\n\tnot --enable-checking.\n\t(check_colors): Ditto.\n\nFrom-SVN: r87262", "tree": {"sha": "4b0cedb76131b1bdddcf9ce9906afb2c55e18908", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4b0cedb76131b1bdddcf9ce9906afb2c55e18908"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1aee688e8a8973f17bb6f8e742ce42dc5c3c3316", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1aee688e8a8973f17bb6f8e742ce42dc5c3c3316", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1aee688e8a8973f17bb6f8e742ce42dc5c3c3316", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1aee688e8a8973f17bb6f8e742ce42dc5c3c3316/comments", "author": null, "committer": null, "parents": [{"sha": "693ff889740046f8fc820993b89eab1589be65d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/693ff889740046f8fc820993b89eab1589be65d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/693ff889740046f8fc820993b89eab1589be65d7"}], "stats": {"total": 45, "additions": 29, "deletions": 16}, "files": [{"sha": "e1d5834ad6ee23d9f8d07a9ef26097668c177581", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1aee688e8a8973f17bb6f8e742ce42dc5c3c3316/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1aee688e8a8973f17bb6f8e742ce42dc5c3c3316/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1aee688e8a8973f17bb6f8e742ce42dc5c3c3316", "patch": "@@ -1,3 +1,10 @@\n+2004-09-09  Eric Christopher  <echristo@redhat.com>\n+\n+\t* ra-colorize.c (reset_lists): Move variable declaration inside\n+\tENABLE_CHECKING to avoid unused variable warnings when\n+\tnot --enable-checking.\n+\t(check_colors): Ditto.\n+\n 2004-09-09  Mike Stump  <mrs@apple.com>\n \n \t* version.c (version_string): Bump to 4.0.0.\n@@ -25,7 +32,7 @@\n \n 2004-09-09  Ulrich Weigand  <uweigand@de.ibm.com>\n \n-\t* reload.c (find_reloads_address): Pass correct operand to \n+\t* reload.c (find_reloads_address): Pass correct operand to\n \tmaybe_memory_address_p.\n \n 2004-09-09  Daniel Berlin  <dberlin@dberlin.org>\n@@ -55,7 +62,7 @@\n \t(dump_alias_stats): Ditto.\n \t* doc/passes.texi: Remove blurb about points-to analysis.\n \t* fortran/Make-lang.in: Remove tree-alias-*.o.\n-\t\n+\n 2004-09-09  Richard Sandiford  <rsandifo@redhat.com>\n \n \t* genattrtab.c (write_insn_cases): New function, split out from"}, {"sha": "fe963e4273cf3cd13acd4ec46a2d047775aa4139", "filename": "gcc/ra-colorize.c", "status": "modified", "additions": 20, "deletions": 14, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1aee688e8a8973f17bb6f8e742ce42dc5c3c3316/gcc%2Fra-colorize.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1aee688e8a8973f17bb6f8e742ce42dc5c3c3316/gcc%2Fra-colorize.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fra-colorize.c?ref=1aee688e8a8973f17bb6f8e742ce42dc5c3c3316", "patch": "@@ -210,7 +210,6 @@ void\n reset_lists (void)\n {\n   struct dlist *d;\n-  unsigned int i;\n \n   gcc_assert (!WEBS(SIMPLIFY));\n   gcc_assert (!WEBS(SIMPLIFY_SPILL));\n@@ -249,13 +248,17 @@ reset_lists (void)\n \n #ifdef ENABLE_CHECKING\n   /* Sanity check, that we only have free, initial or precolored webs. */\n-  for (i = 0; i < num_webs; i++)\n-    {\n-      struct web *web = ID2WEB (i);\n-      \n-      gcc_assert (web->type == INITIAL || web->type == FREE\n-\t\t  || web->type == PRECOLORED);\n-    }\n+  {\n+    unsigned int i;\n+\n+    for (i = 0; i < num_webs; i++)\n+      {\n+\tstruct web *web = ID2WEB (i);\n+\n+\tgcc_assert (web->type == INITIAL || web->type == FREE\n+\t\t    || web->type == PRECOLORED);\n+      }\n+  }\n #endif\n   free_dlist (&mv_worklist);\n   free_dlist (&mv_coalesced);\n@@ -1260,7 +1263,7 @@ colorize_one_web (struct web *web, int hard)\n   HARD_REG_SET bias;\n \n   CLEAR_HARD_REG_SET (fat_colors);\n-  \n+\n   if (web->regno >= max_normal_pseudo)\n     hard = 0;\n \n@@ -1973,11 +1976,11 @@ check_colors (void)\n       struct web *web = id2web[i];\n       struct web *aweb = alias (web);\n       struct conflict_link *wl;\n-      int nregs, c;\n+      int nregs;\n \n       if (web->regno >= max_normal_pseudo)\n \tcontinue;\n-      \n+\n       switch (aweb->type)\n \t{\n \tcase SPILLED:\n@@ -1996,9 +1999,12 @@ check_colors (void)\n \t}\n \n #ifdef ENABLE_CHECKING\n-      /* The color must be valid for the original usable_regs.  */\n-      for (c = 0; c < nregs; c++)\n-\tgcc_assert (TEST_HARD_REG_BIT (web->usable_regs, aweb->color + c));\n+\t/* The color must be valid for the original usable_regs.  */\n+      {\n+\tint c;\n+\tfor (c = 0; c < nregs; c++)\n+\t  gcc_assert (TEST_HARD_REG_BIT (web->usable_regs, aweb->color + c));\n+      }\n #endif\n       /* Search the original (pre-coalesce) conflict list.  In the current\n \t one some imprecise conflicts may be noted (due to combine() or"}]}