{"sha": "cd9241442943f1c74800669f4b8a23cee2f7d261", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2Q5MjQxNDQyOTQzZjFjNzQ4MDA2NjlmNGI4YTIzY2VlMmY3ZDI2MQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2010-01-28T22:52:36Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2010-01-28T22:52:36Z"}, "message": "re PR c++/42880 (trunk does not compile boost MPL)\n\n\tPR c++/42880\n\t* semantics.c (begin_class_definition): Don't use type_as_string.\n\nFrom-SVN: r156336", "tree": {"sha": "e37846e09e6f5d0a027f06c6fbbeadfb8d8bbd0e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e37846e09e6f5d0a027f06c6fbbeadfb8d8bbd0e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cd9241442943f1c74800669f4b8a23cee2f7d261", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd9241442943f1c74800669f4b8a23cee2f7d261", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd9241442943f1c74800669f4b8a23cee2f7d261", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd9241442943f1c74800669f4b8a23cee2f7d261/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a2fe92030ce71454f728bc2e102a320b462b3bbc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2fe92030ce71454f728bc2e102a320b462b3bbc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a2fe92030ce71454f728bc2e102a320b462b3bbc"}], "stats": {"total": 24, "additions": 18, "deletions": 6}, "files": [{"sha": "c104e864eb7f0a9403402da6daae71b4dbbf79e7", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd9241442943f1c74800669f4b8a23cee2f7d261/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd9241442943f1c74800669f4b8a23cee2f7d261/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=cd9241442943f1c74800669f4b8a23cee2f7d261", "patch": "@@ -1,3 +1,8 @@\n+2010-01-28  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/42880\n+\t* semantics.c (begin_class_definition): Don't use type_as_string.\n+\n 2010-01-28  Dodji Seketeli  <dodji@redhat.com>\n \n \tPR c++/42713"}, {"sha": "441081c3d96010b8a297101220a35aac8d914e82", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 13, "deletions": 6, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd9241442943f1c74800669f4b8a23cee2f7d261/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd9241442943f1c74800669f4b8a23cee2f7d261/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=cd9241442943f1c74800669f4b8a23cee2f7d261", "patch": "@@ -2371,13 +2371,20 @@ begin_class_definition (tree t, tree attributes)\n \n   /* According to the C++ ABI, decimal classes defined in ISO/IEC TR 24733\n      are passed the same as decimal scalar types.  */\n-  if (TREE_CODE (t) == RECORD_TYPE)\n+  if (TREE_CODE (t) == RECORD_TYPE\n+      && !processing_template_decl)\n     {\n-      const char *n = type_as_string (t, TFF_CLASS_KEY_OR_ENUM);\n-      if ((strcmp (n, \"class std::decimal::decimal32\") == 0)\n-\t  || (strcmp (n, \"class std::decimal::decimal64\") == 0)\n-\t  || (strcmp (n, \"class std::decimal::decimal128\") == 0))\n-\tTYPE_TRANSPARENT_AGGR (t) = 1;\n+      tree ns = TYPE_CONTEXT (t);\n+      if (ns && TREE_CODE (ns) == NAMESPACE_DECL\n+\t  && DECL_CONTEXT (ns) == std_node\n+\t  && !strcmp (IDENTIFIER_POINTER (DECL_NAME (ns)), \"decimal\"))\n+\t{\n+\t  const char *n = TYPE_NAME_STRING (t);\n+\t  if ((strcmp (n, \"decimal32\") == 0)\n+\t      || (strcmp (n, \"decimal64\") == 0)\n+\t      || (strcmp (n, \"decimal128\") == 0))\n+\t    TYPE_TRANSPARENT_AGGR (t) = 1;\n+\t}\n     }\n \n   /* A non-implicit typename comes from code like:"}]}