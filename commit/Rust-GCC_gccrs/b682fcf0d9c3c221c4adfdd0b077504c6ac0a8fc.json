{"sha": "b682fcf0d9c3c221c4adfdd0b077504c6ac0a8fc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjY4MmZjZjBkOWMzYzIyMWM0YWRmZGQwYjA3NzUwNGM2YWMwYThmYw==", "commit": {"author": {"name": "Olivier Hainque", "email": "hainque@adacore.com", "date": "2018-05-23T10:23:09Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-05-23T10:23:09Z"}, "message": "[Ada] Add a Is_Foreign_Exception predicate to GNAT.Exception_Actions\n\nUseful to check if an occurrence caught by a \"when others\" choice originates\nfrom a foreign language, e.g. C++.\n\n2018-05-23  Olivier Hainque  <hainque@adacore.com>\n\ngcc/ada/\n\n\t* libgnat/g-excact.ads (Is_Foreign_Exception): New predicate.\n\t* libgnat/g-excact.adb: Implement.\n\nFrom-SVN: r260588", "tree": {"sha": "cf83ccb7dcb04c4941be53b51cf9c020640b608c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cf83ccb7dcb04c4941be53b51cf9c020640b608c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b682fcf0d9c3c221c4adfdd0b077504c6ac0a8fc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b682fcf0d9c3c221c4adfdd0b077504c6ac0a8fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b682fcf0d9c3c221c4adfdd0b077504c6ac0a8fc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b682fcf0d9c3c221c4adfdd0b077504c6ac0a8fc/comments", "author": {"login": "hainque", "id": 18735142, "node_id": "MDQ6VXNlcjE4NzM1MTQy", "avatar_url": "https://avatars.githubusercontent.com/u/18735142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hainque", "html_url": "https://github.com/hainque", "followers_url": "https://api.github.com/users/hainque/followers", "following_url": "https://api.github.com/users/hainque/following{/other_user}", "gists_url": "https://api.github.com/users/hainque/gists{/gist_id}", "starred_url": "https://api.github.com/users/hainque/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hainque/subscriptions", "organizations_url": "https://api.github.com/users/hainque/orgs", "repos_url": "https://api.github.com/users/hainque/repos", "events_url": "https://api.github.com/users/hainque/events{/privacy}", "received_events_url": "https://api.github.com/users/hainque/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ac450fb2ab71dfd5bc57ea60bc00cc749d7485af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac450fb2ab71dfd5bc57ea60bc00cc749d7485af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac450fb2ab71dfd5bc57ea60bc00cc749d7485af"}], "stats": {"total": 28, "additions": 26, "deletions": 2}, "files": [{"sha": "92bfea2d0d67c94da30c8ab48c6e1b23be55f5ba", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b682fcf0d9c3c221c4adfdd0b077504c6ac0a8fc/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b682fcf0d9c3c221c4adfdd0b077504c6ac0a8fc/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=b682fcf0d9c3c221c4adfdd0b077504c6ac0a8fc", "patch": "@@ -1,3 +1,8 @@\n+2018-05-23  Olivier Hainque  <hainque@adacore.com>\n+\n+\t* libgnat/g-excact.ads (Is_Foreign_Exception): New predicate.\n+\t* libgnat/g-excact.adb: Implement.\n+\n 2018-05-23  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem_ch5.adb (Analyze_Iterator_Specification): If a subtype indication"}, {"sha": "c70ecab7537325bc3f7e694f9828eb59821666a1", "filename": "gcc/ada/libgnat/g-excact.adb", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b682fcf0d9c3c221c4adfdd0b077504c6ac0a8fc/gcc%2Fada%2Flibgnat%2Fg-excact.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b682fcf0d9c3c221c4adfdd0b077504c6ac0a8fc/gcc%2Fada%2Flibgnat%2Fg-excact.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fg-excact.adb?ref=b682fcf0d9c3c221c4adfdd0b077504c6ac0a8fc", "patch": "@@ -91,6 +91,19 @@ package body GNAT.Exception_Actions is\n \n    procedure Core_Dump (Occurrence : Exception_Occurrence) is separate;\n \n+   --------------------------\n+   -- Is_Foreign_Exception --\n+   --------------------------\n+\n+   function Is_Foreign_Exception (E : Exception_Occurrence) return Boolean is\n+      Foreign_Exception : aliased Exception_Data;\n+      pragma Import\n+        (Ada, Foreign_Exception, \"system__exceptions__foreign_exception\");\n+   begin\n+      return (To_Data (Exception_Identity (E))\n+                = Foreign_Exception'Unchecked_Access);\n+   end Is_Foreign_Exception;\n+\n    ----------------\n    -- Name_To_Id --\n    ----------------"}, {"sha": "dd75bb9150389ecfe6a3935f5c0f62097c8154cc", "filename": "gcc/ada/libgnat/g-excact.ads", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b682fcf0d9c3c221c4adfdd0b077504c6ac0a8fc/gcc%2Fada%2Flibgnat%2Fg-excact.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b682fcf0d9c3c221c4adfdd0b077504c6ac0a8fc/gcc%2Fada%2Flibgnat%2Fg-excact.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fg-excact.ads?ref=b682fcf0d9c3c221c4adfdd0b077504c6ac0a8fc", "patch": "@@ -29,9 +29,11 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This package provides support for callbacks on exceptions\n+--  This package provides support for callbacks on exceptions as well as\n+--  exception-related utility subprograms of possible interest together with\n+--  exception actions or more generally.\n \n---  These callbacks are called immediately when either a specific exception,\n+--  The callbacks are called immediately when either a specific exception,\n --  or any exception, is raised, before any other actions taken by raise, in\n --  particular before any unwinding of the stack occurs.\n \n@@ -85,6 +87,10 @@ package GNAT.Exception_Actions is\n    --  Note: All non-predefined exceptions will return Null_Id for programs\n    --  compiled with pragma Restriction (No_Exception_Registration)\n \n+   function Is_Foreign_Exception (E : Exception_Occurrence) return Boolean;\n+   --  Tell whether the exception occurrence E represents a foreign exception,\n+   --  such as one raised in C++ and caught by a when others choice in Ada.\n+\n    function Registered_Exceptions_Count return Natural;\n    --  Return the number of exceptions that have been registered so far.\n    --  Exceptions declared locally will not appear in this list until their"}]}