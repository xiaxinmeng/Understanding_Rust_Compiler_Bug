{"sha": "9b3cf76aa1ee3383c1371f992fbdb2991e6e11d4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWIzY2Y3NmFhMWVlMzM4M2MxMzcxZjk5MmZiZGIyOTkxZTZlMTFkNA==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2010-05-15T20:48:58Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2010-05-15T20:48:58Z"}, "message": "ipa-prop.c (ipa_prop_read_section): Add sanity check that node is analyzed.\n\n\n\t* ipa-prop.c (ipa_prop_read_section): Add sanity check that node is analyzed.\n\t* passes.c (ipa_write_summaries): Write all analyzed nodes.\n\nFrom-SVN: r159444", "tree": {"sha": "bac92573320331b8a3a6b4dc3b62266932f51d6f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bac92573320331b8a3a6b4dc3b62266932f51d6f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9b3cf76aa1ee3383c1371f992fbdb2991e6e11d4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b3cf76aa1ee3383c1371f992fbdb2991e6e11d4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b3cf76aa1ee3383c1371f992fbdb2991e6e11d4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b3cf76aa1ee3383c1371f992fbdb2991e6e11d4/comments", "author": null, "committer": null, "parents": [{"sha": "1f9109426d0b24206fd90c1b46f73bf9f5ee0685", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f9109426d0b24206fd90c1b46f73bf9f5ee0685", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f9109426d0b24206fd90c1b46f73bf9f5ee0685"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "e294679596188e51859da0f9ebc0a30b2ec19891", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b3cf76aa1ee3383c1371f992fbdb2991e6e11d4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b3cf76aa1ee3383c1371f992fbdb2991e6e11d4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9b3cf76aa1ee3383c1371f992fbdb2991e6e11d4", "patch": "@@ -1,3 +1,8 @@\n+2010-05-15  Jan Hubicka  <jh@suse.cz>\n+\n+\t* ipa-prop.c (ipa_prop_read_section): Add sanity check that node is analyzed.\n+\t* passes.c (ipa_write_summaries): Write all analyzed nodes.\n+\n 2010-05-15  Steven Bosscher  <steven@gcc.gnu.org>\n \n \t* vecir.h: New file with VEC primitives for tree, gimple, and rtl."}, {"sha": "3f80df0e4b31fbfb851db924799f894083291365", "filename": "gcc/ipa-prop.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b3cf76aa1ee3383c1371f992fbdb2991e6e11d4/gcc%2Fipa-prop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b3cf76aa1ee3383c1371f992fbdb2991e6e11d4/gcc%2Fipa-prop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-prop.c?ref=9b3cf76aa1ee3383c1371f992fbdb2991e6e11d4", "patch": "@@ -2140,6 +2140,7 @@ ipa_prop_read_section (struct lto_file_decl_data *file_data, const char *data,\n       index = lto_input_uleb128 (&ib_main);\n       encoder = file_data->cgraph_node_encoder;\n       node = lto_cgraph_encoder_deref (encoder, index);\n+      gcc_assert (node->analyzed);\n       ipa_read_node_info (&ib_main, node, data_in);\n     }\n   lto_free_section_data (file_data, LTO_section_jump_functions, NULL, data,"}, {"sha": "4767c59b044b5ba9a49ba266fc10390b36ad391c", "filename": "gcc/passes.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b3cf76aa1ee3383c1371f992fbdb2991e6e11d4/gcc%2Fpasses.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b3cf76aa1ee3383c1371f992fbdb2991e6e11d4/gcc%2Fpasses.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpasses.c?ref=9b3cf76aa1ee3383c1371f992fbdb2991e6e11d4", "patch": "@@ -1748,7 +1748,7 @@ ipa_write_summaries (void)\n \t  renumber_gimple_stmt_uids ();\n \t  pop_cfun ();\n \t}\n-      if (node->needed || node->reachable || node->address_taken)\n+      if (node->analyzed)\n \tcgraph_node_set_add (set, node);\n     }\n   vset = varpool_node_set_new ();"}]}