{"sha": "58ed456cb63fd2c47ef6f792e366184a19de7ad4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NThlZDQ1NmNiNjNmZDJjNDdlZjZmNzkyZTM2NjE4NGExOWRlN2FkNA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2015-03-05T08:43:13Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2015-03-05T08:43:13Z"}, "message": "re PR ipa/65270 (issues with merging memory accesses from different code paths)\n\n2015-03-05  Richard Biener  <rguenther@suse.de>\n\n\tPR ipa/65270\n\t* ipa-icf-gimple.c (func_checker::compare_memory_operand):\n\tCompare dependence info.\n\nFrom-SVN: r221204", "tree": {"sha": "ad667ca422096dfb4edaba7918f77ac8678165b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ad667ca422096dfb4edaba7918f77ac8678165b2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/58ed456cb63fd2c47ef6f792e366184a19de7ad4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58ed456cb63fd2c47ef6f792e366184a19de7ad4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/58ed456cb63fd2c47ef6f792e366184a19de7ad4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58ed456cb63fd2c47ef6f792e366184a19de7ad4/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b3406fa08329fc0510fdb83a6b200040fc30bc7d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3406fa08329fc0510fdb83a6b200040fc30bc7d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b3406fa08329fc0510fdb83a6b200040fc30bc7d"}], "stats": {"total": 23, "additions": 23, "deletions": 0}, "files": [{"sha": "a50a378044e590ea1f8802d187aa2749e8efb96f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58ed456cb63fd2c47ef6f792e366184a19de7ad4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58ed456cb63fd2c47ef6f792e366184a19de7ad4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=58ed456cb63fd2c47ef6f792e366184a19de7ad4", "patch": "@@ -1,3 +1,9 @@\n+2015-03-05  Richard Biener  <rguenther@suse.de>\n+\n+\tPR ipa/65270\n+\t* ipa-icf-gimple.c (func_checker::compare_memory_operand):\n+\tCompare dependence info.\n+\n 2015-03-05  Richard Biener  <rguenther@suse.de>\n \n \tPR middle-end/65233"}, {"sha": "4f1a8ce6e95307059a17da1ad498529d3b73225a", "filename": "gcc/ipa-icf-gimple.c", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58ed456cb63fd2c47ef6f792e366184a19de7ad4/gcc%2Fipa-icf-gimple.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58ed456cb63fd2c47ef6f792e366184a19de7ad4/gcc%2Fipa-icf-gimple.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-icf-gimple.c?ref=58ed456cb63fd2c47ef6f792e366184a19de7ad4", "patch": "@@ -305,6 +305,23 @@ func_checker::compare_memory_operand (tree t1, tree t2)\n       get_object_alignment_1 (b2, &align2, &tem);\n       if (align1 != align2)\n \treturn return_false_with_msg (\"different access alignment\");\n+\n+      /* Similarly we have to compare dependence info where equality\n+         tells us we are safe (even some unequal values would be safe\n+\t but then we have to maintain a map of bases and cliques).  */\n+      unsigned short clique1 = 0, base1 = 0, clique2 = 0, base2 = 0;\n+      if (TREE_CODE (b1) == MEM_REF)\n+\t{\n+\t  clique1 = MR_DEPENDENCE_CLIQUE (b1);\n+\t  base1 = MR_DEPENDENCE_BASE (b1);\n+\t}\n+      if (TREE_CODE (b2) == MEM_REF)\n+\t{\n+\t  clique2 = MR_DEPENDENCE_CLIQUE (b2);\n+\t  base2 = MR_DEPENDENCE_BASE (b2);\n+\t}\n+      if (clique1 != clique2 || base1 != base2)\n+\treturn return_false_with_msg (\"different dependence info\");\n     }\n \n   return compare_operand (t1, t2);"}]}