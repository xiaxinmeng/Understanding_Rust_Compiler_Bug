{"sha": "976e7ef1a2d54f46021f74d071d9fdb9631298f8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTc2ZTdlZjFhMmQ1NGY0NjAyMWY3NGQwNzFkOWZkYjk2MzEyOThmOA==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2020-10-24T19:26:27Z"}, "committer": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2020-10-28T21:26:45Z"}, "message": "c++: Prevent warnings for value-dependent exprs [PR96742]\n\nHere, in r11-155, I changed the call to uses_template_parms to\ntype_dependent_expression_p_push to avoid a crash in C++98 in\nvalue_dependent_expression_p on a non-constant expression.  But that\nprompted a host of complaints that we now warn for value-dependent\nexpressions in templates.  Those warnings are technically valid, but\npeople still don't want them because they're awkward to avoid.  This\npatch uses value_dependent_expression_p or type_dependent_expression_p.\nBut make sure that we don't ICE in value_dependent_expression_p by\nchecking potential_constant_expression first.\n\ngcc/cp/ChangeLog:\n\n\tPR c++/96675\n\tPR c++/96742\n\t* pt.c (tsubst_copy_and_build): Call value_dependent_expression_p or\n\ttype_dependent_expression_p instead of type_dependent_expression_p_push.\n\tBut only call value_dependent_expression_p for expressions that are\n\tpotential_constant_expression.\n\ngcc/testsuite/ChangeLog:\n\n\tPR c++/96675\n\tPR c++/96742\n\t* g++.dg/warn/Wdiv-by-zero-3.C: Turn dg-warning into dg-bogus.\n\t* g++.dg/warn/Wtautological-compare3.C: New test.\n\t* g++.dg/warn/Wtype-limits5.C: New test.\n\t* g++.old-deja/g++.pt/crash10.C: Remove dg-warning.", "tree": {"sha": "b75d70aa7e586590846694b818893cb4e165703d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b75d70aa7e586590846694b818893cb4e165703d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/976e7ef1a2d54f46021f74d071d9fdb9631298f8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/976e7ef1a2d54f46021f74d071d9fdb9631298f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/976e7ef1a2d54f46021f74d071d9fdb9631298f8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/976e7ef1a2d54f46021f74d071d9fdb9631298f8/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "122f0db27933e6e34e073c9c4d27a10801652ebd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/122f0db27933e6e34e073c9c4d27a10801652ebd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/122f0db27933e6e34e073c9c4d27a10801652ebd"}], "stats": {"total": 36, "additions": 31, "deletions": 5}, "files": [{"sha": "b0344ac2506be6613825a518a78e57b629e07b58", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/976e7ef1a2d54f46021f74d071d9fdb9631298f8/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/976e7ef1a2d54f46021f74d071d9fdb9631298f8/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=976e7ef1a2d54f46021f74d071d9fdb9631298f8", "patch": "@@ -19616,8 +19616,11 @@ tsubst_copy_and_build (tree t,\n       {\n \t/* If T was type-dependent, suppress warnings that depend on the range\n \t   of the types involved.  */\n-\tbool was_dep = type_dependent_expression_p_push (t);\n-\n+\t++processing_template_decl;\n+\tconst bool was_dep = (potential_constant_expression (t)\n+\t\t\t      ? value_dependent_expression_p (t)\n+\t\t\t      : type_dependent_expression_p (t));\n+\t--processing_template_decl;\n \ttree op0 = RECUR (TREE_OPERAND (t, 0));\n \ttree op1 = RECUR (TREE_OPERAND (t, 1));\n "}, {"sha": "01f691f287803d8b6ee9ffd3b0e5992b27323763", "filename": "gcc/testsuite/g++.dg/warn/Wdiv-by-zero-3.C", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/976e7ef1a2d54f46021f74d071d9fdb9631298f8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWdiv-by-zero-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/976e7ef1a2d54f46021f74d071d9fdb9631298f8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWdiv-by-zero-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWdiv-by-zero-3.C?ref=976e7ef1a2d54f46021f74d071d9fdb9631298f8", "patch": "@@ -5,8 +5,10 @@ foo (T t, int i)\n {\n   int m1 = 10 / t;\n   int m2 = 10 / i;\n-  int m3 = 10 / (sizeof(T) - sizeof(int)); // { dg-warning \"division by\" }\n-  int m4 = 10 / N; // { dg-warning \"division by\" }\n+  // People don't want to see warnings for type- or value-dependent\n+  // expressions.\n+  int m3 = 10 / (sizeof(T) - sizeof(int)); // { dg-bogus \"division by\" }\n+  int m4 = 10 / N; // { dg-bogus \"division by\" }\n   return m1 + m2 + m3 + m4;\n }\n "}, {"sha": "89bf1b619a6368296cccc40cf1194b02b7c10d5a", "filename": "gcc/testsuite/g++.dg/warn/Wtautological-compare3.C", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/976e7ef1a2d54f46021f74d071d9fdb9631298f8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWtautological-compare3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/976e7ef1a2d54f46021f74d071d9fdb9631298f8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWtautological-compare3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWtautological-compare3.C?ref=976e7ef1a2d54f46021f74d071d9fdb9631298f8", "patch": "@@ -0,0 +1,11 @@\n+// PR c++/96675\n+// { dg-do compile { target c++11 } }\n+// { dg-additional-options \"-Wtautological-compare\" }\n+\n+template<char c>\n+constexpr bool f(char d) {\n+    return 'a' <= c && c <= 'z' ? (d | 0x20) == c :\n+        'A' <= c && c <= 'Z' ? (d & ~0x20) == c :\n+        d == c;\n+}\n+static_assert(f<'p'>('P'), \"\");"}, {"sha": "5e79123b622fbb257e6af69585ac1636dcb49bdb", "filename": "gcc/testsuite/g++.dg/warn/Wtype-limits5.C", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/976e7ef1a2d54f46021f74d071d9fdb9631298f8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWtype-limits5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/976e7ef1a2d54f46021f74d071d9fdb9631298f8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWtype-limits5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWtype-limits5.C?ref=976e7ef1a2d54f46021f74d071d9fdb9631298f8", "patch": "@@ -0,0 +1,11 @@\n+// PR c++/96742\n+// { dg-additional-options \"-Wtype-limits\" }\n+\n+template <unsigned N>\n+bool f(unsigned x) {\n+    return unsigned(x < N);\n+}\n+\n+int main() {\n+    f<0>(1);\n+}"}, {"sha": "a84b19004eed4b82c02ce8869b10c131baaae0b5", "filename": "gcc/testsuite/g++.old-deja/g++.pt/crash10.C", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/976e7ef1a2d54f46021f74d071d9fdb9631298f8/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fcrash10.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/976e7ef1a2d54f46021f74d071d9fdb9631298f8/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fcrash10.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fcrash10.C?ref=976e7ef1a2d54f46021f74d071d9fdb9631298f8", "patch": "@@ -6,7 +6,6 @@ public:\n   enum { val = (N == 0) ? M : GCD<N, M % N>::val };\n // { dg-error \"constant expression\" \"valid\" { target *-*-* } .-1 }\n // { dg-message \"template argument\" \"valid\" { target *-*-* } .-2 }\n-// { dg-warning \"division by\" \"\" { target *-*-* } .-3 }\n };\n \n int main() {"}]}