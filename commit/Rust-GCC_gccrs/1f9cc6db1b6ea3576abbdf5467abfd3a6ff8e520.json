{"sha": "1f9cc6db1b6ea3576abbdf5467abfd3a6ff8e520", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWY5Y2M2ZGIxYjZlYTM1NzZhYmJkZjU0NjdhYmZkM2E2ZmY4ZTUyMA==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2003-06-20T09:08:23Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2003-06-20T09:08:23Z"}, "message": "tree.h (expand_function_end): Remove all parameters.\n\n\t* tree.h (expand_function_end): Remove all parameters.\n\t* function.c (expand_function_end): Remove all parameters.\n\tUse input_location. Never expand_end_bindings.\n\t* c-decl.c (c_expand_body_1): Adjust expand_function_end call.\n\t* coverage.c (create_coverage): Likewise.\n\n\t* ada/utils.c (end_subprog_body): Adjust expand_function_end\n\tcall.\n\n\t* cp/semantics.c (genrtl_finish_function): Adjust\n\texpand_function_end call.\n\n\t* f/com.c (finish_function): Adjust expand_function_end call.\n\n\t* java/class.c (push_class): Use a location_t to save place.\n\t(emit_register_classes): Set input_location. Adjust\n\texpand_function_end call.\n\t* java/resource.c (write_resource_constructor): Likewise.\n\t* java/decl.c (end_java_method): Adjust expand_function_end call.\n\t* java/parse.y (source_end_java_method): Likewise.\n\n\t* treelang/treetree.c (tree_code_create_function_wrapup): Adjust\n\texpand_function_end call.\n\nFrom-SVN: r68255", "tree": {"sha": "525f454b1423c8bdd021bc73e0febafbe12942c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/525f454b1423c8bdd021bc73e0febafbe12942c5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1f9cc6db1b6ea3576abbdf5467abfd3a6ff8e520", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f9cc6db1b6ea3576abbdf5467abfd3a6ff8e520", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f9cc6db1b6ea3576abbdf5467abfd3a6ff8e520", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f9cc6db1b6ea3576abbdf5467abfd3a6ff8e520/comments", "author": null, "committer": null, "parents": [{"sha": "bbdfb3e8216ef29c48e73a530fe75dba987af6bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bbdfb3e8216ef29c48e73a530fe75dba987af6bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bbdfb3e8216ef29c48e73a530fe75dba987af6bf"}], "stats": {"total": 87, "additions": 57, "deletions": 30}, "files": [{"sha": "ba28ad2a5c5a6cfa9d7725cdb0f82212b0c0f13e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f9cc6db1b6ea3576abbdf5467abfd3a6ff8e520/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f9cc6db1b6ea3576abbdf5467abfd3a6ff8e520/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1f9cc6db1b6ea3576abbdf5467abfd3a6ff8e520", "patch": "@@ -1,3 +1,11 @@\n+2003-06-20  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* tree.h (expand_function_end): Remove all parameters.\n+\t* function.c (expand_function_end): Remove all parameters.\n+\tUse input_location. Never expand_end_bindings.\n+\t* c-decl.c (c_expand_body_1): Adjust expand_function_end call.\n+\t* coverage.c (create_coverage): Likewise.\n+\n 2003-06-20  Nick Clifton  <nickc@redhat.com>\n \n \t* doc/extend.texi (ARM Built-in Functions): New node.  Document"}, {"sha": "1fd2a5b37552bb354e0534c7a9e55dde906a79f4", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f9cc6db1b6ea3576abbdf5467abfd3a6ff8e520/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f9cc6db1b6ea3576abbdf5467abfd3a6ff8e520/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=1f9cc6db1b6ea3576abbdf5467abfd3a6ff8e520", "patch": "@@ -1,3 +1,7 @@\n+2003-06-20  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* utils.c (end_subprog_body): Adjust expand_function_end call.\n+\n 2003-06-16  Matt Kraai  <kraai@alumni.cmu.edu>\n \n \t* bindgen.adb (Gen_Main_Ada, Gen_Main_C): Do not test"}, {"sha": "186b0fdb175ee8fb724c53fd67ba43bb581c9d6b", "filename": "gcc/ada/utils.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f9cc6db1b6ea3576abbdf5467abfd3a6ff8e520/gcc%2Fada%2Futils.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f9cc6db1b6ea3576abbdf5467abfd3a6ff8e520/gcc%2Fada%2Futils.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Futils.c?ref=1f9cc6db1b6ea3576abbdf5467abfd3a6ff8e520", "patch": "@@ -1801,7 +1801,7 @@ end_subprog_body ()\n   /* Mark the RESULT_DECL as being in this subprogram. */\n   DECL_CONTEXT (DECL_RESULT (current_function_decl)) = current_function_decl;\n \n-  expand_function_end (input_filename, input_line, 0);\n+  expand_function_end ();\n \n   /* If this is a nested function, push a new GC context.  That will keep\n      local variables on the stack from being collected while we're doing"}, {"sha": "df0984081d85c78daf6818f2f1a8de9354ca25de", "filename": "gcc/c-decl.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f9cc6db1b6ea3576abbdf5467abfd3a6ff8e520/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f9cc6db1b6ea3576abbdf5467abfd3a6ff8e520/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=1f9cc6db1b6ea3576abbdf5467abfd3a6ff8e520", "patch": "@@ -6375,7 +6375,7 @@ c_expand_body_1 (tree fndecl, int nested_p)\n     (*lang_expand_function_end) ();\n \n   /* Generate rtl for function exit.  */\n-  expand_function_end (input_filename, input_line, 0);\n+  expand_function_end ();\n \n   /* If this is a nested function, protect the local variables in the stack\n      above us from being collected while we're compiling this function.  */"}, {"sha": "18614b38caa73949b7e0b4e07d13ec052d3991ea", "filename": "gcc/coverage.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f9cc6db1b6ea3576abbdf5467abfd3a6ff8e520/gcc%2Fcoverage.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f9cc6db1b6ea3576abbdf5467abfd3a6ff8e520/gcc%2Fcoverage.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcoverage.c?ref=1f9cc6db1b6ea3576abbdf5467abfd3a6ff8e520", "patch": "@@ -866,7 +866,7 @@ create_coverage ()\n   emit_library_call (gcov_init_libfunc, LCT_NORMAL, VOIDmode, 1,\n \t\t     gcov_info_address, Pmode);\n \n-  expand_function_end (input_filename, input_line, 0);\n+  expand_function_end ();\n   (*lang_hooks.decls.poplevel) (1, 0, 1);\n \n   rest_of_compilation (ctor);"}, {"sha": "f92411253b665e9fa6e89c4a91ae1bcfa6ceab8e", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f9cc6db1b6ea3576abbdf5467abfd3a6ff8e520/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f9cc6db1b6ea3576abbdf5467abfd3a6ff8e520/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=1f9cc6db1b6ea3576abbdf5467abfd3a6ff8e520", "patch": "@@ -1,3 +1,8 @@\n+2003-06-20  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* semantics.c (genrtl_finish_function): Adjust\n+\texpand_function_end call.\n+\n 2003-06-19  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/10939"}, {"sha": "bb55b75af88b592e754d9ff52760a88bc9fd51d2", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f9cc6db1b6ea3576abbdf5467abfd3a6ff8e520/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f9cc6db1b6ea3576abbdf5467abfd3a6ff8e520/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=1f9cc6db1b6ea3576abbdf5467abfd3a6ff8e520", "patch": "@@ -2542,7 +2542,7 @@ genrtl_finish_function (tree fn)\n   immediate_size_expand = 1;\n \n   /* Generate rtl for function exit.  */\n-  expand_function_end (input_filename, input_line, 0);\n+  expand_function_end ();\n \n   /* If this is a nested function (like a template instantiation that\n      we're compiling in the midst of compiling something else), push a"}, {"sha": "916e738076a9a741195fe23102bd28b09c0c2f13", "filename": "gcc/f/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f9cc6db1b6ea3576abbdf5467abfd3a6ff8e520/gcc%2Ff%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f9cc6db1b6ea3576abbdf5467abfd3a6ff8e520/gcc%2Ff%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FChangeLog?ref=1f9cc6db1b6ea3576abbdf5467abfd3a6ff8e520", "patch": "@@ -1,3 +1,7 @@\n+Fri Jun 20 10:00:31 2003  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* com.c (finish_function): Adjust expand_function_end call.\n+\n 2003-06-17  Nathanael Nerode  <neroden@gcc.gnu.org>\n \n \t* Make-lang.in: Replace BUILD_CC references with CC_FOR_BUILD."}, {"sha": "f384439955b5f879b36ffe6382f639c924ff74db", "filename": "gcc/f/com.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f9cc6db1b6ea3576abbdf5467abfd3a6ff8e520/gcc%2Ff%2Fcom.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f9cc6db1b6ea3576abbdf5467abfd3a6ff8e520/gcc%2Ff%2Fcom.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fcom.c?ref=1f9cc6db1b6ea3576abbdf5467abfd3a6ff8e520", "patch": "@@ -13604,7 +13604,7 @@ finish_function (int nested)\n \n       /* Obey `register' declarations if `setjmp' is called in this fn.  */\n       /* Generate rtl for function exit.  */\n-      expand_function_end (input_filename, input_line, 0);\n+      expand_function_end ();\n \n       /* If this is a nested function, protect the local variables in the stack\n \t above us from being collected while we're compiling this function.  */"}, {"sha": "175262c5dd83d4e8eac0882181c17f7e509303ad", "filename": "gcc/function.c", "status": "modified", "additions": 3, "deletions": 14, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f9cc6db1b6ea3576abbdf5467abfd3a6ff8e520/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f9cc6db1b6ea3576abbdf5467abfd3a6ff8e520/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=1f9cc6db1b6ea3576abbdf5467abfd3a6ff8e520", "patch": "@@ -6963,17 +6963,10 @@ use_return_register ()\n \n static GTY(()) rtx initial_trampoline;\n \n-/* Generate RTL for the end of the current function.\n-   FILENAME and LINE are the current position in the source file.\n-\n-   It is up to language-specific callers to do cleanups for parameters--\n-   or else, supply 1 for END_BINDINGS and we will call expand_end_bindings.  */\n+/* Generate RTL for the end of the current function. */\n \n void\n-expand_function_end (filename, line, end_bindings)\n-     const char *filename;\n-     int line;\n-     int end_bindings;\n+expand_function_end ()\n {\n   tree link;\n   rtx clobber_after;\n@@ -7099,7 +7092,7 @@ expand_function_end (filename, line, end_bindings)\n \n   /* Output a linenumber for the end of the function.\n      SDB depends on this.  */\n-  emit_line_note_force (filename, line);\n+  emit_line_note_force (input_filename, input_line);\n \n   /* Before the return label (if any), clobber the return\n      registers so that they are not propagated live to the rest of\n@@ -7119,10 +7112,6 @@ expand_function_end (filename, line, end_bindings)\n   if (return_label)\n     emit_label (return_label);\n \n-  /* C++ uses this.  */\n-  if (end_bindings)\n-    expand_end_bindings (0, 0, 0);\n-\n   if (current_function_instrument_entry_exit)\n     {\n       rtx fun = DECL_RTL (current_function_decl);"}, {"sha": "8c3aaad0e5fd92482e96a1dcbcb649fb0832173e", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f9cc6db1b6ea3576abbdf5467abfd3a6ff8e520/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f9cc6db1b6ea3576abbdf5467abfd3a6ff8e520/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=1f9cc6db1b6ea3576abbdf5467abfd3a6ff8e520", "patch": "@@ -1,3 +1,12 @@\n+2003-06-20  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* class.c (push_class): Use a location_t to save place.\n+\t(emit_register_classes): Set input_location. Adjust\n+\texpand_function_end call.\n+\t* resource.c (write_resource_constructor): Likewise.\n+\t* decl.c (end_java_method): Adjust expand_function_end call.\n+\t* parse.y (source_end_java_method): Likewise.\n+\n 2003-06-17  Robert Abeles  <rabeles@archaelogic.com>\n \n \t* lang.c (java_handle_option): Likewise."}, {"sha": "ed1ae4d7116dfbb235e70d7d32940b54e3b121c7", "filename": "gcc/java/class.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f9cc6db1b6ea3576abbdf5467abfd3a6ff8e520/gcc%2Fjava%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f9cc6db1b6ea3576abbdf5467abfd3a6ff8e520/gcc%2Fjava%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fclass.c?ref=1f9cc6db1b6ea3576abbdf5467abfd3a6ff8e520", "patch": "@@ -308,8 +308,7 @@ tree\n push_class (tree class_type, tree class_name)\n {\n   tree decl, signature;\n-  const char *save_input_filename = input_filename;\n-  int save_lineno = input_line;\n+  location_t saved_loc = input_location;\n   tree source_name = identifier_subst (class_name, \"\", '.', '/', \".java\");\n   CLASS_P (class_type) = 1;\n   input_filename = IDENTIFIER_POINTER (source_name);\n@@ -319,8 +318,7 @@ push_class (tree class_type, tree class_name)\n   /* dbxout needs a DECL_SIZE if in gstabs mode */\n   DECL_SIZE (decl) = integer_zero_node;\n \n-  input_filename = save_input_filename;\n-  input_line = save_lineno;\n+  input_location = saved_loc;\n   signature = identifier_subst (class_name, \"L\", '.', '/', \";\");\n   IDENTIFIER_SIGNATURE_TYPE (signature) = build_pointer_type (class_type);\n \n@@ -2000,6 +1998,7 @@ emit_register_classes (void)\n       tree init_type = build_function_type (void_type_node, end_params_node);\n       tree init_decl;\n       tree t;\n+      location_t saved_loc = input_location;\n       \n       init_decl = build_decl (FUNCTION_DECL, init_name, init_type);\n       SET_DECL_ASSEMBLER_NAME (init_decl, init_name);\n@@ -2028,15 +2027,16 @@ emit_register_classes (void)\n       for ( t = registered_class; t; t = TREE_CHAIN (t))\n \temit_library_call (registerClass_libfunc, 0, VOIDmode, 1,\n \t\t\t   XEXP (DECL_RTL (t), 0), Pmode);\n-      \n-      expand_function_end (input_filename, 0, 0);\n+      input_location = DECL_SOURCE_LOCATION (init_decl);\n+      expand_function_end ();\n       poplevel (1, 0, 1);\n       rest_of_compilation (init_decl);\n       current_function_decl = NULL_TREE;\n \n       if (targetm.have_ctors_dtors)\n \t(* targetm.asm_out.constructor) (XEXP (DECL_RTL (init_decl), 0),\n \t\t\t\t\t DEFAULT_INIT_PRIORITY);\n+      input_location = saved_loc;\n     }\n }\n "}, {"sha": "5354f8963dd9b7babcf412600d35acf7e045f4b0", "filename": "gcc/java/decl.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f9cc6db1b6ea3576abbdf5467abfd3a6ff8e520/gcc%2Fjava%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f9cc6db1b6ea3576abbdf5467abfd3a6ff8e520/gcc%2Fjava%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fdecl.c?ref=1f9cc6db1b6ea3576abbdf5467abfd3a6ff8e520", "patch": "@@ -1810,7 +1810,7 @@ end_java_method (void)\n   BLOCK_SUPERCONTEXT (DECL_INITIAL (fndecl)) = fndecl;\n \n   /* Generate rtl for function exit.  */\n-  expand_function_end (input_filename, input_line, 0);\n+  expand_function_end ();\n \n   /* Run the optimizers and output assembler code for this function. */\n   rest_of_compilation (fndecl);"}, {"sha": "a156be1ccfd08703d2d9de1a4878b0c247fe08b4", "filename": "gcc/java/parse.y", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f9cc6db1b6ea3576abbdf5467abfd3a6ff8e520/gcc%2Fjava%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f9cc6db1b6ea3576abbdf5467abfd3a6ff8e520/gcc%2Fjava%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.y?ref=1f9cc6db1b6ea3576abbdf5467abfd3a6ff8e520", "patch": "@@ -7386,7 +7386,7 @@ source_end_java_method (void)\n   if (! flag_emit_class_files && ! flag_emit_xref)\n     {\n       input_line = DECL_FUNCTION_LAST_LINE (fndecl);\n-      expand_function_end (input_filename, input_line, 0);\n+      expand_function_end ();\n \n       /* Run the optimizers and output assembler code for this function. */\n       rest_of_compilation (fndecl);"}, {"sha": "b71a6709f5efbcc4b4246e95e5668ec40da238a7", "filename": "gcc/java/resource.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f9cc6db1b6ea3576abbdf5467abfd3a6ff8e520/gcc%2Fjava%2Fresource.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f9cc6db1b6ea3576abbdf5467abfd3a6ff8e520/gcc%2Fjava%2Fresource.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fresource.c?ref=1f9cc6db1b6ea3576abbdf5467abfd3a6ff8e520", "patch": "@@ -104,6 +104,7 @@ write_resource_constructor (void)\n {\n   tree init_name, init_type, init_decl;\n   tree iter;\n+  location_t saved_loc = input_location;\n \n   /* Only do work if required.  */\n   if (resources == NULL_TREE)\n@@ -139,7 +140,8 @@ write_resource_constructor (void)\n \t\t\t Pmode);\n     }\n \n-  expand_function_end (input_filename, 0, 0);\n+  input_location = DECL_SOURCE_LOCATION (init_decl);\n+  expand_function_end ();\n   poplevel (1, 0, 1);\n   { \n     /* Force generation, even with -O3 or deeper.  Gross hack.\n@@ -152,6 +154,7 @@ write_resource_constructor (void)\n   current_function_decl = NULL_TREE;\n   (* targetm.asm_out.constructor) (XEXP (DECL_RTL (init_decl), 0),\n \t\t\t\t   DEFAULT_INIT_PRIORITY);\n+  input_location = saved_loc;\n }\n \n /* Generate a byte array representing the contents of FILENAME.  The"}, {"sha": "26c79a8489b66379a5c6bc6303552023d7259762", "filename": "gcc/tree.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f9cc6db1b6ea3576abbdf5467abfd3a6ff8e520/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f9cc6db1b6ea3576abbdf5467abfd3a6ff8e520/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=1f9cc6db1b6ea3576abbdf5467abfd3a6ff8e520", "patch": "@@ -2806,7 +2806,7 @@ extern void type_hash_add\t\tPARAMS ((unsigned int, tree));\n extern unsigned int type_hash_list\tPARAMS ((tree));\n extern int simple_cst_list_equal\tPARAMS ((tree, tree));\n extern void dump_tree_statistics\tPARAMS ((void));\n-extern void expand_function_end\t\tPARAMS ((const char *, int, int));\n+extern void expand_function_end\t\tPARAMS ((void));\n extern void expand_function_start\tPARAMS ((tree, int));\n extern void expand_pending_sizes        PARAMS ((tree));\n "}, {"sha": "cd821889855bb4452f631a6884ae6033c867061c", "filename": "gcc/treelang/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f9cc6db1b6ea3576abbdf5467abfd3a6ff8e520/gcc%2Ftreelang%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f9cc6db1b6ea3576abbdf5467abfd3a6ff8e520/gcc%2Ftreelang%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftreelang%2FChangeLog?ref=1f9cc6db1b6ea3576abbdf5467abfd3a6ff8e520", "patch": "@@ -1,3 +1,8 @@\n+2003-06-20  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* treetree.c (tree_code_create_function_wrapup): Adjust\n+\texpand_function_end call.\n+\n 2003-06-18  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* treetree.c (build_stmt): Remove VPARAMS."}, {"sha": "57a4a48fbfd790615c6c09396e4e7049379f5852", "filename": "gcc/treelang/treetree.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f9cc6db1b6ea3576abbdf5467abfd3a6ff8e520/gcc%2Ftreelang%2Ftreetree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f9cc6db1b6ea3576abbdf5467abfd3a6ff8e520/gcc%2Ftreelang%2Ftreetree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftreelang%2Ftreetree.c?ref=1f9cc6db1b6ea3576abbdf5467abfd3a6ff8e520", "patch": "@@ -452,7 +452,7 @@ tree_code_create_function_wrapup (location_t loc)\n \n   /* Emit rtl for end of function.  */\n \n-  expand_function_end (loc.file, loc.line, 0);\n+  expand_function_end ();\n \n   /* Pop the level.  */\n "}]}