{"sha": "343250a6d51af7dcd96f1d3a253c9971a5db6bc5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzQzMjUwYTZkNTFhZjdkY2Q5NmYxZDNhMjUzYzk5NzFhNWRiNmJjNQ==", "commit": {"author": {"name": "Pascal Obry", "email": "obry@adacore.com", "date": "2011-09-27T09:16:57Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-09-27T09:16:57Z"}, "message": "rtsfind.ads: Add RE_Lock_Read_Only into rtsfind circuitry.\n\n2011-09-27  Pascal Obry  <obry@adacore.com>\n\n\t* rtsfind.ads: Add RE_Lock_Read_Only into rtsfind circuitry.\n\t(RE_Id): Add RE_Lock_Read_Only.\n\t(RE_Unit_Table): Likewise.\n\t* sem_prag.adb (Process_Convention): Change Pragma_Locking_Policy\n\tto lift restriction on first character. Handle now the\n\tName_Concurrent_Readers_Locking where policy character is set to\n\t'R'.\n\t* snames.ads-tmpl (Name_Concurrent_Readers_Locking): New\n\tconstant.\n\t* exp_ch9.adb (Build_Protected_Subprogram_Body): Generate a\n\tread only lock for function in protected object.\n\t* s-taprob.ads (Lock_Read_Only): Remove obsolete comment as\n\tthis routine is now used.\n\nFrom-SVN: r179248", "tree": {"sha": "270e602ff78dbecb097e5aa8cfefa927c2aef41e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/270e602ff78dbecb097e5aa8cfefa927c2aef41e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/343250a6d51af7dcd96f1d3a253c9971a5db6bc5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/343250a6d51af7dcd96f1d3a253c9971a5db6bc5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/343250a6d51af7dcd96f1d3a253c9971a5db6bc5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/343250a6d51af7dcd96f1d3a253c9971a5db6bc5/comments", "author": {"login": "TurboGit", "id": 467069, "node_id": "MDQ6VXNlcjQ2NzA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/467069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TurboGit", "html_url": "https://github.com/TurboGit", "followers_url": "https://api.github.com/users/TurboGit/followers", "following_url": "https://api.github.com/users/TurboGit/following{/other_user}", "gists_url": "https://api.github.com/users/TurboGit/gists{/gist_id}", "starred_url": "https://api.github.com/users/TurboGit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TurboGit/subscriptions", "organizations_url": "https://api.github.com/users/TurboGit/orgs", "repos_url": "https://api.github.com/users/TurboGit/repos", "events_url": "https://api.github.com/users/TurboGit/events{/privacy}", "received_events_url": "https://api.github.com/users/TurboGit/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "48acf1b78b128d2cace0705d159db7e2791756cf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48acf1b78b128d2cace0705d159db7e2791756cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/48acf1b78b128d2cace0705d159db7e2791756cf"}], "stats": {"total": 59, "additions": 42, "deletions": 17}, "files": [{"sha": "8d34c2e1a7fca7a9b5080250e2f34a76993f55e7", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/343250a6d51af7dcd96f1d3a253c9971a5db6bc5/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/343250a6d51af7dcd96f1d3a253c9971a5db6bc5/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=343250a6d51af7dcd96f1d3a253c9971a5db6bc5", "patch": "@@ -1,3 +1,19 @@\n+2011-09-27  Pascal Obry  <obry@adacore.com>\n+\n+\t* rtsfind.ads: Add RE_Lock_Read_Only into rtsfind circuitry.\n+\t(RE_Id): Add RE_Lock_Read_Only.\n+\t(RE_Unit_Table): Likewise.\n+\t* sem_prag.adb (Process_Convention): Change Pragma_Locking_Policy\n+\tto lift restriction on first character. Handle now the\n+\tName_Concurrent_Readers_Locking where policy character is set to\n+\t'R'.\n+\t* snames.ads-tmpl (Name_Concurrent_Readers_Locking): New\n+\tconstant.\n+\t* exp_ch9.adb (Build_Protected_Subprogram_Body): Generate a\n+\tread only lock for function in protected object.\n+\t* s-taprob.ads (Lock_Read_Only): Remove obsolete comment as\n+\tthis routine is now used.\n+\n 2011-09-26  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* s-atocou-x86.adb (Decrement): Use %;."}, {"sha": "2a8a46481cb57b578ef87cb8d9998a159f4c85b5", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/343250a6d51af7dcd96f1d3a253c9971a5db6bc5/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/343250a6d51af7dcd96f1d3a253c9971a5db6bc5/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=343250a6d51af7dcd96f1d3a253c9971a5db6bc5", "patch": "@@ -3243,6 +3243,7 @@ package body Exp_Ch9 is\n       Stmts        : List_Id;\n       Object_Parm  : Node_Id;\n       Exc_Safe     : Boolean;\n+      Lock_Kind    : RE_Id;\n \n       function Is_Exception_Safe (Subprogram : Node_Id) return Boolean;\n       --  Tell whether a given subprogram cannot raise an exception\n@@ -3389,12 +3390,16 @@ package body Exp_Ch9 is\n                 Parameter_Associations => Uactuals));\n          end if;\n \n+         Lock_Kind := RE_Lock_Read_Only;\n+\n       else\n          Unprot_Call :=\n            Make_Procedure_Call_Statement (Loc,\n              Name =>\n                Make_Identifier (Loc, Chars (Defining_Unit_Name (N_Op_Spec))),\n              Parameter_Associations => Uactuals);\n+\n+         Lock_Kind := RE_Lock;\n       end if;\n \n       --  Wrap call in block that will be covered by an at_end handler\n@@ -3419,7 +3424,7 @@ package body Exp_Ch9 is\n             Service_Name := New_Reference_To (RTE (RE_Service_Entry), Loc);\n \n          when System_Tasking_Protected_Objects =>\n-            Lock_Name := New_Reference_To (RTE (RE_Lock), Loc);\n+            Lock_Name := New_Reference_To (RTE (Lock_Kind), Loc);\n             Service_Name := New_Reference_To (RTE (RE_Unlock), Loc);\n \n          when others =>"}, {"sha": "6e99fcc046c4fbec0bf0b804c49388874e6cf65c", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/343250a6d51af7dcd96f1d3a253c9971a5db6bc5/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/343250a6d51af7dcd96f1d3a253c9971a5db6bc5/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=343250a6d51af7dcd96f1d3a253c9971a5db6bc5", "patch": "@@ -7916,8 +7916,9 @@ Not followed.  This implementation is not targeted to such a domain.\n The implementation should use names that end with @samp{_Locking} for\n locking policies defined by the implementation.\n @end cartouche\n-Followed.  A single implementation-defined locking policy is defined,\n-whose name (@code{Inheritance_Locking}) follows this suggestion.\n+Followed.  Two implementation-defined locking policies are defined,\n+whose names (@code{Inheritance_Locking} and\n+@code{Concurrent_Readers_Locking}) follow this suggestion.\n \n @cindex Entry queuing policies\n @unnumberedsec D.4(16): Entry Queuing Policies"}, {"sha": "07bf0121a56f8083228454d9e0f4f7a1aecbdadb", "filename": "gcc/ada/rtsfind.ads", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/343250a6d51af7dcd96f1d3a253c9971a5db6bc5/gcc%2Fada%2Frtsfind.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/343250a6d51af7dcd96f1d3a253c9971a5db6bc5/gcc%2Fada%2Frtsfind.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frtsfind.ads?ref=343250a6d51af7dcd96f1d3a253c9971a5db6bc5", "patch": "@@ -1653,6 +1653,7 @@ package Rtsfind is\n      RE_Initialize_Protection,           -- System.Tasking.Protected_Objects\n      RE_Finalize_Protection,             -- System.Tasking.Protected_Objects\n      RE_Lock,                            -- System.Tasking.Protected_Objects\n+     RE_Lock_Read_Only,                  -- System.Tasking.Protected_Objects\n      RE_Get_Ceiling,                     -- System.Tasking.Protected_Objects\n      RE_Set_Ceiling,                     -- System.Tasking.Protected_Objects\n      RE_Unlock,                          -- System.Tasking.Protected_Objects\n@@ -2883,6 +2884,7 @@ package Rtsfind is\n      RE_Initialize_Protection            => System_Tasking_Protected_Objects,\n      RE_Finalize_Protection              => System_Tasking_Protected_Objects,\n      RE_Lock                             => System_Tasking_Protected_Objects,\n+     RE_Lock_Read_Only                   => System_Tasking_Protected_Objects,\n      RE_Get_Ceiling                      => System_Tasking_Protected_Objects,\n      RE_Set_Ceiling                      => System_Tasking_Protected_Objects,\n      RE_Unlock                           => System_Tasking_Protected_Objects,"}, {"sha": "fa2a99fa79423c7e36ab564892cdcf9891dfb9dc", "filename": "gcc/ada/s-taprob.ads", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/343250a6d51af7dcd96f1d3a253c9971a5db6bc5/gcc%2Fada%2Fs-taprob.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/343250a6d51af7dcd96f1d3a253c9971a5db6bc5/gcc%2Fada%2Fs-taprob.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprob.ads?ref=343250a6d51af7dcd96f1d3a253c9971a5db6bc5", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  S p e c                                 --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -193,10 +193,6 @@ package System.Tasking.Protected_Objects is\n    --  has been made by the caller. Other calls to Lock_Read_Only may (but\n    --  need not) return before the call to Unlock, and the corresponding\n    --  callers will also own the lock for read access.\n-   --\n-   --  Note: we are not currently using this interface, it is provided\n-   --  for possible future use. At the current time, everyone uses Lock\n-   --  for both read and write locks.\n \n    procedure Set_Ceiling\n      (Object : Protection_Access;"}, {"sha": "469069437621b75092efdfeb508d8b0f0412d094", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/343250a6d51af7dcd96f1d3a253c9971a5db6bc5/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/343250a6d51af7dcd96f1d3a253c9971a5db6bc5/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=343250a6d51af7dcd96f1d3a253c9971a5db6bc5", "patch": "@@ -10834,16 +10834,23 @@ package body Sem_Prag is\n          --  pragma Locking_Policy (policy_IDENTIFIER);\n \n          when Pragma_Locking_Policy => declare\n-            LP : Character;\n-\n+            subtype LP_Range is Name_Id\n+              range First_Locking_Policy_Name .. Last_Locking_Policy_Name;\n+            LP_Val : LP_Range;\n+            LP     : Character;\n          begin\n             Check_Ada_83_Warning;\n             Check_Arg_Count (1);\n             Check_No_Identifiers;\n             Check_Arg_Is_Locking_Policy (Arg1);\n             Check_Valid_Configuration_Pragma;\n-            Get_Name_String (Chars (Get_Pragma_Arg (Arg1)));\n-            LP := Fold_Upper (Name_Buffer (1));\n+            LP_Val := Chars (Get_Pragma_Arg (Arg1));\n+\n+            case LP_Val is\n+               when Name_Ceiling_Locking            => LP := 'C';\n+               when Name_Inheritance_Locking        => LP := 'I';\n+               when Name_Concurrent_Readers_Locking => LP := 'R';\n+            end case;\n \n             if Locking_Policy /= ' '\n               and then Locking_Policy /= LP"}, {"sha": "f7c441e97aad56749dd127ee356270c25c3cf57a", "filename": "gcc/ada/snames.ads-tmpl", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/343250a6d51af7dcd96f1d3a253c9971a5db6bc5/gcc%2Fada%2Fsnames.ads-tmpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/343250a6d51af7dcd96f1d3a253c9971a5db6bc5/gcc%2Fada%2Fsnames.ads-tmpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.ads-tmpl?ref=343250a6d51af7dcd96f1d3a253c9971a5db6bc5", "patch": "@@ -909,13 +909,10 @@ package Snames is\n \n    --  Names of recognized locking policy identifiers\n \n-   --  Note: policies are identified by the first character of the\n-   --  name (e.g. C for Ceiling_Locking). If new policy names are added,\n-   --  the first character must be distinct.\n-\n    First_Locking_Policy_Name           : constant Name_Id := N + $;\n    Name_Ceiling_Locking                : constant Name_Id := N + $;\n    Name_Inheritance_Locking            : constant Name_Id := N + $;\n+   Name_Concurrent_Readers_Locking     : constant Name_Id := N + $; -- GNAT\n    Last_Locking_Policy_Name            : constant Name_Id := N + $;\n \n    --  Names of recognized queuing policy identifiers\n@@ -1500,7 +1497,8 @@ package Snames is\n \n    type Locking_Policy_Id is (\n       Locking_Policy_Inheritance_Locking,\n-      Locking_Policy_Ceiling_Locking);\n+      Locking_Policy_Ceiling_Locking,\n+      Locking_Policy_Concurrent_Readers_Locking);\n \n    ---------------------------\n    -- Pragma ID Definitions --"}]}