{"sha": "d14419e437a6ae85159ffc6c5b04d092c7b1b63a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDE0NDE5ZTQzN2E2YWU4NTE1OWZmYzZjNWIwNGQwOTJjN2IxYjYzYQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2001-12-12T18:10:56Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2001-12-12T18:10:56Z"}, "message": "emit-rtl.c (adjust_address_1): Always copy address to avoid shared rtl.\n\n        * emit-rtl.c (adjust_address_1): Always copy address to avoid\n        shared rtl.\n\nFrom-SVN: r47942", "tree": {"sha": "76a876c09c311488ac096f74c793c85b5a88894a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/76a876c09c311488ac096f74c793c85b5a88894a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d14419e437a6ae85159ffc6c5b04d092c7b1b63a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d14419e437a6ae85159ffc6c5b04d092c7b1b63a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d14419e437a6ae85159ffc6c5b04d092c7b1b63a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d14419e437a6ae85159ffc6c5b04d092c7b1b63a/comments", "author": null, "committer": null, "parents": [{"sha": "8cdfa312b4d4d0abdca7e9b9ecd4333568d40b83", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8cdfa312b4d4d0abdca7e9b9ecd4333568d40b83", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8cdfa312b4d4d0abdca7e9b9ecd4333568d40b83"}], "stats": {"total": 21, "additions": 14, "deletions": 7}, "files": [{"sha": "ed8c11b95fee265519b5995a31169a3ac8cc787c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d14419e437a6ae85159ffc6c5b04d092c7b1b63a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d14419e437a6ae85159ffc6c5b04d092c7b1b63a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d14419e437a6ae85159ffc6c5b04d092c7b1b63a", "patch": "@@ -1,3 +1,8 @@\n+2001-12-12  Richard Henderson  <rth@redhat.com>\n+\n+\t* emit-rtl.c (adjust_address_1): Always copy address to avoid\n+\tshared rtl.\n+\n Wed Dec 12 07:37:52 2001  Olivier Hainque <hainque@act-europe.fr>\n \n \t* stmt.c (expand_end_case): Do subtraction of lower bound as trees"}, {"sha": "72886d16a7983a7c213fb5387d578d61592a9d7f", "filename": "gcc/emit-rtl.c", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d14419e437a6ae85159ffc6c5b04d092c7b1b63a/gcc%2Femit-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d14419e437a6ae85159ffc6c5b04d092c7b1b63a/gcc%2Femit-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Femit-rtl.c?ref=d14419e437a6ae85159ffc6c5b04d092c7b1b63a", "patch": "@@ -1966,15 +1966,17 @@ adjust_address_1 (memref, mode, offset, validate, adjust)\n   rtx size = 0;\n   unsigned int memalign = MEM_ALIGN (memref);\n \n-  if (adjust == 0 || offset == 0)\n-    /* ??? Prefer to create garbage instead of creating shared rtl.  */\n-    addr = copy_rtx (addr);\n+  /* ??? Prefer to create garbage instead of creating shared rtl.\n+     This may happen even if adjust is non-zero -- consider\n+     (plus (plus reg reg) const_int) -- so do this always.  */\n+  addr = copy_rtx (addr);\n+\n   /* If MEMREF is a LO_SUM and the offset is within the alignment of the\n      object, we can merge it into the LO_SUM.  */\n-  else if (GET_MODE (memref) != BLKmode && GET_CODE (addr) == LO_SUM\n-\t   && offset >= 0\n-\t   && (unsigned HOST_WIDE_INT) offset\n-\t      < GET_MODE_ALIGNMENT (GET_MODE (memref)) / BITS_PER_UNIT)\n+  if (GET_MODE (memref) != BLKmode && GET_CODE (addr) == LO_SUM\n+      && offset >= 0\n+      && (unsigned HOST_WIDE_INT) offset\n+\t  < GET_MODE_ALIGNMENT (GET_MODE (memref)) / BITS_PER_UNIT)\n     addr = gen_rtx_LO_SUM (Pmode, XEXP (addr, 0),\n \t\t\t   plus_constant (XEXP (addr, 1), offset));\n   else"}]}