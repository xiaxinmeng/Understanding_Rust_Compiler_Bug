{"sha": "33c43069281380cfc02f130cc10e28830ba8a711", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzNjNDMwNjkyODEzODBjZmMwMmYxMzBjYzEwZTI4ODMwYmE4YTcxMQ==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2019-07-21T21:20:27Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2019-07-21T21:20:27Z"}, "message": "re PR c++/67853 (decltype of parenthesized xvalue does not correctly yield rvalue-reference)\n\n\tPR c++/67853\n\t* g++.dg/cpp0x/decltype72.C: New test.\n\nFrom-SVN: r273652", "tree": {"sha": "deb74941dcd738a7faa98a7dcbf8465b89c8efca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/deb74941dcd738a7faa98a7dcbf8465b89c8efca"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/33c43069281380cfc02f130cc10e28830ba8a711", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33c43069281380cfc02f130cc10e28830ba8a711", "html_url": "https://github.com/Rust-GCC/gccrs/commit/33c43069281380cfc02f130cc10e28830ba8a711", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33c43069281380cfc02f130cc10e28830ba8a711/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "575ce8934206f6884fe009916551ee221931565c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/575ce8934206f6884fe009916551ee221931565c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/575ce8934206f6884fe009916551ee221931565c"}], "stats": {"total": 24, "additions": 24, "deletions": 0}, "files": [{"sha": "12774c06466effc733f4efe6a5f7726693046fb7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33c43069281380cfc02f130cc10e28830ba8a711/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33c43069281380cfc02f130cc10e28830ba8a711/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=33c43069281380cfc02f130cc10e28830ba8a711", "patch": "@@ -1,3 +1,8 @@\n+2019-07-21  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/67853\n+\t* g++.dg/cpp0x/decltype72.C: New test.\n+\n 2019-07-22  Stafford Horne  <shorne@gmail.com>\n \n \t* gcc.target/or1k/ror-4.c: New file."}, {"sha": "071e0e76210ac62cae3f4bfd65ca0e8af66d2e4b", "filename": "gcc/testsuite/g++.dg/cpp0x/decltype72.C", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33c43069281380cfc02f130cc10e28830ba8a711/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdecltype72.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33c43069281380cfc02f130cc10e28830ba8a711/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdecltype72.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdecltype72.C?ref=33c43069281380cfc02f130cc10e28830ba8a711", "patch": "@@ -0,0 +1,19 @@\n+// PR c++/67853\n+// { dg-do compile { target c++11 } }\n+\n+template<typename T, typename U>\n+struct is_same\n+{\n+  static const bool value = false;\n+};\n+\n+template<typename T>\n+struct is_same<T, T>\n+{\n+  static const bool value = true;\n+};\n+\n+struct Member {};\n+struct A { Member x; };\n+A MakeA();\n+static_assert(is_same<decltype((MakeA().x)), Member&&>::value, \"\");"}]}