{"sha": "a5a4add7aa2b78c3c7f48b173e24944439d82992", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTVhNGFkZDdhYTJiNzhjM2M3ZjQ4YjE3M2UyNDk0NDQzOWQ4Mjk5Mg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2016-11-28T22:51:29Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-11-28T22:51:29Z"}, "message": "re PR middle-end/78540 (ICE: in df_refs_verify, at df-scan.c:4062 with -O -march=core2)\n\n\tPR middle-end/78540\n\t* rtl.h (remove_reg_equal_equiv_notes): Return bool instead of void.\n\t* rtlanal.c (remove_reg_equal_equiv_notes): Return true if any\n\tnote has been removed.\n\t* postreload.c (reload_combine_recognize_pattern): If\n\tremove_reg_equal_equiv_notes returns true, call df_notes_rescan.\n\n\t* gcc.dg/pr78540.c: New test.\n\nFrom-SVN: r242937", "tree": {"sha": "0c52aec17a91d8f7886f3777f1bfef87a290e24f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0c52aec17a91d8f7886f3777f1bfef87a290e24f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a5a4add7aa2b78c3c7f48b173e24944439d82992", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5a4add7aa2b78c3c7f48b173e24944439d82992", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5a4add7aa2b78c3c7f48b173e24944439d82992", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5a4add7aa2b78c3c7f48b173e24944439d82992/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "de6aa93370b68a9fbcf874de8a97c5d1469b7d46", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de6aa93370b68a9fbcf874de8a97c5d1469b7d46", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de6aa93370b68a9fbcf874de8a97c5d1469b7d46"}], "stats": {"total": 64, "additions": 56, "deletions": 8}, "files": [{"sha": "f62f7cb95cba8cdbbca6f3b83a30c55335d9c5e6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5a4add7aa2b78c3c7f48b173e24944439d82992/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5a4add7aa2b78c3c7f48b173e24944439d82992/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a5a4add7aa2b78c3c7f48b173e24944439d82992", "patch": "@@ -1,3 +1,12 @@\n+2016-11-28  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/78540\n+\t* rtl.h (remove_reg_equal_equiv_notes): Return bool instead of void.\n+\t* rtlanal.c (remove_reg_equal_equiv_notes): Return true if any\n+\tnote has been removed.\n+\t* postreload.c (reload_combine_recognize_pattern): If\n+\tremove_reg_equal_equiv_notes returns true, call df_notes_rescan.\n+\n 2016-11-28  Martin Sebor  <msebor@redhat.com>\n \n \tPR middle-end/78520"}, {"sha": "539ad33b6c3eb1b968677419a7420badc3a52f01", "filename": "gcc/postreload.c", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5a4add7aa2b78c3c7f48b173e24944439d82992/gcc%2Fpostreload.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5a4add7aa2b78c3c7f48b173e24944439d82992/gcc%2Fpostreload.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpostreload.c?ref=a5a4add7aa2b78c3c7f48b173e24944439d82992", "patch": "@@ -1192,10 +1192,11 @@ reload_combine_recognize_pattern (rtx_insn *insn)\n \t      /* Delete the reg-reg addition.  */\n \t      delete_insn (insn);\n \n-\t      if (reg_state[regno].offset != const0_rtx)\n-\t\t/* Previous REG_EQUIV / REG_EQUAL notes for PREV\n-\t\t   are now invalid.  */\n-\t\tremove_reg_equal_equiv_notes (prev);\n+\t      if (reg_state[regno].offset != const0_rtx\n+\t\t  /* Previous REG_EQUIV / REG_EQUAL notes for PREV\n+\t\t     are now invalid.  */\n+\t\t  && remove_reg_equal_equiv_notes (prev))\n+\t\tdf_notes_rescan (prev);\n \n \t      reg_state[regno].use_index = RELOAD_COMBINE_MAX_USES;\n \t      return true;"}, {"sha": "5fde6989216bc3e2dc47412610dd6da7f18fd7d0", "filename": "gcc/rtl.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5a4add7aa2b78c3c7f48b173e24944439d82992/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5a4add7aa2b78c3c7f48b173e24944439d82992/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=a5a4add7aa2b78c3c7f48b173e24944439d82992", "patch": "@@ -3057,7 +3057,7 @@ extern void add_int_reg_note (rtx_insn *, enum reg_note, int);\n extern void add_shallow_copy_of_reg_note (rtx_insn *, rtx);\n extern rtx duplicate_reg_note (rtx);\n extern void remove_note (rtx_insn *, const_rtx);\n-extern void remove_reg_equal_equiv_notes (rtx_insn *);\n+extern bool remove_reg_equal_equiv_notes (rtx_insn *);\n extern void remove_reg_equal_equiv_notes_for_regno (unsigned int);\n extern int side_effects_p (const_rtx);\n extern int volatile_refs_p (const_rtx);"}, {"sha": "4e4eb2ef34584856c270ac46e1da25c69094b41d", "filename": "gcc/rtlanal.c", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5a4add7aa2b78c3c7f48b173e24944439d82992/gcc%2Frtlanal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5a4add7aa2b78c3c7f48b173e24944439d82992/gcc%2Frtlanal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtlanal.c?ref=a5a4add7aa2b78c3c7f48b173e24944439d82992", "patch": "@@ -2351,22 +2351,28 @@ remove_note (rtx_insn *insn, const_rtx note)\n     }\n }\n \n-/* Remove REG_EQUAL and/or REG_EQUIV notes if INSN has such notes.  */\n+/* Remove REG_EQUAL and/or REG_EQUIV notes if INSN has such notes.\n+   Return true if any note has been removed.  */\n \n-void\n+bool\n remove_reg_equal_equiv_notes (rtx_insn *insn)\n {\n   rtx *loc;\n+  bool ret = false;\n \n   loc = &REG_NOTES (insn);\n   while (*loc)\n     {\n       enum reg_note kind = REG_NOTE_KIND (*loc);\n       if (kind == REG_EQUAL || kind == REG_EQUIV)\n-\t*loc = XEXP (*loc, 1);\n+\t{\n+\t  *loc = XEXP (*loc, 1);\n+\t  ret = true;\n+\t}\n       else\n \tloc = &XEXP (*loc, 1);\n     }\n+  return ret;\n }\n \n /* Remove all REG_EQUAL and REG_EQUIV notes referring to REGNO.  */"}, {"sha": "a63953ca89133852bf91b9c37c857816b51e1585", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5a4add7aa2b78c3c7f48b173e24944439d82992/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5a4add7aa2b78c3c7f48b173e24944439d82992/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a5a4add7aa2b78c3c7f48b173e24944439d82992", "patch": "@@ -1,3 +1,8 @@\n+2016-11-28  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/78540\n+\t* gcc.dg/pr78540.c: New test.\n+\n 2016-11-28  Martin Sebor  <msebor@redhat.com>\n \n \tPR middle-end/78520"}, {"sha": "68bd9a449c450c83554f120c94d939056588682d", "filename": "gcc/testsuite/gcc.dg/pr78540.c", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5a4add7aa2b78c3c7f48b173e24944439d82992/gcc%2Ftestsuite%2Fgcc.dg%2Fpr78540.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5a4add7aa2b78c3c7f48b173e24944439d82992/gcc%2Ftestsuite%2Fgcc.dg%2Fpr78540.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr78540.c?ref=a5a4add7aa2b78c3c7f48b173e24944439d82992", "patch": "@@ -0,0 +1,27 @@\n+/* PR middle-end/78540 */\n+/* { dg-do compile { target int128 } } */\n+/* { dg-options \"-O2 -Wno-psabi\" } */\n+/* { dg-additional-options \"-march=core2\" { target i?86-*-* x86_64-*-* } } */\n+\n+typedef unsigned __int128 V __attribute__ ((vector_size (64)));\n+V g;\n+\n+static inline V\n+foo (V a)\n+{\n+  V b, c;\n+  c[0] = 0;\n+  a += 2281559097;\n+  c ^= 0;\n+  b[0] = 0;\n+  return 1 + c + b + a;\n+}\n+\n+V\n+bar ()\n+{\n+  V a = g, b = g;\n+  a[1] ^= 1;\n+  b[foo (a)[0] & 3] |= 1;\n+  return b;\n+}"}]}