{"sha": "ef2a63ba1869942eae7ab3ceb4cada0f025a60ad", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWYyYTYzYmExODY5OTQyZWFlN2FiM2NlYjRjYWRhMGYwMjVhNjBhZA==", "commit": {"author": {"name": "Javier Miranda", "email": "miranda@adacore.com", "date": "2010-10-18T09:59:45Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-10-18T09:59:45Z"}, "message": "einfo.ads, einfo.adb (Primitive_Operations): New synthesized attribute.\n\n2010-10-18  Javier Miranda  <miranda@adacore.com>\n\n\t* einfo.ads, einfo.adb (Primitive_Operations): New synthesized\n\tattribute.\n\t(Direct_Primitive_Operations): Renaming of old Primitive_Operations.\n\t(Set_Direct_Primitive_Operations): Renaming of old\n\tSet_Primitive_Operations. Update documentation\n\t* sem_ch3.adb, exp_util.adb, sem_ch7.adb, sem_ch8.adb, exp_ch3.adb:\n\tReplace occurrences of Set_Primitive_Operations by\n\tSet_Direct_Primitive_Operations.\n\t* sem_cat.adb (Validate_RACW_Primitives): No action needed for tagged\n\tconcurrent types.\n\t* exp_dist.adb (Add_RACW_Primitive_Declarations_And_Bodies): Do not\n\tprocess primitives of concurrent types.\n\t* lib-xref.adb (Generate_Prim_Op_References): Minor code cleanup.\n\nFrom-SVN: r165618", "tree": {"sha": "292fd2cc7ffa00814a3d1bc8bec3ae9dced57607", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/292fd2cc7ffa00814a3d1bc8bec3ae9dced57607"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ef2a63ba1869942eae7ab3ceb4cada0f025a60ad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef2a63ba1869942eae7ab3ceb4cada0f025a60ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef2a63ba1869942eae7ab3ceb4cada0f025a60ad", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef2a63ba1869942eae7ab3ceb4cada0f025a60ad/comments", "author": {"login": "miranda-adacore", "id": 54413934, "node_id": "MDQ6VXNlcjU0NDEzOTM0", "avatar_url": "https://avatars.githubusercontent.com/u/54413934?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miranda-adacore", "html_url": "https://github.com/miranda-adacore", "followers_url": "https://api.github.com/users/miranda-adacore/followers", "following_url": "https://api.github.com/users/miranda-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/miranda-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/miranda-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miranda-adacore/subscriptions", "organizations_url": "https://api.github.com/users/miranda-adacore/orgs", "repos_url": "https://api.github.com/users/miranda-adacore/repos", "events_url": "https://api.github.com/users/miranda-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/miranda-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6b958cecaa0a9d8cb7b04ee0b4a2e36efd8d0450", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b958cecaa0a9d8cb7b04ee0b4a2e36efd8d0450", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b958cecaa0a9d8cb7b04ee0b4a2e36efd8d0450"}], "stats": {"total": 202, "additions": 126, "deletions": 76}, "files": [{"sha": "0813f2e1a72c9d1328de6ba7a913ca6fb3728870", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef2a63ba1869942eae7ab3ceb4cada0f025a60ad/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef2a63ba1869942eae7ab3ceb4cada0f025a60ad/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=ef2a63ba1869942eae7ab3ceb4cada0f025a60ad", "patch": "@@ -1,3 +1,19 @@\n+2010-10-18  Javier Miranda  <miranda@adacore.com>\n+\n+\t* einfo.ads, einfo.adb (Primitive_Operations): New synthesized\n+\tattribute.\n+\t(Direct_Primitive_Operations): Renaming of old Primitive_Operations.\n+\t(Set_Direct_Primitive_Operations): Renaming of old\n+\tSet_Primitive_Operations. Update documentation\n+\t* sem_ch3.adb, exp_util.adb, sem_ch7.adb, sem_ch8.adb, exp_ch3.adb:\n+\tReplace occurrences of Set_Primitive_Operations by\n+\tSet_Direct_Primitive_Operations.\n+\t* sem_cat.adb (Validate_RACW_Primitives): No action needed for tagged\n+\tconcurrent types.\n+\t* exp_dist.adb (Add_RACW_Primitive_Declarations_And_Bodies): Do not\n+\tprocess primitives of concurrent types.\n+\t* lib-xref.adb (Generate_Prim_Op_References): Minor code cleanup.\n+\n 2010-10-18  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* exp_ch6.adb (Expand_N_Subprogram_Declaration): Use Freeze_Before."}, {"sha": "a8bb4d2f9f31437bf4ca1e83a6bef78d7d0908d4", "filename": "gcc/ada/einfo.adb", "status": "modified", "additions": 28, "deletions": 7, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef2a63ba1869942eae7ab3ceb4cada0f025a60ad/gcc%2Fada%2Feinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef2a63ba1869942eae7ab3ceb4cada0f025a60ad/gcc%2Fada%2Feinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.adb?ref=ef2a63ba1869942eae7ab3ceb4cada0f025a60ad", "patch": "@@ -121,7 +121,7 @@ package body Einfo is\n    --    Entry_Parameters_Type           Node15\n    --    Extra_Formal                    Node15\n    --    Lit_Indexes                     Node15\n-   --    Primitive_Operations            Elist15\n+   --    Direct_Primitive_Operations     Elist15\n    --    Related_Instance                Node15\n    --    Scale_Value                     Uint15\n    --    Storage_Size_Variable           Node15\n@@ -817,6 +817,12 @@ package body Einfo is\n       return Uint17 (Id);\n    end Digits_Value;\n \n+   function Direct_Primitive_Operations (Id : E) return L is\n+   begin\n+      pragma Assert (Is_Tagged_Type (Id));\n+      return Elist15 (Id);\n+   end Direct_Primitive_Operations;\n+\n    function Directly_Designated_Type (Id : E) return E is\n    begin\n       pragma Assert (Is_Access_Type (Id));\n@@ -2355,8 +2361,16 @@ package body Einfo is\n \n    function Primitive_Operations (Id : E) return L is\n    begin\n-      pragma Assert (Is_Tagged_Type (Id));\n-      return Elist15 (Id);\n+      if Is_Concurrent_Type (Id) then\n+         if Present (Corresponding_Record_Type (Id)) then\n+            return Direct_Primitive_Operations\n+                     (Corresponding_Record_Type (Id));\n+         else\n+            return No_Elist;\n+         end if;\n+      else\n+         return Direct_Primitive_Operations (Id);\n+      end if;\n    end Primitive_Operations;\n \n    function Prival (Id : E) return E is\n@@ -4817,11 +4831,18 @@ package body Einfo is\n       Set_Node8 (Id, V);\n    end Set_Postcondition_Proc;\n \n-   procedure Set_Primitive_Operations (Id : E; V : L) is\n+   procedure Set_Direct_Primitive_Operations (Id : E; V : L) is\n    begin\n-      pragma Assert (Is_Tagged_Type (Id));\n+      pragma Assert\n+        (Is_Tagged_Type (Id)\n+           and then\n+             (Is_Record_Type (Id)\n+                or else\n+              Is_Incomplete_Type (Id)\n+                or else\n+              Ekind_In (Id, E_Private_Type, E_Private_Subtype)));\n       Set_Elist15 (Id, V);\n-   end Set_Primitive_Operations;\n+   end Set_Direct_Primitive_Operations;\n \n    procedure Set_Prival (Id : E; V : E) is\n    begin\n@@ -7583,7 +7604,7 @@ package body Einfo is\n               E_Record_Type                                |\n               E_Record_Subtype                             |\n               Private_Kind                                 =>\n-            Write_Str (\"Primitive_Operations\");\n+            Write_Str (\"Direct_Primitive_Operations\");\n \n          when E_Component                                  =>\n             Write_Str (\"DT_Entry_Count\");"}, {"sha": "3abc37bdcc65ae15f0c75d1822530119955097c2", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 25, "deletions": 17, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef2a63ba1869942eae7ab3ceb4cada0f025a60ad/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef2a63ba1869942eae7ab3ceb4cada0f025a60ad/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=ef2a63ba1869942eae7ab3ceb4cada0f025a60ad", "patch": "@@ -769,6 +769,16 @@ package Einfo is\n --       Present in floating point types and subtypes and decimal types and\n --       subtypes. Contains the Digits value specified in the declaration.\n \n+--    Direct_Primitive_Operations (Elist15)\n+--       Present in tagged record types and subtypes, in tagged private types\n+--       and in tagged incomplete types. Points to an element list of entities\n+--       for primitive operations for the tagged type. Not present in untagged\n+--       types (it is an error to reference the primitive operations field of a\n+--       type that is not tagged). In order to fulfill the C++ ABI, entities of\n+--       primitives that come from source must be stored in this list following\n+--       their order of occurrence in the sources. For incomplete types the\n+--       list is always empty.\n+\n --    Directly_Designated_Type (Node20)\n --       Present in access types. This field points to the type that is\n --       directly designated by the access type. In the case of an access\n@@ -3201,15 +3211,12 @@ package Einfo is\n --       to generate the call to this procedure in case the expander inserts\n --       implicit return statements.\n \n---    Primitive_Operations (Elist15)\n---       Present in tagged record types and subtypes and in tagged private\n---       types. Points to an element list of entities for primitive operations\n---       for the tagged type. Not present (and not set) in untagged types (it\n---       is an error to reference the primitive operations field of a type\n---       that is not tagged). In order to fulfill the C++ ABI, entities of\n---       primitives that come from source must be stored in this list following\n---       their order of occurrence in the sources. Also present in incomplete\n---       types, but in this case the list is always empty.\n+--    Primitive_Operations (synthesized)\n+--       Present in concurrent types, tagged record types and subtypes, tagged\n+--       private types and tagged incomplete types. For concurrent types that\n+--       have available their Corresponding_Record_Type (CRT) returns the list\n+--       of Direct_Primitive_Operations of its CRT; otherwise returns No_Elist.\n+--       For all the other types returns its Direct_Primitive_Operations.\n \n --    Prival (Node17)\n --       Present in private components of protected types. Refers to the entity\n@@ -5262,7 +5269,7 @@ package Einfo is\n \n    --  E_Private_Type\n    --  E_Private_Subtype\n-   --    Primitive_Operations                (Elist15)\n+   --    Direct_Primitive_Operations         (Elist15)\n    --    First_Entity                        (Node17)\n    --    Private_Dependents                  (Elist18)\n    --    Underlying_Full_View                (Node19)\n@@ -5369,7 +5376,7 @@ package Einfo is\n \n    --  E_Record_Type\n    --  E_Record_Subtype\n-   --    Primitive_Operations                (Elist15)\n+   --    Direct_Primitive_Operations         (Elist15)\n    --    Access_Disp_Table                   (Elist16)  (base type only)\n    --    Dispatch_Table_Wrappers             (Elist26)  (base type only)\n    --    Cloned_Subtype                      (Node16)   (subtype case only)\n@@ -5402,7 +5409,7 @@ package Einfo is\n \n    --  E_Record_Type_With_Private\n    --  E_Record_Subtype_With_Private\n-   --    Primitive_Operations                (Elist15)\n+   --    Direct_Primitive_Operations         (Elist15)\n    --    Access_Disp_Table                   (Elist16)  (base type only)\n    --    Dispatch_Table_Wrappers             (Elist26)  (base type only)\n    --    First_Entity                        (Node17)\n@@ -6072,7 +6079,7 @@ package Einfo is\n    function Packed_Array_Type                   (Id : E) return E;\n    function Parent_Subtype                      (Id : E) return E;\n    function Postcondition_Proc                  (Id : E) return E;\n-   function Primitive_Operations                (Id : E) return L;\n+   function Direct_Primitive_Operations         (Id : E) return L;\n    function Prival                              (Id : E) return E;\n    function Prival_Link                         (Id : E) return E;\n    function Private_Dependents                  (Id : E) return L;\n@@ -6248,8 +6255,9 @@ package Einfo is\n    function Number_Dimensions                   (Id : E) return Pos;\n    function Number_Entries                      (Id : E) return Nat;\n    function Number_Formals                      (Id : E) return Pos;\n-   function Root_Type                           (Id : E) return E;\n    function Parameter_Mode                      (Id : E) return Formal_Kind;\n+   function Primitive_Operations                (Id : E) return L;\n+   function Root_Type                           (Id : E) return E;\n    function Scope_Depth_Set                     (Id : E) return B;\n    function Size_Clause                         (Id : E) return N;\n    function Stream_Size_Clause                  (Id : E) return N;\n@@ -6641,7 +6649,7 @@ package Einfo is\n    procedure Set_Packed_Array_Type               (Id : E; V : E);\n    procedure Set_Parent_Subtype                  (Id : E; V : E);\n    procedure Set_Postcondition_Proc              (Id : E; V : E);\n-   procedure Set_Primitive_Operations            (Id : E; V : L);\n+   procedure Set_Direct_Primitive_Operations     (Id : E; V : L);\n    procedure Set_Prival                          (Id : E; V : E);\n    procedure Set_Prival_Link                     (Id : E; V : E);\n    procedure Set_Private_Dependents              (Id : E; V : L);\n@@ -7047,6 +7055,7 @@ package Einfo is\n    pragma Inline (Dependent_Instances);\n    pragma Inline (Depends_On_Private);\n    pragma Inline (Digits_Value);\n+   pragma Inline (Direct_Primitive_Operations);\n    pragma Inline (Directly_Designated_Type);\n    pragma Inline (Discard_Names);\n    pragma Inline (Discriminal);\n@@ -7358,7 +7367,6 @@ package Einfo is\n    pragma Inline (Parameter_Mode);\n    pragma Inline (Parent_Subtype);\n    pragma Inline (Postcondition_Proc);\n-   pragma Inline (Primitive_Operations);\n    pragma Inline (Prival);\n    pragma Inline (Prival_Link);\n    pragma Inline (Private_Dependents);\n@@ -7482,6 +7490,7 @@ package Einfo is\n    pragma Inline (Set_Dependent_Instances);\n    pragma Inline (Set_Depends_On_Private);\n    pragma Inline (Set_Digits_Value);\n+   pragma Inline (Set_Direct_Primitive_Operations);\n    pragma Inline (Set_Directly_Designated_Type);\n    pragma Inline (Set_Discard_Names);\n    pragma Inline (Set_Discriminal);\n@@ -7748,7 +7757,6 @@ package Einfo is\n    pragma Inline (Set_Packed_Array_Type);\n    pragma Inline (Set_Parent_Subtype);\n    pragma Inline (Set_Postcondition_Proc);\n-   pragma Inline (Set_Primitive_Operations);\n    pragma Inline (Set_Prival);\n    pragma Inline (Set_Prival_Link);\n    pragma Inline (Set_Private_Dependents);"}, {"sha": "aca005e7188ff0483b1ea8d9b30f0482f3e677bf", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef2a63ba1869942eae7ab3ceb4cada0f025a60ad/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef2a63ba1869942eae7ab3ceb4cada0f025a60ad/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=ef2a63ba1869942eae7ab3ceb4cada0f025a60ad", "patch": "@@ -6144,8 +6144,8 @@ package body Exp_Ch3 is\n                     (Rep, Access_Disp_Table       (Def_Id));\n                   Set_Dispatch_Table_Wrappers\n                     (Rep, Dispatch_Table_Wrappers (Def_Id));\n-                  Set_Primitive_Operations\n-                    (Rep, Primitive_Operations    (Def_Id));\n+                  Set_Direct_Primitive_Operations\n+                    (Rep, Direct_Primitive_Operations (Def_Id));\n                end;\n             end if;\n "}, {"sha": "2a0f80097384904f044bd84cd7d015e1ef3cd52c", "filename": "gcc/ada/exp_dist.adb", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef2a63ba1869942eae7ab3ceb4cada0f025a60ad/gcc%2Fada%2Fexp_dist.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef2a63ba1869942eae7ab3ceb4cada0f025a60ad/gcc%2Fada%2Fexp_dist.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_dist.adb?ref=ef2a63ba1869942eae7ab3ceb4cada0f025a60ad", "patch": "@@ -1316,7 +1316,9 @@ package body Exp_Dist is\n       --  Build callers, receivers for every primitive operations and a RPC\n       --  receiver for this type.\n \n-      if Present (Primitive_Operations (Designated_Type)) then\n+      if not Is_Concurrent_Type (Designated_Type)\n+        and then Present (Primitive_Operations (Designated_Type))\n+      then\n          Overload_Counter_Table.Reset;\n \n          Current_Primitive_Elmt :=\n@@ -1336,8 +1338,9 @@ package body Exp_Dist is\n                  Is_TSS (Current_Primitive, TSS_Stream_Input)  or else\n                  Is_TSS (Current_Primitive, TSS_Stream_Output) or else\n                  Is_TSS (Current_Primitive, TSS_Stream_Read)   or else\n-                 Is_TSS (Current_Primitive, TSS_Stream_Write)  or else\n-                 Is_Predefined_Interface_Primitive (Current_Primitive))\n+                 Is_TSS (Current_Primitive, TSS_Stream_Write)\n+                   or else\n+                     Is_Predefined_Interface_Primitive (Current_Primitive))\n               and then not Is_Hidden (Current_Primitive)\n             then\n                --  The first thing to do is build an up-to-date copy of the\n@@ -1413,8 +1416,8 @@ package body Exp_Dist is\n                        RACW_Type                => Stub_Elements.RACW_Type,\n                        Parent_Primitive         => Current_Primitive);\n \n-                  Current_Receiver := Defining_Unit_Name (\n-                    Specification (Current_Receiver_Body));\n+                  Current_Receiver :=\n+                    Defining_Unit_Name (Specification (Current_Receiver_Body));\n \n                   Append_To (Body_Decls, Current_Receiver_Body);\n "}, {"sha": "7068e2220274116c8a6c6efe3ada629481f2a121", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef2a63ba1869942eae7ab3ceb4cada0f025a60ad/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef2a63ba1869942eae7ab3ceb4cada0f025a60ad/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=ef2a63ba1869942eae7ab3ceb4cada0f025a60ad", "patch": "@@ -4115,8 +4115,8 @@ package body Exp_Util is\n          if Is_Tagged_Type  (Priv_Subtyp) then\n             Set_Class_Wide_Type\n               (Base_Type (Priv_Subtyp), Class_Wide_Type (Unc_Typ));\n-            Set_Primitive_Operations (Priv_Subtyp,\n-              Primitive_Operations (Unc_Typ));\n+            Set_Direct_Primitive_Operations (Priv_Subtyp,\n+              Direct_Primitive_Operations (Unc_Typ));\n          end if;\n \n          Set_Full_View (Priv_Subtyp, Full_Subtyp);"}, {"sha": "db8097ab0316c68650c5da4a5b8d0a4543b117b1", "filename": "gcc/ada/lib-xref.adb", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef2a63ba1869942eae7ab3ceb4cada0f025a60ad/gcc%2Fada%2Flib-xref.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef2a63ba1869942eae7ab3ceb4cada0f025a60ad/gcc%2Fada%2Flib-xref.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-xref.adb?ref=ef2a63ba1869942eae7ab3ceb4cada0f025a60ad", "patch": "@@ -241,14 +241,7 @@ package body Lib.Xref is\n       --  The check for Present here is to protect against previously\n       --  reported critical errors.\n \n-      if Is_Concurrent_Type (Base_T)\n-        and then Present (Corresponding_Record_Type (Base_T))\n-      then\n-         Prim_List := Primitive_Operations\n-                       (Corresponding_Record_Type (Base_T));\n-      else\n-         Prim_List := Primitive_Operations (Base_T);\n-      end if;\n+      Prim_List := Primitive_Operations (Base_T);\n \n       if No (Prim_List) then\n          return;"}, {"sha": "9f64223a0a4be9899a4f0150185ce87fb645029d", "filename": "gcc/ada/sem_cat.adb", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef2a63ba1869942eae7ab3ceb4cada0f025a60ad/gcc%2Fada%2Fsem_cat.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef2a63ba1869942eae7ab3ceb4cada0f025a60ad/gcc%2Fada%2Fsem_cat.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_cat.adb?ref=ef2a63ba1869942eae7ab3ceb4cada0f025a60ad", "patch": "@@ -1334,6 +1334,12 @@ package body Sem_Cat is\n    begin\n       Desig_Type := Etype (Designated_Type (T));\n \n+      --  No action needed for concurrent types\n+\n+      if Is_Concurrent_Type (Desig_Type) then\n+         return;\n+      end if;\n+\n       Primitive_Subprograms := Primitive_Operations (Desig_Type);\n \n       Subprogram_Elmt := First_Elmt (Primitive_Subprograms);"}, {"sha": "a17ab5321c3c71c619d068df8511eda4b44a0f94", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 32, "deletions": 29, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef2a63ba1869942eae7ab3ceb4cada0f025a60ad/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef2a63ba1869942eae7ab3ceb4cada0f025a60ad/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=ef2a63ba1869942eae7ab3ceb4cada0f025a60ad", "patch": "@@ -2444,7 +2444,7 @@ package body Sem_Ch3 is\n       if Tagged_Present (N) then\n          Set_Is_Tagged_Type (T);\n          Make_Class_Wide_Type (T);\n-         Set_Primitive_Operations (T, New_Elmt_List);\n+         Set_Direct_Primitive_Operations (T, New_Elmt_List);\n       end if;\n \n       Push_Scope (T);\n@@ -2496,7 +2496,7 @@ package body Sem_Ch3 is\n               or else Task_Present (Def));\n \n       Set_Interfaces (T, New_Elmt_List);\n-      Set_Primitive_Operations (T, New_Elmt_List);\n+      Set_Direct_Primitive_Operations (T, New_Elmt_List);\n \n       --  Complete the decoration of the class-wide entity if it was already\n       --  built (i.e. during the creation of the limited view)\n@@ -3936,8 +3936,8 @@ package body Sem_Ch3 is\n                if Is_Tagged_Type (T) then\n                   Set_Is_Tagged_Type    (Id);\n                   Set_Is_Abstract_Type  (Id, Is_Abstract_Type (T));\n-                  Set_Primitive_Operations\n-                                        (Id, Primitive_Operations (T));\n+                  Set_Direct_Primitive_Operations\n+                                        (Id, Direct_Primitive_Operations (T));\n                   Set_Class_Wide_Type   (Id, Class_Wide_Type (T));\n \n                   if Is_Interface (T) then\n@@ -3960,10 +3960,11 @@ package body Sem_Ch3 is\n                                       (Id, Known_To_Have_Preelab_Init (T));\n \n                if Is_Tagged_Type (T) then\n-                  Set_Is_Tagged_Type       (Id);\n-                  Set_Is_Abstract_Type     (Id, Is_Abstract_Type (T));\n-                  Set_Primitive_Operations (Id, Primitive_Operations (T));\n-                  Set_Class_Wide_Type      (Id, Class_Wide_Type (T));\n+                  Set_Is_Tagged_Type              (Id);\n+                  Set_Is_Abstract_Type            (Id, Is_Abstract_Type (T));\n+                  Set_Class_Wide_Type             (Id, Class_Wide_Type (T));\n+                  Set_Direct_Primitive_Operations (Id,\n+                    Direct_Primitive_Operations (T));\n                end if;\n \n                --  In general the attributes of the subtype of a private type\n@@ -7352,7 +7353,7 @@ package body Sem_Ch3 is\n       --  Set fields for tagged types\n \n       if Is_Tagged then\n-         Set_Primitive_Operations (Derived_Type, New_Elmt_List);\n+         Set_Direct_Primitive_Operations (Derived_Type, New_Elmt_List);\n \n          --  All tagged types defined in Ada.Finalization are controlled\n \n@@ -8237,7 +8238,8 @@ package body Sem_Ch3 is\n             Set_Corresponding_Record_Type (Def_Id,\n                Corresponding_Record_Type (T));\n          else\n-            Set_Primitive_Operations (Def_Id, Primitive_Operations (T));\n+            Set_Direct_Primitive_Operations (Def_Id,\n+              Direct_Primitive_Operations (T));\n          end if;\n \n          Set_Is_Abstract_Type (Def_Id, Is_Abstract_Type (T));\n@@ -9811,7 +9813,8 @@ package body Sem_Ch3 is\n \n       if Is_Tagged_Type (Full_Base) then\n          Set_Is_Tagged_Type (Full);\n-         Set_Primitive_Operations (Full, Primitive_Operations (Full_Base));\n+         Set_Direct_Primitive_Operations (Full,\n+           Direct_Primitive_Operations (Full_Base));\n \n          --  Inherit class_wide type of full_base in case the partial view was\n          --  not tagged. Otherwise it has already been created when the private\n@@ -11552,7 +11555,8 @@ package body Sem_Ch3 is\n       Conditional_Delay              (Full,                          Priv);\n \n       if Is_Tagged_Type (Full) then\n-         Set_Primitive_Operations    (Full, Primitive_Operations    (Priv));\n+         Set_Direct_Primitive_Operations (Full,\n+           Direct_Primitive_Operations (Priv));\n \n          if Priv = Base_Type (Priv) then\n             Set_Class_Wide_Type      (Full, Class_Wide_Type         (Priv));\n@@ -13529,8 +13533,10 @@ package body Sem_Ch3 is\n          Set_Etype        (T, Any_Type);\n          Set_Scalar_Range (T, Scalar_Range (Any_Type));\n \n-         if Is_Tagged_Type (T) then\n-            Set_Primitive_Operations (T, New_Elmt_List);\n+         if Is_Tagged_Type (T)\n+           and then Is_Record_Type (T)\n+         then\n+            Set_Direct_Primitive_Operations (T, New_Elmt_List);\n          end if;\n \n          return;\n@@ -14290,7 +14296,6 @@ package body Sem_Ch3 is\n                if not Tagged_Present (Type_Definition (N)) then\n                   Tag_Mismatch;\n                   Set_Is_Tagged_Type (Id);\n-                  Set_Primitive_Operations (Id, New_Elmt_List);\n                end if;\n \n             elsif Nkind (Type_Definition (N)) = N_Derived_Type_Definition then\n@@ -14302,7 +14307,6 @@ package body Sem_Ch3 is\n                   --  Set some attributes to produce a usable full view\n \n                   Set_Is_Tagged_Type (Id);\n-                  Set_Primitive_Operations (Id, New_Elmt_List);\n                end if;\n \n             else\n@@ -15421,12 +15425,12 @@ package body Sem_Ch3 is\n       --  Customize the class-wide type: It has no prim. op., it cannot be\n       --  abstract and its Etype points back to the specific root type.\n \n-      Set_Ekind                (CW_Type, E_Class_Wide_Type);\n-      Set_Is_Tagged_Type       (CW_Type, True);\n-      Set_Primitive_Operations (CW_Type, New_Elmt_List);\n-      Set_Is_Abstract_Type     (CW_Type, False);\n-      Set_Is_Constrained       (CW_Type, False);\n-      Set_Is_First_Subtype     (CW_Type, Is_First_Subtype (T));\n+      Set_Ekind                       (CW_Type, E_Class_Wide_Type);\n+      Set_Is_Tagged_Type              (CW_Type, True);\n+      Set_Direct_Primitive_Operations (CW_Type, New_Elmt_List);\n+      Set_Is_Abstract_Type            (CW_Type, False);\n+      Set_Is_Constrained              (CW_Type, False);\n+      Set_Is_First_Subtype            (CW_Type, Is_First_Subtype (T));\n \n       if Ekind (T) = E_Class_Wide_Subtype then\n          Set_Etype             (CW_Type, Etype (Base_Type (T)));\n@@ -16990,7 +16994,7 @@ package body Sem_Ch3 is\n             --  of the class-wide type which depend on the full declaration.\n \n             if Is_Tagged_Type (Priv_T) then\n-               Set_Primitive_Operations (Priv_T, Full_List);\n+               Set_Direct_Primitive_Operations (Priv_T, Full_List);\n                Set_Class_Wide_Type\n                  (Base_Type (Full_T), Class_Wide_Type (Priv_T));\n \n@@ -18268,14 +18272,13 @@ package body Sem_Ch3 is\n          end if;\n \n          Make_Class_Wide_Type (T);\n-         Set_Primitive_Operations (T, New_Elmt_List);\n+         Set_Direct_Primitive_Operations (T, New_Elmt_List);\n       end if;\n \n-      --  We must suppress range checks when processing the components\n-      --  of a record in the presence of discriminants, since we don't\n-      --  want spurious checks to be generated during their analysis, but\n-      --  must reset the Suppress_Range_Checks flags after having processed\n-      --  the record definition.\n+      --  We must suppress range checks when processing record components in\n+      --  the presence of discriminants, since we don't want spurious checks to\n+      --  be generated during their analysis, but Suppress_Range_Checks flags\n+      --  must be reset the after processing the record definition.\n \n       --  Note: this is the only use of Kill_Range_Checks, and is a bit odd,\n       --  couldn't we just use the normal range check suppression method here."}, {"sha": "08d68bfb0736f400345b84d3250051245e594aa4", "filename": "gcc/ada/sem_ch7.adb", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef2a63ba1869942eae7ab3ceb4cada0f025a60ad/gcc%2Fada%2Fsem_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef2a63ba1869942eae7ab3ceb4cada0f025a60ad/gcc%2Fada%2Fsem_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch7.adb?ref=ef2a63ba1869942eae7ab3ceb4cada0f025a60ad", "patch": "@@ -1956,11 +1956,11 @@ package body Sem_Ch7 is\n       Set_Private_Dependents (Id, New_Elmt_List);\n \n       if Tagged_Present (Def) then\n-         Set_Ekind                (Id, E_Record_Type_With_Private);\n-         Set_Primitive_Operations (Id, New_Elmt_List);\n-         Set_Is_Abstract_Type     (Id, Abstract_Present (Def));\n-         Set_Is_Limited_Record    (Id, Limited_Present (Def));\n-         Set_Has_Delayed_Freeze   (Id, True);\n+         Set_Ekind                       (Id, E_Record_Type_With_Private);\n+         Set_Direct_Primitive_Operations (Id, New_Elmt_List);\n+         Set_Is_Abstract_Type            (Id, Abstract_Present (Def));\n+         Set_Is_Limited_Record           (Id, Limited_Present (Def));\n+         Set_Has_Delayed_Freeze          (Id, True);\n \n          --  Create a class-wide type with the same attributes\n "}, {"sha": "e891e70ffdbc8a49f957db68d3c7ce01ce5d9448", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef2a63ba1869942eae7ab3ceb4cada0f025a60ad/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef2a63ba1869942eae7ab3ceb4cada0f025a60ad/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=ef2a63ba1869942eae7ab3ceb4cada0f025a60ad", "patch": "@@ -5707,7 +5707,7 @@ package body Sem_Ch8 is\n                   end if;\n \n                   Set_Is_Tagged_Type (T);\n-                  Set_Primitive_Operations (T, New_Elmt_List);\n+                  Set_Direct_Primitive_Operations (T, New_Elmt_List);\n                   Make_Class_Wide_Type (T);\n                   Set_Entity (N, Class_Wide_Type (T));\n                   Set_Etype  (N, Class_Wide_Type (T));"}]}