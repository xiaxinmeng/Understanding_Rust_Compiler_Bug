{"sha": "5da969605f3461b0df9cbf950a5fc59841a83dde", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWRhOTY5NjA1ZjM0NjFiMGRmOWNiZjk1MGE1ZmM1OTg0MWE4M2RkZQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2014-01-10T20:25:05Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2014-01-10T20:25:05Z"}, "message": "target-globals.c (save_target_globals): Allocate < 4KB structs using GC in payload of target_globals struct instead of...\n\n\t* target-globals.c (save_target_globals): Allocate < 4KB structs using\n\tGC in payload of target_globals struct instead of allocating them on\n\tthe heap and the larger structs separately using GC.\n\t* target-globals.h (struct target_globals): Make regs, hard_regs,\n\treload, expmed, ira, ira_int and lra_fields GTY((atomic)) instead\n\tof GTY((skip)) and change type to void *.\n\t(reset_target_globals): Cast loads from those fields to corresponding\n\ttypes.\n\nFrom-SVN: r206539", "tree": {"sha": "97abae3357143c7989f23093f58cb9246fa0e2c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/97abae3357143c7989f23093f58cb9246fa0e2c6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5da969605f3461b0df9cbf950a5fc59841a83dde", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5da969605f3461b0df9cbf950a5fc59841a83dde", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5da969605f3461b0df9cbf950a5fc59841a83dde", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5da969605f3461b0df9cbf950a5fc59841a83dde/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "322b9977d28bbb783c26417ab5f9cfb4cc91e07d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/322b9977d28bbb783c26417ab5f9cfb4cc91e07d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/322b9977d28bbb783c26417ab5f9cfb4cc91e07d"}], "stats": {"total": 91, "additions": 61, "deletions": 30}, "files": [{"sha": "6be05570c14a93602164362f253e2d1bf4225ad3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5da969605f3461b0df9cbf950a5fc59841a83dde/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5da969605f3461b0df9cbf950a5fc59841a83dde/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5da969605f3461b0df9cbf950a5fc59841a83dde", "patch": "@@ -1,3 +1,14 @@\n+2014-01-10  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* target-globals.c (save_target_globals): Allocate < 4KB structs using\n+\tGC in payload of target_globals struct instead of allocating them on\n+\tthe heap and the larger structs separately using GC.\n+\t* target-globals.h (struct target_globals): Make regs, hard_regs,\n+\treload, expmed, ira, ira_int and lra_fields GTY((atomic)) instead\n+\tof GTY((skip)) and change type to void *.\n+\t(reset_target_globals): Cast loads from those fields to corresponding\n+\ttypes.\n+\n 2014-01-10  Steve Ellcey  <sellcey@mips.com>\n \n \tPR plugins/59335"}, {"sha": "8d3eaa89041e5479c020c0e18cb2eedb36069110", "filename": "gcc/target-globals.c", "status": "modified", "additions": 36, "deletions": 16, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5da969605f3461b0df9cbf950a5fc59841a83dde/gcc%2Ftarget-globals.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5da969605f3461b0df9cbf950a5fc59841a83dde/gcc%2Ftarget-globals.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftarget-globals.c?ref=5da969605f3461b0df9cbf950a5fc59841a83dde", "patch": "@@ -68,24 +68,44 @@ struct target_globals *\n save_target_globals (void)\n {\n   struct target_globals *g;\n-\n-  g = ggc_alloc_target_globals ();\n-  g->flag_state = XCNEW (struct target_flag_state);\n-  g->regs = XCNEW (struct target_regs);\n+  struct target_globals_extra {\n+    struct target_globals g;\n+    struct target_flag_state flag_state;\n+    struct target_optabs optabs;\n+    struct target_cfgloop cfgloop;\n+    struct target_builtins builtins;\n+    struct target_gcse gcse;\n+    struct target_bb_reorder bb_reorder;\n+    struct target_lower_subreg lower_subreg;\n+  } *p;\n+  p = (struct target_globals_extra *)\n+      ggc_internal_cleared_alloc_stat (sizeof (struct target_globals_extra)\n+\t\t\t\t       PASS_MEM_STAT);\n+  g = (struct target_globals *) p;\n+  g->flag_state = &p->flag_state;\n+  g->regs = ggc_internal_cleared_alloc_stat (sizeof (struct target_regs)\n+\t\t\t\t\t     PASS_MEM_STAT);\n   g->rtl = ggc_alloc_cleared_target_rtl ();\n-  g->hard_regs = XCNEW (struct target_hard_regs);\n-  g->reload = XCNEW (struct target_reload);\n-  g->expmed = XCNEW (struct target_expmed);\n-  g->optabs = XCNEW (struct target_optabs);\n+  g->hard_regs\n+    = ggc_internal_cleared_alloc_stat (sizeof (struct target_hard_regs)\n+\t\t\t\t       PASS_MEM_STAT);\n+  g->reload = ggc_internal_cleared_alloc_stat (sizeof (struct target_reload)\n+\t\t\t\t\t       PASS_MEM_STAT);\n+  g->expmed =  ggc_internal_cleared_alloc_stat (sizeof (struct target_expmed)\n+\t\t\t\t\t\tPASS_MEM_STAT);\n+  g->optabs = &p->optabs;\n   g->libfuncs = ggc_alloc_cleared_target_libfuncs ();\n-  g->cfgloop = XCNEW (struct target_cfgloop);\n-  g->ira = XCNEW (struct target_ira);\n-  g->ira_int = XCNEW (struct target_ira_int);\n-  g->lra_int = XCNEW (struct target_lra_int);\n-  g->builtins = XCNEW (struct target_builtins);\n-  g->gcse = XCNEW (struct target_gcse);\n-  g->bb_reorder = XCNEW (struct target_bb_reorder);\n-  g->lower_subreg = XCNEW (struct target_lower_subreg);\n+  g->cfgloop = &p->cfgloop;\n+  g->ira = ggc_internal_cleared_alloc_stat (sizeof (struct target_ira)\n+\t\t\t\t\t    PASS_MEM_STAT);\n+  g->ira_int = ggc_internal_cleared_alloc_stat (sizeof (struct target_ira_int)\n+\t\t\t\t\t\tPASS_MEM_STAT);\n+  g->lra_int = ggc_internal_cleared_alloc_stat (sizeof (struct target_lra_int)\n+\t\t\t\t\t\tPASS_MEM_STAT);\n+  g->builtins = &p->builtins;\n+  g->gcse = &p->gcse;\n+  g->bb_reorder = &p->bb_reorder;\n+  g->lower_subreg = &p->lower_subreg;\n   restore_target_globals (g);\n   init_reg_sets ();\n   target_reinit ();"}, {"sha": "e848a01677c08127b66f17506e671d0dc879c5f2", "filename": "gcc/target-globals.h", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5da969605f3461b0df9cbf950a5fc59841a83dde/gcc%2Ftarget-globals.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5da969605f3461b0df9cbf950a5fc59841a83dde/gcc%2Ftarget-globals.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftarget-globals.h?ref=5da969605f3461b0df9cbf950a5fc59841a83dde", "patch": "@@ -41,17 +41,17 @@ extern struct target_lower_subreg *this_target_lower_subreg;\n \n struct GTY(()) target_globals {\n   struct target_flag_state *GTY((skip)) flag_state;\n-  struct target_regs *GTY((skip)) regs;\n+  void *GTY((atomic)) regs;\n   struct target_rtl *rtl;\n-  struct target_hard_regs *GTY((skip)) hard_regs;\n-  struct target_reload *GTY((skip)) reload;\n-  struct target_expmed *GTY((skip)) expmed;\n+  void *GTY((atomic)) hard_regs;\n+  void *GTY((atomic)) reload;\n+  void *GTY((atomic)) expmed;\n   struct target_optabs *GTY((skip)) optabs;\n   struct target_libfuncs *libfuncs;\n   struct target_cfgloop *GTY((skip)) cfgloop;\n-  struct target_ira *GTY((skip)) ira;\n-  struct target_ira_int *GTY((skip)) ira_int;\n-  struct target_lra_int *GTY((skip)) lra_int;\n+  void *GTY((atomic)) ira;\n+  void *GTY((atomic)) ira_int;\n+  void *GTY((atomic)) lra_int;\n   struct target_builtins *GTY((skip)) builtins;\n   struct target_gcse *GTY((skip)) gcse;\n   struct target_bb_reorder *GTY((skip)) bb_reorder;\n@@ -68,17 +68,17 @@ static inline void\n restore_target_globals (struct target_globals *g)\n {\n   this_target_flag_state = g->flag_state;\n-  this_target_regs = g->regs;\n+  this_target_regs = (struct target_regs *) g->regs;\n   this_target_rtl = g->rtl;\n-  this_target_hard_regs = g->hard_regs;\n-  this_target_reload = g->reload;\n-  this_target_expmed = g->expmed;\n+  this_target_hard_regs = (struct target_hard_regs *) g->hard_regs;\n+  this_target_reload = (struct target_reload *) g->reload;\n+  this_target_expmed = (struct target_expmed *) g->expmed;\n   this_target_optabs = g->optabs;\n   this_target_libfuncs = g->libfuncs;\n   this_target_cfgloop = g->cfgloop;\n-  this_target_ira = g->ira;\n-  this_target_ira_int = g->ira_int;\n-  this_target_lra_int = g->lra_int;\n+  this_target_ira = (struct target_ira *) g->ira;\n+  this_target_ira_int = (struct target_ira_int *) g->ira_int;\n+  this_target_lra_int = (struct target_lra_int *) g->lra_int;\n   this_target_builtins = g->builtins;\n   this_target_gcse = g->gcse;\n   this_target_bb_reorder = g->bb_reorder;"}]}