{"sha": "2c8861b7505cdc04377cd125565bb5ccadb29529", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmM4ODYxYjc1MDVjZGMwNDM3N2NkMTI1NTY1YmI1Y2NhZGIyOTUyOQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2018-08-28T11:13:04Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2018-08-28T11:13:04Z"}, "message": "re PR middle-end/87099 (internal compiler error: segmentation fault)\n\n\tPR middle-end/87099\n\t* calls.c (maybe_warn_nonstring_arg): Punt early if\n\twarn_stringop_overflow is zero.  Don't call get_range_strlen\n\ton 3rd argument, keep iterating until lenrng[1] is INTEGER_CST.\n\tSwap comparison operands to have constants on rhs.  Only use\n\tlenrng[1] if non-NULL and INTEGER_CST.  Don't uselessly\n\tincrement lenrng[0].\n\n\t* gcc.dg/pr87099.c: New test.\n\nFrom-SVN: r263915", "tree": {"sha": "117cac799728b144f9d3de96b7c75faa7fc88a7a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/117cac799728b144f9d3de96b7c75faa7fc88a7a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2c8861b7505cdc04377cd125565bb5ccadb29529", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c8861b7505cdc04377cd125565bb5ccadb29529", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c8861b7505cdc04377cd125565bb5ccadb29529", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c8861b7505cdc04377cd125565bb5ccadb29529/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4ec4324d0f2425ad64540d4c4d8d29f8e8077c3d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ec4324d0f2425ad64540d4c4d8d29f8e8077c3d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ec4324d0f2425ad64540d4c4d8d29f8e8077c3d"}], "stats": {"total": 52, "additions": 44, "deletions": 8}, "files": [{"sha": "66396a0a4d3a594877c127ab2b975a9d4e8620db", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c8861b7505cdc04377cd125565bb5ccadb29529/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c8861b7505cdc04377cd125565bb5ccadb29529/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2c8861b7505cdc04377cd125565bb5ccadb29529", "patch": "@@ -1,3 +1,13 @@\n+2018-08-28  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/87099\n+\t* calls.c (maybe_warn_nonstring_arg): Punt early if\n+\twarn_stringop_overflow is zero.  Don't call get_range_strlen\n+\ton 3rd argument, keep iterating until lenrng[1] is INTEGER_CST.\n+\tSwap comparison operands to have constants on rhs.  Only use\n+\tlenrng[1] if non-NULL and INTEGER_CST.  Don't uselessly\n+\tincrement lenrng[0].\n+\n 2018-08-28  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* tree-ssa-sccvn.c (fully_constant_vn_reference_p): Fix unguarded"}, {"sha": "87e3f000eff9108d374326caeb4d876b6ea07166", "filename": "gcc/calls.c", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c8861b7505cdc04377cd125565bb5ccadb29529/gcc%2Fcalls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c8861b7505cdc04377cd125565bb5ccadb29529/gcc%2Fcalls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcalls.c?ref=2c8861b7505cdc04377cd125565bb5ccadb29529", "patch": "@@ -1545,7 +1545,7 @@ maybe_warn_nonstring_arg (tree fndecl, tree exp)\n   if (!fndecl || !fndecl_built_in_p (fndecl, BUILT_IN_NORMAL))\n     return;\n \n-  if (TREE_NO_WARNING (exp))\n+  if (TREE_NO_WARNING (exp) || !warn_stringop_overflow)\n     return;\n \n   unsigned nargs = call_expr_nargs (exp);\n@@ -1573,7 +1573,9 @@ maybe_warn_nonstring_arg (tree fndecl, tree exp)\n \t   the range of their known or possible lengths and use it\n \t   conservatively as the bound for the unbounded function,\n \t   and to adjust the range of the bound of the bounded ones.  */\n-\tfor (unsigned argno = 0; argno < nargs && !*lenrng; argno ++)\n+\tfor (unsigned argno = 0;\n+\t     argno < MIN (nargs, 2)\n+\t     && !(lenrng[1] && TREE_CODE (lenrng[1]) == INTEGER_CST); argno++)\n \t  {\n \t    tree arg = CALL_EXPR_ARG (exp, argno);\n \t    if (!get_attr_nonstring_decl (arg))\n@@ -1585,12 +1587,12 @@ maybe_warn_nonstring_arg (tree fndecl, tree exp)\n     case BUILT_IN_STRNCAT:\n     case BUILT_IN_STPNCPY:\n     case BUILT_IN_STRNCPY:\n-      if (2 < nargs)\n+      if (nargs > 2)\n \tbound = CALL_EXPR_ARG (exp, 2);\n       break;\n \n     case BUILT_IN_STRNDUP:\n-      if (1 < nargs)\n+      if (nargs > 1)\n \tbound = CALL_EXPR_ARG (exp, 1);\n       break;\n \n@@ -1600,7 +1602,7 @@ maybe_warn_nonstring_arg (tree fndecl, tree exp)\n \tif (!get_attr_nonstring_decl (arg))\n \t  get_range_strlen (arg, lenrng);\n \n-\tif (1 < nargs)\n+\tif (nargs > 1)\n \t  bound = CALL_EXPR_ARG (exp, 1);\n \tbreak;\n       }\n@@ -1640,11 +1642,9 @@ maybe_warn_nonstring_arg (tree fndecl, tree exp)\n \t}\n     }\n \n-  if (*lenrng)\n+  if (lenrng[1] && TREE_CODE (lenrng[1]) == INTEGER_CST)\n     {\n       /* Add one for the nul.  */\n-      lenrng[0] = const_binop (PLUS_EXPR, TREE_TYPE (lenrng[0]),\n-\t\t\t       lenrng[0], size_one_node);\n       lenrng[1] = const_binop (PLUS_EXPR, TREE_TYPE (lenrng[1]),\n \t\t\t       lenrng[1], size_one_node);\n "}, {"sha": "c62104902f5b8fae7b452ae8bdcc67e5590b522e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c8861b7505cdc04377cd125565bb5ccadb29529/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c8861b7505cdc04377cd125565bb5ccadb29529/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2c8861b7505cdc04377cd125565bb5ccadb29529", "patch": "@@ -1,3 +1,8 @@\n+2018-08-28  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/87099\n+\t* gcc.dg/pr87099.c: New test.\n+\n 2018-08-28  Richard Sandiford  <richard.sandiford@arm.com>\n \n \tPR testsuite/87078"}, {"sha": "599d721da318df75667d9b7ad9843121526ce3ff", "filename": "gcc/testsuite/gcc.dg/pr87099.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c8861b7505cdc04377cd125565bb5ccadb29529/gcc%2Ftestsuite%2Fgcc.dg%2Fpr87099.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c8861b7505cdc04377cd125565bb5ccadb29529/gcc%2Ftestsuite%2Fgcc.dg%2Fpr87099.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr87099.c?ref=2c8861b7505cdc04377cd125565bb5ccadb29529", "patch": "@@ -0,0 +1,21 @@\n+/* PR middle-end/87099 */\n+/* { dg-do compile } */\n+/* { dg-options \"-Wstringop-overflow\" } */\n+\n+void bar (char *);\n+\n+int\n+foo (int n)\n+{\n+  char v[n];\n+  bar (v);\n+  return __builtin_strncmp (&v[1], \"aaa\", 3);\n+}\n+\n+int\n+baz (int n, char *s)\n+{\n+  char v[n];\n+  bar (v);\n+  return __builtin_strncmp (&v[1], s, 3);\n+}"}]}