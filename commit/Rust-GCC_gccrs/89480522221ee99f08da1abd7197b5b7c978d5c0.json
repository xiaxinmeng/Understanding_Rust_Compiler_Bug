{"sha": "89480522221ee99f08da1abd7197b5b7c978d5c0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODk0ODA1MjIyMjFlZTk5ZjA4ZGExYWJkNzE5N2I1YjdjOTc4ZDVjMA==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2004-09-08T09:28:06Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2004-09-08T09:28:06Z"}, "message": "cgraph.c (cgraph_remove_node): Free DECL_INITIAL field of node.\n\n\t* cgraph.c (cgraph_remove_node): Free DECL_INITIAL field of node.\n\t* cgraphunit.c (verify_cgraph): Don't verify on syntax errors.\n\t(cgraph_expand_function): Remove stale cgraph edges of currently\n\tcompiled function; fix non-unit-at-a-time code copying function\n\tnode for later reuse.\n\nFrom-SVN: r87181", "tree": {"sha": "29b2c1082d2d4dda08ca1f0a6b2e0aa510db37c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/29b2c1082d2d4dda08ca1f0a6b2e0aa510db37c2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/89480522221ee99f08da1abd7197b5b7c978d5c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89480522221ee99f08da1abd7197b5b7c978d5c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/89480522221ee99f08da1abd7197b5b7c978d5c0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89480522221ee99f08da1abd7197b5b7c978d5c0/comments", "author": null, "committer": null, "parents": [{"sha": "323e3709b9ccdd514ac4ce2e2ba7e934984591b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/323e3709b9ccdd514ac4ce2e2ba7e934984591b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/323e3709b9ccdd514ac4ce2e2ba7e934984591b1"}], "stats": {"total": 32, "additions": 28, "deletions": 4}, "files": [{"sha": "e1a2ac1dd41e188187901961fd0c063fe5f6e951", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89480522221ee99f08da1abd7197b5b7c978d5c0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89480522221ee99f08da1abd7197b5b7c978d5c0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=89480522221ee99f08da1abd7197b5b7c978d5c0", "patch": "@@ -1,3 +1,11 @@\n+2004-09-08  Jan Hubicka  <jh@suse.cz>\n+\n+\t* cgraph.c (cgraph_remove_node): Free DECL_INITIAL field of node.\n+\t* cgraphunit.c (verify_cgraph): Don't verify on syntax errors.\n+\t(cgraph_expand_function): Remove stale cgraph edges of currently\n+\tcompiled function; fix non-unit-at-a-time code copying function\n+\tnode for later reuse.\n+\n 2004-09-08  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* vec.c (vec_p_reserve, vec_o_reserve): Rename to ..."}, {"sha": "6c93ac5f17342e2f3a0eafc7d29add5a99da0d5c", "filename": "gcc/cgraph.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89480522221ee99f08da1abd7197b5b7c978d5c0/gcc%2Fcgraph.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89480522221ee99f08da1abd7197b5b7c978d5c0/gcc%2Fcgraph.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.c?ref=89480522221ee99f08da1abd7197b5b7c978d5c0", "patch": "@@ -354,6 +354,7 @@ cgraph_remove_node (struct cgraph_node *node)\n \t{\n \t  DECL_SAVED_TREE (node->decl) = NULL;\n \t  DECL_STRUCT_FUNCTION (node->decl) = NULL;\n+          DECL_INITIAL (node->decl) = error_mark_node;\n \t}\n     }\n   cgraph_n_nodes--;"}, {"sha": "81df309951346bcd6d7397b805376ef948546a5a", "filename": "gcc/cgraphunit.c", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89480522221ee99f08da1abd7197b5b7c978d5c0/gcc%2Fcgraphunit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89480522221ee99f08da1abd7197b5b7c978d5c0/gcc%2Fcgraphunit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraphunit.c?ref=89480522221ee99f08da1abd7197b5b7c978d5c0", "patch": "@@ -610,6 +610,9 @@ verify_cgraph (void)\n {\n   struct cgraph_node *node;\n \n+  if (sorrycount || errorcount)\n+    return;\n+\n   for (node = cgraph_nodes; node; node = node->next)\n     verify_cgraph_node (node);\n }\n@@ -800,12 +803,15 @@ cgraph_expand_function (struct cgraph_node *node)\n   gcc_assert (TREE_ASM_WRITTEN (node->decl));\n \n   current_function_decl = NULL;\n-  if (DECL_SAVED_TREE (node->decl)\n-      && !cgraph_preserve_function_body_p (node->decl))\n+  if (!cgraph_preserve_function_body_p (node->decl))\n     {\n       DECL_SAVED_TREE (node->decl) = NULL;\n       DECL_STRUCT_FUNCTION (node->decl) = NULL;\n       DECL_INITIAL (node->decl) = error_mark_node;\n+      /* Elliminate all call edges.  This is important so the call_expr no longer\n+\t points to the dead function body.  */\n+      while (node->callees)\n+\tcgraph_remove_edge (node->callees);\n     }\n }\n "}, {"sha": "d081fe0590fd28601dba6ac09b93d55b7c7e988a", "filename": "gcc/tree-optimize.c", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89480522221ee99f08da1abd7197b5b7c978d5c0/gcc%2Ftree-optimize.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89480522221ee99f08da1abd7197b5b7c978d5c0/gcc%2Ftree-optimize.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-optimize.c?ref=89480522221ee99f08da1abd7197b5b7c978d5c0", "patch": "@@ -604,6 +604,11 @@ tree_rest_of_compilation (tree fndecl, bool nested_p)\n \t}\n     }\n \n+  /* We are not going to maintain the cgraph edges up to date.\n+     Kill it so it won't confuse us.  */\n+  while (node->callees)\n+    cgraph_remove_edge (node->callees);\n+\n   if (!vars_to_rename)\n     vars_to_rename = BITMAP_XMALLOC ();\n \n@@ -632,8 +637,12 @@ tree_rest_of_compilation (tree fndecl, bool nested_p)\n \t    cgraph_remove_edge (node->callees);\n \t  node->callees = saved_node->callees;\n \t  saved_node->callees = NULL;\n-\t  for (e = saved_node->callees; e; e = e->next_callee)\n-\t    e->caller = node;\n+\t  for (e = node->callees; e; e = e->next_callee)\n+\t    {\n+\t      if (e->callee->global.inlined_to)\n+\t\te->callee->global.inlined_to = node;\n+\t      e->caller = node;\n+\t    }\n \t  cgraph_remove_node (saved_node);\n \t}\n     }"}]}