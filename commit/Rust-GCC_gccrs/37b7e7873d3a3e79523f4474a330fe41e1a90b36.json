{"sha": "37b7e7873d3a3e79523f4474a330fe41e1a90b36", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzdiN2U3ODczZDNhM2U3OTUyM2Y0NDc0YTMzMGZlNDFlMWE5MGIzNg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2018-01-20T09:58:31Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2018-01-20T09:58:31Z"}, "message": "re PR middle-end/83945 (internal compiler error: Segmentation fault with -O -fcode-hoisting)\n\n\tPR middle-end/83945\n\t* tree-emutls.c: Include gimplify.h.\n\t(lower_emutls_2): New function.\n\t(lower_emutls_1): If ADDR_EXPR is a gimple invariant and walk_tree\n\twith lower_emutls_2 callback finds some TLS decl in it, unshare_expr\n\tit before further processing.\n\n\t* gcc.dg/tls/pr83945.c: New test.\n\nFrom-SVN: r256916", "tree": {"sha": "637882dab05745b1e461c3f9b187d24c7441155b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/637882dab05745b1e461c3f9b187d24c7441155b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/37b7e7873d3a3e79523f4474a330fe41e1a90b36", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37b7e7873d3a3e79523f4474a330fe41e1a90b36", "html_url": "https://github.com/Rust-GCC/gccrs/commit/37b7e7873d3a3e79523f4474a330fe41e1a90b36", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37b7e7873d3a3e79523f4474a330fe41e1a90b36/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "09cbbded0d197f2da4f01be6f90c8535474b8200", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09cbbded0d197f2da4f01be6f90c8535474b8200", "html_url": "https://github.com/Rust-GCC/gccrs/commit/09cbbded0d197f2da4f01be6f90c8535474b8200"}], "stats": {"total": 53, "additions": 53, "deletions": 0}, "files": [{"sha": "321066c6b0ac2ac8baf935b8035137f702023441", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37b7e7873d3a3e79523f4474a330fe41e1a90b36/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37b7e7873d3a3e79523f4474a330fe41e1a90b36/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=37b7e7873d3a3e79523f4474a330fe41e1a90b36", "patch": "@@ -1,5 +1,12 @@\n 2018-01-20  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR middle-end/83945\n+\t* tree-emutls.c: Include gimplify.h.\n+\t(lower_emutls_2): New function.\n+\t(lower_emutls_1): If ADDR_EXPR is a gimple invariant and walk_tree\n+\twith lower_emutls_2 callback finds some TLS decl in it, unshare_expr\n+\tit before further processing.\n+\n \tPR target/83930\n \t* simplify-rtx.c (simplify_binary_operation_1) <case UMOD>: Use\n \tUINTVAL (trueop1) instead of INTVAL (op1)."}, {"sha": "a88e459c73a6a49a7464538cbab47fe7649400e0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37b7e7873d3a3e79523f4474a330fe41e1a90b36/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37b7e7873d3a3e79523f4474a330fe41e1a90b36/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=37b7e7873d3a3e79523f4474a330fe41e1a90b36", "patch": "@@ -1,5 +1,8 @@\n 2018-01-20  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR middle-end/83945\n+\t* gcc.dg/tls/pr83945.c: New test.\n+\n \tPR target/83930\n \t* gcc.dg/pr83930.c: New test.\n "}, {"sha": "dade2388eea75f5db1ea06ca5e0e4bc8a6270c5a", "filename": "gcc/testsuite/gcc.dg/tls/pr83945.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37b7e7873d3a3e79523f4474a330fe41e1a90b36/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Fpr83945.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37b7e7873d3a3e79523f4474a330fe41e1a90b36/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Fpr83945.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftls%2Fpr83945.c?ref=37b7e7873d3a3e79523f4474a330fe41e1a90b36", "patch": "@@ -0,0 +1,21 @@\n+/* PR middle-end/83945 */\n+/* { dg-do compile { target tls } } */\n+/* { dg-options \"-O2\" } */\n+\n+struct S { int a[1]; };\n+__thread struct T { int c; } e;\n+int f;\n+void bar (int);\n+\n+void\n+foo (int f, int x)\n+{\n+  struct S *h = (struct S *) &e.c;\n+  for (;;)\n+    {\n+      int *a = h->a, i;\n+      for (i = x; i; i--)\n+\tbar (a[f]);\n+      bar (a[f]);\n+    }\n+}"}, {"sha": "fa4b7e15c45d45ce25134f176828c336673aed21", "filename": "gcc/tree-emutls.c", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37b7e7873d3a3e79523f4474a330fe41e1a90b36/gcc%2Ftree-emutls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37b7e7873d3a3e79523f4474a330fe41e1a90b36/gcc%2Ftree-emutls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-emutls.c?ref=37b7e7873d3a3e79523f4474a330fe41e1a90b36", "patch": "@@ -34,6 +34,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"gimple-walk.h\"\n #include \"langhooks.h\"\n #include \"tree-iterator.h\"\n+#include \"gimplify.h\"\n \n /* Whenever a target does not support thread-local storage (TLS) natively,\n    we can emulate it with some run-time support in libgcc.  This will in\n@@ -429,6 +430,20 @@ gen_emutls_addr (tree decl, struct lower_emutls_data *d)\n   return addr;\n }\n \n+/* Callback for lower_emutls_1, return non-NULL if there is any TLS\n+   VAR_DECL in the subexpressions.  */\n+\n+static tree\n+lower_emutls_2 (tree *ptr, int *walk_subtrees, void *)\n+{\n+  tree t = *ptr;\n+  if (TREE_CODE (t) == VAR_DECL)\n+    return DECL_THREAD_LOCAL_P (t) ? t : NULL_TREE;\n+  else if (!EXPR_P (t))\n+    *walk_subtrees = 0;\n+  return NULL_TREE;\n+}\n+\n /* Callback for walk_gimple_op.  D = WI->INFO is a struct lower_emutls_data.\n    Given an operand *PTR within D->STMT, if the operand references a TLS\n    variable, then lower the reference to a call to the runtime.  Insert\n@@ -455,6 +470,13 @@ lower_emutls_1 (tree *ptr, int *walk_subtrees, void *cb_data)\n \t{\n \t  bool save_changed;\n \n+\t  /* Gimple invariants are shareable trees, so before changing\n+\t     anything in them if we will need to change anything, unshare\n+\t     them.  */\n+\t  if (is_gimple_min_invariant (t)\n+\t      && walk_tree (&TREE_OPERAND (t, 0), lower_emutls_2, NULL, NULL))\n+\t    *ptr = t = unshare_expr (t);\n+\n \t  /* If we're allowed more than just is_gimple_val, continue.  */\n \t  if (!wi->val_only)\n \t    {"}]}