{"sha": "c30ddbc9da34903179c82e3ff3ddab65cb79e95b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzMwZGRiYzlkYTM0OTAzMTc5YzgyZTNmZjNkZGFiNjVjYjc5ZTk1Yg==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "1998-02-16T17:19:13Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "1998-02-16T17:19:13Z"}, "message": "Update documentation for builtin_setjmp related patterns.\n\nFrom-SVN: r18029", "tree": {"sha": "db0aad38a68dff268c591bc7e444a29e1412ec9e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/db0aad38a68dff268c591bc7e444a29e1412ec9e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c30ddbc9da34903179c82e3ff3ddab65cb79e95b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c30ddbc9da34903179c82e3ff3ddab65cb79e95b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c30ddbc9da34903179c82e3ff3ddab65cb79e95b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c30ddbc9da34903179c82e3ff3ddab65cb79e95b/comments", "author": null, "committer": null, "parents": [{"sha": "ecf0ad276bebfea8a6b547355956c0e34443cf7b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ecf0ad276bebfea8a6b547355956c0e34443cf7b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ecf0ad276bebfea8a6b547355956c0e34443cf7b"}], "stats": {"total": 29, "additions": 25, "deletions": 4}, "files": [{"sha": "96968fee4cc5c9ede1e9774bb7db3c07d599f94c", "filename": "gcc/md.texi", "status": "modified", "additions": 25, "deletions": 4, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c30ddbc9da34903179c82e3ff3ddab65cb79e95b/gcc%2Fmd.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c30ddbc9da34903179c82e3ff3ddab65cb79e95b/gcc%2Fmd.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmd.texi?ref=c30ddbc9da34903179c82e3ff3ddab65cb79e95b", "patch": "@@ -2462,8 +2462,10 @@ This pattern, if defined, contains code needed at the target of a\n nonlocal goto after the code already generated by GNU CC.  You will not\n normally need to define this pattern.  A typical reason why you might\n need this pattern is if some value, such as a pointer to a global table,\n-must be restored when the frame pointer is restored.  There are no\n-arguments.\n+must be restored when the frame pointer is restored.  Note that a nonlocal\n+goto only ocurrs within a unit-of-translation, so a global table pointer\n+that is shared by all functions of a given module need not be restored.\n+There are no arguments.\n \n @cindex @code{exception_receiver} instruction pattern\n @item @samp{exception_receiver}\n@@ -2474,14 +2476,33 @@ might need this pattern is if some value, such as a pointer to a global\n table, must be restored after control flow is branched to the handler of\n an exception.  There are no arguments.\n \n+@cindex @code{builtin_setjmp_setup} instruction pattern\n+@item @samp{builtin_setjmp_setup}\n+This pattern, if defined, contains additional code needed to initialize\n+the @code{jmp_buf}.  You will not normally need to define this pattern.\n+A typical reason why you might need this pattern is if some value, such\n+as a pointer to a global table, must be restored.  Though it is\n+preferred that the pointer value be recalculated if possible (given the\n+address of a label for instance).  The single argument is a pointer to\n+the @code{jmp_buf}.  Note that the buffer is five words long and that\n+the first three are normally used by the generic mechanism.\n+\n @cindex @code{builtin_setjmp_receiver} instruction pattern\n @item @samp{builtin_setjmp_receiver}\n This pattern, if defined, contains code needed at the site of an\n builtin setjmp that isn't needed at the site of a nonlocal goto.  You\n will not normally need to define this pattern.  A typical reason why you\n might need this pattern is if some value, such as a pointer to a global\n-table, must be restored.  This pattern is called immediate after the\n-call to @code{__dummy} has been emitted.  There are no arguments.\n+table, must be restored.  It takes one argument, which is the label\n+to which builtin_longjmp transfered control; this pattern may be emitted\n+at a small offset from that label.\n+\n+@cindex @code{builtin_longjmp} instruction pattern\n+@item @samp{builtin_longjmp}\n+This pattern, if defined, performs the entire action of the longjmp.\n+You will not normally need to define this pattern unless you also define\n+@code{builtin_setjmp_setup}.  The single argument is a pointer to the\n+@code{jmp_buf}.\n @end table\n \n @node Pattern Ordering"}]}