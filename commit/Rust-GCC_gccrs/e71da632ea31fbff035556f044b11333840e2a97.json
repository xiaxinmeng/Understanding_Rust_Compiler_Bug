{"sha": "e71da632ea31fbff035556f044b11333840e2a97", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTcxZGE2MzJlYTMxZmJmZjAzNTU1NmYwNDRiMTEzMzM4NDBlMmE5Nw==", "commit": {"author": {"name": "Mark Heffernan", "email": "meheff@google.com", "date": "2009-05-07T19:58:10Z"}, "committer": {"name": "Mark Heffernan", "email": "meheff@gcc.gnu.org", "date": "2009-05-07T19:58:10Z"}, "message": "invoke.texi (Debugging Options): Document change of debugging dump location.\n\n2009-05-07  Mark Heffernan  <meheff@google.com>\n\n\t* doc/invoke.texi (Debugging Options): Document change of debugging\n\tdump location.\n        * opts.c (decode_options): Make dump_base_name relative to\n\taux_base_name directory.\n\nFrom-SVN: r147249", "tree": {"sha": "554ed3af3200f247b0a5c9153ef5d9f73d0d7b58", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/554ed3af3200f247b0a5c9153ef5d9f73d0d7b58"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e71da632ea31fbff035556f044b11333840e2a97", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e71da632ea31fbff035556f044b11333840e2a97", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e71da632ea31fbff035556f044b11333840e2a97", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e71da632ea31fbff035556f044b11333840e2a97/comments", "author": {"login": "meheffernan", "id": 8258238, "node_id": "MDQ6VXNlcjgyNTgyMzg=", "avatar_url": "https://avatars.githubusercontent.com/u/8258238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/meheffernan", "html_url": "https://github.com/meheffernan", "followers_url": "https://api.github.com/users/meheffernan/followers", "following_url": "https://api.github.com/users/meheffernan/following{/other_user}", "gists_url": "https://api.github.com/users/meheffernan/gists{/gist_id}", "starred_url": "https://api.github.com/users/meheffernan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/meheffernan/subscriptions", "organizations_url": "https://api.github.com/users/meheffernan/orgs", "repos_url": "https://api.github.com/users/meheffernan/repos", "events_url": "https://api.github.com/users/meheffernan/events{/privacy}", "received_events_url": "https://api.github.com/users/meheffernan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fe4c7bc6ac34f7a6c1066eda24675f2898e4576e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe4c7bc6ac34f7a6c1066eda24675f2898e4576e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe4c7bc6ac34f7a6c1066eda24675f2898e4576e"}], "stats": {"total": 86, "additions": 61, "deletions": 25}, "files": [{"sha": "84606104947d449e532811bbe0af9809e9396349", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e71da632ea31fbff035556f044b11333840e2a97/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e71da632ea31fbff035556f044b11333840e2a97/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e71da632ea31fbff035556f044b11333840e2a97", "patch": "@@ -1,3 +1,10 @@\n+2009-05-07  Mark Heffernan  <meheff@google.com>\n+\n+\t* doc/invoke.texi (Debugging Options): Document change of debugging\n+\tdump location.\n+        * opts.c (decode_options): Make dump_base_name relative to\n+\taux_base_name directory.\n+\n 2009-05-07  Hariharan Sandanagobalane <hariharan@picochip.com>\n \n \t* config/picochip/picochip.h (NO_DOLLAR_IN_LABEL): Added."}, {"sha": "2674c47ef89e8e8a57fc4bf6b68c5b24c9a5c7f9", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 33, "deletions": 25, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e71da632ea31fbff035556f044b11333840e2a97/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e71da632ea31fbff035556f044b11333840e2a97/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=e71da632ea31fbff035556f044b11333840e2a97", "patch": "@@ -4585,13 +4585,14 @@ and dbg_cnt(tail_call) will return false always.\n @itemx -fdump-rtl-@var{pass}\n @opindex d\n Says to make debugging dumps during compilation at times specified by\n-@var{letters}.    This is used for debugging the RTL-based passes of the\n-compiler.  The file names for most of the dumps are made by appending a\n-pass number and a word to the @var{dumpname}.  @var{dumpname} is generated\n-from the name of the output file, if explicitly specified and it is not\n-an executable, otherwise it is the basename of the source file. These\n-switches may have different effects when @option{-E} is used for\n-preprocessing.\n+@var{letters}.  This is used for debugging the RTL-based passes of the\n+compiler.  The file names for most of the dumps are made by appending\n+a pass number and a word to the @var{dumpname}, and the files are\n+created in the directory of the output file.  @var{dumpname} is\n+generated from the name of the output file, if explicitly specified\n+and it is not an executable, otherwise it is the basename of the\n+source file. These switches may have different effects when\n+@option{-E} is used for preprocessing.\n \n Debug dumps can be enabled with a @option{-fdump-rtl} switch or some\n @option{-d} option @var{letters}.  Here are the possible\n@@ -4919,24 +4920,28 @@ invocations with different options, in particular with and without\n @opindex fdump-translation-unit\n Dump a representation of the tree structure for the entire translation\n unit to a file.  The file name is made by appending @file{.tu} to the\n-source file name.  If the @samp{-@var{options}} form is used, @var{options}\n+source file name, and the file is created in the same directory as the\n+output file.  If the @samp{-@var{options}} form is used, @var{options}\n controls the details of the dump as described for the\n @option{-fdump-tree} options.\n \n @item -fdump-class-hierarchy @r{(C++ only)}\n @itemx -fdump-class-hierarchy-@var{options} @r{(C++ only)}\n @opindex fdump-class-hierarchy\n Dump a representation of each class's hierarchy and virtual function\n-table layout to a file.  The file name is made by appending @file{.class}\n-to the source file name.  If the @samp{-@var{options}} form is used,\n-@var{options} controls the details of the dump as described for the\n-@option{-fdump-tree} options.\n+table layout to a file.  The file name is made by appending\n+@file{.class} to the source file name, and the file is created in the\n+same directory as the output file.  If the @samp{-@var{options}} form\n+is used, @var{options} controls the details of the dump as described\n+for the @option{-fdump-tree} options.\n \n @item -fdump-ipa-@var{switch}\n @opindex fdump-ipa\n Control the dumping at various stages of inter-procedural analysis\n-language tree to a file.  The file name is generated by appending a switch\n-specific suffix to the source file name.  The following dumps are possible:\n+language tree to a file.  The file name is generated by appending a\n+switch specific suffix to the source file name, and the file is created\n+in the same directory as the output file.  The following dumps are\n+possible:\n \n @table @samp\n @item all\n@@ -4954,22 +4959,25 @@ Dump after function inlining.\n @item -fdump-statistics-@var{option}\n @opindex -fdump-statistics\n Enable and control dumping of pass statistics in a separate file.  The\n-file name is generated by appending a suffix ending in @samp{.statistics}\n-to the source file name.  If the @samp{-@var{option}} form is used,\n-@samp{-stats} will cause counters to be summed over the whole compilation unit\n-while @samp{-details} will dump every event as the passes generate them.\n-The default with no option is to sum counters for each function compiled.\n+file name is generated by appending a suffix ending in\n+@samp{.statistics} to the source file name, and the file is created in\n+the same directory as the output file.  If the @samp{-@var{option}}\n+form is used, @samp{-stats} will cause counters to be summed over the\n+whole compilation unit while @samp{-details} will dump every event as\n+the passes generate them.  The default with no option is to sum\n+counters for each function compiled.\n \n @item -fdump-tree-@var{switch}\n @itemx -fdump-tree-@var{switch}-@var{options}\n @opindex fdump-tree\n Control the dumping at various stages of processing the intermediate\n-language tree to a file.  The file name is generated by appending a switch\n-specific suffix to the source file name.  If the @samp{-@var{options}}\n-form is used, @var{options} is a list of @samp{-} separated options that\n-control the details of the dump.  Not all options are applicable to all\n-dumps, those which are not meaningful will be ignored.  The following\n-options are available\n+language tree to a file.  The file name is generated by appending a\n+switch specific suffix to the source file name, and the file is\n+created in the same directory as the output file.  If the\n+@samp{-@var{options}} form is used, @var{options} is a list of\n+@samp{-} separated options that control the details of the dump.  Not\n+all options are applicable to all dumps, those which are not\n+meaningful will be ignored.  The following options are available\n \n @table @samp\n @item address"}, {"sha": "aab540c03991f1202622b88b396bfcb9016f846c", "filename": "gcc/opts.c", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e71da632ea31fbff035556f044b11333840e2a97/gcc%2Fopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e71da632ea31fbff035556f044b11333840e2a97/gcc%2Fopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.c?ref=e71da632ea31fbff035556f044b11333840e2a97", "patch": "@@ -961,6 +961,27 @@ decode_options (unsigned int argc, const char **argv)\n \n   handle_options (argc, argv, lang_mask);\n \n+  /* Make DUMP_BASE_NAME relative to the AUX_BASE_NAME directory,\n+     typically the directory to contain the object file.  */\n+  if (aux_base_name && ! IS_ABSOLUTE_PATH (dump_base_name))\n+    {\n+      const char *aux_base;\n+\n+      base_of_path (aux_base_name, &aux_base);\n+      if (aux_base_name != aux_base)\n+\t{\n+\t  int dir_len = aux_base - aux_base_name;\n+\t  char *new_dump_base_name =\n+\t    XNEWVEC (char, strlen(dump_base_name) + dir_len + 1);\n+\n+\t  /* Copy directory component from AUX_BASE_NAME.  */\n+\t  memcpy (new_dump_base_name, aux_base_name, dir_len);\n+\t  /* Append existing DUMP_BASE_NAME.  */\n+\t  strcpy (new_dump_base_name + dir_len, dump_base_name);\n+\t  dump_base_name = new_dump_base_name;\n+\t}\n+    }\n+\n   /* Handle related options for unit-at-a-time, toplevel-reorder, and\n      section-anchors.  */\n   if (!flag_unit_at_a_time)"}]}