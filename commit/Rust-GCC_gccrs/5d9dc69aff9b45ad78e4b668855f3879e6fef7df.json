{"sha": "5d9dc69aff9b45ad78e4b668855f3879e6fef7df", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWQ5ZGM2OWFmZjliNDVhZDc4ZTRiNjY4ODU1ZjM4NzllNmZlZjdkZg==", "commit": {"author": {"name": "John David Anglin", "email": "dave.anglin@nrc-cnrc.gc.ca", "date": "2012-03-01T19:31:03Z"}, "committer": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2012-03-01T19:31:03Z"}, "message": "re PR target/52408 (Incorrect assembler generated for zvdep_imm64)\n\n\tPR target/52408\n\t* config/pa/pa.md (zvdep_imm32): Change type of variable x from int to\n\tunsigned HOST_WIDE_INT.\n\t(zvdep_imm64): Likewise.\n\t(vdepi_ior): Change type of variable x from int to HOST_WIDE_INT.\n\t(vdepi_and): Likewise.\n\tLikewise for unamed 64-bit patterns.\n\t* config/pa/predicates.md (lhs_lshift_cint_operand): Update comment.\n\nFrom-SVN: r184757", "tree": {"sha": "6fff84ddb22d49dca7bcb94da14d0bea99e82137", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6fff84ddb22d49dca7bcb94da14d0bea99e82137"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5d9dc69aff9b45ad78e4b668855f3879e6fef7df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d9dc69aff9b45ad78e4b668855f3879e6fef7df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d9dc69aff9b45ad78e4b668855f3879e6fef7df", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d9dc69aff9b45ad78e4b668855f3879e6fef7df/comments", "author": null, "committer": null, "parents": [{"sha": "4462d7ae909e2eab8801a599b9da3e7f99238c90", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4462d7ae909e2eab8801a599b9da3e7f99238c90", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4462d7ae909e2eab8801a599b9da3e7f99238c90"}], "stats": {"total": 29, "additions": 20, "deletions": 9}, "files": [{"sha": "cc49faa560425105a8b649fa734bf7f1ad974bee", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d9dc69aff9b45ad78e4b668855f3879e6fef7df/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d9dc69aff9b45ad78e4b668855f3879e6fef7df/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5d9dc69aff9b45ad78e4b668855f3879e6fef7df", "patch": "@@ -1,3 +1,14 @@\n+2012-03-01  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n+\n+\tPR target/52408\n+\t* config/pa/pa.md (zvdep_imm32): Change type of variable x from int to\n+\tunsigned HOST_WIDE_INT.\n+\t(zvdep_imm64): Likewise.\n+\t(vdepi_ior): Change type of variable x from int to HOST_WIDE_INT.\n+\t(vdepi_and): Likewise.\n+\tLikewise for unamed 64-bit patterns.\n+\t* config/pa/predicates.md (lhs_lshift_cint_operand): Update comment.\n+\n 2012-03-01  Alexandre Oliva  <aoliva@redhat.com>\n \n \tPR debug/52001"}, {"sha": "a69f2b8a365062ed3fa58791a90c7bdb4a929bae", "filename": "gcc/config/pa/pa.md", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d9dc69aff9b45ad78e4b668855f3879e6fef7df/gcc%2Fconfig%2Fpa%2Fpa.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d9dc69aff9b45ad78e4b668855f3879e6fef7df/gcc%2Fconfig%2Fpa%2Fpa.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.md?ref=5d9dc69aff9b45ad78e4b668855f3879e6fef7df", "patch": "@@ -6349,7 +6349,7 @@\n   \"\"\n   \"*\n {\n-  int x = INTVAL (operands[1]);\n+  unsigned HOST_WIDE_INT x = UINTVAL (operands[1]);\n   operands[2] = GEN_INT (4 + exact_log2 ((x >> 4) + 1));\n   operands[1] = GEN_INT ((x & 0xf) - 0x10);\n   return \\\"{zvdepi %1,%2,%0|depwi,z %1,%%sar,%2,%0}\\\";\n@@ -6367,7 +6367,7 @@\n   \"exact_log2 (INTVAL (operands[1]) + 1) > 0\"\n   \"*\n {\n-  int x = INTVAL (operands[1]);\n+  HOST_WIDE_INT x = INTVAL (operands[1]);\n   operands[2] = GEN_INT (exact_log2 (x + 1));\n   return \\\"{vdepi -1,%2,%0|depwi -1,%%sar,%2,%0}\\\";\n }\"\n@@ -6384,7 +6384,7 @@\n   \"INTVAL (operands[1]) == -2\"\n   \"*\n {\n-  int x = INTVAL (operands[1]);\n+  HOST_WIDE_INT x = INTVAL (operands[1]);\n   operands[2] = GEN_INT (exact_log2 ((~x) + 1));\n   return \\\"{vdepi 0,%2,%0|depwi 0,%%sar,%2,%0}\\\";\n }\"\n@@ -6448,7 +6448,7 @@\n   \"TARGET_64BIT\"\n   \"*\n {\n-  int x = INTVAL (operands[1]);\n+  unsigned HOST_WIDE_INT x = UINTVAL (operands[1]);\n   operands[2] = GEN_INT (4 + exact_log2 ((x >> 4) + 1));\n   operands[1] = GEN_INT ((x & 0x1f) - 0x20);\n   return \\\"depdi,z %1,%%sar,%2,%0\\\";\n@@ -6466,7 +6466,7 @@\n   \"TARGET_64BIT && exact_log2 (INTVAL (operands[1]) + 1) > 0\"\n   \"*\n {\n-  int x = INTVAL (operands[1]);\n+  HOST_WIDE_INT x = INTVAL (operands[1]);\n   operands[2] = GEN_INT (exact_log2 (x + 1));\n   return \\\"depdi -1,%%sar,%2,%0\\\";\n }\"\n@@ -6483,7 +6483,7 @@\n   \"TARGET_64BIT && INTVAL (operands[1]) == -2\"\n   \"*\n {\n-  int x = INTVAL (operands[1]);\n+  HOST_WIDE_INT x = INTVAL (operands[1]);\n   operands[2] = GEN_INT (exact_log2 ((~x) + 1));\n   return \\\"depdi 0,%%sar,%2,%0\\\";\n }\""}, {"sha": "4a871194c29c2dd0e733973c51477c216a66b1cd", "filename": "gcc/config/pa/predicates.md", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d9dc69aff9b45ad78e4b668855f3879e6fef7df/gcc%2Fconfig%2Fpa%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d9dc69aff9b45ad78e4b668855f3879e6fef7df/gcc%2Fconfig%2Fpa%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpredicates.md?ref=5d9dc69aff9b45ad78e4b668855f3879e6fef7df", "patch": "@@ -247,9 +247,9 @@\n   (ior (match_operand 0 \"ireg_operand\")\n        (match_operand 0 \"int5_operand\")))\n \n-;; True iff OP is a CONST_INT of the forms 0...0xxxx or\n-;; 0...01...1xxxx. Such values can be the left hand side x in (x <<\n-;; r), using the zvdepi instruction.\n+;; True iff OP is a CONST_INT of the forms 0...0xxxx, 0...01...1xxxx,\n+;; or 1...1xxxx. Such values can be the left hand side x in (x << r),\n+;; using the zvdepi instruction.\n \n (define_predicate \"lhs_lshift_cint_operand\"\n   (match_code \"const_int\")"}]}