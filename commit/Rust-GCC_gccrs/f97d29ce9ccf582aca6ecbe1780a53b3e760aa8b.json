{"sha": "f97d29ce9ccf582aca6ecbe1780a53b3e760aa8b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Zjk3ZDI5Y2U5Y2NmNTgyYWNhNmVjYmUxNzgwYTUzYjNlNzYwYWE4Yg==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1994-06-18T20:44:41Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1994-06-18T20:44:41Z"}, "message": "(move_movables): Copy CALL_INSN_FUNCTION_USAGE field.\n\nFrom-SVN: r7517", "tree": {"sha": "a8675eebd5b6dab1c25313dba2592d73e419ad22", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a8675eebd5b6dab1c25313dba2592d73e419ad22"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f97d29ce9ccf582aca6ecbe1780a53b3e760aa8b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f97d29ce9ccf582aca6ecbe1780a53b3e760aa8b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f97d29ce9ccf582aca6ecbe1780a53b3e760aa8b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f97d29ce9ccf582aca6ecbe1780a53b3e760aa8b/comments", "author": null, "committer": null, "parents": [{"sha": "0eb111c2d9247d79c880474c8573a145fb06ac69", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0eb111c2d9247d79c880474c8573a145fb06ac69", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0eb111c2d9247d79c880474c8573a145fb06ac69"}], "stats": {"total": 18, "additions": 16, "deletions": 2}, "files": [{"sha": "dc39fdfd3d42958a95c766282b25339eb31d46bb", "filename": "gcc/loop.c", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f97d29ce9ccf582aca6ecbe1780a53b3e760aa8b/gcc%2Floop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f97d29ce9ccf582aca6ecbe1780a53b3e760aa8b/gcc%2Floop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop.c?ref=f97d29ce9ccf582aca6ecbe1780a53b3e760aa8b", "patch": "@@ -1786,7 +1786,14 @@ move_movables (movables, threshold, insn_count, loop_start, end, nregs)\n \t\t\t\t\t\t fn_address_insn);\n \n \t\t\t      if (GET_CODE (temp) == CALL_INSN)\n-\t\t\t\ti1 = emit_call_insn_before (body, loop_start);\n+\t\t\t\t{\n+\t\t\t\t  i1 = emit_call_insn_before (body, loop_start);\n+\t\t\t\t  /* Because the USAGE information potentially\n+\t\t\t\t     contains objects other than hard registers\n+\t\t\t\t     we need to copy it.  */\n+\t\t\t\t  CALL_INSN_FUNCTION_USAGE (i1) =\n+\t\t\t\t    copy_rtx (CALL_INSN_FUNCTION_USAGE (temp));\n+\t\t\t\t}\n \t\t\t      else\n \t\t\t\ti1 = emit_insn_before (body, loop_start);\n \t\t\t      if (first == 0)\n@@ -1822,7 +1829,14 @@ move_movables (movables, threshold, insn_count, loop_start, end, nregs)\n \t\t\t  i1 = emit_insn_before (sequence, loop_start);\n \t\t\t}\n \t\t      else if (GET_CODE (p) == CALL_INSN)\n-\t\t\ti1 = emit_call_insn_before (PATTERN (p), loop_start);\n+\t\t\t{\n+\t\t\t  i1 = emit_call_insn_before (PATTERN (p), loop_start);\n+\t\t\t  /* Because the USAGE information potentially\n+\t\t\t     contains objects other than hard registers\n+\t\t\t     we need to copy it.  */\n+\t\t\t  CALL_INSN_FUNCTION_USAGE (i1) =\n+\t\t\t    copy_rtx (CALL_INSN_FUNCTION_USAGE (p));\n+\t\t\t}\n \t\t      else\n \t\t\ti1 = emit_insn_before (PATTERN (p), loop_start);\n "}]}