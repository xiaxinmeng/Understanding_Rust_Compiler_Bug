{"sha": "a0be84dd8c0a461050ab96d8c563c9e9482e0107", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTBiZTg0ZGQ4YzBhNDYxMDUwYWI5NmQ4YzU2M2M5ZTk0ODJlMDEwNw==", "commit": {"author": {"name": "Mohan Embar", "email": "gnustuff@thisiscool.com", "date": "2004-09-11T19:13:51Z"}, "committer": {"name": "Mohan Embar", "email": "membar@gcc.gnu.org", "date": "2004-09-11T19:13:51Z"}, "message": "re PR libgcj/14751 ([win32] thread creation leaks system handle resources)\n\n\tPR libgcj/14751\n\t* win32-threads.cc (_Jv_ThreadInitData): Zero out thread\n\thandle in newly-allocated _Jv_Thread_t.\n\t(_Jv_ThreadDestroyData): Close thread handle.\n\t(_Jv_ThreadStart): Remove obsolete comment.\n\tStore handle of newly-created thread in _Jv_Thread_t.\n\t* include/win32-threads.h: #define WIN32_LEAN_AND_MEAN\n\tbefore including <windows.h>\n\t#define _Jv_HaveCondDestroy\n\nFrom-SVN: r87362", "tree": {"sha": "d727f36c523c4585200ec6eedd2eaf6e8968aede", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d727f36c523c4585200ec6eedd2eaf6e8968aede"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a0be84dd8c0a461050ab96d8c563c9e9482e0107", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0be84dd8c0a461050ab96d8c563c9e9482e0107", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a0be84dd8c0a461050ab96d8c563c9e9482e0107", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0be84dd8c0a461050ab96d8c563c9e9482e0107/comments", "author": null, "committer": null, "parents": [{"sha": "bdbf6060ea5df98ab2a6cd4be0c99e347b65e737", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bdbf6060ea5df98ab2a6cd4be0c99e347b65e737", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bdbf6060ea5df98ab2a6cd4be0c99e347b65e737"}], "stats": {"total": 19, "additions": 17, "deletions": 2}, "files": [{"sha": "cc796b163fe1953ec199d64bbdff7c7a73f13095", "filename": "libjava/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0be84dd8c0a461050ab96d8c563c9e9482e0107/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0be84dd8c0a461050ab96d8c563c9e9482e0107/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=a0be84dd8c0a461050ab96d8c563c9e9482e0107", "patch": "@@ -1,3 +1,15 @@\n+2004-09-11  Mohan Embar  <gnustuff@thisiscool.com>\n+\n+\tPR libgcj/14751\n+\t* win32-threads.cc (_Jv_ThreadInitData): Zero out thread\n+\thandle in newly-allocated _Jv_Thread_t.\n+\t(_Jv_ThreadDestroyData): Close thread handle.\n+\t(_Jv_ThreadStart): Remove obsolete comment.\n+\tStore handle of newly-created thread in _Jv_Thread_t.\n+\t* include/win32-threads.h: #define WIN32_LEAN_AND_MEAN\n+\tbefore including <windows.h>\n+\t#define _Jv_HaveCondDestroy\n+\n 2004-09-11  Mohan Embar  <gnustuff@thisiscool.com>\n \n \t* java/lang/natThread.cc (finalize_native): Destroy"}, {"sha": "ba9def10d6815cee80dc74b2a662467de7ce7bfd", "filename": "libjava/include/win32-threads.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0be84dd8c0a461050ab96d8c563c9e9482e0107/libjava%2Finclude%2Fwin32-threads.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0be84dd8c0a461050ab96d8c563c9e9482e0107/libjava%2Finclude%2Fwin32-threads.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Finclude%2Fwin32-threads.h?ref=a0be84dd8c0a461050ab96d8c563c9e9482e0107", "patch": "@@ -13,6 +13,7 @@ details.  */\n #ifndef __JV_WIN32_THREADS__\n #define __JV_WIN32_THREADS__\n \n+#define WIN32_LEAN_AND_MEAN\n #include <windows.h>\n \n //\n@@ -75,6 +76,7 @@ typedef void _Jv_ThreadStartFunc (java::lang::Thread *);\n // Condition variables.\n //\n \n+#define _Jv_HaveCondDestroy\n int _Jv_CondWait (_Jv_ConditionVariable_t *cv, _Jv_Mutex_t *mu, jlong millis, jint nanos);\n void _Jv_CondInit (_Jv_ConditionVariable_t *cv);\n void _Jv_CondDestroy (_Jv_ConditionVariable_t *cv);"}, {"sha": "35a16cdb6ace39be099568f3adc2deb62594991e", "filename": "libjava/win32-threads.cc", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0be84dd8c0a461050ab96d8c563c9e9482e0107/libjava%2Fwin32-threads.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0be84dd8c0a461050ab96d8c563c9e9482e0107/libjava%2Fwin32-threads.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fwin32-threads.cc?ref=a0be84dd8c0a461050ab96d8c563c9e9482e0107", "patch": "@@ -262,6 +262,7 @@ _Jv_ThreadInitData (java::lang::Thread* obj)\n {\n   _Jv_Thread_t *data = (_Jv_Thread_t*)_Jv_Malloc(sizeof(_Jv_Thread_t));\n   data->flags = 0;\n+  data->handle = 0;\n   data->thread_obj = obj;\n   data->interrupt_event = 0;\n   InitializeCriticalSection (&data->interrupt_mutex);\n@@ -275,6 +276,7 @@ _Jv_ThreadDestroyData (_Jv_Thread_t *data)\n   DeleteCriticalSection (&data->interrupt_mutex);\n   if (data->interrupt_event)\n     CloseHandle(data->interrupt_event);\n+  CloseHandle(data->handle);\n   _Jv_Free(data);\n }\n \n@@ -365,7 +367,6 @@ _Jv_ThreadStart (java::lang::Thread *thread, _Jv_Thread_t *data, _Jv_ThreadStart\n     return;\n   data->flags |= FLAG_START;\n \n-  // FIXME: handle marking the info object for GC.\n   info = (struct starter *) _Jv_AllocBytes (sizeof (struct starter));\n   info->method = meth;\n   info->data = data;\n@@ -379,7 +380,7 @@ _Jv_ThreadStart (java::lang::Thread *thread, _Jv_Thread_t *data, _Jv_ThreadStart\n   else\n     data->flags |= FLAG_DAEMON;\n \n-  GC_CreateThread(NULL, 0, really_start, info, 0, &id);\n+  data->handle = GC_CreateThread(NULL, 0, really_start, info, 0, &id);\n   _Jv_ThreadSetPriority(data, thread->getPriority());\n }\n "}]}