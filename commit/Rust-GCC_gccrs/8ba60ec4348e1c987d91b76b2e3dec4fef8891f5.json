{"sha": "8ba60ec4348e1c987d91b76b2e3dec4fef8891f5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGJhNjBlYzQzNDhlMWM5ODdkOTFiNzZiMmUzZGVjNGZlZjg4OTFmNQ==", "commit": {"author": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2018-09-30T07:02:49Z"}, "committer": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2018-09-30T07:02:49Z"}, "message": "re PR fortran/70149 ([F08] Character pointer initialization causes ICE)\n\n2018-09-30  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/70149\n\t* trans-decl.c (gfc_get_symbol_decl): A deferred character\n\tlength pointer that is initialized needs the string length to\n\tbe initialized as well.\n\n2018-09-30  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/70149\n\t* gfortran.dg/deferred_character_24.f90 : New test.\n\nFrom-SVN: r264721", "tree": {"sha": "f03618e19ae5a8d5eff8e6a6be5ded3971aa0fba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f03618e19ae5a8d5eff8e6a6be5ded3971aa0fba"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8ba60ec4348e1c987d91b76b2e3dec4fef8891f5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ba60ec4348e1c987d91b76b2e3dec4fef8891f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ba60ec4348e1c987d91b76b2e3dec4fef8891f5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ba60ec4348e1c987d91b76b2e3dec4fef8891f5/comments", "author": null, "committer": null, "parents": [{"sha": "5e8b5d90ca6aa33ac30cbc4a9a99ca7948d29541", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e8b5d90ca6aa33ac30cbc4a9a99ca7948d29541", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5e8b5d90ca6aa33ac30cbc4a9a99ca7948d29541"}], "stats": {"total": 47, "additions": 46, "deletions": 1}, "files": [{"sha": "db17d97fe83566b80e03ce8ef8a2f938d3547d1f", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ba60ec4348e1c987d91b76b2e3dec4fef8891f5/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ba60ec4348e1c987d91b76b2e3dec4fef8891f5/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=8ba60ec4348e1c987d91b76b2e3dec4fef8891f5", "patch": "@@ -1,3 +1,10 @@\n+2018-09-30  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/70149\n+\t* trans-decl.c (gfc_get_symbol_decl): A deferred character\n+\tlength pointer that is initialized needs the string length to\n+\tbe initialized as well.\n+\n 2018-09-29  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/65667"}, {"sha": "f7568d5a6c42dec031c6bf2da51f335720c32e76", "filename": "gcc/fortran/trans-decl.c", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ba60ec4348e1c987d91b76b2e3dec4fef8891f5/gcc%2Ffortran%2Ftrans-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ba60ec4348e1c987d91b76b2e3dec4fef8891f5/gcc%2Ffortran%2Ftrans-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-decl.c?ref=8ba60ec4348e1c987d91b76b2e3dec4fef8891f5", "patch": "@@ -1759,7 +1759,17 @@ gfc_get_symbol_decl (gfc_symbol * sym)\n       && TREE_CODE (sym->ts.u.cl->backend_decl) != INDIRECT_REF)\n     {\n       gfc_finish_var_decl (length, sym);\n-      gcc_assert (!sym->value);\n+      if (!sym->attr.associate_var\n+\t  && TREE_CODE (length) == VAR_DECL\n+\t  && sym->value && sym->value->ts.u.cl->length)\n+\t{\n+\t  gfc_expr *len = sym->value->ts.u.cl->length;\n+\t  DECL_INITIAL (length) = gfc_conv_initializer (len, &len->ts,\n+\t\t\t\t\t\t\tTREE_TYPE (length),\n+\t\t\t\t\t\t\tfalse, false, false);\n+\t}\n+      else\n+\tgcc_assert (!sym->value);\n     }\n \n   gfc_finish_var_decl (decl, sym);"}, {"sha": "2257b179c779288d09dd53665813c20fef4d2b81", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ba60ec4348e1c987d91b76b2e3dec4fef8891f5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ba60ec4348e1c987d91b76b2e3dec4fef8891f5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8ba60ec4348e1c987d91b76b2e3dec4fef8891f5", "patch": "@@ -1,3 +1,8 @@\n+2018-09-30  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/70149\n+\t* gfortran.dg/deferred_character_24.f90 : New test.\n+\n 2018-09-29  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR target/87370"}, {"sha": "9f5f7bc2377d97963558a56f6e0a001e8a2fdfa8", "filename": "gcc/testsuite/gfortran.dg/deferred_character_24.f90", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ba60ec4348e1c987d91b76b2e3dec4fef8891f5/gcc%2Ftestsuite%2Fgfortran.dg%2Fdeferred_character_24.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ba60ec4348e1c987d91b76b2e3dec4fef8891f5/gcc%2Ftestsuite%2Fgfortran.dg%2Fdeferred_character_24.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdeferred_character_24.f90?ref=8ba60ec4348e1c987d91b76b2e3dec4fef8891f5", "patch": "@@ -0,0 +1,23 @@\n+! { dg-do run }\n+!\n+! Test the fix for PR70149 in which the string length for\n+! 'number_string' was not initialized.\n+!\n+! Contributed by Walter Spector  <w6ws@earthlink.net>\n+!\n+module myptr_mod\n+  implicit none\n+\n+  integer, target, save :: int_data = 42\n+  character(16), target, save :: char_data = 'forty two'\n+\n+  integer, pointer :: number => int_data\n+  character(:), pointer :: number_string => char_data\n+\n+end module\n+\n+  use myptr_mod\n+  if (LEN (number_string) .ne. 16) stop 1\n+  if (trim (number_string) .ne. 'forty two') stop 2\n+end\n+"}]}