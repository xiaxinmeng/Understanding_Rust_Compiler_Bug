{"sha": "4b8e35f1b1df60633aeb0bf37ea9f6311f2132b9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGI4ZTM1ZjFiMWRmNjA2MzNhZWIwYmYzN2VhOWY2MzExZjIxMzJiOQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2019-05-16T09:37:43Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2019-05-16T09:37:43Z"}, "message": "re PR fortran/90329 (Incompatibility between gfortran and C lapack calls)\n\n\tPR fortran/90329\n\t* tree-core.h (struct tree_decl_common): Document\n\tdecl_nonshareable_flag for PARM_DECLs.\n\t* tree.h (DECL_HIDDEN_STRING_LENGTH): Define.\n\t* calls.c (expand_call): Don't try tail call if caller\n\thas any DECL_HIDDEN_STRING_LENGTH PARM_DECLs that are or might be\n\tpassed on the stack and callee needs to pass any arguments on the\n\tstack.\n\t* tree-streamer-in.c (unpack_ts_decl_common_value_fields): Use\n\telse if instead of series of mutually exclusive ifs.  Handle\n\tDECL_HIDDEN_STRING_LENGTH for PARM_DECLs.\n\t* tree-streamer-out.c (pack_ts_decl_common_value_fields): Likewise.\n\n\t* trans-decl.c (create_function_arglist): Set\n\tDECL_HIDDEN_STRING_LENGTH on hidden string length PARM_DECLs if\n\tlen is constant.\n\nFrom-SVN: r271285", "tree": {"sha": "3f485b6b1cf328ccbe3d102f53c45fc88878f488", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3f485b6b1cf328ccbe3d102f53c45fc88878f488"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4b8e35f1b1df60633aeb0bf37ea9f6311f2132b9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b8e35f1b1df60633aeb0bf37ea9f6311f2132b9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b8e35f1b1df60633aeb0bf37ea9f6311f2132b9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b8e35f1b1df60633aeb0bf37ea9f6311f2132b9/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "86c23d9314c4081c13ebf629fd3393de4e316bf6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86c23d9314c4081c13ebf629fd3393de4e316bf6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86c23d9314c4081c13ebf629fd3393de4e316bf6"}], "stats": {"total": 66, "additions": 62, "deletions": 4}, "files": [{"sha": "3f73f321fbe51be44f055f1efb45bfc4e0c52832", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b8e35f1b1df60633aeb0bf37ea9f6311f2132b9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b8e35f1b1df60633aeb0bf37ea9f6311f2132b9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4b8e35f1b1df60633aeb0bf37ea9f6311f2132b9", "patch": "@@ -1,5 +1,18 @@\n 2019-05-16  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR fortran/90329\n+\t* tree-core.h (struct tree_decl_common): Document\n+\tdecl_nonshareable_flag for PARM_DECLs.\n+\t* tree.h (DECL_HIDDEN_STRING_LENGTH): Define.\n+\t* calls.c (expand_call): Don't try tail call if caller\n+\thas any DECL_HIDDEN_STRING_LENGTH PARM_DECLs that are or might be\n+\tpassed on the stack and callee needs to pass any arguments on the\n+\tstack.\n+\t* tree-streamer-in.c (unpack_ts_decl_common_value_fields): Use\n+\telse if instead of series of mutually exclusive ifs.  Handle\n+\tDECL_HIDDEN_STRING_LENGTH for PARM_DECLs.\n+\t* tree-streamer-out.c (pack_ts_decl_common_value_fields): Likewise.\n+\n \t* lto-streamer.h (LTO_major_version): Bump to 9.\n \n 2019-05-16  Jun Ma <JunMa@linux.alibaba.com>"}, {"sha": "c8a426800411bc320dd1821e59bb599560c8cb07", "filename": "gcc/calls.c", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b8e35f1b1df60633aeb0bf37ea9f6311f2132b9/gcc%2Fcalls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b8e35f1b1df60633aeb0bf37ea9f6311f2132b9/gcc%2Fcalls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcalls.c?ref=4b8e35f1b1df60633aeb0bf37ea9f6311f2132b9", "patch": "@@ -3628,6 +3628,28 @@ expand_call (tree exp, rtx target, int ignore)\n       || dbg_cnt (tail_call) == false)\n     try_tail_call = 0;\n \n+  /* Workaround buggy C/C++ wrappers around Fortran routines with\n+     character(len=constant) arguments if the hidden string length arguments\n+     are passed on the stack; if the callers forget to pass those arguments,\n+     attempting to tail call in such routines leads to stack corruption.\n+     Avoid tail calls in functions where at least one such hidden string\n+     length argument is passed (partially or fully) on the stack in the\n+     caller and the callee needs to pass any arguments on the stack.\n+     See PR90329.  */\n+  if (try_tail_call && maybe_ne (args_size.constant, 0))\n+    for (tree arg = DECL_ARGUMENTS (current_function_decl);\n+\t arg; arg = DECL_CHAIN (arg))\n+      if (DECL_HIDDEN_STRING_LENGTH (arg) && DECL_INCOMING_RTL (arg))\n+\t{\n+\t  subrtx_iterator::array_type array;\n+\t  FOR_EACH_SUBRTX (iter, array, DECL_INCOMING_RTL (arg), NONCONST)\n+\t    if (MEM_P (*iter))\n+\t      {\n+\t\ttry_tail_call = 0;\n+\t\tbreak;\n+\t      }\n+\t}\n+\n   /* If the user has marked the function as requiring tail-call\n      optimization, attempt it.  */\n   if (must_tail_call)"}, {"sha": "057afe66ce73e47424a6c31518a79865452d9733", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b8e35f1b1df60633aeb0bf37ea9f6311f2132b9/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b8e35f1b1df60633aeb0bf37ea9f6311f2132b9/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=4b8e35f1b1df60633aeb0bf37ea9f6311f2132b9", "patch": "@@ -1,3 +1,10 @@\n+2019-05-16  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR fortran/90329\n+\t* trans-decl.c (create_function_arglist): Set\n+\tDECL_HIDDEN_STRING_LENGTH on hidden string length PARM_DECLs if\n+\tlen is constant.\n+\n 2019-05-15  Janne Blomqvist  <jb@gcc.gnu.org>\n \n \t* parse.c (gfc_parse_file): Remove translation string markers."}, {"sha": "07d1c33af72c05d813b244389f1b510003302773", "filename": "gcc/fortran/trans-decl.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b8e35f1b1df60633aeb0bf37ea9f6311f2132b9/gcc%2Ffortran%2Ftrans-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b8e35f1b1df60633aeb0bf37ea9f6311f2132b9/gcc%2Ffortran%2Ftrans-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-decl.c?ref=4b8e35f1b1df60633aeb0bf37ea9f6311f2132b9", "patch": "@@ -2512,6 +2512,10 @@ create_function_arglist (gfc_symbol * sym)\n \t  DECL_ARG_TYPE (length) = len_type;\n \t  TREE_READONLY (length) = 1;\n \t  gfc_finish_decl (length);\n+\t  if (f->sym->ts.u.cl\n+\t      && f->sym->ts.u.cl->length\n+\t      && f->sym->ts.u.cl->length->expr_type == EXPR_CONSTANT)\n+\t    DECL_HIDDEN_STRING_LENGTH (length) = 1;\n \n \t  /* Remember the passed value.  */\n           if (!f->sym->ts.u.cl ||  f->sym->ts.u.cl->passed_length)"}, {"sha": "fbed0c379b250eef3ad02cc44f60e43ad9728148", "filename": "gcc/tree-core.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b8e35f1b1df60633aeb0bf37ea9f6311f2132b9/gcc%2Ftree-core.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b8e35f1b1df60633aeb0bf37ea9f6311f2132b9/gcc%2Ftree-core.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-core.h?ref=4b8e35f1b1df60633aeb0bf37ea9f6311f2132b9", "patch": "@@ -1683,6 +1683,7 @@ struct GTY(()) tree_decl_common {\n   /* In a VAR_DECL and PARM_DECL, this is DECL_READ_P.  */\n   unsigned decl_read_flag : 1;\n   /* In a VAR_DECL or RESULT_DECL, this is DECL_NONSHAREABLE.  */\n+  /* In a PARM_DECL, this is DECL_HIDDEN_STRING_LENGTH.  */\n   unsigned decl_nonshareable_flag : 1;\n \n   /* DECL_OFFSET_ALIGN, used only for FIELD_DECLs.  */"}, {"sha": "f6d137316ac5634b23fb5e8ad10abd32c295b4e4", "filename": "gcc/tree-streamer-in.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b8e35f1b1df60633aeb0bf37ea9f6311f2132b9/gcc%2Ftree-streamer-in.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b8e35f1b1df60633aeb0bf37ea9f6311f2132b9/gcc%2Ftree-streamer-in.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-streamer-in.c?ref=4b8e35f1b1df60633aeb0bf37ea9f6311f2132b9", "patch": "@@ -251,20 +251,23 @@ unpack_ts_decl_common_value_fields (struct bitpack_d *bp, tree expr)\n       LABEL_DECL_UID (expr) = -1;\n     }\n \n-  if (TREE_CODE (expr) == FIELD_DECL)\n+  else if (TREE_CODE (expr) == FIELD_DECL)\n     {\n       DECL_PACKED (expr) = (unsigned) bp_unpack_value (bp, 1);\n       DECL_NONADDRESSABLE_P (expr) = (unsigned) bp_unpack_value (bp, 1);\n       DECL_PADDING_P (expr) = (unsigned) bp_unpack_value (bp, 1);\n       expr->decl_common.off_align = bp_unpack_value (bp, 8);\n     }\n \n-  if (VAR_P (expr))\n+  else if (VAR_P (expr))\n     {\n       DECL_HAS_DEBUG_EXPR_P (expr) = (unsigned) bp_unpack_value (bp, 1);\n       DECL_NONLOCAL_FRAME (expr) = (unsigned) bp_unpack_value (bp, 1);\n     }\n \n+  else if (TREE_CODE (expr) == PARM_DECL)\n+    DECL_HIDDEN_STRING_LENGTH (expr) = (unsigned) bp_unpack_value (bp, 1);\n+\n   if (TREE_CODE (expr) == RESULT_DECL\n       || TREE_CODE (expr) == PARM_DECL\n       || VAR_P (expr))"}, {"sha": "3f619e830a7738c34c129d2aba93c2ed28183480", "filename": "gcc/tree-streamer-out.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b8e35f1b1df60633aeb0bf37ea9f6311f2132b9/gcc%2Ftree-streamer-out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b8e35f1b1df60633aeb0bf37ea9f6311f2132b9/gcc%2Ftree-streamer-out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-streamer-out.c?ref=4b8e35f1b1df60633aeb0bf37ea9f6311f2132b9", "patch": "@@ -212,20 +212,23 @@ pack_ts_decl_common_value_fields (struct bitpack_d *bp, tree expr)\n       bp_pack_var_len_unsigned (bp, EH_LANDING_PAD_NR (expr));\n     }\n \n-  if (TREE_CODE (expr) == FIELD_DECL)\n+  else if (TREE_CODE (expr) == FIELD_DECL)\n     {\n       bp_pack_value (bp, DECL_PACKED (expr), 1);\n       bp_pack_value (bp, DECL_NONADDRESSABLE_P (expr), 1);\n       bp_pack_value (bp, DECL_PADDING_P (expr), 1);\n       bp_pack_value (bp, expr->decl_common.off_align, 8);\n     }\n \n-  if (VAR_P (expr))\n+  else if (VAR_P (expr))\n     {\n       bp_pack_value (bp, DECL_HAS_DEBUG_EXPR_P (expr), 1);\n       bp_pack_value (bp, DECL_NONLOCAL_FRAME (expr), 1);\n     }\n \n+  else if (TREE_CODE (expr) == PARM_DECL)\n+    bp_pack_value (bp, DECL_HIDDEN_STRING_LENGTH (expr), 1);\n+\n   if (TREE_CODE (expr) == RESULT_DECL\n       || TREE_CODE (expr) == PARM_DECL\n       || VAR_P (expr))"}, {"sha": "3a1e6767cee14d157a79c3bbac527b57cca2b08f", "filename": "gcc/tree.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b8e35f1b1df60633aeb0bf37ea9f6311f2132b9/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b8e35f1b1df60633aeb0bf37ea9f6311f2132b9/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=4b8e35f1b1df60633aeb0bf37ea9f6311f2132b9", "patch": "@@ -904,6 +904,11 @@ extern void omp_clause_range_check_failed (const_tree, const char *, int,\n   (TREE_CHECK2 (NODE, VAR_DECL, \\\n \t\tRESULT_DECL)->decl_common.decl_nonshareable_flag)\n \n+/* In a PARM_DECL, set for Fortran hidden string length arguments that some\n+   buggy callers don't pass to the callee.  */\n+#define DECL_HIDDEN_STRING_LENGTH(NODE) \\\n+  (TREE_CHECK (NODE, PARM_DECL)->decl_common.decl_nonshareable_flag)\n+\n /* In a CALL_EXPR, means that the call is the jump from a thunk to the\n    thunked-to function.  */\n #define CALL_FROM_THUNK_P(NODE) (CALL_EXPR_CHECK (NODE)->base.protected_flag)"}]}