{"sha": "c47bee97fa9927563a5015b28e24a5505ba557a3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzQ3YmVlOTdmYTk5Mjc1NjNhNTAxNWIyOGUyNGE1NTA1YmE1NTdhMw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2019-11-09T17:09:44Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2019-11-09T17:09:44Z"}, "message": "re PR tree-optimization/92401 (ICE in fold_ternary_loc, at fold-const.c:11698)\n\n\tPR tree-optimization/92401\n\t* gimple-match-head.c (gimple_resimplify1): Call const_unop only\n\tif res_op->code is an expression with code length 1.\n\t* gimple-match-head.c (gimple_resimplify2): Call const_binop only\n\tif res_op->code is an expression with code length 2.\n\t* gimple-match-head.c (gimple_resimplify3): Call fold_ternary only\n\tif res_op->code is an expression with code length 3.\n\n\t* g++.dg/opt/pr92401.C: New test.\n\nFrom-SVN: r278004", "tree": {"sha": "25d71a8d63b489e51267aa227f35fdd7caf84c5d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/25d71a8d63b489e51267aa227f35fdd7caf84c5d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c47bee97fa9927563a5015b28e24a5505ba557a3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c47bee97fa9927563a5015b28e24a5505ba557a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c47bee97fa9927563a5015b28e24a5505ba557a3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c47bee97fa9927563a5015b28e24a5505ba557a3/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b03932cb99afb634786a8000e447fb21fad115d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b03932cb99afb634786a8000e447fb21fad115d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b03932cb99afb634786a8000e447fb21fad115d0"}], "stats": {"total": 57, "additions": 51, "deletions": 6}, "files": [{"sha": "d0fe87e32671ef5687097520db73cb95c808fdd1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c47bee97fa9927563a5015b28e24a5505ba557a3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c47bee97fa9927563a5015b28e24a5505ba557a3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c47bee97fa9927563a5015b28e24a5505ba557a3", "patch": "@@ -1,3 +1,13 @@\n+2019-11-09  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/92401\n+\t* gimple-match-head.c (gimple_resimplify1): Call const_unop only\n+\tif res_op->code is an expression with code length 1.\n+\t* gimple-match-head.c (gimple_resimplify2): Call const_binop only\n+\tif res_op->code is an expression with code length 2.\n+\t* gimple-match-head.c (gimple_resimplify3): Call fold_ternary only\n+\tif res_op->code is an expression with code length 3.\n+\n 2019-11-09  Iain Sandoe  <iain@sandoe.co.uk>\n \n \t* config/darwin.c (machopic_mcount_stub_name): Validate the"}, {"sha": "2996bade301e09e433d9c415348a5b3fba882482", "filename": "gcc/gimple-match-head.c", "status": "modified", "additions": 21, "deletions": 6, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c47bee97fa9927563a5015b28e24a5505ba557a3/gcc%2Fgimple-match-head.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c47bee97fa9927563a5015b28e24a5505ba557a3/gcc%2Fgimple-match-head.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-match-head.c?ref=c47bee97fa9927563a5015b28e24a5505ba557a3", "patch": "@@ -191,7 +191,12 @@ gimple_resimplify1 (gimple_seq *seq, gimple_match_op *res_op,\n     {\n       tree tem = NULL_TREE;\n       if (res_op->code.is_tree_code ())\n-\ttem = const_unop (res_op->code, res_op->type, res_op->ops[0]);\n+\t{\n+\t  tree_code code = res_op->code;\n+\t  if (IS_EXPR_CODE_CLASS (TREE_CODE_CLASS (code))\n+\t      && TREE_CODE_LENGTH (code) == 1)\n+\t    tem = const_unop (res_op->code, res_op->type, res_op->ops[0]);\n+\t}\n       else\n \ttem = fold_const_call (combined_fn (res_op->code), res_op->type,\n \t\t\t       res_op->ops[0]);\n@@ -252,8 +257,13 @@ gimple_resimplify2 (gimple_seq *seq, gimple_match_op *res_op,\n     {\n       tree tem = NULL_TREE;\n       if (res_op->code.is_tree_code ())\n-\ttem = const_binop (res_op->code, res_op->type,\n-\t\t\t   res_op->ops[0], res_op->ops[1]);\n+\t{\n+\t  tree_code code = res_op->code;\n+\t  if (IS_EXPR_CODE_CLASS (TREE_CODE_CLASS (code))\n+\t      && TREE_CODE_LENGTH (code) == 2)\n+\t    tem = const_binop (res_op->code, res_op->type,\n+\t\t\t       res_op->ops[0], res_op->ops[1]);\n+\t}\n       else\n \ttem = fold_const_call (combined_fn (res_op->code), res_op->type,\n \t\t\t       res_op->ops[0], res_op->ops[1]);\n@@ -325,9 +335,14 @@ gimple_resimplify3 (gimple_seq *seq, gimple_match_op *res_op,\n     {\n       tree tem = NULL_TREE;\n       if (res_op->code.is_tree_code ())\n-\ttem = fold_ternary/*_to_constant*/ (res_op->code, res_op->type,\n-\t\t\t\t\t    res_op->ops[0], res_op->ops[1],\n-\t\t\t\t\t    res_op->ops[2]);\n+\t{\n+\t  tree_code code = res_op->code;\n+\t  if (IS_EXPR_CODE_CLASS (TREE_CODE_CLASS (code))\n+\t      && TREE_CODE_LENGTH (code) == 3)\n+\t    tem = fold_ternary/*_to_constant*/ (res_op->code, res_op->type,\n+\t\t\t\t\t\tres_op->ops[0], res_op->ops[1],\n+\t\t\t\t\t\tres_op->ops[2]);\n+\t}\n       else\n \ttem = fold_const_call (combined_fn (res_op->code), res_op->type,\n \t\t\t       res_op->ops[0], res_op->ops[1], res_op->ops[2]);"}, {"sha": "fcad98053bc626fdffb5a472a8c8011cdc541ee3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c47bee97fa9927563a5015b28e24a5505ba557a3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c47bee97fa9927563a5015b28e24a5505ba557a3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c47bee97fa9927563a5015b28e24a5505ba557a3", "patch": "@@ -1,3 +1,8 @@\n+2019-11-09  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/92401\n+\t* g++.dg/opt/pr92401.C: New test.\n+\n 2019-11-09  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \tPR fortran/92321"}, {"sha": "fda9821279dbce2ab8b404e9aca3f7a8d4fbd41e", "filename": "gcc/testsuite/g++.dg/opt/pr92401.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c47bee97fa9927563a5015b28e24a5505ba557a3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr92401.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c47bee97fa9927563a5015b28e24a5505ba557a3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr92401.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr92401.C?ref=c47bee97fa9927563a5015b28e24a5505ba557a3", "patch": "@@ -0,0 +1,15 @@\n+// PR tree-optimization/92401\n+// { dg-do compile { target c++11 } }\n+// { dg-options \"-O2\" }\n+\n+typedef float V __attribute__ ((__vector_size__ (4 * sizeof (float))));\n+\n+V v;\n+\n+void\n+foo ()\n+{\n+  int i;\n+  for (i = 0; i < 11; ++i)\n+    v = V { 0.0f, 0.0f, (float) i, 0.0f };\n+}"}]}