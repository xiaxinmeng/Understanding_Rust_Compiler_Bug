{"sha": "5d882cc1dafe2546b34f1845f943b91f024dbac4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWQ4ODJjYzFkYWZlMjU0NmIzNGYxODQ1Zjk0M2I5MWYwMjRkYmFjNA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2011-09-02T11:53:55Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2011-09-02T11:53:55Z"}, "message": "tree-ssa-ccp.c (fold_builtin_alloca_for_var): Do not fold alloca (0).\n\n2011-09-02  Richard Guenther  <rguenther@suse.de>\n\n\t* tree-ssa-ccp.c (fold_builtin_alloca_for_var): Do not\n\tfold alloca (0).\n\t(ccp_fold_stmt): Continue replacing args when folding\n\talloca fails.\n\nFrom-SVN: r178465", "tree": {"sha": "35530c4c93e86c42422315de04acd16031bcc474", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/35530c4c93e86c42422315de04acd16031bcc474"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5d882cc1dafe2546b34f1845f943b91f024dbac4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d882cc1dafe2546b34f1845f943b91f024dbac4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d882cc1dafe2546b34f1845f943b91f024dbac4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d882cc1dafe2546b34f1845f943b91f024dbac4/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5da7fa30dae5648484fcd8e73add4bbeec0097ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5da7fa30dae5648484fcd8e73add4bbeec0097ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5da7fa30dae5648484fcd8e73add4bbeec0097ee"}], "stats": {"total": 25, "additions": 18, "deletions": 7}, "files": [{"sha": "e8cdf9e71f4fb8d9aa2ede4cf3f1cc47a3797eb7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d882cc1dafe2546b34f1845f943b91f024dbac4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d882cc1dafe2546b34f1845f943b91f024dbac4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5d882cc1dafe2546b34f1845f943b91f024dbac4", "patch": "@@ -1,3 +1,10 @@\n+2011-09-02  Richard Guenther  <rguenther@suse.de>\n+\n+\t* tree-ssa-ccp.c (fold_builtin_alloca_for_var): Do not\n+\tfold alloca (0).\n+\t(ccp_fold_stmt): Continue replacing args when folding\n+\talloca fails.\n+\n 2011-08-31  Richard Guenther  <rguenther@suse.de>\n \n \t* expr.c (expand_expr_real_2): Move COND_EXPR and VEC_COND_EXPR"}, {"sha": "fc8d74780eaad9fad7b97251c746af4deb953790", "filename": "gcc/tree-ssa-ccp.c", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d882cc1dafe2546b34f1845f943b91f024dbac4/gcc%2Ftree-ssa-ccp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d882cc1dafe2546b34f1845f943b91f024dbac4/gcc%2Ftree-ssa-ccp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-ccp.c?ref=5d882cc1dafe2546b34f1845f943b91f024dbac4", "patch": "@@ -1702,10 +1702,14 @@ fold_builtin_alloca_for_var (gimple stmt)\n \n   /* Detect constant argument.  */\n   arg = get_constant_value (gimple_call_arg (stmt, 0));\n-  if (arg == NULL_TREE || TREE_CODE (arg) != INTEGER_CST\n+  if (arg == NULL_TREE\n+      || TREE_CODE (arg) != INTEGER_CST\n       || !host_integerp (arg, 1))\n     return NULL_TREE;\n+\n   size = TREE_INT_CST_LOW (arg);\n+  if (size == 0)\n+    return NULL_TREE;\n \n   /* Heuristic: don't fold large vlas.  */\n   threshold = (unsigned HOST_WIDE_INT)PARAM_VALUE (PARAM_LARGE_STACK_FRAME);\n@@ -1804,12 +1808,12 @@ ccp_fold_stmt (gimple_stmt_iterator *gsi)\n         if (gimple_call_alloca_for_var_p (stmt))\n           {\n             tree new_rhs = fold_builtin_alloca_for_var (stmt);\n-            bool res;\n-            if (new_rhs == NULL_TREE)\n-              return false;\n-            res = update_call_from_tree (gsi, new_rhs);\n-            gcc_assert (res);\n-            return true;\n+            if (new_rhs)\n+\t      {\n+\t\tbool res = update_call_from_tree (gsi, new_rhs);\n+\t\tgcc_assert (res);\n+\t\treturn true;\n+\t      }\n           }\n \n \t/* Propagate into the call arguments.  Compared to replace_uses_in"}]}