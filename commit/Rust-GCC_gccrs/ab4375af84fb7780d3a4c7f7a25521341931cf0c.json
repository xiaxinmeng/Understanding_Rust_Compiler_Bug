{"sha": "ab4375af84fb7780d3a4c7f7a25521341931cf0c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWI0Mzc1YWY4NGZiNzc4MGQzYTRjN2Y3YTI1NTIxMzQxOTMxY2YwYw==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2004-10-27T01:02:47Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2004-10-27T01:02:47Z"}, "message": "basic_string.h (append(const basic_string&), [...]): Move out of line...\n\n2004-10-26  Paolo Carlini  <pcarlini@suse.de>\n\n\t* include/bits/basic_string.h (append(const basic_string&),\n\tappend(size_type, _CharT)): Move out of line...\n\t* include/bits/basic_string.tcc: ... here.\n\nFrom-SVN: r89622", "tree": {"sha": "2119195179286fe28ef87ad96340720305d87344", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2119195179286fe28ef87ad96340720305d87344"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ab4375af84fb7780d3a4c7f7a25521341931cf0c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab4375af84fb7780d3a4c7f7a25521341931cf0c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ab4375af84fb7780d3a4c7f7a25521341931cf0c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab4375af84fb7780d3a4c7f7a25521341931cf0c/comments", "author": null, "committer": null, "parents": [{"sha": "667e401793b82c86c680d21ad3f1cbcc08908aa6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/667e401793b82c86c680d21ad3f1cbcc08908aa6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/667e401793b82c86c680d21ad3f1cbcc08908aa6"}], "stats": {"total": 68, "additions": 42, "deletions": 26}, "files": [{"sha": "f51f6f1d005df9fae037d40660cfcd3a626641b3", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab4375af84fb7780d3a4c7f7a25521341931cf0c/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab4375af84fb7780d3a4c7f7a25521341931cf0c/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=ab4375af84fb7780d3a4c7f7a25521341931cf0c", "patch": "@@ -1,3 +1,9 @@\n+2004-10-26  Paolo Carlini  <pcarlini@suse.de>\n+\n+\t* include/bits/basic_string.h (append(const basic_string&),\n+\tappend(size_type, _CharT)): Move out of line...\n+\t* include/bits/basic_string.tcc: ... here.\n+\n 2004-10-26  Paolo Carlini  <pcarlini@suse.de>\n \n \t* include/bits/basic_string.h (erase(size_type, size_type),"}, {"sha": "6550b9c33622582304fe1eff95e63c82472f53dd", "filename": "libstdc++-v3/include/bits/basic_string.h", "status": "modified", "additions": 2, "deletions": 26, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab4375af84fb7780d3a4c7f7a25521341931cf0c/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_string.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab4375af84fb7780d3a4c7f7a25521341931cf0c/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_string.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_string.h?ref=ab4375af84fb7780d3a4c7f7a25521341931cf0c", "patch": "@@ -776,19 +776,7 @@ namespace std\n        *  @return  Reference to this string.\n        */\n       basic_string&\n-      append(const basic_string& __str)\n-      {\n-\tconst size_type __size = __str.size();\n-\tif (__size)\n-\t  {\n-\t    const size_type __len = __size + this->size();\n-\t    if (__len > this->capacity() || _M_rep()->_M_is_shared())\n-\t      this->reserve(__len);\n-\t    _M_copy(_M_data() + this->size(), __str._M_data(), __size);\n-\t    _M_rep()->_M_set_length_and_sharable(__len);\n-\t  }\n-\treturn *this;\n-      }\n+      append(const basic_string& __str);\n \n       /**\n        *  @brief  Append a substring.\n@@ -835,19 +823,7 @@ namespace std\n        *  Appends n copies of c to this string.\n        */\n       basic_string&\n-      append(size_type __n, _CharT __c)\n-      {\n-\tif (__n)\n-\t  {\n-\t    _M_check_length(size_type(0), __n, \"basic_string::append\");\t  \n-\t    const size_type __len = __n + this->size();\n-\t    if (__len > this->capacity() || _M_rep()->_M_is_shared())\n-\t      this->reserve(__len);\n-\t    _M_assign(_M_data() + this->size(), __n, __c);\n-\t    _M_rep()->_M_set_length_and_sharable(__len);\n-\t  }\n-\treturn *this;\n-      }\n+      append(size_type __n, _CharT __c);\n \n       /**\n        *  @brief  Append a range of characters."}, {"sha": "6bd129682029f556c906b7e16f08d3679f2b83f0", "filename": "libstdc++-v3/include/bits/basic_string.tcc", "status": "modified", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab4375af84fb7780d3a4c7f7a25521341931cf0c/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_string.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab4375af84fb7780d3a4c7f7a25521341931cf0c/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_string.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_string.tcc?ref=ab4375af84fb7780d3a4c7f7a25521341931cf0c", "patch": "@@ -261,6 +261,23 @@ namespace std\n \t}\n      }\n \n+  template<typename _CharT, typename _Traits, typename _Alloc>\n+    basic_string<_CharT, _Traits, _Alloc>&\n+    basic_string<_CharT, _Traits, _Alloc>::\n+    append(size_type __n, _CharT __c)\n+    {\n+      if (__n)\n+\t{\n+\t  _M_check_length(size_type(0), __n, \"basic_string::append\");\t  \n+\t  const size_type __len = __n + this->size();\n+\t  if (__len > this->capacity() || _M_rep()->_M_is_shared())\n+\t    this->reserve(__len);\n+\t  _M_assign(_M_data() + this->size(), __n, __c);\n+\t  _M_rep()->_M_set_length_and_sharable(__len);\n+\t}\n+      return *this;\n+    }\n+\n   template<typename _CharT, typename _Traits, typename _Alloc>\n     basic_string<_CharT, _Traits, _Alloc>&\n     basic_string<_CharT, _Traits, _Alloc>::\n@@ -288,6 +305,23 @@ namespace std\n       return *this;\n     }\n \n+  template<typename _CharT, typename _Traits, typename _Alloc>\n+    basic_string<_CharT, _Traits, _Alloc>&\n+    basic_string<_CharT, _Traits, _Alloc>::\n+    append(const basic_string& __str)\n+    {\n+      const size_type __size = __str.size();\n+      if (__size)\n+\t{\n+\t  const size_type __len = __size + this->size();\n+\t  if (__len > this->capacity() || _M_rep()->_M_is_shared())\n+\t    this->reserve(__len);\n+\t  _M_copy(_M_data() + this->size(), __str._M_data(), __size);\n+\t  _M_rep()->_M_set_length_and_sharable(__len);\n+\t}\n+      return *this;\n+    }    \n+\n   template<typename _CharT, typename _Traits, typename _Alloc>\n     basic_string<_CharT, _Traits, _Alloc>&\n     basic_string<_CharT, _Traits, _Alloc>::"}]}