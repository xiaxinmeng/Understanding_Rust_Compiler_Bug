{"sha": "528c7559a84012642c6a6f80380578572aceaf5c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTI4Yzc1NTlhODQwMTI2NDJjNmE2ZjgwMzgwNTc4NTcyYWNlYWY1Yw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2017-11-27T21:31:00Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2017-11-27T21:31:00Z"}, "message": "pt.c (primary_template_specialization_p): Rename from\n\n\t* pt.c (primary_template_specialization_p): Rename from\n\n\tprimary_template_instantiation_p.  Don't check\n\tDECL_TEMPLATE_INSTANTIATION.\n\t* call.c, cp-tree.h, decl2.c: Adjust.\n\nFrom-SVN: r255179", "tree": {"sha": "316187e743cef5c77432baadbcaf71fad0026761", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/316187e743cef5c77432baadbcaf71fad0026761"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/528c7559a84012642c6a6f80380578572aceaf5c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/528c7559a84012642c6a6f80380578572aceaf5c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/528c7559a84012642c6a6f80380578572aceaf5c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/528c7559a84012642c6a6f80380578572aceaf5c/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "32c95bcae37789ad601e557249310d7fd4444c7b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32c95bcae37789ad601e557249310d7fd4444c7b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/32c95bcae37789ad601e557249310d7fd4444c7b"}], "stats": {"total": 64, "additions": 50, "deletions": 14}, "files": [{"sha": "91de626f9100e0adb4fcf72dffc8c739d82fdea8", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/528c7559a84012642c6a6f80380578572aceaf5c/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/528c7559a84012642c6a6f80380578572aceaf5c/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=528c7559a84012642c6a6f80380578572aceaf5c", "patch": "@@ -1,3 +1,10 @@\n+2017-11-27  Jason Merrill  <jason@redhat.com>\n+\n+\t* pt.c (primary_template_specialization_p): Rename from\n+\tprimary_template_instantiation_p.  Don't check\n+\tDECL_TEMPLATE_INSTANTIATION.\n+\t* call.c, cp-tree.h, decl2.c: Adjust.\n+\n 2017-11-27  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/81675"}, {"sha": "177c3cc13e34c143c91c1387e57195207015711a", "filename": "gcc/cp/call.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/528c7559a84012642c6a6f80380578572aceaf5c/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/528c7559a84012642c6a6f80380578572aceaf5c/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=528c7559a84012642c6a6f80380578572aceaf5c", "patch": "@@ -3895,7 +3895,7 @@ build_user_type_conversion_1 (tree totype, tree expr, int flags,\n \t\t= bad_arg_conversion_rejection (NULL_TREE, -2,\n \t\t\t\t\t\trettype, totype);\n \t    }\n-\t  else if (primary_template_instantiation_p (cand->fn)\n+\t  else if (primary_template_specialization_p (cand->fn)\n \t\t   && ics->rank > cr_exact)\n \t    {\n \t      /* 13.3.3.1.2: If the user-defined conversion is specified by\n@@ -6111,7 +6111,7 @@ aligned_deallocation_fn_p (tree t)\n   /* A template instance is never a usual deallocation function,\n      regardless of its signature.  */\n   if (TREE_CODE (t) == TEMPLATE_DECL\n-      || primary_template_instantiation_p (t))\n+      || primary_template_specialization_p (t))\n     return false;\n \n   tree a = FUNCTION_ARG_CHAIN (t);\n@@ -6136,7 +6136,7 @@ usual_deallocation_fn_p (tree t)\n   /* A template instance is never a usual deallocation function,\n      regardless of its signature.  */\n   if (TREE_CODE (t) == TEMPLATE_DECL\n-      || primary_template_instantiation_p (t))\n+      || primary_template_specialization_p (t))\n     return false;\n \n   /* If a class T has a member deallocation function named operator delete"}, {"sha": "cb12c835298e6fb84a42bbfd43cc43528f609931", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/528c7559a84012642c6a6f80380578572aceaf5c/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/528c7559a84012642c6a6f80380578572aceaf5c/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=528c7559a84012642c6a6f80380578572aceaf5c", "patch": "@@ -6556,7 +6556,7 @@ extern void init_template_processing\t\t(void);\n extern void print_template_statistics\t\t(void);\n bool template_template_parameter_p\t\t(const_tree);\n bool template_type_parameter_p                  (const_tree);\n-extern bool primary_template_instantiation_p    (const_tree);\n+extern bool primary_template_specialization_p   (const_tree);\n extern tree get_primary_template_innermost_parameters\t(const_tree);\n extern tree get_template_parms_at_level (tree, int);\n extern tree get_template_innermost_arguments\t(const_tree);"}, {"sha": "f85e6237af19a8195452ff497b1f26192908a1db", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 12, "deletions": 10, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/528c7559a84012642c6a6f80380578572aceaf5c/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/528c7559a84012642c6a6f80380578572aceaf5c/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=528c7559a84012642c6a6f80380578572aceaf5c", "patch": "@@ -3219,7 +3219,7 @@ get_function_template_decl (const_tree primary_func_tmpl_inst)\n {\n   if (! primary_func_tmpl_inst\n       || TREE_CODE (primary_func_tmpl_inst) != FUNCTION_DECL\n-      || ! primary_template_instantiation_p (primary_func_tmpl_inst))\n+      || ! primary_template_specialization_p (primary_func_tmpl_inst))\n     return NULL;\n \n   return DECL_TEMPLATE_RESULT (DECL_TI_TEMPLATE (primary_func_tmpl_inst));\n@@ -3287,21 +3287,23 @@ make_ith_pack_parameter_name (tree name, int i)\n }\n \n /* Return true if T is a primary function, class or alias template\n-   instantiation.  */\n+   specialization, not including the template pattern.  */\n \n bool\n-primary_template_instantiation_p (const_tree t)\n+primary_template_specialization_p (const_tree t)\n {\n   if (!t)\n     return false;\n \n-  if (TREE_CODE (t) == FUNCTION_DECL)\n-    return DECL_LANG_SPECIFIC (t)\n-\t   && DECL_TEMPLATE_INSTANTIATION (t)\n-\t   && PRIMARY_TEMPLATE_P (DECL_TI_TEMPLATE (t));\n+  if (TREE_CODE (t) == FUNCTION_DECL || VAR_P (t))\n+    return (DECL_LANG_SPECIFIC (t)\n+\t    && DECL_USE_TEMPLATE (t)\n+\t    && DECL_TEMPLATE_INFO (t)\n+\t    && PRIMARY_TEMPLATE_P (DECL_TI_TEMPLATE (t)));\n   else if (CLASS_TYPE_P (t) && !TYPE_DECL_ALIAS_P (TYPE_NAME (t)))\n-    return CLASSTYPE_TEMPLATE_INSTANTIATION (t)\n-\t   && PRIMARY_TEMPLATE_P (CLASSTYPE_TI_TEMPLATE (t));\n+    return (CLASSTYPE_TEMPLATE_INFO (t)\n+\t    && CLASSTYPE_USE_TEMPLATE (t)\n+\t    && PRIMARY_TEMPLATE_P (CLASSTYPE_TI_TEMPLATE (t)));\n   else if (alias_template_specialization_p (t))\n     return true;\n   return false;\n@@ -3336,7 +3338,7 @@ get_primary_template_innermost_parameters (const_tree t)\n   tree parms = NULL, template_info = NULL;\n \n   if ((template_info = get_template_info (t))\n-      && primary_template_instantiation_p (t))\n+      && primary_template_specialization_p (t))\n     parms = INNERMOST_TEMPLATE_PARMS\n \t(DECL_TEMPLATE_PARMS (TI_TEMPLATE (template_info)));\n "}, {"sha": "49c1e0557e0c1ff32c1d614540065ca438c6389e", "filename": "gcc/testsuite/g++.dg/cpp0x/fntmpdefarg2a.C", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/528c7559a84012642c6a6f80380578572aceaf5c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Ffntmpdefarg2a.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/528c7559a84012642c6a6f80380578572aceaf5c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Ffntmpdefarg2a.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Ffntmpdefarg2a.C?ref=528c7559a84012642c6a6f80380578572aceaf5c", "patch": "@@ -0,0 +1,27 @@\n+// PR c++/46831\n+// { dg-do compile { target c++11 } }\n+// { dg-options \"\" }\n+\n+struct B { };\n+struct D : B { };\n+struct A {\n+  template<typename T = void> operator D&(); // { dg-message \"template conversion\" }\n+  operator long();\n+};\n+\n+template <> A::operator D&();\n+\n+void f(long);\n+void f(B&);\n+\n+struct A2 {\n+  template<typename T = void> operator B&();\n+};\n+\n+void f2(const B&);\n+\n+int main() {\n+  f(A());\n+  f2(A2());\n+  f2(A());\t\t\t// { dg-error \"\" }\n+}"}]}