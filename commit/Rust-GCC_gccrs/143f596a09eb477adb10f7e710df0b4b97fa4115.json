{"sha": "143f596a09eb477adb10f7e710df0b4b97fa4115", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTQzZjU5NmEwOWViNDc3YWRiMTBmN2U3MTBkZjBiNGI5N2ZhNDExNQ==", "commit": {"author": {"name": "Michael Koch", "email": "konqueror@gmx.de", "date": "2003-05-02T09:27:59Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2003-05-02T09:27:59Z"}, "message": "InetAddress.java: Merged class documentation with classpath.\n\n2003-05-02  Michael Koch  <konqueror@gmx.de>\n\n\t* java/net/InetAddress.java:\n\tMerged class documentation with classpath.\n\t* java/net/JarURLConnection.java:\n\tExplicitely import all used classes.\n\t* java/net/URL.java:\n\tReformatting.\n\t* java/net/ServerSocket.java,\n\tjava/net/Socket.java:\n\tNew versions from classpath.\n\nFrom-SVN: r66376", "tree": {"sha": "d395dadb3026a885728844a608ac376f88c1f984", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d395dadb3026a885728844a608ac376f88c1f984"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/143f596a09eb477adb10f7e710df0b4b97fa4115", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/143f596a09eb477adb10f7e710df0b4b97fa4115", "html_url": "https://github.com/Rust-GCC/gccrs/commit/143f596a09eb477adb10f7e710df0b4b97fa4115", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/143f596a09eb477adb10f7e710df0b4b97fa4115/comments", "author": null, "committer": null, "parents": [{"sha": "9ab94a932c3cd105735460d62dc980e41d1a2e27", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ab94a932c3cd105735460d62dc980e41d1a2e27", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ab94a932c3cd105735460d62dc980e41d1a2e27"}], "stats": {"total": 144, "additions": 126, "deletions": 18}, "files": [{"sha": "91f92ad277669de02436a59e265081488744b3e1", "filename": "libjava/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143f596a09eb477adb10f7e710df0b4b97fa4115/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143f596a09eb477adb10f7e710df0b4b97fa4115/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=143f596a09eb477adb10f7e710df0b4b97fa4115", "patch": "@@ -1,3 +1,15 @@\n+2003-05-02  Michael Koch  <konqueror@gmx.de>\n+\n+\t* java/net/InetAddress.java:\n+\tMerged class documentation with classpath.\n+\t* java/net/JarURLConnection.java:\n+\tExplicitely import all used classes.\n+\t* java/net/URL.java:\n+\tReformatting.\n+\t* java/net/ServerSocket.java,\n+\tjava/net/Socket.java:\n+\tNew versions from classpath.\n+\n 2003-05-02  Michael Koch  <konqueror@gmx.de>\n \n \t* gnu/java/nio/FileChannelImpl.java"}, {"sha": "34d4ad1eed9289fa236edbc01c3a3b7e9883f3db", "filename": "libjava/java/net/InetAddress.java", "status": "modified", "additions": 14, "deletions": 6, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143f596a09eb477adb10f7e710df0b4b97fa4115/libjava%2Fjava%2Fnet%2FInetAddress.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143f596a09eb477adb10f7e710df0b4b97fa4115/libjava%2Fjava%2Fnet%2FInetAddress.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnet%2FInetAddress.java?ref=143f596a09eb477adb10f7e710df0b4b97fa4115", "patch": "@@ -44,20 +44,28 @@\n import java.io.Serializable;\n import java.io.ObjectStreamException;\n \n-/**\n- * @author Per Bothner\n- * @date January 6, 1999.\n- */\n-\n /*\n  * Written using on-line Java Platform 1.2 API Specification, as well\n  * as \"The Java Class Libraries\", 2nd edition (Addison-Wesley, 1998).\n  * (The latter turns out to have some errors ...)\n  * Status:  Believed complete and correct.\n+ */\n+\n+/**\n+ * This class models an Internet address.  It does not have a public\n+ * constructor.  Instead, new instances of this objects are created\n+ * using the static methods getLocalHost(), getByName(), and\n+ * getAllByName().\n+ * <p>\n+ * This class fulfills the function of the C style functions gethostname(),\n+ * gethostbyname(), and gethostbyaddr().  It resolves Internet DNS names\n+ * into their corresponding numeric addresses and vice versa.\n+ *\n+ * @author Aaron M. Renn <arenn@urbanophile.com>\n+ * @author Per Bothner\n  *\n  * @specnote This class is not final since JK 1.4\n  */\n-\n public class InetAddress implements Serializable\n {\n   // The Serialized Form specifies that an int 'address' is saved/restored."}, {"sha": "b8fcbf5c4b201c6d54886ed7f1e30286c2c5a4b1", "filename": "libjava/java/net/JarURLConnection.java", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143f596a09eb477adb10f7e710df0b4b97fa4115/libjava%2Fjava%2Fnet%2FJarURLConnection.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143f596a09eb477adb10f7e710df0b4b97fa4115/libjava%2Fjava%2Fnet%2FJarURLConnection.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnet%2FJarURLConnection.java?ref=143f596a09eb477adb10f7e710df0b4b97fa4115", "patch": "@@ -38,10 +38,16 @@\n \n package java.net;\n \n-import java.net.*;\n-import java.io.*;\n-import java.util.jar.*;\n-import java.util.zip.*;\n+import java.io.BufferedInputStream;\n+import java.io.ByteArrayInputStream;\n+import java.io.InputStream;\n+import java.io.IOException;\n+import java.util.jar.Attributes;\n+import java.util.jar.JarEntry;\n+import java.util.jar.JarFile;\n+import java.util.jar.JarInputStream;\n+import java.util.jar.Manifest;\n+import java.util.zip.ZipEntry;\n import java.util.Map;\n import java.util.Vector;\n import java.util.Hashtable;\n@@ -52,8 +58,6 @@\n  * @since 1.2\n  * @date Aug 10, 1999.\n  */\n-\n-\n public abstract class JarURLConnection extends URLConnection\n {\n   // three different ways to say the same thing"}, {"sha": "2d04eac452f5e124ee91df3f24edff67881a0b61", "filename": "libjava/java/net/ServerSocket.java", "status": "modified", "additions": 43, "deletions": 2, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143f596a09eb477adb10f7e710df0b4b97fa4115/libjava%2Fjava%2Fnet%2FServerSocket.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143f596a09eb477adb10f7e710df0b4b97fa4115/libjava%2Fjava%2Fnet%2FServerSocket.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnet%2FServerSocket.java?ref=143f596a09eb477adb10f7e710df0b4b97fa4115", "patch": "@@ -164,9 +164,50 @@ public ServerSocket (int port, int backlog, InetAddress bindAddr)\n     if (bindAddr == null)\n       bindAddr = InetAddress.ANY_IF;\n \n+    // create socket\n     impl.create(true);\n-    impl.bind(bindAddr, port);\n-    impl.listen(backlog);\n+\n+    // bind to address/port\n+    try\n+      {\n+        impl.bind(bindAddr, port);\n+      }\n+    catch (IOException exception)\n+      {\n+        impl.close();\n+        throw exception;\n+      }\n+    catch (RuntimeException exception)\n+      {\n+        impl.close();\n+        throw exception;\n+      }\n+    catch (Error error)\n+      {\n+        impl.close();\n+        throw error;\n+      }\n+\n+    // listen on socket\n+    try\n+      {\n+        impl.listen(backlog);\n+      }\n+    catch (IOException exception)\n+      {\n+        impl.close();\n+        throw exception;\n+      }\n+    catch (RuntimeException exception)\n+      {\n+        impl.close();\n+        throw exception;\n+      }\n+    catch (Error error)\n+      {\n+        impl.close();\n+        throw error;\n+      }\n   }\n \n   /**"}, {"sha": "cd3b5ecb85719d0e9e57f3901d86ca5757977c2a", "filename": "libjava/java/net/Socket.java", "status": "modified", "additions": 45, "deletions": 2, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143f596a09eb477adb10f7e710df0b4b97fa4115/libjava%2Fjava%2Fnet%2FSocket.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143f596a09eb477adb10f7e710df0b4b97fa4115/libjava%2Fjava%2Fnet%2FSocket.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnet%2FSocket.java?ref=143f596a09eb477adb10f7e710df0b4b97fa4115", "patch": "@@ -291,16 +291,59 @@ private Socket(InetAddress raddr, int rport, InetAddress laddr, int lport,\n     if (sm != null)\n       sm.checkConnect(raddr.getHostName(), rport);\n \n+    // create socket\n     impl.create(stream);\n \n     // FIXME: JCL p. 1586 says if localPort is unspecified, bind to any port,\n     // i.e. '0' and if localAddr is unspecified, use getLocalAddress() as\n     // that default.  JDK 1.2 doc infers not to do a bind.\n+    \n+    // bind/connect to address/port\n     if (laddr != null)\n-      impl.bind(laddr, lport);\n+      {\n+        try\n+\t  {\n+            impl.bind(laddr, lport);\n+          }\n+\tcatch (IOException exception)\n+          {\n+            impl.close();\n+            throw exception;\n+          }\n+        catch (RuntimeException exception)\n+          {\n+            impl.close();\n+            throw exception;\n+          }\n+        catch (Error error)\n+          {\n+            impl.close();\n+            throw error;\n+          }\n+      }\n \n     if (raddr != null)\n-      impl.connect(raddr, rport);\n+      {\n+        try\n+          {\n+            impl.connect(raddr, rport);\n+          }\n+        catch (IOException exception)\n+          {\n+            impl.close();\n+            throw exception;\n+          }\n+        catch (RuntimeException exception)\n+          {\n+            impl.close();\n+            throw exception;\n+          }\n+        catch (Error error)\n+          {\n+            impl.close();\n+            throw error;\n+          }\n+      }\n   }\n \n   /**"}, {"sha": "fd7428ed37f864b1a9e9d16dc789f966d3524fd0", "filename": "libjava/java/net/URL.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/143f596a09eb477adb10f7e710df0b4b97fa4115/libjava%2Fjava%2Fnet%2FURL.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/143f596a09eb477adb10f7e710df0b4b97fa4115/libjava%2Fjava%2Fnet%2FURL.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnet%2FURL.java?ref=143f596a09eb477adb10f7e710df0b4b97fa4115", "patch": "@@ -99,7 +99,7 @@\n   * Please note that a protocol handler must be a subclass of\n   * URLStreamHandler.\n   *\n-  * @author Aaron M. Renn (arenn@urbanophile.com)\n+  * @author Aaron M. Renn <arenn@urbanophile.com>\n   * @author Warren Levy <warrenl@cygnus.com>\n   *\n   * @see URLStreamHandler\n@@ -720,7 +720,7 @@ public String toString()\n   }\n \n   private static synchronized URLStreamHandler\n-    getURLStreamHandler(String protocol)\n+    getURLStreamHandler (String protocol)\n   {\n     URLStreamHandler handler;\n "}]}