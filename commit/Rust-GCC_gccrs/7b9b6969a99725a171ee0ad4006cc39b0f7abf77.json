{"sha": "7b9b6969a99725a171ee0ad4006cc39b0f7abf77", "node_id": "C_kwDOANBUbNoAKDdiOWI2OTY5YTk5NzI1YTE3MWVlMGFkNDAwNmNjMzliMGY3YWJmNzc", "commit": {"author": {"name": "Kito Cheng", "email": "kito.cheng@sifive.com", "date": "2022-08-29T02:28:28Z"}, "committer": {"name": "Kito Cheng", "email": "kito.cheng@sifive.com", "date": "2022-08-29T02:32:21Z"}, "message": "RISC-V: Suppress -Wclass-memaccess warning\n\npoly_int64 is non-trivial type, we need to clean up manully instead\nof memset to prevent this warning.\n\n../../gcc/gcc/config/riscv/riscv.cc: In function 'void riscv_compute_frame_info()':\n../../gcc/gcc/config/riscv/riscv.cc:4113:10: error: 'void* memset(void*, int, size_t)' clearing an object of non-trivial type 'struct riscv_frame_info'; use assignment or value-initialization instead [-Werror=class-memaccess]\n 4113 |   memset (frame, 0, sizeof (*frame));\n      |   ~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~\n../../gcc/gcc/config/riscv/riscv.cc:101:17: note: 'struct riscv_frame_info' declared here\n  101 | struct GTY(())  riscv_frame_info {\n      |                 ^~~~~~~~~~~~~~~~\ncc1plus: all warnings being treated as errors\n\ngcc/ChangeLog:\n\n\t* config/riscv/riscv.cc (riscv_frame_info): Introduce `reset(void)`;\n\t(riscv_frame_info::reset(void)): New.\n\t(riscv_compute_frame_info): Use riscv_frame_info::reset instead\n\tof memset when clean frame.", "tree": {"sha": "aab6f027e76c1201a52ae50c4cc4a612baf2c1eb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aab6f027e76c1201a52ae50c4cc4a612baf2c1eb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7b9b6969a99725a171ee0ad4006cc39b0f7abf77", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b9b6969a99725a171ee0ad4006cc39b0f7abf77", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b9b6969a99725a171ee0ad4006cc39b0f7abf77", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b9b6969a99725a171ee0ad4006cc39b0f7abf77/comments", "author": {"login": "kito-cheng", "id": 2723185, "node_id": "MDQ6VXNlcjI3MjMxODU=", "avatar_url": "https://avatars.githubusercontent.com/u/2723185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kito-cheng", "html_url": "https://github.com/kito-cheng", "followers_url": "https://api.github.com/users/kito-cheng/followers", "following_url": "https://api.github.com/users/kito-cheng/following{/other_user}", "gists_url": "https://api.github.com/users/kito-cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/kito-cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kito-cheng/subscriptions", "organizations_url": "https://api.github.com/users/kito-cheng/orgs", "repos_url": "https://api.github.com/users/kito-cheng/repos", "events_url": "https://api.github.com/users/kito-cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/kito-cheng/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kito-cheng", "id": 2723185, "node_id": "MDQ6VXNlcjI3MjMxODU=", "avatar_url": "https://avatars.githubusercontent.com/u/2723185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kito-cheng", "html_url": "https://github.com/kito-cheng", "followers_url": "https://api.github.com/users/kito-cheng/followers", "following_url": "https://api.github.com/users/kito-cheng/following{/other_user}", "gists_url": "https://api.github.com/users/kito-cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/kito-cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kito-cheng/subscriptions", "organizations_url": "https://api.github.com/users/kito-cheng/orgs", "repos_url": "https://api.github.com/users/kito-cheng/repos", "events_url": "https://api.github.com/users/kito-cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/kito-cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "31380d4b7925912b9c34afe8cdb8dffe6cd50b94", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31380d4b7925912b9c34afe8cdb8dffe6cd50b94", "html_url": "https://github.com/Rust-GCC/gccrs/commit/31380d4b7925912b9c34afe8cdb8dffe6cd50b94"}], "stats": {"total": 22, "additions": 21, "deletions": 1}, "files": [{"sha": "4d439e15392fbefb0c80ef7aa9400eb159626506", "filename": "gcc/config/riscv/riscv.cc", "status": "modified", "additions": 21, "deletions": 1, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b9b6969a99725a171ee0ad4006cc39b0f7abf77/gcc%2Fconfig%2Friscv%2Friscv.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b9b6969a99725a171ee0ad4006cc39b0f7abf77/gcc%2Fconfig%2Friscv%2Friscv.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Friscv.cc?ref=7b9b6969a99725a171ee0ad4006cc39b0f7abf77", "patch": "@@ -123,6 +123,9 @@ struct GTY(())  riscv_frame_info {\n \n   /* The offset of arg_pointer_rtx from the bottom of the frame.  */\n   poly_int64 arg_pointer_offset;\n+\n+  /* Reset this struct, clean all field to zero.  */\n+  void reset(void);\n };\n \n enum riscv_privilege_levels {\n@@ -392,6 +395,23 @@ static const struct riscv_tune_info riscv_tune_info_table[] = {\n   { \"size\", generic, &optimize_size_tune_info },\n };\n \n+void riscv_frame_info::reset(void)\n+{\n+  total_size = 0;\n+  mask = 0;\n+  fmask = 0;\n+  save_libcall_adjustment = 0;\n+\n+  gp_sp_offset = 0;\n+  fp_sp_offset = 0;\n+\n+  frame_pointer_offset = 0;\n+\n+  hard_frame_pointer_offset = 0;\n+\n+  arg_pointer_offset = 0;\n+}\n+\n /* Implement TARGET_MIN_ARITHMETIC_PRECISION.  */\n \n static unsigned int\n@@ -4179,7 +4199,7 @@ riscv_compute_frame_info (void)\n \tinterrupt_save_prologue_temp = true;\n     }\n \n-  memset (frame, 0, sizeof (*frame));\n+  frame->reset();\n \n   if (!cfun->machine->naked_p)\n     {"}]}