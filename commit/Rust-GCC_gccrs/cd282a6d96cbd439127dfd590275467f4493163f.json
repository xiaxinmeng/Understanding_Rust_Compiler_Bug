{"sha": "cd282a6d96cbd439127dfd590275467f4493163f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2QyODJhNmQ5NmNiZDQzOTEyN2RmZDU5MDI3NTQ2N2Y0NDkzMTYzZg==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2014-02-17T09:23:41Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2014-02-17T09:23:41Z"}, "message": "Revert accidental checkin.\n\nFrom-SVN: r207818", "tree": {"sha": "d83ddf85a8f0a0cce82114b7db3570532a85bd85", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d83ddf85a8f0a0cce82114b7db3570532a85bd85"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cd282a6d96cbd439127dfd590275467f4493163f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd282a6d96cbd439127dfd590275467f4493163f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd282a6d96cbd439127dfd590275467f4493163f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd282a6d96cbd439127dfd590275467f4493163f/comments", "author": null, "committer": null, "parents": [{"sha": "d737743fce8e8763c3b846393c92221371cd9f02", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d737743fce8e8763c3b846393c92221371cd9f02", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d737743fce8e8763c3b846393c92221371cd9f02"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "35707a041a1b34ba532c2fe88d46afe3743688bd", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd282a6d96cbd439127dfd590275467f4493163f/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd282a6d96cbd439127dfd590275467f4493163f/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=cd282a6d96cbd439127dfd590275467f4493163f", "patch": "@@ -2660,6 +2660,7 @@ import_export_decl (tree decl)\n \t\t  comdat_p = (targetm.cxx.class_data_always_comdat ()\n \t\t\t      || (CLASSTYPE_KEY_METHOD (type)\n \t\t\t\t  && DECL_DECLARED_INLINE_P (CLASSTYPE_KEY_METHOD (type))));\n+\t\t  mark_needed (decl);\n \t\t  if (!flag_weak)\n \t\t    {\n \t\t      comdat_p = false;"}]}