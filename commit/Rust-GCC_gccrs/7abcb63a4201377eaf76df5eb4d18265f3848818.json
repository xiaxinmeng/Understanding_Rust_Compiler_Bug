{"sha": "7abcb63a4201377eaf76df5eb4d18265f3848818", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2FiY2I2M2E0MjAxMzc3ZWFmNzZkZjVlYjRkMTgyNjVmMzg0ODgxOA==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2001-12-24T06:15:31Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2001-12-24T06:15:31Z"}, "message": "stmt.c (resolve_operand_names): Handle operand modifiers.\n\n        * stmt.c (resolve_operand_names): Handle operand modifiers.\n\n        * gcc.dg/asm-4.c: Test operand modifiers.\n\nFrom-SVN: r48299", "tree": {"sha": "88ce145b6021c196dc1ca65dc4fcae3d5145d98d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/88ce145b6021c196dc1ca65dc4fcae3d5145d98d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7abcb63a4201377eaf76df5eb4d18265f3848818", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7abcb63a4201377eaf76df5eb4d18265f3848818", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7abcb63a4201377eaf76df5eb4d18265f3848818", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7abcb63a4201377eaf76df5eb4d18265f3848818/comments", "author": null, "committer": null, "parents": [{"sha": "6be2e1f88c80e2cb686d02ac55a518b819900ead", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6be2e1f88c80e2cb686d02ac55a518b819900ead", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6be2e1f88c80e2cb686d02ac55a518b819900ead"}], "stats": {"total": 26, "additions": 22, "deletions": 4}, "files": [{"sha": "7df5b1892598e7da968cac0d99c64cef873449b3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7abcb63a4201377eaf76df5eb4d18265f3848818/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7abcb63a4201377eaf76df5eb4d18265f3848818/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7abcb63a4201377eaf76df5eb4d18265f3848818", "patch": "@@ -1,3 +1,7 @@\n+2001-12-23  Richard Henderson  <rth@redhat.com>\n+\n+\t* stmt.c (resolve_operand_names): Handle operand modifiers.\n+\n 2001-12-23  Richard Henderson  <rth@redhat.com>\n \n \t* stmt.c (parse_input_constraint): Break out from ..."}, {"sha": "c87612aa3c38081f0a71fefd315111c12064bb3a", "filename": "gcc/stmt.c", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7abcb63a4201377eaf76df5eb4d18265f3848818/gcc%2Fstmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7abcb63a4201377eaf76df5eb4d18265f3848818/gcc%2Fstmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstmt.c?ref=7abcb63a4201377eaf76df5eb4d18265f3848818", "patch": "@@ -2080,8 +2080,16 @@ resolve_operand_names (string, outputs, inputs, pconstraints)\n   p = buffer;\n   while ((p = strchr (p, '%')) != NULL)\n     {\n-      if (*++p != '[')\n-\tcontinue;\n+      if (p[1] == '[')\n+\tp += 1;\n+      else if (ISALPHA (p[1]) && p[2] == '[')\n+\tp += 2;\n+      else\n+\t{\n+\t  p += 1;\n+\t  continue;\n+\t}\n+\n       p = resolve_operand_name_1 (p, outputs, inputs);\n     }\n "}, {"sha": "cddb9abb10c59567f20a7c4522373fc4451873bb", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7abcb63a4201377eaf76df5eb4d18265f3848818/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7abcb63a4201377eaf76df5eb4d18265f3848818/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7abcb63a4201377eaf76df5eb4d18265f3848818", "patch": "@@ -1,3 +1,7 @@\n+2001-12-23  Richard Henderson  <rth@redhat.com>\n+\n+\t* gcc.dg/asm-4.c: Test operand modifiers.\n+\n 2001-12-23  Richard Henderson  <rth@redhat.com>\n \n \t* gcc.c-torture/execute/20011219-1.c (main): Make \"i\" a long."}, {"sha": "862888ad345aa7abc8cff6c299fd8bc5a560d15a", "filename": "gcc/testsuite/gcc.dg/asm-4.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7abcb63a4201377eaf76df5eb4d18265f3848818/gcc%2Ftestsuite%2Fgcc.dg%2Fasm-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7abcb63a4201377eaf76df5eb4d18265f3848818/gcc%2Ftestsuite%2Fgcc.dg%2Fasm-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fasm-4.c?ref=7abcb63a4201377eaf76df5eb4d18265f3848818", "patch": "@@ -3,12 +3,14 @@\n \n int main()\n {\n-  int x;\n+  int x, y, z;\n \n   asm volatile (\"test0 X%0Y%[arg]Z\" : [arg] \"=g\" (x));\n-  asm volatile (\"test1 X%[out]Y%[in]Z\" : [out] \"=g\" (x) : [in] \"0\"(x));\n+  asm volatile (\"test1 X%[out]Y%[in]Z\" : [out] \"=g\" (y) : [in] \"0\"(y));\n+  asm volatile (\"test2 X%a0Y%a[arg]Z\" : : [arg] \"p\" (&z));\n }\n \n /* ??? Someone explain why the back reference dosn't work.  */\n /* { dontdg-final { scan-assembler \"test0 X(.*)Y\\1Z\" } } */\n /* { dontdg-final { scan-assembler \"test1 X(.*)Y\\1Z\" } } */\n+/* { dontdg-final { scan-assembler \"test2 X(.*)Y\\1Z\" } } */"}]}