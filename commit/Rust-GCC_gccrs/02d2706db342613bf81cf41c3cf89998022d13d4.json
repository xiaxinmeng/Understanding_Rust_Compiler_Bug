{"sha": "02d2706db342613bf81cf41c3cf89998022d13d4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDJkMjcwNmRiMzQyNjEzYmY4MWNmNDFjM2NmODk5OTgwMjJkMTNkNA==", "commit": {"author": {"name": "Alexandre Oliva", "email": "oliva@adacore.com", "date": "2021-01-01T00:38:23Z"}, "committer": {"name": "Alexandre Oliva", "email": "oliva@gnu.org", "date": "2021-01-01T04:39:49Z"}, "message": "-mno-long-calls for arm/headmerge tests\n\nThe headmerge tests pass a constant to conditional calls, so that the\nsame constant is always passed to a function, though it's a different\nfunction depending on which path is taken.\n\nThe test checks that the constant appears only once in the assembly\noutput, as a means to verify that the insns setting up the argument\nare unified: they appear as separate insns up to jump2, where\ncrossjump identifies a common prefix to all conditional paths and\nunifies them.\n\nAlas, with -mlong-calls, that we enable in our arm-vxworks\nconfigurations, the argument register is loaded after loading the\ncallee address into another register.  Since each path calls a\ndifferent function, there's no common initial code sequence for\ncrossjump to unify, and the argument register set up remains separate,\nso the test fails.\n\nThough it would surely be desirable for the compiler to perform the\nunification of the argument register setting up, this patch merely\navoids the effects of -mlong-calls, with an explicit -mno-long-calls.\n\n\nfor  gcc/testsuite/ChangeLog\n\n\t* gcc.target/arm/headmerge-1.c: Add -mno-long-calls.\n\t* gcc.target/arm/headmerge-2.c: Likewise.", "tree": {"sha": "e92b6f31d03959f58d2af39231c42502ca617ec4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e92b6f31d03959f58d2af39231c42502ca617ec4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/02d2706db342613bf81cf41c3cf89998022d13d4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02d2706db342613bf81cf41c3cf89998022d13d4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/02d2706db342613bf81cf41c3cf89998022d13d4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02d2706db342613bf81cf41c3cf89998022d13d4/comments", "author": null, "committer": null, "parents": [{"sha": "fe0e54c69fc0c07144ce7e8710c29162053430b3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe0e54c69fc0c07144ce7e8710c29162053430b3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe0e54c69fc0c07144ce7e8710c29162053430b3"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "319ccd254626de991d9a5cbc620432519971e970", "filename": "gcc/testsuite/gcc.target/arm/headmerge-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02d2706db342613bf81cf41c3cf89998022d13d4/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fheadmerge-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02d2706db342613bf81cf41c3cf89998022d13d4/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fheadmerge-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fheadmerge-1.c?ref=02d2706db342613bf81cf41c3cf89998022d13d4", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile }  */\n-/* { dg-options \"-O2\" }  */\n+/* { dg-options \"-O2 -mno-long-calls\" }  */\n /* { dg-final { scan-assembler-times \"#120\" 1 } } */\n \n extern void foo1 (int);"}, {"sha": "a015eb0f5690592aef87af054044ed1a6dfb5f43", "filename": "gcc/testsuite/gcc.target/arm/headmerge-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02d2706db342613bf81cf41c3cf89998022d13d4/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fheadmerge-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02d2706db342613bf81cf41c3cf89998022d13d4/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fheadmerge-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fheadmerge-2.c?ref=02d2706db342613bf81cf41c3cf89998022d13d4", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile }  */\n-/* { dg-options \"-O2\" }  */\n+/* { dg-options \"-O2 -mno-long-calls\" }  */\n /* { dg-final { scan-assembler-times \"120\\n\" 1 } } */\n \n extern void foo1 (int);"}]}