{"sha": "1586899ee9f8a3e2f82f35f847f2802593c71838", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTU4Njg5OWVlOWY4YTNlMmY4MmYzNWY4NDdmMjgwMjU5M2M3MTgzOA==", "commit": {"author": {"name": "Paul Brook", "email": "paul@codesourcery.com", "date": "2009-11-23T13:03:28Z"}, "committer": {"name": "Paul Brook", "email": "pbrook@gcc.gnu.org", "date": "2009-11-23T13:03:28Z"}, "message": "arm.c (arm_compute_save_reg0_reg12_mask): Add special case for noreturn functions.\n\n2009-11-23  Paul Brook  <paul@codesourcery.com>\n\n\tgcc/\n\t* config/arm/arm.c (arm_compute_save_reg0_reg12_mask): Add special\n\tcase for noreturn functions.\n\t(arm_compute_save_reg_mask): Remove special noreturn handling.\n\nFrom-SVN: r154441", "tree": {"sha": "ff0097e05572eca7d35fda88ff4b417535007168", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ff0097e05572eca7d35fda88ff4b417535007168"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1586899ee9f8a3e2f82f35f847f2802593c71838", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1586899ee9f8a3e2f82f35f847f2802593c71838", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1586899ee9f8a3e2f82f35f847f2802593c71838", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1586899ee9f8a3e2f82f35f847f2802593c71838/comments", "author": null, "committer": null, "parents": [{"sha": "0230277c253fc21548b8f50caa1d09f70e67e4ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0230277c253fc21548b8f50caa1d09f70e67e4ca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0230277c253fc21548b8f50caa1d09f70e67e4ca"}], "stats": {"total": 25, "additions": 20, "deletions": 5}, "files": [{"sha": "0fffc2800b3ce4fea60bd17b0e8632ef01ee91c7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1586899ee9f8a3e2f82f35f847f2802593c71838/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1586899ee9f8a3e2f82f35f847f2802593c71838/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1586899ee9f8a3e2f82f35f847f2802593c71838", "patch": "@@ -1,3 +1,9 @@\n+2009-11-23  Paul Brook  <paul@codesourcery.com>\n+\n+\t* config/arm/arm.c (arm_compute_save_reg0_reg12_mask): Add special\n+\tcase for noreturn functions.\n+\t(arm_compute_save_reg_mask): Remove special noreturn handling.\n+\n 2009-11-23  Richard Guenther  <rguenther@suse.de>\n \n \t* tree-dfa.c (get_ref_base_and_extent): Adjust maximum access"}, {"sha": "289f27a522653ae26befe04838dbbea59411bd95", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 14, "deletions": 5, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1586899ee9f8a3e2f82f35f847f2802593c71838/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1586899ee9f8a3e2f82f35f847f2802593c71838/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=1586899ee9f8a3e2f82f35f847f2802593c71838", "patch": "@@ -12831,6 +12831,20 @@ arm_compute_save_reg0_reg12_mask (void)\n \t  && crtl->uses_pic_offset_table)\n \tsave_reg_mask |= 1 << PIC_OFFSET_TABLE_REGNUM;\n     }\n+  else if (IS_VOLATILE(func_type))\n+    {\n+      /* For noreturn functions we historically omitted register saves\n+\t altogether.  However this really messes up debugging.  As a\n+\t compromise save just the fame pointers.  Combined with the link\n+\t register saved elsewhere this should be sufficient to get\n+\t a backtrace.  */\n+      if (frame_pointer_needed)\n+\tsave_reg_mask |= 1 << HARD_FRAME_POINTER_REGNUM;\n+      if (df_regs_ever_live_p (ARM_HARD_FRAME_POINTER_REGNUM))\n+\tsave_reg_mask |= 1 << ARM_HARD_FRAME_POINTER_REGNUM;\n+      if (df_regs_ever_live_p (THUMB_HARD_FRAME_POINTER_REGNUM))\n+\tsave_reg_mask |= 1 << THUMB_HARD_FRAME_POINTER_REGNUM;\n+    }\n   else\n     {\n       /* In the normal case we only need to save those registers\n@@ -12917,11 +12931,6 @@ arm_compute_save_reg_mask (void)\n       | (1 << LR_REGNUM)\n       | (1 << PC_REGNUM);\n \n-  /* Volatile functions do not return, so there\n-     is no need to save any other registers.  */\n-  if (IS_VOLATILE (func_type))\n-    return save_reg_mask;\n-\n   save_reg_mask |= arm_compute_save_reg0_reg12_mask ();\n \n   /* Decide if we need to save the link register."}]}