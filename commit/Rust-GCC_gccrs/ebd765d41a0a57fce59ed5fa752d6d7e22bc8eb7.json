{"sha": "ebd765d41a0a57fce59ed5fa752d6d7e22bc8eb7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWJkNzY1ZDQxYTBhNTdmY2U1OWVkNWZhNzUyZDZkN2UyMmJjOGViNw==", "commit": {"author": {"name": "Kito Cheng", "email": "kito.cheng@gmail.com", "date": "2015-07-09T03:51:21Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2015-07-09T03:51:21Z"}, "message": "function.c (stack_protect_epilogue): Use if rather than switch for check targetm.have_stack_protect_test.\n\n2015-07-08  Kito Cheng  <kito.cheng@gmail.com>\n\n\t* function.c (stack_protect_epilogue): Use if rather than switch for\n\tcheck targetm.have_stack_protect_test.\n\nFrom-SVN: r225599", "tree": {"sha": "1a408f86caa309e452337f0f9ff65d78b1d7ca97", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1a408f86caa309e452337f0f9ff65d78b1d7ca97"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ebd765d41a0a57fce59ed5fa752d6d7e22bc8eb7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ebd765d41a0a57fce59ed5fa752d6d7e22bc8eb7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ebd765d41a0a57fce59ed5fa752d6d7e22bc8eb7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ebd765d41a0a57fce59ed5fa752d6d7e22bc8eb7/comments", "author": {"login": "kito-cheng", "id": 2723185, "node_id": "MDQ6VXNlcjI3MjMxODU=", "avatar_url": "https://avatars.githubusercontent.com/u/2723185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kito-cheng", "html_url": "https://github.com/kito-cheng", "followers_url": "https://api.github.com/users/kito-cheng/followers", "following_url": "https://api.github.com/users/kito-cheng/following{/other_user}", "gists_url": "https://api.github.com/users/kito-cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/kito-cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kito-cheng/subscriptions", "organizations_url": "https://api.github.com/users/kito-cheng/orgs", "repos_url": "https://api.github.com/users/kito-cheng/repos", "events_url": "https://api.github.com/users/kito-cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/kito-cheng/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ca506be640b2b836c293450023e26ace0a0b4ea3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca506be640b2b836c293450023e26ace0a0b4ea3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca506be640b2b836c293450023e26ace0a0b4ea3"}], "stats": {"total": 25, "additions": 11, "deletions": 14}, "files": [{"sha": "7747a59bed2f809ca2e1709edc857c50c949b09e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ebd765d41a0a57fce59ed5fa752d6d7e22bc8eb7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ebd765d41a0a57fce59ed5fa752d6d7e22bc8eb7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ebd765d41a0a57fce59ed5fa752d6d7e22bc8eb7", "patch": "@@ -1,3 +1,8 @@\n+2015-07-08  Kito Cheng  <kito.cheng@gmail.com>\n+\n+\t* function.c (stack_protect_epilogue): Use if rather than switch for\n+\tcheck targetm.have_stack_protect_test.\n+\n 2015-07-08  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n \n \t* defaults.h: Provide default for WORD_REGISTER_OPERATIONS."}, {"sha": "b87aef67989394ae83f2df1f29215eeaae28f4d4", "filename": "gcc/function.c", "status": "modified", "additions": 6, "deletions": 14, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ebd765d41a0a57fce59ed5fa752d6d7e22bc8eb7/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ebd765d41a0a57fce59ed5fa752d6d7e22bc8eb7/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=ebd765d41a0a57fce59ed5fa752d6d7e22bc8eb7", "patch": "@@ -4874,26 +4874,18 @@ stack_protect_epilogue (void)\n   tree guard_decl = targetm.stack_protect_guard ();\n   rtx_code_label *label = gen_label_rtx ();\n   rtx x, y, tmp;\n+  rtx_insn *seq;\n \n   x = expand_normal (crtl->stack_protect_guard);\n   y = expand_normal (guard_decl);\n \n   /* Allow the target to compare Y with X without leaking either into\n      a register.  */\n-  switch (targetm.have_stack_protect_test ())\n-    {\n-    case 1:\n-      if (rtx_insn *seq = targetm.gen_stack_protect_test (x, y, label))\n-\t{\n-\t  emit_insn (seq);\n-\t  break;\n-\t}\n-      /* FALLTHRU */\n-\n-    default:\n-      emit_cmp_and_jump_insns (x, y, EQ, NULL_RTX, ptr_mode, 1, label);\n-      break;\n-    }\n+  if (targetm.have_stack_protect_test ()\n+      && ((seq = targetm.gen_stack_protect_test (x, y, label)) != NULL_RTX))\n+    emit_insn (seq);\n+  else\n+    emit_cmp_and_jump_insns (x, y, EQ, NULL_RTX, ptr_mode, 1, label);\n \n   /* The noreturn predictor has been moved to the tree level.  The rtl-level\n      predictors estimate this branch about 20%, which isn't enough to get"}]}