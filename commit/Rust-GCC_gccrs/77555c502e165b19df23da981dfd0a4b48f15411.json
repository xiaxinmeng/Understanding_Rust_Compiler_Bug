{"sha": "77555c502e165b19df23da981dfd0a4b48f15411", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Nzc1NTVjNTAyZTE2NWIxOWRmMjNkYTk4MWRmZDBhNGI0OGYxNTQxMQ==", "commit": {"author": {"name": "Kenneth Zadeck", "email": "zadeck@naturalbridge.com", "date": "2007-10-12T14:36:47Z"}, "committer": {"name": "Kenneth Zadeck", "email": "zadeck@gcc.gnu.org", "date": "2007-10-12T14:36:47Z"}, "message": "global.c (build_insn_chain): Formatting fixes.\n\n2007-10-12  Kenneth Zadeck <zadeck@naturalbridge.com>\n\n\t* global.c (build_insn_chain): Formatting fixes.\n\nFrom-SVN: r129262", "tree": {"sha": "291c7f981c69fcb898e0ed63121a57905d19cb31", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/291c7f981c69fcb898e0ed63121a57905d19cb31"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/77555c502e165b19df23da981dfd0a4b48f15411", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77555c502e165b19df23da981dfd0a4b48f15411", "html_url": "https://github.com/Rust-GCC/gccrs/commit/77555c502e165b19df23da981dfd0a4b48f15411", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77555c502e165b19df23da981dfd0a4b48f15411/comments", "author": {"login": "zadeck", "id": 42682403, "node_id": "MDQ6VXNlcjQyNjgyNDAz", "avatar_url": "https://avatars.githubusercontent.com/u/42682403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zadeck", "html_url": "https://github.com/zadeck", "followers_url": "https://api.github.com/users/zadeck/followers", "following_url": "https://api.github.com/users/zadeck/following{/other_user}", "gists_url": "https://api.github.com/users/zadeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/zadeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zadeck/subscriptions", "organizations_url": "https://api.github.com/users/zadeck/orgs", "repos_url": "https://api.github.com/users/zadeck/repos", "events_url": "https://api.github.com/users/zadeck/events{/privacy}", "received_events_url": "https://api.github.com/users/zadeck/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7cd13c1cad1f383d23dbd999b7f76b6db0c51c64", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7cd13c1cad1f383d23dbd999b7f76b6db0c51c64", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7cd13c1cad1f383d23dbd999b7f76b6db0c51c64"}], "stats": {"total": 49, "additions": 34, "deletions": 15}, "files": [{"sha": "7bafdaa2650beece3827c280bc00b048e10c9562", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77555c502e165b19df23da981dfd0a4b48f15411/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77555c502e165b19df23da981dfd0a4b48f15411/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=77555c502e165b19df23da981dfd0a4b48f15411", "patch": "@@ -1,3 +1,7 @@\n+2007-10-12  Kenneth Zadeck <zadeck@naturalbridge.com>\n+\n+\t* global.c (build_insn_chain): Formatting fixes.\n+\n 2007-10-12  Richard Guenther <rguenther@suse.de>\n \n \t* tree-ssa-forwprop.c (forward_propagate_into_cond): For"}, {"sha": "90f6da877f20264a25dc63346468d00d95edc80b", "filename": "gcc/global.c", "status": "modified", "additions": 30, "deletions": 15, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77555c502e165b19df23da981dfd0a4b48f15411/gcc%2Fglobal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77555c502e165b19df23da981dfd0a4b48f15411/gcc%2Fglobal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fglobal.c?ref=77555c502e165b19df23da981dfd0a4b48f15411", "patch": "@@ -1358,6 +1358,8 @@ mark_elimination (int from, int to)\n     }\n }\n \f\n+/* Print chain C to FILE.  */\n+\n static void\n print_insn_chain (FILE *file, struct insn_chain *c)\n {\n@@ -1366,15 +1368,21 @@ print_insn_chain (FILE *file, struct insn_chain *c)\n   bitmap_print (file, &c->dead_or_set, \"dead_or_set: \", \"\\n\");\n }\n \n+\n+/* Print all reload_insn_chains to FILE.  */\n+\n static void\n print_insn_chains (FILE *file)\n {\n   struct insn_chain *c;\n   for (c = reload_insn_chain; c ; c = c->next)\n     print_insn_chain (file, c);\n }\n+\n+\n /* Walk the insns of the current function and build reload_insn_chain,\n    and record register life information.  */\n+\n static void\n build_insn_chain (void)\n {\n@@ -1450,7 +1458,7 @@ build_insn_chain (void)\n \t\t      {\n \t\t\tif (regno < FIRST_PSEUDO_REGISTER)\n \t\t\t  {\n-\t\t\t    if (! fixed_regs[regno])\n+\t\t\t    if (!fixed_regs[regno])\n \t\t\t      bitmap_set_bit (&c->dead_or_set, regno);\n \t\t\t  }\n \t\t\telse if (reg_renumber[regno] >= 0)\n@@ -1461,16 +1469,20 @@ build_insn_chain (void)\n \t\t\t&& (!DF_REF_FLAGS_IS_SET (def, DF_REF_CONDITIONAL)))\n \t\t      {\n \t\t\trtx reg = DF_REF_REG (def);\n+\n \t\t\t/* We can model subregs, but not if they are\n \t\t\t   wrapped in ZERO_EXTRACTS.  */\n \t\t\tif (GET_CODE (reg) == SUBREG\n \t\t\t    && !DF_REF_FLAGS_IS_SET (def, DF_REF_EXTRACT))\n \t\t\t  {\n \t\t\t    unsigned int start = SUBREG_BYTE (reg);\n-\t\t\t    unsigned int last = start + GET_MODE_SIZE (GET_MODE (reg));\n+\t\t\t    unsigned int last = start \n+\t\t\t      + GET_MODE_SIZE (GET_MODE (reg));\n \n-\t\t\t    ra_init_live_subregs (bitmap_bit_p (live_relevant_regs, regno), \n-\t\t\t\t\t\t  live_subregs, live_subregs_used,\n+\t\t\t    ra_init_live_subregs (bitmap_bit_p (live_relevant_regs, \n+\t\t\t\t\t\t\t\tregno), \n+\t\t\t\t\t\t  live_subregs, \n+\t\t\t\t\t\t  live_subregs_used,\n \t\t\t\t\t\t  regno, reg);\n \t\t\t    /* Ignore the paradoxical bits.  */\n \t\t\t    if ((int)last > live_subregs_used[regno])\n@@ -1535,7 +1547,7 @@ build_insn_chain (void)\n \t\t      {\n \t\t\tif (regno < FIRST_PSEUDO_REGISTER)\n \t\t\t  {\n-\t\t\t    if (! fixed_regs[regno])\n+\t\t\t    if (!fixed_regs[regno])\n \t\t\t      bitmap_set_bit (&c->dead_or_set, regno);\n \t\t\t  }\n \t\t\telse if (reg_renumber[regno] >= 0)\n@@ -1548,10 +1560,13 @@ build_insn_chain (void)\n \t\t\t    && !DF_REF_FLAGS_IS_SET (use, DF_REF_EXTRACT)) \n \t\t\t  {\n \t\t\t    unsigned int start = SUBREG_BYTE (reg);\n-\t\t\t    unsigned int last = start + GET_MODE_SIZE (GET_MODE (reg));\n+\t\t\t    unsigned int last = start \n+\t\t\t      + GET_MODE_SIZE (GET_MODE (reg));\n \t\t\t    \n-\t\t\t    ra_init_live_subregs (bitmap_bit_p (live_relevant_regs, regno), \n-\t\t\t\t\t\t  live_subregs, live_subregs_used,\n+\t\t\t    ra_init_live_subregs (bitmap_bit_p (live_relevant_regs, \n+\t\t\t\t\t\t\t\tregno), \n+\t\t\t\t\t\t  live_subregs, \n+\t\t\t\t\t\t  live_subregs_used,\n \t\t\t\t\t\t  regno, reg);\n \t\t\t    \n \t\t\t    /* Ignore the paradoxical bits.  */\n@@ -1579,13 +1594,13 @@ build_insn_chain (void)\n       /* FIXME!! The following code is a disaster.  Reload needs to see the\n \t labels and jump tables that are just hanging out in between\n \t the basic blocks.  See pr33676.  */\n-\n       insn = BB_HEAD (bb);\n-\n+      \n       /* Skip over the barriers and cruft.  */\n-      while (insn && (BARRIER_P (insn) || NOTE_P (insn) || BLOCK_FOR_INSN (insn) == bb))\n+      while (insn && (BARRIER_P (insn) || NOTE_P (insn) \n+\t\t      || BLOCK_FOR_INSN (insn) == bb))\n \tinsn = PREV_INSN (insn);\n-\t\n+      \n       /* While we add anything except barriers and notes, the focus is\n \t to get the labels and jump tables into the\n \t reload_insn_chain.  */\n@@ -1595,24 +1610,24 @@ build_insn_chain (void)\n \t    {\n \t      if (BLOCK_FOR_INSN (insn))\n \t\tbreak;\n-\n+\t      \n \t      c = new_insn_chain ();\n \t      c->next = next;\n \t      next = c;\n \t      *p = c;\n \t      p = &c->prev;\n \t      \n-\t      c->insn = insn;\n \t      /* The block makes no sense here, but it is what the old\n \t\t code did.  */\n \t      c->block = bb->index;\n+\t      c->insn = insn;\n \t      bitmap_copy (&c->live_throughout, live_relevant_regs);\n \t    }\t  \n \t  insn = PREV_INSN (insn);\n \t}\n     }\n \n-  for (i = 0; i < (unsigned int)max_regno; i++)\n+  for (i = 0; i < (unsigned int) max_regno; i++)\n     if (live_subregs[i])\n       free (live_subregs[i]);\n "}]}