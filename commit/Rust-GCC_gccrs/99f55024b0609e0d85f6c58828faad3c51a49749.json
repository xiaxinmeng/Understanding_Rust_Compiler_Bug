{"sha": "99f55024b0609e0d85f6c58828faad3c51a49749", "node_id": "C_kwDOANBUbNoAKDk5ZjU1MDI0YjA2MDllMGQ4NWY2YzU4ODI4ZmFhZDNjNTFhNDk3NDk", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-05-03T08:23:51Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-05-03T08:25:45Z"}, "message": "Fixup OPTION_SET_P usage in finish_options\n\nWhen some code was moved from process_options to finish_options,\nuses of OPTION_SET_P were not replaced with references to the\nopts_set option set.  The following fixes this.\n\n2022-05-03  Richard Biener  <rguenther@suse.de>\n\n\t* opts.cc: #undef OPTIONS_SET_P.\n\t(finish_options): Use opts_set instead of OPTIONS_SET_P.", "tree": {"sha": "97bb792b8e953a3cb4d1312185a534ed3b1f10f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/97bb792b8e953a3cb4d1312185a534ed3b1f10f4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/99f55024b0609e0d85f6c58828faad3c51a49749", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99f55024b0609e0d85f6c58828faad3c51a49749", "html_url": "https://github.com/Rust-GCC/gccrs/commit/99f55024b0609e0d85f6c58828faad3c51a49749", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99f55024b0609e0d85f6c58828faad3c51a49749/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dfae0c5a29f336cdab234b28999f9ba9dc20a4d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dfae0c5a29f336cdab234b28999f9ba9dc20a4d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dfae0c5a29f336cdab234b28999f9ba9dc20a4d0"}], "stats": {"total": 11, "additions": 7, "deletions": 4}, "files": [{"sha": "1378ef781d089092adc5fcd7488027c582e43383", "filename": "gcc/opts.cc", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99f55024b0609e0d85f6c58828faad3c51a49749/gcc%2Fopts.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99f55024b0609e0d85f6c58828faad3c51a49749/gcc%2Fopts.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.cc?ref=99f55024b0609e0d85f6c58828faad3c51a49749", "patch": "@@ -35,6 +35,9 @@ along with GCC; see the file COPYING3.  If not see\n #include \"version.h\"\n #include \"selftest.h\"\n \n+/* In this file all option sets are explicit.  */\n+#undef OPTION_SET_P\n+\n static void set_Wstrict_aliasing (struct gcc_options *opts, int onoff);\n \n /* Names of fundamental debug info formats indexed by enum\n@@ -1317,7 +1320,7 @@ finish_options (struct gcc_options *opts, struct gcc_options *opts_set,\n \tdebug_info_level = DINFO_LEVEL_NONE;\n     }\n \n-  if (!OPTION_SET_P (debug_nonbind_markers_p))\n+  if (!opts_set->x_debug_nonbind_markers_p)\n     debug_nonbind_markers_p\n       = (optimize\n \t && debug_info_level >= DINFO_LEVEL_NORMAL\n@@ -1327,14 +1330,14 @@ finish_options (struct gcc_options *opts, struct gcc_options *opts_set,\n   /* Note -fvar-tracking is enabled automatically with OPT_LEVELS_1_PLUS and\n      so we need to drop it if we are called from optimize attribute.  */\n   if (debug_info_level == DINFO_LEVEL_NONE\n-      && !OPTION_SET_P (flag_var_tracking))\n+      && !opts_set->x_flag_var_tracking)\n     flag_var_tracking = false;\n \n   /* One could use EnabledBy, but it would lead to a circular dependency.  */\n-  if (!OPTION_SET_P (flag_var_tracking_uninit))\n+  if (!opts_set->x_flag_var_tracking_uninit)\n      flag_var_tracking_uninit = flag_var_tracking;\n \n-  if (!OPTION_SET_P (flag_var_tracking_assignments))\n+  if (!opts_set->x_flag_var_tracking_assignments)\n     flag_var_tracking_assignments\n       = (flag_var_tracking\n \t && !(flag_selective_scheduling || flag_selective_scheduling2));"}]}