{"sha": "c3d3bb0f03dbd02512ab46979088ee8e22520c24", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzNkM2JiMGYwM2RiZDAyNTEyYWI0Njk3OTA4OGVlOGUyMjUyMGMyNA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2021-04-03T20:17:29Z"}, "committer": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2021-04-04T00:59:00Z"}, "message": "c++: array new initialized from a call [PR99643]\n\nHere the get_foo() call results in a TARGET_EXPR, which we strip in\nmassage_init_elt, but then when build_vec_init tries to use it to initialize\nthe array element we crash because build_aggr_init expects a class rvalue to\nhave a TARGET_EXPR.  So don't strip it.\n\nThe stripping was added in r206639 for PR59659, so I checked that removing\nit didn't significantly increase compile time or memory usage for that\ntestcase; compile time was unaffected, memory usage increased by 0.00004%.\n\ngcc/cp/ChangeLog:\n\n\tPR c++/99643\n\t* typeck2.c (massage_init_elt): Don't strip TARGET_EXPR.\n\ngcc/testsuite/ChangeLog:\n\n\tPR c++/99643\n\t* g++.dg/cpp0x/initlist-new5.C: New test.", "tree": {"sha": "3bc8b2dde7623eb9a72549c7df92c2fd27f51044", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3bc8b2dde7623eb9a72549c7df92c2fd27f51044"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c3d3bb0f03dbd02512ab46979088ee8e22520c24", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3d3bb0f03dbd02512ab46979088ee8e22520c24", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c3d3bb0f03dbd02512ab46979088ee8e22520c24", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3d3bb0f03dbd02512ab46979088ee8e22520c24/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c0756c4eb36b6bf4bf1ea0cf3633f08ae0e1c13d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0756c4eb36b6bf4bf1ea0cf3633f08ae0e1c13d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c0756c4eb36b6bf4bf1ea0cf3633f08ae0e1c13d"}], "stats": {"total": 12, "additions": 9, "deletions": 3}, "files": [{"sha": "a58d397ca3fd8e24c5ea6f44934decc61c802af4", "filename": "gcc/cp/typeck2.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3d3bb0f03dbd02512ab46979088ee8e22520c24/gcc%2Fcp%2Ftypeck2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3d3bb0f03dbd02512ab46979088ee8e22520c24/gcc%2Fcp%2Ftypeck2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck2.c?ref=c3d3bb0f03dbd02512ab46979088ee8e22520c24", "patch": "@@ -1320,9 +1320,6 @@ massage_init_elt (tree type, tree init, int nested, int flags,\n   if (flags & LOOKUP_AGGREGATE_PAREN_INIT)\n     new_flags |= LOOKUP_AGGREGATE_PAREN_INIT;\n   init = digest_init_r (type, init, nested ? 2 : 1, new_flags, complain);\n-  /* Strip a simple TARGET_EXPR when we know this is an initializer.  */\n-  if (SIMPLE_TARGET_EXPR_P (init))\n-    init = TARGET_EXPR_INITIAL (init);\n   /* When we defer constant folding within a statement, we may want to\n      defer this folding as well.  */\n   tree t = fold_non_dependent_init (init, complain);"}, {"sha": "da54d8981d43327fc4c6f424c71cd98074621208", "filename": "gcc/testsuite/g++.dg/cpp0x/initlist-new5.C", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3d3bb0f03dbd02512ab46979088ee8e22520c24/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist-new5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3d3bb0f03dbd02512ab46979088ee8e22520c24/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist-new5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist-new5.C?ref=c3d3bb0f03dbd02512ab46979088ee8e22520c24", "patch": "@@ -0,0 +1,9 @@\n+// PR c++/99643\n+// { dg-do compile { target c++11 } }\n+\n+struct Foo {};\n+Foo get_foo();\n+\n+int main() {\n+    new Foo[1]{get_foo()};\n+}"}]}