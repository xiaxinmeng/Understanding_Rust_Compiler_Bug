{"sha": "d347f5722f311a63908da11d492428af8f4563a4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDM0N2Y1NzIyZjMxMWE2MzkwOGRhMTFkNDkyNDI4YWY4ZjQ1NjNhNA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-10-26T12:19:56Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-10-26T12:19:56Z"}, "message": "[multiple changes]\n\n2010-10-26  Robert Dewar  <dewar@adacore.com>\n\n\t* einfo.ads, einfo.adb (Is_Base_Type): New function, use it where\n\tappropriate.\n\t* exp_ch6.adb, exp_dbug.adb, exp_disp.adb, freeze.adb, lib-xref.adb,\n\tsem_aux.adb, sem_ch3.adb, sem_ch7.adb, sem_ch8.adb (Is_Base_Type): Use\n\tthis new abstraction where appropriate.\n\n2010-10-26  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch12.adb: Code clean up.\n\n2010-10-26  Paul Hilfinger  <hilfinger@adacore.com>\n\n\t* exp_dbug.ads: Document effect of 'pragma Unchecked_Union' on\n\tdebugging data.\n\n2010-10-26  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_util.adb (Note_Possible_Modification): If the target of an\n\tassignment is the bound variable in an iterator, the domain of\n\titeration, i.e. array or container, is modified as well.\n\n2010-10-26  Bob Duff  <duff@adacore.com>\n\n\t* Make-generated.in: Make the relevant make targets depend on\n\tceinfo.adb and csinfo.adb.\n\t* csinfo.adb, ceinfo.adb: Make sure it raises an exception on failure,\n\tso when called from xeinfo, the failure will be noticed.\n\t* sinfo.ads: Update comments to reflect the fact that xsinfo runs csinfo\n\t* xsinfo.adb, xeinfo.adb: Run ceinfo to check for errors. Close files.\n\n2010-10-26  Ed Schonberg  <schonberg@adacore.com>\n\n\t* exp_ch4.adb: Set properly parent field of operands of concatenation.\n\n2010-10-26  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_res.adb (Check_Infinite_Recursion): A recursive call within a\n\tconditional expression or a case expression should not generate an\n\tinfinite recursion warning.\n\nFrom-SVN: r165946", "tree": {"sha": "3f8b90ada92674382721d695cfa5f7417e9e04d6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3f8b90ada92674382721d695cfa5f7417e9e04d6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d347f5722f311a63908da11d492428af8f4563a4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d347f5722f311a63908da11d492428af8f4563a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d347f5722f311a63908da11d492428af8f4563a4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d347f5722f311a63908da11d492428af8f4563a4/comments", "author": null, "committer": null, "parents": [{"sha": "038140ede0175799d17e489b3509c218ee4fc2f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/038140ede0175799d17e489b3509c218ee4fc2f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/038140ede0175799d17e489b3509c218ee4fc2f1"}], "stats": {"total": 311, "additions": 217, "deletions": 94}, "files": [{"sha": "2bb9022bf41b08b4506ffc91cf50a64973fd8566", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d347f5722f311a63908da11d492428af8f4563a4/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d347f5722f311a63908da11d492428af8f4563a4/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=d347f5722f311a63908da11d492428af8f4563a4", "patch": "@@ -1,3 +1,45 @@\n+2010-10-26  Robert Dewar  <dewar@adacore.com>\n+\n+\t* einfo.ads, einfo.adb (Is_Base_Type): New function, use it where\n+\tappropriate.\n+\t* exp_ch6.adb, exp_dbug.adb, exp_disp.adb, freeze.adb, lib-xref.adb,\n+\tsem_aux.adb, sem_ch3.adb, sem_ch7.adb, sem_ch8.adb (Is_Base_Type): Use\n+\tthis new abstraction where appropriate.\n+\n+2010-10-26  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch12.adb: Code clean up.\n+\n+2010-10-26  Paul Hilfinger  <hilfinger@adacore.com>\n+\n+\t* exp_dbug.ads: Document effect of 'pragma Unchecked_Union' on\n+\tdebugging data.\n+\n+2010-10-26  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_util.adb (Note_Possible_Modification): If the target of an\n+\tassignment is the bound variable in an iterator, the domain of\n+\titeration, i.e. array or container, is modified as well.\n+\n+2010-10-26  Bob Duff  <duff@adacore.com>\n+\n+\t* Make-generated.in: Make the relevant make targets depend on\n+\tceinfo.adb and csinfo.adb.\n+\t* csinfo.adb, ceinfo.adb: Make sure it raises an exception on failure,\n+\tso when called from xeinfo, the failure will be noticed.\n+\t* sinfo.ads: Update comments to reflect the fact that xsinfo runs csinfo\n+\t* xsinfo.adb, xeinfo.adb: Run ceinfo to check for errors. Close files.\n+\n+2010-10-26  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* exp_ch4.adb: Set properly parent field of operands of concatenation.\n+\n+2010-10-26  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_res.adb (Check_Infinite_Recursion): A recursive call within a\n+\tconditional expression or a case expression should not generate an\n+\tinfinite recursion warning.\n+\n 2010-10-26  Javier Miranda  <miranda@adacore.com>\n \n \t* einfo.ads, einfo.adb (Is_Overriding_Operation): Removed."}, {"sha": "30ce14e916dc3fa9c493f2ada260823385ae940d", "filename": "gcc/ada/Make-generated.in", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d347f5722f311a63908da11d492428af8f4563a4/gcc%2Fada%2FMake-generated.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d347f5722f311a63908da11d492428af8f4563a4/gcc%2Fada%2FMake-generated.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FMake-generated.in?ref=d347f5722f311a63908da11d492428af8f4563a4", "patch": "@@ -29,13 +29,13 @@ $(ADA_GEN_SUBDIR)/treeprs.ads : $(ADA_GEN_SUBDIR)/treeprs.adt $(ADA_GEN_SUBDIR)/\n \t$(CP) $^ $(ADA_GEN_SUBDIR)/bldtools/treeprs\n \t(cd $(ADA_GEN_SUBDIR)/bldtools/treeprs; gnatmake -q xtreeprs ; ./xtreeprs ../../treeprs.ads )\n \n-$(ADA_GEN_SUBDIR)/einfo.h : $(ADA_GEN_SUBDIR)/einfo.ads $(ADA_GEN_SUBDIR)/einfo.adb $(ADA_GEN_SUBDIR)/xeinfo.adb\n+$(ADA_GEN_SUBDIR)/einfo.h : $(ADA_GEN_SUBDIR)/einfo.ads $(ADA_GEN_SUBDIR)/einfo.adb $(ADA_GEN_SUBDIR)/xeinfo.adb $(ADA_GEN_SUBDIR)/ceinfo.adb\n \t-$(MKDIR) $(ADA_GEN_SUBDIR)/bldtools/einfo\n \t$(RM) $(addprefix $(ADA_GEN_SUBDIR)/bldtools/einfo/,$(notdir $^))\n \t$(CP) $^ $(ADA_GEN_SUBDIR)/bldtools/einfo\n \t(cd $(ADA_GEN_SUBDIR)/bldtools/einfo; gnatmake -q xeinfo ; ./xeinfo ../../einfo.h )\n \n-$(ADA_GEN_SUBDIR)/sinfo.h : $(ADA_GEN_SUBDIR)/sinfo.ads $(ADA_GEN_SUBDIR)/xsinfo.adb\n+$(ADA_GEN_SUBDIR)/sinfo.h : $(ADA_GEN_SUBDIR)/sinfo.ads $(ADA_GEN_SUBDIR)/sinfo.adb $(ADA_GEN_SUBDIR)/xsinfo.adb $(ADA_GEN_SUBDIR)/csinfo.adb\n \t-$(MKDIR) $(ADA_GEN_SUBDIR)/bldtools/sinfo\n \t$(RM) $(addprefix $(ADA_GEN_SUBDIR)/bldtools/sinfo/,$(notdir $^))\n \t$(CP) $^ $(ADA_GEN_SUBDIR)/bldtools/sinfo"}, {"sha": "47f134a37e2def6ae991d317d8a696fa31475b06", "filename": "gcc/ada/ceinfo.adb", "status": "modified", "additions": 16, "deletions": 3, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d347f5722f311a63908da11d492428af8f4563a4/gcc%2Fada%2Fceinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d347f5722f311a63908da11d492428af8f4563a4/gcc%2Fada%2Fceinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fceinfo.adb?ref=d347f5722f311a63908da11d492428af8f4563a4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1998-2008, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1998-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -23,8 +23,12 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  Program to check consistency of einfo.ads and einfo.adb. Checks that\n---  field name usage is consistent, including comments mentioning fields.\n+--  Check consistency of einfo.ads and einfo.adb. Checks that field name usage\n+--  is consistent, including comments mentioning fields.\n+\n+--  Note that this is used both as a standalone program, and as a procedure\n+--  called by XEinfo. This raises an unhandled exception if it finds any\n+--  errors; we don't attempt any sophisticated error recovery.\n \n with Ada.Strings.Unbounded;         use Ada.Strings.Unbounded;\n with Ada.Strings.Unbounded.Text_IO; use Ada.Strings.Unbounded.Text_IO;\n@@ -42,6 +46,9 @@ procedure CEinfo is\n    Infil  : File_Type;\n    Lineno : Natural := 0;\n \n+   Err : exception;\n+   --  Raised on error\n+\n    Fieldnm    : VString;\n    Accessfunc : VString;\n    Line       : VString;\n@@ -126,6 +133,7 @@ begin\n                Put_Line\n                  (\"*** unknown field name \" & Fieldnm & \" at line \" & Lineno);\n             end if;\n+            raise Err;\n          end if;\n       end if;\n    end loop;\n@@ -153,6 +161,7 @@ begin\n             Put_Line\n               (\"*** unknown field name \" & Fieldnm & \" at line \" & Lineno);\n          end if;\n+            raise Err;\n       end if;\n    end loop;\n \n@@ -172,6 +181,7 @@ begin\n          Put_Line (\"*** incorrect field at line \" & Lineno);\n          Put_Line (\"      found field \" & Accessfunc);\n          Put_Line (\"      expecting field \" & Get (Fields, Fieldnm));\n+         raise Err;\n       end if;\n    end loop;\n \n@@ -196,9 +206,12 @@ begin\n          Put_Line (\"*** incorrect field at line \" & Lineno);\n          Put_Line (\"      found field \" & Accessfunc);\n          Put_Line (\"      expecting field \" & Get (Fields, Fieldnm));\n+         raise Err;\n       end if;\n    end loop;\n \n+   Close (Infil);\n+\n    Put_Line (\"All tests completed successfully, no errors detected\");\n \n end CEinfo;"}, {"sha": "ef319cff9e5e4812a730e2bcc5a6c088c709b443", "filename": "gcc/ada/csinfo.adb", "status": "modified", "additions": 7, "deletions": 8, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d347f5722f311a63908da11d492428af8f4563a4/gcc%2Fada%2Fcsinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d347f5722f311a63908da11d492428af8f4563a4/gcc%2Fada%2Fcsinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcsinfo.adb?ref=d347f5722f311a63908da11d492428af8f4563a4", "patch": "@@ -23,10 +23,13 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  Program to check consistency of sinfo.ads and sinfo.adb. Checks that field\n---  name usage is consistent and that assertion cross-reference lists are\n---  correct, as well as making sure that all the comments on field name usage\n---  are consistent.\n+--  Check consistency of sinfo.ads and sinfo.adb. Checks that field name usage\n+--  is consistent and that assertion cross-reference lists are correct, as well\n+--  as making sure that all the comments on field name usage are consistent.\n+\n+--  Note that this is used both as a standalone program, and as a procedure\n+--  called by XSinfo. This raises an unhandled exception if it finds any\n+--  errors; we don't attempt any sophisticated error recovery.\n \n with Ada.Strings.Unbounded;         use Ada.Strings.Unbounded;\n with Ada.Strings.Unbounded.Text_IO; use Ada.Strings.Unbounded.Text_IO;\n@@ -635,8 +638,4 @@ begin\n    New_Line;\n    Put_Line (\"All tests completed successfully, no errors detected\");\n \n-exception\n-   when Done =>\n-      null;\n-\n end CSinfo;"}, {"sha": "d8b24a3d83a50a0b85741476f32c1c1b3f7deaf2", "filename": "gcc/ada/einfo.adb", "status": "modified", "additions": 29, "deletions": 21, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d347f5722f311a63908da11d492428af8f4563a4/gcc%2Fada%2Feinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d347f5722f311a63908da11d492428af8f4563a4/gcc%2Fada%2Feinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.adb?ref=d347f5722f311a63908da11d492428af8f4563a4", "patch": "@@ -2996,7 +2996,7 @@ package body Einfo is\n \n    procedure Set_Access_Disp_Table (Id : E; V : L) is\n    begin\n-      pragma Assert (Is_Tagged_Type (Id) and then Id = Base_Type (Id));\n+      pragma Assert (Is_Tagged_Type (Id) and then Is_Base_Type (Id));\n       Set_Elist16 (Id, V);\n    end Set_Access_Disp_Table;\n \n@@ -3018,7 +3018,7 @@ package body Einfo is\n \n    procedure Set_Associated_Storage_Pool (Id : E; V : E) is\n    begin\n-      pragma Assert (Is_Access_Type (Id) and then Id = Base_Type (Id));\n+      pragma Assert (Is_Access_Type (Id) and then Is_Base_Type (Id));\n       Set_Node22 (Id, V);\n    end Set_Associated_Storage_Pool;\n \n@@ -3082,7 +3082,7 @@ package body Einfo is\n \n    procedure Set_C_Pass_By_Copy (Id : E; V : B := True) is\n    begin\n-      pragma Assert (Is_Record_Type (Id) and then Id = Base_Type (Id));\n+      pragma Assert (Is_Record_Type (Id) and then Is_Base_Type (Id));\n       Set_Flag125 (Id, V);\n    end Set_C_Pass_By_Copy;\n \n@@ -3122,13 +3122,13 @@ package body Einfo is\n \n    procedure Set_Component_Size (Id : E; V : U) is\n    begin\n-      pragma Assert (Is_Array_Type (Id) and then Id = Base_Type (Id));\n+      pragma Assert (Is_Array_Type (Id) and then Is_Base_Type (Id));\n       Set_Uint22 (Id, V);\n    end Set_Component_Size;\n \n    procedure Set_Component_Type (Id : E; V : E) is\n    begin\n-      pragma Assert (Is_Array_Type (Id) and then Id = Base_Type (Id));\n+      pragma Assert (Is_Array_Type (Id) and then Is_Base_Type (Id));\n       Set_Node20 (Id, V);\n    end Set_Component_Type;\n \n@@ -3302,7 +3302,7 @@ package body Einfo is\n \n    procedure Set_Dispatch_Table_Wrappers (Id : E; V : L) is\n    begin\n-      pragma Assert (Is_Tagged_Type (Id) and then Id = Base_Type (Id));\n+      pragma Assert (Is_Tagged_Type (Id) and then Is_Base_Type (Id));\n       Set_Elist26 (Id, V);\n    end Set_Dispatch_Table_Wrappers;\n \n@@ -3477,8 +3477,7 @@ package body Einfo is\n    procedure Set_Can_Use_Internal_Rep (Id : E; V : B := True) is\n    begin\n       pragma Assert\n-        (Is_Access_Subprogram_Type (Id)\n-          and then Id = Base_Type (Id));\n+        (Is_Access_Subprogram_Type (Id) and then Is_Base_Type (Id));\n       Set_Flag229 (Id, V);\n    end Set_Can_Use_Internal_Rep;\n \n@@ -3489,7 +3488,7 @@ package body Einfo is\n \n    procedure Set_Finalize_Storage_Only (Id : E; V : B := True) is\n    begin\n-      pragma Assert (Is_Type (Id) and then Id = Base_Type (Id));\n+      pragma Assert (Is_Type (Id) and then Is_Base_Type (Id));\n       Set_Flag158 (Id, V);\n    end Set_Finalize_Storage_Only;\n \n@@ -3597,7 +3596,7 @@ package body Einfo is\n \n    procedure Set_Has_Atomic_Components (Id : E; V : B := True) is\n    begin\n-      pragma Assert (not Is_Type (Id) or else Id = Base_Type (Id));\n+      pragma Assert (not Is_Type (Id) or else Is_Base_Type (Id));\n       Set_Flag86 (Id, V);\n    end Set_Has_Atomic_Components;\n \n@@ -3995,7 +3994,7 @@ package body Einfo is\n \n    procedure Set_Has_Volatile_Components (Id : E; V : B := True) is\n    begin\n-      pragma Assert (not Is_Type (Id) or else Id = Base_Type (Id));\n+      pragma Assert (not Is_Type (Id) or else Is_Base_Type (Id));\n       Set_Flag87 (Id, V);\n    end Set_Has_Volatile_Components;\n \n@@ -4118,7 +4117,7 @@ package body Einfo is\n    procedure Set_Is_Bit_Packed_Array (Id : E; V : B := True) is\n    begin\n       pragma Assert ((not V)\n-        or else (Is_Array_Type (Id) and then Id = Base_Type (Id)));\n+        or else (Is_Array_Type (Id) and then Is_Base_Type (Id)));\n \n       Set_Flag122 (Id, V);\n    end Set_Is_Bit_Packed_Array;\n@@ -4736,7 +4735,7 @@ package body Einfo is\n \n    procedure Set_No_Pool_Assigned (Id : E; V : B := True) is\n    begin\n-      pragma Assert (Is_Access_Type (Id) and then Id = Base_Type (Id));\n+      pragma Assert (Is_Access_Type (Id) and then Is_Base_Type (Id));\n       Set_Flag131 (Id, V);\n    end Set_No_Pool_Assigned;\n \n@@ -4749,13 +4748,13 @@ package body Einfo is\n \n    procedure Set_No_Strict_Aliasing (Id : E; V : B := True) is\n    begin\n-      pragma Assert (Is_Access_Type (Id) and then Id = Base_Type (Id));\n+      pragma Assert (Is_Access_Type (Id) and then Is_Base_Type (Id));\n       Set_Flag136 (Id, V);\n    end Set_No_Strict_Aliasing;\n \n    procedure Set_Non_Binary_Modulus (Id : E; V : B := True) is\n    begin\n-      pragma Assert (Is_Type (Id) and then Id = Base_Type (Id));\n+      pragma Assert (Is_Type (Id) and then Is_Base_Type (Id));\n       Set_Flag58 (Id, V);\n    end Set_Non_Binary_Modulus;\n \n@@ -4800,7 +4799,7 @@ package body Einfo is\n    procedure Set_OK_To_Reorder_Components (Id : E; V : B := True) is\n    begin\n       pragma Assert\n-        (Is_Record_Type (Id) and then Id = Base_Type (Id));\n+        (Is_Record_Type (Id) and then Is_Base_Type (Id));\n       Set_Flag239 (Id, V);\n    end Set_OK_To_Reorder_Components;\n \n@@ -4974,7 +4973,7 @@ package body Einfo is\n \n    procedure Set_Relative_Deadline_Variable (Id : E; V : E) is\n    begin\n-      pragma Assert (Is_Task_Type (Id) and then Id = Base_Type (Id));\n+      pragma Assert (Is_Task_Type (Id) and then Is_Base_Type (Id));\n       Set_Node26 (Id, V);\n    end Set_Relative_Deadline_Variable;\n \n@@ -5023,7 +5022,7 @@ package body Einfo is\n    procedure Set_Reverse_Bit_Order (Id : E; V : B := True) is\n    begin\n       pragma Assert\n-        (Is_Record_Type (Id) and then Id = Base_Type (Id));\n+        (Is_Record_Type (Id) and then Is_Base_Type (Id));\n       Set_Flag164 (Id, V);\n    end Set_Reverse_Bit_Order;\n \n@@ -5209,7 +5208,7 @@ package body Einfo is\n \n    procedure Set_Universal_Aliasing (Id : E; V : B := True) is\n    begin\n-      pragma Assert (Is_Type (Id) and then Id = Base_Type (Id));\n+      pragma Assert (Is_Type (Id) and then Is_Base_Type (Id));\n       Set_Flag216 (Id, V);\n    end Set_Universal_Aliasing;\n \n@@ -6167,6 +6166,15 @@ package body Einfo is\n       end if;\n    end Invariant_Procedure;\n \n+   ------------------\n+   -- Is_Base_Type --\n+   ------------------\n+\n+   function Is_Base_Type (Id : E) return Boolean is\n+   begin\n+      return Id = Base_Type (Id);\n+   end Is_Base_Type;\n+\n    ---------------------\n    -- Is_Boolean_Type --\n    ---------------------\n@@ -6977,7 +6985,7 @@ package body Einfo is\n    procedure Set_Component_Alignment (Id : E; V : C) is\n    begin\n       pragma Assert ((Is_Array_Type (Id) or else Is_Record_Type (Id))\n-                       and then Id = Base_Type (Id));\n+                       and then Is_Base_Type (Id));\n \n       case V is\n          when Calign_Default          =>\n@@ -7264,7 +7272,7 @@ package body Einfo is\n \n    begin\n       if (Is_Array_Type (Id) or else Is_Record_Type (Id))\n-        and then Id = Base_Type (Id)\n+        and then Is_Base_Type (Id)\n       then\n          Write_Str (Prefix);\n          Write_Str (\"Component_Alignment = \");"}, {"sha": "e69dcea5cac337554305472d29f4e42c088e6a98", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d347f5722f311a63908da11d492428af8f4563a4/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d347f5722f311a63908da11d492428af8f4563a4/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=d347f5722f311a63908da11d492428af8f4563a4", "patch": "@@ -1992,6 +1992,9 @@ package Einfo is\n --       Present in all type entities and in procedure entities. Set\n --       if a pragma Asynchronous applies to the entity.\n \n+--    Is_Base_Type (synthesized)\n+--       Applies to type and subtype entities. True if entity is a base type\n+\n --    Is_Bit_Packed_Array (Flag122) [implementation base type only]\n --       Present in all entities. This flag is set for a packed array type that\n --       is bit packed (i.e. the component size is known by the front end and\n@@ -6341,6 +6344,7 @@ package Einfo is\n    function Has_Private_Ancestor                (Id : E) return B;\n    function Has_Private_Declaration             (Id : E) return B;\n    function Implementation_Base_Type            (Id : E) return E;\n+   function Is_Base_Type                        (Id : E) return B;\n    function Is_Boolean_Type                     (Id : E) return B;\n    function Is_Constant_Object                  (Id : E) return B;\n    function Is_Discriminal                      (Id : E) return B;\n@@ -7976,6 +7980,7 @@ package Einfo is\n    --  things here which are small, but not of the canonical attribute\n    --  access/set format that can be handled by xeinfo.\n \n+   pragma Inline (Is_Base_Type);\n    pragma Inline (Is_Package_Or_Generic_Package);\n    pragma Inline (Is_Volatile);\n    pragma Inline (Is_Wrapper_Package);"}, {"sha": "cbd8a2eef3a870fcbc9ecfb508be11d4e32abbc8", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d347f5722f311a63908da11d492428af8f4563a4/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d347f5722f311a63908da11d492428af8f4563a4/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=d347f5722f311a63908da11d492428af8f4563a4", "patch": "@@ -2493,9 +2493,11 @@ package body Exp_Ch4 is\n          Opnd_Typ := Etype (Opnd);\n \n          --  The parent got messed up when we put the operands in a list,\n-         --  so now put back the proper parent for the saved operand.\n+         --  so now put back the proper parent for the saved operand, that\n+         --  is to say the concatenation node, to make sure that each operand\n+         --  is seen as a subexpression, e.g. if actions must be inserted.\n \n-         Set_Parent (Opnd, Parent (Cnode));\n+         Set_Parent (Opnd, Cnode);\n \n          --  Set will be True when we have setup one entry in the array\n "}, {"sha": "d4b5781a5e830db0c39503fab1dc21ec6cfff6e3", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d347f5722f311a63908da11d492428af8f4563a4/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d347f5722f311a63908da11d492428af8f4563a4/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=d347f5722f311a63908da11d492428af8f4563a4", "patch": "@@ -600,7 +600,7 @@ package body Exp_Ch6 is\n       if Is_Derived_Type (Typ)\n         and then not Is_Private_Type (Typ)\n         and then In_Open_Scopes (Scope (Etype (Typ)))\n-        and then Typ = Base_Type (Typ)\n+        and then Is_Base_Type (Typ)\n       then\n          --  Subp overrides an inherited private operation if there is an\n          --  inherited operation with a different name than Subp (see"}, {"sha": "ca36f14ad8764b27421fb7ed167f85ce50ca9507", "filename": "gcc/ada/exp_dbug.adb", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d347f5722f311a63908da11d492428af8f4563a4/gcc%2Fada%2Fexp_dbug.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d347f5722f311a63908da11d492428af8f4563a4/gcc%2Fada%2Fexp_dbug.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_dbug.adb?ref=d347f5722f311a63908da11d492428af8f4563a4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1996-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1996-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -529,8 +529,7 @@ package body Exp_Dbug is\n \n       --  Or if this is an enumeration base type\n \n-        or else (Is_Enumeration_Type (E)\n-                   and then E = Base_Type (E))\n+        or else (Is_Enumeration_Type (E) and then Is_Base_Type (E))\n \n       --  Or if this is a dummy type for a renaming\n "}, {"sha": "711795730f134653c147c1f9dfec8c4a8159f620", "filename": "gcc/ada/exp_dbug.ads", "status": "modified", "additions": 31, "deletions": 10, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d347f5722f311a63908da11d492428af8f4563a4/gcc%2Fada%2Fexp_dbug.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d347f5722f311a63908da11d492428af8f4563a4/gcc%2Fada%2Fexp_dbug.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_dbug.ads?ref=d347f5722f311a63908da11d492428af8f4563a4", "patch": "@@ -1323,9 +1323,8 @@ package Exp_Dbug is\n \n    --  where discrim is the unqualified name of the variant. This field name is\n    --  built by gigi (not by code in this unit). For Unchecked_Union record,\n-   --  this discriminant will not appear in the record, and the debugger must\n-   --  proceed accordingly (basically it can treat this case as it would a C\n-   --  union).\n+   --  this discriminant will not appear in the record (see Unchecked Unions,\n+   --  below).\n \n    --  The type corresponding to this field has a name that is obtained by\n    --  concatenating the type name with the above string and is similar to a C\n@@ -1338,7 +1337,7 @@ package Exp_Dbug is\n    --  The name of the union member is encoded to indicate the choices, and\n    --  is a string given by the following grammar:\n \n-   --    union_name ::= {choice} | others_choice\n+   --    member_name ::= {choice} | others_choice\n    --    choice ::= simple_choice | range_choice\n    --    simple_choice ::= S number\n    --    range_choice  ::= R number T number\n@@ -1377,12 +1376,34 @@ package Exp_Dbug is\n \n    --    V1 : Var;\n \n-   --  In this case, the type var is represented as a struct with three fields,\n-   --  the first two are \"disc\" and \"m\", representing the values of these\n-   --  record components.\n-\n-   --  The third field is a union of two types, with field names S1 and O. S1\n-   --  is a struct with fields \"r\" and \"s\", and O is a struct with fields \"t\".\n+   --  In this case, the type var is represented as a struct with three fields.\n+   --  The first two are \"disc\" and \"m\", representing the values of these\n+   --  record components. The third field is a union of two types, with field\n+   --  names S1 and O. S1 is a struct with fields \"r\" and \"s\", and O is a\n+   --  struct with field \"t\".\n+\n+   ----------------------\n+   -- Unchecked Unions --\n+   ----------------------\n+\n+   --  The encoding for variant records changes somewhat under the influence\n+   --  of a \"pragma Unchecked_Union\" clause:\n+\n+   --     1. The discriminant will not be present in the record, although its\n+   --        name is still used in the encodings.\n+   --     2. Variants containing a single component named \"x\" of type \"T\" may\n+   --        be encoded, as in ordinary C unions, as a single field of the\n+   --        enclosing union type named \"x\" of type \"T\", dispensing with the\n+   --        enclosing struct. In this case, of course, the discriminant values\n+   --        corresponding to the variant are unavailable. As for normal\n+   --        variants, the field name \"x\" may be suffixed with ___XVL if it\n+   --        has dynamic size.\n+\n+   --  For example, the type Var in the preceding section, if followed by\n+   --  \"pragma Unchecked_Union (Var);\" may be encoded as a struct with two\n+   --  fields. The first is \"m\". The second field is a union of two types,\n+   --  with field names S1 and \"t\". As before, S1 is a struct with fields\n+   --  \"r\" and \"s\". \"t\" is a field of type Integer.\n \n    ------------------------------------------------\n    -- Subprograms for Handling Variant Encodings --"}, {"sha": "0395282f6048e79f0aca680dd4e22096826235d5", "filename": "gcc/ada/exp_disp.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d347f5722f311a63908da11d492428af8f4563a4/gcc%2Fada%2Fexp_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d347f5722f311a63908da11d492428af8f4563a4/gcc%2Fada%2Fexp_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_disp.adb?ref=d347f5722f311a63908da11d492428af8f4563a4", "patch": "@@ -7359,7 +7359,7 @@ package body Exp_Disp is\n                         (Nkind (Parent (Typ)) = N_Private_Extension_Declaration\n                           and then Is_Generic_Type (Typ)))\n            and then In_Open_Scopes (Scope (Etype (Typ)))\n-           and then Typ = Base_Type (Typ)\n+           and then Is_Base_Type (Typ)\n          then\n             Handle_Inherited_Private_Subprograms (Typ);\n          end if;"}, {"sha": "f7b40527395d813ebbc25eee213ed37a699f880e", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d347f5722f311a63908da11d492428af8f4563a4/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d347f5722f311a63908da11d492428af8f4563a4/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=d347f5722f311a63908da11d492428af8f4563a4", "patch": "@@ -2062,9 +2062,7 @@ package body Freeze is\n \n          --  Set OK_To_Reorder_Components depending on debug flags\n \n-         if Rec = Base_Type (Rec)\n-           and then Convention (Rec) = Convention_Ada\n-         then\n+         if Is_Base_Type (Rec) and then Convention (Rec) = Convention_Ada then\n             if (Has_Discriminants (Rec) and then Debug_Flag_Dot_V)\n                   or else\n                (not Has_Discriminants (Rec) and then Debug_Flag_Dot_R)\n@@ -3818,9 +3816,7 @@ package body Freeze is\n             --  these till the freeze-point since we need the small and range\n             --  values. We only do these checks for base types\n \n-            if Is_Ordinary_Fixed_Point_Type (E)\n-              and then E = Base_Type (E)\n-            then\n+            if Is_Ordinary_Fixed_Point_Type (E) and then Is_Base_Type (E) then\n                if Small_Value (E) < Ureal_2_M_80 then\n                   Error_Msg_Name_1 := Name_Small;\n                   Error_Msg_N\n@@ -3865,7 +3861,7 @@ package body Freeze is\n             --  only to base types.\n \n             if Present (Default_Pool)\n-              and then E = Base_Type (E)\n+              and then Is_Base_Type (E)\n               and then not Has_Storage_Size_Clause (E)\n               and then No (Associated_Storage_Pool (E))\n             then"}, {"sha": "81b724103f457a3b29526d64eb7d2b7b214d131a", "filename": "gcc/ada/lib-xref.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d347f5722f311a63908da11d492428af8f4563a4/gcc%2Fada%2Flib-xref.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d347f5722f311a63908da11d492428af8f4563a4/gcc%2Fada%2Flib-xref.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-xref.adb?ref=d347f5722f311a63908da11d492428af8f4563a4", "patch": "@@ -1172,7 +1172,7 @@ package body Lib.Xref is\n \n             if Is_Type (Ent)\n               and then Is_Tagged_Type (Ent)\n-              and then Ent = Base_Type (Ent)\n+              and then Is_Base_Type (Ent)\n               and then In_Extended_Main_Source_Unit (Ent)\n             then\n                Generate_Prim_Op_References (Ent);\n@@ -1281,7 +1281,7 @@ package body Lib.Xref is\n             if Is_Type (Ent)\n               and then Is_Tagged_Type (Ent)\n               and then Is_Derived_Type (Ent)\n-              and then Ent = Base_Type (Ent)\n+              and then Is_Base_Type (Ent)\n               and then In_Extended_Main_Source_Unit (Ent)\n             then\n                declare"}, {"sha": "813ede844fb514c13e433becf3e1208af2a106a7", "filename": "gcc/ada/sem_aux.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d347f5722f311a63908da11d492428af8f4563a4/gcc%2Fada%2Fsem_aux.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d347f5722f311a63908da11d492428af8f4563a4/gcc%2Fada%2Fsem_aux.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aux.adb?ref=d347f5722f311a63908da11d492428af8f4563a4", "patch": "@@ -48,7 +48,7 @@ package body Sem_Aux is\n       --  If this is first subtype, or is a base type, then there is no\n       --  ancestor subtype, so we return Empty to indicate this fact.\n \n-      if Is_First_Subtype (Typ) or else Typ = Base_Type (Typ) then\n+      if Is_First_Subtype (Typ) or else Is_Base_Type (Typ) then\n          return Empty;\n       end if;\n "}, {"sha": "cd66772d40b639a9a160a52696df1528f3fdec6b", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d347f5722f311a63908da11d492428af8f4563a4/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d347f5722f311a63908da11d492428af8f4563a4/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=d347f5722f311a63908da11d492428af8f4563a4", "patch": "@@ -5501,6 +5501,7 @@ package body Sem_Ch12 is\n            and then Is_Private_Type (Designated_Type (T))\n            and then not Has_Private_View (N)\n            and then Present (Full_View (Designated_Type (T)))\n+           and then Used_As_Generic_Actual (T)\n          then\n             Switch_View (Designated_Type (T));\n "}, {"sha": "f208be484b1919ae9701d3250fffbfb3a246e3b7", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d347f5722f311a63908da11d492428af8f4563a4/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d347f5722f311a63908da11d492428af8f4563a4/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=d347f5722f311a63908da11d492428af8f4563a4", "patch": "@@ -11716,7 +11716,7 @@ package body Sem_Ch3 is\n          Set_Direct_Primitive_Operations (Full,\n            Direct_Primitive_Operations (Priv));\n \n-         if Priv = Base_Type (Priv) then\n+         if Is_Base_Type (Priv) then\n             Set_Class_Wide_Type      (Full, Class_Wide_Type         (Priv));\n          end if;\n       end if;"}, {"sha": "3c13d991466fca43a83922f36ca7b0f7aec6939a", "filename": "gcc/ada/sem_ch7.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d347f5722f311a63908da11d492428af8f4563a4/gcc%2Fada%2Fsem_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d347f5722f311a63908da11d492428af8f4563a4/gcc%2Fada%2Fsem_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch7.adb?ref=d347f5722f311a63908da11d492428af8f4563a4", "patch": "@@ -1500,7 +1500,7 @@ package body Sem_Ch7 is\n                  (Nkind (Parent (E)) = N_Private_Extension_Declaration\n                    and then Is_Generic_Type (E)))\n            and then In_Open_Scopes (Scope (Etype (E)))\n-           and then E = Base_Type (E)\n+           and then Is_Base_Type (E)\n          then\n             if Is_Tagged_Type (E) then\n                Op_List := Primitive_Operations (E);\n@@ -2010,7 +2010,7 @@ package body Sem_Ch7 is\n       ------------------------------\n \n       procedure Preserve_Full_Attributes (Priv, Full : Entity_Id) is\n-         Priv_Is_Base_Type : constant Boolean := Priv = Base_Type (Priv);\n+         Priv_Is_Base_Type : constant Boolean := Is_Base_Type (Priv);\n \n       begin\n          Set_Size_Info (Priv, (Full));"}, {"sha": "2abee094488f04956c2b3a068f7b629c74c54250", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 11, "deletions": 15, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d347f5722f311a63908da11d492428af8f4563a4/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d347f5722f311a63908da11d492428af8f4563a4/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=d347f5722f311a63908da11d492428af8f4563a4", "patch": "@@ -6001,9 +6001,8 @@ package body Sem_Ch8 is\n       while Present (Id)\n         and then Id /= Priv_Id\n       loop\n-         if Is_Standard_Character_Type (Id)\n-           and then Id = Base_Type (Id)\n-         then\n+         if Is_Standard_Character_Type (Id) and then Is_Base_Type (Id) then\n+\n             --  We replace the node with the literal itself, resolve as a\n             --  character, and set the type correctly.\n \n@@ -6164,9 +6163,7 @@ package body Sem_Ch8 is\n \n          when Name_Op_And | Name_Op_Not | Name_Op_Or  | Name_Op_Xor =>\n             while Id  /= Priv_Id loop\n-               if Valid_Boolean_Arg (Id)\n-                 and then Id = Base_Type (Id)\n-               then\n+               if Valid_Boolean_Arg (Id) and then Is_Base_Type (Id) then\n                   Add_Implicit_Operator (Id);\n                   return True;\n                end if;\n@@ -6180,7 +6177,7 @@ package body Sem_Ch8 is\n             while Id  /= Priv_Id loop\n                if Is_Type (Id)\n                  and then not Is_Limited_Type (Id)\n-                 and then Id = Base_Type (Id)\n+                 and then Is_Base_Type (Id)\n                then\n                   Add_Implicit_Operator (Standard_Boolean, Id);\n                   return True;\n@@ -6194,9 +6191,9 @@ package body Sem_Ch8 is\n          when Name_Op_Lt | Name_Op_Le | Name_Op_Gt | Name_Op_Ge =>\n             while Id  /= Priv_Id loop\n                if (Is_Scalar_Type (Id)\n-                 or else (Is_Array_Type (Id)\n-                           and then Is_Scalar_Type (Component_Type (Id))))\n-                 and then Id = Base_Type (Id)\n+                    or else (Is_Array_Type (Id)\n+                              and then Is_Scalar_Type (Component_Type (Id))))\n+                 and then Is_Base_Type (Id)\n                then\n                   Add_Implicit_Operator (Standard_Boolean, Id);\n                   return True;\n@@ -6216,9 +6213,7 @@ package body Sem_Ch8 is\n               Name_Op_Divide   |\n               Name_Op_Expon    =>\n             while Id  /= Priv_Id loop\n-               if Is_Numeric_Type (Id)\n-                 and then Id = Base_Type (Id)\n-               then\n+               if Is_Numeric_Type (Id) and then Is_Base_Type (Id) then\n                   Add_Implicit_Operator (Id);\n                   return True;\n                end if;\n@@ -6230,8 +6225,9 @@ package body Sem_Ch8 is\n \n          when Name_Op_Concat =>\n             while Id  /= Priv_Id loop\n-               if Is_Array_Type (Id) and then Number_Dimensions (Id) = 1\n-                 and then Id = Base_Type (Id)\n+               if Is_Array_Type (Id)\n+                 and then Number_Dimensions (Id) = 1\n+                 and then Is_Base_Type (Id)\n                then\n                   Add_Implicit_Operator (Id);\n                   return True;"}, {"sha": "0358ade36160b526aa7ffb6186d9c27eb0634c66", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d347f5722f311a63908da11d492428af8f4563a4/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d347f5722f311a63908da11d492428af8f4563a4/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=d347f5722f311a63908da11d492428af8f4563a4", "patch": "@@ -819,8 +819,10 @@ package body Sem_Res is\n \n          if Nkind_In (P, N_Or_Else,\n                          N_And_Then,\n-                         N_If_Statement,\n-                         N_Case_Statement)\n+                         N_Case_Expression,\n+                         N_Case_Statement,\n+                         N_Conditional_Expression,\n+                         N_If_Statement)\n          then\n             return False;\n \n@@ -5277,7 +5279,7 @@ package body Sem_Res is\n            and then Check_Infinite_Recursion (N)\n          then\n             --  Here we detected and flagged an infinite recursion, so we do\n-            --  not need to test the case below for further warnings. Also if\n+            --  not need to test the case below for further warnings. Also, if\n             --  we now have a raise SE node, we are all done.\n \n             if Nkind (N) = N_Raise_Storage_Error then\n@@ -10095,7 +10097,7 @@ package body Sem_Res is\n          --  this situation can arise in source code.\n \n          elsif In_Instance or else In_Inlined_Body then\n-               return True;\n+            return True;\n \n          --  Otherwise we need the conversion check\n "}, {"sha": "6962018dea7ea1c605105e821413a6d6149ed1ab", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d347f5722f311a63908da11d492428af8f4563a4/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d347f5722f311a63908da11d492428af8f4563a4/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=d347f5722f311a63908da11d492428af8f4563a4", "patch": "@@ -9648,6 +9648,29 @@ package body Sem_Util is\n \n                if Modification_Comes_From_Source then\n                   Generate_Reference (Ent, Exp, 'm');\n+\n+                  --  If the target of the assignment is the bound variable\n+                  --  in an iterator, indicate that the corresponding array\n+                  --  or container is also modified.\n+\n+                  if Ada_Version >= Ada_2012\n+                    and then\n+                      Nkind (Parent (Ent)) = N_Iterator_Specification\n+                  then\n+                     declare\n+                        Domain : constant Node_Id := Name (Parent (Ent));\n+\n+                     begin\n+                        --  TBD : in the full version of the construct, the\n+                        --  domain of iteration can be given by an expression.\n+\n+                        if Is_Entity_Name (Domain) then\n+                           Generate_Reference      (Entity (Domain), Exp, 'm');\n+                           Set_Is_True_Constant    (Entity (Domain), False);\n+                           Set_Never_Set_In_Source (Entity (Domain), False);\n+                        end if;\n+                     end;\n+                  end if;\n                end if;\n \n                Check_Nested_Access (Ent);"}, {"sha": "295b25a1f6ce08b1cf473589a66f35f4f46074c5", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d347f5722f311a63908da11d492428af8f4563a4/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d347f5722f311a63908da11d492428af8f4563a4/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=d347f5722f311a63908da11d492428af8f4563a4", "patch": "@@ -100,10 +100,10 @@ package Sinfo is\n \n    --  Finally, four utility programs must be run:\n \n-   --    Run CSinfo to check that you have made the changes consistently. It\n-   --     checks most of the rules given above, with clear error messages. This\n-   --     utility reads sinfo.ads and sinfo.adb and generates a report to\n-   --     standard output.\n+   --    (Optional.) Run CSinfo to check that you have made the changes\n+   --     consistently. It checks most of the rules given above. This utility\n+   --     reads sinfo.ads and sinfo.adb and generates a report to standard\n+   --     output. This step is optional because XSinfo runs CSinfo.\n \n    --    Run XSinfo to create sinfo.h, the corresponding C header. This\n    --     utility reads sinfo.ads and generates sinfo.h. Note that it does\n@@ -120,8 +120,8 @@ package Sinfo is\n    --     spec of the Nmake package which contains functions for constructing\n    --     nodes.\n \n-   --  All of the above steps except CSinfo are done automatically by the\n-   --  build scripts when you do a full bootstrap.\n+   --  The above steps are done automatically by the build scripts when you do\n+   --  a full bootstrap.\n \n    --  Note: sometime we could write a utility that actually generated the body\n    --  of sinfo from the spec instead of simply checking it, since, as noted"}, {"sha": "ba9ded9d5cc1892d9e332798fb46e783aafca1cf", "filename": "gcc/ada/xeinfo.adb", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d347f5722f311a63908da11d492428af8f4563a4/gcc%2Fada%2Fxeinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d347f5722f311a63908da11d492428af8f4563a4/gcc%2Fada%2Fxeinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fxeinfo.adb?ref=d347f5722f311a63908da11d492428af8f4563a4", "patch": "@@ -57,6 +57,8 @@ with GNAT.Spitbol;                  use GNAT.Spitbol;\n with GNAT.Spitbol.Patterns;         use GNAT.Spitbol.Patterns;\n with GNAT.Spitbol.Table_Boolean;    use GNAT.Spitbol.Table_Boolean;\n \n+with CEinfo;\n+\n procedure XEinfo is\n \n    package TB renames GNAT.Spitbol.Table_Boolean;\n@@ -241,6 +243,11 @@ procedure XEinfo is\n --  Start of processing for XEinfo\n \n begin\n+   --  First run CEinfo to check for errors. Note that CEinfo is also a\n+   --  stand-alone program that can be run separately.\n+\n+   CEinfo;\n+\n    Anchored_Mode := True;\n \n    if Argument_Count > 0 then\n@@ -489,6 +496,9 @@ begin\n      (Ofile,\n       \"/* End of einfo.h (C version of Einfo package specification) */\");\n \n+   Close (InF);\n+   Close (Ofile);\n+\n exception\n    when Err =>\n       Put_Line (Standard_Error, Lineno & \".  \" & Line);"}, {"sha": "e3917a639b882fe41eb751c2985043293ff2419f", "filename": "gcc/ada/xsinfo.adb", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d347f5722f311a63908da11d492428af8f4563a4/gcc%2Fada%2Fxsinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d347f5722f311a63908da11d492428af8f4563a4/gcc%2Fada%2Fxsinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fxsinfo.adb?ref=d347f5722f311a63908da11d492428af8f4563a4", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2008, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -35,10 +35,6 @@\n \n --       sinfo.h       Corresponding c header file\n \n---  Note: this program assumes that sinfo.ads has passed the error checks\n---  which are carried out by the CSinfo utility, so it does not duplicate\n---  these checks and assumes the source is correct.\n-\n --  An optional argument allows the specification of an output file name to\n --  override the default sinfo.h file name for the generated output file.\n \n@@ -50,6 +46,8 @@ with Ada.Text_IO;                   use Ada.Text_IO;\n with GNAT.Spitbol;                  use GNAT.Spitbol;\n with GNAT.Spitbol.Patterns;         use GNAT.Spitbol.Patterns;\n \n+with CSinfo;\n+\n procedure XSinfo is\n \n    Done : exception;\n@@ -115,6 +113,11 @@ procedure XSinfo is\n --  Start of processing for XSinfo\n \n begin\n+   --  First run CSinfo to check for errors. Note that CSinfo is also a\n+   --  stand-alone program that can be run separately.\n+\n+   CSinfo;\n+\n    Set_Exit_Status (1);\n    Anchored_Mode := True;\n \n@@ -238,10 +241,13 @@ begin\n \n       Getline;\n    end loop;\n+   --  Can't get here; above loop only left via raise\n \n exception\n    when Done =>\n+      Close (InS);\n       Put_Line (Ofile, \"\");\n+      Close (Ofile);\n       Set_Exit_Status (0);\n \n end XSinfo;"}]}