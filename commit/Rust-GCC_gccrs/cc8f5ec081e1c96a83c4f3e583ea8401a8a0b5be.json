{"sha": "cc8f5ec081e1c96a83c4f3e583ea8401a8a0b5be", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2M4ZjVlYzA4MWUxYzk2YTgzYzRmM2U1ODNlYTg0MDFhOGEwYjViZQ==", "commit": {"author": {"name": "Geoff Keating", "email": "geoffk@cygnus.com", "date": "1999-09-24T02:01:08Z"}, "committer": {"name": "Geoffrey Keating", "email": "geoffk@gcc.gnu.org", "date": "1999-09-24T02:01:08Z"}, "message": "elf.h (ASM_OUTPUT_ALIGNED_BSS): Put the symbol in .sbss if appropriate.\n\n* config/mips/elf.h (ASM_OUTPUT_ALIGNED_BSS): Put the symbol\nin .sbss if appropriate.\n(EXTRA_SECTION_FUNCTIONS): Add sbss.\n(SBSS_SECTION_ASM_OP): New macro.\n* config/mips/linux.h (EXTRA_SECTION_FUNCTIONS): Add sbss.\n(EXTRA_SECTIONS): Add in_sbss.\n* config/mips/mips.h: Prototype sbss_section.\n\nFrom-SVN: r29648", "tree": {"sha": "27638ab605e82713baa725be5b8b37c2a31bf5c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/27638ab605e82713baa725be5b8b37c2a31bf5c4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cc8f5ec081e1c96a83c4f3e583ea8401a8a0b5be", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc8f5ec081e1c96a83c4f3e583ea8401a8a0b5be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc8f5ec081e1c96a83c4f3e583ea8401a8a0b5be", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc8f5ec081e1c96a83c4f3e583ea8401a8a0b5be/comments", "author": null, "committer": null, "parents": [{"sha": "8d54f0f03b4dca70d5de602cc72155c74479b6b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d54f0f03b4dca70d5de602cc72155c74479b6b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d54f0f03b4dca70d5de602cc72155c74479b6b7"}], "stats": {"total": 31, "additions": 28, "deletions": 3}, "files": [{"sha": "35dd192afa008e8593983452c5740057cbd94224", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc8f5ec081e1c96a83c4f3e583ea8401a8a0b5be/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc8f5ec081e1c96a83c4f3e583ea8401a8a0b5be/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cc8f5ec081e1c96a83c4f3e583ea8401a8a0b5be", "patch": "@@ -1,3 +1,13 @@\n+Fri Sep 24 11:57:06 1999  Geoffrey Keating  <geoffk@cygnus.com>\n+\n+\t* config/mips/elf.h (ASM_OUTPUT_ALIGNED_BSS): Put the symbol\n+\tin .sbss if appropriate.\n+\t(EXTRA_SECTION_FUNCTIONS): Add sbss.\n+\t(SBSS_SECTION_ASM_OP): New macro.\n+\t* config/mips/linux.h (EXTRA_SECTION_FUNCTIONS): Add sbss.\n+\t(EXTRA_SECTIONS): Add in_sbss.\n+\t* config/mips/mips.h: Prototype sbss_section.\n+\n Thu Sep 23 18:18:55 1999  Mark Mitchell  <mark@codesourcery.com>\n \n \t* stmt.c (expand_start_bindings): Don't allow cleanup isntructions"}, {"sha": "6fbc432afe071154683c39c688288951eb7d4b6f", "filename": "gcc/config/mips/elf.h", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc8f5ec081e1c96a83c4f3e583ea8401a8a0b5be/gcc%2Fconfig%2Fmips%2Felf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc8f5ec081e1c96a83c4f3e583ea8401a8a0b5be/gcc%2Fconfig%2Fmips%2Felf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Felf.h?ref=cc8f5ec081e1c96a83c4f3e583ea8401a8a0b5be", "patch": "@@ -101,6 +101,8 @@ do {\t\t\t\t\t\t\t\t\\\n #define BSS_SECTION_ASM_OP\t\".section\\t.bss\"\n #endif\n \n+#define SBSS_SECTION_ASM_OP\t\"\\t.section .sbss\"\n+\n /* Like `ASM_OUTPUT_BSS' except takes the required alignment as a\n    separate, explicit argument.  If you define this macro, it is used\n    in place of `ASM_OUTPUT_BSS', and gives you more flexibility in\n@@ -111,7 +113,17 @@ do {\t\t\t\t\t\t\t\t\\\n    `varasm.c' when defining this macro. */\n #ifndef ASM_OUTPUT_ALIGNED_BSS\n #define ASM_OUTPUT_ALIGNED_BSS(FILE, DECL, NAME, SIZE, ALIGN) \\\n-  asm_output_aligned_bss (FILE, DECL, NAME, SIZE, ALIGN)\n+do {\t\t\t\t\t\t\t\t\t\\\n+  ASM_GLOBALIZE_LABEL (FILE, NAME);\t\t\t\t\t\\\n+  if (SIZE > 0 && SIZE <= mips_section_threshold)\t\t\t\\\n+    sbss_section ();\t\t\t\t\t\t\t\\\n+  else\t\t\t\t\t\t\t\t\t\\\n+    bss_section ();\t\t\t\t\t\t\t\\\n+  ASM_OUTPUT_ALIGN (FILE, floor_log2 (ALIGN / BITS_PER_UNIT));\t\t\\\n+  last_assemble_variable_decl = DECL;\t\t\t\t\t\\\n+  ASM_DECLARE_OBJECT_NAME (FILE, NAME, DECL);\t\t\t\t\\\n+  ASM_OUTPUT_SKIP (FILE, SIZE ? SIZE : 1);\t\t\t\t\\\n+} while (0)\n #endif\n \n /* These macros generate the special .type and .size directives which\n@@ -281,7 +293,7 @@ do {\t\t\t\t\t\t\t\t\t   \\\n /* A list of other sections which the compiler might be \"in\" at any\n    given time.  */\n #undef EXTRA_SECTIONS\n-#define EXTRA_SECTIONS in_sdata, in_rdata, in_ctors, in_dtors\n+#define EXTRA_SECTIONS in_sdata, in_sbss, in_rdata, in_ctors, in_dtors\n  \n #define INVOKE__main\n #define NAME__MAIN \"__gccmain\"\n@@ -290,6 +302,7 @@ do {\t\t\t\t\t\t\t\t\t   \\\n #undef EXTRA_SECTION_FUNCTIONS\n #define EXTRA_SECTION_FUNCTIONS                                         \\\n   SECTION_FUNCTION_TEMPLATE(sdata_section, in_sdata, SDATA_SECTION_ASM_OP) \\\n+  SECTION_FUNCTION_TEMPLATE(sbss_section, in_sbss, SBSS_SECTION_ASM_OP) \\\n   SECTION_FUNCTION_TEMPLATE(rdata_section, in_rdata, RDATA_SECTION_ASM_OP) \\\n   SECTION_FUNCTION_TEMPLATE(ctors_section, in_ctors, CTORS_SECTION_ASM_OP) \\\n   SECTION_FUNCTION_TEMPLATE(dtors_section, in_dtors, DTORS_SECTION_ASM_OP)"}, {"sha": "2a780fe201601ed8f79ae8d9c1152fd122d83b9d", "filename": "gcc/config/mips/linux.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc8f5ec081e1c96a83c4f3e583ea8401a8a0b5be/gcc%2Fconfig%2Fmips%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc8f5ec081e1c96a83c4f3e583ea8401a8a0b5be/gcc%2Fconfig%2Fmips%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Flinux.h?ref=cc8f5ec081e1c96a83c4f3e583ea8401a8a0b5be", "patch": "@@ -82,7 +82,7 @@ Boston, MA 02111-1307, USA.  */\n #undef DTORS_SECTION_ASM_OP\n \n #undef EXTRA_SECTIONS\n-#define EXTRA_SECTIONS in_sdata, in_rdata\n+#define EXTRA_SECTIONS in_sdata, in_sbss, in_rdata\n \n #undef INVOKE__main\n #undef NAME__MAIN\n@@ -91,6 +91,7 @@ Boston, MA 02111-1307, USA.  */\n #undef EXTRA_SECTION_FUNCTIONS\n #define EXTRA_SECTION_FUNCTIONS                                         \\\n   SECTION_FUNCTION_TEMPLATE(sdata_section, in_sdata, SDATA_SECTION_ASM_OP) \\\n+  SECTION_FUNCTION_TEMPLATE(sbss_section, in_sbss, SBSS_SECTION_ASM_OP) \\\n   SECTION_FUNCTION_TEMPLATE(rdata_section, in_rdata, RDATA_SECTION_ASM_OP)\n \n #undef ASM_OUTPUT_CONSTRUCTOR"}, {"sha": "c826d398261bf7d0fe7a037b33f2f4dcd4fa9889", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc8f5ec081e1c96a83c4f3e583ea8401a8a0b5be/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc8f5ec081e1c96a83c4f3e583ea8401a8a0b5be/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=cc8f5ec081e1c96a83c4f3e583ea8401a8a0b5be", "patch": "@@ -163,6 +163,7 @@ extern struct rtx_def *mips16_gp_pseudo_rtx; /* psuedo reg holding $gp */\n /* Functions to change what output section we are using.  */\n extern void\t\trdata_section PARAMS ((void));\n extern void\t\tsdata_section PARAMS ((void));\n+extern void\t\tsbss_section PARAMS ((void));\n \n /* Stubs for half-pic support if not OSF/1 reference platform.  */\n "}]}