{"sha": "bdf3e90e9536788b770247ebd64cc1c5d66fd5ed", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmRmM2U5MGU5NTM2Nzg4Yjc3MDI0N2ViZDY0Y2MxYzVkNjZmZDVlZA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-04-16T13:20:17Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-04-16T13:20:17Z"}, "message": "(LIB_SPEC): Deleted.\n\n(BSS_SECTION_ASM_OP, ASM_OUTPUT_ALIGNED_BSS): Define.\n\nFrom-SVN: r11810", "tree": {"sha": "2aac07c7c2d0128299479787b585f2ca018b046a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2aac07c7c2d0128299479787b585f2ca018b046a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bdf3e90e9536788b770247ebd64cc1c5d66fd5ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bdf3e90e9536788b770247ebd64cc1c5d66fd5ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bdf3e90e9536788b770247ebd64cc1c5d66fd5ed", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bdf3e90e9536788b770247ebd64cc1c5d66fd5ed/comments", "author": null, "committer": null, "parents": [{"sha": "9cb30fc28953eb4097c8ba7733ffaf5f7ad9af0d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9cb30fc28953eb4097c8ba7733ffaf5f7ad9af0d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9cb30fc28953eb4097c8ba7733ffaf5f7ad9af0d"}], "stats": {"total": 29, "additions": 14, "deletions": 15}, "files": [{"sha": "80194114ba6818b6f2d8836f05f1c3c12500bdaf", "filename": "gcc/config/m68k/linux.h", "status": "modified", "additions": 14, "deletions": 15, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bdf3e90e9536788b770247ebd64cc1c5d66fd5ed/gcc%2Fconfig%2Fm68k%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bdf3e90e9536788b770247ebd64cc1c5d66fd5ed/gcc%2Fconfig%2Fm68k%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Flinux.h?ref=bdf3e90e9536788b770247ebd64cc1c5d66fd5ed", "patch": "@@ -112,21 +112,6 @@ Boston, MA 02111-1307, USA.  */\n   \"%{fPIC:-D__PIC__ -D__pic__} %{fpic:-D__PIC__ -D__pic__} %{m68881:-D__HAVE_68881__} %{posix:-D_POSIX_SOURCE}\"\n #endif\n \n-#undef\tLIB_SPEC\n-#if 1\n-/* We no longer link with libc_p.a or libg.a by default.  If you want\n-   to profile or debug the Linux C library, please add -lc_p or -ggdb\n-   to LDFLAGS at the link time, respectively.  */\n-#define LIB_SPEC \\\n-  \"%{!shared:%{!symbolic: %{mieee-fp:-lieee} %{p:-lgmon} %{pg:-lgmon} \\\n-     %{!ggdb:-lc} %{ggdb:-lg}}}\"\n-#else\n-#define LIB_SPEC \\\n-  \"%{!shared:%{!symbolic: \\\n-     %{mieee-fp:-lieee} %{p:-lgmon -lc_p} %{pg:-lgmon -lc_p} \\\n-     %{!p:%{!pg:%{!g*:-lc} %{g*:-lg}}}}}\"\n-#endif\n-\n /* Provide a LINK_SPEC appropriate for Linux.  Here we provide support\n    for the special GCC options -static and -shared, which allow us to\n    link things in one of these three modes by applying the appropriate\n@@ -183,6 +168,20 @@ Boston, MA 02111-1307, USA.  */\n   if ((LOG) > 0)\t\t\t\t\t\t\\\n     fprintf ((FILE), \"\\t%s \\t%u\\n\", ALIGN_ASM_OP, 1 << (LOG));\n \n+/* If defined, a C expression whose value is a string containing the\n+   assembler operation to identify the following data as uninitialized global\n+   data.  */\n+\n+#define BSS_SECTION_ASM_OP \".section\\t.bss\"\n+\n+/* A C statement (sans semicolon) to output to the stdio stream\n+   FILE the assembler definition of an uninitialized global label named\n+   NAME whose size is SIZE bytes and alignment is ALIGN bytes.\n+   Try to use asm_output_aligned_bss to implement this macro.  */\n+\n+#define ASM_OUTPUT_ALIGNED_BSS(FILE, NAME, SIZE, ALIGN) \\\n+  asm_output_aligned_bss (FILE, NAME, SIZE, ALIGN)\n+\n /* Output assembler code to FILE to increment profiler label # LABELNO\n    for profiling a function entry.  */\n "}]}