{"sha": "cf1c49cb5648bacda0d9a01dce9e448f87f72ab7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2YxYzQ5Y2I1NjQ4YmFjZGEwZDlhMDFkY2U5ZTQ0OGY4N2Y3MmFiNw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-03-27T00:20:31Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-03-27T00:20:31Z"}, "message": "Use STDIO_PROTO for prototypes with FILE.\n\nFrom-SVN: r3888", "tree": {"sha": "dbcf977ebe4fca08a6f6a5615fc97de89417373c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dbcf977ebe4fca08a6f6a5615fc97de89417373c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cf1c49cb5648bacda0d9a01dce9e448f87f72ab7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf1c49cb5648bacda0d9a01dce9e448f87f72ab7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf1c49cb5648bacda0d9a01dce9e448f87f72ab7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf1c49cb5648bacda0d9a01dce9e448f87f72ab7/comments", "author": null, "committer": null, "parents": [{"sha": "d7f6896adbf4304035aba74a1c0778d1e6fcaade", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7f6896adbf4304035aba74a1c0778d1e6fcaade", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7f6896adbf4304035aba74a1c0778d1e6fcaade"}], "stats": {"total": 36, "additions": 21, "deletions": 15}, "files": [{"sha": "030785134e435c78ef93b8939d14c8e6b1f3afb1", "filename": "gcc/c-tree.h", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf1c49cb5648bacda0d9a01dce9e448f87f72ab7/gcc%2Fc-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf1c49cb5648bacda0d9a01dce9e448f87f72ab7/gcc%2Fc-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-tree.h?ref=cf1c49cb5648bacda0d9a01dce9e448f87f72ab7", "patch": "@@ -19,9 +19,13 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n \n #ifndef _C_TREE_H\n #define _C_TREE_H\n-#if 0 /* I fear this may cause failures on some systems,\n-\t so I turned off the few prototypes that needed it -- rms. */\n-#include <stdio.h>\n+\n+#ifndef STDIO_PROTO\n+#ifdef BUFSIZ\n+#define STDIO_PROTO(ARGS) PROTO(ARGS)\n+#else\n+#define STDIO_PROTO(ARGS) ()\n+#endif\n #endif\n \n /* Language-dependent contents of an identifier.  */\n@@ -168,10 +172,7 @@ extern void constant_expression_warning\t\tPROTO((tree));\n extern void overflow_warning\t\t\tPROTO((tree));\n extern void unsigned_conversion_warning\t\tPROTO((tree, tree));\n /* Read the rest of the current #-directive line.  */\n-#if 0\n-extern char *get_directive_line                 PROTO((FILE *));\n-#endif\n-extern char *get_directive_line ();\n+extern char *get_directive_line                 STDIO_PROTO((FILE *));\n /* Subroutine of build_binary_op, used for comparison operations.\n    See if the operands have both been converted from subword integer types\n    and, if so, perhaps change them both back to their original type.  */\n@@ -277,9 +278,8 @@ extern void pop_c_function_context              PROTO((void));\n extern void pop_label_level                     PROTO((void));\n extern tree poplevel                            PROTO((int, int, int));\n extern void print_lang_decl                     PROTO((void));\n-#if 0\n-extern void print_lang_identifier               PROTO((FILE *, tree, int));\n-#endif\n+extern void print_lang_identifier               STDIO_PROTO((FILE *, tree,\n+\t\t\t\t\t\t\t     int));\n extern void print_lang_type                     PROTO((void));\n extern void push_c_function_context             PROTO((void));\n extern void push_label_level                    PROTO((void));"}, {"sha": "7e5d03e74b0abb07401bb9aa318f0b696ea79e01", "filename": "gcc/output.h", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf1c49cb5648bacda0d9a01dce9e448f87f72ab7/gcc%2Foutput.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf1c49cb5648bacda0d9a01dce9e448f87f72ab7/gcc%2Foutput.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foutput.h?ref=cf1c49cb5648bacda0d9a01dce9e448f87f72ab7", "patch": "@@ -18,6 +18,14 @@ You should have received a copy of the GNU General Public License\n along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n \n+#ifndef STDIO_PROTO\n+#ifdef BUFSIZ\n+#define STDIO_PROTO(ARGS) PROTO(ARGS)\n+#else\n+#define STDIO_PROTO(ARGS) ()\n+#endif\n+#endif\n+\n /* Output a string of assembler code, substituting insn operands.\n    Defined in final.c.  */\n extern void output_asm_insn PROTO((char *, rtx *));\n@@ -26,15 +34,13 @@ extern void output_asm_insn PROTO((char *, rtx *));\n    and fixed syntactic prefixes.  */\n extern void asm_fprintf ();\n \n-#ifdef FILE\n /* Print an integer constant expression in assembler syntax.\n    Addition and subtraction are the only arithmetic\n    that may appear in these expressions.  */\n-extern void output_addr_const PROTO((FILE *, rtx));\n+extern void output_addr_const STDIO_PROTO((FILE *, rtx));\n \n /* Output a name (as found inside a symbol_ref) in assembler syntax.  */\n-extern void assemble_name PROTO((FILE *, char *));\n-#endif\n+extern void assemble_name STDIO_PROTO((FILE *, char *));\n \n /* Replace a SUBREG with a REG or a MEM, based on the thing it is a\n    subreg of.  */\n@@ -160,6 +166,6 @@ extern int sdb_begin_function_line;\n \n /* File in which assembler code is being written.  */\n \n-#ifdef BUFSIZ  /* The hope is that any kind of stdio.h must define BUFSIZ.  */\n+#ifdef BUFSIZ\n extern FILE *asm_out_file;\n #endif"}]}