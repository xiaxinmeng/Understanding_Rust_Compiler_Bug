{"sha": "c1cfed038a9cebb85d49e48958f6021b11372630", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzFjZmVkMDM4YTljZWJiODVkNDllNDg5NThmNjAyMWIxMTM3MjYzMA==", "commit": {"author": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2009-02-26T06:23:42Z"}, "committer": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2009-02-26T06:23:42Z"}, "message": "re PR fortran/39292 (ICE in gfc_conv_array_initializer, at fortran/trans-array.c:3884)\n\n2009-02-26  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/39292\n\t* trans-array.c (gfc_conv_array_initializer): Convert all\n\texpressions rather than ICEing.\n\n2009-02-26  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/39292\n\t* gfortran.dg/initialization_22.f90: New test.\n\nFrom-SVN: r144444", "tree": {"sha": "ef4178cf89573e2f854651cfe93d42f398ff80ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ef4178cf89573e2f854651cfe93d42f398ff80ce"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c1cfed038a9cebb85d49e48958f6021b11372630", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1cfed038a9cebb85d49e48958f6021b11372630", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c1cfed038a9cebb85d49e48958f6021b11372630", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1cfed038a9cebb85d49e48958f6021b11372630/comments", "author": null, "committer": null, "parents": [{"sha": "1a46aef0bd558a9d767fbaf1fc1aa4878360080a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a46aef0bd558a9d767fbaf1fc1aa4878360080a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a46aef0bd558a9d767fbaf1fc1aa4878360080a"}], "stats": {"total": 36, "additions": 35, "deletions": 1}, "files": [{"sha": "48c6c3424a54e1d401b42671c068677bc6f53f76", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1cfed038a9cebb85d49e48958f6021b11372630/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1cfed038a9cebb85d49e48958f6021b11372630/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=c1cfed038a9cebb85d49e48958f6021b11372630", "patch": "@@ -1,3 +1,9 @@\n+2009-02-26  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/39292\n+\t* trans-array.c (gfc_conv_array_initializer): Convert all\n+\texpressions rather than ICEing.\n+\n 2008-02-21  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \tPR fortran/38914"}, {"sha": "6c623504af840a06c7be04249072b3169592a8ea", "filename": "gcc/fortran/trans-array.c", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1cfed038a9cebb85d49e48958f6021b11372630/gcc%2Ffortran%2Ftrans-array.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1cfed038a9cebb85d49e48958f6021b11372630/gcc%2Ffortran%2Ftrans-array.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-array.c?ref=c1cfed038a9cebb85d49e48958f6021b11372630", "patch": "@@ -4005,8 +4005,21 @@ gfc_conv_array_initializer (tree type, gfc_expr * expr)\n \t      CONSTRUCTOR_APPEND_ELT (v, index, se.expr);\n \t      break;\n \n+\n \t    default:\n-\t      gcc_unreachable ();\n+\t      /* Catch those occasional beasts that do not simplify\n+\t\t for one reason or another, assuming that if they are\n+\t\t standard defying the frontend will catch them.  */\n+\t      gfc_conv_expr (&se, c->expr);\n+\t      if (range == NULL_TREE)\n+\t\tCONSTRUCTOR_APPEND_ELT (v, index, se.expr);\n+\t      else\n+\t\t{\n+\t\t  if (index != NULL_TREE)\n+\t\t  CONSTRUCTOR_APPEND_ELT (v, index, se.expr);\n+\t\t  CONSTRUCTOR_APPEND_ELT (v, range, se.expr);\n+\t\t}\n+\t      break;\n \t    }\n         }\n       break;"}, {"sha": "6766c5e0f5a7e368b14feda2f9ab0f3a44b1f80e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1cfed038a9cebb85d49e48958f6021b11372630/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1cfed038a9cebb85d49e48958f6021b11372630/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c1cfed038a9cebb85d49e48958f6021b11372630", "patch": "@@ -1,3 +1,8 @@\n+2009-02-26  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/39292\n+\t* gfortran.dg/initialization_22.f90: New test.\n+\n 2008-02-25  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR rtl-optimization/39241"}, {"sha": "f788109e66adb679aa437b6c7e53bd46d460214d", "filename": "gcc/testsuite/gfortran.dg/initialization_22.f90", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1cfed038a9cebb85d49e48958f6021b11372630/gcc%2Ftestsuite%2Fgfortran.dg%2Finitialization_22.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1cfed038a9cebb85d49e48958f6021b11372630/gcc%2Ftestsuite%2Fgfortran.dg%2Finitialization_22.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Finitialization_22.f90?ref=c1cfed038a9cebb85d49e48958f6021b11372630", "patch": "@@ -0,0 +1,10 @@\n+! { dg-do run }\n+! tests the fix for PR39292, where the intitialization expression\n+! did not simplify and caused an ICE in gfc_conv_array_initializer.\n+!\n+! Contributed by Richard Guenther <rguenth@gcc.gnu.org>\n+!\n+  integer :: n\n+  real, dimension(2) :: a = (/ ( (float(n))**(1.0), n=1,2) /)\n+  if (any (a .ne. (/ ( (float(n))**(1.0), n=1,2) /))) call abort\n+end"}]}