{"sha": "2b1ebb0cfe7d39b18e44d583e57cfed5f2773f0d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmIxZWJiMGNmZTdkMzliMThlNDRkNTgzZTU3Y2ZlZDVmMjc3M2YwZA==", "commit": {"author": {"name": "Alexander Ivchenko", "email": "alexander.ivchenko@intel.com", "date": "2013-10-11T12:53:24Z"}, "committer": {"name": "Kirill Yukhin", "email": "kyukhin@gcc.gnu.org", "date": "2013-10-11T12:53:24Z"}, "message": "sse.md (<sse2>_movnt<mode>): Update constraint to \"v\".\n\n        * config/i386/sse.md (<sse2>_movnt<mode>): Update constraint to \"v\".\n        (<sse>_comi): Ditto.\n        (<sse>_ucomi): Ditto.\n        (sse_cvtss2siq_2): Ditto.\n        (sse2_cvtsd2si): Ditto.\n        (sse2_cvtsd2siq): Ditto.\n        (sse2_cvttsd2si): Ditto.\n        (sse2_cvttsd2siq): Ditto.\n        (<shift_insn><mode>3): Ditto.\n        (sse2_cvtsi2sdq): Update constraint and prefix.\n        (sse_cvtsi2ss): Update prefix.\n        (sse_cvtsi2ssq): Ditto.\n\n\nCo-Authored-By: Andrey Turetskiy <andrey.turetskiy@intel.com>\nCo-Authored-By: Anna Tikhonova <anna.tikhonova@intel.com>\nCo-Authored-By: Ilya Tocar <ilya.tocar@intel.com>\nCo-Authored-By: Ilya Verbin <ilya.verbin@intel.com>\nCo-Authored-By: Kirill Yukhin <kirill.yukhin@intel.com>\nCo-Authored-By: Maxim Kuznetsov <maxim.kuznetsov@intel.com>\nCo-Authored-By: Michael Zolotukhin <michael.v.zolotukhin@intel.com>\nCo-Authored-By: Sergey Lega <sergey.s.lega@intel.com>\n\nFrom-SVN: r203428", "tree": {"sha": "5df8f658d19b0182abf0ec49405395f3a8377da3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5df8f658d19b0182abf0ec49405395f3a8377da3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2b1ebb0cfe7d39b18e44d583e57cfed5f2773f0d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b1ebb0cfe7d39b18e44d583e57cfed5f2773f0d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b1ebb0cfe7d39b18e44d583e57cfed5f2773f0d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b1ebb0cfe7d39b18e44d583e57cfed5f2773f0d/comments", "author": null, "committer": null, "parents": [{"sha": "d89124ed12480228fa80c29bc2e4d53d7288a672", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d89124ed12480228fa80c29bc2e4d53d7288a672", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d89124ed12480228fa80c29bc2e4d53d7288a672"}], "stats": {"total": 57, "additions": 40, "deletions": 17}, "files": [{"sha": "168b1dbb29f9784d8bb96f1b4dda9eec38f07173", "filename": "gcc/ChangeLog", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b1ebb0cfe7d39b18e44d583e57cfed5f2773f0d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b1ebb0cfe7d39b18e44d583e57cfed5f2773f0d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2b1ebb0cfe7d39b18e44d583e57cfed5f2773f0d", "patch": "@@ -1,3 +1,26 @@\n+2013-10-11  Alexander Ivchenko  <alexander.ivchenko@intel.com>\n+\t    Maxim Kuznetsov  <maxim.kuznetsov@intel.com>\n+\t    Sergey Lega  <sergey.s.lega@intel.com>\n+\t    Anna Tikhonova  <anna.tikhonova@intel.com>\n+\t    Ilya Tocar  <ilya.tocar@intel.com>\n+\t    Andrey Turetskiy  <andrey.turetskiy@intel.com>\n+\t    Ilya Verbin  <ilya.verbin@intel.com>\n+\t    Kirill Yukhin  <kirill.yukhin@intel.com>\n+\t    Michael Zolotukhin  <michael.v.zolotukhin@intel.com>\n+\n+\t* config/i386/sse.md (<sse2>_movnt<mode>): Update constraint to \"v\".\n+\t(<sse>_comi): Ditto.\n+\t(<sse>_ucomi): Ditto.\n+\t(sse_cvtss2siq_2): Ditto.\n+\t(sse2_cvtsd2si): Ditto.\n+\t(sse2_cvtsd2siq): Ditto.\n+\t(sse2_cvttsd2si): Ditto.\n+\t(sse2_cvttsd2siq): Ditto.\n+\t(<shift_insn><mode>3): Ditto.\n+\t(sse2_cvtsi2sdq): Update constraint and prefix.\n+\t(sse_cvtsi2ss): Update prefix.\n+\t(sse_cvtsi2ssq): Ditto.\n+\n 2013-10-11  Jakub Jelinek  <jakub@redhat.com>\n \n \t* tree-vrp.c (infer_nonnull_range): Use is_gimple_call,"}, {"sha": "2f2fb38f4285517e320b691da4518b8cdbb73a38", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b1ebb0cfe7d39b18e44d583e57cfed5f2773f0d/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b1ebb0cfe7d39b18e44d583e57cfed5f2773f0d/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=2b1ebb0cfe7d39b18e44d583e57cfed5f2773f0d", "patch": "@@ -880,7 +880,7 @@\n \n (define_insn \"<sse2>_movnt<mode>\"\n   [(set (match_operand:VI8 0 \"memory_operand\" \"=m\")\n-\t(unspec:VI8 [(match_operand:VI8 1 \"register_operand\" \"x\")]\n+\t(unspec:VI8 [(match_operand:VI8 1 \"register_operand\" \"v\")]\n \t\t    UNSPEC_MOVNT))]\n   \"TARGET_SSE2\"\n   \"%vmovntdq\\t{%1, %0|%0, %1}\"\n@@ -1764,10 +1764,10 @@\n   [(set (reg:CCFP FLAGS_REG)\n \t(compare:CCFP\n \t  (vec_select:MODEF\n-\t    (match_operand:<ssevecmode> 0 \"register_operand\" \"x\")\n+\t    (match_operand:<ssevecmode> 0 \"register_operand\" \"v\")\n \t    (parallel [(const_int 0)]))\n \t  (vec_select:MODEF\n-\t    (match_operand:<ssevecmode> 1 \"nonimmediate_operand\" \"xm\")\n+\t    (match_operand:<ssevecmode> 1 \"nonimmediate_operand\" \"vm\")\n \t    (parallel [(const_int 0)]))))]\n   \"SSE_FLOAT_MODE_P (<MODE>mode)\"\n   \"%vcomi<ssemodesuffix>\\t{%1, %0|%0, %<iptr>1}\"\n@@ -1784,10 +1784,10 @@\n   [(set (reg:CCFPU FLAGS_REG)\n \t(compare:CCFPU\n \t  (vec_select:MODEF\n-\t    (match_operand:<ssevecmode> 0 \"register_operand\" \"x\")\n+\t    (match_operand:<ssevecmode> 0 \"register_operand\" \"v\")\n \t    (parallel [(const_int 0)]))\n \t  (vec_select:MODEF\n-\t    (match_operand:<ssevecmode> 1 \"nonimmediate_operand\" \"xm\")\n+\t    (match_operand:<ssevecmode> 1 \"nonimmediate_operand\" \"vm\")\n \t    (parallel [(const_int 0)]))))]\n   \"SSE_FLOAT_MODE_P (<MODE>mode)\"\n   \"%vucomi<ssemodesuffix>\\t{%1, %0|%0, %<iptr>1}\"\n@@ -2594,7 +2594,7 @@\n    (set_attr \"amdfam10_decode\" \"vector,double,*\")\n    (set_attr \"bdver1_decode\" \"double,direct,*\")\n    (set_attr \"btver2_decode\" \"double,double,double\")\n-   (set_attr \"prefix\" \"orig,orig,vex\")\n+   (set_attr \"prefix\" \"orig,orig,maybe_evex\")\n    (set_attr \"mode\" \"SF\")])\n \n (define_insn \"sse_cvtsi2ssq\"\n@@ -2617,7 +2617,7 @@\n    (set_attr \"btver2_decode\" \"double,double,double\")\n    (set_attr \"length_vex\" \"*,*,4\")\n    (set_attr \"prefix_rex\" \"1,1,*\")\n-   (set_attr \"prefix\" \"orig,orig,vex\")\n+   (set_attr \"prefix\" \"orig,orig,maybe_evex\")\n    (set_attr \"mode\" \"SF\")])\n \n (define_insn \"sse_cvtss2si\"\n@@ -2668,7 +2668,7 @@\n \n (define_insn \"sse_cvtss2siq_2\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r,r\")\n-\t(unspec:DI [(match_operand:SF 1 \"nonimmediate_operand\" \"x,m\")]\n+\t(unspec:DI [(match_operand:SF 1 \"nonimmediate_operand\" \"v,m\")]\n \t\t   UNSPEC_FIX_NOTRUNC))]\n   \"TARGET_SSE && TARGET_64BIT\"\n   \"%vcvtss2si{q}\\t{%1, %0|%0, %k1}\"\n@@ -2860,11 +2860,11 @@\n    (set_attr \"mode\" \"DF\")])\n \n (define_insn \"sse2_cvtsi2sdq\"\n-  [(set (match_operand:V2DF 0 \"register_operand\" \"=x,x,x\")\n+  [(set (match_operand:V2DF 0 \"register_operand\" \"=x,x,v\")\n \t(vec_merge:V2DF\n \t  (vec_duplicate:V2DF\n \t    (float:DF (match_operand:DI 2 \"nonimmediate_operand\" \"r,m,rm\")))\n-\t  (match_operand:V2DF 1 \"register_operand\" \"0,0,x\")\n+\t  (match_operand:V2DF 1 \"register_operand\" \"0,0,v\")\n \t  (const_int 1)))]\n   \"TARGET_SSE2 && TARGET_64BIT\"\n   \"@\n@@ -2878,14 +2878,14 @@\n    (set_attr \"bdver1_decode\" \"double,direct,*\")\n    (set_attr \"length_vex\" \"*,*,4\")\n    (set_attr \"prefix_rex\" \"1,1,*\")\n-   (set_attr \"prefix\" \"orig,orig,vex\")\n+   (set_attr \"prefix\" \"orig,orig,maybe_evex\")\n    (set_attr \"mode\" \"DF\")])\n \n (define_insn \"sse2_cvtsd2si\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r,r\")\n \t(unspec:SI\n \t  [(vec_select:DF\n-\t     (match_operand:V2DF 1 \"nonimmediate_operand\" \"x,m\")\n+\t     (match_operand:V2DF 1 \"nonimmediate_operand\" \"v,m\")\n \t     (parallel [(const_int 0)]))]\n \t  UNSPEC_FIX_NOTRUNC))]\n   \"TARGET_SSE2\"\n@@ -2916,7 +2916,7 @@\n   [(set (match_operand:DI 0 \"register_operand\" \"=r,r\")\n \t(unspec:DI\n \t  [(vec_select:DF\n-\t     (match_operand:V2DF 1 \"nonimmediate_operand\" \"x,m\")\n+\t     (match_operand:V2DF 1 \"nonimmediate_operand\" \"v,m\")\n \t     (parallel [(const_int 0)]))]\n \t  UNSPEC_FIX_NOTRUNC))]\n   \"TARGET_SSE2 && TARGET_64BIT\"\n@@ -2946,7 +2946,7 @@\n   [(set (match_operand:SI 0 \"register_operand\" \"=r,r\")\n \t(fix:SI\n \t  (vec_select:DF\n-\t    (match_operand:V2DF 1 \"nonimmediate_operand\" \"x,m\")\n+\t    (match_operand:V2DF 1 \"nonimmediate_operand\" \"v,m\")\n \t    (parallel [(const_int 0)]))))]\n   \"TARGET_SSE2\"\n   \"%vcvttsd2si\\t{%1, %0|%0, %q1}\"\n@@ -2963,7 +2963,7 @@\n   [(set (match_operand:DI 0 \"register_operand\" \"=r,r\")\n \t(fix:DI\n \t  (vec_select:DF\n-\t    (match_operand:V2DF 1 \"nonimmediate_operand\" \"x,m\")\n+\t    (match_operand:V2DF 1 \"nonimmediate_operand\" \"v,m\")\n \t    (parallel [(const_int 0)]))))]\n   \"TARGET_SSE2 && TARGET_64BIT\"\n   \"%vcvttsd2si{q}\\t{%1, %0|%0, %q1}\"\n@@ -5913,9 +5913,9 @@\n    (set_attr \"mode\" \"<sseinsnmode>\")])\n \n (define_insn \"<shift_insn><mode>3\"\n-  [(set (match_operand:VI248_AVX2 0 \"register_operand\" \"=x,v\")\n+  [(set (match_operand:VI248_AVX2 0 \"register_operand\" \"=x,x\")\n \t(any_lshift:VI248_AVX2\n-\t  (match_operand:VI248_AVX2 1 \"register_operand\" \"0,v\")\n+\t  (match_operand:VI248_AVX2 1 \"register_operand\" \"0,x\")\n \t  (match_operand:SI 2 \"nonmemory_operand\" \"xN,xN\")))]\n   \"TARGET_SSE2\"\n   \"@"}]}