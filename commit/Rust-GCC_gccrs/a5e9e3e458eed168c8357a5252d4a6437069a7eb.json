{"sha": "a5e9e3e458eed168c8357a5252d4a6437069a7eb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTVlOWUzZTQ1OGVlZDE2OGM4MzU3YTUyNTJkNGE2NDM3MDY5YTdlYg==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2017-03-07T14:12:52Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2017-03-07T14:12:52Z"}, "message": "Use array_at_struct_end_p in tree-chkp.c (PR middle-end/68270).\n\n2017-03-07  Martin Liska  <mliska@suse.cz>\n\n\tPR middle-end/68270\n\t* tree-chkp.c (chkp_may_narrow_to_field): Add new argument ref.\n\tUse array_at_struct_end_p instead of DECL_CHAIN (field).\n\t(chkp_narrow_bounds_for_field): Likewise.\n\t(chkp_parse_array_and_component_ref): Pass one more argument to\n\tcall.\n2017-03-07  Martin Liska  <mliska@suse.cz>\n\n\tPR middle-end/68270\n\t* g++.dg/pr68270.C: New test.\n\nFrom-SVN: r245951", "tree": {"sha": "b1d44627f66da3cd00b3d8b9ca22eb9a53b37eb9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b1d44627f66da3cd00b3d8b9ca22eb9a53b37eb9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a5e9e3e458eed168c8357a5252d4a6437069a7eb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5e9e3e458eed168c8357a5252d4a6437069a7eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5e9e3e458eed168c8357a5252d4a6437069a7eb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5e9e3e458eed168c8357a5252d4a6437069a7eb/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5281a167eaf420235edcd5b47425d54a13ff74af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5281a167eaf420235edcd5b47425d54a13ff74af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5281a167eaf420235edcd5b47425d54a13ff74af"}], "stats": {"total": 50, "additions": 41, "deletions": 9}, "files": [{"sha": "ecbafb445da2196b7d854a856550d16abb2b222c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5e9e3e458eed168c8357a5252d4a6437069a7eb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5e9e3e458eed168c8357a5252d4a6437069a7eb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a5e9e3e458eed168c8357a5252d4a6437069a7eb", "patch": "@@ -1,3 +1,12 @@\n+2017-03-07  Martin Liska  <mliska@suse.cz>\n+\n+\tPR middle-end/68270\n+\t* tree-chkp.c (chkp_may_narrow_to_field): Add new argument ref.\n+\tUse array_at_struct_end_p instead of DECL_CHAIN (field).\n+\t(chkp_narrow_bounds_for_field): Likewise.\n+\t(chkp_parse_array_and_component_ref): Pass one more argument to\n+\tcall.\n+\n 2017-03-07  Richard Biener  <rguenther@suse.de>\n \n \t* tree-vect-loop-manip.c (slpeel_add_loop_guard): Preserve"}, {"sha": "932e792bd75ced623459074b22cab5fe84e11d3b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5e9e3e458eed168c8357a5252d4a6437069a7eb/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5e9e3e458eed168c8357a5252d4a6437069a7eb/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a5e9e3e458eed168c8357a5252d4a6437069a7eb", "patch": "@@ -1,3 +1,8 @@\n+2017-03-07  Martin Liska  <mliska@suse.cz>\n+\n+\tPR middle-end/68270\n+\t* g++.dg/pr68270.C: New test.\n+\n 2017-03-07  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR rtl-optimization/79901"}, {"sha": "441fca3e85fd97c749c117c73a4e248e28055e91", "filename": "gcc/testsuite/g++.dg/pr68270.C", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5e9e3e458eed168c8357a5252d4a6437069a7eb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr68270.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5e9e3e458eed168c8357a5252d4a6437069a7eb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr68270.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr68270.C?ref=a5e9e3e458eed168c8357a5252d4a6437069a7eb", "patch": "@@ -0,0 +1,16 @@\n+/* PR71633 */\n+/* { dg-do compile { target { { i?86-*-* x86_64-*-* } && { ! x32 } } } } */\n+/* { dg-options \"-Werror=chkp -mmpx -fcheck-pointer-bounds -O1 -fchkp-flexible-struct-trailing-arrays\" } */\n+\n+struct a\n+{\n+  struct\n+  {\n+    int e[1];\n+  } f;\n+};\n+\n+int g(a *ptr)\n+{\n+  return ptr->f.e[1];\n+}"}, {"sha": "b7b412efcef7bdf622ff089e8c2aebe30232cd96", "filename": "gcc/tree-chkp.c", "status": "modified", "additions": 11, "deletions": 9, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5e9e3e458eed168c8357a5252d4a6437069a7eb/gcc%2Ftree-chkp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5e9e3e458eed168c8357a5252d4a6437069a7eb/gcc%2Ftree-chkp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-chkp.c?ref=a5e9e3e458eed168c8357a5252d4a6437069a7eb", "patch": "@@ -3266,15 +3266,15 @@ chkp_intersect_bounds (tree bounds1, tree bounds2, gimple_stmt_iterator *iter)\n }\n \n /* Return 1 if we are allowed to narrow bounds for addressed FIELD\n-   and 0 othersize.  */\n+   and 0 othersize.  REF is reference to the field.  */\n+\n static bool\n-chkp_may_narrow_to_field (tree field)\n+chkp_may_narrow_to_field (tree ref, tree field)\n {\n   return DECL_SIZE (field) && TREE_CODE (DECL_SIZE (field)) == INTEGER_CST\n     && tree_to_uhwi (DECL_SIZE (field)) != 0\n     && !(flag_chkp_flexible_struct_trailing_arrays\n-\t && TREE_CODE(TREE_TYPE(field)) == ARRAY_TYPE\n-\t && !DECL_CHAIN (field))\n+\t && array_at_struct_end_p (ref, true))\n     && (!DECL_FIELD_OFFSET (field)\n \t|| TREE_CODE (DECL_FIELD_OFFSET (field)) == INTEGER_CST)\n     && (!DECL_FIELD_BIT_OFFSET (field)\n@@ -3284,14 +3284,15 @@ chkp_may_narrow_to_field (tree field)\n }\n \n /* Return 1 if bounds for FIELD should be narrowed to\n-   field's own size.  */\n+   field's own size.  REF is reference to the field.  */\n+\n static bool\n-chkp_narrow_bounds_for_field (tree field)\n+chkp_narrow_bounds_for_field (tree ref, tree field)\n {\n   HOST_WIDE_INT offs;\n   HOST_WIDE_INT bit_offs;\n \n-  if (!chkp_may_narrow_to_field (field))\n+  if (!chkp_may_narrow_to_field (ref, field))\n     return false;\n \n   /* Accesse to compiler generated fields should not cause\n@@ -3428,7 +3429,8 @@ chkp_parse_array_and_component_ref (tree node, tree *ptr,\n \t  if (flag_chkp_narrow_bounds\n \t      && !flag_chkp_narrow_to_innermost_arrray\n \t      && (!last_comp\n-\t\t  || chkp_may_narrow_to_field (TREE_OPERAND (last_comp, 1))))\n+\t\t  || chkp_may_narrow_to_field (var,\n+\t\t\t\t\t       TREE_OPERAND (last_comp, 1))))\n \t    {\n \t      comp_to_narrow = last_comp;\n \t      break;\n@@ -3440,7 +3442,7 @@ chkp_parse_array_and_component_ref (tree node, tree *ptr,\n \n \t  if (innermost_bounds\n \t      && !array_ref_found\n-\t      && chkp_narrow_bounds_for_field (field))\n+\t      && chkp_narrow_bounds_for_field (var, field))\n \t    comp_to_narrow = var;\n \t  last_comp = var;\n "}]}