{"sha": "8fa4e1b4e1afecee8930c962f925bcf7759c352e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGZhNGUxYjRlMWFmZWNlZTg5MzBjOTYyZjkyNWJjZjc3NTljMzUyZQ==", "commit": {"author": {"name": "Jeffrey A Law", "email": "law@cygnus.com", "date": "1998-01-05T10:45:59Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-01-05T10:45:59Z"}, "message": "mips.c (mips_expand_prologue): Handle large frame with no outgoing arguments for mips16.\n\n        * mips.c (mips_expand_prologue): Handle large frame with no outgoing\n        arguments for mips16.\n        (mips_expand_epilogue): Pass \"orig_tsize\" to save_restore_insns.\n        Don't lose if tsize is zero after handling large stack for mips16.\n        * mips.md (return): For trivial return, return address is in $31.\n\nFrom-SVN: r17294", "tree": {"sha": "e8e817de0f597241d337f31c2b573ab6bbec257d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e8e817de0f597241d337f31c2b573ab6bbec257d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8fa4e1b4e1afecee8930c962f925bcf7759c352e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8fa4e1b4e1afecee8930c962f925bcf7759c352e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8fa4e1b4e1afecee8930c962f925bcf7759c352e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8fa4e1b4e1afecee8930c962f925bcf7759c352e/comments", "author": null, "committer": null, "parents": [{"sha": "eb774d8d9a7d80374676abd3d98c2df8d85ccd8a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb774d8d9a7d80374676abd3d98c2df8d85ccd8a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb774d8d9a7d80374676abd3d98c2df8d85ccd8a"}], "stats": {"total": 32, "additions": 18, "deletions": 14}, "files": [{"sha": "f4c63a918c72b7d80d0fdb0cb4568fc02010d7c4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fa4e1b4e1afecee8930c962f925bcf7759c352e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fa4e1b4e1afecee8930c962f925bcf7759c352e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8fa4e1b4e1afecee8930c962f925bcf7759c352e", "patch": "@@ -1,3 +1,11 @@\n+Mon Jan  5 11:39:49 1998  Jeffrey A Law  (law@cygnus.com)\n+\n+\t* mips.c (mips_expand_prologue): Handle large frame with no outgoing\n+\targuments for mips16.\n+\t(mips_expand_epilogue): Pass \"orig_tsize\" to save_restore_insns.\n+\tDon't lose if tsize is zero after handling large stack for mips16.\n+\t* mips.md (return): For trivial return, return address is in $31.\n+\n Sun Jan  4 20:24:00 1998  Nigel Stephens  <nigel@algor.co.uk>\n \n \t*  mips/mips16.S: Various changes to make it work with -msingle-float"}, {"sha": "ebcf0fb0d0f7256996a15337861b92106a3deb17", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fa4e1b4e1afecee8930c962f925bcf7759c352e/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fa4e1b4e1afecee8930c962f925bcf7759c352e/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=8fa4e1b4e1afecee8930c962f925bcf7759c352e", "patch": "@@ -1,5 +1,5 @@\n /* Subroutines for insn-output.c for MIPS\n-   Copyright (C) 1989, 90, 91, 93-96, 1997 Free Software Foundation, Inc.\n+   Copyright (C) 1989, 90, 91, 93-97, 1998 Free Software Foundation, Inc.\n    Contributed by A. Lichnewsky, lich@inria.inria.fr.\n    Changes by Michael Meissner, meissner@osf.org.\n    64 bit r4000 support by Ian Lance Taylor, ian@cygnus.com, and\n@@ -6559,9 +6559,10 @@ mips_expand_prologue ()\n \t  else if (TARGET_64BIT)\n \t    insn = emit_insn (gen_movdi (hard_frame_pointer_rtx, stack_pointer_rtx));\n \t  else\n-\t    insn= emit_insn (gen_movsi (hard_frame_pointer_rtx, stack_pointer_rtx));\n+\t    insn = emit_insn (gen_movsi (hard_frame_pointer_rtx, stack_pointer_rtx));\n \n-\t  RTX_FRAME_RELATED_P (insn) = 1;\n+\t  if (insn)\n+\t    RTX_FRAME_RELATED_P (insn) = 1;\n \t}\n \n       if (TARGET_ABICALLS && mips_abi != ABI_32)\n@@ -6749,7 +6750,7 @@ mips_expand_epilogue ()\n \t\t   & (1L << (PIC_OFFSET_TABLE_REGNUM - GP_REG_FIRST))))\n \temit_insn (gen_blockage ());\n \n-      save_restore_insns (FALSE, tmp_rtx, tsize, (FILE *)0);\n+      save_restore_insns (FALSE, tmp_rtx, orig_tsize, (FILE *)0);\n \n       /* In mips16 mode with a large frame, we adjust the stack\n          pointer before restoring the registers.  In this case, we\n@@ -6759,10 +6760,10 @@ mips_expand_epilogue ()\n \tabort ();\n \n       emit_insn (gen_blockage ());\n-      if (TARGET_LONG64)\n+      if (TARGET_LONG64 && tsize != 0)\n \temit_insn (gen_adddi3 (stack_pointer_rtx, stack_pointer_rtx,\n \t\t\t       tsize_rtx));\n-      else\n+      else if (tsize != 0)\n \temit_insn (gen_addsi3 (stack_pointer_rtx, stack_pointer_rtx,\n \t\t\t       tsize_rtx));\n     }"}, {"sha": "76b864410a7b4ec37827f440ffa4ccea8bc05956", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fa4e1b4e1afecee8930c962f925bcf7759c352e/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fa4e1b4e1afecee8930c962f925bcf7759c352e/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=8fa4e1b4e1afecee8930c962f925bcf7759c352e", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of target machine for GNU compiler.  MIPS version.\n-   Copyright (C) 1989, 90-6, 1997 Free Software Foundation, Inc.\n+   Copyright (C) 1989, 90-97, 1998 Free Software Foundation, Inc.\n    Contributed by A. Lichnewsky (lich@inria.inria.fr).\n    Changed by Michael Meissner\t(meissner@osf.org).\n    64 bit r4000 support by Ian Lance Taylor (ian@cygnus.com) and"}, {"sha": "bf44a6f1d1964f4e0cade9aedbd39b385ea80ffb", "filename": "gcc/config/mips/mips.md", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fa4e1b4e1afecee8930c962f925bcf7759c352e/gcc%2Fconfig%2Fmips%2Fmips.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fa4e1b4e1afecee8930c962f925bcf7759c352e/gcc%2Fconfig%2Fmips%2Fmips.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.md?ref=8fa4e1b4e1afecee8930c962f925bcf7759c352e", "patch": "@@ -3,7 +3,7 @@\n ;;  Changes by       Michael Meissner, meissner@osf.org\n ;;  64 bit r4000 support by Ian Lance Taylor, ian@cygnus.com, and\n ;;  Brendan Eich, brendan@microunity.com.\n-;;  Copyright (C) 1989, 90-96, 1997 Free Software Foundation, Inc.\n+;;  Copyright (C) 1989, 90-97, 1998 Free Software Foundation, Inc.\n \n ;; This file is part of GNU CC.\n \n@@ -8790,12 +8790,7 @@ move\\\\t%0,%z4\\\\n\\\\\n (define_insn \"return\"\n   [(return)]\n   \"mips_can_use_return_insn ()\"\n-  \"*\n-{\n-  if (TARGET_MIPS16)\n-    return \\\"%*j\\\\t$7\\\";\n-  return \\\"%*j\\\\t$31\\\";\n-}\"\n+  \"%*j\\\\t$31\"\n   [(set_attr \"type\"\t\"jump\")\n    (set_attr \"mode\"\t\"none\")\n    (set_attr \"length\"\t\"1\")])"}]}