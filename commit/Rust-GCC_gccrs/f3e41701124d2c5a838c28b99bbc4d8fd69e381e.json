{"sha": "f3e41701124d2c5a838c28b99bbc4d8fd69e381e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjNlNDE3MDExMjRkMmM1YTgzOGMyOGI5OWJiYzRkOGZkNjllMzgxZQ==", "commit": {"author": {"name": "Paul Brook", "email": "paul@codesourcery.com", "date": "2004-10-04T15:32:13Z"}, "committer": {"name": "Paul Brook", "email": "pbrook@gcc.gnu.org", "date": "2004-10-04T15:32:13Z"}, "message": "re PR libfortran/17706 (reading a value of 0.0 gives a value of -0.0)\n\n2004-10-04  Paul Brook  <paul@codesourcery.com>\n\tBud Davis  <bdavis9659@comcast.net>\n\n\tPR fortran/17706\n\tPR fortran/16434\n\t* io/format.c (parse_format_list): Set repeat count for S, SP, SS,\n\tBN and BZ formats.\n\t* io/write.c (output_float): Don't output minus zero.\nlibgfortran/\n\t* gfortran/pr17706.f90: New test.\n\t* gfortran.dg/g77/f77-edit-s-out.f: Remove xfail.\n\nCo-Authored-By: Bud Davis <bdavis9659@comcast.net>\n\nFrom-SVN: r88512", "tree": {"sha": "d084eaa8c0a3ce4ee66277e81d81e30e4e3162f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d084eaa8c0a3ce4ee66277e81d81e30e4e3162f3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f3e41701124d2c5a838c28b99bbc4d8fd69e381e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3e41701124d2c5a838c28b99bbc4d8fd69e381e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f3e41701124d2c5a838c28b99bbc4d8fd69e381e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3e41701124d2c5a838c28b99bbc4d8fd69e381e/comments", "author": null, "committer": null, "parents": [{"sha": "15a7ee2932a7cd29a99772a01c07182f1f1f2bf0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15a7ee2932a7cd29a99772a01c07182f1f1f2bf0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/15a7ee2932a7cd29a99772a01c07182f1f1f2bf0"}], "stats": {"total": 41, "additions": 41, "deletions": 0}, "files": [{"sha": "d6c26dfe3ce18e704065ca1667f5853613719fcc", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3e41701124d2c5a838c28b99bbc4d8fd69e381e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3e41701124d2c5a838c28b99bbc4d8fd69e381e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f3e41701124d2c5a838c28b99bbc4d8fd69e381e", "patch": "@@ -1,3 +1,11 @@\n+2004-10-04  Paul Brook  <paul@codesourcery.com>\n+\tBud Davis  <bdavis9659@comcast.net>\n+\n+\tPR fortran/17706\n+\tPR fortran/16434\n+\t* gfortran/pr17706.f90: New test.\n+\t* gfortran.dg/g77/f77-edit-s-out.f: Remove xfail.\n+\n 2004-10-04  Tobias Schlueter  <tobias.schlueter@physik.uni-muenchen.de>\n \n \t* gfortran.dg/pr17612.f90: New test."}, {"sha": "f6787368fa7e78b653fbee9535034eea7d4ed1dd", "filename": "gcc/testsuite/gfortran.dg/pr17706.f90", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3e41701124d2c5a838c28b99bbc4d8fd69e381e/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr17706.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3e41701124d2c5a838c28b99bbc4d8fd69e381e/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr17706.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr17706.f90?ref=f3e41701124d2c5a838c28b99bbc4d8fd69e381e", "patch": "@@ -0,0 +1,24 @@\n+! { dg-do run }\n+! PR17706\n+! this is a libgfortran test\n+! output value -0.00 is not standard compliant\n+! derived from NIST F77 test FM406, with extra bits added.\n+program pr17706\n+  implicit none\n+  character(len=10) :: s\n+  character(len=10), parameter :: x = \"xxxxxxxxxx\"\n+  real, parameter :: small = -0.0001\n+\n+  s = x\n+  write (s, '(F4.1)') small\n+  ! The plus is optional.  We choose not to display it.\n+  if (s .ne. \" 0.0\") call abort\n+\n+  s = x\n+  write (s, '(SS,F4.1)') small\n+  if (s .ne. \" 0.0\") call abort\n+\n+  s = x\n+  write (s, '(SP,F4.1)') small\n+  if (s .ne. \"+0.0\") call abort\n+end program"}, {"sha": "c9567d76335662ce5fe2e71b168e041fe72a0b67", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3e41701124d2c5a838c28b99bbc4d8fd69e381e/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3e41701124d2c5a838c28b99bbc4d8fd69e381e/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=f3e41701124d2c5a838c28b99bbc4d8fd69e381e", "patch": "@@ -1,3 +1,12 @@\n+2004-10-04  Paul Brook  <paul@codesourcery.com>\n+\tBud Davis  <bdavis9659@comcast.net>\n+\n+\tPR fortran/17706\n+\tPR fortran/16434\n+\t* io/format.c (parse_format_list): Set repeat count for S, SP, SS,\n+\tBN and BZ formats.\n+\t* io/write.c (output_float): Don't output minus zero.\n+\n 2004-10-03  Aaron W. LaFramboise <aaronavay62@aaronwl.com>\n \n \t* intrinsics/abort.c (\"libgfortran.h\"): Move."}]}