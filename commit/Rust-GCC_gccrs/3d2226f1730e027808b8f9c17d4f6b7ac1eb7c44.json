{"sha": "3d2226f1730e027808b8f9c17d4f6b7ac1eb7c44", "node_id": "C_kwDOANBUbNoAKDNkMjIyNmYxNzMwZTAyNzgwOGI4ZjljMTdkNGY2YjdhYzFlYjdjNDQ", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@adacore.com", "date": "2021-07-26T08:16:06Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-09-22T15:01:48Z"}, "message": "[Ada] More flexibility in preprocessor\n\ngcc/ada/\n\n\t* prep.adb (Preprocess): Allow for more flexibility when\n\tRelaxed_RM_Semantics is set.", "tree": {"sha": "01836f2f6aa788e8ca925bffe27e7451be9ada05", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/01836f2f6aa788e8ca925bffe27e7451be9ada05"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3d2226f1730e027808b8f9c17d4f6b7ac1eb7c44", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d2226f1730e027808b8f9c17d4f6b7ac1eb7c44", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d2226f1730e027808b8f9c17d4f6b7ac1eb7c44", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d2226f1730e027808b8f9c17d4f6b7ac1eb7c44/comments", "author": {"login": "ArnaudCharlet", "id": 30291825, "node_id": "MDQ6VXNlcjMwMjkxODI1", "avatar_url": "https://avatars.githubusercontent.com/u/30291825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArnaudCharlet", "html_url": "https://github.com/ArnaudCharlet", "followers_url": "https://api.github.com/users/ArnaudCharlet/followers", "following_url": "https://api.github.com/users/ArnaudCharlet/following{/other_user}", "gists_url": "https://api.github.com/users/ArnaudCharlet/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArnaudCharlet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArnaudCharlet/subscriptions", "organizations_url": "https://api.github.com/users/ArnaudCharlet/orgs", "repos_url": "https://api.github.com/users/ArnaudCharlet/repos", "events_url": "https://api.github.com/users/ArnaudCharlet/events{/privacy}", "received_events_url": "https://api.github.com/users/ArnaudCharlet/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1647bc2a78b2182007f011ff0a43f872086ee512", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1647bc2a78b2182007f011ff0a43f872086ee512", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1647bc2a78b2182007f011ff0a43f872086ee512"}], "stats": {"total": 25, "additions": 20, "deletions": 5}, "files": [{"sha": "e01161c7289fc8452bf176ce1f8bea9b4eb6d34f", "filename": "gcc/ada/prep.adb", "status": "modified", "additions": 20, "deletions": 5, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d2226f1730e027808b8f9c17d4f6b7ac1eb7c44/gcc%2Fada%2Fprep.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d2226f1730e027808b8f9c17d4f6b7ac1eb7c44/gcc%2Fada%2Fprep.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprep.adb?ref=3d2226f1730e027808b8f9c17d4f6b7ac1eb7c44", "patch": "@@ -1410,7 +1410,12 @@ package body Prep is\n \n                      Scan.all;\n \n-                     if Token /= Tok_If then\n+                     --  Ignore all recoverable errors if Relaxed_RM_Semantics\n+\n+                     if Relaxed_RM_Semantics then\n+                        null;\n+\n+                     elsif Token /= Tok_If then\n                         Error_Msg -- CODEFIX\n                           (\"IF expected\", Token_Ptr);\n                         No_Error_Found := False;\n@@ -1453,21 +1458,31 @@ package body Prep is\n                   --  Illegal preprocessor line\n \n                   when others =>\n-                     No_Error_Found := False;\n-\n                      if Pp_States.Last = 0 then\n                         Error_Msg -- CODEFIX\n                           (\"IF expected\", Token_Ptr);\n+                        No_Error_Found := False;\n \n-                     elsif\n-                       Pp_States.Table (Pp_States.Last).Else_Ptr = 0\n+                     elsif Relaxed_RM_Semantics\n+                       and then Get_Name_String (Token_Name) = \"endif\"\n                      then\n+                        --  In relaxed mode, accept \"endif\" instead of\n+                        --  \"end if\".\n+\n+                        --  Decrement the depth of the #if stack\n+\n+                        if Pp_States.Last > 0 then\n+                           Pp_States.Decrement_Last;\n+                        end if;\n+                     elsif Pp_States.Table (Pp_States.Last).Else_Ptr = 0 then\n                         Error_Msg\n                           (\"IF, ELSIF, ELSE, or `END IF` expected\",\n                            Token_Ptr);\n+                        No_Error_Found := False;\n \n                      else\n                         Error_Msg (\"IF or `END IF` expected\", Token_Ptr);\n+                        No_Error_Found := False;\n                      end if;\n \n                      --  Skip to the end of this illegal line"}]}