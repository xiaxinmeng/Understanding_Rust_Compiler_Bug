{"sha": "5da906ca43feb6e83cd3cdb11d59d76548005cad", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWRhOTA2Y2E0M2ZlYjZlODNjZDNjZGIxMWQ1OWQ3NjU0ODAwNWNhZA==", "commit": {"author": {"name": "Bernd Schmidt", "email": "bernds@redhat.com", "date": "2017-03-25T01:12:04Z"}, "committer": {"name": "Bernd Schmidt", "email": "bernds@gcc.gnu.org", "date": "2017-03-25T01:12:04Z"}, "message": "re PR target/80160 (operand has impossible constraints)\n\n\tPR rtl-optimization/80160\n\tPR rtl-optimization/80159\n\t* lra-assigns.c (must_not_spill_p): Tighten new test to also take\n\treg_alternate_class into account.\n\n\t* gcc.target/i386/pr80160.c: New test.\n\nFrom-SVN: r246473", "tree": {"sha": "e9f003ff186d9814acb1738ac09b863f2d1584da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e9f003ff186d9814acb1738ac09b863f2d1584da"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5da906ca43feb6e83cd3cdb11d59d76548005cad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5da906ca43feb6e83cd3cdb11d59d76548005cad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5da906ca43feb6e83cd3cdb11d59d76548005cad", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5da906ca43feb6e83cd3cdb11d59d76548005cad/comments", "author": null, "committer": null, "parents": [{"sha": "199855f60367c12d831416ecd4b367b5d0222f67", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/199855f60367c12d831416ecd4b367b5d0222f67", "html_url": "https://github.com/Rust-GCC/gccrs/commit/199855f60367c12d831416ecd4b367b5d0222f67"}], "stats": {"total": 62, "additions": 61, "deletions": 1}, "files": [{"sha": "ef8e27fa8d3cc6674a70c7574ce57756ae8131cf", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5da906ca43feb6e83cd3cdb11d59d76548005cad/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5da906ca43feb6e83cd3cdb11d59d76548005cad/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5da906ca43feb6e83cd3cdb11d59d76548005cad", "patch": "@@ -1,3 +1,10 @@\n+2017-03-25  Bernd Schmidt  <bschmidt@redhat.com>\n+\n+\tPR rtl-optimization/80160\n+\tPR rtl-optimization/80159\n+\t* lra-assigns.c (must_not_spill_p): Tighten new test to also take\n+\treg_alternate_class into account.\n+\n 2017-03-24  Vladimir Makarov  <vmakarov@redhat.com>\n \n \tPR target/80148"}, {"sha": "e4cc43ac82060e6ee92a4218029fb50e372eddbe", "filename": "gcc/lra-assigns.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5da906ca43feb6e83cd3cdb11d59d76548005cad/gcc%2Flra-assigns.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5da906ca43feb6e83cd3cdb11d59d76548005cad/gcc%2Flra-assigns.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra-assigns.c?ref=5da906ca43feb6e83cd3cdb11d59d76548005cad", "patch": "@@ -908,7 +908,8 @@ must_not_spill_p (unsigned spill_regno)\n      does not solve the general case where existing reloads fully\n      cover a limited register class.  */\n   if (!bitmap_bit_p (&non_reload_pseudos, spill_regno)\n-      && reg_class_size [reg_preferred_class (spill_regno)] == 1)\n+      && reg_class_size [reg_preferred_class (spill_regno)] == 1\n+      && reg_alternate_class (spill_regno) == NO_REGS)\n     return true;\n   return false;\n }"}, {"sha": "36a082a305cb1879c91fdddb40738d3f66f6da64", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5da906ca43feb6e83cd3cdb11d59d76548005cad/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5da906ca43feb6e83cd3cdb11d59d76548005cad/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5da906ca43feb6e83cd3cdb11d59d76548005cad", "patch": "@@ -1,3 +1,10 @@\n+2017-03-25  Bernd Schmidt  <bschmidt@redhat.com>\n+\n+\tPR rtl-optimization/80160\n+\tPR rtl-optimization/80159\n+\n+\t* gcc.target/i386/pr80160.c: New test.\n+\n 2017-03-24  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR sanitizer/79904"}, {"sha": "3bb110e700d70414b32c5bb1e941ddac86cf7fda", "filename": "gcc/testsuite/gcc.target/i386/pr80160.c", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5da906ca43feb6e83cd3cdb11d59d76548005cad/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr80160.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5da906ca43feb6e83cd3cdb11d59d76548005cad/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr80160.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr80160.c?ref=5da906ca43feb6e83cd3cdb11d59d76548005cad", "patch": "@@ -0,0 +1,45 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fno-omit-frame-pointer -w\" } */\n+/* { dg-additional-options \"-march=pentium-mmx\" { target ia32 } } */\n+\n+typedef struct { long long a; } a_t;\n+int *a, b;\n+a_t *e, c;\n+long long f;\n+void fn (int);\n+void fn2 (void);\n+int fn3 (a_t);\n+void fn4 (a_t);\n+a_t foo (long long val) { return (a_t){val}; }\n+static void\n+bar (int ka)\n+{\n+  unsigned i;\n+  for (i = 0; i < 512; i++) {\n+    long d;\n+    c = (a_t){d};\n+    fn2 ();\n+  }\n+  fn (ka);\n+}\n+void\n+test (void)\n+{\n+  a_t g;\n+  a_t *h, j;\n+  h = e;\n+  j = *h;\n+  if (e == (a_t *) 1) {\n+    a_t k = {fn3 (j)};\n+    fn4 (j);\n+    long l;\n+    g = foo((long long)b << 2 | l);\n+    k = g;\n+    if (j.a != k.a) {\n+      a_t m = g;\n+      int n = m.a, o = m.a >> 32;\n+      asm (\"# %0 %1 %2 %3\" : \"=m\"(*a), \"+A\"(f) : \"b\"(n), \"c\"(o));\n+    }\n+  }\n+  bar ((int) h);\n+}"}]}