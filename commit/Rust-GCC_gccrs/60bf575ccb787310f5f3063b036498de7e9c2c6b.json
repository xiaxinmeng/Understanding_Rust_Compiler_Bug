{"sha": "60bf575ccb787310f5f3063b036498de7e9c2c6b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjBiZjU3NWNjYjc4NzMxMGY1ZjMwNjNiMDM2NDk4ZGU3ZTljMmM2Yg==", "commit": {"author": {"name": "Tom de Vries", "email": "tom@codesourcery.com", "date": "2017-12-30T17:02:00Z"}, "committer": {"name": "Tom de Vries", "email": "vries@gcc.gnu.org", "date": "2017-12-30T17:02:00Z"}, "message": "Prune removed funcs from offload table\n\n2017-12-30  Tom de Vries  <tom@codesourcery.com>\n\n\tPR libgomp/83046\n\t* omp-expand.c (expand_omp_target): If in_lto_p, mark offload_funcs with\n\tDECL_PRESERVE_P.\n\t* lto-streamer-out.c (prune_offload_funcs): New function.  Remove\n\toffload_funcs entries that no longer have a corresponding cgraph_node.\n\tMark the remaining ones as DECL_PRESERVE_P.\n\t(output_lto): Call prune_offload_funcs.\n\n\t* testsuite/libgomp.oacc-c-c++-common/pr83046.c: New test.\n\t* testsuite/libgomp.c-c++-common/pr83046.c: New test.\n\nFrom-SVN: r256045", "tree": {"sha": "1c337e37aa3127cc198dd0a948673450a1d8395f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1c337e37aa3127cc198dd0a948673450a1d8395f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/60bf575ccb787310f5f3063b036498de7e9c2c6b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60bf575ccb787310f5f3063b036498de7e9c2c6b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/60bf575ccb787310f5f3063b036498de7e9c2c6b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60bf575ccb787310f5f3063b036498de7e9c2c6b/comments", "author": null, "committer": null, "parents": [{"sha": "1e4423dbb50bcafd41a1246602e4222d8562eb93", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e4423dbb50bcafd41a1246602e4222d8562eb93", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e4423dbb50bcafd41a1246602e4222d8562eb93"}], "stats": {"total": 104, "additions": 103, "deletions": 1}, "files": [{"sha": "3ea3f5b5b8857539a750034d14832605282bb987", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60bf575ccb787310f5f3063b036498de7e9c2c6b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60bf575ccb787310f5f3063b036498de7e9c2c6b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=60bf575ccb787310f5f3063b036498de7e9c2c6b", "patch": "@@ -1,3 +1,13 @@\n+2017-12-30  Tom de Vries  <tom@codesourcery.com>\n+\n+\tPR libgomp/83046\n+\t* omp-expand.c (expand_omp_target): If in_lto_p, mark offload_funcs with\n+\tDECL_PRESERVE_P.\n+\t* lto-streamer-out.c (prune_offload_funcs): New function.  Remove\n+\toffload_funcs entries that no longer have a corresponding cgraph_node.\n+\tMark the remaining ones as DECL_PRESERVE_P.\n+\t(output_lto): Call prune_offload_funcs.\n+\n 2017-12-30  Jakub Jelinek  <jakub@redhat.com>\n \n \t* config/i386/sse.md (vgf2p8affineinvqb_<mode><mask_name>,"}, {"sha": "ef170838fc0692fe701f8c4bda2732418ba9fc0a", "filename": "gcc/lto-streamer-out.c", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60bf575ccb787310f5f3063b036498de7e9c2c6b/gcc%2Flto-streamer-out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60bf575ccb787310f5f3063b036498de7e9c2c6b/gcc%2Flto-streamer-out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-streamer-out.c?ref=60bf575ccb787310f5f3063b036498de7e9c2c6b", "patch": "@@ -41,6 +41,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"builtins.h\"\n #include \"gomp-constants.h\"\n #include \"debug.h\"\n+#include \"omp-offload.h\"\n \n \n static void lto_write_tree (struct output_block*, tree, bool);\n@@ -2345,6 +2346,35 @@ wrap_refs (tree *tp, int *ws, void *)\n   return NULL_TREE;\n }\n \n+/* Remove functions that are no longer used from offload_funcs, and mark the\n+   remaining ones with DECL_PRESERVE_P.  */\n+\n+static void\n+prune_offload_funcs (void)\n+{\n+  if (!offload_funcs)\n+    return;\n+\n+  unsigned int write_index = 0;\n+  for (unsigned read_index = 0; read_index < vec_safe_length (offload_funcs);\n+       read_index++)\n+    {\n+      tree fn_decl = (*offload_funcs)[read_index];\n+      bool remove_p = cgraph_node::get (fn_decl) == NULL;\n+      if (remove_p)\n+\tcontinue;\n+\n+      DECL_PRESERVE_P (fn_decl) = 1;\n+\n+      if (write_index != read_index)\n+\t(*offload_funcs)[write_index] = (*offload_funcs)[read_index];\n+\n+      write_index++;\n+    }\n+\n+  offload_funcs->truncate (write_index);\n+}\n+\n /* Main entry point from the pass manager.  */\n \n void\n@@ -2355,6 +2385,8 @@ lto_output (void)\n   int i, n_nodes;\n   lto_symtab_encoder_t encoder = lto_get_out_decl_state ()->symtab_node_encoder;\n \n+  prune_offload_funcs ();\n+\n   if (flag_checking)\n     output = lto_bitmap_alloc ();\n "}, {"sha": "663711b3aa4913111180f15291c62b26beeaf4aa", "filename": "gcc/omp-expand.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60bf575ccb787310f5f3063b036498de7e9c2c6b/gcc%2Fomp-expand.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60bf575ccb787310f5f3063b036498de7e9c2c6b/gcc%2Fomp-expand.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomp-expand.c?ref=60bf575ccb787310f5f3063b036498de7e9c2c6b", "patch": "@@ -7058,7 +7058,11 @@ expand_omp_target (struct omp_region *region)\n \n       /* Add the new function to the offload table.  */\n       if (ENABLE_OFFLOADING)\n-\tvec_safe_push (offload_funcs, child_fn);\n+\t{\n+\t  if (in_lto_p)\n+\t    DECL_PRESERVE_P (child_fn) = 1;\n+\t  vec_safe_push (offload_funcs, child_fn);\n+\t}\n \n       bool need_asm = DECL_ASSEMBLER_NAME_SET_P (current_function_decl)\n \t\t      && !DECL_ASSEMBLER_NAME_SET_P (child_fn);"}, {"sha": "0a53eaa63464ddef22faf7faeca537fec6f284c8", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60bf575ccb787310f5f3063b036498de7e9c2c6b/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60bf575ccb787310f5f3063b036498de7e9c2c6b/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=60bf575ccb787310f5f3063b036498de7e9c2c6b", "patch": "@@ -1,3 +1,9 @@\n+2017-12-30  Tom de Vries  <tom@codesourcery.com>\n+\n+\tPR libgomp/83046\n+\t* testsuite/libgomp.oacc-c-c++-common/pr83046.c: New test.\n+\t* testsuite/libgomp.c-c++-common/pr83046.c: New test.\n+\n 2017-12-27  Tom de Vries  <tom@codesourcery.com>\n \n \tPR c++/83046"}, {"sha": "90dcb704fb39f200f4e97952d9ceeec79fa18708", "filename": "libgomp/testsuite/libgomp.c-c++-common/pr83046.c", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60bf575ccb787310f5f3063b036498de7e9c2c6b/libgomp%2Ftestsuite%2Flibgomp.c-c%2B%2B-common%2Fpr83046.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60bf575ccb787310f5f3063b036498de7e9c2c6b/libgomp%2Ftestsuite%2Flibgomp.c-c%2B%2B-common%2Fpr83046.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.c-c%2B%2B-common%2Fpr83046.c?ref=60bf575ccb787310f5f3063b036498de7e9c2c6b", "patch": "@@ -0,0 +1,25 @@\n+/* { dg-do link } */\n+\n+#define N 100\n+\n+int\n+main ()\n+{\n+  int a[N];\n+  int i, x;\n+  int c;\n+\n+  c = 1;\n+#pragma omp target\n+  for (i = 0; i < 100; i++)\n+    a[i] = 0;\n+\n+  if (c)\n+    __builtin_unreachable ();\n+\n+#pragma omp target\n+  for (i = 0; i < 100; i++)\n+    a[i] = 1;\n+\n+  return 0;\n+}"}, {"sha": "a2a085c5fb2b1585c376d19dd8417c9864e58771", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/pr83046.c", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60bf575ccb787310f5f3063b036498de7e9c2c6b/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fpr83046.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60bf575ccb787310f5f3063b036498de7e9c2c6b/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fpr83046.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fpr83046.c?ref=60bf575ccb787310f5f3063b036498de7e9c2c6b", "patch": "@@ -0,0 +1,25 @@\n+/* { dg-do link } */\n+\n+#define N 100\n+\n+int\n+main ()\n+{\n+  int a[N];\n+  int i, x;\n+  int c;\n+\n+  c = 1;\n+#pragma acc parallel loop\n+  for (i = 0; i < 100; i++)\n+    a[i] = 0;\n+\n+  if (c)\n+    __builtin_unreachable ();\n+\n+#pragma acc parallel loop\n+  for (i = 0; i < 100; i++)\n+    a[i] = 1;\n+\n+  return 0;\n+}"}]}