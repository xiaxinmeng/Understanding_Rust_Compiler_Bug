{"sha": "13da0507f3edc3732100780d2c54a2402b7ea124", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTNkYTA1MDdmM2VkYzM3MzIxMDA3ODBkMmM1NGEyNDAyYjdlYTEyNA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2016-07-19T16:47:30Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-07-19T16:47:30Z"}, "message": "re PR middle-end/71734 (FAIL: libgomp.fortran/simd4.f90   -O3 -g  execution test)\n\n\tPR middle-end/71734\n\t* g++.dg/vect/pr70729.cc: Don't include string.h or xmmintrin.h.\n\t(my_alloc): Rewritten to use __builtin_posix_memalign and\n\t__SIZE_TYPE__.\n\t(my_free): Use __builtin_free instead of _mm_free.\n\t(Vec::operator=): Use __builtin_memcpy.\n\nFrom-SVN: r238482", "tree": {"sha": "5e3346af5f7cc36222103c42ad54ee7fb381918c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5e3346af5f7cc36222103c42ad54ee7fb381918c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/13da0507f3edc3732100780d2c54a2402b7ea124", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13da0507f3edc3732100780d2c54a2402b7ea124", "html_url": "https://github.com/Rust-GCC/gccrs/commit/13da0507f3edc3732100780d2c54a2402b7ea124", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13da0507f3edc3732100780d2c54a2402b7ea124/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fecfbfa4a290992437a99977381e29815ed9199d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fecfbfa4a290992437a99977381e29815ed9199d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fecfbfa4a290992437a99977381e29815ed9199d"}], "stats": {"total": 19, "additions": 12, "deletions": 7}, "files": [{"sha": "00f0274a0187ec011183e7a8c7970673d9ad8eef", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13da0507f3edc3732100780d2c54a2402b7ea124/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13da0507f3edc3732100780d2c54a2402b7ea124/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=13da0507f3edc3732100780d2c54a2402b7ea124", "patch": "@@ -1,3 +1,12 @@\n+2016-07-19  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/71734\n+\t* g++.dg/vect/pr70729.cc: Don't include string.h or xmmintrin.h.\n+\t(my_alloc): Rewritten to use __builtin_posix_memalign and\n+\t__SIZE_TYPE__.\n+\t(my_free): Use __builtin_free instead of _mm_free.\n+\t(Vec::operator=): Use __builtin_memcpy.\n+\n 2016-07-19  Martin Jambor  <mjambor@suse.cz>\n \n         PR fortran/71688"}, {"sha": "ff868f7a41be4f08f4bfa9a45291c0c021d213f2", "filename": "gcc/testsuite/g++.dg/vect/pr70729.cc", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13da0507f3edc3732100780d2c54a2402b7ea124/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fvect%2Fpr70729.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13da0507f3edc3732100780d2c54a2402b7ea124/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fvect%2Fpr70729.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fvect%2Fpr70729.cc?ref=13da0507f3edc3732100780d2c54a2402b7ea124", "patch": "@@ -2,12 +2,8 @@\n // { dg-additional-options \"-ffast-math -fopenmp-simd\" }\n // { dg-additional-options \"-msse2\" { target x86_64-*-* i?86-*-* } }\n \n-\n-#include <string.h>\n-#include <xmmintrin.h>\n-\n-inline void* my_alloc (size_t bytes) {return _mm_malloc (bytes, 128);}\n-inline void my_free (void* memory) {_mm_free (memory);}\n+inline void* my_alloc (__SIZE_TYPE__ bytes) {void *ptr; __builtin_posix_memalign (&ptr, bytes, 128);}\n+inline void my_free (void* memory) {__builtin_free (memory);}\n \n template <typename T>\n class Vec\n@@ -23,7 +19,7 @@ class Vec\n   Vec& operator = (const Vec& other)\t\n     {\n       if (this != &other)\n-\tmemcpy (data, other.data, isize*sizeof (T));\n+\t__builtin_memcpy (data, other.data, isize*sizeof (T));\n       return *this;\n     }\n "}]}