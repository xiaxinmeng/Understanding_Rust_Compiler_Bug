{"sha": "ab51eb25ba9e1c08d637d61e38eac6709f596574", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWI1MWViMjViYTllMWMwOGQ2MzdkNjFlMzhlYWM2NzA5ZjU5NjU3NA==", "commit": {"author": {"name": "Nick Clifton", "email": "nickc@redhat.com", "date": "2001-02-09T18:47:05Z"}, "committer": {"name": "Nick Clifton", "email": "nickc@gcc.gnu.org", "date": "2001-02-09T18:47:05Z"}, "message": "Change output contraint on post inc load/store multiple patterns to be a\nread/write contraint.\n\nFrom-SVN: r39566", "tree": {"sha": "9626a5d2066e5f57c3fc135552b053888e4e4c6a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9626a5d2066e5f57c3fc135552b053888e4e4c6a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ab51eb25ba9e1c08d637d61e38eac6709f596574", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab51eb25ba9e1c08d637d61e38eac6709f596574", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ab51eb25ba9e1c08d637d61e38eac6709f596574", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab51eb25ba9e1c08d637d61e38eac6709f596574/comments", "author": {"login": "nickclifton", "id": 31441682, "node_id": "MDQ6VXNlcjMxNDQxNjgy", "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nickclifton", "html_url": "https://github.com/nickclifton", "followers_url": "https://api.github.com/users/nickclifton/followers", "following_url": "https://api.github.com/users/nickclifton/following{/other_user}", "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}", "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions", "organizations_url": "https://api.github.com/users/nickclifton/orgs", "repos_url": "https://api.github.com/users/nickclifton/repos", "events_url": "https://api.github.com/users/nickclifton/events{/privacy}", "received_events_url": "https://api.github.com/users/nickclifton/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "929408ba116e0fc455bbf64c3d94f93634201bc8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/929408ba116e0fc455bbf64c3d94f93634201bc8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/929408ba116e0fc455bbf64c3d94f93634201bc8"}], "stats": {"total": 41, "additions": 23, "deletions": 18}, "files": [{"sha": "fa213ddd692bf7381c0baf5439041fb57b409d1b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab51eb25ba9e1c08d637d61e38eac6709f596574/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab51eb25ba9e1c08d637d61e38eac6709f596574/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ab51eb25ba9e1c08d637d61e38eac6709f596574", "patch": "@@ -1,3 +1,8 @@\n+2001-02-09  Nick Clifton  <nickc@redhat.com>\n+\n+\t* config/arm/arm.md: Change output contraint on post inc\n+\tload/store multiple patterns to be a read/write contraint.\n+\n 2001-02-09  Neil Booth  <neil@daikokuya.demon.co.uk>\n \n         * gcc.c (cpp_options): Delete .d files on error.  Don't delete"}, {"sha": "f69e0fee17015a3bae13a6f21ab7b5fcb107be4a", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab51eb25ba9e1c08d637d61e38eac6709f596574/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab51eb25ba9e1c08d637d61e38eac6709f596574/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=ab51eb25ba9e1c08d637d61e38eac6709f596574", "patch": "@@ -2757,7 +2757,7 @@\n )\n \n (define_insn \"negsf2\"\n-  [(set (match_operand:SF 0 \"s_register_operand\" \"=f\")\n+  [(set (match_operand:SF         0 \"s_register_operand\" \"=f\")\n \t(neg:SF (match_operand:SF 1 \"s_register_operand\" \"f\")))]\n   \"TARGET_ARM && TARGET_HARD_FLOAT\"\n   \"mnf%?s\\\\t%0, %1\"\n@@ -2766,7 +2766,7 @@\n )\n \n (define_insn \"negdf2\"\n-  [(set (match_operand:DF 0 \"s_register_operand\" \"=f\")\n+  [(set (match_operand:DF         0 \"s_register_operand\" \"=f\")\n \t(neg:DF (match_operand:DF 1 \"s_register_operand\" \"f\")))]\n   \"TARGET_ARM && TARGET_HARD_FLOAT\"\n   \"mnf%?d\\\\t%0, %1\"\n@@ -2799,7 +2799,7 @@\n ;; (neg (abs...))\n \n (define_insn \"abssi2\"\n-  [(set (match_operand:SI 0 \"s_register_operand\" \"=r,&r\")\n+  [(set (match_operand:SI         0 \"s_register_operand\" \"=r,&r\")\n \t(abs:SI (match_operand:SI 1 \"s_register_operand\" \"0,r\")))\n    (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_ARM\"\n@@ -2827,7 +2827,7 @@\n )\n \n (define_insn \"abssf2\"\n-  [(set (match_operand:SF 0 \"s_register_operand\" \"=f\")\n+  [(set (match_operand:SF          0 \"s_register_operand\" \"=f\")\n \t (abs:SF (match_operand:SF 1 \"s_register_operand\" \"f\")))]\n   \"TARGET_ARM && TARGET_HARD_FLOAT\"\n   \"abs%?s\\\\t%0, %1\"\n@@ -2836,7 +2836,7 @@\n )\n \n (define_insn \"absdf2\"\n-  [(set (match_operand:DF 0 \"s_register_operand\" \"=f\")\n+  [(set (match_operand:DF         0 \"s_register_operand\" \"=f\")\n \t(abs:DF (match_operand:DF 1 \"s_register_operand\" \"f\")))]\n   \"TARGET_ARM && TARGET_HARD_FLOAT\"\n   \"abs%?d\\\\t%0, %1\"\n@@ -3034,7 +3034,7 @@\n ;; Fixed <--> Floating conversion insns\n \n (define_insn \"floatsisf2\"\n-  [(set (match_operand:SF 0 \"s_register_operand\" \"=f\")\n+  [(set (match_operand:SF           0 \"s_register_operand\" \"=f\")\n \t(float:SF (match_operand:SI 1 \"s_register_operand\" \"r\")))]\n   \"TARGET_ARM && TARGET_HARD_FLOAT\"\n   \"flt%?s\\\\t%0, %1\"\n@@ -3043,7 +3043,7 @@\n )\n \n (define_insn \"floatsidf2\"\n-  [(set (match_operand:DF 0 \"s_register_operand\" \"=f\")\n+  [(set (match_operand:DF           0 \"s_register_operand\" \"=f\")\n \t(float:DF (match_operand:SI 1 \"s_register_operand\" \"r\")))]\n   \"TARGET_ARM && TARGET_HARD_FLOAT\"\n   \"flt%?d\\\\t%0, %1\"\n@@ -3061,7 +3061,7 @@\n )\n \n (define_insn \"fix_truncsfsi2\"\n-  [(set (match_operand:SI 0 \"s_register_operand\" \"=r\")\n+  [(set (match_operand:SI         0 \"s_register_operand\" \"=r\")\n \t(fix:SI (match_operand:SF 1 \"s_register_operand\" \"f\")))]\n   \"TARGET_ARM && TARGET_HARD_FLOAT\"\n   \"fix%?z\\\\t%0, %1\"\n@@ -3070,7 +3070,7 @@\n )\n \n (define_insn \"fix_truncdfsi2\"\n-  [(set (match_operand:SI 0 \"s_register_operand\" \"=r\")\n+  [(set (match_operand:SI         0 \"s_register_operand\" \"=r\")\n \t(fix:SI (match_operand:DF 1 \"s_register_operand\" \"f\")))]\n   \"TARGET_ARM && TARGET_HARD_FLOAT\"\n   \"fix%?z\\\\t%0, %1\"\n@@ -3949,8 +3949,7 @@\n (define_insn \"*arm_movdi\"\n   [(set (match_operand:DI 0 \"nonimmediate_di_operand\" \"=r, r, o<>\")\n \t(match_operand:DI 1 \"di_operand\"              \"rIK,mi,r\"))]\n-  \"TARGET_ARM\n-  \"\n+  \"TARGET_ARM\"\n   \"*\n   return (output_move_double (operands));\n   \"\n@@ -5240,7 +5239,7 @@\n \n (define_insn \"*ldmsi_postinc4\"\n   [(match_parallel 0 \"load_multiple_operation\"\n-    [(set (match_operand:SI 1 \"s_register_operand\" \"=r\")\n+    [(set (match_operand:SI 1 \"s_register_operand\" \"+r\")\n \t  (plus:SI (match_operand:SI 2 \"s_register_operand\" \"1\")\n \t\t   (const_int 16)))\n      (set (match_operand:SI 3 \"arm_hard_register_operand\" \"\")\n@@ -5259,7 +5258,7 @@\n \n (define_insn \"*ldmsi_postinc3\"\n   [(match_parallel 0 \"load_multiple_operation\"\n-    [(set (match_operand:SI 1 \"s_register_operand\" \"=r\")\n+    [(set (match_operand:SI 1 \"s_register_operand\" \"+r\")\n \t  (plus:SI (match_operand:SI 2 \"s_register_operand\" \"1\")\n \t\t   (const_int 12)))\n      (set (match_operand:SI 3 \"arm_hard_register_operand\" \"\")\n@@ -5276,7 +5275,7 @@\n \n (define_insn \"*ldmsi_postinc2\"\n   [(match_parallel 0 \"load_multiple_operation\"\n-    [(set (match_operand:SI 1 \"s_register_operand\" \"=r\")\n+    [(set (match_operand:SI 1 \"s_register_operand\" \"+r\")\n \t  (plus:SI (match_operand:SI 2 \"s_register_operand\" \"1\")\n \t\t   (const_int 8)))\n      (set (match_operand:SI 3 \"arm_hard_register_operand\" \"\")\n@@ -5362,7 +5361,7 @@\n \n (define_insn \"*stmsi_postinc4\"\n   [(match_parallel 0 \"store_multiple_operation\"\n-    [(set (match_operand:SI 1 \"s_register_operand\" \"=r\")\n+    [(set (match_operand:SI 1 \"s_register_operand\" \"+r\")\n \t  (plus:SI (match_operand:SI 2 \"s_register_operand\" \"1\")\n \t\t   (const_int 16)))\n      (set (mem:SI (match_dup 2))\n@@ -5381,7 +5380,7 @@\n \n (define_insn \"*stmsi_postinc3\"\n   [(match_parallel 0 \"store_multiple_operation\"\n-    [(set (match_operand:SI 1 \"s_register_operand\" \"=r\")\n+    [(set (match_operand:SI 1 \"s_register_operand\" \"+r\")\n \t  (plus:SI (match_operand:SI 2 \"s_register_operand\" \"1\")\n \t\t   (const_int 12)))\n      (set (mem:SI (match_dup 2))\n@@ -5398,7 +5397,7 @@\n \n (define_insn \"*stmsi_postinc2\"\n   [(match_parallel 0 \"store_multiple_operation\"\n-    [(set (match_operand:SI 1 \"s_register_operand\" \"=r\")\n+    [(set (match_operand:SI 1 \"s_register_operand\" \"+r\")\n \t  (plus:SI (match_operand:SI 2 \"s_register_operand\" \"1\")\n \t\t   (const_int 8)))\n      (set (mem:SI (match_dup 2))\n@@ -8615,7 +8614,8 @@\n \t(match_operand:SI 1 \"s_register_operand\" \"\"))\n    (set (reg:CC CC_REGNUM)\n \t(compare:CC (match_dup 1) (const_int 0)))]\n-  \"TARGET_ARM\"\n+  \"TARGET_ARM\n+  \"\n   [(parallel [(set (reg:CC CC_REGNUM) (compare:CC (match_dup 1) (const_int 0)))\n \t      (set (match_dup 0) (match_dup 1))])]\n   \"\""}]}