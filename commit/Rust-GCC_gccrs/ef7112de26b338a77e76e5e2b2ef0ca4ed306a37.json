{"sha": "ef7112de26b338a77e76e5e2b2ef0ca4ed306a37", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWY3MTEyZGUyNmIzMzhhNzdlNzZlNWUyYjJlZjBjYTRlZDMwNmEzNw==", "commit": {"author": {"name": "Nick Clifton", "email": "nickc@cambridge.redhat.com", "date": "2001-08-31T17:09:58Z"}, "committer": {"name": "Nick Clifton", "email": "nickc@gcc.gnu.org", "date": "2001-08-31T17:09:58Z"}, "message": "Account for FP registers saved to stack during prologue\n\nFrom-SVN: r45325", "tree": {"sha": "80724a69e47ab1e9e7bea1b1a982f2364ae924ff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/80724a69e47ab1e9e7bea1b1a982f2364ae924ff"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ef7112de26b338a77e76e5e2b2ef0ca4ed306a37", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef7112de26b338a77e76e5e2b2ef0ca4ed306a37", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef7112de26b338a77e76e5e2b2ef0ca4ed306a37", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef7112de26b338a77e76e5e2b2ef0ca4ed306a37/comments", "author": null, "committer": null, "parents": [{"sha": "7566ca495a0f9e88367203d3aa862406cc0fa8ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7566ca495a0f9e88367203d3aa862406cc0fa8ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7566ca495a0f9e88367203d3aa862406cc0fa8ed"}], "stats": {"total": 36, "additions": 32, "deletions": 4}, "files": [{"sha": "34785e91c41bced16f1d5deef45d36521b23066d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef7112de26b338a77e76e5e2b2ef0ca4ed306a37/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef7112de26b338a77e76e5e2b2ef0ca4ed306a37/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ef7112de26b338a77e76e5e2b2ef0ca4ed306a37", "patch": "@@ -122,6 +122,18 @@ Thu Aug 30 10:21:43 2001  J\"orn Rennecke <amylaar@redhat.com>\n \t* c-typeck.c (pointer_diff): Try to eliminate common term before\n \tdoing conversions.\n \n+2001-08-30  Nick Clifton  <nickc@cambridge.redhat.com>\n+\n+\t* config/arm/arm.c (arm_compute_initial_elimination_offset):\n+\tAccount for the saves of the FP registers.\n+\n+\t* config/arm/unknown-elf.h (TEXT_SECTION): Delete.\n+\t(TEXT_SECTION_ASM_OP): Define.\n+\t(INIT_SECTION_ASM_OP): Define.\n+\t(FINI_SECTION_ASM_OP): Define.\n+\t(SUBTARGET_EXTRA_SECTIONS): Remove trailing comma.\n+\t(RDATA_SECTION_FUNCITON): Provide prototype.\n+\n 2001-08-29  Geoffrey Keating  <geoffk@redhat.com>\n \n \t* reload1.c (move2add_note_store): Correct typo checking for"}, {"sha": "c3f4e2eadefa3515974e97254cf6db1d01196a28", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef7112de26b338a77e76e5e2b2ef0ca4ed306a37/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef7112de26b338a77e76e5e2b2ef0ca4ed306a37/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=ef7112de26b338a77e76e5e2b2ef0ca4ed306a37", "patch": "@@ -7943,16 +7943,23 @@ arm_compute_initial_elimination_offset (from, to)\n     {\n       unsigned int reg;\n \n+      /* In theory we should check all of the hard registers to\n+\t see if they will be saved onto the stack.  In practice\n+\t registers 11 upwards have special meanings and need to\n+\t be check individually.  */\n       for (reg = 0; reg <= 10; reg ++)\n \tif (regs_ever_live[reg] && ! call_used_regs[reg])\n \t  call_saved_registers += 4;\n \n+      /* Determine if register 11 will be clobbered.  */\n       if (! TARGET_APCS_FRAME\n \t  && ! frame_pointer_needed\n \t  && regs_ever_live[HARD_FRAME_POINTER_REGNUM]\n \t  && ! call_used_regs[HARD_FRAME_POINTER_REGNUM])\n \tcall_saved_registers += 4;\n \n+      /* The PIC register is fixed, so if the function will\n+\t corrupt it, it has to be saved onto the stack.  */\n       if (flag_pic && regs_ever_live[PIC_OFFSET_TABLE_REGNUM])\n \tcall_saved_registers += 4;\n \n@@ -7962,15 +7969,20 @@ arm_compute_initial_elimination_offset (from, to)\n \t     for it here.  */\n \t  && ! frame_pointer_needed)\n \tcall_saved_registers += 4;\n+\n+      /* If the hard floating point registers are going to be\n+\t used then they must be saved on the stack as well.\n+         Each register occupies 12 bytes of stack space.  */\n+      for (reg = FIRST_ARM_FP_REGNUM; reg <= LAST_ARM_FP_REGNUM; reg ++)\n+\tif (regs_ever_live[reg] && ! call_used_regs[reg])\n+\t  call_saved_registers += 12;\n     }\n \n   /* The stack frame contains 4 registers - the old frame pointer,\n      the old stack pointer, the return address and PC of the start\n      of the function.  */\n   stack_frame = frame_pointer_needed ? 16 : 0;\n \n-  /* FIXME: we should allow for saved floating point registers.  */\n-\n   /* OK, now we have enough information to compute the distances.\n      There must be an entry in these switch tables for each pair\n      of registers in ELIMINABLE_REGS, even if some of the entries"}, {"sha": "aa6927815d1ffff7a5d8952743338282daaec6f9", "filename": "gcc/config/arm/unknown-elf.h", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef7112de26b338a77e76e5e2b2ef0ca4ed306a37/gcc%2Fconfig%2Farm%2Funknown-elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef7112de26b338a77e76e5e2b2ef0ca4ed306a37/gcc%2Fconfig%2Farm%2Funknown-elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Funknown-elf.h?ref=ef7112de26b338a77e76e5e2b2ef0ca4ed306a37", "patch": "@@ -37,7 +37,9 @@ Boston, MA 02111-1307, USA.  */\n #define USER_LABEL_PREFIX \t\"\"\n #define LOCAL_LABEL_PREFIX \t\".\"\n \n-#define TEXT_SECTION \"\t\t.text\"\n+#define TEXT_SECTION_ASM_OP \t\"\\t.text\"\n+#define INIT_SECTION_ASM_OP\t\"\\t.section\\t.init\"\n+#define FINI_SECTION_ASM_OP\t\"\\t.section\\t.fini\"\n \n #define INVOKE__main\n \n@@ -51,14 +53,16 @@ Boston, MA 02111-1307, USA.  */\n \n /* A list of other sections which the compiler might be \"in\" at any\n    given time.  */\n-#define SUBTARGET_EXTRA_SECTIONS in_rdata,\n+#define SUBTARGET_EXTRA_SECTIONS in_rdata\n \n /* A list of extra section function definitions.  */\n #define SUBTARGET_EXTRA_SECTION_FUNCTIONS\tRDATA_SECTION_FUNCTION\n   \n #define RDATA_SECTION_ASM_OP\t\"\\t.section .rodata\"\n \n #define RDATA_SECTION_FUNCTION \t\t\t\t\t\\\n+void rdata_section PARAMS ((void));\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\\\n void\t\t\t\t\t\t\t\t\\\n rdata_section ()\t\t\t\t\t\t\\\n {\t\t\t\t\t\t\t\t\\"}]}