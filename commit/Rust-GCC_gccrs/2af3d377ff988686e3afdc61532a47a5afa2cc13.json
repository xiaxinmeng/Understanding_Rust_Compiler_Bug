{"sha": "2af3d377ff988686e3afdc61532a47a5afa2cc13", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmFmM2QzNzdmZjk4ODY4NmUzYWZkYzYxNTMyYTQ3YTVhZmEyY2MxMw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-07-19T22:09:05Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-07-19T22:09:05Z"}, "message": "(current_file_function_operand): New function.\n\nFrom-SVN: r4941", "tree": {"sha": "536ba592c81352380d20a46baa109f3832402fa2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/536ba592c81352380d20a46baa109f3832402fa2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2af3d377ff988686e3afdc61532a47a5afa2cc13", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2af3d377ff988686e3afdc61532a47a5afa2cc13", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2af3d377ff988686e3afdc61532a47a5afa2cc13", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2af3d377ff988686e3afdc61532a47a5afa2cc13/comments", "author": null, "committer": null, "parents": [{"sha": "733fa7ef0a546a980f6bcc02065ed8a467edec18", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/733fa7ef0a546a980f6bcc02065ed8a467edec18", "html_url": "https://github.com/Rust-GCC/gccrs/commit/733fa7ef0a546a980f6bcc02065ed8a467edec18"}], "stats": {"total": 15, "additions": 15, "deletions": 0}, "files": [{"sha": "4eb685d3fb1cb3f3572d0e6500441b9088b517aa", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2af3d377ff988686e3afdc61532a47a5afa2cc13/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2af3d377ff988686e3afdc61532a47a5afa2cc13/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=2af3d377ff988686e3afdc61532a47a5afa2cc13", "patch": "@@ -383,6 +383,21 @@ call_operand (op, mode)\n \t  || (GET_CODE (op) == REG && REGNO (op) >= FIRST_PSEUDO_REGISTER));\n }\n \n+\n+/* Return 1 if the operand is a SYMBOL_REF for a function known to be in\n+   this file.  */\n+\n+int\n+current_file_function_operand (op, mode)\n+     register rtx op;\n+     enum machine_mode mode;\n+{\n+  return (GET_CODE (op) == SYMBOL_REF\n+\t  && (SYMBOL_REF_FLAG (op)\n+\t      || op == XEXP (DECL_RTL (current_function_decl), 0)));\n+}\n+\n+\n /* Return 1 if this operand is a valid input for a move insn.  */\n \n int"}]}