{"sha": "5fc312a98e9b06eac9e865f511a327b264056d66", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWZjMzEyYTk4ZTliMDZlYWM5ZTg2NWY1MTFhMzI3YjI2NDA1NmQ2Ng==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-06-16T12:14:03Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-06-17T06:32:27Z"}, "message": "gcov: fix gcov-tool merge for TOPN counters\n\nlibgcc/ChangeLog:\n\n\t* libgcov-util.c (read_gcda_finalize): Remove const operator.\n\t(merge_wrapper): Add both counts and use them properly.\n\t(topn_to_memory_representation): New function.\n\t(gcov_merge): Covert on disk representation to in memory\n\trepresentation.\n\t* libgcov.h: Remove const operator.", "tree": {"sha": "ab5bbdb46de04324f60dff330ad039e65e2665a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ab5bbdb46de04324f60dff330ad039e65e2665a9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5fc312a98e9b06eac9e865f511a327b264056d66", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCAAdFiEE6I4wzqqylQBfXaRhTcGC3A+nN4UFAl7puPsACgkQTcGC3A+n\nN4U18ggAkxVyMCh5O3G++q3Xmnrh1rEum5rsppq9JXLwC4gLC2J2GNoM+/FHMU1/\n0XfZ3j1CNlEFAMcXTXt7Old3NyanxNJ8RPOc9Y9mLN4imGJPEfxVfqQbrYvqhUZE\nS4xaYn7HJNe/zVkdjounmsVYlh6/INDXJgN9TxJr8xG37RQFWtXf168UrA1Ny2TD\nNLpF+RfS/0InZn0vu3L2bS+gHc3tfzjdK4bhG/FxWXMCK/PQj5PJNp093ezwsH9A\nIbfSPDJsJ28PRffxRoFzKUXW4yZux52lgrYGIi62jJ5MdDoN5rjv9cLy1U8csryT\nXJjYtqkVlyWlaYAnPGi05gavTSD69g==\n=ynQj\n-----END PGP SIGNATURE-----", "payload": "tree ab5bbdb46de04324f60dff330ad039e65e2665a9\nparent 56638b9b1853666f575928f8baf17f70e4ed3517\nauthor Martin Liska <mliska@suse.cz> 1592309643 +0200\ncommitter Martin Liska <mliska@suse.cz> 1592375547 +0200\n\ngcov: fix gcov-tool merge for TOPN counters\n\nlibgcc/ChangeLog:\n\n\t* libgcov-util.c (read_gcda_finalize): Remove const operator.\n\t(merge_wrapper): Add both counts and use them properly.\n\t(topn_to_memory_representation): New function.\n\t(gcov_merge): Covert on disk representation to in memory\n\trepresentation.\n\t* libgcov.h: Remove const operator.\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5fc312a98e9b06eac9e865f511a327b264056d66", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5fc312a98e9b06eac9e865f511a327b264056d66", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5fc312a98e9b06eac9e865f511a327b264056d66/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "56638b9b1853666f575928f8baf17f70e4ed3517", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56638b9b1853666f575928f8baf17f70e4ed3517", "html_url": "https://github.com/Rust-GCC/gccrs/commit/56638b9b1853666f575928f8baf17f70e4ed3517"}], "stats": {"total": 72, "additions": 61, "deletions": 11}, "files": [{"sha": "224c190ee6330402151d61d441fb6ec3436d9219", "filename": "libgcc/libgcov-util.c", "status": "modified", "additions": 60, "deletions": 10, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fc312a98e9b06eac9e865f511a327b264056d66/libgcc%2Flibgcov-util.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fc312a98e9b06eac9e865f511a327b264056d66/libgcc%2Flibgcov-util.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Flibgcov-util.c?ref=5fc312a98e9b06eac9e865f511a327b264056d66", "patch": "@@ -243,7 +243,7 @@ read_gcda_finalize (struct gcov_info *obj_info)\n   /* We set the following fields: merge, n_functions, functions\n      and summary.  */\n   obj_info->n_functions = num_fn_info;\n-  obj_info->functions = (const struct gcov_fn_info**) obstack_finish (&fn_info);\n+  obj_info->functions = (struct gcov_fn_info**) obstack_finish (&fn_info);\n \n   /* wrap all the counter array.  */\n   for (i=0; i< GCOV_COUNTERS; i++)\n@@ -506,14 +506,58 @@ gcov_get_merge_weight (void)\n    value buffer and weights and then calls the merge function.  */\n \n static void\n-merge_wrapper (gcov_merge_fn f, gcov_type *v1, gcov_unsigned_t n,\n-               gcov_type *v2, unsigned w)\n+merge_wrapper (gcov_merge_fn f, gcov_type *v1, gcov_unsigned_t n1,\n+\t       gcov_type *v2, gcov_unsigned_t n2, unsigned w)\n {\n   gcov_value_buf = v2;\n   gcov_value_buf_pos = 0;\n-  gcov_value_buf_size = n;\n+  gcov_value_buf_size = n2;\n   gcov_merge_weight = w;\n-  (*f) (v1, n);\n+  (*f) (v1, n1);\n+}\n+\n+/* Convert on disk representation of a TOPN counter to in memory representation\n+   that is expected from __gcov_merge_topn function.  */\n+\n+static void\n+topn_to_memory_representation (struct gcov_ctr_info *info)\n+{\n+  auto_vec<gcov_type> output;\n+  gcov_type *values = info->values;\n+  int count = info->num;\n+\n+  while (count > 0)\n+    {\n+      output.safe_push (values[0]);\n+      gcov_type n = values[1];\n+      output.safe_push (n);\n+      if (n > 0)\n+\t{\n+\t  struct gcov_kvp *tuples\n+\t    = (struct gcov_kvp *)xcalloc (sizeof (struct gcov_kvp), n);\n+\t  for (unsigned i = 0; i < n - 1; i++)\n+\t    tuples[i].next = &tuples[i + 1];\n+\t  for (unsigned i = 0; i < n; i++)\n+\t    {\n+\t      tuples[i].value = values[2 + 2 * i];\n+\t      tuples[i].count = values[2 + 2 * i + 1];\n+\t    }\n+\t  output.safe_push ((intptr_t)&tuples[0]);\n+\t}\n+      else\n+\toutput.safe_push (0);\n+\n+      unsigned len = 2 * n + 2;\n+      values += len;\n+      count -= len;\n+    }\n+  gcc_assert (count == 0);\n+\n+  /* Allocate new buffer and copy it there.  */\n+  info->num = output.length ();\n+  info->values = (gcov_type *)xmalloc (sizeof (gcov_type) * info->num);\n+  for (unsigned i = 0; i < info->num; i++)\n+    info->values[i] = output[i];\n }\n \n /* Offline tool to manipulate profile data.\n@@ -543,9 +587,9 @@ gcov_merge (struct gcov_info *info1, struct gcov_info *info2, int w)\n   for (f_ix = 0; f_ix < n_functions; f_ix++)\n     {\n       unsigned t_ix;\n-      const struct gcov_fn_info *gfi_ptr1 = info1->functions[f_ix];\n-      const struct gcov_fn_info *gfi_ptr2 = info2->functions[f_ix];\n-      const struct gcov_ctr_info *ci_ptr1, *ci_ptr2;\n+      struct gcov_fn_info *gfi_ptr1 = info1->functions[f_ix];\n+      struct gcov_fn_info *gfi_ptr2 = info2->functions[f_ix];\n+      struct gcov_ctr_info *ci_ptr1, *ci_ptr2;\n \n       if (!gfi_ptr1 || gfi_ptr1->key != info1)\n         continue;\n@@ -569,8 +613,14 @@ gcov_merge (struct gcov_info *info1, struct gcov_info *info2, int w)\n           gcc_assert (merge1 == merge2);\n           if (!merge1)\n             continue;\n-          gcc_assert (ci_ptr1->num == ci_ptr2->num);\n-          merge_wrapper (merge1, ci_ptr1->values, ci_ptr1->num, ci_ptr2->values, w);\n+\n+\t  if (merge1 == __gcov_merge_topn)\n+\t    topn_to_memory_representation (ci_ptr1);\n+\t  else\n+\t    gcc_assert (ci_ptr1->num == ci_ptr2->num);\n+\n+\t  merge_wrapper (merge1, ci_ptr1->values, ci_ptr1->num,\n+\t\t\t ci_ptr2->values, ci_ptr2->num, w);\n           ci_ptr1++;\n           ci_ptr2++;\n         }"}, {"sha": "ffa9a690af448f6f308fa850963c04b69b04ab25", "filename": "libgcc/libgcov.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fc312a98e9b06eac9e865f511a327b264056d66/libgcc%2Flibgcov.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fc312a98e9b06eac9e865f511a327b264056d66/libgcc%2Flibgcov.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Flibgcov.h?ref=5fc312a98e9b06eac9e865f511a327b264056d66", "patch": "@@ -216,7 +216,7 @@ struct gcov_info\n   const struct gcov_fn_info *const *functions; /* pointer to pointers\n                                                   to function information  */\n #else\n-  const struct gcov_fn_info **functions;\n+  struct gcov_fn_info **functions;\n #endif /* !IN_GCOV_TOOL */\n };\n "}]}