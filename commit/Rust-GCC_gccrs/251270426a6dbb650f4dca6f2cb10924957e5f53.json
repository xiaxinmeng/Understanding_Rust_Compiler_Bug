{"sha": "251270426a6dbb650f4dca6f2cb10924957e5f53", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjUxMjcwNDI2YTZkYmI2NTBmNGRjYTZmMmNiMTA5MjQ5NTdlNWY1Mw==", "commit": {"author": {"name": "David Daney", "email": "ddaney@avtrex.com", "date": "2007-10-18T16:43:52Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2007-10-18T16:43:52Z"}, "message": "linux-unwind.h (mips_fallback_frame_state): Use new reg_offset variable to calculate register locations.\n\ngcc/\n2007-10-17  David Daney  <ddaney@avtrex.com>\n\n\t* config/mips/linux-unwind.h (mips_fallback_frame_state): Use new\n\treg_offset variable to calculate register locations.\n\nFrom-SVN: r129446", "tree": {"sha": "382d1f4d4e5bc84c1acd081ac18baba20b0c4fbe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/382d1f4d4e5bc84c1acd081ac18baba20b0c4fbe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/251270426a6dbb650f4dca6f2cb10924957e5f53", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/251270426a6dbb650f4dca6f2cb10924957e5f53", "html_url": "https://github.com/Rust-GCC/gccrs/commit/251270426a6dbb650f4dca6f2cb10924957e5f53", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/251270426a6dbb650f4dca6f2cb10924957e5f53/comments", "author": null, "committer": null, "parents": [{"sha": "e63637ea90863f9e06bda21f80c4c4c49d99c9ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e63637ea90863f9e06bda21f80c4c4c49d99c9ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e63637ea90863f9e06bda21f80c4c4c49d99c9ce"}], "stats": {"total": 17, "additions": 12, "deletions": 5}, "files": [{"sha": "125ae4580f741b8ee2739eea886e61f1c64cdd6a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/251270426a6dbb650f4dca6f2cb10924957e5f53/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/251270426a6dbb650f4dca6f2cb10924957e5f53/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=251270426a6dbb650f4dca6f2cb10924957e5f53", "patch": "@@ -1,3 +1,8 @@\n+2007-10-18  David Daney  <ddaney@avtrex.com>\n+\n+\t* config/mips/linux-unwind.h (mips_fallback_frame_state): Use new\n+\treg_offset variable to calculate register locations.\n+\n 2007-10-18  Richard Guenther  <rguenther@suse.de>\n \n \t* tree-ssa.c (uid_ssaname_map_eq): New function."}, {"sha": "ed0a84b2db320e86fd4f23d7aea2b76f5ed0e294", "filename": "gcc/config/mips/linux-unwind.h", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/251270426a6dbb650f4dca6f2cb10924957e5f53/gcc%2Fconfig%2Fmips%2Flinux-unwind.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/251270426a6dbb650f4dca6f2cb10924957e5f53/gcc%2Fconfig%2Fmips%2Flinux-unwind.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Flinux-unwind.h?ref=251270426a6dbb650f4dca6f2cb10924957e5f53", "patch": "@@ -52,7 +52,7 @@ mips_fallback_frame_state (struct _Unwind_Context *context,\n {\n   u_int32_t *pc = (u_int32_t *) context->ra;\n   struct sigcontext *sc;\n-  _Unwind_Ptr new_cfa;\n+  _Unwind_Ptr new_cfa, reg_offset;\n   int i;\n \n   /* 24021061 li v0, 0x1061 (rt_sigreturn)*/\n@@ -85,22 +85,24 @@ mips_fallback_frame_state (struct _Unwind_Context *context,\n   else\n     return _URC_END_OF_STACK;\n \n-  new_cfa = (_Unwind_Ptr)sc;\n+  new_cfa = (_Unwind_Ptr) sc;\n   fs->regs.cfa_how = CFA_REG_OFFSET;\n   fs->regs.cfa_reg = STACK_POINTER_REGNUM;\n   fs->regs.cfa_offset = new_cfa - (_Unwind_Ptr) context->cfa;\n \n-#if _MIPS_SIM == _ABIO32 && defined __MIPSEB__\n   /* On o32 Linux, the register save slots in the sigcontext are\n      eight bytes.  We need the lower half of each register slot,\n      so slide our view of the structure back four bytes.  */\n-  new_cfa -= 4;\n+#if _MIPS_SIM == _ABIO32 && defined __MIPSEB__\n+  reg_offset = 4;\n+#else\n+  reg_offset = 0;\n #endif\n \n   for (i = 0; i < 32; i++) {\n     fs->regs.reg[i].how = REG_SAVED_OFFSET;\n     fs->regs.reg[i].loc.offset\n-      = (_Unwind_Ptr)&(sc->sc_regs[i]) - new_cfa;\n+      = (_Unwind_Ptr)&(sc->sc_regs[i]) + reg_offset - new_cfa;\n   }\n   /* The PC points to the faulting instruction, but the unwind tables\n      expect it point to the following instruction.  We compensate by"}]}