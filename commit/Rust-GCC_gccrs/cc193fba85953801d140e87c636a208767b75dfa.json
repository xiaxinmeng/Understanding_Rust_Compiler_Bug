{"sha": "cc193fba85953801d140e87c636a208767b75dfa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2MxOTNmYmE4NTk1MzgwMWQxNDBlODdjNjM2YTIwODc2N2I3NWRmYQ==", "commit": {"author": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2012-06-29T14:48:08Z"}, "committer": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2012-06-29T14:48:08Z"}, "message": "system.h (CASE_USE_BIT_TESTS): Poison.\n\n\t* system.h (CASE_USE_BIT_TESTS): Poison.\n\t* stmt.c (CASE_USE_BIT_TESTS): Fold away into its only user ...\n\t(expand_switch_using_bit_tests_p): ...here.\n\t* doc/tm.texi.in (CASE_USE_BIT_TESTS): Remove documentation.\n\t* doc/tm.texi (CASE_USE_BIT_TESTS): Regenerate.\n\nFrom-SVN: r189078", "tree": {"sha": "ff5846aca298075f454abf75c2500eae0de6daa0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ff5846aca298075f454abf75c2500eae0de6daa0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cc193fba85953801d140e87c636a208767b75dfa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc193fba85953801d140e87c636a208767b75dfa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc193fba85953801d140e87c636a208767b75dfa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc193fba85953801d140e87c636a208767b75dfa/comments", "author": null, "committer": null, "parents": [{"sha": "7211c82f34d7962c2af32da025aa55c4c858e528", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7211c82f34d7962c2af32da025aa55c4c858e528", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7211c82f34d7962c2af32da025aa55c4c858e528"}], "stats": {"total": 44, "additions": 14, "deletions": 30}, "files": [{"sha": "b45840fda7ed2aa5b729dd985c059b791f9ff1b1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc193fba85953801d140e87c636a208767b75dfa/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc193fba85953801d140e87c636a208767b75dfa/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cc193fba85953801d140e87c636a208767b75dfa", "patch": "@@ -1,3 +1,11 @@\n+2012-06-29  Steven Bosscher  <steven@gcc.gnu.org>\n+\n+\t* system.h (CASE_USE_BIT_TESTS): Poison.\n+\t* stmt.c (CASE_USE_BIT_TESTS): Fold away into its only user ...\n+\t(expand_switch_using_bit_tests_p): ...here.\n+\t* doc/tm.texi.in (CASE_USE_BIT_TESTS): Remove documentation.\n+\t* doc/tm.texi (CASE_USE_BIT_TESTS): Regenerate.\n+\n 2012-06-29  Steven Bosscher  <steven@gcc.gnu.org>\n \n \t* system.h (IFCVT_EXTRA_FIELDS): Poison."}, {"sha": "a11e2c03ab550500183412675dff8b224bb92506", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc193fba85953801d140e87c636a208767b75dfa/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc193fba85953801d140e87c636a208767b75dfa/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=cc193fba85953801d140e87c636a208767b75dfa", "patch": "@@ -10306,16 +10306,6 @@ The default is four for machines with a @code{casesi} instruction and\n five otherwise.  This is best for most machines.\n @end deftypefn\n \n-@defmac CASE_USE_BIT_TESTS\n-Define this macro to be a C expression to indicate whether C switch\n-statements may be implemented by a sequence of bit tests.  This is\n-advantageous on processors that can efficiently implement left shift\n-of 1 by the number of bits held in a register, but inappropriate on\n-targets that would require a loop.  By default, this macro returns\n-@code{true} if the target defines an @code{ashlsi3} pattern, and\n-@code{false} otherwise.\n-@end defmac\n-\n @defmac WORD_REGISTER_OPERATIONS\n Define this macro if operations between registers with integral mode\n smaller than a word are always performed on the entire register."}, {"sha": "4ec246938063cb3db6ec7ed11c3c8cb9bcfc6c30", "filename": "gcc/doc/tm.texi.in", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc193fba85953801d140e87c636a208767b75dfa/gcc%2Fdoc%2Ftm.texi.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc193fba85953801d140e87c636a208767b75dfa/gcc%2Fdoc%2Ftm.texi.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi.in?ref=cc193fba85953801d140e87c636a208767b75dfa", "patch": "@@ -10180,16 +10180,6 @@ The default is four for machines with a @code{casesi} instruction and\n five otherwise.  This is best for most machines.\n @end deftypefn\n \n-@defmac CASE_USE_BIT_TESTS\n-Define this macro to be a C expression to indicate whether C switch\n-statements may be implemented by a sequence of bit tests.  This is\n-advantageous on processors that can efficiently implement left shift\n-of 1 by the number of bits held in a register, but inappropriate on\n-targets that would require a loop.  By default, this macro returns\n-@code{true} if the target defines an @code{ashlsi3} pattern, and\n-@code{false} otherwise.\n-@end defmac\n-\n @defmac WORD_REGISTER_OPERATIONS\n Define this macro if operations between registers with integral mode\n smaller than a word are always performed on the entire register."}, {"sha": "ea0d3a58d97031689dcaea6d0ba8187680494efc", "filename": "gcc/stmt.c", "status": "modified", "additions": 4, "deletions": 9, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc193fba85953801d140e87c636a208767b75dfa/gcc%2Fstmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc193fba85953801d140e87c636a208767b75dfa/gcc%2Fstmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstmt.c?ref=cc193fba85953801d140e87c636a208767b75dfa", "patch": "@@ -1722,13 +1722,6 @@ add_case_node (struct case_node *head, tree type, tree low, tree high,\n /* Maximum number of case bit tests.  */\n #define MAX_CASE_BIT_TESTS  3\n \n-/* By default, enable case bit tests on targets with ashlsi3.  */\n-#ifndef CASE_USE_BIT_TESTS\n-#define CASE_USE_BIT_TESTS  (optab_handler (ashl_optab, word_mode) \\\n-\t\t\t     != CODE_FOR_nothing)\n-#endif\n-\n-\n /* A case_bit_test represents a set of case nodes that may be\n    selected from using a bit-wise comparison.  HI and LO hold\n    the integer to be tested against, LABEL contains the label\n@@ -1888,8 +1881,10 @@ bool\n expand_switch_using_bit_tests_p (tree index_expr, tree range,\n \t\t\t\t unsigned int uniq, unsigned int count)\n {\n-  return (CASE_USE_BIT_TESTS\n-\t  && ! TREE_CONSTANT (index_expr)\n+  if (optab_handler (ashl_optab, word_mode) == CODE_FOR_nothing)\n+    return false;\n+ \n+  return (! TREE_CONSTANT (index_expr)\n \t  && compare_tree_int (range, GET_MODE_BITSIZE (word_mode)) < 0\n \t  && compare_tree_int (range, 0) > 0\n \t  && lshift_cheap_p ()"}, {"sha": "f8b52324bd426cf9b1e9017a9ccd14b066a1b705", "filename": "gcc/system.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc193fba85953801d140e87c636a208767b75dfa/gcc%2Fsystem.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc193fba85953801d140e87c636a208767b75dfa/gcc%2Fsystem.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsystem.h?ref=cc193fba85953801d140e87c636a208767b75dfa", "patch": "@@ -895,7 +895,8 @@ extern void fancy_abort (const char *, int, const char *) ATTRIBUTE_NORETURN;\n \tTARGET_ALIGN_ANON_BITFIELDS TARGET_NARROW_VOLATILE_BITFIELDS\t   \\\n \tIDENT_ASM_OP UNALIGNED_SHORT_ASM_OP UNALIGNED_INT_ASM_OP\t   \\\n \tUNALIGNED_LONG_ASM_OP UNALIGNED_DOUBLE_INT_ASM_OP\t\t   \\\n-\tUSE_COMMON_FOR_ONE_ONLY IFCVT_EXTRA_FIELDS IFCVT_INIT_EXTRA_FIELDS\n+\tUSE_COMMON_FOR_ONE_ONLY IFCVT_EXTRA_FIELDS IFCVT_INIT_EXTRA_FIELDS \\\n+\tCASE_USE_BIT_TESTS\n \n /* Hooks that are no longer used.  */\n  #pragma GCC poison LANG_HOOKS_FUNCTION_MARK LANG_HOOKS_FUNCTION_FREE\t\\"}]}