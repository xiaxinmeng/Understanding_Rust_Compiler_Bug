{"sha": "3feaea007d5df4fab5820e2e01fb175894ff2d75", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2ZlYWVhMDA3ZDVkZjRmYWI1ODIwZTJlMDFmYjE3NTg5NGZmMmQ3NQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2006-03-13T14:18:24Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2006-03-13T14:18:24Z"}, "message": "re PR middle-end/18859 (ACATS ICE c37305a at -O0: in tree_low_cst, at tree.c:3839)\n\n\tPR middle-end/18859\n\t* gimplify.c (gimplify_switch_expr): Discard empty ranges.\n\t* stmt.c (expand_case): Likewise.\n\nFrom-SVN: r112000", "tree": {"sha": "21ce14481e92801758759cd21d6431455737ee3b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/21ce14481e92801758759cd21d6431455737ee3b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3feaea007d5df4fab5820e2e01fb175894ff2d75", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3feaea007d5df4fab5820e2e01fb175894ff2d75", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3feaea007d5df4fab5820e2e01fb175894ff2d75", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3feaea007d5df4fab5820e2e01fb175894ff2d75/comments", "author": null, "committer": null, "parents": [{"sha": "ba9462095c0f862c4eadf51a17356793cff6b767", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba9462095c0f862c4eadf51a17356793cff6b767", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba9462095c0f862c4eadf51a17356793cff6b767"}], "stats": {"total": 83, "additions": 70, "deletions": 13}, "files": [{"sha": "b7a2f5d09ff45978dcd4af14fdadd9285fbdc309", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3feaea007d5df4fab5820e2e01fb175894ff2d75/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3feaea007d5df4fab5820e2e01fb175894ff2d75/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3feaea007d5df4fab5820e2e01fb175894ff2d75", "patch": "@@ -1,3 +1,9 @@\n+2006-03-13  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\tPR middle-end/18859\n+\t* gimplify.c (gimplify_switch_expr): Discard empty ranges.\n+\t* stmt.c (expand_case): Likewise.\n+\n 2006-03-13  Zdenek Dvorak <dvorakz@suse.cz>\n \n \tPR rtl-optimization/26254"}, {"sha": "506ad18968423e8962ad897637a3f19dd0f70639", "filename": "gcc/gimplify.c", "status": "modified", "additions": 23, "deletions": 9, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3feaea007d5df4fab5820e2e01fb175894ff2d75/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3feaea007d5df4fab5820e2e01fb175894ff2d75/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=3feaea007d5df4fab5820e2e01fb175894ff2d75", "patch": "@@ -1327,20 +1327,34 @@ gimplify_switch_expr (tree *expr_p, tree *pre_p)\n       labels = gimplify_ctxp->case_labels;\n       gimplify_ctxp->case_labels = saved_labels;\n \n-      len = VEC_length (tree, labels);\n-\n-      for (i = 0; i < len; ++i)\n+      i = 0;\n+      while (i < VEC_length (tree, labels))\n \t{\n-\t  tree t = VEC_index (tree, labels, i);\n-\t  if (!CASE_LOW (t))\n+\t  tree elt = VEC_index (tree, labels, i);\n+\t  tree low = CASE_LOW (elt);\n+\t  bool remove_element = FALSE;\n+\n+\t  if (low)\n+\t    {\n+\t      /* Discard empty ranges.  */\n+\t      tree high = CASE_HIGH (elt);\n+\t      if (high && INT_CST_LT (high, low))\n+\t        remove_element = TRUE;\n+\t    }\n+\t  else\n \t    {\n \t      /* The default case must be the last label in the list.  */\n-\t      default_case = t;\n-\t      VEC_replace (tree, labels, i, VEC_index (tree, labels, len - 1));\n-\t      len--;\n-\t      break;\n+\t      gcc_assert (!default_case);\n+\t      default_case = elt;\n+\t      remove_element = TRUE;\n \t    }\n+\n+\t  if (remove_element)\n+\t    VEC_ordered_remove (tree, labels, i);\n+\t  else\n+\t    i++;\n \t}\n+      len = i;\n \n       label_vec = make_tree_vec (len + 1);\n       SWITCH_LABELS (*expr_p) = label_vec;"}, {"sha": "d199398e55f65c7bc86b271c28cd43bade1cdb22", "filename": "gcc/stmt.c", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3feaea007d5df4fab5820e2e01fb175894ff2d75/gcc%2Fstmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3feaea007d5df4fab5820e2e01fb175894ff2d75/gcc%2Fstmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstmt.c?ref=3feaea007d5df4fab5820e2e01fb175894ff2d75", "patch": "@@ -2286,7 +2286,7 @@ emit_case_bit_tests (tree index_type, tree index_expr, tree minval,\n #define HAVE_tablejump 0\n #endif\n \n-/* Terminate a case (Pascal) or switch (C) statement\n+/* Terminate a case (Pascal/Ada) or switch (C) statement\n    in which ORIG_INDEX is the expression to be tested.\n    If ORIG_TYPE is not NULL, it is the original ORIG_INDEX\n    type as given in the source before any compiler conversions.\n@@ -2348,10 +2348,18 @@ expand_case (tree exp)\n \n       for (i = TREE_VEC_LENGTH (vec) - 1; --i >= 0; )\n \t{\n+\t  tree low, high;\n \t  elt = TREE_VEC_ELT (vec, i);\n-\t  gcc_assert (CASE_LOW (elt));\n-\t  case_list = add_case_node (case_list, index_type,\n-\t\t\t\t     CASE_LOW (elt), CASE_HIGH (elt),\n+\n+\t  low = CASE_LOW (elt);\n+\t  gcc_assert (low);\n+\t  high = CASE_HIGH (elt);\n+\n+\t  /* Discard empty ranges.  */\n+\t  if (high && INT_CST_LT (high, low))\n+\t    continue;\n+\n+\t  case_list = add_case_node (case_list, index_type, low, high,\n \t\t\t\t     CASE_LABEL (elt));\n \t}\n "}, {"sha": "6ae2bca1e9082570669e32007c01f7e2292f8f7c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3feaea007d5df4fab5820e2e01fb175894ff2d75/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3feaea007d5df4fab5820e2e01fb175894ff2d75/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3feaea007d5df4fab5820e2e01fb175894ff2d75", "patch": "@@ -1,3 +1,7 @@\n+2006-03-13  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc.dg/switch-9.c: New test.\n+\n 2006-03-13  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/26630"}, {"sha": "2ae89d09518c1dc8f3d0686d2c13a07085579c9f", "filename": "gcc/testsuite/gcc.dg/switch-9.c", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3feaea007d5df4fab5820e2e01fb175894ff2d75/gcc%2Ftestsuite%2Fgcc.dg%2Fswitch-9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3feaea007d5df4fab5820e2e01fb175894ff2d75/gcc%2Ftestsuite%2Fgcc.dg%2Fswitch-9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fswitch-9.c?ref=3feaea007d5df4fab5820e2e01fb175894ff2d75", "patch": "@@ -0,0 +1,25 @@\n+/* PR middle-end/18859 */\n+/* { dg-do compile } */\n+/* { dg-options \"\" } */\n+\n+void foo(int a)\n+{\n+  switch (a)\n+  {\n+    case 0 ... -1:  /* { dg-warning \"empty range\" } */\n+      a = a+2;\n+      break;\n+\n+    case 1 ... 2:\n+      a = 0;\n+      break;\n+\n+    case 3 ... 4:\n+      a = 1;\n+      break;\n+\n+    case 5 ... 6:\n+      a = 0;\n+      break;\n+  }\n+}"}]}