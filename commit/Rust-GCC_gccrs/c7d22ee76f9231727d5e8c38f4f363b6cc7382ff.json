{"sha": "c7d22ee76f9231727d5e8c38f4f363b6cc7382ff", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzdkMjJlZTc2ZjkyMzE3MjdkNWU4YzM4ZjRmMzYzYjZjYzczODJmZg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-02-05T14:35:53Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-02-05T14:35:53Z"}, "message": "[multiple changes]\n\n2015-02-05  Robert Dewar  <dewar@adacore.com>\n\n\t* prj-proc.adb, sem_aux.adb, exp_ch9.adb, errout.adb, prj-dect.adb,\n\tprj-nmsc.adb: Minor reformatting.\n\n2015-02-05  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_type.adb (Covers): In ASIS_Mode the Corresponding_Record\n\tof a protected type may not be available, so to check conformance\n\twith an interface type, examine the interface list in the type\n\tdeclaration directly.\n\t(Write_Overloads): Improve information for indirect calls,\n\tfor debugger use.\n\n2015-02-05  Ed Schonberg  <schonberg@adacore.com>\n\n\t* exp_ch3.adb (Make_Tag_Assignment): Do not perform this\n\texpansion activity in ASIS mode.\n\nFrom-SVN: r220452", "tree": {"sha": "4fdb0927c5da676f7766b4a6f4243c2738a02762", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4fdb0927c5da676f7766b4a6f4243c2738a02762"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c7d22ee76f9231727d5e8c38f4f363b6cc7382ff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7d22ee76f9231727d5e8c38f4f363b6cc7382ff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c7d22ee76f9231727d5e8c38f4f363b6cc7382ff", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7d22ee76f9231727d5e8c38f4f363b6cc7382ff/comments", "author": null, "committer": null, "parents": [{"sha": "273123a48a42b08a87cacdfe665848c143716ef1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/273123a48a42b08a87cacdfe665848c143716ef1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/273123a48a42b08a87cacdfe665848c143716ef1"}], "stats": {"total": 124, "additions": 88, "deletions": 36}, "files": [{"sha": "e6402b33b9bc3ea1b8a3352eb5788e8941c6b1c2", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7d22ee76f9231727d5e8c38f4f363b6cc7382ff/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7d22ee76f9231727d5e8c38f4f363b6cc7382ff/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=c7d22ee76f9231727d5e8c38f4f363b6cc7382ff", "patch": "@@ -1,3 +1,22 @@\n+2015-02-05  Robert Dewar  <dewar@adacore.com>\n+\n+\t* prj-proc.adb, sem_aux.adb, exp_ch9.adb, errout.adb, prj-dect.adb,\n+\tprj-nmsc.adb: Minor reformatting.\n+\n+2015-02-05  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_type.adb (Covers): In ASIS_Mode the Corresponding_Record\n+\tof a protected type may not be available, so to check conformance\n+\twith an interface type, examine the interface list in the type\n+\tdeclaration directly.\n+\t(Write_Overloads): Improve information for indirect calls,\n+\tfor debugger use.\n+\n+2015-02-05  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* exp_ch3.adb (Make_Tag_Assignment): Do not perform this\n+\texpansion activity in ASIS mode.\n+\n 2015-02-05  Javier Miranda  <miranda@adacore.com>\n \n \t* errout.adb (Error_Msg_PT): Add missing error."}, {"sha": "bb8fb0899f5386c6aa356492fa24f65f409dd752", "filename": "gcc/ada/errout.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7d22ee76f9231727d5e8c38f4f363b6cc7382ff/gcc%2Fada%2Ferrout.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7d22ee76f9231727d5e8c38f4f363b6cc7382ff/gcc%2Fada%2Ferrout.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrout.adb?ref=c7d22ee76f9231727d5e8c38f4f363b6cc7382ff", "patch": "@@ -689,12 +689,12 @@ package body Errout is\n \n       if Ekind (E) = E_Function then\n          Error_Msg_N\n-           (\"\\first formal of & declared # must be of mode `IN` \" &\n-            \"or access-to-constant\", E);\n+           (\"\\first formal of & declared # must be of mode `IN` \"\n+            & \"or access-to-constant\", E);\n       else\n          Error_Msg_N\n-           (\"\\first formal of & declared # must be of mode `OUT`, `IN OUT` \" &\n-            \"or access-to-variable\", E);\n+           (\"\\first formal of & declared # must be of mode `OUT`, `IN OUT` \"\n+            & \"or access-to-variable\", E);\n       end if;\n    end Error_Msg_PT;\n "}, {"sha": "a8e4137fbda2a468e1b126dcc7bdb1490e1c999c", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7d22ee76f9231727d5e8c38f4f363b6cc7382ff/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7d22ee76f9231727d5e8c38f4f363b6cc7382ff/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=c7d22ee76f9231727d5e8c38f4f363b6cc7382ff", "patch": "@@ -9889,17 +9889,21 @@ package body Exp_Ch3 is\n       New_Ref  : Node_Id;\n \n    begin\n+      --  This expansion activity is called during analysis, but cannot\n+      --  be applied in ASIS mode when other expansion is disabled.\n+\n       if Is_Tagged_Type (Typ)\n        and then not Is_Class_Wide_Type (Typ)\n        and then not Is_CPP_Class (Typ)\n        and then Tagged_Type_Expansion\n        and then Nkind (Expr) /= N_Aggregate\n+       and then not ASIS_Mode\n        and then (Nkind (Expr) /= N_Qualified_Expression\n                   or else Nkind (Expression (Expr)) /= N_Aggregate)\n       then\n          New_Ref :=\n            Make_Selected_Component (Loc,\n-              Prefix => New_Occurrence_Of (Def_If, Loc),\n+              Prefix        => New_Occurrence_Of (Def_If, Loc),\n               Selector_Name =>\n                 New_Occurrence_Of (First_Tag_Component (Full_Typ), Loc));\n          Set_Assignment_OK (New_Ref);"}, {"sha": "7f26a8cb1fe90c961058b551dc6fd3c1a2875d80", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7d22ee76f9231727d5e8c38f4f363b6cc7382ff/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7d22ee76f9231727d5e8c38f4f363b6cc7382ff/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=c7d22ee76f9231727d5e8c38f4f363b6cc7382ff", "patch": "@@ -2639,11 +2639,11 @@ package body Exp_Ch9 is\n             if Nkind (Parameter_Type (First_Param)) = N_Access_Definition then\n                Obj_Param_Typ :=\n                  Make_Access_Definition (Loc,\n-                   Subtype_Mark =>\n+                   Subtype_Mark           =>\n                      New_Occurrence_Of (Obj_Typ, Loc),\n                    Null_Exclusion_Present =>\n                      Null_Exclusion_Present (Parameter_Type (First_Param)),\n-                   Constant_Present =>\n+                   Constant_Present       =>\n                      Constant_Present (Parameter_Type (First_Param)));\n             else\n                Obj_Param_Typ := New_Occurrence_Of (Obj_Typ, Loc);"}, {"sha": "461bd87f56b17753689717f18505dfe5efc70377", "filename": "gcc/ada/prj-dect.adb", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7d22ee76f9231727d5e8c38f4f363b6cc7382ff/gcc%2Fada%2Fprj-dect.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7d22ee76f9231727d5e8c38f4f363b6cc7382ff/gcc%2Fada%2Fprj-dect.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-dect.adb?ref=c7d22ee76f9231727d5e8c38f4f363b6cc7382ff", "patch": "@@ -627,9 +627,8 @@ package body Prj.Dect is\n                                  --  Look for the package node\n \n                                  while Present (The_Package)\n-                                   and then\n-                                     Name_Of (The_Package, In_Tree) /=\n-                                     Token_Name\n+                                   and then Name_Of (The_Package, In_Tree) /=\n+                                                                    Token_Name\n                                  loop\n                                     The_Package :=\n                                       Next_Package_In_Project"}, {"sha": "7b3d3371c546649bce390dbaed2fbe52c88f2a89", "filename": "gcc/ada/prj-nmsc.adb", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7d22ee76f9231727d5e8c38f4f363b6cc7382ff/gcc%2Fada%2Fprj-nmsc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7d22ee76f9231727d5e8c38f4f363b6cc7382ff/gcc%2Fada%2Fprj-nmsc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-nmsc.adb?ref=c7d22ee76f9231727d5e8c38f4f363b6cc7382ff", "patch": "@@ -1803,9 +1803,9 @@ package body Prj.Nmsc is\n                   Lang_Index := Get_Language_From_Name\n                     (Project, Get_Name_String (Element.Index));\n \n-                  if Lang_Index /= No_Language_Index and then\n-                     Element.Value.Kind = Single and then\n-                     Element.Value.Value /= No_Name\n+                  if Lang_Index /= No_Language_Index\n+                    and then Element.Value.Kind = Single\n+                    and then Element.Value.Value /= No_Name\n                   then\n                      case Current_Array.Name is\n                         when Name_Spec_Suffix | Name_Specification_Suffix =>\n@@ -4290,8 +4290,8 @@ package body Prj.Nmsc is\n                   Shared                  => Shared);\n             end if;\n \n-            if Suffix /= Nil_Variable_Value and then\n-               Suffix.Value /= No_Name\n+            if Suffix /= Nil_Variable_Value\n+              and then Suffix.Value /= No_Name\n             then\n                Lang_Id.Config.Naming_Data.Spec_Suffix :=\n                    File_Name_Type (Suffix.Value);\n@@ -4325,8 +4325,8 @@ package body Prj.Nmsc is\n                     Shared                  => Shared);\n             end if;\n \n-            if Suffix /= Nil_Variable_Value and then\n-               Suffix.Value /= No_Name\n+            if Suffix /= Nil_Variable_Value\n+              and then Suffix.Value /= No_Name\n             then\n                Lang_Id.Config.Naming_Data.Body_Suffix :=\n                  File_Name_Type (Suffix.Value);"}, {"sha": "3bad060b180b70025610fe387489563b68ab9214", "filename": "gcc/ada/prj-proc.adb", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7d22ee76f9231727d5e8c38f4f363b6cc7382ff/gcc%2Fada%2Fprj-proc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7d22ee76f9231727d5e8c38f4f363b6cc7382ff/gcc%2Fada%2Fprj-proc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-proc.adb?ref=c7d22ee76f9231727d5e8c38f4f363b6cc7382ff", "patch": "@@ -547,9 +547,7 @@ package body Prj.Proc is\n             case Current_Term_Kind is\n \n             when N_Literal_String =>\n-\n                case Kind is\n-\n                   when Undefined =>\n \n                      --  Should never happen\n@@ -602,7 +600,6 @@ package body Prj.Proc is\n                end case;\n \n             when N_Literal_String_List =>\n-\n                declare\n                   String_Node : Project_Node_Id :=\n                                   First_Expression_In_List\n@@ -697,7 +694,6 @@ package body Prj.Proc is\n                end;\n \n             when N_Variable_Reference | N_Attribute_Reference =>\n-\n                declare\n                   The_Project     : Project_Id  := Project;\n                   The_Package     : Package_Id  := Pkg;"}, {"sha": "f149cbaaba5e5495712ac8a69b58f27fb6958c0e", "filename": "gcc/ada/sem_aux.adb", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7d22ee76f9231727d5e8c38f4f363b6cc7382ff/gcc%2Fada%2Fsem_aux.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7d22ee76f9231727d5e8c38f4f363b6cc7382ff/gcc%2Fada%2Fsem_aux.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aux.adb?ref=c7d22ee76f9231727d5e8c38f4f363b6cc7382ff", "patch": "@@ -981,6 +981,11 @@ package body Sem_Aux is\n       if Is_Type (Ent)\n         and then Base_Type (Ent) /= Root_Type (Ent)\n         and then not Is_Class_Wide_Type (Ent)\n+\n+        --  An access_to_subprogram whose result type is a limited view can\n+        --  appear in a return statement, without the full view of the result\n+        --  type being available. Do not interpret this as a derived type.\n+\n         and then Ekind (Ent) /= E_Subprogram_Type\n       then\n          if not Is_Numeric_Type (Root_Type (Ent)) then"}, {"sha": "d9f4e53aa616ff0ae28a91163523a7cf375bc68c", "filename": "gcc/ada/sem_type.adb", "status": "modified", "additions": 44, "deletions": 15, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7d22ee76f9231727d5e8c38f4f363b6cc7382ff/gcc%2Fada%2Fsem_type.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7d22ee76f9231727d5e8c38f4f363b6cc7382ff/gcc%2Fada%2Fsem_type.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_type.adb?ref=c7d22ee76f9231727d5e8c38f4f363b6cc7382ff", "patch": "@@ -954,16 +954,43 @@ package body Sem_Type is\n             --  Note: test for presence of E is defense against previous error.\n \n             if No (E) then\n-               Check_Error_Detected;\n+\n+               --  If expansion is disabled the Corresponding_Record_Type may\n+               --  not be available yet, so use the interface list in the\n+               --  declaration directly.\n+\n+               if ASIS_Mode\n+                 and then Nkind (Parent (BT2)) = N_Protected_Type_Declaration\n+                 and then Present (Interface_List (Parent (BT2)))\n+               then\n+                  declare\n+                     Intf : Node_Id := First (Interface_List (Parent (BT2)));\n+                  begin\n+                     while Present (Intf) loop\n+                        if Is_Ancestor (Etype (T1), Entity (Intf)) then\n+                           return True;\n+                        else\n+                           Next (Intf);\n+                        end if;\n+                     end loop;\n+                  end;\n+\n+                  return False;\n+\n+               else\n+                  Check_Error_Detected;\n+               end if;\n+\n+            --  Here we have a corresponding record type\n \n             elsif Present (Interfaces (E)) then\n                Elmt := First_Elmt (Interfaces (E));\n                while Present (Elmt) loop\n                   if Is_Ancestor (Etype (T1), Node (Elmt)) then\n                      return True;\n+                  else\n+                     Next_Elmt (Elmt);\n                   end if;\n-\n-                  Next_Elmt (Elmt);\n                end loop;\n             end if;\n \n@@ -3499,23 +3526,25 @@ package body Sem_Type is\n       Write_Str (\"Overloads: \");\n       Print_Node_Briefly (N);\n \n-      if Nkind (N) not in N_Has_Entity then\n-         return;\n-      end if;\n-\n       if not Is_Overloaded (N) then\n-         Write_Str (\"Non-overloaded entity \");\n-         Write_Eol;\n+         Write_Line (\"Non-overloaded entity \");\n          Write_Entity_Info (Entity (N), \" \");\n \n+      elsif Nkind (N) not in N_Has_Entity then\n+         Get_First_Interp (N, I, It);\n+         while Present (It.Nam) loop\n+            Write_Int (Int (It.Typ));\n+            Write_Str (\"   \");\n+            Write_Name (Chars (It.Typ));\n+            Write_Eol;\n+            Get_Next_Interp (I, It);\n+         end loop;\n+\n       else\n          Get_First_Interp (N, I, It);\n-         Write_Str (\"Overloaded entity \");\n-         Write_Eol;\n-         Write_Str (\"      Name           Type           Abstract Op\");\n-         Write_Eol;\n-         Write_Str (\"===============================================\");\n-         Write_Eol;\n+         Write_Line (\"Overloaded entity \");\n+         Write_Line (\"      Name           Type           Abstract Op\");\n+         Write_Line (\"===============================================\");\n          Nam := It.Nam;\n \n          while Present (Nam) loop"}]}