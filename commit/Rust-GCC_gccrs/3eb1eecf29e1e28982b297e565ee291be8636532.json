{"sha": "3eb1eecf29e1e28982b297e565ee291be8636532", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2ViMWVlY2YyOWUxZTI4OTgyYjI5N2U1NjVlZTI5MWJlODYzNjUzMg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2018-02-15T11:17:05Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2018-02-15T11:17:05Z"}, "message": "re PR tree-optimization/84334 (Stack overflow with -Ofast -frounding-math)\n\n\tPR tree-optimization/84334\n\t* match.pd ((A +- CST1) +- CST2 -> A + CST3): If A is\n\talso a CONSTANT_CLASS_P, punt.\n\n\t* gcc.dg/pr84334.c: New test.\n\nFrom-SVN: r257683", "tree": {"sha": "eb1440321b077086e6d4ec1064117f8c5cbfc6d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eb1440321b077086e6d4ec1064117f8c5cbfc6d4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3eb1eecf29e1e28982b297e565ee291be8636532", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3eb1eecf29e1e28982b297e565ee291be8636532", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3eb1eecf29e1e28982b297e565ee291be8636532", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3eb1eecf29e1e28982b297e565ee291be8636532/comments", "author": null, "committer": null, "parents": [{"sha": "8fa4bd81cb7cefa30212d79664963c1b6bbb9667", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8fa4bd81cb7cefa30212d79664963c1b6bbb9667", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8fa4bd81cb7cefa30212d79664963c1b6bbb9667"}], "stats": {"total": 37, "additions": 33, "deletions": 4}, "files": [{"sha": "05b77100138a1242b88c9c1273ccc0252cbbdbb7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3eb1eecf29e1e28982b297e565ee291be8636532/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3eb1eecf29e1e28982b297e565ee291be8636532/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3eb1eecf29e1e28982b297e565ee291be8636532", "patch": "@@ -1,3 +1,9 @@\n+2018-02-15  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/84334\n+\t* match.pd ((A +- CST1) +- CST2 -> A + CST3): If A is\n+\talso a CONSTANT_CLASS_P, punt.\n+\n 2018-02-14  Jim Wilson  <jimw@sifive.com>\n \n \t* config/riscv/riscv.c (riscv_first_stack_step): Move locals after\n@@ -2336,6 +2342,7 @@\n \t* config/aarch64/predicates.md (Uti): Add new constraint.\n \n 2018-01-17 Carl Love  <cel@us.ibm.com>\n+\n \t* config/rs6000/vsx.md (define_expand xl_len_r,\n \tdefine_expand stxvl, define_expand *stxvl): Add match_dup argument.\n \t(define_insn): Add, match_dup 1 argument to define_insn stxvll and"}, {"sha": "4452b58caed55bff196ad43d1169cba4159de260", "filename": "gcc/match.pd", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3eb1eecf29e1e28982b297e565ee291be8636532/gcc%2Fmatch.pd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3eb1eecf29e1e28982b297e565ee291be8636532/gcc%2Fmatch.pd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmatch.pd?ref=3eb1eecf29e1e28982b297e565ee291be8636532", "patch": "@@ -1733,9 +1733,12 @@ DEFINE_INT_AND_FLOAT_ROUND_FN (RINT)\n \t       CONSTANT_CLASS_P@2)\n      /* If one of the types wraps, use that one.  */\n      (if (!ANY_INTEGRAL_TYPE_P (type) || TYPE_OVERFLOW_WRAPS (type))\n-      (if (outer_op == PLUS_EXPR)\n-       (plus (view_convert @0) (inner_op @2 (view_convert @1)))\n-       (minus (view_convert @0) (neg_inner_op @2 (view_convert @1))))\n+      /* If all 3 captures are CONSTANT_CLASS_P, punt, as we might recurse\n+\t forever if something doesn't simplify into a constant.  */\n+      (if (!CONSTANT_CLASS_P (@0))\n+       (if (outer_op == PLUS_EXPR)\n+\t(plus (view_convert @0) (inner_op @2 (view_convert @1)))\n+\t(minus (view_convert @0) (neg_inner_op @2 (view_convert @1)))))\n       (if (!ANY_INTEGRAL_TYPE_P (TREE_TYPE (@0))\n \t   || TYPE_OVERFLOW_WRAPS (TREE_TYPE (@0)))\n        (if (outer_op == PLUS_EXPR)"}, {"sha": "2ac6e7b0dfa5665d8a880f4786a3b11fa8319e7f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3eb1eecf29e1e28982b297e565ee291be8636532/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3eb1eecf29e1e28982b297e565ee291be8636532/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3eb1eecf29e1e28982b297e565ee291be8636532", "patch": "@@ -1,4 +1,10 @@\n+2018-02-15  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/84334\n+\t* gcc.dg/pr84334.c: New test.\n+\n 2018-02-14  Carl Love  <cel@us.ibm.com>\n+\n         * gcc.target/powerpc/builtins-4-int128-runnable.c\n \t(dg-require-effective-target): Change vsx_hw to p8vector_hw.\n \t(dg-options): Change -maltivec -mvsx to -mpower8-vector.\n@@ -1558,6 +1564,7 @@\n \t* gcc.target/powerpc/pr83862.c: New test.\n \n 2018-01-22  Carl Love  <cel@us.ibm.com>\n+\n \t* gcc.target/powerpc/powerpc.exp: Add torture tests for\n \tbuiltins-4-runnable.c, builtins-6-runnable.c,\n \tbuiltins-5-p9-runnable.c, builtins-6-p9-runnable.c.\n@@ -3617,7 +3624,7 @@\n \tPR c++/83734\n \t* g++.dg/cpp0x/pr83734.C: New test.\n \n-2018-01-09 Carl Love  <cel@us.ibm.com>\n+2018-01-09  Carl Love  <cel@us.ibm.com>\n \n \t* gcc.target/powerpc/builtins-1.c (main): Add tests for vec_mergee and\n \tvec_mergeo builtins with float, double, long long, unsigned long long,"}, {"sha": "8cfde69bd82249a593ec5f55564ae48465767650", "filename": "gcc/testsuite/gcc.dg/pr84334.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3eb1eecf29e1e28982b297e565ee291be8636532/gcc%2Ftestsuite%2Fgcc.dg%2Fpr84334.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3eb1eecf29e1e28982b297e565ee291be8636532/gcc%2Ftestsuite%2Fgcc.dg%2Fpr84334.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr84334.c?ref=3eb1eecf29e1e28982b297e565ee291be8636532", "patch": "@@ -0,0 +1,12 @@\n+/* PR tree-optimization/84334 */\n+/* { dg-do compile } */\n+/* { dg-options \"-Ofast -frounding-math\" } */\n+\n+float\n+foo (void)\n+{\n+  float a = 9.999999974752427078783512115478515625e-7f;\n+  float b = 1.999999994950485415756702423095703125e-6f;\n+  float c = 4.999999873689375817775726318359375e-6f;\n+  return a + b + c;\n+}"}]}