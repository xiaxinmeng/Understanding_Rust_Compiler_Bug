{"sha": "4b522b8f339f4e7844843d30f38ea9459d908e3c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGI1MjJiOGYzMzlmNGU3ODQ0ODQzZDMwZjM4ZWE5NDU5ZDkwOGUzYw==", "commit": {"author": {"name": "Tom de Vries", "email": "tom@codesourcery.com", "date": "2017-12-20T00:46:38Z"}, "committer": {"name": "Tom de Vries", "email": "vries@gcc.gnu.org", "date": "2017-12-20T00:46:38Z"}, "message": "Don't call targetm.calls.static_chain in non-static function\n\n2017-12-20  Tom de Vries  <tom@codesourcery.com>\n\n\tPR middle-end/83423\n\t* config/i386/i386.c (ix86_static_chain): Move DECL_STATIC_CHAIN test ...\n\t* calls.c (rtx_for_static_chain): ... here.  New function.\n\t* calls.h (rtx_for_static_chain): Declare.\n\t* builtins.c (expand_builtin_setjmp_receiver): Use rtx_for_static_chain\n\tinstead of targetm.calls.static_chain.\n\t* df-scan.c (df_get_entry_block_def_set): Same.\n\nFrom-SVN: r255849", "tree": {"sha": "cd32dc6ce38614687f2e8641be27ecb2f2300692", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cd32dc6ce38614687f2e8641be27ecb2f2300692"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4b522b8f339f4e7844843d30f38ea9459d908e3c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b522b8f339f4e7844843d30f38ea9459d908e3c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b522b8f339f4e7844843d30f38ea9459d908e3c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b522b8f339f4e7844843d30f38ea9459d908e3c/comments", "author": null, "committer": null, "parents": [{"sha": "f00b0bad2afa3912e91910eaa1f6c7e74fe86683", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f00b0bad2afa3912e91910eaa1f6c7e74fe86683", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f00b0bad2afa3912e91910eaa1f6c7e74fe86683"}], "stats": {"total": 33, "additions": 25, "deletions": 8}, "files": [{"sha": "9284a8c07fc375226fd4978d7e0637f13f66e5d8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b522b8f339f4e7844843d30f38ea9459d908e3c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b522b8f339f4e7844843d30f38ea9459d908e3c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4b522b8f339f4e7844843d30f38ea9459d908e3c", "patch": "@@ -1,3 +1,13 @@\n+2017-12-20  Tom de Vries  <tom@codesourcery.com>\n+\n+\tPR middle-end/83423\n+\t* config/i386/i386.c (ix86_static_chain): Move DECL_STATIC_CHAIN test ...\n+\t* calls.c (rtx_for_static_chain): ... here.  New function.\n+\t* calls.h (rtx_for_static_chain): Declare.\n+\t* builtins.c (expand_builtin_setjmp_receiver): Use rtx_for_static_chain\n+\tinstead of targetm.calls.static_chain.\n+\t* df-scan.c (df_get_entry_block_def_set): Same.\n+\n 2017-12-19  Tom de Vries  <tom@codesourcery.com>\n \n \tPR tree-optimization/83493"}, {"sha": "3e8ea95d729ae17021dae40cda49f4b150b1bd20", "filename": "gcc/builtins.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b522b8f339f4e7844843d30f38ea9459d908e3c/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b522b8f339f4e7844843d30f38ea9459d908e3c/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=4b522b8f339f4e7844843d30f38ea9459d908e3c", "patch": "@@ -878,7 +878,7 @@ expand_builtin_setjmp_receiver (rtx receiver_label)\n \n   /* Mark the static chain as clobbered here so life information\n      doesn't get messed up for it.  */\n-  chain = targetm.calls.static_chain (current_function_decl, true);\n+  chain = rtx_for_static_chain (current_function_decl, true);\n   if (chain && REG_P (chain))\n     emit_clobber (chain);\n "}, {"sha": "6057aa65da0bef49cdb30470eafe25eb1e4f1122", "filename": "gcc/calls.c", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b522b8f339f4e7844843d30f38ea9459d908e3c/gcc%2Fcalls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b522b8f339f4e7844843d30f38ea9459d908e3c/gcc%2Fcalls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcalls.c?ref=4b522b8f339f4e7844843d30f38ea9459d908e3c", "patch": "@@ -2460,6 +2460,17 @@ rtx_for_function_call (tree fndecl, tree addr)\n   return funexp;\n }\n \n+/* Return the static chain for this function, if any.  */\n+\n+rtx\n+rtx_for_static_chain (const_tree fndecl_or_type, bool incoming_p)\n+{\n+  if (DECL_P (fndecl_or_type) && !DECL_STATIC_CHAIN (fndecl_or_type))\n+    return NULL;\n+\n+  return targetm.calls.static_chain (fndecl_or_type, incoming_p);\n+}\n+\n /* Internal state for internal_arg_pointer_based_exp and its helpers.  */\n static struct\n {"}, {"sha": "1aab140ae7b16f72d44bcc2daec3f8fb5e9918c5", "filename": "gcc/calls.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b522b8f339f4e7844843d30f38ea9459d908e3c/gcc%2Fcalls.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b522b8f339f4e7844843d30f38ea9459d908e3c/gcc%2Fcalls.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcalls.h?ref=4b522b8f339f4e7844843d30f38ea9459d908e3c", "patch": "@@ -41,5 +41,6 @@ extern void maybe_warn_alloc_args_overflow (tree, tree, tree[2], int[2]);\n extern tree get_attr_nonstring_decl (tree, tree * = NULL);\n extern void maybe_warn_nonstring_arg (tree, tree);\n extern bool get_size_range (tree, tree[2], bool = false);\n+extern rtx rtx_for_static_chain (const_tree, bool);\n \n #endif // GCC_CALLS_H"}, {"sha": "48d5640f84ed7c823a2fddc2f951c61ebc9289ef", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b522b8f339f4e7844843d30f38ea9459d908e3c/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b522b8f339f4e7844843d30f38ea9459d908e3c/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=4b522b8f339f4e7844843d30f38ea9459d908e3c", "patch": "@@ -29236,12 +29236,6 @@ ix86_static_chain (const_tree fndecl_or_type, bool incoming_p)\n {\n   unsigned regno;\n \n-  /* While this function won't be called by the middle-end when a static\n-     chain isn't needed, it's also used throughout the backend so it's\n-     easiest to keep this check centralized.  */\n-  if (DECL_P (fndecl_or_type) && !DECL_STATIC_CHAIN (fndecl_or_type))\n-    return NULL;\n-\n   if (TARGET_64BIT)\n     {\n       /* We always use R10 in 64-bit mode.  */"}, {"sha": "d0addd9e15037aa89fe289c265f1248fa69ccd18", "filename": "gcc/df-scan.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b522b8f339f4e7844843d30f38ea9459d908e3c/gcc%2Fdf-scan.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b522b8f339f4e7844843d30f38ea9459d908e3c/gcc%2Fdf-scan.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdf-scan.c?ref=4b522b8f339f4e7844843d30f38ea9459d908e3c", "patch": "@@ -34,6 +34,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"regs.h\"\n #include \"emit-rtl.h\"  /* FIXME: Can go away once crtl is moved to rtl.h.  */\n #include \"dumpfile.h\"\n+#include \"calls.h\"\n \n \n /* The set of hard registers in eliminables[i].from. */\n@@ -3518,7 +3519,7 @@ df_get_entry_block_def_set (bitmap entry_block_defs)\n \n   /* If the function has an incoming STATIC_CHAIN, it has to show up\n      in the entry def set.  */\n-  r = targetm.calls.static_chain (current_function_decl, true);\n+  r = rtx_for_static_chain (current_function_decl, true);\n   if (r && REG_P (r))\n     bitmap_set_bit (entry_block_defs, REGNO (r));\n "}]}