{"sha": "eea81d3e5d04ea812901fa4178465279bde96ca3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWVhODFkM2U1ZDA0ZWE4MTI5MDFmYTQxNzg0NjUyNzliZGU5NmNhMw==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@TechFak.Uni-Bielefeld.DE", "date": "2001-07-02T18:08:42Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2001-07-02T18:08:42Z"}, "message": "install.texi: Various spelling and markup fixes.\n\n\t* doc/install.texi: Various spelling and markup fixes.\n\t(Installing GCC): Component specific installation instructions are\n\tgone.\n\tFix reference.\n\tWarn about removing old install dir in the presence of shared libs.\n\t(Configuration): Invoke with options target to match configure\n\t--help.\n\tConsistently refer to gas, gld pathnames.\n\tInvert --enable-multilib documentation.\n\tRemove references to old compiler versions.\n\nFrom-SVN: r43697", "tree": {"sha": "a617d8b63f9f3d9bf7b8c71c50609c5584360b35", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a617d8b63f9f3d9bf7b8c71c50609c5584360b35"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eea81d3e5d04ea812901fa4178465279bde96ca3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eea81d3e5d04ea812901fa4178465279bde96ca3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eea81d3e5d04ea812901fa4178465279bde96ca3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eea81d3e5d04ea812901fa4178465279bde96ca3/comments", "author": null, "committer": null, "parents": [{"sha": "faf041ed6b72d7be755e9e7ecb47b05ceb4e801b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/faf041ed6b72d7be755e9e7ecb47b05ceb4e801b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/faf041ed6b72d7be755e9e7ecb47b05ceb4e801b"}], "stats": {"total": 158, "additions": 87, "deletions": 71}, "files": [{"sha": "01bb5facb68ae4e36eeff3aa766fe0740cc77a85", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eea81d3e5d04ea812901fa4178465279bde96ca3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eea81d3e5d04ea812901fa4178465279bde96ca3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=eea81d3e5d04ea812901fa4178465279bde96ca3", "patch": "@@ -1,3 +1,16 @@\n+2001-07-02  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>\n+\n+\t* doc/install.texi: Various spelling and markup fixes.\n+\t(Installing GCC): Component specific installation instructions are\n+\tgone.\n+\tFix reference.\n+\tWarn about removing old install dir in the presence of shared libs.\n+\t(Configuration): Invoke with options target to match configure\n+\t--help.\n+\tConsistently refer to gas, gld pathnames.\n+\tInvert --enable-multilib documentation.\n+\tRemove references to old compiler versions.\n+\n Mon Jul  2 12:50:51 2001  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n \t* flow.c (try_simplify_condjump): Fix typo in updating fallthru flags."}, {"sha": "f14d5e01585ae9c00616421269185a7b71d5467d", "filename": "gcc/doc/install.texi", "status": "modified", "additions": 74, "deletions": 71, "changes": 145, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eea81d3e5d04ea812901fa4178465279bde96ca3/gcc%2Fdoc%2Finstall.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eea81d3e5d04ea812901fa4178465279bde96ca3/gcc%2Fdoc%2Finstall.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finstall.texi?ref=eea81d3e5d04ea812901fa4178465279bde96ca3", "patch": "@@ -105,13 +105,11 @@ as detailing some target specific installation instructions.\n \n GCC includes several components that previously were separate distributions\n with their own installation instructions.  This document supersedes all\n-package specific installation instructions.  We provide the component\n-specific installation information in the source distribution for historical\n-reference purposes only.\n+package specific installation instructions.\n \n @emph{Before} starting the build/install procedure please check the\n @ifnothtml\n-@xref{Specific, host/target specific installation notes}.\n+@ref{Specific, host/target specific installation notes}.\n @end ifnothtml\n @ifnotinfo\n @uref{specific.html,,host/target specific installation notes}.\n@@ -149,7 +147,8 @@ Please note that GCC does not support @samp{make uninstall} and probably\n won't do so in the near future as this would open a can of worms.  Instead,\n we suggest that you install GCC into a directory of its own and simply\n remove that directory when you do not need that specific version of GCC\n-any longer.\n+any longer, and, if shared libraries are installed there as well, no\n+more binaries exist that use them.\n \n @html\n <hr>\n@@ -175,22 +174,22 @@ any longer.\n @cindex Downloading GCC\n @cindex Downloading the Source\n \n-GCC is distributed via CVS and FTP tarballs compressed with @command{gzip} or\n+GCC is distributed via @uref{http://gcc.gnu.org/cvs.html,,CVS} and FTP\n+tarballs compressed with @command{gzip} or\n @command{bzip2}.  It is possible to download a full distribution or specific\n components.\n \n Please refer to our @uref{http://gcc.gnu.org/releases.html,,releases web page}\n for information on how to obtain GCC@.\n \n The full distribution includes the C, C++, Objective-C, Fortran, Java,\n-and Chill compilers.  The full distribution also includes runtime libraries\n-for C++, Objective-C, Fortran, Java and Chill.  (GCC 3.0 does not\n-include Chill.  Releases before 3.0 do not include the Java runtime\n-library.)  In GCC 3.0 and later versions, GNU compiler testsuites\n+and CHILL compilers.  The full distribution also includes runtime libraries\n+for C++, Objective-C, Fortran, Java and CHILL.  (GCC 3.0 does not\n+include CHILL.)  In GCC 3.0 and later versions, GNU compiler testsuites\n are also included in the full distribution.\n \n If you choose to download specific components, you must download the core\n-gcc distribution plus any language specific distributions you wish to\n+GCC distribution plus any language specific distributions you wish to\n use.  The core distribution includes the C language front end as well as the\n shared components.  Each language has a tarball which includes the language\n front end as well as the language runtime (when appropriate).\n@@ -248,7 +247,7 @@ where @var{srcdir} == @var{objdir} should still work, but doesn't\n get extensive testing; building where @var{objdir} is a subdirectory\n of @var{srcdir} is unsupported.\n \n-If you have built GCC previously in the same directory for a\n+If you have previously built GCC in the same directory for a\n different target machine, do @samp{make distclean} to delete all files\n that might be invalid.  One of the files this deletes is\n @file{Makefile}; if @samp{make distclean} complains that @file{Makefile}\n@@ -262,12 +261,18 @@ Second, when configuring a native system, either @command{cc} or\n your environment before running configure.  Otherwise the configuration\n scripts may fail.\n \n+Note that the bootstrap compiler and the resulting GCC must be link\n+compatible, else the bootstrap will fail with linker errors about\n+incompatible object file formats.  Several multilibed targets are\n+affected by this requirement, see @ref{Specific, host/target specific\n+installation notes} for details.\n+\n To configure GCC:\n \n @example\n    % mkdir @var{objdir}\n    % cd @var{objdir}\n-   % @var{srcdir}/configure [@var{target}] [@var{options}]\n+   % @var{srcdir}/configure [@var{options}] [@var{target}]\n @end example\n \n \n@@ -339,7 +344,7 @@ manual.)\n \n @item --with-gxx-include-dir=@var{dirname}\n Specify\n-the installation directory for g++ header files.  The default is\n+the installation directory for G++ header files.  The default is\n @file{@var{prefix}/include/g++-v3}.\n \n @end table\n@@ -382,7 +387,9 @@ installing GCC creates the directory.\n @item --enable-shared[=@var{package}[,@dots{}]]\n Build shared versions of libraries, if shared libraries are supported on\n the target platform.  Unlike GCC 2.95.x and earlier, shared libraries\n-are enabled by default on all platforms that support shared libraries.\n+are enabled by default on all platforms that support shared libraries,\n+except for @samp{libobjc} which is built as a static library only by\n+default.\n \n If a list of packages is given as an argument, build shared libraries\n only for the listed packages.  For other packages, only static libraries\n@@ -391,7 +398,7 @@ will be built.  Package names currently recognized in the GCC tree are\n @samp{libstdc++-v3}), @samp{libffi}, @samp{zlib}, @samp{boehm-gc} and\n @samp{libjava}.  Note that @samp{libobjc} does not recognize itself by\n any name, so, if you list package names in @option{--enable-shared},\n-you'll only get static Objective-C libraries.  @samp{libf2c} and\n+you will only get static Objective-C libraries.  @samp{libf2c} and\n @samp{libiberty} do not support shared libraries at all.\n \n Use @option{--disable-shared} to build only static libraries.  Note that\n@@ -406,7 +413,7 @@ assembler is not actually the GNU assembler.  (Confusion will also\n result if the compiler finds the GNU assembler but has not been\n configured with @option{--with-gnu-as}.)  If you have more than one\n assembler installed on your system, you may want to use this option in\n-connection with @option{--with-as=@file{/path/to/gas}}.\n+connection with @option{--with-as=@var{pathname}}.\n \n The systems where it makes a difference whether you use the GNU assembler are\n @samp{hppa1.0-@var{any}-@var{any}}, @samp{hppa1.1-@var{any}-@var{any}},\n@@ -422,7 +429,7 @@ On the systems listed above (except for the HP-PA, for ISC on the\n 386, and for @samp{mips-sgi-irix5.*}), if you use the GNU assembler,\n you should also use the GNU linker (and specify @option{--with-gnu-ld}).\n \n-@item --with-as=@file{/path/to/as}\n+@item --with-as=@var{pathname}\n Specify that the\n compiler should use the assembler pointed to by @var{pathname}, rather\n than the one found by the standard rules to find an assembler, which\n@@ -433,9 +440,9 @@ Check the\n @file{@var{exec_prefix}/lib/gcc-lib/@var{target}/@var{version}}\n directory, where @var{exec_prefix} defaults to @var{prefix} which\n defaults to @file{/usr/local} unless overridden by the\n-@option{--prefix=/pathname} switch described above.  @var{target} is the\n+@option{--prefix=@var{pathname}} switch described above. @var{target} is the\n target system triple, such as @var{sparc-sun-solaris2.7}, and\n-@var{version} denotes the GCC version, such as 2.95.2.\n+@var{version} denotes the GCC version, such as 3.0.\n @item\n Check operating system specific directories (e.g.@: @file{/usr/ccs/bin} on\n Sun Solaris).\n@@ -450,7 +457,7 @@ Same as @uref{#with-gnu-as,,@option{--with-gnu-as}}\n but for linker.\n \n \n-@item --with-ld=@file{/path/to/ld}\n+@item --with-ld=@var{pathname}\n Same as\n @option{--with-as}, but for the linker.\n \n@@ -484,10 +491,11 @@ information normally used on 386 SVR4 platforms; stabs provide a\n workable alternative.  This requires gas and gdb, as the normal SVR4\n tools can not generate or interpret stabs.\n \n-@item --enable-multilib\n+@item --disable-multilib\n Specify that multiple target\n-libraries should be built to support different target variants, calling\n-conventions, etc.  This is the default.\n+libraries to support different target variants, calling\n+conventions, etc should not be built.  The default is to build a\n+predefined set of them.\n \n @item --enable-threads\n Specify that the target\n@@ -517,7 +525,7 @@ AIX thread support.\n @item dce\n DCE thread support.\n @item mach\n-Generic MACH thread support, known to work on NEXTSTEP@.  (Please note\n+Generic MACH thread support, known to work on NeXTSTEP@.  (Please note\n that the file needed to support this configuration, @file{gthr-mach.h}, is\n missing and thus this setting will cause a known bootstrap failure.)\n @item no\n@@ -533,7 +541,7 @@ RTEMS thread support.\n @item single\n Disable thread support, should work for all platforms.\n @item solaris\n-SUN Solaris thread support.\n+Sun Solaris 2 thread support.\n @item vxworks\n VxWorks thread support.\n @item win32\n@@ -573,24 +581,26 @@ to do so.\n Specify\n that runtime libraries should be installed in the compiler specific\n subdirectory (@file{@var{libsubdir}}) rather than the usual places.  In\n-addition, libstdc++'s include files will be installed in\n+addition, @samp{libstdc++}'s include files will be installed in\n @file{@var{libsubdir}/include/g++} unless you overruled it by using\n @option{--with-gxx-include-dir=@var{dirname}}.  Using this option is\n particularly useful if you intend to use several versions of GCC in\n-parallel.  This is currently supported by @samp{libf2c} and\n-@samp{libstdc++}.\n+parallel. This is currently supported by @samp{libf2c} and\n+@samp{libstdc++}, and is the default for @samp{libobjc} which cannot be\n+changed in this case.\n \n @item --enable-languages=@var{lang1},@var{lang2},@dots{}\n Specify that only a particular subset of compilers and\n their runtime libraries should be built.  For a list of valid values for\n @var{langN} you can issue the following command in the\n-@file{gcc} directory of your GCC source tree:@* @samp{grep language=\n-*/config-lang.in}@* Currently, you can use any of the following:\n+@file{gcc} directory of your GCC source tree:@*\n+@example\n+grep language= */config-lang.in\n+@end example\n+Currently, you can use any of the following:\n @code{c}, @code{c++}, @code{f77}, @code{java} and @code{objc}.\n @code{CHILL} is not currently maintained, and will almost\n-certainly fail to compile.  Note that this switch does not work with\n-EGCS 1.1.2 or older versions of egcs.  It is supported in GCC 2.95\n-and newer versions.@*\n+certainly fail to compile.@*\n If you do not pass this flag, all languages available in the @file{gcc}\n sub-tree will be configured.  Re-defining @code{LANGUAGES} when calling\n @samp{make bootstrap} @strong{does not} work anymore, as those\n@@ -603,27 +613,27 @@ to use GCJ with some other run-time, or you're going to install it\n separately, or it just happens not to build on your particular\n machine.  In general, if the Java front end is enabled, the GCJ\n libraries will be enabled too, unless they're known to not work on\n-the target platform.  If GCJ is enabled but libgcj isn't built, you\n+the target platform.  If GCJ is enabled but @samp{libgcj} isn't built, you\n may need to port it; in this case, before modifying the top-level\n-@file{configure.in} so that libgcj is enabled by default on this platform,\n+@file{configure.in} so that @samp{libgcj} is enabled by default on this platform,\n you may use @option{--enable-libgcj} to override the default.\n \n @item --with-dwarf2\n Specify that the compiler should\n-use DWARF2 debugging information as the default.\n+use DWARF 2 debugging information as the default.\n \n @item --enable-win32-registry\n-@itemx --enable-win32-registry=@var{KEY}\n+@itemx --enable-win32-registry=@var{key}\n @itemx --disable-win32-registry\n The @option{--enable-win32-registry} option enables Windows-hosted GCC\n to look up installations paths in the registry using the following key:\n \n @smallexample\n-@code{HKEY_LOCAL_MACHINE\\SOFTWARE\\Free Software Foundation\\@var{KEY}}\n+@code{HKEY_LOCAL_MACHINE\\SOFTWARE\\Free Software Foundation\\@var{key}}\n @end smallexample\n \n-@var{KEY} defaults to GCC version number, and can be overridden by the\n-@option{--enable-win32-registry=@var{KEY}} option.  Vendors and distributors\n+@var{key} defaults to GCC version number, and can be overridden by the\n+@option{--enable-win32-registry=@var{key}} option. Vendors and distributors\n who use custom installers are encouraged to provide a different key,\n perhaps one comprised of vendor name and GCC version number, to\n avoid conflict with existing installations.  This feature is enabled\n@@ -677,16 +687,16 @@ which has target include files.\n compiler, if @file{@var{prefix}/@var{target}/sys-include} doesn't pre-exist.\n These include files will be copied into the @file{gcc} install directory.\n Fixincludes will be run on these files to make them compatible with\n-@command{gcc}.\n+GCC.\n @item --with-libs=``@var{dir1} @var{dir2} @dots{} @var{dirN}''\n Specifies a list of directories which contain the target runtime\n libraries.  These libraries will be copied into the @file{gcc} install\n directory.\n @item --with-newlib\n-Specifies that ``newlib'' is\n+Specifies that @samp{newlib} is\n being used as the target C library.  This causes @code{__eprintf} to be\n-omitted from libgcc.a on the assumption that it will be provided by\n-newlib.\n+omitted from @file{libgcc.a} on the assumption that it will be provided by\n+@samp{newlib}.\n @end table\n \n Note that each @option{--enable} option has a corresponding\n@@ -776,8 +786,8 @@ gperf.\n \n @item\n Build target tools for use by the compiler such as binutils (bfd,\n-binutils, gas, gprof, ld, and opcodes)@*\n-if they have been individually linked\n+binutils, gas, gprof, ld, and opcodes)\n+if they have been individually linked \n or moved into the top level GCC source tree before configuring.\n \n @item\n@@ -805,8 +815,8 @@ without debugging information with @samp{make CFLAGS='-O' LIBCFLAGS='-g\n roughly 40% of disk space both for the bootstrap and the final installation.\n (Libraries will still contain debugging information.)\n \n-If you wish to use non-default flags when compiling the stage2 and\n-stage3 compile, set @code{BOOT_CFLAGS} on the command line when doing\n+If you wish to use non-default GCC flags when compiling the stage2 and\n+stage3 compilers, set @code{BOOT_CFLAGS} on the command line when doing\n @samp{make bootstrap}.  Non-default optimization flags are less well\n tested here than the default of @samp{-g -O2}, but should still work.\n In a few cases, you may find that you need to specify special flags such\n@@ -820,11 +830,11 @@ If you used the flag @option{--enable-languages=@dots{}} to restrict\n the compilers to be built, only those you've actually enabled will be\n built.  This will of course only build those runtime libraries, for\n which the particular compiler has been built.  Please note,\n-that re-defining LANGUAGES when calling @samp{make bootstrap}\n+that re-defining @env{LANGUAGES} when calling @samp{make bootstrap}\n @strong{does not} work anymore!\n \n If the comparison of stage2 and stage3 fails, this normally indicates\n-that the stage 2 compiler has compiled GCC incorrectly, and is therefore\n+that the stage2 compiler has compiled GCC incorrectly, and is therefore\n a potentially serious bug which you should investigate and report.  (On\n a few systems, meaningful comparison of object files is impossible; they\n always appear ``different''.  If you encounter this problem, you will\n@@ -902,10 +912,6 @@ the number of processors in your machine.\n @cindex Installing GCC: Testing\n @cindex Testsuite\n \n-@strong{Please note that this is only applicable\n-to current development versions of GCC and GCC 3.0 or later.\n-GCC 2.95.x does not come with a testsuite.}\n-\n Before you install GCC, you might wish to run the testsuite.  This\n step is optional and may require you to download additional software.\n \n@@ -919,11 +925,6 @@ dejagnu 1.3 is not sufficient.\n Now you may need specific preparations:\n \n @itemize @bullet\n-@item\n-In order to run the libio tests in GCC 2.95 and earlier versions of GCC\n-on targets which do not fully\n-support Unix/POSIX commands (e.g.@: Cygwin), the references to the @file{dbz}\n-directory have to be deleted from @file{libio/configure.in}.\n \n @item\n The following environment variables may need to be set appropriately, as in\n@@ -958,20 +959,20 @@ compilers as well as the C++ and Java runtime libraries.\n \n As a first possibility to cut down the number of tests that are run it is\n possible to use @samp{make check-gcc} or @samp{make check-g++}\n-in the gcc subdirectory of the object directory.  To further cut down the\n+in the @file{gcc} subdirectory of the object directory.  To further cut down the\n tests the following is possible:\n \n @example\n     make check-gcc RUNTESTFLAGS=\"execute.exp @var{other-options}\"\n @end example\n \n-This will run all gcc execute tests in the testsuite.\n+This will run all @command{gcc} execute tests in the testsuite.\n \n @example\n     make check-g++ RUNTESTFLAGS=\"old-deja.exp=9805* @var{other-options}\"\n @end example\n \n-This will run the g++ ``old-deja'' tests in the testsuite where the filename\n+This will run the @command{g++} ``old-deja'' tests in the testsuite where the filename\n matches @samp{9805*}.\n \n The @file{*.exp} files are located in the testsuite directories of the GCC\n@@ -1049,8 +1050,10 @@ should look here first if you think your results are unreasonable.\n @chapter Installing GCC: Final installation\n @end ifnothtml\n \n-Now that GCC has been built and tested, you can install it with\n-@samp{cd @var{objdir}; make install}.\n+Now that GCC has been built (and optionally tested), you can install it with\n+@example\n+cd @var{objdir}; make install\n+@end example\n \n That step completes the installation of GCC; user level binaries can\n be found in @file{@var{prefix}/bin} where @var{prefix} is the value you\n@@ -1066,11 +1069,11 @@ info format in @file{@var{infodir}} (normally @file{@var{prefix}/info}).\n If you don't mind, please quickly review the\n @uref{http://gcc.gnu.org/gcc-3.0/buildstat.html,,build status page}.\n If your system is not listed, send a note to\n-@uref{mailto:gcc@@gcc.gnu.org,,gcc@@gcc.gnu.org} indicating\n-that you successfully built and installed GCC@.\n+@email{gcc@@gcc.gnu.org} indicating\n+that you successfully built and installed GCC.\n \n Include the output from running @file{@var{srcdir}/config.guess}.  (Do\n-not send us the config.guess file itself, just the one-line output from\n+not send us the @file{config.guess} file itself, just the one-line output from\n running it!)\n \n If you find a bug, please report it following our\n@@ -1515,13 +1518,13 @@ we need to use the old assembler, invoked via the barely documented\n Compaq C Compiler:\n \n @example\n-   % CC=cc @var{srcdir}/configure [@var{target}] [@var{options}]\n+   % CC=cc @var{srcdir}/configure [@var{options}] [@var{target}]\n @end example\n \n or you can use a copy of GCC 2.95.3 or higher built on Tru64 UNIX V4.0:\n \n @example\n-   % CC=gcc -Wa,-oldas @var{srcdir}/configure [@var{target}] [@var{options}]\n+   % CC=gcc -Wa,-oldas @var{srcdir}/configure [@var{options}] [@var{target}]\n @end example\n \n GCC writes a @samp{.verstamp} directive to the assembler output file\n@@ -2446,7 +2449,7 @@ does not happen on 3.1.\n You absolutely @strong{must} use GNU sed and GNU make on this platform.\n \n \n-On NEXTSTEP 3.x where x < 3 the build of GCC will abort during\n+On NeXTSTEP 3.x where x < 3 the build of GCC will abort during  \n stage1 with an error message like this:\n \n @example"}]}