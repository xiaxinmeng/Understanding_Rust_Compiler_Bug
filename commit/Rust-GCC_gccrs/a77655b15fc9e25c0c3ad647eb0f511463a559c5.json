{"sha": "a77655b15fc9e25c0c3ad647eb0f511463a559c5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTc3NjU1YjE1ZmM5ZTI1YzBjM2FkNjQ3ZWIwZjUxMTQ2M2E1NTljNQ==", "commit": {"author": {"name": "Nick Clifton", "email": "nickc@redhat.com", "date": "2004-08-11T07:48:13Z"}, "committer": {"name": "Nick Clifton", "email": "nickc@gcc.gnu.org", "date": "2004-08-11T07:48:13Z"}, "message": "(arm_is_longcall_p): Update comment describing this funciton's behaviour.\n\n  Return true when the current function has a section attribute and\n  -mlong-calls is in effect.\n(ARM_DECLARE_FUNCTION_SIZE): Do not set the short-call marker when\n  -mlong-calls is in effect and the function has a section attribute.\n\nFrom-SVN: r85796", "tree": {"sha": "661f66abdfa039664d00fa34da9f8f0b6cf4f5ff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/661f66abdfa039664d00fa34da9f8f0b6cf4f5ff"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a77655b15fc9e25c0c3ad647eb0f511463a559c5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a77655b15fc9e25c0c3ad647eb0f511463a559c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a77655b15fc9e25c0c3ad647eb0f511463a559c5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a77655b15fc9e25c0c3ad647eb0f511463a559c5/comments", "author": {"login": "nickclifton", "id": 31441682, "node_id": "MDQ6VXNlcjMxNDQxNjgy", "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nickclifton", "html_url": "https://github.com/nickclifton", "followers_url": "https://api.github.com/users/nickclifton/followers", "following_url": "https://api.github.com/users/nickclifton/following{/other_user}", "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}", "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions", "organizations_url": "https://api.github.com/users/nickclifton/orgs", "repos_url": "https://api.github.com/users/nickclifton/repos", "events_url": "https://api.github.com/users/nickclifton/events{/privacy}", "received_events_url": "https://api.github.com/users/nickclifton/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6f4a43e029d1e36130a9ff55128a1d101cf32ec5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f4a43e029d1e36130a9ff55128a1d101cf32ec5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6f4a43e029d1e36130a9ff55128a1d101cf32ec5"}], "stats": {"total": 40, "additions": 32, "deletions": 8}, "files": [{"sha": "ecb489800f0c90ef44fc8ccb741eaee8310537aa", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a77655b15fc9e25c0c3ad647eb0f511463a559c5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a77655b15fc9e25c0c3ad647eb0f511463a559c5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a77655b15fc9e25c0c3ad647eb0f511463a559c5", "patch": "@@ -1,3 +1,12 @@\n+2004-08-11  Nick Clifton  <nickc@redhat.com>\n+\n+\t* config/arm/arm.c (arm_is_longcall_p): Update comment describing\n+\tthis funciton's behaviour.  Return true when the current function\n+\thas a section attribute and -mlong-calls is in effect.\n+\t* config/arm/arm.h (ARM_DECLARE_FUNCTION_SIZE): Do not set the\n+\tshort-call marker when -mlong-calls is in effect and the function\n+\thas a section attribute.\n+\n 2004-08-10  Zack Weinberg  <zack@codesourcery.com>\n \n \t* stmt.c (expand_return): If asked to return the RESULT_DECL,"}, {"sha": "5731a955b75682e110aa5a0d9ccad02f6c8ae4f9", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 16, "deletions": 7, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a77655b15fc9e25c0c3ad647eb0f511463a559c5/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a77655b15fc9e25c0c3ad647eb0f511463a559c5/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=a77655b15fc9e25c0c3ad647eb0f511463a559c5", "patch": "@@ -2748,7 +2748,7 @@ current_file_function_operand (rtx sym_ref)\n     return 1;\n \n   /* The current function is always defined within the current compilation\n-     unit.  if it s a weak definition however, then this may not be the real\n+     unit.  If it s a weak definition however, then this may not be the real\n      definition of the function, and so we have to say no.  */\n   if (sym_ref == XEXP (DECL_RTL (current_function_decl), 0)\n       && !DECL_WEAK (current_function_decl))\n@@ -2764,16 +2764,19 @@ current_file_function_operand (rtx sym_ref)\n         a.  has an __attribute__((long call))\n      or b.  is within the scope of a #pragma long_calls\n      or c.  the -mlong-calls command line switch has been specified\n+         .  and either:\n+                1. -ffunction-sections is in effect\n+\t     or 2. the current function has __attribute__ ((section))\n+\t     or 3. the target function has __attribute__ ((section))\n \n    However we do not generate a long call if the function:\n    \n         d.  has an __attribute__ ((short_call))\n      or e.  is inside the scope of a #pragma no_long_calls\n-     or f.  has an __attribute__ ((section))\n-     or g.  is defined within the current compilation unit.\n+     or f.  is defined within the current compilation unit.\n    \n    This function will be called by C fragments contained in the machine\n-   description file.  CALL_REF and CALL_COOKIE correspond to the matched\n+   description file.  SYM_REF and CALL_COOKIE correspond to the matched\n    rtl operands.  CALL_SYMBOL is used to distinguish between\n    two different callers of the function.  It is set to 1 in the\n    \"call_symbol\" and \"call_symbol_value\" patterns and to 0 in the \"call\"\n@@ -2796,9 +2799,15 @@ arm_is_longcall_p (rtx sym_ref, int call_cookie, int call_symbol)\n   if (call_cookie & CALL_SHORT)\n     return 0;\n \n-  if (TARGET_LONG_CALLS && flag_function_sections)\n-    return 1;\n-  \n+  if (TARGET_LONG_CALLS)\n+    {\n+      if (flag_function_sections\n+\t  || DECL_SECTION_NAME (current_function_decl))\n+\t/* c.3 is handled by the defintion of the\n+\t   ARM_DECLARE_FUNCTION_SIZE macro.  */\n+\treturn 1;\n+    }\n+\n   if (current_file_function_operand (sym_ref))\n     return 0;\n   "}, {"sha": "9c759fbe86608c0257240e4b9c40949fde8dc702", "filename": "gcc/config/arm/arm.h", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a77655b15fc9e25c0c3ad647eb0f511463a559c5/gcc%2Fconfig%2Farm%2Farm.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a77655b15fc9e25c0c3ad647eb0f511463a559c5/gcc%2Fconfig%2Farm%2Farm.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.h?ref=a77655b15fc9e25c0c3ad647eb0f511463a559c5", "patch": "@@ -2064,8 +2064,14 @@ typedef struct\n #define ASM_OUTPUT_LABELREF(FILE, NAME)\t\t\\\n    arm_asm_output_labelref (FILE, NAME)\n \n+/* Set the short-call flag for any function compiled in the current\n+   compilation unit.  We skip this for functions with the section\n+   attirubte when long-calls are in effect as this tells the compiler\n+   that the section might be placed a long way from the caller.\n+   See arm_is_longcall_p() for more information.  */\n #define ARM_DECLARE_FUNCTION_SIZE(STREAM, NAME, DECL)\t\\\n-  arm_encode_call_attribute (DECL, SHORT_CALL_FLAG_CHAR)\n+  if (!TARGET_LONG_CALLS || ! DECL_SECTION_NAME (DECL)) \\\n+    arm_encode_call_attribute (DECL, SHORT_CALL_FLAG_CHAR)\n \n /* The macros REG_OK_FOR..._P assume that the arg is a REG rtx\n    and check its validity for a certain class."}]}