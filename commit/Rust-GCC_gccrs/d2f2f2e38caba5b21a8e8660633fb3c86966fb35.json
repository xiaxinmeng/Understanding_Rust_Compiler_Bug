{"sha": "d2f2f2e38caba5b21a8e8660633fb3c86966fb35", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDJmMmYyZTM4Y2FiYTViMjFhOGU4NjYwNjMzZmIzYzg2OTY2ZmIzNQ==", "commit": {"author": {"name": "Fran\u00e7ois Dumont", "email": "fdumont@gcc.gnu.org", "date": "2013-04-26T20:13:41Z"}, "committer": {"name": "Fran\u00e7ois Dumont", "email": "fdumont@gcc.gnu.org", "date": "2013-04-26T20:13:41Z"}, "message": "2013-04-26  Fran\u00e7ois Dumont  <fdumont@gcc.gnu.org>\n\n\t* include/bits/hashtable_policy.h\n\t(_Insert_base<>::insert<_It>(_It, _It)): Enable move semantics.\n\t* testsuite/23_containers/unordered_set/insert/move_range.cc: New.\n\nFrom-SVN: r198346", "tree": {"sha": "1d11b6faa71069e953ae7f6940be83e234d773c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1d11b6faa71069e953ae7f6940be83e234d773c4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d2f2f2e38caba5b21a8e8660633fb3c86966fb35", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2f2f2e38caba5b21a8e8660633fb3c86966fb35", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d2f2f2e38caba5b21a8e8660633fb3c86966fb35", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2f2f2e38caba5b21a8e8660633fb3c86966fb35/comments", "author": null, "committer": null, "parents": [{"sha": "2c62cbaaf13c78f10657e91efdb8352dc8898b0d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c62cbaaf13c78f10657e91efdb8352dc8898b0d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c62cbaaf13c78f10657e91efdb8352dc8898b0d"}], "stats": {"total": 59, "additions": 58, "deletions": 1}, "files": [{"sha": "1048d2877ffdd5392d3ca5f1553360bd181f8705", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2f2f2e38caba5b21a8e8660633fb3c86966fb35/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2f2f2e38caba5b21a8e8660633fb3c86966fb35/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=d2f2f2e38caba5b21a8e8660633fb3c86966fb35", "patch": "@@ -1,3 +1,9 @@\n+2013-04-26  Fran\u00e7ois Dumont  <fdumont@gcc.gnu.org>\n+\n+\t* include/bits/hashtable_policy.h\n+\t(_Insert_base<>::insert<_It>(_It, _It)): Enable move semantics.\n+\t* testsuite/23_containers/unordered_set/insert/move_range.cc: New.\n+\n 2013-04-26  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* include/c_global/cstdio (gets): Provide only in C++98 and C++11."}, {"sha": "1cf6cb2ec53a401d5f676c21fbcd9caef001fc1b", "filename": "libstdc++-v3/include/bits/hashtable_policy.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2f2f2e38caba5b21a8e8660633fb3c86966fb35/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fhashtable_policy.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2f2f2e38caba5b21a8e8660633fb3c86966fb35/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fhashtable_policy.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fhashtable_policy.h?ref=d2f2f2e38caba5b21a8e8660633fb3c86966fb35", "patch": "@@ -665,7 +665,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t  __h._M_rehash(__do_rehash.second, __saved_state);\n \n \tfor (; __first != __last; ++__first)\n-\t  this->insert(*__first);\n+\t  __h._M_insert(*__first, __unique_keys());\n       }\n \n   /**"}, {"sha": "eb1e0d82c3dbf921edcd509ccbb23710ff018885", "filename": "libstdc++-v3/testsuite/23_containers/unordered_set/insert/move_range.cc", "status": "added", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2f2f2e38caba5b21a8e8660633fb3c86966fb35/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Finsert%2Fmove_range.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2f2f2e38caba5b21a8e8660633fb3c86966fb35/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Finsert%2Fmove_range.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Finsert%2Fmove_range.cc?ref=d2f2f2e38caba5b21a8e8660633fb3c86966fb35", "patch": "@@ -0,0 +1,51 @@\n+// { dg-options \"-std=c++11\" }\n+\n+// Copyright (C) 2013 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// range insert using move iterator\n+\n+#include <iterator>\n+#include <vector>\n+#include <unordered_set>\n+#include <testsuite_hooks.h>\n+#include <testsuite_counter_type.h>\n+\n+bool test __attribute__((unused)) = true;\n+\n+void test01()\n+{\n+  using namespace __gnu_test;\n+\n+  std::vector<counter_type> ref = { 0, 1, 2, 3, 4, 5 };\n+  typedef std::unordered_set<counter_type, counter_type_hasher> Set;\n+  Set s;\n+\n+  counter_type::reset();\n+\n+  s.insert(std::make_move_iterator(ref.begin()),\n+\t   std::make_move_iterator(ref.end()));\n+\n+  VERIFY( s.size() == ref.size() );\n+  VERIFY( counter_type::move_count == ref.size() );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}]}