{"sha": "316e3a13c6743c8c3181f0bf6df2d7af23edd10a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzE2ZTNhMTNjNjc0M2M4YzMxODFmMGJmNmRmMmQ3YWYyM2VkZDEwYQ==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2014-08-01T14:33:17Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-08-01T14:33:17Z"}, "message": "sem_ch3.adb, [...]: Code clean ups.\n\n2014-08-01  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_ch3.adb, einfo.ads, exp_ch4.adb: Code clean ups.\n\nFrom-SVN: r213477", "tree": {"sha": "5f2d3eadc673f44da9616325f0bc6f91e871762d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5f2d3eadc673f44da9616325f0bc6f91e871762d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/316e3a13c6743c8c3181f0bf6df2d7af23edd10a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/316e3a13c6743c8c3181f0bf6df2d7af23edd10a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/316e3a13c6743c8c3181f0bf6df2d7af23edd10a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/316e3a13c6743c8c3181f0bf6df2d7af23edd10a/comments", "author": null, "committer": null, "parents": [{"sha": "7f1a5156f9e5b821983c10375a46a9236cdfc9cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f1a5156f9e5b821983c10375a46a9236cdfc9cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7f1a5156f9e5b821983c10375a46a9236cdfc9cc"}], "stats": {"total": 49, "additions": 36, "deletions": 13}, "files": [{"sha": "525532509e083288ab3d5b8ef3513be7fe0d54a6", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/316e3a13c6743c8c3181f0bf6df2d7af23edd10a/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/316e3a13c6743c8c3181f0bf6df2d7af23edd10a/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=316e3a13c6743c8c3181f0bf6df2d7af23edd10a", "patch": "@@ -1,3 +1,7 @@\n+2014-08-01  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_ch3.adb, einfo.ads, exp_ch4.adb: Code clean ups.\n+\n 2014-08-01  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* einfo.ads (Has_Private_Ancestor): Remove obsolete usage."}, {"sha": "9c5a2ca03d06afd0abe4ff70f3dbd5455b324370", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/316e3a13c6743c8c3181f0bf6df2d7af23edd10a/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/316e3a13c6743c8c3181f0bf6df2d7af23edd10a/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=316e3a13c6743c8c3181f0bf6df2d7af23edd10a", "patch": "@@ -1803,8 +1803,8 @@ package Einfo is\n --       private type, making some components invisible and aggregates illegal.\n --       This flag is set at the point of derivation. The legality of the\n --       aggregate must be rechecked because it also depends on the visibility\n---       at the point the aggregate is resolved. See sem_aggr.adb.\n---       This is part of AI05-0115.\n+--       at the point the aggregate is resolved. See sem_aggr.adb. This is part\n+--       of AI05-0115.\n \n --    Has_Private_Declaration (Flag155)\n --       Defined in all entities. Set if it is the defining entity of a private"}, {"sha": "0e6ea4f8fb225c90dc15a014647b0abe7b4f4a86", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/316e3a13c6743c8c3181f0bf6df2d7af23edd10a/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/316e3a13c6743c8c3181f0bf6df2d7af23edd10a/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=316e3a13c6743c8c3181f0bf6df2d7af23edd10a", "patch": "@@ -2828,14 +2828,16 @@ package body Exp_Ch4 is\n                            Rhs_Discr_Val));\n                   end;\n \n+               --  All cases other than comparing Unchecked_Union types\n+\n                else\n                   declare\n                      T : constant Entity_Id := Etype (First_Formal (Eq_Op));\n-\n                   begin\n                      return\n                        Make_Function_Call (Loc,\n-                         Name => New_Occurrence_Of (Eq_Op, Loc),\n+                         Name                   =>\n+                           New_Occurrence_Of (Eq_Op, Loc),\n                          Parameter_Associations => New_List (\n                            OK_Convert_To (T, Lhs),\n                            OK_Convert_To (T, Rhs)));"}, {"sha": "e3362542e3954c618dcf96c25b58573b71ed0a88", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 26, "deletions": 9, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/316e3a13c6743c8c3181f0bf6df2d7af23edd10a/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/316e3a13c6743c8c3181f0bf6df2d7af23edd10a/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=316e3a13c6743c8c3181f0bf6df2d7af23edd10a", "patch": "@@ -6606,6 +6606,14 @@ package body Sem_Ch3 is\n             Full_Parent := Full_View (Full_Parent);\n          end if;\n \n+         --  And its underlying full view if necessary\n+\n+         if Is_Private_Type (Full_Parent)\n+           and then Present (Underlying_Full_View (Full_Parent))\n+         then\n+            Full_Parent := Underlying_Full_View (Full_Parent);\n+         end if;\n+\n          if Ekind (Full_Parent) in Record_Kind\n            or else\n              (Ekind (Full_Parent) in Enumeration_Kind\n@@ -6628,15 +6636,16 @@ package body Sem_Ch3 is\n             --  view, the completion does not derive them anew.\n \n             if Ekind (Full_Parent) in Record_Kind then\n+\n                --  If parent type is tagged, the completion inherits the proper\n                --  primitive operations.\n \n                if Is_Tagged_Type (Parent_Type) then\n-                  Build_Derived_Record_Type (\n-                    Full_N, Full_Parent, Full_Der, Derive_Subps);\n+                  Build_Derived_Record_Type\n+                    (Full_N, Full_Parent, Full_Der, Derive_Subps);\n                else\n-                  Build_Derived_Record_Type (\n-                    Full_N, Full_Parent, Full_Der, Derive_Subps => False);\n+                  Build_Derived_Record_Type\n+                    (Full_N, Full_Parent, Full_Der, Derive_Subps => False);\n                end if;\n \n             else\n@@ -6653,13 +6662,13 @@ package body Sem_Ch3 is\n \n          else\n             Full_Der :=\n-              Make_Defining_Identifier\n-                (Sloc (Derived_Type), Chars (Derived_Type));\n+              Make_Defining_Identifier (Sloc (Derived_Type),\n+                Chars => Chars (Derived_Type));\n             Set_Is_Itype (Full_Der);\n             Set_Associated_Node_For_Itype (Full_Der, N);\n             Set_Parent (Full_Der, N);\n-            Build_Derived_Type (\n-              N, Full_Parent, Full_Der, True, Derive_Subps => False);\n+            Build_Derived_Type\n+              (N, Full_Parent, Full_Der, True, Derive_Subps => False);\n          end if;\n \n          Set_Has_Private_Declaration (Full_Der);\n@@ -17876,12 +17885,20 @@ package body Sem_Ch3 is\n       Related_Nod : Node_Id)\n    is\n       Id_B   : constant Entity_Id := Base_Type (Id);\n-      Full_B : constant Entity_Id := Full_View (Id_B);\n+      Full_B : Entity_Id := Full_View (Id_B);\n       Full   : Entity_Id;\n \n    begin\n       if Present (Full_B) then\n \n+         --  Get to the underlying full view if necessary\n+\n+         if Is_Private_Type (Full_B)\n+           and then Present (Underlying_Full_View (Full_B))\n+         then\n+            Full_B := Underlying_Full_View (Full_B);\n+         end if;\n+\n          --  The Base_Type is already completed, we can complete the subtype\n          --  now. We have to create a new entity with the same name, Thus we\n          --  can't use Create_Itype."}]}