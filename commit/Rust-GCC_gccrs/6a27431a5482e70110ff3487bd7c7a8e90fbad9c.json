{"sha": "6a27431a5482e70110ff3487bd7c7a8e90fbad9c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmEyNzQzMWE1NDgyZTcwMTEwZmYzNDg3YmQ3YzdhOGU5MGZiYWQ5Yw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2016-03-04T07:39:21Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-03-04T07:39:21Z"}, "message": "extend.texi (__builtin_alloca, [...]): Fix @xref usage.\n\n\t* doc/extend.texi (__builtin_alloca, __builtin_alloca_with_align):\n\tFix @xref usage.\n\nFrom-SVN: r233960", "tree": {"sha": "578d2623d30cb0d8c924ce8c14f543fe2424562f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/578d2623d30cb0d8c924ce8c14f543fe2424562f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6a27431a5482e70110ff3487bd7c7a8e90fbad9c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a27431a5482e70110ff3487bd7c7a8e90fbad9c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a27431a5482e70110ff3487bd7c7a8e90fbad9c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a27431a5482e70110ff3487bd7c7a8e90fbad9c/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fba054c26857d342f1e274870767a5eab14773b0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fba054c26857d342f1e274870767a5eab14773b0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fba054c26857d342f1e274870767a5eab14773b0"}], "stats": {"total": 10, "additions": 7, "deletions": 3}, "files": [{"sha": "828f6081633e446e431fee778b7b989604fa371e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a27431a5482e70110ff3487bd7c7a8e90fbad9c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a27431a5482e70110ff3487bd7c7a8e90fbad9c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6a27431a5482e70110ff3487bd7c7a8e90fbad9c", "patch": "@@ -1,5 +1,8 @@\n 2016-03-04  Jakub Jelinek  <jakub@redhat.com>\n \n+\t* doc/extend.texi (__builtin_alloca, __builtin_alloca_with_align):\n+\tFix @xref usage.\n+\n \tPR debug/69947\n \t* dwarf2out.c (prune_unused_types_walk_loc_descr): Handle\n \tall other ops that have dw_val_class_die_ref operands,"}, {"sha": "bdb43ba4ace4a49a37d58529efa69a85cc8feb37", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a27431a5482e70110ff3487bd7c7a8e90fbad9c/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a27431a5482e70110ff3487bd7c7a8e90fbad9c/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=6a27431a5482e70110ff3487bd7c7a8e90fbad9c", "patch": "@@ -10714,10 +10714,11 @@ it is the responsibility of its caller to make sure the argument doesn't\n cause it to exceed the stack size limit.\n The @code{__builtin_alloca} function is provided to make it possible to\n allocate on the stack arrays of bytes with an upper bound that may be\n-computed at run time.  Since C99 @xref{Variable Length} Arrays offer\n+computed at run time.  Since C99 Variable Length Arrays offer\n similar functionality under a portable, more convenient, and safer\n interface they are recommended instead, in both C99 and C++ programs\n where GCC provides them as an extension.\n+@xref{Variable Length}, for details.\n \n @end deftypefn\n \n@@ -10761,10 +10762,10 @@ the argument doesn't cause it to exceed the stack size limit.\n The @code{__builtin_alloca_with_align} function is provided to make\n it possible to allocate on the stack overaligned arrays of bytes with\n an upper bound that may be computed at run time.  Since C99\n-@xref{Variable Length} Arrays offer the same functionality under\n+Variable Length Arrays offer the same functionality under\n a portable, more convenient, and safer interface they are recommended\n instead, in both C99 and C++ programs where GCC provides them as\n-an extension.\n+an extension.  @xref{Variable Length}, for details.\n \n @end deftypefn\n "}]}