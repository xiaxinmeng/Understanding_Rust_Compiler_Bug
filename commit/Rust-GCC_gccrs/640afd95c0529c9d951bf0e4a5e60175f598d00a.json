{"sha": "640afd95c0529c9d951bf0e4a5e60175f598d00a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjQwYWZkOTVjMDUyOWM5ZDk1MWJmMGU0YTVlNjAxNzVmNTk4ZDAwYQ==", "commit": {"author": {"name": "Daniel Franke", "email": "franke.daniel@gmail.com", "date": "2007-05-04T19:24:43Z"}, "committer": {"name": "Daniel Franke", "email": "dfranke@gcc.gnu.org", "date": "2007-05-04T19:24:43Z"}, "message": "re PR libfortran/31760 (missing elemental applicability)\n\ngcc/fortran:\n2007-05-04  Daniel Franke  <franke.daniel@gmail.com>\n\n        PR fortran/31760\n        * intrinsic.c (add_functions): Replaced calls to gfc_check_g77_math1\n        by gfc_check_fn_r to avoid checks for scalarity.\n        * check.c (gfc_check_besn): Removed check for scalarity.\n        (gfc_check_g77_math1): Removed.\n        * intrinsic.h (gfc_check_g77_math1): Removed.\n\ngcc/testsuite:\n2007-05-04  Daniel Franke  <franke.daniel@gmail.com>\n\n        PR fortran/31760\n        * gfortran.dg/erf.f90: New test.\n        * gfortran.dg/besxy.f90: New test.\n\n\n[gcc/fortran/ChangeLog was already committed in r124441 by accident]\n\nFrom-SVN: r124446", "tree": {"sha": "a9a85bb9dcfc58aafc87b2db103ade8b8b74d06c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a9a85bb9dcfc58aafc87b2db103ade8b8b74d06c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/640afd95c0529c9d951bf0e4a5e60175f598d00a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/640afd95c0529c9d951bf0e4a5e60175f598d00a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/640afd95c0529c9d951bf0e4a5e60175f598d00a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/640afd95c0529c9d951bf0e4a5e60175f598d00a/comments", "author": {"login": "dfranke76", "id": 15729164, "node_id": "MDQ6VXNlcjE1NzI5MTY0", "avatar_url": "https://avatars.githubusercontent.com/u/15729164?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dfranke76", "html_url": "https://github.com/dfranke76", "followers_url": "https://api.github.com/users/dfranke76/followers", "following_url": "https://api.github.com/users/dfranke76/following{/other_user}", "gists_url": "https://api.github.com/users/dfranke76/gists{/gist_id}", "starred_url": "https://api.github.com/users/dfranke76/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dfranke76/subscriptions", "organizations_url": "https://api.github.com/users/dfranke76/orgs", "repos_url": "https://api.github.com/users/dfranke76/repos", "events_url": "https://api.github.com/users/dfranke76/events{/privacy}", "received_events_url": "https://api.github.com/users/dfranke76/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f1028b0230c00b8148713c3981d88930c04ce1b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1028b0230c00b8148713c3981d88930c04ce1b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f1028b0230c00b8148713c3981d88930c04ce1b6"}], "stats": {"total": 87, "additions": 55, "deletions": 32}, "files": [{"sha": "722e9deae672692051e84b78344cb5961cf9a532", "filename": "gcc/fortran/check.c", "status": "modified", "additions": 0, "deletions": 19, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/640afd95c0529c9d951bf0e4a5e60175f598d00a/gcc%2Ffortran%2Fcheck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/640afd95c0529c9d951bf0e4a5e60175f598d00a/gcc%2Ffortran%2Fcheck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fcheck.c?ref=640afd95c0529c9d951bf0e4a5e60175f598d00a", "patch": "@@ -655,9 +655,6 @@ gfc_check_besn (gfc_expr *n, gfc_expr *x)\n   if (type_check (n, 0, BT_INTEGER) == FAILURE)\n     return FAILURE;\n \n-  if (scalar_check (x, 1) == FAILURE)\n-    return FAILURE;\n-\n   if (type_check (x, 1, BT_REAL) == FAILURE)\n     return FAILURE;\n \n@@ -1037,22 +1034,6 @@ gfc_check_fnum (gfc_expr *unit)\n }\n \n \n-/* This is used for the g77 one-argument Bessel functions, and the\n-   error function.  */\n-\n-try\n-gfc_check_g77_math1 (gfc_expr *x)\n-{\n-  if (scalar_check (x, 0) == FAILURE)\n-    return FAILURE;\n-\n-  if (type_check (x, 0, BT_REAL) == FAILURE)\n-    return FAILURE;\n-\n-  return SUCCESS;\n-}\n-\n-\n try\n gfc_check_huge (gfc_expr *x)\n {"}, {"sha": "c538d07b29eaf8d2c6d66c1011a932822bc711f6", "filename": "gcc/fortran/intrinsic.c", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/640afd95c0529c9d951bf0e4a5e60175f598d00a/gcc%2Ffortran%2Fintrinsic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/640afd95c0529c9d951bf0e4a5e60175f598d00a/gcc%2Ffortran%2Fintrinsic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fintrinsic.c?ref=640afd95c0529c9d951bf0e4a5e60175f598d00a", "patch": "@@ -1097,21 +1097,21 @@ add_functions (void)\n   \n   /* Bessel and Neumann functions for G77 compatibility.  */\n   add_sym_1 (\"besj0\", ELEMENTAL, ACTUAL_NO, BT_REAL, dr, GFC_STD_GNU,\n-\t     gfc_check_g77_math1, NULL, gfc_resolve_g77_math1,\n+\t     gfc_check_fn_r, NULL, gfc_resolve_g77_math1,\n \t     x, BT_REAL, dr, REQUIRED);\n \n   add_sym_1 (\"dbesj0\", ELEMENTAL, ACTUAL_NO, BT_REAL, dd, GFC_STD_GNU,\n-\t     gfc_check_g77_math1, NULL, gfc_resolve_g77_math1,\n+\t     gfc_check_fn_r, NULL, gfc_resolve_g77_math1,\n \t     x, BT_REAL, dd, REQUIRED);\n \n   make_generic (\"besj0\", GFC_ISYM_J0, GFC_STD_GNU);\n \n   add_sym_1 (\"besj1\", ELEMENTAL, ACTUAL_NO, BT_REAL, dr, GFC_STD_GNU,\n-\t     gfc_check_g77_math1, NULL, gfc_resolve_g77_math1,\n+\t     gfc_check_fn_r, NULL, gfc_resolve_g77_math1,\n \t     x, BT_REAL, dr, REQUIRED);\n \n   add_sym_1 (\"dbesj1\", ELEMENTAL, ACTUAL_NO, BT_REAL, dd, GFC_STD_GNU,\n-\t     gfc_check_g77_math1, NULL, gfc_resolve_g77_math1,\n+\t     gfc_check_fn_r, NULL, gfc_resolve_g77_math1,\n \t     x, BT_REAL, dd, REQUIRED);\n \n   make_generic (\"besj1\", GFC_ISYM_J1, GFC_STD_GNU);\n@@ -1127,21 +1127,21 @@ add_functions (void)\n   make_generic (\"besjn\", GFC_ISYM_JN, GFC_STD_GNU);\n \n   add_sym_1 (\"besy0\", ELEMENTAL, ACTUAL_NO, BT_REAL, dr, GFC_STD_GNU,\n-\t     gfc_check_g77_math1, NULL, gfc_resolve_g77_math1,\n+\t     gfc_check_fn_r, NULL, gfc_resolve_g77_math1,\n \t     x, BT_REAL, dr, REQUIRED);\n \n   add_sym_1 (\"dbesy0\", ELEMENTAL, ACTUAL_NO, BT_REAL, dd, GFC_STD_GNU,\n-\t     gfc_check_g77_math1, NULL, gfc_resolve_g77_math1,\n+\t     gfc_check_fn_r, NULL, gfc_resolve_g77_math1,\n \t     x, BT_REAL, dd, REQUIRED);\n \n   make_generic (\"besy0\", GFC_ISYM_Y0, GFC_STD_GNU);\n \n   add_sym_1 (\"besy1\", ELEMENTAL, ACTUAL_NO, BT_REAL, dr, GFC_STD_GNU,\n-\t     gfc_check_g77_math1, NULL, gfc_resolve_g77_math1,\n+\t     gfc_check_fn_r, NULL, gfc_resolve_g77_math1,\n \t     x, BT_REAL, dr, REQUIRED);\n \n   add_sym_1 (\"dbesy1\", ELEMENTAL, ACTUAL_NO, BT_REAL, dd, GFC_STD_GNU,\n-\t     gfc_check_g77_math1, NULL, gfc_resolve_g77_math1,\n+\t     gfc_check_fn_r, NULL, gfc_resolve_g77_math1,\n \t     x, BT_REAL, dd, REQUIRED);\n \n   make_generic (\"besy1\", GFC_ISYM_Y1, GFC_STD_GNU);\n@@ -1340,21 +1340,21 @@ add_functions (void)\n \n   /* G77 compatibility for the ERF() and ERFC() functions.  */\n   add_sym_1 (\"erf\", ELEMENTAL, ACTUAL_NO, BT_REAL, dr, GFC_STD_GNU,\n-\t     gfc_check_g77_math1, NULL, gfc_resolve_g77_math1,\n+\t     gfc_check_fn_r, NULL, gfc_resolve_g77_math1,\n \t     x, BT_REAL, dr, REQUIRED);\n \n   add_sym_1 (\"derf\", ELEMENTAL, ACTUAL_NO, BT_REAL, dd, GFC_STD_GNU,\n-\t     gfc_check_g77_math1, NULL, gfc_resolve_g77_math1,\n+\t     gfc_check_fn_r, NULL, gfc_resolve_g77_math1,\n \t     x, BT_REAL, dd, REQUIRED);\n \n   make_generic (\"erf\", GFC_ISYM_ERF, GFC_STD_GNU);\n \n   add_sym_1 (\"erfc\", ELEMENTAL, ACTUAL_NO, BT_REAL, dr, GFC_STD_GNU,\n-\t     gfc_check_g77_math1, NULL, gfc_resolve_g77_math1,\n+\t     gfc_check_fn_r, NULL, gfc_resolve_g77_math1,\n \t     x, BT_REAL, dr, REQUIRED);\n \n   add_sym_1 (\"derfc\", ELEMENTAL, ACTUAL_NO, BT_REAL, dd, GFC_STD_GNU,\n-\t     gfc_check_g77_math1, NULL, gfc_resolve_g77_math1,\n+\t     gfc_check_fn_r, NULL, gfc_resolve_g77_math1,\n \t     x, BT_REAL, dd, REQUIRED);\n \n   make_generic (\"erfc\", GFC_ISYM_ERFC, GFC_STD_GNU);"}, {"sha": "d4a4fc5ce85e01fa684070cc2f21d205b6237385", "filename": "gcc/fortran/intrinsic.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/640afd95c0529c9d951bf0e4a5e60175f598d00a/gcc%2Ffortran%2Fintrinsic.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/640afd95c0529c9d951bf0e4a5e60175f598d00a/gcc%2Ffortran%2Fintrinsic.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fintrinsic.h?ref=640afd95c0529c9d951bf0e4a5e60175f598d00a", "patch": "@@ -62,7 +62,6 @@ try gfc_check_fn_c (gfc_expr *);\n try gfc_check_fn_r (gfc_expr *);\n try gfc_check_fn_rc (gfc_expr *);\n try gfc_check_fnum (gfc_expr *);\n-try gfc_check_g77_math1 (gfc_expr *);\n try gfc_check_hostnm (gfc_expr *);\n try gfc_check_huge (gfc_expr *);\n try gfc_check_i (gfc_expr *);"}, {"sha": "c8ea1b29ae3cc30647d3e9853b0bdd8ad87526d3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/640afd95c0529c9d951bf0e4a5e60175f598d00a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/640afd95c0529c9d951bf0e4a5e60175f598d00a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=640afd95c0529c9d951bf0e4a5e60175f598d00a", "patch": "@@ -1,3 +1,9 @@\n+2007-05-04  Daniel Franke  <franke.daniel@gmail.com>\n+\n+\tPR fortran/31760\n+\t* gfortran.dg/erf.f90: New test.\n+\t* gfortran.dg/besxy.f90: New test.\n+\n 2007-05-04  Daniel Franke  <franke.daniel@gmail.com>\n \n \tPR fortran/22359"}, {"sha": "5b4cbba97f247e4ee40828dba82068db256c96ca", "filename": "gcc/testsuite/gfortran.dg/besxy.f90", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/640afd95c0529c9d951bf0e4a5e60175f598d00a/gcc%2Ftestsuite%2Fgfortran.dg%2Fbesxy.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/640afd95c0529c9d951bf0e4a5e60175f598d00a/gcc%2Ftestsuite%2Fgfortran.dg%2Fbesxy.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fbesxy.f90?ref=640afd95c0529c9d951bf0e4a5e60175f598d00a", "patch": "@@ -0,0 +1,24 @@\n+! { dg-do compile }\n+!\n+! Check whether BESXY functions take scalars and\n+! arrays as arguments (PR31760).\n+!\n+PROGRAM test_erf\n+  REAL :: r = 0.0, ra(2) = (/ 0.0, 1.0 /)\n+\n+  r  = BESJ0(r)\n+  r  = BESJ1(r)\n+  r  = BESJN(0, r)\n+\n+  r  = BESY0(r)\n+  r  = BESY1(r)\n+  r  = BESYN(0, r)\n+\n+  ra = BESJ0(ra)\n+  ra = BESJ1(ra)\n+  ra = BESJN(0, ra)\n+\n+  ra = BESY0(ra)\n+  ra = BESY1(ra)\n+  ra = BESYN(0, ra)\n+END PROGRAM\n\\ No newline at end of file"}, {"sha": "33d0ecc601b2a71c22a5f63e234b002473402a34", "filename": "gcc/testsuite/gfortran.dg/erf.f90", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/640afd95c0529c9d951bf0e4a5e60175f598d00a/gcc%2Ftestsuite%2Fgfortran.dg%2Ferf.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/640afd95c0529c9d951bf0e4a5e60175f598d00a/gcc%2Ftestsuite%2Fgfortran.dg%2Ferf.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ferf.f90?ref=640afd95c0529c9d951bf0e4a5e60175f598d00a", "patch": "@@ -0,0 +1,13 @@\n+! { dg-do compile }\n+!\n+! Check whether ERF/ERFC take scalars and arrays as arguments (PR31760).\n+!\n+PROGRAM test_erf\n+  REAL :: r = 0.0, ra(2) = (/ 0.0, 1.0 /)\n+\n+  r  = erf(r)\n+  r  = erfc(r)\n+\n+  ra = erf(ra)\n+  ra = erfc(ra)\n+END PROGRAM\n\\ No newline at end of file"}]}