{"sha": "444aea52f66b64d8b960d1751592be836ce3d8c7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDQ0YWVhNTJmNjZiNjRkOGI5NjBkMTc1MTU5MmJlODM2Y2UzZDhjNw==", "commit": {"author": {"name": "J\"orn Rennecke", "email": "joern.rennecke@st.com", "date": "2005-12-07T23:41:19Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "2005-12-07T23:41:19Z"}, "message": "reload.h (reg_equiv_invariant): Declare.\n\n2005-12-07  J\"orn Rennecke <joern.rennecke@st.com>\n\n\t* reload.h (reg_equiv_invariant): Declare.\n\t* reload.c (refers_to_regno_for_reload_p): Allow R to be a pseudo\n\tregister also when reg_equiv_invariant[R] is set.\n\nFrom-SVN: r108195", "tree": {"sha": "d0deeecd83da64d867a580211bcd60f33eadacd4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d0deeecd83da64d867a580211bcd60f33eadacd4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/444aea52f66b64d8b960d1751592be836ce3d8c7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/444aea52f66b64d8b960d1751592be836ce3d8c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/444aea52f66b64d8b960d1751592be836ce3d8c7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/444aea52f66b64d8b960d1751592be836ce3d8c7/comments", "author": null, "committer": null, "parents": [{"sha": "c60fb9672ac0873febe871cfe2dc3ee984721c84", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c60fb9672ac0873febe871cfe2dc3ee984721c84", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c60fb9672ac0873febe871cfe2dc3ee984721c84"}], "stats": {"total": 9, "additions": 8, "deletions": 1}, "files": [{"sha": "d743f29c8132b16401f8e3f3d0fed2a062a515c3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/444aea52f66b64d8b960d1751592be836ce3d8c7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/444aea52f66b64d8b960d1751592be836ce3d8c7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=444aea52f66b64d8b960d1751592be836ce3d8c7", "patch": "@@ -1,3 +1,9 @@\n+2005-12-07  J\"orn Rennecke <joern.rennecke@st.com>\n+\n+\t* reload.h (reg_equiv_invariant): Declare.\n+\t* reload.c (refers_to_regno_for_reload_p): Allow R to be a pseudo\n+\tregister also when reg_equiv_invariant[R] is set.\n+\n 2005-12-07  Richard Sandiford  <richard@codesourcery.com>\n \t    Andreas Tobler  <a.tobler@schweiz.ch>\n "}, {"sha": "0f98694ef401c805c0daa18b178b23c118a70618", "filename": "gcc/reload.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/444aea52f66b64d8b960d1751592be836ce3d8c7/gcc%2Freload.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/444aea52f66b64d8b960d1751592be836ce3d8c7/gcc%2Freload.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload.c?ref=444aea52f66b64d8b960d1751592be836ce3d8c7", "patch": "@@ -6223,7 +6223,7 @@ refers_to_regno_for_reload_p (unsigned int regno, unsigned int endregno,\n \t\t\t\t\t\t reg_equiv_memory_loc[r],\n \t\t\t\t\t\t (rtx*) 0);\n \n-\t  gcc_assert (reg_equiv_constant[r]);\n+\t  gcc_assert (reg_equiv_constant[r] || reg_equiv_invariant[r]);\n \t  return 0;\n \t}\n "}, {"sha": "a63010c630aa928cf22e4effdf164e51dfded1b2", "filename": "gcc/reload.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/444aea52f66b64d8b960d1751592be836ce3d8c7/gcc%2Freload.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/444aea52f66b64d8b960d1751592be836ce3d8c7/gcc%2Freload.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload.h?ref=444aea52f66b64d8b960d1751592be836ce3d8c7", "patch": "@@ -157,6 +157,7 @@ extern int n_reloads;\n \n extern GTY (()) struct varray_head_tag *reg_equiv_memory_loc_varray;\n extern rtx *reg_equiv_constant;\n+extern rtx *reg_equiv_invariant;\n extern rtx *reg_equiv_memory_loc;\n extern rtx *reg_equiv_address;\n extern rtx *reg_equiv_mem;"}]}