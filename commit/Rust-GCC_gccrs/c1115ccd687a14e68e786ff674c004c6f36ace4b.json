{"sha": "c1115ccd687a14e68e786ff674c004c6f36ace4b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzExMTVjY2Q2ODdhMTRlNjhlNzg2ZmY2NzRjMDA0YzZmMzZhY2U0Yg==", "commit": {"author": {"name": "Richard Sandiford", "email": "rsandifo@redhat.com", "date": "2003-07-14T20:23:38Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2003-07-14T20:23:38Z"}, "message": "elf.h (ASM_DECLARE_OBJECT_NAME): Use mips_declare_object_name.\n\n\t* config/mips/elf.h (ASM_DECLARE_OBJECT_NAME): Use\n\tmips_declare_object_name.\n\t(ASM_FINISH_DECLARE_OBJECT): Likewise mips_finish_declare_object.\n\t* config/mips/elf64.h: As for elf.h.\n\t* config/mips/iris6.h: Likewise.\n\t* config/mips/linux.h (ASM_DECLARE_OBJECT_NAME): As for elf.h.\n\t* config/mips/mips.h (ASM_DECLARE_OBJECT_NAME): Remove unnecessary\n\tdo...while (0) block.\n\t* config/mips/mips-protos.h (mips_declare_object_name): Declare.\n\t(mips_finish_declare_object): Declare.\n\t* config/mips/mips.c (mips_declare_object_name): New function.\n\t(mips_finish_declare_object): New function.\n\nFrom-SVN: r69352", "tree": {"sha": "d8fcce325648b50082ca7959a14505993fc8914f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d8fcce325648b50082ca7959a14505993fc8914f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c1115ccd687a14e68e786ff674c004c6f36ace4b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1115ccd687a14e68e786ff674c004c6f36ace4b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c1115ccd687a14e68e786ff674c004c6f36ace4b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1115ccd687a14e68e786ff674c004c6f36ace4b/comments", "author": null, "committer": null, "parents": [{"sha": "748d4c7e65660d515e71a361b186bd31f9c4e06a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/748d4c7e65660d515e71a361b186bd31f9c4e06a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/748d4c7e65660d515e71a361b186bd31f9c4e06a"}], "stats": {"total": 242, "additions": 85, "deletions": 157}, "files": [{"sha": "f3132a14cde0afed72d85676a201097d8291f66c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1115ccd687a14e68e786ff674c004c6f36ace4b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1115ccd687a14e68e786ff674c004c6f36ace4b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c1115ccd687a14e68e786ff674c004c6f36ace4b", "patch": "@@ -1,5 +1,18 @@\n 2003-07-14  Richard Sandiford  <rsandifo@redhat.com>\n \n+\t* config/mips/elf.h (ASM_DECLARE_OBJECT_NAME): Use\n+\tmips_declare_object_name.\n+\t(ASM_FINISH_DECLARE_OBJECT): Likewise mips_finish_declare_object.\n+\t* config/mips/elf64.h: As for elf.h.\n+\t* config/mips/iris6.h: Likewise.\n+\t* config/mips/linux.h (ASM_DECLARE_OBJECT_NAME): As for elf.h.\n+\t* config/mips/mips.h (ASM_DECLARE_OBJECT_NAME): Remove unnecessary\n+\tdo...while (0) block.\n+\t* config/mips/mips-protos.h (mips_declare_object_name): Declare.\n+\t(mips_finish_declare_object): Declare.\n+\t* config/mips/mips.c (mips_declare_object_name): New function.\n+\t(mips_finish_declare_object): New function.\n+\n \t* config/mips/elf.h (SBSS_SECTION_ASM_OP): Delete.\n \t* config/mips/linux.h: Likewise.\n "}, {"sha": "a13c864a729cb9e164be3411fbae31661037eda6", "filename": "gcc/config/mips/elf.h", "status": "modified", "additions": 5, "deletions": 44, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1115ccd687a14e68e786ff674c004c6f36ace4b/gcc%2Fconfig%2Fmips%2Felf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1115ccd687a14e68e786ff674c004c6f36ace4b/gcc%2Fconfig%2Fmips%2Felf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Felf.h?ref=c1115ccd687a14e68e786ff674c004c6f36ace4b", "patch": "@@ -95,50 +95,11 @@ do {\t\t\t\t\t\t\t\t\t\\\n } while (0)\n #endif\n \n-/* These macros generate the special .type and .size directives which\n-   are used to set the corresponding fields of the linker symbol table\n-   entries in an ELF object file under SVR4.  These macros also output\n-   the starting labels for the relevant functions/objects.  */\n-\n-/* Write the extra assembler code needed to declare an object properly.  */\n-\n-#undef  ASM_DECLARE_OBJECT_NAME\n-#define ASM_DECLARE_OBJECT_NAME(FILE, NAME, DECL)\t\t\t\\\n-  do {\t\t\t\t\t\t\t\t\t\\\n-    HOST_WIDE_INT size;\t\t\t\t\t\t\t\\\n-    ASM_OUTPUT_TYPE_DIRECTIVE (FILE, NAME, \"object\");\t\t\t\\\n-    size_directive_output = 0;\t\t\t\t\t\t\\\n-    if (!flag_inhibit_size_directive && DECL_SIZE (DECL))\t\t\\\n-      {\t\t\t\t\t\t\t\t\t\\\n-\tsize_directive_output = 1;\t\t\t\t\t\\\n-\tsize = int_size_in_bytes (TREE_TYPE (DECL));\t\t\t\\\n-\tASM_OUTPUT_SIZE_DIRECTIVE (FILE, NAME, size);\t\t\t\\\n-      }\t\t\t\t\t\t\t\t\t\\\n-    mips_declare_object (FILE, NAME, \"\", \":\\n\", 0);\t\t\t\\\n-  } while (0)\n-\n-/* Output the size directive for a decl in rest_of_decl_compilation\n-   in the case where we did not do so before the initializer.\n-   Once we find the error_mark_node, we know that the value of\n-   size_directive_output was set\n-   by ASM_DECLARE_OBJECT_NAME when it was run for the same decl.  */\n-\n-#undef  ASM_FINISH_DECLARE_OBJECT\n-#define ASM_FINISH_DECLARE_OBJECT(FILE, DECL, TOP_LEVEL, AT_END)\t \\\n-do {\t\t\t\t\t\t\t\t\t \\\n-     const char *name = XSTR (XEXP (DECL_RTL (DECL), 0), 0);\t\t \\\n-     HOST_WIDE_INT size;\t\t\t\t\t\t \\\n-\t\t\t\t\t\t\t\t\t \\\n-     if (!flag_inhibit_size_directive && DECL_SIZE (DECL)\t\t \\\n-         && ! AT_END && TOP_LEVEL\t\t\t\t\t \\\n-\t && DECL_INITIAL (DECL) == error_mark_node\t\t\t \\\n-\t && !size_directive_output)\t\t\t\t\t \\\n-       {\t\t\t\t\t\t\t\t \\\n-\t size_directive_output = 1;\t\t\t\t\t \\\n-\t size = int_size_in_bytes (TREE_TYPE (DECL));\t\t\t \\\n-\t ASM_OUTPUT_SIZE_DIRECTIVE (FILE, name, size);\t\t\t \\\n-       }\t\t\t\t\t\t\t\t \\\n-   } while (0)\n+#undef ASM_DECLARE_OBJECT_NAME\n+#define ASM_DECLARE_OBJECT_NAME mips_declare_object_name\n+\n+#undef ASM_FINISH_DECLARE_OBJECT\n+#define ASM_FINISH_DECLARE_OBJECT mips_finish_declare_object\n \n #define ASM_OUTPUT_DEF(FILE,LABEL1,LABEL2)                            \\\n  do { fputc ( '\\t', FILE);                                            \\"}, {"sha": "b520812a8e600ad65338061753104db36943016f", "filename": "gcc/config/mips/elf64.h", "status": "modified", "additions": 2, "deletions": 40, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1115ccd687a14e68e786ff674c004c6f36ace4b/gcc%2Fconfig%2Fmips%2Felf64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1115ccd687a14e68e786ff674c004c6f36ace4b/gcc%2Fconfig%2Fmips%2Felf64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Felf64.h?ref=c1115ccd687a14e68e786ff674c004c6f36ace4b", "patch": "@@ -60,49 +60,11 @@ Boston, MA 02111-1307, USA.  */\n #define TYPE_ASM_OP\t\"\\t.type\\t\"\n #define SIZE_ASM_OP\t\"\\t.size\\t\"\n \n-/* These macros generate the special .type and .size directives which\n-   are used to set the corresponding fields of the linker symbol table\n-   entries in an ELF object file under SVR4.  These macros also output\n-   the starting labels for the relevant functions/objects.  */\n-\n-/* Write the extra assembler code needed to declare an object properly.  */\n-\n #undef ASM_DECLARE_OBJECT_NAME\n-#define ASM_DECLARE_OBJECT_NAME(FILE, NAME, DECL)\t\t\t\\\n-  do {\t\t\t\t\t\t\t\t\t\\\n-    HOST_WIDE_INT size;\t\t\t\t\t\t\t\\\n-    ASM_OUTPUT_TYPE_DIRECTIVE (FILE, NAME, \"object\");\t\t\t\\\n-    size_directive_output = 0;\t\t\t\t\t\t\\\n-    if (!flag_inhibit_size_directive && DECL_SIZE (DECL))\t\t\\\n-      {\t\t\t\t\t\t\t\t\t\\\n-\tsize_directive_output = 1;\t\t\t\t\t\\\n-\tsize = int_size_in_bytes (TREE_TYPE (DECL));\t\t\t\\\n-\tASM_OUTPUT_SIZE_DIRECTIVE (FILE, NAME, size);\t\t\t\\\n-      }\t\t\t\t\t\t\t\t\t\\\n-    mips_declare_object (FILE, NAME, \"\", \":\\n\", 0);\t\t\t\\\n-  } while (0)\n-\n-/* Output the size directive for a decl in rest_of_decl_compilation\n-   in the case where we did not do so before the initializer.\n-   Once we find the error_mark_node, we know that the value of\n-   size_directive_output was set\n-   by ASM_DECLARE_OBJECT_NAME when it was run for the same decl.  */\n+#define ASM_DECLARE_OBJECT_NAME mips_declare_object_name\n \n #undef ASM_FINISH_DECLARE_OBJECT\n-#define ASM_FINISH_DECLARE_OBJECT(FILE, DECL, TOP_LEVEL, AT_END)\t \\\n-do {\t\t\t\t\t\t\t\t\t \\\n-     const char *name = XSTR (XEXP (DECL_RTL (DECL), 0), 0);\t\t \\\n-     HOST_WIDE_INT size;\t\t\t\t\t\t \\\n-     if (!flag_inhibit_size_directive && DECL_SIZE (DECL)\t\t \\\n-         && ! AT_END && TOP_LEVEL\t\t\t\t\t \\\n-\t && DECL_INITIAL (DECL) == error_mark_node\t\t\t \\\n-\t && !size_directive_output)\t\t\t\t\t \\\n-       {\t\t\t\t\t\t\t\t \\\n-\t size_directive_output = 1;\t\t\t\t\t \\\n-\t size = int_size_in_bytes (TREE_TYPE (DECL));\t\t\t \\\n-\t ASM_OUTPUT_SIZE_DIRECTIVE (FILE, name, size);\t\t\t \\\n-       }\t\t\t\t\t\t\t\t \\\n-   } while (0)\n+#define ASM_FINISH_DECLARE_OBJECT mips_finish_declare_object\n \n #define ASM_OUTPUT_DEF(FILE,LABEL1,LABEL2)                            \\\n  do { fputc ( '\\t', FILE);                                            \\"}, {"sha": "c9b4ec89e2d12104cf89ede3bce006a53dfa91c5", "filename": "gcc/config/mips/iris6.h", "status": "modified", "additions": 3, "deletions": 37, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1115ccd687a14e68e786ff674c004c6f36ace4b/gcc%2Fconfig%2Fmips%2Firis6.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1115ccd687a14e68e786ff674c004c6f36ace4b/gcc%2Fconfig%2Fmips%2Firis6.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Firis6.h?ref=c1115ccd687a14e68e786ff674c004c6f36ace4b", "patch": "@@ -370,51 +370,17 @@ while (0)\n #define ASM_OUTPUT_ALIGNED_BSS(FILE, DECL, NAME, SIZE, ALIGN) \\\n   asm_output_aligned_bss (FILE, DECL, NAME, SIZE, ALIGN)\n \n-/* Write the extra assembler code needed to declare an object properly.  */\n-\n-#undef ASM_DECLARE_OBJECT_NAME\n-#define ASM_DECLARE_OBJECT_NAME(STREAM, NAME, DECL)\t\t\t\\\n-do\t\t\t\t\t\t\t\t\t\\\n- {\t\t\t\t\t\t\t\t\t\\\n-   HOST_WIDE_INT size;\t\t\t\t\t\t\t\\\n-   size_directive_output = 0;\t\t\t\t\t\t\\\n-   if (!flag_inhibit_size_directive && DECL_SIZE (DECL))\t\t\\\n-     {\t\t\t\t\t\t\t\t\t\\\n-       size_directive_output = 1;\t\t\t\t\t\\\n-       size = int_size_in_bytes (TREE_TYPE (DECL));\t\t\t\\\n-       ASM_OUTPUT_SIZE_DIRECTIVE (STREAM, NAME, size);\t\t\t\\\n-     }\t\t\t\t\t\t\t\t\t\\\n-   mips_declare_object (STREAM, NAME, \"\", \":\\n\", 0);\t\t\t\\\n- }\t\t\t\t\t\t\t\t\t\\\n-while (0)\n-\n /* Define the `__builtin_va_list' type for the ABI.  On IRIX 6, this\n    type is `char *'.  */\n #undef BUILD_VA_LIST_TYPE\n #define BUILD_VA_LIST_TYPE(VALIST) \\\n   (VALIST) = build_pointer_type (char_type_node)\n \n-/* Output the size directive for a decl in rest_of_decl_compilation\n-   in the case where we did not do so before the initializer.\n-   Once we find the error_mark_node, we know that the value of\n-   size_directive_output was set\n-   by ASM_DECLARE_OBJECT_NAME when it was run for the same decl.  */\n+#undef ASM_DECLARE_OBJECT_NAME\n+#define ASM_DECLARE_OBJECT_NAME mips_declare_object_name\n \n #undef ASM_FINISH_DECLARE_OBJECT\n-#define ASM_FINISH_DECLARE_OBJECT(FILE, DECL, TOP_LEVEL, AT_END)\t \\\n-do {\t\t\t\t\t\t\t\t\t \\\n-     const char *name = XSTR (XEXP (DECL_RTL (DECL), 0), 0);\t\t \\\n-     HOST_WIDE_INT size;\t\t\t\t\t\t \\\n-     if (!flag_inhibit_size_directive && DECL_SIZE (DECL)\t\t \\\n-         && ! AT_END && TOP_LEVEL\t\t\t\t\t \\\n-\t && DECL_INITIAL (DECL) == error_mark_node\t\t\t \\\n-\t && !size_directive_output)\t\t\t\t\t \\\n-       {\t\t\t\t\t\t\t\t \\\n-\t size_directive_output = 1;\t\t\t\t\t \\\n-\t size = int_size_in_bytes (TREE_TYPE (DECL));\t\t\t \\\n-\t ASM_OUTPUT_SIZE_DIRECTIVE (FILE, name, size);\t\t\t \\\n-       }\t\t\t\t\t\t\t\t \\\n-   } while (0)\n+#define ASM_FINISH_DECLARE_OBJECT mips_finish_declare_object\n \n #undef LOCAL_LABEL_PREFIX\n #define LOCAL_LABEL_PREFIX ((mips_abi == ABI_32 || mips_abi == ABI_O64) \\"}, {"sha": "e7c9afd07e74a589af7478576e3e4bdd93bbe3bb", "filename": "gcc/config/mips/linux.h", "status": "modified", "additions": 1, "deletions": 20, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1115ccd687a14e68e786ff674c004c6f36ace4b/gcc%2Fconfig%2Fmips%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1115ccd687a14e68e786ff674c004c6f36ace4b/gcc%2Fconfig%2Fmips%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Flinux.h?ref=c1115ccd687a14e68e786ff674c004c6f36ace4b", "patch": "@@ -54,27 +54,8 @@ do {\t\t\t\t\t\t\t\t\\\n   ASM_OUTPUT_SKIP (FILE, SIZE ? SIZE : 1);\t\t\t\\\n } while (0)\n \n-/* These macros generate the special .type and .size directives which\n-   are used to set the corresponding fields of the linker symbol table\n-   entries in an ELF object file under SVR4.  These macros also output\n-   the starting labels for the relevant functions/objects.  */\n-\n-/* Write the extra assembler code needed to declare an object properly.  */\n-\n #undef ASM_DECLARE_OBJECT_NAME\n-#define ASM_DECLARE_OBJECT_NAME(FILE, NAME, DECL)\t\t\t\\\n-  do {\t\t\t\t\t\t\t\t\t\\\n-    HOST_WIDE_INT size;\t\t\t\t\t\t\t\\\n-    ASM_OUTPUT_TYPE_DIRECTIVE (FILE, NAME, \"object\");\t\t\t\\\n-    size_directive_output = 0;\t\t\t\t\t\t\\\n-    if (!flag_inhibit_size_directive && DECL_SIZE (DECL))\t\t\\\n-      {\t\t\t\t\t\t\t\t\t\\\n-\tsize_directive_output = 1;\t\t\t\t\t\\\n-\tsize = int_size_in_bytes (TREE_TYPE (DECL));\t\t\t\\\n-\tASM_OUTPUT_SIZE_DIRECTIVE (FILE, NAME, size);\t\t\t\\\n-      }\t\t\t\t\t\t\t\t\t\\\n-    mips_declare_object (FILE, NAME, \"\", \":\\n\", 0);\t\t\t\\\n-  } while (0)\n+#define ASM_DECLARE_OBJECT_NAME mips_declare_object_name\n \n #undef TARGET_VERSION\n #if TARGET_ENDIAN_DEFAULT == 0"}, {"sha": "d60c7c72705b1bcc70f793ef48c608dd3e298c35", "filename": "gcc/config/mips/mips-protos.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1115ccd687a14e68e786ff674c004c6f36ace4b/gcc%2Fconfig%2Fmips%2Fmips-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1115ccd687a14e68e786ff674c004c6f36ace4b/gcc%2Fconfig%2Fmips%2Fmips-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips-protos.h?ref=c1115ccd687a14e68e786ff674c004c6f36ace4b", "patch": "@@ -35,6 +35,10 @@ extern int\t\tmips_can_use_return_insn PARAMS ((void));\n extern void\t\tmips_declare_object PARAMS ((FILE *, const char *,\n \t\t\t\t\t\t     const char *,\n \t\t\t\t\t\t     const char *, int));\n+extern void\t\tmips_declare_object_name PARAMS ((FILE *, const char *,\n+\t\t\t\t\t\t\t  tree));\n+extern void\t\tmips_finish_declare_object PARAMS ((FILE *, tree,\n+\t\t\t\t\t\t\t    int, int));\n extern void\t\tmips_expand_epilogue PARAMS ((int));\n extern void\t\tmips_expand_prologue PARAMS ((void));\n extern void\t\tmips_output_filename PARAMS ((FILE *, const char *));"}, {"sha": "b7b9b7b56c277dc70999f885212848771d6cad75", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1115ccd687a14e68e786ff674c004c6f36ace4b/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1115ccd687a14e68e786ff674c004c6f36ace4b/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=c1115ccd687a14e68e786ff674c004c6f36ace4b", "patch": "@@ -6236,6 +6236,61 @@ mips_declare_object (stream, name, init_string, final_string, size)\n       TREE_ASM_WRITTEN (name_tree) = 1;\n     }\n }\n+\n+#ifdef ASM_OUTPUT_SIZE_DIRECTIVE\n+extern int size_directive_output;\n+\n+/* Implement ASM_DECLARE_OBJECT_NAME.  This is like most of the standard ELF\n+   definitions except that it uses mips_declare_object() to emit the label.  */\n+\n+void\n+mips_declare_object_name (stream, name, decl)\n+     FILE *stream;\n+     const char *name;\n+     tree decl ATTRIBUTE_UNUSED;\n+{\n+#ifdef ASM_OUTPUT_TYPE_DIRECTIVE\n+  ASM_OUTPUT_TYPE_DIRECTIVE (stream, name, \"object\");\n+#endif\n+\n+  size_directive_output = 0;\n+  if (!flag_inhibit_size_directive && DECL_SIZE (decl))\n+    {\n+      HOST_WIDE_INT size;\n+\n+      size_directive_output = 1;\n+      size = int_size_in_bytes (TREE_TYPE (decl));\n+      ASM_OUTPUT_SIZE_DIRECTIVE (stream, name, size);\n+    }\n+\n+  mips_declare_object (stream, name, \"\", \":\\n\", 0);\n+}\n+\n+/* Implement ASM_FINISH_DECLARE_OBJECT.  This is generic ELF stuff.  */\n+\n+void\n+mips_finish_declare_object (stream, decl, top_level, at_end)\n+     FILE *stream;\n+     tree decl;\n+     int top_level, at_end;\n+{\n+  const char *name;\n+\n+  name = XSTR (XEXP (DECL_RTL (decl), 0), 0);\n+  if (!flag_inhibit_size_directive\n+      && DECL_SIZE (decl) != 0\n+      && !at_end && top_level\n+      && DECL_INITIAL (decl) == error_mark_node\n+      && !size_directive_output)\n+    {\n+      HOST_WIDE_INT size;\n+\n+      size_directive_output = 1;\n+      size = int_size_in_bytes (TREE_TYPE (decl));\n+      ASM_OUTPUT_SIZE_DIRECTIVE (stream, name, size);\n+    }\n+}\n+#endif\n \f\n /* Return the register that should be used as the global pointer\n    within this function.  Return 0 if the function doesn't need"}, {"sha": "870dc51b7508414bfb9286fc7610a2813a25bdef", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 2, "deletions": 16, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1115ccd687a14e68e786ff674c004c6f36ace4b/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1115ccd687a14e68e786ff674c004c6f36ace4b/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=c1115ccd687a14e68e786ff674c004c6f36ace4b", "patch": "@@ -3609,23 +3609,9 @@ while (0)\n \t$Lc[0-9]+\tLabel for use in s<xx> operation.\n \t$Le[0-9]+\tEnd blocks for MIPS debug support  */\n \n-/* A C statement (sans semicolon) to output to the stdio stream\n-   STREAM any text necessary for declaring the name NAME of an\n-   initialized variable which is being defined.  This macro must\n-   output the label definition (perhaps using `ASM_OUTPUT_LABEL').\n-   The argument DECL is the `VAR_DECL' tree node representing the\n-   variable.\n-\n-   If this macro is not defined, then the variable name is defined\n-   in the usual manner as a label (by means of `ASM_OUTPUT_LABEL').  */\n-\n #undef ASM_DECLARE_OBJECT_NAME\n-#define ASM_DECLARE_OBJECT_NAME(STREAM, NAME, DECL)\t\t\t\\\n-do\t\t\t\t\t\t\t\t\t\\\n- {\t\t\t\t\t\t\t\t\t\\\n-   mips_declare_object (STREAM, NAME, \"\", \":\\n\", 0);\t\t\t\\\n- }\t\t\t\t\t\t\t\t\t\\\n-while (0)\n+#define ASM_DECLARE_OBJECT_NAME(STREAM, NAME, DECL) \\\n+  mips_declare_object (STREAM, NAME, \"\", \":\\n\", 0)\n \n /* Globalizing directive for a label.  */\n #define GLOBAL_ASM_OP \"\\t.globl\\t\""}]}