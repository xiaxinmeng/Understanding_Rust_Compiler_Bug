{"sha": "02b5377b3766804059b7824330d33d0e1cef2e5b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDJiNTM3N2IzNzY2ODA0MDU5Yjc4MjQzMzBkMzNkMGUxY2VmMmU1Yg==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2020-09-23T11:02:29Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2020-09-23T11:02:29Z"}, "message": "AArch64: Implement missing vrndns_f32 intrinsic\n\nThis patch implements the missing vrndns_f32 intrinsic. This operates on a scalar float32_t value.\nIt can be mapped down to a __builtin_aarch64_frintnsf builtin.\n\nThis patch does that.\n\nBootstrapped and tested on aarch64-none-linux-gnu.\n\ngcc/\n\tPR target/71233\n\t* config/aarch64/aarch64-simd-builtins.def (frintn): Use BUILTIN_VHSDF_HSDF\n\tfor modes.  Remove explicit hf instantiation.\n\t* config/aarch64/arm_neon.h (vrndns_f32): Define.\n\ngcc/testsuite/\n\tPR target/71233\n\t* gcc.target/aarch64/simd/vrndns_f32_1.c: New test.", "tree": {"sha": "7a9ef55d4a9a7c32a347238cd59420d09ce67080", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7a9ef55d4a9a7c32a347238cd59420d09ce67080"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/02b5377b3766804059b7824330d33d0e1cef2e5b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02b5377b3766804059b7824330d33d0e1cef2e5b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/02b5377b3766804059b7824330d33d0e1cef2e5b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02b5377b3766804059b7824330d33d0e1cef2e5b/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "52e5b3fd8ef1d1b3ff86e26bd0aa7266bd9767fd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52e5b3fd8ef1d1b3ff86e26bd0aa7266bd9767fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/52e5b3fd8ef1d1b3ff86e26bd0aa7266bd9767fd"}], "stats": {"total": 23, "additions": 21, "deletions": 2}, "files": [{"sha": "48ecd4a2d6bc2ec8a1651ee224c831215354a3d9", "filename": "gcc/config/aarch64/aarch64-simd-builtins.def", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02b5377b3766804059b7824330d33d0e1cef2e5b/gcc%2Fconfig%2Faarch64%2Faarch64-simd-builtins.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02b5377b3766804059b7824330d33d0e1cef2e5b/gcc%2Fconfig%2Faarch64%2Faarch64-simd-builtins.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-simd-builtins.def?ref=02b5377b3766804059b7824330d33d0e1cef2e5b", "patch": "@@ -338,12 +338,11 @@\n   BUILTIN_VHSDF (UNOP, nearbyint, 2, FP)\n   BUILTIN_VHSDF (UNOP, rint, 2, FP)\n   BUILTIN_VHSDF (UNOP, round, 2, FP)\n-  BUILTIN_VHSDF_DF (UNOP, frintn, 2, FP)\n+  BUILTIN_VHSDF_HSDF (UNOP, frintn, 2, FP)\n \n   VAR1 (UNOP, btrunc, 2, FP, hf)\n   VAR1 (UNOP, ceil, 2, FP, hf)\n   VAR1 (UNOP, floor, 2, FP, hf)\n-  VAR1 (UNOP, frintn, 2, FP, hf)\n   VAR1 (UNOP, nearbyint, 2, FP, hf)\n   VAR1 (UNOP, rint, 2, FP, hf)\n   VAR1 (UNOP, round, 2, FP, hf)"}, {"sha": "b3c9b64201424d5b7aa8b34e8a6b548567812070", "filename": "gcc/config/aarch64/arm_neon.h", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02b5377b3766804059b7824330d33d0e1cef2e5b/gcc%2Fconfig%2Faarch64%2Farm_neon.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02b5377b3766804059b7824330d33d0e1cef2e5b/gcc%2Fconfig%2Faarch64%2Farm_neon.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Farm_neon.h?ref=02b5377b3766804059b7824330d33d0e1cef2e5b", "patch": "@@ -26073,6 +26073,13 @@ vrndmq_f64 (float64x2_t __a)\n \n /* vrndn  */\n \n+__extension__ extern __inline float32_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n+vrndns_f32 (float32_t __a)\n+{\n+  return __builtin_aarch64_frintnsf (__a);\n+}\n+\n __extension__ extern __inline float32x2_t\n __attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n vrndn_f32 (float32x2_t __a)"}, {"sha": "960e4f6f7688f299da43f4cbcc0adef5fc860954", "filename": "gcc/testsuite/gcc.target/aarch64/simd/vrndns_f32_1.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02b5377b3766804059b7824330d33d0e1cef2e5b/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsimd%2Fvrndns_f32_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02b5377b3766804059b7824330d33d0e1cef2e5b/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsimd%2Fvrndns_f32_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsimd%2Fvrndns_f32_1.c?ref=02b5377b3766804059b7824330d33d0e1cef2e5b", "patch": "@@ -0,0 +1,13 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O\" } */\n+\n+#include <arm_neon.h>\n+\n+float32_t\n+test (float32_t a)\n+{\n+  return vrndns_f32 (a);\n+}\n+\n+/* { dg-final { scan-assembler-times \"frintn\\\\ts\\[0-9\\]+, s\\[0-9\\]+\" 1 } } */\n+"}]}