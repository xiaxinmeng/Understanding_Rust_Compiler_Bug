{"sha": "4091fa5f1bc6c0e1703c7245e0faf76e3bb579a4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDA5MWZhNWYxYmM2YzBlMTcwM2M3MjQ1ZTBmYWY3NmUzYmI1NzlhNA==", "commit": {"author": {"name": "Geoffrey Keating", "email": "geoffk@redhat.com", "date": "2001-05-04T02:58:46Z"}, "committer": {"name": "Geoffrey Keating", "email": "geoffk@gcc.gnu.org", "date": "2001-05-04T02:58:46Z"}, "message": "Index: gcc/gcc/ChangeLog\n2001-05-03  Geoffrey Keating  <geoffk@redhat.com>\n\n\t* Makefile.in (site.exp): Set TESTING_IN_BUILD_TREE.\n\nIndex: gcc/gcc/testsuite/ChangeLog\n2001-05-03  Geoffrey Keating  <geoffk@redhat.com>\n\n\t* lib/g++.exp (g++_include_flags): Don't use any special flags\n\tif TESTING_IN_BUILD_TREE is not defined.\n\t(g++_init): Use a plain 'c++' as the compiler if\n\tTESTING_IN_BUILD_TREEE is not defined.\n\nFrom-SVN: r41820", "tree": {"sha": "803d6f2fcc520e397e0d33283ab59ba23c962ab4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/803d6f2fcc520e397e0d33283ab59ba23c962ab4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4091fa5f1bc6c0e1703c7245e0faf76e3bb579a4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4091fa5f1bc6c0e1703c7245e0faf76e3bb579a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4091fa5f1bc6c0e1703c7245e0faf76e3bb579a4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4091fa5f1bc6c0e1703c7245e0faf76e3bb579a4/comments", "author": null, "committer": null, "parents": [{"sha": "4def8930da508758fa7e64c6d8fb9491ed23ad2e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4def8930da508758fa7e64c6d8fb9491ed23ad2e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4def8930da508758fa7e64c6d8fb9491ed23ad2e"}], "stats": {"total": 18, "additions": 16, "deletions": 2}, "files": [{"sha": "7703fbf4bf971caaab423a52389077873c309d49", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4091fa5f1bc6c0e1703c7245e0faf76e3bb579a4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4091fa5f1bc6c0e1703c7245e0faf76e3bb579a4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4091fa5f1bc6c0e1703c7245e0faf76e3bb579a4", "patch": "@@ -1,3 +1,7 @@\n+2001-05-03  Geoffrey Keating  <geoffk@redhat.com>\n+\n+\t* Makefile.in (site.exp): Set TESTING_IN_BUILD_TREE.\n+\n 2001-05-03  Stephane Carrez  <Stephane.Carrez@worldnet.fr>\n \n \t* config/m68hc11/m68hc11.md (\"bitcmpqi\"): New pattern for bitb"}, {"sha": "eed46d42af5fc9930ccc9e79822540d2ba3e2908", "filename": "gcc/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4091fa5f1bc6c0e1703c7245e0faf76e3bb579a4/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4091fa5f1bc6c0e1703c7245e0faf76e3bb579a4/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=4091fa5f1bc6c0e1703c7245e0faf76e3bb579a4", "patch": "@@ -2800,6 +2800,7 @@ site.exp: ./config.status Makefile\n # CFLAGS is set even though it's empty to show we reserve the right to set it.\n \t@echo \"set CFLAGS \\\"\\\"\" >> ./tmp0\n \t@echo \"set CXXFLAGS \\\"-I$(objdir)/../$(target_subdir)libio -I\\$$srcdir/../libg++/src -I\\$$srcdir/../libio -I\\$$srcdir/../libstdc++ -I\\$$srcdir/../libstdc++/stl -L$(objdir)/../$(target_subdir)libg++ -L$(objdir)/../$(target_subdir)libstdc++\\\"\" >> ./tmp0\n+\t@echo \"set TESTING_IN_BUILD_TREE 1\" >> ./tmp0\n \t@echo \"set HAVE_LIBSTDCXX_V3 1\" >> ./tmp0\n # If newlib has been configured, we need to pass -B to gcc so it can find\n # newlib's crt0.o if it exists.  This will cause a \"path prefix not used\""}, {"sha": "a26fd2bb864e4717adfb8c27feabcdf7421f8511", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4091fa5f1bc6c0e1703c7245e0faf76e3bb579a4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4091fa5f1bc6c0e1703c7245e0faf76e3bb579a4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4091fa5f1bc6c0e1703c7245e0faf76e3bb579a4", "patch": "@@ -1,3 +1,10 @@\n+2001-05-03  Geoffrey Keating  <geoffk@redhat.com>\n+\n+\t* lib/g++.exp (g++_include_flags): Don't use any special flags\n+\tif TESTING_IN_BUILD_TREE is not defined.\n+\t(g++_init): Use a plain 'c++' as the compiler if \n+\tTESTING_IN_BUILD_TREEE is not defined.\n+\n 2001-05-02  Jakub Jelinek  <jakub@redhat.com>\n \n \t* g++.old-deja/g++.eh/catch13.C: New test."}, {"sha": "02e2f6c89ac2ef7bcf2c8319ada7415121f31fc5", "filename": "gcc/testsuite/lib/g++.exp", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4091fa5f1bc6c0e1703c7245e0faf76e3bb579a4/gcc%2Ftestsuite%2Flib%2Fg%2B%2B.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4091fa5f1bc6c0e1703c7245e0faf76e3bb579a4/gcc%2Ftestsuite%2Flib%2Fg%2B%2B.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fg%2B%2B.exp?ref=4091fa5f1bc6c0e1703c7245e0faf76e3bb579a4", "patch": "@@ -66,10 +66,11 @@ proc g++_version { } {\n proc g++_include_flags { args } {\n     global srcdir\n     global HAVE_LIBSTDCXX_V3\n+    global TESTING_IN_BUILD_TREE\n \n     set flags \"\"\n \n-    if [is_remote host] {\n+    if { [is_remote host] || ! [info exists TESTING_IN_BUILD_TREE] } {\n       return \"${flags}\"\n     }\n \n@@ -166,12 +167,13 @@ proc g++_init { args } {\n     global ALWAYS_CXXFLAGS\n     global TOOL_EXECUTABLE TOOL_OPTIONS\n     global GXX_UNDER_TEST\n+    global TESTING_IN_BUILD_TREE\n \n     if ![info exists GXX_UNDER_TEST] then {\n \tif [info exists TOOL_EXECUTABLE] {\n \t    set GXX_UNDER_TEST $TOOL_EXECUTABLE;\n \t} else {\n-\t    if [is_remote host] {\n+\t    if { [is_remote host] || ! [info exists TESTING_IN_BUILD_TREE] } {\n \t\tset GXX_UNDER_TEST [transform c++]\n \t    } else {\n \t\tset GXX_UNDER_TEST [findfile $base_dir/../g++ \"$base_dir/../g++ -B$base_dir/../\" [findfile $base_dir/g++ \"$base_dir/g++ -B$base_dir/\" [transform c++]]]"}]}