{"sha": "7ed12599fa74fdfd9bd36853b50a6086f89df061", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2VkMTI1OTlmYTc0ZmRmZDliZDM2ODUzYjUwYTYwODZmODlkZjA2MQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2018-03-10T03:34:37Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2018-03-10T03:34:37Z"}, "message": "PR c++/84770 - ICE with typedef and parameter pack.\n\n\t* pt.c (verify_unstripped_args_1): Split out from\n\tverify_unstripped_args.\n\nFrom-SVN: r258408", "tree": {"sha": "5761c7fd2968c4467971f776cd61248b41e22ae9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5761c7fd2968c4467971f776cd61248b41e22ae9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7ed12599fa74fdfd9bd36853b50a6086f89df061", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ed12599fa74fdfd9bd36853b50a6086f89df061", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ed12599fa74fdfd9bd36853b50a6086f89df061", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ed12599fa74fdfd9bd36853b50a6086f89df061/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "732a431dc94ae7f921e21245061946a1cfe8d9b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/732a431dc94ae7f921e21245061946a1cfe8d9b5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/732a431dc94ae7f921e21245061946a1cfe8d9b5"}], "stats": {"total": 51, "additions": 35, "deletions": 16}, "files": [{"sha": "7ed0d5e992b59ec6564edde4d9ad64ca27b51f3c", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ed12599fa74fdfd9bd36853b50a6086f89df061/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ed12599fa74fdfd9bd36853b50a6086f89df061/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=7ed12599fa74fdfd9bd36853b50a6086f89df061", "patch": "@@ -1,5 +1,9 @@\n 2018-03-09  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/84770 - ICE with typedef and parameter pack.\n+\t* pt.c (verify_unstripped_args_1): Split out from\n+\tverify_unstripped_args.\n+\n \tPR c++/84785 - ICE with alias template and default targs.\n \t* pt.c (type_unification_real): Set processing_template_decl if\n \tsaw_undeduced == 1."}, {"sha": "a92b36a60318422823c958fcd18a7893cbe9853d", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 21, "deletions": 16, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ed12599fa74fdfd9bd36853b50a6086f89df061/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ed12599fa74fdfd9bd36853b50a6086f89df061/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=7ed12599fa74fdfd9bd36853b50a6086f89df061", "patch": "@@ -1133,27 +1133,32 @@ optimize_specialization_lookup_p (tree tmpl)\n /* Make sure ARGS doesn't use any inappropriate typedefs; we should have\n    gone through coerce_template_parms by now.  */\n \n+static void\n+verify_unstripped_args_1 (tree inner)\n+{\n+  for (int i = 0; i < TREE_VEC_LENGTH (inner); ++i)\n+    {\n+      tree arg = TREE_VEC_ELT (inner, i);\n+      if (TREE_CODE (arg) == TEMPLATE_DECL)\n+\t/* OK */;\n+      else if (TYPE_P (arg))\n+\tgcc_assert (strip_typedefs (arg, NULL) == arg);\n+      else if (ARGUMENT_PACK_P (arg))\n+\tverify_unstripped_args_1 (ARGUMENT_PACK_ARGS (arg));\n+      else if (strip_typedefs (TREE_TYPE (arg), NULL) != TREE_TYPE (arg))\n+\t/* Allow typedefs on the type of a non-type argument, since a\n+\t   parameter can have them.  */;\n+      else\n+\tgcc_assert (strip_typedefs_expr (arg, NULL) == arg);\n+    }\n+}\n+\n static void\n verify_unstripped_args (tree args)\n {\n   ++processing_template_decl;\n   if (!any_dependent_template_arguments_p (args))\n-    {\n-      tree inner = INNERMOST_TEMPLATE_ARGS (args);\n-      for (int i = 0; i < TREE_VEC_LENGTH (inner); ++i)\n-\t{\n-\t  tree arg = TREE_VEC_ELT (inner, i);\n-\t  if (TREE_CODE (arg) == TEMPLATE_DECL)\n-\t    /* OK */;\n-\t  else if (TYPE_P (arg))\n-\t    gcc_assert (strip_typedefs (arg, NULL) == arg);\n-\t  else if (strip_typedefs (TREE_TYPE (arg), NULL) != TREE_TYPE (arg))\n-\t    /* Allow typedefs on the type of a non-type argument, since a\n-\t       parameter can have them.  */;\n-\t  else\n-\t    gcc_assert (strip_typedefs_expr (arg, NULL) == arg);\n-\t}\n-    }\n+    verify_unstripped_args_1 (INNERMOST_TEMPLATE_ARGS (args));\n   --processing_template_decl;\n }\n "}, {"sha": "a0ca89b764f12ef2862bad2d18edd01fe0fc4c09", "filename": "gcc/testsuite/g++.dg/cpp0x/variadic173.C", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ed12599fa74fdfd9bd36853b50a6086f89df061/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic173.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ed12599fa74fdfd9bd36853b50a6086f89df061/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic173.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic173.C?ref=7ed12599fa74fdfd9bd36853b50a6086f89df061", "patch": "@@ -0,0 +1,10 @@\n+// PR c++/84770\n+// { dg-do compile { target c++11 } }\n+\n+typedef int T;\n+\n+template<T&...> struct A {};\n+\n+int i;\n+\n+A<i> a;"}]}