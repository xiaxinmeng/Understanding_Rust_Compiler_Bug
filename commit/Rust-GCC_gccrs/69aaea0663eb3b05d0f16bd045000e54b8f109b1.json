{"sha": "69aaea0663eb3b05d0f16bd045000e54b8f109b1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjlhYWVhMDY2M2ViM2IwNWQwZjE2YmQwNDUwMDBlNTRiOGYxMDliMQ==", "commit": {"author": {"name": "Andre Vehreschild", "email": "vehre@gcc.gnu.org", "date": "2016-07-05T12:06:22Z"}, "committer": {"name": "Andre Vehreschild", "email": "vehre@gcc.gnu.org", "date": "2016-07-05T12:06:22Z"}, "message": "re PR fortran/71623 (Segfault when allocating deferred-length characters to size of a pointer)\n\ngcc/fortran/ChangeLog:\n\n2016-07-05  Andre Vehreschild  <vehre@gcc.gnu.org>\n\n\tPR fortran/71623\n\t* trans-stmt.c (gfc_trans_allocate): Add code of pre block of typespec\n\tin allocate to parent block.\n\ngcc/testsuite/ChangeLog:\n\n2016-07-05  Andre Vehreschild  <vehre@gcc.gnu.org>\n\n\tPR fortran/71623\n\t* gfortran.dg/deferred_character_17.f90: New test.\n\nFrom-SVN: r238002", "tree": {"sha": "c3d4d2f2beac490ce640b791da252fa323b81e0f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c3d4d2f2beac490ce640b791da252fa323b81e0f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/69aaea0663eb3b05d0f16bd045000e54b8f109b1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69aaea0663eb3b05d0f16bd045000e54b8f109b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/69aaea0663eb3b05d0f16bd045000e54b8f109b1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69aaea0663eb3b05d0f16bd045000e54b8f109b1/comments", "author": null, "committer": null, "parents": [{"sha": "b0ad2d78b237380c47f92a8f61e257a1e434a3fe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0ad2d78b237380c47f92a8f61e257a1e434a3fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b0ad2d78b237380c47f92a8f61e257a1e434a3fe"}], "stats": {"total": 45, "additions": 40, "deletions": 5}, "files": [{"sha": "0947d6dce733b54cebc8f8f84a48c8a4e6def536", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69aaea0663eb3b05d0f16bd045000e54b8f109b1/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69aaea0663eb3b05d0f16bd045000e54b8f109b1/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=69aaea0663eb3b05d0f16bd045000e54b8f109b1", "patch": "@@ -1,3 +1,9 @@\n+2016-07-05  Andre Vehreschild  <vehre@gcc.gnu.org>\n+\n+\tPR fortran/71623\n+\t* trans-stmt.c (gfc_trans_allocate): Add code of pre block of typespec\n+\tin allocate to parent block.\n+\n 2016-07-04  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR fortran/66575"}, {"sha": "5aa77789b1490c7d897984a1e440f2a54631e3d5", "filename": "gcc/fortran/trans-stmt.c", "status": "modified", "additions": 16, "deletions": 5, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69aaea0663eb3b05d0f16bd045000e54b8f109b1/gcc%2Ffortran%2Ftrans-stmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69aaea0663eb3b05d0f16bd045000e54b8f109b1/gcc%2Ffortran%2Ftrans-stmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-stmt.c?ref=69aaea0663eb3b05d0f16bd045000e54b8f109b1", "patch": "@@ -5696,9 +5696,11 @@ gfc_trans_allocate (gfc_code * code)\n \t  tmp = gfc_get_char_type (code->ext.alloc.ts.kind);\n \t  tmp = TYPE_SIZE_UNIT (tmp);\n \t  tmp = fold_convert (TREE_TYPE (se_sz.expr), tmp);\n+\t  gfc_add_block_to_block (&block, &se_sz.pre);\n \t  expr3_esize = fold_build2_loc (input_location, MULT_EXPR,\n \t\t\t\t\t TREE_TYPE (se_sz.expr),\n \t\t\t\t\t tmp, se_sz.expr);\n+\t  expr3_esize = gfc_evaluate_now (expr3_esize, &block);\n \t}\n     }\n \n@@ -5897,6 +5899,7 @@ gfc_trans_allocate (gfc_code * code)\n \t\t source= or mold= expression.  */\n \t      gfc_init_se (&se_sz, NULL);\n \t      gfc_conv_expr (&se_sz, code->ext.alloc.ts.u.cl->length);\n+\t      gfc_add_block_to_block (&block, &se_sz.pre);\n \t      gfc_add_modify (&block, al_len,\n \t\t\t      fold_convert (TREE_TYPE (al_len),\n \t\t\t\t\t    se_sz.expr));\n@@ -5981,11 +5984,19 @@ gfc_trans_allocate (gfc_code * code)\n \t\t specified by a type spec for deferred length character\n \t\t arrays or unlimited polymorphic objects without a\n \t\t source= or mold= expression.  */\n-\t      gfc_init_se (&se_sz, NULL);\n-\t      gfc_conv_expr (&se_sz, code->ext.alloc.ts.u.cl->length);\n-\t      gfc_add_modify (&block, al_len,\n-\t\t\t      fold_convert (TREE_TYPE (al_len),\n-\t\t\t\t\t    se_sz.expr));\n+\t      if (expr3_esize == NULL_TREE || code->ext.alloc.ts.kind != 1)\n+\t\t{\n+\t\t  gfc_init_se (&se_sz, NULL);\n+\t\t  gfc_conv_expr (&se_sz, code->ext.alloc.ts.u.cl->length);\n+\t\t  gfc_add_block_to_block (&block, &se_sz.pre);\n+\t\t  gfc_add_modify (&block, al_len,\n+\t\t\t\t  fold_convert (TREE_TYPE (al_len),\n+\t\t\t\t\t\tse_sz.expr));\n+\t\t}\n+\t      else\n+\t\tgfc_add_modify (&block, al_len,\n+\t\t\t\tfold_convert (TREE_TYPE (al_len),\n+\t\t\t\t\t      expr3_esize));\n \t    }\n \t  else\n \t    /* No length information needed, because type to allocate"}, {"sha": "2db9b450df9fc90c89aa766eb32b652a82aa9a76", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69aaea0663eb3b05d0f16bd045000e54b8f109b1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69aaea0663eb3b05d0f16bd045000e54b8f109b1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=69aaea0663eb3b05d0f16bd045000e54b8f109b1", "patch": "@@ -1,3 +1,8 @@\n+2016-07-05  Andre Vehreschild  <vehre@gcc.gnu.org>\n+\n+\tPR fortran/71623\n+\t* gfortran.dg/deferred_character_17.f90: New test.\n+\n 2016-07-05  Christophe Lyon  <christophe.lyon@linaro.org>\n \n \t* gcc.target/arm/neon/polytypes.c: Move to ..."}, {"sha": "5a9d725d263594368f9a2748414009fa0cd360f8", "filename": "gcc/testsuite/gfortran.dg/deferred_character_17.f90", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69aaea0663eb3b05d0f16bd045000e54b8f109b1/gcc%2Ftestsuite%2Fgfortran.dg%2Fdeferred_character_17.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69aaea0663eb3b05d0f16bd045000e54b8f109b1/gcc%2Ftestsuite%2Fgfortran.dg%2Fdeferred_character_17.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdeferred_character_17.f90?ref=69aaea0663eb3b05d0f16bd045000e54b8f109b1", "patch": "@@ -0,0 +1,13 @@\n+!{ dg-do run }\n+\n+! Check fix for PR fortran/71623\n+\n+program allocatemvce\n+  implicit none\n+  character(len=:), allocatable :: string\n+  integer, dimension(4), target :: array = [1,2,3,4]\n+  integer, dimension(:), pointer :: array_ptr\n+  array_ptr => array\n+  ! The allocate used to segfault\n+  allocate(character(len=size(array_ptr))::string)\n+end program allocatemvce"}]}