{"sha": "df6c88082dc25c4b511b0fc5ba98dd2acfff0a04", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGY2Yzg4MDgyZGMyNWM0YjUxMWIwZmM1YmE5OGRkMmFjZmZmMGEwNA==", "commit": {"author": {"name": "Richard Sandiford", "email": "rdsandiford@googlemail.com", "date": "2014-01-08T22:16:49Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2014-01-08T22:16:49Z"}, "message": "re PR rtl-optimization/59137 (Miscompilation at -O1 on mips/mipsel)\n\ngcc/\n\tPR rtl-optimization/59137\n\t* reorg.c (steal_delay_list_from_target): Call update_block for\n\telided insns.\n\t(steal_delay_list_from_fallthrough, relax_delay_slots): Likewise.\n\ngcc/testsuite/\n\tPR rtl-optimization/59137\n\t* gcc.target/mips/pr59137.c: New test.\n\nFrom-SVN: r206445", "tree": {"sha": "8a0b3aaea6b10e0c6b5e5cfbfe7850a9bb8c8817", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8a0b3aaea6b10e0c6b5e5cfbfe7850a9bb8c8817"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/df6c88082dc25c4b511b0fc5ba98dd2acfff0a04", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df6c88082dc25c4b511b0fc5ba98dd2acfff0a04", "html_url": "https://github.com/Rust-GCC/gccrs/commit/df6c88082dc25c4b511b0fc5ba98dd2acfff0a04", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df6c88082dc25c4b511b0fc5ba98dd2acfff0a04/comments", "author": {"login": "rsandifo", "id": 4235983, "node_id": "MDQ6VXNlcjQyMzU5ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4235983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo", "html_url": "https://github.com/rsandifo", "followers_url": "https://api.github.com/users/rsandifo/followers", "following_url": "https://api.github.com/users/rsandifo/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo/orgs", "repos_url": "https://api.github.com/users/rsandifo/repos", "events_url": "https://api.github.com/users/rsandifo/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ace295afeb0a126d960339d0e04e3b8b26e96670", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ace295afeb0a126d960339d0e04e3b8b26e96670", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ace295afeb0a126d960339d0e04e3b8b26e96670"}], "stats": {"total": 60, "additions": 59, "deletions": 1}, "files": [{"sha": "2826bca98bd2efc52d5c85b613a77b2082593bc0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df6c88082dc25c4b511b0fc5ba98dd2acfff0a04/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df6c88082dc25c4b511b0fc5ba98dd2acfff0a04/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=df6c88082dc25c4b511b0fc5ba98dd2acfff0a04", "patch": "@@ -1,3 +1,10 @@\n+2014-01-08  Richard Sandiford  <rdsandiford@googlemail.com>\n+\n+\tPR rtl-optimization/59137\n+\t* reorg.c (steal_delay_list_from_target): Call update_block for\n+\telided insns.\n+\t(steal_delay_list_from_fallthrough, relax_delay_slots): Likewise.\n+\n 2014-01-08  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n \n \t* config/rs6000/rs6000-c.c (altivec_overloaded_builtins): Remove"}, {"sha": "de332323ae1c155883ebaf19f8cd064390058380", "filename": "gcc/reorg.c", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df6c88082dc25c4b511b0fc5ba98dd2acfff0a04/gcc%2Freorg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df6c88082dc25c4b511b0fc5ba98dd2acfff0a04/gcc%2Freorg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freorg.c?ref=df6c88082dc25c4b511b0fc5ba98dd2acfff0a04", "patch": "@@ -1093,6 +1093,7 @@ steal_delay_list_from_target (rtx insn, rtx condition, rtx seq,\n   int used_annul = 0;\n   int i;\n   struct resources cc_set;\n+  bool *redundant;\n \n   /* We can't do anything if there are more delay slots in SEQ than we\n      can handle, or if we don't know that it will be a taken branch.\n@@ -1133,6 +1134,7 @@ steal_delay_list_from_target (rtx insn, rtx condition, rtx seq,\n     return delay_list;\n #endif\n \n+  redundant = XALLOCAVEC (bool, XVECLEN (seq, 0));\n   for (i = 1; i < XVECLEN (seq, 0); i++)\n     {\n       rtx trial = XVECEXP (seq, 0, i);\n@@ -1154,7 +1156,8 @@ steal_delay_list_from_target (rtx insn, rtx condition, rtx seq,\n \n       /* If this insn was already done (usually in a previous delay slot),\n \t pretend we put it in our delay slot.  */\n-      if (redundant_insn (trial, insn, new_delay_list))\n+      redundant[i] = redundant_insn (trial, insn, new_delay_list);\n+      if (redundant[i])\n \tcontinue;\n \n       /* We will end up re-vectoring this branch, so compute flags\n@@ -1187,6 +1190,12 @@ steal_delay_list_from_target (rtx insn, rtx condition, rtx seq,\n \treturn delay_list;\n     }\n \n+  /* Record the effect of the instructions that were redundant and which\n+     we therefore decided not to copy.  */\n+  for (i = 1; i < XVECLEN (seq, 0); i++)\n+    if (redundant[i])\n+      update_block (XVECEXP (seq, 0, i), insn);\n+\n   /* Show the place to which we will be branching.  */\n   *pnew_thread = first_active_target_insn (JUMP_LABEL (XVECEXP (seq, 0, 0)));\n \n@@ -1250,6 +1259,7 @@ steal_delay_list_from_fallthrough (rtx insn, rtx condition, rtx seq,\n       /* If this insn was already done, we don't need it.  */\n       if (redundant_insn (trial, insn, delay_list))\n \t{\n+\t  update_block (trial, insn);\n \t  delete_from_delay_slot (trial);\n \t  continue;\n \t}\n@@ -3236,6 +3246,7 @@ relax_delay_slots (rtx first)\n \t to reprocess this insn.  */\n       if (redundant_insn (XVECEXP (pat, 0, 1), delay_insn, 0))\n \t{\n+\t  update_block (XVECEXP (pat, 0, 1), insn);\n \t  delete_from_delay_slot (XVECEXP (pat, 0, 1));\n \t  next = prev_active_insn (next);\n \t  continue;\n@@ -3355,6 +3366,7 @@ relax_delay_slots (rtx first)\n \t      && redirect_with_delay_slots_safe_p (delay_insn, target_label,\n \t\t\t\t\t\t   insn))\n \t    {\n+\t      update_block (XVECEXP (PATTERN (trial), 0, 1), insn);\n \t      reorg_redirect_jump (delay_insn, target_label);\n \t      next = insn;\n \t      continue;"}, {"sha": "3319675a210526f23f0bf7bf5cee57fdbcd6bb4d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df6c88082dc25c4b511b0fc5ba98dd2acfff0a04/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df6c88082dc25c4b511b0fc5ba98dd2acfff0a04/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=df6c88082dc25c4b511b0fc5ba98dd2acfff0a04", "patch": "@@ -1,3 +1,8 @@\n+2014-01-08  Richard Sandiford  <rdsandiford@googlemail.com>\n+\n+\tPR rtl-optimization/59137\n+\t* gcc.target/mips/pr59137.c: New test.\n+\n 2014-01-08  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* gcc.target/i386/asm-1.c (dg-options): Remove -m32."}, {"sha": "898650656806e165e927daa6d539f6fb60b426d8", "filename": "gcc/testsuite/gcc.target/mips/pr59137.c", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df6c88082dc25c4b511b0fc5ba98dd2acfff0a04/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fpr59137.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df6c88082dc25c4b511b0fc5ba98dd2acfff0a04/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fpr59137.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fpr59137.c?ref=df6c88082dc25c4b511b0fc5ba98dd2acfff0a04", "patch": "@@ -0,0 +1,34 @@\n+/* { dg-do run } */\n+/* { dg-options \"-mno-plt\" } */\n+\n+extern void abort (void);\n+\n+struct lispstruct\n+{\n+  int e;\n+  int t;\n+};\n+\n+struct lispstruct Cnil_body;\n+struct lispstruct Ct_body;\n+int nvalues;\n+\n+struct lispstruct * __attribute__ ((noinline))\n+fLlistp (struct lispstruct *x0)\n+{\n+  if (x0 == &Cnil_body\n+      || (((unsigned long) x0 >= 0x80000000) ? 0\n+\t  : (!x0->e ? (x0 != &Cnil_body) : x0->t)))\n+    x0 = &Ct_body;\n+  else\n+    x0 = &Cnil_body;\n+  nvalues = 1;\n+  return x0;\n+}\n+\n+int main ()\n+{\n+  if (fLlistp ((struct lispstruct *) 0xa0000001) != &Cnil_body)\n+    abort ();\n+  return 0;\n+}"}]}