{"sha": "47ab33b2208b4fc4a043f8e337a0cf70fa23e3eb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDdhYjMzYjIyMDhiNGZjNGEwNDNmOGUzMzdhMGNmNzBmYTIzZTNlYg==", "commit": {"author": {"name": "Matt Austern", "email": "austern@apple.com", "date": "2003-09-04T21:32:48Z"}, "committer": {"name": "Matt Austern", "email": "austern@gcc.gnu.org", "date": "2003-09-04T21:32:48Z"}, "message": "Correct the behavior of __func__ for C++ special member functions.\n\n\t* c-common.c (fname_as_string): Use lang_hooks.decl_printable_name\n\twith verbosity 0, instead of DECL_NAME, for human-readable string.\n\t* g++.dg/ext/fnname1.C: New test. (__func__ for C++.)\n\t* g++.dg/ext/fnname2.C: Likewise.\n\t* g++.dg/ext/fnname3.C: Likewise.\n\nFrom-SVN: r71088", "tree": {"sha": "eca3e9ad4309c329d418909982ba204fe37e9b70", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eca3e9ad4309c329d418909982ba204fe37e9b70"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/47ab33b2208b4fc4a043f8e337a0cf70fa23e3eb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47ab33b2208b4fc4a043f8e337a0cf70fa23e3eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/47ab33b2208b4fc4a043f8e337a0cf70fa23e3eb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47ab33b2208b4fc4a043f8e337a0cf70fa23e3eb/comments", "author": null, "committer": null, "parents": [{"sha": "be6acd4b3a2c3a23baa80c11899a3cbb0969662b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be6acd4b3a2c3a23baa80c11899a3cbb0969662b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be6acd4b3a2c3a23baa80c11899a3cbb0969662b"}], "stats": {"total": 155, "additions": 145, "deletions": 10}, "files": [{"sha": "a3ebefc2ae7b6a91e148d3ce17851136b8b77082", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47ab33b2208b4fc4a043f8e337a0cf70fa23e3eb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47ab33b2208b4fc4a043f8e337a0cf70fa23e3eb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=47ab33b2208b4fc4a043f8e337a0cf70fa23e3eb", "patch": "@@ -1,3 +1,8 @@\n+2003-09-04  Matt Austern  <austern@apple.com>\n+\n+\t* c-common.c (fname_as_string): Use lang_hooks.decl_printable_name\n+\twith verbosity 0, instead of DECL_NAME, for human-readable string.\n+\t\n 2003-09-04  Eric Christopher  <echristo@redhat.com>\n \n \t* targhooks.c (default_return_in_memory): Allow"}, {"sha": "69dd081149866568ae0e8537b5011d0fd218088e", "filename": "gcc/c-common.c", "status": "modified", "additions": 12, "deletions": 10, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47ab33b2208b4fc4a043f8e337a0cf70fa23e3eb/gcc%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47ab33b2208b4fc4a043f8e337a0cf70fa23e3eb/gcc%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.c?ref=47ab33b2208b4fc4a043f8e337a0cf70fa23e3eb", "patch": "@@ -1071,16 +1071,18 @@ finish_fname_decls (void)\n const char *\n fname_as_string (int pretty_p)\n {\n-  const char *name = NULL;\n-\n-  if (pretty_p)\n-    name = (current_function_decl\n-\t    ? (*lang_hooks.decl_printable_name) (current_function_decl, 2)\n-\t    : \"top level\");\n-  else if (current_function_decl && DECL_NAME (current_function_decl))\n-    name = IDENTIFIER_POINTER (DECL_NAME (current_function_decl));\n-  else\n-    name = \"\";\n+  const char *name = \"top level\";\n+  int vrb = 2;\n+\n+  if (! pretty_p)\n+    {\n+      name = \"\";\n+      vrb = 0;\n+    }\n+\n+  if (current_function_decl)\n+    name = (*lang_hooks.decl_printable_name) (current_function_decl, vrb);\n+\n   return name;\n }\n "}, {"sha": "c475b9aa008d10189870f90d771d1c43d58287ee", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47ab33b2208b4fc4a043f8e337a0cf70fa23e3eb/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47ab33b2208b4fc4a043f8e337a0cf70fa23e3eb/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=47ab33b2208b4fc4a043f8e337a0cf70fa23e3eb", "patch": "@@ -1,3 +1,9 @@\n+2003-09-04  Matt Austern  <austern@apple.com>\n+\n+\t* g++.dg/ext/fnname1.C: New test. (__func__ for C++.)\n+\t* g++.dg/ext/fnname2.C: Likewise.\n+\t* g++.dg/ext/fnname3.C: Likewise.\n+\t\n 2003-09-04  Mark Mitchell  <mark@codesourcery.com>\n \n \t* g++.dg/expr/lval1.C: New test."}, {"sha": "521d5a7367f65aecef22aca6629fb982032d0d95", "filename": "gcc/testsuite/g++.dg/ext/fnname1.C", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47ab33b2208b4fc4a043f8e337a0cf70fa23e3eb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Ffnname1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47ab33b2208b4fc4a043f8e337a0cf70fa23e3eb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Ffnname1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Ffnname1.C?ref=47ab33b2208b4fc4a043f8e337a0cf70fa23e3eb", "patch": "@@ -0,0 +1,26 @@\n+// Test whether __func__ works for namespace-scope C++ functions.\n+\n+// Copyright (C) 2003 Free Software Foundation, Inc.\n+// Contributed by Matt Austern <austern@apple.com>, 3 Aug 2003\n+// { dg-do run }\n+\n+namespace xyzzy\n+{\n+  const char* ab6(double, void*)\n+  {\n+    return __func__;\n+  }\n+}\n+\n+int main()\n+{\n+  const char* s = xyzzy::ab6(2.3, (void*) 0);\n+  bool ok = true;\n+\n+  ok = ok && s[0] == 'a';\n+  ok = ok && s[1] == 'b';\n+  ok = ok && s[2] == '6';\n+  ok = ok && s[3] == '\\0';\n+\n+  return ok ? 0 : 1;\n+}"}, {"sha": "ea0c1826f45a6d60841e5edf76c92bec7aa4b5e9", "filename": "gcc/testsuite/g++.dg/ext/fnname2.C", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47ab33b2208b4fc4a043f8e337a0cf70fa23e3eb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Ffnname2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47ab33b2208b4fc4a043f8e337a0cf70fa23e3eb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Ffnname2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Ffnname2.C?ref=47ab33b2208b4fc4a043f8e337a0cf70fa23e3eb", "patch": "@@ -0,0 +1,31 @@\n+// Test whether __func__ works for ordinary member functions.\n+\n+// Copyright (C) 2003 Free Software Foundation, Inc.\n+// Contributed by Matt Austern <austern@apple.com>, 3 Aug 2003\n+// { dg-do run }\n+\n+struct y8a\n+{\n+  const char* zqjx(int, char);\n+};\n+\n+const char* y8a::zqjx(int, char)\n+{\n+  return __func__;\n+}\n+\n+\n+int main()\n+{\n+  y8a tmp;\n+  const char* s = tmp.zqjx(16, 'x');\n+  bool ok = true;\n+\n+  ok = ok && s[0] == 'z';\n+  ok = ok && s[1] == 'q';\n+  ok = ok && s[2] == 'j';\n+  ok = ok && s[3] == 'x';\n+  ok = ok && s[4] == '\\0';\n+\n+  return ok ? 0 : 1;\n+}"}, {"sha": "c29170a9a39aa5e18176df9a995e0b33a387667d", "filename": "gcc/testsuite/g++.dg/ext/fnname3.C", "status": "added", "additions": 65, "deletions": 0, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47ab33b2208b4fc4a043f8e337a0cf70fa23e3eb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Ffnname3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47ab33b2208b4fc4a043f8e337a0cf70fa23e3eb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Ffnname3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Ffnname3.C?ref=47ab33b2208b4fc4a043f8e337a0cf70fa23e3eb", "patch": "@@ -0,0 +1,65 @@\n+// Test whether __func__ works for constructors and destructors.\n+\n+// Copyright (C) 2003 Free Software Foundation, Inc.\n+// Contributed by Matt Austern <austern@apple.com>, 3 Aug 2003\n+// { dg-do run }\n+\n+struct uk9i\n+{\n+  uk9i();\n+  ~uk9i();\n+\n+  static const char* fname;\n+  static bool obj_exists;\n+};\n+\n+uk9i::uk9i()\n+{\n+  obj_exists = true;\n+  fname = __func__;\n+}\n+\n+uk9i::~uk9i()\n+{\n+  obj_exists = false;\n+  fname = __func__;\n+}\n+\n+const char* uk9i::fname = 0;\n+bool uk9i::obj_exists = false;\n+\n+int main()\n+{\n+  bool ok = true;\n+\n+  ok = ok && uk9i::fname == 0;\n+  ok = ok && !uk9i::obj_exists;\n+\n+  {\n+    uk9i tmp;\n+    ok = ok && uk9i::obj_exists;\n+    ok = ok && uk9i::fname != 0;\n+    if (ok)\n+      {\n+\tok = ok && uk9i::fname[0] == 'u';\n+\tok = ok && uk9i::fname[1] == 'k';\n+\tok = ok && uk9i::fname[2] == '9';\n+\tok = ok && uk9i::fname[3] == 'i';\n+\tok = ok && uk9i::fname[4] == '\\0';\n+      }\n+  }\n+\n+  ok = ok && !uk9i::obj_exists;\n+  ok = ok && uk9i::fname != 0;\n+  if (ok)\n+    {\n+      ok = ok && uk9i::fname[0] == '~';\n+      ok = ok && uk9i::fname[1] == 'u';\n+      ok = ok && uk9i::fname[2] == 'k';\n+      ok = ok && uk9i::fname[3] == '9';\n+      ok = ok && uk9i::fname[4] == 'i';\n+      ok = ok && uk9i::fname[5] == '\\0';\n+    }  \n+\n+  return ok ? 0 : 1;\n+}"}]}