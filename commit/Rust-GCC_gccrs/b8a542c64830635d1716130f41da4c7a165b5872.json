{"sha": "b8a542c64830635d1716130f41da4c7a165b5872", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjhhNTQyYzY0ODMwNjM1ZDE3MTYxMzBmNDFkYTRjN2ExNjViNTg3Mg==", "commit": {"author": {"name": "Andrew Pinski", "email": "apinski@cavium.com", "date": "2014-02-26T00:51:56Z"}, "committer": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2014-02-26T00:51:56Z"}, "message": "builtins.c (expand_builtin_thread_pointer): Create a new target when the target is NULL.\n\n2014-02-25  Andrew Pinski  <apinski@cavium.com>\n\n\t* builtins.c (expand_builtin_thread_pointer): Create a new target\n\twhen the target is NULL.\n\nFrom-SVN: r208163", "tree": {"sha": "1eba01a5eec5c3344112839c52aa60900e983919", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1eba01a5eec5c3344112839c52aa60900e983919"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b8a542c64830635d1716130f41da4c7a165b5872", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8a542c64830635d1716130f41da4c7a165b5872", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b8a542c64830635d1716130f41da4c7a165b5872", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8a542c64830635d1716130f41da4c7a165b5872/comments", "author": {"login": "apinski-cavium", "id": 6335315, "node_id": "MDQ6VXNlcjYzMzUzMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/6335315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apinski-cavium", "html_url": "https://github.com/apinski-cavium", "followers_url": "https://api.github.com/users/apinski-cavium/followers", "following_url": "https://api.github.com/users/apinski-cavium/following{/other_user}", "gists_url": "https://api.github.com/users/apinski-cavium/gists{/gist_id}", "starred_url": "https://api.github.com/users/apinski-cavium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apinski-cavium/subscriptions", "organizations_url": "https://api.github.com/users/apinski-cavium/orgs", "repos_url": "https://api.github.com/users/apinski-cavium/repos", "events_url": "https://api.github.com/users/apinski-cavium/events{/privacy}", "received_events_url": "https://api.github.com/users/apinski-cavium/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fa5d996595fca63a657647ee94cd4d4792b46d75", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa5d996595fca63a657647ee94cd4d4792b46d75", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa5d996595fca63a657647ee94cd4d4792b46d75"}], "stats": {"total": 10, "additions": 9, "deletions": 1}, "files": [{"sha": "713baf4fddc6e0dea6b01280ef6cc8076eba0b46", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8a542c64830635d1716130f41da4c7a165b5872/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8a542c64830635d1716130f41da4c7a165b5872/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b8a542c64830635d1716130f41da4c7a165b5872", "patch": "@@ -1,3 +1,8 @@\n+2014-02-25  Andrew Pinski  <apinski@cavium.com>\n+\n+\t* builtins.c (expand_builtin_thread_pointer): Create a new target\n+\twhen the target is NULL.\n+\n 2014-02-25  Vladimir Makarov  <vmakarov@redhat.com>\n \n \tPR rtl-optimization/60317"}, {"sha": "7c6318ee4aba09dfa12e301bd72278cd360c0fc1", "filename": "gcc/builtins.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8a542c64830635d1716130f41da4c7a165b5872/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8a542c64830635d1716130f41da4c7a165b5872/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=b8a542c64830635d1716130f41da4c7a165b5872", "patch": "@@ -5712,7 +5712,10 @@ expand_builtin_thread_pointer (tree exp, rtx target)\n   if (icode != CODE_FOR_nothing)\n     {\n       struct expand_operand op;\n-      if (!REG_P (target) || GET_MODE (target) != Pmode)\n+      /* If the target is not sutitable then create a new target. */\n+      if (target == NULL_RTX\n+\t  || !REG_P (target)\n+\t  || GET_MODE (target) != Pmode)\n \ttarget = gen_reg_rtx (Pmode);\n       create_output_operand (&op, target, Pmode);\n       expand_insn (icode, 1, &op);"}]}