{"sha": "8207dc2311d761ddff0de5d0a2e8a72dc4e94e78", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODIwN2RjMjMxMWQ3NjFkZGZmMGRlNWQwYTJlOGE3MmRjNGU5NGU3OA==", "commit": {"author": {"name": "Bob Duff", "email": "duff@adacore.com", "date": "2018-01-11T08:53:27Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-01-11T08:53:27Z"}, "message": "[Ada] gnatbind -f switch gives an error for duplicates\n\nIf the -felab-order.txt switch is given to gnatbind, and there are duplicate\nunit names in elab-order.txt, an error will be given.\n\nThe following test should get errors:\n\nthis (spec) <-- that (body)\nerror: elab-order.txt:5: duplicate unit name \"this (spec)\" from line 1\nerror: elab-order.txt:7: duplicate unit name \"that (body)\" from line 3\ngnatmake: *** bind failed.\n\nContent of elab-order.txt (7 lines):\n\nthis%s\n\nthat%b\n\nthis (spec)\n\nthat%b\n\ngnatmake -q -f -g -O0 -gnata that-main.adb -bargs -felab-order.txt\n\npackage body That is\nend That;\npackage That is\n   pragma Elaborate_Body;\nend That;\nwith This, That;\nprocedure That.Main is\nbegin\n   null;\nend That.Main;\npackage body This is\nend This;\npackage This is\n   pragma Elaborate_Body;\nend This;\n\n2018-01-11  Bob Duff  <duff@adacore.com>\n\ngcc/ada/\n\n\t* binde.adb (Force_Elab_Order): Give an error if there are duplicate\n\tunit names.\n\nFrom-SVN: r256508", "tree": {"sha": "4d13a7bf55f96da66623be0b4fd18f03959f32f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4d13a7bf55f96da66623be0b4fd18f03959f32f4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8207dc2311d761ddff0de5d0a2e8a72dc4e94e78", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8207dc2311d761ddff0de5d0a2e8a72dc4e94e78", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8207dc2311d761ddff0de5d0a2e8a72dc4e94e78", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8207dc2311d761ddff0de5d0a2e8a72dc4e94e78/comments", "author": {"login": "bobduff", "id": 29099567, "node_id": "MDQ6VXNlcjI5MDk5NTY3", "avatar_url": "https://avatars.githubusercontent.com/u/29099567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bobduff", "html_url": "https://github.com/bobduff", "followers_url": "https://api.github.com/users/bobduff/followers", "following_url": "https://api.github.com/users/bobduff/following{/other_user}", "gists_url": "https://api.github.com/users/bobduff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bobduff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bobduff/subscriptions", "organizations_url": "https://api.github.com/users/bobduff/orgs", "repos_url": "https://api.github.com/users/bobduff/repos", "events_url": "https://api.github.com/users/bobduff/events{/privacy}", "received_events_url": "https://api.github.com/users/bobduff/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "52c5090a4f940459ac3e38bcee0fd9f5f86a4eff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52c5090a4f940459ac3e38bcee0fd9f5f86a4eff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/52c5090a4f940459ac3e38bcee0fd9f5f86a4eff"}], "stats": {"total": 130, "additions": 99, "deletions": 31}, "files": [{"sha": "ce0d63ce13da025fd1912abe97b842ffbbf259fb", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8207dc2311d761ddff0de5d0a2e8a72dc4e94e78/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8207dc2311d761ddff0de5d0a2e8a72dc4e94e78/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=8207dc2311d761ddff0de5d0a2e8a72dc4e94e78", "patch": "@@ -1,3 +1,8 @@\n+2018-01-11  Bob Duff  <duff@adacore.com>\n+\n+\t* binde.adb (Force_Elab_Order): Give an error if there are duplicate\n+\tunit names.\n+\n 2018-01-11  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem_ch6.adb (Freeze_Expr_Types): If an access value is the"}, {"sha": "ad863aabfb73030b5675cc4b8255012c73a5fa73", "filename": "gcc/ada/binde.adb", "status": "modified", "additions": 94, "deletions": 31, "changes": 125, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8207dc2311d761ddff0de5d0a2e8a72dc4e94e78/gcc%2Fada%2Fbinde.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8207dc2311d761ddff0de5d0a2e8a72dc4e94e78/gcc%2Fada%2Fbinde.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbinde.adb?ref=8207dc2311d761ddff0de5d0a2e8a72dc4e94e78", "patch": "@@ -33,6 +33,7 @@ with Output;   use Output;\n with Table;\n \n with System.Case_Util; use System.Case_Util;\n+with System.HTable;\n with System.OS_Lib;\n \n package body Binde is\n@@ -1796,6 +1797,38 @@ package body Binde is\n       function Read_File (Name : String) return String_Ptr;\n       --  Read the entire contents of the named file\n \n+      subtype Header_Num is Unit_Name_Type'Base range 0 .. 2**16 - 1;\n+      type Line_Number is new Nat;\n+      No_Line_Number  : constant Line_Number := 0;\n+      Cur_Line_Number : Line_Number := 0;\n+      --  Current line number in the Force_Elab_Order_File.\n+      --  Incremented by Get_Line. Used in error messages.\n+\n+      function Hash (N : Unit_Name_Type) return Header_Num;\n+\n+      package Name_Map is new System.HTable.Simple_HTable\n+        (Header_Num => Header_Num,\n+         Element => Line_Number,\n+         No_Element => No_Line_Number,\n+         Key => Unit_Name_Type,\n+         Hash => Hash,\n+         Equal => \"=\");\n+      --  Name_Map contains an entry for each file name seen, mapped to the\n+      --  line number where we saw it first. This is used to give an error for\n+      --  duplicates.\n+\n+      ----------\n+      -- Hash --\n+      ----------\n+\n+      function Hash (N : Unit_Name_Type) return Header_Num is\n+         --  Name_Ids are already widely dispersed; no need for any actual\n+         --  hashing. Just subtract to make it zero based, and \"mod\" to\n+         --  bring it in range.\n+      begin\n+         return (N - Unit_Name_Type'First) mod (Header_Num'Last + 1);\n+      end Hash;\n+\n       ---------------\n       -- Read_File --\n       ---------------\n@@ -1848,6 +1881,8 @@ package body Binde is\n          Last  : Natural;\n \n       begin\n+         Cur_Line_Number := Cur_Line_Number + 1;\n+\n          --  Skip to end of line\n \n          while Cur <= S'Last\n@@ -1943,50 +1978,78 @@ package body Binde is\n       while Cur <= S'Last loop\n          declare\n             Uname : constant Unit_Name_Type := Name_Find (Get_Line);\n-\n+            Error : Boolean := False;\n          begin\n             if Uname = Empty_Name then\n                null; -- silently skip blank lines\n-\n-            elsif Get_Name_Table_Int (Uname) = 0\n-              or else Unit_Id (Get_Name_Table_Int (Uname)) = No_Unit_Id\n-            then\n-               if Doing_New then\n-                  Write_Line\n-                    (\"\"\"\" & Get_Name_String (Uname)\n-                     & \"\"\": not present; ignored\");\n-               end if;\n-\n             else\n                declare\n-                  Cur_Unit : constant Unit_Id := Unit_Id_Of (Uname);\n-\n+                  Dup : constant Line_Number := Name_Map.Get (Uname);\n                begin\n-                  if Is_Internal_File_Name (Units.Table (Cur_Unit).Sfile) then\n-                     if Doing_New then\n-                        Write_Line\n-                          (\"\"\"\" & Get_Name_String (Uname) &\n-                             \"\"\": predefined unit ignored\");\n-                     end if;\n+                  if Dup = No_Line_Number then\n+                     Name_Map.Set (Uname, Cur_Line_Number);\n \n-                  else\n-                     if Prev_Unit /= No_Unit_Id then\n+                     --  We don't need to give the \"not present\" message in\n+                     --  the case of \"duplicate unit\", because we would have\n+                     --  already given the \"not present\" message on the\n+                     --  first occurrence.\n+\n+                     if Get_Name_Table_Int (Uname) = 0\n+                       or else Unit_Id (Get_Name_Table_Int (Uname)) =\n+                            No_Unit_Id\n+                     then\n+                        Error := True;\n                         if Doing_New then\n-                           Write_Unit_Name (Units.Table (Prev_Unit).Uname);\n-                           Write_Str (\" <-- \");\n-                           Write_Unit_Name (Units.Table (Cur_Unit).Uname);\n-                           Write_Eol;\n+                           Write_Line\n+                             (\"\"\"\" & Get_Name_String (Uname)\n+                              & \"\"\": not present; ignored\");\n                         end if;\n-\n-                        Build_Link\n-                          (Before => Prev_Unit,\n-                           After => Cur_Unit,\n-                           R => Forced);\n                      end if;\n \n-                     Prev_Unit := Cur_Unit;\n+                  else\n+                     Error := True;\n+                     if Doing_New then\n+                        Error_Msg_Nat_1  := Nat (Cur_Line_Number);\n+                        Error_Msg_Unit_1 := Uname;\n+                        Error_Msg_Nat_2  := Nat (Dup);\n+                        Error_Msg (Force_Elab_Order_File.all &\n+                                     \":#: duplicate unit name $ from line #\");\n+                     end if;\n                   end if;\n                end;\n+\n+               if not Error then\n+                  declare\n+                     Cur_Unit : constant Unit_Id := Unit_Id_Of (Uname);\n+                  begin\n+                     if Is_Internal_File_Name\n+                       (Units.Table (Cur_Unit).Sfile)\n+                     then\n+                        if Doing_New then\n+                           Write_Line\n+                             (\"\"\"\" & Get_Name_String (Uname) &\n+                                \"\"\": predefined unit ignored\");\n+                        end if;\n+\n+                     else\n+                        if Prev_Unit /= No_Unit_Id then\n+                           if Doing_New then\n+                              Write_Unit_Name (Units.Table (Prev_Unit).Uname);\n+                              Write_Str (\" <-- \");\n+                              Write_Unit_Name (Units.Table (Cur_Unit).Uname);\n+                              Write_Eol;\n+                           end if;\n+\n+                           Build_Link\n+                             (Before => Prev_Unit,\n+                              After => Cur_Unit,\n+                              R => Forced);\n+                        end if;\n+\n+                        Prev_Unit := Cur_Unit;\n+                     end if;\n+                  end;\n+               end if;\n             end if;\n          end;\n       end loop;"}]}