{"sha": "6401aaf5df140b05a9ff6405cbd180df3c9f620a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjQwMWFhZjVkZjE0MGIwNWE5ZmY2NDA1Y2JkMTgwZGYzYzlmNjIwYQ==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2012-03-29T12:48:08Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2012-03-29T12:48:08Z"}, "message": "Define x86_64_fallback_frame_state only for glibc\n\n2012-03-29  H.J. Lu  <hongjiu.lu@intel.com>\n\n\t* config/i386/linux-unwind.h (x86_64_fallback_frame_state): Define\n\tonly for glibc.\n\nFrom-SVN: r185957", "tree": {"sha": "a1dc6b0afc92c80b689c6e6eb91263f1d5ac206e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a1dc6b0afc92c80b689c6e6eb91263f1d5ac206e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6401aaf5df140b05a9ff6405cbd180df3c9f620a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6401aaf5df140b05a9ff6405cbd180df3c9f620a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6401aaf5df140b05a9ff6405cbd180df3c9f620a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6401aaf5df140b05a9ff6405cbd180df3c9f620a/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6bcfb753855b957ad7cc8cf04fd767a1b013979d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6bcfb753855b957ad7cc8cf04fd767a1b013979d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6bcfb753855b957ad7cc8cf04fd767a1b013979d"}], "stats": {"total": 24, "additions": 13, "deletions": 11}, "files": [{"sha": "f44f52ea1bac5c6da34c1e157818a4d5f2dbeca4", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6401aaf5df140b05a9ff6405cbd180df3c9f620a/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6401aaf5df140b05a9ff6405cbd180df3c9f620a/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=6401aaf5df140b05a9ff6405cbd180df3c9f620a", "patch": "@@ -1,3 +1,8 @@\n+2012-03-29  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* config/i386/linux-unwind.h (x86_64_fallback_frame_state): Define\n+\tonly for glibc.\n+\n 2012-03-28  Georg-Johann Lay  <avr@gjlay.de>\n \n \tPR target/52737"}, {"sha": "aef2692b1415085388e382d921449aba47cd234c", "filename": "libgcc/config/i386/linux-unwind.h", "status": "modified", "additions": 8, "deletions": 11, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6401aaf5df140b05a9ff6405cbd180df3c9f620a/libgcc%2Fconfig%2Fi386%2Flinux-unwind.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6401aaf5df140b05a9ff6405cbd180df3c9f620a/libgcc%2Fconfig%2Fi386%2Flinux-unwind.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fi386%2Flinux-unwind.h?ref=6401aaf5df140b05a9ff6405cbd180df3c9f620a", "patch": "@@ -29,11 +29,17 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n \n #ifndef inhibit_libc\n \n-#ifdef __x86_64__\n+/* There's no sys/ucontext.h for glibc 2.0, so no\n+   signal-turned-exceptions for them.  There's also no configure-run for\n+   the target, so we can't check on (e.g.) HAVE_SYS_UCONTEXT_H.  Using the\n+   target libc version macro should be enough.  */\n+#if defined __GLIBC__ && !(__GLIBC__ == 2 && __GLIBC_MINOR__ == 0)\n \n #include <signal.h>\n #include <sys/ucontext.h>\n \n+#ifdef __x86_64__\n+\n #define MD_FALLBACK_FRAME_STATE_FOR x86_64_fallback_frame_state\n \n static _Unwind_Reason_Code\n@@ -108,15 +114,6 @@ x86_64_fallback_frame_state (struct _Unwind_Context *context,\n \n #else /* ifdef __x86_64__  */\n \n-/* There's no sys/ucontext.h for glibc 2.0, so no\n-   signal-turned-exceptions for them.  There's also no configure-run for\n-   the target, so we can't check on (e.g.) HAVE_SYS_UCONTEXT_H.  Using the\n-   target libc version macro should be enough.  */\n-#if defined __GLIBC__ && !(__GLIBC__ == 2 && __GLIBC_MINOR__ == 0)\n-\n-#include <signal.h>\n-#include <sys/ucontext.h>\n-\n #define MD_FALLBACK_FRAME_STATE_FOR x86_fallback_frame_state\n \n static _Unwind_Reason_Code\n@@ -197,6 +194,6 @@ x86_frob_update_context (struct _Unwind_Context *context,\n     _Unwind_SetSignalFrame (context, 1);\n }\n \n-#endif /* not glibc 2.0 */\n #endif /* ifdef __x86_64__  */\n+#endif /* not glibc 2.0 */\n #endif /* ifdef inhibit_libc  */"}]}