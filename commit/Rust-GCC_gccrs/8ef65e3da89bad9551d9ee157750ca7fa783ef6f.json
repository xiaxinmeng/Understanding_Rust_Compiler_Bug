{"sha": "8ef65e3da89bad9551d9ee157750ca7fa783ef6f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGVmNjVlM2RhODliYWQ5NTUxZDllZTE1Nzc1MGNhN2ZhNzgzZWY2Zg==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2007-01-02T13:03:59Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2007-01-02T13:03:59Z"}, "message": "rs6000.c (print_operand): Check (TARGET_SPE || TARGET_E500_DOUBLE), not TARGET_E500, for %y.\n\n\t* config/rs6000/rs6000.c (print_operand): Check (TARGET_SPE ||\n\tTARGET_E500_DOUBLE), not TARGET_E500, for %y.\n\t(rs6000_generate_compare, rs6000_emit_sCOND, output_cbranch,\n\trs6000_emit_cmove): Don't check TARGET_E500.\n\t* config/rs6000/rs6000.md (bunordered, bordered, sunordered,\n\tsordered): Don't check TARGET_E500.\n\nFrom-SVN: r120339", "tree": {"sha": "7179dd200a173cab62df32add705ee3c400d6232", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7179dd200a173cab62df32add705ee3c400d6232"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8ef65e3da89bad9551d9ee157750ca7fa783ef6f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ef65e3da89bad9551d9ee157750ca7fa783ef6f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ef65e3da89bad9551d9ee157750ca7fa783ef6f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ef65e3da89bad9551d9ee157750ca7fa783ef6f/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d8934cf1e3a5e6cfe4d85841996e28555d8aea76", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8934cf1e3a5e6cfe4d85841996e28555d8aea76", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d8934cf1e3a5e6cfe4d85841996e28555d8aea76"}], "stats": {"total": 34, "additions": 22, "deletions": 12}, "files": [{"sha": "6dcf8ad7e6189fbe3c2d7a9aa0025824cb309164", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ef65e3da89bad9551d9ee157750ca7fa783ef6f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ef65e3da89bad9551d9ee157750ca7fa783ef6f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8ef65e3da89bad9551d9ee157750ca7fa783ef6f", "patch": "@@ -1,3 +1,12 @@\n+2007-01-02  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* config/rs6000/rs6000.c (print_operand): Check (TARGET_SPE ||\n+\tTARGET_E500_DOUBLE), not TARGET_E500, for %y.\n+\t(rs6000_generate_compare, rs6000_emit_sCOND, output_cbranch,\n+\trs6000_emit_cmove): Don't check TARGET_E500.\n+\t* config/rs6000/rs6000.md (bunordered, bordered, sunordered,\n+\tsordered): Don't check TARGET_E500.\n+\n 2007-01-01  Eric Christopher  <echristo@apple.com>\n \n \t* config/mips/mips.c (mips_regno_mode_ok_for_base_p): Use"}, {"sha": "740197013f478fc293c2c36cae4a9e471756301e", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ef65e3da89bad9551d9ee157750ca7fa783ef6f/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ef65e3da89bad9551d9ee157750ca7fa783ef6f/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=8ef65e3da89bad9551d9ee157750ca7fa783ef6f", "patch": "@@ -1,6 +1,6 @@\n /* Subroutines used for code generation on IBM RS/6000.\n    Copyright (C) 1991, 1993, 1994, 1995, 1996, 1997, 1998, 1999,\n-   2000, 2001, 2002, 2003, 2004, 2005, 2006\n+   2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007\n    Free Software Foundation, Inc.\n    Contributed by Richard Kenner (kenner@vlsi1.ultra.nyu.edu)\n \n@@ -11016,7 +11016,8 @@ print_operand (FILE *file, rtx x, int code)\n \ttmp = XEXP (x, 0);\n \n \t/* Ugly hack because %y is overloaded.  */\n-\tif (TARGET_E500 && GET_MODE_SIZE (GET_MODE (x)) == 8)\n+\tif ((TARGET_SPE || TARGET_E500_DOUBLE)\n+\t    && GET_MODE_SIZE (GET_MODE (x)) == 8)\n \t  {\n \t    /* Handle [reg].  */\n \t    if (GET_CODE (tmp) == REG)\n@@ -11315,7 +11316,7 @@ rs6000_generate_compare (enum rtx_code code)\n   compare_result = gen_reg_rtx (comp_mode);\n \n   /* E500 FP compare instructions on the GPRs.  Yuck!  */\n-  if ((TARGET_E500 && !TARGET_FPRS && TARGET_HARD_FLOAT)\n+  if ((!TARGET_FPRS && TARGET_HARD_FLOAT)\n       && rs6000_compare_fp_p)\n     {\n       rtx cmp, or_result, compare_result2;\n@@ -11508,7 +11509,7 @@ rs6000_generate_compare (enum rtx_code code)\n      under flag_finite_math_only we don't bother.  */\n   if (rs6000_compare_fp_p\n       && !flag_finite_math_only\n-      && !(TARGET_HARD_FLOAT && TARGET_E500 && !TARGET_FPRS)\n+      && !(TARGET_HARD_FLOAT && !TARGET_FPRS)\n       && (code == LE || code == GE\n \t  || code == UNEQ || code == LTGT\n \t  || code == UNGT || code == UNLT))\n@@ -11558,7 +11559,7 @@ rs6000_emit_sCOND (enum rtx_code code, rtx result)\n   condition_rtx = rs6000_generate_compare (code);\n   cond_code = GET_CODE (condition_rtx);\n \n-  if (TARGET_E500 && rs6000_compare_fp_p\n+  if (rs6000_compare_fp_p\n       && !TARGET_FPRS && TARGET_HARD_FLOAT)\n     {\n       rtx t;\n@@ -11665,7 +11666,7 @@ output_cbranch (rtx op, const char *label, int reversed, rtx insn)\n \tcode = reverse_condition (code);\n     }\n \n-  if ((TARGET_E500 && !TARGET_FPRS && TARGET_HARD_FLOAT) && mode == CCFPmode)\n+  if ((!TARGET_FPRS && TARGET_HARD_FLOAT) && mode == CCFPmode)\n     {\n       /* The efscmp/tst* instructions twiddle bit 2, which maps nicely\n \t to the GT bit.  */\n@@ -12081,7 +12082,7 @@ rs6000_emit_cmove (rtx dest, rtx op, rtx true_cond, rtx false_cond)\n \treturn rs6000_emit_int_cmove (dest, op, true_cond, false_cond);\n       return 0;\n     }\n-  else if (TARGET_E500 && TARGET_HARD_FLOAT && !TARGET_FPRS\n+  else if (TARGET_HARD_FLOAT && !TARGET_FPRS\n \t   && SCALAR_FLOAT_MODE_P (compare_mode))\n     return 0;\n "}, {"sha": "14b73c213a8cd67e9d6a801e1845bf91f33532b1", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ef65e3da89bad9551d9ee157750ca7fa783ef6f/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ef65e3da89bad9551d9ee157750ca7fa783ef6f/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=8ef65e3da89bad9551d9ee157750ca7fa783ef6f", "patch": "@@ -1,6 +1,6 @@\n ;; Machine description for IBM RISC System 6000 (POWER) for GNU C compiler\n ;; Copyright (C) 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998,\n-;; 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006\n+;; 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007\n ;; Free Software Foundation, Inc.\n ;; Contributed by Richard Kenner (kenner@vlsi1.ultra.nyu.edu)\n \n@@ -11421,12 +11421,12 @@\n \n (define_expand \"bunordered\"\n   [(use (match_operand 0 \"\" \"\"))]\n-  \"! (TARGET_HARD_FLOAT && TARGET_E500 && !TARGET_FPRS)\"\n+  \"! (TARGET_HARD_FLOAT && !TARGET_FPRS)\"\n   \"{ rs6000_emit_cbranch (UNORDERED, operands[0]); DONE; }\")\n \n (define_expand \"bordered\"\n   [(use (match_operand 0 \"\" \"\"))]\n-  \"! (TARGET_HARD_FLOAT && TARGET_E500 && !TARGET_FPRS)\"\n+  \"! (TARGET_HARD_FLOAT && !TARGET_FPRS)\"\n   \"{ rs6000_emit_cbranch (ORDERED, operands[0]); DONE; }\")\n \n (define_expand \"buneq\"\n@@ -11555,12 +11555,12 @@\n \n (define_expand \"sunordered\"\n   [(clobber (match_operand:SI 0 \"gpc_reg_operand\" \"\"))]\n-  \"! (TARGET_HARD_FLOAT && TARGET_E500 && !TARGET_FPRS)\"\n+  \"! (TARGET_HARD_FLOAT && !TARGET_FPRS)\"\n   \"{ rs6000_emit_sCOND (UNORDERED, operands[0]); DONE; }\")\n \n (define_expand \"sordered\"\n   [(clobber (match_operand:SI 0 \"gpc_reg_operand\" \"\"))]\n-  \"! (TARGET_HARD_FLOAT && TARGET_E500 && !TARGET_FPRS)\"\n+  \"! (TARGET_HARD_FLOAT && !TARGET_FPRS)\"\n   \"{ rs6000_emit_sCOND (ORDERED, operands[0]); DONE; }\")\n \n (define_expand \"suneq\""}]}