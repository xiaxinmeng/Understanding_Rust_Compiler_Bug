{"sha": "38000825cd37c3f132cd02edc4e8eb79aff4d3a6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzgwMDA4MjVjZDM3YzNmMTMyY2QwMmVkYzRlOGViNzlhZmY0ZDNhNg==", "commit": {"author": {"name": "Moritz Klammler", "email": "moritz@glammler.eu", "date": "2016-10-24T16:05:48Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2016-10-24T16:05:48Z"}, "message": "download_prerequisites: Conditionally verify checksums of downloaded pacakges.\n\n2016-10-24  Moritz Klammler  <moritz@glammler.eu>\n\n\t* download_prerequisites: Conditionally verify checksums of\n\tdownloaded pacakges.  Add help text.\n\t* prerequisites.md5: New file.\n\t* prerequisites.sha512: New file.\n\nFrom-SVN: r241483", "tree": {"sha": "3c268f73fca0044d8b348b9a51e88e3580171964", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3c268f73fca0044d8b348b9a51e88e3580171964"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/38000825cd37c3f132cd02edc4e8eb79aff4d3a6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38000825cd37c3f132cd02edc4e8eb79aff4d3a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/38000825cd37c3f132cd02edc4e8eb79aff4d3a6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38000825cd37c3f132cd02edc4e8eb79aff4d3a6/comments", "author": null, "committer": null, "parents": [{"sha": "d168c883c5794b57adfb272e9fec9ee8df974832", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d168c883c5794b57adfb272e9fec9ee8df974832", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d168c883c5794b57adfb272e9fec9ee8df974832"}], "stats": {"total": 248, "additions": 209, "deletions": 39}, "files": [{"sha": "ab5ae3bc6f42a165123caba4433c7ab0f75c8508", "filename": "contrib/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38000825cd37c3f132cd02edc4e8eb79aff4d3a6/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38000825cd37c3f132cd02edc4e8eb79aff4d3a6/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=38000825cd37c3f132cd02edc4e8eb79aff4d3a6", "patch": "@@ -1,3 +1,10 @@\n+2016-10-24  Moritz Klammler  <moritz@glammler.eu>\n+\n+\t* download_prerequisites: Conditionally verify checksums of\n+\tdownloaded pacakges.  Add help text.  \n+\t* prerequisites.md5: New file.\n+\t* prerequisites.sha512: New file.\n+\n 2016-10-24  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \t* check_GNU_style.sh (remove_testsuite): New function."}, {"sha": "a9eac67de7b58a2367eb152488964272801cdfc5", "filename": "contrib/download_prerequisites", "status": "modified", "additions": 194, "deletions": 39, "changes": 233, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38000825cd37c3f132cd02edc4e8eb79aff4d3a6/contrib%2Fdownload_prerequisites", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38000825cd37c3f132cd02edc4e8eb79aff4d3a6/contrib%2Fdownload_prerequisites", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fdownload_prerequisites?ref=38000825cd37c3f132cd02edc4e8eb79aff4d3a6", "patch": "@@ -1,8 +1,9 @@\n #! /bin/sh\n+#! -*- coding:utf-8; mode:shell-script; -*-\n \n-# Download some prerequisites needed by gcc.\n-# Run this from the top level of the gcc source tree and the gcc\n-# build will do the right thing.\n+# Download some prerequisites needed by GCC.\n+# Run this from the top level of the GCC source tree and the GCC build will do\n+# the right thing.  Run it with the `--help` option for more information.\n #\n # (C) 2010-2016 Free Software Foundation\n #\n@@ -19,42 +20,196 @@\n # You should have received a copy of the GNU General Public License\n # along with this program. If not, see http://www.gnu.org/licenses/.\n \n-# If you want to disable Graphite loop optimizations while building GCC,\n-# DO NOT set GRAPHITE_LOOP_OPT as yes so that the isl package will not\n-# be downloaded.\n-GRAPHITE_LOOP_OPT=yes\n \n-if [ ! -e gcc/BASE-VER ] ; then\n-\techo \"You must run this script in the top level GCC source directory.\"\n-\texit 1\n-fi\n+program='download_prerequisites'\n+version='(unversioned)'\n+\n+# MAINTAINERS: If you update the package versions below, please\n+# remember to also update the files `contrib/prerequisites.sha512` and\n+# `contrib/prerequisites.md5` with the new checksums.\n+\n+gmp='gmp-6.1.0.tar.bz2'\n+mpfr='mpfr-3.1.4.tar.bz2'\n+mpc='mpc-1.0.3.tar.gz'\n+isl='isl-0.16.1.tar.bz2'\n+\n+base_url='ftp://gcc.gnu.org/pub/gcc/infrastructure/'\n+\n+echo_archives() {\n+    echo \"${gmp}\"\n+    echo \"${mpfr}\"\n+    echo \"${mpc}\"\n+    if [ ${graphite} -gt 0 ]; then echo \"${isl}\"; fi\n+}\n+\n+graphite=1\n+verify=1\n+force=0\n+chksum='sha512'\n+directory='.'\n+\n+helptext=\"usage: ${program} [OPTION...]\n+\n+Downloads some prerequisites needed by GCC.  Run this from the top level of the\n+GCC source tree and the GCC build will do the right thing.\n+\n+The following options are available:\n+\n+ --directory=DIR  download and unpack packages into DIR instead of '.'\n+ --force          download again overwriting existing packages\n+ --no-force       do not download existing packages again (default)\n+ --isl            download ISL, needed for Graphite loop optimizations (default)\n+ --graphite       same as --isl\n+ --no-isl         don't download ISL\n+ --no-graphite    same as --no-isl\n+ --verify         verify package integrity after download (default)\n+ --no-verify      don't verify package integrity\n+ --sha512         use SHA512 checksum to verify package integrity (default)\n+ --md5            use MD5 checksum to verify package integrity\n+ --help           show this text and exit\n+ --version        show version information and exit\n+\"\n \n-# Necessary to build GCC.\n-MPFR=mpfr-3.1.4\n-GMP=gmp-6.1.0\n-MPC=mpc-1.0.3\n-\n-wget ftp://gcc.gnu.org/pub/gcc/infrastructure/$MPFR.tar.bz2 || exit 1\n-tar xjf $MPFR.tar.bz2 || exit 1\n-if test -L mpfr; then rm -f mpfr; fi\n-ln -sf $MPFR mpfr || exit 1\n-\n-wget ftp://gcc.gnu.org/pub/gcc/infrastructure/$GMP.tar.bz2 || exit 1\n-tar xjf $GMP.tar.bz2  || exit 1\n-if test -L gmp; then rm -f gmp; fi\n-ln -sf $GMP gmp || exit 1\n-\n-wget ftp://gcc.gnu.org/pub/gcc/infrastructure/$MPC.tar.gz || exit 1\n-tar xzf $MPC.tar.gz || exit 1\n-if test -L mpc; then rm -f mpc; fi\n-ln -sf $MPC mpc || exit 1\n-\n-# Necessary to build GCC with the Graphite loop optimizations.\n-if [ \"$GRAPHITE_LOOP_OPT\" = \"yes\" ] ; then\n-  ISL=isl-0.16.1\n-\n-  wget ftp://gcc.gnu.org/pub/gcc/infrastructure/$ISL.tar.bz2 || exit 1\n-  tar xjf $ISL.tar.bz2  || exit 1\n-  if test -L isl; then rm -f isl; fi\n-  ln -sf $ISL isl || exit 1\n+versiontext=\"${program} ${version}\n+Copyright (C) 2016 Free Software Foundation, Inc.\n+This is free software; see the source for copying conditions.  There is NO\n+warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\"\n+\n+die() {\n+    echo \"error: $@\" >&2\n+    exit 1\n+}\n+\n+for arg in \"$@\"\n+do\n+    case \"${arg}\" in\n+        --help)\n+            echo \"${helptext}\"\n+            exit\n+            ;;\n+        --version)\n+            echo \"${versiontext}\"\n+            exit\n+            ;;\n+    esac\n+done\n+unset arg\n+\n+argnext=\n+for arg in \"$@\"\n+do\n+    if [ \"x${argnext}\" = x ]\n+    then\n+        case \"${arg}\" in\n+            --directory)\n+                argnext='directory'\n+                ;;\n+            --directory=*)\n+                directory=\"${arg#--directory=}\"\n+                ;;\n+            --force)\n+                force=1\n+                ;;\n+            --no-force)\n+                force=0\n+                ;;\n+            --isl|--graphite)\n+                graphite=1\n+                ;;\n+            --no-isl|--no-graphite)\n+                graphite=0\n+                ;;\n+            --verify)\n+                verify=1\n+                ;;\n+            --no-verify)\n+                verify=0\n+                ;;\n+            --sha512)\n+                chksum='sha512'\n+                verify=1\n+                ;;\n+            --md5)\n+                chksum='md5'\n+                verify=1\n+                ;;\n+            -*)\n+                die \"unknown option: ${arg}\"\n+                ;;\n+            *)\n+                die \"too many arguments\"\n+                ;;\n+        esac\n+    else\n+        case \"${arg}\" in\n+            -*)\n+                die \"Missing argument for option --${argnext}\"\n+                ;;\n+        esac\n+        case \"${argnext}\" in\n+            directory)\n+                directory=\"${arg}\"\n+                ;;\n+            *)\n+                die \"The impossible has happened\"\n+                ;;\n+        esac\n+        argnext=\n+    fi\n+done\n+[ \"x${argnext}\" = x ] || die \"Missing argument for option --${argnext}\"\n+unset arg argnext\n+\n+[ -e ./gcc/BASE-VER ]                                                         \\\n+    || die \"You must run this script in the top-level GCC source directory\"\n+\n+[ -d \"${directory}\" ]                                                         \\\n+    || die \"No such directory: ${directory}\"\n+\n+for ar in $(echo_archives)\n+do\n+    if [ ${force} -gt 0 ]; then rm -f \"${directory}/${ar}\"; fi\n+    [ -e \"${directory}/${ar}\" ]                                               \\\n+        || wget --no-verbose -O \"${directory}/${ar}\" \"${base_url}${ar}\"       \\\n+        || die \"Cannot download ${ar} from ${base_url}\"\n+done\n+unset ar\n+\n+if [ ${verify} -gt 0 ]\n+then\n+    chksumfile=\"contrib/prerequisites.${chksum}\"\n+    [ -r \"${chksumfile}\" ] || die \"No checksums available\"\n+    for ar in $(echo_archives)\n+    do\n+        grep \"${ar}\" \"${chksumfile}\"                                          \\\n+            | ( cd \"${directory}\" && \"${chksum}sum\" --check )                 \\\n+            || die \"Cannot verify integrity of possibly corrupted file ${ar}\"\n+    done\n+    unset chksumfile\n fi\n+unset ar\n+\n+for ar in $(echo_archives)\n+do\n+    package=\"${ar%.tar*}\"\n+    if [ ${force} -gt 0 ]; then rm -rf \"${directory}/${package}\"; fi\n+    [ -e \"${directory}/${package}\" ]                                          \\\n+        || ( cd \"${directory}\" && tar -xf \"${ar}\" )                           \\\n+        || die \"Cannot extract package from ${ar}\"\n+    unset package\n+done\n+unset ar\n+\n+for ar in $(echo_archives)\n+do\n+    target=\"${directory}/${ar%.tar*}/\"\n+    linkname=\"${ar%-*}\"\n+    if [ ${force} -gt 0 ]; then rm -f \"${linkname}\"; fi\n+    [ -e \"${linkname}\" ]                                                      \\\n+        || ln -s \"${target}\" \"${linkname}\"                                    \\\n+        || die \"Cannot create symbolic link ${linkname} --> ${target}\"\n+    unset target linkname\n+done\n+unset ar\n+\n+echo \"All prerequisites downloaded successfully.\""}, {"sha": "b8e89d43c8a80c02d55bd254a779205a19f4a813", "filename": "contrib/prerequisites.md5", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38000825cd37c3f132cd02edc4e8eb79aff4d3a6/contrib%2Fprerequisites.md5", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38000825cd37c3f132cd02edc4e8eb79aff4d3a6/contrib%2Fprerequisites.md5", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fprerequisites.md5?ref=38000825cd37c3f132cd02edc4e8eb79aff4d3a6", "patch": "@@ -0,0 +1,4 @@\n+86ee6e54ebfc4a90b643a65e402c4048  gmp-6.1.0.tar.bz2\n+b8a2f6b0e68bef46e53da2ac439e1cf4  mpfr-3.1.4.tar.bz2\n+d6a1d5f8ddea3abd2cc3e98f58352d26  mpc-1.0.3.tar.gz\n+ac1f25a0677912952718a51f5bc20f32  isl-0.16.1.tar.bz2"}, {"sha": "808970778c74e00abc99f9450ea67cf2ecee1b42", "filename": "contrib/prerequisites.sha512", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38000825cd37c3f132cd02edc4e8eb79aff4d3a6/contrib%2Fprerequisites.sha512", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38000825cd37c3f132cd02edc4e8eb79aff4d3a6/contrib%2Fprerequisites.sha512", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fprerequisites.sha512?ref=38000825cd37c3f132cd02edc4e8eb79aff4d3a6", "patch": "@@ -0,0 +1,4 @@\n+3c82aeab9c1596d4da8afac2eec38e429e84f3211e1a572cf8fd2b546493c44c039b922a1133eaaa48bd7f3e11dbe795a384e21ed95cbe3ecc58d7ac02246117  gmp-6.1.0.tar.bz2\n+51066066ff2c12ed2198605ecf68846b0c96b548adafa5b80e0c786d0df488411a5e8973358fce7192dc977ad4e68414cf14500e3c39746de62465eb145bb819  mpfr-3.1.4.tar.bz2\n+0028b76df130720c1fad7de937a0d041224806ce5ef76589f19c7b49d956071a683e2f20d154c192a231e69756b19e48208f2889b0c13950ceb7b3cfaf059a43  mpc-1.0.3.tar.gz\n+c188667a84dc5bdddb4ab7c35f89c91bf15a8171f4fcaf41301cf285fb7328846d9a367c096012fec4cc69d244f0bc9e95d84c09ec097394cd4093076f2a041b  isl-0.16.1.tar.bz2"}]}