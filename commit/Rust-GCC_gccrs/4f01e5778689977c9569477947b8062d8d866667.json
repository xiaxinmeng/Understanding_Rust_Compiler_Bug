{"sha": "4f01e5778689977c9569477947b8062d8d866667", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGYwMWU1Nzc4Njg5OTc3Yzk1Njk0Nzc5NDdiODA2MmQ4ZDg2NjY2Nw==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2020-01-21T17:42:36Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2020-01-21T23:58:31Z"}, "message": "analyzer: fix qsort issue with array_region keys (PR 93352)\n\nPR analyzer/93352 reports a qsort failure\n  \"comparator not anti-symmetric: -2147483648, -2147483648)\"\nwithin the analyzer on code involving an array access of [0x7fffffff + 1].\n\nThe issue is that array_region (which uses int for keys into known\nvalues in the array) uses subtraction to implement int_cmp for sorting\nthe keys, which isn't going to work for boundary values.\n\nPotentially a wider type should be used, but for now this patch fixes\nthe ICE by using explicit comparisons rather than subtraction to\nimplement the qsort callback.\n\ngcc/analyzer/ChangeLog:\n\tPR analyzer/93352\n\t* region-model.cc (int_cmp): Rename to...\n\t(array_region::key_cmp): ...this, using key_t rather than int.\n\tRewrite in terms of comparisons rather than subtraction to\n\tensure qsort is anti-symmetric when handling extreme values.\n\t(array_region::walk_for_canonicalization): Update for above\n\trenaming.\n\t* region-model.h (array_region::key_cmp): New decl.\n\ngcc/testsuite/ChangeLog:\n\tPR analyzer/93352\n\t* gcc.dg/analyzer/pr93352.c: New test.", "tree": {"sha": "ab213e6c9fc028c38992299801ee2921bae87cc1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ab213e6c9fc028c38992299801ee2921bae87cc1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4f01e5778689977c9569477947b8062d8d866667", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f01e5778689977c9569477947b8062d8d866667", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f01e5778689977c9569477947b8062d8d866667", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f01e5778689977c9569477947b8062d8d866667/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c77074d05691053ee7347d9e44ab89b3adb23fb1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c77074d05691053ee7347d9e44ab89b3adb23fb1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c77074d05691053ee7347d9e44ab89b3adb23fb1"}], "stats": {"total": 49, "additions": 42, "deletions": 7}, "files": [{"sha": "b49f43bf68845e645cad330cf89ad97d9d63d8c3", "filename": "gcc/analyzer/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f01e5778689977c9569477947b8062d8d866667/gcc%2Fanalyzer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f01e5778689977c9569477947b8062d8d866667/gcc%2Fanalyzer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2FChangeLog?ref=4f01e5778689977c9569477947b8062d8d866667", "patch": "@@ -1,3 +1,14 @@\n+2020-01-21  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/93352\n+\t* region-model.cc (int_cmp): Rename to...\n+\t(array_region::key_cmp): ...this, using key_t rather than int.\n+\tRewrite in terms of comparisons rather than subtraction to\n+\tensure qsort is anti-symmetric when handling extreme values.\n+\t(array_region::walk_for_canonicalization): Update for above\n+\trenaming.\n+\t* region-model.h (array_region::key_cmp): New decl.\n+\n 2020-01-17  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR analyzer/93290"}, {"sha": "9474c6737d54d68f5b36893903cfa6d19df0efed", "filename": "gcc/analyzer/region-model.cc", "status": "modified", "additions": 12, "deletions": 7, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f01e5778689977c9569477947b8062d8d866667/gcc%2Fanalyzer%2Fregion-model.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f01e5778689977c9569477947b8062d8d866667/gcc%2Fanalyzer%2Fregion-model.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fregion-model.cc?ref=4f01e5778689977c9569477947b8062d8d866667", "patch": "@@ -2387,15 +2387,20 @@ array_region::get_key_for_child_region (region_id child_rid, key_t *out) const\n   return false;\n }\n \n-/* qsort comparator for int.  */\n+/* qsort comparator for array_region's keys.  */\n \n-static int\n-int_cmp (const void *p1, const void *p2)\n+int\n+array_region::key_cmp (const void *p1, const void *p2)\n {\n-  int i1 = *(const int *)p1;\n-  int i2 = *(const int *)p2;\n+  key_t i1 = *(const key_t *)p1;\n+  key_t i2 = *(const key_t *)p2;\n \n-  return i1 - i2;\n+  if (i1 > i2)\n+    return 1;\n+  else if (i1 < i2)\n+    return -1;\n+  else\n+    return 0;\n }\n \n /* Implementation of region::walk_for_canonicalization vfunc for\n@@ -2412,7 +2417,7 @@ array_region::walk_for_canonicalization (canonicalization *c) const\n       int key_a = (*iter).first;\n       keys.quick_push (key_a);\n     }\n-  keys.qsort (int_cmp);\n+  keys.qsort (key_cmp);\n \n   unsigned i;\n   int key;"}, {"sha": "c9c8265e619b163bb139e9ec64df9575baebc4fb", "filename": "gcc/analyzer/region-model.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f01e5778689977c9569477947b8062d8d866667/gcc%2Fanalyzer%2Fregion-model.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f01e5778689977c9569477947b8062d8d866667/gcc%2Fanalyzer%2Fregion-model.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fregion-model.h?ref=4f01e5778689977c9569477947b8062d8d866667", "patch": "@@ -1319,6 +1319,8 @@ class array_region : public region\n   static key_t key_from_constant (tree cst);\n \n  private:\n+  static int key_cmp (const void *, const void *);\n+\n   /* Mapping from tree to child region.  */\n   map_t m_map;\n };"}, {"sha": "968145362c212e1e8030a7fa8bcbec940789e3f5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f01e5778689977c9569477947b8062d8d866667/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f01e5778689977c9569477947b8062d8d866667/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4f01e5778689977c9569477947b8062d8d866667", "patch": "@@ -1,3 +1,8 @@\n+2020-01-21  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/93352\n+\t* gcc.dg/analyzer/pr93352.c: New test.\n+\n 2020-01-22  Hans-Peter Nilsson  <hp@axis.com>\n \n \t* gcc.target/cris/asm-v8.S, gcc.target/cris/inasm-v8.c,"}, {"sha": "ccb96d0eaed656c6ee6a7d89d79bb48f1a26edef", "filename": "gcc/testsuite/gcc.dg/analyzer/pr93352.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f01e5778689977c9569477947b8062d8d866667/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fpr93352.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f01e5778689977c9569477947b8062d8d866667/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fpr93352.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fpr93352.c?ref=4f01e5778689977c9569477947b8062d8d866667", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-additional-options \"-Wno-overflow\" } */\n+\n+struct yc {\n+  int c0;\n+  char di[];\n+};\n+\n+void\n+qt (struct yc *ab)\n+{\n+  ab->di[0x7fffffff + 1] = ab->di[0];\n+}"}]}