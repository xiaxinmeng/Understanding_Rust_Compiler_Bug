{"sha": "54e86f6b4d2b10be3667d0caf6fb8ccb1c84cee1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTRlODZmNmI0ZDJiMTBiZTM2NjdkMGNhZjZmYjhjY2IxYzg0Y2VlMQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2009-07-21T15:17:23Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2009-07-21T15:17:23Z"}, "message": "re PR target/40811 (unsigned int to float isn't vectorized)\n\n\tPR target/40811\n\t* config/i386/sse.md (sse2_cvtudq2ps): New expander.\n\t(enum ix86_builtins): Add IX86_BUILTIN_CVTUDQ2PS.\n\t(builtin_description): Add __builtin_ia32_cvtudq2ps.\n\t(ix86_vectorize_builtin_conversion): Handle IX86_BUILTIN_CVTUDQ2PS.\n\ntestsuite/ChangeLog:\n\n\tPR target/40811\n\t* lib/target-supports.exp (check_effective_target_vect_uintfloat_cvt):\n\tAdd i?86 and x86_64 targets.\n\t* gcc.target/i386/vectorize7.c: New test.\n\n\tPR target/40809\n\t* gcc.target/i386/pr40809.c: New test.\n\nFrom-SVN: r149861", "tree": {"sha": "5a906c76fd7fdd811f02e83af88cbd4dddfdf2a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5a906c76fd7fdd811f02e83af88cbd4dddfdf2a2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/54e86f6b4d2b10be3667d0caf6fb8ccb1c84cee1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54e86f6b4d2b10be3667d0caf6fb8ccb1c84cee1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/54e86f6b4d2b10be3667d0caf6fb8ccb1c84cee1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54e86f6b4d2b10be3667d0caf6fb8ccb1c84cee1/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4a2b7f24116a4daf7599a9f6f64b84a6ee2b1b36", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a2b7f24116a4daf7599a9f6f64b84a6ee2b1b36", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a2b7f24116a4daf7599a9f6f64b84a6ee2b1b36"}], "stats": {"total": 102, "additions": 95, "deletions": 7}, "files": [{"sha": "369bf14b95e3a880c5afe8550f1c860312ddce68", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54e86f6b4d2b10be3667d0caf6fb8ccb1c84cee1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54e86f6b4d2b10be3667d0caf6fb8ccb1c84cee1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=54e86f6b4d2b10be3667d0caf6fb8ccb1c84cee1", "patch": "@@ -1,3 +1,11 @@\n+2009-07-21  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/40811\n+\t* config/i386/sse.md (sse2_cvtudq2ps): New expander.\n+\t(enum ix86_builtins): Add IX86_BUILTIN_CVTUDQ2PS.\n+\t(builtin_description): Add __builtin_ia32_cvtudq2ps.\n+\t(ix86_vectorize_builtin_conversion): Handle IX86_BUILTIN_CVTUDQ2PS.\n+\n 2009-07-21  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/40813"}, {"sha": "463d43ef0dc24b64c8fa1b2da719c4f4ac6be1a8", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54e86f6b4d2b10be3667d0caf6fb8ccb1c84cee1/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54e86f6b4d2b10be3667d0caf6fb8ccb1c84cee1/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=54e86f6b4d2b10be3667d0caf6fb8ccb1c84cee1", "patch": "@@ -20908,6 +20908,8 @@ enum ix86_builtins\n   IX86_BUILTIN_CPYSGNPS,\n   IX86_BUILTIN_CPYSGNPD,\n \n+  IX86_BUILTIN_CVTUDQ2PS,\n+\n   /* SSE5 instructions */\n   IX86_BUILTIN_FMADDSS,\n   IX86_BUILTIN_FMADDSD,\n@@ -21785,6 +21787,7 @@ static const struct builtin_description bdesc_args[] =\n   { OPTION_MASK_ISA_SSE2, CODE_FOR_sqrtv2df2, \"__builtin_ia32_sqrtpd\", IX86_BUILTIN_SQRTPD, UNKNOWN, (int) V2DF_FTYPE_V2DF },\n   { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_cvtdq2pd, \"__builtin_ia32_cvtdq2pd\", IX86_BUILTIN_CVTDQ2PD, UNKNOWN, (int) V2DF_FTYPE_V4SI },\n   { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_cvtdq2ps, \"__builtin_ia32_cvtdq2ps\", IX86_BUILTIN_CVTDQ2PS, UNKNOWN, (int) V4SF_FTYPE_V4SI },\n+  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_cvtudq2ps, \"__builtin_ia32_cvtudq2ps\", IX86_BUILTIN_CVTUDQ2PS, UNKNOWN, (int) V4SF_FTYPE_V4SI },\n \n   { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_cvtpd2dq, \"__builtin_ia32_cvtpd2dq\", IX86_BUILTIN_CVTPD2DQ, UNKNOWN, (int) V4SI_FTYPE_V2DF },\n   { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_cvtpd2pi, \"__builtin_ia32_cvtpd2pi\", IX86_BUILTIN_CVTPD2PI, UNKNOWN, (int) V2SI_FTYPE_V2DF },\n@@ -25962,9 +25965,7 @@ ix86_veclibabi_acml (enum built_in_function fn, tree type_out, tree type_in)\n static tree\n ix86_vectorize_builtin_conversion (unsigned int code, tree type)\n {\n-  if (TREE_CODE (type) != VECTOR_TYPE\n-      /* There are only conversions from/to signed integers.  */\n-      || TYPE_UNSIGNED (TREE_TYPE (type)))\n+  if (TREE_CODE (type) != VECTOR_TYPE)\n     return NULL_TREE;\n \n   switch (code)\n@@ -25973,7 +25974,9 @@ ix86_vectorize_builtin_conversion (unsigned int code, tree type)\n       switch (TYPE_MODE (type))\n \t{\n \tcase V4SImode:\n-\t  return ix86_builtins[IX86_BUILTIN_CVTDQ2PS];\n+\t  return TYPE_UNSIGNED (type)\n+\t    ? ix86_builtins[IX86_BUILTIN_CVTUDQ2PS]\n+\t    : ix86_builtins[IX86_BUILTIN_CVTDQ2PS];\n \tdefault:\n \t  return NULL_TREE;\n \t}\n@@ -25982,7 +25985,9 @@ ix86_vectorize_builtin_conversion (unsigned int code, tree type)\n       switch (TYPE_MODE (type))\n \t{\n \tcase V4SImode:\n-\t  return ix86_builtins[IX86_BUILTIN_CVTTPS2DQ];\n+\t  return TYPE_UNSIGNED (type)\n+\t    ? NULL_TREE\n+\t    : ix86_builtins[IX86_BUILTIN_CVTTPS2DQ];\n \tdefault:\n \t  return NULL_TREE;\n \t}"}, {"sha": "fa910a28b6bf8a11fdb4f2a804d73b16d4445ae4", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54e86f6b4d2b10be3667d0caf6fb8ccb1c84cee1/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54e86f6b4d2b10be3667d0caf6fb8ccb1c84cee1/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=54e86f6b4d2b10be3667d0caf6fb8ccb1c84cee1", "patch": "@@ -2420,6 +2420,31 @@\n   [(set_attr \"type\" \"ssecvt\")\n    (set_attr \"mode\" \"V4SF\")])\n \n+(define_expand \"sse2_cvtudq2ps\"\n+  [(set (match_dup 5)\n+\t(float:V4SF (match_operand:V4SI 1 \"nonimmediate_operand\" \"\")))\n+   (set (match_dup 6)\n+\t(lt:V4SF (match_dup 5) (match_dup 3)))\n+   (set (match_dup 7)\n+\t(and:V4SF (match_dup 6) (match_dup 4)))\n+   (set (match_operand:V4SF 0 \"register_operand\" \"\")\n+\t(plus:V4SF (match_dup 5) (match_dup 7)))]\n+  \"TARGET_SSE2\"\n+{\n+  REAL_VALUE_TYPE TWO32r;\n+  rtx x;\n+  int i;\n+\n+  real_ldexp (&TWO32r, &dconst1, 32);\n+  x = const_double_from_real_value (TWO32r, SFmode);\n+\n+  operands[3] = force_reg (V4SFmode, CONST0_RTX (V4SFmode));\n+  operands[4] = force_reg (V4SFmode, ix86_build_const_vector (SFmode, 1, x));\n+\n+  for (i = 5; i < 8; i++)\n+    operands[i] = gen_reg_rtx (V4SFmode);\n+})\n+\n (define_insn \"avx_cvtps2dq<avxmodesuffix>\"\n   [(set (match_operand:AVXMODEDCVTPS2DQ 0 \"register_operand\" \"=x\")\n \t(unspec:AVXMODEDCVTPS2DQ"}, {"sha": "525e6b228725ce275555a9bb71d6bb3d1fae766a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54e86f6b4d2b10be3667d0caf6fb8ccb1c84cee1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54e86f6b4d2b10be3667d0caf6fb8ccb1c84cee1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=54e86f6b4d2b10be3667d0caf6fb8ccb1c84cee1", "patch": "@@ -1,3 +1,13 @@\n+2009-07-21  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/40811\n+\t* lib/target-supports.exp (check_effective_target_vect_uintfloat_cvt):\n+\tAdd i?86 and x86_64 targets.\n+\t* gcc.target/i386/vectorize7.c: New test.\n+\n+\tPR target/40809\n+\t* gcc.target/i386/pr40809.c: New test.\n+\n 2009-07-21  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/40813"}, {"sha": "979b5315476733a5c1453523214873aa28749de0", "filename": "gcc/testsuite/gcc.target/i386/pr40809.c", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54e86f6b4d2b10be3667d0caf6fb8ccb1c84cee1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr40809.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54e86f6b4d2b10be3667d0caf6fb8ccb1c84cee1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr40809.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr40809.c?ref=54e86f6b4d2b10be3667d0caf6fb8ccb1c84cee1", "patch": "@@ -0,0 +1,23 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O2 -ftree-vectorize -msse2\" } */\n+\n+#include \"sse2-check.h\"\n+\n+#define N 8\n+\n+unsigned int u4[N] = { 4000000000u, 4000000000u, 4000000000u, 4000000000u, 4000000000u, 4000000000u, 4000000000u, 4000000000u };\n+float f4[N];\n+\n+static void\n+sse2_test (void)\n+{\n+  int j;\n+\n+  for (j = 0; j < N; j++)\n+    f4[j] = u4[j];\n+\n+  /* check results:  */\n+  for (j = 0; j < N; j++)\n+    if (f4[j] != 4000000000.0)\n+      abort ();\n+}"}, {"sha": "10b7ba27868abdf11ac446de884519f5382231ab", "filename": "gcc/testsuite/gcc.target/i386/vectorize7.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54e86f6b4d2b10be3667d0caf6fb8ccb1c84cee1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fvectorize7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54e86f6b4d2b10be3667d0caf6fb8ccb1c84cee1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fvectorize7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fvectorize7.c?ref=54e86f6b4d2b10be3667d0caf6fb8ccb1c84cee1", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -ftree-vectorize -msse2\" } */\n+\n+unsigned int a[256];\n+float b[256];\n+\n+void foo(void)\n+{\n+  int i;\n+\n+  for (i=0; i<256; ++i)\n+    b[i] = a[i];\n+}\n+\n+/* { dg-final { scan-assembler \"cvtdq2ps\" } } */"}, {"sha": "d9ec39167f6252fa54f9268fe39d8c8170ec8060", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54e86f6b4d2b10be3667d0caf6fb8ccb1c84cee1/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54e86f6b4d2b10be3667d0caf6fb8ccb1c84cee1/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=54e86f6b4d2b10be3667d0caf6fb8ccb1c84cee1", "patch": "@@ -1399,8 +1399,10 @@ proc check_effective_target_vect_uintfloat_cvt { } {\n         verbose \"check_effective_target_vect_uintfloat_cvt: using cached result\" 2\n     } else {\n         set et_vect_uintfloat_cvt_saved 0\n-        if { ([istarget powerpc*-*-*]\n-\t      && ![istarget powerpc-*-linux*paired*]) } {\n+        if { [istarget i?86-*-*]\n+\t      || ([istarget powerpc*-*-*]\n+\t\t  && ![istarget powerpc-*-linux*paired*])\n+\t      || [istarget x86_64-*-*] } {\n            set et_vect_uintfloat_cvt_saved 1\n         }\n     }"}]}