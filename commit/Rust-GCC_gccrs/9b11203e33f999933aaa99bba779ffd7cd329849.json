{"sha": "9b11203e33f999933aaa99bba779ffd7cd329849", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWIxMTIwM2UzM2Y5OTk5MzNhYWE5OWJiYTc3OWZmZDdjZDMyOTg0OQ==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-10-02T12:12:06Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-11-06T15:54:26Z"}, "message": "Add -fbit-tests option.\n\ngcc/ChangeLog:\n\n\t* common.opt: Add new -fbit-tests option.\n\t* doc/invoke.texi: Document the option.\n\t* tree-switch-conversion.c (bit_test_cluster::find_bit_tests):\n\tUse the option.\n\t* tree-switch-conversion.h (is_enabled): New function.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.dg/tree-ssa/switch-4.c: New test.", "tree": {"sha": "9548666f7f0212fc2d34759af7ae0ff2ea21e730", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9548666f7f0212fc2d34759af7ae0ff2ea21e730"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9b11203e33f999933aaa99bba779ffd7cd329849", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b11203e33f999933aaa99bba779ffd7cd329849", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b11203e33f999933aaa99bba779ffd7cd329849", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b11203e33f999933aaa99bba779ffd7cd329849/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d398949230786a4d678677fab0070ad779cc1c84", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d398949230786a4d678677fab0070ad779cc1c84", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d398949230786a4d678677fab0070ad779cc1c84"}], "stats": {"total": 46, "additions": 45, "deletions": 1}, "files": [{"sha": "7d0e0d9c88a8a7b1f233cdbb422c2f7f38c67525", "filename": "gcc/common.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b11203e33f999933aaa99bba779ffd7cd329849/gcc%2Fcommon.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b11203e33f999933aaa99bba779ffd7cd329849/gcc%2Fcommon.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon.opt?ref=9b11203e33f999933aaa99bba779ffd7cd329849", "patch": "@@ -1940,6 +1940,10 @@ fjump-tables\n Common Var(flag_jump_tables) Init(1) Optimization\n Use jump tables for sufficiently large switch statements.\n \n+fbit-tests\n+Common Var(flag_bit_tests) Init(1) Optimization\n+Use bit tests for sufficiently large switch statements.\n+\n fkeep-inline-functions\n Common Report Var(flag_keep_inline_functions)\n Generate code for functions even if they are fully inlined."}, {"sha": "271373c381bfc6b0630a55324448b5382e36ae68", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b11203e33f999933aaa99bba779ffd7cd329849/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b11203e33f999933aaa99bba779ffd7cd329849/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=9b11203e33f999933aaa99bba779ffd7cd329849", "patch": "@@ -638,7 +638,7 @@ Objective-C and Objective-C++ Dialects}.\n -fno-gnu-unique @gol\n -finhibit-size-directive  -fcommon  -fno-ident @gol\n -fpcc-struct-return  -fpic  -fPIC  -fpie  -fPIE  -fno-plt @gol\n--fno-jump-tables @gol\n+-fno-jump-tables -fno-bit-tests @gol\n -frecord-gcc-switches @gol\n -freg-struct-return  -fshort-enums  -fshort-wchar @gol\n -fverbose-asm  -fpack-struct[=@var{n}]  @gol\n@@ -15989,6 +15989,12 @@ building code that forms part of a dynamic linker and cannot\n reference the address of a jump table.  On some targets, jump tables\n do not require a GOT and this option is not needed.\n \n+@item -fno-bit-tests\n+@opindex fno-bit-tests\n+@opindex fbit-tests\n+Do not use bit tests for switch statements even where it would be\n+more efficient than other code generation strategies.\n+\n @item -ffixed-@var{reg}\n @opindex ffixed\n Treat the register named @var{reg} as a fixed register; generated code"}, {"sha": "5953ef34e9b5eb1da5f2cc5d9cb67050a6741870", "filename": "gcc/testsuite/gcc.dg/tree-ssa/switch-4.c", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b11203e33f999933aaa99bba779ffd7cd329849/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fswitch-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b11203e33f999933aaa99bba779ffd7cd329849/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fswitch-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fswitch-4.c?ref=9b11203e33f999933aaa99bba779ffd7cd329849", "patch": "@@ -0,0 +1,25 @@\n+/* { dg-do compile { target { { x86_64-*-* aarch64-*-* ia64-*-* powerpc64-*-* } && lp64 } } } */\n+/* { dg-options \"-O2 -fno-bit-tests -fdump-tree-switchlower1\" } */\n+\n+int global;\n+\n+int foo (int x)\n+{\n+  switch (x) {\n+    case 0:\n+    case 10:\n+      return 1;\n+    case 20:\n+    case 30:\n+    case 62:\n+      return 2;\n+    case 1000:\n+    case 1010:\n+    case 1025 ... 1030:\n+      return 1;\n+    default:\n+      return 0;\n+  }\n+}\n+\n+/* { dg-final { scan-tree-dump-not \"BT:\" \"switchlower1\" } } */"}, {"sha": "426462e856bebea5646d4ae804b726ac1e846606", "filename": "gcc/tree-switch-conversion.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b11203e33f999933aaa99bba779ffd7cd329849/gcc%2Ftree-switch-conversion.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b11203e33f999933aaa99bba779ffd7cd329849/gcc%2Ftree-switch-conversion.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-switch-conversion.c?ref=9b11203e33f999933aaa99bba779ffd7cd329849", "patch": "@@ -1310,6 +1310,9 @@ jump_table_cluster::is_beneficial (const vec<cluster *> &,\n vec<cluster *>\n bit_test_cluster::find_bit_tests (vec<cluster *> &clusters)\n {\n+  if (!is_enabled ())\n+    return clusters.copy ();\n+\n   unsigned l = clusters.length ();\n   auto_vec<min_cluster_item> min;\n   min.reserve (l + 1);"}, {"sha": "7515e952eb361c855df686795f302c30b342b763", "filename": "gcc/tree-switch-conversion.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b11203e33f999933aaa99bba779ffd7cd329849/gcc%2Ftree-switch-conversion.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b11203e33f999933aaa99bba779ffd7cd329849/gcc%2Ftree-switch-conversion.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-switch-conversion.h?ref=9b11203e33f999933aaa99bba779ffd7cd329849", "patch": "@@ -411,6 +411,12 @@ class bit_test_cluster: public group_cluster\n \t\t\t\t\t\t    basic_block case_bb,\n \t\t\t\t\t\t    profile_probability prob);\n \n+  /* Return whether bit test expansion is allowed.  */\n+  static inline bool is_enabled (void)\n+  {\n+    return flag_bit_tests;\n+  }\n+\n   /* True when the jump table handles an entire switch statement.  */\n   bool m_handles_entire_switch;\n "}]}