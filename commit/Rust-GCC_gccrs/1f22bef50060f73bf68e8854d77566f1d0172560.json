{"sha": "1f22bef50060f73bf68e8854d77566f1d0172560", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWYyMmJlZjUwMDYwZjczYmY2OGU4ODU0ZDc3NTY2ZjFkMDE3MjU2MA==", "commit": {"author": {"name": "Oleg Endo", "email": "olegendo@gcc.gnu.org", "date": "2015-01-25T16:41:25Z"}, "committer": {"name": "Oleg Endo", "email": "olegendo@gcc.gnu.org", "date": "2015-01-25T16:41:25Z"}, "message": "re PR target/54236 ([SH] Improve addc and subc insn utilization)\n\ngcc/testsuite/\n\tPR target/54236\n\t* gcc.target/sh/pr54236-4.c: New.\n\nFrom-SVN: r220093", "tree": {"sha": "e4112727047a8c78eabfb1adcfdee988909fc47c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e4112727047a8c78eabfb1adcfdee988909fc47c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1f22bef50060f73bf68e8854d77566f1d0172560", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f22bef50060f73bf68e8854d77566f1d0172560", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f22bef50060f73bf68e8854d77566f1d0172560", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f22bef50060f73bf68e8854d77566f1d0172560/comments", "author": null, "committer": null, "parents": [{"sha": "5b4f3384905374596f49592e27cb1d278d839491", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b4f3384905374596f49592e27cb1d278d839491", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5b4f3384905374596f49592e27cb1d278d839491"}], "stats": {"total": 75, "additions": 75, "deletions": 0}, "files": [{"sha": "d1677593f246773dbc32a48bfc1d45fce48130e9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f22bef50060f73bf68e8854d77566f1d0172560/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f22bef50060f73bf68e8854d77566f1d0172560/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1f22bef50060f73bf68e8854d77566f1d0172560", "patch": "@@ -1,3 +1,8 @@\n+2015-01-25  Oleg Endo  <olegendo@gcc.gnu.org>\n+\n+\tPR target/54236\n+\t* gcc.target/sh/pr54236-4.c: New.\n+\n 2015-01-24  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* gcc.target/i386/builtin_target.c (check_intel_cpu_model): Add"}, {"sha": "dce413e18bbe1fdcc64f728eb1e8993f062cc3f7", "filename": "gcc/testsuite/gcc.target/sh/pr54236-4.c", "status": "added", "additions": 70, "deletions": 0, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f22bef50060f73bf68e8854d77566f1d0172560/gcc%2Ftestsuite%2Fgcc.target%2Fsh%2Fpr54236-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f22bef50060f73bf68e8854d77566f1d0172560/gcc%2Ftestsuite%2Fgcc.target%2Fsh%2Fpr54236-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fsh%2Fpr54236-4.c?ref=1f22bef50060f73bf68e8854d77566f1d0172560", "patch": "@@ -0,0 +1,70 @@\n+/* Check that addc and subc patterns are converted if the T value is\n+   inverted.  */\n+/* { dg-do compile }  */\n+/* { dg-options \"-O2\" }  */\n+/* { dg-skip-if \"\" { \"sh*-*-*\" } { \"-m5*\"} { \"\" } }  */\n+/* { dg-final { scan-assembler-times \"cmp/eq\" 7 } }  */\n+\n+/* { dg-final { scan-assembler-times \"subc\" 5 { target { ! sh2a } } } }  */\n+/* { dg-final { scan-assembler-times \"not\\t\" 3 { target { ! sh2a } } } }  */\n+/* { dg-final { scan-assembler-times \"addc\" 2 { target { ! sh2a } } } }  */\n+\n+/* { dg-final { scan-assembler-times \"subc\" 2 { target { sh2a } } } }  */\n+/* { dg-final { scan-assembler-times \"addc\" 5 { target { sh2a } } } }  */\n+/* { dg-final { scan-assembler-times \"nott\" 3 { target { sh2a } } } }  */\n+\n+/* { dg-final { scan-assembler-not \"movt\" } }  */\n+/* { dg-final { scan-assembler-not \"negc\" } }  */\n+/* { dg-final { scan-assembler-not \"movrt\" } }  */\n+\n+int\n+test_0 (int a, int b, int c)\n+{\n+  /* 1x cmp/eq, 1x subc  */\n+  return c + (a != b);\n+}\n+\n+int\n+test_1 (int a, int b, int c, int d)\n+{\n+  /* 1x cmp/eq, 1x not, 1x subc\n+     SH2A: 1x cmp/eq, 1x nott, 1x addc  */\n+  return (a != b) + c + d;\n+}\n+\n+int\n+test_2 (int a, int b, int c, int d)\n+{\n+  /* 1x cmp/eq, 1x not, 1x subc\n+     SH2A: 1x cmp/eq, 1x nott, 1x addc  */\n+  return c + (a != b) + d;\n+}\n+\n+int\n+test_3 (int a, int b, int c, int d)\n+{\n+  /* 1x cmp/eq, 1x not, 1x subc\n+     SH2A: 1x cmp/eq, 1x nott, 1x addc  */\n+  return c + d + (a != b);\n+}\n+\n+int\n+test_4 (int a, int b, int c, int d)\n+{\n+  /* 1x cmp/eq, 1x subc  */\n+  return (a != b) - c;\n+}\n+\n+int\n+test_5 (int a, int b, int c, int d)\n+{\n+  /* 1x cmp/eq, 1x add #-1, 1x addc  */\n+  return c - (a != b);\n+}\n+\n+int\n+test_6 (int a, int b, int c, int d)\n+{\n+  /* 1x cmp/eq, 1x add #-1, 1x addc  */\n+  return c - (a != b) + d;\n+}"}]}