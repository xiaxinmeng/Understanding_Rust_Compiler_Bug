{"sha": "ef759fd121558455cd45d15e3bcf5e66279d6251", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWY3NTlmZDEyMTU1ODQ1NWNkNDVkMTVlM2JjZjVlNjYyNzlkNjI1MQ==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@linux.ibm.com", "date": "2019-12-17T22:16:40Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "2019-12-17T22:16:40Z"}, "message": "Use PLI to load up 32-bit SImode constants if -mcpu=future.\n\n2019-12-17  Michael Meissner  <meissner@linux.ibm.com>\n\n\t* config/rs6000/rs6000.md (movsi_internal1): Add alternative to\n\tuse PLI to load up 32-bit constants if -mcpu=future.\n\nFrom-SVN: r279475", "tree": {"sha": "cfad2a1ecf8a16859f58cd97f79a5164540da827", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cfad2a1ecf8a16859f58cd97f79a5164540da827"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ef759fd121558455cd45d15e3bcf5e66279d6251", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef759fd121558455cd45d15e3bcf5e66279d6251", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef759fd121558455cd45d15e3bcf5e66279d6251", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef759fd121558455cd45d15e3bcf5e66279d6251/comments", "author": null, "committer": null, "parents": [{"sha": "a50e038893fe801178f71f09bda01910df50394e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a50e038893fe801178f71f09bda01910df50394e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a50e038893fe801178f71f09bda01910df50394e"}], "stats": {"total": 18, "additions": 10, "deletions": 8}, "files": [{"sha": "f8b3ef2231872eec37cf869452a03b806a2d8bde", "filename": "gcc/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef759fd121558455cd45d15e3bcf5e66279d6251/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef759fd121558455cd45d15e3bcf5e66279d6251/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ef759fd121558455cd45d15e3bcf5e66279d6251", "patch": "@@ -4,6 +4,8 @@\n \tconstant can be loaded with PLI if -mcpu=future.\n \t* config/rs6000/rs6000.md (movdi_internal64): Add alternative to\n \tuse PLI to load up 34-bit constants if -mcpu=future.\n+\t(movsi_internal1): Add alternative to use PLI to load up 32-bit\n+\tconstants if -mcpu=future.\n \n 2019-12-17  Jakub Jelinek  <jakub@redhat.com>\n "}, {"sha": "6e12d62e23a6b34f574c4349a2c5999be4789ec9", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef759fd121558455cd45d15e3bcf5e66279d6251/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef759fd121558455cd45d15e3bcf5e66279d6251/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=ef759fd121558455cd45d15e3bcf5e66279d6251", "patch": "@@ -6892,7 +6892,7 @@\n ;;\t   MR          LA\n ;;\t   LWZ         LFIWZX      LXSIWZX\n ;;\t   STW         STFIWX      STXSIWX\n-;;\t   LI          LIS         #\n+;;\t   LI          LIS         PLI         #\n ;;\t   XXLOR       XXSPLTIB 0  XXSPLTIB -1 VSPLTISW\n ;;\t   XXLXOR 0    XXLORC -1   P9 const\n ;;\t   MTVSRWZ     MFVSRWZ\n@@ -6903,7 +6903,7 @@\n \t  \"=r,         r,\n \t   r,          d,          v,\n \t   m,          Z,          Z,\n-\t   r,          r,          r,\n+\t   r,          r,          r,          r,\n \t   wa,         wa,         wa,         v,\n \t   wa,         v,          v,\n \t   wa,         r,\n@@ -6912,7 +6912,7 @@\n \t  \"r,          U,\n \t   m,          Z,          Z,\n \t   r,          d,          v,\n-\t   I,          L,          n,\n+\t   I,          L,          eI,         n,\n \t   wa,         O,          wM,         wB,\n \t   O,          wM,         wS,\n \t   r,          wa,\n@@ -6930,6 +6930,7 @@\n    stxsiwx %x1,%y0\n    li %0,%1\n    lis %0,%v1\n+   li %0,%1\n    #\n    xxlor %x0,%x1,%x1\n    xxspltib %x0,0\n@@ -6947,7 +6948,7 @@\n \t  \"*,          *,\n \t   load,       fpload,     fpload,\n \t   store,      fpstore,    fpstore,\n-\t   *,          *,          *,\n+\t   *,          *,          *,          *,\n \t   veclogical, vecsimple,  vecsimple,  vecsimple,\n \t   veclogical, veclogical, vecsimple,\n \t   mffgpr,     mftgpr,\n@@ -6956,7 +6957,7 @@\n \t  \"*,          *,\n \t   *,          *,          *,\n \t   *,          *,          *,\n-\t   *,          *,          8,\n+\t   *,          *,          *,          8,\n \t   *,          *,          *,          *,\n \t   *,          *,          8,\n \t   *,          *,\n@@ -6965,7 +6966,7 @@\n \t  \"*,          *,\n \t   *,          p8v,        p8v,\n \t   *,          p8v,        p8v,\n-\t   *,          *,          *,\n+\t   *,          *,          fut,        *,\n \t   p8v,        p9v,        p9v,        p8v,\n \t   p9v,        p8v,        p9v,\n \t   p8v,        p8v,\n@@ -7120,8 +7121,7 @@\n (define_split\n   [(set (match_operand:SI 0 \"gpc_reg_operand\")\n \t(match_operand:SI 1 \"const_int_operand\"))]\n-  \"(unsigned HOST_WIDE_INT) (INTVAL (operands[1]) + 0x8000) >= 0x10000\n-   && (INTVAL (operands[1]) & 0xffff) != 0\"\n+  \"num_insns_constant (operands[1], SImode) > 1\"\n   [(set (match_dup 0)\n \t(match_dup 2))\n    (set (match_dup 0)"}]}