{"sha": "ba0cfa1700ccede16632595e36f783e24cb65e1a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmEwY2ZhMTcwMGNjZWRlMTY2MzI1OTVlMzZmNzgzZTI0Y2I2NWUxYQ==", "commit": {"author": {"name": "James Greenhalgh", "email": "james.greenhalgh@arm.com", "date": "2014-05-16T09:03:19Z"}, "committer": {"name": "James Greenhalgh", "email": "jgreenhalgh@gcc.gnu.org", "date": "2014-05-16T09:03:19Z"}, "message": "[AArch64 costs 11/18] Improve costs for rotate and shift operations.\n\n\t* config/aarch64/aarch64.c (aarch64_rtx_costs): Improve costs for\n\trotates and shifts.\n\n\nCo-Authored-By: Philipp Tomsich <philipp.tomsich@theobroma-systems.com>\n\nFrom-SVN: r210503", "tree": {"sha": "8ad9e1dd69424fcfccdd21f460bdc53468639ae2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8ad9e1dd69424fcfccdd21f460bdc53468639ae2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ba0cfa1700ccede16632595e36f783e24cb65e1a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba0cfa1700ccede16632595e36f783e24cb65e1a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba0cfa1700ccede16632595e36f783e24cb65e1a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba0cfa1700ccede16632595e36f783e24cb65e1a/comments", "author": {"login": "jgreenhalgh-arm", "id": 6104025, "node_id": "MDQ6VXNlcjYxMDQwMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6104025?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jgreenhalgh-arm", "html_url": "https://github.com/jgreenhalgh-arm", "followers_url": "https://api.github.com/users/jgreenhalgh-arm/followers", "following_url": "https://api.github.com/users/jgreenhalgh-arm/following{/other_user}", "gists_url": "https://api.github.com/users/jgreenhalgh-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jgreenhalgh-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jgreenhalgh-arm/subscriptions", "organizations_url": "https://api.github.com/users/jgreenhalgh-arm/orgs", "repos_url": "https://api.github.com/users/jgreenhalgh-arm/repos", "events_url": "https://api.github.com/users/jgreenhalgh-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/jgreenhalgh-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b1685e6274a141a05050c9734b974732a5019f4a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1685e6274a141a05050c9734b974732a5019f4a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1685e6274a141a05050c9734b974732a5019f4a"}], "stats": {"total": 62, "additions": 53, "deletions": 9}, "files": [{"sha": "a31e4a3a1dd2c72a0e1a6e0239cdc3de2d3c0dad", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba0cfa1700ccede16632595e36f783e24cb65e1a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba0cfa1700ccede16632595e36f783e24cb65e1a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ba0cfa1700ccede16632595e36f783e24cb65e1a", "patch": "@@ -1,3 +1,9 @@\n+2014-05-16  James Greenhalgh  <james.greenhalgh@arm.com>\n+\t    Philipp Tomsich  <philipp.tomsich@theobroma-systems.com>\n+\n+\t* config/aarch64/aarch64.c (aarch64_rtx_costs): Improve costs for\n+\trotates and shifts.\n+\n 2014-05-16  James Greenhalgh  <james.greenhalgh@arm.com>\n \t    Philipp Tomsich  <philipp.tomsich@theobroma-systems.com>\n "}, {"sha": "34084a913237d24f4025cfb524783469159fad62", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 47, "deletions": 9, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba0cfa1700ccede16632595e36f783e24cb65e1a/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba0cfa1700ccede16632595e36f783e24cb65e1a/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=ba0cfa1700ccede16632595e36f783e24cb65e1a", "patch": "@@ -5339,21 +5339,59 @@ aarch64_rtx_costs (rtx x, int code, int outer ATTRIBUTE_UNUSED,\n \t*cost += extra_cost->alu.extend;\n       return false;\n \n+    case ASHIFT:\n+      op0 = XEXP (x, 0);\n+      op1 = XEXP (x, 1);\n+\n+      if (CONST_INT_P (op1))\n+        {\n+\t  /* LSL (immediate), UBMF, UBFIZ and friends.  These are all\n+\t     aliases.  */\n+\t  if (speed)\n+\t    *cost += extra_cost->alu.shift;\n+\n+          /* We can incorporate zero/sign extend for free.  */\n+          if (GET_CODE (op0) == ZERO_EXTEND\n+              || GET_CODE (op0) == SIGN_EXTEND)\n+            op0 = XEXP (op0, 0);\n+\n+          *cost += rtx_cost (op0, ASHIFT, 0, speed);\n+          return true;\n+        }\n+      else\n+        {\n+\t  /* LSLV.  */\n+\t  if (speed)\n+\t    *cost += extra_cost->alu.shift_reg;\n+\n+\t  return false;  /* All arguments need to be in registers.  */\n+        }\n+\n     case ROTATE:\n-      if (!CONST_INT_P (XEXP (x, 1)))\n-\t*cost += COSTS_N_INSNS (2);\n-      /* Fall through.  */\n     case ROTATERT:\n     case LSHIFTRT:\n-    case ASHIFT:\n     case ASHIFTRT:\n+      op0 = XEXP (x, 0);\n+      op1 = XEXP (x, 1);\n \n-      /* Shifting by a register often takes an extra cycle.  */\n-      if (speed && !CONST_INT_P (XEXP (x, 1)))\n-\t*cost += extra_cost->alu.arith_shift_reg;\n+      if (CONST_INT_P (op1))\n+\t{\n+\t  /* ASR (immediate) and friends.  */\n+\t  if (speed)\n+\t    *cost += extra_cost->alu.shift;\n \n-      *cost += rtx_cost (XEXP (x, 0), ASHIFT, 0, speed);\n-      return true;\n+\t  *cost += rtx_cost (op0, (enum rtx_code) code, 0, speed);\n+\t  return true;\n+\t}\n+      else\n+\t{\n+\n+\t  /* ASR (register) and friends.  */\n+\t  if (speed)\n+\t    *cost += extra_cost->alu.shift_reg;\n+\n+\t  return false;  /* All arguments need to be in registers.  */\n+\t}\n \n     case HIGH:\n       if (!CONSTANT_P (XEXP (x, 0)))"}]}