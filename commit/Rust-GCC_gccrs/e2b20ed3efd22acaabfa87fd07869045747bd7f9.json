{"sha": "e2b20ed3efd22acaabfa87fd07869045747bd7f9", "node_id": "C_kwDOANBUbNoAKGUyYjIwZWQzZWZkMjJhY2FhYmZhODdmZDA3ODY5MDQ1NzQ3YmQ3Zjk", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2023-02-24T00:17:09Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2023-02-24T00:17:09Z"}, "message": "Daily bump.", "tree": {"sha": "cc4006eb828c459872067b592bc88a35390985c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cc4006eb828c459872067b592bc88a35390985c4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e2b20ed3efd22acaabfa87fd07869045747bd7f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2b20ed3efd22acaabfa87fd07869045747bd7f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e2b20ed3efd22acaabfa87fd07869045747bd7f9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2b20ed3efd22acaabfa87fd07869045747bd7f9/comments", "author": null, "committer": null, "parents": [{"sha": "34fca8f3e05a0160902c9edf2c197b1f434bd76d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34fca8f3e05a0160902c9edf2c197b1f434bd76d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/34fca8f3e05a0160902c9edf2c197b1f434bd76d"}], "stats": {"total": 191, "additions": 190, "deletions": 1}, "files": [{"sha": "c9e9927dc9f751c4a41b2fc34080d5441c79c5bb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2b20ed3efd22acaabfa87fd07869045747bd7f9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2b20ed3efd22acaabfa87fd07869045747bd7f9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e2b20ed3efd22acaabfa87fd07869045747bd7f9", "patch": "@@ -1,3 +1,114 @@\n+2023-02-23  Max Filippov  <jcmvbkbc@gmail.com>\n+\n+\t* config/xtensa/xtensa-dynconfig.cc (config.h, system.h)\n+\t(coretypes.h, diagnostic.h, intl.h): Use \"...\" instead of <...>\n+\tfor the gcc-internal headers.\n+\n+2023-02-23  Max Filippov  <jcmvbkbc@gmail.com>\n+\n+\t* config/xtensa/t-xtensa (xtensa-dynconfig.o): Use $(COMPILE)\n+\tand $(POSTCOMPILE) instead of manual dependency listing.\n+\t* config/xtensa/xtensa-dynconfig.c: Rename to ...\n+\t* config/xtensa/xtensa-dynconfig.cc: ... this.\n+\n+2023-02-23  Arsen Arsenovi\u0107  <arsen@aarsen.me>\n+\n+\t* doc/cfg.texi: Reorder index entries around @items.\n+\t* doc/cpp.texi: Ditto.\n+\t* doc/cppenv.texi: Ditto.\n+\t* doc/cppopts.texi: Ditto.\n+\t* doc/generic.texi: Ditto.\n+\t* doc/install.texi: Ditto.\n+\t* doc/extend.texi: Ditto.\n+\t* doc/invoke.texi: Ditto.\n+\t* doc/md.texi: Ditto.\n+\t* doc/rtl.texi: Ditto.\n+\t* doc/tm.texi.in: Ditto.\n+\t* doc/trouble.texi: Ditto.\n+\t* doc/tm.texi: Regenerate.\n+\n+2023-02-23  Takayuki 'January June' Suwa  <jjsuwa_sys3175@yahoo.co.jp>\n+\n+\t* config/xtensa/xtensa.md: New peephole2 pattern that eliminates\n+\tthe occurrence of general-purpose register used only once and for\n+\ttransferring intermediate value.\n+\n+2023-02-23  Takayuki 'January June' Suwa  <jjsuwa_sys3175@yahoo.co.jp>\n+\n+\t* config/xtensa/xtensa.cc (machine_function): Add new member\n+\t'eliminated_callee_saved_bmp'.\n+\t(xtensa_can_eliminate_callee_saved_reg_p): New function to\n+\tdetermine whether the register can be eliminated or not.\n+\t(xtensa_expand_prologue): Add invoking the above function and\n+\telimination the use of callee-saved register by using its stack\n+\tslot through the stack pointer (or the frame pointer if needed)\n+\tdirectly.\n+\t(xtensa_expand_prologue): Modify to not emit register restoration\n+\tinsn from its stack slot if the register is already eliminated.\n+\n+2023-02-23  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR translation/108890\n+\t* config/xtensa/xtensa-dynconfig.c (xtensa_load_config): Drop _()s\n+\taround fatal_error format strings.\n+\n+2023-02-23  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-ssa-structalias.cc (handle_lhs_call): Do not\n+\tre-create rhsc, only truncate it.\n+\n+2023-02-23  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/106258\n+\t* ipa-prop.cc (try_make_edge_direct_virtual_call): Handle\n+\tBUILT_IN_UNREACHABLE_TRAP like BUILT_IN_UNREACHABLE.\n+\n+2023-02-23  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-if-conv.cc (tree_if_conversion): Properly manage\n+\tmemory of refs and the contained data references.\n+\n+2023-02-23  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/108888\n+\t* tree-if-conv.cc (if_convertible_stmt_p): Set PLF_2 on\n+\tcalls to predicate.\n+\t(predicate_statements): Only predicate calls with PLF_2.\n+\n+2023-02-23  Takayuki 'January June' Suwa  <jjsuwa_sys3175@yahoo.co.jp>\n+\n+\t* config/xtensa/xtensa.md\n+\t(zero_cost_loop_start, zero_cost_loop_end, loop_end):\n+\tAdd missing \"SI:\" to PLUS RTXes.\n+\n+2023-02-23  Max Filippov  <jcmvbkbc@gmail.com>\n+\n+\tPR target/108876\n+\t* config/xtensa/xtensa.cc (xtensa_expand_epilogue):\n+\tEmit (use (reg:SI A0_REG)) at the end in the sibling call\n+\t(i.e. the same place as (return) in the normal call).\n+\n+2023-02-23  Max Filippov  <jcmvbkbc@gmail.com>\n+\n+\tRevert:\n+\t2023-02-21  Max Filippov  <jcmvbkbc@gmail.com>\n+\n+\tPR target/108876\n+\t* config/xtensa/xtensa.cc (xtensa_expand_epilogue): Drop emit_use\n+\tfor A0_REG.\n+\t* config/xtensa/xtensa.md (sibcall, sibcall_internal)\n+\t(sibcall_value, sibcall_value_internal): Add 'use' expression\n+\tfor A0_REG.\n+\n+2023-02-23  Arsen Arsenovi\u0107  <arsen@aarsen.me>\n+\n+\t* doc/cppdiropts.texi: Reorder @opindex commands to precede\n+\t@items they relate to.\n+\t* doc/cppopts.texi: Ditto.\n+\t* doc/cppwarnopts.texi: Ditto.\n+\t* doc/invoke.texi: Ditto.\n+\t* doc/lto.texi: Ditto.\n+\n 2023-02-22  Andrew Stubbs  <ams@codesourcery.com>\n \n \t* internal-fn.cc (expand_MASK_CALL): New."}, {"sha": "fb96f27d1825a884fe2146520b6447648ed0abe7", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2b20ed3efd22acaabfa87fd07869045747bd7f9/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2b20ed3efd22acaabfa87fd07869045747bd7f9/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=e2b20ed3efd22acaabfa87fd07869045747bd7f9", "patch": "@@ -1 +1 @@\n-20230223\n+20230224"}, {"sha": "b417f75a2008ae5a740327aded0e4bfdd65ae18d", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2b20ed3efd22acaabfa87fd07869045747bd7f9/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2b20ed3efd22acaabfa87fd07869045747bd7f9/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=e2b20ed3efd22acaabfa87fd07869045747bd7f9", "patch": "@@ -1,3 +1,8 @@\n+2023-02-23  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR translation/108890\n+\t* c.opt (fcontracts): Fix description.\n+\n 2023-02-22  Marek Polacek  <polacek@redhat.com>\n \n \tPR c/108880"}, {"sha": "c9e63fe0a846d2ec92e0bfbcea307ee6f5bc4151", "filename": "gcc/d/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2b20ed3efd22acaabfa87fd07869045747bd7f9/gcc%2Fd%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2b20ed3efd22acaabfa87fd07869045747bd7f9/gcc%2Fd%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2FChangeLog?ref=e2b20ed3efd22acaabfa87fd07869045747bd7f9", "patch": "@@ -1,3 +1,12 @@\n+2023-02-23  Arsen Arsenovi\u0107  <arsen@aarsen.me>\n+\n+\t* implement-d.texi: Reorder index entries around @items.\n+\n+2023-02-23  Arsen Arsenovi\u0107  <arsen@aarsen.me>\n+\n+\t* gdc.texi: Reorder @opindex commands to precede @items they\n+\trelate to.\n+\n 2023-02-21  Iain Buclaw  <ibuclaw@gdcproject.org>\n \n \t* Make-lang.in (D_FRONTEND_OBJS): Add d/location.o."}, {"sha": "d8cf19c6af0de57fa85594a55e916a6161ca90e5", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2b20ed3efd22acaabfa87fd07869045747bd7f9/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2b20ed3efd22acaabfa87fd07869045747bd7f9/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=e2b20ed3efd22acaabfa87fd07869045747bd7f9", "patch": "@@ -1,3 +1,12 @@\n+2023-02-23  Arsen Arsenovi\u0107  <arsen@aarsen.me>\n+\n+\t* invoke.texi: Reorder index entries around @items.\n+\n+2023-02-23  Arsen Arsenovi\u0107  <arsen@aarsen.me>\n+\n+\t* invoke.texi: Reorder @opindex commands to precede @items they\n+\trelate to.\n+\n 2023-02-22  Harald Anlauf  <anlauf@gmx.de>\n \n \tPR fortran/96024"}, {"sha": "e091babba9682d36b2f4bae38d4d8b4fb2b20f3a", "filename": "gcc/go/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2b20ed3efd22acaabfa87fd07869045747bd7f9/gcc%2Fgo%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2b20ed3efd22acaabfa87fd07869045747bd7f9/gcc%2Fgo%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2FChangeLog?ref=e2b20ed3efd22acaabfa87fd07869045747bd7f9", "patch": "@@ -1,3 +1,7 @@\n+2023-02-23  Arsen Arsenovi\u0107  <arsen@aarsen.me>\n+\n+\t* gccgo.texi: Reorder index entries around @items.\n+\n 2023-01-17  Ian Lance Taylor  <iant@golang.org>\n \n \tPR go/108426"}, {"sha": "b7e53a8698e52db30fe0b9053212cfbd0a29da4a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2b20ed3efd22acaabfa87fd07869045747bd7f9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2b20ed3efd22acaabfa87fd07869045747bd7f9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e2b20ed3efd22acaabfa87fd07869045747bd7f9", "patch": "@@ -1,3 +1,23 @@\n+2023-02-23  Takayuki 'January June' Suwa  <jjsuwa_sys3175@yahoo.co.jp>\n+\n+\t* gcc.target/xtensa/elim_GP_regmove_0.c: New test.\n+\t* gcc.target/xtensa/elim_GP_regmove_1.c: New test.\n+\n+2023-02-23  Takayuki 'January June' Suwa  <jjsuwa_sys3175@yahoo.co.jp>\n+\n+\t* gcc.target/xtensa/elim_callee_saved.c: New.\n+\n+2023-02-23  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR testsuite/108899\n+\t* g++.dg/modules/modules.exp: Only override unsupported if it\n+\texists and saved-unsupported doesn't.\n+\n+2023-02-23  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/108888\n+\t* g++.dg/torture/pr108888.C: New testcase.\n+\n 2023-02-22  Marek Polacek  <polacek@redhat.com>\n \n \tPR c/108880"}, {"sha": "461e04aff4a92e8f9de13798982612850cf2a755", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2b20ed3efd22acaabfa87fd07869045747bd7f9/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2b20ed3efd22acaabfa87fd07869045747bd7f9/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=e2b20ed3efd22acaabfa87fd07869045747bd7f9", "patch": "@@ -1,3 +1,34 @@\n+2023-02-23  Matthias Kretz  <m.kretz@gsi.de>\n+\n+\t* testsuite/experimental/simd/tests/reductions.cc: Introduce\n+\tmax_distance as the type-dependent max error.\n+\n+2023-02-23  Matthias Kretz  <m.kretz@gsi.de>\n+\n+\t* include/experimental/bits/simd_builtin.h (_S_set): Compare as\n+\tint. The actual range of these indexes is very small.\n+\n+2023-02-23  Matthias Kretz  <m.kretz@gsi.de>\n+\n+\t* include/experimental/bits/simd_x86.h (_S_bit_shift_left)\n+\t(_S_bit_shift_right): Declare constexpr. The implementation was\n+\talready expecting constexpr evaluation.\n+\n+2023-02-23  Matthias Kretz  <m.kretz@gsi.de>\n+\n+\tPR libstdc++/108030\n+\t* include/experimental/bits/simd_detail.h\n+\t(_GLIBCXX_SIMD_ALWAYS_INLINE_LAMBDA): Define as empty for\n+\t__clang__.\n+\n+2023-02-23  Matthias Kretz  <m.kretz@gsi.de>\n+\n+\tPR libstdc++/108030\n+\t* include/experimental/bits/simd.h (__vector_broadcast):\n+\tImplement via __vector_broadcast_impl instead of\n+\t__call_with_n_evaluations + 2 lambdas.\n+\t(__vector_broadcast_impl): New.\n+\n 2023-02-22  Alexandre Oliva  <oliva@adacore.com>\n \n \t* src/c++11/shared_ptr.cc (__gnu_internal::get_mutex):"}]}