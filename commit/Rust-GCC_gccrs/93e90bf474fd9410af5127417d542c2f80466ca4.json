{"sha": "93e90bf474fd9410af5127417d542c2f80466ca4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTNlOTBiZjQ3NGZkOTQxMGFmNTEyNzQxN2Q1NDJjMmY4MDQ2NmNhNA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2016-04-20T09:04:48Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2016-04-20T09:04:48Z"}, "message": "[multiple changes]\n\n2016-04-20  Gary Dismukes  <dismukes@adacore.com>\n\n\t* par_sco.adb, sem_util.adb, sem_ch13.adb: Minor typo corrections and\n\treformatting.\n\n2016-04-20  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_prag.adb (Analyze_Pragma, case Default_Storage_Pool):\n\tIf the pragma comes from an aspect specification, verify that\n\tthe aspect applies to an entity with a declarative part.\n\t* exp_ch5.adb: Code cleanup.\n\n2016-04-20  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_res.adb (Resolve_If_Expression): If first expression is\n\tuniversal, resolve subsequent ones with the corresponding class\n\ttype (Any_Integer or Any_Real).\n\n2016-04-20  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch5.adb (Analyze_Iterator_Specification): If expansion is\n\tdisabled, complete the analysis of the iterator name to ensure\n\tthat reference for entities within are properly generated.\n\n2016-04-20  Arnaud Charlet  <charlet@adacore.com>\n\n\t* a-dispat.ads (Yield): add Global contract.\n\t* a-calend.ads, a-reatim.ads: Added Initializes => Clock_Time.\n\t* a-taside.adb: Added Initializes => Tasking_State.\n\nFrom-SVN: r235240", "tree": {"sha": "8616898e3b7ad3f24b04d88a28933b1d1f8286c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8616898e3b7ad3f24b04d88a28933b1d1f8286c7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/93e90bf474fd9410af5127417d542c2f80466ca4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93e90bf474fd9410af5127417d542c2f80466ca4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/93e90bf474fd9410af5127417d542c2f80466ca4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93e90bf474fd9410af5127417d542c2f80466ca4/comments", "author": null, "committer": null, "parents": [{"sha": "ae3d8837bd4e64b3e0ffc43b2b997248ed5c66e2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae3d8837bd4e64b3e0ffc43b2b997248ed5c66e2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae3d8837bd4e64b3e0ffc43b2b997248ed5c66e2"}], "stats": {"total": 96, "additions": 77, "deletions": 19}, "files": [{"sha": "75201ec493e10021fa3ce242f5eb4c86bc6d4b95", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93e90bf474fd9410af5127417d542c2f80466ca4/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93e90bf474fd9410af5127417d542c2f80466ca4/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=93e90bf474fd9410af5127417d542c2f80466ca4", "patch": "@@ -1,3 +1,33 @@\n+2016-04-20  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* par_sco.adb, sem_util.adb, sem_ch13.adb: Minor typo corrections and\n+\treformatting.\n+\n+2016-04-20  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_prag.adb (Analyze_Pragma, case Default_Storage_Pool):\n+\tIf the pragma comes from an aspect specification, verify that\n+\tthe aspect applies to an entity with a declarative part.\n+\t* exp_ch5.adb: Code cleanup.\n+\n+2016-04-20  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_res.adb (Resolve_If_Expression): If first expression is\n+\tuniversal, resolve subsequent ones with the corresponding class\n+\ttype (Any_Integer or Any_Real).\n+\n+2016-04-20  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch5.adb (Analyze_Iterator_Specification): If expansion is\n+\tdisabled, complete the analysis of the iterator name to ensure\n+\tthat reference for entities within are properly generated.\n+\n+2016-04-20  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* a-dispat.ads (Yield): add Global contract.\n+\t* a-calend.ads, a-reatim.ads: Added Initializes => Clock_Time.\n+\t* a-taside.adb: Added Initializes => Tasking_State.\n+\n 2016-04-20  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* sem_ch13.adb (Build_Invariant_Procedure):"}, {"sha": "39e9c33c13fe8b99a91e595a9e79a10d740bceb6", "filename": "gcc/ada/a-calend.ads", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93e90bf474fd9410af5127417d542c2f80466ca4/gcc%2Fada%2Fa-calend.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93e90bf474fd9410af5127417d542c2f80466ca4/gcc%2Fada%2Fa-calend.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-calend.ads?ref=93e90bf474fd9410af5127417d542c2f80466ca4", "patch": "@@ -37,7 +37,8 @@ package Ada.Calendar with\n   SPARK_Mode,\n   Abstract_State => (Clock_Time with Synchronous,\n                                      External => (Async_Readers,\n-                                                  Async_Writers))\n+                                                  Async_Writers)),\n+  Initializes    => Clock_Time\n is\n \n    type Time is private;"}, {"sha": "b4e4d036b117f9de0ca0b344fe31c55e478f5ca9", "filename": "gcc/ada/a-dispat.ads", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93e90bf474fd9410af5127417d542c2f80466ca4/gcc%2Fada%2Fa-dispat.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93e90bf474fd9410af5127417d542c2f80466ca4/gcc%2Fada%2Fa-dispat.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-dispat.ads?ref=93e90bf474fd9410af5127417d542c2f80466ca4", "patch": "@@ -16,7 +16,8 @@\n package Ada.Dispatching is\n    pragma Preelaborate (Dispatching);\n \n-   procedure Yield;\n+   procedure Yield with\n+     Global => null;\n \n    Dispatching_Policy_Error : exception;\n end Ada.Dispatching;"}, {"sha": "cb84859df63c50df9e5dc5d0288c512c8a58aba7", "filename": "gcc/ada/a-reatim.ads", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93e90bf474fd9410af5127417d542c2f80466ca4/gcc%2Fada%2Fa-reatim.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93e90bf474fd9410af5127417d542c2f80466ca4/gcc%2Fada%2Fa-reatim.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-reatim.ads?ref=93e90bf474fd9410af5127417d542c2f80466ca4", "patch": "@@ -40,7 +40,8 @@ package Ada.Real_Time with\n   SPARK_Mode,\n   Abstract_State => (Clock_Time with Synchronous,\n                                      External => (Async_Readers,\n-                                                  Async_Writers))\n+                                                  Async_Writers)),\n+  Initializes    => Clock_Time\n is\n \n    pragma Compile_Time_Error"}, {"sha": "72467bf66d35ab32842aaa99b9f9d9d516e9b9a6", "filename": "gcc/ada/a-taside.ads", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93e90bf474fd9410af5127417d542c2f80466ca4/gcc%2Fada%2Fa-taside.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93e90bf474fd9410af5127417d542c2f80466ca4/gcc%2Fada%2Fa-taside.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-taside.ads?ref=93e90bf474fd9410af5127417d542c2f80466ca4", "patch": "@@ -40,7 +40,8 @@ package Ada.Task_Identification with\n   SPARK_Mode,\n   Abstract_State => (Tasking_State with Synchronous,\n                                         External => (Async_Readers,\n-                                                     Async_Writers))\n+                                                     Async_Writers)),\n+  Initializes    => Tasking_State\n is\n    pragma Preelaborate;\n    --  In accordance with Ada 2005 AI-362"}, {"sha": "d7a0d9ed6f20d4e1fc1753d50a63340a045de9d8", "filename": "gcc/ada/exp_ch5.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93e90bf474fd9410af5127417d542c2f80466ca4/gcc%2Fada%2Fexp_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93e90bf474fd9410af5127417d542c2f80466ca4/gcc%2Fada%2Fexp_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch5.adb?ref=93e90bf474fd9410af5127417d542c2f80466ca4", "patch": "@@ -1696,7 +1696,7 @@ package body Exp_Ch5 is\n             --  subprogram. In restricted profiles this is not available.\n \n             if Nkind (Ent) = N_Function_Call\n-              and then RTE_Available (RE_Get_Ceiling)\n+              and then not Configurable_Run_Time_Mode\n               and then (Entity (Name (Ent)) = RTE (RE_Get_Ceiling)\n                           or else\n                         Entity (Name (Ent)) = RTE (RO_PE_Get_Ceiling))"}, {"sha": "d10e1d2ae6d845ea0bdd6edf00ab38d39a46d4c6", "filename": "gcc/ada/par_sco.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93e90bf474fd9410af5127417d542c2f80466ca4/gcc%2Fada%2Fpar_sco.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93e90bf474fd9410af5127417d542c2f80466ca4/gcc%2Fada%2Fpar_sco.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar_sco.adb?ref=93e90bf474fd9410af5127417d542c2f80466ca4", "patch": "@@ -2797,7 +2797,7 @@ package body Par_SCO is\n                   when others =>\n                      if T.C2 = '?' then\n \n-                        --  This in not a logical operator: start looking for\n+                        --  This is not a logical operator: start looking for\n                         --  nested decisions from here. Recurse over the left\n                         --  child and let the loop take care of the right one.\n \n@@ -2849,7 +2849,7 @@ package body Par_SCO is\n                   when others =>\n                      if T.C2 = '?' and then Process_Nested_Decisions then\n \n-                        --  This in not a logical operator: start looking for\n+                        --  This is not a logical operator: start looking for\n                         --  nested decisions from here. Recurse over the left\n                         --  child and let the loop take care of the right one.\n "}, {"sha": "aa929bd442892b69bf061f2fd239805d214a1293", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93e90bf474fd9410af5127417d542c2f80466ca4/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93e90bf474fd9410af5127417d542c2f80466ca4/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=93e90bf474fd9410af5127417d542c2f80466ca4", "patch": "@@ -8336,7 +8336,7 @@ package body Sem_Ch13 is\n                  Statements => Stmts));\n \n          --  The processing of an invariant pragma immediately generates the\n-         --  invariant procedure spec, inserts it into the tree and analyzes\n+         --  invariant procedure spec, inserts it into the tree, and analyzes\n          --  it. If the spec has not been analyzed, then the invariant pragma\n          --  is being inherited and requires manual insertion and analysis.\n \n@@ -8362,9 +8362,9 @@ package body Sem_Ch13 is\n             end if;\n \n          --  Otherwise there are no private declarations. This is either an\n-         --  error or the related type is a private extension in which case\n+         --  error or the related type is a private extension, in which case\n          --  it does not need a completion in a private part. Insert the body\n-         --  and the end of the visible declarations and analyze immediately\n+         --  at the end of the visible declarations and analyze immediately\n          --  because the related type is about to be frozen.\n \n          else"}, {"sha": "64b05ff95020075e415a960a3d9ee87b7380f20e", "filename": "gcc/ada/sem_ch5.adb", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93e90bf474fd9410af5127417d542c2f80466ca4/gcc%2Fada%2Fsem_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93e90bf474fd9410af5127417d542c2f80466ca4/gcc%2Fada%2Fsem_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch5.adb?ref=93e90bf474fd9410af5127417d542c2f80466ca4", "patch": "@@ -1925,11 +1925,12 @@ package body Sem_Ch5 is\n \n         --  Do not perform this expansion in SPARK mode, since the formal\n         --  verification directly deals with the source form of the iterator.\n-        --  Ditto for ASIS, where the temporary may hide the transformation\n-        --  of a selected component into a prefixed function call.\n+        --  Ditto for ASIS and when expansion is disabled,, where the temporary\n+        --  may hide the transformation of a selected component into a prefixed\n+        --  function call, and references need to see the original expression.\n \n         and then not GNATprove_Mode\n-        and then not ASIS_Mode\n+        and then Expander_Active\n       then\n          declare\n             Id    : constant Entity_Id := Make_Temporary (Loc, 'R', Iter_Name);\n@@ -2016,7 +2017,7 @@ package body Sem_Ch5 is\n       --  Iterate is not a reserved name. What matters is that the return type\n       --  of the function is an iterator type.\n \n-      elsif Is_Entity_Name (Iter_Name) then\n+      elsif Is_Entity_Name (Iter_Name) or else not Expander_Active then\n          Analyze (Iter_Name);\n \n          if Nkind (Iter_Name) = N_Function_Call then\n@@ -2266,9 +2267,11 @@ package body Sem_Ch5 is\n             --  If that object is a selected component, verify that it is not\n             --  a component of an unconstrained mutable object.\n \n-            if Nkind (Iter_Name) = N_Identifier then\n+            if Nkind (Iter_Name) = N_Identifier\n+              or else (not Expander_Active and Comes_From_Source (Iter_Name))\n+            then\n                declare\n-                  Orig_Node : constant Node_Id := Original_Node (Iter_Name);\n+                  Orig_Node : constant Node_Id   := Original_Node (Iter_Name);\n                   Iter_Kind : constant Node_Kind := Nkind (Orig_Node);\n                   Obj       : Node_Id;\n "}, {"sha": "22daf491148f26e966b493738d1ced3510303e68", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93e90bf474fd9410af5127417d542c2f80466ca4/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93e90bf474fd9410af5127417d542c2f80466ca4/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=93e90bf474fd9410af5127417d542c2f80466ca4", "patch": "@@ -13582,6 +13582,17 @@ package body Sem_Prag is\n                Check_Is_In_Decl_Part_Or_Package_Spec;\n             end if;\n \n+            if From_Aspect_Specification (N) then\n+               declare\n+                  E : constant Entity_Id := Entity (Corresponding_Aspect (N));\n+               begin\n+                  if not In_Open_Scopes (E) then\n+                     Error_Msg_N\n+                       (\"aspect must apply to package or subprogram\", N);\n+                  end if;\n+               end;\n+            end if;\n+\n             if Present (Arg1) then\n                Pool := Get_Pragma_Arg (Arg1);\n "}, {"sha": "e8495c79eefa935d8c5fc25e4b789756f22f84ec", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93e90bf474fd9410af5127417d542c2f80466ca4/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93e90bf474fd9410af5127417d542c2f80466ca4/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=93e90bf474fd9410af5127417d542c2f80466ca4", "patch": "@@ -8048,9 +8048,19 @@ package body Sem_Res is\n       end if;\n \n       --  If ELSE expression present, just resolve using the determined type\n+      --  If type is universal, resolve to any member of the class.\n \n       if Present (Else_Expr) then\n-         Resolve (Else_Expr, Typ);\n+         if Typ = Universal_Integer then\n+            Resolve (Else_Expr, Any_Integer);\n+\n+         elsif Typ = Universal_Real then\n+            Resolve (Else_Expr, Any_Real);\n+\n+         else\n+            Resolve (Else_Expr, Typ);\n+         end if;\n+\n          Else_Typ := Etype (Else_Expr);\n \n          if Is_Scalar_Type (Else_Typ) and then Else_Typ /= Typ then"}, {"sha": "e9e16ae4add19fbb7facdfdc455706a0f72433e5", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93e90bf474fd9410af5127417d542c2f80466ca4/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93e90bf474fd9410af5127417d542c2f80466ca4/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=93e90bf474fd9410af5127417d542c2f80466ca4", "patch": "@@ -1664,8 +1664,8 @@ package body Sem_Util is\n \n       --  See if we need elaboration entity.\n \n-      --  We always need an elaboration entity when preserving control-flow, as\n-      --  we want to remain explicit about the units elaboration order.\n+      --  We always need an elaboration entity when preserving control flow, as\n+      --  we want to remain explicit about the unit's elaboration order.\n \n       elsif Opt.Suppress_Control_Flow_Optimizations then\n          null;"}]}