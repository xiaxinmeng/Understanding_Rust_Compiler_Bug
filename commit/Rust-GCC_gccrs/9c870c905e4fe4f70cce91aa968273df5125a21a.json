{"sha": "9c870c905e4fe4f70cce91aa968273df5125a21a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWM4NzBjOTA1ZTRmZTRmNzBjY2U5MWFhOTY4MjczZGY1MTI1YTIxYQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-10-11T09:30:15Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-10-11T09:30:15Z"}, "message": "[multiple changes]\n\n2010-10-11  Gary Dismukes  <dismukes@adacore.com>\n\n\t* sem_disp.adb (Check_Dispatching_Operation): Revise test for warning\n\tabout nondispatching subprograms to use In_Same_List (reducing use of\n\tParent links).\n\n2010-10-11  Ed Schonberg  <schonberg@adacore.com>\n\n\t* xr_tabls.adb, sem_res.adb, lib-xref.adb, lib-xref.ads: Use s for\n\treference in a static call.\n\n2010-10-11  Steve Baird  <baird@adacore.com>\n\n\t* exp_attr.adb (Expand_N_Attribute_Reference, case Type_Key): Type_Key\n\tattribute should always be transformed into a string literal in\n\tAnalyze_Attribute.\n\t* par-ch4.adb: Type_Key attribute's type is String; update value of\n\tIs_Parameterless_Attribute constant to reflect this.\n\t* sem_attr.adb (Analyze_Attribute): Recognize Type_Key attribute and\n\trewrite it as a string literal (attribute value is always known\n\tstatically).\n\t* snames.ads-tmpl: Add entries for Type_Key attribute.\n\nFrom-SVN: r165285", "tree": {"sha": "26a4d32040c308a032852eb697b536ea2afef248", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/26a4d32040c308a032852eb697b536ea2afef248"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9c870c905e4fe4f70cce91aa968273df5125a21a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c870c905e4fe4f70cce91aa968273df5125a21a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9c870c905e4fe4f70cce91aa968273df5125a21a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c870c905e4fe4f70cce91aa968273df5125a21a/comments", "author": null, "committer": null, "parents": [{"sha": "21a5b575cfbb5cb2395cbd0689c718fa76f7c686", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21a5b575cfbb5cb2395cbd0689c718fa76f7c686", "html_url": "https://github.com/Rust-GCC/gccrs/commit/21a5b575cfbb5cb2395cbd0689c718fa76f7c686"}], "stats": {"total": 94, "additions": 84, "deletions": 10}, "files": [{"sha": "0d2b6bed060c948f643e304ac61796d511de002a", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c870c905e4fe4f70cce91aa968273df5125a21a/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c870c905e4fe4f70cce91aa968273df5125a21a/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=9c870c905e4fe4f70cce91aa968273df5125a21a", "patch": "@@ -1,3 +1,26 @@\n+2010-10-11  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* sem_disp.adb (Check_Dispatching_Operation): Revise test for warning\n+\tabout nondispatching subprograms to use In_Same_List (reducing use of\n+\tParent links).\n+\n+2010-10-11  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* xr_tabls.adb, sem_res.adb, lib-xref.adb, lib-xref.ads: Use s for\n+\treference in a static call.\n+\n+2010-10-11  Steve Baird  <baird@adacore.com>\n+\n+\t* exp_attr.adb (Expand_N_Attribute_Reference, case Type_Key): Type_Key\n+\tattribute should always be transformed into a string literal in\n+\tAnalyze_Attribute.\n+\t* par-ch4.adb: Type_Key attribute's type is String; update value of\n+\tIs_Parameterless_Attribute constant to reflect this.\n+\t* sem_attr.adb (Analyze_Attribute): Recognize Type_Key attribute and\n+\trewrite it as a string literal (attribute value is always known\n+\tstatically).\n+\t* snames.ads-tmpl: Add entries for Type_Key attribute.\n+\n 2010-10-11  Ed Schonberg  <schonberg@adacore.com>\n \n \t* lib-xref.adb (Output_References): Common handling for objects and"}, {"sha": "18864c06dfb12bd0e86df3e1d4671d511bf22614", "filename": "gcc/ada/exp_attr.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c870c905e4fe4f70cce91aa968273df5125a21a/gcc%2Fada%2Fexp_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c870c905e4fe4f70cce91aa968273df5125a21a/gcc%2Fada%2Fexp_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_attr.adb?ref=9c870c905e4fe4f70cce91aa968273df5125a21a", "patch": "@@ -5355,6 +5355,7 @@ package body Exp_Attr is\n            Attribute_Stub_Type                    |\n            Attribute_Target_Name                  |\n            Attribute_Type_Class                   |\n+           Attribute_Type_Key                     |\n            Attribute_Unconstrained_Array          |\n            Attribute_Universal_Literal_String     |\n            Attribute_Wchar_T_Size                 |"}, {"sha": "02af70c23b525c1d39670e8562a9aa099f738f7e", "filename": "gcc/ada/lib-xref.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c870c905e4fe4f70cce91aa968273df5125a21a/gcc%2Fada%2Flib-xref.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c870c905e4fe4f70cce91aa968273df5125a21a/gcc%2Fada%2Flib-xref.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-xref.adb?ref=9c870c905e4fe4f70cce91aa968273df5125a21a", "patch": "@@ -470,7 +470,7 @@ package body Lib.Xref is\n         and then Is_Ada_2005_Only (E)\n         and then Ada_Version < Ada_2005\n         and then Warn_On_Ada_2005_Compatibility\n-        and then (Typ = 'm' or else Typ = 'r')\n+        and then (Typ = 'm' or else Typ = 'r' or else Typ = 's')\n       then\n          Error_Msg_NE (\"& is only defined in Ada 2005?\", N, E);\n       end if;"}, {"sha": "d14e163e9f9e840fa53bc72a1271771676c8366e", "filename": "gcc/ada/lib-xref.ads", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c870c905e4fe4f70cce91aa968273df5125a21a/gcc%2Fada%2Flib-xref.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c870c905e4fe4f70cce91aa968273df5125a21a/gcc%2Fada%2Flib-xref.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-xref.ads?ref=9c870c905e4fe4f70cce91aa968273df5125a21a", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1998-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1998-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -183,6 +183,7 @@ package Lib.Xref is\n    --              P = overriding primitive operation\n    --              r = reference\n    --              R = subprogram reference in dispatching call\n+   --              s = subprogram reference in a static call\n    --              t = end of body\n    --              w = WITH line\n    --              x = type extension\n@@ -296,6 +297,9 @@ package Lib.Xref is\n    --           the specification of the primitive operation of the root\n    --           type when the call has a controlling argument in its class.\n \n+   --           s is used to mark a static subprogram call. The reference is\n+   --           to the specification of the subprogram being called.\n+\n    --           t is similar to e. It identifies the end of a corresponding\n    --           body (such a reference always links up with a b reference)\n "}, {"sha": "bcffe80979eee9d3bd81b24740c6efec452f431c", "filename": "gcc/ada/par-ch4.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c870c905e4fe4f70cce91aa968273df5125a21a/gcc%2Fada%2Fpar-ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c870c905e4fe4f70cce91aa968273df5125a21a/gcc%2Fada%2Fpar-ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch4.adb?ref=9c870c905e4fe4f70cce91aa968273df5125a21a", "patch": "@@ -42,6 +42,7 @@ package body Ch4 is\n       Attribute_Base         => True,\n       Attribute_Class        => True,\n       Attribute_Stub_Type    => True,\n+      Attribute_Type_Key     => True,\n       others                 => False);\n    --  This map contains True for parameterless attributes that return a\n    --  string or a type. For those attributes, a left parenthesis after"}, {"sha": "7bc45571001b4f53d5df1955b698041870c52788", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c870c905e4fe4f70cce91aa968273df5125a21a/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c870c905e4fe4f70cce91aa968273df5125a21a/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=9c870c905e4fe4f70cce91aa968273df5125a21a", "patch": "@@ -4449,6 +4449,48 @@ package body Sem_Attr is\n          Check_PolyORB_Attribute;\n          Set_Etype (N, RTE (RE_TypeCode));\n \n+      --------------\n+      -- Type_Key --\n+      --------------\n+\n+      when Attribute_Type_Key =>\n+         Check_E0;\n+         Check_Type;\n+         declare\n+            function Type_Key return String;\n+            --  A very preliminary implementation.\n+            --  For now, a signature consists of only the type name.\n+            --  This is clearly incomplete (e.g., adding a new field to\n+            --  a record type should change the type's Type_Key attribute).\n+\n+            --------------\n+            -- Type_Key --\n+            --------------\n+\n+            function Type_Key return String is\n+\n+               Full_Name : constant String_Id :=\n+                 Fully_Qualified_Name_String (Entity (P));\n+\n+               Signature : String\n+                 (1 .. Integer (String_Length (Full_Name)) - 1);\n+               --  Decrement length to omit trailing NUL\n+\n+            begin\n+               for J in Signature'Range loop\n+                  Signature (J) :=\n+                    Get_Character (Get_String_Char (Full_Name, Int (J)));\n+               end loop;\n+\n+               return Signature & \"'Type_Key\";\n+            end Type_Key;\n+\n+         begin\n+            Rewrite (N, Make_String_Literal (Loc, Type_Key));\n+         end;\n+\n+         Analyze_And_Resolve (N, Standard_String);\n+\n       -----------------\n       -- UET_Address --\n       -----------------\n@@ -7596,6 +7638,7 @@ package body Sem_Attr is\n            Attribute_Target_Name              |\n            Attribute_Terminated               |\n            Attribute_To_Address               |\n+           Attribute_Type_Key                 |\n            Attribute_UET_Address              |\n            Attribute_Unchecked_Access         |\n            Attribute_Universal_Literal_String |"}, {"sha": "6205c094438a1d16d206171939dc7e8ce691b24a", "filename": "gcc/ada/sem_disp.adb", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c870c905e4fe4f70cce91aa968273df5125a21a/gcc%2Fada%2Fsem_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c870c905e4fe4f70cce91aa968273df5125a21a/gcc%2Fada%2Fsem_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_disp.adb?ref=9c870c905e4fe4f70cce91aa968273df5125a21a", "patch": "@@ -1045,14 +1045,13 @@ package body Sem_Disp is\n          --  case it looks suspiciously like an attempt to define a primitive\n          --  operation, which requires the declaration to be in a package spec\n          --  (3.2.3(6)). Only report cases where the type and subprogram are\n-         --  in the same declaration list (by comparing the unit nodes reached\n-         --  via Parent links), to avoid spurious warnings on subprograms in\n+         --  in the same declaration list (by checking the enclosing parent\n+         --  declarations), to avoid spurious warnings on subprograms in\n          --  instance bodies when the type is declared in the instance spec but\n          --  hasn't been frozen by the instance body.\n \n          elsif not Is_Frozen (Tagged_Type)\n-           and then\n-             Parent (Parent (Tagged_Type)) = Parent (Parent (Parent (Subp)))\n+           and then In_Same_List (Parent (Tagged_Type), Parent (Parent (Subp)))\n          then\n             Error_Msg_N\n               (\"?not dispatching (must be defined in a package spec)\", Subp);"}, {"sha": "7245b0bb4106eb8d25c944487f1f5accb1c5232e", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c870c905e4fe4f70cce91aa968273df5125a21a/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c870c905e4fe4f70cce91aa968273df5125a21a/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=9c870c905e4fe4f70cce91aa968273df5125a21a", "patch": "@@ -5527,10 +5527,10 @@ package body Sem_Res is\n       then\n          Generate_Reference (Nam, Subp, 'R');\n \n-      --  Normal case, not a dispatching call\n+      --  Normal case, not a dispatching call. Generate a call reference.\n \n       else\n-         Generate_Reference (Nam, Subp);\n+         Generate_Reference (Nam, Subp, 's');\n       end if;\n \n       if Is_Intrinsic_Subprogram (Nam) then"}, {"sha": "94e1ba27be8555d8e897f80c569ce0d2f648f8d4", "filename": "gcc/ada/snames.ads-tmpl", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c870c905e4fe4f70cce91aa968273df5125a21a/gcc%2Fada%2Fsnames.ads-tmpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c870c905e4fe4f70cce91aa968273df5125a21a/gcc%2Fada%2Fsnames.ads-tmpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.ads-tmpl?ref=9c870c905e4fe4f70cce91aa968273df5125a21a", "patch": "@@ -801,6 +801,7 @@ package Snames is\n    Name_Terminated                     : constant Name_Id := N + $;\n    Name_To_Address                     : constant Name_Id := N + $; -- GNAT\n    Name_Type_Class                     : constant Name_Id := N + $; -- GNAT\n+   Name_Type_Key                       : constant Name_Id := N + $; -- GNAT\n    Name_UET_Address                    : constant Name_Id := N + $; -- GNAT\n    Name_Unbiased_Rounding              : constant Name_Id := N + $;\n    Name_Unchecked_Access               : constant Name_Id := N + $;\n@@ -1316,6 +1317,7 @@ package Snames is\n       Attribute_Terminated,\n       Attribute_To_Address,\n       Attribute_Type_Class,\n+      Attribute_Type_Key,\n       Attribute_UET_Address,\n       Attribute_Unbiased_Rounding,\n       Attribute_Unchecked_Access,"}, {"sha": "29021aa3e2825eee54340dff9cef3f8718e13a12", "filename": "gcc/ada/xr_tabls.adb", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c870c905e4fe4f70cce91aa968273df5125a21a/gcc%2Fada%2Fxr_tabls.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c870c905e4fe4f70cce91aa968273df5125a21a/gcc%2Fada%2Fxr_tabls.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fxr_tabls.adb?ref=9c870c905e4fe4f70cce91aa968273df5125a21a", "patch": "@@ -395,7 +395,8 @@ package body Xr_Tabls is\n \n    begin\n       case Ref_Type is\n-         when 'b' | 'c' | 'H' | 'm' | 'o' | 'r' | 'R' | 'i' | ' ' | 'x' =>\n+         when 'b' | 'c' | 'H' | 'm' | 'o' | 'r' | 'R' |\n+              's' | 'i' | ' ' | 'x' =>\n             null;\n \n          when 'l' | 'w' =>\n@@ -463,7 +464,7 @@ package body Xr_Tabls is\n             New_Ref.Next          := Declaration.Body_Ref;\n             Declaration.Body_Ref  := New_Ref;\n \n-         when 'r' | 'R' | 'H' | 'i' | 'l' | 'o' | ' ' | 'x' | 'w' =>\n+         when 'r' | 'R' | 's' | 'H' | 'i' | 'l' | 'o' | ' ' | 'x' | 'w' =>\n             New_Ref.Next          := Declaration.Ref_Ref;\n             Declaration.Ref_Ref   := New_Ref;\n "}]}