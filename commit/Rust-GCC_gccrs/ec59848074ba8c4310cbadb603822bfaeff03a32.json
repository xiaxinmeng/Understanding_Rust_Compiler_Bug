{"sha": "ec59848074ba8c4310cbadb603822bfaeff03a32", "node_id": "C_kwDOANBUbNoAKGVjNTk4NDgwNzRiYThjNDMxMGNiYWRiNjAzODIyYmZhZWZmMDNhMzI", "commit": {"author": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2022-11-16T13:53:51Z"}, "committer": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2022-11-16T13:53:51Z"}, "message": "libstdc++: Fix stream initialization with static library [PR107701]\n\nWhen linking with a static library, the linker seems to discard a\nconstituent .o object (including its global initializers) if nothing\ndefined in the object is referenced by the program (unless e.g.\n--whole-archive is used).  This behavior breaks iostream with static\nlibstdc++.a (on systems that support init priorities) because we define\nthe global initializer for the standard stream objects in a separate TU\n(ios_init.cc) from the stream object definitions (globals_io.cc).\n\nThis patch fixes this by moving the stream initialization object into\nthe same TU that defines the stream objects, so that any use of the\nstreams prevents the linker from discarding this global initializer.\n\n\tPR libstdc++/107701\n\nlibstdc++-v3/ChangeLog:\n\n\t* include/std/iostream (__ioinit): Adjust comment.\n\t* src/c++98/globals_io.cc: Include \"io_base_init.h\" here\n\tinstead of ...\n\t* src/c++98/ios_init.cc: ... here.\n\t* src/c++98/ios_base_init.h (__ioinit): More comments.\n\t* testsuite/17_intro/static.cc: dg-do run instead of just link.", "tree": {"sha": "137b51eb3c81cb951f57c7665fb74c2712c756fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/137b51eb3c81cb951f57c7665fb74c2712c756fc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ec59848074ba8c4310cbadb603822bfaeff03a32", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec59848074ba8c4310cbadb603822bfaeff03a32", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec59848074ba8c4310cbadb603822bfaeff03a32", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec59848074ba8c4310cbadb603822bfaeff03a32/comments", "author": null, "committer": null, "parents": [{"sha": "c5e8c6c193d9a1ab80ef1a05e5158ddf35d54009", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5e8c6c193d9a1ab80ef1a05e5158ddf35d54009", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c5e8c6c193d9a1ab80ef1a05e5158ddf35d54009"}], "stats": {"total": 9, "additions": 5, "deletions": 4}, "files": [{"sha": "0c62e9aeb7f3b6e02cf406625cfdfa0d0306c911", "filename": "libstdc++-v3/include/std/iostream", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec59848074ba8c4310cbadb603822bfaeff03a32/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fiostream", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec59848074ba8c4310cbadb603822bfaeff03a32/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fiostream", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fiostream?ref=ec59848074ba8c4310cbadb603822bfaeff03a32", "patch": "@@ -74,7 +74,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   // For construction of filebuffers for cout, cin, cerr, clog et. al.\n   // When the init_priority attribute is usable, we do this initialization\n-  // in the compiled library instead (src/c++98/ios_init.cc).\n+  // in the compiled library instead (src/c++98/globals_io.cc).\n #if !__has_attribute(__init_priority__)\n   static ios_base::Init __ioinit;\n #endif"}, {"sha": "bfd808b5bbdd4121659db2eac46120f61f28fb25", "filename": "libstdc++-v3/src/c++98/globals_io.cc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec59848074ba8c4310cbadb603822bfaeff03a32/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fglobals_io.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec59848074ba8c4310cbadb603822bfaeff03a32/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fglobals_io.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fglobals_io.cc?ref=ec59848074ba8c4310cbadb603822bfaeff03a32", "patch": "@@ -69,6 +69,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   fake_wostream wclog;\n #endif\n \n+#include \"ios_base_init.h\"\n+\n _GLIBCXX_END_NAMESPACE_VERSION\n } // namespace\n "}, {"sha": "b600ec3298e45f252a8231a087be911a4aaefc66", "filename": "libstdc++-v3/src/c++98/ios_base_init.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec59848074ba8c4310cbadb603822bfaeff03a32/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fios_base_init.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec59848074ba8c4310cbadb603822bfaeff03a32/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fios_base_init.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fios_base_init.h?ref=ec59848074ba8c4310cbadb603822bfaeff03a32", "patch": "@@ -7,6 +7,7 @@\n // sufficiently early (so that it happens before any other global\n // constructor when statically linking with libstdc++.a), instead of\n // doing so in (each TU that includes) <iostream>.\n+// This needs to be done in the same TU that defines the stream objects.\n #if __has_attribute(init_priority)\n static ios_base::Init __ioinit __attribute__((init_priority(90)));\n #endif"}, {"sha": "1b5132f1c2df1a09411f3a664ba617aaf7bc75f9", "filename": "libstdc++-v3/src/c++98/ios_init.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec59848074ba8c4310cbadb603822bfaeff03a32/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fios_init.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec59848074ba8c4310cbadb603822bfaeff03a32/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fios_init.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2Fios_init.cc?ref=ec59848074ba8c4310cbadb603822bfaeff03a32", "patch": "@@ -75,8 +75,6 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   extern wostream wclog;\n #endif\n \n-#include \"ios_base_init.h\"\n-\n   ios_base::Init::Init()\n   {\n     if (__gnu_cxx::__exchange_and_add_dispatch(&_S_refcount, 1) == 0)"}, {"sha": "a0d6ed081f8e4eb7a5d73bc3052884e2d463592f", "filename": "libstdc++-v3/testsuite/17_intro/static.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec59848074ba8c4310cbadb603822bfaeff03a32/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fstatic.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec59848074ba8c4310cbadb603822bfaeff03a32/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fstatic.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fstatic.cc?ref=ec59848074ba8c4310cbadb603822bfaeff03a32", "patch": "@@ -1,4 +1,4 @@\n-// { dg-do link { target c++11 } }\n+// { dg-do run { target c++11 } }\n // { dg-require-static-libstdcxx }\n // { dg-options \"-static-libstdc++\" }\n "}]}