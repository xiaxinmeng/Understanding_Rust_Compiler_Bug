{"sha": "f2738d6cf2deaae25fceafaff8012305cb9ec8ab", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjI3MzhkNmNmMmRlYWFlMjVmY2VhZmFmZjgwMTIzMDVjYjllYzhhYg==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2016-07-31T18:46:30Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2016-07-31T18:46:30Z"}, "message": "Fix non-portable std::regex test and test more cases\n\n\t* testsuite/28_regex/basic_regex/ctors/basic/raw_string.cc: Fix\n\ttest to not rely on GNU extension (escaped normal characters in POSIX\n\tBRE). Enable tests for other strings which are now supported.\n\nFrom-SVN: r238926", "tree": {"sha": "e8f7f656d6e358fcc337927b86340b041a240e4e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e8f7f656d6e358fcc337927b86340b041a240e4e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f2738d6cf2deaae25fceafaff8012305cb9ec8ab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2738d6cf2deaae25fceafaff8012305cb9ec8ab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f2738d6cf2deaae25fceafaff8012305cb9ec8ab", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2738d6cf2deaae25fceafaff8012305cb9ec8ab/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "77f3d97909062986b8e1ebb45ee0eb7f63acb05d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77f3d97909062986b8e1ebb45ee0eb7f63acb05d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/77f3d97909062986b8e1ebb45ee0eb7f63acb05d"}], "stats": {"total": 21, "additions": 17, "deletions": 4}, "files": [{"sha": "a878d1e24655d94e01a33d333278e9a21507776e", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2738d6cf2deaae25fceafaff8012305cb9ec8ab/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2738d6cf2deaae25fceafaff8012305cb9ec8ab/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=f2738d6cf2deaae25fceafaff8012305cb9ec8ab", "patch": "@@ -1,5 +1,9 @@\n 2016-07-31  Jonathan Wakely  <jwakely@redhat.com>\n \n+\t* testsuite/28_regex/basic_regex/ctors/basic/raw_string.cc: Fix\n+\ttest to not rely on GNU extension (escaped normal characters in POSIX\n+\tBRE). Enable tests for other strings which are now supported.\n+\n \t* testsuite/20_util/pair/astuple/get_neg.cc: Use effective-target\n \tc++11 instead of setting -std=gnu++14.\n "}, {"sha": "758f216b0a9642040c486bd243dd80fa843d9cda", "filename": "libstdc++-v3/testsuite/28_regex/basic_regex/ctors/basic/raw_string.cc", "status": "modified", "additions": 13, "deletions": 4, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2738d6cf2deaae25fceafaff8012305cb9ec8ab/libstdc%2B%2B-v3%2Ftestsuite%2F28_regex%2Fbasic_regex%2Fctors%2Fbasic%2Fraw_string.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2738d6cf2deaae25fceafaff8012305cb9ec8ab/libstdc%2B%2B-v3%2Ftestsuite%2F28_regex%2Fbasic_regex%2Fctors%2Fbasic%2Fraw_string.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F28_regex%2Fbasic_regex%2Fctors%2Fbasic%2Fraw_string.cc?ref=f2738d6cf2deaae25fceafaff8012305cb9ec8ab", "patch": "@@ -1,4 +1,3 @@\n-// { dg-options \"-std=gnu++11\" }\n \n // 2012-08-20  Benjamin Kosnik <bkoz@redhat.com>\n //\n@@ -31,17 +30,27 @@ test01()\n \n   // raw string literals\n \n-  //string_type sre0(R\"(\\d{3}-\\d{3}-\\d{4})\"); // expected fail\n+  string_type sre0(R\"(\\d{3}-\\d{3}-\\d{4})\");\n \n-  string_type sre1(R\"( this\\n  and new : forms\\n  )\");\n+  string_type sre1(R\"( this\n+  and new : forms\n+  )\");\n \n   string_type sre2(R\"([:num:]{3}-[:num:]{3}-[:num:]{4})\");\n \n   // 1\n-  regex_type re(R\"( this\\n  and new : forms\\n  )\", std::regex::basic);\n+  regex_type re0(R\"(\\d{3}-\\d{3}-\\d{4})\", std::regex::ECMAScript);\n+\n+  regex_type re1(R\"( this\n+  and new : forms\n+  )\", std::regex::basic);\n+\n+  regex_type re2(R\"([:num:]{3}-[:num:]{3}-[:num:]{4})\", std::regex::basic);\n \n   // 2\n+  regex_sanity_check(sre0, std::regex::ECMAScript);\n   regex_sanity_check(sre1);\n+  regex_sanity_check(sre2);\n }\n \n int main()"}]}