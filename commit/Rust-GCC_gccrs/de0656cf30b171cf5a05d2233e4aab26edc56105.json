{"sha": "de0656cf30b171cf5a05d2233e4aab26edc56105", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGUwNjU2Y2YzMGIxNzFjZjVhMDVkMjIzM2U0YWFiMjZlZGM1NjEwNQ==", "commit": {"author": {"name": "Kean Johnston", "email": "jkj@sco.com", "date": "2003-04-19T21:10:08Z"}, "committer": {"name": "Kean Johnston", "email": "jkj@gcc.gnu.org", "date": "2003-04-19T21:10:08Z"}, "message": "Part 1 of the checkins for the SCO port update.\n\nPart 1 of the checkins for the SCO port update. This is the fixinclude\nstuff.\n\nFrom-SVN: r65830", "tree": {"sha": "aadb8c3fe08180c3eafee66ff7e963515d9db34c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aadb8c3fe08180c3eafee66ff7e963515d9db34c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/de0656cf30b171cf5a05d2233e4aab26edc56105", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de0656cf30b171cf5a05d2233e4aab26edc56105", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de0656cf30b171cf5a05d2233e4aab26edc56105", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de0656cf30b171cf5a05d2233e4aab26edc56105/comments", "author": null, "committer": null, "parents": [{"sha": "7451c1559ef877317965306543fd792944044b2c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7451c1559ef877317965306543fd792944044b2c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7451c1559ef877317965306543fd792944044b2c"}], "stats": {"total": 286, "additions": 270, "deletions": 16}, "files": [{"sha": "eda3fc2b27846123a9046e9278789f2f9632dac7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de0656cf30b171cf5a05d2233e4aab26edc56105/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de0656cf30b171cf5a05d2233e4aab26edc56105/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=de0656cf30b171cf5a05d2233e4aab26edc56105", "patch": "@@ -1,3 +1,15 @@\n+2003-04-19  Kean Johnston  <jkj@sco.com>\n+\n+\t* fixinc/check.tpl: Allow user to over-ride diff program.\n+\t* fixinc/inclhack.def: Removed extraneous #ifndef SVR5.\n+\t(sco_math): Added test for SCO math header files.\n+\t(sco_regset): Added check for conflicts with ieeefp.h.\n+\t(svr4_disable_opt): Removed extraneous #ifdef SVR4.\n+\t* fixinc/fixincl.x: Regenerated\n+\t* fixinc/tests/base/math.h: Added sco_math tests.\n+\t* fixinc/tests/base/string.h: New file.\n+\t* fixinc/tests/base/sys/regset.h: New file.\n+\n 2003-04-19  Neil Booth  <neil@daikokuya.co.uk>\n \n \t* cpphash.h (struct cpp_buffer): Remove backup_to."}, {"sha": "3401cf81f9fd6eae04ee0d0d0597647451be0acc", "filename": "gcc/fixinc/check.tpl", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de0656cf30b171cf5a05d2233e4aab26edc56105/gcc%2Ffixinc%2Fcheck.tpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de0656cf30b171cf5a05d2233e4aab26edc56105/gcc%2Ffixinc%2Fcheck.tpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Fcheck.tpl?ref=de0656cf30b171cf5a05d2233e4aab26edc56105", "patch": "@@ -135,7 +135,7 @@ do\n     :\n \n   else\n-    diff -u $f ${TESTBASE}/$f >&2 || :\n+    ${DIFF:-diff} -u $f ${TESTBASE}/$f >&2 || :\n     exitok=false\n   fi\n done"}, {"sha": "5b623b964c925e07ef527ffe739732ce17c8e010", "filename": "gcc/fixinc/fixincl.x", "status": "modified", "additions": 141, "deletions": 7, "changes": 148, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de0656cf30b171cf5a05d2233e4aab26edc56105/gcc%2Ffixinc%2Ffixincl.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de0656cf30b171cf5a05d2233e4aab26edc56105/gcc%2Ffixinc%2Ffixincl.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ffixincl.x?ref=de0656cf30b171cf5a05d2233e4aab26edc56105", "patch": "@@ -5,7 +5,7 @@\n  * files which are fixed to work correctly with ANSI C and placed in a\n  * directory that GNU C will search.\n  *\n- * This file contains 149 fixup descriptions.\n+ * This file contains 152 fixup descriptions.\n  *\n  * See README for more information.\n  *\n@@ -279,19 +279,17 @@ fix = {\\n\\\n #endif\\n\\n\\n\\\n /*\\n\\\n  *  Completely replace <sys/byteorder.h>; with a file that implements gcc's\\n\\\n- *  optimized byteswapping.  Restricted to \\\"SVR4\\\" machines until either\\n\\\n- *  it is shown to be safe to replace this file always, or we get bolder ;-)\\n\\\n+ *  optimized byteswapping.\\n\\\n  */\\n\\\n fix = {\\n\\\n     hackname = AAB_svr4_replace_byteorder;\\n\\\n-#ifndef SVR5\\n\\\n     mach     = \\\"*-*-sysv4*\\\";\\n\\\n     mach     = \\\"i[34567]86-*-sysv5*\\\";\\n\\\n+    mach     = \\\"i[34567]86-*-sco3.2v5*\\\";\\n\\\n     mach     = \\\"i[34567]86-*-udk*\\\";\\n\\\n     mach     = \\\"i[34567]86-*-solaris2.[0-4]\\\";\\n\\\n     mach     = \\\"powerpcle-*-solaris2.[0-4]\\\";\\n\\\n     mach     = \\\"sparc-*-solaris2.[0-4]\\\";\\n\\\n-#endif /* SVR5 */\\n\\\n     files    = sys/byteorder.h;\\n\\\n     replace  = <<-  _EndOfHeader_\\n\\\n #ifndef _SYS_BYTEORDER_H\\n\\\n@@ -3707,6 +3705,90 @@ static const char* apzRs6000_ParamPatch[] = {\n     \"rename(const char *_old, const char *_new)\",\n     (char*)NULL };\n \n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of Sco_Math fix\n+ */\n+tSCC zSco_MathName[] =\n+     \"sco_math\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+tSCC zSco_MathList[] =\n+  \"|math.h|ansi/math.h|posix/math.h|xpg4/math.h|xpg4v2/math.h|xpg4plus/math.h|ods_30_compat/math.h|oldstyle/math.h|\";\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+#define apzSco_MathMachs (const char**)NULL\n+\n+/*\n+ *  content selection pattern - do fix if pattern found\n+ */\n+tSCC zSco_MathSelect0[] =\n+       \"inline double abs\";\n+\n+#define    SCO_MATH_TEST_CT  1\n+static tTestDesc aSco_MathTests[] = {\n+  { TT_EGREP,    zSco_MathSelect0, (regex_t*)NULL }, };\n+\n+/*\n+ *  Fix Command Arguments for Sco_Math\n+ */\n+static const char* apzSco_MathPatch[] = { \"sed\",\n+    \"-e\", \"/#define.*__fp_class(a) \\\\\\\\/i\\\\\\n\\\n+#ifndef __GNUC__\\n\",\n+    \"-e\", \"/.*__builtin_generic/a\\\\\\n\\\n+#else\\\\\\n\\\n+#define __fp_class(a) \\\\\\\\\\\\\\n\\\n+  __builtin_choose_expr(__builtin_types_compatible_p(typeof(a),long double),\\\\\\\\\\\\\\n\\\n+   __fpclassifyl(a), \\\\\\\\\\\\\\n\\\n+    __builtin_choose_expr(__builtin_types_compatible_p(typeof(a), float), \\\\\\\\\\\\\\n\\\n+      __fpclassifyf(a),__fpclassify(a)))\\\\\\n\\\n+#endif\",\n+    \"-e\", \"/extern \\\"C\\\\+\\\\+\\\"/N;/inline double abs/i\\\\\\n\\\n+#ifndef __GNUC__\\n\",\n+    \"-e\", \"/inline long double trunc/N;/inline long double trunc.*}.*extern \\\"C\\\\+\\\\+\\\"/a\\\\\\n\\\n+#endif /* ! __GNUC__ */\",\n+    (char*)NULL };\n+\n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of Sco_Regset fix\n+ */\n+tSCC zSco_RegsetName[] =\n+     \"sco_regset\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+tSCC zSco_RegsetList[] =\n+  \"|sys/regset.h|\";\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+tSCC* apzSco_RegsetMachs[] = {\n+        \"*-*-sco3.2v5*\",\n+        (const char*)NULL };\n+\n+/*\n+ *  content selection pattern - do fix if pattern found\n+ */\n+tSCC zSco_RegsetSelect0[] =\n+       \"(struct[ \\t]+.*)fpstate\";\n+\n+#define    SCO_REGSET_TEST_CT  1\n+static tTestDesc aSco_RegsetTests[] = {\n+  { TT_EGREP,    zSco_RegsetSelect0, (regex_t*)NULL }, };\n+\n+/*\n+ *  Fix Command Arguments for Sco_Regset\n+ */\n+static const char* apzSco_RegsetPatch[] = {\n+    \"format\",\n+    \"%1rsfpstate\",\n+    (char*)NULL };\n+\n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n  *  Description of Sco_Static_Func fix\n@@ -4596,6 +4678,40 @@ static const char* apzSvr4__PPatch[] = {\n #endif\",\n     (char*)NULL };\n \n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of Svr4_Disable_Opt fix\n+ */\n+tSCC zSvr4_Disable_OptName[] =\n+     \"svr4_disable_opt\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+tSCC zSvr4_Disable_OptList[] =\n+  \"|string.h|\";\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+#define apzSvr4_Disable_OptMachs (const char**)NULL\n+\n+/*\n+ *  content selection pattern - do fix if pattern found\n+ */\n+tSCC zSvr4_Disable_OptSelect0[] =\n+       \"#define.*__std_hdr_\";\n+\n+#define    SVR4_DISABLE_OPT_TEST_CT  1\n+static tTestDesc aSvr4_Disable_OptTests[] = {\n+  { TT_EGREP,    zSvr4_Disable_OptSelect0, (regex_t*)NULL }, };\n+\n+/*\n+ *  Fix Command Arguments for Svr4_Disable_Opt\n+ */\n+static const char* apzSvr4_Disable_OptPatch[] = { \"sed\",\n+    \"-e\", \"/#define.*__std_hdr_/d\",\n+    (char*)NULL };\n+\n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n  *  Description of Svr4_Getcwd fix\n@@ -5878,9 +5994,9 @@ static const char* apzX11_SprintfPatch[] = {\n  *\n  *  List of all fixes\n  */\n-#define REGEX_COUNT          161\n+#define REGEX_COUNT          164\n #define MACH_LIST_SIZE_LIMIT 261\n-#define FIX_COUNT            149\n+#define FIX_COUNT            152\n \n /*\n  *  Enumerate the fixes\n@@ -5978,6 +6094,8 @@ typedef enum {\n     RS6000_DOUBLE_FIXIDX,\n     RS6000_FCHMOD_FIXIDX,\n     RS6000_PARAM_FIXIDX,\n+    SCO_MATH_FIXIDX,\n+    SCO_REGSET_FIXIDX,\n     SCO_STATIC_FUNC_FIXIDX,\n     SCO_UTIME_FIXIDX,\n     SOLARIS_MUTEX_INIT_1_FIXIDX,\n@@ -6001,6 +6119,7 @@ typedef enum {\n     SUNOS_MATHERR_DECL_FIXIDX,\n     SUNOS_STRLEN_FIXIDX,\n     SVR4__P_FIXIDX,\n+    SVR4_DISABLE_OPT_FIXIDX,\n     SVR4_GETCWD_FIXIDX,\n     SVR4_PROFIL_FIXIDX,\n     SYSV68_STRING_FIXIDX,\n@@ -6498,6 +6617,16 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n      RS6000_PARAM_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n      aRs6000_ParamTests,   apzRs6000_ParamPatch, 0 },\n \n+  {  zSco_MathName,    zSco_MathList,\n+     apzSco_MathMachs,\n+     SCO_MATH_TEST_CT, FD_MACH_ONLY,\n+     aSco_MathTests,   apzSco_MathPatch, 0 },\n+\n+  {  zSco_RegsetName,    zSco_RegsetList,\n+     apzSco_RegsetMachs,\n+     SCO_REGSET_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n+     aSco_RegsetTests,   apzSco_RegsetPatch, 0 },\n+\n   {  zSco_Static_FuncName,    zSco_Static_FuncList,\n      apzSco_Static_FuncMachs,\n      SCO_STATIC_FUNC_TEST_CT, FD_MACH_ONLY,\n@@ -6613,6 +6742,11 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n      SVR4__P_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n      aSvr4__PTests,   apzSvr4__PPatch, 0 },\n \n+  {  zSvr4_Disable_OptName,    zSvr4_Disable_OptList,\n+     apzSvr4_Disable_OptMachs,\n+     SVR4_DISABLE_OPT_TEST_CT, FD_MACH_ONLY,\n+     aSvr4_Disable_OptTests,   apzSvr4_Disable_OptPatch, 0 },\n+\n   {  zSvr4_GetcwdName,    zSvr4_GetcwdList,\n      apzSvr4_GetcwdMachs,\n      SVR4_GETCWD_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,"}, {"sha": "ad389f535994c3e90b458f9e38d017c0b9440a24", "filename": "gcc/fixinc/inclhack.def", "status": "modified", "additions": 70, "deletions": 8, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de0656cf30b171cf5a05d2233e4aab26edc56105/gcc%2Ffixinc%2Finclhack.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de0656cf30b171cf5a05d2233e4aab26edc56105/gcc%2Ffixinc%2Finclhack.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Finclhack.def?ref=de0656cf30b171cf5a05d2233e4aab26edc56105", "patch": "@@ -222,19 +222,17 @@ fix = {\n \n /*\n  *  Completely replace <sys/byteorder.h>; with a file that implements gcc's\n- *  optimized byteswapping.  Restricted to \"SVR4\" machines until either\n- *  it is shown to be safe to replace this file always, or we get bolder ;-)\n+ *  optimized byteswapping.\n  */\n fix = {\n     hackname = AAB_svr4_replace_byteorder;\n-#ifndef SVR5\n     mach     = \"*-*-sysv4*\";\n     mach     = \"i[34567]86-*-sysv5*\";\n+    mach     = \"i[34567]86-*-sco3.2v5*\";\n     mach     = \"i[34567]86-*-udk*\";\n     mach     = \"i[34567]86-*-solaris2.[0-4]\";\n     mach     = \"powerpcle-*-solaris2.[0-4]\";\n     mach     = \"sparc-*-solaris2.[0-4]\";\n-#endif /* SVR5 */\n     files    = sys/byteorder.h;\n     replace  = <<-  _EndOfHeader_\n \t#ifndef _SYS_BYTEORDER_H\n@@ -381,7 +379,6 @@ fix = {\n \t_EndOfHeader_;\n };\n \n-\n /*\n  *  Cancel out ansi_compat.h on Ultrix.  Replace it with an empty file.\n  */\n@@ -2019,6 +2016,73 @@ fix = {\n     test_text = 'extern int rename(const char *old, const char *new);';\n };\n \n+/*\n+ *  On OpenServer and on UnixWare 7, <math.h> uses the native compiler\n+ *  __builtin_generic. We fix that usage to use the GCC equivalent.\n+ * It also has a plethora of inline functions that conflict with libstdc++.\n+ */\n+fix = {\n+    hackname = sco_math;\n+    files    = math.h;\n+    files    = ansi/math.h;\n+    files    = posix/math.h;\n+    files    = xpg4/math.h;\n+    files    = xpg4v2/math.h;\n+    files    = xpg4plus/math.h;\n+    files    = ods_30_compat/math.h;\n+    files    = oldstyle/math.h;\n+    select   = \"inline double abs\";\n+    sed      = \"/#define.*__fp_class(a) \\\\\\\\/i\\\\\\n\"\n+\t       \"#ifndef __GNUC__\\n\";\n+    sed      =\n+\"/.*__builtin_generic/a\\\\\\n\"\n+\"#else\\\\\\n\"\n+\"#define __fp_class(a) \\\\\\\\\\\\\\n\"\n+\"  __builtin_choose_expr(__builtin_types_compatible_p(typeof(a),long double),\\\\\\\\\\\\\\n\"\n+\"   __fpclassifyl(a), \\\\\\\\\\\\\\n\"\n+\"    __builtin_choose_expr(__builtin_types_compatible_p(typeof(a), float), \\\\\\\\\\\\\\n\"\n+\"      __fpclassifyf(a),__fpclassify(a)))\\\\\\n\"\n+\"#endif\";\n+\n+    sed      = \"/extern \\\"C\\\\+\\\\+\\\"/N;\"\n+\t       \"/inline double abs/i\\\\\\n\"\n+               \"#ifndef __GNUC__\\n\";\n+    sed      = \"/inline long double trunc/N;\"\n+\t       \"/inline long double trunc.*}.*extern \\\"C\\\\+\\\\+\\\"/a\\\\\\n\"\n+\t       \"#endif /* ! __GNUC__ */\";\n+\n+    test_text =\n+    \"#define __fp_class(a) \\\\\\\\\\n\"\n+    \" __builtin_generic(a,\\\"ld:__fplcassifyl;f:__fpclassifyf;:__fpclassify\\\")\\n\";\n+\n+};\n+\n+/*\n+ *  On SCO OpenServer prior to 5.0.7UP1, <sys/regset.h> and <ieeefp.h>\n+ *  have a clash on struct _fpstate and struct fpstate.\n+ */\n+fix = {\n+    hackname = sco_regset;\n+    files    = sys/regset.h;\n+    mach     = \"*-*-sco3.2v5*\";\n+    select   = \"(struct[ \\t]+.*)fpstate\";\n+    c_fix     = format;\n+    c_fix_arg = \"%1rsfpstate\";\n+\n+    test_text =\n+    \"union u_fps {\\n\"\n+    \"    struct\\tfpstate\\n\"\n+    \"    {\\n\"\n+    \"       int whatever;\\n\"\n+    \"    }\\n\"\n+    \"};\\n\"\n+    \"union _u_fps {\\n\"\n+    \"    struct _fpstate\\n\"\n+    \"    {\\n\"\n+    \"       int whatever;\\n\"\n+    \"    }\\n\"\n+    \"};\\n\";\n+};\n \n /*\n  *  The static functions lstat() and fchmod() in <sys/stat.h>\n@@ -2523,15 +2587,13 @@ fix = {\n  *  that is visible to any ANSI compiler using this include.  Simply\n  *  delete the lines that #define some string functions to internal forms.\n  */\n-#ifdef SVR4\n fix = {\n     hackname = svr4_disable_opt;\n     files    = string.h;\n     select   = '#define.*__std_hdr_';\n     sed      = '/#define.*__std_hdr_/d';\n+    test_text = \"#define strlen __std_hdr_strlen\\n\";\n };\n-#endif\n-\n \n /*\n  *  Conditionalize some of <sys/endian.h> on __GNUC__ and __GNUG__."}, {"sha": "cff0a5920d5225a87257b36c6b61246823a76c21", "filename": "gcc/fixinc/tests/base/math.h", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de0656cf30b171cf5a05d2233e4aab26edc56105/gcc%2Ffixinc%2Ftests%2Fbase%2Fmath.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de0656cf30b171cf5a05d2233e4aab26edc56105/gcc%2Ffixinc%2Ftests%2Fbase%2Fmath.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ftests%2Fbase%2Fmath.h?ref=de0656cf30b171cf5a05d2233e4aab26edc56105", "patch": "@@ -82,6 +82,13 @@ extern int class();\n #endif  /* RS6000_DOUBLE_CHECK */\n \n \n+#if defined( SCO_MATH_CHECK )\n+#define __fp_class(a) \\\n+ __builtin_generic(a,\"ld:__fplcassifyl;f:__fpclassifyf;:__fpclassify\")\n+\n+#endif  /* SCO_MATH_CHECK */\n+\n+\n #if defined( STRICT_ANSI_NOT_CTD_CHECK )\n #if 1 && \\\n && defined(mumbling) |& ( !defined(__STRICT_ANSI__)) \\"}, {"sha": "f32c240ae34ea8941e38c0ec4e992673b2e4b06b", "filename": "gcc/fixinc/tests/base/string.h", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de0656cf30b171cf5a05d2233e4aab26edc56105/gcc%2Ffixinc%2Ftests%2Fbase%2Fstring.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de0656cf30b171cf5a05d2233e4aab26edc56105/gcc%2Ffixinc%2Ftests%2Fbase%2Fstring.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ftests%2Fbase%2Fstring.h?ref=de0656cf30b171cf5a05d2233e4aab26edc56105", "patch": "@@ -0,0 +1,13 @@\n+/*  DO NOT EDIT THIS FILE.\n+\n+    It has been auto-edited by fixincludes from:\n+\n+\t\"fixinc/tests/inc/string.h\"\n+\n+    This had to be done to correct non-standard usages in the\n+    original, manufacturer supplied header file.  */\n+\n+#ifndef _STRING_INCLUDED\n+#define _STRING_INCLUDED\n+#include <strings.h>\n+#endif /* _STRING_INCLUDED */"}, {"sha": "adc31add5dd3cb6a2d44bc95668b60abf98642a1", "filename": "gcc/fixinc/tests/base/sys/regset.h", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de0656cf30b171cf5a05d2233e4aab26edc56105/gcc%2Ffixinc%2Ftests%2Fbase%2Fsys%2Fregset.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de0656cf30b171cf5a05d2233e4aab26edc56105/gcc%2Ffixinc%2Ftests%2Fbase%2Fsys%2Fregset.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ftests%2Fbase%2Fsys%2Fregset.h?ref=de0656cf30b171cf5a05d2233e4aab26edc56105", "patch": "@@ -0,0 +1,26 @@\n+/*  DO NOT EDIT THIS FILE.\n+\n+    It has been auto-edited by fixincludes from:\n+\n+\t\"fixinc/tests/inc/sys/regset.h\"\n+\n+    This had to be done to correct non-standard usages in the\n+    original, manufacturer supplied header file.  */\n+\n+\n+\n+#if defined( SCO_REGSET_CHECK )\n+union u_fps {\n+    struct rsfpstate\n+    {\n+       int whatever;\n+    }\n+};\n+union _u_fps {\n+    struct _rsfpstate\n+    {\n+       int whatever;\n+    }\n+};\n+\n+#endif  /* SCO_REGSET_CHECK */"}]}