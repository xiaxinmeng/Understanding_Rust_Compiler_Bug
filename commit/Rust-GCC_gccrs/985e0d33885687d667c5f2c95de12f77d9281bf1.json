{"sha": "985e0d33885687d667c5f2c95de12f77d9281bf1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTg1ZTBkMzM4ODU2ODdkNjY3YzVmMmM5NWRlMTJmNzdkOTI4MWJmMQ==", "commit": {"author": {"name": "James Greenhalgh", "email": "james.greenhalgh@arm.com", "date": "2014-03-19T15:47:59Z"}, "committer": {"name": "James Greenhalgh", "email": "jgreenhalgh@gcc.gnu.org", "date": "2014-03-19T15:47:59Z"}, "message": "[ARM] [Trivial] Fix shortening of field name extend.\n\ngcc/\n\t* config/arm/aarch-common-protos.h\n\t(alu_cost_table): Fix spelling of \"extend\".\n\t* config/arm/arm.c (arm_new_rtx_costs): Fix spelling of \"extend\".\n\nFrom-SVN: r208683", "tree": {"sha": "2dee9538895610f27ab230df70c4d6e8c8c6ca4e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2dee9538895610f27ab230df70c4d6e8c8c6ca4e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/985e0d33885687d667c5f2c95de12f77d9281bf1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/985e0d33885687d667c5f2c95de12f77d9281bf1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/985e0d33885687d667c5f2c95de12f77d9281bf1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/985e0d33885687d667c5f2c95de12f77d9281bf1/comments", "author": {"login": "jgreenhalgh-arm", "id": 6104025, "node_id": "MDQ6VXNlcjYxMDQwMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6104025?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jgreenhalgh-arm", "html_url": "https://github.com/jgreenhalgh-arm", "followers_url": "https://api.github.com/users/jgreenhalgh-arm/followers", "following_url": "https://api.github.com/users/jgreenhalgh-arm/following{/other_user}", "gists_url": "https://api.github.com/users/jgreenhalgh-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jgreenhalgh-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jgreenhalgh-arm/subscriptions", "organizations_url": "https://api.github.com/users/jgreenhalgh-arm/orgs", "repos_url": "https://api.github.com/users/jgreenhalgh-arm/repos", "events_url": "https://api.github.com/users/jgreenhalgh-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/jgreenhalgh-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ce2f49b3bf9fa7ca16ab1162b1ad231287e0067c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce2f49b3bf9fa7ca16ab1162b1ad231287e0067c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce2f49b3bf9fa7ca16ab1162b1ad231287e0067c"}], "stats": {"total": 16, "additions": 11, "deletions": 5}, "files": [{"sha": "78a407166044688d6f68b3405905df744aa8ae8d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/985e0d33885687d667c5f2c95de12f77d9281bf1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/985e0d33885687d667c5f2c95de12f77d9281bf1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=985e0d33885687d667c5f2c95de12f77d9281bf1", "patch": "@@ -1,3 +1,9 @@\n+2014-03-19  James Greenhalgh  <james.greenhalgh@arm.com>\n+\n+\t* config/arm/aarch-common-protos.h\n+\t(alu_cost_table): Fix spelling of \"extend\".\n+\t* config/arm/arm.c (arm_new_rtx_costs): Fix spelling of \"extend\".\n+\n 2014-03-19  Richard Biener  <rguenther@suse.de>\n \n \tPR middle-end/60553"}, {"sha": "a5ff6b4f9cea48a42db9fd0b4ac01a298566fd3c", "filename": "gcc/config/arm/aarch-common-protos.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/985e0d33885687d667c5f2c95de12f77d9281bf1/gcc%2Fconfig%2Farm%2Faarch-common-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/985e0d33885687d667c5f2c95de12f77d9281bf1/gcc%2Fconfig%2Farm%2Faarch-common-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Faarch-common-protos.h?ref=985e0d33885687d667c5f2c95de12f77d9281bf1", "patch": "@@ -48,8 +48,8 @@ struct alu_cost_table\n   const int arith_shift_reg;\t/* ... and when the shift is by a reg.  */\n   const int log_shift;\t\t/* Additional when logic also shifts...  */\n   const int log_shift_reg;\t/* ... and when the shift is by a reg.  */\n-  const int extnd;\t\t/* Zero/sign extension.  */\n-  const int extnd_arith;\t/* Extend and arith.  */\n+  const int extend;\t\t/* Zero/sign extension.  */\n+  const int extend_arith;\t/* Extend and arith.  */\n   const int bfi;\t\t/* Bit-field insert.  */\n   const int bfx;\t\t/* Bit-field extraction.  */\n   const int clz;\t\t/* Count Leading Zeros.  */"}, {"sha": "31df0891cbb4408c4238255b5b1035701bf6bbc9", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/985e0d33885687d667c5f2c95de12f77d9281bf1/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/985e0d33885687d667c5f2c95de12f77d9281bf1/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=985e0d33885687d667c5f2c95de12f77d9281bf1", "patch": "@@ -9594,7 +9594,7 @@ arm_new_rtx_costs (rtx x, enum rtx_code code, enum rtx_code outer_code,\n \t    {\n \t      /* UXTA[BH] or SXTA[BH].  */\n \t      if (speed_p)\n-\t\t*cost += extra_cost->alu.extnd_arith;\n+\t\t*cost += extra_cost->alu.extend_arith;\n \t      *cost += (rtx_cost (XEXP (XEXP (x, 0), 0), ZERO_EXTEND, 0,\n \t\t\t\t  speed_p)\n \t\t\t+ rtx_cost (XEXP (x, 1), PLUS, 0, speed_p));\n@@ -10311,7 +10311,7 @@ arm_new_rtx_costs (rtx x, enum rtx_code code, enum rtx_code outer_code,\n \t  *cost = COSTS_N_INSNS (1);\n \t  *cost += rtx_cost (XEXP (x, 0), code, 0, speed_p);\n \t  if (speed_p)\n-\t    *cost += extra_cost->alu.extnd;\n+\t    *cost += extra_cost->alu.extend;\n \t}\n       else if (GET_MODE (XEXP (x, 0)) != SImode)\n \t{\n@@ -10364,7 +10364,7 @@ arm_new_rtx_costs (rtx x, enum rtx_code code, enum rtx_code outer_code,\n \t  *cost = COSTS_N_INSNS (1);\n \t  *cost += rtx_cost (XEXP (x, 0), code, 0, speed_p);\n \t  if (speed_p)\n-\t    *cost += extra_cost->alu.extnd;\n+\t    *cost += extra_cost->alu.extend;\n \t}\n       else if (GET_MODE (XEXP (x, 0)) != SImode)\n \t{"}]}