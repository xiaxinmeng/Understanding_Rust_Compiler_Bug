{"sha": "2cf09a996629e3996235ab3c16e2bab8a98b276f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmNmMDlhOTk2NjI5ZTM5OTYyMzVhYjNjMTZlMmJhYjhhOThiMjc2Zg==", "commit": {"author": {"name": "Kito Cheng", "email": "kito.cheng@gmail.com", "date": "2018-04-04T09:32:31Z"}, "committer": {"name": "Chung-Ju Wu", "email": "jasonwucj@gcc.gnu.org", "date": "2018-04-04T09:32:31Z"}, "message": "[NDS32] Implement movmisalignsi and movmisaligndi pattern.\n\ngcc/\n\t* config/nds32/nds32.md (movmisalign<mode>): New pattern.\n\nCo-Authored-By: Monk Chiang <sh.chiang04@gmail.com>\n\nFrom-SVN: r259073", "tree": {"sha": "905a4ea7bc36872fe2e821a692d78ec05593bfd1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/905a4ea7bc36872fe2e821a692d78ec05593bfd1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2cf09a996629e3996235ab3c16e2bab8a98b276f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2cf09a996629e3996235ab3c16e2bab8a98b276f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2cf09a996629e3996235ab3c16e2bab8a98b276f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2cf09a996629e3996235ab3c16e2bab8a98b276f/comments", "author": {"login": "kito-cheng", "id": 2723185, "node_id": "MDQ6VXNlcjI3MjMxODU=", "avatar_url": "https://avatars.githubusercontent.com/u/2723185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kito-cheng", "html_url": "https://github.com/kito-cheng", "followers_url": "https://api.github.com/users/kito-cheng/followers", "following_url": "https://api.github.com/users/kito-cheng/following{/other_user}", "gists_url": "https://api.github.com/users/kito-cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/kito-cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kito-cheng/subscriptions", "organizations_url": "https://api.github.com/users/kito-cheng/orgs", "repos_url": "https://api.github.com/users/kito-cheng/repos", "events_url": "https://api.github.com/users/kito-cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/kito-cheng/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bb347ee22758f2fa8d657ff42519e878915b64cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb347ee22758f2fa8d657ff42519e878915b64cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb347ee22758f2fa8d657ff42519e878915b64cc"}], "stats": {"total": 26, "additions": 26, "deletions": 0}, "files": [{"sha": "8f97ac2bc385dda6930c54a7a24f880c530e0eb0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2cf09a996629e3996235ab3c16e2bab8a98b276f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2cf09a996629e3996235ab3c16e2bab8a98b276f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2cf09a996629e3996235ab3c16e2bab8a98b276f", "patch": "@@ -1,3 +1,8 @@\n+2018-04-04  Kito Cheng  <kito.cheng@gmail.com>\n+\t    Monk Chiang  <sh.chiang04@gmail.com>\n+\n+\t* config/nds32/nds32.md (movmisalign<mode>): New pattern.\n+\n 2018-04-04  Chung-Ju Wu  <jasonwucj@gmail.com>\n \n \t* config/nds32/nds32.md (movqi, movhi): Merge into mov<mode>."}, {"sha": "68fe1b3c7f07119adfe5a1bf6aed4f483599e743", "filename": "gcc/config/nds32/nds32.md", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2cf09a996629e3996235ab3c16e2bab8a98b276f/gcc%2Fconfig%2Fnds32%2Fnds32.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2cf09a996629e3996235ab3c16e2bab8a98b276f/gcc%2Fconfig%2Fnds32%2Fnds32.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnds32%2Fnds32.md?ref=2cf09a996629e3996235ab3c16e2bab8a98b276f", "patch": "@@ -101,6 +101,27 @@\n     }\n })\n \n+(define_expand \"movmisalign<mode>\"\n+  [(set (match_operand:SIDI 0 \"general_operand\" \"\")\n+\t(match_operand:SIDI 1 \"general_operand\" \"\"))]\n+  \"\"\n+{\n+  rtx addr;\n+  if (MEM_P (operands[0]) && !REG_P (operands[1]))\n+    operands[1] = force_reg (<MODE>mode, operands[1]);\n+\n+  if (MEM_P (operands[0]))\n+    {\n+      addr = force_reg (Pmode, XEXP (operands[0], 0));\n+      emit_insn (gen_unaligned_store<mode> (addr, operands[1]));\n+    }\n+  else\n+    {\n+      addr = force_reg (Pmode, XEXP (operands[1], 0));\n+      emit_insn (gen_unaligned_load<mode> (operands[0], addr));\n+    }\n+  DONE;\n+})\n \n (define_expand \"movsi\"\n   [(set (match_operand:SI 0 \"general_operand\" \"\")"}]}