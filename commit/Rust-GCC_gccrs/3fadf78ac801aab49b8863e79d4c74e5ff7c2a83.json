{"sha": "3fadf78ac801aab49b8863e79d4c74e5ff7c2a83", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2ZhZGY3OGFjODAxYWFiNDliODg2M2U3OWQ0Yzc0ZTVmZjdjMmE4Mw==", "commit": {"author": {"name": "Steve Ellcey", "email": "sellcey@mips.com", "date": "2014-01-09T21:02:43Z"}, "committer": {"name": "Steve Ellcey", "email": "sje@gcc.gnu.org", "date": "2014-01-09T21:02:43Z"}, "message": "Makefile.in (TREE_FLOW_H): Remove.\n\n2014-01-09  Steve Ellcey  <sellcey@mips.com>\n\n\t* Makefile.in (TREE_FLOW_H): Remove.\n\t(TREE_SSA_H): Add file names from tree-flow.h.\n\t* doc/tree-ssa.texi (Annotations): Remove reference to tree-flow.h\n\t* tree.h: Remove tree-flow.h reference.\n\t* hash-table.h: Remove tree-flow.h reference.\n\t* tree-ssa-loop-niter.c (dump_affine_iv): Replace tree-flow.h\n\treference with tree-ssa-loop.h.\n\nFrom-SVN: r206496", "tree": {"sha": "00bf531c44e674f421bcf5d9415dff5ac1b71811", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/00bf531c44e674f421bcf5d9415dff5ac1b71811"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3fadf78ac801aab49b8863e79d4c74e5ff7c2a83", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3fadf78ac801aab49b8863e79d4c74e5ff7c2a83", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3fadf78ac801aab49b8863e79d4c74e5ff7c2a83", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3fadf78ac801aab49b8863e79d4c74e5ff7c2a83/comments", "author": null, "committer": null, "parents": [{"sha": "7f216cb2693e67a1732b9610eb85bf0b6c2cd0bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f216cb2693e67a1732b9610eb85bf0b6c2cd0bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7f216cb2693e67a1732b9610eb85bf0b6c2cd0bb"}], "stats": {"total": 26, "additions": 13, "deletions": 13}, "files": [{"sha": "3d66bcb187cd86cff7a29fdd38523c319baf1cda", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fadf78ac801aab49b8863e79d4c74e5ff7c2a83/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fadf78ac801aab49b8863e79d4c74e5ff7c2a83/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3fadf78ac801aab49b8863e79d4c74e5ff7c2a83", "patch": "@@ -1,3 +1,13 @@\n+2014-01-09  Steve Ellcey  <sellcey@mips.com>\n+\n+\t* Makefile.in (TREE_FLOW_H): Remove.\n+\t(TREE_SSA_H): Add file names from tree-flow.h.\n+\t* doc/tree-ssa.texi (Annotations): Remove reference to tree-flow.h\n+\t* tree.h: Remove tree-flow.h reference.\n+\t* hash-table.h: Remove tree-flow.h reference.\n+\t* tree-ssa-loop-niter.c (dump_affine_iv): Replace tree-flow.h\n+\treference with tree-ssa-loop.h.\n+\n 2014-01-09  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n \n \t* doc/invoke.texi: Add -maltivec={be,le} options, and document"}, {"sha": "8eb4f681e5dd08cc68a9f35f373f07eb48a2e4fd", "filename": "gcc/Makefile.in", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fadf78ac801aab49b8863e79d4c74e5ff7c2a83/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fadf78ac801aab49b8863e79d4c74e5ff7c2a83/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=3fadf78ac801aab49b8863e79d4c74e5ff7c2a83", "patch": "@@ -929,11 +929,10 @@ CPP_ID_DATA_H = $(CPPLIB_H) $(srcdir)/../libcpp/include/cpp-id-data.h\n CPP_INTERNAL_H = $(srcdir)/../libcpp/internal.h $(CPP_ID_DATA_H)\n TREE_DUMP_H = tree-dump.h $(SPLAY_TREE_H) $(DUMPFILE_H)\n TREE_PASS_H = tree-pass.h $(TIMEVAR_H) $(DUMPFILE_H)\n-TREE_FLOW_H = tree-flow.h tree-flow-inline.h tree-ssa-operands.h \\\n+TREE_SSA_H = tree-ssa.h tree-ssa-operands.h \\\n \t\t$(BITMAP_H) sbitmap.h $(BASIC_BLOCK_H) $(GIMPLE_H) \\\n \t\t$(HASHTAB_H) $(CGRAPH_H) $(IPA_REFERENCE_H) \\\n \t\ttree-ssa-alias.h\n-TREE_SSA_H = tree-ssa.h $(TREE_FLOW_H)\n PRETTY_PRINT_H = pretty-print.h $(INPUT_H) $(OBSTACK_H)\n TREE_PRETTY_PRINT_H = tree-pretty-print.h $(PRETTY_PRINT_H)\n GIMPLE_PRETTY_PRINT_H = gimple-pretty-print.h $(TREE_PRETTY_PRINT_H)"}, {"sha": "e0238bd218a9a3c872482eca29ea287e2af5212a", "filename": "gcc/doc/tree-ssa.texi", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fadf78ac801aab49b8863e79d4c74e5ff7c2a83/gcc%2Fdoc%2Ftree-ssa.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fadf78ac801aab49b8863e79d4c74e5ff7c2a83/gcc%2Fdoc%2Ftree-ssa.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftree-ssa.texi?ref=3fadf78ac801aab49b8863e79d4c74e5ff7c2a83", "patch": "@@ -53,9 +53,6 @@ variable has aliases.  All these attributes are stored in data\n structures called annotations which are then linked to the field\n @code{ann} in @code{struct tree_common}.\n \n-Presently, we define annotations for variables (@code{var_ann_t}).\n-Annotations are defined and documented in @file{tree-flow.h}.\n-\n \n @node SSA Operands\n @section SSA Operands"}, {"sha": "034385c19f27adf6c427e1d51ea6674786b646dc", "filename": "gcc/hash-table.h", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fadf78ac801aab49b8863e79d4c74e5ff7c2a83/gcc%2Fhash-table.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fadf78ac801aab49b8863e79d4c74e5ff7c2a83/gcc%2Fhash-table.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhash-table.h?ref=3fadf78ac801aab49b8863e79d4c74e5ff7c2a83", "patch": "@@ -1050,10 +1050,7 @@ hash_table <Descriptor, Allocator>::end ()\n \n /* Iterate through the elements of hash_table HTAB,\n    using hash_table <....>::iterator ITER,\n-   storing each element in RESULT, which is of type TYPE.\n-\n-   This macro has this form for compatibility with the\n-   FOR_EACH_HTAB_ELEMENT currently defined in tree-flow.h.  */\n+   storing each element in RESULT, which is of type TYPE.  */\n \n #define FOR_EACH_HASH_TABLE_ELEMENT(HTAB, RESULT, TYPE, ITER) \\\n   for ((ITER) = (HTAB).begin (); \\"}, {"sha": "7628363cc6247809421b017e67041369ae738fcf", "filename": "gcc/tree-ssa-loop-niter.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fadf78ac801aab49b8863e79d4c74e5ff7c2a83/gcc%2Ftree-ssa-loop-niter.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fadf78ac801aab49b8863e79d4c74e5ff7c2a83/gcc%2Ftree-ssa-loop-niter.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-niter.c?ref=3fadf78ac801aab49b8863e79d4c74e5ff7c2a83", "patch": "@@ -1311,7 +1311,7 @@ dump_affine_iv (FILE *file, affine_iv *iv)\n    if EVERY_ITERATION is true, we know the test is executed on every iteration.\n \n    The results (number of iterations and assumptions as described in\n-   comments at struct tree_niter_desc in tree-flow.h) are stored to NITER.\n+   comments at struct tree_niter_desc in tree-ssa-loop.h) are stored to NITER.\n    Returns false if it fails to determine number of iterations, true if it\n    was determined (possibly with some assumptions).  */\n "}, {"sha": "e22e53c152f2a1d963af6af4d1e3edcacb43b8be", "filename": "gcc/tree.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fadf78ac801aab49b8863e79d4c74e5ff7c2a83/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fadf78ac801aab49b8863e79d4c74e5ff7c2a83/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=3fadf78ac801aab49b8863e79d4c74e5ff7c2a83", "patch": "@@ -1114,9 +1114,6 @@ extern void protected_set_expr_location (tree, location_t);\n    the given label expression.  */\n #define LABEL_EXPR_LABEL(NODE)  TREE_OPERAND (LABEL_EXPR_CHECK (NODE), 0)\n \n-/* VDEF_EXPR accessors are specified in tree-flow.h, along with the other\n-   accessors for SSA operands.  */\n-\n /* CATCH_EXPR accessors.  */\n #define CATCH_TYPES(NODE)\tTREE_OPERAND (CATCH_EXPR_CHECK (NODE), 0)\n #define CATCH_BODY(NODE)\tTREE_OPERAND (CATCH_EXPR_CHECK (NODE), 1)"}]}