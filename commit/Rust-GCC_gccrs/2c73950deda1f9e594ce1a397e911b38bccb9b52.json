{"sha": "2c73950deda1f9e594ce1a397e911b38bccb9b52", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmM3Mzk1MGRlZGExZjllNTk0Y2UxYTM5N2U5MTFiMzhiY2NiOWI1Mg==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2018-10-09T08:34:52Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2018-10-09T08:34:52Z"}, "message": "ASAN: emit line information of stack variables.\n\n2018-10-09  Martin Liska  <mliska@suse.cz>\n\n\t* asan.c (asan_emit_stack_protection): If a stack variable\n\tis located in a same file as current function, then emit\n\tline info into variable definition string.\n2018-10-09  Martin Liska  <mliska@suse.cz>\n\n\t* c-c++-common/asan/pr64820.c: Add line number to scanned\n\tpattern.\n\t* c-c++-common/asan/use-after-return-1.c: Likewise.\n\t* g++.dg/asan/function-argument-1.C (main): Likewise.\n\t* g++.dg/asan/function-argument-2.C (main): Likewise.\n\t* g++.dg/asan/function-argument-3.C (main): Likewise.\n\t* g++.dg/asan/use-after-scope-1.C (main): Likewise.\n\t* g++.dg/asan/use-after-scope-2.C (main): Likewise.\n\t* g++.dg/asan/use-after-scope-types-1.C (main): Likewise.\n\t* g++.dg/asan/use-after-scope-types-2.C (main): Likewise.\n\t* g++.dg/asan/use-after-scope-types-3.C (main): Likewise.\n\t* g++.dg/asan/use-after-scope-types-4.C (main): Likewise.\n\t* g++.dg/asan/use-after-scope-types-5.C (main): Likewise.\n\t* gcc.dg/asan/pr78541.c (main): Likewise.\n\t* gcc.dg/asan/use-after-scope-1.c (main): Likewise.\n\t* gcc.dg/asan/use-after-scope-10.c (main): Likewise.\n\t* gcc.dg/asan/use-after-scope-2.c (main): Likewise.\n\t* gcc.dg/asan/use-after-scope-3.c (main): Likewise.\n\t* gcc.dg/asan/use-after-scope-5.c (main): Likewise.\n\t* gcc.dg/asan/use-after-scope-9.c (main): Likewise.\n\nFrom-SVN: r264951", "tree": {"sha": "4c400d5a0fb24f258d13e7c90d176dc402ad9ba9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4c400d5a0fb24f258d13e7c90d176dc402ad9ba9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2c73950deda1f9e594ce1a397e911b38bccb9b52", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c73950deda1f9e594ce1a397e911b38bccb9b52", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c73950deda1f9e594ce1a397e911b38bccb9b52", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c73950deda1f9e594ce1a397e911b38bccb9b52/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9d44426f78d05a7c6bbf8327804c69e51e8de39b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d44426f78d05a7c6bbf8327804c69e51e8de39b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9d44426f78d05a7c6bbf8327804c69e51e8de39b"}], "stats": {"total": 89, "additions": 68, "deletions": 21}, "files": [{"sha": "4ccb6e1138e971e1b8c8353544748feb3289a1e2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c73950deda1f9e594ce1a397e911b38bccb9b52/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c73950deda1f9e594ce1a397e911b38bccb9b52/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2c73950deda1f9e594ce1a397e911b38bccb9b52", "patch": "@@ -1,3 +1,9 @@\n+2018-10-09  Martin Liska  <mliska@suse.cz>\n+\n+\t* asan.c (asan_emit_stack_protection): If a stack variable\n+\tis located in a same file as current function, then emit\n+\tline info into variable definition string.\n+\n 2018-10-08  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* print-rtl.c (rtx_writer::print_rtx_operand_code_i): Print column"}, {"sha": "b2c41187b91432c4031b708d6bdf74af10672b5a", "filename": "gcc/asan.c", "status": "modified", "additions": 20, "deletions": 2, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c73950deda1f9e594ce1a397e911b38bccb9b52/gcc%2Fasan.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c73950deda1f9e594ce1a397e911b38bccb9b52/gcc%2Fasan.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fasan.c?ref=2c73950deda1f9e594ce1a397e911b38bccb9b52", "patch": "@@ -1269,6 +1269,9 @@ asan_emit_stack_protection (rtx base, rtx pbase, unsigned int alignb,\n   if (shadow_ptr_types[0] == NULL_TREE)\n     asan_init_shadow_ptr_types ();\n \n+  expanded_location cfun_xloc\n+    = expand_location (DECL_SOURCE_LOCATION (current_function_decl));\n+\n   /* First of all, prepare the description string.  */\n   pretty_printer asan_pp;\n \n@@ -1281,15 +1284,30 @@ asan_emit_stack_protection (rtx base, rtx pbase, unsigned int alignb,\n       pp_space (&asan_pp);\n       pp_wide_integer (&asan_pp, offsets[l - 1] - offsets[l]);\n       pp_space (&asan_pp);\n+\n+      expanded_location xloc\n+\t= expand_location (DECL_SOURCE_LOCATION (decl));\n+      char location[32];\n+\n+      if (xloc.file == cfun_xloc.file)\n+\tsprintf (location, \":%d\", xloc.line);\n+      else\n+\tlocation[0] = '\\0';\n+\n       if (DECL_P (decl) && DECL_NAME (decl))\n \t{\n-\t  pp_decimal_int (&asan_pp, IDENTIFIER_LENGTH (DECL_NAME (decl)));\n+\t  unsigned idlen\n+\t    = IDENTIFIER_LENGTH (DECL_NAME (decl)) + strlen (location);\n+\t  pp_decimal_int (&asan_pp, idlen);\n \t  pp_space (&asan_pp);\n \t  pp_tree_identifier (&asan_pp, DECL_NAME (decl));\n+\t  pp_string (&asan_pp, location);\n \t}\n       else\n \tpp_string (&asan_pp, \"9 <unknown>\");\n-      pp_space (&asan_pp);\n+\n+      if (l > 2)\n+\tpp_space (&asan_pp);\n     }\n   str_cst = asan_pp_string (&asan_pp);\n "}, {"sha": "eed63b2431662d9485d4731e19d414de7d43181d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c73950deda1f9e594ce1a397e911b38bccb9b52/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c73950deda1f9e594ce1a397e911b38bccb9b52/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2c73950deda1f9e594ce1a397e911b38bccb9b52", "patch": "@@ -1,3 +1,26 @@\n+2018-10-09  Martin Liska  <mliska@suse.cz>\n+\n+\t* c-c++-common/asan/pr64820.c: Add line number to scanned\n+\tpattern.\n+\t* c-c++-common/asan/use-after-return-1.c: Likewise.\n+\t* g++.dg/asan/function-argument-1.C (main): Likewise.\n+\t* g++.dg/asan/function-argument-2.C (main): Likewise.\n+\t* g++.dg/asan/function-argument-3.C (main): Likewise.\n+\t* g++.dg/asan/use-after-scope-1.C (main): Likewise.\n+\t* g++.dg/asan/use-after-scope-2.C (main): Likewise.\n+\t* g++.dg/asan/use-after-scope-types-1.C (main): Likewise.\n+\t* g++.dg/asan/use-after-scope-types-2.C (main): Likewise.\n+\t* g++.dg/asan/use-after-scope-types-3.C (main): Likewise.\n+\t* g++.dg/asan/use-after-scope-types-4.C (main): Likewise.\n+\t* g++.dg/asan/use-after-scope-types-5.C (main): Likewise.\n+\t* gcc.dg/asan/pr78541.c (main): Likewise.\n+\t* gcc.dg/asan/use-after-scope-1.c (main): Likewise.\n+\t* gcc.dg/asan/use-after-scope-10.c (main): Likewise.\n+\t* gcc.dg/asan/use-after-scope-2.c (main): Likewise.\n+\t* gcc.dg/asan/use-after-scope-3.c (main): Likewise.\n+\t* gcc.dg/asan/use-after-scope-5.c (main): Likewise.\n+\t* gcc.dg/asan/use-after-scope-9.c (main): Likewise.\n+\n 2018-10-09  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/87151"}, {"sha": "a00debf358833ef8de1f2b6ba9d50a2d68c86296", "filename": "gcc/testsuite/c-c++-common/asan/pr64820.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c73950deda1f9e594ce1a397e911b38bccb9b52/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fpr64820.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c73950deda1f9e594ce1a397e911b38bccb9b52/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fpr64820.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fpr64820.c?ref=2c73950deda1f9e594ce1a397e911b38bccb9b52", "patch": "@@ -28,4 +28,4 @@ int main(int argc, char **argv) {\n /* { dg-output \"WRITE of size 1 at .* thread T0.*\" } */\n /* { dg-output \"    #0.*(Func2)?.*pr64820.(c:21)?.*\" } */\n /* { dg-output \"is located in stack of thread T0 at offset.*\" } */\n-/* { dg-output \"\\'local\\' <== Memory access at offset 32 is inside this variable\" } */\n+/* { dg-output \"\\'local\\' \\\\(line 14\\\\) <== Memory access at offset 32 is inside this variable\" } */"}, {"sha": "e1bb18a574319b3ecde14af53eb1d2730608ba88", "filename": "gcc/testsuite/c-c++-common/asan/use-after-return-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c73950deda1f9e594ce1a397e911b38bccb9b52/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fuse-after-return-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c73950deda1f9e594ce1a397e911b38bccb9b52/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fuse-after-return-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fuse-after-return-1.c?ref=2c73950deda1f9e594ce1a397e911b38bccb9b52", "patch": "@@ -50,4 +50,4 @@ int main(int argc, char **argv) {\n /* { dg-output \"WRITE of size 1 at .* thread T0.*\" } */\n /* { dg-output \"    #0.*(Func2)?.*use-after-return-1.(c:31)?.*\" } */\n /* { dg-output \"is located in stack of thread T0 at offset.*\" } */\n-/* { dg-output \"\\'local\\' <== Memory access at offset 32 is inside this variable\" } */\n+/* { dg-output \"\\'local\\' \\\\(line 24\\\\) <== Memory access at offset 32 is inside this variable\" } */"}, {"sha": "f421ad68b5db2613176745e4444b3c1fc4ffd10c", "filename": "gcc/testsuite/g++.dg/asan/function-argument-1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c73950deda1f9e594ce1a397e911b38bccb9b52/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fasan%2Ffunction-argument-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c73950deda1f9e594ce1a397e911b38bccb9b52/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fasan%2Ffunction-argument-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fasan%2Ffunction-argument-1.C?ref=2c73950deda1f9e594ce1a397e911b38bccb9b52", "patch": "@@ -28,4 +28,4 @@ main ()\n \n // { dg-output \"ERROR: AddressSanitizer: stack-buffer-underflow on address.*(\\n|\\r\\n|\\r)\" }\n // { dg-output \"READ of size . at.*\" }\n-// { dg-output \".*'arg' <== Memory access at offset \\[0-9\\]* underflows this variable.*\" }\n+// { dg-output \".*'arg' \\\\(line 18\\\\) <== Memory access at offset \\[0-9\\]* underflows this variable.*\" }"}, {"sha": "bdd3dc6e49f0f9f00ae847783c1e66c01a3a0c1c", "filename": "gcc/testsuite/g++.dg/asan/function-argument-2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c73950deda1f9e594ce1a397e911b38bccb9b52/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fasan%2Ffunction-argument-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c73950deda1f9e594ce1a397e911b38bccb9b52/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fasan%2Ffunction-argument-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fasan%2Ffunction-argument-2.C?ref=2c73950deda1f9e594ce1a397e911b38bccb9b52", "patch": "@@ -21,4 +21,4 @@ main ()\n \n // { dg-output \"ERROR: AddressSanitizer: stack-buffer-overflow on address.*(\\n|\\r\\n|\\r)\" }\n // { dg-output \"READ of size . at.*\" }\n-// { dg-output \".*'arg' <== Memory access at offset \\[0-9\\]* partially overflows this variable.*\" }\n+// { dg-output \".*'arg' \\\\(line 11\\\\) <== Memory access at offset \\[0-9\\]* partially overflows this variable.*\" }"}, {"sha": "26b3f9268afe2dd9de8ee2f5493ebaaec5c9dcee", "filename": "gcc/testsuite/g++.dg/asan/function-argument-3.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c73950deda1f9e594ce1a397e911b38bccb9b52/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fasan%2Ffunction-argument-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c73950deda1f9e594ce1a397e911b38bccb9b52/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fasan%2Ffunction-argument-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fasan%2Ffunction-argument-3.C?ref=2c73950deda1f9e594ce1a397e911b38bccb9b52", "patch": "@@ -25,4 +25,4 @@ main ()\n \n // { dg-output \"ERROR: AddressSanitizer: stack-buffer-overflow on address.*(\\n|\\r\\n|\\r)\" }\n // { dg-output \"READ of size . at.*\" }\n-// { dg-output \".*'arg' <== Memory access at offset \\[0-9\\]* overflows this variable.*\" }\n+// { dg-output \".*'arg' \\\\(line 14\\\\) <== Memory access at offset \\[0-9\\]* overflows this variable.*\" }"}, {"sha": "4cbc5345b577d947bc6598460a605b4585e023d8", "filename": "gcc/testsuite/g++.dg/asan/use-after-scope-1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c73950deda1f9e594ce1a397e911b38bccb9b52/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fasan%2Fuse-after-scope-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c73950deda1f9e594ce1a397e911b38bccb9b52/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fasan%2Fuse-after-scope-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fasan%2Fuse-after-scope-1.C?ref=2c73950deda1f9e594ce1a397e911b38bccb9b52", "patch": "@@ -18,4 +18,4 @@ int main() {\n \n // { dg-output \"ERROR: AddressSanitizer: stack-use-after-scope on address.*(\\n|\\r\\n|\\r)\" }\n // { dg-output \"READ of size 4 at.*\" }\n-// { dg-output \".*'v' <== Memory access at offset \\[0-9\\]* is inside this variable.*\" }\n+// { dg-output \".*'v' \\\\(line 9\\\\) <== Memory access at offset \\[0-9\\]* is inside this variable.*\" }"}, {"sha": "5d11834dfebdc70b017419ab605b360909c7d5d6", "filename": "gcc/testsuite/g++.dg/asan/use-after-scope-2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c73950deda1f9e594ce1a397e911b38bccb9b52/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fasan%2Fuse-after-scope-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c73950deda1f9e594ce1a397e911b38bccb9b52/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fasan%2Fuse-after-scope-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fasan%2Fuse-after-scope-2.C?ref=2c73950deda1f9e594ce1a397e911b38bccb9b52", "patch": "@@ -37,4 +37,4 @@ int main(int argc, char **argv)\n \n // { dg-output \"ERROR: AddressSanitizer: stack-use-after-scope on address.*(\\n|\\r\\n|\\r)\" }\n // { dg-output \"READ of size 4 at.*\" }\n-// { dg-output \".*'x' <== Memory access at offset \\[0-9\\]* is inside this variable.*\" }\n+// { dg-output \".*'x' \\\\(line 31\\\\) <== Memory access at offset \\[0-9\\]* is inside this variable.*\" }"}, {"sha": "180804ca81ddf49d9a155a084383c63b58ab85d9", "filename": "gcc/testsuite/g++.dg/asan/use-after-scope-types-1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c73950deda1f9e594ce1a397e911b38bccb9b52/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fasan%2Fuse-after-scope-types-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c73950deda1f9e594ce1a397e911b38bccb9b52/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fasan%2Fuse-after-scope-types-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fasan%2Fuse-after-scope-types-1.C?ref=2c73950deda1f9e594ce1a397e911b38bccb9b52", "patch": "@@ -14,4 +14,4 @@ int main()\n \n // { dg-output \"ERROR: AddressSanitizer: stack-use-after-scope on address.*(\\n|\\r\\n|\\r)\" }\n // { dg-output \"WRITE of size \" }\n-// { dg-output \".*'x' <== Memory access at offset \\[0-9\\]* is inside this variable.*\" }\n+// { dg-output \".*'x' \\\\(line 25\\\\) <== Memory access at offset \\[0-9\\]* is inside this variable.*\" }"}, {"sha": "172c5c03b2ec2dfa3f1c0cc01e453303e73a8d79", "filename": "gcc/testsuite/g++.dg/asan/use-after-scope-types-2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c73950deda1f9e594ce1a397e911b38bccb9b52/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fasan%2Fuse-after-scope-types-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c73950deda1f9e594ce1a397e911b38bccb9b52/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fasan%2Fuse-after-scope-types-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fasan%2Fuse-after-scope-types-2.C?ref=2c73950deda1f9e594ce1a397e911b38bccb9b52", "patch": "@@ -14,4 +14,4 @@ int main()\n \n // { dg-output \"ERROR: AddressSanitizer: stack-use-after-scope on address.*(\\n|\\r\\n|\\r)\" }\n // { dg-output \"WRITE of size \" }\n-// { dg-output \".*'x' <== Memory access at offset \\[0-9\\]* is inside this variable.*\" }\n+// { dg-output \".*'x' \\\\(line 25\\\\) <== Memory access at offset \\[0-9\\]* is inside this variable.*\" }"}, {"sha": "d4ad0fcc3a5bbe08a5101cd7d71e19881e54ae2e", "filename": "gcc/testsuite/g++.dg/asan/use-after-scope-types-3.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c73950deda1f9e594ce1a397e911b38bccb9b52/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fasan%2Fuse-after-scope-types-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c73950deda1f9e594ce1a397e911b38bccb9b52/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fasan%2Fuse-after-scope-types-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fasan%2Fuse-after-scope-types-3.C?ref=2c73950deda1f9e594ce1a397e911b38bccb9b52", "patch": "@@ -14,4 +14,4 @@ int main()\n \n // { dg-output \"ERROR: AddressSanitizer: stack-use-after-scope on address.*(\\n|\\r\\n|\\r)\" }\n // { dg-output \"WRITE of size \" }\n-// { dg-output \".*'x' <== Memory access at offset \\[0-9\\]* is inside this variable.*\" }\n+// { dg-output \".*'x' \\\\(line 25\\\\) <== Memory access at offset \\[0-9\\]* is inside this variable.*\" }"}, {"sha": "7638107d2cca69b1636a66ec81a59be1d70f3c07", "filename": "gcc/testsuite/g++.dg/asan/use-after-scope-types-4.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c73950deda1f9e594ce1a397e911b38bccb9b52/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fasan%2Fuse-after-scope-types-4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c73950deda1f9e594ce1a397e911b38bccb9b52/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fasan%2Fuse-after-scope-types-4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fasan%2Fuse-after-scope-types-4.C?ref=2c73950deda1f9e594ce1a397e911b38bccb9b52", "patch": "@@ -14,4 +14,4 @@ int main()\n \n // { dg-output \"ERROR: AddressSanitizer: stack-use-after-scope on address.*(\\n|\\r\\n|\\r)\" }\n // { dg-output \"READ of size \" }\n-// { dg-output \".*'x' <== Memory access at offset \\[0-9\\]* is inside this variable.*\" }\n+// { dg-output \".*'x' \\\\(line 25\\\\) <== Memory access at offset \\[0-9\\]* is inside this variable.*\" }"}, {"sha": "fe7c57fc37be1aa295b796e051657e3f4cc08e97", "filename": "gcc/testsuite/g++.dg/asan/use-after-scope-types-5.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c73950deda1f9e594ce1a397e911b38bccb9b52/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fasan%2Fuse-after-scope-types-5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c73950deda1f9e594ce1a397e911b38bccb9b52/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fasan%2Fuse-after-scope-types-5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fasan%2Fuse-after-scope-types-5.C?ref=2c73950deda1f9e594ce1a397e911b38bccb9b52", "patch": "@@ -14,4 +14,4 @@ int main()\n \n // { dg-output \"ERROR: AddressSanitizer: stack-use-after-scope on address.*(\\n|\\r\\n|\\r)\" }\n // { dg-output \"WRITE of size \" }\n-// { dg-output \".*'x' <== Memory access at offset \\[0-9\\]* is inside this variable.*\" }\n+// { dg-output \".*'x' \\\\(line 25\\\\) <== Memory access at offset \\[0-9\\]* is inside this variable.*\" }"}, {"sha": "612c7e5807197c581619fedc1b2d48fbb34d50a2", "filename": "gcc/testsuite/gcc.dg/asan/pr78541.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c73950deda1f9e594ce1a397e911b38bccb9b52/gcc%2Ftestsuite%2Fgcc.dg%2Fasan%2Fpr78541.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c73950deda1f9e594ce1a397e911b38bccb9b52/gcc%2Ftestsuite%2Fgcc.dg%2Fasan%2Fpr78541.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fasan%2Fpr78541.c?ref=2c73950deda1f9e594ce1a397e911b38bccb9b52", "patch": "@@ -22,4 +22,4 @@ int main()\n \n // { dg-output \"ERROR: AddressSanitizer: stack-use-after-scope on address.*(\\n|\\r\\n|\\r)\" }\n // { dg-output \"READ of size.*\" }\n-// { dg-output \".*'x' <== Memory access at offset \\[0-9\\]* is inside this variable.*\" }\n+// { dg-output \".*'x' \\\\(line 9\\\\) <== Memory access at offset \\[0-9\\]* is inside this variable.*\" }"}, {"sha": "19a8379f4afbe623f9dbce61da422fd55e73db28", "filename": "gcc/testsuite/gcc.dg/asan/use-after-scope-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c73950deda1f9e594ce1a397e911b38bccb9b52/gcc%2Ftestsuite%2Fgcc.dg%2Fasan%2Fuse-after-scope-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c73950deda1f9e594ce1a397e911b38bccb9b52/gcc%2Ftestsuite%2Fgcc.dg%2Fasan%2Fuse-after-scope-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fasan%2Fuse-after-scope-1.c?ref=2c73950deda1f9e594ce1a397e911b38bccb9b52", "patch": "@@ -15,4 +15,4 @@ main (void)\n \n // { dg-output \"ERROR: AddressSanitizer: stack-use-after-scope on address.*(\\n|\\r\\n|\\r)\" }\n // { dg-output \"READ of size 1 at.*\" }\n-// { dg-output \".*'my_char' <== Memory access at offset \\[0-9\\]* is inside this variable.*\" }\n+// { dg-output \".*'my_char' \\\\(line 9\\\\) <== Memory access at offset \\[0-9\\]* is inside this variable.*\" }"}, {"sha": "e4b986ec0719ab2e2055b1bb40bdd2da0f988744", "filename": "gcc/testsuite/gcc.dg/asan/use-after-scope-10.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c73950deda1f9e594ce1a397e911b38bccb9b52/gcc%2Ftestsuite%2Fgcc.dg%2Fasan%2Fuse-after-scope-10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c73950deda1f9e594ce1a397e911b38bccb9b52/gcc%2Ftestsuite%2Fgcc.dg%2Fasan%2Fuse-after-scope-10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fasan%2Fuse-after-scope-10.c?ref=2c73950deda1f9e594ce1a397e911b38bccb9b52", "patch": "@@ -20,4 +20,4 @@ main (int argc, char **argv)\n \n // { dg-output \"ERROR: AddressSanitizer: stack-use-after-scope on address.*(\\n|\\r\\n|\\r)\" }\n // { dg-output \"WRITE of size .*\" }\n-// { dg-output \".*'a' <== Memory access at offset \\[0-9\\]* is inside this variable.*\" }\n+// { dg-output \".*'a' \\\\(line 12\\\\) <== Memory access at offset \\[0-9\\]* is inside this variable.*\" }"}, {"sha": "101858126ff506d6ad0f00876b33d76738ef6abb", "filename": "gcc/testsuite/gcc.dg/asan/use-after-scope-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c73950deda1f9e594ce1a397e911b38bccb9b52/gcc%2Ftestsuite%2Fgcc.dg%2Fasan%2Fuse-after-scope-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c73950deda1f9e594ce1a397e911b38bccb9b52/gcc%2Ftestsuite%2Fgcc.dg%2Fasan%2Fuse-after-scope-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fasan%2Fuse-after-scope-2.c?ref=2c73950deda1f9e594ce1a397e911b38bccb9b52", "patch": "@@ -44,4 +44,4 @@ main (void)\n \n // { dg-output \"ERROR: AddressSanitizer: stack-use-after-scope on address.*(\\n|\\r\\n|\\r)\" }\n // { dg-output \"READ of size 4 at.*\" }\n-// { dg-output \".*'c' <== Memory access at offset \\[0-9\\]* is inside this variable.*\" }\n+// { dg-output \".*'c' \\\\(line 37\\\\) <== Memory access at offset \\[0-9\\]* is inside this variable.*\" }"}, {"sha": "8f8533760c55e356a053cfbf174be5996a34a28c", "filename": "gcc/testsuite/gcc.dg/asan/use-after-scope-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c73950deda1f9e594ce1a397e911b38bccb9b52/gcc%2Ftestsuite%2Fgcc.dg%2Fasan%2Fuse-after-scope-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c73950deda1f9e594ce1a397e911b38bccb9b52/gcc%2Ftestsuite%2Fgcc.dg%2Fasan%2Fuse-after-scope-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fasan%2Fuse-after-scope-3.c?ref=2c73950deda1f9e594ce1a397e911b38bccb9b52", "patch": "@@ -18,4 +18,4 @@ main (void)\n \n // { dg-output \"ERROR: AddressSanitizer: stack-use-after-scope on address.*(\\n|\\r\\n|\\r)\" }\n // { dg-output \"WRITE of size 1 at.*\" }\n-// { dg-output \".*'my_char' <== Memory access at offset \\[0-9\\]* overflows this variable.*\" }\n+// { dg-output \".*'my_char' \\\\(line 11\\\\) <== Memory access at offset \\[0-9\\]* overflows this variable.*\" }"}, {"sha": "1c2fafb43be1c2028de8b9b472d37372bf069e0b", "filename": "gcc/testsuite/gcc.dg/asan/use-after-scope-5.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c73950deda1f9e594ce1a397e911b38bccb9b52/gcc%2Ftestsuite%2Fgcc.dg%2Fasan%2Fuse-after-scope-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c73950deda1f9e594ce1a397e911b38bccb9b52/gcc%2Ftestsuite%2Fgcc.dg%2Fasan%2Fuse-after-scope-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fasan%2Fuse-after-scope-5.c?ref=2c73950deda1f9e594ce1a397e911b38bccb9b52", "patch": "@@ -24,4 +24,4 @@ main (int argc, char **argv)\n \n // { dg-output \"ERROR: AddressSanitizer: stack-use-after-scope on address.*(\\n|\\r\\n|\\r)\" }\n // { dg-output \"READ of size 4 at.*\" }\n-// { dg-output \".*'values' <== Memory access at offset \\[0-9\\]* is inside this variable.*\" }\n+// { dg-output \".*'values' \\\\(line 10\\\\) <== Memory access at offset \\[0-9\\]* is inside this variable.*\" }"}, {"sha": "853765bf3cc1d537bfcd8b370c9c26996e52a049", "filename": "gcc/testsuite/gcc.dg/asan/use-after-scope-9.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c73950deda1f9e594ce1a397e911b38bccb9b52/gcc%2Ftestsuite%2Fgcc.dg%2Fasan%2Fuse-after-scope-9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c73950deda1f9e594ce1a397e911b38bccb9b52/gcc%2Ftestsuite%2Fgcc.dg%2Fasan%2Fuse-after-scope-9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fasan%2Fuse-after-scope-9.c?ref=2c73950deda1f9e594ce1a397e911b38bccb9b52", "patch": "@@ -20,4 +20,4 @@ main (int argc, char **argv)\n // { dg-final { scan-tree-dump-times {= \\.ASAN_POISON \\(\\)} 1 \"asan1\" } }\n // { dg-output \"ERROR: AddressSanitizer: stack-use-after-scope on address.*(\\n|\\r\\n|\\r)\" }\n // { dg-output \"READ of size .*\" }\n-// { dg-output \".*'a' <== Memory access at offset \\[0-9\\]* is inside this variable.*\" }\n+// { dg-output \".*'a' \\\\(line 12\\\\) <== Memory access at offset \\[0-9\\]* is inside this variable.*\" }"}]}