{"sha": "972345f2c98204eb030568cf15b023d15adad345", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTcyMzQ1ZjJjOTgyMDRlYjAzMDU2OGNmMTViMDIzZDE1YWRhZDM0NQ==", "commit": {"author": {"name": "Christopher D. Rickett", "email": "crickett@lanl.gov", "date": "2007-07-19T06:14:19Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2007-07-19T06:14:19Z"}, "message": "re PR fortran/32600 ([ISO Bind C] C_F_POINTER w/o SHAPE should not be a library function)\n\n2007-07-19  Christopher D. Rickett  <crickett@lanl.gov>\n\n\tPR fortran/32600\n\t* trans-expr.c (gfc_conv_function_call): Inline C_LOC.\n\n\n2007-07-19  Christopher D. Rickett  <crickett@lanl.gov>\n\n\tPR fortran/32600\n\t* libgfortran/intrinsics/iso_c_binding.c: Remove C_LOC.\n\t* libgfortran/intrinsics/iso_c_binding.h: Ditto.\n\t* libgfortran/gfortran.map: Ditto.\n\nFrom-SVN: r126744", "tree": {"sha": "535259e91e0fedbc67e86254b4f1684dbabc21f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/535259e91e0fedbc67e86254b4f1684dbabc21f8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/972345f2c98204eb030568cf15b023d15adad345", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/972345f2c98204eb030568cf15b023d15adad345", "html_url": "https://github.com/Rust-GCC/gccrs/commit/972345f2c98204eb030568cf15b023d15adad345", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/972345f2c98204eb030568cf15b023d15adad345/comments", "author": null, "committer": null, "parents": [{"sha": "2211d9eae7c06cf47bbd32a0e0e04ec50f39fcbe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2211d9eae7c06cf47bbd32a0e0e04ec50f39fcbe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2211d9eae7c06cf47bbd32a0e0e04ec50f39fcbe"}], "stats": {"total": 58, "additions": 39, "deletions": 19}, "files": [{"sha": "476b73eb22d9884a95f03364052439bfc5e21fc3", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/972345f2c98204eb030568cf15b023d15adad345/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/972345f2c98204eb030568cf15b023d15adad345/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=972345f2c98204eb030568cf15b023d15adad345", "patch": "@@ -1,3 +1,8 @@\n+2007-07-19  Christopher D. Rickett  <crickett@lanl.gov>\n+\n+\tPR fortran/32600\n+\t* trans-expr.c (gfc_conv_function_call): Inline C_LOC.\n+\n 2007-07-18  Christopher D. Rickett  <crickett@lanl.gov>\n \n \tPR fortran/32801"}, {"sha": "16148cb0a6215d5aba525c478d8202730618146c", "filename": "gcc/fortran/trans-expr.c", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/972345f2c98204eb030568cf15b023d15adad345/gcc%2Ffortran%2Ftrans-expr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/972345f2c98204eb030568cf15b023d15adad345/gcc%2Ffortran%2Ftrans-expr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-expr.c?ref=972345f2c98204eb030568cf15b023d15adad345", "patch": "@@ -2060,6 +2060,33 @@ gfc_conv_function_call (gfc_se * se, gfc_symbol * sym,\n   var = NULL_TREE;\n   len = NULL_TREE;\n \n+  if (sym->from_intmod == INTMOD_ISO_C_BINDING\n+      && sym->intmod_sym_id == ISOCBINDING_LOC)\n+    {\n+      if (arg->expr->rank == 0)\n+\t{\n+\t  gfc_conv_expr_reference (se, arg->expr);\n+\t}\n+      else\n+\t{\n+\t  int f;\n+\t  /* This is really the actual arg because no formal arglist is\n+\t     created for C_LOC.\t */\n+\t  fsym = arg->expr->symtree->n.sym;\n+\n+\t  /* We should want it to do g77 calling convention.  */\n+\t  f = (fsym != NULL)\n+\t    && !(fsym->attr.pointer || fsym->attr.allocatable)\n+\t    && fsym->as->type != AS_ASSUMED_SHAPE;\n+\t  f = f || !sym->attr.always_explicit;\n+\t  \n+\t  argss = gfc_walk_expr (arg->expr);\n+\t  gfc_conv_array_parameter (se, arg->expr, argss, f);\n+\t}\n+\n+      return 0;\n+    }\n+  \n   if (se->ss != NULL)\n     {\n       if (!sym->attr.elemental)"}, {"sha": "560e8bc5d9486fc6b172192c9b86288238145703", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/972345f2c98204eb030568cf15b023d15adad345/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/972345f2c98204eb030568cf15b023d15adad345/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=972345f2c98204eb030568cf15b023d15adad345", "patch": "@@ -1,3 +1,10 @@\n+2007-07-19  Christopher D. Rickett  <crickett@lanl.gov>\n+\n+\tPR fortran/32600\n+\t* libgfortran/intrinsics/iso_c_binding.c: Remove C_LOC.\n+\t* libgfortran/intrinsics/iso_c_binding.h: Ditto.\n+\t* libgfortran/gfortran.map: Ditto.\n+\n 2007-07-15  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \t    Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n "}, {"sha": "f8d184a5079d651908e8df567872608c1023f76b", "filename": "libgfortran/gfortran.map", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/972345f2c98204eb030568cf15b023d15adad345/libgfortran%2Fgfortran.map", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/972345f2c98204eb030568cf15b023d15adad345/libgfortran%2Fgfortran.map", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgfortran.map?ref=972345f2c98204eb030568cf15b023d15adad345", "patch": "@@ -1019,7 +1019,6 @@ GFORTRAN_1.0 {\n     __iso_c_binding_c_f_pointer_u0;\n     __iso_c_binding_c_f_procpointer;\n     __iso_c_binding_c_funloc;\n-    __iso_c_binding_c_loc;\n   local:\n     *;\n };"}, {"sha": "d73a9ce93d78d00f88638c63021c2fb6ca0c64f0", "filename": "libgfortran/intrinsics/iso_c_binding.c", "status": "modified", "additions": 0, "deletions": 17, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/972345f2c98204eb030568cf15b023d15adad345/libgfortran%2Fintrinsics%2Fiso_c_binding.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/972345f2c98204eb030568cf15b023d15adad345/libgfortran%2Fintrinsics%2Fiso_c_binding.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Fiso_c_binding.c?ref=972345f2c98204eb030568cf15b023d15adad345", "patch": "@@ -213,23 +213,6 @@ ISO_C_BINDING_PREFIX (c_associated_2) (void *c_ptr_in_1, void *c_ptr_in_2)\n }\n \n \n-/* Return the C address of the given Fortran allocatable object.  */\n-\n-void *\n-ISO_C_BINDING_PREFIX (c_loc) (void *f90_obj)\n-{\n-  if (f90_obj == NULL)\n-    {\n-      runtime_error (\"C_LOC: Attempt to get C address for Fortran object\"\n-                     \" that has not been allocated or associated\");\n-      abort ();\n-    }\n-   \n-  /* The \"C\" address should be the address of the object in Fortran.  */\n-  return f90_obj;\n-}\n-\n-\n /*  Return the C address of the given Fortran procedure.  This\n     routine is expected to return a derived type of type C_FUNPTR,\n     which represents the C address of the given Fortran object.  */"}, {"sha": "1e51ad53d2d9218ee92f0df3752b60ea16d4ce6b", "filename": "libgfortran/intrinsics/iso_c_binding.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/972345f2c98204eb030568cf15b023d15adad345/libgfortran%2Fintrinsics%2Fiso_c_binding.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/972345f2c98204eb030568cf15b023d15adad345/libgfortran%2Fintrinsics%2Fiso_c_binding.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Fiso_c_binding.h?ref=972345f2c98204eb030568cf15b023d15adad345", "patch": "@@ -64,7 +64,6 @@ void ISO_C_BINDING_PREFIX(c_f_pointer_u0) (void *, gfc_array_void *,\n void ISO_C_BINDING_PREFIX(c_f_pointer_d0) (void *, gfc_array_void *,\n \t\t\t\t\t   const array_t *);\n \n-void *ISO_C_BINDING_PREFIX(c_loc) (void *);\n void *ISO_C_BINDING_PREFIX(c_funloc) (void *);\n \n #endif"}]}