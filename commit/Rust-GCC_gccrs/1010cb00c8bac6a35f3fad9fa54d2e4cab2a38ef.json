{"sha": "1010cb00c8bac6a35f3fad9fa54d2e4cab2a38ef", "node_id": "C_kwDOANBUbNoAKDEwMTBjYjAwYzhiYWM2YTM1ZjNmYWQ5ZmE1NGQyZTRjYWIyYTM4ZWY", "commit": {"author": {"name": "Bob Duff", "email": "duff@adacore.com", "date": "2021-11-17T14:58:49Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-12-01T10:24:42Z"}, "message": "[Ada] Syntax error on \"not null procedure\"\n\ngcc/ada/\n\n\t* par-ch3.adb (P_Access_Type_Definition): If Not_Null_Subtype is\n\tTrue, give an error in the access-to-subprogram cases.", "tree": {"sha": "2988b08a18e517caf9b054a092562ce7f5a21166", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2988b08a18e517caf9b054a092562ce7f5a21166"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1010cb00c8bac6a35f3fad9fa54d2e4cab2a38ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1010cb00c8bac6a35f3fad9fa54d2e4cab2a38ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1010cb00c8bac6a35f3fad9fa54d2e4cab2a38ef", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1010cb00c8bac6a35f3fad9fa54d2e4cab2a38ef/comments", "author": {"login": "bobduff", "id": 29099567, "node_id": "MDQ6VXNlcjI5MDk5NTY3", "avatar_url": "https://avatars.githubusercontent.com/u/29099567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bobduff", "html_url": "https://github.com/bobduff", "followers_url": "https://api.github.com/users/bobduff/followers", "following_url": "https://api.github.com/users/bobduff/following{/other_user}", "gists_url": "https://api.github.com/users/bobduff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bobduff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bobduff/subscriptions", "organizations_url": "https://api.github.com/users/bobduff/orgs", "repos_url": "https://api.github.com/users/bobduff/repos", "events_url": "https://api.github.com/users/bobduff/events{/privacy}", "received_events_url": "https://api.github.com/users/bobduff/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "70b29d02f460ecfeed4456677626d518444bcc3d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70b29d02f460ecfeed4456677626d518444bcc3d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/70b29d02f460ecfeed4456677626d518444bcc3d"}], "stats": {"total": 59, "additions": 38, "deletions": 21}, "files": [{"sha": "a225cf367ee4521f80a533032f321cd97ebf7be3", "filename": "gcc/ada/par-ch3.adb", "status": "modified", "additions": 38, "deletions": 21, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1010cb00c8bac6a35f3fad9fa54d2e4cab2a38ef/gcc%2Fada%2Fpar-ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1010cb00c8bac6a35f3fad9fa54d2e4cab2a38ef/gcc%2Fada%2Fpar-ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch3.adb?ref=1010cb00c8bac6a35f3fad9fa54d2e4cab2a38ef", "patch": "@@ -4201,14 +4201,6 @@ package body Ch3 is\n    function P_Access_Type_Definition\n      (Header_Already_Parsed : Boolean := False) return Node_Id\n    is\n-      Access_Loc       : constant Source_Ptr := Token_Ptr;\n-      Prot_Flag        : Boolean;\n-      Not_Null_Present : Boolean := False;\n-      Not_Null_Subtype : Boolean := False;\n-      Type_Def_Node    : Node_Id;\n-      Result_Not_Null  : Boolean;\n-      Result_Node      : Node_Id;\n-\n       procedure Check_Junk_Subprogram_Name;\n       --  Used in access to subprogram definition cases to check for an\n       --  identifier or operator symbol that does not belong.\n@@ -4235,22 +4227,32 @@ package body Ch3 is\n          end if;\n       end Check_Junk_Subprogram_Name;\n \n+      Access_Loc           : constant Source_Ptr := Token_Ptr;\n+      Prot_Flag            : Boolean;\n+      Not_Null_Present     : Boolean := False;\n+      Not_Null_Subtype     : Boolean := False;\n+      Not_Null_Subtype_Loc : Source_Ptr; -- loc of second \"not null\"\n+      Type_Def_Node        : Node_Id;\n+      Result_Not_Null      : Boolean;\n+      Result_Node          : Node_Id;\n+\n    --  Start of processing for P_Access_Type_Definition\n \n    begin\n       if not Header_Already_Parsed then\n-\n-         --  NOT NULL ACCESS .. is a common form of access definition.\n-         --  ACCESS NOT NULL ..  is certainly rare, but syntactically legal.\n-         --  NOT NULL ACCESS NOT NULL .. is rarer yet, and also legal.\n-         --  The last two cases are only meaningful if the following subtype\n-         --  indication denotes an access type (semantic check). The flag\n-         --  Not_Null_Subtype indicates that this second null exclusion is\n-         --  present in the access type definition.\n-\n-         Not_Null_Present := P_Null_Exclusion;     --  Ada 2005 (AI-231)\n+         --  NOT NULL ACCESS... is a common form of access definition. ACCESS\n+         --  NOT NULL... is certainly rare, but syntactically legal. NOT NULL\n+         --  ACCESS NOT NULL... is rarer yet, and also legal. The last two\n+         --  cases are only meaningful if the following subtype indication\n+         --  denotes an access type. We check below for \"not null procedure\"\n+         --  and \"not null function\"; in the access-to-object case it is a\n+         --  semantic check. The flag Not_Null_Subtype indicates that this\n+         --  second null exclusion is present in the access type definition.\n+\n+         Not_Null_Present := P_Null_Exclusion; --  Ada 2005 (AI-231)\n          Scan; -- past ACCESS\n-         Not_Null_Subtype := P_Null_Exclusion;     --  Might also appear\n+         Not_Null_Subtype_Loc := Token_Ptr;\n+         Not_Null_Subtype := P_Null_Exclusion; --  Might also appear\n       end if;\n \n       if Token_Name = Name_Protected then\n@@ -4269,6 +4271,20 @@ package body Ch3 is\n          end if;\n       end if;\n \n+      --  Access-to-subprogram case\n+\n+      if Token in Tok_Procedure | Tok_Function then\n+\n+         --  Check for \"not null [protected] procedure\" and \"not null\n+         --  [protected] function\".\n+\n+         if Not_Null_Subtype then\n+            Error_Msg\n+              (\"null exclusion must apply to access type\",\n+               Not_Null_Subtype_Loc);\n+         end if;\n+      end if;\n+\n       if Token = Tok_Procedure then\n          if Ada_Version = Ada_83 then\n             Error_Msg_SC (\"(Ada 83) access to procedure not allowed!\");\n@@ -4317,9 +4333,10 @@ package body Ch3 is\n \n          Set_Result_Definition (Type_Def_Node, Result_Node);\n \n+      --  Access-to-object case\n+\n       else\n-         Type_Def_Node :=\n-           New_Node (N_Access_To_Object_Definition, Access_Loc);\n+         Type_Def_Node := New_Node (N_Access_To_Object_Definition, Access_Loc);\n          Set_Null_Exclusion_Present (Type_Def_Node, Not_Null_Present);\n          Set_Null_Excluding_Subtype (Type_Def_Node, Not_Null_Subtype);\n "}]}