{"sha": "52ce50d6c59c31454eacf47d6ac70eb3262d08d2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTJjZTUwZDZjNTljMzE0NTRlYWNmNDdkNmFjNzBlYjMyNjJkMDhkMg==", "commit": {"author": {"name": "Andrew Stubbs", "email": "ams@codesourcery.com", "date": "2020-11-11T12:50:34Z"}, "committer": {"name": "Andrew Stubbs", "email": "ams@codesourcery.com", "date": "2020-11-25T13:55:45Z"}, "message": "Fix atomic_capture-1.f90 testcase\n\nThe testcase had invalid assumptions about which loop iterations would run\nfirst and last.\n\nlibgomp/ChangeLog\n\n\t* testsuite/libgomp.oacc-fortran/atomic_capture-1.f90 (main): Adjust\n\texpected results.", "tree": {"sha": "c7408abe5344dfde7d3df8d0d5d6fddf05f389f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c7408abe5344dfde7d3df8d0d5d6fddf05f389f1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/52ce50d6c59c31454eacf47d6ac70eb3262d08d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52ce50d6c59c31454eacf47d6ac70eb3262d08d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/52ce50d6c59c31454eacf47d6ac70eb3262d08d2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52ce50d6c59c31454eacf47d6ac70eb3262d08d2/comments", "author": {"login": "ams-cs", "id": 2235130, "node_id": "MDQ6VXNlcjIyMzUxMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2235130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ams-cs", "html_url": "https://github.com/ams-cs", "followers_url": "https://api.github.com/users/ams-cs/followers", "following_url": "https://api.github.com/users/ams-cs/following{/other_user}", "gists_url": "https://api.github.com/users/ams-cs/gists{/gist_id}", "starred_url": "https://api.github.com/users/ams-cs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ams-cs/subscriptions", "organizations_url": "https://api.github.com/users/ams-cs/orgs", "repos_url": "https://api.github.com/users/ams-cs/repos", "events_url": "https://api.github.com/users/ams-cs/events{/privacy}", "received_events_url": "https://api.github.com/users/ams-cs/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ams-cs", "id": 2235130, "node_id": "MDQ6VXNlcjIyMzUxMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2235130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ams-cs", "html_url": "https://github.com/ams-cs", "followers_url": "https://api.github.com/users/ams-cs/followers", "following_url": "https://api.github.com/users/ams-cs/following{/other_user}", "gists_url": "https://api.github.com/users/ams-cs/gists{/gist_id}", "starred_url": "https://api.github.com/users/ams-cs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ams-cs/subscriptions", "organizations_url": "https://api.github.com/users/ams-cs/orgs", "repos_url": "https://api.github.com/users/ams-cs/repos", "events_url": "https://api.github.com/users/ams-cs/events{/privacy}", "received_events_url": "https://api.github.com/users/ams-cs/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a46fa6510d24f4edcfd13dace9f7a0b4d86b86be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a46fa6510d24f4edcfd13dace9f7a0b4d86b86be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a46fa6510d24f4edcfd13dace9f7a0b4d86b86be"}], "stats": {"total": 38, "additions": 19, "deletions": 19}, "files": [{"sha": "0b923d5c5bfbb5eaf2709beb867300433f722bac", "filename": "libgomp/testsuite/libgomp.oacc-fortran/atomic_capture-1.f90", "status": "modified", "additions": 19, "deletions": 19, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52ce50d6c59c31454eacf47d6ac70eb3262d08d2/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fatomic_capture-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52ce50d6c59c31454eacf47d6ac70eb3262d08d2/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fatomic_capture-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fatomic_capture-1.f90?ref=52ce50d6c59c31454eacf47d6ac70eb3262d08d2", "patch": "@@ -299,7 +299,7 @@ program main\n   ! At most one iarr element can be 0.\n   do i = 1, N\n      if ((iarr(i) == 0 .and. i /= itmp) &\n-         .or. iarr(i) < 0 .or. iarr(i) >= N) STOP 35\n+         .or. iarr(i) < 0 .or. iarr(i) > N) STOP 35\n   end do\n   if (igot /= iexp) STOP 36\n \n@@ -336,7 +336,7 @@ program main\n \n   !$acc parallel loop copy (igot, itmp)\n     do i = 0, N - 1\n-      iexpr = ibclr (-2, i)\n+      iexpr = ibclr (-1, i)\n   !$acc atomic capture\n       iarr(i) = igot\n       igot = iand (igot, iexpr)\n@@ -345,7 +345,7 @@ program main\n   !$acc end parallel loop\n \n   do i = 1, N\n-     if (.not. (iarr(i - 1) < 0)) STOP 39\n+     if (.not. (popcnt(iarr(i - 1)) > 0)) STOP 39\n   end do\n   if (igot /= iexp) STOP 40\n \n@@ -363,7 +363,7 @@ program main\n   !$acc end parallel loop\n \n   do i = 1, N\n-     if (.not. (iarr(i - 1) >= 0)) STOP 41\n+     if (.not. (popcnt(iarr(i - 1)) < 32)) STOP 41\n   end do\n   if (igot /= iexp) STOP 42\n \n@@ -381,7 +381,7 @@ program main\n   !$acc end parallel loop\n \n   do i = 1, N\n-     if (.not. (iarr(i - 1) < 0)) STOP 43\n+     if (.not. (popcnt(iarr(i - 1)) > 0)) STOP 43\n   end do\n   if (igot /= iexp) STOP 44\n \n@@ -398,7 +398,7 @@ program main\n   !$acc end parallel loop\n \n   do i = 1, N\n-     if (.not. (1 <= iarr(i) .and. iarr(i) < iexp)) STOP 45\n+     if (.not. (1 <= iarr(i) .and. iarr(i) <= iexp)) STOP 45\n   end do\n   if (igot /= iexp) STOP 46\n \n@@ -415,7 +415,7 @@ program main\n   !$acc end parallel loop\n \n   do i = 1, N\n-     if (.not. (iarr(i) == 1 .or. iarr(i) == N)) STOP 47\n+     if (.not. (iarr(i) >= 1 .or. iarr(i) <= N)) STOP 47\n   end do\n   if (igot /= iexp) STOP 48\n \n@@ -424,7 +424,7 @@ program main\n \n   !$acc parallel loop copy (igot, itmp)\n     do i = 0, N - 1\n-      iexpr = ibclr (-2, i)\n+      iexpr = ibclr (-1, i)\n   !$acc atomic capture\n       iarr(i) = igot\n       igot = iand (iexpr, igot)\n@@ -433,7 +433,7 @@ program main\n   !$acc end parallel loop\n \n   do i = 1, N\n-     if (.not. (iarr(i - 1) < 0)) STOP 49\n+     if (.not. (popcnt(iarr(i - 1)) > 0)) STOP 49\n   end do\n   if (igot /= iexp) STOP 50\n \n@@ -451,7 +451,7 @@ program main\n   !$acc end parallel loop\n \n   do i = 1, N\n-     if (.not. (iarr(i - 1) >= 0)) STOP 51\n+     if (.not. (popcnt(iarr(i - 1)) < 32)) STOP 51\n   end do\n   if (igot /= iexp) STOP 52\n \n@@ -469,7 +469,7 @@ program main\n   !$acc end parallel loop\n \n   do i = 1, N\n-     if (.not. (iarr(i - 1) < 0)) STOP 53\n+     if (.not. (popcnt(iarr(i - 1)) > 0)) STOP 53\n   end do\n   if (igot /= iexp) STOP 54\n \n@@ -755,7 +755,7 @@ program main\n   !$acc end parallel loop\n \n   do i = 1, N\n-     if (.not. (iarr(i) == iexp)) STOP 89\n+     if (.not. (iarr(i) <= i)) STOP 89\n   end do\n   if (igot /= iexp) STOP 90\n \n@@ -773,7 +773,7 @@ program main\n   !$acc end parallel loop\n \n   do i = 1, N\n-     if (.not. (iarr(i - 1) <= 0)) STOP 91\n+     if (.not. (popcnt(iarr(i - 1)) < 32)) STOP 91\n   end do\n   if (igot /= iexp) STOP 92\n \n@@ -791,7 +791,7 @@ program main\n   !$acc end parallel loop\n \n   do i = 1, N\n-     if (.not. (iarr(i - 1) >= -1)) STOP 93\n+     if (.not. (popcnt(iarr(i - 1)) > 0)) STOP 93\n   end do\n   if (igot /= iexp) STOP 94\n \n@@ -809,7 +809,7 @@ program main\n   !$acc end parallel loop\n \n   do i = 1, N\n-     if (.not. (iarr(i - 1) <= 0)) STOP 95\n+     if (.not. (popcnt(iarr(i - 1)) < 32)) STOP 95\n   end do\n   if (igot /= iexp) STOP 96\n \n@@ -843,7 +843,7 @@ program main\n   !$acc end parallel loop\n \n   do i = 1, N\n-     if (.not. (iarr(i) == iexp )) STOP 99\n+     if (.not. (iarr(i) <= i)) STOP 99\n   end do\n   if (igot /= iexp) STOP 100\n \n@@ -861,7 +861,7 @@ program main\n   !$acc end parallel loop\n \n   do i = 1, N\n-     if (.not. (iarr(i - 1) <= 0)) STOP 101\n+     if (.not. (popcnt(iarr(i - 1)) < 32)) STOP 101\n   end do\n   if (igot /= iexp) STOP 102\n \n@@ -879,7 +879,7 @@ program main\n   !$acc end parallel loop\n \n   do i = 1, N\n-     if (.not. (iarr(i - 1) >= iexp)) STOP 103\n+     if (.not. (popcnt(iarr(i - 1)) > 0)) STOP 103\n   end do\n   if (igot /= iexp) STOP 104\n \n@@ -897,7 +897,7 @@ program main\n   !$acc end parallel loop\n \n   do i = 1, N\n-     if (.not. (iarr(i - 1) <= iexp)) STOP 105\n+     if (.not. (popcnt(iarr(i - 1)) < 32)) STOP 105\n   end do\n   if (igot /= iexp) STOP 106\n "}]}