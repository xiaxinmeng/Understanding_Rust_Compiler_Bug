{"sha": "742f66e7367369abaefd2a5f8d1f7de448f1b997", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzQyZjY2ZTczNjczNjlhYmFlZmQyYTVmOGQxZjdkZTQ0OGYxYjk5Nw==", "commit": {"author": {"name": "Marc Glisse", "email": "marc.glisse@inria.fr", "date": "2014-04-11T18:57:59Z"}, "committer": {"name": "Marc Glisse", "email": "glisse@gcc.gnu.org", "date": "2014-04-11T18:57:59Z"}, "message": "complex (__complex_exp, pow): Specify the template parameter in calls to std::polar, for expression templates.\n\n2014-04-11  Marc Glisse  <marc.glisse@inria.fr>\n\n\t* include/std/complex (__complex_exp, pow): Specify the template\n\tparameter in calls to std::polar, for expression templates.\n\nFrom-SVN: r209321", "tree": {"sha": "0b605ce6ca2df0e0fa8c1f9dca1584723dc1a75f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0b605ce6ca2df0e0fa8c1f9dca1584723dc1a75f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/742f66e7367369abaefd2a5f8d1f7de448f1b997", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/742f66e7367369abaefd2a5f8d1f7de448f1b997", "html_url": "https://github.com/Rust-GCC/gccrs/commit/742f66e7367369abaefd2a5f8d1f7de448f1b997", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/742f66e7367369abaefd2a5f8d1f7de448f1b997/comments", "author": {"login": "mglisse", "id": 10097863, "node_id": "MDQ6VXNlcjEwMDk3ODYz", "avatar_url": "https://avatars.githubusercontent.com/u/10097863?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mglisse", "html_url": "https://github.com/mglisse", "followers_url": "https://api.github.com/users/mglisse/followers", "following_url": "https://api.github.com/users/mglisse/following{/other_user}", "gists_url": "https://api.github.com/users/mglisse/gists{/gist_id}", "starred_url": "https://api.github.com/users/mglisse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mglisse/subscriptions", "organizations_url": "https://api.github.com/users/mglisse/orgs", "repos_url": "https://api.github.com/users/mglisse/repos", "events_url": "https://api.github.com/users/mglisse/events{/privacy}", "received_events_url": "https://api.github.com/users/mglisse/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d9bb58007e769e747896eb134370d08d8e250123", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9bb58007e769e747896eb134370d08d8e250123", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d9bb58007e769e747896eb134370d08d8e250123"}], "stats": {"total": 13, "additions": 9, "deletions": 4}, "files": [{"sha": "1af136e639badc097fb9adff1a0ece742d37e5c3", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/742f66e7367369abaefd2a5f8d1f7de448f1b997/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/742f66e7367369abaefd2a5f8d1f7de448f1b997/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=742f66e7367369abaefd2a5f8d1f7de448f1b997", "patch": "@@ -1,3 +1,8 @@\n+2014-04-11  Marc Glisse  <marc.glisse@inria.fr>\n+\n+\t* include/std/complex (__complex_exp, pow): Specify the template\n+\tparameter in calls to std::polar, for expression templates.\n+\n 2014-04-10  Andreas Schwab  <schwab@suse.de>\n \n \t* config/abi/post/alpha-linux-gnu/baseline_symbols.txt: Remove TLS"}, {"sha": "5849cd5e80615b77e7f3bc64fbd514c3c3b14812", "filename": "libstdc++-v3/include/std/complex", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/742f66e7367369abaefd2a5f8d1f7de448f1b997/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcomplex", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/742f66e7367369abaefd2a5f8d1f7de448f1b997/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcomplex", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcomplex?ref=742f66e7367369abaefd2a5f8d1f7de448f1b997", "patch": "@@ -735,7 +735,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   template<typename _Tp>\n     inline complex<_Tp>\n     __complex_exp(const complex<_Tp>& __z)\n-    { return std::polar(exp(__z.real()), __z.imag()); }\n+    { return std::polar<_Tp>(exp(__z.real()), __z.imag()); }\n \n #if _GLIBCXX_USE_C99_COMPLEX\n   inline __complex__ float\n@@ -995,7 +995,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n         return pow(__x.real(), __y);\n \n       complex<_Tp> __t = std::log(__x);\n-      return std::polar(exp(__y * __t.real()), __y * __t.imag());\n+      return std::polar<_Tp>(exp(__y * __t.real()), __y * __t.imag());\n     }\n \n   template<typename _Tp>\n@@ -1032,8 +1032,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     inline complex<_Tp>\n     pow(const _Tp& __x, const complex<_Tp>& __y)\n     {\n-      return __x > _Tp() ? std::polar(pow(__x, __y.real()),\n-\t\t\t\t      __y.imag() * log(__x))\n+      return __x > _Tp() ? std::polar<_Tp>(pow(__x, __y.real()),\n+\t\t\t\t\t   __y.imag() * log(__x))\n \t                 : std::pow(complex<_Tp>(__x), __y);\n     }\n "}]}