{"sha": "0d73e4800df6451f57e67f87c6d602c47e2a0f50", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGQ3M2U0ODAwZGY2NDUxZjU3ZTY3Zjg3YzZkNjAyYzQ3ZTJhMGY1MA==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2016-06-09T11:38:23Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2016-06-09T11:38:23Z"}, "message": "Add sorting support to analyze_brprob script\n\n\t* analyze_brprob.py: Add new argument --sorting.\n\nFrom-SVN: r237256", "tree": {"sha": "35fec44c87149fecd4daea60a7015ed6cfeb503e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/35fec44c87149fecd4daea60a7015ed6cfeb503e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0d73e4800df6451f57e67f87c6d602c47e2a0f50", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d73e4800df6451f57e67f87c6d602c47e2a0f50", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d73e4800df6451f57e67f87c6d602c47e2a0f50", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d73e4800df6451f57e67f87c6d602c47e2a0f50/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e49efc14a17f32b2801dfa481081a0cabc083fe7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e49efc14a17f32b2801dfa481081a0cabc083fe7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e49efc14a17f32b2801dfa481081a0cabc083fe7"}], "stats": {"total": 30, "additions": 23, "deletions": 7}, "files": [{"sha": "8017e48d9a1e6c9e0202fd7e28ac7eb1cf64eaed", "filename": "contrib/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d73e4800df6451f57e67f87c6d602c47e2a0f50/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d73e4800df6451f57e67f87c6d602c47e2a0f50/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=0d73e4800df6451f57e67f87c6d602c47e2a0f50", "patch": "@@ -1,3 +1,7 @@\n+2016-06-09  Martin Liska  <mliska@suse.cz>\n+\n+\t* analyze_brprob.py: Add new argument --sorting.\n+\n 2016-06-09  Martin Liska  <mliska@suse.cz>\n \n \t* analyze_brprob.py: Cover new dump output format."}, {"sha": "9808c46de16c4c9f87a0adb50f56f17f7ff4933e", "filename": "contrib/analyze_brprob.py", "status": "modified", "additions": 19, "deletions": 7, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d73e4800df6451f57e67f87c6d602c47e2a0f50/contrib%2Fanalyze_brprob.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d73e4800df6451f57e67f87c6d602c47e2a0f50/contrib%2Fanalyze_brprob.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fanalyze_brprob.py?ref=0d73e4800df6451f57e67f87c6d602c47e2a0f50", "patch": "@@ -65,6 +65,7 @@\n import sys\n import os\n import re\n+import argparse\n \n def percentage(a, b):\n     return 100.0 * a / b\n@@ -77,6 +78,9 @@ def __init__(self, name):\n         self.hits = 0\n         self.fits = 0\n \n+    def get_hitrate(self):\n+        return self.hits / self.count\n+\n     def count_formatted(self):\n         v = self.count\n         for unit in ['','K','M','G','T','P','E','Z']:\n@@ -108,22 +112,30 @@ def branches_max(self):\n     def count_max(self):\n         return max([v.count for k, v in self.heuristics.items()])\n \n-    def dump(self):\n+    def dump(self, sorting):\n+        sorter = lambda x: x[1].branches\n+        if sorting == 'hitrate':\n+            sorter = lambda x: x[1].get_hitrate()\n+        elif sorting == 'coverage':\n+            sorter = lambda x: x[1].count\n+\n         print('%-36s %8s %6s  %-16s %14s %8s %6s' % ('HEURISTICS', 'BRANCHES', '(REL)',\n               'HITRATE', 'COVERAGE', 'COVERAGE', '(REL)'))\n-        for (k, v) in sorted(self.heuristics.items(), key = lambda x: x[1].branches):\n+        for (k, v) in sorted(self.heuristics.items(), key = sorter):\n             print('%-36s %8i %5.1f%% %6.2f%% / %6.2f%% %14i %8s %5.1f%%' %\n             (k, v.branches, percentage(v.branches, self.branches_max ()),\n              percentage(v.hits, v.count), percentage(v.fits, v.count),\n              v.count, v.count_formatted(), percentage(v.count, self.count_max()) ))\n \n-if len(sys.argv) != 2:\n-    print('Usage: ./analyze_brprob.py dump_file')\n-    exit(1)\n+parser = argparse.ArgumentParser()\n+parser.add_argument('dump_file', metavar = 'dump_file', help = 'IPA profile dump file')\n+parser.add_argument('-s', '--sorting', dest = 'sorting', choices = ['branches', 'hitrate', 'coverage'], default = 'branches')\n+\n+args = parser.parse_args()\n \n profile = Profile(sys.argv[1])\n r = re.compile('  (.*) heuristics( of edge [0-9]*->[0-9]*)?( \\\\(.*\\\\))?: (.*)%.*exec ([0-9]*) hit ([0-9]*)')\n-for l in open(profile.filename).readlines():\n+for l in open(args.dump_file).readlines():\n     m = r.match(l)\n     if m != None and m.group(3) == None:\n         name = m.group(1)\n@@ -133,4 +145,4 @@ def dump(self):\n \n         profile.add(name, prediction, count, hits)\n \n-profile.dump()\n+profile.dump(args.sorting)"}]}