{"sha": "655441d6015134c86c596ba28d079eb6c43b64bf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjU1NDQxZDYwMTUxMzRjODZjNTk2YmEyOGQwNzllYjZjNDNiNjRiZg==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2016-01-11T18:03:15Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2016-01-11T18:03:15Z"}, "message": "PR c++/68795: fix uninitialized close_paren_loc in cp_parser_postfix_expression\n\ngcc/cp/ChangeLog:\n\tPR c++/68795\n\t* parser.c (cp_parser_postfix_expression): Initialize\n\tclose_paren_loc to UNKNOWN_LOCATION; only use it if\n\tit has been written to by\n\tcp_parser_parenthesized_expression_list.\n\t(cp_parser_parenthesized_expression_list): Document the behavior\n\twith respect to the CLOSE_PAREN_LOC param.\n\nFrom-SVN: r232238", "tree": {"sha": "924047779f9445c7d5f96637e1ba594a1dcf6408", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/924047779f9445c7d5f96637e1ba594a1dcf6408"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/655441d6015134c86c596ba28d079eb6c43b64bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/655441d6015134c86c596ba28d079eb6c43b64bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/655441d6015134c86c596ba28d079eb6c43b64bf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/655441d6015134c86c596ba28d079eb6c43b64bf/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9cb6bd7432547275c336b7dab5dd4db7a689eabb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9cb6bd7432547275c336b7dab5dd4db7a689eabb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9cb6bd7432547275c336b7dab5dd4db7a689eabb"}], "stats": {"total": 28, "additions": 22, "deletions": 6}, "files": [{"sha": "023ed6489b0ab9c0139c67f63d2f1fbdb4be7ab6", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/655441d6015134c86c596ba28d079eb6c43b64bf/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/655441d6015134c86c596ba28d079eb6c43b64bf/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=655441d6015134c86c596ba28d079eb6c43b64bf", "patch": "@@ -1,3 +1,13 @@\n+2016-01-11  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR c++/68795\n+\t* parser.c (cp_parser_postfix_expression): Initialize\n+\tclose_paren_loc to UNKNOWN_LOCATION; only use it if\n+\tit has been written to by\n+\tcp_parser_parenthesized_expression_list.\n+\t(cp_parser_parenthesized_expression_list): Document the behavior\n+\twith respect to the CLOSE_PAREN_LOC param.\n+\n 2016-01-11  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/69211"}, {"sha": "13ed1ef0c53c2c0f6060e9569ef37dd1b495c188", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/655441d6015134c86c596ba28d079eb6c43b64bf/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/655441d6015134c86c596ba28d079eb6c43b64bf/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=655441d6015134c86c596ba28d079eb6c43b64bf", "patch": "@@ -6717,7 +6717,7 @@ cp_parser_postfix_expression (cp_parser *parser, bool address_p, bool cast_p,\n \t    bool saved_non_integral_constant_expression_p = false;\n \t    tsubst_flags_t complain = complain_flags (decltype_p);\n \t    vec<tree, va_gc> *args;\n-\t    location_t close_paren_loc;\n+\t    location_t close_paren_loc = UNKNOWN_LOCATION;\n \n             is_member_access = false;\n \n@@ -6879,10 +6879,13 @@ cp_parser_postfix_expression (cp_parser *parser, bool address_p, bool cast_p,\n \t\t\t\t    koenig_p,\n \t\t\t\t    complain);\n \n-\t    location_t combined_loc = make_location (token->location,\n-\t\t\t\t\t\t     start_loc,\n-\t\t\t\t\t\t     close_paren_loc);\n-\t    postfix_expression.set_location (combined_loc);\n+\t    if (close_paren_loc != UNKNOWN_LOCATION)\n+\t      {\n+\t\tlocation_t combined_loc = make_location (token->location,\n+\t\t\t\t\t\t\t start_loc,\n+\t\t\t\t\t\t\t close_paren_loc);\n+\t\tpostfix_expression.set_location (combined_loc);\n+\t      }\n \n \t    /* The POSTFIX_EXPRESSION is certainly no longer an id.  */\n \t    idk = CP_ID_KIND_NONE;\n@@ -7351,7 +7354,10 @@ cp_parser_postfix_dot_deref_expression (cp_parser *parser,\n    plain identifier argument, normal_attr for an attribute that wants\n    an expression, or non_attr if we aren't parsing an attribute list.  If\n    NON_CONSTANT_P is non-NULL, *NON_CONSTANT_P indicates whether or\n-   not all of the expressions in the list were constant.  */\n+   not all of the expressions in the list were constant.\n+   If CLOSE_PAREN_LOC is non-NULL, and no errors occur, then *CLOSE_PAREN_LOC\n+   will be written to with the location of the closing parenthesis.  If\n+   an error occurs, it may or may not be written to.  */\n \n static vec<tree, va_gc> *\n cp_parser_parenthesized_expression_list (cp_parser* parser,"}]}