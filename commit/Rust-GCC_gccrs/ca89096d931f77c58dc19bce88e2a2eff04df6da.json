{"sha": "ca89096d931f77c58dc19bce88e2a2eff04df6da", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2E4OTA5NmQ5MzFmNzdjNThkYzE5YmNlODhlMmEyZWZmMDRkZjZkYQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2009-06-30T14:57:54Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2009-06-30T14:57:54Z"}, "message": "Revert accidental commit.\n\nFrom-SVN: r149102", "tree": {"sha": "e20e308a9d7f7d50807b4ce224b83aaad463eec3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e20e308a9d7f7d50807b4ce224b83aaad463eec3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ca89096d931f77c58dc19bce88e2a2eff04df6da", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca89096d931f77c58dc19bce88e2a2eff04df6da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca89096d931f77c58dc19bce88e2a2eff04df6da", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca89096d931f77c58dc19bce88e2a2eff04df6da/comments", "author": null, "committer": null, "parents": [{"sha": "2de58650f962e371b06f00bdefd0b01b5f7e3f6a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2de58650f962e371b06f00bdefd0b01b5f7e3f6a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2de58650f962e371b06f00bdefd0b01b5f7e3f6a"}], "stats": {"total": 11, "additions": 1, "deletions": 10}, "files": [{"sha": "4c7c0db12b6947e54c6c8a41e2d6a88ef7772965", "filename": "gcc/tree-cfg.c", "status": "modified", "additions": 1, "deletions": 10, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca89096d931f77c58dc19bce88e2a2eff04df6da/gcc%2Ftree-cfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca89096d931f77c58dc19bce88e2a2eff04df6da/gcc%2Ftree-cfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.c?ref=ca89096d931f77c58dc19bce88e2a2eff04df6da", "patch": "@@ -5131,17 +5131,8 @@ gimple_move_block_after (basic_block bb, basic_block after)\n /* Return true if basic_block can be duplicated.  */\n \n static bool\n-gimple_can_duplicate_bb_p (const_basic_block bb)\n+gimple_can_duplicate_bb_p (const_basic_block bb ATTRIBUTE_UNUSED)\n {\n-  gimple_stmt_iterator gsi = gsi_last_bb (bb);\n-\n-  /* RTL expander has quite artificial limitation to at most one RESX instruction\n-     per region.  It can be fixed by turning 1-1 map to 1-many map, but since the\n-     code needs to be rewritten to gimple level lowering and there is little reason\n-     for duplicating RESX instructions in order to optimize code performance, we\n-     just disallow it for the moment.  */\n-  if (!gsi_end_p (gsi) && gimple_code (gsi_stmt (gsi)) == GIMPLE_RESX)\n-    return false;\n   return true;\n }\n "}]}