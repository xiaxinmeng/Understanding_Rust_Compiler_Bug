{"sha": "ef0f4a034d93e79a27c570aaff6a6b7180f4b0c2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWYwZjRhMDM0ZDkzZTc5YTI3YzU3MGFhZmY2YTZiNzE4MGY0YjBjMg==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2010-04-09T21:12:42Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2010-04-09T21:12:42Z"}, "message": "re PR target/43707 (gcc.c-torture/execute/ashldi-1.c)\n\n\tPR target/43707\n\tPR target/43709\n\t* config/i386/i386.md (*ashl<mode>3_doubleword): Split to insn\n\tand splitter pattern.  Change splitter operand 1 predicate to\n\tnonmemory_operand.\n\nFrom-SVN: r158177", "tree": {"sha": "e4a1b080813e247d1dfc3ec6881a358dc0ab572f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e4a1b080813e247d1dfc3ec6881a358dc0ab572f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ef0f4a034d93e79a27c570aaff6a6b7180f4b0c2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef0f4a034d93e79a27c570aaff6a6b7180f4b0c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef0f4a034d93e79a27c570aaff6a6b7180f4b0c2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef0f4a034d93e79a27c570aaff6a6b7180f4b0c2/comments", "author": null, "committer": null, "parents": [{"sha": "add5d9980add8cddbfb8079a800e11b1ec640761", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/add5d9980add8cddbfb8079a800e11b1ec640761", "html_url": "https://github.com/Rust-GCC/gccrs/commit/add5d9980add8cddbfb8079a800e11b1ec640761"}], "stats": {"total": 33, "additions": 23, "deletions": 10}, "files": [{"sha": "74c2c327cf87f083312624b53cfd0c4da88645cd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 6, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef0f4a034d93e79a27c570aaff6a6b7180f4b0c2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef0f4a034d93e79a27c570aaff6a6b7180f4b0c2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ef0f4a034d93e79a27c570aaff6a6b7180f4b0c2", "patch": "@@ -1,3 +1,11 @@\n+2010-04-09  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/43707\n+\tPR target/43709\n+\t* config/i386/i386.md (*ashl<mode>3_doubleword): Split to insn\n+\tand splitter pattern.  Change splitter operand 1 predicate to\n+\tnonmemory_operand.\n+\n 2010-04-09  Martin Jambor  <mjambor@suse.cz>\n \n \t* ipa-cp.c (ipcp_lats_are_equal): Return true also if the two\n@@ -6,7 +14,7 @@\n \t* ipa-prop.c (ipa_print_node_jump_functions): Likewise.\n \n 2010-04-09  Eric Botcazou  <ebotcazou@adacore.com>\n-            Bernd Schmidt  <bernd.schmidt@codesourcery.com>\n+\t    Bernd Schmidt  <bernd.schmidt@codesourcery.com>\n \n \t* loop-invariant.c (replace_uses): New static function.\n \t(move_invariant_reg): Use it to ensure we can replace the uses.\n@@ -37,8 +45,7 @@\n \n 2010-04-09  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n-\t* config/sparc/sol2-gld.h: Remove SPARC reference.\n-\tRename ...\n+\t* config/sparc/sol2-gld.h: Remove SPARC reference.  Rename ...\n \t* config/sol2-gld.h: ... here.\n \t* config.gcc (sparc*-*-solaris2*): Reflect this.\n \t(i[34567]86-*-solaris2*): Use it.\n@@ -80,15 +87,15 @@\n 2010-04-09  Iain Sandoe  <iains@gcc.gnu.org>\n \n \tPR bootstrap/43684\n-\t* varasm.c (default_assemble_visibility): Wrap vars that are \n+\t* varasm.c (default_assemble_visibility): Wrap vars that are\n \tset, but unused, by targets without GAS.\n-\t* config/rs6000/rs6000.c: (paired_emit_vector_compare): \n+\t* config/rs6000/rs6000.c: (paired_emit_vector_compare):\n \tRemove set, but unused, vars.\n \t(rs6000_legitimize_tls_address): Likewise.\n \t(altivec_expand_dst_builtin): Likewise.\n \t* config/darwin.c (machopic_classify_symbol): Likewise.\n \t(machopic_indirection_name): Likewise.\n-\t\n+\n 2010-04-09  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/i386.md (DWI): New mode iterator."}, {"sha": "25daeff83255d2e8bf13d0afb816ca811532b848", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef0f4a034d93e79a27c570aaff6a6b7180f4b0c2/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef0f4a034d93e79a27c570aaff6a6b7180f4b0c2/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=ef0f4a034d93e79a27c570aaff6a6b7180f4b0c2", "patch": "@@ -9560,17 +9560,23 @@\n   \"\"\n   \"ix86_expand_binary_operator (ASHIFT, <MODE>mode, operands); DONE;\")\n \n-(define_insn_and_split \"*ashl<mode>3_doubleword\"\n+(define_insn \"*ashl<mode>3_doubleword\"\n   [(set (match_operand:DWI 0 \"register_operand\" \"=&r,r\")\n \t(ashift:DWI (match_operand:DWI 1 \"reg_or_pm1_operand\" \"n,0\")\n \t\t    (match_operand:QI 2 \"nonmemory_operand\" \"<S>c,<S>c\")))\n    (clobber (reg:CC FLAGS_REG))]\n-  \"ix86_binary_operator_ok (ASHIFT, <MODE>mode, operands)\"\n+  \"\"\n   \"#\"\n+  [(set_attr \"type\" \"multi\")])\n+\n+(define_split\n+  [(set (match_operand:DWI 0 \"register_operand\" \"\")\n+\t(ashift:DWI (match_operand:DWI 1 \"nonmemory_operand\" \"\")\n+\t\t    (match_operand:QI 2 \"nonmemory_operand\" \"\")))\n+   (clobber (reg:CC FLAGS_REG))]\n   \"(optimize && flag_peephole2) ? epilogue_completed : reload_completed\"\n   [(const_int 0)]\n-  \"ix86_split_ashl (operands, NULL_RTX, <MODE>mode); DONE;\"\n-  [(set_attr \"type\" \"multi\")])\n+  \"ix86_split_ashl (operands, NULL_RTX, <MODE>mode); DONE;\")\n \n ;; By default we don't ask for a scratch register, because when DWImode\n ;; values are manipulated, registers are already at a premium.  But if"}]}