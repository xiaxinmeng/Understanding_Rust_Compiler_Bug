{"sha": "962c0823997cba18cca85efec200b19fac8e2c87", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTYyYzA4MjM5OTdjYmExOGNjYTg1ZWZlYzIwMGIxOWZhYzhlMmM4Nw==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2004-01-06T00:52:10Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2004-01-06T00:52:10Z"}, "message": "re PR c++/12815 (Code compiled with optimization behaves unexpectedly)\n\n\tPR c++/12816\n\t* class.c (build_vtbl_ref_1): Do not unconditionally mark vtable\n\treferences as constant.\n\n\tPR c++/12815\n\t* g++.dg/rtti/typeid4.C: New test.\n\nFrom-SVN: r75457", "tree": {"sha": "cb82f8866a29849465ec023e201d87c0798f6f2a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cb82f8866a29849465ec023e201d87c0798f6f2a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/962c0823997cba18cca85efec200b19fac8e2c87", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/962c0823997cba18cca85efec200b19fac8e2c87", "html_url": "https://github.com/Rust-GCC/gccrs/commit/962c0823997cba18cca85efec200b19fac8e2c87", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/962c0823997cba18cca85efec200b19fac8e2c87/comments", "author": null, "committer": null, "parents": [{"sha": "96f7369ac5bf732d61804b130a633ebd79fbf166", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96f7369ac5bf732d61804b130a633ebd79fbf166", "html_url": "https://github.com/Rust-GCC/gccrs/commit/96f7369ac5bf732d61804b130a633ebd79fbf166"}], "stats": {"total": 37, "additions": 36, "deletions": 1}, "files": [{"sha": "b428cee8b4c47fbc7fa3352fbd5240728b6d50d9", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/962c0823997cba18cca85efec200b19fac8e2c87/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/962c0823997cba18cca85efec200b19fac8e2c87/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=962c0823997cba18cca85efec200b19fac8e2c87", "patch": "@@ -1,5 +1,9 @@\n 2004-01-05  Mark Mitchell  <mark@codesourcery.com>\n \n+\tPR c++/12816\n+\t* class.c (build_vtbl_ref_1): Do not unconditionally mark vtable\n+\treferences as constant.\n+\n \tPR c++/12132\n \t* parser.c (cp_parser_explicit_instantiation): Improve error\n \trecovery."}, {"sha": "31c6d2291d993749f602b61ddf562158e90c3e18", "filename": "gcc/cp/class.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/962c0823997cba18cca85efec200b19fac8e2c87/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/962c0823997cba18cca85efec200b19fac8e2c87/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=962c0823997cba18cca85efec200b19fac8e2c87", "patch": "@@ -455,7 +455,7 @@ build_vtbl_ref_1 (tree instance, tree idx)\n   assemble_external (vtbl);\n \n   aref = build_array_ref (vtbl, idx);\n-  TREE_CONSTANT (aref) = 1;\n+  TREE_CONSTANT (aref) |= TREE_CONSTANT (vtbl) && TREE_CONSTANT (idx);\n \n   return aref;\n }"}, {"sha": "d9c510868de3324c8f02c0cd9b0283a1d8dc6da4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/962c0823997cba18cca85efec200b19fac8e2c87/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/962c0823997cba18cca85efec200b19fac8e2c87/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=962c0823997cba18cca85efec200b19fac8e2c87", "patch": "@@ -1,3 +1,8 @@\n+2004-01-05  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tPR c++/12815\n+\t* g++.dg/rtti/typeid4.C: New test.\n+\n 2004-01-05  Eric Botcazou  <ebotcazou@libertysurf.fr>\n \n \t* gcc.dg/compat/sdata-section.h: Declare 'abort'."}, {"sha": "e6a1dce16f0e938cdf8fe748575f2f1a40135828", "filename": "gcc/testsuite/g++.dg/rtti/typeid4.C", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/962c0823997cba18cca85efec200b19fac8e2c87/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Frtti%2Ftypeid4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/962c0823997cba18cca85efec200b19fac8e2c87/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Frtti%2Ftypeid4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Frtti%2Ftypeid4.C?ref=962c0823997cba18cca85efec200b19fac8e2c87", "patch": "@@ -0,0 +1,26 @@\n+// { dg-do run }\n+// { dg-options \"-O2\" }\n+\n+#include <typeinfo>\n+#include <iostream>\n+\n+struct A { virtual ~A () {} };\n+\n+struct APtr\n+{ \n+  APtr (A* p)  : p_ (p) { }\n+  A& operator* () const { return *p_; }\n+  A* p_;\n+};\n+\n+int main ()\n+{ \n+  APtr ap (new A);\n+  std::type_info const* const exp = &typeid (*ap);\n+  for (bool cont = true; cont; cont = false)\n+    { \n+      std::cout << \"inner: cont \" << cont << std::endl;\n+      if (exp) ;\n+    }\n+}\n+"}]}