{"sha": "d923fe0f01c65cfef6e26645e01357196a634995", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDkyM2ZlMGYwMWM2NWNmZWY2ZTI2NjQ1ZTAxMzU3MTk2YTYzNDk5NQ==", "commit": {"author": {"name": "Sergey Melnikov", "email": "sergey.melnikov@intel.com", "date": "2012-07-16T10:00:37Z"}, "committer": {"name": "Kirill Yukhin", "email": "kyukhin@gcc.gnu.org", "date": "2012-07-16T10:00:37Z"}, "message": "i386.md (stack_protect_set): Disable the pattern for Android since Android libc (bionic) does not provide...\n\n2012-07-16 Sergey Melnikov <sergey.melnikov@intel.com>\n\n        * config/i386/i386.md (stack_protect_set): Disable the pattern\n        for Android since Android libc (bionic) does not provide random\n        value for stack protection guard at gs:0x14. Guard value\n        will be provided from external symbol (default implementation).\n        (stack_protect_set_<mode>): Likewise.\n        (stack_protect_test): Likewise.\n        (stack_protect_test_<mode>): Likewise.\n\nFrom-SVN: r189513", "tree": {"sha": "883d76bae4cf5284831e359cf87a37009b26d9aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/883d76bae4cf5284831e359cf87a37009b26d9aa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d923fe0f01c65cfef6e26645e01357196a634995", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d923fe0f01c65cfef6e26645e01357196a634995", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d923fe0f01c65cfef6e26645e01357196a634995", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d923fe0f01c65cfef6e26645e01357196a634995/comments", "author": null, "committer": null, "parents": [{"sha": "a14c200adce850fad77a9181fe4a642b86c2f123", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a14c200adce850fad77a9181fe4a642b86c2f123", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a14c200adce850fad77a9181fe4a642b86c2f123"}], "stats": {"total": 18, "additions": 14, "deletions": 4}, "files": [{"sha": "2decc3d7f13a804d72ac1aae148d1bf84dbd50aa", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d923fe0f01c65cfef6e26645e01357196a634995/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d923fe0f01c65cfef6e26645e01357196a634995/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d923fe0f01c65cfef6e26645e01357196a634995", "patch": "@@ -1,3 +1,13 @@\n+2012-07-16 Sergey Melnikov <sergey.melnikov@intel.com>\n+\n+\t* config/i386/i386.md (stack_protect_set): Disable the pattern\n+\tfor Android since Android libc (bionic) does not provide random\n+\tvalue for stack protection guard at gs:0x14. Guard value\n+\twill be provided from external symbol (default implementation).\n+\t(stack_protect_set_<mode>): Likewise.\n+\t(stack_protect_test): Likewise.\n+\t(stack_protect_test_<mode>): Likewise.\n+\n 2012-07-16  Hans-Peter Nilsson  <hp@axis.com>\n \n \t* config/cris/cris-protos.h (cris_legitimate_address_p): Declare."}, {"sha": "a1c5b7912821cbd3fa8a9ac778c1b8bd460ce0d2", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d923fe0f01c65cfef6e26645e01357196a634995/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d923fe0f01c65cfef6e26645e01357196a634995/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=d923fe0f01c65cfef6e26645e01357196a634995", "patch": "@@ -17708,7 +17708,7 @@\n (define_expand \"stack_protect_set\"\n   [(match_operand 0 \"memory_operand\")\n    (match_operand 1 \"memory_operand\")]\n-  \"\"\n+  \"!OPTION_BIONIC\"\n {\n   rtx (*insn)(rtx, rtx);\n \n@@ -17733,7 +17733,7 @@\n \t\t    UNSPEC_SP_SET))\n    (set (match_scratch:PTR 2 \"=&r\") (const_int 0))\n    (clobber (reg:CC FLAGS_REG))]\n-  \"\"\n+  \"!OPTION_BIONIC\"\n   \"mov{<imodesuffix>}\\t{%1, %2|%2, %1}\\;mov{<imodesuffix>}\\t{%2, %0|%0, %2}\\;xor{l}\\t%k2, %k2\"\n   [(set_attr \"type\" \"multi\")])\n \n@@ -17751,7 +17751,7 @@\n   [(match_operand 0 \"memory_operand\")\n    (match_operand 1 \"memory_operand\")\n    (match_operand 2)]\n-  \"\"\n+  \"!OPTION_BIONIC\"\n {\n   rtx flags = gen_rtx_REG (CCZmode, FLAGS_REG);\n \n@@ -17781,7 +17781,7 @@\n \t\t     (match_operand:PTR 2 \"memory_operand\" \"m\")]\n \t\t    UNSPEC_SP_TEST))\n    (clobber (match_scratch:PTR 3 \"=&r\"))]\n-  \"\"\n+  \"!OPTION_BIONIC\"\n   \"mov{<imodesuffix>}\\t{%1, %3|%3, %1}\\;xor{<imodesuffix>}\\t{%2, %3|%3, %2}\"\n   [(set_attr \"type\" \"multi\")])\n "}]}