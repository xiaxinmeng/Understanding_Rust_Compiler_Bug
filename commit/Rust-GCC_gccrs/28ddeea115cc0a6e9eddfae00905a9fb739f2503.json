{"sha": "28ddeea115cc0a6e9eddfae00905a9fb739f2503", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjhkZGVlYTExNWNjMGE2ZTllZGRmYWUwMDkwNWE5ZmI3MzlmMjUwMw==", "commit": {"author": {"name": "Paolo Bonzini", "email": "bonzini@gnu.org", "date": "2009-03-30T08:20:32Z"}, "committer": {"name": "Paolo Bonzini", "email": "bonzini@gcc.gnu.org", "date": "2009-03-30T08:20:32Z"}, "message": "fold-const.c (const_binop, [...]): Do not set TREE_CONSTANT_OVERFLOW.\n\n2009-03-30  Paolo Bonzini  <bonzini@gnu.org>\n\n        * fold-const.c (const_binop, fold_convert_const_real_from_fixed,\n        fold_convert_const_fixed_from_fixed,\n        fold_convert_const_fixed_from_int,\n        fold_convert_const_fixed_from_real, fold_negate_const): Do not\n        set TREE_CONSTANT_OVERFLOW.\n        * tree.def: Remove mention of TREE_CONSTANT_OVERFLOW.\n        * tree.h (TREE_CONSTANT_OVERFLOW): Delete.\n\nFrom-SVN: r145281", "tree": {"sha": "5b140417cc664479b9a3f420cad41ed2b1c99243", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5b140417cc664479b9a3f420cad41ed2b1c99243"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/28ddeea115cc0a6e9eddfae00905a9fb739f2503", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28ddeea115cc0a6e9eddfae00905a9fb739f2503", "html_url": "https://github.com/Rust-GCC/gccrs/commit/28ddeea115cc0a6e9eddfae00905a9fb739f2503", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28ddeea115cc0a6e9eddfae00905a9fb739f2503/comments", "author": {"login": "bonzini", "id": 42082, "node_id": "MDQ6VXNlcjQyMDgy", "avatar_url": "https://avatars.githubusercontent.com/u/42082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bonzini", "html_url": "https://github.com/bonzini", "followers_url": "https://api.github.com/users/bonzini/followers", "following_url": "https://api.github.com/users/bonzini/following{/other_user}", "gists_url": "https://api.github.com/users/bonzini/gists{/gist_id}", "starred_url": "https://api.github.com/users/bonzini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bonzini/subscriptions", "organizations_url": "https://api.github.com/users/bonzini/orgs", "repos_url": "https://api.github.com/users/bonzini/repos", "events_url": "https://api.github.com/users/bonzini/events{/privacy}", "received_events_url": "https://api.github.com/users/bonzini/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ebfd146af752ce6aa298f866e36f9a7e66e32ec5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ebfd146af752ce6aa298f866e36f9a7e66e32ec5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ebfd146af752ce6aa298f866e36f9a7e66e32ec5"}], "stats": {"total": 55, "additions": 17, "deletions": 38}, "files": [{"sha": "e4b3d9e05796c1c8216cdc30290cf8e72857b208", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28ddeea115cc0a6e9eddfae00905a9fb739f2503/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28ddeea115cc0a6e9eddfae00905a9fb739f2503/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=28ddeea115cc0a6e9eddfae00905a9fb739f2503", "patch": "@@ -1,3 +1,13 @@\n+2009-03-30  Paolo Bonzini  <bonzini@gnu.org>\n+\n+\t* fold-const.c (const_binop, fold_convert_const_real_from_fixed,\n+\tfold_convert_const_fixed_from_fixed,\n+\tfold_convert_const_fixed_from_int,\n+\tfold_convert_const_fixed_from_real, fold_negate_const): Do not\n+\tset TREE_CONSTANT_OVERFLOW.\n+\t* tree.def: Remove mention of TREE_CONSTANT_OVERFLOW.\n+\t* tree.h (TREE_CONSTANT_OVERFLOW): Delete.\n+\n 2009-03-30  Ira Rosen  <irar@il.ibm.com>\n \n \t* tree-vect-loop-manip.c: New file."}, {"sha": "a56e885fbf8f6e00dcccb04f177bd5d1549ae78e", "filename": "gcc/fold-const.c", "status": "modified", "additions": 5, "deletions": 32, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28ddeea115cc0a6e9eddfae00905a9fb739f2503/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28ddeea115cc0a6e9eddfae00905a9fb739f2503/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=28ddeea115cc0a6e9eddfae00905a9fb739f2503", "patch": "@@ -1932,12 +1932,7 @@ const_binop (enum tree_code code, tree arg1, tree arg2, int notrunc)\n       t = build_fixed (type, result);\n       /* Propagate overflow flags.  */\n       if (overflow_p | TREE_OVERFLOW (arg1) | TREE_OVERFLOW (arg2))\n-\t{\n-\t  TREE_OVERFLOW (t) = 1;\n-\t  TREE_CONSTANT_OVERFLOW (t) = 1;\n-\t}\n-      else if (TREE_CONSTANT_OVERFLOW (arg1) | TREE_CONSTANT_OVERFLOW (arg2))\n-\tTREE_CONSTANT_OVERFLOW (t) = 1;\n+\tTREE_OVERFLOW (t) = 1;\n       return t;\n     }\n \n@@ -2304,8 +2299,6 @@ fold_convert_const_real_from_fixed (tree type, const_tree arg1)\n   t = build_real (type, value);\n \n   TREE_OVERFLOW (t) = TREE_OVERFLOW (arg1);\n-  TREE_CONSTANT_OVERFLOW (t)\n-    = TREE_OVERFLOW (t) | TREE_CONSTANT_OVERFLOW (arg1);\n   return t;\n }\n \n@@ -2325,12 +2318,7 @@ fold_convert_const_fixed_from_fixed (tree type, const_tree arg1)\n \n   /* Propagate overflow flags.  */\n   if (overflow_p | TREE_OVERFLOW (arg1))\n-    {\n-      TREE_OVERFLOW (t) = 1;\n-      TREE_CONSTANT_OVERFLOW (t) = 1;\n-    }\n-  else if (TREE_CONSTANT_OVERFLOW (arg1))\n-    TREE_CONSTANT_OVERFLOW (t) = 1;\n+    TREE_OVERFLOW (t) = 1;\n   return t;\n }\n \n@@ -2352,12 +2340,7 @@ fold_convert_const_fixed_from_int (tree type, const_tree arg1)\n \n   /* Propagate overflow flags.  */\n   if (overflow_p | TREE_OVERFLOW (arg1))\n-    {\n-      TREE_OVERFLOW (t) = 1;\n-      TREE_CONSTANT_OVERFLOW (t) = 1;\n-    }\n-  else if (TREE_CONSTANT_OVERFLOW (arg1))\n-    TREE_CONSTANT_OVERFLOW (t) = 1;\n+    TREE_OVERFLOW (t) = 1;\n   return t;\n }\n \n@@ -2378,12 +2361,7 @@ fold_convert_const_fixed_from_real (tree type, const_tree arg1)\n \n   /* Propagate overflow flags.  */\n   if (overflow_p | TREE_OVERFLOW (arg1))\n-    {\n-      TREE_OVERFLOW (t) = 1;\n-      TREE_CONSTANT_OVERFLOW (t) = 1;\n-    }\n-  else if (TREE_CONSTANT_OVERFLOW (arg1))\n-    TREE_CONSTANT_OVERFLOW (t) = 1;\n+    TREE_OVERFLOW (t) = 1;\n   return t;\n }\n \n@@ -15228,12 +15206,7 @@ fold_negate_const (tree arg0, tree type)\n \tt = build_fixed (type, f);\n \t/* Propagate overflow flags.  */\n \tif (overflow_p | TREE_OVERFLOW (arg0))\n-\t  {\n-\t    TREE_OVERFLOW (t) = 1;\n-\t    TREE_CONSTANT_OVERFLOW (t) = 1;\n-\t  }\n-\telse if (TREE_CONSTANT_OVERFLOW (arg0))\n-\t  TREE_CONSTANT_OVERFLOW (t) = 1;\n+\t  TREE_OVERFLOW (t) = 1;\n \tbreak;\n       }\n "}, {"sha": "a8836c94b45a6479190d3fc19bf1a211d8c226fe", "filename": "gcc/tree.def", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28ddeea115cc0a6e9eddfae00905a9fb739f2503/gcc%2Ftree.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28ddeea115cc0a6e9eddfae00905a9fb739f2503/gcc%2Ftree.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.def?ref=28ddeea115cc0a6e9eddfae00905a9fb739f2503", "patch": "@@ -268,9 +268,8 @@ DEFTREECODE (LANG_TYPE, \"lang_type\", tcc_type, 0)\n /* Contents are in TREE_INT_CST_LOW and TREE_INT_CST_HIGH fields,\n    32 bits each, giving us a 64 bit constant capability.  INTEGER_CST\n    nodes can be shared, and therefore should be considered read only.\n-   They should be copied, before setting a flag such as\n-   TREE_OVERFLOW.  If an INTEGER_CST has TREE_OVERFLOW or\n-   TREE_CONSTANT_OVERFLOW already set, it is known to be unique.\n+   They should be copied, before setting a flag such as TREE_OVERFLOW.\n+   If an INTEGER_CST has TREE_OVERFLOW already set, it is known to be unique.\n    INTEGER_CST nodes are created for the integral types, for pointer\n    types and for vector and float types in some circumstances.  */\n DEFTREECODE (INTEGER_CST, \"integer_cst\", tcc_constant, 0)"}, {"sha": "2efc9780bda0e3e3e6da084f456c68b1895a4e07", "filename": "gcc/tree.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28ddeea115cc0a6e9eddfae00905a9fb739f2503/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28ddeea115cc0a6e9eddfae00905a9fb739f2503/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=28ddeea115cc0a6e9eddfae00905a9fb739f2503", "patch": "@@ -1186,9 +1186,6 @@ extern void omp_clause_range_check_failed (const_tree, const char *, int,\n \n #define TREE_OVERFLOW(NODE) (CST_CHECK (NODE)->base.public_flag)\n \n-/* ??? This is an obsolete synonym for TREE_OVERFLOW.  */\n-#define TREE_CONSTANT_OVERFLOW(NODE) TREE_OVERFLOW(NODE)\n-\n /* TREE_OVERFLOW can only be true for EXPR of CONSTANT_CLASS_P.  */\n \n #define TREE_OVERFLOW_P(EXPR) \\"}]}