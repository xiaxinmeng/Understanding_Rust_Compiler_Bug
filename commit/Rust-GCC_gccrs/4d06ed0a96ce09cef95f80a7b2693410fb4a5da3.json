{"sha": "4d06ed0a96ce09cef95f80a7b2693410fb4a5da3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGQwNmVkMGE5NmNlMDljZWY5NWY4MGE3YjI2OTM0MTBmYjRhNWRhMw==", "commit": {"author": {"name": "Richard Sandiford", "email": "rsandifo@redhat.com", "date": "2004-08-23T08:20:53Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2004-08-23T08:20:53Z"}, "message": "mips.md (length): Don't use mips_fetch_insns for indexed loads and stores.\n\n\t* config/mips/mips.md (length): Don't use mips_fetch_insns for indexed\n\tloads and stores.\n\t(*lwxc1_<mode>, *ldxc1_<mode>, *swxc1_<mode>, *sdxc1_<mode>): Name\n\tformerly unnamed patterns.  Redefine using :P for the address.  Remove\n\texplicit length attributes.\n\nFrom-SVN: r86419", "tree": {"sha": "040b9959f05d232ccc92412f7eac22a6fa04321f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/040b9959f05d232ccc92412f7eac22a6fa04321f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4d06ed0a96ce09cef95f80a7b2693410fb4a5da3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d06ed0a96ce09cef95f80a7b2693410fb4a5da3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d06ed0a96ce09cef95f80a7b2693410fb4a5da3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d06ed0a96ce09cef95f80a7b2693410fb4a5da3/comments", "author": null, "committer": null, "parents": [{"sha": "a3631d9785de39ffcf1925e71dc2fe017d17c448", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3631d9785de39ffcf1925e71dc2fe017d17c448", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a3631d9785de39ffcf1925e71dc2fe017d17c448"}], "stats": {"total": 96, "additions": 30, "deletions": 66}, "files": [{"sha": "ee5dde575ad962c8f6c8b7323dc85cb27c0845c7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d06ed0a96ce09cef95f80a7b2693410fb4a5da3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d06ed0a96ce09cef95f80a7b2693410fb4a5da3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4d06ed0a96ce09cef95f80a7b2693410fb4a5da3", "patch": "@@ -1,3 +1,11 @@\n+2004-08-23  Richard Sandiford  <rsandifo@redhat.com>\n+\n+\t* config/mips/mips.md (length): Don't use mips_fetch_insns for indexed\n+\tloads and stores.\n+\t(*lwxc1_<mode>, *ldxc1_<mode>, *swxc1_<mode>, *sdxc1_<mode>): Name\n+\tformerly unnamed patterns.  Redefine using :P for the address.  Remove\n+\texplicit length attributes.\n+\n 2004-08-23  Zdenek Dvorak  <rakdver@atrey.karlin.mff.cuni.cz>\n \n \t* tree-ssa-loop-im.c (fem_single_reachable_address, for_each_memref):"}, {"sha": "e42a607977fbff194b827b6cfdbbd0b144cea7a4", "filename": "gcc/config/mips/mips.md", "status": "modified", "additions": 22, "deletions": 66, "changes": 88, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d06ed0a96ce09cef95f80a7b2693410fb4a5da3/gcc%2Fconfig%2Fmips%2Fmips.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d06ed0a96ce09cef95f80a7b2693410fb4a5da3/gcc%2Fconfig%2Fmips%2Fmips.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.md?ref=4d06ed0a96ce09cef95f80a7b2693410fb4a5da3", "patch": "@@ -181,9 +181,9 @@\n \n \t  (eq_attr \"type\" \"const\")\n \t  (symbol_ref \"mips_const_insns (operands[1]) * 4\")\n-\t  (eq_attr \"type\" \"load,fpload,fpidxload\")\n+\t  (eq_attr \"type\" \"load,fpload\")\n \t  (symbol_ref \"mips_fetch_insns (operands[1]) * 4\")\n-\t  (eq_attr \"type\" \"store,fpstore,fpidxstore\")\n+\t  (eq_attr \"type\" \"store,fpstore\")\n \t  (symbol_ref \"mips_fetch_insns (operands[0]) * 4\")\n \n \t  ;; In the worst case, a call macro will take 8 instructions:\n@@ -3717,85 +3717,41 @@ beq\\t%2,%.,1b\\;\\\n ;; these instructions can only be used to load and store floating\n ;; point registers, that would probably cause trouble in reload.\n \n-(define_insn \"\"\n+(define_insn \"*lwxc1_<mode>\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n-\t(mem:SF (plus:SI (match_operand:SI 1 \"register_operand\" \"d\")\n-\t\t\t (match_operand:SI 2 \"register_operand\" \"d\"))))]\n+\t(mem:SF (plus:P (match_operand:P 1 \"register_operand\" \"d\")\n+\t\t\t(match_operand:P 2 \"register_operand\" \"d\"))))]\n   \"ISA_HAS_FP4 && TARGET_HARD_FLOAT\"\n   \"lwxc1\\t%0,%1(%2)\"\n-  [(set_attr \"type\"\t\"fpidxload\")\n-   (set_attr \"mode\"\t\"SF\")\n-   (set_attr \"length\"   \"4\")])\n-\n-(define_insn \"\"\n-  [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n-\t(mem:SF (plus:DI (match_operand:DI 1 \"register_operand\" \"d\")\n-\t\t\t (match_operand:DI 2 \"register_operand\" \"d\"))))]\n-  \"ISA_HAS_FP4 && TARGET_HARD_FLOAT\"\n-  \"lwxc1\\t%0,%1(%2)\"\n-  [(set_attr \"type\"\t\"fpidxload\")\n-   (set_attr \"mode\"\t\"SF\")\n-   (set_attr \"length\"   \"4\")])\n-\n-(define_insn \"\"\n-  [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n-\t(mem:DF (plus:SI (match_operand:SI 1 \"register_operand\" \"d\")\n-\t\t\t (match_operand:SI 2 \"register_operand\" \"d\"))))]\n-  \"ISA_HAS_FP4 && TARGET_HARD_FLOAT && TARGET_DOUBLE_FLOAT\"\n-  \"ldxc1\\t%0,%1(%2)\"\n-  [(set_attr \"type\"\t\"fpidxload\")\n-   (set_attr \"mode\"\t\"DF\")\n-   (set_attr \"length\"   \"4\")])\n+  [(set_attr \"type\" \"fpidxload\")\n+   (set_attr \"mode\" \"SF\")])\n \n-(define_insn \"\"\n+(define_insn \"*ldxc1_<mode>\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n-\t(mem:DF (plus:DI (match_operand:DI 1 \"register_operand\" \"d\")\n-\t\t\t (match_operand:DI 2 \"register_operand\" \"d\"))))]\n+\t(mem:DF (plus:P (match_operand:P 1 \"register_operand\" \"d\")\n+\t\t\t(match_operand:P 2 \"register_operand\" \"d\"))))]\n   \"ISA_HAS_FP4 && TARGET_HARD_FLOAT && TARGET_DOUBLE_FLOAT\"\n   \"ldxc1\\t%0,%1(%2)\"\n-  [(set_attr \"type\"\t\"fpidxload\")\n-   (set_attr \"mode\"\t\"DF\")\n-   (set_attr \"length\"   \"4\")])\n-\n-(define_insn \"\"\n-  [(set (mem:SF (plus:SI (match_operand:SI 1 \"register_operand\" \"d\")\n-\t\t\t (match_operand:SI 2 \"register_operand\" \"d\")))\n-\t(match_operand:SF 0 \"register_operand\" \"f\"))]\n-  \"ISA_HAS_FP4 && TARGET_HARD_FLOAT\"\n-  \"swxc1\\t%0,%1(%2)\"\n-  [(set_attr \"type\"\t\"fpidxstore\")\n-   (set_attr \"mode\"\t\"SF\")\n-   (set_attr \"length\"   \"4\")])\n+  [(set_attr \"type\" \"fpidxload\")\n+   (set_attr \"mode\" \"DF\")])\n \n-(define_insn \"\"\n-  [(set (mem:SF (plus:DI (match_operand:DI 1 \"register_operand\" \"d\")\n-\t\t\t (match_operand:DI 2 \"register_operand\" \"d\")))\n+(define_insn \"*swxc1_<mode>\"\n+  [(set (mem:SF (plus:P (match_operand:P 1 \"register_operand\" \"d\")\n+\t\t\t(match_operand:P 2 \"register_operand\" \"d\")))\n \t(match_operand:SF 0 \"register_operand\" \"f\"))]\n   \"ISA_HAS_FP4 && TARGET_HARD_FLOAT\"\n   \"swxc1\\t%0,%1(%2)\"\n-  [(set_attr \"type\"\t\"fpidxstore\")\n-   (set_attr \"mode\"\t\"SF\")\n-   (set_attr \"length\"   \"4\")])\n-\n-(define_insn \"\"\n-  [(set (mem:DF (plus:SI (match_operand:SI 1 \"register_operand\" \"d\")\n-\t\t\t (match_operand:SI 2 \"register_operand\" \"d\")))\n-\t(match_operand:DF 0 \"register_operand\" \"f\"))]\n-  \"ISA_HAS_FP4 && TARGET_HARD_FLOAT && TARGET_DOUBLE_FLOAT\"\n-  \"sdxc1\\t%0,%1(%2)\"\n-  [(set_attr \"type\"\t\"fpidxstore\")\n-   (set_attr \"mode\"\t\"DF\")\n-   (set_attr \"length\"   \"4\")])\n+  [(set_attr \"type\" \"fpidxstore\")\n+   (set_attr \"mode\" \"SF\")])\n \n-(define_insn \"\"\n-  [(set (mem:DF (plus:DI (match_operand:DI 1 \"register_operand\" \"d\")\n-\t\t\t (match_operand:DI 2 \"register_operand\" \"d\")))\n+(define_insn \"*sdxc1_<mode>\"\n+  [(set (mem:DF (plus:P (match_operand:P 1 \"register_operand\" \"d\")\n+\t\t\t(match_operand:P 2 \"register_operand\" \"d\")))\n \t(match_operand:DF 0 \"register_operand\" \"f\"))]\n   \"ISA_HAS_FP4 && TARGET_HARD_FLOAT && TARGET_DOUBLE_FLOAT\"\n   \"sdxc1\\t%0,%1(%2)\"\n-  [(set_attr \"type\"\t\"fpidxstore\")\n-   (set_attr \"mode\"\t\"DF\")\n-   (set_attr \"length\"   \"4\")])\n+  [(set_attr \"type\" \"fpidxstore\")\n+   (set_attr \"mode\" \"DF\")])\n \n ;; 16-bit Integer moves\n "}]}