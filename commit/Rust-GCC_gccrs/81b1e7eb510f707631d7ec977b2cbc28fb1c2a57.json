{"sha": "81b1e7eb510f707631d7ec977b2cbc28fb1c2a57", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODFiMWU3ZWI1MTBmNzA3NjMxZDdlYzk3N2IyY2JjMjhmYjFjMmE1Nw==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2011-04-13T23:43:52Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2011-04-13T23:43:52Z"}, "message": "sse.md (*sse2_uavgv16qi3): Merge with *avx_uavgv16qi3.\n\n\t* config/i386/sse.md (*sse2_uavgv16qi3): Merge with *avx_uavgv16qi3.\n\t(*sse2_uavgv8hi3): Merge with *avx_uavgv8hi3.\n\t(sse2_psadbw): Merge with *avx_psadbw.\n\t(ssse3_phaddwv8hi3): Merge with *avx_phaddwv8hi3.\n\t(ssse3_phadddv4si3): Merge with *avx_phadddv4si3.\n\t(ssse3_phaddswv8hi3): Merge with *avx_phaddswv8hi3.\n\t(ssse3_phsubwv8hi3): Merge with *avx_phsubwv8hi3.\n\t(ssse3_phsubdv4si3): Merge with *avx_phsubdv4si3.\n\t(ssse3_phsubswv8hi3): Merge with *avx_phsubswv8hi3.\n\t(ssse3_pmaddubsw128): Merge with *avx_pmaddubsw128.\n\t(*ssse3_pmulhrswv8hi3): Merge with *avx_pmulhrswv8hi3.\n\t(ssse3_pshufbv16qi3): Merge with *avx_pshufbv16qi3.\n\t(ssse3_psign<mode>3): Merge with *avx_psign<mode>3.\n\t(ssse3_palignrti): Merge with *avx_palignrti.\n\nFrom-SVN: r172403", "tree": {"sha": "d8679cd92c7d5f0a23b2b1455b352be6b1ec92b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d8679cd92c7d5f0a23b2b1455b352be6b1ec92b2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/81b1e7eb510f707631d7ec977b2cbc28fb1c2a57", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81b1e7eb510f707631d7ec977b2cbc28fb1c2a57", "html_url": "https://github.com/Rust-GCC/gccrs/commit/81b1e7eb510f707631d7ec977b2cbc28fb1c2a57", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81b1e7eb510f707631d7ec977b2cbc28fb1c2a57/comments", "author": null, "committer": null, "parents": [{"sha": "8dc421e03520f7b1d2ccd73648985c83998604bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8dc421e03520f7b1d2ccd73648985c83998604bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8dc421e03520f7b1d2ccd73648985c83998604bc"}], "stats": {"total": 670, "additions": 172, "deletions": 498}, "files": [{"sha": "273bd748ac7f189f216e3007eaa707acfdeefef2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 19, "deletions": 2, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81b1e7eb510f707631d7ec977b2cbc28fb1c2a57/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81b1e7eb510f707631d7ec977b2cbc28fb1c2a57/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=81b1e7eb510f707631d7ec977b2cbc28fb1c2a57", "patch": "@@ -1,3 +1,20 @@\n+2011-04-12  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/sse.md (*sse2_uavgv16qi3): Merge with *avx_uavgv16qi3.\n+\t(*sse2_uavgv8hi3): Merge with *avx_uavgv8hi3.\n+\t(sse2_psadbw): Merge with *avx_psadbw.\n+\t(ssse3_phaddwv8hi3): Merge with *avx_phaddwv8hi3.\n+\t(ssse3_phadddv4si3): Merge with *avx_phadddv4si3.\n+\t(ssse3_phaddswv8hi3): Merge with *avx_phaddswv8hi3.\n+\t(ssse3_phsubwv8hi3): Merge with *avx_phsubwv8hi3.\n+\t(ssse3_phsubdv4si3): Merge with *avx_phsubdv4si3.\n+\t(ssse3_phsubswv8hi3): Merge with *avx_phsubswv8hi3.\n+\t(ssse3_pmaddubsw128): Merge with *avx_pmaddubsw128.\n+\t(*ssse3_pmulhrswv8hi3): Merge with *avx_pmulhrswv8hi3.\n+\t(ssse3_pshufbv16qi3): Merge with *avx_pshufbv16qi3.\n+\t(ssse3_psign<mode>3): Merge with *avx_psign<mode>3.\n+\t(ssse3_palignrti): Merge with *avx_palignrti.\n+\n 2011-04-13  Nathan Froyd  <froydnj@codesourcery.com>\n \n \t* tree-flow.h (struct gimple_df): Make free_ssanames a VEC.\n@@ -217,8 +234,8 @@\n \n 2011-04-12  Ramana Radhakrishnan  <ramana.radhakrishnan@linaro.org>\n \n-       PR target/48090\n-       * config/arm/arm.md (*arm_negdi2): Fix early clobber constraints.\n+\tPR target/48090\n+\t* config/arm/arm.md (*arm_negdi2): Fix early clobber constraints.\n \n 2011-04-12  Richard Sandiford  <richard.sandiford@linaro.org>\n "}, {"sha": "cea13cbf88c9a6ebcc031f54d1d5cbad051cffa5", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 153, "deletions": 496, "changes": 649, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81b1e7eb510f707631d7ec977b2cbc28fb1c2a57/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81b1e7eb510f707631d7ec977b2cbc28fb1c2a57/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=81b1e7eb510f707631d7ec977b2cbc28fb1c2a57", "patch": "@@ -7015,41 +7015,16 @@\n   \"TARGET_SSE2\"\n   \"ix86_fixup_binary_operands_no_copy (PLUS, V16QImode, operands);\")\n \n-(define_insn \"*avx_uavgv16qi3\"\n-  [(set (match_operand:V16QI 0 \"register_operand\" \"=x\")\n-\t(truncate:V16QI\n-\t  (lshiftrt:V16HI\n-\t    (plus:V16HI\n-\t      (plus:V16HI\n-\t\t(zero_extend:V16HI\n-\t\t  (match_operand:V16QI 1 \"nonimmediate_operand\" \"%x\"))\n-\t\t(zero_extend:V16HI\n-\t\t  (match_operand:V16QI 2 \"nonimmediate_operand\" \"xm\")))\n-\t      (const_vector:V16QI [(const_int 1) (const_int 1)\n-\t\t\t\t   (const_int 1) (const_int 1)\n-\t\t\t\t   (const_int 1) (const_int 1)\n-\t\t\t\t   (const_int 1) (const_int 1)\n-\t\t\t\t   (const_int 1) (const_int 1)\n-\t\t\t\t   (const_int 1) (const_int 1)\n-\t\t\t\t   (const_int 1) (const_int 1)\n-\t\t\t\t   (const_int 1) (const_int 1)]))\n-\t    (const_int 1))))]\n-  \"TARGET_AVX && ix86_binary_operator_ok (PLUS, V16QImode, operands)\"\n-  \"vpavgb\\t{%2, %1, %0|%0, %1, %2}\"\n-  [(set_attr \"type\" \"sseiadd\")\n-   (set_attr \"prefix\" \"vex\")\n-   (set_attr \"mode\" \"TI\")])\n-\n (define_insn \"*sse2_uavgv16qi3\"\n-  [(set (match_operand:V16QI 0 \"register_operand\" \"=x\")\n+  [(set (match_operand:V16QI 0 \"register_operand\" \"=x,x\")\n \t(truncate:V16QI\n \t  (lshiftrt:V16HI\n \t    (plus:V16HI\n \t      (plus:V16HI\n \t\t(zero_extend:V16HI\n-\t\t  (match_operand:V16QI 1 \"nonimmediate_operand\" \"%0\"))\n+\t\t  (match_operand:V16QI 1 \"nonimmediate_operand\" \"%0,x\"))\n \t\t(zero_extend:V16HI\n-\t\t  (match_operand:V16QI 2 \"nonimmediate_operand\" \"xm\")))\n+\t\t  (match_operand:V16QI 2 \"nonimmediate_operand\" \"xm,xm\")))\n \t      (const_vector:V16QI [(const_int 1) (const_int 1)\n \t\t\t\t   (const_int 1) (const_int 1)\n \t\t\t\t   (const_int 1) (const_int 1)\n@@ -7060,9 +7035,13 @@\n \t\t\t\t   (const_int 1) (const_int 1)]))\n \t    (const_int 1))))]\n   \"TARGET_SSE2 && ix86_binary_operator_ok (PLUS, V16QImode, operands)\"\n-  \"pavgb\\t{%2, %0|%0, %2}\"\n-  [(set_attr \"type\" \"sseiadd\")\n-   (set_attr \"prefix_data16\" \"1\")\n+  \"@\n+   pavgb\\t{%2, %0|%0, %2}\n+   vpavgb\\t{%2, %1, %0|%0, %1, %2}\"\n+  [(set_attr \"isa\" \"noavx,avx\")\n+   (set_attr \"type\" \"sseiadd\")\n+   (set_attr \"prefix_data16\" \"1,*\")\n+   (set_attr \"prefix\" \"orig,vex\")\n    (set_attr \"mode\" \"TI\")])\n \n (define_expand \"sse2_uavgv8hi3\"\n@@ -7083,71 +7062,47 @@\n   \"TARGET_SSE2\"\n   \"ix86_fixup_binary_operands_no_copy (PLUS, V8HImode, operands);\")\n \n-(define_insn \"*avx_uavgv8hi3\"\n-  [(set (match_operand:V8HI 0 \"register_operand\" \"=x\")\n-\t(truncate:V8HI\n-\t  (lshiftrt:V8SI\n-\t    (plus:V8SI\n-\t      (plus:V8SI\n-\t\t(zero_extend:V8SI\n-\t\t  (match_operand:V8HI 1 \"nonimmediate_operand\" \"%x\"))\n-\t\t(zero_extend:V8SI\n-\t\t  (match_operand:V8HI 2 \"nonimmediate_operand\" \"xm\")))\n-\t      (const_vector:V8HI [(const_int 1) (const_int 1)\n-\t\t\t\t  (const_int 1) (const_int 1)\n-\t\t\t\t  (const_int 1) (const_int 1)\n-\t\t\t\t  (const_int 1) (const_int 1)]))\n-\t    (const_int 1))))]\n-  \"TARGET_AVX && ix86_binary_operator_ok (PLUS, V8HImode, operands)\"\n-  \"vpavgw\\t{%2, %1, %0|%0, %1, %2}\"\n-  [(set_attr \"type\" \"sseiadd\")\n-   (set_attr \"prefix\" \"vex\")\n-   (set_attr \"mode\" \"TI\")])\n-\n (define_insn \"*sse2_uavgv8hi3\"\n-  [(set (match_operand:V8HI 0 \"register_operand\" \"=x\")\n+  [(set (match_operand:V8HI 0 \"register_operand\" \"=x,x\")\n \t(truncate:V8HI\n \t  (lshiftrt:V8SI\n \t    (plus:V8SI\n \t      (plus:V8SI\n \t\t(zero_extend:V8SI\n-\t\t  (match_operand:V8HI 1 \"nonimmediate_operand\" \"%0\"))\n+\t\t  (match_operand:V8HI 1 \"nonimmediate_operand\" \"%0,x\"))\n \t\t(zero_extend:V8SI\n-\t\t  (match_operand:V8HI 2 \"nonimmediate_operand\" \"xm\")))\n+\t\t  (match_operand:V8HI 2 \"nonimmediate_operand\" \"xm,xm\")))\n \t      (const_vector:V8HI [(const_int 1) (const_int 1)\n \t\t\t\t  (const_int 1) (const_int 1)\n \t\t\t\t  (const_int 1) (const_int 1)\n \t\t\t\t  (const_int 1) (const_int 1)]))\n \t    (const_int 1))))]\n   \"TARGET_SSE2 && ix86_binary_operator_ok (PLUS, V8HImode, operands)\"\n-  \"pavgw\\t{%2, %0|%0, %2}\"\n-  [(set_attr \"type\" \"sseiadd\")\n-   (set_attr \"prefix_data16\" \"1\")\n+  \"@\n+   pavgw\\t{%2, %0|%0, %2}\n+   vpavgw\\t{%2, %1, %0|%0, %1, %2}\"\n+  [(set_attr \"isa\" \"noavx,avx\")\n+   (set_attr \"type\" \"sseiadd\")\n+   (set_attr \"prefix_data16\" \"1,*\")\n+   (set_attr \"prefix\" \"orig,vex\")\n    (set_attr \"mode\" \"TI\")])\n \n ;; The correct representation for this is absolutely enormous, and\n ;; surely not generally useful.\n-(define_insn \"*avx_psadbw\"\n-  [(set (match_operand:V2DI 0 \"register_operand\" \"=x\")\n-\t(unspec:V2DI [(match_operand:V16QI 1 \"register_operand\" \"x\")\n-\t\t      (match_operand:V16QI 2 \"nonimmediate_operand\" \"xm\")]\n-\t\t     UNSPEC_PSADBW))]\n-  \"TARGET_AVX\"\n-  \"vpsadbw\\t{%2, %1, %0|%0, %1, %2}\"\n-  [(set_attr \"type\" \"sseiadd\")\n-   (set_attr \"prefix\" \"vex\")\n-   (set_attr \"mode\" \"TI\")])\n-\n (define_insn \"sse2_psadbw\"\n-  [(set (match_operand:V2DI 0 \"register_operand\" \"=x\")\n-\t(unspec:V2DI [(match_operand:V16QI 1 \"register_operand\" \"0\")\n-\t\t      (match_operand:V16QI 2 \"nonimmediate_operand\" \"xm\")]\n+  [(set (match_operand:V2DI 0 \"register_operand\" \"=x,x\")\n+\t(unspec:V2DI [(match_operand:V16QI 1 \"register_operand\" \"0,x\")\n+\t\t      (match_operand:V16QI 2 \"nonimmediate_operand\" \"xm,xm\")]\n \t\t     UNSPEC_PSADBW))]\n   \"TARGET_SSE2\"\n-  \"psadbw\\t{%2, %0|%0, %2}\"\n-  [(set_attr \"type\" \"sseiadd\")\n+  \"@\n+   psadbw\\t{%2, %0|%0, %2}\n+   vpsadbw\\t{%2, %1, %0|%0, %1, %2}\"\n+  [(set_attr \"isa\" \"noavx,avx\")\n+   (set_attr \"type\" \"sseiadd\")\n    (set_attr \"atom_unit\" \"simul\")\n-   (set_attr \"prefix_data16\" \"1\")\n+   (set_attr \"prefix_data16\" \"1,*\")\n+   (set_attr \"prefix\" \"orig,vex\")\n    (set_attr \"mode\" \"TI\")])\n \n (define_insn \"avx_movmsk<ssemodesuffix>256\"\n@@ -7348,58 +7303,14 @@\n ;;\n ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n \n-(define_insn \"*avx_phaddwv8hi3\"\n-  [(set (match_operand:V8HI 0 \"register_operand\" \"=x\")\n-\t(vec_concat:V8HI\n-\t  (vec_concat:V4HI\n-\t    (vec_concat:V2HI\n-\t      (plus:HI\n-\t\t(vec_select:HI\n-\t\t  (match_operand:V8HI 1 \"register_operand\" \"x\")\n-\t\t  (parallel [(const_int 0)]))\n-\t\t(vec_select:HI (match_dup 1) (parallel [(const_int 1)])))\n-\t      (plus:HI\n-\t\t(vec_select:HI (match_dup 1) (parallel [(const_int 2)]))\n-\t\t(vec_select:HI (match_dup 1) (parallel [(const_int 3)]))))\n-\t    (vec_concat:V2HI\n-\t      (plus:HI\n-\t\t(vec_select:HI (match_dup 1) (parallel [(const_int 4)]))\n-\t\t(vec_select:HI (match_dup 1) (parallel [(const_int 5)])))\n-\t      (plus:HI\n-\t\t(vec_select:HI (match_dup 1) (parallel [(const_int 6)]))\n-\t\t(vec_select:HI (match_dup 1) (parallel [(const_int 7)])))))\n-\t  (vec_concat:V4HI\n-\t    (vec_concat:V2HI\n-\t      (plus:HI\n-\t\t(vec_select:HI\n-\t\t  (match_operand:V8HI 2 \"nonimmediate_operand\" \"xm\")\n-\t\t  (parallel [(const_int 0)]))\n-\t\t(vec_select:HI (match_dup 2) (parallel [(const_int 1)])))\n-\t      (plus:HI\n-\t\t(vec_select:HI (match_dup 2) (parallel [(const_int 2)]))\n-\t\t(vec_select:HI (match_dup 2) (parallel [(const_int 3)]))))\n-\t    (vec_concat:V2HI\n-\t      (plus:HI\n-\t\t(vec_select:HI (match_dup 2) (parallel [(const_int 4)]))\n-\t\t(vec_select:HI (match_dup 2) (parallel [(const_int 5)])))\n-\t      (plus:HI\n-\t\t(vec_select:HI (match_dup 2) (parallel [(const_int 6)]))\n-\t\t(vec_select:HI (match_dup 2) (parallel [(const_int 7)])))))))]\n-  \"TARGET_AVX\"\n-  \"vphaddw\\t{%2, %1, %0|%0, %1, %2}\"\n-  [(set_attr \"type\" \"sseiadd\")\n-   (set_attr \"prefix_extra\" \"1\")\n-   (set_attr \"prefix\" \"vex\")\n-   (set_attr \"mode\" \"TI\")])\n-\n (define_insn \"ssse3_phaddwv8hi3\"\n-  [(set (match_operand:V8HI 0 \"register_operand\" \"=x\")\n+  [(set (match_operand:V8HI 0 \"register_operand\" \"=x,x\")\n \t(vec_concat:V8HI\n \t  (vec_concat:V4HI\n \t    (vec_concat:V2HI\n \t      (plus:HI\n \t\t(vec_select:HI\n-\t\t  (match_operand:V8HI 1 \"register_operand\" \"0\")\n+\t\t  (match_operand:V8HI 1 \"register_operand\" \"0,x\")\n \t\t  (parallel [(const_int 0)]))\n \t\t(vec_select:HI (match_dup 1) (parallel [(const_int 1)])))\n \t      (plus:HI\n@@ -7416,7 +7327,7 @@\n \t    (vec_concat:V2HI\n \t      (plus:HI\n \t\t(vec_select:HI\n-\t\t  (match_operand:V8HI 2 \"nonimmediate_operand\" \"xm\")\n+\t\t  (match_operand:V8HI 2 \"nonimmediate_operand\" \"xm,xm\")\n \t\t  (parallel [(const_int 0)]))\n \t\t(vec_select:HI (match_dup 2) (parallel [(const_int 1)])))\n \t      (plus:HI\n@@ -7430,11 +7341,15 @@\n \t\t(vec_select:HI (match_dup 2) (parallel [(const_int 6)]))\n \t\t(vec_select:HI (match_dup 2) (parallel [(const_int 7)])))))))]\n   \"TARGET_SSSE3\"\n-  \"phaddw\\t{%2, %0|%0, %2}\"\n-  [(set_attr \"type\" \"sseiadd\")\n+  \"@\n+   phaddw\\t{%2, %0|%0, %2}\n+   vphaddw\\t{%2, %1, %0|%0, %1, %2}\"\n+  [(set_attr \"isa\" \"noavx,avx\")\n+   (set_attr \"type\" \"sseiadd\")\n    (set_attr \"atom_unit\" \"complex\")\n-   (set_attr \"prefix_data16\" \"1\")\n+   (set_attr \"prefix_data16\" \"1,*\")\n    (set_attr \"prefix_extra\" \"1\")\n+   (set_attr \"prefix\" \"orig,vex\")\n    (set_attr \"mode\" \"TI\")])\n \n (define_insn \"ssse3_phaddwv4hi3\"\n@@ -7466,41 +7381,13 @@\n    (set (attr \"prefix_rex\") (symbol_ref \"x86_extended_reg_mentioned_p (insn)\"))\n    (set_attr \"mode\" \"DI\")])\n \n-(define_insn \"*avx_phadddv4si3\"\n-  [(set (match_operand:V4SI 0 \"register_operand\" \"=x\")\n-\t(vec_concat:V4SI\n-\t  (vec_concat:V2SI\n-\t    (plus:SI\n-\t      (vec_select:SI\n-\t\t(match_operand:V4SI 1 \"register_operand\" \"x\")\n-\t\t(parallel [(const_int 0)]))\n-\t      (vec_select:SI (match_dup 1) (parallel [(const_int 1)])))\n-\t    (plus:SI\n-\t      (vec_select:SI (match_dup 1) (parallel [(const_int 2)]))\n-\t      (vec_select:SI (match_dup 1) (parallel [(const_int 3)]))))\n-\t  (vec_concat:V2SI\n-\t    (plus:SI\n-\t      (vec_select:SI\n-\t\t(match_operand:V4SI 2 \"nonimmediate_operand\" \"xm\")\n-\t\t(parallel [(const_int 0)]))\n-\t      (vec_select:SI (match_dup 2) (parallel [(const_int 1)])))\n-\t    (plus:SI\n-\t      (vec_select:SI (match_dup 2) (parallel [(const_int 2)]))\n-\t      (vec_select:SI (match_dup 2) (parallel [(const_int 3)]))))))]\n-  \"TARGET_AVX\"\n-  \"vphaddd\\t{%2, %1, %0|%0, %1, %2}\"\n-  [(set_attr \"type\" \"sseiadd\")\n-   (set_attr \"prefix_extra\" \"1\")\n-   (set_attr \"prefix\" \"vex\")\n-   (set_attr \"mode\" \"TI\")])\n-\n (define_insn \"ssse3_phadddv4si3\"\n-  [(set (match_operand:V4SI 0 \"register_operand\" \"=x\")\n+  [(set (match_operand:V4SI 0 \"register_operand\" \"=x,x\")\n \t(vec_concat:V4SI\n \t  (vec_concat:V2SI\n \t    (plus:SI\n \t      (vec_select:SI\n-\t\t(match_operand:V4SI 1 \"register_operand\" \"0\")\n+\t\t(match_operand:V4SI 1 \"register_operand\" \"0,x\")\n \t\t(parallel [(const_int 0)]))\n \t      (vec_select:SI (match_dup 1) (parallel [(const_int 1)])))\n \t    (plus:SI\n@@ -7509,18 +7396,22 @@\n \t  (vec_concat:V2SI\n \t    (plus:SI\n \t      (vec_select:SI\n-\t\t(match_operand:V4SI 2 \"nonimmediate_operand\" \"xm\")\n+\t\t(match_operand:V4SI 2 \"nonimmediate_operand\" \"xm,xm\")\n \t\t(parallel [(const_int 0)]))\n \t      (vec_select:SI (match_dup 2) (parallel [(const_int 1)])))\n \t    (plus:SI\n \t      (vec_select:SI (match_dup 2) (parallel [(const_int 2)]))\n \t      (vec_select:SI (match_dup 2) (parallel [(const_int 3)]))))))]\n   \"TARGET_SSSE3\"\n-  \"phaddd\\t{%2, %0|%0, %2}\"\n-  [(set_attr \"type\" \"sseiadd\")\n+  \"@\n+   phaddd\\t{%2, %0|%0, %2}\n+   vphaddd\\t{%2, %1, %0|%0, %1, %2}\"\n+  [(set_attr \"isa\" \"noavx,avx\")\n+   (set_attr \"type\" \"sseiadd\")\n    (set_attr \"atom_unit\" \"complex\")\n-   (set_attr \"prefix_data16\" \"1\")\n+   (set_attr \"prefix_data16\" \"1,*\")\n    (set_attr \"prefix_extra\" \"1\")\n+   (set_attr \"prefix\" \"orig,vex\")\n    (set_attr \"mode\" \"TI\")])\n \n (define_insn \"ssse3_phadddv2si3\"\n@@ -7544,58 +7435,14 @@\n    (set (attr \"prefix_rex\") (symbol_ref \"x86_extended_reg_mentioned_p (insn)\"))\n    (set_attr \"mode\" \"DI\")])\n \n-(define_insn \"*avx_phaddswv8hi3\"\n-  [(set (match_operand:V8HI 0 \"register_operand\" \"=x\")\n-\t(vec_concat:V8HI\n-\t  (vec_concat:V4HI\n-\t    (vec_concat:V2HI\n-\t      (ss_plus:HI\n-\t\t(vec_select:HI\n-\t\t  (match_operand:V8HI 1 \"register_operand\" \"x\")\n-\t\t  (parallel [(const_int 0)]))\n-\t\t(vec_select:HI (match_dup 1) (parallel [(const_int 1)])))\n-\t      (ss_plus:HI\n-\t\t(vec_select:HI (match_dup 1) (parallel [(const_int 2)]))\n-\t\t(vec_select:HI (match_dup 1) (parallel [(const_int 3)]))))\n-\t    (vec_concat:V2HI\n-\t      (ss_plus:HI\n-\t\t(vec_select:HI (match_dup 1) (parallel [(const_int 4)]))\n-\t\t(vec_select:HI (match_dup 1) (parallel [(const_int 5)])))\n-\t      (ss_plus:HI\n-\t\t(vec_select:HI (match_dup 1) (parallel [(const_int 6)]))\n-\t\t(vec_select:HI (match_dup 1) (parallel [(const_int 7)])))))\n-\t  (vec_concat:V4HI\n-\t    (vec_concat:V2HI\n-\t      (ss_plus:HI\n-\t\t(vec_select:HI\n-\t\t  (match_operand:V8HI 2 \"nonimmediate_operand\" \"xm\")\n-\t\t  (parallel [(const_int 0)]))\n-\t\t(vec_select:HI (match_dup 2) (parallel [(const_int 1)])))\n-\t      (ss_plus:HI\n-\t\t(vec_select:HI (match_dup 2) (parallel [(const_int 2)]))\n-\t\t(vec_select:HI (match_dup 2) (parallel [(const_int 3)]))))\n-\t    (vec_concat:V2HI\n-\t      (ss_plus:HI\n-\t\t(vec_select:HI (match_dup 2) (parallel [(const_int 4)]))\n-\t\t(vec_select:HI (match_dup 2) (parallel [(const_int 5)])))\n-\t      (ss_plus:HI\n-\t\t(vec_select:HI (match_dup 2) (parallel [(const_int 6)]))\n-\t\t(vec_select:HI (match_dup 2) (parallel [(const_int 7)])))))))]\n-  \"TARGET_AVX\"\n-  \"vphaddsw\\t{%2, %1, %0|%0, %1, %2}\"\n-  [(set_attr \"type\" \"sseiadd\")\n-   (set_attr \"prefix_extra\" \"1\")\n-   (set_attr \"prefix\" \"vex\")\n-   (set_attr \"mode\" \"TI\")])\n-\n (define_insn \"ssse3_phaddswv8hi3\"\n-  [(set (match_operand:V8HI 0 \"register_operand\" \"=x\")\n+  [(set (match_operand:V8HI 0 \"register_operand\" \"=x,x\")\n \t(vec_concat:V8HI\n \t  (vec_concat:V4HI\n \t    (vec_concat:V2HI\n \t      (ss_plus:HI\n \t\t(vec_select:HI\n-\t\t  (match_operand:V8HI 1 \"register_operand\" \"0\")\n+\t\t  (match_operand:V8HI 1 \"register_operand\" \"0,x\")\n \t\t  (parallel [(const_int 0)]))\n \t\t(vec_select:HI (match_dup 1) (parallel [(const_int 1)])))\n \t      (ss_plus:HI\n@@ -7612,7 +7459,7 @@\n \t    (vec_concat:V2HI\n \t      (ss_plus:HI\n \t\t(vec_select:HI\n-\t\t  (match_operand:V8HI 2 \"nonimmediate_operand\" \"xm\")\n+\t\t  (match_operand:V8HI 2 \"nonimmediate_operand\" \"xm,xm\")\n \t\t  (parallel [(const_int 0)]))\n \t\t(vec_select:HI (match_dup 2) (parallel [(const_int 1)])))\n \t      (ss_plus:HI\n@@ -7626,11 +7473,15 @@\n \t\t(vec_select:HI (match_dup 2) (parallel [(const_int 6)]))\n \t\t(vec_select:HI (match_dup 2) (parallel [(const_int 7)])))))))]\n   \"TARGET_SSSE3\"\n-  \"phaddsw\\t{%2, %0|%0, %2}\"\n-  [(set_attr \"type\" \"sseiadd\")\n+  \"@\n+   phaddsw\\t{%2, %0|%0, %2}\n+   vphaddsw\\t{%2, %1, %0|%0, %1, %2}\"\n+  [(set_attr \"isa\" \"noavx,avx\")\n+   (set_attr \"type\" \"sseiadd\")\n    (set_attr \"atom_unit\" \"complex\")\n-   (set_attr \"prefix_data16\" \"1\")\n+   (set_attr \"prefix_data16\" \"1,*\")\n    (set_attr \"prefix_extra\" \"1\")\n+   (set_attr \"prefix\" \"orig,vex\")\n    (set_attr \"mode\" \"TI\")])\n \n (define_insn \"ssse3_phaddswv4hi3\"\n@@ -7662,58 +7513,14 @@\n    (set (attr \"prefix_rex\") (symbol_ref \"x86_extended_reg_mentioned_p (insn)\"))\n    (set_attr \"mode\" \"DI\")])\n \n-(define_insn \"*avx_phsubwv8hi3\"\n-  [(set (match_operand:V8HI 0 \"register_operand\" \"=x\")\n-\t(vec_concat:V8HI\n-\t  (vec_concat:V4HI\n-\t    (vec_concat:V2HI\n-\t      (minus:HI\n-\t\t(vec_select:HI\n-\t\t  (match_operand:V8HI 1 \"register_operand\" \"x\")\n-\t\t  (parallel [(const_int 0)]))\n-\t\t(vec_select:HI (match_dup 1) (parallel [(const_int 1)])))\n-\t      (minus:HI\n-\t\t(vec_select:HI (match_dup 1) (parallel [(const_int 2)]))\n-\t\t(vec_select:HI (match_dup 1) (parallel [(const_int 3)]))))\n-\t    (vec_concat:V2HI\n-\t      (minus:HI\n-\t\t(vec_select:HI (match_dup 1) (parallel [(const_int 4)]))\n-\t\t(vec_select:HI (match_dup 1) (parallel [(const_int 5)])))\n-\t      (minus:HI\n-\t\t(vec_select:HI (match_dup 1) (parallel [(const_int 6)]))\n-\t\t(vec_select:HI (match_dup 1) (parallel [(const_int 7)])))))\n-\t  (vec_concat:V4HI\n-\t    (vec_concat:V2HI\n-\t      (minus:HI\n-\t\t(vec_select:HI\n-\t\t  (match_operand:V8HI 2 \"nonimmediate_operand\" \"xm\")\n-\t\t  (parallel [(const_int 0)]))\n-\t\t(vec_select:HI (match_dup 2) (parallel [(const_int 1)])))\n-\t      (minus:HI\n-\t\t(vec_select:HI (match_dup 2) (parallel [(const_int 2)]))\n-\t\t(vec_select:HI (match_dup 2) (parallel [(const_int 3)]))))\n-\t    (vec_concat:V2HI\n-\t      (minus:HI\n-\t\t(vec_select:HI (match_dup 2) (parallel [(const_int 4)]))\n-\t\t(vec_select:HI (match_dup 2) (parallel [(const_int 5)])))\n-\t      (minus:HI\n-\t\t(vec_select:HI (match_dup 2) (parallel [(const_int 6)]))\n-\t\t(vec_select:HI (match_dup 2) (parallel [(const_int 7)])))))))]\n-  \"TARGET_AVX\"\n-  \"vphsubw\\t{%2, %1, %0|%0, %1, %2}\"\n-  [(set_attr \"type\" \"sseiadd\")\n-   (set_attr \"prefix_extra\" \"1\")\n-   (set_attr \"prefix\" \"vex\")\n-   (set_attr \"mode\" \"TI\")])\n-\n (define_insn \"ssse3_phsubwv8hi3\"\n-  [(set (match_operand:V8HI 0 \"register_operand\" \"=x\")\n+  [(set (match_operand:V8HI 0 \"register_operand\" \"=x,x\")\n \t(vec_concat:V8HI\n \t  (vec_concat:V4HI\n \t    (vec_concat:V2HI\n \t      (minus:HI\n \t\t(vec_select:HI\n-\t\t  (match_operand:V8HI 1 \"register_operand\" \"0\")\n+\t\t  (match_operand:V8HI 1 \"register_operand\" \"0,x\")\n \t\t  (parallel [(const_int 0)]))\n \t\t(vec_select:HI (match_dup 1) (parallel [(const_int 1)])))\n \t      (minus:HI\n@@ -7730,7 +7537,7 @@\n \t    (vec_concat:V2HI\n \t      (minus:HI\n \t\t(vec_select:HI\n-\t\t  (match_operand:V8HI 2 \"nonimmediate_operand\" \"xm\")\n+\t\t  (match_operand:V8HI 2 \"nonimmediate_operand\" \"xm,xm\")\n \t\t  (parallel [(const_int 0)]))\n \t\t(vec_select:HI (match_dup 2) (parallel [(const_int 1)])))\n \t      (minus:HI\n@@ -7744,11 +7551,15 @@\n \t\t(vec_select:HI (match_dup 2) (parallel [(const_int 6)]))\n \t\t(vec_select:HI (match_dup 2) (parallel [(const_int 7)])))))))]\n   \"TARGET_SSSE3\"\n-  \"phsubw\\t{%2, %0|%0, %2}\"\n-  [(set_attr \"type\" \"sseiadd\")\n+  \"@\n+   phsubw\\t{%2, %0|%0, %2}\n+   vphsubw\\t{%2, %1, %0|%0, %1, %2}\"\n+  [(set_attr \"isa\" \"noavx,avx\")\n+   (set_attr \"type\" \"sseiadd\")\n    (set_attr \"atom_unit\" \"complex\")\n-   (set_attr \"prefix_data16\" \"1\")\n+   (set_attr \"prefix_data16\" \"1,*\")\n    (set_attr \"prefix_extra\" \"1\")\n+   (set_attr \"prefix\" \"orig,vex\")\n    (set_attr \"mode\" \"TI\")])\n \n (define_insn \"ssse3_phsubwv4hi3\"\n@@ -7780,41 +7591,13 @@\n    (set (attr \"prefix_rex\") (symbol_ref \"x86_extended_reg_mentioned_p (insn)\"))\n    (set_attr \"mode\" \"DI\")])\n \n-(define_insn \"*avx_phsubdv4si3\"\n-  [(set (match_operand:V4SI 0 \"register_operand\" \"=x\")\n-\t(vec_concat:V4SI\n-\t  (vec_concat:V2SI\n-\t    (minus:SI\n-\t      (vec_select:SI\n-\t\t(match_operand:V4SI 1 \"register_operand\" \"x\")\n-\t\t(parallel [(const_int 0)]))\n-\t      (vec_select:SI (match_dup 1) (parallel [(const_int 1)])))\n-\t    (minus:SI\n-\t      (vec_select:SI (match_dup 1) (parallel [(const_int 2)]))\n-\t      (vec_select:SI (match_dup 1) (parallel [(const_int 3)]))))\n-\t  (vec_concat:V2SI\n-\t    (minus:SI\n-\t      (vec_select:SI\n-\t\t(match_operand:V4SI 2 \"nonimmediate_operand\" \"xm\")\n-\t\t(parallel [(const_int 0)]))\n-\t      (vec_select:SI (match_dup 2) (parallel [(const_int 1)])))\n-\t    (minus:SI\n-\t      (vec_select:SI (match_dup 2) (parallel [(const_int 2)]))\n-\t      (vec_select:SI (match_dup 2) (parallel [(const_int 3)]))))))]\n-  \"TARGET_AVX\"\n-  \"vphsubd\\t{%2, %1, %0|%0, %1, %2}\"\n-  [(set_attr \"type\" \"sseiadd\")\n-   (set_attr \"prefix_extra\" \"1\")\n-   (set_attr \"prefix\" \"vex\")\n-   (set_attr \"mode\" \"TI\")])\n-\n (define_insn \"ssse3_phsubdv4si3\"\n-  [(set (match_operand:V4SI 0 \"register_operand\" \"=x\")\n+  [(set (match_operand:V4SI 0 \"register_operand\" \"=x,x\")\n \t(vec_concat:V4SI\n \t  (vec_concat:V2SI\n \t    (minus:SI\n \t      (vec_select:SI\n-\t\t(match_operand:V4SI 1 \"register_operand\" \"0\")\n+\t\t(match_operand:V4SI 1 \"register_operand\" \"0,x\")\n \t\t(parallel [(const_int 0)]))\n \t      (vec_select:SI (match_dup 1) (parallel [(const_int 1)])))\n \t    (minus:SI\n@@ -7823,18 +7606,23 @@\n \t  (vec_concat:V2SI\n \t    (minus:SI\n \t      (vec_select:SI\n-\t\t(match_operand:V4SI 2 \"nonimmediate_operand\" \"xm\")\n+\t\t(match_operand:V4SI 2 \"nonimmediate_operand\" \"xm,xm\")\n \t\t(parallel [(const_int 0)]))\n \t      (vec_select:SI (match_dup 2) (parallel [(const_int 1)])))\n \t    (minus:SI\n \t      (vec_select:SI (match_dup 2) (parallel [(const_int 2)]))\n \t      (vec_select:SI (match_dup 2) (parallel [(const_int 3)]))))))]\n   \"TARGET_SSSE3\"\n-  \"phsubd\\t{%2, %0|%0, %2}\"\n-  [(set_attr \"type\" \"sseiadd\")\n+  \"@\n+   phsubd\\t{%2, %0|%0, %2}\n+   vphsubd\\t{%2, %1, %0|%0, %1, %2}\"\n+  \n+  [(set_attr \"isa\" \"noavx,avx\")\n+   (set_attr \"type\" \"sseiadd\")\n    (set_attr \"atom_unit\" \"complex\")\n-   (set_attr \"prefix_data16\" \"1\")\n+   (set_attr \"prefix_data16\" \"1,*\")\n    (set_attr \"prefix_extra\" \"1\")\n+   (set_attr \"prefix\" \"orig,vex\")\n    (set_attr \"mode\" \"TI\")])\n \n (define_insn \"ssse3_phsubdv2si3\"\n@@ -7858,58 +7646,14 @@\n    (set (attr \"prefix_rex\") (symbol_ref \"x86_extended_reg_mentioned_p (insn)\"))\n    (set_attr \"mode\" \"DI\")])\n \n-(define_insn \"*avx_phsubswv8hi3\"\n-  [(set (match_operand:V8HI 0 \"register_operand\" \"=x\")\n-\t(vec_concat:V8HI\n-\t  (vec_concat:V4HI\n-\t    (vec_concat:V2HI\n-\t      (ss_minus:HI\n-\t\t(vec_select:HI\n-\t\t  (match_operand:V8HI 1 \"register_operand\" \"x\")\n-\t\t  (parallel [(const_int 0)]))\n-\t\t(vec_select:HI (match_dup 1) (parallel [(const_int 1)])))\n-\t      (ss_minus:HI\n-\t\t(vec_select:HI (match_dup 1) (parallel [(const_int 2)]))\n-\t\t(vec_select:HI (match_dup 1) (parallel [(const_int 3)]))))\n-\t    (vec_concat:V2HI\n-\t      (ss_minus:HI\n-\t\t(vec_select:HI (match_dup 1) (parallel [(const_int 4)]))\n-\t\t(vec_select:HI (match_dup 1) (parallel [(const_int 5)])))\n-\t      (ss_minus:HI\n-\t\t(vec_select:HI (match_dup 1) (parallel [(const_int 6)]))\n-\t\t(vec_select:HI (match_dup 1) (parallel [(const_int 7)])))))\n-\t  (vec_concat:V4HI\n-\t    (vec_concat:V2HI\n-\t      (ss_minus:HI\n-\t\t(vec_select:HI\n-\t\t  (match_operand:V8HI 2 \"nonimmediate_operand\" \"xm\")\n-\t\t  (parallel [(const_int 0)]))\n-\t\t(vec_select:HI (match_dup 2) (parallel [(const_int 1)])))\n-\t      (ss_minus:HI\n-\t\t(vec_select:HI (match_dup 2) (parallel [(const_int 2)]))\n-\t\t(vec_select:HI (match_dup 2) (parallel [(const_int 3)]))))\n-\t    (vec_concat:V2HI\n-\t      (ss_minus:HI\n-\t\t(vec_select:HI (match_dup 2) (parallel [(const_int 4)]))\n-\t\t(vec_select:HI (match_dup 2) (parallel [(const_int 5)])))\n-\t      (ss_minus:HI\n-\t\t(vec_select:HI (match_dup 2) (parallel [(const_int 6)]))\n-\t\t(vec_select:HI (match_dup 2) (parallel [(const_int 7)])))))))]\n-  \"TARGET_AVX\"\n-  \"vphsubsw\\t{%2, %1, %0|%0, %1, %2}\"\n-  [(set_attr \"type\" \"sseiadd\")\n-   (set_attr \"prefix_extra\" \"1\")\n-   (set_attr \"prefix\" \"vex\")\n-   (set_attr \"mode\" \"TI\")])\n-\n (define_insn \"ssse3_phsubswv8hi3\"\n-  [(set (match_operand:V8HI 0 \"register_operand\" \"=x\")\n+  [(set (match_operand:V8HI 0 \"register_operand\" \"=x,x\")\n \t(vec_concat:V8HI\n \t  (vec_concat:V4HI\n \t    (vec_concat:V2HI\n \t      (ss_minus:HI\n \t\t(vec_select:HI\n-\t\t  (match_operand:V8HI 1 \"register_operand\" \"0\")\n+\t\t  (match_operand:V8HI 1 \"register_operand\" \"0,x\")\n \t\t  (parallel [(const_int 0)]))\n \t\t(vec_select:HI (match_dup 1) (parallel [(const_int 1)])))\n \t      (ss_minus:HI\n@@ -7926,7 +7670,7 @@\n \t    (vec_concat:V2HI\n \t      (ss_minus:HI\n \t\t(vec_select:HI\n-\t\t  (match_operand:V8HI 2 \"nonimmediate_operand\" \"xm\")\n+\t\t  (match_operand:V8HI 2 \"nonimmediate_operand\" \"xm,xm\")\n \t\t  (parallel [(const_int 0)]))\n \t\t(vec_select:HI (match_dup 2) (parallel [(const_int 1)])))\n \t      (ss_minus:HI\n@@ -7940,11 +7684,15 @@\n \t\t(vec_select:HI (match_dup 2) (parallel [(const_int 6)]))\n \t\t(vec_select:HI (match_dup 2) (parallel [(const_int 7)])))))))]\n   \"TARGET_SSSE3\"\n-  \"phsubsw\\t{%2, %0|%0, %2}\"\n-  [(set_attr \"type\" \"sseiadd\")\n+  \"@\n+   phsubsw\\t{%2, %0|%0, %2}\n+   vphsubsw\\t{%2, %1, %0|%0, %1, %2}\"\n+  [(set_attr \"isa\" \"noavx,avx\")\n+   (set_attr \"type\" \"sseiadd\")\n    (set_attr \"atom_unit\" \"complex\")\n-   (set_attr \"prefix_data16\" \"1\")\n+   (set_attr \"prefix_data16\" \"1,*\")\n    (set_attr \"prefix_extra\" \"1\")\n+   (set_attr \"prefix\" \"orig,vex\")\n    (set_attr \"mode\" \"TI\")])\n \n (define_insn \"ssse3_phsubswv4hi3\"\n@@ -7976,67 +7724,13 @@\n    (set (attr \"prefix_rex\") (symbol_ref \"x86_extended_reg_mentioned_p (insn)\"))\n    (set_attr \"mode\" \"DI\")])\n \n-(define_insn \"*avx_pmaddubsw128\"\n-  [(set (match_operand:V8HI 0 \"register_operand\" \"=x\")\n-\t(ss_plus:V8HI\n-\t  (mult:V8HI\n-\t    (zero_extend:V8HI\n-\t      (vec_select:V8QI\n-\t\t(match_operand:V16QI 1 \"register_operand\" \"x\")\n-\t\t(parallel [(const_int 0)\n-\t\t\t   (const_int 2)\n-\t\t\t   (const_int 4)\n-\t\t\t   (const_int 6)\n-\t\t\t   (const_int 8)\n-\t\t\t   (const_int 10)\n-\t\t\t   (const_int 12)\n-\t\t\t   (const_int 14)])))\n-\t    (sign_extend:V8HI\n-\t      (vec_select:V8QI\n-\t\t(match_operand:V16QI 2 \"nonimmediate_operand\" \"xm\")\n-\t\t(parallel [(const_int 0)\n-\t\t\t   (const_int 2)\n-\t\t\t   (const_int 4)\n-\t\t\t   (const_int 6)\n-\t\t\t   (const_int 8)\n-\t\t\t   (const_int 10)\n-\t\t\t   (const_int 12)\n-\t\t\t   (const_int 14)]))))\n-\t  (mult:V8HI\n-\t    (zero_extend:V8HI\n-\t      (vec_select:V8QI (match_dup 1)\n-\t\t(parallel [(const_int 1)\n-\t\t\t   (const_int 3)\n-\t\t\t   (const_int 5)\n-\t\t\t   (const_int 7)\n-\t\t\t   (const_int 9)\n-\t\t\t   (const_int 11)\n-\t\t\t   (const_int 13)\n-\t\t\t   (const_int 15)])))\n-\t    (sign_extend:V8HI\n-\t      (vec_select:V8QI (match_dup 2)\n-\t\t(parallel [(const_int 1)\n-\t\t\t   (const_int 3)\n-\t\t\t   (const_int 5)\n-\t\t\t   (const_int 7)\n-\t\t\t   (const_int 9)\n-\t\t\t   (const_int 11)\n-\t\t\t   (const_int 13)\n-\t\t\t   (const_int 15)]))))))]\n-  \"TARGET_AVX\"\n-  \"vpmaddubsw\\t{%2, %1, %0|%0, %1, %2}\"\n-  [(set_attr \"type\" \"sseiadd\")\n-   (set_attr \"prefix_extra\" \"1\")\n-   (set_attr \"prefix\" \"vex\")\n-   (set_attr \"mode\" \"TI\")])\n-\n (define_insn \"ssse3_pmaddubsw128\"\n-  [(set (match_operand:V8HI 0 \"register_operand\" \"=x\")\n+  [(set (match_operand:V8HI 0 \"register_operand\" \"=x,x\")\n \t(ss_plus:V8HI\n \t  (mult:V8HI\n \t    (zero_extend:V8HI\n \t      (vec_select:V8QI\n-\t\t(match_operand:V16QI 1 \"register_operand\" \"0\")\n+\t\t(match_operand:V16QI 1 \"register_operand\" \"0,x\")\n \t\t(parallel [(const_int 0)\n \t\t\t   (const_int 2)\n \t\t\t   (const_int 4)\n@@ -8047,7 +7741,7 @@\n \t\t\t   (const_int 14)])))\n \t    (sign_extend:V8HI\n \t      (vec_select:V8QI\n-\t\t(match_operand:V16QI 2 \"nonimmediate_operand\" \"xm\")\n+\t\t(match_operand:V16QI 2 \"nonimmediate_operand\" \"xm,xm\")\n \t\t(parallel [(const_int 0)\n \t\t\t   (const_int 2)\n \t\t\t   (const_int 4)\n@@ -8078,11 +7772,15 @@\n \t\t\t   (const_int 13)\n \t\t\t   (const_int 15)]))))))]\n   \"TARGET_SSSE3\"\n-  \"pmaddubsw\\t{%2, %0|%0, %2}\"\n-  [(set_attr \"type\" \"sseiadd\")\n+  \"@\n+   pmaddubsw\\t{%2, %0|%0, %2}\n+   vpmaddubsw\\t{%2, %1, %0|%0, %1, %2}\"\n+  [(set_attr \"isa\" \"noavx,avx\")\n+   (set_attr \"type\" \"sseiadd\")\n    (set_attr \"atom_unit\" \"simul\")\n-   (set_attr \"prefix_data16\" \"1\")\n+   (set_attr \"prefix_data16\" \"1,*\")\n    (set_attr \"prefix_extra\" \"1\")\n+   (set_attr \"prefix\" \"orig,vex\")\n    (set_attr \"mode\" \"TI\")])\n \n (define_insn \"ssse3_pmaddubsw\"\n@@ -8144,52 +7842,32 @@\n   \"TARGET_SSSE3\"\n   \"ix86_fixup_binary_operands_no_copy (MULT, V8HImode, operands);\")\n \n-(define_insn \"*avx_pmulhrswv8hi3\"\n-  [(set (match_operand:V8HI 0 \"register_operand\" \"=x\")\n-\t(truncate:V8HI\n-\t  (lshiftrt:V8SI\n-\t    (plus:V8SI\n-\t      (lshiftrt:V8SI\n-\t\t(mult:V8SI\n-\t\t  (sign_extend:V8SI\n-\t\t    (match_operand:V8HI 1 \"nonimmediate_operand\" \"%x\"))\n-\t\t  (sign_extend:V8SI\n-\t\t    (match_operand:V8HI 2 \"nonimmediate_operand\" \"xm\")))\n-\t\t(const_int 14))\n-\t      (const_vector:V8HI [(const_int 1) (const_int 1)\n-\t\t\t\t  (const_int 1) (const_int 1)\n-\t\t\t\t  (const_int 1) (const_int 1)\n-\t\t\t\t  (const_int 1) (const_int 1)]))\n-\t    (const_int 1))))]\n-  \"TARGET_AVX && ix86_binary_operator_ok (MULT, V8HImode, operands)\"\n-  \"vpmulhrsw\\t{%2, %1, %0|%0, %1, %2}\"\n-  [(set_attr \"type\" \"sseimul\")\n-   (set_attr \"prefix_extra\" \"1\")\n-   (set_attr \"prefix\" \"vex\")\n-   (set_attr \"mode\" \"TI\")])\n-\n (define_insn \"*ssse3_pmulhrswv8hi3\"\n-  [(set (match_operand:V8HI 0 \"register_operand\" \"=x\")\n+  [(set (match_operand:V8HI 0 \"register_operand\" \"=x,x\")\n \t(truncate:V8HI\n \t  (lshiftrt:V8SI\n \t    (plus:V8SI\n \t      (lshiftrt:V8SI\n \t\t(mult:V8SI\n \t\t  (sign_extend:V8SI\n-\t\t    (match_operand:V8HI 1 \"nonimmediate_operand\" \"%0\"))\n+\t\t    (match_operand:V8HI 1 \"nonimmediate_operand\" \"%0,x\"))\n \t\t  (sign_extend:V8SI\n-\t\t    (match_operand:V8HI 2 \"nonimmediate_operand\" \"xm\")))\n+\t\t    (match_operand:V8HI 2 \"nonimmediate_operand\" \"xm,xm\")))\n \t\t(const_int 14))\n \t      (const_vector:V8HI [(const_int 1) (const_int 1)\n \t\t\t\t  (const_int 1) (const_int 1)\n \t\t\t\t  (const_int 1) (const_int 1)\n \t\t\t\t  (const_int 1) (const_int 1)]))\n \t    (const_int 1))))]\n   \"TARGET_SSSE3 && ix86_binary_operator_ok (MULT, V8HImode, operands)\"\n-  \"pmulhrsw\\t{%2, %0|%0, %2}\"\n-  [(set_attr \"type\" \"sseimul\")\n-   (set_attr \"prefix_data16\" \"1\")\n+  \"@\n+   pmulhrsw\\t{%2, %0|%0, %2}\n+   vpmulhrsw\\t{%2, %1, %0|%0, %1, %2}\"\n+  [(set_attr \"isa\" \"noavx,avx\")\n+   (set_attr \"type\" \"sseimul\")\n+   (set_attr \"prefix_data16\" \"1,*\")\n    (set_attr \"prefix_extra\" \"1\")\n+   (set_attr \"prefix\" \"orig,vex\")\n    (set_attr \"mode\" \"TI\")])\n \n (define_expand \"ssse3_pmulhrswv4hi3\"\n@@ -8232,28 +7910,20 @@\n    (set (attr \"prefix_rex\") (symbol_ref \"x86_extended_reg_mentioned_p (insn)\"))\n    (set_attr \"mode\" \"DI\")])\n \n-(define_insn \"*avx_pshufbv16qi3\"\n-  [(set (match_operand:V16QI 0 \"register_operand\" \"=x\")\n-\t(unspec:V16QI [(match_operand:V16QI 1 \"register_operand\" \"x\")\n-\t\t       (match_operand:V16QI 2 \"nonimmediate_operand\" \"xm\")]\n-\t\t      UNSPEC_PSHUFB))]\n-  \"TARGET_AVX\"\n-  \"vpshufb\\t{%2, %1, %0|%0, %1, %2}\";\n-  [(set_attr \"type\" \"sselog1\")\n-   (set_attr \"prefix_extra\" \"1\")\n-   (set_attr \"prefix\" \"vex\")\n-   (set_attr \"mode\" \"TI\")])\n-\n (define_insn \"ssse3_pshufbv16qi3\"\n-  [(set (match_operand:V16QI 0 \"register_operand\" \"=x\")\n-\t(unspec:V16QI [(match_operand:V16QI 1 \"register_operand\" \"0\")\n-\t\t       (match_operand:V16QI 2 \"nonimmediate_operand\" \"xm\")]\n+  [(set (match_operand:V16QI 0 \"register_operand\" \"=x,x\")\n+\t(unspec:V16QI [(match_operand:V16QI 1 \"register_operand\" \"0,x\")\n+\t\t       (match_operand:V16QI 2 \"nonimmediate_operand\" \"xm,xm\")]\n \t\t      UNSPEC_PSHUFB))]\n   \"TARGET_SSSE3\"\n-  \"pshufb\\t{%2, %0|%0, %2}\";\n-  [(set_attr \"type\" \"sselog1\")\n-   (set_attr \"prefix_data16\" \"1\")\n+  \"@\n+   pshufb\\t{%2, %0|%0, %2}\n+   vpshufb\\t{%2, %1, %0|%0, %1, %2}\"\n+  [(set_attr \"isa\" \"noavx,avx\")\n+   (set_attr \"type\" \"sselog1\")\n+   (set_attr \"prefix_data16\" \"1,*\")\n    (set_attr \"prefix_extra\" \"1\")\n+   (set_attr \"prefix\" \"orig,vex\")\n    (set_attr \"mode\" \"TI\")])\n \n (define_insn \"ssse3_pshufbv8qi3\"\n@@ -8268,30 +7938,21 @@\n    (set (attr \"prefix_rex\") (symbol_ref \"x86_extended_reg_mentioned_p (insn)\"))\n    (set_attr \"mode\" \"DI\")])\n \n-(define_insn \"*avx_psign<mode>3\"\n-  [(set (match_operand:SSEMODE124 0 \"register_operand\" \"=x\")\n-\t(unspec:SSEMODE124\n-\t  [(match_operand:SSEMODE124 1 \"register_operand\" \"x\")\n-\t   (match_operand:SSEMODE124 2 \"nonimmediate_operand\" \"xm\")]\n-\t  UNSPEC_PSIGN))]\n-  \"TARGET_AVX\"\n-  \"vpsign<ssevecsize>\\t{%2, %1, %0|%0, %1, %2}\";\n-  [(set_attr \"type\" \"sselog1\")\n-   (set_attr \"prefix_extra\" \"1\")\n-   (set_attr \"prefix\" \"vex\")\n-   (set_attr \"mode\" \"TI\")])\n-\n (define_insn \"ssse3_psign<mode>3\"\n-  [(set (match_operand:SSEMODE124 0 \"register_operand\" \"=x\")\n+  [(set (match_operand:SSEMODE124 0 \"register_operand\" \"=x,x\")\n \t(unspec:SSEMODE124\n-\t  [(match_operand:SSEMODE124 1 \"register_operand\" \"0\")\n-\t   (match_operand:SSEMODE124 2 \"nonimmediate_operand\" \"xm\")]\n+\t  [(match_operand:SSEMODE124 1 \"register_operand\" \"0,x\")\n+\t   (match_operand:SSEMODE124 2 \"nonimmediate_operand\" \"xm,xm\")]\n \t  UNSPEC_PSIGN))]\n   \"TARGET_SSSE3\"\n-  \"psign<ssevecsize>\\t{%2, %0|%0, %2}\";\n-  [(set_attr \"type\" \"sselog1\")\n-   (set_attr \"prefix_data16\" \"1\")\n+  \"@\n+   psign<ssevecsize>\\t{%2, %0|%0, %2}\n+   vpsign<ssevecsize>\\t{%2, %1, %0|%0, %1, %2}\"\n+  [(set_attr \"isa\" \"noavx,avx\")\n+   (set_attr \"type\" \"sselog1\")\n+   (set_attr \"prefix_data16\" \"1,*\")\n    (set_attr \"prefix_extra\" \"1\")\n+   (set_attr \"prefix\" \"orig,vex\")\n    (set_attr \"mode\" \"TI\")])\n \n (define_insn \"ssse3_psign<mode>3\"\n@@ -8307,39 +7968,33 @@\n    (set (attr \"prefix_rex\") (symbol_ref \"x86_extended_reg_mentioned_p (insn)\"))\n    (set_attr \"mode\" \"DI\")])\n \n-(define_insn \"*avx_palignrti\"\n-  [(set (match_operand:TI 0 \"register_operand\" \"=x\")\n-\t(unspec:TI [(match_operand:TI 1 \"register_operand\" \"x\")\n-\t\t    (match_operand:TI 2 \"nonimmediate_operand\" \"xm\")\n-\t\t    (match_operand:SI 3 \"const_0_to_255_mul_8_operand\" \"n\")]\n-\t\t   UNSPEC_PALIGNR))]\n-  \"TARGET_AVX\"\n-{\n-  operands[3] = GEN_INT (INTVAL (operands[3]) / 8);\n-  return \"vpalignr\\t{%3, %2, %1, %0|%0, %1, %2, %3}\";\n-}\n-  [(set_attr \"type\" \"sseishft\")\n-   (set_attr \"prefix_extra\" \"1\")\n-   (set_attr \"length_immediate\" \"1\")\n-   (set_attr \"prefix\" \"vex\")\n-   (set_attr \"mode\" \"TI\")])\n-\n (define_insn \"ssse3_palignrti\"\n-  [(set (match_operand:TI 0 \"register_operand\" \"=x\")\n-\t(unspec:TI [(match_operand:TI 1 \"register_operand\" \"0\")\n-\t\t    (match_operand:TI 2 \"nonimmediate_operand\" \"xm\")\n-\t\t    (match_operand:SI 3 \"const_0_to_255_mul_8_operand\" \"n\")]\n+  [(set (match_operand:TI 0 \"register_operand\" \"=x,x\")\n+\t(unspec:TI [(match_operand:TI 1 \"register_operand\" \"0,x\")\n+\t\t    (match_operand:TI 2 \"nonimmediate_operand\" \"xm,xm\")\n+\t\t    (match_operand:SI 3 \"const_0_to_255_mul_8_operand\" \"n,n\")]\n \t\t   UNSPEC_PALIGNR))]\n   \"TARGET_SSSE3\"\n {\n   operands[3] = GEN_INT (INTVAL (operands[3]) / 8);\n-  return \"palignr\\t{%3, %2, %0|%0, %2, %3}\";\n+\n+  switch (which_alternative)\n+    {\n+    case 0:\n+      return \"palignr\\t{%3, %2, %0|%0, %2, %3}\";\n+    case 1:\n+      return \"vpalignr\\t{%3, %2, %1, %0|%0, %1, %2, %3}\";\n+    default:\n+      gcc_unreachable ();\n+    }\n }\n-  [(set_attr \"type\" \"sseishft\")\n+  [(set_attr \"isa\" \"noavx,avx\")\n+   (set_attr \"type\" \"sseishft\")\n    (set_attr \"atom_unit\" \"sishuf\")\n-   (set_attr \"prefix_data16\" \"1\")\n+   (set_attr \"prefix_data16\" \"1,*\")\n    (set_attr \"prefix_extra\" \"1\")\n    (set_attr \"length_immediate\" \"1\")\n+   (set_attr \"prefix\" \"orig,vex\")\n    (set_attr \"mode\" \"TI\")])\n \n (define_insn \"ssse3_palignrdi\"\n@@ -8362,7 +8017,8 @@\n \n (define_insn \"abs<mode>2\"\n   [(set (match_operand:SSEMODE124 0 \"register_operand\" \"=x\")\n-\t(abs:SSEMODE124 (match_operand:SSEMODE124 1 \"nonimmediate_operand\" \"xm\")))]\n+\t(abs:SSEMODE124\n+\t  (match_operand:SSEMODE124 1 \"nonimmediate_operand\" \"xm\")))]\n   \"TARGET_SSSE3\"\n   \"%vpabs<ssevecsize>\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"sselog1\")\n@@ -8373,7 +8029,8 @@\n \n (define_insn \"abs<mode>2\"\n   [(set (match_operand:MMXMODEI 0 \"register_operand\" \"=y\")\n-\t(abs:MMXMODEI (match_operand:MMXMODEI 1 \"nonimmediate_operand\" \"ym\")))]\n+\t(abs:MMXMODEI\n+\t  (match_operand:MMXMODEI 1 \"nonimmediate_operand\" \"ym\")))]\n   \"TARGET_SSSE3\"\n   \"pabs<mmxvecsize>\\t{%1, %0|%0, %1}\";\n   [(set_attr \"type\" \"sselog1\")"}]}