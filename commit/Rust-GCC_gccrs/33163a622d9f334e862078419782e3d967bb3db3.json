{"sha": "33163a622d9f334e862078419782e3d967bb3db3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzMxNjNhNjIyZDlmMzM0ZTg2MjA3ODQxOTc4MmUzZDk2N2JiM2RiMw==", "commit": {"author": {"name": "Vladimir Makarov", "email": "vmakarov@redhat.com", "date": "2019-03-25T21:14:40Z"}, "committer": {"name": "Vladimir Makarov", "email": "vmakarov@gcc.gnu.org", "date": "2019-03-25T21:14:40Z"}, "message": "re PR rtl-optimization/89676 (Redundant moves for long long shift on 32bit x86)\n\n2019-03-25  Vladimir Makarov  <vmakarov@redhat.com>\n\n\tPR rtl-optimization/89676\n\t* lra-constraints.c (curr_insn_transform): Do match reload for\n\tearly clobbers when the match was successful only for different\n\tregisters.\n\nFrom-SVN: r269924", "tree": {"sha": "905642bc07617588866bff4791c05f5f23552a95", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/905642bc07617588866bff4791c05f5f23552a95"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/33163a622d9f334e862078419782e3d967bb3db3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33163a622d9f334e862078419782e3d967bb3db3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/33163a622d9f334e862078419782e3d967bb3db3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33163a622d9f334e862078419782e3d967bb3db3/comments", "author": {"login": "vnmakarov", "id": 9855671, "node_id": "MDQ6VXNlcjk4NTU2NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/9855671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnmakarov", "html_url": "https://github.com/vnmakarov", "followers_url": "https://api.github.com/users/vnmakarov/followers", "following_url": "https://api.github.com/users/vnmakarov/following{/other_user}", "gists_url": "https://api.github.com/users/vnmakarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnmakarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnmakarov/subscriptions", "organizations_url": "https://api.github.com/users/vnmakarov/orgs", "repos_url": "https://api.github.com/users/vnmakarov/repos", "events_url": "https://api.github.com/users/vnmakarov/events{/privacy}", "received_events_url": "https://api.github.com/users/vnmakarov/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0abbc99c023b99e9fad6308f9a0cdfc1599b5b31", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0abbc99c023b99e9fad6308f9a0cdfc1599b5b31", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0abbc99c023b99e9fad6308f9a0cdfc1599b5b31"}], "stats": {"total": 35, "additions": 27, "deletions": 8}, "files": [{"sha": "2075480ca2beefc0ae7260ed2cf598c7beaf6e78", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33163a622d9f334e862078419782e3d967bb3db3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33163a622d9f334e862078419782e3d967bb3db3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=33163a622d9f334e862078419782e3d967bb3db3", "patch": "@@ -1,3 +1,10 @@\n+2019-03-25  Vladimir Makarov  <vmakarov@redhat.com>\n+\n+\tPR rtl-optimization/89676\n+\t* lra-constraints.c (curr_insn_transform): Do match reload for\n+\tearly clobbers when the match was successful only for different\n+\tregisters.\n+\n 2019-03-25  Martin Sebor  <msebor@redhat.com>\n \n \t* doc/extend.texi (Common Type Attributes): Document vector_size."}, {"sha": "cf33da8013e4679b0912ad47052956c35839494b", "filename": "gcc/lra-constraints.c", "status": "modified", "additions": 20, "deletions": 8, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33163a622d9f334e862078419782e3d967bb3db3/gcc%2Flra-constraints.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33163a622d9f334e862078419782e3d967bb3db3/gcc%2Flra-constraints.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra-constraints.c?ref=33163a622d9f334e862078419782e3d967bb3db3", "patch": "@@ -4259,15 +4259,27 @@ curr_insn_transform (bool check_only_p)\n \t  else if (goal_alt_matched[i][0] != -1\n \t\t   && curr_static_id->operand[i].type == OP_OUT\n \t\t   && (curr_static_id->operand_alternative\n-\t\t       [goal_alt_number * n_operands + i].earlyclobber))\n+\t\t       [goal_alt_number * n_operands + i].earlyclobber)\n+\t\t   && REG_P (op))\n \t    {\n-\t      /* Generate reloads for output and matched inputs.  This\n-\t\t is the easiest way to avoid creation of non-existing\n-\t\t conflicts in lra-lives.c.  */\n-\t      match_reload (i, goal_alt_matched[i], outputs, goal_alt[i], &before,\n-\t\t\t    &after, TRUE);\n-\t      outputs[n_outputs++] = i;\n-\t      outputs[n_outputs] = -1;\n+\t      for (j = 0; goal_alt_matched[i][j] != -1; j++)\n+\t\t{\n+\t\t  rtx op2 = *curr_id->operand_loc[goal_alt_matched[i][j]];\n+\t\t  \n+\t\t  if (REG_P (op2) && REGNO (op) != REGNO (op2))\n+\t\t    break;\n+\t\t}\n+\t      if (goal_alt_matched[i][j] != -1)\n+\t\t{\n+\t\t  /* Generate reloads for different output and matched\n+\t\t     input registers.  This is the easiest way to avoid\n+\t\t     creation of non-existing register conflicts in\n+\t\t     lra-lives.c.  */\n+\t\t  match_reload (i, goal_alt_matched[i], outputs, goal_alt[i], &before,\n+\t\t\t\t&after, TRUE);\n+\t\t  outputs[n_outputs++] = i;\n+\t\t  outputs[n_outputs] = -1;\n+\t\t}\n \t      continue;\n \t    }\n \t  else"}]}