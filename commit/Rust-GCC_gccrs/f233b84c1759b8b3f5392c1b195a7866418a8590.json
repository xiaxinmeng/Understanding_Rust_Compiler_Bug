{"sha": "f233b84c1759b8b3f5392c1b195a7866418a8590", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjIzM2I4NGMxNzU5YjhiM2Y1MzkyYzFiMTk1YTc4NjY0MThhODU5MA==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard@codesourcery.com", "date": "2007-01-19T13:30:35Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2007-01-19T13:30:35Z"}, "message": "200x-xx-xx Richard Sandiford <richard@codesourcery.com> Julian Brown <julian@codesourcery.com>\n\ngcc/\n200x-xx-xx  Richard Sandiford  <richard@codesourcery.com>\n\t    Julian Brown  <julian@codesourcery.com>\n\n\t* config/m68k/m68k.h (CONST_OK_FOR_LETTER_P): Add an 'R' case.\n\t* config/m68k/m68k.md (*movsi_cfv4): Fold into...\n\t(*movsi_cf): ...here.  Remove unnecessary 'R' from 'Rg'.\n\tAdd commentary.\n\nCo-Authored-By: Julian Brown <julian@codesourcery.com>\n\nFrom-SVN: r120958", "tree": {"sha": "b4ddc49f2fb66bd0e7dbad119a6a088795bbc092", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b4ddc49f2fb66bd0e7dbad119a6a088795bbc092"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f233b84c1759b8b3f5392c1b195a7866418a8590", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f233b84c1759b8b3f5392c1b195a7866418a8590", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f233b84c1759b8b3f5392c1b195a7866418a8590", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f233b84c1759b8b3f5392c1b195a7866418a8590/comments", "author": null, "committer": null, "parents": [{"sha": "bda2a57174547f0bfbf82c6722225aab7143665b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bda2a57174547f0bfbf82c6722225aab7143665b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bda2a57174547f0bfbf82c6722225aab7143665b"}], "stats": {"total": 25, "additions": 15, "deletions": 10}, "files": [{"sha": "014c268ee8d37be9e31caea0bf0cdf703344d12c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f233b84c1759b8b3f5392c1b195a7866418a8590/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f233b84c1759b8b3f5392c1b195a7866418a8590/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f233b84c1759b8b3f5392c1b195a7866418a8590", "patch": "@@ -1,3 +1,11 @@\n+2007-01-19  Richard Sandiford  <richard@codesourcery.com>\n+\t    Julian Brown  <julian@codesourcery.com>\n+\n+\t* config/m68k/m68k.h (CONST_OK_FOR_LETTER_P): Add an 'R' case.\n+\t* config/m68k/m68k.md (*movsi_cfv4): Fold into...\n+\t(*movsi_cf): ...here.  Remove unnecessary 'R' from 'Rg'.\n+\tAdd commentary.\n+\n 2007-01-19  Richard Sandiford  <richard@codesourcery.com>\n \n \t* config/m68k/m68k-protos.h (valid_mov3q_const): Take a HOST_WIDE_INT"}, {"sha": "d373be7c468827f47b58b651ce21b24dc7c36770", "filename": "gcc/config/m68k/m68k.h", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f233b84c1759b8b3f5392c1b195a7866418a8590/gcc%2Fconfig%2Fm68k%2Fm68k.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f233b84c1759b8b3f5392c1b195a7866418a8590/gcc%2Fconfig%2Fm68k%2Fm68k.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.h?ref=f233b84c1759b8b3f5392c1b195a7866418a8590", "patch": "@@ -493,7 +493,8 @@ extern enum reg_class regno_reg_class[];\n    `M' is for numbers that moveq+notb can't handle.\n    'N' is for range 24 to 31, rotatert:SI 8 to 1 expressed as rotate.\n    'O' is for 16 (for rotate using swap).\n-   'P' is for range 8 to 15, rotatert:HI 8 to 1 expressed as rotate.  */\n+   'P' is for range 8 to 15, rotatert:HI 8 to 1 expressed as rotate.\n+   'R' is for numbers that mov3q can handle.  */\n #define CONST_OK_FOR_LETTER_P(VALUE, C) \\\n   ((C) == 'I' ? (VALUE) > 0 && (VALUE) <= 8 : \\\n    (C) == 'J' ? (VALUE) >= -0x8000 && (VALUE) <= 0x7FFF : \\\n@@ -502,7 +503,8 @@ extern enum reg_class regno_reg_class[];\n    (C) == 'M' ? (VALUE) < -0x100 || (VALUE) >= 0x100 : \\\n    (C) == 'N' ? (VALUE) >= 24 && (VALUE) <= 31 : \\\n    (C) == 'O' ? (VALUE) == 16 : \\\n-   (C) == 'P' ? (VALUE) >= 8 && (VALUE) <= 15 : 0)\n+   (C) == 'P' ? (VALUE) >= 8 && (VALUE) <= 15 : \\\n+   (C) == 'R' ? valid_mov3q_const (VALUE) : 0)\n \n /* \"G\" defines all of the floating constants that are *NOT* 68881\n    constants.  This is so 68881 constants get reloaded and the"}, {"sha": "c953ec2d4349a391cf60d1e48eb102ca0884e5ee", "filename": "gcc/config/m68k/m68k.md", "status": "modified", "additions": 3, "deletions": 8, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f233b84c1759b8b3f5392c1b195a7866418a8590/gcc%2Fconfig%2Fm68k%2Fm68k.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f233b84c1759b8b3f5392c1b195a7866418a8590/gcc%2Fconfig%2Fm68k%2Fm68k.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.md?ref=f233b84c1759b8b3f5392c1b195a7866418a8590", "patch": "@@ -667,16 +667,11 @@\n   return output_move_simode (operands);\n })\n \n+;; ColdFire move instructions can have at most one operand of mode >= 6.\n (define_insn \"*movsi_cf\"\n   [(set (match_operand:SI 0 \"nonimmediate_operand\" \"=r<Q>,g,U\")\n-\t(match_operand:SI 1 \"general_operand\" \"g,r<Q>,U\"))]\n-  \"TARGET_COLDFIRE && !TARGET_ISAB\"\n-  \"* return output_move_simode (operands);\")\n-\n-(define_insn \"*movsi_cfv4\"\n-  [(set (match_operand:SI 0 \"nonimmediate_operand\" \"=r<Q>,g,U\")\n-\t(match_operand:SI 1 \"general_operand\" \"Rg,Rr<Q>,U\"))]\n-  \"TARGET_ISAB\"\n+\t(match_operand:SI 1 \"general_operand\" \"g,Rr<Q>,U\"))]\n+  \"TARGET_COLDFIRE\"\n   \"* return output_move_simode (operands);\")\n \n ;; Special case of fullword move, where we need to get a non-GOT PIC"}]}