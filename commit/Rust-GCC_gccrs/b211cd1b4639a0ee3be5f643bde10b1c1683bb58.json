{"sha": "b211cd1b4639a0ee3be5f643bde10b1c1683bb58", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjIxMWNkMWI0NjM5YTBlZTNiZTVmNjQzYmRlMTBiMWMxNjgzYmI1OA==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2019-03-05T22:40:21Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2019-03-05T22:40:21Z"}, "message": "cmd/go: pass -X64 to ar on aix/ppc64\n    \n    On aix/ppc64, ar tool must always have -X64 argument if it aims to\n    create 64 bits archives.\n    \n    Reviewed-on: https://go-review.googlesource.com/c/gofrontend/+/165317\n\nFrom-SVN: r269404", "tree": {"sha": "da7675a55880f51e117ece129430bd7006188e8b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/da7675a55880f51e117ece129430bd7006188e8b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b211cd1b4639a0ee3be5f643bde10b1c1683bb58", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b211cd1b4639a0ee3be5f643bde10b1c1683bb58", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b211cd1b4639a0ee3be5f643bde10b1c1683bb58", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b211cd1b4639a0ee3be5f643bde10b1c1683bb58/comments", "author": null, "committer": null, "parents": [{"sha": "507318f109624f58d4bf554c3ad284cdf09324e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/507318f109624f58d4bf554c3ad284cdf09324e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/507318f109624f58d4bf554c3ad284cdf09324e3"}], "stats": {"total": 15, "additions": 11, "deletions": 4}, "files": [{"sha": "3315957aea5496f1455d9509e0bc518a8004f4b4", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b211cd1b4639a0ee3be5f643bde10b1c1683bb58/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b211cd1b4639a0ee3be5f643bde10b1c1683bb58/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=b211cd1b4639a0ee3be5f643bde10b1c1683bb58", "patch": "@@ -1,4 +1,4 @@\n-3ae3024cae07fe7e85968ad2583add350616b296\n+14e48e756af205a68374c872f3bd03d62ccd70bb\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "a0eb2d3a8605c5e89fbb209fd478d47bcae752de", "filename": "libgo/go/cmd/go/internal/work/gccgo.go", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b211cd1b4639a0ee3be5f643bde10b1c1683bb58/libgo%2Fgo%2Fcmd%2Fgo%2Finternal%2Fwork%2Fgccgo.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b211cd1b4639a0ee3be5f643bde10b1c1683bb58/libgo%2Fgo%2Fcmd%2Fgo%2Finternal%2Fwork%2Fgccgo.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcmd%2Fgo%2Finternal%2Fwork%2Fgccgo.go?ref=b211cd1b4639a0ee3be5f643bde10b1c1683bb58", "patch": "@@ -278,6 +278,13 @@ func (tools gccgoToolchain) link(b *Builder, root *Action, out, importcfg string\n \t\treturn nil\n \t}\n \n+\tvar arArgs []string\n+\tif cfg.Goos == \"aix\" && cfg.Goarch == \"ppc64\" {\n+\t\t// AIX puts both 32-bit and 64-bit objects in the same archive.\n+\t\t// Tell the AIX \"ar\" command to only care about 64-bit objects.\n+\t\tarArgs = []string{\"-X64\"}\n+\t}\n+\n \tnewID := 0\n \treadAndRemoveCgoFlags := func(archive string) (string, error) {\n \t\tnewID++\n@@ -293,11 +300,11 @@ func (tools gccgoToolchain) link(b *Builder, root *Action, out, importcfg string\n \t\t\tb.Showcmd(\"\", \"ar d %s _cgo_flags\", newArchive)\n \t\t\treturn \"\", nil\n \t\t}\n-\t\terr := b.run(root, root.Objdir, desc, nil, tools.ar(), \"x\", newArchive, \"_cgo_flags\")\n+\t\terr := b.run(root, root.Objdir, desc, nil, tools.ar(), arArgs, \"x\", newArchive, \"_cgo_flags\")\n \t\tif err != nil {\n \t\t\treturn \"\", err\n \t\t}\n-\t\terr = b.run(root, \".\", desc, nil, tools.ar(), \"d\", newArchive, \"_cgo_flags\")\n+\t\terr = b.run(root, \".\", desc, nil, tools.ar(), arArgs, \"d\", newArchive, \"_cgo_flags\")\n \t\tif err != nil {\n \t\t\treturn \"\", err\n \t\t}\n@@ -516,7 +523,7 @@ func (tools gccgoToolchain) link(b *Builder, root *Action, out, importcfg string\n \n \tswitch buildmode {\n \tcase \"c-archive\":\n-\t\tif err := b.run(root, \".\", desc, nil, tools.ar(), \"rc\", realOut, out); err != nil {\n+\t\tif err := b.run(root, \".\", desc, nil, tools.ar(), arArgs, \"rc\", realOut, out); err != nil {\n \t\t\treturn err\n \t\t}\n \t}"}]}