{"sha": "4bfb8bbaf6294daa459f1f0d8216796001998afd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGJmYjhiYmFmNjI5NGRhYTQ1OWYxZjBkODIxNjc5NjAwMTk5OGFmZA==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2004-02-03T20:00:47Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2004-02-03T20:00:47Z"}, "message": "re PR c++/13950 ([DR176] lookup of dependent base name)\n\n\tPR c++/13950\n\t* parser.c (cp_parser_class_name): Robustify.\n\n\tPR c++/13970\n\t* parser.c (cp_parser_cache_group): Do not consume the EOF token.\n\n\tPR c++/13950\n\t* g++.dg/template/lookup4.C: New test.\n\n\tPR c++/13970\n\t* g++.dg/parse/error14.C: New test.\n\nFrom-SVN: r77186", "tree": {"sha": "8998fc588fa4811e7aa6f0b5a481a2993a8da7fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8998fc588fa4811e7aa6f0b5a481a2993a8da7fb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4bfb8bbaf6294daa459f1f0d8216796001998afd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4bfb8bbaf6294daa459f1f0d8216796001998afd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4bfb8bbaf6294daa459f1f0d8216796001998afd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4bfb8bbaf6294daa459f1f0d8216796001998afd/comments", "author": null, "committer": null, "parents": [{"sha": "a8f0f22ea9748a6eeb815ca37cfeb71ad92fc1a3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8f0f22ea9748a6eeb815ca37cfeb71ad92fc1a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a8f0f22ea9748a6eeb815ca37cfeb71ad92fc1a3"}], "stats": {"total": 53, "additions": 48, "deletions": 5}, "files": [{"sha": "7a398cba59fbcbaeac2c5777bab347cbfa6c9308", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bfb8bbaf6294daa459f1f0d8216796001998afd/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bfb8bbaf6294daa459f1f0d8216796001998afd/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=4bfb8bbaf6294daa459f1f0d8216796001998afd", "patch": "@@ -1,5 +1,11 @@\n 2004-02-03  Mark Mitchell  <mark@codesourcery.com>\n \n+\tPR c++/13950\n+\t* parser.c (cp_parser_class_name): Robustify.\n+\n+\tPR c++/13970\n+\t* parser.c (cp_parser_cache_group): Do not consume the EOF token.\n+\n \tPR c++/14002\n \t* semantics.c (finish_id_expression): Do not return an\n \tIDENTIFIER_NODE when lookup finds a PARM_DECL."}, {"sha": "4905b9415c9a85c4acd32ac3e5bf1595ab22fbae", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bfb8bbaf6294daa459f1f0d8216796001998afd/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bfb8bbaf6294daa459f1f0d8216796001998afd/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=4bfb8bbaf6294daa459f1f0d8216796001998afd", "patch": "@@ -11622,8 +11622,11 @@ cp_parser_class_name (cp_parser *parser,\n \n   /* If this is a typename, create a TYPENAME_TYPE.  */\n   if (typename_p && decl != error_mark_node)\n-    decl = TYPE_NAME (make_typename_type (scope, decl,\n-\t\t\t\t\t  /*complain=*/1));\n+    {\n+      decl = make_typename_type (scope, decl, /*complain=*/1);\n+      if (decl != error_mark_node)\n+\tdecl = TYPE_NAME (decl);\n+    }\n \n   /* Check to see that it is really the name of a class.  */\n   if (TREE_CODE (decl) == TEMPLATE_ID_EXPR \n@@ -15069,11 +15072,11 @@ cp_parser_cache_group (cp_parser *parser,\n       if ((end == CPP_CLOSE_PAREN || depth == 0)\n \t  && cp_lexer_next_token_is (parser->lexer, CPP_SEMICOLON))\n \treturn;\n-      /* Consume the next token.  */\n-      token = cp_lexer_consume_token (parser->lexer);\n       /* If we've reached the end of the file, stop.  */\n-      if (token->type == CPP_EOF)\n+      if (cp_lexer_next_token_is (parser->lexer, CPP_EOF))\n \treturn;\n+      /* Consume the next token.  */\n+      token = cp_lexer_consume_token (parser->lexer);\n       /* Add this token to the tokens we are saving.  */\n       cp_token_cache_push_token (cache, token);\n       /* See if it starts a new group.  */"}, {"sha": "00c0b7138d30922a149915b1b85408acaedb6b12", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bfb8bbaf6294daa459f1f0d8216796001998afd/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bfb8bbaf6294daa459f1f0d8216796001998afd/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4bfb8bbaf6294daa459f1f0d8216796001998afd", "patch": "@@ -1,5 +1,11 @@\n 2004-02-03  Mark Mitchell  <mark@codesourcery.com>\n \n+\tPR c++/13950\n+\t* g++.dg/template/lookup4.C: New test.\n+\n+\tPR c++/13970\n+\t* g++.dg/parse/error14.C: New test.\n+\n \tPR c++/14002\n \t* g++.dg/parse/template13.C: New test.\n "}, {"sha": "4b230453867488b45658c9cebed84abfc2f51b93", "filename": "gcc/testsuite/g++.dg/parse/error14.C", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bfb8bbaf6294daa459f1f0d8216796001998afd/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror14.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bfb8bbaf6294daa459f1f0d8216796001998afd/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror14.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror14.C?ref=4bfb8bbaf6294daa459f1f0d8216796001998afd", "patch": "@@ -0,0 +1,22 @@\n+// PR c++/13970\n+\n+struct X\n+{\n+    template< typename Z > Z Zunc()\n+    {\n+        return Z();\n+    }\n+\n+    template< typename Z > void Zinc()\n+    {\n+    }\n+\n+    void tst()\n+    {\n+        Zunc<int>();\n+\n+        Zinc<int>( //);\n+\t\t  //    }\n+\n+}; // { dg-error \"\" }\n+"}, {"sha": "d64006133c3b8107efb58f7956a922c80fd52b70", "filename": "gcc/testsuite/g++.dg/template/lookup4.C", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bfb8bbaf6294daa459f1f0d8216796001998afd/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Flookup4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bfb8bbaf6294daa459f1f0d8216796001998afd/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Flookup4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Flookup4.C?ref=4bfb8bbaf6294daa459f1f0d8216796001998afd", "patch": "@@ -0,0 +1,6 @@\n+// PR c++/13950\n+\n+template <class T> struct Base {};\n+template <class T> struct Derived: public Base<T> {\n+  typename Derived::template Base<double>* p1; // { dg-error \"\" }\n+};"}]}