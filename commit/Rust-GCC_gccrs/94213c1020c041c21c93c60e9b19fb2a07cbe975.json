{"sha": "94213c1020c041c21c93c60e9b19fb2a07cbe975", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTQyMTNjMTAyMGMwNDFjMjFjOTNjNjBlOWIxOWZiMmEwN2NiZTk3NQ==", "commit": {"author": {"name": "Matthias Klose", "email": "doko@gcc.gnu.org", "date": "2015-01-27T12:50:46Z"}, "committer": {"name": "Matthias Klose", "email": "doko@gcc.gnu.org", "date": "2015-01-27T12:50:46Z"}, "message": "configure.ac: Move AM_ENABLE_MULTILIB before AC_PROG_CC.\n\n2015-01-26  Matthias Klose  <doko@ubuntu.com>\n\n        * configure.ac: Move AM_ENABLE_MULTILIB before AC_PROG_CC.\n        * configure: Regenerate.\n\nFrom-SVN: r220165", "tree": {"sha": "3085211f306854f28b05fba20fb644eff9617df4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3085211f306854f28b05fba20fb644eff9617df4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/94213c1020c041c21c93c60e9b19fb2a07cbe975", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94213c1020c041c21c93c60e9b19fb2a07cbe975", "html_url": "https://github.com/Rust-GCC/gccrs/commit/94213c1020c041c21c93c60e9b19fb2a07cbe975", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94213c1020c041c21c93c60e9b19fb2a07cbe975/comments", "author": null, "committer": null, "parents": [{"sha": "755359b75ee55bb1a34c34bb90ff91a11ad83568", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/755359b75ee55bb1a34c34bb90ff91a11ad83568", "html_url": "https://github.com/Rust-GCC/gccrs/commit/755359b75ee55bb1a34c34bb90ff91a11ad83568"}], "stats": {"total": 117, "additions": 62, "deletions": 55}, "files": [{"sha": "083fd775aac83629e965fb7527f3c2d87f81912b", "filename": "libsanitizer/ChangeLog", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94213c1020c041c21c93c60e9b19fb2a07cbe975/libsanitizer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94213c1020c041c21c93c60e9b19fb2a07cbe975/libsanitizer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2FChangeLog?ref=94213c1020c041c21c93c60e9b19fb2a07cbe975", "patch": "@@ -1,8 +1,13 @@\n+2015-01-26  Matthias Klose  <doko@ubuntu.com>\n+\n+\t* configure.ac: Move AM_ENABLE_MULTILIB before AC_PROG_CC.\n+\t* configure: Regenerate.\n+\n 2015-01-25  Venkataramanan Kumar  <venkataramanan.kumar@linaro.org>\n \n-\t* configure.ac (TSAN_TARGET_DEPENDENT_OBJECTS): Undefine. \n+\t* configure.ac (TSAN_TARGET_DEPENDENT_OBJECTS): Undefine.\n \t* configure: Regenerate.\n-\t* configure.tgt (TSAN_TARGET_DEPENDENT_OBJECTS): Define.  \n+\t* configure.tgt (TSAN_TARGET_DEPENDENT_OBJECTS): Define.\n \n 2015-01-25  Venkataramanan Kumar  <venkataramanan.kumar@linaro.org>\n "}, {"sha": "9ded4cc7782cf5dec6665c9796d39ba4aaf53777", "filename": "libsanitizer/configure", "status": "modified", "additions": 53, "deletions": 52, "changes": 105, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94213c1020c041c21c93c60e9b19fb2a07cbe975/libsanitizer%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94213c1020c041c21c93c60e9b19fb2a07cbe975/libsanitizer%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Fconfigure?ref=94213c1020c041c21c93c60e9b19fb2a07cbe975", "patch": "@@ -660,7 +660,6 @@ toolexecdir\n MAINT\n MAINTAINER_MODE_FALSE\n MAINTAINER_MODE_TRUE\n-multi_basedir\n am__fastdepCC_FALSE\n am__fastdepCC_TRUE\n CCDEPMODE\n@@ -718,6 +717,7 @@ CPPFLAGS\n LDFLAGS\n CFLAGS\n CC\n+multi_basedir\n target_alias\n host_alias\n build_alias\n@@ -759,9 +759,9 @@ SHELL'\n ac_subst_files=''\n ac_user_opts='\n enable_option_checking\n+enable_multilib\n enable_version_specific_runtime_libs\n enable_dependency_tracking\n-enable_multilib\n enable_maintainer_mode\n enable_shared\n enable_static\n@@ -1405,10 +1405,10 @@ Optional Features:\n   --disable-option-checking  ignore unrecognized --enable/--with options\n   --disable-FEATURE       do not include FEATURE (same as --enable-FEATURE=no)\n   --enable-FEATURE[=ARG]  include FEATURE [ARG=yes]\n+  --enable-multilib       build many library versions (default)\n   --enable-version-specific-runtime-libs    Specify that runtime libraries should be installed in a compiler-specific directory\n   --disable-dependency-tracking  speeds up one-time build\n   --enable-dependency-tracking   do not reject slow dependency extractors\n-  --enable-multilib       build many library versions (default)\n   --enable-maintainer-mode  enable make rules and dependencies not useful\n \t\t\t  (and sometimes confusing) to the casual installer\n   --enable-shared[=PKGS]  build shared libraries [default=yes]\n@@ -2626,6 +2626,44 @@ ac_compiler_gnu=$ac_cv_c_compiler_gnu\n \n \n \n+# Default to --enable-multilib\n+# Check whether --enable-multilib was given.\n+if test \"${enable_multilib+set}\" = set; then :\n+  enableval=$enable_multilib; case \"$enableval\" in\n+  yes) multilib=yes ;;\n+  no)  multilib=no ;;\n+  *)   as_fn_error \"bad value $enableval for multilib option\" \"$LINENO\" 5 ;;\n+ esac\n+else\n+  multilib=yes\n+fi\n+\n+\n+# We may get other options which we leave undocumented:\n+# --with-target-subdir, --with-multisrctop, --with-multisubdir\n+# See config-ml.in if you want the gory details.\n+\n+if test \"$srcdir\" = \".\"; then\n+  if test \"$with_target_subdir\" != \".\"; then\n+    multi_basedir=\"$srcdir/$with_multisrctop../..\"\n+  else\n+    multi_basedir=\"$srcdir/$with_multisrctop..\"\n+  fi\n+else\n+  multi_basedir=\"$srcdir/..\"\n+fi\n+\n+\n+# Even if the default multilib is not a cross compilation,\n+# it may be that some of the other multilibs are.\n+if test $cross_compiling = no && test $multilib = yes \\\n+   && test \"x${with_multisubdir}\" != x ; then\n+   cross_compiling=maybe\n+fi\n+\n+ac_config_commands=\"$ac_config_commands default-1\"\n+\n+\n { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for --enable-version-specific-runtime-libs\" >&5\n $as_echo_n \"checking for --enable-version-specific-runtime-libs... \" >&6; }\n # Check whether --enable-version-specific-runtime-libs was given.\n@@ -4702,43 +4740,6 @@ fi\n \n \n \n-# Default to --enable-multilib\n-# Check whether --enable-multilib was given.\n-if test \"${enable_multilib+set}\" = set; then :\n-  enableval=$enable_multilib; case \"$enableval\" in\n-  yes) multilib=yes ;;\n-  no)  multilib=no ;;\n-  *)   as_fn_error \"bad value $enableval for multilib option\" \"$LINENO\" 5 ;;\n- esac\n-else\n-  multilib=yes\n-fi\n-\n-\n-# We may get other options which we leave undocumented:\n-# --with-target-subdir, --with-multisrctop, --with-multisubdir\n-# See config-ml.in if you want the gory details.\n-\n-if test \"$srcdir\" = \".\"; then\n-  if test \"$with_target_subdir\" != \".\"; then\n-    multi_basedir=\"$srcdir/$with_multisrctop../..\"\n-  else\n-    multi_basedir=\"$srcdir/$with_multisrctop..\"\n-  fi\n-else\n-  multi_basedir=\"$srcdir/..\"\n-fi\n-\n-\n-# Even if the default multilib is not a cross compilation,\n-# it may be that some of the other multilibs are.\n-if test $cross_compiling = no && test $multilib = yes \\\n-   && test \"x${with_multisubdir}\" != x ; then\n-   cross_compiling=maybe\n-fi\n-\n-ac_config_commands=\"$ac_config_commands default-1\"\n-\n \n { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether to enable maintainer-specific portions of Makefiles\" >&5\n $as_echo_n \"checking whether to enable maintainer-specific portions of Makefiles... \" >&6; }\n@@ -12020,7 +12021,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12023 \"configure\"\n+#line 12024 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -12126,7 +12127,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 12129 \"configure\"\n+#line 12130 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -17093,7 +17094,6 @@ cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1\n #\n # INIT-COMMANDS\n #\n-AMDEP_TRUE=\"$AMDEP_TRUE\" ac_aux_dir=\"$ac_aux_dir\"\n \n srcdir=\"$srcdir\"\n host=\"$host\"\n@@ -17108,6 +17108,7 @@ CC=\"$CC\"\n CXX=\"$CXX\"\n GFORTRAN=\"$GFORTRAN\"\n GCJ=\"$GCJ\"\n+AMDEP_TRUE=\"$AMDEP_TRUE\" ac_aux_dir=\"$ac_aux_dir\"\n \n \n # The HP-UX ksh and POSIX shell print the target directory to stdout\n@@ -17495,8 +17496,8 @@ cat >>$CONFIG_STATUS <<\\_ACEOF || ac_write_fail=1\n for ac_config_target in $ac_config_targets\n do\n   case $ac_config_target in\n-    \"depfiles\") CONFIG_COMMANDS=\"$CONFIG_COMMANDS depfiles\" ;;\n     \"default-1\") CONFIG_COMMANDS=\"$CONFIG_COMMANDS default-1\" ;;\n+    \"depfiles\") CONFIG_COMMANDS=\"$CONFIG_COMMANDS depfiles\" ;;\n     \"libtool\") CONFIG_COMMANDS=\"$CONFIG_COMMANDS libtool\" ;;\n     \"gstdint.h\") CONFIG_COMMANDS=\"$CONFIG_COMMANDS gstdint.h\" ;;\n     \"Makefile\") CONFIG_FILES=\"$CONFIG_FILES Makefile\" ;;\n@@ -18094,6 +18095,14 @@ $as_echo \"$as_me: executing $ac_file commands\" >&6;}\n \n \n   case $ac_file$ac_mode in\n+    \"default-1\":C)\n+# Only add multilib support code if we just rebuilt the top-level\n+# Makefile.\n+case \" $CONFIG_FILES \" in\n+ *\" Makefile \"*)\n+   ac_file=Makefile . ${multi_basedir}/config-ml.in\n+   ;;\n+esac ;;\n     \"depfiles\":C) test x\"$AMDEP_TRUE\" != x\"\" || {\n   # Autoconf 2.62 quotes --file arguments for eval, but not when files\n   # are listed without --file.  Let's play safe and only enable the eval\n@@ -18189,14 +18198,6 @@ $as_echo X\"$file\" |\n   done\n }\n  ;;\n-    \"default-1\":C)\n-# Only add multilib support code if we just rebuilt the top-level\n-# Makefile.\n-case \" $CONFIG_FILES \" in\n- *\" Makefile \"*)\n-   ac_file=Makefile . ${multi_basedir}/config-ml.in\n-   ;;\n-esac ;;\n     \"libtool\":C)\n \n     # See if we are running on zsh, and set the options which allow our"}, {"sha": "031c2710a82f6e7d35275b49410ff731f17c425d", "filename": "libsanitizer/configure.ac", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94213c1020c041c21c93c60e9b19fb2a07cbe975/libsanitizer%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94213c1020c041c21c93c60e9b19fb2a07cbe975/libsanitizer%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Fconfigure.ac?ref=94213c1020c041c21c93c60e9b19fb2a07cbe975", "patch": "@@ -5,6 +5,8 @@ AC_PREREQ([2.64])\n AC_INIT(package-unused, version-unused, libsanitizer)\n AC_CONFIG_SRCDIR([include/sanitizer/common_interface_defs.h])\n \n+AM_ENABLE_MULTILIB(, ..)\n+\n AC_MSG_CHECKING([for --enable-version-specific-runtime-libs])\n AC_ARG_ENABLE(version-specific-runtime-libs,\n [  --enable-version-specific-runtime-libs    Specify that runtime libraries should be installed in a compiler-specific directory ],\n@@ -26,7 +28,6 @@ AC_SUBST(target_alias)\n GCC_LIBSTDCXX_RAW_CXX_FLAGS\n \n AM_INIT_AUTOMAKE(foreign no-dist)\n-AM_ENABLE_MULTILIB(, ..)\n AM_MAINTAINER_MODE\n \n # Calculate toolexeclibdir"}]}