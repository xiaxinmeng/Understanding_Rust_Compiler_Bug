{"sha": "43cd742e348d376ed4e7e0375b23289286525c8a", "node_id": "C_kwDOANBUbNoAKDQzY2Q3NDJlMzQ4ZDM3NmVkNGU3ZTAzNzViMjMyODkyODY1MjVjOGE", "commit": {"author": {"name": "Arthur Cohen", "email": "arthur.cohen@embecosm.com", "date": "2022-07-08T08:28:15Z"}, "committer": {"name": "Arthur Cohen", "email": "arthur.cohen@embecosm.com", "date": "2022-07-08T10:11:19Z"}, "message": "typecheck: Add base for resolving const generic params and their default\nexpression", "tree": {"sha": "e1afd9eb89f45c2aa15ea964586d196984104a1d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e1afd9eb89f45c2aa15ea964586d196984104a1d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/43cd742e348d376ed4e7e0375b23289286525c8a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43cd742e348d376ed4e7e0375b23289286525c8a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43cd742e348d376ed4e7e0375b23289286525c8a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43cd742e348d376ed4e7e0375b23289286525c8a/comments", "author": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "64f69dbca26c2d76da569b4a09dd3541a85652b0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64f69dbca26c2d76da569b4a09dd3541a85652b0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/64f69dbca26c2d76da569b4a09dd3541a85652b0"}], "stats": {"total": 32, "additions": 30, "deletions": 2}, "files": [{"sha": "58f4db2fcc672b7dcb12ea3b7c6c2beab54f2cb4", "filename": "gcc/rust/hir/tree/rust-hir.h", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43cd742e348d376ed4e7e0375b23289286525c8a/gcc%2Frust%2Fhir%2Ftree%2Frust-hir.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43cd742e348d376ed4e7e0375b23289286525c8a/gcc%2Frust%2Fhir%2Ftree%2Frust-hir.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fhir%2Ftree%2Frust-hir.h?ref=43cd742e348d376ed4e7e0375b23289286525c8a", "patch": "@@ -769,6 +769,16 @@ class ConstGenericParam : public GenericParam\n \n   Location get_locus () const override final { return locus; };\n \n+  bool has_default_expression () { return default_expression != nullptr; }\n+\n+  std::unique_ptr<Type> &get_type () { return type; }\n+  std::unique_ptr<Expr> &get_default_expression ()\n+  {\n+    rust_assert (has_default_expression ());\n+\n+    return default_expression;\n+  }\n+\n protected:\n   /* Use covariance to implement clone function as returning this object rather\n    * than base */"}, {"sha": "e242539a31aa65a430032b82fc61ca28b6dff6d3", "filename": "gcc/rust/typecheck/rust-hir-type-check-toplevel.cc", "status": "modified", "additions": 18, "deletions": 2, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43cd742e348d376ed4e7e0375b23289286525c8a/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-toplevel.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43cd742e348d376ed4e7e0375b23289286525c8a/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-toplevel.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-toplevel.cc?ref=43cd742e348d376ed4e7e0375b23289286525c8a", "patch": "@@ -38,10 +38,26 @@ TypeCheckTopLevel::resolve_generic_params (\n       switch (generic_param.get ()->get_kind ())\n \t{\n \tcase HIR::GenericParam::GenericKind::LIFETIME:\n-\tcase HIR::GenericParam::GenericKind::CONST:\n-\t  // FIXME: Skipping Lifetime and Const completely until better\n+\t  // FIXME: Skipping Lifetime completely until better\n \t  // handling.\n \t  break;\n+\t  case HIR::GenericParam::GenericKind::CONST: {\n+\t    auto param\n+\t      = static_cast<HIR::ConstGenericParam *> (generic_param.get ());\n+\t    auto specified_type\n+\t      = TypeCheckType::Resolve (param->get_type ().get ());\n+\n+\t    if (param->has_default_expression ())\n+\t      {\n+\t\tauto expr_type = TypeCheckExpr::Resolve (\n+\t\t  param->get_default_expression ().get ());\n+\t\tspecified_type->coerce (expr_type);\n+\t      }\n+\n+\t    context->insert_type (generic_param->get_mappings (),\n+\t\t\t\t  specified_type);\n+\t  }\n+\t  break;\n \n \t  case HIR::GenericParam::GenericKind::TYPE: {\n \t    auto param_type"}, {"sha": "de261236d933188dcea0dccd51bb358c56583efb", "filename": "gcc/testsuite/rust/compile/const_generics_6.rs", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43cd742e348d376ed4e7e0375b23289286525c8a/gcc%2Ftestsuite%2Frust%2Fcompile%2Fconst_generics_6.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43cd742e348d376ed4e7e0375b23289286525c8a/gcc%2Ftestsuite%2Frust%2Fcompile%2Fconst_generics_6.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fcompile%2Fconst_generics_6.rs?ref=43cd742e348d376ed4e7e0375b23289286525c8a", "patch": "@@ -0,0 +1,2 @@\n+struct Foo<const N: usize>;\n+struct Bar<const N: usize = { 15i32 }>; // { dg-error \"expected .usize. got .i32.\" }"}]}