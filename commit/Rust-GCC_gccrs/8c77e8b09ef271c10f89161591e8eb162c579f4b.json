{"sha": "8c77e8b09ef271c10f89161591e8eb162c579f4b", "node_id": "C_kwDOANBUbNoAKDhjNzdlOGIwOWVmMjcxYzEwZjg5MTYxNTkxZThlYjE2MmM1NzlmNGI", "commit": {"author": {"name": "Etienne Servais", "email": "servais@adacore.com", "date": "2021-09-17T10:29:46Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-10-05T08:20:04Z"}, "message": "[Ada] Add missing functions to Wide_Wide_Characters Handling\n\ngcc/ada/\n\n\t* libgnat/a-zchhan.ads, libgnat/a-zchhan.adb\n\t(Character_Set_Version, Is_Basic, To_Basic): New.\n\t* libgnat/a-zchuni.ads, libgnat/a-zchuni.adb (Is_Basic,\n\tTo_Basic): New.", "tree": {"sha": "d24b87a711b26af23f69d30e7c275713a4bc6e18", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d24b87a711b26af23f69d30e7c275713a4bc6e18"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8c77e8b09ef271c10f89161591e8eb162c579f4b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c77e8b09ef271c10f89161591e8eb162c579f4b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c77e8b09ef271c10f89161591e8eb162c579f4b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c77e8b09ef271c10f89161591e8eb162c579f4b/comments", "author": {"login": "vser1", "id": 8308457, "node_id": "MDQ6VXNlcjgzMDg0NTc=", "avatar_url": "https://avatars.githubusercontent.com/u/8308457?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vser1", "html_url": "https://github.com/vser1", "followers_url": "https://api.github.com/users/vser1/followers", "following_url": "https://api.github.com/users/vser1/following{/other_user}", "gists_url": "https://api.github.com/users/vser1/gists{/gist_id}", "starred_url": "https://api.github.com/users/vser1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vser1/subscriptions", "organizations_url": "https://api.github.com/users/vser1/orgs", "repos_url": "https://api.github.com/users/vser1/repos", "events_url": "https://api.github.com/users/vser1/events{/privacy}", "received_events_url": "https://api.github.com/users/vser1/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4f3a016f51aa46152a9d635e2e594c6de20ace9e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f3a016f51aa46152a9d635e2e594c6de20ace9e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f3a016f51aa46152a9d635e2e594c6de20ace9e"}], "stats": {"total": 94, "additions": 90, "deletions": 4}, "files": [{"sha": "61405f7c15ed4585d67b0c96971a01ca1739fc38", "filename": "gcc/ada/libgnat/a-zchhan.adb", "status": "modified", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c77e8b09ef271c10f89161591e8eb162c579f4b/gcc%2Fada%2Flibgnat%2Fa-zchhan.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c77e8b09ef271c10f89161591e8eb162c579f4b/gcc%2Fada%2Flibgnat%2Fa-zchhan.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-zchhan.adb?ref=8c77e8b09ef271c10f89161591e8eb162c579f4b", "patch": "@@ -33,6 +33,15 @@ with Ada.Wide_Wide_Characters.Unicode; use Ada.Wide_Wide_Characters.Unicode;\n \n package body Ada.Wide_Wide_Characters.Handling is\n \n+   ---------------------------\n+   -- Character_Set_Version --\n+   ---------------------------\n+\n+   function Character_Set_Version return String is\n+   begin\n+      return \"Unicode 4.0\";\n+   end Character_Set_Version;\n+\n    ---------------------\n    -- Is_Alphanumeric --\n    ---------------------\n@@ -42,6 +51,13 @@ package body Ada.Wide_Wide_Characters.Handling is\n       return Is_Letter (Item) or else Is_Digit (Item);\n    end Is_Alphanumeric;\n \n+   --------------\n+   -- Is_Basic --\n+   --------------\n+\n+   function Is_Basic (Item : Wide_Wide_Character) return Boolean\n+     renames Ada.Wide_Wide_Characters.Unicode.Is_Basic;\n+\n    ----------------\n    -- Is_Control --\n    ----------------\n@@ -191,4 +207,22 @@ package body Ada.Wide_Wide_Characters.Handling is\n       return Result;\n    end To_Upper;\n \n+   --------------\n+   -- To_Basic --\n+   --------------\n+\n+   function To_Basic (Item : Wide_Wide_Character) return Wide_Wide_Character\n+     renames Ada.Wide_Wide_Characters.Unicode.To_Basic;\n+\n+   function To_Basic (Item : Wide_Wide_String) return Wide_Wide_String is\n+      Result : Wide_Wide_String (Item'Range);\n+\n+   begin\n+      for J in Result'Range loop\n+         Result (J) := To_Basic (Item (J));\n+      end loop;\n+\n+      return Result;\n+   end To_Basic;\n+\n end Ada.Wide_Wide_Characters.Handling;"}, {"sha": "6ebd1a878ea4106f95a2ab66fe8f80f0e325fb28", "filename": "gcc/ada/libgnat/a-zchhan.ads", "status": "modified", "additions": 25, "deletions": 4, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c77e8b09ef271c10f89161591e8eb162c579f4b/gcc%2Fada%2Flibgnat%2Fa-zchhan.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c77e8b09ef271c10f89161591e8eb162c579f4b/gcc%2Fada%2Flibgnat%2Fa-zchhan.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-zchhan.ads?ref=8c77e8b09ef271c10f89161591e8eb162c579f4b", "patch": "@@ -15,10 +15,12 @@\n \n package Ada.Wide_Wide_Characters.Handling is\n    pragma Pure;\n-   --  This package is clearly intended to be Pure, by analogy with the\n-   --  base Ada.Characters.Handling package. The version in the RM does\n-   --  not yet have this pragma, but that is a clear omission. This will\n-   --  be fixed in a future version of AI05-0266-1.\n+\n+   function Character_Set_Version return String;\n+   pragma Inline (Character_Set_Version);\n+   --  Returns an implementation-defined identifier that identifies the version\n+   --  of the character set standard that is used for categorizing characters\n+   --  by the implementation. For GNAT this is \"Unicode v.v\".\n \n    function Is_Control (Item : Wide_Wide_Character) return Boolean;\n    pragma Inline (Is_Control);\n@@ -42,6 +44,12 @@ package Ada.Wide_Wide_Characters.Handling is\n    --  Returns True if the Wide_Wide_Character designated by Item is\n    --  categorized as letter_uppercase, otherwise returns false.\n \n+   function Is_Basic (Item : Wide_Wide_Character) return Boolean;\n+   pragma Inline (Is_Basic);\n+   --  Returns True if the Wide_Wide_Character designated by Item has no\n+   --  Decomposition Mapping in the code charts of ISO/IEC 10646:2017,\n+   --  otherwise returns False.\n+\n    function Is_Digit (Item : Wide_Wide_Character) return Boolean;\n    pragma Inline (Is_Digit);\n    --  Returns True if the Wide_Wide_Character designated by Item is\n@@ -135,4 +143,17 @@ package Ada.Wide_Wide_Characters.Handling is\n    --  designated by Item. The result is the null Wide_Wide_String if the value\n    --  of the formal parameter is the null Wide_Wide_String.\n \n+   function To_Basic (Item : Wide_Wide_Character) return Wide_Wide_Character;\n+   pragma Inline (To_Basic);\n+   --  Returns the Wide_Wide_Character whose code point is given\n+   --  by the first value of its Decomposition Mapping in the code charts\n+   --  of ISO/IEC 10646:2017 if any, returns Item otherwise.\n+\n+   function To_Basic (Item : Wide_Wide_String) return Wide_Wide_String;\n+   --  Returns the result of applying the To_Basic conversion to each\n+   --  Wide_Wide_Character element of the Wide_Wide_String designated by Item.\n+   --  The result is the null Wide_Wide_String if the value of the formal\n+   --  parameter is the null Wide_Wide_String. The lower bound of the result\n+   --  Wide_Wide_String is 1.\n+\n end Ada.Wide_Wide_Characters.Handling;"}, {"sha": "3c6e720e39ab7caeaea32b649dfc70e7c25e19de", "filename": "gcc/ada/libgnat/a-zchuni.adb", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c77e8b09ef271c10f89161591e8eb162c579f4b/gcc%2Fada%2Flibgnat%2Fa-zchuni.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c77e8b09ef271c10f89161591e8eb162c579f4b/gcc%2Fada%2Flibgnat%2Fa-zchuni.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-zchuni.adb?ref=8c77e8b09ef271c10f89161591e8eb162c579f4b", "patch": "@@ -42,6 +42,15 @@ package body Ada.Wide_Wide_Characters.Unicode is\n       return Category (G.Get_Category (Wide_Wide_Character'Pos (U)));\n    end Get_Category;\n \n+   --------------\n+   -- Is_Basic --\n+   --------------\n+\n+   function Is_Basic (U : Wide_Wide_Character) return Boolean is\n+   begin\n+      return G.Is_UTF_32_Basic (Wide_Wide_Character'Pos (U));\n+   end Is_Basic;\n+\n    --------------\n    -- Is_Digit --\n    --------------\n@@ -158,6 +167,16 @@ package body Ada.Wide_Wide_Characters.Unicode is\n       return G.Is_UTF_32_Space (G.Category (C));\n    end Is_Space;\n \n+   --------------\n+   -- To_Basic --\n+   --------------\n+\n+   function To_Basic (U : Wide_Wide_Character) return Wide_Wide_Character is\n+   begin\n+      return Wide_Wide_Character'Val\n+        (G.UTF_32_To_Basic (Wide_Wide_Character'Pos (U)));\n+   end To_Basic;\n+\n    -------------------\n    -- To_Lower_Case --\n    -------------------"}, {"sha": "0030fd10944f7fd8e697a96e5cbe489feda440ac", "filename": "gcc/ada/libgnat/a-zchuni.ads", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c77e8b09ef271c10f89161591e8eb162c579f4b/gcc%2Fada%2Flibgnat%2Fa-zchuni.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c77e8b09ef271c10f89161591e8eb162c579f4b/gcc%2Fada%2Flibgnat%2Fa-zchuni.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-zchuni.ads?ref=8c77e8b09ef271c10f89161591e8eb162c579f4b", "patch": "@@ -177,6 +177,18 @@ package Ada.Wide_Wide_Characters.Unicode is\n    --  in the list of categories above. This means that these characters can\n    --  be included in character and string literals.\n \n+   function Is_Basic (U : Wide_Wide_Character) return Boolean;\n+   pragma Inline (Is_Basic);\n+   --  Returns True if the Wide_Wide_Character designated by Item has no\n+   --  Decomposition Mapping in the code charts of ISO/IEC 10646:2017,\n+   --  otherwise returns False.\n+\n+   function To_Basic (U : Wide_Wide_Character) return Wide_Wide_Character;\n+   pragma Inline (To_Basic);\n+   --  Returns the Wide_Wide_Character whose code point is given by the first\n+   --  value of its Decomposition Mapping in the code charts of\n+   --  ISO/IEC 10646:2017 if any, returns Item otherwise.\n+\n    --  The following function is used to fold to upper case, as required by\n    --  the Ada 2005 standard rules for identifier case folding. Two\n    --  identifiers are equivalent if they are identical after folding all"}]}