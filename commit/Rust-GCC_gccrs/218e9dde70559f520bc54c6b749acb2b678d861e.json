{"sha": "218e9dde70559f520bc54c6b749acb2b678d861e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjE4ZTlkZGU3MDU1OWY1MjBiYzU0YzZiNzQ5YWNiMmI2NzhkODYxZQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2016-04-19T18:50:08Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2016-04-19T18:50:08Z"}, "message": "DR 2137 - copy-constructor rank in list-initialization\n\n\t* call.c (implicit_conversion): If we choose a copy constructor\n\tfor list-initialization from the same type, the conversion is an\n\texact match.\n\nFrom-SVN: r235219", "tree": {"sha": "41bb2db2a1c3d233a5167efd1e9ad17d9c01c739", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/41bb2db2a1c3d233a5167efd1e9ad17d9c01c739"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/218e9dde70559f520bc54c6b749acb2b678d861e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/218e9dde70559f520bc54c6b749acb2b678d861e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/218e9dde70559f520bc54c6b749acb2b678d861e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/218e9dde70559f520bc54c6b749acb2b678d861e/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "06ec22b7f627bf36fefeb643fa62313bce410b10", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06ec22b7f627bf36fefeb643fa62313bce410b10", "html_url": "https://github.com/Rust-GCC/gccrs/commit/06ec22b7f627bf36fefeb643fa62313bce410b10"}], "stats": {"total": 65, "additions": 64, "deletions": 1}, "files": [{"sha": "7ff3dc573254353d5bbd55ec7a68237d47917a16", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/218e9dde70559f520bc54c6b749acb2b678d861e/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/218e9dde70559f520bc54c6b749acb2b678d861e/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=218e9dde70559f520bc54c6b749acb2b678d861e", "patch": "@@ -1,5 +1,10 @@\n 2016-04-19  Jason Merrill  <jason@redhat.com>\n \n+\tDR 2137\n+\t* call.c (implicit_conversion): If we choose a copy constructor\n+\tfor list-initialization from the same type, the conversion is an\n+\texact match.\n+\n \t* constexpr.c (breaks): Handle EXIT_EXPR.\n \t(cxx_eval_loop_expr): Handle COMPOUND_EXPR body.\n \t(cxx_eval_constant_expression): Handle EXIT_EXPR, improve handling"}, {"sha": "11f2d42108e7bc0f1b8d6f223657d718aba27503", "filename": "gcc/cp/call.c", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/218e9dde70559f520bc54c6b749acb2b678d861e/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/218e9dde70559f520bc54c6b749acb2b678d861e/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=218e9dde70559f520bc54c6b749acb2b678d861e", "patch": "@@ -1862,7 +1862,24 @@ implicit_conversion (tree to, tree from, tree expr, bool c_cast_p,\n \n       cand = build_user_type_conversion_1 (to, expr, flags, complain);\n       if (cand)\n-\tconv = cand->second_conv;\n+\t{\n+\t  if (BRACE_ENCLOSED_INITIALIZER_P (expr)\n+\t      && CONSTRUCTOR_NELTS (expr) == 1\n+\t      && !is_list_ctor (cand->fn))\n+\t    {\n+\t      /* \"If C is not an initializer-list constructor and the\n+\t\t initializer list has a single element of type cv U, where U is\n+\t\t X or a class derived from X, the implicit conversion sequence\n+\t\t has Exact Match rank if U is X, or Conversion rank if U is\n+\t\t derived from X.\"  */\n+\t      tree elt = CONSTRUCTOR_ELT (expr, 0)->value;\n+\t      tree elttype = TREE_TYPE (elt);\n+\t      if (reference_related_p (to, elttype))\n+\t\treturn implicit_conversion (to, elttype, elt,\n+\t\t\t\t\t    c_cast_p, flags, complain);\n+\t    }\n+\t  conv = cand->second_conv;\n+\t}\n \n       /* We used to try to bind a reference to a temporary here, but that\n \t is now handled after the recursive call to this function at the end"}, {"sha": "ad6b5325a1e72884637588b106669edc2c301f91", "filename": "gcc/testsuite/g++.dg/DRs/dr2137-1.C", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/218e9dde70559f520bc54c6b749acb2b678d861e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2FDRs%2Fdr2137-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/218e9dde70559f520bc54c6b749acb2b678d861e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2FDRs%2Fdr2137-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2FDRs%2Fdr2137-1.C?ref=218e9dde70559f520bc54c6b749acb2b678d861e", "patch": "@@ -0,0 +1,20 @@\n+// DR 2137\n+// { dg-do run { target c++11 } }\n+\n+// Test that an initializer_list constructor beats the copy constructor.\n+\n+#include <initializer_list>\n+\n+bool ok = false;\n+\n+struct Q {\n+  Q() = default;\n+  Q(Q const&) = default;\n+  Q(Q&&) = default;\n+  Q(std::initializer_list<Q>) { ok = true; }\n+};\n+\n+int main() {\n+  Q x = Q { Q() };\n+  if (!ok) __builtin_abort ();\n+}"}, {"sha": "ba90860b3afea34db78f267dac7623a294e7c619", "filename": "gcc/testsuite/g++.dg/DRs/dr2137-2.C", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/218e9dde70559f520bc54c6b749acb2b678d861e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2FDRs%2Fdr2137-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/218e9dde70559f520bc54c6b749acb2b678d861e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2FDRs%2Fdr2137-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2FDRs%2Fdr2137-2.C?ref=218e9dde70559f520bc54c6b749acb2b678d861e", "patch": "@@ -0,0 +1,21 @@\n+// DR 2137\n+// { dg-do link { target c++11 } }\n+\n+// Test that copying Q is better than converting to R.\n+\n+struct Q {\n+  Q() { }\n+  Q(const Q&) { }\n+};\n+\n+struct R {\n+  R(const Q&);\n+};\n+\n+void f(Q) { }\n+void f(R);\n+\n+int main()\n+{\n+  f({Q()});\n+}"}]}