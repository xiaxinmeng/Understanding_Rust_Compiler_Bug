{"sha": "11a86c5688cfcf22c52cf737070a8d3df5a59285", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTFhODZjNTY4OGNmY2YyMmM1MmNmNzM3MDcwYThkM2RmNWE1OTI4NQ==", "commit": {"author": {"name": "Charles M. Hannum", "email": "root@ihack.net", "date": "1999-03-26T22:46:33Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1999-03-26T22:46:33Z"}, "message": "fold-const.c (fold_truthop): Optimize bitfield references with different masks as long as their size and bit...\n\n        * fold-const.c (fold_truthop): Optimize bitfield references with\n        different masks as long as their size and bit position are the same.\n\nFrom-SVN: r26006", "tree": {"sha": "9e363eeae831179c59d373004651dd6f32159c23", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9e363eeae831179c59d373004651dd6f32159c23"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/11a86c5688cfcf22c52cf737070a8d3df5a59285", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11a86c5688cfcf22c52cf737070a8d3df5a59285", "html_url": "https://github.com/Rust-GCC/gccrs/commit/11a86c5688cfcf22c52cf737070a8d3df5a59285", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11a86c5688cfcf22c52cf737070a8d3df5a59285/comments", "author": {"login": "mycroftxxx", "id": 1772872, "node_id": "MDQ6VXNlcjE3NzI4NzI=", "avatar_url": "https://avatars.githubusercontent.com/u/1772872?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mycroftxxx", "html_url": "https://github.com/mycroftxxx", "followers_url": "https://api.github.com/users/mycroftxxx/followers", "following_url": "https://api.github.com/users/mycroftxxx/following{/other_user}", "gists_url": "https://api.github.com/users/mycroftxxx/gists{/gist_id}", "starred_url": "https://api.github.com/users/mycroftxxx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mycroftxxx/subscriptions", "organizations_url": "https://api.github.com/users/mycroftxxx/orgs", "repos_url": "https://api.github.com/users/mycroftxxx/repos", "events_url": "https://api.github.com/users/mycroftxxx/events{/privacy}", "received_events_url": "https://api.github.com/users/mycroftxxx/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bd910dcf7a3d8b71c4305c91c22e2e4831554dcf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd910dcf7a3d8b71c4305c91c22e2e4831554dcf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd910dcf7a3d8b71c4305c91c22e2e4831554dcf"}], "stats": {"total": 26, "additions": 14, "deletions": 12}, "files": [{"sha": "f14f7df682d8fd1d36db8defe19f1cf3a4938194", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11a86c5688cfcf22c52cf737070a8d3df5a59285/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11a86c5688cfcf22c52cf737070a8d3df5a59285/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=11a86c5688cfcf22c52cf737070a8d3df5a59285", "patch": "@@ -65,6 +65,9 @@ Fri Mar 26 10:43:47 1999  Nick Clifton  <nickc@cygnus.com>\n \n Fri Mar 26 01:59:15 1999  \"Charles M. Hannum\" <root@ihack.net>\n \n+\t* fold-const.c (fold_truthop): Optimize bitfield references with\n+\tdifferent masks as long as their size and bit position are the same.\n+\n \t* fold-const.c (fold_truthop): Build a type for both the lhs and\n \trhs and use it appropriately.\n "}, {"sha": "9b003c2ec220ef2f4ccb254baa3d4dc626f99328", "filename": "gcc/fold-const.c", "status": "modified", "additions": 11, "deletions": 12, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11a86c5688cfcf22c52cf737070a8d3df5a59285/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11a86c5688cfcf22c52cf737070a8d3df5a59285/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=11a86c5688cfcf22c52cf737070a8d3df5a59285", "patch": "@@ -3934,25 +3934,24 @@ fold_truthop (code, truth_type, lhs, rhs)\n \t\t\t     size_int (xrr_bitpos), 0);\n \n       /* Make a mask that corresponds to both fields being compared.\n-\t Do this for both items being compared.  If the masks agree,\n-\t and the bits being compared are in the same position, and the\n-\t types agree, then we can do this by masking both and comparing\n-\t the masked results.  */\n+\t Do this for both items being compared.  If the operands are the\n+\t same size and the bits being compared are in the same position\n+\t then we can do this by masking both and comparing the masked\n+\t results.  */\n       ll_mask = const_binop (BIT_IOR_EXPR, ll_mask, rl_mask, 0);\n       lr_mask = const_binop (BIT_IOR_EXPR, lr_mask, rr_mask, 0);\n-      if (operand_equal_p (ll_mask, lr_mask, 0)\n-\t  && lnbitsize == rnbitsize && xll_bitpos == xlr_bitpos\n-\t  && lntype == rntype)\n+      if (lnbitsize == rnbitsize && xll_bitpos == xlr_bitpos)\n \t{\n \t  lhs = make_bit_field_ref (ll_inner, lntype, lnbitsize, lnbitpos,\n \t\t\t\t    ll_unsignedp || rl_unsignedp);\n+\t  if (! all_ones_mask_p (ll_mask, lnbitsize))\n+\t    lhs = build (BIT_AND_EXPR, lntype, lhs, ll_mask);\n+\n \t  rhs = make_bit_field_ref (lr_inner, rntype, rnbitsize, rnbitpos,\n \t\t\t\t    lr_unsignedp || rr_unsignedp);\n-\t  if (! all_ones_mask_p (ll_mask, lnbitsize))\n-\t    {\n-\t      lhs = build (BIT_AND_EXPR, lntype, lhs, ll_mask);\n-\t      rhs = build (BIT_AND_EXPR, rntype, rhs, ll_mask);\n-\t    }\n+\t  if (! all_ones_mask_p (lr_mask, rnbitsize))\n+\t    rhs = build (BIT_AND_EXPR, rntype, rhs, lr_mask);\n+\n \t  return build (wanted_code, truth_type, lhs, rhs);\n \t}\n "}]}