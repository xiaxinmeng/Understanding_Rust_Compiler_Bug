{"sha": "d47a8b8331c719df4f7c44af84eec7a63092a440", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDQ3YThiODMzMWM3MTlkZjRmN2M0NGFmODRlZWM3YTYzMDkyYTQ0MA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@libertysurf.fr", "date": "2007-04-19T11:19:16Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2007-04-19T11:19:16Z"}, "message": "re PR rtl-optimization/29841 (ICE with scheduling and __builtin_trap)\n\n\tPR rtl-optimization/29841\n\t* cfgbuild.c (control_flow_insn_p): Return TRUE for unconditional\n\ttrap instructions.\n\t* sched-deps.c (sched_analyze_insn): Prevent all non-jump instructions\n\tthat may cause control flow transfer from being moved.\n\nFrom-SVN: r123970", "tree": {"sha": "7a67687eb802bd0acdf8b565692414e4370ea6b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7a67687eb802bd0acdf8b565692414e4370ea6b1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d47a8b8331c719df4f7c44af84eec7a63092a440", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d47a8b8331c719df4f7c44af84eec7a63092a440", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d47a8b8331c719df4f7c44af84eec7a63092a440", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d47a8b8331c719df4f7c44af84eec7a63092a440/comments", "author": {"login": "ebotcazou", "id": 48091907, "node_id": "MDQ6VXNlcjQ4MDkxOTA3", "avatar_url": "https://avatars.githubusercontent.com/u/48091907?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebotcazou", "html_url": "https://github.com/ebotcazou", "followers_url": "https://api.github.com/users/ebotcazou/followers", "following_url": "https://api.github.com/users/ebotcazou/following{/other_user}", "gists_url": "https://api.github.com/users/ebotcazou/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebotcazou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebotcazou/subscriptions", "organizations_url": "https://api.github.com/users/ebotcazou/orgs", "repos_url": "https://api.github.com/users/ebotcazou/repos", "events_url": "https://api.github.com/users/ebotcazou/events{/privacy}", "received_events_url": "https://api.github.com/users/ebotcazou/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a777d6e96715af95b710dc3fbd2f7ef3b5d7a767", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a777d6e96715af95b710dc3fbd2f7ef3b5d7a767", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a777d6e96715af95b710dc3fbd2f7ef3b5d7a767"}], "stats": {"total": 42, "additions": 40, "deletions": 2}, "files": [{"sha": "44443654bba46f17ee8f4ebf53ecbf62007dee25", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d47a8b8331c719df4f7c44af84eec7a63092a440/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d47a8b8331c719df4f7c44af84eec7a63092a440/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d47a8b8331c719df4f7c44af84eec7a63092a440", "patch": "@@ -1,3 +1,11 @@\n+2007-04-19  Eric Botcazou  <ebotcazou@libertysurf.fr>\n+\n+\tPR rtl-optimization/29841\n+\t* cfgbuild.c (control_flow_insn_p): Return TRUE for unconditional\n+\ttrap instructions.\n+\t* sched-deps.c (sched_analyze_insn): Prevent all non-jump instructions\n+\tthat may cause control flow transfer from being moved.\n+\n 2007-04-18  Jan Hubicka  <jh@suse.cz>\n \n \t* fold-const.c (div_if_zero_remainder): Do signed divide for pointer"}, {"sha": "642efc31e088fa592660281bad2a7834f1e4f96a", "filename": "gcc/cfgbuild.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d47a8b8331c719df4f7c44af84eec7a63092a440/gcc%2Fcfgbuild.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d47a8b8331c719df4f7c44af84eec7a63092a440/gcc%2Fcfgbuild.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgbuild.c?ref=d47a8b8331c719df4f7c44af84eec7a63092a440", "patch": "@@ -120,6 +120,11 @@ control_flow_insn_p (rtx insn)\n \t      || can_throw_internal (insn));\n \n     case INSN:\n+      /* Treat trap instructions like noreturn calls (same provision).  */\n+      if (GET_CODE (PATTERN (insn)) == TRAP_IF\n+\t  && XEXP (PATTERN (insn), 0) == const1_rtx)\n+\treturn true;\n+\n       return (flag_non_call_exceptions && can_throw_internal (insn));\n \n     case BARRIER:"}, {"sha": "5a6a30a63c717546883b527d49fcc396850dbeab", "filename": "gcc/sched-deps.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d47a8b8331c719df4f7c44af84eec7a63092a440/gcc%2Fsched-deps.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d47a8b8331c719df4f7c44af84eec7a63092a440/gcc%2Fsched-deps.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsched-deps.c?ref=d47a8b8331c719df4f7c44af84eec7a63092a440", "patch": "@@ -1598,8 +1598,12 @@ sched_analyze_insn (struct deps *deps, rtx x, rtx insn)\n \n   /* If this instruction can throw an exception, then moving it changes\n      where block boundaries fall.  This is mighty confusing elsewhere.\n-     Therefore, prevent such an instruction from being moved.  */\n-  if (can_throw_internal (insn))\n+     Therefore, prevent such an instruction from being moved.  Same for\n+     non-jump instructions that define block boundaries.\n+     ??? Unclear whether this is still necessary in EBB mode.  If not,\n+     add_branch_dependences should be adjusted for RGN mode instead.  */\n+  if (((CALL_P (insn) || JUMP_P (insn)) && can_throw_internal (insn))\n+      || (NONJUMP_INSN_P (insn) && control_flow_insn_p (insn)))\n     reg_pending_barrier = MOVE_BARRIER;\n \n   /* Add dependencies if a scheduling barrier was found.  */"}, {"sha": "501825d28a6bece99c6791233aba4ddc9967050c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d47a8b8331c719df4f7c44af84eec7a63092a440/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d47a8b8331c719df4f7c44af84eec7a63092a440/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d47a8b8331c719df4f7c44af84eec7a63092a440", "patch": "@@ -1,3 +1,7 @@\n+2007-04-19  Eric Botcazou  <ebotcazou@libertysurf.fr>\n+\n+\t* gcc.dg/invalid-call-1.c: New test.\n+\n 2007-04-18  Dirk Mueller  <dmueller@suse.de>\n \n \tPR diagnostic/31227"}, {"sha": "7474227fa52251e18f15b899467268742d40c9a2", "filename": "gcc/testsuite/gcc.dg/invalid-call-1.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d47a8b8331c719df4f7c44af84eec7a63092a440/gcc%2Ftestsuite%2Fgcc.dg%2Finvalid-call-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d47a8b8331c719df4f7c44af84eec7a63092a440/gcc%2Ftestsuite%2Fgcc.dg%2Finvalid-call-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Finvalid-call-1.c?ref=d47a8b8331c719df4f7c44af84eec7a63092a440", "patch": "@@ -0,0 +1,17 @@\n+/* PR rtl-optimization/29841 */\n+/* Testcase by Khem Raj <raj.khem@gmail.com> */\n+\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+/* { dg-options \"-O2 -mtune=i586\" { target i?86-*-* } } */\n+\n+typedef void (*fp)(void);\n+extern char* bar(void* a1, int a2);\n+extern char* mar(int n);\n+char* cptr;\n+\n+void foo()\n+{\n+  cptr = mar(6);\n+  ((char *(*)(void *,int (*)(void *,unsigned char **),char**))((fp)bar))(0,0,(void*)(0)); /* { dg-warning \"\" \"non-compatible type\" } */\n+}"}]}