{"sha": "3c0f5ae642ea75acc61853a642f557109f3bb9e4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2MwZjVhZTY0MmVhNzVhY2M2MTg1M2E2NDJmNTU3MTA5ZjNiYjllNA==", "commit": {"author": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "1996-01-12T00:25:11Z"}, "committer": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "1996-01-12T00:25:11Z"}, "message": "sparc.h (FUNCTION_ARG_PASS_BY_REFERENCE): Use AGGREGATE_TYPE_P so QUAL_UNION_TYPE and SET_TYPE are also passed by...\n\n* sparc.h (FUNCTION_ARG_PASS_BY_REFERENCE):  Use AGGREGATE_TYPE_P so\nQUAL_UNION_TYPE and SET_TYPE are also passed by invisible reference.\n* sparc.h (INIT_CUMULATIVE_ARGS for SPARCV9):  Return types of\nQUAL_UNION_TYPE and SET_TYPE also make invisible 1st argument.\n\nFrom-SVN: r10967", "tree": {"sha": "a4efa7f39e53657f53e99643c29a5e0cee158857", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a4efa7f39e53657f53e99643c29a5e0cee158857"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3c0f5ae642ea75acc61853a642f557109f3bb9e4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c0f5ae642ea75acc61853a642f557109f3bb9e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c0f5ae642ea75acc61853a642f557109f3bb9e4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c0f5ae642ea75acc61853a642f557109f3bb9e4/comments", "author": null, "committer": null, "parents": [{"sha": "a6cc0d48f142afdccc9c31286037c78894f4f0f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6cc0d48f142afdccc9c31286037c78894f4f0f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6cc0d48f142afdccc9c31286037c78894f4f0f9"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "52f4ef4e61a64fa9b44b7c0d4b9e0c24e3e1bc3f", "filename": "gcc/config/sparc/sparc.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c0f5ae642ea75acc61853a642f557109f3bb9e4/gcc%2Fconfig%2Fsparc%2Fsparc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c0f5ae642ea75acc61853a642f557109f3bb9e4/gcc%2Fconfig%2Fsparc%2Fsparc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.h?ref=3c0f5ae642ea75acc61853a642f557109f3bb9e4", "patch": "@@ -1345,6 +1345,8 @@ extern int sparc_arg_count,sparc_n_named_args;\n       ((FNTYPE) && TYPE_ARG_TYPES (FNTYPE)\t\t\t\\\n        ? (list_length (TYPE_ARG_TYPES (FNTYPE))\t\t\t\\\n \t  + (TREE_CODE (TREE_TYPE (FNTYPE)) == RECORD_TYPE\t\\\n+\t     || TREE_CODE (TREE_TYPE (FNTYPE)) == QUAL_UNION_TYPE)\\\n+\t     || TREE_CODE (TREE_TYPE (FNTYPE)) == SET_TYPE)\t\\\n \t     || TREE_CODE (TREE_TYPE (FNTYPE)) == UNION_TYPE))\t\\\n        /* Can't tell, treat 'em all as named.  */\t\t\\\n        : 10000);\t\t\t\t\t\t\\\n@@ -1448,10 +1450,8 @@ extern int sparc_arg_count,sparc_n_named_args;\n /* The SPARC ABI stipulates passing struct arguments (of any size) and\n    (!v9) quad-precision floats by invisible reference.\n    For Pascal, also pass arrays by reference.  */\n-#define FUNCTION_ARG_PASS_BY_REFERENCE(CUM, MODE, TYPE, NAMED)\t\t\\\n-  ((TYPE && (TREE_CODE (TYPE) == RECORD_TYPE\t\t\t\t\\\n-\t    || TREE_CODE (TYPE) == UNION_TYPE\t\t\t\t\\\n-    \t    || TREE_CODE (TYPE) == ARRAY_TYPE))\t\t\t\t\\\n+#define FUNCTION_ARG_PASS_BY_REFERENCE(CUM, MODE, TYPE, NAMED)\t\\\n+  ((TYPE && AGGREGATE_TYPE_P (TYPE))\t\t\t\t\\\n    || (!TARGET_V9 && MODE == TFmode))\n \n /* A C expression that indicates when it is the called function's"}]}