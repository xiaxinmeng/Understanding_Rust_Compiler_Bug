{"sha": "2bb14213a3fac412c17a8efd98002c179ba18e92", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmJiMTQyMTNhM2ZhYzQxMmMxN2E4ZWZkOTgwMDJjMTc5YmExOGU5Mg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@yorick.cygnus.com", "date": "1997-11-13T10:11:23Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1997-11-13T10:11:23Z"}, "message": "init.c (build_new): Make the cleanup last longer.\n\n\t* init.c (build_new): Make the cleanup last longer.\n\t(expand_vec_init): Call do_pending_stack_adjust.\n\nFrom-SVN: r16451", "tree": {"sha": "ab36013a115b62a05ba29f8fb346d2c7873502ab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ab36013a115b62a05ba29f8fb346d2c7873502ab"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2bb14213a3fac412c17a8efd98002c179ba18e92", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2bb14213a3fac412c17a8efd98002c179ba18e92", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2bb14213a3fac412c17a8efd98002c179ba18e92", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2bb14213a3fac412c17a8efd98002c179ba18e92/comments", "author": null, "committer": null, "parents": [{"sha": "4699894f5bbe6958e82233d3f5581f0aca4aa67d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4699894f5bbe6958e82233d3f5581f0aca4aa67d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4699894f5bbe6958e82233d3f5581f0aca4aa67d"}], "stats": {"total": 23, "additions": 22, "deletions": 1}, "files": [{"sha": "270602e40079fa1d3e60dc1ed77f359681e3090a", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bb14213a3fac412c17a8efd98002c179ba18e92/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bb14213a3fac412c17a8efd98002c179ba18e92/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=2bb14213a3fac412c17a8efd98002c179ba18e92", "patch": "@@ -1,3 +1,8 @@\n+Thu Nov 13 01:52:36 1997  Jason Merrill  <jason@yorick.cygnus.com>\n+\n+\t* init.c (build_new): Make the cleanup last longer.\n+\t(expand_vec_init): Call do_pending_stack_adjust.\n+\n Wed Nov 12 11:04:33 1997  Jason Merrill  <jason@yorick.cygnus.com>\n \n \t* pt.c (do_type_instantiation): Fix typo."}, {"sha": "c1df1d978f5a551aaa87355cca0d182bb94766b3", "filename": "gcc/cp/init.c", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bb14213a3fac412c17a8efd98002c179ba18e92/gcc%2Fcp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bb14213a3fac412c17a8efd98002c179ba18e92/gcc%2Fcp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finit.c?ref=2bb14213a3fac412c17a8efd98002c179ba18e92", "patch": "@@ -2522,7 +2522,16 @@ build_new (placement, decl, init, use_global_new)\n       TREE_CALLS_NEW (rval) = 1;\n     }\n \n-  if ((flag_exceptions || check_new) && rval)\n+  if (flag_exceptions && rval)\n+    {\n+      /* This must last longer so we can use it in the cleanup.\n+         The subexpressions don't need to last, because we won't look at\n+\t them when expanding the cleanup.  */\n+      int yes = suspend_momentary ();\n+      alloc_expr = rval = save_expr (rval);\n+      resume_momentary (yes);\n+    }\n+  else if (check_new && rval)\n     alloc_expr = rval = save_expr (rval);\n   else\n     alloc_expr = NULL_TREE;\n@@ -2715,6 +2724,9 @@ build_new (placement, decl, init, use_global_new)\n \t{\n \t  tree cleanup = alloc_expr;\n \n+\t  /* All cleanups must last longer than normal.  */\n+\t  int yes = suspend_momentary ();\n+\n \t  if (! use_global_new && TYPE_LANG_SPECIFIC (true_type)\n \t      && (TYPE_GETS_DELETE (true_type) & (1 << has_array)))\n \t    cleanup = build_opfncall (has_array? VEC_DELETE_EXPR : DELETE_EXPR,\n@@ -2723,6 +2735,8 @@ build_new (placement, decl, init, use_global_new)\n \t    cleanup = build_builtin_call\n \t      (void_type_node, has_array ? BIVD : BID,\n \t       build_expr_list (NULL_TREE, cleanup));\n+\n+\t  resume_momentary (yes);\n \t\t\t\t\t \n \t  rval = build (TRY_CATCH_EXPR, TREE_TYPE (rval), rval, cleanup);\n \t  rval = build (COMPOUND_EXPR, TREE_TYPE (rval), alloc_expr, rval);\n@@ -3132,13 +3146,15 @@ expand_vec_init (decl, base, maxindex, init, from_array)\n \t    TREE_TYPE (cleanup) = void_type_node;\n \t    RTL_EXPR_RTL (cleanup) = const0_rtx;\n \t    TREE_SIDE_EFFECTS (cleanup) = 1;\n+\t    do_pending_stack_adjust ();\n \t    start_sequence_for_rtl_expr (cleanup);\n \n \t    e1 = build_array_eh_cleanup\n \t      (rval,\n \t       build_binary_op (MINUS_EXPR, maxindex, iterator, 1),\n \t       type);\n \t    expand_expr (e1, const0_rtx, VOIDmode, EXPAND_NORMAL);\n+\t    do_pending_stack_adjust ();\n \t    RTL_EXPR_SEQUENCE (cleanup) = get_insns ();\n \t    end_sequence ();\n "}]}