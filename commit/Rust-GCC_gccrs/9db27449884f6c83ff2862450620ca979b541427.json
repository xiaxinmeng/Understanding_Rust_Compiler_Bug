{"sha": "9db27449884f6c83ff2862450620ca979b541427", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWRiMjc0NDk4ODRmNmM4M2ZmMjg2MjQ1MDYyMGNhOTc5YjU0MTQyNw==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2007-01-24T11:17:09Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2007-01-24T11:17:09Z"}, "message": "i386.md (tanxf2, [...]): Use op2 instead of operands[2] to avoid access past the end of array.\n\n\t* config/i386/i386.md (tanxf2, tan<mode>2, atan<mode>2, log<mode>2,\n\tlog10<mode>2, log2<mode>2, expxf2, exp10xf2, exp2xf2): Use op2\n\tinstead of operands[2] to avoid access past the end of array.\n\nFrom-SVN: r121106", "tree": {"sha": "0b077a2b8c174d8d9acccb241ece3ece332b6e3d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0b077a2b8c174d8d9acccb241ece3ece332b6e3d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9db27449884f6c83ff2862450620ca979b541427", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9db27449884f6c83ff2862450620ca979b541427", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9db27449884f6c83ff2862450620ca979b541427", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9db27449884f6c83ff2862450620ca979b541427/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "92d545925396fd4588681b0fec6d7d4477eb6aec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92d545925396fd4588681b0fec6d7d4477eb6aec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/92d545925396fd4588681b0fec6d7d4477eb6aec"}], "stats": {"total": 56, "additions": 31, "deletions": 25}, "files": [{"sha": "1afc85d1a6c0cde927e55ecf9b4657f80d109695", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9db27449884f6c83ff2862450620ca979b541427/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9db27449884f6c83ff2862450620ca979b541427/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9db27449884f6c83ff2862450620ca979b541427", "patch": "@@ -1,3 +1,9 @@\n+2007-01-24  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.md (tanxf2, tan<mode>2, atan<mode>2, log<mode>2,\n+\tlog10<mode>2, log2<mode>2, expxf2, exp10xf2, exp2xf2): Use op2\n+\tinstead of operands[2] to avoid access past the end of array.\n+\n 2007-01-24  Richard Sandiford  <richard@codesourcery.com>\n \n \t* reload1.c (emit_reload_insns): Pass the reload register"}, {"sha": "56cf81d0bc374264cc2f0888a58414f3fffdce40", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 25, "deletions": 25, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9db27449884f6c83ff2862450620ca979b541427/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9db27449884f6c83ff2862450620ca979b541427/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=9db27449884f6c83ff2862450620ca979b541427", "patch": "@@ -15904,9 +15904,9 @@\n    && flag_unsafe_math_optimizations\"\n {\n   rtx one = gen_reg_rtx (XFmode);\n-  operands[2] = CONST1_RTX (XFmode); /* fld1 */\n+  rtx op2 = CONST1_RTX (XFmode); /* fld1 */\n \n-  emit_insn (gen_fptanxf4_i387 (one, operands[0], operands[1], operands[2]));\n+  emit_insn (gen_fptanxf4_i387 (one, operands[0], operands[1], op2));\n   DONE;\n })\n \n@@ -15921,10 +15921,10 @@\n   rtx op0 = gen_reg_rtx (XFmode);\n \n   rtx one = gen_reg_rtx (<MODE>mode);\n-  operands[2] = CONST1_RTX (<MODE>mode); /* fld1 */\n+  rtx op2 = CONST1_RTX (<MODE>mode); /* fld1 */\n \n   emit_insn (gen_fptan_extend<mode>xf4_i387 (one, op0,\n-\t\t\t\t\t     operands[1], operands[2]));\n+\t\t\t\t\t     operands[1], op2));\n   emit_insn (gen_truncxf<mode>2_i387_noop (operands[0], op0));\n   DONE;\n })\n@@ -16006,10 +16006,10 @@\n {\n   rtx op0 = gen_reg_rtx (XFmode);\n \n-  operands[2] = gen_reg_rtx (<MODE>mode);\n-  emit_move_insn (operands[2], CONST1_RTX (<MODE>mode));  /* fld1 */\n+  rtx op2 = gen_reg_rtx (<MODE>mode);\n+  emit_move_insn (op2, CONST1_RTX (<MODE>mode));  /* fld1 */\n \n-  emit_insn (gen_fpatan_extend<mode>xf3_i387 (op0, operands[2], operands[1]));\n+  emit_insn (gen_fpatan_extend<mode>xf3_i387 (op0, op2, operands[1]));\n   emit_insn (gen_truncxf<mode>2_i387_noop (operands[0], op0));\n   DONE;\n })\n@@ -16139,10 +16139,10 @@\n {\n   rtx op0 = gen_reg_rtx (XFmode);\n \n-  operands[2] = gen_reg_rtx (XFmode);\n-  emit_move_insn (operands[2], standard_80387_constant_rtx (4)); /* fldln2 */\n+  rtx op2 = gen_reg_rtx (XFmode);\n+  emit_move_insn (op2, standard_80387_constant_rtx (4)); /* fldln2 */\n \n-  emit_insn (gen_fyl2x_extend<mode>xf3_i387 (op0, operands[1], operands[2]));\n+  emit_insn (gen_fyl2x_extend<mode>xf3_i387 (op0, operands[1], op2));\n   emit_insn (gen_truncxf<mode>2_i387_noop (operands[0], op0));\n   DONE;\n })\n@@ -16169,10 +16169,10 @@\n {\n   rtx op0 = gen_reg_rtx (XFmode);\n \n-  operands[2] = gen_reg_rtx (XFmode);\n-  emit_move_insn (operands[2], standard_80387_constant_rtx (3)); /* fldlg2 */\n+  rtx op2 = gen_reg_rtx (XFmode);\n+  emit_move_insn (op2, standard_80387_constant_rtx (3)); /* fldlg2 */\n \n-  emit_insn (gen_fyl2x_extend<mode>xf3_i387 (op0, operands[1], operands[2]));\n+  emit_insn (gen_fyl2x_extend<mode>xf3_i387 (op0, operands[1], op2));\n   emit_insn (gen_truncxf<mode>2_i387_noop (operands[0], op0));\n   DONE;\n })\n@@ -16199,10 +16199,10 @@\n {\n   rtx op0 = gen_reg_rtx (XFmode);\n \n-  operands[2] = gen_reg_rtx (XFmode);\n-  emit_move_insn (operands[2], CONST1_RTX (XFmode)); /* fld1 */\n+  rtx op2 = gen_reg_rtx (XFmode);\n+  emit_move_insn (op2, CONST1_RTX (XFmode)); /* fld1 */\n \n-  emit_insn (gen_fyl2x_extend<mode>xf3_i387 (op0, operands[1], operands[2]));\n+  emit_insn (gen_fyl2x_extend<mode>xf3_i387 (op0, operands[1], op2));\n   emit_insn (gen_truncxf<mode>2_i387_noop (operands[0], op0));\n   DONE;\n })\n@@ -16387,10 +16387,10 @@\n   \"TARGET_USE_FANCY_MATH_387\n    && flag_unsafe_math_optimizations && !optimize_size\"\n {\n-  operands[2] = gen_reg_rtx (XFmode);\n-  emit_move_insn (operands[2], standard_80387_constant_rtx (5)); /* fldl2e */\n+  rtx op2 = gen_reg_rtx (XFmode);\n+  emit_move_insn (op2, standard_80387_constant_rtx (5)); /* fldl2e */\n \n-  emit_insn (gen_expNcorexf3 (operands[0], operands[1], operands[2]));\n+  emit_insn (gen_expNcorexf3 (operands[0], operands[1], op2));\n   DONE;\n })\n \n@@ -16417,10 +16417,10 @@\n   \"TARGET_USE_FANCY_MATH_387\n    && flag_unsafe_math_optimizations && !optimize_size\"\n {\n-  operands[2] = gen_reg_rtx (XFmode);\n-  emit_move_insn (operands[2], standard_80387_constant_rtx (6)); /* fldl2t */\n+  rtx op2 = gen_reg_rtx (XFmode);\n+  emit_move_insn (op2, standard_80387_constant_rtx (6)); /* fldl2t */\n \n-  emit_insn (gen_expNcorexf3 (operands[0], operands[1], operands[2]));\n+  emit_insn (gen_expNcorexf3 (operands[0], operands[1], op2));\n   DONE;\n })\n \n@@ -16447,10 +16447,10 @@\n   \"TARGET_USE_FANCY_MATH_387\n    && flag_unsafe_math_optimizations && !optimize_size\"\n {\n-  operands[2] = gen_reg_rtx (XFmode);\n-  emit_move_insn (operands[2], CONST1_RTX (XFmode));  /* fld1 */\n+  rtx op2 = gen_reg_rtx (XFmode);\n+  emit_move_insn (op2, CONST1_RTX (XFmode));  /* fld1 */\n \n-  emit_insn (gen_expNcorexf3 (operands[0], operands[1], operands[2]));\n+  emit_insn (gen_expNcorexf3 (operands[0], operands[1], op2));\n   DONE;\n })\n "}]}