{"sha": "6a7c793f3ef153f68fec135b0f8bca78ec9da324", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmE3Yzc5M2YzZWYxNTNmNjhmZWMxMzViMGY4YmNhNzhlYzlkYTMyNA==", "commit": {"author": {"name": "Danny Smith", "email": "dannysmith@users.sourceforge.net", "date": "2006-09-23T01:56:55Z"}, "committer": {"name": "Danny Smith", "email": "dannysmith@gcc.gnu.org", "date": "2006-09-23T01:56:55Z"}, "message": "re PR libfortran/27964 (Wrong line ends on windows (XP))\n\n\tPR libfortran/27964\n\t* configure.ac: Check for setmode() function.\n\t* configure: Regenerate.\n\t* config.h.in: Regenerate.\n\t* io/unix.c (output_stream): Force stdout to binary mode. \n\t(error_stream): Force stderr to binary mode.\n\nFrom-SVN: r117166", "tree": {"sha": "c7c20ef998ab2e57fb13c1b46a60429b75cc3d48", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c7c20ef998ab2e57fb13c1b46a60429b75cc3d48"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6a7c793f3ef153f68fec135b0f8bca78ec9da324", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a7c793f3ef153f68fec135b0f8bca78ec9da324", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a7c793f3ef153f68fec135b0f8bca78ec9da324", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a7c793f3ef153f68fec135b0f8bca78ec9da324/comments", "author": null, "committer": null, "parents": [{"sha": "45163b1afce7ab9176893ac9f06b87c285052604", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45163b1afce7ab9176893ac9f06b87c285052604", "html_url": "https://github.com/Rust-GCC/gccrs/commit/45163b1afce7ab9176893ac9f06b87c285052604"}], "stats": {"total": 22, "additions": 20, "deletions": 2}, "files": [{"sha": "709500bc535d856202879b6f22f93a9917ebf9d9", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a7c793f3ef153f68fec135b0f8bca78ec9da324/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a7c793f3ef153f68fec135b0f8bca78ec9da324/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=6a7c793f3ef153f68fec135b0f8bca78ec9da324", "patch": "@@ -1,3 +1,12 @@\n+2006-09-22  Danny Smith  <dannysmith@users.sourceforge.net>\n+\n+\tPR libfortran/27964\n+\t* configure.ac: Check for setmode() function.\n+\t* configure: Regenerate.\n+\t* config.h.in: Regenerate.\n+\t* io/unix.c (output_stream): Force stdout to binary mode. \n+\t(error_stream): Force stderr to binary mode.\n+\n 2006-09-15  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR libgfortran/29099"}, {"sha": "444cd2bbb0b2591fd8808f46f8c265c2d8918dbe", "filename": "libgfortran/config.h.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a7c793f3ef153f68fec135b0f8bca78ec9da324/libgfortran%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a7c793f3ef153f68fec135b0f8bca78ec9da324/libgfortran%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfig.h.in?ref=6a7c793f3ef153f68fec135b0f8bca78ec9da324", "patch": "@@ -492,6 +492,9 @@\n /* libm includes scalbnl */\n #undef HAVE_SCALBNL\n \n+/* Define to 1 if you have the `setmode' function. */\n+#undef HAVE_SETMODE\n+\n /* Define to 1 if you have the `signal' function. */\n #undef HAVE_SIGNAL\n "}, {"sha": "75872aa861db76510c86f7b2cb7f93915de27044", "filename": "libgfortran/configure", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a7c793f3ef153f68fec135b0f8bca78ec9da324/libgfortran%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a7c793f3ef153f68fec135b0f8bca78ec9da324/libgfortran%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfigure?ref=6a7c793f3ef153f68fec135b0f8bca78ec9da324", "patch": "@@ -10037,7 +10037,7 @@ fi\n done\n \n \n-for ac_func in wait\n+for ac_func in wait setmode\n do\n as_ac_var=`echo \"ac_cv_func_$ac_func\" | $as_tr_sh`\n echo \"$as_me:$LINENO: checking for $ac_func\" >&5"}, {"sha": "4784fa575099959d00ca8d8f44431ad7a4d3d9db", "filename": "libgfortran/configure.ac", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a7c793f3ef153f68fec135b0f8bca78ec9da324/libgfortran%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a7c793f3ef153f68fec135b0f8bca78ec9da324/libgfortran%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfigure.ac?ref=6a7c793f3ef153f68fec135b0f8bca78ec9da324", "patch": "@@ -172,7 +172,7 @@ AC_CHECK_MEMBERS([struct stat.st_rdev])\n AC_CHECK_FUNCS(getrusage times mkstemp strtof strtold snprintf ftruncate chsize)\n AC_CHECK_FUNCS(chdir strerror getlogin gethostname kill link symlink perror)\n AC_CHECK_FUNCS(sleep time ttyname signal alarm ctime clock access fork execl)\n-AC_CHECK_FUNCS(wait)\n+AC_CHECK_FUNCS(wait setmode)\n \n # Check libc for getgid, getpid, getuid\n AC_CHECK_LIB([c],[getgid],[AC_DEFINE([HAVE_GETGID],[1],[libc includes getgid])])"}, {"sha": "57883e0f4e3964aa4a7f8f5237ac4a9aa6deba37", "filename": "libgfortran/io/unix.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a7c793f3ef153f68fec135b0f8bca78ec9da324/libgfortran%2Fio%2Funix.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a7c793f3ef153f68fec135b0f8bca78ec9da324/libgfortran%2Fio%2Funix.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Funix.c?ref=6a7c793f3ef153f68fec135b0f8bca78ec9da324", "patch": "@@ -1289,6 +1289,9 @@ input_stream (void)\n stream *\n output_stream (void)\n {\n+#if defined(HAVE_CRLF) && defined(HAVE_SETMODE)\n+  setmode (STDOUT_FILENO, O_BINARY);\n+#endif\n   return fd_to_stream (STDOUT_FILENO, PROT_WRITE);\n }\n \n@@ -1299,6 +1302,9 @@ output_stream (void)\n stream *\n error_stream (void)\n {\n+#if defined(HAVE_CRLF) && defined(HAVE_SETMODE)\n+  setmode (STDERR_FILENO, O_BINARY);\n+#endif\n   return fd_to_stream (STDERR_FILENO, PROT_WRITE);\n }\n "}]}