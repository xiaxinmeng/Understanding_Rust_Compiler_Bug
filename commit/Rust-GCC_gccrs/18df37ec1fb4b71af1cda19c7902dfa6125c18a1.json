{"sha": "18df37ec1fb4b71af1cda19c7902dfa6125c18a1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MThkZjM3ZWMxZmI0YjcxYWYxY2RhMTljNzkwMmRmYTYxMjVjMThhMQ==", "commit": {"author": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2016-11-28T19:57:50Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2016-11-28T19:57:50Z"}, "message": "Fix typo.\n\nFrom-SVN: r242931", "tree": {"sha": "839c7971a1eccc1766819654ef69757a9044a721", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/839c7971a1eccc1766819654ef69757a9044a721"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/18df37ec1fb4b71af1cda19c7902dfa6125c18a1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18df37ec1fb4b71af1cda19c7902dfa6125c18a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/18df37ec1fb4b71af1cda19c7902dfa6125c18a1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18df37ec1fb4b71af1cda19c7902dfa6125c18a1/comments", "author": null, "committer": null, "parents": [{"sha": "f28fd43ea80711f0735903a09f67ceb7278a7c58", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f28fd43ea80711f0735903a09f67ceb7278a7c58", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f28fd43ea80711f0735903a09f67ceb7278a7c58"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "ab627465e642dd22286528879777c7b6bcdd4cda", "filename": "gcc/ChangeLog", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18df37ec1fb4b71af1cda19c7902dfa6125c18a1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18df37ec1fb4b71af1cda19c7902dfa6125c18a1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=18df37ec1fb4b71af1cda19c7902dfa6125c18a1", "patch": "@@ -5,7 +5,7 @@\n \tnumber in mode wider than HOST_BITS_PER_WIDE_INT, use\n \tsimplify_const_unary_operation to produce CONST_DOUBLE or\n \tCONST_WIDE_INT.\n-\t(simplify_plus_minus): Hanlde the case where neg_const_int\n+\t(simplify_plus_minus): Handle the case where neg_const_int\n \tdoesn't return a CONST_INT.\n \n 2016-11-28  Markus Trippelsdorf  <markus@trippelsdorf.de>"}]}