{"sha": "3da80ed7efd582575e7850a403ce693ec882d087", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2RhODBlZDdlZmQ1ODI1NzVlNzg1MGE0MDNjZTY5M2VjODgyZDA4Nw==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-04-28T14:56:04Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-04-28T14:56:04Z"}, "message": "libstdc++: Define __cpp_lib_constexpr_string macro\n\nAs noted in r11-1339-gb6ab9ecd550227684643b41e9e33a4d3466724d8 we define\na non-standard __cpp_lib_constexpr_char_traits feature test macro to\nindicate support for P0426R1 and P1032R1. At some point last year the\n__cpp_lib_constexpr_string macro was retconned to indicate support for\nthose papers. This adds the new macro (which we didn't previously\ndefine, because it referred to P0980R1 \"Making std::string constexpr\"\nwhich we don't support).\n\nlibstdc++-v3/ChangeLog:\n\n\t* include/bits/basic_string.h (__cpp_lib_constexpr_string): Define.\n\t* include/std/version (__cpp_lib_constexpr_string): Define.\n\t* testsuite/21_strings/char_traits/requirements/constexpr_functions_c++17.cc:\n\tCheck for __cpp_lib_constexpr_string.\n\t* testsuite/21_strings/char_traits/requirements/constexpr_functions_c++20.cc:\n\tLikewise.\n\t* testsuite/21_strings/char_traits/requirements/version.cc: New test.", "tree": {"sha": "652de1d7ed2a41f653b5e3d54b5e96460a8e2545", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/652de1d7ed2a41f653b5e3d54b5e96460a8e2545"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3da80ed7efd582575e7850a403ce693ec882d087", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3da80ed7efd582575e7850a403ce693ec882d087", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3da80ed7efd582575e7850a403ce693ec882d087", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3da80ed7efd582575e7850a403ce693ec882d087/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "43a35b26e2fd2fab9c0c3ebac67e3a6c439daef4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43a35b26e2fd2fab9c0c3ebac67e3a6c439daef4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43a35b26e2fd2fab9c0c3ebac67e3a6c439daef4"}], "stats": {"total": 45, "additions": 41, "deletions": 4}, "files": [{"sha": "41d781c698e7f779274a9d2aafa1fac2c45c37e1", "filename": "libstdc++-v3/include/bits/basic_string.h", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3da80ed7efd582575e7850a403ce693ec882d087/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_string.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3da80ed7efd582575e7850a403ce693ec882d087/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_string.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_string.h?ref=3da80ed7efd582575e7850a403ce693ec882d087", "patch": "@@ -48,11 +48,18 @@\n # include <string_view>\n #endif\n \n-\n namespace std _GLIBCXX_VISIBILITY(default)\n {\n _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n+#if __cplusplus == 201703L\n+// Support P0426R1 changes to char_traits in C++17.\n+# define __cpp_lib_constexpr_string 201611L\n+#else\n+// Also support P1032R1 in C++20 (but not P0980R1 yet).\n+# define __cpp_lib_constexpr_string 201811L\n+#endif\n+\n #if _GLIBCXX_USE_CXX11_ABI\n _GLIBCXX_BEGIN_NAMESPACE_CXX11\n   /**"}, {"sha": "09e67a40d0c2f4cfec49f27023d1f18c367592e9", "filename": "libstdc++-v3/include/std/version", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3da80ed7efd582575e7850a403ce693ec882d087/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fversion", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3da80ed7efd582575e7850a403ce693ec882d087/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fversion", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fversion?ref=3da80ed7efd582575e7850a403ce693ec882d087", "patch": "@@ -131,6 +131,7 @@\n #define __cpp_lib_clamp 201603\n #if __cplusplus == 201703L // N.B. updated value in C++20\n # define __cpp_lib_constexpr_char_traits 201611L\n+# define __cpp_lib_constexpr_string 201611L\n #endif\n #define __cpp_lib_enable_shared_from_this 201603\n #define __cpp_lib_execution 201902L // FIXME: should be 201603L\n@@ -219,6 +220,7 @@\n #define __cpp_lib_constexpr_iterator 201811L\n #define __cpp_lib_constexpr_memory 201811L\n #define __cpp_lib_constexpr_numeric 201911L\n+#define __cpp_lib_constexpr_string 201811L\n #define __cpp_lib_constexpr_string_view 201811L\n #define __cpp_lib_constexpr_tuple 201811L\n #define __cpp_lib_constexpr_utility 201811L"}, {"sha": "32e31e13abbafbad09f3782013f6d7eaed0ce9bf", "filename": "libstdc++-v3/testsuite/21_strings/char_traits/requirements/constexpr_functions_c++17.cc", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3da80ed7efd582575e7850a403ce693ec882d087/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fchar_traits%2Frequirements%2Fconstexpr_functions_c%2B%2B17.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3da80ed7efd582575e7850a403ce693ec882d087/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fchar_traits%2Frequirements%2Fconstexpr_functions_c%2B%2B17.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fchar_traits%2Frequirements%2Fconstexpr_functions_c%2B%2B17.cc?ref=3da80ed7efd582575e7850a403ce693ec882d087", "patch": "@@ -73,12 +73,17 @@ template<typename CT>\n     return true;\n   }\n \n+#ifndef __cpp_lib_constexpr_string\n+# error Feature-test macro for constexpr char_traits is missing\n+#elif __cpp_lib_constexpr_string < (__cplusplus == 201703 ? 201611 : 201811)\n+# error Feature-test macro for constexpr char_traits has the wrong value\n+#endif\n+\n+// We also provide this non-standard macro for P0426R1 (and P1032R1 in C++20).\n #ifndef __cpp_lib_constexpr_char_traits\n # error Feature-test macro for constexpr char_traits is missing\n-#elif __cpp_lib_constexpr_char_traits < 201611\n+#elif __cpp_lib_constexpr_char_traits != (__cplusplus == 201703 ? 201611 : 201811)\n # error Feature-test macro for constexpr char_traits has the wrong value\n-#elif __cpp_lib_constexpr_char_traits > 201611 && __cplusplus == 201703\n-# error Feature-test macro for constexpr char_traits has wrong value for C++17\n #endif\n \n static_assert( test_assign<std::char_traits<char>>() );"}, {"sha": "0d1595fe030b57227aaaf125f71c92a7ba44b069", "filename": "libstdc++-v3/testsuite/21_strings/char_traits/requirements/constexpr_functions_c++20.cc", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3da80ed7efd582575e7850a403ce693ec882d087/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fchar_traits%2Frequirements%2Fconstexpr_functions_c%2B%2B20.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3da80ed7efd582575e7850a403ce693ec882d087/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fchar_traits%2Frequirements%2Fconstexpr_functions_c%2B%2B20.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fchar_traits%2Frequirements%2Fconstexpr_functions_c%2B%2B20.cc?ref=3da80ed7efd582575e7850a403ce693ec882d087", "patch": "@@ -30,6 +30,13 @@ template<typename CT>\n     return s1[0]==char_type{1} && s1[1]==char_type{1} && s1[2]==char_type{2};\n   }\n \n+#ifndef __cpp_lib_constexpr_string\n+# error Feature-test macro for constexpr char_traits is missing\n+#elif __cpp_lib_constexpr_string < 201811\n+# error Feature-test macro for constexpr char_traits has the wrong value\n+#endif\n+\n+// We also provide this non-standard macro for P0426R1 and P1032R1.\n #ifndef __cpp_lib_constexpr_char_traits\n # error Feature-test macro for constexpr char_traits is missing\n #elif __cpp_lib_constexpr_char_traits != 201811"}, {"sha": "6f571f48010f140cf7b6b7eb24e6a63dadfa15ba", "filename": "libstdc++-v3/testsuite/21_strings/char_traits/requirements/version.cc", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3da80ed7efd582575e7850a403ce693ec882d087/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fchar_traits%2Frequirements%2Fversion.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3da80ed7efd582575e7850a403ce693ec882d087/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fchar_traits%2Frequirements%2Fversion.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fchar_traits%2Frequirements%2Fversion.cc?ref=3da80ed7efd582575e7850a403ce693ec882d087", "patch": "@@ -0,0 +1,16 @@\n+// { dg-do compile { target c++17 } }\n+\n+#include <version>\n+\n+#ifndef __cpp_lib_constexpr_string\n+# error Feature-test macro for constexpr char_traits is missing in <version>\n+#elif __cpp_lib_constexpr_string < (__cplusplus == 201703 ? 201611 : 201811)\n+# error Feature-test macro for constexpr char_traits has the wrong value in <version>\n+#endif\n+\n+// We also provide this non-standard macro for P0426R1 and P1032R1.\n+#ifndef __cpp_lib_constexpr_char_traits\n+# error Feature-test macro for constexpr char_traits is missing in <version>\n+#elif __cpp_lib_constexpr_char_traits != (__cplusplus == 201703 ? 201611 : 201811)\n+# error Feature-test macro for constexpr char_traits has the wrong value in <version>\n+#endif"}]}