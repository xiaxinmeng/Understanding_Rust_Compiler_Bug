{"sha": "a2c9fe42531a2ef2259e4128c50632b2df37202b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTJjOWZlNDI1MzFhMmVmMjI1OWU0MTI4YzUwNjMyYjJkZjM3MjAyYg==", "commit": {"author": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2010-05-22T14:15:50Z"}, "committer": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2010-05-22T14:15:50Z"}, "message": "rtl.h (union rtunion_def): Remove rt_bit member.\n\n\t* rtl.h (union rtunion_def): Remove rt_bit member.\n\t(XBITMAP, X0BITMAP, XCBITMAP): Remove.\n\t* print-rtl (print_rtx): Do not print the member.\n\t* gengtype.c (adjust_field_rtx_def): Do not handle it.\n\t* gengenrtl.c (type_from_format): Likewise.\n\t(accessor_from_format): Likewise.\n\nFrom-SVN: r159698", "tree": {"sha": "326d23e20293fd0151d5825789584568606e4774", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/326d23e20293fd0151d5825789584568606e4774"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a2c9fe42531a2ef2259e4128c50632b2df37202b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2c9fe42531a2ef2259e4128c50632b2df37202b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a2c9fe42531a2ef2259e4128c50632b2df37202b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2c9fe42531a2ef2259e4128c50632b2df37202b/comments", "author": null, "committer": null, "parents": [{"sha": "3b2ce251b8c0b8e2b0b1714c62f51eaf19349545", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b2ce251b8c0b8e2b0b1714c62f51eaf19349545", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3b2ce251b8c0b8e2b0b1714c62f51eaf19349545"}], "stats": {"total": 36, "additions": 10, "deletions": 26}, "files": [{"sha": "b924627b5265bdc4935e93974617ba1a4e8c90bd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2c9fe42531a2ef2259e4128c50632b2df37202b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2c9fe42531a2ef2259e4128c50632b2df37202b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a2c9fe42531a2ef2259e4128c50632b2df37202b", "patch": "@@ -1,3 +1,12 @@\n+2010-05-22  Steven Bosscher  <steven@gcc.gnu.org>\n+\n+\t* rtl.h (union rtunion_def): Remove rt_bit member.\n+\t(XBITMAP, X0BITMAP, XCBITMAP): Remove.\n+\t* print-rtl (print_rtx): Do not print the member.\n+\t* gengtype.c (adjust_field_rtx_def): Do not handle it.\n+\t* gengenrtl.c (type_from_format): Likewise.\n+\t(accessor_from_format): Likewise.\n+\n 2010-05-22  Joseph Myers  <joseph@codesourcery.com>\n \n \t* dbgcnt.c: Include toplev.h instead of errors.h."}, {"sha": "149e54ba7d49854cee42e87d37b7ee0ebd02e215", "filename": "gcc/gengenrtl.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2c9fe42531a2ef2259e4128c50632b2df37202b/gcc%2Fgengenrtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2c9fe42531a2ef2259e4128c50632b2df37202b/gcc%2Fgengenrtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgengenrtl.c?ref=a2c9fe42531a2ef2259e4128c50632b2df37202b", "patch": "@@ -76,8 +76,6 @@ type_from_format (int c)\n \n     case 'E':\n       return \"rtvec \";\n-    case 'b':\n-      return \"struct bitmap_head_def *\";  /* bitmap - typedef not available */\n     case 't':\n       return \"union tree_node *\";  /* tree - typedef not available */\n     case 'B':\n@@ -109,9 +107,6 @@ accessor_from_format (int c)\n     case 'E':\n       return \"XVEC\";\n \n-    case 'b':\n-      return \"XBITMAP\";\n-\n     case 't':\n       return \"XTREE\";\n "}, {"sha": "cb3d9bbf2211e87ec844e6a1f0571d836890a071", "filename": "gcc/gengtype.c", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2c9fe42531a2ef2259e4128c50632b2df37202b/gcc%2Fgengtype.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2c9fe42531a2ef2259e4128c50632b2df37202b/gcc%2Fgengtype.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgengtype.c?ref=a2c9fe42531a2ef2259e4128c50632b2df37202b", "patch": "@@ -1008,7 +1008,7 @@ adjust_field_rtx_def (type_p t, options_p ARG_UNUSED (opt))\n   options_p nodot;\n   int i;\n   type_p rtx_tp, rtvec_tp, tree_tp, mem_attrs_tp, note_union_tp, scalar_tp;\n-  type_p bitmap_tp, basic_block_tp, reg_attrs_tp, constant_tp, symbol_union_tp;\n+  type_p basic_block_tp, reg_attrs_tp, constant_tp, symbol_union_tp;\n \n   if (t->kind != TYPE_UNION)\n     {\n@@ -1024,7 +1024,6 @@ adjust_field_rtx_def (type_p t, options_p ARG_UNUSED (opt))\n   tree_tp = create_pointer (find_structure (\"tree_node\", 1));\n   mem_attrs_tp = create_pointer (find_structure (\"mem_attrs\", 0));\n   reg_attrs_tp = create_pointer (find_structure (\"reg_attrs\", 0));\n-  bitmap_tp = create_pointer (find_structure (\"bitmap_element_def\", 0));\n   basic_block_tp = create_pointer (find_structure (\"basic_block_def\", 0));\n   constant_tp = create_pointer (find_structure (\"constant_descriptor_rtx\", 0));\n   scalar_tp = &scalar_nonchar;  /* rtunion int */\n@@ -1171,11 +1170,6 @@ adjust_field_rtx_def (type_p t, options_p ARG_UNUSED (opt))\n \t      subname = \"rt_tree\";\n \t      break;\n \n-\t    case 'b':\n-\t      t = bitmap_tp;\n-\t      subname = \"rt_bit\";\n-\t      break;\n-\n \t    case 'B':\n \t      t = basic_block_tp;\n \t      subname = \"rt_bb\";"}, {"sha": "d8c76443d00171151fbf29a761af465fb61bc608", "filename": "gcc/print-rtl.c", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2c9fe42531a2ef2259e4128c50632b2df37202b/gcc%2Fprint-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2c9fe42531a2ef2259e4128c50632b2df37202b/gcc%2Fprint-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprint-rtl.c?ref=a2c9fe42531a2ef2259e4128c50632b2df37202b", "patch": "@@ -512,16 +512,6 @@ print_rtx (const_rtx in_rtx)\n \tsawclose = 0;\n \tbreak;\n \n-      case 'b':\n-#ifndef GENERATOR_FILE\n-\tif (XBITMAP (in_rtx, i) == NULL)\n-\t  fputs (\" {null}\", outfile);\n-\telse\n-\t  bitmap_print (outfile, XBITMAP (in_rtx, i), \" {\", \"}\");\n-#endif\n-\tsawclose = 0;\n-\tbreak;\n-\n       case 't':\n #ifndef GENERATOR_FILE\n \tdump_addr (outfile, \" \", XTREE (in_rtx, i));"}, {"sha": "683ad66b7ab040b737602f046d4b807f6fb3a4ef", "filename": "gcc/rtl.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2c9fe42531a2ef2259e4128c50632b2df37202b/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2c9fe42531a2ef2259e4128c50632b2df37202b/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=a2c9fe42531a2ef2259e4128c50632b2df37202b", "patch": "@@ -174,7 +174,6 @@ union rtunion_def\n   enum machine_mode rt_type;\n   addr_diff_vec_flags rt_addr_diff_vec_flags;\n   struct cselib_val_struct *rt_cselib;\n-  struct bitmap_head_def *rt_bit;\n   tree rt_tree;\n   struct basic_block_def *rt_bb;\n   mem_attrs *rt_mem;\n@@ -705,7 +704,6 @@ extern void rtl_check_failed_flag (const char *, const_rtx, const char *,\n #define XEXP(RTX, N)\t(RTL_CHECK2 (RTX, N, 'e', 'u').rt_rtx)\n #define XVEC(RTX, N)\t(RTL_CHECK2 (RTX, N, 'E', 'V').rt_rtvec)\n #define XMODE(RTX, N)\t(RTL_CHECK1 (RTX, N, 'M').rt_type)\n-#define XBITMAP(RTX, N) (RTL_CHECK1 (RTX, N, 'b').rt_bit)\n #define XTREE(RTX, N)   (RTL_CHECK1 (RTX, N, 't').rt_tree)\n #define XBBDEF(RTX, N)\t(RTL_CHECK1 (RTX, N, 'B').rt_bb)\n #define XTMPL(RTX, N)\t(RTL_CHECK1 (RTX, N, 'T').rt_str)\n@@ -722,7 +720,6 @@ extern void rtl_check_failed_flag (const char *, const_rtx, const char *,\n #define X0EXP(RTX, N)\t   (RTL_CHECK1 (RTX, N, '0').rt_rtx)\n #define X0VEC(RTX, N)\t   (RTL_CHECK1 (RTX, N, '0').rt_rtvec)\n #define X0MODE(RTX, N)\t   (RTL_CHECK1 (RTX, N, '0').rt_type)\n-#define X0BITMAP(RTX, N)   (RTL_CHECK1 (RTX, N, '0').rt_bit)\n #define X0TREE(RTX, N)\t   (RTL_CHECK1 (RTX, N, '0').rt_tree)\n #define X0BBDEF(RTX, N)\t   (RTL_CHECK1 (RTX, N, '0').rt_bb)\n #define X0ADVFLAGS(RTX, N) (RTL_CHECK1 (RTX, N, '0').rt_addr_diff_vec_flags)\n@@ -740,7 +737,6 @@ extern void rtl_check_failed_flag (const char *, const_rtx, const char *,\n #define XCEXP(RTX, N, C)      (RTL_CHECKC1 (RTX, N, C).rt_rtx)\n #define XCVEC(RTX, N, C)      (RTL_CHECKC1 (RTX, N, C).rt_rtvec)\n #define XCMODE(RTX, N, C)     (RTL_CHECKC1 (RTX, N, C).rt_type)\n-#define XCBITMAP(RTX, N, C)   (RTL_CHECKC1 (RTX, N, C).rt_bit)\n #define XCTREE(RTX, N, C)     (RTL_CHECKC1 (RTX, N, C).rt_tree)\n #define XCBBDEF(RTX, N, C)    (RTL_CHECKC1 (RTX, N, C).rt_bb)\n #define XCCSELIB(RTX, N, C)   (RTL_CHECKC1 (RTX, N, C).rt_cselib)"}]}