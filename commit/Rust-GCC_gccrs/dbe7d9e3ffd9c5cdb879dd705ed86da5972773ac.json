{"sha": "dbe7d9e3ffd9c5cdb879dd705ed86da5972773ac", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGJlN2Q5ZTNmZmQ5YzVjZGI4NzlkZDcwNWVkODZkYTU5NzI3NzNhYw==", "commit": {"author": {"name": "Radovan Obradovic", "email": "robradovic@mips.com", "date": "2014-05-28T09:43:41Z"}, "committer": {"name": "Tom de Vries", "email": "vries@gcc.gnu.org", "date": "2014-05-28T09:43:41Z"}, "message": "-fuse-caller-save - Add documentation\n\n2014-05-28  Radovan Obradovic  <robradovic@mips.com>\n            Tom de Vries  <tom@codesourcery.com>\n\n\t* doc/invoke.texi (@item Optimization Options): Add -fuse-caller-save to\n\tgccoptlist.\n\t(@item -fuse-caller-save): New item.\n\nCo-Authored-By: Tom de Vries <tom@codesourcery.com>\n\nFrom-SVN: r211009", "tree": {"sha": "d5af881420733d41b0a68193ad583b1fefbd1855", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d5af881420733d41b0a68193ad583b1fefbd1855"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dbe7d9e3ffd9c5cdb879dd705ed86da5972773ac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dbe7d9e3ffd9c5cdb879dd705ed86da5972773ac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dbe7d9e3ffd9c5cdb879dd705ed86da5972773ac", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dbe7d9e3ffd9c5cdb879dd705ed86da5972773ac/comments", "author": null, "committer": null, "parents": [{"sha": "5c989bbf879aeb9cb772bbc52188ba5b31d77f7f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c989bbf879aeb9cb772bbc52188ba5b31d77f7f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c989bbf879aeb9cb772bbc52188ba5b31d77f7f"}], "stats": {"total": 19, "additions": 17, "deletions": 2}, "files": [{"sha": "ba42f56257719398527000b74e8b1be22ce04eef", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbe7d9e3ffd9c5cdb879dd705ed86da5972773ac/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbe7d9e3ffd9c5cdb879dd705ed86da5972773ac/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dbe7d9e3ffd9c5cdb879dd705ed86da5972773ac", "patch": "@@ -1,3 +1,10 @@\n+2014-05-28  Radovan Obradovic  <robradovic@mips.com>\n+            Tom de Vries  <tom@codesourcery.com>\n+\n+\t* doc/invoke.texi (@item Optimization Options): Add -fuse-caller-save to\n+\tgccoptlist.\n+\t(@item -fuse-caller-save): New item.\n+\n 2014-05-28  Radovan Obradovic  <robradovic@mips.com>\n             Tom de Vries  <tom@codesourcery.com>\n "}, {"sha": "7f13779369828c4a46dfef815f897d97e3fca4e1", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbe7d9e3ffd9c5cdb879dd705ed86da5972773ac/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbe7d9e3ffd9c5cdb879dd705ed86da5972773ac/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=dbe7d9e3ffd9c5cdb879dd705ed86da5972773ac", "patch": "@@ -429,8 +429,8 @@ Objective-C and Objective-C++ Dialects}.\n -ftree-vectorize -ftree-vrp @gol\n -funit-at-a-time -funroll-all-loops -funroll-loops @gol\n -funsafe-loop-optimizations -funsafe-math-optimizations -funswitch-loops @gol\n--fvariable-expansion-in-unroller -fvect-cost-model -fvpt -fweb @gol\n--fwhole-program -fwpa -fuse-ld=@var{linker} -fuse-linker-plugin @gol\n+-fuse-caller-save -fvariable-expansion-in-unroller -fvect-cost-model -fvpt @gol\n+-fweb -fwhole-program -fwpa -fuse-ld=@var{linker} -fuse-linker-plugin @gol\n --param @var{name}=@var{value}\n -O  -O0  -O1  -O2  -O3  -Os -Ofast -Og}\n \n@@ -7741,6 +7741,14 @@ and then tries to find ways to combine them.\n \n Enabled by default at @option{-O1} and higher.\n \n+@item -fuse-caller-save\n+Use caller save registers for allocation if those registers are not used by\n+any called function.  In that case it is not necessary to save and restore\n+them around calls.  This is only possible if called functions are part of\n+same compilation unit as current function and they are compiled before it.\n+\n+Enabled at levels @option{-O2}, @option{-O3}, @option{-Os}.\n+\n @item -fconserve-stack\n @opindex fconserve-stack\n Attempt to minimize stack usage.  The compiler attempts to use less"}]}