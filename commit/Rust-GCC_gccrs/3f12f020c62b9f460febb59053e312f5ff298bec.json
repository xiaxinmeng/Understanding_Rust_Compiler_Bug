{"sha": "3f12f020c62b9f460febb59053e312f5ff298bec", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2YxMmYwMjBjNjJiOWY0NjBmZWJiNTkwNTNlMzEyZjVmZjI5OGJlYw==", "commit": {"author": {"name": "Andreas Krebbel", "email": "krebbel@linux.vnet.ibm.com", "date": "2015-12-18T10:39:52Z"}, "committer": {"name": "Andreas Krebbel", "email": "krebbel@gcc.gnu.org", "date": "2015-12-18T10:39:52Z"}, "message": "IRA: Fix % constraint modifier handling on disabled alternatives.\n\ngcc/ChangeLog:\n\n2015-12-18  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>\n\n\t* ira.c (ira_setup_alts): Move the scan for commutative modifier\n\tto the first loop to make it work even with disabled alternatives.\n\nFrom-SVN: r231814", "tree": {"sha": "f55e864a214a00409c29569c48fe8b164b76d5bd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f55e864a214a00409c29569c48fe8b164b76d5bd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3f12f020c62b9f460febb59053e312f5ff298bec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f12f020c62b9f460febb59053e312f5ff298bec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f12f020c62b9f460febb59053e312f5ff298bec", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f12f020c62b9f460febb59053e312f5ff298bec/comments", "author": null, "committer": null, "parents": [{"sha": "10148d74d8138f12423160893b4100cf7b034896", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10148d74d8138f12423160893b4100cf7b034896", "html_url": "https://github.com/Rust-GCC/gccrs/commit/10148d74d8138f12423160893b4100cf7b034896"}], "stats": {"total": 19, "additions": 13, "deletions": 6}, "files": [{"sha": "803dbd775a62de00206c3bd7b9f3fc14360d5343", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f12f020c62b9f460febb59053e312f5ff298bec/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f12f020c62b9f460febb59053e312f5ff298bec/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3f12f020c62b9f460febb59053e312f5ff298bec", "patch": "@@ -1,3 +1,8 @@\n+2015-12-18  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>\n+\n+\t* ira.c (ira_setup_alts): Move the scan for commutative modifier\n+\tto the first loop to make it work even with disabled alternatives.\n+\n 2015-12-18  Dominik Vogt  <vogt@linux.vnet.ibm.com>\n \n \t* config/s390/s390.c (s390_init_frame_layout): Try r4 to r2 for the"}, {"sha": "9824e4a6d89f741b66ae53df0f2773f265ce227e", "filename": "gcc/ira.c", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f12f020c62b9f460febb59053e312f5ff298bec/gcc%2Fira.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f12f020c62b9f460febb59053e312f5ff298bec/gcc%2Fira.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fira.c?ref=3f12f020c62b9f460febb59053e312f5ff298bec", "patch": "@@ -1800,7 +1800,13 @@ ira_setup_alts (rtx_insn *insn, HARD_REG_SET &alts)\n \t    {\n \t      insn_constraints[nop * recog_data.n_alternatives + nalt] = p;\n \t      while (*p && *p != ',')\n-\t\tp++;\n+\t\t{\n+\t\t  /* We only support one commutative marker, the first\n+\t\t     one.  We already set commutative above.  */\n+\t\t  if (*p == '%' && commutative < 0)\n+\t\t    commutative = nop;\n+\t\t  p++;\n+\t\t}\n \t      if (*p)\n \t\tp++;\n \t    }\n@@ -1831,11 +1837,7 @@ ira_setup_alts (rtx_insn *insn, HARD_REG_SET &alts)\n \t\t    break;\n \t\t  \n \t\t  case '%':\n-\t\t    /* We only support one commutative marker, the\n-\t\t       first one.  We already set commutative\n-\t\t       above.  */\n-\t\t    if (commutative < 0)\n-\t\t      commutative = nop;\n+\t\t    /* The commutative modifier is handled above.  */\n \t\t    break;\n \n \t\t  case '0':  case '1':  case '2':  case '3':  case '4':"}]}