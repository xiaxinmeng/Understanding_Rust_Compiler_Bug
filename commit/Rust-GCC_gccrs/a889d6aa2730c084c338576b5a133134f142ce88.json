{"sha": "a889d6aa2730c084c338576b5a133134f142ce88", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTg4OWQ2YWEyNzMwYzA4NGMzMzg1NzZiNWExMzMxMzRmMTQyY2U4OA==", "commit": {"author": {"name": "Marc Glisse", "email": "marc.glisse@inria.fr", "date": "2017-06-27T09:38:28Z"}, "committer": {"name": "Marc Glisse", "email": "glisse@gcc.gnu.org", "date": "2017-06-27T09:38:28Z"}, "message": "fenv.h builtins\n\n2017-06-27  Marc Glisse  <marc.glisse@inria.fr>\n\n\t* builtin-types.def (BT_FENV_T_PTR, BT_CONST_FENV_T_PTR,\n\tBT_FEXCEPT_T_PTR, BT_CONST_FEXCEPT_T_PTR): New primitive types.\n\t(BT_FN_INT_FENV_T_PTR, BT_FN_INT_CONST_FENV_T_PTR,\n\tBT_FN_INT_FEXCEPT_T_PTR_INT, BT_FN_INT_CONST_FEXCEPT_T_PTR_INT):\n\tNew function types.\n\t* builtins.def (BUILT_IN_FECLEAREXCEPT, BUILT_IN_FEGETENV,\n\tBUILT_IN_FEGETEXCEPTFLAG, BUILT_IN_FEGETROUND,\n\tBUILT_IN_FEHOLDEXCEPT, BUILT_IN_FERAISEEXCEPT,\n\tBUILT_IN_FESETENV, BUILT_IN_FESETEXCEPTFLAG,\n\tBUILT_IN_FESETROUND, BUILT_IN_FETESTEXCEPT,\n\tBUILT_IN_FEUPDATEENV): New builtins.\n\t* tree-core.h (TI_FENV_T_PTR_TYPE, TI_CONST_FENV_T_PTR_TYPE,\n\tTI_FEXCEPT_T_PTR_TYPE, TI_CONST_FEXCEPT_T_PTR_TYPE): New entries.\n\t* tree.h (fenv_t_ptr_type_node, const_fenv_t_ptr_type_node,\n\tfexcept_t_ptr_type_node, const_fexcept_t_ptr_type_node): New\n\tmacros.\n\t(builtin_structptr_types): Adjust size.\n\t* tree.c (builtin_structptr_types): Add four entries.\n\nFrom-SVN: r249685", "tree": {"sha": "cad2c912369abd49f5993cdc87c30b138900b12d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cad2c912369abd49f5993cdc87c30b138900b12d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a889d6aa2730c084c338576b5a133134f142ce88", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a889d6aa2730c084c338576b5a133134f142ce88", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a889d6aa2730c084c338576b5a133134f142ce88", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a889d6aa2730c084c338576b5a133134f142ce88/comments", "author": {"login": "mglisse", "id": 10097863, "node_id": "MDQ6VXNlcjEwMDk3ODYz", "avatar_url": "https://avatars.githubusercontent.com/u/10097863?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mglisse", "html_url": "https://github.com/mglisse", "followers_url": "https://api.github.com/users/mglisse/followers", "following_url": "https://api.github.com/users/mglisse/following{/other_user}", "gists_url": "https://api.github.com/users/mglisse/gists{/gist_id}", "starred_url": "https://api.github.com/users/mglisse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mglisse/subscriptions", "organizations_url": "https://api.github.com/users/mglisse/orgs", "repos_url": "https://api.github.com/users/mglisse/repos", "events_url": "https://api.github.com/users/mglisse/events{/privacy}", "received_events_url": "https://api.github.com/users/mglisse/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "931fae8133c14bf6240ca3439cb6ba2af120ebfb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/931fae8133c14bf6240ca3439cb6ba2af120ebfb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/931fae8133c14bf6240ca3439cb6ba2af120ebfb"}], "stats": {"total": 62, "additions": 59, "deletions": 3}, "files": [{"sha": "3fd4629607ad76b48e4ae2441cc6ca1e0d92e27b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a889d6aa2730c084c338576b5a133134f142ce88/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a889d6aa2730c084c338576b5a133134f142ce88/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a889d6aa2730c084c338576b5a133134f142ce88", "patch": "@@ -1,3 +1,24 @@\n+2017-06-27  Marc Glisse  <marc.glisse@inria.fr>\n+\n+\t* builtin-types.def (BT_FENV_T_PTR, BT_CONST_FENV_T_PTR,\n+\tBT_FEXCEPT_T_PTR, BT_CONST_FEXCEPT_T_PTR): New primitive types.\n+\t(BT_FN_INT_FENV_T_PTR, BT_FN_INT_CONST_FENV_T_PTR,\n+\tBT_FN_INT_FEXCEPT_T_PTR_INT, BT_FN_INT_CONST_FEXCEPT_T_PTR_INT):\n+\tNew function types.\n+\t* builtins.def (BUILT_IN_FECLEAREXCEPT, BUILT_IN_FEGETENV,\n+\tBUILT_IN_FEGETEXCEPTFLAG, BUILT_IN_FEGETROUND,\n+\tBUILT_IN_FEHOLDEXCEPT, BUILT_IN_FERAISEEXCEPT,\n+\tBUILT_IN_FESETENV, BUILT_IN_FESETEXCEPTFLAG,\n+\tBUILT_IN_FESETROUND, BUILT_IN_FETESTEXCEPT,\n+\tBUILT_IN_FEUPDATEENV): New builtins.\n+\t* tree-core.h (TI_FENV_T_PTR_TYPE, TI_CONST_FENV_T_PTR_TYPE,\n+\tTI_FEXCEPT_T_PTR_TYPE, TI_CONST_FEXCEPT_T_PTR_TYPE): New entries.\n+\t* tree.h (fenv_t_ptr_type_node, const_fenv_t_ptr_type_node,\n+\tfexcept_t_ptr_type_node, const_fexcept_t_ptr_type_node): New\n+\tmacros.\n+\t(builtin_structptr_types): Adjust size.\n+\t* tree.c (builtin_structptr_types): Add four entries.\n+\n 2017-06-27  Jerome Lambourg  <lambourg@adacore.com>\n             Olivier Hainque  <hainque@adacore.com>\n "}, {"sha": "a0d7d40ac36a0778cd537f6577ed5cb5b5a49da4", "filename": "gcc/builtin-types.def", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a889d6aa2730c084c338576b5a133134f142ce88/gcc%2Fbuiltin-types.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a889d6aa2730c084c338576b5a133134f142ce88/gcc%2Fbuiltin-types.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltin-types.def?ref=a889d6aa2730c084c338576b5a133134f142ce88", "patch": "@@ -107,6 +107,10 @@ DEF_PRIMITIVE_TYPE (BT_COMPLEX_LONGDOUBLE, complex_long_double_type_node)\n DEF_PRIMITIVE_TYPE (BT_PTR, ptr_type_node)\n DEF_PRIMITIVE_TYPE (BT_FILEPTR, fileptr_type_node)\n DEF_PRIMITIVE_TYPE (BT_CONST_TM_PTR, const_tm_ptr_type_node)\n+DEF_PRIMITIVE_TYPE (BT_FENV_T_PTR, fenv_t_ptr_type_node)\n+DEF_PRIMITIVE_TYPE (BT_CONST_FENV_T_PTR, const_fenv_t_ptr_type_node)\n+DEF_PRIMITIVE_TYPE (BT_FEXCEPT_T_PTR, fexcept_t_ptr_type_node)\n+DEF_PRIMITIVE_TYPE (BT_CONST_FEXCEPT_T_PTR, const_fexcept_t_ptr_type_node)\n DEF_PRIMITIVE_TYPE (BT_CONST_PTR, const_ptr_type_node)\n DEF_PRIMITIVE_TYPE (BT_VOLATILE_PTR,\n \t\t    build_pointer_type\n@@ -298,6 +302,8 @@ DEF_FUNCTION_TYPE_1 (BT_FN_BND_CONST_PTR, BT_BND, BT_CONST_PTR)\n DEF_FUNCTION_TYPE_1 (BT_FN_CONST_PTR_BND, BT_CONST_PTR, BT_BND)\n DEF_FUNCTION_TYPE_1 (BT_FN_UINT16_UINT32, BT_UINT16, BT_UINT32)\n DEF_FUNCTION_TYPE_1 (BT_FN_UINT32_UINT16, BT_UINT32, BT_UINT16)\n+DEF_FUNCTION_TYPE_1 (BT_FN_INT_FENV_T_PTR, BT_INT, BT_FENV_T_PTR)\n+DEF_FUNCTION_TYPE_1 (BT_FN_INT_CONST_FENV_T_PTR, BT_INT, BT_CONST_FENV_T_PTR)\n \n DEF_POINTER_TYPE (BT_PTR_FN_VOID_PTR, BT_FN_VOID_PTR)\n \n@@ -471,6 +477,10 @@ DEF_FUNCTION_TYPE_2 (BT_FN_CONST_PTR_CONST_PTR_CONST_PTR, BT_CONST_PTR, BT_CONST\n DEF_FUNCTION_TYPE_2 (BT_FN_BND_CONST_PTR_SIZE, BT_BND, BT_CONST_PTR, BT_SIZE)\n DEF_FUNCTION_TYPE_2 (BT_FN_UINT32_UINT64_PTR,\n \t\t     BT_UINT32, BT_UINT64, BT_PTR)\n+DEF_FUNCTION_TYPE_2 (BT_FN_INT_FEXCEPT_T_PTR_INT, BT_INT, BT_FEXCEPT_T_PTR,\n+\t\t     BT_INT)\n+DEF_FUNCTION_TYPE_2 (BT_FN_INT_CONST_FEXCEPT_T_PTR_INT, BT_INT,\n+\t\t     BT_CONST_FEXCEPT_T_PTR, BT_INT)\n \n DEF_POINTER_TYPE (BT_PTR_FN_VOID_PTR_PTR, BT_FN_VOID_PTR_PTR)\n "}, {"sha": "1c1efceea217339643aea1ec4f4e0e2423c90da2", "filename": "gcc/builtins.def", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a889d6aa2730c084c338576b5a133134f142ce88/gcc%2Fbuiltins.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a889d6aa2730c084c338576b5a133134f142ce88/gcc%2Fbuiltins.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.def?ref=a889d6aa2730c084c338576b5a133134f142ce88", "patch": "@@ -365,6 +365,17 @@ DEF_GCC_BUILTIN        (BUILT_IN_FABSD128, \"fabsd128\", BT_FN_DFLOAT128_DFLOAT128\n DEF_C99_BUILTIN        (BUILT_IN_FDIM, \"fdim\", BT_FN_DOUBLE_DOUBLE_DOUBLE, ATTR_MATHFN_FPROUNDING_ERRNO)\n DEF_C99_BUILTIN        (BUILT_IN_FDIMF, \"fdimf\", BT_FN_FLOAT_FLOAT_FLOAT, ATTR_MATHFN_FPROUNDING_ERRNO)\n DEF_C99_BUILTIN        (BUILT_IN_FDIML, \"fdiml\", BT_FN_LONGDOUBLE_LONGDOUBLE_LONGDOUBLE, ATTR_MATHFN_FPROUNDING_ERRNO)\n+DEF_C99_BUILTIN        (BUILT_IN_FECLEAREXCEPT, \"feclearexcept\", BT_FN_INT_INT, ATTR_NOTHROW_LEAF_LIST)\n+DEF_C99_BUILTIN        (BUILT_IN_FEGETENV, \"fegetenv\", BT_FN_INT_FENV_T_PTR, ATTR_NOTHROW_LEAF_LIST)\n+DEF_C99_BUILTIN        (BUILT_IN_FEGETEXCEPTFLAG, \"fegetexceptflag\", BT_FN_INT_FEXCEPT_T_PTR_INT, ATTR_NOTHROW_LEAF_LIST)\n+DEF_C99_BUILTIN        (BUILT_IN_FEGETROUND, \"fegetround\", BT_FN_INT, ATTR_PURE_NOTHROW_LEAF_LIST)\n+DEF_C99_BUILTIN        (BUILT_IN_FEHOLDEXCEPT, \"feholdexcept\", BT_FN_INT_FENV_T_PTR, ATTR_NOTHROW_LEAF_LIST)\n+DEF_C99_BUILTIN        (BUILT_IN_FERAISEEXCEPT, \"feraiseexcept\", BT_FN_INT_INT, ATTR_NULL)\n+DEF_C99_BUILTIN        (BUILT_IN_FESETENV, \"fesetenv\", BT_FN_INT_CONST_FENV_T_PTR, ATTR_NOTHROW_LEAF_LIST)\n+DEF_C99_BUILTIN        (BUILT_IN_FESETEXCEPTFLAG, \"fesetexceptflag\", BT_FN_INT_CONST_FEXCEPT_T_PTR_INT, ATTR_NULL)\n+DEF_C99_BUILTIN        (BUILT_IN_FESETROUND, \"fesetround\", BT_FN_INT_INT, ATTR_NOTHROW_LEAF_LIST)\n+DEF_C99_BUILTIN        (BUILT_IN_FETESTEXCEPT, \"fetestexcept\", BT_FN_INT_INT, ATTR_NOTHROW_LEAF_LIST)\n+DEF_C99_BUILTIN        (BUILT_IN_FEUPDATEENV, \"feupdateenv\", BT_FN_INT_CONST_FENV_T_PTR, ATTR_NULL)\n DEF_LIB_BUILTIN        (BUILT_IN_FLOOR, \"floor\", BT_FN_DOUBLE_DOUBLE, ATTR_CONST_NOTHROW_LEAF_LIST)\n DEF_C99_C90RES_BUILTIN (BUILT_IN_FLOORF, \"floorf\", BT_FN_FLOAT_FLOAT, ATTR_CONST_NOTHROW_LEAF_LIST)\n DEF_C99_C90RES_BUILTIN (BUILT_IN_FLOORL, \"floorl\", BT_FN_LONGDOUBLE_LONGDOUBLE, ATTR_CONST_NOTHROW_LEAF_LIST)"}, {"sha": "278d0c9b8f887f4242e8230f7934d18e6f8db0e8", "filename": "gcc/tree-core.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a889d6aa2730c084c338576b5a133134f142ce88/gcc%2Ftree-core.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a889d6aa2730c084c338576b5a133134f142ce88/gcc%2Ftree-core.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-core.h?ref=a889d6aa2730c084c338576b5a133134f142ce88", "patch": "@@ -627,6 +627,10 @@ enum tree_index {\n   TI_BOOLEAN_TYPE,\n   TI_FILEPTR_TYPE,\n   TI_CONST_TM_PTR_TYPE,\n+  TI_FENV_T_PTR_TYPE,\n+  TI_CONST_FENV_T_PTR_TYPE,\n+  TI_FEXCEPT_T_PTR_TYPE,\n+  TI_CONST_FEXCEPT_T_PTR_TYPE,\n   TI_POINTER_SIZED_TYPE,\n \n   TI_POINTER_BOUNDS_TYPE,"}, {"sha": "ca28afad0f2f048b5d5fc856bf41e923c078167f", "filename": "gcc/tree.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a889d6aa2730c084c338576b5a133134f142ce88/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a889d6aa2730c084c338576b5a133134f142ce88/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=a889d6aa2730c084c338576b5a133134f142ce88", "patch": "@@ -14552,10 +14552,14 @@ get_nonnull_args (const_tree fntype)\n    real declaration.\n \n    Keep the size up to date in tree.h !  */\n-const builtin_structptr_type builtin_structptr_types[2] = \n+const builtin_structptr_type builtin_structptr_types[6] = \n {\n   { fileptr_type_node, ptr_type_node, \"FILE\" },\n-  { const_tm_ptr_type_node, const_ptr_type_node, \"tm\" }\n+  { const_tm_ptr_type_node, const_ptr_type_node, \"tm\" },\n+  { fenv_t_ptr_type_node, ptr_type_node, \"fenv_t\" },\n+  { const_fenv_t_ptr_type_node, const_ptr_type_node, \"fenv_t\" },\n+  { fexcept_t_ptr_type_node, ptr_type_node, \"fexcept_t\" },\n+  { const_fexcept_t_ptr_type_node, const_ptr_type_node, \"fexcept_t\" }\n };\n \n #if CHECKING_P"}, {"sha": "91cf253dee5a9cedb2f7481bd6978b2c8ac97792", "filename": "gcc/tree.h", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a889d6aa2730c084c338576b5a133134f142ce88/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a889d6aa2730c084c338576b5a133134f142ce88/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=a889d6aa2730c084c338576b5a133134f142ce88", "patch": "@@ -3725,6 +3725,12 @@ id_equal (const char *str, const_tree id)\n #define fileptr_type_node\t\tglobal_trees[TI_FILEPTR_TYPE]\n /* The C type `const struct tm *'.  */\n #define const_tm_ptr_type_node\t\tglobal_trees[TI_CONST_TM_PTR_TYPE]\n+/* The C type `fenv_t *'.  */\n+#define fenv_t_ptr_type_node\t\tglobal_trees[TI_FENV_T_PTR_TYPE]\n+#define const_fenv_t_ptr_type_node\tglobal_trees[TI_CONST_FENV_T_PTR_TYPE]\n+/* The C type `fexcept_t *'.  */\n+#define fexcept_t_ptr_type_node\t\tglobal_trees[TI_FEXCEPT_T_PTR_TYPE]\n+#define const_fexcept_t_ptr_type_node\tglobal_trees[TI_CONST_FEXCEPT_T_PTR_TYPE]\n #define pointer_sized_int_node\t\tglobal_trees[TI_POINTER_SIZED_TYPE]\n \n #define boolean_type_node\t\tglobal_trees[TI_BOOLEAN_TYPE]\n@@ -5531,5 +5537,5 @@ struct builtin_structptr_type\n   tree& base;\n   const char *str;\n };\n-extern const builtin_structptr_type builtin_structptr_types[2];\n+extern const builtin_structptr_type builtin_structptr_types[6];\n #endif  /* GCC_TREE_H  */"}]}