{"sha": "b853346e2c2ea98e35c6043712303a5fc8b87dd8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yjg1MzM0NmUyYzJlYTk4ZTM1YzYwNDM3MTIzMDNhNWZjOGI4N2RkOA==", "commit": {"author": {"name": "Jan Beulich", "email": "jbeulich@suse.com", "date": "2018-01-03T10:42:08Z"}, "committer": {"name": "Jan Beulich", "email": "jbeulich@gcc.gnu.org", "date": "2018-01-03T10:42:08Z"}, "message": "x86: don't use AVX512BW vmovdqu variants without -mavx512bw\n\nSimply mirror the MODE_XI logic of handling unaligned operands in\nmov<mode>_internal into MODE_TI / MODE_OI handling.\n\ngcc/\n2018-01-03  Jan Beulich  <jbeulich@suse.com>\n\n\t* sse.md (mov<mode>_internal): Tighten condition for when to use\n\tvmovdqu<ssescalarsize> for TI and OI modes.\n\ngcc/testsuite/\n2018-01-03  Jan Beulich  <jbeulich@suse.com>\n\n\t* gcc.target/i386/avx512vl-no-vmovdqu8.c,\n\tgcc.target/i386/avx512vl-no-vmovdqu16.c: New.\n\nFrom-SVN: r256170", "tree": {"sha": "26c96624b0d0ddcb91294085689f0404c1ebfba1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/26c96624b0d0ddcb91294085689f0404c1ebfba1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b853346e2c2ea98e35c6043712303a5fc8b87dd8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b853346e2c2ea98e35c6043712303a5fc8b87dd8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b853346e2c2ea98e35c6043712303a5fc8b87dd8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b853346e2c2ea98e35c6043712303a5fc8b87dd8/comments", "author": {"login": "jbeulich", "id": 5610135, "node_id": "MDQ6VXNlcjU2MTAxMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/5610135?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbeulich", "html_url": "https://github.com/jbeulich", "followers_url": "https://api.github.com/users/jbeulich/followers", "following_url": "https://api.github.com/users/jbeulich/following{/other_user}", "gists_url": "https://api.github.com/users/jbeulich/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbeulich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbeulich/subscriptions", "organizations_url": "https://api.github.com/users/jbeulich/orgs", "repos_url": "https://api.github.com/users/jbeulich/repos", "events_url": "https://api.github.com/users/jbeulich/events{/privacy}", "received_events_url": "https://api.github.com/users/jbeulich/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "85ec4feb11167c9e4489361bf2399a20afbe52c8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85ec4feb11167c9e4489361bf2399a20afbe52c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/85ec4feb11167c9e4489361bf2399a20afbe52c8"}], "stats": {"total": 68, "additions": 66, "deletions": 2}, "files": [{"sha": "d9c4c6adf9789c31a1896e6527fe21d1af8568d5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b853346e2c2ea98e35c6043712303a5fc8b87dd8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b853346e2c2ea98e35c6043712303a5fc8b87dd8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b853346e2c2ea98e35c6043712303a5fc8b87dd8", "patch": "@@ -1,3 +1,8 @@\n+2018-01-03  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* sse.md (mov<mode>_internal): Tighten condition for when to use\n+\tvmovdqu<ssescalarsize> for TI and OI modes.\n+\n 2018-01-03  Jakub Jelinek  <jakub@redhat.com>\n \n \tUpdate copyright years."}, {"sha": "b0ba91e6b84d8ea372206fadc6bdb75f5f9ac7df", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b853346e2c2ea98e35c6043712303a5fc8b87dd8/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b853346e2c2ea98e35c6043712303a5fc8b87dd8/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=b853346e2c2ea98e35c6043712303a5fc8b87dd8", "patch": "@@ -1021,8 +1021,14 @@\n \tcase MODE_TI:\n \t  if (misaligned_operand (operands[0], <MODE>mode)\n \t      || misaligned_operand (operands[1], <MODE>mode))\n-\t    return TARGET_AVX512VL ? \"vmovdqu<ssescalarsize>\\t{%1, %0|%0, %1}\"\n-\t\t\t\t   : \"%vmovdqu\\t{%1, %0|%0, %1}\";\n+\t    return TARGET_AVX512VL\n+\t\t   && (<MODE>mode == V4SImode\n+\t\t       || <MODE>mode == V2DImode\n+\t\t       || <MODE>mode == V8SImode\n+\t\t       || <MODE>mode == V4DImode\n+\t\t       || TARGET_AVX512BW)\n+\t\t   ? \"vmovdqu<ssescalarsize>\\t{%1, %0|%0, %1}\"\n+\t\t   : \"%vmovdqu\\t{%1, %0|%0, %1}\";\n \t  else\n \t    return TARGET_AVX512VL ? \"vmovdqa64\\t{%1, %0|%0, %1}\"\n \t\t\t\t   : \"%vmovdqa\\t{%1, %0|%0, %1}\";"}, {"sha": "2c179b149640239dc594144f38d8ec37a025988e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b853346e2c2ea98e35c6043712303a5fc8b87dd8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b853346e2c2ea98e35c6043712303a5fc8b87dd8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b853346e2c2ea98e35c6043712303a5fc8b87dd8", "patch": "@@ -1,3 +1,8 @@\n+2018-01-03  Jan Beulich  <jbeulich@suse.com>\n+\n+\t* gcc.target/i386/avx512vl-no-vmovdqu8.c,\n+\tgcc.target/i386/avx512vl-no-vmovdqu16.c: New.\n+\n 2018-01-03  Jakub Jelinek  <jakub@redhat.com>\n \n \tUpdate copyright years."}, {"sha": "29b3141ad9bcbf9510b0b02cc44ff020e2b3d48c", "filename": "gcc/testsuite/gcc.target/i386/avx512vl-no-vmovdqu16.c", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b853346e2c2ea98e35c6043712303a5fc8b87dd8/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-no-vmovdqu16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b853346e2c2ea98e35c6043712303a5fc8b87dd8/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-no-vmovdqu16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-no-vmovdqu16.c?ref=b853346e2c2ea98e35c6043712303a5fc8b87dd8", "patch": "@@ -0,0 +1,24 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mavx512vl -mno-avx512bw\" } */\n+\n+typedef unsigned int __attribute__((mode(HI), vector_size(16))) v8hi_t;\n+typedef unsigned int __attribute__((mode(HI), vector_size(32))) v16hi_t;\n+\n+struct s8hi {\n+\tint i;\n+\tv8hi_t __attribute__((packed)) v;\n+};\n+struct s16hi {\n+\tint i;\n+\tv16hi_t __attribute__((packed)) v;\n+};\n+\n+void f8hi(struct s8hi*p1, const struct s8hi*p2) {\n+\tp1->v += p2->v;\n+}\n+\n+void f16hi(struct s16hi*p1, const struct s16hi*p2) {\n+\tp1->v += p2->v;\n+}\n+\n+/* { dg-final { scan-assembler-not \"^\\[ \\t\\]*vmovdq\\[au\\](8|16)\" } } */"}, {"sha": "f48d7737ea892cd04a75973ab62548bdfbc23d8e", "filename": "gcc/testsuite/gcc.target/i386/avx512vl-no-vmovdqu8.c", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b853346e2c2ea98e35c6043712303a5fc8b87dd8/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-no-vmovdqu8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b853346e2c2ea98e35c6043712303a5fc8b87dd8/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-no-vmovdqu8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-no-vmovdqu8.c?ref=b853346e2c2ea98e35c6043712303a5fc8b87dd8", "patch": "@@ -0,0 +1,24 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mavx512vl -mno-avx512bw\" } */\n+\n+typedef unsigned int __attribute__((mode(QI), vector_size(16))) v16qi_t;\n+typedef unsigned int __attribute__((mode(QI), vector_size(32))) v32qi_t;\n+\n+struct s16qi {\n+\tint i;\n+\tv16qi_t __attribute__((packed)) v;\n+};\n+struct s32qi {\n+\tint i;\n+\tv32qi_t __attribute__((packed)) v;\n+};\n+\n+void f16qi(struct s16qi*p1, const struct s16qi*p2) {\n+\tp1->v += p2->v;\n+}\n+\n+void f32qi(struct s32qi*p1, const struct s32qi*p2) {\n+\tp1->v += p2->v;\n+}\n+\n+/* { dg-final { scan-assembler-not \"^\\[ \\t\\]*vmovdq\\[au\\](8|16)\" } } */"}]}