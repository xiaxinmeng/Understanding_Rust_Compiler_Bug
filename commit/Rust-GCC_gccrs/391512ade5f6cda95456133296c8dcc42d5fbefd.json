{"sha": "391512ade5f6cda95456133296c8dcc42d5fbefd", "node_id": "C_kwDOANBUbNoAKDM5MTUxMmFkZTVmNmNkYTk1NDU2MTMzMjk2YzhkY2M0MmQ1ZmJlZmQ", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2022-02-08T21:37:08Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2022-02-09T02:27:12Z"}, "message": "analyzer: fix hashing of bit_range_region::key_t [PR104452]\n\ngcc/analyzer/ChangeLog:\n\tPR analyzer/104452\n\t* region-model.cc (selftest::test_bit_range_regions): New.\n\t(selftest::analyzer_region_model_cc_tests): Call it.\n\t* region.h (bit_range_region::key_t::hash): Fix hashing of m_bits\n\tto avoid using uninitialized data.\n\ngcc/testsuite/ChangeLog:\n\tPR analyzer/104452\n\t* gcc.dg/analyzer/pr104452.c: New test.\n\nSigned-off-by: David Malcolm <dmalcolm@redhat.com>", "tree": {"sha": "64514e2a5ac45d9b7554fd992bc44edd263668de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/64514e2a5ac45d9b7554fd992bc44edd263668de"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/391512ade5f6cda95456133296c8dcc42d5fbefd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/391512ade5f6cda95456133296c8dcc42d5fbefd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/391512ade5f6cda95456133296c8dcc42d5fbefd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/391512ade5f6cda95456133296c8dcc42d5fbefd/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "53cac72cf0821217f99d0640ba72cc2999ec7dc0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53cac72cf0821217f99d0640ba72cc2999ec7dc0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/53cac72cf0821217f99d0640ba72cc2999ec7dc0"}], "stats": {"total": 31, "additions": 30, "deletions": 1}, "files": [{"sha": "f8f1976925805c6674698fdb99f1370aa189dfcf", "filename": "gcc/analyzer/region-model.cc", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/391512ade5f6cda95456133296c8dcc42d5fbefd/gcc%2Fanalyzer%2Fregion-model.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/391512ade5f6cda95456133296c8dcc42d5fbefd/gcc%2Fanalyzer%2Fregion-model.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fregion-model.cc?ref=391512ade5f6cda95456133296c8dcc42d5fbefd", "patch": "@@ -4710,6 +4710,23 @@ test_descendent_of_p ()\n   ASSERT_TRUE (cast_reg->descendent_of_p (x_reg));\n }\n \n+/* Verify that bit_range_region works as expected.  */\n+\n+static void\n+test_bit_range_regions ()\n+{\n+  tree x = build_global_decl (\"x\", integer_type_node);\n+  region_model_manager mgr;\n+  const region *x_reg = mgr.get_region_for_global (x);\n+  const region *byte0\n+    = mgr.get_bit_range (x_reg, char_type_node, bit_range (0, 8));\n+  const region *byte1\n+    = mgr.get_bit_range (x_reg, char_type_node, bit_range (8, 8));\n+  ASSERT_TRUE (byte0->descendent_of_p (x_reg));\n+  ASSERT_TRUE (byte1->descendent_of_p (x_reg));\n+  ASSERT_NE (byte0, byte1);\n+}\n+\n /* Verify that simple assignments work as expected.  */\n \n static void\n@@ -6009,6 +6026,7 @@ analyzer_region_model_cc_tests ()\n   test_binop_svalue_folding ();\n   test_sub_svalue_folding ();\n   test_descendent_of_p ();\n+  test_bit_range_regions ();\n   test_assignment ();\n   test_compound_assignment ();\n   test_stack_frames ();"}, {"sha": "531121752669a0b0f604688680474029a5fdc0cc", "filename": "gcc/analyzer/region.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/391512ade5f6cda95456133296c8dcc42d5fbefd/gcc%2Fanalyzer%2Fregion.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/391512ade5f6cda95456133296c8dcc42d5fbefd/gcc%2Fanalyzer%2Fregion.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fregion.h?ref=391512ade5f6cda95456133296c8dcc42d5fbefd", "patch": "@@ -1156,7 +1156,8 @@ class bit_range_region : public region\n       inchash::hash hstate;\n       hstate.add_ptr (m_parent);\n       hstate.add_ptr (m_type);\n-      hstate.add (&m_bits, sizeof (m_bits));\n+      hstate.add_wide_int (m_bits.m_start_bit_offset);\n+      hstate.add_wide_int (m_bits.m_size_in_bits);\n       return hstate.end ();\n     }\n "}, {"sha": "85eb82defbfddf0df6c5be9ed15ed082d16c0960", "filename": "gcc/testsuite/gcc.dg/analyzer/pr104452.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/391512ade5f6cda95456133296c8dcc42d5fbefd/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fpr104452.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/391512ade5f6cda95456133296c8dcc42d5fbefd/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fpr104452.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fpr104452.c?ref=391512ade5f6cda95456133296c8dcc42d5fbefd", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-additional-options \"-O\" } */\n+\n+void\n+test_1 (void)\n+{\n+  int __attribute__((__vector_size__ (16))) x;\n+  for (unsigned i = 0; i < 4;)\n+    if (x[i]) /* { dg-warning \"use of uninitialized value\" } */\n+      __builtin_abort ();\n+}"}]}