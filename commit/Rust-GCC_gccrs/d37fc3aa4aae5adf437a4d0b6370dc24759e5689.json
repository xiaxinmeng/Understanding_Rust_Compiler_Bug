{"sha": "d37fc3aa4aae5adf437a4d0b6370dc24759e5689", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDM3ZmMzYWE0YWFlNWFkZjQzN2E0ZDBiNjM3MGRjMjQ3NTllNTY4OQ==", "commit": {"author": {"name": "Aditya Kumar", "email": "aditya.k7@samsung.com", "date": "2015-10-21T18:53:17Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2015-10-21T18:53:17Z"}, "message": "Refactoring sese.h and graphite-poly.h\n\nRename scop->region to scop->scop_info\nRemoved conversion constructors for sese_l and dr_info.\nRemoved macros.\n\nNo functional changed intended. Passes regtest and bootstrap.\n\ngcc/ChangeLog:\n\n2015-19-10  Aditya Kumar  <aditya.k7@samsung.com>\n        * graphite-poly.h (struct dr_info): Removed conversion constructor.\n        (struct scop): Renamed scop::region to scop::scop_info\n        (scop_set_region): Same.\n        (SCOP_REGION): Removed\n        (SCOP_CONTEXT): Removed.\n        (POLY_SCOP_P): Removed.\n        * graphite-isl-ast-to-gimple.c (translate_isl_ast_node_user):\n        Rename scop->region to scop->scop_info.\n        (add_parameters_to_ivs_params): Same.\n        (graphite_regenerate_ast_isl): Same.\n        * graphite-poly.c (new_scop): Same.\n        (free_scop): Same.\n        (print_scop_params): Same.\n        * graphite-scop-detection.c (scop_detection::remove_subscops): Same.\n        (scop_detection::remove_intersecting_scops): Use pointer to sese_l.\n        (dot_all_scops_1): Rename scop->region to scop->scop_info.\n        (scop_detection::nb_pbbs_in_loops): Same.\n        (find_scop_parameters): Same.\n        (try_generate_gimple_bb): Same.\n        (gather_bbs::before_dom_children): Same.\n        (gather_bbs::after_dom_children): Same.\n        (build_scops): Same.\n        * graphite-sese-to-poly.c (build_scop_scattering): Same.\n        (extract_affine_chrec): Same.\n        (extract_affine): Same.\n        (set_scop_parameter_dim): Same.\n        (build_loop_iteration_domains): Same.\n        (create_pw_aff_from_tree): Same.\n        (add_param_constraints): Same.\n        (build_scop_iteration_domain): Same.\n        (build_scop_drs): Same.\n        (analyze_drs_in_stmts): Same.\n        (insert_out_of_ssa_copy_on_edge): Same.\n        (rewrite_close_phi_out_of_ssa):Same.\n        (rewrite_reductions_out_of_ssa):Same.\n        (handle_scalar_deps_crossing_scop_limits):Same.\n        (rewrite_cross_bb_scalar_deps):Same.\n        (rewrite_cross_bb_scalar_deps_out_of_ssa):Same.\n        (build_poly_scop):Same.\n        (build_alias_set): Use pointer to dr_info.\n        * graphite.c (print_graphite_scop_statistics):\n        (graphite_transform_loops):\n        * sese.h (struct sese_l): Remove conversion constructor.\n\nFrom-SVN: r229135", "tree": {"sha": "2a6ac8f76533dbd71d00df9defb594532599932a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2a6ac8f76533dbd71d00df9defb594532599932a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d37fc3aa4aae5adf437a4d0b6370dc24759e5689", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d37fc3aa4aae5adf437a4d0b6370dc24759e5689", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d37fc3aa4aae5adf437a4d0b6370dc24759e5689", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d37fc3aa4aae5adf437a4d0b6370dc24759e5689/comments", "author": null, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3d27a3235ad17658334b6ffc8abb0bb0dbd49f47", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d27a3235ad17658334b6ffc8abb0bb0dbd49f47", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d27a3235ad17658334b6ffc8abb0bb0dbd49f47"}], "stats": {"total": 165, "additions": 99, "deletions": 66}, "files": [{"sha": "cfd6a13e9e7b7b12db46533568e584ebd4af27e5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d37fc3aa4aae5adf437a4d0b6370dc24759e5689/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d37fc3aa4aae5adf437a4d0b6370dc24759e5689/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d37fc3aa4aae5adf437a4d0b6370dc24759e5689", "patch": "@@ -1,3 +1,49 @@\n+2015-10-21  Aditya Kumar  <aditya.k7@samsung.com>\n+\n+\t* graphite-poly.h (struct dr_info): Removed conversion constructor.\n+\t(struct scop): Renamed scop::region to scop::scop_info\n+\t(scop_set_region): Same.\n+\t(SCOP_REGION): Removed\n+\t(SCOP_CONTEXT): Removed.\n+\t(POLY_SCOP_P): Removed.\n+\t* graphite-isl-ast-to-gimple.c (translate_isl_ast_node_user):\n+\tRename scop->region to scop->scop_info.\n+\t(add_parameters_to_ivs_params): Same.\n+\t(graphite_regenerate_ast_isl): Same.\n+\t* graphite-poly.c (new_scop): Same.\n+\t(free_scop): Same.\n+\t(print_scop_params): Same.\n+\t* graphite-scop-detection.c (scop_detection::remove_subscops): Same.\n+\t(scop_detection::remove_intersecting_scops): Use pointer to sese_l.\n+\t(dot_all_scops_1): Rename scop->region to scop->scop_info.\n+\t(scop_detection::nb_pbbs_in_loops): Same.\n+\t(find_scop_parameters): Same.\n+\t(try_generate_gimple_bb): Same.\n+\t(gather_bbs::before_dom_children): Same.\n+\t(gather_bbs::after_dom_children): Same.\n+\t(build_scops): Same.\n+\t* graphite-sese-to-poly.c (build_scop_scattering): Same.\n+\t(extract_affine_chrec): Same.\n+\t(extract_affine): Same.\n+\t(set_scop_parameter_dim): Same.\n+\t(build_loop_iteration_domains): Same.\n+\t(create_pw_aff_from_tree): Same.\n+\t(add_param_constraints): Same.\n+\t(build_scop_iteration_domain): Same.\n+\t(build_scop_drs): Same.\n+\t(analyze_drs_in_stmts): Same.\n+\t(insert_out_of_ssa_copy_on_edge): Same.\n+\t(rewrite_close_phi_out_of_ssa):Same.\n+\t(rewrite_reductions_out_of_ssa):Same.\n+\t(handle_scalar_deps_crossing_scop_limits):Same.\n+\t(rewrite_cross_bb_scalar_deps):Same.\n+\t(rewrite_cross_bb_scalar_deps_out_of_ssa):Same.\n+\t(build_poly_scop):Same.\n+\t(build_alias_set): Use pointer to dr_info.\n+\t* graphite.c (print_graphite_scop_statistics):\n+\t(graphite_transform_loops):\n+\t* sese.h (struct sese_l): Remove conversion constructor.\n+\n 2015-10-11  Jan Hubicka  <hubicka@ucw.cz>\n \n \tPR middle-end/67966"}, {"sha": "7f99bce8c1f9f4573daeaeb99147efdca0410353", "filename": "gcc/graphite-isl-ast-to-gimple.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d37fc3aa4aae5adf437a4d0b6370dc24759e5689/gcc%2Fgraphite-isl-ast-to-gimple.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d37fc3aa4aae5adf437a4d0b6370dc24759e5689/gcc%2Fgraphite-isl-ast-to-gimple.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-isl-ast-to-gimple.c?ref=d37fc3aa4aae5adf437a4d0b6370dc24759e5689", "patch": "@@ -786,10 +786,10 @@ translate_isl_ast_node_user (__isl_keep isl_ast_node *node,\n   iv_map.create (nb_loops);\n   iv_map.safe_grow_cleared (nb_loops);\n \n-  build_iv_mapping (iv_map, gbb, user_expr, ip, pbb->scop->region->region);\n+  build_iv_mapping (iv_map, gbb, user_expr, ip, pbb->scop->scop_info->region);\n   isl_ast_expr_free (user_expr);\n   next_e = copy_bb_and_scalar_dependences (GBB_BB (gbb),\n-\t\t\t\t\t   pbb->scop->region, next_e,\n+\t\t\t\t\t   pbb->scop->scop_info, next_e,\n \t\t\t\t\t   iv_map,\n \t\t\t\t\t   &graphite_regenerate_error);\n   iv_map.release ();\n@@ -909,7 +909,7 @@ print_isl_ast_node (FILE *file, __isl_keep isl_ast_node *node,\n static void\n add_parameters_to_ivs_params (scop_p scop, ivs_params &ip)\n {\n-  sese_info_p region = scop->region;\n+  sese_info_p region = scop->scop_info;\n   unsigned nb_parameters = isl_set_dim (scop->param_context, isl_dim_param);\n   gcc_assert (nb_parameters == SESE_PARAMS (region).length ());\n   unsigned i;\n@@ -1144,7 +1144,7 @@ bool\n graphite_regenerate_ast_isl (scop_p scop)\n {\n   loop_p context_loop;\n-  sese_info_p region = scop->region;\n+  sese_info_p region = scop->scop_info;\n   ifsese if_region = NULL;\n   isl_ast_node *root_node;\n   ivs_params ip;"}, {"sha": "eb76f05f5d53044c09f5f4bbb879e026449cbecf", "filename": "gcc/graphite-poly.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d37fc3aa4aae5adf437a4d0b6370dc24759e5689/gcc%2Fgraphite-poly.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d37fc3aa4aae5adf437a4d0b6370dc24759e5689/gcc%2Fgraphite-poly.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-poly.c?ref=d37fc3aa4aae5adf437a4d0b6370dc24759e5689", "patch": "@@ -306,7 +306,7 @@ new_scop (edge entry, edge exit)\n   scop->may_waw_no_source = NULL;\n   scop_set_region (scop, region);\n   scop->pbbs.create (3);\n-  POLY_SCOP_P (scop) = false;\n+  scop->poly_scop_p = false;\n   scop->drs.create (3);\n \n   return scop;\n@@ -321,7 +321,7 @@ free_scop (scop_p scop)\n   poly_bb_p pbb;\n \n   remove_gbbs_in_scop (scop);\n-  free_sese_info (SCOP_REGION (scop));\n+  free_sese_info (scop->scop_info);\n \n   FOR_EACH_VEC_ELT (scop->pbbs, i, pbb)\n     free_poly_bb (pbb);\n@@ -475,13 +475,13 @@ print_pbb (FILE *file, poly_bb_p pbb)\n void\n print_scop_params (FILE *file, scop_p scop)\n {\n-  if (SESE_PARAMS (SCOP_REGION (scop)).is_empty ())\n+  if (SESE_PARAMS (scop->scop_info).is_empty ())\n     return;\n \n   int i;\n   tree t;\n   fprintf (file, \"parameters (\");\n-  FOR_EACH_VEC_ELT (SESE_PARAMS (SCOP_REGION (scop)), i, t)\n+  FOR_EACH_VEC_ELT (SESE_PARAMS (scop->scop_info), i, t)\n     {\n       print_generic_expr (file, t, 0);\n       fprintf (file, \", \");"}, {"sha": "721e91420885b4c1af3ba1011a0b1c56343767fb", "filename": "gcc/graphite-poly.h", "status": "modified", "additions": 2, "deletions": 12, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d37fc3aa4aae5adf437a4d0b6370dc24759e5689/gcc%2Fgraphite-poly.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d37fc3aa4aae5adf437a4d0b6370dc24759e5689/gcc%2Fgraphite-poly.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-poly.h?ref=d37fc3aa4aae5adf437a4d0b6370dc24759e5689", "patch": "@@ -387,12 +387,6 @@ struct dr_info\n   dr_info (data_reference_p dr, int alias_set, poly_bb_p pbb)\n     : dr (dr), alias_set (alias_set), pbb (pbb) {}\n \n-  /* A simpler constructor to be able to push these objects in a vec.  */\n-  dr_info (int i) : dr (NULL), alias_set (-1), pbb (NULL)\n-  {\n-    gcc_assert (i == 0);\n-  }\n-\n   /* Assignment operator, to be able to iterate over a vec of these objects.  */\n   const dr_info &\n   operator= (const dr_info &p)\n@@ -409,7 +403,7 @@ struct dr_info\n struct scop\n {\n   /* A SCOP is defined as a SESE region.  */\n-  sese_info_p region;\n+  sese_info_p scop_info;\n \n   /* Number of parameters in SCoP.  */\n   graphite_dim_t nb_params;\n@@ -453,10 +447,6 @@ struct scop\n   bool poly_scop_p;\n };\n \n-#define SCOP_REGION(S) (S->region)\n-#define SCOP_CONTEXT(S) (NULL)\n-#define POLY_SCOP_P(S) (S->poly_scop_p)\n-\n extern scop_p new_scop (edge, edge);\n extern void free_scop (scop_p);\n extern gimple_poly_bb_p new_gimple_poly_bb (basic_block, vec<data_reference_p>);\n@@ -471,7 +461,7 @@ extern bool apply_poly_transforms (scop_p);\n static inline void\n scop_set_region (scop_p scop, sese_info_p region)\n {\n-  scop->region = region;\n+  scop->scop_info = region;\n }\n \n /* Returns the number of parameters for SCOP.  */"}, {"sha": "3ce4ff1ba92f7b35f1b1ad6a581cbb272cfe0031", "filename": "gcc/graphite-scop-detection.c", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d37fc3aa4aae5adf437a4d0b6370dc24759e5689/gcc%2Fgraphite-scop-detection.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d37fc3aa4aae5adf437a4d0b6370dc24759e5689/gcc%2Fgraphite-scop-detection.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-scop-detection.c?ref=d37fc3aa4aae5adf437a4d0b6370dc24759e5689", "patch": "@@ -491,7 +491,7 @@ class scop_detection\n   vec<sese_l> scops;\n };\n \n-sese_l scop_detection::invalid_sese (0);\n+sese_l scop_detection::invalid_sese (NULL, NULL);\n \n /* Return an sese_l around the LOOP.  */\n \n@@ -888,13 +888,13 @@ void\n scop_detection::remove_subscops (sese_l s1)\n {\n   int j;\n-  sese_l s2 (0);\n+  sese_l *s2;\n   FOR_EACH_VEC_ELT_REVERSE (scops, j, s2)\n     {\n-      if (subsumes (s1, s2))\n+      if (subsumes (s1, *s2))\n \t{\n \t  DEBUG_PRINT (dp << \"\\nRemoving sub-SCoP\";\n-\t\t       print_sese (dump_file, s2));\n+\t\t       print_sese (dump_file, *s2));\n \t  scops.unordered_remove (j);\n \t}\n     }\n@@ -923,13 +923,13 @@ void\n scop_detection::remove_intersecting_scops (sese_l s1)\n {\n   int j;\n-  sese_l s2 (0);\n+  sese_l *s2;\n   FOR_EACH_VEC_ELT_REVERSE (scops, j, s2)\n     {\n-      if (intersects (s1, s2))\n+      if (intersects (s1, *s2))\n \t{\n \t  DEBUG_PRINT (dp << \"\\nRemoving intersecting SCoP\";\n-\t\t       print_sese (dump_file, s2); dp << \"Intersects with:\";\n+\t\t       print_sese (dump_file, *s2); dp << \"Intersects with:\";\n \t\t       print_sese (dump_file, s1));\n \t  scops.unordered_remove (j);\n \t}\n@@ -1273,7 +1273,7 @@ dot_all_scops_1 (FILE *file, vec<scop_p> scops)\n       /* Select color for SCoP.  */\n       FOR_EACH_VEC_ELT (scops, i, scop)\n \t{\n-\t  sese_l region = scop->region->region;\n+\t  sese_l region = scop->scop_info->region;\n \t  if (bb_in_sese_p (bb, region) || (region.exit->dest == bb)\n \t      || (region.entry->dest == bb))\n \t    {\n@@ -1482,7 +1482,7 @@ scop_detection::nb_pbbs_in_loops (scop_p scop)\n   int res = 0;\n \n   FOR_EACH_VEC_ELT (scop->pbbs, i, pbb)\n-    if (loop_in_sese_p (gbb_loop (PBB_BLACK_BOX (pbb)), scop->region->region))\n+    if (loop_in_sese_p (gbb_loop (PBB_BLACK_BOX (pbb)), scop->scop_info->region))\n       res++;\n \n   return res;\n@@ -1623,7 +1623,7 @@ static void\n find_scop_parameters (scop_p scop)\n {\n   unsigned i;\n-  sese_info_p region = scop->region;\n+  sese_info_p region = scop->scop_info;\n   struct loop *loop;\n \n   /* Find the parameters used in the loop bounds.  */\n@@ -1655,7 +1655,7 @@ try_generate_gimple_bb (scop_p scop, basic_block bb)\n {\n   vec<data_reference_p> drs;\n   drs.create (5);\n-  sese_l region = scop->region->region;\n+  sese_l region = scop->scop_info->region;\n   loop_p nest = outermost_loop_in_sese (region, bb);\n \n   loop_p loop = bb->loop_father;\n@@ -1700,7 +1700,7 @@ gather_bbs::gather_bbs (cdi_direction direction, scop_p scop)\n void\n gather_bbs::before_dom_children (basic_block bb)\n {\n-  if (!bb_in_sese_p (bb, scop->region->region))\n+  if (!bb_in_sese_p (bb, scop->scop_info->region))\n     return;\n \n   gcond *stmt = single_pred_cond_non_loop_exit (bb);\n@@ -1717,7 +1717,7 @@ gather_bbs::before_dom_children (basic_block bb)\n \tcases.safe_push (NULL);\n     }\n \n-  scop->region->bbs.safe_push (bb);\n+  scop->scop_info->bbs.safe_push (bb);\n \n   gimple_poly_bb_p gbb = try_generate_gimple_bb (scop, bb);\n   GBB_CONDITIONS (gbb) = conditions.copy ();\n@@ -1733,7 +1733,7 @@ gather_bbs::before_dom_children (basic_block bb)\n void\n gather_bbs::after_dom_children (basic_block bb)\n {\n-  if (!bb_in_sese_p (bb, scop->region->region))\n+  if (!bb_in_sese_p (bb, scop->scop_info->region))\n     return;\n \n   if (single_pred_cond_non_loop_exit (bb))\n@@ -1760,10 +1760,10 @@ build_scops (vec<scop_p> *scops)\n   /* Now create scops from the lightweight SESEs.  */\n   vec<sese_l> scops_l = sb.get_scops ();\n   int i;\n-  sese_l s (0);\n+  sese_l *s;\n   FOR_EACH_VEC_ELT (scops_l, i, s)\n     {\n-      scop_p scop = new_scop (s.entry, s.exit);\n+      scop_p scop = new_scop (s->entry, s->exit);\n \n       /* Record all basic blocks and their conditions in REGION.  */\n       gather_bbs (CDI_DOMINATORS, scop).walk (cfun->cfg->x_entry_block_ptr);\n@@ -1777,7 +1777,7 @@ build_scops (vec<scop_p> *scops)\n \t  continue;\n \t}\n \n-      build_sese_loop_nests (scop->region);\n+      build_sese_loop_nests (scop->scop_info);\n \n       find_scop_parameters (scop);\n       graphite_dim_t max_dim = PARAM_VALUE (PARAM_GRAPHITE_MAX_NB_SCOP_PARAMS);"}, {"sha": "d75e6a2ca30af966ef6bec311bd50cb4e4e2417e", "filename": "gcc/graphite-sese-to-poly.c", "status": "modified", "additions": 21, "deletions": 21, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d37fc3aa4aae5adf437a4d0b6370dc24759e5689/gcc%2Fgraphite-sese-to-poly.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d37fc3aa4aae5adf437a4d0b6370dc24759e5689/gcc%2Fgraphite-sese-to-poly.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-sese-to-poly.c?ref=d37fc3aa4aae5adf437a4d0b6370dc24759e5689", "patch": "@@ -335,7 +335,7 @@ build_scop_scattering (scop_p scop)\n       int prefix = 0;\n \n       if (previous_gbb)\n-\tprefix = nb_common_loops (scop->region->region, previous_gbb, gbb);\n+\tprefix = nb_common_loops (scop->scop_info->region, previous_gbb, gbb);\n \n       previous_gbb = gbb;\n \n@@ -357,7 +357,7 @@ extract_affine_chrec (scop_p s, tree e, __isl_take isl_space *space)\n   isl_pw_aff *lhs = extract_affine (s, CHREC_LEFT (e), isl_space_copy (space));\n   isl_pw_aff *rhs = extract_affine (s, CHREC_RIGHT (e), isl_space_copy (space));\n   isl_local_space *ls = isl_local_space_from_space (space);\n-  unsigned pos = sese_loop_depth (s->region->region, get_chrec_loop (e)) - 1;\n+  unsigned pos = sese_loop_depth (s->scop_info->region, get_chrec_loop (e)) - 1;\n   isl_aff *loop = isl_aff_set_coefficient_si\n     (isl_aff_zero_on_domain (ls), isl_dim_in, pos, 1);\n   isl_pw_aff *l = isl_pw_aff_from_aff (loop);\n@@ -539,8 +539,8 @@ extract_affine (scop_p s, tree e, __isl_take isl_space *space)\n       break;\n \n     case SSA_NAME:\n-      gcc_assert (-1 != parameter_index_in_region_1 (e, s->region)\n-\t\t  || !invariant_in_sese_p_rec (e, s->region->region));\n+      gcc_assert (-1 != parameter_index_in_region_1 (e, s->scop_info)\n+\t\t  || !invariant_in_sese_p_rec (e, s->scop_info->region));\n       res = extract_affine_name (s, e, space);\n       break;\n \n@@ -571,7 +571,7 @@ extract_affine (scop_p s, tree e, __isl_take isl_space *space)\n static void\n set_scop_parameter_dim (scop_p scop)\n {\n-  sese_info_p region = scop->region;\n+  sese_info_p region = scop->scop_info;\n   unsigned nbp = sese_nb_params (region);\n   isl_space *space = isl_space_set_alloc (scop->isl_context, nbp, 0);\n \n@@ -594,7 +594,7 @@ build_loop_iteration_domains (scop_p scop, struct loop *loop,\n {\n \n   tree nb_iters = number_of_latch_executions (loop);\n-  sese_l region = scop->region->region;\n+  sese_l region = scop->scop_info->region;\n   gcc_assert (loop_in_sese_p (loop, region));\n \n   isl_set *inner = isl_set_copy (outer);\n@@ -704,7 +704,7 @@ create_pw_aff_from_tree (poly_bb_p pbb, tree t)\n {\n   scop_p scop = PBB_SCOP (pbb);\n \n-  t = scalar_evolution_in_region (scop->region->region, pbb_loop (pbb), t);\n+  t = scalar_evolution_in_region (scop->scop_info->region, pbb_loop (pbb), t);\n   gcc_assert (!automatically_generated_chrec_p (t));\n \n   return extract_affine (scop, t, isl_set_get_space (pbb->domain));\n@@ -818,7 +818,7 @@ add_conditions_to_constraints (scop_p scop)\n static void\n add_param_constraints (scop_p scop, graphite_dim_t p)\n {\n-  tree parameter = SESE_PARAMS (scop->region)[p];\n+  tree parameter = SESE_PARAMS (scop->scop_info)[p];\n   tree type = TREE_TYPE (parameter);\n   tree lb = NULL_TREE;\n   tree ub = NULL_TREE;\n@@ -892,7 +892,7 @@ build_scop_context (scop_p scop)\n static void\n build_scop_iteration_domain (scop_p scop)\n {\n-  sese_info_p region = scop->region;\n+  sese_info_p region = scop->scop_info;\n   int nb_loops = number_of_loops (cfun);\n   isl_set **doms = XCNEWVEC (isl_set *, nb_loops);\n \n@@ -1103,13 +1103,13 @@ build_alias_set (scop_p scop)\n {\n   int num_vertices = scop->drs.length ();\n   struct graph *g = new_graph (num_vertices);\n-  dr_info dr1 (0), dr2 (0);\n+  dr_info *dr1, *dr2;\n   int i, j;\n   int *all_vertices;\n \n   FOR_EACH_VEC_ELT (scop->drs, i, dr1)\n     for (j = i+1; scop->drs.iterate (j, &dr2); j++)\n-      if (dr_may_alias_p (dr1.dr, dr2.dr, true))\n+      if (dr_may_alias_p (dr1->dr, dr2->dr, true))\n \t{\n \t  add_edge (g, i, j);\n \t  add_edge (g, j, i);\n@@ -1155,9 +1155,9 @@ build_scop_drs (scop_p scop)\n \n   build_alias_set (scop);\n \n-  dr_info dri (0);\n+  dr_info *dri;\n   FOR_EACH_VEC_ELT (scop->drs, i, dri)\n-    build_poly_dr (dri);\n+    build_poly_dr (*dri);\n }\n \n /* Analyze all the data references of STMTS and add them to the\n@@ -1166,7 +1166,7 @@ build_scop_drs (scop_p scop)\n static void\n analyze_drs_in_stmts (scop_p scop, basic_block bb, vec<gimple *> stmts)\n {\n-  sese_l region = scop->region->region;\n+  sese_l region = scop->scop_info->region;\n   if (!bb_in_sese_p (bb, region))\n     return;\n \n@@ -1283,7 +1283,7 @@ insert_out_of_ssa_copy_on_edge (scop_p scop, edge e, tree res, tree expr)\n   gsi_commit_edge_inserts ();\n   basic_block bb = gimple_bb (stmt);\n \n-  if (!bb_in_sese_p (bb, scop->region->region))\n+  if (!bb_in_sese_p (bb, scop->scop_info->region))\n     return;\n \n   if (!gbb_from_bb (bb))\n@@ -1365,7 +1365,7 @@ propagate_expr_outside_region (tree def, tree expr, sese_l &region)\n static void\n rewrite_close_phi_out_of_ssa (scop_p scop, gimple_stmt_iterator *psi)\n {\n-  sese_l region = scop->region->region;\n+  sese_l region = scop->scop_info->region;\n   gimple *phi = gsi_stmt (*psi);\n   tree res = gimple_phi_result (phi);\n   basic_block bb = gimple_bb (phi);\n@@ -1498,7 +1498,7 @@ static void\n rewrite_reductions_out_of_ssa (scop_p scop)\n {\n   basic_block bb;\n-  sese_l region = scop->region->region;\n+  sese_l region = scop->scop_info->region;\n \n   FOR_EACH_BB_FN (bb, cfun)\n     if (bb_in_sese_p (bb, region))\n@@ -1563,7 +1563,7 @@ handle_scalar_deps_crossing_scop_limits (scop_p scop, tree def, gimple *stmt)\n   tree var = create_tmp_reg (TREE_TYPE (def));\n   tree new_name = make_ssa_name (var, stmt);\n   bool needs_copy = false;\n-  sese_l region = scop->region->region;\n+  sese_l region = scop->scop_info->region;\n \n   imm_use_iterator imm_iter;\n   gimple *use_stmt;\n@@ -1601,7 +1601,7 @@ handle_scalar_deps_crossing_scop_limits (scop_p scop, tree def, gimple *stmt)\n static bool\n rewrite_cross_bb_scalar_deps (scop_p scop, gimple_stmt_iterator *gsi)\n {\n-  sese_l region = scop->region->region;\n+  sese_l region = scop->scop_info->region;\n   gimple *stmt = gsi_stmt (*gsi);\n   imm_use_iterator imm_iter;\n   tree def;\n@@ -1686,7 +1686,7 @@ rewrite_cross_bb_scalar_deps_out_of_ssa (scop_p scop)\n {\n   basic_block bb;\n   gimple_stmt_iterator psi;\n-  sese_l region = scop->region->region;\n+  sese_l region = scop->scop_info->region;\n   bool changed = false;\n \n   /* Create an extra empty BB after the scop.  */\n@@ -1729,6 +1729,6 @@ build_poly_scop (scop_p scop)\n \n   /* This SCoP has been translated to the polyhedral\n      representation.  */\n-  POLY_SCOP_P (scop) = true;\n+  scop->poly_scop_p = true;\n }\n #endif  /* HAVE_isl */"}, {"sha": "808665f7da35c948ef431b8a07c6dc114fab646f", "filename": "gcc/graphite.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d37fc3aa4aae5adf437a4d0b6370dc24759e5689/gcc%2Fgraphite.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d37fc3aa4aae5adf437a4d0b6370dc24759e5689/gcc%2Fgraphite.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite.c?ref=d37fc3aa4aae5adf437a4d0b6370dc24759e5689", "patch": "@@ -144,7 +144,7 @@ print_graphite_scop_statistics (FILE* file, scop_p scop)\n       gimple_stmt_iterator psi;\n       loop_p loop = bb->loop_father;\n \n-      if (!bb_in_sese_p (bb, scop->region->region))\n+      if (!bb_in_sese_p (bb, scop->scop_info->region))\n \tcontinue;\n \n       n_bbs++;\n@@ -162,7 +162,7 @@ print_graphite_scop_statistics (FILE* file, scop_p scop)\n \t  n_p_stmts += bb->count;\n \t}\n \n-      if (loop->header == bb && loop_in_sese_p (loop, scop->region->region))\n+      if (loop->header == bb && loop_in_sese_p (loop, scop->scop_info->region))\n \t{\n \t  n_loops++;\n \t  n_p_loops += bb->count;\n@@ -171,8 +171,8 @@ print_graphite_scop_statistics (FILE* file, scop_p scop)\n \n   fprintf (file, \"\\nFunction Name: %s\\n\", current_function_name ());\n \n-  edge scop_begin = scop->region->region.entry;\n-  edge scop_end = scop->region->region.exit;\n+  edge scop_begin = scop->scop_info->region.entry;\n+  edge scop_end = scop->scop_info->region.exit;\n \n   fprintf (file, \"\\nSCoP (entry_edge (bb_%d, bb_%d), \",\n \t   scop_begin->src->index, scop_begin->dest->index);\n@@ -334,7 +334,7 @@ graphite_transform_loops (void)\n \tif (dump_file && dump_flags)\n \t  print_scop (dump_file, scop);\n \n-\tif (POLY_SCOP_P (scop)\n+\tif (scop->poly_scop_p\n \t    && apply_poly_transforms (scop)\n \t    && graphite_regenerate_ast_isl (scop))\n \t  need_cfg_cleanup_p = true;"}, {"sha": "f2dd55ee659a9496278dccc33083924a6c5c19af", "filename": "gcc/sese.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d37fc3aa4aae5adf437a4d0b6370dc24759e5689/gcc%2Fsese.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d37fc3aa4aae5adf437a4d0b6370dc24759e5689/gcc%2Fsese.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsese.h?ref=d37fc3aa4aae5adf437a4d0b6370dc24759e5689", "patch": "@@ -30,9 +30,6 @@ struct sese_l\n {\n   sese_l (edge e, edge x) : entry (e), exit (x) {}\n \n-  /* This is to push objects of sese_l in a vec.  */\n-  sese_l (int i) : entry (NULL), exit (NULL) { gcc_assert (i == 0); }\n-\n   operator bool () const { return entry && exit; }\n \n   const sese_l &"}]}