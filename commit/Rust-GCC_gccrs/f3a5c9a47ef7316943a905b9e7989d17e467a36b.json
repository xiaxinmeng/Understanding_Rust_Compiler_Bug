{"sha": "f3a5c9a47ef7316943a905b9e7989d17e467a36b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjNhNWM5YTQ3ZWY3MzE2OTQzYTkwNWI5ZTc5ODlkMTdlNDY3YTM2Yg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-07-18T23:15:42Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-07-18T23:15:42Z"}, "message": "(mc680x0): Define umul_ppmm, udiv_qrnnd, sdiv_qrnnd for the '020,\n\n'030, '040, and '332.  Define count_leading_zeros for the '020, '030,\n'040, and '060.\n\nFrom-SVN: r12517", "tree": {"sha": "a48f7ac8df785ec74697b9ae9da0c92076b8efd0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a48f7ac8df785ec74697b9ae9da0c92076b8efd0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f3a5c9a47ef7316943a905b9e7989d17e467a36b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3a5c9a47ef7316943a905b9e7989d17e467a36b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f3a5c9a47ef7316943a905b9e7989d17e467a36b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3a5c9a47ef7316943a905b9e7989d17e467a36b/comments", "author": null, "committer": null, "parents": [{"sha": "c042287ed3cdf8037f326e5d9e7a5bd874434525", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c042287ed3cdf8037f326e5d9e7a5bd874434525", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c042287ed3cdf8037f326e5d9e7a5bd874434525"}], "stats": {"total": 31, "additions": 24, "deletions": 7}, "files": [{"sha": "8218b0e4ed0e95748b3d7efcc75c47dd4f457824", "filename": "gcc/longlong.h", "status": "modified", "additions": 24, "deletions": 7, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3a5c9a47ef7316943a905b9e7989d17e467a36b/gcc%2Flonglong.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3a5c9a47ef7316943a905b9e7989d17e467a36b/gcc%2Flonglong.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flonglong.h?ref=f3a5c9a47ef7316943a905b9e7989d17e467a36b", "patch": "@@ -1,5 +1,5 @@\n /* longlong.h -- definitions for mixed size 32/64 bit arithmetic.\n-   Copyright (C) 1991, 1992, 1994, 1995 Free Software Foundation, Inc.\n+   Copyright (C) 1991, 1992, 1994, 1995, 1996 Free Software Foundation, Inc.\n \n    This definition file is free software; you can redistribute it\n    and/or modify it under the terms of the GNU General Public\n@@ -425,7 +425,13 @@\n \t     \"d\" ((USItype) (bh)),\t\t\t\t\t\\\n \t     \"1\" ((USItype) (al)),\t\t\t\t\t\\\n \t     \"g\" ((USItype) (bl)))\n-#if defined (__mc68020__) || defined (__NeXT__) || defined(mc68020)\n+\n+/* The '020, '030, '040 and CPU32 have 32x32->64 and 64/32->32q-32r. */\n+#if defined (__mc68020__) || defined(mc68020) \\\n+\t|| defined(__mc68030__) || defined(mc68030) \\\n+\t|| defined(__mc68040__) || defined(mc68040) \\\n+\t|| defined(__mc68332__) || defined(mc68332) \\\n+\t|| defined(__NeXT__)\n #define umul_ppmm(w1, w0, u, v) \\\n   __asm__ (\"mulu%.l %3,%1:%0\"\t\t\t\t\t\t\\\n \t   : \"=d\" ((USItype) (w0)),\t\t\t\t\t\\\n@@ -448,11 +454,9 @@\n \t   : \"0\" ((USItype) (n0)),\t\t\t\t\t\\\n \t     \"1\" ((USItype) (n1)),\t\t\t\t\t\\\n \t     \"dmi\" ((USItype) (d)))\n-#define count_leading_zeros(count, x) \\\n-  __asm__ (\"bfffo %1{%b2:%b2},%0\"\t\t\t\t\t\\\n-\t   : \"=d\" ((USItype) (count))\t\t\t\t\t\\\n-\t   : \"od\" ((USItype) (x)), \"n\" (0))\n+\n #else /* not mc68020 */\n+#if !defined(__mc5200__)\n /* %/ inserts REGISTER_PREFIX, %# inserts IMMEDIATE_PREFIX.  */\n #define umul_ppmm(xh, xl, a, b) \\\n   __asm__ (\"| Inlined umul_ppmm\n@@ -484,11 +488,24 @@\n \t   : \"=g\" ((USItype) (xh)),\t\t\t\t\t\\\n \t     \"=g\" ((USItype) (xl))\t\t\t\t\t\\\n \t   : \"g\" ((USItype) (a)),\t\t\t\t\t\\\n-\t     \"g\" ((USItype) (b))\t\t\t\t\t\t\\\n+\t     \"g\" ((USItype) (b))\t\t\t\t\t\\\n \t   : \"d0\", \"d1\", \"d2\", \"d3\", \"d4\")\n #define UMUL_TIME 100\n #define UDIV_TIME 400\n+#endif /* not mcf5200 */\n #endif /* not mc68020 */\n+\n+/* The '020, '030, '040 and '060 have bitfield insns. */\n+#if defined (__mc68020__) || defined(mc68020) \\\n+\t|| defined(__mc68030__) || defined(mc68030) \\\n+\t|| defined(__mc68040__) || defined(mc68040) \\\n+\t|| defined(__mc68060__) || defined(mc68060) \\\n+\t|| defined(__NeXT__)\n+#define count_leading_zeros(count, x) \\\n+  __asm__ (\"bfffo %1{%b2:%b2},%0\"\t\t\t\t\t\\\n+\t   : \"=d\" ((USItype) (count))\t\t\t\t\t\\\n+\t   : \"od\" ((USItype) (x)), \"n\" (0))\n+#endif\n #endif /* mc68000 */\n \n #if defined (__m88000__)"}]}