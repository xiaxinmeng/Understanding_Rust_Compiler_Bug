{"sha": "853d50d3c82212fee406279c386cef1673adfbc3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODUzZDUwZDNjODIyMTJmZWU0MDYyNzljMzg2Y2VmMTY3M2FkZmJjMw==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2014-09-22T07:36:42Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2014-09-22T07:36:42Z"}, "message": "gcc/\n\t* hard-reg-set.h (COPY_HARD_REG_SET, COMPL_HARD_REG_SET)\n\t(AND_HARD_REG_SET, AND_COMPL_HARD_REG_SET, IOR_HARD_REG_SET)\n\t(IOR_COMPL_HARD_REG_SET): Allow the \"from\" set to be constant.\n\nFrom-SVN: r215446", "tree": {"sha": "39a5b99a15b423d4c2fe132bcc7a9dac9e350459", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/39a5b99a15b423d4c2fe132bcc7a9dac9e350459"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/853d50d3c82212fee406279c386cef1673adfbc3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/853d50d3c82212fee406279c386cef1673adfbc3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/853d50d3c82212fee406279c386cef1673adfbc3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/853d50d3c82212fee406279c386cef1673adfbc3/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "53f3f4e3131f1c3d22954a77fa2de464de8cc3ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53f3f4e3131f1c3d22954a77fa2de464de8cc3ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/53f3f4e3131f1c3d22954a77fa2de464de8cc3ba"}], "stats": {"total": 78, "additions": 54, "deletions": 24}, "files": [{"sha": "3420fb034558c704f9addd99dcc29c751e5f9f12", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/853d50d3c82212fee406279c386cef1673adfbc3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/853d50d3c82212fee406279c386cef1673adfbc3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=853d50d3c82212fee406279c386cef1673adfbc3", "patch": "@@ -1,3 +1,9 @@\n+2014-09-22  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* hard-reg-set.h (COPY_HARD_REG_SET, COMPL_HARD_REG_SET)\n+\t(AND_HARD_REG_SET, AND_COMPL_HARD_REG_SET, IOR_HARD_REG_SET)\n+\t(IOR_COMPL_HARD_REG_SET): Allow the \"from\" set to be constant.\n+\n 2014-09-22  Zhenqiang Chen  <zhenqiang.chen@arm.com>\n \n \t* config/arm/arm.c: #include \"tm-constrs.h\""}, {"sha": "401fea1bab8a057917340572d79997b5a28512c2", "filename": "gcc/hard-reg-set.h", "status": "modified", "additions": 48, "deletions": 24, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/853d50d3c82212fee406279c386cef1673adfbc3/gcc%2Fhard-reg-set.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/853d50d3c82212fee406279c386cef1673adfbc3/gcc%2Fhard-reg-set.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhard-reg-set.h?ref=853d50d3c82212fee406279c386cef1673adfbc3", "patch": "@@ -168,32 +168,38 @@ do { HARD_REG_ELT_TYPE *scan_tp_ = (TO);\t\t\t\\\n      scan_tp_[1] = -1; } while (0)\n \n #define COPY_HARD_REG_SET(TO, FROM)  \\\n-do { HARD_REG_ELT_TYPE *scan_tp_ = (TO), *scan_fp_ = (FROM);\t\\\n+do { HARD_REG_ELT_TYPE *scan_tp_ = (TO);\t\t\t\\\n+     const HARD_REG_ELT_TYPE *scan_fp_ = (FROM);\t\t\\\n      scan_tp_[0] = scan_fp_[0];\t\t\t\t\t\\\n      scan_tp_[1] = scan_fp_[1]; } while (0)\n \n #define COMPL_HARD_REG_SET(TO, FROM)  \\\n-do { HARD_REG_ELT_TYPE *scan_tp_ = (TO), *scan_fp_ = (FROM); \t\\\n+do { HARD_REG_ELT_TYPE *scan_tp_ = (TO);\t\t\t\\\n+     const HARD_REG_ELT_TYPE *scan_fp_ = (FROM);\t\t\\\n      scan_tp_[0] = ~ scan_fp_[0];\t\t\t\t\\\n      scan_tp_[1] = ~ scan_fp_[1]; } while (0)\n \n #define AND_HARD_REG_SET(TO, FROM)  \\\n-do { HARD_REG_ELT_TYPE *scan_tp_ = (TO), *scan_fp_ = (FROM); \t\\\n+do { HARD_REG_ELT_TYPE *scan_tp_ = (TO);\t\t\t\\\n+     const HARD_REG_ELT_TYPE *scan_fp_ = (FROM);\t\t\\\n      scan_tp_[0] &= scan_fp_[0];\t\t\t\t\\\n      scan_tp_[1] &= scan_fp_[1]; } while (0)\n \n #define AND_COMPL_HARD_REG_SET(TO, FROM)  \\\n-do { HARD_REG_ELT_TYPE *scan_tp_ = (TO), *scan_fp_ = (FROM); \t\\\n+do { HARD_REG_ELT_TYPE *scan_tp_ = (TO);\t\t\t\\\n+     const HARD_REG_ELT_TYPE *scan_fp_ = (FROM);\t\t\\\n      scan_tp_[0] &= ~ scan_fp_[0];\t\t\t\t\\\n      scan_tp_[1] &= ~ scan_fp_[1]; } while (0)\n \n #define IOR_HARD_REG_SET(TO, FROM)  \\\n-do { HARD_REG_ELT_TYPE *scan_tp_ = (TO), *scan_fp_ = (FROM); \t\\\n+do { HARD_REG_ELT_TYPE *scan_tp_ = (TO);\t\t\t\\\n+     const HARD_REG_ELT_TYPE *scan_fp_ = (FROM);\t\t\\\n      scan_tp_[0] |= scan_fp_[0];\t\t\t\t\\\n      scan_tp_[1] |= scan_fp_[1]; } while (0)\n \n #define IOR_COMPL_HARD_REG_SET(TO, FROM)  \\\n-do { HARD_REG_ELT_TYPE *scan_tp_ = (TO), *scan_fp_ = (FROM); \t\\\n+do { HARD_REG_ELT_TYPE *scan_tp_ = (TO);\t\t\t\\\n+     const HARD_REG_ELT_TYPE *scan_fp_ = (FROM);\t\t\\\n      scan_tp_[0] |= ~ scan_fp_[0];\t\t\t\t\\\n      scan_tp_[1] |= ~ scan_fp_[1]; } while (0)\n \n@@ -236,37 +242,43 @@ do { HARD_REG_ELT_TYPE *scan_tp_ = (TO);\t\t\t\\\n      scan_tp_[2] = -1; } while (0)\n \n #define COPY_HARD_REG_SET(TO, FROM)  \\\n-do { HARD_REG_ELT_TYPE *scan_tp_ = (TO), *scan_fp_ = (FROM);\t\\\n+do { HARD_REG_ELT_TYPE *scan_tp_ = (TO);\t\t\t\\\n+     const HARD_REG_ELT_TYPE *scan_fp_ = (FROM);\t\t\\\n      scan_tp_[0] = scan_fp_[0];\t\t\t\t\t\\\n      scan_tp_[1] = scan_fp_[1];\t\t\t\t\t\\\n      scan_tp_[2] = scan_fp_[2]; } while (0)\n \n #define COMPL_HARD_REG_SET(TO, FROM)  \\\n-do { HARD_REG_ELT_TYPE *scan_tp_ = (TO), *scan_fp_ = (FROM); \t\\\n+do { HARD_REG_ELT_TYPE *scan_tp_ = (TO);\t\t\t\\\n+     const HARD_REG_ELT_TYPE *scan_fp_ = (FROM);\t\t\\\n      scan_tp_[0] = ~ scan_fp_[0];\t\t\t\t\\\n      scan_tp_[1] = ~ scan_fp_[1];\t\t\t\t\\\n      scan_tp_[2] = ~ scan_fp_[2]; } while (0)\n \n #define AND_HARD_REG_SET(TO, FROM)  \\\n-do { HARD_REG_ELT_TYPE *scan_tp_ = (TO), *scan_fp_ = (FROM); \t\\\n+do { HARD_REG_ELT_TYPE *scan_tp_ = (TO);\t\t\t\\\n+     const HARD_REG_ELT_TYPE *scan_fp_ = (FROM);\t\t\\\n      scan_tp_[0] &= scan_fp_[0];\t\t\t\t\\\n      scan_tp_[1] &= scan_fp_[1];\t\t\t\t\\\n      scan_tp_[2] &= scan_fp_[2]; } while (0)\n \n #define AND_COMPL_HARD_REG_SET(TO, FROM)  \\\n-do { HARD_REG_ELT_TYPE *scan_tp_ = (TO), *scan_fp_ = (FROM); \t\\\n+do { HARD_REG_ELT_TYPE *scan_tp_ = (TO);\t\t\t\\\n+     const HARD_REG_ELT_TYPE *scan_fp_ = (FROM);\t\t\\\n      scan_tp_[0] &= ~ scan_fp_[0];\t\t\t\t\\\n      scan_tp_[1] &= ~ scan_fp_[1];\t\t\t\t\\\n      scan_tp_[2] &= ~ scan_fp_[2]; } while (0)\n \n #define IOR_HARD_REG_SET(TO, FROM)  \\\n-do { HARD_REG_ELT_TYPE *scan_tp_ = (TO), *scan_fp_ = (FROM); \t\\\n+do { HARD_REG_ELT_TYPE *scan_tp_ = (TO);\t\t\t\\\n+     const HARD_REG_ELT_TYPE *scan_fp_ = (FROM);\t\t\\\n      scan_tp_[0] |= scan_fp_[0];\t\t\t\t\\\n      scan_tp_[1] |= scan_fp_[1];\t\t\t\t\\\n      scan_tp_[2] |= scan_fp_[2]; } while (0)\n \n #define IOR_COMPL_HARD_REG_SET(TO, FROM)  \\\n-do { HARD_REG_ELT_TYPE *scan_tp_ = (TO), *scan_fp_ = (FROM); \t\\\n+do { HARD_REG_ELT_TYPE *scan_tp_ = (TO);\t\t\t\\\n+     const HARD_REG_ELT_TYPE *scan_fp_ = (FROM);\t\t\\\n      scan_tp_[0] |= ~ scan_fp_[0];\t\t\t\t\\\n      scan_tp_[1] |= ~ scan_fp_[1];\t\t\t\t\\\n      scan_tp_[2] |= ~ scan_fp_[2]; } while (0)\n@@ -316,42 +328,48 @@ do { HARD_REG_ELT_TYPE *scan_tp_ = (TO);\t\t\t\\\n      scan_tp_[3] = -1; } while (0)\n \n #define COPY_HARD_REG_SET(TO, FROM)  \\\n-do { HARD_REG_ELT_TYPE *scan_tp_ = (TO), *scan_fp_ = (FROM);\t\\\n+do { HARD_REG_ELT_TYPE *scan_tp_ = (TO);\t\t\t\\\n+     const HARD_REG_ELT_TYPE *scan_fp_ = (FROM);\t\t\\\n      scan_tp_[0] = scan_fp_[0];\t\t\t\t\t\\\n      scan_tp_[1] = scan_fp_[1];\t\t\t\t\t\\\n      scan_tp_[2] = scan_fp_[2];\t\t\t\t\t\\\n      scan_tp_[3] = scan_fp_[3]; } while (0)\n \n #define COMPL_HARD_REG_SET(TO, FROM)  \\\n-do { HARD_REG_ELT_TYPE *scan_tp_ = (TO), *scan_fp_ = (FROM); \t\\\n+do { HARD_REG_ELT_TYPE *scan_tp_ = (TO);\t\t\t\\\n+     const HARD_REG_ELT_TYPE *scan_fp_ = (FROM);\t\t\\\n      scan_tp_[0] = ~ scan_fp_[0];\t\t\t\t\\\n      scan_tp_[1] = ~ scan_fp_[1];\t\t\t\t\\\n      scan_tp_[2] = ~ scan_fp_[2];\t\t\t\t\\\n      scan_tp_[3] = ~ scan_fp_[3]; } while (0)\n \n #define AND_HARD_REG_SET(TO, FROM)  \\\n-do { HARD_REG_ELT_TYPE *scan_tp_ = (TO), *scan_fp_ = (FROM); \t\\\n+do { HARD_REG_ELT_TYPE *scan_tp_ = (TO);\t\t\t\\\n+     const HARD_REG_ELT_TYPE *scan_fp_ = (FROM);\t\t\\\n      scan_tp_[0] &= scan_fp_[0];\t\t\t\t\\\n      scan_tp_[1] &= scan_fp_[1];\t\t\t\t\\\n      scan_tp_[2] &= scan_fp_[2];\t\t\t\t\\\n      scan_tp_[3] &= scan_fp_[3]; } while (0)\n \n #define AND_COMPL_HARD_REG_SET(TO, FROM)  \\\n-do { HARD_REG_ELT_TYPE *scan_tp_ = (TO), *scan_fp_ = (FROM); \t\\\n+do { HARD_REG_ELT_TYPE *scan_tp_ = (TO);\t\t\t\\\n+     const HARD_REG_ELT_TYPE *scan_fp_ = (FROM);\t\t\\\n      scan_tp_[0] &= ~ scan_fp_[0];\t\t\t\t\\\n      scan_tp_[1] &= ~ scan_fp_[1];\t\t\t\t\\\n      scan_tp_[2] &= ~ scan_fp_[2];\t\t\t\t\\\n      scan_tp_[3] &= ~ scan_fp_[3]; } while (0)\n \n #define IOR_HARD_REG_SET(TO, FROM)  \\\n-do { HARD_REG_ELT_TYPE *scan_tp_ = (TO), *scan_fp_ = (FROM); \t\\\n+do { HARD_REG_ELT_TYPE *scan_tp_ = (TO);\t\t\t\\\n+     const HARD_REG_ELT_TYPE *scan_fp_ = (FROM);\t\t\\\n      scan_tp_[0] |= scan_fp_[0];\t\t\t\t\\\n      scan_tp_[1] |= scan_fp_[1];\t\t\t\t\\\n      scan_tp_[2] |= scan_fp_[2];\t\t\t\t\\\n      scan_tp_[3] |= scan_fp_[3]; } while (0)\n \n #define IOR_COMPL_HARD_REG_SET(TO, FROM)  \\\n-do { HARD_REG_ELT_TYPE *scan_tp_ = (TO), *scan_fp_ = (FROM); \t\\\n+do { HARD_REG_ELT_TYPE *scan_tp_ = (TO);\t\t\t\\\n+     const HARD_REG_ELT_TYPE *scan_fp_ = (FROM);\t\t\\\n      scan_tp_[0] |= ~ scan_fp_[0];\t\t\t\t\\\n      scan_tp_[1] |= ~ scan_fp_[1];\t\t\t\t\\\n      scan_tp_[2] |= ~ scan_fp_[2];\t\t\t\t\\\n@@ -402,37 +420,43 @@ do { HARD_REG_ELT_TYPE *scan_tp_ = (TO);\t\t\t\\\n        *scan_tp_++ = -1; } while (0)\n \n #define COPY_HARD_REG_SET(TO, FROM)  \\\n-do { HARD_REG_ELT_TYPE *scan_tp_ = (TO), *scan_fp_ = (FROM); \t\\\n+do { HARD_REG_ELT_TYPE *scan_tp_ = (TO);\t\t\t\\\n+     const HARD_REG_ELT_TYPE *scan_fp_ = (FROM);\t\t\\\n      int i;\t\t\t\t\t\t\t\\\n      for (i = 0; i < HARD_REG_SET_LONGS; i++)\t\t\t\\\n        *scan_tp_++ = *scan_fp_++; } while (0)\n \n #define COMPL_HARD_REG_SET(TO, FROM)  \\\n-do { HARD_REG_ELT_TYPE *scan_tp_ = (TO), *scan_fp_ = (FROM); \t\\\n+do { HARD_REG_ELT_TYPE *scan_tp_ = (TO);\t\t\t\\\n+     const HARD_REG_ELT_TYPE *scan_fp_ = (FROM);\t\t\\\n      int i;\t\t\t\t\t\t\t\\\n      for (i = 0; i < HARD_REG_SET_LONGS; i++)\t\t\t\\\n        *scan_tp_++ = ~ *scan_fp_++; } while (0)\n \n #define AND_HARD_REG_SET(TO, FROM)  \\\n-do { HARD_REG_ELT_TYPE *scan_tp_ = (TO), *scan_fp_ = (FROM); \t\\\n+do { HARD_REG_ELT_TYPE *scan_tp_ = (TO);\t\t\t\\\n+     const HARD_REG_ELT_TYPE *scan_fp_ = (FROM);\t\t\\\n      int i;\t\t\t\t\t\t\t\\\n      for (i = 0; i < HARD_REG_SET_LONGS; i++)\t\t\t\\\n        *scan_tp_++ &= *scan_fp_++; } while (0)\n \n #define AND_COMPL_HARD_REG_SET(TO, FROM)  \\\n-do { HARD_REG_ELT_TYPE *scan_tp_ = (TO), *scan_fp_ = (FROM); \t\\\n+do { HARD_REG_ELT_TYPE *scan_tp_ = (TO);\t\t\t\\\n+     const HARD_REG_ELT_TYPE *scan_fp_ = (FROM);\t\t\\\n      int i;\t\t\t\t\t\t\t\\\n      for (i = 0; i < HARD_REG_SET_LONGS; i++)\t\t\t\\\n        *scan_tp_++ &= ~ *scan_fp_++; } while (0)\n \n #define IOR_HARD_REG_SET(TO, FROM)  \\\n-do { HARD_REG_ELT_TYPE *scan_tp_ = (TO), *scan_fp_ = (FROM); \t\\\n+do { HARD_REG_ELT_TYPE *scan_tp_ = (TO);\t\t\t\\\n+     const HARD_REG_ELT_TYPE *scan_fp_ = (FROM);\t\t\\\n      int i;\t\t\t\t\t\t\t\\\n      for (i = 0; i < HARD_REG_SET_LONGS; i++)\t\t\t\\\n        *scan_tp_++ |= *scan_fp_++; } while (0)\n \n #define IOR_COMPL_HARD_REG_SET(TO, FROM)  \\\n-do { HARD_REG_ELT_TYPE *scan_tp_ = (TO), *scan_fp_ = (FROM); \t\\\n+do { HARD_REG_ELT_TYPE *scan_tp_ = (TO);\t\t\t\\\n+     const HARD_REG_ELT_TYPE *scan_fp_ = (FROM);\t\t\\\n      int i;\t\t\t\t\t\t\t\\\n      for (i = 0; i < HARD_REG_SET_LONGS; i++)\t\t\t\\\n        *scan_tp_++ |= ~ *scan_fp_++; } while (0)"}]}