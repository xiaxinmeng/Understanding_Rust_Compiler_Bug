{"sha": "a93634ba09c4b33d95233e48d9c452a529555d05", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTkzNjM0YmEwOWM0YjMzZDk1MjMzZTQ4ZDljNDUyYTUyOTU1NWQwNQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2016-12-21T19:38:29Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2016-12-21T19:38:29Z"}, "message": "Fixes for P0127R2 implementation.\n\n\t* pt.c (convert_template_argument): Pass args to do_auto_deduction.\n\t(mark_template_parm): Handle deducibility from type of non-type\n\targument here.\n\t(for_each_template_parm_r): Not here.\n\nFrom-SVN: r243867", "tree": {"sha": "0e94afcfe589438ff71b0d77f01d1da6042b0432", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0e94afcfe589438ff71b0d77f01d1da6042b0432"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a93634ba09c4b33d95233e48d9c452a529555d05", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a93634ba09c4b33d95233e48d9c452a529555d05", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a93634ba09c4b33d95233e48d9c452a529555d05", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a93634ba09c4b33d95233e48d9c452a529555d05/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "35f4cbd4489519983a4f64da846be8352f611879", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35f4cbd4489519983a4f64da846be8352f611879", "html_url": "https://github.com/Rust-GCC/gccrs/commit/35f4cbd4489519983a4f64da846be8352f611879"}], "stats": {"total": 26, "additions": 18, "deletions": 8}, "files": [{"sha": "4c68b1e4e3e9db32865fef1066c6aed9a855c19f", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a93634ba09c4b33d95233e48d9c452a529555d05/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a93634ba09c4b33d95233e48d9c452a529555d05/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=a93634ba09c4b33d95233e48d9c452a529555d05", "patch": "@@ -1,5 +1,10 @@\n 2016-12-21  Jason Merrill  <jason@redhat.com>\n \n+\t* pt.c (convert_template_argument): Pass args to do_auto_deduction.\n+\t(mark_template_parm): Handle deducibility from type of non-type\n+\targument here.\n+\t(for_each_template_parm_r): Not here.\n+\n \t* ptree.c (cxx_print_type): Print args of\n \tBOUND_TEMPLATE_TEMPLATE_PARM.\n \t(cxx_print_decl): Print DECL_TEMPLATE_PARMS."}, {"sha": "9d9c35e47e6f440a1929498728e3bfa6c88d4db5", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 13, "deletions": 8, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a93634ba09c4b33d95233e48d9c452a529555d05/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a93634ba09c4b33d95233e48d9c452a529555d05/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=a93634ba09c4b33d95233e48d9c452a529555d05", "patch": "@@ -4467,6 +4467,15 @@ mark_template_parm (tree t, void* data)\n       tpd->arg_uses_template_parms[tpd->current_arg] = 1;\n     }\n \n+  /* In C++17 the type of a non-type argument is a deduced context.  */\n+  if (cxx_dialect >= cxx1z\n+      && TREE_CODE (t) == TEMPLATE_PARM_INDEX)\n+    for_each_template_parm (TREE_TYPE (t),\n+\t\t\t    &mark_template_parm,\n+\t\t\t    data,\n+\t\t\t    NULL,\n+\t\t\t    /*include_nondeduced_p=*/false);\n+\n   /* Return zero so that for_each_template_parm will continue the\n      traversal of the tree; we want to mark *every* template parm.  */\n   return 0;\n@@ -7328,14 +7337,16 @@ convert_template_argument (tree parm,\n     }\n   else\n     {\n-      tree t = tsubst (TREE_TYPE (parm), args, complain, in_decl);\n+      tree t = TREE_TYPE (parm);\n \n       if (tree a = type_uses_auto (t))\n \t{\n-\t  t = do_auto_deduction (t, arg, a, complain, adc_unspecified);\n+\t  t = do_auto_deduction (t, arg, a, complain, adc_unify, args);\n \t  if (t == error_mark_node)\n \t    return error_mark_node;\n \t}\n+      else\n+\tt = tsubst (t, args, complain, in_decl);\n \n       if (invalid_nontype_parm_type_p (t, complain))\n \treturn error_mark_node;\n@@ -8956,12 +8967,6 @@ for_each_template_parm_r (tree *tp, int *walk_subtrees, void *d)\n \treturn t;\n       else if (!fn)\n \treturn t;\n-\n-      /* In C++17 we can deduce a type argument from the type of a non-type\n-\t argument.  */\n-      if (cxx_dialect >= cxx1z\n-\t  && TREE_CODE (t) == TEMPLATE_PARM_INDEX)\n-\tWALK_SUBTREE (TREE_TYPE (t));\n       break;\n \n     case TEMPLATE_DECL:"}]}