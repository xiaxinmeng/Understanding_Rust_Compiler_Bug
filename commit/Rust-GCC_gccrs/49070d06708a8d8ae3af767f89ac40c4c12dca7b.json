{"sha": "49070d06708a8d8ae3af767f89ac40c4c12dca7b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDkwNzBkMDY3MDhhOGQ4YWUzYWY3NjdmODlhYzQwYzRjMTJkY2E3Yg==", "commit": {"author": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2019-12-09T20:54:11Z"}, "committer": {"name": "Martin Sebor", "email": "msebor@gcc.gnu.org", "date": "2019-12-09T20:54:11Z"}, "message": "PR middle-end/92761 - hash_table::expand invokes assignment on invalid objects\n\nPR middle-end/92761 - hash_table::expand invokes assignment on invalid objects\nPR middle-end/92762 - hash_table::empty_slow invokes assignment on invalid objects\n\ngcc/ChangeLog:\n\n\tPR middle-end/92761\n\tPR middle-end/92762\n\t* hash-map-tests.c (test_map_of_type_with_ctor_and_dtor): Tighten\n\tup tests.\n\t* hash-table.h (hash_table::expand): Use placement new to copy\n\tconstruct objects in uninitialized storage.\n\t(hash_table::empty_slow): Avoid invoking copy assignment on\n\tuninitialized objects.\n\nFrom-SVN: r279139", "tree": {"sha": "a61f278fe57a15598a51858bffa5b56ac45978df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a61f278fe57a15598a51858bffa5b56ac45978df"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/49070d06708a8d8ae3af767f89ac40c4c12dca7b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49070d06708a8d8ae3af767f89ac40c4c12dca7b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/49070d06708a8d8ae3af767f89ac40c4c12dca7b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49070d06708a8d8ae3af767f89ac40c4c12dca7b/comments", "author": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ca6932ad0ccbbbe3c788cd71595d9a25b8ae0d20", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca6932ad0ccbbbe3c788cd71595d9a25b8ae0d20", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca6932ad0ccbbbe3c788cd71595d9a25b8ae0d20"}], "stats": {"total": 49, "additions": 27, "deletions": 22}, "files": [{"sha": "0a0336268e275f9d754777ed858c013dc582f8b3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49070d06708a8d8ae3af767f89ac40c4c12dca7b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49070d06708a8d8ae3af767f89ac40c4c12dca7b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=49070d06708a8d8ae3af767f89ac40c4c12dca7b", "patch": "@@ -1,3 +1,14 @@\n+2019-12-09  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR middle-end/92761\n+\tPR middle-end/92762\n+\t* hash-map-tests.c (test_map_of_type_with_ctor_and_dtor): Tighten\n+\tup tests.\n+\t* hash-table.h (hash_table::expand): Use placement new to copy\n+\tconstruct objects in uninitialized storage.\n+\t(hash_table::empty_slow): Avoid invoking copy assignment on\n+\tuninitialized objects.\n+\n 2019-12-09  Lewis Hyatt  <lhyatt@gmail.com>\n \n \tPR preprocessor/49973"}, {"sha": "a42eac21ab36b58331cba5278e2ea3c5402e8f3d", "filename": "gcc/hash-map-tests.c", "status": "modified", "additions": 13, "deletions": 12, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49070d06708a8d8ae3af767f89ac40c4c12dca7b/gcc%2Fhash-map-tests.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49070d06708a8d8ae3af767f89ac40c4c12dca7b/gcc%2Fhash-map-tests.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhash-map-tests.c?ref=49070d06708a8d8ae3af767f89ac40c4c12dca7b", "patch": "@@ -117,23 +117,26 @@ typedef class hash_map_test_val_t\n     ++ndefault;\n   }\n \n-  hash_map_test_val_t (const hash_map_test_val_t &)\n+  hash_map_test_val_t (const hash_map_test_val_t &rhs)\n     : ptr (&ptr)\n   {\n     ++ncopy;\n+    gcc_assert (rhs.ptr == &rhs.ptr);\n   }\n \n-  hash_map_test_val_t& operator= (const hash_map_test_val_t &)\n-    {\n-     ++nassign;\n-     return *this;\n-    }\n+  hash_map_test_val_t& operator= (const hash_map_test_val_t &rhs)\n+  {\n+    ++nassign;\n+    gcc_assert (ptr == &ptr);\n+    gcc_assert (rhs.ptr == &rhs.ptr);\n+    return *this;\n+  }\n \n   ~hash_map_test_val_t ()\n-    {\n-     gcc_assert (ptr == &ptr);\n-     ++ndtor;\n-    }\n+  {\n+    gcc_assert (ptr == &ptr);\n+    ++ndtor;\n+  }\n \n   void *ptr;\n } val_t;\n@@ -184,7 +187,6 @@ test_map_of_type_with_ctor_and_dtor ()\n     ASSERT_TRUE (nassign == val_t::nassign);\n \n     ASSERT_TRUE (&rv1 != pv2);\n-    ASSERT_TRUE (pv2->ptr == &pv2->ptr);\n   }\n \n   ASSERT_TRUE (val_t::ndefault + val_t::ncopy == val_t::ndtor);\n@@ -207,7 +209,6 @@ test_map_of_type_with_ctor_and_dtor ()\n     ASSERT_TRUE (nassign + 1 == val_t::nassign);\n \n     ASSERT_TRUE (&rv1 != pv2);\n-    ASSERT_TRUE (pv2->ptr == &pv2->ptr);\n   }\n \n   ASSERT_TRUE (val_t::ndefault + val_t::ncopy == val_t::ndtor);"}, {"sha": "26bac624a082f5e0b8b19b8af733a64f44fbc0d4", "filename": "gcc/hash-table.h", "status": "modified", "additions": 3, "deletions": 10, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49070d06708a8d8ae3af767f89ac40c4c12dca7b/gcc%2Fhash-table.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49070d06708a8d8ae3af767f89ac40c4c12dca7b/gcc%2Fhash-table.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhash-table.h?ref=49070d06708a8d8ae3af767f89ac40c4c12dca7b", "patch": "@@ -818,8 +818,7 @@ hash_table<Descriptor, Lazy, Allocator>::expand ()\n       if (!is_empty (x) && !is_deleted (x))\n         {\n           value_type *q = find_empty_slot_for_expand (Descriptor::hash (x));\n-\n-          *q = x;\n+\t  new ((void*) q) value_type (x);\n         }\n \n       p++;\n@@ -869,14 +868,8 @@ hash_table<Descriptor, Lazy, Allocator>::empty_slow ()\n       m_size_prime_index = nindex;\n     }\n   else\n-    {\n-#ifndef BROKEN_VALUE_INITIALIZATION\n-      for ( ; size; ++entries, --size)\n-\t*entries = value_type ();\n-#else\n-      memset (entries, 0, size * sizeof (value_type));\n-#endif\n-    }\n+    memset ((void *) entries, 0, size * sizeof (value_type));\n+\n   m_n_deleted = 0;\n   m_n_elements = 0;\n }"}]}