{"sha": "bd72d66cb5f8450f631da7149bf066f865d56338", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmQ3MmQ2NmNiNWY4NDUwZjYzMWRhNzE0OWJmMDY2Zjg2NWQ1NjMzOA==", "commit": {"author": {"name": "Paul Brook", "email": "paul@codesourcery.com", "date": "2004-08-31T15:53:31Z"}, "committer": {"name": "Paul Brook", "email": "pbrook@gcc.gnu.org", "date": "2004-08-31T15:53:31Z"}, "message": "transfer.c (read_sf): Rename uinty to readlen.\n\n\t* io/transfer.c (read_sf): Rename uinty to readlen.  Detect EOF.\n\t(finalize_transfer): Move setjmp after namlist IO.\n\t* io/unix.c (mem_alloc_r_at): Calculate remaining length correctly.\ntestsuite/\n\t* gfortran.dg/eof_1.f90: New test.\n\nFrom-SVN: r86831", "tree": {"sha": "eeec759a476bd4d9d5f8e220e891469fe79a14bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eeec759a476bd4d9d5f8e220e891469fe79a14bb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bd72d66cb5f8450f631da7149bf066f865d56338", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd72d66cb5f8450f631da7149bf066f865d56338", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd72d66cb5f8450f631da7149bf066f865d56338", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd72d66cb5f8450f631da7149bf066f865d56338/comments", "author": null, "committer": null, "parents": [{"sha": "c789f36b216c9318b7f5fadb3a632f91513e3156", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c789f36b216c9318b7f5fadb3a632f91513e3156", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c789f36b216c9318b7f5fadb3a632f91513e3156"}], "stats": {"total": 63, "additions": 50, "deletions": 13}, "files": [{"sha": "df86733ee71bf6587e93566147891ff86417d3a7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd72d66cb5f8450f631da7149bf066f865d56338/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd72d66cb5f8450f631da7149bf066f865d56338/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=bd72d66cb5f8450f631da7149bf066f865d56338", "patch": "@@ -1,3 +1,7 @@\n+2004-08-31  Paul Brook  <paul@codesourcery.com>\n+\n+\t* gfortran.dg/eof_1.f90: New test.\n+\n 2004-08-31  Paul Brook  <paul@codesourcery.com>\n \n \t* gfortran.dg/list_read_1.f90: New file."}, {"sha": "05726bd1413b917e9cd1a9c6dec3a435a2a26570", "filename": "gcc/testsuite/gfortran.dg/eof_1.f90", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd72d66cb5f8450f631da7149bf066f865d56338/gcc%2Ftestsuite%2Fgfortran.dg%2Feof_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd72d66cb5f8450f631da7149bf066f865d56338/gcc%2Ftestsuite%2Fgfortran.dg%2Feof_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Feof_1.f90?ref=bd72d66cb5f8450f631da7149bf066f865d56338", "patch": "@@ -0,0 +1,18 @@\n+! { dg-do run }\n+! Program to test for proper EOF errors when reading past the end of a file.\n+! We used to get this wrong when a formatted read followed a list formatted\n+! read.\n+program eof_1\n+  character(len=5) :: s\n+\n+  open (unit=11, status=\"SCRATCH\")\n+  write (11, '(a)') \"Hello\"\n+  rewind(11)\n+  read(11, *) s\n+  if (s .ne. \"Hello\") call abort\n+  read(11, '(a5)', end=10) s\n+  call abort\n+10 continue\n+  close (11)\n+end\n+"}, {"sha": "1c76245bb391509931d501699599d1933b19785c", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd72d66cb5f8450f631da7149bf066f865d56338/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd72d66cb5f8450f631da7149bf066f865d56338/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=bd72d66cb5f8450f631da7149bf066f865d56338", "patch": "@@ -1,3 +1,9 @@\n+2004-08-31  Paul Brook  <paul@codesourcery.com>\n+\n+\t* io/transfer.c (read_sf): Rename uinty to readlen.  Detect EOF.\n+\t(finalize_transfer): Move setjmp after namlist IO.\n+\t* io/unix.c (mem_alloc_r_at): Calculate remaining length correctly.\n+\n 2004-08-31  Paul Brook  <paul@codesourcery.com>\n \n \t* list_read.c (eat_separator): Set at_eo when a '/' is seen."}, {"sha": "ca920724b0d31f293ad0c41f9dcd35d208433995", "filename": "libgfortran/io/transfer.c", "status": "modified", "additions": 21, "deletions": 12, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd72d66cb5f8450f631da7149bf066f865d56338/libgfortran%2Fio%2Ftransfer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd72d66cb5f8450f631da7149bf066f865d56338/libgfortran%2Fio%2Ftransfer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Ftransfer.c?ref=bd72d66cb5f8450f631da7149bf066f865d56338", "patch": "@@ -119,7 +119,7 @@ read_sf (int *length)\n {\n   static char data[SCRATCH_SIZE];\n   char *base, *p, *q;\n-  int n, unity;\n+  int n, readlen;\n \n   if (*length > SCRATCH_SIZE)\n     p = base = line_buffer = get_mem (*length);\n@@ -129,24 +129,33 @@ read_sf (int *length)\n   memset(base,'\\0',*length);\n \n   current_unit->bytes_left = options.default_recl;\n-  unity = 1;\n+  readlen = 1;\n   n = 0;\n \n   do\n     {\n       if (is_internal_unit())\n         {\n-\t  /* unity may be modified inside salloc_r if \n+\t  /* readlen may be modified inside salloc_r if \n \t     is_internal_unit() is true.  */\n-          unity = 1;\n+          readlen = 1;\n         }\n \n-      q = salloc_r (current_unit->s, &unity);\n+      q = salloc_r (current_unit->s, &readlen);\n       if (q == NULL)\n \tbreak;\n \n-      if (*q == '\\n')\n+      /* If we have a line without a terminating \\n, drop through to\n+\t EOR below.  */\n+      if (readlen < 1 & n == 0)\n \t{\n+\t  generate_error (ERROR_END, NULL);\n+\t  return NULL;\n+\t}\n+\n+      if (readlen < 1 || *q == '\\n')\n+\t{\n+\t  /* ??? What is this for?  */\n           if (current_unit->unit_number == options.stdin_unit)\n             {\n               if (n <= 0)\n@@ -1345,12 +1354,6 @@ static void\n finalize_transfer (void)\n {\n \n-  if (setjmp (g.eof_jump))\n-    {\n-       generate_error (ERROR_END, NULL);\n-       return;\n-    }\n-\n   if ((ionml != NULL) && (ioparm.namelist_name != NULL))\n     {\n        if (ioparm.namelist_read_mode)\n@@ -1363,6 +1366,12 @@ finalize_transfer (void)\n   if (current_unit == NULL)\n     return;\n \n+  if (setjmp (g.eof_jump))\n+    {\n+      generate_error (ERROR_END, NULL);\n+      return;\n+    }\n+\n   if (ioparm.list_format && g.mode == READING)\n     finish_list_read ();\n   else"}, {"sha": "33d7fda4514fd900ce1991779367ea5392af4d60", "filename": "libgfortran/io/unix.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd72d66cb5f8450f631da7149bf066f865d56338/libgfortran%2Fio%2Funix.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd72d66cb5f8450f631da7149bf066f865d56338/libgfortran%2Fio%2Funix.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Funix.c?ref=bd72d66cb5f8450f631da7149bf066f865d56338", "patch": "@@ -751,7 +751,7 @@ mem_alloc_r_at (unix_stream * s, int *len, gfc_offset where)\n \n   s->logical_offset = where + *len;\n \n-  n = (where - s->buffer_offset) - s->active;\n+  n = s->buffer_offset + s->active - where;\n   if (*len > n)\n     *len = n;\n "}]}