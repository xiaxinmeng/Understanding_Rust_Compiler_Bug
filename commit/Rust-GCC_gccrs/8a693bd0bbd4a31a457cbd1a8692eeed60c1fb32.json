{"sha": "8a693bd0bbd4a31a457cbd1a8692eeed60c1fb32", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGE2OTNiZDBiYmQ0YTMxYTQ1N2NiZDFhODY5MmVlZWQ2MGMxZmIzMg==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "1999-10-04T23:18:09Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "1999-10-04T23:18:09Z"}, "message": "stmt.c (expand_anon_union_decl): When any of the elements of the union is addressable, so is the entire union.\n\n\t* stmt.c (expand_anon_union_decl): When any of the elements of the\n\tunion is addressable, so is the entire union.\n\nFrom-SVN: r29816", "tree": {"sha": "caa4d91eb575c61613e3e99ae95c86c8600f14ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/caa4d91eb575c61613e3e99ae95c86c8600f14ba"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8a693bd0bbd4a31a457cbd1a8692eeed60c1fb32", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a693bd0bbd4a31a457cbd1a8692eeed60c1fb32", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8a693bd0bbd4a31a457cbd1a8692eeed60c1fb32", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a693bd0bbd4a31a457cbd1a8692eeed60c1fb32/comments", "author": null, "committer": null, "parents": [{"sha": "436c94cb55eb00f2120e95963538331a2469fd6a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/436c94cb55eb00f2120e95963538331a2469fd6a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/436c94cb55eb00f2120e95963538331a2469fd6a"}], "stats": {"total": 23, "additions": 18, "deletions": 5}, "files": [{"sha": "a03ab5dd3eb6536b89db0c476e25f7a11e819ab5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a693bd0bbd4a31a457cbd1a8692eeed60c1fb32/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a693bd0bbd4a31a457cbd1a8692eeed60c1fb32/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8a693bd0bbd4a31a457cbd1a8692eeed60c1fb32", "patch": "@@ -1,3 +1,8 @@\n+Mon Oct  4 16:22:20 1999  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* stmt.c (expand_anon_union_decl): When any of the elements of the\n+\tunion is addressable, so is the entire union.\n+\n Mon Oct  4 11:38:33 1999  Richard Henderson  <rth@cygnus.com>\n \n \t* sbitmap.c (sbitmap_ones): Don't set too many bits."}, {"sha": "4e5a7a8ea8791183a01e7c127649bb842c073017", "filename": "gcc/stmt.c", "status": "modified", "additions": 13, "deletions": 5, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a693bd0bbd4a31a457cbd1a8692eeed60c1fb32/gcc%2Fstmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a693bd0bbd4a31a457cbd1a8692eeed60c1fb32/gcc%2Fstmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstmt.c?ref=8a693bd0bbd4a31a457cbd1a8692eeed60c1fb32", "patch": "@@ -4162,15 +4162,25 @@ expand_anon_union_decl (decl, cleanup, decl_elts)\n {\n   struct nesting *thisblock = current_function == 0 ? 0 : block_stack;\n   rtx x;\n+  tree t;\n \n+  /* If any of the elements are addressable, so is the entire union.  */\n+  for (t = decl_elts; t; t = TREE_CHAIN (t))\n+    if (TREE_ADDRESSABLE (TREE_VALUE (t)))\n+      {\n+\tTREE_ADDRESSABLE (decl) = 1;\n+\tbreak;\n+      }\n+\t  \n   expand_decl (decl);\n   expand_decl_cleanup (decl, cleanup);\n   x = DECL_RTL (decl);\n \n-  while (decl_elts)\n+  /* Go through the elements, assigning RTL to each.  */\n+  for (t = decl_elts; t; t = TREE_CHAIN (t))\n     {\n-      tree decl_elt = TREE_VALUE (decl_elts);\n-      tree cleanup_elt = TREE_PURPOSE (decl_elts);\n+      tree decl_elt = TREE_VALUE (t);\n+      tree cleanup_elt = TREE_PURPOSE (t);\n       enum machine_mode mode = TYPE_MODE (TREE_TYPE (decl_elt));\n \n       /* Propagate the union's alignment to the elements.  */\n@@ -4213,8 +4223,6 @@ expand_anon_union_decl (decl, cleanup, decl_elts)\n \tthisblock->data.block.cleanups\n \t  = temp_tree_cons (decl_elt, cleanup_elt,\n \t\t\t    thisblock->data.block.cleanups);\n-\n-      decl_elts = TREE_CHAIN (decl_elts);\n     }\n }\n \f"}]}