{"sha": "e2eb0806eaed00661cf7bc5b5d60798aa37dc712", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTJlYjA4MDZlYWVkMDA2NjFjZjdiYzViNWQ2MDc5OGFhMzdkYzcxMg==", "commit": {"author": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2015-09-21T18:09:13Z"}, "committer": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2015-09-21T18:09:13Z"}, "message": "re PR fortran/67615 (ICE on using arithmetic if with array instead of scalar)\n\n2015-09-21  Steven G. Kargl  <kargl@gcc.gnu.org>\n\n\tPR fortran/67615\n\t* resolve.c (gfc_resolve_code): Check for scalar expression in \n\tarithmetic-if.\n\n\n2015-09-21  Steven G. Kargl  <kargl@gcc.gnu.org>\n\n\tPR fortran/67615\n\t* gfortran.dg/pr67615.f90: new test.\n\nFrom-SVN: r227981", "tree": {"sha": "61b47e6af47388b34ff18374cf6bc163e53d53aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/61b47e6af47388b34ff18374cf6bc163e53d53aa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e2eb0806eaed00661cf7bc5b5d60798aa37dc712", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2eb0806eaed00661cf7bc5b5d60798aa37dc712", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e2eb0806eaed00661cf7bc5b5d60798aa37dc712", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2eb0806eaed00661cf7bc5b5d60798aa37dc712/comments", "author": null, "committer": null, "parents": [{"sha": "d7b00a16de70d84dce94a1f760265497f3408a7b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7b00a16de70d84dce94a1f760265497f3408a7b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7b00a16de70d84dce94a1f760265497f3408a7b"}], "stats": {"total": 63, "additions": 55, "deletions": 8}, "files": [{"sha": "a3b4442334457bb01602ce20ac0b35b6a8fb0c80", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2eb0806eaed00661cf7bc5b5d60798aa37dc712/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2eb0806eaed00661cf7bc5b5d60798aa37dc712/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=e2eb0806eaed00661cf7bc5b5d60798aa37dc712", "patch": "@@ -1,3 +1,9 @@\n+2015-09-21  Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\tPR fortran/67615\n+\t* resolve.c (gfc_resolve_code): Check for scalar expression in \n+\tarithmetic-if.\n+\n 2015-09-17  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/52846"}, {"sha": "da8aaa1ae7ba2bbafdd5a3b51d567edce0f2df68", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 11, "deletions": 8, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2eb0806eaed00661cf7bc5b5d60798aa37dc712/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2eb0806eaed00661cf7bc5b5d60798aa37dc712/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=e2eb0806eaed00661cf7bc5b5d60798aa37dc712", "patch": "@@ -10377,15 +10377,18 @@ gfc_resolve_code (gfc_code *code, gfc_namespace *ns)\n \t  }\n \n \tcase EXEC_ARITHMETIC_IF:\n-\t  if (t\n-\t      && code->expr1->ts.type != BT_INTEGER\n-\t      && code->expr1->ts.type != BT_REAL)\n-\t    gfc_error (\"Arithmetic IF statement at %L requires a numeric \"\n-\t\t       \"expression\", &code->expr1->where);\n+\t  {\n+\t    gfc_expr *e = code->expr1;\n \n-\t  resolve_branch (code->label1, code);\n-\t  resolve_branch (code->label2, code);\n-\t  resolve_branch (code->label3, code);\n+\t    if (t && (e->rank > 0\n+\t\t      || !(e->ts.type == BT_REAL || e->ts.type == BT_INTEGER)))\n+\t      gfc_error (\"Arithmetic IF statement at %L requires a scalar \"\n+\t\t\t \"REAL or INTEGER expression\", &code->expr1->where);\n+\n+\t    resolve_branch (code->label1, code);\n+\t    resolve_branch (code->label2, code);\n+\t    resolve_branch (code->label3, code);\n+\t  }\n \t  break;\n \n \tcase EXEC_IF:"}, {"sha": "8e642a852a9f6f4baf60f0feaa5f0b9c7f426b64", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2eb0806eaed00661cf7bc5b5d60798aa37dc712/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2eb0806eaed00661cf7bc5b5d60798aa37dc712/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e2eb0806eaed00661cf7bc5b5d60798aa37dc712", "patch": "@@ -1,3 +1,8 @@\n+2015-09-21  Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\tPR fortran/67615\n+\t* gfortran.dg/pr67615.f90: new test.\n+\n 2015-09-21  Jeff Law  <law@redhat.com>\n \n \t* gcc.target/h8300/andsi3_ashift_n_lower.c: New test."}, {"sha": "fb95958007fcc0691c2b4ff7d23126f9b138c22b", "filename": "gcc/testsuite/gfortran.dg/pr67615.f90", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2eb0806eaed00661cf7bc5b5d60798aa37dc712/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr67615.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2eb0806eaed00661cf7bc5b5d60798aa37dc712/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr67615.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr67615.f90?ref=e2eb0806eaed00661cf7bc5b5d60798aa37dc712", "patch": "@@ -0,0 +1,33 @@\n+! { dg-do compile }\n+! { dg-options \"-std=legacy\" }\n+! PR fortran/67615\n+!\n+program foo\n+\n+   implicit none\n+\n+   integer i(2), j\n+   real x\n+   complex z\n+ \n+   j = 2\n+   if (j) 10, 20, 30\n+\n+   x = -1\n+   if (x) 10, 20, 30\n+\n+   z = (1,2)\n+   if (z) 10, 20, 30                   ! { dg-error \"Arithmetic IF statement\" }\n+\n+   i = [1, 2]\n+   if (i) 10, 20, 30                   ! { dg-error \"Arithmetic IF statement\" }\n+\n+   if ( [1] ) 10, 20, 30               ! { dg-error \"Arithmetic IF statement\" }\n+   if ( [1, -1] ) 10, 20, 30           ! { dg-error \"Arithmetic IF statement\" }\n+   if ( [real :: 1, -1] ) 10, 20, 30   ! { dg-error \"Arithmetic IF statement\" }\n+\n+10 stop\n+20 stop\n+30 stop\n+\n+end program foo"}]}