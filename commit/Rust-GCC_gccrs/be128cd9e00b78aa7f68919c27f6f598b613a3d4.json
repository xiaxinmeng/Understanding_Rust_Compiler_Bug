{"sha": "be128cd9e00b78aa7f68919c27f6f598b613a3d4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmUxMjhjZDllMDBiNzhhYTdmNjg5MTljMjdmNmY1OThiNjEzYTNkNA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@vlsi1.ultra.nyu.edu", "date": "2001-06-02T10:52:11Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "2001-06-02T10:52:11Z"}, "message": "except.c (expand_builtin_frob_return_addr): Add missing call to convert_memory_address #ifdef POINTERS_EXTEND_UNSIGNED.\n\n\t* except.c (expand_builtin_frob_return_addr): Add missing call\n\tto convert_memory_address #ifdef POINTERS_EXTEND_UNSIGNED.\n\t(expand_builtin_eh_return): Likewise.\n\t(expand_eh_return): Clean up ptr_mode != Pmode cases.\n\nFrom-SVN: r42793", "tree": {"sha": "13b87e1a23a6223b689ee8509885db17766b0591", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/13b87e1a23a6223b689ee8509885db17766b0591"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/be128cd9e00b78aa7f68919c27f6f598b613a3d4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be128cd9e00b78aa7f68919c27f6f598b613a3d4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be128cd9e00b78aa7f68919c27f6f598b613a3d4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be128cd9e00b78aa7f68919c27f6f598b613a3d4/comments", "author": null, "committer": null, "parents": [{"sha": "87596d9c92af76d5d12d00b61a6006e2b879487d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87596d9c92af76d5d12d00b61a6006e2b879487d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/87596d9c92af76d5d12d00b61a6006e2b879487d"}], "stats": {"total": 30, "additions": 17, "deletions": 13}, "files": [{"sha": "795c2bafeb65ae26a0a2c1a8ff8def4b12840bf5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be128cd9e00b78aa7f68919c27f6f598b613a3d4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be128cd9e00b78aa7f68919c27f6f598b613a3d4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=be128cd9e00b78aa7f68919c27f6f598b613a3d4", "patch": "@@ -1,3 +1,10 @@\n+Sat Jun  2 06:53:50 2001  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+\n+\t* except.c (expand_builtin_frob_return_addr): Add missing call\n+\tto convert_memory_address #ifdef POINTERS_EXTEND_UNSIGNED.\n+\t(expand_builtin_eh_return): Likewise.\n+\t(expand_eh_return): Clean up ptr_mode != Pmode cases.\n+\n 2001-06-01  Jan van Male  <jan.vanmale@fenk.wau.nl>\n \n \t* doc/invoke.texi: Remove references to papers about sequence points"}, {"sha": "e59afc681f58147b4f680eb87c3e9a8ea4128ccd", "filename": "gcc/except.c", "status": "modified", "additions": 10, "deletions": 13, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be128cd9e00b78aa7f68919c27f6f598b613a3d4/gcc%2Fexcept.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be128cd9e00b78aa7f68919c27f6f598b613a3d4/gcc%2Fexcept.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexcept.c?ref=be128cd9e00b78aa7f68919c27f6f598b613a3d4", "patch": "@@ -2968,6 +2968,10 @@ expand_builtin_frob_return_addr (addr_tree)\n {\n   rtx addr = expand_expr (addr_tree, NULL_RTX, Pmode, 0);\n \n+#ifdef POINTERS_EXTEND_UNSIGNED\n+  addr = convert_memory_address (Pmode, addr);\n+#endif\n+\n #ifdef RETURN_ADDR_OFFSET\n   addr = force_reg (Pmode, addr);\n   addr = plus_constant (addr, -RETURN_ADDR_OFFSET);\n@@ -2988,6 +2992,11 @@ expand_builtin_eh_return (stackadj_tree, handler_tree)\n   stackadj = expand_expr (stackadj_tree, cfun->eh->ehr_stackadj, VOIDmode, 0);\n   handler = expand_expr (handler_tree, cfun->eh->ehr_handler, VOIDmode, 0);\n \n+#ifdef POINTERS_EXTEND_UNSIGNED\n+  stackadj = convert_memory_address (Pmode, stackadj);\n+  handler = convert_memory_address (Pmode, handler);\n+#endif\n+\n   if (! cfun->eh->ehr_label)\n     {\n       cfun->eh->ehr_stackadj = copy_to_reg (stackadj);\n@@ -3035,8 +3044,6 @@ expand_eh_return ()\n   else\n #endif\n     {\n-      rtx handler;\n-\n       ra = EH_RETURN_HANDLER_RTX;\n       if (! ra)\n \t{\n@@ -3045,17 +3052,7 @@ expand_eh_return ()\n \t}\n \n       emit_move_insn (sa, cfun->eh->ehr_stackadj);\n-\n-      handler = cfun->eh->ehr_handler;\n-      if (GET_MODE (ra) != Pmode)\n-\t{\n-#ifdef POINTERS_EXTEND_UNSIGNED\n-\t  handler = convert_memory_address (GET_MODE (ra), handler);\n-#else\n-\t  handler = convert_to_mode (GET_MODE (ra), handler, 0);\n-#endif\n-\t}\n-      emit_move_insn (ra, handler);\n+      emit_move_insn (ra, cfun->eh->ehr_handler);\n     }\n \n   emit_label (around_label);"}]}