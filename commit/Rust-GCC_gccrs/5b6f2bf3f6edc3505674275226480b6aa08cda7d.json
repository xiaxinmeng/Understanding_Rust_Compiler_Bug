{"sha": "5b6f2bf3f6edc3505674275226480b6aa08cda7d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWI2ZjJiZjNmNmVkYzM1MDU2NzQyNzUyMjY0ODBiNmFhMDhjZGE3ZA==", "commit": {"author": {"name": "Chung-Ju Wu", "email": "jasonwucj@gmail.com", "date": "2018-04-02T01:55:53Z"}, "committer": {"name": "Chung-Ju Wu", "email": "jasonwucj@gcc.gnu.org", "date": "2018-04-02T01:55:53Z"}, "message": "[NDS32] Implement TARGET_CANONICALIZE_COMPARISON for specific cases.\n\ngcc/\n\t* config/nds32/nds32.c (TARGET_CANONICALIZE_COMPARISON): Define.\n\t(nds32_canonicalize_comparison): New function.\n\nFrom-SVN: r259004", "tree": {"sha": "328e32c28f29f5795eb413a00068808dfec8f404", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/328e32c28f29f5795eb413a00068808dfec8f404"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5b6f2bf3f6edc3505674275226480b6aa08cda7d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b6f2bf3f6edc3505674275226480b6aa08cda7d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5b6f2bf3f6edc3505674275226480b6aa08cda7d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b6f2bf3f6edc3505674275226480b6aa08cda7d/comments", "author": {"login": "jasonwucj", "id": 5520732, "node_id": "MDQ6VXNlcjU1MjA3MzI=", "avatar_url": "https://avatars.githubusercontent.com/u/5520732?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jasonwucj", "html_url": "https://github.com/jasonwucj", "followers_url": "https://api.github.com/users/jasonwucj/followers", "following_url": "https://api.github.com/users/jasonwucj/following{/other_user}", "gists_url": "https://api.github.com/users/jasonwucj/gists{/gist_id}", "starred_url": "https://api.github.com/users/jasonwucj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jasonwucj/subscriptions", "organizations_url": "https://api.github.com/users/jasonwucj/orgs", "repos_url": "https://api.github.com/users/jasonwucj/repos", "events_url": "https://api.github.com/users/jasonwucj/events{/privacy}", "received_events_url": "https://api.github.com/users/jasonwucj/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c60246724290632895a42fc6e56ed159bc73055a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c60246724290632895a42fc6e56ed159bc73055a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c60246724290632895a42fc6e56ed159bc73055a"}], "stats": {"total": 47, "additions": 47, "deletions": 0}, "files": [{"sha": "187ec0b53b5734d9ad28a15f8529e00ef39dfd94", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b6f2bf3f6edc3505674275226480b6aa08cda7d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b6f2bf3f6edc3505674275226480b6aa08cda7d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5b6f2bf3f6edc3505674275226480b6aa08cda7d", "patch": "@@ -1,3 +1,8 @@\n+2018-04-02  Chung-Ju Wu  <jasonwucj@gmail.com>\n+\n+\t* config/nds32/nds32.c (TARGET_CANONICALIZE_COMPARISON): Define.\n+\t(nds32_canonicalize_comparison): New function.\n+\n 2018-04-01  Chung-Ju Wu  <jasonwucj@gmail.com>\n \t    Kito Cheng  <kito.cheng@gmail.com>\n \t    Kuan-Lin Chen <kuanlinchentw@gmail.com>"}, {"sha": "06a59beed26479067169b7ef1f3859ad5109d09e", "filename": "gcc/config/nds32/nds32.c", "status": "modified", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b6f2bf3f6edc3505674275226480b6aa08cda7d/gcc%2Fconfig%2Fnds32%2Fnds32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b6f2bf3f6edc3505674275226480b6aa08cda7d/gcc%2Fconfig%2Fnds32%2Fnds32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnds32%2Fnds32.c?ref=5b6f2bf3f6edc3505674275226480b6aa08cda7d", "patch": "@@ -2149,6 +2149,45 @@ nds32_legitimate_address_p (machine_mode mode, rtx x, bool strict)\n     }\n }\n \n+\f\n+/* Condition Code Status.  */\n+\n+/* -- Representation of condition codes using registers.  */\n+\n+static void\n+nds32_canonicalize_comparison (int *code,\n+\t\t\t       rtx *op0 ATTRIBUTE_UNUSED,\n+\t\t\t       rtx *op1,\n+\t\t\t       bool op0_preserve_value ATTRIBUTE_UNUSED)\n+{\n+  /* When the instruction combination pass tries to combine a comparison insn\n+     with its previous insns, it also transforms the operator in order to\n+     minimize its constant field.  For example, it tries to transform a\n+     comparison insn from\n+       (set (reg:SI 54)\n+\t   (ltu:SI (reg:SI 52)\n+\t       (const_int 10 [0xa])))\n+     to\n+       (set (reg:SI 54)\n+\t   (leu:SI (reg:SI 52)\n+\t       (const_int 9 [0x9])))\n+\n+     However, the nds32 target only provides instructions supporting the LTU\n+     operation directly, and the implementation of the pattern \"cbranchsi4\"\n+     only expands the LTU form.  In order to handle the non-LTU operations\n+     generated from passes other than the RTL expansion pass, we have to\n+     implement this hook to revert those changes.  Since we only expand the LTU\n+     operator in the RTL expansion pass, we might only need to handle the LEU\n+     case, unless we find other optimization passes perform more aggressive\n+     transformations.  */\n+\n+  if (*code == LEU && CONST_INT_P (*op1))\n+    {\n+      *op1 = gen_int_mode (INTVAL (*op1) + 1, SImode);\n+      *code = LTU;\n+    }\n+}\n+\n \f\n /* Describing Relative Costs of Operations.  */\n \n@@ -3767,6 +3806,9 @@ nds32_target_alignment (rtx_insn *label)\n \n /* -- Representation of condition codes using registers.  */\n \n+#undef TARGET_CANONICALIZE_COMPARISON\n+#define TARGET_CANONICALIZE_COMPARISON nds32_canonicalize_comparison\n+\n /* -- Macros to control conditional execution.  */\n \n \f"}]}