{"sha": "ac5b7972ab74cf9c49c95ae311321e4b407313cd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWM1Yjc5NzJhYjc0Y2Y5YzQ5Yzk1YWUzMTEzMjFlNGI0MDczMTNjZA==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@unitus.it", "date": "2003-04-26T08:13:35Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2003-04-26T08:13:35Z"}, "message": "streambuf.tcc (__copy_streambufs): Don't use in_avail(), simplify.\n\n2003-04-26  Paolo Carlini  <pcarlini@unitus.it>\n\n\t* include/bits/streambuf.tcc (__copy_streambufs): Don't\n\tuse in_avail(), simplify.\n\n2003-04-26  Paolo Carlini  <pcarlini@unitus.it>\n\n\t* include/std/std_sstream.h (setbuf): don't set _M_buf_size,\n\tin basic_stringbuf it's unused.\n\n\t* include/std/std_sstream.h (underflow): consistently use\n\t_M_in_cur, not gptr().\n\nFrom-SVN: r66100", "tree": {"sha": "3b3a0afc5646c0de8c5b8ddd4583848213227e34", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3b3a0afc5646c0de8c5b8ddd4583848213227e34"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ac5b7972ab74cf9c49c95ae311321e4b407313cd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac5b7972ab74cf9c49c95ae311321e4b407313cd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac5b7972ab74cf9c49c95ae311321e4b407313cd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac5b7972ab74cf9c49c95ae311321e4b407313cd/comments", "author": null, "committer": null, "parents": [{"sha": "04ab0b3e0989aa8f142f3cdb6402724f5d13ab55", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04ab0b3e0989aa8f142f3cdb6402724f5d13ab55", "html_url": "https://github.com/Rust-GCC/gccrs/commit/04ab0b3e0989aa8f142f3cdb6402724f5d13ab55"}], "stats": {"total": 38, "additions": 24, "deletions": 14}, "files": [{"sha": "b78883113012a7585dc6a2b6f571295f8d38b475", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac5b7972ab74cf9c49c95ae311321e4b407313cd/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac5b7972ab74cf9c49c95ae311321e4b407313cd/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=ac5b7972ab74cf9c49c95ae311321e4b407313cd", "patch": "@@ -1,3 +1,16 @@\n+2003-04-26  Paolo Carlini  <pcarlini@unitus.it>\n+\n+\t* include/bits/streambuf.tcc (__copy_streambufs): Don't\n+\tuse in_avail(), simplify.\n+\n+2003-04-26  Paolo Carlini  <pcarlini@unitus.it>\n+\n+\t* include/std/std_sstream.h (setbuf): don't set _M_buf_size,\n+\tin basic_stringbuf it's unused.\n+\t\n+\t* include/std/std_sstream.h (underflow): consistently use\n+\t_M_in_cur, not gptr().\n+\n 2003-04-25  Ranjit Mathew  <rmathew@hotmail.com>\n             Phil Edwards  <pme@gcc.gnu.org>\n \t"}, {"sha": "8623d25c790b7aff20b5f0b376cd14df3743e5f5", "filename": "libstdc++-v3/include/bits/streambuf.tcc", "status": "modified", "additions": 10, "deletions": 12, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac5b7972ab74cf9c49c95ae311321e4b407313cd/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstreambuf.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac5b7972ab74cf9c49c95ae311321e4b407313cd/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstreambuf.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstreambuf.tcc?ref=ac5b7972ab74cf9c49c95ae311321e4b407313cd", "patch": "@@ -188,30 +188,29 @@ namespace std\n       typedef typename _Traits::off_type\toff_type;\n \n       streamsize __ret = 0;\n-      streamsize __in_avail = __sbin->in_avail();\n-      streamsize __xtrct;\n       const off_type __buf_size =\n \t__sbin->_M_buf_size > 0 ? __sbin->_M_buf_size : 1;\n-\n       try \n \t{\n-\t  while (__in_avail != -1)\n+\t  for (;;)\n   \t    {\n- \t      if (__in_avail != 0 && __sbin->_M_in_cur\n-\t\t  && __sbin->_M_in_cur + __in_avail <= __sbin->_M_in_end) \n+\t      streamsize __xtrct;\n+\t      const off_type __avail = __sbin->_M_in_end\n+\t\t                       - __sbin->_M_in_cur;\n+ \t      if (__avail)\n \t\t{\n-\t\t  __xtrct = __sbout->sputn(__sbin->_M_in_cur, __in_avail);\n+\t\t  __xtrct = __sbout->sputn(__sbin->_M_in_cur, __avail);\n \t\t  __ret += __xtrct;\n \t\t  __sbin->_M_in_cur_move(__xtrct);\n-\t\t  if (__xtrct != __in_avail)\n+\t\t  if (__xtrct != __avail)\n \t\t    break;\n \t\t}\n  \t      else \n \t\t{\n \t\t  streamsize __charsread;\n-\t\t  const streamsize __size =\n-\t\t    std::min(__buf_size, off_type(__sbout->_M_out_end -\n-\t\t\t\t\t\t  __sbout->_M_out_cur));\n+\t\t  const off_type __size = std::min(__buf_size,\n+\t\t\t\t\t\t   off_type(__sbout->_M_out_end\n+\t\t\t\t\t\t   - __sbout->_M_out_cur));\n \t\t  if (__size > 1)\n \t\t    {\n \t\t      _CharT* __buf =\n@@ -242,7 +241,6 @@ namespace std\n \t\t}\n  \t      if (_Traits::eq_int_type(__sbin->sgetc(), _Traits::eof()))\n   \t\tbreak;\n- \t      __in_avail = __sbin->in_avail();\n   \t    }\n \t}\n       catch(exception& __fail) "}, {"sha": "6dc47e551563d48d8b805d94967b8fd9ec3711c2", "filename": "libstdc++-v3/include/std/std_sstream.h", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac5b7972ab74cf9c49c95ae311321e4b407313cd/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_sstream.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac5b7972ab74cf9c49c95ae311321e4b407313cd/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_sstream.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_sstream.h?ref=ac5b7972ab74cf9c49c95ae311321e4b407313cd", "patch": "@@ -191,7 +191,7 @@ namespace std\n       underflow()\n       {\n \tif (this->_M_in_cur < this->_M_in_end)\n-\t  return traits_type::to_int_type(*gptr());\n+\t  return traits_type::to_int_type(*this->_M_in_cur);\n \telse\n \t  return traits_type::eof();\n       }\n@@ -230,7 +230,6 @@ namespace std\n \t    \n \t    // Step 2: Use the external array.\n \t    this->_M_buf = __s;\n-\t    this->_M_buf_size = __n;\n \t    _M_really_sync(__s, 0, 0);\n \t  }\n \treturn this;"}]}