{"sha": "d464f8e99ef16ef8eb26f285e54a2d5ce6024c64", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDQ2NGY4ZTk5ZWYxNmVmOGViMjZmMjg1ZTU0YTJkNWNlNjAyNGM2NA==", "commit": {"author": {"name": "Janne Blomqvist", "email": "jblomqvi@cc.hut.fi", "date": "2004-05-16T14:07:58Z"}, "committer": {"name": "Paul Brook", "email": "pbrook@gcc.gnu.org", "date": "2004-05-16T14:07:58Z"}, "message": "write.c (write_logical): Don't print extra blank.\n\n\t* io/write.c (write_logical): Don't print extra blank.\n\t(write_integer): Base field width on kind.\n\t(list_formatted_write): Output initial blank.\n\nCo-Authored-By: Paul Brook <paul@codesourcery.com>\n\nFrom-SVN: r81914", "tree": {"sha": "fc5b18ebbb3380f95f4884f2faff23226c4d27e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fc5b18ebbb3380f95f4884f2faff23226c4d27e6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d464f8e99ef16ef8eb26f285e54a2d5ce6024c64", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d464f8e99ef16ef8eb26f285e54a2d5ce6024c64", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d464f8e99ef16ef8eb26f285e54a2d5ce6024c64", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d464f8e99ef16ef8eb26f285e54a2d5ce6024c64/comments", "author": null, "committer": null, "parents": [{"sha": "000aa32a49ae77b3703599eb9a66b9f7d0ab7032", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/000aa32a49ae77b3703599eb9a66b9f7d0ab7032", "html_url": "https://github.com/Rust-GCC/gccrs/commit/000aa32a49ae77b3703599eb9a66b9f7d0ab7032"}], "stats": {"total": 37, "additions": 33, "deletions": 4}, "files": [{"sha": "05609b4f5b4b15a1a06b13ed322a2236c7f3e15d", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d464f8e99ef16ef8eb26f285e54a2d5ce6024c64/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d464f8e99ef16ef8eb26f285e54a2d5ce6024c64/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=d464f8e99ef16ef8eb26f285e54a2d5ce6024c64", "patch": "@@ -1,3 +1,10 @@\n+2004-05-16  Janne Blomqvist  <jblomqvi@cc.hut.fi>\n+\tPaul Brook  <paul@codesourcery.com>\n+\n+\t* io/write.c (write_logical): Don't print extra blank.\n+\t(write_integer): Base field width on kind.\n+\t(list_formatted_write): Output initial blank.\n+\n 2004-05-16  Janne Blomqvist  <jblomqvi@cc.hut.fi>\n \n \t* io/io.h (flush): Add prototype."}, {"sha": "8e5a3204d86c8be3a2f54c22cfd277ef9996926a", "filename": "libgfortran/io/write.c", "status": "modified", "additions": 26, "deletions": 4, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d464f8e99ef16ef8eb26f285e54a2d5ce6024c64/libgfortran%2Fio%2Fwrite.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d464f8e99ef16ef8eb26f285e54a2d5ce6024c64/libgfortran%2Fio%2Fwrite.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Fwrite.c?ref=d464f8e99ef16ef8eb26f285e54a2d5ce6024c64", "patch": "@@ -875,12 +875,10 @@ write_char (char c)\n \n \n /* write_logical()-- Write a list-directed logical value */\n-/* Default logical output should be L2\n-  according to DEC fortran Manual. */\n+\n static void\n write_logical (const char *source, int length)\n {\n-  write_char (' ');\n   write_char (extract_int (source, length) ? 'T' : 'F');\n }\n \n@@ -893,10 +891,33 @@ write_integer (const char *source, int length)\n   char *p;\n   const char *q;\n   int digits;\n-  int width = 12;\n+  int width;\n \n   q = itoa (extract_int (source, length));\n \n+  switch (length)\n+    {\n+    case 1:\n+      width = 4;\n+      break;\n+\n+    case 2:\n+      width = 6;\n+      break;\n+\n+    case 4:\n+      width = 11;\n+      break;\n+\n+    case 8:\n+      width = 20;\n+      break;\n+\n+    default:\n+      width = 0;\n+      break;\n+    }\n+\n   digits = strlen (q);\n \n   if(width < digits )\n@@ -1039,6 +1060,7 @@ list_formatted_write (bt type, void *p, int len)\n     {\n       g.first_item = 0;\n       char_flag = 0;\n+      write_char (' ');\n     }\n   else\n     {"}]}