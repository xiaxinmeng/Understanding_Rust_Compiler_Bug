{"sha": "07b27384de56ce2f6a93007d018743ef9d5c8cc4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDdiMjczODRkZTU2Y2UyZjZhOTMwMDdkMDE4NzQzZWY5ZDVjOGNjNA==", "commit": {"author": {"name": "Hans-Peter Nilsson", "email": "hp@axis.com", "date": "2021-04-13T02:08:08Z"}, "committer": {"name": "Hans-Peter Nilsson", "email": "hp@axis.com", "date": "2021-04-13T02:21:01Z"}, "message": "gcc.dg/analyzer/data-model-1.c: Inverse xfail for cris-*-*, PR99212\n\nSee PR99212.  Now, cris-elf isn't the only target for which this line\nshows a failure; pru-unknown-elf and m68k-unknown-linux-gnu are two\nothers.  I'll leave adjustments to the respective maintainers, but\ntrivially appending more triplets should work: no extra bracketing needed.\nA specific effective_target specifier would as always be perferable, but I\ncouldn't without accountable effort find out what was the common factor.\n\nBesides cris-elf, sanity-checked for native x86_64-*-linux*.\n\ngcc/testsuite:\n\tPR analyzer/99212\n\t* gcc.dg/analyzer/data-model-1.c (test_45): Inverse xfail at\n\tline 971 for cris-*-*.", "tree": {"sha": "329bbb8ba95fabc4046d403f088d3b674be3f72f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/329bbb8ba95fabc4046d403f088d3b674be3f72f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/07b27384de56ce2f6a93007d018743ef9d5c8cc4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07b27384de56ce2f6a93007d018743ef9d5c8cc4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/07b27384de56ce2f6a93007d018743ef9d5c8cc4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07b27384de56ce2f6a93007d018743ef9d5c8cc4/comments", "author": {"login": "hpataxisdotcom", "id": 80339731, "node_id": "MDQ6VXNlcjgwMzM5NzMx", "avatar_url": "https://avatars.githubusercontent.com/u/80339731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hpataxisdotcom", "html_url": "https://github.com/hpataxisdotcom", "followers_url": "https://api.github.com/users/hpataxisdotcom/followers", "following_url": "https://api.github.com/users/hpataxisdotcom/following{/other_user}", "gists_url": "https://api.github.com/users/hpataxisdotcom/gists{/gist_id}", "starred_url": "https://api.github.com/users/hpataxisdotcom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hpataxisdotcom/subscriptions", "organizations_url": "https://api.github.com/users/hpataxisdotcom/orgs", "repos_url": "https://api.github.com/users/hpataxisdotcom/repos", "events_url": "https://api.github.com/users/hpataxisdotcom/events{/privacy}", "received_events_url": "https://api.github.com/users/hpataxisdotcom/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hpataxisdotcom", "id": 80339731, "node_id": "MDQ6VXNlcjgwMzM5NzMx", "avatar_url": "https://avatars.githubusercontent.com/u/80339731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hpataxisdotcom", "html_url": "https://github.com/hpataxisdotcom", "followers_url": "https://api.github.com/users/hpataxisdotcom/followers", "following_url": "https://api.github.com/users/hpataxisdotcom/following{/other_user}", "gists_url": "https://api.github.com/users/hpataxisdotcom/gists{/gist_id}", "starred_url": "https://api.github.com/users/hpataxisdotcom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hpataxisdotcom/subscriptions", "organizations_url": "https://api.github.com/users/hpataxisdotcom/orgs", "repos_url": "https://api.github.com/users/hpataxisdotcom/repos", "events_url": "https://api.github.com/users/hpataxisdotcom/events{/privacy}", "received_events_url": "https://api.github.com/users/hpataxisdotcom/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "17f3c2b8ac477b07ca0aafbc7d74ba305dc1ee33", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17f3c2b8ac477b07ca0aafbc7d74ba305dc1ee33", "html_url": "https://github.com/Rust-GCC/gccrs/commit/17f3c2b8ac477b07ca0aafbc7d74ba305dc1ee33"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "c0f54637693cf9bc251ac49223e01415f20b3900", "filename": "gcc/testsuite/gcc.dg/analyzer/data-model-1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07b27384de56ce2f6a93007d018743ef9d5c8cc4/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fdata-model-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07b27384de56ce2f6a93007d018743ef9d5c8cc4/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fdata-model-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fanalyzer%2Fdata-model-1.c?ref=07b27384de56ce2f6a93007d018743ef9d5c8cc4", "patch": "@@ -968,8 +968,8 @@ void test_45 (void)\n {\n   struct ubits bits;\n   bits.b0 = 1;\n-  __analyzer_eval (bits.b0 == 1); /* { dg-warning \"TRUE\" \"desired\" { xfail *-*-* } } */\n-  /* { dg-warning \"UNKNOWN\" \"status quo\" { target *-*-* } .-1 } */\n+  __analyzer_eval (bits.b0 == 1); /* { dg-warning \"TRUE\" \"desired, PR99212\" { xfail { ! { cris-*-* } } } } */\n+  /* { dg-warning \"UNKNOWN\" \"status quo, PR99212\" { target { *-*-* } xfail { cris-*-* } } .-1 } */\n   // TODO(xfail): ^^^^\n \n   bits.b456 = 5;"}]}