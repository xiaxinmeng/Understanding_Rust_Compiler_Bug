{"sha": "cba4ea9e2d806571f3724b83cf7fd1437f80a15b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2JhNGVhOWUyZDgwNjU3MWYzNzI0YjgzY2Y3ZmQxNDM3ZjgwYTE1Yg==", "commit": {"author": {"name": "Pitchumani Sivanupandi", "email": "pitchumani.s@atmel.com", "date": "2014-07-11T16:22:10Z"}, "committer": {"name": "Denis Chertykov", "email": "denisc@gcc.gnu.org", "date": "2014-07-11T16:22:10Z"}, "message": "avr-arch.h (avr_mcu_t): Add text section start attribute.\n\n\t* config/avr/avr-arch.h (avr_mcu_t): Add text section start attribute.\n\t* config/avr/avr-devices.c (AVR_MCU): Same.\n\t(avr_mcu_types): add text start value to end of device list.\n\t* config/avr/avr-mcus.def: Add text section start for all devices.\n\t(ata5782): Add new avr5 device.\n\t(ata5831): Same.\n\t* config/avr/avr-tables.opt: Regenerate.\n\t* config/avr/avr.h: Add declaration for text section start handler.\n\t(EXTRA_SPEC_FUNCTIONS): Add text section start handler to SPEC function=\ns.\n\t(LINK_SPEC): Include text section start handler to linker spec.\n\t* config/avr/driver-avr.c (avr_device_to_text_start): New function to\n\tpass -Ttext option to linker if the text section start for the device i=\ns\n\tnot zero.\n\t* config/avr/t-multilib: Regenerate.\n\t* doc/avr-mmcu.texi: Regenerate.\n\nFrom-SVN: r212461", "tree": {"sha": "bd5c7816fc446eba6f0e1ab4f5bb224b94e6868d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bd5c7816fc446eba6f0e1ab4f5bb224b94e6868d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cba4ea9e2d806571f3724b83cf7fd1437f80a15b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cba4ea9e2d806571f3724b83cf7fd1437f80a15b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cba4ea9e2d806571f3724b83cf7fd1437f80a15b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cba4ea9e2d806571f3724b83cf7fd1437f80a15b/comments", "author": null, "committer": null, "parents": [{"sha": "8762d747cacf65ec4e6ca4a4f5be6d0532869381", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8762d747cacf65ec4e6ca4a4f5be6d0532869381", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8762d747cacf65ec4e6ca4a4f5be6d0532869381"}], "stats": {"total": 920, "additions": 491, "deletions": 429}, "files": [{"sha": "e20635fe864e9475e70cea3f70496cc4e85eb024", "filename": "gcc/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cba4ea9e2d806571f3724b83cf7fd1437f80a15b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cba4ea9e2d806571f3724b83cf7fd1437f80a15b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cba4ea9e2d806571f3724b83cf7fd1437f80a15b", "patch": "@@ -1,3 +1,23 @@\n+2014-07-11  Pitchumani Sivanupandi  <pitchumani.s@atmel.com>\n+\n+\t* config/avr/avr-arch.h (avr_mcu_t): Add text section start attribute.\n+\t* config/avr/avr-devices.c (AVR_MCU): Same.\n+\t(avr_mcu_types): add text start value to end of device list.\n+\t* config/avr/avr-mcus.def: Add text section start for all devices.\n+\t(ata5782): Add new avr5 device.\n+\t(ata5831): Same.\n+\t* config/avr/avr-tables.opt: Regenerate.\n+\t* config/avr/avr.h: Add declaration for text section start handler.\n+\t(EXTRA_SPEC_FUNCTIONS): Add text section start handler to SPEC function=\n+s.\n+\t(LINK_SPEC): Include text section start handler to linker spec.\n+\t* config/avr/driver-avr.c (avr_device_to_text_start): New function to\n+\tpass -Ttext option to linker if the text section start for the device i=\n+s\n+\tnot zero.\n+\t* config/avr/t-multilib: Regenerate.\n+\t* doc/avr-mmcu.texi: Regenerate.\n+\n 2014-07-11  David Edelsohn  <dje.gcc@gmail.com>\n \n \t* config/rs6000/aix51.h (LINK_SPEC): Remove -bnodelcsect."}, {"sha": "34484ff41e86e9e631f95868fe0b051a5c56c368", "filename": "gcc/config/avr/avr-arch.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cba4ea9e2d806571f3724b83cf7fd1437f80a15b/gcc%2Fconfig%2Favr%2Favr-arch.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cba4ea9e2d806571f3724b83cf7fd1437f80a15b/gcc%2Fconfig%2Favr%2Favr-arch.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr-arch.h?ref=cba4ea9e2d806571f3724b83cf7fd1437f80a15b", "patch": "@@ -109,6 +109,9 @@ typedef struct\n   /* Start of data section.  */\n   int data_section_start;\n \n+  /* Start of text section. */\n+  int text_section_start;\n+\n   /* Number of 64k segments in the flash.  */\n   int n_flash;\n "}, {"sha": "9044d713d89d7b00d438936abb319ce8280b2cd3", "filename": "gcc/config/avr/avr-devices.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cba4ea9e2d806571f3724b83cf7fd1437f80a15b/gcc%2Fconfig%2Favr%2Favr-devices.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cba4ea9e2d806571f3724b83cf7fd1437f80a15b/gcc%2Fconfig%2Favr%2Favr-devices.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr-devices.c?ref=cba4ea9e2d806571f3724b83cf7fd1437f80a15b", "patch": "@@ -104,11 +104,11 @@ avr_texinfo[] =\n const avr_mcu_t\n avr_mcu_types[] =\n {\n-#define AVR_MCU(NAME, ARCH, DEV_ATTRIBUTE, MACRO, DATA_SEC, N_FLASH, LIBNAME)\\\n-  { NAME, ARCH, DEV_ATTRIBUTE, MACRO, DATA_SEC, N_FLASH, LIBNAME },\n+#define AVR_MCU(NAME, ARCH, DEV_ATTRIBUTE, MACRO, DATA_SEC, TEXT_SEC, N_FLASH, LIBNAME)\\\n+  { NAME, ARCH, DEV_ATTRIBUTE, MACRO, DATA_SEC, TEXT_SEC, N_FLASH, LIBNAME },\n #include \"avr-mcus.def\"\n #undef AVR_MCU\n     /* End of list.  */\n-  { NULL, ARCH_UNKNOWN, AVR_ISA_NONE, NULL, 0, 0, NULL }\n+  { NULL, ARCH_UNKNOWN, AVR_ISA_NONE, NULL, 0, 0, 0, NULL }\n };\n "}, {"sha": "0a6d7c8c9ab2b95464b8377a96287dab4e54a49d", "filename": "gcc/config/avr/avr-mcus.def", "status": "modified", "additions": 260, "deletions": 256, "changes": 516, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cba4ea9e2d806571f3724b83cf7fd1437f80a15b/gcc%2Fconfig%2Favr%2Favr-mcus.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cba4ea9e2d806571f3724b83cf7fd1437f80a15b/gcc%2Fconfig%2Favr%2Favr-mcus.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr-mcus.def?ref=cba4ea9e2d806571f3724b83cf7fd1437f80a15b", "patch": "@@ -49,6 +49,8 @@\n \n        DATA_SEC      First address of SRAM, used in  -Tdata=  by the driver.\n \n+       TEXT_SEC      First address of Flash, used in -Ttext= by the driver.\n+\n        N_FLASH       Number of 64 KiB flash segments, rounded up.\n \n        LIBRARY_NAME  Used by the driver to linke startup code from avr-libc\n@@ -57,273 +59,275 @@\n    \"avr2\" must be first for the \"0\" default to work as intended.  */\n \n /* Classic, <= 8K.  */\n-AVR_MCU (\"avr2\",                 ARCH_AVR2, AVR_ERRATA_SKIP, NULL,                     0x0060, 6, \"s8515\")\n-AVR_MCU (\"at90s2313\",            ARCH_AVR2, AVR_SHORT_SP, \"__AVR_AT90S2313__\",         0x0060, 1, \"s2313\")\n-AVR_MCU (\"at90s2323\",            ARCH_AVR2, AVR_SHORT_SP, \"__AVR_AT90S2323__\",         0x0060, 1, \"s2323\")\n-AVR_MCU (\"at90s2333\",            ARCH_AVR2, AVR_SHORT_SP, \"__AVR_AT90S2333__\",         0x0060, 1, \"s2333\")\n-AVR_MCU (\"at90s2343\",            ARCH_AVR2, AVR_SHORT_SP, \"__AVR_AT90S2343__\",         0x0060, 1, \"s2343\")\n-AVR_MCU (\"attiny22\",             ARCH_AVR2, AVR_SHORT_SP, \"__AVR_ATtiny22__\",          0x0060, 1, \"tn22\")\n-AVR_MCU (\"attiny26\",             ARCH_AVR2, AVR_SHORT_SP, \"__AVR_ATtiny26__\",          0x0060, 1, \"tn26\")\n-AVR_MCU (\"at90s4414\",            ARCH_AVR2, AVR_ISA_NONE, \"__AVR_AT90S4414__\",         0x0060, 1, \"s4414\")\n-AVR_MCU (\"at90s4433\",            ARCH_AVR2, AVR_SHORT_SP, \"__AVR_AT90S4433__\",         0x0060, 1, \"s4433\")\n-AVR_MCU (\"at90s4434\",            ARCH_AVR2, AVR_ISA_NONE, \"__AVR_AT90S4434__\",         0x0060, 1, \"s4434\")\n-AVR_MCU (\"at90s8515\",            ARCH_AVR2, AVR_ERRATA_SKIP, \"__AVR_AT90S8515__\",      0x0060, 1, \"s8515\")\n-AVR_MCU (\"at90c8534\",            ARCH_AVR2, AVR_ISA_NONE, \"__AVR_AT90C8534__\",         0x0060, 1, \"c8534\")\n-AVR_MCU (\"at90s8535\",            ARCH_AVR2, AVR_ISA_NONE, \"__AVR_AT90S8535__\",         0x0060, 1, \"s8535\")\n+AVR_MCU (\"avr2\",                 ARCH_AVR2, AVR_ERRATA_SKIP, NULL,                     0x0060, 0x0, 6, \"s8515\")\n+AVR_MCU (\"at90s2313\",            ARCH_AVR2, AVR_SHORT_SP, \"__AVR_AT90S2313__\",         0x0060, 0x0, 1, \"s2313\")\n+AVR_MCU (\"at90s2323\",            ARCH_AVR2, AVR_SHORT_SP, \"__AVR_AT90S2323__\",         0x0060, 0x0, 1, \"s2323\")\n+AVR_MCU (\"at90s2333\",            ARCH_AVR2, AVR_SHORT_SP, \"__AVR_AT90S2333__\",         0x0060, 0x0, 1, \"s2333\")\n+AVR_MCU (\"at90s2343\",            ARCH_AVR2, AVR_SHORT_SP, \"__AVR_AT90S2343__\",         0x0060, 0x0, 1, \"s2343\")\n+AVR_MCU (\"attiny22\",             ARCH_AVR2, AVR_SHORT_SP, \"__AVR_ATtiny22__\",          0x0060, 0x0, 1, \"tn22\")\n+AVR_MCU (\"attiny26\",             ARCH_AVR2, AVR_SHORT_SP, \"__AVR_ATtiny26__\",          0x0060, 0x0, 1, \"tn26\")\n+AVR_MCU (\"at90s4414\",            ARCH_AVR2, AVR_ISA_NONE, \"__AVR_AT90S4414__\",         0x0060, 0x0, 1, \"s4414\")\n+AVR_MCU (\"at90s4433\",            ARCH_AVR2, AVR_SHORT_SP, \"__AVR_AT90S4433__\",         0x0060, 0x0, 1, \"s4433\")\n+AVR_MCU (\"at90s4434\",            ARCH_AVR2, AVR_ISA_NONE, \"__AVR_AT90S4434__\",         0x0060, 0x0, 1, \"s4434\")\n+AVR_MCU (\"at90s8515\",            ARCH_AVR2, AVR_ERRATA_SKIP, \"__AVR_AT90S8515__\",      0x0060, 0x0, 1, \"s8515\")\n+AVR_MCU (\"at90c8534\",            ARCH_AVR2, AVR_ISA_NONE, \"__AVR_AT90C8534__\",         0x0060, 0x0, 1, \"c8534\")\n+AVR_MCU (\"at90s8535\",            ARCH_AVR2, AVR_ISA_NONE, \"__AVR_AT90S8535__\",         0x0060, 0x0, 1, \"s8535\")\n /* Classic + MOVW, <= 8K.  */\n-AVR_MCU (\"avr25\",                ARCH_AVR25, AVR_ISA_NONE, NULL,                       0x0060, 1, \"tn85\")\n-AVR_MCU (\"ata5272\",              ARCH_AVR25, AVR_ISA_NONE, \"__AVR_ATA5272__\",          0x0100, 1, \"a5272\")\n-AVR_MCU (\"ata6616c\",             ARCH_AVR25, AVR_ISA_NONE, \"__AVR_ATA6616C__\",         0x0100, 1, \"a6616c\")\n-AVR_MCU (\"attiny13\",             ARCH_AVR25, AVR_SHORT_SP, \"__AVR_ATtiny13__\",         0x0060, 1, \"tn13\")\n-AVR_MCU (\"attiny13a\",            ARCH_AVR25, AVR_SHORT_SP, \"__AVR_ATtiny13A__\",        0x0060, 1, \"tn13a\")\n-AVR_MCU (\"attiny2313\",           ARCH_AVR25, AVR_SHORT_SP, \"__AVR_ATtiny2313__\",       0x0060, 1, \"tn2313\")\n-AVR_MCU (\"attiny2313a\",          ARCH_AVR25, AVR_SHORT_SP, \"__AVR_ATtiny2313A__\",      0x0060, 1, \"tn2313a\")\n-AVR_MCU (\"attiny24\",             ARCH_AVR25, AVR_SHORT_SP, \"__AVR_ATtiny24__\",         0x0060, 1, \"tn24\")\n-AVR_MCU (\"attiny24a\",            ARCH_AVR25, AVR_SHORT_SP, \"__AVR_ATtiny24A__\",        0x0060, 1, \"tn24a\")\n-AVR_MCU (\"attiny4313\",           ARCH_AVR25, AVR_ISA_NONE, \"__AVR_ATtiny4313__\",       0x0060, 1, \"tn4313\")\n-AVR_MCU (\"attiny44\",             ARCH_AVR25, AVR_ISA_NONE, \"__AVR_ATtiny44__\",         0x0060, 1, \"tn44\")\n-AVR_MCU (\"attiny44a\",            ARCH_AVR25, AVR_ISA_NONE, \"__AVR_ATtiny44A__\",        0x0060, 1, \"tn44a\")\n-AVR_MCU (\"attiny441\",            ARCH_AVR25, AVR_ISA_NONE, \"__AVR_ATtiny441__\",        0x0100, 1, \"tn441\")\n-AVR_MCU (\"attiny84\",             ARCH_AVR25, AVR_ISA_NONE, \"__AVR_ATtiny84__\",         0x0060, 1, \"tn84\")\n-AVR_MCU (\"attiny84a\",            ARCH_AVR25, AVR_ISA_NONE, \"__AVR_ATtiny84A__\",        0x0060, 1, \"tn84\")\n-AVR_MCU (\"attiny25\",             ARCH_AVR25, AVR_SHORT_SP, \"__AVR_ATtiny25__\",         0x0060, 1, \"tn25\")\n-AVR_MCU (\"attiny45\",             ARCH_AVR25, AVR_ISA_NONE, \"__AVR_ATtiny45__\",         0x0060, 1, \"tn45\")\n-AVR_MCU (\"attiny85\",             ARCH_AVR25, AVR_ISA_NONE, \"__AVR_ATtiny85__\",         0x0060, 1, \"tn85\")\n-AVR_MCU (\"attiny261\",            ARCH_AVR25, AVR_SHORT_SP, \"__AVR_ATtiny261__\",        0x0060, 1, \"tn261\")\n-AVR_MCU (\"attiny261a\",           ARCH_AVR25, AVR_SHORT_SP, \"__AVR_ATtiny261A__\",       0x0060, 1, \"tn261a\")\n-AVR_MCU (\"attiny461\",            ARCH_AVR25, AVR_ISA_NONE, \"__AVR_ATtiny461__\",        0x0060, 1, \"tn461\")\n-AVR_MCU (\"attiny461a\",           ARCH_AVR25, AVR_ISA_NONE, \"__AVR_ATtiny461A__\",       0x0060, 1, \"tn461a\")\n-AVR_MCU (\"attiny861\",            ARCH_AVR25, AVR_ISA_NONE, \"__AVR_ATtiny861__\",        0x0060, 1, \"tn861\")\n-AVR_MCU (\"attiny861a\",           ARCH_AVR25, AVR_ISA_NONE, \"__AVR_ATtiny861A__\",       0x0060, 1, \"tn861a\")\n-AVR_MCU (\"attiny43u\",            ARCH_AVR25, AVR_ISA_NONE, \"__AVR_ATtiny43U__\",        0x0060, 1, \"tn43u\")\n-AVR_MCU (\"attiny87\",             ARCH_AVR25, AVR_ISA_NONE, \"__AVR_ATtiny87__\",         0x0100, 1, \"tn87\")\n-AVR_MCU (\"attiny48\",             ARCH_AVR25, AVR_ISA_NONE, \"__AVR_ATtiny48__\",         0x0100, 1, \"tn48\")\n-AVR_MCU (\"attiny88\",             ARCH_AVR25, AVR_ISA_NONE, \"__AVR_ATtiny88__\",         0x0100, 1, \"tn88\")\n-AVR_MCU (\"attiny828\",            ARCH_AVR25, AVR_ISA_NONE, \"__AVR_ATtiny828__\",        0x0100, 1, \"tn828\")\n-AVR_MCU (\"attiny841\",            ARCH_AVR25, AVR_ISA_NONE, \"__AVR_ATtiny841__\",        0x0100, 1, \"tn841\")\n-AVR_MCU (\"at86rf401\",            ARCH_AVR25, AVR_ISA_NONE, \"__AVR_AT86RF401__\",        0x0060, 1, \"86401\")\n+AVR_MCU (\"avr25\",                ARCH_AVR25, AVR_ISA_NONE, NULL,                       0x0060, 0x0, 1, \"tn85\")\n+AVR_MCU (\"ata5272\",              ARCH_AVR25, AVR_ISA_NONE, \"__AVR_ATA5272__\",          0x0100, 0x0, 1, \"a5272\")\n+AVR_MCU (\"ata6616c\",             ARCH_AVR25, AVR_ISA_NONE, \"__AVR_ATA6616C__\",         0x0100, 0x0, 1, \"a6616c\")\n+AVR_MCU (\"attiny13\",             ARCH_AVR25, AVR_SHORT_SP, \"__AVR_ATtiny13__\",         0x0060, 0x0, 1, \"tn13\")\n+AVR_MCU (\"attiny13a\",            ARCH_AVR25, AVR_SHORT_SP, \"__AVR_ATtiny13A__\",        0x0060, 0x0, 1, \"tn13a\")\n+AVR_MCU (\"attiny2313\",           ARCH_AVR25, AVR_SHORT_SP, \"__AVR_ATtiny2313__\",       0x0060, 0x0, 1, \"tn2313\")\n+AVR_MCU (\"attiny2313a\",          ARCH_AVR25, AVR_SHORT_SP, \"__AVR_ATtiny2313A__\",      0x0060, 0x0, 1, \"tn2313a\")\n+AVR_MCU (\"attiny24\",             ARCH_AVR25, AVR_SHORT_SP, \"__AVR_ATtiny24__\",         0x0060, 0x0, 1, \"tn24\")\n+AVR_MCU (\"attiny24a\",            ARCH_AVR25, AVR_SHORT_SP, \"__AVR_ATtiny24A__\",        0x0060, 0x0, 1, \"tn24a\")\n+AVR_MCU (\"attiny4313\",           ARCH_AVR25, AVR_ISA_NONE, \"__AVR_ATtiny4313__\",       0x0060, 0x0, 1, \"tn4313\")\n+AVR_MCU (\"attiny44\",             ARCH_AVR25, AVR_ISA_NONE, \"__AVR_ATtiny44__\",         0x0060, 0x0, 1, \"tn44\")\n+AVR_MCU (\"attiny44a\",            ARCH_AVR25, AVR_ISA_NONE, \"__AVR_ATtiny44A__\",        0x0060, 0x0, 1, \"tn44a\")\n+AVR_MCU (\"attiny441\",            ARCH_AVR25, AVR_ISA_NONE, \"__AVR_ATtiny441__\",        0x0100, 0x0, 1, \"tn441\")\n+AVR_MCU (\"attiny84\",             ARCH_AVR25, AVR_ISA_NONE, \"__AVR_ATtiny84__\",         0x0060, 0x0, 1, \"tn84\")\n+AVR_MCU (\"attiny84a\",            ARCH_AVR25, AVR_ISA_NONE, \"__AVR_ATtiny84A__\",        0x0060, 0x0, 1, \"tn84\")\n+AVR_MCU (\"attiny25\",             ARCH_AVR25, AVR_SHORT_SP, \"__AVR_ATtiny25__\",         0x0060, 0x0, 1, \"tn25\")\n+AVR_MCU (\"attiny45\",             ARCH_AVR25, AVR_ISA_NONE, \"__AVR_ATtiny45__\",         0x0060, 0x0, 1, \"tn45\")\n+AVR_MCU (\"attiny85\",             ARCH_AVR25, AVR_ISA_NONE, \"__AVR_ATtiny85__\",         0x0060, 0x0, 1, \"tn85\")\n+AVR_MCU (\"attiny261\",            ARCH_AVR25, AVR_SHORT_SP, \"__AVR_ATtiny261__\",        0x0060, 0x0, 1, \"tn261\")\n+AVR_MCU (\"attiny261a\",           ARCH_AVR25, AVR_SHORT_SP, \"__AVR_ATtiny261A__\",       0x0060, 0x0, 1, \"tn261a\")\n+AVR_MCU (\"attiny461\",            ARCH_AVR25, AVR_ISA_NONE, \"__AVR_ATtiny461__\",        0x0060, 0x0, 1, \"tn461\")\n+AVR_MCU (\"attiny461a\",           ARCH_AVR25, AVR_ISA_NONE, \"__AVR_ATtiny461A__\",       0x0060, 0x0, 1, \"tn461a\")\n+AVR_MCU (\"attiny861\",            ARCH_AVR25, AVR_ISA_NONE, \"__AVR_ATtiny861__\",        0x0060, 0x0, 1, \"tn861\")\n+AVR_MCU (\"attiny861a\",           ARCH_AVR25, AVR_ISA_NONE, \"__AVR_ATtiny861A__\",       0x0060, 0x0, 1, \"tn861a\")\n+AVR_MCU (\"attiny43u\",            ARCH_AVR25, AVR_ISA_NONE, \"__AVR_ATtiny43U__\",        0x0060, 0x0, 1, \"tn43u\")\n+AVR_MCU (\"attiny87\",             ARCH_AVR25, AVR_ISA_NONE, \"__AVR_ATtiny87__\",         0x0100, 0x0, 1, \"tn87\")\n+AVR_MCU (\"attiny48\",             ARCH_AVR25, AVR_ISA_NONE, \"__AVR_ATtiny48__\",         0x0100, 0x0, 1, \"tn48\")\n+AVR_MCU (\"attiny88\",             ARCH_AVR25, AVR_ISA_NONE, \"__AVR_ATtiny88__\",         0x0100, 0x0, 1, \"tn88\")\n+AVR_MCU (\"attiny828\",            ARCH_AVR25, AVR_ISA_NONE, \"__AVR_ATtiny828__\",        0x0100, 0x0, 1, \"tn828\")\n+AVR_MCU (\"attiny841\",            ARCH_AVR25, AVR_ISA_NONE, \"__AVR_ATtiny841__\",        0x0100, 0x0, 1, \"tn841\")\n+AVR_MCU (\"at86rf401\",            ARCH_AVR25, AVR_ISA_NONE, \"__AVR_AT86RF401__\",        0x0060, 0x0, 1, \"86401\")\n /* Classic, > 8K, <= 64K.  */\n-AVR_MCU (\"avr3\",                 ARCH_AVR3, AVR_ISA_NONE, NULL,                        0x0060, 1, \"43355\")\n-AVR_MCU (\"at43usb355\",           ARCH_AVR3, AVR_ISA_NONE, \"__AVR_AT43USB355__\",        0x0060, 1, \"43355\")\n-AVR_MCU (\"at76c711\",             ARCH_AVR3, AVR_ISA_NONE, \"__AVR_AT76C711__\",          0x0060, 1, \"76711\")\n+AVR_MCU (\"avr3\",                 ARCH_AVR3, AVR_ISA_NONE, NULL,                        0x0060, 0x0, 1, \"43355\")\n+AVR_MCU (\"at43usb355\",           ARCH_AVR3, AVR_ISA_NONE, \"__AVR_AT43USB355__\",        0x0060, 0x0, 1, \"43355\")\n+AVR_MCU (\"at76c711\",             ARCH_AVR3, AVR_ISA_NONE, \"__AVR_AT76C711__\",          0x0060, 0x0, 1, \"76711\")\n /* Classic, == 128K.  */\n-AVR_MCU (\"avr31\",                ARCH_AVR31, AVR_ERRATA_SKIP, NULL,                    0x0060, 2, \"m103\")\n-AVR_MCU (\"atmega103\",            ARCH_AVR31, AVR_ERRATA_SKIP, \"__AVR_ATmega103__\",     0x0060, 2, \"m103\")\n-AVR_MCU (\"at43usb320\",           ARCH_AVR31, AVR_ISA_NONE, \"__AVR_AT43USB320__\",       0x0060, 2, \"43320\")\n+AVR_MCU (\"avr31\",                ARCH_AVR31, AVR_ERRATA_SKIP, NULL,                    0x0060, 0x0, 2, \"m103\")\n+AVR_MCU (\"atmega103\",            ARCH_AVR31, AVR_ERRATA_SKIP, \"__AVR_ATmega103__\",     0x0060, 0x0, 2, \"m103\")\n+AVR_MCU (\"at43usb320\",           ARCH_AVR31, AVR_ISA_NONE, \"__AVR_AT43USB320__\",       0x0060, 0x0, 2, \"43320\")\n /* Classic + MOVW + JMP/CALL.  */\n-AVR_MCU (\"avr35\",                ARCH_AVR35, AVR_ISA_NONE, NULL,                       0x0100, 1, \"usb162\")\n-AVR_MCU (\"ata5505\",              ARCH_AVR35, AVR_ISA_NONE, \"__AVR_ATA5505__\",          0x0100, 1, \"a5505\")\n-AVR_MCU (\"ata6617c\",             ARCH_AVR35, AVR_ISA_NONE, \"__AVR_ATA6617C__\",         0x0100, 1, \"a6617c\")\n-AVR_MCU (\"ata664251\",            ARCH_AVR35, AVR_ISA_NONE, \"__AVR_ATA664251__\",        0x0100, 1, \"a664251\")\n-AVR_MCU (\"at90usb82\",            ARCH_AVR35, AVR_ISA_NONE, \"__AVR_AT90USB82__\",        0x0100, 1, \"usb82\")\n-AVR_MCU (\"at90usb162\",           ARCH_AVR35, AVR_ISA_NONE, \"__AVR_AT90USB162__\",       0x0100, 1, \"usb162\")\n-AVR_MCU (\"atmega8u2\",            ARCH_AVR35, AVR_ISA_NONE, \"__AVR_ATmega8U2__\",        0x0100, 1, \"m8u2\")\n-AVR_MCU (\"atmega16u2\",           ARCH_AVR35, AVR_ISA_NONE, \"__AVR_ATmega16U2__\",       0x0100, 1, \"m16u2\")\n-AVR_MCU (\"atmega32u2\",           ARCH_AVR35, AVR_ISA_NONE, \"__AVR_ATmega32U2__\",       0x0100, 1, \"m32u2\")\n-AVR_MCU (\"attiny167\",            ARCH_AVR35, AVR_ISA_NONE, \"__AVR_ATtiny167__\",        0x0100, 1, \"tn167\")\n-AVR_MCU (\"attiny1634\",           ARCH_AVR35, AVR_ISA_NONE, \"__AVR_ATtiny1634__\",       0x0100, 1, \"tn1634\")\n+AVR_MCU (\"avr35\",                ARCH_AVR35, AVR_ISA_NONE, NULL,                       0x0100, 0x0, 1, \"usb162\")\n+AVR_MCU (\"ata5505\",              ARCH_AVR35, AVR_ISA_NONE, \"__AVR_ATA5505__\",          0x0100, 0x0, 1, \"a5505\")\n+AVR_MCU (\"ata6617c\",             ARCH_AVR35, AVR_ISA_NONE, \"__AVR_ATA6617C__\",         0x0100, 0x0, 1, \"a6617c\")\n+AVR_MCU (\"ata664251\",            ARCH_AVR35, AVR_ISA_NONE, \"__AVR_ATA664251__\",        0x0100, 0x0, 1, \"a664251\")\n+AVR_MCU (\"at90usb82\",            ARCH_AVR35, AVR_ISA_NONE, \"__AVR_AT90USB82__\",        0x0100, 0x0, 1, \"usb82\")\n+AVR_MCU (\"at90usb162\",           ARCH_AVR35, AVR_ISA_NONE, \"__AVR_AT90USB162__\",       0x0100, 0x0, 1, \"usb162\")\n+AVR_MCU (\"atmega8u2\",            ARCH_AVR35, AVR_ISA_NONE, \"__AVR_ATmega8U2__\",        0x0100, 0x0, 1, \"m8u2\")\n+AVR_MCU (\"atmega16u2\",           ARCH_AVR35, AVR_ISA_NONE, \"__AVR_ATmega16U2__\",       0x0100, 0x0, 1, \"m16u2\")\n+AVR_MCU (\"atmega32u2\",           ARCH_AVR35, AVR_ISA_NONE, \"__AVR_ATmega32U2__\",       0x0100, 0x0, 1, \"m32u2\")\n+AVR_MCU (\"attiny167\",            ARCH_AVR35, AVR_ISA_NONE, \"__AVR_ATtiny167__\",        0x0100, 0x0, 1, \"tn167\")\n+AVR_MCU (\"attiny1634\",           ARCH_AVR35, AVR_ISA_NONE, \"__AVR_ATtiny1634__\",       0x0100, 0x0, 1, \"tn1634\")\n /* Enhanced, <= 8K.  */\n-AVR_MCU (\"avr4\",                 ARCH_AVR4, AVR_ISA_NONE,  NULL,                       0x0060, 1, \"m8\")\n-AVR_MCU (\"ata6285\",              ARCH_AVR4, AVR_ISA_NONE,  \"__AVR_ATA6285__\",          0x0100, 1, \"a6285\")\n-AVR_MCU (\"ata6286\",              ARCH_AVR4, AVR_ISA_NONE,  \"__AVR_ATA6286__\",          0x0100, 1, \"a6286\")\n-AVR_MCU (\"ata6289\",              ARCH_AVR4, AVR_ISA_NONE, \"__AVR_ATA6289__\",           0x0100, 1, \"a6289\")\n-AVR_MCU (\"ata6612c\",             ARCH_AVR4, AVR_ISA_NONE,  \"__AVR_ATA6612C__\",         0x0100, 1, \"a6612c\")\n-AVR_MCU (\"atmega8\",              ARCH_AVR4, AVR_ISA_NONE,  \"__AVR_ATmega8__\",          0x0060, 1, \"m8\")\n-AVR_MCU (\"atmega8a\",             ARCH_AVR4, AVR_ISA_NONE,  \"__AVR_ATmega8A__\",         0x0060, 1, \"m8a\")\n-AVR_MCU (\"atmega48\",             ARCH_AVR4, AVR_ISA_NONE,  \"__AVR_ATmega48__\",         0x0100, 1, \"m48\")\n-AVR_MCU (\"atmega48a\",            ARCH_AVR4, AVR_ISA_NONE,  \"__AVR_ATmega48A__\",        0x0100, 1, \"m48a\")\n-AVR_MCU (\"atmega48p\",            ARCH_AVR4, AVR_ISA_NONE,  \"__AVR_ATmega48P__\",        0x0100, 1, \"m48p\")\n-AVR_MCU (\"atmega48pa\",           ARCH_AVR4, AVR_ISA_NONE,  \"__AVR_ATmega48PA__\",       0x0100, 1, \"m48pa\")\n-AVR_MCU (\"atmega88\",             ARCH_AVR4, AVR_ISA_NONE,  \"__AVR_ATmega88__\",         0x0100, 1, \"m88\")\n-AVR_MCU (\"atmega88a\",            ARCH_AVR4, AVR_ISA_NONE,  \"__AVR_ATmega88A__\",        0x0100, 1, \"m88a\")\n-AVR_MCU (\"atmega88p\",            ARCH_AVR4, AVR_ISA_NONE,  \"__AVR_ATmega88P__\",        0x0100, 1, \"m88p\")\n-AVR_MCU (\"atmega88pa\",           ARCH_AVR4, AVR_ISA_NONE,  \"__AVR_ATmega88PA__\",       0x0100, 1, \"m88pa\")\n-AVR_MCU (\"atmega8515\",           ARCH_AVR4, AVR_ISA_NONE,  \"__AVR_ATmega8515__\",       0x0060, 1, \"m8515\")\n-AVR_MCU (\"atmega8535\",           ARCH_AVR4, AVR_ISA_NONE,  \"__AVR_ATmega8535__\",       0x0060, 1, \"m8535\")\n-AVR_MCU (\"atmega8hva\",           ARCH_AVR4, AVR_ISA_NONE,  \"__AVR_ATmega8HVA__\",       0x0100, 1, \"m8hva\")\n-AVR_MCU (\"at90pwm1\",             ARCH_AVR4, AVR_ISA_NONE,  \"__AVR_AT90PWM1__\",         0x0100, 1, \"90pwm1\")\n-AVR_MCU (\"at90pwm2\",             ARCH_AVR4, AVR_ISA_NONE,  \"__AVR_AT90PWM2__\",         0x0100, 1, \"90pwm2\")\n-AVR_MCU (\"at90pwm2b\",            ARCH_AVR4, AVR_ISA_NONE,  \"__AVR_AT90PWM2B__\",        0x0100, 1, \"90pwm2b\")\n-AVR_MCU (\"at90pwm3\",             ARCH_AVR4, AVR_ISA_NONE,  \"__AVR_AT90PWM3__\",         0x0100, 1, \"90pwm3\")\n-AVR_MCU (\"at90pwm3b\",            ARCH_AVR4, AVR_ISA_NONE,  \"__AVR_AT90PWM3B__\",        0x0100, 1, \"90pwm3b\")\n-AVR_MCU (\"at90pwm81\",            ARCH_AVR4, AVR_ISA_NONE,  \"__AVR_AT90PWM81__\",        0x0100, 1, \"90pwm81\")\n+AVR_MCU (\"avr4\",                 ARCH_AVR4, AVR_ISA_NONE,  NULL,                       0x0060, 0x0, 1, \"m8\")\n+AVR_MCU (\"ata6285\",              ARCH_AVR4, AVR_ISA_NONE,  \"__AVR_ATA6285__\",          0x0100, 0x0, 1, \"a6285\")\n+AVR_MCU (\"ata6286\",              ARCH_AVR4, AVR_ISA_NONE,  \"__AVR_ATA6286__\",          0x0100, 0x0, 1, \"a6286\")\n+AVR_MCU (\"ata6289\",              ARCH_AVR4, AVR_ISA_NONE, \"__AVR_ATA6289__\",           0x0100, 0x0, 1, \"a6289\")\n+AVR_MCU (\"ata6612c\",             ARCH_AVR4, AVR_ISA_NONE,  \"__AVR_ATA6612C__\",         0x0100, 0x0, 1, \"a6612c\")\n+AVR_MCU (\"atmega8\",              ARCH_AVR4, AVR_ISA_NONE,  \"__AVR_ATmega8__\",          0x0060, 0x0, 1, \"m8\")\n+AVR_MCU (\"atmega8a\",             ARCH_AVR4, AVR_ISA_NONE,  \"__AVR_ATmega8A__\",         0x0060, 0x0, 1, \"m8a\")\n+AVR_MCU (\"atmega48\",             ARCH_AVR4, AVR_ISA_NONE,  \"__AVR_ATmega48__\",         0x0100, 0x0, 1, \"m48\")\n+AVR_MCU (\"atmega48a\",            ARCH_AVR4, AVR_ISA_NONE,  \"__AVR_ATmega48A__\",        0x0100, 0x0, 1, \"m48a\")\n+AVR_MCU (\"atmega48p\",            ARCH_AVR4, AVR_ISA_NONE,  \"__AVR_ATmega48P__\",        0x0100, 0x0, 1, \"m48p\")\n+AVR_MCU (\"atmega48pa\",           ARCH_AVR4, AVR_ISA_NONE,  \"__AVR_ATmega48PA__\",       0x0100, 0x0, 1, \"m48pa\")\n+AVR_MCU (\"atmega88\",             ARCH_AVR4, AVR_ISA_NONE,  \"__AVR_ATmega88__\",         0x0100, 0x0, 1, \"m88\")\n+AVR_MCU (\"atmega88a\",            ARCH_AVR4, AVR_ISA_NONE,  \"__AVR_ATmega88A__\",        0x0100, 0x0, 1, \"m88a\")\n+AVR_MCU (\"atmega88p\",            ARCH_AVR4, AVR_ISA_NONE,  \"__AVR_ATmega88P__\",        0x0100, 0x0, 1, \"m88p\")\n+AVR_MCU (\"atmega88pa\",           ARCH_AVR4, AVR_ISA_NONE,  \"__AVR_ATmega88PA__\",       0x0100, 0x0, 1, \"m88pa\")\n+AVR_MCU (\"atmega8515\",           ARCH_AVR4, AVR_ISA_NONE,  \"__AVR_ATmega8515__\",       0x0060, 0x0, 1, \"m8515\")\n+AVR_MCU (\"atmega8535\",           ARCH_AVR4, AVR_ISA_NONE,  \"__AVR_ATmega8535__\",       0x0060, 0x0, 1, \"m8535\")\n+AVR_MCU (\"atmega8hva\",           ARCH_AVR4, AVR_ISA_NONE,  \"__AVR_ATmega8HVA__\",       0x0100, 0x0, 1, \"m8hva\")\n+AVR_MCU (\"at90pwm1\",             ARCH_AVR4, AVR_ISA_NONE,  \"__AVR_AT90PWM1__\",         0x0100, 0x0, 1, \"90pwm1\")\n+AVR_MCU (\"at90pwm2\",             ARCH_AVR4, AVR_ISA_NONE,  \"__AVR_AT90PWM2__\",         0x0100, 0x0, 1, \"90pwm2\")\n+AVR_MCU (\"at90pwm2b\",            ARCH_AVR4, AVR_ISA_NONE,  \"__AVR_AT90PWM2B__\",        0x0100, 0x0, 1, \"90pwm2b\")\n+AVR_MCU (\"at90pwm3\",             ARCH_AVR4, AVR_ISA_NONE,  \"__AVR_AT90PWM3__\",         0x0100, 0x0, 1, \"90pwm3\")\n+AVR_MCU (\"at90pwm3b\",            ARCH_AVR4, AVR_ISA_NONE,  \"__AVR_AT90PWM3B__\",        0x0100, 0x0, 1, \"90pwm3b\")\n+AVR_MCU (\"at90pwm81\",            ARCH_AVR4, AVR_ISA_NONE,  \"__AVR_AT90PWM81__\",        0x0100, 0x0, 1, \"90pwm81\")\n /* Enhanced, > 8K, <= 64K.  */\n-AVR_MCU (\"avr5\",                 ARCH_AVR5, AVR_ISA_NONE, NULL,                        0x0060, 1, \"m16\")\n-AVR_MCU (\"ata5790\",              ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATA5790__\",           0x0100, 1, \"a5790\")\n-AVR_MCU (\"ata5790n\",             ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATA5790N__\",          0x0100, 1, \"a5790n\")\n-AVR_MCU (\"ata5795\",              ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATA5795__\",           0x0100, 1, \"a5795\")\n-AVR_MCU (\"ata6613c\",             ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATA6613C__\",          0x0100, 1, \"a6613c\")\n-AVR_MCU (\"ata6614q\",             ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATA6614Q__\",          0x0100, 1, \"a6614q\")\n-AVR_MCU (\"atmega16\",             ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega16__\",          0x0060, 1, \"m16\")\n-AVR_MCU (\"atmega16a\",            ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega16A__\",         0x0060, 1, \"m16a\")\n-AVR_MCU (\"atmega161\",            ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega161__\",         0x0060, 1, \"m161\")\n-AVR_MCU (\"atmega162\",            ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega162__\",         0x0100, 1, \"m162\")\n-AVR_MCU (\"atmega163\",            ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega163__\",         0x0060, 1, \"m163\")\n-AVR_MCU (\"atmega164a\",           ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega164A__\",        0x0100, 1, \"m164a\")\n-AVR_MCU (\"atmega164p\",           ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega164P__\",        0x0100, 1, \"m164p\")\n-AVR_MCU (\"atmega164pa\",          ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega164PA__\",       0x0100, 1, \"m164pa\")\n-AVR_MCU (\"atmega165\",            ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega165__\",         0x0100, 1, \"m165\")\n-AVR_MCU (\"atmega165a\",           ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega165A__\",        0x0100, 1, \"m165a\")\n-AVR_MCU (\"atmega165p\",           ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega165P__\",        0x0100, 1, \"m165p\")\n-AVR_MCU (\"atmega165pa\",          ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega165PA__\",       0x0100, 1, \"m165pa\")\n-AVR_MCU (\"atmega168\",            ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega168__\",         0x0100, 1, \"m168\")\n-AVR_MCU (\"atmega168a\",           ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega168A__\",        0x0100, 1, \"m168a\")\n-AVR_MCU (\"atmega168p\",           ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega168P__\",        0x0100, 1, \"m168p\")\n-AVR_MCU (\"atmega168pa\",          ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega168PA__\",       0x0100, 1, \"m168pa\")\n-AVR_MCU (\"atmega169\",            ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega169__\",         0x0100, 1, \"m169\")\n-AVR_MCU (\"atmega169a\",           ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega169A__\",        0x0100, 1, \"m169a\")\n-AVR_MCU (\"atmega169p\",           ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega169P__\",        0x0100, 1, \"m169p\")\n-AVR_MCU (\"atmega169pa\",          ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega169PA__\",       0x0100, 1, \"m169pa\")\n-AVR_MCU (\"atmega16hvb\",          ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega16HVB__\",       0x0100, 1, \"m16hvb\")\n-AVR_MCU (\"atmega16hvbrevb\",      ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega16HVBREVB__\",   0x0100, 1, \"m16hvbrevb\")\n-AVR_MCU (\"atmega16m1\",           ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega16M1__\",        0x0100, 1, \"m16m1\")\n-AVR_MCU (\"atmega16u4\",           ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega16U4__\",        0x0100, 1, \"m16u4\")\n-AVR_MCU (\"atmega26hvg\",          ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega26HVG__\",       0x0100, 1, \"m26hvg\")\n-AVR_MCU (\"atmega32a\",            ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega32A__\",         0x0060, 1, \"m32a\")\n-AVR_MCU (\"atmega32\",             ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega32__\",          0x0060, 1, \"m32\")\n-AVR_MCU (\"atmega323\",            ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega323__\",         0x0060, 1, \"m323\")\n-AVR_MCU (\"atmega324a\",           ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega324A__\",        0x0100, 1, \"m324a\")\n-AVR_MCU (\"atmega324p\",           ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega324P__\",        0x0100, 1, \"m324p\")\n-AVR_MCU (\"atmega324pa\",          ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega324PA__\",       0x0100, 1, \"m324pa\")\n-AVR_MCU (\"atmega325\",            ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega325__\",         0x0100, 1, \"m325\")\n-AVR_MCU (\"atmega325a\",           ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega325A__\",        0x0100, 1, \"m325a\")\n-AVR_MCU (\"atmega325p\",           ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega325P__\",        0x0100, 1, \"m325p\")\n-AVR_MCU (\"atmega3250\",           ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega3250__\",        0x0100, 1, \"m3250\")\n-AVR_MCU (\"atmega3250a\",          ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega3250A__\",       0x0100, 1, \"m3250a\")\n-AVR_MCU (\"atmega3250p\",          ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega3250P__\",       0x0100, 1, \"m3250p\")\n-AVR_MCU (\"atmega3250pa\",         ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega3250PA__\",      0x0100, 1, \"m3250pa\")\n-AVR_MCU (\"atmega328\",            ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega328__\",         0x0100, 1, \"m328\")\n-AVR_MCU (\"atmega328p\",           ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega328P__\",        0x0100, 1, \"m328p\")\n-AVR_MCU (\"atmega329\",            ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega329__\",         0x0100, 1, \"m329\")\n-AVR_MCU (\"atmega329a\",           ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega329A__\",        0x0100, 1, \"m329a\")\n-AVR_MCU (\"atmega329p\",           ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega329P__\",        0x0100, 1, \"m329p\")\n-AVR_MCU (\"atmega329pa\",          ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega329PA__\",       0x0100, 1, \"m329pa\")\n-AVR_MCU (\"atmega3290\",           ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega3290__\",        0x0100, 1, \"m3290\")\n-AVR_MCU (\"atmega3290a\",          ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega3290A__\",       0x0100, 1, \"m3290a\")\n-AVR_MCU (\"atmega3290p\",          ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega3290P__\",       0x0100, 1, \"m3290p\")\n-AVR_MCU (\"atmega3290pa\",         ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega3290PA__\",      0x0100, 1, \"m3290pa\")\n-AVR_MCU (\"atmega32c1\",           ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega32C1__\",        0x0100, 1, \"m32c1\")\n-AVR_MCU (\"atmega32m1\",           ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega32M1__\",        0x0100, 1, \"m32m1\")\n-AVR_MCU (\"atmega32u4\",           ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega32U4__\",        0x0100, 1, \"m32u4\")\n-AVR_MCU (\"atmega32u6\",           ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega32U6__\",        0x0100, 1, \"m32u6\")\n-AVR_MCU (\"atmega406\",            ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega406__\",         0x0100, 1, \"m406\")\n-AVR_MCU (\"atmega64\",             ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega64__\",          0x0100, 1, \"m64\")\n-AVR_MCU (\"atmega64a\",            ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega64A__\",         0x0100, 1, \"m64a\")\n-AVR_MCU (\"atmega640\",            ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega640__\",         0x0200, 1, \"m640\")\n-AVR_MCU (\"atmega644\",            ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega644__\",         0x0100, 1, \"m644\")\n-AVR_MCU (\"atmega644a\",           ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega644A__\",        0x0100, 1, \"m644a\")\n-AVR_MCU (\"atmega644p\",           ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega644P__\",        0x0100, 1, \"m644p\")\n-AVR_MCU (\"atmega644pa\",          ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega644PA__\",       0x0100, 1, \"m644pa\")\n-AVR_MCU (\"atmega645\",            ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega645__\",         0x0100, 1, \"m645\")\n-AVR_MCU (\"atmega645a\",           ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega645A__\",        0x0100, 1, \"m645a\")\n-AVR_MCU (\"atmega645p\",           ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega645P__\",        0x0100, 1, \"m645p\")\n-AVR_MCU (\"atmega6450\",           ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega6450__\",        0x0100, 1, \"m6450\")\n-AVR_MCU (\"atmega6450a\",          ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega6450A__\",       0x0100, 1, \"m6450a\")\n-AVR_MCU (\"atmega6450p\",          ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega6450P__\",       0x0100, 1, \"m6450p\")\n-AVR_MCU (\"atmega649\",            ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega649__\",         0x0100, 1, \"m649\")\n-AVR_MCU (\"atmega649a\",           ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega649A__\",        0x0100, 1, \"m649a\")\n-AVR_MCU (\"atmega649p\",           ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega649P__\",        0x0100, 1, \"m649p\")\n-AVR_MCU (\"atmega6490\",           ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega6490__\",        0x0100, 1, \"m6490\")\n-AVR_MCU (\"atmega16hva\",          ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega16HVA__\",       0x0100, 1, \"m16hva\")\n-AVR_MCU (\"atmega16hva2\",         ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega16HVA2__\",      0x0100, 1, \"m16hva2\")\n-AVR_MCU (\"atmega32hvb\",          ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega32HVB__\",       0x0100, 1, \"m32hvb\")\n-AVR_MCU (\"atmega6490a\",          ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega6490A__\",       0x0100, 1, \"m6490a\")\n-AVR_MCU (\"atmega6490p\",          ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega6490P__\",       0x0100, 1, \"m6490p\")\n-AVR_MCU (\"atmega64c1\",           ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega64C1__\",        0x0100, 1, \"m64c1\")\n-AVR_MCU (\"atmega64m1\",           ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega64M1__\",        0x0100, 1, \"m64m1\")\n-AVR_MCU (\"atmega64hve\",          ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega64HVE__\",       0x0100, 1, \"m64hve\")\n-AVR_MCU (\"atmega64rfa2\",         ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega64RFA2__\",      0x0200, 1, \"m64rfa2\")\n-AVR_MCU (\"atmega64rfr2\",         ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega64RFR2__\",      0x0200, 1, \"m64rfr2\")\n-AVR_MCU (\"atmega32hvbrevb\",      ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega32HVBREVB__\",   0x0100, 1, \"m32hvbrevb\")\n-AVR_MCU (\"atmega48hvf\",          ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega48HVF__\",       0x0100, 1, \"m48hvf\")\n-AVR_MCU (\"at90can32\",            ARCH_AVR5, AVR_ISA_NONE, \"__AVR_AT90CAN32__\",         0x0100, 1, \"can32\")\n-AVR_MCU (\"at90can64\",            ARCH_AVR5, AVR_ISA_NONE, \"__AVR_AT90CAN64__\",         0x0100, 1, \"can64\")\n-AVR_MCU (\"at90pwm161\",           ARCH_AVR5, AVR_ISA_NONE, \"__AVR_AT90PWM161__\",        0x0100, 1, \"90pwm161\")\n-AVR_MCU (\"at90pwm216\",           ARCH_AVR5, AVR_ISA_NONE, \"__AVR_AT90PWM216__\",        0x0100, 1, \"90pwm216\")\n-AVR_MCU (\"at90pwm316\",           ARCH_AVR5, AVR_ISA_NONE, \"__AVR_AT90PWM316__\",        0x0100, 1, \"90pwm316\")\n-AVR_MCU (\"at90scr100\",           ARCH_AVR5, AVR_ISA_NONE, \"__AVR_AT90SCR100__\",        0x0100, 1, \"90scr100\")\n-AVR_MCU (\"at90usb646\",           ARCH_AVR5, AVR_ISA_NONE, \"__AVR_AT90USB646__\",        0x0100, 1, \"usb646\")\n-AVR_MCU (\"at90usb647\",           ARCH_AVR5, AVR_ISA_NONE, \"__AVR_AT90USB647__\",        0x0100, 1, \"usb647\")\n-AVR_MCU (\"at94k\",                ARCH_AVR5, AVR_ISA_NONE, \"__AVR_AT94K__\",             0x0060, 1, \"at94k\")\n-AVR_MCU (\"m3000\",                ARCH_AVR5, AVR_ISA_NONE, \"__AVR_M3000__\",             0x1000, 1, \"m3000\")\n+AVR_MCU (\"avr5\",                 ARCH_AVR5, AVR_ISA_NONE, NULL,                        0x0060, 0x0, 1, \"m16\")\n+AVR_MCU (\"ata5782\",              ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATA5782__\",           0x0200, 0x8000, 1, \"a5782\")\n+AVR_MCU (\"ata5790\",              ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATA5790__\",           0x0100, 0x0, 1, \"a5790\")\n+AVR_MCU (\"ata5790n\",             ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATA5790N__\",          0x0100, 0x0, 1, \"a5790n\")\n+AVR_MCU (\"ata5795\",              ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATA5795__\",           0x0100, 0x0, 1, \"a5795\")\n+AVR_MCU (\"ata5831\",              ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATA5831__\",           0x0200, 0x8000, 1, \"a5831\")\n+AVR_MCU (\"ata6613c\",             ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATA6613C__\",          0x0100, 0x0, 1, \"a6613c\")\n+AVR_MCU (\"ata6614q\",             ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATA6614Q__\",          0x0100, 0x0, 1, \"a6614q\")\n+AVR_MCU (\"atmega16\",             ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega16__\",          0x0060, 0x0, 1, \"m16\")\n+AVR_MCU (\"atmega16a\",            ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega16A__\",         0x0060, 0x0, 1, \"m16a\")\n+AVR_MCU (\"atmega161\",            ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega161__\",         0x0060, 0x0, 1, \"m161\")\n+AVR_MCU (\"atmega162\",            ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega162__\",         0x0100, 0x0, 1, \"m162\")\n+AVR_MCU (\"atmega163\",            ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega163__\",         0x0060, 0x0, 1, \"m163\")\n+AVR_MCU (\"atmega164a\",           ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega164A__\",        0x0100, 0x0, 1, \"m164a\")\n+AVR_MCU (\"atmega164p\",           ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega164P__\",        0x0100, 0x0, 1, \"m164p\")\n+AVR_MCU (\"atmega164pa\",          ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega164PA__\",       0x0100, 0x0, 1, \"m164pa\")\n+AVR_MCU (\"atmega165\",            ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega165__\",         0x0100, 0x0, 1, \"m165\")\n+AVR_MCU (\"atmega165a\",           ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega165A__\",        0x0100, 0x0, 1, \"m165a\")\n+AVR_MCU (\"atmega165p\",           ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega165P__\",        0x0100, 0x0, 1, \"m165p\")\n+AVR_MCU (\"atmega165pa\",          ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega165PA__\",       0x0100, 0x0, 1, \"m165pa\")\n+AVR_MCU (\"atmega168\",            ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega168__\",         0x0100, 0x0, 1, \"m168\")\n+AVR_MCU (\"atmega168a\",           ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega168A__\",        0x0100, 0x0, 1, \"m168a\")\n+AVR_MCU (\"atmega168p\",           ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega168P__\",        0x0100, 0x0, 1, \"m168p\")\n+AVR_MCU (\"atmega168pa\",          ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega168PA__\",       0x0100, 0x0, 1, \"m168pa\")\n+AVR_MCU (\"atmega169\",            ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega169__\",         0x0100, 0x0, 1, \"m169\")\n+AVR_MCU (\"atmega169a\",           ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega169A__\",        0x0100, 0x0, 1, \"m169a\")\n+AVR_MCU (\"atmega169p\",           ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega169P__\",        0x0100, 0x0, 1, \"m169p\")\n+AVR_MCU (\"atmega169pa\",          ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega169PA__\",       0x0100, 0x0, 1, \"m169pa\")\n+AVR_MCU (\"atmega16hvb\",          ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega16HVB__\",       0x0100, 0x0, 1, \"m16hvb\")\n+AVR_MCU (\"atmega16hvbrevb\",      ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega16HVBREVB__\",   0x0100, 0x0, 1, \"m16hvbrevb\")\n+AVR_MCU (\"atmega16m1\",           ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega16M1__\",        0x0100, 0x0, 1, \"m16m1\")\n+AVR_MCU (\"atmega16u4\",           ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega16U4__\",        0x0100, 0x0, 1, \"m16u4\")\n+AVR_MCU (\"atmega26hvg\",          ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega26HVG__\",       0x0100, 0x0, 1, \"m26hvg\")\n+AVR_MCU (\"atmega32a\",            ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega32A__\",         0x0060, 0x0, 1, \"m32a\")\n+AVR_MCU (\"atmega32\",             ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega32__\",          0x0060, 0x0, 1, \"m32\")\n+AVR_MCU (\"atmega323\",            ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega323__\",         0x0060, 0x0, 1, \"m323\")\n+AVR_MCU (\"atmega324a\",           ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega324A__\",        0x0100, 0x0, 1, \"m324a\")\n+AVR_MCU (\"atmega324p\",           ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega324P__\",        0x0100, 0x0, 1, \"m324p\")\n+AVR_MCU (\"atmega324pa\",          ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega324PA__\",       0x0100, 0x0, 1, \"m324pa\")\n+AVR_MCU (\"atmega325\",            ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega325__\",         0x0100, 0x0, 1, \"m325\")\n+AVR_MCU (\"atmega325a\",           ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega325A__\",        0x0100, 0x0, 1, \"m325a\")\n+AVR_MCU (\"atmega325p\",           ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega325P__\",        0x0100, 0x0, 1, \"m325p\")\n+AVR_MCU (\"atmega3250\",           ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega3250__\",        0x0100, 0x0, 1, \"m3250\")\n+AVR_MCU (\"atmega3250a\",          ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega3250A__\",       0x0100, 0x0, 1, \"m3250a\")\n+AVR_MCU (\"atmega3250p\",          ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega3250P__\",       0x0100, 0x0, 1, \"m3250p\")\n+AVR_MCU (\"atmega3250pa\",         ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega3250PA__\",      0x0100, 0x0, 1, \"m3250pa\")\n+AVR_MCU (\"atmega328\",            ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega328__\",         0x0100, 0x0, 1, \"m328\")\n+AVR_MCU (\"atmega328p\",           ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega328P__\",        0x0100, 0x0, 1, \"m328p\")\n+AVR_MCU (\"atmega329\",            ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega329__\",         0x0100, 0x0, 1, \"m329\")\n+AVR_MCU (\"atmega329a\",           ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega329A__\",        0x0100, 0x0, 1, \"m329a\")\n+AVR_MCU (\"atmega329p\",           ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega329P__\",        0x0100, 0x0, 1, \"m329p\")\n+AVR_MCU (\"atmega329pa\",          ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega329PA__\",       0x0100, 0x0, 1, \"m329pa\")\n+AVR_MCU (\"atmega3290\",           ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega3290__\",        0x0100, 0x0, 1, \"m3290\")\n+AVR_MCU (\"atmega3290a\",          ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega3290A__\",       0x0100, 0x0, 1, \"m3290a\")\n+AVR_MCU (\"atmega3290p\",          ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega3290P__\",       0x0100, 0x0, 1, \"m3290p\")\n+AVR_MCU (\"atmega3290pa\",         ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega3290PA__\",      0x0100, 0x0, 1, \"m3290pa\")\n+AVR_MCU (\"atmega32c1\",           ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega32C1__\",        0x0100, 0x0, 1, \"m32c1\")\n+AVR_MCU (\"atmega32m1\",           ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega32M1__\",        0x0100, 0x0, 1, \"m32m1\")\n+AVR_MCU (\"atmega32u4\",           ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega32U4__\",        0x0100, 0x0, 1, \"m32u4\")\n+AVR_MCU (\"atmega32u6\",           ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega32U6__\",        0x0100, 0x0, 1, \"m32u6\")\n+AVR_MCU (\"atmega406\",            ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega406__\",         0x0100, 0x0, 1, \"m406\")\n+AVR_MCU (\"atmega64\",             ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega64__\",          0x0100, 0x0, 1, \"m64\")\n+AVR_MCU (\"atmega64a\",            ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega64A__\",         0x0100, 0x0, 1, \"m64a\")\n+AVR_MCU (\"atmega640\",            ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega640__\",         0x0200, 0x0, 1, \"m640\")\n+AVR_MCU (\"atmega644\",            ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega644__\",         0x0100, 0x0, 1, \"m644\")\n+AVR_MCU (\"atmega644a\",           ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega644A__\",        0x0100, 0x0, 1, \"m644a\")\n+AVR_MCU (\"atmega644p\",           ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega644P__\",        0x0100, 0x0, 1, \"m644p\")\n+AVR_MCU (\"atmega644pa\",          ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega644PA__\",       0x0100, 0x0, 1, \"m644pa\")\n+AVR_MCU (\"atmega645\",            ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega645__\",         0x0100, 0x0, 1, \"m645\")\n+AVR_MCU (\"atmega645a\",           ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega645A__\",        0x0100, 0x0, 1, \"m645a\")\n+AVR_MCU (\"atmega645p\",           ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega645P__\",        0x0100, 0x0, 1, \"m645p\")\n+AVR_MCU (\"atmega6450\",           ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega6450__\",        0x0100, 0x0, 1, \"m6450\")\n+AVR_MCU (\"atmega6450a\",          ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega6450A__\",       0x0100, 0x0, 1, \"m6450a\")\n+AVR_MCU (\"atmega6450p\",          ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega6450P__\",       0x0100, 0x0, 1, \"m6450p\")\n+AVR_MCU (\"atmega649\",            ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega649__\",         0x0100, 0x0, 1, \"m649\")\n+AVR_MCU (\"atmega649a\",           ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega649A__\",        0x0100, 0x0, 1, \"m649a\")\n+AVR_MCU (\"atmega649p\",           ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega649P__\",        0x0100, 0x0, 1, \"m649p\")\n+AVR_MCU (\"atmega6490\",           ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega6490__\",        0x0100, 0x0, 1, \"m6490\")\n+AVR_MCU (\"atmega16hva\",          ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega16HVA__\",       0x0100, 0x0, 1, \"m16hva\")\n+AVR_MCU (\"atmega16hva2\",         ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega16HVA2__\",      0x0100, 0x0, 1, \"m16hva2\")\n+AVR_MCU (\"atmega32hvb\",          ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega32HVB__\",       0x0100, 0x0, 1, \"m32hvb\")\n+AVR_MCU (\"atmega6490a\",          ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega6490A__\",       0x0100, 0x0, 1, \"m6490a\")\n+AVR_MCU (\"atmega6490p\",          ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega6490P__\",       0x0100, 0x0, 1, \"m6490p\")\n+AVR_MCU (\"atmega64c1\",           ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega64C1__\",        0x0100, 0x0, 1, \"m64c1\")\n+AVR_MCU (\"atmega64m1\",           ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega64M1__\",        0x0100, 0x0, 1, \"m64m1\")\n+AVR_MCU (\"atmega64hve\",          ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega64HVE__\",       0x0100, 0x0, 1, \"m64hve\")\n+AVR_MCU (\"atmega64rfa2\",         ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega64RFA2__\",      0x0200, 0x0, 1, \"m64rfa2\")\n+AVR_MCU (\"atmega64rfr2\",         ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega64RFR2__\",      0x0200, 0x0, 1, \"m64rfr2\")\n+AVR_MCU (\"atmega32hvbrevb\",      ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega32HVBREVB__\",   0x0100, 0x0, 1, \"m32hvbrevb\")\n+AVR_MCU (\"atmega48hvf\",          ARCH_AVR5, AVR_ISA_NONE, \"__AVR_ATmega48HVF__\",       0x0100, 0x0, 1, \"m48hvf\")\n+AVR_MCU (\"at90can32\",            ARCH_AVR5, AVR_ISA_NONE, \"__AVR_AT90CAN32__\",         0x0100, 0x0, 1, \"can32\")\n+AVR_MCU (\"at90can64\",            ARCH_AVR5, AVR_ISA_NONE, \"__AVR_AT90CAN64__\",         0x0100, 0x0, 1, \"can64\")\n+AVR_MCU (\"at90pwm161\",           ARCH_AVR5, AVR_ISA_NONE, \"__AVR_AT90PWM161__\",        0x0100, 0x0, 1, \"90pwm161\")\n+AVR_MCU (\"at90pwm216\",           ARCH_AVR5, AVR_ISA_NONE, \"__AVR_AT90PWM216__\",        0x0100, 0x0, 1, \"90pwm216\")\n+AVR_MCU (\"at90pwm316\",           ARCH_AVR5, AVR_ISA_NONE, \"__AVR_AT90PWM316__\",        0x0100, 0x0, 1, \"90pwm316\")\n+AVR_MCU (\"at90scr100\",           ARCH_AVR5, AVR_ISA_NONE, \"__AVR_AT90SCR100__\",        0x0100, 0x0, 1, \"90scr100\")\n+AVR_MCU (\"at90usb646\",           ARCH_AVR5, AVR_ISA_NONE, \"__AVR_AT90USB646__\",        0x0100, 0x0, 1, \"usb646\")\n+AVR_MCU (\"at90usb647\",           ARCH_AVR5, AVR_ISA_NONE, \"__AVR_AT90USB647__\",        0x0100, 0x0, 1, \"usb647\")\n+AVR_MCU (\"at94k\",                ARCH_AVR5, AVR_ISA_NONE, \"__AVR_AT94K__\",             0x0060, 0x0, 1, \"at94k\")\n+AVR_MCU (\"m3000\",                ARCH_AVR5, AVR_ISA_NONE, \"__AVR_M3000__\",             0x1000, 0x0, 1, \"m3000\")\n /* Enhanced, == 128K.  */\n-AVR_MCU (\"avr51\",                ARCH_AVR51, AVR_ISA_NONE, NULL,                       0x0100, 2, \"m128\")\n-AVR_MCU (\"atmega128\",            ARCH_AVR51, AVR_ISA_NONE, \"__AVR_ATmega128__\",        0x0100, 2, \"m128\")\n-AVR_MCU (\"atmega128a\",           ARCH_AVR51, AVR_ISA_NONE, \"__AVR_ATmega128A__\",       0x0100, 2, \"m128a\")\n-AVR_MCU (\"atmega1280\",           ARCH_AVR51, AVR_ISA_NONE, \"__AVR_ATmega1280__\",       0x0200, 2, \"m1280\")\n-AVR_MCU (\"atmega1281\",           ARCH_AVR51, AVR_ISA_NONE, \"__AVR_ATmega1281__\",       0x0200, 2, \"m1281\")\n-AVR_MCU (\"atmega1284\",           ARCH_AVR51, AVR_ISA_NONE, \"__AVR_ATmega1284__\",       0x0100, 2, \"m1284\")\n-AVR_MCU (\"atmega1284p\",          ARCH_AVR51, AVR_ISA_NONE, \"__AVR_ATmega1284P__\",      0x0100, 2, \"m1284p\")\n-AVR_MCU (\"atmega128rfa1\",        ARCH_AVR51, AVR_ISA_NONE, \"__AVR_ATmega128RFA1__\",    0x0200, 2, \"m128rfa1\")\n-AVR_MCU (\"at90can128\",           ARCH_AVR51, AVR_ISA_NONE, \"__AVR_AT90CAN128__\",       0x0100, 2, \"can128\")\n-AVR_MCU (\"at90usb1286\",          ARCH_AVR51, AVR_ISA_NONE, \"__AVR_AT90USB1286__\",      0x0100, 2, \"usb1286\")\n-AVR_MCU (\"at90usb1287\",          ARCH_AVR51, AVR_ISA_NONE, \"__AVR_AT90USB1287__\",      0x0100, 2, \"usb1287\")\n+AVR_MCU (\"avr51\",                ARCH_AVR51, AVR_ISA_NONE, NULL,                       0x0100, 0x0, 2, \"m128\")\n+AVR_MCU (\"atmega128\",            ARCH_AVR51, AVR_ISA_NONE, \"__AVR_ATmega128__\",        0x0100, 0x0, 2, \"m128\")\n+AVR_MCU (\"atmega128a\",           ARCH_AVR51, AVR_ISA_NONE, \"__AVR_ATmega128A__\",       0x0100, 0x0, 2, \"m128a\")\n+AVR_MCU (\"atmega1280\",           ARCH_AVR51, AVR_ISA_NONE, \"__AVR_ATmega1280__\",       0x0200, 0x0, 2, \"m1280\")\n+AVR_MCU (\"atmega1281\",           ARCH_AVR51, AVR_ISA_NONE, \"__AVR_ATmega1281__\",       0x0200, 0x0, 2, \"m1281\")\n+AVR_MCU (\"atmega1284\",           ARCH_AVR51, AVR_ISA_NONE, \"__AVR_ATmega1284__\",       0x0100, 0x0, 2, \"m1284\")\n+AVR_MCU (\"atmega1284p\",          ARCH_AVR51, AVR_ISA_NONE, \"__AVR_ATmega1284P__\",      0x0100, 0x0, 2, \"m1284p\")\n+AVR_MCU (\"atmega128rfa1\",        ARCH_AVR51, AVR_ISA_NONE, \"__AVR_ATmega128RFA1__\",    0x0200, 0x0, 2, \"m128rfa1\")\n+AVR_MCU (\"at90can128\",           ARCH_AVR51, AVR_ISA_NONE, \"__AVR_AT90CAN128__\",       0x0100, 0x0, 2, \"can128\")\n+AVR_MCU (\"at90usb1286\",          ARCH_AVR51, AVR_ISA_NONE, \"__AVR_AT90USB1286__\",      0x0100, 0x0, 2, \"usb1286\")\n+AVR_MCU (\"at90usb1287\",          ARCH_AVR51, AVR_ISA_NONE, \"__AVR_AT90USB1287__\",      0x0100, 0x0, 2, \"usb1287\")\n /* 3-Byte PC.  */\n-AVR_MCU (\"avr6\",                 ARCH_AVR6, AVR_ISA_NONE, NULL,                        0x0200, 4, \"m2561\")\n-AVR_MCU (\"atmega2560\",           ARCH_AVR6, AVR_ISA_NONE, \"__AVR_ATmega2560__\",        0x0200, 4, \"m2560\")\n-AVR_MCU (\"atmega2561\",           ARCH_AVR6, AVR_ISA_NONE, \"__AVR_ATmega2561__\",        0x0200, 4, \"m2561\")\n+AVR_MCU (\"avr6\",                 ARCH_AVR6, AVR_ISA_NONE, NULL,                        0x0200, 0x0, 4, \"m2561\")\n+AVR_MCU (\"atmega2560\",           ARCH_AVR6, AVR_ISA_NONE, \"__AVR_ATmega2560__\",        0x0200, 0x0, 4, \"m2560\")\n+AVR_MCU (\"atmega2561\",           ARCH_AVR6, AVR_ISA_NONE, \"__AVR_ATmega2561__\",        0x0200, 0x0, 4, \"m2561\")\n /* Xmega, 16K <= Flash < 64K, RAM <= 64K */\n-AVR_MCU (\"avrxmega2\",        ARCH_AVRXMEGA2, AVR_ISA_NONE, NULL,                       0x2000, 1, \"x32a4\")\n-AVR_MCU (\"atxmega16a4\",      ARCH_AVRXMEGA2, AVR_ISA_NONE, \"__AVR_ATxmega16A4__\",      0x2000, 1, \"x16a4\")\n-AVR_MCU (\"atxmega16d4\",      ARCH_AVRXMEGA2, AVR_ISA_NONE, \"__AVR_ATxmega16D4__\",      0x2000, 1, \"x16d4\")\n-AVR_MCU (\"atxmega32a4\",      ARCH_AVRXMEGA2, AVR_ISA_NONE, \"__AVR_ATxmega32A4__\",      0x2000, 1, \"x32a4\")\n-AVR_MCU (\"atxmega32d4\",      ARCH_AVRXMEGA2, AVR_ISA_NONE, \"__AVR_ATxmega32D4__\",      0x2000, 1, \"x32d4\")\n-AVR_MCU (\"atxmega32x1\",      ARCH_AVRXMEGA2, AVR_ISA_NONE, \"__AVR_ATxmega32X1__\",      0x2000, 1, \"x32x1\")\n-AVR_MCU (\"atmxt112sl\",       ARCH_AVRXMEGA2, AVR_ISA_NONE, \"__AVR_ATMXT112SL__\",       0x2000, 1, \"mxt112sl\")\n-AVR_MCU (\"atmxt224\",         ARCH_AVRXMEGA2, AVR_ISA_NONE, \"__AVR_ATMXT224__\",         0x2000, 1, \"mxt224\")\n-AVR_MCU (\"atmxt224e\",        ARCH_AVRXMEGA2, AVR_ISA_NONE, \"__AVR_ATMXT224E__\",        0x2000, 1, \"mxt224e\")\n-AVR_MCU (\"atmxt336s\",        ARCH_AVRXMEGA2, AVR_ISA_NONE, \"__AVR_ATMXT336S__\",        0x2000, 1, \"mxt336s\")\n-AVR_MCU (\"atxmega16a4u\",     ARCH_AVRXMEGA2, AVR_ISA_RMW,  \"__AVR_ATxmega16A4U__\",     0x2000, 1, \"x16a4u\")\n-AVR_MCU (\"atxmega16c4\",      ARCH_AVRXMEGA2, AVR_ISA_RMW,  \"__AVR_ATxmega16C4__\",      0x2000, 1, \"x16c4\")\n-AVR_MCU (\"atxmega32a4u\",     ARCH_AVRXMEGA2, AVR_ISA_RMW,  \"__AVR_ATxmega32A4U__\",     0x2000, 1, \"x32a4u\")\n-AVR_MCU (\"atxmega32c4\",      ARCH_AVRXMEGA2, AVR_ISA_RMW,  \"__AVR_ATxmega32C4__\",      0x2000, 1, \"x32c4\")\n-AVR_MCU (\"atxmega32e5\",      ARCH_AVRXMEGA2, AVR_ISA_NONE, \"__AVR_ATxmega32E5__\",      0x2000, 1, \"x32e5\")\n+AVR_MCU (\"avrxmega2\",        ARCH_AVRXMEGA2, AVR_ISA_NONE, NULL,                       0x2000, 0x0, 1, \"x32a4\")\n+AVR_MCU (\"atxmega16a4\",      ARCH_AVRXMEGA2, AVR_ISA_NONE, \"__AVR_ATxmega16A4__\",      0x2000, 0x0, 1, \"x16a4\")\n+AVR_MCU (\"atxmega16d4\",      ARCH_AVRXMEGA2, AVR_ISA_NONE, \"__AVR_ATxmega16D4__\",      0x2000, 0x0, 1, \"x16d4\")\n+AVR_MCU (\"atxmega32a4\",      ARCH_AVRXMEGA2, AVR_ISA_NONE, \"__AVR_ATxmega32A4__\",      0x2000, 0x0, 1, \"x32a4\")\n+AVR_MCU (\"atxmega32d4\",      ARCH_AVRXMEGA2, AVR_ISA_NONE, \"__AVR_ATxmega32D4__\",      0x2000, 0x0, 1, \"x32d4\")\n+AVR_MCU (\"atxmega32x1\",      ARCH_AVRXMEGA2, AVR_ISA_NONE, \"__AVR_ATxmega32X1__\",      0x2000, 0x0, 1, \"x32x1\")\n+AVR_MCU (\"atmxt112sl\",       ARCH_AVRXMEGA2, AVR_ISA_NONE, \"__AVR_ATMXT112SL__\",       0x2000, 0x0, 1, \"mxt112sl\")\n+AVR_MCU (\"atmxt224\",         ARCH_AVRXMEGA2, AVR_ISA_NONE, \"__AVR_ATMXT224__\",         0x2000, 0x0, 1, \"mxt224\")\n+AVR_MCU (\"atmxt224e\",        ARCH_AVRXMEGA2, AVR_ISA_NONE, \"__AVR_ATMXT224E__\",        0x2000, 0x0, 1, \"mxt224e\")\n+AVR_MCU (\"atmxt336s\",        ARCH_AVRXMEGA2, AVR_ISA_NONE, \"__AVR_ATMXT336S__\",        0x2000, 0x0, 1, \"mxt336s\")\n+AVR_MCU (\"atxmega16a4u\",     ARCH_AVRXMEGA2, AVR_ISA_RMW,  \"__AVR_ATxmega16A4U__\",     0x2000, 0x0, 1, \"x16a4u\")\n+AVR_MCU (\"atxmega16c4\",      ARCH_AVRXMEGA2, AVR_ISA_RMW,  \"__AVR_ATxmega16C4__\",      0x2000, 0x0, 1, \"x16c4\")\n+AVR_MCU (\"atxmega32a4u\",     ARCH_AVRXMEGA2, AVR_ISA_RMW,  \"__AVR_ATxmega32A4U__\",     0x2000, 0x0, 1, \"x32a4u\")\n+AVR_MCU (\"atxmega32c4\",      ARCH_AVRXMEGA2, AVR_ISA_RMW,  \"__AVR_ATxmega32C4__\",      0x2000, 0x0, 1, \"x32c4\")\n+AVR_MCU (\"atxmega32e5\",      ARCH_AVRXMEGA2, AVR_ISA_NONE, \"__AVR_ATxmega32E5__\",      0x2000, 0x0, 1, \"x32e5\")\n /* Xmega, 64K < Flash <= 128K, RAM <= 64K */\n-AVR_MCU (\"avrxmega4\",        ARCH_AVRXMEGA4, AVR_ISA_NONE, NULL,                       0x2000, 2, \"x64a4\")\n-AVR_MCU (\"atxmega64a3\",      ARCH_AVRXMEGA4, AVR_ISA_NONE, \"__AVR_ATxmega64A3__\",      0x2000, 2, \"x64a3\")\n-AVR_MCU (\"atxmega64d3\",      ARCH_AVRXMEGA4, AVR_ISA_NONE, \"__AVR_ATxmega64D3__\",      0x2000, 2, \"x64d3\")\n-AVR_MCU (\"atxmega64a3u\",     ARCH_AVRXMEGA4, AVR_ISA_RMW,  \"__AVR_ATxmega64A3U__\",     0x2000, 2, \"x64a3u\")\n-AVR_MCU (\"atxmega64a4u\",     ARCH_AVRXMEGA4, AVR_ISA_RMW,  \"__AVR_ATxmega64A4U__\",     0x2000, 2, \"x64a4u\")\n-AVR_MCU (\"atxmega64b1\",      ARCH_AVRXMEGA4, AVR_ISA_RMW,  \"__AVR_ATxmega64B1__\",      0x2000, 2, \"x64b1\")\n-AVR_MCU (\"atxmega64b3\",      ARCH_AVRXMEGA4, AVR_ISA_RMW,  \"__AVR_ATxmega64B3__\",      0x2000, 2, \"x64b3\")\n-AVR_MCU (\"atxmega64c3\",      ARCH_AVRXMEGA4, AVR_ISA_RMW,  \"__AVR_ATxmega64C3__\",      0x2000, 2, \"x64c3\")\n-AVR_MCU (\"atxmega64d4\",      ARCH_AVRXMEGA4, AVR_ISA_NONE, \"__AVR_ATxmega64D4__\",      0x2000, 2, \"x64d4\")\n+AVR_MCU (\"avrxmega4\",        ARCH_AVRXMEGA4, AVR_ISA_NONE, NULL,                       0x2000, 0x0, 2, \"x64a4\")\n+AVR_MCU (\"atxmega64a3\",      ARCH_AVRXMEGA4, AVR_ISA_NONE, \"__AVR_ATxmega64A3__\",      0x2000, 0x0, 2, \"x64a3\")\n+AVR_MCU (\"atxmega64d3\",      ARCH_AVRXMEGA4, AVR_ISA_NONE, \"__AVR_ATxmega64D3__\",      0x2000, 0x0, 2, \"x64d3\")\n+AVR_MCU (\"atxmega64a3u\",     ARCH_AVRXMEGA4, AVR_ISA_RMW,  \"__AVR_ATxmega64A3U__\",     0x2000, 0x0, 2, \"x64a3u\")\n+AVR_MCU (\"atxmega64a4u\",     ARCH_AVRXMEGA4, AVR_ISA_RMW,  \"__AVR_ATxmega64A4U__\",     0x2000, 0x0, 2, \"x64a4u\")\n+AVR_MCU (\"atxmega64b1\",      ARCH_AVRXMEGA4, AVR_ISA_RMW,  \"__AVR_ATxmega64B1__\",      0x2000, 0x0, 2, \"x64b1\")\n+AVR_MCU (\"atxmega64b3\",      ARCH_AVRXMEGA4, AVR_ISA_RMW,  \"__AVR_ATxmega64B3__\",      0x2000, 0x0, 2, \"x64b3\")\n+AVR_MCU (\"atxmega64c3\",      ARCH_AVRXMEGA4, AVR_ISA_RMW,  \"__AVR_ATxmega64C3__\",      0x2000, 0x0, 2, \"x64c3\")\n+AVR_MCU (\"atxmega64d4\",      ARCH_AVRXMEGA4, AVR_ISA_NONE, \"__AVR_ATxmega64D4__\",      0x2000, 0x0, 2, \"x64d4\")\n /* Xmega, 64K < Flash <= 128K, RAM > 64K */\n-AVR_MCU (\"avrxmega5\",        ARCH_AVRXMEGA5, AVR_ISA_NONE, NULL,                       0x2000, 2, \"x64a1\")\n-AVR_MCU (\"atxmega64a1\",      ARCH_AVRXMEGA5, AVR_ISA_NONE, \"__AVR_ATxmega64A1__\",      0x2000, 2, \"x64a1\")\n-AVR_MCU (\"atxmega64a1u\",     ARCH_AVRXMEGA5, AVR_ISA_RMW,  \"__AVR_ATxmega64A1U__\",     0x2000, 2, \"x64a1u\")\n+AVR_MCU (\"avrxmega5\",        ARCH_AVRXMEGA5, AVR_ISA_NONE, NULL,                       0x2000, 0x0, 2, \"x64a1\")\n+AVR_MCU (\"atxmega64a1\",      ARCH_AVRXMEGA5, AVR_ISA_NONE, \"__AVR_ATxmega64A1__\",      0x2000, 0x0, 2, \"x64a1\")\n+AVR_MCU (\"atxmega64a1u\",     ARCH_AVRXMEGA5, AVR_ISA_RMW,  \"__AVR_ATxmega64A1U__\",     0x2000, 0x0, 2, \"x64a1u\")\n /* Xmega, 128K < Flash, RAM <= 64K */\n-AVR_MCU (\"avrxmega6\",        ARCH_AVRXMEGA6, AVR_ISA_NONE, NULL,                       0x2000, 6, \"x128a3\")\n-AVR_MCU (\"atxmega128a3\",     ARCH_AVRXMEGA6, AVR_ISA_NONE, \"__AVR_ATxmega128A3__\",     0x2000, 3, \"x128a3\")\n-AVR_MCU (\"atxmega128d3\",     ARCH_AVRXMEGA6, AVR_ISA_NONE, \"__AVR_ATxmega128D3__\",     0x2000, 3, \"x128d3\")\n-AVR_MCU (\"atxmega192a3\",     ARCH_AVRXMEGA6, AVR_ISA_NONE, \"__AVR_ATxmega192A3__\",     0x2000, 4, \"x192a3\")\n-AVR_MCU (\"atxmega192d3\",     ARCH_AVRXMEGA6, AVR_ISA_NONE, \"__AVR_ATxmega192D3__\",     0x2000, 4, \"x192d3\")\n-AVR_MCU (\"atxmega256a3\",     ARCH_AVRXMEGA6, AVR_ISA_NONE, \"__AVR_ATxmega256A3__\",     0x2000, 5, \"x256a3\")\n-AVR_MCU (\"atxmega256a3b\",    ARCH_AVRXMEGA6, AVR_ISA_NONE, \"__AVR_ATxmega256A3B__\",    0x2000, 5, \"x256a3b\")\n-AVR_MCU (\"atxmega256a3bu\",   ARCH_AVRXMEGA6, AVR_ISA_NONE, \"__AVR_ATxmega256A3BU__\",   0x2000, 5, \"x256a3bu\")\n-AVR_MCU (\"atxmega256d3\",     ARCH_AVRXMEGA6, AVR_ISA_NONE, \"__AVR_ATxmega256D3__\",     0x2000, 5, \"x256d3\")\n-AVR_MCU (\"atxmega128a3u\",    ARCH_AVRXMEGA6, AVR_ISA_RMW, \"__AVR_ATxmega128A3U__\",    0x2000, 3, \"x128a3u\")\n-AVR_MCU (\"atxmega128b1\",     ARCH_AVRXMEGA6, AVR_ISA_RMW,  \"__AVR_ATxmega128B1__\",     0x2000, 3, \"x128b1\")\n-AVR_MCU (\"atxmega128b3\",     ARCH_AVRXMEGA6, AVR_ISA_RMW,  \"__AVR_ATxmega128B3__\",     0x2000, 3, \"x128b3\")\n-AVR_MCU (\"atxmega128c3\",     ARCH_AVRXMEGA6, AVR_ISA_RMW,  \"__AVR_ATxmega128C3__\",     0x2000, 3, \"x128c3\")\n-AVR_MCU (\"atxmega128d4\",     ARCH_AVRXMEGA6, AVR_ISA_NONE, \"__AVR_ATxmega128D4__\",     0x2000, 3, \"x128d4\")\n-AVR_MCU (\"atmxt540s\",        ARCH_AVRXMEGA6, AVR_ISA_NONE, \"__AVR_ATMXT540S__\",        0x2000, 2, \"mxt540s\")\n-AVR_MCU (\"atmxt540sreva\",    ARCH_AVRXMEGA6, AVR_ISA_NONE, \"__AVR_ATMXT540SREVA__\",    0x2000, 2, \"mxt540sreva\")\n-AVR_MCU (\"atxmega192a3u\",    ARCH_AVRXMEGA6, AVR_ISA_RMW,  \"__AVR_ATxmega192A3U__\",    0x2000, 4, \"x192a3u\")\n-AVR_MCU (\"atxmega192c3\",     ARCH_AVRXMEGA6, AVR_ISA_RMW,  \"__AVR_ATxmega192C3__\",     0x2000, 4, \"x192c3\")\n-AVR_MCU (\"atxmega256a3u\",    ARCH_AVRXMEGA6, AVR_ISA_RMW,  \"__AVR_ATxmega256A3U__\",    0x2000, 5, \"x256a3u\")\n-AVR_MCU (\"atxmega256c3\",     ARCH_AVRXMEGA6, AVR_ISA_RMW,  \"__AVR_ATxmega256C3__\",     0x2000, 5, \"x256c3\")\n-AVR_MCU (\"atxmega384c3\",     ARCH_AVRXMEGA6, AVR_ISA_RMW,  \"__AVR_ATxmega384C3__\",     0x2000, 6, \"x384c3\")\n-AVR_MCU (\"atxmega384d3\",     ARCH_AVRXMEGA6, AVR_ISA_NONE, \"__AVR_ATxmega384D3__\",     0x2000, 6, \"x384d3\")\n+AVR_MCU (\"avrxmega6\",        ARCH_AVRXMEGA6, AVR_ISA_NONE, NULL,                       0x2000, 0x0, 6, \"x128a3\")\n+AVR_MCU (\"atxmega128a3\",     ARCH_AVRXMEGA6, AVR_ISA_NONE, \"__AVR_ATxmega128A3__\",     0x2000, 0x0, 3, \"x128a3\")\n+AVR_MCU (\"atxmega128d3\",     ARCH_AVRXMEGA6, AVR_ISA_NONE, \"__AVR_ATxmega128D3__\",     0x2000, 0x0, 3, \"x128d3\")\n+AVR_MCU (\"atxmega192a3\",     ARCH_AVRXMEGA6, AVR_ISA_NONE, \"__AVR_ATxmega192A3__\",     0x2000, 0x0, 4, \"x192a3\")\n+AVR_MCU (\"atxmega192d3\",     ARCH_AVRXMEGA6, AVR_ISA_NONE, \"__AVR_ATxmega192D3__\",     0x2000, 0x0, 4, \"x192d3\")\n+AVR_MCU (\"atxmega256a3\",     ARCH_AVRXMEGA6, AVR_ISA_NONE, \"__AVR_ATxmega256A3__\",     0x2000, 0x0, 5, \"x256a3\")\n+AVR_MCU (\"atxmega256a3b\",    ARCH_AVRXMEGA6, AVR_ISA_NONE, \"__AVR_ATxmega256A3B__\",    0x2000, 0x0, 5, \"x256a3b\")\n+AVR_MCU (\"atxmega256a3bu\",   ARCH_AVRXMEGA6, AVR_ISA_NONE, \"__AVR_ATxmega256A3BU__\",   0x2000, 0x0, 5, \"x256a3bu\")\n+AVR_MCU (\"atxmega256d3\",     ARCH_AVRXMEGA6, AVR_ISA_NONE, \"__AVR_ATxmega256D3__\",     0x2000, 0x0, 5, \"x256d3\")\n+AVR_MCU (\"atxmega128a3u\",    ARCH_AVRXMEGA6, AVR_ISA_RMW, \"__AVR_ATxmega128A3U__\",    0x2000, 0x0, 3, \"x128a3u\")\n+AVR_MCU (\"atxmega128b1\",     ARCH_AVRXMEGA6, AVR_ISA_RMW,  \"__AVR_ATxmega128B1__\",     0x2000, 0x0, 3, \"x128b1\")\n+AVR_MCU (\"atxmega128b3\",     ARCH_AVRXMEGA6, AVR_ISA_RMW,  \"__AVR_ATxmega128B3__\",     0x2000, 0x0, 3, \"x128b3\")\n+AVR_MCU (\"atxmega128c3\",     ARCH_AVRXMEGA6, AVR_ISA_RMW,  \"__AVR_ATxmega128C3__\",     0x2000, 0x0, 3, \"x128c3\")\n+AVR_MCU (\"atxmega128d4\",     ARCH_AVRXMEGA6, AVR_ISA_NONE, \"__AVR_ATxmega128D4__\",     0x2000, 0x0, 3, \"x128d4\")\n+AVR_MCU (\"atmxt540s\",        ARCH_AVRXMEGA6, AVR_ISA_NONE, \"__AVR_ATMXT540S__\",        0x2000, 0x0, 2, \"mxt540s\")\n+AVR_MCU (\"atmxt540sreva\",    ARCH_AVRXMEGA6, AVR_ISA_NONE, \"__AVR_ATMXT540SREVA__\",    0x2000, 0x0, 2, \"mxt540sreva\")\n+AVR_MCU (\"atxmega192a3u\",    ARCH_AVRXMEGA6, AVR_ISA_RMW,  \"__AVR_ATxmega192A3U__\",    0x2000, 0x0, 4, \"x192a3u\")\n+AVR_MCU (\"atxmega192c3\",     ARCH_AVRXMEGA6, AVR_ISA_RMW,  \"__AVR_ATxmega192C3__\",     0x2000, 0x0, 4, \"x192c3\")\n+AVR_MCU (\"atxmega256a3u\",    ARCH_AVRXMEGA6, AVR_ISA_RMW,  \"__AVR_ATxmega256A3U__\",    0x2000, 0x0, 5, \"x256a3u\")\n+AVR_MCU (\"atxmega256c3\",     ARCH_AVRXMEGA6, AVR_ISA_RMW,  \"__AVR_ATxmega256C3__\",     0x2000, 0x0, 5, \"x256c3\")\n+AVR_MCU (\"atxmega384c3\",     ARCH_AVRXMEGA6, AVR_ISA_RMW,  \"__AVR_ATxmega384C3__\",     0x2000, 0x0, 6, \"x384c3\")\n+AVR_MCU (\"atxmega384d3\",     ARCH_AVRXMEGA6, AVR_ISA_NONE, \"__AVR_ATxmega384D3__\",     0x2000, 0x0, 6, \"x384d3\")\n /* Xmega, 128K < Flash, RAM > 64K RAM.  */\n-AVR_MCU (\"avrxmega7\",        ARCH_AVRXMEGA7, AVR_ISA_NONE, NULL,                       0x2000, 3, \"x128a1\")\n-AVR_MCU (\"atxmega128a1\",     ARCH_AVRXMEGA7, AVR_ISA_NONE, \"__AVR_ATxmega128A1__\",     0x2000, 3, \"x128a1\")\n-AVR_MCU (\"atxmega128a1u\",    ARCH_AVRXMEGA7, AVR_ISA_RMW,  \"__AVR_ATxmega128A1U__\",    0x2000, 3, \"x128a1u\")\n-AVR_MCU (\"atxmega128a4u\",    ARCH_AVRXMEGA7, AVR_ISA_RMW,  \"__AVR_ATxmega128A4U__\",    0x2000, 3, \"x128a4u\")\n+AVR_MCU (\"avrxmega7\",        ARCH_AVRXMEGA7, AVR_ISA_NONE, NULL,                       0x2000, 0x0, 3, \"x128a1\")\n+AVR_MCU (\"atxmega128a1\",     ARCH_AVRXMEGA7, AVR_ISA_NONE, \"__AVR_ATxmega128A1__\",     0x2000, 0x0, 3, \"x128a1\")\n+AVR_MCU (\"atxmega128a1u\",    ARCH_AVRXMEGA7, AVR_ISA_RMW,  \"__AVR_ATxmega128A1U__\",    0x2000, 0x0, 3, \"x128a1u\")\n+AVR_MCU (\"atxmega128a4u\",    ARCH_AVRXMEGA7, AVR_ISA_RMW,  \"__AVR_ATxmega128A4U__\",    0x2000, 0x0, 3, \"x128a4u\")\n /* Assembler only.  */\n-AVR_MCU (\"avr1\",                 ARCH_AVR1, AVR_ISA_NONE, NULL,                        0x0060, 1, \"s1200\")\n-AVR_MCU (\"at90s1200\",            ARCH_AVR1, AVR_ISA_NONE, \"__AVR_AT90S1200__\",         0x0060, 1, \"s1200\")\n-AVR_MCU (\"attiny11\",             ARCH_AVR1, AVR_ISA_NONE, \"__AVR_ATtiny11__\",          0x0060, 1, \"tn11\")\n-AVR_MCU (\"attiny12\",             ARCH_AVR1, AVR_ISA_NONE, \"__AVR_ATtiny12__\",          0x0060, 1, \"tn12\")\n-AVR_MCU (\"attiny15\",             ARCH_AVR1, AVR_ISA_NONE, \"__AVR_ATtiny15__\",          0x0060, 1, \"tn15\")\n-AVR_MCU (\"attiny28\",             ARCH_AVR1, AVR_ISA_NONE, \"__AVR_ATtiny28__\",          0x0060, 1, \"tn28\")\n+AVR_MCU (\"avr1\",                 ARCH_AVR1, AVR_ISA_NONE, NULL,                        0x0060, 0x0, 1, \"s1200\")\n+AVR_MCU (\"at90s1200\",            ARCH_AVR1, AVR_ISA_NONE, \"__AVR_AT90S1200__\",         0x0060, 0x0, 1, \"s1200\")\n+AVR_MCU (\"attiny11\",             ARCH_AVR1, AVR_ISA_NONE, \"__AVR_ATtiny11__\",          0x0060, 0x0, 1, \"tn11\")\n+AVR_MCU (\"attiny12\",             ARCH_AVR1, AVR_ISA_NONE, \"__AVR_ATtiny12__\",          0x0060, 0x0, 1, \"tn12\")\n+AVR_MCU (\"attiny15\",             ARCH_AVR1, AVR_ISA_NONE, \"__AVR_ATtiny15__\",          0x0060, 0x0, 1, \"tn15\")\n+AVR_MCU (\"attiny28\",             ARCH_AVR1, AVR_ISA_NONE, \"__AVR_ATtiny28__\",          0x0060, 0x0, 1, \"tn28\")"}, {"sha": "fb89134dc3013950c10b4c0d5fcf6673e8d2ad9a", "filename": "gcc/config/avr/avr-tables.opt", "status": "modified", "additions": 176, "deletions": 170, "changes": 346, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cba4ea9e2d806571f3724b83cf7fd1437f80a15b/gcc%2Fconfig%2Favr%2Favr-tables.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cba4ea9e2d806571f3724b83cf7fd1437f80a15b/gcc%2Fconfig%2Favr%2Favr-tables.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr-tables.opt?ref=cba4ea9e2d806571f3724b83cf7fd1437f80a15b", "patch": "@@ -282,512 +282,518 @@ EnumValue\n Enum(avr_mcu) String(avr5) Value(85)\n \n EnumValue\n-Enum(avr_mcu) String(ata5790) Value(86)\n+Enum(avr_mcu) String(ata5782) Value(86)\n \n EnumValue\n-Enum(avr_mcu) String(ata5790n) Value(87)\n+Enum(avr_mcu) String(ata5790) Value(87)\n \n EnumValue\n-Enum(avr_mcu) String(ata5795) Value(88)\n+Enum(avr_mcu) String(ata5790n) Value(88)\n \n EnumValue\n-Enum(avr_mcu) String(ata6613c) Value(89)\n+Enum(avr_mcu) String(ata5795) Value(89)\n \n EnumValue\n-Enum(avr_mcu) String(ata6614q) Value(90)\n+Enum(avr_mcu) String(ata5831) Value(90)\n \n EnumValue\n-Enum(avr_mcu) String(atmega16) Value(91)\n+Enum(avr_mcu) String(ata6613c) Value(91)\n \n EnumValue\n-Enum(avr_mcu) String(atmega16a) Value(92)\n+Enum(avr_mcu) String(ata6614q) Value(92)\n \n EnumValue\n-Enum(avr_mcu) String(atmega161) Value(93)\n+Enum(avr_mcu) String(atmega16) Value(93)\n \n EnumValue\n-Enum(avr_mcu) String(atmega162) Value(94)\n+Enum(avr_mcu) String(atmega16a) Value(94)\n \n EnumValue\n-Enum(avr_mcu) String(atmega163) Value(95)\n+Enum(avr_mcu) String(atmega161) Value(95)\n \n EnumValue\n-Enum(avr_mcu) String(atmega164a) Value(96)\n+Enum(avr_mcu) String(atmega162) Value(96)\n \n EnumValue\n-Enum(avr_mcu) String(atmega164p) Value(97)\n+Enum(avr_mcu) String(atmega163) Value(97)\n \n EnumValue\n-Enum(avr_mcu) String(atmega164pa) Value(98)\n+Enum(avr_mcu) String(atmega164a) Value(98)\n \n EnumValue\n-Enum(avr_mcu) String(atmega165) Value(99)\n+Enum(avr_mcu) String(atmega164p) Value(99)\n \n EnumValue\n-Enum(avr_mcu) String(atmega165a) Value(100)\n+Enum(avr_mcu) String(atmega164pa) Value(100)\n \n EnumValue\n-Enum(avr_mcu) String(atmega165p) Value(101)\n+Enum(avr_mcu) String(atmega165) Value(101)\n \n EnumValue\n-Enum(avr_mcu) String(atmega165pa) Value(102)\n+Enum(avr_mcu) String(atmega165a) Value(102)\n \n EnumValue\n-Enum(avr_mcu) String(atmega168) Value(103)\n+Enum(avr_mcu) String(atmega165p) Value(103)\n \n EnumValue\n-Enum(avr_mcu) String(atmega168a) Value(104)\n+Enum(avr_mcu) String(atmega165pa) Value(104)\n \n EnumValue\n-Enum(avr_mcu) String(atmega168p) Value(105)\n+Enum(avr_mcu) String(atmega168) Value(105)\n \n EnumValue\n-Enum(avr_mcu) String(atmega168pa) Value(106)\n+Enum(avr_mcu) String(atmega168a) Value(106)\n \n EnumValue\n-Enum(avr_mcu) String(atmega169) Value(107)\n+Enum(avr_mcu) String(atmega168p) Value(107)\n \n EnumValue\n-Enum(avr_mcu) String(atmega169a) Value(108)\n+Enum(avr_mcu) String(atmega168pa) Value(108)\n \n EnumValue\n-Enum(avr_mcu) String(atmega169p) Value(109)\n+Enum(avr_mcu) String(atmega169) Value(109)\n \n EnumValue\n-Enum(avr_mcu) String(atmega169pa) Value(110)\n+Enum(avr_mcu) String(atmega169a) Value(110)\n \n EnumValue\n-Enum(avr_mcu) String(atmega16hvb) Value(111)\n+Enum(avr_mcu) String(atmega169p) Value(111)\n \n EnumValue\n-Enum(avr_mcu) String(atmega16hvbrevb) Value(112)\n+Enum(avr_mcu) String(atmega169pa) Value(112)\n \n EnumValue\n-Enum(avr_mcu) String(atmega16m1) Value(113)\n+Enum(avr_mcu) String(atmega16hvb) Value(113)\n \n EnumValue\n-Enum(avr_mcu) String(atmega16u4) Value(114)\n+Enum(avr_mcu) String(atmega16hvbrevb) Value(114)\n \n EnumValue\n-Enum(avr_mcu) String(atmega26hvg) Value(115)\n+Enum(avr_mcu) String(atmega16m1) Value(115)\n \n EnumValue\n-Enum(avr_mcu) String(atmega32a) Value(116)\n+Enum(avr_mcu) String(atmega16u4) Value(116)\n \n EnumValue\n-Enum(avr_mcu) String(atmega32) Value(117)\n+Enum(avr_mcu) String(atmega26hvg) Value(117)\n \n EnumValue\n-Enum(avr_mcu) String(atmega323) Value(118)\n+Enum(avr_mcu) String(atmega32a) Value(118)\n \n EnumValue\n-Enum(avr_mcu) String(atmega324a) Value(119)\n+Enum(avr_mcu) String(atmega32) Value(119)\n \n EnumValue\n-Enum(avr_mcu) String(atmega324p) Value(120)\n+Enum(avr_mcu) String(atmega323) Value(120)\n \n EnumValue\n-Enum(avr_mcu) String(atmega324pa) Value(121)\n+Enum(avr_mcu) String(atmega324a) Value(121)\n \n EnumValue\n-Enum(avr_mcu) String(atmega325) Value(122)\n+Enum(avr_mcu) String(atmega324p) Value(122)\n \n EnumValue\n-Enum(avr_mcu) String(atmega325a) Value(123)\n+Enum(avr_mcu) String(atmega324pa) Value(123)\n \n EnumValue\n-Enum(avr_mcu) String(atmega325p) Value(124)\n+Enum(avr_mcu) String(atmega325) Value(124)\n \n EnumValue\n-Enum(avr_mcu) String(atmega3250) Value(125)\n+Enum(avr_mcu) String(atmega325a) Value(125)\n \n EnumValue\n-Enum(avr_mcu) String(atmega3250a) Value(126)\n+Enum(avr_mcu) String(atmega325p) Value(126)\n \n EnumValue\n-Enum(avr_mcu) String(atmega3250p) Value(127)\n+Enum(avr_mcu) String(atmega3250) Value(127)\n \n EnumValue\n-Enum(avr_mcu) String(atmega3250pa) Value(128)\n+Enum(avr_mcu) String(atmega3250a) Value(128)\n \n EnumValue\n-Enum(avr_mcu) String(atmega328) Value(129)\n+Enum(avr_mcu) String(atmega3250p) Value(129)\n \n EnumValue\n-Enum(avr_mcu) String(atmega328p) Value(130)\n+Enum(avr_mcu) String(atmega3250pa) Value(130)\n \n EnumValue\n-Enum(avr_mcu) String(atmega329) Value(131)\n+Enum(avr_mcu) String(atmega328) Value(131)\n \n EnumValue\n-Enum(avr_mcu) String(atmega329a) Value(132)\n+Enum(avr_mcu) String(atmega328p) Value(132)\n \n EnumValue\n-Enum(avr_mcu) String(atmega329p) Value(133)\n+Enum(avr_mcu) String(atmega329) Value(133)\n \n EnumValue\n-Enum(avr_mcu) String(atmega329pa) Value(134)\n+Enum(avr_mcu) String(atmega329a) Value(134)\n \n EnumValue\n-Enum(avr_mcu) String(atmega3290) Value(135)\n+Enum(avr_mcu) String(atmega329p) Value(135)\n \n EnumValue\n-Enum(avr_mcu) String(atmega3290a) Value(136)\n+Enum(avr_mcu) String(atmega329pa) Value(136)\n \n EnumValue\n-Enum(avr_mcu) String(atmega3290p) Value(137)\n+Enum(avr_mcu) String(atmega3290) Value(137)\n \n EnumValue\n-Enum(avr_mcu) String(atmega3290pa) Value(138)\n+Enum(avr_mcu) String(atmega3290a) Value(138)\n \n EnumValue\n-Enum(avr_mcu) String(atmega32c1) Value(139)\n+Enum(avr_mcu) String(atmega3290p) Value(139)\n \n EnumValue\n-Enum(avr_mcu) String(atmega32m1) Value(140)\n+Enum(avr_mcu) String(atmega3290pa) Value(140)\n \n EnumValue\n-Enum(avr_mcu) String(atmega32u4) Value(141)\n+Enum(avr_mcu) String(atmega32c1) Value(141)\n \n EnumValue\n-Enum(avr_mcu) String(atmega32u6) Value(142)\n+Enum(avr_mcu) String(atmega32m1) Value(142)\n \n EnumValue\n-Enum(avr_mcu) String(atmega406) Value(143)\n+Enum(avr_mcu) String(atmega32u4) Value(143)\n \n EnumValue\n-Enum(avr_mcu) String(atmega64) Value(144)\n+Enum(avr_mcu) String(atmega32u6) Value(144)\n \n EnumValue\n-Enum(avr_mcu) String(atmega64a) Value(145)\n+Enum(avr_mcu) String(atmega406) Value(145)\n \n EnumValue\n-Enum(avr_mcu) String(atmega640) Value(146)\n+Enum(avr_mcu) String(atmega64) Value(146)\n \n EnumValue\n-Enum(avr_mcu) String(atmega644) Value(147)\n+Enum(avr_mcu) String(atmega64a) Value(147)\n \n EnumValue\n-Enum(avr_mcu) String(atmega644a) Value(148)\n+Enum(avr_mcu) String(atmega640) Value(148)\n \n EnumValue\n-Enum(avr_mcu) String(atmega644p) Value(149)\n+Enum(avr_mcu) String(atmega644) Value(149)\n \n EnumValue\n-Enum(avr_mcu) String(atmega644pa) Value(150)\n+Enum(avr_mcu) String(atmega644a) Value(150)\n \n EnumValue\n-Enum(avr_mcu) String(atmega645) Value(151)\n+Enum(avr_mcu) String(atmega644p) Value(151)\n \n EnumValue\n-Enum(avr_mcu) String(atmega645a) Value(152)\n+Enum(avr_mcu) String(atmega644pa) Value(152)\n \n EnumValue\n-Enum(avr_mcu) String(atmega645p) Value(153)\n+Enum(avr_mcu) String(atmega645) Value(153)\n \n EnumValue\n-Enum(avr_mcu) String(atmega6450) Value(154)\n+Enum(avr_mcu) String(atmega645a) Value(154)\n \n EnumValue\n-Enum(avr_mcu) String(atmega6450a) Value(155)\n+Enum(avr_mcu) String(atmega645p) Value(155)\n \n EnumValue\n-Enum(avr_mcu) String(atmega6450p) Value(156)\n+Enum(avr_mcu) String(atmega6450) Value(156)\n \n EnumValue\n-Enum(avr_mcu) String(atmega649) Value(157)\n+Enum(avr_mcu) String(atmega6450a) Value(157)\n \n EnumValue\n-Enum(avr_mcu) String(atmega649a) Value(158)\n+Enum(avr_mcu) String(atmega6450p) Value(158)\n \n EnumValue\n-Enum(avr_mcu) String(atmega649p) Value(159)\n+Enum(avr_mcu) String(atmega649) Value(159)\n \n EnumValue\n-Enum(avr_mcu) String(atmega6490) Value(160)\n+Enum(avr_mcu) String(atmega649a) Value(160)\n \n EnumValue\n-Enum(avr_mcu) String(atmega16hva) Value(161)\n+Enum(avr_mcu) String(atmega649p) Value(161)\n \n EnumValue\n-Enum(avr_mcu) String(atmega16hva2) Value(162)\n+Enum(avr_mcu) String(atmega6490) Value(162)\n \n EnumValue\n-Enum(avr_mcu) String(atmega32hvb) Value(163)\n+Enum(avr_mcu) String(atmega16hva) Value(163)\n \n EnumValue\n-Enum(avr_mcu) String(atmega6490a) Value(164)\n+Enum(avr_mcu) String(atmega16hva2) Value(164)\n \n EnumValue\n-Enum(avr_mcu) String(atmega6490p) Value(165)\n+Enum(avr_mcu) String(atmega32hvb) Value(165)\n \n EnumValue\n-Enum(avr_mcu) String(atmega64c1) Value(166)\n+Enum(avr_mcu) String(atmega6490a) Value(166)\n \n EnumValue\n-Enum(avr_mcu) String(atmega64m1) Value(167)\n+Enum(avr_mcu) String(atmega6490p) Value(167)\n \n EnumValue\n-Enum(avr_mcu) String(atmega64hve) Value(168)\n+Enum(avr_mcu) String(atmega64c1) Value(168)\n \n EnumValue\n-Enum(avr_mcu) String(atmega64rfa2) Value(169)\n+Enum(avr_mcu) String(atmega64m1) Value(169)\n \n EnumValue\n-Enum(avr_mcu) String(atmega64rfr2) Value(170)\n+Enum(avr_mcu) String(atmega64hve) Value(170)\n \n EnumValue\n-Enum(avr_mcu) String(atmega32hvbrevb) Value(171)\n+Enum(avr_mcu) String(atmega64rfa2) Value(171)\n \n EnumValue\n-Enum(avr_mcu) String(atmega48hvf) Value(172)\n+Enum(avr_mcu) String(atmega64rfr2) Value(172)\n \n EnumValue\n-Enum(avr_mcu) String(at90can32) Value(173)\n+Enum(avr_mcu) String(atmega32hvbrevb) Value(173)\n \n EnumValue\n-Enum(avr_mcu) String(at90can64) Value(174)\n+Enum(avr_mcu) String(atmega48hvf) Value(174)\n \n EnumValue\n-Enum(avr_mcu) String(at90pwm161) Value(175)\n+Enum(avr_mcu) String(at90can32) Value(175)\n \n EnumValue\n-Enum(avr_mcu) String(at90pwm216) Value(176)\n+Enum(avr_mcu) String(at90can64) Value(176)\n \n EnumValue\n-Enum(avr_mcu) String(at90pwm316) Value(177)\n+Enum(avr_mcu) String(at90pwm161) Value(177)\n \n EnumValue\n-Enum(avr_mcu) String(at90scr100) Value(178)\n+Enum(avr_mcu) String(at90pwm216) Value(178)\n \n EnumValue\n-Enum(avr_mcu) String(at90usb646) Value(179)\n+Enum(avr_mcu) String(at90pwm316) Value(179)\n \n EnumValue\n-Enum(avr_mcu) String(at90usb647) Value(180)\n+Enum(avr_mcu) String(at90scr100) Value(180)\n \n EnumValue\n-Enum(avr_mcu) String(at94k) Value(181)\n+Enum(avr_mcu) String(at90usb646) Value(181)\n \n EnumValue\n-Enum(avr_mcu) String(m3000) Value(182)\n+Enum(avr_mcu) String(at90usb647) Value(182)\n \n EnumValue\n-Enum(avr_mcu) String(avr51) Value(183)\n+Enum(avr_mcu) String(at94k) Value(183)\n \n EnumValue\n-Enum(avr_mcu) String(atmega128) Value(184)\n+Enum(avr_mcu) String(m3000) Value(184)\n \n EnumValue\n-Enum(avr_mcu) String(atmega128a) Value(185)\n+Enum(avr_mcu) String(avr51) Value(185)\n \n EnumValue\n-Enum(avr_mcu) String(atmega1280) Value(186)\n+Enum(avr_mcu) String(atmega128) Value(186)\n \n EnumValue\n-Enum(avr_mcu) String(atmega1281) Value(187)\n+Enum(avr_mcu) String(atmega128a) Value(187)\n \n EnumValue\n-Enum(avr_mcu) String(atmega1284) Value(188)\n+Enum(avr_mcu) String(atmega1280) Value(188)\n \n EnumValue\n-Enum(avr_mcu) String(atmega1284p) Value(189)\n+Enum(avr_mcu) String(atmega1281) Value(189)\n \n EnumValue\n-Enum(avr_mcu) String(atmega128rfa1) Value(190)\n+Enum(avr_mcu) String(atmega1284) Value(190)\n \n EnumValue\n-Enum(avr_mcu) String(at90can128) Value(191)\n+Enum(avr_mcu) String(atmega1284p) Value(191)\n \n EnumValue\n-Enum(avr_mcu) String(at90usb1286) Value(192)\n+Enum(avr_mcu) String(atmega128rfa1) Value(192)\n \n EnumValue\n-Enum(avr_mcu) String(at90usb1287) Value(193)\n+Enum(avr_mcu) String(at90can128) Value(193)\n \n EnumValue\n-Enum(avr_mcu) String(avr6) Value(194)\n+Enum(avr_mcu) String(at90usb1286) Value(194)\n \n EnumValue\n-Enum(avr_mcu) String(atmega2560) Value(195)\n+Enum(avr_mcu) String(at90usb1287) Value(195)\n \n EnumValue\n-Enum(avr_mcu) String(atmega2561) Value(196)\n+Enum(avr_mcu) String(avr6) Value(196)\n \n EnumValue\n-Enum(avr_mcu) String(avrxmega2) Value(197)\n+Enum(avr_mcu) String(atmega2560) Value(197)\n \n EnumValue\n-Enum(avr_mcu) String(atxmega16a4) Value(198)\n+Enum(avr_mcu) String(atmega2561) Value(198)\n \n EnumValue\n-Enum(avr_mcu) String(atxmega16d4) Value(199)\n+Enum(avr_mcu) String(avrxmega2) Value(199)\n \n EnumValue\n-Enum(avr_mcu) String(atxmega32a4) Value(200)\n+Enum(avr_mcu) String(atxmega16a4) Value(200)\n \n EnumValue\n-Enum(avr_mcu) String(atxmega32d4) Value(201)\n+Enum(avr_mcu) String(atxmega16d4) Value(201)\n \n EnumValue\n-Enum(avr_mcu) String(atxmega32x1) Value(202)\n+Enum(avr_mcu) String(atxmega32a4) Value(202)\n \n EnumValue\n-Enum(avr_mcu) String(atmxt112sl) Value(203)\n+Enum(avr_mcu) String(atxmega32d4) Value(203)\n \n EnumValue\n-Enum(avr_mcu) String(atmxt224) Value(204)\n+Enum(avr_mcu) String(atxmega32x1) Value(204)\n \n EnumValue\n-Enum(avr_mcu) String(atmxt224e) Value(205)\n+Enum(avr_mcu) String(atmxt112sl) Value(205)\n \n EnumValue\n-Enum(avr_mcu) String(atmxt336s) Value(206)\n+Enum(avr_mcu) String(atmxt224) Value(206)\n \n EnumValue\n-Enum(avr_mcu) String(atxmega16a4u) Value(207)\n+Enum(avr_mcu) String(atmxt224e) Value(207)\n \n EnumValue\n-Enum(avr_mcu) String(atxmega16c4) Value(208)\n+Enum(avr_mcu) String(atmxt336s) Value(208)\n \n EnumValue\n-Enum(avr_mcu) String(atxmega32a4u) Value(209)\n+Enum(avr_mcu) String(atxmega16a4u) Value(209)\n \n EnumValue\n-Enum(avr_mcu) String(atxmega32c4) Value(210)\n+Enum(avr_mcu) String(atxmega16c4) Value(210)\n \n EnumValue\n-Enum(avr_mcu) String(atxmega32e5) Value(211)\n+Enum(avr_mcu) String(atxmega32a4u) Value(211)\n \n EnumValue\n-Enum(avr_mcu) String(avrxmega4) Value(212)\n+Enum(avr_mcu) String(atxmega32c4) Value(212)\n \n EnumValue\n-Enum(avr_mcu) String(atxmega64a3) Value(213)\n+Enum(avr_mcu) String(atxmega32e5) Value(213)\n \n EnumValue\n-Enum(avr_mcu) String(atxmega64d3) Value(214)\n+Enum(avr_mcu) String(avrxmega4) Value(214)\n \n EnumValue\n-Enum(avr_mcu) String(atxmega64a3u) Value(215)\n+Enum(avr_mcu) String(atxmega64a3) Value(215)\n \n EnumValue\n-Enum(avr_mcu) String(atxmega64a4u) Value(216)\n+Enum(avr_mcu) String(atxmega64d3) Value(216)\n \n EnumValue\n-Enum(avr_mcu) String(atxmega64b1) Value(217)\n+Enum(avr_mcu) String(atxmega64a3u) Value(217)\n \n EnumValue\n-Enum(avr_mcu) String(atxmega64b3) Value(218)\n+Enum(avr_mcu) String(atxmega64a4u) Value(218)\n \n EnumValue\n-Enum(avr_mcu) String(atxmega64c3) Value(219)\n+Enum(avr_mcu) String(atxmega64b1) Value(219)\n \n EnumValue\n-Enum(avr_mcu) String(atxmega64d4) Value(220)\n+Enum(avr_mcu) String(atxmega64b3) Value(220)\n \n EnumValue\n-Enum(avr_mcu) String(avrxmega5) Value(221)\n+Enum(avr_mcu) String(atxmega64c3) Value(221)\n \n EnumValue\n-Enum(avr_mcu) String(atxmega64a1) Value(222)\n+Enum(avr_mcu) String(atxmega64d4) Value(222)\n \n EnumValue\n-Enum(avr_mcu) String(atxmega64a1u) Value(223)\n+Enum(avr_mcu) String(avrxmega5) Value(223)\n \n EnumValue\n-Enum(avr_mcu) String(avrxmega6) Value(224)\n+Enum(avr_mcu) String(atxmega64a1) Value(224)\n \n EnumValue\n-Enum(avr_mcu) String(atxmega128a3) Value(225)\n+Enum(avr_mcu) String(atxmega64a1u) Value(225)\n \n EnumValue\n-Enum(avr_mcu) String(atxmega128d3) Value(226)\n+Enum(avr_mcu) String(avrxmega6) Value(226)\n \n EnumValue\n-Enum(avr_mcu) String(atxmega192a3) Value(227)\n+Enum(avr_mcu) String(atxmega128a3) Value(227)\n \n EnumValue\n-Enum(avr_mcu) String(atxmega192d3) Value(228)\n+Enum(avr_mcu) String(atxmega128d3) Value(228)\n \n EnumValue\n-Enum(avr_mcu) String(atxmega256a3) Value(229)\n+Enum(avr_mcu) String(atxmega192a3) Value(229)\n \n EnumValue\n-Enum(avr_mcu) String(atxmega256a3b) Value(230)\n+Enum(avr_mcu) String(atxmega192d3) Value(230)\n \n EnumValue\n-Enum(avr_mcu) String(atxmega256a3bu) Value(231)\n+Enum(avr_mcu) String(atxmega256a3) Value(231)\n \n EnumValue\n-Enum(avr_mcu) String(atxmega256d3) Value(232)\n+Enum(avr_mcu) String(atxmega256a3b) Value(232)\n \n EnumValue\n-Enum(avr_mcu) String(atxmega128a3u) Value(233)\n+Enum(avr_mcu) String(atxmega256a3bu) Value(233)\n \n EnumValue\n-Enum(avr_mcu) String(atxmega128b1) Value(234)\n+Enum(avr_mcu) String(atxmega256d3) Value(234)\n \n EnumValue\n-Enum(avr_mcu) String(atxmega128b3) Value(235)\n+Enum(avr_mcu) String(atxmega128a3u) Value(235)\n \n EnumValue\n-Enum(avr_mcu) String(atxmega128c3) Value(236)\n+Enum(avr_mcu) String(atxmega128b1) Value(236)\n \n EnumValue\n-Enum(avr_mcu) String(atxmega128d4) Value(237)\n+Enum(avr_mcu) String(atxmega128b3) Value(237)\n \n EnumValue\n-Enum(avr_mcu) String(atmxt540s) Value(238)\n+Enum(avr_mcu) String(atxmega128c3) Value(238)\n \n EnumValue\n-Enum(avr_mcu) String(atmxt540sreva) Value(239)\n+Enum(avr_mcu) String(atxmega128d4) Value(239)\n \n EnumValue\n-Enum(avr_mcu) String(atxmega192a3u) Value(240)\n+Enum(avr_mcu) String(atmxt540s) Value(240)\n \n EnumValue\n-Enum(avr_mcu) String(atxmega192c3) Value(241)\n+Enum(avr_mcu) String(atmxt540sreva) Value(241)\n \n EnumValue\n-Enum(avr_mcu) String(atxmega256a3u) Value(242)\n+Enum(avr_mcu) String(atxmega192a3u) Value(242)\n \n EnumValue\n-Enum(avr_mcu) String(atxmega256c3) Value(243)\n+Enum(avr_mcu) String(atxmega192c3) Value(243)\n \n EnumValue\n-Enum(avr_mcu) String(atxmega384c3) Value(244)\n+Enum(avr_mcu) String(atxmega256a3u) Value(244)\n \n EnumValue\n-Enum(avr_mcu) String(atxmega384d3) Value(245)\n+Enum(avr_mcu) String(atxmega256c3) Value(245)\n \n EnumValue\n-Enum(avr_mcu) String(avrxmega7) Value(246)\n+Enum(avr_mcu) String(atxmega384c3) Value(246)\n \n EnumValue\n-Enum(avr_mcu) String(atxmega128a1) Value(247)\n+Enum(avr_mcu) String(atxmega384d3) Value(247)\n \n EnumValue\n-Enum(avr_mcu) String(atxmega128a1u) Value(248)\n+Enum(avr_mcu) String(avrxmega7) Value(248)\n \n EnumValue\n-Enum(avr_mcu) String(atxmega128a4u) Value(249)\n+Enum(avr_mcu) String(atxmega128a1) Value(249)\n \n EnumValue\n-Enum(avr_mcu) String(avr1) Value(250)\n+Enum(avr_mcu) String(atxmega128a1u) Value(250)\n \n EnumValue\n-Enum(avr_mcu) String(at90s1200) Value(251)\n+Enum(avr_mcu) String(atxmega128a4u) Value(251)\n \n EnumValue\n-Enum(avr_mcu) String(attiny11) Value(252)\n+Enum(avr_mcu) String(avr1) Value(252)\n \n EnumValue\n-Enum(avr_mcu) String(attiny12) Value(253)\n+Enum(avr_mcu) String(at90s1200) Value(253)\n \n EnumValue\n-Enum(avr_mcu) String(attiny15) Value(254)\n+Enum(avr_mcu) String(attiny11) Value(254)\n \n EnumValue\n-Enum(avr_mcu) String(attiny28) Value(255)\n+Enum(avr_mcu) String(attiny12) Value(255)\n+\n+EnumValue\n+Enum(avr_mcu) String(attiny15) Value(256)\n+\n+EnumValue\n+Enum(avr_mcu) String(attiny28) Value(257)\n "}, {"sha": "921502e3d0bfc1abe87eccbc0c615b84cace13e8", "filename": "gcc/config/avr/avr.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cba4ea9e2d806571f3724b83cf7fd1437f80a15b/gcc%2Fconfig%2Favr%2Favr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cba4ea9e2d806571f3724b83cf7fd1437f80a15b/gcc%2Fconfig%2Favr%2Favr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.h?ref=cba4ea9e2d806571f3724b83cf7fd1437f80a15b", "patch": "@@ -491,6 +491,7 @@ typedef struct avr_args\n extern const char *avr_device_to_as (int argc, const char **argv);\n extern const char *avr_device_to_ld (int argc, const char **argv);\n extern const char *avr_device_to_data_start (int argc, const char **argv);\n+extern const char *avr_device_to_text_start (int argc, const char **argv);\n extern const char *avr_device_to_startfiles (int argc, const char **argv);\n extern const char *avr_device_to_devicelib (int argc, const char **argv);\n extern const char *avr_device_to_sp8 (int argc, const char **argv);\n@@ -499,6 +500,7 @@ extern const char *avr_device_to_sp8 (int argc, const char **argv);\n   { \"device_to_as\", avr_device_to_as },                 \\\n   { \"device_to_ld\", avr_device_to_ld },                 \\\n   { \"device_to_data_start\", avr_device_to_data_start }, \\\n+  { \"device_to_text_start\", avr_device_to_text_start }, \\\n   { \"device_to_startfile\", avr_device_to_startfiles },  \\\n   { \"device_to_devicelib\", avr_device_to_devicelib },   \\\n   { \"device_to_sp8\", avr_device_to_sp8 },\n@@ -525,6 +527,7 @@ extern const char *avr_device_to_sp8 (int argc, const char **argv);\n                                mmcu=at90usb64*:--pmem-wrap-around=64k}}}\\\n %:device_to_ld(%{mmcu=*:%*})\\\n %:device_to_data_start(%{mmcu=*:%*})\\\n+%:device_to_text_start(%{mmcu=*:%*}) \\\n %{shared:%eshared is not supported}\"\n \n #define LIB_SPEC \\"}, {"sha": "72bf7bd5f76a10af668e0b2d46592709feed682d", "filename": "gcc/config/avr/driver-avr.c", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cba4ea9e2d806571f3724b83cf7fd1437f80a15b/gcc%2Fconfig%2Favr%2Fdriver-avr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cba4ea9e2d806571f3724b83cf7fd1437f80a15b/gcc%2Fconfig%2Favr%2Fdriver-avr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Fdriver-avr.c?ref=cba4ea9e2d806571f3724b83cf7fd1437f80a15b", "patch": "@@ -101,6 +101,30 @@ avr_device_to_data_start (int argc, const char **argv)\n   return concat (\"-Tdata \", data_section_start_str, NULL);    \n }\n \n+/* Returns command line parameters that describe start of text section.  */\n+\n+const char *\n+avr_device_to_text_start (int argc, const char **argv)\n+{\n+  unsigned long text_section_start;\n+  char text_section_start_str[16];\n+\n+  if (0 == argc)\n+    return NULL;\n+\n+  avr_set_current_device (argv[0]);\n+\n+  if (avr_current_device->text_section_start == 0x0)\n+    return NULL;\n+\n+  text_section_start = avr_current_device->text_section_start;\n+\n+  snprintf (text_section_start_str, sizeof(text_section_start_str) - 1,\n+            \"0x%lX\", text_section_start);\n+\n+  return concat (\"-Ttext \", text_section_start_str, NULL);\n+}\n+\n /* Returns command line parameters that describe the device startfile.  */\n \n const char *"}, {"sha": "d04a4d35da0a5ae40a3bc2b266d4224440e64c3d", "filename": "gcc/config/avr/t-multilib", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cba4ea9e2d806571f3724b83cf7fd1437f80a15b/gcc%2Fconfig%2Favr%2Ft-multilib", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cba4ea9e2d806571f3724b83cf7fd1437f80a15b/gcc%2Fconfig%2Favr%2Ft-multilib", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Ft-multilib?ref=cba4ea9e2d806571f3724b83cf7fd1437f80a15b", "patch": "@@ -119,9 +119,11 @@ MULTILIB_MATCHES = \\\n \tmmcu?avr4=mmcu?at90pwm3 \\\n \tmmcu?avr4=mmcu?at90pwm3b \\\n \tmmcu?avr4=mmcu?at90pwm81 \\\n+\tmmcu?avr5=mmcu?ata5782 \\\n \tmmcu?avr5=mmcu?ata5790 \\\n \tmmcu?avr5=mmcu?ata5790n \\\n \tmmcu?avr5=mmcu?ata5795 \\\n+\tmmcu?avr5=mmcu?ata5831 \\\n \tmmcu?avr5=mmcu?ata6613c \\\n \tmmcu?avr5=mmcu?ata6614q \\\n \tmmcu?avr5=mmcu?atmega16 \\"}]}