{"sha": "767f865fb828fba54459911661d15289e1a42930", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzY3Zjg2NWZiODI4ZmJhNTQ0NTk5MTE2NjFkMTUyODllMWE0MjkzMA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2010-10-07T14:35:38Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2010-10-07T14:35:38Z"}, "message": "target.def (autovectorize_vector_sizes): New target hook.\n\n2010-10-07  Richard Guenther  <rguenther@suse.de>\n\n\t* target.def (autovectorize_vector_sizes): New target hook.\n\t* targhooks.c (default_autovectorize_vector_sizes): New function.\n\t* targhooks.h (default_autovectorize_vector_sizes): Declare.\n\t* doc/tm.texi.in (TARGET_VECTORIZE_AUTOVECTORIZE_VECTOR_SIZES):\n\tDocument.\n\t* doc/tm.texi: Update.\n\t* config/i386/i386.c (ix86_autovectorize_vector_sizes): New function.\n\t(TARGET_VECTORIZE_AUTOVECTORIZE_VECTOR_SIZES): Define.\n\nFrom-SVN: r165115", "tree": {"sha": "6f561e813aa0ca8ad15d3002a912e9e02e3da749", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6f561e813aa0ca8ad15d3002a912e9e02e3da749"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/767f865fb828fba54459911661d15289e1a42930", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/767f865fb828fba54459911661d15289e1a42930", "html_url": "https://github.com/Rust-GCC/gccrs/commit/767f865fb828fba54459911661d15289e1a42930", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/767f865fb828fba54459911661d15289e1a42930/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cc4b51708785f9482c6b2874daafa4fcc121d5d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc4b51708785f9482c6b2874daafa4fcc121d5d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc4b51708785f9482c6b2874daafa4fcc121d5d1"}], "stats": {"total": 56, "additions": 56, "deletions": 0}, "files": [{"sha": "94eada1f1cf55f1b52722411ccc9e7b952591d3e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/767f865fb828fba54459911661d15289e1a42930/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/767f865fb828fba54459911661d15289e1a42930/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=767f865fb828fba54459911661d15289e1a42930", "patch": "@@ -1,3 +1,14 @@\n+2010-10-07  Richard Guenther  <rguenther@suse.de>\n+\n+\t* target.def (autovectorize_vector_sizes): New target hook.\n+\t* targhooks.c (default_autovectorize_vector_sizes): New function.\n+\t* targhooks.h (default_autovectorize_vector_sizes): Declare.\n+\t* doc/tm.texi.in (TARGET_VECTORIZE_AUTOVECTORIZE_VECTOR_SIZES):\n+\tDocument.\n+\t* doc/tm.texi: Update.\n+\t* config/i386/i386.c (ix86_autovectorize_vector_sizes): New function.\n+\t(TARGET_VECTORIZE_AUTOVECTORIZE_VECTOR_SIZES): Define.\n+\n 2010-10-07  Richard Guenther  <rguenther@suse.de>\n \n \t* target.def (units_per_simd_word): Rename to ..."}, {"sha": "39308cf59188bbf65d6d18548a1dc27f8a0d12a8", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/767f865fb828fba54459911661d15289e1a42930/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/767f865fb828fba54459911661d15289e1a42930/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=767f865fb828fba54459911661d15289e1a42930", "patch": "@@ -32993,6 +32993,15 @@ ix86_preferred_simd_mode (enum machine_mode mode)\n   return word_mode;\n }\n \n+/* If AVX is enabled then try vectorizing with both 256bit and 128bit\n+   vectors.  */\n+\n+static unsigned int\n+ix86_autovectorize_vector_sizes (void)\n+{\n+  return TARGET_AVX ? 32 | 16 : 0;\n+}\n+\n /* Initialize the GCC target structure.  */\n #undef TARGET_RETURN_IN_MEMORY\n #define TARGET_RETURN_IN_MEMORY ix86_return_in_memory\n@@ -33253,6 +33262,9 @@ ix86_preferred_simd_mode (enum machine_mode mode)\n #undef TARGET_VECTORIZE_PREFERRED_SIMD_MODE\n #define TARGET_VECTORIZE_PREFERRED_SIMD_MODE \\\n   ix86_preferred_simd_mode\n+#undef TARGET_VECTORIZE_AUTOVECTORIZE_VECTOR_SIZES\n+#define TARGET_VECTORIZE_AUTOVECTORIZE_VECTOR_SIZES \\\n+  ix86_autovectorize_vector_sizes\n \n #undef TARGET_SET_CURRENT_FUNCTION\n #define TARGET_SET_CURRENT_FUNCTION ix86_set_current_function"}, {"sha": "faa72502df7cad168c1c0954ae68618ae4500ab1", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/767f865fb828fba54459911661d15289e1a42930/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/767f865fb828fba54459911661d15289e1a42930/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=767f865fb828fba54459911661d15289e1a42930", "patch": "@@ -5750,6 +5750,13 @@ equal to @code{word_mode}, because the vectorizer can do some\n transformations even in absence of specialized @acronym{SIMD} hardware.\n @end deftypefn\n \n+@deftypefn {Target Hook} {unsigned int} TARGET_VECTORIZE_AUTOVECTORIZE_VECTOR_SIZES (void)\n+This hook should return a mask of sizes that should be iterated over\n+after trying to autovectorize using the vector size derived from the\n+mode returned by @code{TARGET_VECTORIZE_PREFERRED_SIMD_MODE}.\n+The default is zero which means to not iterate over other vector sizes.\n+@end deftypefn\n+\n @node Anchored Addresses\n @section Anchored Addresses\n @cindex anchored addresses"}, {"sha": "cdd9a224ea12838f8888995958992a11a9202e27", "filename": "gcc/doc/tm.texi.in", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/767f865fb828fba54459911661d15289e1a42930/gcc%2Fdoc%2Ftm.texi.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/767f865fb828fba54459911661d15289e1a42930/gcc%2Fdoc%2Ftm.texi.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi.in?ref=767f865fb828fba54459911661d15289e1a42930", "patch": "@@ -5748,6 +5748,13 @@ equal to @code{word_mode}, because the vectorizer can do some\n transformations even in absence of specialized @acronym{SIMD} hardware.\n @end deftypefn\n \n+@hook TARGET_VECTORIZE_AUTOVECTORIZE_VECTOR_SIZES\n+This hook should return a mask of sizes that should be iterated over\n+after trying to autovectorize using the vector size derived from the\n+mode returned by @code{TARGET_VECTORIZE_PREFERRED_SIMD_MODE}.\n+The default is zero which means to not iterate over other vector sizes.\n+@end deftypefn\n+\n @node Anchored Addresses\n @section Anchored Addresses\n @cindex anchored addresses"}, {"sha": "266870a6e99ed3528338ec517c07629f3554ae55", "filename": "gcc/target.def", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/767f865fb828fba54459911661d15289e1a42930/gcc%2Ftarget.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/767f865fb828fba54459911661d15289e1a42930/gcc%2Ftarget.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftarget.def?ref=767f865fb828fba54459911661d15289e1a42930", "patch": "@@ -889,6 +889,15 @@ DEFHOOK\n  (enum machine_mode mode),\n  default_preferred_simd_mode)\n \n+/* Returns a mask of vector sizes to iterate over when auto-vectorizing\n+   after processing the preferred one derived from preferred_simd_mode.  */\n+DEFHOOK\n+(autovectorize_vector_sizes,\n+ \"\",\n+ unsigned int,\n+ (void),\n+ default_autovectorize_vector_sizes)\n+\n HOOK_VECTOR_END (vectorize)\n \n #undef HOOK_PREFIX"}, {"sha": "9d7ebc0a474aab5bb5c257969ea36c52999638f5", "filename": "gcc/targhooks.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/767f865fb828fba54459911661d15289e1a42930/gcc%2Ftarghooks.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/767f865fb828fba54459911661d15289e1a42930/gcc%2Ftarghooks.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftarghooks.c?ref=767f865fb828fba54459911661d15289e1a42930", "patch": "@@ -985,6 +985,15 @@ default_preferred_simd_mode (enum machine_mode mode ATTRIBUTE_UNUSED)\n   return word_mode;\n }\n \n+/* By default only the size derived from the preferred vector mode\n+   is tried.  */\n+\n+unsigned int\n+default_autovectorize_vector_sizes (void)\n+{\n+  return 0;\n+}\n+\n /* Determine whether or not a pointer mode is valid. Assume defaults\n    of ptr_mode or Pmode - can be overridden.  */\n bool"}, {"sha": "920c91830d138c05f7f522de2007c44328d4fe3d", "filename": "gcc/targhooks.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/767f865fb828fba54459911661d15289e1a42930/gcc%2Ftarghooks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/767f865fb828fba54459911661d15289e1a42930/gcc%2Ftarghooks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftarghooks.h?ref=767f865fb828fba54459911661d15289e1a42930", "patch": "@@ -87,6 +87,7 @@ default_builtin_support_vector_misalignment (enum machine_mode mode,\n \t\t\t\t\t     const_tree,\n \t\t\t\t\t     int, bool);\n extern enum machine_mode default_preferred_simd_mode (enum machine_mode mode);\n+extern unsigned int default_autovectorize_vector_sizes (void);\n \n /* These are here, and not in hooks.[ch], because not all users of\n    hooks.h include tm.h, and thus we don't have CUMULATIVE_ARGS.  */"}]}