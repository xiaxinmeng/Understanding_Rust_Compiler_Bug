{"sha": "62b0d9ecf809e007149b3921256ba6999e95dc89", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjJiMGQ5ZWNmODA5ZTAwNzE0OWIzOTIxMjU2YmE2OTk5ZTk1ZGM4OQ==", "commit": {"author": {"name": "Daniel Jacobowitz", "email": "dan@codesourcery.com", "date": "2007-08-01T16:53:01Z"}, "committer": {"name": "Daniel Jacobowitz", "email": "drow@gcc.gnu.org", "date": "2007-08-01T16:53:01Z"}, "message": "re PR tree-optimization/32919 (SSA corruption because of abnormal edges and PRE)\n\n\tPR tree-optimization/32919\n\t* tree-ssa-sccvn.c (visit_phi): Do not visit abnormal PHIs.\n\t* tree-ssa-coalesce.c (ssa_conflicts_dump): New.\n\t(coalesce_ssa_name): Call it.\n\nFrom-SVN: r127132", "tree": {"sha": "d02919ec89b4a0c74b6a0015731011335652b7ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d02919ec89b4a0c74b6a0015731011335652b7ca"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/62b0d9ecf809e007149b3921256ba6999e95dc89", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62b0d9ecf809e007149b3921256ba6999e95dc89", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62b0d9ecf809e007149b3921256ba6999e95dc89", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62b0d9ecf809e007149b3921256ba6999e95dc89/comments", "author": null, "committer": null, "parents": [{"sha": "08e7e8cb97f7b79d945ac7a53102cc94ce6f433c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08e7e8cb97f7b79d945ac7a53102cc94ce6f433c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/08e7e8cb97f7b79d945ac7a53102cc94ce6f433c"}], "stats": {"total": 63, "additions": 63, "deletions": 0}, "files": [{"sha": "9b951a7cdf3e02f176f4994c773a7d4d1ddb8780", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62b0d9ecf809e007149b3921256ba6999e95dc89/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62b0d9ecf809e007149b3921256ba6999e95dc89/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=62b0d9ecf809e007149b3921256ba6999e95dc89", "patch": "@@ -1,3 +1,10 @@\n+2007-08-01  Daniel Jacobowitz  <dan@codesourcery.com>\n+\n+\tPR tree-optimization/32919\n+\t* tree-ssa-sccvn.c (visit_phi): Do not visit abnormal PHIs.\n+\t* tree-ssa-coalesce.c (ssa_conflicts_dump): New.\n+\t(coalesce_ssa_name): Call it.\n+\n 2007-08-01  Sandra Loosemore  <sandra@codesourcery.com>\n \t    David Ung  <davidu@mips.com>\n "}, {"sha": "c2de71481175f6ebec625003ea3decc4c53837bd", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62b0d9ecf809e007149b3921256ba6999e95dc89/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62b0d9ecf809e007149b3921256ba6999e95dc89/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=62b0d9ecf809e007149b3921256ba6999e95dc89", "patch": "@@ -1,3 +1,8 @@\n+2007-08-01  Daniel Jacobowitz  <dan@codesourcery.com>\n+\n+\tPR tree-optimization/32919\n+\t* gcc.c-torture/compile/pr32919.c: New.\n+\n 2007-08-01  Nick Clifton  <nickc@redhat.com>\n \n \t* gcc.c-torture/execute/execute.exp: Change copyright header to"}, {"sha": "33956c8c0b2b58c5421a5ecd73d8b7703276b6c3", "filename": "gcc/testsuite/gcc.c-torture/compile/pr32919.c", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62b0d9ecf809e007149b3921256ba6999e95dc89/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr32919.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62b0d9ecf809e007149b3921256ba6999e95dc89/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr32919.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr32919.c?ref=62b0d9ecf809e007149b3921256ba6999e95dc89", "patch": "@@ -0,0 +1,26 @@\n+void _IO_vfprintf_internal ( char *f )\n+{\n+  static const void *const step0_jumps[] = { &&do_form_unknown, &&do_flag_plus, &&do_form_float };\n+  const void * ptr = step0_jumps[0];\n+  do {\n+    char spec;\n+    spec = (*++f);\n+    goto *ptr;\n+do_flag_plus:\n+     read_int (&f);\n+do_number:\n+    _itoa_word (spec);\n+do_form_float:\n+    if (ptr != ((void *)0))\n+    {\n+      spec = 'x';\n+      goto do_number;\n+    }\n+    if (spec != 'S')\n+      __strnlen ();\n+    return;\n+    do_form_unknown:;\n+  }\n+  while (*f != '\\0');\n+}\n+"}, {"sha": "1b63635881bdec7e584a85b9b48e656b4884351f", "filename": "gcc/tree-ssa-coalesce.c", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62b0d9ecf809e007149b3921256ba6999e95dc89/gcc%2Ftree-ssa-coalesce.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62b0d9ecf809e007149b3921256ba6999e95dc89/gcc%2Ftree-ssa-coalesce.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-coalesce.c?ref=62b0d9ecf809e007149b3921256ba6999e95dc89", "patch": "@@ -589,6 +589,24 @@ ssa_conflicts_merge (ssa_conflicts_p ptr, unsigned x, unsigned y)\n }\n \n \n+/* Dump a conflicts graph.  */\n+\n+static void\n+ssa_conflicts_dump (FILE *file, ssa_conflicts_p ptr)\n+{\n+  unsigned x;\n+\n+  fprintf (file, \"\\nConflict graph:\\n\");\n+\n+  for (x = 0; x < ptr->size; x++)\n+    if (ptr->conflicts[x])\n+      {\n+\tfprintf (dump_file, \"%d: \", x);\n+\tdump_bitmap (file, ptr->conflicts[x]);\n+      }\n+}\n+\n+\n /* This structure is used to efficiently record the current status of live \n    SSA_NAMES when building a conflict graph.  \n    LIVE_BASE_VAR has a bit set for each base variable which has at least one\n@@ -1302,6 +1320,8 @@ coalesce_ssa_name (void)\n   /* Build a conflict graph.  */\n   graph = build_ssa_conflict_graph (liveinfo);\n   delete_tree_live_info (liveinfo);\n+  if (dump_file && (dump_flags & TDF_DETAILS))\n+    ssa_conflicts_dump (dump_file, graph);\n \n   sort_coalesce_list (cl);\n "}, {"sha": "5e6a86a4b6c3c19811d8dcc57a77d7419c05443f", "filename": "gcc/tree-ssa-sccvn.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62b0d9ecf809e007149b3921256ba6999e95dc89/gcc%2Ftree-ssa-sccvn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62b0d9ecf809e007149b3921256ba6999e95dc89/gcc%2Ftree-ssa-sccvn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-sccvn.c?ref=62b0d9ecf809e007149b3921256ba6999e95dc89", "patch": "@@ -1259,6 +1259,11 @@ visit_phi (tree phi)\n   bool allsame = true;\n   int i;\n \n+  /* TODO: We could check for this in init_sccvn, and replace this\n+     with a gcc_assert.  */\n+  if (SSA_NAME_OCCURS_IN_ABNORMAL_PHI (PHI_RESULT (phi)))\n+    return set_ssa_val_to (PHI_RESULT (phi), PHI_RESULT (phi));\n+\n   /* See if all non-TOP arguments have the same value.  TOP is\n      equivalent to everything, so we can ignore it.  */\n   for (i = 0; i < PHI_NUM_ARGS (phi); i++)"}]}