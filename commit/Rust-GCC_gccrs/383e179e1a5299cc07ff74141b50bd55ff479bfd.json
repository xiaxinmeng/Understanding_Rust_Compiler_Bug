{"sha": "383e179e1a5299cc07ff74141b50bd55ff479bfd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzgzZTE3OWUxYTUyOTljYzA3ZmY3NDE0MWI1MGJkNTVmZjQ3OWJmZA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-01T13:29:56Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-01T13:29:56Z"}, "message": "[multiple changes]\n\n2011-08-01  Ed Schonberg  <schonberg@adacore.com>\n\n\t* exp_ch5.adb (Expand_N_Iterator_Loop): handle properly an iterator\n\tover an arbitrary expression of an array or container type.\n\t* lib-xref.adb: clarify comment.\n\n2011-08-01  Bob Duff  <duff@adacore.com>\n\n\t* einfo.ads: Minor reformatting.\n\t* debug.adb: Minor comment improvement.\n\n2011-08-01  Javier Miranda  <miranda@adacore.com>\n\n\t* sem_ch4.adb (Try_Object_Operation): For class-wide subprograms do not\n\tconsider hidden subprograms as valid candidates.\n\n2011-08-01  Arnaud Charlet  <charlet@adacore.com>\n\n\t* make.adb (Compile): Strip -mxxx switches in CodePeer mode.\n\n2011-08-01  Vasiliy Fofanov  <fofanov@adacore.com>\n\n\t* gnat_ugn.texi: Fix typo.\n\nFrom-SVN: r177031", "tree": {"sha": "9a05274ead2959a42a3934ab5cafca0abb18e7bd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9a05274ead2959a42a3934ab5cafca0abb18e7bd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/383e179e1a5299cc07ff74141b50bd55ff479bfd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/383e179e1a5299cc07ff74141b50bd55ff479bfd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/383e179e1a5299cc07ff74141b50bd55ff479bfd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/383e179e1a5299cc07ff74141b50bd55ff479bfd/comments", "author": null, "committer": null, "parents": [{"sha": "61c161b2ea14aaabdeac3708e4b5b92d15d94ad1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61c161b2ea14aaabdeac3708e4b5b92d15d94ad1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/61c161b2ea14aaabdeac3708e4b5b92d15d94ad1"}], "stats": {"total": 101, "additions": 74, "deletions": 27}, "files": [{"sha": "3b9ede5f660f71f329913b00b3f6244b9e10fa7e", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/383e179e1a5299cc07ff74141b50bd55ff479bfd/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/383e179e1a5299cc07ff74141b50bd55ff479bfd/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=383e179e1a5299cc07ff74141b50bd55ff479bfd", "patch": "@@ -1,3 +1,27 @@\n+2011-08-01  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* exp_ch5.adb (Expand_N_Iterator_Loop): handle properly an iterator\n+\tover an arbitrary expression of an array or container type.\n+\t* lib-xref.adb: clarify comment.\n+\n+2011-08-01  Bob Duff  <duff@adacore.com>\n+\n+\t* einfo.ads: Minor reformatting.\n+\t* debug.adb: Minor comment improvement.\n+\n+2011-08-01  Javier Miranda  <miranda@adacore.com>\n+\n+\t* sem_ch4.adb (Try_Object_Operation): For class-wide subprograms do not\n+\tconsider hidden subprograms as valid candidates.\n+\n+2011-08-01  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* make.adb (Compile): Strip -mxxx switches in CodePeer mode.\n+\n+2011-08-01  Vasiliy Fofanov  <fofanov@adacore.com>\n+\n+\t* gnat_ugn.texi: Fix typo.\n+\n 2011-08-01  Robert Dewar  <dewar@adacore.com>\n \n \t* i-cstrin.adb, sem_util.adb, exp_ch11.adb, sem_ch8.adb,"}, {"sha": "070994a3430d5b89d405046ff63cded3ed963c57", "filename": "gcc/ada/debug.adb", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/383e179e1a5299cc07ff74141b50bd55ff479bfd/gcc%2Fada%2Fdebug.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/383e179e1a5299cc07ff74141b50bd55ff479bfd/gcc%2Fada%2Fdebug.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdebug.adb?ref=383e179e1a5299cc07ff74141b50bd55ff479bfd", "patch": "@@ -193,7 +193,7 @@ package body Debug is\n    --  de\n    --  df  Only output file names, not path names, in log\n    --  dg\n-   --  dh\n+   --  dh  Generate listing showing loading of name table hash chains\n    --  di\n    --  dj\n    --  dk\n@@ -698,6 +698,9 @@ package body Debug is\n \n    --  df  Only output file names, not path names, in log\n \n+   --  dh  Generate listing showing loading of name table hash chains,\n+   --      same as for the compiler.\n+\n    --  dm  Issue a message indicating the maximum number of simultaneous\n    --      compilations.\n "}, {"sha": "1c1de932df47bddbff2b02889bac211ff85fc56d", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/383e179e1a5299cc07ff74141b50bd55ff479bfd/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/383e179e1a5299cc07ff74141b50bd55ff479bfd/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=383e179e1a5299cc07ff74141b50bd55ff479bfd", "patch": "@@ -1501,7 +1501,7 @@ package Einfo is\n --    Has_Homonym (Flag56)\n --       Present in all entities. Set if an entity has a homonym in the same\n --       scope. Used by Gigi to generate unique names for such entities.\n---\n+\n --    Has_Initial_Value (Flag219)\n --       Present in entities for variables and out parameters. Set if there\n --       is an explicit initial value expression in the declaration of the\n@@ -1510,7 +1510,7 @@ package Einfo is\n --       of access types or controlled types. Always set to False for out\n --       parameters. Also present in entities for in and in-out parameters,\n --       but always false in these cases.\n---\n+\n --    Has_Interrupt_Handler (synthesized)\n --       Applies to all protected type entities. Set if the protected type\n --       definition contains at least one procedure to which a pragma\n@@ -1766,13 +1766,13 @@ package Einfo is\n --       attribute definition clause. When such a clause occurs, a TSS is set\n --       on the underlying full view; the flags are used to track visibility of\n --       the attribute definition clause for partial or incomplete views.\n---\n+\n --    Has_Static_Discriminants (Flag211)\n --       Present in record subtypes constrained by discriminant values. Set if\n --       all the discriminant values have static values, meaning that in the\n --       case of a variant record, the component list can be trimmed down to\n --       include only the components corresponding to these discriminants.\n---\n+\n --    Has_Storage_Size_Clause (Flag23) [implementation base type only]\n --       Present in task types and access types. It is set if a Storage_Size\n --       clause is present for the type. Used to prevent multiple clauses for\n@@ -2315,7 +2315,7 @@ package Einfo is\n --         4) Internal entities in the list of primitives of tagged types that\n --         are used to handle secondary dispatch tables. These entities have\n --         also the attribute Interface_Alias.\n---\n+\n --    Is_Interrupt_Handler (Flag89)\n --       Present in procedures. Set if a pragma Interrupt_Handler applies\n --       to the procedure. The procedure must be parameterless, and on all\n@@ -2898,7 +2898,7 @@ package Einfo is\n --       the generated indexes entity. See unit Exp_Imgv for full details of\n --       the nature and use of this entity for implementing the Image and\n --       Value attributes for the enumeration type in question.\n---\n+\n --    Lit_Strings (Node16)\n --       Present in enumeration types and subtypes. Non-empty only for the\n --       case of an enumeration root type, where it contains the entity for\n@@ -2983,7 +2983,7 @@ package Einfo is\n --       entities when the return type is an array type, and a call can be\n --       interpreted as an indexing of the result of the call. It is also\n --       used to resolve various cases of entry calls.\n---\n+\n --    Never_Set_In_Source (Flag115)\n --       Present in all entities, but can be set only for variables and\n --       parameters. This flag is set if the object is never assigned a value"}, {"sha": "ef77ec938cb3a9eaa7b551c7e7650a3a4c9b2448", "filename": "gcc/ada/exp_ch5.adb", "status": "modified", "additions": 8, "deletions": 11, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/383e179e1a5299cc07ff74141b50bd55ff479bfd/gcc%2Fada%2Fexp_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/383e179e1a5299cc07ff74141b50bd55ff479bfd/gcc%2Fada%2Fexp_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch5.adb?ref=383e179e1a5299cc07ff74141b50bd55ff479bfd", "patch": "@@ -2766,7 +2766,10 @@ package body Exp_Ch5 is\n       Isc        : constant Node_Id    := Iteration_Scheme (N);\n       I_Spec     : constant Node_Id    := Iterator_Specification (Isc);\n       Id         : constant Entity_Id  := Defining_Identifier (I_Spec);\n-      Container  : constant Entity_Id  :=  Entity (Name (I_Spec));\n+\n+      Container  : constant Node_Id    := Name (I_Spec);\n+      --  An expression whose type is an array or a predefined container.\n+\n       Typ        : constant Entity_Id  := Etype (Container);\n \n       Cursor   : Entity_Id;\n@@ -2788,8 +2791,7 @@ package body Exp_Ch5 is\n                             New_Occurrence_Of (Component_Type (Typ), Loc),\n                           Name                =>\n                             Make_Indexed_Component (Loc,\n-                              Prefix      =>\n-                                New_Occurrence_Of (Container, Loc),\n+                              Prefix      => Relocate_Node (Container),\n                               Expressions =>\n                                 New_List (New_Occurrence_Of (Cursor, Loc))));\n             begin\n@@ -2805,8 +2807,7 @@ package body Exp_Ch5 is\n                            Defining_Identifier         => Cursor,\n                            Discrete_Subtype_Definition =>\n                               Make_Attribute_Reference (Loc,\n-                                Prefix         =>\n-                                  New_Occurrence_Of (Container, Loc),\n+                                Prefix         => Relocate_Node (Container),\n                                 Attribute_Name => Name_Range),\n                            Reverse_Present => Reverse_Present (I_Spec))),\n                    Statements       => Stats,\n@@ -2828,8 +2829,7 @@ package body Exp_Ch5 is\n                         Defining_Identifier         => Cursor,\n                         Discrete_Subtype_Definition =>\n                            Make_Attribute_Reference (Loc,\n-                             Prefix         =>\n-                               New_Occurrence_Of (Container, Loc),\n+                             Prefix         => Relocate_Node (Container),\n                              Attribute_Name => Name_Range),\n                         Reverse_Present => Reverse_Present (I_Spec))),\n                 Statements       => Statements (N),\n@@ -2895,7 +2895,7 @@ package body Exp_Ch5 is\n                     Selector_Name => Make_Identifier (Loc, Name_Cursor)),\n                 Expression =>\n                   Make_Selected_Component (Loc,\n-                    Prefix        => New_Occurrence_Of (Container, Loc),\n+                    Prefix        => Relocate_Node (Container),\n                     Selector_Name => Make_Identifier (Loc, Name_Init)));\n \n             Insert_Action (N, Cursor_Decl);\n@@ -2951,9 +2951,6 @@ package body Exp_Ch5 is\n          end;\n       end if;\n \n-      --  Set_Analyzed (I_Spec);\n-      --  Why is this commented out???\n-\n       Rewrite (N, New_Loop);\n       Analyze (N);\n    end Expand_Iterator_Loop;"}, {"sha": "3ed62dd0d75874ad201d215f9b697a764425a93a", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/383e179e1a5299cc07ff74141b50bd55ff479bfd/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/383e179e1a5299cc07ff74141b50bd55ff479bfd/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=383e179e1a5299cc07ff74141b50bd55ff479bfd", "patch": "@@ -4148,7 +4148,7 @@ Specify a preprocessing data file\n @cindex @option{-gnateP} (@command{gcc})\n Turn categorization dependency errors into warnings.\n Ada requires that units that WITH one another have compatible categories, for\n-example a Pure unit cannto WITH a Preelaborate unit. If this switch is used,\n+example a Pure unit cannot WITH a Preelaborate unit. If this switch is used,\n these errors become warnings (which can be ignored, or suppressed in the usual\n manner). This can be useful in some specialized circumstances such as the\n temporary use of special test software."}, {"sha": "4c4cef0f3a9a82ab693a24ab699170723469ac43", "filename": "gcc/ada/lib-xref.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/383e179e1a5299cc07ff74141b50bd55ff479bfd/gcc%2Fada%2Flib-xref.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/383e179e1a5299cc07ff74141b50bd55ff479bfd/gcc%2Fada%2Flib-xref.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-xref.adb?ref=383e179e1a5299cc07ff74141b50bd55ff479bfd", "patch": "@@ -1440,7 +1440,9 @@ package body Lib.Xref is\n             --  Finally, for two locations at the same address, we prefer\n             --  the one that does NOT have the type 'r' so that a modification\n             --  or extension takes preference, when there are more than one\n-            --  reference at the same location.\n+            --  reference at the same location. As a result, in the case of\n+            --  entities that are in-out actuals, the read reference follows\n+            --  the modify reference.\n \n             else\n                return T2.Typ = 'r';"}, {"sha": "d4c1ae729f8b6c80f38b8ffe980cd386d17985dc", "filename": "gcc/ada/make.adb", "status": "modified", "additions": 23, "deletions": 4, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/383e179e1a5299cc07ff74141b50bd55ff479bfd/gcc%2Fada%2Fmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/383e179e1a5299cc07ff74141b50bd55ff479bfd/gcc%2Fada%2Fmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.adb?ref=383e179e1a5299cc07ff74141b50bd55ff479bfd", "patch": "@@ -2934,11 +2934,30 @@ package body Make is\n \n          --  Make a deep copy of the arguments, because Normalize_Arguments\n          --  may deallocate some arguments.\n+         --  Also strip target specific -mxxx switches in CodePeer mode.\n \n-         for J in Comp_Next .. Comp_Last loop\n-            Comp_Args (J) := new String'(Args (Arg_Index).all);\n-            Arg_Index := Arg_Index + 1;\n-         end loop;\n+         declare\n+            Index : Natural := Comp_Next;\n+            Last  : constant Natural := Comp_Last;\n+         begin\n+            for J in Comp_Next .. Last loop\n+               declare\n+                  Str : String renames Args (Arg_Index).all;\n+               begin\n+                  if Do_Codepeer_Globalize_Step\n+                    and then Str'Length > 2\n+                    and then Str (Str'First .. Str'First + 1) = \"-m\"\n+                  then\n+                     Comp_Last := Comp_Last - 1;\n+                  else\n+                     Comp_Args (Index) := new String'(Str);\n+                     Index := Index + 1;\n+                  end if;\n+               end;\n+\n+               Arg_Index := Arg_Index + 1;\n+            end loop;\n+         end;\n \n          --  Set -gnatpg for predefined files (for this purpose the renamings\n          --  such as Text_IO do not count as predefined). Note that we strip"}, {"sha": "086e3a68a357d11cdaadd36bcc124ee8df70b0dd", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/383e179e1a5299cc07ff74141b50bd55ff479bfd/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/383e179e1a5299cc07ff74141b50bd55ff479bfd/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=383e179e1a5299cc07ff74141b50bd55ff479bfd", "patch": "@@ -6774,13 +6774,15 @@ package body Sem_Ch4 is\n \n             Hom := Current_Entity (Subprog);\n \n-            --  Find operation whose first parameter is of the class-wide\n-            --  type, a subtype thereof, or an anonymous access to same.\n+            --  Find a non-hidden operation whose first parameter is of the\n+            --  class-wide type, a subtype thereof, or an anonymous access\n+            --  to same.\n \n             while Present (Hom) loop\n                if (Ekind (Hom) = E_Procedure\n                      or else\n                    Ekind (Hom) = E_Function)\n+                 and then not Is_Hidden (Hom)\n                  and then Scope (Hom) = Scope (Anc_Type)\n                  and then Present (First_Formal (Hom))\n                  and then"}]}