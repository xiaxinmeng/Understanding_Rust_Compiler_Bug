{"sha": "77d6dfc929832a542a25fc455b90f1a4bc83229c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzdkNmRmYzkyOTgzMmE1NDJhMjVmYzQ1NWI5MGYxYTRiYzgzMjI5Yw==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2020-04-06T23:59:04Z"}, "committer": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2020-04-08T17:37:39Z"}, "message": "c++: Fix ICE-on-invalid with lambda template [PR94507]\n\nWhile reducing something else I noticed that we ICE on the following\ninvalid code.  In tsubst_lambda_expr, tsubst_template_decl has already\nreported an error and returned the error_mark_node, so make sure we\ndon't ICE on that.  I'm using a goto here because we still have to\ndo finish_struct because it does popclass ().\n\n\tPR c++/94507 - ICE-on-invalid with lambda template.\n\t* pt.c (tsubst_lambda_expr): Cope when tsubst_template_decl or\n\ttsubst_function_decl returns error_mark_node.\n\n\t* g++.dg/cpp2a/lambda-generic7.C: New test.", "tree": {"sha": "06e89b6487e72df9ce0862a3d50e30dc43904da8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/06e89b6487e72df9ce0862a3d50e30dc43904da8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/77d6dfc929832a542a25fc455b90f1a4bc83229c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77d6dfc929832a542a25fc455b90f1a4bc83229c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/77d6dfc929832a542a25fc455b90f1a4bc83229c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77d6dfc929832a542a25fc455b90f1a4bc83229c/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dd9ca9d770a18ce4b16d867f49fef3293b483ff5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd9ca9d770a18ce4b16d867f49fef3293b483ff5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd9ca9d770a18ce4b16d867f49fef3293b483ff5"}], "stats": {"total": 32, "additions": 32, "deletions": 0}, "files": [{"sha": "50f1857a3ec44b5ed3a8a858c74ed6e52ab9da52", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77d6dfc929832a542a25fc455b90f1a4bc83229c/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77d6dfc929832a542a25fc455b90f1a4bc83229c/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=77d6dfc929832a542a25fc455b90f1a4bc83229c", "patch": "@@ -1,3 +1,9 @@\n+2020-04-08  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/94507 - ICE-on-invalid with lambda template.\n+\t* pt.c (tsubst_lambda_expr): Cope when tsubst_template_decl or\n+\ttsubst_function_decl returns error_mark_node.\n+\n 2020-04-08  Martin Liska  <mliska@suse.cz>\n \n \tPR c++/94314"}, {"sha": "050a57b2e2ed1b922854dffcd8503ed663caa9ec", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77d6dfc929832a542a25fc455b90f1a4bc83229c/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77d6dfc929832a542a25fc455b90f1a4bc83229c/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=77d6dfc929832a542a25fc455b90f1a4bc83229c", "patch": "@@ -18953,13 +18953,23 @@ tsubst_lambda_expr (tree t, tree args, tsubst_flags_t complain, tree in_decl)\n       if (oldtmpl)\n \t{\n \t  tmpl = tsubst_template_decl (oldtmpl, args, complain, fntype);\n+\t  if (tmpl == error_mark_node)\n+\t    {\n+\t      r = error_mark_node;\n+\t      goto out;\n+\t    }\n \t  fn = DECL_TEMPLATE_RESULT (tmpl);\n \t  finish_member_declaration (tmpl);\n \t}\n       else\n \t{\n \t  tmpl = NULL_TREE;\n \t  fn = tsubst_function_decl (oldfn, args, complain, fntype);\n+\t  if (fn == error_mark_node)\n+\t    {\n+\t      r = error_mark_node;\n+\t      goto out;\n+\t    }\n \t  finish_member_declaration (fn);\n \t}\n \n@@ -19025,6 +19035,7 @@ tsubst_lambda_expr (tree t, tree args, tsubst_flags_t complain, tree in_decl)\n       maybe_add_lambda_conv_op (type);\n     }\n \n+out:\n   finish_struct (type, /*attr*/NULL_TREE);\n \n   insert_pending_capture_proxies ();"}, {"sha": "6ed51141ac22a34ce1a82e678209360724df5e2e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77d6dfc929832a542a25fc455b90f1a4bc83229c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77d6dfc929832a542a25fc455b90f1a4bc83229c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=77d6dfc929832a542a25fc455b90f1a4bc83229c", "patch": "@@ -1,3 +1,8 @@\n+2020-04-08  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/94507 - ICE-on-invalid with lambda template.\n+\t* g++.dg/cpp2a/lambda-generic7.C: New test.\n+\n 2020-04-08  Alexandre Oliva <oliva@adacore.com>\n \n \t* gcc.target/arm/fp16-aapcs-3.c: Explicitly use the"}, {"sha": "bedba683671df0eeddb36948369979ff9f9eef80", "filename": "gcc/testsuite/g++.dg/cpp2a/lambda-generic7.C", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77d6dfc929832a542a25fc455b90f1a4bc83229c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Flambda-generic7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77d6dfc929832a542a25fc455b90f1a4bc83229c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Flambda-generic7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Flambda-generic7.C?ref=77d6dfc929832a542a25fc455b90f1a4bc83229c", "patch": "@@ -0,0 +1,10 @@\n+// PR c++/94507 - ICE-on-invalid with lambda template.\n+// { dg-do compile { target c++2a } }\n+\n+struct S { };\n+\n+template<typename T, typename U>\n+auto foo(T, U)\n+{\n+  [] <> () { foo (S{}, S{}); }; // { dg-error \"expected\" }\n+}"}]}