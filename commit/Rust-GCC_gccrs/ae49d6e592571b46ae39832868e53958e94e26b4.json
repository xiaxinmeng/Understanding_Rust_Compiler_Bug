{"sha": "ae49d6e592571b46ae39832868e53958e94e26b4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWU0OWQ2ZTU5MjU3MWI0NmFlMzk4MzI4NjhlNTM5NThlOTRlMjZiNA==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2003-05-14T17:46:50Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2003-05-14T17:46:50Z"}, "message": "ia64.c (ia64_expand_load_address): Force destination to be DImode register.\n\n        * config/ia64/ia64.c (ia64_expand_load_address): Force destination\n        to be DImode register.  Merge load_symptr.\n        * config/ia64/ia64.md (load_symptr): Remove.\n\nFrom-SVN: r66808", "tree": {"sha": "86bec960cb29fc4b16756c0e764fcff10378f2e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/86bec960cb29fc4b16756c0e764fcff10378f2e5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ae49d6e592571b46ae39832868e53958e94e26b4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae49d6e592571b46ae39832868e53958e94e26b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae49d6e592571b46ae39832868e53958e94e26b4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae49d6e592571b46ae39832868e53958e94e26b4/comments", "author": null, "committer": null, "parents": [{"sha": "2adb9af1f88f1454435e8469cbc3c523ab5db42f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2adb9af1f88f1454435e8469cbc3c523ab5db42f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2adb9af1f88f1454435e8469cbc3c523ab5db42f"}], "stats": {"total": 37, "additions": 24, "deletions": 13}, "files": [{"sha": "d41138f548c3085335ccfa2dde97c8202d9fbd9e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae49d6e592571b46ae39832868e53958e94e26b4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae49d6e592571b46ae39832868e53958e94e26b4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ae49d6e592571b46ae39832868e53958e94e26b4", "patch": "@@ -1,3 +1,9 @@\n+2003-05-14  Richard Henderson  <rth@redhat.com>\n+\n+\t* config/ia64/ia64.c (ia64_expand_load_address): Force destination\n+\tto be DImode register.  Merge load_symptr.\n+\t* config/ia64/ia64.md (load_symptr): Remove.\n+\n 2003-05-14  Richard Henderson  <rth@redhat.com>\n \n \t* rtl.h (TREE_CONSTANT_POOL_ADDRESS_P): Rename from"}, {"sha": "b3f25b603499e5d4bdba6310338ad28240943993", "filename": "gcc/config/ia64/ia64.c", "status": "modified", "additions": 18, "deletions": 2, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae49d6e592571b46ae39832868e53958e94e26b4/gcc%2Fconfig%2Fia64%2Fia64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae49d6e592571b46ae39832868e53958e94e26b4/gcc%2Fconfig%2Fia64%2Fia64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.c?ref=ae49d6e592571b46ae39832868e53958e94e26b4", "patch": "@@ -1099,6 +1099,13 @@ ia64_expand_load_address (dest, src)\n   if (GET_CODE (dest) != REG)\n     abort ();\n \n+  /* ILP32 mode still loads 64-bits of data from the GOT.  This avoids\n+     having to pointer-extend the value afterward.  Other forms of address\n+     computation below are also more natural to compute as 64-bit quantities.\n+     If we've been given an SImode destination register, change it.  */\n+  if (GET_MODE (dest) != Pmode)\n+    dest = gen_rtx_REG (Pmode, REGNO (dest));\n+\n   if (TARGET_AUTO_PIC)\n     {\n       emit_insn (gen_load_gprel64 (dest, src));\n@@ -1129,11 +1136,20 @@ ia64_expand_load_address (dest, src)\n       lo = ((ofs & 0x3fff) ^ 0x2000) - 0x2000;\n       hi = ofs - lo;\n \n-      emit_insn (gen_load_symptr (dest, plus_constant (sym, hi), dest));\n+      ia64_expand_load_address (dest, plus_constant (sym, hi));\n       emit_insn (gen_adddi3 (dest, dest, GEN_INT (lo)));\n     }\n   else\n-    emit_insn (gen_load_symptr (dest, src, dest));\n+    {\n+      rtx tmp;\n+\n+      tmp = gen_rtx_HIGH (Pmode, src);\n+      tmp = gen_rtx_PLUS (Pmode, tmp, pic_offset_table_rtx);\n+      emit_insn (gen_rtx_SET (VOIDmode, dest, tmp));\n+\n+      tmp = gen_rtx_LO_SUM (GET_MODE (dest), dest, src);\n+      emit_insn (gen_rtx_SET (VOIDmode, dest, tmp));\n+    }\n }\n \n static GTY(()) rtx gen_tls_tga;"}, {"sha": "93dff972a741149c430e5466a062ca0ceaf2940d", "filename": "gcc/config/ia64/ia64.md", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae49d6e592571b46ae39832868e53958e94e26b4/gcc%2Fconfig%2Fia64%2Fia64.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae49d6e592571b46ae39832868e53958e94e26b4/gcc%2Fconfig%2Fia64%2Fia64.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.md?ref=ae49d6e592571b46ae39832868e53958e94e26b4", "patch": "@@ -410,17 +410,6 @@\n   operands[3] = pic_offset_table_rtx;\n })\n \n-(define_expand \"load_symptr\"\n-  [(set (match_operand:DI 2 \"register_operand\" \"\")\n-\t(plus:DI (high:DI (match_operand:DI 1 \"got_symbolic_operand\" \"\"))\n-\t\t (match_dup 3)))\n-   (set (match_operand:DI 0 \"register_operand\" \"\")\n-\t(lo_sum:DI (match_dup 2) (match_dup 1)))]\n-  \"\"\n-{\n-  operands[3] = pic_offset_table_rtx;\n-})\n-\n (define_insn \"*load_symptr_high\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n \t(plus:DI (high:DI (match_operand 1 \"got_symbolic_operand\" \"s\"))"}]}