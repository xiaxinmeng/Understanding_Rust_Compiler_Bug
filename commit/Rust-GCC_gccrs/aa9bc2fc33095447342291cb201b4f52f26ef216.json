{"sha": "aa9bc2fc33095447342291cb201b4f52f26ef216", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWE5YmMyZmMzMzA5NTQ0NzM0MjI5MWNiMjAxYjRmNTJmMjZlZjIxNg==", "commit": {"author": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "1999-01-26T10:45:37Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "1999-01-26T10:45:37Z"}, "message": "rs6000.md (doz + set cr and or + set cr patterns): Add missing '#' to split patterns.\n\n\t* rs6000.md (doz + set cr and or + set cr patterns): Add missing\n\t'#' to split patterns.  Correct indentation of some new patterns.\n\nFrom-SVN: r24871", "tree": {"sha": "3c460f7fea052ec7ca47baeb418e822c84023053", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3c460f7fea052ec7ca47baeb418e822c84023053"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aa9bc2fc33095447342291cb201b4f52f26ef216", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa9bc2fc33095447342291cb201b4f52f26ef216", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa9bc2fc33095447342291cb201b4f52f26ef216", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa9bc2fc33095447342291cb201b4f52f26ef216/comments", "author": null, "committer": null, "parents": [{"sha": "554fbeef31814272ba1b41d16669e372df3123b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/554fbeef31814272ba1b41d16669e372df3123b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/554fbeef31814272ba1b41d16669e372df3123b8"}], "stats": {"total": 95, "additions": 51, "deletions": 44}, "files": [{"sha": "aa0c62091989319c04e1efe7f0961331efb67e4d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 12, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa9bc2fc33095447342291cb201b4f52f26ef216/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa9bc2fc33095447342291cb201b4f52f26ef216/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=aa9bc2fc33095447342291cb201b4f52f26ef216", "patch": "@@ -1,3 +1,8 @@\n+Tue Jan 26 13:41:38 1999  David Edelsohn  <edelsohn@mhpcc.edu>\n+\n+\t* rs6000.md (doz + set cr and or + set cr patterns): Add missing\n+\t'#' to split patterns.  Correct indentation of some new patterns.\n+\n 1999-01-26 12:11 -0500  Zack Weinberg  <zack@midnite.ec.rhno.columbia.edu>\n \n \t* cppfiles.c (safe_read): Deleted.  \n@@ -30,18 +35,16 @@ Tue Jan 26 23:21:49 1999  Michael Hayes  <m.hayes@elec.canterbury.ac.nz>\n \n 1999-01-25 14:26 -0500  Zack Weinberg  <zack@rabi.columbia.edu>\n \n-\t* cppexp.c: \n-\t    (struct arglist): Removed.\n-\t    (parse_number): Use HOST_WIDE_INT for the accumulator.\n-\t    Allow two `l' suffixes unless C89.  Clean up.  Make\n-\t    static.\n-\t    (parse_charconst): New function broken out of cpp_lex.\n-\t    Code cleaned up drastically.  Don't use a token_buffer.\n-\t    (token_buffer): Removed.\n-\t    (cpp_lex): Don't call parse_number on a constant string.\n-\t    Use parse_charconst.\n-\t    (cpp_parse_expr): Properly handle an ERROR op returned by\n-\t    cpp_lex. \n+\t* cppexp.c (struct arglist): Removed.\n+\t(parse_number): Use HOST_WIDE_INT for the accumulator.\n+\tAllow two `l' suffixes unless C89.  Clean up.  Make static.\n+\t(parse_charconst): New function broken out of cpp_lex.\n+\tCode cleaned up drastically.  Don't use a token_buffer.\n+\t(token_buffer): Removed.\n+\t(cpp_lex): Don't call parse_number on a constant string.\n+\tUse parse_charconst.\n+\t(cpp_parse_expr): Properly handle an ERROR op returned by\n+\tcpp_lex. \n \n 1999-01-25 14:10 -0500  Zack Weinberg  <zack@rabi.phys.columbia.edu>\n "}, {"sha": "e8ae79b4c494bcf48df96c72aa5c7db6a38841c3", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 36, "deletions": 32, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa9bc2fc33095447342291cb201b4f52f26ef216/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa9bc2fc33095447342291cb201b4f52f26ef216/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=aa9bc2fc33095447342291cb201b4f52f26ef216", "patch": "@@ -1823,7 +1823,9 @@\n \t\t\t (const_int 0)\n \t\t\t (minus:SI (match_dup 2) (match_dup 1))))]\n   \"TARGET_POWER\"\n-  \"doz%I2. %0,%1,%2\"\n+  \"@\n+   doz%I2. %0,%1,%2\n+   #\"\n   [(set_attr \"type\" \"delayed_compare\")])\n \n (define_split\n@@ -2732,7 +2734,9 @@\n \t(ior:SI (match_dup 1)\n \t\t(match_dup 2)))]\n   \"\"\n-  \"or. %0,%1,%2\"\n+  \"@\n+   or. %0,%1,%2\n+   #\"\n   [(set_attr \"type\" \"compare\")])\n \n (define_split\n@@ -4266,8 +4270,8 @@\n    (clobber (match_scratch:SI 4 \"=r,r\"))]\n   \"includes_lshift_p (operands[2], operands[3])\"\n   \"@\n-  {rlinm.|rlwinm.} %4,%1,%h2,%m3,%M3\n-  #\"\n+   {rlinm.|rlwinm.} %4,%1,%h2,%m3,%M3\n+   #\"\n   [(set_attr \"type\" \"delayed_compare\")])\n \n (define_split\n@@ -4299,8 +4303,8 @@\n \t(and:SI (ashift:SI (match_dup 1) (match_dup 2)) (match_dup 3)))]\n   \"includes_lshift_p (operands[2], operands[3])\"\n   \"@\n-  {rlinm.|rlwinm.} %0,%1,%h2,%m3,%M3\n-  #\"\n+   {rlinm.|rlwinm.} %0,%1,%h2,%m3,%M3\n+   #\"\n   [(set_attr \"type\" \"delayed_compare\")])\n \n (define_split\n@@ -4369,12 +4373,12 @@\n    (clobber (match_scratch:SI 4 \"=q,X,X,q,X,X\"))]\n   \"TARGET_POWER\"\n   \"@\n-  sre. %3,%1,%2\n-  mr. %1,%1\n-  {s%A2i.|s%A2wi.} %3,%1,%h2\n-  #\n-  cmpli %0,%1,0\n-  #\"\n+   sre. %3,%1,%2\n+   mr. %1,%1\n+   {s%A2i.|s%A2wi.} %3,%1,%h2\n+   #\n+   cmpli %0,%1,0\n+   #\"\n   [(set_attr \"type\" \"delayed_compare\")\n    (set_attr \"length\" \"4,4,4,8,8,8\")])\n \n@@ -4437,10 +4441,10 @@\n    (clobber (match_scratch:SI 4 \"=q,X,X,q\"))]\n   \"TARGET_POWER\"\n   \"@\n-  sre. %0,%1,%2\n-  mr. %0,%1\n-  {s%A2i.|s%A2wi.} %0,%1,%h2\n-  #\"\n+   sre. %0,%1,%2\n+   mr. %0,%1\n+   {s%A2i.|s%A2wi.} %0,%1,%h2\n+   #\"\n   [(set_attr \"type\" \"delayed_compare\")\n    (set_attr \"length\" \"4,4,4,8\")])\n \n@@ -7821,12 +7825,12 @@\n \t\t\t\t    (match_operand:DI 2 \"gpc_reg_operand\" \"r,r\")))\n \t\t    (const_int 0)))\n    (clobber (match_scratch:DI 3 \"=r,r\"))]\n-   \"TARGET_POWERPC64\"\n-   \"@\n-    eqv. %3,%1,%2\n-    #\"\n-   [(set_attr \"type\" \"compare\")\n-   (set_attr \"length\" \"4,8\")])\n+  \"TARGET_POWERPC64\"\n+  \"@\n+   eqv. %3,%1,%2\n+   #\"\n+  [(set_attr \"type\" \"compare\")\n+  (set_attr \"length\" \"4,8\")])\n \n (define_split\n   [(set (match_operand:CC 0 \"cc_reg_not_cr0_operand\" \"\")\n@@ -7850,12 +7854,12 @@\n \t\t    (const_int 0)))\n    (set (match_operand:DI 0 \"gpc_reg_operand\" \"=r,r\")\n \t(not:DI (xor:DI (match_dup 1) (match_dup 2))))]\n-   \"TARGET_POWERPC64\"\n-   \"@\n-    eqv. %0,%1,%2\n-    #\"\n-   [(set_attr \"type\" \"compare\")\n-   (set_attr \"length\" \"4,8\")])\n+  \"TARGET_POWERPC64\"\n+  \"@\n+   eqv. %0,%1,%2\n+   #\"\n+  [(set_attr \"type\" \"compare\")\n+  (set_attr \"length\" \"4,8\")])\n \n (define_split\n   [(set (match_operand:CC 3 \"cc_reg_not_cr0_operand\" \"\")\n@@ -8410,8 +8414,8 @@\n    (set (match_operand:SI 0 \"gpc_reg_operand\" \"=r,r\") (match_dup 1))]\n   \"\"\n   \"@\n-  mr. %0,%1\n-  #\"\n+   mr. %0,%1\n+   #\"\n   [(set_attr \"type\" \"compare\")])\n \n (define_split\n@@ -9182,8 +9186,8 @@\n    (set (match_operand:DI 0 \"gpc_reg_operand\" \"=r,r\") (match_dup 1))]\n   \"TARGET_POWERPC64\"\n   \"@\n-  mr. %0,%1\n-  #\"\n+   mr. %0,%1\n+   #\"\n   [(set_attr \"type\" \"compare\")])\n \n (define_split"}]}