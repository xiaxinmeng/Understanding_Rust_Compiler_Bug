{"sha": "e203dd6e24ebb349128e3a4354e5847a90422c64", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTIwM2RkNmUyNGViYjM0OTEyOGUzYTQzNTRlNTg0N2E5MDQyMmM2NA==", "commit": {"author": {"name": "Ghjuvan Lacambre", "email": "lacambre@adacore.com", "date": "2019-12-13T09:05:33Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-12-13T09:05:33Z"}, "message": "[Ada] implementation_defined_pragmas.rst: Update Initialize_Scalars docs\n\n2019-12-13  Ghjuvan Lacambre  <lacambre@adacore.com>\n\ngcc/ada/\n\n\t* doc/gnat_rm/implementation_defined_pragmas.rst: Update\n\tInitialize_Scalars documentation.\n\t* gnat_rm.texi: Regenerate.\n\nFrom-SVN: r279366", "tree": {"sha": "f081969336657fa9667f8efe972e56fee684537d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f081969336657fa9667f8efe972e56fee684537d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e203dd6e24ebb349128e3a4354e5847a90422c64", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e203dd6e24ebb349128e3a4354e5847a90422c64", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e203dd6e24ebb349128e3a4354e5847a90422c64", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e203dd6e24ebb349128e3a4354e5847a90422c64/comments", "author": {"login": "glacambre", "id": 11534587, "node_id": "MDQ6VXNlcjExNTM0NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/11534587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/glacambre", "html_url": "https://github.com/glacambre", "followers_url": "https://api.github.com/users/glacambre/followers", "following_url": "https://api.github.com/users/glacambre/following{/other_user}", "gists_url": "https://api.github.com/users/glacambre/gists{/gist_id}", "starred_url": "https://api.github.com/users/glacambre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/glacambre/subscriptions", "organizations_url": "https://api.github.com/users/glacambre/orgs", "repos_url": "https://api.github.com/users/glacambre/repos", "events_url": "https://api.github.com/users/glacambre/events{/privacy}", "received_events_url": "https://api.github.com/users/glacambre/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c90e1eca3782b667c081e08dad03aee5b4f16276", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c90e1eca3782b667c081e08dad03aee5b4f16276", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c90e1eca3782b667c081e08dad03aee5b4f16276"}], "stats": {"total": 18, "additions": 14, "deletions": 4}, "files": [{"sha": "cfa051ad3124874d27d3804b6f449b8a803da77f", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e203dd6e24ebb349128e3a4354e5847a90422c64/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e203dd6e24ebb349128e3a4354e5847a90422c64/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=e203dd6e24ebb349128e3a4354e5847a90422c64", "patch": "@@ -1,3 +1,9 @@\n+2019-12-13  Ghjuvan Lacambre  <lacambre@adacore.com>\n+\n+\t* doc/gnat_rm/implementation_defined_pragmas.rst: Update\n+\tInitialize_Scalars documentation.\n+\t* gnat_rm.texi: Regenerate.\n+\n 2019-12-13  Javier Miranda  <miranda@adacore.com>\n \n \t* sem_ch13.adb (Analyze_Aspect_Specification): Processing a"}, {"sha": "04e4ac8049f91ddae089e7e9b4513e71585d9172", "filename": "gcc/ada/doc/gnat_rm/implementation_defined_pragmas.rst", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e203dd6e24ebb349128e3a4354e5847a90422c64/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fimplementation_defined_pragmas.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e203dd6e24ebb349128e3a4354e5847a90422c64/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fimplementation_defined_pragmas.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fimplementation_defined_pragmas.rst?ref=e203dd6e24ebb349128e3a4354e5847a90422c64", "patch": "@@ -3057,7 +3057,9 @@ different ways:\n   particular family of scalar types using the optional arguments of the pragma.\n \n   The compile-time approach is intended to optimize the generated code for the\n-  pragma, by possibly using fast operations such as ``memset``.\n+  pragma, by possibly using fast operations such as ``memset``. Note that such\n+  optimizations require using values the bytes of which all have the same\n+  binary representation.\n \n * At bind time, the programmer has several options:\n \n@@ -3077,7 +3079,7 @@ different ways:\n   The bind-time approach is intended to provide fast turnaround for testing\n   with different values, without having to recompile the program.\n \n-* At execution time, the programmer can speify the invalid values using an\n+* At execution time, the programmer can specify the invalid values using an\n   environment variable. See the GNAT User's Guide for details.\n \n   The execution-time approach is intended to provide fast turnaround for"}, {"sha": "19c6290edd36aa225d28b43874f2d26f808efb99", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e203dd6e24ebb349128e3a4354e5847a90422c64/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e203dd6e24ebb349128e3a4354e5847a90422c64/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=e203dd6e24ebb349128e3a4354e5847a90422c64", "patch": "@@ -4508,7 +4508,9 @@ At compile time, the programmer can specify the invalid value for a\n particular family of scalar types using the optional arguments of the pragma.\n \n The compile-time approach is intended to optimize the generated code for the\n-pragma, by possibly using fast operations such as @code{memset}.\n+pragma, by possibly using fast operations such as @code{memset}. Note that such\n+optimizations require using values the bytes of which all have the same\n+binary representation.\n \n @item \n At bind time, the programmer has several options:\n@@ -4538,7 +4540,7 @@ The bind-time approach is intended to provide fast turnaround for testing\n with different values, without having to recompile the program.\n \n @item \n-At execution time, the programmer can speify the invalid values using an\n+At execution time, the programmer can specify the invalid values using an\n environment variable. See the GNAT User's Guide for details.\n \n The execution-time approach is intended to provide fast turnaround for"}]}