{"sha": "248a9163e19adb7a2141d0e3149a4f40438602a7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjQ4YTkxNjNlMTlhZGI3YTIxNDFkMGUzMTQ5YTRmNDA0Mzg2MDJhNw==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2002-05-27T14:55:57Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2002-05-27T14:55:57Z"}, "message": "misc-inst.cc: Define unnecessary algorithm instantiations.\n\nc\n2002-05-27  Benjamin Kosnik  <bkoz@redhat.com>\n\n\t* src/misc-inst.cc: Define unnecessary algorithm\n\tinstantiations. Break apart instantiations into groupings below.\n\t* src/fstream-inst.cc: New.\n\t* src/io-inst.cc: New.\n\t* src/istream-inst.cc: New.\n\t* src/ostream-inst.cc: New.\n\t* src/streambuf-inst.cc: New.\n\t* src/sstream-inst.cc: New.\n\t* src/Makefile.am (sources): Add files.\n\t* src/Makefile.in: Regenerate.\n\n\t* acinclude.m4: Work around automake 1.4-p5 bug, change\n\tAM_GNU_GETTEXT in comments to AM-GNU-GETTEXT.\n\nFrom-SVN: r53930", "tree": {"sha": "3d9dcb8bef649404775fdf0e288307bd3742aaed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3d9dcb8bef649404775fdf0e288307bd3742aaed"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/248a9163e19adb7a2141d0e3149a4f40438602a7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/248a9163e19adb7a2141d0e3149a4f40438602a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/248a9163e19adb7a2141d0e3149a4f40438602a7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/248a9163e19adb7a2141d0e3149a4f40438602a7/comments", "author": null, "committer": null, "parents": [{"sha": "57f851a378793094a5a2630bfe3b0b7927f6e39d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57f851a378793094a5a2630bfe3b0b7927f6e39d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57f851a378793094a5a2630bfe3b0b7927f6e39d"}], "stats": {"total": 3422, "additions": 1494, "deletions": 1928}, "files": [{"sha": "65f9f39775516a9a102cf617832a19961710fc05", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/248a9163e19adb7a2141d0e3149a4f40438602a7/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/248a9163e19adb7a2141d0e3149a4f40438602a7/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=248a9163e19adb7a2141d0e3149a4f40438602a7", "patch": "@@ -1,3 +1,19 @@\n+2002-05-27  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\t* src/misc-inst.cc: Define unnecessary algorithm\n+\tinstantiations. Break apart instantiations into groupings below.\n+\t* src/fstream-inst.cc: New.\n+\t* src/io-inst.cc: New.\t\n+\t* src/istream-inst.cc: New.\t\n+\t* src/ostream-inst.cc: New.\t\t\n+\t* src/streambuf-inst.cc: New.\t\n+\t* src/sstream-inst.cc: New.\t\t\n+\t* src/Makefile.am (sources): Add files.\n+\t* src/Makefile.in: Regenerate.\n+\n+\t* acinclude.m4: Work around automake 1.4-p5 bug, change\n+\tAM_GNU_GETTEXT in comments to AM-GNU-GETTEXT.\n+\t\n 2002-05-27  Benjamin Kosnik  <bkoz@redhat.com>\n \n \tPR libstdc++/6795."}, {"sha": "51289563a35e5d7a468067405962e37b0b9ad90e", "filename": "libstdc++-v3/Makefile.in", "status": "modified", "additions": 0, "deletions": 19, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/248a9163e19adb7a2141d0e3149a4f40438602a7/libstdc%2B%2B-v3%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/248a9163e19adb7a2141d0e3149a4f40438602a7/libstdc%2B%2B-v3%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FMakefile.in?ref=248a9163e19adb7a2141d0e3149a4f40438602a7", "patch": "@@ -68,9 +68,6 @@ AS = @AS@\n ATOMICITY_INC_SRCDIR = @ATOMICITY_INC_SRCDIR@\n AWK = @AWK@\n BASIC_FILE_H = @BASIC_FILE_H@\n-BUILD_INCLUDED_LIBINTL = @BUILD_INCLUDED_LIBINTL@\n-CATALOGS = @CATALOGS@\n-CATOBJEXT = @CATOBJEXT@\n CC = @CC@\n CCODECVT_C = @CCODECVT_C@\n CCODECVT_H = @CCODECVT_H@\n@@ -83,25 +80,14 @@ CSTDIO_H = @CSTDIO_H@\n CXX = @CXX@\n CXXCPP = @CXXCPP@\n C_INCLUDE_DIR = @C_INCLUDE_DIR@\n-DATADIRNAME = @DATADIRNAME@\n DEBUG_FLAGS = @DEBUG_FLAGS@\n DLLTOOL = @DLLTOOL@\n EXEEXT = @EXEEXT@\n EXTRA_CXX_FLAGS = @EXTRA_CXX_FLAGS@\n GCJ = @GCJ@\n GCJFLAGS = @GCJFLAGS@\n-GENCAT = @GENCAT@\n-GLIBC21 = @GLIBC21@\n GLIBCPP_INCLUDES = @GLIBCPP_INCLUDES@\n GLIBCPP_IS_CROSS_COMPILING = @GLIBCPP_IS_CROSS_COMPILING@\n-GMOFILES = @GMOFILES@\n-GMSGFMT = @GMSGFMT@\n-INSTOBJEXT = @INSTOBJEXT@\n-INTLBISON = @INTLBISON@\n-INTLLIBS = @INTLLIBS@\n-INTLOBJS = @INTLOBJS@\n-INTL_LIBTOOL_SUFFIX_PREFIX = @INTL_LIBTOOL_SUFFIX_PREFIX@\n-LIBICONV = @LIBICONV@\n LIBIO_INCLUDES = @LIBIO_INCLUDES@\n LIBMATHOBJS = @LIBMATHOBJS@\n LIBMATH_INCLUDES = @LIBMATH_INCLUDES@\n@@ -112,22 +98,17 @@ LIBUNWIND_FLAG = @LIBUNWIND_FLAG@\n LN_S = @LN_S@\n MAINT = @MAINT@\n MAKEINFO = @MAKEINFO@\n-MKINSTALLDIRS = @MKINSTALLDIRS@\n-MSGFMT = @MSGFMT@\n OBJDUMP = @OBJDUMP@\n OBJEXT = @OBJEXT@\n OPTIMIZE_CXXFLAGS = @OPTIMIZE_CXXFLAGS@\n OPT_LDFLAGS = @OPT_LDFLAGS@\n OS_INC_SRCDIR = @OS_INC_SRCDIR@\n PACKAGE = @PACKAGE@\n-POFILES = @POFILES@\n-POSUB = @POSUB@\n RANLIB = @RANLIB@\n SECTION_FLAGS = @SECTION_FLAGS@\n SECTION_LDFLAGS = @SECTION_LDFLAGS@\n STRIP = @STRIP@\n TOPLEVEL_INCLUDES = @TOPLEVEL_INCLUDES@\n-USE_INCLUDED_LIBINTL = @USE_INCLUDED_LIBINTL@\n USE_NLS = @USE_NLS@\n VERSION = @VERSION@\n WARN_FLAGS = @WARN_FLAGS@"}, {"sha": "d31b737c0d2d29db9d903d8d370de80660538455", "filename": "libstdc++-v3/acinclude.m4", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/248a9163e19adb7a2141d0e3149a4f40438602a7/libstdc%2B%2B-v3%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/248a9163e19adb7a2141d0e3149a4f40438602a7/libstdc%2B%2B-v3%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facinclude.m4?ref=248a9163e19adb7a2141d0e3149a4f40438602a7", "patch": "@@ -1172,15 +1172,14 @@ AC_DEFUN(GLIBCPP_ENABLE_CLOCALE, [\n \n       # Declare intention to use gettext, and add support for specific\n       # languages.\n-      # For some reason, ALL_LINGUAS has to be before AM_GNU_GETTEXT\n+      # For some reason, ALL_LINGUAS has to be before AM-GNU-GETTEXT\n       ALL_LINGUAS=\"de fr\"\n \n-      # Don't call AM_GNU_GETTEXT here. Instead, assume glibc.\n+      # Don't call AM-GNU-GETTEXT here. Instead, assume glibc.\n       AC_CHECK_PROG(check_msgfmt, msgfmt, yes, no)\n       if test x\"$check_msgfmt\" = x\"yes\" && test x\"$enable_nls\" = x\"yes\"; then\n \tUSE_NLS=yes\n       fi\n-\n       # Export the build objects.\n       for ling in $ALL_LINGUAS; do \\\n         glibcpp_MOFILES=\"$glibcpp_MOFILES $ling.mo\"; \\"}, {"sha": "b11fce44a31572ff252ce455c06aed17c4f16069", "filename": "libstdc++-v3/aclocal.m4", "status": "modified", "additions": 10, "deletions": 537, "changes": 547, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/248a9163e19adb7a2141d0e3149a4f40438602a7/libstdc%2B%2B-v3%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/248a9163e19adb7a2141d0e3149a4f40438602a7/libstdc%2B%2B-v3%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Faclocal.m4?ref=248a9163e19adb7a2141d0e3149a4f40438602a7", "patch": "@@ -1184,15 +1184,14 @@ AC_DEFUN(GLIBCPP_ENABLE_CLOCALE, [\n \n       # Declare intention to use gettext, and add support for specific\n       # languages.\n-      # For some reason, ALL_LINGUAS has to be before AM_GNU_GETTEXT\n+      # For some reason, ALL_LINGUAS has to be before AM-GNU-GETTEXT\n       ALL_LINGUAS=\"de fr\"\n \n-      # Don't call AM_GNU_GETTEXT here. Instead, assume glibc.\n+      # Don't call AM-GNU-GETTEXT here. Instead, assume glibc.\n       AC_CHECK_PROG(check_msgfmt, msgfmt, yes, no)\n       if test x\"$check_msgfmt\" = x\"yes\" && test x\"$enable_nls\" = x\"yes\"; then\n \tUSE_NLS=yes\n       fi\n-\n       # Export the build objects.\n       for ling in $ALL_LINGUAS; do \\\n         glibcpp_MOFILES=\"$glibcpp_MOFILES $ling.mo\"; \\\n@@ -2197,7 +2196,14 @@ AC_MSG_RESULT($enable_symvers)\n ])\n \n \n-#serial 1\n+# isc-posix.m4 serial 1 (gettext-0.10.40)\n+dnl Copyright (C) 1995-2002 Free Software Foundation, Inc.\n+dnl This file is free software, distributed under the terms of the GNU\n+dnl General Public License.  As a special exception to the GNU General\n+dnl Public License, this file may be distributed as part of a program\n+dnl that contains a configuration script generated by Autoconf, under\n+dnl the same distribution terms as the rest of that program.\n+\n # This test replaces the one in autoconf.\n # Currently this macro should have the same name as the autoconf macro\n # because gettext's gettext.m4 (distributed in the automake package)\n@@ -2248,539 +2254,6 @@ else\n   $1_FALSE=\n fi])\n \n-# Macro to add for using GNU gettext.\n-# Ulrich Drepper <drepper@cygnus.com>, 1995.\n-#\n-# This file can be copied and used freely without restrictions.  It can\n-# be used in projects which are not available under the GNU Public License\n-# but which still want to provide support for the GNU gettext functionality.\n-# Please note that the actual code is *not* freely available.\n-\n-# serial 9\n-\n-dnl Usage: AM_WITH_NLS([TOOLSYMBOL], [NEEDSYMBOL], [LIBDIR]).\n-dnl If TOOLSYMBOL is specified and is 'use-libtool', then a libtool library\n-dnl    $(top_builddir)/intl/libintl.la will be created (shared and/or static,\n-dnl    depending on --{enable,disable}-{shared,static} and on the presence of\n-dnl    AM-DISABLE-SHARED). Otherwise, a static library\n-dnl    $(top_builddir)/intl/libintl.a will be created.\n-dnl If NEEDSYMBOL is specified and is 'need-ngettext', then GNU gettext\n-dnl    implementations (in libc or libintl) without the ngettext() function\n-dnl    will be ignored.\n-dnl LIBDIR is used to find the intl libraries.  If empty,\n-dnl    the value `$(top_builddir)/intl/' is used.\n-dnl\n-dnl The result of the configuration is one of three cases:\n-dnl 1) GNU gettext, as included in the intl subdirectory, will be compiled\n-dnl    and used.\n-dnl    Catalog format: GNU --> install in $(datadir)\n-dnl    Catalog extension: .mo after installation, .gmo in source tree\n-dnl 2) GNU gettext has been found in the system's C library.\n-dnl    Catalog format: GNU --> install in $(datadir)\n-dnl    Catalog extension: .mo after installation, .gmo in source tree\n-dnl 3) No internationalization, always use English msgid.\n-dnl    Catalog format: none\n-dnl    Catalog extension: none\n-dnl The use of .gmo is historical (it was needed to avoid overwriting the\n-dnl GNU format catalogs when building on a platform with an X/Open gettext),\n-dnl but we keep it in order not to force irrelevant filename changes on the\n-dnl maintainers.\n-dnl\n-AC_DEFUN([AM_WITH_NLS],\n-  [AC_MSG_CHECKING([whether NLS is requested])\n-    dnl Default is enabled NLS\n-    AC_ARG_ENABLE(nls,\n-      [  --disable-nls           do not use Native Language Support],\n-      USE_NLS=$enableval, USE_NLS=yes)\n-    AC_MSG_RESULT($USE_NLS)\n-    AC_SUBST(USE_NLS)\n-\n-    BUILD_INCLUDED_LIBINTL=no\n-    USE_INCLUDED_LIBINTL=no\n-    INTLLIBS=\n-\n-    dnl If we use NLS figure out what method\n-    if test \"$USE_NLS\" = \"yes\"; then\n-      AC_DEFINE(ENABLE_NLS, 1,\n-        [Define to 1 if translation of program messages to the user's native language\n-   is requested.])\n-      AC_MSG_CHECKING([whether included gettext is requested])\n-      AC_ARG_WITH(included-gettext,\n-        [  --with-included-gettext use the GNU gettext library included here],\n-        nls_cv_force_use_gnu_gettext=$withval,\n-        nls_cv_force_use_gnu_gettext=no)\n-      AC_MSG_RESULT($nls_cv_force_use_gnu_gettext)\n-\n-      nls_cv_use_gnu_gettext=\"$nls_cv_force_use_gnu_gettext\"\n-      if test \"$nls_cv_force_use_gnu_gettext\" != \"yes\"; then\n-        dnl User does not insist on using GNU NLS library.  Figure out what\n-        dnl to use.  If GNU gettext is available we use this.  Else we have\n-        dnl to fall back to GNU NLS library.\n-\tCATOBJEXT=NONE\n-\n-        dnl Add a version number to the cache macros.\n-        define(gt_cv_func_gnugettext_libc, [gt_cv_func_gnugettext]ifelse([$2], need-ngettext, 2, 1)[_libc])\n-        define(gt_cv_func_gnugettext_libintl, [gt_cv_func_gnugettext]ifelse([$2], need-ngettext, 2, 1)[_libintl])\n-\n-\tAC_CHECK_HEADER(libintl.h,\n-\t  [AC_CACHE_CHECK([for GNU gettext in libc], gt_cv_func_gnugettext_libc,\n-\t    [AC_TRY_LINK([#include <libintl.h>\n-extern int _nl_msg_cat_cntr;],\n-\t       [bindtextdomain (\"\", \"\");\n-return (int) gettext (\"\")]ifelse([$2], need-ngettext, [ + (int) ngettext (\"\", \"\", 0)], [])[ + _nl_msg_cat_cntr],\n-\t       gt_cv_func_gnugettext_libc=yes,\n-\t       gt_cv_func_gnugettext_libc=no)])\n-\n-\t   if test \"$gt_cv_func_gnugettext_libc\" != \"yes\"; then\n-\t     AC_CACHE_CHECK([for GNU gettext in libintl],\n-\t       gt_cv_func_gnugettext_libintl,\n-\t       [gt_save_LIBS=\"$LIBS\"\n-\t\tLIBS=\"$LIBS -lintl $LIBICONV\"\n-\t\tAC_TRY_LINK([#include <libintl.h>\n-extern int _nl_msg_cat_cntr;],\n-\t\t  [bindtextdomain (\"\", \"\");\n-return (int) gettext (\"\")]ifelse([$2], need-ngettext, [ + (int) ngettext (\"\", \"\", 0)], [])[ + _nl_msg_cat_cntr],\n-\t\t  gt_cv_func_gnugettext_libintl=yes,\n-\t\t  gt_cv_func_gnugettext_libintl=no)\n-\t\tLIBS=\"$gt_save_LIBS\"])\n-\t   fi\n-\n-\t   dnl If an already present or preinstalled GNU gettext() is found,\n-\t   dnl use it.  But if this macro is used in GNU gettext, and GNU\n-\t   dnl gettext is already preinstalled in libintl, we update this\n-\t   dnl libintl.  (Cf. the install rule in intl/Makefile.in.)\n-\t   if test \"$gt_cv_func_gnugettext_libc\" = \"yes\" \\\n-\t      || { test \"$gt_cv_func_gnugettext_libintl\" = \"yes\" \\\n-\t\t   && test \"$PACKAGE\" != gettext; }; then\n-\t     AC_DEFINE(HAVE_GETTEXT, 1,\n-               [Define if the GNU gettext() function is already present or preinstalled.])\n-\n-\t     if test \"$gt_cv_func_gnugettext_libintl\" = \"yes\"; then\n-\t       dnl If iconv() is in a separate libiconv library, then anyone\n-\t       dnl linking with libintl{.a,.so} also needs to link with\n-\t       dnl libiconv.\n-\t       INTLLIBS=\"-lintl $LIBICONV\"\n-\t     fi\n-\n-\t     gt_save_LIBS=\"$LIBS\"\n-\t     LIBS=\"$LIBS $INTLLIBS\"\n-\t     AC_CHECK_FUNCS(dcgettext)\n-\t     LIBS=\"$gt_save_LIBS\"\n-\n-\t     AM_PATH_PROG_WITH_TEST(MSGFMT, msgfmt,\n-\t       [test -z \"`$ac_dir/$ac_word -h 2>&1 | grep 'dv '`\"], no)dnl\n-\t     if test \"$MSGFMT\" != \"no\"; then\n-\t       AC_PATH_PROG(GMSGFMT, gmsgfmt, $MSGFMT)\n-\t     fi\n-\n-\t     AM_PATH_PROG_WITH_TEST(XGETTEXT, xgettext,\n-\t       [test -z \"`$ac_dir/$ac_word -h 2>&1 | grep '(HELP)'`\"], :)\n-\n-\t     CATOBJEXT=.gmo\n-\t   fi\n-\t])\n-\n-        if test \"$CATOBJEXT\" = \"NONE\"; then\n-\t  dnl GNU gettext is not found in the C library.\n-\t  dnl Fall back on GNU gettext library.\n-\t  nls_cv_use_gnu_gettext=yes\n-        fi\n-      fi\n-\n-      if test \"$nls_cv_use_gnu_gettext\" = \"yes\"; then\n-        dnl Mark actions used to generate GNU NLS library.\n-        INTLOBJS=\"\\$(GETTOBJS)\"\n-        AM_PATH_PROG_WITH_TEST(MSGFMT, msgfmt,\n-\t  [test -z \"`$ac_dir/$ac_word -h 2>&1 | grep 'dv '`\"], msgfmt)\n-        AC_PATH_PROG(GMSGFMT, gmsgfmt, $MSGFMT)\n-        AM_PATH_PROG_WITH_TEST(XGETTEXT, xgettext,\n-\t  [test -z \"`$ac_dir/$ac_word -h 2>&1 | grep '(HELP)'`\"], :)\n-        AC_SUBST(MSGFMT)\n-\tBUILD_INCLUDED_LIBINTL=yes\n-\tUSE_INCLUDED_LIBINTL=yes\n-        CATOBJEXT=.gmo\n-\tINTLLIBS=\"ifelse([$3],[],\\$(top_builddir)/intl,[$3])/libintl.ifelse([$1], use-libtool, [l], [])a $LIBICONV\"\n-\tLIBS=`echo \" $LIBS \" | sed -e 's/ -lintl / /' -e 's/^ //' -e 's/ $//'`\n-      fi\n-\n-      dnl Test whether we really found GNU xgettext.\n-      if test \"$XGETTEXT\" != \":\"; then\n-\tdnl If it is no GNU xgettext we define it as : so that the\n-\tdnl Makefiles still can work.\n-\tif $XGETTEXT --omit-header /dev/null 2> /dev/null; then\n-\t  : ;\n-\telse\n-\t  AC_MSG_RESULT(\n-\t    [found xgettext program is not GNU xgettext; ignore it])\n-\t  XGETTEXT=\":\"\n-\tfi\n-      fi\n-\n-      dnl We need to process the po/ directory.\n-      POSUB=po\n-    fi\n-    AC_OUTPUT_COMMANDS(\n-     [for ac_file in $CONFIG_FILES; do\n-        # Support \"outfile[:infile[:infile...]]\"\n-        case \"$ac_file\" in\n-          *:*) ac_file=`echo \"$ac_file\"|sed 's%:.*%%'` ;;\n-        esac\n-        # PO directories have a Makefile.in generated from Makefile.in.in.\n-        case \"$ac_file\" in */Makefile.in)\n-          # Adjust a relative srcdir.\n-          ac_dir=`echo \"$ac_file\"|sed 's%/[^/][^/]*$%%'`\n-          ac_dir_suffix=\"/`echo \"$ac_dir\"|sed 's%^\\./%%'`\"\n-          ac_dots=`echo \"$ac_dir_suffix\"|sed 's%/[^/]*%../%g'`\n-          case \"$ac_given_srcdir\" in\n-            .)  top_srcdir=`echo $ac_dots|sed 's%/$%%'` ;;\n-            /*) top_srcdir=\"$ac_given_srcdir\" ;;\n-            *)  top_srcdir=\"$ac_dots$ac_given_srcdir\" ;;\n-          esac\n-          if test -f \"$ac_given_srcdir/$ac_dir/POTFILES.in\"; then\n-            rm -f \"$ac_dir/POTFILES\"\n-            echo creating \"$ac_dir/POTFILES\"\n-            sed -e \"/^#/d\" -e \"/^[ \t]*\\$/d\" -e \"s,.*,     $top_srcdir/& \\\\\\\\,\" -e \"\\$s/\\(.*\\) \\\\\\\\/\\1/\" < \"$ac_given_srcdir/$ac_dir/POTFILES.in\" > \"$ac_dir/POTFILES\"\n-            echo creating \"$ac_dir/Makefile\"\n-            sed -e \"/POTFILES =/r $ac_dir/POTFILES\" \"$ac_dir/Makefile.in\" > \"$ac_dir/Makefile\"\n-          fi\n-          ;;\n-        esac\n-      done])\n-\n-\n-    dnl If this is used in GNU gettext we have to set BUILD_INCLUDED_LIBINTL\n-    dnl to 'yes' because some of the testsuite requires it.\n-    if test \"$PACKAGE\" = gettext; then\n-      BUILD_INCLUDED_LIBINTL=yes\n-    fi\n-\n-    dnl intl/plural.c is generated from intl/plural.y. It requires bison,\n-    dnl because plural.y uses bison specific features. It requires at least\n-    dnl bison-1.26 because earlier versions generate a plural.c that doesn't\n-    dnl compile.\n-    dnl bison is only needed for the maintainer (who touches plural.y). But in\n-    dnl order to avoid separate Makefiles or --enable-maintainer-mode, we put\n-    dnl the rule in general Makefile. Now, some people carelessly touch the\n-    dnl files or have a broken \"make\" program, hence the plural.c rule will\n-    dnl sometimes fire. To avoid an error, defines BISON to \":\" if it is not\n-    dnl present or too old.\n-    AC_CHECK_PROGS([INTLBISON], [bison])\n-    if test -z \"$INTLBISON\"; then\n-      ac_verc_fail=yes\n-    else\n-      dnl Found it, now check the version.\n-      AC_MSG_CHECKING([version of bison])\n-changequote(<<,>>)dnl\n-      ac_prog_version=`$INTLBISON --version 2>&1 | sed -n 's/^.*GNU Bison .* \\([0-9]*\\.[0-9.]*\\).*$/\\1/p'`\n-      case $ac_prog_version in\n-        '') ac_prog_version=\"v. ?.??, bad\"; ac_verc_fail=yes;;\n-        1.2[6-9]* | 1.[3-9][0-9]* | [2-9].*)\n-changequote([,])dnl\n-           ac_prog_version=\"$ac_prog_version, ok\"; ac_verc_fail=no;;\n-        *) ac_prog_version=\"$ac_prog_version, bad\"; ac_verc_fail=yes;;\n-      esac\n-      AC_MSG_RESULT([$ac_prog_version])\n-    fi\n-    if test $ac_verc_fail = yes; then\n-      INTLBISON=:\n-    fi\n-\n-    dnl These rules are solely for the distribution goal.  While doing this\n-    dnl we only have to keep exactly one list of the available catalogs\n-    dnl in configure.in.\n-    for lang in $ALL_LINGUAS; do\n-      GMOFILES=\"$GMOFILES $lang.gmo\"\n-      POFILES=\"$POFILES $lang.po\"\n-    done\n-\n-    dnl Make all variables we use known to autoconf.\n-    AC_SUBST(BUILD_INCLUDED_LIBINTL)\n-    AC_SUBST(USE_INCLUDED_LIBINTL)\n-    AC_SUBST(CATALOGS)\n-    AC_SUBST(CATOBJEXT)\n-    AC_SUBST(GMOFILES)\n-    AC_SUBST(INTLLIBS)\n-    AC_SUBST(INTLOBJS)\n-    AC_SUBST(POFILES)\n-    AC_SUBST(POSUB)\n-\n-    dnl For backward compatibility. Some configure.ins may be using this.\n-    nls_cv_header_intl=\n-    nls_cv_header_libgt=\n-\n-    dnl For backward compatibility. Some Makefiles may be using this.\n-    DATADIRNAME=share\n-    AC_SUBST(DATADIRNAME)\n-\n-    dnl For backward compatibility. Some Makefiles may be using this.\n-    INSTOBJEXT=.mo\n-    AC_SUBST(INSTOBJEXT)\n-\n-    dnl For backward compatibility. Some Makefiles may be using this.\n-    GENCAT=gencat\n-    AC_SUBST(GENCAT)\n-  ])\n-\n-dnl Usage: Just like AM_WITH_NLS, which see.\n-AC_DEFUN([AM_GNU_GETTEXT],\n-  [AC_REQUIRE([AC_PROG_MAKE_SET])dnl\n-   AC_REQUIRE([AC_PROG_CC])dnl\n-   AC_REQUIRE([AC_CANONICAL_HOST])dnl\n-   AC_REQUIRE([AC_PROG_RANLIB])dnl\n-   AC_REQUIRE([AC_ISC_POSIX])dnl\n-   AC_REQUIRE([AC_HEADER_STDC])dnl\n-   AC_REQUIRE([AC_C_CONST])dnl\n-   AC_REQUIRE([AC_C_INLINE])dnl\n-   AC_REQUIRE([AC_TYPE_OFF_T])dnl\n-   AC_REQUIRE([AC_TYPE_SIZE_T])dnl\n-   AC_REQUIRE([AC_FUNC_ALLOCA])dnl\n-   AC_REQUIRE([AC_FUNC_MMAP])dnl\n-   AC_REQUIRE([jm_GLIBC21])dnl\n-\n-   AC_CHECK_HEADERS([argz.h limits.h locale.h nl_types.h malloc.h stddef.h \\\n-stdlib.h string.h unistd.h sys/param.h])\n-   AC_CHECK_FUNCS([feof_unlocked fgets_unlocked getcwd getegid geteuid \\\n-getgid getuid mempcpy munmap putenv setenv setlocale stpcpy strchr strcasecmp \\\n-strdup strtoul tsearch __argz_count __argz_stringify __argz_next])\n-\n-   AM_ICONV\n-   AM_LANGINFO_CODESET\n-   AM_LC_MESSAGES\n-   AM_WITH_NLS([$1],[$2],[$3])\n-\n-   if test \"x$CATOBJEXT\" != \"x\"; then\n-     if test \"x$ALL_LINGUAS\" = \"x\"; then\n-       LINGUAS=\n-     else\n-       AC_MSG_CHECKING(for catalogs to be installed)\n-       NEW_LINGUAS=\n-       for presentlang in $ALL_LINGUAS; do\n-         useit=no\n-         for desiredlang in ${LINGUAS-$ALL_LINGUAS}; do\n-           # Use the presentlang catalog if desiredlang is\n-           #   a. equal to presentlang, or\n-           #   b. a variant of presentlang (because in this case,\n-           #      presentlang can be used as a fallback for messages\n-           #      which are not translated in the desiredlang catalog).\n-           case \"$desiredlang\" in\n-             \"$presentlang\"*) useit=yes;;\n-           esac\n-         done\n-         if test $useit = yes; then\n-           NEW_LINGUAS=\"$NEW_LINGUAS $presentlang\"\n-         fi\n-       done\n-       LINGUAS=$NEW_LINGUAS\n-       AC_MSG_RESULT($LINGUAS)\n-     fi\n-\n-     dnl Construct list of names of catalog files to be constructed.\n-     if test -n \"$LINGUAS\"; then\n-       for lang in $LINGUAS; do CATALOGS=\"$CATALOGS $lang$CATOBJEXT\"; done\n-     fi\n-   fi\n-\n-   dnl If the AC_CONFIG_AUX_DIR macro for autoconf is used we possibly\n-   dnl find the mkinstalldirs script in another subdir but $(top_srcdir).\n-   dnl Try to locate is.\n-   MKINSTALLDIRS=\n-   if test -n \"$ac_aux_dir\"; then\n-     MKINSTALLDIRS=\"$ac_aux_dir/mkinstalldirs\"\n-   fi\n-   if test -z \"$MKINSTALLDIRS\"; then\n-     MKINSTALLDIRS=\"\\$(top_srcdir)/mkinstalldirs\"\n-   fi\n-   AC_SUBST(MKINSTALLDIRS)\n-\n-   dnl Enable libtool support if the surrounding package wishes it.\n-   INTL_LIBTOOL_SUFFIX_PREFIX=ifelse([$1], use-libtool, [l], [])\n-   AC_SUBST(INTL_LIBTOOL_SUFFIX_PREFIX)\n-  ])\n-\n-# Search path for a program which passes the given test.\n-# Ulrich Drepper <drepper@cygnus.com>, 1996.\n-#\n-# This file can be copied and used freely without restrictions.  It can\n-# be used in projects which are not available under the GNU Public License\n-# but which still want to provide support for the GNU gettext functionality.\n-# Please note that the actual code is *not* freely available.\n-\n-# serial 1\n-\n-dnl AM_PATH_PROG_WITH_TEST(VARIABLE, PROG-TO-CHECK-FOR,\n-dnl   TEST-PERFORMED-ON-FOUND_PROGRAM [, VALUE-IF-NOT-FOUND [, PATH]])\n-AC_DEFUN([AM_PATH_PROG_WITH_TEST],\n-[# Extract the first word of \"$2\", so it can be a program name with args.\n-set dummy $2; ac_word=[$]2\n-AC_MSG_CHECKING([for $ac_word])\n-AC_CACHE_VAL(ac_cv_path_$1,\n-[case \"[$]$1\" in\n-  /*)\n-  ac_cv_path_$1=\"[$]$1\" # Let the user override the test with a path.\n-  ;;\n-  *)\n-  IFS=\"${IFS= \t}\"; ac_save_ifs=\"$IFS\"; IFS=\"${IFS}:\"\n-  for ac_dir in ifelse([$5], , $PATH, [$5]); do\n-    test -z \"$ac_dir\" && ac_dir=.\n-    if test -f $ac_dir/$ac_word; then\n-      if [$3]; then\n-\tac_cv_path_$1=\"$ac_dir/$ac_word\"\n-\tbreak\n-      fi\n-    fi\n-  done\n-  IFS=\"$ac_save_ifs\"\n-dnl If no 4th arg is given, leave the cache variable unset,\n-dnl so AC_PATH_PROGS will keep looking.\n-ifelse([$4], , , [  test -z \"[$]ac_cv_path_$1\" && ac_cv_path_$1=\"$4\"\n-])dnl\n-  ;;\n-esac])dnl\n-$1=\"$ac_cv_path_$1\"\n-if test -n \"[$]$1\"; then\n-  AC_MSG_RESULT([$]$1)\n-else\n-  AC_MSG_RESULT(no)\n-fi\n-AC_SUBST($1)dnl\n-])\n-\n-#serial 2\n-\n-# Test for the GNU C Library, version 2.1 or newer.\n-# From Bruno Haible.\n-\n-AC_DEFUN([jm_GLIBC21],\n-  [\n-    AC_CACHE_CHECK(whether we are using the GNU C Library 2.1 or newer,\n-      ac_cv_gnu_library_2_1,\n-      [AC_EGREP_CPP([Lucky GNU user],\n-\t[\n-#include <features.h>\n-#ifdef __GNU_LIBRARY__\n- #if (__GLIBC__ == 2 && __GLIBC_MINOR__ >= 1) || (__GLIBC__ > 2)\n-  Lucky GNU user\n- #endif\n-#endif\n-\t],\n-\tac_cv_gnu_library_2_1=yes,\n-\tac_cv_gnu_library_2_1=no)\n-      ]\n-    )\n-    AC_SUBST(GLIBC21)\n-    GLIBC21=\"$ac_cv_gnu_library_2_1\"\n-  ]\n-)\n-\n-#serial AM2\n-\n-dnl From Bruno Haible.\n-\n-AC_DEFUN([AM_ICONV],\n-[\n-  dnl Some systems have iconv in libc, some have it in libiconv (OSF/1 and\n-  dnl those with the standalone portable GNU libiconv installed).\n-\n-  AC_ARG_WITH([libiconv-prefix],\n-[  --with-libiconv-prefix=DIR  search for libiconv in DIR/include and DIR/lib], [\n-    for dir in `echo \"$withval\" | tr : ' '`; do\n-      if test -d $dir/include; then CPPFLAGS=\"$CPPFLAGS -I$dir/include\"; fi\n-      if test -d $dir/lib; then LDFLAGS=\"$LDFLAGS -L$dir/lib\"; fi\n-    done\n-   ])\n-\n-  AC_CACHE_CHECK(for iconv, am_cv_func_iconv, [\n-    am_cv_func_iconv=\"no, consider installing GNU libiconv\"\n-    am_cv_lib_iconv=no\n-    AC_TRY_LINK([#include <stdlib.h>\n-#include <iconv.h>],\n-      [iconv_t cd = iconv_open(\"\",\"\");\n-       iconv(cd,NULL,NULL,NULL,NULL);\n-       iconv_close(cd);],\n-      am_cv_func_iconv=yes)\n-    if test \"$am_cv_func_iconv\" != yes; then\n-      am_save_LIBS=\"$LIBS\"\n-      LIBS=\"$LIBS -liconv\"\n-      AC_TRY_LINK([#include <stdlib.h>\n-#include <iconv.h>],\n-        [iconv_t cd = iconv_open(\"\",\"\");\n-         iconv(cd,NULL,NULL,NULL,NULL);\n-         iconv_close(cd);],\n-        am_cv_lib_iconv=yes\n-        am_cv_func_iconv=yes)\n-      LIBS=\"$am_save_LIBS\"\n-    fi\n-  ])\n-  if test \"$am_cv_func_iconv\" = yes; then\n-    AC_DEFINE(HAVE_ICONV, 1, [Define if you have the iconv() function.])\n-    AC_MSG_CHECKING([for iconv declaration])\n-    AC_CACHE_VAL(am_cv_proto_iconv, [\n-      AC_TRY_COMPILE([\n-#include <stdlib.h>\n-#include <iconv.h>\n-extern\n-#ifdef __cplusplus\n-\"C\"\n-#endif\n-#if defined(__STDC__) || defined(__cplusplus)\n-size_t iconv (iconv_t cd, char * *inbuf, size_t *inbytesleft, char * *outbuf, size_t *outbytesleft);\n-#else\n-size_t iconv();\n-#endif\n-], [], am_cv_proto_iconv_arg1=\"\", am_cv_proto_iconv_arg1=\"const\")\n-      am_cv_proto_iconv=\"extern size_t iconv (iconv_t cd, $am_cv_proto_iconv_arg1 char * *inbuf, size_t *inbytesleft, char * *outbuf, size_t *outbytesleft);\"])\n-    am_cv_proto_iconv=`echo \"[$]am_cv_proto_iconv\" | tr -s ' ' | sed -e 's/( /(/'`\n-    AC_MSG_RESULT([$]{ac_t:-\n-         }[$]am_cv_proto_iconv)\n-    AC_DEFINE_UNQUOTED(ICONV_CONST, $am_cv_proto_iconv_arg1,\n-      [Define as const if the declaration of iconv() needs const.])\n-  fi\n-  LIBICONV=\n-  if test \"$am_cv_lib_iconv\" = yes; then\n-    LIBICONV=\"-liconv\"\n-  fi\n-  AC_SUBST(LIBICONV)\n-])\n-\n-#serial AM1\n-\n-dnl From Bruno Haible.\n-\n-AC_DEFUN([AM_LANGINFO_CODESET],\n-[\n-  AC_CACHE_CHECK([for nl_langinfo and CODESET], am_cv_langinfo_codeset,\n-    [AC_TRY_LINK([#include <langinfo.h>],\n-      [char* cs = nl_langinfo(CODESET);],\n-      am_cv_langinfo_codeset=yes,\n-      am_cv_langinfo_codeset=no)\n-    ])\n-  if test $am_cv_langinfo_codeset = yes; then\n-    AC_DEFINE(HAVE_LANGINFO_CODESET, 1,\n-      [Define if you have <langinfo.h> and nl_langinfo(CODESET).])\n-  fi\n-])\n-\n-# Check whether LC_MESSAGES is available in <locale.h>.\n-# Ulrich Drepper <drepper@cygnus.com>, 1995.\n-#\n-# This file can be copied and used freely without restrictions.  It can\n-# be used in projects which are not available under the GNU Public License\n-# but which still want to provide support for the GNU gettext functionality.\n-# Please note that the actual code is *not* freely available.\n-\n-# serial 2\n-\n-AC_DEFUN([AM_LC_MESSAGES],\n-  [if test $ac_cv_header_locale_h = yes; then\n-    AC_CACHE_CHECK([for LC_MESSAGES], am_cv_val_LC_MESSAGES,\n-      [AC_TRY_LINK([#include <locale.h>], [return LC_MESSAGES],\n-       am_cv_val_LC_MESSAGES=yes, am_cv_val_LC_MESSAGES=no)])\n-    if test $am_cv_val_LC_MESSAGES = yes; then\n-      AC_DEFINE(HAVE_LC_MESSAGES, 1,\n-        [Define if your <locale.h> file defines LC_MESSAGES.])\n-    fi\n-  fi])\n-\n # Do all the work for Automake.  This macro actually does too much --\n # some checks are only needed if your package does certain things.\n # But this isn't really a big deal."}, {"sha": "fcc2c3e2ebf5d033b8cf3edfc5ef156f3de49def", "filename": "libstdc++-v3/config.h.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/248a9163e19adb7a2141d0e3149a4f40438602a7/libstdc%2B%2B-v3%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/248a9163e19adb7a2141d0e3149a4f40438602a7/libstdc%2B%2B-v3%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig.h.in?ref=248a9163e19adb7a2141d0e3149a4f40438602a7", "patch": "@@ -723,6 +723,9 @@\n /* Define if you have the <sys/resource.h> header file.  */\n #undef HAVE_SYS_RESOURCE_H\n \n+/* Define if you have the <sys/stat.h> header file.  */\n+#undef HAVE_SYS_STAT_H\n+\n /* Define if you have the <sys/types.h> header file.  */\n #undef HAVE_SYS_TYPES_H\n "}, {"sha": "fb09725d0c48e09d5b912010cf314a884bd8ff13", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 1053, "deletions": 1054, "changes": 2107, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/248a9163e19adb7a2141d0e3149a4f40438602a7/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/248a9163e19adb7a2141d0e3149a4f40438602a7/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=248a9163e19adb7a2141d0e3149a4f40438602a7"}, {"sha": "d42499cd9ad75e664a1f4e38eedf4995e693a4ff", "filename": "libstdc++-v3/include/Makefile.in", "status": "modified", "additions": 0, "deletions": 19, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/248a9163e19adb7a2141d0e3149a4f40438602a7/libstdc%2B%2B-v3%2Finclude%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/248a9163e19adb7a2141d0e3149a4f40438602a7/libstdc%2B%2B-v3%2Finclude%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2FMakefile.in?ref=248a9163e19adb7a2141d0e3149a4f40438602a7", "patch": "@@ -68,9 +68,6 @@ AS = @AS@\n ATOMICITY_INC_SRCDIR = @ATOMICITY_INC_SRCDIR@\n AWK = @AWK@\n BASIC_FILE_H = @BASIC_FILE_H@\n-BUILD_INCLUDED_LIBINTL = @BUILD_INCLUDED_LIBINTL@\n-CATALOGS = @CATALOGS@\n-CATOBJEXT = @CATOBJEXT@\n CC = @CC@\n CCODECVT_C = @CCODECVT_C@\n CCODECVT_H = @CCODECVT_H@\n@@ -82,25 +79,14 @@ CSHADOW_FLAGS = @CSHADOW_FLAGS@\n CSTDIO_H = @CSTDIO_H@\n CXXCPP = @CXXCPP@\n C_INCLUDE_DIR = @C_INCLUDE_DIR@\n-DATADIRNAME = @DATADIRNAME@\n DEBUG_FLAGS = @DEBUG_FLAGS@\n DLLTOOL = @DLLTOOL@\n EXEEXT = @EXEEXT@\n EXTRA_CXX_FLAGS = @EXTRA_CXX_FLAGS@\n GCJ = @GCJ@\n GCJFLAGS = @GCJFLAGS@\n-GENCAT = @GENCAT@\n-GLIBC21 = @GLIBC21@\n GLIBCPP_INCLUDES = @GLIBCPP_INCLUDES@\n GLIBCPP_IS_CROSS_COMPILING = @GLIBCPP_IS_CROSS_COMPILING@\n-GMOFILES = @GMOFILES@\n-GMSGFMT = @GMSGFMT@\n-INSTOBJEXT = @INSTOBJEXT@\n-INTLBISON = @INTLBISON@\n-INTLLIBS = @INTLLIBS@\n-INTLOBJS = @INTLOBJS@\n-INTL_LIBTOOL_SUFFIX_PREFIX = @INTL_LIBTOOL_SUFFIX_PREFIX@\n-LIBICONV = @LIBICONV@\n LIBIO_INCLUDES = @LIBIO_INCLUDES@\n LIBMATHOBJS = @LIBMATHOBJS@\n LIBMATH_INCLUDES = @LIBMATH_INCLUDES@\n@@ -111,22 +97,17 @@ LIBUNWIND_FLAG = @LIBUNWIND_FLAG@\n LN_S = @LN_S@\n MAINT = @MAINT@\n MAKEINFO = @MAKEINFO@\n-MKINSTALLDIRS = @MKINSTALLDIRS@\n-MSGFMT = @MSGFMT@\n OBJDUMP = @OBJDUMP@\n OBJEXT = @OBJEXT@\n OPTIMIZE_CXXFLAGS = @OPTIMIZE_CXXFLAGS@\n OPT_LDFLAGS = @OPT_LDFLAGS@\n OS_INC_SRCDIR = @OS_INC_SRCDIR@\n PACKAGE = @PACKAGE@\n-POFILES = @POFILES@\n-POSUB = @POSUB@\n RANLIB = @RANLIB@\n SECTION_FLAGS = @SECTION_FLAGS@\n SECTION_LDFLAGS = @SECTION_LDFLAGS@\n STRIP = @STRIP@\n TOPLEVEL_INCLUDES = @TOPLEVEL_INCLUDES@\n-USE_INCLUDED_LIBINTL = @USE_INCLUDED_LIBINTL@\n USE_NLS = @USE_NLS@\n VERSION = @VERSION@\n WARN_FLAGS = @WARN_FLAGS@"}, {"sha": "cf7e89e689767f263a47dc2c60bfe2fae385c47c", "filename": "libstdc++-v3/libio/Makefile.in", "status": "modified", "additions": 0, "deletions": 19, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/248a9163e19adb7a2141d0e3149a4f40438602a7/libstdc%2B%2B-v3%2Flibio%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/248a9163e19adb7a2141d0e3149a4f40438602a7/libstdc%2B%2B-v3%2Flibio%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibio%2FMakefile.in?ref=248a9163e19adb7a2141d0e3149a4f40438602a7", "patch": "@@ -68,9 +68,6 @@ AS = @AS@\n ATOMICITY_INC_SRCDIR = @ATOMICITY_INC_SRCDIR@\n AWK = @AWK@\n BASIC_FILE_H = @BASIC_FILE_H@\n-BUILD_INCLUDED_LIBINTL = @BUILD_INCLUDED_LIBINTL@\n-CATALOGS = @CATALOGS@\n-CATOBJEXT = @CATOBJEXT@\n CC = @CC@\n CCODECVT_C = @CCODECVT_C@\n CCODECVT_H = @CCODECVT_H@\n@@ -83,24 +80,13 @@ CSTDIO_H = @CSTDIO_H@\n CXX = @CXX@\n CXXCPP = @CXXCPP@\n C_INCLUDE_DIR = @C_INCLUDE_DIR@\n-DATADIRNAME = @DATADIRNAME@\n DEBUG_FLAGS = @DEBUG_FLAGS@\n DLLTOOL = @DLLTOOL@\n EXEEXT = @EXEEXT@\n EXTRA_CXX_FLAGS = @EXTRA_CXX_FLAGS@\n GCJ = @GCJ@\n GCJFLAGS = @GCJFLAGS@\n-GENCAT = @GENCAT@\n-GLIBC21 = @GLIBC21@\n GLIBCPP_IS_CROSS_COMPILING = @GLIBCPP_IS_CROSS_COMPILING@\n-GMOFILES = @GMOFILES@\n-GMSGFMT = @GMSGFMT@\n-INSTOBJEXT = @INSTOBJEXT@\n-INTLBISON = @INTLBISON@\n-INTLLIBS = @INTLLIBS@\n-INTLOBJS = @INTLOBJS@\n-INTL_LIBTOOL_SUFFIX_PREFIX = @INTL_LIBTOOL_SUFFIX_PREFIX@\n-LIBICONV = @LIBICONV@\n LIBMATHOBJS = @LIBMATHOBJS@\n LIBMATH_INCLUDES = @LIBMATH_INCLUDES@\n LIBSUPCXX_INCLUDES = @LIBSUPCXX_INCLUDES@\n@@ -110,21 +96,16 @@ LIBUNWIND_FLAG = @LIBUNWIND_FLAG@\n LN_S = @LN_S@\n MAINT = @MAINT@\n MAKEINFO = @MAKEINFO@\n-MKINSTALLDIRS = @MKINSTALLDIRS@\n-MSGFMT = @MSGFMT@\n OBJDUMP = @OBJDUMP@\n OBJEXT = @OBJEXT@\n OPTIMIZE_CXXFLAGS = @OPTIMIZE_CXXFLAGS@\n OPT_LDFLAGS = @OPT_LDFLAGS@\n OS_INC_SRCDIR = @OS_INC_SRCDIR@\n PACKAGE = @PACKAGE@\n-POFILES = @POFILES@\n-POSUB = @POSUB@\n RANLIB = @RANLIB@\n SECTION_FLAGS = @SECTION_FLAGS@\n SECTION_LDFLAGS = @SECTION_LDFLAGS@\n STRIP = @STRIP@\n-USE_INCLUDED_LIBINTL = @USE_INCLUDED_LIBINTL@\n USE_NLS = @USE_NLS@\n VERSION = @VERSION@\n WARN_FLAGS = @WARN_FLAGS@"}, {"sha": "af21fa99043a5a4332d462059dd67f9ba9d76429", "filename": "libstdc++-v3/libmath/Makefile.in", "status": "modified", "additions": 0, "deletions": 19, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/248a9163e19adb7a2141d0e3149a4f40438602a7/libstdc%2B%2B-v3%2Flibmath%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/248a9163e19adb7a2141d0e3149a4f40438602a7/libstdc%2B%2B-v3%2Flibmath%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibmath%2FMakefile.in?ref=248a9163e19adb7a2141d0e3149a4f40438602a7", "patch": "@@ -68,9 +68,6 @@ AS = @AS@\n ATOMICITY_INC_SRCDIR = @ATOMICITY_INC_SRCDIR@\n AWK = @AWK@\n BASIC_FILE_H = @BASIC_FILE_H@\n-BUILD_INCLUDED_LIBINTL = @BUILD_INCLUDED_LIBINTL@\n-CATALOGS = @CATALOGS@\n-CATOBJEXT = @CATOBJEXT@\n CC = @CC@\n CCODECVT_C = @CCODECVT_C@\n CCODECVT_H = @CCODECVT_H@\n@@ -83,25 +80,14 @@ CSTDIO_H = @CSTDIO_H@\n CXX = @CXX@\n CXXCPP = @CXXCPP@\n C_INCLUDE_DIR = @C_INCLUDE_DIR@\n-DATADIRNAME = @DATADIRNAME@\n DEBUG_FLAGS = @DEBUG_FLAGS@\n DLLTOOL = @DLLTOOL@\n EXEEXT = @EXEEXT@\n EXTRA_CXX_FLAGS = @EXTRA_CXX_FLAGS@\n GCJ = @GCJ@\n GCJFLAGS = @GCJFLAGS@\n-GENCAT = @GENCAT@\n-GLIBC21 = @GLIBC21@\n GLIBCPP_INCLUDES = @GLIBCPP_INCLUDES@\n GLIBCPP_IS_CROSS_COMPILING = @GLIBCPP_IS_CROSS_COMPILING@\n-GMOFILES = @GMOFILES@\n-GMSGFMT = @GMSGFMT@\n-INSTOBJEXT = @INSTOBJEXT@\n-INTLBISON = @INTLBISON@\n-INTLLIBS = @INTLLIBS@\n-INTLOBJS = @INTLOBJS@\n-INTL_LIBTOOL_SUFFIX_PREFIX = @INTL_LIBTOOL_SUFFIX_PREFIX@\n-LIBICONV = @LIBICONV@\n LIBIO_INCLUDES = @LIBIO_INCLUDES@\n LIBMATHOBJS = @LIBMATHOBJS@\n LIBMATH_INCLUDES = @LIBMATH_INCLUDES@\n@@ -112,21 +98,16 @@ LIBUNWIND_FLAG = @LIBUNWIND_FLAG@\n LN_S = @LN_S@\n MAINT = @MAINT@\n MAKEINFO = @MAKEINFO@\n-MKINSTALLDIRS = @MKINSTALLDIRS@\n-MSGFMT = @MSGFMT@\n OBJDUMP = @OBJDUMP@\n OBJEXT = @OBJEXT@\n OPTIMIZE_CXXFLAGS = @OPTIMIZE_CXXFLAGS@\n OPT_LDFLAGS = @OPT_LDFLAGS@\n OS_INC_SRCDIR = @OS_INC_SRCDIR@\n PACKAGE = @PACKAGE@\n-POFILES = @POFILES@\n-POSUB = @POSUB@\n RANLIB = @RANLIB@\n SECTION_FLAGS = @SECTION_FLAGS@\n SECTION_LDFLAGS = @SECTION_LDFLAGS@\n STRIP = @STRIP@\n-USE_INCLUDED_LIBINTL = @USE_INCLUDED_LIBINTL@\n USE_NLS = @USE_NLS@\n VERSION = @VERSION@\n WARN_FLAGS = @WARN_FLAGS@"}, {"sha": "186cbae3b04bbc99a9dcbc8a11d6cf37b7698172", "filename": "libstdc++-v3/libsupc++/Makefile.in", "status": "modified", "additions": 0, "deletions": 19, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/248a9163e19adb7a2141d0e3149a4f40438602a7/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/248a9163e19adb7a2141d0e3149a4f40438602a7/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in?ref=248a9163e19adb7a2141d0e3149a4f40438602a7", "patch": "@@ -68,9 +68,6 @@ AS = @AS@\n ATOMICITY_INC_SRCDIR = @ATOMICITY_INC_SRCDIR@\n AWK = @AWK@\n BASIC_FILE_H = @BASIC_FILE_H@\n-BUILD_INCLUDED_LIBINTL = @BUILD_INCLUDED_LIBINTL@\n-CATALOGS = @CATALOGS@\n-CATOBJEXT = @CATOBJEXT@\n CCODECVT_C = @CCODECVT_C@\n CCODECVT_H = @CCODECVT_H@\n CLOCALE_H = @CLOCALE_H@\n@@ -81,24 +78,13 @@ CSHADOW_FLAGS = @CSHADOW_FLAGS@\n CSTDIO_H = @CSTDIO_H@\n CXXCPP = @CXXCPP@\n C_INCLUDE_DIR = @C_INCLUDE_DIR@\n-DATADIRNAME = @DATADIRNAME@\n DEBUG_FLAGS = @DEBUG_FLAGS@\n DLLTOOL = @DLLTOOL@\n EXEEXT = @EXEEXT@\n EXTRA_CXX_FLAGS = @EXTRA_CXX_FLAGS@\n GCJ = @GCJ@\n GCJFLAGS = @GCJFLAGS@\n-GENCAT = @GENCAT@\n-GLIBC21 = @GLIBC21@\n GLIBCPP_IS_CROSS_COMPILING = @GLIBCPP_IS_CROSS_COMPILING@\n-GMOFILES = @GMOFILES@\n-GMSGFMT = @GMSGFMT@\n-INSTOBJEXT = @INSTOBJEXT@\n-INTLBISON = @INTLBISON@\n-INTLLIBS = @INTLLIBS@\n-INTLOBJS = @INTLOBJS@\n-INTL_LIBTOOL_SUFFIX_PREFIX = @INTL_LIBTOOL_SUFFIX_PREFIX@\n-LIBICONV = @LIBICONV@\n LIBIO_INCLUDES = @LIBIO_INCLUDES@\n LIBMATHOBJS = @LIBMATHOBJS@\n LIBMATH_INCLUDES = @LIBMATH_INCLUDES@\n@@ -108,21 +94,16 @@ LIBUNWIND_FLAG = @LIBUNWIND_FLAG@\n LN_S = @LN_S@\n MAINT = @MAINT@\n MAKEINFO = @MAKEINFO@\n-MKINSTALLDIRS = @MKINSTALLDIRS@\n-MSGFMT = @MSGFMT@\n OBJDUMP = @OBJDUMP@\n OBJEXT = @OBJEXT@\n OPT_LDFLAGS = @OPT_LDFLAGS@\n OS_INC_SRCDIR = @OS_INC_SRCDIR@\n PACKAGE = @PACKAGE@\n-POFILES = @POFILES@\n-POSUB = @POSUB@\n RANLIB = @RANLIB@\n SECTION_FLAGS = @SECTION_FLAGS@\n SECTION_LDFLAGS = @SECTION_LDFLAGS@\n STRIP = @STRIP@\n TOPLEVEL_INCLUDES = @TOPLEVEL_INCLUDES@\n-USE_INCLUDED_LIBINTL = @USE_INCLUDED_LIBINTL@\n USE_NLS = @USE_NLS@\n VERSION = @VERSION@\n WARN_FLAGS = @WARN_FLAGS@"}, {"sha": "ab2a1f37f599fc0dad7cfeca1dc8ad4d4c57ea6f", "filename": "libstdc++-v3/po/Makefile.in", "status": "modified", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/248a9163e19adb7a2141d0e3149a4f40438602a7/libstdc%2B%2B-v3%2Fpo%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/248a9163e19adb7a2141d0e3149a4f40438602a7/libstdc%2B%2B-v3%2Fpo%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fpo%2FMakefile.in?ref=248a9163e19adb7a2141d0e3149a4f40438602a7", "patch": "@@ -68,9 +68,6 @@ AS = @AS@\n ATOMICITY_INC_SRCDIR = @ATOMICITY_INC_SRCDIR@\n AWK = @AWK@\n BASIC_FILE_H = @BASIC_FILE_H@\n-BUILD_INCLUDED_LIBINTL = @BUILD_INCLUDED_LIBINTL@\n-CATALOGS = @CATALOGS@\n-CATOBJEXT = @CATOBJEXT@\n CC = @CC@\n CCODECVT_C = @CCODECVT_C@\n CCODECVT_H = @CCODECVT_H@\n@@ -83,25 +80,14 @@ CSTDIO_H = @CSTDIO_H@\n CXX = @CXX@\n CXXCPP = @CXXCPP@\n C_INCLUDE_DIR = @C_INCLUDE_DIR@\n-DATADIRNAME = @DATADIRNAME@\n DEBUG_FLAGS = @DEBUG_FLAGS@\n DLLTOOL = @DLLTOOL@\n EXEEXT = @EXEEXT@\n EXTRA_CXX_FLAGS = @EXTRA_CXX_FLAGS@\n GCJ = @GCJ@\n GCJFLAGS = @GCJFLAGS@\n-GENCAT = @GENCAT@\n-GLIBC21 = @GLIBC21@\n GLIBCPP_INCLUDES = @GLIBCPP_INCLUDES@\n GLIBCPP_IS_CROSS_COMPILING = @GLIBCPP_IS_CROSS_COMPILING@\n-GMOFILES = @GMOFILES@\n-GMSGFMT = @GMSGFMT@\n-INSTOBJEXT = @INSTOBJEXT@\n-INTLBISON = @INTLBISON@\n-INTLLIBS = @INTLLIBS@\n-INTLOBJS = @INTLOBJS@\n-INTL_LIBTOOL_SUFFIX_PREFIX = @INTL_LIBTOOL_SUFFIX_PREFIX@\n-LIBICONV = @LIBICONV@\n LIBIO_INCLUDES = @LIBIO_INCLUDES@\n LIBMATHOBJS = @LIBMATHOBJS@\n LIBMATH_INCLUDES = @LIBMATH_INCLUDES@\n@@ -112,20 +98,16 @@ LIBUNWIND_FLAG = @LIBUNWIND_FLAG@\n LN_S = @LN_S@\n MAINT = @MAINT@\n MAKEINFO = @MAKEINFO@\n-MKINSTALLDIRS = @MKINSTALLDIRS@\n OBJDUMP = @OBJDUMP@\n OBJEXT = @OBJEXT@\n OPTIMIZE_CXXFLAGS = @OPTIMIZE_CXXFLAGS@\n OPT_LDFLAGS = @OPT_LDFLAGS@\n OS_INC_SRCDIR = @OS_INC_SRCDIR@\n-POFILES = @POFILES@\n-POSUB = @POSUB@\n RANLIB = @RANLIB@\n SECTION_FLAGS = @SECTION_FLAGS@\n SECTION_LDFLAGS = @SECTION_LDFLAGS@\n STRIP = @STRIP@\n TOPLEVEL_INCLUDES = @TOPLEVEL_INCLUDES@\n-USE_INCLUDED_LIBINTL = @USE_INCLUDED_LIBINTL@\n USE_NLS = @USE_NLS@\n VERSION = @VERSION@\n WARN_FLAGS = @WARN_FLAGS@"}, {"sha": "e1eec8cc44a36d9f6adf5ce9a03bfc8596b8c51b", "filename": "libstdc++-v3/src/Makefile.am", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/248a9163e19adb7a2141d0e3149a4f40438602a7/libstdc%2B%2B-v3%2Fsrc%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/248a9163e19adb7a2141d0e3149a4f40438602a7/libstdc%2B%2B-v3%2Fsrc%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2FMakefile.am?ref=248a9163e19adb7a2141d0e3149a4f40438602a7", "patch": "@@ -68,7 +68,9 @@ sources = \\\n \tc++locale.cc locale.cc localename.cc codecvt.cc \\\n \tcollate.cc ctype.cc messages.cc monetary.cc numeric.cc time.cc \\\n \tconcept-inst.cc locale-inst.cc misc-inst.cc stl-inst.cc \\\n-\tstring-inst.cc wstring-inst.cc valarray-inst.cc  ext-inst.cc\n+\tstring-inst.cc wstring-inst.cc valarray-inst.cc  ext-inst.cc \\\n+\tfstream-inst.cc io-inst.cc istream-inst.cc ostream-inst.cc \\\n+\tstreambuf-inst.cc sstream-inst.cc\n \n VPATH = $(top_srcdir)/src:$(top_srcdir)\n "}, {"sha": "46b34f95e6a213296a74fb64d7abec63a3d61de9", "filename": "libstdc++-v3/src/Makefile.in", "status": "modified", "additions": 5, "deletions": 21, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/248a9163e19adb7a2141d0e3149a4f40438602a7/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/248a9163e19adb7a2141d0e3149a4f40438602a7/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in?ref=248a9163e19adb7a2141d0e3149a4f40438602a7", "patch": "@@ -67,9 +67,6 @@ AS = @AS@\n ATOMICITY_INC_SRCDIR = @ATOMICITY_INC_SRCDIR@\n AWK = @AWK@\n BASIC_FILE_H = @BASIC_FILE_H@\n-BUILD_INCLUDED_LIBINTL = @BUILD_INCLUDED_LIBINTL@\n-CATALOGS = @CATALOGS@\n-CATOBJEXT = @CATOBJEXT@\n CC = @CC@\n CCODECVT_C = @CCODECVT_C@\n CCODECVT_H = @CCODECVT_H@\n@@ -81,45 +78,29 @@ CSHADOW_FLAGS = @CSHADOW_FLAGS@\n CSTDIO_H = @CSTDIO_H@\n CXXCPP = @CXXCPP@\n C_INCLUDE_DIR = @C_INCLUDE_DIR@\n-DATADIRNAME = @DATADIRNAME@\n DEBUG_FLAGS = @DEBUG_FLAGS@\n DLLTOOL = @DLLTOOL@\n EXEEXT = @EXEEXT@\n EXTRA_CXX_FLAGS = @EXTRA_CXX_FLAGS@\n GCJ = @GCJ@\n GCJFLAGS = @GCJFLAGS@\n-GENCAT = @GENCAT@\n-GLIBC21 = @GLIBC21@\n GLIBCPP_IS_CROSS_COMPILING = @GLIBCPP_IS_CROSS_COMPILING@\n-GMOFILES = @GMOFILES@\n-GMSGFMT = @GMSGFMT@\n-INSTOBJEXT = @INSTOBJEXT@\n-INTLBISON = @INTLBISON@\n-INTLLIBS = @INTLLIBS@\n-INTLOBJS = @INTLOBJS@\n-INTL_LIBTOOL_SUFFIX_PREFIX = @INTL_LIBTOOL_SUFFIX_PREFIX@\n-LIBICONV = @LIBICONV@\n LIBMATHOBJS = @LIBMATHOBJS@\n LIBSUPCXX_PICFLAGS = @LIBSUPCXX_PICFLAGS@\n LIBTOOL = @LIBTOOL@\n LIBUNWIND_FLAG = @LIBUNWIND_FLAG@\n LN_S = @LN_S@\n MAINT = @MAINT@\n MAKEINFO = @MAKEINFO@\n-MKINSTALLDIRS = @MKINSTALLDIRS@\n-MSGFMT = @MSGFMT@\n OBJDUMP = @OBJDUMP@\n OBJEXT = @OBJEXT@\n OPT_LDFLAGS = @OPT_LDFLAGS@\n OS_INC_SRCDIR = @OS_INC_SRCDIR@\n PACKAGE = @PACKAGE@\n-POFILES = @POFILES@\n-POSUB = @POSUB@\n RANLIB = @RANLIB@\n SECTION_FLAGS = @SECTION_FLAGS@\n SECTION_LDFLAGS = @SECTION_LDFLAGS@\n STRIP = @STRIP@\n-USE_INCLUDED_LIBINTL = @USE_INCLUDED_LIBINTL@\n USE_NLS = @USE_NLS@\n VERSION = @VERSION@\n WARN_FLAGS = @WARN_FLAGS@\n@@ -194,7 +175,9 @@ sources = \\\n \tc++locale.cc locale.cc localename.cc codecvt.cc \\\n \tcollate.cc ctype.cc messages.cc monetary.cc numeric.cc time.cc \\\n \tconcept-inst.cc locale-inst.cc misc-inst.cc stl-inst.cc \\\n-\tstring-inst.cc wstring-inst.cc valarray-inst.cc  ext-inst.cc\n+\tstring-inst.cc wstring-inst.cc valarray-inst.cc  ext-inst.cc \\\n+\tfstream-inst.cc io-inst.cc istream-inst.cc ostream-inst.cc \\\n+\tstreambuf-inst.cc sstream-inst.cc\n \n \n VPATH = $(top_srcdir)/src:$(top_srcdir)\n@@ -277,7 +260,8 @@ ios.lo strstream.lo cmath.lo bitset.lo functexcept.lo stdexcept.lo \\\n vterminate.lo c++locale.lo locale.lo localename.lo codecvt.lo \\\n collate.lo ctype.lo messages.lo monetary.lo numeric.lo time.lo \\\n concept-inst.lo locale-inst.lo misc-inst.lo stl-inst.lo string-inst.lo \\\n-wstring-inst.lo valarray-inst.lo ext-inst.lo\n+wstring-inst.lo valarray-inst.lo ext-inst.lo fstream-inst.lo io-inst.lo \\\n+istream-inst.lo ostream-inst.lo streambuf-inst.lo sstream-inst.lo\n CXXFLAGS = @CXXFLAGS@\n CXXCOMPILE = $(CXX) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)\n CXXLD = $(CXX)"}, {"sha": "93229f0400780f671afe0d71061b4b6885cac307", "filename": "libstdc++-v3/src/ext-inst.cc", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/248a9163e19adb7a2141d0e3149a4f40438602a7/libstdc%2B%2B-v3%2Fsrc%2Fext-inst.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/248a9163e19adb7a2141d0e3149a4f40438602a7/libstdc%2B%2B-v3%2Fsrc%2Fext-inst.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fext-inst.cc?ref=248a9163e19adb7a2141d0e3149a4f40438602a7", "patch": "@@ -1,6 +1,6 @@\n // Explicit instantiation file.\n \n-// Copyright (C) 2001 Free Software Foundation, Inc.\n+// Copyright (C) 2001, 2002 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -32,9 +32,17 @@\n //\n \n #include <ext/rope>\n+#include <ext/stdio_filebuf.h>\n \n namespace std\n {\n   template\n-  const unsigned long __gnu_cxx::rope<char, std::allocator<char> >::_S_min_len;\n+    const unsigned long \n+    __gnu_cxx::rope<char, std::allocator<char> >::_S_min_len;\n+\n+  using __gnu_cxx::stdio_filebuf;\n+  template class stdio_filebuf<char>;\n+#ifdef _GLIBCPP_USE_WCHAR_T\n+  template class stdio_filebuf<wchar_t>;\n+#endif\n } // namespace std"}, {"sha": "34f3819876a39fdd496477c55c116194cfb449da", "filename": "libstdc++-v3/src/fstream-inst.cc", "status": "added", "additions": 62, "deletions": 0, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/248a9163e19adb7a2141d0e3149a4f40438602a7/libstdc%2B%2B-v3%2Fsrc%2Ffstream-inst.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/248a9163e19adb7a2141d0e3149a4f40438602a7/libstdc%2B%2B-v3%2Fsrc%2Ffstream-inst.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Ffstream-inst.cc?ref=248a9163e19adb7a2141d0e3149a4f40438602a7", "patch": "@@ -0,0 +1,62 @@\n+// Explicit instantiation file.\n+\n+// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002\n+// Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+//\n+// ISO C++ 14882:\n+//\n+\n+#include <fstream>\n+\n+namespace std\n+{\n+  // filebuf\n+  template class basic_filebuf<char, char_traits<char> >;\n+#ifdef _GLIBCPP_USE_WCHAR_T\n+  template class basic_filebuf<wchar_t, char_traits<wchar_t> >;\n+#endif\n+\n+  // ifstream\n+  template class basic_ifstream<char>;\n+#ifdef _GLIBCPP_USE_WCHAR_T\n+  template class basic_ifstream<wchar_t>;\n+#endif\n+\n+  // ofstream\n+  template class basic_ofstream<char>;\n+#ifdef _GLIBCPP_USE_WCHAR_T\n+  template class basic_ofstream<wchar_t>;\n+#endif\n+\n+  // fstream\n+  template class basic_fstream<char>;\n+#ifdef _GLIBCPP_USE_WCHAR_T\n+  template class basic_fstream<wchar_t>;\n+#endif\n+} //std"}, {"sha": "f5773c93046cd647d0c434e512c3a2a63558feba", "filename": "libstdc++-v3/src/io-inst.cc", "status": "added", "additions": 60, "deletions": 0, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/248a9163e19adb7a2141d0e3149a4f40438602a7/libstdc%2B%2B-v3%2Fsrc%2Fio-inst.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/248a9163e19adb7a2141d0e3149a4f40438602a7/libstdc%2B%2B-v3%2Fsrc%2Fio-inst.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fio-inst.cc?ref=248a9163e19adb7a2141d0e3149a4f40438602a7", "patch": "@@ -0,0 +1,60 @@\n+// Explicit instantiation file.\n+\n+// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002\n+// Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+//\n+// ISO C++ 14882:\n+//\n+\n+#include <ios>\n+#include <iomanip>\n+#include <iostream>\n+\n+namespace std\n+{\n+  // basic_ios\n+  template class basic_ios<char>;\n+#ifdef _GLIBCPP_USE_WCHAR_T\n+  template class basic_ios<wchar_t>;\n+#endif\n+\n+  // iomanip\n+  template class _Setfill<char>;\n+  template _Setfill<char> setfill(char);\n+#ifdef _GLIBCPP_USE_WCHAR_T\n+  template class _Setfill<wchar_t>;\n+  template _Setfill<wchar_t> setfill(wchar_t);\n+#endif\n+\n+  // iostream\n+  template class basic_iostream<char>;\n+#ifdef _GLIBCPP_USE_WCHAR_T\n+  template class basic_iostream<wchar_t>; \n+#endif\n+} //std"}, {"sha": "61125097db1c3b8fd729e0622b43a2b68b769a97", "filename": "libstdc++-v3/src/istream-inst.cc", "status": "added", "additions": 70, "deletions": 0, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/248a9163e19adb7a2141d0e3149a4f40438602a7/libstdc%2B%2B-v3%2Fsrc%2Fistream-inst.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/248a9163e19adb7a2141d0e3149a4f40438602a7/libstdc%2B%2B-v3%2Fsrc%2Fistream-inst.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fistream-inst.cc?ref=248a9163e19adb7a2141d0e3149a4f40438602a7", "patch": "@@ -0,0 +1,70 @@\n+// Explicit instantiation file.\n+\n+// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002\n+// Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+//\n+// ISO C++ 14882:\n+//\n+\n+#include <istream>\n+#include <iomanip>\n+\n+namespace std\n+{\n+  // istream\n+  template class basic_istream<char>;\n+  template istream& ws(istream&);\n+  template istream& operator>>(istream&, char&);\n+  template istream& operator>>(istream&, unsigned char&);\n+  template istream& operator>>(istream&, signed char&);\n+  template istream& operator>>(istream&, char*);\n+  template istream& operator>>(istream&, unsigned char*);\n+  template istream& operator>>(istream&, signed char*);\n+\n+  template istream& operator>>(istream&, _Setfill<char>);\n+  template istream& operator>>(istream&, _Setiosflags);\n+  template istream& operator>>(istream&, _Resetiosflags);\n+  template istream& operator>>(istream&, _Setbase);\n+  template istream& operator>>(istream&, _Setprecision);\n+  template istream& operator>>(istream&, _Setw);\n+\n+#ifdef _GLIBCPP_USE_WCHAR_T\n+  template class basic_istream<wchar_t>;\n+  template wistream& ws(wistream&);\n+  template wistream& operator>>(wistream&, wchar_t&);\n+  template wistream& operator>>(wistream&, wchar_t*);\n+\n+  template wistream& operator>>(wistream&, _Setfill<wchar_t>);\n+  template wistream& operator>>(wistream&, _Setiosflags);\n+  template wistream& operator>>(wistream&, _Resetiosflags);\n+  template wistream& operator>>(wistream&, _Setbase);\n+  template wistream& operator>>(wistream&, _Setprecision);\n+  template wistream& operator>>(wistream&, _Setw);\n+#endif\n+} //std"}, {"sha": "5576d2cb22a7d34e1844214c2ba0f15d93efecdd", "filename": "libstdc++-v3/src/misc-inst.cc", "status": "modified", "additions": 6, "deletions": 178, "changes": 184, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/248a9163e19adb7a2141d0e3149a4f40438602a7/libstdc%2B%2B-v3%2Fsrc%2Fmisc-inst.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/248a9163e19adb7a2141d0e3149a4f40438602a7/libstdc%2B%2B-v3%2Fsrc%2Fmisc-inst.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fmisc-inst.cc?ref=248a9163e19adb7a2141d0e3149a4f40438602a7", "patch": "@@ -33,173 +33,13 @@\n //\n \n #include <string>\n-#include <algorithm>\n-#include <locale>\n-#include <vector>\n-#include <iterator>\n-#include <streambuf>\n-#include <sstream>\n-#include <fstream>\n-#include <ios>\n #include <istream>\n #include <ostream>\n-#include <iomanip>\n-#include <ext/stdio_filebuf.h>\n-\n-// NB: Unnecessary if the .h headers already include these.\n-#ifndef  _GLIBCPP_FULLY_COMPLIANT_HEADERS\n-#include <bits/sstream.tcc>\n-#include <bits/fstream.tcc>\n-#include <bits/streambuf.tcc>\n-#include <bits/istream.tcc>\n-#include <bits/ostream.tcc>\n-#endif\n+#include <algorithm>\n+#include <vector>\n \n namespace std\n {\n-  // streambuf\n-  template class basic_streambuf<char>;\n-#ifdef _GLIBCPP_USE_WCHAR_T\n-  template class basic_streambuf<wchar_t>;\n-#endif\n-\n-  // stringbuf\n-  template class basic_stringbuf<char>;\n-#ifdef _GLIBCPP_USE_WCHAR_T\n-  template class basic_stringbuf<wchar_t>;\n-#endif\n-\n-  // filebuf\n-  template class basic_filebuf<char, char_traits<char> >;\n-#ifdef _GLIBCPP_USE_WCHAR_T\n-  template class basic_filebuf<wchar_t, char_traits<wchar_t> >;\n-#endif\n-\n-  // basic_ios\n-  template class basic_ios<char>;\n-#ifdef _GLIBCPP_USE_WCHAR_T\n-  template class basic_ios<wchar_t>;\n-#endif\n-\n-  // iomanip\n-  template class _Setfill<char>;\n-  template _Setfill<char> setfill(char);\n-#ifdef _GLIBCPP_USE_WCHAR_T\n-  template class _Setfill<wchar_t>;\n-  template _Setfill<wchar_t> setfill(wchar_t);\n-#endif\n-\n-  // istream\n-  template class basic_istream<char>;\n-  template istream& ws(istream&);\n-  template istream& operator>>(istream&, char&);\n-  template istream& operator>>(istream&, unsigned char&);\n-  template istream& operator>>(istream&, signed char&);\n-  template istream& operator>>(istream&, char*);\n-  template istream& operator>>(istream&, unsigned char*);\n-  template istream& operator>>(istream&, signed char*);\n-\n-  template istream& operator>>(istream&, _Setfill<char>);\n-  template istream& operator>>(istream&, _Setiosflags);\n-  template istream& operator>>(istream&, _Resetiosflags);\n-  template istream& operator>>(istream&, _Setbase);\n-  template istream& operator>>(istream&, _Setprecision);\n-  template istream& operator>>(istream&, _Setw);\n-\n-#ifdef _GLIBCPP_USE_WCHAR_T\n-  template class basic_istream<wchar_t>;\n-  template wistream& ws(wistream&);\n-  template wistream& operator>>(wistream&, wchar_t&);\n-  template wistream& operator>>(wistream&, wchar_t*);\n-\n-  template wistream& operator>>(wistream&, _Setfill<wchar_t>);\n-  template wistream& operator>>(wistream&, _Setiosflags);\n-  template wistream& operator>>(wistream&, _Resetiosflags);\n-  template wistream& operator>>(wistream&, _Setbase);\n-  template wistream& operator>>(wistream&, _Setprecision);\n-  template wistream& operator>>(wistream&, _Setw);\n-#endif\n-\n-  // ostream\n-  template class basic_ostream<char>;\n-  template ostream& endl(ostream&);\n-  template ostream& ends(ostream&);\n-  template ostream& flush(ostream&);\n-  template ostream& operator<<(ostream&, char);\n-  template ostream& operator<<(ostream&, unsigned char);\n-  template ostream& operator<<(ostream&, signed char);\n-  template ostream& operator<<(ostream&, const char*);\n-  template ostream& operator<<(ostream&, const unsigned char*);\n-  template ostream& operator<<(ostream&, const signed char*);\n-\n-  template ostream& operator<<(ostream&, _Setfill<char>);\n-  template ostream& operator<<(ostream&, _Setiosflags);\n-  template ostream& operator<<(ostream&, _Resetiosflags);\n-  template ostream& operator<<(ostream&, _Setbase);\n-  template ostream& operator<<(ostream&, _Setprecision);\n-  template ostream& operator<<(ostream&, _Setw);\n-\n-#ifdef _GLIBCPP_USE_WCHAR_T\n-  template class basic_ostream<wchar_t>;\n-  template wostream& endl(wostream&);\n-  template wostream& ends(wostream&);\n-  template wostream& flush(wostream&);\n-  template wostream& operator<<(wostream&, wchar_t);\n-  template wostream& operator<<(wostream&, char);\n-  template wostream& operator<<(wostream&, const wchar_t*);\n-  template wostream& operator<<(wostream&, const char*);\n-\n-  template wostream& operator<<(wostream&, _Setfill<wchar_t>);\n-  template wostream& operator<<(wostream&, _Setiosflags);\n-  template wostream& operator<<(wostream&, _Resetiosflags);\n-  template wostream& operator<<(wostream&, _Setbase);\n-  template wostream& operator<<(wostream&, _Setprecision);\n-  template wostream& operator<<(wostream&, _Setw);\n-#endif\n-  \n-\n-  // iostream\n-  template class basic_iostream<char>;\n-#ifdef _GLIBCPP_USE_WCHAR_T\n-  template class basic_iostream<wchar_t>; \n-#endif\n-\n-  // ifstream\n-  template class basic_ifstream<char>;\n-#ifdef _GLIBCPP_USE_WCHAR_T\n-  template class basic_ifstream<wchar_t>;\n-#endif\n-\n-  // ofstream\n-  template class basic_ofstream<char>;\n-#ifdef _GLIBCPP_USE_WCHAR_T\n-  template class basic_ofstream<wchar_t>;\n-#endif\n-\n-  // fstream\n-  template class basic_fstream<char>;\n-#ifdef _GLIBCPP_USE_WCHAR_T\n-  template class basic_fstream<wchar_t>;\n-#endif\n-\n-  // istringstream\n-  template class basic_istringstream<char>;\n-#ifdef _GLIBCPP_USE_WCHAR_T\n-  template class basic_istringstream<wchar_t>; \n-#endif\n-\n-  // ostringstream\n-  template class basic_ostringstream<char>;\n-#ifdef _GLIBCPP_USE_WCHAR_T\n-  template class basic_ostringstream<wchar_t>; \n-#endif\n-\n-  // stringstream\n-  template class basic_stringstream<char>;\n-#ifdef _GLIBCPP_USE_WCHAR_T\n-  template class basic_stringstream<wchar_t>; \n-#endif\n-\n   // string related to iostreams\n   template \n     basic_istream<char>& \n@@ -228,6 +68,10 @@ namespace std\n     getline(basic_istream<wchar_t>&, wstring&);\n #endif\n \n+#if 1\n+  // XXX\n+  // 2002-05-24 These are no longer needed and should be deleted.\n+\n   // algorithm\n   typedef  _Char_traits_match<char, char_traits<char> > char_match;\n \n@@ -254,21 +98,5 @@ namespace std\n     __uninitialized_copy_aux<vector<string>::const_iterator, string *>\n     (vector<string>::const_iterator, vector<string>::const_iterator, \n      string*, __false_type);\n-\n-  template\n-    streamsize\n-    __copy_streambufs(basic_ios<char>&, basic_streambuf<char>*,\n-\t\t      basic_streambuf<char>*); \n-#ifdef _GLIBCPP_USE_WCHAR_T\n-  template\n-    streamsize\n-    __copy_streambufs(basic_ios<wchar_t>&, basic_streambuf<wchar_t>*,\n-\t\t      basic_streambuf<wchar_t>*); \n-#endif\n-  \n-  using __gnu_cxx::stdio_filebuf;\n-  template class stdio_filebuf<char>;\n-#ifdef _GLIBCPP_USE_WCHAR_T\n-  template class stdio_filebuf<wchar_t>;\n #endif\n } //std"}, {"sha": "e43b0c7b7467b6c24fe6258d126eebfa2e888f90", "filename": "libstdc++-v3/src/ostream-inst.cc", "status": "added", "additions": 76, "deletions": 0, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/248a9163e19adb7a2141d0e3149a4f40438602a7/libstdc%2B%2B-v3%2Fsrc%2Fostream-inst.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/248a9163e19adb7a2141d0e3149a4f40438602a7/libstdc%2B%2B-v3%2Fsrc%2Fostream-inst.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fostream-inst.cc?ref=248a9163e19adb7a2141d0e3149a4f40438602a7", "patch": "@@ -0,0 +1,76 @@\n+// Explicit instantiation file.\n+\n+// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002\n+// Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+//\n+// ISO C++ 14882:\n+//\n+\n+#include <ostream>\n+#include <iomanip>\n+\n+namespace std\n+{\n+  // ostream\n+  template class basic_ostream<char>;\n+  template ostream& endl(ostream&);\n+  template ostream& ends(ostream&);\n+  template ostream& flush(ostream&);\n+  template ostream& operator<<(ostream&, char);\n+  template ostream& operator<<(ostream&, unsigned char);\n+  template ostream& operator<<(ostream&, signed char);\n+  template ostream& operator<<(ostream&, const char*);\n+  template ostream& operator<<(ostream&, const unsigned char*);\n+  template ostream& operator<<(ostream&, const signed char*);\n+\n+  template ostream& operator<<(ostream&, _Setfill<char>);\n+  template ostream& operator<<(ostream&, _Setiosflags);\n+  template ostream& operator<<(ostream&, _Resetiosflags);\n+  template ostream& operator<<(ostream&, _Setbase);\n+  template ostream& operator<<(ostream&, _Setprecision);\n+  template ostream& operator<<(ostream&, _Setw);\n+\n+#ifdef _GLIBCPP_USE_WCHAR_T\n+  template class basic_ostream<wchar_t>;\n+  template wostream& endl(wostream&);\n+  template wostream& ends(wostream&);\n+  template wostream& flush(wostream&);\n+  template wostream& operator<<(wostream&, wchar_t);\n+  template wostream& operator<<(wostream&, char);\n+  template wostream& operator<<(wostream&, const wchar_t*);\n+  template wostream& operator<<(wostream&, const char*);\n+\n+  template wostream& operator<<(wostream&, _Setfill<wchar_t>);\n+  template wostream& operator<<(wostream&, _Setiosflags);\n+  template wostream& operator<<(wostream&, _Resetiosflags);\n+  template wostream& operator<<(wostream&, _Setbase);\n+  template wostream& operator<<(wostream&, _Setprecision);\n+  template wostream& operator<<(wostream&, _Setw);\n+#endif\n+} //std"}, {"sha": "e341f5fd94bf510c68d03b247a733bcfe7d91e6b", "filename": "libstdc++-v3/src/sstream-inst.cc", "status": "added", "additions": 62, "deletions": 0, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/248a9163e19adb7a2141d0e3149a4f40438602a7/libstdc%2B%2B-v3%2Fsrc%2Fsstream-inst.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/248a9163e19adb7a2141d0e3149a4f40438602a7/libstdc%2B%2B-v3%2Fsrc%2Fsstream-inst.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fsstream-inst.cc?ref=248a9163e19adb7a2141d0e3149a4f40438602a7", "patch": "@@ -0,0 +1,62 @@\n+// Explicit instantiation file.\n+\n+// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002\n+// Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+//\n+// ISO C++ 14882:\n+//\n+\n+#include <sstream>\n+\n+namespace std\n+{\n+  // stringbuf\n+  template class basic_stringbuf<char>;\n+#ifdef _GLIBCPP_USE_WCHAR_T\n+  template class basic_stringbuf<wchar_t>;\n+#endif\n+\n+  // istringstream\n+  template class basic_istringstream<char>;\n+#ifdef _GLIBCPP_USE_WCHAR_T\n+  template class basic_istringstream<wchar_t>; \n+#endif\n+\n+  // ostringstream\n+  template class basic_ostringstream<char>;\n+#ifdef _GLIBCPP_USE_WCHAR_T\n+  template class basic_ostringstream<wchar_t>; \n+#endif\n+\n+  // stringstream\n+  template class basic_stringstream<char>;\n+#ifdef _GLIBCPP_USE_WCHAR_T\n+  template class basic_stringstream<wchar_t>; \n+#endif\n+} //std"}, {"sha": "438752e7e5b9a4acd3f992cdeb7ae8d52d0d2f21", "filename": "libstdc++-v3/src/streambuf-inst.cc", "status": "added", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/248a9163e19adb7a2141d0e3149a4f40438602a7/libstdc%2B%2B-v3%2Fsrc%2Fstreambuf-inst.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/248a9163e19adb7a2141d0e3149a4f40438602a7/libstdc%2B%2B-v3%2Fsrc%2Fstreambuf-inst.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fstreambuf-inst.cc?ref=248a9163e19adb7a2141d0e3149a4f40438602a7", "patch": "@@ -0,0 +1,56 @@\n+// Explicit instantiation file.\n+\n+// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002\n+// Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+//\n+// ISO C++ 14882:\n+//\n+\n+#include <ios>\n+#include <streambuf>\n+\n+namespace std\n+{\n+  // streambuf\n+  template class basic_streambuf<char>;\n+#ifdef _GLIBCPP_USE_WCHAR_T\n+  template class basic_streambuf<wchar_t>;\n+#endif\n+\n+  template\n+    streamsize\n+    __copy_streambufs(basic_ios<char>&, basic_streambuf<char>*,\n+\t\t      basic_streambuf<char>*); \n+#ifdef _GLIBCPP_USE_WCHAR_T\n+  template\n+    streamsize\n+    __copy_streambufs(basic_ios<wchar_t>&, basic_streambuf<wchar_t>*,\n+\t\t      basic_streambuf<wchar_t>*); \n+#endif\n+} //std"}, {"sha": "4e20e949753c07346d33880e058d4a4d60484f2c", "filename": "libstdc++-v3/testsuite/Makefile.in", "status": "modified", "additions": 0, "deletions": 19, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/248a9163e19adb7a2141d0e3149a4f40438602a7/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/248a9163e19adb7a2141d0e3149a4f40438602a7/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.in?ref=248a9163e19adb7a2141d0e3149a4f40438602a7", "patch": "@@ -68,9 +68,6 @@ AS = @AS@\n ATOMICITY_INC_SRCDIR = @ATOMICITY_INC_SRCDIR@\n AWK = @AWK@\n BASIC_FILE_H = @BASIC_FILE_H@\n-BUILD_INCLUDED_LIBINTL = @BUILD_INCLUDED_LIBINTL@\n-CATALOGS = @CATALOGS@\n-CATOBJEXT = @CATOBJEXT@\n CC = @CC@\n CCODECVT_C = @CCODECVT_C@\n CCODECVT_H = @CCODECVT_H@\n@@ -83,25 +80,14 @@ CSTDIO_H = @CSTDIO_H@\n CXX = @CXX@\n CXXCPP = @CXXCPP@\n C_INCLUDE_DIR = @C_INCLUDE_DIR@\n-DATADIRNAME = @DATADIRNAME@\n DEBUG_FLAGS = @DEBUG_FLAGS@\n DLLTOOL = @DLLTOOL@\n EXEEXT = @EXEEXT@\n EXTRA_CXX_FLAGS = @EXTRA_CXX_FLAGS@\n GCJ = @GCJ@\n GCJFLAGS = @GCJFLAGS@\n-GENCAT = @GENCAT@\n-GLIBC21 = @GLIBC21@\n GLIBCPP_INCLUDES = @GLIBCPP_INCLUDES@\n GLIBCPP_IS_CROSS_COMPILING = @GLIBCPP_IS_CROSS_COMPILING@\n-GMOFILES = @GMOFILES@\n-GMSGFMT = @GMSGFMT@\n-INSTOBJEXT = @INSTOBJEXT@\n-INTLBISON = @INTLBISON@\n-INTLLIBS = @INTLLIBS@\n-INTLOBJS = @INTLOBJS@\n-INTL_LIBTOOL_SUFFIX_PREFIX = @INTL_LIBTOOL_SUFFIX_PREFIX@\n-LIBICONV = @LIBICONV@\n LIBIO_INCLUDES = @LIBIO_INCLUDES@\n LIBMATHOBJS = @LIBMATHOBJS@\n LIBMATH_INCLUDES = @LIBMATH_INCLUDES@\n@@ -112,22 +98,17 @@ LIBUNWIND_FLAG = @LIBUNWIND_FLAG@\n LN_S = @LN_S@\n MAINT = @MAINT@\n MAKEINFO = @MAKEINFO@\n-MKINSTALLDIRS = @MKINSTALLDIRS@\n-MSGFMT = @MSGFMT@\n OBJDUMP = @OBJDUMP@\n OBJEXT = @OBJEXT@\n OPTIMIZE_CXXFLAGS = @OPTIMIZE_CXXFLAGS@\n OPT_LDFLAGS = @OPT_LDFLAGS@\n OS_INC_SRCDIR = @OS_INC_SRCDIR@\n PACKAGE = @PACKAGE@\n-POFILES = @POFILES@\n-POSUB = @POSUB@\n RANLIB = @RANLIB@\n SECTION_FLAGS = @SECTION_FLAGS@\n SECTION_LDFLAGS = @SECTION_LDFLAGS@\n STRIP = @STRIP@\n TOPLEVEL_INCLUDES = @TOPLEVEL_INCLUDES@\n-USE_INCLUDED_LIBINTL = @USE_INCLUDED_LIBINTL@\n USE_NLS = @USE_NLS@\n VERSION = @VERSION@\n WARN_FLAGS = @WARN_FLAGS@"}]}