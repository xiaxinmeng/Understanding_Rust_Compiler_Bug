{"sha": "4a70aa7a627c0b918ce1da75c0dbe088539e420f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGE3MGFhN2E2MjdjMGI5MThjZTFkYTc1YzBkYmUwODg1MzllNDIwZg==", "commit": {"author": {"name": "Kito Cheng", "email": "kito.cheng@sifive.com", "date": "2020-10-16T08:36:45Z"}, "committer": {"name": "Kito Cheng", "email": "kito.cheng@sifive.com", "date": "2020-10-16T08:52:13Z"}, "message": "RISC-V: Handle implied extension in multilib-generator\n\n - -march has handle implied extension for a while, so I think\n   multilib-generator should handle this well too.\n\n - Currently only add rule for D imply F.\n\ngcc/ChangeLog:\n\n\t* config/riscv/multilib-generator (IMPLIED_EXT): New.\n\t(arch_canonicalize): Update comment and handle implied extensions.", "tree": {"sha": "b320c567e173b3248b943f70d7fb08af7fc15079", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b320c567e173b3248b943f70d7fb08af7fc15079"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4a70aa7a627c0b918ce1da75c0dbe088539e420f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a70aa7a627c0b918ce1da75c0dbe088539e420f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a70aa7a627c0b918ce1da75c0dbe088539e420f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a70aa7a627c0b918ce1da75c0dbe088539e420f/comments", "author": {"login": "kito-cheng", "id": 2723185, "node_id": "MDQ6VXNlcjI3MjMxODU=", "avatar_url": "https://avatars.githubusercontent.com/u/2723185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kito-cheng", "html_url": "https://github.com/kito-cheng", "followers_url": "https://api.github.com/users/kito-cheng/followers", "following_url": "https://api.github.com/users/kito-cheng/following{/other_user}", "gists_url": "https://api.github.com/users/kito-cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/kito-cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kito-cheng/subscriptions", "organizations_url": "https://api.github.com/users/kito-cheng/orgs", "repos_url": "https://api.github.com/users/kito-cheng/repos", "events_url": "https://api.github.com/users/kito-cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/kito-cheng/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kito-cheng", "id": 2723185, "node_id": "MDQ6VXNlcjI3MjMxODU=", "avatar_url": "https://avatars.githubusercontent.com/u/2723185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kito-cheng", "html_url": "https://github.com/kito-cheng", "followers_url": "https://api.github.com/users/kito-cheng/followers", "following_url": "https://api.github.com/users/kito-cheng/following{/other_user}", "gists_url": "https://api.github.com/users/kito-cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/kito-cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kito-cheng/subscriptions", "organizations_url": "https://api.github.com/users/kito-cheng/orgs", "repos_url": "https://api.github.com/users/kito-cheng/repos", "events_url": "https://api.github.com/users/kito-cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/kito-cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "540d5f4f0215e1cdd2d4a2c89c65e46033298be0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/540d5f4f0215e1cdd2d4a2c89c65e46033298be0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/540d5f4f0215e1cdd2d4a2c89c65e46033298be0"}], "stats": {"total": 24, "additions": 20, "deletions": 4}, "files": [{"sha": "f444d0ebc746d20962e81b6fd9c175a4e42f26cf", "filename": "gcc/config/riscv/multilib-generator", "status": "modified", "additions": 20, "deletions": 4, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a70aa7a627c0b918ce1da75c0dbe088539e420f/gcc%2Fconfig%2Friscv%2Fmultilib-generator", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a70aa7a627c0b918ce1da75c0dbe088539e420f/gcc%2Fconfig%2Friscv%2Fmultilib-generator", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Fmultilib-generator?ref=4a70aa7a627c0b918ce1da75c0dbe088539e420f", "patch": "@@ -38,8 +38,14 @@ reuse = []\n \n canonical_order = \"mafdgqlcbjtpvn\"\n \n+#\n+# IMPLIED_EXT(ext) -> implied extension list.\n+#\n+IMPLIED_EXT = {\n+  \"d\" : [\"f\"],\n+}\n+\n def arch_canonicalize(arch):\n-  # TODO: Support implied extensions, e.g. D implied F in latest spec.\n   # TODO: Support extension version.\n   new_arch = \"\"\n   if arch[:5] in ['rv32e', 'rv32i', 'rv32g', 'rv64i', 'rv64g']:\n@@ -57,14 +63,24 @@ def arch_canonicalize(arch):\n   if long_ext_prefixes_idx:\n     first_long_ext_idx = min(long_ext_prefixes_idx)\n     long_exts = arch[first_long_ext_idx:].split(\"_\")\n-    std_exts = arch[5:first_long_ext_idx]\n+    std_exts = list(arch[5:first_long_ext_idx])\n   else:\n     long_exts = []\n-    std_exts = arch[5:]\n+    std_exts = list(arch[5:])\n+\n+  #\n+  # Handle implied extensions.\n+  #\n+  for ext in std_exts + long_exts:\n+    if ext in IMPLIED_EXT:\n+      implied_exts = IMPLIED_EXT[ext]\n+      for implied_ext in implied_exts:\n+        if implied_ext not in std_exts + long_exts:\n+          long_exts.append(implied_ext)\n \n   # Single letter extension might appear in the long_exts list,\n   # becasue we just append extensions list to the arch string.\n-  std_exts += \"\".join(filter(lambda x:len(x) == 1, long_exts))\n+  std_exts += list(filter(lambda x:len(x) == 1, long_exts))\n \n   # Multi-letter extension must be in lexicographic order.\n   long_exts = sorted(filter(lambda x:len(x) != 1, long_exts))"}]}