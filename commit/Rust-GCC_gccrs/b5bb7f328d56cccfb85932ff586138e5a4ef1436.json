{"sha": "b5bb7f328d56cccfb85932ff586138e5a4ef1436", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjViYjdmMzI4ZDU2Y2NjZmI4NTkzMmZmNTg2MTM4ZTVhNGVmMTQzNg==", "commit": {"author": {"name": "Hafiz Abid Qadeer", "email": "abidh@codesourcery.com", "date": "2021-05-28T17:06:57Z"}, "committer": {"name": "Hafiz Abid Qadeer", "email": "abidh@codesourcery.com", "date": "2021-06-30T16:51:17Z"}, "message": "[amdgcn] Add hook for DWARF address spaces.\n\nMap GCN address spaces to the proposed DWARF address spaces defined by AMD at\nhttps://llvm.org/docs/AMDGPUUsage.html#amdgpu-dwarf-address-class-mapping-table\n\ngcc/\n\n\t* config/gcn/gcn.c: Include dwarf2.h.\n\t(gcn_addr_space_debug): New function.\n\t(TARGET_ADDR_SPACE_DEBUG): New hook.", "tree": {"sha": "ca188cb532bf8dbd4f8781553a68d0d37ccdbfd0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ca188cb532bf8dbd4f8781553a68d0d37ccdbfd0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b5bb7f328d56cccfb85932ff586138e5a4ef1436", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5bb7f328d56cccfb85932ff586138e5a4ef1436", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b5bb7f328d56cccfb85932ff586138e5a4ef1436", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5bb7f328d56cccfb85932ff586138e5a4ef1436/comments", "author": {"login": "abidh", "id": 4067533, "node_id": "MDQ6VXNlcjQwNjc1MzM=", "avatar_url": "https://avatars.githubusercontent.com/u/4067533?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abidh", "html_url": "https://github.com/abidh", "followers_url": "https://api.github.com/users/abidh/followers", "following_url": "https://api.github.com/users/abidh/following{/other_user}", "gists_url": "https://api.github.com/users/abidh/gists{/gist_id}", "starred_url": "https://api.github.com/users/abidh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abidh/subscriptions", "organizations_url": "https://api.github.com/users/abidh/orgs", "repos_url": "https://api.github.com/users/abidh/repos", "events_url": "https://api.github.com/users/abidh/events{/privacy}", "received_events_url": "https://api.github.com/users/abidh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "abidh", "id": 4067533, "node_id": "MDQ6VXNlcjQwNjc1MzM=", "avatar_url": "https://avatars.githubusercontent.com/u/4067533?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abidh", "html_url": "https://github.com/abidh", "followers_url": "https://api.github.com/users/abidh/followers", "following_url": "https://api.github.com/users/abidh/following{/other_user}", "gists_url": "https://api.github.com/users/abidh/gists{/gist_id}", "starred_url": "https://api.github.com/users/abidh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abidh/subscriptions", "organizations_url": "https://api.github.com/users/abidh/orgs", "repos_url": "https://api.github.com/users/abidh/repos", "events_url": "https://api.github.com/users/abidh/events{/privacy}", "received_events_url": "https://api.github.com/users/abidh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "22f201e4b32a4f8bc1e6462ee19643edae5d25a3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22f201e4b32a4f8bc1e6462ee19643edae5d25a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/22f201e4b32a4f8bc1e6462ee19643edae5d25a3"}], "stats": {"total": 29, "additions": 29, "deletions": 0}, "files": [{"sha": "6d02a4a02ddccbcca2016b7a3c851b46e68278f1", "filename": "gcc/config/gcn/gcn.c", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5bb7f328d56cccfb85932ff586138e5a4ef1436/gcc%2Fconfig%2Fgcn%2Fgcn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5bb7f328d56cccfb85932ff586138e5a4ef1436/gcc%2Fconfig%2Fgcn%2Fgcn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fgcn%2Fgcn.c?ref=b5bb7f328d56cccfb85932ff586138e5a4ef1436", "patch": "@@ -50,6 +50,7 @@\n #include \"varasm.h\"\n #include \"intl.h\"\n #include \"rtl-iter.h\"\n+#include \"dwarf2.h\"\n \n /* This file should be included last.  */\n #include \"target-def.h\"\n@@ -1497,6 +1498,32 @@ gcn_addr_space_convert (rtx op, tree from_type, tree to_type)\n     gcc_unreachable ();\n }\n \n+/* Implement TARGET_ADDR_SPACE_DEBUG.\n+\n+   Return the dwarf address space class for each hardware address space.  */\n+\n+static int\n+gcn_addr_space_debug (addr_space_t as)\n+{\n+  switch (as)\n+    {\n+      case ADDR_SPACE_DEFAULT:\n+      case ADDR_SPACE_FLAT:\n+      case ADDR_SPACE_SCALAR_FLAT:\n+      case ADDR_SPACE_FLAT_SCRATCH:\n+\treturn DW_ADDR_none;\n+      case ADDR_SPACE_GLOBAL:\n+\treturn 1;      // DW_ADDR_LLVM_global\n+      case ADDR_SPACE_LDS:\n+\treturn 3;      // DW_ADDR_LLVM_group\n+      case ADDR_SPACE_SCRATCH:\n+\treturn 4;      // DW_ADDR_LLVM_private\n+      case ADDR_SPACE_GDS:\n+\treturn 0x8000; // DW_ADDR_AMDGPU_region\n+    }\n+  gcc_unreachable ();\n+}\n+\n \n /* Implement REGNO_MODE_CODE_OK_FOR_BASE_P via gcn.h\n    \n@@ -6391,6 +6418,8 @@ gcn_dwarf_register_span (rtx rtl)\n \n #undef  TARGET_ADDR_SPACE_ADDRESS_MODE\n #define TARGET_ADDR_SPACE_ADDRESS_MODE gcn_addr_space_address_mode\n+#undef  TARGET_ADDR_SPACE_DEBUG\n+#define TARGET_ADDR_SPACE_DEBUG gcn_addr_space_debug\n #undef  TARGET_ADDR_SPACE_LEGITIMATE_ADDRESS_P\n #define TARGET_ADDR_SPACE_LEGITIMATE_ADDRESS_P \\\n   gcn_addr_space_legitimate_address_p"}]}