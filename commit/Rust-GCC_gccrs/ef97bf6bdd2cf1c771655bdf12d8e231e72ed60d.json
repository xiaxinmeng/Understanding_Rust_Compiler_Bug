{"sha": "ef97bf6bdd2cf1c771655bdf12d8e231e72ed60d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWY5N2JmNmJkZDJjZjFjNzcxNjU1YmRmMTJkOGUyMzFlNzJlZDYwZA==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2000-01-15T04:36:04Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2000-01-15T04:36:04Z"}, "message": "optimize.c (copy_body_r): Clear the operand three of a TARGET_EXPR when copying it.\n\n\t* optimize.c (copy_body_r): Clear the operand three of a\n\tTARGET_EXPR when copying it.\n\nFrom-SVN: r31435", "tree": {"sha": "069df75f42aabb66d6b6154be932e6e175dff18d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/069df75f42aabb66d6b6154be932e6e175dff18d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ef97bf6bdd2cf1c771655bdf12d8e231e72ed60d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef97bf6bdd2cf1c771655bdf12d8e231e72ed60d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef97bf6bdd2cf1c771655bdf12d8e231e72ed60d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef97bf6bdd2cf1c771655bdf12d8e231e72ed60d/comments", "author": null, "committer": null, "parents": [{"sha": "a2be868fbade644577895e847ad2fc658cb6d7d5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2be868fbade644577895e847ad2fc658cb6d7d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a2be868fbade644577895e847ad2fc658cb6d7d5"}], "stats": {"total": 45, "additions": 43, "deletions": 2}, "files": [{"sha": "372f618a46a776360bc13852dbf174d045db259d", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef97bf6bdd2cf1c771655bdf12d8e231e72ed60d/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef97bf6bdd2cf1c771655bdf12d8e231e72ed60d/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=ef97bf6bdd2cf1c771655bdf12d8e231e72ed60d", "patch": "@@ -1,3 +1,8 @@\n+2000-01-14  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* optimize.c (copy_body_r): Clear the operand three of a\n+\tTARGET_EXPR when copying it.\n+\n 2000-01-14  Martin v. L\ufffdwis  <loewis@informatik.hu-berlin.de>\n \n \t* method.c (build_decl_overload_real): Check whether we are in ::"}, {"sha": "f529e9d70a6821e83831d0a26cf95efc798fe84e", "filename": "gcc/cp/optimize.c", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef97bf6bdd2cf1c771655bdf12d8e231e72ed60d/gcc%2Fcp%2Foptimize.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef97bf6bdd2cf1c771655bdf12d8e231e72ed60d/gcc%2Fcp%2Foptimize.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Foptimize.c?ref=ef97bf6bdd2cf1c771655bdf12d8e231e72ed60d", "patch": "@@ -1,6 +1,6 @@\n /* Perform optimizations on tree structure.\n \n-   Copyright (C) 1998, 1999 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2000 Free Software Foundation, Inc.\n    Written by Mark Michell (mark@codesourcery.com).\n \n    This file is part of GNU CC.\n@@ -285,6 +285,9 @@ copy_body_r (tp, walk_subtrees, data)\n       /* Replace this variable with the copy.  */\n       *tp = new_decl;\n     }\n+  else if (nonstatic_local_decl_p (*tp) \n+\t   && DECL_CONTEXT (*tp) != VARRAY_TREE (id->fns, 0))\n+    my_friendly_abort (0);\n   else if (TREE_CODE (*tp) == SAVE_EXPR)\n     remap_save_expr (tp, id->decl_map, VARRAY_TREE (id->fns, 0), \n \t\t     walk_subtrees);\n@@ -303,7 +306,10 @@ copy_body_r (tp, walk_subtrees, data)\n       /* The copied TARGET_EXPR has never been expanded, even if the\n \t original node was expanded already.  */\n       if (TREE_CODE (*tp) == TARGET_EXPR && TREE_OPERAND (*tp, 3))\n-\tTREE_OPERAND (*tp, 1) = TREE_OPERAND (*tp, 3);\n+\t{\n+\t  TREE_OPERAND (*tp, 1) = TREE_OPERAND (*tp, 3);\n+\t  TREE_OPERAND (*tp, 3) = NULL_TREE;\n+\t}\n       /* Similarly, if we're copying a CALL_EXPR, the RTL for the\n \t result is no longer valid.  */\n       else if (TREE_CODE (*tp) == CALL_EXPR)"}, {"sha": "305fd0ac6083cc077fb505050bd3f545839d8acf", "filename": "gcc/testsuite/g++.old-deja/g++.other/inline5.C", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef97bf6bdd2cf1c771655bdf12d8e231e72ed60d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Finline5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef97bf6bdd2cf1c771655bdf12d8e231e72ed60d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Finline5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Finline5.C?ref=ef97bf6bdd2cf1c771655bdf12d8e231e72ed60d", "patch": "@@ -0,0 +1,30 @@\n+// Build don't link:\n+// Origin: Matt Austern <austern@isolde.engr.sgi.com>\n+// Special g++ Options: -O2\n+\n+class X;\n+\n+extern X* tab1;\n+\n+struct Y {\n+  explicit Y(int);\n+};\n+\n+void* x ();\n+\n+Y k (void *);\n+\n+inline void f() { k (x ()); }\n+\n+inline void* x () \n+{\n+  return 0;\n+}\n+\n+static void g() {\n+  f();\n+}\n+\n+static void h() {\n+  f();\n+}"}]}