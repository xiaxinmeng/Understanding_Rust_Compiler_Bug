{"sha": "2186081438d522d8266dae13e9640447b7ad6189", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjE4NjA4MTQzOGQ1MjJkODI2NmRhZTEzZTk2NDA0NDdiN2FkNjE4OQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2011-09-26T16:19:55Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2011-09-26T16:19:55Z"}, "message": "gimple-fold.c (gimplify_and_update_call_from_tree): Set gctx.into_ssa after push_gimplify_context.\n\n\t* gimple-fold.c (gimplify_and_update_call_from_tree): Set\n\tgctx.into_ssa after push_gimplify_context.\n\n\t* gimple.c (gimple_build_call_valist): New function.\n\t* gimple.h (gimple_build_call_valist): New prototype.\n\t* tree-ssa-propagate.c (finish_update_gimple_call): New function.\n\t(update_gimple_call): Likewise.\n\t(update_call_from_tree): Use finish_update_gimple_call.\n\t* tree-ssa-propagate.h (update_gimple_call): New prototype.\n\nFrom-SVN: r179204", "tree": {"sha": "1703d97374f453dce244795360190c541f24f0af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1703d97374f453dce244795360190c541f24f0af"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2186081438d522d8266dae13e9640447b7ad6189", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2186081438d522d8266dae13e9640447b7ad6189", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2186081438d522d8266dae13e9640447b7ad6189", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2186081438d522d8266dae13e9640447b7ad6189/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "12b03642cb027437f4a0eddac8c7fd7849bfe149", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12b03642cb027437f4a0eddac8c7fd7849bfe149", "html_url": "https://github.com/Rust-GCC/gccrs/commit/12b03642cb027437f4a0eddac8c7fd7849bfe149"}], "stats": {"total": 95, "additions": 78, "deletions": 17}, "files": [{"sha": "49e56eddd650999c83ce7d40ab605be10398199e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2186081438d522d8266dae13e9640447b7ad6189/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2186081438d522d8266dae13e9640447b7ad6189/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2186081438d522d8266dae13e9640447b7ad6189", "patch": "@@ -1,3 +1,15 @@\n+2011-09-26  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* gimple-fold.c (gimplify_and_update_call_from_tree): Set\n+\tgctx.into_ssa after push_gimplify_context.\n+\n+\t* gimple.c (gimple_build_call_valist): New function.\n+\t* gimple.h (gimple_build_call_valist): New prototype.\n+\t* tree-ssa-propagate.c (finish_update_gimple_call): New function.\n+\t(update_gimple_call): Likewise.\n+\t(update_call_from_tree): Use finish_update_gimple_call.\n+\t* tree-ssa-propagate.h (update_gimple_call): New prototype.\n+\n 2011-09-26  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/50472"}, {"sha": "e345058cdbd2d657c7f5e00211e89a3f655dbf3d", "filename": "gcc/gimple-fold.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2186081438d522d8266dae13e9640447b7ad6189/gcc%2Fgimple-fold.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2186081438d522d8266dae13e9640447b7ad6189/gcc%2Fgimple-fold.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-fold.c?ref=2186081438d522d8266dae13e9640447b7ad6189", "patch": "@@ -551,6 +551,7 @@ gimplify_and_update_call_from_tree (gimple_stmt_iterator *si_p, tree expr)\n   reaching_vuse = gimple_vuse (stmt);\n \n   push_gimplify_context (&gctx);\n+  gctx.into_ssa = gimple_in_ssa_p (cfun);\n \n   if (lhs == NULL_TREE)\n     {"}, {"sha": "9b8e1b1d7be704a274c9151f8f5c5784a0814da1", "filename": "gcc/gimple.c", "status": "modified", "additions": 24, "deletions": 3, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2186081438d522d8266dae13e9640447b7ad6189/gcc%2Fgimple.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2186081438d522d8266dae13e9640447b7ad6189/gcc%2Fgimple.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple.c?ref=2186081438d522d8266dae13e9640447b7ad6189", "patch": "@@ -215,9 +215,10 @@ gimple_call_reset_alias_info (gimple s)\n     pt_solution_reset (gimple_call_clobber_set (s));\n }\n \n-/* Helper for gimple_build_call, gimple_build_call_vec and\n-   gimple_build_call_from_tree.  Build the basic components of a\n-   GIMPLE_CALL statement to function FN with NARGS arguments.  */\n+/* Helper for gimple_build_call, gimple_build_call_valist,\n+   gimple_build_call_vec and gimple_build_call_from_tree.  Build the basic\n+   components of a GIMPLE_CALL statement to function FN with NARGS\n+   arguments.  */\n \n static inline gimple\n gimple_build_call_1 (tree fn, unsigned nargs)\n@@ -272,6 +273,26 @@ gimple_build_call (tree fn, unsigned nargs, ...)\n }\n \n \n+/* Build a GIMPLE_CALL statement to function FN.  NARGS is the number of\n+   arguments.  AP contains the arguments.  */\n+\n+gimple\n+gimple_build_call_valist (tree fn, unsigned nargs, va_list ap)\n+{\n+  gimple call;\n+  unsigned i;\n+\n+  gcc_assert (TREE_CODE (fn) == FUNCTION_DECL || is_gimple_call_addr (fn));\n+\n+  call = gimple_build_call_1 (fn, nargs);\n+\n+  for (i = 0; i < nargs; i++)\n+    gimple_call_set_arg (call, i, va_arg (ap, tree));\n+\n+  return call;\n+}\n+\n+\n /* Helper for gimple_build_call_internal and gimple_build_call_internal_vec.\n    Build the basic components of a GIMPLE_CALL statement to internal\n    function FN with NARGS arguments.  */"}, {"sha": "75e19a72b87dbc6c26ce7f07b152035ae3c30cc5", "filename": "gcc/gimple.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2186081438d522d8266dae13e9640447b7ad6189/gcc%2Fgimple.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2186081438d522d8266dae13e9640447b7ad6189/gcc%2Fgimple.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple.h?ref=2186081438d522d8266dae13e9640447b7ad6189", "patch": "@@ -831,6 +831,7 @@ gimple gimple_build_debug_source_bind_stat (tree, tree, gimple MEM_STAT_DECL);\n \n gimple gimple_build_call_vec (tree, VEC(tree, heap) *);\n gimple gimple_build_call (tree, unsigned, ...);\n+gimple gimple_build_call_valist (tree, unsigned, va_list);\n gimple gimple_build_call_internal (enum internal_fn, unsigned, ...);\n gimple gimple_build_call_internal_vec (enum internal_fn, VEC(tree, heap) *);\n gimple gimple_build_call_from_tree (tree);"}, {"sha": "05abaa5854998f34a852479259044b110a31bf73", "filename": "gcc/tree-ssa-propagate.c", "status": "modified", "additions": 37, "deletions": 13, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2186081438d522d8266dae13e9640447b7ad6189/gcc%2Ftree-ssa-propagate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2186081438d522d8266dae13e9640447b7ad6189/gcc%2Ftree-ssa-propagate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-propagate.c?ref=2186081438d522d8266dae13e9640447b7ad6189", "patch": "@@ -1,5 +1,5 @@\n /* Generic SSA value propagation engine.\n-   Copyright (C) 2004, 2005, 2006, 2007, 2008, 2009, 2010\n+   Copyright (C) 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011\n    Free Software Foundation, Inc.\n    Contributed by Diego Novillo <dnovillo@redhat.com>\n \n@@ -673,6 +673,40 @@ move_ssa_defining_stmt_for_defs (gimple new_stmt, gimple old_stmt)\n     }\n }\n \n+/* Helper function for update_gimple_call and update_call_from_tree.\n+   A GIMPLE_CALL STMT is being replaced with GIMPLE_CALL NEW_STMT.  */\n+\n+static void\n+finish_update_gimple_call (gimple_stmt_iterator *si_p, gimple new_stmt,\n+\t\t\t   gimple stmt)\n+{\n+  gimple_call_set_lhs (new_stmt, gimple_call_lhs (stmt));\n+  move_ssa_defining_stmt_for_defs (new_stmt, stmt);\n+  gimple_set_vuse (new_stmt, gimple_vuse (stmt));\n+  gimple_set_vdef (new_stmt, gimple_vdef (stmt));\n+  gimple_set_location (new_stmt, gimple_location (stmt));\n+  if (gimple_block (new_stmt) == NULL_TREE)\n+    gimple_set_block (new_stmt, gimple_block (stmt));\n+  gsi_replace (si_p, new_stmt, false);\n+}\n+\n+/* Update a GIMPLE_CALL statement at iterator *SI_P to call to FN\n+   with number of arguments NARGS, where the arguments in GIMPLE form\n+   follow NARGS argument.  */\n+\n+bool\n+update_gimple_call (gimple_stmt_iterator *si_p, tree fn, int nargs, ...)\n+{\n+  va_list ap;\n+  gimple new_stmt, stmt = gsi_stmt (*si_p);\n+\n+  gcc_assert (is_gimple_call (stmt));\n+  va_start (ap, nargs);\n+  new_stmt = gimple_build_call_valist (fn, nargs, ap);\n+  finish_update_gimple_call (si_p, new_stmt, stmt);\n+  va_end (ap);\n+  return true;\n+}\n \n /* Update a GIMPLE_CALL statement at iterator *SI_P to reflect the\n    value of EXPR, which is expected to be the result of folding the\n@@ -689,14 +723,8 @@ move_ssa_defining_stmt_for_defs (gimple new_stmt, gimple old_stmt)\n bool\n update_call_from_tree (gimple_stmt_iterator *si_p, tree expr)\n {\n-  tree lhs;\n-\n   gimple stmt = gsi_stmt (*si_p);\n \n-  gcc_assert (is_gimple_call (stmt));\n-\n-  lhs = gimple_call_lhs (stmt);\n-\n   if (valid_gimple_call_p (expr))\n     {\n       /* The call has simplified to another call.  */\n@@ -716,18 +744,14 @@ update_call_from_tree (gimple_stmt_iterator *si_p, tree expr)\n         }\n \n       new_stmt = gimple_build_call_vec (fn, args);\n-      gimple_call_set_lhs (new_stmt, lhs);\n-      move_ssa_defining_stmt_for_defs (new_stmt, stmt);\n-      gimple_set_vuse (new_stmt, gimple_vuse (stmt));\n-      gimple_set_vdef (new_stmt, gimple_vdef (stmt));\n-      gimple_set_location (new_stmt, gimple_location (stmt));\n-      gsi_replace (si_p, new_stmt, false);\n+      finish_update_gimple_call (si_p, new_stmt, stmt);\n       VEC_free (tree, heap, args);\n \n       return true;\n     }\n   else if (valid_gimple_rhs_p (expr))\n     {\n+      tree lhs = gimple_call_lhs (stmt);\n       gimple new_stmt;\n \n       /* The call has simplified to an expression"}, {"sha": "86e22e6ca5c737eb12471a5417b306a299c01313", "filename": "gcc/tree-ssa-propagate.h", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2186081438d522d8266dae13e9640447b7ad6189/gcc%2Ftree-ssa-propagate.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2186081438d522d8266dae13e9640447b7ad6189/gcc%2Ftree-ssa-propagate.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-propagate.h?ref=2186081438d522d8266dae13e9640447b7ad6189", "patch": "@@ -1,6 +1,7 @@\n /* Data structures and function declarations for the SSA value propagation\n    engine.\n-   Copyright (C) 2004, 2005, 2007, 2008, 2010 Free Software Foundation, Inc.\n+   Copyright (C) 2004, 2005, 2007, 2008, 2010, 2011\n+   Free Software Foundation, Inc.\n    Contributed by Diego Novillo <dnovillo@redhat.com>\n \n This file is part of GCC.\n@@ -72,6 +73,7 @@ typedef tree (*ssa_prop_get_value_fn) (tree);\n void ssa_propagate (ssa_prop_visit_stmt_fn, ssa_prop_visit_phi_fn);\n bool valid_gimple_rhs_p (tree);\n void move_ssa_defining_stmt_for_defs (gimple, gimple);\n+bool update_gimple_call (gimple_stmt_iterator *, tree, int, ...);\n bool update_call_from_tree (gimple_stmt_iterator *, tree);\n bool stmt_makes_single_store (gimple);\n bool substitute_and_fold (ssa_prop_get_value_fn, ssa_prop_fold_stmt_fn, bool);"}]}