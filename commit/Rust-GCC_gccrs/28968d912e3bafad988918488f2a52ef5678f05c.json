{"sha": "28968d912e3bafad988918488f2a52ef5678f05c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mjg5NjhkOTEyZTNiYWZhZDk4ODkxODQ4OGYyYTUyZWY1Njc4ZjA1Yw==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2012-03-14T22:20:17Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2012-03-14T22:20:17Z"}, "message": "Add -maddress-mode=short|long for x86\n\n2012-03-14  H.J. Lu  <hongjiu.lu@intel.com>\n\n\tPR target/50797\n\t* config/i386/i386-opts.h (pmode): New.\n\n\t* config/i386/i386.c (ix86_option_override_internal): Properly\n\tcheck and set ix86_pmode.\n\n\t* config/i386/i386.h (Pmode): Check ix86_pmode instead of\n\tTARGET_64BIT.\n\n\t* config/i386/i386.opt (maddress-mode=): New.\n\n\t* doc/invoke.texi: Document -maddress-mode=short|long for x86.\n\nFrom-SVN: r185396", "tree": {"sha": "991376abc0fe468504e81788547fbf4380567847", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/991376abc0fe468504e81788547fbf4380567847"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/28968d912e3bafad988918488f2a52ef5678f05c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28968d912e3bafad988918488f2a52ef5678f05c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/28968d912e3bafad988918488f2a52ef5678f05c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28968d912e3bafad988918488f2a52ef5678f05c/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7c17f33540ebf61ad6d7d88350cd2d90be975ab0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c17f33540ebf61ad6d7d88350cd2d90be975ab0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c17f33540ebf61ad6d7d88350cd2d90be975ab0"}], "stats": {"total": 61, "additions": 59, "deletions": 2}, "files": [{"sha": "5999104d6cc0bd6a942a73ed4a3599c4029d16a9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28968d912e3bafad988918488f2a52ef5678f05c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28968d912e3bafad988918488f2a52ef5678f05c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=28968d912e3bafad988918488f2a52ef5678f05c", "patch": "@@ -1,3 +1,18 @@\n+2012-03-14  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/50797\n+\t* config/i386/i386-opts.h (pmode): New.\n+\n+\t* config/i386/i386.c (ix86_option_override_internal): Properly\n+\tcheck and set ix86_pmode.\n+\n+\t* config/i386/i386.h (Pmode): Check ix86_pmode instead of\n+\tTARGET_64BIT.\n+\n+\t* config/i386/i386.opt (maddress-mode=): New.\n+\n+\t* doc/invoke.texi: Document -maddress-mode=short|long for x86.\n+\n 2012-03-14  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* dwarf2cfi.c (def_cfa_0): Remove MIPS_DEBUGGING_INFO handling."}, {"sha": "eea85fd8a26851da38c733fbb66d6030922257e5", "filename": "gcc/config/i386/i386-opts.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28968d912e3bafad988918488f2a52ef5678f05c/gcc%2Fconfig%2Fi386%2Fi386-opts.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28968d912e3bafad988918488f2a52ef5678f05c/gcc%2Fconfig%2Fi386%2Fi386-opts.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-opts.h?ref=28968d912e3bafad988918488f2a52ef5678f05c", "patch": "@@ -71,6 +71,11 @@ enum cmodel {\n   CM_LARGE_PIC\t/* No assumptions.  */\n };\n \n+enum pmode {\n+  PMODE_SI,\t/* Pmode == SImode. */\n+  PMODE_DI \t/* Pmode == DImode. */\n+};\n+\n enum asm_dialect {\n   ASM_ATT,\n   ASM_INTEL"}, {"sha": "fec125a68b392ffc40596664cb83d354bdaaf62f", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28968d912e3bafad988918488f2a52ef5678f05c/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28968d912e3bafad988918488f2a52ef5678f05c/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=28968d912e3bafad988918488f2a52ef5678f05c", "patch": "@@ -3172,6 +3172,17 @@ ix86_option_override_internal (bool main_args_p)\n   else\n     ix86_arch_specified = 1;\n \n+  if (global_options_set.x_ix86_pmode)\n+    {\n+      if ((TARGET_LP64 && ix86_pmode == PMODE_SI)\n+\t   || (!TARGET_64BIT && ix86_pmode == PMODE_DI))\n+\terror (\"address mode %qs not supported in the %s bit mode\",\n+\t       TARGET_64BIT ? \"short\" : \"long\",\n+\t       TARGET_64BIT ? \"64\" : \"32\");\n+    }\n+  else\n+    ix86_pmode = TARGET_LP64 ? PMODE_DI : PMODE_SI;\n+\n   if (!global_options_set.x_ix86_abi)\n     ix86_abi = DEFAULT_ABI;\n "}, {"sha": "9e5ac00fb78750bd806e17ca68b07776b9311f1a", "filename": "gcc/config/i386/i386.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28968d912e3bafad988918488f2a52ef5678f05c/gcc%2Fconfig%2Fi386%2Fi386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28968d912e3bafad988918488f2a52ef5678f05c/gcc%2Fconfig%2Fi386%2Fi386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.h?ref=28968d912e3bafad988918488f2a52ef5678f05c", "patch": "@@ -1748,7 +1748,7 @@ do {\t\t\t\t\t\t\t\\\n /* Specify the machine mode that pointers have.\n    After generation of rtl, the compiler makes no further distinction\n    between pointers and any other objects of this machine mode.  */\n-#define Pmode (TARGET_64BIT ? DImode : SImode)\n+#define Pmode (ix86_pmode == PMODE_DI ? DImode : SImode)\n \n /* A C expression whose value is zero if pointers that need to be extended\n    from being `POINTER_SIZE' bits wide to `Pmode' are sign-extended and"}, {"sha": "29f1082b2d1076ec3bd48b4b1df094885ed129e1", "filename": "gcc/config/i386/i386.opt", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28968d912e3bafad988918488f2a52ef5678f05c/gcc%2Fconfig%2Fi386%2Fi386.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28968d912e3bafad988918488f2a52ef5678f05c/gcc%2Fconfig%2Fi386%2Fi386.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.opt?ref=28968d912e3bafad988918488f2a52ef5678f05c", "patch": "@@ -159,6 +159,20 @@ Enum(cmodel) String(32) Value(CM_32)\n EnumValue\n Enum(cmodel) String(kernel) Value(CM_KERNEL)\n \n+maddress-mode=\n+Target RejectNegative Joined Enum(pmode) Var(ix86_pmode) Init(PMODE_SI)\n+Use given address mode\n+\n+Enum\n+Name(pmode) Type(enum pmode)\n+Known address mode (for use with the -maddress-mode= option):\n+\n+EnumValue\n+Enum(pmode) String(short) Value(PMODE_SI)\n+\n+EnumValue\n+Enum(pmode) String(long) Value(PMODE_DI)\n+\n mcpu=\n Target RejectNegative Joined Undocumented Alias(mtune=) Warn(%<-mcpu=%> is deprecated; use %<-mtune=%> or %<-march=%> instead)\n "}, {"sha": "cf23ced85c96ad515d7b3794476427fbaa4ee3a6", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/28968d912e3bafad988918488f2a52ef5678f05c/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/28968d912e3bafad988918488f2a52ef5678f05c/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=28968d912e3bafad988918488f2a52ef5678f05c", "patch": "@@ -634,7 +634,7 @@ Objective-C and Objective-C++ Dialects}.\n -mveclibabi=@var{type} -mvect8-ret-in-mem @gol\n -mpc32 -mpc64 -mpc80 -mstackrealign @gol\n -momit-leaf-frame-pointer  -mno-red-zone -mno-tls-direct-seg-refs @gol\n--mcmodel=@var{code-model} -mabi=@var{name} @gol\n+-mcmodel=@var{code-model} -mabi=@var{name} -maddress-mode=@var{mode} @gol\n -m32 -m64 -mx32 -mlarge-data-threshold=@var{num} @gol\n -msse2avx -mfentry -m8bit-idiv @gol\n -mavx256-split-unaligned-load -mavx256-split-unaligned-store}\n@@ -13929,6 +13929,18 @@ be statically or dynamically linked.\n @opindex mcmodel=large\n Generate code for the large model.  This model makes no assumptions\n about addresses and sizes of sections.\n+\n+@item -maddress-mode=long\n+@opindex maddress-mode=long\n+Generate code for long address mode.  This is only supported for 64-bit\n+and x32 environments.  It is the default address mode for 64-bit\n+environments.\n+\n+@item -maddress-mode=short\n+@opindex maddress-mode=short\n+Generate code for short address mode.  This is only supported for 32-bit\n+and x32 environments.  It is the default address mode for 32-bit and\n+x32 environments.\n @end table\n \n @node i386 and x86-64 Windows Options"}]}