{"sha": "5fdc49eca660d130ec4815eb7a804aa7fd89773d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWZkYzQ5ZWNhNjYwZDEzMGVjNDgxNWViN2E4MDRhYTdmZDg5NzczZA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-09-09T13:53:19Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-09-09T13:53:19Z"}, "message": "[multiple changes]\n\n2010-09-09  Robert Dewar  <dewar@adacore.com>\n\n\t* sinput-p.ads: Minor comment update.\n\n2010-09-09  Arnaud Charlet  <charlet@adacore.com>\n\n\t* s-tpobop.adb, s-taenca.adb (Wait_For_Completion_With_Timeout): Reset\n\tEntry_Call.State if needed so that the call is marked as cancelled by\n\tCheck_Pending_Actions_For_Entry_Call.\n\t(Timed_Protected_Entry_Call): Adjust calls to Defer/Under_Abort, since\n\tthis procedure may be called from a controlled operation\n\t(Initialize/Finalize).\n\n2010-09-09  Vadim Godunko  <godunko@adacore.com>\n\n\t* impunit.adb: Correct spelling of package's name in the comment.\n\nFrom-SVN: r164101", "tree": {"sha": "e086c42c03e0ad00c16188e846a79c6649bb7102", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e086c42c03e0ad00c16188e846a79c6649bb7102"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5fdc49eca660d130ec4815eb7a804aa7fd89773d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5fdc49eca660d130ec4815eb7a804aa7fd89773d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5fdc49eca660d130ec4815eb7a804aa7fd89773d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5fdc49eca660d130ec4815eb7a804aa7fd89773d/comments", "author": null, "committer": null, "parents": [{"sha": "b100151b6d20180b9e11b259943fd8e63fdec865", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b100151b6d20180b9e11b259943fd8e63fdec865", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b100151b6d20180b9e11b259943fd8e63fdec865"}], "stats": {"total": 40, "additions": 32, "deletions": 8}, "files": [{"sha": "59562e605743fa2dbf541a7bbe6d36a621cad6a2", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fdc49eca660d130ec4815eb7a804aa7fd89773d/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fdc49eca660d130ec4815eb7a804aa7fd89773d/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=5fdc49eca660d130ec4815eb7a804aa7fd89773d", "patch": "@@ -1,3 +1,20 @@\n+2010-09-09  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sinput-p.ads: Minor comment update.\n+\n+2010-09-09  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* s-tpobop.adb, s-taenca.adb (Wait_For_Completion_With_Timeout): Reset\n+\tEntry_Call.State if needed so that the call is marked as cancelled by\n+\tCheck_Pending_Actions_For_Entry_Call.\n+\t(Timed_Protected_Entry_Call): Adjust calls to Defer/Under_Abort, since\n+\tthis procedure may be called from a controlled operation\n+\t(Initialize/Finalize).\n+\n+2010-09-09  Vadim Godunko  <godunko@adacore.com>\n+\n+\t* impunit.adb: Correct spelling of package's name in the comment.\n+\n 2010-09-09  Robert Dewar  <dewar@adacore.com>\n \n \t* gnatcmd.adb, gnatlink.adb, sem_ch12.adb, sem_eval.adb, sinput-p.adb:"}, {"sha": "fe89924333e281593c7bcfb77127cf39a5fbff4e", "filename": "gcc/ada/impunit.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fdc49eca660d130ec4815eb7a804aa7fd89773d/gcc%2Fada%2Fimpunit.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fdc49eca660d130ec4815eb7a804aa7fd89773d/gcc%2Fada%2Fimpunit.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fimpunit.adb?ref=5fdc49eca660d130ec4815eb7a804aa7fd89773d", "patch": "@@ -55,7 +55,7 @@ package body Impunit is\n    Non_Imp_File_Names_95 : constant File_List := (\n \n    ------------------------------------------------------\n-   -- Ada Hierarchy Units from Ada-83 Reference Manual --\n+   -- Ada Hierarchy Units from Ada-95 Reference Manual --\n    ------------------------------------------------------\n \n      \"a-astaco\",    -- Ada.Asynchronous_Task_Control\n@@ -395,7 +395,7 @@ package body Impunit is\n      \"a-envvar\",    -- Ada.Environment_Variables\n      \"a-exetim\",    -- Ada.Execution_Time\n      \"a-extiti\",    -- Ada.Execution_Time.Timers\n-     \"a-izteio\",    -- Ada.Integer_Wide_Wide_TextIO;\n+     \"a-izteio\",    -- Ada.Integer_Wide_Wide_Text_IO\n      \"a-rttiev\",    -- Ada.Real_Time.Timing_Events\n      \"a-ngcoar\",    -- Ada.Numerics.Generic_Complex_Arrays\n      \"a-ngrear\",    -- Ada.Numerics.Generic_Real_Arrays"}, {"sha": "14812a4464d5912bec51cae03864e8f8741b28d4", "filename": "gcc/ada/s-taenca.adb", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fdc49eca660d130ec4815eb7a804aa7fd89773d/gcc%2Fada%2Fs-taenca.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fdc49eca660d130ec4815eb7a804aa7fd89773d/gcc%2Fada%2Fs-taenca.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taenca.adb?ref=5fdc49eca660d130ec4815eb7a804aa7fd89773d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---         Copyright (C) 1992-2009, Free Software Foundation, Inc.          --\n+--         Copyright (C) 1992-2010, Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -590,6 +590,13 @@ package body System.Tasking.Entry_Calls is\n \n             Entry_Call.Cancellation_Attempted := True;\n \n+            --  Reset Entry_Call.State so that the call is marked as cancelled\n+            --  by Check_Pending_Actions_For_Entry_Call below.\n+\n+            if Entry_Call.State < Was_Abortable then\n+               Entry_Call.State := Now_Abortable;\n+            end if;\n+\n             if Self_Id.Pending_ATC_Level >= Entry_Call.Level then\n                Self_Id.Pending_ATC_Level := Entry_Call.Level - 1;\n             end if;"}, {"sha": "0890181544d6f5fb49ed9ba84a9379a6d66bba74", "filename": "gcc/ada/s-tpobop.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fdc49eca660d130ec4815eb7a804aa7fd89773d/gcc%2Fada%2Fs-tpobop.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fdc49eca660d130ec4815eb7a804aa7fd89773d/gcc%2Fada%2Fs-tpobop.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-tpobop.adb?ref=5fdc49eca660d130ec4815eb7a804aa7fd89773d", "patch": "@@ -958,7 +958,7 @@ package body System.Tasking.Protected_Objects.Operations is\n          Send_Trace_Info (POT_Call, Entry_Index (E), Timeout);\n       end if;\n \n-      Initialization.Defer_Abort (Self_Id);\n+      Initialization.Defer_Abort_Nestable (Self_Id);\n       Lock_Entries (Object, Ceiling_Violation);\n \n       if Ceiling_Violation then\n@@ -1009,7 +1009,7 @@ package body System.Tasking.Protected_Objects.Operations is\n          end if;\n \n          Entry_Call_Successful := Entry_Call.State = Done;\n-         Initialization.Undefer_Abort (Self_Id);\n+         Initialization.Undefer_Abort_Nestable (Self_Id);\n          Entry_Calls.Check_Exception (Self_Id, Entry_Call);\n          return;\n       end if;\n@@ -1025,7 +1025,7 @@ package body System.Tasking.Protected_Objects.Operations is\n \n       --  ??? Do we need to yield in case Yielded is False\n \n-      Initialization.Undefer_Abort (Self_Id);\n+      Initialization.Undefer_Abort_Nestable (Self_Id);\n       Entry_Call_Successful := Entry_Call.State = Done;\n       Entry_Calls.Check_Exception (Self_Id, Entry_Call);\n    end Timed_Protected_Entry_Call;"}, {"sha": "112a6f7d5da3cb40326b9a1c1db44f717606ae4b", "filename": "gcc/ada/sinput-p.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5fdc49eca660d130ec4815eb7a804aa7fd89773d/gcc%2Fada%2Fsinput-p.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5fdc49eca660d130ec4815eb7a804aa7fd89773d/gcc%2Fada%2Fsinput-p.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinput-p.ads?ref=5fdc49eca660d130ec4815eb7a804aa7fd89773d", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2008, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -54,7 +54,7 @@ package Sinput.P is\n    --  the file cannot possibly be a legal subunit. This function does NOT do a\n    --  complete parse of the file, or build a tree. It is used in gnatmake and\n    --  gprbuild to decide if a body without a spec in a project file needs to\n-   --  be compiled or not.\n+   --  be compiled or not. Returns False if X = No_Source_File.\n \n    type Saved_Project_Scan_State is limited private;\n    --  Used to save project scan state in following two routines"}]}