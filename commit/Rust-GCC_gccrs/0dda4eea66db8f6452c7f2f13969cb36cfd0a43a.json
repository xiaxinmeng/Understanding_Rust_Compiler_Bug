{"sha": "0dda4eea66db8f6452c7f2f13969cb36cfd0a43a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGRkYTRlZWE2NmRiOGY2NDUyYzdmMmYxMzk2OWNiMzZjZmQwYTQzYQ==", "commit": {"author": {"name": "David Edelsohn", "email": "edelsohn@gnu.org", "date": "2004-10-21T14:53:11Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2004-10-21T14:53:11Z"}, "message": "dbxout.c (DBX_FINISH_SYMBOL): Add asm_out_file argument.\n\n\t* dbxout.c (DBX_FINISH_SYMBOL): Add asm_out_file argument.\n\t* xcoffout.h (DBX_FINISH_SYMBOL): Change asmfile to (ASMFILE).\n\nFrom-SVN: r89378", "tree": {"sha": "ad17b968a673ec6c2eb174dc78b401a5116d30f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ad17b968a673ec6c2eb174dc78b401a5116d30f2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0dda4eea66db8f6452c7f2f13969cb36cfd0a43a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0dda4eea66db8f6452c7f2f13969cb36cfd0a43a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0dda4eea66db8f6452c7f2f13969cb36cfd0a43a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0dda4eea66db8f6452c7f2f13969cb36cfd0a43a/comments", "author": null, "committer": null, "parents": [{"sha": "996e539545fa047c2df21645768d40cb67f50acf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/996e539545fa047c2df21645768d40cb67f50acf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/996e539545fa047c2df21645768d40cb67f50acf"}], "stats": {"total": 25, "additions": 15, "deletions": 10}, "files": [{"sha": "ef8b36c64d3e0264fbebd348ebe62f77aacb1172", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0dda4eea66db8f6452c7f2f13969cb36cfd0a43a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0dda4eea66db8f6452c7f2f13969cb36cfd0a43a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0dda4eea66db8f6452c7f2f13969cb36cfd0a43a", "patch": "@@ -1,3 +1,8 @@\n+2004-10-21  David Edelsohn  <edelsohn@gnu.org>\n+\n+\t* dbxout.c (DBX_FINISH_SYMBOL): Add asm_out_file argument.\n+\t* xcoffout.h (DBX_FINISH_SYMBOL): Change asmfile to (ASMFILE).\n+\n 2004-10-21  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* expr.c (store_expr): Clean up by renaming want_value to"}, {"sha": "9f8c37aefb0a425b4b683ec19bd2af60745c134a", "filename": "gcc/dbxout.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0dda4eea66db8f6452c7f2f13969cb36cfd0a43a/gcc%2Fdbxout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0dda4eea66db8f6452c7f2f13969cb36cfd0a43a/gcc%2Fdbxout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdbxout.c?ref=0dda4eea66db8f6452c7f2f13969cb36cfd0a43a", "patch": "@@ -2774,7 +2774,7 @@ static void\n dbxout_finish_symbol (tree sym)\n {\n #ifdef DBX_FINISH_SYMBOL\n-  DBX_FINISH_SYMBOL (sym);\n+  DBX_FINISH_SYMBOL (asm_out_file, sym);\n #else\n   int line = 0;\n   if (use_gnu_debug_info_extensions && sym != 0)"}, {"sha": "21d2b838c4ad8865c45e58b9ba4d92f1e727d9ce", "filename": "gcc/xcoffout.h", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0dda4eea66db8f6452c7f2f13969cb36cfd0a43a/gcc%2Fxcoffout.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0dda4eea66db8f6452c7f2f13969cb36cfd0a43a/gcc%2Fxcoffout.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fxcoffout.h?ref=0dda4eea66db8f6452c7f2f13969cb36cfd0a43a", "patch": "@@ -70,31 +70,31 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n /* Define our own finish symbol function, since xcoff stabs have their\n    own different format.  */\n \n-#define DBX_FINISH_SYMBOL(SYM)\t\t\t\t\t\\\n+#define DBX_FINISH_SYMBOL(ASMFILE,SYM)\t\t\t\t\\\n {\t\t\t\t\t\t\t\t\\\n   if (current_sym_addr && current_sym_code == N_FUN)\t\t\\\n-    fprintf (asmfile, \"\\\",.\");\t\t\t\t\t\\\n+    fprintf ((ASMFILE), \"\\\",.\");\t\t\t\t\\\n   else\t\t\t\t\t\t\t\t\\\n-    fprintf (asmfile, \"\\\",\");\t\t\t\t\t\\\n+    fprintf ((ASMFILE), \"\\\",\");\t\t\t\t\t\\\n   /* If we are writing a function name, we must ensure that\t\\\n      there is no storage-class suffix on the name.  */\t\t\\\n   if (current_sym_addr && current_sym_code == N_FUN\t\t\\\n       && GET_CODE (current_sym_addr) == SYMBOL_REF)\t\t\\\n     {\t\t\t\t\t\t\t\t\\\n       const char *_p = XSTR (current_sym_addr, 0);\t\t\\\n       if (*_p == '*')\t\t\t\t\t\t\\\n-\tfprintf (asmfile, \"%s\", _p+1);\t\t\t\t\\\n+\tfprintf ((ASMFILE), \"%s\", _p+1);\t\t\t\\\n       else\t\t\t\t\t\t\t\\\n \tfor (; *_p != '[' && *_p; _p++)\t\t\t\t\\\n-\t  fprintf (asmfile, \"%c\", *_p);\t\t\t\t\\\n+\t  fprintf ((ASMFILE), \"%c\", *_p);\t\t\t\\\n     }\t\t\t\t\t\t\t\t\\\n   else if (current_sym_addr)\t\t\t\t\t\\\n-    output_addr_const (asmfile, current_sym_addr);\t\t\\\n+    output_addr_const ((ASMFILE), current_sym_addr);\t\t\\\n   else if (current_sym_code == N_GSYM)\t\t\t\t\\\n-    assemble_name (asmfile, XSTR (XEXP (DECL_RTL (SYM), 0), 0)); \\\n+    assemble_name ((ASMFILE), XSTR (XEXP (DECL_RTL (SYM), 0), 0)); \\\n   else\t\t\t\t\t\t\t\t\\\n-    fprintf (asmfile, \"%d\", current_sym_value);\t\t\t\\\n-  fprintf (asmfile, \",%d,0\\n\", stab_to_sclass (current_sym_code)); \\\n+    fprintf ((ASMFILE), \"%d\", current_sym_value);\t\t\\\n+  fprintf ((ASMFILE), \",%d,0\\n\", stab_to_sclass (current_sym_code)); \\\n }\n \n /* These are IBM XCOFF extensions we need to reference in dbxout.c"}]}