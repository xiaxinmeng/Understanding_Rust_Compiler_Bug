{"sha": "324000329be228765b56c2b11d24256a8a30000e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzI0MDAwMzI5YmUyMjg3NjViNTZjMmIxMWQyNDI1NmE4YTMwMDAwZQ==", "commit": {"author": {"name": "Mike Frysinger", "email": "vapier@gentoo.org", "date": "2015-07-21T18:33:35Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2015-07-21T18:33:35Z"}, "message": "configure.ac: Add check for new options in isl-0.15.\n\n\t* configure.ac: Add check for new options in isl-0.15.\n\t* config.in, configure: Rebuilt.\n\t* graphite-blocking.c: Include <isl/constraint.h>\n\t* graphite-interchange.c,  graphite-poly.c: Likewise.\n\t* graphhite-scop-detection.c, graphite-sese-to-poly.c: Likewise.\n\t* graphite.c: Likewise.\n\t* graphite-isl-ast-to-gimple.c: Include <isl/constraint.h> and\n\t<isl/union_set.h>.\n\t* graphite-dependences.c: Include <isl/constraint.h>.\n\t(max_number_of_out_dimensions): Returns isl_stat.\n\t(extend_schedule_1): Likewise\n\t(extend_schedule): Corresponding changes.\n\t* graphite-optimize-isl.c: Include <isl/constraint.h> and\n\t<isl/union_set.h>.\n\t(getSingleMap): Change return type of isl_stat.\n\t(optimize_isl): Conditionally use\n\tisl_options_set_schedule_serialize_sccs.\n\t* graphite-poly.h (isl_stat, isl_stat_ok): Define fallbacks\n\tif not HAVE_ISL_OPTIONS_SET_SCHEDULE_SERIALIZE_SCCS.\n\nCo-Authored-By: Bernhard Reutner-Fischer <aldot@gcc.gnu.org>\n\nFrom-SVN: r226050", "tree": {"sha": "69f623cd993a4e5de320d692854414be761b6997", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/69f623cd993a4e5de320d692854414be761b6997"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/324000329be228765b56c2b11d24256a8a30000e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/324000329be228765b56c2b11d24256a8a30000e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/324000329be228765b56c2b11d24256a8a30000e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/324000329be228765b56c2b11d24256a8a30000e/comments", "author": {"login": "vapier", "id": 176950, "node_id": "MDQ6VXNlcjE3Njk1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/176950?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vapier", "html_url": "https://github.com/vapier", "followers_url": "https://api.github.com/users/vapier/followers", "following_url": "https://api.github.com/users/vapier/following{/other_user}", "gists_url": "https://api.github.com/users/vapier/gists{/gist_id}", "starred_url": "https://api.github.com/users/vapier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vapier/subscriptions", "organizations_url": "https://api.github.com/users/vapier/orgs", "repos_url": "https://api.github.com/users/vapier/repos", "events_url": "https://api.github.com/users/vapier/events{/privacy}", "received_events_url": "https://api.github.com/users/vapier/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1f82f1245db9096c1fe53acc763fdfacdba2a440", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f82f1245db9096c1fe53acc763fdfacdba2a440", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f82f1245db9096c1fe53acc763fdfacdba2a440"}], "stats": {"total": 112, "additions": 103, "deletions": 9}, "files": [{"sha": "5e6915a10700a2669703302c8b61ad71e7840bca", "filename": "gcc/ChangeLog", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/324000329be228765b56c2b11d24256a8a30000e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/324000329be228765b56c2b11d24256a8a30000e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=324000329be228765b56c2b11d24256a8a30000e", "patch": "@@ -1,3 +1,26 @@\n+2015-07-21  Mike Frysinger  <vapier@gentoo.org>\n+\t    Bernhard Reutner-Fischer  <aldot@gcc.gnu.org>\n+\n+\t* configure.ac: Add check for new options in isl-0.15.\n+\t* config.in, configure: Rebuilt.\n+\t* graphite-blocking.c: Include <isl/constraint.h>\n+\t* graphite-interchange.c,  graphite-poly.c: Likewise.\n+\t* graphhite-scop-detection.c, graphite-sese-to-poly.c: Likewise.\n+\t* graphite.c: Likewise.\n+\t* graphite-isl-ast-to-gimple.c: Include <isl/constraint.h> and\n+\t<isl/union_set.h>.\n+\t* graphite-dependences.c: Include <isl/constraint.h>.\n+\t(max_number_of_out_dimensions): Returns isl_stat.\n+\t(extend_schedule_1): Likewise\n+\t(extend_schedule): Corresponding changes.\n+\t* graphite-optimize-isl.c: Include <isl/constraint.h> and\n+\t<isl/union_set.h>.\n+\t(getSingleMap): Change return type of isl_stat.\n+\t(optimize_isl): Conditionally use\n+\tisl_options_set_schedule_serialize_sccs.\n+\t* graphite-poly.h (isl_stat, isl_stat_ok): Define fallbacks\n+\tif not HAVE_ISL_OPTIONS_SET_SCHEDULE_SERIALIZE_SCCS.\n+\n 2015-07-21  Georg-Johann Lay  <avr@gjlay.de>\n \n \tPR target/66956"}, {"sha": "67d03d170988a401bda6f80354c4249ca225a568", "filename": "gcc/config.in", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/324000329be228765b56c2b11d24256a8a30000e/gcc%2Fconfig.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/324000329be228765b56c2b11d24256a8a30000e/gcc%2Fconfig.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.in?ref=324000329be228765b56c2b11d24256a8a30000e", "patch": "@@ -1326,6 +1326,12 @@\n #endif\n \n \n+/* Define if isl_options_set_schedule_serialize_sccs exists. */\n+#ifndef USED_FOR_TARGET\n+#undef HAVE_ISL_OPTIONS_SET_SCHEDULE_SERIALIZE_SCCS\n+#endif\n+\n+\n /* Define if isl_schedule_constraints_compute_schedule exists. */\n #ifndef USED_FOR_TARGET\n #undef HAVE_ISL_SCHED_CONSTRAINTS_COMPUTE_SCHEDULE"}, {"sha": "08bce32dc88b96bd2b4688fd506977f15e5ca812", "filename": "gcc/configure", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/324000329be228765b56c2b11d24256a8a30000e/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/324000329be228765b56c2b11d24256a8a30000e/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=324000329be228765b56c2b11d24256a8a30000e", "patch": "@@ -28467,6 +28467,8 @@ fi\n \n # Check whether isl_schedule_constraints_compute_schedule is available;\n # it's new in ISL-0.13.\n+# Check whether isl_options_set_schedule_serialize_sccs is available;\n+# it's new in ISL-0.15.\n if test \"x${ISLLIBS}\" != \"x\" ; then\n   saved_CXXFLAGS=\"$CXXFLAGS\"\n   CXXFLAGS=\"$CXXFLAGS $ISLINC\"\n@@ -28496,6 +28498,29 @@ rm -f core conftest.err conftest.$ac_objext \\\n   { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_has_isl_schedule_constraints_compute_schedule\" >&5\n $as_echo \"$ac_has_isl_schedule_constraints_compute_schedule\" >&6; }\n \n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking Checking for isl_options_set_schedule_serialize_sccs\" >&5\n+$as_echo_n \"checking Checking for isl_options_set_schedule_serialize_sccs... \" >&6; }\n+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+#include <isl/schedule.h>\n+int\n+main ()\n+{\n+isl_options_set_schedule_serialize_sccs (NULL, 0);\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_cxx_try_link \"$LINENO\"; then :\n+  ac_has_isl_options_set_schedule_serialize_sccs=yes\n+else\n+  ac_has_isl_options_set_schedule_serialize_sccs=no\n+fi\n+rm -f core conftest.err conftest.$ac_objext \\\n+    conftest$ac_exeext conftest.$ac_ext\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_has_isl_options_set_schedule_serialize_sccs\" >&5\n+$as_echo \"$ac_has_isl_options_set_schedule_serialize_sccs\" >&6; }\n+\n   LIBS=\"$saved_LIBS\"\n   CXXFLAGS=\"$saved_CXXFLAGS\"\n \n@@ -28504,6 +28529,12 @@ $as_echo \"$ac_has_isl_schedule_constraints_compute_schedule\" >&6; }\n $as_echo \"#define HAVE_ISL_SCHED_CONSTRAINTS_COMPUTE_SCHEDULE 1\" >>confdefs.h\n \n   fi\n+\n+  if test x\"$ac_has_isl_options_set_schedule_serialize_sccs\" = x\"yes\"; then\n+\n+$as_echo \"#define HAVE_ISL_OPTIONS_SET_SCHEDULE_SERIALIZE_SCCS 1\" >>confdefs.h\n+\n+  fi\n fi\n \n # Check for plugin support"}, {"sha": "326bb5988b2d8f98d76225887d374d28f36ffcd9", "filename": "gcc/configure.ac", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/324000329be228765b56c2b11d24256a8a30000e/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/324000329be228765b56c2b11d24256a8a30000e/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=324000329be228765b56c2b11d24256a8a30000e", "patch": "@@ -5723,6 +5723,8 @@ fi\n \n # Check whether isl_schedule_constraints_compute_schedule is available;\n # it's new in ISL-0.13.\n+# Check whether isl_options_set_schedule_serialize_sccs is available;\n+# it's new in ISL-0.15.\n if test \"x${ISLLIBS}\" != \"x\" ; then\n   saved_CXXFLAGS=\"$CXXFLAGS\"\n   CXXFLAGS=\"$CXXFLAGS $ISLINC\"\n@@ -5736,13 +5738,25 @@ if test \"x${ISLLIBS}\" != \"x\" ; then\n               [ac_has_isl_schedule_constraints_compute_schedule=no])\n   AC_MSG_RESULT($ac_has_isl_schedule_constraints_compute_schedule)\n \n+  AC_MSG_CHECKING([Checking for isl_options_set_schedule_serialize_sccs])\n+  AC_TRY_LINK([#include <isl/schedule.h>],\n+              [isl_options_set_schedule_serialize_sccs (NULL, 0);],\n+              [ac_has_isl_options_set_schedule_serialize_sccs=yes],\n+              [ac_has_isl_options_set_schedule_serialize_sccs=no])\n+  AC_MSG_RESULT($ac_has_isl_options_set_schedule_serialize_sccs)\n+\n   LIBS=\"$saved_LIBS\"\n   CXXFLAGS=\"$saved_CXXFLAGS\"\n \n   if test x\"$ac_has_isl_schedule_constraints_compute_schedule\" = x\"yes\"; then\n      AC_DEFINE(HAVE_ISL_SCHED_CONSTRAINTS_COMPUTE_SCHEDULE, 1,\n                [Define if isl_schedule_constraints_compute_schedule exists.])\n   fi\n+\n+  if test x\"$ac_has_isl_options_set_schedule_serialize_sccs\" = x\"yes\"; then\n+     AC_DEFINE(HAVE_ISL_OPTIONS_SET_SCHEDULE_SERIALIZE_SCCS, 1,\n+               [Define if isl_options_set_schedule_serialize_sccs exists.])\n+  fi\n fi\n \n GCC_ENABLE_PLUGINS"}, {"sha": "343429484097d8118805f8c8ff0b9e0c796e17e0", "filename": "gcc/graphite-blocking.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/324000329be228765b56c2b11d24256a8a30000e/gcc%2Fgraphite-blocking.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/324000329be228765b56c2b11d24256a8a30000e/gcc%2Fgraphite-blocking.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-blocking.c?ref=324000329be228765b56c2b11d24256a8a30000e", "patch": "@@ -27,6 +27,7 @@ along with GCC; see the file COPYING3.  If not see\n /* Workaround for GMP 5.1.3 bug, see PR56019.  */\n #include <stddef.h>\n \n+#include <isl/constraint.h>\n #include <isl/set.h>\n #include <isl/map.h>\n #include <isl/union_map.h>"}, {"sha": "c3c2090914483effaf432727eb075b1793b06029", "filename": "gcc/graphite-dependences.c", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/324000329be228765b56c2b11d24256a8a30000e/gcc%2Fgraphite-dependences.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/324000329be228765b56c2b11d24256a8a30000e/gcc%2Fgraphite-dependences.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-dependences.c?ref=324000329be228765b56c2b11d24256a8a30000e", "patch": "@@ -25,6 +25,7 @@ along with GCC; see the file COPYING3.  If not see\n /* Workaround for GMP 5.1.3 bug, see PR56019.  */\n #include <stddef.h>\n \n+#include <isl/constraint.h>\n #include <isl/set.h>\n #include <isl/map.h>\n #include <isl/union_map.h>\n@@ -205,7 +206,7 @@ scop_get_transformed_schedule (scop_p scop, vec<poly_bb_p> pbbs)\n /* Helper function used on each MAP of a isl_union_map.  Computes the\n    maximal output dimension.  */\n \n-static int\n+static isl_stat\n max_number_of_out_dimensions (__isl_take isl_map *map, void *user)\n {\n   int global_max = *((int *) user);\n@@ -217,7 +218,7 @@ max_number_of_out_dimensions (__isl_take isl_map *map, void *user)\n \n   isl_map_free (map);\n   isl_space_free (space);\n-  return 0;\n+  return isl_stat_ok;\n }\n \n /* Extends the output dimension of MAP to MAX dimensions.  */\n@@ -241,12 +242,12 @@ struct extend_schedule_str {\n \n /* Helper function for extend_schedule.  */\n \n-static int\n+static isl_stat\n extend_schedule_1 (__isl_take isl_map *map, void *user)\n {\n   struct extend_schedule_str *str = (struct extend_schedule_str *) user;\n   str->umap = isl_union_map_add_map (str->umap, extend_map (map, str->max));\n-  return 0;\n+  return isl_stat_ok;\n }\n \n /* Return a relation that has uniform output dimensions.  */\n@@ -255,16 +256,16 @@ __isl_give isl_union_map *\n extend_schedule (__isl_take isl_union_map *x)\n {\n   int max = 0;\n-  int res;\n+  isl_stat res;\n   struct extend_schedule_str str;\n \n   res = isl_union_map_foreach_map (x, max_number_of_out_dimensions, (void *) &max);\n-  gcc_assert (res == 0);\n+  gcc_assert (res == isl_stat_ok);\n \n   str.max = max;\n   str.umap = isl_union_map_empty (isl_union_map_get_space (x));\n   res = isl_union_map_foreach_map (x, extend_schedule_1, (void *) &str);\n-  gcc_assert (res == 0);\n+  gcc_assert (res == isl_stat_ok);\n \n   isl_union_map_free (x);\n   return str.umap;"}, {"sha": "6b14955ced75325693191bc62a4c624ee10e069e", "filename": "gcc/graphite-interchange.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/324000329be228765b56c2b11d24256a8a30000e/gcc%2Fgraphite-interchange.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/324000329be228765b56c2b11d24256a8a30000e/gcc%2Fgraphite-interchange.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-interchange.c?ref=324000329be228765b56c2b11d24256a8a30000e", "patch": "@@ -27,6 +27,7 @@ along with GCC; see the file COPYING3.  If not see\n /* Workaround for GMP 5.1.3 bug, see PR56019.  */\n #include <stddef.h>\n \n+#include <isl/constraint.h>\n #include <isl/aff.h>\n #include <isl/set.h>\n #include <isl/map.h>"}, {"sha": "dfb012f75b18636fb5aca86b4b738f2bd958cca2", "filename": "gcc/graphite-isl-ast-to-gimple.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/324000329be228765b56c2b11d24256a8a30000e/gcc%2Fgraphite-isl-ast-to-gimple.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/324000329be228765b56c2b11d24256a8a30000e/gcc%2Fgraphite-isl-ast-to-gimple.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-isl-ast-to-gimple.c?ref=324000329be228765b56c2b11d24256a8a30000e", "patch": "@@ -24,7 +24,9 @@ along with GCC; see the file COPYING3.  If not see\n /* Workaround for GMP 5.1.3 bug, see PR56019.  */\n #include <stddef.h>\n \n+#include <isl/constraint.h>\n #include <isl/set.h>\n+#include <isl/union_set.h>\n #include <isl/map.h>\n #include <isl/union_map.h>\n #include <isl/ast_build.h>"}, {"sha": "1b57c6cc6d23c57859b30061547fa4b4c7c70d16", "filename": "gcc/graphite-optimize-isl.c", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/324000329be228765b56c2b11d24256a8a30000e/gcc%2Fgraphite-optimize-isl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/324000329be228765b56c2b11d24256a8a30000e/gcc%2Fgraphite-optimize-isl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-optimize-isl.c?ref=324000329be228765b56c2b11d24256a8a30000e", "patch": "@@ -24,7 +24,9 @@ along with GCC; see the file COPYING3.  If not see\n /* Workaround for GMP 5.1.3 bug, see PR56019.  */\n #include <stddef.h>\n \n+#include <isl/constraint.h>\n #include <isl/set.h>\n+#include <isl/union_set.h>\n #include <isl/map.h>\n #include <isl/union_map.h>\n #include <isl/schedule.h>\n@@ -507,13 +509,13 @@ getScheduleMap (isl_schedule *Schedule, isl_union_map **map_sepcl)\n   return ScheduleMap;\n }\n \n-static int\n+static isl_stat\n getSingleMap (__isl_take isl_map *map, void *user)\n {\n   isl_map **singleMap = (isl_map **) user;\n   *singleMap = map;\n \n-  return 0;\n+  return isl_stat_ok;\n }\n \n static void\n@@ -585,7 +587,11 @@ optimize_isl (scop_p scop)\n \n   isl_options_set_schedule_max_constant_term (scop->ctx, CONSTANT_BOUND);\n   isl_options_set_schedule_maximize_band_depth (scop->ctx, 1);\n+#ifdef HAVE_ISL_OPTIONS_SET_SCHEDULE_SERIALIZE_SCCS\n+  isl_options_set_schedule_serialize_sccs (scop->ctx, 1);\n+#else\n   isl_options_set_schedule_fuse (scop->ctx, ISL_SCHEDULE_FUSE_MIN);\n+#endif\n   isl_options_set_on_error (scop->ctx, ISL_ON_ERROR_CONTINUE);\n \n #ifdef HAVE_ISL_SCHED_CONSTRAINTS_COMPUTE_SCHEDULE"}, {"sha": "dd4fcee15227bbab9be1db59ba143bda83b74426", "filename": "gcc/graphite-poly.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/324000329be228765b56c2b11d24256a8a30000e/gcc%2Fgraphite-poly.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/324000329be228765b56c2b11d24256a8a30000e/gcc%2Fgraphite-poly.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-poly.c?ref=324000329be228765b56c2b11d24256a8a30000e", "patch": "@@ -25,6 +25,7 @@ along with GCC; see the file COPYING3.  If not see\n /* Workaround for GMP 5.1.3 bug, see PR56019.  */\n #include <stddef.h>\n \n+#include <isl/constraint.h>\n #include <isl/set.h>\n #include <isl/map.h>\n #include <isl/union_map.h>"}, {"sha": "062d927411e2eb06ad466c6f9b43b5f4371f6fdd", "filename": "gcc/graphite-poly.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/324000329be228765b56c2b11d24256a8a30000e/gcc%2Fgraphite-poly.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/324000329be228765b56c2b11d24256a8a30000e/gcc%2Fgraphite-poly.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-poly.h?ref=324000329be228765b56c2b11d24256a8a30000e", "patch": "@@ -24,6 +24,11 @@ along with GCC; see the file COPYING3.  If not see\n \n #include \"sese.h\"\n \n+#ifndef HAVE_ISL_OPTIONS_SET_SCHEDULE_SERIALIZE_SCCS\n+# define isl_stat int\n+# define isl_stat_ok 0\n+#endif\n+\n typedef struct poly_dr *poly_dr_p;\n \n typedef struct poly_bb *poly_bb_p;"}, {"sha": "686f4956e1e9ff77d507ab080856050195cdfcb9", "filename": "gcc/graphite-scop-detection.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/324000329be228765b56c2b11d24256a8a30000e/gcc%2Fgraphite-scop-detection.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/324000329be228765b56c2b11d24256a8a30000e/gcc%2Fgraphite-scop-detection.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-scop-detection.c?ref=324000329be228765b56c2b11d24256a8a30000e", "patch": "@@ -25,6 +25,7 @@ along with GCC; see the file COPYING3.  If not see\n /* Workaround for GMP 5.1.3 bug, see PR56019.  */\n #include <stddef.h>\n \n+#include <isl/constraint.h>\n #include <isl/set.h>\n #include <isl/map.h>\n #include <isl/union_map.h>"}, {"sha": "47944f0c3ee732258e5d7f6824a280e8ccc99044", "filename": "gcc/graphite-sese-to-poly.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/324000329be228765b56c2b11d24256a8a30000e/gcc%2Fgraphite-sese-to-poly.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/324000329be228765b56c2b11d24256a8a30000e/gcc%2Fgraphite-sese-to-poly.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-sese-to-poly.c?ref=324000329be228765b56c2b11d24256a8a30000e", "patch": "@@ -24,6 +24,7 @@ along with GCC; see the file COPYING3.  If not see\n /* Workaround for GMP 5.1.3 bug, see PR56019.  */\n #include <stddef.h>\n \n+#include <isl/constraint.h>\n #include <isl/set.h>\n #include <isl/map.h>\n #include <isl/union_map.h>"}, {"sha": "9b9ab887287037ece955ab51c1b992f6eed1cb16", "filename": "gcc/graphite.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/324000329be228765b56c2b11d24256a8a30000e/gcc%2Fgraphite.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/324000329be228765b56c2b11d24256a8a30000e/gcc%2Fgraphite.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite.c?ref=324000329be228765b56c2b11d24256a8a30000e", "patch": "@@ -38,6 +38,7 @@ along with GCC; see the file COPYING3.  If not see\n /* Workaround for GMP 5.1.3 bug, see PR56019.  */\n #include <stddef.h>\n \n+#include <isl/constraint.h>\n #include <isl/set.h>\n #include <isl/map.h>\n #include <isl/options.h>"}]}