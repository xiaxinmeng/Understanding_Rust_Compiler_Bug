{"sha": "af55dae3a378a8d4e111a9dbbf6056358d99c18b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWY1NWRhZTNhMzc4YThkNGUxMTFhOWRiYmY2MDU2MzU4ZDk5YzE4Yg==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1996-03-04T23:07:38Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1996-03-04T23:07:38Z"}, "message": "(mulhisi3-2, mulhisi3-1, mulsidi3_i, umulsidi3_i,\n\nsmulsi3_highpart, umulsi3_highpart): Renames operands 1/2 to 0/1.\n(mulsidi3, umulsidi3): Add support for TARGET_LITTLE_ENDIAN.\n\nFrom-SVN: r11423", "tree": {"sha": "87aaa6a4db5399541af8e0e890b98518724010f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/87aaa6a4db5399541af8e0e890b98518724010f9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/af55dae3a378a8d4e111a9dbbf6056358d99c18b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af55dae3a378a8d4e111a9dbbf6056358d99c18b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/af55dae3a378a8d4e111a9dbbf6056358d99c18b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af55dae3a378a8d4e111a9dbbf6056358d99c18b/comments", "author": null, "committer": null, "parents": [{"sha": "0947013b9a42be26e2a858cd3d8ab0c0e6dc1477", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0947013b9a42be26e2a858cd3d8ab0c0e6dc1477", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0947013b9a42be26e2a858cd3d8ab0c0e6dc1477"}], "stats": {"total": 76, "additions": 54, "deletions": 22}, "files": [{"sha": "417be6ba88ac825de5fac92cda7a1c8df74e7411", "filename": "gcc/config/sh/sh.md", "status": "modified", "additions": 54, "deletions": 22, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af55dae3a378a8d4e111a9dbbf6056358d99c18b/gcc%2Fconfig%2Fsh%2Fsh.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af55dae3a378a8d4e111a9dbbf6056358d99c18b/gcc%2Fconfig%2Fsh%2Fsh.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.md?ref=af55dae3a378a8d4e111a9dbbf6056358d99c18b", "patch": "@@ -428,20 +428,20 @@\n \n (define_insn \"\"\n   [(set (reg:SI 21)\n-\t(mult:SI (zero_extend:SI (match_operand:HI 1 \"arith_reg_operand\" \"r\"))\n-\t\t (zero_extend:SI (match_operand:HI 2 \"arith_reg_operand\" \"r\"))))]\n+\t(mult:SI (zero_extend:SI (match_operand:HI 0 \"arith_reg_operand\" \"r\"))\n+\t\t (zero_extend:SI (match_operand:HI 1 \"arith_reg_operand\" \"r\"))))]\n   \"\"\n-  \"mulu\t%2,%1\"\n+  \"mulu\t%1,%0\"\n   [(set_attr \"type\" \"smpy\")])\n \n (define_insn \"\"\n   [(set (reg:SI 21)\n \t(mult:SI (sign_extend:SI\n-\t\t  (match_operand:HI 1 \"arith_reg_operand\" \"r\"))\n+\t\t  (match_operand:HI 0 \"arith_reg_operand\" \"r\"))\n \t\t (sign_extend:SI\n-\t\t  (match_operand:HI 2 \"arith_reg_operand\" \"r\"))))]\n+\t\t  (match_operand:HI 1 \"arith_reg_operand\" \"r\"))))]\n   \"\"\n-  \"muls\t%2,%1\"\n+  \"muls\t%1,%0\"\n   [(set_attr \"type\" \"smpy\")])\n \n (define_expand \"mulhisi3\"\n@@ -527,12 +527,12 @@\n     }\n }\")\n \n-(define_insn \"\"\n+(define_insn \"mulsidi3_i\"\n   [(set (reg:DI 20)\n-\t(mult:DI (sign_extend:DI (match_operand:SI 1 \"arith_reg_operand\" \"r\"))\n-\t\t (sign_extend:DI (match_operand:SI 2 \"arith_reg_operand\" \"r\"))))]\n+\t(mult:DI (sign_extend:DI (match_operand:SI 0 \"arith_reg_operand\" \"r\"))\n+\t\t (sign_extend:DI (match_operand:SI 1 \"arith_reg_operand\" \"r\"))))]\n   \"TARGET_SH2\"\n-  \"dmuls.l\t%2,%1\"\n+  \"dmuls.l\t%1,%0\"\n   [(set_attr \"type\" \"dmpy\")])\n \n (define_expand \"mulsidi3\"\n@@ -542,14 +542,30 @@\n    (set (match_operand:DI 0 \"arith_reg_operand\" \"\")\n \t(reg:DI 20))]\n   \"TARGET_SH2\"\n-  \"\")\n+  \"\n+{\n+  /* We must swap the two words when copying them from MACH/MACL to the\n+     output register.  */\n+  if (TARGET_LITTLE_ENDIAN)\n+    {\n+      rtx low_dst = operand_subword (operands[0], 0, 1, DImode);\n+      rtx high_dst = operand_subword (operands[0], 1, 1, DImode);\n \n-(define_insn \"\"\n+      emit_insn (gen_mulsidi3_i (operands[1], operands[2]));\n+\n+      emit_insn (gen_rtx (CLOBBER, VOIDmode, operands[0]));\n+      emit_move_insn (low_dst, gen_rtx (REG, SImode, 21));\n+      emit_move_insn (high_dst, gen_rtx (REG, SImode, 20));\n+      DONE;\n+    }\n+}\")\n+\n+(define_insn \"umulsidi3_i\"\n   [(set (reg:DI 20)\n-\t(mult:DI (zero_extend:DI (match_operand:SI 1 \"arith_reg_operand\" \"r\"))\n-\t\t (zero_extend:DI (match_operand:SI 2 \"arith_reg_operand\" \"r\"))))]\n+\t(mult:DI (zero_extend:DI (match_operand:SI 0 \"arith_reg_operand\" \"r\"))\n+\t\t (zero_extend:DI (match_operand:SI 1 \"arith_reg_operand\" \"r\"))))]\n   \"TARGET_SH2\"\n-  \"dmulu.l\t%2,%1\"\n+  \"dmulu.l\t%1,%0\"\n   [(set_attr \"type\" \"dmpy\")])\n \n (define_expand \"umulsidi3\"\n@@ -559,17 +575,33 @@\n    (set (match_operand:DI 0 \"arith_reg_operand\" \"\")\n \t(reg:DI 20))]\n   \"TARGET_SH2\"\n-  \"\")\n+  \"\n+{\n+  /* We must swap the two words when copying them from MACH/MACL to the\n+     output register.  */\n+  if (TARGET_LITTLE_ENDIAN)\n+    {\n+      rtx low_dst = operand_subword (operands[0], 0, 1, DImode);\n+      rtx high_dst = operand_subword (operands[0], 1, 1, DImode);\n+\n+      emit_insn (gen_umulsidi3_i (operands[1], operands[2]));\n+\n+      emit_insn (gen_rtx (CLOBBER, VOIDmode, operands[0]));\n+      emit_move_insn (low_dst, gen_rtx (REG, SImode, 21));\n+      emit_move_insn (high_dst, gen_rtx (REG, SImode, 20));\n+      DONE;\n+    }\n+}\")\n \n (define_insn \"\"\n   [(set (reg:SI 20)\n \t(truncate:SI\n-\t (lshiftrt:DI (mult:DI (sign_extend:DI (match_operand:SI 1 \"arith_reg_operand\" \"r\"))\n-\t\t\t       (sign_extend:DI (match_operand:SI 2 \"arith_reg_operand\" \"r\")))\n+\t (lshiftrt:DI (mult:DI (sign_extend:DI (match_operand:SI 0 \"arith_reg_operand\" \"r\"))\n+\t\t\t       (sign_extend:DI (match_operand:SI 1 \"arith_reg_operand\" \"r\")))\n \t\t      (const_int 32))))\n    (clobber (reg:SI 21))]\n   \"TARGET_SH2\"\n-  \"dmuls.l\t%2,%1\"\n+  \"dmuls.l\t%1,%0\"\n   [(set_attr \"type\" \"dmpy\")])\n \n (define_expand \"smulsi3_highpart\"\n@@ -587,12 +619,12 @@\n (define_insn \"\"\n   [(set (reg:SI 20)\n \t(truncate:SI\n-\t (lshiftrt:DI (mult:DI (zero_extend:DI (match_operand:SI 1 \"arith_reg_operand\" \"r\"))\n-\t\t\t       (zero_extend:DI (match_operand:SI 2 \"arith_reg_operand\" \"r\")))\n+\t (lshiftrt:DI (mult:DI (zero_extend:DI (match_operand:SI 0 \"arith_reg_operand\" \"r\"))\n+\t\t\t       (zero_extend:DI (match_operand:SI 1 \"arith_reg_operand\" \"r\")))\n \t\t      (const_int 32))))\n    (clobber (reg:SI 21))]\n   \"TARGET_SH2\"\n-  \"dmulu.l\t%2,%1\"\n+  \"dmulu.l\t%1,%0\"\n   [(set_attr \"type\" \"dmpy\")])\n \n (define_expand \"umulsi3_highpart\""}]}