{"sha": "5bf51f2f731c28ea9b45e170fc36a2b0d51ba9b2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWJmNTFmMmY3MzFjMjhlYTliNDVlMTcwZmMzNmEyYjBkNTFiYTliMg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2013-12-04T11:25:06Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2013-12-04T11:25:06Z"}, "message": "re PR rtl-optimization/58726 (wrong code at -Os on x86_64-linux-gnu (affecting trunk/4.7/4.6, but not 4.8))\n\n\tPR rtl-optimization/58726\n\t* combine.c (force_to_mode): Fix comment typo.  Don't destructively\n\tmodify x for ROTATE, ROTATERT and IF_THEN_ELSE.\n\n\t* gcc.c-torture/execute/pr58726.c: New test.\n\nFrom-SVN: r205664", "tree": {"sha": "cf6f9692b6ef691ad0b472370f553e0b1c441595", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cf6f9692b6ef691ad0b472370f553e0b1c441595"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5bf51f2f731c28ea9b45e170fc36a2b0d51ba9b2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5bf51f2f731c28ea9b45e170fc36a2b0d51ba9b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5bf51f2f731c28ea9b45e170fc36a2b0d51ba9b2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5bf51f2f731c28ea9b45e170fc36a2b0d51ba9b2/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "77381ee7de541021dccd0030a757fc38f369993b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77381ee7de541021dccd0030a757fc38f369993b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/77381ee7de541021dccd0030a757fc38f369993b"}], "stats": {"total": 62, "additions": 50, "deletions": 12}, "files": [{"sha": "081787c094fde20737aabca4c7b4345aeb183763", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bf51f2f731c28ea9b45e170fc36a2b0d51ba9b2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bf51f2f731c28ea9b45e170fc36a2b0d51ba9b2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5bf51f2f731c28ea9b45e170fc36a2b0d51ba9b2", "patch": "@@ -1,3 +1,9 @@\n+2013-12-04  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR rtl-optimization/58726\n+\t* combine.c (force_to_mode): Fix comment typo.  Don't destructively\n+\tmodify x for ROTATE, ROTATERT and IF_THEN_ELSE.\n+\n 2013-12-04  Jakub Jelinek  <jakub@redhat.com>\n \t    Uros Bizjak  <ubizjak@gmail.com>\n "}, {"sha": "c7eb5e5b02415c2fd47b56b0afa8f6a101fe98ed", "filename": "gcc/combine.c", "status": "modified", "additions": 15, "deletions": 12, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bf51f2f731c28ea9b45e170fc36a2b0d51ba9b2/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bf51f2f731c28ea9b45e170fc36a2b0d51ba9b2/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=5bf51f2f731c28ea9b45e170fc36a2b0d51ba9b2", "patch": "@@ -8029,7 +8029,7 @@ force_to_mode (rtx x, enum machine_mode mode, unsigned HOST_WIDE_INT mask,\n   if (code == CALL || code == ASM_OPERANDS || code == CLOBBER)\n     return x;\n \n-  /* We want to perform the operation is its present mode unless we know\n+  /* We want to perform the operation in its present mode unless we know\n      that the operation is valid in MODE, in which case we do the operation\n      in MODE.  */\n   op_mode = ((GET_MODE_CLASS (mode) == GET_MODE_CLASS (GET_MODE (x))\n@@ -8460,9 +8460,10 @@ force_to_mode (rtx x, enum machine_mode mode, unsigned HOST_WIDE_INT mask,\n \t\t\t\t\t    gen_int_mode (mask, GET_MODE (x)),\n \t\t\t\t\t    XEXP (x, 1));\n \t  if (temp && CONST_INT_P (temp))\n-\t    SUBST (XEXP (x, 0),\n-\t\t   force_to_mode (XEXP (x, 0), GET_MODE (x),\n-\t\t\t\t  INTVAL (temp), next_select));\n+\t    x = simplify_gen_binary (code, GET_MODE (x),\n+\t\t\t\t     force_to_mode (XEXP (x, 0), GET_MODE (x),\n+\t\t\t\t\t\t    INTVAL (temp), next_select),\n+\t\t\t\t     XEXP (x, 1));\n \t}\n       break;\n \n@@ -8530,14 +8531,16 @@ force_to_mode (rtx x, enum machine_mode mode, unsigned HOST_WIDE_INT mask,\n       /* We have no way of knowing if the IF_THEN_ELSE can itself be\n \t written in a narrower mode.  We play it safe and do not do so.  */\n \n-      SUBST (XEXP (x, 1),\n-\t     gen_lowpart_or_truncate (GET_MODE (x),\n-\t\t\t\t      force_to_mode (XEXP (x, 1), mode,\n-\t\t\t\t\t\t     mask, next_select)));\n-      SUBST (XEXP (x, 2),\n-\t     gen_lowpart_or_truncate (GET_MODE (x),\n-\t\t\t\t      force_to_mode (XEXP (x, 2), mode,\n-\t\t\t\t\t\t     mask, next_select)));\n+      op0 = gen_lowpart_or_truncate (GET_MODE (x),\n+\t\t\t\t     force_to_mode (XEXP (x, 1), mode,\n+\t\t\t\t\t\t    mask, next_select));\n+      op1 = gen_lowpart_or_truncate (GET_MODE (x),\n+\t\t\t\t     force_to_mode (XEXP (x, 2), mode,\n+\t\t\t\t\t\t    mask, next_select));\n+      if (op0 != XEXP (x, 1) || op1 != XEXP (x, 2))\n+\tx = simplify_gen_ternary (IF_THEN_ELSE, GET_MODE (x),\n+\t\t\t\t  GET_MODE (XEXP (x, 0)), XEXP (x, 0),\n+\t\t\t\t  op0, op1);\n       break;\n \n     default:"}, {"sha": "912b117ac0ee852c77fe16449e77a1735a32df6c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bf51f2f731c28ea9b45e170fc36a2b0d51ba9b2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bf51f2f731c28ea9b45e170fc36a2b0d51ba9b2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5bf51f2f731c28ea9b45e170fc36a2b0d51ba9b2", "patch": "@@ -1,5 +1,8 @@\n 2013-12-04  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR rtl-optimization/58726\n+\t* gcc.c-torture/execute/pr58726.c: New test.\n+\n \tPR target/59163\n \t* g++.dg/torture/pr59163.C: New test.\n "}, {"sha": "9fa8b6953f191ddeb24e9dd099b44f18570c2f01", "filename": "gcc/testsuite/gcc.c-torture/execute/pr58726.c", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bf51f2f731c28ea9b45e170fc36a2b0d51ba9b2/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr58726.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bf51f2f731c28ea9b45e170fc36a2b0d51ba9b2/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr58726.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr58726.c?ref=5bf51f2f731c28ea9b45e170fc36a2b0d51ba9b2", "patch": "@@ -0,0 +1,26 @@\n+/* PR rtl-optimization/58726 */\n+\n+int a, c;\n+union { int f1; int f2 : 1; } b;\n+\n+short\n+foo (short p)\n+{\n+  return p < 0 ? p : a;\n+}\n+\n+int\n+main ()\n+{\n+  if (sizeof (short) * __CHAR_BIT__ != 16\n+      || sizeof (int) * __CHAR_BIT__ != 32)\n+    return 0;\n+  b.f1 = 56374;\n+  unsigned short d;\n+  int e = b.f2;\n+  d = e == 0 ? b.f1 : 0;\n+  c = foo (d);\n+  if (c != (short) 56374)\n+    __builtin_abort ();\n+  return 0;\n+}"}]}