{"sha": "a152954ea4fee516e83b4f75a17818fbc8d555bb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTE1Mjk1NGVhNGZlZTUxNmU4M2I0Zjc1YTE3ODE4ZmJjOGQ1NTViYg==", "commit": {"author": {"name": "Tom de Vries", "email": "tdevries@suse.de", "date": "2018-12-19T14:20:54Z"}, "committer": {"name": "Tom de Vries", "email": "vries@gcc.gnu.org", "date": "2018-12-19T14:20:54Z"}, "message": "[nvptx] Commit passing pr85381-*.c test-cases\n\nAdd pr85381*.c test-cases that are already passing without the fix for PR85381.\n\nBuild and reg-tested on x86_64 with nvptx accelerator.\n\n2018-12-19  Tom de Vries  <tdevries@suse.de>\n\n\t* testsuite/libgomp.oacc-c-c++-common/pr85381-2.c: New test.\n\t* testsuite/libgomp.oacc-c-c++-common/pr85381-3.c: New test.\n\t* testsuite/libgomp.oacc-c-c++-common/pr85381-4.c: New test.\n\nFrom-SVN: r267268", "tree": {"sha": "33b3a2c426ea95171664075290111d1d59c9d21a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/33b3a2c426ea95171664075290111d1d59c9d21a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a152954ea4fee516e83b4f75a17818fbc8d555bb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a152954ea4fee516e83b4f75a17818fbc8d555bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a152954ea4fee516e83b4f75a17818fbc8d555bb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a152954ea4fee516e83b4f75a17818fbc8d555bb/comments", "author": {"login": "vries", "id": 4057235, "node_id": "MDQ6VXNlcjQwNTcyMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vries", "html_url": "https://github.com/vries", "followers_url": "https://api.github.com/users/vries/followers", "following_url": "https://api.github.com/users/vries/following{/other_user}", "gists_url": "https://api.github.com/users/vries/gists{/gist_id}", "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vries/subscriptions", "organizations_url": "https://api.github.com/users/vries/orgs", "repos_url": "https://api.github.com/users/vries/repos", "events_url": "https://api.github.com/users/vries/events{/privacy}", "received_events_url": "https://api.github.com/users/vries/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "49188cd1f2deb943e4047dbffba7a333875d6479", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49188cd1f2deb943e4047dbffba7a333875d6479", "html_url": "https://github.com/Rust-GCC/gccrs/commit/49188cd1f2deb943e4047dbffba7a333875d6479"}], "stats": {"total": 104, "additions": 104, "deletions": 0}, "files": [{"sha": "ae8801e1eb9ad12525dda59058df8862895e7f47", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a152954ea4fee516e83b4f75a17818fbc8d555bb/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a152954ea4fee516e83b4f75a17818fbc8d555bb/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=a152954ea4fee516e83b4f75a17818fbc8d555bb", "patch": "@@ -1,3 +1,9 @@\n+2018-12-19  Tom de Vries  <tdevries@suse.de>\n+\n+\t* testsuite/libgomp.oacc-c-c++-common/pr85381-2.c: New test.\n+\t* testsuite/libgomp.oacc-c-c++-common/pr85381-3.c: New test.\n+\t* testsuite/libgomp.oacc-c-c++-common/pr85381-4.c: New test.\n+\n 2018-12-19  Tom de Vries  <tdevries@suse.de>\n \n \t* testsuite/lib/libgomp.exp: Add load_lib of scanoffloadrtl.exp."}, {"sha": "6570c64afff5442396dfd1a2ac12f32a3f77491d", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/pr85381-2.c", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a152954ea4fee516e83b4f75a17818fbc8d555bb/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fpr85381-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a152954ea4fee516e83b4f75a17818fbc8d555bb/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fpr85381-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fpr85381-2.c?ref=a152954ea4fee516e83b4f75a17818fbc8d555bb", "patch": "@@ -0,0 +1,36 @@\n+/* { dg-additional-options \"-save-temps\" } */\n+/* { dg-do run { target openacc_nvidia_accel_selected } }\n+   { dg-skip-if \"\" { *-*-* } { \"*\" } { \"-O2\" } } */\n+\n+int\n+main (void)\n+{\n+  int v1;\n+\n+  #pragma acc parallel\n+  #pragma acc loop worker\n+  for (v1 = 0; v1 < 20; v1 += 2)\n+    ;\n+\n+  return 0;\n+}\n+\n+/* Todo: Boths bar.syncs can be removed.\n+   Atm we generate this dead code inbetween forked and joining:\n+\n+                     mov.u32 %r28, %ntid.y;\n+                     mov.u32 %r29, %tid.y;\n+                     add.u32 %r30, %r29, %r29;\n+                     setp.gt.s32     %r31, %r30, 19;\n+             @%r31   bra     $L2;\n+                     add.u32 %r25, %r28, %r28;\n+                     mov.u32 %r24, %r30;\n+     $L3:\n+                     add.u32 %r24, %r24, %r25;\n+                     setp.le.s32     %r33, %r24, 19;\n+             @%r33   bra     $L3;\n+     $L2:\n+\n+   so the loop is not recognized as empty loop (which we detect by seeing if\n+   joining immediately follows forked).  */\n+/* { dg-final { scan-assembler-times \"bar.sync\" 2 } } */"}, {"sha": "c5d1c5add68eba2e3f5de36d0ef67385bda20af9", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/pr85381-3.c", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a152954ea4fee516e83b4f75a17818fbc8d555bb/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fpr85381-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a152954ea4fee516e83b4f75a17818fbc8d555bb/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fpr85381-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fpr85381-3.c?ref=a152954ea4fee516e83b4f75a17818fbc8d555bb", "patch": "@@ -0,0 +1,35 @@\n+/* { dg-additional-options \"-save-temps -w\" } */\n+/* { dg-do run { target openacc_nvidia_accel_selected } }\n+   { dg-skip-if \"\" { *-*-* } { \"*\" } { \"-O2\" } } */\n+\n+int a;\n+#pragma acc declare create(a)\n+\n+#pragma acc routine vector\n+void __attribute__((noinline, noclone))\n+foo_v (void)\n+{\n+  a = 1;\n+}\n+\n+#pragma acc routine worker\n+void __attribute__((noinline, noclone))\n+foo_w (void)\n+{\n+  a = 2;\n+}\n+\n+int\n+main (void)\n+{\n+\n+  #pragma acc parallel\n+  foo_v ();\n+\n+  #pragma acc parallel\n+  foo_w ();\n+\n+  return 0;\n+}\n+\n+/* { dg-final { scan-assembler-not \"bar.sync\" } } */"}, {"sha": "d955d79718dfb9a590467ad49235f14034b434c4", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/pr85381-4.c", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a152954ea4fee516e83b4f75a17818fbc8d555bb/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fpr85381-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a152954ea4fee516e83b4f75a17818fbc8d555bb/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fpr85381-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fpr85381-4.c?ref=a152954ea4fee516e83b4f75a17818fbc8d555bb", "patch": "@@ -0,0 +1,27 @@\n+/* { dg-additional-options \"-save-temps -w\" } */\n+/* { dg-do run { target openacc_nvidia_accel_selected } }\n+   { dg-skip-if \"\" { *-*-* } { \"*\" } { \"-O2\" } } */\n+\n+#define n 1024\n+\n+int\n+main (void)\n+{\n+  #pragma acc parallel\n+  {\n+    #pragma acc loop worker\n+    for (int i = 0; i < n; i++)\n+      ;\n+\n+    #pragma acc loop worker\n+    for (int i = 0; i < n; i++)\n+      ;\n+  }\n+\n+  return 0;\n+}\n+\n+/* Atm, %ntid.y is broadcast from one loop to the next, so there are 2 bar.syncs\n+   for that (the other two are there for the same reason as in pr85381-2.c).\n+   Todo: Recompute %ntid.y instead of broadcasting it. */\n+/* { dg-final { scan-assembler-times \"bar.sync\" 4 } } */"}]}