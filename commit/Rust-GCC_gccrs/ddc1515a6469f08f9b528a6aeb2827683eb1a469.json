{"sha": "ddc1515a6469f08f9b528a6aeb2827683eb1a469", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGRjMTUxNWE2NDY5ZjA4ZjliNTI4YTZhZWIyODI3NjgzZWIxYTQ2OQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-10-11T09:58:30Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-10-11T09:58:30Z"}, "message": "[multiple changes]\n\n2010-10-11  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_attr.adb: Minor reformatting.\n\n2010-10-11  Javier Miranda  <miranda@adacore.com>\n\n\t* sem_ch8.adb (Attribute_Renaming): Add missing check to avoid loading\n\tpackage System.Aux_Dec in VM platforms.\n\n2010-10-11  Arnaud Charlet  <charlet@adacore.com>\n\n\t* sem_prag.adb (Process_Suppress_Unsuppress): Ignore\n\tSuppress/Unsuppress pragmas in codepeer mode.\n\t(Analyze_Pragma [Pragma_Suppress_All]): Do not generate error message in\n\tcodepeer mode.\n\t* einfo.ads: Fix typo.\n\nFrom-SVN: r165290", "tree": {"sha": "3f7472efa3bc1bcbf8d1a4c74c448cc9cddeaf8e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3f7472efa3bc1bcbf8d1a4c74c448cc9cddeaf8e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ddc1515a6469f08f9b528a6aeb2827683eb1a469", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ddc1515a6469f08f9b528a6aeb2827683eb1a469", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ddc1515a6469f08f9b528a6aeb2827683eb1a469", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ddc1515a6469f08f9b528a6aeb2827683eb1a469/comments", "author": null, "committer": null, "parents": [{"sha": "1aa234217483f238c07ff819178d4c64e68fa74e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1aa234217483f238c07ff819178d4c64e68fa74e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1aa234217483f238c07ff819178d4c64e68fa74e"}], "stats": {"total": 52, "additions": 44, "deletions": 8}, "files": [{"sha": "7e347b99acaebf01280887a90dce4e6a25bca278", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddc1515a6469f08f9b528a6aeb2827683eb1a469/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddc1515a6469f08f9b528a6aeb2827683eb1a469/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=ddc1515a6469f08f9b528a6aeb2827683eb1a469", "patch": "@@ -1,3 +1,20 @@\n+2010-10-11  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_attr.adb: Minor reformatting.\n+\n+2010-10-11  Javier Miranda  <miranda@adacore.com>\n+\n+\t* sem_ch8.adb (Attribute_Renaming): Add missing check to avoid loading\n+\tpackage System.Aux_Dec in VM platforms.\n+\n+2010-10-11  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* sem_prag.adb (Process_Suppress_Unsuppress): Ignore\n+\tSuppress/Unsuppress pragmas in codepeer mode.\n+\t(Analyze_Pragma [Pragma_Suppress_All]): Do not generate error message in\n+\tcodepeer mode.\n+\t* einfo.ads: Fix typo.\n+\n 2010-10-11  Emmanuel Briot  <briot@adacore.com>\n \n \t* sinfo.adb: Use GNAT.HTable rather than System.HTable."}, {"sha": "40c0c81f3f13237ea92b08e3565e16a386c45011", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddc1515a6469f08f9b528a6aeb2827683eb1a469/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddc1515a6469f08f9b528a6aeb2827683eb1a469/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=ddc1515a6469f08f9b528a6aeb2827683eb1a469", "patch": "@@ -2040,7 +2040,7 @@ package Einfo is\n --    Is_Discrete_Type (synthesized)\n --       Applies to all entities, true for all discrete types and subtypes\n \n---    Is_Discrete__Or_Fixed_Point_Type (synthesized)\n+--    Is_Discrete_Or_Fixed_Point_Type (synthesized)\n --       Applies to all entities, true for all discrete types and subtypes\n --       and all fixed-point types and subtypes.\n "}, {"sha": "bfddc14222d898190d5898ccd8f0a936f44062a8", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddc1515a6469f08f9b528a6aeb2827683eb1a469/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddc1515a6469f08f9b528a6aeb2827683eb1a469/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=ddc1515a6469f08f9b528a6aeb2827683eb1a469", "patch": "@@ -4456,12 +4456,15 @@ package body Sem_Attr is\n       when Attribute_Type_Key =>\n          Check_E0;\n          Check_Type;\n+\n+         --  This processing belongs in Eval_Attribute ???\n+\n          declare\n             function Type_Key return String_Id;\n-            --  A very preliminary implementation.\n-            --  For now, a signature consists of only the type name.\n-            --  This is clearly incomplete (e.g., adding a new field to\n-            --  a record type should change the type's Type_Key attribute).\n+            --  A very preliminary implementation. For now, a signature\n+            --  consists of only the type name. This is clearly incomplete\n+            --  (e.g., adding a new field to a record type should change the\n+            --  type's Type_Key attribute).\n \n             --------------\n             -- Type_Key --\n@@ -4470,13 +4473,15 @@ package body Sem_Attr is\n             function Type_Key return String_Id is\n                Full_Name : constant String_Id :=\n                              Fully_Qualified_Name_String (Entity (P));\n+\n             begin\n                --  Copy all characters in Full_Name but the trailing NUL\n \n                Start_String;\n                for J in 1 .. String_Length (Full_Name) - 1 loop\n                   Store_String_Char (Get_String_Char (Full_Name, Int (J)));\n                end loop;\n+\n                Store_String_Chars (\"'Type_Key\");\n                return End_String;\n             end Type_Key;"}, {"sha": "8404e95472c3675ee17032c920e3a00ffeeaa872", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddc1515a6469f08f9b528a6aeb2827683eb1a469/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddc1515a6469f08f9b528a6aeb2827683eb1a469/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=ddc1515a6469f08f9b528a6aeb2827683eb1a469", "patch": "@@ -64,6 +64,7 @@ with Sinfo.CN; use Sinfo.CN;\n with Snames;   use Snames;\n with Style;    use Style;\n with Table;\n+with Targparm; use Targparm;\n with Tbuild;   use Tbuild;\n with Uintp;    use Uintp;\n \n@@ -2933,7 +2934,11 @@ package body Sem_Ch8 is\n       --  type is still not frozen). We exclude from this processing generic\n       --  formal subprograms found in instantiations and AST_Entry renamings.\n \n-      if not Present (Corresponding_Formal_Spec (N))\n+      --  We must exclude VM targets because entity AST_Handler is defined in\n+      --  package System.Aux_Dec which is not available in those platforms.\n+\n+      if VM_Target = No_VM\n+        and then not Present (Corresponding_Formal_Spec (N))\n         and then Etype (Nam) /= RTE (RE_AST_Handler)\n       then\n          declare"}, {"sha": "5a845f47e6e63f31a96a45f63e181b00969784fa", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddc1515a6469f08f9b528a6aeb2827683eb1a469/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddc1515a6469f08f9b528a6aeb2827683eb1a469/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=ddc1515a6469f08f9b528a6aeb2827683eb1a469", "patch": "@@ -4689,6 +4689,13 @@ package body Sem_Prag is\n       --  Start of processing for Process_Suppress_Unsuppress\n \n       begin\n+         --  Ignore pragma Suppress/Unsuppress in codepeer mode: we want to\n+         --  generate checks for analysis purposes, as set by -gnatC.\n+\n+         if CodePeer_Mode then\n+            return;\n+         end if;\n+\n          --  Suppress/Unsuppress can appear as a configuration pragma, or in a\n          --  declarative part or a package spec (RM 11.5(5)).\n \n@@ -11995,8 +12002,10 @@ package body Sem_Prag is\n               or else not Is_List_Member (N)\n               or else List_Containing (N) /= Pragmas_After (Parent (N))\n             then\n-               Error_Pragma\n-                 (\"misplaced pragma%, must follow compilation unit\");\n+               if not CodePeer_Mode then\n+                  Error_Pragma\n+                    (\"misplaced pragma%, must follow compilation unit\");\n+               end if;\n             end if;\n \n          -------------------------"}]}