{"sha": "253b6b828a1a1bd10e93829a57eedc82e7d1eff6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjUzYjZiODI4YTFhMWJkMTBlOTM4MjlhNTdlZWRjODJlN2QxZWZmNg==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2000-08-09T19:52:35Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2000-08-09T19:52:35Z"}, "message": "c-typeck.c (process_init_element): For -Wtraditional, warn about initialization of unions.\n\n\t* c-typeck.c (process_init_element): For -Wtraditional, warn about\n\tinitialization of unions.\n\n\t* invoke.texi (-Wtraditional): Document new behavior.\n\nFrom-SVN: r35595", "tree": {"sha": "642699475c334e9848542f89bced5ff0c706e4ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/642699475c334e9848542f89bced5ff0c706e4ed"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/253b6b828a1a1bd10e93829a57eedc82e7d1eff6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/253b6b828a1a1bd10e93829a57eedc82e7d1eff6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/253b6b828a1a1bd10e93829a57eedc82e7d1eff6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/253b6b828a1a1bd10e93829a57eedc82e7d1eff6/comments", "author": null, "committer": null, "parents": [{"sha": "2bf9a2abfe05e436bd66d6c30cda4b8c15a6b84c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2bf9a2abfe05e436bd66d6c30cda4b8c15a6b84c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2bf9a2abfe05e436bd66d6c30cda4b8c15a6b84c"}], "stats": {"total": 23, "additions": 23, "deletions": 0}, "files": [{"sha": "2ff8a183c8177b4f4bd7bbc678782407f760f447", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/253b6b828a1a1bd10e93829a57eedc82e7d1eff6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/253b6b828a1a1bd10e93829a57eedc82e7d1eff6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=253b6b828a1a1bd10e93829a57eedc82e7d1eff6", "patch": "@@ -1,3 +1,10 @@\n+2000-08-09  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* c-typeck.c (process_init_element): For -Wtraditional, warn about\n+\tinitialization of unions.\n+\n+\t* invoke.texi (-Wtraditional): Document new behavior.\n+\n 2000-08-09  Zack Weinberg  <zack@wolery.cumb.org>\n \n \t* configure.in (--enable-c-cpplib): Uncomment.  Use AC_DEFINE"}, {"sha": "66ec40e3034e5149b8012db12c490d54789b1fa5", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/253b6b828a1a1bd10e93829a57eedc82e7d1eff6/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/253b6b828a1a1bd10e93829a57eedc82e7d1eff6/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=253b6b828a1a1bd10e93829a57eedc82e7d1eff6", "patch": "@@ -6400,6 +6400,15 @@ process_init_element (value)\n \t    fieldtype = TYPE_MAIN_VARIANT (fieldtype);\n \t  fieldcode = TREE_CODE (fieldtype);\n \n+\t  /* Warn that traditional C rejects initialization of unions.\n+\t     We skip the warning if the value is zero.  This is done\n+\t     under the assumption that the zero initializer in user\n+\t     code appears conditioned on e.g. __STDC__ to avoid\n+\t     \"missing initializer\" warnings and relies on default\n+\t     initialization to zero in the traditional C case.  */\n+\t  if (warn_traditional && !integer_zerop (value))\n+\t    warning (\"traditional C rejects initialization of unions\");\n+\n \t  /* Accept a string constant to initialize a subarray.  */\n \t  if (value != 0\n \t      && fieldcode == ARRAY_TYPE"}, {"sha": "a1096f1d274cc8547498b5645f18bfb486d50955", "filename": "gcc/invoke.texi", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/253b6b828a1a1bd10e93829a57eedc82e7d1eff6/gcc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/253b6b828a1a1bd10e93829a57eedc82e7d1eff6/gcc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Finvoke.texi?ref=253b6b828a1a1bd10e93829a57eedc82e7d1eff6", "patch": "@@ -1831,6 +1831,13 @@ Initialization of automatic aggregates.\n @item\n Identifier conflicts with labels.  Traditional C lacks a separate\n namespace for labels.\n+\n+@item\n+Initialization of unions.  If the initializer is zero, the warning is\n+omitted.  This is done under the assumption that the zero initializer in\n+user code appears conditioned on e.g. @code{__STDC__} to avoid missing\n+initializer warnings and relies on default initialization to zero in the\n+traditional C case.\n @end itemize\n \n @item -Wundef"}]}