{"sha": "f686ec0522f54254bd604ac9fc751f0b1f906150", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjY4NmVjMDUyMmY1NDI1NGJkNjA0YWM5ZmM3NTFmMGIxZjkwNjE1MA==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2007-02-27T20:32:13Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2007-02-27T20:32:13Z"}, "message": "mkheaders.in (incdir): Use include-fixed not include.\n\nfixincludes:\n\t* mkheaders.in (incdir): Use include-fixed not include.\n\ngcc:\n\t* Makefile.in (PREPROCESSOR_DEFINES, test-protoize-simple): Define\n\tFIXED_INCLUDE_DIR.\n\t(stmp-int-hdrs, stmp-fixinc, install-headers): Use include-fixed\n\tfor fixed headers and limits.h.\n\t(install-include-dir, install-headers-tar, install-headers-cpio,\n\tinstall-headers-cp, real-install-headers-tar,\n\treal-install-headers-cpio, real-install-headers-cp): Handle\n\tinclude-fixed as well as include.\n\t(install-mkheaders): Don't install files that go only in include\n\tnot include-fixed.\n\t* cppdefault.c (cpp_include_defaults): Separate FIXED_INCLUDE_DIR\n\tfrom GCC_INCLUDE_DIR.\n\t* gcc.c (process_command): Remove special -BstageN/ handling.\n\t(do_spec_1): Add include-fixed directories.\n\nFrom-SVN: r122384", "tree": {"sha": "3e93aea7c703d1603d74187abbc272a37ad77597", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3e93aea7c703d1603d74187abbc272a37ad77597"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f686ec0522f54254bd604ac9fc751f0b1f906150", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f686ec0522f54254bd604ac9fc751f0b1f906150", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f686ec0522f54254bd604ac9fc751f0b1f906150", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f686ec0522f54254bd604ac9fc751f0b1f906150/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f4e39278b3325b745acf5d70eb2c7800544dd87f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4e39278b3325b745acf5d70eb2c7800544dd87f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f4e39278b3325b745acf5d70eb2c7800544dd87f"}], "stats": {"total": 121, "additions": 70, "deletions": 51}, "files": [{"sha": "d870ae423c73e2e626f5c61ec4372acf02d6c30a", "filename": "fixincludes/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f686ec0522f54254bd604ac9fc751f0b1f906150/fixincludes%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f686ec0522f54254bd604ac9fc751f0b1f906150/fixincludes%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2FChangeLog?ref=f686ec0522f54254bd604ac9fc751f0b1f906150", "patch": "@@ -1,3 +1,7 @@\n+2007-02-27  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* mkheaders.in (incdir): Use include-fixed not include.\n+\n 2007-02-15  Brooks Moses  <brooks.moses@codesourcery.com>\n \n \t* Makefile.in: Added \"pdf\" target to .PHONY."}, {"sha": "cfe826eca0a94f8bc3aeba1dca92718ec37dc077", "filename": "fixincludes/mkheaders.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f686ec0522f54254bd604ac9fc751f0b1f906150/fixincludes%2Fmkheaders.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f686ec0522f54254bd604ac9fc751f0b1f906150/fixincludes%2Fmkheaders.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Fmkheaders.in?ref=f686ec0522f54254bd604ac9fc751f0b1f906150", "patch": "@@ -77,7 +77,7 @@ libexecsubdir=${libexecdir}/gcc/${target_noncanonical}/${version}\n \n itoolsdir=${libexecsubdir}/install-tools\n itoolsdatadir=${libsubdir}/install-tools\n-incdir=${libsubdir}/include\n+incdir=${libsubdir}/include-fixed\n \n . ${itoolsdatadir}/mkheaders.conf\n "}, {"sha": "e154b5c128e61f064687497d3e03fd14c9479d75", "filename": "gcc/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f686ec0522f54254bd604ac9fc751f0b1f906150/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f686ec0522f54254bd604ac9fc751f0b1f906150/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f686ec0522f54254bd604ac9fc751f0b1f906150", "patch": "@@ -1,3 +1,20 @@\n+2007-02-27  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* Makefile.in (PREPROCESSOR_DEFINES, test-protoize-simple): Define\n+\tFIXED_INCLUDE_DIR.\n+\t(stmp-int-hdrs, stmp-fixinc, install-headers): Use include-fixed\n+\tfor fixed headers and limits.h.\n+\t(install-include-dir, install-headers-tar, install-headers-cpio,\n+\tinstall-headers-cp, real-install-headers-tar,\n+\treal-install-headers-cpio, real-install-headers-cp): Handle\n+\tinclude-fixed as well as include.\n+\t(install-mkheaders): Don't install files that go only in include\n+\tnot include-fixed.\n+\t* cppdefault.c (cpp_include_defaults): Separate FIXED_INCLUDE_DIR\n+\tfrom GCC_INCLUDE_DIR.\n+\t* gcc.c (process_command): Remove special -BstageN/ handling.\n+\t(do_spec_1): Add include-fixed directories.\n+\n 2007-02-27  Bernd Schmidt  <bernd.schmidt@analog.com>\n \n \t* config/bfin/t-bfin-elf (LIB1ASMFUNCS): Add _umulsi3_highpart and"}, {"sha": "75c95ca86818ceb18918aa1750c444018ed259b5", "filename": "gcc/Makefile.in", "status": "modified", "additions": 38, "deletions": 27, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f686ec0522f54254bd604ac9fc751f0b1f906150/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f686ec0522f54254bd604ac9fc751f0b1f906150/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=f686ec0522f54254bd604ac9fc751f0b1f906150", "patch": "@@ -3207,6 +3207,7 @@ intl.o: intl.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) intl.h Makefile\n \n PREPROCESSOR_DEFINES = \\\n   -DGCC_INCLUDE_DIR=\\\"$(libsubdir)/include\\\" \\\n+  -DFIXED_INCLUDE_DIR=\\\"$(libsubdir)/include-fixed\\\" \\\n   -DGPLUSPLUS_INCLUDE_DIR=\\\"$(gcc_gxx_include_dir)\\\" \\\n   -DGPLUSPLUS_TOOL_INCLUDE_DIR=\\\"$(gcc_gxx_include_dir)/$(target_noncanonical)\\\" \\\n   -DGPLUSPLUS_BACKWARD_INCLUDE_DIR=\\\"$(gcc_gxx_include_dir)/backward\\\" \\\n@@ -3269,6 +3270,7 @@ test-protoize-simple: ./protoize ./unprotoize $(GCC_PASSES)\n \t./protoize -N -B ./ -x getopt.h -c \"-B./ -Wall -Wwrite-strings \\\n \t  $(GCC_CFLAGS) $(INCLUDES) \\\n \t  -DGCC_INCLUDE_DIR=0 \\\n+\t  -DFIXED_INCLUDE_DIR=0 \\\n \t  -DGPLUSPLUS_INCLUDE_DIR=0 \\\n \t  -DCROSS_INCLUDE_DIR=0 \\\n \t  -DTOOL_INCLUDE_DIR=0 \\\n@@ -3281,6 +3283,7 @@ test-protoize-simple: ./protoize ./unprotoize $(GCC_PASSES)\n \t./unprotoize -N -x getopt.h -c \"-B./ -Wall -Wwrite-strings \\\n \t  $(GCC_CFLAGS) $(INCLUDES) \\\n \t  -DGCC_INCLUDE_DIR=0 \\\n+\t  -DFIXED_INCLUDE_DIR=0 \\\n \t  -DGPLUSPLUS_INCLUDE_DIR=0 \\\n \t  -DCROSS_INCLUDE_DIR=0 \\\n \t  -DTOOL_INCLUDE_DIR=0 \\\n@@ -3317,18 +3320,19 @@ GCOV_DUMP_OBJS = gcov-dump.o version.o errors.o\n gcov-dump$(exeext): $(GCOV_DUMP_OBJS) $(LIBDEPS)\n \t$(CC) $(ALL_CFLAGS) $(LDFLAGS) $(GCOV_DUMP_OBJS) $(LIBS) -o $@\n #\f\n-# Build the include directory.  The stamp files are stmp-* rather than\n+# Build the include directories.  The stamp files are stmp-* rather than\n # s-* so that mostlyclean does not force the include directory to\n # be rebuilt.\n \n-# Build the include directory\n+# Build the include directories.\n stmp-int-hdrs: $(STMP_FIXINC) $(USER_H) xlimits.h $(UNWIND_H)\n # Copy in the headers provided with gcc.\n # The sed command gets just the last file name component;\n # this is necessary because VPATH could add a dirname.\n # Using basename would be simpler, but some systems don't have it.\n # The touch command is here to workaround an AIX/Linux NFS bug.\n \t-if [ -d include ] ; then true; else mkdir include; chmod a+rx include; fi\n+\t-if [ -d include-fixed ] ; then true; else mkdir include-fixed; chmod a+rx include-fixed; fi\n \tfor file in .. $(USER_H); do \\\n \t  if [ X$$file != X.. ]; then \\\n \t    realfile=`echo $$file | sed -e 's|.*/\\([^/]*\\)$$|\\1|'`; \\\n@@ -3338,15 +3342,15 @@ stmp-int-hdrs: $(STMP_FIXINC) $(USER_H) xlimits.h $(UNWIND_H)\n \t    chmod a+r include/$$realfile; \\\n \t  fi; \\\n \tdone\n-\trm -f include/limits.h\n-\tcp xlimits.h include/limits.h\n+\trm -f include-fixed/limits.h\n+\tcp xlimits.h include-fixed/limits.h\n+\tchmod a+r include-fixed/limits.h\n \trm -f include/unwind.h\n \tcp $(UNWIND_H) include/unwind.h\n-\tchmod a+r include/limits.h\n # Install the README\n-\trm -f include/README\n-\tcp $(srcdir)/../fixincludes/README-fixinc include/README\n-\tchmod a+r include/README\n+\trm -f include-fixed/README\n+\tcp $(srcdir)/../fixincludes/README-fixinc include-fixed/README\n+\tchmod a+r include-fixed/README\n \t$(STAMP) $@\n \n .PHONY: install-gcc-tooldir\n@@ -3389,8 +3393,8 @@ stmp-fixinc: gsyslimits.h macro_list \\\n \t  if test \"x${SYSTEM_HEADER_DIR}\" = \"x$${tooldir_sysinc}\"; \\\n \t  then sleep 1; else exit 1; fi; \\\n \tfi\n-\trm -rf include; mkdir include\n-\t-chmod a+rx include\n+\trm -rf include-fixed; mkdir include-fixed\n+\t-chmod a+rx include-fixed\n \tif [ -d ../prev-gcc ]; then \\\n \t  cd ../prev-gcc && \\\n \t  $(MAKE) real-$(INSTALL_HEADERS_DIR) DESTDIR=`pwd`/../gcc/ \\\n@@ -3400,16 +3404,16 @@ stmp-fixinc: gsyslimits.h macro_list \\\n \t    SHELL='$(SHELL)'; MACRO_LIST=`${PWD_COMMAND}`/macro_list ; \\\n \t    export TARGET_MACHINE srcdir SHELL MACRO_LIST && \\\n \t    cd $(build_objdir)/fixincludes && \\\n-\t    $(SHELL) ./fixinc.sh ../../gcc/include \\\n+\t    $(SHELL) ./fixinc.sh ../../gcc/include-fixed \\\n \t      $(SYSTEM_HEADER_DIR) $(OTHER_FIXINCLUDES_DIRS) ); \\\n-\t  rm -f include/syslimits.h; \\\n-\t  if [ -f include/limits.h ]; then \\\n-\t    mv include/limits.h include/syslimits.h; \\\n+\t  rm -f include-fixed/syslimits.h; \\\n+\t  if [ -f include-fixed/limits.h ]; then \\\n+\t    mv include-fixed/limits.h include-fixed/syslimits.h; \\\n \t  else \\\n-\t    cp $(srcdir)/gsyslimits.h include/syslimits.h; \\\n+\t    cp $(srcdir)/gsyslimits.h include-fixed/syslimits.h; \\\n \t  fi; \\\n \tfi\n-\tchmod a+r include/syslimits.h\n+\tchmod a+r include-fixed/syslimits.h\n \t$(STAMP) stmp-fixinc\n \n # Files related to the fixproto script.\n@@ -3944,23 +3948,26 @@ install-headers: $(INSTALL_HEADERS_DIR)\n # Fix symlinks to absolute paths in the installed include directory to\n # point to the installed directory, not the build directory.\n # Don't need to use LN_S here since we really do need ln -s and no substitutes.\n-\t-files=`cd $(DESTDIR)$(libsubdir)/include; find . -type l -print 2>/dev/null`; \\\n+\t-files=`cd $(DESTDIR)$(libsubdir)/include-fixed; find . -type l -print 2>/dev/null`; \\\n \tif [ $$? -eq 0 ]; then \\\n-\t  dir=`cd include; ${PWD_COMMAND}`; \\\n+\t  dir=`cd include-fixed; ${PWD_COMMAND}`; \\\n \t  for i in $$files; do \\\n-\t    dest=`ls -ld $(DESTDIR)$(libsubdir)/include/$$i | sed -n 's/.*-> //p'`; \\\n+\t    dest=`ls -ld $(DESTDIR)$(libsubdir)/include-fixed/$$i | sed -n 's/.*-> //p'`; \\\n \t    if expr \"$$dest\" : \"$$dir.*\" > /dev/null; then \\\n-\t      rm -f $(DESTDIR)$(libsubdir)/include/$$i; \\\n-\t      ln -s `echo $$i | sed \"s|/[^/]*|/..|g\" | sed 's|/..$$||'``echo \"$$dest\" | sed \"s|$$dir||\"` $(DESTDIR)$(libsubdir)/include/$$i; \\\n+\t      rm -f $(DESTDIR)$(libsubdir)/include-fixed/$$i; \\\n+\t      ln -s `echo $$i | sed \"s|/[^/]*|/..|g\" | sed 's|/..$$||'``echo \"$$dest\" | sed \"s|$$dir||\"` $(DESTDIR)$(libsubdir)/include-fixed/$$i; \\\n \t    fi; \\\n \t  done; \\\n \tfi\n \n # Create or recreate the gcc private include file directory.\n install-include-dir: installdirs\n \t-rm -rf $(DESTDIR)$(libsubdir)/include\n+\t-rm -rf $(DESTDIR)$(libsubdir)/include-fixed\n \tmkdir $(DESTDIR)$(libsubdir)/include\n+\tmkdir $(DESTDIR)$(libsubdir)/include-fixed\n \t-chmod a+rx $(DESTDIR)$(libsubdir)/include\n+\t-chmod a+rx $(DESTDIR)$(libsubdir)/include-fixed\n \n # Create or recreate the install-tools include file directory.\n itoolsdir = $(libexecsubdir)/install-tools\n@@ -3977,6 +3984,8 @@ install-headers-tar: stmp-int-hdrs $(STMP_FIXPROTO) install-include-dir\n # output of `cd', but some shells lose on redirection within `()'s\n \t(cd `${PWD_COMMAND}`/include ; \\\n \t tar -cf - .; exit 0) | (cd $(DESTDIR)$(libsubdir)/include; tar xpf - )\n+\t(cd `${PWD_COMMAND}`/include-fixed ; \\\n+\t tar -cf - .; exit 0) | (cd $(DESTDIR)$(libsubdir)/include-fixed; tar xpf - )\n # /bin/sh on some systems returns the status of the first tar,\n # and that can lose with GNU tar which always writes a full block.\n # So use `exit 0' to ignore its exit status.\n@@ -3986,33 +3995,35 @@ install-headers-cpio: stmp-int-hdrs $(STMP_FIXPROTO) install-include-dir\n # See discussion about the use of `pwd` above\n \tcd `${PWD_COMMAND}`/include ; \\\n \tfind . -print | cpio -pdum $(DESTDIR)$(libsubdir)/include\n+\tcd `${PWD_COMMAND}`/include-fixed ; \\\n+\tfind . -print | cpio -pdum $(DESTDIR)$(libsubdir)/include-fixed\n \n # Install the include directory using cp.\n install-headers-cp: stmp-int-hdrs $(STMP_FIXPROTO) install-include-dir\n \tcp -p -r include $(DESTDIR)$(libsubdir)\n+\tcp -p -r include-fixed $(DESTDIR)$(libsubdir)\n \n # Targets without dependencies, for use in prev-gcc during bootstrap.\n real-install-headers-tar:\n \t(cd `${PWD_COMMAND}`/include ; \\\n \t tar -cf - .; exit 0) | (cd $(DESTDIR)$(libsubdir)/include; tar xpf - )\n+\t(cd `${PWD_COMMAND}`/include-fixed ; \\\n+\t tar -cf - .; exit 0) | (cd $(DESTDIR)$(libsubdir)/include-fixed; tar xpf - )\n \n real-install-headers-cpio:\n \tcd `${PWD_COMMAND}`/include ; \\\n \tfind . -print | cpio -pdum $(DESTDIR)$(libsubdir)/include\n+\tcd `${PWD_COMMAND}`/include-fixed ; \\\n+\tfind . -print | cpio -pdum $(DESTDIR)$(libsubdir)/include-fixed\n \n real-install-headers-cp:\n \tcp -p -r include $(DESTDIR)$(libsubdir)\n+\tcp -p -r include-fixed $(DESTDIR)$(libsubdir)\n \n # Install supporting files for fixincludes to be run later.\n install-mkheaders: stmp-int-hdrs $(STMP_FIXPROTO) install-itoolsdirs \\\n   macro_list xlimits.h\n-\tfor file in $(USER_H); do \\\n-\t  realfile=`echo $$file | sed -e 's|.*/\\([^/]*\\)$$|\\1|'`; \\\n-\t  $(INSTALL_DATA) $$file \\\n-\t    $(DESTDIR)$(itoolsdatadir)/include/$$realfile ; \\\n-\tdone\n \t$(INSTALL_DATA) xlimits.h $(DESTDIR)$(itoolsdatadir)/include/limits.h\n-\t$(INSTALL_DATA) $(UNWIND_H) $(DESTDIR)$(itoolsdatadir)/include/unwind.h\n \t$(INSTALL_DATA) $(srcdir)/gsyslimits.h \\\n \t  $(DESTDIR)$(itoolsdatadir)/gsyslimits.h\n \t$(INSTALL_DATA) macro_list $(DESTDIR)$(itoolsdatadir)/macro_list"}, {"sha": "afe358e106728376d724b5898e07b68d5df27751", "filename": "gcc/cppdefault.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f686ec0522f54254bd604ac9fc751f0b1f906150/gcc%2Fcppdefault.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f686ec0522f54254bd604ac9fc751f0b1f906150/gcc%2Fcppdefault.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcppdefault.c?ref=f686ec0522f54254bd604ac9fc751f0b1f906150", "patch": "@@ -66,9 +66,13 @@ const struct default_include cpp_include_defaults[]\n     { PREFIX_INCLUDE_DIR, 0, 0, 1, 0, 0 },\n #endif\n #ifdef GCC_INCLUDE_DIR\n-    /* This is the dir for fixincludes and for gcc's private headers.  */\n+    /* This is the dir for gcc's private headers.  */\n     { GCC_INCLUDE_DIR, \"GCC\", 0, 0, 0, 0 },\n #endif\n+#ifdef FIXED_INCLUDE_DIR\n+    /* This is the dir for fixincludes.  */\n+    { FIXED_INCLUDE_DIR, \"GCC\", 0, 0, 0, 0 },\n+#endif\n #ifdef CROSS_INCLUDE_DIR\n     /* One place the target system's headers might be.  */\n     { CROSS_INCLUDE_DIR, \"GCC\", 0, 0, 0, 0 },"}, {"sha": "808699d94274e105bc4e6bfd1cb07e800c9734be", "filename": "gcc/gcc.c", "status": "modified", "additions": 5, "deletions": 22, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f686ec0522f54254bd604ac9fc751f0b1f906150/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f686ec0522f54254bd604ac9fc751f0b1f906150/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=f686ec0522f54254bd604ac9fc751f0b1f906150", "patch": "@@ -3816,28 +3816,6 @@ warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\\n\\n\"\n \t\t    value = tmp;\n \t\t  }\n \n-\t\t/* As a kludge, if the arg is \"[foo/]stageN/\", just\n-\t\t   add \"[foo/]include\" to the include prefix.  */\n-\t\tif ((len == 7\n-\t\t     || (len > 7\n-\t\t\t && (IS_DIR_SEPARATOR (value[len - 8]))))\n-\t\t    && strncmp (value + len - 7, \"stage\", 5) == 0\n-\t\t    && ISDIGIT (value[len - 2])\n-\t\t    && (IS_DIR_SEPARATOR (value[len - 1])))\n-\t\t  {\n-\t\t    if (len == 7)\n-\t\t      add_prefix (&include_prefixes, \"./\", NULL,\n-\t\t\t\t  PREFIX_PRIORITY_B_OPT, 0, 0);\n-\t\t    else\n-\t\t      {\n-\t\t        char *string = xmalloc (len - 6);\n-\t\t\tmemcpy (string, value, len - 7);\n-\t\t\tstring[len - 7] = 0;\n-\t\t        add_prefix (&include_prefixes, string, NULL,\n-\t\t\t\t    PREFIX_PRIORITY_B_OPT, 0, 0);\n-\t\t      }\n-\t\t  }\n-\n \t\tadd_prefix (&exec_prefixes, value, NULL,\n \t\t\t    PREFIX_PRIORITY_B_OPT, 0, 0);\n \t\tadd_prefix (&startfile_prefixes, value, NULL,\n@@ -4998,6 +4976,11 @@ do_spec_1 (const char *spec, int inswitch, const char *soft_matched_part)\n \n \t      for_each_path (&include_prefixes, false, info.append_len,\n \t\t\t     spec_path, &info);\n+\n+\t      info.append = \"include-fixed\";\n+\t      info.append_len = strlen (info.append);\n+\t      for_each_path (&include_prefixes, false, info.append_len,\n+\t\t\t     spec_path, &info);\n \t    }\n \t    break;\n "}]}