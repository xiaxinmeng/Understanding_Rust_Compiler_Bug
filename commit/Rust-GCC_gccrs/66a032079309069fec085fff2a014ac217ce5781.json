{"sha": "66a032079309069fec085fff2a014ac217ce5781", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjZhMDMyMDc5MzA5MDY5ZmVjMDg1ZmZmMmEwMTRhYzIxN2NlNTc4MQ==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2020-10-05T22:06:19Z"}, "committer": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2020-10-05T22:06:48Z"}, "message": "c++: Fix typo in NON_UNION_CLASS_TYPE_P.\n\ngcc/cp/ChangeLog:\n\n\t* cp-tree.h (NON_UNION_CLASS_TYPE_P): Fix typo in a comment.", "tree": {"sha": "759e25207fe786d4950d823c41154644af18049f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/759e25207fe786d4950d823c41154644af18049f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/66a032079309069fec085fff2a014ac217ce5781", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66a032079309069fec085fff2a014ac217ce5781", "html_url": "https://github.com/Rust-GCC/gccrs/commit/66a032079309069fec085fff2a014ac217ce5781", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66a032079309069fec085fff2a014ac217ce5781/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1c72f460e9e4fce1220e426989226dfeb0db816e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c72f460e9e4fce1220e426989226dfeb0db816e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1c72f460e9e4fce1220e426989226dfeb0db816e"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "c7b5e7915aeb2dddce98116b1a6ca9edfb2ba409", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66a032079309069fec085fff2a014ac217ce5781/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66a032079309069fec085fff2a014ac217ce5781/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=66a032079309069fec085fff2a014ac217ce5781", "patch": "@@ -2064,7 +2064,7 @@ enum languages { lang_c, lang_cplusplus };\n #define CLASS_TYPE_P(T) \\\n   (RECORD_OR_UNION_CODE_P (TREE_CODE (T)) && TYPE_LANG_FLAG_5 (T))\n \n-/* Nonzero if T is a class type but not an union.  */\n+/* Nonzero if T is a class type but not a union.  */\n #define NON_UNION_CLASS_TYPE_P(T) \\\n   (TREE_CODE (T) == RECORD_TYPE && TYPE_LANG_FLAG_5 (T))\n "}]}