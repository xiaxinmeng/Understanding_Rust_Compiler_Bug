{"sha": "06145cb9b44f59899973a773983c4adfe7f21f72", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDYxNDVjYjliNDRmNTk4OTk5NzNhNzczOTgzYzRhZGZlN2YyMWY3Mg==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2005-08-16T00:13:53Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2005-08-16T00:13:53Z"}, "message": "aclocal.m4 (gcc_AC_FUNC_PRINTF_PTR): Delete.\n\n\t* aclocal.m4 (gcc_AC_FUNC_PRINTF_PTR): Delete.\n\t* configure.ac: Don't call gcc_AC_FUNC_PRINTF_PTR.\n\t* system.h (HOST_PTR_PRINTF): Don't define, poison it.\n\n\t* bitmap.c, c-decl.c, config/i386/i386-interix.h,\n\tconfig/iq2000/iq2000.c, mips-tfile.c, print-rtl.c, print-tree.c:\n\tDelete HOST_PTR_PRINTF.\n\n\t* configure, config.in: Regenerate.\n\ncp:\n\t* name-lookup.c, ptree.c: Delete HOST_PTR_PRINTF.\n\nFrom-SVN: r103135", "tree": {"sha": "774ee5769490a67cd97563023ebfcb374ef18a6a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/774ee5769490a67cd97563023ebfcb374ef18a6a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/06145cb9b44f59899973a773983c4adfe7f21f72", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06145cb9b44f59899973a773983c4adfe7f21f72", "html_url": "https://github.com/Rust-GCC/gccrs/commit/06145cb9b44f59899973a773983c4adfe7f21f72", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06145cb9b44f59899973a773983c4adfe7f21f72/comments", "author": null, "committer": null, "parents": [{"sha": "54778d9cf50cf51781b7a1d08d963a6c8e803ac1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54778d9cf50cf51781b7a1d08d963a6c8e803ac1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/54778d9cf50cf51781b7a1d08d963a6c8e803ac1"}], "stats": {"total": 184, "additions": 46, "deletions": 138}, "files": [{"sha": "fac404bb23e18b349bdaf66e0277994848b68bb9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06145cb9b44f59899973a773983c4adfe7f21f72/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06145cb9b44f59899973a773983c4adfe7f21f72/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=06145cb9b44f59899973a773983c4adfe7f21f72", "patch": "@@ -1,3 +1,16 @@\n+2005-08-15  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* aclocal.m4 (gcc_AC_FUNC_PRINTF_PTR): Delete.\n+\t* configure.ac: Don't call gcc_AC_FUNC_PRINTF_PTR.\n+\t* system.h (HOST_PTR_PRINTF): Don't define, poison it.\n+\t\n+\t* bitmap.c, c-decl.c, config/i386/i386-interix.h,\n+\tconfig/iq2000/iq2000.c, mips-tfile.c, print-rtl.c, print-tree.c:\n+\tDelete HOST_PTR_PRINTF.\n+\n+\t* configure, config.in: Regenerate.\n+\n+\n 2005-08-15  David Edelsohn  <edelsohn@gnu.org>\n \n \t* config/rs6000/rs6000.md (QHSI): New mode macro."}, {"sha": "2b1c198e3955371d81a5152b9151ea65bde951e3", "filename": "gcc/aclocal.m4", "status": "modified", "additions": 0, "deletions": 21, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06145cb9b44f59899973a773983c4adfe7f21f72/gcc%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06145cb9b44f59899973a773983c4adfe7f21f72/gcc%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Faclocal.m4?ref=06145cb9b44f59899973a773983c4adfe7f21f72", "patch": "@@ -89,27 +89,6 @@ make_compare_target=$gcc_cv_prog_cmp_skip\n AC_SUBST(make_compare_target)\n ])\n \n-dnl See if the printf functions in libc support %p in format strings.\n-AC_DEFUN([gcc_AC_FUNC_PRINTF_PTR],\n-[AC_CACHE_CHECK(whether the printf functions support %p,\n-  gcc_cv_func_printf_ptr,\n-[AC_RUN_IFELSE([AC_LANG_SOURCE([[#include <stdio.h>\n-\n-int main()\n-{\n-  char buf[64];\n-  char *p = buf, *q = NULL;\n-  sprintf(buf, \"%p\", p);\n-  sscanf(buf, \"%p\", &q);\n-  return (p != q);\n-}]])], gcc_cv_func_printf_ptr=yes, gcc_cv_func_printf_ptr=no,\n-\tgcc_cv_func_printf_ptr=no)\n-rm -f core core.* *.core])\n-if test $gcc_cv_func_printf_ptr = yes ; then\n-  AC_DEFINE(HAVE_PRINTF_PTR, 1, [Define if printf supports \"%p\".])\n-fi\n-])\n-\n dnl See if symbolic links work and if not, try to substitute either hard links or simple copy.\n AC_DEFUN([gcc_AC_PROG_LN_S],\n [AC_MSG_CHECKING(whether ln -s works)"}, {"sha": "3ee8bbd63bc90e4fb4e86d9f6dbccf0a3f8e5df3", "filename": "gcc/bitmap.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06145cb9b44f59899973a773983c4adfe7f21f72/gcc%2Fbitmap.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06145cb9b44f59899973a773983c4adfe7f21f72/gcc%2Fbitmap.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbitmap.c?ref=06145cb9b44f59899973a773983c4adfe7f21f72", "patch": "@@ -1217,16 +1217,14 @@ debug_bitmap_file (FILE *file, bitmap head)\n {\n   bitmap_element *ptr;\n \n-  fprintf (file, \"\\nfirst = \" HOST_PTR_PRINTF\n-\t   \" current = \" HOST_PTR_PRINTF \" indx = %u\\n\",\n+  fprintf (file, \"\\nfirst = %p current = %p indx = %u\\n\",\n \t   (void *) head->first, (void *) head->current, head->indx);\n \n   for (ptr = head->first; ptr; ptr = ptr->next)\n     {\n       unsigned int i, j, col = 26;\n \n-      fprintf (file, \"\\t\" HOST_PTR_PRINTF \" next = \" HOST_PTR_PRINTF\n-\t       \" prev = \" HOST_PTR_PRINTF \" indx = %u\\n\\t\\tbits = {\",\n+      fprintf (file, \"\\t%p next = %p prev = %p indx = %u\\n\\t\\tbits = {\",\n \t       (void*) ptr, (void*) ptr->next, (void*) ptr->prev, ptr->indx);\n \n       for (i = 0; i < BITMAP_ELEMENT_WORDS; i++)"}, {"sha": "ff35e084be7be998c97923a38583a467ebe4ca2d", "filename": "gcc/c-decl.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06145cb9b44f59899973a773983c4adfe7f21f72/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06145cb9b44f59899973a773983c4adfe7f21f72/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=06145cb9b44f59899973a773983c4adfe7f21f72", "patch": "@@ -466,7 +466,7 @@ c_print_identifier (FILE *file, tree node, int indent)\n     {\n       tree rid = ridpointers[C_RID_CODE (node)];\n       indent_to (file, indent + 4);\n-      fprintf (file, \"rid \" HOST_PTR_PRINTF \" \\\"%s\\\"\",\n+      fprintf (file, \"rid %p \\\"%s\\\"\",\n \t       (void *) rid, IDENTIFIER_POINTER (rid));\n     }\n }"}, {"sha": "f533c1c205eba6a9e2facef52d18c8e5bdcee786", "filename": "gcc/config.in", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06145cb9b44f59899973a773983c4adfe7f21f72/gcc%2Fconfig.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06145cb9b44f59899973a773983c4adfe7f21f72/gcc%2Fconfig.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.in?ref=06145cb9b44f59899973a773983c4adfe7f21f72", "patch": "@@ -958,12 +958,6 @@\n #endif\n \n \n-/* Define if printf supports \"%p\". */\n-#ifndef USED_FOR_TARGET\n-#undef HAVE_PRINTF_PTR\n-#endif\n-\n-\n /* Define to 1 if you have the `putchar_unlocked' function. */\n #ifndef USED_FOR_TARGET\n #undef HAVE_PUTCHAR_UNLOCKED"}, {"sha": "75e1e2b918f0debe75d982eed277b61888b436fa", "filename": "gcc/config/i386/i386-interix.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06145cb9b44f59899973a773983c4adfe7f21f72/gcc%2Fconfig%2Fi386%2Fi386-interix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06145cb9b44f59899973a773983c4adfe7f21f72/gcc%2Fconfig%2Fi386%2Fi386-interix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-interix.h?ref=06145cb9b44f59899973a773983c4adfe7f21f72", "patch": "@@ -286,7 +286,6 @@ do\t\t\t\t\t\t\t\t\t\\\n     }\t\t\t\t\t\t\t\t\t\\\n while (0)\n \n-#define HOST_PTR_PRINTF \"%p\"\n #define HOST_PTR_AS_INT unsigned long\n \n #define PCC_BITFIELD_TYPE_MATTERS 1"}, {"sha": "2adf50ac49bc66a680c637c1d4d9983ff5a13af4", "filename": "gcc/config/iq2000/iq2000.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06145cb9b44f59899973a773983c4adfe7f21f72/gcc%2Fconfig%2Fiq2000%2Fiq2000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06145cb9b44f59899973a773983c4adfe7f21f72/gcc%2Fconfig%2Fiq2000%2Fiq2000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fiq2000%2Fiq2000.c?ref=06145cb9b44f59899973a773983c4adfe7f21f72", "patch": "@@ -1124,7 +1124,7 @@ function_arg_advance (CUMULATIVE_ARGS *cum, enum machine_mode mode, tree type,\n \t       \"function_adv({gp reg found = %d, arg # = %2d, words = %2d}, %4s, \",\n \t       cum->gp_reg_found, cum->arg_number, cum->arg_words,\n \t       GET_MODE_NAME (mode));\n-      fprintf (stderr, HOST_PTR_PRINTF, (const PTR) type);\n+      fprintf (stderr, \"%p\", (void *) type);\n       fprintf (stderr, \", %d )\\n\\n\", named);\n     }\n \n@@ -1197,7 +1197,7 @@ function_arg (CUMULATIVE_ARGS *cum, enum machine_mode mode, tree type,\n \t       \"function_arg( {gp reg found = %d, arg # = %2d, words = %2d}, %4s, \",\n \t       cum->gp_reg_found, cum->arg_number, cum->arg_words,\n \t       GET_MODE_NAME (mode));\n-      fprintf (stderr, HOST_PTR_PRINTF, (const PTR) type);\n+      fprintf (stderr, \"%p\", (void *) type);\n       fprintf (stderr, \", %d ) = \", named);\n     }\n "}, {"sha": "dd25a7de6edf031086dac1ee44417792fa10c3c8", "filename": "gcc/configure", "status": "modified", "additions": 0, "deletions": 59, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06145cb9b44f59899973a773983c4adfe7f21f72/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06145cb9b44f59899973a773983c4adfe7f21f72/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=06145cb9b44f59899973a773983c4adfe7f21f72", "patch": "@@ -9489,65 +9489,6 @@ else\n fi\n \n \n-echo \"$as_me:$LINENO: checking whether the printf functions support %p\" >&5\n-echo $ECHO_N \"checking whether the printf functions support %p... $ECHO_C\" >&6\n-if test \"${gcc_cv_func_printf_ptr+set}\" = set; then\n-  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n-else\n-  if test \"$cross_compiling\" = yes; then\n-  gcc_cv_func_printf_ptr=no\n-else\n-  cat >conftest.$ac_ext <<_ACEOF\n-/* confdefs.h.  */\n-_ACEOF\n-cat confdefs.h >>conftest.$ac_ext\n-cat >>conftest.$ac_ext <<_ACEOF\n-/* end confdefs.h.  */\n-#include <stdio.h>\n-\n-int main()\n-{\n-  char buf[64];\n-  char *p = buf, *q = NULL;\n-  sprintf(buf, \"%p\", p);\n-  sscanf(buf, \"%p\", &q);\n-  return (p != q);\n-}\n-_ACEOF\n-rm -f conftest$ac_exeext\n-if { (eval echo \"$as_me:$LINENO: \\\"$ac_link\\\"\") >&5\n-  (eval $ac_link) 2>&5\n-  ac_status=$?\n-  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n-  (exit $ac_status); } && { ac_try='./conftest$ac_exeext'\n-  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n-  (eval $ac_try) 2>&5\n-  ac_status=$?\n-  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n-  (exit $ac_status); }; }; then\n-  gcc_cv_func_printf_ptr=yes\n-else\n-  echo \"$as_me: program exited with status $ac_status\" >&5\n-echo \"$as_me: failed program was:\" >&5\n-sed 's/^/| /' conftest.$ac_ext >&5\n-\n-( exit $ac_status )\n-gcc_cv_func_printf_ptr=no\n-fi\n-rm -f core *.core gmon.out bb.out conftest$ac_exeext conftest.$ac_objext conftest.$ac_ext\n-fi\n-rm -f core core.* *.core\n-fi\n-echo \"$as_me:$LINENO: result: $gcc_cv_func_printf_ptr\" >&5\n-echo \"${ECHO_T}$gcc_cv_func_printf_ptr\" >&6\n-if test $gcc_cv_func_printf_ptr = yes ; then\n-\n-cat >>confdefs.h <<\\_ACEOF\n-#define HAVE_PRINTF_PTR 1\n-_ACEOF\n-\n-fi\n-\n \n echo \"$as_me:$LINENO: checking for sys/mman.h\" >&5\n echo $ECHO_N \"checking for sys/mman.h... $ECHO_C\" >&6"}, {"sha": "3cda92ccca68e8cbeee1d27c13322b9aaeb92e27", "filename": "gcc/configure.ac", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06145cb9b44f59899973a773983c4adfe7f21f72/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06145cb9b44f59899973a773983c4adfe7f21f72/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=06145cb9b44f59899973a773983c4adfe7f21f72", "patch": "@@ -1044,7 +1044,6 @@ else\n fi\n AC_SUBST(TARGET_GETGROUPS_T)\n \n-gcc_AC_FUNC_PRINTF_PTR\n gcc_AC_FUNC_MMAP_BLACKLIST\n \n case \"${host}\" in"}, {"sha": "93c9338639b1e453847fd5b80fab3a7f9c1fef73", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06145cb9b44f59899973a773983c4adfe7f21f72/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06145cb9b44f59899973a773983c4adfe7f21f72/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=06145cb9b44f59899973a773983c4adfe7f21f72", "patch": "@@ -1,3 +1,7 @@\n+2005-08-15  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* name-lookup.c, ptree.c: Delete HOST_PTR_PRINTF.\n+\n 2005-08-15 Fariborz Jahanian <fjahanian@apple.com>\n \n         * cp-tree.h (can_convert_arg, fn_type_unification): New argument."}, {"sha": "2beb3e7eaecfd03164b545961b4abb9580580e49", "filename": "gcc/cp/name-lookup.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06145cb9b44f59899973a773983c4adfe7f21f72/gcc%2Fcp%2Fname-lookup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06145cb9b44f59899973a773983c4adfe7f21f72/gcc%2Fcp%2Fname-lookup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fname-lookup.c?ref=06145cb9b44f59899973a773983c4adfe7f21f72", "patch": "@@ -1484,7 +1484,7 @@ print_binding_level (struct cp_binding_level* lvl)\n {\n   tree t;\n   int i = 0, len;\n-  fprintf (stderr, \" blocks=\" HOST_PTR_PRINTF, (void *) lvl->blocks);\n+  fprintf (stderr, \" blocks=%p\", (void *) lvl->blocks);\n   if (lvl->more_cleanups_ok)\n     fprintf (stderr, \" more-cleanups-ok\");\n   if (lvl->have_cleanups)\n@@ -1549,7 +1549,7 @@ print_other_binding_stack (struct cp_binding_level *stack)\n   struct cp_binding_level *level;\n   for (level = stack; !global_scope_p (level); level = level->level_chain)\n     {\n-      fprintf (stderr, \"binding level \" HOST_PTR_PRINTF \"\\n\", (void *) level);\n+      fprintf (stderr, \"binding level %p\\n\", (void *) level);\n       print_binding_level (level);\n     }\n }\n@@ -1558,9 +1558,9 @@ void\n print_binding_stack (void)\n {\n   struct cp_binding_level *b;\n-  fprintf (stderr, \"current_binding_level=\" HOST_PTR_PRINTF\n-\t   \"\\nclass_binding_level=\" HOST_PTR_PRINTF\n-\t   \"\\nNAMESPACE_LEVEL (global_namespace)=\" HOST_PTR_PRINTF \"\\n\",\n+  fprintf (stderr, \"current_binding_level=%p\\n\"\n+\t   \"class_binding_level=%p\\n\"\n+\t   \"NAMESPACE_LEVEL (global_namespace)=%p\\n\",\n \t   (void *) current_binding_level, (void *) class_binding_level,\n \t   (void *) NAMESPACE_LEVEL (global_namespace));\n   if (class_binding_level)"}, {"sha": "8a7ba94006360bf7aa17a2b08a003b5f8c7a3667", "filename": "gcc/cp/ptree.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06145cb9b44f59899973a773983c4adfe7f21f72/gcc%2Fcp%2Fptree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06145cb9b44f59899973a773983c4adfe7f21f72/gcc%2Fcp%2Fptree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fptree.c?ref=06145cb9b44f59899973a773983c4adfe7f21f72", "patch": "@@ -46,15 +46,15 @@ cxx_print_decl (FILE *file, tree node, int indent)\n   indent_to (file, indent + 3);\n   if (TREE_CODE (node) == FUNCTION_DECL\n       && DECL_PENDING_INLINE_INFO (node))\n-    fprintf (file, \" pending-inline-info \" HOST_PTR_PRINTF,\n+    fprintf (file, \" pending-inline-info %p\",\n \t     (void *) DECL_PENDING_INLINE_INFO (node));\n   if (TREE_CODE (node) == TYPE_DECL\n       && DECL_SORTED_FIELDS (node))\n-    fprintf (file, \" sorted-fields \" HOST_PTR_PRINTF,\n+    fprintf (file, \" sorted-fields %p\",\n \t     (void *) DECL_SORTED_FIELDS (node));\n   if ((TREE_CODE (node) == FUNCTION_DECL || TREE_CODE (node) == VAR_DECL)\n       && DECL_TEMPLATE_INFO (node))\n-    fprintf (file, \" template-info \" HOST_PTR_PRINTF,\n+    fprintf (file, \" template-info %p\",\n \t     (void *) DECL_TEMPLATE_INFO (node));\n }\n \n@@ -142,7 +142,7 @@ cxx_print_type (FILE *file, tree node, int indent)\n static void\n cxx_print_binding (FILE *stream, cxx_binding *binding, const char *prefix)\n {\n-  fprintf (stream, \"%s <\" HOST_PTR_PRINTF \">\",\n+  fprintf (stream, \"%s <%p>\",\n \t   prefix, (void *) binding);\n }\n "}, {"sha": "d7d754f030cb95f2b19f9313d388b7858045d634", "filename": "gcc/mips-tfile.c", "status": "modified", "additions": 7, "deletions": 13, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06145cb9b44f59899973a773983c4adfe7f21f72/gcc%2Fmips-tfile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06145cb9b44f59899973a773983c4adfe7f21f72/gcc%2Fmips-tfile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmips-tfile.c?ref=06145cb9b44f59899973a773983c4adfe7f21f72", "patch": "@@ -3980,8 +3980,7 @@ write_varray (varray_t *vp,    /* virtual array */\n     return;\n \n   if (debug)\n-    fprintf (stderr, \"\\twarray\\tvp = \" HOST_PTR_PRINTF\n-\t     \", offset = %7lu, size = %7lu, %s\\n\",\n+    fprintf (stderr, \"\\twarray\\tvp = %p, offset = %7lu, size = %7lu, %s\\n\",\n \t     (void *) vp, (unsigned long) offset,\n \t     vp->num_allocated * vp->object_size, str);\n \n@@ -4020,8 +4019,7 @@ write_object (void)\n   off_t offset;\n \n   if (debug)\n-    fprintf (stderr, \"\\n\\twrite\\tvp = \" HOST_PTR_PRINTF\n-\t     \", offset = %7u, size = %7lu, %s\\n\",\n+    fprintf (stderr, \"\\n\\twrite\\tvp = %p, offset = %7u, size = %7lu, %s\\n\",\n \t     (void *) &symbolic_header, 0,\n \t     (unsigned long) sizeof (symbolic_header), \"symbolic header\");\n \n@@ -4051,8 +4049,7 @@ write_object (void)\n \tpfatal_with_name (object_name);\n \n       if (debug)\n-\tfprintf (stderr, \"\\twrite\\tvp = \" HOST_PTR_PRINTF\n-\t\t \", offset = %7lu, size = %7lu, %s\\n\",\n+\tfprintf (stderr, \"\\twrite\\tvp = %p, offset = %7lu, size = %7lu, %s\\n\",\n \t\t (void *) &orig_linenum, (long) symbolic_header.cbLineOffset,\n \t\t (long) symbolic_header.cbLine, \"Line numbers\");\n \n@@ -4083,8 +4080,7 @@ write_object (void)\n \tpfatal_with_name (object_name);\n \n       if (debug)\n-\tfprintf (stderr, \"\\twrite\\tvp = \" HOST_PTR_PRINTF\n-\t\t \", offset = %7lu, size = %7lu, %s\\n\",\n+\tfprintf (stderr, \"\\twrite\\tvp = %p, offset = %7lu, size = %7lu, %s\\n\",\n \t\t (void *) &orig_opt_syms, (long) symbolic_header.cbOptOffset,\n \t\t num_write, \"Optimizer symbols\");\n \n@@ -4172,8 +4168,7 @@ write_object (void)\n \t   file_ptr = file_ptr->next_file)\n \t{\n \t  if (debug)\n-\t    fprintf (stderr, \"\\twrite\\tvp = \" HOST_PTR_PRINTF\n-\t\t     \", offset = %7lu, size = %7lu, %s\\n\",\n+\t    fprintf (stderr, \"\\twrite\\tvp = %p, offset = %7lu, size = %7lu, %s\\n\",\n \t\t     (void *) &file_ptr->fdr, file_offset,\n \t\t     (unsigned long) sizeof (FDR), \"File header\");\n \n@@ -4205,8 +4200,7 @@ write_object (void)\n \tpfatal_with_name (object_name);\n \n       if (debug)\n-\tfprintf (stderr, \"\\twrite\\tvp = \" HOST_PTR_PRINTF\n-\t\t \", offset = %7lu, size = %7lu, %s\\n\",\n+\tfprintf (stderr, \"\\twrite\\tvp = %p, offset = %7lu, size = %7lu, %s\\n\",\n \t\t (void *) &orig_rfds, (long) symbolic_header.cbRfdOffset,\n \t\t num_write, \"Relative file descriptors\");\n \n@@ -4999,7 +4993,7 @@ allocate_cluster (Size_t npages)\n     pfatal_with_name (\"allocate_cluster\");\n \n   if (debug > 3)\n-    fprintf (stderr, \"\\talloc\\tnpages = %lu, value = \" HOST_PTR_PRINTF \"\\n\",\n+    fprintf (stderr, \"\\talloc\\tnpages = %lu, value = %p\\n\",\n \t     (unsigned long) npages, (void *) ptr);\n \n   return ptr;"}, {"sha": "73e3710cea2ebb68cce3380cf1227e1fee548253", "filename": "gcc/print-rtl.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06145cb9b44f59899973a773983c4adfe7f21f72/gcc%2Fprint-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06145cb9b44f59899973a773983c4adfe7f21f72/gcc%2Fprint-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprint-rtl.c?ref=06145cb9b44f59899973a773983c4adfe7f21f72", "patch": "@@ -287,7 +287,7 @@ print_rtx (rtx in_rtx)\n \t\tif (flag_dump_unnumbered)\n \t\t  fprintf (outfile, \"#\");\n \t\telse\n-\t\t  fprintf (outfile, HOST_PTR_PRINTF,\n+\t\t  fprintf (outfile, \"%p\",\n \t\t\t   (char *) NOTE_BLOCK (in_rtx));\n \t\tsawclose = 1;\n \t\tbreak;\n@@ -539,7 +539,7 @@ print_rtx (rtx in_rtx)\n \tbreak;\n \n       case 't':\n-\tfprintf (outfile, \" \" HOST_PTR_PRINTF, (void *) XTREE (in_rtx, i));\n+\tfprintf (outfile, \" %p\", (void *) XTREE (in_rtx, i));\n \tbreak;\n \n       case '*':"}, {"sha": "ddc370b40b61ec1bb1c3cf77bd0a4175bfaefb5f", "filename": "gcc/print-tree.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06145cb9b44f59899973a773983c4adfe7f21f72/gcc%2Fprint-tree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06145cb9b44f59899973a773983c4adfe7f21f72/gcc%2Fprint-tree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprint-tree.c?ref=06145cb9b44f59899973a773983c4adfe7f21f72", "patch": "@@ -73,7 +73,7 @@ print_node_brief (FILE *file, const char *prefix, tree node, int indent)\n      name if any.  */\n   if (indent > 0)\n     fprintf (file, \" \");\n-  fprintf (file, \"%s <%s \" HOST_PTR_PRINTF,\n+  fprintf (file, \"%s <%s %p\",\n \t   prefix, tree_code_name[(int) TREE_CODE (node)], (char *) node);\n \n   if (class == tcc_declaration)\n@@ -218,7 +218,7 @@ print_node (FILE *file, const char *prefix, tree node, int indent)\n   indent_to (file, indent);\n \n   /* Print the slot this node is in, and its code, and address.  */\n-  fprintf (file, \"%s <%s \" HOST_PTR_PRINTF,\n+  fprintf (file, \"%s <%s %p\",\n \t   prefix, tree_code_name[(int) TREE_CODE (node)], (void *) node);\n \n   /* Print the name, if any.  */\n@@ -495,7 +495,7 @@ print_node (FILE *file, const char *prefix, tree node, int indent)\n \t       && DECL_STRUCT_FUNCTION (node) != 0)\n \t{\n \t  indent_to (file, indent + 4);\n-\t  fprintf (file, \"saved-insns \" HOST_PTR_PRINTF,\n+\t  fprintf (file, \"saved-insns %p\",\n \t\t   (void *) DECL_STRUCT_FUNCTION (node));\n \t}\n \n@@ -755,15 +755,15 @@ print_node (FILE *file, const char *prefix, tree node, int indent)\n \t  break;\n \n     \tcase STATEMENT_LIST:\n-\t  fprintf (file, \" head \" HOST_PTR_PRINTF \" tail \" HOST_PTR_PRINTF \" stmts\",\n+\t  fprintf (file, \" head %p tail %p stmts\",\n \t\t   (void *) node->stmt_list.head, (void *) node->stmt_list.tail);\n \t  {\n \t    tree_stmt_iterator i;\n \t    for (i = tsi_start (node); !tsi_end_p (i); tsi_next (&i))\n \t      {\n \t\t/* Not printing the addresses of the (not-a-tree)\n \t\t   'struct tree_stmt_list_node's.  */\n-\t\tfprintf (file, \" \" HOST_PTR_PRINTF, (void *)tsi_stmt (i));\n+\t\tfprintf (file, \" %p\", (void *)tsi_stmt (i));\n \t      }\n \t    fprintf (file, \"\\n\");\n \t    for (i = tsi_start (node); !tsi_end_p (i); tsi_next (&i))"}, {"sha": "34c9009f149c2657f679378451fa220ea19d9578", "filename": "gcc/system.h", "status": "modified", "additions": 1, "deletions": 14, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06145cb9b44f59899973a773983c4adfe7f21f72/gcc%2Fsystem.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06145cb9b44f59899973a773983c4adfe7f21f72/gcc%2Fsystem.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsystem.h?ref=06145cb9b44f59899973a773983c4adfe7f21f72", "patch": "@@ -511,19 +511,6 @@ extern int vsnprintf(char *, size_t, const char *, va_list);\n # define mkdir(a,b) mkdir(a)\n #endif\n \n-/* Provide a way to print an address via printf.  */\n-#ifndef HOST_PTR_PRINTF\n-# ifdef HAVE_PRINTF_PTR\n-#  define HOST_PTR_PRINTF \"%p\"\n-# elif SIZEOF_INT == SIZEOF_VOID_P\n-#  define HOST_PTR_PRINTF \"%x\"\n-# elif SIZEOF_LONG == SIZEOF_VOID_P\n-#  define HOST_PTR_PRINTF \"%lx\"\n-# else\n-#  define HOST_PTR_PRINTF \"%llx\"\n-# endif\n-#endif /* ! HOST_PTR_PRINTF */\n-\n /* By default, colon separates directories in a path.  */\n #ifndef PATH_SEPARATOR\n #define PATH_SEPARATOR ':'\n@@ -741,7 +728,7 @@ extern void fancy_abort (const char *, int, const char *) ATTRIBUTE_NORETURN;\n         TARGET_ESC TARGET_FF TARGET_NEWLINE TARGET_TAB TARGET_VT\t   \\\n         LINK_LIBGCC_SPECIAL DONT_ACCESS_GBLS_AFTER_EPILOGUE\t\t   \\\n \tTARGET_OPTIONS TARGET_SWITCHES EXTRA_CC_MODES FINALIZE_PIC\t   \\\n-\tPREDICATE_CODES SPECIAL_MODE_PREDICATES\n+\tPREDICATE_CODES SPECIAL_MODE_PREDICATES HOST_PTR_PRINTF\n \n /* Hooks that are no longer used.  */\n  #pragma GCC poison LANG_HOOKS_FUNCTION_MARK LANG_HOOKS_FUNCTION_FREE\t\\"}]}