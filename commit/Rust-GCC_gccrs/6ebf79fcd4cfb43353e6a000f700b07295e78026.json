{"sha": "6ebf79fcd4cfb43353e6a000f700b07295e78026", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmViZjc5ZmNkNGNmYjQzMzUzZTZhMDAwZjcwMGIwNzI5NWU3ODAyNg==", "commit": {"author": {"name": "Bernd Edlinger", "email": "bernd.edlinger@hotmail.de", "date": "2021-01-07T08:37:32Z"}, "committer": {"name": "Bernd Edlinger", "email": "bernd.edlinger@hotmail.de", "date": "2021-01-11T12:28:29Z"}, "message": "testsuite: Fix test failures from outputs.exp [PR98225]\n\nThe .ld1_args file is not created when HAVE_GNU_LD is false.\nThe ltrans0.ltrans_arg file is not created when the make jobserver\nis available, so remove the MAKEFLAGS variable.\nAdd an exception for *.gcc_args files similar to the\nexception for *.cdtor.* files.\nLimit both exceptions to targets that define EH_FRAME_THROUGH_COLLECT2.\nThat means although the test case does not use C++ constructors\nor destructors it is still using dwarf2 frame info.\n\n2021-01-11  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n\n\tPR testsuite/98225\n\t* gcc.misc-tests/outputs.exp: Unset MAKEFLAGS.\n\tExpect .ld1_args only when GNU LD is used.\n\tAdd an exception for *.gcc_args files.", "tree": {"sha": "3819d8ef835de78988aeebb5a761f3626f350e3f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3819d8ef835de78988aeebb5a761f3626f350e3f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6ebf79fcd4cfb43353e6a000f700b07295e78026", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ebf79fcd4cfb43353e6a000f700b07295e78026", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ebf79fcd4cfb43353e6a000f700b07295e78026", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ebf79fcd4cfb43353e6a000f700b07295e78026/comments", "author": {"login": "bernd-edlinger", "id": 17638929, "node_id": "MDQ6VXNlcjE3NjM4OTI5", "avatar_url": "https://avatars.githubusercontent.com/u/17638929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bernd-edlinger", "html_url": "https://github.com/bernd-edlinger", "followers_url": "https://api.github.com/users/bernd-edlinger/followers", "following_url": "https://api.github.com/users/bernd-edlinger/following{/other_user}", "gists_url": "https://api.github.com/users/bernd-edlinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/bernd-edlinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bernd-edlinger/subscriptions", "organizations_url": "https://api.github.com/users/bernd-edlinger/orgs", "repos_url": "https://api.github.com/users/bernd-edlinger/repos", "events_url": "https://api.github.com/users/bernd-edlinger/events{/privacy}", "received_events_url": "https://api.github.com/users/bernd-edlinger/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bernd-edlinger", "id": 17638929, "node_id": "MDQ6VXNlcjE3NjM4OTI5", "avatar_url": "https://avatars.githubusercontent.com/u/17638929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bernd-edlinger", "html_url": "https://github.com/bernd-edlinger", "followers_url": "https://api.github.com/users/bernd-edlinger/followers", "following_url": "https://api.github.com/users/bernd-edlinger/following{/other_user}", "gists_url": "https://api.github.com/users/bernd-edlinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/bernd-edlinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bernd-edlinger/subscriptions", "organizations_url": "https://api.github.com/users/bernd-edlinger/orgs", "repos_url": "https://api.github.com/users/bernd-edlinger/repos", "events_url": "https://api.github.com/users/bernd-edlinger/events{/privacy}", "received_events_url": "https://api.github.com/users/bernd-edlinger/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "04bff1bbfc11a974342c0eb0c0d65d902e36e82e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04bff1bbfc11a974342c0eb0c0d65d902e36e82e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/04bff1bbfc11a974342c0eb0c0d65d902e36e82e"}], "stats": {"total": 23, "additions": 18, "deletions": 5}, "files": [{"sha": "d5a9709910c24b7da905fa21b81979437e26f9a4", "filename": "gcc/testsuite/gcc.misc-tests/outputs.exp", "status": "modified", "additions": 18, "deletions": 5, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ebf79fcd4cfb43353e6a000f700b07295e78026/gcc%2Ftestsuite%2Fgcc.misc-tests%2Foutputs.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ebf79fcd4cfb43353e6a000f700b07295e78026/gcc%2Ftestsuite%2Fgcc.misc-tests%2Foutputs.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.misc-tests%2Foutputs.exp?ref=6ebf79fcd4cfb43353e6a000f700b07295e78026", "patch": "@@ -50,6 +50,9 @@ if !$skip_lto {\n     set ltop [check_linker_plugin_available]\n }\n \n+# Check for GNU LD.  Some files like .ld1_args depend on this.\n+set gld [check_effective_target_gld]\n+\n # Prepare additional options to be used for linking.\n # We do not compile to an executable, because that requires naming an output.\n set link_options \"\"\n@@ -67,6 +70,12 @@ if {[board_info $dest exists output_format]} {\n     append link_options \" additional_flags=-Wl,-oformat,[board_info $dest output_format]\"\n }\n \n+# Avoid possible influence from the make jobserver,\n+# otherwise ltrans0.ltrans_args files may be missing.\n+if [info exists env(MAKEFLAGS)] {\n+    unsetenv MAKEFLAGS\n+}\n+\n # For the test named TEST, run the compiler with SOURCES and OPTS, and\n # look in DIRS for OUTPUTS.  SOURCES is a list of suffixes for source\n # files starting with $b in $srcdir/$subdir, OPTS is a string with\n@@ -130,6 +139,7 @@ proc outest { test sources opts dirs outputs } {\n \tforeach og $olist {\n \t    if { [string index $og 0] == \"!\" } {\n \t\tglobal gspd ltop\n+\t\tglobal gld\n \t\tset cond [expr $og]\n \t\tcontinue\n \t    }\n@@ -181,7 +191,10 @@ proc outest { test sources opts dirs outputs } {\n \tfile delete $f\n \t# collect2 may create <execname>.cdtor* files in -save-temps link tests,\n \t# ??? without regard to aux output naming conventions.\n-\tif ![string match \"*.cdtor.*\" $f] then {\n+\t# Limit this exception to targets that define EH_FRAME_THROUGH_COLLECT2.\n+\tif { !(([istarget powerpc*-*-aix*] || [is_target hppa*-*-hpux*])\n+\t       && ([string match \"*.cdtor.*\" $f]\n+\t\t   || [string match \"*.gcc_args\" $f])) } {\n \t    lappend outb $f\n \t}\n     }\n@@ -285,10 +298,10 @@ outest \"$b exe savetmp namedb\" $sing \"-o $b.exe -save-temps\" {} {{--0.i --0.s --\n outest \"$b exe savetmp named2\" $mult \"-o $b.exe -save-temps\" {} {{--1.i --1.s --1.o --2.i --2.s --2.o .exe}}\n \n # Additional files are created when an @file is used\n-outest \"$b exe savetmp namedb\" $sing \"@/dev/null -o $b.exe -save-temps\" {} {{--0.i --0.s --0.o .args.0 .ld1_args .exe}}\n-outest \"$b exe savetmp named2\" $mult \"@/dev/null -o $b.exe -save-temps\" {} {{--1.i --1.s --1.o --2.i --2.s --2.o .args.0 .ld1_args .exe}}\n-outest \"$b exe savetmp named2\" $mult \"@/dev/null -I dummy -o $b.exe -save-temps\" {} {{--1.i --1.s --1.o --2.i --2.s --2.o -args.0 -args.1 .args.2 .ld1_args .exe}}\n-outest \"$b exe savetmp named2\" $mult \"@/dev/null -I dummy -L dummy -o $b.exe -save-temps\" {} {{--1.i --1.s --1.o --2.i --2.s --2.o -args.0 -args.1 .args.2 .args.3 .ld1_args .exe}}\n+outest \"$b exe savetmp namedb\" $sing \"@/dev/null -o $b.exe -save-temps\" {} {{--0.i --0.s --0.o .args.0 !!$gld .ld1_args !0 .exe}}\n+outest \"$b exe savetmp named2\" $mult \"@/dev/null -o $b.exe -save-temps\" {} {{--1.i --1.s --1.o --2.i --2.s --2.o .args.0 !!$gld .ld1_args !0 .exe}}\n+outest \"$b exe savetmp named2\" $mult \"@/dev/null -I dummy -o $b.exe -save-temps\" {} {{--1.i --1.s --1.o --2.i --2.s --2.o -args.0 -args.1 .args.2 !!$gld .ld1_args !0 .exe}}\n+outest \"$b exe savetmp named2\" $mult \"@/dev/null -I dummy -L dummy -o $b.exe -save-temps\" {} {{--1.i --1.s --1.o --2.i --2.s --2.o -args.0 -args.1 .args.2 .args.3 !!$gld .ld1_args !0 .exe}}\n \n # Setting the main output to a dir selects it as the default aux&dump\n # location."}]}