{"sha": "1c0ecdd46a9be6db749ad6ce401a243e47597e4a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWMwZWNkZDQ2YTliZTZkYjc0OWFkNmNlNDAxYTI0M2U0NzU5N2U0YQ==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2007-12-19T16:24:06Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2007-12-19T16:24:06Z"}, "message": "par-ch3.adb (P_Record_Declaration): Guard against cascaded errors in mangled declaration\n\n2007-12-19  Ed Schonberg  <schonberg@adacore.com>\n\n\t* par-ch3.adb (P_Record_Declaration): Guard against cascaded errors in\n\tmangled declaration\n\t(P_Type_Declaration): Diagnose misuse of \"abstract\" in untagged record\n\tdeclarations.\n\t(P_Variant_Part): Cleaner patch for parenthesized discriminant\n\nFrom-SVN: r131077", "tree": {"sha": "78c0d301c155cbdd1495d17337418f5d1e30130b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/78c0d301c155cbdd1495d17337418f5d1e30130b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1c0ecdd46a9be6db749ad6ce401a243e47597e4a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c0ecdd46a9be6db749ad6ce401a243e47597e4a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1c0ecdd46a9be6db749ad6ce401a243e47597e4a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c0ecdd46a9be6db749ad6ce401a243e47597e4a/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "32c760e6bd3e9332c7e0a95813a207742a5e2171", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32c760e6bd3e9332c7e0a95813a207742a5e2171", "html_url": "https://github.com/Rust-GCC/gccrs/commit/32c760e6bd3e9332c7e0a95813a207742a5e2171"}], "stats": {"total": 41, "additions": 23, "deletions": 18}, "files": [{"sha": "10c3c85ff4494f138d0843ea8f110dc9fa0fcb36", "filename": "gcc/ada/par-ch3.adb", "status": "modified", "additions": 23, "deletions": 18, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c0ecdd46a9be6db749ad6ce401a243e47597e4a/gcc%2Fada%2Fpar-ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c0ecdd46a9be6db749ad6ce401a243e47597e4a/gcc%2Fada%2Fpar-ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch3.adb?ref=1c0ecdd46a9be6db749ad6ce401a243e47597e4a", "patch": "@@ -620,6 +620,14 @@ package body Ch3 is\n                   if Ada_Version = Ada_83 then\n                      Error_Msg_SP\n                        (\"(Ada 83) limited record declaration not allowed!\");\n+\n+                  --  In Ada2005, \"abstract limited\" can appear before \"new\",\n+                  --  but it cannot be part of an untagged record declaration.\n+\n+                  elsif Abstract_Present\n+                    and then Prev_Token /= Tok_Tagged\n+                  then\n+                     Error_Msg_SP (\"TAGGED expected\");\n                   end if;\n \n                   Typedef_Node := P_Record_Definition;\n@@ -3099,6 +3107,12 @@ package body Ch3 is\n          T_Record;\n          Set_Null_Present (Rec_Node, True);\n \n+      --  Catch incomplete declaration to prevent cascaded errors, see\n+      --  ACATS B393002 for an example.\n+\n+      elsif Token = Tok_Semicolon then\n+         Error_Msg_AP (\"missing record definition\");\n+\n       --  Case starting with RECORD keyword. Build scope stack entry. For the\n       --  column, we use the first non-blank character on the line, to deal\n       --  with situations such as:\n@@ -3107,7 +3121,8 @@ package body Ch3 is\n       --      ...\n       --    end record;\n \n-      --  which is not official RM indentation, but is not uncommon usage\n+      --  which is not official RM indentation, but is not uncommon usage, and\n+      --  in particular is standard GNAT coding style, so handle it nicely.\n \n       else\n          Push_Scope_Stack;\n@@ -3413,7 +3428,6 @@ package body Ch3 is\n       Variant_Part_Node : Node_Id;\n       Variants_List     : List_Id;\n       Case_Node         : Node_Id;\n-      Ident_Token       : Token_Type;\n \n    begin\n       Variant_Part_Node := New_Node (N_Variant_Part, Token_Ptr);\n@@ -3423,26 +3437,17 @@ package body Ch3 is\n       Scope.Table (Scope.Last).Ecol := Start_Column;\n \n       Scan; -- past CASE\n-\n-      --  A discriminant name between parentheses will be returned as\n-      --  a N_Identifier although it is not allowed by RM 3.8.1. We\n-      --  save the token type to check it later. However, in case of\n-      --  a discriminant name with parentheses, we can continue the\n-      --  analysis as if only the discriminant name had been given.\n-\n-      Ident_Token := Token;\n       Case_Node := P_Expression;\n+      Set_Name (Variant_Part_Node, Case_Node);\n \n-      if Nkind (Case_Node) = N_Identifier then\n-         Set_Name (Variant_Part_Node, Case_Node);\n-      else\n+      if Nkind (Case_Node) /= N_Identifier then\n          Set_Name (Variant_Part_Node, Error);\n-      end if;\n-\n-      if Nkind (Case_Node) /= N_Identifier\n-        or else Ident_Token /= Tok_Identifier\n-      then\n          Error_Msg (\"discriminant name expected\", Sloc (Case_Node));\n+\n+      elsif Paren_Count (Case_Node) /= 0 then\n+         Error_Msg (\"|discriminant name may not be parenthesized\",\n+                    Sloc (Case_Node));\n+         Set_Paren_Count (Case_Node, 0);\n       end if;\n \n       TF_Is;"}]}