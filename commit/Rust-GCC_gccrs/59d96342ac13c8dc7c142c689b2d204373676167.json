{"sha": "59d96342ac13c8dc7c142c689b2d204373676167", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTlkOTYzNDJhYzEzYzhkYzdjMTQyYzY4OWIyZDIwNDM3MzY3NjE2Nw==", "commit": {"author": {"name": "DJ Delorie", "email": "dj@redhat.com", "date": "2013-10-09T01:05:07Z"}, "committer": {"name": "DJ Delorie", "email": "dj@gcc.gnu.org", "date": "2013-10-09T01:05:07Z"}, "message": "rl78.c (rl78_print_operand_1): Change %c to %C to avoid conflict with the MI use of %c.\n\n* config/rl78/rl78.c (rl78_print_operand_1): Change %c to %C to\navoid conflict with the MI use of %c.\n* config/rl78/rl78-real.md: change %c to %C throughout.\n* config/rl78/rl78-virt.md: Likewise.\n\nFrom-SVN: r203299", "tree": {"sha": "3adfce682b2741de10b86cabce97ab8c2130cc8d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3adfce682b2741de10b86cabce97ab8c2130cc8d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/59d96342ac13c8dc7c142c689b2d204373676167", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59d96342ac13c8dc7c142c689b2d204373676167", "html_url": "https://github.com/Rust-GCC/gccrs/commit/59d96342ac13c8dc7c142c689b2d204373676167", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59d96342ac13c8dc7c142c689b2d204373676167/comments", "author": null, "committer": null, "parents": [{"sha": "a21a0e9ae0cb280ac2a2e02531e4cebb472d3aae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a21a0e9ae0cb280ac2a2e02531e4cebb472d3aae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a21a0e9ae0cb280ac2a2e02531e4cebb472d3aae"}], "stats": {"total": 72, "additions": 40, "deletions": 32}, "files": [{"sha": "d198cd4a79ed18566e2851ba8899bfa1206ec0d0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59d96342ac13c8dc7c142c689b2d204373676167/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59d96342ac13c8dc7c142c689b2d204373676167/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=59d96342ac13c8dc7c142c689b2d204373676167", "patch": "@@ -1,3 +1,10 @@\n+2013-10-08  DJ Delorie  <dj@redhat.com>\n+\n+\t* config/rl78/rl78.c (rl78_print_operand_1): Change %c to %C to\n+\tavoid conflict with the MI use of %c.\n+\t* config/rl78/rl78-real.md: change %c to %C throughout.\n+\t* config/rl78/rl78-virt.md: Likewise.\n+\n 2013-10-08  Jan Hubicka  <jh@suse.cz>\n \n \t* config/i386/i386.c (ix86_option_override_internal): Switch"}, {"sha": "4cf65e147a0829bb5684b7ce8fef5b51c4facd65", "filename": "gcc/config/rl78/rl78-real.md", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59d96342ac13c8dc7c142c689b2d204373676167/gcc%2Fconfig%2Frl78%2Frl78-real.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59d96342ac13c8dc7c142c689b2d204373676167/gcc%2Fconfig%2Frl78%2Frl78-real.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frl78%2Frl78-real.md?ref=59d96342ac13c8dc7c142c689b2d204373676167", "patch": "@@ -321,9 +321,9 @@\n \t      (pc)))]\n   \"rl78_real_insns_ok ()\"\n   \"@\n-   cmp\\t%1, %2 \\;xor1 CY,%1.7\\;not1 CY\\;sk%c0 \\;br\\t!!%3\n-   cmp\\t%1, %2 \\;xor1 CY,%1.7\\;sk%c0 \\;br\\t!!%3\n-   cmp\\t%1, %2 \\;xor1 CY,%1.7\\;xor1 CY,%2.7\\;sk%c0 \\;br\\t!!%3\"\n+   cmp\\t%1, %2 \\;xor1 CY,%1.7\\;not1 CY\\;sk%C0 \\;br\\t!!%3\n+   cmp\\t%1, %2 \\;xor1 CY,%1.7\\;sk%C0 \\;br\\t!!%3\n+   cmp\\t%1, %2 \\;xor1 CY,%1.7\\;xor1 CY,%2.7\\;sk%C0 \\;br\\t!!%3\"\n   )\n \n (define_insn \"*cbranchqi4_real\"\n@@ -335,10 +335,10 @@\n \t      (pc)))]\n   \"rl78_real_insns_ok ()\"\n   \"@\n-   cmp0\\t%1 \\;sk%c0 \\;br\\t!!%3\n-   cmp\\t%1, %2 \\;sk%c0 \\;br\\t!!%3\n-   cmp\\t%1, %2 \\;sk%c0 \\;br\\t!!%3\n-   cmp\\t%1, %2 \\;sk%c0 \\;br\\t!!%3\"\n+   cmp0\\t%1 \\;sk%C0 \\;br\\t!!%3\n+   cmp\\t%1, %2 \\;sk%C0 \\;br\\t!!%3\n+   cmp\\t%1, %2 \\;sk%C0 \\;br\\t!!%3\n+   cmp\\t%1, %2 \\;sk%C0 \\;br\\t!!%3\"\n   )\n \n (define_insn \"*cbranchhi4_real_signed\"\n@@ -350,9 +350,9 @@\n \t      (pc)))]\n   \"rl78_real_insns_ok ()\"\n   \"@\n-   cmpw\\t%1, %2 \\;xor1 CY,%Q1.7\\;not1 CY\\;sk%c0 \\;br\\t!!%3\n-   cmpw\\t%1, %2 \\;xor1 CY,%Q1.7\\;sk%c0 \\;br\\t!!%3\n-   cmpw\\t%1, %2 \\;xor1 CY,%Q1.7\\;xor1 CY,%Q2.7\\;sk%c0 \\;br\\t!!%3\n+   cmpw\\t%1, %2 \\;xor1 CY,%Q1.7\\;not1 CY\\;sk%C0 \\;br\\t!!%3\n+   cmpw\\t%1, %2 \\;xor1 CY,%Q1.7\\;sk%C0 \\;br\\t!!%3\n+   cmpw\\t%1, %2 \\;xor1 CY,%Q1.7\\;xor1 CY,%Q2.7\\;sk%C0 \\;br\\t!!%3\n    %z0\\t!!%3\"\n   )\n \n@@ -365,7 +365,7 @@\n \t      (pc)))]\n   \"rl78_real_insns_ok ()\"\n   \"@\n-  cmpw\\t%1, %2 \\;sk%c0 \\;br\\t!!%3\n+  cmpw\\t%1, %2 \\;sk%C0 \\;br\\t!!%3\n   %z0\\t!!%3\"\n   )\n \n@@ -377,7 +377,7 @@\n \t      (pc)\n               (label_ref (match_operand          3 \"\" \"\"))))]\n   \"rl78_real_insns_ok ()\"\n-  \"cmpw\\t%1, %2 \\;sk%c0 \\;br\\t!!%3\"\n+  \"cmpw\\t%1, %2 \\;sk%C0 \\;br\\t!!%3\"\n   )\n \n (define_insn \"*cbranchsi4_real_lt\"\n@@ -419,9 +419,9 @@\n    ]\n   \"rl78_real_insns_ok ()\"\n   \"@\n-   movw ax,%H1 \\;cmpw  ax, %H2 \\;xor1 CY,a.7\\;not1 CY\\;      movw ax,%h1 \\;sknz \\;cmpw  ax, %h2 \\;sk%c0 \\;br\\t!!%3\n-   movw ax,%H1 \\;cmpw  ax, %H2 \\;xor1 CY,a.7\\;               movw ax,%h1 \\;sknz \\;cmpw  ax, %h2 \\;sk%c0 \\;br\\t!!%3\n-   movw ax,%H1 \\;cmpw  ax, %H2 \\;xor1 CY,a.7\\;xor1 CY,%E2.7\\;movw ax,%h1 \\;sknz \\;cmpw  ax, %h2 \\;sk%c0 \\;br\\t!!%3\"\n+   movw ax,%H1 \\;cmpw  ax, %H2 \\;xor1 CY,a.7\\;not1 CY\\;      movw ax,%h1 \\;sknz \\;cmpw  ax, %h2 \\;sk%C0 \\;br\\t!!%3\n+   movw ax,%H1 \\;cmpw  ax, %H2 \\;xor1 CY,a.7\\;               movw ax,%h1 \\;sknz \\;cmpw  ax, %h2 \\;sk%C0 \\;br\\t!!%3\n+   movw ax,%H1 \\;cmpw  ax, %H2 \\;xor1 CY,a.7\\;xor1 CY,%E2.7\\;movw ax,%h1 \\;sknz \\;cmpw  ax, %h2 \\;sk%C0 \\;br\\t!!%3\"\n   )\n \n (define_insn \"*cbranchsi4_real\"\n@@ -434,7 +434,7 @@\n    (clobber (reg:HI AX_REG))\n    ]\n   \"rl78_real_insns_ok ()\"\n-  \"movw ax,%H1 \\;cmpw  ax, %H2 \\;movw ax,%h1 \\;sknz \\;cmpw  ax, %h2 \\;sk%c0 \\;br\\t!!%3\"\n+  \"movw ax,%H1 \\;cmpw  ax, %H2 \\;movw ax,%h1 \\;sknz \\;cmpw  ax, %h2 \\;sk%C0 \\;br\\t!!%3\"\n   )\n \n ;; Peephole to match:"}, {"sha": "74affc519f9f362f3aded192a3bb2163425bdee8", "filename": "gcc/config/rl78/rl78-virt.md", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59d96342ac13c8dc7c142c689b2d204373676167/gcc%2Fconfig%2Frl78%2Frl78-virt.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59d96342ac13c8dc7c142c689b2d204373676167/gcc%2Fconfig%2Frl78%2Frl78-virt.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frl78%2Frl78-virt.md?ref=59d96342ac13c8dc7c142c689b2d204373676167", "patch": "@@ -320,7 +320,7 @@\n               (label_ref (match_operand 3 \"\" \"\"))\n \t      (pc)))]\n   \"rl78_virt_insns_ok ()\"\n-  \"v.cmp\\t%1, %2\\\\n\\tv.b%c0\\t%3\"\n+  \"v.cmp\\t%1, %2\\\\n\\tv.b%C0\\t%3\"\n   [(set_attr \"valloc\" \"cmp\")]\n   )\n \n@@ -332,7 +332,7 @@\n               (label_ref (match_operand 3 \"\" \"\"))\n \t      (pc)))]\n   \"rl78_virt_insns_ok ()\"\n-  \"v.cmp\\t%1, %2\\\\n\\tv.b%c0\\t%3\"\n+  \"v.cmp\\t%1, %2\\\\n\\tv.b%C0\\t%3\"\n   [(set_attr \"valloc\" \"cmp\")]\n   )\n \n@@ -344,7 +344,7 @@\n               (label_ref (match_operand 3 \"\" \"\"))\n \t      (pc)))]\n   \"rl78_virt_insns_ok ()\"\n-  \"v.cmpw\\t%1, %2\\\\n\\tv.b%c0\\t%3\"\n+  \"v.cmpw\\t%1, %2\\\\n\\tv.b%C0\\t%3\"\n   [(set_attr \"valloc\" \"cmp\")]\n   )\n \n@@ -356,7 +356,7 @@\n               (label_ref (match_operand 3 \"\" \"\"))\n \t      (pc)))]\n   \"rl78_virt_insns_ok ()\"\n-  \"v.cmpw\\t%1, %2\\\\n\\tv.b%c0\\t%3\"\n+  \"v.cmpw\\t%1, %2\\\\n\\tv.b%C0\\t%3\"\n   [(set_attr \"valloc\" \"cmp\")]\n   )\n \n@@ -370,7 +370,7 @@\n    (clobber (reg:HI AX_REG))\n    ]\n   \"rl78_virt_insns_ok ()\"\n-  \"v.cmpd\\t%1, %2\\\\n\\tv.b%c0\\t%3\"\n+  \"v.cmpd\\t%1, %2\\\\n\\tv.b%C0\\t%3\"\n   [(set_attr \"valloc\" \"macax\")]\n   )\n "}, {"sha": "0e385962ab11ba8ae7db67049f3822e7ea252bfb", "filename": "gcc/config/rl78/rl78.c", "status": "modified", "additions": 12, "deletions": 11, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59d96342ac13c8dc7c142c689b2d204373676167/gcc%2Fconfig%2Frl78%2Frl78.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59d96342ac13c8dc7c142c689b2d204373676167/gcc%2Fconfig%2Frl78%2Frl78.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frl78%2Frl78.c?ref=59d96342ac13c8dc7c142c689b2d204373676167", "patch": "@@ -1301,7 +1301,8 @@ rl78_function_arg_boundary (enum machine_mode mode ATTRIBUTE_UNUSED,\n    S - SADDR form of a real register\n    v - real register corresponding to a virtual register\n    m - minus - negative of CONST_INT value.\n-   c - inverse of a conditional (NE vs EQ for example)\n+   C - inverse of a conditional (NE vs EQ for example)\n+   C - complement of an integer\n    z - collapsed conditional\n    s - shift count mod 8\n    S - shift count mod 16\n@@ -1555,37 +1556,37 @@ rl78_print_operand_1 (FILE * file, rtx op, int letter)\n       if (letter == 'z')\n \tfprintf (file, \"#comparison eliminated\");\n       else\n-\tfprintf (file, letter == 'c' ? \"nc\" : \"c\");\n+\tfprintf (file, letter == 'C' ? \"nc\" : \"c\");\n       break;\n     case LEU:\n       if (letter == 'z')\n \tfprintf (file, \"br\");\n       else\n-\tfprintf (file, letter == 'c' ? \"h\" : \"nh\");\n+\tfprintf (file, letter == 'C' ? \"h\" : \"nh\");\n       break;\n     case GEU:\n       if (letter == 'z')\n \tfprintf (file, \"br\");\n       else\n-\tfprintf (file, letter == 'c' ? \"c\" : \"nc\");\n+\tfprintf (file, letter == 'C' ? \"c\" : \"nc\");\n       break;\n     case GTU:\n       if (letter == 'z')\n \tfprintf (file, \"#comparison eliminated\");\n       else\n-\tfprintf (file, letter == 'c' ? \"nh\" : \"h\");\n+\tfprintf (file, letter == 'C' ? \"nh\" : \"h\");\n       break;\n     case EQ:\n       if (letter == 'z')\n \tfprintf (file, \"br\");\n       else\n-\tfprintf (file, letter == 'c' ? \"nz\" : \"z\");\n+\tfprintf (file, letter == 'C' ? \"nz\" : \"z\");\n       break;\n     case NE:\n       if (letter == 'z')\n \tfprintf (file, \"#comparison eliminated\");\n       else\n-\tfprintf (file, letter == 'c' ? \"z\" : \"nz\");\n+\tfprintf (file, letter == 'C' ? \"z\" : \"nz\");\n       break;\n \n     /* Note: these assume appropriate adjustments were made so that\n@@ -1595,25 +1596,25 @@ rl78_print_operand_1 (FILE * file, rtx op, int letter)\n       if (letter == 'z')\n \tfprintf (file, \"#comparison eliminated\");\n       else\n-\tfprintf (file, letter == 'c' ? \"nc\" : \"c\");\n+\tfprintf (file, letter == 'C' ? \"nc\" : \"c\");\n       break;\n     case LE:\n       if (letter == 'z')\n \tfprintf (file, \"br\");\n       else\n-        fprintf (file, letter == 'c' ? \"h\" : \"nh\");\n+        fprintf (file, letter == 'C' ? \"h\" : \"nh\");\n       break;\n     case GE:\n       if (letter == 'z')\n \tfprintf (file, \"br\");\n       else\n-\tfprintf (file, letter == 'c' ? \"c\" : \"nc\");\n+\tfprintf (file, letter == 'C' ? \"c\" : \"nc\");\n       break;\n     case GT:\n       if (letter == 'z')\n \tfprintf (file, \"#comparison eliminated\");\n       else\n-\tfprintf (file, letter == 'c' ? \"nh\" : \"h\");\n+\tfprintf (file, letter == 'C' ? \"nh\" : \"h\");\n       break;\n \n     default:"}]}