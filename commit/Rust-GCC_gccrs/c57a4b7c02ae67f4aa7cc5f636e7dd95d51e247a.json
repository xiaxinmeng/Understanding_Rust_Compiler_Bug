{"sha": "c57a4b7c02ae67f4aa7cc5f636e7dd95d51e247a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzU3YTRiN2MwMmFlNjdmNGFhN2NjNWY2MzZlN2RkOTVkNTFlMjQ3YQ==", "commit": {"author": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "1996-06-07T03:07:32Z"}, "committer": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "1996-06-07T03:07:32Z"}, "message": "fix-header.c (read_scan_file): Use cpp_fatal.\n\n* fix-header.c (read_scan_file):  Use cpp_fatal.\nUse renamed function names, and return protocols.\n* fix-header.c (check_macro_names):  Fix struct parse_file->cpp_reader.\n\nFrom-SVN: r12204", "tree": {"sha": "c4467811e590941cfef78129e945ffda70a579e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c4467811e590941cfef78129e945ffda70a579e1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c57a4b7c02ae67f4aa7cc5f636e7dd95d51e247a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c57a4b7c02ae67f4aa7cc5f636e7dd95d51e247a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c57a4b7c02ae67f4aa7cc5f636e7dd95d51e247a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c57a4b7c02ae67f4aa7cc5f636e7dd95d51e247a/comments", "author": null, "committer": null, "parents": [{"sha": "59de0311654d467b4a36926456701d4b5ddf076b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59de0311654d467b4a36926456701d4b5ddf076b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/59de0311654d467b4a36926456701d4b5ddf076b"}], "stats": {"total": 32, "additions": 24, "deletions": 8}, "files": [{"sha": "bae5e15e658a51dd0cef35039c8320806ca8546c", "filename": "gcc/fix-header.c", "status": "modified", "additions": 24, "deletions": 8, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c57a4b7c02ae67f4aa7cc5f636e7dd95d51e247a/gcc%2Ffix-header.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c57a4b7c02ae67f4aa7cc5f636e7dd95d51e247a/gcc%2Ffix-header.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffix-header.c?ref=c57a4b7c02ae67f4aa7cc5f636e7dd95d51e247a", "patch": "@@ -82,6 +82,8 @@ Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */\n #define O_RDONLY 0\n #endif\n \n+extern void cpp_fatal ();\n+\n sstring buf;\n \n int verbose = 0;\n@@ -571,7 +573,7 @@ recognized_function (fname, fname_length,\n \n void\n check_macro_names (pfile, names)\n-     struct parse_file *pfile;\n+     cpp_reader *pfile;\n      namelist names;\n {\n   while (*names)\n@@ -596,13 +598,17 @@ read_scan_file (in_fname, argc, argv)\n \n   obstack_init (&scan_file_obstack); \n \n-  init_parse_file (&scan_in);\n+  cpp_reader_init (&scan_in);\n   scan_in.data = &scan_options;\n-  init_parse_options (&scan_options);\n+  cpp_options_init (&scan_options);\n   i = cpp_handle_options (&scan_in, argc, argv);\n-  if (i < argc)\n-    fatal (\"Invalid option `%s'\", argv[i]);\n-  push_parse_file (&scan_in, in_fname);\n+  if (i < argc && scan_in.errors < CPP_FATAL_LIMIT)\n+    cpp_fatal (&scan_in, \"Invalid option `%s'\", argv[i]);\n+  if (scan_in.errors >= CPP_FATAL_LIMIT)\n+    exit (FATAL_EXIT_CODE);\n+\n+  if (! cpp_start_read (&scan_in, in_fname))\n+    exit (FATAL_EXIT_CODE);\n   CPP_OPTIONS (&scan_in)->no_line_commands = 1;\n \n   scan_decls (&scan_in, argc, argv);\n@@ -1297,15 +1303,17 @@ cpp_print_containing_files (pfile)\n {\n }\n \n-/* IS_ERROR is 1 for error, 0 for warning */\n+/* IS_ERROR is 2 for fatal error, 1 for error, 0 for warning */\n void cpp_message (pfile, is_error, msg, arg1, arg2, arg3)\n      int is_error;\n      cpp_reader *pfile;\n      char *msg;\n      char *arg1, *arg2, *arg3;\n {\n-  if (is_error)\n+  if (is_error == 1)\n     pfile->errors++;\n+  else if (is_error > 1)\n+    pfile->errors = CPP_FATAL_LIMIT;\n   if (!verbose)\n     return;\n   if (!is_error)\n@@ -1324,6 +1332,14 @@ fatal (str, arg)\n   exit (FATAL_EXIT_CODE);\n }\n \n+void\n+cpp_fatal (pfile, str, arg)\n+     cpp_reader *pfile;\n+     char *str, *arg;\n+{\n+  fatal (str, arg);\n+}\n+\n void\n cpp_pfatal_with_name (pfile, name)\n      cpp_reader *pfile;"}]}