{"sha": "8502420b678709358d5993bb6ed5d72eb3fd4353", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODUwMjQyMGI2Nzg3MDkzNThkNTk5M2JiNmVkNWQ3MmViM2ZkNDM1Mw==", "commit": {"author": {"name": "Kai Tietz", "email": "kai.tietz@onevision.com", "date": "2008-04-07T12:44:14Z"}, "committer": {"name": "Kai Tietz", "email": "ktietz@gcc.gnu.org", "date": "2008-04-07T12:44:14Z"}, "message": "i386.c (legitimize_pic_address): Add treating of dllimport SYM_REF's.\n\n2008-04-07  Kai Tietz  <kai.tietz@onevision.com>\n\n        PR/35842\n        * config/i386/i386.c (legitimize_pic_address): Add treating\n        of dllimport SYM_REF's.\n        (legitimize_dllimport_symbol): Add prototype.\n\nFrom-SVN: r133981", "tree": {"sha": "e8e25cb45abe08a61536c01c031f44a7a742f6dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e8e25cb45abe08a61536c01c031f44a7a742f6dc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8502420b678709358d5993bb6ed5d72eb3fd4353", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8502420b678709358d5993bb6ed5d72eb3fd4353", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8502420b678709358d5993bb6ed5d72eb3fd4353", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8502420b678709358d5993bb6ed5d72eb3fd4353/comments", "author": null, "committer": null, "parents": [{"sha": "cd035e343a0a5c5930bba6d8584072dcce27a1aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd035e343a0a5c5930bba6d8584072dcce27a1aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd035e343a0a5c5930bba6d8584072dcce27a1aa"}], "stats": {"total": 24, "additions": 20, "deletions": 4}, "files": [{"sha": "83c9493b89cc002c64987dbaba6fa8a1b8c3c3a7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8502420b678709358d5993bb6ed5d72eb3fd4353/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8502420b678709358d5993bb6ed5d72eb3fd4353/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8502420b678709358d5993bb6ed5d72eb3fd4353", "patch": "@@ -1,3 +1,10 @@\n+2008-04-07  Kai Tietz  <kai.tietz@onevision.com>\n+\n+        PR/35842\n+        * config/i386/i386.c (legitimize_pic_address): Add treating\n+        of dllimport SYM_REF's.\n+        (legitimize_dllimport_symbol): Add prototype.\n+\n 2008-04-07  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* fold-const.c (fold) <ARRAY_REF>: New case.  Try to fold constant"}, {"sha": "59d06c4fdd839e1c05e079dd9d10b34b130eafd7", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 13, "deletions": 4, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8502420b678709358d5993bb6ed5d72eb3fd4353/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8502420b678709358d5993bb6ed5d72eb3fd4353/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=8502420b678709358d5993bb6ed5d72eb3fd4353", "patch": "@@ -54,6 +54,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"params.h\"\n \n static int x86_builtin_vectorization_cost (bool);\n+static rtx legitimize_dllimport_symbol (rtx, bool);\n \n #ifndef CHECK_STACK_LIMIT\n #define CHECK_STACK_LIMIT (-1)\n@@ -7660,10 +7661,18 @@ legitimize_pic_address (rtx orig, rtx reg)\n \t      see gotoff_operand.  */\n \t   || (TARGET_VXWORKS_RTP && GET_CODE (addr) == LABEL_REF))\n     {\n-      /* Given that we've already handled dllimport variables separately\n-\t in legitimize_address, and all other variables should satisfy\n-\t legitimate_pic_address_disp_p, we should never arrive here.  */\n-      gcc_assert (!TARGET_64BIT_MS_ABI);\n+      if (TARGET_DLLIMPORT_DECL_ATTRIBUTES)\n+        {\n+          if (GET_CODE (addr) == SYMBOL_REF && SYMBOL_REF_DLLIMPORT_P (addr))\n+            return legitimize_dllimport_symbol (addr, true);\n+          if (GET_CODE (addr) == CONST && GET_CODE (XEXP (addr, 0)) == PLUS\n+              && GET_CODE (XEXP (XEXP (addr, 0), 0)) == SYMBOL_REF\n+              && SYMBOL_REF_DLLIMPORT_P (XEXP (XEXP (addr, 0), 0)))\n+            {\n+              rtx t = legitimize_dllimport_symbol (XEXP (XEXP (addr, 0), 0), true);\n+              return gen_rtx_PLUS (Pmode, t, XEXP (XEXP (addr, 0), 1));\n+            }\n+        }\n \n       if (TARGET_64BIT && ix86_cmodel != CM_LARGE_PIC)\n \t{"}]}