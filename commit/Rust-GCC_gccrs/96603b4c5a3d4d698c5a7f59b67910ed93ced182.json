{"sha": "96603b4c5a3d4d698c5a7f59b67910ed93ced182", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTY2MDNiNGM1YTNkNGQ2OThjNWE3ZjU5YjY3OTEwZWQ5M2NlZDE4Mg==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "1999-09-09T21:41:38Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "1999-09-09T21:41:38Z"}, "message": "ggc.h (lang_cleanup_tree): Remove.\n\n\t* ggc.h (lang_cleanup_tree): Remove.\n\t* gcc-simple.c (ggc_free_tree): Don't call lang_cleanup_tree.\n\t* ggc-callbacks.c (lang_cleanup_tree): Remove.\n\n\t* c-decl.c (finish_struct): Use ggc_alloc to allocate\n\tTYPE_LANG_SPECIFIC when garbage collecting.\n\t(lang_cleanup_tree): Remove.\n\nFrom-SVN: r29242", "tree": {"sha": "15ea4dfce4fc305fb556decff352c130246460ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/15ea4dfce4fc305fb556decff352c130246460ee"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/96603b4c5a3d4d698c5a7f59b67910ed93ced182", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96603b4c5a3d4d698c5a7f59b67910ed93ced182", "html_url": "https://github.com/Rust-GCC/gccrs/commit/96603b4c5a3d4d698c5a7f59b67910ed93ced182", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96603b4c5a3d4d698c5a7f59b67910ed93ced182/comments", "author": null, "committer": null, "parents": [{"sha": "31cf01446d16abdebb2b05bb8183ba487648900c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31cf01446d16abdebb2b05bb8183ba487648900c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/31cf01446d16abdebb2b05bb8183ba487648900c"}], "stats": {"total": 51, "additions": 15, "deletions": 36}, "files": [{"sha": "afc3ccbfb0bc0123ef23a92cbde15019fc505292", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96603b4c5a3d4d698c5a7f59b67910ed93ced182/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96603b4c5a3d4d698c5a7f59b67910ed93ced182/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=96603b4c5a3d4d698c5a7f59b67910ed93ced182", "patch": "@@ -1,3 +1,13 @@\n+Thu Sep  9 14:36:31 1999  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* ggc.h (lang_cleanup_tree): Remove.\n+\t* gcc-simple.c (ggc_free_tree): Don't call lang_cleanup_tree.\n+\t* ggc-callbacks.c (lang_cleanup_tree): Remove.\n+\t\n+\t* c-decl.c (finish_struct): Use ggc_alloc to allocate\n+\tTYPE_LANG_SPECIFIC when garbage collecting.\n+\t(lang_cleanup_tree): Remove.\n+\n Thu Sep  9 14:23:02 1999  Jason Merrill  <jason@yorick.cygnus.com>\n \n \t* defaults.h (EH_FRAME_SECTION, EH_FRAME_SECTION_ASM_OP): Define here."}, {"sha": "1acb16012646f4de106d3e9ef6fb59455ccfdb28", "filename": "gcc/c-decl.c", "status": "modified", "additions": 5, "deletions": 16, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96603b4c5a3d4d698c5a7f59b67910ed93ced182/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96603b4c5a3d4d698c5a7f59b67910ed93ced182/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=96603b4c5a3d4d698c5a7f59b67910ed93ced182", "patch": "@@ -5725,7 +5725,9 @@ finish_struct (t, fieldlist, attributes)\n \t/* Use the same allocation policy here that make_node uses, to\n \t   ensure that this lives as long as the rest of the struct decl.\n \t   All decls in an inline function need to be saved.  */\n-\tif (allocation_temporary_p ())\n+\tif (ggc_p)\n+\t  space = ggc_alloc (sizeof (struct lang_type) + len * sizeof (tree));\n+\telse if (allocation_temporary_p ())\n \t  space = savealloc (sizeof (struct lang_type) + len * sizeof (tree));\n \telse\n \t  space = oballoc (sizeof (struct lang_type) + len * sizeof (tree));\n@@ -7142,19 +7144,6 @@ lang_mark_tree (t)\n       ggc_mark_tree (i->error_locus);\n       ggc_mark_tree (i->limbo_value);\n     }\n-}\n-\n-/* Free the language specific bits in T for GC.  */\n-void\n-lang_cleanup_tree (t)\n-     tree t;\n-{\n-  if (TREE_CODE_CLASS (TREE_CODE (t)) == 't'\n-      && TYPE_LANG_SPECIFIC (t) != NULL)\n-    {\n-#if 0\n-      /* This is currently allocated with an obstack.  This will change.  */\n-      free (TYPE_LANG_SPECIFIC (t));\n-#endif\n-    }\n+  else if (TYPE_P (t) && TYPE_LANG_SPECIFIC (t))\n+    ggc_mark (TYPE_LANG_SPECIFIC (t));\n }"}, {"sha": "3992368cff567465cc179ca458ead437b2b99f98", "filename": "gcc/ggc-callbacks.c", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96603b4c5a3d4d698c5a7f59b67910ed93ced182/gcc%2Fggc-callbacks.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96603b4c5a3d4d698c5a7f59b67910ed93ced182/gcc%2Fggc-callbacks.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fggc-callbacks.c?ref=96603b4c5a3d4d698c5a7f59b67910ed93ced182", "patch": "@@ -35,15 +35,6 @@ lang_mark_tree (t)\n   abort ();\n }\n \n-void\n-lang_cleanup_tree (t)\n-     union tree_node *t ATTRIBUTE_UNUSED;\n-{\n-  /* If this function is called, we are doing GC.  But, this file is\n-     only included in compilers for languages that don't support GC.  */\n-  abort ();\n-}\n-\n void\n lang_mark_false_label_stack (l)\n      struct label_node *l ATTRIBUTE_UNUSED;"}, {"sha": "d6e13cbf6f4e2022ccc51adb62268215e96fc507", "filename": "gcc/ggc-simple.c", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96603b4c5a3d4d698c5a7f59b67910ed93ced182/gcc%2Fggc-simple.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96603b4c5a3d4d698c5a7f59b67910ed93ced182/gcc%2Fggc-simple.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fggc-simple.c?ref=96603b4c5a3d4d698c5a7f59b67910ed93ced182", "patch": "@@ -385,14 +385,6 @@ static inline void\n ggc_free_tree (t)\n      struct ggc_tree *t;\n {\n-  switch (TREE_CODE_CLASS (TREE_CODE (&t->tree)))\n-    {\n-    case 'd': /* A decl node.  */\n-    case 't': /* A type node.  */\n-      lang_cleanup_tree (&t->tree);\n-      break;\n-    }\n-\n #ifdef GGC_DUMP\n   fprintf (dump, \"collect tree %p\\n\", &t->tree);\n #endif"}, {"sha": "bd6fe2fe543a562fc075dd1e973ae9f1290065d2", "filename": "gcc/ggc.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96603b4c5a3d4d698c5a7f59b67910ed93ced182/gcc%2Fggc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96603b4c5a3d4d698c5a7f59b67910ed93ced182/gcc%2Fggc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fggc.h?ref=96603b4c5a3d4d698c5a7f59b67910ed93ced182", "patch": "@@ -87,9 +87,6 @@ void ggc_mark PROTO ((void *));\n    the lang_specific hooks in the tree.  */\n void lang_mark_tree PROTO ((union tree_node *));\n \n-/* And similarly to free that data when the tree node is released.  */\n-void lang_cleanup_tree PROTO ((union tree_node *));\n-\n /* The FALSE_LABEL_STACK, declared in except.h, has\n    language-dependent semantics.  Each front-end should define this\n    function appropriately.  */"}]}