{"sha": "d291a19abe20e9d82d37df555f619b09d76283da", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDI5MWExOWFiZTIwZTlkODJkMzdkZjU1NWY2MTliMDlkNzYyODNkYQ==", "commit": {"author": {"name": "Ovidiu Predescu", "email": "ovidiu@gcc.gnu.org", "date": "2001-02-28T17:05:10Z"}, "committer": {"name": "Ovidiu Predescu", "email": "ovidiu@gcc.gnu.org", "date": "2001-02-28T17:05:10Z"}, "message": "Added new test from Nicola Pero.\n\nFrom-SVN: r40123", "tree": {"sha": "d385af21d4aaea47e77b760423a63f6d5b962bc1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d385af21d4aaea47e77b760423a63f6d5b962bc1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d291a19abe20e9d82d37df555f619b09d76283da", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d291a19abe20e9d82d37df555f619b09d76283da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d291a19abe20e9d82d37df555f619b09d76283da", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d291a19abe20e9d82d37df555f619b09d76283da/comments", "author": null, "committer": null, "parents": [{"sha": "10493d77211033957f8e9e562f1564c111b7b335", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10493d77211033957f8e9e562f1564c111b7b335", "html_url": "https://github.com/Rust-GCC/gccrs/commit/10493d77211033957f8e9e562f1564c111b7b335"}], "stats": {"total": 69, "additions": 69, "deletions": 0}, "files": [{"sha": "9c7c0acbadb9551c9d8df36a2dda6ed7c78a0d0b", "filename": "gcc/testsuite/objc/execute/bycopy-3.m", "status": "added", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d291a19abe20e9d82d37df555f619b09d76283da/gcc%2Ftestsuite%2Fobjc%2Fexecute%2Fbycopy-3.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d291a19abe20e9d82d37df555f619b09d76283da/gcc%2Ftestsuite%2Fobjc%2Fexecute%2Fbycopy-3.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc%2Fexecute%2Fbycopy-3.m?ref=d291a19abe20e9d82d37df555f619b09d76283da", "patch": "@@ -0,0 +1,69 @@\n+/*\n+ * Contributed by Nicola Pero <nicola@brainstorm.co.uk>\n+ * Wed Feb 28 12:27:03 CET 2001\n+ */\n+\n+/*\n+ * This test contains some no-op code which is needed to keep it\n+ * compile on broken gcc 3.x.  Anyway, the no-op code does not\n+ * interfere with what we are testing, which is that the `bycopy'\n+ * keyword generates the _F_BYCOPY qualifier for the return type.  */\n+\n+#include <objc/objc.h>\n+#include <objc/Object.h>\n+#include <objc/Protocol.h>\n+#include <objc/encoding.h>\n+\n+@protocol MyProtocol\n++ (bycopy id<MyProtocol>) bycopyMethod;\n+@end\n+\n+/* This no-op class to keep it compile under broken gcc 3.x */\n+@interface MyObject : Object <MyProtocol> \n+@end\n+\n+@implementation MyObject\n++ (bycopy id<MyProtocol>) bycopyMethod\n+{\n+  return [MyObject alloc];\n+}\n+@end\n+\n+int main (void)\n+{\n+  struct objc_method_description *method;\n+  const char *method_types;\n+  unsigned qualifiers;\n+  Protocol *protocol;\n+  /* This no-op command is needed to keep the test compile on broken\n+     gcc 3.x */\n+  MyObject *object = [MyObject bycopyMethod];\n+\n+  /* Get the protocol object */\n+  protocol = @protocol (MyProtocol);\n+\n+  /* Ask to the protocol for the description of the method bycopyMethod */\n+  method = [protocol descriptionForClassMethod: @selector (bycopyMethod)];\n+  if (method == NULL)\n+    {\n+      printf (\"Could not find method bycopyMethod in protocol!\\n\");\n+      exit (1);\n+    }\n+\n+  /* Get the method types for the method - which encode return type,\n+     arguments etc. */\n+  method_types = method->types;\n+\n+  /* Get the qualifiers for the return type */\n+  qualifiers = objc_get_type_qualifiers (method_types);\n+\n+  /* If _F_BYCOPY is not there, the compiler is broken */\n+  if (! (qualifiers & _F_BYCOPY))\n+    {\n+      printf (\"Failed - selector does not contain _F_BYCOPY qualifier!\\n\");\n+      exit (1);\n+    }\n+\n+  /* Else, happy end */\n+  return 0;\n+}"}]}