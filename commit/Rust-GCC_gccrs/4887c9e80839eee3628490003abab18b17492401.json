{"sha": "4887c9e80839eee3628490003abab18b17492401", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDg4N2M5ZTgwODM5ZWVlMzYyODQ5MDAwM2FiYWIxOGIxNzQ5MjQwMQ==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2019-07-02T11:50:27Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2019-07-02T11:50:27Z"}, "message": "Fix preprocessor checks for Clang builtins\n\nClang seems to define built-ins that start with \"__builtin_\" as\nnon-keywords, which means that we need to use __has_builtin to detect\nthem, not __is_identifier. The built-ins that don't start with\n\"__builtin_\" are keywords, and can only be detected using\n__is_identifier and not by __has_builtin.\n\n\t* include/bits/c++config (_GLIBCXX_HAVE_BUILTIN_LAUNDER)\n\t(_GLIBCXX_HAVE_BUILTIN_IS_CONSTANT_EVALUATED): Use __has_builtin\n\tinstead of __is_identifier to detect Clang support.\n\nFrom-SVN: r272931", "tree": {"sha": "9e81b71ff21870788ad227c9b6432113e683ef8a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9e81b71ff21870788ad227c9b6432113e683ef8a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4887c9e80839eee3628490003abab18b17492401", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4887c9e80839eee3628490003abab18b17492401", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4887c9e80839eee3628490003abab18b17492401", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4887c9e80839eee3628490003abab18b17492401/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fe51b129500370ad5818e6dc7a2439f53796f59e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe51b129500370ad5818e6dc7a2439f53796f59e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe51b129500370ad5818e6dc7a2439f53796f59e"}], "stats": {"total": 12, "additions": 9, "deletions": 3}, "files": [{"sha": "0a31f6bdb769bb1d21176a4c34964673dc9f172f", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4887c9e80839eee3628490003abab18b17492401/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4887c9e80839eee3628490003abab18b17492401/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=4887c9e80839eee3628490003abab18b17492401", "patch": "@@ -1,3 +1,9 @@\n+2019-07-02  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/bits/c++config (_GLIBCXX_HAVE_BUILTIN_LAUNDER)\n+\t(_GLIBCXX_HAVE_BUILTIN_IS_CONSTANT_EVALUATED): Use __has_builtin\n+\tinstead of __is_identifier to detect Clang support.\n+\n 2019-07-02  Jim Wilson  <jimw@sifive.com>\n \n \t* configure.ac (BUILD_PDF): Also test for doxygen, dot, xsltproc,"}, {"sha": "c8e099aaadd31ba0961f3167d1b713b982fbdab5", "filename": "libstdc++-v3/include/bits/c++config", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4887c9e80839eee3628490003abab18b17492401/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fc%2B%2Bconfig", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4887c9e80839eee3628490003abab18b17492401/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fc%2B%2Bconfig", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fc%2B%2Bconfig?ref=4887c9e80839eee3628490003abab18b17492401", "patch": "@@ -636,18 +636,18 @@ namespace std\n # if __GNUC__ >= 9\n #  define _GLIBCXX_HAVE_BUILTIN_IS_CONSTANT_EVALUATED 1\n # endif\n-#elif defined(__is_identifier)\n+#elif defined(__is_identifier) && defined(__has_builtin)\n // For non-GNU compilers:\n # if ! __is_identifier(__has_unique_object_representations)\n #  define _GLIBCXX_HAVE_BUILTIN_HAS_UNIQ_OBJ_REP 1\n # endif\n # if ! __is_identifier(__is_aggregate)\n #  define _GLIBCXX_HAVE_BUILTIN_IS_AGGREGATE 1\n # endif\n-# if ! __is_identifier(__builtin_launder)\n+# if __has_builtin(__builtin_launder)\n #  define _GLIBCXX_HAVE_BUILTIN_LAUNDER 1\n # endif\n-# if ! __is_identifier(__builtin_is_constant_evaluated)\n+# if __has_builtin(__builtin_is_constant_evaluated)\n #  define _GLIBCXX_HAVE_BUILTIN_IS_CONSTANT_EVALUATED 1\n # endif\n #endif // GCC"}]}