{"sha": "586cdac8e5af3fff142829e579558f8728e56f81", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTg2Y2RhYzhlNWFmM2ZmZjE0MjgyOWU1Nzk1NThmODcyOGU1NmY4MQ==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2015-12-04T17:28:54Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2015-12-04T17:28:54Z"}, "message": "rs6000: Clean up the cstore code a bit\n\n\"register_operand\" was a bit confusing.  Also some other minor cleanups.\n\n\n\t* (cstore<mode>4_unsigned): Use gpc_reg_operand instead of\n\tregister_operand.  Remove empty constraints.  Use std::swap.\n\t(cstore_si_as_di, cstore<mode>4_signed_imm,\n\tcstore<mode>4_unsigned_imm, cstore<mode>4 for GPR): Use\n\tgpc_reg_operand instead of register_operand.\n\t(cstore<mode>4 for FP): Use gpc_reg_operand instead of\n\tregister_operand.  Remove empty constraints.\n\nFrom-SVN: r231287", "tree": {"sha": "1bf94659736977c4161f80f0edfe303639443ac6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1bf94659736977c4161f80f0edfe303639443ac6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/586cdac8e5af3fff142829e579558f8728e56f81", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/586cdac8e5af3fff142829e579558f8728e56f81", "html_url": "https://github.com/Rust-GCC/gccrs/commit/586cdac8e5af3fff142829e579558f8728e56f81", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/586cdac8e5af3fff142829e579558f8728e56f81/comments", "author": null, "committer": null, "parents": [{"sha": "04a9ae287f6d76c60464c57be98550a25b358c34", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04a9ae287f6d76c60464c57be98550a25b358c34", "html_url": "https://github.com/Rust-GCC/gccrs/commit/04a9ae287f6d76c60464c57be98550a25b358c34"}], "stats": {"total": 35, "additions": 22, "deletions": 13}, "files": [{"sha": "572b9a68d84764e38d632b014fde98d408883232", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/586cdac8e5af3fff142829e579558f8728e56f81/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/586cdac8e5af3fff142829e579558f8728e56f81/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=586cdac8e5af3fff142829e579558f8728e56f81", "patch": "@@ -1,4 +1,14 @@\n-2015-11-25  Nick Clifton  <nickc@redhat.com>\n+2015-12-04  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\t* (cstore<mode>4_unsigned): Use gpc_reg_operand instead of\n+\tregister_operand.  Remove empty constraints.  Use std::swap.\n+\t(cstore_si_as_di, cstore<mode>4_signed_imm,\n+\tcstore<mode>4_unsigned_imm, cstore<mode>4 for GPR): Use\n+\tgpc_reg_operand instead of register_operand.\n+\t(cstore<mode>4 for FP): Use gpc_reg_operand instead of\n+\tregister_operand.  Remove empty constraints.\n+\n+2015-12-04  Nick Clifton  <nickc@redhat.com>\n \n \t* config.gcc (extra_gcc_objs): Define for MSP430.\n         * common/config/msp430/msp430-common.c (msp430_handle_option):"}, {"sha": "39e1b299a72e89b2abb4d52a084ed07d6ed48cfe", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 11, "deletions": 12, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/586cdac8e5af3fff142829e579558f8728e56f81/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/586cdac8e5af3fff142829e579558f8728e56f81/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=586cdac8e5af3fff142829e579558f8728e56f81", "patch": "@@ -10568,9 +10568,9 @@\n \n (define_expand \"cstore<mode>4_unsigned\"\n   [(use (match_operator 1 \"unsigned_comparison_operator\"\n-         [(match_operand:P 2 \"gpc_reg_operand\" \"\")\n-          (match_operand:P 3 \"reg_or_short_operand\" \"\")]))\n-   (clobber (match_operand:P 0 \"register_operand\"))]\n+         [(match_operand:P 2 \"gpc_reg_operand\")\n+          (match_operand:P 3 \"reg_or_short_operand\")]))\n+   (clobber (match_operand:P 0 \"gpc_reg_operand\"))]\n   \"\"\n {\n   enum rtx_code cond_code = GET_CODE (operands[1]);\n@@ -10582,8 +10582,7 @@\n   if (cond_code == GEU || cond_code == LTU)\n     {\n       cond_code = swap_condition (cond_code);\n-      op1 = operands[3];\n-      op2 = operands[2];\n+      std::swap (op1, op2);\n     }\n \n   if (!gpc_reg_operand (op1, <MODE>mode))\n@@ -10609,7 +10608,7 @@\n   [(use (match_operator 1 \"unsigned_comparison_operator\"\n          [(match_operand:SI 2 \"gpc_reg_operand\")\n           (match_operand:SI 3 \"reg_or_short_operand\")]))\n-   (clobber (match_operand:SI 0 \"register_operand\"))]\n+   (clobber (match_operand:SI 0 \"gpc_reg_operand\"))]\n   \"\"\n {\n   int uns_flag = unsigned_comparison_operator (operands[1], VOIDmode) ? 1 : 0;\n@@ -10654,7 +10653,7 @@\n   [(use (match_operator 1 \"signed_comparison_operator\"\n          [(match_operand:GPR 2 \"gpc_reg_operand\")\n           (match_operand:GPR 3 \"immediate_operand\")]))\n-   (clobber (match_operand:GPR 0 \"register_operand\"))]\n+   (clobber (match_operand:GPR 0 \"gpc_reg_operand\"))]\n   \"\"\n {\n   bool invert = false;\n@@ -10699,7 +10698,7 @@\n   [(use (match_operator 1 \"unsigned_comparison_operator\"\n          [(match_operand:GPR 2 \"gpc_reg_operand\")\n           (match_operand:GPR 3 \"immediate_operand\")]))\n-   (clobber (match_operand:GPR 0 \"register_operand\"))]\n+   (clobber (match_operand:GPR 0 \"gpc_reg_operand\"))]\n   \"\"\n {\n   bool invert = false;\n@@ -10746,7 +10745,7 @@\n   [(use (match_operator 1 \"rs6000_cbranch_operator\"\n          [(match_operand:GPR 2 \"gpc_reg_operand\")\n           (match_operand:GPR 3 \"reg_or_short_operand\")]))\n-   (clobber (match_operand:GPR 0 \"register_operand\"))]\n+   (clobber (match_operand:GPR 0 \"gpc_reg_operand\"))]\n   \"\"\n {\n   /* Use ISEL if the user asked for it.  */\n@@ -10807,9 +10806,9 @@\n \n (define_expand \"cstore<mode>4\"\n   [(use (match_operator 1 \"rs6000_cbranch_operator\"\n-         [(match_operand:FP 2 \"gpc_reg_operand\" \"\")\n-          (match_operand:FP 3 \"gpc_reg_operand\" \"\")]))\n-   (clobber (match_operand:SI 0 \"register_operand\"))]\n+         [(match_operand:FP 2 \"gpc_reg_operand\")\n+          (match_operand:FP 3 \"gpc_reg_operand\")]))\n+   (clobber (match_operand:SI 0 \"gpc_reg_operand\"))]\n   \"\"\n {\n   rs6000_emit_sCOND (<MODE>mode, operands);"}]}