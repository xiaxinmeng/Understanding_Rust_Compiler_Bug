{"sha": "815facd36d5342079199ae644ccdb2e052c83a72", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODE1ZmFjZDM2ZDUzNDIwNzkxOTlhZTY0NGNjZGIyZTA1MmM4M2E3Mg==", "commit": {"author": {"name": "Manuel L\u00f3pez-Ib\u00e1\u00f1ez", "email": "manu@gcc.gnu.org", "date": "2015-05-26T17:12:28Z"}, "committer": {"name": "Manuel L\u00f3pez-Ib\u00e1\u00f1ez", "email": "manu@gcc.gnu.org", "date": "2015-05-26T17:12:28Z"}, "message": "line-map.c (LINE_MAP_MAX_COLUMN_NUMBER LINE_MAP_MAX_LOCATION_WITH_COLS,LINE_MAP_MAX_SOURCE_LOCATION): New constants.\n\nlibcpp/ChangeLog:\n\n2015-05-26  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n\n\t* line-map.c (LINE_MAP_MAX_COLUMN_NUMBER\n\tLINE_MAP_MAX_LOCATION_WITH_COLS,LINE_MAP_MAX_SOURCE_LOCATION):\n\tNew constants.\n\t(linemap_line_start): Use them.\n\t(linemap_position_for_column): Use them.\n\nFrom-SVN: r223705", "tree": {"sha": "1d0499ac4735b46b7235b7b759304fffe02538db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1d0499ac4735b46b7235b7b759304fffe02538db"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/815facd36d5342079199ae644ccdb2e052c83a72", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/815facd36d5342079199ae644ccdb2e052c83a72", "html_url": "https://github.com/Rust-GCC/gccrs/commit/815facd36d5342079199ae644ccdb2e052c83a72", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/815facd36d5342079199ae644ccdb2e052c83a72/comments", "author": null, "committer": null, "parents": [{"sha": "cee62feed1ea741f86e824abb6c3fc58bd01d730", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cee62feed1ea741f86e824abb6c3fc58bd01d730", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cee62feed1ea741f86e824abb6c3fc58bd01d730"}], "stats": {"total": 34, "additions": 28, "deletions": 6}, "files": [{"sha": "31d3b6102843060eb3b11d41de6a9d0f93edd2aa", "filename": "libcpp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/815facd36d5342079199ae644ccdb2e052c83a72/libcpp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/815facd36d5342079199ae644ccdb2e052c83a72/libcpp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2FChangeLog?ref=815facd36d5342079199ae644ccdb2e052c83a72", "patch": "@@ -1,3 +1,11 @@\n+2015-05-26  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n+\n+\t* line-map.c (LINE_MAP_MAX_COLUMN_NUMBER\n+\tLINE_MAP_MAX_LOCATION_WITH_COLS,LINE_MAP_MAX_SOURCE_LOCATION):\n+\tNew constants.\n+\t(linemap_line_start): Use them.\n+\t(linemap_position_for_column): Use them.\n+\n 2015-05-20  David Malcolm  <dmalcolm@redhat.com>\n \n \t* include/line-map.h (MAP_START_LOCATION): Eliminate the non-const"}, {"sha": "972f66cb90bc3c4d1c8f3cd45f9ee16e724b80ce", "filename": "libcpp/line-map.c", "status": "modified", "additions": 20, "deletions": 6, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/815facd36d5342079199ae644ccdb2e052c83a72/libcpp%2Fline-map.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/815facd36d5342079199ae644ccdb2e052c83a72/libcpp%2Fline-map.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fline-map.c?ref=815facd36d5342079199ae644ccdb2e052c83a72", "patch": "@@ -26,6 +26,18 @@ along with this program; see the file COPYING3.  If not see\n #include \"internal.h\"\n #include \"hashtab.h\"\n \n+/* Do not track column numbers higher than this one.  As a result, the\n+   range of column_bits is [7, 18] (or 0 if column numbers are\n+   disabled).  */\n+const unsigned int LINE_MAP_MAX_COLUMN_NUMBER = (1U << 17);\n+\n+/* Do not track column numbers if locations get higher than this.  */\n+const source_location LINE_MAP_MAX_LOCATION_WITH_COLS = 0x60000000;\n+\n+/* Highest possible source location encoded within an ordinary or\n+   macro map.  */\n+const source_location LINE_MAP_MAX_SOURCE_LOCATION = 0x70000000;\n+\n static void trace_include (const struct line_maps *, const line_map_ordinary *);\n static const line_map_ordinary * linemap_ordinary_map_lookup (struct line_maps *,\n \t\t\t\t\t\t\t      source_location);\n@@ -544,22 +556,23 @@ linemap_line_start (struct line_maps *set, linenum_type to_line,\n       || (max_column_hint >= (1U << ORDINARY_MAP_NUMBER_OF_COLUMN_BITS (map)))\n       || (max_column_hint <= 80\n \t  && ORDINARY_MAP_NUMBER_OF_COLUMN_BITS (map) >= 10)\n-      || (highest > 0x60000000\n-\t  && (set->max_column_hint || highest > 0x70000000)))\n+      || (highest > LINE_MAP_MAX_LOCATION_WITH_COLS\n+\t  && (set->max_column_hint || highest >= LINE_MAP_MAX_SOURCE_LOCATION)))\n     add_map = true;\n   else\n     max_column_hint = set->max_column_hint;\n   if (add_map)\n     {\n       int column_bits;\n-      if (max_column_hint > 100000 || highest > 0x60000000)\n+      if (max_column_hint > LINE_MAP_MAX_COLUMN_NUMBER\n+\t  || highest > LINE_MAP_MAX_LOCATION_WITH_COLS)\n \t{\n \t  /* If the column number is ridiculous or we've allocated a huge\n \t     number of source_locations, give up on column numbers. */\n \t  max_column_hint = 0;\n-\t  if (highest > 0x70000000)\n-\t    return 0;\n \t  column_bits = 0;\n+\t  if (highest > LINE_MAP_MAX_SOURCE_LOCATION)\n+\t    return 0;\n \t}\n       else\n \t{\n@@ -615,7 +628,8 @@ linemap_position_for_column (struct line_maps *set, unsigned int to_column)\n \n   if (to_column >= set->max_column_hint)\n     {\n-      if (r >= 0xC000000 || to_column > 100000)\n+      if (r > LINE_MAP_MAX_LOCATION_WITH_COLS\n+\t  || to_column > LINE_MAP_MAX_COLUMN_NUMBER)\n \t{\n \t  /* Running low on source_locations - disable column numbers.  */\n \t  return r;"}]}