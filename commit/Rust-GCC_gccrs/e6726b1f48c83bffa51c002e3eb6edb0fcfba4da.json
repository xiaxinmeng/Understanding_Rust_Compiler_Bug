{"sha": "e6726b1f48c83bffa51c002e3eb6edb0fcfba4da", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTY3MjZiMWY0OGM4M2JmZmE1MWMwMDJlM2ViNmVkYjBmY2ZiYTRkYQ==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1993-06-08T21:57:08Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1993-06-08T21:57:08Z"}, "message": "(move_movables): Delete REG_EQUAL notes that describe a\nnon loop invariant value.\n\nFrom-SVN: r4653", "tree": {"sha": "d7acbdb735b5556f64f4ebb8992702211ef9204b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d7acbdb735b5556f64f4ebb8992702211ef9204b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e6726b1f48c83bffa51c002e3eb6edb0fcfba4da", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6726b1f48c83bffa51c002e3eb6edb0fcfba4da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e6726b1f48c83bffa51c002e3eb6edb0fcfba4da", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6726b1f48c83bffa51c002e3eb6edb0fcfba4da/comments", "author": null, "committer": null, "parents": [{"sha": "68f68b904268d8eaa46103a7211b9be4ca6515c8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68f68b904268d8eaa46103a7211b9be4ca6515c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68f68b904268d8eaa46103a7211b9be4ca6515c8"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "ad82384c148f1e74378ee10d24ab933cf56695d6", "filename": "gcc/loop.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6726b1f48c83bffa51c002e3eb6edb0fcfba4da/gcc%2Floop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6726b1f48c83bffa51c002e3eb6edb0fcfba4da/gcc%2Floop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop.c?ref=e6726b1f48c83bffa51c002e3eb6edb0fcfba4da", "patch": "@@ -1824,6 +1824,16 @@ move_movables (movables, threshold, insn_count, loop_start, end, nregs)\n \n \t\t      REG_NOTES (i1) = REG_NOTES (p);\n \n+\t\t      /* If there is a REG_EQUAL note present whose value is\n+\t\t\t not loop invariant, then delete it, since it may\n+\t\t\t cause problems with later optimization passes.\n+\t\t\t It is possible for cse to create such notes\n+\t\t\t like this as a result of record_jump_cond.  */\n+\t\t      \n+\t\t      if ((temp = find_reg_note (i1, REG_EQUAL, NULL_RTX))\n+\t\t\t  && ! invariant_p (XEXP (temp, 0)))\n+\t\t\tremove_note (i1, temp);\n+\n \t\t      if (new_start == 0)\n \t\t\tnew_start = i1;\n "}]}