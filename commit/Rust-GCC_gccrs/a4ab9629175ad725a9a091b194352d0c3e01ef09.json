{"sha": "a4ab9629175ad725a9a091b194352d0c3e01ef09", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTRhYjk2MjkxNzVhZDcyNWE5YTA5MWIxOTQzNTJkMGMzZTAxZWYwOQ==", "commit": {"author": {"name": "Andreas Schwab", "email": "schwab@gcc.gnu.org", "date": "2008-12-05T13:57:45Z"}, "committer": {"name": "Andreas Schwab", "email": "schwab@gcc.gnu.org", "date": "2008-12-05T13:57:45Z"}, "message": "linux-unwind.h (frob_update_context): Check for NULL lr.\n\n* config/rs6000/linux-unwind.h (frob_update_context): Check for\nNULL lr.\n\nFrom-SVN: r142473", "tree": {"sha": "a227547f6eb0dd3b9b108eec887f9fa00f184195", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a227547f6eb0dd3b9b108eec887f9fa00f184195"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a4ab9629175ad725a9a091b194352d0c3e01ef09", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4ab9629175ad725a9a091b194352d0c3e01ef09", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a4ab9629175ad725a9a091b194352d0c3e01ef09", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4ab9629175ad725a9a091b194352d0c3e01ef09/comments", "author": null, "committer": null, "parents": [{"sha": "118f7432dfb8f0237ca3256b8ec3e0abec54488f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/118f7432dfb8f0237ca3256b8ec3e0abec54488f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/118f7432dfb8f0237ca3256b8ec3e0abec54488f"}], "stats": {"total": 125, "additions": 65, "deletions": 60}, "files": [{"sha": "64f127eb555d690b58fd6fd139f7e62a355c0e2a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 64, "deletions": 59, "changes": 123, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4ab9629175ad725a9a091b194352d0c3e01ef09/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4ab9629175ad725a9a091b194352d0c3e01ef09/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a4ab9629175ad725a9a091b194352d0c3e01ef09", "patch": "@@ -1,3 +1,8 @@\n+2008-12-05  Andreas Schwab  <schwab@suse.de>\n+\n+\t* config/rs6000/linux-unwind.h (frob_update_context): Check for\n+\tNULL lr.\n+\n 2008-12-05  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c/38408\n@@ -18,7 +23,7 @@\n \t(c_parser_initelt): Initialise des_loc and ellipsis_loc.\n \n 2008-12-04  Eric Botcazou  <ebotcazou@adacore.com>\n-            Gary Funck  <gary@intrepid.com>\n+\t    Gary Funck  <gary@intrepid.com>\n \n \t* cse.c (lookup_as_function): Delete mode frobbing code.\n \t(equiv_constant): Re-implement it there for SUBREGs.\n@@ -70,16 +75,16 @@\n \n 2008-12-03  Tomas Bily  <tbily@suse.cz>\n \n-        PR middle-end/38250\n-        * tree-loop-distribution.c (build_size_arg): New function.\n-        (generate_memset_zero): Checks if dr_analyze_innermost succeed.\n-        Reorganized generating of stmts.\n-        * testsuite/gcc.dg/tree-ssa/pr38250.c: New file.\n-        * tree-data-ref.c (dr_analyze_innermost): Returns bool.\n-        Indicate if analysis succeed.\n-        * tree-data-ref.h (dr_analyze_innermost): Returns bool.\n-        * tree-predcom.c (valid_initializer_p, find_looparound_phi):\n-        Uses new definition of dr_analyze_innermost.\n+\tPR middle-end/38250\n+\t* tree-loop-distribution.c (build_size_arg): New function.\n+\t(generate_memset_zero): Checks if dr_analyze_innermost succeed.\n+\tReorganized generating of stmts.\n+\t* testsuite/gcc.dg/tree-ssa/pr38250.c: New file.\n+\t* tree-data-ref.c (dr_analyze_innermost): Returns bool.\n+\tIndicate if analysis succeed.\n+\t* tree-data-ref.h (dr_analyze_innermost): Returns bool.\n+\t* tree-predcom.c (valid_initializer_p, find_looparound_phi):\n+\tUses new definition of dr_analyze_innermost.\n \n 2008-12-03  Ben Elliston  <bje@au.ibm.com>\n \n@@ -100,8 +105,8 @@\n \t* configure: Regenerated.\n \n 2008-12-03  Eric Botcazou  <ebotcazou@adacore.com>\n-            Jakub Jelinek  <jakub@redhat.com>\n-            Andrew Pinski  <andrew_pinski@playstation.sony.com>\n+\t    Jakub Jelinek  <jakub@redhat.com>\n+\t    Andrew Pinski  <andrew_pinski@playstation.sony.com>\n \n \tPR rtl-optimization/38281\n \t* combine.c (distribute_notes): When invoking SET_INSN_DELETED on i2,\n@@ -151,12 +156,12 @@\n 2008-12-02  Martin Jambor  <mjambor@suse.cz>\n \n \tPR middle-end/37861\n-        * tree-ssa-forwprop.c (forward_propagate_addr_expr_1): Do not check\n-        for INDIRECT_REFs.\n-        (forward_propagate_addr_into_variable_array_index): Check that the\n-        offset is not computed from a MULT_EXPR, use is_gimple_assign rather\n-        than the gimple code directly.\n-        \n+\t* tree-ssa-forwprop.c (forward_propagate_addr_expr_1): Do not check\n+\tfor INDIRECT_REFs.\n+\t(forward_propagate_addr_into_variable_array_index): Check that the\n+\toffset is not computed from a MULT_EXPR, use is_gimple_assign rather\n+\tthan the gimple code directly.\n+\n 2008-12-02  Ben Elliston  <bje@au.ibm.com>\n \n \t* config/spu/float_disf.c (__floatdisf): Prototype.\n@@ -185,7 +190,7 @@\n \n 2008-12-02  Danny Smith  <dannysmith@users.sourceforge.net>\n \n-        PR target/38054\n+\tPR target/38054\n \t* config/i386/winnt.c (i386_pe_encode_section_info): Condition stdcall\n \tdecoration of function RTL names here on Ada language.\n \n@@ -699,13 +704,13 @@\n \t(generate_edge_moves): Use store_can_be_removed_p instead of\n \tnot_modified_p.\n \t(ira_emit): Call setup_entered_from_non_parent_p.\n-\t\n+\n \t* ira-build.c (copy_info_to_removed_store_destinations):\n \tAccumulate CALL_FREQ, CALL_CROSSED_NUM, and\n \tALLOCNO_EXCESS_PRESSURE_POINTS_NUM.\n \t(ira_flattening): Don't CHECK MEM_OPTIMIZED_DEST[_P], always\n \tupdate all accumulated attributes.\n-\t\n+\n 2008-11-19  Vladimir Makarov  <vmakarov@redhat.com>\n \n \tPR bootstrap/37790\n@@ -714,7 +719,7 @@\n \tira_finish_allocno_live_range_list): New prototypes.\n \t(ira_allocno_live_ranges_intersect_p,\n \tira_pseudo_live_ranges_intersect_p): Remove.\n-\t\n+\n \t* ira-conflicts.c (ira_allocno_live_ranges_intersect_p,\n \tira_pseudo_live_ranges_intersect_p): Rename to\n \tallocnos_have_intersected_live_ranges_p and\n@@ -749,7 +754,7 @@\n \t(copy_info_to_removed_store_destinations): Ditto.  Use\n \tira_copy_allocno_live_range_list.\n \t(ira_flattening): Use ira_merge_allocno_live_ranges.\n-\t\n+\n \t* ira.c (too_high_register_pressure_p): New function.\n \t(ira): Switch off sharing spill slots if the pressure is too high.\n \n@@ -779,7 +784,7 @@\n \n \tPR target/38156\n \t* tree-parloops.c (loop_parallel_p): NULL vect_dump.\n-\t(separate_decls_in_region): Create shared struct even when there \n+\t(separate_decls_in_region): Create shared struct even when there\n \tare only reductions.\n \n 2008-11-19  Hariharan Sandanagobalane <hariharan@picochip.com>\n@@ -873,7 +878,7 @@\n \t* builtins.c (expand_builtin_sync_operation): Warn for changed\n \tsemantics in NAND builtins.\n \t* c.opt (Wsync-nand): New warning option.  Describe -Wsync-nand.\n-\t\n+\n \t* doc/invoke.texi (Warning options): Add Wsync-nand.\n \t* doc/extend.texi (Atomic Builtins) [__sync_fetch_and_nand]: Correct\n \t__sync_fetch_and_nand builtin operation in the example.  Add a note\n@@ -1023,7 +1028,7 @@\n \t(ira_build): Call it.\n \n \t* ira-costs.c (record_reg_classes): Set up ALLOCNO_BAD_SPILL_P.\n-\t\n+\n 2008-11-14  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/38104\n@@ -1240,7 +1245,7 @@\n \t* config/mips/sde.h: Likewise.\n \t* config/mips/iris6.h: Likewise.\n \t* config/mips/vr.h: Likewise.\n-\t* config/mips/mips.h (BASE_DRIVER_SELF_SPECS): New. \n+\t* config/mips/mips.h (BASE_DRIVER_SELF_SPECS): New.\n \n 2008-11-10  Vladimir Makarov  <vmakarov@redhat.com>\n \n@@ -1280,7 +1285,7 @@\n \n \t* ira-costs.c (scan_one_insn): Use alloc_pref for load from\n \tequivalent memory.\n-\t\n+\n 2008-11-10  Kaz Kojima  <kkojima@gcc.gnu.org>\n \n \tPR rtl-optimization/37514\n@@ -1343,7 +1348,7 @@\n \tPR middle-end/37379\n \t* tree-scalar-evolution.c (instantiate_scev_1): Return\n \tchrec_dont_know for VL_EXP_CLASS_P.\n-\t\n+\n 2008-11-06  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* reg-stack.c (reg_to_stack): Add missing braces in memset\n@@ -1358,7 +1363,7 @@\n \n \tPR target/26397\n \t* config/rs6000/aix.h (LIBSTDCXX_STATIC): Define.\n-\t\n+\n 2008-11-06  Kazu Hirata  <kazu@codesourcery.com>\n \n \tPR target/35574\n@@ -1383,7 +1388,7 @@\n \n \t* doc/sourcebuild.texi (Torture Tests): Add ADDITIONAL_TORTURE_OPTIONS.\n \n-2008-11-06  Ben Elliston  <bje@au.ibm.com>\t\n+2008-11-06  Ben Elliston  <bje@au.ibm.com>\n \n \t* config/rs6000/rs6000.c (rs6000_override_options): Comment fix.\n \n@@ -1521,7 +1526,7 @@\n \tmerging read-only and read-write sections or assembler emits\n \tread-write .eh_frame sections.\n \t* configure: Regenerate.\n-\t\n+\n 2008-11-03  Nathan Froyd  <froydnj@codesourcery.com>\n \n \tRevert:\n@@ -1670,7 +1675,7 @@\n \tPR target/37878\n \t* config/rs6000/predicates.md (word_offset_memref_operand):\n \tRestructure code and look inside auto-inc/dec addresses.\n-\t\n+\n 2008-10-29  Steve Ellcey  <sje@cup.hp.com>\n \n \tPR target/32277\n@@ -1713,7 +1718,7 @@\n \t* real.h (real_can_shorten_arithmetic): Declare.\n \n 2008-10-29  Bernd Schmidt  <bernd.schmidt@analog.com>\n-\t\n+\n \t* config/bfin/bfin-protos.h (WA_05000257, WA_05000283, WA_05000315,\n \tENABLE_WA_05000257, ENABLE_WA_05000283, ENABLE_WA_05000315): New.\n \t* config/bfin/bfin.c (bfin_cpus): Add these workaround bits as\n@@ -1796,14 +1801,14 @@\n \t* ira-int.h (ira_allocno): Add member updated_cover_class_cost.\n \t(ALLOCNO_UPDATED_COVER_CLASS_COST): New.\n \t(ira_fast_allocation): Remove the prototype.\n-\t\n+\n \t* ira-color.c (update_copy_costs, allocno_cost_compare_func,\n \tassign_hard_reg, calculate_allocno_spill_cost): Use updated costs.\n \t(color_pass): Modify the updated costs.\n \t(ira_color): Rename to color.  Make it static.\n \t(ira_fast_allocation): Rename to fast_allocation.  Make it static.\n \t(ira_color): New function.\n-\t\n+\n \t* ira-conflicts.c (process_regs_for_copy): Propagate hard reg cost\n \tchange.\n \n@@ -1828,7 +1833,7 @@\n \n \t* ira-costs.c (setup_allocno_cover_class_and_costs): Don't set up\n \tupdated costs.\n-\t\n+\n 2008-10-27  Vladimir Makarov  <vmakarov@redhat.com>\n \n \tPR middle-end/37813\n@@ -1953,7 +1958,7 @@\n \tFrom Jie Zhang  <jie.zhang@analog.com>\n \t* config/bfin/bfin.md (composev2hi): Put operands into vector\n \twith correct order.\n-\t\n+\n 2008-10-22  Chao-ying Fu  <fu@mips.com>\n \n \t* config/mips/mips.opt (msmartmips): Accept -mno-smartmips.\n@@ -2065,7 +2070,7 @@\n \n \t* doc/invoke.texi (Option Summary): Add -T to linker options.\n \t(Link Options): Document -T.\n-\t\n+\n 2008-10-21  Jakub Jelinek  <jakub@redhat.com>\n \n \t* tree-inline.c (tree_inlinable_function_p): Remove tuples\n@@ -2185,14 +2190,14 @@\n \n \t* doc/rtl.texi (clobber): Change descriotion of RA behaviour for\n \tearly clobbers of pseudo-registers.\n-\t\n+\n 2008-10-15  Vladimir Makarov  <vmakarov@redhat.com>\n \n \tPR middle-end/37674\n \t* ira-build.c (ira_flattening): Recalculate\n \tALLOCNO_TOTAL_NO_STACK_REG_P and ALLOCNO_TOTAL_CONFLICT_HARD_REGS\n \tfrom the scratch instead of the propagation.\n-\t\n+\n 2008-10-15  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \t* doc/rtl.texi (const_double): Remove the \"addr\" operand.\n@@ -2344,7 +2349,7 @@\n \t* haifa-sched.c (create_check_block_twin): Update calls to the above.\n \t* sel-sched.c (create_speculation_check): Likewise.\n \t* doc/tm.texi: Provide documentation for new target hooks.\n-\t\t\n+\n \t* config/ia64/ia64.c: Include sel-sched.h.  Rewrite speculation hooks.\n \t(ia64_gen_spec_insn): Removed.\n \t(get_spec_check_gen_function, insn_can_be_in_speculative_p,\n@@ -2389,7 +2394,7 @@\n \t(ia64_dfa_new_cycle): Assert that last_scheduled_insn is set when\n \ta group barrier is needed.  Fix vertical spacing.  Guard the code\n \tdoing state transition with last_scheduled_insn check.\n-\tMark that a stop bit should be before current insn if there was a \n+\tMark that a stop bit should be before current insn if there was a\n \tcycle advance.  Update current_cycle and mem_ops_in_group.\n \t(ia64_h_i_d_extended): Change use of current_sched_info to\n \tsched_deps_info. Reallocate stops_p by larger chunks.\n@@ -2400,7 +2405,7 @@\n \tia64_free_sched_context): New static functions.\n \t(gen_func_t): New typedef.\n \t(get_spec_load_gen_function): New function.\n-\t(SPEC_GEN_EXTEND_OFFSET): Declare.\t\n+\t(SPEC_GEN_EXTEND_OFFSET): Declare.\n \t(ia64_set_sched_flags): Check common_sched_info instead of *flags.\n \t(get_mode_no_for_insn): Change the condition that prevents use of\n \tspecial hardware registers so it can now handle pseudos.\n@@ -2429,7 +2434,7 @@\n \t(sel2_run): New variable.\n \t(ia64_reorg): When flag_selective_scheduling2 is set, run the\n \tselective scheduling pass instead of schedule_ebbs.\n-\t\n+\n \t* config/ia64/ia64.md (speculable1, speculable2): New attributes.\n \t(UNSPEC_LDS_A): New UNSPEC.\n \t(movqi_internal, movhi_internal, movsi_internal, movdi_internal,\n@@ -2453,7 +2458,7 @@\n \tinstead of Common Report Var.\n \n \t* config/ia64/itanium2.md: Remove incorrect bypass.\n-\t\n+\n \t* config/ia64/t-ia64 (ia64.o): Add dependency on sel-sched.h.\n \n 2008-10-14  Jakub Jelinek  <jakub@redhat.com>\n@@ -2605,7 +2610,7 @@\n \tPR middle-end/37808\n \t* df-scan.c (df_ref_change_reg_with_loc_1): Added test to make\n \tsure that ref has valid bb.\n-\t\n+\n 2008-10-12  Richard Henderson  <rth@redhat.com>\n \n \tPR middle-end/37447\n@@ -3006,7 +3011,7 @@\n \t(print_statistics, dump_alloc_pool_statistics): Enhance the\n \tprinting of statistics to print the number of elements and to use\n \tunsigned longs.\n-\t\n+\n 2008-10-07  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/37576\n@@ -3289,7 +3294,7 @@\n \n 2008-10-03  Andrew Pinski  <andrew_pinski@playstation.sony.com>\n \n-\t* config/rs6000/rs6000.md (fseldfsf4): Add TARGET_SINGLE_FLOAT \n+\t* config/rs6000/rs6000.md (fseldfsf4): Add TARGET_SINGLE_FLOAT\n \tcondition.\n \t(fselsfdf4): Make condition on \"TARGET_HARD_FLOAT && TARGET_FPRS &&\n \tTARGET_DOUBLE_FLOAT && TARGET_SINGLE_FLOAT\".\n@@ -3346,7 +3351,7 @@\n \tand VECTOR_TYPE recurse with useless_type_conversion_p which\n \tproperly handles void pointer conversion.\n \n-2008-10-02  Danny Smith  <dannysmith@users.sourceforge.net>  \n+2008-10-02  Danny Smith  <dannysmith@users.sourceforge.net>\n \n \tPR target/37528\n \t* config/i386/mingw32.h (LIBGCC_SPEC) : Replace with ..\n@@ -3714,7 +3719,7 @@\n \t(coalesced_allocnos_live_at_points_p,\n \tset_coalesced_allocnos_live_points): New functions.\n \t(coalesce_spill_slots): Rewrite.\n-\t\n+\n \t* ira-lives.c (remove_some_program_points_and_update_live_ranges,\n \tira_compress_allocno_live_ranges): New functions.\n \n@@ -3740,7 +3745,7 @@\n \n 2008-09-25 Sergei Dyshel <sergeid@il.ibm.com>\n \n-\t* matrix-reorg.c (transform_allocation_sites): Initializers \n+\t* matrix-reorg.c (transform_allocation_sites): Initializers\n \tadded to avoid the warning.\n \n 2008-09-25  Martin Jambor  <mjambor@suse.cz>\n@@ -3960,7 +3965,7 @@\n \tALLOCNO_EXCESS_PRESSURE_POINTS_NUM instead of frequencies and\n \trange lengths.  Get rid off doubles.\n \t(ira_fast_allocations): Call start_allocno_priorities.\n-\t\n+\n 2008-09-22  David Daney  <ddaney@avtrex.com>\n \n \tPR target/37593\n@@ -4010,7 +4015,7 @@\n \n 2008-09-22  Danny Smith  <dannysmith@users.sourceforge.net>\n \n-\tPR target/37528\t\n+\tPR target/37528\n \t* config/i386/t-cygming (SHLIB_LC): Remove.\n \t(SHLIB_LINK): Don't add static objects to SHLIB_IMPLIB\n \t* config/i386/t-cygwin (SHLIB_LC): Specify all required libraries.\n@@ -4124,9 +4129,9 @@\n \t* targhooks.c (default_ira_cover_classes): New function.\n \n 2008-09-19  Bob Wilson  <bob.wilson@acm.org>\n-\t\n+\n \t* config/xtensa/xtensa.md (reload<mode>_literal): Handle MEM operands.\n-\t\n+\n 2008-09-19  Ian Lance Taylor  <iant@google.com>\n \n \t* varasm.c (narrowing_initializer_constant_valid_p): Return\n@@ -4181,7 +4186,7 @@\n \t(load_tp, set_tp, tls_func, tls_arg, tls_call): New.\n \t* config/xtensa/xtensa-protos.h (xtensa_tls_referenced_p): Declare.\n \t* configure: Regenerated.\n-\t\n+\n 2008-09-18  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR target/37394\n@@ -4303,7 +4308,7 @@\n \tPR tree-optimization/37102\n \t* tree-outof-ssa.c (remove_gimple_phi_args): Remove all the PHI args\n \tfrom a node. Check to see if another PHI is dead.\n-\t(eliminate_useless_phis): Rename from eliminate_virtual_phis and \n+\t(eliminate_useless_phis): Rename from eliminate_virtual_phis and\n \tremove real PHIs which have no uses.\n \t(rewrite_out_of_ssa): Call eliminate_useless_phis.\n "}, {"sha": "86392f4181ed5376371a29e021a1086945ae3932", "filename": "gcc/config/rs6000/linux-unwind.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4ab9629175ad725a9a091b194352d0c3e01ef09/gcc%2Fconfig%2Frs6000%2Flinux-unwind.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4ab9629175ad725a9a091b194352d0c3e01ef09/gcc%2Fconfig%2Frs6000%2Flinux-unwind.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Flinux-unwind.h?ref=a4ab9629175ad725a9a091b194352d0c3e01ef09", "patch": "@@ -361,7 +361,7 @@ frob_update_context (struct _Unwind_Context *context, _Unwind_FrameState *fs ATT\n \t we have no good way to determine at compile time what to do.  */\n       unsigned int *insn\n \t= (unsigned int *) _Unwind_GetGR (context, R_LR);\n-      if (*insn == 0xE8410028)\n+      if (insn && *insn == 0xE8410028)\n \t_Unwind_SetGRPtr (context, 2, context->cfa + 40);\n     }\n #endif"}]}