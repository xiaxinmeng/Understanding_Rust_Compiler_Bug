{"sha": "afc1c5fa0dd3c261e5e234024e0665aadc29c9ff", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWZjMWM1ZmEwZGQzYzI2MWU1ZTIzNDAyNGUwNjY1YWFkYzI5YzlmZg==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2015-05-11T23:33:28Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2015-05-11T23:33:28Z"}, "message": "i386: Add CCPmode\n\nFor testing parity coming out of asm flags.\n\nFrom-SVN: r223026", "tree": {"sha": "7c0d45f013e364e98606e0dc95e09f2ab451b995", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7c0d45f013e364e98606e0dc95e09f2ab451b995"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/afc1c5fa0dd3c261e5e234024e0665aadc29c9ff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/afc1c5fa0dd3c261e5e234024e0665aadc29c9ff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/afc1c5fa0dd3c261e5e234024e0665aadc29c9ff", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/afc1c5fa0dd3c261e5e234024e0665aadc29c9ff/comments", "author": null, "committer": null, "parents": [{"sha": "7ca35180e923e40e8de6df1953c9177d22eae665", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ca35180e923e40e8de6df1953c9177d22eae665", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ca35180e923e40e8de6df1953c9177d22eae665"}], "stats": {"total": 27, "additions": 19, "deletions": 8}, "files": [{"sha": "f7d9856ab0541e67a0740f62a4624a8021896cc1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afc1c5fa0dd3c261e5e234024e0665aadc29c9ff/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afc1c5fa0dd3c261e5e234024e0665aadc29c9ff/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=afc1c5fa0dd3c261e5e234024e0665aadc29c9ff", "patch": "@@ -1,3 +1,9 @@\n+2015-05-11  Richard Henderson  <rth@redhat.com>\n+\n+\t* config/i386/i386-modes.def (CCP): New.\n+\t* config/i386/i386.c (put_condition_code): Handle it.\n+\t(ix86_match_ccmode, ix86_cc_modes_compatible): Likewise.\n+\n 2015-05-11  Richard Henderson  <rth@redhat.com>\n \n \t* target.def (md_asm_clobbers): Replace with..."}, {"sha": "714c138cc6a055b06f033c61e0dbddbf3ed09718", "filename": "gcc/config/i386/i386-modes.def", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afc1c5fa0dd3c261e5e234024e0665aadc29c9ff/gcc%2Fconfig%2Fi386%2Fi386-modes.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afc1c5fa0dd3c261e5e234024e0665aadc29c9ff/gcc%2Fconfig%2Fi386%2Fi386-modes.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-modes.def?ref=afc1c5fa0dd3c261e5e234024e0665aadc29c9ff", "patch": "@@ -55,6 +55,7 @@ ADJUST_ALIGNMENT (XF, TARGET_128BIT_LONG_DOUBLE ? 16 : 4);\n    Add CCA to indicate that only the Above flag is valid.\n    Add CCC to indicate that only the Carry flag is valid.\n    Add CCO to indicate that only the Overflow flag is valid.\n+   Add CCP to indicate that only the Parity flag is valid.\n    Add CCS to indicate that only the Sign flag is valid.\n    Add CCZ to indicate that only the Zero flag is valid.  */\n \n@@ -64,6 +65,7 @@ CC_MODE (CCNO);\n CC_MODE (CCA);\n CC_MODE (CCC);\n CC_MODE (CCO);\n+CC_MODE (CCP);\n CC_MODE (CCS);\n CC_MODE (CCZ);\n CC_MODE (CCFP);"}, {"sha": "1f130971204230286ff56000ff86616f6ad06f65", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 11, "deletions": 8, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afc1c5fa0dd3c261e5e234024e0665aadc29c9ff/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afc1c5fa0dd3c261e5e234024e0665aadc29c9ff/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=afc1c5fa0dd3c261e5e234024e0665aadc29c9ff", "patch": "@@ -14997,21 +14997,21 @@ put_condition_code (enum rtx_code code, machine_mode mode, bool reverse,\n \tcase CCAmode:\n \t  suffix = \"a\";\n \t  break;\n-\n \tcase CCCmode:\n \t  suffix = \"c\";\n \t  break;\n-\n \tcase CCOmode:\n \t  suffix = \"o\";\n \t  break;\n-\n+\tcase CCPmode:\n+\t  suffix = \"p\";\n+\t  break;\n \tcase CCSmode:\n \t  suffix = \"s\";\n \t  break;\n-\n \tdefault:\n \t  suffix = \"e\";\n+\t  break;\n \t}\n       break;\n     case NE:\n@@ -15020,21 +15020,21 @@ put_condition_code (enum rtx_code code, machine_mode mode, bool reverse,\n \tcase CCAmode:\n \t  suffix = \"na\";\n \t  break;\n-\n \tcase CCCmode:\n \t  suffix = \"nc\";\n \t  break;\n-\n \tcase CCOmode:\n \t  suffix = \"no\";\n \t  break;\n-\n+\tcase CCPmode:\n+\t  suffix = \"np\";\n+\t  break;\n \tcase CCSmode:\n \t  suffix = \"ns\";\n \t  break;\n-\n \tdefault:\n \t  suffix = \"ne\";\n+\t  break;\n \t}\n       break;\n     case GT:\n@@ -19765,6 +19765,7 @@ ix86_match_ccmode (rtx insn, machine_mode req_mode)\n     case CCAmode:\n     case CCCmode:\n     case CCOmode:\n+    case CCPmode:\n     case CCSmode:\n       if (set_mode != req_mode)\n \treturn false;\n@@ -19913,6 +19914,7 @@ ix86_cc_modes_compatible (machine_mode m1, machine_mode m2)\n     case CCAmode:\n     case CCCmode:\n     case CCOmode:\n+    case CCPmode:\n     case CCSmode:\n     case CCZmode:\n       switch (m2)\n@@ -19927,6 +19929,7 @@ ix86_cc_modes_compatible (machine_mode m1, machine_mode m2)\n \tcase CCAmode:\n \tcase CCCmode:\n \tcase CCOmode:\n+\tcase CCPmode:\n \tcase CCSmode:\n \tcase CCZmode:\n \t  return CCmode;"}]}