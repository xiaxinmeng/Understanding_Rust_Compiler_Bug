{"sha": "68e605c93d57c17f07edd50f7e1c80f9216befd2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjhlNjA1YzkzZDU3YzE3ZjA3ZWRkNTBmN2UxYzgwZjkyMTZiZWZkMg==", "commit": {"author": {"name": "Andrew Pinski", "email": "apinski@marvell.com", "date": "2020-08-25T06:17:52Z"}, "committer": {"name": "Chenghua Xu", "email": "paul.hua.gm@gmail.com", "date": "2020-08-25T07:39:28Z"}, "message": "MIPS: Fix __builtin_longjmp (PR 64242)\n\nThe problem here is mips has its own builtin_longjmp\npattern and it was not fixed when expand_builtin_longjmp\nwas fixed.  We need to read the new fp and gp before\nrestoring the stack as the buffer might be a local\nvariable.\n\n2020-08-25  Andrew Pinski  <apinski@marvell.com>\n\ngcc/ChangeLog:\n\n\tPR middle-end/64242\n\t* config/mips/mips.md (builtin_longjmp): Restore the frame\n\tpointer and stack pointer and gp.", "tree": {"sha": "57946cbc9efab3a99a58db0eb275af789013ffd5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/57946cbc9efab3a99a58db0eb275af789013ffd5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/68e605c93d57c17f07edd50f7e1c80f9216befd2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68e605c93d57c17f07edd50f7e1c80f9216befd2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68e605c93d57c17f07edd50f7e1c80f9216befd2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68e605c93d57c17f07edd50f7e1c80f9216befd2/comments", "author": {"login": "apinski-cavium", "id": 6335315, "node_id": "MDQ6VXNlcjYzMzUzMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/6335315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apinski-cavium", "html_url": "https://github.com/apinski-cavium", "followers_url": "https://api.github.com/users/apinski-cavium/followers", "following_url": "https://api.github.com/users/apinski-cavium/following{/other_user}", "gists_url": "https://api.github.com/users/apinski-cavium/gists{/gist_id}", "starred_url": "https://api.github.com/users/apinski-cavium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apinski-cavium/subscriptions", "organizations_url": "https://api.github.com/users/apinski-cavium/orgs", "repos_url": "https://api.github.com/users/apinski-cavium/repos", "events_url": "https://api.github.com/users/apinski-cavium/events{/privacy}", "received_events_url": "https://api.github.com/users/apinski-cavium/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ChenghuaXu", "id": 87753117, "node_id": "MDQ6VXNlcjg3NzUzMTE3", "avatar_url": "https://avatars.githubusercontent.com/u/87753117?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChenghuaXu", "html_url": "https://github.com/ChenghuaXu", "followers_url": "https://api.github.com/users/ChenghuaXu/followers", "following_url": "https://api.github.com/users/ChenghuaXu/following{/other_user}", "gists_url": "https://api.github.com/users/ChenghuaXu/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChenghuaXu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChenghuaXu/subscriptions", "organizations_url": "https://api.github.com/users/ChenghuaXu/orgs", "repos_url": "https://api.github.com/users/ChenghuaXu/repos", "events_url": "https://api.github.com/users/ChenghuaXu/events{/privacy}", "received_events_url": "https://api.github.com/users/ChenghuaXu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7fe2cec41bb2ccb499b6b6c513e00da1a270370f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7fe2cec41bb2ccb499b6b6c513e00da1a270370f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7fe2cec41bb2ccb499b6b6c513e00da1a270370f"}], "stats": {"total": 12, "additions": 11, "deletions": 1}, "files": [{"sha": "2e75a720fa9bd5f2873a747e3767ba0d4d6c146e", "filename": "gcc/config/mips/mips.md", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68e605c93d57c17f07edd50f7e1c80f9216befd2/gcc%2Fconfig%2Fmips%2Fmips.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68e605c93d57c17f07edd50f7e1c80f9216befd2/gcc%2Fconfig%2Fmips%2Fmips.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.md?ref=68e605c93d57c17f07edd50f7e1c80f9216befd2", "patch": "@@ -6562,9 +6562,19 @@\n \n   /* This bit is similar to expand_builtin_longjmp except that it\n      restores $gp as well.  */\n-  mips_emit_move (hard_frame_pointer_rtx, fp);\n   mips_emit_move (pv, lab);\n+  /* Restore the frame pointer and stack pointer and gp.  We must use a\n+     temporary since the setjmp buffer may be a local.  */\n+  fp = copy_to_reg (fp);\n+  gpv = copy_to_reg (gpv);\n   emit_stack_restore (SAVE_NONLOCAL, stack);\n+\n+  /* Ensure the frame pointer move is not optimized.  */\n+  emit_insn (gen_blockage ());\n+  emit_clobber (hard_frame_pointer_rtx);\n+  emit_clobber (frame_pointer_rtx);\n+  emit_clobber (gp);\n+  mips_emit_move (hard_frame_pointer_rtx, fp);\n   mips_emit_move (gp, gpv);\n   emit_use (hard_frame_pointer_rtx);\n   emit_use (stack_pointer_rtx);"}]}