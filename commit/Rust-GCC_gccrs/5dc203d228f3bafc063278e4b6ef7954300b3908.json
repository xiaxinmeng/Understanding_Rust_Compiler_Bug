{"sha": "5dc203d228f3bafc063278e4b6ef7954300b3908", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWRjMjAzZDIyOGYzYmFmYzA2MzI3OGU0YjZlZjc5NTQzMDBiMzkwOA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2016-10-13T12:54:42Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2016-10-13T12:54:42Z"}, "message": "[multiple changes]\n\n2016-10-13  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* sem_ch10.adb (Entity_Needs_Body): A generic\n\tsubprogram renaming needs a body if the renamed unit is declared\n\toutside the current compilation unit.\n\n2016-10-13  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* sinfo.ads, sem_ch12.adb, sem.adb, expander.adb, sem_res.ads,\n\tsem_ch4.adb, sem_ch8.adb, s-memory.adb: Minor reformatting.\n\n2016-10-13  Vincent Celier  <celier@adacore.com>\n\n\t* gnatcmd.adb: Delete all temporary files when invoked as gnat\n\tlist -V -P ...\n\n2016-10-13  Ed Falis  <falis@adacore.com>\n\n\t* impunit.adb: add i-vxinco.ads.\n\t* s-interr-vxworks.adb: add hook for user interrupt connection routine.\n\nFrom-SVN: r241112", "tree": {"sha": "fa92f8d930db55b708a519f95013bf6c71ed1f8c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fa92f8d930db55b708a519f95013bf6c71ed1f8c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5dc203d228f3bafc063278e4b6ef7954300b3908", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5dc203d228f3bafc063278e4b6ef7954300b3908", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5dc203d228f3bafc063278e4b6ef7954300b3908", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5dc203d228f3bafc063278e4b6ef7954300b3908/comments", "author": null, "committer": null, "parents": [{"sha": "3396fcc095e2ee8f247af414aeb448c15bf88f28", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3396fcc095e2ee8f247af414aeb448c15bf88f28", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3396fcc095e2ee8f247af414aeb448c15bf88f28"}], "stats": {"total": 210, "additions": 131, "deletions": 79}, "files": [{"sha": "2b70994eb387243f3d040577de4bef699af72fc6", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5dc203d228f3bafc063278e4b6ef7954300b3908/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5dc203d228f3bafc063278e4b6ef7954300b3908/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=5dc203d228f3bafc063278e4b6ef7954300b3908", "patch": "@@ -1,3 +1,24 @@\n+2016-10-13  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* sem_ch10.adb (Entity_Needs_Body): A generic\n+\tsubprogram renaming needs a body if the renamed unit is declared\n+\toutside the current compilation unit.\n+\n+2016-10-13  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* sinfo.ads, sem_ch12.adb, sem.adb, expander.adb, sem_res.ads,\n+\tsem_ch4.adb, sem_ch8.adb, s-memory.adb: Minor reformatting.\n+\n+2016-10-13  Vincent Celier  <celier@adacore.com>\n+\n+\t* gnatcmd.adb: Delete all temporary files when invoked as gnat\n+\tlist -V -P ...\n+\n+2016-10-13  Ed Falis  <falis@adacore.com>\n+\n+\t* impunit.adb: add i-vxinco.ads.\n+\t* s-interr-vxworks.adb: add hook for user interrupt connection routine.\n+\n 2016-10-13  Ed Falis  <falis@adacore.com>\n \n \t* s-interr-hwint.adb, s-interr-vxworks.adb: Rename s-interr-hwint.adb"}, {"sha": "84d64226772d0b6cb0178eef011f1ba14f55186e", "filename": "gcc/ada/expander.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5dc203d228f3bafc063278e4b6ef7954300b3908/gcc%2Fada%2Fexpander.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5dc203d228f3bafc063278e4b6ef7954300b3908/gcc%2Fada%2Fexpander.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexpander.adb?ref=5dc203d228f3bafc063278e4b6ef7954300b3908", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -151,7 +151,6 @@ package body Expander is\n             --  corresponding expand routines.\n \n             case Nkind (N) is\n-\n                when N_Abort_Statement =>\n                   Expand_N_Abort_Statement (N);\n "}, {"sha": "9a04e78abecd3531f143f9f75f76e47b591540f1", "filename": "gcc/ada/gnatcmd.adb", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5dc203d228f3bafc063278e4b6ef7954300b3908/gcc%2Fada%2Fgnatcmd.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5dc203d228f3bafc063278e4b6ef7954300b3908/gcc%2Fada%2Fgnatcmd.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatcmd.adb?ref=5dc203d228f3bafc063278e4b6ef7954300b3908", "patch": "@@ -356,6 +356,7 @@ procedure GNATCmd is\n \n       if Add_Sources then\n          Tempdir.Create_Temp_File (FD, Temp_File_Name);\n+         Record_Temp_File (Project_Tree.Shared, Temp_File_Name);\n          Last_Switches.Increment_Last;\n          Last_Switches.Table (Last_Switches.Last) :=\n            new String'(\"-files=\" & Get_Name_String (Temp_File_Name));\n@@ -1214,6 +1215,11 @@ begin\n          end if;\n \n          My_Exit_Status := Exit_Status (Spawn (Exec_Path.all, The_Args));\n+\n+         if not Keep_Temporary_Files then\n+            Delete_All_Temp_Files (Project_Tree.Shared);\n+         end if;\n+\n          Set_Exit_Status (My_Exit_Status);\n       end;\n    end;"}, {"sha": "e1cce657420c45b7c8b5bd588e36e87936a3a17a", "filename": "gcc/ada/impunit.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5dc203d228f3bafc063278e4b6ef7954300b3908/gcc%2Fada%2Fimpunit.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5dc203d228f3bafc063278e4b6ef7954300b3908/gcc%2Fada%2Fimpunit.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fimpunit.adb?ref=5dc203d228f3bafc063278e4b6ef7954300b3908", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---           Copyright (C) 2000-2015, Free Software Foundation, Inc.        --\n+--           Copyright (C) 2000-2016, Free Software Foundation, Inc.        --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -351,6 +351,7 @@ package body Impunit is\n     (\"i-java  \", F),  -- Interfaces.Java\n     (\"i-javjni\", F),  -- Interfaces.Java.JNI\n     (\"i-pacdec\", F),  -- Interfaces.Packed_Decimal\n+    (\"i-vxinco\", F),  -- Interfaces.VxWorks.Int_Connection\n     (\"i-vxwoio\", F),  -- Interfaces.VxWorks.IO\n     (\"i-vxwork\", F),  -- Interfaces.VxWorks\n "}, {"sha": "32fba6008afb3112d4588853bdc42acb4097ddcc", "filename": "gcc/ada/s-interr-vxworks.adb", "status": "modified", "additions": 19, "deletions": 2, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5dc203d228f3bafc063278e4b6ef7954300b3908/gcc%2Fada%2Fs-interr-vxworks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5dc203d228f3bafc063278e4b6ef7954300b3908/gcc%2Fada%2Fs-interr-vxworks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-interr-vxworks.adb?ref=5dc203d228f3bafc063278e4b6ef7954300b3908", "patch": "@@ -196,6 +196,22 @@ package body System.Interrupts is\n    --  be connected but disconnection is not possible on VxWorks. Therefore\n    --  we ensure Notify_Installed is connected at most once.\n \n+   type Interrupt_Connector is access function\n+     (Vector    : Interrupt_Vector;\n+      Handler   : Interrupt_Handler;\n+      Parameter : System.Address := System.Null_Address) return int;\n+   --  Profile must match VxWorks intConnect()\n+\n+   Interrupt_Connect : Interrupt_Connector :=\n+     System.OS_Interface.Interrupt_Connect'Access;\n+   pragma Export (C, Interrupt_Connect, \"__gnat_user_int_connect\");\n+   --  Allow user alternatives to the OS implementation of\n+   --  System.OS_Interface.Interrupt_Connect. This allows the user to\n+   --  associate a handler with an interrupt source when an alternate routine\n+   --  is needed to do so. The association is performed in\n+   --  Interfaces.VxWorks.Interrupt_Connections. Defaults to the standard OS\n+   --  connection routine.\n+\n    -----------------------\n    -- Local Subprograms --\n    -----------------------\n@@ -505,11 +521,12 @@ package body System.Interrupts is\n       --  Only install umbrella handler when no Ada handler has already been\n       --  installed. Note that the interrupt number is passed as a parameter\n       --  when an interrupt occurs, so the umbrella handler has a different\n-      --  wrapper generated by intConnect for each interrupt number.\n+      --  wrapper generated by the connector routine for each interrupt\n+      --  number.\n \n       if not Handler_Installed (Interrupt) then\n          Status :=\n-            Interrupt_Connect (Vec, Handler, System.Address (Interrupt));\n+           Interrupt_Connect.all (Vec, Handler, System.Address (Interrupt));\n          pragma Assert (Status = 0);\n \n          Handler_Installed (Interrupt) := True;"}, {"sha": "f419b4716eec648afa3087c454e32466523562e7", "filename": "gcc/ada/s-memory.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5dc203d228f3bafc063278e4b6ef7954300b3908/gcc%2Fada%2Fs-memory.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5dc203d228f3bafc063278e4b6ef7954300b3908/gcc%2Fada%2Fs-memory.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-memory.adb?ref=5dc203d228f3bafc063278e4b6ef7954300b3908", "patch": "@@ -52,7 +52,7 @@ package body System.Memory is\n    use System.Soft_Links;\n \n    function c_malloc (Size : System.CRTL.size_t) return System.Address\n-    renames System.CRTL.malloc;\n+     renames System.CRTL.malloc;\n \n    procedure c_free (Ptr : System.Address)\n      renames System.CRTL.free;"}, {"sha": "a9700f64b43523129b5a5e9fb8e37a9131e7f422", "filename": "gcc/ada/sem.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5dc203d228f3bafc063278e4b6ef7954300b3908/gcc%2Fada%2Fsem.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5dc203d228f3bafc063278e4b6ef7954300b3908/gcc%2Fada%2Fsem.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem.adb?ref=5dc203d228f3bafc063278e4b6ef7954300b3908", "patch": "@@ -1341,7 +1341,7 @@ package body Sem is\n          --  unconditionally, and has no restore mechanism, because it is\n          --  intended as a lowest-level Pure package.\n \n-         Save_Max_Line   : constant Int := Style_Max_Line_Length;\n+         Save_Max_Line : constant Int := Style_Max_Line_Length;\n \n          List : Elist_Id;\n \n@@ -1367,7 +1367,7 @@ package body Sem is\n          --  Check for scope mismatch on exit from compilation\n \n          pragma Assert (Current_Scope = Standard_Standard\n-                          or else Comp_Unit = Cunit (Main_Unit));\n+                         or else Comp_Unit = Cunit (Main_Unit));\n \n          --  Then pop entry for Standard, and pop implicit types\n "}, {"sha": "bc842e449cbe2327a551fb5f2d2e9a764ded92e0", "filename": "gcc/ada/sem_ch10.adb", "status": "modified", "additions": 15, "deletions": 5, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5dc203d228f3bafc063278e4b6ef7954300b3908/gcc%2Fada%2Fsem_ch10.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5dc203d228f3bafc063278e4b6ef7954300b3908/gcc%2Fada%2Fsem_ch10.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch10.adb?ref=5dc203d228f3bafc063278e4b6ef7954300b3908", "patch": "@@ -6145,15 +6145,14 @@ package body Sem_Ch10 is\n    -------------------------------\n \n    procedure Check_Body_Needed_For_SAL (Unit_Name : Entity_Id) is\n-\n       function Entity_Needs_Body (E : Entity_Id) return Boolean;\n       --  Determine whether use of entity E might require the presence of its\n       --  body. For a package this requires a recursive traversal of all nested\n       --  declarations.\n \n-      ---------------------------\n-      -- Entity_Needed_For_SAL --\n-      ---------------------------\n+      -----------------------\n+      -- Entity_Needs_Body --\n+      -----------------------\n \n       function Entity_Needs_Body (E : Entity_Id) return Boolean is\n          Ent : Entity_Id;\n@@ -6163,7 +6162,18 @@ package body Sem_Ch10 is\n             return True;\n \n          elsif Ekind_In (E, E_Generic_Function, E_Generic_Procedure) then\n-            return True;\n+\n+            --  A generic subprogram always requires the presence of its\n+            --  body because an instantiation needs both templates. The only\n+            --  exceptions is a generic subprogram renaming. In this case the\n+            --  body is needed only when the template is declared outside the\n+            --  compilation unit being checked.\n+\n+            if Present (Renamed_Entity (E)) then\n+               return not Within_Scope (E, Unit_Name);\n+            else\n+               return True;\n+            end if;\n \n          elsif Ekind (E) = E_Generic_Package\n            and then"}, {"sha": "3d940a63e8e87725e509b49106dc62ed7f88ab34", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5dc203d228f3bafc063278e4b6ef7954300b3908/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5dc203d228f3bafc063278e4b6ef7954300b3908/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=5dc203d228f3bafc063278e4b6ef7954300b3908", "patch": "@@ -14259,7 +14259,6 @@ package body Sem_Ch12 is\n             then\n                Copy_Dimensions (N2, N);\n             end if;\n-\n          end Set_Global_Type;\n \n          ------------------\n@@ -14335,7 +14334,7 @@ package body Sem_Ch12 is\n                   if Is_Global (Entity (Original_Node (N2))) then\n                      N2 := Original_Node (N2);\n                      Set_Associated_Node (N, N2);\n-                     Set_Global_Type (N, N2);\n+                     Set_Global_Type     (N, N2);\n \n                   --  Renaming is local, and will be resolved in instance\n \n@@ -14377,7 +14376,7 @@ package body Sem_Ch12 is\n             if Is_Global (Entity (Parent (N2))) then\n                Change_Selected_Component_To_Expanded_Name (Parent (N));\n                Set_Associated_Node (Parent (N), Parent (N2));\n-               Set_Global_Type (Parent (N), Parent (N2));\n+               Set_Global_Type     (Parent (N), Parent (N2));\n                Save_Entity_Descendants (N);\n \n             --  If this is a reference to the current generic entity, replace\n@@ -14436,7 +14435,7 @@ package body Sem_Ch12 is\n                if Is_Global (Entity (Name (Parent (N2)))) then\n                   Change_Selected_Component_To_Expanded_Name (Parent (N));\n                   Set_Associated_Node (Parent (N), Name (Parent (N2)));\n-                  Set_Global_Type (Parent (N), Name (Parent (N2)));\n+                  Set_Global_Type     (Parent (N), Name (Parent (N2)));\n                   Save_Entity_Descendants (N);\n \n                else"}, {"sha": "9060fb1b7232132c33a0a6a964eca7d8a451185e", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 9, "deletions": 10, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5dc203d228f3bafc063278e4b6ef7954300b3908/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5dc203d228f3bafc063278e4b6ef7954300b3908/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=5dc203d228f3bafc063278e4b6ef7954300b3908", "patch": "@@ -231,18 +231,17 @@ package body Sem_Ch4 is\n       R     : Node_Id;\n       Op_Id : Entity_Id;\n       T1    : Entity_Id);\n-   --  For equality and comparison operators, the result is always boolean,\n-   --  and the legality of the operation is determined from the visibility\n-   --  of the operand types. If one of the operands has a universal interpre-\n-   --  tation,  the legality check uses some compatible non-universal\n-   --  interpretation of the other operand. N can be an operator node, or\n-   --  a function call whose name is an operator designator. Any_Access, which\n-   --  is the initial type of the literal NULL, is a universal type for the\n-   --  purpose of this routine.\n+   --  For equality and comparison operators, the result is always boolean, and\n+   --  the legality of the operation is determined from the visibility of the\n+   --  operand types. If one of the operands has a universal interpretation,\n+   --  the legality check uses some compatible non-universal interpretation of\n+   --  the other operand. N can be an operator node, or a function call whose\n+   --  name is an operator designator. Any_Access, which is the initial type of\n+   --  the literal NULL, is a universal type for the purpose of this routine.\n \n    function Find_Primitive_Operation (N : Node_Id) return Boolean;\n-   --  Find candidate interpretations for the name Obj.Proc when it appears\n-   --  in a subprogram renaming declaration.\n+   --  Find candidate interpretations for the name Obj.Proc when it appears in\n+   --  a subprogram renaming declaration.\n \n    procedure Find_Unary_Types\n      (R     : Node_Id;"}, {"sha": "45159c0e611b3ff36d37b1e6b9daae0afa78a517", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5dc203d228f3bafc063278e4b6ef7954300b3908/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5dc203d228f3bafc063278e4b6ef7954300b3908/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=5dc203d228f3bafc063278e4b6ef7954300b3908", "patch": "@@ -8197,9 +8197,9 @@ package body Sem_Ch8 is\n          --  semantics of pragma Component_Alignment.\n \n          if Scope_Stack.Last > Scope_Stack.First then\n-            SST.Component_Alignment_Default := Scope_Stack.Table\n-                                                 (Scope_Stack.Last - 1).\n-                                                   Component_Alignment_Default;\n+            SST.Component_Alignment_Default :=\n+              Scope_Stack.Table\n+                (Scope_Stack.Last - 1).  Component_Alignment_Default;\n \n          --  Otherwise, this is the first scope being pushed on the scope\n          --  stack. Inherit the component alignment from the configuration"}, {"sha": "0fd9f8d1d0228af4bb1851560861824a12f36326", "filename": "gcc/ada/sem_res.ads", "status": "modified", "additions": 47, "deletions": 47, "changes": 94, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5dc203d228f3bafc063278e4b6ef7954300b3908/gcc%2Fada%2Fsem_res.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5dc203d228f3bafc063278e4b6ef7954300b3908/gcc%2Fada%2Fsem_res.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.ads?ref=5dc203d228f3bafc063278e4b6ef7954300b3908", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -47,34 +47,12 @@ package Sem_Res is\n    --  Resolve routines also complete the semantic analysis, and call the\n    --  expander for possible expansion of the completely type resolved node.\n \n-   procedure Resolve (N : Node_Id; Typ : Entity_Id);\n-   procedure Resolve (N : Node_Id; Typ : Entity_Id; Suppress : Check_Id);\n-   --  Top level type-checking procedure, called in a complete context. The\n-   --  construct N, which is a subexpression, has already been analyzed, and\n-   --  is required to be of type Typ given the analysis of the context (which\n-   --  uses the information gathered on the bottom up phase in Analyze). The\n-   --  resolve routines do various other processing, e.g. static evaluation.\n-   --  If a Suppress argument is present, then the resolution is done with the\n-   --  specified check suppressed (can be All_Checks to suppress all checks).\n-\n-   procedure Resolve (N : Node_Id);\n-   --  A version of Resolve where the type to be used for resolution is\n-   --  taken from the Etype (N). This is commonly used in cases where the\n-   --  context does not add anything and the first pass of analysis found\n-   --  the correct expected type.\n-\n-   procedure Resolve_Discrete_Subtype_Indication\n-     (N   : Node_Id;\n-      Typ : Entity_Id);\n-   --  Resolve subtype indications in choices (case statements and\n-   --  aggregates) and in index constraints. Note that the resulting Etype\n-   --  of the subtype indication node is set to the Etype of the contained\n-   --  range (i.e. an Itype is not constructed for the actual subtype).\n-\n-   procedure Resolve_Entry (Entry_Name : Node_Id);\n-   --  Find name of entry being called, and resolve prefix of name with its\n-   --  own type. For now we assume that the prefix cannot be overloaded and\n-   --  the name of the entry plays no role in the resolution.\n+   procedure Ambiguous_Character (C : Node_Id);\n+   --  Give list of candidate interpretations when a character literal cannot\n+   --  be resolved, for example in a (useless) comparison such as 'A' = 'B'.\n+   --  In Ada 95 the literals in question can be of type Character or Wide_\n+   --  Character. In Ada 2005 Wide_Wide_Character is also a candidate. The\n+   --  node may also be overloaded with user-defined character types.\n \n    procedure Analyze_And_Resolve (N : Node_Id);\n    procedure Analyze_And_Resolve (N : Node_Id; Typ : Entity_Id);\n@@ -92,36 +70,58 @@ package Sem_Res is\n    --  is not present, then the Etype of the expression after the Analyze\n    --  call is used for the Resolve.\n \n-   procedure Ambiguous_Character (C : Node_Id);\n-   --  Give list of candidate interpretations when a character literal cannot\n-   --  be resolved, for example in a (useless) comparison such as 'A' = 'B'.\n-   --  In Ada 95 the literals in question can be of type Character or Wide_\n-   --  Character. In Ada 2005 Wide_Wide_Character is also a candidate. The\n-   --  node may also be overloaded with user-defined character types.\n-\n    procedure Check_Parameterless_Call (N : Node_Id);\n-   --  Several forms of names can denote calls to entities without para-\n-   --  meters. The context determines whether the name denotes the entity\n-   --  or a call to it. When it is a call, the node must be rebuilt\n-   --  accordingly and reanalyzed to obtain possible interpretations.\n+   --  Several forms of names can denote calls to entities without parameters.\n+   --  The context determines whether the name denotes the entity or a call to\n+   --  it. When it is a call, the node must be rebuilt accordingly and\n+   --  reanalyzed to obtain possible interpretations.\n    --\n    --  The name may be that of an overloadable construct, or it can be an\n    --  explicit dereference of a prefix that denotes an access to subprogram.\n    --  In that case, we want to convert the name into a call only if the\n-   --  context requires the return type of the subprogram.  Finally, a\n+   --  context requires the return type of the subprogram. Finally, a\n    --  parameterless protected subprogram appears as a selected component.\n    --\n    --  The parameter T is the Typ for the corresponding resolve call.\n \n    procedure Preanalyze_And_Resolve (N : Node_Id; T : Entity_Id);\n-   --  Performs a pre-analysis of expression node N. During pre-analysis,\n-   --  N is analyzed and then resolved against type T, but no expansion\n-   --  is carried out for N or its children. For more info on pre-analysis\n-   --  read the spec of Sem.\n+   --  Performs a pre-analysis of expression node N. During pre-analysis, N is\n+   --  analyzed and then resolved against type T, but no expansion is carried\n+   --  out for N or its children. For more info on pre-analysis read the spec\n+   --  of Sem.\n \n    procedure Preanalyze_And_Resolve (N : Node_Id);\n    --  Same, but use type of node because context does not impose a single type\n \n+   procedure Resolve (N : Node_Id; Typ : Entity_Id);\n+   procedure Resolve (N : Node_Id; Typ : Entity_Id; Suppress : Check_Id);\n+   --  Top-level type-checking procedure, called in a complete context. The\n+   --  construct N, which is a subexpression, has already been analyzed, and\n+   --  is required to be of type Typ given the analysis of the context (which\n+   --  uses the information gathered on the bottom-up phase in Analyze). The\n+   --  resolve routines do various other processing, e.g. static evaluation.\n+   --  If a Suppress argument is present, then the resolution is done with the\n+   --  specified check suppressed (can be All_Checks to suppress all checks).\n+\n+   procedure Resolve (N : Node_Id);\n+   --  A version of Resolve where the type to be used for resolution is taken\n+   --  from the Etype (N). This is commonly used in cases where the context\n+   --  does not add anything and the first pass of analysis found the correct\n+   --  expected type.\n+\n+   procedure Resolve_Discrete_Subtype_Indication\n+     (N   : Node_Id;\n+      Typ : Entity_Id);\n+   --  Resolve subtype indications in choices (case statements and aggregates)\n+   --  and in index constraints. Note that the resulting Etype of the subtype_\n+   --  indication node is set to the Etype of the contained range (i.e. an\n+   --  Itype is not constructed for the actual subtype).\n+\n+   procedure Resolve_Entry (Entry_Name : Node_Id);\n+   --  Find name of entry being called, and resolve prefix of name with its\n+   --  own type. For now we assume that the prefix cannot be overloaded and\n+   --  the name of the entry plays no role in the resolution.\n+\n    function Valid_Conversion\n      (N           : Node_Id;\n       Target      : Entity_Id;\n@@ -137,7 +137,7 @@ package Sem_Res is\n private\n    procedure Resolve_Implicit_Type (N : Node_Id) renames Resolve;\n    pragma Inline (Resolve_Implicit_Type);\n-   --  We use this renaming to make the application of Inline very explicit\n-   --  to this version, since other versions of Resolve are not inlined.\n+   --  We use this renaming to make the application of Inline very explicit to\n+   --  this version, since other versions of Resolve are not inlined.\n \n end Sem_Res;"}, {"sha": "659e989d0a49bb8950f71f0fe71e995678d6e22e", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5dc203d228f3bafc063278e4b6ef7954300b3908/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5dc203d228f3bafc063278e4b6ef7954300b3908/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=5dc203d228f3bafc063278e4b6ef7954300b3908", "patch": "@@ -5232,13 +5232,13 @@ package Sinfo is\n       --  Acts_As_Spec (Flag4-Sem)\n       --  Bad_Is_Detected (Flag15) used only by parser\n       --  Do_Storage_Check (Flag17-Sem)\n+      --  Has_Relative_Deadline_Pragma (Flag9-Sem)\n       --  Is_Entry_Barrier_Function (Flag8-Sem)\n       --  Is_Protected_Subprogram_Body (Flag7-Sem)\n       --  Is_Task_Body_Procedure (Flag1-Sem)\n       --  Is_Task_Master (Flag5-Sem)\n-      --  Was_Originally_Stub (Flag13-Sem)\n-      --  Has_Relative_Deadline_Pragma (Flag9-Sem)\n       --  Was_Expression_Function (Flag18-Sem)\n+      --  Was_Originally_Stub (Flag13-Sem)\n \n       -------------------------\n       -- Expression Function --"}]}