{"sha": "560d18d3ed805fce952e8c2be9dc022619fe8cfb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTYwZDE4ZDNlZDgwNWZjZTk1MmU4YzJiZTlkYzAyMjYxOWZlOGNmYg==", "commit": {"author": {"name": "Aditya Kumar", "email": "aditya.k7@samsung.com", "date": "2015-12-16T17:27:57Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2015-12-16T17:27:57Z"}, "message": "update required isl version\n\nwe check for a the isl compute timeout function added in isl 0.13.\nThat means GCC could still be configured with isl 0.13, 0.14, and 0.15.\n\n\t* config/isl.m4 (ISL_CHECK_VERSION): Check for\n\tisl_ctx_get_max_operations.\n\t* configure: Regenerate.\n\n\tgcc/\n\t* config.in: Regenerate.\n\t* configure: Regenerate.\n\t* configure.ac: Remove checks for functions that exist in isl 0.13 or\n\tlater.\n\t* graphite-isl-ast-to-gimple.c: Remove #ifdefs and code for isl 0.12.\n        * graphite-optimize-isl.c: Same.\n\t* graphite-poly.c: Same.\n\t* graphite-sese-to-poly.c: Same.\n\t* graphite.h: Add comment for isl 0.14.\n\t* toplev.c (print_version): Print isl version.\n\nCo-Authored-By: Sebastian Pop <s.pop@samsung.com>\n\nFrom-SVN: r231706", "tree": {"sha": "1bd0fb9442c0902f334dea6a379612493333318f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1bd0fb9442c0902f334dea6a379612493333318f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/560d18d3ed805fce952e8c2be9dc022619fe8cfb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/560d18d3ed805fce952e8c2be9dc022619fe8cfb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/560d18d3ed805fce952e8c2be9dc022619fe8cfb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/560d18d3ed805fce952e8c2be9dc022619fe8cfb/comments", "author": null, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2994ab20f1702205ad1be6ef120d0460b236ae7c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2994ab20f1702205ad1be6ef120d0460b236ae7c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2994ab20f1702205ad1be6ef120d0460b236ae7c"}], "stats": {"total": 242, "additions": 72, "deletions": 170}, "files": [{"sha": "586973ffa1c6c5fe30f01e2ca530b89b517b3b92", "filename": "ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/560d18d3ed805fce952e8c2be9dc022619fe8cfb/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/560d18d3ed805fce952e8c2be9dc022619fe8cfb/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=560d18d3ed805fce952e8c2be9dc022619fe8cfb", "patch": "@@ -1,3 +1,10 @@\n+2015-12-16  Aditya Kumar  <aditya.k7@samsung.com>\n+\t    Sebastian Pop  <s.pop@samsung.com>\n+\n+\t* config/isl.m4 (ISL_CHECK_VERSION): Check for\n+\tisl_ctx_get_max_operations.\n+\t* configure: Regenerate.\n+\n 2015-12-15  Alessandro Fanfarillo  <fanfarillo.gcc@gmail.com>\n \n \t* MAINTAINERS (Write After Approval): Add myself."}, {"sha": "7387ff2c52d9ff221d1277c0470d619d8204897c", "filename": "config/isl.m4", "status": "modified", "additions": 17, "deletions": 12, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/560d18d3ed805fce952e8c2be9dc022619fe8cfb/config%2Fisl.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/560d18d3ed805fce952e8c2be9dc022619fe8cfb/config%2Fisl.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2Fisl.m4?ref=560d18d3ed805fce952e8c2be9dc022619fe8cfb", "patch": "@@ -19,23 +19,23 @@\n \n # ISL_INIT_FLAGS ()\n # -------------------------\n-# Provide configure switches for ISL support.\n+# Provide configure switches for isl support.\n # Initialize isllibs/islinc according to the user input.\n AC_DEFUN([ISL_INIT_FLAGS],\n [\n   AC_ARG_WITH([isl-include],\n     [AS_HELP_STRING(\n       [--with-isl-include=PATH],\n-      [Specify directory for installed ISL include files])])\n+      [Specify directory for installed isl include files])])\n   AC_ARG_WITH([isl-lib],\n     [AS_HELP_STRING(\n       [--with-isl-lib=PATH],\n-      [Specify the directory for the installed ISL library])])\n+      [Specify the directory for the installed isl library])])\n \n   AC_ARG_ENABLE(isl-version-check,\n     [AS_HELP_STRING(\n       [--disable-isl-version-check],\n-      [disable check for ISL version])],\n+      [disable check for isl version])],\n     ENABLE_ISL_CHECK=$enableval,\n     ENABLE_ISL_CHECK=yes)\n   \n@@ -58,15 +58,15 @@ AC_DEFUN([ISL_INIT_FLAGS],\n   if test \"x${with_isl_lib}\" != x; then\n     isllibs=\"-L$with_isl_lib\"\n   fi\n-  dnl If no --with-isl flag was specified and there is in-tree ISL\n+  dnl If no --with-isl flag was specified and there is in-tree isl\n   dnl source, set up flags to use that and skip any version tests\n-  dnl as we cannot run them before building ISL.\n+  dnl as we cannot run them before building isl.\n   if test \"x${islinc}\" = x && test \"x${isllibs}\" = x \\\n      && test -d ${srcdir}/isl; then\n     isllibs='-L$$r/$(HOST_SUBDIR)/isl/'\"$lt_cv_objdir\"' '\n     islinc='-I$$r/$(HOST_SUBDIR)/isl/include -I$$s/isl/include'\n     ENABLE_ISL_CHECK=no\n-    AC_MSG_WARN([using in-tree ISL, disabling version check])\n+    AC_MSG_WARN([using in-tree isl, disabling version check])\n   fi\n \n   isllibs=\"${isllibs} -lisl\"\n@@ -75,7 +75,7 @@ AC_DEFUN([ISL_INIT_FLAGS],\n \n # ISL_REQUESTED (ACTION-IF-REQUESTED, ACTION-IF-NOT)\n # ----------------------------------------------------\n-# Provide actions for failed ISL detection.\n+# Provide actions for failed isl detection.\n AC_DEFUN([ISL_REQUESTED],\n [\n   AC_REQUIRE([ISL_INIT_FLAGS])\n@@ -106,12 +106,17 @@ AC_DEFUN([ISL_CHECK_VERSION],\n     LDFLAGS=\"${_isl_saved_LDFLAGS} ${isllibs}\"\n     LIBS=\"${_isl_saved_LIBS} -lisl\"\n \n-    AC_MSG_CHECKING([for compatible ISL])\n-    AC_LINK_IFELSE([AC_LANG_PROGRAM([[#include <isl/val.h>]], [[;]])],\n-\t[gcc_cv_isl=yes],\n-\t[gcc_cv_isl=no])\n+    AC_MSG_CHECKING([for isl 0.15 (or deprecated 0.14)])\n+    AC_TRY_LINK([#include <isl/ctx.h>],\n+                [isl_ctx_get_max_operations (isl_ctx_alloc ());],\n+                [gcc_cv_isl=yes],\n+                [gcc_cv_isl=no])\n     AC_MSG_RESULT([$gcc_cv_isl])\n \n+    if test \"${gcc_cv_isl}\" = no ; then\n+      AC_MSG_RESULT([recommended isl version is 0.15, minimum required isl version 0.14 is deprecated])\n+    fi\n+\n     CFLAGS=$_isl_saved_CFLAGS\n     LDFLAGS=$_isl_saved_LDFLAGS\n     LIBS=$_isl_saved_LIBS"}, {"sha": "a6495c4fcceb009ab5d8b694b1e2a5fea652e40d", "filename": "configure", "status": "modified", "additions": 14, "deletions": 9, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/560d18d3ed805fce952e8c2be9dc022619fe8cfb/configure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/560d18d3ed805fce952e8c2be9dc022619fe8cfb/configure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure?ref=560d18d3ed805fce952e8c2be9dc022619fe8cfb", "patch": "@@ -1492,7 +1492,7 @@ Optional Features:\n                           build static libjava [default=no]\n   --enable-bootstrap      enable bootstrapping [yes if native build]\n   --disable-isl-version-check\n-                          disable check for ISL version\n+                          disable check for isl version\n   --enable-lto            enable link time optimization support\n   --enable-linker-plugin-configure-flags=FLAGS\n                           additional flags for configuring linker plugins\n@@ -1553,8 +1553,8 @@ Optional Packages:\n                           package. Equivalent to\n                           --with-isl-include=PATH/include plus\n                           --with-isl-lib=PATH/lib\n-  --with-isl-include=PATH Specify directory for installed ISL include files\n-  --with-isl-lib=PATH     Specify the directory for the installed ISL library\n+  --with-isl-include=PATH Specify directory for installed isl include files\n+  --with-isl-lib=PATH     Specify the directory for the installed isl library\n   --with-build-sysroot=SYSROOT\n                           use sysroot as the system root during the build\n   --with-debug-prefix-map='A=B C=D ...'\n@@ -6003,8 +6003,8 @@ fi\n     isllibs='-L$$r/$(HOST_SUBDIR)/isl/'\"$lt_cv_objdir\"' '\n     islinc='-I$$r/$(HOST_SUBDIR)/isl/include -I$$s/isl/include'\n     ENABLE_ISL_CHECK=no\n-    { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: using in-tree ISL, disabling version check\" >&5\n-$as_echo \"$as_me: WARNING: using in-tree ISL, disabling version check\" >&2;}\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: using in-tree isl, disabling version check\" >&5\n+$as_echo \"$as_me: WARNING: using in-tree isl, disabling version check\" >&2;}\n   fi\n \n   isllibs=\"${isllibs} -lisl\"\n@@ -6020,15 +6020,15 @@ $as_echo \"$as_me: WARNING: using in-tree ISL, disabling version check\" >&2;}\n     LDFLAGS=\"${_isl_saved_LDFLAGS} ${isllibs}\"\n     LIBS=\"${_isl_saved_LIBS} -lisl\"\n \n-    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for compatible ISL\" >&5\n-$as_echo_n \"checking for compatible ISL... \" >&6; }\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for isl 0.15 (or deprecated 0.14)\" >&5\n+$as_echo_n \"checking for isl 0.15 (or deprecated 0.14)... \" >&6; }\n     cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n-#include <isl/val.h>\n+#include <isl/ctx.h>\n int\n main ()\n {\n-;\n+isl_ctx_get_max_operations (isl_ctx_alloc ());\n   ;\n   return 0;\n }\n@@ -6043,6 +6043,11 @@ rm -f core conftest.err conftest.$ac_objext \\\n     { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $gcc_cv_isl\" >&5\n $as_echo \"$gcc_cv_isl\" >&6; }\n \n+    if test \"${gcc_cv_isl}\" = no ; then\n+      { $as_echo \"$as_me:${as_lineno-$LINENO}: result: recommended isl version is 0.15, minimum required isl version 0.14 is deprecated\" >&5\n+$as_echo \"recommended isl version is 0.15, minimum required isl version 0.14 is deprecated\" >&6; }\n+    fi\n+\n     CFLAGS=$_isl_saved_CFLAGS\n     LDFLAGS=$_isl_saved_LDFLAGS\n     LIBS=$_isl_saved_LIBS"}, {"sha": "2ee6de9a94ae84a8e240466e746a1ffc35cb2798", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/560d18d3ed805fce952e8c2be9dc022619fe8cfb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/560d18d3ed805fce952e8c2be9dc022619fe8cfb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=560d18d3ed805fce952e8c2be9dc022619fe8cfb", "patch": "@@ -1,3 +1,17 @@\n+2015-12-16  Aditya Kumar  <aditya.k7@samsung.com>\n+\t    Sebastian Pop  <s.pop@samsung.com>\n+\n+\t* config.in: Regenerate.\n+\t* configure: Regenerate.\n+\t* configure.ac: Remove checks for functions that exist in isl 0.13\n+\tor later.\n+\t* graphite-isl-ast-to-gimple.c: Remove #ifdefs and code for isl 0.12.\n+        * graphite-optimize-isl.c: Same.\n+\t* graphite-poly.c: Same.\n+\t* graphite-sese-to-poly.c: Same.\n+\t* graphite.h: Add comment for isl 0.14.\n+\t* toplev.c (print_version): Print isl version.\n+\n 2015-12-10  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* ipa-cp.c (ipa_get_indirect_edge_target_1): Use can_refer; do not"}, {"sha": "f1977c6c7e984bc0849537e6a17d242c0f60549e", "filename": "gcc/config.in", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/560d18d3ed805fce952e8c2be9dc022619fe8cfb/gcc%2Fconfig.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/560d18d3ed805fce952e8c2be9dc022619fe8cfb/gcc%2Fconfig.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.in?ref=560d18d3ed805fce952e8c2be9dc022619fe8cfb", "patch": "@@ -1372,24 +1372,12 @@\n #endif\n \n \n-/* Define if isl_ctx_get_max_operations exists. */\n-#ifndef USED_FOR_TARGET\n-#undef HAVE_ISL_CTX_MAX_OPERATIONS\n-#endif\n-\n-\n /* Define if isl_options_set_schedule_serialize_sccs exists. */\n #ifndef USED_FOR_TARGET\n #undef HAVE_ISL_OPTIONS_SET_SCHEDULE_SERIALIZE_SCCS\n #endif\n \n \n-/* Define if isl_schedule_constraints_compute_schedule exists. */\n-#ifndef USED_FOR_TARGET\n-#undef HAVE_ISL_SCHED_CONSTRAINTS_COMPUTE_SCHEDULE\n-#endif\n-\n-\n /* Define to 1 if you have the `kill' function. */\n #ifndef USED_FOR_TARGET\n #undef HAVE_KILL"}, {"sha": "f75d69ab84f9e72480e343c540fc4789838c4134", "filename": "gcc/configure", "status": "modified", "additions": 2, "deletions": 59, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/560d18d3ed805fce952e8c2be9dc022619fe8cfb/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/560d18d3ed805fce952e8c2be9dc022619fe8cfb/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=560d18d3ed805fce952e8c2be9dc022619fe8cfb", "patch": "@@ -16378,7 +16378,7 @@ _LT_EOF\n \tif $NM -V 2>&1 | $GREP 'GNU' > /dev/null; then\n \t  export_symbols_cmds='$NM -Bpg $libobjs $convenience | awk '\\''{ if (((\\$ 2 == \"T\") || (\\$ 2 == \"D\") || (\\$ 2 == \"B\") || (\\$ 2 == \"W\")) && (substr(\\$ 3,1,1) != \".\")) { print \\$ 3 } }'\\'' | sort -u > $export_symbols'\n \telse\n-\t  export_symbols_cmds='$NM -BCpg $libobjs $convenience | awk '\\''{ if (((\\$ 2 == \"T\") || (\\$ 2 == \"D\") || (\\$ 2 == \"B\")) && (substr(\\$ 3,1,1) != \".\")) { print \\$ 3 } }'\\'' | sort -u > $export_symbols'\n+\t  export_symbols_cmds='$NM -BCpg $libobjs $convenience | awk '\\''{ if (((\\$ 2 == \"T\") || (\\$ 2 == \"D\") || (\\$ 2 == \"B\") || (\\$ 2 == \"L\")) && (substr(\\$ 3,1,1) != \".\")) { print \\$ 3 } }'\\'' | sort -u > $export_symbols'\n \tfi\n \taix_use_runtimelinking=no\n \n@@ -20864,7 +20864,7 @@ $as_echo_n \"checking whether the $compiler linker ($LD) supports shared librarie\n     if $NM -V 2>&1 | $GREP 'GNU' > /dev/null; then\n       export_symbols_cmds_CXX='$NM -Bpg $libobjs $convenience | awk '\\''{ if (((\\$ 2 == \"T\") || (\\$ 2 == \"D\") || (\\$ 2 == \"B\") || (\\$ 2 == \"W\")) && (substr(\\$ 3,1,1) != \".\")) { print \\$ 3 } }'\\'' | sort -u > $export_symbols'\n     else\n-      export_symbols_cmds_CXX='$NM -BCpg $libobjs $convenience | awk '\\''{ if (((\\$ 2 == \"T\") || (\\$ 2 == \"D\") || (\\$ 2 == \"B\")) && (substr(\\$ 3,1,1) != \".\")) { print \\$ 3 } }'\\'' | sort -u > $export_symbols'\n+      export_symbols_cmds_CXX='$NM -BCpg $libobjs $convenience | awk '\\''{ if (((\\$ 2 == \"T\") || (\\$ 2 == \"D\") || (\\$ 2 == \"B\") || (\\$ 2 == \"L\")) && (substr(\\$ 3,1,1) != \".\")) { print \\$ 3 } }'\\'' | sort -u > $export_symbols'\n     fi\n     ;;\n   pw32*)\n@@ -28911,29 +28911,6 @@ if test \"x${ISLLIBS}\" != \"x\" ; then\n   saved_LIBS=\"$LIBS\"\n   LIBS=\"$LIBS $ISLLIBS $GMPLIBS\"\n \n-  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking Checking for isl_schedule_constraints_compute_schedule\" >&5\n-$as_echo_n \"checking Checking for isl_schedule_constraints_compute_schedule... \" >&6; }\n-  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n-/* end confdefs.h.  */\n-#include <isl/schedule.h>\n-int\n-main ()\n-{\n-isl_schedule_constraints_compute_schedule (NULL);\n-  ;\n-  return 0;\n-}\n-_ACEOF\n-if ac_fn_cxx_try_link \"$LINENO\"; then :\n-  ac_has_isl_schedule_constraints_compute_schedule=yes\n-else\n-  ac_has_isl_schedule_constraints_compute_schedule=no\n-fi\n-rm -f core conftest.err conftest.$ac_objext \\\n-    conftest$ac_exeext conftest.$ac_ext\n-  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_has_isl_schedule_constraints_compute_schedule\" >&5\n-$as_echo \"$ac_has_isl_schedule_constraints_compute_schedule\" >&6; }\n-\n   { $as_echo \"$as_me:${as_lineno-$LINENO}: checking Checking for isl_options_set_schedule_serialize_sccs\" >&5\n $as_echo_n \"checking Checking for isl_options_set_schedule_serialize_sccs... \" >&6; }\n   cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n@@ -28957,47 +28934,13 @@ rm -f core conftest.err conftest.$ac_objext \\\n   { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_has_isl_options_set_schedule_serialize_sccs\" >&5\n $as_echo \"$ac_has_isl_options_set_schedule_serialize_sccs\" >&6; }\n \n-  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking Checking for isl_ctx_get_max_operations\" >&5\n-$as_echo_n \"checking Checking for isl_ctx_get_max_operations... \" >&6; }\n-  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n-/* end confdefs.h.  */\n-#include <isl/ctx.h>\n-int\n-main ()\n-{\n-isl_ctx_get_max_operations (isl_ctx_alloc ());\n-  ;\n-  return 0;\n-}\n-_ACEOF\n-if ac_fn_cxx_try_link \"$LINENO\"; then :\n-  ac_has_isl_ctx_get_max_operations=yes\n-else\n-  ac_has_isl_ctx_get_max_operations=no\n-fi\n-rm -f core conftest.err conftest.$ac_objext \\\n-    conftest$ac_exeext conftest.$ac_ext\n-  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_has_isl_ctx_get_max_operations\" >&5\n-$as_echo \"$ac_has_isl_ctx_get_max_operations\" >&6; }\n-\n   LIBS=\"$saved_LIBS\"\n   CXXFLAGS=\"$saved_CXXFLAGS\"\n \n-  if test x\"$ac_has_isl_schedule_constraints_compute_schedule\" = x\"yes\"; then\n-\n-$as_echo \"#define HAVE_ISL_SCHED_CONSTRAINTS_COMPUTE_SCHEDULE 1\" >>confdefs.h\n-\n-  fi\n-\n   if test x\"$ac_has_isl_options_set_schedule_serialize_sccs\" = x\"yes\"; then\n \n $as_echo \"#define HAVE_ISL_OPTIONS_SET_SCHEDULE_SERIALIZE_SCCS 1\" >>confdefs.h\n \n-  fi\n-  if test x\"$ac_has_isl_ctx_get_max_operations\" = x\"yes\"; then\n-\n-$as_echo \"#define HAVE_ISL_CTX_MAX_OPERATIONS 1\" >>confdefs.h\n-\n   fi\n fi\n "}, {"sha": "9382ab21a58e24dc5d153fb6fe1a90752b09a738", "filename": "gcc/configure.ac", "status": "modified", "additions": 0, "deletions": 23, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/560d18d3ed805fce952e8c2be9dc022619fe8cfb/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/560d18d3ed805fce952e8c2be9dc022619fe8cfb/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=560d18d3ed805fce952e8c2be9dc022619fe8cfb", "patch": "@@ -5919,43 +5919,20 @@ if test \"x${ISLLIBS}\" != \"x\" ; then\n   saved_LIBS=\"$LIBS\"\n   LIBS=\"$LIBS $ISLLIBS $GMPLIBS\"\n \n-  AC_MSG_CHECKING([Checking for isl_schedule_constraints_compute_schedule])\n-  AC_TRY_LINK([#include <isl/schedule.h>],\n-              [isl_schedule_constraints_compute_schedule (NULL);],\n-              [ac_has_isl_schedule_constraints_compute_schedule=yes],\n-              [ac_has_isl_schedule_constraints_compute_schedule=no])\n-  AC_MSG_RESULT($ac_has_isl_schedule_constraints_compute_schedule)\n-\n   AC_MSG_CHECKING([Checking for isl_options_set_schedule_serialize_sccs])\n   AC_TRY_LINK([#include <isl/schedule.h>],\n               [isl_options_set_schedule_serialize_sccs (NULL, 0);],\n               [ac_has_isl_options_set_schedule_serialize_sccs=yes],\n               [ac_has_isl_options_set_schedule_serialize_sccs=no])\n   AC_MSG_RESULT($ac_has_isl_options_set_schedule_serialize_sccs)\n \n-  AC_MSG_CHECKING([Checking for isl_ctx_get_max_operations])\n-  AC_TRY_LINK([#include <isl/ctx.h>],\n-              [isl_ctx_get_max_operations (isl_ctx_alloc ());],\n-              [ac_has_isl_ctx_get_max_operations=yes],\n-              [ac_has_isl_ctx_get_max_operations=no])\n-  AC_MSG_RESULT($ac_has_isl_ctx_get_max_operations)\n-\n   LIBS=\"$saved_LIBS\"\n   CXXFLAGS=\"$saved_CXXFLAGS\"\n \n-  if test x\"$ac_has_isl_schedule_constraints_compute_schedule\" = x\"yes\"; then\n-     AC_DEFINE(HAVE_ISL_SCHED_CONSTRAINTS_COMPUTE_SCHEDULE, 1,\n-               [Define if isl_schedule_constraints_compute_schedule exists.])\n-  fi\n-\n   if test x\"$ac_has_isl_options_set_schedule_serialize_sccs\" = x\"yes\"; then\n      AC_DEFINE(HAVE_ISL_OPTIONS_SET_SCHEDULE_SERIALIZE_SCCS, 1,\n                [Define if isl_options_set_schedule_serialize_sccs exists.])\n   fi\n-  if test x\"$ac_has_isl_ctx_get_max_operations\" = x\"yes\"; then\n-     AC_DEFINE(HAVE_ISL_CTX_MAX_OPERATIONS, 1,\n-               [Define if isl_ctx_get_max_operations exists.])\n-  fi\n fi\n \n GCC_ENABLE_PLUGINS"}, {"sha": "2f04de52c4af9e0bbfc800e52f05b6493123e7db", "filename": "gcc/graphite-isl-ast-to-gimple.c", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/560d18d3ed805fce952e8c2be9dc022619fe8cfb/gcc%2Fgraphite-isl-ast-to-gimple.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/560d18d3ed805fce952e8c2be9dc022619fe8cfb/gcc%2Fgraphite-isl-ast-to-gimple.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-isl-ast-to-gimple.c?ref=560d18d3ed805fce952e8c2be9dc022619fe8cfb", "patch": "@@ -60,15 +60,7 @@ along with GCC; see the file COPYING3.  If not see\n #include <isl/map.h>\n #include <isl/union_map.h>\n #include <isl/ast_build.h>\n-\n-/* Since ISL-0.13, the extern is in val_gmp.h.  */\n-#if !defined(HAVE_ISL_SCHED_CONSTRAINTS_COMPUTE_SCHEDULE) && defined(__cplusplus)\n-extern \"C\" {\n-#endif\n #include <isl/val_gmp.h>\n-#if !defined(HAVE_ISL_SCHED_CONSTRAINTS_COMPUTE_SCHEDULE) && defined(__cplusplus)\n-}\n-#endif\n \n #include \"graphite.h\"\n \n@@ -589,6 +581,7 @@ binary_op_to_tree (tree type, __isl_take isl_ast_expr *expr, ivs_params &ip)\n       return fold_build2 (TRUNC_DIV_EXPR, type, tree_lhs_expr, tree_rhs_expr);\n \n #if HAVE_ISL_OPTIONS_SET_SCHEDULE_SERIALIZE_SCCS\n+    /* ISL-0.15 or later.  */\n     case isl_ast_op_zdiv_r:\n #endif\n     case isl_ast_op_pdiv_r:\n@@ -762,6 +755,7 @@ gcc_expression_from_isl_expr_op (tree type, __isl_take isl_ast_expr *expr,\n     case isl_ast_op_pdiv_r:\n     case isl_ast_op_fdiv_q:\n #if HAVE_ISL_OPTIONS_SET_SCHEDULE_SERIALIZE_SCCS\n+    /* ISL-0.15 or later.  */\n     case isl_ast_op_zdiv_r:\n #endif\n     case isl_ast_op_and:"}, {"sha": "a8955f925e869110145b93924ef696c19cca975c", "filename": "gcc/graphite-optimize-isl.c", "status": "modified", "additions": 5, "deletions": 29, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/560d18d3ed805fce952e8c2be9dc022619fe8cfb/gcc%2Fgraphite-optimize-isl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/560d18d3ed805fce952e8c2be9dc022619fe8cfb/gcc%2Fgraphite-optimize-isl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-optimize-isl.c?ref=560d18d3ed805fce952e8c2be9dc022619fe8cfb", "patch": "@@ -49,13 +49,15 @@ along with GCC; see the file COPYING3.  If not see\n #include <isl/options.h>\n #include <isl/ctx.h>\n #ifdef HAVE_ISL_OPTIONS_SET_SCHEDULE_SERIALIZE_SCCS\n+/* isl 0.15 or later.  */\n #include <isl/schedule_node.h>\n #include <isl/ast_build.h>\n #endif\n \n #include \"graphite.h\"\n \n #ifdef HAVE_ISL_OPTIONS_SET_SCHEDULE_SERIALIZE_SCCS\n+/* isl 0.15 or later.  */\n \n /* get_schedule_for_node_st - Improve schedule for the schedule node.\n    Only Simple loop tiling is considered.  */\n@@ -371,12 +373,10 @@ static const int CONSTANT_BOUND = 20;\n bool\n optimize_isl (scop_p scop)\n {\n-#ifdef HAVE_ISL_CTX_MAX_OPERATIONS\n   int old_max_operations = isl_ctx_get_max_operations (scop->isl_context);\n   int max_operations = PARAM_VALUE (PARAM_MAX_ISL_OPERATIONS);\n   if (max_operations)\n     isl_ctx_set_max_operations (scop->isl_context, max_operations);\n-#endif\n   isl_options_set_on_error (scop->isl_context, ISL_ON_ERROR_CONTINUE);\n \n   isl_union_set *domain = scop_get_domains (scop);\n@@ -388,24 +388,10 @@ optimize_isl (scop_p scop)\n   isl_union_map *validity = dependences;\n   isl_union_map *proximity = isl_union_map_copy (validity);\n \n-#ifdef HAVE_ISL_SCHED_CONSTRAINTS_COMPUTE_SCHEDULE\n-  isl_schedule_constraints *schedule_constraints;\n-  schedule_constraints = isl_schedule_constraints_on_domain (domain);\n-  schedule_constraints\n-    = isl_schedule_constraints_set_proximity (schedule_constraints,\n-\t\t\t\t\t      proximity);\n-  schedule_constraints\n-    = isl_schedule_constraints_set_validity (schedule_constraints,\n-\t\t\t\t\t     isl_union_map_copy (validity));\n-  schedule_constraints\n-    = isl_schedule_constraints_set_coincidence (schedule_constraints,\n-\t\t\t\t\t\tvalidity);\n-#endif\n-\n   isl_options_set_schedule_max_constant_term (scop->isl_context, CONSTANT_BOUND);\n   isl_options_set_schedule_maximize_band_depth (scop->isl_context, 1);\n #ifdef HAVE_ISL_OPTIONS_SET_SCHEDULE_SERIALIZE_SCCS\n-  /* ISL-0.15 or later.  */\n+  /* isl 0.15 or later.  */\n   isl_options_set_schedule_serialize_sccs (scop->isl_context, 0);\n   isl_options_set_schedule_maximize_band_depth (scop->isl_context, 1);\n   isl_options_set_schedule_max_constant_term (scop->isl_context, 20);\n@@ -418,34 +404,24 @@ optimize_isl (scop_p scop)\n   isl_options_set_schedule_fuse (scop->isl_context, ISL_SCHEDULE_FUSE_MIN);\n #endif\n \n-#ifdef HAVE_ISL_SCHED_CONSTRAINTS_COMPUTE_SCHEDULE\n-  isl_schedule *schedule\n-    = isl_schedule_constraints_compute_schedule (schedule_constraints);\n-#else\n   isl_schedule *schedule\n     = isl_union_set_compute_schedule (domain, validity, proximity);\n-#endif\n-\n   isl_options_set_on_error (scop->isl_context, ISL_ON_ERROR_ABORT);\n \n-#ifdef HAVE_ISL_CTX_MAX_OPERATIONS\n   isl_ctx_reset_operations (scop->isl_context);\n   isl_ctx_set_max_operations (scop->isl_context, old_max_operations);\n   if (!schedule || isl_ctx_last_error (scop->isl_context) == isl_error_quota)\n     {\n       if (dump_file && dump_flags)\n-\tfprintf (dump_file, \"ISL timed out --param max-isl-operations=%d\\n\",\n+\tfprintf (dump_file, \"isl timed out --param max-isl-operations=%d\\n\",\n \t\t max_operations);\n       if (schedule)\n \tisl_schedule_free (schedule);\n       return false;\n     }\n-#else\n-  if (!schedule)\n-    return false;\n-#endif\n \n #ifdef HAVE_ISL_OPTIONS_SET_SCHEDULE_SERIALIZE_SCCS\n+  /* isl 0.15 or later.  */\n   isl_union_map *schedule_map = get_schedule_map_st (schedule);\n #else\n   isl_union_map *schedule_map = get_schedule_map (schedule);"}, {"sha": "44f024165863a13147b610769ec753365d690ab9", "filename": "gcc/graphite-poly.c", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/560d18d3ed805fce952e8c2be9dc022619fe8cfb/gcc%2Fgraphite-poly.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/560d18d3ed805fce952e8c2be9dc022619fe8cfb/gcc%2Fgraphite-poly.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-poly.c?ref=560d18d3ed805fce952e8c2be9dc022619fe8cfb", "patch": "@@ -49,15 +49,7 @@ along with GCC; see the file COPYING3.  If not see\n #include <isl/ilp.h>\n #include <isl/aff.h>\n #include <isl/val.h>\n-\n-/* Since ISL-0.13, the extern is in val_gmp.h.  */\n-#if !defined(HAVE_ISL_SCHED_CONSTRAINTS_COMPUTE_SCHEDULE) && defined(__cplusplus)\n-extern \"C\" {\n-#endif\n #include <isl/val_gmp.h>\n-#if !defined(HAVE_ISL_SCHED_CONSTRAINTS_COMPUTE_SCHEDULE) && defined(__cplusplus)\n-}\n-#endif\n \n #include \"graphite.h\"\n "}, {"sha": "43dcb410af5d5200668eee264831ee90654bffc7", "filename": "gcc/graphite-sese-to-poly.c", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/560d18d3ed805fce952e8c2be9dc022619fe8cfb/gcc%2Fgraphite-sese-to-poly.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/560d18d3ed805fce952e8c2be9dc022619fe8cfb/gcc%2Fgraphite-sese-to-poly.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-sese-to-poly.c?ref=560d18d3ed805fce952e8c2be9dc022619fe8cfb", "patch": "@@ -55,15 +55,7 @@ along with GCC; see the file COPYING3.  If not see\n #include <isl/constraint.h>\n #include <isl/aff.h>\n #include <isl/val.h>\n-\n-/* Since ISL-0.13, the extern is in val_gmp.h.  */\n-#if !defined(HAVE_ISL_SCHED_CONSTRAINTS_COMPUTE_SCHEDULE) && defined(__cplusplus)\n-extern \"C\" {\n-#endif\n #include <isl/val_gmp.h>\n-#if !defined(HAVE_ISL_SCHED_CONSTRAINTS_COMPUTE_SCHEDULE) && defined(__cplusplus)\n-}\n-#endif\n \n #include \"graphite.h\"\n "}, {"sha": "099e4108d351dcad509e0720d71336d6dd2f740b", "filename": "gcc/graphite.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/560d18d3ed805fce952e8c2be9dc022619fe8cfb/gcc%2Fgraphite.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/560d18d3ed805fce952e8c2be9dc022619fe8cfb/gcc%2Fgraphite.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite.h?ref=560d18d3ed805fce952e8c2be9dc022619fe8cfb", "patch": "@@ -25,6 +25,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"sese.h\"\n \n #ifndef HAVE_ISL_OPTIONS_SET_SCHEDULE_SERIALIZE_SCCS\n+  /* isl 0.14.  */\n # define isl_stat int\n # define isl_stat_ok 0\n #endif"}, {"sha": "43b46d21d8a7078b384bd78e6126c84a5eb99d57", "filename": "gcc/toplev.c", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/560d18d3ed805fce952e8c2be9dc022619fe8cfb/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/560d18d3ed805fce952e8c2be9dc022619fe8cfb/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=560d18d3ed805fce952e8c2be9dc022619fe8cfb", "patch": "@@ -640,7 +640,7 @@ print_version (FILE *file, const char *indent, bool show_global_state)\n #endif\n     ;\n   static const char fmt2[] =\n-    N_(\"GMP version %s, MPFR version %s, MPC version %s\\n\");\n+    N_(\"GMP version %s, MPFR version %s, MPC version %s, isl version %s\\n\");\n   static const char fmt3[] =\n     N_(\"%s%swarning: %s header version %s differs from library version %s.\\n\");\n   static const char fmt4[] =\n@@ -674,7 +674,15 @@ print_version (FILE *file, const char *indent, bool show_global_state)\n #endif\n   fprintf (file,\n \t   file == stderr ? _(fmt2) : fmt2,\n-\t   GCC_GMP_STRINGIFY_VERSION, MPFR_VERSION_STRING, MPC_VERSION_STRING);\n+\t   GCC_GMP_STRINGIFY_VERSION, MPFR_VERSION_STRING, MPC_VERSION_STRING,\n+#ifndef HAVE_isl\n+\t   \"none\"\n+#elif HAVE_ISL_OPTIONS_SET_SCHEDULE_SERIALIZE_SCCS\n+\t   \"0.15\"\n+#else\n+\t   \"0.14 or 0.13\"\n+#endif\n+\t   );\n   if (strcmp (GCC_GMP_STRINGIFY_VERSION, gmp_version))\n     fprintf (file,\n \t     file == stderr ? _(fmt3) : fmt3,"}]}