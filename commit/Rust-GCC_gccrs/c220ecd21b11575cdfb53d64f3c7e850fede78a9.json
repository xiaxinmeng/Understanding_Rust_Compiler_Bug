{"sha": "c220ecd21b11575cdfb53d64f3c7e850fede78a9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzIyMGVjZDIxYjExNTc1Y2RmYjUzZDY0ZjNjN2U4NTBmZWRlNzhhOQ==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2019-08-09T07:47:35Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2019-08-09T07:47:35Z"}, "message": "Port value profiling to -fopt-info infrastructure.\n\n2019-08-09  Martin Liska  <mliska@suse.cz>\n\n\t* value-prof.c (gimple_divmod_fixed_value_transform):\n\tUse dump_printf_loc.\n\t(gimple_mod_pow2_value_transform): Likewise.\n\t(gimple_mod_subtract_transform): Likewise.\n\t(init_node_map): Likewise.\n\t(gimple_ic_transform): Likewise.\n\t(gimple_stringops_transform): Likewise.\n2019-08-09  Martin Liska  <mliska@suse.cz>\n\n\t* g++.dg/tree-prof/indir-call-prof.C: Add -optimize\n\tto -fdump-ipa-profile.\n\t* g++.dg/tree-prof/morefunc.C: Likewise.\n\t* g++.dg/tree-prof/reorder.C: Likewise.\n\t* gcc.dg/tree-prof/ic-misattribution-1.c: Likewise.\n\t* gcc.dg/tree-prof/indir-call-prof.c: Likewise.\n\t* gcc.dg/tree-prof/stringop-1.c: Likewise.\n\t* gcc.dg/tree-prof/stringop-2.c: Likewise.\n\t* gcc.dg/tree-prof/val-prof-1.c: Likewise.\n\t* gcc.dg/tree-prof/val-prof-2.c: Likewise.\n\t* gcc.dg/tree-prof/val-prof-3.c: Likewise.\n\t* gcc.dg/tree-prof/val-prof-4.c: Likewise.\n\t* gcc.dg/tree-prof/val-prof-5.c: Likewise.\n\t* gcc.dg/tree-prof/val-prof-7.c: Likewise.\n\nFrom-SVN: r274229", "tree": {"sha": "f09a60d7d4c15d574d31b60d7e31744eb8797de0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f09a60d7d4c15d574d31b60d7e31744eb8797de0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c220ecd21b11575cdfb53d64f3c7e850fede78a9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c220ecd21b11575cdfb53d64f3c7e850fede78a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c220ecd21b11575cdfb53d64f3c7e850fede78a9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c220ecd21b11575cdfb53d64f3c7e850fede78a9/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bb522e2eea23703375e65a044c93e8144ef4664e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb522e2eea23703375e65a044c93e8144ef4664e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb522e2eea23703375e65a044c93e8144ef4664e"}], "stats": {"total": 158, "additions": 91, "deletions": 67}, "files": [{"sha": "b8d54e1380a284da4ff33a479b3ef6b0983e9894", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c220ecd21b11575cdfb53d64f3c7e850fede78a9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c220ecd21b11575cdfb53d64f3c7e850fede78a9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c220ecd21b11575cdfb53d64f3c7e850fede78a9", "patch": "@@ -1,3 +1,13 @@\n+2019-08-09  Martin Liska  <mliska@suse.cz>\n+\n+\t* value-prof.c (gimple_divmod_fixed_value_transform):\n+\tUse dump_printf_loc.\n+\t(gimple_mod_pow2_value_transform): Likewise.\n+\t(gimple_mod_subtract_transform): Likewise.\n+\t(init_node_map): Likewise.\n+\t(gimple_ic_transform): Likewise.\n+\t(gimple_stringops_transform): Likewise.\n+\n 2019-08-08  Mihailo Stojanovic <mistojanovic@wavecomp.com>\n \n \t* doc/extend.texi: Add const qualifier to ld intrinsics."}, {"sha": "e64565e04671e2e61cafbe8c9f6bf43b49ec978b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c220ecd21b11575cdfb53d64f3c7e850fede78a9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c220ecd21b11575cdfb53d64f3c7e850fede78a9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c220ecd21b11575cdfb53d64f3c7e850fede78a9", "patch": "@@ -1,3 +1,20 @@\n+2019-08-09  Martin Liska  <mliska@suse.cz>\n+\n+\t* g++.dg/tree-prof/indir-call-prof.C: Add -optimize\n+\tto -fdump-ipa-profile.\n+\t* g++.dg/tree-prof/morefunc.C: Likewise.\n+\t* g++.dg/tree-prof/reorder.C: Likewise.\n+\t* gcc.dg/tree-prof/ic-misattribution-1.c: Likewise.\n+\t* gcc.dg/tree-prof/indir-call-prof.c: Likewise.\n+\t* gcc.dg/tree-prof/stringop-1.c: Likewise.\n+\t* gcc.dg/tree-prof/stringop-2.c: Likewise.\n+\t* gcc.dg/tree-prof/val-prof-1.c: Likewise.\n+\t* gcc.dg/tree-prof/val-prof-2.c: Likewise.\n+\t* gcc.dg/tree-prof/val-prof-3.c: Likewise.\n+\t* gcc.dg/tree-prof/val-prof-4.c: Likewise.\n+\t* gcc.dg/tree-prof/val-prof-5.c: Likewise.\n+\t* gcc.dg/tree-prof/val-prof-7.c: Likewise.\n+\n 2019-08-09  Jakub Jelinek  <jakub@redhat.com>\n \n \t* c-c++-common/gomp/if-4.c: New test."}, {"sha": "be896c02774f2a7aa7ac9b795ad0d9d2e951826f", "filename": "gcc/testsuite/g++.dg/tree-prof/indir-call-prof.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c220ecd21b11575cdfb53d64f3c7e850fede78a9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-prof%2Findir-call-prof.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c220ecd21b11575cdfb53d64f3c7e850fede78a9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-prof%2Findir-call-prof.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-prof%2Findir-call-prof.C?ref=c220ecd21b11575cdfb53d64f3c7e850fede78a9", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-options \"-O2 -fdump-tree-optimized -fdump-ipa-profile -fdump-ipa-afdo\" } */\n+/* { dg-options \"-O2 -fdump-tree-optimized -fdump-ipa-profile-optimized -fdump-ipa-afdo\" } */\n \n struct A {\n   A () {}"}, {"sha": "621d09aec5b337f7ebf91a09278f1e911b79dbcc", "filename": "gcc/testsuite/g++.dg/tree-prof/morefunc.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c220ecd21b11575cdfb53d64f3c7e850fede78a9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-prof%2Fmorefunc.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c220ecd21b11575cdfb53d64f3c7e850fede78a9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-prof%2Fmorefunc.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-prof%2Fmorefunc.C?ref=c220ecd21b11575cdfb53d64f3c7e850fede78a9", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-options \"-O2 -fno-devirtualize --param=profile-func-internal-id=0 -fdump-ipa-profile -fdump-ipa-afdo -Wno-attributes -Wno-coverage-mismatch -Wno-missing-profile\" } */\n+/* { dg-options \"-O2 -fno-devirtualize --param=profile-func-internal-id=0 -fdump-ipa-profile-optimized -fdump-ipa-afdo -Wno-attributes -Wno-coverage-mismatch -Wno-missing-profile\" } */\n #include \"reorder_class1.h\"\n #include \"reorder_class2.h\"\n "}, {"sha": "000fb651a692ec784380c679e79bcd4546527dc1", "filename": "gcc/testsuite/g++.dg/tree-prof/reorder.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c220ecd21b11575cdfb53d64f3c7e850fede78a9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-prof%2Freorder.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c220ecd21b11575cdfb53d64f3c7e850fede78a9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-prof%2Freorder.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-prof%2Freorder.C?ref=c220ecd21b11575cdfb53d64f3c7e850fede78a9", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-options \"-O2 -fno-devirtualize --param=profile-func-internal-id=0 -fdump-ipa-profile -fdump-ipa-afdo -Wno-coverage-mismatch -Wno-attributes\" } */\n+/* { dg-options \"-O2 -fno-devirtualize --param=profile-func-internal-id=0 -fdump-ipa-profile-optimized -fdump-ipa-afdo -Wno-coverage-mismatch -Wno-attributes\" } */\n \n #ifdef _PROFILE_USE\n #include \"reorder_class1.h\""}, {"sha": "126236eba8e23a90459e6f3af2abf2852f50ee62", "filename": "gcc/testsuite/gcc.dg/tree-prof/ic-misattribution-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c220ecd21b11575cdfb53d64f3c7e850fede78a9/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fic-misattribution-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c220ecd21b11575cdfb53d64f3c7e850fede78a9/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fic-misattribution-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fic-misattribution-1.c?ref=c220ecd21b11575cdfb53d64f3c7e850fede78a9", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-options \"-O2 -fdump-ipa-profile\" } */\n+/* { dg-options \"-O2 -fdump-ipa-profile-optimized\" } */\n /* { dg-additional-sources \"ic-misattribution-1a.c\" } */\n \n extern void other_caller (void);"}, {"sha": "3ca78936e1c3f87fbe2808869c1a367cb317533a", "filename": "gcc/testsuite/gcc.dg/tree-prof/indir-call-prof.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c220ecd21b11575cdfb53d64f3c7e850fede78a9/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Findir-call-prof.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c220ecd21b11575cdfb53d64f3c7e850fede78a9/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Findir-call-prof.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Findir-call-prof.c?ref=c220ecd21b11575cdfb53d64f3c7e850fede78a9", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-options \"-O2 -fdump-tree-optimized -fdump-ipa-profile -fdump-ipa-afdo\" } */\n+/* { dg-options \"-O2 -fdump-tree-optimized -fdump-ipa-profile-optimized -fdump-ipa-afdo\" } */\n \n static int a1 (void)\n {"}, {"sha": "51e1080b9f4ae281b077fb9ec0cd71d08806fcec", "filename": "gcc/testsuite/gcc.dg/tree-prof/stringop-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c220ecd21b11575cdfb53d64f3c7e850fede78a9/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fstringop-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c220ecd21b11575cdfb53d64f3c7e850fede78a9/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fstringop-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fstringop-1.c?ref=c220ecd21b11575cdfb53d64f3c7e850fede78a9", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-options \"-O2 -fdump-tree-optimized -fdump-ipa-profile\" } */\n+/* { dg-options \"-O2 -fdump-tree-optimized -fdump-ipa-profile-optimized\" } */\n int a[1000];\n int b[1000];\n int size=1;"}, {"sha": "0264bb37c9cca94090a1dec6856cce3f2d16fdb6", "filename": "gcc/testsuite/gcc.dg/tree-prof/stringop-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c220ecd21b11575cdfb53d64f3c7e850fede78a9/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fstringop-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c220ecd21b11575cdfb53d64f3c7e850fede78a9/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fstringop-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fstringop-2.c?ref=c220ecd21b11575cdfb53d64f3c7e850fede78a9", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-options \"-O2 -fdump-tree-optimized -fdump-ipa-profile\" } */\n+/* { dg-options \"-O2 -fdump-tree-optimized -fdump-ipa-profile-optimized\" } */\n int a[1000];\n int b[1000];\n int size=1;"}, {"sha": "8495c4caf89b349fd214c26dd3059f76502130f3", "filename": "gcc/testsuite/gcc.dg/tree-prof/val-prof-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c220ecd21b11575cdfb53d64f3c7e850fede78a9/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fval-prof-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c220ecd21b11575cdfb53d64f3c7e850fede78a9/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fval-prof-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fval-prof-1.c?ref=c220ecd21b11575cdfb53d64f3c7e850fede78a9", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-options \"-O2 -fdump-tree-optimized -fdump-ipa-profile\" } */\n+/* { dg-options \"-O2 -fdump-tree-optimized -fdump-ipa-profile-optimized\" } */\n int a[1000];\n int b = 256;\n int c = 257;"}, {"sha": "4f758af71ca9a3adf1d4e7747718d5f15c4e0086", "filename": "gcc/testsuite/gcc.dg/tree-prof/val-prof-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c220ecd21b11575cdfb53d64f3c7e850fede78a9/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fval-prof-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c220ecd21b11575cdfb53d64f3c7e850fede78a9/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fval-prof-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fval-prof-2.c?ref=c220ecd21b11575cdfb53d64f3c7e850fede78a9", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-options \"-O2 -fdump-tree-optimized -fdump-ipa-profile\" } */\n+/* { dg-options \"-O2 -fdump-tree-optimized -fdump-ipa-profile-optimized\" } */\n unsigned int a[1000];\n unsigned int b = 256;\n unsigned int c = 1024;"}, {"sha": "5897d750d80ee5aa797ca82771c717f47c53ca0c", "filename": "gcc/testsuite/gcc.dg/tree-prof/val-prof-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c220ecd21b11575cdfb53d64f3c7e850fede78a9/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fval-prof-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c220ecd21b11575cdfb53d64f3c7e850fede78a9/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fval-prof-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fval-prof-3.c?ref=c220ecd21b11575cdfb53d64f3c7e850fede78a9", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-options \"-O2 -fdump-tree-optimized -fdump-ipa-profile\" } */\n+/* { dg-options \"-O2 -fdump-tree-optimized -fdump-ipa-profile-optimized\" } */\n unsigned int a[1000];\n unsigned int b = 257;\n unsigned int c = 1023;"}, {"sha": "b13601ede69f8dedbebb273b52cd7a2fa4b5b675", "filename": "gcc/testsuite/gcc.dg/tree-prof/val-prof-4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c220ecd21b11575cdfb53d64f3c7e850fede78a9/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fval-prof-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c220ecd21b11575cdfb53d64f3c7e850fede78a9/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fval-prof-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fval-prof-4.c?ref=c220ecd21b11575cdfb53d64f3c7e850fede78a9", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-options \"-O2 -fdump-tree-optimized -fdump-ipa-profile\" } */\n+/* { dg-options \"-O2 -fdump-tree-optimized -fdump-ipa-profile-optimized\" } */\n unsigned int a[1000];\n unsigned int b = 999;\n unsigned int c = 1002;"}, {"sha": "982bcb1343523dfe59598503d0539c9d37e57550", "filename": "gcc/testsuite/gcc.dg/tree-prof/val-prof-5.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c220ecd21b11575cdfb53d64f3c7e850fede78a9/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fval-prof-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c220ecd21b11575cdfb53d64f3c7e850fede78a9/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fval-prof-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fval-prof-5.c?ref=c220ecd21b11575cdfb53d64f3c7e850fede78a9", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-options \"-O2 -fdump-tree-optimized -fdump-ipa-profile\" } */\n+/* { dg-options \"-O2 -fdump-tree-optimized -fdump-ipa-profile-optimized\" } */\n int a[1000];\n int b=997;\n int"}, {"sha": "5ddb1a88c29396b661848e67c5f3bbb813c99cd0", "filename": "gcc/testsuite/gcc.dg/tree-prof/val-prof-7.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c220ecd21b11575cdfb53d64f3c7e850fede78a9/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fval-prof-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c220ecd21b11575cdfb53d64f3c7e850fede78a9/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fval-prof-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fval-prof-7.c?ref=c220ecd21b11575cdfb53d64f3c7e850fede78a9", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-options \"-O2 -fdump-ipa-profile -mtune=core2\" } */\n+/* { dg-options \"-O2 -fdump-ipa-profile-optimized -mtune=core2\" } */\n /* { dg-skip-if \"\" { ! { i?86-*-* x86_64-*-* } } } */\n \n char *buffer1;"}, {"sha": "9d9785b179d6ea3b86e6ec82606d88e6da1f2a72", "filename": "gcc/value-prof.c", "status": "modified", "additions": 51, "deletions": 54, "changes": 105, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c220ecd21b11575cdfb53d64f3c7e850fede78a9/gcc%2Fvalue-prof.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c220ecd21b11575cdfb53d64f3c7e850fede78a9/gcc%2Fvalue-prof.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvalue-prof.c?ref=c220ecd21b11575cdfb53d64f3c7e850fede78a9", "patch": "@@ -809,12 +809,9 @@ gimple_divmod_fixed_value_transform (gimple_stmt_iterator *si)\n     }\n   result = gimple_divmod_fixed_value (stmt, tree_val, prob, count, all);\n \n-  if (dump_file)\n-    {\n-      fprintf (dump_file, \"Transformation done: div/mod by constant \");\n-      print_generic_expr (dump_file, tree_val, TDF_SLIM);\n-      fprintf (dump_file, \"\\n\");\n-    }\n+  if (dump_enabled_p ())\n+    dump_printf_loc (MSG_OPTIMIZED_LOCATIONS, stmt,\n+\t\t     \"Transformation done: div/mod by constant %T\\n\", tree_val);\n \n   gimple_assign_set_rhs_from_tree (si, result);\n   update_stmt (gsi_stmt (*si));\n@@ -949,8 +946,9 @@ gimple_mod_pow2_value_transform (gimple_stmt_iterator *si)\n   if (check_counter (stmt, \"pow2\", &count, &all, gimple_bb (stmt)->count))\n     return false;\n \n-  if (dump_file)\n-    fprintf (dump_file, \"Transformation done: mod power of 2\\n\");\n+  if (dump_enabled_p ())\n+    dump_printf_loc (MSG_OPTIMIZED_LOCATIONS, stmt,\n+\t\t     \"Transformation done: mod power of 2\\n\");\n \n   if (all > 0)\n     prob = profile_probability::probability_in_gcov_type (count, all);\n@@ -1133,8 +1131,9 @@ gimple_mod_subtract_transform (gimple_stmt_iterator *si)\n     return false;\n \n   gimple_remove_histogram_value (cfun, stmt, histogram);\n-  if (dump_file)\n-    fprintf (dump_file, \"Transformation done: mod subtract\\n\");\n+  if (dump_enabled_p ())\n+    dump_printf_loc (MSG_OPTIMIZED_LOCATIONS, stmt,\n+\t\t     \"Transformation done: mod subtract\\n\");\n \n   /* Compute probability of taking the optimal path(s).  */\n   if (all > 0)\n@@ -1185,37 +1184,40 @@ init_node_map (bool local)\n     if (n->has_gimple_body_p () || n->thunk.thunk_p)\n       {\n \tcgraph_node **val;\n+\tdump_user_location_t loc\n+\t  = dump_user_location_t::from_function_decl (n->decl);\n \tif (local)\n \t  {\n \t    n->profile_id = coverage_compute_profile_id (n);\n \t    while ((val = cgraph_node_map->get (n->profile_id))\n \t\t   || !n->profile_id)\n \t      {\n-\t\tif (dump_file)\n-\t\t  fprintf (dump_file, \"Local profile-id %i conflict\"\n-\t\t\t   \" with nodes %s %s\\n\",\n-\t\t\t   n->profile_id,\n-\t\t\t   n->dump_name (),\n-\t\t\t   (*val)->dump_name ());\n+\t\tif (dump_enabled_p ())\n+\t\t  dump_printf_loc (MSG_MISSED_OPTIMIZATION, loc,\n+\t\t\t\t   \"Local profile-id %i conflict\"\n+\t\t\t\t   \" with nodes %s %s\\n\",\n+\t\t\t\t   n->profile_id,\n+\t\t\t\t   n->dump_name (),\n+\t\t\t\t   (*val)->dump_name ());\n \t\tn->profile_id = (n->profile_id + 1) & 0x7fffffff;\n \t      }\n \t  }\n \telse if (!n->profile_id)\n \t  {\n-\t    if (dump_file)\n-\t      fprintf (dump_file,\n-\t\t       \"Node %s has no profile-id\"\n-\t\t       \" (profile feedback missing?)\\n\",\n-\t\t       n->dump_name ());\n+\t    if (dump_enabled_p ())\n+\t      dump_printf_loc (MSG_MISSED_OPTIMIZATION, loc,\n+\t\t\t       \"Node %s has no profile-id\"\n+\t\t\t       \" (profile feedback missing?)\\n\",\n+\t\t\t       n->dump_name ());\n \t    continue;\n \t  }\n \telse if ((val = cgraph_node_map->get (n->profile_id)))\n \t  {\n-\t    if (dump_file)\n-\t      fprintf (dump_file,\n-\t\t       \"Node %s has IP profile-id %i conflict. \"\n-\t\t       \"Giving up.\\n\",\n-\t\t       n->dump_name (), n->profile_id);\n+\t    if (dump_enabled_p ())\n+\t      dump_printf_loc (MSG_MISSED_OPTIMIZATION, loc,\n+\t\t\t       \"Node %s has IP profile-id %i conflict. \"\n+\t\t\t       \"Giving up.\\n\",\n+\t\t\t       n->dump_name (), n->profile_id);\n \t    *val = NULL;\n \t    continue;\n \t  }\n@@ -1445,41 +1447,36 @@ gimple_ic_transform (gimple_stmt_iterator *gsi)\n     {\n       if (val)\n \t{\n-\t  if (dump_file)\n-\t    {\n-\t      fprintf (dump_file, \"Indirect call -> direct call from other module\");\n-\t      print_generic_expr (dump_file, gimple_call_fn (stmt), TDF_SLIM);\n-\t      fprintf (dump_file, \"=> %i (will resolve only with LTO)\\n\", (int)val);\n-\t    }\n+\t  if (dump_enabled_p ())\n+\t    dump_printf_loc (MSG_MISSED_OPTIMIZATION, stmt,\n+\t\t\t     \"Indirect call -> direct call from other \"\n+\t\t\t     \"module %T=> %i (will resolve only with LTO)\",\n+\t\t\t     gimple_call_fn (stmt), (int)val);\n \t}\n       return false;\n     }\n \n   if (!check_ic_target (stmt, direct_call))\n     {\n-      if (dump_file)\n-\t{\n-\t  fprintf (dump_file, \"Indirect call -> direct call \");\n-\t  print_generic_expr (dump_file, gimple_call_fn (stmt), TDF_SLIM);\n-\t  fprintf (dump_file, \"=> \");\n-\t  print_generic_expr (dump_file, direct_call->decl, TDF_SLIM);\n-\t  fprintf (dump_file, \" transformation skipped because of type mismatch\");\n-\t  print_gimple_stmt (dump_file, stmt, 0, TDF_SLIM);\n-\t}\n+      if (dump_enabled_p ())\n+\tdump_printf_loc (MSG_MISSED_OPTIMIZATION, stmt,\n+\t\t\t \"Indirect call -> direct call %T => %T \"\n+\t\t\t \"transformation skipped because of type mismatch: %G\",\n+\t\t\t gimple_call_fn (stmt), direct_call->decl, stmt);\n       gimple_remove_histogram_value (cfun, stmt, histogram);\n       return false;\n     }\n \n-  if (dump_file)\n+  if (dump_enabled_p ())\n     {\n-      fprintf (dump_file, \"Indirect call -> direct call \");\n-      print_generic_expr (dump_file, gimple_call_fn (stmt), TDF_SLIM);\n-      fprintf (dump_file, \"=> \");\n-      print_generic_expr (dump_file, direct_call->decl, TDF_SLIM);\n-      fprintf (dump_file, \" transformation on insn postponned to ipa-profile\");\n-      print_gimple_stmt (dump_file, stmt, 0, TDF_SLIM);\n-      fprintf (dump_file, \"hist->count %\" PRId64\n-\t       \" hist->all %\" PRId64\"\\n\", count, all);\n+      dump_printf_loc (MSG_OPTIMIZED_LOCATIONS, stmt,\n+\t\t       \"Indirect call -> direct call \"\n+\t\t       \"%T => %T transformation on insn postponed \"\n+\t\t       \"to ipa-profile: %G\", gimple_call_fn (stmt),\n+\t\t       direct_call->decl, stmt);\n+      dump_printf_loc (MSG_OPTIMIZED_LOCATIONS, stmt,\n+\t\t       \"hist->count %\" PRId64\n+\t\t       \" hist->all %\" PRId64\"\\n\", count, all);\n     }\n \n   return true;\n@@ -1708,10 +1705,10 @@ gimple_stringops_transform (gimple_stmt_iterator *gsi)\n \tTYPE_PRECISION (get_gcov_type ()), false));\n     }\n \n-  if (dump_file)\n-    fprintf (dump_file,\n-\t     \"Transformation done: single value %i stringop for %s\\n\",\n-\t     (int)val, built_in_names[(int)fcode]);\n+  if (dump_enabled_p ())\n+    dump_printf_loc (MSG_OPTIMIZED_LOCATIONS, stmt,\n+\t\t     \"Transformation done: single value %i stringop for %s\\n\",\n+\t\t     (int)val, built_in_names[(int)fcode]);\n \n   gimple_stringop_fixed_value (stmt, tree_val, prob, count, all);\n "}]}