{"sha": "f62c6a620443d099c412e5698c78f284e0d47d41", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjYyYzZhNjIwNDQzZDA5OWM0MTJlNTY5OGM3OGYyODRlMGQ0N2Q0MQ==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2016-06-09T08:48:10Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2016-06-09T08:48:10Z"}, "message": "[RTL ifcvt] Print name of noce trasform that succeeded in dump file\n\n\t* ifcvt.c (struct noce_if_info): Add transform_name field.\n\t(noce_try_move): Set if_info->transform_name to the function name.\n\t(noce_try_ifelse_collapse): Likewise.\n\t(noce_try_store_flag): Likewise.\n\t(noce_try_inverse_constants): Likewise.\n\t(noce_try_store_flag_constants): Likewise.\n\t(noce_try_addcc): Likewise.\n\t(noce_try_store_flag_mask): Likewise.\n\t(noce_try_cmove): Likewise.\n\t(noce_try_cmove_arith): Likewise.\n\t(noce_try_minmax): Likewise.\n\t(noce_try_abs): Likewise.\n\t(noce_try_sign_mask): Likewise.\n\t(noce_try_bitop): Likewise.\n\t(noce_convert_multiple_sets): Likewise.\n\t(noce_process_if_block): Print if_info->transform_name to\n\tdump_file if transformation succeeded.\n\nFrom-SVN: r237250", "tree": {"sha": "88d2f1c690abe626b3b334b590691d8caed372a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/88d2f1c690abe626b3b334b590691d8caed372a2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f62c6a620443d099c412e5698c78f284e0d47d41", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f62c6a620443d099c412e5698c78f284e0d47d41", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f62c6a620443d099c412e5698c78f284e0d47d41", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f62c6a620443d099c412e5698c78f284e0d47d41/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b111f1f9f064d09ad9be18f673e899c275bd7d8d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b111f1f9f064d09ad9be18f673e899c275bd7d8d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b111f1f9f064d09ad9be18f673e899c275bd7d8d"}], "stats": {"total": 56, "additions": 55, "deletions": 1}, "files": [{"sha": "4c1cab324e5a67d1af3ab49491be56279e1ac10b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f62c6a620443d099c412e5698c78f284e0d47d41/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f62c6a620443d099c412e5698c78f284e0d47d41/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f62c6a620443d099c412e5698c78f284e0d47d41", "patch": "@@ -1,3 +1,23 @@\n+2016-06-09  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* ifcvt.c (struct noce_if_info): Add transform_name field.\n+\t(noce_try_move): Set if_info->transform_name to the function name.\n+\t(noce_try_ifelse_collapse): Likewise.\n+\t(noce_try_store_flag): Likewise.\n+\t(noce_try_inverse_constants): Likewise.\n+\t(noce_try_store_flag_constants): Likewise.\n+\t(noce_try_addcc): Likewise.\n+\t(noce_try_store_flag_mask): Likewise.\n+\t(noce_try_cmove): Likewise.\n+\t(noce_try_cmove_arith): Likewise.\n+\t(noce_try_minmax): Likewise.\n+\t(noce_try_abs): Likewise.\n+\t(noce_try_sign_mask): Likewise.\n+\t(noce_try_bitop): Likewise.\n+\t(noce_convert_multiple_sets): Likewise.\n+\t(noce_process_if_block): Print if_info->transform_name to\n+\tdump_file if transformation succeeded.\n+\n 2016-06-09  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \t* config/arm/cortex-a57.md (cortex_a57_alu):"}, {"sha": "4a277db7dcc4cd467299419b21bae0f2a2b42926", "filename": "gcc/ifcvt.c", "status": "modified", "additions": 35, "deletions": 1, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f62c6a620443d099c412e5698c78f284e0d47d41/gcc%2Fifcvt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f62c6a620443d099c412e5698c78f284e0d47d41/gcc%2Fifcvt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fifcvt.c?ref=f62c6a620443d099c412e5698c78f284e0d47d41", "patch": "@@ -813,6 +813,10 @@ struct noce_if_info\n \n   /* Estimated cost of the particular branch instruction.  */\n   unsigned int branch_cost;\n+\n+  /* The name of the noce transform that succeeded in if-converting\n+     this structure.  Used for debugging.  */\n+  const char *transform_name;\n };\n \n static rtx noce_emit_store_flag (struct noce_if_info *, rtx, int, int);\n@@ -1116,6 +1120,7 @@ noce_try_move (struct noce_if_info *if_info)\n \t  emit_insn_before_setloc (seq, if_info->jump,\n \t\t\t\t   INSN_LOCATION (if_info->insn_a));\n \t}\n+      if_info->transform_name = \"noce_try_move\";\n       return TRUE;\n     }\n   return FALSE;\n@@ -1148,6 +1153,8 @@ noce_try_ifelse_collapse (struct noce_if_info * if_info)\n \n   emit_insn_before_setloc (seq, if_info->jump,\n \t\t\t  INSN_LOCATION (if_info->insn_a));\n+\n+  if_info->transform_name = \"noce_try_ifelse_collapse\";\n   return TRUE;\n }\n \n@@ -1195,6 +1202,7 @@ noce_try_store_flag (struct noce_if_info *if_info)\n \n       emit_insn_before_setloc (seq, if_info->jump,\n \t\t\t       INSN_LOCATION (if_info->insn_a));\n+      if_info->transform_name = \"noce_try_store_flag\";\n       return TRUE;\n     }\n   else\n@@ -1273,6 +1281,7 @@ noce_try_inverse_constants (struct noce_if_info *if_info)\n \n       emit_insn_before_setloc (seq, if_info->jump,\n \t\t\t       INSN_LOCATION (if_info->insn_a));\n+      if_info->transform_name = \"noce_try_inverse_constants\";\n       return true;\n     }\n \n@@ -1493,6 +1502,8 @@ noce_try_store_flag_constants (struct noce_if_info *if_info)\n \n       emit_insn_before_setloc (seq, if_info->jump,\n \t\t\t       INSN_LOCATION (if_info->insn_a));\n+      if_info->transform_name = \"noce_try_store_flag_constants\";\n+\n       return TRUE;\n     }\n \n@@ -1545,6 +1556,8 @@ noce_try_addcc (struct noce_if_info *if_info)\n \n \t      emit_insn_before_setloc (seq, if_info->jump,\n \t\t\t\t       INSN_LOCATION (if_info->insn_a));\n+\t      if_info->transform_name = \"noce_try_addcc\";\n+\n \t      return TRUE;\n \t    }\n \t  end_sequence ();\n@@ -1585,6 +1598,7 @@ noce_try_addcc (struct noce_if_info *if_info)\n \n \t      emit_insn_before_setloc (seq, if_info->jump,\n \t\t\t\t       INSN_LOCATION (if_info->insn_a));\n+\t      if_info->transform_name = \"noce_try_addcc\";\n \t      return TRUE;\n \t    }\n \t  end_sequence ();\n@@ -1649,6 +1663,8 @@ noce_try_store_flag_mask (struct noce_if_info *if_info)\n \n \t  emit_insn_before_setloc (seq, if_info->jump,\n \t\t\t\t   INSN_LOCATION (if_info->insn_a));\n+\t  if_info->transform_name = \"noce_try_store_flag_mask\";\n+\n \t  return TRUE;\n \t}\n \n@@ -1799,6 +1815,8 @@ noce_try_cmove (struct noce_if_info *if_info)\n \n \t  emit_insn_before_setloc (seq, if_info->jump,\n \t\t\t\t   INSN_LOCATION (if_info->insn_a));\n+\t  if_info->transform_name = \"noce_try_cmove\";\n+\n \t  return TRUE;\n \t}\n       /* If both a and b are constants try a last-ditch transformation:\n@@ -1852,6 +1870,7 @@ noce_try_cmove (struct noce_if_info *if_info)\n \n \t      emit_insn_before_setloc (seq, if_info->jump,\n \t\t\t\t   INSN_LOCATION (if_info->insn_a));\n+\t      if_info->transform_name = \"noce_try_cmove\";\n \t      return TRUE;\n \t    }\n \t  else\n@@ -2305,6 +2324,7 @@ noce_try_cmove_arith (struct noce_if_info *if_info)\n \n   emit_insn_before_setloc (ifcvt_seq, if_info->jump,\n \t\t\t   INSN_LOCATION (if_info->insn_a));\n+  if_info->transform_name = \"noce_try_cmove_arith\";\n   return TRUE;\n \n  end_seq_and_fail:\n@@ -2561,6 +2581,7 @@ noce_try_minmax (struct noce_if_info *if_info)\n   emit_insn_before_setloc (seq, if_info->jump, INSN_LOCATION (if_info->insn_a));\n   if_info->cond = cond;\n   if_info->cond_earliest = earliest;\n+  if_info->transform_name = \"noce_try_minmax\";\n \n   return TRUE;\n }\n@@ -2727,6 +2748,7 @@ noce_try_abs (struct noce_if_info *if_info)\n   emit_insn_before_setloc (seq, if_info->jump, INSN_LOCATION (if_info->insn_a));\n   if_info->cond = cond;\n   if_info->cond_earliest = earliest;\n+  if_info->transform_name = \"noce_try_abs\";\n \n   return TRUE;\n }\n@@ -2808,6 +2830,8 @@ noce_try_sign_mask (struct noce_if_info *if_info)\n     return FALSE;\n \n   emit_insn_before_setloc (seq, if_info->jump, INSN_LOCATION (if_info->insn_a));\n+  if_info->transform_name = \"noce_try_sign_mask\";\n+\n   return TRUE;\n }\n \n@@ -2913,6 +2937,7 @@ noce_try_bitop (struct noce_if_info *if_info)\n       emit_insn_before_setloc (seq, if_info->jump,\n \t\t\t       INSN_LOCATION (if_info->insn_a));\n     }\n+  if_info->transform_name = \"noce_try_bitop\";\n   return TRUE;\n }\n \n@@ -3276,6 +3301,7 @@ noce_convert_multiple_sets (struct noce_if_info *if_info)\n     }\n \n   num_updated_if_blocks++;\n+  if_info->transform_name = \"noce_convert_multiple_sets\";\n   return TRUE;\n }\n \n@@ -3372,7 +3398,12 @@ noce_process_if_block (struct noce_if_info *if_info)\n       && bb_ok_for_noce_convert_multiple_sets (then_bb, if_info))\n     {\n       if (noce_convert_multiple_sets (if_info))\n-\treturn TRUE;\n+\t{\n+\t  if (dump_file && if_info->transform_name)\n+\t    fprintf (dump_file, \"if-conversion succeeded through %s\\n\",\n+\t\t     if_info->transform_name);\n+\t  return TRUE;\n+\t}\n     }\n \n   if (! bb_valid_for_noce_process_p (then_bb, cond, &if_info->then_cost,\n@@ -3571,6 +3602,9 @@ noce_process_if_block (struct noce_if_info *if_info)\n   return FALSE;\n \n  success:\n+  if (dump_file && if_info->transform_name)\n+    fprintf (dump_file, \"if-conversion succeeded through %s\\n\",\n+\t     if_info->transform_name);\n \n   /* If we used a temporary, fix it up now.  */\n   if (orig_x != x)"}]}