{"sha": "8823ce3f54a875c2523264ddf3342bc54cdf10eb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODgyM2NlM2Y1NGE4NzVjMjUyMzI2NGRkZjMzNDJiYzU0Y2RmMTBlYg==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2017-03-10T13:24:45Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2017-03-10T13:24:45Z"}, "message": "MPX: Fix option handling.\n\n2017-03-10  Martin Liska  <mliska@suse.cz>\n\n        PR target/65705\n        PR target/69804\n\t* toplev.c (process_options): Enable MPX with LSAN and UBSAN.\n\t* tree-chkp.c (chkp_walk_pointer_assignments): Verify that\n\tFIELD != NULL.\n\nFrom-SVN: r246027", "tree": {"sha": "ae3fd8506b2f139ad2ff8a99c72c1db504ee9132", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ae3fd8506b2f139ad2ff8a99c72c1db504ee9132"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8823ce3f54a875c2523264ddf3342bc54cdf10eb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8823ce3f54a875c2523264ddf3342bc54cdf10eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8823ce3f54a875c2523264ddf3342bc54cdf10eb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8823ce3f54a875c2523264ddf3342bc54cdf10eb/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "74106ead26b17f3e68b73c6704632cbbbf762a5c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74106ead26b17f3e68b73c6704632cbbbf762a5c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/74106ead26b17f3e68b73c6704632cbbbf762a5c"}], "stats": {"total": 62, "additions": 39, "deletions": 23}, "files": [{"sha": "306b5f140b6153ee3c6872da26d5e710fc2fdab9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8823ce3f54a875c2523264ddf3342bc54cdf10eb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8823ce3f54a875c2523264ddf3342bc54cdf10eb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8823ce3f54a875c2523264ddf3342bc54cdf10eb", "patch": "@@ -1,3 +1,11 @@\n+2017-03-10  Martin Liska  <mliska@suse.cz>\n+\n+        PR target/65705\n+        PR target/69804\n+\t* toplev.c (process_options): Enable MPX with LSAN and UBSAN.\n+\t* tree-chkp.c (chkp_walk_pointer_assignments): Verify that\n+\tFIELD != NULL.\n+\n 2017-03-10  Olivier Hainque  <hainque@adacore.com>\n \n \t* tree-switch-conversion (array_value_type): Start by resetting"}, {"sha": "d36b61cbe02fad513dfb5bb5da37854caf8d5f67", "filename": "gcc/testsuite/gcc.target/i386/pr71458.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8823ce3f54a875c2523264ddf3342bc54cdf10eb/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr71458.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8823ce3f54a875c2523264ddf3342bc54cdf10eb/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr71458.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr71458.c?ref=8823ce3f54a875c2523264ddf3342bc54cdf10eb", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile { target { ! x32 } } } */\n /* { dg-options \"-fcheck-pointer-bounds -mmpx -fsanitize=bounds\" } */\n-/* { dg-error \"-fcheck-pointer-bounds is not supported with Undefined Behavior Sanitizer\" \"\" { target *-*-* } 0 } */\n+/* { dg-error \"'-fcheck-pointer-bounds' is not supported with '-fsanitize=bounds'\" \"\" { target *-*-* } 0 } */\n \n enum {} a[0];\n void fn1(int);"}, {"sha": "54a4f05c9a1fc967cf3233a70d6489788d196ee9", "filename": "gcc/toplev.c", "status": "modified", "additions": 29, "deletions": 21, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8823ce3f54a875c2523264ddf3342bc54cdf10eb/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8823ce3f54a875c2523264ddf3342bc54cdf10eb/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=8823ce3f54a875c2523264ddf3342bc54cdf10eb", "patch": "@@ -1270,31 +1270,39 @@ process_options (void)\n       if (targetm.chkp_bound_mode () == VOIDmode)\n \t{\n \t  error_at (UNKNOWN_LOCATION,\n-\t\t    \"-fcheck-pointer-bounds is not supported for this target\");\n+\t\t    \"%<-fcheck-pointer-bounds%> is not supported for this \"\n+\t\t    \"target\");\n \t  flag_check_pointer_bounds = 0;\n \t}\n \n-      if (flag_sanitize)\n+      if (flag_sanitize & SANITIZE_BOUNDS_STRICT)\n \t{\n-\t  if (flag_sanitize & SANITIZE_ADDRESS)\n-\t    error_at (UNKNOWN_LOCATION,\n-\t\t      \"-fcheck-pointer-bounds is not supported with \"\n-\t\t      \"Address Sanitizer\");\n-\n-\t  if (flag_sanitize & (SANITIZE_UNDEFINED | SANITIZE_NONDEFAULT))\n-\t    error_at (UNKNOWN_LOCATION,\n-\t\t      \"-fcheck-pointer-bounds is not supported with \"\n-\t\t      \"Undefined Behavior Sanitizer\");\n-\n-\t  if (flag_sanitize & SANITIZE_LEAK)\n-\t    error_at (UNKNOWN_LOCATION,\n-\t\t      \"-fcheck-pointer-bounds is not supported with \"\n-\t\t      \"Leak Sanitizer\");\n-\n-\t  if (flag_sanitize & SANITIZE_THREAD)\n-\t    error_at (UNKNOWN_LOCATION,\n-\t\t      \"-fcheck-pointer-bounds is not supported with \"\n-\t\t      \"Thread Sanitizer\");\n+\t  error_at (UNKNOWN_LOCATION,\n+\t\t    \"%<-fcheck-pointer-bounds%> is not supported with \"\n+\t\t    \"%<-fsanitize=bounds-strict%>\");\n+\t  flag_check_pointer_bounds = 0;\n+\t}\n+      else if (flag_sanitize & SANITIZE_BOUNDS)\n+\t{\n+\t  error_at (UNKNOWN_LOCATION,\n+\t\t    \"%<-fcheck-pointer-bounds%> is not supported with \"\n+\t\t    \"%<-fsanitize=bounds%>\");\n+\t  flag_check_pointer_bounds = 0;\n+\t}\n+\n+      if (flag_sanitize & SANITIZE_ADDRESS)\n+\t{\n+\t  error_at (UNKNOWN_LOCATION,\n+\t\t    \"%<-fcheck-pointer-bounds%> is not supported with \"\n+\t\t    \"Address Sanitizer\");\n+\t  flag_check_pointer_bounds = 0;\n+\t}\n+\n+      if (flag_sanitize & SANITIZE_THREAD)\n+\t{\n+\t  error_at (UNKNOWN_LOCATION,\n+\t\t    \"%<-fcheck-pointer-bounds%> is not supported with \"\n+\t\t    \"Thread Sanitizer\");\n \n \t  flag_check_pointer_bounds = 0;\n \t}"}, {"sha": "75caf83a9829e23483bcc037f3a00913f223e1ce", "filename": "gcc/tree-chkp.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8823ce3f54a875c2523264ddf3342bc54cdf10eb/gcc%2Ftree-chkp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8823ce3f54a875c2523264ddf3342bc54cdf10eb/gcc%2Ftree-chkp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-chkp.c?ref=8823ce3f54a875c2523264ddf3342bc54cdf10eb", "patch": "@@ -3803,7 +3803,7 @@ chkp_walk_pointer_assignments (tree lhs, tree rhs, void *arg,\n \n \t  FOR_EACH_CONSTRUCTOR_ELT (CONSTRUCTOR_ELTS (rhs), cnt, field, val)\n \t    {\n-\t      if (chkp_type_has_pointer (TREE_TYPE (field)))\n+\t      if (field && chkp_type_has_pointer (TREE_TYPE (field)))\n \t\t{\n \t\t  tree lhs_field = chkp_build_component_ref (lhs, field);\n \t\t  chkp_walk_pointer_assignments (lhs_field, val, arg, handler);"}]}