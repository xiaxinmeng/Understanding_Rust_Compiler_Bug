{"sha": "d110b74089c5edde21dd46fbcf35659cbc1f98d0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDExMGI3NDA4OWM1ZWRkZTIxZGQ0NmZiY2YzNTY1OWNiYzFmOThkMA==", "commit": {"author": {"name": "Dorit Nuzman", "email": "dorit@il.ibm.com", "date": "2005-08-16T15:02:39Z"}, "committer": {"name": "Dorit Nuzman", "email": "dorit@gcc.gnu.org", "date": "2005-08-16T15:02:39Z"}, "message": "vect-40: Use aligned arrays instead of arrays to aligned type.\n\n        * gcc.dg/vect/vect-40: Use aligned arrays instead of arrays to aligned\n        type.\n        * gcc.dg/vect/vect-41: Likewise.\n        * gcc.dg/vect/vect-42: Likewise.\n        * gcc.dg/vect/vect-43: Likewise.\n        * gcc.dg/vect/vect-44: Likewise.\n        * gcc.dg/vect/vect-46: Likewise.\n        * gcc.dg/vect/vect-47: Likewise.\n        * gcc.dg/vect/vect-48: Likewise.\n        * gcc.dg/vect/vect-52: Likewise.\n        * gcc.dg/vect/vect-53: Likewise.\n        * gcc.dg/vect/vect-54: Likewise.\n        * gcc.dg/vect/vect-55: Likewise.\n        * gcc.dg/vect/vect-56: Likewise.\n        * gcc.dg/vect/vect-57: Likewise.\n        * gcc.dg/vect/vect-58: Likewise.\n        * gcc.dg/vect/vect-59: Likewise.\n        * gcc.dg/vect/vect-60: Likewise.\n        * gcc.dg/vect/vect-61: Likewise.\n        * gcc.dg/vect/vect-85: Likewise.\n        * gcc.dg/vect/vect-87: Likewise.\n        * gcc.dg/vect/vect-88: Likewise.\n        * gcc.dg/vect/vect-93.c: Likewise.\n        * gcc.dg/vect/vect-74: Likewise, and also added documentation.\n        * gcc.dg/vect/vect-75: Likewise.\n        * gcc.dg/vect/vect-76: Likewise.\n        * gcc.dg/vect/vect-77: Likewise.\n        * gcc.dg/vect/vect-78: Likewise.\n        * gcc.dg/vect/vect-80: Likewise.\n        * gcc.dg/vect/vect-35: Likewise, and also check that the test wasn't\n        vectorized for the expected reason, rather than checking how alignment\n        was handled.\n        * gcc.dg/vect/vect-92.c: Use aligned arrays instead of arrays to aligned\n        type and also instead of aligned pointers. Added documentation.\n\nFrom-SVN: r103158", "tree": {"sha": "eb986f4c63313c2d95433b7ac6166cd8defb1989", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eb986f4c63313c2d95433b7ac6166cd8defb1989"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d110b74089c5edde21dd46fbcf35659cbc1f98d0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d110b74089c5edde21dd46fbcf35659cbc1f98d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d110b74089c5edde21dd46fbcf35659cbc1f98d0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d110b74089c5edde21dd46fbcf35659cbc1f98d0/comments", "author": null, "committer": null, "parents": [{"sha": "20fe2233a7169a95be493c7f0a335a3332711d8b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/20fe2233a7169a95be493c7f0a335a3332711d8b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/20fe2233a7169a95be493c7f0a335a3332711d8b"}], "stats": {"total": 263, "additions": 158, "deletions": 105}, "files": [{"sha": "a38b71071a7170367753cfb8a0b33e62831fee6e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d110b74089c5edde21dd46fbcf35659cbc1f98d0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d110b74089c5edde21dd46fbcf35659cbc1f98d0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d110b74089c5edde21dd46fbcf35659cbc1f98d0", "patch": "@@ -1,3 +1,40 @@\n+2005-08-16  Dorit Nuzman  <dorit@il.ibm.com>\n+\n+\t* gcc.dg/vect/vect-40: Use aligned arrays instead of arrays to aligned\n+\ttype.\n+\t* gcc.dg/vect/vect-41: Likewise.\n+\t* gcc.dg/vect/vect-42: Likewise.\n+\t* gcc.dg/vect/vect-43: Likewise.\n+\t* gcc.dg/vect/vect-44: Likewise.\n+\t* gcc.dg/vect/vect-46: Likewise.\n+\t* gcc.dg/vect/vect-47: Likewise.\n+\t* gcc.dg/vect/vect-48: Likewise.\n+\t* gcc.dg/vect/vect-52: Likewise.\n+\t* gcc.dg/vect/vect-53: Likewise.\n+\t* gcc.dg/vect/vect-54: Likewise.\n+\t* gcc.dg/vect/vect-55: Likewise.\n+\t* gcc.dg/vect/vect-56: Likewise.\n+\t* gcc.dg/vect/vect-57: Likewise.\n+\t* gcc.dg/vect/vect-58: Likewise.\n+\t* gcc.dg/vect/vect-59: Likewise.\n+\t* gcc.dg/vect/vect-60: Likewise.\n+\t* gcc.dg/vect/vect-61: Likewise.\n+\t* gcc.dg/vect/vect-85: Likewise.\n+\t* gcc.dg/vect/vect-87: Likewise.\n+\t* gcc.dg/vect/vect-88: Likewise.\n+\t* gcc.dg/vect/vect-93.c: Likewise.\n+\t* gcc.dg/vect/vect-74: Likewise, and also added documentation.\n+\t* gcc.dg/vect/vect-75: Likewise.\n+\t* gcc.dg/vect/vect-76: Likewise.\n+\t* gcc.dg/vect/vect-77: Likewise.\n+\t* gcc.dg/vect/vect-78: Likewise.\n+\t* gcc.dg/vect/vect-80: Likewise.\n+\t* gcc.dg/vect/vect-35: Likewise, and also check that the test wasn't\n+        vectorized for the expected reason, rather than checking how alignment\n+        was handled. \n+\t* gcc.dg/vect/vect-92.c: Use aligned arrays instead of arrays to aligned\n+        type and also instead of aligned pointers. Added documentation.\n+\n 2005-08-16  Feng Wang  <fengwang@nudt.edu.cn>\n \n \t* gfortran.dg/power.f90: New test."}, {"sha": "ef36d1ca6e80efe132638005c6586232bda1dac1", "filename": "gcc/testsuite/gcc.dg/vect/vect-35.c", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d110b74089c5edde21dd46fbcf35659cbc1f98d0/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-35.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d110b74089c5edde21dd46fbcf35659cbc1f98d0/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-35.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-35.c?ref=d110b74089c5edde21dd46fbcf35659cbc1f98d0", "patch": "@@ -3,24 +3,24 @@\n #include <stdarg.h>\n #include \"tree-vect.h\"\n \n-typedef char achar __attribute__ ((__aligned__(16)));\n-\n #define N 16\n-achar x[N];\n  \n int main1 ()\n {  \n   union {\n-    achar a[N];\n-    achar b[N];\n+    char a[N] __attribute__ ((__aligned__(16)));\n+    char b[N] __attribute__ ((__aligned__(16)));\n   } s;\n   int i;\n \n+  /* Initialization.  */\n   for (i = 0; i < N; i++)\n     {\n       s.b[i] = 3*i;\n     }\n \n+  /* Can't vectorize - dependence analysis fails cause s.a and s.b may\n+     overlap.  */\n   for (i = 0; i < N; i++)\n     {\n       s.a[i] = s.b[i] + 1;\n@@ -29,7 +29,7 @@ int main1 ()\n   /* check results:  */\n   for (i = 0; i < N; i++)\n     {\n-      if (s.a[i] != s.b[i])\n+      if (s.a[i] != 3*i + 1)\n \tabort ();\n     }\n \n@@ -44,6 +44,6 @@ int main (void)\n } \n \n \n-/* { dg-final { scan-tree-dump-times \"vectorized 0 loops\" 1 \"vect\" } } */\n-/* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail *-*-* } } } */\n+/* { dg-final { scan-tree-dump-times \"can't determine dependence between\" 1 \"vect\" } } */\n /* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "7abacd659039d9c50167ff6c1a49f90d06d2813e", "filename": "gcc/testsuite/gcc.dg/vect/vect-40.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d110b74089c5edde21dd46fbcf35659cbc1f98d0/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-40.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d110b74089c5edde21dd46fbcf35659cbc1f98d0/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-40.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-40.c?ref=d110b74089c5edde21dd46fbcf35659cbc1f98d0", "patch": "@@ -38,9 +38,9 @@ main1 (afloat * __restrict__ pa, afloat * __restrict__ pb, afloat * __restrict__\n int main (void)\n {\n   int i;\n-  afloat a[N];\n-  afloat b[N] = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45,48,51,54,57};\n-  afloat c[N] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19};\n+  float a[N] __attribute__ ((__aligned__(16)));\n+  float b[N] __attribute__ ((__aligned__(16))) = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45,48,51,54,57};\n+  float c[N] __attribute__ ((__aligned__(16))) = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19};\n \n   check_vect ();\n "}, {"sha": "ee2ccdf4b878395103a321eb50fb3fe24201ee72", "filename": "gcc/testsuite/gcc.dg/vect/vect-41.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d110b74089c5edde21dd46fbcf35659cbc1f98d0/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-41.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d110b74089c5edde21dd46fbcf35659cbc1f98d0/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-41.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-41.c?ref=d110b74089c5edde21dd46fbcf35659cbc1f98d0", "patch": "@@ -40,9 +40,9 @@ main1 (afloat * pa, afloat * pb, afloat * pc)\n int main (void)\n {\n   int i;\n-  afloat a[N];\n-  afloat b[N] = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45,48,51,54,57};\n-  afloat c[N] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19};\n+  float a[N] __attribute__ ((__aligned__(16)));\n+  float b[N] __attribute__ ((__aligned__(16))) = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45,48,51,54,57};\n+  float c[N] __attribute__ ((__aligned__(16))) = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19};\n \n   check_vect ();\n "}, {"sha": "714596891d3c96ee18a952a94ffcea876fb0206f", "filename": "gcc/testsuite/gcc.dg/vect/vect-42.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d110b74089c5edde21dd46fbcf35659cbc1f98d0/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-42.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d110b74089c5edde21dd46fbcf35659cbc1f98d0/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-42.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-42.c?ref=d110b74089c5edde21dd46fbcf35659cbc1f98d0", "patch": "@@ -26,8 +26,8 @@ int\n main1 (afloat * __restrict__ pa)\n {\n   int i;\n-  afloat pb[N] = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45,48,51,54,57};\n-  afloat pc[N] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19};\n+  float pb[N] __attribute__ ((__aligned__(16))) = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45,48,51,54,57};\n+  float pc[N] __attribute__ ((__aligned__(16))) = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19};\n \n \n   for (i = 0; i < N; i++)\n@@ -41,9 +41,9 @@ main1 (afloat * __restrict__ pa)\n int main (void)\n {\n   int i;\n-  afloat a[N];\n-  afloat b[N] = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45,48,51,54,57};\n-  afloat c[N] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19};\n+  float a[N] __attribute__ ((__aligned__(16)));\n+  float b[N] __attribute__ ((__aligned__(16))) = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45,48,51,54,57};\n+  float c[N] __attribute__ ((__aligned__(16))) = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19};\n \n   check_vect ();\n "}, {"sha": "e47bdaaeb813989e074fc48e5c4086df6be0a42a", "filename": "gcc/testsuite/gcc.dg/vect/vect-43.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d110b74089c5edde21dd46fbcf35659cbc1f98d0/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-43.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d110b74089c5edde21dd46fbcf35659cbc1f98d0/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-43.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-43.c?ref=d110b74089c5edde21dd46fbcf35659cbc1f98d0", "patch": "@@ -26,8 +26,8 @@ int\n main1 (afloat * pa)\n {\n   int i;\n-  afloat pb[N] = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45,48,51,54,57};\n-  afloat pc[N] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19};\n+  float pb[N] __attribute__ ((__aligned__(16))) = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45,48,51,54,57};\n+  float pc[N] __attribute__ ((__aligned__(16))) = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19};\n \n  /* Not vectorizable: pa may alias pb and/or pc, since their addresses escape.  */\n   for (i = 0; i < N; i++)\n@@ -66,9 +66,9 @@ main2 (afloat * pa)\n int main (void)\n {\n   int i;\n-  afloat a[N];\n-  afloat b[N] = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45,48,51,54,57};\n-  afloat c[N] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19};\n+  float a[N] __attribute__ ((__aligned__(16)));\n+  float b[N] __attribute__ ((__aligned__(16))) = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45,48,51,54,57};\n+  float c[N] __attribute__ ((__aligned__(16))) = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19};\n \n   check_vect ();\n "}, {"sha": "0bd2d22e0069a7f70b6aab2fb1255383daad8897", "filename": "gcc/testsuite/gcc.dg/vect/vect-44.c", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d110b74089c5edde21dd46fbcf35659cbc1f98d0/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-44.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d110b74089c5edde21dd46fbcf35659cbc1f98d0/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-44.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-44.c?ref=d110b74089c5edde21dd46fbcf35659cbc1f98d0", "patch": "@@ -5,8 +5,6 @@\n \n #define N 256\n \n-typedef float afloat __attribute__ ((__aligned__(16)));\n-\n void bar (float *pa, float *pb, float *pc) \n {\n   int i;\n@@ -21,7 +19,6 @@ void bar (float *pa, float *pb, float *pc)\n   return;\n }\n \n-\n int\n main1 (float * __restrict__ pa, float * __restrict__ pb, float * __restrict__ pc)\n {\n@@ -40,9 +37,9 @@ main1 (float * __restrict__ pa, float * __restrict__ pb, float * __restrict__ pc\n int main (void)\n {\n   int i;\n-  afloat a[N+4];\n-  afloat b[N+4] = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45,48,51,54,57,60,63,66,69};\n-  afloat c[N+4] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23};\n+  float a[N+4] __attribute__ ((__aligned__(16)));\n+  float b[N+4] __attribute__ ((__aligned__(16))) = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45,48,51,54,57,60,63,66,69};\n+  float c[N+4] __attribute__ ((__aligned__(16))) = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23};\n \n   check_vect ();\n "}, {"sha": "687393400a90bb982b2198adb33bd47da74ac476", "filename": "gcc/testsuite/gcc.dg/vect/vect-46.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d110b74089c5edde21dd46fbcf35659cbc1f98d0/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-46.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d110b74089c5edde21dd46fbcf35659cbc1f98d0/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-46.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-46.c?ref=d110b74089c5edde21dd46fbcf35659cbc1f98d0", "patch": "@@ -39,9 +39,9 @@ int main (void)\n {\n   int i;\n   int n=N;\n-  afloat a[N];\n-  afloat b[N] = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45,48,51,54,57};\n-  afloat c[N] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19};\n+  float a[N] __attribute__ ((__aligned__(16)));\n+  float b[N] __attribute__ ((__aligned__(16))) = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45,48,51,54,57};\n+  float c[N] __attribute__ ((__aligned__(16))) = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19};\n \n   check_vect ();\n "}, {"sha": "4f21ffc88c8ae77826fa315f1e0f94ee2693bc8f", "filename": "gcc/testsuite/gcc.dg/vect/vect-47.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d110b74089c5edde21dd46fbcf35659cbc1f98d0/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-47.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d110b74089c5edde21dd46fbcf35659cbc1f98d0/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-47.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-47.c?ref=d110b74089c5edde21dd46fbcf35659cbc1f98d0", "patch": "@@ -41,9 +41,9 @@ int main (void)\n {\n   int i;\n   int n=N;\n-  afloat a[N];\n-  afloat b[N] = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45,48,51,54,57};\n-  afloat c[N] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19};\n+  float a[N] __attribute__ ((__aligned__(16)));\n+  float b[N] __attribute__ ((__aligned__(16))) = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45,48,51,54,57};\n+  float c[N] __attribute__ ((__aligned__(16))) = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19};\n \n   check_vect ();\n "}, {"sha": "83ec09a37ca735dca704660d341f525a41fe54d7", "filename": "gcc/testsuite/gcc.dg/vect/vect-48.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d110b74089c5edde21dd46fbcf35659cbc1f98d0/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-48.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d110b74089c5edde21dd46fbcf35659cbc1f98d0/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-48.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-48.c?ref=d110b74089c5edde21dd46fbcf35659cbc1f98d0", "patch": "@@ -40,9 +40,9 @@ main1 (afloat * __restrict__ pa, float * __restrict__ pb, float * __restrict__ p\n int main (void)\n {\n   int i;\n-  afloat a[N];\n-  afloat b[N+1] = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45,48,51,54,57,60};\n-  afloat c[N] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19};\n+  float a[N] __attribute__ ((__aligned__(16)));\n+  float b[N+1] __attribute__ ((__aligned__(16))) = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45,48,51,54,57,60};\n+  float c[N] __attribute__ ((__aligned__(16))) = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19};\n \n   check_vect ();\n "}, {"sha": "a1cb82c92ad01681c7d863cafee53341e39d57c1", "filename": "gcc/testsuite/gcc.dg/vect/vect-52.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d110b74089c5edde21dd46fbcf35659cbc1f98d0/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-52.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d110b74089c5edde21dd46fbcf35659cbc1f98d0/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-52.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-52.c?ref=d110b74089c5edde21dd46fbcf35659cbc1f98d0", "patch": "@@ -40,9 +40,9 @@ main1 (int n, afloat * __restrict__ pa, float * __restrict__ pb, float * __restr\n int main (void)\n {\n   int i;\n-  afloat a[N];\n-  afloat b[N] = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45,48,51,54,57,60};\n-  afloat c[N] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20};\n+  float a[N] __attribute__ ((__aligned__(16)));\n+  float b[N] __attribute__ ((__aligned__(16))) = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45,48,51,54,57,60};\n+  float c[N] __attribute__ ((__aligned__(16))) = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20};\n \n   check_vect ();\n "}, {"sha": "1fd7c9305e36c8ee208fb1927b3a621205d4736c", "filename": "gcc/testsuite/gcc.dg/vect/vect-53.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d110b74089c5edde21dd46fbcf35659cbc1f98d0/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-53.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d110b74089c5edde21dd46fbcf35659cbc1f98d0/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-53.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-53.c?ref=d110b74089c5edde21dd46fbcf35659cbc1f98d0", "patch": "@@ -40,9 +40,9 @@ main1 (int n, afloat *pa, float *pb, float *pc)\n int main (void)\n {\n   int i;\n-  afloat a[N];\n-  afloat b[N+1] = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45,48,51,54,57,60};\n-  afloat c[N+1] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20};\n+  float a[N] __attribute__ ((__aligned__(16)));\n+  float b[N+1] __attribute__ ((__aligned__(16))) = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45,48,51,54,57,60};\n+  float c[N+1] __attribute__ ((__aligned__(16))) = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20};\n \n   check_vect ();\n "}, {"sha": "197e6d1268061470d885d15612a828429c3652cd", "filename": "gcc/testsuite/gcc.dg/vect/vect-54.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d110b74089c5edde21dd46fbcf35659cbc1f98d0/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-54.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d110b74089c5edde21dd46fbcf35659cbc1f98d0/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-54.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-54.c?ref=d110b74089c5edde21dd46fbcf35659cbc1f98d0", "patch": "@@ -40,9 +40,9 @@ main1 (afloat * __restrict__ pa, afloat * __restrict__ pb, afloat * __restrict__\n int main (void)\n {\n   int i;\n-  afloat a[N];\n-  afloat b[N] = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45,48,51,54,57};\n-  afloat c[N] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19};\n+  float a[N] __attribute__ ((__aligned__(16)));\n+  float b[N] __attribute__ ((__aligned__(16))) = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45,48,51,54,57};\n+  float c[N] __attribute__ ((__aligned__(16))) = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19};\n \n   check_vect ();\n "}, {"sha": "6601b2fc7f1785544f9a1714d68d25ed021eb185", "filename": "gcc/testsuite/gcc.dg/vect/vect-55.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d110b74089c5edde21dd46fbcf35659cbc1f98d0/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-55.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d110b74089c5edde21dd46fbcf35659cbc1f98d0/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-55.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-55.c?ref=d110b74089c5edde21dd46fbcf35659cbc1f98d0", "patch": "@@ -40,9 +40,9 @@ main1 (afloat *  pa, afloat *  pb, afloat *  pc)\n int main (void)\n {\n   int i;\n-  afloat a[N];\n-  afloat b[N] = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45,48,51,54,57};\n-  afloat c[N] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19};\n+  float a[N] __attribute__ ((__aligned__(16)));\n+  float b[N] __attribute__ ((__aligned__(16))) = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45,48,51,54,57};\n+  float c[N] __attribute__ ((__aligned__(16))) = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19};\n \n   check_vect ();\n "}, {"sha": "fe4c7b6482e783ea0ffa7d9eb91b1572b2366b3e", "filename": "gcc/testsuite/gcc.dg/vect/vect-56.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d110b74089c5edde21dd46fbcf35659cbc1f98d0/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-56.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d110b74089c5edde21dd46fbcf35659cbc1f98d0/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-56.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-56.c?ref=d110b74089c5edde21dd46fbcf35659cbc1f98d0", "patch": "@@ -40,9 +40,9 @@ main1 (afloat * __restrict__ pa, afloat * __restrict__ pb, afloat * __restrict__\n int main (void)\n {\n   int i;\n-  afloat a[N];\n-  afloat b[N] = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45,48,51,54,57};\n-  afloat c[N] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19};\n+  float a[N] __attribute__ ((__aligned__(16)));\n+  float b[N] __attribute__ ((__aligned__(16))) = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45,48,51,54,57};\n+  float c[N] __attribute__ ((__aligned__(16))) = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19};\n \n   check_vect ();\n "}, {"sha": "f197eb4b69d3b4c0b4069d82c5fdf38be4d6061f", "filename": "gcc/testsuite/gcc.dg/vect/vect-57.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d110b74089c5edde21dd46fbcf35659cbc1f98d0/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-57.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d110b74089c5edde21dd46fbcf35659cbc1f98d0/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-57.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-57.c?ref=d110b74089c5edde21dd46fbcf35659cbc1f98d0", "patch": "@@ -40,9 +40,9 @@ main1 (afloat *  pa, afloat *  pb, afloat * pc)\n int main (void)\n {\n   int i;\n-  afloat a[N];\n-  afloat b[N] = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45,48,51,54,57};\n-  afloat c[N] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19};\n+  float a[N] __attribute__ ((__aligned__(16)));\n+  float b[N] __attribute__ ((__aligned__(16))) = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45,48,51,54,57};\n+  float c[N] __attribute__ ((__aligned__(16))) = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19};\n \n   check_vect ();\n "}, {"sha": "67bce93cc901d891369d686181cb9765e4bafd93", "filename": "gcc/testsuite/gcc.dg/vect/vect-58.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d110b74089c5edde21dd46fbcf35659cbc1f98d0/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-58.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d110b74089c5edde21dd46fbcf35659cbc1f98d0/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-58.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-58.c?ref=d110b74089c5edde21dd46fbcf35659cbc1f98d0", "patch": "@@ -41,9 +41,9 @@ int main (void)\n {\n   int i;\n   int n=N;\n-  afloat a[N];\n-  afloat b[N] = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45,48,51,54,57};\n-  afloat c[N] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19};\n+  float a[N] __attribute__ ((__aligned__(16)));\n+  float b[N] __attribute__ ((__aligned__(16))) = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45,48,51,54,57};\n+  float c[N] __attribute__ ((__aligned__(16))) = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19};\n \n   check_vect ();\n "}, {"sha": "c061a3a28e572e381c4494760c90c55566cbbcad", "filename": "gcc/testsuite/gcc.dg/vect/vect-59.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d110b74089c5edde21dd46fbcf35659cbc1f98d0/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-59.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d110b74089c5edde21dd46fbcf35659cbc1f98d0/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-59.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-59.c?ref=d110b74089c5edde21dd46fbcf35659cbc1f98d0", "patch": "@@ -41,9 +41,9 @@ int main (void)\n {\n   int i;\n   int n=N;\n-  afloat a[N];\n-  afloat b[N] = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45,48,51,54,57};\n-  afloat c[N] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19};\n+  float a[N] __attribute__ ((__aligned__(16)));\n+  float b[N] __attribute__ ((__aligned__(16))) = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45,48,51,54,57};\n+  float c[N] __attribute__ ((__aligned__(16))) = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19};\n \n   check_vect ();\n "}, {"sha": "3021ee4436c428351c455c852357a17cf7b5e2b4", "filename": "gcc/testsuite/gcc.dg/vect/vect-60.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d110b74089c5edde21dd46fbcf35659cbc1f98d0/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-60.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d110b74089c5edde21dd46fbcf35659cbc1f98d0/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-60.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-60.c?ref=d110b74089c5edde21dd46fbcf35659cbc1f98d0", "patch": "@@ -41,9 +41,9 @@ int main (void)\n {\n   int i;\n   int n=N;\n-  afloat a[N];\n-  afloat b[N] = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45,48,51,54,57};\n-  afloat c[N] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19};\n+  float a[N] __attribute__ ((__aligned__(16)));\n+  float b[N] __attribute__ ((__aligned__(16))) = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45,48,51,54,57};\n+  float c[N] __attribute__ ((__aligned__(16))) = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19};\n \n   check_vect ();\n "}, {"sha": "5b0f5d954321203a4c8b8cc50995ceac1ed179eb", "filename": "gcc/testsuite/gcc.dg/vect/vect-61.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d110b74089c5edde21dd46fbcf35659cbc1f98d0/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-61.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d110b74089c5edde21dd46fbcf35659cbc1f98d0/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-61.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-61.c?ref=d110b74089c5edde21dd46fbcf35659cbc1f98d0", "patch": "@@ -42,9 +42,9 @@ int main (void)\n {\n   int i;\n   int n=N;\n-  afloat a[N];\n-  afloat b[N] = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45,48,51,54,57};\n-  afloat c[N] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19};\n+  float a[N] __attribute__ ((__aligned__(16)));\n+  float b[N] __attribute__ ((__aligned__(16))) = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45,48,51,54,57};\n+  float c[N] __attribute__ ((__aligned__(16))) = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19};\n \n   check_vect ();\n "}, {"sha": "d4593cbb891ac27e56892ffdf8b2069bc174e5f2", "filename": "gcc/testsuite/gcc.dg/vect/vect-74.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d110b74089c5edde21dd46fbcf35659cbc1f98d0/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-74.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d110b74089c5edde21dd46fbcf35659cbc1f98d0/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-74.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-74.c?ref=d110b74089c5edde21dd46fbcf35659cbc1f98d0", "patch": "@@ -7,9 +7,13 @@\n \n typedef float afloat __attribute__ ((__aligned__(16)));\n \n-afloat a[N];\n-afloat b[N+4] = {0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 7.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0}; \n-afloat c[N] = {0.5, 1.5, 2.5, 3.5, 4.5, 5.5, 7.5, 9.5, 10.5, 11.5, 12.5, 13.5, 14.5, 15.5};\n+/* Check handling of accesses for which the \"initial condition\" -\n+   the expression that represents the first location accessed - is\n+   more involved than just an ssa_name.  */\n+\n+float a[N] __attribute__ ((__aligned__(16)));\n+float b[N+4] __attribute__ ((__aligned__(16))) = {0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 7.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0}; \n+float c[N] __attribute__ ((__aligned__(16))) = {0.5, 1.5, 2.5, 3.5, 4.5, 5.5, 7.5, 9.5, 10.5, 11.5, 12.5, 13.5, 14.5, 15.5};\n \n int\n main1 (afloat *__restrict__  pa, afloat * __restrict__ pb, afloat * __restrict__ pc)"}, {"sha": "d923a83e28db9cf5f161c13a825da3f63b343b85", "filename": "gcc/testsuite/gcc.dg/vect/vect-75.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d110b74089c5edde21dd46fbcf35659cbc1f98d0/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-75.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d110b74089c5edde21dd46fbcf35659cbc1f98d0/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-75.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-75.c?ref=d110b74089c5edde21dd46fbcf35659cbc1f98d0", "patch": "@@ -8,7 +8,11 @@\n \n typedef int aint __attribute__ ((__aligned__(16)));\n \n-aint ib[N+OFF] = {0, 1, 3, 5, 7, 11, 13, 17, 0, 2, 6, 10, 14, 22, 26, 34};\n+/* Check handling of accesses for which the \"initial condition\" -\n+   the expression that represents the first location accessed - is\n+   more involved than just an ssa_name.  */\n+\n+int ib[N+OFF] __attribute__ ((__aligned__(16))) = {0, 1, 3, 5, 7, 11, 13, 17, 0, 2, 6, 10, 14, 22, 26, 34};\n \n int main1 (aint *ib)\n {"}, {"sha": "b8312780f5b1ee33c7d60a09fbd8ce8087eb1bb7", "filename": "gcc/testsuite/gcc.dg/vect/vect-76.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d110b74089c5edde21dd46fbcf35659cbc1f98d0/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-76.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d110b74089c5edde21dd46fbcf35659cbc1f98d0/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-76.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-76.c?ref=d110b74089c5edde21dd46fbcf35659cbc1f98d0", "patch": "@@ -8,7 +8,11 @@\n \n typedef int aint __attribute__ ((__aligned__(16)));\n \n-aint ib[N+OFF] = {0, 1, 3, 5, 7, 11, 13, 17, 0, 2, 6, 10};\n+/* Check handling of accesses for which the \"initial condition\" -\n+   the expression that represents the first location accessed - is\n+   more involved than just an ssa_name.  */\n+\n+int ib[N+OFF] __attribute__ ((__aligned__(16))) = {0, 1, 3, 5, 7, 11, 13, 17, 0, 2, 6, 10};\n \n int main1 (aint *pib)\n {"}, {"sha": "0e456797ff0beebaf68d3f4859b5a2ddf7667973", "filename": "gcc/testsuite/gcc.dg/vect/vect-77.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d110b74089c5edde21dd46fbcf35659cbc1f98d0/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-77.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d110b74089c5edde21dd46fbcf35659cbc1f98d0/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-77.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-77.c?ref=d110b74089c5edde21dd46fbcf35659cbc1f98d0", "patch": "@@ -8,7 +8,11 @@\n \n typedef int aint __attribute__ ((__aligned__(16)));\n \n-aint ib[N+OFF] = {0, 1, 3, 5, 7, 11, 13, 17, 0, 2, 6, 10, 14, 22, 26, 34};\n+/* Check handling of accesses for which the \"initial condition\" -\n+   the expression that represents the first location accessed - is\n+   more involved than just an ssa_name.  */\n+\n+int ib[N+OFF] __attribute__ ((__aligned__(16))) = {0, 1, 3, 5, 7, 11, 13, 17, 0, 2, 6, 10, 14, 22, 26, 34};\n \n int main1 (aint *ib, int off)\n {"}, {"sha": "f231e0dc73a8f5e677218d02867518fe76c59da1", "filename": "gcc/testsuite/gcc.dg/vect/vect-78.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d110b74089c5edde21dd46fbcf35659cbc1f98d0/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-78.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d110b74089c5edde21dd46fbcf35659cbc1f98d0/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-78.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-78.c?ref=d110b74089c5edde21dd46fbcf35659cbc1f98d0", "patch": "@@ -8,7 +8,11 @@\n \n typedef int aint __attribute__ ((__aligned__(16)));\n \n-aint ib[N+OFF] = {0, 1, 3, 5, 7, 11, 13, 17, 0, 2, 6, 10, 14, 22, 26, 34};\n+/* Check handling of accesses for which the \"initial condition\" -\n+   the expression that represents the first location accessed - is\n+   more involved than just an ssa_name.  */\n+\n+int ib[N+OFF] __attribute__ ((__aligned__(16))) = {0, 1, 3, 5, 7, 11, 13, 17, 0, 2, 6, 10, 14, 22, 26, 34};\n int off = 8;\n \n int main1 (aint *ib)"}, {"sha": "25ca6d638c7efbb5d7fd9f0ee17aac8f2a49388b", "filename": "gcc/testsuite/gcc.dg/vect/vect-80.c", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d110b74089c5edde21dd46fbcf35659cbc1f98d0/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-80.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d110b74089c5edde21dd46fbcf35659cbc1f98d0/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-80.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-80.c?ref=d110b74089c5edde21dd46fbcf35659cbc1f98d0", "patch": "@@ -5,13 +5,14 @@\n \n #define N 16\n \n-typedef float afloat __attribute__ ((__aligned__(16)));\n+float fa[N] __attribute__ ((__aligned__(16)));\n+float fb[N+4] __attribute__ ((__aligned__(16))) = {0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 7.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0};\n+float fc[N] __attribute__ ((__aligned__(16))) = {0.5, 1.5, 2.5, 3.5, 4.5, 5.5, 7.5, 9.5, 10.5, 11.5, 12.5, 13.5, 14.5, 15.5};\n \n-afloat fa[N];\n-afloat fb[N+4] = {0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 7.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0};\n-afloat fc[N] = {0.5, 1.5, 2.5, 3.5, 4.5, 5.5, 7.5, 9.5, 10.5, 11.5, 12.5, 13.5, 14.5, 15.5};\n+/* Check handling of accesses for which the \"initial condition\" -\n+   the expression that represents the first location accessed - is\n+   more involved than just an ssa_name.  */\n \n-/* Not vectorizable: not aligned pointers. */\n int\n main1 (float * __restrict__ pa, float * __restrict__ pb, float *__restrict__ pc)\n {"}, {"sha": "4c242626427a31d441b2bf70d313c6cf0f713b43", "filename": "gcc/testsuite/gcc.dg/vect/vect-85.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d110b74089c5edde21dd46fbcf35659cbc1f98d0/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-85.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d110b74089c5edde21dd46fbcf35659cbc1f98d0/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-85.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-85.c?ref=d110b74089c5edde21dd46fbcf35659cbc1f98d0", "patch": "@@ -5,8 +5,6 @@\n \n #define N 16\n \n-typedef int aint __attribute__ ((__aligned__(16)));\n-\n int main1 (int *a)\n {\n   int i, j, k;\n@@ -36,7 +34,7 @@ int main1 (int *a)\n \n int main (void)\n { \n-  aint a[N];\n+  int a[N] __attribute__ ((__aligned__(16)));\n \n   check_vect ();\n "}, {"sha": "6b74a0d5109c67e769c41499152b7ea73ab739a6", "filename": "gcc/testsuite/gcc.dg/vect/vect-87.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d110b74089c5edde21dd46fbcf35659cbc1f98d0/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-87.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d110b74089c5edde21dd46fbcf35659cbc1f98d0/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-87.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-87.c?ref=d110b74089c5edde21dd46fbcf35659cbc1f98d0", "patch": "@@ -5,8 +5,6 @@\n \n #define N 16\n \n-typedef int aint __attribute__ ((__aligned__(16)));\n-\n int main1 (int n, int *a)\n {\n   int i, j, k;\n@@ -36,7 +34,7 @@ int main1 (int n, int *a)\n \n int main (void)\n { \n-  aint a[N];\n+  int a[N] __attribute__ ((__aligned__(16)));\n \n   check_vect ();\n "}, {"sha": "478a142bfb067cad73b2dff3017ff8fc88af6f43", "filename": "gcc/testsuite/gcc.dg/vect/vect-88.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d110b74089c5edde21dd46fbcf35659cbc1f98d0/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-88.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d110b74089c5edde21dd46fbcf35659cbc1f98d0/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-88.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-88.c?ref=d110b74089c5edde21dd46fbcf35659cbc1f98d0", "patch": "@@ -5,8 +5,6 @@\n \n #define N 16\n \n-typedef int aint __attribute__ ((__aligned__(16)));\n-\n int main1 (int n, int *a)\n {\n   int i, j, k;\n@@ -36,7 +34,7 @@ int main1 (int n, int *a)\n \n int main (void)\n { \n-  aint a[N+1];\n+  int a[N+1] __attribute__ ((__aligned__(16)));\n \n   check_vect ();\n "}, {"sha": "b47d859548d7aab13b7362d4514eaf97650bc194", "filename": "gcc/testsuite/gcc.dg/vect/vect-92.c", "status": "modified", "additions": 17, "deletions": 12, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d110b74089c5edde21dd46fbcf35659cbc1f98d0/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-92.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d110b74089c5edde21dd46fbcf35659cbc1f98d0/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-92.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-92.c?ref=d110b74089c5edde21dd46fbcf35659cbc1f98d0", "patch": "@@ -5,12 +5,20 @@\n \n #define N 256\n \n-typedef float afloat __attribute__ ((__aligned__(16)));\n-\n-/* known misalignment: same alignment  */\n+float pa[N] __attribute__ ((__aligned__(16)));\n+float pb[N] __attribute__ ((__aligned__(16))) = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45,48,51,54,57};\n+float pc[N] __attribute__ ((__aligned__(16))) = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19};\n+\n+/* Check handling of unaligned accesses when the misalignment is\n+   known at compile time and different accesses have the same\n+   misalignment (e.g. peeling to align one access will align all\n+   accesses with the same misalignment.  Also, the number of \n+   peeled iterations is known in this case, and the vectorizer\n+   can use this information (generate prolog and epilog loops\n+   with known number of iterations, and only if needed).  */\n \n int\n-main1 (afloat * __restrict__ pa, afloat * __restrict__ pb, afloat * __restrict__ pc)\n+main1 ()\n {\n   int i;\n \n@@ -30,7 +38,7 @@ main1 (afloat * __restrict__ pa, afloat * __restrict__ pb, afloat * __restrict__\n }\n \n int\n-main2 (afloat * __restrict__ pa, afloat * __restrict__ pb, afloat * __restrict__ pc)\n+main2 ()\n {\n   int i;\n \n@@ -50,7 +58,7 @@ main2 (afloat * __restrict__ pa, afloat * __restrict__ pb, afloat * __restrict__\n }\n \n int\n-main3 (afloat * __restrict__ pa, afloat * __restrict__ pb, afloat * __restrict__ pc, int n)\n+main3 (int n)\n {\n   int i;\n \n@@ -72,15 +80,12 @@ main3 (afloat * __restrict__ pa, afloat * __restrict__ pb, afloat * __restrict__\n int main (void)\n {\n   int i;\n-  afloat a[N];\n-  afloat b[N] = {0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45,48,51,54,57};\n-  afloat c[N] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19};\n \n   check_vect ();\n \n-  main1 (a,b,c);\n-  main2 (a,b,c);\n-  main3 (a,b,c,N-1);\n+  main1 ();\n+  main2 ();\n+  main3 (N-1);\n \n   return 0;\n }"}, {"sha": "af2f1663a22de82107d148868d95e58ffc113d8b", "filename": "gcc/testsuite/gcc.dg/vect/vect-93.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d110b74089c5edde21dd46fbcf35659cbc1f98d0/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-93.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d110b74089c5edde21dd46fbcf35659cbc1f98d0/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-93.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-93.c?ref=d110b74089c5edde21dd46fbcf35659cbc1f98d0", "patch": "@@ -5,7 +5,6 @@\n \n #define N 3001\n \n-typedef float afloat __attribute__ ((__aligned__(16)));\n \n int\n main1 (float *pa)\n@@ -42,8 +41,8 @@ main1 (float *pa)\n int main (void)\n {\n   int i;\n-  afloat a[N];\n-  afloat b[N];\n+  float a[N] __attribute__ ((__aligned__(16)));\n+  float b[N] __attribute__ ((__aligned__(16)));\n \n   check_vect ();\n "}]}