{"sha": "9aa1d5ac5e9074af1562cc32a217588c690d7e63", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWFhMWQ1YWM1ZTkwNzRhZjE1NjJjYzMyYTIxNzU4OGM2OTBkN2U2Mw==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2000-10-25T12:48:34Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2000-10-25T12:48:34Z"}, "message": "stl_pair.h (make_pair): Add LWG solution.\n\n\n2000-10-24  Benjamin Kosnik  <bkoz@redhat.com>\n\n        * include/bits/stl_pair.h (make_pair): Add LWG solution.\n\n        * testsuite/21_strings/compare.cc (test01): Inject namespace std\n\tinto the mix.\n\n\t* mkcheck.in (MAX_MEM_USAGE): Bump up to 3072. Strangely enough,\n\tthis works.\n\nFrom-SVN: r37049", "tree": {"sha": "cf4ef8a61972d942542abec143917fd819700265", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cf4ef8a61972d942542abec143917fd819700265"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9aa1d5ac5e9074af1562cc32a217588c690d7e63", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9aa1d5ac5e9074af1562cc32a217588c690d7e63", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9aa1d5ac5e9074af1562cc32a217588c690d7e63", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9aa1d5ac5e9074af1562cc32a217588c690d7e63/comments", "author": null, "committer": null, "parents": [{"sha": "cc66e4ac40dbb8f4a93922def459c81d174af6cf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc66e4ac40dbb8f4a93922def459c81d174af6cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc66e4ac40dbb8f4a93922def459c81d174af6cf"}], "stats": {"total": 22, "additions": 15, "deletions": 7}, "files": [{"sha": "236f916394f066933fc821d9f122eef7cca8e5e7", "filename": "libstdc++-v3/include/bits/stl_pair.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9aa1d5ac5e9074af1562cc32a217588c690d7e63/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_pair.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9aa1d5ac5e9074af1562cc32a217588c690d7e63/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_pair.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_pair.h?ref=9aa1d5ac5e9074af1562cc32a217588c690d7e63", "patch": "@@ -87,7 +87,12 @@ inline bool operator>=(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y) {\n #endif /* __STL_FUNCTION_TMPL_PARTIAL_ORDER */\n \n template <class _T1, class _T2>\n+#ifdef _GLIBCPP_RESOLVE_LIB_DEFECTS\n+//181.  make_pair() unintended behavior\n+inline pair<_T1, _T2> make_pair(const _T1 __x, const _T2 __y)\n+#else\n inline pair<_T1, _T2> make_pair(const _T1& __x, const _T2& __y)\n+#endif\n {\n   return pair<_T1, _T2>(__x, __y);\n }"}, {"sha": "ac74673bf0227466905a183c51ee49a526588394", "filename": "libstdc++-v3/mkcheck.in", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9aa1d5ac5e9074af1562cc32a217588c690d7e63/libstdc%2B%2B-v3%2Fmkcheck.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9aa1d5ac5e9074af1562cc32a217588c690d7e63/libstdc%2B%2B-v3%2Fmkcheck.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fmkcheck.in?ref=9aa1d5ac5e9074af1562cc32a217588c690d7e63", "patch": "@@ -107,6 +107,9 @@ LOG_FILE=\"$TEST_DIR/$(date +%Y%m%d)-mkchecklog.txt\"\n # the names of the specific test files to be run\n TESTS_FILE=\"$TEST_DIR/$(date +%Y%m%d)-mkcheckfiles.txt\"\n \n+# the heap size limit for testsuite binaries; start with a 2MB limit as per\n+# http://sources.redhat.com/ml/libstdc++/2000-10/msg00029.html\n+MAX_MEM_USAGE=3072\n \n #\n # 2: clean, make files, append general test info\n@@ -233,7 +236,7 @@ test_file()\n \n         # Actually run the executable and time it . . .\n         TIMEFORMAT='timemark %R'\n-        E_TIME_TEXT=\"$(exec 2>&1; time $EXENAME)\"\n+        E_TIME_TEXT=\"$(exec 2>&1; ulimit -d $MAX_MEM_USAGE; time $EXENAME)\"\n \tE_ABNORMAL_TERMINATION=$?\n         E_TIME=\"$(echo $E_TIME_TEXT | awk '{print $2}')\"\n         # joining those two commands does not work due to quoting problems:\n@@ -365,3 +368,5 @@ fi\n \n exit 0\n \n+\n+"}, {"sha": "ba10e61f5cf40a23ff71cebc6e21f4f22affc2ff", "filename": "libstdc++-v3/testsuite/21_strings/compare.cc", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9aa1d5ac5e9074af1562cc32a217588c690d7e63/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fcompare.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9aa1d5ac5e9074af1562cc32a217588c690d7e63/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fcompare.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fcompare.cc?ref=9aa1d5ac5e9074af1562cc32a217588c690d7e63", "patch": "@@ -71,13 +71,11 @@ test_value(int result, want_value expected)\n int \n test01()\n {\n-  std::string \tstr_0(\"costa rica\");\n-  std::string \tstr_1(\"costa marbella\");\n-  std::string \tstr_2;\n+  using namespace std;\n \n-  using std::strcmp;\n-  using std::strncmp;\n-  using std::memcmp;\n+  string \tstr_0(\"costa rica\");\n+  string \tstr_1(\"costa marbella\");\n+  string \tstr_2;\n \n   //sanity check\n   test_value(strcmp(\"costa marbella\", \"costa rica\"), lt); "}]}