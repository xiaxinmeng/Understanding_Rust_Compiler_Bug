{"sha": "4c484f40927f5b3727b12a7cd07d6ad2475ce390", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGM0ODRmNDA5MjdmNWIzNzI3YjEyYTdjZDA3ZDZhZDI0NzVjZTM5MA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-06-22T15:41:47Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-06-22T15:41:47Z"}, "message": "[multiple changes]\n\n2010-06-22  Thomas Quinot  <quinot@adacore.com>\n\n\t* sem_elab.adb: Minor reformatting.\n\n2010-06-22  Vincent Celier  <celier@adacore.com>\n\n\t* gnatsym.adb: Put the object files in the table in increasing\n\taphabetical order of base names.\n\n2010-06-22  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch8.adb (Set_Entity_Or_Discriminal): New procedure used by\n\tFind_Direct_Name and Find_Expanded_Name, to replace a discriminant with\n\tthe corresponding discriminal within a record declaration.\n\nFrom-SVN: r161196", "tree": {"sha": "2a42d62a1cd9d789d854dd9c4d0a9e028bd02546", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2a42d62a1cd9d789d854dd9c4d0a9e028bd02546"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4c484f40927f5b3727b12a7cd07d6ad2475ce390", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c484f40927f5b3727b12a7cd07d6ad2475ce390", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c484f40927f5b3727b12a7cd07d6ad2475ce390", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c484f40927f5b3727b12a7cd07d6ad2475ce390/comments", "author": null, "committer": null, "parents": [{"sha": "61441c180d516ccd0bc878dc3aef3fd2d89f02dd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61441c180d516ccd0bc878dc3aef3fd2d89f02dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/61441c180d516ccd0bc878dc3aef3fd2d89f02dd"}], "stats": {"total": 181, "additions": 113, "deletions": 68}, "files": [{"sha": "a7a0e645fb79ddb3cb509f8dbb2d63a2d7f8f934", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c484f40927f5b3727b12a7cd07d6ad2475ce390/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c484f40927f5b3727b12a7cd07d6ad2475ce390/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=4c484f40927f5b3727b12a7cd07d6ad2475ce390", "patch": "@@ -1,3 +1,18 @@\n+2010-06-22  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* sem_elab.adb: Minor reformatting.\n+\n+2010-06-22  Vincent Celier  <celier@adacore.com>\n+\n+\t* gnatsym.adb: Put the object files in the table in increasing\n+\taphabetical order of base names.\n+\n+2010-06-22  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch8.adb (Set_Entity_Or_Discriminal): New procedure used by\n+\tFind_Direct_Name and Find_Expanded_Name, to replace a discriminant with\n+\tthe corresponding discriminal within a record declaration.\n+\n 2010-06-22  Thomas Quinot  <quinot@adacore.com>\n \n \t* exp_aggr.adb (Rewrite_Discriminant): Rewriting must occur only for an"}, {"sha": "5a88994a4c4496ef9e96011aebae4ec87d2c1c1f", "filename": "gcc/ada/gnatsym.adb", "status": "modified", "additions": 39, "deletions": 12, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c484f40927f5b3727b12a7cd07d6ad2475ce390/gcc%2Fada%2Fgnatsym.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c484f40927f5b3727b12a7cd07d6ad2475ce390/gcc%2Fada%2Fgnatsym.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatsym.adb?ref=4c484f40927f5b3727b12a7cd07d6ad2475ce390", "patch": "@@ -41,19 +41,19 @@\n --    - (optional) the name of the reference symbol file\n --    - the names of one or more object files where the symbols are found\n \n-with Ada.Exceptions; use Ada.Exceptions;\n-with Ada.Text_IO;    use Ada.Text_IO;\n-\n-with GNAT.Command_Line; use GNAT.Command_Line;\n-with GNAT.OS_Lib;       use GNAT.OS_Lib;\n-\n with Gnatvsn; use Gnatvsn;\n with Osint;   use Osint;\n with Output;  use Output;\n-\n with Symbols; use Symbols;\n with Table;\n \n+with Ada.Exceptions; use Ada.Exceptions;\n+with Ada.Text_IO;    use Ada.Text_IO;\n+\n+with GNAT.Command_Line;         use GNAT.Command_Line;\n+with GNAT.Directory_Operations; use GNAT.Directory_Operations;\n+with GNAT.OS_Lib;               use GNAT.OS_Lib;\n+\n procedure Gnatsym is\n \n    Empty_String : aliased String := \"\";\n@@ -82,8 +82,13 @@ procedure Gnatsym is\n    Version_String : String_Access := Empty;\n    --  The version of the library (used on VMS)\n \n+   type Object_File_Data is record\n+      Path : String_Access;\n+      Name : String_Access;\n+   end record;\n+\n    package Object_Files is new Table.Table\n-     (Table_Component_Type => String_Access,\n+     (Table_Component_Type => Object_File_Data,\n       Table_Index_Type     => Natural,\n       Table_Low_Bound      => 0,\n       Table_Initial        => 10,\n@@ -164,7 +169,8 @@ procedure Gnatsym is\n          end case;\n       end loop;\n \n-      --  Get the file names\n+      --  Get the object file names and put them in the table in alphabetical\n+      --  order of base names.\n \n       loop\n          declare\n@@ -175,7 +181,26 @@ procedure Gnatsym is\n             exit when S'Length = 0;\n \n             Object_Files.Increment_Last;\n-            Object_Files.Table (Object_Files.Last) := S;\n+\n+            declare\n+               Base : constant String := Base_Name (S.all);\n+               Last : constant Positive := Object_Files.Last;\n+               J    : Positive;\n+\n+            begin\n+               J := 1;\n+               while J < Last loop\n+                  if Object_Files.Table (J).Name.all > Base then\n+                     Object_Files.Table (J + 1 .. Last) :=\n+                       Object_Files.Table (J .. Last - 1);\n+                     exit;\n+                  end if;\n+\n+                  J := J + 1;\n+               end loop;\n+\n+               Object_Files.Table (J) := (S, new String'(Base));\n+            end;\n          end;\n       end loop;\n    exception\n@@ -304,11 +329,13 @@ begin\n \n          if Verbose then\n             Write_Str (\"Processing object file \"\"\");\n-            Write_Str (Object_Files.Table (Object_File).all);\n+            Write_Str (Object_Files.Table (Object_File).Path.all);\n             Write_Line (\"\"\"\");\n          end if;\n \n-         Processing.Process (Object_Files.Table (Object_File).all, Success);\n+         Processing.Process\n+           (Object_Files.Table (Object_File).Path.all,\n+            Success);\n       end loop;\n \n       --  Finalize the symbol file"}, {"sha": "374cfa7a8ed0001eec5d8203e91486298531627d", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 58, "deletions": 53, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c484f40927f5b3727b12a7cd07d6ad2475ce390/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c484f40927f5b3727b12a7cd07d6ad2475ce390/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=4c484f40927f5b3727b12a7cd07d6ad2475ce390", "patch": "@@ -407,6 +407,12 @@ package body Sem_Ch8 is\n    --  is rewritten as a subprogram body that returns the attribute reference\n    --  applied to the formals of the function.\n \n+   procedure Set_Entity_Or_Discriminal (N : Node_Id; E : Entity_Id);\n+   --  Set Entity, with style check if need be. For a discriminant\n+   --  reference, replace by the corresponding discriminal, i.e. the\n+   --  parameter of the initialization procedure that corresponds to\n+   --  the discriminant.\n+\n    procedure Check_Frozen_Renaming (N : Node_Id; Subp : Entity_Id);\n    --  A renaming_as_body may occur after the entity of the original decla-\n    --  ration has been frozen. In that case, the body of the new entity must\n@@ -3036,6 +3042,56 @@ package body Sem_Ch8 is\n       end if;\n    end Check_Frozen_Renaming;\n \n+   -------------------------------\n+   -- Set_Entity_Or_Discriminal --\n+   -------------------------------\n+\n+   procedure Set_Entity_Or_Discriminal (N : Node_Id; E : Entity_Id) is\n+      P : Node_Id;\n+\n+   begin\n+      --  If the entity is not a discriminant, or else expansion is disabled,\n+      --  simply set the entity.\n+\n+      if not In_Spec_Expression\n+        or else Ekind (E) /= E_Discriminant\n+        or else Inside_A_Generic\n+      then\n+         Set_Entity_With_Style_Check (N, E);\n+\n+      --  The replacement of a discriminant by the corresponding discriminal\n+      --  is not done for a task discriminant that appears in a default\n+      --  expression of an entry parameter. See Expand_Discriminant in exp_ch2\n+      --  for details on their handling.\n+\n+      elsif Is_Concurrent_Type (Scope (E)) then\n+\n+         P := Parent (N);\n+         while Present (P)\n+           and then not Nkind_In (P, N_Parameter_Specification,\n+                                  N_Component_Declaration)\n+         loop\n+            P := Parent (P);\n+         end loop;\n+\n+         if Present (P)\n+           and then Nkind (P) = N_Parameter_Specification\n+         then\n+            null;\n+\n+         else\n+            Set_Entity (N, Discriminal (E));\n+         end if;\n+\n+         --  Otherwise, this is a discriminant in a context in which\n+         --  it is a reference to the corresponding parameter of the\n+         --  init proc for the enclosing type.\n+\n+      else\n+         Set_Entity (N, Discriminal (E));\n+      end if;\n+   end Set_Entity_Or_Discriminal;\n+\n    -----------------------------------\n    -- Check_In_Previous_With_Clause --\n    -----------------------------------\n@@ -4498,58 +4554,7 @@ package body Sem_Ch8 is\n                Check_Nested_Access (E);\n             end if;\n \n-            --  Set Entity, with style check if need be. For a discriminant\n-            --  reference, replace by the corresponding discriminal, i.e. the\n-            --  parameter of the initialization procedure that corresponds to\n-            --  the discriminant. If this replacement is being performed, there\n-            --  is no style check to perform.\n-\n-            --  This replacement must not be done if we are currently\n-            --  processing a generic spec or body, because the discriminal\n-            --  has not been not generated in this case.\n-\n-            --  The replacement is also skipped if we are in special\n-            --  spec-expression mode. Why is this skipped in this case ???\n-\n-            if not In_Spec_Expression\n-              or else Ekind (E) /= E_Discriminant\n-              or else Inside_A_Generic\n-            then\n-               Set_Entity_With_Style_Check (N, E);\n-\n-            --  The replacement is not done either for a task discriminant that\n-            --  appears in a default expression of an entry parameter. See\n-            --  Expand_Discriminant in exp_ch2 for details on their handling.\n-\n-            elsif Is_Concurrent_Type (Scope (E)) then\n-               declare\n-                  P : Node_Id;\n-\n-               begin\n-                  P := Parent (N);\n-                  while Present (P)\n-                    and then not Nkind_In (P, N_Parameter_Specification,\n-                                              N_Component_Declaration)\n-                  loop\n-                     P := Parent (P);\n-                  end loop;\n-\n-                  if Present (P)\n-                     and then Nkind (P) = N_Parameter_Specification\n-                  then\n-                     null;\n-                  else\n-                     Set_Entity (N, Discriminal (E));\n-                  end if;\n-               end;\n-\n-            --  Otherwise, this is a discriminant in a context in which\n-            --  it is a reference to the corresponding parameter of the\n-            --  init proc for the enclosing type.\n-\n-            else\n-               Set_Entity (N, Discriminal (E));\n-            end if;\n+            Set_Entity_Or_Discriminal (N, E);\n          end if;\n       end;\n    end Find_Direct_Name;\n@@ -4945,7 +4950,7 @@ package body Sem_Ch8 is\n       if Has_Homonym (Id) then\n          Set_Entity (N, Id);\n       else\n-         Set_Entity_With_Style_Check (N, Id);\n+         Set_Entity_Or_Discriminal (N, Id);\n          Generate_Reference (Id, N);\n       end if;\n "}, {"sha": "74aac9e5e0ecb3fea86417a5607fdf14a8c05816", "filename": "gcc/ada/sem_elab.adb", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c484f40927f5b3727b12a7cd07d6ad2475ce390/gcc%2Fada%2Fsem_elab.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c484f40927f5b3727b12a7cd07d6ad2475ce390/gcc%2Fada%2Fsem_elab.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_elab.adb?ref=4c484f40927f5b3727b12a7cd07d6ad2475ce390", "patch": "@@ -599,9 +599,7 @@ package body Sem_Elab is\n \n       --  No checks needed for pure or preelaborated compilation units\n \n-      if Is_Pure (E_Scope)\n-        or else Is_Preelaborated (E_Scope)\n-      then\n+      if Is_Pure (E_Scope) or else Is_Preelaborated (E_Scope) then\n          return;\n       end if;\n "}]}