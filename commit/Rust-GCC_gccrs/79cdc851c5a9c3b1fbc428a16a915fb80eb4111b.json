{"sha": "79cdc851c5a9c3b1fbc428a16a915fb80eb4111b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzljZGM4NTFjNWE5YzNiMWZiYzQyOGExNmE5MTVmYjgwZWI0MTExYg==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2014-12-10T18:31:15Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2014-12-10T18:31:15Z"}, "message": "re PR target/64180 (PowerPC carry bit improvements)\n\n\tPR target/64180\n\t* config/rs6000/rs6000.md (*ctr<mode>_internal1, *ctr<mode>_internal2,\n\t*ctr<mode>_internal5, *ctr<mode>_internal6): Change \"r\" alternatives\n\tto \"b\".  Increase length.\n\t(splitters for these): Split to cmp+addi instead of addic.\n\nFrom-SVN: r218591", "tree": {"sha": "9165b212c8639c27034babfbf82bc098ed8809fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9165b212c8639c27034babfbf82bc098ed8809fb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/79cdc851c5a9c3b1fbc428a16a915fb80eb4111b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79cdc851c5a9c3b1fbc428a16a915fb80eb4111b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/79cdc851c5a9c3b1fbc428a16a915fb80eb4111b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79cdc851c5a9c3b1fbc428a16a915fb80eb4111b/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "76f93d9994a39b1631bea983cfebf3e9a48c4288", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76f93d9994a39b1631bea983cfebf3e9a48c4288", "html_url": "https://github.com/Rust-GCC/gccrs/commit/76f93d9994a39b1631bea983cfebf3e9a48c4288"}], "stats": {"total": 50, "additions": 28, "deletions": 22}, "files": [{"sha": "63479fb6adf0826ddd4c3dbf10efea93cea7a56d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79cdc851c5a9c3b1fbc428a16a915fb80eb4111b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79cdc851c5a9c3b1fbc428a16a915fb80eb4111b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=79cdc851c5a9c3b1fbc428a16a915fb80eb4111b", "patch": "@@ -1,3 +1,11 @@\n+2014-12-10  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\tPR target/64180\n+\t* config/rs6000/rs6000.md (*ctr<mode>_internal1, *ctr<mode>_internal2,\n+\t*ctr<mode>_internal5, *ctr<mode>_internal6): Change \"r\" alternatives\n+\tto \"b\".  Increase length.\n+\t(splitters for these): Split to cmp+addi instead of addic.\n+\n 2014-12-10  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \tPR target/64180"}, {"sha": "c11c31a2f2da42482cf50b69c5ea7f1c71352707", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 20, "deletions": 22, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79cdc851c5a9c3b1fbc428a16a915fb80eb4111b/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79cdc851c5a9c3b1fbc428a16a915fb80eb4111b/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=79cdc851c5a9c3b1fbc428a16a915fb80eb4111b", "patch": "@@ -13490,7 +13490,7 @@\n \n (define_insn \"*ctr<mode>_internal1\"\n   [(set (pc)\n-\t(if_then_else (ne (match_operand:P 1 \"register_operand\" \"c,*r,*r,*r\")\n+\t(if_then_else (ne (match_operand:P 1 \"register_operand\" \"c,*b,*b,*b\")\n \t\t\t  (const_int 1))\n \t\t      (label_ref (match_operand 0 \"\" \"\"))\n \t\t      (pc)))\n@@ -13510,11 +13510,11 @@\n     return \\\"bdz $+8\\;b %l0\\\";\n }\"\n   [(set_attr \"type\" \"branch\")\n-   (set_attr \"length\" \"*,12,16,16\")])\n+   (set_attr \"length\" \"*,16,20,20\")])\n \n (define_insn \"*ctr<mode>_internal2\"\n   [(set (pc)\n-\t(if_then_else (ne (match_operand:P 1 \"register_operand\" \"c,*r,*r,*r\")\n+\t(if_then_else (ne (match_operand:P 1 \"register_operand\" \"c,*b,*b,*b\")\n \t\t\t  (const_int 1))\n \t\t      (pc)\n \t\t      (label_ref (match_operand 0 \"\" \"\"))))\n@@ -13534,13 +13534,13 @@\n     return \\\"bdnz $+8\\;b %l0\\\";\n }\"\n   [(set_attr \"type\" \"branch\")\n-   (set_attr \"length\" \"*,12,16,16\")])\n+   (set_attr \"length\" \"*,16,20,20\")])\n \n ;; Similar but use EQ\n \n (define_insn \"*ctr<mode>_internal5\"\n   [(set (pc)\n-\t(if_then_else (eq (match_operand:P 1 \"register_operand\" \"c,*r,*r,*r\")\n+\t(if_then_else (eq (match_operand:P 1 \"register_operand\" \"c,*b,*b,*b\")\n \t\t\t  (const_int 1))\n \t\t      (label_ref (match_operand 0 \"\" \"\"))\n \t\t      (pc)))\n@@ -13560,11 +13560,11 @@\n     return \\\"bdnz $+8\\;b %l0\\\";\n }\"\n   [(set_attr \"type\" \"branch\")\n-   (set_attr \"length\" \"*,12,16,16\")])\n+   (set_attr \"length\" \"*,16,20,20\")])\n \n (define_insn \"*ctr<mode>_internal6\"\n   [(set (pc)\n-\t(if_then_else (eq (match_operand:P 1 \"register_operand\" \"c,*r,*r,*r\")\n+\t(if_then_else (eq (match_operand:P 1 \"register_operand\" \"c,*b,*b,*b\")\n \t\t\t  (const_int 1))\n \t\t      (pc)\n \t\t      (label_ref (match_operand 0 \"\" \"\"))))\n@@ -13584,7 +13584,7 @@\n     return \\\"bdz $+8\\;b %l0\\\";\n }\"\n   [(set_attr \"type\" \"branch\")\n-   (set_attr \"length\" \"*,12,16,16\")])\n+   (set_attr \"length\" \"*,16,20,20\")])\n \n ;; Now the splitters if we could not allocate the CTR register\n \n@@ -13600,13 +13600,12 @@\n    (clobber (match_scratch:CC 3 \"\"))\n    (clobber (match_scratch:P 4 \"\"))]\n   \"reload_completed\"\n-  [(parallel [(set (match_dup 3)\n-\t\t   (compare:CC (plus:P (match_dup 1)\n-\t\t\t\t\t(const_int -1))\n-\t\t\t       (const_int 0)))\n-\t      (set (match_dup 0)\n-\t\t   (plus:P (match_dup 1)\n-\t\t\t    (const_int -1)))])\n+  [(set (match_dup 3)\n+\t(compare:CC (match_dup 1)\n+\t\t    (const_int 1)))\n+   (set (match_dup 0)\n+\t(plus:P (match_dup 1)\n+\t\t(const_int -1)))\n    (set (pc) (if_then_else (match_dup 7)\n \t\t\t   (match_dup 5)\n \t\t\t   (match_dup 6)))]\n@@ -13626,13 +13625,12 @@\n    (clobber (match_scratch:CC 3 \"\"))\n    (clobber (match_scratch:P 4 \"\"))]\n   \"reload_completed && ! gpc_reg_operand (operands[0], SImode)\"\n-  [(parallel [(set (match_dup 3)\n-\t\t   (compare:CC (plus:P (match_dup 1)\n-\t\t\t\t\t(const_int -1))\n-\t\t\t       (const_int 0)))\n-\t      (set (match_dup 4)\n-\t\t   (plus:P (match_dup 1)\n-\t\t\t    (const_int -1)))])\n+  [(set (match_dup 3)\n+\t(compare:CC (match_dup 1)\n+\t\t    (const_int 1)))\n+   (set (match_dup 4)\n+\t(plus:P (match_dup 1)\n+\t\t(const_int -1)))\n    (set (match_dup 0)\n \t(match_dup 4))\n    (set (pc) (if_then_else (match_dup 7)"}]}