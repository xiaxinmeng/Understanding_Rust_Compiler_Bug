{"sha": "951c6f3dd975d795adc409da1a1477b5229199ae", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTUxYzZmM2RkOTc1ZDc5NWFkYzQwOWRhMWExNDc3YjUyMjkxOTlhZQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2019-11-07T00:31:52Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2019-11-07T00:31:52Z"}, "message": "PR c++/92150 - partial specialization with class NTTP.\n\nHere unify was getting confused by the VIEW_CONVERT_EXPR we add in\nfinish_id_expression_1 to make class NTTP const when they're used in an\nexpression.\n\nTested x86_64-pc-linux-gnu, applying to trunk.\n\n\t* pt.c (unify): Handle VIEW_CONVERT_EXPR.\n\nFrom-SVN: r277901", "tree": {"sha": "e2b9d02d58c552313d9ffaec0ca00acc474cb106", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e2b9d02d58c552313d9ffaec0ca00acc474cb106"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/951c6f3dd975d795adc409da1a1477b5229199ae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/951c6f3dd975d795adc409da1a1477b5229199ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/951c6f3dd975d795adc409da1a1477b5229199ae", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/951c6f3dd975d795adc409da1a1477b5229199ae/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "81a34a6b68184436726489b81d44267c40f6fbe7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81a34a6b68184436726489b81d44267c40f6fbe7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/81a34a6b68184436726489b81d44267c40f6fbe7"}], "stats": {"total": 27, "additions": 25, "deletions": 2}, "files": [{"sha": "8f6a71a8b6ad1069cd7db7113f02364a31e4b5f1", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/951c6f3dd975d795adc409da1a1477b5229199ae/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/951c6f3dd975d795adc409da1a1477b5229199ae/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=951c6f3dd975d795adc409da1a1477b5229199ae", "patch": "@@ -1,5 +1,8 @@\n 2019-11-06  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/92150 - partial specialization with class NTTP.\n+\t* pt.c (unify): Handle VIEW_CONVERT_EXPR.\n+\n \t* pt.c (use_pack_expansion_extra_args_p): Still do substitution if\n \tall packs are simple pack expansions.\n \t(add_extra_args): Check that the extra args aren't dependent."}, {"sha": "061a92c9db09416adb247883f4be8a5369823cf6", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/951c6f3dd975d795adc409da1a1477b5229199ae/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/951c6f3dd975d795adc409da1a1477b5229199ae/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=951c6f3dd975d795adc409da1a1477b5229199ae", "patch": "@@ -22571,8 +22571,9 @@ unify (tree tparms, tree targs, tree parm, tree arg, int strict,\n   /* I don't think this will do the right thing with respect to types.\n      But the only case I've seen it in so far has been array bounds, where\n      signedness is the only information lost, and I think that will be\n-     okay.  */\n-  while (CONVERT_EXPR_P (parm))\n+     okay.  VIEW_CONVERT_EXPR can appear with class NTTP, thanks to\n+     finish_id_expression_1, and are also OK.  */\n+  while (CONVERT_EXPR_P (parm) || TREE_CODE (parm) == VIEW_CONVERT_EXPR)\n     parm = TREE_OPERAND (parm, 0);\n \n   if (arg == error_mark_node)"}, {"sha": "aa96de36a80fa13b385881df2015b57685694bc6", "filename": "gcc/testsuite/g++.dg/cpp2a/nontype-class24.C", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/951c6f3dd975d795adc409da1a1477b5229199ae/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fnontype-class24.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/951c6f3dd975d795adc409da1a1477b5229199ae/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fnontype-class24.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fnontype-class24.C?ref=951c6f3dd975d795adc409da1a1477b5229199ae", "patch": "@@ -0,0 +1,19 @@\n+// PR c++/92150\n+// { dg-do compile { target c++2a } }\n+\n+struct X {\n+  int value;\n+  // auto operator==(const X&) = default;\n+};\n+\n+template<typename T, X N>\n+struct b;\n+\n+template<typename T>\n+inline constexpr bool is_b = false;\n+\n+template<typename T, X N>\n+inline constexpr bool is_b<b<T, N>> = true;\n+\n+using my_b = b<int, X{1}>;\n+static_assert(is_b<my_b>);"}]}