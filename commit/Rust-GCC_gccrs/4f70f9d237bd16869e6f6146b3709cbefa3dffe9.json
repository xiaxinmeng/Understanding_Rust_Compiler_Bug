{"sha": "4f70f9d237bd16869e6f6146b3709cbefa3dffe9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGY3MGY5ZDIzN2JkMTY4NjllNmY2MTQ2YjM3MDljYmVmYTNkZmZlOQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2004-11-29T13:29:54Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2004-11-29T13:29:54Z"}, "message": "18654.cc: Use better names.\n\n2004-11-29  Paolo Carlini  <pcarlini@suse.de>\n\n        * testsuite/21_strings/basic_string/capacity/char/18654.cc: Use\n\tbetter names.\n        * testsuite/21_strings/basic_string/capacity/wchar_t/18654.cc: Same.\n\nFrom-SVN: r91469", "tree": {"sha": "51e1ba5520c82d0ff88e246cc4f7fa5fb9582f6c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/51e1ba5520c82d0ff88e246cc4f7fa5fb9582f6c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4f70f9d237bd16869e6f6146b3709cbefa3dffe9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f70f9d237bd16869e6f6146b3709cbefa3dffe9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f70f9d237bd16869e6f6146b3709cbefa3dffe9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f70f9d237bd16869e6f6146b3709cbefa3dffe9/comments", "author": null, "committer": null, "parents": [{"sha": "22bbc492b2e73d9132cd5bbfd6771f0d8e087895", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22bbc492b2e73d9132cd5bbfd6771f0d8e087895", "html_url": "https://github.com/Rust-GCC/gccrs/commit/22bbc492b2e73d9132cd5bbfd6771f0d8e087895"}], "stats": {"total": 20, "additions": 13, "deletions": 7}, "files": [{"sha": "95eae138627af40e781fd99d937eee7a5699482e", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f70f9d237bd16869e6f6146b3709cbefa3dffe9/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f70f9d237bd16869e6f6146b3709cbefa3dffe9/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=4f70f9d237bd16869e6f6146b3709cbefa3dffe9", "patch": "@@ -1,3 +1,9 @@\n+2004-11-29  Paolo Carlini  <pcarlini@suse.de>\n+\n+\t* testsuite/21_strings/basic_string/capacity/char/18654.cc: Use\n+        better names.\n+\t* testsuite/21_strings/basic_string/capacity/wchar_t/18654.cc: Same.\n+\n 2004-11-29  Paolo Carlini  <pcarlini@suse.de>\n \n \tPR libstdc++/18654"}, {"sha": "5194d818be343ada0d2d86ef2b7e53abe7e98b1d", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/capacity/char/18654.cc", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f70f9d237bd16869e6f6146b3709cbefa3dffe9/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcapacity%2Fchar%2F18654.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f70f9d237bd16869e6f6146b3709cbefa3dffe9/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcapacity%2Fchar%2F18654.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcapacity%2Fchar%2F18654.cc?ref=4f70f9d237bd16869e6f6146b3709cbefa3dffe9", "patch": "@@ -34,9 +34,9 @@ void test01()\n   // Our current implementation provides exact shrink-to-size\n   // and shrink-to-fit (in the future, maybe this will change\n   // for short strings).\n-  size_type min = 2 << 0;\n-  size_type max = 2 << 20;\n-  for (size_type i = min; i <= max; i *= 2)\n+  const size_type minsize = 2 << 0;\n+  const size_type maxsize = 2 << 20;\n+  for (size_type i = minsize; i <= maxsize; i *= 2)\n     {\n       string str(i, 'x');\n       str.reserve(3 * i);\n@@ -49,7 +49,7 @@ void test01()\n     }\n }\n \n-int main() \n+int main()\n {\n   test01();\n   return 0;"}, {"sha": "38623ebdebff6cc8c1e93d99e9b81acd91551e37", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/capacity/wchar_t/18654.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f70f9d237bd16869e6f6146b3709cbefa3dffe9/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcapacity%2Fwchar_t%2F18654.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f70f9d237bd16869e6f6146b3709cbefa3dffe9/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcapacity%2Fwchar_t%2F18654.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcapacity%2Fwchar_t%2F18654.cc?ref=4f70f9d237bd16869e6f6146b3709cbefa3dffe9", "patch": "@@ -34,9 +34,9 @@ void test01()\n   // Our current implementation provides exact shrink-to-size\n   // and shrink-to-fit (in the future, maybe this will change\n   // for short strings).\n-  size_type min = 2 << 0;\n-  size_type max = 2 << 20;\n-  for (size_type i = min; i <= max; i *= 2)\n+  const size_type minsize = 2 << 0;\n+  const size_type maxsize = 2 << 20;\n+  for (size_type i = minsize; i <= maxsize; i *= 2)\n     {\n       wstring str(i, L'x');\n       str.reserve(3 * i);"}]}