{"sha": "34639e68704cbaa4a66c710f9dd6ff830925e38b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzQ2MzllNjg3MDRjYmFhNGE2NmM3MTBmOWRkNmZmODMwOTI1ZTM4Yg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-06-14T12:11:48Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-06-14T12:11:48Z"}, "message": "[multiple changes]\n\n2010-06-14  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sinfo.ads, sinfo,adb (Withed_Body): New attribute of a with_clause.\n\tIndicates that there is an instantiation in the current unit that\n\tloaded the body of the unit denoted by the with_clause.\n\t* sem_ch12.adb (Mark_Context): When instanting a generic body, check\n\twhether a with_clause in the current context denotes the unit that\n\tholds the generic declaration, and mark the with_clause accordingly.\n\t(Instantiate_Package_Body): call Mark_Context.\n\t* sem.adb (Process_Bodies_In_Context): Use Withed_Body to determine\n\twhether a given body should be traversed before the spec of the main\n\tunit.\n\n2010-06-14  Ed Falis  <falis@adacore.com>\n\n\t* sysdep.c: Fix 653 build against vThreads headers\n\nFrom-SVN: r160725", "tree": {"sha": "3f390a5f217a22e1d7ce5ad0029abc7b53481d40", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3f390a5f217a22e1d7ce5ad0029abc7b53481d40"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/34639e68704cbaa4a66c710f9dd6ff830925e38b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34639e68704cbaa4a66c710f9dd6ff830925e38b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/34639e68704cbaa4a66c710f9dd6ff830925e38b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34639e68704cbaa4a66c710f9dd6ff830925e38b/comments", "author": null, "committer": null, "parents": [{"sha": "165d9b9da492ae59ef3578b64284c86f03b1bd48", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/165d9b9da492ae59ef3578b64284c86f03b1bd48", "html_url": "https://github.com/Rust-GCC/gccrs/commit/165d9b9da492ae59ef3578b64284c86f03b1bd48"}], "stats": {"total": 87, "additions": 85, "deletions": 2}, "files": [{"sha": "39d28c8f9d13179a4074f138c6fd57874c7e4b35", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34639e68704cbaa4a66c710f9dd6ff830925e38b/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34639e68704cbaa4a66c710f9dd6ff830925e38b/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=34639e68704cbaa4a66c710f9dd6ff830925e38b", "patch": "@@ -1,3 +1,20 @@\n+2010-06-14  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sinfo.ads, sinfo.adb (Withed_Body): New attribute of a with_clause.\n+\tIndicates that there is an instantiation in the current unit that\n+\tloaded the body of the unit denoted by the with_clause.\n+\t* sem_ch12.adb (Mark_Context): When instanting a generic body, check\n+\twhether a with_clause in the current context denotes the unit that\n+\tholds the generic declaration, and mark the with_clause accordingly.\n+\t(Instantiate_Package_Body): call Mark_Context.\n+\t* sem.adb (Process_Bodies_In_Context): Use Withed_Body to determine\n+\twhether a given body should be traversed before the spec of the main\n+\tunit.\n+\n+2010-06-14  Ed Falis  <falis@adacore.com>\n+\n+\t* sysdep.c: Fix 653 build against vThreads headers\n+\n 2010-06-14  Robert Dewar  <dewar@adacore.com>\n \n \t* sinfo.ads: Minor reformatting."}, {"sha": "2396747c18e10d4fd9af54483c247218f61baa6a", "filename": "gcc/ada/sem.adb", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34639e68704cbaa4a66c710f9dd6ff830925e38b/gcc%2Fada%2Fsem.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34639e68704cbaa4a66c710f9dd6ff830925e38b/gcc%2Fada%2Fsem.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem.adb?ref=34639e68704cbaa4a66c710f9dd6ff830925e38b", "patch": "@@ -1803,9 +1803,15 @@ package body Sem is\n                Spec := Library_Unit (Clause);\n                Body_CU := Library_Unit (Spec);\n \n+               --  If we are processing the spec of the main unit, load bodies\n+               --  only if the with_clause indicates that it forced the loading\n+               --  of the body for a generic instantiation.\n+\n                if Present (Body_CU)\n                  and then Body_CU /= Cunit (Main_Unit)\n                  and then Nkind (Unit (Body_CU)) /= N_Subprogram_Body\n+                 and then (Nkind (Unit (Comp)) /= N_Package_Declaration\n+                    or else Present (Withed_Body (Clause)))\n                then\n                   Body_U := Get_Cunit_Unit_Number (Body_CU);\n "}, {"sha": "d3d0b7b12e6615163dfde208864c57dfd243f114", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34639e68704cbaa4a66c710f9dd6ff830925e38b/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34639e68704cbaa4a66c710f9dd6ff830925e38b/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=34639e68704cbaa4a66c710f9dd6ff830925e38b", "patch": "@@ -475,6 +475,12 @@ package body Sem_Ch12 is\n    --  of generic formals of a generic package declared with a box or with\n    --  partial parametrization.\n \n+   procedure Mark_Context (Inst_Decl : Node_Id; Gen_Decl : Node_Id);\n+   --  If the generic unit comes from a different unit, indicate that the\n+   --  unit that contains the instance depends on the body that contains\n+   --  the generic body. Used to determine a more precise dependency graph\n+   --  for use by CodePeer.\n+\n    procedure Set_Instance_Env\n      (Gen_Unit : Entity_Id;\n       Act_Unit : Entity_Id);\n@@ -8590,6 +8596,7 @@ package body Sem_Ch12 is\n            (Inst_Node, Specification (Gen_Decl), Body_Optional);\n          Gen_Body_Id := Corresponding_Body (Gen_Decl);\n       end if;\n+      Mark_Context (Act_Decl, Gen_Decl);\n \n       --  Establish global variable for sloc adjustment and for error recovery\n \n@@ -10382,6 +10389,28 @@ package body Sem_Ch12 is\n       end if;\n    end Is_Generic_Formal;\n \n+   ------------------\n+   -- Mark_Context --\n+   ------------------\n+\n+   procedure Mark_Context (Inst_Decl : Node_Id; Gen_Decl : Node_Id) is\n+      Inst_CU : constant Unit_Number_Type := Get_Source_Unit (Inst_Decl);\n+      Gen_CU  : constant Unit_Number_Type := Get_Source_Unit (Gen_Decl);\n+      Clause  : Node_Id;\n+\n+   begin\n+      Clause := First (Context_Items (Cunit (Inst_CU)));\n+      while Present (Clause) loop\n+         if Nkind (Clause) = N_With_Clause\n+           and then  Library_Unit (Clause) = Cunit (Gen_CU)\n+         then\n+            Set_Withed_Body (Clause, Cunit (Gen_CU));\n+         end if;\n+\n+         Next (Clause);\n+      end loop;\n+   end Mark_Context;\n+\n    ---------------------\n    -- Is_In_Main_Unit --\n    ---------------------"}, {"sha": "5a431cd04f66d685c2df9416526126ebd01780fb", "filename": "gcc/ada/sinfo.adb", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34639e68704cbaa4a66c710f9dd6ff830925e38b/gcc%2Fada%2Fsinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34639e68704cbaa4a66c710f9dd6ff830925e38b/gcc%2Fada%2Fsinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.adb?ref=34639e68704cbaa4a66c710f9dd6ff830925e38b", "patch": "@@ -2931,6 +2931,14 @@ package body Sinfo is\n       return Flag13 (N);\n    end Was_Originally_Stub;\n \n+   function Withed_Body\n+      (N : Node_Id) return Node_Id is\n+   begin\n+      pragma Assert (False\n+        or else NT (N).Nkind = N_With_Clause);\n+      return Node1 (N);\n+   end Withed_Body;\n+\n    function Zero_Cost_Handling\n       (N : Node_Id) return Boolean is\n    begin\n@@ -5809,6 +5817,14 @@ package body Sinfo is\n       Set_Flag13 (N, Val);\n    end Set_Was_Originally_Stub;\n \n+   procedure Set_Withed_Body\n+     (N : Node_Id; Val : Node_Id) is\n+   begin\n+      pragma Assert (False\n+        or else NT (N).Nkind = N_With_Clause);\n+      Set_Node1 (N, Val);\n+   end Set_Withed_Body;\n+\n    procedure Set_Zero_Cost_Handling\n       (N : Node_Id; Val : Boolean := True) is\n    begin"}, {"sha": "a5b5a3e69b26995a950b2789d7303e6dfee323e1", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34639e68704cbaa4a66c710f9dd6ff830925e38b/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34639e68704cbaa4a66c710f9dd6ff830925e38b/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=34639e68704cbaa4a66c710f9dd6ff830925e38b", "patch": "@@ -1723,6 +1723,12 @@ package Sinfo is\n    --    Original_Node here because of the case of nested instantiations where\n    --    the substituted node can be copied.\n \n+   --  Withed_Body (Node1-Sem)\n+   --    Present in N_With_Clause nodes. Set if the unit in whose context\n+   --    the with_clause appears instantiates a generic contained in the\n+   --    library unit of the with_clause and as a result loads its body.\n+   --    Used for a more precise unit traversal for CodePeer.\n+\n    --  Zero_Cost_Handling (Flag5-Sem)\n    --    This flag is set in all handled sequence of statement and exception\n    --    handler nodes if exceptions are to be handled using the zero-cost\n@@ -5530,6 +5536,7 @@ package Sinfo is\n \n       --  N_With_Clause\n       --  Sloc points to first token of library unit name\n+      --  Withed_Body (Node1-Sem)\n       --  Name (Node2)\n       --  Next_Implicit_With (Node3-Sem)\n       --  Library_Unit (Node4-Sem)\n@@ -8522,6 +8529,9 @@ package Sinfo is\n    function Was_Originally_Stub\n      (N : Node_Id) return Boolean;    -- Flag13\n \n+   function Withed_Body\n+     (N : Node_Id) return Node_Id;    -- Node1\n+\n    function Zero_Cost_Handling\n      (N : Node_Id) return Boolean;    -- Flag5\n \n@@ -9440,6 +9450,9 @@ package Sinfo is\n    procedure Set_Was_Originally_Stub\n      (N : Node_Id; Val : Boolean := True);    -- Flag13\n \n+   procedure Set_Withed_Body\n+     (N : Node_Id; Val : Node_Id);            -- Node1\n+\n    procedure Set_Zero_Cost_Handling\n      (N : Node_Id; Val : Boolean := True);    -- Flag5\n \n@@ -11441,6 +11454,7 @@ package Sinfo is\n    pragma Inline (Variants);\n    pragma Inline (Visible_Declarations);\n    pragma Inline (Was_Originally_Stub);\n+   pragma Inline (Withed_Body);\n    pragma Inline (Zero_Cost_Handling);\n \n    pragma Inline (Set_ABE_Is_Certain);\n@@ -11743,6 +11757,7 @@ package Sinfo is\n    pragma Inline (Set_Variants);\n    pragma Inline (Set_Visible_Declarations);\n    pragma Inline (Set_Was_Originally_Stub);\n+   pragma Inline (Set_Withed_Body);\n    pragma Inline (Set_Zero_Cost_Handling);\n \n    N_Simple_Return_Statement : constant Node_Kind := N_Return_Statement;"}, {"sha": "6dcc66fa790f2e0abce4d4bd404e4f308d8906be", "filename": "gcc/ada/sysdep.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34639e68704cbaa4a66c710f9dd6ff830925e38b/gcc%2Fada%2Fsysdep.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34639e68704cbaa4a66c710f9dd6ff830925e38b/gcc%2Fada%2Fsysdep.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsysdep.c?ref=34639e68704cbaa4a66c710f9dd6ff830925e38b", "patch": "@@ -34,7 +34,7 @@\n \n #ifdef __vxworks\n #include \"ioLib.h\"\n-#if ! defined (__VXWORKSMILS__)\n+#if ! defined (VTHREADS)\n #include \"dosFsLib.h\"\n #endif\n #if ! defined (__RTP__) && (! defined (VTHREADS) || defined (__VXWORKSMILS__))\n@@ -987,7 +987,7 @@ __gnat_is_file_not_found_error (int errno_val) {\n       /* In the case of VxWorks, we also have to take into account various\n        * filesystem-specific variants of this error.\n        */\n-#if ! defined (__VXWORKSMILS__)\n+#if ! defined (VTHREADS)\n       case S_dosFsLib_FILE_NOT_FOUND:\n #endif\n #if ! defined (__RTP__) && (! defined (VTHREADS) || defined (__VXWORKSMILS__))"}]}