{"sha": "dd2ce397d384339105cfc8f122e52b3c89778d05", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGQyY2UzOTdkMzg0MzM5MTA1Y2ZjOGYxMjJlNTJiM2M4OTc3OGQwNQ==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2018-01-02T17:02:14Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2018-01-02T17:02:14Z"}, "message": "re PR c++/83644 (ICE using type alias from recursive decltype in noexcept or return type)\n\n\tPR c++/83644\n\t* g++.dg/cpp1z/pr83644.C: New test.\n\nFrom-SVN: r256082", "tree": {"sha": "7a005bcf04ec7572b3126193157819535b2d2689", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7a005bcf04ec7572b3126193157819535b2d2689"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dd2ce397d384339105cfc8f122e52b3c89778d05", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd2ce397d384339105cfc8f122e52b3c89778d05", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd2ce397d384339105cfc8f122e52b3c89778d05", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd2ce397d384339105cfc8f122e52b3c89778d05/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e698996f55df57a5c01bb92b2177acd99027c1bd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e698996f55df57a5c01bb92b2177acd99027c1bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e698996f55df57a5c01bb92b2177acd99027c1bd"}], "stats": {"total": 15, "additions": 15, "deletions": 0}, "files": [{"sha": "b8dbee01f92808d7846177e914bebe20147baa62", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd2ce397d384339105cfc8f122e52b3c89778d05/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd2ce397d384339105cfc8f122e52b3c89778d05/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=dd2ce397d384339105cfc8f122e52b3c89778d05", "patch": "@@ -3,6 +3,9 @@\n \tPR c++/81860\n \t* g++.dg/cpp0x/inh-ctor30.C: New test.\n \n+\tPR c++/83644\n+\t* g++.dg/cpp1z/pr83644.C: New test.\n+\n 2018-01-01  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/83076"}, {"sha": "493d8c7cbe463629144523f65db87c37c6325cb5", "filename": "gcc/testsuite/g++.dg/cpp1z/pr83644.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd2ce397d384339105cfc8f122e52b3c89778d05/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fpr83644.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd2ce397d384339105cfc8f122e52b3c89778d05/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fpr83644.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fpr83644.C?ref=dd2ce397d384339105cfc8f122e52b3c89778d05", "patch": "@@ -0,0 +1,12 @@\n+// PR c++/83644\n+// { dg-do compile }\n+// { dg-options -std=c++17 }\n+\n+namespace std {\n+template <typename> bool is_invocable_v;\n+}\n+template <typename F> auto compose(F) {\n+  [](auto... objs) noexcept(std::is_invocable_v<decltype(objs)...>){};\n+}\n+\n+auto f() { compose(3); }"}]}