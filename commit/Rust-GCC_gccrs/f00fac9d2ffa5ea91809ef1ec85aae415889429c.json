{"sha": "f00fac9d2ffa5ea91809ef1ec85aae415889429c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjAwZmFjOWQyZmZhNWVhOTE4MDllZjFlYzg1YWFlNDE1ODg5NDI5Yw==", "commit": {"author": {"name": "Anthony Green", "email": "green@redhat.com", "date": "2005-04-22T19:02:41Z"}, "committer": {"name": "Anthony Green", "email": "green@gcc.gnu.org", "date": "2005-04-22T19:02:41Z"}, "message": "jni.cc (natrehash): Don't bother clearing memory again.\n\n2005-04-22  Anthony Green  <green@redhat.com>\n\n        * jni.cc (natrehash): Don't bother clearing memory again.\n        * interpret.cc (do_allocate_static_fields): Ditto.\n        * java/lang/natString.cc (rehash): Ditto.\n\nFrom-SVN: r98583", "tree": {"sha": "df2081a26cef9b6f28e32a75d53ca8b43c1631b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/df2081a26cef9b6f28e32a75d53ca8b43c1631b5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f00fac9d2ffa5ea91809ef1ec85aae415889429c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f00fac9d2ffa5ea91809ef1ec85aae415889429c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f00fac9d2ffa5ea91809ef1ec85aae415889429c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f00fac9d2ffa5ea91809ef1ec85aae415889429c/comments", "author": {"login": "atgreen", "id": 89993, "node_id": "MDQ6VXNlcjg5OTkz", "avatar_url": "https://avatars.githubusercontent.com/u/89993?v=4", "gravatar_id": "", "url": "https://api.github.com/users/atgreen", "html_url": "https://github.com/atgreen", "followers_url": "https://api.github.com/users/atgreen/followers", "following_url": "https://api.github.com/users/atgreen/following{/other_user}", "gists_url": "https://api.github.com/users/atgreen/gists{/gist_id}", "starred_url": "https://api.github.com/users/atgreen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/atgreen/subscriptions", "organizations_url": "https://api.github.com/users/atgreen/orgs", "repos_url": "https://api.github.com/users/atgreen/repos", "events_url": "https://api.github.com/users/atgreen/events{/privacy}", "received_events_url": "https://api.github.com/users/atgreen/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9f12b095b1916f35ed89eaffdb5b0ac0e4074e8d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f12b095b1916f35ed89eaffdb5b0ac0e4074e8d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9f12b095b1916f35ed89eaffdb5b0ac0e4074e8d"}], "stats": {"total": 11, "additions": 6, "deletions": 5}, "files": [{"sha": "04e789a472b2664f9df70a51786432eae6178ccb", "filename": "libjava/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f00fac9d2ffa5ea91809ef1ec85aae415889429c/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f00fac9d2ffa5ea91809ef1ec85aae415889429c/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=f00fac9d2ffa5ea91809ef1ec85aae415889429c", "patch": "@@ -1,3 +1,9 @@\n+2005-04-22  Anthony Green  <green@redhat.com>\n+\n+\t* jni.cc (natrehash): Don't bother clearing memory again.\n+\t* interpret.cc (do_allocate_static_fields): Ditto.\n+\t* java/lang/natString.cc (rehash): Ditto.\n+\n 2005-04-22  Roman Kennke  <roman@kennke.org>\n \n \t* javax/swing/plaf/basic/BasicLookAndFeel.java"}, {"sha": "e7d8992f12c410abbcb68b98d5fe480bcaa9e787", "filename": "libjava/interpret.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f00fac9d2ffa5ea91809ef1ec85aae415889429c/libjava%2Finterpret.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f00fac9d2ffa5ea91809ef1ec85aae415889429c/libjava%2Finterpret.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Finterpret.cc?ref=f00fac9d2ffa5ea91809ef1ec85aae415889429c", "patch": "@@ -3751,7 +3751,6 @@ _Jv_InterpreterEngine::do_allocate_static_fields (jclass klass,\n   _Jv_InterpClass *iclass = (_Jv_InterpClass *) klass->aux_info;\n \n   char *static_data = (char *) _Jv_AllocBytes (static_size);\n-  memset (static_data, 0, static_size);\n \n   for (int i = 0; i < klass->field_count; i++)\n     {"}, {"sha": "6e8febcbcf678e835a6049a03674caacb5e7143f", "filename": "libjava/java/lang/natString.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f00fac9d2ffa5ea91809ef1ec85aae415889429c/libjava%2Fjava%2Flang%2FnatString.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f00fac9d2ffa5ea91809ef1ec85aae415889429c/libjava%2Fjava%2Flang%2FnatString.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FnatString.cc?ref=f00fac9d2ffa5ea91809ef1ec85aae415889429c", "patch": "@@ -125,15 +125,13 @@ rehash ()\n     {\n       strhash_size = 1024;\n       strhash = (jstring *) _Jv_AllocBytes (strhash_size * sizeof (jstring));\n-      memset (strhash, 0, strhash_size * sizeof (jstring));\n     }\n   else\n     {\n       int i = strhash_size;\n       jstring* ptr = strhash + i;\n       int nsize = strhash_size * 2;\n       jstring *next = (jstring *) _Jv_AllocBytes (nsize * sizeof (jstring));\n-      memset (next, 0, nsize * sizeof (jstring));\n \n       while (--i >= 0)\n \t{"}, {"sha": "cf4d04750444394241643c257943f4a3bdf63a8c", "filename": "libjava/jni.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f00fac9d2ffa5ea91809ef1ec85aae415889429c/libjava%2Fjni.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f00fac9d2ffa5ea91809ef1ec85aae415889429c/libjava%2Fjni.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni.cc?ref=f00fac9d2ffa5ea91809ef1ec85aae415889429c", "patch": "@@ -1847,7 +1847,6 @@ natrehash ()\n       nathash =\n \t(JNINativeMethod *) _Jv_AllocBytes (nathash_size\n \t\t\t\t\t    * sizeof (JNINativeMethod));\n-      memset (nathash, 0, nathash_size * sizeof (JNINativeMethod));\n     }\n   else\n     {\n@@ -1857,7 +1856,6 @@ natrehash ()\n       nathash =\n \t(JNINativeMethod *) _Jv_AllocBytes (nathash_size\n \t\t\t\t\t    * sizeof (JNINativeMethod));\n-      memset (nathash, 0, nathash_size * sizeof (JNINativeMethod));\n \n       for (int i = 0; i < savesize; ++i)\n \t{"}]}