{"sha": "7902928918b076991f98ba43678cc287abb5f316", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzkwMjkyODkxOGIwNzY5OTFmOThiYTQzNjc4Y2MyODdhYmI1ZjMxNg==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2013-10-01T20:52:49Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2013-10-01T20:52:49Z"}, "message": "re PR fortran/55469 (memory leak on read with istat.ne.0)\n\n2013-10-01  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/55469\n        * io/list_read (parse_repeat, read_integer, read_character,\n        parse_real, read_real, check_type, list_formatted_read_scalar,\n        finish_list_read): Call list_free.\n\nFrom-SVN: r203086", "tree": {"sha": "4f75142ff42c8055827745787348940a93985d35", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4f75142ff42c8055827745787348940a93985d35"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7902928918b076991f98ba43678cc287abb5f316", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7902928918b076991f98ba43678cc287abb5f316", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7902928918b076991f98ba43678cc287abb5f316", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7902928918b076991f98ba43678cc287abb5f316/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f55d4a20747f0a2f6d721e0f19340607f7bb06dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f55d4a20747f0a2f6d721e0f19340607f7bb06dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f55d4a20747f0a2f6d721e0f19340607f7bb06dc"}], "stats": {"total": 39, "additions": 35, "deletions": 4}, "files": [{"sha": "ef76f9194eafb95acc03333825f7ea5b805fa0c5", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7902928918b076991f98ba43678cc287abb5f316/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7902928918b076991f98ba43678cc287abb5f316/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=7902928918b076991f98ba43678cc287abb5f316", "patch": "@@ -1,3 +1,10 @@\n+2013-10-01  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/55469\n+\t* io/list_read (parse_repeat, read_integer, read_character,\n+\tparse_real, read_real, check_type, list_formatted_read_scalar,\n+\tfinish_list_read): Call list_free.\n+\n 2013-09-20  Alan Modra  <amodra@gmail.com>\n \n \t* configure: Regenerate."}, {"sha": "d38a4a8d0b40bc17b3e29f4ec4d4946abe4fe9d5", "filename": "libgfortran/io/list_read.c", "status": "modified", "additions": 28, "deletions": 4, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7902928918b076991f98ba43678cc287abb5f316/libgfortran%2Fio%2Flist_read.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7902928918b076991f98ba43678cc287abb5f316/libgfortran%2Fio%2Flist_read.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Flist_read.c?ref=7902928918b076991f98ba43678cc287abb5f316", "patch": "@@ -615,6 +615,7 @@ parse_repeat (st_parameter_dt *dtp)\n   free_saved (dtp);\n   if (c == EOF)\n     {\n+      free_line (dtp);\n       hit_eof (dtp);\n       return 1;\n     }\n@@ -904,11 +905,14 @@ read_integer (st_parameter_dt *dtp, int length)\n   free_saved (dtp);  \n   if (c == EOF)\n     {\n+      free_line (dtp);\n       hit_eof (dtp);\n       return;\n     }\n   else if (c != '\\n')\n     eat_line (dtp);\n+\n+  free_line (dtp);\n   snprintf (message, MSGLEN, \"Bad integer for item %d in list input\",\n \t      dtp->u.p.item_count);\n   generate_error (&dtp->common, LIBERROR_READ_VALUE, message);\n@@ -1078,7 +1082,6 @@ read_character (st_parameter_dt *dtp, int length __attribute__ ((unused)))\n       unget_char (dtp, c);\n       eat_separator (dtp);\n       dtp->u.p.saved_type = BT_CHARACTER;\n-      free_line (dtp);\n     }\n   else \n     {\n@@ -1087,10 +1090,12 @@ read_character (st_parameter_dt *dtp, int length __attribute__ ((unused)))\n \t\t  dtp->u.p.item_count);\n       generate_error (&dtp->common, LIBERROR_READ_VALUE, message);\n     }\n+  free_line (dtp);\n   return;\n \n  eof:\n   free_saved (dtp);\n+  free_line (dtp);\n   hit_eof (dtp);\n }\n \n@@ -1285,11 +1290,14 @@ parse_real (st_parameter_dt *dtp, void *buffer, int length)\n   free_saved (dtp);\n   if (c == EOF)\n     {\n+      free_line (dtp);\n       hit_eof (dtp);\n       return 1;\n     }\n   else if (c != '\\n')\n     eat_line (dtp);\n+\n+  free_line (dtp);\n   snprintf (message, MSGLEN, \"Bad floating point number for item %d\",\n \t      dtp->u.p.item_count);\n   generate_error (&dtp->common, LIBERROR_READ_VALUE, message);\n@@ -1390,11 +1398,14 @@ read_complex (st_parameter_dt *dtp, void * dest, int kind, size_t size)\n   free_saved (dtp);\n   if (c == EOF)\n     {\n+      free_line (dtp);\n       hit_eof (dtp);\n       return;\n     }\n   else if (c != '\\n')   \n     eat_line (dtp);\n+\n+  free_line (dtp);\n   snprintf (message, MSGLEN, \"Bad complex value in item %d of list input\",\n \t      dtp->u.p.item_count);\n   generate_error (&dtp->common, LIBERROR_READ_VALUE, message);\n@@ -1629,7 +1640,10 @@ read_real (st_parameter_dt *dtp, void * dest, int length)\n   eat_separator (dtp);\n   push_char (dtp, '\\0');\n   if (convert_real (dtp, dest, dtp->u.p.saved_string, length))\n-    return;\n+    {\n+      free_saved (dtp);\n+      return;\n+    }\n \n   free_saved (dtp);\n   dtp->u.p.saved_type = BT_REAL;\n@@ -1767,12 +1781,14 @@ read_real (st_parameter_dt *dtp, void * dest, int length)\n   free_saved (dtp);\n   if (c == EOF)\n     {\n+      free_line (dtp);\n       hit_eof (dtp);\n       return;\n     }\n   else if (c != '\\n')\n     eat_line (dtp);\n \n+  free_line (dtp);\n   snprintf (message, MSGLEN, \"Bad real number in item %d of list input\",\n \t      dtp->u.p.item_count);\n   generate_error (&dtp->common, LIBERROR_READ_VALUE, message);\n@@ -1789,6 +1805,7 @@ check_type (st_parameter_dt *dtp, bt type, int kind)\n \n   if (dtp->u.p.saved_type != BT_UNKNOWN && dtp->u.p.saved_type != type)\n     {\n+      free_line (dtp);\n       snprintf (message, MSGLEN, \"Read type %s where %s was expected for item %d\",\n \t\t  type_name (dtp->u.p.saved_type), type_name (type),\n \t\t  dtp->u.p.item_count);\n@@ -1803,6 +1820,7 @@ check_type (st_parameter_dt *dtp, bt type, int kind)\n   if ((type != BT_COMPLEX && dtp->u.p.saved_length != kind)\n       || (type == BT_COMPLEX && dtp->u.p.saved_length != kind*2))\n     {\n+      free_line (dtp);\n       snprintf (message, MSGLEN,\n \t\t  \"Read kind %d %s where kind %d is required for item %d\",\n \t\t  type == BT_COMPLEX ? dtp->u.p.saved_length / 2\n@@ -1978,7 +1996,10 @@ list_formatted_read_scalar (st_parameter_dt *dtp, bt type, void *p,\n \n cleanup:\n   if (err == LIBERROR_END)\n-    hit_eof (dtp);\n+    {\n+      free_line (dtp);\n+      hit_eof (dtp);\n+    }\n   return err;\n }\n \n@@ -2026,7 +2047,10 @@ finish_list_read (st_parameter_dt *dtp)\n \n   err = eat_line (dtp);\n   if (err == LIBERROR_END)\n-    hit_eof (dtp);\n+    {\n+      free_line (dtp);\n+      hit_eof (dtp);\n+    }\n }\n \n /*\t\t\tNAMELIST INPUT"}]}