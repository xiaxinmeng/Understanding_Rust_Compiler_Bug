{"sha": "151b423a82f4bf15e3225833028f5258ea254cb9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTUxYjQyM2E4MmY0YmYxNWUzMjI1ODMzMDI4ZjUyNThlYTI1NGNiOQ==", "commit": {"author": {"name": "Indu Bhagat", "email": "indu.bhagat@oracle.com", "date": "2021-07-06T20:53:58Z"}, "committer": {"name": "Indu Bhagat", "email": "indu.bhagat@oracle.com", "date": "2021-07-06T21:07:39Z"}, "message": "dwarf2ctf: the unit of sou field location is bits [PR101283]\n\nIf the value of the DW_AT_data_member_location attribute is constant, the\nassociated unit is bytes. This patch amends incorrect behaviour which was being\nexercised with -gdwarf-2. This caused some of the failures as noted in PR\ndebug/101283 (specifically the BTF tests involving btm_offset).\n\nThe testcase ctf-struct-array-2.c was erroneously checking for the value of\nctm_offset in number of bytes.\n\nThe patch fixes the calculation of the field location value for a struct member\nin dwarf2ctf and adjusts the testcase. This patch also fixes some of the\nfailing tests as noted in PR debug/101283.\n\n2021-07-06  Indu Bhagat  <indu.bhagat@oracle.com>\n\ngcc/ChangeLog:\n\n\tPR debug/101283\n\t* dwarf2ctf.c (ctf_get_AT_data_member_location): Multiply by 8 to get\n\tnumber of bits.\n\ngcc/testsuite/ChangeLog:\n\n\tPR debug/101283\n\t* gcc.dg/debug/ctf/ctf-struct-array-2.c: Adjust the value in the testcase.", "tree": {"sha": "686a85ce5e8e4980a14312076ac1b1e1a4cf7ef2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/686a85ce5e8e4980a14312076ac1b1e1a4cf7ef2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/151b423a82f4bf15e3225833028f5258ea254cb9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/151b423a82f4bf15e3225833028f5258ea254cb9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/151b423a82f4bf15e3225833028f5258ea254cb9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/151b423a82f4bf15e3225833028f5258ea254cb9/comments", "author": {"login": "ibhagatgnu", "id": 51812649, "node_id": "MDQ6VXNlcjUxODEyNjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/51812649?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibhagatgnu", "html_url": "https://github.com/ibhagatgnu", "followers_url": "https://api.github.com/users/ibhagatgnu/followers", "following_url": "https://api.github.com/users/ibhagatgnu/following{/other_user}", "gists_url": "https://api.github.com/users/ibhagatgnu/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibhagatgnu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibhagatgnu/subscriptions", "organizations_url": "https://api.github.com/users/ibhagatgnu/orgs", "repos_url": "https://api.github.com/users/ibhagatgnu/repos", "events_url": "https://api.github.com/users/ibhagatgnu/events{/privacy}", "received_events_url": "https://api.github.com/users/ibhagatgnu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ibhagatgnu", "id": 51812649, "node_id": "MDQ6VXNlcjUxODEyNjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/51812649?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibhagatgnu", "html_url": "https://github.com/ibhagatgnu", "followers_url": "https://api.github.com/users/ibhagatgnu/followers", "following_url": "https://api.github.com/users/ibhagatgnu/following{/other_user}", "gists_url": "https://api.github.com/users/ibhagatgnu/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibhagatgnu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibhagatgnu/subscriptions", "organizations_url": "https://api.github.com/users/ibhagatgnu/orgs", "repos_url": "https://api.github.com/users/ibhagatgnu/repos", "events_url": "https://api.github.com/users/ibhagatgnu/events{/privacy}", "received_events_url": "https://api.github.com/users/ibhagatgnu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4f6e181181a48c341e524653cae0885fd170131e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f6e181181a48c341e524653cae0885fd170131e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f6e181181a48c341e524653cae0885fd170131e"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "5e8a72585830b00466b53ba1c0386a584db74347", "filename": "gcc/dwarf2ctf.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/151b423a82f4bf15e3225833028f5258ea254cb9/gcc%2Fdwarf2ctf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/151b423a82f4bf15e3225833028f5258ea254cb9/gcc%2Fdwarf2ctf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2ctf.c?ref=151b423a82f4bf15e3225833028f5258ea254cb9", "patch": "@@ -100,13 +100,13 @@ ctf_get_AT_data_member_location (dw_die_ref die)\n \t  gcc_assert (!descr->dw_loc_oprnd2.v.val_unsigned);\n \t  gcc_assert (descr->dw_loc_oprnd2.val_class\n \t\t      == dw_val_class_unsigned_const);\n-\t  field_location = descr->dw_loc_oprnd1.v.val_unsigned;\n+\t  field_location = descr->dw_loc_oprnd1.v.val_unsigned * 8;\n \t}\n       else\n \t{\n \t  attr = get_AT (die, DW_AT_data_member_location);\n \t  if (attr && AT_class (attr) == dw_val_class_const)\n-\t    field_location = AT_int (attr);\n+\t    field_location = AT_int (attr) * 8;\n \t  else\n \t    field_location = (get_AT_unsigned (die,\n \t\t\t\t\t   DW_AT_data_member_location)"}, {"sha": "37094b5d4202006db16c9dfb5e5caaa30439d0c8", "filename": "gcc/testsuite/gcc.dg/debug/ctf/ctf-struct-array-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/151b423a82f4bf15e3225833028f5258ea254cb9/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug%2Fctf%2Fctf-struct-array-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/151b423a82f4bf15e3225833028f5258ea254cb9/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug%2Fctf%2Fctf-struct-array-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug%2Fctf%2Fctf-struct-array-2.c?ref=151b423a82f4bf15e3225833028f5258ea254cb9", "patch": "@@ -10,6 +10,6 @@\n /* { dg-final { scan-assembler-times \"0x12000000\\[\\t \\]+\\[^\\n\\]*ctt_info\" 1 } } */\n /* { dg-final { scan-assembler-times \"\\[\\t \\]0x4\\[\\t \\]+\\[^\\n\\]*cta_nelems\" 1 } } */\n /* { dg-final { scan-assembler-times \"\\[\\t \\]0\\[\\t \\]+\\[^\\n\\]*ctm_offset\" 1 } } */\n-/* { dg-final { scan-assembler-times \"\\[\\t \\]0x4\\[\\t \\]+\\[^\\n\\]*ctm_offset\" 1 } } */\n+/* { dg-final { scan-assembler-times \"\\[\\t \\]0x20\\[\\t \\]+\\[^\\n\\]*ctm_offset\" 1 } } */\n \n static struct ranges {int from, to;} lim_regs[] = {{ 16, 7}, { 16, 6}, { 20, 7},{ 20, 6}};"}]}