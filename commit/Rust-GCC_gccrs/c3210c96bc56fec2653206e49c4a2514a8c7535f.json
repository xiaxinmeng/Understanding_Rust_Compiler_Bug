{"sha": "c3210c96bc56fec2653206e49c4a2514a8c7535f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzMyMTBjOTZiYzU2ZmVjMjY1MzIwNmU0OWM0YTI1MTRhOGM3NTM1Zg==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2018-11-05T07:33:30Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2018-11-05T07:33:30Z"}, "message": "Verify that last argument of __builtin_expect_with_probability is a real cst (PR c/87811).\n\n2018-11-05  Martin Liska  <mliska@suse.cz>\n\n\tPR c/87811\n\t* predict.c (expr_expected_value_1): Verify\n\tthat last argument is a real constants and emit\n\terror.\n2018-11-05  Martin Liska  <mliska@suse.cz>\n\n\tPR c/87811\n\t* gcc.dg/pr87811.c: New test.\n\t* gcc.dg/pr87811-2.c: Likewise.\n\t* gcc.dg/pr87811-3.c: Likewise.\n2018-11-05  Martin Liska  <mliska@suse.cz>\n\n\tPR c/87811\n\t* doc/extend.texi: Update constrain about the last argument\n\tof __builtin_expect_with_probability.\n\nFrom-SVN: r265785", "tree": {"sha": "cb481eda21cffb659bf7625a625ed074a6a40273", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cb481eda21cffb659bf7625a625ed074a6a40273"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c3210c96bc56fec2653206e49c4a2514a8c7535f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3210c96bc56fec2653206e49c4a2514a8c7535f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c3210c96bc56fec2653206e49c4a2514a8c7535f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3210c96bc56fec2653206e49c4a2514a8c7535f/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e53f77c666d6806c2e8c288ca1affa1497453e57", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e53f77c666d6806c2e8c288ca1affa1497453e57", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e53f77c666d6806c2e8c288ca1affa1497453e57"}], "stats": {"total": 72, "additions": 71, "deletions": 1}, "files": [{"sha": "b163e69da891583d5ea1af3c1f412739286fcd49", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3210c96bc56fec2653206e49c4a2514a8c7535f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3210c96bc56fec2653206e49c4a2514a8c7535f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c3210c96bc56fec2653206e49c4a2514a8c7535f", "patch": "@@ -1,3 +1,16 @@\n+2018-11-05  Martin Liska  <mliska@suse.cz>\n+\n+\tPR c/87811\n+\t* doc/extend.texi: Update constrain about the last argument\n+\tof __builtin_expect_with_probability.\n+\n+2018-11-05  Martin Liska  <mliska@suse.cz>\n+\n+\tPR c/87811\n+\t* predict.c (expr_expected_value_1): Verify\n+\tthat last argument is a real constants and emit\n+\terror.\n+\n 2018-11-05  Martin Liska  <mliska@suse.cz>\n \n \tPR gcov-profile/77698"}, {"sha": "7d1444461297f83936cbb98c3a461686767e126b", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3210c96bc56fec2653206e49c4a2514a8c7535f/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3210c96bc56fec2653206e49c4a2514a8c7535f/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=c3210c96bc56fec2653206e49c4a2514a8c7535f", "patch": "@@ -12046,7 +12046,8 @@ when testing pointer or floating-point values.\n This function has the same semantics as @code{__builtin_expect},\n but the caller provides the expected probability that @var{exp} == @var{c}.\n The last argument, @var{probability}, is a floating-point value in the\n-range 0.0 to 1.0, inclusive.\n+range 0.0 to 1.0, inclusive.  The @var{probability} argument must be\n+a compiler time constant.\n @end deftypefn\n \n @deftypefn {Built-in Function} void __builtin_trap (void)"}, {"sha": "80a8d6846f78f945707fe1fb3b2d8ba6ae13b1c7", "filename": "gcc/predict.c", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3210c96bc56fec2653206e49c4a2514a8c7535f/gcc%2Fpredict.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3210c96bc56fec2653206e49c4a2514a8c7535f/gcc%2Fpredict.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpredict.c?ref=c3210c96bc56fec2653206e49c4a2514a8c7535f", "patch": "@@ -2467,13 +2467,25 @@ expr_expected_value_1 (tree type, tree op0, enum tree_code code,\n \t\t  base = build_real_from_int_cst (t, base);\n \t\t  tree r = fold_build2_initializer_loc (UNKNOWN_LOCATION,\n \t\t\t\t\t\t\tMULT_EXPR, t, prob, base);\n+\t\t  if (TREE_CODE (r) != REAL_CST)\n+\t\t    {\n+\t\t      error_at (gimple_location (def),\n+\t\t\t\t\"probability argument %qE must be a compile \"\n+\t\t\t\t\"time constant\", prob);\n+\t\t      return NULL;\n+\t\t    }\n \t\t  HOST_WIDE_INT probi\n \t\t    = real_to_integer (TREE_REAL_CST_PTR (r));\n \t\t  if (probi >= 0 && probi <= REG_BR_PROB_BASE)\n \t\t    {\n \t\t      *predictor = PRED_BUILTIN_EXPECT_WITH_PROBABILITY;\n \t\t      *probability = probi;\n \t\t    }\n+\t\t  else\n+\t\t    error_at (gimple_location (def),\n+\t\t\t      \"probability argument %qE must be a in the \"\n+\t\t\t      \"range 0.0 to 1.0\", prob);\n+\n \t\t  return gimple_call_arg (def, 1);\n \t\t}\n "}, {"sha": "a02831c11309e6187562ad3afd6828e79f144a59", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3210c96bc56fec2653206e49c4a2514a8c7535f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3210c96bc56fec2653206e49c4a2514a8c7535f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c3210c96bc56fec2653206e49c4a2514a8c7535f", "patch": "@@ -1,3 +1,10 @@\n+2018-11-05  Martin Liska  <mliska@suse.cz>\n+\n+\tPR c/87811\n+\t* gcc.dg/pr87811.c: New test.\n+\t* gcc.dg/pr87811-2.c: Likewise.\n+\t* gcc.dg/pr87811-3.c: Likewise.\n+\n 2018-11-05  Martin Liska  <mliska@suse.cz>\n \n \tPR gcov-profile/77698"}, {"sha": "aa30ddff47bf0898afab91877ba56eab8cb219ab", "filename": "gcc/testsuite/gcc.dg/pr87811-2.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3210c96bc56fec2653206e49c4a2514a8c7535f/gcc%2Ftestsuite%2Fgcc.dg%2Fpr87811-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3210c96bc56fec2653206e49c4a2514a8c7535f/gcc%2Ftestsuite%2Fgcc.dg%2Fpr87811-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr87811-2.c?ref=c3210c96bc56fec2653206e49c4a2514a8c7535f", "patch": "@@ -0,0 +1,13 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fdump-tree-profile_estimate\" } */\n+\n+void bar (void);\n+\n+void\n+foo (int i)\n+{\n+  if (__builtin_expect_with_probability (i, 0, 2.0f)) /* { dg-error \"probability argument .* must be a in the range 0\\\\\\.0 to 1\\\\\\.0\" } */\n+    bar ();\n+}\n+\n+/* { dg-final { scan-tree-dump-not \"__builtin_expect_with_probability heuristics of edge\" \"profile_estimate\"} } */"}, {"sha": "720d154a8d48f9d8a5f18023bb659a740f0bba71", "filename": "gcc/testsuite/gcc.dg/pr87811-3.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3210c96bc56fec2653206e49c4a2514a8c7535f/gcc%2Ftestsuite%2Fgcc.dg%2Fpr87811-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3210c96bc56fec2653206e49c4a2514a8c7535f/gcc%2Ftestsuite%2Fgcc.dg%2Fpr87811-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr87811-3.c?ref=c3210c96bc56fec2653206e49c4a2514a8c7535f", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-fdump-tree-profile_estimate\" } */\n+\n+void bar (void);\n+\n+void\n+foo (int i)\n+{\n+  if (__builtin_expect_with_probability (i, 0, 2.0f))\n+    bar ();\n+}"}, {"sha": "9045c8ea9573bf7499171ed0b97682597a9c2e15", "filename": "gcc/testsuite/gcc.dg/pr87811.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3210c96bc56fec2653206e49c4a2514a8c7535f/gcc%2Ftestsuite%2Fgcc.dg%2Fpr87811.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3210c96bc56fec2653206e49c4a2514a8c7535f/gcc%2Ftestsuite%2Fgcc.dg%2Fpr87811.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr87811.c?ref=c3210c96bc56fec2653206e49c4a2514a8c7535f", "patch": "@@ -0,0 +1,13 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fdump-tree-profile_estimate\" } */\n+\n+void bar (void);\n+\n+void\n+foo (int i, double d)\n+{\n+  if (__builtin_expect_with_probability (i, 0, d)) /* { dg-error \"probability argument .d. must be a compile time constant\" } */\n+    bar ();\n+}\n+\n+/* { dg-final { scan-tree-dump-not \"__builtin_expect_with_probability heuristics of edge\" \"profile_estimate\"} } */"}]}