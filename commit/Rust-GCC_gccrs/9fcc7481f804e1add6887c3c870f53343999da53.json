{"sha": "9fcc7481f804e1add6887c3c870f53343999da53", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWZjYzc0ODFmODA0ZTFhZGQ2ODg3YzNjODcwZjUzMzQzOTk5ZGE1Mw==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2004-11-26T22:00:51Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2004-11-26T22:00:51Z"}, "message": "inclhack.def (gnu_types): Do not use on Solaris 2.1x.\n\n2004-11-26  Mark Mitchell  <mark@codesourcery.com>\n\n\t* inclhack.def (gnu_types): Do not use on Solaris 2.1x.\n\t(stdio_va_list): Likewise.\n\t(stdio_stdarg.h): Likewise.\n\t(solaris_stdio_tag): Add bypass.\n\t* fixincl.x: Regenerated.\n\nFrom-SVN: r91351", "tree": {"sha": "0bd62f15b29db4ef106e13e85814661a15a5f4d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0bd62f15b29db4ef106e13e85814661a15a5f4d8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9fcc7481f804e1add6887c3c870f53343999da53", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9fcc7481f804e1add6887c3c870f53343999da53", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9fcc7481f804e1add6887c3c870f53343999da53", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9fcc7481f804e1add6887c3c870f53343999da53/comments", "author": null, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "44379973a5a46ef1180e7654f9af382f55b49cb2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44379973a5a46ef1180e7654f9af382f55b49cb2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/44379973a5a46ef1180e7654f9af382f55b49cb2"}], "stats": {"total": 60, "additions": 50, "deletions": 10}, "files": [{"sha": "bd3895f7bafdefc7e64a0ce8ca408aa2a9b185b8", "filename": "fixincludes/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fcc7481f804e1add6887c3c870f53343999da53/fixincludes%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fcc7481f804e1add6887c3c870f53343999da53/fixincludes%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2FChangeLog?ref=9fcc7481f804e1add6887c3c870f53343999da53", "patch": "@@ -1,3 +1,11 @@\n+2004-11-26  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* inclhack.def (gnu_types): Do not use on Solaris 2.1x.\n+\t(stdio_va_list): Likewise.\n+\t(stdio_stdarg.h): Likewise.\n+\t(solaris_stdio_tag): Add bypass.\n+\t* fixincl.x: Regenerated.\n+\n 2004-11-23  Geoffrey Keating  <geoffk@apple.com>\n \n \t* mkfixinc.sh: Check error code from 'cat'.  Don't try running"}, {"sha": "2eabf1f572eeebe7998665a3b03b037290c645f5", "filename": "fixincludes/fixincl.x", "status": "modified", "additions": 23, "deletions": 10, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fcc7481f804e1add6887c3c870f53343999da53/fixincludes%2Ffixincl.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fcc7481f804e1add6887c3c870f53343999da53/fixincludes%2Ffixincl.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ffixincl.x?ref=9fcc7481f804e1add6887c3c870f53343999da53", "patch": "@@ -2,11 +2,11 @@\n  * \n  * DO NOT EDIT THIS FILE   (fixincl.x)\n  * \n- * It has been AutoGen-ed  Sunday November 21, 2004 at 03:52:23 PM MST\n+ * It has been AutoGen-ed  Friday November 26, 2004 at 09:59:26 PM UTC\n  * From the definitions    inclhack.def\n  * and the template file   fixincl\n  */\n-/* DO NOT CVS-MERGE THIS FILE, EITHER Sun Nov 21 15:52:23 MST 2004\n+/* DO NOT CVS-MERGE THIS FILE, EITHER Fri Nov 26 21:59:26 UTC 2004\n  *\n  * You must regenerate it.  Use the ./genfixes script.\n  *\n@@ -2001,7 +2001,9 @@ tSCC zGnu_TypesList[] =\n /*\n  *  Machine/OS name selection pattern\n  */\n-#define apzGnu_TypesMachs (const char**)NULL\n+tSCC* apzGnu_TypesMachs[] = {\n+        \"*-*-solaris2.1[0-9]*\",\n+        (const char*)NULL };\n \n /*\n  *  content selection pattern - do fix if pattern found\n@@ -4661,8 +4663,15 @@ tSCC zSolaris_Stdio_TagList[] =\n tSCC zSolaris_Stdio_TagSelect0[] =\n        \"__cplusplus < 54321L\";\n \n-#define    SOLARIS_STDIO_TAG_TEST_CT  1\n+/*\n+ *  content bypass pattern - skip fix if pattern found\n+ */\n+tSCC zSolaris_Stdio_TagBypass0[] =\n+       \"__GNUC__\";\n+\n+#define    SOLARIS_STDIO_TAG_TEST_CT  2\n static tTestDesc aSolaris_Stdio_TagTests[] = {\n+  { TT_NEGREP,   zSolaris_Stdio_TagBypass0, (regex_t*)NULL },\n   { TT_EGREP,    zSolaris_Stdio_TagSelect0, (regex_t*)NULL }, };\n \n /*\n@@ -4812,7 +4821,9 @@ tSCC zStdio_Stdarg_HList[] =\n /*\n  *  Machine/OS name selection pattern\n  */\n-#define apzStdio_Stdarg_HMachs (const char**)NULL\n+tSCC* apzStdio_Stdarg_HMachs[] = {\n+        \"*-*-solaris2.1[0-9]\",\n+        (const char*)NULL };\n \n /*\n  *  content bypass pattern - skip fix if pattern found\n@@ -4848,7 +4859,9 @@ tSCC zStdio_Va_ListList[] =\n /*\n  *  Machine/OS name selection pattern\n  */\n-#define apzStdio_Va_ListMachs (const char**)NULL\n+tSCC* apzStdio_Va_ListMachs[] = {\n+        \"*-*-solaris2.1[0-9]\",\n+        (const char*)NULL };\n \n /*\n  *  content bypass pattern - skip fix if pattern found\n@@ -7072,7 +7085,7 @@ static const char* apzX11_SprintfPatch[] = {\n  *\n  *  List of all fixes\n  */\n-#define REGEX_COUNT          206\n+#define REGEX_COUNT          207\n #define MACH_LIST_SIZE_LIMIT 261\n #define FIX_COUNT            177\n \n@@ -7497,7 +7510,7 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n \n   {  zGnu_TypesName,    zGnu_TypesList,\n      apzGnu_TypesMachs,\n-     GNU_TYPES_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n+     GNU_TYPES_TEST_CT, FD_MACH_IFNOT | FD_SUBROUTINE,\n      aGnu_TypesTests,   apzGnu_TypesPatch, 0 },\n \n   {  zHp_InlineName,    zHp_InlineList,\n@@ -7857,12 +7870,12 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n \n   {  zStdio_Stdarg_HName,    zStdio_Stdarg_HList,\n      apzStdio_Stdarg_HMachs,\n-     STDIO_STDARG_H_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n+     STDIO_STDARG_H_TEST_CT, FD_MACH_IFNOT | FD_SUBROUTINE,\n      aStdio_Stdarg_HTests,   apzStdio_Stdarg_HPatch, 0 },\n \n   {  zStdio_Va_ListName,    zStdio_Va_ListList,\n      apzStdio_Va_ListMachs,\n-     STDIO_VA_LIST_TEST_CT, FD_MACH_ONLY,\n+     STDIO_VA_LIST_TEST_CT, FD_MACH_IFNOT,\n      aStdio_Va_ListTests,   apzStdio_Va_ListPatch, 0 },\n \n   {  zStdio_Va_List_ClientsName,    zStdio_Va_List_ClientsList,"}, {"sha": "28dbd46533e36bce2b382c4c2c79c1dd04d5fc55", "filename": "fixincludes/inclhack.def", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fcc7481f804e1add6887c3c870f53343999da53/fixincludes%2Finclhack.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fcc7481f804e1add6887c3c870f53343999da53/fixincludes%2Finclhack.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Finclhack.def?ref=9fcc7481f804e1add6887c3c870f53343999da53", "patch": "@@ -1177,6 +1177,9 @@ fix = {\n     bypass    = '_GCC_(PTRDIFF|SIZE|WCHAR)_T';\n     select    = \"^[ \\t]*typedef[ \\t]+.*[ \\t](ptrdiff|size|wchar)_t;\";\n     c_fix     = gnu_type;\n+    /* The Solaris 10 headers already define these types correctly.  */\n+    mach   = '*-*-solaris2.1[0-9]*';\n+    not_machine = true;\n \n     test_text = \"typedef long int ptrdiff_t; /* long int */\\n\"\n                 \"typedef uint_t size_t; /* uint_t */\\n\"\n@@ -2599,6 +2602,9 @@ fix = {\n     files    = stdio_tag.h;\n \n     select   = '__cplusplus < 54321L';\n+    /* In Solaris 10, the code in stdio_tag.h is conditionalized on \n+       \"!defined(__GNUC__)\" so we no longer need to fix it.  */\n+    bypass   = '__GNUC__';\n     sed      = 's/defined(__cplusplus) && (__cplusplus < 54321L)/0/';\n \n     test_text = \"#if\\tdefined(__cplusplus) && (__cplusplus < 54321L)\";\n@@ -2664,6 +2670,12 @@ fix = {\n     hackname = stdio_stdarg_h;\n     files    = stdio.h;\n     bypass   = \"include.*(stdarg\\.h|machine/ansi\\.h)\";\n+    /*\n+     * On Solaris 10, this fix is unncessary; <stdio.h> includes\n+     * <iso/stdio_iso.h>, which includes <sys/va_list.h>.\n+      */\n+    mach     = '*-*-solaris2.1[0-9]';\n+    not_machine = true;\n \n     c_fix     = wrap;\n \n@@ -2689,6 +2701,13 @@ fix = {\n     files    = internal/stdio_core.h;\n     files    = internal/wchar_core.h;\n     bypass   = '__gnuc_va_list|_BSD_VA_LIST_|__DJ_va_list|_G_va_list';\n+    /* \n+     * On Solaris 10, the definition in \n+     * <stdio.h> is guarded appropriately by the _XPG4 feature macro; \n+     * there is therefore no need for this fix there.\n+     */\n+    mach = '*-*-solaris2.1[0-9]';\n+    not_machine = true;\n \n     /*\n      * Use __gnuc_va_list in arg types in place of va_list."}]}