{"sha": "3c7ad43e58196cebcb3e912b4c35b38bf74a1e19", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2M3YWQ0M2U1ODE5NmNlYmNiM2U5MTJiNGMzNWIzOGJmNzRhMWUxOQ==", "commit": {"author": {"name": "Paul Brook", "email": "paul@codesourcery.com", "date": "2004-05-28T15:44:35Z"}, "committer": {"name": "Paul Brook", "email": "pbrook@gcc.gnu.org", "date": "2004-05-28T15:44:35Z"}, "message": "arm.c (thumb_force_lr_save): New function.\n\n\t* config/arm/arm.c (thumb_force_lr_save): New function.\n\t(arm_get_frame_offsets, thumb_unexpanded_epilogue,\n\tthumb_output_function_prologue): Use it.\n\t(thumb_expand_prologue): Set lr_save_eliminated.\n\nFrom-SVN: r82360", "tree": {"sha": "0c6985184398739e8a3693b3e7aee084daff69d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0c6985184398739e8a3693b3e7aee084daff69d1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3c7ad43e58196cebcb3e912b4c35b38bf74a1e19", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c7ad43e58196cebcb3e912b4c35b38bf74a1e19", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c7ad43e58196cebcb3e912b4c35b38bf74a1e19", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c7ad43e58196cebcb3e912b4c35b38bf74a1e19/comments", "author": null, "committer": null, "parents": [{"sha": "a97a3e73b5f3d0bde5350da0ffad08aa1572d3c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a97a3e73b5f3d0bde5350da0ffad08aa1572d3c1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a97a3e73b5f3d0bde5350da0ffad08aa1572d3c1"}], "stats": {"total": 45, "additions": 38, "deletions": 7}, "files": [{"sha": "5c42a0c69d70ada1ed7ef2cc715692e39eadffbe", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c7ad43e58196cebcb3e912b4c35b38bf74a1e19/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c7ad43e58196cebcb3e912b4c35b38bf74a1e19/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3c7ad43e58196cebcb3e912b4c35b38bf74a1e19", "patch": "@@ -1,3 +1,10 @@\n+2004-05-28  Paul Brook  <paul@codesourcery.com>\n+\n+\t* config/arm/arm.c (thumb_force_lr_save): New function.\n+\t(arm_get_frame_offsets, thumb_unexpanded_epilogue,\n+\tthumb_output_function_prologue): Use it.\n+\t(thumb_expand_prologue): Set lr_save_eliminated.\n+\n 2004-05-28  Richard Sandiford  <rsandifo@redhat.com>\n \n \t* config/mips/mips.md (extendsidi2): Tie the source and destination"}, {"sha": "a484eb749728a9f537983902ee5d5f536375e601", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 31, "deletions": 7, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c7ad43e58196cebcb3e912b4c35b38bf74a1e19/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c7ad43e58196cebcb3e912b4c35b38bf74a1e19/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=3c7ad43e58196cebcb3e912b4c35b38bf74a1e19", "patch": "@@ -9960,6 +9960,18 @@ emit_sfm (int base_reg, int count)\n }\n \n \n+/* Return true if the current function needs to save/restore LR.  */\n+\n+static bool\n+thumb_force_lr_save (void)\n+{\n+  return !cfun->machine->lr_save_eliminated\n+\t && (!leaf_function_p ()\n+\t     || thumb_far_jump_used_p ()\n+\t     || regs_ever_live [LR_REGNUM]);\n+}\n+\n+\n /* Compute the distance from register FROM to register TO.\n    These can be the arg pointer (26), the soft frame pointer (25),\n    the stack pointer (13) or the hard frame pointer (11).\n@@ -10095,8 +10107,7 @@ arm_get_frame_offsets (void)\n       for (reg = 0; reg <= LAST_LO_REGNUM; reg ++)\n \tif (THUMB_REG_PUSHED_P (reg))\n \t  count_regs ++;\n-      if (count_regs || ! leaf_function_p ()\n-\t  || thumb_far_jump_used_p ())\n+      if (count_regs || thumb_force_lr_save ())\n \tsaved += 4 * (count_regs + 1);\n       if (TARGET_BACKTRACE)\n \t{\n@@ -12916,7 +12927,6 @@ thumb_unexpanded_epilogue (void)\n   int regno;\n   int live_regs_mask = 0;\n   int high_regs_pushed = 0;\n-  int leaf_function = leaf_function_p ();\n   int had_to_push_lr;\n   rtx eh_ofs = cfun->machine->eh_epilogue_sp_ofs;\n \n@@ -13011,8 +13021,7 @@ thumb_unexpanded_epilogue (void)\n \t}\n     }\n \n-  had_to_push_lr = (live_regs_mask || !leaf_function\n-\t\t    || thumb_far_jump_used_p ());\n+  had_to_push_lr = (live_regs_mask || thumb_force_lr_save ());\n   \n   if (TARGET_BACKTRACE\n       && ((live_regs_mask & 0xFF) == 0)\n@@ -13172,6 +13181,7 @@ thumb_expand_prologue (void)\n   HOST_WIDE_INT amount;\n   arm_stack_offsets *offsets;\n   unsigned long func_type;\n+  int regno;\n \n   func_type = arm_current_func_type ();\n   \n@@ -13205,7 +13215,6 @@ thumb_expand_prologue (void)\n \t}\n       else\n \t{\n-\t  int regno;\n \t  rtx reg;\n \n \t  /* The stack decrement is too big for an immediate value in a single\n@@ -13290,6 +13299,21 @@ thumb_expand_prologue (void)\n   \n   if (current_function_profile || TARGET_NO_SCHED_PRO)\n     emit_insn (gen_blockage ());\n+\n+  cfun->machine->lr_save_eliminated = !thumb_force_lr_save ();\n+  for (regno = 0; regno <= LAST_LO_REGNUM; regno++)\n+    {\n+      if (THUMB_REG_PUSHED_P (regno))\n+        {\n+          cfun->machine->lr_save_eliminated = 0;\n+          break;\n+        }\n+    }\n+\n+  /* If the link register is being kept alive, with the return address in it,\n+     then make sure that it does not get reused by the ce2 pass.  */\n+  if (cfun->machine->lr_save_eliminated)\n+    emit_insn (gen_prologue_use (gen_rtx_REG (SImode, LR_REGNUM)));\n }\n \n void\n@@ -13424,7 +13448,7 @@ thumb_output_function_prologue (FILE *f, HOST_WIDE_INT size ATTRIBUTE_UNUSED)\n     if (THUMB_REG_PUSHED_P (regno))\n       live_regs_mask |= 1 << regno;\n \n-  if (live_regs_mask || !leaf_function_p () || thumb_far_jump_used_p ())\n+  if (live_regs_mask || thumb_force_lr_save ())\n     live_regs_mask |= 1 << LR_REGNUM;\n \n   if (TARGET_BACKTRACE)"}]}