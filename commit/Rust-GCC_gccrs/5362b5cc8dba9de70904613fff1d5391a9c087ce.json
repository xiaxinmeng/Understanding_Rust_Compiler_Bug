{"sha": "5362b5cc8dba9de70904613fff1d5391a9c087ce", "node_id": "C_kwDOANBUbNoAKDUzNjJiNWNjOGRiYTlkZTcwOTA0NjEzZmZmMWQ1MzkxYTljMDg3Y2U", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-10-20T09:04:21Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-10-20T10:49:50Z"}, "message": "Avoid PHI - PHI recurrence in vectorization\n\nThe reported regression of libgomp loop-14.C shows that there isn't\ngenerally a good reliable place to insert the permute upfront so\nthe following simply restricts recurrence vectorization to the cases\nwhere the latch value isn't defined by a PHI.\n\n\t* tree-vect-loop.cc (vect_phi_first_order_recurrence_p):\n\tDisallow latch PHI defs.\n\t(vectorizable_recurr): Revert previous change.", "tree": {"sha": "7ff6ab63d0a747beb811208e228d7dc34b8643e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7ff6ab63d0a747beb811208e228d7dc34b8643e8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5362b5cc8dba9de70904613fff1d5391a9c087ce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5362b5cc8dba9de70904613fff1d5391a9c087ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5362b5cc8dba9de70904613fff1d5391a9c087ce", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5362b5cc8dba9de70904613fff1d5391a9c087ce/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c7ebee2378426eeca425ca5406af213a926f154c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7ebee2378426eeca425ca5406af213a926f154c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c7ebee2378426eeca425ca5406af213a926f154c"}], "stats": {"total": 11, "additions": 3, "deletions": 8}, "files": [{"sha": "d5c2bff80be9be152707eb9d3932c863948daa73", "filename": "gcc/tree-vect-loop.cc", "status": "modified", "additions": 3, "deletions": 8, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5362b5cc8dba9de70904613fff1d5391a9c087ce/gcc%2Ftree-vect-loop.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5362b5cc8dba9de70904613fff1d5391a9c087ce/gcc%2Ftree-vect-loop.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-loop.cc?ref=5362b5cc8dba9de70904613fff1d5391a9c087ce", "patch": "@@ -543,6 +543,7 @@ vect_phi_first_order_recurrence_p (loop_vec_info loop_vinfo, class loop *loop,\n   tree ldef = PHI_ARG_DEF_FROM_EDGE (phi, latch);\n   if (TREE_CODE (ldef) != SSA_NAME\n       || SSA_NAME_IS_DEFAULT_DEF (ldef)\n+      || is_a <gphi *> (SSA_NAME_DEF_STMT (ldef))\n       || !flow_bb_inside_loop_p (loop, gimple_bb (SSA_NAME_DEF_STMT (ldef))))\n     return false;\n \n@@ -8486,14 +8487,8 @@ vectorizable_recurr (loop_vec_info loop_vinfo, stmt_vec_info stmt_info,\n      vectorized the latch definition.  */\n   edge le = loop_latch_edge (LOOP_VINFO_LOOP (loop_vinfo));\n   gimple *latch_def = SSA_NAME_DEF_STMT (PHI_ARG_DEF_FROM_EDGE (phi, le));\n-  gimple_stmt_iterator gsi2;\n-  if (is_a <gphi *> (latch_def))\n-    gsi2 = gsi_after_labels (gimple_bb (latch_def));\n-  else\n-    {\n-      gsi2 = gsi_for_stmt (latch_def);\n-      gsi_next (&gsi2);\n-    }\n+  gimple_stmt_iterator gsi2 = gsi_for_stmt (latch_def);\n+  gsi_next (&gsi2);\n \n   for (unsigned i = 0; i < ncopies; ++i)\n     {"}]}