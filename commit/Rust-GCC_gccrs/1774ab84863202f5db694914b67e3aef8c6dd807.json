{"sha": "1774ab84863202f5db694914b67e3aef8c6dd807", "node_id": "C_kwDOANBUbNoAKDE3NzRhYjg0ODYzMjAyZjVkYjY5NDkxNGI2N2UzYWVmOGM2ZGQ4MDc", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-04-11T17:06:59Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-04-11T17:06:59Z"}, "message": "phiopt: Fix up debug handling in the (x != cst1 ? x : cst2) != cst3 opt [PR105218]\n\nIn the PR104639 optimization, I've added code to emit\n  # DEBUG D#1 => arg != carg ? arg : oarg\ninstruction and replace debug uses of the phi with that debug\ntemp, so that the debug info is still accurrate.\nUnfortunately, that is only correct if the middle-bb and\nphi bb contain 1 and 2 predecessors, i.e. the ones that\nwe are using in the optimization (in particular middle-bb has\ncond-bb as pred and phi bb cond-bb and middle-bb).\nIf that is not the case, then we can reach these from another bb\nand so the arg SSA_NAME might not be valid there (its definition\ndoesn't dominate all incoming edges), or, even if it is valid,\nmight be wrong-debug, e.g. phi argument from some unrelated other\nincoming edge might have the carg value that the debug stmt\nremaps to oarg.  In theory we could check for that case and\nif middle-bb doesn't have a single pred or phi bb 2 preds\ncheck if arg SSA_NAME dominates the phi bb and if all other\nphi arguments are expr_not_equal_to the carg value, but this patch\njust uses a simpler approach and resets already if we have some\nextra incoming edges.\n\n2022-04-11  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR tree-optimization/105218\n\t* tree-ssa-phiopt.cc (value_replacement): If middle_bb has\n\tmore than one predecessor or phi's bb more than 2 predecessors,\n\treset phi result uses instead of adding a debug temp.\n\n\t* gcc.dg/pr105218.c: New test.", "tree": {"sha": "ffd8a25eaa87285f57f977fccd777f92adfe3d3a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ffd8a25eaa87285f57f977fccd777f92adfe3d3a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1774ab84863202f5db694914b67e3aef8c6dd807", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1774ab84863202f5db694914b67e3aef8c6dd807", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1774ab84863202f5db694914b67e3aef8c6dd807", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1774ab84863202f5db694914b67e3aef8c6dd807/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "73da9ec55609efa532b9ac85ac2dbe121c134e18", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73da9ec55609efa532b9ac85ac2dbe121c134e18", "html_url": "https://github.com/Rust-GCC/gccrs/commit/73da9ec55609efa532b9ac85ac2dbe121c134e18"}], "stats": {"total": 29, "additions": 29, "deletions": 0}, "files": [{"sha": "0070057c32db8c84387724350e7bcd6b7db35325", "filename": "gcc/testsuite/gcc.dg/pr105218.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1774ab84863202f5db694914b67e3aef8c6dd807/gcc%2Ftestsuite%2Fgcc.dg%2Fpr105218.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1774ab84863202f5db694914b67e3aef8c6dd807/gcc%2Ftestsuite%2Fgcc.dg%2Fpr105218.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr105218.c?ref=1774ab84863202f5db694914b67e3aef8c6dd807", "patch": "@@ -0,0 +1,16 @@\n+/* PR tree-optimization/105218 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -g\" } */\n+\n+int a, c;\n+void bar (void);\n+\n+void\n+foo (void)\n+{\n+  int b = 131;\n+  if (a)\n+    b = c == 2 ? 1 : c;\n+  while (b)\n+    bar ();\n+}"}, {"sha": "3eda825672cb848cd09105670a687ed5b9997a71", "filename": "gcc/tree-ssa-phiopt.cc", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1774ab84863202f5db694914b67e3aef8c6dd807/gcc%2Ftree-ssa-phiopt.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1774ab84863202f5db694914b67e3aef8c6dd807/gcc%2Ftree-ssa-phiopt.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-phiopt.cc?ref=1774ab84863202f5db694914b67e3aef8c6dd807", "patch": "@@ -1454,6 +1454,7 @@ value_replacement (basic_block cond_bb, basic_block middle_bb,\n \t\t  imm_use_iterator imm_iter;\n \t\t  tree phires = gimple_phi_result (phi);\n \t\t  tree temp = NULL_TREE;\n+\t\t  bool reset_p = false;\n \n \t\t  /* Add # DEBUG D#1 => arg != carg ? arg : oarg.  */\n \t\t  FOR_EACH_IMM_USE_STMT (use_stmt, imm_iter, phires)\n@@ -1462,6 +1463,16 @@ value_replacement (basic_block cond_bb, basic_block middle_bb,\n \t\t\tcontinue;\n \t\t      if (temp == NULL_TREE)\n \t\t\t{\n+\t\t\t  if (!single_pred_p (middle_bb)\n+\t\t\t      || EDGE_COUNT (gimple_bb (phi)->preds) != 2)\n+\t\t\t    {\n+\t\t\t      /* But only if middle_bb has a single\n+\t\t\t\t predecessor and phi bb has two, otherwise\n+\t\t\t\t we could use a SSA_NAME not usable in that\n+\t\t\t\t place or wrong-debug.  */\n+\t\t\t      reset_p = true;\n+\t\t\t      break;\n+\t\t\t    }\n \t\t\t  gimple_stmt_iterator gsi\n \t\t\t    = gsi_after_labels (gimple_bb (phi));\n \t\t\t  tree type = TREE_TYPE (phires);\n@@ -1476,6 +1487,8 @@ value_replacement (basic_block cond_bb, basic_block middle_bb,\n \t\t\treplace_exp (use_p, temp);\n \t\t      update_stmt (use_stmt);\n \t\t    }\n+\t\t  if (reset_p)\n+\t\t    reset_debug_uses (phi);\n \t\t}\n \t    }\n \t  if (equal_p)"}]}