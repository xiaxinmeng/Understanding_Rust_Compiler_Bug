{"sha": "7491e5f00c515b69ad34ba3e41175e2017825f61", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzQ5MWU1ZjAwYzUxNWI2OWFkMzRiYTNlNDExNzVlMjAxNzgyNWY2MQ==", "commit": {"author": {"name": "Konrad Trifunovic", "email": "konrad.trifunovic@gmail.com", "date": "2009-08-12T14:24:01Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2009-08-12T14:24:01Z"}, "message": "Fix memory leak in DD XFAILs some interchange testcases.\n\n2009-08-05  Konrad Trifunovic  <konrad.trifunovic@gmail.com>\n\t    Sebastian Pop  <sebastian.pop@amd.com>\n\n\t* graphite-dependences.c (graphite_legal_transform_dr): Work on a\n\tcopy of the dependence polyhedron.  Free the temporary objects.\n\t(graphite_carried_dependence_level_k): Free unused objects before\n\treturning.\n\n\t* testsuite/gcc.dg/graphite/interchange-1.c: XFAILed.\n\t* testsuite/gcc.dg/graphite/interchange-2.c: XFAILed.\n\t* testsuite/gcc.dg/graphite/interchange-3.c: XFAILed.\n\t* testsuite/gcc.dg/graphite/interchange-4.c: XFAILed.\n\t* testsuite/gcc.dg/graphite/interchange-7.c: XFAILed.\n\n\nCo-Authored-By: Sebastian Pop <sebastian.pop@amd.com>\n\nFrom-SVN: r150687", "tree": {"sha": "ed06f135bd5e97a946d4aeb926c98a52cf624f7e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ed06f135bd5e97a946d4aeb926c98a52cf624f7e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7491e5f00c515b69ad34ba3e41175e2017825f61", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7491e5f00c515b69ad34ba3e41175e2017825f61", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7491e5f00c515b69ad34ba3e41175e2017825f61", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7491e5f00c515b69ad34ba3e41175e2017825f61/comments", "author": {"login": "ktrifuno", "id": 76754948, "node_id": "MDQ6VXNlcjc2NzU0OTQ4", "avatar_url": "https://avatars.githubusercontent.com/u/76754948?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktrifuno", "html_url": "https://github.com/ktrifuno", "followers_url": "https://api.github.com/users/ktrifuno/followers", "following_url": "https://api.github.com/users/ktrifuno/following{/other_user}", "gists_url": "https://api.github.com/users/ktrifuno/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktrifuno/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktrifuno/subscriptions", "organizations_url": "https://api.github.com/users/ktrifuno/orgs", "repos_url": "https://api.github.com/users/ktrifuno/repos", "events_url": "https://api.github.com/users/ktrifuno/events{/privacy}", "received_events_url": "https://api.github.com/users/ktrifuno/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f4648ed13904dcf3fc8af24896055843b46b2d96", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4648ed13904dcf3fc8af24896055843b46b2d96", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f4648ed13904dcf3fc8af24896055843b46b2d96"}], "stats": {"total": 62, "additions": 52, "deletions": 10}, "files": [{"sha": "b7888b897e47a48c354f87c407d49388346d0e1e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7491e5f00c515b69ad34ba3e41175e2017825f61/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7491e5f00c515b69ad34ba3e41175e2017825f61/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7491e5f00c515b69ad34ba3e41175e2017825f61", "patch": "@@ -1,3 +1,17 @@\n+2009-08-12  Konrad Trifunovic  <konrad.trifunovic@gmail.com>\n+\t    Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\t* graphite-dependences.c (graphite_legal_transform_dr): Work on a\n+\tcopy of the dependence polyhedron.  Free the temporary objects.\n+\t(graphite_carried_dependence_level_k): Free unused objects before\n+\treturning.\n+\n+\t* testsuite/gcc.dg/graphite/interchange-1.c: XFAILed.\n+\t* testsuite/gcc.dg/graphite/interchange-2.c: XFAILed.\n+\t* testsuite/gcc.dg/graphite/interchange-3.c: XFAILed.\n+\t* testsuite/gcc.dg/graphite/interchange-4.c: XFAILed.\n+\t* testsuite/gcc.dg/graphite/interchange-7.c: XFAILed.\n+\n 2009-08-12  Sebastian Pop  <sebastian.pop@amd.com>\n \n \t* graphite-blocking.c (scop_do_strip_mine): Call store_scattering."}, {"sha": "bb1d3ad1b7eab64551ea00f2e027743315a799e8", "filename": "gcc/ChangeLog.graphite", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7491e5f00c515b69ad34ba3e41175e2017825f61/gcc%2FChangeLog.graphite", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7491e5f00c515b69ad34ba3e41175e2017825f61/gcc%2FChangeLog.graphite", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog.graphite?ref=7491e5f00c515b69ad34ba3e41175e2017825f61", "patch": "@@ -1,3 +1,17 @@\n+2009-08-05  Konrad Trifunovic  <konrad.trifunovic@gmail.com>\n+\t    Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\t* graphite-dependences.c (graphite_legal_transform_dr): Work on a\n+\tcopy of the dependence polyhedron.  Free the temporary objects.\n+\t(graphite_carried_dependence_level_k): Free unused objects before\n+\treturning.\n+\n+\t* testsuite/gcc.dg/graphite/interchange-1.c: XFAILed.\n+\t* testsuite/gcc.dg/graphite/interchange-2.c: XFAILed.\n+\t* testsuite/gcc.dg/graphite/interchange-3.c: XFAILed.\n+\t* testsuite/gcc.dg/graphite/interchange-4.c: XFAILed.\n+\t* testsuite/gcc.dg/graphite/interchange-7.c: XFAILed.\n+\n 2009-08-05  Sebastian Pop  <sebastian.pop@amd.com>\n \n \t* graphite-blocking.c (scop_do_strip_mine): Call store_scattering."}, {"sha": "1c29b18bcc667b3e91fc003670711b33ff524b30", "filename": "gcc/graphite-dependences.c", "status": "modified", "additions": 19, "deletions": 5, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7491e5f00c515b69ad34ba3e41175e2017825f61/gcc%2Fgraphite-dependences.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7491e5f00c515b69ad34ba3e41175e2017825f61/gcc%2Fgraphite-dependences.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-dependences.c?ref=7491e5f00c515b69ad34ba3e41175e2017825f61", "patch": "@@ -513,21 +513,36 @@ graphite_legal_transform_dr (poly_bb_p pbb1, poly_bb_p pbb2,\n       graphite_dim_t otdim2 = pbb_nb_scattering_orig (pbb2);\n       graphite_dim_t ttdim1 = pbb_nb_scattering_transform (pbb1);\n       graphite_dim_t ttdim2 = pbb_nb_scattering_transform (pbb2);\n+      ppl_Pointset_Powerset_C_Polyhedron_t temp;\n+      ppl_dimension_type pdim;\n+      bool is_empty_p;\n+\n+      /* Copy the PO polyhedron into the TEMP, so it is not destroyed.\n+         Keep in mind, that PO polyhedron might be restored from the cache\n+         and should not be modified!  */\n+      ppl_Pointset_Powerset_C_Polyhedron_space_dimension (po, &pdim);\n+      ppl_new_Pointset_Powerset_C_Polyhedron_from_space_dimension (&temp,\n+\t\t\t\t\t\t\t\t   pdim, 0);\n+      ppl_Pointset_Powerset_C_Polyhedron_intersection_assign (temp, po);\n \n       if (dump_file && (dump_flags & TDF_DETAILS))\n \tfprintf (dump_file, \"\\nloop carries dependency.\\n\");\n       pt = dependence_polyhedron (pbb1, pbb2, d1, d2, pdr1, pdr2, st1, st2,\n \t\t\t\t  false, false);\n \n       /* Extend PO and PT to have the same dimensions.  */\n-      ppl_insert_dimensions_pointset (po, otdim1, ttdim1);\n-      ppl_insert_dimensions_pointset (po, otdim1 + ttdim1 + ddim1 + otdim2,\n+      ppl_insert_dimensions_pointset (temp, otdim1, ttdim1);\n+      ppl_insert_dimensions_pointset (temp, otdim1 + ttdim1 + ddim1 + otdim2,\n \t\t\t\t      ttdim2);\n       ppl_insert_dimensions_pointset (pt, 0, otdim1);\n       ppl_insert_dimensions_pointset (pt, otdim1 + ttdim1 + ddim1, otdim2);\n \n-      ppl_Pointset_Powerset_C_Polyhedron_intersection_assign (po, pt);\n-      return ppl_Pointset_Powerset_C_Polyhedron_is_empty (po);\n+      ppl_Pointset_Powerset_C_Polyhedron_intersection_assign (temp, pt);\n+      is_empty_p = ppl_Pointset_Powerset_C_Polyhedron_is_empty (temp);\n+\n+      ppl_delete_Pointset_Powerset_C_Polyhedron (temp);\n+      ppl_delete_Pointset_Powerset_C_Polyhedron (pt);\n+      return is_empty_p;\n     }\n }\n \n@@ -674,7 +689,6 @@ graphite_carried_dependence_level_k (poly_dr_p pdr1, poly_dr_p pdr2,\n   ppl_Pointset_Powerset_C_Polyhedron_intersection_assign (eqpp, po);\n   empty_p = ppl_Pointset_Powerset_C_Polyhedron_is_empty (eqpp);\n \n-  ppl_delete_Pointset_Powerset_C_Polyhedron (po);\n   ppl_delete_Pointset_Powerset_C_Polyhedron (eqpp);\n   return !empty_p;\n }"}, {"sha": "3d3da117d1766fd550dbc18d8c3b438e1cac8580", "filename": "gcc/testsuite/gcc.dg/graphite/interchange-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7491e5f00c515b69ad34ba3e41175e2017825f61/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Finterchange-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7491e5f00c515b69ad34ba3e41175e2017825f61/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Finterchange-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Finterchange-1.c?ref=7491e5f00c515b69ad34ba3e41175e2017825f61", "patch": "@@ -16,5 +16,5 @@ int foo(int N, int *res)\n   *res = sum + N;\n }\n \n-/* { dg-final { scan-tree-dump-times \"will be interchanged\" 1 \"graphite\" } } */ \n+/* { dg-final { scan-tree-dump-times \"will be interchanged\" 1 \"graphite\" { xfail *-*-* } } } */ \n /* { dg-final { cleanup-tree-dump \"graphite\" } } */"}, {"sha": "4c9ed5ba8008b4174db68414c94f3cfe06d094f3", "filename": "gcc/testsuite/gcc.dg/graphite/interchange-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7491e5f00c515b69ad34ba3e41175e2017825f61/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Finterchange-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7491e5f00c515b69ad34ba3e41175e2017825f61/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Finterchange-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Finterchange-2.c?ref=7491e5f00c515b69ad34ba3e41175e2017825f61", "patch": "@@ -20,5 +20,5 @@ int foo(int N, int *res)\n   *res = sum + N;\n }\n \n-/* { dg-final { scan-tree-dump-times \"will be interchanged\" 1 \"graphite\" } } */ \n+/* { dg-final { scan-tree-dump-times \"will be interchanged\" 1 \"graphite\" { xfail *-*-* } } } */ \n /* { dg-final { cleanup-tree-dump \"graphite\" } } */"}, {"sha": "bd3dde671a21c3a1ed98d49143e394558c12dc00", "filename": "gcc/testsuite/gcc.dg/graphite/interchange-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7491e5f00c515b69ad34ba3e41175e2017825f61/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Finterchange-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7491e5f00c515b69ad34ba3e41175e2017825f61/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Finterchange-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Finterchange-3.c?ref=7491e5f00c515b69ad34ba3e41175e2017825f61", "patch": "@@ -15,5 +15,5 @@ int foo(int N, int *res)\n       *res = sum + N;\n }\n \n-/* { dg-final { scan-tree-dump-times \"will be interchanged\" 1 \"graphite\" } } */ \n+/* { dg-final { scan-tree-dump-times \"will be interchanged\" 1 \"graphite\" { xfail *-*-* } } } */ \n /* { dg-final { cleanup-tree-dump \"graphite\" } } */"}, {"sha": "d7af311ff9b7884166791545fe7b6b1f8e3e4fa3", "filename": "gcc/testsuite/gcc.dg/graphite/interchange-4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7491e5f00c515b69ad34ba3e41175e2017825f61/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Finterchange-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7491e5f00c515b69ad34ba3e41175e2017825f61/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Finterchange-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Finterchange-4.c?ref=7491e5f00c515b69ad34ba3e41175e2017825f61", "patch": "@@ -14,5 +14,5 @@ int foo(int N, int *res)\n   *res = sum + N;\n }\n \n-/* { dg-final { scan-tree-dump-times \"will be interchanged\" 1 \"graphite\" } } */ \n+/* { dg-final { scan-tree-dump-times \"will be interchanged\" 1 \"graphite\" { xfail *-*-* } } } */ \n /* { dg-final { cleanup-tree-dump \"graphite\" } } */"}, {"sha": "7128fa3207333e7fb25e6114d0c5b691dc73be7f", "filename": "gcc/testsuite/gcc.dg/graphite/interchange-7.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7491e5f00c515b69ad34ba3e41175e2017825f61/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Finterchange-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7491e5f00c515b69ad34ba3e41175e2017825f61/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Finterchange-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Finterchange-7.c?ref=7491e5f00c515b69ad34ba3e41175e2017825f61", "patch": "@@ -10,5 +10,5 @@ double foo(double *a)\n        return r;\n }\n \n-/* { dg-final { scan-tree-dump-times \"will be interchanged\" 1 \"graphite\" } } */ \n+/* { dg-final { scan-tree-dump-times \"will be interchanged\" 1 \"graphite\" { xfail *-*-* } } } */ \n /* { dg-final { cleanup-tree-dump \"graphite\" } } */"}]}