{"sha": "ca0ddb398fb6173eb97c5d70265e79b9ea2bdc9d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2EwZGRiMzk4ZmI2MTczZWI5N2M1ZDcwMjY1ZTc5YjllYTJiZGM5ZA==", "commit": {"author": {"name": "Iain Buclaw", "email": "ibuclaw@gcc.gnu.org", "date": "2019-04-29T05:42:48Z"}, "committer": {"name": "Iain Buclaw", "email": "ibuclaw@gcc.gnu.org", "date": "2019-04-29T05:42:48Z"}, "message": "libphobos: Fix multilib builds for s390x-linux-gnu\n\nMerges upstream druntime aab44549, phobos 3dc363783.\n\nReviewed-on: https://github.com/dlang/druntime/pull/2590\n\t     https://github.com/dlang/phobos/pull/6983\n\nlibphobos/ChangeLog:\n\n2019-04-28  Iain Buclaw  <ibuclaw@gdcproject.org>\n\n\t* libdruntime/gcc/sections/elf_shared.d (IBMZ_Any): Define when\n\tversion S390 or SystemZ.  Use condition instead of SystemZ.\n\t(getTLSRange): Return null on GNU_EMUTLS targets.\n\nFrom-SVN: r270639", "tree": {"sha": "b74922652edb3757230c8158fc835b10c7113bc7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b74922652edb3757230c8158fc835b10c7113bc7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ca0ddb398fb6173eb97c5d70265e79b9ea2bdc9d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca0ddb398fb6173eb97c5d70265e79b9ea2bdc9d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca0ddb398fb6173eb97c5d70265e79b9ea2bdc9d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca0ddb398fb6173eb97c5d70265e79b9ea2bdc9d/comments", "author": null, "committer": null, "parents": [{"sha": "be79ec008e8ef292fa1e770d2e87bcb40861f3ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be79ec008e8ef292fa1e770d2e87bcb40861f3ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be79ec008e8ef292fa1e770d2e87bcb40861f3ea"}], "stats": {"total": 143, "additions": 122, "deletions": 21}, "files": [{"sha": "dec75f7cb33e2a70446472dade36aa6f2701221d", "filename": "libphobos/libdruntime/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca0ddb398fb6173eb97c5d70265e79b9ea2bdc9d/libphobos%2Flibdruntime%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca0ddb398fb6173eb97c5d70265e79b9ea2bdc9d/libphobos%2Flibdruntime%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2FMERGE?ref=ca0ddb398fb6173eb97c5d70265e79b9ea2bdc9d", "patch": "@@ -1,4 +1,4 @@\n-1ca80e4e0cf460575752a0c157ca52c184f4b982\n+aab44549221cb29434fe2feccaf1174af54dd79d\n \n The first line of this file holds the git revision number of the last\n merge done from the dlang/druntime repository."}, {"sha": "e242d2b28767e66fc7b9d2742462a857c6fc5d4c", "filename": "libphobos/libdruntime/core/sys/linux/link.d", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca0ddb398fb6173eb97c5d70265e79b9ea2bdc9d/libphobos%2Flibdruntime%2Fcore%2Fsys%2Flinux%2Flink.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca0ddb398fb6173eb97c5d70265e79b9ea2bdc9d/libphobos%2Flibdruntime%2Fcore%2Fsys%2Flinux%2Flink.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Flinux%2Flink.d?ref=ca0ddb398fb6173eb97c5d70265e79b9ea2bdc9d", "patch": "@@ -18,8 +18,10 @@ version (PPC)     version = PPC_Any;\n version (PPC64)   version = PPC_Any;\n version (RISCV32) version = RISCV_Any;\n version (RISCV64) version = RISCV_Any;\n+version (S390)    version = IBMZ_Any;\n version (SPARC)   version = SPARC_Any;\n version (SPARC64) version = SPARC_Any;\n+version (SystemZ) version = IBMZ_Any;\n version (X86)     version = X86_Any;\n version (X86_64)  version = X86_Any;\n \n@@ -71,11 +73,14 @@ else version (SPARC_Any)\n     alias __WORDSIZE __ELF_NATIVE_CLASS;\n     alias uint32_t Elf_Symndx;\n }\n-else version (SystemZ)\n+else version (IBMZ_Any)\n {\n     // http://sourceware.org/git/?p=glibc.git;a=blob;f=sysdeps/unix/sysv/linux/s390/bits/elfclass.h\n     alias __WORDSIZE __ELF_NATIVE_CLASS;\n-    alias uint64_t Elf_Symndx;\n+    static if (__WORDSIZE == 64)\n+        alias uint64_t Elf_Symndx;\n+    else\n+        alias uint32_t Elf_Symndx;\n }\n else\n     static assert(0, \"unimplemented\");"}, {"sha": "fcdbca496c40627e9e0a3adeadf3ed5ffc3d1a43", "filename": "libphobos/libdruntime/core/sys/posix/setjmp.d", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca0ddb398fb6173eb97c5d70265e79b9ea2bdc9d/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsetjmp.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca0ddb398fb6173eb97c5d70265e79b9ea2bdc9d/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsetjmp.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsetjmp.d?ref=ca0ddb398fb6173eb97c5d70265e79b9ea2bdc9d", "patch": "@@ -153,6 +153,15 @@ version (CRuntime_Glibc)\n         }\n         alias __jmp_buf = __riscv_jmp_buf[1];\n     }\n+    else version (S390)\n+    {\n+        struct __s390_jmp_buf\n+        {\n+            c_long[10] __gregs;\n+            c_long[4] __fpregs;\n+        }\n+        alias __jmp_buf = __s390_jmp_buf[1];\n+    }\n     else version (SystemZ)\n     {\n         struct __s390_jmp_buf"}, {"sha": "76e4460550df1bdbcd225ba8a813c8c064f4be73", "filename": "libphobos/libdruntime/core/sys/posix/sys/stat.d", "status": "modified", "additions": 76, "deletions": 0, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca0ddb398fb6173eb97c5d70265e79b9ea2bdc9d/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsys%2Fstat.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca0ddb398fb6173eb97c5d70265e79b9ea2bdc9d/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsys%2Fstat.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsys%2Fstat.d?ref=ca0ddb398fb6173eb97c5d70265e79b9ea2bdc9d", "patch": "@@ -791,6 +791,82 @@ version (CRuntime_Glibc)\n         }\n         static assert(stat_t.sizeof == 144);\n     }\n+    else version (S390)\n+    {\n+        private\n+        {\n+            alias __dev_t = ulong;\n+            alias __ino_t = c_ulong;\n+            alias __ino64_t = ulong;\n+            alias __mode_t = uint;\n+            alias __nlink_t = uint;\n+            alias __uid_t = uint;\n+            alias __gid_t = uint;\n+            alias __off_t = c_long;\n+            alias __off64_t = long;\n+            alias __blksize_t = c_long;\n+            alias __blkcnt_t = c_long;\n+            alias __blkcnt64_t = long;\n+            alias __timespec = timespec;\n+            alias __time_t = time_t;\n+        }\n+        struct stat_t\n+        {\n+            __dev_t st_dev;\n+            uint __pad1;\n+            static if (!__USE_FILE_OFFSET64)\n+                __ino_t st_ino;\n+            else\n+                __ino_t __st_ino;\n+            __mode_t st_mode;\n+            __nlink_t st_nlink;\n+            __uid_t st_uid;\n+            __gid_t st_gid;\n+            __dev_t st_rdev;\n+            uint __pad2;\n+            static if (!__USE_FILE_OFFSET64)\n+                __off_t st_size;\n+            else\n+                __off64_t st_size;\n+            __blksize_t st_blksize;\n+            static if (!__USE_FILE_OFFSET64)\n+                __blkcnt_t st_blocks;\n+            else\n+                __blkcnt64_t st_blocks;\n+            static if (__USE_XOPEN2K8)\n+            {\n+                __timespec st_atim;\n+                __timespec st_mtim;\n+                __timespec st_ctim;\n+                extern(D)\n+                {\n+                    @property ref time_t st_atime() { return st_atim.tv_sec; }\n+                    @property ref time_t st_mtime() { return st_mtim.tv_sec; }\n+                    @property ref time_t st_ctime() { return st_ctim.tv_sec; }\n+                }\n+            }\n+            else\n+            {\n+                __time_t st_atime;\n+                c_ulong st_atimensec;\n+                __time_t st_mtime;\n+                c_ulong st_mtimensec;\n+                __time_t st_ctime;\n+                c_ulong st_ctimensec;\n+            }\n+            static if (!__USE_FILE_OFFSET64)\n+            {\n+                c_ulong __glibc_reserved4;\n+                c_ulong __glibc_reserved5;\n+            }\n+            else\n+                __ino64_t st_ino;\n+        }\n+        static if (__USE_FILE_OFFSET64)\n+            static assert(stat_t.sizeof == 104);\n+        else\n+            static assert(stat_t.sizeof == 88);\n+    }\n     else version (SystemZ)\n     {\n         private"}, {"sha": "d664f2e5e41305e722ca874fa798851b8b4f853e", "filename": "libphobos/libdruntime/core/sys/posix/ucontext.d", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca0ddb398fb6173eb97c5d70265e79b9ea2bdc9d/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fucontext.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca0ddb398fb6173eb97c5d70265e79b9ea2bdc9d/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fucontext.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fucontext.d?ref=ca0ddb398fb6173eb97c5d70265e79b9ea2bdc9d", "patch": "@@ -25,8 +25,10 @@ nothrow:\n \n version (RISCV32) version = RISCV_Any;\n version (RISCV64) version = RISCV_Any;\n+version (S390)    version = IBMZ_Any;\n version (SPARC)   version = SPARC_Any;\n version (SPARC64) version = SPARC_Any;\n+version (SystemZ) version = IBMZ_Any;\n version (X86)     version = X86_Any;\n version (X86_64)  version = X86_Any;\n \n@@ -719,7 +721,7 @@ version (CRuntime_Glibc)\n         alias greg_t = c_ulong;\n         alias gregset_t = greg_t[NGREG];\n     }\n-    else version (SystemZ)\n+    else version (IBMZ_Any)\n     {\n         public import core.sys.posix.signal : sigset_t;\n "}, {"sha": "7f9036bf5052861960f8a1d4a20838437c5c519c", "filename": "libphobos/libdruntime/gcc/sections/elf_shared.d", "status": "modified", "additions": 21, "deletions": 14, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca0ddb398fb6173eb97c5d70265e79b9ea2bdc9d/libphobos%2Flibdruntime%2Fgcc%2Fsections%2Felf_shared.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca0ddb398fb6173eb97c5d70265e79b9ea2bdc9d/libphobos%2Flibdruntime%2Fgcc%2Fsections%2Felf_shared.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fgcc%2Fsections%2Felf_shared.d?ref=ca0ddb398fb6173eb97c5d70265e79b9ea2bdc9d", "patch": "@@ -24,6 +24,8 @@ module gcc.sections.elf_shared;\n \n version (RISCV32) version = RISCV_Any;\n version (RISCV64) version = RISCV_Any;\n+version (S390)    version = IBMZ_Any;\n+version (SystemZ) version = IBMZ_Any;\n \n version (CRuntime_Glibc) enum SharedELF = true;\n else version (CRuntime_Musl) enum SharedELF = true;\n@@ -1060,7 +1062,7 @@ else version (MIPS32)\n     enum TLS_DTV_OFFSET = 0x8000;\n else version (MIPS64)\n     enum TLS_DTV_OFFSET = 0x8000;\n-else version (SystemZ)\n+else version (IBMZ_Any)\n     enum TLS_DTV_OFFSET = 0x0;\n else\n     static assert( false, \"Platform not supported.\" );\n@@ -1070,20 +1072,25 @@ void[] getTLSRange(size_t mod, size_t sz) nothrow @nogc\n     if (mod == 0)\n         return null;\n \n-    version (Solaris)\n+    version (GNU_EMUTLS)\n+        return null;    // Handled in scanTLSRanges().\n+    else\n     {\n-        static if (!OS_Have_Dlpi_Tls_Modid)\n-            mod -= 1;\n-    }\n+        version (Solaris)\n+        {\n+            static if (!OS_Have_Dlpi_Tls_Modid)\n+                mod -= 1;\n+        }\n \n-    // base offset\n-    auto ti = tls_index(mod, 0);\n-    version (SystemZ)\n-    {\n-        auto idx = cast(void *)__tls_get_addr_internal(&ti)\n-            + cast(ulong)__builtin_thread_pointer();\n-        return idx[0 .. sz];\n+        // base offset\n+        auto ti = tls_index(mod, 0);\n+        version (IBMZ_Any)\n+        {\n+            auto idx = cast(void *)__tls_get_addr_internal(&ti)\n+                + cast(ulong)__builtin_thread_pointer();\n+            return idx[0 .. sz];\n+        }\n+        else\n+            return (__tls_get_addr(&ti)-TLS_DTV_OFFSET)[0 .. sz];\n     }\n-    else\n-        return (__tls_get_addr(&ti)-TLS_DTV_OFFSET)[0 .. sz];\n }"}, {"sha": "cfac5c66b4ecc0c22fe6772fe1611e86a4d0d1ee", "filename": "libphobos/src/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca0ddb398fb6173eb97c5d70265e79b9ea2bdc9d/libphobos%2Fsrc%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca0ddb398fb6173eb97c5d70265e79b9ea2bdc9d/libphobos%2Fsrc%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Fsrc%2FMERGE?ref=ca0ddb398fb6173eb97c5d70265e79b9ea2bdc9d", "patch": "@@ -1,4 +1,4 @@\n-b5e9661a089b6514e01fa5195c0f2bc9cc06eddd\n+3dc363783ea7b1e82336983486a14f3f44bbeadd\n \n The first line of this file holds the git revision number of the last\n merge done from the dlang/phobos repository."}, {"sha": "7e6a97f1dcdcc43e18d130fe42fc64d2ae91e719", "filename": "libphobos/src/std/math.d", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca0ddb398fb6173eb97c5d70265e79b9ea2bdc9d/libphobos%2Fsrc%2Fstd%2Fmath.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca0ddb398fb6173eb97c5d70265e79b9ea2bdc9d/libphobos%2Fsrc%2Fstd%2Fmath.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Fsrc%2Fstd%2Fmath.d?ref=ca0ddb398fb6173eb97c5d70265e79b9ea2bdc9d", "patch": "@@ -160,8 +160,10 @@ version (MIPS32)    version = MIPS_Any;\n version (MIPS64)    version = MIPS_Any;\n version (AArch64)   version = ARM_Any;\n version (ARM)       version = ARM_Any;\n+version (S390)      version = IBMZ_Any;\n version (SPARC)     version = SPARC_Any;\n version (SPARC64)   version = SPARC_Any;\n+version (SystemZ)   version = IBMZ_Any;\n version (RISCV32)   version = RISCV_Any;\n version (RISCV64)   version = RISCV_Any;\n \n@@ -5241,7 +5243,7 @@ struct FloatingPointControl\n                                  | inexactException,\n         }\n     }\n-    else version (SystemZ)\n+    else version (IBMZ_Any)\n     {\n         enum : ExceptionMask\n         {\n@@ -5379,7 +5381,7 @@ private:\n     {\n         alias ControlState = ulong;\n     }\n-    else version (SystemZ)\n+    else version (IBMZ_Any)\n     {\n         alias ControlState = uint;\n     }"}]}