{"sha": "4dc320a596bdc1f272d744f622fb935337b01954", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGRjMzIwYTU5NmJkYzFmMjcyZDc0NGY2MjJmYjkzNTMzN2IwMTk1NA==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@cygnus.com", "date": "1999-10-14T04:07:03Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "1999-10-14T04:07:03Z"}, "message": "genrecog.c (maybe_both_true_2): Don't compare modes of two DT_pred tests.\n\n        * genrecog.c (maybe_both_true_2): Don't compare modes of\n        two DT_pred tests.\n        (process_tree): Elide peephole2_insns.  Invoke simplify_tests\n        after find_afterward.\n        (debug_decision_1): Dump next and afterward codes.\n\nCo-Authored-By: Jim Wilson <wilson@cygnus.com>\n\nFrom-SVN: r29958", "tree": {"sha": "93cc3eb4893e7ca45e78b76dd977b0701cee2c08", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/93cc3eb4893e7ca45e78b76dd977b0701cee2c08"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4dc320a596bdc1f272d744f622fb935337b01954", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4dc320a596bdc1f272d744f622fb935337b01954", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4dc320a596bdc1f272d744f622fb935337b01954", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4dc320a596bdc1f272d744f622fb935337b01954/comments", "author": null, "committer": null, "parents": [{"sha": "bcdaba58ffeec82ffd876d353ad94b7317cca9b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bcdaba58ffeec82ffd876d353ad94b7317cca9b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bcdaba58ffeec82ffd876d353ad94b7317cca9b7"}], "stats": {"total": 38, "additions": 29, "deletions": 9}, "files": [{"sha": "7d80cd3bb130cc350d80c851dbb79b7b8a0789fe", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dc320a596bdc1f272d744f622fb935337b01954/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dc320a596bdc1f272d744f622fb935337b01954/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4dc320a596bdc1f272d744f622fb935337b01954", "patch": "@@ -1,3 +1,12 @@\n+Wed Oct 13 21:04:45 1999  Richard Henderson  <rth@cygnus.com>\n+\t\t\t  Jim Wilson  <wilson@cygnus.com>\n+\n+\t* genrecog.c (maybe_both_true_2): Don't compare modes of\n+\ttwo DT_pred tests.\n+\t(process_tree): Elide peephole2_insns.  Invoke simplify_tests\n+\tafter find_afterward.\n+\t(debug_decision_1): Dump next and afterward codes.\n+\n Wed Oct 13 20:35:16 1999  Richard Henderson  <rth@cygnus.com>\n \n \t* rtl.c (dump_and_abort): Remove."}, {"sha": "251e5e9ac1f9de67e521ceff0c201ba568253b35", "filename": "gcc/genrecog.c", "status": "modified", "additions": 20, "deletions": 9, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dc320a596bdc1f272d744f622fb935337b01954/gcc%2Fgenrecog.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dc320a596bdc1f272d744f622fb935337b01954/gcc%2Fgenrecog.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenrecog.c?ref=4dc320a596bdc1f272d744f622fb935337b01954", "patch": "@@ -837,12 +837,10 @@ maybe_both_true_2 (d1, d2)\n \t      if (d1->u.pred.mode != d2->u.mode)\n \t\treturn 0;\n \t    }\n-\t  else if (d2->type == DT_pred)\n-\t    {\n-\t      if (d2->u.pred.mode != VOIDmode\n-\t\t  && d1->u.pred.mode != d2->u.pred.mode)\n-\t\treturn 0;\n-\t    }\n+\t  /* Don't check two predicate modes here, because if both predicates\n+\t     accept CONST_INT, then both can still be true even if the modes\n+\t     are different.  If they don't accept CONST_INT, there will be a\n+\t     separate DT_mode that will make maybe_both_true_1 return 0.  */\n \t}\n \n       if (d1->u.pred.index >= 0)\n@@ -2270,17 +2268,28 @@ process_tree (head, subroutine_type)\n      struct decision_head *head;\n      enum routine_type subroutine_type;\n {\n-  if (head->first != NULL)\n+  if (head->first == NULL)\n+    {\n+      /* We can elide peephole2_insns, but not recog or split_insns.  */\n+      if (subroutine_type == PEEPHOLE2)\n+\treturn;\n+    }\n+  else\n     {\n       factor_tests (head);\n-      simplify_tests (head);\n \n       next_subroutine_number = 0;\n       break_out_subroutines (head, 1);\n       find_afterward (head, NULL);\n \n+      /* We run this after find_afterward, because find_afterward needs\n+\t the redundant DT_mode tests on predicates to determine whether\n+\t two tests can both be true or not.  */\n+      simplify_tests(head);\n+\n       write_subroutines (head, subroutine_type);\n     }\n+\n   write_subroutine (head, subroutine_type);\n }\n \f\n@@ -2527,7 +2536,9 @@ debug_decision_1 (d, indent)\n \t  debug_decision_2 (test);\n \t}\n     }\n-  fprintf (stderr, \"} %d\\n\", d->number);\n+  fprintf (stderr, \"} %d n %d a %d\\n\", d->number,\n+\t   (d->next ? d->next->number : -1),\n+\t   (d->afterward ? d->afterward->number : -1));\n }\n \n static void"}]}