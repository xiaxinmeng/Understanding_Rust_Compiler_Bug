{"sha": "5ff37842fb091ebc79d87b5e7770bc335f2a8591", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWZmMzc4NDJmYjA5MWViYzc5ZDg3YjVlNzc3MGJjMzM1ZjJhODU5MQ==", "commit": {"author": {"name": "Thomas Young", "email": "wenzhang5800@gmail.com", "date": "2021-06-26T17:08:03Z"}, "committer": {"name": "Thomas Young", "email": "wenzhang5800@gmail.com", "date": "2021-06-26T17:19:12Z"}, "message": "mark live symbol in for expr without test case", "tree": {"sha": "4377b51b6e97974561e71d148b73b31cc3fe3426", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4377b51b6e97974561e71d148b73b31cc3fe3426"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5ff37842fb091ebc79d87b5e7770bc335f2a8591", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ff37842fb091ebc79d87b5e7770bc335f2a8591", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ff37842fb091ebc79d87b5e7770bc335f2a8591", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ff37842fb091ebc79d87b5e7770bc335f2a8591/comments", "author": {"login": "thomasyonug", "id": 17464490, "node_id": "MDQ6VXNlcjE3NDY0NDkw", "avatar_url": "https://avatars.githubusercontent.com/u/17464490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thomasyonug", "html_url": "https://github.com/thomasyonug", "followers_url": "https://api.github.com/users/thomasyonug/followers", "following_url": "https://api.github.com/users/thomasyonug/following{/other_user}", "gists_url": "https://api.github.com/users/thomasyonug/gists{/gist_id}", "starred_url": "https://api.github.com/users/thomasyonug/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thomasyonug/subscriptions", "organizations_url": "https://api.github.com/users/thomasyonug/orgs", "repos_url": "https://api.github.com/users/thomasyonug/repos", "events_url": "https://api.github.com/users/thomasyonug/events{/privacy}", "received_events_url": "https://api.github.com/users/thomasyonug/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thomasyonug", "id": 17464490, "node_id": "MDQ6VXNlcjE3NDY0NDkw", "avatar_url": "https://avatars.githubusercontent.com/u/17464490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thomasyonug", "html_url": "https://github.com/thomasyonug", "followers_url": "https://api.github.com/users/thomasyonug/followers", "following_url": "https://api.github.com/users/thomasyonug/following{/other_user}", "gists_url": "https://api.github.com/users/thomasyonug/gists{/gist_id}", "starred_url": "https://api.github.com/users/thomasyonug/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thomasyonug/subscriptions", "organizations_url": "https://api.github.com/users/thomasyonug/orgs", "repos_url": "https://api.github.com/users/thomasyonug/repos", "events_url": "https://api.github.com/users/thomasyonug/events{/privacy}", "received_events_url": "https://api.github.com/users/thomasyonug/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5386fcdf20d8d9e769fb6ac8badfd39e8c9ebc91", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5386fcdf20d8d9e769fb6ac8badfd39e8c9ebc91", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5386fcdf20d8d9e769fb6ac8badfd39e8c9ebc91"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "681ccf8ad65b4e0e50c9da777f92deaf87674b17", "filename": "gcc/rust/hir/tree/rust-hir-expr.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ff37842fb091ebc79d87b5e7770bc335f2a8591/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-expr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ff37842fb091ebc79d87b5e7770bc335f2a8591/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-expr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-expr.h?ref=5ff37842fb091ebc79d87b5e7770bc335f2a8591", "patch": "@@ -3452,6 +3452,8 @@ class ForLoopExpr : public BaseLoopExpr\n \n   void accept_vis (HIRVisitor &vis) override;\n \n+  std::unique_ptr<Expr> &get_iterator_expr () { return iterator_expr; }\n+\n protected:\n   /* Use covariance to implement clone function as returning this object rather\n    * than base */"}, {"sha": "d34587d4f86ab831d1670a198fabbd4d9405dd2f", "filename": "gcc/rust/lint/rust-lint-marklive.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ff37842fb091ebc79d87b5e7770bc335f2a8591/gcc%2Frust%2Flint%2Frust-lint-marklive.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ff37842fb091ebc79d87b5e7770bc335f2a8591/gcc%2Frust%2Flint%2Frust-lint-marklive.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Flint%2Frust-lint-marklive.h?ref=5ff37842fb091ebc79d87b5e7770bc335f2a8591", "patch": "@@ -137,6 +137,12 @@ class MarkLive : public MarkLiveBase\n     expr.get_cond ()->accept_vis (*this);\n   }\n \n+  void visit (HIR::ForLoopExpr &expr) override\n+  {\n+    expr.get_loop_block ()->accept_vis (*this);\n+    expr.get_iterator_expr ()->accept_vis (*this);\n+  }\n+\n   void visit (HIR::ExprStmtWithoutBlock &stmt) override\n   {\n     stmt.get_expr ()->accept_vis (*this);"}]}