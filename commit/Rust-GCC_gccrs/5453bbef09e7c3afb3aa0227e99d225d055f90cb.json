{"sha": "5453bbef09e7c3afb3aa0227e99d225d055f90cb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTQ1M2JiZWYwOWU3YzNhZmIzYWEwMjI3ZTk5ZDIyNWQwNTVmOTBjYg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2011-03-30T02:16:22Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-03-30T02:16:22Z"}, "message": "re PR c++/48265 ([C++0x] ICE: SIGSEGV (recursion in value_dependent_expression_p) when variable is used uninitialised)\n\n\tPR c++/48265\n\t* pt.c (value_dependent_expression_p) [VAR_DECL]: Make sure\n\tthe variable is constant before looking at its initializer.\n\nFrom-SVN: r171714", "tree": {"sha": "344a415d9fb4d0e3b55bb77e4e7d3a3466f04a17", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/344a415d9fb4d0e3b55bb77e4e7d3a3466f04a17"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5453bbef09e7c3afb3aa0227e99d225d055f90cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5453bbef09e7c3afb3aa0227e99d225d055f90cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5453bbef09e7c3afb3aa0227e99d225d055f90cb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5453bbef09e7c3afb3aa0227e99d225d055f90cb/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ad3b266ba5b48f3ce496a387a751c411a6a40cd6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad3b266ba5b48f3ce496a387a751c411a6a40cd6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad3b266ba5b48f3ce496a387a751c411a6a40cd6"}], "stats": {"total": 19, "additions": 17, "deletions": 2}, "files": [{"sha": "855844688b66fdaec513e03648013f6aa405c3fa", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5453bbef09e7c3afb3aa0227e99d225d055f90cb/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5453bbef09e7c3afb3aa0227e99d225d055f90cb/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=5453bbef09e7c3afb3aa0227e99d225d055f90cb", "patch": "@@ -1,5 +1,9 @@\n 2011-03-29  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/48265\n+\t* pt.c (value_dependent_expression_p) [VAR_DECL]: Make sure\n+\tthe variable is constant before looking at its initializer.\n+\n \tPR c++/48319\n \t* pt.c (value_dependent_expression_p): Handle TEMPLATE_ID_EXPR.\n "}, {"sha": "5960e4624b633ed9681bf99b52d4e298ec58b429", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5453bbef09e7c3afb3aa0227e99d225d055f90cb/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5453bbef09e7c3afb3aa0227e99d225d055f90cb/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=5453bbef09e7c3afb3aa0227e99d225d055f90cb", "patch": "@@ -18085,10 +18085,10 @@ value_dependent_expression_p (tree expression)\n       return value_dependent_expression_p (DECL_INITIAL (expression));\n \n     case VAR_DECL:\n-       /* A constant with integral or enumeration type and is initialized\n+       /* A constant with literal type and is initialized\n \t  with an expression that is value-dependent.  */\n       if (DECL_INITIAL (expression)\n-\t  && INTEGRAL_OR_ENUMERATION_TYPE_P (TREE_TYPE (expression))\n+\t  && decl_constant_var_p (expression)\n \t  && value_dependent_expression_p (DECL_INITIAL (expression)))\n \treturn true;\n       return false;"}, {"sha": "ede28b20e37e2ff34ee089ea644c48c222212d7e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5453bbef09e7c3afb3aa0227e99d225d055f90cb/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5453bbef09e7c3afb3aa0227e99d225d055f90cb/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5453bbef09e7c3afb3aa0227e99d225d055f90cb", "patch": "@@ -1,3 +1,7 @@\n+2011-03-29  Jason Merrill  <jason@redhat.com>\n+\n+\t* g++.dg/cpp0x/regress/value-dep1.C: New.\n+\n 2011-03-29  Steve Ellcey  <sje@cup.hp.com>\n \n \t* gcc.dg/torture/pr47917.c: Use -std=gnu99 on HP-UX."}, {"sha": "112389d4a8ed8aadf596ae436c4ef9076f187673", "filename": "gcc/testsuite/g++.dg/cpp0x/regress/value-dep1.C", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5453bbef09e7c3afb3aa0227e99d225d055f90cb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fregress%2Fvalue-dep1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5453bbef09e7c3afb3aa0227e99d225d055f90cb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fregress%2Fvalue-dep1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fregress%2Fvalue-dep1.C?ref=5453bbef09e7c3afb3aa0227e99d225d055f90cb", "patch": "@@ -0,0 +1,7 @@\n+// PR c++/48265\n+// { dg-options -std=c++0x }\n+\n+template < int > struct S\n+{\n+  S () { const int i = i; i; };\n+};"}]}