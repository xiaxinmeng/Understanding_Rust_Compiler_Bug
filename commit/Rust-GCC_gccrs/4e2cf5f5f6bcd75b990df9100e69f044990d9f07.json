{"sha": "4e2cf5f5f6bcd75b990df9100e69f044990d9f07", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGUyY2Y1ZjVmNmJjZDc1Yjk5MGRmOTEwMGU2OWYwNDQ5OTBkOWYwNw==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2011-04-30T15:54:49Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2011-04-30T15:54:49Z"}, "message": "re PR fortran/48800 (ICE with non-allocatable/pointer deferred-shape array)\n\n2011-04-30  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/48800\n        * decl.c (gfc_match_import): Don't try to find the\n        symbol if already found.\n\n2011-04-30  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/48800\n        * gfortran.dg/interface_37.f90: New.\n\nFrom-SVN: r173219", "tree": {"sha": "5ab8cab34416bd160510840ff567d9b1f98986c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5ab8cab34416bd160510840ff567d9b1f98986c0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4e2cf5f5f6bcd75b990df9100e69f044990d9f07", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e2cf5f5f6bcd75b990df9100e69f044990d9f07", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e2cf5f5f6bcd75b990df9100e69f044990d9f07", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e2cf5f5f6bcd75b990df9100e69f044990d9f07/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2e1df0f00b8625beab3858201673d470cae65687", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e1df0f00b8625beab3858201673d470cae65687", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e1df0f00b8625beab3858201673d470cae65687"}], "stats": {"total": 44, "additions": 43, "deletions": 1}, "files": [{"sha": "07d73768154dceee6e20d8151c53b988f3071601", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e2cf5f5f6bcd75b990df9100e69f044990d9f07/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e2cf5f5f6bcd75b990df9100e69f044990d9f07/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=4e2cf5f5f6bcd75b990df9100e69f044990d9f07", "patch": "@@ -1,3 +1,9 @@\n+2011-04-30  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/48800\n+\t* decl.c (gfc_match_import): Don't try to find the\n+\tsymbol if already found.\n+\n 2011-04-30  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/48746"}, {"sha": "dfbca29a47958fdd62233ce53205b48e6ce2f006", "filename": "gcc/fortran/decl.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e2cf5f5f6bcd75b990df9100e69f044990d9f07/gcc%2Ffortran%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e2cf5f5f6bcd75b990df9100e69f044990d9f07/gcc%2Ffortran%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdecl.c?ref=4e2cf5f5f6bcd75b990df9100e69f044990d9f07", "patch": "@@ -2995,7 +2995,7 @@ gfc_match_import (void)\n \t       gfc_error (\"Type name '%s' at %C is ambiguous\", name);\n \t       return MATCH_ERROR;\n \t    }\n-\t  else if (gfc_current_ns->proc_name->ns->parent !=  NULL\n+\t  else if (!sym && gfc_current_ns->proc_name->ns->parent !=  NULL\n \t\t   && gfc_find_symbol (name,\n \t\t\t\t       gfc_current_ns->proc_name->ns->parent,\n \t\t\t\t       1, &sym))"}, {"sha": "1a802f00ec6b24cdb86560e3def7d8a8445ab3e3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e2cf5f5f6bcd75b990df9100e69f044990d9f07/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e2cf5f5f6bcd75b990df9100e69f044990d9f07/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4e2cf5f5f6bcd75b990df9100e69f044990d9f07", "patch": "@@ -1,3 +1,8 @@\n+2011-04-30  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/48800\n+\t* gfortran.dg/interface_37.f90: New.\n+\n 2011-04-30  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/48746"}, {"sha": "8dbc27630bfcf488be2d585ea1d624ab2ed8b6f1", "filename": "gcc/testsuite/gfortran.dg/interface_37.f90", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e2cf5f5f6bcd75b990df9100e69f044990d9f07/gcc%2Ftestsuite%2Fgfortran.dg%2Finterface_37.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e2cf5f5f6bcd75b990df9100e69f044990d9f07/gcc%2Ftestsuite%2Fgfortran.dg%2Finterface_37.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Finterface_37.f90?ref=4e2cf5f5f6bcd75b990df9100e69f044990d9f07", "patch": "@@ -0,0 +1,31 @@\n+--- /dev/null\n++++ gcc/testsuite/gfortran.dg/interface_36.f90\t2011-04-29 19:10:43.000000000 +0200\n+@@ -0,0 +1,28 @@\n++! { dg-do compile }\n++!\n++! PR fortran/48800\n++!\n++! Contributed by Daniel Carrera\n++!\n++     pure function runge_kutta_step(t, r_, dr, h) result(res)\n++         real, intent(in) :: t, r_(:), h\n++         real, dimension(:), allocatable :: k1, k2, k3, k4, res\n++         integer :: N\n++\n++         interface\n++             pure function dr(t, r_)  ! { dg-error \"cannot have a deferred shape\" }\n++                 real, intent(in) :: t, r_(:)\n++                 real :: dr(:)\n++             end function\n++         end interface\n++\n++         N = size(r_)\n++         allocate(k1(N),k2(N),k3(N),k4(N),res(N))\n++\n++         k1 = dr(t, r_)\n++         k2 = dr(t + h/2, r_ + k1*h/2)\n++         k3 = dr(t + h/2, r_ + k2*h/2)\n++         k4 = dr(t + h  , r_ + k3*h)\n++\n++         res = r_ + (k1 + 2*k2 + 2*k3 + k4) * h/6\n++     end function"}]}