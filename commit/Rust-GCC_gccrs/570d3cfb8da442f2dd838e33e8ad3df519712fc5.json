{"sha": "570d3cfb8da442f2dd838e33e8ad3df519712fc5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTcwZDNjZmI4ZGE0NDJmMmRkODM4ZTMzZThhZDNkZjUxOTcxMmZjNQ==", "commit": {"author": {"name": "Vincent Celier", "email": "celier@adacore.com", "date": "2008-08-04T08:37:57Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-08-04T08:37:57Z"}, "message": "2008-08-04  Vincent Celier  <celier@adacore.com>\n\n\t* prj-proc.adb:\n\t(Copy_Package_Declarations): When inheriting package Naming from a\n\tproject being extended, do not inherit source exception names.\n\nFrom-SVN: r138578", "tree": {"sha": "aa3950e2e03226369d31957c3147b91135bad7d6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aa3950e2e03226369d31957c3147b91135bad7d6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/570d3cfb8da442f2dd838e33e8ad3df519712fc5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/570d3cfb8da442f2dd838e33e8ad3df519712fc5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/570d3cfb8da442f2dd838e33e8ad3df519712fc5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/570d3cfb8da442f2dd838e33e8ad3df519712fc5/comments", "author": {"login": "vcelier", "id": 8888056, "node_id": "MDQ6VXNlcjg4ODgwNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/8888056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vcelier", "html_url": "https://github.com/vcelier", "followers_url": "https://api.github.com/users/vcelier/followers", "following_url": "https://api.github.com/users/vcelier/following{/other_user}", "gists_url": "https://api.github.com/users/vcelier/gists{/gist_id}", "starred_url": "https://api.github.com/users/vcelier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vcelier/subscriptions", "organizations_url": "https://api.github.com/users/vcelier/orgs", "repos_url": "https://api.github.com/users/vcelier/repos", "events_url": "https://api.github.com/users/vcelier/events{/privacy}", "received_events_url": "https://api.github.com/users/vcelier/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "671985569714a1e9f974e6a56d0b554059420c46", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/671985569714a1e9f974e6a56d0b554059420c46", "html_url": "https://github.com/Rust-GCC/gccrs/commit/671985569714a1e9f974e6a56d0b554059420c46"}], "stats": {"total": 124, "additions": 69, "deletions": 55}, "files": [{"sha": "134f85b8b1c48c82d7ead32ca23e195f0f23fe88", "filename": "gcc/ada/prj-proc.adb", "status": "modified", "additions": 69, "deletions": 55, "changes": 124, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/570d3cfb8da442f2dd838e33e8ad3df519712fc5/gcc%2Fada%2Fprj-proc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/570d3cfb8da442f2dd838e33e8ad3df519712fc5/gcc%2Fada%2Fprj-proc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-proc.adb?ref=570d3cfb8da442f2dd838e33e8ad3df519712fc5", "patch": "@@ -83,12 +83,15 @@ package body Prj.Proc is\n    --  Current_Dir is for optimization purposes, avoiding extra system calls.\n \n    procedure Copy_Package_Declarations\n-     (From    : Declarations;\n-      To      : in out Declarations;\n-      New_Loc : Source_Ptr;\n-      In_Tree : Project_Tree_Ref);\n+     (From              : Declarations;\n+      To                : in out Declarations;\n+      New_Loc           : Source_Ptr;\n+      Naming_Restricted : Boolean;\n+      In_Tree           : Project_Tree_Ref);\n    --  Copy a package declaration From to To for a renamed package. Change the\n-   --  locations of all the attributes to New_Loc.\n+   --  locations of all the attributes to New_Loc. When Naming_Restricted is\n+   --  True, do not copy attributes Body, Spec, Implementation and\n+   --  Specification.\n \n    function Expression\n      (Project                : Project_Id;\n@@ -310,10 +313,11 @@ package body Prj.Proc is\n    -------------------------------\n \n    procedure Copy_Package_Declarations\n-     (From    : Declarations;\n-      To      : in out Declarations;\n-      New_Loc : Source_Ptr;\n-      In_Tree : Project_Tree_Ref)\n+     (From              : Declarations;\n+      To                : in out Declarations;\n+      New_Loc           : Source_Ptr;\n+      Naming_Restricted : Boolean;\n+      In_Tree           : Project_Tree_Ref)\n    is\n       V1  : Variable_Id := From.Attributes;\n       V2  : Variable_Id := No_Variable;\n@@ -368,67 +372,73 @@ package body Prj.Proc is\n \n       while A1 /= No_Array loop\n \n-         --  Copy the array\n-\n          Arr := In_Tree.Arrays.Table (A1);\n          A1  := Arr.Next;\n \n-         --  Remove the Next component\n+         if not Naming_Restricted or else\n+           (Arr.Name /= Snames.Name_Body\n+            and then Arr.Name /= Snames.Name_Spec\n+            and then Arr.Name /= Snames.Name_Implementation\n+            and then Arr.Name /= Snames.Name_Specification)\n+         then\n+            --  Remove the Next component\n \n-         Arr.Next := No_Array;\n+            Arr.Next := No_Array;\n \n-         Array_Table.Increment_Last (In_Tree.Arrays);\n+            Array_Table.Increment_Last (In_Tree.Arrays);\n \n-         --  Create new Array declaration\n-         if To.Arrays = No_Array then\n-            To.Arrays := Array_Table.Last (In_Tree.Arrays);\n+            --  Create new Array declaration\n \n-         else\n-            In_Tree.Arrays.Table (A2).Next :=\n-              Array_Table.Last (In_Tree.Arrays);\n-         end if;\n+            if To.Arrays = No_Array then\n+               To.Arrays := Array_Table.Last (In_Tree.Arrays);\n \n-         A2 := Array_Table.Last (In_Tree.Arrays);\n+            else\n+               In_Tree.Arrays.Table (A2).Next :=\n+                 Array_Table.Last (In_Tree.Arrays);\n+            end if;\n \n-         --  Don't store the array, as its first element has not been set yet\n+            A2 := Array_Table.Last (In_Tree.Arrays);\n \n-         --  Copy the array elements of the array\n+            --  Don't store the array as its first element has not been set yet\n \n-         E1 := Arr.Value;\n-         Arr.Value := No_Array_Element;\n+            --  Copy the array elements of the array\n \n-         while E1 /= No_Array_Element loop\n+            E1 := Arr.Value;\n+            Arr.Value := No_Array_Element;\n+            while E1 /= No_Array_Element loop\n \n-            --  Copy the array element\n+               --  Copy the array element\n \n-            Elm := In_Tree.Array_Elements.Table (E1);\n-            E1 := Elm.Next;\n+               Elm := In_Tree.Array_Elements.Table (E1);\n+               E1 := Elm.Next;\n \n-            --  Remove the Next component\n+               --  Remove the Next component\n \n-            Elm.Next := No_Array_Element;\n+               Elm.Next := No_Array_Element;\n \n-            --  Change the location\n+               --  Change the location\n \n-            Elm.Value.Location := New_Loc;\n-            Array_Element_Table.Increment_Last (In_Tree.Array_Elements);\n+               Elm.Value.Location := New_Loc;\n+               Array_Element_Table.Increment_Last (In_Tree.Array_Elements);\n \n-            --  Create new array element\n+               --  Create new array element\n \n-            if Arr.Value = No_Array_Element then\n-               Arr.Value := Array_Element_Table.Last (In_Tree.Array_Elements);\n-            else\n-               In_Tree.Array_Elements.Table (E2).Next :=\n-                 Array_Element_Table.Last (In_Tree.Array_Elements);\n-            end if;\n+               if Arr.Value = No_Array_Element then\n+                  Arr.Value :=\n+                    Array_Element_Table.Last (In_Tree.Array_Elements);\n+               else\n+                  In_Tree.Array_Elements.Table (E2).Next :=\n+                    Array_Element_Table.Last (In_Tree.Array_Elements);\n+               end if;\n \n-            E2 := Array_Element_Table.Last (In_Tree.Array_Elements);\n-            In_Tree.Array_Elements.Table (E2) := Elm;\n-         end loop;\n+               E2 := Array_Element_Table.Last (In_Tree.Array_Elements);\n+               In_Tree.Array_Elements.Table (E2) := Elm;\n+            end loop;\n \n-         --  Finally, store the new array\n+            --  Finally, store the new array\n \n-         In_Tree.Arrays.Table (A2) := Arr;\n+            In_Tree.Arrays.Table (A2) := Arr;\n+         end if;\n       end loop;\n    end Copy_Package_Declarations;\n \n@@ -1343,14 +1353,15 @@ package body Prj.Proc is\n                            --  renaming declaration.\n \n                            Copy_Package_Declarations\n-                             (From     =>\n+                             (From              =>\n                                 In_Tree.Packages.Table (Renamed_Package).Decl,\n-                              To      =>\n+                              To                =>\n                                 In_Tree.Packages.Table (New_Pkg).Decl,\n-                              New_Loc =>\n+                              New_Loc           =>\n                                 Location_Of\n                                   (Current_Item, From_Project_Node_Tree),\n-                              In_Tree => In_Tree);\n+                              Naming_Restricted => False,\n+                              In_Tree           => In_Tree);\n                         end;\n \n                      --  Standard package declaration, not renaming\n@@ -2730,10 +2741,13 @@ package body Prj.Proc is\n                            Next   => Processed_Data.Decl.Packages);\n                         Processed_Data.Decl.Packages := Current_Pkg;\n                         Copy_Package_Declarations\n-                          (From  => Element.Decl,\n-                           To    => In_Tree.Packages.Table (Current_Pkg).Decl,\n-                           New_Loc => No_Location,\n-                           In_Tree => In_Tree);\n+                          (From              => Element.Decl,\n+                           To                =>\n+                             In_Tree.Packages.Table (Current_Pkg).Decl,\n+                           New_Loc           => No_Location,\n+                           Naming_Restricted =>\n+                             Element.Name = Snames.Name_Naming,\n+                           In_Tree           => In_Tree);\n                      end if;\n \n                      Extended_Pkg := Element.Next;"}]}