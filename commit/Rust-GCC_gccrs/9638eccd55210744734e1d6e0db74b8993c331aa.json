{"sha": "9638eccd55210744734e1d6e0db74b8993c331aa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTYzOGVjY2Q1NTIxMDc0NDczNGUxZDZlMGRiNzRiODk5M2MzMzFhYQ==", "commit": {"author": {"name": "Ville Voutilainen", "email": "ville.voutilainen@gmail.com", "date": "2015-08-13T14:55:46Z"}, "committer": {"name": "Ville Voutilainen", "email": "ville@gcc.gnu.org", "date": "2015-08-13T14:55:46Z"}, "message": "Implement std::experimental::fundamentals_v2::make_array and std::experimental::fundamentals_v2::to_array.\n\n2015-08-13  Ville Voutilainen  <ville.voutilainen@gmail.com>\n\n\tImplement std::experimental::fundamentals_v2::make_array and\n\tstd::experimental::fundamentals_v2::to_array.\n\t* include/Makefile.am: Add array.\n\t* include/Makefile.in: Add array.\n\t* include/experimental/array: New.\n\t* testsuite/experimental/array/make_array.cc: Likewise.\n\t* testsuite/experimental/array/neg.cc: Likewise.\n\t* doc/html/manual/status.html: Mark make_array as Y.\n\t* doc/xml/manual/status_cxx2017.xml: Likewise.\n\nFrom-SVN: r226865", "tree": {"sha": "e15a5bc2a1c2244ef0bd87e60aed7712973d6c53", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e15a5bc2a1c2244ef0bd87e60aed7712973d6c53"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9638eccd55210744734e1d6e0db74b8993c331aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9638eccd55210744734e1d6e0db74b8993c331aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9638eccd55210744734e1d6e0db74b8993c331aa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9638eccd55210744734e1d6e0db74b8993c331aa/comments", "author": {"login": "villevoutilainen", "id": 963599, "node_id": "MDQ6VXNlcjk2MzU5OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/963599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/villevoutilainen", "html_url": "https://github.com/villevoutilainen", "followers_url": "https://api.github.com/users/villevoutilainen/followers", "following_url": "https://api.github.com/users/villevoutilainen/following{/other_user}", "gists_url": "https://api.github.com/users/villevoutilainen/gists{/gist_id}", "starred_url": "https://api.github.com/users/villevoutilainen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/villevoutilainen/subscriptions", "organizations_url": "https://api.github.com/users/villevoutilainen/orgs", "repos_url": "https://api.github.com/users/villevoutilainen/repos", "events_url": "https://api.github.com/users/villevoutilainen/events{/privacy}", "received_events_url": "https://api.github.com/users/villevoutilainen/received_events", "type": "User", "site_admin": false}, "committer": {"login": "villevoutilainen", "id": 963599, "node_id": "MDQ6VXNlcjk2MzU5OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/963599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/villevoutilainen", "html_url": "https://github.com/villevoutilainen", "followers_url": "https://api.github.com/users/villevoutilainen/followers", "following_url": "https://api.github.com/users/villevoutilainen/following{/other_user}", "gists_url": "https://api.github.com/users/villevoutilainen/gists{/gist_id}", "starred_url": "https://api.github.com/users/villevoutilainen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/villevoutilainen/subscriptions", "organizations_url": "https://api.github.com/users/villevoutilainen/orgs", "repos_url": "https://api.github.com/users/villevoutilainen/repos", "events_url": "https://api.github.com/users/villevoutilainen/events{/privacy}", "received_events_url": "https://api.github.com/users/villevoutilainen/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "db23e4c46f7f4ccc0b72de142205aadc934f3a00", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db23e4c46f7f4ccc0b72de142205aadc934f3a00", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db23e4c46f7f4ccc0b72de142205aadc934f3a00"}], "stats": {"total": 205, "additions": 202, "deletions": 3}, "files": [{"sha": "de05109e92c9383ed95a080c585512f35d6b96ce", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9638eccd55210744734e1d6e0db74b8993c331aa/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9638eccd55210744734e1d6e0db74b8993c331aa/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=9638eccd55210744734e1d6e0db74b8993c331aa", "patch": "@@ -1,3 +1,15 @@\n+2015-08-13  Ville Voutilainen  <ville.voutilainen@gmail.com>\n+\n+\tImplement std::experimental::fundamentals_v2::make_array and\n+\tstd::experimental::fundamentals_v2::to_array.\n+\t* include/Makefile.am: Add array.\n+\t* include/Makefile.in: Add array.\n+\t* include/experimental/array: New.\n+\t* testsuite/experimental/array/make_array.cc: Likewise.\n+\t* testsuite/experimental/array/neg.cc: Likewise.\n+\t* doc/html/manual/status.html: Mark make_array as Y.\n+\t* doc/xml/manual/status_cxx2017.xml: Likewise.\n+\n 2015-08-13  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* include/bits/alloc_traits.h: Add feature-test macro."}, {"sha": "4ec871f1127193a8d9eacc234a97733dba37e608", "filename": "libstdc++-v3/doc/html/manual/status.html", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9638eccd55210744734e1d6e0db74b8993c331aa/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fstatus.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9638eccd55210744734e1d6e0db74b8993c331aa/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fstatus.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fstatus.html?ref=9638eccd55210744734e1d6e0db74b8993c331aa", "patch": "@@ -563,7 +563,7 @@\n \t<a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2015/n4391.html\" target=\"_top\">\n \t  N4391\n \t</a>\n-      </td><td align=\"left\"> <code class=\"code\">make_array</code>, revision 4 </td><td align=\"left\">Y (not committed yet)</td><td align=\"left\">Library Fundamentals 2 TS</td></tr><tr><td align=\"left\">\n+      </td><td align=\"left\"> <code class=\"code\">make_array</code>, revision 4 </td><td align=\"left\">Y</td><td align=\"left\">Library Fundamentals 2 TS</td></tr><tr><td align=\"left\">\n \t<a class=\"link\" href=\"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2015/n4502.pdf\" target=\"_top\">\n \t  N4502\n \t</a>\n@@ -630,4 +630,4 @@\n       </td></tr></tbody></table></div></div><br class=\"table-break\" /></div></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"intro.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"intro.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"license.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Part\u00a0I.\u00a0\n   Introduction\n   \n-\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../index.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0License</td></tr></table></div></body></html>\n\\ No newline at end of file\n+\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../index.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0License</td></tr></table></div></body></html>"}, {"sha": "fc2ebd2466f7d57b37015b07d1a7e19d423a0d99", "filename": "libstdc++-v3/doc/xml/manual/status_cxx2017.xml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9638eccd55210744734e1d6e0db74b8993c331aa/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fstatus_cxx2017.xml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9638eccd55210744734e1d6e0db74b8993c331aa/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fstatus_cxx2017.xml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fstatus_cxx2017.xml?ref=9638eccd55210744734e1d6e0db74b8993c331aa", "patch": "@@ -316,7 +316,7 @@ not in any particular release.\n \t</link>\n       </entry>\n       <entry> <code>make_array</code>, revision 4 </entry>\n-      <entry>Y (not committed yet)</entry>\n+      <entry>Y</entry>\n       <entry>Library Fundamentals 2 TS</entry>\n     </row>\n "}, {"sha": "41fc4af6d3067c99844e629e6019f303743047f8", "filename": "libstdc++-v3/include/Makefile.am", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9638eccd55210744734e1d6e0db74b8993c331aa/libstdc%2B%2B-v3%2Finclude%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9638eccd55210744734e1d6e0db74b8993c331aa/libstdc%2B%2B-v3%2Finclude%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2FMakefile.am?ref=9638eccd55210744734e1d6e0db74b8993c331aa", "patch": "@@ -646,6 +646,7 @@ experimental_builddir = ./experimental\n experimental_headers = \\\n \t${experimental_srcdir}/algorithm \\\n \t${experimental_srcdir}/any \\\n+\t${experimental_srcdir}/array \\\n \t${experimental_srcdir}/chrono \\\n \t${experimental_srcdir}/deque \\\n \t${experimental_srcdir}/erase_if.h \\"}, {"sha": "6470d0173d53ee8be75f48288a29790034e5d044", "filename": "libstdc++-v3/include/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9638eccd55210744734e1d6e0db74b8993c331aa/libstdc%2B%2B-v3%2Finclude%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9638eccd55210744734e1d6e0db74b8993c331aa/libstdc%2B%2B-v3%2Finclude%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2FMakefile.in?ref=9638eccd55210744734e1d6e0db74b8993c331aa", "patch": "@@ -935,6 +935,7 @@ experimental_builddir = ./experimental\n experimental_headers = \\\n \t${experimental_srcdir}/algorithm \\\n \t${experimental_srcdir}/any \\\n+\t${experimental_srcdir}/array \\\n \t${experimental_srcdir}/chrono \\\n \t${experimental_srcdir}/deque \\\n \t${experimental_srcdir}/erase_if.h \\"}, {"sha": "a6e983aeedf2f7d6747027c31067d7afa1762010", "filename": "libstdc++-v3/include/experimental/array", "status": "added", "additions": 109, "deletions": 0, "changes": 109, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9638eccd55210744734e1d6e0db74b8993c331aa/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Farray", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9638eccd55210744734e1d6e0db74b8993c331aa/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Farray", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Farray?ref=9638eccd55210744734e1d6e0db74b8993c331aa", "patch": "@@ -0,0 +1,109 @@\n+// <experimental/array> -*- C++ -*-\n+\n+// Copyright (C) 2015 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// Under Section 7 of GPL version 3, you are granted additional\n+// permissions described in the GCC Runtime Library Exception, version\n+// 3.1, as published by the Free Software Foundation.\n+\n+// You should have received a copy of the GNU General Public License and\n+// a copy of the GCC Runtime Library Exception along with this program;\n+// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+// <http://www.gnu.org/licenses/>.\n+\n+/** @file experimental/array\n+ *  This is a TS C++ Library header.\n+ */\n+\n+#ifndef _GLIBCXX_EXPERIMENTAL_ARRAY\n+#define _GLIBCXX_EXPERIMENTAL_ARRAY 1\n+\n+#pragma GCC system_header\n+\n+#if __cplusplus <= 201103L\n+# include <bits/c++14_warning.h>\n+#else\n+\n+#include <array>\n+#include <functional>\n+#include <experimental/type_traits>\n+\n+namespace std _GLIBCXX_VISIBILITY(default)\n+{\n+namespace experimental\n+{\n+inline namespace fundamentals_v2\n+{\n+_GLIBCXX_BEGIN_NAMESPACE_VERSION\n+\n+  /**\n+   * @defgroup make_array Array creation functions\n+   * @ingroup experimental\n+   *\n+   * Array creation functions as described in N4529,\n+   * Working Draft, C++ Extensions for Library Fundamentals, Version 2\n+   *\n+   * @{\n+   */\n+\n+template <typename _Up>\n+  struct __is_reference_wrapper : false_type\n+  {};\n+\n+template <typename _Up>\n+  struct __is_reference_wrapper<reference_wrapper<_Up>> : true_type\n+  {};\n+\n+template <typename _Dest = void, typename... _Types>\n+  constexpr auto\n+  make_array(_Types&&... __t)\n+    -> array<conditional_t<is_void_v<_Dest>,\n+                           common_type_t<_Types...>,\n+                           _Dest>,\n+             sizeof...(_Types)>\n+  {\n+    static_assert(__or_<\n+                  __not_<is_void<_Dest>>,\n+                  __and_<__not_<__is_reference_wrapper<decay_t<_Types>>>...>>\n+                  ::value,\n+                  \"make_array cannot be used without an explicit target type \"\n+                  \"if any of the types given is a reference_wrapper\");\n+    return {{forward<_Types>(__t)...}};\n+  }\n+\n+template <typename _Tp, size_t _Nm, size_t... _Idx>\n+  constexpr array<remove_cv_t<_Tp>, _Nm>\n+  __to_array(_Tp (&__a)[_Nm],\n+             index_sequence<_Idx...>)\n+  {\n+    return {{__a[_Idx]...}};\n+  }\n+\n+template <typename _Tp, size_t _Nm>\n+  constexpr array<remove_cv_t<_Tp>, _Nm>\n+  to_array(_Tp (&__a)[_Nm])\n+  {\n+    return __to_array(__a, make_index_sequence<_Nm>{});\n+  }\n+\n+  // @} group make_array\n+  _GLIBCXX_END_NAMESPACE_VERSION\n+} // namespace fundamentals_v2\n+} // namespace experimental\n+\n+} // namespace std\n+\n+#endif // C++14\n+\n+#endif // _GLIBCXX_EXPERIMENTAL_ARRAY"}, {"sha": "772ef466ab9dd322955217d3bcb2d58acf119188", "filename": "libstdc++-v3/testsuite/experimental/array/make_array.cc", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9638eccd55210744734e1d6e0db74b8993c331aa/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Farray%2Fmake_array.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9638eccd55210744734e1d6e0db74b8993c331aa/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Farray%2Fmake_array.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Farray%2Fmake_array.cc?ref=9638eccd55210744734e1d6e0db74b8993c331aa", "patch": "@@ -0,0 +1,47 @@\n+// { dg-options \"-std=gnu++14\" }\n+// { dg-do compile }\n+\n+// Copyright (C) 2015 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a moved_to of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <experimental/array>\n+\n+struct MoveOnly\n+{\n+  MoveOnly() = default;\n+  MoveOnly(MoveOnly&&) = default;\n+  MoveOnly& operator=(MoveOnly&&) = default;\n+};\n+\n+int main()\n+{\n+  char x[42];\n+  std::array<char, 42> y = std::experimental::to_array(x);\n+  std::array<int, 5> z = std::experimental::make_array(1,2,3,4,5);\n+  std::array<long, 3> zz = std::experimental::make_array(1,2L, 3);\n+  std::array<MoveOnly, 1> zzz = std::experimental::make_array(MoveOnly{});\n+  int dummy;\n+  auto good = std::experimental::make_array<\n+    std::reference_wrapper<int>>(std::ref(dummy));\n+  constexpr char x2[42]{};\n+  constexpr std::array<char, 42> y2 = std::experimental::to_array(x2);\n+  constexpr std::array<int, 5> z2 =\n+    std::experimental::make_array(1,2,3,4,5);\n+  constexpr std::array<long, 3> zz2\n+    = std::experimental::make_array(1,2L, 3);\n+  constexpr std::array<MoveOnly, 1> zzz2 = std::experimental::make_array(MoveOnly{});\n+}"}, {"sha": "df532d166c5c383fb90c19330d3b87ef54aff8a5", "filename": "libstdc++-v3/testsuite/experimental/array/neg.cc", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9638eccd55210744734e1d6e0db74b8993c331aa/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Farray%2Fneg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9638eccd55210744734e1d6e0db74b8993c331aa/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Farray%2Fneg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Farray%2Fneg.cc?ref=9638eccd55210744734e1d6e0db74b8993c331aa", "patch": "@@ -0,0 +1,28 @@\n+// { dg-options \"-std=gnu++14\" }\n+// { dg-do compile }\n+\n+// Copyright (C) 2015 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a moved_to of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <experimental/array>\n+\n+int main()\n+{\n+  int dummy;\n+  auto bad = std::experimental::make_array(std::ref(dummy));\n+  // { dg-error \"make_array cannot be used without an explicit target type if any of the types given is a reference_wrapper\" \"\" { target *-*-* } 76 }\n+}"}, {"sha": "8773316ce75207ca04581c2a624da0687d620a5a", "filename": "libstdc++-v3/testsuite/experimental/array/neg.ii.gz", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9638eccd55210744734e1d6e0db74b8993c331aa/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Farray%2Fneg.ii.gz", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9638eccd55210744734e1d6e0db74b8993c331aa/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Farray%2Fneg.ii.gz", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Farray%2Fneg.ii.gz?ref=9638eccd55210744734e1d6e0db74b8993c331aa"}, {"sha": "e22209f5fe71bd5f36a3bd2bfdf158201abcd80b", "filename": "libstdc++-v3/testsuite/experimental/array/neg.s", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9638eccd55210744734e1d6e0db74b8993c331aa/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Farray%2Fneg.s", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9638eccd55210744734e1d6e0db74b8993c331aa/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Farray%2Fneg.s", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Farray%2Fneg.s?ref=9638eccd55210744734e1d6e0db74b8993c331aa", "patch": "@@ -0,0 +1 @@\n+\t.file\t\"neg.cc\""}]}