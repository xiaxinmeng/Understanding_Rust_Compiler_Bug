{"sha": "ec350bddd2d6250da7616b674183ccfa4e211262", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWMzNTBiZGRkMmQ2MjUwZGE3NjE2YjY3NDE4M2NjZmE0ZTIxMTI2Mg==", "commit": {"author": {"name": "Gavin Koch", "email": "gavin@cygnus.com", "date": "1998-05-12T08:41:11Z"}, "committer": {"name": "Gavin Romig-Koch", "email": "gavin@gcc.gnu.org", "date": "1998-05-12T08:41:11Z"}, "message": "mips.md (dslot): Move after definition of \"cpu\" attribute.\n\n\t* config/mips/mips.md (dslot): Move after definition of \"cpu\"\n\tattribute.  Handle r3900 case.\n\nFrom-SVN: r19697", "tree": {"sha": "d14a76942bf3c4df09f4f4eba4caa69d6c8f75c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d14a76942bf3c4df09f4f4eba4caa69d6c8f75c0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ec350bddd2d6250da7616b674183ccfa4e211262", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec350bddd2d6250da7616b674183ccfa4e211262", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec350bddd2d6250da7616b674183ccfa4e211262", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec350bddd2d6250da7616b674183ccfa4e211262/comments", "author": null, "committer": null, "parents": [{"sha": "d4ba0ead26158841f25581b7fadeab674518f828", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4ba0ead26158841f25581b7fadeab674518f828", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d4ba0ead26158841f25581b7fadeab674518f828"}], "stats": {"total": 26, "additions": 17, "deletions": 9}, "files": [{"sha": "ef57271950f541947d32548ccfe27ef4c5b64c59", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec350bddd2d6250da7616b674183ccfa4e211262/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec350bddd2d6250da7616b674183ccfa4e211262/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ec350bddd2d6250da7616b674183ccfa4e211262", "patch": "@@ -1,3 +1,8 @@\n+Tue May 12 11:38:31 1998  Gavin Koch  <gavin@cygnus.com>\n+\n+\t* config/mips/mips.md (dslot): Move after definition of \"cpu\"\n+\tattribute.  Handle r3900 case.\n+\n Tue May 12 10:21:36 1998  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* system.h: Define the STRINGIFY macro here."}, {"sha": "4155dd150ffbd23758486c4d72e57fbac4473120", "filename": "gcc/config/mips/mips.md", "status": "modified", "additions": 12, "deletions": 9, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec350bddd2d6250da7616b674183ccfa4e211262/gcc%2Fconfig%2Fmips%2Fmips.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec350bddd2d6250da7616b674183ccfa4e211262/gcc%2Fconfig%2Fmips%2Fmips.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.md?ref=ec350bddd2d6250da7616b674183ccfa4e211262", "patch": "@@ -69,15 +69,6 @@\n ;; # instructions (4 bytes each)\n (define_attr \"length\" \"\" (const_int 1))\n \n-;; whether or not an instruction has a mandatory delay slot\n-(define_attr \"dslot\" \"no,yes\"\n-  (if_then_else (ior (eq_attr \"type\" \"branch,jump,call,xfer,hilo,fcmp\")\n-\t\t     (and (eq_attr \"type\" \"load\")\n-\t\t\t  (and (eq (symbol_ref \"mips_isa\") (const_int 1))\n-\t\t\t\t   (eq (symbol_ref \"mips16\") (const_int 0)))))\n-\t\t(const_string \"yes\")\n-\t\t(const_string \"no\")))\n-\n ;; Attribute describing the processor.  This attribute must match exactly\n ;; with the processor_type enumeration in mips.h.\n \n@@ -94,6 +85,18 @@\n   \"default,r3000,r3900,r6000,r4000,r4100,r4300,r4600,r4650,r5000,r8000\"\n   (const (symbol_ref \"mips_cpu_attr\")))\n \n+;; Does the instruction have a mandatory delay slot?\n+;;   The 3900, is (mostly) mips1, but does not have a manditory load delay\n+;;   slot. \n+(define_attr \"dslot\" \"no,yes\"\n+  (if_then_else (ior (eq_attr \"type\" \"branch,jump,call,xfer,hilo,fcmp\")\n+\t\t     (and (eq_attr \"type\" \"load\")\n+\t\t\t  (and (eq (symbol_ref \"mips_isa\") (const_int 1))\n+\t\t\t       (and (eq (symbol_ref \"mips16\") (const_int 0))\n+                                    (eq_attr \"cpu\" \"!r3900\")))))\n+\t\t(const_string \"yes\")\n+\t\t(const_string \"no\")))\n+\n ;; Attribute defining whether or not we can use the branch-likely instructions\n \n (define_attr \"branch_likely\" \"no,yes\""}]}