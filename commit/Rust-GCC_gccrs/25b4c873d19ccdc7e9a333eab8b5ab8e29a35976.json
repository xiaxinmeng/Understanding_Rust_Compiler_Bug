{"sha": "25b4c873d19ccdc7e9a333eab8b5ab8e29a35976", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjViNGM4NzNkMTljY2RjN2U5YTMzM2VhYjhiNWFiOGUyOWEzNTk3Ng==", "commit": {"author": {"name": "Justin Squirek", "email": "squirek@adacore.com", "date": "2020-05-22T20:25:00Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-07-16T09:18:03Z"}, "message": "[Ada] Incorrect static accessibility error in return aggregate\n\ngcc/ada/\n\n\t* einfo.adb, einfo.ads (Is_Named_Access_Type): Created for\n\treadability.\n\t* sem_ch6.adb (Check_Return_Construct_Accessibility): Add\n\tspecial cases for formals.\n\t* sem_util.adb (Object_Access_Level): Add handling of access\n\tattributes and named access types in the general case.", "tree": {"sha": "0ec545048cf43bd32db87b49f204613f3210d6c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0ec545048cf43bd32db87b49f204613f3210d6c1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/25b4c873d19ccdc7e9a333eab8b5ab8e29a35976", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25b4c873d19ccdc7e9a333eab8b5ab8e29a35976", "html_url": "https://github.com/Rust-GCC/gccrs/commit/25b4c873d19ccdc7e9a333eab8b5ab8e29a35976", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25b4c873d19ccdc7e9a333eab8b5ab8e29a35976/comments", "author": {"login": "AdaDoom3", "id": 3445599, "node_id": "MDQ6VXNlcjM0NDU1OTk=", "avatar_url": "https://avatars.githubusercontent.com/u/3445599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AdaDoom3", "html_url": "https://github.com/AdaDoom3", "followers_url": "https://api.github.com/users/AdaDoom3/followers", "following_url": "https://api.github.com/users/AdaDoom3/following{/other_user}", "gists_url": "https://api.github.com/users/AdaDoom3/gists{/gist_id}", "starred_url": "https://api.github.com/users/AdaDoom3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AdaDoom3/subscriptions", "organizations_url": "https://api.github.com/users/AdaDoom3/orgs", "repos_url": "https://api.github.com/users/AdaDoom3/repos", "events_url": "https://api.github.com/users/AdaDoom3/events{/privacy}", "received_events_url": "https://api.github.com/users/AdaDoom3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e31f60f31da89f3c79b6dd8488a7eff03c689f1b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e31f60f31da89f3c79b6dd8488a7eff03c689f1b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e31f60f31da89f3c79b6dd8488a7eff03c689f1b"}], "stats": {"total": 42, "additions": 37, "deletions": 5}, "files": [{"sha": "eab06eefe498319a28e413427e169ff2d62534f5", "filename": "gcc/ada/einfo.adb", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25b4c873d19ccdc7e9a333eab8b5ab8e29a35976/gcc%2Fada%2Feinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25b4c873d19ccdc7e9a333eab8b5ab8e29a35976/gcc%2Fada%2Feinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.adb?ref=25b4c873d19ccdc7e9a333eab8b5ab8e29a35976", "patch": "@@ -3797,6 +3797,12 @@ package body Einfo is\n       return Ekind (Id) in Modular_Integer_Kind;\n    end Is_Modular_Integer_Type;\n \n+   function Is_Named_Access_Type                (Id : E) return B is\n+   begin\n+      return Ekind (Id) in E_Access_Type ..\n+                             E_Access_Protected_Subprogram_Type;\n+   end Is_Named_Access_Type;\n+\n    function Is_Named_Number                     (Id : E) return B is\n    begin\n       return Ekind (Id) in Named_Kind;"}, {"sha": "758aef56576d407359ca9fdc317914b145875555", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25b4c873d19ccdc7e9a333eab8b5ab8e29a35976/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25b4c873d19ccdc7e9a333eab8b5ab8e29a35976/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=25b4c873d19ccdc7e9a333eab8b5ab8e29a35976", "patch": "@@ -7624,6 +7624,7 @@ package Einfo is\n    function Is_Integer_Type                     (Id : E) return B;\n    function Is_Limited_Record                   (Id : E) return B;\n    function Is_Modular_Integer_Type             (Id : E) return B;\n+   function Is_Named_Access_Type                (Id : E) return B;\n    function Is_Named_Number                     (Id : E) return B;\n    function Is_Numeric_Type                     (Id : E) return B;\n    function Is_Object                           (Id : E) return B;"}, {"sha": "1988684b674314c59716c0ae19b65572109e4e03", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 14, "deletions": 4, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25b4c873d19ccdc7e9a333eab8b5ab8e29a35976/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25b4c873d19ccdc7e9a333eab8b5ab8e29a35976/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=25b4c873d19ccdc7e9a333eab8b5ab8e29a35976", "patch": "@@ -904,6 +904,11 @@ package body Sem_Ch6 is\n                   --  named access types and renamed objects within the\n                   --  expression.\n \n+                  --  Note, this loop duplicates some of the logic in\n+                  --  Object_Access_Level since we have to check special rules\n+                  --  based on the context we are in (a return aggregate)\n+                  --  relating to formals of the current function.\n+\n                   Obj := Original_Node (Prefix (Expr));\n                   loop\n                      while Nkind_In (Obj, N_Explicit_Dereference,\n@@ -943,15 +948,20 @@ package body Sem_Ch6 is\n                      end if;\n                   end loop;\n \n-                  --  Do not check aliased formals or function calls. A\n-                  --  run-time check may still be needed ???\n+                  --  Do not check aliased formals statically\n \n                   if Is_Formal (Entity (Obj))\n-                    and then Is_Aliased (Entity (Obj))\n+                    and then (Is_Aliased (Entity (Obj))\n+                               or else Ekind (Etype (Entity (Obj))) =\n+                                         E_Anonymous_Access_Type)\n                   then\n                      null;\n \n-                  elsif Object_Access_Level (Obj) >\n+                  --  Otherwise, handle the expression normally, avoiding the\n+                  --  special logic above, and call Object_Access_Level with\n+                  --  the original expression.\n+\n+                  elsif Object_Access_Level (Expr) >\n                           Scope_Depth (Scope (Scope_Id))\n                   then\n                      Error_Msg_N"}, {"sha": "2ce22e988fb40c3624159e41b09a8e3c339b09cc", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25b4c873d19ccdc7e9a333eab8b5ab8e29a35976/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25b4c873d19ccdc7e9a333eab8b5ab8e29a35976/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=25b4c873d19ccdc7e9a333eab8b5ab8e29a35976", "patch": "@@ -24330,7 +24330,7 @@ package body Sem_Util is\n          --  than the level of any visible named access type (see 3.10.2(21)).\n \n          if Is_Type (E) then\n-            return Type_Access_Level (E) +  1;\n+            return Type_Access_Level (E) + 1;\n \n          elsif Present (Renamed_Object (E)) then\n             return Object_Access_Level (Renamed_Object (E));\n@@ -24347,6 +24347,12 @@ package body Sem_Util is\n          then\n             return Type_Access_Level (Scope (E)) + 1;\n \n+         --  An object of a named access type gets its level from its\n+         --  associated type.\n+\n+         elsif Is_Named_Access_Type (Etype (E)) then\n+            return Type_Access_Level (Etype (E));\n+\n          else\n             return Scope_Depth (Enclosing_Dynamic_Scope (E));\n          end if;\n@@ -24559,6 +24565,15 @@ package body Sem_Util is\n       then\n          return Object_Access_Level (Current_Scope);\n \n+      --  Move up the attribute reference when we encounter a 'Access variation\n+\n+      elsif Nkind (Orig_Obj) = N_Attribute_Reference\n+        and then Nam_In (Attribute_Name (Orig_Obj), Name_Access,\n+                                                    Name_Unchecked_Access,\n+                                                    Name_Unrestricted_Access)\n+      then\n+         return Object_Access_Level (Prefix (Orig_Obj));\n+\n       --  Otherwise return the scope level of Standard. (If there are cases\n       --  that fall through to this point they will be treated as having\n       --  global accessibility for now. ???)"}]}