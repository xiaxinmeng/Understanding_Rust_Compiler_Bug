{"sha": "f54e63dfa34c4c9922a4cb35d2f8c28c92135b8c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjU0ZTYzZGZhMzRjNGM5OTIyYTRjYjM1ZDJmOGMyOGM5MjEzNWI4Yw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2019-03-14T08:56:47Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2019-03-14T08:56:47Z"}, "message": "re PR tree-optimization/89703 (ICE in compare_values_warnv, at tree-vrp.c:997)\n\n\tPR tree-optimization/89703\n\t* tree-ssa-strlen.c (valid_builtin_call): Punt if stmt call types\n\taren't compatible also with builtin_decl_explicit.  Check pure\n\tor non-pure status of BUILT_IN_STR{{,N}CMP,N{LEN,{CAT,CPY}{,_CHK}}}\n\tand BUILT_IN_STPNCPY{,_CHK}.\n\n\t* gcc.c-torture/compile/pr89703-1.c: New test.\n\t* gcc.c-torture/compile/pr89703-2.c: New test.\n\nFrom-SVN: r269674", "tree": {"sha": "dcc71073887e0245bfb6407a7399670aa794b8dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dcc71073887e0245bfb6407a7399670aa794b8dc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f54e63dfa34c4c9922a4cb35d2f8c28c92135b8c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f54e63dfa34c4c9922a4cb35d2f8c28c92135b8c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f54e63dfa34c4c9922a4cb35d2f8c28c92135b8c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f54e63dfa34c4c9922a4cb35d2f8c28c92135b8c/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fb055f4b745b1b56d84ad920508ebed2d22d3616", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb055f4b745b1b56d84ad920508ebed2d22d3616", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb055f4b745b1b56d84ad920508ebed2d22d3616"}], "stats": {"total": 55, "additions": 55, "deletions": 0}, "files": [{"sha": "8c3a6b966f2b2447e1ca4c9471db13c627a2b45d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f54e63dfa34c4c9922a4cb35d2f8c28c92135b8c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f54e63dfa34c4c9922a4cb35d2f8c28c92135b8c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f54e63dfa34c4c9922a4cb35d2f8c28c92135b8c", "patch": "@@ -1,3 +1,11 @@\n+2019-03-14  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/89703\n+\t* tree-ssa-strlen.c (valid_builtin_call): Punt if stmt call types\n+\taren't compatible also with builtin_decl_explicit.  Check pure\n+\tor non-pure status of BUILT_IN_STR{{,N}CMP,N{LEN,{CAT,CPY}{,_CHK}}}\n+\tand BUILT_IN_STPNCPY{,_CHK}.\n+\n 2019-03-14  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR target/89523"}, {"sha": "db45dc4fdfc14428d3bbd5dadf5753255f1fcc8d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f54e63dfa34c4c9922a4cb35d2f8c28c92135b8c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f54e63dfa34c4c9922a4cb35d2f8c28c92135b8c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f54e63dfa34c4c9922a4cb35d2f8c28c92135b8c", "patch": "@@ -1,3 +1,9 @@\n+2019-03-14  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/89703\n+\t* gcc.c-torture/compile/pr89703-1.c: New test.\n+\t* gcc.c-torture/compile/pr89703-2.c: New test.\n+\n 2019-03-14  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR target/89523"}, {"sha": "958cc7744e1f86d3cba86149d9b968eed60936f1", "filename": "gcc/testsuite/gcc.c-torture/compile/pr89703-1.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f54e63dfa34c4c9922a4cb35d2f8c28c92135b8c/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr89703-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f54e63dfa34c4c9922a4cb35d2f8c28c92135b8c/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr89703-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr89703-1.c?ref=f54e63dfa34c4c9922a4cb35d2f8c28c92135b8c", "patch": "@@ -0,0 +1,13 @@\n+/* PR tree-optimization/89703 */\n+\n+typedef __SIZE_TYPE__ size_t;\n+extern char *strlen (const char *);\n+extern char *strnlen (const char *, size_t);\n+extern char c[2];\n+\n+void\n+foo (char **q)\n+{\n+  q[0] = strlen (c);\n+  q[1] = strnlen (c, 2);\n+}"}, {"sha": "d2676ded0caed5899790f98a362a7a893cbfecbd", "filename": "gcc/testsuite/gcc.c-torture/compile/pr89703-2.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f54e63dfa34c4c9922a4cb35d2f8c28c92135b8c/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr89703-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f54e63dfa34c4c9922a4cb35d2f8c28c92135b8c/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr89703-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr89703-2.c?ref=f54e63dfa34c4c9922a4cb35d2f8c28c92135b8c", "patch": "@@ -0,0 +1,13 @@\n+/* PR tree-optimization/89703 */\n+\n+typedef __SIZE_TYPE__ size_t;\n+extern void *memcpy (void *, const void *, size_t);\n+extern char *strlen (const char *);\n+extern char c[2];\n+\n+void\n+foo (char **q)\n+{\n+  memcpy (c, \"a\", 2);\n+  q[0] = strlen (c);\n+}"}, {"sha": "1eaed666ef2bda96a74c4537931a8afa0a160051", "filename": "gcc/tree-ssa-strlen.c", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f54e63dfa34c4c9922a4cb35d2f8c28c92135b8c/gcc%2Ftree-ssa-strlen.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f54e63dfa34c4c9922a4cb35d2f8c28c92135b8c/gcc%2Ftree-ssa-strlen.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-strlen.c?ref=f54e63dfa34c4c9922a4cb35d2f8c28c92135b8c", "patch": "@@ -971,12 +971,21 @@ valid_builtin_call (gimple *stmt)\n     return false;\n \n   tree callee = gimple_call_fndecl (stmt);\n+  tree decl = builtin_decl_explicit (DECL_FUNCTION_CODE (callee));\n+  if (decl\n+      && decl != callee\n+      && !gimple_builtin_call_types_compatible_p (stmt, decl))\n+    return false;\n+\n   switch (DECL_FUNCTION_CODE (callee))\n     {\n     case BUILT_IN_MEMCMP:\n     case BUILT_IN_MEMCMP_EQ:\n+    case BUILT_IN_STRCMP:\n+    case BUILT_IN_STRNCMP:\n     case BUILT_IN_STRCHR:\n     case BUILT_IN_STRLEN:\n+    case BUILT_IN_STRNLEN:\n       /* The above functions should be pure.  Punt if they aren't.  */\n       if (gimple_vdef (stmt) || gimple_vuse (stmt) == NULL_TREE)\n \treturn false;\n@@ -991,10 +1000,16 @@ valid_builtin_call (gimple *stmt)\n     case BUILT_IN_MEMSET:\n     case BUILT_IN_STPCPY:\n     case BUILT_IN_STPCPY_CHK:\n+    case BUILT_IN_STPNCPY:\n+    case BUILT_IN_STPNCPY_CHK:\n     case BUILT_IN_STRCAT:\n     case BUILT_IN_STRCAT_CHK:\n     case BUILT_IN_STRCPY:\n     case BUILT_IN_STRCPY_CHK:\n+    case BUILT_IN_STRNCAT:\n+    case BUILT_IN_STRNCAT_CHK:\n+    case BUILT_IN_STRNCPY:\n+    case BUILT_IN_STRNCPY_CHK:\n       /* The above functions should be neither const nor pure.  Punt if they\n \t aren't.  */\n       if (gimple_vdef (stmt) == NULL_TREE || gimple_vuse (stmt) == NULL_TREE)"}]}