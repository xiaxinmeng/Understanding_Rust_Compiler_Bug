{"sha": "d2d7e672ad18c54aedfa766b7918d1631a22b4fa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDJkN2U2NzJhZDE4YzU0YWVkZmE3NjZiNzkxOGQxNjMxYTIyYjRmYQ==", "commit": {"author": {"name": "Ilya Enkovich", "email": "ilya.enkovich@intel.com", "date": "2015-03-10T09:43:24Z"}, "committer": {"name": "Ilya Enkovich", "email": "ienkovich@gcc.gnu.org", "date": "2015-03-10T09:43:24Z"}, "message": "linux-common.h (LIBMPX_WRAPPERSSPEC): New.\n\ngcc/\n\n\t* config/i386/linux-common.h (LIBMPX_WRAPPERSSPEC): New.\n\t(CHKP_SPEC): Add wrappers library.\n\t* c-family/c.opt (static-libmpxwrappers): New.\n\nlibmpx/\n\n\t* Makefile.am (SUBDIRS): Add mpxwrap when used\n\tAS supports MPX.\n\t(MAKEOVERRIDES): New.\n\t* Makefile.in: Regenerate.\n\t* configure.ac: Check AS supports MPX.  Add\n\tmpxintr/Makefile to config files.\n\t* configure: Regenerate.\n\t* mpxwrap/Makefile.am: New.\n\t* mpxwrap/Makefile.in: New.\n\t* mpxwrap/libtool-version: New.\n\t* mpxwrap/mpx_wrappers.cc: New.\n\t* mpxwrap/libmpxwrappers.map: New.\n\nFrom-SVN: r221313", "tree": {"sha": "88f459722a79b712a2426ab2196a17f1fc656d2b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/88f459722a79b712a2426ab2196a17f1fc656d2b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d2d7e672ad18c54aedfa766b7918d1631a22b4fa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2d7e672ad18c54aedfa766b7918d1631a22b4fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d2d7e672ad18c54aedfa766b7918d1631a22b4fa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2d7e672ad18c54aedfa766b7918d1631a22b4fa/comments", "author": {"login": "ienkovich", "id": 18308708, "node_id": "MDQ6VXNlcjE4MzA4NzA4", "avatar_url": "https://avatars.githubusercontent.com/u/18308708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ienkovich", "html_url": "https://github.com/ienkovich", "followers_url": "https://api.github.com/users/ienkovich/followers", "following_url": "https://api.github.com/users/ienkovich/following{/other_user}", "gists_url": "https://api.github.com/users/ienkovich/gists{/gist_id}", "starred_url": "https://api.github.com/users/ienkovich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ienkovich/subscriptions", "organizations_url": "https://api.github.com/users/ienkovich/orgs", "repos_url": "https://api.github.com/users/ienkovich/repos", "events_url": "https://api.github.com/users/ienkovich/events{/privacy}", "received_events_url": "https://api.github.com/users/ienkovich/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ee8f136a72fe40cfa88ed44c141218d2a8ae606f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee8f136a72fe40cfa88ed44c141218d2a8ae606f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee8f136a72fe40cfa88ed44c141218d2a8ae606f"}], "stats": {"total": 1016, "additions": 1009, "deletions": 7}, "files": [{"sha": "911c2ce7eee30075fb82bba76f8be32ae8d3b85c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2d7e672ad18c54aedfa766b7918d1631a22b4fa/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2d7e672ad18c54aedfa766b7918d1631a22b4fa/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d2d7e672ad18c54aedfa766b7918d1631a22b4fa", "patch": "@@ -1,3 +1,9 @@\n+2015-03-10  Ilya Enkovich  <ilya.enkovich@intel.com>\n+\n+\t* config/i386/linux-common.h (LIBMPX_WRAPPERSSPEC): New.\n+\t(CHKP_SPEC): Add wrappers library.\n+\t* c-family/c.opt (static-libmpxwrappers): New.\n+\n 2015-03-10  Ilya Enkovich  <ilya.enkovich@intel.com>\n \n \t* config/i386/linux-common.h (LIBMPX_LIBS): New."}, {"sha": "5354500977ad415e6a82eb7cff982652c04fa83f", "filename": "gcc/c-family/c.opt", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2d7e672ad18c54aedfa766b7918d1631a22b4fa/gcc%2Fc-family%2Fc.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2d7e672ad18c54aedfa766b7918d1631a22b4fa/gcc%2Fc-family%2Fc.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc.opt?ref=d2d7e672ad18c54aedfa766b7918d1631a22b4fa", "patch": "@@ -1044,6 +1044,9 @@ Instrument only functions marked with bnd_instrument attribute.\n static-libmpx\n Driver\n \n+static-libmpxwrappers\n+Driver\n+\n fcilkplus\n C ObjC C++ ObjC++ LTO Report Var(flag_cilkplus) Init(0)\n Enable Cilk Plus"}, {"sha": "9c6560b695ff5a55b44be1f1042c921376802196", "filename": "gcc/config/i386/linux-common.h", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2d7e672ad18c54aedfa766b7918d1631a22b4fa/gcc%2Fconfig%2Fi386%2Flinux-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2d7e672ad18c54aedfa766b7918d1631a22b4fa/gcc%2Fconfig%2Fi386%2Flinux-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Flinux-common.h?ref=d2d7e672ad18c54aedfa766b7918d1631a22b4fa", "patch": "@@ -73,7 +73,21 @@ along with GCC; see the file COPYING3.  If not see\n #endif\n #endif\n \n+#ifndef LIBMPXWRAPPERS_SPEC\n+#if defined(HAVE_LD_STATIC_DYNAMIC)\n+#define LIBMPXWRAPPERS_SPEC \"\\\n+%{mmpx:%{fcheck-pointer-bounds:%{!fno-chkp-use-wrappers:\\\n+    %{static:-lmpxwrappers}\\\n+    %{!static:%{static-libmpxwrappers:\" LD_STATIC_OPTION \" --whole-archive}\\\n+    -lmpxwrappers %{static-libmpxwrappers:--no-whole-archive \"\\\n+    LD_DYNAMIC_OPTION \"}}}}}\"\n+#else\n+#define LIBMPXWRAPPERS_SPEC \"\\\n+%{mmpx:%{fcheck-pointer-bounds:{!fno-chkp-use-wrappers:-lmpxwrappers}}}\"\n+#endif\n+#endif\n+\n #ifndef CHKP_SPEC\n #define CHKP_SPEC \"\\\n-%{!nostdlib:%{!nodefaultlibs:\" LIBMPX_SPEC \"}}\"\n+%{!nostdlib:%{!nodefaultlibs:\" LIBMPX_SPEC LIBMPXWRAPPERS_SPEC \"}}\"\n #endif"}, {"sha": "ccd706b154811f29418f2297131f67dd61a39bcd", "filename": "libmpx/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2d7e672ad18c54aedfa766b7918d1631a22b4fa/libmpx%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2d7e672ad18c54aedfa766b7918d1631a22b4fa/libmpx%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libmpx%2FChangeLog?ref=d2d7e672ad18c54aedfa766b7918d1631a22b4fa", "patch": "@@ -1,3 +1,18 @@\n+2015-03-10  Ilya Enkovich  <ilya.enkovich@intel.com>\n+\n+\t* Makefile.am (SUBDIRS): Add mpxwrap when used\n+\tAS supports MPX.\n+\t(MAKEOVERRIDES): New.\n+\t* Makefile.in: Regenerate.\n+\t* configure.ac: Check AS supports MPX.  Add\n+\tmpxintr/Makefile to config files.\n+\t* configure: Regenerate.\n+\t* mpxwrap/Makefile.am: New.\n+\t* mpxwrap/Makefile.in: New.\n+\t* mpxwrap/libtool-version: New.\n+\t* mpxwrap/mpx_wrappers.cc: New.\n+\t* mpxwrap/libmpxwrappers.map: New.\n+\n 2015-03-10  Ilya Enkovich  <ilya.enkovich@intel.com>\n \n \tInitial commit."}, {"sha": "bd0a8b6f93ccddf627b863fe6107aae99b98ad8e", "filename": "libmpx/Makefile.am", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2d7e672ad18c54aedfa766b7918d1631a22b4fa/libmpx%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2d7e672ad18c54aedfa766b7918d1631a22b4fa/libmpx%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libmpx%2FMakefile.am?ref=d2d7e672ad18c54aedfa766b7918d1631a22b4fa", "patch": "@@ -2,6 +2,9 @@ ACLOCAL_AMFLAGS = -I .. -I ../config\n \n if LIBMPX_SUPPORTED\n SUBDIRS = mpxrt\n+if MPX_AS_SUPPORTED\n+SUBDIRS += mpxwrap\n+endif\n nodist_toolexeclib_HEADERS = libmpx.spec\n endif\n \n@@ -45,3 +48,5 @@ AM_MAKEFLAGS = \\\n \t\"PICFLAG=$(PICFLAG)\" \\\n \t\"RANLIB=$(RANLIB)\" \\\n \t\"DESTDIR=$(DESTDIR)\"\n+\n+MAKEOVERRIDES ="}, {"sha": "203f08a6409c889e3e0bec60acf8234fa688f6f3", "filename": "libmpx/Makefile.in", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2d7e672ad18c54aedfa766b7918d1631a22b4fa/libmpx%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2d7e672ad18c54aedfa766b7918d1631a22b4fa/libmpx%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libmpx%2FMakefile.in?ref=d2d7e672ad18c54aedfa766b7918d1631a22b4fa", "patch": "@@ -35,6 +35,7 @@ POST_UNINSTALL = :\n build_triplet = @build@\n host_triplet = @host@\n target_triplet = @target@\n+@LIBMPX_SUPPORTED_TRUE@@MPX_AS_SUPPORTED_TRUE@am__append_1 = mpxwrap\n subdir = .\n DIST_COMMON = ChangeLog $(srcdir)/Makefile.in $(srcdir)/Makefile.am \\\n \t$(top_srcdir)/configure $(am__configure_deps) \\\n@@ -102,7 +103,7 @@ AM_RECURSIVE_TARGETS = $(RECURSIVE_TARGETS:-recursive=) \\\n \t$(RECURSIVE_CLEAN_TARGETS:-recursive=) tags TAGS ctags CTAGS\n ETAGS = etags\n CTAGS = ctags\n-DIST_SUBDIRS = mpxrt\n+DIST_SUBDIRS = mpxrt mpxwrap\n ACLOCAL = @ACLOCAL@\n AMTAR = @AMTAR@\n AR = @AR@\n@@ -232,7 +233,7 @@ top_build_prefix = @top_build_prefix@\n top_builddir = @top_builddir@\n top_srcdir = @top_srcdir@\n ACLOCAL_AMFLAGS = -I .. -I ../config\n-@LIBMPX_SUPPORTED_TRUE@SUBDIRS = mpxrt\n+@LIBMPX_SUPPORTED_TRUE@SUBDIRS = mpxrt $(am__append_1)\n @LIBMPX_SUPPORTED_TRUE@nodist_toolexeclib_HEADERS = libmpx.spec\n gcc_version := $(shell cat $(top_srcdir)/../gcc/BASE-VER)\n \n@@ -274,6 +275,7 @@ AM_MAKEFLAGS = \\\n \t\"RANLIB=$(RANLIB)\" \\\n \t\"DESTDIR=$(DESTDIR)\"\n \n+MAKEOVERRIDES = \n all: config.h\n \t$(MAKE) $(AM_MAKEFLAGS) all-recursive\n "}, {"sha": "f3bd67d044380463a25e68223987040aa2ea48eb", "filename": "libmpx/configure", "status": "modified", "additions": 45, "deletions": 3, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2d7e672ad18c54aedfa766b7918d1631a22b4fa/libmpx%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2d7e672ad18c54aedfa766b7918d1631a22b4fa/libmpx%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libmpx%2Fconfigure?ref=d2d7e672ad18c54aedfa766b7918d1631a22b4fa", "patch": "@@ -621,6 +621,8 @@ LD\n FGREP\n SED\n LIBTOOL\n+MPX_AS_SUPPORTED_FALSE\n+MPX_AS_SUPPORTED_TRUE\n RANLIB\n AR\n AS\n@@ -5544,6 +5546,30 @@ else\n fi\n \n \n+# Check we may build wrappers library\n+echo \"test:  bndmov %bnd0, %bnd1\" > conftest.s\n+if { ac_try='$AS -o conftest.o conftest.s 1>&5'\n+  { { eval echo \"\\\"\\$as_me\\\":${as_lineno-$LINENO}: \\\"$ac_try\\\"\"; } >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n+  test $ac_status = 0; }; }\n+then\n+    mpx_as=yes\n+else\n+    mpx_as=no\n+    echo \"configure: no MPX support fo as\" >&5\n+fi\n+rm -f conftest.o conftest.s\n+ if test \"x$mpx_as\" = \"xyes\"; then\n+  MPX_AS_SUPPORTED_TRUE=\n+  MPX_AS_SUPPORTED_FALSE='#'\n+else\n+  MPX_AS_SUPPORTED_TRUE='#'\n+  MPX_AS_SUPPORTED_FALSE=\n+fi\n+\n+\n # Configure libtool\n enable_dlopen=yes\n \n@@ -11622,7 +11648,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11625 \"configure\"\n+#line 11651 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11728,7 +11754,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11731 \"configure\"\n+#line 11757 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -14997,7 +15023,7 @@ ac_config_files=\"$ac_config_files Makefile libmpx.spec\"\n \n ac_config_headers=\"$ac_config_headers config.h\"\n \n-ac_config_files=\"$ac_config_files mpxrt/Makefile\"\n+ac_config_files=\"$ac_config_files mpxrt/Makefile mpxwrap/Makefile\"\n \n \n cat >confcache <<\\_ACEOF\n@@ -15113,6 +15139,10 @@ if test -z \"${MAINTAINER_MODE_TRUE}\" && test -z \"${MAINTAINER_MODE_FALSE}\"; then\n   as_fn_error \"conditional \\\"MAINTAINER_MODE\\\" was never defined.\n Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\n fi\n+if test -z \"${MPX_AS_SUPPORTED_TRUE}\" && test -z \"${MPX_AS_SUPPORTED_FALSE}\"; then\n+  as_fn_error \"conditional \\\"MPX_AS_SUPPORTED\\\" was never defined.\n+Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\n+fi\n \n : ${CONFIG_STATUS=./config.status}\n ac_write_fail=0\n@@ -16085,6 +16115,7 @@ do\n     \"libmpx.spec\") CONFIG_FILES=\"$CONFIG_FILES libmpx.spec\" ;;\n     \"config.h\") CONFIG_HEADERS=\"$CONFIG_HEADERS config.h\" ;;\n     \"mpxrt/Makefile\") CONFIG_FILES=\"$CONFIG_FILES mpxrt/Makefile\" ;;\n+    \"mpxwrap/Makefile\") CONFIG_FILES=\"$CONFIG_FILES mpxwrap/Makefile\" ;;\n \n   *) as_fn_error \"invalid argument: \\`$ac_config_target'\" \"$LINENO\" 5;;\n   esac\n@@ -17489,6 +17520,17 @@ _LT_EOF\n  ;;\n     \"mpxrt/Makefile\":F) cat > vpsed$$ << \\_EOF\n s!`test -f '$<' || echo '$(srcdir)/'`!!\n+_EOF\n+   sed -f vpsed$$ $ac_file > tmp$$\n+   mv tmp$$ $ac_file\n+   rm vpsed$$\n+   echo 'MULTISUBDIR =' >> $ac_file\n+   ml_norecursion=yes\n+   . ${multi_basedir}/config-ml.in\n+   { ml_norecursion=; unset ml_norecursion;}\n+ ;;\n+    \"mpxwrap/Makefile\":F) cat > vpsed$$ << \\_EOF\n+s!`test -f '$<' || echo '$(srcdir)/'`!!\n _EOF\n    sed -f vpsed$$ $ac_file > tmp$$\n    mv tmp$$ $ac_file"}, {"sha": "4669525eabdfd6b345b950bb2de16fb194eee400", "filename": "libmpx/configure.ac", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2d7e672ad18c54aedfa766b7918d1631a22b4fa/libmpx%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2d7e672ad18c54aedfa766b7918d1631a22b4fa/libmpx%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libmpx%2Fconfigure.ac?ref=d2d7e672ad18c54aedfa766b7918d1631a22b4fa", "patch": "@@ -100,6 +100,18 @@ AC_CHECK_TOOL(AS, as)\n AC_CHECK_TOOL(AR, ar)\n AC_CHECK_TOOL(RANLIB, ranlib, :)\n \n+# Check we may build wrappers library\n+echo \"test:  bndmov %bnd0, %bnd1\" > conftest.s\n+if AC_TRY_COMMAND([$AS -o conftest.o conftest.s 1>&AS_MESSAGE_LOG_FD])\n+then\n+    mpx_as=yes\n+else\n+    mpx_as=no\n+    echo \"configure: no MPX support fo as\" >&AS_MESSAGE_LOG_FD\n+fi\n+rm -f conftest.o conftest.s\n+AM_CONDITIONAL(MPX_AS_SUPPORTED, [test \"x$mpx_as\" = \"xyes\"])\n+\n # Configure libtool\n AC_LIBTOOL_DLOPEN\n AM_PROG_LIBTOOL\n@@ -117,7 +129,7 @@ fi\n \n AC_CONFIG_FILES([Makefile libmpx.spec])\n AC_CONFIG_HEADERS(config.h)\n-AC_CONFIG_FILES(AC_FOREACH([DIR], [mpxrt], [DIR/Makefile]),\n+AC_CONFIG_FILES(AC_FOREACH([DIR], [mpxrt mpxwrap], [DIR/Makefile ]),\n   [cat > vpsed$$ << \\_EOF\n s!`test -f '$<' || echo '$(srcdir)/'`!!\n _EOF"}, {"sha": "72abccf8b8be0b5e7d32e6e1079422767cfa8cd5", "filename": "libmpx/mpxwrap/Makefile.am", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2d7e672ad18c54aedfa766b7918d1631a22b4fa/libmpx%2Fmpxwrap%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2d7e672ad18c54aedfa766b7918d1631a22b4fa/libmpx%2Fmpxwrap%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libmpx%2Fmpxwrap%2FMakefile.am?ref=d2d7e672ad18c54aedfa766b7918d1631a22b4fa", "patch": "@@ -0,0 +1,54 @@\n+ALCLOCAL_AMFLAGS = -I .. -I ../config\n+\n+# May be used by toolexeclibdir.\n+gcc_version := $(shell cat $(top_srcdir)/../gcc/BASE-VER)\n+\n+libmpxwrappers_la_CFLAGS = -fcheck-pointer-bounds -mmpx -fno-chkp-check-read \\\n+\t\t\t   -fno-chkp-check-write -fno-chkp-use-wrappers -fPIC\n+libmpxwrappers_la_DEPENDENCIES = libmpxwrappers.map\n+libmpxwrappers_la_LDFLAGS = -Wl,--version-script=$(srcdir)/libmpxwrappers.map\n+\n+toolexeclib_LTLIBRARIES = libmpxwrappers.la\n+\n+libmpxwrappers_la_SOURCES = mpx_wrappers.c\n+\n+# Work around what appears to be a GNU make bug handling MAKEFLAGS\n+# values defined in terms of make variables, as is the case for CC and\n+# friends when we are called from the top level Makefile.\n+AM_MAKEFLAGS = \\\n+       \"AR_FLAGS=$(AR_FLAGS)\" \\\n+       \"CC_FOR_BUILD=$(CC_FOR_BUILD)\" \\\n+       \"CFLAGS=$(CFLAGS)\" \\\n+       \"CXXFLAGS=$(CXXFLAGS)\" \\\n+       \"CFLAGS_FOR_BUILD=$(CFLAGS_FOR_BUILD)\" \\\n+       \"CFLAGS_FOR_TARGET=$(CFLAGS_FOR_TARGET)\" \\\n+       \"INSTALL=$(INSTALL)\" \\\n+       \"INSTALL_DATA=$(INSTALL_DATA)\" \\\n+       \"INSTALL_PROGRAM=$(INSTALL_PROGRAM)\" \\\n+       \"INSTALL_SCRIPT=$(INSTALL_SCRIPT)\" \\\n+       \"JC1FLAGS=$(JC1FLAGS)\" \\\n+       \"LDFLAGS=$(LDFLAGS)\" \\\n+       \"LIBCFLAGS=$(LIBCFLAGS)\" \\\n+       \"LIBCFLAGS_FOR_TARGET=$(LIBCFLAGS_FOR_TARGET)\" \\\n+       \"MAKE=$(MAKE)\" \\\n+       \"MAKEINFO=$(MAKEINFO) $(MAKEINFOFLAGS)\" \\\n+       \"PICFLAG=$(PICFLAG)\" \\\n+       \"PICFLAG_FOR_TARGET=$(PICFLAG_FOR_TARGET)\" \\\n+       \"SHELL=$(SHELL)\" \\\n+       \"RUNTESTFLAGS=$(RUNTESTFLAGS)\" \\\n+       \"exec_prefix=$(exec_prefix)\" \\\n+       \"infodir=$(infodir)\" \\\n+       \"libdir=$(libdir)\" \\\n+       \"prefix=$(prefix)\" \\\n+       \"includedir=$(includedir)\" \\\n+       \"AR=$(AR)\" \\\n+       \"AS=$(AS)\" \\\n+       \"LD=$(LD)\" \\\n+       \"LIBCFLAGS=$(LIBCFLAGS)\" \\\n+       \"NM=$(NM)\" \\\n+       \"PICFLAG=$(PICFLAG)\" \\\n+       \"RANLIB=$(RANLIB)\" \\\n+       \"DESTDIR=$(DESTDIR)\"\n+\n+MAKEOVERRIDES =\n+"}, {"sha": "9294d3e317decb957c5df9627b9be398b1305e2d", "filename": "libmpx/mpxwrap/Makefile.in", "status": "added", "additions": 542, "deletions": 0, "changes": 542, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2d7e672ad18c54aedfa766b7918d1631a22b4fa/libmpx%2Fmpxwrap%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2d7e672ad18c54aedfa766b7918d1631a22b4fa/libmpx%2Fmpxwrap%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libmpx%2Fmpxwrap%2FMakefile.in?ref=d2d7e672ad18c54aedfa766b7918d1631a22b4fa", "patch": "@@ -0,0 +1,542 @@\n+# Makefile.in generated by automake 1.11.1 from Makefile.am.\n+# @configure_input@\n+\n+# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,\n+# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,\n+# Inc.\n+# This Makefile.in is free software; the Free Software Foundation\n+# gives unlimited permission to copy and/or distribute it,\n+# with or without modifications, as long as this notice is preserved.\n+\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY, to the extent permitted by law; without\n+# even the implied warranty of MERCHANTABILITY or FITNESS FOR A\n+# PARTICULAR PURPOSE.\n+\n+@SET_MAKE@\n+\n+VPATH = @srcdir@\n+pkgdatadir = $(datadir)/@PACKAGE@\n+pkgincludedir = $(includedir)/@PACKAGE@\n+pkglibdir = $(libdir)/@PACKAGE@\n+pkglibexecdir = $(libexecdir)/@PACKAGE@\n+am__cd = CDPATH=\"$${ZSH_VERSION+.}$(PATH_SEPARATOR)\" && cd\n+install_sh_DATA = $(install_sh) -c -m 644\n+install_sh_PROGRAM = $(install_sh) -c\n+install_sh_SCRIPT = $(install_sh) -c\n+INSTALL_HEADER = $(INSTALL_DATA)\n+transform = $(program_transform_name)\n+NORMAL_INSTALL = :\n+PRE_INSTALL = :\n+POST_INSTALL = :\n+NORMAL_UNINSTALL = :\n+PRE_UNINSTALL = :\n+POST_UNINSTALL = :\n+build_triplet = @build@\n+host_triplet = @host@\n+target_triplet = @target@\n+subdir = mpxwrap\n+DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/Makefile.am\n+ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n+am__aclocal_m4_deps = $(top_srcdir)/../config/acx.m4 \\\n+\t$(top_srcdir)/../config/lead-dot.m4 \\\n+\t$(top_srcdir)/../config/libstdc++-raw-cxx.m4 \\\n+\t$(top_srcdir)/../config/multi.m4 \\\n+\t$(top_srcdir)/../config/override.m4 \\\n+\t$(top_srcdir)/../libtool.m4 $(top_srcdir)/../ltoptions.m4 \\\n+\t$(top_srcdir)/../ltsugar.m4 $(top_srcdir)/../ltversion.m4 \\\n+\t$(top_srcdir)/../lt~obsolete.m4 $(top_srcdir)/configure.ac\n+am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\\n+\t$(ACLOCAL_M4)\n+mkinstalldirs = $(SHELL) $(top_srcdir)/../mkinstalldirs\n+CONFIG_HEADER = $(top_builddir)/config.h\n+CONFIG_CLEAN_FILES =\n+CONFIG_CLEAN_VPATH_FILES =\n+am__vpath_adj_setup = srcdirstrip=`echo \"$(srcdir)\" | sed 's|.|.|g'`;\n+am__vpath_adj = case $$p in \\\n+    $(srcdir)/*) f=`echo \"$$p\" | sed \"s|^$$srcdirstrip/||\"`;; \\\n+    *) f=$$p;; \\\n+  esac;\n+am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;\n+am__install_max = 40\n+am__nobase_strip_setup = \\\n+  srcdirstrip=`echo \"$(srcdir)\" | sed 's/[].[^$$\\\\*|]/\\\\\\\\&/g'`\n+am__nobase_strip = \\\n+  for p in $$list; do echo \"$$p\"; done | sed -e \"s|$$srcdirstrip/||\"\n+am__nobase_list = $(am__nobase_strip_setup); \\\n+  for p in $$list; do echo \"$$p $$p\"; done | \\\n+  sed \"s| $$srcdirstrip/| |;\"' / .*\\//!s/ .*/ ./; s,\\( .*\\)/[^/]*$$,\\1,' | \\\n+  $(AWK) 'BEGIN { files[\".\"] = \"\" } { files[$$2] = files[$$2] \" \" $$1; \\\n+    if (++n[$$2] == $(am__install_max)) \\\n+      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = \"\" } } \\\n+    END { for (dir in files) print dir, files[dir] }'\n+am__base_list = \\\n+  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\\n/ /g' | \\\n+  sed '$$!N;$$!N;$$!N;$$!N;s/\\n/ /g'\n+am__installdirs = \"$(DESTDIR)$(toolexeclibdir)\"\n+LTLIBRARIES = $(toolexeclib_LTLIBRARIES)\n+libmpxwrappers_la_LIBADD =\n+am_libmpxwrappers_la_OBJECTS = libmpxwrappers_la-mpx_wrappers.lo\n+libmpxwrappers_la_OBJECTS = $(am_libmpxwrappers_la_OBJECTS)\n+libmpxwrappers_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \\\n+\t$(LIBTOOLFLAGS) --mode=link $(CCLD) \\\n+\t$(libmpxwrappers_la_CFLAGS) $(CFLAGS) \\\n+\t$(libmpxwrappers_la_LDFLAGS) $(LDFLAGS) -o $@\n+DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)\n+depcomp =\n+am__depfiles_maybe =\n+COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \\\n+\t$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)\n+LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\\n+\t--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \\\n+\t$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)\n+CCLD = $(CC)\n+LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\\n+\t--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \\\n+\t$(LDFLAGS) -o $@\n+SOURCES = $(libmpxwrappers_la_SOURCES)\n+ETAGS = etags\n+CTAGS = ctags\n+ACLOCAL = @ACLOCAL@\n+AMTAR = @AMTAR@\n+AR = @AR@\n+AS = @AS@\n+AUTOCONF = @AUTOCONF@\n+AUTOHEADER = @AUTOHEADER@\n+AUTOMAKE = @AUTOMAKE@\n+AWK = @AWK@\n+CC = @CC@\n+CCAS = @CCAS@\n+CCASFLAGS = @CCASFLAGS@\n+CFLAGS = @CFLAGS@\n+CPP = @CPP@\n+CPPFLAGS = @CPPFLAGS@\n+CXX = @CXX@\n+CXXCPP = @CXXCPP@\n+CXXFLAGS = @CXXFLAGS@\n+CYGPATH_W = @CYGPATH_W@\n+DEFS = @DEFS@\n+DSYMUTIL = @DSYMUTIL@\n+DUMPBIN = @DUMPBIN@\n+ECHO_C = @ECHO_C@\n+ECHO_N = @ECHO_N@\n+ECHO_T = @ECHO_T@\n+EGREP = @EGREP@\n+EXEEXT = @EXEEXT@\n+FGREP = @FGREP@\n+GREP = @GREP@\n+INSTALL = @INSTALL@\n+INSTALL_DATA = @INSTALL_DATA@\n+INSTALL_PROGRAM = @INSTALL_PROGRAM@\n+INSTALL_SCRIPT = @INSTALL_SCRIPT@\n+INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@\n+LD = @LD@\n+LDFLAGS = @LDFLAGS@\n+LIBOBJS = @LIBOBJS@\n+LIBS = @LIBS@\n+LIBSTDCXX_RAW_CXX_CXXFLAGS = @LIBSTDCXX_RAW_CXX_CXXFLAGS@\n+LIBSTDCXX_RAW_CXX_LDFLAGS = @LIBSTDCXX_RAW_CXX_LDFLAGS@\n+LIBTOOL = @LIBTOOL@\n+LIPO = @LIPO@\n+LN_S = @LN_S@\n+LTLIBOBJS = @LTLIBOBJS@\n+MAINT = @MAINT@\n+MAKEINFO = @MAKEINFO@\n+MKDIR_P = @MKDIR_P@\n+NM = @NM@\n+NMEDIT = @NMEDIT@\n+OBJDUMP = @OBJDUMP@\n+OBJEXT = @OBJEXT@\n+OTOOL = @OTOOL@\n+OTOOL64 = @OTOOL64@\n+PACKAGE = @PACKAGE@\n+PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@\n+PACKAGE_NAME = @PACKAGE_NAME@\n+PACKAGE_STRING = @PACKAGE_STRING@\n+PACKAGE_TARNAME = @PACKAGE_TARNAME@\n+PACKAGE_URL = @PACKAGE_URL@\n+PACKAGE_VERSION = @PACKAGE_VERSION@\n+PATH_SEPARATOR = @PATH_SEPARATOR@\n+RANLIB = @RANLIB@\n+SED = @SED@\n+SET_MAKE = @SET_MAKE@\n+SHELL = @SHELL@\n+STRIP = @STRIP@\n+VERSION = @VERSION@\n+XCFLAGS = @XCFLAGS@\n+abs_builddir = @abs_builddir@\n+abs_srcdir = @abs_srcdir@\n+abs_top_builddir = @abs_top_builddir@\n+abs_top_srcdir = @abs_top_srcdir@\n+ac_ct_CC = @ac_ct_CC@\n+ac_ct_CXX = @ac_ct_CXX@\n+ac_ct_DUMPBIN = @ac_ct_DUMPBIN@\n+am__leading_dot = @am__leading_dot@\n+am__tar = @am__tar@\n+am__untar = @am__untar@\n+bindir = @bindir@\n+build = @build@\n+build_alias = @build_alias@\n+build_cpu = @build_cpu@\n+build_os = @build_os@\n+build_vendor = @build_vendor@\n+builddir = @builddir@\n+datadir = @datadir@\n+datarootdir = @datarootdir@\n+docdir = @docdir@\n+dvidir = @dvidir@\n+enable_shared = @enable_shared@\n+enable_static = @enable_static@\n+exec_prefix = @exec_prefix@\n+host = @host@\n+host_alias = @host_alias@\n+host_cpu = @host_cpu@\n+host_os = @host_os@\n+host_vendor = @host_vendor@\n+htmldir = @htmldir@\n+includedir = @includedir@\n+infodir = @infodir@\n+install_sh = @install_sh@\n+libdir = @libdir@\n+libexecdir = @libexecdir@\n+link_libmpx = @link_libmpx@\n+localedir = @localedir@\n+localstatedir = @localstatedir@\n+mandir = @mandir@\n+mkdir_p = @mkdir_p@\n+multi_basedir = @multi_basedir@\n+oldincludedir = @oldincludedir@\n+pdfdir = @pdfdir@\n+prefix = @prefix@\n+program_transform_name = @program_transform_name@\n+psdir = @psdir@\n+sbindir = @sbindir@\n+sharedstatedir = @sharedstatedir@\n+srcdir = @srcdir@\n+sysconfdir = @sysconfdir@\n+target = @target@\n+target_alias = @target_alias@\n+target_cpu = @target_cpu@\n+target_noncanonical = @target_noncanonical@\n+target_os = @target_os@\n+target_vendor = @target_vendor@\n+toolexecdir = @toolexecdir@\n+toolexeclibdir = @toolexeclibdir@\n+top_build_prefix = @top_build_prefix@\n+top_builddir = @top_builddir@\n+top_srcdir = @top_srcdir@\n+ALCLOCAL_AMFLAGS = -I .. -I ../config\n+\n+# May be used by toolexeclibdir.\n+gcc_version := $(shell cat $(top_srcdir)/../gcc/BASE-VER)\n+libmpxwrappers_la_CFLAGS = -fcheck-pointer-bounds -mmpx -fno-chkp-check-read \\\n+\t\t\t   -fno-chkp-check-write -fno-chkp-use-wrappers -fPIC\n+\n+libmpxwrappers_la_DEPENDENCIES = libmpxwrappers.map\n+libmpxwrappers_la_LDFLAGS = -Wl,--version-script=$(srcdir)/libmpxwrappers.map\n+toolexeclib_LTLIBRARIES = libmpxwrappers.la\n+libmpxwrappers_la_SOURCES = mpx_wrappers.c\n+\n+# Work around what appears to be a GNU make bug handling MAKEFLAGS\n+# values defined in terms of make variables, as is the case for CC and\n+# friends when we are called from the top level Makefile.\n+AM_MAKEFLAGS = \\\n+       \"AR_FLAGS=$(AR_FLAGS)\" \\\n+       \"CC_FOR_BUILD=$(CC_FOR_BUILD)\" \\\n+       \"CFLAGS=$(CFLAGS)\" \\\n+       \"CXXFLAGS=$(CXXFLAGS)\" \\\n+       \"CFLAGS_FOR_BUILD=$(CFLAGS_FOR_BUILD)\" \\\n+       \"CFLAGS_FOR_TARGET=$(CFLAGS_FOR_TARGET)\" \\\n+       \"INSTALL=$(INSTALL)\" \\\n+       \"INSTALL_DATA=$(INSTALL_DATA)\" \\\n+       \"INSTALL_PROGRAM=$(INSTALL_PROGRAM)\" \\\n+       \"INSTALL_SCRIPT=$(INSTALL_SCRIPT)\" \\\n+       \"JC1FLAGS=$(JC1FLAGS)\" \\\n+       \"LDFLAGS=$(LDFLAGS)\" \\\n+       \"LIBCFLAGS=$(LIBCFLAGS)\" \\\n+       \"LIBCFLAGS_FOR_TARGET=$(LIBCFLAGS_FOR_TARGET)\" \\\n+       \"MAKE=$(MAKE)\" \\\n+       \"MAKEINFO=$(MAKEINFO) $(MAKEINFOFLAGS)\" \\\n+       \"PICFLAG=$(PICFLAG)\" \\\n+       \"PICFLAG_FOR_TARGET=$(PICFLAG_FOR_TARGET)\" \\\n+       \"SHELL=$(SHELL)\" \\\n+       \"RUNTESTFLAGS=$(RUNTESTFLAGS)\" \\\n+       \"exec_prefix=$(exec_prefix)\" \\\n+       \"infodir=$(infodir)\" \\\n+       \"libdir=$(libdir)\" \\\n+       \"prefix=$(prefix)\" \\\n+       \"includedir=$(includedir)\" \\\n+       \"AR=$(AR)\" \\\n+       \"AS=$(AS)\" \\\n+       \"LD=$(LD)\" \\\n+       \"LIBCFLAGS=$(LIBCFLAGS)\" \\\n+       \"NM=$(NM)\" \\\n+       \"PICFLAG=$(PICFLAG)\" \\\n+       \"RANLIB=$(RANLIB)\" \\\n+       \"DESTDIR=$(DESTDIR)\"\n+\n+MAKEOVERRIDES = \n+all: all-am\n+\n+.SUFFIXES:\n+.SUFFIXES: .c .lo .o .obj\n+$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)\n+\t@for dep in $?; do \\\n+\t  case '$(am__configure_deps)' in \\\n+\t    *$$dep*) \\\n+\t      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \\\n+\t        && { if test -f $@; then exit 0; else break; fi; }; \\\n+\t      exit 1;; \\\n+\t  esac; \\\n+\tdone; \\\n+\techo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign --ignore-deps mpxwrap/Makefile'; \\\n+\t$(am__cd) $(top_srcdir) && \\\n+\t  $(AUTOMAKE) --foreign --ignore-deps mpxwrap/Makefile\n+.PRECIOUS: Makefile\n+Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status\n+\t@case '$?' in \\\n+\t  *config.status*) \\\n+\t    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \\\n+\t  *) \\\n+\t    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \\\n+\t    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \\\n+\tesac;\n+\n+$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)\n+\tcd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh\n+\n+$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)\n+\tcd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh\n+$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)\n+\tcd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh\n+$(am__aclocal_m4_deps):\n+install-toolexeclibLTLIBRARIES: $(toolexeclib_LTLIBRARIES)\n+\t@$(NORMAL_INSTALL)\n+\ttest -z \"$(toolexeclibdir)\" || $(MKDIR_P) \"$(DESTDIR)$(toolexeclibdir)\"\n+\t@list='$(toolexeclib_LTLIBRARIES)'; test -n \"$(toolexeclibdir)\" || list=; \\\n+\tlist2=; for p in $$list; do \\\n+\t  if test -f $$p; then \\\n+\t    list2=\"$$list2 $$p\"; \\\n+\t  else :; fi; \\\n+\tdone; \\\n+\ttest -z \"$$list2\" || { \\\n+\t  echo \" $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(toolexeclibdir)'\"; \\\n+\t  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 \"$(DESTDIR)$(toolexeclibdir)\"; \\\n+\t}\n+\n+uninstall-toolexeclibLTLIBRARIES:\n+\t@$(NORMAL_UNINSTALL)\n+\t@list='$(toolexeclib_LTLIBRARIES)'; test -n \"$(toolexeclibdir)\" || list=; \\\n+\tfor p in $$list; do \\\n+\t  $(am__strip_dir) \\\n+\t  echo \" $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(toolexeclibdir)/$$f'\"; \\\n+\t  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f \"$(DESTDIR)$(toolexeclibdir)/$$f\"; \\\n+\tdone\n+\n+clean-toolexeclibLTLIBRARIES:\n+\t-test -z \"$(toolexeclib_LTLIBRARIES)\" || rm -f $(toolexeclib_LTLIBRARIES)\n+\t@list='$(toolexeclib_LTLIBRARIES)'; for p in $$list; do \\\n+\t  dir=\"`echo $$p | sed -e 's|/[^/]*$$||'`\"; \\\n+\t  test \"$$dir\" != \"$$p\" || dir=.; \\\n+\t  echo \"rm -f \\\"$${dir}/so_locations\\\"\"; \\\n+\t  rm -f \"$${dir}/so_locations\"; \\\n+\tdone\n+libmpxwrappers.la: $(libmpxwrappers_la_OBJECTS) $(libmpxwrappers_la_DEPENDENCIES) \n+\t$(libmpxwrappers_la_LINK) -rpath $(toolexeclibdir) $(libmpxwrappers_la_OBJECTS) $(libmpxwrappers_la_LIBADD) $(LIBS)\n+\n+mostlyclean-compile:\n+\t-rm -f *.$(OBJEXT)\n+\n+distclean-compile:\n+\t-rm -f *.tab.c\n+\n+.c.o:\n+\t$(COMPILE) -c $<\n+\n+.c.obj:\n+\t$(COMPILE) -c `$(CYGPATH_W) '$<'`\n+\n+.c.lo:\n+\t$(LTCOMPILE) -c -o $@ $<\n+\n+libmpxwrappers_la-mpx_wrappers.lo: mpx_wrappers.c\n+\t$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libmpxwrappers_la_CFLAGS) $(CFLAGS) -c -o libmpxwrappers_la-mpx_wrappers.lo `test -f 'mpx_wrappers.c' || echo '$(srcdir)/'`mpx_wrappers.c\n+\n+mostlyclean-libtool:\n+\t-rm -f *.lo\n+\n+clean-libtool:\n+\t-rm -rf .libs _libs\n+\n+ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)\n+\tlist='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \\\n+\tunique=`for i in $$list; do \\\n+\t    if test -f \"$$i\"; then echo $$i; else echo $(srcdir)/$$i; fi; \\\n+\t  done | \\\n+\t  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \\\n+\t      END { if (nonempty) { for (i in files) print i; }; }'`; \\\n+\tmkid -fID $$unique\n+tags: TAGS\n+\n+TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \\\n+\t\t$(TAGS_FILES) $(LISP)\n+\tset x; \\\n+\there=`pwd`; \\\n+\tlist='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \\\n+\tunique=`for i in $$list; do \\\n+\t    if test -f \"$$i\"; then echo $$i; else echo $(srcdir)/$$i; fi; \\\n+\t  done | \\\n+\t  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \\\n+\t      END { if (nonempty) { for (i in files) print i; }; }'`; \\\n+\tshift; \\\n+\tif test -z \"$(ETAGS_ARGS)$$*$$unique\"; then :; else \\\n+\t  test -n \"$$unique\" || unique=$$empty_fix; \\\n+\t  if test $$# -gt 0; then \\\n+\t    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \\\n+\t      \"$$@\" $$unique; \\\n+\t  else \\\n+\t    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \\\n+\t      $$unique; \\\n+\t  fi; \\\n+\tfi\n+ctags: CTAGS\n+CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \\\n+\t\t$(TAGS_FILES) $(LISP)\n+\tlist='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \\\n+\tunique=`for i in $$list; do \\\n+\t    if test -f \"$$i\"; then echo $$i; else echo $(srcdir)/$$i; fi; \\\n+\t  done | \\\n+\t  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \\\n+\t      END { if (nonempty) { for (i in files) print i; }; }'`; \\\n+\ttest -z \"$(CTAGS_ARGS)$$unique\" \\\n+\t  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \\\n+\t     $$unique\n+\n+GTAGS:\n+\there=`$(am__cd) $(top_builddir) && pwd` \\\n+\t  && $(am__cd) $(top_srcdir) \\\n+\t  && gtags -i $(GTAGS_ARGS) \"$$here\"\n+\n+distclean-tags:\n+\t-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags\n+check-am: all-am\n+check: check-am\n+all-am: Makefile $(LTLIBRARIES)\n+installdirs:\n+\tfor dir in \"$(DESTDIR)$(toolexeclibdir)\"; do \\\n+\t  test -z \"$$dir\" || $(MKDIR_P) \"$$dir\"; \\\n+\tdone\n+install: install-am\n+install-exec: install-exec-am\n+install-data: install-data-am\n+uninstall: uninstall-am\n+\n+install-am: all-am\n+\t@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am\n+\n+installcheck: installcheck-am\n+install-strip:\n+\t$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" \\\n+\t  install_sh_PROGRAM=\"$(INSTALL_STRIP_PROGRAM)\" INSTALL_STRIP_FLAG=-s \\\n+\t  `test -z '$(STRIP)' || \\\n+\t    echo \"INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'\"` install\n+mostlyclean-generic:\n+\n+clean-generic:\n+\n+distclean-generic:\n+\t-test -z \"$(CONFIG_CLEAN_FILES)\" || rm -f $(CONFIG_CLEAN_FILES)\n+\t-test . = \"$(srcdir)\" || test -z \"$(CONFIG_CLEAN_VPATH_FILES)\" || rm -f $(CONFIG_CLEAN_VPATH_FILES)\n+\n+maintainer-clean-generic:\n+\t@echo \"This command is intended for maintainers to use\"\n+\t@echo \"it deletes files that may require special tools to rebuild.\"\n+clean: clean-am\n+\n+clean-am: clean-generic clean-libtool clean-toolexeclibLTLIBRARIES \\\n+\tmostlyclean-am\n+\n+distclean: distclean-am\n+\t-rm -f Makefile\n+distclean-am: clean-am distclean-compile distclean-generic \\\n+\tdistclean-tags\n+\n+dvi: dvi-am\n+\n+dvi-am:\n+\n+html: html-am\n+\n+html-am:\n+\n+info: info-am\n+\n+info-am:\n+\n+install-data-am:\n+\n+install-dvi: install-dvi-am\n+\n+install-dvi-am:\n+\n+install-exec-am: install-toolexeclibLTLIBRARIES\n+\n+install-html: install-html-am\n+\n+install-html-am:\n+\n+install-info: install-info-am\n+\n+install-info-am:\n+\n+install-man:\n+\n+install-pdf: install-pdf-am\n+\n+install-pdf-am:\n+\n+install-ps: install-ps-am\n+\n+install-ps-am:\n+\n+installcheck-am:\n+\n+maintainer-clean: maintainer-clean-am\n+\t-rm -f Makefile\n+maintainer-clean-am: distclean-am maintainer-clean-generic\n+\n+mostlyclean: mostlyclean-am\n+\n+mostlyclean-am: mostlyclean-compile mostlyclean-generic \\\n+\tmostlyclean-libtool\n+\n+pdf: pdf-am\n+\n+pdf-am:\n+\n+ps: ps-am\n+\n+ps-am:\n+\n+uninstall-am: uninstall-toolexeclibLTLIBRARIES\n+\n+.MAKE: install-am install-strip\n+\n+.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \\\n+\tclean-libtool clean-toolexeclibLTLIBRARIES ctags distclean \\\n+\tdistclean-compile distclean-generic distclean-libtool \\\n+\tdistclean-tags dvi dvi-am html html-am info info-am install \\\n+\tinstall-am install-data install-data-am install-dvi \\\n+\tinstall-dvi-am install-exec install-exec-am install-html \\\n+\tinstall-html-am install-info install-info-am install-man \\\n+\tinstall-pdf install-pdf-am install-ps install-ps-am \\\n+\tinstall-strip install-toolexeclibLTLIBRARIES installcheck \\\n+\tinstallcheck-am installdirs maintainer-clean \\\n+\tmaintainer-clean-generic mostlyclean mostlyclean-compile \\\n+\tmostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \\\n+\ttags uninstall uninstall-am uninstall-toolexeclibLTLIBRARIES\n+\n+\n+# Tell versions [3.59,3.63) of GNU make to not export all variables.\n+# Otherwise a system limit (for SysV at least) may be exceeded.\n+.NOEXPORT:"}, {"sha": "c2912a7e18b3fcd9d06cbfbb7c9330c67b0f7c11", "filename": "libmpx/mpxwrap/libmpxwrappers.map", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2d7e672ad18c54aedfa766b7918d1631a22b4fa/libmpx%2Fmpxwrap%2Flibmpxwrappers.map", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2d7e672ad18c54aedfa766b7918d1631a22b4fa/libmpx%2Fmpxwrap%2Flibmpxwrappers.map", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libmpx%2Fmpxwrap%2Flibmpxwrappers.map?ref=d2d7e672ad18c54aedfa766b7918d1631a22b4fa", "patch": "@@ -0,0 +1,23 @@\n+LIBMPXWRAPPERS_1.0\n+{\n+  global:\n+\t__mpx_wrapper_malloc;\n+\t__mpx_wrapper_mmap;\n+\t__mpx_wrapper_realloc;\n+\t__mpx_wrapper_calloc;\n+\t__mpx_wrapper_memset;\n+\t__mpx_wrapper_bzero;\n+\t__mpx_wrapper_memmove;\n+\t__mpx_wrapper_memcpy;\n+\t__mpx_wrapper_mempcpy;\n+\t__mpx_wrapper_strncat;\n+\t__mpx_wrapper_strcat;\n+\t__mpx_wrapper_stpcpy;\n+\t__mpx_wrapper_stpncpy;\n+\t__mpx_wrapper_strcpy;\n+\t__mpx_wrapper_strncpy;\n+\t__mpx_wrapper_strlen;\n+\n+  local:\n+\t*;\n+};"}, {"sha": "bfe84c8af534c8490d1b4b91d4c93fd0194ada2e", "filename": "libmpx/mpxwrap/libtool-version", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2d7e672ad18c54aedfa766b7918d1631a22b4fa/libmpx%2Fmpxwrap%2Flibtool-version", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2d7e672ad18c54aedfa766b7918d1631a22b4fa/libmpx%2Fmpxwrap%2Flibtool-version", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libmpx%2Fmpxwrap%2Flibtool-version?ref=d2d7e672ad18c54aedfa766b7918d1631a22b4fa", "patch": "@@ -0,0 +1,6 @@\n+# This file is used to maintain libtool version info for libmpxintr.  See\n+# the libtool manual to understand the meaning of the fields.  This is\n+# a separate file so that version updates don't involve re-running\n+# automake.\n+# CURRENT:REVISION:AGE\n+1:0:0"}, {"sha": "ef4be8d0a3902f53ad7d0c473148814ec93613d6", "filename": "libmpx/mpxwrap/mpx_wrappers.c", "status": "added", "additions": 278, "deletions": 0, "changes": 278, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2d7e672ad18c54aedfa766b7918d1631a22b4fa/libmpx%2Fmpxwrap%2Fmpx_wrappers.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2d7e672ad18c54aedfa766b7918d1631a22b4fa/libmpx%2Fmpxwrap%2Fmpx_wrappers.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libmpx%2Fmpxwrap%2Fmpx_wrappers.c?ref=d2d7e672ad18c54aedfa766b7918d1631a22b4fa", "patch": "@@ -0,0 +1,278 @@\n+/* MPX Wrappers Library\n+   Copyright (C) 2014 Free Software Foundation, Inc.\n+   Contributed by Ilya Enkovich (ilya.enkovich@intel.com)\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it under\n+   the terms of the GNU General Public License as published by the Free\n+   Software Foundation; either version 3, or (at your option) any later\n+   version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n+   WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+   FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+   for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+#include \"stdlib.h\"\n+#include \"string.h\"\n+#include <sys/mman.h>\n+\n+void *\n+__mpx_wrapper_malloc (size_t size)\n+{\n+  void *p = (void *)malloc (size);\n+  if (!p) return __bnd_null_ptr_bounds (p);\n+  return __bnd_set_ptr_bounds (p, size);\n+}\n+\n+\n+void *\n+__mpx_wrapper_mmap (void *addr, size_t length, int prot, int flags,\n+\t\t    int fd, off_t offset)\n+{\n+  void *p = mmap (addr, length, prot, flags, fd, offset);\n+  if (!p) return __bnd_null_ptr_bounds (p);\n+  return __bnd_set_ptr_bounds (p, length);\n+}\n+\n+void *\n+__mpx_wrapper_realloc (void *ptr, size_t n)\n+{\n+  if (!ptr)\n+    return __mpx_wrapper_malloc (n);\n+\n+  /* We don't kwnow how much data is copied by realloc\n+     and therefore may check only lower bounds.  */\n+  __bnd_chk_ptr_lbounds (ptr);\n+  ptr = realloc (ptr, n);\n+\n+  if (!ptr)\n+    return __bnd_null_ptr_bounds (ptr);\n+\n+  return __bnd_set_ptr_bounds (ptr, n);\n+}\n+\n+void *\n+__mpx_wrapper_calloc (size_t n_elements, size_t element_size)\n+{\n+  void *p = calloc (n_elements, element_size);\n+  if (!p)\n+    return __bnd_null_ptr_bounds (p);\n+  return __bnd_set_ptr_bounds (p, n_elements * element_size);\n+}\n+\n+void *\n+__mpx_wrapper_memset (void *dstpp, int c, size_t len)\n+{\n+  if (len > 0)\n+    {\n+      __bnd_chk_ptr_bounds (dstpp, len);\n+      memset (dstpp, c, len);\n+    }\n+  return dstpp;\n+}\n+\n+void\n+__mpx_wrapper_bzero (void *dst, size_t len)\n+{\n+  __mpx_wrapper_memset (dst, 0, len);\n+}\n+\n+void *\n+__mpx_wrapper_memmove (void *dst, const void *src, size_t n)\n+{\n+  const char *s = (const char*)src;\n+  char *d = (char*)dst;\n+  void *ret = dst;\n+  size_t offset_src = ((size_t) s) & (sizeof (void *) - 1);\n+  size_t offset_dst = ((size_t) d) & (sizeof (void *) - 1);\n+\n+  __bnd_chk_ptr_bounds (dst, n);\n+  __bnd_chk_ptr_bounds (src, n);\n+\n+  /* Different alignment means that even if\n+     pointers exist in memory, we don't how\n+     pointers are aligned and therefore cann't\n+     copy bounds anyway.  */\n+  if (offset_src != offset_dst)\n+    memmove (dst, src, n);\n+  else\n+    {\n+      if (s < d)\n+\t{\n+\t  d += n;\n+\t  s += n;\n+\t  offset_src = (offset_src + n) & (sizeof (void *) -1);\n+\t  while (n-- && offset_src--)\n+\t    *--d = *--s;\n+\t  n++;\n+\t  if (!n)\n+\t    return ret;\n+\t  void **d1 = (void **)d;\n+\t  void **s1 = (void **)s;\n+\t  /* This loop will also copy bounds.  */\n+\t  while (n >= sizeof (void *))\n+\t    {\n+\t      n -= sizeof (void *);\n+\t      *--d1 = *--s1;\n+\t    }\n+\t  s = (char *)s1;\n+\t  d = (char *)d1;\n+\t  while (n--)\n+\t    *--d = *--s;\n+\t}\n+      else\n+\t{\n+\t  offset_src = sizeof (void *) - offset_src;\n+\t  while (n-- && offset_src--)\n+\t    *d++ = *s++;\n+\t  n++;\n+\t  if (!n)\n+\t    return ret;\n+\t  void **d1 = (void **)d;\n+\t  void **s1 = (void **)s;\n+\t  /* This loop will also copy bounds.  */\n+\t  while (n >= sizeof (void *))\n+\t    {\n+\t      n -= sizeof (void *);\n+\t      *d1++ = *s1++;\n+\t    }\n+\t  s = (char *)s1;\n+\t  d = (char *)d1;\n+\t  while (n--)\n+\t    *d++ = *s++;\n+\t}\n+    }\n+  return ret;\n+}\n+\n+\n+void *\n+__mpx_wrapper_memcpy (void *dst, const void *src, size_t n)\n+{\n+  return __mpx_wrapper_memmove (dst, src, n);\n+}\n+\n+void *\n+__mpx_wrapper_mempcpy (void *dst, const void *src, size_t n)\n+{\n+  return (char *)__mpx_wrapper_memcpy (dst, src, n) + n;\n+}\n+\n+char *\n+__mpx_wrapper_strncat (char *dst, const char *src, size_t n)\n+{\n+  size_t dst_size = strlen (dst);\n+  size_t src_size = strnlen (src, n);\n+\n+  __bnd_chk_ptr_bounds (dst, dst_size + src_size + 1);\n+  if (src_size < n)\n+    __bnd_chk_ptr_bounds (src, src_size + 1);\n+  else\n+    __bnd_chk_ptr_bounds (src, src_size);\n+\n+  strncat (dst, src, n);\n+\n+  return dst;\n+}\n+\n+char *\n+__mpx_wrapper_strcat (char *dst, const char *src)\n+{\n+  size_t dst_size = strlen (dst);\n+  size_t src_size = strlen (src);\n+\n+  __bnd_chk_ptr_bounds (dst, dst_size + src_size + 1);\n+  __bnd_chk_ptr_bounds (src, src_size + 1);\n+\n+  strcat (dst, src);\n+\n+  return dst;\n+}\n+\n+char *\n+__mpx_wrapper_stpcpy (char *dst, const char *src)\n+{\n+  size_t src_size = strlen (src);\n+\n+  __bnd_chk_ptr_bounds (dst, src_size + 1);\n+  __bnd_chk_ptr_bounds (src, src_size + 1);\n+\n+  memcpy (dst, src, src_size + 1);\n+\n+  return dst + src_size;\n+}\n+\n+char *\n+__mpx_wrapper_stpncpy (char *dst, const char *src, size_t n)\n+{\n+  size_t src_size = strnlen (src, n);\n+  char *res;\n+\n+  __bnd_chk_ptr_bounds (dst, n);\n+  if (src_size < n)\n+    {\n+      __bnd_chk_ptr_bounds (src, src_size + 1);\n+      res = dst + src_size;\n+    }\n+  else\n+    {\n+      __bnd_chk_ptr_bounds (src, src_size);\n+      res = dst + n;\n+    }\n+\n+  memcpy (dst, src, src_size);\n+  if (n > src_size)\n+    memset (dst + src_size, 0, n - src_size);\n+\n+  return res;\n+}\n+\n+char *\n+__mpx_wrapper_strcpy (char *dst, const char *src)\n+{\n+  size_t src_size = strlen (src);\n+\n+  __bnd_chk_ptr_bounds (dst, src_size + 1);\n+  __bnd_chk_ptr_bounds (src, src_size + 1);\n+\n+  memcpy (dst, src, src_size + 1);\n+\n+  return dst;\n+}\n+\n+char *\n+__mpx_wrapper_strncpy (char *dst, const char *src, size_t n)\n+{\n+  size_t src_size = strnlen (src, n);\n+\n+  __bnd_chk_ptr_bounds (dst, n);\n+  if (src_size < n)\n+    __bnd_chk_ptr_bounds (src, src_size + 1);\n+  else\n+    __bnd_chk_ptr_bounds (src, src_size);\n+\n+  memcpy (dst, src, src_size);\n+  if (n > src_size)\n+    memset (dst + src_size, 0, n - src_size);\n+\n+  return dst;\n+}\n+\n+size_t\n+__mpx_wrapper_strlen (const char *s)\n+{\n+  size_t length = strlen (s);\n+  __bnd_chk_ptr_bounds (s, length + 1);\n+  return length;\n+}"}]}