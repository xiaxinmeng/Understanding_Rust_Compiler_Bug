{"sha": "dba44dbef91efd698ead6dcce7b19a24a4522000", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGJhNDRkYmVmOTFlZmQ2OThlYWQ2ZGNjZTdiMTlhMjRhNDUyMjAwMA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-04-24T13:04:40Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-04-24T13:04:40Z"}, "message": "[multiple changes]\n\n2013-04-24  Robert Dewar  <dewar@adacore.com>\n\n\t* exp_ch13.adb, sem_prag.adb: Update comments.\n\t* sem_ch3.adb, exp_ch9.adb, g-socket.adb, sem_ch13.adb: Minor\n\treformatting.\n\n2013-04-24  Doug Rupp  <rupp@adacore.com>\n\n\t* vms_data.ads (/{NO}INHIBIT-EXEC): Document new default behavior.\n\n2013-04-24  Yannick Moy  <moy@adacore.com>\n\n\t* sinfo.ads: Minor correction of typo.\n\nFrom-SVN: r198223", "tree": {"sha": "d41774edc5e71ca4dd9eb0d1a97fbbbe701d2d1e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d41774edc5e71ca4dd9eb0d1a97fbbbe701d2d1e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dba44dbef91efd698ead6dcce7b19a24a4522000", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dba44dbef91efd698ead6dcce7b19a24a4522000", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dba44dbef91efd698ead6dcce7b19a24a4522000", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dba44dbef91efd698ead6dcce7b19a24a4522000/comments", "author": null, "committer": null, "parents": [{"sha": "ca3e17b09114fea7ff08ed215ae79482ad16b706", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca3e17b09114fea7ff08ed215ae79482ad16b706", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca3e17b09114fea7ff08ed215ae79482ad16b706"}], "stats": {"total": 103, "additions": 73, "deletions": 30}, "files": [{"sha": "8353e50a00019a8da30248b698293c3b48836aff", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dba44dbef91efd698ead6dcce7b19a24a4522000/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dba44dbef91efd698ead6dcce7b19a24a4522000/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=dba44dbef91efd698ead6dcce7b19a24a4522000", "patch": "@@ -1,3 +1,17 @@\n+2013-04-24  Robert Dewar  <dewar@adacore.com>\n+\n+\t* exp_ch13.adb, sem_prag.adb: Update comments.\n+\t* sem_ch3.adb, exp_ch9.adb, g-socket.adb, sem_ch13.adb: Minor\n+\treformatting.\n+\n+2013-04-24  Doug Rupp  <rupp@adacore.com>\n+\n+\t* vms_data.ads (/{NO}INHIBIT-EXEC): Document new default behavior.\n+\n+2013-04-24  Yannick Moy  <moy@adacore.com>\n+\n+\t* sinfo.ads: Minor correction of typo.\n+\n 2013-04-24  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem_ch3.adb: Create packed array only when expander is"}, {"sha": "24e5e39ab7663f652fcc87aae70657201fc121a8", "filename": "gcc/ada/exp_ch13.adb", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dba44dbef91efd698ead6dcce7b19a24a4522000/gcc%2Fada%2Fexp_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dba44dbef91efd698ead6dcce7b19a24a4522000/gcc%2Fada%2Fexp_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch13.adb?ref=dba44dbef91efd698ead6dcce7b19a24a4522000", "patch": "@@ -567,19 +567,26 @@ package body Exp_Ch13 is\n                then\n                   declare\n                      Prag : Node_Id;\n+\n                   begin\n+                     --  Comment this loop ???\n+\n                      Prag := Pre_Post_Conditions (Contract (E));\n                      while Present (Prag) loop\n                         Analyze_PPC_In_Decl_Part (Prag, E);\n-\n                         Prag := Next_Pragma (Prag);\n                      end loop;\n \n+                     --  Why don't we do the same for Contract_Test_Cases ???\n+\n+                     --  Comment this loop?\n+\n                      Prag := Classifications (Contract (E));\n                      while Present (Prag) loop\n                         if Pragma_Name (Prag) = Name_Depends then\n                            Analyze_Depends_In_Decl_Part (Prag);\n                         else\n+                           pragma Assert (Pragma_Name (Prag) = Name_Global);\n                            Analyze_Global_In_Decl_Part (Prag);\n                         end if;\n "}, {"sha": "20a346ceec2cb385eaea5163f2e62cc39547ca25", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dba44dbef91efd698ead6dcce7b19a24a4522000/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dba44dbef91efd698ead6dcce7b19a24a4522000/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=dba44dbef91efd698ead6dcce7b19a24a4522000", "patch": "@@ -1926,6 +1926,7 @@ package body Exp_Ch9 is\n \n       begin\n          P := Pre_Post_Conditions (Contract (E));\n+\n          if No (P) then\n             return;\n          end if;"}, {"sha": "87493d2f60b772fa412374fac61b8ca2bb7246d3", "filename": "gcc/ada/g-socket.adb", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dba44dbef91efd698ead6dcce7b19a24a4522000/gcc%2Fada%2Fg-socket.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dba44dbef91efd698ead6dcce7b19a24a4522000/gcc%2Fada%2Fg-socket.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socket.adb?ref=dba44dbef91efd698ead6dcce7b19a24a4522000", "patch": "@@ -2221,10 +2221,8 @@ package body GNAT.Sockets is\n       Status        : out Boolean)\n    is\n       function C_Set_Close_On_Exec\n-        (Socket : Socket_Type; Close_On_Exec : C.int)\n-         return C.int;\n+        (Socket : Socket_Type; Close_On_Exec : C.int) return C.int;\n       pragma Import (C, C_Set_Close_On_Exec, \"__gnat_set_close_on_exec\");\n-\n    begin\n       Status := C_Set_Close_On_Exec (Socket, Boolean'Pos (Close_On_Exec)) = 0;\n    end Set_Close_On_Exec;"}, {"sha": "40749addb0fac6bcd0989b64ab9416e113812f99", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dba44dbef91efd698ead6dcce7b19a24a4522000/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dba44dbef91efd698ead6dcce7b19a24a4522000/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=dba44dbef91efd698ead6dcce7b19a24a4522000", "patch": "@@ -929,6 +929,8 @@ package body Sem_Ch13 is\n       --  Insert a postcondition-like pragma into the tree depending on the\n       --  context. Prag one of the following: Pre, Post, Depends or Global.\n \n+      --  Why not also Contract_Cases ???\n+\n       ---------------------------\n       -- Insert_Delayed_Pragma --\n       ---------------------------\n@@ -986,6 +988,8 @@ package body Sem_Ch13 is\n       --  Insert pragmas/attribute definition clause after this node when no\n       --  delayed analysis is required.\n \n+      --  Start of processing for Analyze_Aspect_Specifications\n+\n       --  The general processing involves building an attribute definition\n       --  clause or a pragma node that corresponds to the aspect. Then in order\n       --  to delay the evaluation of this aspect to the freeze point, we attach"}, {"sha": "3751ead0970911bc5e41b3e13b70aadec3901176", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dba44dbef91efd698ead6dcce7b19a24a4522000/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dba44dbef91efd698ead6dcce7b19a24a4522000/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=dba44dbef91efd698ead6dcce7b19a24a4522000", "patch": "@@ -2223,6 +2223,7 @@ package body Sem_Ch3 is\n                   if Pragma_Name (Prag) = Name_Depends then\n                      Analyze_Depends_In_Decl_Part (Prag);\n                   else\n+                     pragma Assert (Pragma_Name (Prag) = Name_Global);\n                      Analyze_Global_In_Decl_Part (Prag);\n                   end if;\n \n@@ -11530,7 +11531,8 @@ package body Sem_Ch3 is\n          --  If the component of the parent is packed, and the record type is\n          --  already frozen, as is the case for an itype, the component type\n          --  itself will not be frozen, and the packed array type for it must\n-         --  be constructed explicitly.\n+         --  be constructed explicitly. Since the creation of packed types is\n+         --  an expansion activity, we only do this if expansion is active.\n \n          if Expander_Active\n            and then Is_Packed (Compon_Type)"}, {"sha": "80b316b4f2216d365a2f089df1e5d37227885eda", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dba44dbef91efd698ead6dcce7b19a24a4522000/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dba44dbef91efd698ead6dcce7b19a24a4522000/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=dba44dbef91efd698ead6dcce7b19a24a4522000", "patch": "@@ -338,7 +338,8 @@ package body Sem_Prag is\n             Get_Requires_From_CTC_Pragma (N),\n             Get_Ensures_From_CTC_Pragma (N));\n \n-      elsif Pragma_Name (N) = Name_Contract_Cases then\n+      else\n+         pragma Assert (Pragma_Name (N) = Name_Contract_Cases);\n          Analyze_Contract_Cases\n            (Expression (First (Pragma_Argument_Associations (N))));\n \n@@ -6259,8 +6260,8 @@ package body Sem_Prag is\n                end if;\n             end loop;\n \n-         --  When the convention is Java or CIL, we also allow Import to be\n-         --  given for packages, generic packages, exceptions, record\n+         --  When the convention is Java or CIL, we also allow Import to\n+         --  be given for packages, generic packages, exceptions, record\n          --  components, and access to subprograms.\n \n          elsif (C = Convention_Java or else C = Convention_CIL)\n@@ -8297,7 +8298,7 @@ package body Sem_Prag is\n \n                elsif Nkind (State) = N_Null then\n                   Name := New_Internal_Name ('S');\n-                  Is_Null   := True;\n+                  Is_Null := True;\n                   Null_Seen := True;\n \n                   --  Catch a case where a null state appears in a list of\n@@ -8352,11 +8353,13 @@ package body Sem_Prag is\n \n                   --  Volatile requires exactly one Input or Output\n \n+                  --  Isn't this just Input_Seen = Output_Seen ???\n+\n                   if Volatile_Seen\n                     and then\n-                      ((Input_Seen and then Output_Seen)           --  both\n+                      ((Input_Seen and Output_Seen)           --  both\n                          or else\n-                       (not Input_Seen and then not Output_Seen))  --  none\n+                       (not Input_Seen and not Output_Seen))  --  none\n                   then\n                      Error_Msg_N\n                        (\"property Volatile requires exactly one Input or \""}, {"sha": "04a64ab9d3bbe08a2ea66f9169ea79add1e65510", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dba44dbef91efd698ead6dcce7b19a24a4522000/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dba44dbef91efd698ead6dcce7b19a24a4522000/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=dba44dbef91efd698ead6dcce7b19a24a4522000", "patch": "@@ -7043,18 +7043,18 @@ package Sinfo is\n       --  Classifications (Node3) (set to Empty if none)\n \n       --  Pre_Post_Conditions contains a collection of pragmas that correspond\n-      --  to pre- and post-conditions associated with an entry or a subprogram.\n+      --  to pre- and postconditions associated with an entry or a subprogram.\n       --  The pragmas can either come from source or be the byproduct of aspect\n-      --  expansion. The ordering in the list is of LIFO fasion.\n+      --  expansion. The ordering in the list is of LIFO fashion.\n \n       --  Contract_Test_Cases contains a collection of pragmas that correspond\n       --  to aspects/pragmas Contract_Cases and Test_Case. The ordering in the\n-      --  list is of LIFO fasion.\n+      --  list is of LIFO fashion.\n \n       --  Classifications contains pragmas that either categorize subprogram\n       --  inputs and outputs or establish dependencies between them. Currently\n       --  pragmas Depends and Global are stored in this list. The ordering is\n-      --  of LIFO fasion.\n+      --  of LIFO fashion.\n \n       -------------------\n       -- Expanded_Name --"}, {"sha": "91ee51db11919cd1a1e7dc9a5ecbe9c325ffc968", "filename": "gcc/ada/vms_data.ads", "status": "modified", "additions": 29, "deletions": 15, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dba44dbef91efd698ead6dcce7b19a24a4522000/gcc%2Fada%2Fvms_data.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dba44dbef91efd698ead6dcce7b19a24a4522000/gcc%2Fada%2Fvms_data.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fvms_data.ads?ref=dba44dbef91efd698ead6dcce7b19a24a4522000", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1996-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1996-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -4287,6 +4287,18 @@ package VMS_Data is\n    --   ification field in the image header. It overrides any pragma Ident\n    --   specified string.\n \n+   S_Link_NoInhib : aliased constant S := \"/NOINHIBIT-EXEC \"               &\n+                                            \"--for-linker=--noinhibit-exec\";\n+   --        /NOINHIBIT-EXEC (D)\n+   --\n+   --   Preserve executable if there are warnings. This is the default.\n+\n+   S_Link_Inhib : aliased constant S := \"/INHIBIT-EXEC \"                   &\n+                                            \"--for-linker=--inhibit-exec\";\n+   --        /INHIBIT-EXEC\n+   --\n+   --   Remove executable if there are warnings.\n+\n    S_Link_Libdir  : aliased constant S := \"/LIBDIR=*\"                      &\n                                             \"-L*\";\n    --        /LIBDIR=(directory, ...)\n@@ -4326,12 +4338,6 @@ package VMS_Data is\n    --   This may be used when a link is rerun with different options,\n    --   but there is no need to recompile the binder generated file.\n \n-   S_Link_Noinhib : aliased constant S := \"/NOINHIBIT-EXEC \"               &\n-                                            \"--for-linker=--noinhibit-exec\";\n-   --        /NOINHIBIT-EXEC\n-   --\n-   --   Delete executable if there are errors or warnings.\n-\n    S_Link_Nofiles : aliased constant S := \"/NOSTART_FILES \"                &\n                                             \"-nostartfiles\";\n    --        /NOSTART_FILES\n@@ -4407,12 +4413,13 @@ package VMS_Data is\n                       S_Link_Forlink 'Access,\n                       S_Link_Force   'Access,\n                       S_Link_Ident   'Access,\n+                      S_Link_NoInhib 'Access,\n+                      S_Link_Inhib   'Access,\n                       S_Link_Libdir  'Access,\n                       S_Link_Library 'Access,\n                       S_Link_Mess    'Access,\n                       S_Link_Nocomp  'Access,\n                       S_Link_Nofiles 'Access,\n-                      S_Link_Noinhib 'Access,\n                       S_Link_Project 'Access,\n                       S_Link_Return  'Access,\n                       S_Link_Static  'Access,\n@@ -6636,18 +6643,24 @@ package VMS_Data is\n    --   ification field in the image header. It overrides any pragma Ident\n    --   specified string.\n \n+   S_Shared_NoInhib : aliased constant S := \"/NOINHIBIT-IMAGE \"            &\n+                                            \"--for-linker=--noinhibit-exec\";\n+   --        /NOINHIBIT-EXEC (D)\n+   --\n+   --   Preserve image if there are warnings. This is the default.\n+\n+   S_Shared_Inhib : aliased constant S := \"/INHIBIT-IMAGE \"                &\n+                                            \"--for-linker=--inhibit-exec\";\n+   --        /INHIBIT-EXEC\n+   --\n+   --   Remove image if there are warnings.\n+\n    S_Shared_Nofiles : aliased constant S := \"/NOSTART_FILES \"              &\n                                             \"-nostartfiles\";\n    --        /NOSTART_FILES\n    --\n    --   Link in default image initialization and startup functions.\n \n-   S_Shared_Noinhib : aliased constant S := \"/NOINHIBIT-IMAGE \"            &\n-                                            \"--for-linker=--noinhibit-exec\";\n-   --        /NOINHIBIT-IMAGE\n-   --\n-   --   Delete image if there are errors or warnings.\n-\n    S_Shared_Verb    : aliased constant S := \"/VERBOSE \"                    &\n                                             \"-v\";\n    --        /NOVERBOSE (D)\n@@ -6667,8 +6680,9 @@ package VMS_Data is\n                        (S_Shared_Debug   'Access,\n                         S_Shared_Image   'Access,\n                         S_Shared_Ident   'Access,\n+                        S_Shared_NoInhib 'Access,\n+                        S_Shared_Inhib   'Access,\n                         S_Shared_Nofiles 'Access,\n-                        S_Shared_Noinhib 'Access,\n                         S_Shared_Verb    'Access,\n                         S_Shared_ZZZZZ   'Access);\n "}]}