{"sha": "3974eb36b1ad80fc7bd7df77263e447af1c172e9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mzk3NGViMzZiMWFkODBmYzdiZDdkZjc3MjYzZTQ0N2FmMWMxNzJlOQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@cygnus.com", "date": "1998-09-03T00:24:47Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "1998-09-03T00:24:47Z"}, "message": "va-alpha.h: Protect entire second portion of the file against double inclusion.\n\n        * ginclude/va-alpha.h: Protect entire second portion of the\n        file against double inclusion.\n\nFrom-SVN: r22200", "tree": {"sha": "5041f31d919cf5de08b6d2a8b7aa8ecb1de44388", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5041f31d919cf5de08b6d2a8b7aa8ecb1de44388"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3974eb36b1ad80fc7bd7df77263e447af1c172e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3974eb36b1ad80fc7bd7df77263e447af1c172e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3974eb36b1ad80fc7bd7df77263e447af1c172e9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3974eb36b1ad80fc7bd7df77263e447af1c172e9/comments", "author": null, "committer": null, "parents": [{"sha": "d8bb17c8e33975277dd5231e190bf99451b7025d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8bb17c8e33975277dd5231e190bf99451b7025d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d8bb17c8e33975277dd5231e190bf99451b7025d"}], "stats": {"total": 21, "additions": 12, "deletions": 9}, "files": [{"sha": "4109c4e326892f94d4364c7f50b07695aab1c80b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3974eb36b1ad80fc7bd7df77263e447af1c172e9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3974eb36b1ad80fc7bd7df77263e447af1c172e9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3974eb36b1ad80fc7bd7df77263e447af1c172e9", "patch": "@@ -1,3 +1,8 @@\n+Thu Sep  3 00:23:21 1998  Richard Henderson  <rth@cygnus.com>\n+\n+\t* ginclude/va-alpha.h: Protect entire second portion of the\n+\tfile against double inclusion.\n+\n Thu Sep  3 00:37:55 1998  Ovidiu Predescu  <ovidiu@aracnet.com>\n \n \tAdded support for the Boehm's garbage collector."}, {"sha": "2528a712ada2c5f89646db2c835302a5733df661", "filename": "gcc/ginclude/va-alpha.h", "status": "modified", "additions": 7, "deletions": 9, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3974eb36b1ad80fc7bd7df77263e447af1c172e9/gcc%2Fginclude%2Fva-alpha.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3974eb36b1ad80fc7bd7df77263e447af1c172e9/gcc%2Fginclude%2Fva-alpha.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fginclude%2Fva-alpha.h?ref=3974eb36b1ad80fc7bd7df77263e447af1c172e9", "patch": "@@ -10,7 +10,6 @@\n #ifndef __GNUC_VA_LIST\n #define __GNUC_VA_LIST\n \n-\n /* In VMS, __gnuc_va_list is simply char *; on OSF, it's a structure.  */\n \n #ifdef __VMS__\n@@ -23,16 +22,19 @@ typedef struct {\n } __gnuc_va_list;\n #endif\n \n-#endif /* not __GNUC_VA_LIST */\n+#endif /* __GNUC_VA_LIST */\n \n /* If this is for internal libc use, don't define anything but\n    __gnuc_va_list.  */\n-#if defined (_STDARG_H) || defined (_VARARGS_H)\n-typedef __gnuc_va_list va_list;\n+\n+#if !defined(__GNUC_VA_LIST_1) && (defined (_STDARG_H) || defined (_VARARGS_H))\n+#define __GNUC_VA_LIST_1\n \n #define _VA_LIST\n #define _VA_LIST_\n \n+typedef __gnuc_va_list va_list;\n+\n #if !defined(_STDARG_H)\n \n /* varargs support */\n@@ -63,8 +65,6 @@ typedef __gnuc_va_list va_list;\n \n #endif /* _STDARG_H */\n \n-#ifndef va_end\n-\n #define va_end(__va)\t((void) 0)\n \n /* Values returned by __builtin_classify_type.  */\n@@ -92,8 +92,6 @@ enum {\n   __lang_type_class\n };\n \n-#endif\n-\n /* Note that parameters are always aligned at least to a word boundary\n    (when passed) regardless of what GCC's __alignof__ operator says.  */\n \n@@ -127,4 +125,4 @@ enum {\n /* Copy __gnuc_va_list into another variable of this type.  */\n #define __va_copy(dest, src) (dest) = (src)\n \n-#endif /* defined (_STDARG_H) || defined (_VARARGS_H) */\n+#endif /* __GNUC_VA_LIST_1 */"}]}