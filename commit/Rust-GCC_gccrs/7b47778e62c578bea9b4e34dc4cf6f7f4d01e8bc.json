{"sha": "7b47778e62c578bea9b4e34dc4cf6f7f4d01e8bc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2I0Nzc3OGU2MmM1NzhiZWE5YjRlMzRkYzRjZjZmN2Y0ZDAxZThiYw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2016-04-18T09:48:31Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2016-04-18T09:48:31Z"}, "message": "[multiple changes]\n\n2016-04-18  Arnaud Charlet  <charlet@adacore.com>\n\n\t* a-intsig.ads, a-intsig.adb: Removed, no longer used.\n\t* Makefile.rtl: update accordingly.\n\n2016-04-18  Eric Botcazou  <ebotcazou@adacore.com>\n\n\t* sem_type.adb (Disambiguate): Call Covers only when necessary\n\tfor standard operators.\n\n2016-04-18  Eric Botcazou  <ebotcazou@adacore.com>\n\n\t* atree.ads (Num_Extension_Nodes): Add couple of figures\n\tto comment.\n\t* atree.adb: Add GNAT.Heap_Sort_G dependency.\n\t(Print_Statistics): New exported procedure to print statistics.\n\n2016-04-18  Eric Botcazou  <ebotcazou@adacore.com>\n\n\t* exp_ch3.adb (Build_Record_Init_Proc): Do not mark the procedure\n\tas to be inlined if the type needs finalization.\n\nFrom-SVN: r235106", "tree": {"sha": "a2ac064b1765e80dcd4ac38c020d3e64e5721ada", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a2ac064b1765e80dcd4ac38c020d3e64e5721ada"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7b47778e62c578bea9b4e34dc4cf6f7f4d01e8bc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b47778e62c578bea9b4e34dc4cf6f7f4d01e8bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b47778e62c578bea9b4e34dc4cf6f7f4d01e8bc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b47778e62c578bea9b4e34dc4cf6f7f4d01e8bc/comments", "author": null, "committer": null, "parents": [{"sha": "6e9ecd1ff0da96a1255733f4948d48afacb68eee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e9ecd1ff0da96a1255733f4948d48afacb68eee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e9ecd1ff0da96a1255733f4948d48afacb68eee"}], "stats": {"total": 240, "additions": 140, "deletions": 100}, "files": [{"sha": "35f45896584669d3ebeada8c403d15d6be308f25", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b47778e62c578bea9b4e34dc4cf6f7f4d01e8bc/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b47778e62c578bea9b4e34dc4cf6f7f4d01e8bc/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=7b47778e62c578bea9b4e34dc4cf6f7f4d01e8bc", "patch": "@@ -1,3 +1,25 @@\n+2016-04-18  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* a-intsig.ads, a-intsig.adb: Removed, no longer used.\n+\t* Makefile.rtl: update accordingly.\n+\n+2016-04-18  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* sem_type.adb (Disambiguate): Call Covers only when necessary\n+\tfor standard operators.\n+\n+2016-04-18  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* atree.ads (Num_Extension_Nodes): Add couple of figures\n+\tto comment.\n+\t* atree.adb: Add GNAT.Heap_Sort_G dependency.\n+\t(Print_Statistics): New exported procedure to print statistics.\n+\n+2016-04-18  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* exp_ch3.adb (Build_Record_Init_Proc): Do not mark the procedure\n+\tas to be inlined if the type needs finalization.\n+\n 2016-04-18  Jerome Lambourg  <lambourg@adacore.com>\n \n \t* sigtramp-vxworks-target.inc: sigtramp-vxworks: force the stack"}, {"sha": "5b492587356f22398b6407b36c1ad337e95362b7", "filename": "gcc/ada/Makefile.rtl", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b47778e62c578bea9b4e34dc4cf6f7f4d01e8bc/gcc%2Fada%2FMakefile.rtl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b47778e62c578bea9b4e34dc4cf6f7f4d01e8bc/gcc%2Fada%2FMakefile.rtl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FMakefile.rtl?ref=7b47778e62c578bea9b4e34dc4cf6f7f4d01e8bc", "patch": "@@ -28,7 +28,6 @@ GNATRTL_TASKING_OBJS= \\\n   a-dispat$(objext) \\\n   a-dynpri$(objext) \\\n   a-interr$(objext) \\\n-  a-intsig$(objext) \\\n   a-intnam$(objext) \\\n   a-reatim$(objext) \\\n   a-retide$(objext) \\"}, {"sha": "9470128b6ba29891163dd7b7d56048fdff1d2a4a", "filename": "gcc/ada/a-intsig.adb", "status": "removed", "additions": 0, "deletions": 46, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e9ecd1ff0da96a1255733f4948d48afacb68eee/gcc%2Fada%2Fa-intsig.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e9ecd1ff0da96a1255733f4948d48afacb68eee/gcc%2Fada%2Fa-intsig.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-intsig.adb?ref=6e9ecd1ff0da96a1255733f4948d48afacb68eee", "patch": "@@ -1,46 +0,0 @@\n-------------------------------------------------------------------------------\n---                                                                          --\n---                 GNAT RUN-TIME LIBRARY (GNARL) COMPONENTS                 --\n---                                                                          --\n---                 A D A . I N T E R R U P T S . S I G N A L                --\n---                                                                          --\n---                                  B o d y                                 --\n---                                                                          --\n---          Copyright (C) 2000-2009, Free Software Foundation, Inc.         --\n---                                                                          --\n--- GNARL is free software; you can  redistribute it  and/or modify it under --\n--- terms of the  GNU General Public License as published  by the Free Soft- --\n--- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n--- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n--- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A PARTICULAR PURPOSE.                                     --\n---                                                                          --\n--- As a special exception under Section 7 of GPL version 3, you are granted --\n--- additional permissions described in the GCC Runtime Library Exception,   --\n--- version 3.1, as published by the Free Software Foundation.               --\n---                                                                          --\n--- You should have received a copy of the GNU General Public License and    --\n--- a copy of the GCC Runtime Library Exception along with this program;     --\n--- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n--- <http://www.gnu.org/licenses/>.                                          --\n---                                                                          --\n--- GNARL was developed by the GNARL team at Florida State University.       --\n--- Extensive contributions were provided by Ada Core Technologies, Inc.     --\n---                                                                          --\n-------------------------------------------------------------------------------\n-\n-with System.Interrupt_Management.Operations;\n-\n-package body Ada.Interrupts.Signal is\n-\n-   ------------------------\n-   -- Generate_Interrupt --\n-   ------------------------\n-\n-   procedure Generate_Interrupt (Interrupt : Interrupt_ID) is\n-   begin\n-      System.Interrupt_Management.Operations.Interrupt_Self_Process\n-        (System.Interrupt_Management.Interrupt_ID (Interrupt));\n-   end Generate_Interrupt;\n-\n-end Ada.Interrupts.Signal;"}, {"sha": "9d98f9de3712f704439a1f9c329ffa6e0f4a7cbc", "filename": "gcc/ada/a-intsig.ads", "status": "removed", "additions": 0, "deletions": 42, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e9ecd1ff0da96a1255733f4948d48afacb68eee/gcc%2Fada%2Fa-intsig.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e9ecd1ff0da96a1255733f4948d48afacb68eee/gcc%2Fada%2Fa-intsig.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-intsig.ads?ref=6e9ecd1ff0da96a1255733f4948d48afacb68eee", "patch": "@@ -1,42 +0,0 @@\n-------------------------------------------------------------------------------\n---                                                                          --\n---                 GNAT RUN-TIME LIBRARY (GNARL) COMPONENTS                 --\n---                                                                          --\n---                 A D A . I N T E R R U P T S . S I G N A L                --\n---                                                                          --\n---                                  S p e c                                 --\n---                                                                          --\n---          Copyright (C) 2000-2009, Free Software Foundation, Inc.         --\n---                                                                          --\n--- GNARL is free software; you can  redistribute it  and/or modify it under --\n--- terms of the  GNU General Public License as published  by the Free Soft- --\n--- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n--- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n--- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A PARTICULAR PURPOSE.                                     --\n---                                                                          --\n--- As a special exception under Section 7 of GPL version 3, you are granted --\n--- additional permissions described in the GCC Runtime Library Exception,   --\n--- version 3.1, as published by the Free Software Foundation.               --\n---                                                                          --\n--- You should have received a copy of the GNU General Public License and    --\n--- a copy of the GCC Runtime Library Exception along with this program;     --\n--- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n--- <http://www.gnu.org/licenses/>.                                          --\n---                                                                          --\n--- GNARL was developed by the GNARL team at Florida State University.       --\n--- Extensive contributions were provided by Ada Core Technologies, Inc.     --\n---                                                                          --\n-------------------------------------------------------------------------------\n-\n---  This package encapsulates the procedures for generating interrupts\n---  by user programs and avoids importing low level children of System\n---  (e.g. System.Interrupt_Management.Operations), or defining an interface\n---  to complex system calls.\n-\n-package Ada.Interrupts.Signal is\n-\n-   procedure Generate_Interrupt (Interrupt : Interrupt_ID);\n-   --  Generate interrupt at the process level\n-\n-end Ada.Interrupts.Signal;"}, {"sha": "67b55a91c9ea3786b9f2c5a407f32e07c353837b", "filename": "gcc/ada/atree.adb", "status": "modified", "additions": 102, "deletions": 0, "changes": 102, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b47778e62c578bea9b4e34dc4cf6f7f4d01e8bc/gcc%2Fada%2Fatree.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b47778e62c578bea9b4e34dc4cf6f7f4d01e8bc/gcc%2Fada%2Fatree.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fatree.adb?ref=7b47778e62c578bea9b4e34dc4cf6f7f4d01e8bc", "patch": "@@ -44,6 +44,8 @@ with Output;  use Output;\n with Sinput;  use Sinput;\n with Tree_IO; use Tree_IO;\n \n+with GNAT.Heap_Sort_G;\n+\n package body Atree is\n \n    Reporting_Proc : Report_Proc := null;\n@@ -115,6 +117,10 @@ package body Atree is\n    procedure Node_Debug_Output (Op : String; N : Node_Id);\n    --  Common code for nnd and rrd, writes Op followed by information about N\n \n+   procedure Print_Statistics;\n+   pragma Export (Ada, Print_Statistics);\n+   --  Print various statistics on the tables maintained by the package\n+\n    -----------------------------\n    -- Local Objects and Types --\n    -----------------------------\n@@ -1955,6 +1961,102 @@ package body Atree is\n         Nodes.Table (OldN).Comes_From_Source;\n    end Preserve_Comes_From_Source;\n \n+   ----------------------\n+   -- Print_Statistics --\n+   ----------------------\n+\n+   procedure Print_Statistics is\n+      N_Count : constant Natural := Natural (Nodes.Last - First_Node_Id + 1);\n+      E_Count : Natural := 0;\n+\n+   begin\n+      Write_Str (\"Maximum number of nodes per entity: \");\n+      Write_Int (Int (Num_Extension_Nodes + 1));\n+      Write_Eol;\n+      Write_Str (\"Number of allocated nodes: \");\n+      Write_Int (Int (N_Count));\n+      Write_Eol;\n+\n+      Write_Str (\"Number of entities: \");\n+      Write_Eol;\n+\n+      declare\n+         function CP_Lt (Op1, Op2 : Natural) return Boolean;\n+         --  Compare routine for Sort\n+\n+         procedure CP_Move (From : Natural; To : Natural);\n+         --  Move routine for Sort\n+\n+         Kind_Count : array (Node_Kind) of Natural := (others => 0);\n+         --  Array of occurrence count per node kind\n+\n+         Kind_Max : constant Natural := Node_Kind'Pos (N_Unused_At_End) - 1;\n+         --  The index of the largest (interesting) node kind\n+\n+         Ranking : array (0 .. Kind_Max) of Node_Kind;\n+         --  Ranking array for node kinds (index 0 is used for the temporary)\n+\n+         package Sorting is new GNAT.Heap_Sort_G (CP_Move, CP_Lt);\n+\n+         function CP_Lt (Op1, Op2 : Natural) return Boolean is\n+         begin\n+            return Kind_Count (Ranking (Op2)) < Kind_Count (Ranking (Op1));\n+         end CP_Lt;\n+\n+         procedure CP_Move (From : Natural; To : Natural) is\n+         begin\n+            Ranking (To) := Ranking (From);\n+         end CP_Move;\n+\n+      begin\n+         --  Count the number of occurrences of each node kind\n+\n+         for I in First_Node_Id .. Nodes.Last loop\n+            declare\n+               Nkind : constant Node_Kind := Nodes.Table (I).Nkind;\n+            begin\n+               if not Nodes.Table (I).Is_Extension then\n+                  Kind_Count (Nkind) := Kind_Count (Nkind) + 1;\n+               end if;\n+            end;\n+         end loop;\n+\n+         --  Sort the node kinds by number of occurrences\n+\n+         for N in 1 .. Kind_Max loop\n+            Ranking (N) := Node_Kind'Val (N);\n+         end loop;\n+\n+         Sorting.Sort (Kind_Max);\n+\n+         --  Print the list in descending order\n+\n+         for N in 1 .. Kind_Max loop\n+            declare\n+               Count : constant Natural := Kind_Count (Ranking (N));\n+            begin\n+               if Count > 0 then\n+                  Write_Str (\"  \");\n+                  Write_Str (Node_Kind'Image (Ranking (N)));\n+                  Write_Str (\": \");\n+                  Write_Int (Int (Count));\n+                  Write_Eol;\n+\n+                  E_Count := E_Count + Count;\n+               end if;\n+            end;\n+         end loop;\n+      end;\n+\n+      Write_Str (\"Total number of entities: \");\n+      Write_Int (Int (E_Count));\n+      Write_Eol;\n+      Write_Str (\"Ratio allocated nodes/entities: \");\n+      Write_Int (Int (N_Count * 100 / E_Count));\n+      Write_Str (\"/100\");\n+      Write_Eol;\n+   end Print_Statistics;\n+\n    -------------------\n    -- Relocate_Node --\n    -------------------"}, {"sha": "d94217d2322629d6a08c847d154c877990f440f1", "filename": "gcc/ada/atree.ads", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b47778e62c578bea9b4e34dc4cf6f7f4d01e8bc/gcc%2Fada%2Fatree.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b47778e62c578bea9b4e34dc4cf6f7f4d01e8bc/gcc%2Fada%2Fatree.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fatree.ads?ref=7b47778e62c578bea9b4e34dc4cf6f7f4d01e8bc", "patch": "@@ -76,6 +76,10 @@ package Atree is\n    --  This value is increased by one if debug flag -gnatd.N is set. This is\n    --  for testing performance impact of adding a new extension node. We make\n    --  this of type Node_Id for easy reference in loops using this value.\n+   --  Print_Statistics can be used to display statistics on entities & nodes.\n+   --  Measurements conducted for the 5->6 bump showed an increase from 1.81 to\n+   --  2.01 for the nodes/entities ratio and a 2% increase in compilation time\n+   --  on average for the GCC-based compiler at -O0 on a 32-bit x86 host.\n \n    ----------------------------------------\n    -- Definitions of Fields in Tree Node --"}, {"sha": "869220fdb5916ccccfc64b394fbd4e144f93b4e5", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b47778e62c578bea9b4e34dc4cf6f7f4d01e8bc/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b47778e62c578bea9b4e34dc4cf6f7f4d01e8bc/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=7b47778e62c578bea9b4e34dc4cf6f7f4d01e8bc", "patch": "@@ -3597,10 +3597,12 @@ package body Exp_Ch3 is\n          --  The initialization of protected records is not worth inlining.\n          --  In addition, when compiled for another unit for inlining purposes,\n          --  it may make reference to entities that have not been elaborated\n-         --  yet. Similar considerations apply to task types.\n+         --  yet. Similar considerations apply to task types and types that\n+         --  need finalization.\n \n          if not Is_Concurrent_Type (Rec_Type)\n            and then not Has_Task (Rec_Type)\n+           and then not Needs_Finalization (Rec_Type)\n          then\n             Set_Is_Inlined  (Proc_Id);\n          end if;"}, {"sha": "131beb900791afeeb27545dce899631b4024714e", "filename": "gcc/ada/sem_type.adb", "status": "modified", "additions": 9, "deletions": 10, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b47778e62c578bea9b4e34dc4cf6f7f4d01e8bc/gcc%2Fada%2Fsem_type.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b47778e62c578bea9b4e34dc4cf6f7f4d01e8bc/gcc%2Fada%2Fsem_type.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_type.adb?ref=7b47778e62c578bea9b4e34dc4cf6f7f4d01e8bc", "patch": "@@ -1751,17 +1751,16 @@ package body Sem_Type is\n             begin\n                Get_First_Interp (N, I, It);\n                while Present (It.Typ) loop\n-                  if (Covers (Typ, It.Typ) or else Typ = Any_Type)\n-                    and then\n-                     (It.Typ = Universal_Integer\n+                  if (It.Typ = Universal_Integer\n                        or else It.Typ = Universal_Real)\n+                    and then (Typ = Any_Type or else Covers (Typ, It.Typ))\n                   then\n                      return It;\n \n-                  elsif Covers (Typ, It.Typ)\n+                  elsif Is_Numeric_Type (It.Typ)\n                     and then Scope (It.Typ) = Standard_Standard\n                     and then Scope (It.Nam) = Standard_Standard\n-                    and then Is_Numeric_Type (It.Typ)\n+                    and then Covers (Typ, It.Typ)\n                   then\n                      Candidate := It;\n                   end if;\n@@ -3026,19 +3025,19 @@ package body Sem_Type is\n    ---------------------------\n \n    function Operator_Matches_Spec (Op, New_S : Entity_Id) return Boolean is\n+      New_First_F : constant Entity_Id := First_Formal (New_S);\n       Op_Name     : constant Name_Id   := Chars (Op);\n       T           : constant Entity_Id := Etype (New_S);\n-      New_First_F : constant Entity_Id := First_Formal (New_S);\n       New_F       : Entity_Id;\n-      Old_F       : Entity_Id;\n       Num         : Int;\n+      Old_F       : Entity_Id;\n       T1          : Entity_Id;\n       T2          : Entity_Id;\n \n    begin\n-      --  To verify that a predefined operator matches a given signature,\n-      --  do a case analysis of the operator classes. Function can have one\n-      --  or two formals and must have the proper result type.\n+      --  To verify that a predefined operator matches a given signature, do a\n+      --  case analysis of the operator classes. Function can have one or two\n+      --  formals and must have the proper result type.\n \n       New_F := New_First_F;\n       Old_F := First_Formal (Op);"}]}