{"sha": "e05eb7616897fce02c5e04ccfb66bd6db102a1df", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTA1ZWI3NjE2ODk3ZmNlMDJjNWUwNGNjZmI2NmJkNmRiMTAyYTFkZg==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "1999-12-19T04:43:20Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "1999-12-19T04:43:20Z"}, "message": "cccp.c (main): Define __STDC_VERSION__ as necessary.\n\n        * cccp.c (main): Define __STDC_VERSION__ as necessary.\n        * cppinit.c (cpp_handle_option): Likewise.\n\n        * ginclude/stdarg.h (va_copy): Use __STDC_VERSION__ to\n        determine when to define.\n\nFrom-SVN: r31022", "tree": {"sha": "110f13c77f6674cc97a3a9f0523870730925bbe9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/110f13c77f6674cc97a3a9f0523870730925bbe9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e05eb7616897fce02c5e04ccfb66bd6db102a1df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e05eb7616897fce02c5e04ccfb66bd6db102a1df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e05eb7616897fce02c5e04ccfb66bd6db102a1df", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e05eb7616897fce02c5e04ccfb66bd6db102a1df/comments", "author": null, "committer": null, "parents": [{"sha": "09fe1c496d81c3732f3bb99664e770255ffc0cc7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09fe1c496d81c3732f3bb99664e770255ffc0cc7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/09fe1c496d81c3732f3bb99664e770255ffc0cc7"}], "stats": {"total": 93, "additions": 56, "deletions": 37}, "files": [{"sha": "54eead1f94ef1ce48805151727ea4fe843cad042", "filename": "gcc/ChangeLog", "status": "modified", "additions": 29, "deletions": 21, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e05eb7616897fce02c5e04ccfb66bd6db102a1df/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e05eb7616897fce02c5e04ccfb66bd6db102a1df/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e05eb7616897fce02c5e04ccfb66bd6db102a1df", "patch": "@@ -1,3 +1,11 @@\n+Sat Dec 18 20:42:43 1999  Richard Henderson  <rth@cygnus.com>\n+\n+\t* cccp.c (main): Define __STDC_VERSION__ as necessary.\n+\t* cppinit.c (cpp_handle_option): Likewise.\n+\n+\t* ginclude/stdarg.h (va_copy): Use __STDC_VERSION__ to\n+\tdetermine when to define.\n+\n Sat Dec 18 20:34:00 1999  Richard Henderson  <rth@cygnus.com>\n \n \t* alpha.c (alpha_emit_conditional_move): If TARGET_FIX, handle\n@@ -49,27 +57,27 @@ Sat Dec 18 05:29:29 1999  Scott Bambrough  <scottb@netwinder.org>\n \n 1999-12-18 Gabriel Dos Reis  <gdr@codesourcery.com>\n \n-        * toplev.c (notice, vmessage, v_message_with_file_and_line,\n-        v_message_with_decl, file_and_line_for_asm,\n-        v_error_with_file_and_line, v_error_with_decl, v_error_for_asm,\n-        verror, vfatal, v_warning_with_file_and_line, v_warning_with_decl,\n-        v_warning_for_asm, vwarning, vpedwarn, v_pedwarn_with_decl,\n-        v_pedwarn_with_file_and_line, vsorry, vnotice, count_error,\n-        pfatal_with_name, fatal_io_error, need_error_newline,\n-        last_error_function, last_error_tick, announce_function,\n-        default_print_error_function, print_error_function,\n-        report_error_function, fnotice, error_with_file_and_line,\n-        error_with_decl, error_for_asm, error, set_fatal_function, fatal,\n-        _fatal_insn, _fatal_insn_not_found, warning_with_file_and_line,\n-        warning_with_decl, warning_for_asm, warning, pedwarn,\n-        pedwarn_with_decl, pedwarn_with_file_and_line, sorry): Move to\n-        diagnostic.c\n-        (compile_file): Use fnotice instead of notice.  Adjust call.\n-\n-        * diagnostic.c: New file.\n-\n-        * Makefile.in (OBJS): Include diagnostic.o\n-        (diagnostic.o): Define dependence.\n+\t* toplev.c (notice, vmessage, v_message_with_file_and_line,\n+\tv_message_with_decl, file_and_line_for_asm,\n+\tv_error_with_file_and_line, v_error_with_decl, v_error_for_asm,\n+\tverror, vfatal, v_warning_with_file_and_line, v_warning_with_decl,\n+\tv_warning_for_asm, vwarning, vpedwarn, v_pedwarn_with_decl,\n+\tv_pedwarn_with_file_and_line, vsorry, vnotice, count_error,\n+\tpfatal_with_name, fatal_io_error, need_error_newline,\n+\tlast_error_function, last_error_tick, announce_function,\n+\tdefault_print_error_function, print_error_function,\n+\treport_error_function, fnotice, error_with_file_and_line,\n+\terror_with_decl, error_for_asm, error, set_fatal_function, fatal,\n+\t_fatal_insn, _fatal_insn_not_found, warning_with_file_and_line,\n+\twarning_with_decl, warning_for_asm, warning, pedwarn,\n+\tpedwarn_with_decl, pedwarn_with_file_and_line, sorry): Move to\n+\tdiagnostic.c\n+\t(compile_file): Use fnotice instead of notice.  Adjust call.\n+\n+\t* diagnostic.c: New file.\n+\n+\t* Makefile.in (OBJS): Include diagnostic.o\n+\t(diagnostic.o): Define dependence.\n \n 1999-12-18  Michael Hayes  <m.hayes@elec.canterbury.ac.nz>\n "}, {"sha": "01f93d602549ae7ac2a2d1f11499cf90131191df", "filename": "gcc/cccp.c", "status": "modified", "additions": 19, "deletions": 11, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e05eb7616897fce02c5e04ccfb66bd6db102a1df/gcc%2Fcccp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e05eb7616897fce02c5e04ccfb66bd6db102a1df/gcc%2Fcccp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcccp.c?ref=e05eb7616897fce02c5e04ccfb66bd6db102a1df", "patch": "@@ -1264,7 +1264,7 @@ main (argc, argv)\n      progname need to be set first, in case a diagnostic is issued.  */\n      \n   pend_files = (char **) xmalloc (argc * sizeof (char *));\n-  pend_defs = (char **) xmalloc (argc * sizeof (char *));\n+  pend_defs = (char **) xmalloc ((2 * argc) * sizeof (char *));\n   pend_undefs = (char **) xmalloc (argc * sizeof (char *));\n   pend_assertions = (char **) xmalloc (argc * sizeof (char *));\n   pend_includes = (char **) xmalloc (argc * sizeof (char *));\n@@ -1284,7 +1284,7 @@ main (argc, argv)\n   cplusplus_comments = 1;\n \n   bzero ((char *) pend_files, argc * sizeof (char *));\n-  bzero ((char *) pend_defs, argc * sizeof (char *));\n+  bzero ((char *) pend_defs, (2 * argc) * sizeof (char *));\n   bzero ((char *) pend_undefs, argc * sizeof (char *));\n   bzero ((char *) pend_assertions, argc * sizeof (char *));\n   bzero ((char *) pend_includes, argc * sizeof (char *));\n@@ -1457,7 +1457,7 @@ main (argc, argv)\n \t  {\n \t    cplusplus = 0, cplusplus_comments = 0, c89 = 1, c9x = 0, objc = 0;\n \t    no_trigraphs = 0;\n-\t    pend_defs[i] = \"__STRICT_ANSI__=199000\";\n+\t    pend_defs[2*i] = \"__STRICT_ANSI__\";\n \t  }\n \telse if (! strcmp (argv[i], \"-lang-c++\"))\n \t  cplusplus = 1, cplusplus_comments = 1, c89 = 0, c9x = 0, objc = 0;\n@@ -1484,19 +1484,21 @@ main (argc, argv)\n \t\t || !strcmp (argv[i], \"-std=gnu99\"))\n \t  {\n \t    cplusplus = 0, cplusplus_comments = 1, c89 = 0, c9x = 1, objc = 0;\n+\t    pend_defs[2*i+1] = \"__STDC_VERSION__=199901L\";\n \t  }\n \telse if (!strcmp (argv[i], \"-std=iso9899:1990\")\n \t\t || !strcmp (argv[i], \"-std=c89\"))\n \t  {\n \t    cplusplus = 0, cplusplus_comments = 0, c89 = 1, c9x = 0, objc = 0;\n \t    no_trigraphs = 0;\n-\t    pend_defs[i] = \"__STRICT_ANSI__=199000\";\n+\t    pend_defs[2*i] = \"__STRICT_ANSI__\";\n \t  }\n \telse if (!strcmp (argv[i], \"-std=iso9899:199409\"))\n \t  {\n \t    cplusplus = 0, cplusplus_comments = 0, c89 = 1, c9x = 0, objc = 0;\n \t    no_trigraphs = 0;\n-\t    pend_defs[i] = \"__STRICT_ANSI__=199409\";\n+\t    pend_defs[2*i] = \"__STRICT_ANSI__\";\n+\t    pend_defs[2*i+1] = \"__STDC_VERSION__=199409L\";\n \t  }\n         else if (!strcmp (argv[i], \"-std=iso9899:199x\")\n \t\t || !strcmp (argv[i], \"-std=iso9899:1999\")\n@@ -1505,7 +1507,8 @@ main (argc, argv)\n \t  {\n \t    cplusplus = 0, cplusplus_comments = 1, c89 = 0, c9x = 1, objc = 0;\n \t    no_trigraphs = 0;\n-\t    pend_defs[i] = \"__STRICT_ANSI__=199900\";\n+\t    pend_defs[2*i] = \"__STRICT_ANSI__\";\n+\t    pend_defs[2*i+1] = \"__STDC_VERSION__=199901L\";\n \t  }\n \tbreak;\n \n@@ -1655,11 +1658,11 @@ main (argc, argv)\n \n       case 'D':\n \tif (argv[i][2] != 0)\n-\t  pend_defs[i] = argv[i] + 2;\n+\t  pend_defs[2*i] = argv[i] + 2;\n \telse if (i + 1 == argc)\n \t  fatal (\"Macro name missing after -D option\");\n \telse\n-\t  i++, pend_defs[i] = argv[i];\n+\t  i++, pend_defs[2*i] = argv[i];\n \tbreak;\n \n       case 'A':\n@@ -1680,7 +1683,7 @@ main (argc, argv)\n \t       that were passed automatically in from GCC.  */\n \t    int j;\n \t    for (j = 0; j < i; j++)\n-\t      pend_defs[j] = pend_assertions[j] = 0;\n+\t      pend_defs[2*j] = pend_assertions[j] = 0;\n \t  } else {\n \t    pend_assertions[i] = p;\n \t    pend_assertion_options[i] = \"-A\";\n@@ -1805,10 +1808,15 @@ main (argc, argv)\n         output_line_directive (fp, &outbuf, 0, same_file);\n       make_undef (pend_undefs[i], &outbuf);\n     }\n-    if (pend_defs[i]) {\n+    if (pend_defs[2*i]) {\n       if (debug_output)\n         output_line_directive (fp, &outbuf, 0, same_file);\n-      make_definition (pend_defs[i]);\n+      make_definition (pend_defs[2*i]);\n+    }\n+    if (pend_defs[2*i+1]) {\n+      if (debug_output)\n+        output_line_directive (fp, &outbuf, 0, same_file);\n+      make_definition (pend_defs[2*i+1]);\n     }\n     if (pend_assertions[i])\n       make_assertion (pend_assertion_options[i], pend_assertions[i]);"}, {"sha": "2bec845090100952225dc28136f07a89e62dada0", "filename": "gcc/cppinit.c", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e05eb7616897fce02c5e04ccfb66bd6db102a1df/gcc%2Fcppinit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e05eb7616897fce02c5e04ccfb66bd6db102a1df/gcc%2Fcppinit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcppinit.c?ref=e05eb7616897fce02c5e04ccfb66bd6db102a1df", "patch": "@@ -1331,7 +1331,7 @@ cpp_handle_option (pfile, argc, argv)\n \t    opts->cplusplus = 0, opts->cplusplus_comments = 0;\n \t    opts->c89 = 1, opts->c9x = 0, opts->objc = 0;\n \t    opts->trigraphs = 1;\n-\t    new_pending_define (opts, \"__STRICT_ANSI__=199000\");\n+\t    new_pending_define (opts, \"__STRICT_ANSI__\");\n \t  }\n \tif (! strcmp (argv[i], \"-lang-c++\"))\n \t  opts->cplusplus = 1, opts->cplusplus_comments = 1, opts->c89 = 0,\n@@ -1365,21 +1365,23 @@ cpp_handle_option (pfile, argc, argv)\n \t  {\n \t    opts->cplusplus = 0, opts->cplusplus_comments = 1;\n \t    opts->c89 = 0, opts->c9x = 1, opts->objc = 0;\n+\t    new_pending_define (opts, \"__STDC_VERSION__=199901L\");\n \t  }\n \telse if (!strcmp (argv[i], \"-std=iso9899:1990\")\n \t\t || !strcmp (argv[i], \"-std=c89\"))\n \t  {\n \t    opts->cplusplus = 0, opts->cplusplus_comments = 0;\n \t    opts->c89 = 1, opts->c9x = 0, opts->objc = 0;\n \t    opts->trigraphs = 1;\n-\t    new_pending_define (opts, \"__STRICT_ANSI__=199000\");\n+\t    new_pending_define (opts, \"__STRICT_ANSI__\");\n \t  }\n \telse if (!strcmp (argv[i], \"-std=iso9899:199409\"))\n \t  {\n \t    opts->cplusplus = 0, opts->cplusplus_comments = 0;\n \t    opts->c89 = 1, opts->c9x = 0, opts->objc = 0;\n \t    opts->trigraphs = 1;\n-\t    new_pending_define (opts, \"__STRICT_ANSI__=199409\");\n+\t    new_pending_define (opts, \"__STRICT_ANSI__\");\n+\t    new_pending_define (opts, \"__STDC_VERSION__=199409L\");\n \t  }\n \telse if (!strcmp (argv[i], \"-std=iso9899:199x\")\n \t\t || !strcmp (argv[i], \"-std=iso9899:1999\")\n@@ -1389,7 +1391,8 @@ cpp_handle_option (pfile, argc, argv)\n \t    opts->cplusplus = 0, opts->cplusplus_comments = 1;\n \t    opts->c89 = 0, opts->c9x = 1, opts->objc = 0;\n \t    opts->trigraphs = 1;\n-\t    new_pending_define (opts, \"__STRICT_ANSI__=199900\");\n+\t    new_pending_define (opts, \"__STRICT_ANSI__\");\n+\t    new_pending_define (opts, \"__STDC_VERSION__=199901L\");\n \t  }\n \tbreak;\n "}, {"sha": "2464599c1b5f4d718ebbbee360414673b5d2b936", "filename": "gcc/ginclude/stdarg.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e05eb7616897fce02c5e04ccfb66bd6db102a1df/gcc%2Fginclude%2Fstdarg.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e05eb7616897fce02c5e04ccfb66bd6db102a1df/gcc%2Fginclude%2Fstdarg.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fginclude%2Fstdarg.h?ref=e05eb7616897fce02c5e04ccfb66bd6db102a1df", "patch": "@@ -54,7 +54,7 @@ typedef __builtin_va_list __gnuc_va_list;\n #define va_start(v,l)\t__builtin_stdarg_start(&(v),l)\n #define va_end\t\t__builtin_va_end\n #define va_arg\t\t__builtin_va_arg\n-#if defined(__STRICT_ANSI__) && __STRICT_ANSI__ + 0 < 199900\n+#if !defined(__STRICT_ANSI__) || __STDC_VERSION__ + 0 >= 199900L\n #define va_copy(d,s)\t__builtin_va_copy(&(d),(s))\n #endif\n #define __va_copy(d,s)\t__builtin_va_copy(&(d),(s))"}]}