{"sha": "8532713fc4ebeb6c7b1026bbdb4cf5ab61ff68e3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODUzMjcxM2ZjNGViZWI2YzdiMTAyNmJiZGI0Y2Y1YWI2MWZmNjhlMw==", "commit": {"author": {"name": "Tim Shen", "email": "timshen@google.com", "date": "2018-01-14T00:48:30Z"}, "committer": {"name": "Tim Shen", "email": "timshen@gcc.gnu.org", "date": "2018-01-14T00:48:30Z"}, "message": "re PR libstdc++/83601 (std::regex_replace C++14 conformance issue: escaping in SED mode)\n\n\tPR libstdc++/83601\n\t* include/bits/regex.tcc (regex_replace): Fix escaping in sed.\n\t* testsuite/28_regex/algorithms/regex_replace/char/pr83601.cc: Tests.\n\t* testsuite/28_regex/algorithms/regex_replace/wchar_t/pr83601.cc: Tests.\n\nFrom-SVN: r256654", "tree": {"sha": "df57dc0ea70d3ae6154453406ec1331a276967cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/df57dc0ea70d3ae6154453406ec1331a276967cc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8532713fc4ebeb6c7b1026bbdb4cf5ab61ff68e3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8532713fc4ebeb6c7b1026bbdb4cf5ab61ff68e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8532713fc4ebeb6c7b1026bbdb4cf5ab61ff68e3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8532713fc4ebeb6c7b1026bbdb4cf5ab61ff68e3/comments", "author": {"login": "timshen91", "id": 1157432, "node_id": "MDQ6VXNlcjExNTc0MzI=", "avatar_url": "https://avatars.githubusercontent.com/u/1157432?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timshen91", "html_url": "https://github.com/timshen91", "followers_url": "https://api.github.com/users/timshen91/followers", "following_url": "https://api.github.com/users/timshen91/following{/other_user}", "gists_url": "https://api.github.com/users/timshen91/gists{/gist_id}", "starred_url": "https://api.github.com/users/timshen91/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timshen91/subscriptions", "organizations_url": "https://api.github.com/users/timshen91/orgs", "repos_url": "https://api.github.com/users/timshen91/repos", "events_url": "https://api.github.com/users/timshen91/events{/privacy}", "received_events_url": "https://api.github.com/users/timshen91/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8bc5a5c57c44fbc1f2078f06bf62ad33436de13b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8bc5a5c57c44fbc1f2078f06bf62ad33436de13b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8bc5a5c57c44fbc1f2078f06bf62ad33436de13b"}], "stats": {"total": 119, "additions": 103, "deletions": 16}, "files": [{"sha": "bf19e796a137e88d3228117d26efb6392b3df4fa", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8532713fc4ebeb6c7b1026bbdb4cf5ab61ff68e3/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8532713fc4ebeb6c7b1026bbdb4cf5ab61ff68e3/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=8532713fc4ebeb6c7b1026bbdb4cf5ab61ff68e3", "patch": "@@ -1,3 +1,10 @@\n+2018-01-13  Tim Shen  <timshen@google.com>\n+\n+\tPR libstdc++/83601\n+\t* include/bits/regex.tcc (regex_replace): Fix escaping in sed.\n+\t* testsuite/28_regex/algorithms/regex_replace/char/pr83601.cc: Tests.\n+\t* testsuite/28_regex/algorithms/regex_replace/wchar_t/pr83601.cc: Tests.\n+\n 2018-01-12  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \tPR libstdc++/64054"}, {"sha": "b92edb9ab290e92df1c07f44224310402893786e", "filename": "libstdc++-v3/include/bits/regex.tcc", "status": "modified", "additions": 26, "deletions": 16, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8532713fc4ebeb6c7b1026bbdb4cf5ab61ff68e3/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8532713fc4ebeb6c7b1026bbdb4cf5ab61ff68e3/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex.tcc?ref=8532713fc4ebeb6c7b1026bbdb4cf5ab61ff68e3", "patch": "@@ -373,22 +373,32 @@ namespace __detail\n \n       if (__flags & regex_constants::format_sed)\n \t{\n-\t  for (; __fmt_first != __fmt_last;)\n-\t    if (*__fmt_first == '&')\n-\t      {\n-\t\t__output(0);\n-\t\t++__fmt_first;\n-\t      }\n-\t    else if (*__fmt_first == '\\\\')\n-\t      {\n-\t\tif (++__fmt_first != __fmt_last\n-\t\t    && __fctyp.is(__ctype_type::digit, *__fmt_first))\n-\t\t  __output(__traits.value(*__fmt_first++, 10));\n-\t\telse\n-\t\t  *__out++ = '\\\\';\n-\t      }\n-\t    else\n-\t      *__out++ = *__fmt_first++;\n+\t  bool __escaping = false;\n+\t  for (; __fmt_first != __fmt_last; __fmt_first++)\n+\t    {\n+\t      if (__escaping)\n+\t\t{\n+\t\t  __escaping = false;\n+\t\t  if (__fctyp.is(__ctype_type::digit, *__fmt_first))\n+\t\t    __output(__traits.value(*__fmt_first, 10));\n+\t\t  else\n+\t\t    *__out++ = *__fmt_first;\n+\t\t  continue;\n+\t\t}\n+\t      if (*__fmt_first == '\\\\')\n+\t\t{\n+\t\t  __escaping = true;\n+\t\t  continue;\n+\t\t}\n+\t      if (*__fmt_first == '&')\n+\t\t{\n+\t\t  __output(0);\n+\t\t  continue;\n+\t\t}\n+\t      *__out++ = *__fmt_first;\n+\t    }\n+\t  if (__escaping)\n+\t    *__out++ = '\\\\';\n \t}\n       else\n \t{"}, {"sha": "c4bb5d08a41e76ff9cbd29ba77bad52d53e07bd6", "filename": "libstdc++-v3/testsuite/28_regex/algorithms/regex_replace/char/pr83601.cc", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8532713fc4ebeb6c7b1026bbdb4cf5ab61ff68e3/libstdc%2B%2B-v3%2Ftestsuite%2F28_regex%2Falgorithms%2Fregex_replace%2Fchar%2Fpr83601.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8532713fc4ebeb6c7b1026bbdb4cf5ab61ff68e3/libstdc%2B%2B-v3%2Ftestsuite%2F28_regex%2Falgorithms%2Fregex_replace%2Fchar%2Fpr83601.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F28_regex%2Falgorithms%2Fregex_replace%2Fchar%2Fpr83601.cc?ref=8532713fc4ebeb6c7b1026bbdb4cf5ab61ff68e3", "patch": "@@ -0,0 +1,31 @@\n+// { dg-do run { target c++11 } }\n+\n+// Copyright (C) 2018 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+//\n+\n+#include <regex>\n+#include <testsuite_hooks.h>\n+\n+// libstdc++/83601\n+int main() {\n+    auto format = std::regex_constants::format_sed;\n+    auto out = regex_replace(\"ab\", std::regex(\"(a)(b)\"), R\"(\\\\1\\&\\\\2)\", format);\n+    VERIFY(out == R\"(\\1&\\2)\");\n+\n+    return 0;\n+}"}, {"sha": "a318e9009216bee708085d4f37dcd215bf7e69a0", "filename": "libstdc++-v3/testsuite/28_regex/algorithms/regex_replace/wchar_t/pr83601.cc", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8532713fc4ebeb6c7b1026bbdb4cf5ab61ff68e3/libstdc%2B%2B-v3%2Ftestsuite%2F28_regex%2Falgorithms%2Fregex_replace%2Fwchar_t%2Fpr83601.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8532713fc4ebeb6c7b1026bbdb4cf5ab61ff68e3/libstdc%2B%2B-v3%2Ftestsuite%2F28_regex%2Falgorithms%2Fregex_replace%2Fwchar_t%2Fpr83601.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F28_regex%2Falgorithms%2Fregex_replace%2Fwchar_t%2Fpr83601.cc?ref=8532713fc4ebeb6c7b1026bbdb4cf5ab61ff68e3", "patch": "@@ -0,0 +1,39 @@\n+// { dg-do run { target c++11 } }\n+\n+// Copyright (C) 2018 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+//\n+\n+#include <regex>\n+#include <testsuite_hooks.h>\n+\n+// libstdc++/83601\n+void frep(const wchar_t *istr, const wchar_t *rstr, const wchar_t *ostr) {\n+    std::basic_regex<wchar_t> wrgx(L\"(a*)(b+)\");\n+    std::basic_string<wchar_t> wstr = istr, wret = ostr, test;\n+    std::regex_replace(std::back_inserter(test), wstr.begin(), wstr.end(),\n+                       wrgx, std::basic_string<wchar_t>(rstr),\n+                       std::regex_constants::format_sed);\n+    VERIFY(test == wret);\n+}\n+\n+int main() {\n+    frep(L\"xbbyabz\", L\"!\\\\\\\\2!\", L\"x!\\\\2!y!\\\\2!z\");\n+    frep(L\"xbbyabz\", L\"!\\\\\\\\0!\", L\"x!\\\\0!y!\\\\0!z\");\n+    frep(L\"xbbyabz\", L\"!\\\\&!\", L\"x!&!y!&!z\");\n+    return 0;\n+}"}]}