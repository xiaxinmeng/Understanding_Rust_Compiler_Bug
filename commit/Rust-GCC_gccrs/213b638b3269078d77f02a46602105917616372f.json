{"sha": "213b638b3269078d77f02a46602105917616372f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjEzYjYzOGIzMjY5MDc4ZDc3ZjAyYTQ2NjAyMTA1OTE3NjE2MzcyZg==", "commit": {"author": {"name": "Marc Poulhi\u00e8s", "email": "dkm@kataplop.net", "date": "2021-06-09T13:20:35Z"}, "committer": {"name": "Marc Poulhi\u00e8s", "email": "dkm@kataplop.net", "date": "2021-06-19T05:41:48Z"}, "message": "Fix: do not use object after it has been moved\n\nAfter std::move(mapping), mapping is unspecified", "tree": {"sha": "1f8af0d37c7a6d8597aa30947c288c32f00d1158", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1f8af0d37c7a6d8597aa30947c288c32f00d1158"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/213b638b3269078d77f02a46602105917616372f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/213b638b3269078d77f02a46602105917616372f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/213b638b3269078d77f02a46602105917616372f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/213b638b3269078d77f02a46602105917616372f/comments", "author": {"login": "dkm", "id": 87603, "node_id": "MDQ6VXNlcjg3NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/87603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dkm", "html_url": "https://github.com/dkm", "followers_url": "https://api.github.com/users/dkm/followers", "following_url": "https://api.github.com/users/dkm/following{/other_user}", "gists_url": "https://api.github.com/users/dkm/gists{/gist_id}", "starred_url": "https://api.github.com/users/dkm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dkm/subscriptions", "organizations_url": "https://api.github.com/users/dkm/orgs", "repos_url": "https://api.github.com/users/dkm/repos", "events_url": "https://api.github.com/users/dkm/events{/privacy}", "received_events_url": "https://api.github.com/users/dkm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dkm", "id": 87603, "node_id": "MDQ6VXNlcjg3NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/87603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dkm", "html_url": "https://github.com/dkm", "followers_url": "https://api.github.com/users/dkm/followers", "following_url": "https://api.github.com/users/dkm/following{/other_user}", "gists_url": "https://api.github.com/users/dkm/gists{/gist_id}", "starred_url": "https://api.github.com/users/dkm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dkm/subscriptions", "organizations_url": "https://api.github.com/users/dkm/orgs", "repos_url": "https://api.github.com/users/dkm/repos", "events_url": "https://api.github.com/users/dkm/events{/privacy}", "received_events_url": "https://api.github.com/users/dkm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a0c1c0b4001f68c2f4827e65ec23e21fedc2a88d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0c1c0b4001f68c2f4827e65ec23e21fedc2a88d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a0c1c0b4001f68c2f4827e65ec23e21fedc2a88d"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "5e19850e8dd864bcd32e573082a6ec5f5fcf8a0a", "filename": "gcc/rust/hir/rust-ast-lower-type.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/213b638b3269078d77f02a46602105917616372f/gcc%2Frust%2Fhir%2Frust-ast-lower-type.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/213b638b3269078d77f02a46602105917616372f/gcc%2Frust%2Fhir%2Frust-ast-lower-type.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fhir%2Frust-ast-lower-type.h?ref=213b638b3269078d77f02a46602105917616372f", "patch": "@@ -72,15 +72,15 @@ class ASTLowerTypePath : public ASTLoweringBase\n     });\n \n     auto crate_num = mappings->get_current_crate ();\n-    Analysis::NodeMapping mapping (crate_num, path.get_node_id (),\n-\t\t\t\t   mappings->get_next_hir_id (crate_num),\n+    auto hirid = mappings->get_next_hir_id (crate_num);\n+    Analysis::NodeMapping mapping (crate_num, path.get_node_id (), hirid,\n \t\t\t\t   mappings->get_next_localdef_id (crate_num));\n+\n     translated\n       = new HIR::TypePath (std::move (mapping), std::move (translated_segments),\n \t\t\t   path.get_locus (),\n \t\t\t   path.has_opening_scope_resolution_op ());\n-    mappings->insert_hir_type (mapping.get_crate_num (), mapping.get_hirid (),\n-\t\t\t       translated);\n+    mappings->insert_hir_type (crate_num, hirid, translated);\n   }\n \n private:"}]}