{"sha": "3eee49ed0d613c47ddfec85eeb7c0430ae6d2ec5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2VlZTQ5ZWQwZDYxM2M0N2RkZmVjODVlZWI3YzA0MzBhZTZkMmVjNQ==", "commit": {"author": {"name": "Andrey Belevantsev", "email": "abel@ispras.ru", "date": "2016-03-21T07:54:36Z"}, "committer": {"name": "Andrey Belevantsev", "email": "abel@gcc.gnu.org", "date": "2016-03-21T07:54:36Z"}, "message": "re PR rtl-optimization/69307 (wrong code with -O2 -fselective-scheduling @ armv7a)\n\n        PR rtl-optimization/69307\n        * gcc.target/arm/pr69307.c: New test.\n\nFrom-SVN: r234360", "tree": {"sha": "7ee1b7b03b78de3c98b2d81ec284c6683c4464af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7ee1b7b03b78de3c98b2d81ec284c6683c4464af"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3eee49ed0d613c47ddfec85eeb7c0430ae6d2ec5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3eee49ed0d613c47ddfec85eeb7c0430ae6d2ec5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3eee49ed0d613c47ddfec85eeb7c0430ae6d2ec5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3eee49ed0d613c47ddfec85eeb7c0430ae6d2ec5/comments", "author": {"login": "abonzo", "id": 20396542, "node_id": "MDQ6VXNlcjIwMzk2NTQy", "avatar_url": "https://avatars.githubusercontent.com/u/20396542?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abonzo", "html_url": "https://github.com/abonzo", "followers_url": "https://api.github.com/users/abonzo/followers", "following_url": "https://api.github.com/users/abonzo/following{/other_user}", "gists_url": "https://api.github.com/users/abonzo/gists{/gist_id}", "starred_url": "https://api.github.com/users/abonzo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abonzo/subscriptions", "organizations_url": "https://api.github.com/users/abonzo/orgs", "repos_url": "https://api.github.com/users/abonzo/repos", "events_url": "https://api.github.com/users/abonzo/events{/privacy}", "received_events_url": "https://api.github.com/users/abonzo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8e7816b4663fa7cade055ace845703ef99451456", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e7816b4663fa7cade055ace845703ef99451456", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e7816b4663fa7cade055ace845703ef99451456"}], "stats": {"total": 39, "additions": 39, "deletions": 0}, "files": [{"sha": "d022eb12fa99f55df0d51636cfb27217888fd133", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3eee49ed0d613c47ddfec85eeb7c0430ae6d2ec5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3eee49ed0d613c47ddfec85eeb7c0430ae6d2ec5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3eee49ed0d613c47ddfec85eeb7c0430ae6d2ec5", "patch": "@@ -1,3 +1,8 @@\n+2016-03-21  Andrey Belevantsev  <abel@ispras.ru>\n+\n+\tPR rtl-optimization/69307\n+\t* gcc.target/arm/pr69307.c: New test.\n+\t\n 2016-03-21  Andrey Belevantsev  <abel@ispras.ru>\n \n \tPR rtl-optimization/69102"}, {"sha": "c04cfa2973fdb641a79fce61a5fdb7eeaf769054", "filename": "gcc/testsuite/gcc.target/arm/pr69307.c", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3eee49ed0d613c47ddfec85eeb7c0430ae6d2ec5/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr69307.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3eee49ed0d613c47ddfec85eeb7c0430ae6d2ec5/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr69307.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr69307.c?ref=3eee49ed0d613c47ddfec85eeb7c0430ae6d2ec5", "patch": "@@ -0,0 +1,34 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O2 -fselective-scheduling -mtune=arm1136j-s\" } */\n+\n+typedef unsigned char uint8_t;\n+typedef unsigned short int uint16_t;\n+typedef unsigned int uint32_t;\n+typedef unsigned long long int uint64_t;\n+typedef uint8_t u8;\n+typedef uint16_t u16;\n+typedef uint32_t u32;\n+typedef uint64_t u64;\n+u64 __attribute__((noinline, noclone))\n+foo(u8 u8_0, u16 u16_0, u32 u32_0, u64 u64_0, u8 u8_1, u16 u16_1, u32 u32_1, u64 u64_1, u8 u8_2, u16 u16_2, u32 u32_2, u64 u64_2, u8 u8_3, u16 u16_3, u32 u32_3, u64 u64_3)\n+{\n+  u8 *p8_2 = &u8_2;\n+  u16 *p16_2 = &u16_2;\n+  u8 *p8_3 = &u8_3;\n+  u64 *p64_3 = &u64_3;\n+  p8_2 = &u8_3;\n+  *p8_3 -= *p64_3;\n+  *p8_2 = (u64)*p8_2 % ((u64)*p8_2 | 3);\n+  u8_2 = (u64)u8_2 / ((u64)*p16_2 | 1);\n+  u16_0 = (u64)u16_0 % ((u64)*p8_2 | 3);\n+  return u8_0 + u16_0 + u32_0 + u64_0 + u8_1 + u16_1 + u32_1 + u64_1 + u8_2 + u16_2 + u32_2 + u64_2 + u8_3 + u16_3 + u32_3 + u64_3;\n+}\n+int main()\n+{\n+  u64 x = 0;\n+  x += foo(3llu, 6llu, 15llu, 28llu, 5llu, 11llu, 20llu, 44llu, 7llu, 10llu, 20llu, 55llu, 0llu, 9llu, 17llu, 48llu);\n+  __builtin_printf(\"%02x%02x%02x%02x%02x%02x%02x%02x\\n\", (unsigned)((x >> 0) & 0xff), (unsigned)((x >> 8) & 0xff), (unsigned)((x >> 16) & 0xff), (unsigned)((x >> 24) & 0xff), (unsigned)((x >> 32) & 0xff), (unsigned)((x >> 40) & 0xff), (unsigned)((x >> 48) & 0xff), (unsigned)((x >> 56) & 0xff));\n+  if (x != 0x1f3)\n+    __builtin_abort();\n+  return 0;\n+}"}]}