{"sha": "02ec698819babb12a43f548bb09d93fa3aea12ea", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDJlYzY5ODgxOWJhYmIxMmE0M2Y1NDhiYjA5ZDkzZmEzYWVhMTJlYQ==", "commit": {"author": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2010-07-22T09:33:11Z"}, "committer": {"name": "Martin Jambor", "email": "jamborm@gcc.gnu.org", "date": "2010-07-22T09:33:11Z"}, "message": "cgraphunit.c (verify_edge_count_and_frequency): New function.\n\n2010-07-22  Martin Jambor  <mjambor@suse.cz>\n\n\t* cgraphunit.c (verify_edge_count_and_frequency): New function.\n\t(verify_cgraph_node): Verify frequencies of indirect edges.\n\t* tree-inline.c (tree_function_versioning): Update frequencies of\n\tindirect edges.\n\nFrom-SVN: r162406", "tree": {"sha": "172d88f971d14aa07a31e2593610ff9314ed5781", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/172d88f971d14aa07a31e2593610ff9314ed5781"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/02ec698819babb12a43f548bb09d93fa3aea12ea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02ec698819babb12a43f548bb09d93fa3aea12ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/02ec698819babb12a43f548bb09d93fa3aea12ea", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02ec698819babb12a43f548bb09d93fa3aea12ea/comments", "author": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8d6cd38823a1cde8549699340f3b331882502592", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d6cd38823a1cde8549699340f3b331882502592", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d6cd38823a1cde8549699340f3b331882502592"}], "stats": {"total": 85, "additions": 57, "deletions": 28}, "files": [{"sha": "80744a1c8d5c61502fd4fda9b2feb86d4f66bb42", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02ec698819babb12a43f548bb09d93fa3aea12ea/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02ec698819babb12a43f548bb09d93fa3aea12ea/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=02ec698819babb12a43f548bb09d93fa3aea12ea", "patch": "@@ -1,3 +1,10 @@\n+2010-07-22  Martin Jambor  <mjambor@suse.cz>\n+\n+\t* cgraphunit.c (verify_edge_count_and_frequency): New function.\n+\t(verify_cgraph_node): Verify frequencies of indirect edges.\n+\t* tree-inline.c (tree_function_versioning): Update frequencies of\n+\tindirect edges.\n+\n 2010-07-22  Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>\n \n  \tPR target/43698"}, {"sha": "0f3a6e23d00586e0c36ed76e7147cbacb2621447", "filename": "gcc/cgraphunit.c", "status": "modified", "additions": 41, "deletions": 27, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02ec698819babb12a43f548bb09d93fa3aea12ea/gcc%2Fcgraphunit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02ec698819babb12a43f548bb09d93fa3aea12ea/gcc%2Fcgraphunit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraphunit.c?ref=02ec698819babb12a43f548bb09d93fa3aea12ea", "patch": "@@ -570,6 +570,42 @@ clone_of_p (struct cgraph_node *node, struct cgraph_node *node2)\n }\n #endif\n \n+/* Verify edge E count and frequency.  */\n+\n+static bool\n+verify_edge_count_and_frequency (struct cgraph_edge *e)\n+{\n+  bool error_found = false;\n+  if (e->count < 0)\n+    {\n+      error (\"caller edge count is negative\");\n+      error_found = true;\n+    }\n+  if (e->frequency < 0)\n+    {\n+      error (\"caller edge frequency is negative\");\n+      error_found = true;\n+    }\n+  if (e->frequency > CGRAPH_FREQ_MAX)\n+    {\n+      error (\"caller edge frequency is too large\");\n+      error_found = true;\n+    }\n+  if (gimple_has_body_p (e->caller->decl)\n+      && !e->caller->global.inlined_to\n+      && (e->frequency\n+\t  != compute_call_stmt_bb_frequency (e->caller->decl,\n+\t\t\t\t\t     gimple_bb (e->call_stmt))))\n+    {\n+      error (\"caller edge frequency %i does not match BB freqency %i\",\n+\t     e->frequency,\n+\t     compute_call_stmt_bb_frequency (e->caller->decl,\n+\t\t\t\t\t     gimple_bb (e->call_stmt)));\n+      error_found = true;\n+    }\n+  return error_found;\n+}\n+\n /* Verify cgraph nodes of given cgraph node.  */\n DEBUG_FUNCTION void\n verify_cgraph_node (struct cgraph_node *node)\n@@ -635,33 +671,8 @@ verify_cgraph_node (struct cgraph_node *node)\n     }\n   for (e = node->callers; e; e = e->next_caller)\n     {\n-      if (e->count < 0)\n-\t{\n-\t  error (\"caller edge count is negative\");\n-\t  error_found = true;\n-\t}\n-      if (e->frequency < 0)\n-\t{\n-\t  error (\"caller edge frequency is negative\");\n-\t  error_found = true;\n-\t}\n-      if (e->frequency > CGRAPH_FREQ_MAX)\n-\t{\n-\t  error (\"caller edge frequency is too large\");\n-\t  error_found = true;\n-\t}\n-      if (gimple_has_body_p (e->caller->decl)\n-          && !e->caller->global.inlined_to\n-          && (e->frequency\n-\t      != compute_call_stmt_bb_frequency (e->caller->decl,\n-\t\t\t\t\t\t gimple_bb (e->call_stmt))))\n-\t{\n-\t  error (\"caller edge frequency %i does not match BB freqency %i\",\n-\t  \t e->frequency,\n-\t\t compute_call_stmt_bb_frequency (e->caller->decl,\n-\t\t\t\t\t\t gimple_bb (e->call_stmt)));\n-\t  error_found = true;\n-\t}\n+      if (verify_edge_count_and_frequency (e))\n+\terror_found = true;\n       if (!e->inline_failed)\n \t{\n \t  if (node->global.inlined_to\n@@ -684,6 +695,9 @@ verify_cgraph_node (struct cgraph_node *node)\n \t    error_found = true;\n \t  }\n     }\n+  for (e = node->indirect_calls; e; e = e->next_callee)\n+    if (verify_edge_count_and_frequency (e))\n+      error_found = true;\n   if (!node->callers && node->global.inlined_to)\n     {\n       error (\"inlined_to pointer is set but no predecessors found\");"}, {"sha": "dc09c29b6ea20000fcfd303eb767542d2b7f0ce4", "filename": "gcc/tree-inline.c", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02ec698819babb12a43f548bb09d93fa3aea12ea/gcc%2Ftree-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02ec698819babb12a43f548bb09d93fa3aea12ea/gcc%2Ftree-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.c?ref=02ec698819babb12a43f548bb09d93fa3aea12ea", "patch": "@@ -5184,7 +5184,15 @@ tree_function_versioning (tree old_decl, tree new_decl,\n       for (e = new_version_node->callees; e; e = e->next_callee)\n \t{\n \t  basic_block bb = gimple_bb (e->call_stmt);\n-\t  e->frequency = compute_call_stmt_bb_frequency (current_function_decl, bb);\n+\t  e->frequency = compute_call_stmt_bb_frequency (current_function_decl,\n+\t\t\t\t\t\t\t bb);\n+\t  e->count = bb->count;\n+\t}\n+      for (e = new_version_node->indirect_calls; e; e = e->next_callee)\n+\t{\n+\t  basic_block bb = gimple_bb (e->call_stmt);\n+\t  e->frequency = compute_call_stmt_bb_frequency (current_function_decl,\n+\t\t\t\t\t\t\t bb);\n \t  e->count = bb->count;\n \t}\n     }"}]}