{"sha": "08303d5bb44c250c178aeb53b70027a9ad188bb8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDgzMDNkNWJiNDRjMjUwYzE3OGFlYjUzYjcwMDI3YTlhZDE4OGJiOA==", "commit": {"author": {"name": "James A. Morrison", "email": "phython@gcc.gnu.org", "date": "2005-08-02T05:08:40Z"}, "committer": {"name": "James A. Morrison", "email": "phython@gcc.gnu.org", "date": "2005-08-02T05:08:40Z"}, "message": "re PR tree-optimization/23129 (VRP propagates division of antiranges incorrectly)\n\n2005-08-02  James A. Morrison  <phython@gcc.gnu.org>\n\n        PR tree-optimization/23129\n        * tree-vrp.c (extract_range_from_binary_expr): Set value range to\n        varying for divisions with anti-ranges.\n\nFrom-SVN: r102653", "tree": {"sha": "16b6683d313862b82824f5eafd47f482809349c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/16b6683d313862b82824f5eafd47f482809349c4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/08303d5bb44c250c178aeb53b70027a9ad188bb8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08303d5bb44c250c178aeb53b70027a9ad188bb8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/08303d5bb44c250c178aeb53b70027a9ad188bb8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08303d5bb44c250c178aeb53b70027a9ad188bb8/comments", "author": null, "committer": null, "parents": [{"sha": "bf2f9588069b547f28ddd4fbc6d0eae443d99d97", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf2f9588069b547f28ddd4fbc6d0eae443d99d97", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf2f9588069b547f28ddd4fbc6d0eae443d99d97"}], "stats": {"total": 33, "additions": 32, "deletions": 1}, "files": [{"sha": "430e47441b7add78829850841df276773f1b0a32", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08303d5bb44c250c178aeb53b70027a9ad188bb8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08303d5bb44c250c178aeb53b70027a9ad188bb8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=08303d5bb44c250c178aeb53b70027a9ad188bb8", "patch": "@@ -1,3 +1,9 @@\n+2005-08-02  James A. Morrison  <phython@gcc.gnu.org>\n+\n+\tPR tree-optimization/23129\n+\t* tree-vrp.c (extract_range_from_binary_expr): Set value range to\n+\tvarying for divisions with anti-ranges.\n+\n 2005-08-02  Jan Hubicka  <jh@suse.cz>\n \n \t* tree-ssa-dom.c (thread_across_edge): Remove updating here."}, {"sha": "0060ae66307b9312a85c43d3652f6283c0bb3275", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08303d5bb44c250c178aeb53b70027a9ad188bb8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08303d5bb44c250c178aeb53b70027a9ad188bb8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=08303d5bb44c250c178aeb53b70027a9ad188bb8", "patch": "@@ -1,3 +1,7 @@\n+2005-08-02  James A. Morrison  <phython@gcc.gnu.org>\n+\n+\t* gcc.c-torture/execute/vrp-4.c: New test.\n+\n 2005-08-02  Jan Hubicka  <jh@suse.cz>\n \n \t* update-threading.c: New test."}, {"sha": "23f29220c8a692a488b54a163e9b2f164af24a80", "filename": "gcc/testsuite/gcc.c-torture/execute/vrp-4.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08303d5bb44c250c178aeb53b70027a9ad188bb8/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fvrp-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08303d5bb44c250c178aeb53b70027a9ad188bb8/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fvrp-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fvrp-4.c?ref=08303d5bb44c250c178aeb53b70027a9ad188bb8", "patch": "@@ -0,0 +1,20 @@\n+extern void exit (int);\n+extern void abort ();\n+\n+void test(int x, int y)\n+{\n+\tint c;\n+\n+\tif (x == 1) abort();\n+\tif (y == 1) abort();\n+\n+\tc = x / y;\n+\n+\tif (c != 1) abort();\n+}\n+\n+int main()\n+{\n+\ttest(2, 2);\n+\texit (0);\n+}"}, {"sha": "68bcb1e6a8fd84951b9f5a8f93fc3fe9951f26d9", "filename": "gcc/tree-vrp.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08303d5bb44c250c178aeb53b70027a9ad188bb8/gcc%2Ftree-vrp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08303d5bb44c250c178aeb53b70027a9ad188bb8/gcc%2Ftree-vrp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vrp.c?ref=08303d5bb44c250c178aeb53b70027a9ad188bb8", "patch": "@@ -1136,7 +1136,8 @@ extract_range_from_binary_expr (value_range_t *vr, tree expr)\n \t the new range.  */\n \n       /* Divisions by zero result in a VARYING value.  */\n-      if (code != MULT_EXPR && range_includes_zero_p (&vr1))\n+      if (code != MULT_EXPR\n+\t  && (vr0.type == VR_ANTI_RANGE || range_includes_zero_p (&vr1)))\n \t{\n \t  set_value_range_to_varying (vr);\n \t  return;"}]}