{"sha": "914be15cf3f8bd387c93dfe7b927df18f4462640", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTE0YmUxNWNmM2Y4YmQzODdjOTNkZmU3YjkyN2RmMThmNDQ2MjY0MA==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@gmail.com", "date": "2019-03-27T01:12:35Z"}, "committer": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2019-03-27T01:12:35Z"}, "message": "[RS6000] Don't rely on rs6000_hard_regno_mode_ok being zero\n\n\t* config/rs6000/rs6000.c (rs6000_init_hard_regno_mode_ok): Always\n\tassign rs6000_hard_regno_mode_ok_p[m][r].  Formatting.\n\nFrom-SVN: r269959", "tree": {"sha": "d9516a0e7c36ba1402895590c5ae342974eebb1d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d9516a0e7c36ba1402895590c5ae342974eebb1d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/914be15cf3f8bd387c93dfe7b927df18f4462640", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/914be15cf3f8bd387c93dfe7b927df18f4462640", "html_url": "https://github.com/Rust-GCC/gccrs/commit/914be15cf3f8bd387c93dfe7b927df18f4462640", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/914be15cf3f8bd387c93dfe7b927df18f4462640/comments", "author": {"login": "amodra", "id": 6006325, "node_id": "MDQ6VXNlcjYwMDYzMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amodra", "html_url": "https://github.com/amodra", "followers_url": "https://api.github.com/users/amodra/followers", "following_url": "https://api.github.com/users/amodra/following{/other_user}", "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}", "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amodra/subscriptions", "organizations_url": "https://api.github.com/users/amodra/orgs", "repos_url": "https://api.github.com/users/amodra/repos", "events_url": "https://api.github.com/users/amodra/events{/privacy}", "received_events_url": "https://api.github.com/users/amodra/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "416fcd3d4587271a45f183ad5de2c1e27a44ff4f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/416fcd3d4587271a45f183ad5de2c1e27a44ff4f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/416fcd3d4587271a45f183ad5de2c1e27a44ff4f"}], "stats": {"total": 11, "additions": 8, "deletions": 3}, "files": [{"sha": "f86b2ec7556cc5cc9d44ba68e1460051e3ecb887", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/914be15cf3f8bd387c93dfe7b927df18f4462640/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/914be15cf3f8bd387c93dfe7b927df18f4462640/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=914be15cf3f8bd387c93dfe7b927df18f4462640", "patch": "@@ -1,3 +1,8 @@\n+2019-03-27  Alan Modra  <amodra@gmail.com>\n+\n+\t* config/rs6000/rs6000.c (rs6000_init_hard_regno_mode_ok): Always\n+\tassign rs6000_hard_regno_mode_ok_p[m][r].  Formatting.\n+\n 2019-03-26  Andrew Waterman  <andrew@sifive.com>\n \t    Jim Wilson  <jimw@sifive.com>\n "}, {"sha": "03c91432bff5d184de6f4e3a8bce6624e30e834e", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/914be15cf3f8bd387c93dfe7b927df18f4462640/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/914be15cf3f8bd387c93dfe7b927df18f4462640/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=914be15cf3f8bd387c93dfe7b927df18f4462640", "patch": "@@ -3463,13 +3463,13 @@ rs6000_init_hard_regno_mode_ok (bool global_init_p)\n   for (r = 0; HARD_REGISTER_NUM_P (r); ++r)\n     for (m = 0; m < NUM_MACHINE_MODES; ++m)\n       rs6000_hard_regno_nregs[m][r]\n-\t= rs6000_hard_regno_nregs_internal (r, (machine_mode)m);\n+\t= rs6000_hard_regno_nregs_internal (r, (machine_mode) m);\n \n   /* Precalculate TARGET_HARD_REGNO_MODE_OK.  */\n   for (r = 0; HARD_REGISTER_NUM_P (r); ++r)\n     for (m = 0; m < NUM_MACHINE_MODES; ++m)\n-      if (rs6000_hard_regno_mode_ok_uncached (r, (machine_mode)m))\n-\trs6000_hard_regno_mode_ok_p[m][r] = true;\n+      rs6000_hard_regno_mode_ok_p[m][r]\n+\t= rs6000_hard_regno_mode_ok_uncached (r, (machine_mode) m);\n \n   /* Precalculate CLASS_MAX_NREGS sizes.  */\n   for (c = 0; c < LIM_REG_CLASSES; ++c)"}]}