{"sha": "c11c09f9beac5e556e0c27d898cdbfd9a309fea1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzExYzA5ZjliZWFjNWU1NTZlMGMyN2Q4OThjZGJmZDlhMzA5ZmVhMQ==", "commit": {"author": {"name": "Kaushik Phatak", "email": "kaushik.phatak@kpitcummins.com", "date": "2010-04-11T22:53:30Z"}, "committer": {"name": "Kaz Kojima", "email": "kkojima@gcc.gnu.org", "date": "2010-04-11T22:53:30Z"}, "message": "sh.md (*movqi_pop): New insn pattern.\n\n\t* config/sh/sh.md (*movqi_pop): New insn pattern.\n\t* config/sh/predicates.md (sh_no_delay_pop_operand): New predicate.\n\t* gcc.target/sh/rte-delay-slot.c: New test.\n\nFrom-SVN: r158207", "tree": {"sha": "94c019311ac9df0d6c29b9bc504e117305da107b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/94c019311ac9df0d6c29b9bc504e117305da107b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c11c09f9beac5e556e0c27d898cdbfd9a309fea1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c11c09f9beac5e556e0c27d898cdbfd9a309fea1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c11c09f9beac5e556e0c27d898cdbfd9a309fea1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c11c09f9beac5e556e0c27d898cdbfd9a309fea1/comments", "author": null, "committer": null, "parents": [{"sha": "d72ebc16bbf1edcf8d772b9b5686d26a44ae166a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d72ebc16bbf1edcf8d772b9b5686d26a44ae166a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d72ebc16bbf1edcf8d772b9b5686d26a44ae166a"}], "stats": {"total": 82, "additions": 80, "deletions": 2}, "files": [{"sha": "defa3bab4ea91d25ac14be3f01759aa22a0444c4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c11c09f9beac5e556e0c27d898cdbfd9a309fea1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c11c09f9beac5e556e0c27d898cdbfd9a309fea1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c11c09f9beac5e556e0c27d898cdbfd9a309fea1", "patch": "@@ -1,3 +1,8 @@\n+2010-04-11  Kaushik Phatak  <kaushik.phatak@kpitcummins.com>\n+\n+\t* config/sh/sh.md (*movqi_pop): New insn pattern.\n+\t* config/sh/predicates.md (sh_no_delay_pop_operand): New predicate.\n+\n 2010-04-11  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/i386.md (any_shiftrt): New code iterator."}, {"sha": "b6508b70d6877e1e3113f7d3a23f51586cfea28c", "filename": "gcc/config/sh/predicates.md", "status": "modified", "additions": 21, "deletions": 1, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c11c09f9beac5e556e0c27d898cdbfd9a309fea1/gcc%2Fconfig%2Fsh%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c11c09f9beac5e556e0c27d898cdbfd9a309fea1/gcc%2Fconfig%2Fsh%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fpredicates.md?ref=c11c09f9beac5e556e0c27d898cdbfd9a309fea1", "patch": "@@ -1,5 +1,6 @@\n ;; Predicate definitions for Renesas / SuperH SH.\n-;; Copyright (C) 2005, 2006, 2007, 2008, 2009 Free Software Foundation, Inc.\n+;; Copyright (C) 2005, 2006, 2007, 2008, 2009, 2010\n+;; Free Software Foundation, Inc.\n ;;\n ;; This file is part of GCC.\n ;;\n@@ -421,6 +422,25 @@\n   return general_operand (op, mode);\n })\n \n+\n+;; Returns 1 if OP is a POST_INC on stack pointer register.\n+\n+(define_predicate \"sh_no_delay_pop_operand\"\n+  (match_code \"mem\")\n+{\n+  rtx inside;\n+  inside = XEXP (op, 0);\n+\n+  if (GET_CODE (op) == MEM && GET_MODE (op) == SImode \n+      && GET_CODE (inside) == POST_INC \n+      && GET_CODE (XEXP (inside, 0)) == REG\n+      && REGNO (XEXP (inside, 0)) == SP_REG)\n+    return 1;\n+\n+  return 0;\n+})\n+\n+\n ;; Returns 1 if OP is a MEM that can be source of a simple move operation.\n \n (define_predicate \"unaligned_load_operand\""}, {"sha": "d8d6ca7fbc0e4c516c9185f35d6790b1ce4a0f0b", "filename": "gcc/config/sh/sh.md", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c11c09f9beac5e556e0c27d898cdbfd9a309fea1/gcc%2Fconfig%2Fsh%2Fsh.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c11c09f9beac5e556e0c27d898cdbfd9a309fea1/gcc%2Fconfig%2Fsh%2Fsh.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.md?ref=c11c09f9beac5e556e0c27d898cdbfd9a309fea1", "patch": "@@ -1,6 +1,7 @@\n ;;- Machine description for Renesas / SuperH SH.\n ;;  Copyright (C) 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,\n-;;  2003, 2004, 2005, 2006, 2007, 2008, 2009 Free Software Foundation, Inc.\n+;;  2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010\n+;;  Free Software Foundation, Inc.\n ;;  Contributed by Steve Chamberlain (sac@cygnus.com).\n ;;  Improved by Jim Wilson (wilson@cygnus.com).\n \n@@ -4836,6 +4837,21 @@ label:\n   \"TARGET_SH1\"\n   \"sett\")\n \n+;; Define additional pop for SH1 and SH2 so it does not get \n+;; placed in the delay slot.\n+(define_insn \"*movsi_pop\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"=r,x,l\")\n+        (match_operand:SI 1 \"sh_no_delay_pop_operand\" \">,>,>\"))]\n+  \"(TARGET_SH1 || TARGET_SH2E || TARGET_SH2A)\n+   && ! TARGET_SH3\"\n+  \"@\n+   mov.l   %1,%0\n+   lds.l   %1,%0\n+   lds.l   %1,%0\"\n+  [(set_attr \"type\" \"load_si,mem_mac,pload\")\n+   (set_attr \"length\" \"2,2,2\")\n+   (set_attr \"in_delay_slot\" \"no,no,no\")])\n+\n ;; t/r must come after r/r, lest reload will try to reload stuff like\n ;; (set (subreg:SI (mem:QI (plus:SI (reg:SI SP_REG) (const_int 12)) 0) 0)\n ;; (made from (set (subreg:SI (reg:QI ###) 0) ) into T."}, {"sha": "24eebcfd877b725055221198f3787e676d26c817", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c11c09f9beac5e556e0c27d898cdbfd9a309fea1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c11c09f9beac5e556e0c27d898cdbfd9a309fea1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c11c09f9beac5e556e0c27d898cdbfd9a309fea1", "patch": "@@ -1,3 +1,7 @@\n+2010-04-11  Kaushik Phatak  <kaushik.phatak@kpitcummins.com>\n+\n+\t* gcc.target/sh/rte-delay-slot.c: New test.\n+\n 2010-04-11  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gnat.dg/pack9.adb: Remove -cargs option."}, {"sha": "eca5db94355b5a852681eb4c130215a588619a75", "filename": "gcc/testsuite/gcc.target/sh/rte-delay-slot.c", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c11c09f9beac5e556e0c27d898cdbfd9a309fea1/gcc%2Ftestsuite%2Fgcc.target%2Fsh%2Frte-delay-slot.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c11c09f9beac5e556e0c27d898cdbfd9a309fea1/gcc%2Ftestsuite%2Fgcc.target%2Fsh%2Frte-delay-slot.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fsh%2Frte-delay-slot.c?ref=c11c09f9beac5e556e0c27d898cdbfd9a309fea1", "patch": "@@ -0,0 +1,33 @@\n+/* { dg-do compile { target \"sh-*-*\" } } */\n+/* { dg-options \"-O2\" } */\n+/* { dg-skip-if \"\" { \"sh*-*-*\" } \"*\" \"-m1 -m2*\" }  */\n+/* { dg-final { scan-assembler-not \"\\trte\\t\\n\\tmov.l\\t@r15\\\\+\" } } */\n+\n+/* This test checks if the compiler generates a pop instruction\n+   in the delay slot after rte.  For the sh and sh2, the rte\n+   instruction reads the return pc from the stack and any pop\n+   in the delay slot crashes the hardware.\n+\n+   Incorrect code generated\n+        mov.l   @r15+,r1\n+        rte\n+        mov.l   @r15+,r14\n+\n+   The right code should be\n+\n+        mov.l   @r15+,r1\n+        mov.l   @r15+,r14\n+        rte\n+        nop\n+*/\n+void INT_MTU2_1_TGIA1 (void)\n+  __attribute__ ((interrupt_handler));\n+void\n+INT_MTU2_1_TGIA1 (void)\n+{\n+  volatile int i = 0;\n+  volatile int x, y;\n+\n+  for (i = 0; i < 10; i++)\n+    y = y + x;\n+}"}]}