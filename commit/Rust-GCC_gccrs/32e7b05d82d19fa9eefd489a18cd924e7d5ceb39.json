{"sha": "32e7b05d82d19fa9eefd489a18cd924e7d5ceb39", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzJlN2IwNWQ4MmQxOWZhOWVlZmQ0ODlhMThjZDkyNGU3ZDVjZWIzOQ==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2012-06-18T18:37:16Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2012-06-18T18:37:16Z"}, "message": "intrinsic.h (gfc_resolve_rank): New prototype.\n\n2012-06-18  Tobias Burnus  <burnus@net-b.de>\n\n        * intrinsic.h (gfc_resolve_rank): New prototype.\n        * intrinsic.c (add_functions): Use gfc_resolve_rank.\n        * iresolve.c (add_functions): New function.\n        * trans-intrinsic.c (gfc_conv_intrinsic_rank): New function.\n        (gfc_conv_intrinsic_function): Call it.\n\nFrom-SVN: r188751", "tree": {"sha": "db31a8a861d04230f1f54113822355b502e8b5ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/db31a8a861d04230f1f54113822355b502e8b5ea"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/32e7b05d82d19fa9eefd489a18cd924e7d5ceb39", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32e7b05d82d19fa9eefd489a18cd924e7d5ceb39", "html_url": "https://github.com/Rust-GCC/gccrs/commit/32e7b05d82d19fa9eefd489a18cd924e7d5ceb39", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32e7b05d82d19fa9eefd489a18cd924e7d5ceb39/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "478ad83d94c54c0e8e939336fcfbbfb85529a6d9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/478ad83d94c54c0e8e939336fcfbbfb85529a6d9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/478ad83d94c54c0e8e939336fcfbbfb85529a6d9"}], "stats": {"total": 50, "additions": 49, "deletions": 1}, "files": [{"sha": "ef2dc36166b12e3530895757f62b4245b26f85d6", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32e7b05d82d19fa9eefd489a18cd924e7d5ceb39/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32e7b05d82d19fa9eefd489a18cd924e7d5ceb39/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=32e7b05d82d19fa9eefd489a18cd924e7d5ceb39", "patch": "@@ -1,3 +1,11 @@\n+2012-06-18  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* intrinsic.h (gfc_resolve_rank): New prototype.\n+\t* intrinsic.c (add_functions): Use gfc_resolve_rank.\n+\t* iresolve.c (add_functions): New function.\n+\t* trans-intrinsic.c (gfc_conv_intrinsic_rank): New function.\n+\t(gfc_conv_intrinsic_function): Call it.\n+\n 2012-06-18  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/53692"}, {"sha": "88d4636bd7144de97c27569feecf322791f684f7", "filename": "gcc/fortran/intrinsic.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32e7b05d82d19fa9eefd489a18cd924e7d5ceb39/gcc%2Ffortran%2Fintrinsic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32e7b05d82d19fa9eefd489a18cd924e7d5ceb39/gcc%2Ffortran%2Fintrinsic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fintrinsic.c?ref=32e7b05d82d19fa9eefd489a18cd924e7d5ceb39", "patch": "@@ -2434,7 +2434,7 @@ add_functions (void)\n   make_generic (\"range\", GFC_ISYM_RANGE, GFC_STD_F95);\n \n   add_sym_1 (\"rank\", GFC_ISYM_RANK, CLASS_INQUIRY, ACTUAL_NO, BT_INTEGER, di,\n-\t     GFC_STD_F2008_TS, gfc_check_rank, gfc_simplify_rank, NULL,\n+\t     GFC_STD_F2008_TS, gfc_check_rank, gfc_simplify_rank, gfc_resolve_rank,\n \t     a, BT_REAL, dr, REQUIRED);\n   make_generic (\"rank\", GFC_ISYM_RANK, GFC_STD_F2008_TS);\n "}, {"sha": "2635ba6d3da915958fe5a8633ddaf5a015217eb2", "filename": "gcc/fortran/intrinsic.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32e7b05d82d19fa9eefd489a18cd924e7d5ceb39/gcc%2Ffortran%2Fintrinsic.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32e7b05d82d19fa9eefd489a18cd924e7d5ceb39/gcc%2Ffortran%2Fintrinsic.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fintrinsic.h?ref=32e7b05d82d19fa9eefd489a18cd924e7d5ceb39", "patch": "@@ -486,6 +486,7 @@ void gfc_resolve_long (gfc_expr *, gfc_expr *);\n void gfc_resolve_ior (gfc_expr *, gfc_expr *, gfc_expr *);\n void gfc_resolve_iparity (gfc_expr *, gfc_expr *, gfc_expr *, gfc_expr *);\n void gfc_resolve_isatty (gfc_expr *, gfc_expr *);\n+void gfc_resolve_rank (gfc_expr *, gfc_expr *);\n void gfc_resolve_rshift (gfc_expr *, gfc_expr *, gfc_expr *);\n void gfc_resolve_lshift (gfc_expr *, gfc_expr *, gfc_expr *);\n void gfc_resolve_ishft (gfc_expr *, gfc_expr *, gfc_expr *);"}, {"sha": "2a494550bbc8e88b99845c433dd627f5908e969c", "filename": "gcc/fortran/iresolve.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32e7b05d82d19fa9eefd489a18cd924e7d5ceb39/gcc%2Ffortran%2Firesolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32e7b05d82d19fa9eefd489a18cd924e7d5ceb39/gcc%2Ffortran%2Firesolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Firesolve.c?ref=32e7b05d82d19fa9eefd489a18cd924e7d5ceb39", "patch": "@@ -2005,6 +2005,15 @@ gfc_resolve_product (gfc_expr *f, gfc_expr *array, gfc_expr *dim,\n }\n \n \n+void\n+gfc_resolve_rank (gfc_expr *f, gfc_expr *array ATTRIBUTE_UNUSED)\n+{\n+  f->ts.type = BT_INTEGER;\n+  f->ts.kind = gfc_default_integer_kind;\n+  f->value.function.name = gfc_get_string (\"__rank\");\n+}\n+\n+\n void\n gfc_resolve_real (gfc_expr *f, gfc_expr *a, gfc_expr *kind)\n {"}, {"sha": "c74e81a011efff4c1591e794b7ad9d27c4b4c24e", "filename": "gcc/fortran/trans-intrinsic.c", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32e7b05d82d19fa9eefd489a18cd924e7d5ceb39/gcc%2Ffortran%2Ftrans-intrinsic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32e7b05d82d19fa9eefd489a18cd924e7d5ceb39/gcc%2Ffortran%2Ftrans-intrinsic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-intrinsic.c?ref=32e7b05d82d19fa9eefd489a18cd924e7d5ceb39", "patch": "@@ -1316,6 +1316,32 @@ trans_num_images (gfc_se * se)\n }\n \n \n+static void\n+gfc_conv_intrinsic_rank (gfc_se *se, gfc_expr *expr)\n+{\n+  gfc_se argse;\n+  gfc_ss *ss;\n+  tree dtype, tmp;\n+\n+  ss = gfc_walk_expr (expr->value.function.actual->expr);\n+  gcc_assert (ss != gfc_ss_terminator);\n+  gfc_init_se (&argse, NULL);\n+  argse.data_not_needed = 1;\n+  argse.want_pointer = 1;\n+\n+  gfc_conv_expr_descriptor (&argse, expr->value.function.actual->expr, ss);\n+  gfc_add_block_to_block (&se->pre, &argse.pre);\n+  gfc_add_block_to_block (&se->post, &argse.post);\n+  argse.expr = build_fold_indirect_ref_loc (input_location, argse.expr);\n+  argse.expr = build_fold_indirect_ref_loc (input_location, argse.expr);\n+  dtype = gfc_conv_descriptor_dtype (argse.expr);\n+  tmp = build_int_cst (TREE_TYPE (dtype), GFC_DTYPE_RANK_MASK);\n+  tmp = fold_build2_loc (input_location, BIT_AND_EXPR, TREE_TYPE (dtype),\n+\t\t\t dtype, tmp);\n+  se->expr = fold_convert (gfc_get_int_type (gfc_default_integer_kind), tmp);\n+}\n+\n+\n /* Evaluate a single upper or lower bound.  */\n /* TODO: bound intrinsic generates way too much unnecessary code.  */\n \n@@ -6710,6 +6736,10 @@ gfc_conv_intrinsic_function (gfc_se * se, gfc_expr * expr)\n       gfc_conv_intrinsic_arith (se, expr, MULT_EXPR, false);\n       break;\n \n+    case GFC_ISYM_RANK:\n+      gfc_conv_intrinsic_rank (se, expr);\n+      break;\n+\n     case GFC_ISYM_RRSPACING:\n       gfc_conv_intrinsic_rrspacing (se, expr);\n       break;"}]}