{"sha": "8f802bfb129ea13a4ca4717d96aac798809ff742", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGY4MDJiZmIxMjllYTEzYTRjYTQ3MTdkOTZhYWM3OTg4MDlmZjc0Mg==", "commit": {"author": {"name": "David Edelsohn", "email": "edelsohn@gnu.org", "date": "1996-01-31T20:08:06Z"}, "committer": {"name": "David Edelsohn", "email": "edelsohn@gnu.org", "date": "1996-01-31T20:08:06Z"}, "message": "ld/std typos and TARGET_32BIT usage\n\nFrom-SVN: r11145", "tree": {"sha": "95362f2cd662c920b80de52125f6d176484bc274", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/95362f2cd662c920b80de52125f6d176484bc274"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8f802bfb129ea13a4ca4717d96aac798809ff742", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f802bfb129ea13a4ca4717d96aac798809ff742", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f802bfb129ea13a4ca4717d96aac798809ff742", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f802bfb129ea13a4ca4717d96aac798809ff742/comments", "author": null, "committer": null, "parents": [{"sha": "d52d8c9c0fcadb56e5e224d48ca3e2b7592d38a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d52d8c9c0fcadb56e5e224d48ca3e2b7592d38a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d52d8c9c0fcadb56e5e224d48ca3e2b7592d38a2"}], "stats": {"total": 56, "additions": 28, "deletions": 28}, "files": [{"sha": "3005672b8f2d4bc7cb32e069a2be3fc1482f34db", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 28, "deletions": 28, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f802bfb129ea13a4ca4717d96aac798809ff742/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f802bfb129ea13a4ca4717d96aac798809ff742/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=8f802bfb129ea13a4ca4717d96aac798809ff742", "patch": "@@ -2900,15 +2900,15 @@ output_prolog (file, size)\n   char *store_reg;\n   char *load_reg;\n \n-  if (TARGET_64BIT)\n+  if (TARGET_32BIT)\n     {\n-      store_reg = \"\\tstd %s,%d(%s)\";\n-      load_reg = \"\\tlld %s,%d(%s)\";\n+      store_reg = \"\\t{st|stw} %s,%d(%s)\\n\";\n+      load_reg = \"\\t{l|lwz} %s,%d(%s)\\n\";\n     }\n   else\n     {\n-      store_reg = \"\\t{st|stw} %s,%d(%s)\\n\";\n-      load_reg = \"\\t{l|lwz} %s,%d(%s)\\n\";\n+      store_reg = \"\\tstd %s,%d(%s)\\n\";\n+      load_reg = \"\\tlld %s,%d(%s)\\n\";\n     }\n \n   if (TARGET_DEBUG_STACK)\n@@ -3009,7 +3009,7 @@ output_prolog (file, size)\n     {\n       if (info->total_size < 32767)\n \tasm_fprintf (file,\n-\t\t     (TARGET_64BIT) ? \"\\tstdu %s,%d(%s)\\n\" : \"\\t{stu|stwu} %s,%d(%s)\\n\",\n+\t\t     (TARGET_32BIT) ? \"\\t{stu|stwu} %s,%d(%s)\\n\" : \"\\tstdu %s,%d(%s)\\n\",\n \t\t     reg_names[1], - info->total_size, reg_names[1]);\n       else\n \t{\n@@ -3018,7 +3018,7 @@ output_prolog (file, size)\n \t\t       reg_names[0], (neg_size >> 16) & 0xffff,\n \t\t       reg_names[0], reg_names[0], neg_size & 0xffff);\n \t  asm_fprintf (file,\n-\t\t       (TARGET_64BIT) ? \"\\tstdux %s,%s,%s\\n\" : \"\\t{stux|stwux} %s,%s,%s\\n\",\n+\t\t       (TARGET_32BIT) ? \"\\t{stux|stwux} %s,%s,%s\\n\" : \"\\tstdux %s,%s,%s\\n\",\n \t\t       reg_names[1], reg_names[1], reg_names[0]);\n \t}\n     }\n@@ -3093,7 +3093,7 @@ output_prolog (file, size)\n \t  ASM_OUTPUT_INTERNAL_LABEL (file, \"LCF\", rs6000_pic_labelno);\n \t  fprintf (file, \"\\tmflr %s\\n\", reg_names[30]);\n \n-\t  asm_fprintf (file, TARGET_64BIT ? \"\\tld\" : \"\\t{l|lwz}\");\n+\t  asm_fprintf (file, TARGET_32BIT ? \"\\t{l|lwz}\" : \"\\tld\");\n \t  fprintf (file, \" %s,(\", reg_names[0]);\n \t  ASM_GENERATE_INTERNAL_LABEL (buf, \"LCL\", rs6000_pic_labelno);\n \t  assemble_name (file, buf);\n@@ -3112,7 +3112,7 @@ output_prolog (file, size)\n \t  {\n \t  case ABI_V4:\n \t  case ABI_AIX_NODESC:\n-\t    if (!TARGET_64BIT)\n+\t    if (TARGET_32BIT)\n \t      {\n \t\tASM_GENERATE_INTERNAL_LABEL (buf, \"LCTOC\", 1);\n \t\tasm_fprintf (file, \"\\t{cau|addis} %s,%s,\", reg_names[30], reg_names[0]);\n@@ -3161,7 +3161,7 @@ output_epilog (file, size)\n      int size;\n {\n   rs6000_stack_t *info = rs6000_stack_info ();\n-  char *load_reg = (TARGET_64BIT) ? \"\\tld %s,%d(%s)\" : \"\\t{l|lwz} %s,%d(%s)\\n\";\n+  char *load_reg = (TARGET_32BIT) ? \"\\t{l|lwz} %s,%d(%s)\\n\" : \"\\tld %s,%d(%s)\\n\";\n   rtx insn = get_last_insn ();\n   int i;\n \n@@ -3206,7 +3206,7 @@ output_epilog (file, size)\n \t{\n \t  int regno    = info->first_gp_reg_save;\n \t  int loc      = info->gp_save_offset;\n-\t  int reg_size = (TARGET_64BIT) ? 8 : 4;\n+\t  int reg_size = (TARGET_32BIT) ? 4 : 8;\n \n \t  for ( ; regno < 32; regno++, loc += reg_size)\n \t    asm_fprintf (file, load_reg, reg_names[regno], loc, reg_names[1]);\n@@ -3887,7 +3887,7 @@ rs6000_trampoline_template (file)\n        the address of the function, the second word is the TOC pointer (r2),\n        and the third word is the static chain value.  */\n     case ABI_AIX:\n-      fprintf (file, \"\\t.long %s\\n\", (TARGET_64BIT) ? \"0,0,0,0,0,0\" : \"0,0,0\");\n+      fprintf (file, \"\\t.long %s\\n\", (TARGET_32BIT) ? \"0,0,0\" : \"0,0,0,0,0,0\");\n       break;\n \n \n@@ -3898,20 +3898,7 @@ rs6000_trampoline_template (file)\n       if (STATIC_CHAIN_REGNUM == 0 || !TARGET_NEW_MNEMONICS)\n \tabort ();\n \n-      if (TARGET_64BIT)\n-\t{\n-\t  fprintf (file, \"\\tmflr %s\\n\", r0);\t\t/* offset  0 */\n-\t  fprintf (file, \"\\tbl .LTRAMP1\\n\");\t\t/* offset  4 */\n-\t  fprintf (file, \"\\t.long 0,0,0,0\\n\");\t\t/* offset  8 */\n-\t  fprintf (file, \".LTRAMP1:\\n\");\n-\t  fprintf (file, \"\\tmflr %s\\n\", sc);\t\t/* offset 28 */\n-\t  fprintf (file, \"\\tmtlr %s\\n\", r0);\t\t/* offset 32 */\n-\t  fprintf (file, \"\\tld %s,0(%s)\\n\", r0, sc);\t/* offset 36 */\n-\t  fprintf (file, \"\\tld %s,8(%s)\\n\", sc, sc);\t/* offset 40 */\n-\t  fprintf (file, \"\\tmtctr %s\\n\", r0);\t\t/* offset 44 */\n-\t  fprintf (file, \"\\tbctr\\n\");\t\t\t/* offset 48 */\n-\t}\n-      else\n+      if (TARGET_32BIT)\n \t{\n \t  fprintf (file, \"\\tmflr %s\\n\", r0);\t\t/* offset  0 */\n \t  fprintf (file, \"\\tbl .LTRAMP1\\n\");\t\t/* offset  4 */\n@@ -3924,6 +3911,19 @@ rs6000_trampoline_template (file)\n \t  fprintf (file, \"\\tmtctr %s\\n\", r0);\t\t/* offset 36 */\n \t  fprintf (file, \"\\tbctr\\n\");\t\t\t/* offset 40 */\n \t}\n+      else\n+\t{\n+\t  fprintf (file, \"\\tmflr %s\\n\", r0);\t\t/* offset  0 */\n+\t  fprintf (file, \"\\tbl .LTRAMP1\\n\");\t\t/* offset  4 */\n+\t  fprintf (file, \"\\t.long 0,0,0,0\\n\");\t\t/* offset  8 */\n+\t  fprintf (file, \".LTRAMP1:\\n\");\n+\t  fprintf (file, \"\\tmflr %s\\n\", sc);\t\t/* offset 28 */\n+\t  fprintf (file, \"\\tmtlr %s\\n\", r0);\t\t/* offset 32 */\n+\t  fprintf (file, \"\\tld %s,0(%s)\\n\", r0, sc);\t/* offset 36 */\n+\t  fprintf (file, \"\\tld %s,8(%s)\\n\", sc, sc);\t/* offset 40 */\n+\t  fprintf (file, \"\\tmtctr %s\\n\", r0);\t\t/* offset 44 */\n+\t  fprintf (file, \"\\tbctr\\n\");\t\t\t/* offset 48 */\n+\t}\n       break;\n \n   /* NT function pointers point to a two word area (real address, TOC)\n@@ -3964,12 +3964,12 @@ rs6000_trampoline_size ()\n       abort ();\n \n     case ABI_AIX:\n-      ret = (TARGET_64BIT) ? 24 : 12;\n+      ret = (TARGET_32BIT) ? 12 : 24;\n       break;\n \n     case ABI_V4:\n     case ABI_AIX_NODESC:\n-      ret = (TARGET_64BIT ? 48 : 40);\n+      ret = (TARGET_32BIT ? 40 : 48);\n       break;\n \n     case ABI_NT:"}]}