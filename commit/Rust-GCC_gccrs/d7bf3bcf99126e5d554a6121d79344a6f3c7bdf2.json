{"sha": "d7bf3bcf99126e5d554a6121d79344a6f3c7bdf2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDdiZjNiY2Y5OTEyNmU1ZDU1NGE2MTIxZDc5MzQ0YTZmM2M3YmRmMg==", "commit": {"author": {"name": "Zdenek Dvorak", "email": "dvorakz@suse.cz", "date": "2005-05-17T20:02:56Z"}, "committer": {"name": "Zdenek Dvorak", "email": "rakdver@gcc.gnu.org", "date": "2005-05-17T20:02:56Z"}, "message": "tree-ssa-loop-ivopts.c (find_bivs, [...]): Apply expand_simple_operations to bases of the ivs.\n\n\t* tree-ssa-loop-ivopts.c (find_bivs, find_givs_in_stmt_scev): Apply\n\texpand_simple_operations to bases of the ivs.\n\t(tree_int_cst_sign_bit): Export.\n\t* tree-flow.h (expand_simple_operations): Declare.\n\t* tree-ssa-loop-niter.c (number_of_iterations_cond): Use\n\ttree_int_cst_sign_bit.\n\t(expand_simple_operations): Export.\n\t* tree.h (tree_int_cst_sign_bit): Declare.\n\nFrom-SVN: r99853", "tree": {"sha": "e43ca90e30d0a349e9725b82bbd8fe83295a552e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e43ca90e30d0a349e9725b82bbd8fe83295a552e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d7bf3bcf99126e5d554a6121d79344a6f3c7bdf2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7bf3bcf99126e5d554a6121d79344a6f3c7bdf2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7bf3bcf99126e5d554a6121d79344a6f3c7bdf2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7bf3bcf99126e5d554a6121d79344a6f3c7bdf2/comments", "author": null, "committer": null, "parents": [{"sha": "98273e5afbb86bdbe6b2c8164ad674c14e51700d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98273e5afbb86bdbe6b2c8164ad674c14e51700d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/98273e5afbb86bdbe6b2c8164ad674c14e51700d"}], "stats": {"total": 25, "additions": 20, "deletions": 5}, "files": [{"sha": "45a3de5b575fb7c7f908e1b9a28daa8124dcde20", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7bf3bcf99126e5d554a6121d79344a6f3c7bdf2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7bf3bcf99126e5d554a6121d79344a6f3c7bdf2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d7bf3bcf99126e5d554a6121d79344a6f3c7bdf2", "patch": "@@ -1,3 +1,14 @@\n+2005-05-17  Zdenek Dvorak  <dvorakz@suse.cz>\n+\n+\t* tree-ssa-loop-ivopts.c (find_bivs, find_givs_in_stmt_scev): Apply\n+\texpand_simple_operations to bases of the ivs.\n+\t(tree_int_cst_sign_bit): Export.\n+\t* tree-flow.h (expand_simple_operations): Declare.\n+\t* tree-ssa-loop-niter.c (number_of_iterations_cond): Use\n+\ttree_int_cst_sign_bit.\n+\t(expand_simple_operations): Export.\n+\t* tree.h (tree_int_cst_sign_bit): Declare.\n+\n 2005-05-17  Zdenek Dvorak  <dvorakz@suse.cz>\n \n \t* tree-cfg.c (tree_can_merge_blocks_p): Allow phi nodes in the"}, {"sha": "273a26ce49c814ba9cb82467f694f416a12341a0", "filename": "gcc/tree-flow.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7bf3bcf99126e5d554a6121d79344a6f3c7bdf2/gcc%2Ftree-flow.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7bf3bcf99126e5d554a6121d79344a6f3c7bdf2/gcc%2Ftree-flow.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-flow.h?ref=d7bf3bcf99126e5d554a6121d79344a6f3c7bdf2", "patch": "@@ -725,6 +725,7 @@ bool tree_duplicate_loop_to_header_edge (struct loop *, edge, struct loops *,\n \t\t\t\t\t unsigned int *, int);\n struct loop *tree_ssa_loop_version (struct loops *, struct loop *, tree,\n \t\t\t\t    basic_block *);\n+tree expand_simple_operations (tree);\n \n /* In tree-ssa-loop-im.c  */\n /* The possibilities of statement movement.  */"}, {"sha": "af121c4489d4c3b063a60391d93aff91500c7326", "filename": "gcc/tree-ssa-loop-ivopts.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7bf3bcf99126e5d554a6121d79344a6f3c7bdf2/gcc%2Ftree-ssa-loop-ivopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7bf3bcf99126e5d554a6121d79344a6f3c7bdf2/gcc%2Ftree-ssa-loop-ivopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-ivopts.c?ref=d7bf3bcf99126e5d554a6121d79344a6f3c7bdf2", "patch": "@@ -992,6 +992,7 @@ find_bivs (struct ivopts_data *data)\n \tcontinue;\n \n       base = PHI_ARG_DEF_FROM_EDGE (phi, loop_preheader_edge (loop));\n+      base = expand_simple_operations (base);\n       if (contains_abnormal_ssa_name_p (base)\n \t  || contains_abnormal_ssa_name_p (step))\n \tcontinue;\n@@ -1062,6 +1063,7 @@ find_givs_in_stmt_scev (struct ivopts_data *data, tree stmt,\n \n   if (!simple_iv (loop, stmt, TREE_OPERAND (stmt, 1), base, step, true))\n     return false;\n+  *base = expand_simple_operations (*base);\n \n   if (contains_abnormal_ssa_name_p (*base)\n       || contains_abnormal_ssa_name_p (*step))\n@@ -2536,7 +2538,7 @@ var_at_stmt (struct loop *loop, struct iv_cand *cand, tree stmt)\n /* Return the most significant (sign) bit of T.  Similar to tree_int_cst_msb,\n    but the bit is determined from TYPE_PRECISION, not MODE_BITSIZE.  */\n \n-static int\n+int\n tree_int_cst_sign_bit (tree t)\n {\n   unsigned bitno = TYPE_PRECISION (TREE_TYPE (t)) - 1;"}, {"sha": "38f7b42d46c7dacc589e5714575d89c4a9e10f97", "filename": "gcc/tree-ssa-loop-niter.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7bf3bcf99126e5d554a6121d79344a6f3c7bdf2/gcc%2Ftree-ssa-loop-niter.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7bf3bcf99126e5d554a6121d79344a6f3c7bdf2/gcc%2Ftree-ssa-loop-niter.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-niter.c?ref=d7bf3bcf99126e5d554a6121d79344a6f3c7bdf2", "patch": "@@ -189,10 +189,10 @@ number_of_iterations_cond (tree type, tree base0, tree step0,\n   /* Ignore loops of while (i-- < 10) type.  */\n   if (code != NE_EXPR)\n     {\n-      if (step0 && !tree_expr_nonnegative_p (step0))\n+      if (step0 && tree_int_cst_sign_bit (step0))\n \treturn;\n \n-      if (!zero_p (step1) && tree_expr_nonnegative_p (step1))\n+      if (!zero_p (step1) && !tree_int_cst_sign_bit (step1))\n \treturn;\n     }\n \n@@ -366,7 +366,7 @@ number_of_iterations_cond (tree type, tree base0, tree step0,\n       if (!zero_p (step1))\n   \tstep0 = fold_unary_to_constant (NEGATE_EXPR, type, step1);\n       step1 = NULL_TREE;\n-      if (!tree_expr_nonnegative_p (fold_convert (signed_niter_type, step0)))\n+      if (tree_int_cst_sign_bit (fold_convert (signed_niter_type, step0)))\n \t{\n \t  step0 = fold_unary_to_constant (NEGATE_EXPR, type, step0);\n \t  base1 = fold_build1 (NEGATE_EXPR, type, base1);\n@@ -627,7 +627,7 @@ simplify_replace_tree (tree expr, tree old, tree new)\n /* Expand definitions of ssa names in EXPR as long as they are simple\n    enough, and return the new expression.  */\n \n-static tree\n+tree\n expand_simple_operations (tree expr)\n {\n   unsigned i, n;"}, {"sha": "8dc989435bb2412d1c8b053fd848768d7170d0a4", "filename": "gcc/tree.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7bf3bcf99126e5d554a6121d79344a6f3c7bdf2/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7bf3bcf99126e5d554a6121d79344a6f3c7bdf2/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=d7bf3bcf99126e5d554a6121d79344a6f3c7bdf2", "patch": "@@ -2953,6 +2953,7 @@ extern int host_integerp (tree, int);\n extern HOST_WIDE_INT tree_low_cst (tree, int);\n extern int tree_int_cst_msb (tree);\n extern int tree_int_cst_sgn (tree);\n+extern int tree_int_cst_sign_bit (tree);\n extern int tree_expr_nonnegative_p (tree);\n extern bool may_negate_without_overflow_p (tree);\n extern tree get_inner_array_type (tree);"}]}