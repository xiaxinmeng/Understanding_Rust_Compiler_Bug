{"sha": "c3bb7df00b64b111504278db96e6e1a8486fe8cf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzNiYjdkZjAwYjY0YjExMTUwNDI3OGRiOTZlNmUxYTg0ODZmZThjZg==", "commit": {"author": {"name": "DJ Delorie", "email": "dj@redhat.com", "date": "2001-11-26T20:02:19Z"}, "committer": {"name": "DJ Delorie", "email": "dj@gcc.gnu.org", "date": "2001-11-26T20:02:19Z"}, "message": "configure.in: Check for alloca.h (for regex.c and putenv.c).\n\n* configure.in: Check for alloca.h (for regex.c and putenv.c).\n* configure: Regenerate.\n* config.h: Add HAVE_ALLOCA_H.\n\nFrom-SVN: r47352", "tree": {"sha": "9a9f8a256d8f86211f78ff413177066156e49e21", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9a9f8a256d8f86211f78ff413177066156e49e21"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c3bb7df00b64b111504278db96e6e1a8486fe8cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3bb7df00b64b111504278db96e6e1a8486fe8cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c3bb7df00b64b111504278db96e6e1a8486fe8cf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3bb7df00b64b111504278db96e6e1a8486fe8cf/comments", "author": null, "committer": null, "parents": [{"sha": "8924f58b428e3afc19a4deb566a8a6501646687b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8924f58b428e3afc19a4deb566a8a6501646687b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8924f58b428e3afc19a4deb566a8a6501646687b"}], "stats": {"total": 13, "additions": 11, "deletions": 2}, "files": [{"sha": "f986eab983dd0bc5e82bf487bc885a05e8714daa", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3bb7df00b64b111504278db96e6e1a8486fe8cf/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3bb7df00b64b111504278db96e6e1a8486fe8cf/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=c3bb7df00b64b111504278db96e6e1a8486fe8cf", "patch": "@@ -1,3 +1,9 @@\n+2001-11-26  DJ Delorie  <dj@redhat.com>\n+\n+\t* configure.in: Check for alloca.h (for regex.c and putenv.c).\n+\t* configure: Regenerate.\n+\t* config.h: Add HAVE_ALLOCA_H.\n+\n 2001-11-16  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* regex.c: Check defined(__STDC__) || defined(ALMOST_STDC) ||"}, {"sha": "c1434f1c1dde53cbe1993578acac9e00af571324", "filename": "libiberty/config.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3bb7df00b64b111504278db96e6e1a8486fe8cf/libiberty%2Fconfig.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3bb7df00b64b111504278db96e6e1a8486fe8cf/libiberty%2Fconfig.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fconfig.in?ref=c3bb7df00b64b111504278db96e6e1a8486fe8cf", "patch": "@@ -183,6 +183,9 @@\n /* Define if you have the <fcntl.h> header file.  */\n #undef HAVE_FCNTL_H\n \n+/* Define if you have the <alloca.h> header file.  */\n+#undef HAVE_ALLOCA_H\n+\n /* Define if you have the <limits.h> header file.  */\n #undef HAVE_LIMITS_H\n "}, {"sha": "8800349cd66b4915f73cec89547b6a3bb3706368", "filename": "libiberty/configure", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3bb7df00b64b111504278db96e6e1a8486fe8cf/libiberty%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3bb7df00b64b111504278db96e6e1a8486fe8cf/libiberty%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fconfigure?ref=c3bb7df00b64b111504278db96e6e1a8486fe8cf", "patch": "@@ -1275,7 +1275,7 @@ else\n fi\n echo \"$ac_t\"\"$CPP\" 1>&6\n \n-for ac_hdr in sys/file.h sys/param.h limits.h stdlib.h string.h unistd.h strings.h sys/time.h time.h sys/resource.h sys/stat.h sys/mman.h fcntl.h\n+for ac_hdr in sys/file.h sys/param.h limits.h stdlib.h string.h unistd.h strings.h sys/time.h time.h sys/resource.h sys/stat.h sys/mman.h fcntl.h alloca.h\n do\n ac_safe=`echo \"$ac_hdr\" | sed 'y%./+-%__p_%'`\n echo $ac_n \"checking for $ac_hdr\"\"... $ac_c\" 1>&6"}, {"sha": "d34f8369bf4926a78501034837a7497df2832a8c", "filename": "libiberty/configure.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3bb7df00b64b111504278db96e6e1a8486fe8cf/libiberty%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3bb7df00b64b111504278db96e6e1a8486fe8cf/libiberty%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fconfigure.in?ref=c3bb7df00b64b111504278db96e6e1a8486fe8cf", "patch": "@@ -120,7 +120,7 @@ AC_SUBST_FILE(host_makefile_frag)\n # It's OK to check for header files.  Although the compiler may not be\n # able to link anything, it had better be able to at least compile\n # something.\n-AC_CHECK_HEADERS(sys/file.h sys/param.h limits.h stdlib.h string.h unistd.h strings.h sys/time.h time.h sys/resource.h sys/stat.h sys/mman.h fcntl.h)\n+AC_CHECK_HEADERS(sys/file.h sys/param.h limits.h stdlib.h string.h unistd.h strings.h sys/time.h time.h sys/resource.h sys/stat.h sys/mman.h fcntl.h alloca.h)\n AC_HEADER_SYS_WAIT\n AC_HEADER_TIME\n "}]}