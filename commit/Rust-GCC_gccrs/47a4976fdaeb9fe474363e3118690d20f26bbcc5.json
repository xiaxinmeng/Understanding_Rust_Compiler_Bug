{"sha": "47a4976fdaeb9fe474363e3118690d20f26bbcc5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDdhNDk3NmZkYWViOWZlNDc0MzYzZTMxMTg2OTBkMjBmMjZiYmNjNQ==", "commit": {"author": {"name": "John David Anglin", "email": "dave@hiauly1.hia.nrc.ca", "date": "2002-07-18T18:18:26Z"}, "committer": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2002-07-18T18:18:26Z"}, "message": "pa-linux.h (DWARF2_UNWIND_INFO): Delete define.\n\n\t* pa-linux.h (DWARF2_UNWIND_INFO): Delete define.\n\t* pa.h (EH_RETURN_DATA_REGNO): Revise TARGET_64BIT and correct\n\tnumbering.\n\nFrom-SVN: r55563", "tree": {"sha": "ef3352256b14b2e163d8cd49ce6017f9b6acf502", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ef3352256b14b2e163d8cd49ce6017f9b6acf502"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/47a4976fdaeb9fe474363e3118690d20f26bbcc5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47a4976fdaeb9fe474363e3118690d20f26bbcc5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/47a4976fdaeb9fe474363e3118690d20f26bbcc5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47a4976fdaeb9fe474363e3118690d20f26bbcc5/comments", "author": null, "committer": null, "parents": [{"sha": "f3a4e54eb00ac27db04ff04061543c28dc843525", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3a4e54eb00ac27db04ff04061543c28dc843525", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f3a4e54eb00ac27db04ff04061543c28dc843525"}], "stats": {"total": 12, "additions": 7, "deletions": 5}, "files": [{"sha": "06fce4ed1e08bc8591316dbbc192cfaa62de247a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47a4976fdaeb9fe474363e3118690d20f26bbcc5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47a4976fdaeb9fe474363e3118690d20f26bbcc5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=47a4976fdaeb9fe474363e3118690d20f26bbcc5", "patch": "@@ -1,3 +1,9 @@\n+2002-07-18  John David Anglin  <dave@hiauly1.hia.nrc.ca>\n+\n+\t* pa-linux.h (DWARF2_UNWIND_INFO): Delete define.\n+\t* pa.h (EH_RETURN_DATA_REGNO): Revise TARGET_64BIT and correct\n+\tnumbering.\n+\n 2002-07-18  John David Anglin  <dave@hiauly1.hia.nrc.ca>\n \n \t* pa.c (output_deferred_plabels): Remove unused millicode enum mulU."}, {"sha": "96952d2ea5c7bd9a3292889bc79134d96dc36b98", "filename": "gcc/config/pa/pa-linux.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47a4976fdaeb9fe474363e3118690d20f26bbcc5/gcc%2Fconfig%2Fpa%2Fpa-linux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47a4976fdaeb9fe474363e3118690d20f26bbcc5/gcc%2Fconfig%2Fpa%2Fpa-linux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa-linux.h?ref=47a4976fdaeb9fe474363e3118690d20f26bbcc5", "patch": "@@ -22,7 +22,6 @@ Boston, MA 02111-1307, USA.  */\n #undef PREFERRED_DEBUGGING_TYPE\n #define PREFERRED_DEBUGGING_TYPE DWARF2_DEBUG\n #define DWARF2_ASM_LINE_DEBUG_INFO 1\n-#define DWARF2_UNWIND_INFO 1\n \n /* A C expression whose value is RTL representing the location of the\n    incoming return address at the beginning of any function, before the"}, {"sha": "711d7491540c54e4d3b51c24d458fbedbe4d896a", "filename": "gcc/config/pa/pa.h", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47a4976fdaeb9fe474363e3118690d20f26bbcc5/gcc%2Fconfig%2Fpa%2Fpa.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47a4976fdaeb9fe474363e3118690d20f26bbcc5/gcc%2Fconfig%2Fpa%2Fpa.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.h?ref=47a4976fdaeb9fe474363e3118690d20f26bbcc5", "patch": "@@ -515,11 +515,8 @@ extern struct rtx_def *hppa_pic_save_rtx PARAMS ((void));\n #define STRUCT_VALUE_REGNUM 28\n \n /* Describe how we implement __builtin_eh_return.  */\n-/* FIXME: What's a good choice for the EH data registers on TARGET_64BIT?  */\n #define EH_RETURN_DATA_REGNO(N)\t\\\n-  (TARGET_64BIT\t\t\t\t\t\t\t\t\\\n-   ? ((N) < 4 ? (N) + 4 : INVALID_REGNUM)\t\t\t\t\\\n-   : ((N) < 3 ? (N) + 20 : (N) == 4 ? 31 : INVALID_REGNUM))\n+  ((N) < 3 ? (N) + 20 : (N) == 3 ? 31 : INVALID_REGNUM)\n #define EH_RETURN_STACKADJ_RTX\tgen_rtx_REG (Pmode, 29)\n #define EH_RETURN_HANDLER_RTX \\\n   gen_rtx_MEM (word_mode,\t\t\t\t\t\t\\"}]}