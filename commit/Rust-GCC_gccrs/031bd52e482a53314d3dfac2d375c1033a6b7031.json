{"sha": "031bd52e482a53314d3dfac2d375c1033a6b7031", "node_id": "C_kwDOANBUbNoAKDAzMWJkNTJlNDgyYTUzMzE0ZDNkZmFjMmQzNzVjMTAzM2E2YjcwMzE", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-04-15T00:16:48Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-04-15T00:16:48Z"}, "message": "Daily bump.", "tree": {"sha": "ddfa0b43c6babb163178a1dc7fae0237ce40c7cb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ddfa0b43c6babb163178a1dc7fae0237ce40c7cb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/031bd52e482a53314d3dfac2d375c1033a6b7031", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/031bd52e482a53314d3dfac2d375c1033a6b7031", "html_url": "https://github.com/Rust-GCC/gccrs/commit/031bd52e482a53314d3dfac2d375c1033a6b7031", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/031bd52e482a53314d3dfac2d375c1033a6b7031/comments", "author": null, "committer": null, "parents": [{"sha": "f5cd166ffd3c9b2bdd6b2e69680dd6b59cbec1c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5cd166ffd3c9b2bdd6b2e69680dd6b59cbec1c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f5cd166ffd3c9b2bdd6b2e69680dd6b59cbec1c5"}], "stats": {"total": 217, "additions": 216, "deletions": 1}, "files": [{"sha": "14e58856ac050baa4aeae1cbdee275e40f82f04f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/031bd52e482a53314d3dfac2d375c1033a6b7031/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/031bd52e482a53314d3dfac2d375c1033a6b7031/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=031bd52e482a53314d3dfac2d375c1033a6b7031", "patch": "@@ -1,3 +1,51 @@\n+2022-04-14  Indu Bhagat  <indu.bhagat@oracle.com>\n+\n+\tPR debug/105089\n+\t* ctfc.cc (ctf_dvd_ignore_insert): New function.\n+\t(ctf_dvd_ignore_lookup): Likewise.\n+\t(ctf_add_variable): Keep track of non-defining decl DIEs.\n+\t(new_ctf_container): Initialize the new hash-table.\n+\t(ctfc_delete_container): Empty hash-table.\n+\t* ctfc.h (struct ctf_container): Add new hash-table.\n+\t(ctf_dvd_ignore_lookup): New declaration.\n+\t(ctf_add_variable): Add additional argument.\n+\t* ctfout.cc (ctf_dvd_preprocess_cb): Skip adding CTF variable\n+\trecord for non-defining decl for which a defining decl exists\n+\tin the same TU.\n+\t(ctf_preprocess): Defer updating the number of global objts\n+\tuntil here.\n+\t(output_ctf_header): Use ctfc_vars_list_count as some CTF\n+\tvariables may not make it to the final output.\n+\t(output_ctf_vars): Likewise.\n+\t* dwarf2ctf.cc (gen_ctf_variable): Skip generating CTF variable\n+\tif this is known to be a non-defining decl DIE.\n+\n+2022-04-14  Indu Bhagat  <indu.bhagat@oracle.com>\n+\n+\t* ctfc.h (struct ctf_container): Introduce a new member.\n+\t* ctfout.cc (ctf_list_add_ctf_vars): Use it instead of static\n+\tvariable.\n+\n+2022-04-14  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/105247\n+\t* simplify-rtx.cc (simplify_const_binary_operation): For shifts\n+\tor rotates by VOIDmode constant integer shift count use word_mode\n+\tfor the operand if int_mode is narrower than word.\n+\n+2022-04-14  Robin Dapp  <rdapp@linux.ibm.com>\n+\n+\t* config/s390/s390.cc (s390_get_sched_attrmask): Add z16.\n+\t(s390_get_unit_mask): Likewise.\n+\t(s390_is_fpd): Likewise.\n+\t(s390_is_fxd): Likewise.\n+\t* config/s390/s390.h (s390_tune_attr): Set max tune level to z16.\n+\t* config/s390/s390.md (z900,z990,z9_109,z9_ec,z10,z196,zEC12,z13,z14,z15):\n+\tAdd z16.\n+\t(z900,z990,z9_109,z9_ec,z10,z196,zEC12,z13,z14,z15,z16):\n+\tLikewise.\n+\t* config/s390/3931.md: New file.\n+\n 2022-04-13  Richard Sandiford  <richard.sandiford@arm.com>\n \n \tPR tree-optimization/105254"}, {"sha": "28f4959c39b87e50d149dd7d5999f766c1015937", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/031bd52e482a53314d3dfac2d375c1033a6b7031/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/031bd52e482a53314d3dfac2d375c1033a6b7031/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=031bd52e482a53314d3dfac2d375c1033a6b7031", "patch": "@@ -1 +1 @@\n-20220414\n+20220415"}, {"sha": "7338ce90eb65f5fd1a7e9d1be22d2123259d069b", "filename": "gcc/analyzer/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/031bd52e482a53314d3dfac2d375c1033a6b7031/gcc%2Fanalyzer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/031bd52e482a53314d3dfac2d375c1033a6b7031/gcc%2Fanalyzer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2FChangeLog?ref=031bd52e482a53314d3dfac2d375c1033a6b7031", "patch": "@@ -1,3 +1,18 @@\n+2022-04-14  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/105264\n+\t* region-model-reachability.cc (reachable_regions::handle_parm):\n+\tUse maybe_get_deref_base_region rather than just region_svalue, to\n+\thandle pointer arithmetic also.\n+\t* svalue.cc (svalue::maybe_get_deref_base_region): New.\n+\t* svalue.h (svalue::maybe_get_deref_base_region): New decl.\n+\n+2022-04-14  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/105252\n+\t* svalue.cc (cmp_cst): When comparing VECTOR_CSTs, compare the\n+\ttypes of the encoded elements before calling cmp_cst on them.\n+\n 2022-04-09  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR analyzer/103892"}, {"sha": "4377c887b5a65a9192a3d019b0749e8a57d954ab", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/031bd52e482a53314d3dfac2d375c1033a6b7031/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/031bd52e482a53314d3dfac2d375c1033a6b7031/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=031bd52e482a53314d3dfac2d375c1033a6b7031", "patch": "@@ -1,3 +1,41 @@\n+2022-04-14  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/104646\n+\t* constexpr.cc (maybe_save_constexpr_fundef): Don't do extra\n+\tchecks for defaulted ctors.\n+\n+2022-04-14  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/82980\n+\t* lambda.cc (type_deducible_expression_p): New.\n+\t(lambda_capture_field_type): Check it.\n+\n+2022-04-14  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/65211\n+\t* pt.cc (tsubst_decl) [TYPE_DECL]: Copy TYPE_ALIGN.\n+\n+2022-04-14  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/97219\n+\t* name-lookup.cc (dependent_local_decl_p): New.\n+\t* cp-tree.h (dependent_local_decl_p): Declare.\n+\t* semantics.cc (finish_call_expr): Use it.\n+\t* pt.cc (tsubst_arg_types): Also substitute default args\n+\tfor local externs.\n+\n+2022-04-14  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/101698\n+\t* pt.cc (tsubst_baselink): Also check dependent optype.\n+\n+2022-04-14  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/101442\n+\t* decl.cc (cp_finish_decl): Don't pass decl to push_cleanup.\n+\t* init.cc (perform_member_init): Likewise.\n+\t* semantics.cc (push_cleanup): Adjust comment.\n+\n 2022-04-13  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/105245"}, {"sha": "faab3a78c5e25fb53237cd5e7dc397499976fa19", "filename": "gcc/jit/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/031bd52e482a53314d3dfac2d375c1033a6b7031/gcc%2Fjit%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/031bd52e482a53314d3dfac2d375c1033a6b7031/gcc%2Fjit%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjit%2FChangeLog?ref=031bd52e482a53314d3dfac2d375c1033a6b7031", "patch": "@@ -1,3 +1,8 @@\n+2022-04-14  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\t* jit-playback.cc (new_bitcast): Cast values returned by tree_to_uhwi\n+\tto 'long' to match the print format.\n+\n 2022-04-12  Antoni Boucher  <bouanto@zoho.com>\n \n \tPR jit/104293"}, {"sha": "0bc2a33c22a49686a376bbf26183469847e26b74", "filename": "gcc/po/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/031bd52e482a53314d3dfac2d375c1033a6b7031/gcc%2Fpo%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/031bd52e482a53314d3dfac2d375c1033a6b7031/gcc%2Fpo%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpo%2FChangeLog?ref=031bd52e482a53314d3dfac2d375c1033a6b7031", "patch": "@@ -1,3 +1,7 @@\n+2022-04-14  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* de.po, fr.po, sv.po: Update.\n+\n 2022-04-05  Joseph Myers  <joseph@codesourcery.com>\n \n \t* be.po, da.po, de.po, el.po, es.po, fi.po, fr.po, hr.po, id.po,"}, {"sha": "8e77ed1f5cf2f316b913bf2297119a93c23998ab", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 65, "deletions": 0, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/031bd52e482a53314d3dfac2d375c1033a6b7031/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/031bd52e482a53314d3dfac2d375c1033a6b7031/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=031bd52e482a53314d3dfac2d375c1033a6b7031", "patch": "@@ -1,3 +1,68 @@\n+2022-04-14  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/105264\n+\t* gcc.dg/analyzer/torture/symbolic-10.c: New test.\n+\n+2022-04-14  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/104646\n+\t* g++.dg/cpp0x/constexpr-fno-elide-ctors1.C: New test.\n+\n+2022-04-14  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/82980\n+\t* g++.dg/cpp0x/lambda/lambda-current-inst1.C: New test.\n+\n+2022-04-14  Indu Bhagat  <indu.bhagat@oracle.com>\n+\n+\tPR debug/105089\n+\t* gcc.dg/debug/ctf/ctf-array-2.c: Refactor testcase.  Move some\n+\tchecks ...\n+\t* gcc.dg/debug/ctf/ctf-array-5.c: ... to here.\n+\t* gcc.dg/debug/ctf/ctf-variables-3.c: ... and here.  Add\n+\tadditional checks for one CTF variable and one CTF object info\n+\trecord.\n+\n+2022-04-14  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/105252\n+\t* gcc.dg/analyzer/pr105252.c: New test.\n+\n+2022-04-14  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/105247\n+\t* gcc.c-torture/compile/pr105247.c: New test.\n+\n+2022-04-14  Robin Dapp  <rdapp@linux.ibm.com>\n+\n+\t* gcc.target/s390/pr80725.c: Add -Wno-int-to-pointer-cast.\n+\n+2022-04-14  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/65211\n+\t* g++.target/i386/vec-tmpl1.C: New test.\n+\n+2022-04-14  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/97219\n+\t* g++.dg/cpp1y/lambda-generic-local-fn1.C: New test.\n+\n+2022-04-14  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/101698\n+\t* g++.dg/template/conv19.C: New test.\n+\n+2022-04-14  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/101442\n+\t* g++.dg/cpp0x/initlist-nrv1.C: New test.\n+\n+2022-04-14  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/105265\n+\tPR c++/100838\n+\t* g++.dg/cpp0x/initlist-new6.C: New test.\n+\n 2022-04-13  Richard Sandiford  <richard.sandiford@arm.com>\n \n \tPR tree-optimization/105254"}, {"sha": "c4968040d2622363d6f8a48b92acc975ad93a9f8", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/031bd52e482a53314d3dfac2d375c1033a6b7031/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/031bd52e482a53314d3dfac2d375c1033a6b7031/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=031bd52e482a53314d3dfac2d375c1033a6b7031", "patch": "@@ -1,3 +1,43 @@\n+2022-04-14  Palmer Dabbelt  <palmer@rivosinc.com>\n+\n+\t* acinclude.m4 (GLIBCXX_ENABLE_LOCK_POLICY): Force auto to mutex\n+\tfor RISC-V.\n+\t* configure: Regenerate.\n+\n+2022-04-14  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* doc/xml/manual/intro.xml: Fix comment.\n+\n+2022-04-14  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/precompiled/stdc++.h: Include <stacktrace> and\n+\t<stdatomic.h> for C++23.\n+\n+2022-04-14  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/105269\n+\t* include/bits/stl_vector.h (__cpp_lib_constexpr_vector):\n+\tDefine.\n+\t* include/c_compatibility/stdatomic.h (__cpp_lib_stdatomic_h):\n+\tDefine.\n+\t* include/std/optional (__cpp_lib_optional): Define new value\n+\tfor C++23.\n+\t(__cpp_lib_monadic_optional): Remove.\n+\t* include/std/version (__cpp_lib_constexpr_vector): Define.\n+\t(__cpp_lib_stdatomic_h): Define.\n+\t(__cpp_lib_optional): Define new value for C++23.\n+\t(__cpp_lib_monadic_optional): Remove.\n+\t* testsuite/20_util/optional/monadic/and_then.cc: Adjust.\n+\t* testsuite/20_util/optional/requirements.cc: Adjust for C++23.\n+\t* testsuite/20_util/optional/version.cc: Likewise.\n+\t* testsuite/23_containers/vector/cons/constexpr.cc: Check\n+\tfeature test macro.\n+\t* testsuite/29_atomics/headers/stdatomic.h/c_compat.cc:\n+\tLikewise.\n+\t* testsuite/20_util/optional/monadic/version.cc: Removed.\n+\t* testsuite/23_containers/vector/requirements/version.cc: New test.\n+\t* testsuite/29_atomics/headers/stdatomic.h/version.cc: New test.\n+\n 2022-04-12  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* acinclude.m4 (GLIBCXX_ENABLE_BACKTRACE): Check for mmap."}]}