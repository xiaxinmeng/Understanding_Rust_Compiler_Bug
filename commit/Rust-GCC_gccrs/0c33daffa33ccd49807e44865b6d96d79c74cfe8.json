{"sha": "0c33daffa33ccd49807e44865b6d96d79c74cfe8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGMzM2RhZmZhMzNjY2Q0OTgwN2U0NDg2NWI2ZDk2ZDc5Yzc0Y2ZlOA==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2003-03-11T23:07:45Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2003-03-11T23:07:45Z"}, "message": "re PR c++/9924 (Multiple using statements for builtin functions not allowed)\n\n\tPR c++/9924\n\t* g++.dg/overload/builtin2.C: New test.\n\n2003-03-11  Mark Mitchell  <mark@codesourcery.com>\n\n\tPR c++/9924\n\t* decl2.c (do_nonmember_using_decl): Ignore anticipated builtins.\n\nFrom-SVN: r64197", "tree": {"sha": "bfe14107f93101ea73e570388f5c16bb7b9e69f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bfe14107f93101ea73e570388f5c16bb7b9e69f1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0c33daffa33ccd49807e44865b6d96d79c74cfe8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c33daffa33ccd49807e44865b6d96d79c74cfe8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0c33daffa33ccd49807e44865b6d96d79c74cfe8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c33daffa33ccd49807e44865b6d96d79c74cfe8/comments", "author": null, "committer": null, "parents": [{"sha": "cf237c199cde6ed297fcf41bc6ea2a6a9723387a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf237c199cde6ed297fcf41bc6ea2a6a9723387a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf237c199cde6ed297fcf41bc6ea2a6a9723387a"}], "stats": {"total": 48, "additions": 36, "deletions": 12}, "files": [{"sha": "9dcd1c7c2cd2ee4bc9c3d5c7ceab048610c943cd", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c33daffa33ccd49807e44865b6d96d79c74cfe8/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c33daffa33ccd49807e44865b6d96d79c74cfe8/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=0c33daffa33ccd49807e44865b6d96d79c74cfe8", "patch": "@@ -1,3 +1,8 @@\n+2003-03-11  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tPR c++/9924\n+\t* decl2.c (do_nonmember_using_decl): Ignore anticipated builtins.\n+\n 2003-03-11  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/9820"}, {"sha": "b96f65f2034e9fa451fdd4197484ebed01d63e81", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 18, "deletions": 12, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c33daffa33ccd49807e44865b6d96d79c74cfe8/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c33daffa33ccd49807e44865b6d96d79c74cfe8/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=0c33daffa33ccd49807e44865b6d96d79c74cfe8", "patch": "@@ -4251,21 +4251,27 @@ do_nonmember_using_decl (tree scope, tree name, tree oldval, tree oldtype,\n \t      else if (compparms (TYPE_ARG_TYPES (TREE_TYPE (new_fn)),\n \t\t  \t\t  TYPE_ARG_TYPES (TREE_TYPE (old_fn))))\n \t\t{\n-                  /* If this using declaration introduces a function\n-                     recognized as a built-in, no longer mark it as\n-                     anticipated in this scope.  */\n-                  if (DECL_ANTICIPATED (old_fn))\n-                    {\n-                      DECL_ANTICIPATED (old_fn) = 0;\n-                      break;\n-                    }\n-\n \t          /* There was already a non-using declaration in\n \t\t     this scope with the same parameter types. If both\n \t             are the same extern \"C\" functions, that's ok.  */\n-                  if (!decls_match (new_fn, old_fn))\n-    \t            error (\"`%D' is already declared in this scope\", name);\n-\t\t  break;\n+                  if (decls_match (new_fn, old_fn))\n+\t\t    {\n+\t\t      /* If the OLD_FN was a builtin, there is now a\n+\t\t\t real declaration.  */\n+\t\t      if (DECL_ANTICIPATED (old_fn))\n+\t\t\tDECL_ANTICIPATED (old_fn) = 0;\n+\t\t      break;\n+\t\t    }\n+\t\t  else if (!DECL_ANTICIPATED (old_fn))\n+\t\t    {\n+\t\t      /* If the OLD_FN was really declared, the\n+\t\t\t declarations don't match.  */\n+\t\t      error (\"`%D' is already declared in this scope\", name);\n+\t\t      break;\n+\t\t    }\n+\n+\t\t  /* If the OLD_FN was not really there, just ignore\n+\t\t     it and keep going.  */\n \t\t}\n \t    }\n "}, {"sha": "8cd81afe61f0181baf3e4609ac5c2c4babbc84da", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c33daffa33ccd49807e44865b6d96d79c74cfe8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c33daffa33ccd49807e44865b6d96d79c74cfe8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0c33daffa33ccd49807e44865b6d96d79c74cfe8", "patch": "@@ -1,3 +1,8 @@\n+2003-03-11  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tPR c++/9924\n+\t* g++.dg/overload/builtin2.C: New test.\n+\n 2003-03-11  Steven Bosscher  <s.bosscher@student.tudelft.nl>\n \n \t* gcc.dg/return-type-3.c: New test."}, {"sha": "4f9f52dda1afb60d4a1a5ccd8e67cb8e8381f92b", "filename": "gcc/testsuite/g++.dg/overload/builtin2.C", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c33daffa33ccd49807e44865b6d96d79c74cfe8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Fbuiltin2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c33daffa33ccd49807e44865b6d96d79c74cfe8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Fbuiltin2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Fbuiltin2.C?ref=0c33daffa33ccd49807e44865b6d96d79c74cfe8", "patch": "@@ -0,0 +1,8 @@\n+namespace __gnu_cxx {\n+    void llabs(long long x);\n+}\n+\n+namespace std {\n+    using __gnu_cxx::llabs;\n+    using __gnu_cxx::llabs;\n+}"}]}