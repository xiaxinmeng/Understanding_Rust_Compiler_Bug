{"sha": "80d4224f5b0b90b4f3da875043512003342d6f01", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODBkNDIyNGY1YjBiOTBiNGYzZGE4NzUwNDM1MTIwMDMzNDJkNmYwMQ==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2006-02-15T09:37:43Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2006-02-15T09:37:43Z"}, "message": "exp_attr.adb (Expand_N_Attribute_Reference, [...]): If attribute Mechanism_Code is applied to renamed subprogram...\n\n2006-02-13  Robert Dewar  <dewar@adacore.com>\n\n\t* exp_attr.adb (Expand_N_Attribute_Reference, case Mechanism_Code): If\n\tattribute Mechanism_Code is applied to renamed subprogram, modify\n\tprefix to point to base subprogram.\n\tMax/Min attributes now violate Restriction No_Implicit_Conditionals\n\n\t* sinfo.ads: Document that Mechanism_Code cannot be applied to\n\trenamed subprograms so that the front-end must replace the prefix\n\tappropriately.\n\nFrom-SVN: r111058", "tree": {"sha": "9d0234798b82bda730e6be3efd6ad0682284e35d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9d0234798b82bda730e6be3efd6ad0682284e35d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/80d4224f5b0b90b4f3da875043512003342d6f01", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80d4224f5b0b90b4f3da875043512003342d6f01", "html_url": "https://github.com/Rust-GCC/gccrs/commit/80d4224f5b0b90b4f3da875043512003342d6f01", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80d4224f5b0b90b4f3da875043512003342d6f01/comments", "author": null, "committer": null, "parents": [{"sha": "d8f7b976d7f6ba52d1b71770c6d03ff408294b18", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8f7b976d7f6ba52d1b71770c6d03ff408294b18", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d8f7b976d7f6ba52d1b71770c6d03ff408294b18"}], "stats": {"total": 52, "additions": 36, "deletions": 16}, "files": [{"sha": "3f23d7cb66b9981620a104e4c7714e3fa59b1d0a", "filename": "gcc/ada/exp_attr.adb", "status": "modified", "additions": 31, "deletions": 15, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80d4224f5b0b90b4f3da875043512003342d6f01/gcc%2Fada%2Fexp_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80d4224f5b0b90b4f3da875043512003342d6f01/gcc%2Fada%2Fexp_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_attr.adb?ref=80d4224f5b0b90b4f3da875043512003342d6f01", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1977,7 +1977,7 @@ package body Exp_Attr is\n                --  values.\n \n                if Is_Unchecked_Union (Base_Type (U_Type))\n-                 and then not Present (Discriminant_Constraint (U_Type))\n+                 and then No (Discriminant_Constraint (U_Type))\n                then\n                   Insert_Action (N,\n                     Make_Raise_Program_Error (Loc,\n@@ -2382,6 +2382,20 @@ package body Exp_Attr is\n          Analyze_And_Resolve (N, Typ);\n       end Mantissa;\n \n+      --------------------\n+      -- Mechanism_Code --\n+      --------------------\n+\n+      when Attribute_Mechanism_Code =>\n+\n+         --  We must replace the prefix in the renamed case\n+\n+         if Is_Entity_Name (Pref)\n+           and then Present (Alias (Entity (Pref)))\n+         then\n+            Set_Renamed_Subprogram (Pref, Alias (Entity (Pref)));\n+         end if;\n+\n       ---------\n       -- Mod --\n       ---------\n@@ -2659,7 +2673,7 @@ package body Exp_Attr is\n                --  values.\n \n                if Is_Unchecked_Union (Base_Type (U_Type))\n-                 and then not Present (Discriminant_Constraint (U_Type))\n+                 and then No (Discriminant_Constraint (U_Type))\n                then\n                   Insert_Action (N,\n                     Make_Raise_Program_Error (Loc,\n@@ -2855,7 +2869,6 @@ package body Exp_Attr is\n          elsif not Overflow_Checks_Suppressed (Ptyp) then\n             Expand_Pred_Succ (N);\n          end if;\n-\n       end Pred;\n \n       ------------------\n@@ -2915,7 +2928,6 @@ package body Exp_Attr is\n          else\n             Apply_Universal_Integer_Attribute_Checks (N);\n          end if;\n-\n       end Range_Length;\n \n       ----------\n@@ -3424,7 +3436,7 @@ package body Exp_Attr is\n          --  Typ (Adjust_Storage_Size (taskV!(name)._Size))\n \n          else\n-            if not Present (Storage_Size_Variable (Ptyp)) then\n+            if No (Storage_Size_Variable (Ptyp)) then\n                Rewrite (N,\n                  Convert_To (Typ,\n                    Make_Function_Call (Loc,\n@@ -4468,22 +4480,26 @@ package body Exp_Attr is\n       when Attribute_Component_Size =>\n          null;\n \n-      --  The following attributes are handled by Gigi (except that static\n-      --  cases have already been evaluated by the semantics, but in any case\n-      --  Gigi should not count on that).\n+      --  The following attributes are handled by the back end (except that\n+      --  static cases have already been evaluated during semantic processing,\n+      --  but in any case the back end should not count on this). The one bit\n+      --  of special processing required is that these attributes typically\n+      --  generate conditionals in the code, so we need to check the relevant\n+      --  restriction.\n+\n+      when Attribute_Max                          |\n+           Attribute_Min                          =>\n+         Check_Restriction (No_Implicit_Conditionals, N);\n \n-      --  In addition Gigi handles the non-floating-point cases of Pred and\n-      --  Succ (including the fixed-point cases, which can just be treated as\n-      --  integer increment/decrement operations)\n+      --  The following attributes are handled by the back end (except that\n+      --  static cases have already been evaluated during semantic processing,\n+      --  but in any case the back end should not count on this).\n \n       --  Gigi also handles the non-class-wide cases of Size\n \n       when Attribute_Bit_Order                    |\n            Attribute_Code_Address                 |\n            Attribute_Definite                     |\n-           Attribute_Max                          |\n-           Attribute_Mechanism_Code               |\n-           Attribute_Min                          |\n            Attribute_Null_Parameter               |\n            Attribute_Passed_By_Reference          |\n            Attribute_Pool_Address                 =>"}, {"sha": "2712ed0c4fc6dff6ed8ead191c6223f913a15264", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80d4224f5b0b90b4f3da875043512003342d6f01/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80d4224f5b0b90b4f3da875043512003342d6f01/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=80d4224f5b0b90b4f3da875043512003342d6f01", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -2975,6 +2975,10 @@ package Sinfo is\n       --  a non-standard enumeration type or a nonzero/zero semantics\n       --  boolean type, so the value is simply the stored representation.\n \n+      --  Gigi requirement: For the Mechanism_Code attribute, if the prefix\n+      --  references a subprogram that is a renaming, then the front end must\n+      --  rewrite the attribute to refer directly to the renamed entity.\n+\n       --  Note: In generated code, the Address and Unrestricted_Access\n       --  attributes can be applied to any expression, and the meaning is\n       --  to create an object containing the value (the object is in the"}]}