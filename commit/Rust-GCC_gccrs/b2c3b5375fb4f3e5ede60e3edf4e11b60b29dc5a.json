{"sha": "b2c3b5375fb4f3e5ede60e3edf4e11b60b29dc5a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjJjM2I1Mzc1ZmI0ZjNlNWVkZTYwZTNlZGY0ZTExYjYwYjI5ZGM1YQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-04-22T10:50:34Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-04-22T10:50:34Z"}, "message": "[multiple changes]\n\n2013-04-22  Yannick Moy  <moy@adacore.com>\n\n\t* exp_prag.adb, sinfo.ads, sem_prag.ads: Minor correction of typos in\n\tcomments.\n\t* sem_ch6.adb (Expand_Contract_Cases): Add location to message.\n\n2013-04-22  Thomas Quinot  <quinot@adacore.com>\n\n\t* sem_prag.adb (Fix_Error): For a pragma rewritten from another\n\tpragma, fix up error message to include original pragma name.\n\t* par_sco.adb: Minor reformatting.\n\nFrom-SVN: r198133", "tree": {"sha": "cbc3904c0e6afea160d66f909866dfcf312f9376", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cbc3904c0e6afea160d66f909866dfcf312f9376"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b2c3b5375fb4f3e5ede60e3edf4e11b60b29dc5a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2c3b5375fb4f3e5ede60e3edf4e11b60b29dc5a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b2c3b5375fb4f3e5ede60e3edf4e11b60b29dc5a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2c3b5375fb4f3e5ede60e3edf4e11b60b29dc5a/comments", "author": null, "committer": null, "parents": [{"sha": "1a83142efc31b14e550359fb637d4ed390222351", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a83142efc31b14e550359fb637d4ed390222351", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a83142efc31b14e550359fb637d4ed390222351"}], "stats": {"total": 58, "additions": 39, "deletions": 19}, "files": [{"sha": "9a04f06bd63f14e9f7297735140c6cee0d14edc2", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2c3b5375fb4f3e5ede60e3edf4e11b60b29dc5a/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2c3b5375fb4f3e5ede60e3edf4e11b60b29dc5a/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=b2c3b5375fb4f3e5ede60e3edf4e11b60b29dc5a", "patch": "@@ -1,3 +1,15 @@\n+2013-04-22  Yannick Moy  <moy@adacore.com>\n+\n+\t* exp_prag.adb, sinfo.ads, sem_prag.ads: Minor correction of typos in\n+\tcomments.\n+\t* sem_ch6.adb (Expand_Contract_Cases): Add location to message.\n+\n+2013-04-22  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* sem_prag.adb (Fix_Error): For a pragma rewritten from another\n+\tpragma, fix up error message to include original pragma name.\n+\t* par_sco.adb: Minor reformatting.\n+\n 2013-04-22  Robert Dewar  <dewar@adacore.com>\n \n \t* sem_prag.adb, sem_util.adb, sem_util.ads, sem_res.adb, exp_ch6.adb,"}, {"sha": "4e41efeacc7d55ac19bc7c7f73cbeb4794a7e281", "filename": "gcc/ada/exp_prag.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2c3b5375fb4f3e5ede60e3edf4e11b60b29dc5a/gcc%2Fada%2Fexp_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2c3b5375fb4f3e5ede60e3edf4e11b60b29dc5a/gcc%2Fada%2Fexp_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_prag.adb?ref=b2c3b5375fb4f3e5ede60e3edf4e11b60b29dc5a", "patch": "@@ -1059,7 +1059,7 @@ package body Exp_Prag is\n          end if;\n       end Process_Variant;\n \n-   --  Start of processing for Expand_Pragma_Loop_Assertion\n+   --  Start of processing for Expand_Pragma_Loop_Variant\n \n    begin\n       --  Locate the enclosing loop for which this assertion applies. In the"}, {"sha": "f2804676552e0ba01f3b4455bf3c719a3c91a556", "filename": "gcc/ada/par_sco.adb", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2c3b5375fb4f3e5ede60e3edf4e11b60b29dc5a/gcc%2Fada%2Fpar_sco.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2c3b5375fb4f3e5ede60e3edf4e11b60b29dc5a/gcc%2Fada%2Fpar_sco.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar_sco.adb?ref=b2c3b5375fb4f3e5ede60e3edf4e11b60b29dc5a", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2009-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2009-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1455,11 +1455,11 @@ package body Par_SCO is\n                --  specification. The corresponding pragma will have the same\n                --  sloc.\n \n-               when Aspect_Pre               |\n-                    Aspect_Precondition      |\n-                    Aspect_Post              |\n-                    Aspect_Postcondition     |\n-                    Aspect_Invariant         =>\n+               when Aspect_Pre           |\n+                    Aspect_Precondition  |\n+                    Aspect_Post          |\n+                    Aspect_Postcondition |\n+                    Aspect_Invariant     =>\n \n                   C1 := 'a';\n "}, {"sha": "b061a5d10f59bf59a8fee575638586bce933f9b0", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2c3b5375fb4f3e5ede60e3edf4e11b60b29dc5a/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2c3b5375fb4f3e5ede60e3edf4e11b60b29dc5a/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=b2c3b5375fb4f3e5ede60e3edf4e11b60b29dc5a", "patch": "@@ -11352,7 +11352,7 @@ package body Sem_Ch6 is\n       --       end if;\n \n       --       if Count = 0 then\n-      --          raise Assertion_Error with \"contract cases incomplete\";\n+      --          raise Assertion_Error with \"xxx contract cases incomplete\";\n       --            <or>\n       --          Flag_N+1 := True;  --  when \"others\" present\n \n@@ -11712,11 +11712,12 @@ package body Sem_Ch6 is\n             CG_Stmts := New_List (Set (Others_Flag));\n \n          --  Generate:\n-         --    raise Assetion_Error with \"contract cases incomplete\";\n+         --    raise Assertion_Error with \"xxx contract cases incomplete\";\n \n          else\n             Start_String;\n-            Store_String_Chars (\"contract cases incomplete\");\n+            Store_String_Chars (Build_Location_String (Loc));\n+            Store_String_Chars (\" contract cases incomplete\");\n \n             CG_Stmts := New_List (\n               Make_Procedure_Call_Statement (Loc,"}, {"sha": "d12a2db2d718aeb8168d6b68661be58c681b5fb6", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2c3b5375fb4f3e5ede60e3edf4e11b60b29dc5a/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2c3b5375fb4f3e5ede60e3edf4e11b60b29dc5a/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=b2c3b5375fb4f3e5ede60e3edf4e11b60b29dc5a", "patch": "@@ -768,7 +768,7 @@ package body Sem_Prag is\n       --  Outputs error message for current pragma. The message contains a %\n       --  that will be replaced with the pragma name, and the flag is placed\n       --  on the pragma itself. Pragma_Exit is then raised. Note: this routine\n-      --  calls Fix_Error (see spec of that function for details).\n+      --  calls Fix_Error (see spec of that procedure for details).\n \n       procedure Error_Pragma_Arg (Msg : String; Arg : Node_Id);\n       pragma No_Return (Error_Pragma_Arg);\n@@ -780,7 +780,7 @@ package body Sem_Prag is\n       --  message is placed using Error_Msg_N, so the message may also contain\n       --  an & insertion character which will reference the given Arg value.\n       --  After placing the message, Pragma_Exit is raised. Note: this routine\n-      --  calls Fix_Error (see spec of that function for details).\n+      --  calls Fix_Error (see spec of that procedure for details).\n \n       procedure Error_Pragma_Arg (Msg1, Msg2 : String; Arg : Node_Id);\n       pragma No_Return (Error_Pragma_Arg);\n@@ -797,15 +797,15 @@ package body Sem_Prag is\n       --  the message may also contain an & insertion character which will\n       --  reference the identifier. After placing the message, Pragma_Exit\n       --  is raised. Note: this routine calls Fix_Error (see spec of that\n-      --  function for details).\n+      --  procedure for details).\n \n       procedure Error_Pragma_Ref (Msg : String; Ref : Entity_Id);\n       pragma No_Return (Error_Pragma_Ref);\n       --  Outputs error message for current pragma. The message may contain\n       --  a % that will be replaced with the pragma name. The parameter Ref\n       --  must be an entity whose name can be referenced by & and sloc by #.\n       --  After placing the message, Pragma_Exit is raised. Note: this routine\n-      --  calls Fix_Error (see spec of that function for details).\n+      --  calls Fix_Error (see spec of that procedure for details).\n \n       function Find_Lib_Unit_Name return Entity_Id;\n       --  Used for a library unit pragma to find the entity to which the\n@@ -831,6 +831,8 @@ package body Sem_Prag is\n       --  comes from an aspect, each such \"pragma\" substring is replaced with\n       --  the characters \"aspect\", and if Error_Msg_Name_1 is Name_Precondition\n       --  (resp Name_Postcondition) it is changed to Name_Pre (resp Name_Post).\n+      --  In addition, if the current pragma results from rewriting another\n+      --  pragma, Error_Msg_Name_1 is set to the original pragma name.\n \n       procedure Gather_Associations\n         (Names : Name_List;\n@@ -2862,6 +2864,8 @@ package body Sem_Prag is\n       ---------------\n \n       procedure Fix_Error (Msg : in out String) is\n+         Orig : constant Node_Id := Original_Node (N);\n+\n       begin\n          if From_Aspect_Specification (N) then\n             for J in Msg'First .. Msg'Last - 5 loop\n@@ -2875,6 +2879,9 @@ package body Sem_Prag is\n             elsif Error_Msg_Name_1 = Name_Postcondition then\n                Error_Msg_Name_1 := Name_Post;\n             end if;\n+\n+         elsif Orig /= N and then Nkind (Orig) = N_Pragma then\n+            Error_Msg_Name_1 := Pragma_Name (Orig);\n          end if;\n       end Fix_Error;\n "}, {"sha": "860005ec5ae4114f1a21981386af6d8a2ec46a19", "filename": "gcc/ada/sem_prag.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2c3b5375fb4f3e5ede60e3edf4e11b60b29dc5a/gcc%2Fada%2Fsem_prag.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2c3b5375fb4f3e5ede60e3edf4e11b60b29dc5a/gcc%2Fada%2Fsem_prag.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.ads?ref=b2c3b5375fb4f3e5ede60e3edf4e11b60b29dc5a", "patch": "@@ -55,7 +55,7 @@ package Sem_Prag is\n    --  in Sem \"Handling of Default and Per-Object Expressions...\").\n \n    function Check_Kind (Nam : Name_Id) return Name_Id;\n-   --  This function is used in connection with pragmas Assertion, Check,\n+   --  This function is used in connection with pragmas Assert, Check,\n    --  and assertion aspects and pragmas, to determine if Check pragmas\n    --  (or corresponding assertion aspects or pragmas) are currently active\n    --  as determined by the presence of -gnata on the command line (which"}, {"sha": "9afeeff18598ccb86201f1897da27bbb96f139e3", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2c3b5375fb4f3e5ede60e3edf4e11b60b29dc5a/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2c3b5375fb4f3e5ede60e3edf4e11b60b29dc5a/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=b2c3b5375fb4f3e5ede60e3edf4e11b60b29dc5a", "patch": "@@ -1325,10 +1325,10 @@ package Sinfo is\n    --    gives a policy for the aspect or pragma, then there are two cases. For\n    --    an assertion aspect or pragma (one of the assertion kinds allowed in\n    --    an Assertion_Policy pragma), then Is_Ignored is set if assertions are\n-   --    ignored because of the use of a -gnata switch. For any other aspects\n-   --    or pragmas, the flag is off. If this flag is set, the aspect/pragma\n-   --    is fully analyzed and checked for other syntactic/semantic errors,\n-   --    but it does not have any semantic effect.\n+   --    ignored because of the absence of a -gnata switch. For any other\n+   --    aspects or pragmas, the flag is off. If this flag is set, the\n+   --    aspect/pragma is fully analyzed and checked for other\n+   --    syntactic/semantic errors, but it does not have any semantic effect.\n \n    --  Is_In_Discriminant_Check (Flag11-Sem)\n    --    This flag is present in a selected component, and is used to indicate"}]}