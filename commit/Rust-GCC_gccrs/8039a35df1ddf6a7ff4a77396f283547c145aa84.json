{"sha": "8039a35df1ddf6a7ff4a77396f283547c145aa84", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODAzOWEzNWRmMWRkZjZhN2ZmNGE3NzM5NmYyODM1NDdjMTQ1YWE4NA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2015-02-18T13:08:58Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2015-02-18T13:08:58Z"}, "message": "re PR tree-optimization/65063 (gcc.dg/vect/vect-double-reduc-6.c FAILs with -O3 -fno-tree-loop-ivcanon -fno-tree-vectorize)\n\n2015-02-18  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/65063\n\t* tree-predcom.c (determine_unroll_factor): Return 1 if we\n\thave replaced looparound PHIs.\n\n\t* gcc.dg/pr65063.c: New testcase.\n\nFrom-SVN: r220788", "tree": {"sha": "3777ceaf738435971495c600f1c05fc340338271", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3777ceaf738435971495c600f1c05fc340338271"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8039a35df1ddf6a7ff4a77396f283547c145aa84", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8039a35df1ddf6a7ff4a77396f283547c145aa84", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8039a35df1ddf6a7ff4a77396f283547c145aa84", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8039a35df1ddf6a7ff4a77396f283547c145aa84/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0c28944fc0afabc39bf675723e2021e306973624", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c28944fc0afabc39bf675723e2021e306973624", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0c28944fc0afabc39bf675723e2021e306973624"}], "stats": {"total": 58, "additions": 57, "deletions": 1}, "files": [{"sha": "9523db0482702801f6f3360f501465b77778f8ba", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8039a35df1ddf6a7ff4a77396f283547c145aa84/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8039a35df1ddf6a7ff4a77396f283547c145aa84/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8039a35df1ddf6a7ff4a77396f283547c145aa84", "patch": "@@ -1,3 +1,9 @@\n+2015-02-18  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/65063\n+\t* tree-predcom.c (determine_unroll_factor): Return 1 if we\n+\thave replaced looparound PHIs.\n+\n 2015-02-18  Martin Liska  <mliska@suse.cz>\n \n \t* lto-streamer.c (lto_streamer_init): Encapsulate"}, {"sha": "5bbdfbbd9c03f1ed823790e1ce6d6ab021e93955", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8039a35df1ddf6a7ff4a77396f283547c145aa84/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8039a35df1ddf6a7ff4a77396f283547c145aa84/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8039a35df1ddf6a7ff4a77396f283547c145aa84", "patch": "@@ -1,3 +1,8 @@\n+2015-02-18  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/65063\n+\t* gcc.dg/pr65063.c: New testcase.\n+\n 2015-02-18  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/62217"}, {"sha": "bcbdbf098d8a607330e0632adc27280120a9a6b1", "filename": "gcc/testsuite/gcc.dg/pr65063.c", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8039a35df1ddf6a7ff4a77396f283547c145aa84/gcc%2Ftestsuite%2Fgcc.dg%2Fpr65063.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8039a35df1ddf6a7ff4a77396f283547c145aa84/gcc%2Ftestsuite%2Fgcc.dg%2Fpr65063.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr65063.c?ref=8039a35df1ddf6a7ff4a77396f283547c145aa84", "patch": "@@ -0,0 +1,33 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O3 -fno-tree-loop-ivcanon -fno-tree-vectorize\" } */\n+\n+static int in[8][4];\n+static int out[4];\n+static const int check_result[] = {0, 16, 256, 4096};\n+\n+static inline void foo ()\n+{\n+  int sum;\n+  int i, j, k;\n+  for (k = 0; k < 4; k++)\n+    {\n+      sum = 1;\n+      for (j = 0; j < 4; j++)\n+\tfor (i = 0; i < 4; i++)\n+\t  sum *= in[i + k][j];\n+      out[k] = sum;\n+    }\n+}\n+\n+int main ()\n+{\n+  int i, j, k;\n+  for (i = 0; i < 8; i++)\n+    for (j = 0; j < 4; j++)\n+      in[i][j] = (i + 2) / 3;\n+  foo ();\n+  for (k = 0; k < 4; k++)\n+    if (out[k] != check_result[k])\n+      __builtin_abort ();\n+  return 0;\n+}"}, {"sha": "03a38b4de842c74834227f566dde033f21d8ec1a", "filename": "gcc/tree-predcom.c", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8039a35df1ddf6a7ff4a77396f283547c145aa84/gcc%2Ftree-predcom.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8039a35df1ddf6a7ff4a77396f283547c145aa84/gcc%2Ftree-predcom.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-predcom.c?ref=8039a35df1ddf6a7ff4a77396f283547c145aa84", "patch": "@@ -1775,9 +1775,21 @@ determine_unroll_factor (vec<chain_p> chains)\n \n   FOR_EACH_VEC_ELT (chains, i, chain)\n     {\n-      if (chain->type == CT_INVARIANT || chain->combined)\n+      if (chain->type == CT_INVARIANT)\n \tcontinue;\n \n+      if (chain->combined)\n+\t{\n+\t  /* For combined chains, we can't handle unrolling if we replace\n+\t     looparound PHIs.  */\n+\t  dref a;\n+\t  unsigned j;\n+\t  for (j = 1; chain->refs.iterate (j, &a); j++)\n+\t    if (gimple_code (a->stmt) == GIMPLE_PHI)\n+\t      return 1;\n+\t  continue;\n+\t}\n+\n       /* The best unroll factor for this chain is equal to the number of\n \t temporary variables that we create for it.  */\n       af = chain->length;"}]}