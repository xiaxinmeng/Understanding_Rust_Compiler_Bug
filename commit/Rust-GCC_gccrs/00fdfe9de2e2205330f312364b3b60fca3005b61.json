{"sha": "00fdfe9de2e2205330f312364b3b60fca3005b61", "node_id": "C_kwDOANBUbNoAKDAwZmRmZTlkZTJlMjIwNTMzMGYzMTIzNjRiM2I2MGZjYTMwMDViNjE", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2023-01-06T12:24:18Z"}, "committer": {"name": "Marc Poulhi\u00e8s", "email": "poulhies@adacore.com", "date": "2023-01-16T14:44:55Z"}, "message": "ada: Fix premature finalization of temporaries for interface objects\n\nThis restores the proper finalization of temporaries for interface objects\nin the case where the initializing expression is not of an interface type.\n\nIt turns out that neither Is_Temporary_For_Interface_Object nor its previous\nincarnation are sufficient to catch all the various cases, so it is replaced\nby a small enhancement to Is_Aliased, which is more robust.\n\ngcc/ada/\n\n\t* exp_util.adb (Is_Temporary_For_Interface_Object): Delete.\n\t(Is_Finalizable_Transient.Is_Aliased): Deal with the specific case\n\tof temporaries generated for interface objects.", "tree": {"sha": "e184f11e8bb2c22477b6d8078b7c6faf314a4e83", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e184f11e8bb2c22477b6d8078b7c6faf314a4e83"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/00fdfe9de2e2205330f312364b3b60fca3005b61", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00fdfe9de2e2205330f312364b3b60fca3005b61", "html_url": "https://github.com/Rust-GCC/gccrs/commit/00fdfe9de2e2205330f312364b3b60fca3005b61", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00fdfe9de2e2205330f312364b3b60fca3005b61/comments", "author": null, "committer": {"login": "dkm", "id": 87603, "node_id": "MDQ6VXNlcjg3NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/87603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dkm", "html_url": "https://github.com/dkm", "followers_url": "https://api.github.com/users/dkm/followers", "following_url": "https://api.github.com/users/dkm/following{/other_user}", "gists_url": "https://api.github.com/users/dkm/gists{/gist_id}", "starred_url": "https://api.github.com/users/dkm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dkm/subscriptions", "organizations_url": "https://api.github.com/users/dkm/orgs", "repos_url": "https://api.github.com/users/dkm/repos", "events_url": "https://api.github.com/users/dkm/events{/privacy}", "received_events_url": "https://api.github.com/users/dkm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1f038e845bbdeae9dddf1810fb3e6c9ad1b79f13", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f038e845bbdeae9dddf1810fb3e6c9ad1b79f13", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f038e845bbdeae9dddf1810fb3e6c9ad1b79f13"}], "stats": {"total": 45, "additions": 17, "deletions": 28}, "files": [{"sha": "da5e84958cac378b11fa0583e36519c159cb437f", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 17, "deletions": 28, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00fdfe9de2e2205330f312364b3b60fca3005b61/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00fdfe9de2e2205330f312364b3b60fca3005b61/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=00fdfe9de2e2205330f312364b3b60fca3005b61", "patch": "@@ -168,11 +168,6 @@ package body Exp_Util is\n    --  Force evaluation of bounds of a slice, which may be given by a range\n    --  or by a subtype indication with or without a constraint.\n \n-   function Is_Temporary_For_Interface_Object\n-     (Obj_Id : Entity_Id) return Boolean;\n-   --  Determine whether Obj_Id is a temporary created for the handling of a\n-   --  (class-wide) interface object.\n-\n    function Is_Uninitialized_Aggregate\n      (Exp : Node_Id;\n       T   : Entity_Id) return Boolean;\n@@ -8397,6 +8392,23 @@ package body Exp_Util is\n                Search (Name (Ren_Decl));\n             end if;\n \n+            --  For renamings generated by Expand_N_Object_Declaration to deal\n+            --  with (class-wide) interface objects, there is an intermediate\n+            --  temporary of an anonymous access type used to hold the result\n+            --  of the displacement of the address of the renamed object.\n+\n+            if Present (Ren_Obj)\n+              and then Ekind (Ren_Obj) = E_Constant\n+              and then Is_Itype (Etype (Ren_Obj))\n+              and then Ekind (Etype (Ren_Obj)) = E_Anonymous_Access_Type\n+              and then\n+                Is_Class_Wide_Type (Directly_Designated_Type (Etype (Ren_Obj)))\n+              and then\n+                Is_Interface (Directly_Designated_Type (Etype (Ren_Obj)))\n+            then\n+               Search (Constant_Value (Ren_Obj));\n+            end if;\n+\n             return Ren_Obj;\n          end Find_Renamed_Object;\n \n@@ -8638,11 +8650,6 @@ package body Exp_Util is\n \n           and then not Initialized_By_Aliased_BIP_Func_Call (Obj_Id)\n \n-          --  Do not consider temporaries created for (class-wide) interface\n-          --  objects because they must exist as long as the object is around.\n-\n-          and then not Is_Temporary_For_Interface_Object (Obj_Id)\n-\n           --  Do not consider iterators because those are treated as normal\n           --  controlled objects and are processed by the usual finalization\n           --  machinery. This avoids the double finalization of an iterator.\n@@ -9150,24 +9157,6 @@ package body Exp_Util is\n         and then Has_Controlling_Result (Id);\n    end Is_Secondary_Stack_Thunk;\n \n-   ---------------------------------------\n-   -- Is_Temporary_For_Interface_Object --\n-   ---------------------------------------\n-\n-   function Is_Temporary_For_Interface_Object\n-     (Obj_Id : Entity_Id) return Boolean\n-   is\n-      Expr : constant Node_Id := Expression (Declaration_Node (Obj_Id));\n-\n-   begin\n-      --  This must be kept synchronized with Expand_N_Object_Declaration\n-\n-      return Is_Class_Wide_Type (Etype (Obj_Id))\n-        and then Present (Expr)\n-        and then Nkind (Expr) = N_Unchecked_Type_Conversion\n-        and then Is_RTE (Etype (Expression (Expr)), RE_Tag);\n-   end Is_Temporary_For_Interface_Object;\n-\n    --------------------------------\n    -- Is_Uninitialized_Aggregate --\n    --------------------------------"}]}