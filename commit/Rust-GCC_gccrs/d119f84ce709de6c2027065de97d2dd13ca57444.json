{"sha": "d119f84ce709de6c2027065de97d2dd13ca57444", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDExOWY4NGNlNzA5ZGU2YzIwMjcwNjVkZTk3ZDJkZDEzY2E1NzQ0NA==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "1999-04-17T19:15:29Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "1999-04-17T19:15:29Z"}, "message": "Donn Terry <donn@interix.com>\n\nDonn Terry  <donn@interix.com>\n        * i386.h (PRINT_OPERAND_PUNCT_VALID_P): Allow _.\n        * i386.c (print_operand): New %_ operator.\n        (load_pic_register): Proper number of leading _ in GOT literal.\n        * i386.md (prologue_get_pc_and_set_got): Likewise.\n        * i386/unix.h (ASM_OUTPUT_MI_THUNK): Likewise.\n\nFrom-SVN: r26525", "tree": {"sha": "e8d8c6451f48fe403cdbcb79a91294ec64ea832e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e8d8c6451f48fe403cdbcb79a91294ec64ea832e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d119f84ce709de6c2027065de97d2dd13ca57444", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d119f84ce709de6c2027065de97d2dd13ca57444", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d119f84ce709de6c2027065de97d2dd13ca57444", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d119f84ce709de6c2027065de97d2dd13ca57444/comments", "author": null, "committer": null, "parents": [{"sha": "f9d7e5cd9ecc1a22a4765dee9dbdd695b42c9c3a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9d7e5cd9ecc1a22a4765dee9dbdd695b42c9c3a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f9d7e5cd9ecc1a22a4765dee9dbdd695b42c9c3a"}], "stats": {"total": 38, "additions": 29, "deletions": 9}, "files": [{"sha": "84223a74a429bcce18543b7864c157aff642c954", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d119f84ce709de6c2027065de97d2dd13ca57444/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d119f84ce709de6c2027065de97d2dd13ca57444/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d119f84ce709de6c2027065de97d2dd13ca57444", "patch": "@@ -1,4 +1,12 @@\n-Mon Apr 19 08:12:30 1999  Richard Henderson  <rth@cygnus.com>\n+Sat Apr 17 19:13:22 1999  Donn Terry  <donn@interix.com>\n+\n+        * i386.h (PRINT_OPERAND_PUNCT_VALID_P): Allow _.\n+        * i386.c (print_operand): New %_ operator.\n+\t(load_pic_register): Proper number of leading _ in GOT literal.\n+        * i386.md (prologue_get_pc_and_set_got): Likewise.\n+        * i386/unix.h (ASM_OUTPUT_MI_THUNK): Likewise.\n+\n+Sat Apr 17 19:13:07 1999  Richard Henderson  <rth@cygnus.com>\n \n \t* alpha.c (alpha_expand_prologue): Use gen_adddi3 instead of \n \temit_move_insn+plus_constant.  For NT, don't use the stack probe"}, {"sha": "2ac07671ddfabae51dbe33b1e13e84e7192c8665", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 17, "deletions": 5, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d119f84ce709de6c2027065de97d2dd13ca57444/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d119f84ce709de6c2027065de97d2dd13ca57444/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=d119f84ce709de6c2027065de97d2dd13ca57444", "patch": "@@ -1879,14 +1879,19 @@ load_pic_register (do_rtl)\n \t{\n \t  emit_insn (gen_prologue_get_pc (xops[0], xops[1]));\n \t  emit_insn (gen_prologue_set_got (xops[0],\n-\t\t\t\t\t   gen_rtx (SYMBOL_REF, Pmode,\n-\t\t\t\t\t\t    \"$_GLOBAL_OFFSET_TABLE_\"),\n+#ifdef YES_UNDERSCORES\n+\t\t\t\t\t   gen_rtx_SYMBOL_REF (Pmode,\n+  \t\t\t\t\t            \"$__GLOBAL_OFFSET_TABLE_\"),\n+#else\n+\t\t\t\t\t   gen_rtx_SYMBOL_REF (Pmode,\n+\t\t\t\t\t            \"$_GLOBAL_OFFSET_TABLE_\"),\n+#endif\n \t\t\t\t\t   xops[1]));\n \t}\n       else\n \t{\n \t  output_asm_insn (AS1 (call,%X1), xops);\n-\t  output_asm_insn (\"addl $_GLOBAL_OFFSET_TABLE_,%0\", xops);\n+\t  output_asm_insn (\"addl $%__GLOBAL_OFFSET_TABLE_,%0\", xops);\n \t  pic_label_rtx = 0;\n \t}\n     }\n@@ -1909,7 +1914,7 @@ load_pic_register (do_rtl)\n \t  ASM_OUTPUT_INTERNAL_LABEL (asm_out_file, \"L\",\n \t\t\t\t     CODE_LABEL_NUMBER (xops[1]));\n \t  output_asm_insn (AS1 (pop%L0,%0), xops);\n-\t  output_asm_insn (\"addl $_GLOBAL_OFFSET_TABLE_+[.-%P1],%0\", xops);\n+\t  output_asm_insn (\"addl $%__GLOBAL_OFFSET_TABLE_+[.-%P1],%0\", xops);\n \t}\n     }\n \n@@ -3372,7 +3377,8 @@ put_condition_code (code, reverse_cc, mode, file)\n    k --  likewise, print the SImode name of the register.\n    h --  print the QImode name for a \"high\" register, either ah, bh, ch or dh.\n    y --  print \"st(0)\" instead of \"st\" as a register.\n-   P --  print as a PIC constant */\n+   P --  print as a PIC constant \n+   _ --  output \"_\" if YES_UNDERSCORES */\n \n void\n print_operand (file, x, code)\n@@ -3389,6 +3395,12 @@ print_operand (file, x, code)\n \t    putc ('*', file);\n \t  return;\n \n+\tcase '_':\n+#ifdef YES_UNDERSCORES\n+\t  putc ('_', file);\n+#endif\n+\t  return;\n+\n \tcase 'L':\n \t  PUT_OP_SIZE (code, 'l', file);\n \t  return;"}, {"sha": "b4854714a484371edc2583a4d492b093f1640c3c", "filename": "gcc/config/i386/i386.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d119f84ce709de6c2027065de97d2dd13ca57444/gcc%2Fconfig%2Fi386%2Fi386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d119f84ce709de6c2027065de97d2dd13ca57444/gcc%2Fconfig%2Fi386%2Fi386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.h?ref=d119f84ce709de6c2027065de97d2dd13ca57444", "patch": "@@ -2578,7 +2578,7 @@ do { long l;\t\t\t\t\t\t\\\n    F,f -- likewise, but for floating-point.  */\n \n #define PRINT_OPERAND_PUNCT_VALID_P(CODE)\t\t\t\t\\\n-  ((CODE) == '*')\n+  ((CODE) == '*' || (CODE) == '_')\n \n /* Print the name of a register based on its machine mode and number.\n    If CODE is 'w', pretend the mode is HImode."}, {"sha": "e18c592f663e850df9cfb9b7cec48b0e6ce17ca0", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d119f84ce709de6c2027065de97d2dd13ca57444/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d119f84ce709de6c2027065de97d2dd13ca57444/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=d119f84ce709de6c2027065de97d2dd13ca57444", "patch": "@@ -6894,7 +6894,7 @@ byte_xor_operation:\n   ASM_OUTPUT_INTERNAL_LABEL (asm_out_file, \\\"L\\\",\n \t\t\t     CODE_LABEL_NUMBER (operands[1]));\n   output_asm_insn (AS1 (pop%L0,%0), operands);\n-  output_asm_insn (\\\"addl $_GLOBAL_OFFSET_TABLE_+[.-%X1],%0\\\", operands);\n+  output_asm_insn (\\\"addl $%__GLOBAL_OFFSET_TABLE_+[.-%X1],%0\\\", operands);\n   RET;\n }\"\n   [(set_attr \"memory\" \"none\")])"}, {"sha": "771d802b4095f25ceb1f31803e43ec1dea6d703b", "filename": "gcc/config/i386/unix.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d119f84ce709de6c2027065de97d2dd13ca57444/gcc%2Fconfig%2Fi386%2Funix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d119f84ce709de6c2027065de97d2dd13ca57444/gcc%2Fconfig%2Fi386%2Funix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Funix.h?ref=d119f84ce709de6c2027065de97d2dd13ca57444", "patch": "@@ -176,7 +176,7 @@ do {\t\t\t\t\t\t\t\t\t      \\\n       output_asm_insn (AS1 (call,%P1), xops);\t\t\t\t      \\\n       ASM_OUTPUT_INTERNAL_LABEL (FILE, \"L\", CODE_LABEL_NUMBER (xops[1]));     \\\n       output_asm_insn (AS1 (pop%L0,%0), xops);\t\t\t\t      \\\n-      output_asm_insn (\"addl $_GLOBAL_OFFSET_TABLE_+[.-%P1],%0\", xops);\t      \\\n+      output_asm_insn (\"addl $%__GLOBAL_OFFSET_TABLE_+[.-%P1],%0\", xops);     \\\n       fprintf (FILE, \"\\tmovl \");\t\t\t\t\t      \\\n       assemble_name (FILE, XSTR (XEXP (DECL_RTL (FUNCTION), 0), 0));\t      \\\n       fprintf (FILE, \"@GOT(%%ebx),%%ecx\\n\\tpopl %%ebx\\n\\tjmp *%%ecx\\n\");      \\"}]}