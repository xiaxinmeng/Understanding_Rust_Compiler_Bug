{"sha": "6d15829192baaacccee6d22adbb2e38857574c12", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmQxNTgyOTE5MmJhYWFjY2NlZTZkMjJhZGJiMmUzODg1NzU3NGMxMg==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2005-06-16T08:28:59Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2005-06-16T08:28:59Z"}, "message": "system-unixware.ads, [...]: Minor comment update for AI-362 (unit is Pure).\n\n2005-06-14  Robert Dewar  <dewar@adacore.com>\n\n\t* system-unixware.ads, system-linux-ia64.ads, system-freebsd-x86.ads,\n\tsystem-lynxos-ppc.ads, system-lynxos-x86.ads, system-linux-x86_64.ads,\n\tsystem-tru64.ads, system-aix.ads, system-vxworks-sparcv9.ads,\n\tsystem-vxworks-xscale.ads, system-solaris-x86.ads, system-irix-o32.ads,\n\tsystem-irix-n32.ads, system-hpux.ads, system-vxworks-m68k.ads,\n\tsystem-linux-x86.ads, system-vxworks-mips.ads, system-vxworks-mips.ads,\n\tsystem-os2.ads, system-interix.ads, system-solaris-sparc.ads,\n\tsystem-solaris-sparcv9.ads, system-vms.ads, system-mingw.ads,\n\tsystem-vms-zcx.ads, system-vxworks-ppc.ads, system.ads,\n\tsystem-darwin-ppc.ads, system-vxworks-x86.ads, system-linux-ppc.ads,\n\tsystem-linux-hppa.ads, system-vms_64.ads,\n\tsystem-vxworks-alpha.ads: Minor comment update for\n\tAI-362 (unit is Pure).\n\n\t* a-chahan.ads, a-chahan.adb: Move Wide_Wide functions to Conversions\n\tAdd pragma Pure_05 for AI-362\n\tMake remaining conversion functions obsolescent in Ada 95\n\n\t* impunit.adb: Change a-swunha to a-swuwha and a-szunha to a-szuzha\n\tMake Ada.Wide_Characters[.Unicode] available in Ada 95 mode\n\tAdd entries for a-wichun and a-zchuni\n\tAdd a-widcha a-zchara for AI-395\n\tAdd a-chacon (Ada.Characters.Conversions) to list of Ada 2005 routines\n\n\t* Makefile.rtl: Change a-swunha to a-swuwha and a-szunha to a-szuzha\n\tAdd entries for a-wichun.o and a-zchuni.o\n\tEntries for a-widcha.o and a-zchara.o\n\tAdd entry for a-chacon.o\n\n\t* a-ztenau.adb: Add with of Ada.Characters.Conversions\n\n\t* a-chacon.ads, a-chacon.adb: New files.\n\n\t* a-taside.adb, a-exstat.adb, a-excach.adb: Add warnings off to allow\n\tcategorization violations.\n\n\t* a-strmap.ads: Add pragma Pure_05 for AI-362\n\t* a-strmap.ads: Add note on implicit categorization for AI-362\n\n\t* a-tgdico.ads, a-taside.ads: Add pragma Preelaborate_05 for AI-362\n\n\t* par-prag.adb: Dummy entry for pragma Persistent_BSS\n\tSet Ada_Version_Explicit, for implementation of AI-362\n\tAdd processing for pragma Pure_05 and Preelaborate_05\n\tAdd entry for Assertion_Policy pragma\n\n\t* sem.adb: Make sure predefined units are compiled with GNAT_Mode true\n\twhen needed for proper processing of categorization stuff\n\n\t* sem_cat.adb:\n\tFor several cases, make errors in preealborate units warnings,\n\tinstead of errors, if GNAT_Mode is set. For AI-362.\n\n\t* sem_elab.adb (Check_Elab_Call): Call to non-static subprogram in\n\tpreelaborate unit is now warning if in GNAT mode\n\n\t* s-stoele.ads: Document AI-362 for pragma preelaborate\n\nFrom-SVN: r101016", "tree": {"sha": "ab034f8a1eac598348a30bb004f97397daaf8f2f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ab034f8a1eac598348a30bb004f97397daaf8f2f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6d15829192baaacccee6d22adbb2e38857574c12", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d15829192baaacccee6d22adbb2e38857574c12", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d15829192baaacccee6d22adbb2e38857574c12", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d15829192baaacccee6d22adbb2e38857574c12/comments", "author": null, "committer": null, "parents": [{"sha": "b497b46043b4679353aecf4be76266686813bdf3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b497b46043b4679353aecf4be76266686813bdf3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b497b46043b4679353aecf4be76266686813bdf3"}], "stats": {"total": 1008, "additions": 699, "deletions": 309}, "files": [{"sha": "84883c7e529186cd7421361913d7d53510d43440", "filename": "gcc/ada/Makefile.rtl", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d15829192baaacccee6d22adbb2e38857574c12/gcc%2Fada%2FMakefile.rtl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d15829192baaacccee6d22adbb2e38857574c12/gcc%2Fada%2FMakefile.rtl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FMakefile.rtl?ref=6d15829192baaacccee6d22adbb2e38857574c12", "patch": "@@ -79,6 +79,7 @@ GNATRTL_NONTASKING_OBJS= \\\n   a-cgaaso$(objext) \\\n   a-cgarso$(objext) \\\n   a-cgcaso$(objext) \\\n+  a-chacon$(objext) \\\n   a-chahan$(objext) \\\n   a-charac$(objext) \\\n   a-chlat1$(objext) \\\n@@ -205,11 +206,11 @@ GNATRTL_NONTASKING_OBJS= \\\n   a-suteio$(objext) \\\n   a-swmwco$(objext) \\\n   a-swunau$(objext) \\\n-  a-swunha$(objext) \\\n+  a-swuwha$(objext) \\\n   a-swuwti$(objext) \\\n   a-szmzco$(objext) \\\n   a-szunau$(objext) \\\n-  a-szunha$(objext) \\\n+  a-szuzha$(objext) \\\n   a-szuzti$(objext) \\\n   a-tags$(objext) \\\n   a-tgdico$(objext) \\\n@@ -234,6 +235,8 @@ GNATRTL_NONTASKING_OBJS= \\\n   a-tiunio$(objext) \\\n   a-unccon$(objext) \\\n   a-uncdea$(objext) \\\n+  a-wichun$(objext) \\\n+  a-widcha$(objext) \\\n   a-witeio$(objext) \\\n   a-wtcoau$(objext) \\\n   a-wtcoio$(objext) \\\n@@ -253,6 +256,8 @@ GNATRTL_NONTASKING_OBJS= \\\n   a-wtmoio$(objext) \\\n   a-wttest$(objext) \\\n   a-wwunio$(objext) \\\n+  a-zchara$(objext) \\\n+  a-zchuni$(objext) \\\n   a-ztcoau$(objext) \\\n   a-ztcoio$(objext) \\\n   a-ztcstr$(objext) \\"}, {"sha": "bfbf13c8b03c5a436f73066faf9f7d6afede8df6", "filename": "gcc/ada/a-chacon.adb", "status": "added", "additions": 267, "deletions": 0, "changes": 267, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d15829192baaacccee6d22adbb2e38857574c12/gcc%2Fada%2Fa-chacon.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d15829192baaacccee6d22adbb2e38857574c12/gcc%2Fada%2Fa-chacon.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-chacon.adb?ref=6d15829192baaacccee6d22adbb2e38857574c12", "patch": "@@ -0,0 +1,267 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                         GNAT RUN-TIME COMPONENTS                         --\n+--                                                                          --\n+--              A D A . C H A R A C T E R S . H A N D L I N G               --\n+--                                                                          --\n+--                                 B o d y                                  --\n+--                                                                          --\n+--             Copyright (C) 2005 Free Software Foundation, Inc.            --\n+--                                                                          --\n+-- This specification is derived from the Ada Reference Manual for use with --\n+-- GNAT. The copyright notice above, and the license provisions that follow --\n+-- apply solely to the  contents of the part following the private keyword. --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n+-- for  more details.  You should have  received  a copy of the GNU General --\n+-- Public License  distributed with GNAT;  see file COPYING.  If not, write --\n+-- to  the Free Software Foundation,  59 Temple Place - Suite 330,  Boston, --\n+-- MA 02111-1307, USA.                                                      --\n+--                                                                          --\n+-- As a special exception,  if other files  instantiate  generics from this --\n+-- unit, or you link  this unit with other files  to produce an executable, --\n+-- this  unit  does not  by itself cause  the resulting  executable  to  be --\n+-- covered  by the  GNU  General  Public  License.  This exception does not --\n+-- however invalidate  any other reasons why  the executable file  might be --\n+-- covered by the  GNU Public License.                                      --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+package body Ada.Characters.Conversions is\n+\n+   ------------------\n+   -- Is_Character --\n+   ------------------\n+\n+   function Is_Character (Item : Wide_Character) return Boolean is\n+   begin\n+      return Wide_Character'Pos (Item) < 256;\n+   end Is_Character;\n+\n+   function Is_Character (Item : Wide_Wide_Character) return Boolean is\n+   begin\n+      return Wide_Wide_Character'Pos (Item) < 256;\n+   end Is_Character;\n+\n+   ---------------\n+   -- Is_String --\n+   ---------------\n+\n+   function Is_String (Item : Wide_String) return Boolean is\n+   begin\n+      for J in Item'Range loop\n+         if Wide_Character'Pos (Item (J)) >= 256 then\n+            return False;\n+         end if;\n+      end loop;\n+\n+      return True;\n+   end Is_String;\n+\n+   function Is_String (Item : Wide_Wide_String) return Boolean is\n+   begin\n+      for J in Item'Range loop\n+         if Wide_Wide_Character'Pos (Item (J)) >= 256 then\n+            return False;\n+         end if;\n+      end loop;\n+\n+      return True;\n+   end Is_String;\n+\n+   -----------------------\n+   -- Is_Wide_Character --\n+   -----------------------\n+\n+   function Is_Wide_Character (Item : Wide_Wide_Character) return Boolean is\n+   begin\n+      return Wide_Wide_Character'Pos (Item) < 2**16;\n+   end Is_Wide_Character;\n+\n+   --------------------\n+   -- Is_Wide_String --\n+   --------------------\n+\n+   function Is_Wide_String (Item : Wide_Wide_String) return Boolean is\n+   begin\n+      for J in Item'Range loop\n+         if Wide_Wide_Character'Pos (Item (J)) >= 2**16 then\n+            return False;\n+         end if;\n+      end loop;\n+\n+      return True;\n+   end Is_Wide_String;\n+\n+   ------------------\n+   -- To_Character --\n+   ------------------\n+\n+   function To_Character\n+     (Item       : Wide_Character;\n+      Substitute : Character := ' ') return Character\n+   is\n+   begin\n+      if Is_Character (Item) then\n+         return Character'Val (Wide_Character'Pos (Item));\n+      else\n+         return Substitute;\n+      end if;\n+   end To_Character;\n+\n+   function To_Character\n+     (Item       : Wide_Wide_Character;\n+      Substitute : Character := ' ') return Character\n+   is\n+   begin\n+      if Is_Character (Item) then\n+         return Character'Val (Wide_Wide_Character'Pos (Item));\n+      else\n+         return Substitute;\n+      end if;\n+   end To_Character;\n+\n+   ---------------\n+   -- To_String --\n+   ---------------\n+\n+   function To_String\n+     (Item       : Wide_String;\n+      Substitute : Character := ' ') return String\n+   is\n+      Result : String (1 .. Item'Length);\n+\n+   begin\n+      for J in Item'Range loop\n+         Result (J - (Item'First - 1)) := To_Character (Item (J), Substitute);\n+      end loop;\n+\n+      return Result;\n+   end To_String;\n+\n+   function To_String\n+     (Item       : Wide_Wide_String;\n+      Substitute : Character := ' ') return String\n+   is\n+      Result : String (1 .. Item'Length);\n+\n+   begin\n+      for J in Item'Range loop\n+         Result (J - (Item'First - 1)) := To_Character (Item (J), Substitute);\n+      end loop;\n+\n+      return Result;\n+   end To_String;\n+\n+   -----------------------\n+   -- To_Wide_Character --\n+   -----------------------\n+\n+   function To_Wide_Character\n+     (Item : Character) return Wide_Character\n+   is\n+   begin\n+      return Wide_Character'Val (Character'Pos (Item));\n+   end To_Wide_Character;\n+\n+   function To_Wide_Character\n+     (Item       : Wide_Wide_Character;\n+      Substitute : Wide_Character := ' ') return Wide_Character\n+   is\n+   begin\n+      if Wide_Wide_Character'Pos (Item) < 2**16 then\n+         return Wide_Character'Val (Wide_Wide_Character'Pos (Item));\n+      else\n+         return Substitute;\n+      end if;\n+   end To_Wide_Character;\n+\n+   --------------------\n+   -- To_Wide_String --\n+   --------------------\n+\n+   function To_Wide_String\n+     (Item : String) return Wide_String\n+   is\n+      Result : Wide_String (1 .. Item'Length);\n+\n+   begin\n+      for J in Item'Range loop\n+         Result (J - (Item'First - 1)) := To_Wide_Character (Item (J));\n+      end loop;\n+\n+      return Result;\n+   end To_Wide_String;\n+\n+   function To_Wide_String\n+     (Item       : Wide_Wide_String;\n+      Substitute : Wide_Character := ' ') return Wide_String\n+   is\n+      Result : Wide_String (1 .. Item'Length);\n+\n+   begin\n+      for J in Item'Range loop\n+         Result (J - (Item'First - 1)) :=\n+           To_Wide_Character (Item (J), Substitute);\n+      end loop;\n+\n+      return Result;\n+   end To_Wide_String;\n+\n+   ----------------------------\n+   -- To_Wide_Wide_Character --\n+   ----------------------------\n+\n+   function To_Wide_Wide_Character\n+     (Item : Character) return Wide_Wide_Character\n+   is\n+   begin\n+      return Wide_Wide_Character'Val (Character'Pos (Item));\n+   end To_Wide_Wide_Character;\n+\n+   function To_Wide_Wide_Character\n+     (Item : Wide_Character) return Wide_Wide_Character\n+   is\n+   begin\n+      return Wide_Wide_Character'Val (Wide_Character'Pos (Item));\n+   end To_Wide_Wide_Character;\n+\n+   -------------------------\n+   -- To_Wide_Wide_String --\n+   -------------------------\n+\n+   function To_Wide_Wide_String\n+     (Item : String) return Wide_Wide_String\n+   is\n+      Result : Wide_Wide_String (1 .. Item'Length);\n+\n+   begin\n+      for J in Item'Range loop\n+         Result (J - (Item'First - 1)) := To_Wide_Wide_Character (Item (J));\n+      end loop;\n+\n+      return Result;\n+   end To_Wide_Wide_String;\n+\n+   function To_Wide_Wide_String\n+     (Item : Wide_String) return Wide_Wide_String\n+   is\n+      Result : Wide_Wide_String (1 .. Item'Length);\n+\n+   begin\n+      for J in Item'Range loop\n+         Result (J - (Item'First - 1)) := To_Wide_Wide_Character (Item (J));\n+      end loop;\n+\n+      return Result;\n+   end To_Wide_Wide_String;\n+\n+end Ada.Characters.Conversions;"}, {"sha": "f71cbe23952c17b063be88123f292ed4dfdd1580", "filename": "gcc/ada/a-chacon.ads", "status": "added", "additions": 88, "deletions": 0, "changes": 88, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d15829192baaacccee6d22adbb2e38857574c12/gcc%2Fada%2Fa-chacon.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d15829192baaacccee6d22adbb2e38857574c12/gcc%2Fada%2Fa-chacon.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-chacon.ads?ref=6d15829192baaacccee6d22adbb2e38857574c12", "patch": "@@ -0,0 +1,88 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                         GNAT RUN-TIME COMPONENTS                         --\n+--                                                                          --\n+--              A D A . C H A R A C T E R S . H A N D L I N G               --\n+--                                                                          --\n+--                                 S p e c                                  --\n+--                                                                          --\n+--             Copyright (C) 2005 Free Software Foundation, Inc.            --\n+--                                                                          --\n+-- This specification is derived from the Ada Reference Manual for use with --\n+-- GNAT. The copyright notice above, and the license provisions that follow --\n+-- apply solely to the  contents of the part following the private keyword. --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n+-- for  more details.  You should have  received  a copy of the GNU General --\n+-- Public License  distributed with GNAT;  see file COPYING.  If not, write --\n+-- to  the Free Software Foundation,  59 Temple Place - Suite 330,  Boston, --\n+-- MA 02111-1307, USA.                                                      --\n+--                                                                          --\n+-- As a special exception,  if other files  instantiate  generics from this --\n+-- unit, or you link  this unit with other files  to produce an executable, --\n+-- this  unit  does not  by itself cause  the resulting  executable  to  be --\n+-- covered  by the  GNU  General  Public  License.  This exception does not --\n+-- however invalidate  any other reasons why  the executable file  might be --\n+-- covered by the  GNU Public License.                                      --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+package Ada.Characters.Conversions is\n+pragma Pure (Conversions);\n+\n+   function Is_Character (Item : Wide_Character)      return Boolean;\n+   function Is_String    (Item : Wide_String)         return Boolean;\n+   function Is_Character (Item : Wide_Wide_Character) return Boolean;\n+   function Is_String    (Item : Wide_Wide_String)    return Boolean;\n+\n+   function Is_Wide_Character (Item : Wide_Wide_Character) return Boolean;\n+   function Is_Wide_String    (Item : Wide_Wide_String)    return Boolean;\n+\n+   function To_Wide_Character (Item : Character) return Wide_Character;\n+   function To_Wide_String    (Item : String)    return Wide_String;\n+\n+   function To_Wide_Wide_Character\n+     (Item : Character) return Wide_Wide_Character;\n+\n+   function To_Wide_Wide_String\n+     (Item : String) return Wide_Wide_String;\n+\n+   function To_Wide_Wide_Character\n+     (Item : Wide_Character) return Wide_Wide_Character;\n+\n+   function To_Wide_Wide_String\n+     (Item : Wide_String) return Wide_Wide_String;\n+\n+   function To_Character\n+     (Item       : Wide_Character;\n+      Substitute : Character := ' ') return Character;\n+\n+   function To_String\n+     (Item       : Wide_String;\n+      Substitute : Character := ' ') return String;\n+\n+   function To_Character\n+     (Item       : Wide_Wide_Character;\n+      Substitute : Character := ' ') return Character;\n+\n+   function To_String\n+     (Item       : Wide_Wide_String;\n+      Substitute : Character := ' ') return String;\n+\n+   function To_Wide_Character\n+     (Item       : Wide_Wide_Character;\n+      Substitute : Wide_Character := ' ') return Wide_Character;\n+\n+   function To_Wide_String\n+     (Item       : Wide_Wide_String;\n+      Substitute : Wide_Character := ' ') return Wide_String;\n+\n+end Ada.Characters.Conversions;"}, {"sha": "c707d32934ed344b5bd51a891939040f271d9147", "filename": "gcc/ada/a-chahan.adb", "status": "modified", "additions": 0, "deletions": 141, "changes": 141, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d15829192baaacccee6d22adbb2e38857574c12/gcc%2Fada%2Fa-chahan.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d15829192baaacccee6d22adbb2e38857574c12/gcc%2Fada%2Fa-chahan.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-chahan.adb?ref=6d15829192baaacccee6d22adbb2e38857574c12", "patch": "@@ -304,11 +304,6 @@ package body Ada.Characters.Handling is\n       return Wide_Character'Pos (Item) < 256;\n    end Is_Character;\n \n-   function Is_Character (Item : Wide_Wide_Character) return Boolean is\n-   begin\n-      return Wide_Wide_Character'Pos (Item) < 256;\n-   end Is_Character;\n-\n    ----------------\n    -- Is_Control --\n    ----------------\n@@ -410,17 +405,6 @@ package body Ada.Characters.Handling is\n       return True;\n    end Is_String;\n \n-   function Is_String (Item : Wide_Wide_String) return Boolean is\n-   begin\n-      for J in Item'Range loop\n-         if Wide_Wide_Character'Pos (Item (J)) >= 256 then\n-            return False;\n-         end if;\n-      end loop;\n-\n-      return True;\n-   end Is_String;\n-\n    --------------\n    -- Is_Upper --\n    --------------\n@@ -430,30 +414,6 @@ package body Ada.Characters.Handling is\n       return (Char_Map (Item) and Upper) /= 0;\n    end Is_Upper;\n \n-   -----------------------\n-   -- Is_Wide_Character --\n-   -----------------------\n-\n-   function Is_Wide_Character (Item : Wide_Wide_Character) return Boolean is\n-   begin\n-      return Wide_Wide_Character'Pos (Item) < 2**16;\n-   end Is_Wide_Character;\n-\n-   --------------------\n-   -- Is_Wide_String --\n-   --------------------\n-\n-   function Is_Wide_String (Item : Wide_Wide_String) return Boolean is\n-   begin\n-      for J in Item'Range loop\n-         if Wide_Wide_Character'Pos (Item (J)) >= 2**16 then\n-            return False;\n-         end if;\n-      end loop;\n-\n-      return True;\n-   end Is_Wide_String;\n-\n    --------------\n    -- To_Basic --\n    --------------\n@@ -490,18 +450,6 @@ package body Ada.Characters.Handling is\n       end if;\n    end To_Character;\n \n-   function To_Character\n-     (Item       : Wide_Wide_Character;\n-      Substitute : Character := ' ') return Character\n-   is\n-   begin\n-      if Is_Character (Item) then\n-         return Character'Val (Wide_Wide_Character'Pos (Item));\n-      else\n-         return Substitute;\n-      end if;\n-   end To_Character;\n-\n    ----------------\n    -- To_ISO_646 --\n    ----------------\n@@ -574,20 +522,6 @@ package body Ada.Characters.Handling is\n       return Result;\n    end To_String;\n \n-   function To_String\n-     (Item       : Wide_Wide_String;\n-      Substitute : Character := ' ') return String\n-   is\n-      Result : String (1 .. Item'Length);\n-\n-   begin\n-      for J in Item'Range loop\n-         Result (J - (Item'First - 1)) := To_Character (Item (J), Substitute);\n-      end loop;\n-\n-      return Result;\n-   end To_String;\n-\n    --------------\n    -- To_Upper --\n    --------------\n@@ -623,18 +557,6 @@ package body Ada.Characters.Handling is\n       return Wide_Character'Val (Character'Pos (Item));\n    end To_Wide_Character;\n \n-   function To_Wide_Character\n-     (Item       : Wide_Wide_Character;\n-      Substitute : Wide_Character := ' ') return Wide_Character\n-   is\n-   begin\n-      if Wide_Wide_Character'Pos (Item) < 2**16 then\n-         return Wide_Character'Val (Wide_Wide_Character'Pos (Item));\n-      else\n-         return Substitute;\n-      end if;\n-   end To_Wide_Character;\n-\n    --------------------\n    -- To_Wide_String --\n    --------------------\n@@ -652,67 +574,4 @@ package body Ada.Characters.Handling is\n       return Result;\n    end To_Wide_String;\n \n-   function To_Wide_String\n-     (Item       : Wide_Wide_String;\n-      Substitute : Wide_Character := ' ') return Wide_String\n-   is\n-      Result : Wide_String (1 .. Item'Length);\n-\n-   begin\n-      for J in Item'Range loop\n-         Result (J - (Item'First - 1)) :=\n-           To_Wide_Character (Item (J), Substitute);\n-      end loop;\n-\n-      return Result;\n-   end To_Wide_String;\n-\n-   ----------------------------\n-   -- To_Wide_Wide_Character --\n-   ----------------------------\n-\n-   function To_Wide_Wide_Character\n-     (Item : Character) return Wide_Wide_Character\n-   is\n-   begin\n-      return Wide_Wide_Character'Val (Character'Pos (Item));\n-   end To_Wide_Wide_Character;\n-\n-   function To_Wide_Wide_Character\n-     (Item : Wide_Character) return Wide_Wide_Character\n-   is\n-   begin\n-      return Wide_Wide_Character'Val (Wide_Character'Pos (Item));\n-   end To_Wide_Wide_Character;\n-\n-   -------------------------\n-   -- To_Wide_Wide_String --\n-   -------------------------\n-\n-   function To_Wide_Wide_String\n-     (Item : String) return Wide_Wide_String\n-   is\n-      Result : Wide_Wide_String (1 .. Item'Length);\n-\n-   begin\n-      for J in Item'Range loop\n-         Result (J - (Item'First - 1)) := To_Wide_Wide_Character (Item (J));\n-      end loop;\n-\n-      return Result;\n-   end To_Wide_Wide_String;\n-\n-   function To_Wide_Wide_String\n-     (Item : Wide_String) return Wide_Wide_String\n-   is\n-      Result : Wide_Wide_String (1 .. Item'Length);\n-\n-   begin\n-      for J in Item'Range loop\n-         Result (J - (Item'First - 1)) := To_Wide_Wide_Character (Item (J));\n-      end loop;\n-\n-      return Result;\n-   end To_Wide_Wide_String;\n-\n end Ada.Characters.Handling;"}, {"sha": "629b341a36880d3efc501988246fb155ce918a5d", "filename": "gcc/ada/a-chahan.ads", "status": "modified", "additions": 34, "deletions": 39, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d15829192baaacccee6d22adbb2e38857574c12/gcc%2Fada%2Fa-chahan.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d15829192baaacccee6d22adbb2e38857574c12/gcc%2Fada%2Fa-chahan.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-chahan.ads?ref=6d15829192baaacccee6d22adbb2e38857574c12", "patch": "@@ -35,9 +35,10 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n-\n package Ada.Characters.Handling is\n pragma Preelaborate (Handling);\n+pragma Pure_05 (Handling);\n+--  In accordance with Ada 2005 AI-362\n \n    ----------------------------------------\n    -- Character Classification Functions --\n@@ -90,54 +91,49 @@ pragma Preelaborate (Handling);\n    -- Classifications of Wide_Character and Characters --\n    ------------------------------------------------------\n \n-   function Is_Character (Item : Wide_Character)           return Boolean;\n-   function Is_Character (Item : Wide_Wide_Character)      return Boolean;\n-   function Is_String    (Item : Wide_String)              return Boolean;\n-   function Is_String    (Item : Wide_Wide_String)         return Boolean;\n-   function Is_Wide_Character (Item : Wide_Wide_Character) return Boolean;\n-   function Is_Wide_String (Item : Wide_Wide_String)       return Boolean;\n+   --  Ada 2005 AI 395: these functions are moved to Ada.Characters.Conversions\n+   --  and are considered obsolete in Ada.Characters.Handling. We deal with\n+   --  this by using the special Ada_05 form of pragma Obsolescent which is\n+   --  only active in Ada_05 mode.\n \n-   ---------------------------------------------------------------------------\n-   -- Conversions between Wide_Wide_Character, Wide_Character and Character --\n-   ---------------------------------------------------------------------------\n+   function Is_Character (Item : Wide_Character) return Boolean;\n+   pragma Obsolescent\n+     (\"(Ada 2005) use Ada.Characters.Conversions.Is_Character\", Ada_05);\n \n-   function To_Character\n-     (Item       : Wide_Character;\n-      Substitute : Character := ' ')      return Character;\n+   function Is_String (Item : Wide_String) return Boolean;\n+   pragma Obsolescent\n+     (\"(Ada 2005) use Ada.Characters.Conversions.Is_String\", Ada_05);\n+\n+   ------------------------------------------------------\n+   -- Conversions between Wide_Character and Character --\n+   ------------------------------------------------------\n+\n+   --  Ada 2005 AI 395: these functions are moved to Ada.Characters.Conversions\n+   --  and are considered obsolete in Ada.Characters.Handling. We deal with\n+   --  this by using the special Ada_05 form of pragma Obsolescent which is\n+   --  only active in Ada_05 mode.\n \n    function To_Character\n-     (Item       : Wide_Wide_Character;\n-      Substitute : Character := ' ')      return Character;\n+     (Item       : Wide_Character;\n+      Substitute : Character := ' ') return Character;\n+   pragma Obsolescent\n+     (\"(Ada 2005) use Ada.Characters.Conversions.To_Character\", Ada_05);\n \n    function To_String\n      (Item       : Wide_String;\n-      Substitute : Character := ' ')      return String;\n-\n-   function To_String\n-     (Item       : Wide_Wide_String;\n-      Substitute : Character := ' ')      return String;\n+      Substitute : Character := ' ') return String;\n+   pragma Obsolescent\n+     (\"(Ada 2005) use Ada.Characters.Conversions.To_String\", Ada_05);\n \n    function To_Wide_Character\n-     (Item : Character)                   return Wide_Character;\n-   function To_Wide_Character\n-     (Item       : Wide_Wide_Character;\n-      Substitute : Wide_Character := ' ') return Wide_Character;\n+     (Item : Character) return Wide_Character;\n+   pragma Obsolescent\n+     (\"(Ada 2005) use Ada.Characters.Conversions.To_Wide_Character\", Ada_05);\n \n    function To_Wide_String\n-     (Item : String)                      return Wide_String;\n-   function To_Wide_String\n-     (Item       : Wide_Wide_String;\n-      Substitute : Wide_Character := ' ') return Wide_String;\n-\n-   function To_Wide_Wide_Character\n-     (Item : Character)                   return Wide_Wide_Character;\n-   function To_Wide_Wide_Character\n-     (Item : Wide_Character)              return Wide_Wide_Character;\n-\n-   function To_Wide_Wide_String\n-     (Item : String)                      return Wide_Wide_String;\n-   function To_Wide_Wide_String\n-     (Item : Wide_String)                 return Wide_Wide_String;\n+     (Item : String)return Wide_String;\n+   pragma Obsolescent\n+     (\"(Ada 2005) use Ada.Characters.Conversions.To_Wide_String\", Ada_05);\n \n private\n    pragma Inline (Is_Control);\n@@ -157,6 +153,5 @@ private\n    pragma Inline (Is_Character);\n    pragma Inline (To_Character);\n    pragma Inline (To_Wide_Character);\n-   pragma Inline (To_Wide_Wide_Character);\n \n end Ada.Characters.Handling;"}, {"sha": "39134aedc5747d165eacc8e91957d10d3de34bf9", "filename": "gcc/ada/a-excach.adb", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d15829192baaacccee6d22adbb2e38857574c12/gcc%2Fada%2Fa-excach.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d15829192baaacccee6d22adbb2e38857574c12/gcc%2Fada%2Fa-excach.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-excach.adb?ref=6d15829192baaacccee6d22adbb2e38857574c12", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -31,8 +31,15 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n+pragma Warnings (Off);\n+--  Allow withing of non-Preelaborated units in Ada 2005 mode where this\n+--  package will be categorized as Preelaborate. See AI-362 for details.\n+--  It is safe in the context of the run-time to violate the rules!\n+\n with System.Traceback;\n \n+pragma Warnings (On);\n+\n separate (Ada.Exceptions)\n procedure Call_Chain (Excep : EOA) is\n \n@@ -42,7 +49,6 @@ procedure Call_Chain (Excep : EOA) is\n    --  occurrences.\n \n begin\n-\n    if Exception_Tracebacks /= 0 and Excep.Num_Tracebacks = 0 then\n \n       --  If Exception_Tracebacks = 0 then the program was not"}, {"sha": "eb18a4c998688696dfcf0b285a16f8280ff85468", "filename": "gcc/ada/a-exstat.adb", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d15829192baaacccee6d22adbb2e38857574c12/gcc%2Fada%2Fa-exstat.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d15829192baaacccee6d22adbb2e38857574c12/gcc%2Fada%2Fa-exstat.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-exstat.adb?ref=6d15829192baaacccee6d22adbb2e38857574c12", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -31,9 +31,16 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n+pragma Warnings (Off);\n+--  Allow withing of non-Preelaborated units in Ada 2005 mode where this\n+--  package will be categorized as Preelaborate. See AI-362 for details.\n+--  It is safe in the context of the run-time to violate the rules!\n+\n with System.Exception_Table;  use System.Exception_Table;\n with System.Storage_Elements; use System.Storage_Elements;\n \n+pragma Warnings (On);\n+\n separate (Ada.Exceptions)\n package body Stream_Attributes is\n "}, {"sha": "b8af46faec5fd6e808bab6d5cc821e611816a590", "filename": "gcc/ada/a-strmap.ads", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d15829192baaacccee6d22adbb2e38857574c12/gcc%2Fada%2Fa-strmap.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d15829192baaacccee6d22adbb2e38857574c12/gcc%2Fada%2Fa-strmap.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-strmap.ads?ref=6d15829192baaacccee6d22adbb2e38857574c12", "patch": "@@ -39,6 +39,8 @@ with Ada.Characters.Latin_1;\n \n package Ada.Strings.Maps is\n pragma Preelaborate (Maps);\n+pragma Pure_05 (Maps);\n+--  In accordance with Ada 2005 AI-362\n \n    --------------------------------\n    -- Character Set Declarations --"}, {"sha": "1bd671335b2ddab47ebeb199f726594fc39af251", "filename": "gcc/ada/a-taside.adb", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d15829192baaacccee6d22adbb2e38857574c12/gcc%2Fada%2Fa-taside.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d15829192baaacccee6d22adbb2e38857574c12/gcc%2Fada%2Fa-taside.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-taside.adb?ref=6d15829192baaacccee6d22adbb2e38857574c12", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---           Copyright (C) 1992-2004 Free Software Foundation, Inc.         --\n+--           Copyright (C) 1992-2005 Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -31,6 +31,11 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n+pragma Warnings (Off);\n+--  Allow withing of non-Preelaborated units in Ada 2005 mode where this\n+--  package will be categorized as Preelaborate. See AI-362 for details.\n+--  It is safe in the context of the run-time to violate the rules!\n+\n with System.Address_Image;\n --  used for the function itself\n \n@@ -49,6 +54,8 @@ with System.Task_Primitives.Operations;\n \n with Unchecked_Conversion;\n \n+pragma Warnings (Off);\n+\n package body Ada.Task_Identification is\n \n    -----------------------"}, {"sha": "5af377ce9d0b36a511761c08a8fbf1e8187bd2f5", "filename": "gcc/ada/a-taside.ads", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d15829192baaacccee6d22adbb2e38857574c12/gcc%2Fada%2Fa-taside.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d15829192baaacccee6d22adbb2e38857574c12/gcc%2Fada%2Fa-taside.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-taside.ads?ref=6d15829192baaacccee6d22adbb2e38857574c12", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -35,10 +35,19 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n+pragma Warnings (Off);\n+--  Allow withing of non-Preelaborated units in Ada 2005 mode where this\n+--  package will be categorized as Preelaborate. See AI-362 for details.\n+--  It is safe in the context of the run-time to violate the rules!\n+\n with System;\n with System.Tasking;\n \n+pragma Warnings (On);\n+\n package Ada.Task_Identification is\n+pragma Preelaborate_05 (Task_Identification);\n+--  In accordance with Ada 2005 AI-362\n \n    type Task_Id is private;\n \n@@ -66,6 +75,13 @@ private\n \n    type Task_Id is new System.Tasking.Task_Id;\n \n+   pragma Warnings (Off);\n+   --  Allow non-static constant in Ada 2005 mode where this package will be\n+   --  categorized as Preelaborate. See AI-362 for details. It is safe in the\n+   --  context of the run-time to violate the rules!\n+\n    Null_Task_Id : constant Task_Id := Task_Id (System.Tasking.Null_Task);\n \n+   pragma Warnings (On);\n+\n end Ada.Task_Identification;"}, {"sha": "51e3d80df05849d81a28ad85aa210d55360443e7", "filename": "gcc/ada/a-tgdico.ads", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d15829192baaacccee6d22adbb2e38857574c12/gcc%2Fada%2Fa-tgdico.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d15829192baaacccee6d22adbb2e38857574c12/gcc%2Fada%2Fa-tgdico.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-tgdico.ads?ref=6d15829192baaacccee6d22adbb2e38857574c12", "patch": "@@ -13,17 +13,19 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n+pragma Warnings (Off);\n+--  Turn of categorization warnings\n+\n generic\n    type T (<>) is abstract tagged limited private;\n    type Parameters (<>) is limited private;\n    with function Constructor (Params : access Parameters) return T is abstract;\n \n function Ada.Tags.Generic_Dispatching_Constructor\n   (The_Tag : Tag; Params : access Parameters) return T'Class;\n-\n---  pragma Preelaborate (Generic_Dispatching_Constructor);\n---  Commented out temporarily because various other predefined units do not\n---  yet have proper categorization as specified by AI-362 (such as Ada.Tags,\n---  Ada.Exceptions, etc.).\n-\n+pragma Preelaborate_05 (Generic_Dispatching_Constructor);\n pragma Import (Intrinsic, Generic_Dispatching_Constructor);\n+--  Note: the reason that we use Preelaborate_05 here is so that this will\n+--  compile fine during the normal build procedures. In Ada 2005 mode (which\n+--  is required for this package anyway), this will be treated as Preelaborate\n+--  so everything will be fine."}, {"sha": "ef2c201b7981a9a3f219c83973268ef111a31056", "filename": "gcc/ada/a-ztenau.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d15829192baaacccee6d22adbb2e38857574c12/gcc%2Fada%2Fa-ztenau.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d15829192baaacccee6d22adbb2e38857574c12/gcc%2Fada%2Fa-ztenau.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ztenau.adb?ref=6d15829192baaacccee6d22adbb2e38857574c12", "patch": "@@ -1,6 +1,6 @@\n ------------------------------------------------------------------------------\n --                                                                          --\n---                         GNAT RUNTIME COMPONENTS                          --\n+--                         GNAT RUN-TIME COMPONENTS                         --\n --                                                                          --\n -- A D A . W I D E _ W I D E _ T E X T _ I O . E N U M E R A T I O N _ A U X--\n --                                                                          --\n@@ -32,6 +32,7 @@\n ------------------------------------------------------------------------------\n \n with Ada.Wide_Wide_Text_IO.Generic_Aux; use Ada.Wide_Wide_Text_IO.Generic_Aux;\n+with Ada.Characters.Conversions;        use Ada.Characters.Conversions;\n with Ada.Characters.Handling;           use Ada.Characters.Handling;\n with Interfaces.C_Streams;              use Interfaces.C_Streams;\n with System.WCh_Con;                    use System.WCh_Con;"}, {"sha": "0dce42687ed6a5bfa1e4bcf583c2411fd3eef30e", "filename": "gcc/ada/impunit.adb", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d15829192baaacccee6d22adbb2e38857574c12/gcc%2Fada%2Fimpunit.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d15829192baaacccee6d22adbb2e38857574c12/gcc%2Fada%2Fimpunit.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fimpunit.adb?ref=6d15829192baaacccee6d22adbb2e38857574c12", "patch": "@@ -157,6 +157,13 @@ package body Impunit is\n      \"a-tiocst\",    -- Ada.Text_IO.C_Streams\n      \"a-wtcstr\",    -- Ada.Wide_Text_IO.C_Streams\n \n+      --  Note: strictly the next two should be Ada 2005 units, but it seems\n+      --  harmless (and useful) to make then available in Ada 95 mode, since\n+      --  they only deal with Wide_Character, not Wide_Wide_Character.\n+\n+     \"a-wichun\",    -- Ada.Wide_Characters.Unicode\n+     \"a-widcha\",    -- Ada.Wide_Characters\n+\n    ---------------------------\n    -- GNAT Special IO Units --\n    ---------------------------\n@@ -326,6 +333,7 @@ package body Impunit is\n      \"a-cgaaso\",    -- Ada.Containers.Generic_Anonymous_Array_Sort\n      \"a-cgarso\",    -- Ada.Containers.Generic_Array_Sort\n      \"a-cgcaso\",    -- Ada.Containers.Generic_Constrained_Array_Sort\n+     \"a-chacon\",    -- Ada.Characters.Conversions\n      \"a-chtgke\",    -- Ada.Containers.Hash_Tables.Generic_Keys\n      \"a-chtgop\",    -- Ada.Containers.Hash_Tables.Generic_Operations\n      \"a-cidlli\",    -- Ada.Containers.Indefinite_Doubly_Linked_Lists\n@@ -360,12 +368,14 @@ package body Impunit is\n      \"a-stzhas\",    -- Ada.Strings.Wide_Wide_Hash\n      \"a-stzmap\",    -- Ada.Strings.Wide_Wide_Maps\n      \"a-stzunb\",    -- Ada.Strings.Wide_Wide_Unbounded\n-     \"a-swunha\",    -- Ada.Strings.Wide_Unbounded.Hash\n+     \"a-swuwha\",    -- Ada.Strings.Wide_Unbounded.Wide_Hash\n      \"a-szmzco\",    -- Ada.Strings.Wide_Wide_Maps.Wide_Wide_Constants;\n-     \"a-szunha\",    -- Ada.Strings.Wide_Wide_Unbounded.Hash\n+     \"a-szuzha\",    -- Ada.Strings.Wide_Wide_Unbounded.Wide_Wide_Hash\n      \"a-tgdico\",    -- Ada.Tags.Generic_Dispatching_Constructor;\n      \"a-tiunio\",    -- Ada.Text_IO.Unbounded_IO;\n+     \"a-wichun\",    -- Ada.Wide_Characters.Unicode\n      \"a-wwunio\",    -- Ada.Wide_Text_IO.Wide_Unbounded_IO;\n+     \"a-zchara\",    -- Ada.Wide_Wide_Characters\n      \"a-zttest\",    -- Ada.Wide_Wide_Text_IO.Text_Streams\n      \"a-ztexio\",    -- Ada.Wide_Wide_Text_IO\n      \"a-zzunio\",    -- Ada.Wide_Wide_Text_IO.Wide_Wide_Unbounded_IO\n@@ -390,6 +400,7 @@ package body Impunit is\n      \"a-chzla1\",    -- Ada.Characters.Wide_Wide_Latin_1\n      \"a-chzla9\",    -- Ada.Characters.Wide_Wide_Latin_9\n      \"a-szuzti\",    -- Ada.Strings.Wide_Wide_Unbounded.Wide_Wide_Text_IO\n+     \"a-zchuni\",    -- Ada.Wide_Wide_Characters.Unicode\n \n    ---------------------------\n    -- GNAT Special IO Units --"}, {"sha": "c26d7d37bcd964b3f79820739dae5691ad9c4e0a", "filename": "gcc/ada/par-prag.adb", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d15829192baaacccee6d22adbb2e38857574c12/gcc%2Fada%2Fpar-prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d15829192baaacccee6d22adbb2e38857574c12/gcc%2Fada%2Fpar-prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-prag.adb?ref=6d15829192baaacccee6d22adbb2e38857574c12", "patch": "@@ -288,6 +288,7 @@ begin\n \n       when Pragma_Ada_83 =>\n          Ada_Version := Ada_83;\n+         Ada_Version_Explicit := Ada_Version;\n \n       ------------\n       -- Ada_95 --\n@@ -299,6 +300,7 @@ begin\n \n       when Pragma_Ada_95 =>\n          Ada_Version := Ada_95;\n+         Ada_Version_Explicit := Ada_Version;\n \n       ------------\n       -- Ada_05 --\n@@ -312,6 +314,7 @@ begin\n       when Pragma_Ada_05 =>\n          if Arg_Count = 0 then\n             Ada_Version := Ada_05;\n+            Ada_Version_Explicit := Ada_Version;\n          end if;\n \n       -----------\n@@ -370,6 +373,8 @@ begin\n             Ada_Version := Ada_Version_Type'Min (Ada_Version, Ada_95);\n          end if;\n \n+         Ada_Version_Explicit := Ada_Version;\n+\n       ----------------\n       -- List (2.8) --\n       ----------------\n@@ -984,6 +989,7 @@ begin\n       --  entirely in Sem_Prag, and no further checking is done by Par.\n \n       when Pragma_Abort_Defer                  |\n+           Pragma_Assertion_Policy             |\n            Pragma_AST_Entry                    |\n            Pragma_All_Calls_Remote             |\n            Pragma_Annotate                     |\n@@ -1066,15 +1072,16 @@ begin\n            Pragma_Pack                         |\n            Pragma_Passive                      |\n            Pragma_Polling                      |\n-           Pragma_Persistent_Data              |\n-           Pragma_Persistent_Object            |\n+           Pragma_Persistent_BSS               |\n            Pragma_Preelaborate                 |\n+           Pragma_Preelaborate_05              |\n            Pragma_Priority                     |\n            Pragma_Profile                      |\n            Pragma_Profile_Warnings             |\n            Pragma_Propagate_Exceptions         |\n            Pragma_Psect_Object                 |\n            Pragma_Pure                         |\n+           Pragma_Pure_05                      |\n            Pragma_Pure_Function                |\n            Pragma_Queuing_Policy               |\n            Pragma_Remote_Call_Interface        |"}, {"sha": "e490ec7b4660891b93f9c3a7c1edabe147edc1e3", "filename": "gcc/ada/s-stoele.ads", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d15829192baaacccee6d22adbb2e38857574c12/gcc%2Fada%2Fs-stoele.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d15829192baaacccee6d22adbb2e38857574c12/gcc%2Fada%2Fs-stoele.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-stoele.ads?ref=6d15829192baaacccee6d22adbb2e38857574c12", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2002-2004 Free Software Foundation, Inc.          --\n+--          Copyright (C) 2002-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -42,7 +42,8 @@\n package System.Storage_Elements is\n pragma Pure (Storage_Elements);\n --  Note that we take advantage of the implementation permission to make\n---  this unit Pure instead of Preelaborable; see RM 13.7.1(15).\n+--  this unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada 2005,\n+--  this is Pure in any case (AI-362).\n \n --  We also add the pragma Pure_Function to the operations in this package,\n --  because otherwise functions with parameters derived from Address are"}, {"sha": "bbd0d2f8f1f552cf28016706e1071bf0c488b6a2", "filename": "gcc/ada/sem.adb", "status": "modified", "additions": 18, "deletions": 2, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d15829192baaacccee6d22adbb2e38857574c12/gcc%2Fada%2Fsem.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d15829192baaacccee6d22adbb2e38857574c12/gcc%2Fada%2Fsem.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem.adb?ref=6d15829192baaacccee6d22adbb2e38857574c12", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2004, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1218,7 +1218,7 @@ package body Sem is\n       S_New_Nodes_OK     : constant Int              := New_Nodes_OK;\n       S_Outer_Gen_Scope  : constant Entity_Id        := Outer_Generic_Scope;\n       S_Sem_Unit         : constant Unit_Number_Type := Current_Sem_Unit;\n-\n+      S_GNAT_Mode        : constant Boolean          := GNAT_Mode;\n       Generic_Main       : constant Boolean :=\n                              Nkind (Unit (Cunit (Main_Unit)))\n                                in N_Generic_Declaration;\n@@ -1270,6 +1270,21 @@ package body Sem is\n       Compiler_State   := Analyzing;\n       Current_Sem_Unit := Get_Cunit_Unit_Number (Comp_Unit);\n \n+      --  Compile predefined units with GNAT_Mode set to True, to properly\n+      --  process the categorization stuff. However, do not set set GNAT_Mode\n+      --  to True for the renamings units (Text_IO, IO_Exceptions, Direct_IO,\n+      --  Sequential_IO) as this would prevent pragma System_Extend to be\n+      --  taken into account, for example when Text_IO is renaming DEC.Text_IO.\n+\n+      --  Cleaner might be to do the kludge at the point of excluding the\n+      --  pragma (do not exclude for renamings ???)\n+\n+      GNAT_Mode :=\n+        GNAT_Mode\n+          or else Is_Predefined_File_Name\n+                    (Unit_File_Name (Current_Sem_Unit),\n+                     Renamings_Included => False);\n+\n       if Generic_Main then\n          Expander_Mode_Save_And_Set (False);\n       else\n@@ -1315,6 +1330,7 @@ package body Sem is\n       Inside_A_Generic       := S_Inside_A_Generic;\n       New_Nodes_OK           := S_New_Nodes_OK;\n       Outer_Generic_Scope    := S_Outer_Gen_Scope;\n+      GNAT_Mode              := S_GNAT_Mode;\n \n       Restore_Opt_Config_Switches (Save_Config_Switches);\n       Expander_Mode_Restore;"}, {"sha": "2351557286aafa25509d76093ee6e95526ceac4f", "filename": "gcc/ada/sem_cat.adb", "status": "modified", "additions": 100, "deletions": 41, "changes": 141, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d15829192baaacccee6d22adbb2e38857574c12/gcc%2Fada%2Fsem_cat.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d15829192baaacccee6d22adbb2e38857574c12/gcc%2Fada%2Fsem_cat.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_cat.adb?ref=6d15829192baaacccee6d22adbb2e38857574c12", "patch": "@@ -33,6 +33,7 @@ with Exp_Tss;  use Exp_Tss;\n with Fname;    use Fname;\n with Lib;      use Lib;\n with Nlists;   use Nlists;\n+with Opt;      use Opt;\n with Sem;      use Sem;\n with Sem_Eval; use Sem_Eval;\n with Sem_Util; use Sem_Util;\n@@ -163,19 +164,39 @@ package body Sem_Cat is\n       With_Category := Get_Categorization (Depended_Entity);\n \n       if With_Category > Unit_Category then\n-\n          if (Unit_Category = Remote_Types\n-                 or else Unit_Category = Remote_Call_Interface)\n+               or else Unit_Category = Remote_Call_Interface)\n            and then In_Package_Body (Unit_Entity)\n          then\n             null;\n \n+         --  Subunit error case. In GNAT mode, this is only a warning to allow\n+         --  it to be judiciously turned off. Otherwise it is a real error.\n+\n          elsif Is_Subunit then\n-            Error_Msg_NE (\"subunit cannot depend on&\"\n-              & \" (parent has wrong categorization)\", N, Depended_Entity);\n+            if GNAT_Mode then\n+               Error_Msg_NE\n+                 (\"?subunit cannot depend on& \" &\n+                  \"(parent has wrong categorization)\", N, Depended_Entity);\n+            else\n+               Error_Msg_NE\n+                 (\"subunit cannot depend on& \" &\n+                  \"(parent has wrong categorization)\", N, Depended_Entity);\n+            end if;\n+\n+         --  Normal error case. In GNAT mode, this is only a warning to allow\n+         --  it to be judiciously turned off. Otherwise it is a real error.\n+\n          else\n-            Error_Msg_NE (\"current unit cannot depend on&\"\n-              & \" (wrong categorization)\", N, Depended_Entity);\n+            if GNAT_Mode then\n+               Error_Msg_NE\n+                 (\"?current unit cannot depend on& \" &\n+                  \"(wrong categorization)\", N, Depended_Entity);\n+            else\n+               Error_Msg_NE\n+                 (\"current unit cannot depend on& \" &\n+                  \"(wrong categorization)\", N, Depended_Entity);\n+            end if;\n          end if;\n       end if;\n \n@@ -624,27 +645,38 @@ package body Sem_Cat is\n \n    begin\n       case Nkind (Def) is\n+\n+         --  Access to subprogram case\n+\n          when N_Access_To_Subprogram_Definition =>\n \n             --  A pure library_item must not contain the declaration of a\n             --  named access type, except within a subprogram, generic\n             --  subprogram, task unit, or protected unit (RM 10.2.1(16)).\n \n-            if Comes_From_Source (T)\n-               and then In_Pure_Unit\n-               and then not In_Subprogram_Task_Protected_Unit\n+            --  This test is skipped in Ada 2005 (see AI-366)\n+\n+            if Ada_Version < Ada_05\n+              and then Comes_From_Source (T)\n+              and then In_Pure_Unit\n+              and then not In_Subprogram_Task_Protected_Unit\n             then\n                Error_Msg_N (\"named access type not allowed in pure unit\", T);\n             end if;\n \n-         when N_Access_To_Object_Definition =>\n+         --  Access to object case\n \n+         when N_Access_To_Object_Definition =>\n             if Comes_From_Source (T)\n               and then In_Pure_Unit\n               and then not In_Subprogram_Task_Protected_Unit\n             then\n-               Error_Msg_N\n-                 (\"named access type not allowed in pure unit\", T);\n+               --  We can't give the message yet, since the type is not frozen\n+               --  and in Ada 2005 mode, access types are allowed in pure units\n+               --  if the type has no storage pool (see AI-366). So we set a\n+               --  flag which will be checked at freeze time.\n+\n+               Set_Is_Pure_Unit_Access_Type (T);\n             end if;\n \n             --  Check for RCI or RT unit type declaration. It should not\n@@ -661,7 +693,8 @@ package body Sem_Cat is\n \n             Validate_SP_Access_Object_Type_Decl (T);\n \n-         when others => null;\n+         when others =>\n+            null;\n       end case;\n \n       --  Set categorization flag from package on entity as well, to allow\n@@ -860,8 +893,17 @@ package body Sem_Cat is\n             if Nkind (Item) /= N_Label\n               and then Nkind (Item) /= N_Null_Statement\n             then\n-               Error_Msg_N\n-                 (\"statements not allowed in preelaborated unit\", Item);\n+               --  In GNAT mode, this is a warning, allowing the run-time\n+               --  to judiciously bypass this error condition.\n+\n+               if GNAT_Mode then\n+                  Error_Msg_N\n+                    (\"?statements not allowed in preelaborated unit\", Item);\n+               else\n+                  Error_Msg_N\n+                    (\"statements not allowed in preelaborated unit\", Item);\n+               end if;\n+\n                exit;\n             end if;\n \n@@ -1312,7 +1354,6 @@ package body Sem_Cat is\n          --  Profile must exist, otherwise not primitive operation\n \n          Param_Spec := First (Profile);\n-\n          while Present (Param_Spec) loop\n \n             --  Now find out if this parameter is a controlling parameter\n@@ -1378,7 +1419,6 @@ package body Sem_Cat is\n       --  entity is inside an RCI unit.\n \n       Set_Is_Remote_Call_Interface (T);\n-\n    end Validate_Remote_Access_Object_Type_Declaration;\n \n    -----------------------------------------------\n@@ -1391,20 +1431,20 @@ package body Sem_Cat is\n       E  : Entity_Id;\n \n    begin\n-      --  This subprogram enforces the checks in (RM E.2.2(8)) for\n-      --  certain uses of class-wide limited private types.\n+      --  This subprogram enforces the checks in (RM E.2.2(8)) for certain uses\n+      --  of class-wide limited private types.\n \n       --    Storage_Pool and Storage_Size are not defined for such types\n       --\n       --    The expected type of allocator must not not be such a type.\n \n-      --    The actual parameter of generic instantiation must not\n-      --    be such a type if the formal parameter is of an access type.\n+      --    The actual parameter of generic instantiation must not be such a\n+      --    type if the formal parameter is of an access type.\n \n       --  On entry, there are five cases\n \n-      --    1. called from sem_attr Analyze_Attribute where attribute\n-      --       name is either Storage_Pool or Storage_Size.\n+      --    1. called from sem_attr Analyze_Attribute where attribute name is\n+      --       either Storage_Pool or Storage_Size.\n \n       --    2. called from exp_ch4 Expand_N_Allocator\n \n@@ -1438,9 +1478,9 @@ package body Sem_Cat is\n             return;\n          end if;\n \n-      --  This subprogram also enforces the checks in E.2.2(13).\n-      --  A value of such type must not be dereferenced unless as a\n-      --  controlling operand of a dispatching call.\n+      --  This subprogram also enforces the checks in E.2.2(13). A value of\n+      --  such type must not be dereferenced unless as controlling operand of a\n+      --  dispatching call.\n \n       elsif K = N_Explicit_Dereference\n         and then (Comes_From_Source (N)\n@@ -1467,18 +1507,18 @@ package body Sem_Cat is\n          end if;\n \n          --  If we are just within a procedure or function call and the\n-         --  dereference has not been analyzed, return because this\n-         --  procedure will be called again from sem_res Resolve_Actuals.\n+         --  dereference has not been analyzed, return because this procedure\n+         --  will be called again from sem_res Resolve_Actuals.\n \n          if Is_Actual_Parameter (N)\n            and then not Analyzed (N)\n          then\n             return;\n          end if;\n \n-         --  The following is to let the compiler generated tags check\n-         --  pass through without error message. This is a bit kludgy\n-         --  isn't there some better way of making this exclusion ???\n+         --  The following is to let the compiler generated tags check pass\n+         --  through without error message. This is a bit kludgy isn't there\n+         --  some better way of making this exclusion ???\n \n          if (PK = N_Selected_Component\n               and then Present (Parent (Parent (N)))\n@@ -1522,9 +1562,9 @@ package body Sem_Cat is\n       E : constant Entity_Id := Etype (Expression (N));\n \n    begin\n-      --  This test is required in the case where a conversion appears\n-      --  inside a normal package, it does not necessarily have to be\n-      --  inside an RCI, Remote_Types unit (RM E.2.2(9,12)).\n+      --  This test is required in the case where a conversion appears inside a\n+      --  normal package, it does not necessarily have to be inside an RCI,\n+      --  Remote_Types unit (RM E.2.2(9,12)).\n \n       if Is_Remote_Access_To_Subprogram_Type (E)\n         and then not Is_Remote_Access_To_Subprogram_Type (S)\n@@ -1616,6 +1656,10 @@ package body Sem_Cat is\n       --  Return true if the protected type designated by T has\n       --  entry declarations.\n \n+      ----------------------------\n+      -- Has_Entry_Declarations --\n+      ----------------------------\n+\n       function Has_Entry_Declarations (E : Entity_Id) return Boolean is\n          Ety : Entity_Id;\n \n@@ -1682,12 +1726,15 @@ package body Sem_Cat is\n       function Is_Primary (N : Node_Id) return Boolean;\n       --  Determine whether node is syntactically a primary in an expression.\n \n+      ----------------\n+      -- Is_Primary --\n+      ----------------\n+\n       function Is_Primary (N : Node_Id) return Boolean is\n          K : constant Node_Kind := Nkind (Parent (N));\n \n       begin\n          case K is\n-\n             when N_Op | N_In | N_Not_In =>\n                return True;\n \n@@ -1731,9 +1778,9 @@ package body Sem_Cat is\n       then\n          return;\n \n-      --  Filter out cases where primary is default in a component\n-      --  declaration, discriminant specification, or actual in a record\n-      --  type initialization call.\n+      --  Filter out cases where primary is default in a component declaration,\n+      --  discriminant specification, or actual in a record type initialization\n+      --  call.\n \n       --  Initialization call of internal types.\n \n@@ -1768,7 +1815,7 @@ package body Sem_Cat is\n          --  We take the view that a constant defined in another preelaborated\n          --  unit is preelaborable, even though it may have a private type and\n          --  thus appear non-static in a client. This must be the intent of\n-         --  the language, but currently is an RM gap.\n+         --  the language, but currently is an RM gap ???\n \n          elsif Ekind (Entity (N)) = E_Constant\n            and then not Is_Static_Expression (N)\n@@ -1791,9 +1838,21 @@ package body Sem_Cat is\n                                                 (Renamed_Object (E))))))\n             then\n                null;\n+\n+            --  This is the error case\n+\n             else\n-               Flag_Non_Static_Expr\n-                 (\"non-static constant in preelaborated unit\", N);\n+               --  In GNAT mode, this is just a warning, to allow it to be\n+               --  judiciously turned off. Otherwise it is a real error.\n+\n+               if GNAT_Mode then\n+                  Error_Msg_N\n+                    (\"?non-static constant in preelaborated unit\", N);\n+               else\n+                  Flag_Non_Static_Expr\n+                    (\"non-static constant in preelaborated unit\", N);\n+               end if;\n+\n             end if;\n          end if;\n       end if;"}, {"sha": "3a411f8d8d46d5fbf3d543ed1139aef90d2cc371", "filename": "gcc/ada/sem_elab.adb", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d15829192baaacccee6d22adbb2e38857574c12/gcc%2Fada%2Fsem_elab.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d15829192baaacccee6d22adbb2e38857574c12/gcc%2Fada%2Fsem_elab.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_elab.adb?ref=6d15829192baaacccee6d22adbb2e38857574c12", "patch": "@@ -1051,8 +1051,17 @@ package body Sem_Elab is\n               and then In_Preelaborated_Unit\n               and then not In_Inlined_Body\n             then\n-               Error_Msg_N\n-                 (\"non-static call not allowed in preelaborated unit\", N);\n+               --  This is a warning in -gnatg mode allowing such calls to\n+               --  be used in the predefined library with appropriate care.\n+\n+               if GNAT_Mode then\n+                  Error_Msg_N\n+                    (\"?non-static call not allowed in preelaborated unit\", N);\n+               else\n+                  Error_Msg_N\n+                    (\"non-static call not allowed in preelaborated unit\", N);\n+               end if;\n+\n                return;\n             end if;\n "}, {"sha": "958ebfb8b42296546312dd331bafbc6185f3b02a", "filename": "gcc/ada/system-aix.ads", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d15829192baaacccee6d22adbb2e38857574c12/gcc%2Fada%2Fsystem-aix.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d15829192baaacccee6d22adbb2e38857574c12/gcc%2Fada%2Fsystem-aix.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-aix.ads?ref=6d15829192baaacccee6d22adbb2e38857574c12", "patch": "@@ -38,8 +38,9 @@\n \n package System is\n pragma Pure (System);\n---  Note that we take advantage of the implementation permission to\n---  make this unit Pure instead of Preelaborable, see RM 13.7(36)\n+--  Note that we take advantage of the implementation permission to make this\n+--  unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada 2005, this is\n+--  Pure in any case (AI-362).\n \n    type Name is (SYSTEM_NAME_GNAT);\n    System_Name : constant Name := SYSTEM_NAME_GNAT;"}, {"sha": "981031032e23308709df36ef51e16a94e31b9d02", "filename": "gcc/ada/system-darwin-ppc.ads", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d15829192baaacccee6d22adbb2e38857574c12/gcc%2Fada%2Fsystem-darwin-ppc.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d15829192baaacccee6d22adbb2e38857574c12/gcc%2Fada%2Fsystem-darwin-ppc.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-darwin-ppc.ads?ref=6d15829192baaacccee6d22adbb2e38857574c12", "patch": "@@ -38,8 +38,9 @@\n \n package System is\n pragma Pure (System);\n---  Note that we take advantage of the implementation permission to\n---  make this unit Pure instead of Preelaborable, see RM 13.7(36)\n+--  Note that we take advantage of the implementation permission to make this\n+--  unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada 2005, this is\n+--  Pure in any case (AI-362).\n \n    type Name is (SYSTEM_NAME_GNAT);\n    System_Name : constant Name := SYSTEM_NAME_GNAT;"}, {"sha": "a5b3ad6a4aa4a502a608b3977d89ff77fab82ff4", "filename": "gcc/ada/system-freebsd-x86.ads", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d15829192baaacccee6d22adbb2e38857574c12/gcc%2Fada%2Fsystem-freebsd-x86.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d15829192baaacccee6d22adbb2e38857574c12/gcc%2Fada%2Fsystem-freebsd-x86.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-freebsd-x86.ads?ref=6d15829192baaacccee6d22adbb2e38857574c12", "patch": "@@ -38,8 +38,9 @@\n \n package System is\n pragma Pure (System);\n---  Note that we take advantage of the implementation permission to\n---  make this unit Pure instead of Preelaborable, see RM 13.7(36)\n+--  Note that we take advantage of the implementation permission to make this\n+--  unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada 2005, this is\n+--  Pure in any case (AI-362).\n \n    type Name is (SYSTEM_NAME_GNAT);\n    System_Name : constant Name := SYSTEM_NAME_GNAT;"}, {"sha": "9f3af0176dcfa2dcebaf480792e08e03594f2a25", "filename": "gcc/ada/system-hpux.ads", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d15829192baaacccee6d22adbb2e38857574c12/gcc%2Fada%2Fsystem-hpux.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d15829192baaacccee6d22adbb2e38857574c12/gcc%2Fada%2Fsystem-hpux.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-hpux.ads?ref=6d15829192baaacccee6d22adbb2e38857574c12", "patch": "@@ -38,8 +38,9 @@\n \n package System is\n pragma Pure (System);\n---  Note that we take advantage of the implementation permission to\n---  make this unit Pure instead of Preelaborable, see RM 13.7(36)\n+--  Note that we take advantage of the implementation permission to make this\n+--  unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada 2005, this is\n+--  Pure in any case (AI-362).\n \n    type Name is (SYSTEM_NAME_GNAT);\n    System_Name : constant Name := SYSTEM_NAME_GNAT;"}, {"sha": "d242e46d5b6b39fecab5932ea9f841b42b48fd78", "filename": "gcc/ada/system-interix.ads", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d15829192baaacccee6d22adbb2e38857574c12/gcc%2Fada%2Fsystem-interix.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d15829192baaacccee6d22adbb2e38857574c12/gcc%2Fada%2Fsystem-interix.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-interix.ads?ref=6d15829192baaacccee6d22adbb2e38857574c12", "patch": "@@ -38,8 +38,9 @@\n \n package System is\n pragma Pure (System);\n---  Note that we take advantage of the implementation permission to\n---  make this unit Pure instead of Preelaborable, see RM 13.7(36)\n+--  Note that we take advantage of the implementation permission to make this\n+--  unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada 2005, this is\n+--  Pure in any case (AI-362).\n \n    type Name is (SYSTEM_NAME_GNAT);\n    System_Name : constant Name := SYSTEM_NAME_GNAT;"}, {"sha": "26c46de81a36c2ec52a55f9ea6ccb6dafa5b7aaf", "filename": "gcc/ada/system-irix-n32.ads", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d15829192baaacccee6d22adbb2e38857574c12/gcc%2Fada%2Fsystem-irix-n32.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d15829192baaacccee6d22adbb2e38857574c12/gcc%2Fada%2Fsystem-irix-n32.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-irix-n32.ads?ref=6d15829192baaacccee6d22adbb2e38857574c12", "patch": "@@ -38,8 +38,9 @@\n \n package System is\n pragma Pure (System);\n---  Note that we take advantage of the implementation permission to\n---  make this unit Pure instead of Preelaborable, see RM 13.7(36)\n+--  Note that we take advantage of the implementation permission to make this\n+--  unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada 2005, this is\n+--  Pure in any case (AI-362).\n \n    type Name is (SYSTEM_NAME_GNAT);\n    System_Name : constant Name := SYSTEM_NAME_GNAT;"}, {"sha": "26beae2c7b5037e5932ebb7023eb5453f01aa95a", "filename": "gcc/ada/system-irix-o32.ads", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d15829192baaacccee6d22adbb2e38857574c12/gcc%2Fada%2Fsystem-irix-o32.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d15829192baaacccee6d22adbb2e38857574c12/gcc%2Fada%2Fsystem-irix-o32.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-irix-o32.ads?ref=6d15829192baaacccee6d22adbb2e38857574c12", "patch": "@@ -38,8 +38,9 @@\n \n package System is\n pragma Pure (System);\n---  Note that we take advantage of the implementation permission to\n---  make this unit Pure instead of Preelaborable, see RM 13.7(36)\n+--  Note that we take advantage of the implementation permission to make this\n+--  unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada 2005, this is\n+--  Pure in any case (AI-362).\n \n    type Name is (SYSTEM_NAME_GNAT);\n    System_Name : constant Name := SYSTEM_NAME_GNAT;"}, {"sha": "ed8cf51cde30e447bdc1ecc88dfdd92b0e509853", "filename": "gcc/ada/system-linux-hppa.ads", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d15829192baaacccee6d22adbb2e38857574c12/gcc%2Fada%2Fsystem-linux-hppa.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d15829192baaacccee6d22adbb2e38857574c12/gcc%2Fada%2Fsystem-linux-hppa.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-linux-hppa.ads?ref=6d15829192baaacccee6d22adbb2e38857574c12", "patch": "@@ -38,8 +38,9 @@\n \n package System is\n pragma Pure (System);\n---  Note that we take advantage of the implementation permission to\n---  make this unit Pure instead of Preelaborable, see RM 13.7(36)\n+--  Note that we take advantage of the implementation permission to make this\n+--  unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada 2005, this is\n+--  Pure in any case (AI-362).\n \n    type Name is (SYSTEM_NAME_GNAT);\n    System_Name : constant Name := SYSTEM_NAME_GNAT;"}, {"sha": "b8e0a371afca1e64ffd947414fcbb08aa029b894", "filename": "gcc/ada/system-linux-ia64.ads", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d15829192baaacccee6d22adbb2e38857574c12/gcc%2Fada%2Fsystem-linux-ia64.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d15829192baaacccee6d22adbb2e38857574c12/gcc%2Fada%2Fsystem-linux-ia64.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-linux-ia64.ads?ref=6d15829192baaacccee6d22adbb2e38857574c12", "patch": "@@ -38,8 +38,9 @@\n \n package System is\n pragma Pure (System);\n---  Note that we take advantage of the implementation permission to\n---  make this unit Pure instead of Preelaborable, see RM 13.7(36)\n+--  Note that we take advantage of the implementation permission to make this\n+--  unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada 2005, this is\n+--  Pure in any case (AI-362).\n \n    type Name is (SYSTEM_NAME_GNAT);\n    System_Name : constant Name := SYSTEM_NAME_GNAT;"}, {"sha": "b535baf6b6135d04fe6492961313586a2ffeb89a", "filename": "gcc/ada/system-linux-ppc.ads", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d15829192baaacccee6d22adbb2e38857574c12/gcc%2Fada%2Fsystem-linux-ppc.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d15829192baaacccee6d22adbb2e38857574c12/gcc%2Fada%2Fsystem-linux-ppc.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-linux-ppc.ads?ref=6d15829192baaacccee6d22adbb2e38857574c12", "patch": "@@ -38,8 +38,9 @@\n \n package System is\n pragma Pure (System);\n---  Note that we take advantage of the implementation permission to\n---  make this unit Pure instead of Preelaborable, see RM 13.7(36)\n+--  Note that we take advantage of the implementation permission to make this\n+--  unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada 2005, this is\n+--  Pure in any case (AI-362).\n \n    type Name is (SYSTEM_NAME_GNAT);\n    System_Name : constant Name := SYSTEM_NAME_GNAT;"}, {"sha": "52706faf320df049f116cc57a10075afc09c1c20", "filename": "gcc/ada/system-linux-x86.ads", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d15829192baaacccee6d22adbb2e38857574c12/gcc%2Fada%2Fsystem-linux-x86.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d15829192baaacccee6d22adbb2e38857574c12/gcc%2Fada%2Fsystem-linux-x86.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-linux-x86.ads?ref=6d15829192baaacccee6d22adbb2e38857574c12", "patch": "@@ -38,8 +38,9 @@\n \n package System is\n pragma Pure (System);\n---  Note that we take advantage of the implementation permission to\n---  make this unit Pure instead of Preelaborable, see RM 13.7(36)\n+--  Note that we take advantage of the implementation permission to make this\n+--  unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada 2005, this is\n+--  Pure in any case (AI-362).\n \n    type Name is (SYSTEM_NAME_GNAT);\n    System_Name : constant Name := SYSTEM_NAME_GNAT;"}, {"sha": "35c2fc563bfc34bec8655ae1abf66f2b29334458", "filename": "gcc/ada/system-linux-x86_64.ads", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d15829192baaacccee6d22adbb2e38857574c12/gcc%2Fada%2Fsystem-linux-x86_64.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d15829192baaacccee6d22adbb2e38857574c12/gcc%2Fada%2Fsystem-linux-x86_64.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-linux-x86_64.ads?ref=6d15829192baaacccee6d22adbb2e38857574c12", "patch": "@@ -38,8 +38,9 @@\n \n package System is\n pragma Pure (System);\n---  Note that we take advantage of the implementation permission to\n---  make this unit Pure instead of Preelaborable, see RM 13.7(36)\n+--  Note that we take advantage of the implementation permission to make this\n+--  unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada 2005, this is\n+--  Pure in any case (AI-362).\n \n    type Name is (SYSTEM_NAME_GNAT);\n    System_Name : constant Name := SYSTEM_NAME_GNAT;"}, {"sha": "2a69ed54811d33400c1343c9c55c776c7fc911d2", "filename": "gcc/ada/system-lynxos-ppc.ads", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d15829192baaacccee6d22adbb2e38857574c12/gcc%2Fada%2Fsystem-lynxos-ppc.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d15829192baaacccee6d22adbb2e38857574c12/gcc%2Fada%2Fsystem-lynxos-ppc.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-lynxos-ppc.ads?ref=6d15829192baaacccee6d22adbb2e38857574c12", "patch": "@@ -38,8 +38,9 @@\n \n package System is\n pragma Pure (System);\n---  Note that we take advantage of the implementation permission to\n---  make this unit Pure instead of Preelaborable, see RM 13.7(36)\n+--  Note that we take advantage of the implementation permission to make this\n+--  unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada 2005, this is\n+--  Pure in any case (AI-362).\n \n    type Name is (SYSTEM_NAME_GNAT);\n    System_Name : constant Name := SYSTEM_NAME_GNAT;"}, {"sha": "2adfcbf22f76e0ab9abfe2a754c0919bc19937e4", "filename": "gcc/ada/system-lynxos-x86.ads", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d15829192baaacccee6d22adbb2e38857574c12/gcc%2Fada%2Fsystem-lynxos-x86.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d15829192baaacccee6d22adbb2e38857574c12/gcc%2Fada%2Fsystem-lynxos-x86.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-lynxos-x86.ads?ref=6d15829192baaacccee6d22adbb2e38857574c12", "patch": "@@ -38,8 +38,9 @@\n \n package System is\n pragma Pure (System);\n---  Note that we take advantage of the implementation permission to\n---  make this unit Pure instead of Preelaborable, see RM 13.7(36)\n+--  Note that we take advantage of the implementation permission to make this\n+--  unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada 2005, this is\n+--  Pure in any case (AI-362).\n \n    type Name is (SYSTEM_NAME_GNAT);\n    System_Name : constant Name := SYSTEM_NAME_GNAT;"}, {"sha": "9b9d7d7753818cedb39f63dbb11223c71c5a3a6d", "filename": "gcc/ada/system-mingw.ads", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d15829192baaacccee6d22adbb2e38857574c12/gcc%2Fada%2Fsystem-mingw.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d15829192baaacccee6d22adbb2e38857574c12/gcc%2Fada%2Fsystem-mingw.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-mingw.ads?ref=6d15829192baaacccee6d22adbb2e38857574c12", "patch": "@@ -38,8 +38,9 @@\n \n package System is\n pragma Pure (System);\n---  Note that we take advantage of the implementation permission to\n---  make this unit Pure instead of Preelaborable, see RM 13.7(36)\n+--  Note that we take advantage of the implementation permission to make this\n+--  unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada 2005, this is\n+--  Pure in any case (AI-362).\n \n    type Name is (SYSTEM_NAME_GNAT);\n    System_Name : constant Name := SYSTEM_NAME_GNAT;"}, {"sha": "c6e685b37c7330bc61579068e9f6c8086a8d4e6e", "filename": "gcc/ada/system-os2.ads", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d15829192baaacccee6d22adbb2e38857574c12/gcc%2Fada%2Fsystem-os2.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d15829192baaacccee6d22adbb2e38857574c12/gcc%2Fada%2Fsystem-os2.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-os2.ads?ref=6d15829192baaacccee6d22adbb2e38857574c12", "patch": "@@ -38,8 +38,9 @@\n \n package System is\n pragma Pure (System);\n---  Note that we take advantage of the implementation permission to\n---  make this unit Pure instead of Preelaborable, see RM 13.7(36)\n+--  Note that we take advantage of the implementation permission to make this\n+--  unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada 2005, this is\n+--  Pure in any case (AI-362).\n \n    type Name is (SYSTEM_NAME_GNAT);\n    System_Name : constant Name := SYSTEM_NAME_GNAT;"}, {"sha": "1311855882a4b0c7e98a00e32b194e5f65b5a222", "filename": "gcc/ada/system-solaris-sparc.ads", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d15829192baaacccee6d22adbb2e38857574c12/gcc%2Fada%2Fsystem-solaris-sparc.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d15829192baaacccee6d22adbb2e38857574c12/gcc%2Fada%2Fsystem-solaris-sparc.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-solaris-sparc.ads?ref=6d15829192baaacccee6d22adbb2e38857574c12", "patch": "@@ -38,8 +38,9 @@\n \n package System is\n pragma Pure (System);\n---  Note that we take advantage of the implementation permission to\n---  make this unit Pure instead of Preelaborable, see RM 13.7(36)\n+--  Note that we take advantage of the implementation permission to make this\n+--  unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada 2005, this is\n+--  Pure in any case (AI-362).\n \n    type Name is (SYSTEM_NAME_GNAT);\n    System_Name : constant Name := SYSTEM_NAME_GNAT;"}, {"sha": "edc8fc68590dc67d49343b6a4be3a84bcd251aba", "filename": "gcc/ada/system-solaris-sparcv9.ads", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d15829192baaacccee6d22adbb2e38857574c12/gcc%2Fada%2Fsystem-solaris-sparcv9.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d15829192baaacccee6d22adbb2e38857574c12/gcc%2Fada%2Fsystem-solaris-sparcv9.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-solaris-sparcv9.ads?ref=6d15829192baaacccee6d22adbb2e38857574c12", "patch": "@@ -38,8 +38,9 @@\n \n package System is\n pragma Pure (System);\n---  Note that we take advantage of the implementation permission to\n---  make this unit Pure instead of Preelaborable, see RM 13.7(36)\n+--  Note that we take advantage of the implementation permission to make this\n+--  unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada 2005, this is\n+--  Pure in any case (AI-362).\n \n    type Name is (SYSTEM_NAME_GNAT);\n    System_Name : constant Name := SYSTEM_NAME_GNAT;"}, {"sha": "b9e926a45122ae2e863ef0b6fbdd68a8ec716519", "filename": "gcc/ada/system-solaris-x86.ads", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d15829192baaacccee6d22adbb2e38857574c12/gcc%2Fada%2Fsystem-solaris-x86.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d15829192baaacccee6d22adbb2e38857574c12/gcc%2Fada%2Fsystem-solaris-x86.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-solaris-x86.ads?ref=6d15829192baaacccee6d22adbb2e38857574c12", "patch": "@@ -38,8 +38,9 @@\n \n package System is\n pragma Pure (System);\n---  Note that we take advantage of the implementation permission to\n---  make this unit Pure instead of Preelaborable, see RM 13.7(36)\n+--  Note that we take advantage of the implementation permission to make this\n+--  unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada 2005, this is\n+--  Pure in any case (AI-362).\n \n    type Name is (SYSTEM_NAME_GNAT);\n    System_Name : constant Name := SYSTEM_NAME_GNAT;"}, {"sha": "635a0690f1e20841ba950c4cb02152cabfe4a7d0", "filename": "gcc/ada/system-tru64.ads", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d15829192baaacccee6d22adbb2e38857574c12/gcc%2Fada%2Fsystem-tru64.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d15829192baaacccee6d22adbb2e38857574c12/gcc%2Fada%2Fsystem-tru64.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-tru64.ads?ref=6d15829192baaacccee6d22adbb2e38857574c12", "patch": "@@ -38,8 +38,9 @@\n \n package System is\n pragma Pure (System);\n---  Note that we take advantage of the implementation permission to\n---  make this unit Pure instead of Preelaborable, see RM 13.7(36)\n+--  Note that we take advantage of the implementation permission to make this\n+--  unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada 2005, this is\n+--  Pure in any case (AI-362).\n \n    type Name is (SYSTEM_NAME_GNAT);\n    System_Name : constant Name := SYSTEM_NAME_GNAT;"}, {"sha": "750296cae9a89717f49e56407ea4e2746c54058e", "filename": "gcc/ada/system-unixware.ads", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d15829192baaacccee6d22adbb2e38857574c12/gcc%2Fada%2Fsystem-unixware.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d15829192baaacccee6d22adbb2e38857574c12/gcc%2Fada%2Fsystem-unixware.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-unixware.ads?ref=6d15829192baaacccee6d22adbb2e38857574c12", "patch": "@@ -38,8 +38,9 @@\n \n package System is\n pragma Pure (System);\n---  Note that we take advantage of the implementation permission to\n---  make this unit Pure instead of Preelaborable, see RM 13.7(36)\n+--  Note that we take advantage of the implementation permission to make this\n+--  unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada 2005, this is\n+--  Pure in any case (AI-362).\n \n    type Name is (SYSTEM_NAME_GNAT);\n    System_Name : constant Name := SYSTEM_NAME_GNAT;"}, {"sha": "9295d2342e2ffb9a0ecc918b7864f2d1c29bc0f9", "filename": "gcc/ada/system-vms-zcx.ads", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d15829192baaacccee6d22adbb2e38857574c12/gcc%2Fada%2Fsystem-vms-zcx.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d15829192baaacccee6d22adbb2e38857574c12/gcc%2Fada%2Fsystem-vms-zcx.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-vms-zcx.ads?ref=6d15829192baaacccee6d22adbb2e38857574c12", "patch": "@@ -38,8 +38,9 @@\n \n package System is\n pragma Pure (System);\n---  Note that we take advantage of the implementation permission to\n---  make this unit Pure instead of Preelaborable, see RM 13.7(36)\n+--  Note that we take advantage of the implementation permission to make this\n+--  unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada 2005, this is\n+--  Pure in any case (AI-362).\n \n    type Name is (SYSTEM_NAME_GNAT);\n    System_Name : constant Name := SYSTEM_NAME_GNAT;"}, {"sha": "4b53113aceda2b231bbb259a68775f3818002435", "filename": "gcc/ada/system-vms.ads", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d15829192baaacccee6d22adbb2e38857574c12/gcc%2Fada%2Fsystem-vms.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d15829192baaacccee6d22adbb2e38857574c12/gcc%2Fada%2Fsystem-vms.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-vms.ads?ref=6d15829192baaacccee6d22adbb2e38857574c12", "patch": "@@ -38,8 +38,9 @@\n \n package System is\n pragma Pure (System);\n---  Note that we take advantage of the implementation permission to\n---  make this unit Pure instead of Preelaborable, see RM 13.7(36)\n+--  Note that we take advantage of the implementation permission to make this\n+--  unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada 2005, this is\n+--  Pure in any case (AI-362).\n \n    type Name is (SYSTEM_NAME_GNAT);\n    System_Name : constant Name := SYSTEM_NAME_GNAT;"}, {"sha": "90d6de57b4280a97fd79b9ccfe351e490fdfa193", "filename": "gcc/ada/system-vms_64.ads", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d15829192baaacccee6d22adbb2e38857574c12/gcc%2Fada%2Fsystem-vms_64.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d15829192baaacccee6d22adbb2e38857574c12/gcc%2Fada%2Fsystem-vms_64.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-vms_64.ads?ref=6d15829192baaacccee6d22adbb2e38857574c12", "patch": "@@ -38,8 +38,9 @@\n \n package System is\n pragma Pure (System);\n---  Note that we take advantage of the implementation permission to\n---  make this unit Pure instead of Preelaborable, see RM 13.7(36)\n+--  Note that we take advantage of the implementation permission to make this\n+--  unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada 2005, this is\n+--  Pure in any case (AI-362).\n \n    type Name is (SYSTEM_NAME_GNAT);\n    System_Name : constant Name := SYSTEM_NAME_GNAT;"}, {"sha": "cf334e236a6cd9f939a36c591718a9f816fe9bfa", "filename": "gcc/ada/system-vxworks-alpha.ads", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d15829192baaacccee6d22adbb2e38857574c12/gcc%2Fada%2Fsystem-vxworks-alpha.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d15829192baaacccee6d22adbb2e38857574c12/gcc%2Fada%2Fsystem-vxworks-alpha.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-vxworks-alpha.ads?ref=6d15829192baaacccee6d22adbb2e38857574c12", "patch": "@@ -38,8 +38,9 @@\n \n package System is\n pragma Pure (System);\n---  Note that we take advantage of the implementation permission to\n---  make this unit Pure instead of Preelaborable, see RM 13.7(36)\n+--  Note that we take advantage of the implementation permission to make this\n+--  unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada 2005, this is\n+--  Pure in any case (AI-362).\n \n    type Name is (SYSTEM_NAME_GNAT);\n    System_Name : constant Name := SYSTEM_NAME_GNAT;"}, {"sha": "a6c1c6eb8497867709281d7beab3febb14c43731", "filename": "gcc/ada/system-vxworks-m68k.ads", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d15829192baaacccee6d22adbb2e38857574c12/gcc%2Fada%2Fsystem-vxworks-m68k.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d15829192baaacccee6d22adbb2e38857574c12/gcc%2Fada%2Fsystem-vxworks-m68k.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-vxworks-m68k.ads?ref=6d15829192baaacccee6d22adbb2e38857574c12", "patch": "@@ -38,8 +38,9 @@\n \n package System is\n pragma Pure (System);\n---  Note that we take advantage of the implementation permission to\n---  make this unit Pure instead of Preelaborable, see RM 13.7(36)\n+--  Note that we take advantage of the implementation permission to make this\n+--  unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada 2005, this is\n+--  Pure in any case (AI-362).\n \n    type Name is (SYSTEM_NAME_GNAT);\n    System_Name : constant Name := SYSTEM_NAME_GNAT;"}, {"sha": "4dc4b23c68811e8698c684ac8afee729c02c2d3d", "filename": "gcc/ada/system-vxworks-mips.ads", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d15829192baaacccee6d22adbb2e38857574c12/gcc%2Fada%2Fsystem-vxworks-mips.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d15829192baaacccee6d22adbb2e38857574c12/gcc%2Fada%2Fsystem-vxworks-mips.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-vxworks-mips.ads?ref=6d15829192baaacccee6d22adbb2e38857574c12", "patch": "@@ -38,8 +38,9 @@\n \n package System is\n pragma Pure (System);\n---  Note that we take advantage of the implementation permission to\n---  make this unit Pure instead of Preelaborable, see RM 13.7(36)\n+--  Note that we take advantage of the implementation permission to make this\n+--  unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada 2005, this is\n+--  Pure in any case (AI-362).\n \n    type Name is (SYSTEM_NAME_GNAT);\n    System_Name : constant Name := SYSTEM_NAME_GNAT;"}, {"sha": "088811d2eca701cb98716b1e69ecf76466737560", "filename": "gcc/ada/system-vxworks-ppc.ads", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d15829192baaacccee6d22adbb2e38857574c12/gcc%2Fada%2Fsystem-vxworks-ppc.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d15829192baaacccee6d22adbb2e38857574c12/gcc%2Fada%2Fsystem-vxworks-ppc.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-vxworks-ppc.ads?ref=6d15829192baaacccee6d22adbb2e38857574c12", "patch": "@@ -38,8 +38,9 @@\n \n package System is\n pragma Pure (System);\n---  Note that we take advantage of the implementation permission to\n---  make this unit Pure instead of Preelaborable, see RM 13.7(36)\n+--  Note that we take advantage of the implementation permission to make this\n+--  unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada 2005, this is\n+--  Pure in any case (AI-362).\n \n    type Name is (SYSTEM_NAME_GNAT);\n    System_Name : constant Name := SYSTEM_NAME_GNAT;"}, {"sha": "cb30226f6f9fe3c42b3dfe43450dfecdedf4c226", "filename": "gcc/ada/system-vxworks-sparcv9.ads", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d15829192baaacccee6d22adbb2e38857574c12/gcc%2Fada%2Fsystem-vxworks-sparcv9.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d15829192baaacccee6d22adbb2e38857574c12/gcc%2Fada%2Fsystem-vxworks-sparcv9.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-vxworks-sparcv9.ads?ref=6d15829192baaacccee6d22adbb2e38857574c12", "patch": "@@ -38,8 +38,9 @@\n \n package System is\n pragma Pure (System);\n---  Note that we take advantage of the implementation permission to\n---  make this unit Pure instead of Preelaborable, see RM 13.7(36)\n+--  Note that we take advantage of the implementation permission to make this\n+--  unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada 2005, this is\n+--  Pure in any case (AI-362).\n \n    type Name is (SYSTEM_NAME_GNAT);\n    System_Name : constant Name := SYSTEM_NAME_GNAT;"}, {"sha": "4eeb1196a319dd93a5989b817803a9d5ee863aeb", "filename": "gcc/ada/system-vxworks-x86.ads", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d15829192baaacccee6d22adbb2e38857574c12/gcc%2Fada%2Fsystem-vxworks-x86.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d15829192baaacccee6d22adbb2e38857574c12/gcc%2Fada%2Fsystem-vxworks-x86.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-vxworks-x86.ads?ref=6d15829192baaacccee6d22adbb2e38857574c12", "patch": "@@ -38,8 +38,9 @@\n \n package System is\n pragma Pure (System);\n---  Note that we take advantage of the implementation permission to\n---  make this unit Pure instead of Preelaborable, see RM 13.7(36)\n+--  Note that we take advantage of the implementation permission to make this\n+--  unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada 2005, this is\n+--  Pure in any case (AI-362).\n \n    type Name is (SYSTEM_NAME_GNAT);\n    System_Name : constant Name := SYSTEM_NAME_GNAT;"}, {"sha": "a163e9c955fc4a303fc71d1ce6124556e797f1f4", "filename": "gcc/ada/system-vxworks-xscale.ads", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d15829192baaacccee6d22adbb2e38857574c12/gcc%2Fada%2Fsystem-vxworks-xscale.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d15829192baaacccee6d22adbb2e38857574c12/gcc%2Fada%2Fsystem-vxworks-xscale.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-vxworks-xscale.ads?ref=6d15829192baaacccee6d22adbb2e38857574c12", "patch": "@@ -38,8 +38,9 @@\n \n package System is\n pragma Pure (System);\n---  Note that we take advantage of the implementation permission to\n---  make this unit Pure instead of Preelaborable, see RM 13.7(36)\n+--  Note that we take advantage of the implementation permission to make this\n+--  unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada 2005, this is\n+--  Pure in any case (AI-362).\n \n    type Name is (SYSTEM_NAME_GNAT);\n    System_Name : constant Name := SYSTEM_NAME_GNAT;"}, {"sha": "848a84f9af4789cbfc08d9a1eefeec0c802edf21", "filename": "gcc/ada/system.ads", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d15829192baaacccee6d22adbb2e38857574c12/gcc%2Fada%2Fsystem.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d15829192baaacccee6d22adbb2e38857574c12/gcc%2Fada%2Fsystem.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem.ads?ref=6d15829192baaacccee6d22adbb2e38857574c12", "patch": "@@ -43,8 +43,9 @@\n \n package System is\n pragma Pure (System);\n---  Note that we take advantage of the implementation permission to\n---  make this unit Pure instead of Preelaborable, see RM 13.7(36)\n+--  Note that we take advantage of the implementation permission to make this\n+--  unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada 2005, this is\n+--  Pure in any case (AI-362).\n \n    type Name is (SYSTEM_NAME_GNAT);\n    System_Name : constant Name := SYSTEM_NAME_GNAT;"}]}