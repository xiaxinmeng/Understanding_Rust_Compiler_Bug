{"sha": "50d0a8992057ecbdba55856213dc24131cb63bd5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTBkMGE4OTkyMDU3ZWNiZGJhNTU4NTYyMTNkYzI0MTMxY2I2M2JkNQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2006-11-04T12:07:29Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2006-11-04T12:07:29Z"}, "message": "i386.md (*movxf_nointeger, [...]): Enable patterns for standard 80387 constants.\n\n        * config/i386/i386.md (*movxf_nointeger, *movxf_integer): Enable\n        patterns for standard 80387 constants.\n\nFrom-SVN: r118479", "tree": {"sha": "2650d6eae904237aa0b2c20fc9b7dcb66d6f7df2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2650d6eae904237aa0b2c20fc9b7dcb66d6f7df2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/50d0a8992057ecbdba55856213dc24131cb63bd5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50d0a8992057ecbdba55856213dc24131cb63bd5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/50d0a8992057ecbdba55856213dc24131cb63bd5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50d0a8992057ecbdba55856213dc24131cb63bd5/comments", "author": null, "committer": null, "parents": [{"sha": "3589013577f4bec6d4354d3b809c2727bbeecbd4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3589013577f4bec6d4354d3b809c2727bbeecbd4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3589013577f4bec6d4354d3b809c2727bbeecbd4"}], "stats": {"total": 134, "additions": 71, "deletions": 63}, "files": [{"sha": "e6d68f92754142edde4b21db409c915e50051c8a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 69, "deletions": 63, "changes": 132, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50d0a8992057ecbdba55856213dc24131cb63bd5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50d0a8992057ecbdba55856213dc24131cb63bd5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=50d0a8992057ecbdba55856213dc24131cb63bd5", "patch": "@@ -1,30 +1,36 @@\n+2006-11-04  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.md (*movxf_nointeger, *movxf_integer): Enable\n+\tpatterns for standard 80387 constants.\n+\n+\n 2006-11-03  Paolo Bonzini  <bonzini@gnu.org>\n-            Steven Bosscher  <steven@gcc.gnu.org>\n-\n-        * fwprop.c: New file.\n-        * Makefile.in: Add fwprop.o.\n-        * tree-pass.h (pass_rtl_fwprop, pass_rtl_fwprop_with_addr): New.\n-        * passes.c (init_optimization_passes): Schedule forward propagation.\n-        * rtlanal.c (loc_mentioned_in_p): Support NULL value of the second\n-        parameter.\n-        * timevar.def (TV_FWPROP): New.\n-        * common.opt (-fforward-propagate): New.\n-        * opts.c (decode_options): Enable forward propagation at -O2.\n-        * gcse.c (one_cprop_pass): Do not run local cprop unless touching jumps.\n-        * cse.c (fold_rtx_subreg, fold_rtx_mem, fold_rtx_mem_1, find_best_addr,\n-        canon_for_address, table_size): Remove.\n-        (new_basic_block, insert, remove_from_table): Remove references to\n-        table_size.\n-        (fold_rtx): Process SUBREGs and MEMs with equiv_constant, make\n-        simplification loop more straightforward by not calling fold_rtx\n-        recursively.\n-        (equiv_constant): Move here a small part of fold_rtx_subreg,\n-        do not call fold_rtx.  Call avoid_constant_pool_reference\n-        to process MEMs.\n-        * recog.h (canonicalize_change_group): New.\n-\n-        * doc/invoke.texi (Optimization Options): Document fwprop.\n-        * doc/passes.texi (RTL passes): Document fwprop.\n+\t    Steven Bosscher  <steven@gcc.gnu.org>\n+\n+\t* fwprop.c: New file.\n+\t* Makefile.in: Add fwprop.o.\n+\t* tree-pass.h (pass_rtl_fwprop, pass_rtl_fwprop_with_addr): New.\n+\t* passes.c (init_optimization_passes): Schedule forward propagation.\n+\t* rtlanal.c (loc_mentioned_in_p): Support NULL value of the second\n+\tparameter.\n+\t* timevar.def (TV_FWPROP): New.\n+\t* common.opt (-fforward-propagate): New.\n+\t* opts.c (decode_options): Enable forward propagation at -O2.\n+\t* gcse.c (one_cprop_pass): Do not run local cprop unless touching jumps.\n+\t* cse.c (fold_rtx_subreg, fold_rtx_mem, fold_rtx_mem_1, find_best_addr,\n+\tcanon_for_address, table_size): Remove.\n+\t(new_basic_block, insert, remove_from_table): Remove references to\n+\ttable_size.\n+\t(fold_rtx): Process SUBREGs and MEMs with equiv_constant, make\n+\tsimplification loop more straightforward by not calling fold_rtx\n+\trecursively.\n+\t(equiv_constant): Move here a small part of fold_rtx_subreg,\n+\tdo not call fold_rtx.  Call avoid_constant_pool_reference\n+\tto process MEMs.\n+\t* recog.h (canonicalize_change_group): New.\n+\n+\t* doc/invoke.texi (Optimization Options): Document fwprop.\n+\t* doc/passes.texi (RTL passes): Document fwprop.\n \n 2006-11-03  Geoffrey Keating  <geoffk@apple.com>\n \n@@ -452,7 +458,7 @@\n \thandling for 'F'.\n \t(get_file_function_name): Remove.\n \t* tree.h (get_file_function_name): Rename from\n-        get_file_function_name_long.\n+\tget_file_function_name_long.\n \t(get_file_function_name): Remove prototype.\n \n 2006-10-31  Geoffrey Keating  <geoffk@apple.com>\n@@ -534,7 +540,7 @@\n \t* c-decl (start_function): Move code for main decl warning ..\n \t* c-common.c (check_main_parameter_types): .. here.\n \t* c-common.h (check_main_parameter_types): Declare.\n- \n+\n 2006-10-30  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \tPR middle-end/29335\n@@ -963,7 +969,7 @@\n \t* config/darwin.h (CPP_SPEC): ... here.\n \n 2006-10-26  Nathan Froyd  <froydnj@codesourcery.com>\n-            Nathan Sidwell  <nathan@codesourcery.com>\n+\t    Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* ggc-common.c (ggc_min_heapsize_heuristic): Be more conservative\n \twhen choosing the minimum heapsize.\n@@ -1011,10 +1017,10 @@\n \n 2006-10-24  Nathan Froyd  <froydnj@codesourcery.com>\n \n-        * dwarf2out.c (gen_compile_unit_die): Use IS_ABSOLUTE_PATH.\n-        (file_table_relative_p): Likewise.\n-        (dwarf2out_finish): Likewise.\n-        (file_name_acquire): Use DIR_SEPARATOR and DIR_SEPARATOR_2.\n+\t* dwarf2out.c (gen_compile_unit_die): Use IS_ABSOLUTE_PATH.\n+\t(file_table_relative_p): Likewise.\n+\t(dwarf2out_finish): Likewise.\n+\t(file_name_acquire): Use DIR_SEPARATOR and DIR_SEPARATOR_2.\n \n 2006-10-25  Daniel Berlin  <dberlin@dberlin.org>\n \n@@ -1391,9 +1397,9 @@\n \n 2006-10-22  Ira Rosen  <irar@il.ibm.com>\n \n-        * tree-vect-transform.c (vectorizable_load): Use the type of the\n-        return value of the mask_for_load builtin to create realign_load\n-        stmt.\n+\t* tree-vect-transform.c (vectorizable_load): Use the type of the\n+\treturn value of the mask_for_load builtin to create realign_load\n+\tstmt.\n \n 2006-10-22  Richard Sandiford  <richard@codesourcery.com>\n \n@@ -1588,28 +1594,28 @@\n \n 2006-10-19  Chen Liqin  <liqin@sunnorth.com.cn>\n \n-        * config/score/crti.asm: New file.\n-        * config/score/crtn.asm: New file.\n-        * config/score/elf.h: New file.\n-        * config/score/mac.md: New file.\n-        * config/score/misc.md: New file.\n-        * config/score/mul-div.S: New file.\n-        * config/score/predicates.md: New file.\n-        * config/score/score7.md: New file.\n-        * config/score/score.c: New file.\n-        * config/score/score-conv.h: New file.\n-        * config/score/score.h: New file.\n-        * config/score/score.md: New file.\n-        * config/score/score-mdaux.c: New file.\n-        * config/score/score-mdaux.h: New file.\n-        * config/score/score-modes.def: New file.\n-        * config/score/score.opt: New file.\n-        * config/score/score-protos.h: New file.\n-        * config/score/score-version.h: New file.\n-        * config/score/t-score-elf: New file.\n-        * config.gcc: Add score*-*-* configurations(Update before).\n-        * doc/invoke.texi (Score Options): New section.\n-        * doc/md.texi (Score family): New section to document constraints.\n+\t* config/score/crti.asm: New file.\n+\t* config/score/crtn.asm: New file.\n+\t* config/score/elf.h: New file.\n+\t* config/score/mac.md: New file.\n+\t* config/score/misc.md: New file.\n+\t* config/score/mul-div.S: New file.\n+\t* config/score/predicates.md: New file.\n+\t* config/score/score7.md: New file.\n+\t* config/score/score.c: New file.\n+\t* config/score/score-conv.h: New file.\n+\t* config/score/score.h: New file.\n+\t* config/score/score.md: New file.\n+\t* config/score/score-mdaux.c: New file.\n+\t* config/score/score-mdaux.h: New file.\n+\t* config/score/score-modes.def: New file.\n+\t* config/score/score.opt: New file.\n+\t* config/score/score-protos.h: New file.\n+\t* config/score/score-version.h: New file.\n+\t* config/score/t-score-elf: New file.\n+\t* config.gcc: Add score*-*-* configurations(Update before).\n+\t* doc/invoke.texi (Score Options): New section.\n+\t* doc/md.texi (Score family): New section to document constraints.\n \n 2006-10-19  Nick Clifton  <nickc@redhat.com>\n \n@@ -1633,13 +1639,13 @@\n 2006-10-17  Wolfgang Gellerich  <gellerich@de.ibm.com>\n \n \t* config/s390/contraints.md: New file.\n-        * config/s390/s390-protos.h (s390_mem_constraint,\n+\t* config/s390/s390-protos.h (s390_mem_constraint,\n \ts390_O_constraint_str, s390_N_constraint_str,\n \ts390_float_const_zero_p): Function prototypes added.\n \t* config/s390/s390.c (s390_extra_constraint_str,\n \ts390_const_double_ok_for_constraint_p,\n \ts390_const_ok_for_constraint_p): Functions removed.\n-        (s390_mem_constraint, s390_O_constraint_str, s390_N_constraint_str,\n+\t(s390_mem_constraint, s390_O_constraint_str, s390_N_constraint_str,\n \ts390_float_const_zero_p): New functions.\n \t* config/s390/s390.h (REG_CLASS_FROM_LETTER, CONST_OK_FOR_CONSTRAINT_P,\n \tCONST_DOUBLE_OK_FOR_CONSTRAINT_P, EXTRA_CONSTRAINT_STR,\n@@ -1744,14 +1750,14 @@\n \tdeclared always_inline even when not inlining.\n \n 2006-10-15  Eric Botcazou  <ebotcazou@libertysurf.fr>\n-            John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n-            Andrew Pinski  <pinskia@gmail.com>\n+\t    John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n+\t    Andrew Pinski  <pinskia@gmail.com>\n \n \tPR middle-end/29111\n \t* builtins.c (get_pointer_alignment): Return 0 if TER is not run.\n \n 2006-10-15  Jan Hubicka  <jh@suse.cz>\n-            Richard Guenther  <rguenther@suse.de>\n+\t    Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/29299\n \t* cgraphunit.c (cgraph_finalize_compilation_unit): Call"}, {"sha": "94f9f57ca7a76d503597f68cd191873f3a77e68b", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50d0a8992057ecbdba55856213dc24131cb63bd5/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50d0a8992057ecbdba55856213dc24131cb63bd5/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=50d0a8992057ecbdba55856213dc24131cb63bd5", "patch": "@@ -2787,6 +2787,7 @@\n   \"optimize_size\n    && (GET_CODE (operands[0]) != MEM || GET_CODE (operands[1]) != MEM)\n    && (reload_in_progress || reload_completed\n+       || standard_80387_constant_p (operands[1])\n        || GET_CODE (operands[1]) != CONST_DOUBLE\n        || memory_operand (operands[0], XFmode))\" \n {\n@@ -2821,6 +2822,7 @@\n   \"!optimize_size\n    && (GET_CODE (operands[0]) != MEM || GET_CODE (operands[1]) != MEM)\n    && (reload_in_progress || reload_completed\n+       || standard_80387_constant_p (operands[1])\n        || GET_CODE (operands[1]) != CONST_DOUBLE\n        || memory_operand (operands[0], XFmode))\" \n {"}]}