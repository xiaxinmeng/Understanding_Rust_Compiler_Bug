{"sha": "eb723fa314a09f6cf8708f8243a436ff9475558c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWI3MjNmYTMxNGEwOWY2Y2Y4NzA4ZjgyNDNhNDM2ZmY5NDc1NTU4Yw==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2011-08-03T11:09:35Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2011-08-03T11:09:35Z"}, "message": "re PR middle-end/49938 (ICE in interpret_loop_phi, at tree-scalar-evolution.c:1645)\n\n2011-08-03  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/49938\n\t* tree-scalar-evolution.c (interpret_loop_phi): Gracefully\n\tdeal with a POLYNOMIAL_CHREC.\n\n\t* g++.dg/torture/pr49938.C: New testcase.\n\nFrom-SVN: r177267", "tree": {"sha": "966a3e686084e32bc32a1287ab3ad9e51e3c3d7f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/966a3e686084e32bc32a1287ab3ad9e51e3c3d7f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eb723fa314a09f6cf8708f8243a436ff9475558c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb723fa314a09f6cf8708f8243a436ff9475558c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb723fa314a09f6cf8708f8243a436ff9475558c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb723fa314a09f6cf8708f8243a436ff9475558c/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0187b60e160e72673f1116a215ca257e11ba3903", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0187b60e160e72673f1116a215ca257e11ba3903", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0187b60e160e72673f1116a215ca257e11ba3903"}], "stats": {"total": 63, "additions": 61, "deletions": 2}, "files": [{"sha": "6fb94cd448397a9d329a57e75f87f76046f78521", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb723fa314a09f6cf8708f8243a436ff9475558c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb723fa314a09f6cf8708f8243a436ff9475558c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=eb723fa314a09f6cf8708f8243a436ff9475558c", "patch": "@@ -1,3 +1,9 @@\n+2011-08-03  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/49938\n+\t* tree-scalar-evolution.c (interpret_loop_phi): Gracefully\n+\tdeal with a POLYNOMIAL_CHREC.\n+\n 2011-08-03  Revital Eres  <revital.eres@linaro.org>\n \n \t* modulo-sched.c (calculate_stage_count,"}, {"sha": "e16b1a07d5626aa8cbd2642310c8e9bafc6ff323", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb723fa314a09f6cf8708f8243a436ff9475558c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb723fa314a09f6cf8708f8243a436ff9475558c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=eb723fa314a09f6cf8708f8243a436ff9475558c", "patch": "@@ -1,3 +1,8 @@\n+2011-08-03  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/49938\n+\t* g++.dg/torture/pr49938.C: New testcase.\n+\n 2011-08-02  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/43886"}, {"sha": "91804f4b0d5f3eeecd0b3b90365525004cba897a", "filename": "gcc/testsuite/g++.dg/torture/pr49938.C", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb723fa314a09f6cf8708f8243a436ff9475558c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr49938.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb723fa314a09f6cf8708f8243a436ff9475558c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr49938.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr49938.C?ref=eb723fa314a09f6cf8708f8243a436ff9475558c", "patch": "@@ -0,0 +1,48 @@\n+#include <vector>\n+#include <cstdlib>\n+typedef unsigned short uint16;\n+\n+namespace base {\n+    class StringPiece\n+      {\n+    public:\n+\ttypedef std::size_t size_type;\n+\tsize_type size() const { return length_; }\n+\tsize_type length_;\n+      };\n+}\n+\n+namespace net {\n+    class DNSSECKeySet\n+      {\n+\tbool CheckSignature (const base::StringPiece& name, const\n+\t\t\t     base::StringPiece& zone, const\n+\t\t\t     base::StringPiece& signature, uint16 rrtype,\n+\t\t\t     const std::vector<base::StringPiece>& rrdatas);\n+      };\n+}\n+\n+template <class C> class scoped_array\n+{\n+public: typedef C element_type;\n+\texplicit scoped_array(C* p = __null):array_(p) {}\n+private:   C* array_;\n+};\n+\n+namespace net {\n+    bool DNSSECKeySet::CheckSignature (const base::StringPiece& name,\n+\t\t\t\t       const base::StringPiece& zone, const base::StringPiece& signature,\n+\t\t\t\t       uint16 rrtype, const std::vector<base::StringPiece>& rrdatas)\n+      {\n+\tunsigned signed_data_len = 0;\n+\tfor (std::vector<base::StringPiece>::const_iterator i =\n+\t     rrdatas.begin();\n+\t     i != rrdatas.end(); i++) {\n+\t    signed_data_len += 2;\n+\t    signed_data_len += i->size();\n+\t}\n+\tscoped_array<unsigned char> signed_data(new unsigned\n+\t\t\t\t\t\tchar[signed_data_len]);\n+      }\n+}\n+"}, {"sha": "10aaba4e5b93c472ce8f92af2e02a63101f9cc57", "filename": "gcc/tree-scalar-evolution.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb723fa314a09f6cf8708f8243a436ff9475558c/gcc%2Ftree-scalar-evolution.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb723fa314a09f6cf8708f8243a436ff9475558c/gcc%2Ftree-scalar-evolution.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-scalar-evolution.c?ref=eb723fa314a09f6cf8708f8243a436ff9475558c", "patch": "@@ -1642,8 +1642,8 @@ interpret_loop_phi (struct loop *loop, gimple loop_phi_node)\n       else if (TREE_CODE (res) == POLYNOMIAL_CHREC)\n \tnew_init = CHREC_LEFT (res);\n       STRIP_USELESS_TYPE_CONVERSION (new_init);\n-      gcc_assert (TREE_CODE (new_init) != POLYNOMIAL_CHREC);\n-      if (!operand_equal_p (init_cond, new_init, 0))\n+      if (TREE_CODE (new_init) == POLYNOMIAL_CHREC\n+\t  || !operand_equal_p (init_cond, new_init, 0))\n \treturn chrec_dont_know;\n     }\n "}]}