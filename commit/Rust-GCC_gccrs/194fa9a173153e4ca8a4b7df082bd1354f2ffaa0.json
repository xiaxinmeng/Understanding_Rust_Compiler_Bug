{"sha": "194fa9a173153e4ca8a4b7df082bd1354f2ffaa0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTk0ZmE5YTE3MzE1M2U0Y2E4YTRiN2RmMDgyYmQxMzU0ZjJmZmFhMA==", "commit": {"author": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2016-10-12T13:09:06Z"}, "committer": {"name": "Thomas Schwinge", "email": "tschwinge@gcc.gnu.org", "date": "2016-10-12T13:09:06Z"}, "message": "In gcc/Makefile.in, factor out SELFTEST_FLAGS\n\n\tgcc/\n\t* Makefile.in (SELFTEST_FLAGS): New variable.\n\t(s-selftest, selftest-gdb, selftest-valgrind): Use it.\n\nFrom-SVN: r241043", "tree": {"sha": "61db08da787a114e029a16c4d07cbb10588809b3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/61db08da787a114e029a16c4d07cbb10588809b3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/194fa9a173153e4ca8a4b7df082bd1354f2ffaa0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/194fa9a173153e4ca8a4b7df082bd1354f2ffaa0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/194fa9a173153e4ca8a4b7df082bd1354f2ffaa0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/194fa9a173153e4ca8a4b7df082bd1354f2ffaa0/comments", "author": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "96f0a5131cf0571d75213c9ac7052e8118ce3fe8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96f0a5131cf0571d75213c9ac7052e8118ce3fe8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/96f0a5131cf0571d75213c9ac7052e8118ce3fe8"}], "stats": {"total": 14, "additions": 11, "deletions": 3}, "files": [{"sha": "003316f5825983e5e7abeb5147b6583440e8d60a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/194fa9a173153e4ca8a4b7df082bd1354f2ffaa0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/194fa9a173153e4ca8a4b7df082bd1354f2ffaa0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=194fa9a173153e4ca8a4b7df082bd1354f2ffaa0", "patch": "@@ -1,5 +1,8 @@\n 2016-10-12  Thomas Schwinge  <thomas@codesourcery.com>\n \n+\t* Makefile.in (SELFTEST_FLAGS): New variable.\n+\t(s-selftest, selftest-gdb, selftest-valgrind): Use it.\n+\n \t* vmsdbgout.c (vmsdbg_debug_hooks): Add filename parameter to\n \tearly_finish hook.\n "}, {"sha": "02d0c4511aee8cfd47829240d91e62cb273287be", "filename": "gcc/Makefile.in", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/194fa9a173153e4ca8a4b7df082bd1354f2ffaa0/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/194fa9a173153e4ca8a4b7df082bd1354f2ffaa0/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=194fa9a173153e4ca8a4b7df082bd1354f2ffaa0", "patch": "@@ -1877,25 +1877,30 @@ endif\n # This does the things that can't be done on the host machine.\n rest.cross: specs\n \n+# GCC's selftests.\n+# Specify a dummy input file to placate the driver.\n+SELFTEST_FLAGS = -x c /dev/null -S -fself-test\n+\n # Run the selftests during the build once we have a driver and a cc1,\n # so that self-test failures are caught as early as possible.\n # Use \"s-selftest\" to ensure that we only run the selftests if the\n # driver or cc1 change.\n .PHONY: selftest\n selftest: s-selftest\n s-selftest: $(GCC_PASSES) cc1$(exeext) stmp-int-hdrs\n-\t$(GCC_FOR_TARGET) -xc -S -c /dev/null -fself-test\n+\t$(GCC_FOR_TARGET) $(SELFTEST_FLAGS)\n \t$(STAMP) $@\n \n # Convenience method for running selftests under gdb:\n .PHONY: selftest-gdb\n selftest-gdb: $(GCC_PASSES) cc1$(exeext) stmp-int-hdrs\n-\t$(GCC_FOR_TARGET) -xc -S -c /dev/null -fself-test -wrapper gdb,--args\n+\t$(GCC_FOR_TARGET) $(SELFTEST_FLAGS) \\\n+\t  -wrapper gdb,--args\n \n # Convenience method for running selftests under valgrind:\n .PHONY: selftest-valgrind\n selftest-valgrind: $(GCC_PASSES) cc1$(exeext) stmp-int-hdrs\n-\t$(GCC_FOR_TARGET) -xc -S -c /dev/null -fself-test \\\n+\t$(GCC_FOR_TARGET) $(SELFTEST_FLAGS) \\\n \t  -wrapper valgrind,--leak-check=full\n \n # Recompile all the language-independent object files."}]}