{"sha": "2560723055a6b607259d6de8e789c73fe7c37c80", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjU2MDcyMzA1NWE2YjYwNzI1OWQ2ZGU4ZTc4OWM3M2ZlN2MzN2M4MA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2016-10-11T19:50:31Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2016-10-11T19:50:31Z"}, "message": "system-linux-armeb.ads (Backend_Overflow_Checks): Change to True.\n\n\t* system-linux-armeb.ads (Backend_Overflow_Checks): Change to True.\n\t* system-linux-mips.ads (Backend_Overflow_Checks): Likewise.\n\t* system-linux-mips64el.ads (Backend_Overflow_Checks): Likewise.\n\t* system-linux-mipsel.ads (Backend_Overflow_Checks): Likewise.\n\t* system-linux-sparcv9.ads (Backend_Overflow_Checks): Likewise.\n\t* system-rtems.ads: Likewise.\n\nFrom-SVN: r241003", "tree": {"sha": "3ef3c029e7d09c4ed11d4de5556248431a7c15cb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3ef3c029e7d09c4ed11d4de5556248431a7c15cb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2560723055a6b607259d6de8e789c73fe7c37c80", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2560723055a6b607259d6de8e789c73fe7c37c80", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2560723055a6b607259d6de8e789c73fe7c37c80", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2560723055a6b607259d6de8e789c73fe7c37c80/comments", "author": null, "committer": null, "parents": [{"sha": "acda0629ffd1ce4fa1189f9b36e724267cc63795", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/acda0629ffd1ce4fa1189f9b36e724267cc63795", "html_url": "https://github.com/Rust-GCC/gccrs/commit/acda0629ffd1ce4fa1189f9b36e724267cc63795"}], "stats": {"total": 54, "additions": 32, "deletions": 22}, "files": [{"sha": "7e71e44b2698fbd89766a8c68159b9d97d1785a9", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 23, "deletions": 13, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2560723055a6b607259d6de8e789c73fe7c37c80/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2560723055a6b607259d6de8e789c73fe7c37c80/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=2560723055a6b607259d6de8e789c73fe7c37c80", "patch": "@@ -1,32 +1,42 @@\n+2016-10-11  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* system-linux-armeb.ads (Backend_Overflow_Checks): Change to True.\n+\t* system-linux-mips.ads (Backend_Overflow_Checks): Likewise.\n+\t* system-linux-mips64el.ads (Backend_Overflow_Checks): Likewise.\n+\t* system-linux-mipsel.ads (Backend_Overflow_Checks): Likewise.\n+\t* system-linux-sparcv9.ads (Backend_Overflow_Checks): Likewise.\n+\t* system-rtems.ads: Likewise.\n+\n 2016-10-11  Andris Pavenis  <andris.pavenis@iki.fi>\n \n \t* adaint.c: Include process.h, signal.h, dir.h and utime.h for DJGPP.\n-\tISALPHA: include <ctype.h> and define to isalpha for DJGPP when IN_RTS is defined.\n+\tISALPHA: include <ctype.h> and define to isalpha for DJGPP when IN_RTS\n+\tis defined.\n \t(DIR_SEPARATOR) define to '\\\\' for DJGPP.\n-\t(__gnat_get_file_names_case_sensitive): return 0 for DJGPP unless\n-\toverriden in environment\n-\t(__gnat_is_absolute_path): Support MS-DOS style absolute paths for DJGPP.\n+\t(__gnat_get_file_names_case_sensitive): Return 0 for DJGPP unless\n+\toverriden in environment.\n+\t(__gnat_is_absolute_path): Support MS-DOS absolute paths for DJGPP.\n \t(__gnat_portable_spawn): Use spewnvp for DJGPP.\n \t(__gnat_portable_no_block_spawn): Use spawnvp for DJGPP.\n \t(__gnat_portable_wait): Return 0 for DJGPP.\n \n 2016-10-11  Andris Pavenis  <andris.pavenis@iki.fi>\n \n-\t* gcc-interface/Makefile.in (LIBGNAT_TARGET_PAIRS): Define for DJGPP target\n-\t(EH_MECHANISM): Define to -gcc for DJGPP\n-\t* system-djgpp.ads: New file\n+\t* gcc-interface/Makefile.in (LIBGNAT_TARGET_PAIRS): Define for DJGPP.\n+\t(EH_MECHANISM): Define to -gcc for DJGPP.\n+\t* system-djgpp.ads: New file.\n \n 2016-10-11  Andris Pavenis  <andris.pavenis@iki.fi>\n \n \t* ctrl_c.c: Do not use macro SA_RESTART for DJGPP.\n \t* gsocket.h: Do not support sockets for DJGPP.\n-\t* init.c (__gnat_install_handler): Implememt for DJGPP\n-\t* sysdep.c: Include <io.h> for DJGPP\n-\t(_setmode): Define to setmode for DJGPP\n-\t(__gnat_set_mode): Add implementation for DJGPP\n-\t(__gnat_localtime_tzoff): Use localtime_r for DJGPP\n+\t* init.c (__gnat_install_handler): Implememt for DJGPP.\n+\t* sysdep.c: Include <io.h> for DJGPP.\n+\t(_setmode): Define to setmode for DJGPP.\n+\t(__gnat_set_mode): Add implementation for DJGPP.\n+\t(__gnat_localtime_tzoff): Use localtime_r for DJGPP.\n \t* terminals.c: Add DJGPP to list of unsupported platforms.\n-\t* env.c (__gnat_clearenv): use _gnat_unsetenv on all entries for DJGPP\n+\t* env.c (__gnat_clearenv): Use _gnat_unsetenv on all entries for DJGPP.\n \n 2016-10-11  Pierre-Marie de Rodat  <derodat@adacore.com>\n "}, {"sha": "6c08d42862464ab1a9160514c9ff0d10e31638e5", "filename": "gcc/ada/system-linux-armeb.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2560723055a6b607259d6de8e789c73fe7c37c80/gcc%2Fada%2Fsystem-linux-armeb.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2560723055a6b607259d6de8e789c73fe7c37c80/gcc%2Fada%2Fsystem-linux-armeb.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-linux-armeb.ads?ref=2560723055a6b607259d6de8e789c73fe7c37c80", "patch": "@@ -7,7 +7,7 @@\n --                                 S p e c                                  --\n --                        (GNU-Linux/ARMEB Version)                         --\n --                                                                          --\n---          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -127,7 +127,7 @@ private\n    --  of the individual switch values.\n \n    Backend_Divide_Checks     : constant Boolean := False;\n-   Backend_Overflow_Checks   : constant Boolean := False;\n+   Backend_Overflow_Checks   : constant Boolean := True;\n    Command_Line_Args         : constant Boolean := True;\n    Configurable_Run_Time     : constant Boolean := False;\n    Denorm                    : constant Boolean := True;\n@@ -150,7 +150,7 @@ private\n    Always_Compatible_Rep     : constant Boolean := False;\n    Suppress_Standard_Library : constant Boolean := False;\n    Use_Ada_Main_Program_Name : constant Boolean := False;\n-   Frontend_Exceptions       : constant Boolean := True;\n-   ZCX_By_Default            : constant Boolean := False;\n+   Frontend_Exceptions       : constant Boolean := False;\n+   ZCX_By_Default            : constant Boolean := True;\n \n end System;"}, {"sha": "8b56a30a3b3074c920191896300bbbe93693d2c8", "filename": "gcc/ada/system-linux-mips.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2560723055a6b607259d6de8e789c73fe7c37c80/gcc%2Fada%2Fsystem-linux-mips.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2560723055a6b607259d6de8e789c73fe7c37c80/gcc%2Fada%2Fsystem-linux-mips.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-linux-mips.ads?ref=2560723055a6b607259d6de8e789c73fe7c37c80", "patch": "@@ -119,7 +119,7 @@ private\n    --  of the individual switch values.\n \n    Backend_Divide_Checks     : constant Boolean := False;\n-   Backend_Overflow_Checks   : constant Boolean := False;\n+   Backend_Overflow_Checks   : constant Boolean := True;\n    Command_Line_Args         : constant Boolean := True;\n    Configurable_Run_Time     : constant Boolean := False;\n    Denorm                    : constant Boolean := True;"}, {"sha": "a4d98f57ee3e57f9f461f1cac3672fa9dbfed998", "filename": "gcc/ada/system-linux-mips64el.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2560723055a6b607259d6de8e789c73fe7c37c80/gcc%2Fada%2Fsystem-linux-mips64el.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2560723055a6b607259d6de8e789c73fe7c37c80/gcc%2Fada%2Fsystem-linux-mips64el.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-linux-mips64el.ads?ref=2560723055a6b607259d6de8e789c73fe7c37c80", "patch": "@@ -119,7 +119,7 @@ private\n    --  of the individual switch values.\n \n    Backend_Divide_Checks     : constant Boolean := False;\n-   Backend_Overflow_Checks   : constant Boolean := False;\n+   Backend_Overflow_Checks   : constant Boolean := True;\n    Command_Line_Args         : constant Boolean := True;\n    Configurable_Run_Time     : constant Boolean := False;\n    Denorm                    : constant Boolean := True;"}, {"sha": "91a9dbbb12e32fc72de4fb700260f69f7ab178c9", "filename": "gcc/ada/system-linux-mipsel.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2560723055a6b607259d6de8e789c73fe7c37c80/gcc%2Fada%2Fsystem-linux-mipsel.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2560723055a6b607259d6de8e789c73fe7c37c80/gcc%2Fada%2Fsystem-linux-mipsel.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-linux-mipsel.ads?ref=2560723055a6b607259d6de8e789c73fe7c37c80", "patch": "@@ -119,7 +119,7 @@ private\n    --  of the individual switch values.\n \n    Backend_Divide_Checks     : constant Boolean := False;\n-   Backend_Overflow_Checks   : constant Boolean := False;\n+   Backend_Overflow_Checks   : constant Boolean := True;\n    Command_Line_Args         : constant Boolean := True;\n    Configurable_Run_Time     : constant Boolean := False;\n    Denorm                    : constant Boolean := True;"}, {"sha": "575619aa72cb88d4ef17a9cb2a37c8aaa11f1591", "filename": "gcc/ada/system-linux-sparcv9.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2560723055a6b607259d6de8e789c73fe7c37c80/gcc%2Fada%2Fsystem-linux-sparcv9.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2560723055a6b607259d6de8e789c73fe7c37c80/gcc%2Fada%2Fsystem-linux-sparcv9.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-linux-sparcv9.ads?ref=2560723055a6b607259d6de8e789c73fe7c37c80", "patch": "@@ -119,7 +119,7 @@ private\n    --  of the individual switch values.\n \n    Backend_Divide_Checks     : constant Boolean := False;\n-   Backend_Overflow_Checks   : constant Boolean := False;\n+   Backend_Overflow_Checks   : constant Boolean := True;\n    Command_Line_Args         : constant Boolean := True;\n    Configurable_Run_Time     : constant Boolean := False;\n    Denorm                    : constant Boolean := True;"}, {"sha": "261a588725d8295dbd41f83de6aebb61ae25f8ab", "filename": "gcc/ada/system-rtems.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2560723055a6b607259d6de8e789c73fe7c37c80/gcc%2Fada%2Fsystem-rtems.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2560723055a6b607259d6de8e789c73fe7c37c80/gcc%2Fada%2Fsystem-rtems.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-rtems.ads?ref=2560723055a6b607259d6de8e789c73fe7c37c80", "patch": "@@ -138,7 +138,7 @@ private\n    --  of the individual switch values.\n \n    Backend_Divide_Checks     : constant Boolean := False;\n-   Backend_Overflow_Checks   : constant Boolean := False;\n+   Backend_Overflow_Checks   : constant Boolean := True;\n    Command_Line_Args         : constant Boolean := True;\n    Configurable_Run_Time     : constant Boolean := False;\n    Denorm                    : constant Boolean := True;"}]}