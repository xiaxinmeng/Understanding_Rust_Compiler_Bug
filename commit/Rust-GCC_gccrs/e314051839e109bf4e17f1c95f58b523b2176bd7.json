{"sha": "e314051839e109bf4e17f1c95f58b523b2176bd7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTMxNDA1MTgzOWUxMDliZjRlMTdmMWM5NWY1OGI1MjNiMjE3NmJkNw==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2012-12-20T18:04:56Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2012-12-20T18:04:56Z"}, "message": "s390: Use risbgz for AND\n\n        * config/s390/s390.md (*anddi3_cc): Add risbg alternative.\n        (*anddi3_cconly, *anddi3): Likewise.\n        (*andsi3, *andsi3_cconly, *andsi3_zarch): Likewise.\n\nCo-Authored-By: Andreas Krebbel <Andreas.Krebbel@de.ibm.com>\n\nFrom-SVN: r194642", "tree": {"sha": "1fc92fb9d3b23ba759c32829a50eab1c0f3a6ee9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1fc92fb9d3b23ba759c32829a50eab1c0f3a6ee9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e314051839e109bf4e17f1c95f58b523b2176bd7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e314051839e109bf4e17f1c95f58b523b2176bd7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e314051839e109bf4e17f1c95f58b523b2176bd7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e314051839e109bf4e17f1c95f58b523b2176bd7/comments", "author": null, "committer": null, "parents": [{"sha": "d378b98328cd8a2204ac59ec22a33f0b04f72011", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d378b98328cd8a2204ac59ec22a33f0b04f72011", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d378b98328cd8a2204ac59ec22a33f0b04f72011"}], "stats": {"total": 111, "additions": 66, "deletions": 45}, "files": [{"sha": "7972aa133321ecd9304f847cdfcf73d292ec87f5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e314051839e109bf4e17f1c95f58b523b2176bd7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e314051839e109bf4e17f1c95f58b523b2176bd7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e314051839e109bf4e17f1c95f58b523b2176bd7", "patch": "@@ -12,6 +12,10 @@\n \n \t* config/s390/s390.md (*insv_l_di_reg_extimm): Un-macroize from :P.\n \n+\t* config/s390/s390.md (*anddi3_cc): Add risbg alternative.\n+\t(*anddi3_cconly, *anddi3): Likewise.\n+\t(*andsi3, *andsi3_cconly, *andsi3_zarch): Likewise.\n+\n 2012-12-20  Thomas Schwinge  <thomas@codesourcery.com>\n \n \tPR bootstrap/55202"}, {"sha": "0887eae21958254f1116e1c3463916659a40a726", "filename": "gcc/config/s390/s390.md", "status": "modified", "additions": 62, "deletions": 45, "changes": 107, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e314051839e109bf4e17f1c95f58b523b2176bd7/gcc%2Fconfig%2Fs390%2Fs390.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e314051839e109bf4e17f1c95f58b523b2176bd7/gcc%2Fconfig%2Fs390%2Fs390.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.md?ref=e314051839e109bf4e17f1c95f58b523b2176bd7", "patch": "@@ -5999,44 +5999,50 @@\n \n (define_insn \"*anddi3_cc\"\n   [(set (reg CC_REGNUM)\n-        (compare (and:DI (match_operand:DI 1 \"nonimmediate_operand\" \"%0,d, 0\")\n-                         (match_operand:DI 2 \"general_operand\"      \" d,d,RT\"))\n-                 (const_int 0)))\n-   (set (match_operand:DI 0 \"register_operand\"                      \"=d,d, d\")\n+        (compare\n+\t  (and:DI (match_operand:DI 1 \"nonimmediate_operand\" \"%0,d, 0,    d\")\n+                  (match_operand:DI 2 \"general_operand\"      \" d,d,RT,NxxDq\"))\n+          (const_int 0)))\n+   (set (match_operand:DI 0 \"register_operand\"               \"=d,d, d,    d\")\n         (and:DI (match_dup 1) (match_dup 2)))]\n-  \"s390_match_ccmode(insn, CCTmode) && TARGET_ZARCH\"\n+  \"TARGET_ZARCH && s390_match_ccmode(insn, CCTmode)\"\n   \"@\n    ngr\\t%0,%2\n    ngrk\\t%0,%1,%2\n-   ng\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RRE,RRF,RXY\")\n-   (set_attr \"cpu_facility\" \"*,z196,*\")\n-   (set_attr \"z10prop\" \"z10_super_E1,*,z10_super_E1\")])\n+   ng\\t%0,%2\n+   risbg\\t%0,%1,%s2,128+%e2,0\"\n+  [(set_attr \"op_type\"  \"RRE,RRF,RXY,RIE\")\n+   (set_attr \"cpu_facility\" \"*,z196,*,z10\")\n+   (set_attr \"z10prop\" \"z10_super_E1,*,z10_super_E1,z10_super_E1\")])\n \n (define_insn \"*anddi3_cconly\"\n   [(set (reg CC_REGNUM)\n-        (compare (and:DI (match_operand:DI 1 \"nonimmediate_operand\" \"%0,d, 0\")\n-                         (match_operand:DI 2 \"general_operand\"      \" d,d,RT\"))\n+        (compare\n+\t  (and:DI (match_operand:DI 1 \"nonimmediate_operand\" \"%0,d, 0,    d\")\n+                  (match_operand:DI 2 \"general_operand\"      \" d,d,RT,NxxDq\"))\n                  (const_int 0)))\n-   (clobber (match_scratch:DI 0                                     \"=d,d, d\"))]\n-  \"s390_match_ccmode(insn, CCTmode) && TARGET_ZARCH\n+   (clobber (match_scratch:DI 0                              \"=d,d, d,    d\"))]\n+  \"TARGET_ZARCH\n+   && s390_match_ccmode(insn, CCTmode)\n    /* Do not steal TM patterns.  */\n    && s390_single_part (operands[2], DImode, HImode, 0) < 0\"\n   \"@\n    ngr\\t%0,%2\n    ngrk\\t%0,%1,%2\n-   ng\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RRE,RRF,RXY\")\n-   (set_attr \"cpu_facility\" \"*,z196,*\")\n-   (set_attr \"z10prop\" \"z10_super_E1,*,z10_super_E1\")])\n+   ng\\t%0,%2\n+   risbg\\t%0,%1,%s2,128+%e2,0\"\n+  [(set_attr \"op_type\"  \"RRE,RRF,RXY,RIE\")\n+   (set_attr \"cpu_facility\" \"*,z196,*,z10\")\n+   (set_attr \"z10prop\" \"z10_super_E1,*,z10_super_E1,z10_super_E1\")])\n \n (define_insn \"*anddi3\"\n   [(set (match_operand:DI 0 \"nonimmediate_operand\"\n-                            \"=d,d,    d,    d,    d,    d,    d,    d,d,d, d,   AQ,Q\")\n-        (and:DI (match_operand:DI 1 \"nonimmediate_operand\"\n-                            \"%d,o,    0,    0,    0,    0,    0,    0,0,d, 0,    0,0\")\n-                (match_operand:DI 2 \"general_operand\"\n-                            \"M, M,N0HDF,N1HDF,N2HDF,N3HDF,N0SDF,N1SDF,d,d,RT,NxQDF,Q\")))\n+            \"=d,d,    d,    d,    d,    d,    d,    d,d,d, d,    d,   AQ,Q\")\n+        (and:DI\n+\t  (match_operand:DI 1 \"nonimmediate_operand\"\n+            \"%d,o,    0,    0,    0,    0,    0,    0,0,d, 0,    d,    0,0\")\n+          (match_operand:DI 2 \"general_operand\"\n+            \"M, M,N0HDF,N1HDF,N2HDF,N3HDF,N0SDF,N1SDF,d,d,RT,NxxDq,NxQDF,Q\")))\n    (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_ZARCH && s390_logical_operator_ok_p (operands)\"\n   \"@\n@@ -6051,10 +6057,11 @@\n    ngr\\t%0,%2\n    ngrk\\t%0,%1,%2\n    ng\\t%0,%2\n+   risbg\\t%0,%1,%s2,128+%e2,0\n    #\n    #\"\n-  [(set_attr \"op_type\" \"RRE,RXE,RI,RI,RI,RI,RIL,RIL,RRE,RRF,RXY,SI,SS\")\n-   (set_attr \"cpu_facility\" \"*,*,*,*,*,*,extimm,extimm,*,z196,*,*,*\")\n+  [(set_attr \"op_type\" \"RRE,RXE,RI,RI,RI,RI,RIL,RIL,RRE,RRF,RXY,RIE,SI,SS\")\n+   (set_attr \"cpu_facility\" \"*,*,*,*,*,*,extimm,extimm,*,z196,*,z10,*,*\")\n    (set_attr \"z10prop\" \"*,\n                         *,\n                         z10_super_E1,\n@@ -6066,6 +6073,7 @@\n                         z10_super_E1,\n                         *,\n                         z10_super_E1,\n+                        z10_super_E1,\n                         *,\n                         *\")])\n \n@@ -6086,28 +6094,34 @@\n \n (define_insn \"*andsi3_cc\"\n   [(set (reg CC_REGNUM)\n-        (compare (and:SI (match_operand:SI 1 \"nonimmediate_operand\" \"%0,0,d,0,0\")\n-                         (match_operand:SI 2 \"general_operand\"      \"Os,d,d,R,T\"))\n-                 (const_int 0)))\n-   (set (match_operand:SI 0 \"register_operand\"                      \"=d,d,d,d,d\")\n+        (compare\n+\t  (and:SI\n+\t    (match_operand:SI 1 \"nonimmediate_operand\" \"%0,0,d,0,0,    d\")\n+            (match_operand:SI 2 \"general_operand\"      \"Os,d,d,R,T,NxxSq\"))\n+          (const_int 0)))\n+   (set (match_operand:SI 0 \"register_operand\"         \"=d,d,d,d,d,    d\")\n         (and:SI (match_dup 1) (match_dup 2)))]\n   \"s390_match_ccmode(insn, CCTmode)\"\n   \"@\n    nilf\\t%0,%o2\n    nr\\t%0,%2\n    nrk\\t%0,%1,%2\n    n\\t%0,%2\n-   ny\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RIL,RR,RRF,RX,RXY\")\n-   (set_attr \"cpu_facility\" \"*,*,z196,*,*\")\n-   (set_attr \"z10prop\" \"z10_super_E1,z10_super_E1,*,z10_super_E1,z10_super_E1\")])\n+   ny\\t%0,%2\n+   risbg\\t%0,%1,%t2,128+%f2,0\"\n+  [(set_attr \"op_type\"  \"RIL,RR,RRF,RX,RXY,RIE\")\n+   (set_attr \"cpu_facility\" \"*,*,z196,*,*,z10\")\n+   (set_attr \"z10prop\" \"z10_super_E1,z10_super_E1,*,\n+\t\t\tz10_super_E1,z10_super_E1,z10_super_E1\")])\n \n (define_insn \"*andsi3_cconly\"\n   [(set (reg CC_REGNUM)\n-        (compare (and:SI (match_operand:SI 1 \"nonimmediate_operand\" \"%0,0,d,0,0\")\n-                         (match_operand:SI 2 \"general_operand\"      \"Os,d,d,R,T\"))\n-                 (const_int 0)))\n-   (clobber (match_scratch:SI 0                                     \"=d,d,d,d,d\"))]\n+        (compare\n+\t  (and:SI\n+\t    (match_operand:SI 1 \"nonimmediate_operand\" \"%0,0,d,0,0,    d\")\n+            (match_operand:SI 2 \"general_operand\"      \"Os,d,d,R,T,NxxSq\"))\n+          (const_int 0)))\n+   (clobber (match_scratch:SI 0                        \"=d,d,d,d,d,    d\"))]\n   \"s390_match_ccmode(insn, CCTmode)\n    /* Do not steal TM patterns.  */\n    && s390_single_part (operands[2], SImode, HImode, 0) < 0\"\n@@ -6116,19 +6130,20 @@\n    nr\\t%0,%2\n    nrk\\t%0,%1,%2\n    n\\t%0,%2\n-   ny\\t%0,%2\"\n-  [(set_attr \"op_type\"  \"RIL,RR,RRF,RX,RXY\")\n-   (set_attr \"cpu_facility\" \"*,*,z196,*,*\")\n+   ny\\t%0,%2\n+   risbg\\t%0,%1,%t2,128+%f2,0\"\n+  [(set_attr \"op_type\"  \"RIL,RR,RRF,RX,RXY,RIE\")\n+   (set_attr \"cpu_facility\" \"*,*,z196,*,*,z10\")\n    (set_attr \"z10prop\" \"z10_super_E1,z10_super_E1,*,\n-                        z10_super_E1,z10_super_E1\")])\n+                        z10_super_E1,z10_super_E1,z10_super_E1\")])\n \n (define_insn \"*andsi3_zarch\"\n   [(set (match_operand:SI 0 \"nonimmediate_operand\"\n-                            \"=d,d,    d,    d, d,d,d,d,d,   AQ,Q\")\n+                            \"=d,d,    d,    d, d,d,d,d,d,    d,   AQ,Q\")\n         (and:SI (match_operand:SI 1 \"nonimmediate_operand\"\n-\t\t\t    \"%d,o,    0,    0, 0,0,d,0,0,    0,0\")\n+\t\t\t    \"%d,o,    0,    0, 0,0,d,0,0,    d,    0,0\")\n                 (match_operand:SI 2 \"general_operand\"\n-\t\t\t    \" M,M,N0HSF,N1HSF,Os,d,d,R,T,NxQSF,Q\")))\n+\t\t\t    \" M,M,N0HSF,N1HSF,Os,d,d,R,T,NxxSq,NxQSF,Q\")))\n    (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_ZARCH && s390_logical_operator_ok_p (operands)\"\n   \"@\n@@ -6141,10 +6156,11 @@\n    nrk\\t%0,%1,%2\n    n\\t%0,%2\n    ny\\t%0,%2\n+   risbg\\t%0,%1,%t2,128+%f2,0\n    #\n    #\"\n-  [(set_attr \"op_type\"  \"RRE,RXE,RI,RI,RIL,RR,RRF,RX,RXY,SI,SS\")\n-   (set_attr \"cpu_facility\" \"*,*,*,*,*,*,z196,*,*,*,*\")\n+  [(set_attr \"op_type\"  \"RRE,RXE,RI,RI,RIL,RR,RRF,RX,RXY,RIE,SI,SS\")\n+   (set_attr \"cpu_facility\" \"*,*,*,*,*,*,z196,*,*,z10,*,*\")\n    (set_attr \"z10prop\" \"*,\n                         *,\n                         z10_super_E1,\n@@ -6154,6 +6170,7 @@\n                         *,\n                         z10_super_E1,\n                         z10_super_E1,\n+                        z10_super_E1,\n                         *,\n                         *\")])\n "}]}