{"sha": "533e50f6ac9ee21fe5bcb223e8d6693466836d80", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTMzZTUwZjZhYzllZTIxZmU1YmNiMjIzZThkNjY5MzQ2NjgzNmQ4MA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2010-06-27T11:16:46Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2010-06-27T11:16:46Z"}, "message": "re PR tree-optimization/44683 (Optimization bug with copysign builtin)\n\n2010-06-27  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/44683\n\t* tree-ssa-dom.c (record_edge_info): Record equivalences for the\n\tfalse edge from the inverted condition.\n\n\t* gcc.c-torture/execute/pr44683.c: New testcase.\n\nFrom-SVN: r161467", "tree": {"sha": "b7e95918730899c33bd9f074f1909b234f57fc0c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b7e95918730899c33bd9f074f1909b234f57fc0c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/533e50f6ac9ee21fe5bcb223e8d6693466836d80", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/533e50f6ac9ee21fe5bcb223e8d6693466836d80", "html_url": "https://github.com/Rust-GCC/gccrs/commit/533e50f6ac9ee21fe5bcb223e8d6693466836d80", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/533e50f6ac9ee21fe5bcb223e8d6693466836d80/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "41a961e9918868f227325d767ce55c01c8171093", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41a961e9918868f227325d767ce55c01c8171093", "html_url": "https://github.com/Rust-GCC/gccrs/commit/41a961e9918868f227325d767ce55c01c8171093"}], "stats": {"total": 33, "additions": 31, "deletions": 2}, "files": [{"sha": "5a6908ca4dba213da7b31ce3284d75c18012e6db", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/533e50f6ac9ee21fe5bcb223e8d6693466836d80/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/533e50f6ac9ee21fe5bcb223e8d6693466836d80/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=533e50f6ac9ee21fe5bcb223e8d6693466836d80", "patch": "@@ -1,3 +1,9 @@\n+2010-06-27  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/44683\n+\t* tree-ssa-dom.c (record_edge_info): Record equivalences for the\n+\tfalse edge from the inverted condition.\n+\n 2010-06-27  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/44684"}, {"sha": "75a47a22a7f42e0365e815d3d03b0d8c3433e9a8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/533e50f6ac9ee21fe5bcb223e8d6693466836d80/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/533e50f6ac9ee21fe5bcb223e8d6693466836d80/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=533e50f6ac9ee21fe5bcb223e8d6693466836d80", "patch": "@@ -1,3 +1,8 @@\n+2010-06-27  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/44683\n+\t* gcc.c-torture/execute/pr44683.c: New testcase.\n+\n 2010-06-27  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gnat.dg/noreturn3.ad[sb]: New test."}, {"sha": "d0fd446f004fc6529461530071e0ef1312377b1e", "filename": "gcc/testsuite/gcc.c-torture/execute/pr44683.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/533e50f6ac9ee21fe5bcb223e8d6693466836d80/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr44683.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/533e50f6ac9ee21fe5bcb223e8d6693466836d80/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr44683.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr44683.c?ref=533e50f6ac9ee21fe5bcb223e8d6693466836d80", "patch": "@@ -0,0 +1,18 @@\n+int __attribute__((noinline,noclone))\n+copysign_bug (double x)\n+{\n+  if (x != 0.0 && (x * 0.5 == x))\n+    return 1;\n+  if (__builtin_copysign(1.0, x) < 0.0)\n+    return 2;\n+  else\n+    return 3;\n+}\n+int main(void)\n+{\n+  double x = -0.0;\n+  if (copysign_bug (x) != 2)\n+    __builtin_abort ();\n+  return 0;\n+}\n+"}, {"sha": "68338206a8ad8f742b320c78fa5ee7958f713b72", "filename": "gcc/tree-ssa-dom.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/533e50f6ac9ee21fe5bcb223e8d6693466836d80/gcc%2Ftree-ssa-dom.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/533e50f6ac9ee21fe5bcb223e8d6693466836d80/gcc%2Ftree-ssa-dom.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-dom.c?ref=533e50f6ac9ee21fe5bcb223e8d6693466836d80", "patch": "@@ -1635,7 +1635,7 @@ record_edge_info (basic_block bb)\n               edge_info = allocate_edge_info (false_edge);\n               record_conditions (edge_info, inverted, cond);\n \n-              if (code == NE_EXPR)\n+              if (TREE_CODE (inverted) == EQ_EXPR)\n                 {\n                   edge_info->lhs = op1;\n                   edge_info->rhs = op0;\n@@ -1662,7 +1662,7 @@ record_edge_info (basic_block bb)\n               edge_info = allocate_edge_info (false_edge);\n               record_conditions (edge_info, inverted, cond);\n \n-              if (TREE_CODE (cond) == NE_EXPR)\n+              if (TREE_CODE (inverted) == EQ_EXPR)\n                 {\n                   edge_info->lhs = op0;\n                   edge_info->rhs = op1;"}]}