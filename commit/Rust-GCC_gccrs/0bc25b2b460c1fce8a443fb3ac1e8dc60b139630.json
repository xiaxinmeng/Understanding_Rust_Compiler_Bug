{"sha": "0bc25b2b460c1fce8a443fb3ac1e8dc60b139630", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGJjMjViMmI0NjBjMWZjZThhNDQzZmIzYWMxZThkYzYwYjEzOTYzMA==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1996-05-31T19:02:31Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1996-05-31T19:02:31Z"}, "message": "Solaris fixes\n\nFrom-SVN: r12132", "tree": {"sha": "4943398181330ced0a63da15711e85b125350878", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4943398181330ced0a63da15711e85b125350878"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0bc25b2b460c1fce8a443fb3ac1e8dc60b139630", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0bc25b2b460c1fce8a443fb3ac1e8dc60b139630", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0bc25b2b460c1fce8a443fb3ac1e8dc60b139630", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0bc25b2b460c1fce8a443fb3ac1e8dc60b139630/comments", "author": null, "committer": null, "parents": [{"sha": "b2d8cf335caf08209d1b0dc031b87d907a36a814", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2d8cf335caf08209d1b0dc031b87d907a36a814", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b2d8cf335caf08209d1b0dc031b87d907a36a814"}], "stats": {"total": 204, "additions": 147, "deletions": 57}, "files": [{"sha": "d826435145d74207b5283e4f3960cb3192383c44", "filename": "gcc/config/rs6000/eabilesim.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0bc25b2b460c1fce8a443fb3ac1e8dc60b139630/gcc%2Fconfig%2Frs6000%2Feabilesim.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0bc25b2b460c1fce8a443fb3ac1e8dc60b139630/gcc%2Fconfig%2Frs6000%2Feabilesim.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Feabilesim.h?ref=0bc25b2b460c1fce8a443fb3ac1e8dc60b139630", "patch": "@@ -31,13 +31,13 @@ Boston, MA 02111-1307, USA.  */\n \n /* Make the simulator the default */\n #undef\tLIB_DEFAULT_SPEC\n-#define LIB_DEFAULT_SPEC LIB_SIM_SPEC\n+#define LIB_DEFAULT_SPEC \"%(lib_sim)\"\n \n #undef\tSTARTFILE_DEFAULT_SPEC\n-#define STARTFILE_DEFAULT_SPEC STARTFILE_SIM_SPEC\n+#define STARTFILE_DEFAULT_SPEC \"%(startfile_sim)\"\n \n #undef\tENDFILE_DEFAULT_SPEC\n-#define ENDFILE_DEFAULT_SPEC ENDFILE_SIM_SPEC\n+#define ENDFILE_DEFAULT_SPEC \"%(endfile_sim)\"\n \n #undef\tLINK_START_DEFAULT_SPEC\n-#define LINK_START_DEFAULT_SPEC LINK_START_SIM_SPEC\n+#define LINK_START_DEFAULT_SPEC \"%(link_start_sim)\""}, {"sha": "6a82244973f6fd6bad9086ef56dc58db3c83a54d", "filename": "gcc/config/rs6000/eabisim.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0bc25b2b460c1fce8a443fb3ac1e8dc60b139630/gcc%2Fconfig%2Frs6000%2Feabisim.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0bc25b2b460c1fce8a443fb3ac1e8dc60b139630/gcc%2Fconfig%2Frs6000%2Feabisim.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Feabisim.h?ref=0bc25b2b460c1fce8a443fb3ac1e8dc60b139630", "patch": "@@ -31,13 +31,13 @@ Boston, MA 02111-1307, USA.  */\n \n /* Make the simulator the default */\n #undef\tLIB_DEFAULT_SPEC\n-#define LIB_DEFAULT_SPEC LIB_SIM_SPEC\n+#define LIB_DEFAULT_SPEC \"%(lib_sim)\"\n \n #undef\tSTARTFILE_DEFAULT_SPEC\n-#define STARTFILE_DEFAULT_SPEC STARTFILE_SIM_SPEC\n+#define STARTFILE_DEFAULT_SPEC \"%(startfile_sim)\"\n \n #undef\tENDFILE_DEFAULT_SPEC\n-#define ENDFILE_DEFAULT_SPEC ENDFILE_SIM_SPEC\n+#define ENDFILE_DEFAULT_SPEC \"%(endfile_sim)\"\n \n #undef\tLINK_START_DEFAULT_SPEC\n-#define LINK_START_DEFAULT_SPEC LINK_START_SIM_SPEC\n+#define LINK_START_DEFAULT_SPEC \"%(link_start_sim)\""}, {"sha": "79a115ded4b7e9d5d5a13e41c8e504acb0d183eb", "filename": "gcc/config/rs6000/linux.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0bc25b2b460c1fce8a443fb3ac1e8dc60b139630/gcc%2Fconfig%2Frs6000%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0bc25b2b460c1fce8a443fb3ac1e8dc60b139630/gcc%2Fconfig%2Frs6000%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Flinux.h?ref=0bc25b2b460c1fce8a443fb3ac1e8dc60b139630", "patch": "@@ -30,16 +30,16 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n #define LINK_SPEC \"\"\n \n #undef\tLIB_DEFAULT_SPEC\n-#define LIB_DEFAULT_SPEC LIB_LINUX_SPEC\n+#define LIB_DEFAULT_SPEC \"%(lib_linux)\"\n \n #undef\tSTARTFILE_DEFAULT_SPEC\n-#define STARTFILE_DEFAULT_SPEC STARTFILE_LINUX_SPEC\n+#define STARTFILE_DEFAULT_SPEC \"%(startfile_linux)\"\n \n #undef\tENDFILE_DEFAULT_SPEC\n-#define ENDFILE_DEFAULT_SPEC ENDFILE_LINUX_SPEC\n+#define ENDFILE_DEFAULT_SPEC \"%(endfile_linux)\"\n \n #undef\tLINK_START_DEFAULT_SPEC\n-#define LINK_START_DEFAULT_SPEC LINK_START_LINUX_SPEC\n+#define LINK_START_DEFAULT_SPEC \"%(link_start_linux)\"\n \n #undef TARGET_VERSION\n #define TARGET_VERSION fprintf (stderr, \" (PowerPC Linux)\");"}, {"sha": "faa46c4bfbcdef32926eef74d2a320696e590a1c", "filename": "gcc/config/rs6000/sol-c0.c", "status": "modified", "additions": 52, "deletions": 6, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0bc25b2b460c1fce8a443fb3ac1e8dc60b139630/gcc%2Fconfig%2Frs6000%2Fsol-c0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0bc25b2b460c1fce8a443fb3ac1e8dc60b139630/gcc%2Fconfig%2Frs6000%2Fsol-c0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fsol-c0.c?ref=0bc25b2b460c1fce8a443fb3ac1e8dc60b139630", "patch": "@@ -28,13 +28,52 @@ Boston, MA 02111-1307, USA.  */\n extern char **_environ;\n \n extern int atexit (void (*__func) (void));\n-extern void __init (void);\n-extern void __fini (void);\n-extern void __do_global_ctors (void);\n+extern void __init (void) __attribute__ ((__longcall__));\n+extern void __fini (void) __attribute__ ((__longcall__));\n \n typedef void (*func_ptr) (void);\n int (*__atexit)(func_ptr) = atexit;\n \n+/* Exception handling */\n+struct ex_shared1 {\n+  void\t*prev;\n+  void\t*next;\n+  char\t*text_start;\n+  char\t*range_start;\n+  char\t*text_end;\n+  char\t*range_end;\n+};\n+\n+struct ex_shared {\n+  void (*ex_register) (struct ex_shared1 *);\n+  void (*ex_deregister) (struct ex_shared1 *);\n+  struct ex_shared1 shared_info;\n+};\n+\n+extern char _ex_text0[], _ex_text1[];\n+extern char _ex_range0[], _ex_range1[];\n+extern void _ex_register (struct ex_shared1 *);\n+extern void _ex_deregister (struct ex_shared1 *);\n+\n+struct ex_shared shared __attribute__((section(\".ex_shared\"))) = {\n+  _ex_register,\n+  _ex_deregister,\n+  {\n+    (void *)0,\n+    (void *)0,\n+    _ex_text0,\n+    _ex_range0,\n+    _ex_text1,\n+    _ex_range1\n+  }\n+};\n+\n+static void\n+deregister (void)\n+{\n+  (* shared.ex_deregister) (&shared.shared_info);\n+}\n+\n /* Start function.  */\n \n void\n@@ -48,10 +87,17 @@ _start(int argc, char *argv[], char *envp[], void *auxp, void (*termfunc)())\n   if (termfunc)\n     atexit (termfunc);\n \n-#if 0\n+  /* Register exception handler if needed */\n+  if (shared.ex_register)\n+    (* shared.ex_register) (&shared.shared_info);\n+\n+  if (shared.ex_deregister)\n+    atexit (deregister);\n+\n   /* Call any global constructors and destructors.  */\n-  __do_global_ctors ();\n-#endif\n+  __init ();\n+\n+  atexit (__fini);\n \n   /* Call the main program now */\n   ret = main (argc, argv, envp, auxp);"}, {"sha": "e4ead3210e67fe0de8aea2c47fdfc571b86382c2", "filename": "gcc/config/rs6000/sol-ci.asm", "status": "modified", "additions": 37, "deletions": 6, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0bc25b2b460c1fce8a443fb3ac1e8dc60b139630/gcc%2Fconfig%2Frs6000%2Fsol-ci.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0bc25b2b460c1fce8a443fb3ac1e8dc60b139630/gcc%2Fconfig%2Frs6000%2Fsol-ci.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fsol-ci.asm?ref=0bc25b2b460c1fce8a443fb3ac1e8dc60b139630", "patch": "@@ -39,6 +39,16 @@\n \t.file\t\"scrti.s\"\n \t.ident\t\"GNU C scrti.s\"\n \n+# Start of .text\n+\t.section \".text\"\n+\t.globl\t_ex_text0\n+_ex_text0:\n+\n+# Exception range\n+\t.section \".exception_ranges\",\"aw\"\n+\t.globl\t_ex_range0\n+_ex_range0:\n+\n # List of C++ constructors\n \t.section \".ctors\",\"aw\"\n \t.globl\t__CTOR_LIST__\n@@ -56,15 +66,36 @@ __DTOR_LIST__:\n \t.align 2\n \t.globl __init\n \t.type __init,@function\n-__init:\tstwu %r1,-16(%r1)\n-\tmflr %r0\n-\tstw %r0,12(%r1)\n+__init:\tstwu\t%r1,-16(%r1)\n+\tmflr\t%r0\n+#\tstw\t%r31,12(%r1)\n+\tstw\t%r0,16(%r1)\n+\n+#\tbl\t_GLOBAL_OFFSET_TABLE_-4\t# get the GOT address\n+#\tmflr\t%r31\n+#\n+#\tlwz\t%r3,_ex_shared0@got(%r31)\n+#\tlwz\t%r4,-8(%r3)\t\t# _ex_register or 0\n+#\tcmpi\t%cr0,%r4,0\n+#\tbeq\t.Lno_reg\n+#\tmtlr\t%r4\n+#\tblrl\n+#.Lno_reg:\n \n # Head of __fini function used for static destructors in Solaris\n \t.section \".fini\",\"ax\"\n \t.align 2\n \t.globl __fini\n \t.type __fini,@function\n-__fini:\tstwu %r1,-16(%r1)\n-\tmflr %r0\n-\tstw %r0,12(%r1)\n+__fini:\tstwu\t%r1,-16(%r1)\n+\tmflr\t%r0\n+\tstw\t%r31,12(%r1)\n+\tstw\t%r0,16(%r1)\n+\n+#\tbl\t_GLOBAL_OFFSET_TABLE_-4\t# get the GOT address\n+#\tmflr\t%r31\n+\n+# _environ and its evil twin environ, pointing to the environment\n+\t.comm\t_environ,4,4\n+\t.weak\tenviron\n+\t.set\tenviron,_environ"}, {"sha": "b911b8f8533d42a799484948348b7ab6992c1002", "filename": "gcc/config/rs6000/sol-cn.asm", "status": "modified", "additions": 20, "deletions": 6, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0bc25b2b460c1fce8a443fb3ac1e8dc60b139630/gcc%2Fconfig%2Frs6000%2Fsol-cn.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0bc25b2b460c1fce8a443fb3ac1e8dc60b139630/gcc%2Fconfig%2Frs6000%2Fsol-cn.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fsol-cn.asm?ref=0bc25b2b460c1fce8a443fb3ac1e8dc60b139630", "patch": "@@ -39,6 +39,12 @@\n \t.file\t\"scrtn.s\"\n \t.ident\t\"GNU C scrtn.s\"\n \n+# Default versions of exception handling register/deregister\n+\t.weak\t_ex_register\n+\t.weak\t_ex_deregister\n+\t.set\t_ex_register,0\n+\t.set\t_ex_deregister,0\n+\n # End list of C++ constructors\n \t.section \".ctors\",\"aw\"\n \t.globl\t__CTOR_END__\n@@ -51,16 +57,24 @@ __CTOR_END__:\n \t.type\t__DTOR_END__,@object\n __DTOR_END__:\n \n+\t.section \".text\"\n+\t.globl\t_ex_text1\n+_ex_text1:\n+\n+\t.section \".exception_ranges\",\"aw\"\n+\t.globl\t_ex_range1\n+_ex_range1:\n+\n # Tail of __init used for static constructors in Solaris\n \t.section \".init\",\"ax\"\n-\tlwz %r0,12(%r1)\n-\tmtlr %r0\n-\taddi %r1,%r1,16\n+\tlwz\t%r0,16(%r1)\n+\tmtlr\t%r0\n+\taddi\t%r1,%r1,16\n \tblr\n \n # Tail of __fini used for static destructors in Solaris\n \t.section \".fini\",\"ax\"\n-\tlwz %r0,12(%r1)\n-\tmtlr %r0\n-\taddi %r1,%r1,16\n+\tlwz\t%r0,16(%r1)\n+\tmtlr\t%r0\n+\taddi\t%r1,%r1,16\n \tblr"}, {"sha": "5b0e29f81ab3bad2d1d035eb37afe6478703200f", "filename": "gcc/config/rs6000/sol2.h", "status": "modified", "additions": 7, "deletions": 12, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0bc25b2b460c1fce8a443fb3ac1e8dc60b139630/gcc%2Fconfig%2Frs6000%2Fsol2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0bc25b2b460c1fce8a443fb3ac1e8dc60b139630/gcc%2Fconfig%2Frs6000%2Fsol2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fsol2.h?ref=0bc25b2b460c1fce8a443fb3ac1e8dc60b139630", "patch": "@@ -25,11 +25,6 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n #undef\tRS6000_ABI_NAME\n #define RS6000_ABI_NAME \"solaris\"\n \n-#undef CPP_PREDEFINES\n-#define CPP_PREDEFINES \\\n- \"-Dsun=1 -Dunix -D__svr4__ -DSVR4 -DPPC \\\n-  -D__ppc -Asystem(unix) -Asystem(svr4) -Acpu(powerpc) -Amachine(prep)\"\n-\n #undef ASM_CPU_SPEC\n #define ASM_CPU_SPEC \"%{fpic:-K PIC} %{fPIC:-K PIC} -le -s\"\n \n@@ -60,16 +55,19 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n \t\t\tMASK_REGNAMES)\n \n #undef\tLIB_DEFAULT_SPEC\n-#define LIB_DEFAULT_SPEC LIB_SOLARIS_SPEC\n+#define LIB_DEFAULT_SPEC \"%(lib_solaris)\"\n \n #undef\tSTARTFILE_DEFAULT_SPEC\n-#define STARTFILE_DEFAULT_SPEC STARTFILE_SOLARIS_SPEC\n+#define STARTFILE_DEFAULT_SPEC \"%(startfile_solaris)\"\n \n #undef\tENDFILE_DEFAULT_SPEC\n-#define ENDFILE_DEFAULT_SPEC ENDFILE_SOLARIS_SPEC\n+#define ENDFILE_DEFAULT_SPEC \"%(endfile_solaris)\"\n \n #undef\tLINK_START_DEFAULT_SPEC\n-#define LINK_START_DEFAULT_SPEC LINK_START_SOLARIS_SPEC\n+#define LINK_START_DEFAULT_SPEC \"%(link_start_solaris)\"\n+\n+#undef\tCPP_OS_DEFAULT_SPEC\n+#define\tCPP_OS_DEFAULT_SPEC \"%(cpp_os_solaris)\"\n \n /* Don't turn -B into -L if the argument specifies a relative file name.  */\n #undef\tRELATIVE_PREFIX_NOT_LINKDIR\n@@ -171,6 +169,3 @@ while (0)\n #define ASM_FORMAT_PRIVATE_NAME(OUTPUT, NAME, LABELNO)\t\\\n ( (OUTPUT) = (char *) alloca (strlen ((NAME)) + 10),\t\\\n   sprintf ((OUTPUT), \"%s_.%d\", (NAME), (LABELNO))) \n-\n-#define ASM_RELOCATION_EXPRESSIONS 1\n-"}, {"sha": "cf6740cd1e08ac89e18d50c4570baa19fc7dd01f", "filename": "gcc/config/rs6000/sysv4.h", "status": "modified", "additions": 11, "deletions": 6, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0bc25b2b460c1fce8a443fb3ac1e8dc60b139630/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0bc25b2b460c1fce8a443fb3ac1e8dc60b139630/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fsysv4.h?ref=0bc25b2b460c1fce8a443fb3ac1e8dc60b139630", "patch": "@@ -96,6 +96,7 @@ extern enum rs6000_sdata_type rs6000_sdata;\n   { \"sim\",\t\t 0 },\t\t\t\t\t\t\\\n   { \"mvme\",\t\t 0 },\t\t\t\t\t\t\\\n   { \"emb\",\t\t 0 },\t\t\t\t\t\t\\\n+  { \"solaris-cclib\",\t 0 },\t\t\t\t\t\t\\\n   { \"newlib\",\t\t 0 },\n \n /* Default ABI to use */\n@@ -185,8 +186,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n     }\t\t\t\t\t\t\t\t\t\\\n   else if (TARGET_SDATA)\t\t\t\t\t\t\\\n     rs6000_sdata = (TARGET_EABI) ? SDATA_EABI : SDATA_SYSV;\t\t\\\n-  else if (!TARGET_RELOCATABLE && !flag_pic\t\t\t\t\\\n-\t   && (DEFAULT_ABI == ABI_V4 || DEFAULT_ABI == ABI_SOLARIS))\t\\\n+  else if (!TARGET_RELOCATABLE && !flag_pic && DEFAULT_ABI == ABI_V4)\t\\\n     {\t\t\t\t\t\t\t\t\t\\\n       rs6000_sdata = SDATA_DATA;\t\t\t\t\t\\\n       target_flags |= MASK_SDATA;\t\t\t\t\t\\\n@@ -403,7 +403,8 @@ do {\t\t\t\t\t\t\t\t\t\\\n \n #define SDATA_SECTION_ASM_OP \"\\t.section \\\".sdata\\\",\\\"aw\\\"\"\n #define SDATA2_SECTION_ASM_OP \"\\t.section \\\".sdata2\\\",\\\"a\\\"\"\n-#define SBSS_SECTION_ASM_OP \"\\t.section \\\".sbss\\\",\\\"aw\\\",@nobits\"\n+#define SBSS_SECTION_ASM_OP \\\n+  ((DEFAULT_ABI == ABI_SOLARIS) ? \"\\t.section \\\".sbss\\\",\\\"aw\\\"\" : \"\\t.section \\\".sbss\\\",\\\"aw\\\",@nobits\")\n \n \n /* Besides the usual ELF sections, we need a toc section.  */\n@@ -1091,11 +1092,15 @@ scrti.o%s\"\n #endif\n \n #ifndef\tSTARTFILE_SOLARIS_SPEC\n-#define\tSTARTFILE_SOLARIS_SPEC \"scrti.o%s scrt0.o%s\"\n+#define\tSTARTFILE_SOLARIS_SPEC \"\\\n+%{!msolaris-cclib: scrti.o%s scrt0.o%s} \\\n+%{msolaris-cclib: crti.o%s crt1.o%s}\"\n #endif\n \n #ifndef\tENDFILE_SOLARIS_SPEC\n-#define\tENDFILE_SOLARIS_SPEC \"scrtn.o%s\"\n+#define\tENDFILE_SOLARIS_SPEC \"\\\n+%{!msolaris-cclib: scrtn.o%s} \\\n+%{msolaris-cclib: crtn.o%s}\"\n #endif\n \n #ifndef LINK_START_SOLARIS_SPEC\n@@ -1109,7 +1114,7 @@ scrti.o%s\"\n #ifndef CPP_OS_SOLARIS_SPEC\n #define CPP_OS_SOLARIS_SPEC \"-D__ppc -D__sun__=1 -D__unix__ -D__svr4__  -D__SVR4__ \\\n %{!ansi: -Dsun=1 -Dunix -DSVR4 -D__EXTENSIONS__ } \\\n--Asystem(unix) -Asystem(svr4) -Amachine(prep)\"\n+-Amachine(prep)\"\n #endif\n \n /* Define any extra SPECS that the compiler needs to generate.  */"}, {"sha": "69c7e754de22c2a1d01dff202a1d7a22ea472c3f", "filename": "gcc/config/rs6000/t-ppc", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0bc25b2b460c1fce8a443fb3ac1e8dc60b139630/gcc%2Fconfig%2Frs6000%2Ft-ppc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0bc25b2b460c1fce8a443fb3ac1e8dc60b139630/gcc%2Fconfig%2Frs6000%2Ft-ppc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Ft-ppc?ref=0bc25b2b460c1fce8a443fb3ac1e8dc60b139630", "patch": "@@ -26,20 +26,18 @@ eabi-ctors.c: $(srcdir)/config/rs6000/eabi-ctors.c\n # -mbig/-mlittle switches passed to gas.  The -mrelocatable support also needs\n # -mrelocatable passed to gas, so don't use it either.\n MULTILIB_OPTIONS\t= msoft-float \\\n-\t\t\t  mcall-sysv-noeabi/mcall-sysv-eabi/mcall-aix\n+\t\t\t  mcall-sysv-noeabi/mcall-sysv-eabi/mcall-aix/mcall-solaris\n \n MULTILIB_DIRNAMES\t= nof \\\n \t\t\t  le be \\\n-\t\t\t  cs ce ca\n+\t\t\t  cs ce ca sol\n \n MULTILIB_MATCHES\t= mlittle=mlittle-endian \\\n \t\t\t  mbig=mbig-endian \\\n-\t\t\t  mlittle=mcall-solaris \\\n \t\t\t  mbig=mcall-linux \\\n \t\t\t  msoft-float=mcpu?403 \\\n \t\t\t  msoft-float=mcpu?821 \\\n \t\t\t  msoft-float=mcpu?860 \\\n-\t\t\t  mcall-sysv-noeabi=mcall-solaris \\\n \t\t\t  mcall-sysv-noeabi=mcall-linux \\\n \t\t\t  mcall-sysv-eabi=meabi \\\n \t\t\t  mcall-sysv-noeabi=mno-eabi"}, {"sha": "115323d96bbf0edf71140a1f94976f55f44ab2e0", "filename": "gcc/config/rs6000/t-ppcgas", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0bc25b2b460c1fce8a443fb3ac1e8dc60b139630/gcc%2Fconfig%2Frs6000%2Ft-ppcgas", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0bc25b2b460c1fce8a443fb3ac1e8dc60b139630/gcc%2Fconfig%2Frs6000%2Ft-ppcgas", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Ft-ppcgas?ref=0bc25b2b460c1fce8a443fb3ac1e8dc60b139630", "patch": "@@ -26,26 +26,27 @@ eabi-ctors.c: $(srcdir)/config/rs6000/eabi-ctors.c\n MULTILIB_OPTIONS\t= msoft-float \\\n \t\t\t  mrelocatable \\\n \t\t\t  mlittle/mbig \\\n-\t\t\t  mcall-sysv-noeabi/mcall-sysv-eabi/mcall-aix\n+\t\t\t  mcall-sysv-noeabi/mcall-sysv-eabi/mcall-aix/mcall-solaris\n \n MULTILIB_DIRNAMES\t= nof \\\n \t\t\t  rel \\\n \t\t\t  le be \\\n-\t\t\t  cs ce ca\n+\t\t\t  cs ce ca sol\n \n MULTILIB_MATCHES\t= mlittle=mlittle-endian \\\n \t\t\t  mbig=mbig-endian \\\n-\t\t\t  mlittle=mcall-solaris \\\n \t\t\t  mbig=mcall-linux \\\n \t\t\t  msoft-float=mcpu?403 \\\n \t\t\t  msoft-float=mcpu?821 \\\n \t\t\t  msoft-float=mcpu?860 \\\n-\t\t\t  mcall-sysv-noeabi=mcall-solaris \\\n \t\t\t  mcall-sysv-noeabi=mcall-linux \\\n \t\t\t  mcall-sysv-eabi=meabi \\\n \t\t\t  mcall-sysv-noeabi=mno-eabi\n \n-MULTILIB_EXCEPTIONS\t= *mrelocatable*/*mcall-sysv-noeabi*\n+MULTILIB_EXCEPTIONS\t= *mrelocatable*/*mcall-sysv-noeabi* \\\n+\t\t\t  *mrelocatable*/*mcall-solaris* \\\n+\t\t\t  *mbig*/*mcall-solaris* \\\n+\t\t\t  *mlittle*/*mcall-solaris*\n \n LIBGCC = stmp-multilib stmp-crt\n INSTALL_LIBGCC = install-multilib install-crt"}]}