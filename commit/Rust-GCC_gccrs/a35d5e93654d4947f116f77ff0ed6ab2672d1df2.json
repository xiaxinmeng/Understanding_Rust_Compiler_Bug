{"sha": "a35d5e93654d4947f116f77ff0ed6ab2672d1df2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTM1ZDVlOTM2NTRkNDk0N2YxMTZmNzdmZjBlZDZhYjI2NzJkMWRmMg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2020-12-02T10:07:43Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2020-12-02T11:39:32Z"}, "message": "guard maybe_set_vectorized_backedge_value calls\n\nThis makes sure to not call maybe_set_vectorized_backedge_value when\nwe did not vectorize the latch def candidate.\n\n2020-12-02  Richard Biener  <rguenther@suse.de>\n\n\t* tree-vect-loop.c (vect_transform_loop_stmt): Return whether\n\twe vectorized a stmt.\n\t(vect_transform_loop): Only call maybe_set_vectorized_backedge_value\n\twhen we vectorized the stmt.", "tree": {"sha": "3d30bdbbe7abe1e71913680bd489eb31d0954883", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3d30bdbbe7abe1e71913680bd489eb31d0954883"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a35d5e93654d4947f116f77ff0ed6ab2672d1df2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a35d5e93654d4947f116f77ff0ed6ab2672d1df2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a35d5e93654d4947f116f77ff0ed6ab2672d1df2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a35d5e93654d4947f116f77ff0ed6ab2672d1df2/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e34153b0e230bc0a8b9a3f5db1d46a67cbb51788", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e34153b0e230bc0a8b9a3f5db1d46a67cbb51788", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e34153b0e230bc0a8b9a3f5db1d46a67cbb51788"}], "stats": {"total": 24, "additions": 13, "deletions": 11}, "files": [{"sha": "72bbec4b45d225d73eddfaca69468cd23842a42a", "filename": "gcc/tree-vect-loop.c", "status": "modified", "additions": 13, "deletions": 11, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a35d5e93654d4947f116f77ff0ed6ab2672d1df2/gcc%2Ftree-vect-loop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a35d5e93654d4947f116f77ff0ed6ab2672d1df2/gcc%2Ftree-vect-loop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-loop.c?ref=a35d5e93654d4947f116f77ff0ed6ab2672d1df2", "patch": "@@ -9081,7 +9081,7 @@ maybe_set_vectorized_backedge_value (loop_vec_info loop_vinfo,\n    When vectorizing STMT_INFO as a store, set *SEEN_STORE to its\n    stmt_vec_info.  */\n \n-static void\n+static bool\n vect_transform_loop_stmt (loop_vec_info loop_vinfo, stmt_vec_info stmt_info,\n \t\t\t  gimple_stmt_iterator *gsi, stmt_vec_info *seen_store)\n {\n@@ -9097,7 +9097,7 @@ vect_transform_loop_stmt (loop_vec_info loop_vinfo, stmt_vec_info stmt_info,\n \n   if (!STMT_VINFO_RELEVANT_P (stmt_info)\n       && !STMT_VINFO_LIVE_P (stmt_info))\n-    return;\n+    return false;\n \n   if (STMT_VINFO_VECTYPE (stmt_info))\n     {\n@@ -9114,13 +9114,15 @@ vect_transform_loop_stmt (loop_vec_info loop_vinfo, stmt_vec_info stmt_info,\n   /* Pure SLP statements have already been vectorized.  We still need\n      to apply loop vectorization to hybrid SLP statements.  */\n   if (PURE_SLP_STMT (stmt_info))\n-    return;\n+    return false;\n \n   if (dump_enabled_p ())\n     dump_printf_loc (MSG_NOTE, vect_location, \"transform statement.\\n\");\n \n   if (vect_transform_stmt (loop_vinfo, stmt_info, gsi, NULL, NULL))\n     *seen_store = stmt_info;\n+\n+  return true;\n }\n \n /* Helper function to pass to simplify_replace_tree to enable replacing tree's\n@@ -9546,17 +9548,17 @@ vect_transform_loop (loop_vec_info loop_vinfo, gimple *loop_vectorized_call)\n \t\t\t}\n \t\t      stmt_vec_info pat_stmt_info\n \t\t\t= STMT_VINFO_RELATED_STMT (stmt_info);\n-\t\t      vect_transform_loop_stmt (loop_vinfo, pat_stmt_info, &si,\n-\t\t\t\t\t\t&seen_store);\n-\t\t      maybe_set_vectorized_backedge_value (loop_vinfo,\n-\t\t\t\t\t\t\t   pat_stmt_info);\n+\t\t      if (vect_transform_loop_stmt (loop_vinfo, pat_stmt_info,\n+\t\t\t\t\t\t    &si, &seen_store))\n+\t\t\tmaybe_set_vectorized_backedge_value (loop_vinfo,\n+\t\t\t\t\t\t\t     pat_stmt_info);\n \t\t    }\n \t\t  else\n \t\t    {\n-\t\t      vect_transform_loop_stmt (loop_vinfo, stmt_info, &si,\n-\t\t\t\t\t\t&seen_store);\n-\t\t      maybe_set_vectorized_backedge_value (loop_vinfo,\n-\t\t\t\t\t\t\t   stmt_info);\n+\t\t      if (vect_transform_loop_stmt (loop_vinfo, stmt_info, &si,\n+\t\t\t\t\t\t    &seen_store))\n+\t\t\tmaybe_set_vectorized_backedge_value (loop_vinfo,\n+\t\t\t\t\t\t\t     stmt_info);\n \t\t    }\n \t\t}\n \t      gsi_next (&si);"}]}