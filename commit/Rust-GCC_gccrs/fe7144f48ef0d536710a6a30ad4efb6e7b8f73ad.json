{"sha": "fe7144f48ef0d536710a6a30ad4efb6e7b8f73ad", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmU3MTQ0ZjQ4ZWYwZDUzNjcxMGE2YTMwYWQ0ZWZiNmU3YjhmNzNhZA==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2013-06-24T23:12:48Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2013-06-24T23:12:48Z"}, "message": "compiler: generate dummy names for blank-named constants.\n\nOtherwise such const declarations are not checked.\n\nFrom-SVN: r200381", "tree": {"sha": "a88cc41a00ede1709b36f5548ae84ef02a6923cf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a88cc41a00ede1709b36f5548ae84ef02a6923cf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fe7144f48ef0d536710a6a30ad4efb6e7b8f73ad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe7144f48ef0d536710a6a30ad4efb6e7b8f73ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe7144f48ef0d536710a6a30ad4efb6e7b8f73ad", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe7144f48ef0d536710a6a30ad4efb6e7b8f73ad/comments", "author": null, "committer": null, "parents": [{"sha": "571d3f918f9da22ffddd61fc242ea82137e3a83b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/571d3f918f9da22ffddd61fc242ea82137e3a83b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/571d3f918f9da22ffddd61fc242ea82137e3a83b"}], "stats": {"total": 39, "additions": 30, "deletions": 9}, "files": [{"sha": "a1fe5fec7ca6e77d8a1af6da2e8e960ad70c1eec", "filename": "gcc/go/gofrontend/gogo-tree.cc", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe7144f48ef0d536710a6a30ad4efb6e7b8f73ad/gcc%2Fgo%2Fgofrontend%2Fgogo-tree.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe7144f48ef0d536710a6a30ad4efb6e7b8f73ad/gcc%2Fgo%2Fgofrontend%2Fgogo-tree.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fgogo-tree.cc?ref=fe7144f48ef0d536710a6a30ad4efb6e7b8f73ad", "patch": "@@ -814,6 +814,15 @@ Gogo::write_globals()\n \t  continue;\n \t}\n \n+      // Skip blank named functions and constants.\n+      if ((no->is_function() && no->func_value()->is_sink())\n+\t  || (no->is_const() && no->const_value()->is_sink()))\n+        {\n+          --i;\n+          --count;\n+          continue;\n+        }\n+\n       // There is nothing useful we can output for constants which\n       // have ideal or non-integral type.\n       if (no->is_const())\n@@ -829,14 +838,6 @@ Gogo::write_globals()\n \t    }\n \t}\n \n-      // Skip blank named functions.\n-      if (no->is_function() && no->func_value()->is_sink())\n-        {\n-          --i;\n-          --count;\n-          continue;\n-        }\n-\n       if (!no->is_variable())\n \t{\n \t  vec[i] = no->get_tree(this, NULL);"}, {"sha": "b6e9e45a1cb4ae8a25274a111c6761824018cad2", "filename": "gcc/go/gofrontend/gogo.h", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe7144f48ef0d536710a6a30ad4efb6e7b8f73ad/gcc%2Fgo%2Fgofrontend%2Fgogo.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe7144f48ef0d536710a6a30ad4efb6e7b8f73ad/gcc%2Fgo%2Fgofrontend%2Fgogo.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fgogo.h?ref=fe7144f48ef0d536710a6a30ad4efb6e7b8f73ad", "patch": "@@ -1687,7 +1687,7 @@ class Named_constant\n   Named_constant(Type* type, Expression* expr, int iota_value,\n \t\t Location location)\n     : type_(type), expr_(expr), iota_value_(iota_value), location_(location),\n-      lowering_(false)\n+      lowering_(false), is_sink_(false)\n   { }\n \n   Type*\n@@ -1721,6 +1721,14 @@ class Named_constant\n   clear_lowering()\n   { this->lowering_ = false; }\n \n+  bool\n+  is_sink() const\n+  { return this->is_sink_; }\n+\n+  void\n+  set_is_sink()\n+  { this->is_sink_ = true; }\n+\n   // Traverse the expression.\n   int\n   traverse_expression(Traverse*);\n@@ -1756,6 +1764,8 @@ class Named_constant\n   Location location_;\n   // Whether we are currently lowering this constant.\n   bool lowering_;\n+  // Whether this constant is blank named and needs only type checking.\n+  bool is_sink_;\n };\n \n // A type declaration."}, {"sha": "0a67bbe40605668a6f2782417f3467b39f2e8d55", "filename": "gcc/go/gofrontend/parse.cc", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe7144f48ef0d536710a6a30ad4efb6e7b8f73ad/gcc%2Fgo%2Fgofrontend%2Fparse.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe7144f48ef0d536710a6a30ad4efb6e7b8f73ad/gcc%2Fgo%2Fgofrontend%2Fparse.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fparse.cc?ref=fe7144f48ef0d536710a6a30ad4efb6e7b8f73ad", "patch": "@@ -1457,6 +1457,16 @@ Parse::const_spec(Type** last_type, Expression_list** last_expr_list)\n \n       if (!Gogo::is_sink_name(pi->name()))\n \tthis->gogo_->add_constant(*pi, *pe, this->iota_value());\n+      else\n+\t{\n+\t  static int count;\n+\t  char buf[30];\n+\t  snprintf(buf, sizeof buf, \".$sinkconst%d\", count);\n+\t  ++count;\n+\t  Typed_identifier ti(std::string(buf), type, pi->location());\n+\t  Named_object* no = this->gogo_->add_constant(ti, *pe, this->iota_value());\n+\t  no->const_value()->set_is_sink();\n+\t}\n     }\n   if (pe != expr_list->end())\n     error_at(this->location(), \"too many initializers\");"}]}