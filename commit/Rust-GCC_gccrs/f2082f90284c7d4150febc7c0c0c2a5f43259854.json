{"sha": "f2082f90284c7d4150febc7c0c0c2a5f43259854", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjIwODJmOTAyODRjN2Q0MTUwZmViYzdjMGMwYzJhNWY0MzI1OTg1NA==", "commit": {"author": {"name": "DJ Delorie", "email": "dj@redhat.com", "date": "2009-07-02T02:16:32Z"}, "committer": {"name": "DJ Delorie", "email": "dj@gcc.gnu.org", "date": "2009-07-02T02:16:32Z"}, "message": "mep.c (mep_handle_option): Leave IVC2 control registers as fixed.\n\n* config/mep/mep.c (mep_handle_option): Leave IVC2 control\nregisters as fixed.\n(mep_interrupt_saved_reg): Save appropriate IVC2 control\nregisters.\n* config/mep/mep-ivc2.cpu: Add VOLATILE to insns that make\nunspecified accesses to control registers.\n* config/mep/intrinsics.md: Regenerate.\n* config/mep/intrinsics.h: Regenerate.\n* config/mep/mep-intrin.h: Regenerate.\n\nFrom-SVN: r149164", "tree": {"sha": "cbe822e993bae0a17a463c16954d7f219b9acf20", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cbe822e993bae0a17a463c16954d7f219b9acf20"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f2082f90284c7d4150febc7c0c0c2a5f43259854", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2082f90284c7d4150febc7c0c0c2a5f43259854", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f2082f90284c7d4150febc7c0c0c2a5f43259854", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2082f90284c7d4150febc7c0c0c2a5f43259854/comments", "author": null, "committer": null, "parents": [{"sha": "9df748c0ca2682d3aee12c1819d5981fc5176c83", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9df748c0ca2682d3aee12c1819d5981fc5176c83", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9df748c0ca2682d3aee12c1819d5981fc5176c83"}], "stats": {"total": 12568, "additions": 2391, "deletions": 10177}, "files": [{"sha": "6248ca1c7a9a62c6741cf25dd3c7f65eed0e32a6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2082f90284c7d4150febc7c0c0c2a5f43259854/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2082f90284c7d4150febc7c0c0c2a5f43259854/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f2082f90284c7d4150febc7c0c0c2a5f43259854", "patch": "@@ -1,3 +1,15 @@\n+2009-07-01  DJ Delorie  <dj@redhat.com>\n+\n+\t* config/mep/mep.c (mep_handle_option): Leave IVC2 control\n+\tregisters as fixed.\n+\t(mep_interrupt_saved_reg): Save appropriate IVC2 control\n+\tregisters.\n+\t* config/mep/mep-ivc2.cpu: Add VOLATILE to insns that make\n+\tunspecified accesses to control registers.\n+\t* config/mep/intrinsics.md: Regenerate.\n+\t* config/mep/intrinsics.h: Regenerate.\n+\t* config/mep/mep-intrin.h: Regenerate.\n+\t\n 2009-07-01  Anthony Green  <green@moxielogic.com>\n \n \t* config/moxie/moxie.c (moxie_expand_prologue): Use dec"}, {"sha": "287bc297cab4fb180825a1fa93dbd84287014e92", "filename": "gcc/config/mep/intrinsics.h", "status": "modified", "additions": 181, "deletions": 181, "changes": 362, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2082f90284c7d4150febc7c0c0c2a5f43259854/gcc%2Fconfig%2Fmep%2Fintrinsics.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2082f90284c7d4150febc7c0c0c2a5f43259854/gcc%2Fconfig%2Fmep%2Fintrinsics.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmep%2Fintrinsics.h?ref=f2082f90284c7d4150febc7c0c0c2a5f43259854", "patch": "@@ -20,66 +20,66 @@ typedef unsigned int   cp_v2usi __attribute__((vector_size(8)));\n \n \n // default\n-void mep_cpfmadila1_h (cp_v4hi, cp_v4hi, long, long);\n-void mep_cpfmadiua1_h (cp_v4hi, cp_v4hi, long, long);\n-void mep_cpfmadia1_b (cp_v8qi, cp_v8qi, long, long);\n-void mep_cpfmadia1u_b (cp_v8uqi, cp_v8uqi, long, long);\n-void mep_cpfmulila1_h (cp_v4hi, cp_v4hi, long, long);\n-void mep_cpfmuliua1_h (cp_v4hi, cp_v4hi, long, long);\n-void mep_cpfmulia1_b (cp_v8qi, cp_v8qi, long, long);\n-void mep_cpfmulia1u_b (cp_v8uqi, cp_v8uqi, long, long);\n-void mep_cpamadila1_h (cp_v4hi, cp_v4hi, long);\n-void mep_cpamadiua1_h (cp_v4hi, cp_v4hi, long);\n-void mep_cpamadia1_b (cp_v8qi, cp_v8qi, long);\n-void mep_cpamadia1u_b (cp_v8uqi, cp_v8uqi, long);\n-void mep_cpamulila1_h (cp_v4hi, cp_v4hi, long);\n-void mep_cpamuliua1_h (cp_v4hi, cp_v4hi, long);\n-void mep_cpamulia1_b (cp_v8qi, cp_v8qi, long);\n-void mep_cpamulia1u_b (cp_v8uqi, cp_v8uqi, long);\n-void mep_cpfmadila1s1_h (cp_v4hi, cp_v4hi, long);\n-void mep_cpfmadiua1s1_h (cp_v4hi, cp_v4hi, long);\n-void mep_cpfmadia1s1_b (cp_v8qi, cp_v8qi, long);\n-void mep_cpfmadia1s1u_b (cp_v8uqi, cp_v8uqi, long);\n-void mep_cpfmulila1s1_h (cp_v4hi, cp_v4hi, long);\n-void mep_cpfmuliua1s1_h (cp_v4hi, cp_v4hi, long);\n-void mep_cpfmulia1s1_b (cp_v8qi, cp_v8qi, long);\n-void mep_cpfmulia1s1u_b (cp_v8uqi, cp_v8uqi, long);\n-void mep_cpfmadila1s0_h (cp_v4hi, cp_v4hi, long);\n-void mep_cpfmadiua1s0_h (cp_v4hi, cp_v4hi, long);\n-void mep_cpfmadia1s0_b (cp_v8qi, cp_v8qi, long);\n-void mep_cpfmadia1s0u_b (cp_v8uqi, cp_v8uqi, long);\n-void mep_cpfmulila1s0_h (cp_v4hi, cp_v4hi, long);\n-void mep_cpfmuliua1s0_h (cp_v4hi, cp_v4hi, long);\n-void mep_cpfmulia1s0_b (cp_v8qi, cp_v8qi, long);\n-void mep_cpfmulia1s0u_b (cp_v8uqi, cp_v8uqi, long);\n+void mep_cpfmadila1_h (cp_v4hi, cp_v4hi, long, long); // volatile\n+void mep_cpfmadiua1_h (cp_v4hi, cp_v4hi, long, long); // volatile\n+void mep_cpfmadia1_b (cp_v8qi, cp_v8qi, long, long); // volatile\n+void mep_cpfmadia1u_b (cp_v8uqi, cp_v8uqi, long, long); // volatile\n+void mep_cpfmulila1_h (cp_v4hi, cp_v4hi, long, long); // volatile\n+void mep_cpfmuliua1_h (cp_v4hi, cp_v4hi, long, long); // volatile\n+void mep_cpfmulia1_b (cp_v8qi, cp_v8qi, long, long); // volatile\n+void mep_cpfmulia1u_b (cp_v8uqi, cp_v8uqi, long, long); // volatile\n+void mep_cpamadila1_h (cp_v4hi, cp_v4hi, long); // volatile\n+void mep_cpamadiua1_h (cp_v4hi, cp_v4hi, long); // volatile\n+void mep_cpamadia1_b (cp_v8qi, cp_v8qi, long); // volatile\n+void mep_cpamadia1u_b (cp_v8uqi, cp_v8uqi, long); // volatile\n+void mep_cpamulila1_h (cp_v4hi, cp_v4hi, long); // volatile\n+void mep_cpamuliua1_h (cp_v4hi, cp_v4hi, long); // volatile\n+void mep_cpamulia1_b (cp_v8qi, cp_v8qi, long); // volatile\n+void mep_cpamulia1u_b (cp_v8uqi, cp_v8uqi, long); // volatile\n+void mep_cpfmadila1s1_h (cp_v4hi, cp_v4hi, long); // volatile\n+void mep_cpfmadiua1s1_h (cp_v4hi, cp_v4hi, long); // volatile\n+void mep_cpfmadia1s1_b (cp_v8qi, cp_v8qi, long); // volatile\n+void mep_cpfmadia1s1u_b (cp_v8uqi, cp_v8uqi, long); // volatile\n+void mep_cpfmulila1s1_h (cp_v4hi, cp_v4hi, long); // volatile\n+void mep_cpfmuliua1s1_h (cp_v4hi, cp_v4hi, long); // volatile\n+void mep_cpfmulia1s1_b (cp_v8qi, cp_v8qi, long); // volatile\n+void mep_cpfmulia1s1u_b (cp_v8uqi, cp_v8uqi, long); // volatile\n+void mep_cpfmadila1s0_h (cp_v4hi, cp_v4hi, long); // volatile\n+void mep_cpfmadiua1s0_h (cp_v4hi, cp_v4hi, long); // volatile\n+void mep_cpfmadia1s0_b (cp_v8qi, cp_v8qi, long); // volatile\n+void mep_cpfmadia1s0u_b (cp_v8uqi, cp_v8uqi, long); // volatile\n+void mep_cpfmulila1s0_h (cp_v4hi, cp_v4hi, long); // volatile\n+void mep_cpfmuliua1s0_h (cp_v4hi, cp_v4hi, long); // volatile\n+void mep_cpfmulia1s0_b (cp_v8qi, cp_v8qi, long); // volatile\n+void mep_cpfmulia1s0u_b (cp_v8uqi, cp_v8uqi, long); // volatile\n void mep_cpacswp ();                    // volatile\n-void mep_cpaccpa1 ();\n-void mep_cpacsuma1 ();\n+void mep_cpaccpa1 ();                   // volatile\n+void mep_cpacsuma1 ();                  // volatile\n void mep_c1nop ();                      // volatile\n-void mep_cpfacla0s1_h (cp_v4hi, cp_v4hi);\n-void mep_cpfacua0s1_h (cp_v4hi, cp_v4hi);\n-void mep_cpfaca0s1_b (cp_v8qi, cp_v8qi);\n-void mep_cpfaca0s1u_b (cp_v8uqi, cp_v8uqi);\n-void mep_cpfsftbla0s1_h (cp_v4hi, cp_v4hi);\n-void mep_cpfsftbua0s1_h (cp_v4hi, cp_v4hi);\n-void mep_cpfsftba0s1_b (cp_v8qi, cp_v8qi);\n-void mep_cpfsftba0s1u_b (cp_v8uqi, cp_v8uqi);\n-void mep_cpfacla0s0_h (cp_v4hi, cp_v4hi);\n-void mep_cpfacua0s0_h (cp_v4hi, cp_v4hi);\n-void mep_cpfaca0s0_b (cp_v8qi, cp_v8qi);\n-void mep_cpfaca0s0u_b (cp_v8uqi, cp_v8uqi);\n-void mep_cpfsftbla0s0_h (cp_v4hi, cp_v4hi);\n-void mep_cpfsftbua0s0_h (cp_v4hi, cp_v4hi);\n-void mep_cpfsftba0s0_b (cp_v8qi, cp_v8qi);\n-void mep_cpfsftba0s0u_b (cp_v8uqi, cp_v8uqi);\n-void mep_cpsllia0 (long);\n-void mep_cpsraia0 (long);\n-void mep_cpsrlia0 (long);\n-void mep_cpslla0 (cp_data_bus_int);\n-void mep_cpsraa0 (cp_data_bus_int);\n-void mep_cpsrla0 (cp_data_bus_int);\n-void mep_cpaccpa0 ();\n-void mep_cpacsuma0 ();\n+void mep_cpfacla0s1_h (cp_v4hi, cp_v4hi); // volatile\n+void mep_cpfacua0s1_h (cp_v4hi, cp_v4hi); // volatile\n+void mep_cpfaca0s1_b (cp_v8qi, cp_v8qi); // volatile\n+void mep_cpfaca0s1u_b (cp_v8uqi, cp_v8uqi); // volatile\n+void mep_cpfsftbla0s1_h (cp_v4hi, cp_v4hi); // volatile\n+void mep_cpfsftbua0s1_h (cp_v4hi, cp_v4hi); // volatile\n+void mep_cpfsftba0s1_b (cp_v8qi, cp_v8qi); // volatile\n+void mep_cpfsftba0s1u_b (cp_v8uqi, cp_v8uqi); // volatile\n+void mep_cpfacla0s0_h (cp_v4hi, cp_v4hi); // volatile\n+void mep_cpfacua0s0_h (cp_v4hi, cp_v4hi); // volatile\n+void mep_cpfaca0s0_b (cp_v8qi, cp_v8qi); // volatile\n+void mep_cpfaca0s0u_b (cp_v8uqi, cp_v8uqi); // volatile\n+void mep_cpfsftbla0s0_h (cp_v4hi, cp_v4hi); // volatile\n+void mep_cpfsftbua0s0_h (cp_v4hi, cp_v4hi); // volatile\n+void mep_cpfsftba0s0_b (cp_v8qi, cp_v8qi); // volatile\n+void mep_cpfsftba0s0u_b (cp_v8uqi, cp_v8uqi); // volatile\n+void mep_cpsllia0 (long);               // volatile\n+void mep_cpsraia0 (long);               // volatile\n+void mep_cpsrlia0 (long);               // volatile\n+void mep_cpslla0 (cp_data_bus_int);     // volatile\n+void mep_cpsraa0 (cp_data_bus_int);     // volatile\n+void mep_cpsrla0 (cp_data_bus_int);     // volatile\n+void mep_cpaccpa0 ();                   // volatile\n+void mep_cpacsuma0 ();                  // volatile\n cp_v2si mep_cpmovhla0_w ();\n cp_v2si mep_cpmovhua0_w ();\n cp_v2si mep_cppackla0_w ();\n@@ -95,86 +95,86 @@ cp_v2si mep_cpmovuua0_w ();\n cp_v4hi mep_cpmovla0_h ();\n cp_v4hi mep_cpmovua0_h ();\n cp_v8qi mep_cpmova0_b ();\n-void mep_cpsetla0_w (cp_v2si, cp_v2si);\n-void mep_cpsetua0_w (cp_v2si, cp_v2si);\n-void mep_cpseta0_h (cp_v4hi, cp_v4hi);\n-void mep_cpsadla0_h (cp_v4hi, cp_v4hi);\n-void mep_cpsadua0_h (cp_v4hi, cp_v4hi);\n-void mep_cpsada0_b (cp_v8qi, cp_v8qi);\n-void mep_cpsada0u_b (cp_v8uqi, cp_v8uqi);\n-void mep_cpabsla0_h (cp_v4hi, cp_v4hi);\n-void mep_cpabsua0_h (cp_v4hi, cp_v4hi);\n-void mep_cpabsa0_b (cp_v8qi, cp_v8qi);\n-void mep_cpabsa0u_b (cp_v8uqi, cp_v8uqi);\n-void mep_cpsubacla0_h (cp_v4hi, cp_v4hi);\n-void mep_cpsubacua0_h (cp_v4hi, cp_v4hi);\n-void mep_cpsubaca0_b (cp_v8qi, cp_v8qi);\n-void mep_cpsubaca0u_b (cp_v8uqi, cp_v8uqi);\n-void mep_cpsubla0_h (cp_v4hi, cp_v4hi);\n-void mep_cpsubua0_h (cp_v4hi, cp_v4hi);\n-void mep_cpsuba0_b (cp_v8qi, cp_v8qi);\n-void mep_cpsuba0u_b (cp_v8uqi, cp_v8uqi);\n-void mep_cpaddacla0_h (cp_v4hi, cp_v4hi);\n-void mep_cpaddacua0_h (cp_v4hi, cp_v4hi);\n-void mep_cpaddaca0_b (cp_v8qi, cp_v8qi);\n-void mep_cpaddaca0u_b (cp_v8uqi, cp_v8uqi);\n-void mep_cpaddla0_h (cp_v4hi, cp_v4hi);\n-void mep_cpaddua0_h (cp_v4hi, cp_v4hi);\n-void mep_cpadda0_b (cp_v8qi, cp_v8qi);\n-void mep_cpadda0u_b (cp_v8uqi, cp_v8uqi);\n+void mep_cpsetla0_w (cp_v2si, cp_v2si); // volatile\n+void mep_cpsetua0_w (cp_v2si, cp_v2si); // volatile\n+void mep_cpseta0_h (cp_v4hi, cp_v4hi);  // volatile\n+void mep_cpsadla0_h (cp_v4hi, cp_v4hi); // volatile\n+void mep_cpsadua0_h (cp_v4hi, cp_v4hi); // volatile\n+void mep_cpsada0_b (cp_v8qi, cp_v8qi);  // volatile\n+void mep_cpsada0u_b (cp_v8uqi, cp_v8uqi); // volatile\n+void mep_cpabsla0_h (cp_v4hi, cp_v4hi); // volatile\n+void mep_cpabsua0_h (cp_v4hi, cp_v4hi); // volatile\n+void mep_cpabsa0_b (cp_v8qi, cp_v8qi);  // volatile\n+void mep_cpabsa0u_b (cp_v8uqi, cp_v8uqi); // volatile\n+void mep_cpsubacla0_h (cp_v4hi, cp_v4hi); // volatile\n+void mep_cpsubacua0_h (cp_v4hi, cp_v4hi); // volatile\n+void mep_cpsubaca0_b (cp_v8qi, cp_v8qi); // volatile\n+void mep_cpsubaca0u_b (cp_v8uqi, cp_v8uqi); // volatile\n+void mep_cpsubla0_h (cp_v4hi, cp_v4hi); // volatile\n+void mep_cpsubua0_h (cp_v4hi, cp_v4hi); // volatile\n+void mep_cpsuba0_b (cp_v8qi, cp_v8qi);  // volatile\n+void mep_cpsuba0u_b (cp_v8uqi, cp_v8uqi); // volatile\n+void mep_cpaddacla0_h (cp_v4hi, cp_v4hi); // volatile\n+void mep_cpaddacua0_h (cp_v4hi, cp_v4hi); // volatile\n+void mep_cpaddaca0_b (cp_v8qi, cp_v8qi); // volatile\n+void mep_cpaddaca0u_b (cp_v8uqi, cp_v8uqi); // volatile\n+void mep_cpaddla0_h (cp_v4hi, cp_v4hi); // volatile\n+void mep_cpaddua0_h (cp_v4hi, cp_v4hi); // volatile\n+void mep_cpadda0_b (cp_v8qi, cp_v8qi);  // volatile\n+void mep_cpadda0u_b (cp_v8uqi, cp_v8uqi); // volatile\n void mep_c0nop ();                      // volatile\n-void mep_cpsmsbslla1_w (cp_v2si, cp_v2si);\n-void mep_cpsmsbslua1_w (cp_v2si, cp_v2si);\n-void mep_cpsmsbslla1_h (cp_v4hi, cp_v4hi);\n-void mep_cpsmsbslua1_h (cp_v4hi, cp_v4hi);\n-void mep_cpsmadslla1_w (cp_v2si, cp_v2si);\n-void mep_cpsmadslua1_w (cp_v2si, cp_v2si);\n-void mep_cpsmadslla1_h (cp_v4hi, cp_v4hi);\n-void mep_cpsmadslua1_h (cp_v4hi, cp_v4hi);\n-void mep_cpmulslla1_w (cp_v2si, cp_v2si);\n-void mep_cpmulslua1_w (cp_v2si, cp_v2si);\n-void mep_cpmulslla1_h (cp_v4hi, cp_v4hi);\n-void mep_cpmulslua1_h (cp_v4hi, cp_v4hi);\n-void mep_cpsmsbla1_w (cp_v2si, cp_v2si);\n-void mep_cpsmsbua1_w (cp_v2si, cp_v2si);\n-void mep_cpsmsbla1_h (cp_v4hi, cp_v4hi);\n-void mep_cpsmsbua1_h (cp_v4hi, cp_v4hi);\n-void mep_cpsmadla1_w (cp_v2si, cp_v2si);\n-void mep_cpsmadua1_w (cp_v2si, cp_v2si);\n-void mep_cpsmadla1_h (cp_v4hi, cp_v4hi);\n-void mep_cpsmadua1_h (cp_v4hi, cp_v4hi);\n-void mep_cpmsbla1_w (cp_v2si, cp_v2si);\n-void mep_cpmsbua1_w (cp_v2si, cp_v2si);\n-void mep_cpmsbla1u_w (cp_v2usi, cp_v2usi);\n-void mep_cpmsbua1u_w (cp_v2usi, cp_v2usi);\n-void mep_cpmsbla1_h (cp_v4hi, cp_v4hi);\n-void mep_cpmsbua1_h (cp_v4hi, cp_v4hi);\n-void mep_cpmadla1_w (cp_v2si, cp_v2si);\n-void mep_cpmadua1_w (cp_v2si, cp_v2si);\n-void mep_cpmadla1u_w (cp_v2usi, cp_v2usi);\n-void mep_cpmadua1u_w (cp_v2usi, cp_v2usi);\n-void mep_cpmadla1_h (cp_v4hi, cp_v4hi);\n-void mep_cpmadua1_h (cp_v4hi, cp_v4hi);\n-void mep_cpmada1_b (cp_v8qi, cp_v8qi);\n-void mep_cpmada1u_b (cp_v8uqi, cp_v8uqi);\n-void mep_cpmulla1_w (cp_v2si, cp_v2si);\n-void mep_cpmulua1_w (cp_v2si, cp_v2si);\n-void mep_cpmulla1u_w (cp_v2usi, cp_v2usi);\n-void mep_cpmulua1u_w (cp_v2usi, cp_v2usi);\n-void mep_cpmulla1_h (cp_v4hi, cp_v4hi);\n-void mep_cpmulua1_h (cp_v4hi, cp_v4hi);\n-void mep_cpmula1_b (cp_v8qi, cp_v8qi);\n-void mep_cpmula1u_b (cp_v8uqi, cp_v8uqi);\n-void mep_cpssda1_b (cp_v8qi, cp_v8qi);\n-void mep_cpssda1u_b (cp_v8uqi, cp_v8uqi);\n-void mep_cpssqa1_b (cp_v8qi, cp_v8qi);\n-void mep_cpssqa1u_b (cp_v8uqi, cp_v8uqi);\n-void mep_cpsllia1 (long);\n-void mep_cpsraia1 (long);\n-void mep_cpsrlia1 (long);\n-void mep_cpslla1 (cp_data_bus_int);\n-void mep_cpsraa1 (cp_data_bus_int);\n-void mep_cpsrla1 (cp_data_bus_int);\n+void mep_cpsmsbslla1_w (cp_v2si, cp_v2si); // volatile\n+void mep_cpsmsbslua1_w (cp_v2si, cp_v2si); // volatile\n+void mep_cpsmsbslla1_h (cp_v4hi, cp_v4hi); // volatile\n+void mep_cpsmsbslua1_h (cp_v4hi, cp_v4hi); // volatile\n+void mep_cpsmadslla1_w (cp_v2si, cp_v2si); // volatile\n+void mep_cpsmadslua1_w (cp_v2si, cp_v2si); // volatile\n+void mep_cpsmadslla1_h (cp_v4hi, cp_v4hi); // volatile\n+void mep_cpsmadslua1_h (cp_v4hi, cp_v4hi); // volatile\n+void mep_cpmulslla1_w (cp_v2si, cp_v2si); // volatile\n+void mep_cpmulslua1_w (cp_v2si, cp_v2si); // volatile\n+void mep_cpmulslla1_h (cp_v4hi, cp_v4hi); // volatile\n+void mep_cpmulslua1_h (cp_v4hi, cp_v4hi); // volatile\n+void mep_cpsmsbla1_w (cp_v2si, cp_v2si); // volatile\n+void mep_cpsmsbua1_w (cp_v2si, cp_v2si); // volatile\n+void mep_cpsmsbla1_h (cp_v4hi, cp_v4hi); // volatile\n+void mep_cpsmsbua1_h (cp_v4hi, cp_v4hi); // volatile\n+void mep_cpsmadla1_w (cp_v2si, cp_v2si); // volatile\n+void mep_cpsmadua1_w (cp_v2si, cp_v2si); // volatile\n+void mep_cpsmadla1_h (cp_v4hi, cp_v4hi); // volatile\n+void mep_cpsmadua1_h (cp_v4hi, cp_v4hi); // volatile\n+void mep_cpmsbla1_w (cp_v2si, cp_v2si); // volatile\n+void mep_cpmsbua1_w (cp_v2si, cp_v2si); // volatile\n+void mep_cpmsbla1u_w (cp_v2usi, cp_v2usi); // volatile\n+void mep_cpmsbua1u_w (cp_v2usi, cp_v2usi); // volatile\n+void mep_cpmsbla1_h (cp_v4hi, cp_v4hi); // volatile\n+void mep_cpmsbua1_h (cp_v4hi, cp_v4hi); // volatile\n+void mep_cpmadla1_w (cp_v2si, cp_v2si); // volatile\n+void mep_cpmadua1_w (cp_v2si, cp_v2si); // volatile\n+void mep_cpmadla1u_w (cp_v2usi, cp_v2usi); // volatile\n+void mep_cpmadua1u_w (cp_v2usi, cp_v2usi); // volatile\n+void mep_cpmadla1_h (cp_v4hi, cp_v4hi); // volatile\n+void mep_cpmadua1_h (cp_v4hi, cp_v4hi); // volatile\n+void mep_cpmada1_b (cp_v8qi, cp_v8qi);  // volatile\n+void mep_cpmada1u_b (cp_v8uqi, cp_v8uqi); // volatile\n+void mep_cpmulla1_w (cp_v2si, cp_v2si); // volatile\n+void mep_cpmulua1_w (cp_v2si, cp_v2si); // volatile\n+void mep_cpmulla1u_w (cp_v2usi, cp_v2usi); // volatile\n+void mep_cpmulua1u_w (cp_v2usi, cp_v2usi); // volatile\n+void mep_cpmulla1_h (cp_v4hi, cp_v4hi); // volatile\n+void mep_cpmulua1_h (cp_v4hi, cp_v4hi); // volatile\n+void mep_cpmula1_b (cp_v8qi, cp_v8qi);  // volatile\n+void mep_cpmula1u_b (cp_v8uqi, cp_v8uqi); // volatile\n+void mep_cpssda1_b (cp_v8qi, cp_v8qi);  // volatile\n+void mep_cpssda1u_b (cp_v8uqi, cp_v8uqi); // volatile\n+void mep_cpssqa1_b (cp_v8qi, cp_v8qi);  // volatile\n+void mep_cpssqa1u_b (cp_v8uqi, cp_v8uqi); // volatile\n+void mep_cpsllia1 (long);               // volatile\n+void mep_cpsraia1 (long);               // volatile\n+void mep_cpsrlia1 (long);               // volatile\n+void mep_cpslla1 (cp_data_bus_int);     // volatile\n+void mep_cpsraa1 (cp_data_bus_int);     // volatile\n+void mep_cpsrla1 (cp_data_bus_int);     // volatile\n cp_v2si mep_cpmovhla1_w ();\n cp_v2si mep_cpmovhua1_w ();\n cp_v2si mep_cppackla1_w ();\n@@ -190,33 +190,33 @@ cp_v2si mep_cpmovuua1_w ();\n cp_v4hi mep_cpmovla1_h ();\n cp_v4hi mep_cpmovua1_h ();\n cp_v8qi mep_cpmova1_b ();\n-void mep_cpsetla1_w (cp_v2si, cp_v2si);\n-void mep_cpsetua1_w (cp_v2si, cp_v2si);\n-void mep_cpseta1_h (cp_v4hi, cp_v4hi);\n-void mep_cpsadla1_h (cp_v4hi, cp_v4hi);\n-void mep_cpsadua1_h (cp_v4hi, cp_v4hi);\n-void mep_cpsada1_b (cp_v8qi, cp_v8qi);\n-void mep_cpsada1u_b (cp_v8uqi, cp_v8uqi);\n-void mep_cpabsla1_h (cp_v4hi, cp_v4hi);\n-void mep_cpabsua1_h (cp_v4hi, cp_v4hi);\n-void mep_cpabsa1_b (cp_v8qi, cp_v8qi);\n-void mep_cpabsa1u_b (cp_v8uqi, cp_v8uqi);\n-void mep_cpsubacla1_h (cp_v4hi, cp_v4hi);\n-void mep_cpsubacua1_h (cp_v4hi, cp_v4hi);\n-void mep_cpsubaca1_b (cp_v8qi, cp_v8qi);\n-void mep_cpsubaca1u_b (cp_v8uqi, cp_v8uqi);\n-void mep_cpsubla1_h (cp_v4hi, cp_v4hi);\n-void mep_cpsubua1_h (cp_v4hi, cp_v4hi);\n-void mep_cpsuba1_b (cp_v8qi, cp_v8qi);\n-void mep_cpsuba1u_b (cp_v8uqi, cp_v8uqi);\n-void mep_cpaddacla1_h (cp_v4hi, cp_v4hi);\n-void mep_cpaddacua1_h (cp_v4hi, cp_v4hi);\n-void mep_cpaddaca1_b (cp_v8qi, cp_v8qi);\n-void mep_cpaddaca1u_b (cp_v8uqi, cp_v8uqi);\n-void mep_cpaddla1_h (cp_v4hi, cp_v4hi);\n-void mep_cpaddua1_h (cp_v4hi, cp_v4hi);\n-void mep_cpadda1_b (cp_v8qi, cp_v8qi);\n-void mep_cpadda1u_b (cp_v8uqi, cp_v8uqi);\n+void mep_cpsetla1_w (cp_v2si, cp_v2si); // volatile\n+void mep_cpsetua1_w (cp_v2si, cp_v2si); // volatile\n+void mep_cpseta1_h (cp_v4hi, cp_v4hi);  // volatile\n+void mep_cpsadla1_h (cp_v4hi, cp_v4hi); // volatile\n+void mep_cpsadua1_h (cp_v4hi, cp_v4hi); // volatile\n+void mep_cpsada1_b (cp_v8qi, cp_v8qi);  // volatile\n+void mep_cpsada1u_b (cp_v8uqi, cp_v8uqi); // volatile\n+void mep_cpabsla1_h (cp_v4hi, cp_v4hi); // volatile\n+void mep_cpabsua1_h (cp_v4hi, cp_v4hi); // volatile\n+void mep_cpabsa1_b (cp_v8qi, cp_v8qi);  // volatile\n+void mep_cpabsa1u_b (cp_v8uqi, cp_v8uqi); // volatile\n+void mep_cpsubacla1_h (cp_v4hi, cp_v4hi); // volatile\n+void mep_cpsubacua1_h (cp_v4hi, cp_v4hi); // volatile\n+void mep_cpsubaca1_b (cp_v8qi, cp_v8qi); // volatile\n+void mep_cpsubaca1u_b (cp_v8uqi, cp_v8uqi); // volatile\n+void mep_cpsubla1_h (cp_v4hi, cp_v4hi); // volatile\n+void mep_cpsubua1_h (cp_v4hi, cp_v4hi); // volatile\n+void mep_cpsuba1_b (cp_v8qi, cp_v8qi);  // volatile\n+void mep_cpsuba1u_b (cp_v8uqi, cp_v8uqi); // volatile\n+void mep_cpaddacla1_h (cp_v4hi, cp_v4hi); // volatile\n+void mep_cpaddacua1_h (cp_v4hi, cp_v4hi); // volatile\n+void mep_cpaddaca1_b (cp_v8qi, cp_v8qi); // volatile\n+void mep_cpaddaca1u_b (cp_v8uqi, cp_v8uqi); // volatile\n+void mep_cpaddla1_h (cp_v4hi, cp_v4hi); // volatile\n+void mep_cpaddua1_h (cp_v4hi, cp_v4hi); // volatile\n+void mep_cpadda1_b (cp_v8qi, cp_v8qi);  // volatile\n+void mep_cpadda1u_b (cp_v8uqi, cp_v8uqi); // volatile\n cp_data_bus_int mep_cdmovi (long);\n cp_data_bus_int mep_cdmoviu (long);\n cp_v2si mep_cpmovi_w (long);\n@@ -274,23 +274,23 @@ void mep_cpacmpne_b (cp_v8qi, cp_v8qi); // volatile\n void mep_cpacmpeq_w (cp_v2si, cp_v2si); // volatile\n void mep_cpacmpeq_h (cp_v4hi, cp_v4hi); // volatile\n void mep_cpacmpeq_b (cp_v8qi, cp_v8qi); // volatile\n-void mep_cpcmpge_w (cp_v2si, cp_v2si);\n-void mep_cpcmpgeu_w (cp_v2usi, cp_v2usi);\n-void mep_cpcmpge_h (cp_v4hi, cp_v4hi);\n-void mep_cpcmpge_b (cp_v8qi, cp_v8qi);\n-void mep_cpcmpgeu_b (cp_v8uqi, cp_v8uqi);\n-void mep_cpcmpgt_w (cp_v2si, cp_v2si);\n-void mep_cpcmpgtu_w (cp_v2usi, cp_v2usi);\n-void mep_cpcmpgt_h (cp_v4hi, cp_v4hi);\n-void mep_cpcmpgt_b (cp_v8qi, cp_v8qi);\n-void mep_cpcmpgtu_b (cp_v8uqi, cp_v8uqi);\n-void mep_cpcmpne_w (cp_v2si, cp_v2si);\n-void mep_cpcmpne_h (cp_v4hi, cp_v4hi);\n-void mep_cpcmpne_b (cp_v8qi, cp_v8qi);\n-void mep_cpcmpeq_w (cp_v2si, cp_v2si);\n-void mep_cpcmpeq_h (cp_v4hi, cp_v4hi);\n-void mep_cpcmpeq_b (cp_v8qi, cp_v8qi);\n-void mep_cpcmpeqz_b (cp_v8qi, cp_v8qi);\n+void mep_cpcmpge_w (cp_v2si, cp_v2si);  // volatile\n+void mep_cpcmpgeu_w (cp_v2usi, cp_v2usi); // volatile\n+void mep_cpcmpge_h (cp_v4hi, cp_v4hi);  // volatile\n+void mep_cpcmpge_b (cp_v8qi, cp_v8qi);  // volatile\n+void mep_cpcmpgeu_b (cp_v8uqi, cp_v8uqi); // volatile\n+void mep_cpcmpgt_w (cp_v2si, cp_v2si);  // volatile\n+void mep_cpcmpgtu_w (cp_v2usi, cp_v2usi); // volatile\n+void mep_cpcmpgt_h (cp_v4hi, cp_v4hi);  // volatile\n+void mep_cpcmpgt_b (cp_v8qi, cp_v8qi);  // volatile\n+void mep_cpcmpgtu_b (cp_v8uqi, cp_v8uqi); // volatile\n+void mep_cpcmpne_w (cp_v2si, cp_v2si);  // volatile\n+void mep_cpcmpne_h (cp_v4hi, cp_v4hi);  // volatile\n+void mep_cpcmpne_b (cp_v8qi, cp_v8qi);  // volatile\n+void mep_cpcmpeq_w (cp_v2si, cp_v2si);  // volatile\n+void mep_cpcmpeq_h (cp_v4hi, cp_v4hi);  // volatile\n+void mep_cpcmpeq_b (cp_v8qi, cp_v8qi);  // volatile\n+void mep_cpcmpeqz_b (cp_v8qi, cp_v8qi); // volatile\n cp_data_bus_int mep_cdcastw (cp_data_bus_int);\n cp_data_bus_int mep_cdcastuw (cp_data_bus_int);\n cp_v2si mep_cpcasth_w (cp_v2si);"}, {"sha": "9c86f5f737bea8930ab6824aa763a6fcfcb9cc89", "filename": "gcc/config/mep/intrinsics.md", "status": "modified", "additions": 1910, "deletions": 9702, "changes": 11612, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2082f90284c7d4150febc7c0c0c2a5f43259854/gcc%2Fconfig%2Fmep%2Fintrinsics.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2082f90284c7d4150febc7c0c0c2a5f43259854/gcc%2Fconfig%2Fmep%2Fintrinsics.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmep%2Fintrinsics.md?ref=f2082f90284c7d4150febc7c0c0c2a5f43259854"}, {"sha": "cfefde8dbc5e60c5bbd4110976c03d3067e4b662", "filename": "gcc/config/mep/mep-intrin.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2082f90284c7d4150febc7c0c0c2a5f43259854/gcc%2Fconfig%2Fmep%2Fmep-intrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2082f90284c7d4150febc7c0c0c2a5f43259854/gcc%2Fconfig%2Fmep%2Fmep-intrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmep%2Fmep-intrin.h?ref=f2082f90284c7d4150febc7c0c0c2a5f43259854", "patch": "@@ -5,14 +5,14 @@\n \n #ifdef WANT_GCC_DECLARATIONS\n #define FIRST_SHADOW_REGISTER 113\n-#define LAST_SHADOW_REGISTER 140\n+#define LAST_SHADOW_REGISTER 122\n #define FIXED_SHADOW_REGISTERS \\\n-  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1\n+  1, 1, 1, 1, 1, 1, 1, 1, 1, 1\n #define CALL_USED_SHADOW_REGISTERS FIXED_SHADOW_REGISTERS\n #define SHADOW_REG_ALLOC_ORDER \\\n-  113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140\n+  113, 114, 115, 116, 117, 118, 119, 120, 121, 122\n #define SHADOW_REGISTER_NAMES \\\n-  \"$shadow87\", \"$shadow107\", \"$shadow106\", \"$shadow105\", \"$shadow104\", \"$shadow111\", \"$shadow110\", \"$shadow109\", \"$shadow108\", \"$shadow84\", \"$shadow81\", \"$shadow86\", \"$shadow99\", \"$shadow98\", \"$shadow97\", \"$shadow96\", \"$shadow103\", \"$shadow102\", \"$shadow101\", \"$shadow100\", \"$shadow17\", \"$shadow40\", \"$shadow24\", \"$shadow23\", \"$shadow22\", \"$shadow21\", \"$shadow20\", \"$shadow18\"\n+  \"$shadow84\", \"$shadow81\", \"$shadow17\", \"$shadow40\", \"$shadow24\", \"$shadow23\", \"$shadow22\", \"$shadow21\", \"$shadow20\", \"$shadow18\"\n \n \n "}, {"sha": "1ae0caca3285a66a5c35435d4e31ff7bac27bba6", "filename": "gcc/config/mep/mep-ivc2.cpu", "status": "modified", "additions": 277, "deletions": 277, "changes": 554, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2082f90284c7d4150febc7c0c0c2a5f43259854/gcc%2Fconfig%2Fmep%2Fmep-ivc2.cpu", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2082f90284c7d4150febc7c0c0c2a5f43259854/gcc%2Fconfig%2Fmep%2Fmep-ivc2.cpu", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmep%2Fmep-ivc2.cpu?ref=f2082f90284c7d4150febc7c0c0c2a5f43259854"}, {"sha": "5bb372ad31f534901bb8ca30c903eaad04e3e755", "filename": "gcc/config/mep/mep.c", "status": "modified", "additions": 7, "deletions": 13, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f2082f90284c7d4150febc7c0c0c2a5f43259854/gcc%2Fconfig%2Fmep%2Fmep.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f2082f90284c7d4150febc7c0c0c2a5f43259854/gcc%2Fconfig%2Fmep%2Fmep.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmep%2Fmep.c?ref=f2082f90284c7d4150febc7c0c0c2a5f43259854", "patch": "@@ -2525,6 +2525,13 @@ mep_interrupt_saved_reg (int r)\n   /* Functions we call might clobber these.  */\n   if (call_used_regs[r] && !fixed_regs[r])\n     return true;\n+  /* Additional registers that need to be saved for IVC2.  */\n+  if (TARGET_IVC2\n+      && (r == FIRST_CCR_REGNO + 1\n+\t  || (r >= FIRST_CCR_REGNO + 8 && r <= FIRST_CCR_REGNO + 11)\n+\t  || (r >= FIRST_CCR_REGNO + 16 && r <= FIRST_CCR_REGNO + 31)))\n+    return true;\n+\n   return false;\n }\n \n@@ -7228,19 +7235,6 @@ mep_handle_option (size_t code,\n       for (i=6; i<8; i++)\n \tcall_used_regs[i+48] = 0;\n \n-      call_used_regs[FIRST_CCR_REGNO + 1] = 0;\n-      fixed_regs[FIRST_CCR_REGNO + 1] = 0;\n-      for (i=8; i<=11; i++)\n-\t{\n-\t  call_used_regs[FIRST_CCR_REGNO + i] = 0;\n-\t  fixed_regs[FIRST_CCR_REGNO + i] = 0;\n-\t}\n-      for (i=16; i<=31; i++)\n-\t{\n-\t  call_used_regs[FIRST_CCR_REGNO + i] = 0;\n-\t  fixed_regs[FIRST_CCR_REGNO + i] = 0;\n-\t}\n-\n #define RN(n,s) reg_names[FIRST_CCR_REGNO + n] = s\n       RN (0, \"$csar0\");\n       RN (1, \"$cc\");"}]}