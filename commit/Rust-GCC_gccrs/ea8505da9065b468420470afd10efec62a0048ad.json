{"sha": "ea8505da9065b468420470afd10efec62a0048ad", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWE4NTA1ZGE5MDY1YjQ2ODQyMDQ3MGFmZDEwZWZlYzYyYTAwNDhhZA==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2012-04-03T23:44:53Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2012-04-03T23:44:53Z"}, "message": "syscall, net: Fix GNU/Linux netlink code for big-endian systems.\n\nFrom-SVN: r186123", "tree": {"sha": "9b5a391c0add620934f478e4ed676f965739b6fd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9b5a391c0add620934f478e4ed676f965739b6fd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ea8505da9065b468420470afd10efec62a0048ad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea8505da9065b468420470afd10efec62a0048ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea8505da9065b468420470afd10efec62a0048ad", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea8505da9065b468420470afd10efec62a0048ad/comments", "author": null, "committer": null, "parents": [{"sha": "a92873f12789bafcd199b7a6cf7bf17dc36fcab8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a92873f12789bafcd199b7a6cf7bf17dc36fcab8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a92873f12789bafcd199b7a6cf7bf17dc36fcab8"}], "stats": {"total": 88, "additions": 67, "deletions": 21}, "files": [{"sha": "e19cdf0a36d0d0d75e69af5c169e020f228c3d41", "filename": "libgo/Makefile.am", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea8505da9065b468420470afd10efec62a0048ad/libgo%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea8505da9065b468420470afd10efec62a0048ad/libgo%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2FMakefile.am?ref=ea8505da9065b468420470afd10efec62a0048ad", "patch": "@@ -1559,6 +1559,7 @@ s-syscall_arch: Makefile\n \techo \"package syscall\" > syscall_arch.go.tmp\n \techo 'const ARCH = \"'$(GOARCH)'\"' >> syscall_arch.go.tmp\n \techo 'const OS = \"'$(GOOS)'\"' >> syscall_arch.go.tmp\n+\techo 'const BigEndian = $(GO_BIGENDIAN)' >> syscall_arch.go.tmp\n \t$(SHELL) $(srcdir)/../move-if-change syscall_arch.go.tmp syscall_arch.go\n \t$(STAMP) $@\n "}, {"sha": "c7740cf80e1f9e198eb88ce3c087b215908cfc23", "filename": "libgo/Makefile.in", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea8505da9065b468420470afd10efec62a0048ad/libgo%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea8505da9065b468420470afd10efec62a0048ad/libgo%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2FMakefile.in?ref=ea8505da9065b468420470afd10efec62a0048ad", "patch": "@@ -369,6 +369,7 @@ GOARCH = @GOARCH@\n GOC = @GOC@\n GOCFLAGS = $(CFLAGS)\n GOOS = @GOOS@\n+GO_BIGENDIAN = @GO_BIGENDIAN@\n GO_LIBCALL_OS_ARCH_FILE = @GO_LIBCALL_OS_ARCH_FILE@\n GO_LIBCALL_OS_FILE = @GO_LIBCALL_OS_FILE@\n GO_SYSCALL_OS_ARCH_FILE = @GO_SYSCALL_OS_ARCH_FILE@\n@@ -4371,6 +4372,7 @@ s-syscall_arch: Makefile\n \techo \"package syscall\" > syscall_arch.go.tmp\n \techo 'const ARCH = \"'$(GOARCH)'\"' >> syscall_arch.go.tmp\n \techo 'const OS = \"'$(GOOS)'\"' >> syscall_arch.go.tmp\n+\techo 'const BigEndian = $(GO_BIGENDIAN)' >> syscall_arch.go.tmp\n \t$(SHELL) $(srcdir)/../move-if-change syscall_arch.go.tmp syscall_arch.go\n \t$(STAMP) $@\n "}, {"sha": "b57ba949a39f9700d2419b593995825f84bb6af4", "filename": "libgo/configure", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea8505da9065b468420470afd10efec62a0048ad/libgo%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea8505da9065b468420470afd10efec62a0048ad/libgo%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fconfigure?ref=ea8505da9065b468420470afd10efec62a0048ad", "patch": "@@ -612,6 +612,7 @@ HAVE_STRERROR_R_FALSE\n HAVE_STRERROR_R_TRUE\n HAVE_SYS_MMAN_H_FALSE\n HAVE_SYS_MMAN_H_TRUE\n+GO_BIGENDIAN\n PTHREAD_LIBS\n PTHREAD_CFLAGS\n NET_LIBS\n@@ -11100,7 +11101,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11103 \"configure\"\n+#line 11104 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11206,7 +11207,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11209 \"configure\"\n+#line 11210 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -14408,6 +14409,12 @@ $as_echo \"#define AC_APPLE_UNIVERSAL_BUILD 1\" >>confdefs.h\n  presetting ac_cv_c_bigendian=no (or yes) will help\" \"$LINENO\" 5 ;;\n  esac\n \n+case $ac_cv_c_bigendian in\n+  yes) GO_BIGENDIAN=true ;;\n+  no) GO_BIGENDIAN=false ;;\n+  *) as_fn_error \"unknown endianness\" \"$LINENO\" 5 ;;\n+esac\n+\n \n \n "}, {"sha": "8be03911b87cc07d1b67ba4844b8da80bde1e0d2", "filename": "libgo/configure.ac", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea8505da9065b468420470afd10efec62a0048ad/libgo%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea8505da9065b468420470afd10efec62a0048ad/libgo%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fconfigure.ac?ref=ea8505da9065b468420470afd10efec62a0048ad", "patch": "@@ -400,6 +400,12 @@ dnl Test if -lrt is required for sched_yield.\n AC_SEARCH_LIBS([sched_yield], [rt])\n \n AC_C_BIGENDIAN\n+case $ac_cv_c_bigendian in\n+  yes) GO_BIGENDIAN=true ;;\n+  no) GO_BIGENDIAN=false ;;\n+  *) AC_MSG_ERROR([unknown endianness]) ;;\n+esac\n+AC_SUBST(GO_BIGENDIAN)\n \n GCC_CHECK_UNWIND_GETIPINFO\n "}, {"sha": "0d7017f301e739bbdd09780741ac42c062006823", "filename": "libgo/go/net/interface_linux.go", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea8505da9065b468420470afd10efec62a0048ad/libgo%2Fgo%2Fnet%2Finterface_linux.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea8505da9065b468420470afd10efec62a0048ad/libgo%2Fgo%2Fnet%2Finterface_linux.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fnet%2Finterface_linux.go?ref=ea8505da9065b468420470afd10efec62a0048ad", "patch": "@@ -64,7 +64,11 @@ func newLink(ifim *syscall.IfInfomsg, attrs []syscall.NetlinkRouteAttr) Interfac\n \t\tcase syscall.IFLA_IFNAME:\n \t\t\tifi.Name = string(a.Value[:len(a.Value)-1])\n \t\tcase syscall.IFLA_MTU:\n-\t\t\tifi.MTU = int(uint32(a.Value[3])<<24 | uint32(a.Value[2])<<16 | uint32(a.Value[1])<<8 | uint32(a.Value[0]))\n+\t\t\tif syscall.BigEndian {\n+\t\t\t\tifi.MTU = int(uint32(a.Value[0])<<24 | uint32(a.Value[1])<<16 | uint32(a.Value[2])<<8 | uint32(a.Value[3]))\n+\t\t\t} else {\n+\t\t\t\tifi.MTU = int(uint32(a.Value[3])<<24 | uint32(a.Value[2])<<16 | uint32(a.Value[1])<<8 | uint32(a.Value[0]))\n+\t\t\t}\n \t\t}\n \t}\n \treturn ifi\n@@ -196,7 +200,12 @@ func parseProcNetIGMP(path string, ifi *Interface) []Addr {\n \t\t\t\tfor i := 0; i+1 < len(f[0]); i += 2 {\n \t\t\t\t\tb[i/2], _ = xtoi2(f[0][i:i+2], 0)\n \t\t\t\t}\n-\t\t\t\tifma := IPAddr{IP: IPv4(b[3], b[2], b[1], b[0])}\n+\t\t\t\tvar ifma IPAddr\n+\t\t\t\tif syscall.BigEndian {\n+\t\t\t\t\tifma = IPAddr{IP: IPv4(b[0], b[1], b[2], b[3])}\n+\t\t\t\t} else {\n+\t\t\t\t\tifma = IPAddr{IP: IPv4(b[3], b[2], b[1], b[0])}\n+\t\t\t\t}\n \t\t\t\tifmat = append(ifmat, ifma.toAddr())\n \t\t\t}\n \t\t}"}, {"sha": "1c99a81785f0ce84cb0e11c016c478e7d37b6d30", "filename": "libgo/go/syscall/netlink_linux.go", "status": "modified", "additions": 37, "deletions": 17, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea8505da9065b468420470afd10efec62a0048ad/libgo%2Fgo%2Fsyscall%2Fnetlink_linux.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea8505da9065b468420470afd10efec62a0048ad/libgo%2Fgo%2Fsyscall%2Fnetlink_linux.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fsyscall%2Fnetlink_linux.go?ref=ea8505da9065b468420470afd10efec62a0048ad", "patch": "@@ -30,23 +30,43 @@ type NetlinkRouteRequest struct {\n \n func (rr *NetlinkRouteRequest) toWireFormat() []byte {\n \tb := make([]byte, rr.Header.Len)\n-\tb[0] = byte(rr.Header.Len)\n-\tb[1] = byte(rr.Header.Len >> 8)\n-\tb[2] = byte(rr.Header.Len >> 16)\n-\tb[3] = byte(rr.Header.Len >> 24)\n-\tb[4] = byte(rr.Header.Type)\n-\tb[5] = byte(rr.Header.Type >> 8)\n-\tb[6] = byte(rr.Header.Flags)\n-\tb[7] = byte(rr.Header.Flags >> 8)\n-\tb[8] = byte(rr.Header.Seq)\n-\tb[9] = byte(rr.Header.Seq >> 8)\n-\tb[10] = byte(rr.Header.Seq >> 16)\n-\tb[11] = byte(rr.Header.Seq >> 24)\n-\tb[12] = byte(rr.Header.Pid)\n-\tb[13] = byte(rr.Header.Pid >> 8)\n-\tb[14] = byte(rr.Header.Pid >> 16)\n-\tb[15] = byte(rr.Header.Pid >> 24)\n-\tb[16] = byte(rr.Data.Family)\n+\tif BigEndian {\n+\t\tb[0] = byte(rr.Header.Len >> 24)\n+\t\tb[1] = byte(rr.Header.Len >> 16)\n+\t\tb[2] = byte(rr.Header.Len >> 8)\n+\t\tb[3] = byte(rr.Header.Len)\n+\t\tb[4] = byte(rr.Header.Type >> 8)\n+\t\tb[5] = byte(rr.Header.Type)\n+\t\tb[6] = byte(rr.Header.Flags >> 8)\n+\t\tb[7] = byte(rr.Header.Flags)\n+\t\tb[8] = byte(rr.Header.Seq >> 24)\n+\t\tb[9] = byte(rr.Header.Seq >> 16)\n+\t\tb[10] = byte(rr.Header.Seq >> 8)\n+\t\tb[11] = byte(rr.Header.Seq)\n+\t\tb[12] = byte(rr.Header.Pid >> 24)\n+\t\tb[13] = byte(rr.Header.Pid >> 16)\n+\t\tb[14] = byte(rr.Header.Pid >> 8)\n+\t\tb[15] = byte(rr.Header.Pid)\n+\t\tb[16] = byte(rr.Data.Family)\n+\t} else {\n+\t\tb[0] = byte(rr.Header.Len)\n+\t\tb[1] = byte(rr.Header.Len >> 8)\n+\t\tb[2] = byte(rr.Header.Len >> 16)\n+\t\tb[3] = byte(rr.Header.Len >> 24)\n+\t\tb[4] = byte(rr.Header.Type)\n+\t\tb[5] = byte(rr.Header.Type >> 8)\n+\t\tb[6] = byte(rr.Header.Flags)\n+\t\tb[7] = byte(rr.Header.Flags >> 8)\n+\t\tb[8] = byte(rr.Header.Seq)\n+\t\tb[9] = byte(rr.Header.Seq >> 8)\n+\t\tb[10] = byte(rr.Header.Seq >> 16)\n+\t\tb[11] = byte(rr.Header.Seq >> 24)\n+\t\tb[12] = byte(rr.Header.Pid)\n+\t\tb[13] = byte(rr.Header.Pid >> 8)\n+\t\tb[14] = byte(rr.Header.Pid >> 16)\n+\t\tb[15] = byte(rr.Header.Pid >> 24)\n+\t\tb[16] = byte(rr.Data.Family)\n+\t}\n \treturn b\n }\n "}, {"sha": "56808efd168e3d071db7bec917fc6fda2ca18ddf", "filename": "libgo/testsuite/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea8505da9065b468420470afd10efec62a0048ad/libgo%2Ftestsuite%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea8505da9065b468420470afd10efec62a0048ad/libgo%2Ftestsuite%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Ftestsuite%2FMakefile.in?ref=ea8505da9065b468420470afd10efec62a0048ad", "patch": "@@ -86,6 +86,7 @@ GOARCH = @GOARCH@\n GOC = @GOC@\n GOCFLAGS = @GOCFLAGS@\n GOOS = @GOOS@\n+GO_BIGENDIAN = @GO_BIGENDIAN@\n GO_LIBCALL_OS_ARCH_FILE = @GO_LIBCALL_OS_ARCH_FILE@\n GO_LIBCALL_OS_FILE = @GO_LIBCALL_OS_FILE@\n GO_SYSCALL_OS_ARCH_FILE = @GO_SYSCALL_OS_ARCH_FILE@"}]}