{"sha": "0f4b8b316f13f7da1ad4c1de233b200732966b82", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGY0YjhiMzE2ZjEzZjdkYTFhZDRjMWRlMjMzYjIwMDczMjk2NmI4Mg==", "commit": {"author": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2016-01-27T01:07:08Z"}, "committer": {"name": "Iain Buclaw", "email": "ibuclaw@gcc.gnu.org", "date": "2016-01-27T01:07:08Z"}, "message": "d-demangle.c (dlang_type): Handle function types only in the context of seeing a pointer type symbol.\n\nlibiberty/ChangeLog:\n\n2016-01-27  Iain Buclaw  <ibuclaw@gdcproject.org>\n\n\t* d-demangle.c (dlang_type): Handle function types only in the context\n\tof seeing a pointer type symbol.\n\t* testsuite/d-demangle-expected: Update function pointer tests.\n\nFrom-SVN: r232862", "tree": {"sha": "25cd92bdd1255813a46e54925466a36b26173cb4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/25cd92bdd1255813a46e54925466a36b26173cb4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0f4b8b316f13f7da1ad4c1de233b200732966b82", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f4b8b316f13f7da1ad4c1de233b200732966b82", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f4b8b316f13f7da1ad4c1de233b200732966b82", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f4b8b316f13f7da1ad4c1de233b200732966b82/comments", "author": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6fc362932a2fd2699981084c47ee3818321dbd44", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6fc362932a2fd2699981084c47ee3818321dbd44", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6fc362932a2fd2699981084c47ee3818321dbd44"}], "stats": {"total": 64, "additions": 36, "deletions": 28}, "files": [{"sha": "aa1af40c50c3f56184b33683644a7eb781b901f4", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f4b8b316f13f7da1ad4c1de233b200732966b82/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f4b8b316f13f7da1ad4c1de233b200732966b82/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=0f4b8b316f13f7da1ad4c1de233b200732966b82", "patch": "@@ -1,3 +1,9 @@\n+2016-01-27  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-demangle.c (dlang_type): Handle function types only in the context\n+\tof seeing a pointer type symbol.\n+\t* testsuite/d-demangle-expected: Update function pointer tests.\n+\n 2016-01-05  Mike Frysinger  <vapier@gentoo.org>\n \n \t* argv.c (dupargv): Change arg to char * const *.  Update comment."}, {"sha": "9c4d4597e8d9064928b058c8e01af86f21a66e14", "filename": "libiberty/d-demangle.c", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f4b8b316f13f7da1ad4c1de233b200732966b82/libiberty%2Fd-demangle.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f4b8b316f13f7da1ad4c1de233b200732966b82/libiberty%2Fd-demangle.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fd-demangle.c?ref=0f4b8b316f13f7da1ad4c1de233b200732966b82", "patch": "@@ -1,5 +1,5 @@\n /* Demangler for the D programming language\n-   Copyright 2014, 2015 Free Software Foundation, Inc.\n+   Copyright 2014, 2015, 2016 Free Software Foundation, Inc.\n    Written by Iain Buclaw (ibuclaw@gdcproject.org)\n \n This file is part of the libiberty library.\n@@ -533,6 +533,15 @@ dlang_type (string *decl, const char *mangled)\n     }\n     case 'P': /* pointer (T*) */\n       mangled++;\n+      /* Function pointer types don't include the trailing asterisk.  */\n+      switch (*mangled)\n+\t{\n+\tcase 'F': case 'U': case 'W':\n+\tcase 'V': case 'R':\n+\t  mangled = dlang_function_type (decl, mangled);\n+\t  string_append (decl, \"function\");\n+\t  return mangled;\n+\t}\n       mangled = dlang_type (decl, mangled);\n       string_append (decl, \"*\");\n       return mangled;\n@@ -564,13 +573,6 @@ dlang_type (string *decl, const char *mangled)\n       mangled++;\n       return dlang_parse_tuple (decl, mangled);\n \n-    /* Function types */\n-    case 'F': case 'U': case 'W':\n-    case 'V': case 'R':\n-      mangled = dlang_function_type (decl, mangled);\n-      string_append (decl, \"function\");\n-      return mangled;\n-\n     /* Basic types */\n     case 'n':\n       mangled++;"}, {"sha": "11785f2c572f21ebe8bfaee7140e7082dca1b178", "filename": "libiberty/testsuite/d-demangle-expected", "status": "modified", "additions": 20, "deletions": 20, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f4b8b316f13f7da1ad4c1de233b200732966b82/libiberty%2Ftestsuite%2Fd-demangle-expected", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f4b8b316f13f7da1ad4c1de233b200732966b82/libiberty%2Ftestsuite%2Fd-demangle-expected", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Ftestsuite%2Fd-demangle-expected?ref=0f4b8b316f13f7da1ad4c1de233b200732966b82", "patch": "@@ -390,23 +390,23 @@ _D8demangle4testFDRZaZv\n demangle.test(extern(C++) char() delegate)\n #\n --format=dlang\n-_D8demangle4testFFZaZv\n+_D8demangle4testFPFZaZv\n demangle.test(char() function)\n #\n --format=dlang\n-_D8demangle4testFUZaZv\n+_D8demangle4testFPUZaZv\n demangle.test(extern(C) char() function)\n #\n --format=dlang\n-_D8demangle4testFWZaZv\n+_D8demangle4testFPWZaZv\n demangle.test(extern(Windows) char() function)\n #\n --format=dlang\n-_D8demangle4testFVZaZv\n+_D8demangle4testFPVZaZv\n demangle.test(extern(Pascal) char() function)\n #\n --format=dlang\n-_D8demangle4testFRZaZv\n+_D8demangle4testFPRZaZv\n demangle.test(extern(C++) char() function)\n #\n --format=dlang\n@@ -466,59 +466,59 @@ _D8demangle4testFNjNkDFNjZaZv\n demangle.test(return char() return delegate)\n #\n --format=dlang\n-_D8demangle4testFFNaZaZv\n+_D8demangle4testFPFNaZaZv\n demangle.test(char() pure function)\n #\n --format=dlang\n-_D8demangle4testFFNbZaZv\n+_D8demangle4testFPFNbZaZv\n demangle.test(char() nothrow function)\n #\n --format=dlang\n-_D8demangle4testFFNcZaZv\n+_D8demangle4testFPFNcZaZv\n demangle.test(char() ref function)\n #\n --format=dlang\n-_D8demangle4testFFNdZaZv\n+_D8demangle4testFPFNdZaZv\n demangle.test(char() @property function)\n #\n --format=dlang\n-_D8demangle4testFFNeZaZv\n+_D8demangle4testFPFNeZaZv\n demangle.test(char() @trusted function)\n #\n --format=dlang\n-_D8demangle4testFFNfZaZv\n+_D8demangle4testFPFNfZaZv\n demangle.test(char() @safe function)\n #\n --format=dlang\n-_D8demangle4testFFNiZaZv\n+_D8demangle4testFPFNiZaZv\n demangle.test(char() @nogc function)\n #\n --format=dlang\n-_D8demangle4testFFNaNbZaZv\n+_D8demangle4testFPFNaNbZaZv\n demangle.test(char() pure nothrow function)\n #\n --format=dlang\n-_D8demangle4testFFNbNaZaZv\n+_D8demangle4testFPFNbNaZaZv\n demangle.test(char() nothrow pure function)\n #\n --format=dlang\n-_D8demangle4testFFNdNfNaZaZv\n+_D8demangle4testFPFNdNfNaZaZv\n demangle.test(char() @property @safe pure function)\n #\n --format=dlang\n-_D8demangle4testFNjFZaZv\n+_D8demangle4testFNjPFZaZv\n demangle.test(char() function)\n #\n --format=dlang\n-_D8demangle4testFNkFZaZv\n+_D8demangle4testFNkPFZaZv\n demangle.test(return char() function)\n #\n --format=dlang\n-_D8demangle4testFFNjZaZv\n+_D8demangle4testFPFNjZaZv\n demangle.test(char() return function)\n #\n --format=dlang\n-_D8demangle4testFNjNkFNjZaZv\n+_D8demangle4testFNjNkPFNjZaZv\n demangle.test(return char() return function)\n #\n --format=dlang\n@@ -989,7 +989,7 @@ object.TypeInfo_Array.argTypes(out TypeInfo, out TypeInfo)\n #\n --format=dlang\n _D2rt6dmain211_d_run_mainUiPPaPUAAaZiZ7tryExecMFMDFZvZv\n-rt.dmain2._d_run_main(int, char**, extern(C) int(char[][]) function*).tryExec(scope void() delegate)\n+rt.dmain2._d_run_main(int, char**, extern(C) int(char[][]) function).tryExec(scope void() delegate)\n #\n --format=dlang\n _D6object9Exception6__ctorMFNaNbNfAyaAyamC6object9ThrowableZC9Exception"}]}