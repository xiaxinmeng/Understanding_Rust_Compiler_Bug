{"sha": "a222c01a3c1303a06effdaae303394edcebf6c7b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTIyMmMwMWEzYzEzMDNhMDZlZmZkYWFlMzAzMzk0ZWRjZWJmNmM3Yg==", "commit": {"author": {"name": "Michael Matz", "email": "matz@suse.de", "date": "2010-11-17T15:18:08Z"}, "committer": {"name": "Michael Matz", "email": "matz@gcc.gnu.org", "date": "2010-11-17T15:18:08Z"}, "message": "timevar.def (TV_IPA_OPT, [...]): New.\n\n\t* timevar.def (TV_IPA_OPT, TV_EARLY_LOCAL, TV_OPTIMIZE,\n\tTV_POSTRELOAD, TV_REMOVE_UNUSED, TV_ADDRESS_TAKEN, TV_TODO,\n\tTV_VERIFY_LOOP_CLOSED, TV_VERIFY_RTL_SHARING,\n\tTV_REBUILD_FREQUENCIES, TV_REPAIR_LOOPS): New.\n\t* tree-into-ssa.c (rewrite_into_ssa): Don't push/pop timevar here ...\n\t(pass_build_ssa): ... but here.\n\t* cgraphbuild.c (pass_rebuild_cgraph): Use timevar.\n\t* tree-ssa-loop-manip.c (verify_loop_closed_ssa): Use timevar.\n\t* tree-emutls.c (pass_ipa_lower_emutls): Ditto.\n\t* df-core.c (pass_df_initialize_opt,\n\tpass_df_initialize_no_opt): Ditto.\n\t* predict.c (rebuild_frequencies): Ditto.\n\t* tree-vectorizer.c (pass_ipa_increase_alignment): Ditto.\n\t* emit-rtl.c (verify_rtl_sharing): Ditto.\n\t* tree-cfgcleanup.c (repair_loop_structures): Ditto.\n\t* tree-ssa-live.c (remove_unused_locals): Ditto.\n\t* cfglayout.c (pass_into_cfg_layout, pass_outof_cfg_layout): Ditto.\n\t* tree-ssa.c (pass_early_warn_uninitialized,\n\texecute_update_addresses_taken, pass_update_address_taken): Ditto.\n\t* tree-optimize.c (pass_all_optimizations, pass_early_local_passes,\n\tpass_cleanup_cfg_post_optimizing, tree_rest_of_compilation): Ditto.\n\t* passes.c (pass_postreload, execute_todo): Ditto.\n\t* tree-ssanames.c (pass_release_ssa_names): Ditto.\n\nFrom-SVN: r166869", "tree": {"sha": "49837c266bb5a0b2d50b1b7cd8b7dc8ad0f0fb92", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/49837c266bb5a0b2d50b1b7cd8b7dc8ad0f0fb92"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a222c01a3c1303a06effdaae303394edcebf6c7b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a222c01a3c1303a06effdaae303394edcebf6c7b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a222c01a3c1303a06effdaae303394edcebf6c7b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a222c01a3c1303a06effdaae303394edcebf6c7b/comments", "author": {"login": "susematz", "id": 4117296, "node_id": "MDQ6VXNlcjQxMTcyOTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4117296?v=4", "gravatar_id": "", "url": "https://api.github.com/users/susematz", "html_url": "https://github.com/susematz", "followers_url": "https://api.github.com/users/susematz/followers", "following_url": "https://api.github.com/users/susematz/following{/other_user}", "gists_url": "https://api.github.com/users/susematz/gists{/gist_id}", "starred_url": "https://api.github.com/users/susematz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/susematz/subscriptions", "organizations_url": "https://api.github.com/users/susematz/orgs", "repos_url": "https://api.github.com/users/susematz/repos", "events_url": "https://api.github.com/users/susematz/events{/privacy}", "received_events_url": "https://api.github.com/users/susematz/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b37421c62a163edcc389bb32df13b7589cfe5715", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b37421c62a163edcc389bb32df13b7589cfe5715", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b37421c62a163edcc389bb32df13b7589cfe5715"}], "stats": {"total": 105, "additions": 82, "deletions": 23}, "files": [{"sha": "b770487705576e246bd88b83d25559344448dce7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a222c01a3c1303a06effdaae303394edcebf6c7b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a222c01a3c1303a06effdaae303394edcebf6c7b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a222c01a3c1303a06effdaae303394edcebf6c7b", "patch": "@@ -1,3 +1,29 @@\n+2010-11-17  Michael Matz  <matz@suse.de>\n+\n+\t* timevar.def (TV_IPA_OPT, TV_EARLY_LOCAL, TV_OPTIMIZE,\n+\tTV_POSTRELOAD, TV_REMOVE_UNUSED, TV_ADDRESS_TAKEN, TV_TODO,\n+\tTV_VERIFY_LOOP_CLOSED, TV_VERIFY_RTL_SHARING,\n+\tTV_REBUILD_FREQUENCIES, TV_REPAIR_LOOPS): New.\n+\t* tree-into-ssa.c (rewrite_into_ssa): Don't push/pop timevar here ...\n+\t(pass_build_ssa): ... but here.\n+\t* cgraphbuild.c (pass_rebuild_cgraph): Use timevar.\n+\t* tree-ssa-loop-manip.c (verify_loop_closed_ssa): Use timevar.\n+\t* tree-emutls.c (pass_ipa_lower_emutls): Ditto.\n+\t* df-core.c (pass_df_initialize_opt,\n+\tpass_df_initialize_no_opt): Ditto.\n+\t* predict.c (rebuild_frequencies): Ditto.\n+\t* tree-vectorizer.c (pass_ipa_increase_alignment): Ditto.\n+\t* emit-rtl.c (verify_rtl_sharing): Ditto.\n+\t* tree-cfgcleanup.c (repair_loop_structures): Ditto.\n+\t* tree-ssa-live.c (remove_unused_locals): Ditto.\n+\t* cfglayout.c (pass_into_cfg_layout, pass_outof_cfg_layout): Ditto.\n+\t* tree-ssa.c (pass_early_warn_uninitialized,\n+\texecute_update_addresses_taken, pass_update_address_taken): Ditto.\n+\t* tree-optimize.c (pass_all_optimizations, pass_early_local_passes,\n+\tpass_cleanup_cfg_post_optimizing, tree_rest_of_compilation): Ditto.\n+\t* passes.c (pass_postreload, execute_todo): Ditto.\n+\t* tree-ssanames.c (pass_release_ssa_names): Ditto.\n+\n 2010-11-17  Joseph Myers  <joseph@codesourcery.com>\n \n \t* doc/invoke.texi (-dy): Remove."}, {"sha": "be99991e8db1d29bf41768192a8abc0b17f0a17a", "filename": "gcc/cfglayout.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a222c01a3c1303a06effdaae303394edcebf6c7b/gcc%2Fcfglayout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a222c01a3c1303a06effdaae303394edcebf6c7b/gcc%2Fcfglayout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfglayout.c?ref=a222c01a3c1303a06effdaae303394edcebf6c7b", "patch": "@@ -374,7 +374,7 @@ struct rtl_opt_pass pass_into_cfg_layout_mode =\n   NULL,                                 /* sub */\n   NULL,                                 /* next */\n   0,                                    /* static_pass_number */\n-  TV_NONE,                              /* tv_id */\n+  TV_CFG,                               /* tv_id */\n   0,                                    /* properties_required */\n   PROP_cfglayout,                       /* properties_provided */\n   0,                                    /* properties_destroyed */\n@@ -393,7 +393,7 @@ struct rtl_opt_pass pass_outof_cfg_layout_mode =\n   NULL,                                 /* sub */\n   NULL,                                 /* next */\n   0,                                    /* static_pass_number */\n-  TV_NONE,                              /* tv_id */\n+  TV_CFG,                               /* tv_id */\n   0,                                    /* properties_required */\n   0,                                    /* properties_provided */\n   PROP_cfglayout,                       /* properties_destroyed */"}, {"sha": "f9d70dbb7926cf07f17bbf9c88b99cef98c5a8a8", "filename": "gcc/cgraphbuild.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a222c01a3c1303a06effdaae303394edcebf6c7b/gcc%2Fcgraphbuild.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a222c01a3c1303a06effdaae303394edcebf6c7b/gcc%2Fcgraphbuild.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraphbuild.c?ref=a222c01a3c1303a06effdaae303394edcebf6c7b", "patch": "@@ -521,7 +521,7 @@ struct gimple_opt_pass pass_rebuild_cgraph_edges =\n   NULL,\t\t\t\t\t/* sub */\n   NULL,\t\t\t\t\t/* next */\n   0,\t\t\t\t\t/* static_pass_number */\n-  TV_NONE,\t\t\t\t/* tv_id */\n+  TV_CGRAPH,\t\t\t\t/* tv_id */\n   PROP_cfg,\t\t\t\t/* properties_required */\n   0,\t\t\t\t\t/* properties_provided */\n   0,\t\t\t\t\t/* properties_destroyed */"}, {"sha": "06ff854b57b91140a68d145b95e023da27c51592", "filename": "gcc/df-core.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a222c01a3c1303a06effdaae303394edcebf6c7b/gcc%2Fdf-core.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a222c01a3c1303a06effdaae303394edcebf6c7b/gcc%2Fdf-core.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdf-core.c?ref=a222c01a3c1303a06effdaae303394edcebf6c7b", "patch": "@@ -758,7 +758,7 @@ struct rtl_opt_pass pass_df_initialize_opt =\n   NULL,                                 /* sub */\n   NULL,                                 /* next */\n   0,                                    /* static_pass_number */\n-  TV_NONE,                              /* tv_id */\n+  TV_DF_SCAN,                           /* tv_id */\n   0,                                    /* properties_required */\n   0,                                    /* properties_provided */\n   0,                                    /* properties_destroyed */\n@@ -785,7 +785,7 @@ struct rtl_opt_pass pass_df_initialize_no_opt =\n   NULL,                                 /* sub */\n   NULL,                                 /* next */\n   0,                                    /* static_pass_number */\n-  TV_NONE,                              /* tv_id */\n+  TV_DF_SCAN,                           /* tv_id */\n   0,                                    /* properties_required */\n   0,                                    /* properties_provided */\n   0,                                    /* properties_destroyed */"}, {"sha": "f0fdc990b21b0778e74caa622675459cb99a007f", "filename": "gcc/emit-rtl.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a222c01a3c1303a06effdaae303394edcebf6c7b/gcc%2Femit-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a222c01a3c1303a06effdaae303394edcebf6c7b/gcc%2Femit-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Femit-rtl.c?ref=a222c01a3c1303a06effdaae303394edcebf6c7b", "patch": "@@ -2526,6 +2526,8 @@ verify_rtl_sharing (void)\n {\n   rtx p;\n \n+  timevar_push (TV_VERIFY_RTL_SHARING);\n+\n   for (p = get_insns (); p; p = NEXT_INSN (p))\n     if (INSN_P (p))\n       {\n@@ -2552,6 +2554,8 @@ verify_rtl_sharing (void)\n \tverify_rtx_sharing (PATTERN (p), p);\n \tverify_rtx_sharing (REG_NOTES (p), p);\n       }\n+\n+  timevar_pop (TV_VERIFY_RTL_SHARING);\n }\n \n /* Go through all the RTL insn bodies and copy any invalid shared structure."}, {"sha": "b5cb2aca300a170a12d3d5b6e95e85b4db466fec", "filename": "gcc/passes.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a222c01a3c1303a06effdaae303394edcebf6c7b/gcc%2Fpasses.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a222c01a3c1303a06effdaae303394edcebf6c7b/gcc%2Fpasses.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpasses.c?ref=a222c01a3c1303a06effdaae303394edcebf6c7b", "patch": "@@ -324,7 +324,7 @@ struct rtl_opt_pass pass_postreload =\n   NULL,                                 /* sub */\n   NULL,                                 /* next */\n   0,                                    /* static_pass_number */\n-  TV_NONE,                              /* tv_id */\n+  TV_POSTRELOAD,                        /* tv_id */\n   PROP_rtl,                             /* properties_required */\n   0,                                    /* properties_provided */\n   0,                                    /* properties_destroyed */\n@@ -1269,6 +1269,8 @@ execute_todo (unsigned int flags)\n     gcc_assert (flags & TODO_update_ssa_any);\n #endif\n \n+  timevar_push (TV_TODO);\n+\n   /* Inform the pass whether it is the first time it is run.  */\n   first_pass_instance = (flags & TODO_mark_first_instance) != 0;\n \n@@ -1302,6 +1304,8 @@ execute_todo (unsigned int flags)\n      df problems.  */\n   if (flags & TODO_df_finish)\n     df_finish_pass ((flags & TODO_df_verify) != 0);\n+\n+  timevar_pop (TV_TODO);\n }\n \n /* Verify invariants that should hold between passes.  This is a place"}, {"sha": "5fcfc1ea4324ff3f08f39813e03e7725c62e901e", "filename": "gcc/predict.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a222c01a3c1303a06effdaae303394edcebf6c7b/gcc%2Fpredict.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a222c01a3c1303a06effdaae303394edcebf6c7b/gcc%2Fpredict.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpredict.c?ref=a222c01a3c1303a06effdaae303394edcebf6c7b", "patch": "@@ -2329,6 +2329,7 @@ struct gimple_opt_pass pass_strip_predict_hints =\n void\n rebuild_frequencies (void)\n {\n+  timevar_push (TV_REBUILD_FREQUENCIES);\n   if (profile_status == PROFILE_GUESSED)\n     {\n       loop_optimizer_init (0);\n@@ -2343,4 +2344,5 @@ rebuild_frequencies (void)\n     counts_to_freqs ();\n   else\n     gcc_unreachable ();\n+  timevar_pop (TV_REBUILD_FREQUENCIES);\n }"}, {"sha": "0c3cae21738306e5e979ca107d7ea3a42711042e", "filename": "gcc/reginfo.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a222c01a3c1303a06effdaae303394edcebf6c7b/gcc%2Freginfo.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a222c01a3c1303a06effdaae303394edcebf6c7b/gcc%2Freginfo.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freginfo.c?ref=a222c01a3c1303a06effdaae303394edcebf6c7b", "patch": "@@ -1019,7 +1019,7 @@ struct rtl_opt_pass pass_reginfo_init =\n   NULL,                                 /* sub */\n   NULL,                                 /* next */\n   0,                                    /* static_pass_number */\n-  TV_NONE,                                    /* tv_id */\n+  TV_NONE,                              /* tv_id */\n   0,                                    /* properties_required */\n   0,                                    /* properties_provided */\n   0,                                    /* properties_destroyed */"}, {"sha": "ec800aa6a508345d3c3b432c8679a13db3534535", "filename": "gcc/timevar.def", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a222c01a3c1303a06effdaae303394edcebf6c7b/gcc%2Ftimevar.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a222c01a3c1303a06effdaae303394edcebf6c7b/gcc%2Ftimevar.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftimevar.def?ref=a222c01a3c1303a06effdaae303394edcebf6c7b", "patch": "@@ -53,6 +53,7 @@ DEFTIMEVAR (TV_CGRAPHOPT             , \"callgraph optimization\")\n DEFTIMEVAR (TV_VARPOOL               , \"varpool construction\")\n DEFTIMEVAR (TV_IPA_CONSTANT_PROP     , \"ipa cp\")\n DEFTIMEVAR (TV_IPA_FNSPLIT           , \"ipa function splitting\")\n+DEFTIMEVAR (TV_IPA_OPT\t\t     , \"ipa various optimizations\")\n DEFTIMEVAR (TV_IPA_LTO_GIMPLE_IN     , \"ipa lto gimple in\")\n DEFTIMEVAR (TV_IPA_LTO_GIMPLE_OUT    , \"ipa lto gimple out\")\n DEFTIMEVAR (TV_IPA_LTO_DECL_IN       , \"ipa lto decl in\")\n@@ -232,9 +233,19 @@ DEFTIMEVAR (TV_VAR_TRACKING          , \"variable tracking\")\n DEFTIMEVAR (TV_VAR_TRACKING_DATAFLOW , \"var-tracking dataflow\")\n DEFTIMEVAR (TV_VAR_TRACKING_EMIT     , \"var-tracking emit\")\n DEFTIMEVAR (TV_TREE_IFCOMBINE        , \"tree if-combine\")\n-DEFTIMEVAR (TV_TREE_UNINIT           , \"uninit var anaysis\")\n+DEFTIMEVAR (TV_TREE_UNINIT           , \"uninit var analysis\")\n DEFTIMEVAR (TV_PLUGIN_INIT           , \"plugin initialization\")\n DEFTIMEVAR (TV_PLUGIN_RUN            , \"plugin execution\")\n \n /* Everything else in rest_of_compilation not included above.  */\n+DEFTIMEVAR (TV_EARLY_LOCAL\t     , \"early local passes\")\n+DEFTIMEVAR (TV_OPTIMIZE\t\t     , \"unaccounted optimizations\")\n DEFTIMEVAR (TV_REST_OF_COMPILATION   , \"rest of compilation\")\n+DEFTIMEVAR (TV_POSTRELOAD\t     , \"unaccounted post reload\")\n+DEFTIMEVAR (TV_REMOVE_UNUSED\t     , \"remove unused locals\")\n+DEFTIMEVAR (TV_ADDRESS_TAKEN\t     , \"address taken\")\n+DEFTIMEVAR (TV_TODO\t\t     , \"unaccounted todo\")\n+DEFTIMEVAR (TV_VERIFY_LOOP_CLOSED    , \"verify loop closed\")\n+DEFTIMEVAR (TV_VERIFY_RTL_SHARING    , \"verify RTL sharing\")\n+DEFTIMEVAR (TV_REBUILD_FREQUENCIES   , \"rebuild frequencies\")\n+DEFTIMEVAR (TV_REPAIR_LOOPS\t     , \"repair loop structures\")"}, {"sha": "aedda430a4c8184ef8142fc85818ae0369e4b765", "filename": "gcc/tree-cfgcleanup.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a222c01a3c1303a06effdaae303394edcebf6c7b/gcc%2Ftree-cfgcleanup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a222c01a3c1303a06effdaae303394edcebf6c7b/gcc%2Ftree-cfgcleanup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfgcleanup.c?ref=a222c01a3c1303a06effdaae303394edcebf6c7b", "patch": "@@ -777,7 +777,10 @@ cleanup_tree_cfg_noloop (void)\n static void\n repair_loop_structures (void)\n {\n-  bitmap changed_bbs = BITMAP_ALLOC (NULL);\n+  bitmap changed_bbs;\n+\n+  timevar_push (TV_REPAIR_LOOPS);\n+  changed_bbs = BITMAP_ALLOC (NULL);\n   fix_loop_structure (changed_bbs);\n \n   /* This usually does nothing.  But sometimes parts of cfg that originally\n@@ -794,6 +797,7 @@ repair_loop_structures (void)\n   scev_reset ();\n \n   loops_state_clear (LOOPS_NEED_FIXUP);\n+  timevar_pop (TV_REPAIR_LOOPS);\n }\n \n /* Cleanup cfg and repair loop structures.  */"}, {"sha": "2a1ec068a8585b38a7a89ebf865dc96afa083b30", "filename": "gcc/tree-emutls.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a222c01a3c1303a06effdaae303394edcebf6c7b/gcc%2Ftree-emutls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a222c01a3c1303a06effdaae303394edcebf6c7b/gcc%2Ftree-emutls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-emutls.c?ref=a222c01a3c1303a06effdaae303394edcebf6c7b", "patch": "@@ -792,7 +792,7 @@ struct simple_ipa_opt_pass pass_ipa_lower_emutls =\n   NULL,                                 /* sub */\n   NULL,                                 /* next */\n   0,                                    /* static_pass_number */\n-  TV_NONE,\t\t\t\t/* tv_id */\n+  TV_IPA_OPT,\t\t\t\t/* tv_id */\n   PROP_cfg | PROP_ssa,\t\t\t/* properties_required */\n   0,                                    /* properties_provided */\n   0,                                    /* properties_destroyed */"}, {"sha": "8d31fe7607e97aea97568df55ffe2f541633c75c", "filename": "gcc/tree-into-ssa.c", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a222c01a3c1303a06effdaae303394edcebf6c7b/gcc%2Ftree-into-ssa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a222c01a3c1303a06effdaae303394edcebf6c7b/gcc%2Ftree-into-ssa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-into-ssa.c?ref=a222c01a3c1303a06effdaae303394edcebf6c7b", "patch": "@@ -2339,8 +2339,6 @@ rewrite_into_ssa (void)\n   bitmap_head *dfs;\n   basic_block bb;\n \n-  timevar_push (TV_TREE_SSA_OTHER);\n-\n   /* Initialize operand data structures.  */\n   init_ssa_operands ();\n \n@@ -2380,7 +2378,6 @@ rewrite_into_ssa (void)\n \n   fini_ssa_renamer ();\n \n-  timevar_pop (TV_TREE_SSA_OTHER);\n   return 0;\n }\n \n@@ -2395,7 +2392,7 @@ struct gimple_opt_pass pass_build_ssa =\n   NULL,\t\t\t\t\t/* sub */\n   NULL,\t\t\t\t\t/* next */\n   0,\t\t\t\t\t/* static_pass_number */\n-  TV_NONE,\t\t\t\t/* tv_id */\n+  TV_TREE_SSA_OTHER,\t\t\t/* tv_id */\n   PROP_cfg | PROP_referenced_vars,\t/* properties_required */\n   PROP_ssa,\t\t\t\t/* properties_provided */\n   0,\t\t\t\t\t/* properties_destroyed */"}, {"sha": "facbd93a4a24a2751ec29feea19dbd72fce252b3", "filename": "gcc/tree-optimize.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a222c01a3c1303a06effdaae303394edcebf6c7b/gcc%2Ftree-optimize.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a222c01a3c1303a06effdaae303394edcebf6c7b/gcc%2Ftree-optimize.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-optimize.c?ref=a222c01a3c1303a06effdaae303394edcebf6c7b", "patch": "@@ -69,7 +69,7 @@ struct gimple_opt_pass pass_all_optimizations =\n   NULL,\t\t\t\t\t/* sub */\n   NULL,\t\t\t\t\t/* next */\n   0,\t\t\t\t\t/* static_pass_number */\n-  TV_NONE,\t\t\t\t/* tv_id */\n+  TV_OPTIMIZE,\t\t\t\t/* tv_id */\n   0,\t\t\t\t\t/* properties_required */\n   0,\t\t\t\t\t/* properties_provided */\n   0,\t\t\t\t\t/* properties_destroyed */\n@@ -111,7 +111,7 @@ struct simple_ipa_opt_pass pass_early_local_passes =\n   NULL,\t\t\t\t\t/* sub */\n   NULL,\t\t\t\t\t/* next */\n   0,\t\t\t\t\t/* static_pass_number */\n-  TV_NONE,\t\t\t\t/* tv_id */\n+  TV_EARLY_LOCAL,\t\t\t/* tv_id */\n   0,\t\t\t\t\t/* properties_required */\n   0,\t\t\t\t\t/* properties_provided */\n   0,\t\t\t\t\t/* properties_destroyed */\n@@ -203,7 +203,7 @@ struct gimple_opt_pass pass_cleanup_cfg_post_optimizing =\n   NULL,\t\t\t\t\t/* sub */\n   NULL,\t\t\t\t\t/* next */\n   0,\t\t\t\t\t/* static_pass_number */\n-  TV_NONE,\t\t\t\t/* tv_id */\n+  TV_TREE_CLEANUP_CFG,\t\t\t/* tv_id */\n   PROP_cfg,\t\t\t\t/* properties_required */\n   0,\t\t\t\t\t/* properties_provided */\n   0,\t\t\t\t\t/* properties_destroyed */\n@@ -389,7 +389,7 @@ tree_rest_of_compilation (tree fndecl)\n {\n   location_t saved_loc;\n \n-  timevar_push (TV_EXPAND);\n+  timevar_push (TV_REST_OF_COMPILATION);\n \n   gcc_assert (cgraph_global_info_ready);\n \n@@ -471,5 +471,5 @@ tree_rest_of_compilation (tree fndecl)\n   input_location = saved_loc;\n \n   ggc_collect ();\n-  timevar_pop (TV_EXPAND);\n+  timevar_pop (TV_REST_OF_COMPILATION);\n }"}, {"sha": "9fda8b988241b3021307071e4220c53f25f823a7", "filename": "gcc/tree-ssa-live.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a222c01a3c1303a06effdaae303394edcebf6c7b/gcc%2Ftree-ssa-live.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a222c01a3c1303a06effdaae303394edcebf6c7b/gcc%2Ftree-ssa-live.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-live.c?ref=a222c01a3c1303a06effdaae303394edcebf6c7b", "patch": "@@ -695,6 +695,8 @@ remove_unused_locals (void)\n   if (!optimize)\n     return;\n \n+  timevar_push (TV_REMOVE_UNUSED);\n+\n   mark_scope_block_unused (DECL_INITIAL (current_function_decl));\n \n   /* Assume all locals are unused.  */\n@@ -827,6 +829,8 @@ remove_unused_locals (void)\n       fprintf (dump_file, \"Scope blocks after cleanups:\\n\");\n       dump_scope_blocks (dump_file, dump_flags);\n     }\n+\n+  timevar_pop (TV_REMOVE_UNUSED);\n }\n \n "}, {"sha": "87b2c0d095d9b05aca334a9d92024a0e077169e0", "filename": "gcc/tree-ssa-loop-manip.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a222c01a3c1303a06effdaae303394edcebf6c7b/gcc%2Ftree-ssa-loop-manip.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a222c01a3c1303a06effdaae303394edcebf6c7b/gcc%2Ftree-ssa-loop-manip.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-manip.c?ref=a222c01a3c1303a06effdaae303394edcebf6c7b", "patch": "@@ -455,6 +455,8 @@ verify_loop_closed_ssa (bool verify_ssa_p)\n   if (verify_ssa_p)\n     verify_ssa (false);\n \n+  timevar_push (TV_VERIFY_LOOP_CLOSED);\n+\n   FOR_EACH_BB (bb)\n     {\n       for (bsi = gsi_start_phis (bb); !gsi_end_p (bsi); gsi_next (&bsi))\n@@ -468,6 +470,8 @@ verify_loop_closed_ssa (bool verify_ssa_p)\n       for (bsi = gsi_start_bb (bb); !gsi_end_p (bsi); gsi_next (&bsi))\n \tcheck_loop_closed_ssa_stmt (bb, gsi_stmt (bsi));\n     }\n+\n+  timevar_pop (TV_VERIFY_LOOP_CLOSED);\n }\n \n /* Split loop exit edge EXIT.  The things are a bit complicated by a need to"}, {"sha": "78497ceb04c63b6e57ee68327456c22e9078f174", "filename": "gcc/tree-ssa.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a222c01a3c1303a06effdaae303394edcebf6c7b/gcc%2Ftree-ssa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a222c01a3c1303a06effdaae303394edcebf6c7b/gcc%2Ftree-ssa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa.c?ref=a222c01a3c1303a06effdaae303394edcebf6c7b", "patch": "@@ -1816,7 +1816,7 @@ struct gimple_opt_pass pass_early_warn_uninitialized =\n   NULL,\t\t\t\t\t/* sub */\n   NULL,\t\t\t\t\t/* next */\n   0,\t\t\t\t\t/* static_pass_number */\n-  TV_NONE,\t\t\t\t/* tv_id */\n+  TV_TREE_UNINIT,\t\t\t/* tv_id */\n   PROP_ssa,\t\t\t\t/* properties_required */\n   0,\t\t\t\t\t/* properties_provided */\n   0,\t\t\t\t\t/* properties_destroyed */\n@@ -1958,6 +1958,8 @@ execute_update_addresses_taken (void)\n   tree var;\n   unsigned i;\n \n+  timevar_push (TV_ADDRESS_TAKEN);\n+\n   /* Collect into ADDRESSES_TAKEN all variables whose address is taken within\n      the function body.  */\n   FOR_EACH_BB (bb)\n@@ -2173,6 +2175,7 @@ execute_update_addresses_taken (void)\n \n   BITMAP_FREE (not_reg_needs);\n   BITMAP_FREE (addresses_taken);\n+  timevar_pop (TV_ADDRESS_TAKEN);\n }\n \n struct gimple_opt_pass pass_update_address_taken =\n@@ -2185,7 +2188,7 @@ struct gimple_opt_pass pass_update_address_taken =\n   NULL,\t\t\t\t\t/* sub */\n   NULL,\t\t\t\t\t/* next */\n   0,\t\t\t\t\t/* static_pass_number */\n-  TV_NONE,\t\t\t\t/* tv_id */\n+  TV_ADDRESS_TAKEN,\t\t\t/* tv_id */\n   PROP_ssa,\t\t\t\t/* properties_required */\n   0,\t\t\t\t\t/* properties_provided */\n   0,\t\t\t\t\t/* properties_destroyed */"}, {"sha": "79d2c3c333e1eb322904b7f68935dd8a0d965491", "filename": "gcc/tree-ssanames.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a222c01a3c1303a06effdaae303394edcebf6c7b/gcc%2Ftree-ssanames.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a222c01a3c1303a06effdaae303394edcebf6c7b/gcc%2Ftree-ssanames.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssanames.c?ref=a222c01a3c1303a06effdaae303394edcebf6c7b", "patch": "@@ -373,7 +373,7 @@ struct gimple_opt_pass pass_release_ssa_names =\n   NULL,\t\t\t\t\t/* sub */\n   NULL,\t\t\t\t\t/* next */\n   0,\t\t\t\t\t/* static_pass_number */\n-  TV_NONE,\t\t\t\t/* tv_id */\n+  TV_TREE_SSA_OTHER,\t\t\t/* tv_id */\n   PROP_ssa,\t\t\t\t/* properties_required */\n   0,\t\t\t\t\t/* properties_provided */\n   0,\t\t\t\t\t/* properties_destroyed */"}, {"sha": "cf8a622ebc7cb58a664a46fde129746e22383b36", "filename": "gcc/tree-vectorizer.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a222c01a3c1303a06effdaae303394edcebf6c7b/gcc%2Ftree-vectorizer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a222c01a3c1303a06effdaae303394edcebf6c7b/gcc%2Ftree-vectorizer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vectorizer.c?ref=a222c01a3c1303a06effdaae303394edcebf6c7b", "patch": "@@ -383,7 +383,7 @@ struct simple_ipa_opt_pass pass_ipa_increase_alignment =\n   NULL,                                 /* sub */\n   NULL,                                 /* next */\n   0,                                    /* static_pass_number */\n-  TV_NONE,                              /* tv_id */\n+  TV_IPA_OPT,                           /* tv_id */\n   0,                                    /* properties_required */\n   0,                                    /* properties_provided */\n   0,                                    /* properties_destroyed */"}]}