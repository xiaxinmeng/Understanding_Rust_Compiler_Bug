{"sha": "686deecbf3455251410ee0908cde6df818f0587c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Njg2ZGVlY2JmMzQ1NTI1MTQxMGVlMDkwOGNkZTZkZjgxOGYwNTg3Yw==", "commit": {"author": {"name": "Joseph Myers", "email": "jsm28@cam.ac.uk", "date": "2001-10-29T22:12:07Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2001-10-29T22:12:07Z"}, "message": "* c-parse.in (expr_no_commas, primary), c-typeck.c\n\t(parser_build_binary_op): Use IS_EXPR_CODE_CLASS.\n\nFrom-SVN: r46619", "tree": {"sha": "44f673d8bcaf90f9eff493f5269abb906249089a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/44f673d8bcaf90f9eff493f5269abb906249089a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/686deecbf3455251410ee0908cde6df818f0587c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/686deecbf3455251410ee0908cde6df818f0587c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/686deecbf3455251410ee0908cde6df818f0587c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/686deecbf3455251410ee0908cde6df818f0587c/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0db58ea45fcf5da5dc6d75b529be7e792b6763a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0db58ea45fcf5da5dc6d75b529be7e792b6763a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0db58ea45fcf5da5dc6d75b529be7e792b6763a4"}], "stats": {"total": 23, "additions": 11, "deletions": 12}, "files": [{"sha": "c03b10315ea9a99f1670a60dc68c545e8f6505b3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/686deecbf3455251410ee0908cde6df818f0587c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/686deecbf3455251410ee0908cde6df818f0587c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=686deecbf3455251410ee0908cde6df818f0587c", "patch": "@@ -1,3 +1,8 @@\n+2001-10-29  Joseph S. Myers  <jsm28@cam.ac.uk>\n+\n+\t* c-parse.in (expr_no_commas, primary), c-typeck.c\n+\t(parser_build_binary_op): Use IS_EXPR_CODE_CLASS.\n+\n 2001-10-29  David Edelsohn  <edelsohn@gnu.org>\n \n \tUndo assemble_name change in earlier patch."}, {"sha": "b3d9b2fb6cffa4b3263edab705d4bac614a7728c", "filename": "gcc/c-parse.in", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/686deecbf3455251410ee0908cde6df818f0587c/gcc%2Fc-parse.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/686deecbf3455251410ee0908cde6df818f0587c/gcc%2Fc-parse.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-parse.in?ref=686deecbf3455251410ee0908cde6df818f0587c", "patch": "@@ -605,17 +605,15 @@ expr_no_commas:\n \t\t{ char class;\n \t\t  $$ = build_modify_expr ($1, NOP_EXPR, $3);\n \t\t  class = TREE_CODE_CLASS (TREE_CODE ($$));\n-\t\t  if (class == 'e' || class == '1'\n-\t\t      || class == '2' || class == '<')\n+\t\t  if (IS_EXPR_CODE_CLASS (class))\n \t\t    C_SET_EXP_ORIGINAL_CODE ($$, MODIFY_EXPR);\n \t\t}\n \t| expr_no_commas ASSIGN expr_no_commas\n \t\t{ char class;\n \t\t  $$ = build_modify_expr ($1, $2, $3);\n \t\t  /* This inhibits warnings in truthvalue_conversion.  */\n \t\t  class = TREE_CODE_CLASS (TREE_CODE ($$));\n-\t\t  if (class == 'e' || class == '1'\n-\t\t      || class == '2' || class == '<')\n+\t\t  if (IS_EXPR_CODE_CLASS (class))\n \t\t    C_SET_EXP_ORIGINAL_CODE ($$, ERROR_MARK);\n \t\t}\n \t;\n@@ -663,8 +661,7 @@ primary:\n \t\t}\n \t| '(' expr ')'\n \t\t{ char class = TREE_CODE_CLASS (TREE_CODE ($2));\n-\t\t  if (class == 'e' || class == '1'\n-\t\t      || class == '2' || class == '<')\n+\t\t  if (IS_EXPR_CODE_CLASS (class))\n \t\t    C_SET_EXP_ORIGINAL_CODE ($2, ERROR_MARK);\n \t\t  $$ = $2; }\n \t| '(' error ')'"}, {"sha": "41ca8ffe8a54b3a9663e3990326de9fe37fec35a", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/686deecbf3455251410ee0908cde6df818f0587c/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/686deecbf3455251410ee0908cde6df818f0587c/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=686deecbf3455251410ee0908cde6df818f0587c", "patch": "@@ -1752,11 +1752,9 @@ parser_build_binary_op (code, arg1, arg2)\n   enum tree_code code1 = ERROR_MARK;\n   enum tree_code code2 = ERROR_MARK;\n \n-  if (class1 == 'e' || class1 == '1'\n-      || class1 == '2' || class1 == '<')\n+  if (IS_EXPR_CODE_CLASS (class1))\n     code1 = C_EXP_ORIGINAL_CODE (arg1);\n-  if (class2 == 'e' || class2 == '1'\n-      || class2 == '2' || class2 == '<')\n+  if (IS_EXPR_CODE_CLASS (class2))\n     code2 = C_EXP_ORIGINAL_CODE (arg2);\n \n   /* Check for cases such as x+y<<z which users are likely\n@@ -1826,8 +1824,7 @@ parser_build_binary_op (code, arg1, arg2)\n \n   /* Record the code that was specified in the source,\n      for the sake of warnings about confusing nesting.  */\n-  if (class == 'e' || class == '1'\n-      || class == '2' || class == '<')\n+  if (IS_EXPR_CODE_CLASS (class))\n     C_SET_EXP_ORIGINAL_CODE (result, code);\n   else\n     {"}]}