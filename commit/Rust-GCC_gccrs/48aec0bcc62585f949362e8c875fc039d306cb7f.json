{"sha": "48aec0bcc62585f949362e8c875fc039d306cb7f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDhhZWMwYmNjNjI1ODVmOTQ5MzYyZThjODc1ZmMwMzlkMzA2Y2I3Zg==", "commit": {"author": {"name": "Devang Patel", "email": "dpatel@apple.com", "date": "2002-12-10T20:20:47Z"}, "committer": {"name": "Devang Patel", "email": "dpatel@gcc.gnu.org", "date": "2002-12-10T20:20:47Z"}, "message": "Add support for darwin linker options.\n\n        * config/darwin.h(LINK_SPEC): Add darwin specific linker options.\n\t* doc/invoke.texi: Add new \"Darwin Options\" section.\n\nFrom-SVN: r60010", "tree": {"sha": "8bfbe1fbed9d8332d9b196d417c070ced76fdedb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8bfbe1fbed9d8332d9b196d417c070ced76fdedb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/48aec0bcc62585f949362e8c875fc039d306cb7f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48aec0bcc62585f949362e8c875fc039d306cb7f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/48aec0bcc62585f949362e8c875fc039d306cb7f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48aec0bcc62585f949362e8c875fc039d306cb7f/comments", "author": null, "committer": null, "parents": [{"sha": "0e9f8e8295d450416a652bb0d0d49eee62960683", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e9f8e8295d450416a652bb0d0d49eee62960683", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e9f8e8295d450416a652bb0d0d49eee62960683"}], "stats": {"total": 345, "additions": 342, "deletions": 3}, "files": [{"sha": "112e5a9a68269fe90697ccb9fcdbb23eb2469a4a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48aec0bcc62585f949362e8c875fc039d306cb7f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48aec0bcc62585f949362e8c875fc039d306cb7f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=48aec0bcc62585f949362e8c875fc039d306cb7f", "patch": "@@ -1,3 +1,7 @@\n+2002-12-10  Devang Patel  <dpatel@appple.com>\n+\t* config/darwin.h(LINK_SPEC): Add darwin specific linker options.\n+\t* doc/invoke.texi: Add new \"Darwin Options\" section.\n+\t\n 2002-12-10  Jim Wilson  <wilson@redhat.com>\n \n \t* rs6000.h (RETURN_IN_MEMORY): If ABI_V4, then TFmode is returned in"}, {"sha": "7997a46e7a54f60cfd1bd022737306f045a99176", "filename": "gcc/config/darwin.h", "status": "modified", "additions": 183, "deletions": 3, "changes": 186, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48aec0bcc62585f949362e8c875fc039d306cb7f/gcc%2Fconfig%2Fdarwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48aec0bcc62585f949362e8c875fc039d306cb7f/gcc%2Fconfig%2Fdarwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin.h?ref=48aec0bcc62585f949362e8c875fc039d306cb7f", "patch": "@@ -84,22 +84,202 @@ Boston, MA 02111-1307, USA.  */\n #undef\tDEFAULT_PCC_STRUCT_RETURN\n #define DEFAULT_PCC_STRUCT_RETURN 0\n \n+/* This table intercepts weirdo options whose names would interfere\n+   with normal driver conventions, and either translates them into\n+   standardly-named options, or adds a 'Z' so that they can get to\n+   specs processing without interference.\n+\n+   Do not expand a linker option to \"-Xlinker -<option>\", since that\n+   forfeits the ability to control via spec strings later.  However,\n+   as a special exception, do this translation with -filelist, because\n+   otherwise the driver will think there are no input files and quit.\n+   (The alternative would be to hack the driver to recognize -filelist\n+   specially, but it's simpler to use the translation table.)\n+\n+   Note that an option name with a prefix that matches another option\n+   name, that also takes an argument, needs to be modified so the\n+   prefix is different, otherwise a '*' after the shorter option will\n+   match with the longer one.  */\n+/* Ignore -dynamic for now */\n+#define TARGET_OPTION_TRANSLATE_TABLE \\\n+  { \"-all_load\", \"-Zall_load\" },  \\\n+  { \"-allowable_client\", \"-Zallowable_client\" },  \\\n+  { \"-arch_errors_fatal\", \"-Zarch_errors_fatal\" },  \\\n+  { \"-bind_at_load\", \"-Zbind_at_load\" },  \\\n+  { \"-bundle\", \"-Zbundle\" },  \\\n+  { \"-bundle_loader\", \"-Zbundle_loader\" },  \\\n+  { \"-weak_reference_mismatches\", \"-Zweak_reference_mismatches\" },  \\\n+  { \"-dependency-file\", \"-MF\" }, \\\n+  { \"-dylib_file\", \"-Zdylib_file\" }, \\\n+  { \"-dynamic\", \" \" },  \\\n+  { \"-dynamiclib\", \"-Zdynamiclib\" },  \\\n+  { \"-exported_symbols_list\", \"-Zexported_symbols_list\" },  \\\n+  { \"-seg_addr_table_filename\", \"-Zseg_addr_table_filename\" }, \\\n+  { \"-filelist\", \"-Xlinker -filelist -Xlinker\" },  \\\n+  { \"-flat_namespace\", \"-Zflat_namespace\" },  \\\n+  { \"-force_cpusubtype_ALL\", \"-Zforce_cpusubtype_ALL\" },  \\\n+  { \"-force_flat_namespace\", \"-Zforce_flat_namespace\" },  \\\n+  { \"-image_base\", \"-Zimage_base\" },  \\\n+  { \"-init\", \"-Zinit\" },  \\\n+  { \"-install_name\", \"-Zinstall_name\" },  \\\n+  { \"-multiply_defined_unused\", \"-Zmultiplydefinedunused\" },  \\\n+  { \"-multiply_defined\", \"-Zmultiply_defined\" },  \\\n+  { \"-multi_module\", \"-Zmulti_module\" },  \\\n+  { \"-static\", \"-static -Wa,-static\" },  \\\n+  { \"-single_module\", \"-Zsingle_module\" },  \\\n+  { \"-unexported_symbols_list\", \"-Zunexported_symbols_list\" }\n+\n+/* These compiler options take n arguments.  */\n+\n+#undef  WORD_SWITCH_TAKES_ARG\n+#define WORD_SWITCH_TAKES_ARG(STR)              \\\n+  (DEFAULT_WORD_SWITCH_TAKES_ARG (STR) ? 1 :    \\\n+   !strcmp (STR, \"Zallowable_client\") ? 1 :     \\\n+   !strcmp (STR, \"arch\") ? 1 :                  \\\n+   !strcmp (STR, \"arch_only\") ? 1 :             \\\n+   !strcmp (STR, \"Zbundle_loader\") ? 1 :        \\\n+   !strcmp (STR, \"client_name\") ? 1 :           \\\n+   !strcmp (STR, \"compatibility_version\") ? 1 : \\\n+   !strcmp (STR, \"current_version\") ? 1 :       \\\n+   !strcmp (STR, \"Zdylib_file\") ? 1 :           \\\n+   !strcmp (STR, \"Zexported_symbols_list\") ? 1 : \\\n+   !strcmp (STR, \"Zimage_base\") ? 1 :           \\\n+   !strcmp (STR, \"Zinit\") ? 1 :                 \\\n+   !strcmp (STR, \"Zinstall_name\") ? 1 :         \\\n+   !strcmp (STR, \"Zmultiplydefinedunused\") ? 1 : \\\n+   !strcmp (STR, \"Zmultiply_defined\") ? 1 :     \\\n+   !strcmp (STR, \"precomp-trustfile\") ? 1 :     \\\n+   !strcmp (STR, \"read_only_relocs\") ? 1 :      \\\n+   !strcmp (STR, \"sectcreate\") ? 3 :            \\\n+   !strcmp (STR, \"sectorder\") ? 3 :             \\\n+   !strcmp (STR, \"Zseg_addr_table_filename\") ?1 :\\\n+   !strcmp (STR, \"seg1addr\") ? 1 :              \\\n+   !strcmp (STR, \"segprot\") ? 3 :               \\\n+   !strcmp (STR, \"seg_addr_table\") ? 1 :        \\\n+   !strcmp (STR, \"sub_library\") ? 1 :           \\\n+   !strcmp (STR, \"sub_umbrella\") ? 1 :          \\\n+   !strcmp (STR, \"umbrella\") ? 1 :              \\\n+   !strcmp (STR, \"undefined\") ? 1 :             \\\n+   !strcmp (STR, \"Zunexported_symbols_list\") ? 1 : \\\n+   !strcmp (STR, \"Zweak_reference_mismatches\") ? 1 : \\\n+   !strcmp (STR, \"pagezero_size\") ? 1 :         \\\n+   !strcmp (STR, \"segs_read_only_addr\") ? 1 :   \\\n+   !strcmp (STR, \"segs_read_write_addr\") ? 1 :  \\\n+   !strcmp (STR, \"sectalign\") ? 3 :             \\\n+   !strcmp (STR, \"sectobjectsymbols\") ? 2 :     \\\n+   !strcmp (STR, \"segcreate\") ? 3 :             \\\n+   !strcmp (STR, \"dylinker_install_name\") ? 1 : \\\n+   0)\n+\n /* Machine dependent cpp options.  */\n \n #undef\tCPP_SPEC\n #define CPP_SPEC \"%{static:-D__STATIC__}%{!static:-D__DYNAMIC__}\"\n \n+/* This is mostly a clone of the standard LINK_COMMAND_SPEC, plus\n+   precomp, libtool, and fat build additions.  Also we\n+   don't specify a second %G after %L because libSystem is\n+   self-contained and doesn't need to link against libgcc.a.  */\n+/* In general, random Darwin linker flags should go into LINK_SPEC\n+   instead of LINK_COMMAND_SPEC.  The command spec is better for\n+   specifying the handling of options understood by generic Unix\n+   linkers, and for positional arguments like libraries.  */\n+#define LINK_COMMAND_SPEC \"\\\n+%{!fdump=*:%{!fsyntax-only:%{!precomp:%{!c:%{!M:%{!MM:%{!E:%{!S:\\\n+    %{!Zdynamiclib:%(linker)}%{Zdynamiclib:/usr/bin/libtool} \\\n+    %l %X %{d} %{s} %{t} %{Z} \\\n+    %{!Zdynamiclib:%{A} %{e*} %{m} %{N} %{n} %{r} %{u*} %{x} %{z}} \\\n+    %{@:-o %f%u.out}%{!@:%{o*}%{!o:-o a.out}} \\\n+    %{!Zdynamiclib:%{!A:%{!nostdlib:%{!nostartfiles:%S}}}} \\\n+    %{L*} %(link_libgcc) %o %{!nostdlib:%{!nodefaultlibs:%G %L}} \\\n+    %{!A:%{!nostdlib:%{!nostartfiles:%E}}} %{T*} %{F*} \\\n+    %{!--help:%{!no-c++filt|c++filt:| c++filt3 }} }}}}}}}}\"\n+\n+/* Please keep the random linker options in alphabetical order (modulo\n+   'Z' and 'no' prefixes).  Options that can only go to one of libtool\n+   or ld must be listed twice, under both !Zdynamiclib and\n+   Zdynamiclib, with one of the cases reporting an error.  */\n+/* Note that options taking arguments may appear multiple times on a\n+   command line with different arguments each time, so put a * after\n+   their names so all of them get passed.  */\n+#define LINK_SPEC  \\\n+  \"%{static}%{!static:-dynamic} \\\n+   %{!Zdynamiclib: \\\n+     %{Zbundle:-bundle} \\\n+     %{Zbundle_loader*:-bundle_loader %*} \\\n+     %{client_name*} \\\n+     %{compatibility_version*:%e-compatibility_version only allowed with -dynamiclib\\\n+} \\\n+     %{current_version*:%e-current_version only allowed with -dynamiclib} \\\n+     %{Zforce_cpusubtype_ALL:-force_cpusubtype_ALL} \\\n+     %{Zforce_flat_namespace:-force_flat_namespace} \\\n+     %{Zinstall_name*:%e-install_name only allowed with -dynamiclib} \\\n+     %{keep_private_externs} \\\n+     %{private_bundle} \\\n+    } \\\n+   %{Zdynamiclib: \\\n+     %{Zbundle:%e-bundle not allowed with -dynamiclib} \\\n+     %{Zbundle_loader*:%e-bundle_loader not allowed with -dynamiclib} \\\n+     %{client_name*:%e-client_name not allowed with -dynamiclib} \\\n+     %{compatibility_version*} \\\n+     %{current_version*} \\\n+     %{Zforce_cpusubtype_ALL:%e-force_cpusubtype_ALL not allowed with -dynamiclib} \\\n+     %{Zforce_flat_namespace:%e-force_flat_namespace not allowed with -dynamiclib} \\\n+     %{Zinstall_name*:-install_name %*} \\\n+     %{keep_private_externs:%e-keep_private_externs not allowed with -dynamiclib} \\\n+     %{private_bundle:%e-private_bundle not allowed with -dynamiclib} \\\n+    } \\\n+   %{Zall_load:-all_load}%{Zdynamiclib:%{!Zall_load:-noall_load}} \\\n+   %{Zallowable_client*:-allowable_client %*} \\\n+   %{Zbind_at_load:-bind_at_load} \\\n+   %{Zarch_errors_fatal:-arch_errors_fatal} \\\n+   %{Zdylib_file*:-dylib_file %*} \\\n+   %{Zexported_symbols_list*:-exported_symbols_list %*} \\\n+   %{Zflat_namespace:-flat_namespace} \\\n+   %{headerpad_max_install_names*} \\\n+   %{Zimage_base*:-image_base %*} \\\n+   %{Zinit*:-init %*} \\\n+   %{nomultidefs} \\\n+   %{Zmulti_module:-multi_module} %{Zsingle_module:-single_module} \\\n+   %{Zmultiply_defined*:-multiply_defined %*} \\\n+   %{Zmultiplydefinedunused*:-multiply_defined_unused %*} \\\n+   %{prebind} %{noprebind} %{prebind_all_twolevel_modules} \\\n+   %{read_only_relocs} \\\n+   %{sectcreate*} %{sectorder*} %{seg1addr*} %{segprot*} %{seg_addr_table*} \\\n+   %{Zseg_addr_table_filename*:-seg_addr_table_filename %*} \\\n+   %{sub_library*} %{sub_umbrella*} \\\n+   %{twolevel_namespace} %{twolevel_namespace_hints} \\\n+   %{umbrella*} \\\n+   %{undefined*} \\\n+   %{Zunexported_symbols_list*:-unexported_symbols_list %*} \\\n+   %{Zweak_reference_mismatches*:-weak_reference_mismatches %*} \\\n+   %{X} \\\n+   %{y*} \\\n+   %{w} \\\n+   %{pagezero_size*} %{segs_read_*} %{seglinkedit} %{noseglinkedit}  \\\n+   %{sectalign*} %{sectobjectsymbols*} %{segcreate*} %{whyload} \\\n+   %{whatsloaded} %{dylinker_install_name*} \\\n+   %{dylinker} %{Mach} \"\n+\n+\n /* Machine dependent libraries.  */\n \n #undef\tLIB_SPEC\n #define LIB_SPEC \"%{!static:-lSystem}\"\n \n /* We specify crt0.o as -lcrt0.o so that ld will search the library path.  */\n \n-#undef\tSTARTFILE_SPEC\n+#undef  STARTFILE_SPEC\n #define STARTFILE_SPEC  \\\n-  \"%{pg:%{static:-lgcrt0.o}%{!static:-lgcrt1.o} -lcrt2.o} \\\n-    %{!pg:%{static:-lcrt0.o}%{!static:-lcrt1.o} -lcrt2.o}\"\n+  \"%{!Zdynamiclib:%{Zbundle:%{!static:-lbundle1.o}} \\\n+     %{!Zbundle:%{pg:%{static:-lgcrt0.o} \\\n+                     %{!static:%{object:-lgcrt0.o} \\\n+                               %{!object:%{preload:-lgcrt0.o} \\\n+                                 %{!preload:-lgcrt1.o -lcrt2.o}}}} \\\n+                %{!pg:%{static:-lcrt0.o} \\\n+                      %{!static:%{object:-lcrt0.o} \\\n+                                %{!object:%{preload:-lcrt0.o} \\\n+                                  %{!preload:-lcrt1.o -lcrt2.o}}}}}}\"\n \n /* The native Darwin linker doesn't necessarily place files in the order\n    that they're specified on the link line.  Thus, it is pointless"}, {"sha": "4589dd13bbba38f6ddd9b49a6d071b5badb3173c", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 155, "deletions": 0, "changes": 155, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48aec0bcc62585f949362e8c875fc039d306cb7f/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48aec0bcc62585f949362e8c875fc039d306cb7f/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=48aec0bcc62585f949362e8c875fc039d306cb7f", "patch": "@@ -463,6 +463,28 @@ in the following sections.\n -msim  -mmvme  -mads  -myellowknife  -memb -msdata @gol\n -msdata=@var{opt}  -mvxworks -mwindiss -G @var{num} -pthread}\n \n+@emph{Darwin Options}\n+@gccoptlist{\n+-all_load -allowable_client -arch -arch_errors_fatal @gol\n+-arch_only -bind_at_load -bundle -bundle_loader @gol\n+-client_name -compatibility_version -current_version @gol\n+-dependency-file -dylib_file -dylinker_install_name @gol\n+-dynamic -dynamiclib -exported_symbols_list @gol\n+-filelist -flat_namespace -force_cpusubtype_ALL @gol\n+-force_flat_namespace -headerpad_max_install_names @gol\n+-image_base -init -install_name -keep_private_externs @gol\n+-multi_module -multiply_defined -multiply_defined_unused @gol\n+-noall_load -nomultidefs -noprebind -noseglinkedit @gol\n+-pagezero_size -prebind -prebind_all_twolevel_modules @gol\n+-private_bundle -read_only_relocs -sectalign @gol\n+-sectobjectsymbols -whyload -seg1addr @gol\n+-sectcreate -sectobjectsymbols -sectorder @gol\n+-seg_addr_table -seg_addr_table_filename -seglinkedit @gol\n+-segprot -segs_read_only_addr -segs_read_write_addr @gol\n+-single_module -static -sub_library -sub_umbrella @gol\n+-twolevel_namespace -umbrella -undefined @gol\n+-unexported_symbols_list -weak_reference_mismatches -whatsloaded}\n+\n @emph{RT Options}\n @gccoptlist{\n -mcall-lib-mul  -mfp-arg-in-fpregs  -mfp-arg-in-gregs @gol\n@@ -5202,6 +5224,7 @@ that macro, which enables you to change the defaults.\n * M32R/D Options::\n * M88K Options::\n * RS/6000 and PowerPC Options::\n+* Darwin Options::\n * RT Options::\n * MIPS Options::\n * i386 and x86-64 Options::\n@@ -7227,6 +7250,138 @@ This option sets flags for both the preprocessor and linker.\n \n @end table\n \n+@node Darwin Options\n+@subsection Darwin Options\n+@cindex Darwin options\n+@table @gcctabopt\n+@item -all_load    \n+@item -allowable_client  \n+@item -arch    \n+@item -arch_errors_fatal\n+@item -arch_only\n+@item -bind_at_load\n+@item -bundle     \n+@item -bundle_loader\n+@item -client_name       \n+@item -compatibility_version\n+@item -current_version    \n+@item -dependency-file\n+@item -dylib_file    \n+@item -dylinker_install_name\n+@item -dynamic\n+@item -dynamiclib   \n+@item -exported_symbols_list  \n+@item -filelist\n+@item -flat_namespace   \n+@item -force_cpusubtype_ALL\n+@item -force_flat_namespace   \n+@item -headerpad_max_install_names\n+@item -image_base  \n+@item -init\n+@item -install_name\n+@item -keep_private_externs\n+@item -multi_module\n+@item -multiply_defined      \n+@item -multiply_defined_unused      \n+@item -noall_load  \n+@item -nomultidefs\n+@item -noprebind     \n+@item -noseglinkedit\n+@item -pagezero_size    \n+@item -prebind\n+@item -prebind_all_twolevel_modules\n+@item -private_bundle\n+@item -read_only_relocs\n+@item -sectalign  \n+@item -sectobjectsymbols    \n+@item -whyload\n+@item -seg1addr \n+@item -sectcreate\n+@item -sectobjectsymbols\n+@item -sectorder\n+@item -seg_addr_table\n+@item -seg_addr_table_filename\n+@item -seglinkedit\n+@item -segprot   \n+@item -segs_read_only_addr\n+@item -segs_read_write_addr\n+@item -single_module   \n+@item -static\n+@item -sub_library\n+@item -sub_umbrella \n+@item -twolevel_namespace\n+@item -umbrella\n+@item -undefined\n+@item -unexported_symbols_list\n+@item -weak_reference_mismatches\n+@item -whatsloaded  \n+@opindex all_load   \n+@opindex allowable_client\n+@opindex arch\n+@opindex arch_errors_fatal\n+@opindex arch_only    \n+@opindex bind_at_load\n+@opindex bundle\n+@opindex bundle_loader\n+@opindex client_name\n+@opindex compatibility_version\n+@opindex current_version\n+@opindex dependency-file\n+@opindex dylib_file\n+@opindex dylinker_install_name\n+@opindex dynamic\n+@opindex dynamiclib\n+@opindex exported_symbols_list\n+@opindex filelist  \n+@opindex flat_namespace    \n+@opindex force_cpusubtype_ALL\n+@opindex force_flat_namespace\n+@opindex headerpad_max_install_names\n+@opindex image_base\n+@opindex init     \n+@opindex install_name\n+@opindex keep_private_externs\n+@opindex multi_module   \n+@opindex multiply_defined\n+@opindex multiply_defined_unused   \n+@opindex noall_load  \n+@opindex nomultidefs   \n+@opindex noprebind\n+@opindex noseglinkedit      \n+@opindex pagezero_size\n+@opindex prebind\n+@opindex prebind_all_twolevel_modules\n+@opindex private_bundle \n+@opindex read_only_relocs\n+@opindex sectalign   \n+@opindex sectobjectsymbols    \n+@opindex whyload  \n+@opindex seg1addr\n+@opindex sectcreate       \n+@opindex sectobjectsymbols \n+@opindex sectorder     \n+@opindex seg_addr_table\n+@opindex seg_addr_table_filename\n+@opindex seglinkedit\n+@opindex segprot\n+@opindex segs_read_only_addr\n+@opindex segs_read_write_addr\n+@opindex single_module\n+@opindex static\n+@opindex sub_library\n+@opindex sub_umbrella\n+@opindex twolevel_namespace\n+@opindex umbrella\n+@opindex undefined\n+@opindex unexported_symbols_list\n+@opindex weak_reference_mismatches\n+@opindex whatsloaded\n+\n+This options are available for Darwin linker. Darwin linker man page\n+describes them in detail.\n+@end table\n+\n+\n @node RT Options\n @subsection IBM RT Options\n @cindex RT options"}]}