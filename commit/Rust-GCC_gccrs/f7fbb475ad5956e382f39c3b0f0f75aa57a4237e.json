{"sha": "f7fbb475ad5956e382f39c3b0f0f75aa57a4237e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjdmYmI0NzVhZDU5NTZlMzgyZjM5YzNiMGYwZjc1YWE1N2E0MjM3ZQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2010-06-01T11:59:18Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2010-06-01T11:59:18Z"}, "message": "tree-cfg.c (verify_stmt): Do not skip could_throw test.\n\n\t* tree-cfg.c (verify_stmt): Do not skip could_throw test.\n\t* passes.c (execute_function_todo): Do not make implicit verify_ssa.\n\t(execute_all_ipa_transforms): Do not play with the states.\n\nFrom-SVN: r160098", "tree": {"sha": "27232a137ae3c55a60e650b4589a1b7e95e3e331", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/27232a137ae3c55a60e650b4589a1b7e95e3e331"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f7fbb475ad5956e382f39c3b0f0f75aa57a4237e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7fbb475ad5956e382f39c3b0f0f75aa57a4237e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f7fbb475ad5956e382f39c3b0f0f75aa57a4237e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7fbb475ad5956e382f39c3b0f0f75aa57a4237e/comments", "author": null, "committer": null, "parents": [{"sha": "1322b0503c36c61f8efefdc5c2fc9db4185fbdb5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1322b0503c36c61f8efefdc5c2fc9db4185fbdb5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1322b0503c36c61f8efefdc5c2fc9db4185fbdb5"}], "stats": {"total": 28, "additions": 8, "deletions": 20}, "files": [{"sha": "6f92cdec063b784d0b28bc3c7ee31562be8db502", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7fbb475ad5956e382f39c3b0f0f75aa57a4237e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7fbb475ad5956e382f39c3b0f0f75aa57a4237e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f7fbb475ad5956e382f39c3b0f0f75aa57a4237e", "patch": "@@ -1,3 +1,9 @@\n+2010-06-01  Jan Hubicka  <jh@suse.cz>\n+\n+\t* tree-cfg.c (verify_stmt): Do not skip could_throw test.\n+\t* passes.c (execute_function_todo): Do not make implicit verify_ssa.\n+\t(execute_all_ipa_transforms): Do not play with the states.\n+\n 2010-06-01  Maxim Kuvyrkov  <maxim@codesourcery.com>\n \n \t* config/arm/t-linux-androideabi: New."}, {"sha": "fe005199d8c7440675d1cb6e03f3c58c41ce38a7", "filename": "gcc/passes.c", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7fbb475ad5956e382f39c3b0f0f75aa57a4237e/gcc%2Fpasses.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7fbb475ad5956e382f39c3b0f0f75aa57a4237e/gcc%2Fpasses.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpasses.c?ref=f7fbb475ad5956e382f39c3b0f0f75aa57a4237e", "patch": "@@ -1171,8 +1171,6 @@ static void\n execute_function_todo (void *data)\n {\n   unsigned int flags = (size_t)data;\n-  if (cfun->curr_properties & PROP_ssa)\n-    flags |= TODO_verify_ssa;\n   flags &= ~cfun->last_verified;\n   if (!flags)\n     return;\n@@ -1495,20 +1493,11 @@ execute_one_ipa_transform_pass (struct cgraph_node *node,\n void\n execute_all_ipa_transforms (void)\n {\n-  enum cgraph_state old_state = cgraph_state;\n   struct cgraph_node *node;\n   if (!cfun)\n     return;\n   node = cgraph_node (current_function_decl);\n \n-  /* Statement verification skip verification of nothorw when\n-     state is IPA_SSA because we do not modify function bodies\n-     after setting the flag on function.  Instead we leave it\n-     to fixup_cfg to do such a transformation.  We need to temporarily\n-     change the cgraph state so statement verifier before\n-     transform do not fire.  */\n-  cgraph_state = CGRAPH_STATE_IPA_SSA;\n-\n   if (node->ipa_transforms_to_apply)\n     {\n       unsigned int i;\n@@ -1522,7 +1511,6 @@ execute_all_ipa_transforms (void)\n       VEC_free (ipa_opt_pass, heap, node->ipa_transforms_to_apply);\n       node->ipa_transforms_to_apply = NULL;\n     }\n-  cgraph_state = old_state;\n }\n \n /* Execute PASS. */"}, {"sha": "a76a254cbd203e048d01d26b7cec843bc85c366e", "filename": "gcc/tree-cfg.c", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7fbb475ad5956e382f39c3b0f0f75aa57a4237e/gcc%2Ftree-cfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7fbb475ad5956e382f39c3b0f0f75aa57a4237e/gcc%2Ftree-cfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.c?ref=f7fbb475ad5956e382f39c3b0f0f75aa57a4237e", "patch": "@@ -4003,14 +4003,8 @@ verify_stmt (gimple_stmt_iterator *gsi)\n     {\n       if (!stmt_could_throw_p (stmt))\n \t{\n-\t  /* During IPA passes, ipa-pure-const sets nothrow flags on calls\n-\t     and they are updated on statements only after fixup_cfg\n-\t     is executed at beggining of expansion stage.  */\n-\t  if (cgraph_state != CGRAPH_STATE_IPA_SSA)\n-\t    {\n-\t      error (\"statement marked for throw, but doesn%'t\");\n-\t      goto fail;\n-\t    }\n+\t  error (\"statement marked for throw, but doesn%'t\");\n+\t  goto fail;\n \t}\n       else if (lp_nr > 0 && !last_in_block && stmt_can_throw_internal (stmt))\n \t{"}]}