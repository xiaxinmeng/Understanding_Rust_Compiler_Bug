{"sha": "725c2d321c429ef8f09b8474e0f3d693c6a5d1d8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzI1YzJkMzIxYzQyOWVmOGYwOWI4NDc0ZTBmM2Q2OTNjNmE1ZDFkOA==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2008-03-10T18:20:23Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2008-03-10T18:20:23Z"}, "message": "re PR tree-optimization/35494 (Revision 132991 breaks C++ static member)\n\ngcc/\n\n2008-03-10  H.J. Lu  <hongjiu.lu@intel.com>\n\n\tPR tree-optimization/35494\n\t* tree-ssa-ccp.c (get_symbol_constant_value): Check if value\n\tmay be overriden at link and run time.\n\ngcc/testsuite/\n\n2008-03-10  H.J. Lu  <hongjiu.lu@intel.com>\n\n\tPR tree-optimization/35494\n\t* g++.dg/tree-ssa/ssa-store-ccp-1.C: New.\n\t* gcc.dg/tree-ssa/ssa-store-ccp-2.c: Likewise.\n\t* gcc.dg/tree-ssa/ssa-store-ccp-3.c: Likewise.\n\t* gcc.dg/tree-ssa/ssa-store-ccp-4.c: Likewise.\n\nFrom-SVN: r133082", "tree": {"sha": "21d2365cfdaddec31b9d1307cf28d9ef6a64d907", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/21d2365cfdaddec31b9d1307cf28d9ef6a64d907"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/725c2d321c429ef8f09b8474e0f3d693c6a5d1d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/725c2d321c429ef8f09b8474e0f3d693c6a5d1d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/725c2d321c429ef8f09b8474e0f3d693c6a5d1d8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/725c2d321c429ef8f09b8474e0f3d693c6a5d1d8/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3ba404dfe117ce42810220a8a89d8f14435895f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ba404dfe117ce42810220a8a89d8f14435895f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ba404dfe117ce42810220a8a89d8f14435895f9"}], "stats": {"total": 94, "additions": 80, "deletions": 14}, "files": [{"sha": "9d3ba56ca53ae1701b4954796671fcaba08815f2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/725c2d321c429ef8f09b8474e0f3d693c6a5d1d8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/725c2d321c429ef8f09b8474e0f3d693c6a5d1d8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=725c2d321c429ef8f09b8474e0f3d693c6a5d1d8", "patch": "@@ -1,3 +1,9 @@\n+2008-03-10  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR tree-optimization/35494\n+\t* tree-ssa-ccp.c (get_symbol_constant_value): Check if value\n+\tmay be overriden at link and run time.\n+\n 2008-03-10  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/34677"}, {"sha": "693a2a1a7be22e7c9561987495eec234bbc56f78", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 13, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/725c2d321c429ef8f09b8474e0f3d693c6a5d1d8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/725c2d321c429ef8f09b8474e0f3d693c6a5d1d8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=725c2d321c429ef8f09b8474e0f3d693c6a5d1d8", "patch": "@@ -1,19 +1,14 @@\n+2008-03-10  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR tree-optimization/35494\n+\t* g++.dg/tree-ssa/ssa-store-ccp-1.C: New.\n+\t* gcc.dg/tree-ssa/ssa-store-ccp-2.c: Likewise.\n+\t* gcc.dg/tree-ssa/ssa-store-ccp-3.c: Likewise.\n+\t* gcc.dg/tree-ssa/ssa-store-ccp-4.c: Likewise.\n+\n 2008-03-10  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/34677\n-\t* tree-ssa-pre.c (modify_expr_node_pool): Remove.\n-\t(poolify_tree): Likewise.\n-\t(modify_expr_template): Likewise.\n-\t(poolify_modify_stmt): Likewise.\n-\t(insert_fake_stores): Handle all component-ref style stores\n-\tin addition to INDIRECT_REF.  Also handle complex types.\n-\tDo not poolify the inserted load.\n-\t(realify_fake_stores): Do not rebuild the tree but only\n-\tmake it a SSA_NAME copy.\n-\t(init_pre): Remove initialzation of modify_expr_template.\n-\tDo not allocate modify_expr_node_pool.\n-\t(fini_pre): Do not free modify_expr_node_pool.\n-\n \t* gcc.dg/tree-ssa/loadpre23.c: New testcase.\n \t* gcc.dg/tree-ssa/loadpre24.c: Likewise.\n \t* gcc.dg/tree-ssa/loadpre25.c: Likewise."}, {"sha": "06e9b1e35f639fd67bc6a9239e8f133a3b2446a2", "filename": "gcc/testsuite/g++.dg/tree-ssa/ssa-store-ccp-1.C", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/725c2d321c429ef8f09b8474e0f3d693c6a5d1d8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fssa-store-ccp-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/725c2d321c429ef8f09b8474e0f3d693c6a5d1d8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fssa-store-ccp-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fssa-store-ccp-1.C?ref=725c2d321c429ef8f09b8474e0f3d693c6a5d1d8", "patch": "@@ -0,0 +1,19 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fdump-tree-optimized\" } */\n+\n+class bar\n+{\n+public:\n+  static const int conststaticvariable;\n+};\n+\n+\n+int f(void)\n+{\n+  return bar::conststaticvariable;\n+}\n+\n+/* There should be a reference to conststaticvariable since it may\n+   be overriden at link time.  */\n+/* { dg-final { scan-tree-dump-times \"conststaticvariable\" 1 \"optimized\"} } */\n+/* { dg-final { cleanup-tree-dump \"optimized\" } } */"}, {"sha": "be37a21d41578242105aebaaf9959d3f02b19b72", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-store-ccp-2.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/725c2d321c429ef8f09b8474e0f3d693c6a5d1d8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-store-ccp-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/725c2d321c429ef8f09b8474e0f3d693c6a5d1d8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-store-ccp-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-store-ccp-2.c?ref=725c2d321c429ef8f09b8474e0f3d693c6a5d1d8", "patch": "@@ -0,0 +1,14 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fdump-tree-optimized\" } */\n+\n+const int conststaticvariable;\n+\n+int f(void)\n+{\n+  return conststaticvariable;\n+}\n+\n+/* There should be a reference to conststaticvariable since it may\n+   may be overriden at link time.  */\n+/* { dg-final { scan-tree-dump-times \"conststaticvariable\" 1 \"optimized\"} } */\n+/* { dg-final { cleanup-tree-dump \"optimized\" } } */"}, {"sha": "2f028a283ca1301af13ff83e5e1a6764de3e9530", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-store-ccp-3.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/725c2d321c429ef8f09b8474e0f3d693c6a5d1d8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-store-ccp-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/725c2d321c429ef8f09b8474e0f3d693c6a5d1d8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-store-ccp-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-store-ccp-3.c?ref=725c2d321c429ef8f09b8474e0f3d693c6a5d1d8", "patch": "@@ -0,0 +1,14 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fno-common -fdump-tree-optimized\" } */\n+\n+const int conststaticvariable;\n+\n+int f(void)\n+{\n+  return conststaticvariable;\n+}\n+\n+/* There should be no reference to conststaticvariable as we should have\n+   inlined the 0. */\n+/* { dg-final { scan-tree-dump-times \"conststaticvariable\" 0 \"optimized\"} } */\n+/* { dg-final { cleanup-tree-dump \"optimized\" } } */"}, {"sha": "cbf8bab3a62066093acfb5c5a30f7e6509c792f4", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-store-ccp-4.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/725c2d321c429ef8f09b8474e0f3d693c6a5d1d8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-store-ccp-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/725c2d321c429ef8f09b8474e0f3d693c6a5d1d8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-store-ccp-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-store-ccp-4.c?ref=725c2d321c429ef8f09b8474e0f3d693c6a5d1d8", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target fpic } */\n+/* { dg-options \"-O2 -fno-common -fpic -fdump-tree-optimized\" } */\n+\n+const int conststaticvariable;\n+\n+int f(void)\n+{\n+  return conststaticvariable;\n+}\n+\n+/* There should be a reference to conststaticvariable since it may\n+   may be overriden at run time.  */\n+/* { dg-final { scan-tree-dump-times \"conststaticvariable\" 1 \"optimized\"} } */\n+/* { dg-final { cleanup-tree-dump \"optimized\" } } */"}, {"sha": "7cefbf838933e67639407a12bef40907e9c2f33e", "filename": "gcc/tree-ssa-ccp.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/725c2d321c429ef8f09b8474e0f3d693c6a5d1d8/gcc%2Ftree-ssa-ccp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/725c2d321c429ef8f09b8474e0f3d693c6a5d1d8/gcc%2Ftree-ssa-ccp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-ccp.c?ref=725c2d321c429ef8f09b8474e0f3d693c6a5d1d8", "patch": "@@ -300,7 +300,10 @@ get_symbol_constant_value (tree sym)\n {\n   if (TREE_STATIC (sym)\n       && TREE_READONLY (sym)\n-      && !MTAG_P (sym))\n+      && !MTAG_P (sym)\n+      /* Check if a read-only definition may be overridden at\n+\t link and run time.  */\n+      && targetm.binds_local_p (sym))\n     {\n       tree val = DECL_INITIAL (sym);\n       if (val"}]}