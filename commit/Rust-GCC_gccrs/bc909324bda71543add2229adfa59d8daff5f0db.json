{"sha": "bc909324bda71543add2229adfa59d8daff5f0db", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmM5MDkzMjRiZGE3MTU0M2FkZDIyMjlhZGZhNTlkOGRhZmY1ZjBkYg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2020-09-23T12:20:44Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2020-09-23T13:11:03Z"}, "message": "middle-end/96466 - fix VEC_COND isel/expansion issue\n\nWe need to avoid forcing BLKmode for truth vectors, instead do as\nother code and use VOIDmode so layout_type can pick a suitable and\nconsistent mode.  RTL expansion of vect_cond_mask also needs to deal\nwith CONST_INT operands which means passing the mode explicitely.\n\n2020-09-23  Richard Biener  <rguenther@suse.de>\n\n\tPR middle-end/96466\n\t* internal-fn.c (expand_vect_cond_mask_optab_fn): Use\n\tappropriate mode for force_reg.\n\t* tree.c (build_truth_vector_type_for): Pass VOIDmode to\n\tmake_vector_type.\n\n\t* gcc.dg/pr96466.c: New testcase.", "tree": {"sha": "3d7b7ac497f1b5f0a4a77c5f863f969f4164914b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3d7b7ac497f1b5f0a4a77c5f863f969f4164914b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bc909324bda71543add2229adfa59d8daff5f0db", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc909324bda71543add2229adfa59d8daff5f0db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bc909324bda71543add2229adfa59d8daff5f0db", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc909324bda71543add2229adfa59d8daff5f0db/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4452a7660b224ff310d246bc7f8c612669c8cd98", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4452a7660b224ff310d246bc7f8c612669c8cd98", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4452a7660b224ff310d246bc7f8c612669c8cd98"}], "stats": {"total": 23, "additions": 21, "deletions": 2}, "files": [{"sha": "6cf2687fe6beddfb9ca7e08f7f3797508325fdca", "filename": "gcc/internal-fn.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc909324bda71543add2229adfa59d8daff5f0db/gcc%2Finternal-fn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc909324bda71543add2229adfa59d8daff5f0db/gcc%2Finternal-fn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Finternal-fn.c?ref=bc909324bda71543add2229adfa59d8daff5f0db", "patch": "@@ -2644,7 +2644,7 @@ expand_vect_cond_mask_optab_fn (internal_fn, gcall *stmt, convert_optab optab)\n   rtx_op2 = expand_normal (op2);\n \n   mask = force_reg (mask_mode, mask);\n-  rtx_op1 = force_reg (GET_MODE (rtx_op1), rtx_op1);\n+  rtx_op1 = force_reg (mode, rtx_op1);\n \n   rtx target = expand_expr (lhs, NULL_RTX, VOIDmode, EXPAND_WRITE);\n   create_output_operand (&ops[0], target, mode);"}, {"sha": "a8840f5b6a7056a584ea8f7feaf2d6e7ee0680a0", "filename": "gcc/testsuite/gcc.dg/pr96466.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc909324bda71543add2229adfa59d8daff5f0db/gcc%2Ftestsuite%2Fgcc.dg%2Fpr96466.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc909324bda71543add2229adfa59d8daff5f0db/gcc%2Ftestsuite%2Fgcc.dg%2Fpr96466.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr96466.c?ref=bc909324bda71543add2229adfa59d8daff5f0db", "patch": "@@ -0,0 +1,19 @@\n+/* PR tree-optimization/96466 */\n+/* { dg-do compile } */\n+/* { dg-require-effective-target lp64 } */\n+/* { dg-options \"-Og -finline-functions-called-once -fno-tree-ccp\" } */\n+\n+typedef unsigned long __attribute__ ((__vector_size__ (8))) V;\n+\n+V\n+bar (unsigned long x, V v)\n+{\n+  v &= x >= v;\n+  return (V) v;\n+}\n+\n+V\n+foo (void)\n+{\n+  return bar (5, (V) 4441221375);\n+}"}, {"sha": "a1fc119c0cc5ee4a27dc44ae276b5857abcf4a41", "filename": "gcc/tree.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc909324bda71543add2229adfa59d8daff5f0db/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc909324bda71543add2229adfa59d8daff5f0db/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=bc909324bda71543add2229adfa59d8daff5f0db", "patch": "@@ -10952,7 +10952,7 @@ build_truth_vector_type_for (tree vectype)\n   unsigned HOST_WIDE_INT esize = vector_element_size (vsize, nunits);\n   tree bool_type = build_nonstandard_boolean_type (esize);\n \n-  return make_vector_type (bool_type, nunits, BLKmode);\n+  return make_vector_type (bool_type, nunits, VOIDmode);\n }\n \n /* Like build_vector_type, but builds a variant type with TYPE_VECTOR_OPAQUE"}]}