{"sha": "a7ca4d8d3d7caa24e708267d8a6560eb6faf809a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTdjYTRkOGQzZDdjYWEyNGU3MDgyNjdkOGE2NTYwZWI2ZmFmODA5YQ==", "commit": {"author": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2007-10-02T07:53:05Z"}, "committer": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2007-10-02T07:53:05Z"}, "message": "re PR fortran/33550 (ICE (segfault) when USEing ambiguous symbols)\n\n2007-10-02  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/33550\n\t* decl.c (get_proc_name): Return rc if rc is non-zero; ie. if\n\tthe name is a reference to an ambiguous symbol.\n\n2007-10-02  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/33550\n\t* gfortran.dg/ambiguous_reference_1.f90: New test.\n\nFrom-SVN: r128949", "tree": {"sha": "351f992681af4a467247bdc3af7bd97396f7e3b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/351f992681af4a467247bdc3af7bd97396f7e3b9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a7ca4d8d3d7caa24e708267d8a6560eb6faf809a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7ca4d8d3d7caa24e708267d8a6560eb6faf809a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a7ca4d8d3d7caa24e708267d8a6560eb6faf809a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7ca4d8d3d7caa24e708267d8a6560eb6faf809a/comments", "author": null, "committer": null, "parents": [{"sha": "e2d299684b33efc10cb3eeb773cb1780af0b5719", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2d299684b33efc10cb3eeb773cb1780af0b5719", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e2d299684b33efc10cb3eeb773cb1780af0b5719"}], "stats": {"total": 66, "additions": 65, "deletions": 1}, "files": [{"sha": "f35b0dc945655b2879516b39a16818ec7f9f37d2", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7ca4d8d3d7caa24e708267d8a6560eb6faf809a/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7ca4d8d3d7caa24e708267d8a6560eb6faf809a/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=a7ca4d8d3d7caa24e708267d8a6560eb6faf809a", "patch": "@@ -1,3 +1,9 @@\n+2007-10-02  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/33550\n+\t* decl.c (get_proc_name): Return rc if rc is non-zero; ie. if\n+\tthe name is a reference to an ambiguous symbol.\n+\n 2007-10-02  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/31154"}, {"sha": "a507137441f57934b9a7d5155025432b786cc9d3", "filename": "gcc/fortran/decl.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7ca4d8d3d7caa24e708267d8a6560eb6faf809a/gcc%2Ffortran%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7ca4d8d3d7caa24e708267d8a6560eb6faf809a/gcc%2Ffortran%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdecl.c?ref=a7ca4d8d3d7caa24e708267d8a6560eb6faf809a", "patch": "@@ -672,7 +672,7 @@ get_proc_name (const char *name, gfc_symbol **result, bool module_fcn_entry)\n {\n   gfc_symtree *st;\n   gfc_symbol *sym;\n-  int rc;\n+  int rc = 0;\n \n   /* Module functions have to be left in their own namespace because\n      they have potentially (almost certainly!) already been referenced.\n@@ -709,6 +709,9 @@ get_proc_name (const char *name, gfc_symbol **result, bool module_fcn_entry)\n   else\n     rc = gfc_get_symbol (name, gfc_current_ns->parent, result);\n \n+  if (rc)\n+    return rc;\n+\n   sym = *result;\n   gfc_current_ns->refs++;\n "}, {"sha": "8bc1d28b99bfb94cbfd15ab24f8362bc4d6c5e34", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7ca4d8d3d7caa24e708267d8a6560eb6faf809a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7ca4d8d3d7caa24e708267d8a6560eb6faf809a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a7ca4d8d3d7caa24e708267d8a6560eb6faf809a", "patch": "@@ -1,3 +1,8 @@\n+2007-10-02  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/33550\n+\t* gfortran.dg/ambiguous_reference_1.f90: New test.\n+\n 2007-10-02  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/31154"}, {"sha": "93b155ef56dffdb46e92004aaa14df2fc9e4984c", "filename": "gcc/testsuite/gfortran.dg/ambiguous_reference_1.f90", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7ca4d8d3d7caa24e708267d8a6560eb6faf809a/gcc%2Ftestsuite%2Fgfortran.dg%2Fambiguous_reference_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7ca4d8d3d7caa24e708267d8a6560eb6faf809a/gcc%2Ftestsuite%2Fgfortran.dg%2Fambiguous_reference_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fambiguous_reference_1.f90?ref=a7ca4d8d3d7caa24e708267d8a6560eb6faf809a", "patch": "@@ -0,0 +1,50 @@\n+! { dg-do compile }\n+! Tests the fix for PR33550, in which an ICE would occur, instead of\n+! the abiguous reference error.\n+!\n+! Found at\n+! http://groups.google.com/group/comp.lang.fortran/browse_thread/thread/1abc1549a6a164f1/\n+! by James Van Buskirk:\n+!\n+module M1\n+   real x\n+end module M1\n+\n+module M2\n+   contains\n+      subroutine y\n+      end subroutine y\n+end module M2\n+\n+module M3\n+   use M2, x => y\n+end module M3\n+\n+module M4\n+   use M1\n+   use M3\n+end module M4\n+\n+module M5\n+   use M4             ! 'x' is ambiguous here but is not referred to\n+end module M5\n+\n+module M6\n+   use M5             ! ditto\n+end module M6\n+\n+program test\n+   use M1\n+   use M3\n+   interface\n+      function x(z)   ! { dg-error \"ambiguous reference\" }\n+      end function x  ! { dg-error \"Expecting END INTERFACE\" }\n+   end interface\n+\n+   write(*,*) 'Hello, world!'\n+end program test\n+\n+function x(z)\n+   x = z\n+end function x\n+! { dg-final { cleanup-modules \"m1 m2 m3 m4 m5 m6\" } }"}]}