{"sha": "fba9ebfc51f21a9ba4848c721bb925078737b024", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmJhOWViZmM1MWYyMWE5YmE0ODQ4YzcyMWJiOTI1MDc4NzM3YjAyNA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-01-22T16:53:24Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-01-22T16:53:24Z"}, "message": "[multiple changes]\n\n2014-01-22  Thomas Quinot  <quinot@adacore.com>\n\n\t* rtsfind.adb: Update comment.\n\n2014-01-22  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* sem_aux.ads, sem_aux.adb (Is_Body): New routine.\n\t* sem_ch3.adb (Analyze_Declarations): Add local variable\n\tBody_Seen. Generate the spec of a late controlled\n\tprimitive body that is about to freeze its related type.\n\t(Handle_Late_Controlled_Primitive): New routine.\n\n2014-01-22  Robert Dewar  <dewar@adacore.com>\n\n\t* a-stream.adb: Minor reformatting.\n\n2014-01-22  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch8.adb (From_Actual_Package): Introduce a recursive\n\tsub-procedure Declared_In_Actual to handle properly the visibility\n\tof actuals in actual packages, that are themselves actuals to a\n\tactual package of the current instance. This mimics properly the\n\tvisibility of formals of formal packages declared with a box,\n\twithin the corresponding generic unit.\n\n2014-01-22  Robert Dewar  <dewar@adacore.com>\n\n\t* checks.adb: Do not assume that a volatile variable is valid.\n\n2014-01-22  Thomas Quinot  <quinot@adacore.com>\n\n\t* g-catiio.ads (Image, Value): Clarify that these functions\n\toperate in the local time zone.  Minor documentation update.\n\n2014-01-22  Thomas Quinot  <quinot@adacore.com>\n\n\t* csets.adb, csets.ads, opt.ads: Minor documentation fixes.\n\nFrom-SVN: r206930", "tree": {"sha": "c2a3fc941f046c66f8972beb7e9e0440daca362e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c2a3fc941f046c66f8972beb7e9e0440daca362e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fba9ebfc51f21a9ba4848c721bb925078737b024", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fba9ebfc51f21a9ba4848c721bb925078737b024", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fba9ebfc51f21a9ba4848c721bb925078737b024", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fba9ebfc51f21a9ba4848c721bb925078737b024/comments", "author": null, "committer": null, "parents": [{"sha": "b2834fbd22f71ce7678ddd538b0d5455d6e7caba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2834fbd22f71ce7678ddd538b0d5455d6e7caba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b2834fbd22f71ce7678ddd538b0d5455d6e7caba"}], "stats": {"total": 309, "additions": 246, "deletions": 63}, "files": [{"sha": "e8c2d2d65378785567b2697fe9118ca894b5f93d", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fba9ebfc51f21a9ba4848c721bb925078737b024/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fba9ebfc51f21a9ba4848c721bb925078737b024/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=fba9ebfc51f21a9ba4848c721bb925078737b024", "patch": "@@ -1,3 +1,41 @@\n+2014-01-22  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* rtsfind.adb: Update comment.\n+\n+2014-01-22  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* sem_aux.ads, sem_aux.adb (Is_Body): New routine.\n+\t* sem_ch3.adb (Analyze_Declarations): Add local variable\n+\tBody_Seen. Generate the spec of a late controlled\n+\tprimitive body that is about to freeze its related type.\n+\t(Handle_Late_Controlled_Primitive): New routine.\n+\n+2014-01-22  Robert Dewar  <dewar@adacore.com>\n+\n+\t* a-stream.adb: Minor reformatting.\n+\n+2014-01-22  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch8.adb (From_Actual_Package): Introduce a recursive\n+\tsub-procedure Declared_In_Actual to handle properly the visibility\n+\tof actuals in actual packages, that are themselves actuals to a\n+\tactual package of the current instance. This mimics properly the\n+\tvisibility of formals of formal packages declared with a box,\n+\twithin the corresponding generic unit.\n+\n+2014-01-22  Robert Dewar  <dewar@adacore.com>\n+\n+\t* checks.adb: Do not assume that a volatile variable is valid.\n+\n+2014-01-22  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* g-catiio.ads (Image, Value): Clarify that these functions\n+\toperate in the local time zone.  Minor documentation update.\n+\n+2014-01-22  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* csets.adb, csets.ads, opt.ads: Minor documentation fixes.\n+\n 2014-01-22  Robert Dewar  <dewar@adacore.com>\n \n \t* sem_aux.adb, sem_aux.ads, sem_ch3.adb (Has_Unconstrained_Elements):"}, {"sha": "a22161d16da1801d6c5c20d93d7c4bb63edcd51d", "filename": "gcc/ada/a-stream.adb", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fba9ebfc51f21a9ba4848c721bb925078737b024/gcc%2Fada%2Fa-stream.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fba9ebfc51f21a9ba4848c721bb925078737b024/gcc%2Fada%2Fa-stream.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-stream.adb?ref=fba9ebfc51f21a9ba4848c721bb925078737b024", "patch": "@@ -46,8 +46,10 @@ package body Ada.Streams is\n       V : out Stream_Element_Array)\n    is\n       Last : Stream_Element_Offset;\n+\n    begin\n       Read (S.all, V, Last);\n+\n       if Last /= V'Last then\n          raise Ada.IO_Exceptions.End_Error;\n       end if;"}, {"sha": "cdbe34e3a90145d671eaf131ee88ad82a03c45f7", "filename": "gcc/ada/checks.adb", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fba9ebfc51f21a9ba4848c721bb925078737b024/gcc%2Fada%2Fchecks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fba9ebfc51f21a9ba4848c721bb925078737b024/gcc%2Fada%2Fchecks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.adb?ref=fba9ebfc51f21a9ba4848c721bb925078737b024", "patch": "@@ -5257,6 +5257,10 @@ package body Checks is\n \n       elsif Is_Entity_Name (Expr)\n         and then Is_Known_Valid (Entity (Expr))\n+\n+        --  Exclude volatile variables\n+\n+        and then not Treat_As_Volatile (Entity (Expr))\n       then\n          return True;\n "}, {"sha": "97b21fa2ea890fe693474a8536f0d59055e4342d", "filename": "gcc/ada/csets.adb", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fba9ebfc51f21a9ba4848c721bb925078737b024/gcc%2Fada%2Fcsets.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fba9ebfc51f21a9ba4848c721bb925078737b024/gcc%2Fada%2Fcsets.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcsets.adb?ref=fba9ebfc51f21a9ba4848c721bb925078737b024", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -464,11 +464,11 @@ package body Csets is\n \n       others => ' ');\n \n-   ---------------------------------------------------\n-   -- Definitions for Latin-5 (Cyrillic ISO-8859-5) --\n-   ---------------------------------------------------\n+   -------------------------------------------\n+   -- Definitions for Cyrillic (ISO-8859-5) --\n+   -------------------------------------------\n \n-   Fold_Latin_5 : constant Translate_Table := Translate_Table'(\n+   Fold_Cyrillic : constant Translate_Table := Translate_Table'(\n \n       'a' => 'A',  X_D0 => X_B0,  X_E0 => X_C0,\n       'b' => 'B',  X_D1 => X_B1,  X_E1 => X_C1,  X_F1 => X_A1,\n@@ -539,9 +539,9 @@ package body Csets is\n \n       others => ' ');\n \n-   ------------------------------------------\n-   -- Definitions for Latin-9 (ISO 8859-9) --\n-   ------------------------------------------\n+   -------------------------------------------\n+   -- Definitions for Latin-9 (ISO 8859-15) --\n+   -------------------------------------------\n \n    Fold_Latin_9 : constant Translate_Table := Translate_Table'(\n \n@@ -1112,7 +1112,7 @@ package body Csets is\n          Fold_Upper := Fold_Latin_4;\n \n       elsif Identifier_Character_Set = '5' then\n-         Fold_Upper := Fold_Latin_5;\n+         Fold_Upper := Fold_Cyrillic;\n \n       elsif Identifier_Character_Set = 'p' then\n          Fold_Upper := Fold_IBM_PC_437;"}, {"sha": "bae234760add4413a2e0fec7f67705816c99c404", "filename": "gcc/ada/csets.ads", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fba9ebfc51f21a9ba4848c721bb925078737b024/gcc%2Fada%2Fcsets.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fba9ebfc51f21a9ba4848c721bb925078737b024/gcc%2Fada%2Fcsets.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcsets.ads?ref=fba9ebfc51f21a9ba4848c721bb925078737b024", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -60,14 +60,14 @@ package Csets is\n    --  The character set in use is specified by the value stored in\n    --  Opt.Identifier_Character_Set, which has the following settings:\n \n-   --    '1'  Latin-1 (ISO-8859-1)\n-   --    '2'  Latin-2 (ISO-8859-2)\n-   --    '3'  Latin-3 (ISO-8859-3)\n-   --    '4'  Latin-4 (ISO-8859-4)\n-   --    '5'  Latin-5 (ISO-8859-5, Cyrillic)\n-   --    'p'  IBM PC  (code page 437)\n-   --    '8'  IBM PC  (code page 850)\n-   --    '9'  Latin-9 (ISO-9959-9)\n+   --    '1'  Latin-1  (ISO-8859-1)\n+   --    '2'  Latin-2  (ISO-8859-2)\n+   --    '3'  Latin-3  (ISO-8859-3)\n+   --    '4'  Latin-4  (ISO-8859-4)\n+   --    '5'  Cyrillic (ISO-8859-5)\n+   --    'p'  IBM PC   (code page 437)\n+   --    '8'  IBM PC   (code page 850)\n+   --    '9'  Latin-9  (ISO-8859-15)\n    --    'f'  Full upper set (all distinct)\n    --    'n'  No upper characters (Ada/83 rules)\n    --    'w'  Latin-1 plus wide characters also allowed"}, {"sha": "fa8d802eb67a2fab21837985428338c312de43de", "filename": "gcc/ada/g-catiio.ads", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fba9ebfc51f21a9ba4848c721bb925078737b024/gcc%2Fada%2Fg-catiio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fba9ebfc51f21a9ba4848c721bb925078737b024/gcc%2Fada%2Fg-catiio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-catiio.ads?ref=fba9ebfc51f21a9ba4848c721bb925078737b024", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                     Copyright (C) 1999-2010, AdaCore                     --\n+--                     Copyright (C) 1999-2013, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -111,11 +111,13 @@ package GNAT.Calendar.Time_IO is\n    function Image\n      (Date    : Ada.Calendar.Time;\n       Picture : Picture_String) return String;\n-   --  Return Date as a string with format Picture. Raise Picture_Error if\n-   --  picture string is null or has an incorrect format.\n+   --  Return Date, as interpreted in the current local time zone, as a string\n+   --  with format Picture. Raise Picture_Error if picture string is null or\n+   --  has an incorrect format.\n \n    function Value (Date : String) return Ada.Calendar.Time;\n-   --  Parse the string Date and return its equivalent as a Time value. The\n+   --  Parse the string Date, interpreted as a time representation in the\n+   --  current local time zone, and return the corresponding Time value. The\n    --  following time format is supported:\n    --\n    --     hh:mm:ss             - Date is the current date"}, {"sha": "8f0fa52ae2c3fed042685425d1b1351b32f1884d", "filename": "gcc/ada/opt.ads", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fba9ebfc51f21a9ba4848c721bb925078737b024/gcc%2Fada%2Fopt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fba9ebfc51f21a9ba4848c721bb925078737b024/gcc%2Fada%2Fopt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.ads?ref=fba9ebfc51f21a9ba4848c721bb925078737b024", "patch": "@@ -702,12 +702,12 @@ package Opt is\n    --  GNAT\n    --  This variable indicates the character set to be used for identifiers.\n    --  The possible settings are:\n-   --    '1'  Latin-5 (ISO-8859-1)\n-   --    '2'  Latin-5 (ISO-8859-2)\n-   --    '3'  Latin-5 (ISO-8859-3)\n-   --    '4'  Latin-5 (ISO-8859-4)\n-   --    '5'  Latin-5 (ISO-8859-5, Cyrillic)\n-   --    '9'  Latin-5 (ISO-8859-9)\n+   --    '1'  Latin-1 (ISO-8859-1)\n+   --    '2'  Latin-2 (ISO-8859-2)\n+   --    '3'  Latin-3 (ISO-8859-3)\n+   --    '4'  Latin-4 (ISO-8859-4)\n+   --    '5'  Latin-Cyrillic (ISO-8859-5)\n+   --    '9'  Latin-9 (ISO-8859-15)\n    --    'p'  PC (US, IBM page 437)\n    --    '8'  PC (European, IBM page 850)\n    --    'f'  Full upper set (all distinct)"}, {"sha": "9eeaa331f627cfd80e5b5eb30ac7959e80f8ea82", "filename": "gcc/ada/rtsfind.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fba9ebfc51f21a9ba4848c721bb925078737b024/gcc%2Fada%2Frtsfind.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fba9ebfc51f21a9ba4848c721bb925078737b024/gcc%2Fada%2Frtsfind.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frtsfind.adb?ref=fba9ebfc51f21a9ba4848c721bb925078737b024", "patch": "@@ -233,8 +233,8 @@ package body Rtsfind is\n \n            --  If the entity being referenced is defined in the current scope,\n            --  using it is always fine as such usage can never introduce any\n-           --  dependency on an additional unit.\n-           --  Why do we need to do this test ???\n+           --  dependency on an additional unit. The presence of this test\n+           --  helps generating meaningful error messages for CRT violations.\n \n            and then Scope (Eid) /= Current_Scope\n          then"}, {"sha": "84547c2fb5548af27e4cfbb57b38fc8d7f639fa2", "filename": "gcc/ada/sem_aux.adb", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fba9ebfc51f21a9ba4848c721bb925078737b024/gcc%2Fada%2Fsem_aux.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fba9ebfc51f21a9ba4848c721bb925078737b024/gcc%2Fada%2Fsem_aux.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aux.adb?ref=fba9ebfc51f21a9ba4848c721bb925078737b024", "patch": "@@ -698,6 +698,21 @@ package body Sem_Aux is\n       Obsolescent_Warnings.Init;\n    end Initialize;\n \n+   -------------\n+   -- Is_Body --\n+   -------------\n+\n+   function Is_Body (N : Node_Id) return Boolean is\n+   begin\n+      return\n+        Nkind (N) in N_Body_Stub\n+          or else Nkind_In (N, N_Entry_Body,\n+                               N_Package_Body,\n+                               N_Protected_Body,\n+                               N_Subprogram_Body,\n+                               N_Task_Body);\n+   end Is_Body;\n+\n    ---------------------\n    -- Is_By_Copy_Type --\n    ---------------------"}, {"sha": "9f574ece1d3616cfe612d5ddf6851c18f5251d3f", "filename": "gcc/ada/sem_aux.ads", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fba9ebfc51f21a9ba4848c721bb925078737b024/gcc%2Fada%2Fsem_aux.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fba9ebfc51f21a9ba4848c721bb925078737b024/gcc%2Fada%2Fsem_aux.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aux.ads?ref=fba9ebfc51f21a9ba4848c721bb925078737b024", "patch": "@@ -259,6 +259,9 @@ package Sem_Aux is\n    --  or subtype. This is true if Suppress_Initialization is set either for\n    --  the subtype itself, or for the corresponding base type.\n \n+   function Is_Body (N : Node_Id) return Boolean;\n+   --  Determine whether an arbitrary node denotes a body\n+\n    function Is_By_Copy_Type (Ent : Entity_Id) return Boolean;\n    --  Ent is any entity. Returns True if Ent is a type entity where the type\n    --  is required to be passed by copy, as defined in (RM 6.2(3))."}, {"sha": "58bac3570ede820acbe4f7257133e26f63defe5e", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 95, "deletions": 9, "changes": 104, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fba9ebfc51f21a9ba4848c721bb925078737b024/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fba9ebfc51f21a9ba4848c721bb925078737b024/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=fba9ebfc51f21a9ba4848c721bb925078737b024", "patch": "@@ -2075,6 +2075,12 @@ package body Sem_Ch3 is\n       --  (They have the sloc of the label as found in the source, and that\n       --  is ahead of the current declarative part).\n \n+      procedure Handle_Late_Controlled_Primitive (Body_Decl : Node_Id);\n+      --  Determine whether Body_Decl denotes the body of a late controlled\n+      --  primitive (either Initialize, Adjust or Finalize). If this is the\n+      --  case, add a proper spec if the body lacks one. The spec is inserted\n+      --  before Body_Decl and immedately analyzed.\n+\n       procedure Remove_Visible_Refinements (Spec_Id : Entity_Id);\n       --  Spec_Id is the entity of a package that may define abstract states.\n       --  If the states have visible refinement, remove the visibility of each\n@@ -2099,6 +2105,70 @@ package body Sem_Ch3 is\n          end loop;\n       end Adjust_Decl;\n \n+      --------------------------------------\n+      -- Handle_Late_Controlled_Primitive --\n+      --------------------------------------\n+\n+      procedure Handle_Late_Controlled_Primitive (Body_Decl : Node_Id) is\n+         Body_Spec : constant Node_Id    := Specification (Body_Decl);\n+         Body_Id   : constant Entity_Id  := Defining_Entity (Body_Spec);\n+         Loc       : constant Source_Ptr := Sloc (Body_Id);\n+         Params    : constant List_Id    :=\n+                       Parameter_Specifications (Body_Spec);\n+         Spec      : Node_Id;\n+         Spec_Id   : Entity_Id;\n+\n+         Dummy : Entity_Id;\n+         pragma Unreferenced (Dummy);\n+         --  A dummy variable used to capture the unused result of subprogram\n+         --  spec analysis.\n+\n+      begin\n+         --  Consider only procedure bodies whose name matches one of type\n+         --  [Limited_]Controlled's primitives.\n+\n+         if Nkind (Body_Spec) /= N_Procedure_Specification\n+           or else not Nam_In (Chars (Body_Id), Name_Adjust,\n+                                                Name_Finalize,\n+                                                Name_Initialize)\n+         then\n+            return;\n+\n+         --  A controlled primitive must have exactly one formal whose type\n+         --  derives from [Limited_]Controlled.\n+\n+         elsif List_Length (Params) /= 1 then\n+            return;\n+         end if;\n+\n+         Dummy := Analyze_Subprogram_Specification (Body_Spec);\n+\n+         if not Is_Controlled (Etype (Defining_Entity (First (Params)))) then\n+            return;\n+         end if;\n+\n+         Spec_Id := Find_Corresponding_Spec (Body_Decl, Post_Error => False);\n+\n+         --  The body has a matching spec, therefore it cannot be a late\n+         --  primitive.\n+\n+         if Present (Spec_Id) then\n+            return;\n+         end if;\n+\n+         --  At this point the body is known to be a late controlled primitive.\n+         --  Generate a matching spec and insert it before the body.\n+\n+         Spec := New_Copy_Tree (Body_Spec);\n+\n+         Set_Defining_Unit_Name\n+           (Spec, Make_Defining_Identifier (Loc, Chars (Body_Id)));\n+\n+         Insert_Before_And_Analyze (Body_Decl,\n+           Make_Subprogram_Declaration (Loc,\n+             Specification => Spec));\n+      end Handle_Late_Controlled_Primitive;\n+\n       --------------------------------\n       -- Remove_Visible_Refinements --\n       --------------------------------\n@@ -2200,6 +2270,9 @@ package body Sem_Ch3 is\n       Prag        : Node_Id;\n       Spec_Id     : Entity_Id;\n \n+      Body_Seen : Boolean := False;\n+      --  Flag set when the first body [stub] is encountered\n+\n       In_Package_Body : Boolean := False;\n       --  Flag set when the current declaration list belongs to a package body\n \n@@ -2294,15 +2367,28 @@ package body Sem_Ch3 is\n          --  care to attach the bodies at a proper place in the tree so as to\n          --  not cause unwanted freezing at that point.\n \n-         elsif not Analyzed (Next_Decl)\n-           and then (Nkind_In (Next_Decl, N_Subprogram_Body,\n-                                          N_Entry_Body,\n-                                          N_Package_Body,\n-                                          N_Protected_Body,\n-                                          N_Task_Body)\n-                       or else\n-                     Nkind (Next_Decl) in N_Body_Stub)\n-         then\n+         elsif not Analyzed (Next_Decl) and then Is_Body (Next_Decl) then\n+\n+            --  When a controlled type is frozen, the expander generates stream\n+            --  and controlled type support routines. If the freeze is caused\n+            --  by the stand alone body of Initialize, Adjust and Finalize, the\n+            --  expander will end up using the wrong version of these routines\n+            --  as the body has not been processed yet. To remedy this, detect\n+            --  a late controlled primitive and create a proper spec for it.\n+            --  This ensures that the primitive will override its inherited\n+            --  counterpart before the freeze takes place.\n+\n+            --  ??? a cleaner approach may be possible and/or this solution\n+            --  could be extended to general-purpose late primitives, TBD.\n+\n+            if not Body_Seen and then not Is_Body (Decl) then\n+               Body_Seen := True;\n+\n+               if Nkind (Next_Decl) = N_Subprogram_Body then\n+                  Handle_Late_Controlled_Primitive (Next_Decl);\n+               end if;\n+            end if;\n+\n             Adjust_Decl;\n             Freeze_All (Freeze_From, Decl);\n             Freeze_From := Last_Entity (Current_Scope);"}, {"sha": "c6e23b586d55cbddd017ea18523b6e15b42a39b1", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 57, "deletions": 24, "changes": 81, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fba9ebfc51f21a9ba4848c721bb925078737b024/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fba9ebfc51f21a9ba4848c721bb925078737b024/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=fba9ebfc51f21a9ba4848c721bb925078737b024", "patch": "@@ -4168,10 +4168,11 @@ package body Sem_Ch8 is\n       --  generate the precise error message.\n \n       function From_Actual_Package (E : Entity_Id) return Boolean;\n-      --  Returns true if the entity is declared in a package that is\n+      --  Returns true if the entity is an actual for a package that is itself\n       --  an actual for a formal package of the current instance. Such an\n-      --  entity requires special handling because it may be use-visible\n-      --  but hides directly visible entities defined outside the instance.\n+      --  entity requires special handling because it may be use-visible but\n+      --  hides directly visible entities defined outside the instance, because\n+      --  the corresponding formal did so in the generic.\n \n       function Is_Actual_Parameter return Boolean;\n       --  This function checks if the node N is an identifier that is an actual\n@@ -4214,11 +4215,57 @@ package body Sem_Ch8 is\n \n       function From_Actual_Package (E : Entity_Id) return Boolean is\n          Scop : constant Entity_Id := Scope (E);\n-         Act  : Entity_Id;\n+         --  Declared scope of candidate entity\n+\n+         Act : Entity_Id;\n+\n+         function Declared_In_Actual (Pack : Entity_Id) return Boolean;\n+         --  Recursive function that does the work and examines actuals of\n+         --  actual packages of current instance.\n+\n+         ------------------------\n+         -- Declared_In_Actual --\n+         ------------------------\n+\n+         function Declared_In_Actual (Pack : Entity_Id) return Boolean is\n+            Act : Entity_Id;\n+\n+         begin\n+            if No (Associated_Formal_Package (Pack)) then\n+               return False;\n+\n+            else\n+               Act := First_Entity (Pack);\n+               while Present (Act) loop\n+                  if Renamed_Object (Pack) = Scop then\n+                     return True;\n+\n+                  --  Check for end of list of actuals.\n+\n+                  elsif Ekind (Act) = E_Package\n+                    and then Renamed_Object (Act) = Pack\n+                  then\n+                     return False;\n+\n+                  elsif Ekind (Act) = E_Package\n+                    and then Declared_In_Actual (Act)\n+                  then\n+                     return True;\n+                  end if;\n+\n+                  Next_Entity (Act);\n+               end loop;\n+\n+               return False;\n+            end if;\n+         end Declared_In_Actual;\n+\n+      --  Start of processing for From_Actual_Package\n \n       begin\n          if not In_Instance then\n             return False;\n+\n          else\n             Inst := Current_Scope;\n             while Present (Inst)\n@@ -4234,27 +4281,13 @@ package body Sem_Ch8 is\n \n             Act := First_Entity (Inst);\n             while Present (Act) loop\n-               if Ekind (Act) = E_Package then\n-\n-                  --  Check for end of actuals list\n-\n-                  if Renamed_Object (Act) = Inst then\n-                     return False;\n-\n-                  elsif Present (Associated_Formal_Package (Act))\n-                    and then Renamed_Object (Act) = Scop\n-                  then\n-                     --  Entity comes from (instance of) formal package\n-\n-                     return True;\n-\n-                  else\n-                     Next_Entity (Act);\n-                  end if;\n-\n-               else\n-                  Next_Entity (Act);\n+               if Ekind (Act) = E_Package\n+                 and then Declared_In_Actual (Act)\n+               then\n+                  return True;\n                end if;\n+\n+               Next_Entity (Act);\n             end loop;\n \n             return False;"}]}