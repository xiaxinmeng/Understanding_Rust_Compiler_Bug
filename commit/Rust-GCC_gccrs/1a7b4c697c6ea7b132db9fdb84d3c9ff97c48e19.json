{"sha": "1a7b4c697c6ea7b132db9fdb84d3c9ff97c48e19", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWE3YjRjNjk3YzZlYTdiMTMyZGI5ZmRiODRkM2M5ZmY5N2M0OGUxOQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@casey.cygnus.com", "date": "2000-03-15T21:54:47Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2000-03-15T21:54:47Z"}, "message": "* cpphash.c (dump_hash_helper): Take the slot, not the element.\n\nFrom-SVN: r32566", "tree": {"sha": "11eba948e629a446e9fb5d17fd773638e7cc096b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/11eba948e629a446e9fb5d17fd773638e7cc096b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1a7b4c697c6ea7b132db9fdb84d3c9ff97c48e19", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a7b4c697c6ea7b132db9fdb84d3c9ff97c48e19", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a7b4c697c6ea7b132db9fdb84d3c9ff97c48e19", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a7b4c697c6ea7b132db9fdb84d3c9ff97c48e19/comments", "author": null, "committer": null, "parents": [{"sha": "2ca19d5e9ebf19b404d6ce94f6c4035049e5f93e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ca19d5e9ebf19b404d6ce94f6c4035049e5f93e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ca19d5e9ebf19b404d6ce94f6c4035049e5f93e"}], "stats": {"total": 12, "additions": 9, "deletions": 3}, "files": [{"sha": "b02f173dc84214c77ad9a9ff311642ccfa6be7a9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a7b4c697c6ea7b132db9fdb84d3c9ff97c48e19/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a7b4c697c6ea7b132db9fdb84d3c9ff97c48e19/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1a7b4c697c6ea7b132db9fdb84d3c9ff97c48e19", "patch": "@@ -1,3 +1,7 @@\n+2000-03-15  Jason Merrill  <jason@casey.cygnus.com>\n+\n+\t* cpphash.c (dump_hash_helper): Take the slot, not the element.\n+\n Wed Mar 15 14:28:54 2000  Jason Eckhardt  <jle@cygnus.com>\n \n \t* flow.c (verify_flow_info): Check for unconditional return.\n@@ -37,11 +41,13 @@ Wed Mar 15 13:07:05 MET 2000  Jan Hubicka  <jh@suse.cz>\n \tQUAL_UNION_TYPE handling.\n \n Wed Feb 23 13:00:06 CET 2000  Jan Hubicka  <jh@suse.cz>\n+\n         * flow.c (fixup_reorder_chain): Avoid double labels in the basic block;\n         end of basic block is jump_insn, not barrier; use create_basic_block\n         instead of creating basic block by hand.\n \n 2000-03-14  Jason Eckhardt  <jle@cygnus.com>\n+\n \t* flow.c (reorder_basic_blocks): Account for barriers when writing\n \tover NEXT_INSN (last_bb->end).\n \t(verify_flow_info): Add check for missing barriers."}, {"sha": "236a94273fa170a84dead953ad28dd50711d6092", "filename": "gcc/cpphash.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a7b4c697c6ea7b132db9fdb84d3c9ff97c48e19/gcc%2Fcpphash.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a7b4c697c6ea7b132db9fdb84d3c9ff97c48e19/gcc%2Fcpphash.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcpphash.c?ref=1a7b4c697c6ea7b132db9fdb84d3c9ff97c48e19", "patch": "@@ -33,7 +33,7 @@ Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n static unsigned int hash_HASHNODE PARAMS ((const void *));\n static int eq_HASHNODE\t\t  PARAMS ((const void *, const void *));\n static void del_HASHNODE\t  PARAMS ((void *));\n-static int dump_hash_helper\t  PARAMS ((void *, void *));\n+static int dump_hash_helper\t  PARAMS ((void **, void *));\n \n static int comp_def_part\t PARAMS ((int, U_CHAR *, int, U_CHAR *,\n \t\t\t\t\t  int, int));\n@@ -1722,10 +1722,10 @@ _cpp_dump_definition (pfile, sym, len, defn)\n /* Dump out the hash table.  */\n static int\n dump_hash_helper (h, p)\n-     void *h;\n+     void **h;\n      void *p;\n {\n-  HASHNODE *hp = (HASHNODE *)h;\n+  HASHNODE *hp = (HASHNODE *)*h;\n   cpp_reader *pfile = (cpp_reader *)p;\n \n   if (hp->type == T_MACRO)"}]}