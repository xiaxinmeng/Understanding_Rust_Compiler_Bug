{"sha": "c2a11bfcc0ddc8c7faa7a823e0fb1e139771b027", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzJhMTFiZmNjMGRkYzhjN2ZhYTdhODIzZTBmYjFlMTM5NzcxYjAyNw==", "commit": {"author": {"name": "Roger Sayle", "email": "roger@eyesopen.com", "date": "2006-02-05T16:59:48Z"}, "committer": {"name": "Roger Sayle", "email": "sayle@gcc.gnu.org", "date": "2006-02-05T16:59:48Z"}, "message": "trans-stmt.c (gfc_evaluate_where_mask): Use LOGICAL*1 for WHERE masks instead of LOGICAL*4.\n\n\n\t* trans-stmt.c (gfc_evaluate_where_mask): Use LOGICAL*1 for WHERE\n\tmasks instead of LOGICAL*4.\n\nFrom-SVN: r110617", "tree": {"sha": "4d7681b4fef9f6aba6de19a89d61d4016e5ae202", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4d7681b4fef9f6aba6de19a89d61d4016e5ae202"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c2a11bfcc0ddc8c7faa7a823e0fb1e139771b027", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2a11bfcc0ddc8c7faa7a823e0fb1e139771b027", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c2a11bfcc0ddc8c7faa7a823e0fb1e139771b027", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2a11bfcc0ddc8c7faa7a823e0fb1e139771b027/comments", "author": null, "committer": null, "parents": [{"sha": "5a1a44503eb33a30057d524772cd1f7160d13c5f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a1a44503eb33a30057d524772cd1f7160d13c5f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a1a44503eb33a30057d524772cd1f7160d13c5f"}], "stats": {"total": 17, "additions": 13, "deletions": 4}, "files": [{"sha": "34f1cb2180f3d94094a377c3dabb8f474c0de8a4", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2a11bfcc0ddc8c7faa7a823e0fb1e139771b027/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2a11bfcc0ddc8c7faa7a823e0fb1e139771b027/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=c2a11bfcc0ddc8c7faa7a823e0fb1e139771b027", "patch": "@@ -1,3 +1,8 @@\n+2006-02-05  Roger Sayle  <roger@eyesopen.com>\n+\n+\t* trans-stmt.c (gfc_evaluate_where_mask): Use LOGICAL*1 for WHERE\n+\tmasks instead of LOGICAL*4.\n+\n 2006-02-05  Jakub Jelinek  <jakub@redhat.com>\n \n \t* resolve.c (resolve_symbol): Initialize constructor_expr to NULL."}, {"sha": "eec00e62040258cca6aab212be54945341f27be8", "filename": "gcc/fortran/trans-stmt.c", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2a11bfcc0ddc8c7faa7a823e0fb1e139771b027/gcc%2Ffortran%2Ftrans-stmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2a11bfcc0ddc8c7faa7a823e0fb1e139771b027/gcc%2Ffortran%2Ftrans-stmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-stmt.c?ref=c2a11bfcc0ddc8c7faa7a823e0fb1e139771b027", "patch": "@@ -2639,6 +2639,7 @@ gfc_evaluate_where_mask (gfc_expr * me, forall_info * nested_forall_info,\n   tree inner_size, size;\n   stmtblock_t body, body1, inner_size_body;\n   gfc_se lse, rse;\n+  tree mask_type;\n   tree count;\n   tree tmpexpr;\n \n@@ -2652,9 +2653,12 @@ gfc_evaluate_where_mask (gfc_expr * me, forall_info * nested_forall_info,\n   size = compute_overall_iter_number (nested_forall_info, inner_size,\n \t\t\t\t      &inner_size_body, block);\n \n+  /* As the mask array can be very big, prefer compact boolean types.  */\n+  mask_type = gfc_get_logical_type (gfc_logical_kinds[0].kind);\n+\n   /* Allocate temporary for where mask.  */\n-  tmp = allocate_temp_for_forall_nest_1 (boolean_type_node, size, block,\n-\t\t\t\t\t &ptemp1);\n+  tmp = allocate_temp_for_forall_nest_1 (mask_type, size, block, &ptemp1);\n+\n   /* Record the temporary address in order to free it later.  */\n   if (ptemp1)\n     {\n@@ -2666,8 +2670,8 @@ gfc_evaluate_where_mask (gfc_expr * me, forall_info * nested_forall_info,\n     }\n \n   /* Allocate temporary for !mask.  */\n-  ntmp = allocate_temp_for_forall_nest_1 (boolean_type_node, size, block,\n-\t\t\t\t\t  &ptemp2);\n+  ntmp = allocate_temp_for_forall_nest_1 (mask_type, size, block, &ptemp2);\n+\n   /* Record the temporary  in order to free it later.  */\n   if (ptemp2)\n     {"}]}