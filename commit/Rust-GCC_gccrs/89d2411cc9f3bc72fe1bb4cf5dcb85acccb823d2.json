{"sha": "89d2411cc9f3bc72fe1bb4cf5dcb85acccb823d2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODlkMjQxMWNjOWYzYmM3MmZlMWJiNGNmNWRjYjg1YWNjY2I4MjNkMg==", "commit": {"author": {"name": "Danny Smith", "email": "dannysmith@users.sourceforge.net", "date": "2009-01-26T20:34:09Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2009-01-26T20:34:09Z"}, "message": "re PR testsuite/38949 (Link failures in new stackalign tests)\n\n2009-01-26  Danny Smith  <dannysmith@users.sourceforge.net>\n\n\tPR testsuite/38949\n\t* g++.dg/torture/stackalign/test-unwind.h (ASMNAME): Define.\n\tUse instead of C name in asm statements.\n\nFrom-SVN: r143684", "tree": {"sha": "fdbd2d44291c3b85da85b8f9df0a8f4d61e83d53", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fdbd2d44291c3b85da85b8f9df0a8f4d61e83d53"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/89d2411cc9f3bc72fe1bb4cf5dcb85acccb823d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89d2411cc9f3bc72fe1bb4cf5dcb85acccb823d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/89d2411cc9f3bc72fe1bb4cf5dcb85acccb823d2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89d2411cc9f3bc72fe1bb4cf5dcb85acccb823d2/comments", "author": null, "committer": null, "parents": [{"sha": "93f1527a3f84201334303253a3e5a23ade13f0dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93f1527a3f84201334303253a3e5a23ade13f0dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/93f1527a3f84201334303253a3e5a23ade13f0dc"}], "stats": {"total": 25, "additions": 18, "deletions": 7}, "files": [{"sha": "57c8c33d518df21638c1f9c2b6fefcf9cc527dd4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89d2411cc9f3bc72fe1bb4cf5dcb85acccb823d2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89d2411cc9f3bc72fe1bb4cf5dcb85acccb823d2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=89d2411cc9f3bc72fe1bb4cf5dcb85acccb823d2", "patch": "@@ -1,3 +1,9 @@\n+2009-01-26  Danny Smith  <dannysmith@users.sourceforge.net>\n+\n+\tPR testsuite/38949\n+\t* g++.dg/torture/stackalign/test-unwind.h (ASMNAME): Define.\n+\tUse instead of C name in asm statements.\n+\n 2009-01-26  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/38745"}, {"sha": "8267384e079f5dfb88333f9dabed9a8f89477f1d", "filename": "gcc/testsuite/g++.dg/torture/stackalign/test-unwind.h", "status": "modified", "additions": 12, "deletions": 7, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89d2411cc9f3bc72fe1bb4cf5dcb85acccb823d2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fstackalign%2Ftest-unwind.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89d2411cc9f3bc72fe1bb4cf5dcb85acccb823d2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fstackalign%2Ftest-unwind.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fstackalign%2Ftest-unwind.h?ref=89d2411cc9f3bc72fe1bb4cf5dcb85acccb823d2", "patch": "@@ -1,5 +1,10 @@\n #include \"check.h\"\n \n+\n+#define ASMNAME(cname)  ASMNAME2 (__USER_LABEL_PREFIX__, cname)\n+#define ASMNAME2(prefix, cname) STRING (prefix) cname\n+#define STRING(x)    #x\n+\n #ifdef  __cplusplus\n extern \"C\" void abort (void);\n #else\n@@ -69,8 +74,8 @@ main()\n \t: \"i\" (INIT_EBX)\n \t);\n \t__asm__ __volatile__ (\n-\t\"movl %ebp, g_ebp_save\\n\\t\"\n-\t\"movl %esp, g_esp_save\\n\\t\"\n+\t\"movl %ebp,\" ASMNAME(\"g_ebp_save\")\"\\n\\t\"\n+\t\"movl %esp,\" ASMNAME(\"g_esp_save\")\"\\n\\t\"\n \t);\n \ttry {\n \t\tfoo();\n@@ -81,11 +86,11 @@ main()\n \n \t// Get DI/SI/BX register value after exception caught\n \t__asm__ __volatile__ (\n-\t\"movl %edi, g_edi\\n\\t\"\n-\t\"movl %esi, g_esi\\n\\t\"\n-\t\"movl %ebx, g_ebx\\n\\t\"\n-\t\"movl %ebp, g_ebp\\n\\t\"\n-\t\"movl %esp, g_esp\\n\\t\"\n+\t\"movl %edi,\" ASMNAME(\"g_edi\")\"\\n\\t\"\n+\t\"movl %esi,\" ASMNAME(\"g_esi\")\"\\n\\t\"\n+\t\"movl %ebx,\" ASMNAME(\"g_ebx\")\"\\n\\t\"\n+\t\"movl %ebp,\" ASMNAME(\"g_ebp\")\"\\n\\t\"\n+\t\"movl %esp,\" ASMNAME(\"g_esp\")\"\\n\\t\"\n \t);\n \n \t// Check if DI/SI/BX register value are the same as before calling"}]}