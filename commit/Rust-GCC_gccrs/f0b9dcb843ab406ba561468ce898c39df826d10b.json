{"sha": "f0b9dcb843ab406ba561468ce898c39df826d10b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjBiOWRjYjg0M2FiNDA2YmE1NjE0NjhjZTg5OGMzOWRmODI2ZDEwYg==", "commit": {"author": {"name": "Dorit Naishlos", "email": "dorit@il.ibm.com", "date": "2005-01-19T09:25:06Z"}, "committer": {"name": "Dorit Nuzman", "email": "dorit@gcc.gnu.org", "date": "2005-01-19T09:25:06Z"}, "message": "vect-85.c: Add comment.\n\n        * gcc.dg/vect/vect-85.c: Add comment.\n        * gcc.dg/vect/vect-86.c: Add xfail for now.\n        * gcc.dg/vect/vect-87.c: Add xfail for now.\n        * gcc.dg/vect/vect-88.c: Add xfail for now.\n        * gcc.dg/vect/vect.exp: Remove -fno-tree-pre.\n\nFrom-SVN: r93888", "tree": {"sha": "16ed28b288ac0e75211bbc254ca6955fb44b6c10", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/16ed28b288ac0e75211bbc254ca6955fb44b6c10"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f0b9dcb843ab406ba561468ce898c39df826d10b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0b9dcb843ab406ba561468ce898c39df826d10b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f0b9dcb843ab406ba561468ce898c39df826d10b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0b9dcb843ab406ba561468ce898c39df826d10b/comments", "author": null, "committer": null, "parents": [{"sha": "674bc5a5d3a5a1e4d0e26a234a8e0d5b75868cdc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/674bc5a5d3a5a1e4d0e26a234a8e0d5b75868cdc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/674bc5a5d3a5a1e4d0e26a234a8e0d5b75868cdc"}], "stats": {"total": 31, "additions": 22, "deletions": 9}, "files": [{"sha": "2657d130752ab2cf9bb203f704a9be4d47e12b90", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0b9dcb843ab406ba561468ce898c39df826d10b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0b9dcb843ab406ba561468ce898c39df826d10b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f0b9dcb843ab406ba561468ce898c39df826d10b", "patch": "@@ -1,3 +1,11 @@\n+2005-01-19  Dorit Naishlos  <dorit@il.ibm.com>\n+\n+\t* gcc.dg/vect/vect-85.c: Add comment.\n+\t* gcc.dg/vect/vect-86.c: Add xfail for now.\n+\t* gcc.dg/vect/vect-87.c: Add xfail for now.\n+\t* gcc.dg/vect/vect-88.c: Add xfail for now.\n+\t* gcc.dg/vect/vect.exp: Remove -fno-tree-pre.\n+\n 2005-01-19  Eric Botcazou  <ebotcazou@libertysurf.fr>\n \n \t* gcc.dg/vect/vect-66.c: Slightly tweak 3rd loop."}, {"sha": "dbd8aef6eadecac69e41036a4a71820e1153812c", "filename": "gcc/testsuite/gcc.dg/vect/vect-85.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0b9dcb843ab406ba561468ce898c39df826d10b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-85.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0b9dcb843ab406ba561468ce898c39df826d10b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-85.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-85.c?ref=f0b9dcb843ab406ba561468ce898c39df826d10b", "patch": "@@ -45,4 +45,6 @@ int main (void)\n   return 0;\n }\n \n+/* Fails due to invariant phi introduced by PRE.\n+   Fails for targets that don't vectorize PLUS (e.g alpha).  */\n /* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail *-*-* } } } */"}, {"sha": "72f4d1353bf977f00451897da50ab45b10e63536", "filename": "gcc/testsuite/gcc.dg/vect/vect-86.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0b9dcb843ab406ba561468ce898c39df826d10b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-86.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0b9dcb843ab406ba561468ce898c39df826d10b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-86.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-86.c?ref=f0b9dcb843ab406ba561468ce898c39df826d10b", "patch": "@@ -45,7 +45,8 @@ int main (void)\n   return 0;\n }\n \n-/* Fails for targets that don't vectorize PLUS.  */\n-/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail alpha*-*-* } } } */\n+/* Fails due to invariant phi introduced by PRE.\n+   Fails for targets that don't vectorize PLUS (e.g alpha).  */\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail *-*-* } } } */\n /* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */\n /* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 0 \"vect\" } } */"}, {"sha": "510d766bf3343a1e491ce8cc9e036e5a34804a79", "filename": "gcc/testsuite/gcc.dg/vect/vect-87.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0b9dcb843ab406ba561468ce898c39df826d10b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-87.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0b9dcb843ab406ba561468ce898c39df826d10b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-87.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-87.c?ref=f0b9dcb843ab406ba561468ce898c39df826d10b", "patch": "@@ -49,7 +49,8 @@ int main (void)\n   return 0;\n }\n \n-/* Fails for targets that don't vectorize PLUS.  */\n-/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail alpha*-*-* } } } */\n+/* Fails due to invariant phi introduced by PRE.\n+   Fails for targets that don't vectorize PLUS (e.g alpha).  */\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail *-*-* } } } */\n /* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */\n-/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 1 \"vect\" { xfail alpha*-*-* } } } */\n+/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 1 \"vect\" { xfail *-*-* } } } */"}, {"sha": "4ed4bd4849cf090849ecc4a519d1c13f3f2cebe6", "filename": "gcc/testsuite/gcc.dg/vect/vect-88.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0b9dcb843ab406ba561468ce898c39df826d10b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-88.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0b9dcb843ab406ba561468ce898c39df826d10b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-88.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-88.c?ref=f0b9dcb843ab406ba561468ce898c39df826d10b", "patch": "@@ -49,7 +49,8 @@ int main (void)\n   return 0;\n }\n \n-/* Fails for targets that don't vectorize PLUS.  */\n-/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail alpha*-*-* } } } */\n+/* Fails due to invariant phi introduced by PRE.\n+   Fails for targets that don't vectorize PLUS (e.g alpha).  */\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail *-*-* } } } */\n /* { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 0 \"vect\" } } */\n-/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 1 \"vect\" { xfail alpha*-*-* } } } */\n+/* { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 1 \"vect\" { xfail *-*-* } } } */"}, {"sha": "94fd56c588dd73534cdda1a2d12268ec5c681fd0", "filename": "gcc/testsuite/gcc.dg/vect/vect.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0b9dcb843ab406ba561468ce898c39df826d10b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0b9dcb843ab406ba561468ce898c39df826d10b/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect.exp?ref=f0b9dcb843ab406ba561468ce898c39df826d10b", "patch": "@@ -23,7 +23,7 @@ load_lib gcc-dg.exp\n set DEFAULT_VECTCFLAGS \"\"\n \n # These flags are used for all targets.\n-lappend DEFAULT_VECTCFLAGS \"-O2\" \"-ftree-vectorize\" \"-fdump-tree-vect-stats\" \"-fno-tree-pre\"\n+lappend DEFAULT_VECTCFLAGS \"-O2\" \"-ftree-vectorize\" \"-fdump-tree-vect-stats\"\n \n # If the target system supports vector instructions, the default action\n # for a test is 'run', otherwise it's 'compile'.  Save current default."}]}