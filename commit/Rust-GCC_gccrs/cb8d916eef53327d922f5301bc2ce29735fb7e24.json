{"sha": "cb8d916eef53327d922f5301bc2ce29735fb7e24", "node_id": "C_kwDOANBUbNoAKGNiOGQ5MTZlZWY1MzMyN2Q5MjJmNTMwMWJjMmNlMjk3MzVmYjdlMjQ", "commit": {"author": {"name": "liuhongt", "email": "hongtao.liu@intel.com", "date": "2021-09-22T07:03:36Z"}, "committer": {"name": "liuhongt", "email": "hongtao.liu@intel.com", "date": "2021-09-23T09:05:01Z"}, "message": "AVX512FP16: Add expander for rint/nearbyinthf2.\n\ngcc/ChangeLog:\n\n\t* config/i386/i386.md (rinthf2): New expander.\n\t(nearbyinthf2): New expander.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.target/i386/avx512fp16-builtin-round-1.c: Add new testcase.", "tree": {"sha": "1a33c8dd4286c41be0072b643fcc6e335a284be5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1a33c8dd4286c41be0072b643fcc6e335a284be5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cb8d916eef53327d922f5301bc2ce29735fb7e24", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb8d916eef53327d922f5301bc2ce29735fb7e24", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb8d916eef53327d922f5301bc2ce29735fb7e24", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb8d916eef53327d922f5301bc2ce29735fb7e24/comments", "author": {"login": "algebra84", "id": 22926165, "node_id": "MDQ6VXNlcjIyOTI2MTY1", "avatar_url": "https://avatars.githubusercontent.com/u/22926165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/algebra84", "html_url": "https://github.com/algebra84", "followers_url": "https://api.github.com/users/algebra84/followers", "following_url": "https://api.github.com/users/algebra84/following{/other_user}", "gists_url": "https://api.github.com/users/algebra84/gists{/gist_id}", "starred_url": "https://api.github.com/users/algebra84/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/algebra84/subscriptions", "organizations_url": "https://api.github.com/users/algebra84/orgs", "repos_url": "https://api.github.com/users/algebra84/repos", "events_url": "https://api.github.com/users/algebra84/events{/privacy}", "received_events_url": "https://api.github.com/users/algebra84/received_events", "type": "User", "site_admin": false}, "committer": {"login": "algebra84", "id": 22926165, "node_id": "MDQ6VXNlcjIyOTI2MTY1", "avatar_url": "https://avatars.githubusercontent.com/u/22926165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/algebra84", "html_url": "https://github.com/algebra84", "followers_url": "https://api.github.com/users/algebra84/followers", "following_url": "https://api.github.com/users/algebra84/following{/other_user}", "gists_url": "https://api.github.com/users/algebra84/gists{/gist_id}", "starred_url": "https://api.github.com/users/algebra84/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/algebra84/subscriptions", "organizations_url": "https://api.github.com/users/algebra84/orgs", "repos_url": "https://api.github.com/users/algebra84/repos", "events_url": "https://api.github.com/users/algebra84/events{/privacy}", "received_events_url": "https://api.github.com/users/algebra84/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0d39eb28fd2ab00306bd7c0a87b6c0ed615b5d12", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d39eb28fd2ab00306bd7c0a87b6c0ed615b5d12", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d39eb28fd2ab00306bd7c0a87b6c0ed615b5d12"}], "stats": {"total": 36, "additions": 36, "deletions": 0}, "files": [{"sha": "4b13a59be8259b50705b513f987e2ace0d26085f", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb8d916eef53327d922f5301bc2ce29735fb7e24/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb8d916eef53327d922f5301bc2ce29735fb7e24/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=cb8d916eef53327d922f5301bc2ce29735fb7e24", "patch": "@@ -18287,6 +18287,17 @@\n    (set_attr \"znver1_decode\" \"vector\")\n    (set_attr \"mode\" \"XF\")])\n \n+(define_expand \"rinthf2\"\n+  [(match_operand:HF 0 \"register_operand\")\n+   (match_operand:HF 1 \"nonimmediate_operand\")]\n+  \"TARGET_AVX512FP16\"\n+{\n+  emit_insn (gen_sse4_1_roundhf2 (operands[0],\n+\t\t\t\t  operands[1],\n+\t\t\t\t  GEN_INT (ROUND_MXCSR)));\n+  DONE;\n+})\n+\n (define_expand \"rint<mode>2\"\n   [(use (match_operand:MODEF 0 \"register_operand\"))\n    (use (match_operand:MODEF 1 \"nonimmediate_operand\"))]\n@@ -18320,6 +18331,17 @@\n   \"TARGET_USE_FANCY_MATH_387\n    && !flag_trapping_math\")\n \n+(define_expand \"nearbyinthf2\"\n+  [(match_operand:HF 0 \"register_operand\")\n+   (match_operand:HF 1 \"nonimmediate_operand\")]\n+  \"TARGET_AVX512FP16\"\n+{\n+  emit_insn (gen_sse4_1_roundhf2 (operands[0],\n+\t\t\t\t  operands[1],\n+\t\t\t\t  GEN_INT (ROUND_MXCSR | ROUND_NO_EXC)));\n+  DONE;\n+})\n+\n (define_expand \"nearbyint<mode>2\"\n   [(use (match_operand:MODEF 0 \"register_operand\"))\n    (use (match_operand:MODEF 1 \"nonimmediate_operand\"))]"}, {"sha": "a1c6636e3541c7d11a708192152edc178ebcddc7", "filename": "gcc/testsuite/gcc.target/i386/avx512fp16-builtin-round-1.c", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb8d916eef53327d922f5301bc2ce29735fb7e24/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512fp16-builtin-round-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb8d916eef53327d922f5301bc2ce29735fb7e24/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512fp16-builtin-round-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512fp16-builtin-round-1.c?ref=cb8d916eef53327d922f5301bc2ce29735fb7e24", "patch": "@@ -25,7 +25,21 @@ f4 (_Float16 x)\n   return __builtin_roundevenf16 (x);\n }\n \n+_Float16\n+f5 (_Float16 x)\n+{\n+  return __builtin_rintf16 (x);\n+}\n+\n+_Float16\n+f6 (_Float16 x)\n+{\n+  return __builtin_nearbyintf16 (x);\n+}\n+\n /* { dg-final { scan-assembler-times \"vrndscalesh\\[ \\\\t\\]+\\\\\\$11\\[^\\n\\r\\]*xmm\\[0-9\\]\" 1 } } */\n /* { dg-final { scan-assembler-times \"vrndscalesh\\[ \\\\t\\]+\\\\\\$10\\[^\\n\\r\\]*xmm\\[0-9\\]\" 1 } } */\n /* { dg-final { scan-assembler-times \"vrndscalesh\\[ \\\\t\\]+\\\\\\$9\\[^\\n\\r\\]*xmm\\[0-9\\]\" 1 } } */\n /* { dg-final { scan-assembler-times \"vrndscalesh\\[ \\\\t\\]+\\\\\\$8\\[^\\n\\r\\]*xmm\\[0-9\\]\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vrndscalesh\\[ \\\\t\\]+\\\\\\$4\\[^\\n\\r\\]*xmm\\[0-9\\]\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vrndscalesh\\[ \\\\t\\]+\\\\\\$12\\[^\\n\\r\\]*xmm\\[0-9\\]\" 1 } } */"}]}