{"sha": "18bc5398c1526d6a852b2f18152ebcfe6b706dcf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MThiYzUzOThjMTUyNmQ2YTg1MmIyZjE4MTUyZWJjZmU2YjcwNmRjZg==", "commit": {"author": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2010-05-07T20:49:29Z"}, "committer": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2010-05-07T20:49:29Z"}, "message": "c-pragma.c (pending_weak_d, [...]): New.\n\n\t* c-pragma.c (pending_weak_d, pending_weak): New.\n\t(pending_weaks): Change the type to VEC((pending_weak,gc) *.\n\t(maybe_apply_pragma_weak, maybe_apply_pending_pragma_weaks,\n\thandle_pragma_weak): Update the uses of pending_weaks.\n\nFrom-SVN: r159172", "tree": {"sha": "a8dfdd0ff86c317f8c7bb14a0c719cb6994ffef2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a8dfdd0ff86c317f8c7bb14a0c719cb6994ffef2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/18bc5398c1526d6a852b2f18152ebcfe6b706dcf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18bc5398c1526d6a852b2f18152ebcfe6b706dcf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/18bc5398c1526d6a852b2f18152ebcfe6b706dcf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18bc5398c1526d6a852b2f18152ebcfe6b706dcf/comments", "author": null, "committer": null, "parents": [{"sha": "0f590a2d73476b362a13e60aadde8a4252ce272f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f590a2d73476b362a13e60aadde8a4252ce272f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f590a2d73476b362a13e60aadde8a4252ce272f"}], "stats": {"total": 50, "additions": 37, "deletions": 13}, "files": [{"sha": "2fd92d9e7df639c009b09a59047c9ab63aeb61d5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18bc5398c1526d6a852b2f18152ebcfe6b706dcf/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18bc5398c1526d6a852b2f18152ebcfe6b706dcf/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=18bc5398c1526d6a852b2f18152ebcfe6b706dcf", "patch": "@@ -1,3 +1,10 @@\n+2010-05-07  Steven Bosscher  <steven@gcc.gnu.org>\n+\n+\t* c-pragma.c (pending_weak_d, pending_weak): New.\n+\t(pending_weaks): Change the type to VEC((pending_weak,gc) *.\n+\t(maybe_apply_pragma_weak, maybe_apply_pending_pragma_weaks,\n+\thandle_pragma_weak): Update the uses of pending_weaks.\n+\n 2010-05-07  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n \n \tPR documentation/44016"}, {"sha": "f3cce3e61d5d55ff17b05c646c405ff85df01161", "filename": "gcc/c-pragma.c", "status": "modified", "additions": 30, "deletions": 13, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18bc5398c1526d6a852b2f18152ebcfe6b706dcf/gcc%2Fc-pragma.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18bc5398c1526d6a852b2f18152ebcfe6b706dcf/gcc%2Fc-pragma.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-pragma.c?ref=18bc5398c1526d6a852b2f18152ebcfe6b706dcf", "patch": "@@ -244,7 +244,16 @@ handle_pragma_pack (cpp_reader * ARG_UNUSED (dummy))\n }\n #endif  /* HANDLE_PRAGMA_PACK */\n \n-static GTY(()) tree pending_weaks;\n+typedef struct GTY(()) pending_weak_d\n+{\n+  tree name;\n+  tree value;\n+} pending_weak;\n+\n+DEF_VEC_O(pending_weak);\n+DEF_VEC_ALLOC_O(pending_weak,gc);\n+\n+static GTY(()) VEC(pending_weak,gc) *pending_weaks;\n \n #ifdef HANDLE_PRAGMA_WEAK\n static void apply_pragma_weak (tree, tree);\n@@ -274,7 +283,9 @@ apply_pragma_weak (tree decl, tree value)\n void\n maybe_apply_pragma_weak (tree decl)\n {\n-  tree *p, t, id;\n+  tree id;\n+  int i;\n+  pending_weak *pe;\n \n   /* Avoid asking for DECL_ASSEMBLER_NAME when it's not needed.  */\n \n@@ -293,11 +304,11 @@ maybe_apply_pragma_weak (tree decl)\n \n   id = DECL_ASSEMBLER_NAME (decl);\n \n-  for (p = &pending_weaks; (t = *p) ; p = &TREE_CHAIN (t))\n-    if (id == TREE_PURPOSE (t))\n+  for (i = 0; VEC_iterate (pending_weak, pending_weaks, i, pe); i++)\n+    if (id == pe->name)\n       {\n-\tapply_pragma_weak (decl, TREE_VALUE (t));\n-\t*p = TREE_CHAIN (t);\n+\tapply_pragma_weak (decl, pe->value);\n+\tVEC_unordered_remove (pending_weak, pending_weaks, i);\n \tbreak;\n       }\n }\n@@ -307,15 +318,16 @@ maybe_apply_pragma_weak (tree decl)\n void\n maybe_apply_pending_pragma_weaks (void)\n {\n-  tree *p, t, alias_id, id, decl, *next;\n+  tree alias_id, id, decl;\n+  int i;\n+  pending_weak *pe;\n \n-  for (p = &pending_weaks; (t = *p) ; p = next)\n+  for (i = 0; VEC_iterate (pending_weak, pending_weaks, i, pe); i++)\n     {\n-      next = &TREE_CHAIN (t);\n-      alias_id = TREE_PURPOSE (t);\n-      id = TREE_VALUE (t);\n+      alias_id = pe->name;\n+      id = pe->value;\n \n-      if (TREE_VALUE (t) == NULL)\n+      if (id == NULL)\n \tcontinue;\n \n       decl = build_decl (UNKNOWN_LOCATION,\n@@ -359,7 +371,12 @@ handle_pragma_weak (cpp_reader * ARG_UNUSED (dummy))\n \tassemble_alias (decl, value);\n     }\n   else\n-    pending_weaks = tree_cons (name, value, pending_weaks);\n+    {\n+      pending_weak *pe;\n+      pe = VEC_safe_push (pending_weak, gc, pending_weaks, NULL);\n+      pe->name = name;\n+      pe->value = value;\n+    }\n }\n #else\n void"}]}