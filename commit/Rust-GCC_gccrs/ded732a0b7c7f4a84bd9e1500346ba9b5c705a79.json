{"sha": "ded732a0b7c7f4a84bd9e1500346ba9b5c705a79", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGVkNzMyYTBiN2M3ZjRhODRiZDllMTUwMDM0NmJhOWI1YzcwNWE3OQ==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "1996-09-30T21:19:11Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "1996-09-30T21:19:11Z"}, "message": "Redefine exception in math.h\n\nFrom-SVN: r12881", "tree": {"sha": "629a8978cae9ef511867d6849a691dc1fdc3d6df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/629a8978cae9ef511867d6849a691dc1fdc3d6df"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ded732a0b7c7f4a84bd9e1500346ba9b5c705a79", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ded732a0b7c7f4a84bd9e1500346ba9b5c705a79", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ded732a0b7c7f4a84bd9e1500346ba9b5c705a79", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ded732a0b7c7f4a84bd9e1500346ba9b5c705a79/comments", "author": null, "committer": null, "parents": [{"sha": "6cb2e74e2e477603388f02e638d9325b07bc2214", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6cb2e74e2e477603388f02e638d9325b07bc2214", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6cb2e74e2e477603388f02e638d9325b07bc2214"}], "stats": {"total": 46, "additions": 45, "deletions": 1}, "files": [{"sha": "a687766ee2272f1d68a4bc949bc4ba651953d115", "filename": "gcc/fixincludes", "status": "modified", "additions": 45, "deletions": 1, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ded732a0b7c7f4a84bd9e1500346ba9b5c705a79/gcc%2Ffixincludes", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ded732a0b7c7f4a84bd9e1500346ba9b5c705a79/gcc%2Ffixincludes", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixincludes?ref=ded732a0b7c7f4a84bd9e1500346ba9b5c705a79", "patch": "@@ -1322,7 +1322,7 @@ if [ -r $file ] && [ ! -r ${LIB}/$file ]; then\n fi\n \n if [ -r ${LIB}/$file ]; then\n-  if grep 'class[(]' ${LIB}/$file >/dev/null; then\n+  if grep '[^a-zA-Z_]class[(]' ${LIB}/$file >/dev/null; then\n     echo Fixing $file\n     sed -e '/class[(]/i\\\n #ifndef __cplusplus\n@@ -2705,6 +2705,50 @@ if [ -r ${LIB}/$file ]; then\n   fi\n fi\n \n+# Some math.h files define struct exception, which conflicts with\n+# the class exception defined in the C++ file std/stdexcept.h.  We\n+# redefine it to __math_exception.  This is not a great fix, but I\n+# haven't been able to think of anything better.\n+file=math.h\n+if [ -r $file ] && [ ! -r ${LIB}/$file ]; then\n+  cp $file ${LIB}/$file >/dev/null 2>&1 || echo \"Can't copy $file\"\n+  chmod +w ${LIB}/$file 2>/dev/null\n+  chmod a+r ${LIB}/$file 2>/dev/null\n+fi\n+\n+if [ -r ${LIB}/$file ]; then\n+  echo Fixing $file, exception\n+  sed -e '/struct exception/i\\\n+#ifdef __cplusplus\\\n+#define exception __math_exception\\\n+#endif'\\\n+      -e '/struct exception/a\\\n+#ifdef __cplusplus\\\n+#undef exception\\\n+#endif' ${LIB}/$file > ${LIB}/${file}.sed\n+  rm -f ${LIB}/$file; mv ${LIB}/${file}.sed ${LIB}/$file\n+  if egrep 'matherr()' ${LIB}/$file >/dev/null 2>&1; then\n+    sed -e '/matherr/i\\\n+#ifdef __cplusplus\\\n+#define exception __math_exception\\\n+#endif'\\\n+        -e '/matherr/a\\\n+#ifdef __cplusplus\\\n+#undef exception\\\n+#endif' ${LIB}/$file > ${LIB}/${file}.sed\n+    rm -f ${LIB}/$file; mv ${LIB}/${file}.sed ${LIB}/$file\n+  fi\n+  if cmp $file ${LIB}/$file >/dev/null 2>&1; then\n+    rm -f ${LIB}/$file\n+  else\n+    # Find any include directives that use \"file\".\n+    for include in `egrep '^[       ]*#[    ]*include[      ]*\"[^/]' ${LIB}/$file | sed -e 's/^[    ]*#[    ]*include[      ]*\"\\([^\"]*\\)\".*$/\\1/'`; do\n+      dir=`echo $file | sed -e s'|/[^/]*$||'`\n+      required=\"$required ${INPUT} $dir/$include ${LIB}/$dir/$include\"\n+    done\n+  fi\n+fi\n+\n # This loop does not appear to do anything, because it uses file\n # rather than $file when setting target.  It also appears to be\n # unnecessary, since the main loop processes symbolic links."}]}