{"sha": "aa4ec2cdff98cdeec085fa14af4267a51e4e1052", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWE0ZWMyY2RmZjk4Y2RlZWMwODVmYTE0YWY0MjY3YTUxZTRlMTA1Mg==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2018-04-17T20:10:49Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2018-04-17T20:10:49Z"}, "message": "gccgo: suppress \"ar rcD\" and \"-zdefs\" on AIX\n    \n    Reviewed-on: https://go-review.googlesource.com/100955\n\nFrom-SVN: r259445", "tree": {"sha": "a5c9195c263f5964ae5d1c203fe7a8922d435989", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a5c9195c263f5964ae5d1c203fe7a8922d435989"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aa4ec2cdff98cdeec085fa14af4267a51e4e1052", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa4ec2cdff98cdeec085fa14af4267a51e4e1052", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa4ec2cdff98cdeec085fa14af4267a51e4e1052", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa4ec2cdff98cdeec085fa14af4267a51e4e1052/comments", "author": null, "committer": null, "parents": [{"sha": "1a013c9442553813a6a8f76de9360edc028639fe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a013c9442553813a6a8f76de9360edc028639fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a013c9442553813a6a8f76de9360edc028639fe"}], "stats": {"total": 15, "additions": 9, "deletions": 6}, "files": [{"sha": "f85a667141699f3d2710712ff53566b63b5ef5d8", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa4ec2cdff98cdeec085fa14af4267a51e4e1052/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa4ec2cdff98cdeec085fa14af4267a51e4e1052/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=aa4ec2cdff98cdeec085fa14af4267a51e4e1052", "patch": "@@ -1,4 +1,4 @@\n-3aa5fc91094c5f24b26747ec176ad44cde784fc7\n+2c7093358e5f5ebeb102d44d1036ca0a807d46a5\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "1ab7e4ef78abca047fe856bdfac19518e5252b27", "filename": "libgo/go/cmd/go/internal/work/gccgo.go", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa4ec2cdff98cdeec085fa14af4267a51e4e1052/libgo%2Fgo%2Fcmd%2Fgo%2Finternal%2Fwork%2Fgccgo.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa4ec2cdff98cdeec085fa14af4267a51e4e1052/libgo%2Fgo%2Fcmd%2Fgo%2Finternal%2Fwork%2Fgccgo.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcmd%2Fgo%2Finternal%2Fwork%2Fgccgo.go?ref=aa4ec2cdff98cdeec085fa14af4267a51e4e1052", "patch": "@@ -190,15 +190,15 @@ func (gccgoToolchain) pack(b *Builder, a *Action, afile string, ofiles []string)\n \t}\n \tabsAfile := mkAbs(objdir, afile)\n \t// Try with D modifier first, then without if that fails.\n-\tif b.run(a, p.Dir, p.ImportPath, nil, \"ar\", \"rcD\", absAfile, absOfiles) != nil {\n+\tif cfg.Goos == \"aix\" || b.run(a, p.Dir, p.ImportPath, nil, \"ar\", \"rcD\", absAfile, absOfiles) != nil {\n+\t\tvar arArgs []string\n \t\tif cfg.Goos == \"aix\" && cfg.Goarch == \"ppc64\" {\n \t\t\t// AIX puts both 32-bit and 64-bit objects in the same archive.\n \t\t\t// Tell the AIX \"ar\" command to only care about 64-bit objects.\n \t\t\t// AIX \"ar\" command does not know D option.\n-\t\t\treturn b.run(a, p.Dir, p.ImportPath, nil, \"ar\", \"-X64\", \"rc\", absAfile, absOfiles)\n-\t\t} else {\n-\t\t\treturn b.run(a, p.Dir, p.ImportPath, nil, \"ar\", \"rc\", absAfile, absOfiles)\n+\t\t\tarArgs = append(arArgs, \"-X64\")\n \t\t}\n+\t\treturn b.run(a, p.Dir, p.ImportPath, nil, \"ar\", \"rc\", arArgs, absAfile, absOfiles)\n \t}\n \treturn nil\n }\n@@ -466,7 +466,10 @@ func (tools gccgoToolchain) link(b *Builder, root *Action, out, importcfg string\n \t\tldflags = append(ldflags, goLibBegin...)\n \t\tldflags = append(ldflags, \"-lgo\", \"-lgcc_s\", \"-lgcc\", \"-lc\", \"-lgcc\")\n \tcase \"shared\":\n-\t\tldflags = append(ldflags, \"-zdefs\", \"-shared\", \"-nostdlib\", \"-lgo\", \"-lgcc_s\", \"-lgcc\", \"-lc\")\n+\t\tif cfg.Goos != \"aix\" {\n+\t\t\tldflags = append(ldflags, \"-zdefs\")\n+\t\t}\n+\t\tldflags = append(ldflags, \"-shared\", \"-nostdlib\", \"-lgo\", \"-lgcc_s\", \"-lgcc\", \"-lc\")\n \n \tcase \"pie\":\n \t\tldflags = append(ldflags, \"-pie\")"}]}