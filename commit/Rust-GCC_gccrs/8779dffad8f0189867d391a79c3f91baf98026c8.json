{"sha": "8779dffad8f0189867d391a79c3f91baf98026c8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODc3OWRmZmFkOGYwMTg5ODY3ZDM5MWE3OWMzZjkxYmFmOTgwMjZjOA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-10-08T10:45:13Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-10-08T10:45:13Z"}, "message": "[multiple changes]\n\n2010-10-08  Thomas Quinot  <quinot@adacore.com>\n\n\t* xsnames.adb: Remove obsolete file.\n\t* make.adb, sem_ch8.adb, einfo.ads: Minor reformatting.\n\n2010-10-08  Ed Schonberg  <schonberg@adacore.com>\n\n\t* exp_aggr.adb: Complete previous change.\n\n2010-10-08  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch6.adb (Check_Return_Subtype): The subtype indication in an\n\textended return must match statically the return subtype of the\n\tenclosing function if the type is an elementary type or if it is\n\tconstrained.\n\n2010-10-08  Vincent Celier  <celier@adacore.com>\n\n\t* prj-nmsc.adb (Add_Source): Report all duplicate units and source file\n\tnames.  Do not report the same duplicate unit several times.\n\t* prj.ads (Source_Data): New Boolean component Duplicate_Unit,\n\tdefaulted to False, to avoid reporting the same unit as duplicate\n\tseveral times.\n\nFrom-SVN: r165160", "tree": {"sha": "25ce9c2d6b982544eebe051cf9cd89a71030d8ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/25ce9c2d6b982544eebe051cf9cd89a71030d8ba"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8779dffad8f0189867d391a79c3f91baf98026c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8779dffad8f0189867d391a79c3f91baf98026c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8779dffad8f0189867d391a79c3f91baf98026c8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8779dffad8f0189867d391a79c3f91baf98026c8/comments", "author": null, "committer": null, "parents": [{"sha": "094cefda513d464a72d77a6e892fc3c721d67dd6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/094cefda513d464a72d77a6e892fc3c721d67dd6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/094cefda513d464a72d77a6e892fc3c721d67dd6"}], "stats": {"total": 300, "additions": 47, "deletions": 253}, "files": [{"sha": "b35cf85b94fc31ee4f68e2618dac0d132bc119da", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8779dffad8f0189867d391a79c3f91baf98026c8/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8779dffad8f0189867d391a79c3f91baf98026c8/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=8779dffad8f0189867d391a79c3f91baf98026c8", "patch": "@@ -1,3 +1,27 @@\n+2010-10-08  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* xsnames.adb: Remove obsolete file.\n+\t* make.adb, sem_ch8.adb, einfo.ads: Minor reformatting.\n+\n+2010-10-08  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* exp_aggr.adb: Complete previous change.\n+\n+2010-10-08  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch6.adb (Check_Return_Subtype): The subtype indication in an\n+\textended return must match statically the return subtype of the\n+\tenclosing function if the type is an elementary type or if it is\n+\tconstrained.\n+\n+2010-10-08  Vincent Celier  <celier@adacore.com>\n+\n+\t* prj-nmsc.adb (Add_Source): Report all duplicate units and source file\n+\tnames.  Do not report the same duplicate unit several times.\n+\t* prj.ads (Source_Data): New Boolean component Duplicate_Unit,\n+\tdefaulted to False, to avoid reporting the same unit as duplicate\n+\tseveral times.\n+\n 2010-10-08  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem_aggr.adb (Resolve_Array_Aggregate): If the expression in an"}, {"sha": "5611278e6d720f77ede8c455d823265af4565252", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8779dffad8f0189867d391a79c3f91baf98026c8/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8779dffad8f0189867d391a79c3f91baf98026c8/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=8779dffad8f0189867d391a79c3f91baf98026c8", "patch": "@@ -6863,7 +6863,7 @@ package Einfo is\n    --  Empty is returned.\n \n    function Get_Record_Representation_Clause (E : Entity_Id) return Node_Id;\n-   --  Searches the Rep_Item chain for a given entyt E, for a record\n+   --  Searches the Rep_Item chain for a given entity E, for a record\n    --  representation clause, and if found, returns it. Returns Empty\n    --  if no such clause is found.\n "}, {"sha": "e60f21644ee2d80203522f04a541fa999947c9cc", "filename": "gcc/ada/exp_aggr.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8779dffad8f0189867d391a79c3f91baf98026c8/gcc%2Fada%2Fexp_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8779dffad8f0189867d391a79c3f91baf98026c8/gcc%2Fada%2Fexp_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_aggr.adb?ref=8779dffad8f0189867d391a79c3f91baf98026c8", "patch": "@@ -5599,7 +5599,9 @@ package body Exp_Aggr is\n       --  aggregates for C++ imported types must be expanded.\n \n       if Ada_Version >= Ada_05 and then Is_Inherently_Limited_Type (Typ) then\n-         if Nkind (Parent (N)) /= N_Object_Declaration then\n+         if not Nkind_In (Parent (N), N_Object_Declaration,\n+                                      N_Component_Association)\n+         then\n             Convert_To_Assignments (N, Typ);\n \n          elsif Nkind (N) = N_Extension_Aggregate"}, {"sha": "8774ba723b09dcbe4f467a08d4948a907fd8c333", "filename": "gcc/ada/make.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8779dffad8f0189867d391a79c3f91baf98026c8/gcc%2Fada%2Fmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8779dffad8f0189867d391a79c3f91baf98026c8/gcc%2Fada%2Fmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.adb?ref=8779dffad8f0189867d391a79c3f91baf98026c8", "patch": "@@ -1916,8 +1916,7 @@ package body Make is\n                if ALI_Project = No_Project then\n                   ALI := No_ALI_Id;\n \n-                  Verbose_Msg\n-                    (Lib_File, \" wrong object directory\");\n+                  Verbose_Msg (Lib_File, \" wrong object directory\");\n                   return;\n                end if;\n "}, {"sha": "a8af37fa183cb6cc6047c95ba8ef0e6690233a70", "filename": "gcc/ada/prj-nmsc.adb", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8779dffad8f0189867d391a79c3f91baf98026c8/gcc%2Fada%2Fprj-nmsc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8779dffad8f0189867d391a79c3f91baf98026c8/gcc%2Fada%2Fprj-nmsc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-nmsc.adb?ref=8779dffad8f0189867d391a79c3f91baf98026c8", "patch": "@@ -705,9 +705,13 @@ package body Prj.Nmsc is\n                --  (for instance because of symbolic links).\n \n                elsif Source.Path.Name /= Path.Name then\n-                  Error_Msg_Name_1 := Unit;\n-                  Error_Msg\n-                    (Data.Flags, \"duplicate unit %%\", Location, Project);\n+                  if not Source.Duplicate_Unit then\n+                     Error_Msg_Name_1 := Unit;\n+                     Error_Msg\n+                       (Data.Flags, \"\\duplicate unit %%\", Location, Project);\n+                     Source.Duplicate_Unit := True;\n+                  end if;\n+\n                   Add_Src := False;\n                end if;\n             end if;"}, {"sha": "84c825ff66182ed8787c98992a004f1f61dacd5b", "filename": "gcc/ada/prj.ads", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8779dffad8f0189867d391a79c3f91baf98026c8/gcc%2Fada%2Fprj.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8779dffad8f0189867d391a79c3f91baf98026c8/gcc%2Fada%2Fprj.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.ads?ref=8779dffad8f0189867d391a79c3f91baf98026c8", "patch": "@@ -765,6 +765,9 @@ package Prj is\n       Naming_Exception : Boolean := False;\n       --  True if the source has an exceptional name\n \n+      Duplicate_Unit : Boolean := False;\n+      --  True when a duplicate unit has been reported for this source\n+\n       Next_In_Lang : Source_Id := No_Source;\n       --  Link to another source of the same language in the same project\n    end record;\n@@ -799,6 +802,7 @@ package Prj is\n                        Switches_Path          => No_Path,\n                        Switches_TS            => Empty_Time_Stamp,\n                        Naming_Exception       => False,\n+                       Duplicate_Unit         => False,\n                        Next_In_Lang           => No_Source);\n \n    package Source_Paths_Htable is new Simple_HTable"}, {"sha": "e74aaf738e6d206fc5c5f43bae5331cee17e11e9", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8779dffad8f0189867d391a79c3f91baf98026c8/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8779dffad8f0189867d391a79c3f91baf98026c8/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=8779dffad8f0189867d391a79c3f91baf98026c8", "patch": "@@ -620,7 +620,12 @@ package body Sem_Ch6 is\n                   Subtype_Ind);\n             end if;\n \n-            if Is_Constrained (R_Type) then\n+            --  AI05-103 : for elementary types, subtypes must statically\n+            --  match.\n+\n+            if Is_Constrained (R_Type)\n+              or else Is_Access_Type (R_Type)\n+            then\n                if not Subtypes_Statically_Match (R_Stm_Type, R_Type) then\n                   Error_Msg_N\n                     (\"subtype must statically match function result subtype\","}, {"sha": "2e3b22f38e0b9123d3bde9dc9701fcb678b5dc91", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8779dffad8f0189867d391a79c3f91baf98026c8/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8779dffad8f0189867d391a79c3f91baf98026c8/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=8779dffad8f0189867d391a79c3f91baf98026c8", "patch": "@@ -3076,7 +3076,7 @@ package body Sem_Ch8 is\n \n       --  The replacement of a discriminant by the corresponding discriminal\n       --  is not done for a task discriminant that appears in a default\n-      --  expression of an entry parameter. See Expand_Discriminant in exp_ch2\n+      --  expression of an entry parameter. See Exp_Ch2.Expand_Discriminant\n       --  for details on their handling.\n \n       elsif Is_Concurrent_Type (Scope (E)) then"}, {"sha": "d43631a258e3aaeeeaa1c47b0b8c0c63e194529c", "filename": "gcc/ada/xsnames.adb", "status": "removed", "additions": 0, "deletions": 244, "changes": 244, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/094cefda513d464a72d77a6e892fc3c721d67dd6/gcc%2Fada%2Fxsnames.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/094cefda513d464a72d77a6e892fc3c721d67dd6/gcc%2Fada%2Fxsnames.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fxsnames.adb?ref=094cefda513d464a72d77a6e892fc3c721d67dd6", "patch": "@@ -1,244 +0,0 @@\n-------------------------------------------------------------------------------\n---                                                                          --\n---                          GNAT SYSTEM UTILITIES                           --\n---                                                                          --\n---                              X S N A M E S                               --\n---                                                                          --\n---                                 B o d y                                  --\n---                                                                          --\n---          Copyright (C) 1992-2008, Free Software Foundation, Inc.         --\n---                                                                          --\n--- GNAT is free software;  you can  redistribute it  and/or modify it under --\n--- terms of the  GNU General Public License as published  by the Free Soft- --\n--- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n--- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n--- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n--- for  more details.  You should have  received  a copy of the GNU General --\n--- Public License  distributed with GNAT; see file COPYING3.  If not, go to --\n--- http://www.gnu.org/licenses for a complete copy of the license.          --\n---                                                                          --\n--- GNAT was originally developed  by the GNAT team at  New York University. --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n---                                                                          --\n-------------------------------------------------------------------------------\n-\n---  This utility is used to make a new version of the Snames package when new\n---  names are added to the spec, the existing versions of snames.ads and\n---  snames.adb and snames.h are read, and updated to match the set of names in\n---  snames.ads. The updated versions are written to snames.ns, snames.nb (new\n---  spec/body), and snames.nh (new header file).\n-\n-with Ada.Strings.Unbounded;         use Ada.Strings.Unbounded;\n-with Ada.Strings.Unbounded.Text_IO; use Ada.Strings.Unbounded.Text_IO;\n-with Ada.Strings.Maps;              use Ada.Strings.Maps;\n-with Ada.Strings.Maps.Constants;    use Ada.Strings.Maps.Constants;\n-with Ada.Text_IO;                   use Ada.Text_IO;\n-\n-with GNAT.Spitbol;                  use GNAT.Spitbol;\n-with GNAT.Spitbol.Patterns;         use GNAT.Spitbol.Patterns;\n-\n-procedure XSnames is\n-\n-   InB  : File_Type;\n-   InS  : File_Type;\n-   OutS : File_Type;\n-   OutB : File_Type;\n-   InH  : File_Type;\n-   OutH : File_Type;\n-\n-   A, B  : VString := Nul;\n-   Line  : VString := Nul;\n-   Name  : VString := Nul;\n-   Name1 : VString := Nul;\n-   Oval  : VString := Nul;\n-   Restl : VString := Nul;\n-\n-   Tdigs : constant Pattern := Any (Decimal_Digit_Set) &\n-                               Any (Decimal_Digit_Set) &\n-                               Any (Decimal_Digit_Set);\n-\n-   Name_Ref : constant Pattern := Span (' ') * A & Break (' ') * Name\n-                                  & Span (' ') * B\n-                                  & \": constant Name_Id := N + \" & Tdigs\n-                                  & ';' & Rest * Restl;\n-\n-   Get_Name : constant Pattern := \"Name_\" & Rest * Name1;\n-   Chk_Low  : constant Pattern := Pos (0) & Any (Lower_Set) & Rest & Pos (1);\n-   Findu    : constant Pattern := Span ('u') * A;\n-\n-   Val : Natural;\n-\n-   Xlate_U_Und : constant Character_Mapping := To_Mapping (\"u\", \"_\");\n-\n-   M : Match_Result;\n-\n-   type Header_Symbol is (None, Attr, Conv, Prag);\n-   --  A symbol in the header file\n-\n-   procedure Output_Header_Line (S : Header_Symbol);\n-   --  Output header line\n-\n-   Header_Attr : aliased String := \"Attr\";\n-   Header_Conv : aliased String := \"Convention\";\n-   Header_Prag : aliased String := \"Pragma\";\n-   --  Prefixes used in the header file\n-\n-   type String_Ptr is access all String;\n-   Header_Prefix : constant array (Header_Symbol) of String_Ptr :=\n-                     (null,\n-                      Header_Attr'Access,\n-                      Header_Conv'Access,\n-                      Header_Prag'Access);\n-\n-   --  Patterns used in the spec file\n-\n-   Get_Attr : constant Pattern := Span (' ') & \"Attribute_\"\n-                                  & Break (\",)\") * Name1;\n-   Get_Conv : constant Pattern := Span (' ') & \"Convention_\"\n-                                  & Break (\",)\") * Name1;\n-   Get_Prag : constant Pattern := Span (' ') & \"Pragma_\"\n-                                  & Break (\",)\") * Name1;\n-\n-   type Header_Symbol_Counter is array (Header_Symbol) of Natural;\n-   Header_Counter : Header_Symbol_Counter := (0, 0, 0, 0);\n-\n-   Header_Current_Symbol : Header_Symbol := None;\n-   Header_Pending_Line : VString := Nul;\n-\n-   ------------------------\n-   -- Output_Header_Line --\n-   ------------------------\n-\n-   procedure Output_Header_Line (S : Header_Symbol) is\n-   begin\n-      --  Skip all the #define for S-prefixed symbols in the header.\n-      --  Of course we are making implicit assumptions:\n-      --   (1) No newline between symbols with the same prefix.\n-      --   (2) Prefix order is the same as in snames.ads.\n-\n-      if Header_Current_Symbol /= S then\n-         declare\n-            Pat : constant String := \"#define  \" & Header_Prefix (S).all;\n-            In_Pat : Boolean := False;\n-\n-         begin\n-            if Header_Current_Symbol /= None then\n-               Put_Line (OutH, Header_Pending_Line);\n-            end if;\n-\n-            loop\n-               Line := Get_Line (InH);\n-\n-               if Match (Line, Pat) then\n-                  In_Pat := True;\n-               elsif In_Pat then\n-                  Header_Pending_Line := Line;\n-                  exit;\n-               else\n-                  Put_Line (OutH, Line);\n-               end if;\n-            end loop;\n-\n-            Header_Current_Symbol := S;\n-         end;\n-      end if;\n-\n-      --  Now output the line\n-\n-      Put_Line (OutH, \"#define  \" & Header_Prefix (S).all\n-                  & \"_\" & Name1 & (30 - Length (Name1)) * ' '\n-                  & Header_Counter (S));\n-      Header_Counter (S) := Header_Counter (S) + 1;\n-   end Output_Header_Line;\n-\n---  Start of processing for XSnames\n-\n-begin\n-   Open (InB, In_File, \"snames.adb\");\n-   Open (InS, In_File, \"snames.ads\");\n-   Open (InH, In_File, \"snames.h\");\n-\n-   Create (OutS, Out_File, \"snames.ns\");\n-   Create (OutB, Out_File, \"snames.nb\");\n-   Create (OutH, Out_File, \"snames.nh\");\n-\n-   Anchored_Mode := True;\n-   Val := 0;\n-\n-   loop\n-      Line := Get_Line (InB);\n-      exit when Match (Line, \"   Preset_Names\");\n-      Put_Line (OutB, Line);\n-   end loop;\n-\n-   Put_Line (OutB, Line);\n-\n-   LoopN : while not End_Of_File (InS) loop\n-      Line := Get_Line (InS);\n-\n-      if not Match (Line, Name_Ref) then\n-         Put_Line (OutS, Line);\n-\n-         if Match (Line, Get_Attr) then\n-            Output_Header_Line (Attr);\n-         elsif Match (Line, Get_Conv) then\n-            Output_Header_Line (Conv);\n-         elsif Match (Line, Get_Prag) then\n-            Output_Header_Line (Prag);\n-         end if;\n-      else\n-         Oval := Lpad (V (Val), 3, '0');\n-\n-         if Match (Name, \"Last_\") then\n-            Oval := Lpad (V (Val - 1), 3, '0');\n-         end if;\n-\n-         Put_Line\n-           (OutS, A & Name & B & \": constant Name_Id := N + \"\n-            & Oval & ';' & Restl);\n-\n-         if Match (Name, Get_Name) then\n-            Name := Name1;\n-            Val := Val + 1;\n-\n-            if Match (Name, Findu, M) then\n-               Replace (M, Translate (A, Xlate_U_Und));\n-               Translate (Name, Lower_Case_Map);\n-\n-            elsif not Match (Name, \"Op_\", \"\") then\n-               Translate (Name, Lower_Case_Map);\n-\n-            else\n-               Name := 'O' & Translate (Name, Lower_Case_Map);\n-            end if;\n-\n-            if Name = \"error\" then\n-               Name := V (\"<error>\");\n-            end if;\n-\n-            if not Match (Name, Chk_Low) then\n-               Put_Line (OutB, \"     \"\"\" & Name & \"#\"\" &\");\n-            end if;\n-         end if;\n-      end if;\n-   end loop LoopN;\n-\n-   loop\n-      Line := Get_Line (InB);\n-      exit when Match (Line, \"     \"\"#\"\";\");\n-   end loop;\n-\n-   Put_Line (OutB, Line);\n-\n-   while not End_Of_File (InB) loop\n-      Line := Get_Line (InB);\n-      Put_Line (OutB, Line);\n-   end loop;\n-\n-   Put_Line (OutH, Header_Pending_Line);\n-   while not End_Of_File (InH) loop\n-      Line := Get_Line (InH);\n-      Put_Line (OutH, Line);\n-   end loop;\n-end XSnames;"}]}