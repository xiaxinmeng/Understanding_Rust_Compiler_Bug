{"sha": "417b30235b1bd5a8af13a21741f7845d4dff3029", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDE3YjMwMjM1YjFiZDVhOGFmMTNhMjE3NDFmNzg0NWQ0ZGZmMzAyOQ==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@redhat.com", "date": "2009-09-17T20:29:56Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2009-09-17T20:29:56Z"}, "message": "dwarf2out.c (loc_descriptor): Emit DW_OP_stack_value and DW_OP_implicit_value even without dwarf_version 4.\n\n\t* dwarf2out.c (loc_descriptor): Emit DW_OP_stack_value and\n\tDW_OP_implicit_value even without dwarf_version 4.\n\nFrom-SVN: r151815", "tree": {"sha": "719894ec4613cc62f0842198d22602365ed38b10", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/719894ec4613cc62f0842198d22602365ed38b10"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/417b30235b1bd5a8af13a21741f7845d4dff3029", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/417b30235b1bd5a8af13a21741f7845d4dff3029", "html_url": "https://github.com/Rust-GCC/gccrs/commit/417b30235b1bd5a8af13a21741f7845d4dff3029", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/417b30235b1bd5a8af13a21741f7845d4dff3029/comments", "author": null, "committer": null, "parents": [{"sha": "e7f373fa6952ad2c1bc8980dc29f584127ee0171", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7f373fa6952ad2c1bc8980dc29f584127ee0171", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e7f373fa6952ad2c1bc8980dc29f584127ee0171"}], "stats": {"total": 17, "additions": 10, "deletions": 7}, "files": [{"sha": "590c809aee9744cef8f06033ce8912fd8ed43381", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/417b30235b1bd5a8af13a21741f7845d4dff3029/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/417b30235b1bd5a8af13a21741f7845d4dff3029/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=417b30235b1bd5a8af13a21741f7845d4dff3029", "patch": "@@ -1,3 +1,8 @@\n+2009-09-17  Alexandre Oliva  <aoliva@redhat.com>\n+\n+\t* dwarf2out.c (loc_descriptor): Emit DW_OP_stack_value and\n+\tDW_OP_implicit_value even without dwarf_version 4.\n+\n 2009-09-17  Jan Hubicka  <jh@suse.cz>\n \n \t* dwarf2out.c: Include tree-pass.h and gimple.h."}, {"sha": "d2d2fefd153d32a19ecb580c57289d9e20bfbcbd", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/417b30235b1bd5a8af13a21741f7845d4dff3029/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/417b30235b1bd5a8af13a21741f7845d4dff3029/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=417b30235b1bd5a8af13a21741f7845d4dff3029", "patch": "@@ -11777,7 +11777,7 @@ loc_descriptor (rtx rtl, enum machine_mode mode,\n       break;\n \n     case CONST_INT:\n-      if (mode != VOIDmode && mode != BLKmode && dwarf_version >= 4)\n+      if (mode != VOIDmode && mode != BLKmode)\n         {\n           HOST_WIDE_INT i = INTVAL (rtl);\n           int litsize;\n@@ -11831,7 +11831,7 @@ loc_descriptor (rtx rtl, enum machine_mode mode,\n       break;\n \n     case CONST_DOUBLE:\n-      if (mode != VOIDmode && dwarf_version >= 4)\n+      if (mode != VOIDmode)\n \t{\n \t  /* Note that a CONST_DOUBLE rtx could represent either an integer\n \t     or a floating-point constant.  A CONST_DOUBLE is used whenever\n@@ -11862,7 +11862,7 @@ loc_descriptor (rtx rtl, enum machine_mode mode,\n       break;\n \n     case CONST_VECTOR:\n-      if (mode != VOIDmode && dwarf_version >= 4)\n+      if (mode != VOIDmode)\n \t{\n \t  unsigned int elt_size = GET_MODE_UNIT_SIZE (GET_MODE (rtl));\n \t  unsigned int length = CONST_VECTOR_NUNITS (rtl);\n@@ -11950,8 +11950,7 @@ loc_descriptor (rtx rtl, enum machine_mode mode,\n \t  && SYMBOL_REF_TLS_MODEL (rtl) != TLS_MODEL_NONE)\n \tbreak;\n     case LABEL_REF:\n-      if (mode != VOIDmode && GET_MODE_SIZE (mode) == DWARF2_ADDR_SIZE\n-\t  && dwarf_version >= 4)\n+      if (mode != VOIDmode && GET_MODE_SIZE (mode) == DWARF2_ADDR_SIZE)\n \t{\n \t  loc_result = new_loc_descr (DW_OP_implicit_value,\n \t\t\t\t      DWARF2_ADDR_SIZE, 0);\n@@ -11963,8 +11962,7 @@ loc_descriptor (rtx rtl, enum machine_mode mode,\n \n     default:\n       if (GET_MODE_CLASS (mode) == MODE_INT && GET_MODE (rtl) == mode\n-\t  && GET_MODE_SIZE (GET_MODE (rtl)) <= DWARF2_ADDR_SIZE\n-\t  && dwarf_version >= 4)\n+\t  && GET_MODE_SIZE (GET_MODE (rtl)) <= DWARF2_ADDR_SIZE)\n \t{\n \t  /* Value expression.  */\n \t  loc_result = mem_loc_descriptor (rtl, VOIDmode, initialized);"}]}