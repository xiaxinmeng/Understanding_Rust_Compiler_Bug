{"sha": "347b9c46e1653b9bdad22a394005b2c74abae764", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzQ3YjljNDZlMTY1M2I5YmRhZDIyYTM5NDAwNWIyYzc0YWJhZTc2NA==", "commit": {"author": {"name": "Eric Christopher", "email": "echristo@gcc.gnu.org", "date": "2006-06-03T00:52:54Z"}, "committer": {"name": "Eric Christopher", "email": "echristo@gcc.gnu.org", "date": "2006-06-03T00:52:54Z"}, "message": "20000804-1.c: Skip if i?86-darwin.\n\n2006-06-02  Eric Christopher  <echristo@apple.com>\n\n        * gcc.c-torture/compile/20000804-1.c: Skip if i?86-darwin.\n        * gcc.target/i386/20020523-1.c: Skip if darwin.\n        * gcc.target/i386/asm-3.c: Ditto.\n        * gcc.target/i386/20011119-1.c: Ditto.\n        * gcc.target/i386/clobbers.c: Remove pic part of test.\n\nFrom-SVN: r114338", "tree": {"sha": "1f230f1ac675ccca54b4e57b1c78f2a172be5b0a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1f230f1ac675ccca54b4e57b1c78f2a172be5b0a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/347b9c46e1653b9bdad22a394005b2c74abae764", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/347b9c46e1653b9bdad22a394005b2c74abae764", "html_url": "https://github.com/Rust-GCC/gccrs/commit/347b9c46e1653b9bdad22a394005b2c74abae764", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/347b9c46e1653b9bdad22a394005b2c74abae764/comments", "author": null, "committer": null, "parents": [{"sha": "428659d2f7327875bbbc653e5ea073b14ed0d372", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/428659d2f7327875bbbc653e5ea073b14ed0d372", "html_url": "https://github.com/Rust-GCC/gccrs/commit/428659d2f7327875bbbc653e5ea073b14ed0d372"}], "stats": {"total": 25, "additions": 21, "deletions": 4}, "files": [{"sha": "da82da671eb37a2a90e1df99094b085ce3de740d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/347b9c46e1653b9bdad22a394005b2c74abae764/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/347b9c46e1653b9bdad22a394005b2c74abae764/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=347b9c46e1653b9bdad22a394005b2c74abae764", "patch": "@@ -1,3 +1,11 @@\n+2006-06-02  Eric Christopher  <echristo@apple.com>\n+\n+\t* gcc.c-torture/compile/20000804-1.c: Skip if i?86-darwin.\n+\t* gcc.target/i386/20020523-1.c: Skip if darwin.\n+\t* gcc.target/i386/asm-3.c: Ditto.\n+\t* gcc.target/i386/20011119-1.c: Ditto.\n+\t* gcc.target/i386/clobbers.c: Remove pic part of test.\n+\n 2006-06-02  Steve Ellcey  <sje@cup.hp.com>\n \n \t* g++.old-deja/g++.other/init5.C: XFAIL if cxa-atexit is false.\n@@ -6,7 +14,7 @@\n \tand add other platforms as expected failures.\n \n 2006-06-01  Steve Ellcey  <sje@cup.hp.com>\n-\t\n+\n \t* lib/target-supports.exp (is-effective-target): Add cxa_atexit.\n \t(is-effective-target-keyword): Ditto.\n \n@@ -66,7 +74,7 @@\n 2006-05-30  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/27803\n-\t* g++.dg/parse/bitfield1.C: New test. \n+\t* g++.dg/parse/bitfield1.C: New test.\n \n 2006-05-30  Roger Sayle  <roger@eyesopen.com>\n \n@@ -186,7 +194,7 @@\n \tPR c++/20103\n \t* g++.dg/ext/complit6.C: New test.\n \t* g++.dg/ext/complit3.C: Adjust error markers.\n-\t* g++.dg/init/const3.C: New test. \t\n+\t* g++.dg/init/const3.C: New test.\n \n 2006-05-25  Richard Guenther  <rguenther@suse.de>\n "}, {"sha": "842a532658efac9da221d9d13f79c5e45b3e2e84", "filename": "gcc/testsuite/gcc.c-torture/compile/20000804-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/347b9c46e1653b9bdad22a394005b2c74abae764/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20000804-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/347b9c46e1653b9bdad22a394005b2c74abae764/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20000804-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20000804-1.c?ref=347b9c46e1653b9bdad22a394005b2c74abae764", "patch": "@@ -2,6 +2,7 @@\n    statement to force a 'long long' (64-bits) to go in a register.  */\n /* { dg-do assemble { xfail m6811-*-* m6812-*-* h8300-*-* } } */\n /* { dg-skip-if \"\" { { i?86-*-* x86_64-*-* } && ilp32 } { \"-fpic\" \"-fPIC\" } { \"\" } } */\n+/* { dg-skip-if \"PIC default\" { i?86-*-darwin* } { \"*\" } { \"\" } } */\n /* { dg-skip-if \"No 64-bit registers\" { m32c-*-* } { \"*\" } { \"\" } } */\n \n /* Copyright (C) 2000, 2003 Free Software Foundation */"}, {"sha": "4a338570dda70c8bb5232dba67903659a9d1c333", "filename": "gcc/testsuite/gcc.target/i386/20011119-1.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/347b9c46e1653b9bdad22a394005b2c74abae764/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F20011119-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/347b9c46e1653b9bdad22a394005b2c74abae764/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F20011119-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F20011119-1.c?ref=347b9c46e1653b9bdad22a394005b2c74abae764", "patch": "@@ -2,6 +2,7 @@\n /* { dg-do run { target i?86-*-* x86_64-*-* } } */\n /* { dg-require-effective-target ilp32 } */\n /* { dg-skip-if \"\" { \"*-*-*\" } { \"-fpic\" \"-fPIC\" } { \"\" } } */\n+/* { dg-skip-if \"PIC default\" { \"*-*-darwin*\" } { \"*\" } { \"\" } } */\n /* { dg-options \"-O2 -fomit-frame-pointer\" } */\n \n static int ustrsize (const char *s);\n@@ -59,7 +60,7 @@ main()\n   ucwidth = ucwidth_;\n   ugetxc = ugetxc_;\n   usetc = usetc_;\n-  \n+\n   /* ??? It is impossible to explicitly modify the hard frame pointer.\n      This will run afoul of code in flow.c that declines to mark regs\n      in eliminate_regs in regs_ever_used.  Apparently, we have to wait"}, {"sha": "df9e0cbb9ed4940a7a2b9f6e3807d0a61dd541ee", "filename": "gcc/testsuite/gcc.target/i386/20020523-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/347b9c46e1653b9bdad22a394005b2c74abae764/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F20020523-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/347b9c46e1653b9bdad22a394005b2c74abae764/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F20020523-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F20020523-1.c?ref=347b9c46e1653b9bdad22a394005b2c74abae764", "patch": "@@ -3,6 +3,7 @@\n    patterns were missing earlyclobber.  */\n /* { dg-do run { target i?86-*-* x86_64-*-* } } */\n /* { dg-skip-if \"\" { ilp32 } { \"-fpic\" \"-fPIC\" } { \"\" } } */\n+/* { dg-skip-if \"PIC default\" { *-*-darwin* } { \"*\" } { \"\" } } */\n /* { dg-require-effective-target ilp32 } */\n /* { dg-options \"-march=pentium3 -msse -ffast-math -O2\" } */\n "}, {"sha": "fb194e7995b061e15e1fca8061ab72cad57c9dfe", "filename": "gcc/testsuite/gcc.target/i386/asm-3.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/347b9c46e1653b9bdad22a394005b2c74abae764/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fasm-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/347b9c46e1653b9bdad22a394005b2c74abae764/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fasm-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fasm-3.c?ref=347b9c46e1653b9bdad22a394005b2c74abae764", "patch": "@@ -2,6 +2,7 @@\n /* { dg-do run { target i?86-*-* x86_64-*-* } } */\n /* { dg-options \"-O2\" } */\n /* { dg-skip-if \"\" { ilp32 } { \"-fpic\" \"-fPIC\" } { \"\" } } */\n+/* { dg-skip-if \"PIC default\" { *-*-darwin* } { \"*\" } { \"\" } } */\n \n extern void abort (void);\n "}, {"sha": "e0b06032133e4ba0c193b810e2aa51c6c1250044", "filename": "gcc/testsuite/gcc.target/i386/clobbers.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/347b9c46e1653b9bdad22a394005b2c74abae764/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fclobbers.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/347b9c46e1653b9bdad22a394005b2c74abae764/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fclobbers.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fclobbers.c?ref=347b9c46e1653b9bdad22a394005b2c74abae764", "patch": "@@ -11,9 +11,14 @@ int main ()\n         __asm__ (\"movl $1,%0\\n\\txorl %%eax,%%eax\" : \"=r\" (i) : : \"eax\");\n         if (i != 1)\n                 abort ();\n+\t/* On darwin you can't call external functions from non-pic code,\n+\t   however, clobbering ebx isn't valid in pic code. Instead of\n+\t   disabling the whole test, just disable the ebx clobbering part.  */\n+#if !(defined (__MACH__))\n         __asm__ (\"movl $1,%0\\n\\txorl %%ebx,%%ebx\" : \"=r\" (i) : : \"ebx\");\n         if (i != 1)\n                 abort ();\n+#endif\n         __asm__ (\"movl $1,%0\\n\\txorl %%ecx,%%ecx\" : \"=r\" (i) : : \"ecx\");\n         if (i != 1)\n                 abort ();"}]}