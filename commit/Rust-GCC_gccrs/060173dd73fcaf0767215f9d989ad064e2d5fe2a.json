{"sha": "060173dd73fcaf0767215f9d989ad064e2d5fe2a", "node_id": "C_kwDOANBUbNoAKDA2MDE3M2RkNzNmY2FmMDc2NzIxNWY5ZDk4OWFkMDY0ZTJkNWZlMmE", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-05-13T10:07:58Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-05-19T14:25:55Z"}, "message": "Fix OMP CAS expansion with separate condition\n\nWhen forcing the condition to be split out from COND_EXPRs I see\na runtime failure of libgomp.fortran/atomic-19.f90 which can be\nreduced to\n\n  !$omp atomic update, compare, capture\n  if (x == 69_2 - r) x = 6_8\n    v = x\n\nbeing miscompiled, the difference being\n\n-  _13 = .ATOMIC_COMPARE_EXCHANGE (_9, _10, _11, 4, 0, 0);\n-  _14 = IMAGPART_EXPR <_13>;\n-  _15 = REALPART_EXPR <_13>;\n-  _16 = _14 != 0 ? _11 : _15;\n-  _2 = (integer(kind=4)) _16;\n-  v_17 = _2;\n+  _14 = .ATOMIC_COMPARE_EXCHANGE (_10, _11, _12, 4, 0, 0);\n+  _15 = IMAGPART_EXPR <_14>;\n+  _16 = REALPART_EXPR <_14>;\n+  _2 = (logical(kind=1)) _15;\n+  _3 = (integer(kind=4)) _16;\n+  v_17 = _3;\n\nwhere one can see a missing COND_EXPR.  It seems to be a latent\nissue to me given the code can be exercised, it just maybe misses\na 'need_new' testcase combined with 'cond_stmt'.  Appearantly\nthe if (cond_stmt) code is just to avoid creating a temporary\n(and possibly to preserve the condition compute if used elsewhere\nsince the original stmt is going to be deleted).  The following\nmakes the failure go away for me in my patched tree and it\nalso survives libgomp and gomp testing in an unpatched tree.\n\n2022-05-13  Richard Biener  <rguenther@suse.de>\n\n\t* omp-expand.cc (expand_omp_atomic_cas): Do not short-cut\n\tcomputation of the new value.", "tree": {"sha": "6aa51bd15b5f5e04d5f7c65ac65499119665799b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6aa51bd15b5f5e04d5f7c65ac65499119665799b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/060173dd73fcaf0767215f9d989ad064e2d5fe2a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/060173dd73fcaf0767215f9d989ad064e2d5fe2a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/060173dd73fcaf0767215f9d989ad064e2d5fe2a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/060173dd73fcaf0767215f9d989ad064e2d5fe2a/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4fc78e18b5be495aa71b9f87b0677e06a35b93a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4fc78e18b5be495aa71b9f87b0677e06a35b93a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4fc78e18b5be495aa71b9f87b0677e06a35b93a4"}], "stats": {"total": 11, "additions": 6, "deletions": 5}, "files": [{"sha": "9fcc67a3448c6fef95097fd9dc4919bbf510dd6d", "filename": "gcc/omp-expand.cc", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/060173dd73fcaf0767215f9d989ad064e2d5fe2a/gcc%2Fomp-expand.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/060173dd73fcaf0767215f9d989ad064e2d5fe2a/gcc%2Fomp-expand.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomp-expand.cc?ref=060173dd73fcaf0767215f9d989ad064e2d5fe2a", "patch": "@@ -9092,16 +9092,17 @@ expand_omp_atomic_cas (basic_block load_bb, tree addr,\n \n       if (cond_stmt)\n \t{\n-\t  g = gimple_build_assign (gimple_assign_lhs (cond_stmt),\n-\t\t\t\t   NOP_EXPR, im);\n+\t  g = gimple_build_assign (cond, NOP_EXPR, im);\n \t  gimple_set_location (g, loc);\n \t  gsi_insert_before (&gsi, g, GSI_SAME_STMT);\n \t}\n-      else if (need_new)\n+\n+      if (need_new)\n \t{\n \t  g = gimple_build_assign (create_tmp_reg (itype), COND_EXPR,\n-\t\t\t\t   build2 (NE_EXPR, boolean_type_node,\n-\t\t\t\t\t   im, build_zero_cst (itype)),\n+\t\t\t\t   cond_stmt\n+\t\t\t\t   ? cond : build2 (NE_EXPR, boolean_type_node,\n+\t\t\t\t\t\t    im, build_zero_cst (itype)),\n \t\t\t\t   d, re);\n \t  gimple_set_location (g, loc);\n \t  gsi_insert_before (&gsi, g, GSI_SAME_STMT);"}]}