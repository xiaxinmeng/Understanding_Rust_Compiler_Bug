{"sha": "766f989251a87673d80831521fac002e0263f122", "node_id": "C_kwDOANBUbNoAKDc2NmY5ODkyNTFhODc2NzNkODA4MzE1MjFmYWMwMDJlMDI2M2YxMjI", "commit": {"author": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2021-11-16T13:06:33Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2021-11-16T14:03:58Z"}, "message": "Remove useless comments from HIR::MethodCallExpr", "tree": {"sha": "d88b76796f7c0e4ffe2fc5ccf184a69a47585bcf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d88b76796f7c0e4ffe2fc5ccf184a69a47585bcf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/766f989251a87673d80831521fac002e0263f122", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/766f989251a87673d80831521fac002e0263f122", "html_url": "https://github.com/Rust-GCC/gccrs/commit/766f989251a87673d80831521fac002e0263f122", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/766f989251a87673d80831521fac002e0263f122/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dcd758595f646a480947265ccc9833fdd3976b75", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dcd758595f646a480947265ccc9833fdd3976b75", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dcd758595f646a480947265ccc9833fdd3976b75"}], "stats": {"total": 5, "additions": 0, "deletions": 5}, "files": [{"sha": "37ec15d8992c4ca224207da1c8ea6b3033088696", "filename": "gcc/rust/hir/tree/rust-hir-expr.h", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/766f989251a87673d80831521fac002e0263f122/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-expr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/766f989251a87673d80831521fac002e0263f122/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-expr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-expr.h?ref=766f989251a87673d80831521fac002e0263f122", "patch": "@@ -1635,18 +1635,13 @@ class MethodCallExpr : public ExprWithoutBlock\n {\n   std::unique_ptr<Expr> receiver;\n   PathExprSegment method_name;\n-  // inlined form of CallParams\n   std::vector<std::unique_ptr<Expr> > params;\n \n   Location locus;\n \n public:\n   std::string as_string () const override;\n \n-  /*inline std::vector<std::unique_ptr<Expr>> get_params() const {\n-      return params;\n-  }*/\n-\n   MethodCallExpr (Analysis::NodeMapping mappings,\n \t\t  std::unique_ptr<Expr> call_receiver,\n \t\t  PathExprSegment method_path,"}]}