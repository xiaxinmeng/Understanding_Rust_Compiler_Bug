{"sha": "88d37ae679fd5fd498076514d16248ccb5b2b8ae", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODhkMzdhZTY3OWZkNWZkNDk4MDc2NTE0ZDE2MjQ4Y2NiNWIyYjhhZQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2011-03-30T18:07:01Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-03-30T18:07:01Z"}, "message": "call.c (convert_like_real): Build up the initializer_list object directly.\n\n\t* call.c (convert_like_real) [ck_list]: Build up the\n\tinitializer_list object directly.\n\t* decl.c (build_init_list_var_init): Adjust.\n\nFrom-SVN: r171740", "tree": {"sha": "d9f61b06c2f15ce0e6a3351669a277539f4f6fee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d9f61b06c2f15ce0e6a3351669a277539f4f6fee"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/88d37ae679fd5fd498076514d16248ccb5b2b8ae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88d37ae679fd5fd498076514d16248ccb5b2b8ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88d37ae679fd5fd498076514d16248ccb5b2b8ae", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88d37ae679fd5fd498076514d16248ccb5b2b8ae/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c06ce6e40ed1ce4d9835d10e6a7d667fb6b30587", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c06ce6e40ed1ce4d9835d10e6a7d667fb6b30587", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c06ce6e40ed1ce4d9835d10e6a7d667fb6b30587"}], "stats": {"total": 30, "additions": 16, "deletions": 14}, "files": [{"sha": "1b96aa4e460ce9630280a2700248c34dfc614253", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88d37ae679fd5fd498076514d16248ccb5b2b8ae/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88d37ae679fd5fd498076514d16248ccb5b2b8ae/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=88d37ae679fd5fd498076514d16248ccb5b2b8ae", "patch": "@@ -1,5 +1,9 @@\n 2011-03-30  Jason Merrill  <jason@redhat.com>\n \n+\t* call.c (convert_like_real) [ck_list]: Build up the\n+\tinitializer_list object directly.\n+\t* decl.c (build_init_list_var_init): Adjust.\n+\n \t* call.c (convert_like_real): Correct TREE_CONSTANT on CONSTRUCTOR.\n \t* decl.c (reshape_init_array_1): Likewise.\n "}, {"sha": "ad2de43c5e20920a5fcef37b85f32b80de3717a4", "filename": "gcc/cp/call.c", "status": "modified", "additions": 10, "deletions": 12, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88d37ae679fd5fd498076514d16248ccb5b2b8ae/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88d37ae679fd5fd498076514d16248ccb5b2b8ae/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=88d37ae679fd5fd498076514d16248ccb5b2b8ae", "patch": "@@ -5467,8 +5467,8 @@ convert_like_real (conversion *convs, tree expr, tree fn, int argnum,\n \ttree elttype = TREE_VEC_ELT (CLASSTYPE_TI_ARGS (totype), 0);\n \ttree new_ctor = build_constructor (init_list_type_node, NULL);\n \tunsigned len = CONSTRUCTOR_NELTS (expr);\n-\ttree array, val;\n-\tVEC(tree,gc) *parms;\n+\ttree array, val, field;\n+\tVEC(constructor_elt,gc) *vec = NULL;\n \tunsigned ix;\n \n \t/* Convert all the elements.  */\n@@ -5490,16 +5490,14 @@ convert_like_real (conversion *convs, tree expr, tree fn, int argnum,\n \tarray = build_array_of_n_type (elttype, len);\n \tarray = finish_compound_literal (array, new_ctor);\n \n-\tparms = make_tree_vector ();\n-\tVEC_safe_push (tree, gc, parms, decay_conversion (array));\n-\tVEC_safe_push (tree, gc, parms, size_int (len));\n-\t/* Call the private constructor.  */\n-\tpush_deferring_access_checks (dk_no_check);\n-\tnew_ctor = build_special_member_call\n-\t  (NULL_TREE, complete_ctor_identifier, &parms, totype, 0, complain);\n-\trelease_tree_vector (parms);\n-\tpop_deferring_access_checks ();\n-\treturn build_cplus_new (totype, new_ctor);\n+\t/* Build up the initializer_list object.  */\n+\ttotype = complete_type (totype);\n+\tfield = next_initializable_field (TYPE_FIELDS (totype));\n+\tCONSTRUCTOR_APPEND_ELT (vec, field, decay_conversion (array));\n+\tfield = next_initializable_field (DECL_CHAIN (field));\n+\tCONSTRUCTOR_APPEND_ELT (vec, field, size_int (len));\n+\tnew_ctor = build_constructor (totype, vec);\n+\treturn get_target_expr (new_ctor);\n       }\n \n     case ck_aggr:"}, {"sha": "bbccb6712043213ca94a91525cc2506ae77e31c4", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88d37ae679fd5fd498076514d16248ccb5b2b8ae/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88d37ae679fd5fd498076514d16248ccb5b2b8ae/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=88d37ae679fd5fd498076514d16248ccb5b2b8ae", "patch": "@@ -4562,7 +4562,7 @@ build_init_list_var_init (tree decl, tree type, tree init, tree *array_init,\n     return error_mark_node;\n \n   aggr_init = TARGET_EXPR_INITIAL (init);\n-  array = AGGR_INIT_EXPR_ARG (aggr_init, 1);\n+  array = CONSTRUCTOR_ELT (aggr_init, 0)->value;\n   arrtype = TREE_TYPE (array);\n   STRIP_NOPS (array);\n   gcc_assert (TREE_CODE (array) == ADDR_EXPR);\n@@ -4574,7 +4574,7 @@ build_init_list_var_init (tree decl, tree type, tree init, tree *array_init,\n       tree var = set_up_extended_ref_temp (decl, array, cleanup, array_init);\n       var = build_address (var);\n       var = convert (arrtype, var);\n-      AGGR_INIT_EXPR_ARG (aggr_init, 1) = var;\n+      CONSTRUCTOR_ELT (aggr_init, 0)->value = var;\n     }\n   return init;\n }"}]}