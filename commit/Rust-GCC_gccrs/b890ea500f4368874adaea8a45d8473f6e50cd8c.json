{"sha": "b890ea500f4368874adaea8a45d8473f6e50cd8c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yjg5MGVhNTAwZjQzNjg4NzRhZGFlYThhNDVkODQ3M2Y2ZTUwY2Q4Yw==", "commit": {"author": {"name": "Kaz Kojima", "email": "kkojima@gcc.gnu.org", "date": "2006-03-31T22:31:05Z"}, "committer": {"name": "Kaz Kojima", "email": "kkojima@gcc.gnu.org", "date": "2006-03-31T22:31:05Z"}, "message": "linux-atomic.asm: New file.\n\n\t* config/sh/linux-atomic.asm: New file.\n\t* config/sh/t-linux (LIB2FUNCS_EXTRA): Add linux-atomic.asm.\n\nFrom-SVN: r112593", "tree": {"sha": "83e3b9293530159b56f0c463351ec02726d9e5f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/83e3b9293530159b56f0c463351ec02726d9e5f8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b890ea500f4368874adaea8a45d8473f6e50cd8c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b890ea500f4368874adaea8a45d8473f6e50cd8c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b890ea500f4368874adaea8a45d8473f6e50cd8c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b890ea500f4368874adaea8a45d8473f6e50cd8c/comments", "author": null, "committer": null, "parents": [{"sha": "bd9e7c5cd5085d835fd0d8d342df85db93e71195", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd9e7c5cd5085d835fd0d8d342df85db93e71195", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd9e7c5cd5085d835fd0d8d342df85db93e71195"}], "stats": {"total": 145, "additions": 144, "deletions": 1}, "files": [{"sha": "d76e2c106895026c1697d1b461703c10745cad47", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b890ea500f4368874adaea8a45d8473f6e50cd8c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b890ea500f4368874adaea8a45d8473f6e50cd8c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b890ea500f4368874adaea8a45d8473f6e50cd8c", "patch": "@@ -1,3 +1,8 @@\n+2006-03-31  Kaz Kojima  <kkojima@gcc.gnu.org>\n+\n+\t* config/sh/linux-atomic.asm: New file.\n+\t* config/sh/t-linux (LIB2FUNCS_EXTRA): Add linux-atomic.asm.\n+\n 2006-03-31  DJ Delorie  <dj@redhat.com>\n \n \t* config/m32c/cond.md: Set condition flags properly throughout."}, {"sha": "d181fb3fad53b32f03da726f973626c1c96fd8ed", "filename": "gcc/config/sh/linux-atomic.asm", "status": "added", "additions": 138, "deletions": 0, "changes": 138, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b890ea500f4368874adaea8a45d8473f6e50cd8c/gcc%2Fconfig%2Fsh%2Flinux-atomic.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b890ea500f4368874adaea8a45d8473f6e50cd8c/gcc%2Fconfig%2Fsh%2Flinux-atomic.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Flinux-atomic.asm?ref=b890ea500f4368874adaea8a45d8473f6e50cd8c", "patch": "@@ -0,0 +1,138 @@\n+/* Copyright (C) 2006 Free Software Foundation, Inc.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 2, or (at your option)\n+   any later version.\n+\n+   GCC is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with GCC; see the file COPYING.  If not, write to\n+   the Free Software Foundation, 51 Franklin Street, Fifth Floor,\n+   Boston, MA 02110-1301, USA.  */\n+\n+/* As a special exception, if you link this library with other files,\n+   some of which are compiled with GCC, to produce an executable,\n+   this library does not by itself cause the resulting executable\n+   to be covered by the GNU General Public License.\n+   This exception does not however invalidate any other reasons why\n+   the executable file might be covered by the GNU General Public License.  */\n+\n+!! Linux specific atomic routines for the Renesas / SuperH SH CPUs.\n+!! Linux kernel for SH3/4 has implemented the support for software\n+!! atomic sequences.\n+\n+#define FUNC(X)\t\t.type X,@function\n+#define HIDDEN_FUNC(X)\tFUNC(X); .hidden X\n+#define ENDFUNC0(X)\t.Lfe_##X: .size X,.Lfe_##X-X\n+#define ENDFUNC(X)\tENDFUNC0(X)\n+\n+#if ! __SH5__\n+\n+#define ATOMIC_TEST_AND_SET(N,T) \\\n+\t.global\t__sync_lock_test_and_set_##N; \\\n+\tHIDDEN_FUNC(__sync_lock_test_and_set_##N); \\\n+\t.align\t2; \\\n+__sync_lock_test_and_set_##N:; \\\n+\tmova\t1f, r0; \\\n+\tnop; \\\n+\tmov\tr15, r1; \\\n+\tmov\t#(0f-1f), r15; \\\n+0:\tmov.##T\t@r4, r2; \\\n+\tmov.##T\tr5, @r4; \\\n+1:\tmov\tr1, r15; \\\n+\trts; \\\n+\t mov\tr2, r0; \\\n+\tENDFUNC(__sync_lock_test_and_set_##N)\n+\n+ATOMIC_TEST_AND_SET (1,b)\n+ATOMIC_TEST_AND_SET (2,w)\n+ATOMIC_TEST_AND_SET (4,l)\n+\n+#define ATOMIC_COMPARE_AND_SWAP(N,T) \\\n+\t.global\t__sync_compare_and_swap_##N; \\\n+\tHIDDEN_FUNC(__sync_compare_and_swap_##N); \\\n+\t.align\t2; \\\n+__sync_compare_and_swap_##N:; \\\n+\tmova\t1f, r0; \\\n+\tnop; \\\n+\tmov\tr15, r1; \\\n+\tmov\t#(0f-1f), r15; \\\n+0:\tmov.##T\t@r4, r2; \\\n+\tcmp/eq\tr2, r5; \\\n+\tbf\t1f; \\\n+\tmov.##T\tr6, @r4; \\\n+1:\tmov\tr1, r15; \\\n+\trts; \\\n+\t mov\tr2, r0; \\\n+\tENDFUNC(__sync_compare_and_swap_##N)\n+\n+ATOMIC_COMPARE_AND_SWAP (1,b)\n+ATOMIC_COMPARE_AND_SWAP (2,w)\n+ATOMIC_COMPARE_AND_SWAP (4,l)\n+\n+#define ATOMIC_FETCH_AND_OP(OP,N,T) \\\n+\t.global\t__sync_fetch_and_##OP##_##N; \\\n+\tHIDDEN_FUNC(__sync_fetch_and_##OP##_##N); \\\n+\t.align\t2; \\\n+__sync_fetch_and_##OP##_##N:; \\\n+\tmova\t1f, r0; \\\n+\tmov\tr15, r1; \\\n+\tmov\t#(0f-1f), r15; \\\n+0:\tmov.##T\t@r4, r2; \\\n+\tOP\tr2, r5; \\\n+\tmov.##T\tr5, @r4; \\\n+1:\tmov\tr1, r15; \\\n+\trts; \\\n+\t mov\tr2, r0; \\\n+\tENDFUNC(__sync_fetch_and_##OP##_##N)\n+\n+ATOMIC_FETCH_AND_OP(add,1,b)\n+ATOMIC_FETCH_AND_OP(add,2,w)\n+ATOMIC_FETCH_AND_OP(add,4,l)\n+\n+ATOMIC_FETCH_AND_OP(or,1,b)\n+ATOMIC_FETCH_AND_OP(or,2,w)\n+ATOMIC_FETCH_AND_OP(or,4,l)\n+\n+ATOMIC_FETCH_AND_OP(and,1,b)\n+ATOMIC_FETCH_AND_OP(and,2,w)\n+ATOMIC_FETCH_AND_OP(and,4,l)\n+\n+ATOMIC_FETCH_AND_OP(xor,1,b)\n+ATOMIC_FETCH_AND_OP(xor,2,w)\n+ATOMIC_FETCH_AND_OP(xor,4,l)\n+\n+#define ATOMIC_FETCH_AND_COMBOP(OP,OP0,OP1,N,T) \\\n+\t.global\t__sync_fetch_and_##OP##_##N; \\\n+\tHIDDEN_FUNC(__sync_fetch_and_##OP##_##N); \\\n+\t.align\t2; \\\n+__sync_fetch_and_##OP##_##N:; \\\n+\tmova\t1f, r0; \\\n+\tnop; \\\n+\tmov\tr15, r1; \\\n+\tmov\t#(0f-1f), r15; \\\n+0:\tmov.##T\t@r4, r2; \\\n+\tOP0\tr2, r5; \\\n+\tOP1\tr5, r5; \\\n+\tmov.##T\tr5, @r4; \\\n+1:\tmov\tr1, r15; \\\n+\trts; \\\n+\t mov\tr2, r0; \\\n+\tENDFUNC(__sync_fetch_and_##OP##_##N)\n+\n+ATOMIC_FETCH_AND_COMBOP(sub,sub,neg,1,b)\n+ATOMIC_FETCH_AND_COMBOP(sub,sub,neg,2,w)\n+ATOMIC_FETCH_AND_COMBOP(sub,sub,neg,4,l)\n+\n+ATOMIC_FETCH_AND_COMBOP(nand,and,not,1,b)\n+ATOMIC_FETCH_AND_COMBOP(nand,and,not,2,w)\n+ATOMIC_FETCH_AND_COMBOP(nand,and,not,4,l)\n+\n+#endif /* ! __SH5__ */"}, {"sha": "8679bb5294653517655576b79eb8650a065a0f08", "filename": "gcc/config/sh/t-linux", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b890ea500f4368874adaea8a45d8473f6e50cd8c/gcc%2Fconfig%2Fsh%2Ft-linux", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b890ea500f4368874adaea8a45d8473f6e50cd8c/gcc%2Fconfig%2Fsh%2Ft-linux", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Ft-linux?ref=b890ea500f4368874adaea8a45d8473f6e50cd8c", "patch": "@@ -1,7 +1,7 @@\n TARGET_LIBGCC2_CFLAGS = -fpic -DNO_FPSCR_VALUES\n LIB1ASMFUNCS_CACHE = _ic_invalidate _ic_invalidate_array\n \n-LIB2FUNCS_EXTRA=\n+LIB2FUNCS_EXTRA= $(srcdir)/config/sh/linux-atomic.asm\n \n MULTILIB_DIRNAMES= \n MULTILIB_MATCHES = "}]}