{"sha": "c44e68a5f70cca855b79dce8b8ba5c7274a8c731", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzQ0ZTY4YTVmNzBjY2E4NTViNzlkY2U4YjhiYTVjNzI3NGE4YzczMQ==", "commit": {"author": {"name": "Kriang Lerdsuwanakij", "email": "lerdsuwa@users.sourceforge.net", "date": "2003-11-18T15:54:22Z"}, "committer": {"name": "Kriang Lerdsuwanakij", "email": "lerdsuwa@gcc.gnu.org", "date": "2003-11-18T15:54:22Z"}, "message": "re PR c++/12932 (ICE with use of ptr-to-function as template arg)\n\n\tPR c++/12932\n\t* class.c (currently_open_derived_class): Check if\n\tcurrent_class_type is NULL_TREE.\n\t* semantics.c (finish_call_expr): Check if\n\tcurrently_open_derived_class returns NULL_TREE.\n\t* cp-tree.h (DERIVED_FROM_P): Add parenthesis around PARENT\n\tparameter.\n\n\t* g++.dg/template/static5.C: New test.\n\nFrom-SVN: r73705", "tree": {"sha": "bb256035baabb26b8721b836ce81c524c986d175", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bb256035baabb26b8721b836ce81c524c986d175"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c44e68a5f70cca855b79dce8b8ba5c7274a8c731", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c44e68a5f70cca855b79dce8b8ba5c7274a8c731", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c44e68a5f70cca855b79dce8b8ba5c7274a8c731", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c44e68a5f70cca855b79dce8b8ba5c7274a8c731/comments", "author": null, "committer": null, "parents": [{"sha": "df964a183fdc0fa5fae0409bfa305ee95b3b3d6b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df964a183fdc0fa5fae0409bfa305ee95b3b3d6b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/df964a183fdc0fa5fae0409bfa305ee95b3b3d6b"}], "stats": {"total": 39, "additions": 38, "deletions": 1}, "files": [{"sha": "7f75b43e25f89919228fb51602e1d0c4591b71d5", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c44e68a5f70cca855b79dce8b8ba5c7274a8c731/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c44e68a5f70cca855b79dce8b8ba5c7274a8c731/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=c44e68a5f70cca855b79dce8b8ba5c7274a8c731", "patch": "@@ -1,3 +1,13 @@\n+2003-11-18  Kriang Lerdsuwanakij  <lerdsuwa@users.sourceforge.net>\n+\n+\tPR c++/12932\n+\t* class.c (currently_open_derived_class): Check if\n+\tcurrent_class_type is NULL_TREE.\n+\t* semantics.c (finish_call_expr): Check if\n+\tcurrently_open_derived_class returns NULL_TREE.\n+\t* cp-tree.h (DERIVED_FROM_P): Add parenthesis around PARENT\n+\tparameter.\n+\n 2003-11-17  Jason Merrill  <jason@redhat.com>\n \n \t* init.c (build_new_1): Preevaluate placement args."}, {"sha": "1e1b71c94dcf97ac080692657cac731075b7a555", "filename": "gcc/cp/class.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c44e68a5f70cca855b79dce8b8ba5c7274a8c731/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c44e68a5f70cca855b79dce8b8ba5c7274a8c731/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=c44e68a5f70cca855b79dce8b8ba5c7274a8c731", "patch": "@@ -5585,6 +5585,9 @@ currently_open_derived_class (tree t)\n   if (dependent_type_p (t))\n     return NULL_TREE;\n \n+  if (!current_class_type)\n+    return NULL_TREE;\n+\n   if (DERIVED_FROM_P (t, current_class_type))\n     return current_class_type;\n "}, {"sha": "75245abfc7b497bebba1b89dd117e35fe59fc1a0", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c44e68a5f70cca855b79dce8b8ba5c7274a8c731/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c44e68a5f70cca855b79dce8b8ba5c7274a8c731/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=c44e68a5f70cca855b79dce8b8ba5c7274a8c731", "patch": "@@ -1000,7 +1000,7 @@ enum languages { lang_c, lang_cplusplus, lang_java };\n /* Nonzero iff TYPE is derived from PARENT. Ignores accessibility and\n    ambiguity issues.  */\n #define DERIVED_FROM_P(PARENT, TYPE) \\\n-  (lookup_base ((TYPE), PARENT, ba_any, NULL) != NULL_TREE)\n+  (lookup_base ((TYPE), (PARENT), ba_any, NULL) != NULL_TREE)\n /* Nonzero iff TYPE is uniquely derived from PARENT. Ignores\n    accessibility.  */\n #define UNIQUELY_DERIVED_FROM_P(PARENT, TYPE) \\"}, {"sha": "cb259726ee85fae276690ae77aaf79d0395c9c9f", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c44e68a5f70cca855b79dce8b8ba5c7274a8c731/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c44e68a5f70cca855b79dce8b8ba5c7274a8c731/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=c44e68a5f70cca855b79dce8b8ba5c7274a8c731", "patch": "@@ -1638,6 +1638,8 @@ finish_call_expr (tree fn, tree args, bool disallow_virtual, bool koenig_p)\n       if (DECL_FUNCTION_MEMBER_P (f))\n \t{\n \t  tree type = currently_open_derived_class (DECL_CONTEXT (f));\n+\t  if (!type)\n+\t    type = DECL_CONTEXT (f);\n \t  fn = build_baselink (TYPE_BINFO (type),\n \t\t\t       TYPE_BINFO (type),\n \t\t\t       fn, /*optype=*/NULL_TREE);"}, {"sha": "fd389b513ef6655446f6a3503e825482a5b5cd6a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c44e68a5f70cca855b79dce8b8ba5c7274a8c731/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c44e68a5f70cca855b79dce8b8ba5c7274a8c731/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c44e68a5f70cca855b79dce8b8ba5c7274a8c731", "patch": "@@ -1,3 +1,8 @@\n+2003-11-18  Kriang Lerdsuwanakij  <lerdsuwa@users.sourceforge.net>\n+\n+\tPR c++/12932\n+\t* g++.dg/template/static5.C: New test.\n+\n 2003-11-18  Joseph S. Myers  <jsm@polyomino.org.uk>\n \n \t* gcc.dg/nested-func-1.c: New test."}, {"sha": "05eaf8fbd551bd9e2e09b2ac4559dd469044c204", "filename": "gcc/testsuite/g++.dg/template/static5.C", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c44e68a5f70cca855b79dce8b8ba5c7274a8c731/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fstatic5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c44e68a5f70cca855b79dce8b8ba5c7274a8c731/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fstatic5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fstatic5.C?ref=c44e68a5f70cca855b79dce8b8ba5c7274a8c731", "patch": "@@ -0,0 +1,17 @@\n+// { dg-do compile }\n+\n+// Origin: Mirek Fidler <cxl@ntllib.org>\n+//         Wolfgang Bangerth <bangerth@ticam.utexas.edu>\n+\n+// PR c++/12932: ICE address of static function as template argument\n+\n+struct Test {\n+    static void fun();\n+};\n+\n+template <void (*fun)()>\n+void foo () { (*fun)(); }\n+\n+\n+template\n+void foo<Test::fun> ();"}]}