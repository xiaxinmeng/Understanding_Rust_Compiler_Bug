{"sha": "083dd940dcb2169786fbd523059e8c7f41093812", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDgzZGQ5NDBkY2IyMTY5Nzg2ZmJkNTIzMDU5ZThjN2Y0MTA5MzgxMg==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2012-01-25T06:59:21Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2012-01-25T06:59:21Z"}, "message": "re PR fortran/51966 (ICE in gfc_conv_array_constructor_expr)\n\n2012-01-24  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/51966\n        * resolve.c (resolve_structure_cons): Only create an\n        array constructors for nonscalars.\n\n2012-01-24  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/51966\n        * gfortran.dg/derived_constructor_char_3.f90: New.\n\nFrom-SVN: r183510", "tree": {"sha": "8adc73a26009f770be87bc669b8215fa124f5621", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8adc73a26009f770be87bc669b8215fa124f5621"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/083dd940dcb2169786fbd523059e8c7f41093812", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/083dd940dcb2169786fbd523059e8c7f41093812", "html_url": "https://github.com/Rust-GCC/gccrs/commit/083dd940dcb2169786fbd523059e8c7f41093812", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/083dd940dcb2169786fbd523059e8c7f41093812/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d2bb8192ee35dfe3388c8cad3fc8b66a94c676d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2bb8192ee35dfe3388c8cad3fc8b66a94c676d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d2bb8192ee35dfe3388c8cad3fc8b66a94c676d0"}], "stats": {"total": 42, "additions": 42, "deletions": 0}, "files": [{"sha": "70bd5eea8de13061906d0747f306948751195b7b", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/083dd940dcb2169786fbd523059e8c7f41093812/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/083dd940dcb2169786fbd523059e8c7f41093812/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=083dd940dcb2169786fbd523059e8c7f41093812", "patch": "@@ -1,3 +1,9 @@\n+2012-01-24  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/51966\n+\t* resolve.c (resolve_structure_cons): Only create an\n+\tarray constructors for nonscalars.\n+\n 2012-01-23  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/51948"}, {"sha": "b24399d6a3fd7681680885e6f08ba9f44c3c786f", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/083dd940dcb2169786fbd523059e8c7f41093812/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/083dd940dcb2169786fbd523059e8c7f41093812/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=083dd940dcb2169786fbd523059e8c7f41093812", "patch": "@@ -1051,6 +1051,7 @@ resolve_structure_cons (gfc_expr *expr, int init)\n \t  && comp->ts.u.cl->length->expr_type == EXPR_CONSTANT\n \t  && cons->expr->ts.u.cl && cons->expr->ts.u.cl->length\n \t  && cons->expr->ts.u.cl->length->expr_type == EXPR_CONSTANT\n+\t  && cons->expr->rank != 0\n \t  && mpz_cmp (cons->expr->ts.u.cl->length->value.integer,\n \t\t      comp->ts.u.cl->length->value.integer) != 0)\n \t{"}, {"sha": "1e7e0e614ab1838580b9ba764f046fcf32a0de4c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/083dd940dcb2169786fbd523059e8c7f41093812/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/083dd940dcb2169786fbd523059e8c7f41093812/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=083dd940dcb2169786fbd523059e8c7f41093812", "patch": "@@ -1,3 +1,8 @@\n+2012-01-24  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/51966\n+\t* gfortran.dg/derived_constructor_char_3.f90: New.\n+\n 2012-01-24  Ian Lance Taylor  <iant@google.com>\n \n \t* go.test/go-test.exp (filecmp): New procedure."}, {"sha": "e23878541bbed64d367909c31f951e97c8dccbe6", "filename": "gcc/testsuite/gfortran.dg/derived_constructor_char_3.f90", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/083dd940dcb2169786fbd523059e8c7f41093812/gcc%2Ftestsuite%2Fgfortran.dg%2Fderived_constructor_char_3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/083dd940dcb2169786fbd523059e8c7f41093812/gcc%2Ftestsuite%2Fgfortran.dg%2Fderived_constructor_char_3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fderived_constructor_char_3.f90?ref=083dd940dcb2169786fbd523059e8c7f41093812", "patch": "@@ -0,0 +1,30 @@\n+! { dg-do compile }\n+!\n+! PR fortran/51966\n+!\n+! Contributed by Peter Wind\n+!\n+\n+  type :: Deriv\n+    character(len=10) :: name\n+  end type\n+  character(len=8), dimension(2), parameter :: &\n+       DEF_ECOSYSTEMS = (/ \"Gridxxxx\", \"StringYY\" /)\n+\n+  type(Deriv), save :: DepEcoSystem = Deriv(DEF_ECOSYSTEMS(1))\n+\n+  if (DepEcoSystem%name /= \"Gridxxxx\" &\n+      .or. DepEcoSystem%name(9:9) /= ' ' &\n+      .or. DepEcoSystem%name(10:10) /= ' ') call abort()\n+  DepEcoSystem%name = 'ABCDEFGHIJ'\n+  call Init_EcoSystems()\n+  if (DepEcoSystem%name /= \"StringYY\" &\n+      .or. DepEcoSystem%name(9:9) /= ' ' &\n+      .or. DepEcoSystem%name(10:10) /= ' ') call abort()\n+\n+contains\n+  subroutine Init_EcoSystems()\n+    integer :: i =2\n+    DepEcoSystem = Deriv(DEF_ECOSYSTEMS(i))\n+  end subroutine Init_EcoSystems\n+end"}]}