{"sha": "4a9be8d51182076222d707d9d68f6eda78e8ee2c", "node_id": "C_kwDOANBUbNoAKDRhOWJlOGQ1MTE4MjA3NjIyMmQ3MDdkOWQ2OGY2ZWRhNzhlOGVlMmM", "commit": {"author": {"name": "Roger Sayle", "email": "roger@nextmovesoftware.com", "date": "2022-05-18T15:23:01Z"}, "committer": {"name": "Roger Sayle", "email": "roger@nextmovesoftware.com", "date": "2022-05-18T15:23:01Z"}, "message": "Correct ix86_rtx_cost for multi-word multiplication.\n\nThis is the i386 backend specific piece of my revised patch for\nPR middle-end/98865, where Richard Biener has suggested that I perform\nthe desired transformation during RTL expansion where the backend can\ncontrol whether it is profitable to convert a multiplication into a\nbit-wise AND and a negation.  This works well for x86_64, but alas\nexposes a latent bug with -m32, where a DImode multiplication incorrectly\nappears to be cheaper than negdi2+anddi3(!?).  The fix to ix86_rtx_costs\nis to report that a DImode (multi-word) multiplication actually requires\nthree SImode multiplications and two SImode additions.  This also corrects\nthe cost of TImode multiplication on TARGET_64BIT.\n\n2022-05-18  Roger Sayle  <roger@nextmovesoftware.com>\n\ngcc/ChangeLog\n\t* config/i386/i386.cc (ix86_rtx_costs) [MULT]: When mode size\n\tis wider than word_mode, a multiplication costs three word_mode\n\tmultiplications and two word_mode additions.", "tree": {"sha": "4a1879256b3bc0cc67f4bdf36e6f40617dd0ccc3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4a1879256b3bc0cc67f4bdf36e6f40617dd0ccc3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4a9be8d51182076222d707d9d68f6eda78e8ee2c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a9be8d51182076222d707d9d68f6eda78e8ee2c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a9be8d51182076222d707d9d68f6eda78e8ee2c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a9be8d51182076222d707d9d68f6eda78e8ee2c/comments", "author": {"login": "rogersayle", "id": 13512313, "node_id": "MDQ6VXNlcjEzNTEyMzEz", "avatar_url": "https://avatars.githubusercontent.com/u/13512313?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rogersayle", "html_url": "https://github.com/rogersayle", "followers_url": "https://api.github.com/users/rogersayle/followers", "following_url": "https://api.github.com/users/rogersayle/following{/other_user}", "gists_url": "https://api.github.com/users/rogersayle/gists{/gist_id}", "starred_url": "https://api.github.com/users/rogersayle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rogersayle/subscriptions", "organizations_url": "https://api.github.com/users/rogersayle/orgs", "repos_url": "https://api.github.com/users/rogersayle/repos", "events_url": "https://api.github.com/users/rogersayle/events{/privacy}", "received_events_url": "https://api.github.com/users/rogersayle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rogersayle", "id": 13512313, "node_id": "MDQ6VXNlcjEzNTEyMzEz", "avatar_url": "https://avatars.githubusercontent.com/u/13512313?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rogersayle", "html_url": "https://github.com/rogersayle", "followers_url": "https://api.github.com/users/rogersayle/followers", "following_url": "https://api.github.com/users/rogersayle/following{/other_user}", "gists_url": "https://api.github.com/users/rogersayle/gists{/gist_id}", "starred_url": "https://api.github.com/users/rogersayle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rogersayle/subscriptions", "organizations_url": "https://api.github.com/users/rogersayle/orgs", "repos_url": "https://api.github.com/users/rogersayle/repos", "events_url": "https://api.github.com/users/rogersayle/events{/privacy}", "received_events_url": "https://api.github.com/users/rogersayle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "30405ccc143bb4b63476a329800244826a88faf3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30405ccc143bb4b63476a329800244826a88faf3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/30405ccc143bb4b63476a329800244826a88faf3"}], "stats": {"total": 12, "additions": 11, "deletions": 1}, "files": [{"sha": "30a9cd006e8cd5028cdb44f2f3ff6bda8d6896fc", "filename": "gcc/config/i386/i386.cc", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a9be8d51182076222d707d9d68f6eda78e8ee2c/gcc%2Fconfig%2Fi386%2Fi386.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a9be8d51182076222d707d9d68f6eda78e8ee2c/gcc%2Fconfig%2Fi386%2Fi386.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.cc?ref=4a9be8d51182076222d707d9d68f6eda78e8ee2c", "patch": "@@ -20634,7 +20634,17 @@ ix86_rtx_costs (rtx x, machine_mode mode, int outer_code_i, int opno,\n \t        op0 = XEXP (op0, 0), mode = GET_MODE (op0);\n \t    }\n \n-  \t  *total = (cost->mult_init[MODE_INDEX (mode)]\n+\t  int mult_init;\n+\t  // Double word multiplication requires 3 mults and 2 adds.\n+\t  if (GET_MODE_SIZE (mode) > UNITS_PER_WORD)\n+\t    {\n+\t      mult_init = 3 * cost->mult_init[MODE_INDEX (word_mode)]\n+\t\t\t  + 2 * cost->add;\n+\t      nbits *= 3;\n+\t    }\n+\t  else mult_init = cost->mult_init[MODE_INDEX (mode)];\n+\n+  \t  *total = (mult_init\n \t\t    + nbits * cost->mult_bit\n \t            + rtx_cost (op0, mode, outer_code, opno, speed)\n \t\t    + rtx_cost (op1, mode, outer_code, opno, speed));"}]}