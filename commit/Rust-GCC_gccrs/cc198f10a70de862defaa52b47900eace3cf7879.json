{"sha": "cc198f10a70de862defaa52b47900eace3cf7879", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2MxOThmMTBhNzBkZTg2MmRlZmFhNTJiNDc5MDBlYWNlM2NmNzg3OQ==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-06-10T17:47:20Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-06-10T17:47:20Z"}, "message": "(translate_options): Don't assume option_map[j].arg_info != 0.\n\nFrom-SVN: r4658", "tree": {"sha": "c35f0c47585ab3e85195bc50b62c5557fde218dd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c35f0c47585ab3e85195bc50b62c5557fde218dd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cc198f10a70de862defaa52b47900eace3cf7879", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc198f10a70de862defaa52b47900eace3cf7879", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc198f10a70de862defaa52b47900eace3cf7879", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc198f10a70de862defaa52b47900eace3cf7879/comments", "author": null, "committer": null, "parents": [{"sha": "e49a094d25160e3186f9cc6aee2fdadaf5649b2d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e49a094d25160e3186f9cc6aee2fdadaf5649b2d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e49a094d25160e3186f9cc6aee2fdadaf5649b2d"}], "stats": {"total": 15, "additions": 9, "deletions": 6}, "files": [{"sha": "016d99715b11d0a29cf97e07faa44d2bc8be080e", "filename": "gcc/gcc.c", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc198f10a70de862defaa52b47900eace3cf7879/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc198f10a70de862defaa52b47900eace3cf7879/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=cc198f10a70de862defaa52b47900eace3cf7879", "patch": "@@ -731,6 +731,10 @@ translate_options (argcp, argvp)\n \t    {\n \t      int optlen = strlen (option_map[j].name);\n \t      int complen = strlen (argv[i]);\n+\t      char *arginfo = option_map[j].arg_info;\n+\n+\t      if (arginfo == 0)\n+\t\targinfo = \"\";\n \t      if (complen > optlen)\n \t\tcomplen = optlen;\n \t      if (!strncmp (argv[i], option_map[j].name, complen))\n@@ -745,19 +749,18 @@ translate_options (argcp, argvp)\n \t\t\targ = argv[i] + optlen + 1;\n \t\t      /* If this mapping allows extra text at end of name,\n \t\t\t accept that as \"argument\".  */\n-\t\t      else if (index (option_map[j].arg_info, '*') != 0)\n+\t\t      else if (index (arginfo, '*') != 0)\n \t\t\targ = argv[i] + optlen;\n \t\t      /* Otherwise, extra text at end means mismatch.\n \t\t\t Try other mappings.  */\n \t\t      else\n \t\t\tcontinue;\n \t\t    }\n-\t\t  else if (option_map[j].arg_info != 0\n-\t\t\t   && index (option_map[j].arg_info, '*') != 0)\n+\t\t  else if (index (arginfo, '*') != 0)\n \t\t    error (\"Incomplete `%s' option\", option_map[j].name);\n \n \t\t  /* Handle arguments.  */\n-\t\t  if (index (option_map[j].arg_info, 'o') != 0)\n+\t\t  if (index (arginfo, 'o') != 0)\n \t\t    {\n \t\t      if (arg == 0)\n \t\t\t{\n@@ -767,7 +770,7 @@ translate_options (argcp, argvp)\n \t\t\t  arg = argv[++i];\n \t\t\t}\n \t\t    }\n-\t\t  else if (index (option_map[j].arg_info, 'a') == 0)\n+\t\t  else if (index (arginfo, 'a') == 0)\n \t\t    {\n \t\t      if (arg != 0)\n \t\t\terror (\"Extraneous argument to `%s' option\",\n@@ -776,7 +779,7 @@ translate_options (argcp, argvp)\n \t\t    }\n \n \t\t  /* Store the translation as one argv elt or as two.  */\n-\t\t  if (arg != 0 && index (option_map[j].arg_info, 'j') != 0)\n+\t\t  if (arg != 0 && index (arginfo, 'j') != 0)\n \t\t    newv[newindex++] = concat (option_map[j].equivalent,\n \t\t\t\t\t       arg, \"\");\n \t\t  else if (arg != 0)"}]}