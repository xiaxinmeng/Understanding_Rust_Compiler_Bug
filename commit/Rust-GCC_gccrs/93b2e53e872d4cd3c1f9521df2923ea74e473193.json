{"sha": "93b2e53e872d4cd3c1f9521df2923ea74e473193", "node_id": "C_kwDOANBUbNoAKDkzYjJlNTNlODcyZDRjZDNjMWY5NTIxZGYyOTIzZWE3NGU0NzMxOTM", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2021-12-16T20:54:04Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2022-01-07T16:24:10Z"}, "message": "[Ada] Remove extra space before THEN keywords\n\ngcc/ada/\n\n\t* exp_ch5.adb, exp_disp.adb, exp_util.adb, par-ch4.adb,\n\tsem_ch13.adb: Remove extra space before THEN that occurs at the\n\tend of a line.", "tree": {"sha": "3a0805937b9580d94b54c5307fb668af9f89122b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3a0805937b9580d94b54c5307fb668af9f89122b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/93b2e53e872d4cd3c1f9521df2923ea74e473193", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93b2e53e872d4cd3c1f9521df2923ea74e473193", "html_url": "https://github.com/Rust-GCC/gccrs/commit/93b2e53e872d4cd3c1f9521df2923ea74e473193", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93b2e53e872d4cd3c1f9521df2923ea74e473193/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9e6274e0a3b60e77a42784c3fb6ef2aa3cfc071a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e6274e0a3b60e77a42784c3fb6ef2aa3cfc071a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e6274e0a3b60e77a42784c3fb6ef2aa3cfc071a"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "9536da3637549fd014dae0e19ed29526ba7a9a5d", "filename": "gcc/ada/exp_ch5.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93b2e53e872d4cd3c1f9521df2923ea74e473193/gcc%2Fada%2Fexp_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93b2e53e872d4cd3c1f9521df2923ea74e473193/gcc%2Fada%2Fexp_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch5.adb?ref=93b2e53e872d4cd3c1f9521df2923ea74e473193", "patch": "@@ -2664,7 +2664,7 @@ package body Exp_Ch5 is\n             Rewrite (Lhs, OK_Convert_To (Base_Type (Typ), Lhs));\n             Apply_Discriminant_Check (Rhs, Typ, Lhs);\n \n-         elsif Is_Array_Type (Typ) and then Is_Constrained (Typ)  then\n+         elsif Is_Array_Type (Typ) and then Is_Constrained (Typ) then\n             Rewrite (Rhs, OK_Convert_To (Base_Type (Typ), Rhs));\n             Rewrite (Lhs, OK_Convert_To (Base_Type (Typ), Lhs));\n             Apply_Length_Check (Rhs, Typ);"}, {"sha": "968347eacdf9ff1a6e980da97e1fdd79d7e28d84", "filename": "gcc/ada/exp_disp.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93b2e53e872d4cd3c1f9521df2923ea74e473193/gcc%2Fada%2Fexp_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93b2e53e872d4cd3c1f9521df2923ea74e473193/gcc%2Fada%2Fexp_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_disp.adb?ref=93b2e53e872d4cd3c1f9521df2923ea74e473193", "patch": "@@ -4615,7 +4615,7 @@ package body Exp_Disp is\n                --  case concerning the need for this check, and this topic may\n                --  go back to the ARG.\n \n-               if not Is_Abstract_Subprogram (Prim)  then\n+               if not Is_Abstract_Subprogram (Prim) then\n                   Formal := First_Formal (Prim);\n                   while Present (Formal) loop\n                      Check_Premature_Freezing (Prim, Typ, Etype (Formal));"}, {"sha": "e17e8ac043d698840edb397e5978c2977c68a88b", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93b2e53e872d4cd3c1f9521df2923ea74e473193/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93b2e53e872d4cd3c1f9521df2923ea74e473193/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=93b2e53e872d4cd3c1f9521df2923ea74e473193", "patch": "@@ -3752,7 +3752,7 @@ package body Exp_Util is\n       --  Anonymous arrays in object declarations have no explicit declaration\n       --  so use the related object declaration as the insertion point.\n \n-      elsif Is_Itype (Work_Typ) and then Is_Array_Type (Work_Typ)  then\n+      elsif Is_Itype (Work_Typ) and then Is_Array_Type (Work_Typ) then\n          Typ_Decl := Associated_Node_For_Itype (Work_Typ);\n \n       --  Derived types with the full view as parent do not have a partial"}, {"sha": "483e1af5082d545f9143d3a4d0fdc16af9e9f36e", "filename": "gcc/ada/par-ch4.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93b2e53e872d4cd3c1f9521df2923ea74e473193/gcc%2Fada%2Fpar-ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93b2e53e872d4cd3c1f9521df2923ea74e473193/gcc%2Fada%2Fpar-ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch4.adb?ref=93b2e53e872d4cd3c1f9521df2923ea74e473193", "patch": "@@ -2968,7 +2968,7 @@ package body Ch4 is\n                   Save_Scan_State (Scan_State);\n                   Scan;   --  past FOR\n \n-                  if Token = Tok_All or else Token = Tok_Some  then\n+                  if Token = Tok_All or else Token = Tok_Some then\n                      Restore_Scan_State (Scan_State);  -- To FOR\n                      Node1 := P_Quantified_Expression;\n "}, {"sha": "af685f5e9d5cc3e277ab8cd5bf4843aad2b1a090", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93b2e53e872d4cd3c1f9521df2923ea74e473193/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93b2e53e872d4cd3c1f9521df2923ea74e473193/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=93b2e53e872d4cd3c1f9521df2923ea74e473193", "patch": "@@ -16005,7 +16005,7 @@ package body Sem_Ch13 is\n \n       function Valid_Empty (E :  Entity_Id) return Boolean is\n       begin\n-         if Etype (E) /= Typ or else Scope (E) /= Scope (Typ)  then\n+         if Etype (E) /= Typ or else Scope (E) /= Scope (Typ) then\n             return False;\n \n          elsif Ekind (E) = E_Constant then"}]}