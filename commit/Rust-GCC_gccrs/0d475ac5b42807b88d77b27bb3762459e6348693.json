{"sha": "0d475ac5b42807b88d77b27bb3762459e6348693", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGQ0NzVhYzViNDI4MDdiODhkNzdiMjdiYjM3NjI0NTllNjM0ODY5Mw==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2010-10-20T11:02:40Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2010-10-20T11:02:40Z"}, "message": "stor-layout.c (skip_simple_constant_arithmetic): New function.\n\n\t* stor-layout.c (skip_simple_constant_arithmetic): New function.\n\t(self_referential_size): Use it instead of skip_simple_arithmetic.\n\nFrom-SVN: r165716", "tree": {"sha": "56cb2bd757966e0e9eda82f1ae634cee00c709ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/56cb2bd757966e0e9eda82f1ae634cee00c709ee"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0d475ac5b42807b88d77b27bb3762459e6348693", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d475ac5b42807b88d77b27bb3762459e6348693", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d475ac5b42807b88d77b27bb3762459e6348693", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d475ac5b42807b88d77b27bb3762459e6348693/comments", "author": null, "committer": null, "parents": [{"sha": "73dd5ce0c3b7d284d7ea9e6ee6f60b8ad4f9af3c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73dd5ce0c3b7d284d7ea9e6ee6f60b8ad4f9af3c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/73dd5ce0c3b7d284d7ea9e6ee6f60b8ad4f9af3c"}], "stats": {"total": 88, "additions": 87, "deletions": 1}, "files": [{"sha": "a51fad5ed480cbae7c72d3b0a40499ee77559596", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d475ac5b42807b88d77b27bb3762459e6348693/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d475ac5b42807b88d77b27bb3762459e6348693/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0d475ac5b42807b88d77b27bb3762459e6348693", "patch": "@@ -1,3 +1,8 @@\n+2010-10-20  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* stor-layout.c (skip_simple_constant_arithmetic): New function.\n+\t(self_referential_size): Use it instead of skip_simple_arithmetic.\n+\n 2010-10-20  Olivier Hainque  <hainque@adacore.com>\n \n \t* config/rs6000/rs6000.c (rs6000_reg_live_or_pic_offset_p):"}, {"sha": "f3663185e6895ada3733c7ae5528f6ea7340d421", "filename": "gcc/stor-layout.c", "status": "modified", "additions": 27, "deletions": 1, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d475ac5b42807b88d77b27bb3762459e6348693/gcc%2Fstor-layout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d475ac5b42807b88d77b27bb3762459e6348693/gcc%2Fstor-layout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstor-layout.c?ref=0d475ac5b42807b88d77b27bb3762459e6348693", "patch": "@@ -173,6 +173,32 @@ variable_size (tree size)\n /* An array of functions used for self-referential size computation.  */\n static GTY(()) VEC (tree, gc) *size_functions;\n \n+/* Look inside EXPR into simple arithmetic operations involving constants.\n+   Return the outermost non-arithmetic or non-constant node.  */\n+\n+static tree\n+skip_simple_constant_arithmetic (tree expr)\n+{\n+  while (true)\n+    {\n+      if (UNARY_CLASS_P (expr))\n+\texpr = TREE_OPERAND (expr, 0);\n+      else if (BINARY_CLASS_P (expr))\n+\t{\n+\t  if (TREE_CONSTANT (TREE_OPERAND (expr, 1)))\n+\t    expr = TREE_OPERAND (expr, 0);\n+\t  else if (TREE_CONSTANT (TREE_OPERAND (expr, 0)))\n+\t    expr = TREE_OPERAND (expr, 1);\n+\t  else\n+\t    break;\n+\t}\n+      else\n+\tbreak;\n+    }\n+\n+  return expr;\n+}\n+\n /* Similar to copy_tree_r but do not copy component references involving\n    PLACEHOLDER_EXPRs.  These nodes are spotted in find_placeholder_in_expr\n    and substituted in substitute_in_expr.  */\n@@ -241,7 +267,7 @@ self_referential_size (tree size)\n   VEC(tree,gc) *args = NULL;\n \n   /* Do not factor out simple operations.  */\n-  t = skip_simple_arithmetic (size);\n+  t = skip_simple_constant_arithmetic (size);\n   if (TREE_CODE (t) == CALL_EXPR)\n     return size;\n "}, {"sha": "12d4bef3239eabb9ab4892e72fcdba0bee18cca5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d475ac5b42807b88d77b27bb3762459e6348693/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d475ac5b42807b88d77b27bb3762459e6348693/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0d475ac5b42807b88d77b27bb3762459e6348693", "patch": "@@ -1,3 +1,8 @@\n+2010-10-20  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/discr25.adb: New test.\n+\t* gnat.dg/discr25_pkg.ad[sb]: New helper.\n+\n 2010-10-20  Olivier Hainque  <hainque@adacore.com>\n \n \t* gcc.target/powerpc/ehreturn.c: New test."}, {"sha": "a1effea3e63807804ce81de5e5c8f2f416ae93ee", "filename": "gcc/testsuite/gnat.dg/discr25.adb", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d475ac5b42807b88d77b27bb3762459e6348693/gcc%2Ftestsuite%2Fgnat.dg%2Fdiscr25.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d475ac5b42807b88d77b27bb3762459e6348693/gcc%2Ftestsuite%2Fgnat.dg%2Fdiscr25.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fdiscr25.adb?ref=0d475ac5b42807b88d77b27bb3762459e6348693", "patch": "@@ -0,0 +1,11 @@\n+-- { dg-do compile }\n+\n+with Discr25_Pkg;\n+\n+procedure Discr25 (N : Natural) is\n+\n+  package Test_Set is new Discr25_Pkg (N);\n+\n+begin\n+  null;\n+end;"}, {"sha": "59792fdcb1ebc65c39c6d1d4ccbf8a97415abce3", "filename": "gcc/testsuite/gnat.dg/discr25_pkg.adb", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d475ac5b42807b88d77b27bb3762459e6348693/gcc%2Ftestsuite%2Fgnat.dg%2Fdiscr25_pkg.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d475ac5b42807b88d77b27bb3762459e6348693/gcc%2Ftestsuite%2Fgnat.dg%2Fdiscr25_pkg.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fdiscr25_pkg.adb?ref=0d475ac5b42807b88d77b27bb3762459e6348693", "patch": "@@ -0,0 +1,24 @@\n+package body Discr25_Pkg is\n+\n+  type Arr1 is array (Natural range <>) of Integer;\n+\n+  B : constant Boolean := N > 0;\n+\n+  type Arr2 is array (True .. B) of Integer;\n+\n+  type Obj_T (Size_Max : Natural) is record\n+    A2 : Arr2;\n+    A1 : Arr1 (0 .. Size_Max);\n+  end record;\n+\n+  procedure Proc1 (Set : in out T) is\n+  begin\n+    Set := new Obj_T'(Set.all);\n+  end;\n+\n+  procedure Proc2 (Obj : in out T; L : Natural) is\n+  begin\n+    Obj := new Obj_T (L);\n+  end;\n+\n+end Discr25_Pkg;"}, {"sha": "c09634d8c5f7185b8656f92e972ead6ab08d2d98", "filename": "gcc/testsuite/gnat.dg/discr25_pkg.ads", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d475ac5b42807b88d77b27bb3762459e6348693/gcc%2Ftestsuite%2Fgnat.dg%2Fdiscr25_pkg.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d475ac5b42807b88d77b27bb3762459e6348693/gcc%2Ftestsuite%2Fgnat.dg%2Fdiscr25_pkg.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fdiscr25_pkg.ads?ref=0d475ac5b42807b88d77b27bb3762459e6348693", "patch": "@@ -0,0 +1,15 @@\n+generic\n+\n+  N : Natural;\n+\n+package Discr25_Pkg is\n+\n+  type T is private;\n+\n+  procedure Proc1 (Set : in out T);\n+\n+private\n+  type Obj_T (Size_Max : Natural);\n+  type T is access Obj_T;\n+\n+end Discr25_Pkg;"}]}