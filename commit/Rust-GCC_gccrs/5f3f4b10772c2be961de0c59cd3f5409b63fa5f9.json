{"sha": "5f3f4b10772c2be961de0c59cd3f5409b63fa5f9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWYzZjRiMTA3NzJjMmJlOTYxZGUwYzU5Y2QzZjU0MDliNjNmYTVmOQ==", "commit": {"author": {"name": "SimplyTheOther", "email": "simplytheother@gmail.com", "date": "2020-06-26T14:02:34Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2020-11-28T21:13:17Z"}, "message": "Added M*Core target hook (or provisional one at least)", "tree": {"sha": "1ceec145c6e945a5883a2e8ceaa3f40bb2e2ceaf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1ceec145c6e945a5883a2e8ceaa3f40bb2e2ceaf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5f3f4b10772c2be961de0c59cd3f5409b63fa5f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f3f4b10772c2be961de0c59cd3f5409b63fa5f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f3f4b10772c2be961de0c59cd3f5409b63fa5f9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f3f4b10772c2be961de0c59cd3f5409b63fa5f9/comments", "author": {"login": "SimplyTheOther", "id": 19371469, "node_id": "MDQ6VXNlcjE5MzcxNDY5", "avatar_url": "https://avatars.githubusercontent.com/u/19371469?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimplyTheOther", "html_url": "https://github.com/SimplyTheOther", "followers_url": "https://api.github.com/users/SimplyTheOther/followers", "following_url": "https://api.github.com/users/SimplyTheOther/following{/other_user}", "gists_url": "https://api.github.com/users/SimplyTheOther/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimplyTheOther/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimplyTheOther/subscriptions", "organizations_url": "https://api.github.com/users/SimplyTheOther/orgs", "repos_url": "https://api.github.com/users/SimplyTheOther/repos", "events_url": "https://api.github.com/users/SimplyTheOther/events{/privacy}", "received_events_url": "https://api.github.com/users/SimplyTheOther/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0195559c0ece9d91a581330c694f5ecde5213c90", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0195559c0ece9d91a581330c694f5ecde5213c90", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0195559c0ece9d91a581330c694f5ecde5213c90"}], "stats": {"total": 25, "additions": 25, "deletions": 0}, "files": [{"sha": "b24009cee710b814c1c0b7fe035955153161c8b8", "filename": "gcc/config/mcore/mcore.h", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f3f4b10772c2be961de0c59cd3f5409b63fa5f9/gcc%2Fconfig%2Fmcore%2Fmcore.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f3f4b10772c2be961de0c59cd3f5409b63fa5f9/gcc%2Fconfig%2Fmcore%2Fmcore.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmcore%2Fmcore.h?ref=5f3f4b10772c2be961de0c59cd3f5409b63fa5f9", "patch": "@@ -49,6 +49,31 @@\n     }\t\t\t\t\t\t\t\t\t  \\\n   while (0)\n \n+#define TARGET_RUST_CPU_INFO() \\\n+  do {\t\t\t\t\t\t\t\\\n+    rust_add_target_info(\"target_arch\", \"mcore\");\t\t\\\n+    if (TARGET_M340)\t\t\t\t\t\t\t\\\n+      rust_add_target_info(\"target_feature\", \"m340\");\t\\\n+    else\t\t\t\t\t\t\t  \\\n+      rust_add_target_info(\"target_feature\", \"m210\");\t\\\n+    if (TARGET_OVERALIGN_FUNC)\t\t\t\t\t\t\\\n+      rust_add_target_info(\"target_feature\", \"4byte-functions\");\t\\\n+    if (TARGET_CG_DATA)\t\t\t\t\t\t\t\\\n+      rust_add_target_info(\"target_feature\", \"callgraph-data\");\t\\\n+    if (TARGET_DIV)\t\t\t\t\t\t\t\\\n+      rust_add_target_info(\"target_feature\", \"div\");\t\\\n+    if (TARGET_HARDLIT)\t\t\t\t\t\t\t\\\n+      rust_add_target_info(\"target_feature\", \"hardlit\");\t\\\n+    /*TODO: find way of getting no-lsim info?*/ \\\n+    if (TARGET_RELAX_IMM)\t\t\t\t\t\t\t\\\n+      rust_add_target_info(\"target_feature\", \"relax-immediates\");\t\\\n+    if (TARGET_SLOW_BYTES)\t\t\t\t\t\t\t\\\n+      rust_add_target_info(\"target_feature\", \"slow-bytes\");\t\\\n+    /*TODO: find way of defining stack-increment usefully?*/ \\\n+    if (TARGET_W_FIELD)\t\t\t\t\t\t\t\\\n+      rust_add_target_info(\"target_feature\", \"wide-bitfields\");\t\\\n+  } while (0)\n+\n #undef  CPP_SPEC\n #define CPP_SPEC \"%{m210:%{mlittle-endian:%ethe m210 does not have little endian support}}\"\n "}]}