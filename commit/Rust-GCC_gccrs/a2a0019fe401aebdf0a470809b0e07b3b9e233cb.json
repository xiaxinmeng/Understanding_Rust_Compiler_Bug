{"sha": "a2a0019fe401aebdf0a470809b0e07b3b9e233cb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTJhMDAxOWZlNDAxYWViZGYwYTQ3MDgwOWIwZTA3YjNiOWUyMzNjYg==", "commit": {"author": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2004-01-10T18:34:59Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2004-01-10T18:34:59Z"}, "message": "re PR debug/12860 (stabs register number out of range)\n\n2004-01-10  David Edelsohn  <edelsohn@gnu.org>\n            James E Wilson  <wilson@specifixinc.com>\n\n        PR debug/12860\n        * dbxout.c (dbxout_symbol): Remove initialization of\n        current_sym_code, current_sym_value, and current_sym_addr.\n        (dbxout_symbol_location): Same.\n        (dbxout_prepare_symbol): Zero current_sym_code,\n        current_sym_value, and current_sym_addr.\n\nFrom-SVN: r75644", "tree": {"sha": "f870aaec3f1de9ea9ed22e66acba25b278a32a80", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f870aaec3f1de9ea9ed22e66acba25b278a32a80"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a2a0019fe401aebdf0a470809b0e07b3b9e233cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2a0019fe401aebdf0a470809b0e07b3b9e233cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a2a0019fe401aebdf0a470809b0e07b3b9e233cb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2a0019fe401aebdf0a470809b0e07b3b9e233cb/comments", "author": null, "committer": null, "parents": [{"sha": "bb3f5384ba1d5426d1aabe684fe6688c37f50661", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb3f5384ba1d5426d1aabe684fe6688c37f50661", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb3f5384ba1d5426d1aabe684fe6688c37f50661"}], "stats": {"total": 31, "additions": 20, "deletions": 11}, "files": [{"sha": "d792845f5a4ff23d37dcd87835788586665373c2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2a0019fe401aebdf0a470809b0e07b3b9e233cb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2a0019fe401aebdf0a470809b0e07b3b9e233cb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a2a0019fe401aebdf0a470809b0e07b3b9e233cb", "patch": "@@ -1,3 +1,13 @@\n+2004-01-10  David Edelsohn  <edelsohn@gnu.org>\n+\t    James E Wilson  <wilson@specifixinc.com>\n+\n+\tPR debug/12860\n+\t* dbxout.c (dbxout_symbol): Remove initialization of\n+\tcurrent_sym_code, current_sym_value, and current_sym_addr.\n+\t(dbxout_symbol_location): Same.\n+\t(dbxout_prepare_symbol): Zero current_sym_code,\n+\tcurrent_sym_value, and current_sym_addr.\n+\n 2004-01-10  Richard Sandiford  <rsandifo@redhat.com>\n \n \t* tree.c (get_unwidened): Reorder conditions so that the null pointer\n@@ -16,8 +26,8 @@\n 2004-01-09  Andrew Pinski <pinskia@physics.uc.edu>\n \n \tPR debug/11231\n-\t* dbxout.c (dbxout_type_fields): Return if any item is error_mark_node or the\n-\ttype is error_mark_node.\n+\t* dbxout.c (dbxout_type_fields): Return if any item is\n+\terror_mark_node or the type is error_mark_node.\n \n 2004-01-09  Geoffrey Keating  <geoffk@apple.com>\n "}, {"sha": "dc0caf71ab879f60d77ddf017a49684ee694ee98", "filename": "gcc/dbxout.c", "status": "modified", "additions": 8, "deletions": 9, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2a0019fe401aebdf0a470809b0e07b3b9e233cb/gcc%2Fdbxout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2a0019fe401aebdf0a470809b0e07b3b9e233cb/gcc%2Fdbxout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdbxout.c?ref=a2a0019fe401aebdf0a470809b0e07b3b9e233cb", "patch": "@@ -2047,11 +2047,6 @@ dbxout_symbol (tree decl, int local ATTRIBUTE_UNUSED)\n   /* \"Intercept\" dbxout_symbol() calls like we do all debug_hooks.  */\n   ++debug_nesting;\n \n-  /* Cast avoids warning in old compilers.  */\n-  current_sym_code = (STAB_CODE_TYPE) 0;\n-  current_sym_value = 0;\n-  current_sym_addr = 0;\n-\n   /* Ignore nameless syms, but don't ignore type tags.  */\n \n   if ((DECL_NAME (decl) == 0 && TREE_CODE (decl) != TYPE_DECL)\n@@ -2578,10 +2573,6 @@ dbxout_symbol_location (tree decl, tree type, const char *suffix, rtx home)\n       else\n \tdbxout_symbol_location (decl, subtype, \"$real\", XEXP (home, 0));\n \n-      /* Cast avoids warning in old compilers.  */\n-      current_sym_code = (STAB_CODE_TYPE) 0;\n-      current_sym_value = 0;\n-      current_sym_addr = 0;\n       dbxout_prepare_symbol (decl);\n \n       if (WORDS_BIG_ENDIAN)\n@@ -2649,6 +2640,14 @@ dbxout_prepare_symbol (tree decl ATTRIBUTE_UNUSED)\n \n   dbxout_source_file (asmfile, filename);\n #endif\n+\n+  /* Initialize variables used to communicate each symbol's debug\n+     information to dbxout_finish_symbol with zeroes.  */\n+\n+  /* Cast avoids warning in old compilers.  */\n+  current_sym_code = (STAB_CODE_TYPE) 0;\n+  current_sym_value = 0;\n+  current_sym_addr = 0;\n }\n \n static void"}]}