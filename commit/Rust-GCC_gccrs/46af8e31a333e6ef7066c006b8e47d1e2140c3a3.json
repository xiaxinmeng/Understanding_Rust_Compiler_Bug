{"sha": "46af8e31a333e6ef7066c006b8e47d1e2140c3a3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDZhZjhlMzFhMzMzZTZlZjcwNjZjMDA2YjhlNDdkMWUyMTQwYzNhMw==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1996-12-24T01:59:00Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1996-12-24T01:59:00Z"}, "message": "(FUNCTION_ARG_REGNO_P): Correct for TARGET_SOFT_FLOAT and\nTARGET_FLOAT64 cases.\n\nFrom-SVN: r13341", "tree": {"sha": "5a0e363efddce92152bad38f83139a6dd17f0395", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5a0e363efddce92152bad38f83139a6dd17f0395"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/46af8e31a333e6ef7066c006b8e47d1e2140c3a3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46af8e31a333e6ef7066c006b8e47d1e2140c3a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/46af8e31a333e6ef7066c006b8e47d1e2140c3a3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46af8e31a333e6ef7066c006b8e47d1e2140c3a3/comments", "author": null, "committer": null, "parents": [{"sha": "64ed0f40d3b4dbeaaa00318808ef93e9701a6ebd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64ed0f40d3b4dbeaaa00318808ef93e9701a6ebd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/64ed0f40d3b4dbeaaa00318808ef93e9701a6ebd"}], "stats": {"total": 14, "additions": 9, "deletions": 5}, "files": [{"sha": "df526545213850561e6612059ea5f2f24c18d1db", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46af8e31a333e6ef7066c006b8e47d1e2140c3a3/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46af8e31a333e6ef7066c006b8e47d1e2140c3a3/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=46af8e31a333e6ef7066c006b8e47d1e2140c3a3", "patch": "@@ -2088,11 +2088,15 @@ extern struct mips_frame_info current_frame_info;\n \n #define FUNCTION_VALUE_REGNO_P(N) ((N) == GP_RETURN || (N) == FP_RETURN)\n \n-/* 1 if N is a possible register number for function argument passing.  */\n-\n-#define FUNCTION_ARG_REGNO_P(N) (((N) >= GP_ARG_FIRST && (N) <= GP_ARG_LAST)   \\\n-\t\t\t\t || ((N) >= FP_ARG_FIRST && (N) <= FP_ARG_LAST \\\n-\t\t\t\t     && (0 == (N) % 2)))\n+/* 1 if N is a possible register number for function argument passing.\n+   We have no FP argument registers when soft-float.  When FP registers\n+   are 32 bits, we can't directly reference the odd numbered ones.  */\n+\n+#define FUNCTION_ARG_REGNO_P(N)\t\t\t\t\t\\\n+  (((N) >= GP_ARG_FIRST && (N) <= GP_ARG_LAST)\t\t\t\\\n+   || (! TARGET_SOFT_FLOAT\t\t\t\t\t\\\n+       && ((N) >= FP_ARG_FIRST && (N) <= FP_ARG_LAST)\t\t\\\n+       && (TARGET_FLOAT64 || (0 == (N) % 2))))\n \n /* A C expression which can inhibit the returning of certain function\n    values in registers, based on the type of value.  A nonzero value says"}]}