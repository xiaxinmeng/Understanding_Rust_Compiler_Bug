{"sha": "db0098253456d221f5afaf3281d87790acfa7f7c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGIwMDk4MjUzNDU2ZDIyMWY1YWZhZjMyODFkODc3OTBhY2ZhN2Y3Yw==", "commit": {"author": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2001-02-25T01:06:15Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2001-02-25T01:06:15Z"}, "message": "config.gcc: Expunge references to alpha/t-pe...\n\n\t* config.gcc: Expunge references to alpha/t-pe, pa/t-openbsd,\n\tx-linux-aout, i386/t-go32, t-osf, m68k/x-m68kv,\n\tns32k/xm-netbsd.h, rs6000/t-openbsd, rs6000/t-xnewas,\n\trs6000/x-aix41-gld.  These are nonexistent, empty, or obsolete.\n\n\t(i750a-*-*): Error here if hosting on i750a.\n\t(alpha*-*-winnt*, ix86-*-winnt3*): Remove stanzas entirely.\n\n\t* x-linux-aout, xm-freebsd.h, i386/beos-pe.h, ns32k/xm-netbsd.h:\n\tRemove (empty modulo comments).\n\n\t* 1750a/xm-1750a.h, alpha/config-nt.sed, alpha/win-nt.h,\n\talpha/xm-winnt.h, i386/config-nt.sed, i386/os2.h,\n\ti386/t-winnt, i386/win-nt.h, i386/xm-freebsd.h, i386/xm-os2.h,\n\ti386/xm-winnt.h, m68k/x-alloca-c, m88k/x-dguxbcs,\n\tmips/x-netbsd, mips/x-nws3250v4, rs6000/t-xnewas,\n\trs6000/t-xrs6000, rs6000/xm-cygwin.h: Remove (obsolete)\n\n\t* i386/crtdll.h, i386/cygwin.h, i386/mingw32.h:\n\tRemove reference to winnt.h in comment.\n\t* rs6000/t-newas, rs6000/t-rs6000: Override LIBGCC1_TEST to null.\n\nFrom-SVN: r40044", "tree": {"sha": "e18bf3d9d4ec2a8c9ab38349acf4630b93b4290b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e18bf3d9d4ec2a8c9ab38349acf4630b93b4290b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/db0098253456d221f5afaf3281d87790acfa7f7c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db0098253456d221f5afaf3281d87790acfa7f7c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db0098253456d221f5afaf3281d87790acfa7f7c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db0098253456d221f5afaf3281d87790acfa7f7c/comments", "author": null, "committer": null, "parents": [{"sha": "d82a963983c76d0cc2403342dd8f78dcfd5f2b8b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d82a963983c76d0cc2403342dd8f78dcfd5f2b8b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d82a963983c76d0cc2403342dd8f78dcfd5f2b8b"}], "stats": {"total": 777, "additions": 15, "deletions": 762}, "files": [{"sha": "e5c57d9041e57f87e409052d62078ba05113608d", "filename": "gcc/config.gcc", "status": "modified", "additions": 10, "deletions": 59, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db0098253456d221f5afaf3281d87790acfa7f7c/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db0098253456d221f5afaf3281d87790acfa7f7c/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=db0098253456d221f5afaf3281d87790acfa7f7c", "patch": "@@ -316,6 +316,11 @@ case $machine in\n \tfi\n \t;;\n 1750a-*-*)\n+\t# 1750a is only supported as a target.\n+\tcase \"$build,$host\" in 1750a*,* | *,1750a* )\n+\t\techo \"*** $machine is only supported as a target\" >&2\n+\t\texit 1\n+\tesac\n \t;;\n a29k-*-bsd* | a29k-*-sym1*)\n \ttm_file=\"${tm_file} a29k/unix.h\"\n@@ -353,7 +358,7 @@ alpha-*-interix)\n \ttarget_cpu_default=\"MASK_GAS|MASK_IEEE_CONFORMANT\"\n \n \txm_file=\"alpha/xm-alpha-interix.h xm-interix.h\"\n-\txmake_file=\"x-interix alpha/t-pe\"\n+\txmake_file=x-interix\n \ttmake_file=\"alpha/t-alpha alpha/t-interix alpha/t-ieee\"\n \tif test x$enable_threads = xyes ; then\n \t\tthread_file='posix'\n@@ -472,21 +477,6 @@ alpha*-*-vxworks*)\n \tuse_collect2=yes\n \tthread_file='vxworks'\n \t;;\n-alpha*-*-winnt*)\n- \ttm_file=\"${tm_file} alpha/alpha32.h alpha/win-nt.h winnt/win-nt.h\"\n-\txm_file=\"${xm_file} config/winnt/xm-winnt.h alpha/xm-winnt.h\"\n-\ttmake_file=\"t-libc-ok alpha/t-alpha alpha/t-ieee\"\n-\txmake_file=winnt/x-winnt\n-\textra_host_objs=oldnames.o\n-\textra_gcc_objs=\"spawnv.o oldnames.o\"\n-\tif test x$gnu_ld != xyes\n-\tthen\n-\t\textra_programs=ld.exe\n-\tfi\n-\tif test x$enable_threads = xyes; then\n-\t\tthread_file='win32'\n-\tfi\n-\t;;\n alpha*-dec-vms*)\n \ttm_file=alpha/vms.h\n \txm_file=\"${xm_file} alpha/xm-vms.h\"\n@@ -685,7 +675,6 @@ hppa*-*-linux*)\n \t;;\n hppa*-*-openbsd*)\n \ttarget_cpu_default=\"MASK_PA_11\"\n-\ttmake_file=pa/t-openbsd\n \t;;\n hppa1.1-*-rtems*)\n \ttm_file=\"pa/pa-pro.h ${tm_file} pa/pa-pro-end.h libgloss.h pa/rtems.h\"\n@@ -1163,15 +1152,13 @@ i[34567]86-*-isc*)\t\t# 80386 running ISC system\n i[34567]86-*-linux*oldld*)\t# Intel 80386's running GNU/Linux\n \t\t\t\t# with a.out format using\n \t\t\t\t# pre BFD linkers\n-\txmake_file=x-linux-aout\n \ttmake_file=\"t-linux-aout i386/t-crtstuff\"\n \ttm_file=i386/linux-oldld.h\n \tgnu_ld=yes\n \tfloat_format=i386\n \t;;\n i[34567]86-*-linux*aout*)\t# Intel 80386's running GNU/Linux\n \t\t\t\t# with a.out format\n-\txmake_file=x-linux-aout\n \ttmake_file=\"t-linux-aout i386/t-crtstuff\"\n \ttm_file=i386/linux-aout.h\n \tgnu_ld=yes\n@@ -1264,7 +1251,7 @@ i[34567]86-go32-rtems*)\n \tcpu_type=i386\n \txm_file=i386/xm-go32.h\n \ttm_file=i386/go32-rtems.h\n-\ttmake_file=\"i386/t-go32 t-rtems\"\n+\ttmake_file=t-rtems\n \tif test x$enable_threads = xyes; then\n \t  thread_file='rtems'\n \tfi\n@@ -1510,22 +1497,6 @@ i[34567]86-*-interix*)\n \t\ttm_file=\"${tm_file} dbxcoff.h\"\n \tfi\n \t;;\n-i[34567]86-*-winnt3*)\n-\ttm_file=i386/win-nt.h\n-\tout_file=i386/i386.c\n-\txm_file=\"xm-winnt.h ${xm_file}\"\n-\txmake_file=winnt/x-winnt\n-\ttmake_file=i386/t-winnt\n-\textra_host_objs=\"winnt.o oldnames.o\"\n-\textra_gcc_objs=\"spawnv.o oldnames.o\"\n-\tif test x$gnu_ld != xyes\n-\tthen\n-\t\textra_programs=ld.exe\n-\tfi\n-\tif test x$enable_threads = xyes; then\n-\t\tthread_file='win32'\n-\tfi\n-\t;;\n i[34567]86-dg-dgux*)\n \txm_file=\"xm-alloca.h ${xm_file}\"\n \txm_defines=\"USG POSIX\"\n@@ -1557,7 +1528,6 @@ i860-*-mach*)\n i860-*-osf*)\t\t\t# Intel Paragon XP/S, OSF/1AD\n \ttm_file=\"${tm_file} svr3.h i860/paragon.h\"\n \txm_defines=\"USG SVR3\"\n-\ttmake_file=t-osf\n \t;;\n i860-*-sysv3*)\n \ttm_file=\"${tm_file} svr3.h i860/sysv3.h\"\n@@ -1841,7 +1811,6 @@ m68k-ccur-rtu)\n \t;;\n m68k-hp-bsd4.4*)\t\t# HP 9000/3xx running 4.4bsd\n \ttm_file=m68k/hp3bsd44.h\n-\txmake_file=m68k/x-hp3bsd44\n \tuse_collect2=yes\n \textra_headers=math-68881.h\n \tfloat_format=m68k\n@@ -2020,7 +1989,6 @@ m68k*-*-openbsd*)\n m68k-*-sysv3*)\t\t\t# Motorola m68k's running system V.3\n \txm_file=\"xm-alloca.h ${xm_file}\"\n \txm_defines=USG\n-\txmake_file=m68k/x-m68kv\n \textra_parts=\"crtbegin.o crtend.o\"\n \textra_headers=math-68881.h\n \tfloat_format=m68k\n@@ -2704,7 +2672,6 @@ ns32k-pc532-minix*)\n \t;;\n ns32k-*-netbsd*)\n \ttm_file=ns32k/netbsd.h\n-\txm_file=\"ns32k/xm-netbsd.h ${xm_file}\"\n \t# On NetBSD, the headers are already okay, except for math.h.\n \ttmake_file=t-netbsd\n \tuse_collect2=yes\n@@ -2739,7 +2706,7 @@ romp-*-openbsd*)\n \t# Nothing special\n \t;;\n powerpc-*-openbsd*)\n-\ttmake_file=\"${tmake_file} rs6000/t-rs6000 rs6000/t-openbsd\"\n+\ttmake_file=\"${tmake_file} rs6000/t-rs6000\"\n \t;;\n powerpc-*-beos*)\n \tcpu_type=rs6000\n@@ -2878,29 +2845,13 @@ rs6000-ibm-aix3.[01]*)\n \t;;\n rs6000-ibm-aix3.2.[456789]* | powerpc-ibm-aix3.2.[456789]*)\n \ttm_file=\"${tm_file} rs6000/aix.h rs6000/aix3newas.h\"\n-\tif test x$host != x$target\n-\tthen\n-\t\ttmake_file=rs6000/t-xnewas\n-\telse\n-\t\ttmake_file=rs6000/t-newas\n-\tfi\n+\ttmake_file=rs6000/t-newas\n \tfloat_format=none\n \tuse_collect2=yes\n \t;;\n rs6000-ibm-aix4.[12]* | powerpc-ibm-aix4.[12]*)\n \ttm_file=\"${tm_file} rs6000/aix.h rs6000/aix41.h\"\n-\tif test x$host != x$target\n-\tthen\n-\t\ttmake_file=rs6000/t-xnewas\n-\telse\n-\t\ttmake_file=rs6000/t-newas\n-\tfi\n-\tif test \"$gnu_ld\" = yes\n-\tthen\n-\t\txmake_file=rs6000/x-aix41-gld\n-\telse\n-\t\ttmake_file='rs6000/t-newas'\n-\tfi\n+\ttmake_file=rs6000/t-newas\n \txmake_file=rs6000/x-aix41\n \tfloat_format=none\n \tuse_collect2=yes"}, {"sha": "69803ce0ed0181c7513401ece5fb1269d666640c", "filename": "gcc/config/1750a/xm-1750a.h", "status": "removed", "additions": 0, "deletions": 23, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d82a963983c76d0cc2403342dd8f78dcfd5f2b8b/gcc%2Fconfig%2F1750a%2Fxm-1750a.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d82a963983c76d0cc2403342dd8f78dcfd5f2b8b/gcc%2Fconfig%2F1750a%2Fxm-1750a.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2F1750a%2Fxm-1750a.h?ref=d82a963983c76d0cc2403342dd8f78dcfd5f2b8b", "patch": "@@ -1,23 +0,0 @@\n-/* Configuration for GNU C-compiler for MIL-STD-1750a.\n-   Copyright (C) 1995 Free Software Foundation, Inc.\n-\n- This file is part of GNU CC.\n-\n- GNU CC is free software; you can redistribute it and/or modify\n- it under the terms of the GNU General Public License as published by\n- the Free Software Foundation; either version 2, or (at your option)\n- any later version.\n-\n- GNU CC is distributed in the hope that it will be useful,\n- but WITHOUT ANY WARRANTY; without even the implied warranty of\n- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n- GNU General Public License for more details.\n-\n- You should have received a copy of the GNU General Public License\n- along with GNU CC; see the file COPYING.  If not, write to\n- the Free Software Foundation, 59 Temple Place - Suite 330,\n- Boston, MA 02111-1307, USA.\n-\n-*/\n-\n-#error Gcc cannot run on a 1750a due to size problems!"}, {"sha": "62a85fbc28659979a2f77ec8423b454f29e21574", "filename": "gcc/config/alpha/config-nt.sed", "status": "removed", "additions": 0, "deletions": 33, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d82a963983c76d0cc2403342dd8f78dcfd5f2b8b/gcc%2Fconfig%2Falpha%2Fconfig-nt.sed", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d82a963983c76d0cc2403342dd8f78dcfd5f2b8b/gcc%2Fconfig%2Falpha%2Fconfig-nt.sed", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Fconfig-nt.sed?ref=d82a963983c76d0cc2403342dd8f78dcfd5f2b8b", "patch": "@@ -1,33 +0,0 @@\n-/^Makefile/,/^\trm -f config.run/d\n-s/rm -f/del/\n-s/|| cp/|| copy/\n-/^config.status/,/\tfi/d\n-s/config.status//g\n-s/\\/dev\\/null/NUL/g\n-s/$(srcdir)\\/c-parse/c-parse/g\n-s/$(srcdir)\\/c-gperf/c-gperf/g\n-/^multilib.h/ s/multilib/not-multilib/\n-/^target=/ c\\\n-target=winnt3.5\n-/^xmake_file=/ d\n-/^tmake_file=/ d\n-/^out_file/ c\\\n-out_file=config/alpha/alpha.c\n-/^out_object_file/ c\\\n-out_object_file=alpha.obj\n-/^md_file/ c\\\n-md_file=config/alpha/alpha.md\n-/^tm_file/ c\\\n-tm_file=config/alpha/alpha.h config/alpha/winnt.h\n-/^build_xm_file/ c\\\n-build_xm_file=config/alpha/xm-alpha.h config/winnt/xm-winnt.h config/alpha/xm-winnt.h\n-/^host_xm_file/ c\\\n-host_xm_file=config/alpha/xm-alpha.h config/winnt/xm-winnt.h config/alpha/xm-winnt.h\n-/^####target/ i\\\n-CC = cl \\\n-CLIB = libc.lib kernel32.lib \\\n-CFLAGS = -Dalpha -DWIN32 -D_WIN32 -D_ALPHA_ -D_M_ALPHA \\\\\\\n- -DALMOST_STDC \\\n-LDFLAGS = -subsystem:console -entry:mainCRTStartup \\\\\\\n- -stack:1000000,1000 \\\n-"}, {"sha": "6e24d1d161e2ffc9059e18014a5a6c0888cc9813", "filename": "gcc/config/alpha/win-nt.h", "status": "removed", "additions": 0, "deletions": 62, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d82a963983c76d0cc2403342dd8f78dcfd5f2b8b/gcc%2Fconfig%2Falpha%2Fwin-nt.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d82a963983c76d0cc2403342dd8f78dcfd5f2b8b/gcc%2Fconfig%2Falpha%2Fwin-nt.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Fwin-nt.h?ref=d82a963983c76d0cc2403342dd8f78dcfd5f2b8b", "patch": "@@ -1,62 +0,0 @@\n-/* Definitions of target machine for GNU compiler, for DEC Alpha\n-   running Windows/NT.\n-   Copyright (C) 1995, 1996, 1998 Free Software Foundation, Inc.\n-   Contributed by Richard Kenner (kenner@vlsi1.ultra.nyu.edu)\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-#undef TARGET_DEFAULT\n-#define TARGET_DEFAULT (MASK_FP | MASK_FPREGS)\n-\n-/* Names to predefine in the preprocessor for this target machine.  */\n-\n-#undef CPP_PREDEFINES\n-#define CPP_PREDEFINES \"-DWIN32 -D_WIN32 -DWINNT -D__STDC__=0 -DALMOST_STDC \\\n--D_M_ALPHA -D_ALPHA_ -D_LONGLONG -D__unaligned= -D__stdcall= -Asystem=winnt\"\n-\n-#undef ASM_SPEC\n-#undef ASM_FINAL_SPEC\n-#define ASM_SPEC \"-nopp -nologo %{g:-Zi}\"\n-\n-#undef WCHAR_TYPE\n-#define WCHAR_TYPE \"short unsigned int\"\n-#undef WCHAR_TYPE_SIZE\n-#define WCHAR_TYPE_SIZE 16\n-\n-/* We can't do any debugging.  */\n-#undef SDB_DEBUGGING_INFO\n-#undef DBX_DEBUGGING_INFO\n-#undef MIPS_DEBUGGING_INFO\n-\n-#undef ASM_FILE_START\n-#define ASM_FILE_START(FILE)\t\t\t\t\t\\\n-{\t\t\t\t\t\t\t\t\\\n-  alpha_write_verstamp (FILE);\t\t\t\t\t\\\n-  fprintf (FILE, \"\\t.set noreorder\\n\");\t\t\t\t\\\n-  fprintf (FILE, \"\\t.set volatile\\n\");                          \\\n-  fprintf (FILE, \"\\t.set noat\\n\");\t\t\t\t\\\n-  fprintf (FILE, \"\\t.globl\\t__fltused\\n\");\t\t\t\\\n-  ASM_OUTPUT_SOURCE_FILENAME (FILE, main_input_filename);\t\\\n-}\n-\n-#undef LIB_SPEC\n-#define LIB_SPEC \"%{mwindows:-subsystem windows -e _WinMainCRTStartup \\\n-  USER32.LIB%s GDI32.LIB%s COMDLG32.LIB%s WINSPOOL.LIB%s} \\\n- %{!mwindows:-subsystem console -e _mainCRTStartup} \\\n- %{mcrtmt:LIBCMT.LIB%s KERNEL32.LIB%s} %{!mcrtmt:LIBC.LIB%s KERNEL32.LIB%s} \\\n- %{v}\""}, {"sha": "f84be8d0586c9dcdbe35d1d02fc56301897fafad", "filename": "gcc/config/alpha/xm-winnt.h", "status": "removed", "additions": 0, "deletions": 34, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d82a963983c76d0cc2403342dd8f78dcfd5f2b8b/gcc%2Fconfig%2Falpha%2Fxm-winnt.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d82a963983c76d0cc2403342dd8f78dcfd5f2b8b/gcc%2Fconfig%2Falpha%2Fxm-winnt.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Fxm-winnt.h?ref=d82a963983c76d0cc2403342dd8f78dcfd5f2b8b", "patch": "@@ -1,34 +0,0 @@\n-/* Configuration for GNU compiler for an Alpha running Windows NT 3.x.\n-   Copyright (C) 1995, 1996 Free Software Foundation, Inc.\n-   Contributed by Douglas B. Rupp (drupp@cs.washington.edu)\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-#undef HOST_BITS_PER_LONG\n-#define\tHOST_BITS_PER_LONG\t32\n-\n-#undef POSIX\n-\n-#define access _access\n-#define close _close\n-#define mktemp _mktemp\n-#define open _open\n-#define read _read\n-#define write _write\n-\n-#undef HAS_INIT_SECTION"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "gcc/config/i386/beos-pe.h", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d82a963983c76d0cc2403342dd8f78dcfd5f2b8b/gcc%2Fconfig%2Fi386%2Fbeos-pe.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d82a963983c76d0cc2403342dd8f78dcfd5f2b8b/gcc%2Fconfig%2Fi386%2Fbeos-pe.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fbeos-pe.h?ref=d82a963983c76d0cc2403342dd8f78dcfd5f2b8b"}, {"sha": "6c86b27e99cef0f280c96d38886a0dcf7938a9fe", "filename": "gcc/config/i386/config-nt.sed", "status": "removed", "additions": 0, "deletions": 38, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d82a963983c76d0cc2403342dd8f78dcfd5f2b8b/gcc%2Fconfig%2Fi386%2Fconfig-nt.sed", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d82a963983c76d0cc2403342dd8f78dcfd5f2b8b/gcc%2Fconfig%2Fi386%2Fconfig-nt.sed", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fconfig-nt.sed?ref=d82a963983c76d0cc2403342dd8f78dcfd5f2b8b", "patch": "@@ -1,38 +0,0 @@\n-/^Makefile/,/^\trm -f config.run/d\n-s/rm -f/del/\n-s/|| cp/|| copy/\n-/^config.status/,/\tfi/d\n-s/config.status//g\n-s/\\/dev\\/null/NUL/g\n-s/$(srcdir)\\/c-parse/c-parse/g\n-s/$(srcdir)\\/c-gperf/c-gperf/g\n-/^multilib.h/ s/multilib/not-multilib/\n-/^target=/ c\\\n-target=winnt3.5\n-/^xmake_file=/ d\n-/^tmake_file=/ d\n-/^out_file/ c\\\n-out_file=config/i386/i386.c\n-/^out_object_file/ c\\\n-out_object_file=i386.obj\n-/^md_file/ c\\\n-md_file=config/i386/i386.md\n-/^tm_file/ c\\\n-tm_file=config/i386/win-nt.h\n-/^build_xm_file/ c\\\n-build_xm_file=config/i386/xm-winnt.h\n-/^host_xm_file/ c\\\n-host_xm_file=config/i386/xm-winnt.h\n-/^####target/ i\\\n-CC = cl \\\n-CLIB = libc.lib kernel32.lib \\\n-CFLAGS = -Di386 -DWIN32 -D_WIN32 -D_M_IX86=300 -D_X86_=1 \\\\\\\n- -DALMOST_STDC -D_MSC_VER=800 \\\n-LDFLAGS = -align:0x1000 -subsystem:console -entry:mainCRTStartup \\\\\\\n- -stack:1000000,1000 \\\n-\\\n-EXTRA_OBJS=winnt.obj \\\n-winnt.obj: $(srcdir)/config/i386/winnt.c \\\n-\\\t$(CC) $(CFLAGS) \\\\\\\n-\\ \t-I. -I$(srcdir) -I$(srcdir)/config -c $(srcdir)/config/i386/winnt.c \\\n-"}, {"sha": "ce35ad0c675161776e120c1f76a936194cebc0af", "filename": "gcc/config/i386/crtdll.h", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db0098253456d221f5afaf3281d87790acfa7f7c/gcc%2Fconfig%2Fi386%2Fcrtdll.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db0098253456d221f5afaf3281d87790acfa7f7c/gcc%2Fconfig%2Fi386%2Fcrtdll.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fcrtdll.h?ref=db0098253456d221f5afaf3281d87790acfa7f7c", "patch": "@@ -1,7 +1,5 @@\n /* Operating system specific defines to be used when targeting GCC for\n-   hosting on Windows32, using GNU tools and the Windows32 API Library,\n-   as distinct from winnt.h, which is used to build GCC for use with a\n-   windows style library and tool set and uses the Microsoft tools.\n+   hosting on Windows32, using GNU tools and the Windows32 API Library.\n    This variant uses CRTDLL.DLL insted of MSVCRTDLL.DLL.\n    Copyright (C) 1998, 1999, 2000 Free Software Foundation, Inc.\n "}, {"sha": "94fbcecc513c3da14a393d76340c0956df314105", "filename": "gcc/config/i386/cygwin.h", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db0098253456d221f5afaf3281d87790acfa7f7c/gcc%2Fconfig%2Fi386%2Fcygwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db0098253456d221f5afaf3281d87790acfa7f7c/gcc%2Fconfig%2Fi386%2Fcygwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fcygwin.h?ref=db0098253456d221f5afaf3281d87790acfa7f7c", "patch": "@@ -1,7 +1,5 @@\n /* Operating system specific defines to be used when targeting GCC for\n-   hosting on Windows NT 3.x, using a Unix style C library and tools,\n-   as distinct from winnt.h, which is used to build GCC for use with a\n-   windows style library and tool set and uses the Microsoft tools.\n+   hosting on Windows32, using a Unix style C library and tools.\n    Copyright (C) 1995, 1996, 1997, 1998, 1999, 2000\n    Free Software Foundation, Inc.\n "}, {"sha": "3958696e8dc1dc9fce62fefdf907c32ec3a86663", "filename": "gcc/config/i386/mingw32.h", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db0098253456d221f5afaf3281d87790acfa7f7c/gcc%2Fconfig%2Fi386%2Fmingw32.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db0098253456d221f5afaf3281d87790acfa7f7c/gcc%2Fconfig%2Fi386%2Fmingw32.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fmingw32.h?ref=db0098253456d221f5afaf3281d87790acfa7f7c", "patch": "@@ -1,7 +1,5 @@\n /* Operating system specific defines to be used when targeting GCC for\n-   hosting on Windows32, using GNU tools and the Windows32 API Library,\n-   as distinct from winnt.h, which is used to build GCC for use with a\n-   windows style library and tool set and uses the Microsoft tools.\n+   hosting on Windows32, using GNU tools and the Windows32 API Library.\n    Copyright (C) 1997, 1998, 1999, 2000 Free Software Foundation, Inc.\n \n This file is part of GNU CC."}, {"sha": "8bbab361f98f9577d66a9c6d025b168c3b2b230b", "filename": "gcc/config/i386/os2.h", "status": "removed", "additions": 0, "deletions": 76, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d82a963983c76d0cc2403342dd8f78dcfd5f2b8b/gcc%2Fconfig%2Fi386%2Fos2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d82a963983c76d0cc2403342dd8f78dcfd5f2b8b/gcc%2Fconfig%2Fi386%2Fos2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fos2.h?ref=d82a963983c76d0cc2403342dd8f78dcfd5f2b8b", "patch": "@@ -1,76 +0,0 @@\n-/* Definitions of target machine for GNU compiler\n-   for an Intel i386 or later processor running OS/2 2.x.\n-   Copyright (C) 1993, 1994, 1995 Free Software Foundation, Inc.\n-   Contributed by Samuel Figueroa (figueroa@cs.nyu.edu)\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-#ifndef DEFAULT_TARGET_MACHINE\n-#define DEFAULT_TARGET_MACHINE \"i386-os2\"\n-#endif\n-#ifndef LINK_SPEC\n-#define LINK_SPEC \"/st:1048576/pm:vio/noi/a:16/e/bas:65536/nol\"\n-#endif\n-#ifndef LIB_SPEC\n-#define LIB_SPEC \"libgcc libc\"\n-#endif\n-#ifndef STARTFILE_SPEC\n-#define STARTFILE_SPEC \"libcrt.lib\"\n-#endif\n-#ifndef MD_EXEC_PREFIX\n-#define MD_EXEC_PREFIX \"\\\\gcc\\\\bin\\\\\"\n-#endif\n-#ifndef STANDARD_STARTFILE_PREFIX\n-#define STANDARD_STARTFILE_PREFIX \"\\\\gcc\\\\lib\\\\\"\n-#endif\n-#ifndef LOCAL_INCLUDE_DIR\n-#define LOCAL_INCLUDE_DIR \"\\\\gcc\\\\include\"\n-#endif\n-\n-#define YES_UNDERSCORES\n-#include \"i386/gstabs.h\"\n-\n-#define USE_COLLECT\n-\n-#define BIGGEST_FIELD_ALIGNMENT \\\n-  (maximum_field_alignment ? maximum_field_alignment : 32)\n-\n-extern int maximum_field_alignment;\n-\n-#undef PCC_BITFIELD_TYPE_MATTERS\n-#define PCC_BITFIELD_TYPE_MATTERS (maximum_field_alignment == 0)\n-\n-/* Define this macro if it is advisable to hold scalars in registers\n-   in a wider mode than that declared by the program.  In such cases,\n-   the value is constrained to be within the bounds of the declared\n-   type, but kept valid in the wider mode.  The signedness of the\n-   extension may differ from that of the type.  */\n-\n-#define PROMOTE_MODE(MODE,UNSIGNEDP,TYPE)  \\\n-  if (GET_MODE_CLASS (MODE) == MODE_INT         \\\n-      && GET_MODE_SIZE (MODE) < UNITS_PER_WORD) \\\n-      (MODE) = SImode;\n-\n-/* Define this if function arguments should also be promoted using the above\n-   procedure.  */\n-\n-#define PROMOTE_FUNCTION_ARGS\n-\n-/* Likewise, if the function return value is promoted.  */\n-\n-#define PROMOTE_FUNCTION_RETURN"}, {"sha": "50e0566b3df2ac91de85ce33a3fd6b0a2178058b", "filename": "gcc/config/i386/t-winnt", "status": "removed", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d82a963983c76d0cc2403342dd8f78dcfd5f2b8b/gcc%2Fconfig%2Fi386%2Ft-winnt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d82a963983c76d0cc2403342dd8f78dcfd5f2b8b/gcc%2Fconfig%2Fi386%2Ft-winnt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Ft-winnt?ref=d82a963983c76d0cc2403342dd8f78dcfd5f2b8b", "patch": "@@ -1,6 +0,0 @@\n-winnt.o: $(srcdir)/config/i386/winnt.c $(RTL_H) $(TREE_H)\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $(srcdir)/config/i386/winnt.c\n-oldnames.o: $(srcdir)/config/winnt/oldnames.c\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $(srcdir)/config/winnt/oldnames.c\n-spawnv.o: $(srcdir)/config/winnt/spawnv.c\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $(srcdir)/config/winnt/spawnv.c"}, {"sha": "ce1e5bfb2be68c6217a36c3667767ab9edf79228", "filename": "gcc/config/i386/win-nt.h", "status": "removed", "additions": 0, "deletions": 149, "changes": 149, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d82a963983c76d0cc2403342dd8f78dcfd5f2b8b/gcc%2Fconfig%2Fi386%2Fwin-nt.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d82a963983c76d0cc2403342dd8f78dcfd5f2b8b/gcc%2Fconfig%2Fi386%2Fwin-nt.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fwin-nt.h?ref=d82a963983c76d0cc2403342dd8f78dcfd5f2b8b", "patch": "@@ -1,149 +0,0 @@\n-/* Operating system specific defines to be used when targeting GCC for\n-   Windows NT 3.x on an i386.\n-   Copyright (C) 1994, 1995, 1998, 1999 Free Software Foundation, Inc.\n-   Contributed by Douglas B. Rupp (drupp@cs.washington.edu).\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA. */\n-\n-#define YES_UNDERSCORES\n-\n-#include \"i386/gas.h\"\n-\n-#ifdef CPP_PREDEFINES\n-#undef CPP_PREDEFINES\n-#endif\n-#define CPP_PREDEFINES \"-Dunix -DWIN32 -D_WIN32 \\\n-  -DWINNT -D_M_IX86=300 -D_X86_=1 -D__STDC__=0 -DALMOST_STDC -D_MSC_VER=800 \\\n-  -D__stdcall=__attribute__((__stdcall__)) \\\n-  -D__cdecl=__attribute__((__cdecl__)) \\\n-  -D_cdecl=__attribute__((__cdecl__)) \\\n-  -Asystem=unix -Asystem=winnt\"\n-\n-#define SIZE_TYPE \"unsigned int\"\n-#define PTRDIFF_TYPE \"int\"\n-#define WCHAR_UNSIGNED 1\n-#define WCHAR_TYPE_SIZE 16\n-#define WCHAR_TYPE \"short unsigned int\"\n-#undef LONG_DOUBLE_TYPE_SIZE\n-#define LONG_DOUBLE_TYPE_SIZE 64\n-\n-#undef EXTRA_SECTIONS\n-#define EXTRA_SECTIONS in_ctor, in_dtor\n-\n-#undef EXTRA_SECTION_FUNCTIONS\n-#define EXTRA_SECTION_FUNCTIONS\t\t\t\t\t\\\n-  CTOR_SECTION_FUNCTION\t\t\t\t\t\t\\\n-  DTOR_SECTION_FUNCTION\n-\n-#define CTOR_SECTION_FUNCTION\t\t\t\t\t\\\n-void\t\t\t\t\t\t\t\t\\\n-ctor_section ()\t\t\t\t\t\t\t\\\n-{\t\t\t\t\t\t\t\t\\\n-  if (in_section != in_ctor)\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\\\n-      fprintf (asm_out_file, \"\\t.section .ctor\\n\");\t\t\\\n-      in_section = in_ctor;\t\t\t\t\t\\\n-    }\t\t\t\t\t\t\t\t\\\n-}\n-\n-#define DTOR_SECTION_FUNCTION\t\t\t\t\t\\\n-void\t\t\t\t\t\t\t\t\\\n-dtor_section ()\t\t\t\t\t\t\t\\\n-{\t\t\t\t\t\t\t\t\\\n-  if (in_section != in_dtor)\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\\\n-      fprintf (asm_out_file, \"\\t.section .dtor\\n\");\t\t\\\n-      in_section = in_dtor;\t\t\t\t\t\\\n-    }\t\t\t\t\t\t\t\t\\\n-}\n-\n-#define ASM_OUTPUT_CONSTRUCTOR(FILE,NAME)\t\\\n-  do {\t\t\t\t\t\t\\\n-    ctor_section ();\t\t\t\t\\\n-    fprintf (FILE, \"%s\\t\", ASM_LONG);\t\t\\\n-    assemble_name (FILE, NAME);\t\t\t\\\n-    fprintf (FILE, \"\\n\");\t\t\t\\\n-  } while (0)\n-\n-#define ASM_OUTPUT_DESTRUCTOR(FILE,NAME)       \t\\\n-  do {\t\t\t\t\t\t\\\n-    dtor_section ();                   \t\t\\\n-    fprintf (FILE, \"%s\\t\", ASM_LONG);\t\t\\\n-    assemble_name (FILE, NAME);              \t\\\n-    fprintf (FILE, \"\\n\");\t\t\t\\\n-  } while (0)\n-\n-/* Define this macro if references to a symbol must be treated\n-   differently depending on something about the variable or\n-   function named by the symbol (such as what section it is in).\n-\n-   On i386, if using PIC, mark a SYMBOL_REF for a non-global symbol\n-   so that we may access it directly in the GOT.\n-\n-   On i386 running Windows NT, modify the assembler name with a suffix \n-   consisting of an atsign (@) followed by string of digits that represents\n-   the number of bytes of arguments passed to the function, if it has the \n-   attribute STDCALL. */\n-\n-#ifdef ENCODE_SECTION_INFO\n-#undef ENCODE_SECTION_INFO\n-#define ENCODE_SECTION_INFO(DECL) \t\t\t\t\t\\\n-do\t\t\t\t\t\t\t\t\t\\\n-  {\t\t\t\t\t\t\t\t\t\\\n-    if (flag_pic)\t\t\t\t\t\t\t\\\n-      {\t\t\t\t\t\t\t\t\t\\\n-\trtx rtl = (TREE_CODE_CLASS (TREE_CODE (DECL)) != 'd'\t\t\\\n-\t\t   ? TREE_CST_RTL (DECL) : DECL_RTL (DECL));\t\t\\\n-\tSYMBOL_REF_FLAG (XEXP (rtl, 0))\t\t\t\t\t\\\n-\t  = (TREE_CODE_CLASS (TREE_CODE (DECL)) != 'd'\t\t\t\\\n-\t     || ! TREE_PUBLIC (DECL));\t\t\t\t\t\\\n-      }\t\t\t\t\t\t\t\t\t\\\n-    if (TREE_CODE (DECL) == FUNCTION_DECL) \t\t\t\t\\\n-      if (lookup_attribute (\"stdcall\",\t\t\t\t\t\\\n-\t\t\t    TYPE_ATTRIBUTES (TREE_TYPE (DECL))))\t\\\n-        XEXP (DECL_RTL (DECL), 0) = \t\t\t\t\t\\\n-          gen_rtx_SYMBOL_REF (Pmode, gen_stdcall_suffix (DECL)); \t\\\n-  }\t\t\t\t\t\t\t\t\t\\\n-while (0)\n-#endif\n-\n-/* The global __fltused is necessary to cause the printf/scanf routines\n-   for outputting/inputting floating point numbers to be loaded.  Since this\n-   is kind of hard to detect, we just do it all the time. */\n-\n-#ifdef ASM_FILE_START\n-#undef ASM_FILE_START\n-#endif\n-#define ASM_FILE_START(FILE) \\\n-  do {\toutput_file_directive (FILE, main_input_filename);\t\\\n-        fprintf (FILE, \".global\\t__fltused\\n\");\t\t\t\\\n-  } while (0)\n-\n-/* if the switch \"-mwindows\" is passed to ld, then specify to the Microsoft\n-   linker the proper switches and libraries to build a graphical program */\n-\n-#undef LIB_SPEC\n-#define LIB_SPEC \"%{mwindows:-subsystem windows -e _WinMainCRTStartup \\\n-  USER32.LIB%s GDI32.LIB%s COMDLG32.LIB%s WINSPOOL.LIB%s} \\\n- %{!mwindows:-subsystem console -e _mainCRTStartup} \\\n- %{mcrtmt:LIBCMT.LIB%s KERNEL32.LIB%s ADVAPI32.LIB%s} \\\n- %{!mcrtmt:LIBC.LIB%s KERNEL32.LIB%s ADVAPI32.LIB%s} \\\n- %{v}\"\n-\n-#include \"winnt/win-nt.h\"\n-"}, {"sha": "007a609f263fb5e3a762cd73cf743d19ad0e0c14", "filename": "gcc/config/i386/xm-freebsd.h", "status": "removed", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d82a963983c76d0cc2403342dd8f78dcfd5f2b8b/gcc%2Fconfig%2Fi386%2Fxm-freebsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d82a963983c76d0cc2403342dd8f78dcfd5f2b8b/gcc%2Fconfig%2Fi386%2Fxm-freebsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fxm-freebsd.h?ref=d82a963983c76d0cc2403342dd8f78dcfd5f2b8b", "patch": "@@ -1,4 +0,0 @@\n-/* Configuration for GCC for Intel i386 running FreeBSD as host.  */\n-\n-#include <i386/xm-i386.h>\n-#include <xm-freebsd.h>"}, {"sha": "3c84877794c4a233a161f19c84c7599acdf6efb5", "filename": "gcc/config/i386/xm-os2.h", "status": "removed", "additions": 0, "deletions": 74, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d82a963983c76d0cc2403342dd8f78dcfd5f2b8b/gcc%2Fconfig%2Fi386%2Fxm-os2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d82a963983c76d0cc2403342dd8f78dcfd5f2b8b/gcc%2Fconfig%2Fi386%2Fxm-os2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fxm-os2.h?ref=d82a963983c76d0cc2403342dd8f78dcfd5f2b8b", "patch": "@@ -1,74 +0,0 @@\n-/* Configuration for GNU compiler\n-   for an Intel i386 or later processor running OS/2 2.x.\n-   Copyright (C) 1993, 1994, 1995, 1997, 1998, 1999 Free Software Foundation, Inc.\n-   Contributed by Samuel Figueroa (figueroa@apple.com)\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-#ifndef OS2\n-#define OS2\n-#endif\n-\n-#ifdef __IBMC__\n-#include <stdlib.h> /* this defines alloca */\n-#define USG\n-#define ONLY_INT_FIELDS\n-#define USE_PROTOTYPES 1\n-#define strcasecmp stricmp\n-#define kill(a,b) raise(b)\n-#define mktemp tmpnam\n-#else\n-#ifdef __EMX__\n-#define EMX\n-#define USG\n-#define HAVE_PUTENV\n-#define HAVE_VPRINTF\n-#define HAVE_STRERROR\n-#define strcasecmp stricmp\n-#else\n-#define ____386BSD____\n-int spawnv (int modeflag, char *path, char *argv[]);\n-int spawnvp (int modeflag, char *path, char *argv[]);\n-#endif /* __EMX__ */\n-#endif /* __IBMC__ */\n-\n-#ifndef PATH_SEPARATOR\n-#define PATH_SEPARATOR ';'\n-#endif\n-#ifndef DIR_SEPARATOR\n-#define DIR_SEPARATOR '\\\\'\n-#endif\n-#ifndef DIR_SEPARATOR_2\n-#define DIR_SEPARATOR_2 '/'\n-#endif\n-\n-/* Allow handling of drive names. */\n-#define HAVE_DOS_BASED_FILE_SYSTEM\n-\n-#define EXECUTABLE_SUFFIX \".exe\"\n-\n-/* The EMX compiler uses regular .o files */\n-#ifndef __EMX__\n-#define OBJECT_SUFFIX \".obj\"\n-#endif\n-\n-/* Tell GCC about OS/2's bit bucket. */\n-\n-#define HOST_BIT_BUCKET \"NUL\"\n-\n-#include \"i386/xm-i386.h\""}, {"sha": "d36d2cdb11edf744061f8ee212800910aeaf61a4", "filename": "gcc/config/i386/xm-winnt.h", "status": "removed", "additions": 0, "deletions": 24, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d82a963983c76d0cc2403342dd8f78dcfd5f2b8b/gcc%2Fconfig%2Fi386%2Fxm-winnt.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d82a963983c76d0cc2403342dd8f78dcfd5f2b8b/gcc%2Fconfig%2Fi386%2Fxm-winnt.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fxm-winnt.h?ref=d82a963983c76d0cc2403342dd8f78dcfd5f2b8b", "patch": "@@ -1,24 +0,0 @@\n-/* Configuration for GNU compiler\n-   for an Intel i386 or later processor running Windows NT 3.x.\n-   Copyright (C) 1994 Free Software Foundation, Inc.\n-   Contributed by Douglas B. Rupp (drupp@cs.washington.edu)\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-#include \"winnt/xm-winnt.h\"\n-#include \"i386/xm-i386.h\""}, {"sha": "3375d4218495b2c64115a4893dfba157d69fbbc5", "filename": "gcc/config/m68k/x-alloca-c", "status": "removed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d82a963983c76d0cc2403342dd8f78dcfd5f2b8b/gcc%2Fconfig%2Fm68k%2Fx-alloca-c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d82a963983c76d0cc2403342dd8f78dcfd5f2b8b/gcc%2Fconfig%2Fm68k%2Fx-alloca-c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fx-alloca-c?ref=d82a963983c76d0cc2403342dd8f78dcfd5f2b8b", "patch": "@@ -1 +0,0 @@\n-ALLOCA=alloca.o"}, {"sha": "8baf0caaf3f03e133843efaa7e8d32fb304eac04", "filename": "gcc/config/m88k/x-dguxbcs", "status": "removed", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d82a963983c76d0cc2403342dd8f78dcfd5f2b8b/gcc%2Fconfig%2Fm88k%2Fx-dguxbcs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d82a963983c76d0cc2403342dd8f78dcfd5f2b8b/gcc%2Fconfig%2Fm88k%2Fx-dguxbcs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm88k%2Fx-dguxbcs?ref=d82a963983c76d0cc2403342dd8f78dcfd5f2b8b", "patch": "@@ -1,4 +0,0 @@\n-CC = gcc\n-BISONFLAGS = -l\n-USER_H =  $(EXTRA_HEADERS) $(LANG_EXTRA_HEADERS)\n-STMP_FIXPROTO = "}, {"sha": "49a89f35d1bddd1b326951545916970c0e9b7d15", "filename": "gcc/config/mips/x-netbsd", "status": "removed", "additions": 0, "deletions": 17, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d82a963983c76d0cc2403342dd8f78dcfd5f2b8b/gcc%2Fconfig%2Fmips%2Fx-netbsd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d82a963983c76d0cc2403342dd8f78dcfd5f2b8b/gcc%2Fconfig%2Fmips%2Fx-netbsd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fx-netbsd?ref=d82a963983c76d0cc2403342dd8f78dcfd5f2b8b", "patch": "@@ -1,17 +0,0 @@\n-# Don't run fixproto\n-STMP_FIXPROTO =\n-\n-# We don't need GCC's own include files.\n-USER_H = $(srcdir)/ginclude/stdarg.h $(srcdir)/ginclude/varargs.h \\\n-\t $(srcdir)/ginclude/va-mips.h $(EXTRA_HEADERS) $(LANG_EXTRA_HEADERS)\n-\n-XLIMITS_H =\n-\n-# We don't need even the files GCC insists we need.\n-GENINCLUDES = Makefile.in\n-\n-# A lot of stuff needs to go elsewhere.\n-includedir=$(exec_prefix)/include\n-infodir=$(exec_prefix)/share/info\n-tooldir=$(libdir)/cross/$(target)\n-mandir=$(exec_prefix)/share/man/man1"}, {"sha": "4f5cf26eede7e6cec31085fdd22c364060e6020a", "filename": "gcc/config/mips/x-nws3250v4", "status": "removed", "additions": 0, "deletions": 19, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d82a963983c76d0cc2403342dd8f78dcfd5f2b8b/gcc%2Fconfig%2Fmips%2Fx-nws3250v4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d82a963983c76d0cc2403342dd8f78dcfd5f2b8b/gcc%2Fconfig%2Fmips%2Fx-nws3250v4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fx-nws3250v4?ref=d82a963983c76d0cc2403342dd8f78dcfd5f2b8b", "patch": "@@ -1,19 +0,0 @@\n-# Define CC and OLDCC as the same, so that the tests:\n-#\tif [ x\"$(OLDCC)\" = x\"$(CC)\" ] ...\n-#\n-# will succeed (if OLDCC != CC, it is assumed that GCC is\n-# being used in secondary stage builds).  We need to pass\n-# the -Wf,-XNg1500 option so the compiler can compile the\n-# G++ file cp-parse.c.  Otherwise it complains about\n-# too many case statements.  Down with fixed size tables!\n-\n-CC\t\t= $(OLDCC)\n-OLDCC\t\t= cc -Wf,-XNg1500\n-CCLIBFLAGS\t= -G 0\n-\n-ALLOCA\t\t= alloca.o\n-\n-# The bison output files are machine-indep,\n-# so different flags for a particular machine are not useful.\n-#BISONFLAGS\t= -l\n-"}, {"sha": "676b64aa137ff1e5c06e1077ccfd48b79ac8afe4", "filename": "gcc/config/ns32k/xm-netbsd.h", "status": "removed", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d82a963983c76d0cc2403342dd8f78dcfd5f2b8b/gcc%2Fconfig%2Fns32k%2Fxm-netbsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d82a963983c76d0cc2403342dd8f78dcfd5f2b8b/gcc%2Fconfig%2Fns32k%2Fxm-netbsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fns32k%2Fxm-netbsd.h?ref=d82a963983c76d0cc2403342dd8f78dcfd5f2b8b", "patch": "@@ -1,3 +0,0 @@\n-/* Configuration for GCC for ns32k running NetBSD as host.  */\n-\n-/* Nothing needs to be done */"}, {"sha": "fe858d11cfa9d077631c1cf6e88e4496a28cc1d5", "filename": "gcc/config/rs6000/t-newas", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db0098253456d221f5afaf3281d87790acfa7f7c/gcc%2Fconfig%2Frs6000%2Ft-newas", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db0098253456d221f5afaf3281d87790acfa7f7c/gcc%2Fconfig%2Frs6000%2Ft-newas", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Ft-newas?ref=db0098253456d221f5afaf3281d87790acfa7f7c", "patch": "@@ -1,6 +1,7 @@\n # Do not build libgcc1.\n LIBGCC1 =\n CROSS_LIBGCC1 =\n+LIBGCC1_TEST =\n \n # We want fine grained libraries, so use the new code to build the\n # floating point emulation libraries."}, {"sha": "5cbed6a6cd6c18d7a291ed4b1397270a29d48f18", "filename": "gcc/config/rs6000/t-rs6000", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db0098253456d221f5afaf3281d87790acfa7f7c/gcc%2Fconfig%2Frs6000%2Ft-rs6000", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db0098253456d221f5afaf3281d87790acfa7f7c/gcc%2Fconfig%2Frs6000%2Ft-rs6000", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Ft-rs6000?ref=db0098253456d221f5afaf3281d87790acfa7f7c", "patch": "@@ -1,6 +1,7 @@\n # Do not build libgcc1.\n LIBGCC1 =\n CROSS_LIBGCC1 =\n+LIBGCC1_TEST =\n \n # We want fine grained libraries, so use the new code to build the\n # floating point emulation libraries."}, {"sha": "219eaf3079f031c27ecd9522cfd1713dc33f4e1e", "filename": "gcc/config/rs6000/t-xnewas", "status": "removed", "additions": 0, "deletions": 59, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d82a963983c76d0cc2403342dd8f78dcfd5f2b8b/gcc%2Fconfig%2Frs6000%2Ft-xnewas", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d82a963983c76d0cc2403342dd8f78dcfd5f2b8b/gcc%2Fconfig%2Frs6000%2Ft-xnewas", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Ft-xnewas?ref=d82a963983c76d0cc2403342dd8f78dcfd5f2b8b", "patch": "@@ -1,59 +0,0 @@\n-# Same as t-newas, except don't build libgcc1-test.  This is because\n-# the compiler emits code to call external functions to save the\n-# arguments that are in libc, but since libgcc1-test is linked without\n-# libc, they will show up as errors.\n-LIBGCC1_TEST =\n-\n-# Do not build libgcc1.\n-LIBGCC1 =\n-CROSS_LIBGCC1 =\n-\n-# We want fine grained libraries, so use the new code to build the\n-# floating point emulation libraries.\n-FPBIT = fp-bit.c\n-DPBIT = dp-bit.c\n-\n-dp-bit.c: $(srcdir)/config/fp-bit.c\n-\tcat $(srcdir)/config/fp-bit.c > dp-bit.c\n-\n-fp-bit.c: $(srcdir)/config/fp-bit.c\n-\techo '#define FLOAT' > fp-bit.c\n-\tcat $(srcdir)/config/fp-bit.c >> fp-bit.c\n-\n-# Build the libraries for both hard and soft floating point and all of the \n-# different processor models\n-\n-MULTILIB_OPTIONS\t= msoft-float \\\n-\t\t\t  mcpu=common/mcpu=power/mcpu=powerpc\n-\n-MULTILIB_DIRNAMES\t= soft-float \\\n-\t\t\t  common power powerpc\n-\n-MULTILIB_MATCHES\t= msoft-float=mcpu?403 \\\n-\t\t\t  mcpu?power=mpower \\\n-\t\t\t  mcpu?power=mrios1 \\\n-\t\t\t  mcpu?power=mcpu?rios1 \\\n-\t\t\t  mcpu?power=mcpu?rsc \\\n-\t\t\t  mcpu?power=mcpu?rsc1 \\\n-\t\t\t  mcpu?power=mpower2 \\\n-\t\t\t  mcpu?power=mrios2 \\\n-\t\t\t  mcpu?power=mcpu=rios2 \\\n-\t\t\t  mcpu?powerpc=mcpu?601 \\\n-\t\t\t  mcpu?powerpc=mcpu?602 \\\n-\t\t\t  mcpu?powerpc=mcpu?603 \\\n-\t\t\t  mcpu?powerpc=mcpu?603e \\\n-\t\t\t  mcpu?powerpc=mcpu?604 \\\n-\t\t\t  mcpu?powerpc=mcpu?620 \\\n-\t\t\t  mcpu?powerpc=mcpu?403 \\\n-\t\t\t  mcpu?powerpc=mpowerpc \\\n-\t\t\t  mcpu?powerpc=mpowerpc-gpopt \\\n-\t\t\t  mcpu?powerpc=mpowerpc-gfxopt\n-\n-LIBGCC = stmp-multilib\n-INSTALL_LIBGCC = install-multilib\n-\n-# Aix 3.2.x needs milli.exp for -mcpu=common\n-EXTRA_PARTS = milli.exp\n-milli.exp: $(srcdir)/config/rs6000/milli.exp\n-\trm -f milli.exp\n-\tcp $(srcdir)/config/rs6000/milli.exp ./milli.exp"}, {"sha": "fc6cc602632168ce535141e10ddcc347740a7989", "filename": "gcc/config/rs6000/t-xrs6000", "status": "removed", "additions": 0, "deletions": 29, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d82a963983c76d0cc2403342dd8f78dcfd5f2b8b/gcc%2Fconfig%2Frs6000%2Ft-xrs6000", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d82a963983c76d0cc2403342dd8f78dcfd5f2b8b/gcc%2Fconfig%2Frs6000%2Ft-xrs6000", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Ft-xrs6000?ref=d82a963983c76d0cc2403342dd8f78dcfd5f2b8b", "patch": "@@ -1,29 +0,0 @@\n-# Same as t-rs6000, except don't build libgcc1-test.  This is because\n-# the compiler emits code to call external functions to save the\n-# arguments that are in libc, but since libgcc1-test is linked without\n-# libc, they will show up as errors.\n-LIBGCC1_TEST =\n-\n-# Do not build libgcc1.\n-LIBGCC1 =\n-CROSS_LIBGCC1 =\n-\n-# We want fine grained libraries, so use the new code to build the\n-# floating point emulation libraries.\n-FPBIT = fp-bit.c\n-DPBIT = dp-bit.c\n-\n-dp-bit.c: $(srcdir)/config/fp-bit.c\n-\tcat $(srcdir)/config/fp-bit.c > dp-bit.c\n-\n-fp-bit.c: $(srcdir)/config/fp-bit.c\n-\techo '#define FLOAT' > fp-bit.c\n-\tcat $(srcdir)/config/fp-bit.c >> fp-bit.c\n-\n-# Build the libraries for both hard and soft floating point\n-\n-MULTILIB_OPTIONS = msoft-float\n-MULTILIB_DIRNAMES = soft-float\n-\n-LIBGCC = stmp-multilib\n-INSTALL_LIBGCC = install-multilib"}, {"sha": "ca548319c1094e7720eddae380d69e9fff42e770", "filename": "gcc/config/rs6000/xm-cygwin.h", "status": "removed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d82a963983c76d0cc2403342dd8f78dcfd5f2b8b/gcc%2Fconfig%2Frs6000%2Fxm-cygwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d82a963983c76d0cc2403342dd8f78dcfd5f2b8b/gcc%2Fconfig%2Frs6000%2Fxm-cygwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fxm-cygwin.h?ref=d82a963983c76d0cc2403342dd8f78dcfd5f2b8b", "patch": "@@ -1 +0,0 @@\n-#define EXECUTABLE_SUFFIX \".exe\""}, {"sha": "36ae68acec54d1e25e3101d6bcd1d86f07c05d01", "filename": "gcc/config/x-linux-aout", "status": "removed", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d82a963983c76d0cc2403342dd8f78dcfd5f2b8b/gcc%2Fconfig%2Fx-linux-aout", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d82a963983c76d0cc2403342dd8f78dcfd5f2b8b/gcc%2Fconfig%2Fx-linux-aout", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fx-linux-aout?ref=d82a963983c76d0cc2403342dd8f78dcfd5f2b8b", "patch": "@@ -1,14 +0,0 @@\n-# It is defined in config/xm-linux.h.\n-# X_CFLAGS = -DPOSIX\n-\n-# The following is needed when compiling stages 2 and 3 because gcc's\n-# limits.h must be picked up before /usr/include/limits.h.  This is because\n-# each does an #include_next of the other if the other hasn't been included.\n-# /usr/include/limits.h loses if it gets found first because /usr/include is\n-# at the end of the search order.  When a new version of gcc is released,\n-# gcc's limits.h hasn't been installed yet and hence isn't found.\n-\n-# BOOT_CFLAGS = -O $(CFLAGS) -Iinclude\n-\n-# Don't run fixproto\n-# STMP_FIXPROTO ="}, {"sha": "b71ff56ca107c6c29541fc5b21ddfa84f8997d56", "filename": "gcc/config/xm-freebsd.h", "status": "removed", "additions": 0, "deletions": 24, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d82a963983c76d0cc2403342dd8f78dcfd5f2b8b/gcc%2Fconfig%2Fxm-freebsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d82a963983c76d0cc2403342dd8f78dcfd5f2b8b/gcc%2Fconfig%2Fxm-freebsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxm-freebsd.h?ref=d82a963983c76d0cc2403342dd8f78dcfd5f2b8b", "patch": "@@ -1,24 +0,0 @@\n-/* Configuration for GNU C-compiler for hosts running FreeBSD.\n-   Copyright (C) 1994, 1995 Free Software Foundation, Inc.\n-\n-This file is part of GNU CC.\n-\n-GNU CC is free software; you can redistribute it and/or modify\n-it under the terms of the GNU General Public License as published by\n-the Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-GNU CC is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with GNU CC; see the file COPYING.  If not, write to\n-the Free Software Foundation, 59 Temple Place - Suite 330,\n-Boston, MA 02111-1307, USA.  */\n-\n-/* This file defines machine-independent things specific to a host\n-   running FreeBSD.  This file should not be specified as $xm_file itself;\n-   instead $xm_file should be CPU/xm-freebsd.h, which should include both\n-   CPU/xm-CPU.h and this file xm-freebsd.h.  */"}]}