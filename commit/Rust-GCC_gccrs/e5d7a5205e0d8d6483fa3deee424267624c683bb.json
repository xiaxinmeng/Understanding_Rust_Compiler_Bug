{"sha": "e5d7a5205e0d8d6483fa3deee424267624c683bb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTVkN2E1MjA1ZTBkOGQ2NDgzZmEzZGVlZTQyNDI2NzYyNGM2ODNiYg==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard@codesourcery.com", "date": "2006-05-23T15:07:00Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2006-05-23T15:07:00Z"}, "message": "re PR middle-end/27736 (unwind-dw2-fde.c:833: fatal error: internal consistency failure)\n\n\tPR rtl-optimization/27736\n\t* combine.c (replaced_rhs_value): New variable.\n\t(combine_instructions): Set it.\n\t(distribute_notes): When distributing a note in replaced_rhs_insn,\n\tcheck whether the value was used in replaced_rhs_value.\n\nFrom-SVN: r114019", "tree": {"sha": "e5040e7b04299a22aa81437cd876a584dc2c2e3c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e5040e7b04299a22aa81437cd876a584dc2c2e3c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e5d7a5205e0d8d6483fa3deee424267624c683bb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5d7a5205e0d8d6483fa3deee424267624c683bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e5d7a5205e0d8d6483fa3deee424267624c683bb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5d7a5205e0d8d6483fa3deee424267624c683bb/comments", "author": null, "committer": null, "parents": [{"sha": "f004ab022e2d651c3838e04a8c23243f71041964", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f004ab022e2d651c3838e04a8c23243f71041964", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f004ab022e2d651c3838e04a8c23243f71041964"}], "stats": {"total": 18, "additions": 17, "deletions": 1}, "files": [{"sha": "57e7201aa33265a85f1c00e94370ee2c4b0b5c80", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5d7a5205e0d8d6483fa3deee424267624c683bb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5d7a5205e0d8d6483fa3deee424267624c683bb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e5d7a5205e0d8d6483fa3deee424267624c683bb", "patch": "@@ -1,3 +1,11 @@\n+2006-05-23  Richard Sandiford  <richard@codesourcery.com>\n+\n+\tPR rtl-optimization/27736\n+\t* combine.c (replaced_rhs_value): New variable.\n+\t(combine_instructions): Set it.\n+\t(distribute_notes): When distributing a note in replaced_rhs_insn,\n+\tcheck whether the value was used in replaced_rhs_value.\n+\n 2006-05-23  Andrew MacLeod  <amacleod@redhat.com>\n \n \tPR c++/26757"}, {"sha": "727e625ae2ca8d5a68658845d804fcbe47ed9da1", "filename": "gcc/combine.c", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5d7a5205e0d8d6483fa3deee424267624c683bb/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5d7a5205e0d8d6483fa3deee424267624c683bb/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=e5d7a5205e0d8d6483fa3deee424267624c683bb", "patch": "@@ -128,6 +128,11 @@ static int total_attempts, total_merges, total_extras, total_successes;\n    so modified, or null if none.  */\n \n static rtx replaced_rhs_insn;\n+\n+/* When REPLACED_RHS_INSN is nonnull, this is a copy of the new right\n+   hand side.  */\n+\n+static rtx replaced_rhs_value;\n \f\n /* Vector mapping INSN_UIDs to cuids.\n    The cuids are like uids but increase monotonically always.\n@@ -928,6 +933,7 @@ combine_instructions (rtx f, unsigned int nregs)\n \t\t      rtx orig = SET_SRC (set);\n \t\t      SET_SRC (set) = note;\n \t\t      replaced_rhs_insn = temp;\n+\t\t      replaced_rhs_value = copy_rtx (note);\n \t\t      next = try_combine (insn, temp, NULL_RTX,\n \t\t\t\t\t  &new_direct_jump_p);\n \t\t      replaced_rhs_insn = NULL;\n@@ -12122,7 +12128,9 @@ distribute_notes (rtx notes, rtx from_insn, rtx i3, rtx i2, rtx elim_i2,\n \t     In both cases, we must search to see if we can find a previous\n \t     use of A and put the death note there.  */\n \n-\t  if (from_insn && from_insn == replaced_rhs_insn)\n+\t  if (from_insn\n+\t      && from_insn == replaced_rhs_insn\n+\t      && !reg_overlap_mentioned_p (XEXP (note, 0), replaced_rhs_value))\n \t    tem = from_insn;\n \t  else\n \t    {"}]}