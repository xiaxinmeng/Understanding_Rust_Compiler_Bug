{"sha": "825cb171c0e5482e873a53af0982346947302a9c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODI1Y2IxNzFjMGU1NDgyZTg3M2E1M2FmMDk4MjM0Njk0NzMwMmE5Yw==", "commit": {"author": {"name": "Paul Koning", "email": "pkoning@equallogic.com", "date": "2010-10-20T15:40:09Z"}, "committer": {"name": "Paul Koning", "email": "pkoning@gcc.gnu.org", "date": "2010-10-20T15:40:09Z"}, "message": "Fix several build errors for pdp11 target.\n\n* config/pdp11/pdp11.md (*cmpdf): Fix tstd operands.\n(cbranchdf4): Conditional on TARGET_FPU.\n(movdf): Ditto; correct alternatives check.\n(movmemhi): Fix predicate and constraint.\n* config/pdp11/pdp11.h (HARD_REGNO_MODE_OK): Handle 64 bit mode.\n\nFrom-SVN: r165729", "tree": {"sha": "4f36827323c39be2e60600b98abe99ba5daa097e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4f36827323c39be2e60600b98abe99ba5daa097e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/825cb171c0e5482e873a53af0982346947302a9c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/825cb171c0e5482e873a53af0982346947302a9c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/825cb171c0e5482e873a53af0982346947302a9c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/825cb171c0e5482e873a53af0982346947302a9c/comments", "author": null, "committer": null, "parents": [{"sha": "66c92425474133a5c7fea3573e5366e93456da7a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66c92425474133a5c7fea3573e5366e93456da7a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/66c92425474133a5c7fea3573e5366e93456da7a"}], "stats": {"total": 33, "additions": 21, "deletions": 12}, "files": [{"sha": "a4a70f48dd4ce916648f13ddebeecb598b3bd1ea", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/825cb171c0e5482e873a53af0982346947302a9c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/825cb171c0e5482e873a53af0982346947302a9c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=825cb171c0e5482e873a53af0982346947302a9c", "patch": "@@ -1,3 +1,12 @@\n+2010-10-20  Paul Koning  <pkoning@equallogic.com>\n+\n+\tFix several build errors for pdp11 target.\n+\t* config/pdp11/pdp11.md (*cmpdf): Fix tstd operands.\n+\t(cbranchdf4): Conditional on TARGET_FPU.\n+\t(movdf): Ditto; correct alternatives check.\n+\t(movmemhi): Fix predicate and constraint.\n+\t* config/pdp11/pdp11.h (HARD_REGNO_MODE_OK): Handle 64 bit mode.\n+\n 2010-10-20  Richard Guenther  <rguenther@suse.de>\n \n \tPR lto/45667"}, {"sha": "cdb631593f24cf6f7f76165bb85a175d30a1a4de", "filename": "gcc/config/pdp11/pdp11.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/825cb171c0e5482e873a53af0982346947302a9c/gcc%2Fconfig%2Fpdp11%2Fpdp11.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/825cb171c0e5482e873a53af0982346947302a9c/gcc%2Fconfig%2Fpdp11%2Fpdp11.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpdp11%2Fpdp11.h?ref=825cb171c0e5482e873a53af0982346947302a9c", "patch": "@@ -224,7 +224,7 @@ extern const struct real_format pdp11_d_format;\n #define HARD_REGNO_MODE_OK(REGNO, MODE) \\\n (((REGNO) < 8)?\t\t\t\t\t\t\\\n   ((GET_MODE_BITSIZE(MODE) <= 16) \t\t\t\\\n-   || (GET_MODE_BITSIZE(MODE) == 32 && !((REGNO) & 1)))\t\\\n+   || (GET_MODE_BITSIZE(MODE) >= 32 && !((REGNO) & 1)))\t\\\n   :(MODE) == DFmode)\n     \n "}, {"sha": "9ef1c4f6042db56a55d0cc509a2ba4efd3f77128", "filename": "gcc/config/pdp11/pdp11.md", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/825cb171c0e5482e873a53af0982346947302a9c/gcc%2Fconfig%2Fpdp11%2Fpdp11.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/825cb171c0e5482e873a53af0982346947302a9c/gcc%2Fconfig%2Fpdp11%2Fpdp11.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpdp11%2Fpdp11.md?ref=825cb171c0e5482e873a53af0982346947302a9c", "patch": "@@ -1,6 +1,6 @@\n ;;- Machine description for the pdp11 for GNU C compiler\n ;; Copyright (C) 1994, 1995, 1997, 1998, 1999, 2000, 2001, 2004, 2005\n-;; 2007, 2008 Free Software Foundation, Inc.\n+;; 2007, 2008, 2010 Free Software Foundation, Inc.\n ;; Contributed by Michael K. Gschwind (mike@vlsivie.tuwien.ac.at).\n \n ;; This file is part of GCC.\n@@ -95,7 +95,7 @@\n {\n   cc_status.flags = CC_IN_FPU;\n   if (which_alternative == 0 || which_alternative == 2)\n-    return \\\"{tstd|tstf} %0, %1\\;cfcc\\\";\n+    return \\\"{tstd|tstf} %0\\;cfcc\\\";\n   else\n     return \\\"{cmpd|cmpf} %0, %1\\;cfcc\\\";\n }\"\n@@ -187,7 +187,7 @@\n \t\t       [(cc0) (const_int 0)])\n \t\t      (label_ref (match_operand 3 \"\" \"\"))\n \t\t      (pc)))]\n-  \"\"\n+  \"TARGET_FPU\"\n   \"\")\n \n (define_expand \"cbranchhi4\"\n@@ -306,12 +306,12 @@\n ;; do we have to supply all these moves? e.g. to \n ;; NO_LOAD_FPU_REGs ? \n (define_insn \"movdf\"\n-  [(set (match_operand:DF 0 \"general_operand\" \"=a,fR,a,Q,m\")\n-        (match_operand:DF 1 \"general_operand\" \"fFR,a,Q,a,m\"))]\n-  \"\"\n-  \"* if (which_alternative ==0)\n+  [(set (match_operand:DF 0 \"general_operand\" \"=a,fR,a,Q,g\")\n+        (match_operand:DF 1 \"general_operand\" \"fFR,a,Q,a,g\"))]\n+  \"TARGET_FPU\"\n+  \"* if (which_alternative ==0 || which_alternative == 2)\n        return \\\"ldd %1, %0\\\";\n-     else if (which_alternative == 1)\n+     else if (which_alternative == 1 || which_alternative == 3)\n        return \\\"std %1, %0\\\";\n      else \n        return output_move_quad (operands); \"\n@@ -353,9 +353,9 @@\n \n \n (define_insn \"\" ; \"movmemhi\"\n-  [(set (mem:BLK (match_operand:HI 0 \"general_operand\" \"=r,r\"))\n-\t(mem:BLK (match_operand:HI 1 \"general_operand\" \"r,r\")))\n-   (use (match_operand:HI 2 \"arith_operand\" \"n,&r\"))\n+  [(set (mem:BLK (match_operand 0 \"pmode_register_operand\" \"+r,r\"))\n+\t(mem:BLK (match_operand 1 \"pmode_register_operand\" \"+r,r\")))\n+   (use (match_operand:HI 2 \"general_operand\" \"+n,&r\"))\n    (use (match_operand:HI 3 \"immediate_operand\" \"i,i\"))\n    (clobber (match_scratch:HI 4 \"=&r,X\"))\n    (clobber (match_dup 0))"}]}