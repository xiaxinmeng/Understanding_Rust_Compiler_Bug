{"sha": "0d894170968d22d4c9387d18205bf57ff8b380a1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGQ4OTQxNzA5NjhkMjJkNGM5Mzg3ZDE4MjA1YmY1N2ZmOGIzODBhMQ==", "commit": {"author": {"name": "Max Ostapenko", "email": "m.ostapenko@partner.samsung.com", "date": "2014-07-17T10:50:25Z"}, "committer": {"name": "Maxim Ostapenko", "email": "chefmax@gcc.gnu.org", "date": "2014-07-17T10:50:25Z"}, "message": "bounds-2.c: Change output pattern.\n\ngcc/testsuite/\n2014-07-17  Max Ostapenko  <m.ostapenko@partner.samsung.com>\n\n\t* c-c++-common/ubsan/bounds-2.c: Change output pattern.\n\t* c-c++-common/ubsan/bounds-5.c: Likewise.\n\t* c-c++-common/ubsan/bounds-6.c: Likewise.\n\t* c-c++-common/ubsan/bounds-7.c: Likewise.\n\t* c-c++-common/ubsan/float-cast-overflow-1.c: Likewise.\n\t* c-c++-common/ubsan/float-cast-overflow-10.c: Likewise.\n\t* c-c++-common/ubsan/float-cast-overflow-2.c: Likewise.\n\t* c-c++-common/ubsan/float-cast-overflow-3.c: Likewise.\n\t* c-c++-common/ubsan/float-cast-overflow-4.c: Likewise.\n\t* c-c++-common/ubsan/float-cast-overflow-5.c: Likewise.\n\t* c-c++-common/ubsan/float-cast-overflow-6.c: Likewise.\n\t* c-c++-common/ubsan/float-cast-overflow-8.c: Likewise.\n\t* gcc.dg/ubsan/float-cast-overflow-bf.c: Likewise.\n\t* g++.dg/ubsan/float-cast-overflow-bf.C: Likewise.\n\nFrom-SVN: r212755", "tree": {"sha": "e698ee24ff7e067d5897afe62c1a0105d4b32aad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e698ee24ff7e067d5897afe62c1a0105d4b32aad"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0d894170968d22d4c9387d18205bf57ff8b380a1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d894170968d22d4c9387d18205bf57ff8b380a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d894170968d22d4c9387d18205bf57ff8b380a1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d894170968d22d4c9387d18205bf57ff8b380a1/comments", "author": null, "committer": null, "parents": [{"sha": "6ffb7ba3b45fa5c2ee0a3e2f037d364aaadcef47", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ffb7ba3b45fa5c2ee0a3e2f037d364aaadcef47", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ffb7ba3b45fa5c2ee0a3e2f037d364aaadcef47"}], "stats": {"total": 49, "additions": 33, "deletions": 16}, "files": [{"sha": "bebbc00e44683e9a0ec34e0349e5821051f7b8fc", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d894170968d22d4c9387d18205bf57ff8b380a1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d894170968d22d4c9387d18205bf57ff8b380a1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0d894170968d22d4c9387d18205bf57ff8b380a1", "patch": "@@ -1,3 +1,20 @@\n+2014-07-17  Max Ostapenko  <m.ostapenko@partner.samsung.com>\n+\n+\t* c-c++-common/ubsan/bounds-2.c: Change output pattern.\n+\t* c-c++-common/ubsan/bounds-5.c: Likewise.\n+\t* c-c++-common/ubsan/bounds-6.c: Likewise.\n+\t* c-c++-common/ubsan/bounds-7.c: Likewise.\n+\t* c-c++-common/ubsan/float-cast-overflow-1.c: Likewise.\n+\t* c-c++-common/ubsan/float-cast-overflow-10.c: Likewise.\n+\t* c-c++-common/ubsan/float-cast-overflow-2.c: Likewise.\n+\t* c-c++-common/ubsan/float-cast-overflow-3.c: Likewise.\n+\t* c-c++-common/ubsan/float-cast-overflow-4.c: Likewise.\n+\t* c-c++-common/ubsan/float-cast-overflow-5.c: Likewise.\n+\t* c-c++-common/ubsan/float-cast-overflow-6.c: Likewise.\n+\t* c-c++-common/ubsan/float-cast-overflow-8.c: Likewise.\n+\t* gcc.dg/ubsan/float-cast-overflow-bf.c: Likewise.\n+\t* g++.dg/ubsan/float-cast-overflow-bf.C: Likewise.\n+\n 2014-07-17  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \t* gcc.target/aarch64/simd/vcaled_f64.c: Mark expected value volatile."}, {"sha": "812e0db3edf763635b89ec759456f2199b67030e", "filename": "gcc/testsuite/c-c++-common/ubsan/bounds-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d894170968d22d4c9387d18205bf57ff8b380a1/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fbounds-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d894170968d22d4c9387d18205bf57ff8b380a1/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fbounds-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fbounds-2.c?ref=0d894170968d22d4c9387d18205bf57ff8b380a1", "patch": "@@ -162,4 +162,4 @@ main (void)\n /* { dg-output \"\\[^\\n\\r]*index 10 out of bounds for type 'int \\\\\\[10\\\\\\]'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*index 10 out of bounds for type 'long int \\\\\\*\\\\\\[10\\\\\\]\\\\\\[5\\\\\\]'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*index 5 out of bounds for type 'char \\\\\\*\\\\\\*\\\\\\*\\\\\\[5\\\\\\]'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*index 5 out of bounds for type 'int \\\\\\[5\\\\\\]'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*index 5 out of bounds for type 'int \\\\\\[5\\\\\\]'\" } */"}, {"sha": "c82287a561cfb3d9e0cd66b3ff78cf6e310b02ed", "filename": "gcc/testsuite/c-c++-common/ubsan/bounds-5.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d894170968d22d4c9387d18205bf57ff8b380a1/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fbounds-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d894170968d22d4c9387d18205bf57ff8b380a1/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fbounds-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fbounds-5.c?ref=0d894170968d22d4c9387d18205bf57ff8b380a1", "patch": "@@ -110,4 +110,4 @@ main (void)\n /* { dg-output \"\\[^\\n\\r]*index 1 out of bounds for type 'char \\\\\\[1\\\\\\]'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*index 1 out of bounds for type 'char \\\\\\[1\\\\\\]'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*index 1 out of bounds for type 'char \\\\\\[1\\\\\\]'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*index 1 out of bounds for type 'char \\\\\\[1\\\\\\]'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*index 1 out of bounds for type 'char \\\\\\[1\\\\\\]'\" } */"}, {"sha": "e7d15d5118139cb6d9836c0b023065805fb666a0", "filename": "gcc/testsuite/c-c++-common/ubsan/bounds-6.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d894170968d22d4c9387d18205bf57ff8b380a1/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fbounds-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d894170968d22d4c9387d18205bf57ff8b380a1/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fbounds-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fbounds-6.c?ref=0d894170968d22d4c9387d18205bf57ff8b380a1", "patch": "@@ -34,4 +34,4 @@ main (void)\n /* { dg-output \"\\[^\\n\\r]*index 4 out of bounds for type 'int \\\\\\[4\\\\\\]\\\\\\[4\\\\\\]'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*index 4 out of bounds for type 'U \\\\\\[4\\\\\\]'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*index 4 out of bounds for type 'U \\\\\\[4\\\\\\]'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*index 11 out of bounds for type 'int \\\\\\[10\\\\\\]'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*index 11 out of bounds for type 'int \\\\\\[10\\\\\\]'\" } */"}, {"sha": "e08a3fd80ec2e9baf964a74d545944132e9862b2", "filename": "gcc/testsuite/c-c++-common/ubsan/bounds-7.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d894170968d22d4c9387d18205bf57ff8b380a1/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fbounds-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d894170968d22d4c9387d18205bf57ff8b380a1/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fbounds-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fbounds-7.c?ref=0d894170968d22d4c9387d18205bf57ff8b380a1", "patch": "@@ -51,4 +51,4 @@ main (void)\n /* { dg-output \"index -1 out of bounds for type 'int \\\\\\[7\\\\\\]'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*index -1 out of bounds for type 'int \\\\\\[7\\\\\\]'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*index -1 out of bounds for type 'int \\\\\\[\\\\\\*\\\\\\]'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*index -1 out of bounds for type 'int \\\\\\[10\\\\\\]'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*index -1 out of bounds for type 'int \\\\\\[10\\\\\\]'\" } */"}, {"sha": "cd6941c9d30e6c0ee235519156ca397521523c7c", "filename": "gcc/testsuite/c-c++-common/ubsan/float-cast-overflow-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d894170968d22d4c9387d18205bf57ff8b380a1/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Ffloat-cast-overflow-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d894170968d22d4c9387d18205bf57ff8b380a1/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Ffloat-cast-overflow-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Ffloat-cast-overflow-1.c?ref=0d894170968d22d4c9387d18205bf57ff8b380a1", "patch": "@@ -201,4 +201,4 @@ main (void)\n /* { dg-output \"\\[^\\n\\r]*value nan is outside the range of representable values of type 'long long unsigned int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*value -?nan is outside the range of representable values of type 'long long unsigned int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*value inf is outside the range of representable values of type 'long long unsigned int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*value -inf is outside the range of representable values of type 'long long unsigned int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*value -inf is outside the range of representable values of type 'long long unsigned int'\" } */"}, {"sha": "e95f194cbb3464b762b9bf085756ff1eba594478", "filename": "gcc/testsuite/c-c++-common/ubsan/float-cast-overflow-10.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d894170968d22d4c9387d18205bf57ff8b380a1/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Ffloat-cast-overflow-10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d894170968d22d4c9387d18205bf57ff8b380a1/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Ffloat-cast-overflow-10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Ffloat-cast-overflow-10.c?ref=0d894170968d22d4c9387d18205bf57ff8b380a1", "patch": "@@ -76,4 +76,4 @@\n /* { dg-output \"\\[^\\n\\r]*value <unknown> is outside the range of representable values of type 'long long int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*value <unknown> is outside the range of representable values of type 'long long int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*value <unknown> is outside the range of representable values of type 'long long unsigned int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*value <unknown> is outside the range of representable values of type 'long long unsigned int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*value <unknown> is outside the range of representable values of type 'long long unsigned int'\" } */"}, {"sha": "b25e312b61b3b63cf30569c283190f87098e0a8c", "filename": "gcc/testsuite/c-c++-common/ubsan/float-cast-overflow-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d894170968d22d4c9387d18205bf57ff8b380a1/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Ffloat-cast-overflow-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d894170968d22d4c9387d18205bf57ff8b380a1/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Ffloat-cast-overflow-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Ffloat-cast-overflow-2.c?ref=0d894170968d22d4c9387d18205bf57ff8b380a1", "patch": "@@ -70,4 +70,4 @@ main (void)\n /* { dg-output \"\\[^\\n\\r]*runtime error: value nan is outside the range of representable values of type '__int128 unsigned'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*runtime error: value -?nan is outside the range of representable values of type '__int128 unsigned'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*runtime error: value inf is outside the range of representable values of type '__int128 unsigned'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*runtime error: value -inf is outside the range of representable values of type '__int128 unsigned'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*runtime error: value -inf is outside the range of representable values of type '__int128 unsigned'\" } */"}, {"sha": "ba82111a4dfb31dddaaedf0895ca209e69210229", "filename": "gcc/testsuite/c-c++-common/ubsan/float-cast-overflow-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d894170968d22d4c9387d18205bf57ff8b380a1/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Ffloat-cast-overflow-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d894170968d22d4c9387d18205bf57ff8b380a1/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Ffloat-cast-overflow-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Ffloat-cast-overflow-3.c?ref=0d894170968d22d4c9387d18205bf57ff8b380a1", "patch": "@@ -37,4 +37,4 @@ main (void)\n /* { dg-output \"\\[^\\n\\r]*value 260 is outside the range of representable values of type\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*value -5 is outside the range of representable values of type\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*value -1.5 is outside the range of representable values of type\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*value -1 is outside the range of representable values of type\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*value -1 is outside the range of representable values of type\" } */"}, {"sha": "af76e4a3343362d97f640ae440cec7fab8504ea5", "filename": "gcc/testsuite/c-c++-common/ubsan/float-cast-overflow-4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d894170968d22d4c9387d18205bf57ff8b380a1/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Ffloat-cast-overflow-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d894170968d22d4c9387d18205bf57ff8b380a1/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Ffloat-cast-overflow-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Ffloat-cast-overflow-4.c?ref=0d894170968d22d4c9387d18205bf57ff8b380a1", "patch": "@@ -49,4 +49,4 @@ main (void)\n /* { dg-output \"\\[^\\n\\r]*value nan is outside the range of representable values of type\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*value -?nan is outside the range of representable values of type\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*value inf is outside the range of representable values of type\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*value -inf is outside the range of representable values of type\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*value -inf is outside the range of representable values of type\" } */"}, {"sha": "4c2fbb4d9ea594734f7e10fb9826eb767bb9de52", "filename": "gcc/testsuite/c-c++-common/ubsan/float-cast-overflow-5.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d894170968d22d4c9387d18205bf57ff8b380a1/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Ffloat-cast-overflow-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d894170968d22d4c9387d18205bf57ff8b380a1/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Ffloat-cast-overflow-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Ffloat-cast-overflow-5.c?ref=0d894170968d22d4c9387d18205bf57ff8b380a1", "patch": "@@ -37,4 +37,4 @@ main (void)\n /* { dg-output \"\\[^\\n\\r]*value \\[^\\n\\r]* is outside the range of representable values of type\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*value \\[^\\n\\r]* is outside the range of representable values of type\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*value \\[^\\n\\r]* is outside the range of representable values of type\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*value \\[^\\n\\r]* is outside the range of representable values of type\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*value \\[^\\n\\r]* is outside the range of representable values of type\" } */"}, {"sha": "73b8b95b55453fdc7d9810e0057c25416b2e164d", "filename": "gcc/testsuite/c-c++-common/ubsan/float-cast-overflow-6.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d894170968d22d4c9387d18205bf57ff8b380a1/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Ffloat-cast-overflow-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d894170968d22d4c9387d18205bf57ff8b380a1/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Ffloat-cast-overflow-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Ffloat-cast-overflow-6.c?ref=0d894170968d22d4c9387d18205bf57ff8b380a1", "patch": "@@ -37,4 +37,4 @@ main (void)\n /* { dg-output \"\\[^\\n\\r]*value 260 is outside the range of representable values of type\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*value -5 is outside the range of representable values of type\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*value -1.5 is outside the range of representable values of type\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*value -1 is outside the range of representable values of type\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*value -1 is outside the range of representable values of type\" } */"}, {"sha": "5414a0b0e2992385c3e103e1f6c7be25bcd34dab", "filename": "gcc/testsuite/c-c++-common/ubsan/float-cast-overflow-8.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d894170968d22d4c9387d18205bf57ff8b380a1/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Ffloat-cast-overflow-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d894170968d22d4c9387d18205bf57ff8b380a1/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Ffloat-cast-overflow-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Ffloat-cast-overflow-8.c?ref=0d894170968d22d4c9387d18205bf57ff8b380a1", "patch": "@@ -198,8 +198,8 @@ main ()\n /* { dg-output \"\\[^\\n\\r]*value \\[0-9.e+-]* is outside the range of representable values of type 'long long int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*value \\[0-9.e+-]* is outside the range of representable values of type 'long long int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*value -1 is outside the range of representable values of type 'long long unsigned int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*value \\[0-9.e+-]* is outside the range of representable values of type 'long long unsigned int'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*value \\[0-9.e+-]* is outside the range of representable values of type '__int128'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" { target { int128 } } } */\n+/* { dg-output \"\\[^\\n\\r]*value \\[0-9.e+-]* is outside the range of representable values of type 'long long unsigned int'\" } */\n+/* { dg-output \"(\\n|\\r\\n|\\r)\\[^\\n\\r]*value \\[0-9.e+-]* is outside the range of representable values of type '__int128'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" { target { int128 } } } */\n /* { dg-output \"\\[^\\n\\r]*value \\[0-9.e+-]* is outside the range of representable values of type '__int128'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" { target { int128 } } } */\n /* { dg-output \"\\[^\\n\\r]*value -1 is outside the range of representable values of type '__int128 unsigned'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" { target { int128 } } } */\n-/* { dg-output \"\\[^\\n\\r]*value \\[0-9.e+-]* is outside the range of representable values of type '__int128 unsigned'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" { target { int128 } } } */\n+/* { dg-output \"\\[^\\n\\r]*value \\[0-9.e+-]* is outside the range of representable values of type '__int128 unsigned'\" { target { int128 } } } */"}, {"sha": "f01c576c3dbfce191896aba3817cff7a1579bffb", "filename": "gcc/testsuite/g++.dg/ubsan/float-cast-overflow-bf.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d894170968d22d4c9387d18205bf57ff8b380a1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fubsan%2Ffloat-cast-overflow-bf.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d894170968d22d4c9387d18205bf57ff8b380a1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fubsan%2Ffloat-cast-overflow-bf.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fubsan%2Ffloat-cast-overflow-bf.C?ref=0d894170968d22d4c9387d18205bf57ff8b380a1", "patch": "@@ -59,4 +59,4 @@ main (void)\n /* { dg-output \"\\[^\\n\\r]*value 4.29497e\\\\\\+09 is outside the range of representable values of type\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*value 4.29497e\\\\\\+09 is outside the range of representable values of type\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*value -1.5 is outside the range of representable values of type\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*value -1 is outside the range of representable values of type\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*value -1 is outside the range of representable values of type\" } */"}, {"sha": "16268603375f0b6e3d5bb3a669644fe6942951b2", "filename": "gcc/testsuite/gcc.dg/ubsan/float-cast-overflow-bf.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d894170968d22d4c9387d18205bf57ff8b380a1/gcc%2Ftestsuite%2Fgcc.dg%2Fubsan%2Ffloat-cast-overflow-bf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d894170968d22d4c9387d18205bf57ff8b380a1/gcc%2Ftestsuite%2Fgcc.dg%2Fubsan%2Ffloat-cast-overflow-bf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fubsan%2Ffloat-cast-overflow-bf.c?ref=0d894170968d22d4c9387d18205bf57ff8b380a1", "patch": "@@ -69,4 +69,4 @@ main (void)\n /* { dg-output \"\\[^\\n\\r]*value -1.5 is outside the range of representable values of type\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*value -1 is outside the range of representable values of type\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*value 2 is outside the range of representable values of type\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*value 2.5 is outside the range of representable values of type\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*value 2.5 is outside the range of representable values of type\" } */"}]}