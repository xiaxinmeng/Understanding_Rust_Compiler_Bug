{"sha": "0960d937d9bee3c831d0b64a9c828c263a58ff89", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDk2MGQ5MzdkOWJlZTNjODMxZDBiNjRhOWM4MjhjMjYzYTU4ZmY4OQ==", "commit": {"author": {"name": "Roger Sayle", "email": "roger@nextmovesoftware.com", "date": "2021-08-31T10:41:57Z"}, "committer": {"name": "Roger Sayle", "email": "roger@nextmovesoftware.com", "date": "2021-08-31T10:41:57Z"}, "message": "Only simplify TRUNCATE to SUBREG on TRULY_NOOP_TRUNCATION targets.\n\nAs recently remarked by Jeff Law, SUBREGs are the \"forever chemicals\"\nof GCC's RTL; once created they persist in the environment.  The problem,\naccording to the comment on lines 5428-5438 of combine.c is that\nnon-tieable SUBREGs interfere with reload/register allocation, so\ncombine often doesn't touch/clean-up instructions containing a SUBREG.\n\nThis is the first and simplest of two patches to tackle that problem,\nby teaching combine to avoid converting explicit TRUNCATEs into\nSUBREGs that it can't handle.\n\nConsider the following (hypothetical) sequence of instructions on\na STORE_FLAG_VALUE=1 target, which stores a zero or one in an SI\nregister, then uselessly truncates to QImode, then extends it again.\n\n(set (reg:SI 27) (ne:SI (reg:BI 28) (const_int 0)))\n(set (reg:QI 26) (truncate:QI (reg:SI 27)))\n(set (reg:SI 0) (zero_extend:SI (reg:QI 26)))\n\nwhich ideally (i.e. with this patch) combine would simplify to:\n(set (reg:SI 0) (ne:SI (reg:BI 28) (const_int 0)))\n\nAlas currently, during combine the middle TRUNCATE is converted into\na lowpart SUBREG, which subst then turns into (clobber (const_int 0)),\nabandoning the attempted combination, that then never reaches recog.\n\n2021-08-31  Roger Sayle  <roger@nextmovesoftware.com>\n\ngcc/ChangeLog\n\t* combine.c (combine_simplify_rtx): Avoid converting an explicit\n\tTRUNCATE into a lowpart SUBREG on !TRULY_NOOP_TRUNCATION targets.\n\t* simplify-rtx.c (simplify_unary_operation_1): Likewise.", "tree": {"sha": "5eec37166dd537c7521583df9a08120c749e57c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5eec37166dd537c7521583df9a08120c749e57c1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0960d937d9bee3c831d0b64a9c828c263a58ff89", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0960d937d9bee3c831d0b64a9c828c263a58ff89", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0960d937d9bee3c831d0b64a9c828c263a58ff89", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0960d937d9bee3c831d0b64a9c828c263a58ff89/comments", "author": {"login": "rogersayle", "id": 13512313, "node_id": "MDQ6VXNlcjEzNTEyMzEz", "avatar_url": "https://avatars.githubusercontent.com/u/13512313?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rogersayle", "html_url": "https://github.com/rogersayle", "followers_url": "https://api.github.com/users/rogersayle/followers", "following_url": "https://api.github.com/users/rogersayle/following{/other_user}", "gists_url": "https://api.github.com/users/rogersayle/gists{/gist_id}", "starred_url": "https://api.github.com/users/rogersayle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rogersayle/subscriptions", "organizations_url": "https://api.github.com/users/rogersayle/orgs", "repos_url": "https://api.github.com/users/rogersayle/repos", "events_url": "https://api.github.com/users/rogersayle/events{/privacy}", "received_events_url": "https://api.github.com/users/rogersayle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rogersayle", "id": 13512313, "node_id": "MDQ6VXNlcjEzNTEyMzEz", "avatar_url": "https://avatars.githubusercontent.com/u/13512313?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rogersayle", "html_url": "https://github.com/rogersayle", "followers_url": "https://api.github.com/users/rogersayle/followers", "following_url": "https://api.github.com/users/rogersayle/following{/other_user}", "gists_url": "https://api.github.com/users/rogersayle/gists{/gist_id}", "starred_url": "https://api.github.com/users/rogersayle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rogersayle/subscriptions", "organizations_url": "https://api.github.com/users/rogersayle/orgs", "repos_url": "https://api.github.com/users/rogersayle/repos", "events_url": "https://api.github.com/users/rogersayle/events{/privacy}", "received_events_url": "https://api.github.com/users/rogersayle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "67927342290c61d7e054430f1d7a7281f1f97fae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67927342290c61d7e054430f1d7a7281f1f97fae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/67927342290c61d7e054430f1d7a7281f1f97fae"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "290a3667c65645eb0342f0801418ad10e51f71c1", "filename": "gcc/combine.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0960d937d9bee3c831d0b64a9c828c263a58ff89/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0960d937d9bee3c831d0b64a9c828c263a58ff89/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=0960d937d9bee3c831d0b64a9c828c263a58ff89", "patch": "@@ -5903,7 +5903,8 @@ combine_simplify_rtx (rtx x, machine_mode op0_mode, int in_dest,\n       if (HWI_COMPUTABLE_MODE_P (mode)\n \t  && (STORE_FLAG_VALUE & ~GET_MODE_MASK (mode)) == 0\n \t  && (temp = get_last_value (XEXP (x, 0)))\n-\t  && COMPARISON_P (temp))\n+\t  && COMPARISON_P (temp)\n+\t  && TRULY_NOOP_TRUNCATION_MODES_P (mode, GET_MODE (XEXP (x, 0))))\n \treturn gen_lowpart (mode, XEXP (x, 0));\n       break;\n "}, {"sha": "e431e0c19d7f37ebaba2f451b066e4f9cbc95ae2", "filename": "gcc/simplify-rtx.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0960d937d9bee3c831d0b64a9c828c263a58ff89/gcc%2Fsimplify-rtx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0960d937d9bee3c831d0b64a9c828c263a58ff89/gcc%2Fsimplify-rtx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsimplify-rtx.c?ref=0960d937d9bee3c831d0b64a9c828c263a58ff89", "patch": "@@ -1249,7 +1249,8 @@ simplify_context::simplify_unary_operation_1 (rtx_code code, machine_mode mode,\n          than HOST_BITS_PER_WIDE_INT.  */\n       if (HWI_COMPUTABLE_MODE_P (mode)\n \t  && COMPARISON_P (op)\n-\t  && (STORE_FLAG_VALUE & ~GET_MODE_MASK (mode)) == 0)\n+\t  && (STORE_FLAG_VALUE & ~GET_MODE_MASK (mode)) == 0\n+\t  && TRULY_NOOP_TRUNCATION_MODES_P (mode, GET_MODE (op)))\n \t{\n \t  temp = rtl_hooks.gen_lowpart_no_emit (mode, op);\n \t  if (temp)"}]}