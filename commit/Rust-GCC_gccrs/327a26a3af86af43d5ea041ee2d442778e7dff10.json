{"sha": "327a26a3af86af43d5ea041ee2d442778e7dff10", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzI3YTI2YTNhZjg2YWY0M2Q1ZWEwNDFlZTJkNDQyNzc4ZTdkZmYxMA==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2014-11-12T03:51:36Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2014-11-12T03:51:36Z"}, "message": "libgo: Update libtool support to files in current GCC trunk.\n\nFrom-SVN: r217404", "tree": {"sha": "e551ced5306e8477fd1a78c43c2ec4dc088f6b3b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e551ced5306e8477fd1a78c43c2ec4dc088f6b3b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/327a26a3af86af43d5ea041ee2d442778e7dff10", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/327a26a3af86af43d5ea041ee2d442778e7dff10", "html_url": "https://github.com/Rust-GCC/gccrs/commit/327a26a3af86af43d5ea041ee2d442778e7dff10", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/327a26a3af86af43d5ea041ee2d442778e7dff10/comments", "author": null, "committer": null, "parents": [{"sha": "cb16603e3a9b57356a46f3ed5a072f7c34128250", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb16603e3a9b57356a46f3ed5a072f7c34128250", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb16603e3a9b57356a46f3ed5a072f7c34128250"}], "stats": {"total": 82, "additions": 37, "deletions": 45}, "files": [{"sha": "f70059474540a211387edf6f56096508eaf5041a", "filename": "libgo/config/libtool.m4", "status": "modified", "additions": 17, "deletions": 21, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/327a26a3af86af43d5ea041ee2d442778e7dff10/libgo%2Fconfig%2Flibtool.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/327a26a3af86af43d5ea041ee2d442778e7dff10/libgo%2Fconfig%2Flibtool.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fconfig%2Flibtool.m4?ref=327a26a3af86af43d5ea041ee2d442778e7dff10", "patch": "@@ -1011,7 +1011,7 @@ _LT_EOF\n       case ${MACOSX_DEPLOYMENT_TARGET-10.0},$host in\n \t10.0,*86*-darwin8*|10.0,*-darwin[[91]]*)\n \t  _lt_dar_allow_undefined='${wl}-undefined ${wl}dynamic_lookup' ;;\n-\t10.[[012]]*)\n+\t10.[[012]][[,.]]*)\n \t  _lt_dar_allow_undefined='${wl}-flat_namespace ${wl}-undefined ${wl}suppress' ;;\n \t10.*)\n \t  _lt_dar_allow_undefined='${wl}-undefined ${wl}dynamic_lookup' ;;\n@@ -1237,7 +1237,14 @@ s390*-*linux*|s390*-*tpf*|sparc*-*linux*)\n \t    LD=\"${LD-ld} -m elf_i386_fbsd\"\n \t    ;;\n \t  x86_64-*linux*)\n-\t    LD=\"${LD-ld} -m elf_i386\"\n+\t    case `/usr/bin/file conftest.o` in\n+\t      *x86-64*)\n+\t\tLD=\"${LD-ld} -m elf32_x86_64\"\n+\t\t;;\n+\t      *)\n+\t\tLD=\"${LD-ld} -m elf_i386\"\n+\t\t;;\n+\t    esac\n \t    ;;\n \t  powerpc64le-*linux*)\n \t    LD=\"${LD-ld} -m elf32lppclinux\"\n@@ -1293,27 +1300,14 @@ s390*-*linux*|s390*-*tpf*|sparc*-*linux*)\n     CFLAGS=\"$SAVE_CFLAGS\"\n   fi\n   ;;\n-*-*solaris*)\n+sparc*-*solaris*)\n   # Find out which ABI we are using.\n   echo 'int i;' > conftest.$ac_ext\n   if AC_TRY_EVAL(ac_compile); then\n     case `/usr/bin/file conftest.o` in\n     *64-bit*)\n       case $lt_cv_prog_gnu_ld in\n-      yes*)\n-        case $host in\n-        i?86-*-solaris* | x86_64-*-solaris2.1[[0-9]]*)\n-          LD=\"${LD-ld} -m elf_x86_64\"\n-          ;;\n-        sparc*-*-solaris*)\n-          LD=\"${LD-ld} -m elf64_sparc\"\n-          ;;\n-        esac\n-        # GNU ld 2.21 introduced _sol2 emulations.  Use them if available.\n-        if ${LD-ld} -V | grep _sol2 >/dev/null 2>&1; then\n-          LD=\"${LD-ld}_sol2\"\n-        fi\n-        ;;\n+      yes*) LD=\"${LD-ld} -m elf64_sparc\" ;;\n       *)\n \tif ${LD-ld} -64 -r -o conftest2.o conftest.o >/dev/null 2>&1; then\n \t  LD=\"${LD-ld} -64\"\n@@ -2297,7 +2291,7 @@ freebsd* | dragonfly*)\n     objformat=`/usr/bin/objformat`\n   else\n     case $host_os in\n-    freebsd[[123]]*) objformat=aout ;;\n+    freebsd[[23]].*) objformat=aout ;;\n     *) objformat=elf ;;\n     esac\n   fi\n@@ -2315,7 +2309,7 @@ freebsd* | dragonfly*)\n   esac\n   shlibpath_var=LD_LIBRARY_PATH\n   case $host_os in\n-  freebsd2*)\n+  freebsd2.*)\n     shlibpath_overrides_runpath=yes\n     ;;\n   freebsd3.[[01]]* | freebsdelf3.[[01]]*)\n@@ -3597,6 +3591,7 @@ m4_if([$1], [CXX], [\n \t# AIX 5 now supports IA64 processor\n \t_LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n       fi\n+      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n       ;;\n \n     amigaos*)\n@@ -3908,6 +3903,7 @@ m4_if([$1], [CXX], [\n \t# AIX 5 now supports IA64 processor\n \t_LT_TAGVAR(lt_prog_compiler_static, $1)='-Bstatic'\n       fi\n+      _LT_TAGVAR(lt_prog_compiler_pic, $1)='-fPIC'\n       ;;\n \n     amigaos*)\n@@ -4828,7 +4824,7 @@ _LT_EOF\n       ;;\n \n     # Unfortunately, older versions of FreeBSD 2 do not have this feature.\n-    freebsd2*)\n+    freebsd2.*)\n       _LT_TAGVAR(archive_cmds, $1)='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags'\n       _LT_TAGVAR(hardcode_direct, $1)=yes\n       _LT_TAGVAR(hardcode_minus_L, $1)=yes\n@@ -5775,7 +5771,7 @@ if test \"$_lt_caught_CXX_error\" != yes; then\n         esac\n         ;;\n \n-      freebsd[[12]]*)\n+      freebsd2.*)\n         # C++ shared libraries reported to be fairly broken before\n \t# switch to ELF\n         _LT_TAGVAR(ld_shlibs, $1)=no"}, {"sha": "ce66b44906a2cd23eeaccb35bdfe6843305021a6", "filename": "libgo/config/ltmain.sh", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/327a26a3af86af43d5ea041ee2d442778e7dff10/libgo%2Fconfig%2Fltmain.sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/327a26a3af86af43d5ea041ee2d442778e7dff10/libgo%2Fconfig%2Fltmain.sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fconfig%2Fltmain.sh?ref=327a26a3af86af43d5ea041ee2d442778e7dff10", "patch": "@@ -5928,7 +5928,7 @@ func_mode_link ()\n \t         test \"$hardcode_direct_absolute\" = no; then\n \t\tadd=\"$dir/$linklib\"\n \t      elif test \"$hardcode_minus_L\" = yes; then\n-\t\tadd_dir=\"-L$dir\"\n+\t\tadd_dir=\"-L$absdir\"\n \t\t# Try looking first in the location we're being installed to.\n \t\tif test -n \"$inst_prefix_dir\"; then\n \t\t  case $libdir in"}, {"sha": "7813c028c4784a881fdae466423ecbfb86bfb769", "filename": "libgo/configure", "status": "modified", "additions": 19, "deletions": 23, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/327a26a3af86af43d5ea041ee2d442778e7dff10/libgo%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/327a26a3af86af43d5ea041ee2d442778e7dff10/libgo%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fconfigure?ref=327a26a3af86af43d5ea041ee2d442778e7dff10", "patch": "@@ -6528,7 +6528,14 @@ s390*-*linux*|s390*-*tpf*|sparc*-*linux*)\n \t    LD=\"${LD-ld} -m elf_i386_fbsd\"\n \t    ;;\n \t  x86_64-*linux*)\n-\t    LD=\"${LD-ld} -m elf_i386\"\n+\t    case `/usr/bin/file conftest.o` in\n+\t      *x86-64*)\n+\t\tLD=\"${LD-ld} -m elf32_x86_64\"\n+\t\t;;\n+\t      *)\n+\t\tLD=\"${LD-ld} -m elf_i386\"\n+\t\t;;\n+\t    esac\n \t    ;;\n \t  powerpc64le-*linux*)\n \t    LD=\"${LD-ld} -m elf32lppclinux\"\n@@ -6618,7 +6625,7 @@ $as_echo \"$lt_cv_cc_needs_belf\" >&6; }\n     CFLAGS=\"$SAVE_CFLAGS\"\n   fi\n   ;;\n-*-*solaris*)\n+sparc*-*solaris*)\n   # Find out which ABI we are using.\n   echo 'int i;' > conftest.$ac_ext\n   if { { eval echo \"\\\"\\$as_me\\\":${as_lineno-$LINENO}: \\\"$ac_compile\\\"\"; } >&5\n@@ -6629,20 +6636,7 @@ $as_echo \"$lt_cv_cc_needs_belf\" >&6; }\n     case `/usr/bin/file conftest.o` in\n     *64-bit*)\n       case $lt_cv_prog_gnu_ld in\n-      yes*)\n-        case $host in\n-        i?86-*-solaris* | x86_64-*-solaris2.1[0-9]*)\n-          LD=\"${LD-ld} -m elf_x86_64\"\n-          ;;\n-        sparc*-*-solaris*)\n-          LD=\"${LD-ld} -m elf64_sparc\"\n-          ;;\n-        esac\n-        # GNU ld 2.21 introduced _sol2 emulations.  Use them if available.\n-        if ${LD-ld} -V | grep _sol2 >/dev/null 2>&1; then\n-          LD=\"${LD-ld}_sol2\"\n-        fi\n-        ;;\n+      yes*) LD=\"${LD-ld} -m elf64_sparc\" ;;\n       *)\n \tif ${LD-ld} -64 -r -o conftest2.o conftest.o >/dev/null 2>&1; then\n \t  LD=\"${LD-ld} -64\"\n@@ -7250,7 +7244,7 @@ $as_echo \"$lt_cv_ld_force_load\" >&6; }\n       case ${MACOSX_DEPLOYMENT_TARGET-10.0},$host in\n \t10.0,*86*-darwin8*|10.0,*-darwin[91]*)\n \t  _lt_dar_allow_undefined='${wl}-undefined ${wl}dynamic_lookup' ;;\n-\t10.[012]*)\n+\t10.[012][,.]*)\n \t  _lt_dar_allow_undefined='${wl}-flat_namespace ${wl}-undefined ${wl}suppress' ;;\n \t10.*)\n \t  _lt_dar_allow_undefined='${wl}-undefined ${wl}dynamic_lookup' ;;\n@@ -8176,6 +8170,7 @@ $as_echo_n \"checking for $compiler option to produce PIC... \" >&6; }\n \t# AIX 5 now supports IA64 processor\n \tlt_prog_compiler_static='-Bstatic'\n       fi\n+      lt_prog_compiler_pic='-fPIC'\n       ;;\n \n     amigaos*)\n@@ -9357,7 +9352,7 @@ if test -z \"$aix_libpath\"; then aix_libpath=\"/usr/lib:/lib\"; fi\n       ;;\n \n     # Unfortunately, older versions of FreeBSD 2 do not have this feature.\n-    freebsd2*)\n+    freebsd2.*)\n       archive_cmds='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags'\n       hardcode_direct=yes\n       hardcode_minus_L=yes\n@@ -10270,7 +10265,7 @@ freebsd* | dragonfly*)\n     objformat=`/usr/bin/objformat`\n   else\n     case $host_os in\n-    freebsd[123]*) objformat=aout ;;\n+    freebsd[23].*) objformat=aout ;;\n     *) objformat=elf ;;\n     esac\n   fi\n@@ -10288,7 +10283,7 @@ freebsd* | dragonfly*)\n   esac\n   shlibpath_var=LD_LIBRARY_PATH\n   case $host_os in\n-  freebsd2*)\n+  freebsd2.*)\n     shlibpath_overrides_runpath=yes\n     ;;\n   freebsd3.[01]* | freebsdelf3.[01]*)\n@@ -11122,7 +11117,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11125 \"configure\"\n+#line 11120 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11228,7 +11223,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11231 \"configure\"\n+#line 11226 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11607,6 +11602,7 @@ $as_echo_n \"checking for $compiler option to produce PIC... \" >&6; }\n \t# AIX 5 now supports IA64 processor\n \tlt_prog_compiler_static_GO='-Bstatic'\n       fi\n+      lt_prog_compiler_pic_GO='-fPIC'\n       ;;\n \n     amigaos*)\n@@ -12773,7 +12769,7 @@ if test -z \"$aix_libpath\"; then aix_libpath=\"/usr/lib:/lib\"; fi\n       ;;\n \n     # Unfortunately, older versions of FreeBSD 2 do not have this feature.\n-    freebsd2*)\n+    freebsd2.*)\n       archive_cmds_GO='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags'\n       hardcode_direct_GO=yes\n       hardcode_minus_L_GO=yes"}]}