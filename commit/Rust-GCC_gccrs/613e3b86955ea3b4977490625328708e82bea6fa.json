{"sha": "613e3b86955ea3b4977490625328708e82bea6fa", "node_id": "C_kwDOANBUbNoAKDYxM2UzYjg2OTU1ZWEzYjQ5Nzc0OTA2MjUzMjg3MDhlODJiZWE2ZmE", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-07-25T10:10:48Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-07-25T11:24:47Z"}, "message": "middle-end/106414 - fix mistake in ~(x ^ y) -> x == y pattern\n\nWhen compares are integer typed the inversion with ~ isn't properly\npreserved by the equality comparison even when converting the\nresult properly.  The following fixes this by restricting the\ninput precisions accordingly.\n\n\tPR middle-end/106414\n\t* match.pd (~(x ^ y) -> x == y): Restrict to single bit\n\tprecision types.\n\n\t* gcc.dg/torture/pr106414-1.c: New testcase.\n\t* gcc.dg/torture/pr106414-2.c: Likewise.", "tree": {"sha": "3c1f2304fa01fa140a1e128ce7c2709ec5e360ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3c1f2304fa01fa140a1e128ce7c2709ec5e360ad"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/613e3b86955ea3b4977490625328708e82bea6fa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/613e3b86955ea3b4977490625328708e82bea6fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/613e3b86955ea3b4977490625328708e82bea6fa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/613e3b86955ea3b4977490625328708e82bea6fa/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eb966d393dfdfd2c80994e4bfcc0dddf85828a73", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb966d393dfdfd2c80994e4bfcc0dddf85828a73", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb966d393dfdfd2c80994e4bfcc0dddf85828a73"}], "stats": {"total": 27, "additions": 26, "deletions": 1}, "files": [{"sha": "330c1db0c8e12b0fb010b1958729444672403866", "filename": "gcc/match.pd", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/613e3b86955ea3b4977490625328708e82bea6fa/gcc%2Fmatch.pd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/613e3b86955ea3b4977490625328708e82bea6fa/gcc%2Fmatch.pd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmatch.pd?ref=613e3b86955ea3b4977490625328708e82bea6fa", "patch": "@@ -1946,7 +1946,8 @@ DEFINE_INT_AND_FLOAT_ROUND_FN (RINT)\n /* ~(a ^ b) is a == b for truth valued a and b.  */\n (simplify\n  (bit_not (bit_xor:s truth_valued_p@0 truth_valued_p@1))\n- (if (!VECTOR_TYPE_P (type))\n+ (if (INTEGRAL_TYPE_P (TREE_TYPE (@0))\n+      && TYPE_PRECISION (TREE_TYPE (@0)) == 1)\n   (convert (eq @0 @1))))\n \n /* (x & ~m) | (y & m) -> ((x ^ y) & m) ^ x */"}, {"sha": "097471617b427fbb0de69a3953a58bb87f53a1f3", "filename": "gcc/testsuite/gcc.dg/torture/pr106414-1.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/613e3b86955ea3b4977490625328708e82bea6fa/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr106414-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/613e3b86955ea3b4977490625328708e82bea6fa/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr106414-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr106414-1.c?ref=613e3b86955ea3b4977490625328708e82bea6fa", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do run } */\n+\n+int a, c, e;\n+const int b = 1;\n+char d;\n+int main() {\n+  a = ~(e || 0) ^ b & ~d;\n+  d = ~(a | ~2);\n+  if (d)\n+    __builtin_abort();\n+  return 0;\n+}"}, {"sha": "bed6a40c61e28eb2c56137ca1f51063f7418b3d8", "filename": "gcc/testsuite/gcc.dg/torture/pr106414-2.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/613e3b86955ea3b4977490625328708e82bea6fa/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr106414-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/613e3b86955ea3b4977490625328708e82bea6fa/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr106414-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr106414-2.c?ref=613e3b86955ea3b4977490625328708e82bea6fa", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do run } */\n+\n+int a, b, c, d;\n+unsigned e;\n+int main() {\n+  c = e = -((a && 1) ^ ~(b || 0));\n+  if (e < -1)\n+    d = c;\n+  if (!d)\n+    __builtin_abort();\n+  return 0;\n+}"}]}