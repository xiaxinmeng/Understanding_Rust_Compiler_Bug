{"sha": "2028b66d86a328f2e15bf5bd2077b5cdb9bb8f93", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjAyOGI2NmQ4NmEzMjhmMmUxNWJmNWJkMjA3N2I1Y2RiOWJiOGY5Mw==", "commit": {"author": {"name": "Stefano Soffia", "email": "soffia@cs.unipr.it", "date": "2008-05-12T10:15:34Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2008-05-12T10:15:34Z"}, "message": "vector (vector<>::_M_requires_reallocation): Just use this->capacity().\n\n2008-05-12  Stefano Soffia  <soffia@cs.unipr.it>\n\t    Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* include/debug/vector (vector<>::_M_requires_reallocation): Just\n\tuse this->capacity().\n\t(vector<>::capacity): Move non-pedantic / pedantic logic here.\n\t* testsuite/23_containers/vector/\n\tdebug_mode_requires_reallocation-2.cc: New.\n\n\t* testsuite/23_containers/vector/debug_mode_requires_reallocation.cc:\n\tRename to debug_mode_requires_reallocation-1.cc\n\nCo-Authored-By: Paolo Carlini <paolo.carlini@oracle.com>\n\nFrom-SVN: r135208", "tree": {"sha": "d784f449199154c82868eac9a3e3a361aa8952d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d784f449199154c82868eac9a3e3a361aa8952d4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2028b66d86a328f2e15bf5bd2077b5cdb9bb8f93", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2028b66d86a328f2e15bf5bd2077b5cdb9bb8f93", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2028b66d86a328f2e15bf5bd2077b5cdb9bb8f93", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2028b66d86a328f2e15bf5bd2077b5cdb9bb8f93/comments", "author": null, "committer": null, "parents": [{"sha": "b3aaa29ac40cf49b62efc96db98500cce8491330", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3aaa29ac40cf49b62efc96db98500cce8491330", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b3aaa29ac40cf49b62efc96db98500cce8491330"}], "stats": {"total": 82, "additions": 74, "deletions": 8}, "files": [{"sha": "b81746e86ece62532c62b74e65e94415d90b479a", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2028b66d86a328f2e15bf5bd2077b5cdb9bb8f93/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2028b66d86a328f2e15bf5bd2077b5cdb9bb8f93/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=2028b66d86a328f2e15bf5bd2077b5cdb9bb8f93", "patch": "@@ -1,3 +1,15 @@\n+2008-05-12  Stefano Soffia  <soffia@cs.unipr.it>\n+\t    Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* include/debug/vector (vector<>::_M_requires_reallocation): Just\n+\tuse this->capacity().\n+\t(vector<>::capacity): Move non-pedantic / pedantic logic here.\n+\t* testsuite/23_containers/vector/\n+\tdebug_mode_requires_reallocation-2.cc: New.\n+\n+\t* testsuite/23_containers/vector/debug_mode_requires_reallocation.cc:\n+\tRename to debug_mode_requires_reallocation-1.cc\n+\n 2008-05-10  Roberto Bagnara  <bagnara@cs.unipr.it>\n \t    Paolo Carlini  <paolo.carlini@oracle.com>\n "}, {"sha": "7945b54591e5171153664ff241dc51054479f8fb", "filename": "libstdc++-v3/include/debug/vector", "status": "modified", "additions": 11, "deletions": 8, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2028b66d86a328f2e15bf5bd2077b5cdb9bb8f93/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fvector", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2028b66d86a328f2e15bf5bd2077b5cdb9bb8f93/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fvector", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fvector?ref=2028b66d86a328f2e15bf5bd2077b5cdb9bb8f93", "patch": "@@ -216,7 +216,16 @@ namespace __debug\n \t  this->_M_invalidate_all();\n       }\n \n-      using _Base::capacity;\n+      size_type\n+      capacity() const\n+      {\n+#ifdef _GLIBCXX_DEBUG_PEDANTIC\n+\treturn _M_guaranteed_capacity;\n+#else\n+\treturn _Base::capacity();\n+#endif\n+      }\n+\n       using _Base::empty;\n \n       void\n@@ -442,13 +451,7 @@ namespace __debug\n \n       bool\n       _M_requires_reallocation(size_type __elements)\n-      {\n-#ifndef _GLIBCXX_DEBUG_PEDANTIC\n-\treturn __elements > this->capacity();\n-#else\n-\treturn __elements > _M_guaranteed_capacity;\n-#endif\n-      }\n+      { return __elements > this->capacity(); }\n \n       void\n       _M_update_guaranteed_capacity()"}, {"sha": "079a70f497bb446a48fc61dddd8a7873d8a87d0b", "filename": "libstdc++-v3/testsuite/23_containers/vector/debug_mode_requires_reallocation-1.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2028b66d86a328f2e15bf5bd2077b5cdb9bb8f93/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fdebug_mode_requires_reallocation-1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2028b66d86a328f2e15bf5bd2077b5cdb9bb8f93/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fdebug_mode_requires_reallocation-1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fdebug_mode_requires_reallocation-1.cc?ref=2028b66d86a328f2e15bf5bd2077b5cdb9bb8f93", "previous_filename": "libstdc++-v3/testsuite/23_containers/vector/debug_mode_requires_reallocation.cc"}, {"sha": "a09be47fd17c8e343254509dcdad183b695efd9b", "filename": "libstdc++-v3/testsuite/23_containers/vector/debug_mode_requires_reallocation-2.cc", "status": "added", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2028b66d86a328f2e15bf5bd2077b5cdb9bb8f93/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fdebug_mode_requires_reallocation-2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2028b66d86a328f2e15bf5bd2077b5cdb9bb8f93/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fdebug_mode_requires_reallocation-2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Fdebug_mode_requires_reallocation-2.cc?ref=2028b66d86a328f2e15bf5bd2077b5cdb9bb8f93", "patch": "@@ -0,0 +1,51 @@\n+// Copyright (C) 2008 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// { dg-options \"-D_GLIBCXX_DEBUG -D_GLIBCXX_DEBUG_PEDANTIC\" }\n+\n+#include <vector>\n+#include <algorithm>\n+#include <iterator>\n+\n+// http://gcc.gnu.org/ml/libstdc++/2008-05/msg00046.html\n+void test01()\n+{\n+  typedef std::vector<unsigned> array_t;\n+  typedef std::back_insert_iterator<array_t> bii_t;\n+\n+  array_t a;\n+\n+  // Push 5 elements.\n+  a.push_back(0);\n+  a.push_back(1);\n+  a.push_back(2);\n+  a.push_back(3);\n+  a.push_back(4);\n+  // Ensure that there is enough space for other two elements.\n+  // (2 + 5 = 7)\n+  if (a.capacity() < 7)\n+    a.reserve(7);\n+  // Add two new elements.\n+  std::copy(a.begin(), a.begin() + 2, bii_t(a));\n+} \n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}]}