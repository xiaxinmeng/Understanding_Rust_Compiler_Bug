{"sha": "4cb5f5a366efff0317dd0a432a56464eafb6f3f4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGNiNWY1YTM2NmVmZmYwMzE3ZGQwYTQzMmE1NjQ2NGVhZmI2ZjNmNA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2016-02-16T09:00:32Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2016-02-16T09:00:32Z"}, "message": "re PR testsuite/69586 (FAIL: gcc.dg/uninit-21.c for target defaulting to short enum)\n\n2016-02-16  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/69586\n\t* tree-vrp.c (register_edge_assert_for_2): Handle all integral\n\ttypes for conversion sources.\n\nFrom-SVN: r233445", "tree": {"sha": "f7984e1b910fa279e5c5f6bd1bff6de72540470b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f7984e1b910fa279e5c5f6bd1bff6de72540470b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4cb5f5a366efff0317dd0a432a56464eafb6f3f4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4cb5f5a366efff0317dd0a432a56464eafb6f3f4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4cb5f5a366efff0317dd0a432a56464eafb6f3f4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4cb5f5a366efff0317dd0a432a56464eafb6f3f4/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c8cfe96e193f91077b97f2ca8605b83628a01448", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8cfe96e193f91077b97f2ca8605b83628a01448", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c8cfe96e193f91077b97f2ca8605b83628a01448"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "b7878906b9bcd10db0475ce4c0849126a08b8bf4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4cb5f5a366efff0317dd0a432a56464eafb6f3f4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4cb5f5a366efff0317dd0a432a56464eafb6f3f4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4cb5f5a366efff0317dd0a432a56464eafb6f3f4", "patch": "@@ -1,3 +1,9 @@\n+2016-02-16  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/69586\n+\t* tree-vrp.c (register_edge_assert_for_2): Handle all integral\n+\ttypes for conversion sources.\n+\n 2016-02-16  Richard Biener  <rguenther@suse.de>\n \n \tPR middle-end/69801"}, {"sha": "0ce7f1fde5aed18a1e3e9fa4861144c08e3b488d", "filename": "gcc/tree-vrp.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4cb5f5a366efff0317dd0a432a56464eafb6f3f4/gcc%2Ftree-vrp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4cb5f5a366efff0317dd0a432a56464eafb6f3f4/gcc%2Ftree-vrp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vrp.c?ref=4cb5f5a366efff0317dd0a432a56464eafb6f3f4", "patch": "@@ -5449,7 +5449,7 @@ register_edge_assert_for_2 (tree name, edge e, gimple_stmt_iterator bsi,\n       cst2 = NULL_TREE;\n       if (rhs_code == BIT_AND_EXPR\n \t  || (CONVERT_EXPR_CODE_P (rhs_code)\n-\t      && TREE_CODE (TREE_TYPE (val)) == INTEGER_TYPE\n+\t      && INTEGRAL_TYPE_P (TREE_TYPE (val))\n \t      && TYPE_UNSIGNED (TREE_TYPE (val))\n \t      && TYPE_PRECISION (TREE_TYPE (gimple_assign_rhs1 (def_stmt)))\n \t\t > prec))"}]}