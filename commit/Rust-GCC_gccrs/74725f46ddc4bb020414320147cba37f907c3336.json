{"sha": "74725f46ddc4bb020414320147cba37f907c3336", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzQ3MjVmNDZkZGM0YmIwMjA0MTQzMjAxNDdjYmEzN2Y5MDdjMzMzNg==", "commit": {"author": {"name": "Tom de Vries", "email": "tdevries@suse.de", "date": "2018-07-09T07:17:45Z"}, "committer": {"name": "Tom de Vries", "email": "vries@gcc.gnu.org", "date": "2018-07-09T07:17:45Z"}, "message": "[debug] Handle debug references to skipped params\n\nWhen compiling guality/vla-1.c with -O3 -g, vla a in f1 is optimized away, but\nf1 still contains a debug expression describing the upper bound of the vla\n(D.1914):\n...\n     __attribute__((noinline))\n     f1 (intD.6 iD.1900)\n     {\n       <bb 2>\n       saved_stack.1_2 = __builtin_stack_save ();\n       # DEBUG BEGIN_STMT\n       # DEBUG D#3 => i_1(D) + 1\n       # DEBUG D#2 => (long intD.8) D#3\n       # DEBUG D#1 => D#2 + -1\n       # DEBUG D.1914 => (sizetype) D#1\n...\n\nThen f1 is cloned to a version f1.constprop with no parameters, eliminating\nparameter i, and 'DEBUG D#3 => i_1(D) + 1' turns into 'D#3 => NULL'.\n\nThis patch fixes that by defining debug expressions for default defs of\neliminated parameters in remap_ssa_name:\n...\n     __attribute__((noinline))\n     f1.constprop ()\n     {\n       intD.6 iD.1949;\n\n       <bb 3>\n       # DEBUG D#8 s=> iD.1900\n       # DEBUG iD.1949 => D#8\n\n       <bb 2>\n+      # DEBUG D#6 s=> iD.1949\n       saved_stack.1_1 = __builtin_stack_save ();\n       # DEBUG BEGIN_STMT\n-      # DEBUG D#3 => NULL\n+      # DEBUG D#3 => D#6 + 1\n       # DEBUG D#2 => (long intD.8) D#3\n       # DEBUG D#1 => D#2 + -1\n       # DEBUG D.1951 => (sizetype) D#1\n...\n\nBootstrapped and reg-tested on x86_64.\n\n2018-07-09  Tom de Vries  <tdevries@suse.de>\n\n\t* cfgexpand.c (expand_debug_source_expr): Handle VAR_DECL.\n\t* tree-inline.c (remap_ssa_name): Handle default def ssa_name mapping\n\tonto VAR_DECL with abstract origin.\n\n\t* gcc.dg/vla-1.c: New test.\n\nFrom-SVN: r262510", "tree": {"sha": "0cd5a75eaa561de535e685a79f3facf375a78c90", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0cd5a75eaa561de535e685a79f3facf375a78c90"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/74725f46ddc4bb020414320147cba37f907c3336", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74725f46ddc4bb020414320147cba37f907c3336", "html_url": "https://github.com/Rust-GCC/gccrs/commit/74725f46ddc4bb020414320147cba37f907c3336", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74725f46ddc4bb020414320147cba37f907c3336/comments", "author": {"login": "vries", "id": 4057235, "node_id": "MDQ6VXNlcjQwNTcyMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vries", "html_url": "https://github.com/vries", "followers_url": "https://api.github.com/users/vries/followers", "following_url": "https://api.github.com/users/vries/following{/other_user}", "gists_url": "https://api.github.com/users/vries/gists{/gist_id}", "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vries/subscriptions", "organizations_url": "https://api.github.com/users/vries/orgs", "repos_url": "https://api.github.com/users/vries/repos", "events_url": "https://api.github.com/users/vries/events{/privacy}", "received_events_url": "https://api.github.com/users/vries/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d2c8944b75e67198f748a7df44cfcc6427741133", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2c8944b75e67198f748a7df44cfcc6427741133", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d2c8944b75e67198f748a7df44cfcc6427741133"}], "stats": {"total": 42, "additions": 41, "deletions": 1}, "files": [{"sha": "8add29b83a34b589a03cc36cb29acd219cd2e747", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74725f46ddc4bb020414320147cba37f907c3336/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74725f46ddc4bb020414320147cba37f907c3336/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=74725f46ddc4bb020414320147cba37f907c3336", "patch": "@@ -1,3 +1,9 @@\n+2018-07-09  Tom de Vries  <tdevries@suse.de>\n+\n+\t* cfgexpand.c (expand_debug_source_expr): Handle VAR_DECL.\n+\t* tree-inline.c (remap_ssa_name): Handle default def ssa_name mapping\n+\tonto VAR_DECL with abstract origin.\n+\n 2018-07-07  Jim Wilson  <jimw@sifive.com>\n \n \t* config/riscv/riscv.c (TARGET_CUSTOM_FUNCTION_DESCRIPTORS): New."}, {"sha": "d6e3c382085106f698df85e939136ae7d3d196f5", "filename": "gcc/cfgexpand.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74725f46ddc4bb020414320147cba37f907c3336/gcc%2Fcfgexpand.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74725f46ddc4bb020414320147cba37f907c3336/gcc%2Fcfgexpand.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgexpand.c?ref=74725f46ddc4bb020414320147cba37f907c3336", "patch": "@@ -5141,6 +5141,10 @@ expand_debug_source_expr (tree exp)\n \n   switch (TREE_CODE (exp))\n     {\n+    case VAR_DECL:\n+      if (DECL_ABSTRACT_ORIGIN (exp))\n+\treturn expand_debug_source_expr (DECL_ABSTRACT_ORIGIN (exp));\n+      break;\n     case PARM_DECL:\n       {\n \tmode = DECL_MODE (exp);"}, {"sha": "988fac11b05b87e446ce5cce55e19eebb0a881b7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74725f46ddc4bb020414320147cba37f907c3336/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74725f46ddc4bb020414320147cba37f907c3336/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=74725f46ddc4bb020414320147cba37f907c3336", "patch": "@@ -1,3 +1,7 @@\n+2018-07-09  Tom de Vries  <tdevries@suse.de>\n+\n+\t* gcc.dg/vla-1.c: New test.\n+\n 2018-07-07  Tom de Vries  <tdevries@suse.de>\n \n \t* gcc.misc-tests/options.exp (check_for_all_options): Clean up dump"}, {"sha": "56437ae44deb7cee27160a6bc404c6952c32e0ea", "filename": "gcc/testsuite/gcc.dg/vla-1.c", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74725f46ddc4bb020414320147cba37f907c3336/gcc%2Ftestsuite%2Fgcc.dg%2Fvla-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74725f46ddc4bb020414320147cba37f907c3336/gcc%2Ftestsuite%2Fgcc.dg%2Fvla-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvla-1.c?ref=74725f46ddc4bb020414320147cba37f907c3336", "patch": "@@ -0,0 +1,25 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-g -O3 -fdump-tree-optimized -fvar-tracking-assignments -fno-selective-scheduling -fno-selective-scheduling2\" } */\n+\n+int __attribute__((noinline))\n+f1 (int i)\n+{\n+  char a[i + 1];\n+  char b[i + 2];\n+  b[1] = 3;\n+  a[0] = 5;\n+  return a[0] + b[1];\n+}\n+\n+int\n+main ()\n+{\n+  volatile int j;\n+  int x = 5;\n+  j = f1 (x);\n+  return 0;\n+}\n+\n+/* One debug source bind is generated for the parameter, and two to describe the\n+   sizes of a and b.  */\n+/* { dg-final { scan-tree-dump-times \" s=> i\" 3 \"optimized\" } } */"}, {"sha": "45aba8171a638cb58f2f454364c61f4782116274", "filename": "gcc/tree-inline.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74725f46ddc4bb020414320147cba37f907c3336/gcc%2Ftree-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74725f46ddc4bb020414320147cba37f907c3336/gcc%2Ftree-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.c?ref=74725f46ddc4bb020414320147cba37f907c3336", "patch": "@@ -208,7 +208,8 @@ remap_ssa_name (tree name, copy_body_data *id)\n \t  n = id->decl_map->get (val);\n \t  if (n != NULL)\n \t    val = *n;\n-\t  if (TREE_CODE (val) != PARM_DECL)\n+\t  if (TREE_CODE (val) != PARM_DECL\n+\t      && !(VAR_P (val) && DECL_ABSTRACT_ORIGIN (val)))\n \t    {\n \t      processing_debug_stmt = -1;\n \t      return name;"}]}