{"sha": "bfe1ab222a8095b31c29d8f3530268f048fea00f", "node_id": "C_kwDOANBUbNoAKGJmZTFhYjIyMmE4MDk1YjMxYzI5ZDhmMzUzMDI2OGYwNDhmZWEwMGY", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2022-12-08T09:51:29Z"}, "committer": {"name": "Marc Poulhi\u00e8s", "email": "poulhies@adacore.com", "date": "2023-01-03T09:29:53Z"}, "message": "ada: Fix calling convention of foreign functions returning limited type\n\nSuch functions use neither Ada 2005's build-in-place mechanism nor Ada 95's\nreturn-by-reference mechanism, but instead the common calling convention of\nfunctions returning a nonlimited by-reference type.\n\ngcc/ada/\n\n\t* exp_ch6.adb (Is_Build_In_Place_Function): Adjust comment.\n\t* sem_util.adb (Compute_Returns_By_Ref): Do not set Returns_By_Ref\n\ton functions with foreign convention.", "tree": {"sha": "0c9b2fb1534a52fb29ce8a0e67646f4e916d7788", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0c9b2fb1534a52fb29ce8a0e67646f4e916d7788"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bfe1ab222a8095b31c29d8f3530268f048fea00f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bfe1ab222a8095b31c29d8f3530268f048fea00f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bfe1ab222a8095b31c29d8f3530268f048fea00f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bfe1ab222a8095b31c29d8f3530268f048fea00f/comments", "author": null, "committer": {"login": "dkm", "id": 87603, "node_id": "MDQ6VXNlcjg3NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/87603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dkm", "html_url": "https://github.com/dkm", "followers_url": "https://api.github.com/users/dkm/followers", "following_url": "https://api.github.com/users/dkm/following{/other_user}", "gists_url": "https://api.github.com/users/dkm/gists{/gist_id}", "starred_url": "https://api.github.com/users/dkm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dkm/subscriptions", "organizations_url": "https://api.github.com/users/dkm/orgs", "repos_url": "https://api.github.com/users/dkm/repos", "events_url": "https://api.github.com/users/dkm/events{/privacy}", "received_events_url": "https://api.github.com/users/dkm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "742084ada1e0974f5c7491fda65702e45bd07848", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/742084ada1e0974f5c7491fda65702e45bd07848", "html_url": "https://github.com/Rust-GCC/gccrs/commit/742084ada1e0974f5c7491fda65702e45bd07848"}], "stats": {"total": 15, "additions": 9, "deletions": 6}, "files": [{"sha": "d90ee41712e223fef138b6a93270f1cd8c3eb377", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfe1ab222a8095b31c29d8f3530268f048fea00f/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfe1ab222a8095b31c29d8f3530268f048fea00f/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=bfe1ab222a8095b31c29d8f3530268f048fea00f", "patch": "@@ -7759,10 +7759,10 @@ package body Exp_Ch6 is\n          return False;\n       end if;\n \n-      --  If the function is imported from a foreign language, we don't do\n-      --  build-in-place, whereas Import (Ada) functions can do it. Note also\n-      --  that it is OK for a build-in-place function to return a type with a\n-      --  foreign convention because the machinery ensures there is no copying.\n+      --  We never use build-in-place if the convention is other than Ada,\n+      --  but note that it is OK for a build-in-place function to return a\n+      --  type with a foreign convention because the machinery ensures there\n+      --  is no copying.\n \n       return (Kind in E_Function | E_Generic_Function\n                or else"}, {"sha": "a05ac74d35fa50c11f3ab525a2f2fc0f050ce6c5", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bfe1ab222a8095b31c29d8f3530268f048fea00f/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bfe1ab222a8095b31c29d8f3530268f048fea00f/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=bfe1ab222a8095b31c29d8f3530268f048fea00f", "patch": "@@ -6163,9 +6163,12 @@ package body Sem_Util is\n       elsif Is_Build_In_Place_Function (Func) then\n          Set_Returns_By_Ref (Func);\n \n-      --  In Ada 95, limited types are returned by reference\n+      --  In Ada 95, limited types are returned by reference, but not if the\n+      --  convention is other than Ada.\n \n-      elsif Is_Limited_View (Typ) then\n+      elsif Is_Limited_View (Typ)\n+        and then not Has_Foreign_Convention (Func)\n+      then\n          Set_Returns_By_Ref (Func);\n       end if;\n    end Compute_Returns_By_Ref;"}]}