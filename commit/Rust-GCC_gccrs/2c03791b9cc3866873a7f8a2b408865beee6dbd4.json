{"sha": "2c03791b9cc3866873a7f8a2b408865beee6dbd4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmMwMzc5MWI5Y2MzODY2ODczYTdmOGEyYjQwODg2NWJlZWU2ZGJkNA==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2010-09-14T18:12:04Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2010-09-14T18:12:04Z"}, "message": "Use ADD if result isn't used in memory address.\n\n2010-09-14  H.J. Lu  <hongjiu.lu@intel.com>\n\n\t* config/i386/i386.c (ix86_lea_for_add_ok): Return false if\n\tresult isn't used in memory address.\n\nFrom-SVN: r164287", "tree": {"sha": "daf8aa6a8275b6fc85fdc5760232f25527e2cf5f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/daf8aa6a8275b6fc85fdc5760232f25527e2cf5f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2c03791b9cc3866873a7f8a2b408865beee6dbd4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c03791b9cc3866873a7f8a2b408865beee6dbd4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c03791b9cc3866873a7f8a2b408865beee6dbd4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c03791b9cc3866873a7f8a2b408865beee6dbd4/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "26983c22532f0119ef77c5ad53e622a38a8de81f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26983c22532f0119ef77c5ad53e622a38a8de81f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/26983c22532f0119ef77c5ad53e622a38a8de81f"}], "stats": {"total": 15, "additions": 12, "deletions": 3}, "files": [{"sha": "979489b0abcbf82923fca85d6e81f56b2e5be554", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c03791b9cc3866873a7f8a2b408865beee6dbd4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c03791b9cc3866873a7f8a2b408865beee6dbd4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2c03791b9cc3866873a7f8a2b408865beee6dbd4", "patch": "@@ -1,3 +1,8 @@\n+2010-09-14  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* config/i386/i386.c (ix86_lea_for_add_ok): Return false if\n+\tresult isn't used in memory address.\n+\n 2010-09-14  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* defaults.h (UNITS_PER_SIMD_WORD): Removed."}, {"sha": "19d6387d4440fd3381258e343128ba7a256de2bf", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c03791b9cc3866873a7f8a2b408865beee6dbd4/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c03791b9cc3866873a7f8a2b408865beee6dbd4/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=2c03791b9cc3866873a7f8a2b408865beee6dbd4", "patch": "@@ -14871,15 +14871,19 @@ ix86_lea_for_add_ok (rtx insn, rtx operands[])\n   else\n     {\n       int dist_define, dist_use;\n+\n+      /* Return false if REGNO0 isn't used in memory address. */\n+      dist_use = distance_agu_use (regno0, insn);\n+      if (dist_use <= 0)\n+\treturn false;\n+\n       dist_define = distance_non_agu_define (regno1, regno2, insn);\n       if (dist_define <= 0)\n         return true;\n \n       /* If this insn has both backward non-agu dependence and forward\n          agu dependence, the one with short distance take effect. */\n-      dist_use = distance_agu_use (regno0, insn);\n-      if (dist_use <= 0\n-\t  || (dist_define + IX86_LEA_PRIORITY) < dist_use)\n+      if ((dist_define + IX86_LEA_PRIORITY) < dist_use)\n         return false;\n \n       return true;"}]}