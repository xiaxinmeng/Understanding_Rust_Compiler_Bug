{"sha": "0ea80eb62c65245e3272300a5c407c1f2beb5f1f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGVhODBlYjYyYzY1MjQ1ZTMyNzIzMDBhNWM0MDdjMWYyYmViNWYxZg==", "commit": {"author": {"name": "Bernd Schmidt", "email": "bernd.schmidt@analog.com", "date": "2007-06-11T11:29:00Z"}, "committer": {"name": "Bernd Schmidt", "email": "bernds@gcc.gnu.org", "date": "2007-06-11T11:29:00Z"}, "message": "bfin.md (movdi_insn, [...]): Don't allow constant to memory moves.\n\n\t* config/bfin/bfin.md (movdi_insn, movsi_insn, movv2hi_insn,\n\tmovhi_insn, movqi_insn, movsf_insn, movdf_insn): Don't allow constant\n\tto memory moves.\n\nFrom-SVN: r125617", "tree": {"sha": "7f8e4169e6883f6a6eece140e66997ea7260ca29", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7f8e4169e6883f6a6eece140e66997ea7260ca29"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0ea80eb62c65245e3272300a5c407c1f2beb5f1f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ea80eb62c65245e3272300a5c407c1f2beb5f1f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ea80eb62c65245e3272300a5c407c1f2beb5f1f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ea80eb62c65245e3272300a5c407c1f2beb5f1f/comments", "author": null, "committer": null, "parents": [{"sha": "b0464c88979442236689310d43ee38b6579bc1e2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0464c88979442236689310d43ee38b6579bc1e2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b0464c88979442236689310d43ee38b6579bc1e2"}], "stats": {"total": 20, "additions": 13, "deletions": 7}, "files": [{"sha": "fd94652f733ee6a1264319db5986a61cbced3fe1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ea80eb62c65245e3272300a5c407c1f2beb5f1f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ea80eb62c65245e3272300a5c407c1f2beb5f1f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0ea80eb62c65245e3272300a5c407c1f2beb5f1f", "patch": "@@ -1,3 +1,9 @@\n+2007-06-11  Bernd Schmidt  <bernd.schmidt@analog.com>\n+\n+\t* config/bfin/bfin.md (movdi_insn, movsi_insn, movv2hi_insn,\n+\tmovhi_insn, movqi_insn, movsf_insn, movdf_insn): Don't allow constant\n+\tto memory moves.\n+\n 2007-06-11  Rafael Avila de Espindola  <espindola@google.com>\n \n \t* gcc/tree.c (signed_or_unsigned_type_for): New."}, {"sha": "d447825477beefd0b8896c1ca27ac44f2a297b28", "filename": "gcc/config/bfin/bfin.md", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ea80eb62c65245e3272300a5c407c1f2beb5f1f/gcc%2Fconfig%2Fbfin%2Fbfin.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ea80eb62c65245e3272300a5c407c1f2beb5f1f/gcc%2Fconfig%2Fbfin%2Fbfin.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fbfin%2Fbfin.md?ref=0ea80eb62c65245e3272300a5c407c1f2beb5f1f", "patch": "@@ -424,7 +424,7 @@\n (define_insn_and_split \"movdi_insn\"\n   [(set (match_operand:DI 0 \"nonimmediate_operand\" \"=x,mx,r\")\n \t(match_operand:DI 1 \"general_operand\" \"iFx,r,mx\"))]\n-  \"GET_CODE (operands[0]) != MEM || GET_CODE (operands[1]) != MEM\"\n+  \"GET_CODE (operands[0]) != MEM || GET_CODE (operands[1]) == REG\"\n   \"#\"\n   \"reload_completed\"\n   [(set (match_dup 2) (match_dup 3))\n@@ -524,7 +524,7 @@\n (define_insn \"*movsi_insn\"\n   [(set (match_operand:SI 0 \"nonimmediate_operand\" \"=da,x*y,da,x,x,x,da,mr\")\n \t(match_operand:SI 1 \"general_operand\" \"da,x*y,xKs7,xKsh,xKuh,ix,mr,da\"))]\n-  \"GET_CODE (operands[0]) != MEM || GET_CODE (operands[1]) != MEM\"\n+  \"GET_CODE (operands[0]) != MEM || GET_CODE (operands[1]) == REG\"\n  \"@\n    %0 = %1;\n    %0 = %1;\n@@ -562,7 +562,7 @@\n   [(set (match_operand:V2HI 0 \"nonimmediate_operand\" \"=da,da,d,dm\")\n         (match_operand:V2HI 1 \"general_operand\" \"i,di,md,d\"))]\n \n-  \"GET_CODE (operands[0]) != MEM || GET_CODE (operands[1]) != MEM\"\n+  \"GET_CODE (operands[0]) != MEM || GET_CODE (operands[1]) == REG\"\n   \"@\n    #\n    %0 = %1;\n@@ -584,7 +584,7 @@\n (define_insn \"*movhi_insn\"\n   [(set (match_operand:HI 0 \"nonimmediate_operand\" \"=x,da,x,d,mr\")\n         (match_operand:HI 1 \"general_operand\" \"x,xKs7,xKsh,mr,d\"))]\n-  \"GET_CODE (operands[0]) != MEM || GET_CODE (operands[1]) != MEM\"\n+  \"GET_CODE (operands[0]) != MEM || GET_CODE (operands[1]) == REG\"\n {\n   static const char *templates[] = {\n     \"%0 = %1;\",\n@@ -608,7 +608,7 @@\n (define_insn \"*movqi_insn\"\n   [(set (match_operand:QI 0 \"nonimmediate_operand\" \"=x,da,x,d,mr\")\n         (match_operand:QI 1 \"general_operand\" \"x,xKs7,xKsh,mr,d\"))]\n-  \"GET_CODE (operands[0]) != MEM || GET_CODE (operands[1]) != MEM\"\n+  \"GET_CODE (operands[0]) != MEM || GET_CODE (operands[1]) == REG\"\n   \"@\n    %0 = %1;\n    %0 = %1 (X);\n@@ -621,7 +621,7 @@\n (define_insn \"*movsf_insn\"\n   [(set (match_operand:SF 0 \"nonimmediate_operand\" \"=x,x,da,mr\")\n         (match_operand:SF 1 \"general_operand\" \"x,Fx,mr,da\"))]\n-  \"GET_CODE (operands[0]) != MEM || GET_CODE (operands[1]) != MEM\"\n+  \"GET_CODE (operands[0]) != MEM || GET_CODE (operands[1]) == REG\"\n   \"@\n    %0 = %1;\n    #\n@@ -632,7 +632,7 @@\n (define_insn_and_split \"movdf_insn\"\n   [(set (match_operand:DF 0 \"nonimmediate_operand\" \"=x,mx,r\")\n \t(match_operand:DF 1 \"general_operand\" \"iFx,r,mx\"))]\n-  \"GET_CODE (operands[0]) != MEM || GET_CODE (operands[1]) != MEM\"\n+  \"GET_CODE (operands[0]) != MEM || GET_CODE (operands[1]) == REG\"\n   \"#\"\n   \"reload_completed\"\n   [(set (match_dup 2) (match_dup 3))"}]}