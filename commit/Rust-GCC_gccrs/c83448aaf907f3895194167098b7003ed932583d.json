{"sha": "c83448aaf907f3895194167098b7003ed932583d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzgzNDQ4YWFmOTA3ZjM4OTUxOTQxNjcwOThiNzAwM2VkOTMyNTgzZA==", "commit": {"author": {"name": "Ghjuvan Lacambre", "email": "lacambre@adacore.com", "date": "2021-06-23T17:30:40Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-09-20T12:31:31Z"}, "message": "[Ada] Fix condition in op interpretation resolution\n\ngcc/ada/\n\n\t* sem_ch4.adb (Finc_Non_Universal_Interpretations): Fix check.", "tree": {"sha": "39db0f28526fcc9331e0f5fe63957d7982df4dda", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/39db0f28526fcc9331e0f5fe63957d7982df4dda"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c83448aaf907f3895194167098b7003ed932583d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c83448aaf907f3895194167098b7003ed932583d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c83448aaf907f3895194167098b7003ed932583d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c83448aaf907f3895194167098b7003ed932583d/comments", "author": {"login": "glacambre", "id": 11534587, "node_id": "MDQ6VXNlcjExNTM0NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/11534587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/glacambre", "html_url": "https://github.com/glacambre", "followers_url": "https://api.github.com/users/glacambre/followers", "following_url": "https://api.github.com/users/glacambre/following{/other_user}", "gists_url": "https://api.github.com/users/glacambre/gists{/gist_id}", "starred_url": "https://api.github.com/users/glacambre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/glacambre/subscriptions", "organizations_url": "https://api.github.com/users/glacambre/orgs", "repos_url": "https://api.github.com/users/glacambre/repos", "events_url": "https://api.github.com/users/glacambre/events{/privacy}", "received_events_url": "https://api.github.com/users/glacambre/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2743363047517c25a884fcf8e08a8108f1368fa6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2743363047517c25a884fcf8e08a8108f1368fa6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2743363047517c25a884fcf8e08a8108f1368fa6"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "1f1f5aaee61d0dafe921199054215fd96e176750", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c83448aaf907f3895194167098b7003ed932583d/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c83448aaf907f3895194167098b7003ed932583d/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=c83448aaf907f3895194167098b7003ed932583d", "patch": "@@ -6626,7 +6626,7 @@ package body Sem_Ch4 is\n                Get_Next_Interp (Index, It);\n             end loop;\n          end if;\n-      elsif Has_Compatible_Type (R, T1) then\n+      elsif Has_Compatible_Type (R, T1) or else Covers (Etype (R), T1) then\n          Add_One_Interp (N, Op_Id, Standard_Boolean, Base_Type (T1));\n       end if;\n    end Find_Non_Universal_Interpretations;"}]}