{"sha": "87eddedc5f9ae385958edd24d9d42981f702ecb2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODdlZGRlZGM1ZjlhZTM4NTk1OGVkZDI0ZDlkNDI5ODFmNzAyZWNiMg==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2017-09-09T12:41:19Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2017-09-09T12:41:19Z"}, "message": "decl.c (gnat_to_gnu_entity): Copy the layout of the record from the parent type only if...\n\n\t* gcc-interface/decl.c (gnat_to_gnu_entity) <E_Record_Type>: Copy the\n\tlayout of the record from the parent type only if both are or are not\n\tunchecked unions.\n\t(is_stored_discriminant): Return false for an unchecked union.\n\nFrom-SVN: r251934", "tree": {"sha": "7ec293a0b3b9c586c01489ba5104e89c78378201", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7ec293a0b3b9c586c01489ba5104e89c78378201"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/87eddedc5f9ae385958edd24d9d42981f702ecb2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87eddedc5f9ae385958edd24d9d42981f702ecb2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/87eddedc5f9ae385958edd24d9d42981f702ecb2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87eddedc5f9ae385958edd24d9d42981f702ecb2/comments", "author": null, "committer": null, "parents": [{"sha": "f4657d60cf7027c595f2df132b6d6c20435077a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4657d60cf7027c595f2df132b6d6c20435077a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f4657d60cf7027c595f2df132b6d6c20435077a4"}], "stats": {"total": 17, "additions": 13, "deletions": 4}, "files": [{"sha": "f02fde2386040e07231f76e9a9b9220f30f5cbdc", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87eddedc5f9ae385958edd24d9d42981f702ecb2/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87eddedc5f9ae385958edd24d9d42981f702ecb2/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=87eddedc5f9ae385958edd24d9d42981f702ecb2", "patch": "@@ -1,3 +1,10 @@\n+2017-09-09  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/decl.c (gnat_to_gnu_entity) <E_Record_Type>: Copy the\n+\tlayout of the record from the parent type only if both are or are not\n+\tunchecked unions.\n+\t(is_stored_discriminant): Return false for an unchecked union.\n+\n 2017-09-09  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/utils2.c (build_allocator): In type_annotate_only mode"}, {"sha": "f8752c8ae61159dcde88fc814a67ab559e54528c", "filename": "gcc/ada/gcc-interface/decl.c", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87eddedc5f9ae385958edd24d9d42981f702ecb2/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87eddedc5f9ae385958edd24d9d42981f702ecb2/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fdecl.c?ref=87eddedc5f9ae385958edd24d9d42981f702ecb2", "patch": "@@ -3287,15 +3287,15 @@ gnat_to_gnu_entity (Entity_Id gnat_entity, tree gnu_expr, bool definition)\n \t      }\n \n \t/* If this is a derived type with discriminants and these discriminants\n-\t   affect the initial shape it has inherited, factor them in.  But for\n-\t   an Unchecked_Union (it must be an Itype), just process the type.  */\n+\t   affect the initial shape it has inherited, factor them in.  */\n \tif (has_discr\n \t    && !is_extension\n \t    && !Has_Record_Rep_Clause (gnat_entity)\n \t    && Stored_Constraint (gnat_entity) != No_Elist\n \t    && (gnat_parent_type = Underlying_Type (Etype (gnat_entity)))\n \t    && Is_Record_Type (gnat_parent_type)\n-\t    && !Is_Unchecked_Union (gnat_parent_type)\n+\t    && Is_Unchecked_Union (gnat_entity)\n+\t       == Is_Unchecked_Union (gnat_parent_type)\n \t    && No_Reordering (gnat_entity) == No_Reordering (gnat_parent_type))\n \t  {\n \t    tree gnu_parent_type\n@@ -9328,7 +9328,9 @@ copy_and_substitute_in_size (tree new_type, tree old_type,\n static inline bool\n is_stored_discriminant (Entity_Id discr, Entity_Id record_type)\n {\n-  if (Is_Tagged_Type (record_type))\n+  if (Is_Unchecked_Union (record_type))\n+    return false;\n+  else if (Is_Tagged_Type (record_type))\n     return No (Corresponding_Discriminant (discr));\n   else if (Ekind (record_type) == E_Record_Type)\n     return Original_Record_Component (discr) == discr;"}]}