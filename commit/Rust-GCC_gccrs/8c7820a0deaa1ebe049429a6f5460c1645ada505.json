{"sha": "8c7820a0deaa1ebe049429a6f5460c1645ada505", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGM3ODIwYTBkZWFhMWViZTA0OTQyOWE2ZjU0NjBjMTY0NWFkYTUwNQ==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2002-09-17T05:50:44Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2002-09-17T05:50:44Z"}, "message": "c_shadow: Remove.\n\n\n2002-09-16  Benjamin Kosnik  <bkoz@redhat.com>\n\n        * include/c_shadow: Remove.\n        * include/bits/generic_shadow.h: Remove.\n        * include/Makefile.am: Remove generic_shadow.h.\n        * acinclude.m4: Remove c_shadow references.\n        * aclocal.m4: Regenerate.\n        * configure: Regenerate.\n        * mkcshadow: Remove.\n        * mkinclosure: Remove.\n\nFrom-SVN: r57231", "tree": {"sha": "e0fb825325a0f29d48e10ea5fa473f9500c14ebe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e0fb825325a0f29d48e10ea5fa473f9500c14ebe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8c7820a0deaa1ebe049429a6f5460c1645ada505", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c7820a0deaa1ebe049429a6f5460c1645ada505", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c7820a0deaa1ebe049429a6f5460c1645ada505", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c7820a0deaa1ebe049429a6f5460c1645ada505/comments", "author": null, "committer": null, "parents": [{"sha": "8269c9b8874fdac90d0d537a786c69ef0e2bc0a8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8269c9b8874fdac90d0d537a786c69ef0e2bc0a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8269c9b8874fdac90d0d537a786c69ef0e2bc0a8"}], "stats": {"total": 7565, "additions": 1091, "deletions": 6474}, "files": [{"sha": "69112ddfe00f57e3bfd17323c6266420b5b6edba", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c7820a0deaa1ebe049429a6f5460c1645ada505/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c7820a0deaa1ebe049429a6f5460c1645ada505/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=8c7820a0deaa1ebe049429a6f5460c1645ada505", "patch": "@@ -1,3 +1,14 @@\n+2002-09-16  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+        * include/c_shadow: Remove.\n+        * include/bits/generic_shadow.h: Remove.\n+        * include/Makefile.am: Remove generic_shadow.h.\n+        * acinclude.m4: Remove c_shadow references.\n+        * aclocal.m4: Regenerate.\n+        * configure: Regenerate.\n+        * mkcshadow: Remove.\n+        * mkinclosure: Remove.\n+\n 2002-09-16  Loren J. Rittle  <ljrittle@acm.org>\n \n \tlibstdc++/7922"}, {"sha": "3853df97b4d2d6ac3b6d9b4fa62cb442cc48bc58", "filename": "libstdc++-v3/Makefile.in", "status": "modified", "additions": 40, "deletions": 3, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c7820a0deaa1ebe049429a6f5460c1645ada505/libstdc%2B%2B-v3%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c7820a0deaa1ebe049429a6f5460c1645ada505/libstdc%2B%2B-v3%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FMakefile.in?ref=8c7820a0deaa1ebe049429a6f5460c1645ada505", "patch": "@@ -1,4 +1,4 @@\n-# Makefile.in generated automatically by automake 1.4-p6 from Makefile.am\n+# Makefile.in generated automatically by automake 1.4-p5 from Makefile.am\n \n # Copyright (C) 1994, 1995-8, 1999, 2001 Free Software Foundation, Inc.\n # This Makefile.in is free software; the Free Software Foundation\n@@ -159,7 +159,44 @@ MULTICLEAN = true\n # Work around what appears to be a GNU make bug handling MAKEFLAGS\n # values defined in terms of make variables, as is the case for CC and\n # friends when we are called from the top level Makefile.\n-AM_MAKEFLAGS =  \t\"AR_FLAGS=$(AR_FLAGS)\" \t\"CC_FOR_BUILD=$(CC_FOR_BUILD)\" \t\"CC_FOR_TARGET=$(CC_FOR_TARGET)\" \t\"CFLAGS=$(CFLAGS)\" \t\"CXXFLAGS=$(CXXFLAGS)\" \t\"CFLAGS_FOR_BUILD=$(CFLAGS_FOR_BUILD)\" \t\"CFLAGS_FOR_TARGET=$(CFLAGS_FOR_TARGET)\" \t\"INSTALL=$(INSTALL)\" \t\"INSTALL_DATA=$(INSTALL_DATA)\" \t\"INSTALL_PROGRAM=$(INSTALL_PROGRAM)\" \t\"INSTALL_SCRIPT=$(INSTALL_SCRIPT)\" \t\"LDFLAGS=$(LDFLAGS)\" \t\"LIBCFLAGS=$(LIBCFLAGS)\" \t\"LIBCFLAGS_FOR_TARGET=$(LIBCFLAGS_FOR_TARGET)\" \t\"MAKE=$(MAKE)\" \t\"MAKEINFO=$(MAKEINFO) $(MAKEINFOFLAGS)\" \t\"PICFLAG=$(PICFLAG)\" \t\"PICFLAG_FOR_TARGET=$(PICFLAG_FOR_TARGET)\" \t\"SHELL=$(SHELL)\" \t\"RUNTESTFLAGS=$(RUNTESTFLAGS)\" \t\"exec_prefix=$(exec_prefix)\" \t\"infodir=$(infodir)\" \t\"libdir=$(libdir)\" \t\"includedir=$(includedir)\" \t\"prefix=$(prefix)\" \t\"tooldir=$(tooldir)\" \t\"AR=$(AR)\" \t\"AS=$(AS)\" \t\"LD=$(LD)\" \t\"LIBCFLAGS=$(LIBCFLAGS)\" \t\"PICFLAG=$(PICFLAG)\" \t\"RANLIB=$(RANLIB)\" \t\"NM=$(NM)\" \t\"NM_FOR_BUILD=$(NM_FOR_BUILD)\" \t\"NM_FOR_TARGET=$(NM_FOR_TARGET)\" \t\"DESTDIR=$(DESTDIR)\" \t\"WERROR=$(WERROR)\" \n+AM_MAKEFLAGS = \\\n+\t\"AR_FLAGS=$(AR_FLAGS)\" \\\n+\t\"CC_FOR_BUILD=$(CC_FOR_BUILD)\" \\\n+\t\"CC_FOR_TARGET=$(CC_FOR_TARGET)\" \\\n+\t\"CFLAGS=$(CFLAGS)\" \\\n+\t\"CXXFLAGS=$(CXXFLAGS)\" \\\n+\t\"CFLAGS_FOR_BUILD=$(CFLAGS_FOR_BUILD)\" \\\n+\t\"CFLAGS_FOR_TARGET=$(CFLAGS_FOR_TARGET)\" \\\n+\t\"INSTALL=$(INSTALL)\" \\\n+\t\"INSTALL_DATA=$(INSTALL_DATA)\" \\\n+\t\"INSTALL_PROGRAM=$(INSTALL_PROGRAM)\" \\\n+\t\"INSTALL_SCRIPT=$(INSTALL_SCRIPT)\" \\\n+\t\"LDFLAGS=$(LDFLAGS)\" \\\n+\t\"LIBCFLAGS=$(LIBCFLAGS)\" \\\n+\t\"LIBCFLAGS_FOR_TARGET=$(LIBCFLAGS_FOR_TARGET)\" \\\n+\t\"MAKE=$(MAKE)\" \\\n+\t\"MAKEINFO=$(MAKEINFO) $(MAKEINFOFLAGS)\" \\\n+\t\"PICFLAG=$(PICFLAG)\" \\\n+\t\"PICFLAG_FOR_TARGET=$(PICFLAG_FOR_TARGET)\" \\\n+\t\"SHELL=$(SHELL)\" \\\n+\t\"RUNTESTFLAGS=$(RUNTESTFLAGS)\" \\\n+\t\"exec_prefix=$(exec_prefix)\" \\\n+\t\"infodir=$(infodir)\" \\\n+\t\"libdir=$(libdir)\" \\\n+\t\"includedir=$(includedir)\" \\\n+\t\"prefix=$(prefix)\" \\\n+\t\"tooldir=$(tooldir)\" \\\n+\t\"AR=$(AR)\" \\\n+\t\"AS=$(AS)\" \\\n+\t\"LD=$(LD)\" \\\n+\t\"LIBCFLAGS=$(LIBCFLAGS)\" \\\n+\t\"PICFLAG=$(PICFLAG)\" \\\n+\t\"RANLIB=$(RANLIB)\" \\\n+\t\"NM=$(NM)\" \\\n+\t\"NM_FOR_BUILD=$(NM_FOR_BUILD)\" \\\n+\t\"NM_FOR_TARGET=$(NM_FOR_TARGET)\" \\\n+\t\"DESTDIR=$(DESTDIR)\" \\\n+\t\"WERROR=$(WERROR)\" \n \n \n # Subdir rules rely on $(FLAGS_TO_PASS)\n@@ -174,7 +211,7 @@ mkcheck.in testsuite_flags.in\n \n DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)\n \n-TAR = tar\n+TAR = gtar\n GZIP_ENV = --best\n all: all-redirect\n .SUFFIXES:"}, {"sha": "f0a7c365ef175273ad1070e8ca819fadb86b3df0", "filename": "libstdc++-v3/acinclude.m4", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c7820a0deaa1ebe049429a6f5460c1645ada505/libstdc%2B%2B-v3%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c7820a0deaa1ebe049429a6f5460c1645ada505/libstdc%2B%2B-v3%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facinclude.m4?ref=8c7820a0deaa1ebe049429a6f5460c1645ada505", "patch": "@@ -1687,9 +1687,8 @@ dnl\n dnl GLIBCPP_ENABLE_CHEADERS\n dnl --enable-cheaders= [does stuff].\n dnl --disable-cheaders [does not do anything, really].\n-dnl  +  This will eventually need to be 'c_shadow' by default.\n dnl  +  Usage:  GLIBCPP_ENABLE_CHEADERS[(DEFAULT)]\n-dnl       Where DEFAULT is either `c' or `c_std' or 'c_shadow'.  \n+dnl       Where DEFAULT is either `c' or `c_std'.\n dnl       If ommitted, it defaults to `c_std'.\n AC_DEFUN(GLIBCPP_ENABLE_CHEADERS, [dnl\n define([GLIBCPP_ENABLE_CHEADERS_DEFAULT], ifelse($1, c_std, c_std, c_std))dnl\n@@ -1705,9 +1704,6 @@ changequote([, ])\n    c_std)  \n         enable_cheaders=c_std \n         ;;\n-   c_shadow)  \n-        enable_cheaders=c_shadow \n-        ;;\n    *)   AC_MSG_ERROR([Unknown argument to enable/disable \"C\" headers]) \n         ;;\n   esac],\n@@ -1716,9 +1712,6 @@ changequote([, ])\n \n   dnl Option parsed, now set things appropriately\n   case \"$enable_cheaders\" in\n-    c_shadow) \n-        C_INCLUDE_DIR='${glibcpp_srcdir}/include/c_shadow'\n-        ;;\n     c_std)   \n         C_INCLUDE_DIR='${glibcpp_srcdir}/include/c_std'\n         ;;\n@@ -1767,7 +1760,6 @@ dnl TOPLEVEL_INCLUDES\n dnl LIBMATH_INCLUDES\n dnl LIBSUPCXX_INCLUDES\n dnl LIBIO_INCLUDES\n-dnl CSHADOW_INCLUDES\n dnl\n dnl GLIBCPP_EXPORT_INCLUDES\n AC_DEFUN(GLIBCPP_EXPORT_INCLUDES, ["}, {"sha": "2aed25b960181a276e4b9e28f8c22de40c3eab02", "filename": "libstdc++-v3/aclocal.m4", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c7820a0deaa1ebe049429a6f5460c1645ada505/libstdc%2B%2B-v3%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c7820a0deaa1ebe049429a6f5460c1645ada505/libstdc%2B%2B-v3%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Faclocal.m4?ref=8c7820a0deaa1ebe049429a6f5460c1645ada505", "patch": "@@ -1699,9 +1699,8 @@ dnl\n dnl GLIBCPP_ENABLE_CHEADERS\n dnl --enable-cheaders= [does stuff].\n dnl --disable-cheaders [does not do anything, really].\n-dnl  +  This will eventually need to be 'c_shadow' by default.\n dnl  +  Usage:  GLIBCPP_ENABLE_CHEADERS[(DEFAULT)]\n-dnl       Where DEFAULT is either `c' or `c_std' or 'c_shadow'.  \n+dnl       Where DEFAULT is either `c' or `c_std'.\n dnl       If ommitted, it defaults to `c_std'.\n AC_DEFUN(GLIBCPP_ENABLE_CHEADERS, [dnl\n define([GLIBCPP_ENABLE_CHEADERS_DEFAULT], ifelse($1, c_std, c_std, c_std))dnl\n@@ -1717,9 +1716,6 @@ changequote([, ])\n    c_std)  \n         enable_cheaders=c_std \n         ;;\n-   c_shadow)  \n-        enable_cheaders=c_shadow \n-        ;;\n    *)   AC_MSG_ERROR([Unknown argument to enable/disable \"C\" headers]) \n         ;;\n   esac],\n@@ -1728,9 +1724,6 @@ changequote([, ])\n \n   dnl Option parsed, now set things appropriately\n   case \"$enable_cheaders\" in\n-    c_shadow) \n-        C_INCLUDE_DIR='${glibcpp_srcdir}/include/c_shadow'\n-        ;;\n     c_std)   \n         C_INCLUDE_DIR='${glibcpp_srcdir}/include/c_std'\n         ;;\n@@ -1779,7 +1772,6 @@ dnl TOPLEVEL_INCLUDES\n dnl LIBMATH_INCLUDES\n dnl LIBSUPCXX_INCLUDES\n dnl LIBIO_INCLUDES\n-dnl CSHADOW_INCLUDES\n dnl\n dnl GLIBCPP_EXPORT_INCLUDES\n AC_DEFUN(GLIBCPP_EXPORT_INCLUDES, ["}, {"sha": "d4942b7dfffe0a3881d6098d0faffbf05aa4cac8", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 1038, "deletions": 1044, "changes": 2082, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c7820a0deaa1ebe049429a6f5460c1645ada505/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c7820a0deaa1ebe049429a6f5460c1645ada505/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=8c7820a0deaa1ebe049429a6f5460c1645ada505"}, {"sha": "8c3af03e6ffa6dd7a2792f1322e9e7dacc2889c4", "filename": "libstdc++-v3/include/Makefile.am", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c7820a0deaa1ebe049429a6f5460c1645ada505/libstdc%2B%2B-v3%2Finclude%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c7820a0deaa1ebe049429a6f5460c1645ada505/libstdc%2B%2B-v3%2Finclude%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2FMakefile.am?ref=8c7820a0deaa1ebe049429a6f5460c1645ada505", "patch": "@@ -47,7 +47,6 @@ bits_headers = \\\n \t${bits_srcdir}/fpos.h \\\n \t${bits_srcdir}/fstream.tcc \\\n \t${bits_srcdir}/functexcept.h \\\n-\t${bits_srcdir}/generic_shadow.h \\\n \t${bits_srcdir}/gslice.h \\\n \t${bits_srcdir}/gslice_array.h \\\n \t${bits_srcdir}/indirect_array.h \\"}, {"sha": "eaff2c0b57a5c961f2dec5ff79d1eb9640b3204e", "filename": "libstdc++-v3/include/Makefile.in", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c7820a0deaa1ebe049429a6f5460c1645ada505/libstdc%2B%2B-v3%2Finclude%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c7820a0deaa1ebe049429a6f5460c1645ada505/libstdc%2B%2B-v3%2Finclude%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2FMakefile.in?ref=8c7820a0deaa1ebe049429a6f5460c1645ada505", "patch": "@@ -154,7 +154,6 @@ bits_headers = \\\n \t${bits_srcdir}/fpos.h \\\n \t${bits_srcdir}/fstream.tcc \\\n \t${bits_srcdir}/functexcept.h \\\n-\t${bits_srcdir}/generic_shadow.h \\\n \t${bits_srcdir}/gslice.h \\\n \t${bits_srcdir}/gslice_array.h \\\n \t${bits_srcdir}/indirect_array.h \\"}, {"sha": "b87e71702e86b0afd0703747c2ac64347d08531e", "filename": "libstdc++-v3/include/bits/generic_shadow.h", "status": "removed", "additions": 0, "deletions": 59, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8269c9b8874fdac90d0d537a786c69ef0e2bc0a8/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fgeneric_shadow.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8269c9b8874fdac90d0d537a786c69ef0e2bc0a8/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fgeneric_shadow.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fgeneric_shadow.h?ref=8269c9b8874fdac90d0d537a786c69ef0e2bc0a8", "patch": "@@ -1,59 +0,0 @@\n-// generic C header shadow file -*- C++ -*-\n-\n-// Copyright (C) 1997, 1998, 1999, 2000 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-// This file is included by all the standard C <foo.h> headers\n-// after defining _SHADOW_NAME.\n-\n-#ifdef _IN_C_LEGACY_  /* sub-included by a C header */\n-\n-      // Get out of the \"swamp.\"\n-    } // Close extern \"C\"\n-  }   // Close namespace _C_legacy::\n-\n-# undef _IN_C_LEGACY_\n-# include _SHADOW_NAME\n-\n-  // Dive back into the \"swamp.\"\n-  namespace _C_legacy {\n-    extern \"C\" {\n-#     define _IN_C_LEGACY_\n-  \n-#else /* not _IN_C_LEGACY_:  directly included by user program */\n-  \n-# include _SHADOW_NAME\n-  \n-  // Expose global C names, including non-standard ones, but shadow\n-  // some names and types with the std:: C++ version.\n-\n-  using namespace ::_C_legacy::_C_shadow;\n-  \n-#endif /* _IN_C_LEGACY_ */\n-    \n-\n-"}, {"sha": "57e28db743c1258f7e6658dc3b46ff3a8f413d43", "filename": "libstdc++-v3/include/c_shadow/assert.h", "status": "removed", "additions": 0, "deletions": 55, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8269c9b8874fdac90d0d537a786c69ef0e2bc0a8/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fassert.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8269c9b8874fdac90d0d537a786c69ef0e2bc0a8/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fassert.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fassert.h?ref=8269c9b8874fdac90d0d537a786c69ef0e2bc0a8", "patch": "@@ -1,55 +0,0 @@\n-// -*- C++ -*- header wrapper.\n-\n-// Copyright (C) 1997-1999 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-\n-#ifndef  _INCLUDED_CPP_ASSERT_H_\n-# define _INCLUDED_CPP_ASSERT_H_ 1\n-\n-#ifdef _IN_C_LEGACY_  /* sub-included by a C header */\n-      // get out of the \"legacy\"\n-    } // close extern \"C\"\n-  }   // close namespace _C_legacy::\n-# undef _IN_C_LEGACY_\n-# define _ASSERT_NEED_C_LEGACY_\n-#endif\n-\n-#include <cassert>\n- \n-  // Expose global C names, including non-standard ones, but shadow\n-  // some names and types with the std:: C++ version.\n-\n-#ifdef _ASSERT_NEED_C_LEGACY_\n-  // dive back into the \"swamp\"\n-  namespace _C_legacy {\n-    extern \"C\" {\n-# define _IN_C_LEGACY_\n-# undef _ASSERT_NEED_C_LEGACY_\n-#endif /* _ASSERT_NEED_C_LEGACY_ */\n-#endif /* _INCLUDED_CPP_ASSERT_H_ */\n-"}, {"sha": "ada1ea16f9306ac36e88308381e48414c9d608c6", "filename": "libstdc++-v3/include/c_shadow/bits/std_cassert.h", "status": "removed", "additions": 0, "deletions": 61, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8269c9b8874fdac90d0d537a786c69ef0e2bc0a8/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fbits%2Fstd_cassert.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8269c9b8874fdac90d0d537a786c69ef0e2bc0a8/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fbits%2Fstd_cassert.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fbits%2Fstd_cassert.h?ref=8269c9b8874fdac90d0d537a786c69ef0e2bc0a8", "patch": "@@ -1,61 +0,0 @@\n-// -*- C++ -*- header wrapper.\n-\n-// Copyright (C) 1997-1999, 2000 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-//\n-// ISO C++ 14882: 19.2  Assertions\n-//\n-\n-// NB: This is assumed to be a conforming implementation.\n-\n-// ISO/IEC 9899:1999 (E), section 7.2\n-// assert.h\n-// ..defines the assert macro...\n-\n-// ISO 14882\n-// 17.4.1.2 Headers\n-// ... declarations and definitions (except for macros) are within\n-// namespace scope of the namepace std...\n-\n-\n-//#ifndef _CPP_CASSERT\n-//#define _CPP_CASSERT 1\n-\n-//namespace _C_legacy {\n-  extern \"C\" {\n-//#   define _IN_C_LEGACY_\n-#   pragma GCC system_header\n-#   include_next <assert.h>\n-  }\n-//} // namespace _C_legacy\n-\n-//#undef _IN_C_LEGACY_\n-\n-//#endif\n-\n-"}, {"sha": "d164d9c198efe0a98a96f9e53f411a922c96e696", "filename": "libstdc++-v3/include/c_shadow/bits/std_cctype.h", "status": "removed", "additions": 0, "deletions": 145, "changes": 145, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8269c9b8874fdac90d0d537a786c69ef0e2bc0a8/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fbits%2Fstd_cctype.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8269c9b8874fdac90d0d537a786c69ef0e2bc0a8/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fbits%2Fstd_cctype.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fbits%2Fstd_cctype.h?ref=8269c9b8874fdac90d0d537a786c69ef0e2bc0a8", "patch": "@@ -1,145 +0,0 @@\n-// -*- C++ -*- header wrapper.\n-\n-// Copyright (C) 1997-1999, 2000 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-// ISO C++ 14882: 22\n-//\n-\n-#ifndef _CPP_CCTYPE\n-#define _CPP_CCTYPE 1\n-\n-namespace _C_legacy {\n-  extern \"C\" {\n-#     define _IN_C_LEGACY_\n-#     pragma GCC system_header\n-#     include_next <ctype.h>\n-  }\n-\n-  inline int \n-  _CPP_isalnum_capture(int c) { return isalnum(c); }\n-\n-  inline int \n-  _CPP_isalpha_capture(int c) { return isalpha(c); }\n-\n-  inline int \n-  _CPP_iscntrl_capture(int c) { return iscntrl(c); }\n-\n-  inline int \n-  _CPP_isdigit_capture(int c) { return isdigit(c); }\n-\n-  inline int \n-  _CPP_isgraph_capture(int c) { return isgraph(c); }\n-\n-  inline int \n-  _CPP_islower_capture(int c) { return islower(c); }\n-\n-  inline int \n-  _CPP_isprint_capture(int c) { return isprint(c); }\n-\n-  inline int \n-  _CPP_ispunct_capture(int c) { return ispunct(c); }\n-\n-  inline int \n-  _CPP_isspace_capture(int c) { return isspace(c); }\n-\n-  inline int \n-  _CPP_isupper_capture(int c) { return isupper(c); }\n-\n-  inline int \n-  _CPP_isxdigit_capture(int c) { return isxdigit(c); }\n-\n-  inline int \n-  _CPP_tolower_capture(int c) { return tolower(c); }\n-\n-  inline int \n-  _CPP_toupper_capture(int c) { return toupper(c); }\n-} // namespace _C_legacy\n-\n-# undef isalnum\n-# undef isalpha\n-# undef iscntrl\n-# undef isdigit\n-# undef isgraph\n-# undef islower\n-# undef isprint\n-# undef ispunct\n-# undef isspace\n-# undef isupper\n-# undef isxdigit\n-\n-# undef tolower\n-# undef toupper\n-\n-namespace std {\n-  inline int \n-  isalnum(int __c) { return _C_legacy::_CPP_isalnum_capture(__c); }\n-\n-  inline int \n-  isalpha(int __c) { return _C_legacy::_CPP_isalpha_capture(__c); }\n-\n-  inline int \n-  iscntrl(int __c) { return _C_legacy::_CPP_iscntrl_capture(__c); }\n-\n-  inline int \n-  isdigit(int __c) { return _C_legacy::_CPP_isdigit_capture(__c); }\n-\n-  inline int \n-  isgraph(int __c) { return _C_legacy::_CPP_isgraph_capture(__c); }\n-\n-  inline int \n-  islower(int __c) { return _C_legacy::_CPP_islower_capture(__c); }\n-\n-  inline int \n-  isprint(int __c) { return _C_legacy::_CPP_isprint_capture(__c); }\n-\n-  inline int \n-  ispunct(int __c) { return _C_legacy::_CPP_ispunct_capture(__c); }\n-\n-  inline int \n-  isspace(int __c) { return _C_legacy::_CPP_isspace_capture(__c); }\n-\n-  inline int \n-  isupper(int __c) { return _C_legacy::_CPP_isupper_capture(__c); }\n-\n-  inline int \n-  isxdigit(int __c) { return _C_legacy::_CPP_isxdigit_capture(__c); }\n-\n-  inline int \n-  tolower(int __c) { return _C_legacy::_CPP_tolower_capture(__c); }\n-\n-  inline int \n-  toupper(int __c) { return _C_legacy::_CPP_toupper_capture(__c); }\n-} // namespace std\n-  \n-# undef _IN_C_LEGACY_\n-\n-#endif\n-\n-\n-\n-"}, {"sha": "0f94a420a8ec9accdf600b9d02c4fb689fd3db36", "filename": "libstdc++-v3/include/c_shadow/bits/std_cerrno.h", "status": "removed", "additions": 0, "deletions": 48, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8269c9b8874fdac90d0d537a786c69ef0e2bc0a8/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fbits%2Fstd_cerrno.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8269c9b8874fdac90d0d537a786c69ef0e2bc0a8/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fbits%2Fstd_cerrno.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fbits%2Fstd_cerrno.h?ref=8269c9b8874fdac90d0d537a786c69ef0e2bc0a8", "patch": "@@ -1,48 +0,0 @@\n-// -*- C++ -*- header wrapper.\n-\n-// Copyright (C) 1997-1999, 2000 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-// ISO C++ 14882: 19.3  Error numbers\n-//\n-\n-#ifndef _CPP_CERRNO\n-#define _CPP_CERRNO 1\n-\n-//namespace _C_legacy {\n-  extern \"C\" {\n-//#     define _IN_C_LEGACY_\n-#     pragma GCC system_header\n-#     include_next <errno.h>\n-  }\n-//} // namespace _C_legacy::\n-\n-//# undef _IN_C_LEGACY_\n-\n-#endif\n-\n-"}, {"sha": "d8885e69c44cb22b472bbaf4945262b4cdb15a4b", "filename": "libstdc++-v3/include/c_shadow/bits/std_cfloat.h", "status": "removed", "additions": 0, "deletions": 54, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8269c9b8874fdac90d0d537a786c69ef0e2bc0a8/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fbits%2Fstd_cfloat.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8269c9b8874fdac90d0d537a786c69ef0e2bc0a8/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fbits%2Fstd_cfloat.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fbits%2Fstd_cfloat.h?ref=8269c9b8874fdac90d0d537a786c69ef0e2bc0a8", "patch": "@@ -1,54 +0,0 @@\n-// -*- C++ -*- header wrapper.\n-\n-// Copyright (C) 1997-1999, 2000 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-//\n-// ISO C++ 14882: 18.2.2  Implementation properties: C library\n-//\n-\n-#ifndef _CPP_CFLOAT\n-#define _CPP_CFLOAT 1\n-\n-namespace _C_legacy {\n-  extern \"C\" {\n-#     define _IN_C_LEGACY_\n-#     pragma GCC system_header\n-#     include_next <float.h>\n-  }\n-} // namespace _C_legacy\n-\n-# undef _IN_C_LEGACY_\n-\n-#endif\n-\n-\n-\n-\n-\n-\n-"}, {"sha": "13d30065ab5860bfc470bcb82150c8cc85701f67", "filename": "libstdc++-v3/include/c_shadow/bits/std_climits.h", "status": "removed", "additions": 0, "deletions": 57, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8269c9b8874fdac90d0d537a786c69ef0e2bc0a8/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fbits%2Fstd_climits.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8269c9b8874fdac90d0d537a786c69ef0e2bc0a8/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fbits%2Fstd_climits.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fbits%2Fstd_climits.h?ref=8269c9b8874fdac90d0d537a786c69ef0e2bc0a8", "patch": "@@ -1,57 +0,0 @@\n-// -*- C++ -*- header wrapper.\n-\n-// Copyright (C) 1997-1999, 2000 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-//\n-// ISO C++ 14882: 18.2.2  Implementation properties: C library\n-//\n-\n-#ifndef _CPP_CLIMITS\n-#define _CPP_CLIMITS 1\n-\n-namespace _C_legacy {\n-  extern \"C\" {\n-#     define _IN_C_LEGACY_\n-#     pragma GCC system_header\n-#     include_next <limits.h>\n-  }\n-} // namespace _C_legacy\n-\n-# undef _IN_C_LEGACY_\n-\n-#endif\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-"}, {"sha": "86d600e262e96fb29f71e3b63ad4a889f1573683", "filename": "libstdc++-v3/include/c_shadow/bits/std_clocale.h", "status": "removed", "additions": 0, "deletions": 70, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8269c9b8874fdac90d0d537a786c69ef0e2bc0a8/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fbits%2Fstd_clocale.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8269c9b8874fdac90d0d537a786c69ef0e2bc0a8/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fbits%2Fstd_clocale.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fbits%2Fstd_clocale.h?ref=8269c9b8874fdac90d0d537a786c69ef0e2bc0a8", "patch": "@@ -1,70 +0,0 @@\n-// -*- C++ -*- header wrapper.\n-\n-// Copyright (C) 1997-1999, 2000 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-//\n-// ISO C++ 14882: 18.2.2  Implementation properties: C library\n-//\n-\n-#ifndef _CPP_CLOCALE\n-#define _CPP_CLOCALE     1\n-\n-# include <bits/std_cstddef.h> \n-\n-namespace _C_legacy {\n-  extern \"C\" {\n-#     define _IN_C_LEGACY_\n-#     pragma GCC system_header\n-#     include_next <locale.h>\n-  }\n-\n-  typedef lconv _CPP_lconv_capture;\n-} // namespace _C_legacy\n-\n-#  undef lconv\n-#  undef setlocale\n-#  undef localeconv\n-\n-namespace std {\n-  // Adopt C names into std::\n-  struct lconv : _C_legacy::_CPP_lconv_capture  { };\n-\n-  using _C_legacy::setlocale;  \n-\n-  inline lconv* \n-  localeconv() { return reinterpret_cast<lconv*>(_C_legacy::localeconv()); }\n-} // namespace std\n-\n-# undef _IN_C_LEGACY_\n-\n-#endif \n-\n-\n-\n-\n-"}, {"sha": "7201067e303f61492fc3502b72d014a2cf5038e3", "filename": "libstdc++-v3/include/c_shadow/bits/std_cmath.h", "status": "removed", "additions": 0, "deletions": 749, "changes": 749, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8269c9b8874fdac90d0d537a786c69ef0e2bc0a8/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fbits%2Fstd_cmath.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8269c9b8874fdac90d0d537a786c69ef0e2bc0a8/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fbits%2Fstd_cmath.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fbits%2Fstd_cmath.h?ref=8269c9b8874fdac90d0d537a786c69ef0e2bc0a8", "patch": "@@ -1,749 +0,0 @@\n-// -*- C++ -*- header wrapper.\n-\n-// Copyright (C) 1997-1999, 2000, 2002 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-//\n-// ISO C++ 14882: 26.5  C library\n-//\n-\n-#ifndef _CPP_CMATH\n-#define _CPP_CMATH 1\n-\n-# include <bits/c++config.h>\n-\n-namespace _C_legacy {\n-  extern \"C\" {\n-#     define _IN_C_LEGACY_\n-#     pragma GCC system_header\n-#     include_next <math.h>\n-  }\n-\n-#if _GLIBCPP_HAVE_ACOSF\n-  inline float \n-  _CPP_acos_capture(float __x) { return acosf(__x); }\n-#else\n-  inline float \n-  _CPP_acos_capture(float __x) { return acos(static_cast<double>(__x)); }\n-#endif\n-\n-#if _GLIBCPP_HAVE_ASINF\n-  inline float \n-  _CPP_asin_capture(float __x) { return asinf(__x); }\n-#else\n-  inline float \n-  _CPP_asin_capture(float __x) { return asin(static_cast<double>(__x)); }\n-#endif\n-\n-#if _GLIBCPP_HAVE_ATANF\n-  inline float \n-  _CPP_atan_capture(float __x) { return atanf(__x); }\n-#else\n-  inline float \n-  _CPP_atan_capture(float __x) { return atan(static_cast<double>(__x)); }\n-#endif\n-\n-#if _GLIBCPP_HAVE_ATAN2F\n-  inline float \n-  _CPP_atan2_capture(float __y, float __x) { return atan2f(__y, __x); }\n-#else\n-  inline float \n-  _CPP_atan2_capture(float __y, float __x) \n-  { return atan2(static_cast<double>(__y), static_cast<double>(__x)); }\n-#endif\n-\n-#if _GLIBCPP_HAVE_CEILF\n-  inline float \n-  _CPP_ceil_capture(float __x) { return ceilf(__x); }\n-#else\n-  inline float \n-  _CPP_ceil_capture(float __x) { return ceil(static_cast<double>(__x)); }\n-#endif\n-\n-  inline float \n-  _CPP_cos_capture(float __x) { return __builtin_cosf(__x); }\n-\n-#if _GLIBCPP_HAVE_COSHF\n-  inline float \n-  _CPP_cosh_capture(float __x) { return coshf(__x); }\n-#else\n-  inline float \n-  _CPP_cosh_capture(float __x) { return cosh(static_cast<double>(__x)); }\n-#endif\n-\n-#if _GLIBCPP_HAVE_EXPF\n-  inline float \n-  _CPP_exp_capture(float __x) { return expf(__x); }\n-#else\n-  inline float \n-  _CPP_exp_capture(float __x) { return exp(static_cast<double>(__x)); }\n-#endif\n-\n-  inline float \n-  _CPP_fabs_capture(float __x) { return __builtin_fabsf(__x); }\n-\n-#if _GLIBCPP_HAVE_FLOORF\n-  inline float \n-  _CPP_floor_capture(float __x) { return floorf(__x); }\n-#else\n-  inline float \n-  _CPP_floor_capture(float __x) { return floor(static_cast<double>(__x)); }\n-#endif\n-\n-#if _GLIBCPP_HAVE_FMODFF\n-  inline float \n-  _CPP_fmod_capture(float __x, float __y) { return fmodf(__x, __y); }\n-#else\n-  inline float \n-  _CPP_fmod_capture(float __x, float __y) \n-  { return fmod(static_cast<double>(__x), static_cast<double>(__y)); }\n-#endif\n-\n-#if _GLIBCPP_HAVE_FREXPF\n-  inline float \n-  _CPP_frexp_capture(float __x, int* __exp) { return frexpf(__x, __exp); }\n-#else\n-  inline float \n-  _CPP_frexp_capture(float __x, int* __exp) { return frexp(__x, __exp); }\n-#endif\n-\n-#if _GLIBCPP_HAVE_LDEXPF\n-  inline float \n-  _CPP_ldexp_capture(float __x, int __exp) { return ldexpf(__x, __exp); }\n-#else\n-  inline float \n-  _CPP_ldexp_capture(float __x, int __exp) \n-  { return ldexp(static_cast<double>(__x), __exp); }\n-#endif\n-\n-#if _GLIBCPP_HAVE_LOGF\n-  inline float \n-  _CPP_log_capture(float __x) { return logf(__x); }\n-#else\n-  inline float \n-  _CPP_log_capture(float __x) { return log(static_cast<double>(__x)); }\n-#endif\n-\n-#if _GLIBCPP_HAVE_LOG10F\n-  inline float \n-  _CPP_log10_capture(float __x) { return log10f(__x); }\n-#else\n-  inline float \n-  _CPP_log10_capture(float __x) { return log10(static_cast<double>(__x)); }\n-#endif\n-\n-#if _GLIBCPP_HAVE_MODFF\n-  inline float \n-  _CPP_modf_capture(float __x, float* __iptr) { return modff(__x, __iptr); }\n-#else\n-  inline float \n-  _CPP_modf_capture(float __x, float* __iptr)\n-  {\n-    double __tmp;\n-    double __res = _C_legacy::modf(static_cast<double>(__x), &__tmp);\n-    *__iptr = static_cast<float> (__tmp);\n-    return __res;\n-  }\n-#endif\n-  \n-#if _GLIBCPP_HAVE_POWF\n-  inline float \n-  _CPP_pow_capture(float __x, float __y) { return powf(__x, __y); }\n-#else\n-  inline float \n-  _CPP_pow_capture(float __x, float __y)\n-  { return pow(static_cast<double>(__x), static_cast<double>(__y)); }\n-#endif\n-\n-  float pow(float, int);\n-\n-  inline float \n-  _CPP_sin_capture(float __x) { return __builtin_sinf(__x); }\n-\n-#if _GLIBCPP_HAVE_SINHF\n-  inline float \n-  _CPP_sinh_capture(float __x) { return sinhf(__x); }\n-#else\n-  inline float \n-  _CPP_sinh_capture(float __x) { return sinh(static_cast<double>(__x)); }\n-#endif\n-\n-  inline float \n-  _CPP_sqrt_capture(float __x) { return __builtin_sqrtf(__x); }\n-\n-#if _GLIBCPP_HAVE_TANF\n-  inline float \n-  _CPP_tan_capture(float __x) { return tanf(__x); }\n-#else\n-  inline float \n-  _CPP_tan_capture(float __x) { return tan(static_cast<double>(__x)); }\n-#endif\n-\n-#if _GLIBCPP_HAVE_TANHF\n-  inline float \n-  _CPP_tanh_capture(float __x) { return tanhf(__x); }\n-#else\n-  inline float \n-  _CPP_tanh_capture(float __x) { return tanh(static_cast<double>(__x)); }\n-#endif\n-\n-\n-  inline double \n-  _CPP_acos_capture(double __x) { return acos(__x); }\n-\n-  inline double \n-  _CPP_asin_capture(double __x) { return asin(__x); }\n-\n-  inline double \n-  _CPP_atan_capture(double __x) { return atan(__x); }\n-\n-  inline double \n-  _CPP_atan2_capture(double __y, double __x) { return atan2(__y, __x); }\n-\n-  inline double \n-  _CPP_ceil_capture(double __x) { return ceil(__x); }\n-\n-  inline double \n-  _CPP_cos_capture(double __x) { return __builtin_cos(__x); }\n-\n-  inline double \n-  _CPP_cosh_capture(double __x) { return cosh(__x); }\n-\n-  inline double \n-  _CPP_exp_capture(double __x) { return exp(__x); }\n-\n-  inline double \n-  _CPP_fabs_capture(double __x) { return __builtin_fabs(__x); }\n-\n-  inline double \n-  _CPP_floor_capture(double __x) { return floor(__x); }\n-\n-  inline double \n-  _CPP_fmod_capture(double __x, double __y) { return fmod(__x, __y); }\n-\n-  inline double \n-  _CPP_frexp_capture(double __x, int* __exp) { return frexp(__x, __exp); }\n-\n-  inline double \n-  _CPP_ldexp_capture(double __x, int __exp) { return ldexp(__x, __exp); }\n-\n-  inline double \n-  _CPP_log_capture(double __x) { return log(__x); }\n-\n-  inline double \n-  _CPP_log10_capture(double __x) { return log10(__x); }\n-\n-  inline double \n-  _CPP_modf_capture(double __x, double* __iptr) { return modf(__x, __iptr); }\n-\n-  inline double \n-  _CPP_pow_capture(double __x, double __y) { return pow(__x, __y); }\n-\n-  inline double \n-  _CPP_sin_capture(double __x) { return __builtin_sin(__x); }\n-\n-  inline double \n-  _CPP_sinh_capture(double __x) { return sinh(__x); }\n-\n-  inline double \n-  _CPP_sqrt_capture(double __x) { return __builtin_sqrt(__x); }\n-\n-  inline double \n-  _CPP_tan_capture(double __x) { return tan(__x); }\n-\n-  inline double \n-  _CPP_tanh_capture(double __x) { return tanh(__x); }\n-\n-#if _GLIBCPP_HAVE_ACOSL\n-  inline long double \n-  _CPP_acos_capture(long double __x) { return acosl(__x); }\n-#else\n-  inline long double \n-  _CPP_acos_capture(long double __x) { return acos(static_cast<double>(__x)); }\n-#endif\n-\n-#if _GLIBCPP_HAVE_ASINL\n-  inline long double \n-  _CPP_asin_capture(long double __x) { return asinl(__x); }\n-#else\n-  inline long double \n-  _CPP_asin_capture(long double __x) { return asin(static_cast<double>(__x)); }\n-#endif\n-\n-#if _GLIBCPP_HAVE_ATANL\n-  inline long double \n-  _CPP_atan_capture(long double __x) { return atanl(__x); }\n-#else\n-  inline long double \n-  _CPP_atan_capture(long double __x) { return atan(static_cast<double>(__x)); }\n-#endif\n-\n-#if _GLIBCPP_HAVE_ATAN2L\n-  inline long double \n-  _CPP_atan2_capture(long double __y, long double __x)\n-  { return atan2l(__y, __x); }\n-#else\n-  inline long double \n-  _CPP_atan2_capture(long double __y, long double __x) \n-  { return atan2(static_cast<double>(__y), static_cast<double>(__x)); }\n-#endif\n-\n-#if _GLIBCPP_HAVE_CEILL\n-  inline long double \n-  _CPP_ceil_capture(long double __x) { return ceill(__x); }\n-#else\n-  inline long double \n-  _CPP_ceil_capture(long double __x) { return ceil(static_cast<double>(__x)); }\n-#endif\n-\n-  inline long double \n-  _CPP_cos_capture(long double __x) { return __builtin_cosl(__x); }\n-\n-#if _GLIBCPP_HAVE_COSHL\n-  inline long double \n-  _CPP_cosh_capture(long double __x) { return coshl(__x); }\n-#else\n-  inline long double \n-  _CPP_cosh_capture(long double __x) { return cosh(static_cast<double>(__x)); }\n-#endif\n-\n-#if _GLIBCPP_HAVE_EXPL\n-  inline long double \n-  _CPP_exp_capture(long double __x) { return expl(__x); }\n-#else\n-  inline long double \n-  _CPP_exp_capture(long double __x) { return exp(static_cast<double>(__x)); }\n-#endif\n-\n-  inline long double \n-  _CPP_fabs_capture(long double __x) { return __builtin_fabsl(__x); }\n-\n-#if _GLIBCPP_HAVE_FLOORL\n-  inline long double \n-  _CPP_floor_capture(long double __x) { return floorl(__x); }\n-#else\n-  inline long double \n-  _CPP_floor_capture(long double __x) \n-  { return floor(static_cast<double>(__x)); }\n-#endif\n-\n-#if _GLIBCPP_HAVE_FMODL\n-  inline long double \n-  _CPP_fmod_capture(long double __x, long double __y) \n-  { return fmodl(__x, __y); }\n-#else\n-  inline long double \n-  _CPP_fmod_capture(long double __x, long double __y)\n-  { return fmod(static_cast<double>(__x), static_cast<double>(__y)); }\n-#endif\n-\n-#if _GLIBCPP_HAVE_FREXPL\n-  inline long double \n-  _CPP_frexp_capture(long double __x, int* __exp) \n-  { return frexpl(__x, __exp); }\n-#else\n-  inline long double \n-  _CPP_frexp_capture(long double __x, int* __exp)\n-  { return frexp(static_cast<double>(__x), __exp); }\n-#endif\n-\n-#if _GLIBCPP_HAVE_LDEXPL\n-  inline long double \n-  _CPP_ldexp_capture(long double __x, int __exp) { return ldexpl(__x, __exp); }\n-#else\n-  inline long double \n-  _CPP_ldexp_capture(long double __x, int __exp)\n-  { return ldexp(static_cast<double>(__x), __exp); }\n-#endif\n-\n-#if _GLIBCPP_HAVE_LOGL\n-  inline long double \n-  _CPP_log_capture(long double __x) { return logl(__x); }\n-#else\n-  inline long double \n-  _CPP_log_capture(long double __x) { return log(static_cast<double>(__x)); }\n-#endif\n-\n-#if _GLIBCPP_HAVE_LOG10L\n-  inline long double \n-  _CPP_log10_capture(long double __x) { return log10l(__x); }\n-#else\n-  inline long double \n-  _CPP_log10_capture(long double __x) \n-  { return log10(static_cast<double>(__x)); }\n-#endif\n-\n-#if _GLIBCPP_HAVE_MODFL\n-  inline long double \n-  _CPP_modf_capture(long double __x, long double* __iptr)\n-  { return modfl(__x, __iptr); }\n-#else\n-  inline long double \n-  _CPP_modf_capture(long double __x, long double* __iptr)\n-  {\n-    double __tmp;\n-    double __res = _C_legacy::modf(static_cast<double>(__x), &__tmp);\n-    *__iptr = static_cast<long double> (__tmp);\n-    return __res;\n-  }\n-#endif\n-\n-#if _GLIBCPP_HAVE_POWL\n-  inline long double \n-  _CPP_pow_capture(long double __x, long double __y) { return powl(__x, __y); }\n-#else\n-  inline long double \n-  _CPP_pow_capture(long double __x, long double __y)\n-  { return pow(static_cast<double>(__x), static_cast<double>(__y)); }\n-#endif\n-\n-  inline long double \n-  _CPP_sin_capture(long double __x) { return __builtin_sinl(__x); }\n-\n-#if _GLIBCPP_HAVE_SINHL\n-  inline long double \n-  _CPP_sinh_capture(long double __x) { return sinhl(__x); }\n-#else\n-  inline long double \n-  _CPP_sinh_capture(long double __x) { return sinh(static_cast<double>(__x)); }\n-#endif\n-\n-  inline long double \n-  _CPP_sqrt_capture(long double __x) { return __builtin_sqrtl(__x); }\n-\n-#if _GLIBCPP_HAVE_TANL\n-  inline long double \n-  _CPP_tan_capture(long double __x) { return tanl(__x); }\n-#else\n-  inline long double \n-  _CPP_tan_capture(long double __x) { return tan(static_cast<double>(__x)); }\n-#endif\n-\n-#if _GLIBCPP_HAVE_TANHL\n-  inline long double \n-  _CPP_tanh_capture(long double __x) { return tanhl(__x); }\n-#else\n-  inline long double \n-  _CPP_tanh_capture(long double __x) { return tanh(static_cast<double>(__x)); }\n-#endif\n-} // namespace _C_legacy\n-\n-# undef abs\n-# undef acos\n-# undef asin\n-# undef atan\n-# undef atan2\n-# undef ceil\n-# undef cos\n-# undef cosh\n-# undef exp\n-# undef fabs\n-# undef floor\n-# undef fmod\n-# undef frexp\n-# undef ldexp\n-# undef log\n-# undef log10\n-# undef modf\n-# undef pow\n-# undef sin\n-# undef sinh\n-# undef sqrt\n-# undef tan\n-# undef tanh\n-\n-namespace std {\n-  inline float \n-  abs(float __x) { return _C_legacy::_CPP_fabs_capture(__x); }\n-\n-  inline float \n-  acos(float __x) { return _C_legacy::_CPP_acos_capture(__x); }\n-\n-  inline float \n-  asin(float __x) { return _C_legacy::_CPP_asin_capture(__x); }\n-\n-  inline float \n-  atan(float __x) { return _C_legacy::_CPP_atan_capture(__x); }\n-\n-  inline float \n-  atan2(float __y, float __x) \n-  { return _C_legacy::_CPP_atan2_capture(__y, __x); }\n-\n-  inline float \n-  ceil(float __x) { return _C_legacy::_CPP_ceil_capture(__x); }\n-\n-  inline float \n-  cos(float __x) { return _C_legacy::_CPP_cos_capture(__x); }\n-\n-  inline float \n-  cosh(float __x) { return _C_legacy::_CPP_cosh_capture(__x); }\n-\n-  inline float \n-  exp(float __x) { return _C_legacy::_CPP_exp_capture(__x); }\n-\n-  inline float \n-  fabs(float __x) { return _C_legacy::_CPP_fabs_capture(__x); }\n-\n-  inline float \n-  floor(float __x) { return _C_legacy::_CPP_floor_capture(__x); }\n-\n-  inline float \n-  fmod(float __x, float __y) \n-  { return _C_legacy::_CPP_fmod_capture(__x, __y); }\n-\n-  inline float \n-  frexp(float __x, int* __exp) \n-  { return _C_legacy::_CPP_frexp_capture(__x, __exp); }\n-\n-  inline float \n-  ldexp(float __x, int __exp)\n-  { return _C_legacy::_CPP_ldexp_capture(__x, __exp); }\n-\n-  inline float \n-  log(float __x) { return _C_legacy::_CPP_log_capture(__x); }\n-\n-  inline float \n-  log10(float __x) { return _C_legacy::_CPP_log10_capture(__x); }\n-\n-  inline float \n-  modf(float __x, float* __iptr) \n-  { return _C_legacy::_CPP_modf_capture(__x, __iptr); }\n-\n-  inline float \n-  pow(float __x, float __y) { return _C_legacy::_CPP_pow_capture(__x, __y); }\n-\n-  float \n-  pow(float, int);\n-\n-  inline float \n-  sin(float __x) { return _C_legacy::_CPP_sin_capture(__x); }\n-\n-  inline float \n-  sinh(float __x) { return _C_legacy::_CPP_sinh_capture(__x); }\n-\n-  inline float \n-  sqrt(float __x) { return _C_legacy::_CPP_sqrt_capture(__x); }\n-\n-  inline float \n-  tan(float __x) { return _C_legacy::_CPP_tan_capture(__x); }\n-\n-  inline float \n-  tanh(float __x) { return _C_legacy::_CPP_tanh_capture(__x); }\n-\n-  inline double \n-  abs(double __x) { return _C_legacy::_CPP_fabs_capture(__x); }\n-\n-  inline double \n-  acos(double __x) { return _C_legacy::_CPP_acos_capture(__x); }\n-\n-  inline double \n-  asin(double __x) { return _C_legacy::_CPP_asin_capture(__x); }\n-\n-  inline double \n-  atan(double __x) { return _C_legacy::_CPP_atan_capture(__x); }\n-\n-  inline double \n-  atan2(double __y, double __x) \n-  { return _C_legacy::_CPP_atan2_capture(__y, __x); }\n-\n-  inline double \n-  ceil(double __x) { return _C_legacy::_CPP_ceil_capture(__x); }\n-\n-  inline double \n-  cos(double __x) { return _C_legacy::_CPP_cos_capture(__x); }\n-\n-  inline double \n-  cosh(double __x) { return _C_legacy::_CPP_cosh_capture(__x); }\n-\n-  inline double \n-  exp(double __x) { return _C_legacy::_CPP_exp_capture(__x); }\n-\n-  inline double \n-  fabs(double __x) { return _C_legacy::_CPP_fabs_capture(__x); }\n-\n-  inline double \n-  floor(double __x) { return _C_legacy::_CPP_floor_capture(__x); }\n-\n-  inline double \n-  fmod(double __x, double __y) \n-  { return _C_legacy::_CPP_fmod_capture(__x, __y); }\n-\n-  inline double \n-  frexp(double __x, int* __exp) \n-  { return _C_legacy::_CPP_frexp_capture(__x, __exp); }\n-\n-  inline double \n-  ldexp(double __x, int __exp)\n-  { return _C_legacy::_CPP_ldexp_capture(__x, __exp); }\n-\n-  inline double \n-  log(double __x) { return _C_legacy::_CPP_log_capture(__x); }\n-\n-  inline double \n-  log10(double __x) { return _C_legacy::_CPP_log10_capture(__x); }\n-\n-  inline double \n-  modf(double __x, double* __iptr) \n-  { return _C_legacy::_CPP_modf_capture(__x, __iptr); }\n-\n-  inline double \n-  pow(double __x, double __y) \n-  { return _C_legacy::_CPP_pow_capture(__x, __y); }\n-\n-  double \n-  pow(double, int);\n-\n-  inline double \n-  sin(double __x) { return _C_legacy::_CPP_sin_capture(__x); }\n-\n-  inline double \n-  sinh(double __x) { return _C_legacy::_CPP_sinh_capture(__x); }\n-\n-  inline double \n-  sqrt(double __x) { return _C_legacy::_CPP_sqrt_capture(__x); }\n-\n-  inline double \n-  tan(double __x) { return _C_legacy::_CPP_tan_capture(__x); }\n-\n-  inline double \n-  tanh(double __x) { return _C_legacy::_CPP_tanh_capture(__x); }\n-\n-  inline long double \n-  abs(long double __x) { return _C_legacy::_CPP_fabs_capture(__x); }\n-\n-  inline long double \n-  acos(long double __x) { return _C_legacy::_CPP_acos_capture(__x); }\n-\n-  inline long double \n-  asin(long double __x) { return _C_legacy::_CPP_asin_capture(__x); }\n-\n-  inline long double \n-  atan(long double __x) { return _C_legacy::_CPP_atan_capture(__x); }\n-\n-  inline long double \n-  atan2(long double __y, long double __x) \n-  { return _C_legacy::_CPP_atan2_capture(__y, __x); }\n-\n-  inline long double \n-  ceil(long double __x) { return _C_legacy::_CPP_ceil_capture(__x); }\n-\n-  inline long double \n-  cos(long double __x) { return _C_legacy::_CPP_cos_capture(__x); }\n-\n-  inline long double \n-  cosh(long double __x) { return _C_legacy::_CPP_cosh_capture(__x); }\n-\n-  inline long double \n-  exp(long double __x) { return _C_legacy::_CPP_exp_capture(__x); }\n-\n-  inline long double \n-  fabs(long double __x) { return _C_legacy::_CPP_fabs_capture(__x); }\n-\n-  inline long double \n-  floor(long double __x) { return _C_legacy::_CPP_floor_capture(__x); }\n-\n-  inline long double \n-  fmod(long double __x, long double __y) \n-  { return _C_legacy::_CPP_fmod_capture(__x, __y); }\n-\n-  inline long double \n-  frexp(long double __x, int* __exp)\n-  { return _C_legacy::_CPP_frexp_capture(__x, __exp); }\n-\n-  inline long double \n-  ldexp(long double __x, int __exp)\n-  { return _C_legacy::_CPP_ldexp_capture(__x, __exp); }\n-\n-  inline long double \n-  log(long double __x) { return _C_legacy::_CPP_log_capture(__x); }\n-\n-  inline long double \n-  log10(long double __x) { return _C_legacy::_CPP_log10_capture(__x); }\n-\n-  inline long double \n-  modf(long double __x, long double* __iptr) \n-  { return _C_legacy::_CPP_modf_capture(__x, __iptr); }\n-\n-  inline long double \n-  pow(long double __x, long double __y)\n-  { return _C_legacy::_CPP_pow_capture(__x, __y); }\n-\n-  long double \n-  pow(long double, int);\n-\n-  inline long double \n-  sin(long double __x) { return _C_legacy::_CPP_sin_capture(__x); }\n-\n-  inline long double \n-  sinh(long double __x) { return _C_legacy::_CPP_sinh_capture(__x); }\n-\n-  inline long double \n-  sqrt(long double __x) { return _C_legacy::_CPP_sqrt_capture(__x); }\n-\n-  inline long double \n-  tan(long double __x) { return _C_legacy::_CPP_tan_capture(__x); }\n-\n-  inline long double \n-  tanh(long double __x) { return _C_legacy::_CPP_tanh_capture(__x); }\n-\n-} // namespace std\n-\n-# undef _IN_C_LEGACY_\n-\n-#endif\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-"}, {"sha": "c8f37002329c8f94f7a65f7b8379d66eb2361cc8", "filename": "libstdc++-v3/include/c_shadow/bits/std_csetjmp.h", "status": "removed", "additions": 0, "deletions": 63, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8269c9b8874fdac90d0d537a786c69ef0e2bc0a8/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fbits%2Fstd_csetjmp.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8269c9b8874fdac90d0d537a786c69ef0e2bc0a8/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fbits%2Fstd_csetjmp.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fbits%2Fstd_csetjmp.h?ref=8269c9b8874fdac90d0d537a786c69ef0e2bc0a8", "patch": "@@ -1,63 +0,0 @@\n-// -*- C++ -*- header wrapper.\n-\n-// Copyright (C) 1997-1999, 2000 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-//\n-// ISO C++ 14882: 20.4.6  C library\n-//\n-\n-#ifndef _CPP_CSETJMP\n-#define _CPP_CSETJMP 1\n-\n-namespace _C_legacy {\n-  extern \"C\" {\n-#     define _IN_C_LEGACY_\n-#     pragma GCC system_header\n-#     include_next <setjmp.h>\n-  }\n-  inline int \n-  _CPP_setjmp_capture(jmp_buf __jb) { return setjmp(__jb); }\n-} // namespace _C_legacy\n-\n-#  undef jmp_buf\n-#  undef setjmp\n-#  define setjmp(__jb) _C_legacy::_CPP_setjmp_capture(__jb)\n-#  undef longjmp\n-\n-namespace std {\n-  // Adopt C names into std::\n-  using _C_legacy::jmp_buf;\n-  using _C_legacy::longjmp;\n-} // namespace std\n-  \n-# undef _IN_C_LEGACY_\n-\n-#endif\n-\n-\n-"}, {"sha": "71f91260214ec06e908a87cd93c31fd1b5a6a865", "filename": "libstdc++-v3/include/c_shadow/bits/std_csignal.h", "status": "removed", "additions": 0, "deletions": 67, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8269c9b8874fdac90d0d537a786c69ef0e2bc0a8/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fbits%2Fstd_csignal.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8269c9b8874fdac90d0d537a786c69ef0e2bc0a8/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fbits%2Fstd_csignal.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fbits%2Fstd_csignal.h?ref=8269c9b8874fdac90d0d537a786c69ef0e2bc0a8", "patch": "@@ -1,67 +0,0 @@\n-// -*- C++ -*- header wrapper.\n-\n-// Copyright (C) 1997-1999, 2000 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-//\n-// ISO C++ 14882: 20.4.6  C library\n-//\n-\n-#ifndef _CPP_CSIGNAL\n-#define _CPP_CSIGNAL 1\n-\n-namespace _C_legacy {\n-  extern \"C\" {\n-#     define _IN_C_LEGACY_\n-    // XXX\n-#     undef __need_sig_atomic_t\n-#     undef __need_sigset_t\n-\n-#     pragma GCC system_header\n-#     include_next <signal.h>\n-  }\n-} // namespace _C_legacy\n-\n-#  undef sig_atomic_t\n-#  undef raise\n-#  undef signal\n-\n-namespace std {\n-  // Adopt C names into std::\n-  using _C_legacy::sig_atomic_t;\n-  using _C_legacy::raise;\n-  using _C_legacy::signal;\n-} // namespace std\n-  \n-# undef _IN_C_LEGACY_\n-\n-#endif\n-\n-\n-\n-\n-"}, {"sha": "eb1b7909e744009f16883ebb55a3dd33ce076c94", "filename": "libstdc++-v3/include/c_shadow/bits/std_cstdarg.h", "status": "removed", "additions": 0, "deletions": 54, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8269c9b8874fdac90d0d537a786c69ef0e2bc0a8/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fbits%2Fstd_cstdarg.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8269c9b8874fdac90d0d537a786c69ef0e2bc0a8/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fbits%2Fstd_cstdarg.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fbits%2Fstd_cstdarg.h?ref=8269c9b8874fdac90d0d537a786c69ef0e2bc0a8", "patch": "@@ -1,54 +0,0 @@\n-// -*- C++ -*- header wrapper.\n-\n-// Copyright (C) 1997-1999, 2000 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-//\n-// ISO C++ 14882: 20.4.6  C library\n-//\n-\n-#ifndef _CPP_CSTDARG\n-#define _CPP_CSTDARG 1\n-\n-namespace _C_legacy {\n-  extern \"C\" {\n-#     define _IN_C_LEGACY_\n-#     pragma GCC system_header\n-#     include_next <stdarg.h>\n-  }\n-} // namespace _C_legacy\n-\n-#  undef va_list\n-\n-namespace std {\n-  using _C_legacy::va_list;\n-} // namespace std\n-\n-# undef _IN_C_LEGACY_\n-\n-#endif\n-"}, {"sha": "588566499b38dd338396d6f7b82429b2a766ad8e", "filename": "libstdc++-v3/include/c_shadow/bits/std_cstddef.h", "status": "removed", "additions": 0, "deletions": 59, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8269c9b8874fdac90d0d537a786c69ef0e2bc0a8/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fbits%2Fstd_cstddef.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8269c9b8874fdac90d0d537a786c69ef0e2bc0a8/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fbits%2Fstd_cstddef.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fbits%2Fstd_cstddef.h?ref=8269c9b8874fdac90d0d537a786c69ef0e2bc0a8", "patch": "@@ -1,59 +0,0 @@\n-// -*- C++ -*- header wrapper.\n-\n-// Copyright (C) 1997-1999, 2000 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-//\n-// ISO C++ 14882: 18.1  Types\n-//\n-\n-#ifndef _CPP_CSTDDEF\n-#define _CPP_CSTDDEF 1\n-\n-namespace _C_legacy {\n-  extern \"C\" {\n-#     define _IN_C_LEGACY_\n-#     pragma GCC system_header\n-// XXX\n-#   define __need_size_t\n-#   define __need_ptrdiff_t\n-#   define __need_NULL\n-#   include_next <stddef.h>\n-  }\n-} // namespace _C_legacy\n-\n-#  undef ptrdiff_t  \n-#  undef size_t  \n-\n-namespace std {\n-  using _C_legacy::ptrdiff_t;\n-  using _C_legacy::size_t;\n-} // namespace std\n-  \n-# undef _IN_C_LEGACY_\n-\n-#endif"}, {"sha": "db2761281d08d1ffbfe68bd7371e372e8d58a274", "filename": "libstdc++-v3/include/c_shadow/bits/std_cstdio.h", "status": "removed", "additions": 0, "deletions": 283, "changes": 283, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8269c9b8874fdac90d0d537a786c69ef0e2bc0a8/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fbits%2Fstd_cstdio.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8269c9b8874fdac90d0d537a786c69ef0e2bc0a8/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fbits%2Fstd_cstdio.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fbits%2Fstd_cstdio.h?ref=8269c9b8874fdac90d0d537a786c69ef0e2bc0a8", "patch": "@@ -1,283 +0,0 @@\n-// -*- C++ -*- header wrapper.\n-\n-// Copyright (C) 1997-1999, 2000 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-//\n-// ISO C++ 14882: 27.8.2  C Library files\n-//\n-\n-#ifndef _CPP_CSTDIO\n-#define _CPP_CSTDIO 1\n-\n-# include <bits/std_cstddef.h>  \n-# include <bits/std_cstdarg.h>  \n-\n-namespace _C_legacy {\n-  extern \"C\" {\n-#     define _IN_C_LEGACY_\n-#     undef __need_FILE\n-#     pragma GCC system_header\n-#     include_next <stdio.h>\n-  }\n-\n-  typedef FILE _CPP_FILE_capture;\n-  typedef fpos_t _CPP_fpos_t_capture;\n-\n-  inline FILE* \n-  _CPP_stderr_capture() { return stderr; }\n-\n-  inline FILE* \n-  _CPP_stdin_capture()  { return stdin; }\n-\n-  inline FILE* \n-  _CPP_stdout_capture() { return stdout; }\n-\n-  inline int \n-  _CPP_getc_capture(FILE* __f) { return getc(__f); }\n-\n-  inline int \n-  _CPP_getchar_capture() { return getchar(); }\n-\n-  inline int \n-  _CPP_putc_capture(int __c, FILE* __f) { return putc(__c, __f); }\n-  \n-  inline int \n-  _CPP_putchar_capture(int __c) { return putchar(__c); }\n- \n-  inline int \n-  _CPP_feof_capture(FILE* __f) { return feof(__f); }\n-\n-} // namespace _C_legacy\n-\n-# undef FILE \n-# undef fpos_t \n-\n-# undef remove\n-# undef rename\n-# undef tmpfile\n-# undef tmpnam\n-# undef fclose\n-# undef fflush\n-# undef fopen\n-# undef freopen\n-# undef setbuf\n-# undef setvbuf\n-# undef fprintf\n-# undef fscanf\n-# undef printf\n-# undef scanf\n-# undef sprintf\n-# undef sscanf\n-# undef vfprintf\n-# undef vprintf\n-# undef vsprintf\n-# undef fgetc\n-# undef fgets\n-# undef fputc\n-# undef fputs\n-# undef getc\n-# undef getchar\n-# undef gets\n-# undef putc\n-# undef putchar\n-# undef puts\n-# undef ungetc\n-# undef fread\n-# undef fwrite\n-# undef fgetpos\n-# undef fseek\n-# undef fsetpos\n-# undef ftell\n-# undef rewind\n-# undef clearerr\n-# undef feof\n-# undef ferror\n-# undef perror\n-  \n-# undef stderr\n-# define stderr std::_CPP_stderr()\n-# undef stdin\n-# define stdin  std::_CPP_stdin()\n-# undef stdout\n-# define stdout std::_CPP_stdout()\n-\n-namespace std {\n-  struct FILE : _C_legacy::_CPP_FILE_capture { };\n-  struct fpos_t { _C_legacy::_CPP_fpos_t_capture _M_dummy; };\n-\n-  using _C_legacy::remove;\n-  using _C_legacy::rename;\n-  using _C_legacy::tmpnam;\n-  using _C_legacy::printf;\n-  using _C_legacy::scanf;\n-  using _C_legacy::sprintf;\n-  using _C_legacy::sscanf;\n-  using _C_legacy::gets;\n-  using _C_legacy::perror;\n-\n-  inline FILE* \n-  _CPP_stderr()\n-  { return reinterpret_cast<FILE*>(_C_legacy::_CPP_stderr_capture() ); }\n-\n-  inline FILE* \n-  _CPP_stdin()\n-  { return reinterpret_cast<FILE*>(_C_legacy::_CPP_stdin_capture() ); }\n-\n-  inline FILE* \n-  _CPP_stdout()\n-  { return reinterpret_cast<FILE*>(_C_legacy::_CPP_stdout_capture() ); }\n-\n-  inline FILE*\n-  tmpfile() { return reinterpret_cast<FILE*>(_C_legacy::tmpfile()); }\n-\n-  inline int\n-  fclose(FILE* __f) { return _C_legacy::fclose(__f); }\n-\n-  inline int\n-  fflush(FILE* __f) { return _C_legacy::fflush(__f); }\n-\n-  inline FILE*\n-  fopen(char const* __name, char const* __mode) \n-  { return reinterpret_cast<FILE*>(_C_legacy::fopen(__name,__mode)); }\n-\n-  inline FILE*\n-  freopen(char const* __name, char const* __mode, FILE* __f) \n-  { return reinterpret_cast<FILE*>(_C_legacy::freopen(__name,__mode,__f)); }\n-\n-  inline void\n-  setbuf(FILE* __f, char* __buf) \n-  { return _C_legacy::setbuf(__f, __buf); }\n-\n-  inline int\n-  setvbuf(FILE* __f, char* __buf, int __mode, size_t __size) \n-  { return _C_legacy::setvbuf(__f, __buf, __mode, __size); }\n-\n-  inline int\n-  fprintf(FILE* __f, char const* __fmt, ...)\n-  { \n-    va_list __v; \n-    va_start(__v,__fmt); \n-    int __i = _C_legacy::vfprintf(__f, __fmt, __v); \n-    va_end(__v);\n-    return __i; \n-  }\n-\n-  inline int\n-  fscanf(FILE* __f, char const* __fmt, ...)\n-  { \n-    va_list __v; \n-    va_start(__v,__fmt); \n-    int __i = _C_legacy::vfscanf(__f, __fmt, __v); \n-    va_end(__v);\n-    return __i; \n-  }\n-\n-  inline int\n-  vfprintf(FILE* __f, char const* __fmt, va_list __v)\n-  { return _C_legacy::vfprintf(__f, __fmt, __v); }\n-\n-  inline int\n-  vprintf(char const* __fmt, va_list __v)\n-  { return _C_legacy::vprintf(__fmt, __v); }\n-\n-  inline int\n-  vsprintf(char* __buf, char const* __fmt, va_list __v)\n-  { return _C_legacy::vsprintf(__buf, __fmt, __v); }\n-\n-  inline int\n-  fgetc(FILE* __f) { return _C_legacy::fgetc(__f); }\n-\n-  inline char*\n-  fgets(char* __buf, int __n, FILE* __f) \n-  { return _C_legacy::fgets(__buf, __n, __f); }\n-\n-  inline int\n-  fputc(int __c, FILE* __f) { return _C_legacy::fputc(__c, __f); }\n-\n-  inline int\n-  fputs(char const* __s, FILE* __f) \n-  { return _C_legacy::fputs(__s, __f); }\n-\n-  inline int\n-  getc(FILE* __f) { return _C_legacy::_CPP_getc_capture(__f); }\n-\n-  inline int\n-  getchar() { return _C_legacy::_CPP_getchar_capture(); }\n-\n-  inline int\n-  putc(int __c, FILE* __f) \n-  { return _C_legacy::_CPP_putc_capture(__c, __f); }\n-\n-  inline int\n-  putchar(int __c) { return _C_legacy::_CPP_putchar_capture(__c); }\n-\n-  using _C_legacy::puts;\n-\n-  inline int\n-  ungetc(int __c, FILE* __f) { return _C_legacy::ungetc(__c, __f); }\n-\n-  inline size_t\n-  fread(void* __p, size_t __z, size_t __n, FILE* __f)\n-  { return _C_legacy::fread(__p,__z,__n,__f); }\n-\n-  inline size_t\n-  fwrite(void const* __p, size_t __z, size_t __n, FILE* __f)\n-  { return _C_legacy::fwrite(__p,__z,__n,__f); }\n-\n-  inline int\n-  fgetpos(FILE* __f, fpos_t* __pos)\n-  { return _C_legacy::fgetpos(__f,&__pos->_M_dummy); }\n-\n-  inline int\n-  fseek(FILE* __f, long __off, int __how)\n-  { return _C_legacy::fseek(__f,__off,__how); }\n-\n-  inline int\n-  fsetpos(FILE* __f, fpos_t const* __pos)\n-  { return _C_legacy::fsetpos(__f,&__pos->_M_dummy); }\n-\n-  inline long\n-  ftell(FILE* __f) { return _C_legacy::ftell(__f); }\n-\n-  inline void\n-  rewind(FILE* __f) { return _C_legacy::rewind(__f); }\n-\n-  inline void\n-  clearerr(FILE* __f) { return _C_legacy::clearerr(__f); }\n-\n-  inline int\n-  feof(FILE* __f) { return _C_legacy::_CPP_feof_capture(__f); }\n-\n-  inline int\n-  ferror(FILE* __f) { return _C_legacy::ferror(__f); }\n-} // namespace std\n-\n-# undef _IN_C_LEGACY_\n-\n-#endif\n-"}, {"sha": "d219efd6750dc043241035f70e34eb5fe148a1af", "filename": "libstdc++-v3/include/c_shadow/bits/std_cstdlib.h", "status": "removed", "additions": 0, "deletions": 197, "changes": 197, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8269c9b8874fdac90d0d537a786c69ef0e2bc0a8/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fbits%2Fstd_cstdlib.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8269c9b8874fdac90d0d537a786c69ef0e2bc0a8/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fbits%2Fstd_cstdlib.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fbits%2Fstd_cstdlib.h?ref=8269c9b8874fdac90d0d537a786c69ef0e2bc0a8", "patch": "@@ -1,197 +0,0 @@\n-// -*- C++ -*- header wrapper\n-\n-// Copyright (C) 1997-1999, 2000 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-//\n-// ISO C++ 14882: 20.4.6  C library\n-//\n-\n-// Function decls in this header are overloaded on the \n-// extern \"C\"-ness of arguments.  This is a rich ground\n-// for compiler bugs.\n-\n-#ifndef _CPP_CSTDLIB\n-#define _CPP_CSTDLIB 1\n-\n-# include <bits/c++config.h>\n-# include <bits/std_cstddef.h>  \n-\n-namespace _C_legacy {\n-  extern \"C\" {\n-#     define _IN_C_LEGACY_\n-#     pragma GCC system_header\n-#     include_next <stdlib.h>\n-      typedef int (*_C_cmp_fun_ptr)(const void*, const void*);  // C fn ptr\n-    }\n-\n-  typedef div_t   _CPP_div_t_capture;\n-  typedef ldiv_t  _CPP_ldiv_t_capture;\n-\n-# if _GLIBCPP_HAVE_LLDIV_T\n-  typedef lldiv_t  _CPP_lldiv_t_capture;\n-# endif\n-} // namespace _C_legacy\n-\n-#  undef wchar_t\n-#  undef div_t\n-#  undef ldiv_t\n-\n-#  undef atof\n-#  undef atoi\n-#  undef atol\n-#  undef strtod\n-#  undef strtol\n-#  undef strtoul\n-#ifdef _GLIBCPP_HAVE_STRTOLD\n-#  undef strtold\n-#endif\n-#  undef rand\n-#  undef srand\n-#  undef calloc\n-#  undef free\n-#  undef malloc\n-#  undef realloc\n-#  undef abort\n-#  undef atexit\n-#  undef exit\n-#  undef getenv\n-#  undef system\n-#  undef bsearch\n-#  undef qsort\n-#  undef abs\n-#  undef div\n-#  undef labs\n-#  undef ldiv\n-#ifdef _GLIBCPP_USE_C99\n-#  undef llabs\n-#  undef lldiv\n-#endif\n-#  undef mblen\n-#  undef mbtowc\n-#  undef wctomb\n-#  undef mbstowcs\n-#  undef wcstombs\n-\n-namespace std {\n-  struct div_t : _C_legacy::_CPP_div_t_capture { };\n-  struct ldiv_t : _C_legacy::_CPP_ldiv_t_capture { };\n-\n-#ifdef _GLIBCPP_USE_C99\n-# ifdef _GLIBCPP_HAVE_LLDIV_T\n-  struct lldiv_t : _C_legacy::_CPP_lldiv_t_capture { };\n-# else\n-  struct lldiv_t\n-  {\n-    long long quot;\n-    long long rem;\n-  };\n-# endif\n-#endif\n-\n-  using _C_legacy::atof;\n-  using _C_legacy::atoi;\n-  using _C_legacy::atol;\n-  using _C_legacy::strtod;\n-  using _C_legacy::strtol;\n-  using _C_legacy::strtoul;\n-  using _C_legacy::rand;\n-  using _C_legacy::srand;\n-  using _C_legacy::calloc;\n-  using _C_legacy::free;\n-  using _C_legacy::malloc;\n-  using _C_legacy::realloc;\n-\n-  //  using _C_legacy::abort;\n-  using _C_legacy::atexit;\n-  //  using _C_legacy::exit;\n-  using _C_legacy::bsearch;\n-  using _C_legacy::qsort; \n-\n-  using _C_legacy::getenv;\n-  using _C_legacy::system;\n-  using _C_legacy::mbtowc;\n-  using _C_legacy::wctomb;\n-  using _C_legacy::mbstowcs;\n-  using _C_legacy::wcstombs;\n-\n-  using _C_legacy::strtof;\n-\n-#ifdef _GLIBCPP_USE_LONG_LONG\n-  using _C_legacy::strtoll;\n-  using _C_legacy::strtoull;\n-#endif\n-\n-#ifdef _GLIBCPP_HAVE_STRTOLD\n-  using _C_legacy::strtold;\n-#endif\n-\n-  using _C_legacy::mblen;\n-\n-  inline int \n-  abs(int __x) { return __x >= 0 ? __x : -__x; }\n-\n-  inline div_t \n-  div(int __n, int __d)\n-  { div_t __q; __q.quot = __n / __d; __q.rem = __n % __d; return __q; }\n-\n-  inline long \n-  labs(long __x) { return __x >= 0 ? __x : -__x; }\n-\n-  inline long \n-  abs(long __x) { return __x >= 0 ? __x : -__x; }\n-\n-  inline ldiv_t \n-  ldiv(long __n, long __d)\n-  { ldiv_t __q; __q.quot = __n / __d; __q.rem = __n % __d; return __q; }\n-\n-  inline ldiv_t \n-  div(long __n, long __d)\n-  { ldiv_t __q; __q.quot = __n / __d; __q.rem = __n % __d; return __q; }\n-\n-#ifdef _GLIBCPP_USE_C99\n-  inline long long \n-  llabs(long long __x) { return __x >= 0 ? __x : -__x; }\n-\n-  inline long long \n-  abs(long long __x) { return __x >= 0 ? __x : -__x; }\n-\n-  inline lldiv_t \n-  lldiv(long long __n, long long __d)\n-  { lldiv_t __q; __q.quot = __n / __d; __q.rem = __n % __d; return __q; }\n-\n-  inline lldiv_t \n-  div(long long __n, long long __d)\n-  { lldiv_t __q; __q.quot = __n / __d; __q.rem = __n % __d; return __q; }\n-#endif\n-} // namespace std\n-  \n-# undef _IN_C_LEGACY_\n-\n-#endif\n-\n-"}, {"sha": "38b9e6b617d7abf20401c783c636be7326485b1a", "filename": "libstdc++-v3/include/c_shadow/bits/std_cstring.h", "status": "removed", "additions": 0, "deletions": 279, "changes": 279, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8269c9b8874fdac90d0d537a786c69ef0e2bc0a8/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fbits%2Fstd_cstring.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8269c9b8874fdac90d0d537a786c69ef0e2bc0a8/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fbits%2Fstd_cstring.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fbits%2Fstd_cstring.h?ref=8269c9b8874fdac90d0d537a786c69ef0e2bc0a8", "patch": "@@ -1,279 +0,0 @@\n-// -*- C++ -*- header wrapper.\n-\n-// Copyright (C) 1997-1999, 2000 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-//\n-// ISO C++ 14882: 20.4.6  C library\n-//\n-\n-#ifndef _CPP_CSTRING\n-#define _CPP_CSTRING 1\n-\n-# if defined __GLIBC__ && __GLIBC__ >= 2\n-// We must not see the optimized string functions GNU libc defines.\n-#  define __NO_STRING_INLINES\n-# endif\n-\n-# include <bits/std_cstddef.h>  \n-\n-namespace _C_legacy {\n-  extern \"C\" {\n-#     define _IN_C_LEGACY_\n-#     pragma GCC system_header\n-#     include_next <string.h>\n-  }\n-\n-  // We do inline captures of most of these in case they\n-  // have been optimized with macros.  \n-  inline void* \n-  _CPP_memcpy_capture(void* __s1, void const* __s2, size_t __n)\n-  { return memcpy(__s1, __s2, __n); }\n-\n-  inline void* \n-  _CPP_memmove_capture(void* __s1, void const* __s2, size_t __n)\n-  { return memmove(__s1, __s2, __n); }\n-\n-  inline void* \n-  _CPP_strcpy_capture(char* __s1, char const* __s2)\n-  { return strcpy(__s1, __s2); }\n-\n-  inline char* \n-  _CPP_strncpy_capture(char* __s1, char const* __s2, size_t __n)\n-  { return strncpy(__s1, __s2, __n); }\n-\n-  inline char* \n-  _CPP_strcat_capture(char* __s1, char const* __s2)\n-  { return strcat(__s1, __s2); }\n-\n-  inline char* \n-  _CPP_strncat_capture(char* __s1, char const* __s2, size_t __n)\n-  { return strncat(__s1, __s2, __n); }\n-\n-  inline int \n-  _CPP_memcmp_capture(void const* __s1, void const* __s2, size_t __n)\n-  { return memcmp(__s1, __s2, __n); }\n-\n-  inline int \n-  _CPP_strcmp_capture(char const* __s1, char const* __s2)\n-  { return strcmp(__s1, __s2); }\n-\n-  inline int \n-  _CPP_strcoll_capture(char const* __s1, char const* __s2)\n-  { return strcoll(__s1, __s2); }\n-\n-  inline int \n-  _CPP_strncmp_capture(char const* __s1, char const* __s2, size_t __n)\n-  { return strncmp(__s1, __s2, __n); }\n-\n-  inline size_t \n-  _CPP_strxfrm_capture(char* __b, char const* __s, size_t __n)\n-  { return strxfrm(__b, __s, __n); }\n-\n-  inline void* \n-  _CPP_memchr_capture(void const* __s1, int __c, size_t __n)\n-  { return memchr(__s1, __c, __n); }\n-\n-  inline char* \n-  _CPP_strchr_capture(char const* __s1, int __c)\n-  { return strchr(__s1, __c); }\n-\n-  inline size_t \n-  _CPP_strcspn_capture(char const* __s1, char const* __s2)\n-  { return strcspn(__s1, __s2); }\n-\n-  inline char* \n-  _CPP_strpbrk_capture(char const* __s1, char const* __s2)\n-  { return strpbrk(__s1, __s2); }\n-\n-  inline char* \n-  _CPP_strrchr_capture(char const* __s1, int __c)\n-  { return strrchr(__s1, __c); }\n-\n-  inline size_t \n-  _CPP_strspn_capture(char const* __s1, char const* __s2)\n-  { return strspn(__s1, __s2); }\n-\n-  inline char* \n-  _CPP_strstr_capture(char const* __s1, char const* __s2)\n-  { return strstr(__s1, __s2); }\n-\n-  inline char* \n-  _CPP_strtok_capture(char* __s1, char const* __s2)\n-  { return strtok(__s1, __s2); }\n-\n-  inline void* \n-  _CPP_memset_capture(void* __s, int __c, size_t __n)\n-  { return memset(__s, __c, __n); }\n-\n-  // inline char* \n-  // _CPP_strerror_capture(int __num)\n-  // { return strerror(__num); }\n-\n-  inline size_t \n-  _CPP_strlen_capture(char const* __s)\n-  { return strlen(__s); }\n-} // namespace _C_legacy\n-\n-# undef memcpy\n-# undef memmove\n-# undef strcpy\n-# undef strncpy\n-# undef strcat\n-# undef strncat\n-# undef memcmp\n-# undef strcmp\n-# undef strcoll\n-# undef strncmp\n-# undef strxfrm\n-# undef memchr\n-# undef strchr\n-# undef strcspn\n-# undef strpbrk\n-# undef strrchr\n-# undef strspn\n-# undef strstr\n-# undef strtok\n-# undef memset\n-# undef strerror\n-# undef strlen\n-\n-namespace std {\n-  // Redefine most of these inline.  Note that the \n-  // C++ definition differs from C in some cases.\n-  inline void* \n-  memcpy(void* __s1, void const* __s2, size_t __n)\n-  { return _C_legacy::_CPP_memcpy_capture(__s1, __s2, __n); }\n-\n-  inline void* \n-  memmove(void* __s1, void const* __s2, size_t __n)\n-  { return _C_legacy::_CPP_memmove_capture(__s1, __s2, __n); }\n-\n-  inline void* \n-  strcpy(char* __s1, char const* __s2)\n-  { return _C_legacy::_CPP_strcpy_capture(__s1, __s2); }\n-\n-  inline char* \n-  strncpy(char* __s1, char const* __s2, size_t __n)\n-  { return _C_legacy::_CPP_strncpy_capture(__s1, __s2, __n); }\n-\n-  inline char* \n-  strcat(char* __s1, char const* __s2)\n-  { return _C_legacy::_CPP_strcat_capture(__s1, __s2); }\n-\n-  inline char* \n-  strncat(char* __s1, char const* __s2, size_t __n)\n-  { return _C_legacy::_CPP_strncat_capture(__s1, __s2, __n); }\n-\n-  inline int \n-  memcmp(void const* __s1, void const* __s2, size_t __n)\n-  { return _C_legacy::_CPP_memcmp_capture(__s1, __s2, __n); }\n-\n-  inline int \n-  strcmp(char const* __s1, char const* __s2)\n-  { return _C_legacy::_CPP_strcmp_capture(__s1, __s2); }\n-\n-  inline int \n-  strcoll(char const* __s1, char const* __s2)\n-  { return _C_legacy::_CPP_strcoll_capture(__s1, __s2); }\n-\n-  inline int \n-  strncmp(char const* __s1, char const* __s2, size_t __n)\n-  { return _C_legacy::_CPP_strncmp_capture(__s1, __s2, __n); }\n-\n-  inline size_t \n-  strxfrm(char* __b, char const* __s, size_t __n)\n-  { return _C_legacy::_CPP_strxfrm_capture(__b, __s, __n); }\n-\n-  inline void \n-  const* memchr(void const* __s1, int __c, size_t __n)\n-  { return _C_legacy::_CPP_memchr_capture(__s1, __c, __n); }\n-\n-  inline void* \n-  memchr(void* __s1, int __c, size_t __n)\n-  { return _C_legacy::_CPP_memchr_capture(__s1, __c, __n); }\n-\n-  inline char const* \n-  strchr(char const* __s1, int __c)\n-  { return _C_legacy::_CPP_strchr_capture(__s1, __c); }\n-\n-  inline char*\n-  strchr(char* __s1, int __c)\n-  { return _C_legacy::_CPP_strchr_capture(__s1, __c); }\n-\n-  inline size_t \n-  strcspn(char const* __s1, char const* __s2)\n-  { return _C_legacy::_CPP_strcspn_capture(__s1, __s2); }\n-\n-  inline char const* \n-  strpbrk(char const* __s1, char const* __s2)\n-  { return _C_legacy::_CPP_strpbrk_capture(__s1, __s2); }\n-\n-  inline char* \n-  strpbrk(char* __s1, char const* __s2)\n-  { return _C_legacy::_CPP_strpbrk_capture(__s1, __s2); }\n-\n-  inline char const* \n-  strrchr(char const* __s1, int __c)\n-  { return _C_legacy::_CPP_strrchr_capture(__s1, __c); }\n-\n-  inline char* \n-  strrchr(char* __s1, int __c)\n-  { return _C_legacy::_CPP_strrchr_capture(__s1, __c); }\n-\n-  inline size_t \n-  strspn(char const* __s1, char const* __s2)\n-  { return _C_legacy::_CPP_strspn_capture(__s1, __s2); }\n-\n-  inline char const* \n-  strstr(char const* __s1, char const* __s2)\n-  { return _C_legacy::_CPP_strstr_capture(__s1, __s2); }\n-\n-  inline char* \n-  strstr(char* __s1, char const* __s2)\n-  { return _C_legacy::_CPP_strstr_capture(__s1, __s2); }\n-\n-  inline char* \n-  strtok(char* __s1, char const* __s2)\n-  { return _C_legacy::_CPP_strtok_capture(__s1, __s2); }\n-\n-  inline void* \n-  memset(void* __s, int __c, size_t __n)\n-  { return _C_legacy::_CPP_memset_capture(__s, __c, __n); }\n-\n-  using _C_legacy::strerror;\n-\n-  inline size_t \n-  strlen(char const* __s)\n-  { return _C_legacy::_CPP_strlen_capture(__s); }\n-\n-} // namespace std\n-\n-# undef _IN_C_LEGACY_\n-\n-#endif\n-"}, {"sha": "44709f0238fc9e202454a48c239ae07d15a71a9a", "filename": "libstdc++-v3/include/c_shadow/bits/std_ctime.h", "status": "removed", "additions": 0, "deletions": 107, "changes": 107, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8269c9b8874fdac90d0d537a786c69ef0e2bc0a8/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fbits%2Fstd_ctime.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8269c9b8874fdac90d0d537a786c69ef0e2bc0a8/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fbits%2Fstd_ctime.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fbits%2Fstd_ctime.h?ref=8269c9b8874fdac90d0d537a786c69ef0e2bc0a8", "patch": "@@ -1,107 +0,0 @@\n-// -*- C++ -*- header wrapper.\n-\n-// Copyright (C) 1997-1999, 2000 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-//\n-// ISO C++ 14882: 20.5  Date and time\n-//\n-\n-#ifndef _CPP_CTIME\n-#define _CPP_CTIME 1\n-\n-# include <bits/std_cstddef.h>  \n-\n-namespace _C_legacy {\n-  extern \"C\" {\n-#     define _IN_C_LEGACY_\n-#     pragma GCC system_header\n-\n-      // XXX\n-      // glibc 2.1.x time.h is on crack\n-#     undef __need_time_t\n-#     undef __need_clock_t\n-#     undef __need_timespec\n-\n-#     include_next <time.h>\n-  }\n-\n-  typedef clock_t\t_CPP_clock_t_capture;\n-  typedef time_t    \t_CPP_time_t_capture;\n-  typedef tm \t\t_CPP_tm_capture;\n-\n-} // namespace _C_legacy\n-\n-#  undef clock_t\n-#  undef time_t\n-#  undef tm\n-#  undef clock\n-#  undef difftime\n-#  undef mktime\n-#  undef time\n-#  undef asctime\n-#  undef ctime\n-#  undef gmtime\n-#  undef localtime\n-#  undef strftime\n-\n-namespace std {\n-\n-  // Adopt C names into std::\n-  typedef _C_legacy::_CPP_clock_t_capture  clock_t;\n-  typedef _C_legacy::_CPP_time_t_capture   time_t;\n-  struct tm : _C_legacy::_CPP_tm_capture  { };\n-\n-  using _C_legacy::clock;\n-  using _C_legacy::difftime;\n-  using _C_legacy::mktime;\n-  using _C_legacy::time;\n-  using _C_legacy::ctime;\n-\n-  inline char* \n-  asctime(const tm* __t) \n-  { return _C_legacy::asctime(static_cast<_C_legacy::_CPP_tm_capture const*>(__t)); }\n-\n-  inline tm* \n-  gmtime(time_t const* __tp) \n-  { return reinterpret_cast<tm*>(_C_legacy::gmtime(__tp)); }\n-\n-  inline tm* \n-  localtime(const time_t* __tp) \n-  { return reinterpret_cast<tm*>(_C_legacy::localtime(__tp)); } \n-    \n-  inline size_t \n-  strftime(char* __buf, size_t __maxsz, char const* __fmt, tm const* __tp) \n-  { return _C_legacy::strftime(__buf, __maxsz, __fmt,\n-\t       \t       static_cast<_C_legacy::_CPP_tm_capture const*>(__tp)); }\n-\n-} // namespace std\n-  \n-# undef _IN_C_LEGACY_\n-\n-#endif\n-"}, {"sha": "db659f469f2e23497c03dc2e1b57ecb21a5b25f8", "filename": "libstdc++-v3/include/c_shadow/bits/std_cwchar.h", "status": "removed", "additions": 0, "deletions": 275, "changes": 275, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8269c9b8874fdac90d0d537a786c69ef0e2bc0a8/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fbits%2Fstd_cwchar.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8269c9b8874fdac90d0d537a786c69ef0e2bc0a8/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fbits%2Fstd_cwchar.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fbits%2Fstd_cwchar.h?ref=8269c9b8874fdac90d0d537a786c69ef0e2bc0a8", "patch": "@@ -1,275 +0,0 @@\n-// -*- C++ -*- header wrapper.\n-\n-// Copyright (C) 1997-1999, 2000 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-//\n-// ISO C++ 14882: 21\n-\n-#ifndef _CPP_CWCHAR\n-# define _CPP_CWCHAR 1\n-# include <bits/std_cstdio.h> \n-\n-namespace _C_legacy {\n-  extern \"C\" {\n-#     define _IN_C_LEGACY_\n-#     pragma GCC system_header\n-#     include_next <wchar.h>\n-  }\n-\n-#if 0\n-  // XXX\n-  inline int \n-  fwprintf(FILE* __stream, const wchar_t* __format, ...); \n-\n-  inline int \n-  fwscanf(FILE* __stream, const wchar_t* __format, ...); \n-\n-  inline int \n-  vfwprintf(FILE* __stream, const wchar_t* __format, va_list __arg); \n-\n-  inline int \n-  vfwscanf(FILE* __stream, const wchar_t* __format, va_list __arg);\n-\n-  inline wint_t \n-  _CPP_fgetwc_capture(FILE* __stream)\n-  { return fgetwc(__stream); }\n-\n-  inline wchar_t*\n-  _CPP_fgetws_capture(wchar_t* __s, int __n, FILE* __stream)\n-  { return fgetws(__s, __n, __stream); }\n-\n-  inline wint_t \n-  _CPP_fputwc_capture(wchar_t __c, FILE* __stream)\n-  { return fputwc(__c, __stream); }\n-\n-  inline int \n-  _CPP_fputws_capture(const wchar_t* __s, FILE* __stream)\n-  { return fputws(__s, __stream); }\n-\n-  inline int \n-  _CPP_fwide_capture(FILE* __stream, int __mode) \n-  { return fwide(__stream, __mode); }\n-\n-  inline wint_t \n-  _CPP_fgetwc_capture(FILE* __stream)\n-  { return fgetwc(__stream); }\n-\n-  inline wint_t \n-  _CPP_putwc_capture(wchar_t __c, FILE* __stream)\n-  { return putwc(__c, __stream); }\n-  \n-  inline wint_t \n-  _CPP_ungetwc_capture(wint_t __c, FILE* __stream)\n-  { return ungetwc(__c, __stream); }\n-#endif\n-} // namespace _C_legacy\n-\n-# undef wchar_t\n-# undef wint_t\n-# undef mbstate_t\n-\n-# undef fwprintf\n-# undef fwscanf\n-# undef swprintf\n-# undef swscanf\n-# undef vfwprintf\n-# undef vfwscanf\n-# undef vswprintf\n-# undef vswscanf\n-# undef vwprintf\n-# undef vwscanf\n-# undef wprintf\n-# undef wscanf\n-# undef fgetwc\n-# undef fgetws\n-# undef fputwc\n-# undef fputws\n-# undef fwide\n-# undef getwc\n-# undef getwchar\n-# undef putwc\n-# undef putwchar\n-# undef ungetwc\n-# undef wcstod\n-# undef wcstof\n-# undef wcstold\n-# undef wcstol\n-# undef wcstoll\n-# undef wcstoul\n-# undef wcstoull\n-# undef wcscpy\n-# undef wcsncpy\n-# undef wcscat\n-# undef wcsncat\n-# undef wcsmp\n-# undef wcscoll\n-# undef wcsncmp\n-# undef wcsxfrm\n-# undef wcschr\n-# undef wcscspn\n-# undef wcslen\n-# undef wcspbrk\n-# undef wcsrchr\n-# undef wcsspn\n-# undef wcsstr\n-# undef wcstok\n-# undef wmemchr\n-# undef wmemcmp\n-# undef wmemcpy\n-# undef wmemmove\n-# undef wmemset\n-# undef wcsftime\n-# undef btowc\n-# undef wctob\n-# undef mbsinit\n-# undef mbrlen\n-# undef mbrtowc\n-# undef wcrtomb\n-# undef mbsrtowcs\n-# undef wcsrtombs\n-\n-namespace std {\n-\n-  using _C_legacy::wint_t; \n-  using _C_legacy::mbstate_t;\n-\n-#if 0\n-  using _C_legacy::swprintf;\n-  using _C_legacy::swscanf;\n-  using _C_legacy::vswprintf;\n-  using _C_legacy::vswscanf;\n-  using _C_legacy::vwprintf;\n-  using _C_legacy::vwscanf;\n-  using _C_legacy::wprintf;\n-  using _C_legacy::wscanf;\n-  using _C_legacy::getwchar;\n-  using _C_legacy::putwchar;\n-#endif\n-\n-  using _C_legacy::wcstod;\n-  using _C_legacy::wcstof;\n-  using _C_legacy::wcstold;\n-  using _C_legacy::wcstol;\n-  using _C_legacy::wcstoll;\n-  using _C_legacy::wcstoul;\n-  using _C_legacy::wcstoull;\n-  using _C_legacy::wcscpy;\n-  using _C_legacy::wcsncpy;\n-  using _C_legacy::wcscat;\n-  using _C_legacy::wcsncat;\n-\n-#if 0\n-  using _C_legacy::wcsmp;\n-#endif\n-\n-  using _C_legacy::wcscoll;\n-  using _C_legacy::wcsncmp;\n-  using _C_legacy::wcsxfrm;\n-  using _C_legacy::wcschr;\n-  using _C_legacy::wcscspn;\n-  using _C_legacy::wcslen;\n-  using _C_legacy::wcspbrk;\n-  using _C_legacy::wcsrchr;\n-  using _C_legacy::wcsspn;\n-  using _C_legacy::wcsstr;\n-  using _C_legacy::wcstok;\n-  using _C_legacy::wmemchr;\n-  using _C_legacy::wmemcmp;\n-  using _C_legacy::wmemcpy;\n-  using _C_legacy::wmemmove;\n-  using _C_legacy::wmemset;\n-\n-#if 0\n-  using _C_legacy::wcsftime;\n-#endif\n-\n-  using _C_legacy::btowc;\n-  using _C_legacy::wctob;\n-  using _C_legacy::mbsinit;\n-  using _C_legacy::mbrlen;\n-  using _C_legacy::mbrtowc;\n-  using _C_legacy::wcrtomb;\n-  using _C_legacy::mbsrtowcs;\n-  using _C_legacy::wcsrtombs;\n-\n-#if 0\n-  // XXX\n-  inline int \n-  fwprintf(FILE* __stream, const wchar_t* __format, ...); \n-\n-  inline int \n-  fwscanf(FILE* __stream, const wchar_t* __format, ...); \n-\n-  inline int \n-  vfwprintf(FILE* __stream, const wchar_t* __format, va_list __arg); \n-\n-  inline int \n-  vfwscanf(FILE* __stream, const wchar_t* __format, va_list __arg);\n-\n-  inline wint_t \n-  fgetwc(FILE* __stream)\n-  { return _C_legacy::_CPP_fgetwc_capture(__stream); }\n-\n-  inline wchar_t*\n-  fgetws(wchar_t* __s, int __n, FILE* __stream) \n-  { return _C_legacy::_CPP_fgetws_capture(__s, __n, __stream); }\n-\n-  inline wint_t \n-  fputwc(wchar_t __c, FILE* __stream)\n-  { return _C_legacy::_CPP_fputwc_capture(__c, __stream); }\n-\n-  inline int \n-  fputws(const wchar_t* __s, FILE* __stream)\n-  { return _C_legacy::_CPP_fputws_capture(__s, __stream); }\n-\n-  inline int \n-  fwide(FILE* __stream, int __mode)\n-  { return _C_legacy::_CPP_fwide_capture(__stream, __mode); }\n-\n-  inline wint_t \n-  getwc(FILE* __stream)\n-  { return _C_legacy::_CPP_getwc_capture(__stream); }\n-\n-  inline wint_t \n-  putwc(wchar_t __c, FILE* __stream)\n-  { return _C_legacy::_CPP_putwc_capture(__c, __stream); }\n-  \n-  inline wint_t \n-  ungetwc(wint_t __c, FILE* __stream)\n-  { return _C_legacy::_CPP_ungetwc_capture(__c, __stream); }\n-#endif\n-}\n-\n-# undef _IN_C_LEGACY_\n-\n-#endif\n-\n-\n-\n-\n-"}, {"sha": "1a6a64282fd96976d140ff0ba36c1b0cd1d6cae2", "filename": "libstdc++-v3/include/c_shadow/bits/std_cwctype.h", "status": "removed", "additions": 0, "deletions": 129, "changes": 129, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8269c9b8874fdac90d0d537a786c69ef0e2bc0a8/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fbits%2Fstd_cwctype.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8269c9b8874fdac90d0d537a786c69ef0e2bc0a8/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fbits%2Fstd_cwctype.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fbits%2Fstd_cwctype.h?ref=8269c9b8874fdac90d0d537a786c69ef0e2bc0a8", "patch": "@@ -1,129 +0,0 @@\n-// -*- C++ -*- header wrapper.\n-\n-// Copyright (C) 1997-1999, 2000 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-//\n-// ISO C++ 14882: \n-//\n-\n-#ifndef _CPP_CWCTYPE\n-#define _CPP_CWCTYPE 1\n-\n-# include <bits/std_cwchar.h>  \n-\n-namespace _C_legacy {\n-  extern \"C\" {\n-#     define _IN_C_LEGACY_\n-#     pragma GCC system_header\n-#     include_next <wctype.h>\n-  }\n-} // namespace _C_legacy\n-\n-\n-# undef wctype_t\n-# undef wctrans_t\n-# undef iswalpha\n-# undef iswupper\n-# undef iswlower\n-# undef iswdigit\n-# undef iswxdigit\n-# undef iswalnum\n-# undef iswspace\n-# undef iswpunct\n-# undef iswprint\n-# undef iswgraph\n-# undef iswcntrl\n-# undef iswctype\n-# undef towctrans\n-# undef towlower\n-# undef towupper\n-# undef wctrans\n-# undef wctype\n-\n-namespace std {\n-  using _C_legacy::wctype_t;\n-  using _C_legacy::wctrans_t;\n-\n-  inline int \n-  iswalpha(wint_t __wc) { return _C_legacy::iswalpha(__wc); }\n-\n-  inline int \n-  iswupper(wint_t __wc) { return _C_legacy::iswupper(__wc); }\n-\n-  inline int \n-  iswlower(wint_t __wc) { return _C_legacy::iswlower(__wc); }\n-\n-  inline int \n-  iswdigit(wint_t __wc) { return _C_legacy::iswdigit(__wc); }\n-\n-  inline int \n-  iswxdigit(wint_t __wc) { return _C_legacy::iswxdigit(__wc); }\n-\n-  inline int \n-  iswalnum(wint_t __wc) { return _C_legacy::iswalnum(__wc); }\n-\n-  inline int \n-  iswspace(wint_t __wc) { return _C_legacy::iswspace(__wc); }\n-\n-  inline int \n-  iswpunct(wint_t __wc) { return _C_legacy::iswpunct(__wc); }\n-\n-  inline int \n-  iswprint(wint_t __wc) { return _C_legacy::iswprint(__wc); }\n-\n-  inline int \n-  iswgraph(wint_t __wc) { return _C_legacy::iswgraph(__wc); }\n-\n-  inline int \n-  iswcntrl(wint_t __wc) { return _C_legacy::iswcntrl(__wc); }\n-\n-  inline int \n-  towlower(wint_t __wc) { return _C_legacy::towlower(__wc); }\n-\n-  inline int \n-  towupper(wint_t __wc) { return _C_legacy::towupper(__wc); }\n-\n-  inline int \n-  iswctype(wint_t __wc, wctype_t __desc) \n-  { return _C_legacy::iswctype(__wc, __desc); }\n-\n-  inline wint_t \n-  towctrans(wint_t __wc, wctrans_t __desc)\n-  { return _C_legacy::towctrans (__wc, __desc); }\n-  \n-  inline wctrans_t \n-  wctrans(const char *__property) { return _C_legacy::wctrans(__property); }\n-\n-  inline wctype_t \n-  wctype(char const* __property) { return _C_legacy::wctype(__property); }\n-} // namespace std\n-\n-# undef _IN_C_LEGACY_\n-\n-#endif\n-"}, {"sha": "0bed4bf1d4af890187748e539881860e0f2417d2", "filename": "libstdc++-v3/include/c_shadow/bits/wrap_fcntl.h", "status": "removed", "additions": 0, "deletions": 92, "changes": 92, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8269c9b8874fdac90d0d537a786c69ef0e2bc0a8/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fbits%2Fwrap_fcntl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8269c9b8874fdac90d0d537a786c69ef0e2bc0a8/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fbits%2Fwrap_fcntl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fbits%2Fwrap_fcntl.h?ref=8269c9b8874fdac90d0d537a786c69ef0e2bc0a8", "patch": "@@ -1,92 +0,0 @@\n-// -*- C++ -*- header wrapper.\n-\n-// Copyright (C) 2000 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-//\n-// ISO C++ 14882: 26.5  C library extensions\n-//\n-\n-#ifndef _CPP_FCNTL\n-#define _CPP_FCNTL 1\n-\n-# include <bits/c++config.h>\n-\n-namespace _C_legacy {\n-  extern \"C\" {\n-#     define _IN_C_LEGACY_\n-#     pragma GCC system_header\n-    // XXX\n-# undef SEEK_SET\n-# undef SEEK_CUR\n-# undef SEEK_END\n-\n-#     include_next <fcntl.h>\n-  }\n-} // namespace _C_legacy\n-\n-# undef SEEK_SET\n-# undef SEEK_CUR\n-# undef SEEK_END\n-\n-// NB: Don't bring elements from this non-standard header into namespace std.\n-\n-# undef _IN_C_LEGACY_\n-\n-#endif\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-"}, {"sha": "52402bf66bbde7a374c29af2448f955372e5c849", "filename": "libstdc++-v3/include/c_shadow/bits/wrap_features.h", "status": "removed", "additions": 0, "deletions": 51, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8269c9b8874fdac90d0d537a786c69ef0e2bc0a8/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fbits%2Fwrap_features.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8269c9b8874fdac90d0d537a786c69ef0e2bc0a8/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fbits%2Fwrap_features.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fbits%2Fwrap_features.h?ref=8269c9b8874fdac90d0d537a786c69ef0e2bc0a8", "patch": "@@ -1,51 +0,0 @@\n-// -*- C++ -*- header wrapper.\n-\n-// Copyright (C) 2000 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-//\n-// ISO C++ 14882: 20.5 Extensions  \n-//\n-\n-#ifndef _CPP_WRAP_FEATURES_H\n-#define _CPP_WRAP_FEATURES_H 1\n-\n-#include <bits/c++config.h>\n-\n-namespace _C_legacy {\n-  extern \"C\" {\n-#     define _IN_C_LEGACY_\n-#     pragma GCC system_header\n-#     include_next <features.h>\n-  }\n-} // namespace _C_legacy\n-\n-// NB: Don't bring elements from this non-standard header into namespace std.\n-\n-# undef _IN_C_LEGACY_\n-\n-#endif"}, {"sha": "3e72e2d46eeb50be14d4e5fce473d818409c3466", "filename": "libstdc++-v3/include/c_shadow/bits/wrap_iconv.h", "status": "removed", "additions": 0, "deletions": 51, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8269c9b8874fdac90d0d537a786c69ef0e2bc0a8/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fbits%2Fwrap_iconv.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8269c9b8874fdac90d0d537a786c69ef0e2bc0a8/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fbits%2Fwrap_iconv.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fbits%2Fwrap_iconv.h?ref=8269c9b8874fdac90d0d537a786c69ef0e2bc0a8", "patch": "@@ -1,51 +0,0 @@\n-// -*- C++ -*- header wrapper.\n-\n-// Copyright (C) 2000 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-//\n-// ISO C++ 14882: 20.5 Extensions  \n-//\n-\n-#ifndef _CPP_WRAP_ICONV_H\n-#define _CPP_WRAP_ICONV_H 1\n-\n-namespace _C_legacy {\n-  extern \"C\" {\n-#     define _IN_C_LEGACY_\n-#     pragma GCC system_header\n-#     include_next <iconv.h>\n-  }\n-} // namespace _C_legacy\n-\n-// NB: Don't bring elements from this non-standard header into namespace std.\n-\n-# undef _IN_C_LEGACY_\n-\n-#endif\n-\n-"}, {"sha": "ddbabd7a424c70a5cff442c613ca2f2609abe18b", "filename": "libstdc++-v3/include/c_shadow/bits/wrap_iolibio.h", "status": "removed", "additions": 0, "deletions": 50, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8269c9b8874fdac90d0d537a786c69ef0e2bc0a8/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fbits%2Fwrap_iolibio.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8269c9b8874fdac90d0d537a786c69ef0e2bc0a8/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fbits%2Fwrap_iolibio.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fbits%2Fwrap_iolibio.h?ref=8269c9b8874fdac90d0d537a786c69ef0e2bc0a8", "patch": "@@ -1,50 +0,0 @@\n-// -*- C++ -*- header wrapper.\n-\n-// Copyright (C) 1997-1999, 2000 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-//\n-// ISO C++ 14882: 20.5 Extensions  \n-//\n-\n-#ifndef _CPP_WRAP_IOLIBIO_H\n-#define _CPP_WRAP_IOLIBIO_H 1\n-\n-namespace _C_legacy {\n-  extern \"C\" {\n-#     define _IN_C_LEGACY_\n-#     pragma GCC system_header\n-#     include_next <iolibio.h>\n-  }\n-} // namespace _C_legacy\n-\n-// NB: Don't bring elements from this non-standard header into namespace std.\n-\n-# undef _IN_C_LEGACY_\n-\n-#endif\n-"}, {"sha": "138faa10d77629aaf01ac43f483f065b87ccf57e", "filename": "libstdc++-v3/include/c_shadow/bits/wrap_langinfo.h", "status": "removed", "additions": 0, "deletions": 49, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8269c9b8874fdac90d0d537a786c69ef0e2bc0a8/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fbits%2Fwrap_langinfo.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8269c9b8874fdac90d0d537a786c69ef0e2bc0a8/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fbits%2Fwrap_langinfo.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fbits%2Fwrap_langinfo.h?ref=8269c9b8874fdac90d0d537a786c69ef0e2bc0a8", "patch": "@@ -1,49 +0,0 @@\n-// -*- C++ -*- header wrapper.\n-\n-// Copyright (C) 2000 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-//\n-// ISO C++ 14882: 20.5 Extensions\n-//\n-\n-#ifndef _CPP_WRAP_LANGINFO_H\n-#define _CPP_WRAP_LANGINFO_H 1\n-\n-namespace _C_legacy {\n-  extern \"C\" {\n-#     define _IN_C_LEGACY_\n-#     pragma GCC system_header\n-#     include_next <langinfo.h>\n-  }\n-} // namespace _C_legacy\n-\n-# undef _IN_C_LEGACY_\n-\n-#endif\n-\n-"}, {"sha": "e5da6e3f382de5c639a1987e34e5af87e6474580", "filename": "libstdc++-v3/include/c_shadow/bits/wrap_libio.h", "status": "removed", "additions": 0, "deletions": 50, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8269c9b8874fdac90d0d537a786c69ef0e2bc0a8/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fbits%2Fwrap_libio.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8269c9b8874fdac90d0d537a786c69ef0e2bc0a8/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fbits%2Fwrap_libio.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fbits%2Fwrap_libio.h?ref=8269c9b8874fdac90d0d537a786c69ef0e2bc0a8", "patch": "@@ -1,50 +0,0 @@\n-// -*- C++ -*- header wrapper.\n-\n-// Copyright (C) 1997-1999, 2000 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-//\n-// ISO C++ 14882: 20.5 Extensions  \n-//\n-\n-#ifndef _CPP_WRAP_LIBIO_H\n-#define _CPP_WRAP_LIBIO_H 1\n-\n-namespace _C_legacy {\n-  extern \"C\" {\n-#     define _IN_C_LEGACY_\n-#     pragma GCC system_header\n-#     include_next <libio.h>\n-  }\n-} // namespace _C_legacy\n-\n-// NB: Don't bring elements from this non-standard header into namespace std.\n-\n-# undef _IN_C_LEGACY_\n-\n-#endif\n-"}, {"sha": "32f8c2ebd10a60f0bb663326f936b0347a6a6434", "filename": "libstdc++-v3/include/c_shadow/bits/wrap_libioP.h", "status": "removed", "additions": 0, "deletions": 50, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8269c9b8874fdac90d0d537a786c69ef0e2bc0a8/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fbits%2Fwrap_libioP.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8269c9b8874fdac90d0d537a786c69ef0e2bc0a8/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fbits%2Fwrap_libioP.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fbits%2Fwrap_libioP.h?ref=8269c9b8874fdac90d0d537a786c69ef0e2bc0a8", "patch": "@@ -1,50 +0,0 @@\n-// -*- C++ -*- header wrapper.\n-\n-// Copyright (C) 1997-1999, 2000 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-//\n-// ISO C++ 14882: 20.5 Extensions  \n-//\n-\n-#ifndef _CPP_WRAP_LIBIOP_H\n-#define _CPP_WRAP_LIBIOP_H 1\n-\n-namespace _C_legacy {\n-  extern \"C\" {\n-#     define _IN_C_LEGACY_\n-#     pragma GCC system_header\n-#     include_next <libioP.h>\n-  }\n-} // namespace _C_legacy\n-\n-// NB: Don't bring elements from this non-standard header into namespace std.\n-\n-# undef _IN_C_LEGACY_\n-\n-#endif\n-"}, {"sha": "d04eeba8a31b8f68d9bff5ad6e891eeee99d3164", "filename": "libstdc++-v3/include/c_shadow/bits/wrap_pthread.h", "status": "removed", "additions": 0, "deletions": 81, "changes": 81, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8269c9b8874fdac90d0d537a786c69ef0e2bc0a8/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fbits%2Fwrap_pthread.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8269c9b8874fdac90d0d537a786c69ef0e2bc0a8/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fbits%2Fwrap_pthread.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fbits%2Fwrap_pthread.h?ref=8269c9b8874fdac90d0d537a786c69ef0e2bc0a8", "patch": "@@ -1,81 +0,0 @@\n-// -*- C++ -*- header wrapper.\n-\n-// Copyright (C) 2000 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-//\n-// ISO C++ 14882: 26.5  C library extensions\n-//\n-\n-#ifndef _CPP_WRAP_PTHREAD_H\n-#define _CPP_WRAP_PTHREAD_H 1\n-\n-# include <bits/c++config.h>\n-\n-namespace _C_legacy {\n-  extern \"C\" {\n-#     define _IN_C_LEGACY_\n-#     pragma GCC system_header\n-#     include_next <pthread.h>\n-  }\n-} // namespace _C_legacy\n-\n-# undef _IN_C_LEGACY_\n-\n-#endif\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-"}, {"sha": "8e28b698c7218f6fed57ab5d20745c2a769be150", "filename": "libstdc++-v3/include/c_shadow/bits/wrap_unistd.h", "status": "removed", "additions": 0, "deletions": 47, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8269c9b8874fdac90d0d537a786c69ef0e2bc0a8/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fbits%2Fwrap_unistd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8269c9b8874fdac90d0d537a786c69ef0e2bc0a8/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fbits%2Fwrap_unistd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fbits%2Fwrap_unistd.h?ref=8269c9b8874fdac90d0d537a786c69ef0e2bc0a8", "patch": "@@ -1,47 +0,0 @@\n-// -*- C++ -*- header wrapper.\n-\n-// Copyright (C) 2000 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-//\n-// ISO C++ 14882: 26.5  C library extensions\n-//\n-\n-#ifndef _CPP_WRAP_UNISTD_H\n-#define _CPP_WRAP_UNISTD_H 1\n-\n-namespace _C_legacy {\n-  extern \"C\" {\n-#     define _IN_C_LEGACY_\n-#     pragma GCC system_header\n-#     include_next <unistd.h>\n-  }\n-} // namespace _C_legacy\n-\n-# undef _IN_C_LEGACY_\n-\n-#endif"}, {"sha": "199089c594cc7b5160cc7de2b12774eeb28b6df3", "filename": "libstdc++-v3/include/c_shadow/ctype.h", "status": "removed", "additions": 0, "deletions": 67, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8269c9b8874fdac90d0d537a786c69ef0e2bc0a8/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fctype.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8269c9b8874fdac90d0d537a786c69ef0e2bc0a8/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fctype.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fctype.h?ref=8269c9b8874fdac90d0d537a786c69ef0e2bc0a8", "patch": "@@ -1,67 +0,0 @@\n-// -*- C++ -*- header wrapper.\n-\n-// Copyright (C) 1997-1999, 2000 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-\n-#ifndef  _INCLUDED_CPP_CTYPE_H_\n-# define _INCLUDED_CPP_CTYPE_H_ 1\n-\n-# ifdef _IN_C_LEGACY_  /* sub-included by a C header */\n-      // get out of the \"legacy\"\n-    } // close extern \"C\"\n-  }   // close namespace _C_legacy::\n-#  undef _IN_C_LEGACY_\n-#  define _CTYPE_NEED_C_LEGACY_\n-# endif\n-\n-# include <cctype>\n-\n-  // Expose global C names, including non-standard ones, but shadow\n-  // some names and types with the std:: C++ version.\n-  using std::isalnum;\n-  using std::isalpha;\n-  using std::iscntrl;\n-  using std::isdigit;\n-  using std::isgraph;\n-  using std::islower;\n-  using std::isprint;\n-  using std::ispunct;\n-  using std::isspace;\n-  using std::isupper;\n-  using std::isxdigit;\n-  using std::tolower;\n-  using std::toupper;\n-\n-# ifdef _CTYPE_NEED_C_LEGACY_\n-  // dive back into the \"swamp\"\n-  namespace _C_legacy {\n-    extern \"C\" {\n-#  define _IN_C_LEGACY_\n-#  undef _CTYPE_NEED_C_LEGACY_\n-# endif /* _CTYPE_NEED_C_LEGACY_ */\n-#endif /* _INCLUDED_CPP_CTYPE_H_ */"}, {"sha": "4e2fc332e88084394f64901c0bd432a8b338369f", "filename": "libstdc++-v3/include/c_shadow/errno.h", "status": "removed", "additions": 0, "deletions": 56, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8269c9b8874fdac90d0d537a786c69ef0e2bc0a8/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Ferrno.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8269c9b8874fdac90d0d537a786c69ef0e2bc0a8/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Ferrno.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Ferrno.h?ref=8269c9b8874fdac90d0d537a786c69ef0e2bc0a8", "patch": "@@ -1,56 +0,0 @@\n-// -*- C++ -*- header wrapper.\n-\n-// Copyright (C) 1997-1999, 2000 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-\n-#ifndef  _INCLUDED_CPP_ERRNO_H_\n-# define _INCLUDED_CPP_ERRNO_H_ 1\n-\n-# ifdef _IN_C_LEGACY_  /* sub-included by a C header */\n-      // get out of the \"legacy\"\n-    } // close extern \"C\"\n-  }   // close namespace _C_legacy::\n-#  undef _IN_C_LEGACY_\n-#  define _ERRNO_NEED_C_LEGACY_\n-# endif\n-\n-# include <cerrno>\n-\n-  // Expose global C names, including non-standard ones, but shadow\n-  // some names and types with the std:: C++ version.\n-  //  using std::errno;\n-\n-# ifdef _ERRNO_NEED_C_LEGACY_\n-  // dive back into the \"swamp\"\n-  namespace _C_legacy {\n-    extern \"C\" {\n-#  define _IN_C_LEGACY_\n-#  undef _ERRNO_NEED_C_LEGACY_\n-# endif /* _ERRNO_NEED_C_LEGACY_ */\n-#endif /* _INCLUDED_CPP_ERRNO_H_ */\n-"}, {"sha": "f19a15492741348eaf7596f73619eb05f350caee", "filename": "libstdc++-v3/include/c_shadow/fcntl.h", "status": "removed", "additions": 0, "deletions": 63, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8269c9b8874fdac90d0d537a786c69ef0e2bc0a8/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Ffcntl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8269c9b8874fdac90d0d537a786c69ef0e2bc0a8/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Ffcntl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Ffcntl.h?ref=8269c9b8874fdac90d0d537a786c69ef0e2bc0a8", "patch": "@@ -1,63 +0,0 @@\n-// -*- C++ -*- header wrapper.\n-\n-// Copyright (C) 1997-1999, 2000 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-\n-#ifndef  _INCLUDED_CPP_FCNTL_H_\n-# define _INCLUDED_CPP_FCNTL_H_ 1\n-\n-# ifdef _IN_C_LEGACY_  /* sub-included by a C header */\n-      // get out of the \"legacy\"\n-    } // close extern \"C\"\n-  }   // close namespace _C_legacy::\n-#  undef _IN_C_LEGACY_\n-#  define _FCNTL_NEED_C_LEGACY_\n-# endif\n-\n-# include <bits/wrap_fcntl.h>\n-\n-  // Expose global C names, including non-standard ones, but shadow\n-  // some names and types with the std:: C++ version.\n-  using _C_legacy::flock;\n-\n-  using _C_legacy::creat;\n-  using _C_legacy::open;\n-  using _C_legacy::fcntl;\n-\n-# ifdef _FCNTL_NEED_C_LEGACY_\n-  // dive back into the \"swamp\"\n-  namespace _C_legacy {\n-    extern \"C\" {\n-#  define _IN_C_LEGACY_\n-#  undef _FCNTL_NEED_C_LEGACY_\n-# endif /* _FCNTL_NEED_C_LEGACY_ */\n-#endif /* _INCLUDED_CPP_FCNTL_H_ */\n-\n-\n-\n-"}, {"sha": "eed4b0e803d6b9197d8d811837c52d4de18402d8", "filename": "libstdc++-v3/include/c_shadow/features.h", "status": "removed", "additions": 0, "deletions": 58, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8269c9b8874fdac90d0d537a786c69ef0e2bc0a8/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Ffeatures.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8269c9b8874fdac90d0d537a786c69ef0e2bc0a8/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Ffeatures.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Ffeatures.h?ref=8269c9b8874fdac90d0d537a786c69ef0e2bc0a8", "patch": "@@ -1,58 +0,0 @@\n-// -*- C++ -*- header wrapper.\n-\n-// Copyright (C) 2000 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-\n-#ifndef  _INCLUDED_CPP_FEATURES_H_\n-# define _INCLUDED_CPP_FEATURES_H_ 1\n-\n-# ifdef _IN_C_LEGACY_  /* sub-included by a C header */\n-      // get out of the \"legacy\"\n-    } // close extern \"C\"\n-  }   // close namespace _C_legacy::\n-#  undef _IN_C_LEGACY_\n-#  define _FEATURES_NEED_C_LEGACY_\n-# endif\n-\n-# include <bits/wrap_features.h>\n-\n-  // Expose global C names, including non-standard ones, but shadow\n-  // some names and types with the std:: C++ version.\n-\n-# ifdef _FEATURES_NEED_C_LEGACY_\n-  // dive back into the \"swamp\"\n-  namespace _C_legacy {\n-    extern \"C\" {\n-#  define _IN_C_LEGACY_\n-#  undef _FEATURES_NEED_C_LEGACY_\n-# endif /* _FEATURES_NEED_C_LEGACY_ */\n-#endif /* _INCLUDED_CPP_FEATURES_H_ */\n-\n-\n-\n-"}, {"sha": "f52c5f5c9eb578316b18e6bacf1ac2e4b5a18d31", "filename": "libstdc++-v3/include/c_shadow/float.h", "status": "removed", "additions": 0, "deletions": 54, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8269c9b8874fdac90d0d537a786c69ef0e2bc0a8/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Ffloat.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8269c9b8874fdac90d0d537a786c69ef0e2bc0a8/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Ffloat.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Ffloat.h?ref=8269c9b8874fdac90d0d537a786c69ef0e2bc0a8", "patch": "@@ -1,54 +0,0 @@\n-// -*- C++ -*- header wrapper.\n-\n-// Copyright (C) 1997-1999, 2000 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-\n-#ifndef  _INCLUDED_CPP_FLOAT_H_\n-# define _INCLUDED_CPP_FLOAT_H_ 1\n-\n-# ifdef _IN_C_LEGACY_  /* sub-included by a C header */\n-      // get out of the \"legacy\"\n-    } // close extern \"C\"\n-  }   // close namespace _C_legacy::\n-#  undef _IN_C_LEGACY_\n-#  define _FLOAT_NEED_C_LEGACY_\n-# endif\n-\n-# include <cfloat>\n-\n-  // Expose global C names, including non-standard ones, but shadow\n-  // some names and types with the std:: C++ version.\n-\n-# ifdef _FLOAT_NEED_C_LEGACY_\n-  // dive back into the \"swamp\"\n-  namespace _C_legacy {\n-    extern \"C\" {\n-#  define _IN_C_LEGACY_\n-#  undef _FLOAT_NEED_C_LEGACY_\n-# endif /* _FLOAT_NEED_C_LEGACY_ */\n-#endif /* _INCLUDED_CPP_FLOAT_H_ */"}, {"sha": "1ea5038c24a2a222aab81477cf9f7837ad31dac5", "filename": "libstdc++-v3/include/c_shadow/iconv.h", "status": "removed", "additions": 0, "deletions": 66, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8269c9b8874fdac90d0d537a786c69ef0e2bc0a8/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Ficonv.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8269c9b8874fdac90d0d537a786c69ef0e2bc0a8/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Ficonv.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Ficonv.h?ref=8269c9b8874fdac90d0d537a786c69ef0e2bc0a8", "patch": "@@ -1,66 +0,0 @@\n-// -*- C++ -*- header wrapper.\n-\n-// Copyright (C) 2000 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-\n-#ifndef  _INCLUDED_CPP_ICONV_H_\n-# define _INCLUDED_CPP_ICONV_H_ 1\n-\n-# ifdef _IN_C_LEGACY_  /* sub-included by a C header */\n-      // get out of the \"legacy\"\n-    } // close extern \"C\"\n-  }   // close namespace _C_legacy::\n-#  undef _IN_C_LEGACY_\n-#  define _ICONV_NEED_C_LEGACY_\n-# endif\n-\n-# include <bits/wrap_iconv.h>\n-\n-  // Expose global C names, including non-standard ones, but shadow\n-  // some names and types with the std:: C++ version.\n-\n-  // NB: Cannot use typedefs here to inject the names as the \"C\" headers\n-  // often include typedefs that include the keyword 'struct'\n-  using _C_legacy::iconv_t;\n-\n-  using _C_legacy::iconv_open;\n-  using _C_legacy::iconv;\n-  using _C_legacy::iconv_close;\n-\n-# ifdef _ICONV_NEED_C_LEGACY_\n-  // dive back into the \"swamp\"\n-  namespace _C_legacy {\n-    extern \"C\" {\n-#  define _IN_C_LEGACY_\n-#  undef _ICONV_NEED_C_LEGACY_\n-# endif /* _ICONV_NEED_C_LEGACY_ */\n-#endif /* _INCLUDED_CPP_ICONV_H_ */\n-\n-\n-\n-"}, {"sha": "845f6403594e3068f23d69da5ee3e0385a49bceb", "filename": "libstdc++-v3/include/c_shadow/iolibio.h", "status": "removed", "additions": 0, "deletions": 58, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8269c9b8874fdac90d0d537a786c69ef0e2bc0a8/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fiolibio.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8269c9b8874fdac90d0d537a786c69ef0e2bc0a8/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fiolibio.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fiolibio.h?ref=8269c9b8874fdac90d0d537a786c69ef0e2bc0a8", "patch": "@@ -1,58 +0,0 @@\n-// -*- C++ -*- header wrapper.\n-\n-// Copyright (C) 2000 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-\n-#ifndef  _INCLUDED_CPP_IOLIBIO_H_\n-# define _INCLUDED_CPP_IOLIBIO_H_ 1\n-\n-# ifdef _IN_C_LEGACY_  /* sub-included by a C header */\n-      // get out of the \"legacy\"\n-    } // close extern \"C\"\n-  }   // close namespace _C_legacy::\n-#  undef _IN_C_LEGACY_\n-#  define _IOLIBIO_NEED_C_LEGACY_\n-# endif\n-\n-# include <bits/wrap_iolibio.h>\n-\n-  // Expose global C names, including non-standard ones, but shadow\n-  // some names and types with the std:: C++ version.\n-\n-# ifdef _IOLIBIO_NEED_C_LEGACY_\n-  // dive back into the \"swamp\"\n-  namespace _C_legacy {\n-    extern \"C\" {\n-#  define _IN_C_LEGACY_\n-#  undef _IOLIBIO_NEED_C_LEGACY_\n-# endif /* _IOLIBIO_NEED_C_LEGACY_ */\n-#endif /* _INCLUDED_CPP_IOLIBIO_H_ */\n-\n-\n-\n-"}, {"sha": "3333ef15c81f09ebeaf0224e8f84dca976d222ff", "filename": "libstdc++-v3/include/c_shadow/langinfo.h", "status": "removed", "additions": 0, "deletions": 55, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8269c9b8874fdac90d0d537a786c69ef0e2bc0a8/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Flanginfo.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8269c9b8874fdac90d0d537a786c69ef0e2bc0a8/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Flanginfo.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Flanginfo.h?ref=8269c9b8874fdac90d0d537a786c69ef0e2bc0a8", "patch": "@@ -1,55 +0,0 @@\n-// -*- C++ -*- header wrapper.\n-\n-// Copyright (C) 2000 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-\n-#ifndef  _INCLUDED_CPP_LANGINFO_H_\n-# define _INCLUDED_CPP_LANGINFO_H_ 1\n-\n-# ifdef _IN_C_LEGACY_  /* sub-included by a C header */\n-      // get out of the \"legacy\"\n-    } // close extern \"C\"\n-  }   // close namespace _C_legacy::\n-#  undef _IN_C_LEGACY_\n-#  define _LANGINFO_NEED_C_LEGACY_\n-# endif\n-\n-# include <bits/wrap_langinfo.h>\n-\n-# ifdef _LANGINFO_NEED_C_LEGACY_\n-  // dive back into the \"swamp\"\n-  namespace _C_legacy {\n-    extern \"C\" {\n-#  define _IN_C_LEGACY_\n-#  undef _LANGINFO_NEED_C_LEGACY_\n-# endif /* _LANGINFO_NEED_C_LEGACY_ */\n-#endif /* _INCLUDED_CPP_LANGINFO_H_ */\n-\n-\n-\n-"}, {"sha": "2cafc7d88ebffa154757c6c9ede9e4cf1c9063da", "filename": "libstdc++-v3/include/c_shadow/libio.h", "status": "removed", "additions": 0, "deletions": 81, "changes": 81, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8269c9b8874fdac90d0d537a786c69ef0e2bc0a8/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Flibio.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8269c9b8874fdac90d0d537a786c69ef0e2bc0a8/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Flibio.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Flibio.h?ref=8269c9b8874fdac90d0d537a786c69ef0e2bc0a8", "patch": "@@ -1,81 +0,0 @@\n-// -*- C++ -*- header wrapper.\n-\n-// Copyright (C) 2000 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-\n-#ifndef  _INCLUDED_CPP_LIBIO_H_\n-# define _INCLUDED_CPP_LIBIO_H_ 1\n-\n-# ifdef _IN_C_LEGACY_  /* sub-included by a C header */\n-      // get out of the \"legacy\"\n-    } // close extern \"C\"\n-  }   // close namespace _C_legacy::\n-#  undef _IN_C_LEGACY_\n-#  define _LIBIO_NEED_C_LEGACY_\n-# endif\n-\n-# include <bits/wrap_libio.h>\n-\n-  // Expose global C names, including non-standard ones, but shadow\n-  // some names and types with the std:: C++ version.\n-\n-  // NB: Cannot use typedefs here to inject the names as the \"C\" headers\n-  // often include typedefs that include the keyword 'struct'\n-  using _C_legacy::_IO_pos_t;\n-  using _C_legacy::_IO_fpos_t;\n-  using _C_legacy::_IO_fpos64_t;\n-  using _C_legacy::_IO_size_t;\n-  using _C_legacy::_IO_ssize_t;\n-  using _C_legacy::_IO_off_t;\n-  using _C_legacy::_IO_off64_t;\n-  using _C_legacy::_IO_pid_t;\n-  using _C_legacy::_IO_uid_t;\n-  using _C_legacy::_IO_iconv_t;\n-  using _C_legacy::_IO_va_list;\n-  using _C_legacy::_IO_wint_t;\n-  using _C_legacy::_IO_lock_t;\n-\n-  using _C_legacy::_IO_marker;\n-  using _C_legacy::_IO_codecvt;\n-  using _C_legacy::_IO_wide_data;\n-  using _C_legacy::_IO_FILE;\n-  using _C_legacy::_IO_cookie_io_functions_t;\n-  using _C_legacy::_IO_cookie_file;\n-\n-# ifdef _LIBIO_NEED_C_LEGACY_\n-  // dive back into the \"swamp\"\n-  namespace _C_legacy {\n-    extern \"C\" {\n-#  define _IN_C_LEGACY_\n-#  undef _LIBIO_NEED_C_LEGACY_\n-# endif /* _LIBIO_NEED_C_LEGACY_ */\n-#endif /* _INCLUDED_CPP_LIBIO_H_ */\n-\n-\n-\n-"}, {"sha": "da3e716768fb92dedc657b098ed1a34433f644ed", "filename": "libstdc++-v3/include/c_shadow/libioP.h", "status": "removed", "additions": 0, "deletions": 64, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8269c9b8874fdac90d0d537a786c69ef0e2bc0a8/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2FlibioP.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8269c9b8874fdac90d0d537a786c69ef0e2bc0a8/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2FlibioP.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2FlibioP.h?ref=8269c9b8874fdac90d0d537a786c69ef0e2bc0a8", "patch": "@@ -1,64 +0,0 @@\n-// -*- C++ -*- header wrapper.\n-\n-// Copyright (C) 2000 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-\n-#ifndef  _INCLUDED_CPP_LIBIOP_H_\n-# define _INCLUDED_CPP_LIBIOP_H_ 1\n-\n-# ifdef _IN_C_LEGACY_  /* sub-included by a C header */\n-      // get out of the \"legacy\"\n-    } // close extern \"C\"\n-  }   // close namespace _C_legacy::\n-#  undef _IN_C_LEGACY_\n-#  define _LIBIOP_NEED_C_LEGACY_\n-# endif\n-\n-# include <bits/wrap_libioP.h>\n-\n-  // Expose global C names, including non-standard ones, but shadow\n-  // some names and types with the std:: C++ version.\n-  using _C_legacy::_IO_jump_t;\n-  using _C_legacy::_IO_FILE_plus;\n-  using _C_legacy::_IO_cookie_file;\n-\n-  using _C_legacy::_IO_file_jumps;\n-  using _C_legacy::_IO_wfile_jumps;\n-\n-# ifdef _LIBIOP_NEED_C_LEGACY_\n-  // dive back into the \"swamp\"\n-  namespace _C_legacy {\n-    extern \"C\" {\n-#  define _IN_C_LEGACY_\n-#  undef _LIBIOP_NEED_C_LEGACY_\n-# endif /* _LIBIOP_NEED_C_LEGACY_ */\n-#endif /* _INCLUDED_CPP_LIBIOP_H_ */\n-\n-\n-\n-"}, {"sha": "26aa771f2d58860e0aa5866d6102f5aad7e5da75", "filename": "libstdc++-v3/include/c_shadow/limits.h", "status": "removed", "additions": 0, "deletions": 54, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8269c9b8874fdac90d0d537a786c69ef0e2bc0a8/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Flimits.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8269c9b8874fdac90d0d537a786c69ef0e2bc0a8/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Flimits.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Flimits.h?ref=8269c9b8874fdac90d0d537a786c69ef0e2bc0a8", "patch": "@@ -1,54 +0,0 @@\n-// -*- C++ -*- header wrapper.\n-\n-// Copyright (C) 1997-1999, 2000 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-\n-#ifndef  _INCLUDED_CPP_LIMITS_H_\n-# define _INCLUDED_CPP_LIMITS_H_ 1\n-\n-# ifdef _IN_C_LEGACY_  /* sub-included by a C header */\n-      // get out of the \"legacy\"\n-    } // close extern \"C\"\n-  }   // close namespace _C_legacy::\n-#  undef _IN_C_LEGACY_\n-#  define _LIMITS_NEED_C_LEGACY_\n-# endif\n-\n-# include <climits>\n-\n-  // Expose global C names, including non-standard ones, but shadow\n-  // some names and types with the std:: C++ version.\n-\n-# ifdef _LIMITS_NEED_C_LEGACY_\n-  // dive back into the \"swamp\"\n-  namespace _C_legacy {\n-    extern \"C\" {\n-#  define _IN_C_LEGACY_\n-#  undef _LIMITS_NEED_C_LEGACY_\n-# endif /* _LIMITS_NEED_C_LEGACY_ */\n-#endif /* _INCLUDED_CPP_LIMITS_H_ */"}, {"sha": "1d5f529ed896d1d9be2aaca82bf58a41cee6f28f", "filename": "libstdc++-v3/include/c_shadow/locale.h", "status": "removed", "additions": 0, "deletions": 57, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8269c9b8874fdac90d0d537a786c69ef0e2bc0a8/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Flocale.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8269c9b8874fdac90d0d537a786c69ef0e2bc0a8/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Flocale.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Flocale.h?ref=8269c9b8874fdac90d0d537a786c69ef0e2bc0a8", "patch": "@@ -1,57 +0,0 @@\n-// -*- C++ -*- header wrapper.\n-\n-// Copyright (C) 1997-1999, 2000 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-\n-#ifndef  _INCLUDED_CPP_LOCALE_H_\n-# define _INCLUDED_CPP_LOCALE_H_ 1\n-\n-# ifdef _IN_C_LEGACY_  /* sub-included by a C header */\n-      // get out of the \"legacy\"\n-    } // close extern \"C\"\n-  }   // close namespace _C_legacy::\n-#  undef _IN_C_LEGACY_\n-#  define _LOCALE_NEED_C_LEGACY_\n-#endif\n-\n-# include <clocale>\n-\n-  // Expose global C names, including non-standard ones, but shadow\n-  // some names and types with the std:: C++ version.\n-  using std::lconv;\n-  using std::setlocale;\n-  using std::localeconv;\n-\n-# ifdef _LOCALE_NEED_C_LEGACY_\n-  // dive back into the \"swamp\"\n-  namespace _C_legacy {\n-    extern \"C\" {\n-#  define _IN_C_LEGACY_\n-#  undef _LOCALE_NEED_C_LEGACY_\n-# endif /* _LOCALE_NEED_C_LEGACY_ */\n-#endif /* _INCLUDED_CPP_LOCALE_H_ */"}, {"sha": "f2ec04af671b228edf7769e4fc7a64eaca8f0720", "filename": "libstdc++-v3/include/c_shadow/math.h", "status": "removed", "additions": 0, "deletions": 131, "changes": 131, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8269c9b8874fdac90d0d537a786c69ef0e2bc0a8/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fmath.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8269c9b8874fdac90d0d537a786c69ef0e2bc0a8/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fmath.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fmath.h?ref=8269c9b8874fdac90d0d537a786c69ef0e2bc0a8", "patch": "@@ -1,131 +0,0 @@\n-// -*- C++ -*- header wrapper.\n-\n-// Copyright (C) 1997-1999, 2000 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-\n-#ifndef  _INCLUDED_CPP_MATH_H_\n-# define _INCLUDED_CPP_MATH_H_ 1\n-\n-# ifdef _IN_C_LEGACY_  /* sub-included by a C header */\n-      // get out of the \"legacy\"\n-    } // close extern \"C\"\n-  }   // close namespace _C_legacy::\n-#  undef _IN_C_LEGACY_\n-#  define _MATH_NEED_C_LEGACY_\n-# endif\n-\n-# include <cmath>\n-\n-  // Expose global C names, including non-standard ones, but shadow\n-  // some names and types with the std:: C++ version.\n-  using std::abs;\n-  using std::acos;\n-  using std::asin;\n-  using std::atan;\n-  using std::atan2;\n-  using std::cos;\n-  using std::sin;\n-  using std::tan;\n-  using std::cosh;\n-  using std::sinh;\n-  using std::tanh;\n-  using std::exp;\n-  using std::frexp;\n-  using std::ldexp;\n-  using std::log;\n-  using std::log10;\n-  using std::modf;\n-  using std::pow;\n-  using std::sqrt;\n-  using std::ceil;\n-  using std::fabs;\n-  using std::floor;\n-  using std::fmod;\n-\n-  // From ISO/IEC 9899:1999\n-  using std::absf;\n-  using std::acosf;\n-  using std::asinf;\n-  using std::atanf;\n-  using std::atan2f;\n-  using std::cosf;\n-  using std::sinf;\n-  using std::tanf;\n-  using std::coshf;\n-  using std::sinhf;\n-  using std::tanhf;\n-  using std::expf;\n-  using std::frexpf;\n-  using std::ldexpf;\n-  using std::logf;\n-  using std::log10f;\n-  using std::modff;\n-  using std::powf;\n-  using std::sqrtf;\n-  using std::ceilf;\n-  using std::fabsf;\n-  using std::floorf;\n-  using std::fmodf;\n-\n-  // From ISO/IEC 9899:1999\n-  using std::absl;\n-  using std::acosl;\n-  using std::asinl;\n-  using std::atanl;\n-  using std::atan2l;\n-  using std::cosl;\n-  using std::sinl;\n-  using std::tanl;\n-  using std::coshl;\n-  using std::sinhl;\n-  using std::tanhl;\n-  using std::expl;\n-  using std::frexpl;\n-  using std::ldexpl;\n-  using std::logl;\n-  using std::log10l;\n-  using std::modfl;\n-  using std::powl;\n-  using std::sqrtl;\n-  using std::ceill;\n-  using std::fabsl;\n-  using std::floorl;\n-  using std::fmodl;\n-\n-# ifdef _MATH_NEED_C_LEGACY_\n-  // dive back into the \"swamp\"\n-  namespace _C_legacy {\n-    extern \"C\" {\n-#  define _IN_C_LEGACY_\n-#  undef _MATH_NEED_C_LEGACY_\n-# endif /* _MATH_NEED_C_LEGACY_ */\n-#endif /* _INCLUDED_CPP_MATH_H_ */\n-\n-\n-\n-"}, {"sha": "8692d3e52d43b6b88822ad4249c2b4f974b569cb", "filename": "libstdc++-v3/include/c_shadow/pthread.h", "status": "removed", "additions": 0, "deletions": 86, "changes": 86, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8269c9b8874fdac90d0d537a786c69ef0e2bc0a8/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fpthread.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8269c9b8874fdac90d0d537a786c69ef0e2bc0a8/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fpthread.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fpthread.h?ref=8269c9b8874fdac90d0d537a786c69ef0e2bc0a8", "patch": "@@ -1,86 +0,0 @@\n-// -*- C++ -*- header wrapper.\n-\n-// Copyright (C) 2000 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-\n-#ifndef  _INCLUDED_CPP_PTHREAD_H_\n-# define _INCLUDED_CPP_PTHREAD_H_ 1\n-\n-# ifdef _IN_C_LEGACY_  /* sub-included by a C header */\n-      // get out of the \"legacy\"\n-    } // close extern \"C\"\n-  }   // close namespace _C_legacy::\n-#  undef _IN_C_LEGACY_\n-#  define _PTHREAD_NEED_C_LEGACY_\n-# endif\n-\n-# include <bits/wrap_pthread.h>\n-\n-  // Expose global C names, including non-standard ones, but shadow\n-  // some names and types with the std:: C++ version.\n-  using _C_legacy::__sched_param;\n-\n-  using _C_legacy::pthread_attr_t;\n-  using _C_legacy::pthread_cond_t;\n-  using _C_legacy::pthread_condattr_t;\n-  using _C_legacy::pthread_key_t;\n-  using _C_legacy::pthread_mutex_t;\n-  using _C_legacy::pthread_mutexattr_t;\n-  using _C_legacy::pthread_once_t;\n-  using _C_legacy::pthread_rwlock_t;\n-  using _C_legacy::pthread_rwlockattr_t;\n-  using _C_legacy::pthread_t;\n-\n-  using _C_legacy::pthread_mutex_init;\n-  using _C_legacy::pthread_mutex_destroy;\n-  using _C_legacy::pthread_mutex_lock;\n-  using _C_legacy::pthread_mutex_trylock;\n-  using _C_legacy::pthread_mutex_unlock;\n-  using _C_legacy::pthread_mutexattr_init;\n-  using _C_legacy::pthread_mutexattr_destroy;\n-  using _C_legacy::pthread_mutexattr_settype;\n-  using _C_legacy::pthread_mutexattr_gettype;\n-  using _C_legacy::pthread_key_create;\n-  using _C_legacy::pthread_key_delete;\n-  using _C_legacy::pthread_setspecific;\n-  using _C_legacy::pthread_getspecific;\n-  using _C_legacy::pthread_once;\n-  using _C_legacy::pthread_atfork;\n-\n-# ifdef _PTHREAD_NEED_C_LEGACY_\n-  // dive back into the \"swamp\"\n-  namespace _C_legacy {\n-    extern \"C\" {\n-#  define _IN_C_LEGACY_\n-#  undef _PTHREAD_NEED_C_LEGACY_\n-# endif /* _PTHREAD_NEED_C_LEGACY_ */\n-#endif /* _INCLUDED_CPP_PTHREAD_H_ */\n-\n-\n-\n-"}, {"sha": "c4061e871dbaa3dd2137066dfaad982bd0c6f489", "filename": "libstdc++-v3/include/c_shadow/setjmp.h", "status": "removed", "additions": 0, "deletions": 56, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8269c9b8874fdac90d0d537a786c69ef0e2bc0a8/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fsetjmp.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8269c9b8874fdac90d0d537a786c69ef0e2bc0a8/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fsetjmp.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fsetjmp.h?ref=8269c9b8874fdac90d0d537a786c69ef0e2bc0a8", "patch": "@@ -1,56 +0,0 @@\n-// -*- C++ -*- header wrapper.\n-\n-// Copyright (C) 1997-1999, 2000 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-\n-#ifndef  _INCLUDED_CPP_SETJMP_H_\n-# define _INCLUDED_CPP_SETJMP_H_ 1\n-\n-# ifdef _IN_C_LEGACY_  /* sub-included by a C header */\n-      // get out of the \"legacy\"\n-    } // close extern \"C\"\n-  }   // close namespace _C_legacy::\n-#  undef _IN_C_LEGACY_\n-#  define _SETJMP_NEED_C_LEGACY_\n-# endif\n-\n-# include <csetjmp>\n-\n-  // Expose global C names, including non-standard ones, but shadow\n-  // some names and types with the std:: C++ version.\n-  using std::jmp_buf;\n-  using std::longjmp;\n-\n-# ifdef _SETJMP_NEED_C_LEGACY_\n-  // dive back into the \"swamp\"\n-  namespace _C_legacy {\n-    extern \"C\" {\n-#  define _IN_C_LEGACY_\n-#  undef _SETJMP_NEED_C_LEGACY_\n-# endif /* _SETJMP_NEED_C_LEGACY_ */\n-#endif /* _INCLUDED_CPP_SETJMP_H_ */"}, {"sha": "819ddf22f325f0277f8f08fbd49d929a4d19c125", "filename": "libstdc++-v3/include/c_shadow/signal.h", "status": "removed", "additions": 0, "deletions": 58, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8269c9b8874fdac90d0d537a786c69ef0e2bc0a8/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fsignal.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8269c9b8874fdac90d0d537a786c69ef0e2bc0a8/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fsignal.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fsignal.h?ref=8269c9b8874fdac90d0d537a786c69ef0e2bc0a8", "patch": "@@ -1,58 +0,0 @@\n-// -*- C++ -*- header wrapper.\n-\n-// Copyright (C) 1997-1999, 2000 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-\n-#ifndef  _INCLUDED_CPP_SIGNAL_H_\n-# define _INCLUDED_CPP_SIGNAL_H_ 1\n-\n-# ifdef _IN_C_LEGACY_  /* sub-included by a C header */\n-      // get out of the \"legacy\"\n-    } // close extern \"C\"\n-  }   // close namespace _C_legacy::\n-#  undef _IN_C_LEGACY_\n-#  define _SIGNAL_NEED_C_LEGACY_\n-# endif\n-\n-# include <csignal>\n-\n-  // Expose global C names, including non-standard ones, but shadow\n-  // some names and types with the std:: C++ version.\n-  using std::sig_atomic_t;\n-\n-  using std::raise;\n-  using std::signal;\n-\n-# ifdef _SIGNAL_NEED_C_LEGACY_\n-  // dive back into the \"swamp\"\n-  namespace _C_legacy {\n-    extern \"C\" {\n-#  define _IN_C_LEGACY_\n-#  undef _SIGNAL_NEED_C_LEGACY_\n-#  endif /* _SIGNAL_NEED_C_LEGACY_ */\n-#endif /* _INCLUDED_CPP_SIGNAL_H_ */"}, {"sha": "cb32feca7d60956f2a2961373f64f17c7b7de81b", "filename": "libstdc++-v3/include/c_shadow/stdarg.h", "status": "removed", "additions": 0, "deletions": 55, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8269c9b8874fdac90d0d537a786c69ef0e2bc0a8/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fstdarg.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8269c9b8874fdac90d0d537a786c69ef0e2bc0a8/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fstdarg.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fstdarg.h?ref=8269c9b8874fdac90d0d537a786c69ef0e2bc0a8", "patch": "@@ -1,55 +0,0 @@\n-// -*- C++ -*- header wrapper.\n-\n-// Copyright (C) 1997-1999, 2000 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-\n-#ifndef  _INCLUDED_CPP_STDARG_H_\n-# define _INCLUDED_CPP_STDARG_H_ 1\n-\n-#ifdef _IN_C_LEGACY_  /* sub-included by a C header */\n-      // get out of the \"legacy\"\n-    } // close extern \"C\"\n-  }   // close namespace _C_legacy::\n-#  undef _IN_C_LEGACY_\n-#  define _STDARG_NEED_C_LEGACY_\n-# endif\n-\n-# include <cstdarg>\n-\n-  // Expose global C names, including non-standard ones, but shadow\n-  // some names and types with the std:: C++ version.\n-  using std::va_list;\n-\n-# ifdef _STDARG_NEED_C_LEGACY_\n-  // dive back into the \"swamp\"\n-  namespace _C_legacy {\n-    extern \"C\" {\n-#  define _IN_C_LEGACY_\n-#  undef _STDARG_NEED_C_LEGACY_\n-# endif /* _STDARG_NEED_C_LEGACY_ */\n-#endif /* _INCLUDED_CPP_STDARG_H_ */"}, {"sha": "03d5896779ea32e7e4d9709223d1fbe8d789d070", "filename": "libstdc++-v3/include/c_shadow/stddef.h", "status": "removed", "additions": 0, "deletions": 60, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8269c9b8874fdac90d0d537a786c69ef0e2bc0a8/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fstddef.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8269c9b8874fdac90d0d537a786c69ef0e2bc0a8/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fstddef.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fstddef.h?ref=8269c9b8874fdac90d0d537a786c69ef0e2bc0a8", "patch": "@@ -1,60 +0,0 @@\n-// -*- C++ -*- header wrapper.\n-\n-// Copyright (C) 1997-1999, 2000 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-\n-#ifndef  _INCLUDED_CPP_STDDEF_H_\n-# define _INCLUDED_CPP_STDDEF_H_ 1\n-\n-# ifdef _IN_C_LEGACY_  /* sub-included by a C header */\n-      // get out of the \"legacy\"\n-    } // close extern \"C\"\n-  }   // close namespace _C_legacy::\n-#  undef _IN_C_LEGACY_\n-#  define _STDDEF_NEED_C_LEGACY_\n-# endif\n-\n-# include <cstddef>\n-\n-  // Expose global C names, including non-standard ones, but shadow\n-  // some names and types with the std:: C++ version.\n-  using std::ptrdiff_t;\n-  using std::size_t;\n-\n-# ifdef _STDDEF_NEED_C_LEGACY_\n-  // dive back into the \"swamp\"\n-  namespace _C_legacy {\n-    extern \"C\" {\n-#  define _IN_C_LEGACY_\n-#  undef _STDDEF_NEED_C_LEGACY_\n-# endif /* _STDDEF_NEED_C_LEGACY_ */\n-#endif /* _INCLUDED_CPP_STDDEF_H_ */\n-\n-\n-\n-"}, {"sha": "c3a43b736c2dc14aa61b42b1c361373716f3aa1a", "filename": "libstdc++-v3/include/c_shadow/stdio.h", "status": "removed", "additions": 0, "deletions": 97, "changes": 97, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8269c9b8874fdac90d0d537a786c69ef0e2bc0a8/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fstdio.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8269c9b8874fdac90d0d537a786c69ef0e2bc0a8/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fstdio.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fstdio.h?ref=8269c9b8874fdac90d0d537a786c69ef0e2bc0a8", "patch": "@@ -1,97 +0,0 @@\n-// -*- C++ -*- header wrapper.\n-\n-// Copyright (C) 1997-1999, 2000 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-#ifndef  _INCLUDED_CPP_STDIO_H_\n-# define _INCLUDED_CPP_STDIO_H_ 1\n-\n-# ifdef _IN_C_LEGACY_  /* sub-included by a C header */\n-      // get out of the \"legacy\"\n-    } // close extern \"C\"\n-  }   // close namespace _C_legacy::\n-#  undef _IN_C_LEGACY_\n-#  define _STDIO_NEED_C_LEGACY_\n-# endif\n-\n-# include <cstdio>\n-\n-  // Expose global C names, including non-standard ones, but shadow\n-  // some names and types with the std:: C++ version.\n-  using std::FILE;\n-  using std::fpos_t; \n-\n-  using std::remove;\n-  using std::rename;\n-  using std::tmpfile;\n-  using std::tmpnam;\n-  using std::fclose;\n-  using std::fflush;\n-  using std::fopen;\n-  using std::freopen;\n-  using std::setbuf;\n-  using std::setvbuf;\n-  using std::fprintf;\n-  using std::fscanf;\n-  using std::printf;\n-  using std::scanf;\n-  using std::sprintf;\n-  using std::sscanf;\n-  using std::vfprintf;\n-  using std::vprintf;\n-  using std::vsprintf;\n-  using std::fgetc;\n-  using std::fgets;\n-  using std::fputc;\n-  using std::fputs;\n-  using std::getc;\n-  using std::getchar;\n-  using std::gets;\n-  using std::putc;\n-  using std::putchar;\n-  using std::puts;\n-  using std::ungetc;\n-  using std::fread;\n-  using std::fwrite;\n-  using std::fgetpos;\n-  using std::fseek;\n-  using std::fsetpos;\n-  using std::ftell;\n-  using std::rewind;\n-  using std::clearerr;\n-  using std::feof;\n-  using std::ferror;\n-  using std::perror;\n-\n-# ifdef _STDIO_NEED_C_LEGACY_\n-  // dive back into the \"swamp\"\n-  namespace _C_legacy {\n-    extern \"C\" {\n-#  define _IN_C_LEGACY_\n-#  undef _STDIO_NEED_C_LEGACY_\n-# endif /* _STDIO_NEED_C_LEGACY_ */\n-#endif /* _INCLUDED_CPP_STDIO_H_ */"}, {"sha": "9740b57b3fc1a8d256981034ddb34fb160105966", "filename": "libstdc++-v3/include/c_shadow/stdlib.h", "status": "removed", "additions": 0, "deletions": 101, "changes": 101, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8269c9b8874fdac90d0d537a786c69ef0e2bc0a8/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fstdlib.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8269c9b8874fdac90d0d537a786c69ef0e2bc0a8/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fstdlib.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fstdlib.h?ref=8269c9b8874fdac90d0d537a786c69ef0e2bc0a8", "patch": "@@ -1,101 +0,0 @@\n-// -*- C++ -*- header wrapper.\n-\n-// Copyright (C) 1997-1999, 2000 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-\n-#ifndef  _INCLUDED_CPP_STDLIB_H_\n-# define _INCLUDED_CPP_STDLIB_H_ 1\n-\n-# include <bits/c++config.h>\n-\n-# ifdef _IN_C_LEGACY_  /* sub-included by a C header */\n-      // get out of the \"legacy\"\n-    } // close extern \"C\"\n-  }   // close namespace _C_legacy::\n-#  undef _IN_C_LEGACY_\n-#  define _STDLIB_NEED_C_LEGACY_\n-# endif\n-\n-# include <cstdlib>\n-\n-  // Expose global C names, including non-standard ones, but shadow\n-  // some names and types with the std:: C++ version.\n-  using std::div_t;\n-  using std::ldiv_t;\n-#ifdef _GLIBCPP_USE_C99\n-  using std::lldiv_t;\n-#endif\n-\n-//  using std::abort;\n-  using std::abs;\n-  using std::atexit;\n-  using std::atof;\n-  using std::atoi;\n-  using std::atol;\n-  using std::bsearch;\n-  using std::calloc;\n-  using std::div;\n-//  using std::exit;\n-  using std::free;\n-  using std::getenv;\n-  using std::labs;\n-  using std::ldiv;\n-  using std::malloc;\n-  using std::mblen;\n-  using std::mbstowcs;\n-  using std::mbtowc;\n-  using std::qsort;\n-  using std::rand;\n-  using std::realloc;\n-  using std::srand;\n-  using std::strtod;\n-  using std::strtol;\n-  using std::strtoul;\n-  using std::system;\n-  using std::wcstombs;\n-  using std::wctomb;\n-\n-  using std::strtof;\n-\n-#ifdef _GLIBCPP_USE_LONG_LONG\n-  using std::strtoll;\n-  using std::strtoull;\n-#endif\n-\n-#ifdef _GLIBCPP_HAVE_STRTOLD\n-  using std::strtold;\n-#endif\n-\n-# ifdef _STDLIB_NEED_C_LEGACY_\n-  // dive back into the \"swamp\"\n-  namespace _C_legacy {\n-    extern \"C\" {\n-#  define _IN_C_LEGACY_\n-#  undef _STDLIB_NEED_C_LEGACY_\n-# endif /* _STDLIB_NEED_C__LEGACY_ */\n-#endif /* _INCLUDED_CPP_STDLIB_H_ */"}, {"sha": "6f9e6cc6372e8b53172ed1fc12f432e79213abe3", "filename": "libstdc++-v3/include/c_shadow/string.h", "status": "removed", "additions": 0, "deletions": 76, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8269c9b8874fdac90d0d537a786c69ef0e2bc0a8/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fstring.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8269c9b8874fdac90d0d537a786c69ef0e2bc0a8/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fstring.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fstring.h?ref=8269c9b8874fdac90d0d537a786c69ef0e2bc0a8", "patch": "@@ -1,76 +0,0 @@\n-// -*- C++ -*- header wrapper.\n-\n-// Copyright (C) 1997-1999, 2000 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-\n-#ifndef  _INCLUDED_CPP_STRING_H_\n-# define _INCLUDED_CPP_STRING_H_ 1\n-\n-# ifdef _IN_C_LEGACY_  /* sub-included by a C header */\n-      // get out of the \"legacy\"\n-    } // close extern \"C\"\n-  }   // close namespace _C_legacy::\n-#  undef _IN_C_LEGACY_\n-#  define _STRING_NEED_C_LEGACY_\n-# endif\n-\n-# include <cstring>\n-\n-  // Expose global C names, including non-standard ones, but shadow\n-  // some names and types with the std:: C++ version.\n-  using std::memcpy;\n-  using std::memmove;\n-  using std::strcpy;\n-  using std::strncpy;\n-  using std::strcat;\n-  using std::strncat;\n-  using std::memcmp;\n-  using std::strcmp;\n-  using std::strcoll;\n-  using std::strncmp;\n-  using std::strxfrm;\n-  using std::memchr;\n-  using std::strchr;\n-  using std::strcspn;\n-  using std::strpbrk;\n-  using std::strrchr;\n-  using std::strspn;\n-  using std::strstr;\n-  using std::strtok;\n-  using std::memset;\n-  using std::strerror;\n-  using std::strlen;\n-\n-# ifdef _STRING_NEED_C_LEGACY_\n-  // dive back into the \"swamp\"\n-  namespace _C_legacy {\n-    extern \"C\" {\n-#  define _IN_C_LEGACY_\n-#  undef _STRING_NEED_C_LEGACY_\n-# endif /* _STRING_NEED_C_LEGACY_ */\n-#endif /* _INCLUDED_CPP_STRING_H_ */"}, {"sha": "da377faadbcc2a19e19baeaec4a0354968289c2a", "filename": "libstdc++-v3/include/c_shadow/sys/cdefs.h", "status": "removed", "additions": 0, "deletions": 49, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8269c9b8874fdac90d0d537a786c69ef0e2bc0a8/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fsys%2Fcdefs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8269c9b8874fdac90d0d537a786c69ef0e2bc0a8/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fsys%2Fcdefs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fsys%2Fcdefs.h?ref=8269c9b8874fdac90d0d537a786c69ef0e2bc0a8", "patch": "@@ -1,49 +0,0 @@\n-// -*- C++ -*- header wrapper.\n-\n-// Copyright (C) 2000 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-\n-#ifndef _CPP_SYS_CDEFS_H\n-# define _CPP_SYS_CDEFS_H 1\n-\n-# pragma GCC system_header\n-# include_next <sys/cdefs.h>\n-\n-// glibc-2 hackery.  Other systems likely require other hacks.\n-#undef\t__BEGIN_DECLS\n-#define\t__BEGIN_DECLS\n-#undef\t__END_DECLS\n-#define\t__END_DECLS\n-\n-#endif /* _CPP_SYS_CDEFS_H_ */\n-\n-\n-\n-\n-\n-"}, {"sha": "31064aaa135187a98d64b1cbdb8d63d8368c0405", "filename": "libstdc++-v3/include/c_shadow/time.h", "status": "removed", "additions": 0, "deletions": 67, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8269c9b8874fdac90d0d537a786c69ef0e2bc0a8/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Ftime.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8269c9b8874fdac90d0d537a786c69ef0e2bc0a8/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Ftime.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Ftime.h?ref=8269c9b8874fdac90d0d537a786c69ef0e2bc0a8", "patch": "@@ -1,67 +0,0 @@\n-// -*- C++ -*- header wrapper.\n-\n-// Copyright (C) 1997-1999, 2000 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-\n-#ifndef  _INCLUDED_CPP_TIME_H_\n-# define _INCLUDED_CPP_TIME_H_ 1\n-\n-# ifdef _IN_C_LEGACY_  /* sub-included by a C header */\n-      // get out of the \"legacy\"\n-    } // close extern \"C\"\n-  }   // close namespace _C_legacy::\n-#  undef _IN_C_LEGACY_\n-#  define _TIME_NEED_C_LEGACY_\n-# endif\n-\n-# include <ctime>\n- \n-  // Expose global C names, including non-standard ones, but shadow\n-  // some names and types with the std:: C++ version.\n-  using std::clock_t;\n-  using std::time_t;\n-  using std::tm;\n-\n-  using std::clock;\n-  using std::difftime;\n-  using std::mktime;\n-  using std::time;\n-  using std::asctime;\n-  using std::ctime;\n-  using std::gmtime;\n-  using std::localtime;\n-  using std::strftime;\n-\n-# ifdef _TIME_NEED_C_LEGACY_\n-  // dive back into the \"swamp\"\n-  namespace _C_legacy {\n-    extern \"C\" {\n-#  define _IN_C_LEGACY_\n-#  undef _TIME_NEED_C_LEGACY_\n-# endif /* _TIME_NEED_C_LEGACY_ */\n-#endif /* _INCLUDED_CPP_TIME_H_ */"}, {"sha": "e05efe72f57dfd69097c6dc5af5211a1c0430539", "filename": "libstdc++-v3/include/c_shadow/unistd.h", "status": "removed", "additions": 0, "deletions": 101, "changes": 101, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8269c9b8874fdac90d0d537a786c69ef0e2bc0a8/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Funistd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8269c9b8874fdac90d0d537a786c69ef0e2bc0a8/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Funistd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Funistd.h?ref=8269c9b8874fdac90d0d537a786c69ef0e2bc0a8", "patch": "@@ -1,101 +0,0 @@\n-// -*- C++ -*- header wrapper.\n-\n-// Copyright (C) 2000 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-\n-#ifndef  _INCLUDED_CPP_UNISTD_H_\n-# define _INCLUDED_CPP_UNISTD_H_ 1\n-\n-# ifdef _IN_C_LEGACY_  /* sub-included by a C header */\n-      // get out of the \"legacy\"\n-    } // close extern \"C\"\n-  }   // close namespace _C_legacy::\n-#  undef _IN_C_LEGACY_\n-#  define _TIME_NEED_C_LEGACY_\n-# endif\n-\n-# include <bits/wrap_unistd.h>\n- \n-  // Expose global C names, including non-standard ones, but shadow\n-  // some names and types with the std:: C++ version.\n-#ifdef __gid_t_defined\n-  using _C_legacy::gid_t;\n-#endif\n-#ifdef __uid_t_defined\n-  using _C_legacy::uid_t;\n-#endif\n-#ifdef __off_t_defined\n-  using _C_legacy::off_t;\n-#endif\n-#ifdef __off64_t_defined\n-  using _C_legacy::off64_t;\n-#endif\n-#ifdef __useconds_t_defined\n-  using _C_legacy::useconds_t;\n-#endif\n-#ifdef __pid_t_defined\n-  using _C_legacy::pid_t;\n-#endif\n-  using _C_legacy::intptr_t;\n-#ifdef __socklen_t_defined\n-  using _C_legacy::socklen_t;\n-#endif\n-\n-  using _C_legacy::access;\n-  using _C_legacy::euidaccess;\n-  using _C_legacy::lseek;\n-  using _C_legacy::close;\n-  using _C_legacy::read;\n-  using _C_legacy::write;\n-  using _C_legacy::pread;\n-  using _C_legacy::pwrite;\n-  using _C_legacy::pipe;\n-  using _C_legacy::alarm;\n-  using _C_legacy::sleep;\n-  using _C_legacy::ualarm;\n-  using _C_legacy::usleep;\n-  using _C_legacy::pause;\n-  using _C_legacy::chown;\n-  using _C_legacy::fchown;\n-  using _C_legacy::lchown;\n-  using _C_legacy::chdir;\n-  using _C_legacy::fchdir;\n-  using _C_legacy::getcwd;\n-  using _C_legacy::get_current_dir_name;\n-  using _C_legacy::getwd;\n-  using _C_legacy::dup;\n-  using _C_legacy::dup2;\n-\n-# ifdef _TIME_NEED_C_LEGACY_\n-  // dive back into the \"swamp\"\n-  namespace _C_legacy {\n-    extern \"C\" {\n-#  define _IN_C_LEGACY_\n-#  undef _TIME_NEED_C_LEGACY_\n-# endif /* _TIME_NEED_C_LEGACY_ */\n-#endif /* _INCLUDED_CPP_UNISTD_H_ */"}, {"sha": "efabb1519a5b85011ec829ba81b03c9eca80d2d7", "filename": "libstdc++-v3/include/c_shadow/wchar.h", "status": "removed", "additions": 0, "deletions": 131, "changes": 131, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8269c9b8874fdac90d0d537a786c69ef0e2bc0a8/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fwchar.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8269c9b8874fdac90d0d537a786c69ef0e2bc0a8/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fwchar.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fwchar.h?ref=8269c9b8874fdac90d0d537a786c69ef0e2bc0a8", "patch": "@@ -1,131 +0,0 @@\n-// -*- C++ -*- header wrapper.\n-\n-// Copyright (C) 1997-1999, 2000 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-\n-#ifndef  _INCLUDED_CPP_WCHAR_H_\n-# define _INCLUDED_CPP_WCHAR_H_ 1\n-\n-# ifdef _IN_C_LEGACY_  /* sub-included by a C header */\n-      // get out of the \"legacy\"\n-    } // close extern \"C\"\n-  }   // close namespace _C_legacy::\n-#  undef _IN_C_LEGACY_  /* sub-included by a C header */\n-#  define _WCHAR_NEED_C_LEGACY_\n-# endif\n-\n-# include <cwchar>\n-\n-  // Expose global C names, including non-standard ones, but shadow\n-  // some names and types with the std:: C++ version.\n-  using std::wchar_t;\n-  using std::wint_t;\n-  using std::mbstate_t;\n-\n-#if 0\n-  using std::fwprintf;\n-  using std::fwscanf;\n-  using std::swprintf;\n-  using std::swscanf;\n-  using std::vfwprintf;\n-  using std::vfwscanf;\n-  using std::vswprintf;\n-  using std::vswscanf;\n-  using std::vwprintf;\n-  using std::vwscanf;\n-  using std::wprintf;\n-  using std::wscanf;\n-  using std::fgetwc;\n-  using std::fgetws;\n-  using std::fputwc;\n-  using std::fputws;\n-  using std::fwide;\n-  using std::getwc;\n-  using std::getwchar;\n-  using std::putwc;\n-  using std::putwchar;\n-  using std::ungetwc;\n-#endif\n-\n-  using std::wcstod;\n-  using std::wcstof;\n-  using std::wcstold;\n-  using std::wcstol;\n-  using std::wcstoll;\n-  using std::wcstoul;\n-  using std::wcstoull;\n-  using std::wcscpy;\n-  using std::wcsncpy;\n-  using std::wcscat;\n-  using std::wcsncat;\n-\n-#if 0\n-  using std::wcsmp;\n-#endif\n-\n-  using std::wcscoll;\n-  using std::wcsncmp;\n-  using std::wcsxfrm;\n-  using std::wcschr;\n-  using std::wcscspn;\n-  using std::wcslen;\n-  using std::wcspbrk;\n-  using std::wcsrchr;\n-  using std::wcsspn;\n-  using std::wcsstr;\n-  using std::wcstok;\n-  using std::wmemchr;\n-  using std::wmemcmp;\n-  using std::wmemcpy;\n-  using std::wmemmove;\n-  using std::wmemset;\n-\n-#if 0\n-  using std::wcsftime;\n-#endif\n-\n-  using std::btowc;\n-  using std::wctob;\n-  using std::mbsinit;\n-  using std::mbrlen;\n-  using std::mbrtowc;\n-  using std::wcrtomb;\n-  using std::mbsrtowcs;\n-  using std::wcsrtombs;\n-\n-# ifdef _WCHAR_NEED_C_LEGACY_\n-  // dive back into the \"swamp\"\n-  namespace _C_legacy {\n-    extern \"C\" {\n-#  define _IN_C_LEGACY_\n-#  undef _WCHAR_NEED_C_LEGACY_\n-# endif /* _WCHAR_NEED_C_LEGACY_ */\n-#endif /* _INCLUDED_CPP_WCHAR_H_ */\n-\n-\n-"}, {"sha": "cae1aff43e14caecac6184781dc9e73e306a0265", "filename": "libstdc++-v3/include/c_shadow/wctype.h", "status": "removed", "additions": 0, "deletions": 74, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8269c9b8874fdac90d0d537a786c69ef0e2bc0a8/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fwctype.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8269c9b8874fdac90d0d537a786c69ef0e2bc0a8/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fwctype.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_shadow%2Fwctype.h?ref=8269c9b8874fdac90d0d537a786c69ef0e2bc0a8", "patch": "@@ -1,74 +0,0 @@\n-// -*- C++ -*- header wrapper.\n-\n-// Copyright (C) 1997-1999, 2000 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-\n-#ifndef  _INCLUDED_CPP_CWCTYPE_H_\n-# define _INCLUDED_CPP_CWCTYPE_H_ 1\n-\n-# ifdef _IN_C_LEGACY_  /* sub-included by a C header */\n-      // get out of the \"legacy\"\n-    } // close extern \"C\"\n-  }   // close namespace _C_legacy::\n-#  undef _IN_C_LEGACY_\n-#  define _CWCHAR_NEED_C_LEGACY_\n-# endif\n-\n-# include <cwctype>\n-\n-  // Expose global C names, including non-standard ones, but shadow\n-  // some names and types with the std:: C++ version.\n-  using std::wint_t;\n-  using std::wctype_t;\n-  using std::wctrans_t;\n-  using std::iswalpha;\n-  using std::iswupper;\n-  using std::iswlower;\n-  using std::iswdigit;\n-  using std::iswxdigit;\n-  using std::iswalnum;\n-  using std::iswspace;\n-  using std::iswpunct;\n-  using std::iswprint;\n-  using std::iswgraph;\n-  using std::iswcntrl;\n-  using std::iswctype;\n-  using std::towctrans;\n-  using std::towlower;\n-  using std::towupper;\n-  using std::wctrans;\n-  using std::wctype;\n-\n-# ifdef _CWCHAR_NEED_C_LEGACY_\n-  // dive back into the \"swamp\"\n-  namespace _C_legacy {\n-    extern \"C\" {\n-#  define _IN_C_LEGACY_\n-#  undef _CWCHAR_NEED_C_LEGACY_\n-# endif /* _CWCHAR_NEED_C_LEGACY_ */\n-#endif /* _INCLUDED_CPP_CWCTYPE_H_ */"}, {"sha": "4d4bd4f65f295e8d799ffb113a52dd4fcfb79061", "filename": "libstdc++-v3/mkcshadow", "status": "removed", "additions": 0, "deletions": 98, "changes": 98, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8269c9b8874fdac90d0d537a786c69ef0e2bc0a8/libstdc%2B%2B-v3%2Fmkcshadow", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8269c9b8874fdac90d0d537a786c69ef0e2bc0a8/libstdc%2B%2B-v3%2Fmkcshadow", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fmkcshadow?ref=8269c9b8874fdac90d0d537a786c69ef0e2bc0a8", "patch": "@@ -1,98 +0,0 @@\n-#!/usr/bin/env bash\n-\n-# mkcshadow: reads header names (like \"features.h\" or \"sys/types.h\")\n-#   from stdin, and creates shadow headers under cshadow/, except where\n-#   a header of the same name is already in shadow/.\n-\n-SCRIPTDIR=${0%/*}\n-\n-if [ ! -d cshadow ]; then\n-  echo \"Creating cshadow.\"\n-  mkdir ../cshadow\n-fi\n-\n-echo \"Creating...\"\n-while read header; do\n-\n-  if [ ! -f $SCRIPTDIR/shadow/$header ]; then\n-\n-    # strip off directory names while making \n-    #   any necessary directories\n-\n-    dir=../cshadow\n-    case \"$header\" in */*)\n-      right=\"$header\"\n-      while [ \"$right\" != \"${right##*/}\" ] ; do\n-        dir=\"$dir/${right%%/*}\"\n-        if [ ! -d \"$dir\" ]; then mkdir \"$dir\"; fi\n-        right=\"${right#*/}\"\n-      done\n-      ;;\n-    esac\n-\n-    echo \"  ../cshadow/$header\"\n-    UPNAME=`echo $header | tr 'a-z./-' 'A-Z___'`\n-    cat >\"../cshadow/$header\" <<EOF\n-// -*- C++ -*- header wrapper.\n-\n-// Copyright (C) 1997, 1998, 1999, 2000 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-// Note: this file was automatically generated by the \"mkcshadow\"\n-//       script.  RTFM!\n-\n-#ifndef  _INCLUDED_CPP_${UPNAME}_\n-# define _INCLUDED_CPP_${UPNAME}_\n-\n-# ifdef _IN_C_LEGACY_  /* sub-included by a C header */\n-#   pragma GCC system_header\n-#   include_next <${header}>\n-# else\n-\n-    namespace _C_legacy { namespace _C_shadow { } }\n-    using namespace ::_C_legacy::_C_shadow;\n-    namespace _C_legacy {\n-      extern \"C\" {\n-#       define _IN_C_LEGACY_\n-#       pragma GCC system_header\n-#       include_next <${header}>\n-      } // close extern \"C\"\n-    }   // close namespace _C_legacy::\n-# undef _IN_C_LEGACY_\n-  \n-# endif /* _IN_C_LEGACY_ */\n-#endif /* _INCLUDED_CPP_${UPNAME}_ */\n-EOF\n-#################### end ####################\n-  fi\n-done\n-\n-\n-\n-\n-\n-"}, {"sha": "7996b4b5e18801101b1e9a2d9c4a1ea1b770b6ef", "filename": "libstdc++-v3/mkinclosure", "status": "removed", "additions": 0, "deletions": 102, "changes": 102, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8269c9b8874fdac90d0d537a786c69ef0e2bc0a8/libstdc%2B%2B-v3%2Fmkinclosure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8269c9b8874fdac90d0d537a786c69ef0e2bc0a8/libstdc%2B%2B-v3%2Fmkinclosure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fmkinclosure?ref=8269c9b8874fdac90d0d537a786c69ef0e2bc0a8", "patch": "@@ -1,102 +0,0 @@\n-#!/usr/bin/env bash\n-#\n-# usage: inclosure [ -I dir ] ... [ -G header-name ] ... header-name ...\n-#\n-# Locates each standard header and argument header-name in the\n-# specified \"-I\" include path (default is /usr/include) and parses \n-# any header names out of its #include directives.  These names are \n-# treated recursively to identify a _transitive_closure_ of standard\n-# header names, which is sorted and sent to standard output.  Headers \n-# not specified with -G, and included somewhere but not located are \n-# reported.\n-#\n-# Each header reported by this program must be \"shadowed\" by a \n-# file of the same name in a C++ header.  See \n-#   http://www.cantrip.org/cheaders.html\n-#\n-# BUGS: \n-#  - Cannot cope with header file names that contain spaces\n-#  - Ignores comment-block delimiters\n-#  - Ignores sub-includes under #include_next headers.\n-\n-OLDH=/tmp/old$$\n-echo \"this-compensates-for-a-stupid-bug-in-GNU-fgrep.\" >$OLDH\n-HDRS=/tmp/hdrs$$\n->$HDRS\n-NEW=/tmp/new$$\n->$NEW\n-IGNORES=/tmp/ignores$$\n-echo \"this-compensates-for-a-stupid-bug-in-GNU-fgrep.\">$IGNORES\n-\n-trap \"rm -f $NEW $HDRS $OLDH $IGNORES\" 0\n-\n-# process arguments\n-unset INCPATH\n-while [ $# != 0 -a \"$1\" != \"${1#-}\" ]; do\n-  FLAG=\"${1%%${1##-?}}\"\n-  case \"$FLAG\" in -I|-G)\n-    ARG=\"${1##${FLAG}}\"\n-    if [ \"$ARG\" = \"\" ]; then\n-      if [ $# != 0 ]; then \n-        shift;\n-        ARG=\"$1\"\n-      else\n-        echo \"$0: $FLAG needs an argument.\"\n-\texit\n-      fi\n-    fi ;;\n-  esac\n-  shift\n-  case \"$FLAG\" in \n-    -I) INCPATH=\"$INCPATH $ARG\" ;;\n-    -G) echo \" $ARG \" >>$IGNORES ;;\n-  esac\n-done\n-INCPATH=${INCPATH-\"/usr/include\"}  \n-\n-# identify headers\n-\n-STDHDRS=\"assert.h ctype.h errno.h float.h limits.h \\\n- locale.h math.h setjmp.h signal.h stdarg.h stddef.h \\\n- stdio.h stdlib.h string.h time.h wchar.h wctype.h \"\n-OTHERS=\"$*\"\n-\n-for file in $STDHDRS $OTHERS; do\n-  echo \"$file\" \n-done >$HDRS\n-\n-until cmp -s $OLDH $HDRS; do #  (until no new headers found)\n-\n-  fgrep -v -f $OLDH $HDRS \\\n-  | while read file; do\n-    found=no\n-    for dir in $INCPATH; do \n-      name=\"$dir/$file\"\n-      if [ -f \"$name\" ]; then \n-        cat \"$name\"\n-\tfound=yes\n-        break;\n-      fi\n-    done\n-    if [ \"$found\" = no ]; then # && echo \" $file \" | fgrep -v -q -f $IGNORES \n-      echo \"$0: warning: header $file not found in include path.\" $1>&2\n-    fi\n-  done \\\n-  | sed -n -e \\\n-'/^[ \t]*#[ \t]*include[ \t]*<[^>]*>/s/^[^<]*<\\([^>]*\\)>.*/\\1/p' \\\n-  | while read file; do\n-     drop=no\n-     for ignore in `cat $IGNORES`; do\n-       if [ \"$ignore\" = \"$file\" ]; then drop=yes; fi\n-     done\n-     case \"$file\" in /*) drop=yes;; esac   # no absolute paths\n-     case $drop in no) echo \"$file\";; esac\n-  done >$NEW\n-  mv $HDRS $OLDH\n-  cat $OLDH $NEW | sort -u -o $HDRS\n-\n-done\n-cat $HDRS\n-\n-\n-"}]}