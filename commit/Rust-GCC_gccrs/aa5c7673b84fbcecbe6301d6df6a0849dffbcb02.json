{"sha": "aa5c7673b84fbcecbe6301d6df6a0849dffbcb02", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWE1Yzc2NzNiODRmYmNlY2JlNjMwMWQ2ZGY2YTA4NDlkZmZiY2IwMg==", "commit": {"author": {"name": "Hans-Peter Nilsson", "email": "hp@axis.com", "date": "2005-11-02T02:41:44Z"}, "committer": {"name": "Hans-Peter Nilsson", "email": "hp@gcc.gnu.org", "date": "2005-11-02T02:41:44Z"}, "message": "target-supports.exp (check_effective_default_packed): New proc.\n\n\t* lib/target-supports.exp (check_effective_default_packed): New proc.\n\t* g++.dg/ext/packed3.C, g++.dg/ext/packed8.C, g++.dg/other/crash-4.C:\n\tGate expected errors on target ! default_packed.\n\t* g++.dg/ext/packed4.C: Gate on target ! default_packed.\n\nFrom-SVN: r106374", "tree": {"sha": "73b65719360715f40a1a898b2c0e144a14c9fba9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/73b65719360715f40a1a898b2c0e144a14c9fba9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aa5c7673b84fbcecbe6301d6df6a0849dffbcb02", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa5c7673b84fbcecbe6301d6df6a0849dffbcb02", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa5c7673b84fbcecbe6301d6df6a0849dffbcb02", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa5c7673b84fbcecbe6301d6df6a0849dffbcb02/comments", "author": {"login": "hpataxisdotcom", "id": 80339731, "node_id": "MDQ6VXNlcjgwMzM5NzMx", "avatar_url": "https://avatars.githubusercontent.com/u/80339731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hpataxisdotcom", "html_url": "https://github.com/hpataxisdotcom", "followers_url": "https://api.github.com/users/hpataxisdotcom/followers", "following_url": "https://api.github.com/users/hpataxisdotcom/following{/other_user}", "gists_url": "https://api.github.com/users/hpataxisdotcom/gists{/gist_id}", "starred_url": "https://api.github.com/users/hpataxisdotcom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hpataxisdotcom/subscriptions", "organizations_url": "https://api.github.com/users/hpataxisdotcom/orgs", "repos_url": "https://api.github.com/users/hpataxisdotcom/repos", "events_url": "https://api.github.com/users/hpataxisdotcom/events{/privacy}", "received_events_url": "https://api.github.com/users/hpataxisdotcom/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "745f2a84b9af863b30fa4eeaad778e0672feb4ab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/745f2a84b9af863b30fa4eeaad778e0672feb4ab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/745f2a84b9af863b30fa4eeaad778e0672feb4ab"}], "stats": {"total": 59, "additions": 53, "deletions": 6}, "files": [{"sha": "079e1e64ed1f86d9a8fbdf881768a93fbecbefea", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa5c7673b84fbcecbe6301d6df6a0849dffbcb02/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa5c7673b84fbcecbe6301d6df6a0849dffbcb02/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=aa5c7673b84fbcecbe6301d6df6a0849dffbcb02", "patch": "@@ -1,3 +1,10 @@\n+2005-11-02  Hans-Peter Nilsson  <hp@axis.com>\n+\n+\t* lib/target-supports.exp (check_effective_default_packed): New proc.\n+\t* g++.dg/ext/packed3.C, g++.dg/ext/packed8.C, g++.dg/other/crash-4.C:\n+\tGate expected errors on target ! default_packed.\n+\t* g++.dg/ext/packed4.C: Gate on target ! default_packed.\n+\n 2005-11-02  Tobias Schl\"uter  <tobias.schlueter@physik.uni-muenchen.de>\n \n \t* gfortran.fortran-torture/execute/entry_9.f90: Revert previous"}, {"sha": "3494ff4c31eeffac30baef82e7329b43386b3b2e", "filename": "gcc/testsuite/g++.dg/ext/packed3.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa5c7673b84fbcecbe6301d6df6a0849dffbcb02/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fpacked3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa5c7673b84fbcecbe6301d6df6a0849dffbcb02/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fpacked3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fpacked3.C?ref=aa5c7673b84fbcecbe6301d6df6a0849dffbcb02", "patch": "@@ -19,7 +19,7 @@ struct  __attribute__ ((packed)) Packed\n \n void Foo (Packed &p)\n {\n-  Ref (p.i); // { dg-error \"cannot bind packed field\" \"\" }\n+  Ref (p.i); // { dg-error \"cannot bind packed field\" \"\" { target { ! default_packed } } }\n   Ref (p.u.i);\n-  Ref (p.u); // { dg-error \"cannot bind packed field\" \"\" }\n+  Ref (p.u); // { dg-error \"cannot bind packed field\" \"\" { target { ! default_packed } } }\n }"}, {"sha": "e5e5e2c08da3ceca01f6e28b5e690c3e0b939e66", "filename": "gcc/testsuite/g++.dg/ext/packed4.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa5c7673b84fbcecbe6301d6df6a0849dffbcb02/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fpacked4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa5c7673b84fbcecbe6301d6df6a0849dffbcb02/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fpacked4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fpacked4.C?ref=aa5c7673b84fbcecbe6301d6df6a0849dffbcb02", "patch": "@@ -1,4 +1,4 @@\n-// { dg-do run }\n+// { dg-do run { target { ! default_packed } } }\n // { dg-options \"-w\" }\n \n // Copyright (C) 2003 Free Software Foundation, Inc."}, {"sha": "13fc134bd97e7f591bdafdcbe71a3d589fb70856", "filename": "gcc/testsuite/g++.dg/ext/packed8.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa5c7673b84fbcecbe6301d6df6a0849dffbcb02/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fpacked8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa5c7673b84fbcecbe6301d6df6a0849dffbcb02/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fpacked8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fpacked8.C?ref=aa5c7673b84fbcecbe6301d6df6a0849dffbcb02", "patch": "@@ -19,6 +19,6 @@ class B\n \n public:\n   B() {}\n-  A GetA() { return a; } // { dg-error \"\" }\n+  A GetA() { return a; } // { dg-error \"\" \"\" { target { ! default_packed } } }\n };\n "}, {"sha": "ea5a14fa7aed90e06d3d27686fb1087b002fd818", "filename": "gcc/testsuite/g++.dg/other/crash-4.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa5c7673b84fbcecbe6301d6df6a0849dffbcb02/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fcrash-4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa5c7673b84fbcecbe6301d6df6a0849dffbcb02/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fcrash-4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fcrash-4.C?ref=aa5c7673b84fbcecbe6301d6df6a0849dffbcb02", "patch": "@@ -15,12 +15,12 @@ struct a\n   a(const a&);\n };\n struct b\n-{ // { dg-error \"cannot bind packed field\" }\n+{ // { dg-error \"cannot bind packed field\" \"\" { target { ! default_packed } } }\n   char c;\n   a aa __attribute__((packed));\n };\n struct c\n {\n   b bb;\n-  c(const b& __a): bb(__a) {} // { dg-error \"synthesized\" }\n+  c(const b& __a): bb(__a) {} // { dg-error \"synthesized\" \"\" { target { ! default_packed } } }\n };"}, {"sha": "eac665838f6d8780d9c8598fd97af473f8e42fcc", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa5c7673b84fbcecbe6301d6df6a0849dffbcb02/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa5c7673b84fbcecbe6301d6df6a0849dffbcb02/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=aa5c7673b84fbcecbe6301d6df6a0849dffbcb02", "patch": "@@ -304,6 +304,46 @@ proc check_profiling_available { test_what } {\n     return $profiling_available_saved\n }\n \n+# Return 1 if target has packed layout of structure members by\n+# default, 0 otherwise.  Note that this is slightly different than\n+# whether the target has \"natural alignment\": both attributes may be\n+# false.\n+\n+proc check_effective_target_default_packed { } {\n+    global et_default_packed_saved\n+    global et_default_packed_target_name\n+\n+    if { ![info exists et_default_packed_target_name] } {\n+\tset et_default_packed_target_name \"\"\n+    }\n+\n+    # If the target has changed since we set the cached value, clear it.\n+    set current_target [current_target_name]\n+    if { $current_target != $et_default_packed_target_name } {\n+\tverbose \"check_effective_target_default_packed: `$et_default_packed_target_name'\" 2\n+\tset et_default_packed_target_name $current_target\n+\tif [info exists et_default_packed_saved] {\n+\t    verbose \"check_effective_target_default_packed: removing cached result\" 2\n+\t    unset et_default_packed_saved\n+\t}\n+    }\n+\n+    if [info exists et_default_packed_saved] {\n+\tverbose \"check_effective_target_default_packed: using cached result\" 2\n+    } else {\n+\tverbose \"check_effective_target_default_packed: compiling source\" 2\n+\n+\tset et_default_packed_saved \\\n+\t    [string match \"\" [get_compiler_messages default_packed assembly {\n+\t    struct x { char a; long b; } c;\n+\t    int s[sizeof (c) == sizeof (char) + sizeof (long) ? 1 : -1];\n+\t} ]]\n+\n+    }\n+    verbose \"check_effective_target_default_packed: returning $et_default_packed_saved\" 2\n+    return $et_default_packed_saved\n+}\n+\n # Return 1 if -fpic and -fPIC are supported, as in no warnings or errors\n # emitted, 0 otherwise.  Whether a shared library can actually be built is\n # out of scope for this test."}]}