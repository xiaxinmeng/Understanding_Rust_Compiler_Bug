{"sha": "b64bea1830d8fa651843f4e5e5c04263746b06af", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjY0YmVhMTgzMGQ4ZmE2NTE4NDNmNGU1ZTVjMDQyNjM3NDZiMDZhZg==", "commit": {"author": {"name": "Justin Squirek", "email": "squirek@adacore.com", "date": "2020-04-30T12:55:33Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-06-19T08:17:19Z"}, "message": "[Ada] Style checks on invalid UTF character cause crash\n\n2020-06-19  Justin Squirek  <squirek@adacore.com>\n\ngcc/ada/\n\n\t* widechar.adb, widechar.ads (Skip_Wide): Catch validity check\n\tfailure when skipping over characters, and update comment to\n\treflect Skip_Wide's usage in error printing.", "tree": {"sha": "f235ccaa5acb3e8bb5fd844ec52b250ebdac0160", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f235ccaa5acb3e8bb5fd844ec52b250ebdac0160"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b64bea1830d8fa651843f4e5e5c04263746b06af", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b64bea1830d8fa651843f4e5e5c04263746b06af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b64bea1830d8fa651843f4e5e5c04263746b06af", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b64bea1830d8fa651843f4e5e5c04263746b06af/comments", "author": {"login": "AdaDoom3", "id": 3445599, "node_id": "MDQ6VXNlcjM0NDU1OTk=", "avatar_url": "https://avatars.githubusercontent.com/u/3445599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AdaDoom3", "html_url": "https://github.com/AdaDoom3", "followers_url": "https://api.github.com/users/AdaDoom3/followers", "following_url": "https://api.github.com/users/AdaDoom3/following{/other_user}", "gists_url": "https://api.github.com/users/AdaDoom3/gists{/gist_id}", "starred_url": "https://api.github.com/users/AdaDoom3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AdaDoom3/subscriptions", "organizations_url": "https://api.github.com/users/AdaDoom3/orgs", "repos_url": "https://api.github.com/users/AdaDoom3/repos", "events_url": "https://api.github.com/users/AdaDoom3/events{/privacy}", "received_events_url": "https://api.github.com/users/AdaDoom3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7841c99268adfaba9c30be23ce7569c85cae52dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7841c99268adfaba9c30be23ce7569c85cae52dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7841c99268adfaba9c30be23ce7569c85cae52dc"}], "stats": {"total": 26, "additions": 21, "deletions": 5}, "files": [{"sha": "3d3ebaf6e12520c6cc2521070a34f76bb6e527cf", "filename": "gcc/ada/widechar.adb", "status": "modified", "additions": 20, "deletions": 2, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64bea1830d8fa651843f4e5e5c04263746b06af/gcc%2Fada%2Fwidechar.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64bea1830d8fa651843f4e5e5c04263746b06af/gcc%2Fada%2Fwidechar.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fwidechar.adb?ref=b64bea1830d8fa651843f4e5e5c04263746b06af", "patch": "@@ -203,7 +203,16 @@ package body Widechar is\n    --  Start of processing for Skip_Wide\n \n    begin\n-      Discard := WC_Skip (Skip_Char, Wide_Character_Encoding_Method);\n+      --  Capture invalid wide characters errors since we are going to discard\n+      --  the result anyway. We just want to move past it.\n+\n+      begin\n+         Discard := WC_Skip (Skip_Char, Wide_Character_Encoding_Method);\n+      exception\n+         when Constraint_Error =>\n+            null;\n+      end;\n+\n       Wide_Char_Byte_Count := Wide_Char_Byte_Count + Nat (P - P_Init - 1);\n    end Skip_Wide;\n \n@@ -235,7 +244,16 @@ package body Widechar is\n    --  Start of processing for Skip_Wide\n \n    begin\n-      Discard := WC_Skip (Skip_Char, Wide_Character_Encoding_Method);\n+      --  Capture invalid wide characters errors since we are going to discard\n+      --  the result anyway. We just want to move past it.\n+\n+      begin\n+         Discard := WC_Skip (Skip_Char, Wide_Character_Encoding_Method);\n+      exception\n+         when Constraint_Error =>\n+            null;\n+      end;\n+\n       Wide_Char_Byte_Count := Wide_Char_Byte_Count + Nat (P - P_Init - 1);\n    end Skip_Wide;\n "}, {"sha": "f81a19b25df13db13b7fdeabb2a403d4a2b029d8", "filename": "gcc/ada/widechar.ads", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64bea1830d8fa651843f4e5e5c04263746b06af/gcc%2Fada%2Fwidechar.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64bea1830d8fa651843f4e5e5c04263746b06af/gcc%2Fada%2Fwidechar.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fwidechar.ads?ref=b64bea1830d8fa651843f4e5e5c04263746b06af", "patch": "@@ -81,9 +81,7 @@ package Widechar is\n    --  On entry, S (P) points to an ESC character for a wide character escape\n    --  sequence or to an upper half character if the encoding method uses the\n    --  upper bit, or to a left bracket if the brackets encoding method is in\n-   --  use. On exit, P is bumped past the wide character sequence. No error\n-   --  checking is done, since this is only used on escape sequences generated\n-   --  by Set_Wide, which are known to be correct.\n+   --  use. On exit, P is bumped past the wide character sequence.\n \n    procedure Skip_Wide (S : Source_Buffer_Ptr; P : in out Source_Ptr);\n    --  Similar to the above procedure, but operates on a source buffer"}]}