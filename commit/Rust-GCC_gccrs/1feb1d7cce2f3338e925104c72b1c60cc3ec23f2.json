{"sha": "1feb1d7cce2f3338e925104c72b1c60cc3ec23f2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWZlYjFkN2NjZTJmMzMzOGU5MjUxMDRjNzJiMWM2MGNjM2VjMjNmMg==", "commit": {"author": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2009-10-15T17:28:04Z"}, "committer": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2009-10-15T17:28:04Z"}, "message": "intrinsic.texi: Explicitly state that ETIME and DTIME take REAL(4) arguments.\n\n2009-10-15  Steven G. Kargl  <kargl@gcc.gnu.org>\n\n\t* intrinsic.texi: Explicitly state that ETIME and DTIME take\n\tREAL(4) arguments.  Fix nearby typographically errors where \n\t/leq was used instead of \\leq.\n\nFrom-SVN: r152854", "tree": {"sha": "8c39d03f773028d6e6d06f3a0d7f09ff37d5e245", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8c39d03f773028d6e6d06f3a0d7f09ff37d5e245"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1feb1d7cce2f3338e925104c72b1c60cc3ec23f2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1feb1d7cce2f3338e925104c72b1c60cc3ec23f2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1feb1d7cce2f3338e925104c72b1c60cc3ec23f2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1feb1d7cce2f3338e925104c72b1c60cc3ec23f2/comments", "author": null, "committer": null, "parents": [{"sha": "7613143b727ca4ca314b95c4743f2f48e5c6c0a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7613143b727ca4ca314b95c4743f2f48e5c6c0a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7613143b727ca4ca314b95c4743f2f48e5c6c0a9"}], "stats": {"total": 20, "additions": 13, "deletions": 7}, "files": [{"sha": "86c7e665158edc08e569d440daf9456e786c2bb1", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1feb1d7cce2f3338e925104c72b1c60cc3ec23f2/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1feb1d7cce2f3338e925104c72b1c60cc3ec23f2/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=1feb1d7cce2f3338e925104c72b1c60cc3ec23f2", "patch": "@@ -1,3 +1,9 @@\n+2009-10-15  Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\t* intrinsic.texi: Explicitly state that ETIME and DTIME take\n+\tREAL(4) arguments.  Fix nearby typographically errors where \n+\t/leq was used instead of \\leq.\n+\n 2009-10-13  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/41581"}, {"sha": "3aa16b0f86074c65892e944a971fcb3436992def", "filename": "gcc/fortran/intrinsic.texi", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1feb1d7cce2f3338e925104c72b1c60cc3ec23f2/gcc%2Ffortran%2Fintrinsic.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1feb1d7cce2f3338e925104c72b1c60cc3ec23f2/gcc%2Ffortran%2Fintrinsic.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fintrinsic.texi?ref=1feb1d7cce2f3338e925104c72b1c60cc3ec23f2", "patch": "@@ -2744,7 +2744,7 @@ Inverse function: @ref{ACOSH}\n @code{COUNT(MASK [, DIM [, KIND]])} counts the number of @code{.TRUE.}\n elements of @var{MASK} along the dimension of @var{DIM}.  If @var{DIM} is\n omitted it is taken to be @code{1}.  @var{DIM} is a scalar of type\n-@code{INTEGER} in the range of @math{1 /leq DIM /leq n)} where @math{n}\n+@code{INTEGER} in the range of @math{1 \\leq DIM \\leq n)} where @math{n}\n is the rank of @var{MASK}.\n \n @item @emph{Standard}:\n@@ -2864,7 +2864,7 @@ end program test_cpu_time\n @code{CSHIFT(ARRAY, SHIFT [, DIM])} performs a circular shift on elements of\n @var{ARRAY} along the dimension of @var{DIM}.  If @var{DIM} is omitted it is\n taken to be @code{1}.  @var{DIM} is a scalar of type @code{INTEGER} in the\n-range of @math{1 /leq DIM /leq n)} where @math{n} is the rank of @var{ARRAY}.\n+range of @math{1 \\leq DIM \\leq n)} where @math{n} is the rank of @var{ARRAY}.\n If the rank of @var{ARRAY} is one, then all elements of @var{ARRAY} are shifted\n by @var{SHIFT} places.  If rank is greater than one, then all complete rank one\n sections of @var{ARRAY} along the given dimension are shifted.  Elements\n@@ -3458,8 +3458,8 @@ Subroutine, function\n \n @item @emph{Arguments}:\n @multitable @columnfractions .15 .70\n-@item @var{VALUES}@tab The type shall be @code{REAL, DIMENSION(2)}.\n-@item @var{TIME}@tab The type shall be @code{REAL}.\n+@item @var{VALUES}@tab The type shall be @code{REAL(4), DIMENSION(2)}.\n+@item @var{TIME}@tab The type shall be @code{REAL(4)}.\n @end multitable\n \n @item @emph{Return value}:\n@@ -3503,7 +3503,7 @@ end program test_dtime\n @code{EOSHIFT(ARRAY, SHIFT[, BOUNDARY, DIM])} performs an end-off shift on\n elements of @var{ARRAY} along the dimension of @var{DIM}.  If @var{DIM} is\n omitted it is taken to be @code{1}.  @var{DIM} is a scalar of type\n-@code{INTEGER} in the range of @math{1 /leq DIM /leq n)} where @math{n} is the\n+@code{INTEGER} in the range of @math{1 \\leq DIM \\leq n)} where @math{n} is the\n rank of @var{ARRAY}.  If the rank of @var{ARRAY} is one, then all elements of\n @var{ARRAY} are shifted by @var{SHIFT} places.  If rank is greater than one,\n then all complete rank one sections of @var{ARRAY} along the given dimension are\n@@ -3767,8 +3767,8 @@ Subroutine, function\n \n @item @emph{Arguments}:\n @multitable @columnfractions .15 .70\n-@item @var{VALUES}@tab The type shall be @code{REAL, DIMENSION(2)}.\n-@item @var{TIME}@tab The type shall be @code{REAL}.\n+@item @var{VALUES}@tab The type shall be @code{REAL(4), DIMENSION(2)}.\n+@item @var{TIME}@tab The type shall be @code{REAL(4)}.\n @end multitable\n \n @item @emph{Return value}:"}]}