{"sha": "40e0364c5564fa3d9cab209ecafe22778bf4c25b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDBlMDM2NGM1NTY0ZmEzZDljYWIyMDllY2FmZTIyNzc4YmY0YzI1Yg==", "commit": {"author": {"name": "Marc Glisse", "email": "marc.glisse@inria.fr", "date": "2013-07-09T15:58:36Z"}, "committer": {"name": "Marc Glisse", "email": "glisse@gcc.gnu.org", "date": "2013-07-09T15:58:36Z"}, "message": "re PR c++/53094 (constexpr vector subscripting)\n\n2013-07-09  Marc Glisse  <marc.glisse@inria.fr>\n\n\tPR c++/53094\ngcc/cp/\n\t* semantics.c (cxx_eval_bit_field_ref): Handle VECTOR_CST.\n\ngcc/testsuite/\n\t* g++.dg/cpp0x/constexpr-53094-1.C: Adjust.\n\t* g++.dg/ext/vector24.C: New testcase.\n\nFrom-SVN: r200822", "tree": {"sha": "d0bf436c2707177e140232e5c4da0edc28b237c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d0bf436c2707177e140232e5c4da0edc28b237c3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/40e0364c5564fa3d9cab209ecafe22778bf4c25b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40e0364c5564fa3d9cab209ecafe22778bf4c25b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40e0364c5564fa3d9cab209ecafe22778bf4c25b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40e0364c5564fa3d9cab209ecafe22778bf4c25b/comments", "author": {"login": "mglisse", "id": 10097863, "node_id": "MDQ6VXNlcjEwMDk3ODYz", "avatar_url": "https://avatars.githubusercontent.com/u/10097863?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mglisse", "html_url": "https://github.com/mglisse", "followers_url": "https://api.github.com/users/mglisse/followers", "following_url": "https://api.github.com/users/mglisse/following{/other_user}", "gists_url": "https://api.github.com/users/mglisse/gists{/gist_id}", "starred_url": "https://api.github.com/users/mglisse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mglisse/subscriptions", "organizations_url": "https://api.github.com/users/mglisse/orgs", "repos_url": "https://api.github.com/users/mglisse/repos", "events_url": "https://api.github.com/users/mglisse/events{/privacy}", "received_events_url": "https://api.github.com/users/mglisse/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "76c7bf65e867b9acd70e13da15d07b51855f0cd4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76c7bf65e867b9acd70e13da15d07b51855f0cd4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/76c7bf65e867b9acd70e13da15d07b51855f0cd4"}], "stats": {"total": 29, "additions": 27, "deletions": 2}, "files": [{"sha": "9262813ef2eb6516309280c54b93e4f7f5f8fb55", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e0364c5564fa3d9cab209ecafe22778bf4c25b/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e0364c5564fa3d9cab209ecafe22778bf4c25b/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=40e0364c5564fa3d9cab209ecafe22778bf4c25b", "patch": "@@ -1,3 +1,8 @@\n+2013-07-09  Marc Glisse  <marc.glisse@inria.fr>\n+\n+\tPR c++/53094\n+\t* semantics.c (cxx_eval_bit_field_ref): Handle VECTOR_CST.\n+\n 2013-07-09  Marc Glisse  <marc.glisse@inria.fr>\n \n \tPR c++/53000"}, {"sha": "c9a292e824944151462741da07a55e0c2ee19b15", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e0364c5564fa3d9cab209ecafe22778bf4c25b/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e0364c5564fa3d9cab209ecafe22778bf4c25b/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=40e0364c5564fa3d9cab209ecafe22778bf4c25b", "patch": "@@ -7197,7 +7197,9 @@ cxx_eval_bit_field_ref (const constexpr_call *call, tree t,\n     return t;\n   /* Don't VERIFY_CONSTANT here; we only want to check that we got a\n      CONSTRUCTOR.  */\n-  if (!*non_constant_p && TREE_CODE (whole) != CONSTRUCTOR)\n+  if (!*non_constant_p\n+      && TREE_CODE (whole) != VECTOR_CST\n+      && TREE_CODE (whole) != CONSTRUCTOR)\n     {\n       if (!allow_non_constant)\n \terror (\"%qE is not a constant expression\", orig_whole);\n@@ -7206,6 +7208,10 @@ cxx_eval_bit_field_ref (const constexpr_call *call, tree t,\n   if (*non_constant_p)\n     return t;\n \n+  if (TREE_CODE (whole) == VECTOR_CST)\n+    return fold_ternary (BIT_FIELD_REF, TREE_TYPE (t), whole,\n+\t\t\t TREE_OPERAND (t, 1), TREE_OPERAND (t, 2));\n+\n   start = TREE_OPERAND (t, 2);\n   istart = tree_low_cst (start, 0);\n   isize = tree_low_cst (TREE_OPERAND (t, 1), 0);"}, {"sha": "a9b8829d24c97b445bf30ddb258d486192bbbbfc", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e0364c5564fa3d9cab209ecafe22778bf4c25b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e0364c5564fa3d9cab209ecafe22778bf4c25b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=40e0364c5564fa3d9cab209ecafe22778bf4c25b", "patch": "@@ -1,3 +1,9 @@\n+2013-07-09  Marc Glisse  <marc.glisse@inria.fr>\n+\n+\tPR c++/53094\n+\t* g++.dg/cpp0x/constexpr-53094-1.C: Adjust.\n+\t* g++.dg/ext/vector24.C: New testcase.\n+\n 2013-07-09  Marc Glisse  <marc.glisse@inria.fr>\n \n \tPR c++/53000"}, {"sha": "e49023d869e110b9284c675014b37fb82a247367", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-53094-1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e0364c5564fa3d9cab209ecafe22778bf4c25b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-53094-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e0364c5564fa3d9cab209ecafe22778bf4c25b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-53094-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-53094-1.C?ref=40e0364c5564fa3d9cab209ecafe22778bf4c25b", "patch": "@@ -3,4 +3,4 @@\n \n typedef float __attribute__ ((vector_size (4 * sizeof (float)))) V4;\n constexpr V4 v = { 1, 1, 1, 0 };\n-constexpr V4 r = v[0] + v; // { dg-bogus \"not a constant expression\" \"\" { xfail *-*-* } }\n+constexpr V4 r = v[0] + v;"}, {"sha": "3eca7fb0bf9c2f20dd592bdc518fc4fe56e86792", "filename": "gcc/testsuite/g++.dg/ext/vector24.C", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40e0364c5564fa3d9cab209ecafe22778bf4c25b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fvector24.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40e0364c5564fa3d9cab209ecafe22778bf4c25b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fvector24.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fvector24.C?ref=40e0364c5564fa3d9cab209ecafe22778bf4c25b", "patch": "@@ -0,0 +1,8 @@\n+// { dg-do compile { target c++11 } }\n+\n+typedef long vec __attribute__((vector_size(2*sizeof(long))));\n+constexpr vec v = { 33, 42 };\n+constexpr auto l0 = v[0];\n+constexpr auto l1 = v[1];\n+static_assert(l0==33,\"Fail\");\n+static_assert(l1==42,\"Fail\");"}]}