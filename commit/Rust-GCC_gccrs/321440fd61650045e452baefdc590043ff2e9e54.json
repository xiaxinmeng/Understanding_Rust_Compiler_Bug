{"sha": "321440fd61650045e452baefdc590043ff2e9e54", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzIxNDQwZmQ2MTY1MDA0NWU0NTJiYWVmZGM1OTAwNDNmZjJlOWU1NA==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2004-02-17T23:03:37Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2004-02-17T23:03:37Z"}, "message": "c-common.c, [...]: Fix comment typos.\n\n\t* c-common.c, cfghooks.c, rtlanal.c, varasm.c: Fix comment\n\ttypos.\n\nFrom-SVN: r77995", "tree": {"sha": "a4758a15eeed1fab191e5593744da2ffa297e65f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a4758a15eeed1fab191e5593744da2ffa297e65f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/321440fd61650045e452baefdc590043ff2e9e54", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/321440fd61650045e452baefdc590043ff2e9e54", "html_url": "https://github.com/Rust-GCC/gccrs/commit/321440fd61650045e452baefdc590043ff2e9e54", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/321440fd61650045e452baefdc590043ff2e9e54/comments", "author": null, "committer": null, "parents": [{"sha": "7b50a809ec4c5aa804d3841e1f573bb72bc0c263", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b50a809ec4c5aa804d3841e1f573bb72bc0c263", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b50a809ec4c5aa804d3841e1f573bb72bc0c263"}], "stats": {"total": 13, "additions": 9, "deletions": 4}, "files": [{"sha": "3dd2ff8a1be40711700cbdac659c325e17373aa2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/321440fd61650045e452baefdc590043ff2e9e54/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/321440fd61650045e452baefdc590043ff2e9e54/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=321440fd61650045e452baefdc590043ff2e9e54", "patch": "@@ -1,3 +1,8 @@\n+2004-02-17  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* c-common.c, cfghooks.c, rtlanal.c, varasm.c: Fix comment\n+\ttypos.\n+\n 2004-02-17  Jan Hubicka  <jh@suse.cz>\n \n \t* i386.c (x86_prologue_using_move, x86_epilogue_using_move): Disable for P4."}, {"sha": "2ebb915f1ec377e247319d3a99db768833b10e00", "filename": "gcc/c-common.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/321440fd61650045e452baefdc590043ff2e9e54/gcc%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/321440fd61650045e452baefdc590043ff2e9e54/gcc%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.c?ref=321440fd61650045e452baefdc590043ff2e9e54", "patch": "@@ -5697,7 +5697,7 @@ c_estimate_num_insns_1 (tree *tp, int *walk_subtrees, void *data)\n \t*count += 10;\n \tbreak;\n       }\n-    /* Few special cases of expensive operations.  This is usefull\n+    /* Few special cases of expensive operations.  This is useful\n        to avoid inlining on functions having too many of these.  */\n     case TRUNC_DIV_EXPR:\n     case CEIL_DIV_EXPR:"}, {"sha": "183d54e387594329c349519d23840e154d2d19db", "filename": "gcc/cfghooks.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/321440fd61650045e452baefdc590043ff2e9e54/gcc%2Fcfghooks.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/321440fd61650045e452baefdc590043ff2e9e54/gcc%2Fcfghooks.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfghooks.c?ref=321440fd61650045e452baefdc590043ff2e9e54", "patch": "@@ -320,7 +320,7 @@ split_block_after_labels (basic_block bb)\n   return split_block (bb, NULL);\n }\n \n-/* Moves block BB immediatelly after block AFTER.  Returns false if the\n+/* Moves block BB immediately after block AFTER.  Returns false if the\n    movement was impossible.  */\n \n bool"}, {"sha": "c408521e4888aaabbb705b5f34f68dad410da6c5", "filename": "gcc/rtlanal.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/321440fd61650045e452baefdc590043ff2e9e54/gcc%2Frtlanal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/321440fd61650045e452baefdc590043ff2e9e54/gcc%2Frtlanal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtlanal.c?ref=321440fd61650045e452baefdc590043ff2e9e54", "patch": "@@ -3731,7 +3731,7 @@ hoist_insn_to_edge (rtx insn, edge e, rtx val, rtx new)\n     abort ();\n \n   /* Do not use emit_insn_on_edge as we want to preserve notes and similar\n-     stuff.  We also emit CALL_INSNS and firends.  */\n+     stuff.  We also emit CALL_INSNS and friends.  */\n   if (e->insns == NULL_RTX)\n     {\n       start_sequence ();"}, {"sha": "806224d5278c5bb56252a671406d81bd285c9e76", "filename": "gcc/varasm.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/321440fd61650045e452baefdc590043ff2e9e54/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/321440fd61650045e452baefdc590043ff2e9e54/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=321440fd61650045e452baefdc590043ff2e9e54", "patch": "@@ -1002,7 +1002,7 @@ notice_global_symbol (tree decl)\n       || GET_CODE (DECL_RTL (decl)) != MEM)\n     return;\n \n-  /* We win when global object is found, but it is usefull to know about weak\n+  /* We win when global object is found, but it is useful to know about weak\n      symbol as well so we can produce nicer unique names.  */\n   if (DECL_WEAK (decl) || DECL_ONE_ONLY (decl))\n     type = &weak_global_object_name;"}]}