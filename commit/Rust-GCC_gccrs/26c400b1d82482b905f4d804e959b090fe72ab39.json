{"sha": "26c400b1d82482b905f4d804e959b090fe72ab39", "node_id": "C_kwDOANBUbNoAKDI2YzQwMGIxZDgyNDgyYjkwNWY0ZDgwNGU5NTliMDkwZmU3MmFiMzk", "commit": {"author": {"name": "Andrea Corallo", "email": "andrea.corallo@arm.com", "date": "2022-11-28T16:44:29Z"}, "committer": {"name": "Andrea Corallo", "email": "andrea.corallo@arm.com", "date": "2023-01-25T13:36:26Z"}, "message": "arm: improve tests for vqrdmlashq*\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.target/arm/mve/intrinsics/vqrdmlashq_n_s16.c: Use\n\tcheck-function-bodies instead of scan-assembler checks.  Use\n\textern \"C\" for C++ testing.\n\t* gcc.target/arm/mve/intrinsics/vqrdmlashq_n_s32.c: Likewise.\n\t* gcc.target/arm/mve/intrinsics/vqrdmlashq_n_s8.c: Likewise.", "tree": {"sha": "3e1e8b1f7eb7296def8fe855e1c35e255e6740a8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3e1e8b1f7eb7296def8fe855e1c35e255e6740a8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/26c400b1d82482b905f4d804e959b090fe72ab39", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26c400b1d82482b905f4d804e959b090fe72ab39", "html_url": "https://github.com/Rust-GCC/gccrs/commit/26c400b1d82482b905f4d804e959b090fe72ab39", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26c400b1d82482b905f4d804e959b090fe72ab39/comments", "author": {"login": "AndreaCorallo", "id": 6765576, "node_id": "MDQ6VXNlcjY3NjU1NzY=", "avatar_url": "https://avatars.githubusercontent.com/u/6765576?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AndreaCorallo", "html_url": "https://github.com/AndreaCorallo", "followers_url": "https://api.github.com/users/AndreaCorallo/followers", "following_url": "https://api.github.com/users/AndreaCorallo/following{/other_user}", "gists_url": "https://api.github.com/users/AndreaCorallo/gists{/gist_id}", "starred_url": "https://api.github.com/users/AndreaCorallo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AndreaCorallo/subscriptions", "organizations_url": "https://api.github.com/users/AndreaCorallo/orgs", "repos_url": "https://api.github.com/users/AndreaCorallo/repos", "events_url": "https://api.github.com/users/AndreaCorallo/events{/privacy}", "received_events_url": "https://api.github.com/users/AndreaCorallo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "AndreaCorallo", "id": 6765576, "node_id": "MDQ6VXNlcjY3NjU1NzY=", "avatar_url": "https://avatars.githubusercontent.com/u/6765576?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AndreaCorallo", "html_url": "https://github.com/AndreaCorallo", "followers_url": "https://api.github.com/users/AndreaCorallo/followers", "following_url": "https://api.github.com/users/AndreaCorallo/following{/other_user}", "gists_url": "https://api.github.com/users/AndreaCorallo/gists{/gist_id}", "starred_url": "https://api.github.com/users/AndreaCorallo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AndreaCorallo/subscriptions", "organizations_url": "https://api.github.com/users/AndreaCorallo/orgs", "repos_url": "https://api.github.com/users/AndreaCorallo/repos", "events_url": "https://api.github.com/users/AndreaCorallo/events{/privacy}", "received_events_url": "https://api.github.com/users/AndreaCorallo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "22a02a9576d234c517f33972e572541438eb9018", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22a02a9576d234c517f33972e572541438eb9018", "html_url": "https://github.com/Rust-GCC/gccrs/commit/22a02a9576d234c517f33972e572541438eb9018"}], "stats": {"total": 96, "additions": 78, "deletions": 18}, "files": [{"sha": "2710f2f044298322998ce7537829e3dd082bc330", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vqrdmlashq_n_s16.c", "status": "modified", "additions": 26, "deletions": 6, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26c400b1d82482b905f4d804e959b090fe72ab39/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqrdmlashq_n_s16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26c400b1d82482b905f4d804e959b090fe72ab39/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqrdmlashq_n_s16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqrdmlashq_n_s16.c?ref=26c400b1d82482b905f4d804e959b090fe72ab39", "patch": "@@ -1,21 +1,41 @@\n /* { dg-require-effective-target arm_v8_1m_mve_ok } */\n /* { dg-add-options arm_v8_1m_mve } */\n /* { dg-additional-options \"-O2\" } */\n+/* { dg-final { check-function-bodies \"**\" \"\" } } */\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n+/*\n+**foo:\n+**\t...\n+**\tvqrdmlash.s16\tq[0-9]+, q[0-9]+, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+*/\n int16x8_t\n-foo (int16x8_t a, int16x8_t b, int16_t c)\n+foo (int16x8_t m1, int16x8_t m2, int16_t add)\n {\n-  return vqrdmlashq_n_s16 (a, b, c);\n+  return vqrdmlashq_n_s16 (m1, m2, add);\n }\n \n-/* { dg-final { scan-assembler \"vqrdmlash.s16\"  }  } */\n \n+/*\n+**foo1:\n+**\t...\n+**\tvqrdmlash.s16\tq[0-9]+, q[0-9]+, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+*/\n int16x8_t\n-foo1 (int16x8_t a, int16x8_t b, int16_t c)\n+foo1 (int16x8_t m1, int16x8_t m2, int16_t add)\n {\n-  return vqrdmlashq (a, b, c);\n+  return vqrdmlashq (m1, m2, add);\n+}\n+\n+#ifdef __cplusplus\n }\n+#endif\n \n-/* { dg-final { scan-assembler \"vqrdmlash.s16\"  }  } */\n+/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "5fefc3938c543fb71f05c45aebb79082afc4c30a", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vqrdmlashq_n_s32.c", "status": "modified", "additions": 26, "deletions": 6, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26c400b1d82482b905f4d804e959b090fe72ab39/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqrdmlashq_n_s32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26c400b1d82482b905f4d804e959b090fe72ab39/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqrdmlashq_n_s32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqrdmlashq_n_s32.c?ref=26c400b1d82482b905f4d804e959b090fe72ab39", "patch": "@@ -1,21 +1,41 @@\n /* { dg-require-effective-target arm_v8_1m_mve_ok } */\n /* { dg-add-options arm_v8_1m_mve } */\n /* { dg-additional-options \"-O2\" } */\n+/* { dg-final { check-function-bodies \"**\" \"\" } } */\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n+/*\n+**foo:\n+**\t...\n+**\tvqrdmlash.s32\tq[0-9]+, q[0-9]+, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+*/\n int32x4_t\n-foo (int32x4_t a, int32x4_t b, int32_t c)\n+foo (int32x4_t m1, int32x4_t m2, int32_t add)\n {\n-  return vqrdmlashq_n_s32 (a, b, c);\n+  return vqrdmlashq_n_s32 (m1, m2, add);\n }\n \n-/* { dg-final { scan-assembler \"vqrdmlash.s32\"  }  } */\n \n+/*\n+**foo1:\n+**\t...\n+**\tvqrdmlash.s32\tq[0-9]+, q[0-9]+, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+*/\n int32x4_t\n-foo1 (int32x4_t a, int32x4_t b, int32_t c)\n+foo1 (int32x4_t m1, int32x4_t m2, int32_t add)\n {\n-  return vqrdmlashq (a, b, c);\n+  return vqrdmlashq (m1, m2, add);\n+}\n+\n+#ifdef __cplusplus\n }\n+#endif\n \n-/* { dg-final { scan-assembler \"vqrdmlash.s32\"  }  } */\n+/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}, {"sha": "df96fe852139512479969e47e80240c6ef38ead7", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/vqrdmlashq_n_s8.c", "status": "modified", "additions": 26, "deletions": 6, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26c400b1d82482b905f4d804e959b090fe72ab39/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqrdmlashq_n_s8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26c400b1d82482b905f4d804e959b090fe72ab39/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqrdmlashq_n_s8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fvqrdmlashq_n_s8.c?ref=26c400b1d82482b905f4d804e959b090fe72ab39", "patch": "@@ -1,21 +1,41 @@\n /* { dg-require-effective-target arm_v8_1m_mve_ok } */\n /* { dg-add-options arm_v8_1m_mve } */\n /* { dg-additional-options \"-O2\" } */\n+/* { dg-final { check-function-bodies \"**\" \"\" } } */\n \n #include \"arm_mve.h\"\n \n+#ifdef __cplusplus\n+extern \"C\" {\n+#endif\n+\n+/*\n+**foo:\n+**\t...\n+**\tvqrdmlash.s8\tq[0-9]+, q[0-9]+, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+*/\n int8x16_t\n-foo (int8x16_t a, int8x16_t b, int8_t c)\n+foo (int8x16_t m1, int8x16_t m2, int8_t add)\n {\n-  return vqrdmlashq_n_s8 (a, b, c);\n+  return vqrdmlashq_n_s8 (m1, m2, add);\n }\n \n-/* { dg-final { scan-assembler \"vqrdmlash.s8\"  }  } */\n \n+/*\n+**foo1:\n+**\t...\n+**\tvqrdmlash.s8\tq[0-9]+, q[0-9]+, (?:ip|fp|r[0-9]+)(?:\t@.*|)\n+**\t...\n+*/\n int8x16_t\n-foo1 (int8x16_t a, int8x16_t b, int8_t c)\n+foo1 (int8x16_t m1, int8x16_t m2, int8_t add)\n {\n-  return vqrdmlashq (a, b, c);\n+  return vqrdmlashq (m1, m2, add);\n+}\n+\n+#ifdef __cplusplus\n }\n+#endif\n \n-/* { dg-final { scan-assembler \"vqrdmlash.s8\"  }  } */\n+/* { dg-final { scan-assembler-not \"__ARM_undef\" } } */\n\\ No newline at end of file"}]}