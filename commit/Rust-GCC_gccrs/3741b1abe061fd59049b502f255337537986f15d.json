{"sha": "3741b1abe061fd59049b502f255337537986f15d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mzc0MWIxYWJlMDYxZmQ1OTA0OWI1MDJmMjU1MzM3NTM3OTg2ZjE1ZA==", "commit": {"author": {"name": "Phil Edwards", "email": "pme@gcc.gnu.org", "date": "2002-04-02T12:57:23Z"}, "committer": {"name": "Phil Edwards", "email": "pme@gcc.gnu.org", "date": "2002-04-02T12:57:23Z"}, "message": "Makefile.am (install-data-local): Use mkinstalldirs.\n\n2002-04-02  Phil Edwards  <pme@gcc.gnu.org>\n\n\t* include/Makefile.am (install-data-local):  Use mkinstalldirs.\n\t* include/Makefile.in:  Regenerate.\n\nFrom-SVN: r51747", "tree": {"sha": "94739c94a725975d24bd711916236aa80eb50f2b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/94739c94a725975d24bd711916236aa80eb50f2b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3741b1abe061fd59049b502f255337537986f15d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3741b1abe061fd59049b502f255337537986f15d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3741b1abe061fd59049b502f255337537986f15d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3741b1abe061fd59049b502f255337537986f15d/comments", "author": null, "committer": null, "parents": [{"sha": "418bb88063f67d4de11c93bd40726ad07afecc20", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/418bb88063f67d4de11c93bd40726ad07afecc20", "html_url": "https://github.com/Rust-GCC/gccrs/commit/418bb88063f67d4de11c93bd40726ad07afecc20"}], "stats": {"total": 67, "additions": 37, "deletions": 30}, "files": [{"sha": "b61a6997c8153e6f53d30bc063df1be2dfdb0c28", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3741b1abe061fd59049b502f255337537986f15d/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3741b1abe061fd59049b502f255337537986f15d/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=3741b1abe061fd59049b502f255337537986f15d", "patch": "@@ -1,3 +1,8 @@\n+2002-04-02  Phil Edwards  <pme@gcc.gnu.org>\n+\n+\t* include/Makefile.am (install-data-local):  Use mkinstalldirs.\n+\t* include/Makefile.in:  Regenerate.\n+\n 2002-04-02  Paolo Carlini  <pcarlini@unitus.it>\n             Nathan Myers  <ncm@cantrip.org>\n             Philip Martin  <philip@codematters.co.uk>"}, {"sha": "cfeb03e181ff83704813e9545b7041b555c55d6b", "filename": "libstdc++-v3/include/Makefile.am", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3741b1abe061fd59049b502f255337537986f15d/libstdc%2B%2B-v3%2Finclude%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3741b1abe061fd59049b502f255337537986f15d/libstdc%2B%2B-v3%2Finclude%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2FMakefile.am?ref=3741b1abe061fd59049b502f255337537986f15d", "patch": "@@ -417,33 +417,33 @@ ${target_builddir}/gthr-default.h: ${toplevel_srcdir}/gcc/${glibcpp_thread_h} \\\n # tree using only the human-maintained file lists and directory\n # components.  Yes, with minor differences, this is sheer duplication\n # of the staging rules above using $(INSTALL_DATA) instead of LN_S and\n-# `$(INSTALL) -d' instead of `mkdir -p'.  In particular,\n+# `$(mkinstalldirs)' instead of `mkdir -p'.  In particular,\n # extra_target_headers are taken out of the build tree staging area;\n # the rest are taken from the original source tree.\n gxx_include_dir = @gxx_include_dir@\n install-data-local:\n-\t$(INSTALL) -d ${gxx_include_dir}\n-\t$(INSTALL) -d ${gxx_include_dir}/${bits_builddir}\n+\t$(mkinstalldirs) ${gxx_include_dir}\n+\t$(mkinstalldirs) ${gxx_include_dir}/${bits_builddir}\n \tfor file in ${bits_headers}; do \\\n \t  $(INSTALL_DATA) $${file} ${gxx_include_dir}/${bits_builddir}; done\n-\t$(INSTALL) -d ${gxx_include_dir}/${backward_builddir}\n+\t$(mkinstalldirs) ${gxx_include_dir}/${backward_builddir}\n \tfor file in ${backward_headers}; do \\\n \t  $(INSTALL_DATA) $${file} ${gxx_include_dir}/${backward_builddir}; done\n-\t$(INSTALL) -d ${gxx_include_dir}/${ext_builddir}\n+\t$(mkinstalldirs) ${gxx_include_dir}/${ext_builddir}\n \tfor file in ${ext_headers}; do \\\n \t  $(INSTALL_DATA) $${file} ${gxx_include_dir}/${ext_builddir}; done\n-\t$(INSTALL) -d ${gxx_include_dir}/${c_base_builddir}\n+\t$(mkinstalldirs) ${gxx_include_dir}/${c_base_builddir}\n \tfor file in ${c_base_headers_rename}; do \\\n \t  $(INSTALL_DATA) ${c_base_builddir}/$${file} \\\n \t    ${gxx_include_dir}/${c_base_builddir}; done\n \tc_base_headers_extra_install=${c_base_headers_extra};\\\n \tfor file in $$c_base_headers_extra_install; do \\\n \t  $(INSTALL_DATA) $$file ${gxx_include_dir}/${bits_builddir}; done\n-\t$(INSTALL) -d ${gxx_include_dir}/${std_builddir}\n+\t$(mkinstalldirs) ${gxx_include_dir}/${std_builddir}\n \tfor file in ${std_headers_rename}; do \\\n \t  $(INSTALL_DATA) ${std_builddir}/$${file} \\\n \t    ${gxx_include_dir}/${std_builddir}; done\n-\t$(INSTALL) -d ${gxx_include_dir}/${target_builddir}\n+\t$(mkinstalldirs) ${gxx_include_dir}/${target_builddir}\n \tfor file in ${target_headers} ${extra_target_headers} \\\n \t ${thread_target_headers}; do \\\n \t  $(INSTALL_DATA) $${file} ${gxx_include_dir}/${target_builddir}; done"}, {"sha": "9068ee8d5b7b1e23748319bac5291dd70b92ece4", "filename": "libstdc++-v3/include/Makefile.in", "status": "modified", "additions": 24, "deletions": 22, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3741b1abe061fd59049b502f255337537986f15d/libstdc%2B%2B-v3%2Finclude%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3741b1abe061fd59049b502f255337537986f15d/libstdc%2B%2B-v3%2Finclude%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2FMakefile.in?ref=3741b1abe061fd59049b502f255337537986f15d", "patch": "@@ -1,6 +1,6 @@\n-# Makefile.in generated automatically by automake 1.4-p5 from Makefile.am\n+# Makefile.in generated automatically by automake 1.4 from Makefile.am\n \n-# Copyright (C) 1994, 1995-8, 1999, 2001 Free Software Foundation, Inc.\n+# Copyright (C) 1994, 1995-8, 1999 Free Software Foundation, Inc.\n # This Makefile.in is free software; the Free Software Foundation\n # gives unlimited permission to copy and/or distribute it,\n # with or without modifications, as long as this notice is preserved.\n@@ -442,7 +442,7 @@ uppercase = [ABCDEFGHIJKLMNOPQRSTUVWXYZ_]\n # tree using only the human-maintained file lists and directory\n # components.  Yes, with minor differences, this is sheer duplication\n # of the staging rules above using $(INSTALL_DATA) instead of LN_S and\n-# `$(INSTALL) -d' instead of `mkdir -p'.  In particular,\n+# `$(mkinstalldirs)' instead of `mkdir -p'.  In particular,\n # extra_target_headers are taken out of the build tree staging area;\n # the rest are taken from the original source tree.\n gxx_include_dir = @gxx_include_dir@\n@@ -458,9 +458,9 @@ GZIP_ENV = --best\n all: all-redirect\n .SUFFIXES:\n $(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ Makefile.am $(top_srcdir)/configure.in $(ACLOCAL_M4) \n-\tcd $(top_srcdir) && $(AUTOMAKE) --cygnus include/Makefile\n+\tcd $(top_srcdir) && $(AUTOMAKE) --gnits include/Makefile\n \n-Makefile: $(srcdir)/Makefile.in  $(top_builddir)/config.status\n+Makefile: $(srcdir)/Makefile.in  $(top_builddir)/config.status $(BUILT_SOURCES)\n \tcd $(top_builddir) \\\n \t  && CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status\n \n@@ -473,8 +473,13 @@ distdir = $(top_builddir)/$(PACKAGE)-$(VERSION)/$(subdir)\n subdir = include\n \n distdir: $(DISTFILES)\n+\there=`cd $(top_builddir) && pwd`; \\\n+\ttop_distdir=`cd $(top_distdir) && pwd`; \\\n+\tdistdir=`cd $(distdir) && pwd`; \\\n+\tcd $(top_srcdir) \\\n+\t  && $(AUTOMAKE) --include-deps --build-dir=$$here --srcdir-name=$(top_srcdir) --output-dir=$$top_distdir --gnits include/Makefile\n \t@for file in $(DISTFILES); do \\\n-\t  if test -f $$file; then d=.; else d=$(srcdir); fi; \\\n+\t  d=$(srcdir); \\\n \t  if test -d $$d/$$file; then \\\n \t    cp -pr $$d/$$file $(distdir)/$$file; \\\n \t  else \\\n@@ -487,12 +492,10 @@ info-am:\n info: info-am\n dvi-am:\n dvi: dvi-am\n-check-am:\n+check-am: all-am\n check: check-am\n installcheck-am:\n installcheck: installcheck-am\n-install-info-am: \n-install-info: install-info-am\n install-exec-am:\n install-exec: install-exec-am\n \n@@ -540,12 +543,11 @@ maintainer-clean-am:  maintainer-clean-generic distclean-am\n maintainer-clean: maintainer-clean-am\n \n .PHONY: tags distdir info-am info dvi-am dvi check check-am \\\n-installcheck-am installcheck install-info-am install-info \\\n-install-exec-am install-exec install-data-local install-data-am \\\n-install-data install-am install uninstall-am uninstall all-local \\\n-all-redirect all-am all installdirs mostlyclean-generic \\\n-distclean-generic clean-generic maintainer-clean-generic clean \\\n-mostlyclean distclean maintainer-clean\n+installcheck-am installcheck install-exec-am install-exec \\\n+install-data-local install-data-am install-data install-am install \\\n+uninstall-am uninstall all-local all-redirect all-am all installdirs \\\n+mostlyclean-generic distclean-generic clean-generic \\\n+maintainer-clean-generic clean mostlyclean distclean maintainer-clean\n \n \n # Here are the rules for building the headers\n@@ -654,28 +656,28 @@ ${target_builddir}/gthr-default.h: ${toplevel_srcdir}/gcc/${glibcpp_thread_h} \\\n \t    -e 's,^#include \"\\(.*\\)\",#include <bits/\\1>,g' \\\n \t    < ${toplevel_srcdir}/gcc/${glibcpp_thread_h} > $@\n install-data-local:\n-\t$(INSTALL) -d ${gxx_include_dir}\n-\t$(INSTALL) -d ${gxx_include_dir}/${bits_builddir}\n+\t$(mkinstalldirs) ${gxx_include_dir}\n+\t$(mkinstalldirs) ${gxx_include_dir}/${bits_builddir}\n \tfor file in ${bits_headers}; do \\\n \t  $(INSTALL_DATA) $${file} ${gxx_include_dir}/${bits_builddir}; done\n-\t$(INSTALL) -d ${gxx_include_dir}/${backward_builddir}\n+\t$(mkinstalldirs) ${gxx_include_dir}/${backward_builddir}\n \tfor file in ${backward_headers}; do \\\n \t  $(INSTALL_DATA) $${file} ${gxx_include_dir}/${backward_builddir}; done\n-\t$(INSTALL) -d ${gxx_include_dir}/${ext_builddir}\n+\t$(mkinstalldirs) ${gxx_include_dir}/${ext_builddir}\n \tfor file in ${ext_headers}; do \\\n \t  $(INSTALL_DATA) $${file} ${gxx_include_dir}/${ext_builddir}; done\n-\t$(INSTALL) -d ${gxx_include_dir}/${c_base_builddir}\n+\t$(mkinstalldirs) ${gxx_include_dir}/${c_base_builddir}\n \tfor file in ${c_base_headers_rename}; do \\\n \t  $(INSTALL_DATA) ${c_base_builddir}/$${file} \\\n \t    ${gxx_include_dir}/${c_base_builddir}; done\n \tc_base_headers_extra_install=${c_base_headers_extra};\\\n \tfor file in $$c_base_headers_extra_install; do \\\n \t  $(INSTALL_DATA) $$file ${gxx_include_dir}/${bits_builddir}; done\n-\t$(INSTALL) -d ${gxx_include_dir}/${std_builddir}\n+\t$(mkinstalldirs) ${gxx_include_dir}/${std_builddir}\n \tfor file in ${std_headers_rename}; do \\\n \t  $(INSTALL_DATA) ${std_builddir}/$${file} \\\n \t    ${gxx_include_dir}/${std_builddir}; done\n-\t$(INSTALL) -d ${gxx_include_dir}/${target_builddir}\n+\t$(mkinstalldirs) ${gxx_include_dir}/${target_builddir}\n \tfor file in ${target_headers} ${extra_target_headers} \\\n \t ${thread_target_headers}; do \\\n \t  $(INSTALL_DATA) $${file} ${gxx_include_dir}/${target_builddir}; done"}]}