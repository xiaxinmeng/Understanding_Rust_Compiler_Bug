{"sha": "925c1bae48b5b8dcc87a514e6e467582d735aa40", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTI1YzFiYWU0OGI1YjhkY2M4N2E1MTRlNmU0Njc1ODJkNzM1YWE0MA==", "commit": {"author": {"name": "Richard Sandiford", "email": "rdsandiford@googlemail.com", "date": "2014-05-13T10:38:27Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2014-05-13T10:38:27Z"}, "message": "print-rtl.c (print_rtx): Guard whole '0' block with ifndef GENERATOR_FILE.\n\ngcc/\n\t* print-rtl.c (print_rtx): Guard whole '0' block with ifndef\n\tGENERATOR_FILE.\n\nFrom-SVN: r210358", "tree": {"sha": "8c1b6cd11b2b68be5bccb7daddb0a8b136fc2ff3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8c1b6cd11b2b68be5bccb7daddb0a8b136fc2ff3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/925c1bae48b5b8dcc87a514e6e467582d735aa40", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/925c1bae48b5b8dcc87a514e6e467582d735aa40", "html_url": "https://github.com/Rust-GCC/gccrs/commit/925c1bae48b5b8dcc87a514e6e467582d735aa40", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/925c1bae48b5b8dcc87a514e6e467582d735aa40/comments", "author": {"login": "rsandifo", "id": 4235983, "node_id": "MDQ6VXNlcjQyMzU5ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4235983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo", "html_url": "https://github.com/rsandifo", "followers_url": "https://api.github.com/users/rsandifo/followers", "following_url": "https://api.github.com/users/rsandifo/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo/orgs", "repos_url": "https://api.github.com/users/rsandifo/repos", "events_url": "https://api.github.com/users/rsandifo/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "13b0c5ac1e687ea44f4c4e95a5a3fe43d605712d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13b0c5ac1e687ea44f4c4e95a5a3fe43d605712d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/13b0c5ac1e687ea44f4c4e95a5a3fe43d605712d"}], "stats": {"total": 23, "additions": 7, "deletions": 16}, "files": [{"sha": "9634ae3d51144703a681af4e0ff2d99c4be6506c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/925c1bae48b5b8dcc87a514e6e467582d735aa40/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/925c1bae48b5b8dcc87a514e6e467582d735aa40/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=925c1bae48b5b8dcc87a514e6e467582d735aa40", "patch": "@@ -1,3 +1,8 @@\n+2014-05-13  Richard Sandiford  <rdsandiford@googlemail.com>\n+\n+\t* print-rtl.c (print_rtx): Guard whole '0' block with ifndef\n+\tGENERATOR_FILE.\n+\n 2014-05-13  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \t* rtl.h (rtx_def): Mark u2 as GTY ((skip))."}, {"sha": "64e54532aa4665d47778c63963d03722e4522b9f", "filename": "gcc/print-rtl.c", "status": "modified", "additions": 2, "deletions": 16, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/925c1bae48b5b8dcc87a514e6e467582d735aa40/gcc%2Fprint-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/925c1bae48b5b8dcc87a514e6e467582d735aa40/gcc%2Fprint-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprint-rtl.c?ref=925c1bae48b5b8dcc87a514e6e467582d735aa40", "patch": "@@ -215,12 +215,12 @@ print_rtx (const_rtx in_rtx)\n \t   An exception is the third field of a NOTE, where it indicates\n \t   that the field has several different valid contents.  */\n       case '0':\n+#ifndef GENERATOR_FILE\n \tif (i == 1 && REG_P (in_rtx))\n \t  {\n \t    if (REGNO (in_rtx) != ORIGINAL_REGNO (in_rtx))\n \t      fprintf (outfile, \" [%d]\", ORIGINAL_REGNO (in_rtx));\n \t  }\n-#ifndef GENERATOR_FILE\n \telse if (i == 1 && GET_CODE (in_rtx) == SYMBOL_REF)\n \t  {\n \t    int flags = SYMBOL_REF_FLAGS (in_rtx);\n@@ -233,7 +233,6 @@ print_rtx (const_rtx in_rtx)\n \t    if (decl)\n \t      print_node_brief (outfile, \"\", decl, dump_flags);\n \t  }\n-#endif\n \telse if (i == 4 && NOTE_P (in_rtx))\n \t  {\n \t    switch (NOTE_KIND (in_rtx))\n@@ -249,19 +248,15 @@ print_rtx (const_rtx in_rtx)\n \n \t      case NOTE_INSN_BLOCK_BEG:\n \t      case NOTE_INSN_BLOCK_END:\n-#ifndef GENERATOR_FILE\n \t\tdump_addr (outfile, \" \", NOTE_BLOCK (in_rtx));\n-#endif\n \t\tsawclose = 1;\n \t\tbreak;\n \n \t      case NOTE_INSN_BASIC_BLOCK:\n \t\t{\n-#ifndef GENERATOR_FILE\n \t\t  basic_block bb = NOTE_BASIC_BLOCK (in_rtx);\n \t\t  if (bb != 0)\n \t\t    fprintf (outfile, \" [bb %d]\", bb->index);\n-#endif\n \t\t  break;\n \t        }\n \n@@ -278,28 +273,22 @@ print_rtx (const_rtx in_rtx)\n \n \t      case NOTE_INSN_SWITCH_TEXT_SECTIONS:\n \t\t{\n-#ifndef GENERATOR_FILE\n \t\t  basic_block bb = NOTE_BASIC_BLOCK (in_rtx);\n \t\t  if (bb != 0)\n \t\t    fprintf (outfile, \" [bb %d]\", bb->index);\n-#endif\n \t\t  break;\n \t\t}\n \n \t      case NOTE_INSN_VAR_LOCATION:\n \t      case NOTE_INSN_CALL_ARG_LOCATION:\n-#ifndef GENERATOR_FILE\n \t\tfputc (' ', outfile);\n \t\tprint_rtx (NOTE_VAR_LOCATION (in_rtx));\n-#endif\n \t\tbreak;\n \n \t      case NOTE_INSN_CFI:\n-#ifndef GENERATOR_FILE\n \t\tfputc ('\\n', outfile);\n \t\toutput_cfi_directive (outfile, NOTE_CFI (in_rtx));\n \t\tfputc ('\\t', outfile);\n-#endif\n \t\tbreak;\n \n \t      default:\n@@ -319,20 +308,16 @@ print_rtx (const_rtx in_rtx)\n \t  }\n \telse if (i == 0 && GET_CODE (in_rtx) == VALUE)\n \t  {\n-#ifndef GENERATOR_FILE\n \t    cselib_val *val = CSELIB_VAL_PTR (in_rtx);\n \n \t    fprintf (outfile, \" %u:%u\", val->uid, val->hash);\n \t    dump_addr (outfile, \" @\", in_rtx);\n \t    dump_addr (outfile, \"/\", (void*)val);\n-#endif\n \t  }\n \telse if (i == 0 && GET_CODE (in_rtx) == DEBUG_EXPR)\n \t  {\n-#ifndef GENERATOR_FILE\n \t    fprintf (outfile, \" D#%i\",\n \t\t     DEBUG_TEMP_UID (DEBUG_EXPR_TREE_DECL (in_rtx)));\n-#endif\n \t  }\n \telse if (i == 0 && GET_CODE (in_rtx) == ENTRY_VALUE)\n \t  {\n@@ -342,6 +327,7 @@ print_rtx (const_rtx in_rtx)\n \t    print_rtx (ENTRY_VALUE_EXP (in_rtx));\n \t    indent -= 2;\n \t  }\n+#endif\n \tbreak;\n \n       case 'e':"}]}