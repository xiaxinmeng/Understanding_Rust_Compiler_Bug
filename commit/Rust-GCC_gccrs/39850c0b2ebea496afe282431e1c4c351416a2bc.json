{"sha": "39850c0b2ebea496afe282431e1c4c351416a2bc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mzk4NTBjMGIyZWJlYTQ5NmFmZTI4MjQzMWUxYzRjMzUxNDE2YTJiYw==", "commit": {"author": {"name": "Steven Bosscher", "email": "stevenb@suse.de", "date": "2004-11-17T10:47:07Z"}, "committer": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2004-11-17T10:47:07Z"}, "message": "* tree-ssa-propagate.c (cfg_blocks_add) Assert we're not trying\n\tto insert the exit or entry block.\n\t(ssa_prop_init): Use add_control_edge to seed the algorithm.\n\nFrom-SVN: r90802", "tree": {"sha": "7a6e05646de7e3f138ad1860df6c733efa101475", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7a6e05646de7e3f138ad1860df6c733efa101475"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/39850c0b2ebea496afe282431e1c4c351416a2bc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39850c0b2ebea496afe282431e1c4c351416a2bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/39850c0b2ebea496afe282431e1c4c351416a2bc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39850c0b2ebea496afe282431e1c4c351416a2bc/comments", "author": null, "committer": null, "parents": [{"sha": "e9fb72e85fc8c0c85e9b98a744d3b908901509ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9fb72e85fc8c0c85e9b98a744d3b908901509ca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e9fb72e85fc8c0c85e9b98a744d3b908901509ca"}], "stats": {"total": 20, "additions": 9, "deletions": 11}, "files": [{"sha": "932744504a116cdf77faa386ff4f85da39ba796d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39850c0b2ebea496afe282431e1c4c351416a2bc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39850c0b2ebea496afe282431e1c4c351416a2bc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=39850c0b2ebea496afe282431e1c4c351416a2bc", "patch": "@@ -1,3 +1,9 @@\n+2004-11-17  Steven Bosscher  <stevenb@suse.de>\n+\n+\t* tree-ssa-propagate.c (cfg_blocks_add) Assert we're not trying\n+\tto insert the exit or entry block.\n+\t(ssa_prop_init): Use add_control_edge to seed the algorithm.\n+\n 2004-11-16  Zack Weinberg  <zack@codesourcery.com>\n \n \t* mkmap-flat.awk, mkmap-symver.awk: If the last version"}, {"sha": "29d3fd3c4896245ea46690e9e902ef011b4523be", "filename": "gcc/tree-ssa-propagate.c", "status": "modified", "additions": 3, "deletions": 11, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39850c0b2ebea496afe282431e1c4c351416a2bc/gcc%2Ftree-ssa-propagate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39850c0b2ebea496afe282431e1c4c351416a2bc/gcc%2Ftree-ssa-propagate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-propagate.c?ref=39850c0b2ebea496afe282431e1c4c351416a2bc", "patch": "@@ -172,14 +172,12 @@ cfg_blocks_empty_p (void)\n \n \n /* Add a basic block to the worklist.  The block must not be already\n-   in the worklist.  */\n+   in the worklist, and it must not be the ENTRY or EXIT block.  */\n \n static void \n cfg_blocks_add (basic_block bb)\n {\n-  if (bb == ENTRY_BLOCK_PTR || bb == EXIT_BLOCK_PTR)\n-    return;\n-\n+  gcc_assert (bb != ENTRY_BLOCK_PTR && bb != EXIT_BLOCK_PTR);\n   gcc_assert (!TEST_BIT (bb_in_list, bb->index));\n \n   if (cfg_blocks_empty_p ())\n@@ -494,13 +492,7 @@ ssa_prop_init (void)\n   /* Seed the algorithm by adding the successors of the entry block to the\n      edge worklist.  */\n   FOR_EACH_EDGE (e, ei, ENTRY_BLOCK_PTR->succs)\n-    {\n-      if (e->dest != EXIT_BLOCK_PTR)\n-\t{\n-\t  e->flags |= EDGE_EXECUTABLE;\n-\t  cfg_blocks_add (e->dest);\n-\t}\n-    }\n+    add_control_edge (e);\n }\n \n "}]}