{"sha": "5865218e3bf9b40d90c210446fa06e04265ffda0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTg2NTIxOGUzYmY5YjQwZDkwYzIxMDQ0NmZhMDZlMDQyNjVmZmRhMA==", "commit": {"author": {"name": "Doug Rupp", "email": "rupp@adacore.com", "date": "2018-05-25T09:03:47Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-05-25T09:03:47Z"}, "message": "[Ada] Make Max_Sensible_Delay uniform across all Posix targets\n\nFor instance: 6 months where Duration is 64bits.  Heretofore LynxOS was unique\nin having an approximately 12 days max delay. By experimentation the actual\nmaximum was determined and all relevant delay and sleep procedures rewritten to\nincrementally wait if necessary.\n\n2018-05-25  Doug Rupp  <rupp@adacore.com>\n\ngcc/ada/\n\n\t* libgnarl/s-osinte__aix.ads, libgnarl/s-osinte__android.ads,\n\tlibgnarl/s-osinte__darwin.ads, libgnarl/s-osinte__freebsd.ads,\n\tlibgnarl/s-osinte__hpux.ads, libgnarl/s-osinte__kfreebsd-gnu.ads,\n\tlibgnarl/s-osinte__linux.ads, libgnarl/s-osinte__lynxos178e.ads,\n\tlibgnarl/s-osinte__qnx.ads, libgnarl/s-osinte__rtems.ads\n\t(Relative_Timed_Wait): Remove.\n\t* libgnarl/s-tpopmo.adb (Timed_Sleep, Timed_Delay): Rewrite to allow\n\tfor incremental looping. Remove references to Rel_Time and\n\tRelative_Timed_Wait.\n\t* libgnat/s-osprim__posix.adb, libgnat/s-osprim__posix2008.adb\n\t(Timed_Delay): Make separate.\n\t* libgnat/s-optide.adb: New separate procedure.\n\t* libgnat/s-osprim.ads (Max_System_Delay): New constant.\n\t* libgnat/s-osprim__lynxos.ads (Max_Sensible_Delay): Set to 6 months.\n\t(Max_System_Delay): New constant.\n\nFrom-SVN: r260724", "tree": {"sha": "ed7c0a9b8e15500b04d7858f3e4cf05ca41908e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ed7c0a9b8e15500b04d7858f3e4cf05ca41908e1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5865218e3bf9b40d90c210446fa06e04265ffda0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5865218e3bf9b40d90c210446fa06e04265ffda0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5865218e3bf9b40d90c210446fa06e04265ffda0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5865218e3bf9b40d90c210446fa06e04265ffda0/comments", "author": {"login": "Cementitious", "id": 115579865, "node_id": "U_kgDOBuOb2Q", "avatar_url": "https://avatars.githubusercontent.com/u/115579865?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Cementitious", "html_url": "https://github.com/Cementitious", "followers_url": "https://api.github.com/users/Cementitious/followers", "following_url": "https://api.github.com/users/Cementitious/following{/other_user}", "gists_url": "https://api.github.com/users/Cementitious/gists{/gist_id}", "starred_url": "https://api.github.com/users/Cementitious/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Cementitious/subscriptions", "organizations_url": "https://api.github.com/users/Cementitious/orgs", "repos_url": "https://api.github.com/users/Cementitious/repos", "events_url": "https://api.github.com/users/Cementitious/events{/privacy}", "received_events_url": "https://api.github.com/users/Cementitious/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a036d1de575622d6cc7efb8d1de75ce9c4a27de4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a036d1de575622d6cc7efb8d1de75ce9c4a27de4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a036d1de575622d6cc7efb8d1de75ce9c4a27de4"}], "stats": {"total": 389, "additions": 229, "deletions": 160}, "files": [{"sha": "6f261dba21b0506d85d3d4a1e108782306858396", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5865218e3bf9b40d90c210446fa06e04265ffda0/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5865218e3bf9b40d90c210446fa06e04265ffda0/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=5865218e3bf9b40d90c210446fa06e04265ffda0", "patch": "@@ -1,3 +1,21 @@\n+2018-05-25  Doug Rupp  <rupp@adacore.com>\n+\n+\t* libgnarl/s-osinte__aix.ads, libgnarl/s-osinte__android.ads,\n+\tlibgnarl/s-osinte__darwin.ads, libgnarl/s-osinte__freebsd.ads,\n+\tlibgnarl/s-osinte__hpux.ads, libgnarl/s-osinte__kfreebsd-gnu.ads,\n+\tlibgnarl/s-osinte__linux.ads, libgnarl/s-osinte__lynxos178e.ads,\n+\tlibgnarl/s-osinte__qnx.ads, libgnarl/s-osinte__rtems.ads\n+\t(Relative_Timed_Wait): Remove.\n+\t* libgnarl/s-tpopmo.adb (Timed_Sleep, Timed_Delay): Rewrite to allow\n+\tfor incremental looping. Remove references to Rel_Time and\n+\tRelative_Timed_Wait.\n+\t* libgnat/s-osprim__posix.adb, libgnat/s-osprim__posix2008.adb\n+\t(Timed_Delay): Make separate.\n+\t* libgnat/s-optide.adb: New separate procedure.\n+\t* libgnat/s-osprim.ads (Max_System_Delay): New constant.\n+\t* libgnat/s-osprim__lynxos.ads (Max_Sensible_Delay): Set to 6 months.\n+\t(Max_System_Delay): New constant.\n+\n 2018-05-25  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem_ch12.adb (Validate_Derived_Type_Instance): Verify that the actual"}, {"sha": "928be3201f5f131af3294199201f151fd437783d", "filename": "gcc/ada/libgnarl/s-osinte__aix.ads", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5865218e3bf9b40d90c210446fa06e04265ffda0/gcc%2Fada%2Flibgnarl%2Fs-osinte__aix.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5865218e3bf9b40d90c210446fa06e04265ffda0/gcc%2Fada%2Flibgnarl%2Fs-osinte__aix.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnarl%2Fs-osinte__aix.ads?ref=5865218e3bf9b40d90c210446fa06e04265ffda0", "patch": "@@ -420,9 +420,6 @@ package System.OS_Interface is\n       abstime : access timespec) return int;\n    pragma Import (C, pthread_cond_timedwait, \"pthread_cond_timedwait\");\n \n-   Relative_Timed_Wait : constant Boolean := False;\n-   --  pthread_cond_timedwait requires an absolute delay time\n-\n    --------------------------\n    -- POSIX.1c  Section 13 --\n    --------------------------"}, {"sha": "2185734f96ae302ae8c6ff61503d1393bfb223d0", "filename": "gcc/ada/libgnarl/s-osinte__android.ads", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5865218e3bf9b40d90c210446fa06e04265ffda0/gcc%2Fada%2Flibgnarl%2Fs-osinte__android.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5865218e3bf9b40d90c210446fa06e04265ffda0/gcc%2Fada%2Flibgnarl%2Fs-osinte__android.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnarl%2Fs-osinte__android.ads?ref=5865218e3bf9b40d90c210446fa06e04265ffda0", "patch": "@@ -414,9 +414,6 @@ package System.OS_Interface is\n       abstime : access timespec) return int;\n    pragma Import (C, pthread_cond_timedwait, \"pthread_cond_timedwait\");\n \n-   Relative_Timed_Wait : constant Boolean := False;\n-   --  pthread_cond_timedwait requires an absolute delay time\n-\n    --------------------------\n    -- POSIX.1c  Section 13 --\n    --------------------------"}, {"sha": "0f9b15206f5297b31dcf1bf1dabc87e55f9f956f", "filename": "gcc/ada/libgnarl/s-osinte__darwin.ads", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5865218e3bf9b40d90c210446fa06e04265ffda0/gcc%2Fada%2Flibgnarl%2Fs-osinte__darwin.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5865218e3bf9b40d90c210446fa06e04265ffda0/gcc%2Fada%2Flibgnarl%2Fs-osinte__darwin.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnarl%2Fs-osinte__darwin.ads?ref=5865218e3bf9b40d90c210446fa06e04265ffda0", "patch": "@@ -397,9 +397,6 @@ package System.OS_Interface is\n       abstime : access timespec) return int;\n    pragma Import (C, pthread_cond_timedwait, \"pthread_cond_timedwait\");\n \n-   Relative_Timed_Wait : constant Boolean := False;\n-   --  pthread_cond_timedwait requires an absolute delay time\n-\n    --------------------------\n    -- POSIX.1c  Section 13 --\n    --------------------------"}, {"sha": "3380e2f9bd060f989d593a9c44a675dedc7abd04", "filename": "gcc/ada/libgnarl/s-osinte__freebsd.ads", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5865218e3bf9b40d90c210446fa06e04265ffda0/gcc%2Fada%2Flibgnarl%2Fs-osinte__freebsd.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5865218e3bf9b40d90c210446fa06e04265ffda0/gcc%2Fada%2Flibgnarl%2Fs-osinte__freebsd.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnarl%2Fs-osinte__freebsd.ads?ref=5865218e3bf9b40d90c210446fa06e04265ffda0", "patch": "@@ -431,9 +431,6 @@ package System.OS_Interface is\n       abstime : access timespec) return int;\n    pragma Import (C, pthread_cond_timedwait, \"pthread_cond_timedwait\");\n \n-   Relative_Timed_Wait : constant Boolean := False;\n-   --  pthread_cond_timedwait requires an absolute delay time\n-\n    --------------------------\n    -- POSIX.1c  Section 13 --\n    --------------------------"}, {"sha": "db5f03cd12050795498a27d8633184e54947f6b1", "filename": "gcc/ada/libgnarl/s-osinte__hpux.ads", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5865218e3bf9b40d90c210446fa06e04265ffda0/gcc%2Fada%2Flibgnarl%2Fs-osinte__hpux.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5865218e3bf9b40d90c210446fa06e04265ffda0/gcc%2Fada%2Flibgnarl%2Fs-osinte__hpux.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnarl%2Fs-osinte__hpux.ads?ref=5865218e3bf9b40d90c210446fa06e04265ffda0", "patch": "@@ -400,9 +400,6 @@ package System.OS_Interface is\n       abstime : access timespec) return int;\n    pragma Import (C, pthread_cond_timedwait, \"pthread_cond_timedwait\");\n \n-   Relative_Timed_Wait : constant Boolean := False;\n-   --  pthread_cond_timedwait requires an absolute delay time\n-\n    --------------------------\n    -- POSIX.1c  Section 13 --\n    --------------------------"}, {"sha": "408187314995038d37fc8bd3be26d7bf8e73a45d", "filename": "gcc/ada/libgnarl/s-osinte__kfreebsd-gnu.ads", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5865218e3bf9b40d90c210446fa06e04265ffda0/gcc%2Fada%2Flibgnarl%2Fs-osinte__kfreebsd-gnu.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5865218e3bf9b40d90c210446fa06e04265ffda0/gcc%2Fada%2Flibgnarl%2Fs-osinte__kfreebsd-gnu.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnarl%2Fs-osinte__kfreebsd-gnu.ads?ref=5865218e3bf9b40d90c210446fa06e04265ffda0", "patch": "@@ -430,9 +430,6 @@ package System.OS_Interface is\n       abstime : access timespec) return int;\n    pragma Import (C, pthread_cond_timedwait, \"pthread_cond_timedwait\");\n \n-   Relative_Timed_Wait : constant Boolean := False;\n-   --  pthread_cond_timedwait requires an absolute delay time\n-\n    --------------------------\n    -- POSIX.1c  Section 13 --\n    --------------------------"}, {"sha": "447f9b59624c4cd4c619bdf5506ae7616a2ba11b", "filename": "gcc/ada/libgnarl/s-osinte__linux.ads", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5865218e3bf9b40d90c210446fa06e04265ffda0/gcc%2Fada%2Flibgnarl%2Fs-osinte__linux.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5865218e3bf9b40d90c210446fa06e04265ffda0/gcc%2Fada%2Flibgnarl%2Fs-osinte__linux.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnarl%2Fs-osinte__linux.ads?ref=5865218e3bf9b40d90c210446fa06e04265ffda0", "patch": "@@ -448,9 +448,6 @@ package System.OS_Interface is\n       abstime : access timespec) return int;\n    pragma Import (C, pthread_cond_timedwait, \"pthread_cond_timedwait\");\n \n-   Relative_Timed_Wait : constant Boolean := False;\n-   --  pthread_cond_timedwait requires an absolute delay time\n-\n    --------------------------\n    -- POSIX.1c  Section 13 --\n    --------------------------"}, {"sha": "5193a35785e0bb646e741ae63ef12667bb067c32", "filename": "gcc/ada/libgnarl/s-osinte__lynxos178e.ads", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5865218e3bf9b40d90c210446fa06e04265ffda0/gcc%2Fada%2Flibgnarl%2Fs-osinte__lynxos178e.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5865218e3bf9b40d90c210446fa06e04265ffda0/gcc%2Fada%2Flibgnarl%2Fs-osinte__lynxos178e.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnarl%2Fs-osinte__lynxos178e.ads?ref=5865218e3bf9b40d90c210446fa06e04265ffda0", "patch": "@@ -420,9 +420,6 @@ package System.OS_Interface is\n       abstime : access timespec) return int;\n    pragma Import (C, pthread_cond_timedwait, \"pthread_cond_timedwait\");\n \n-   Relative_Timed_Wait : constant Boolean := False;\n-   --  pthread_cond_timedwait requires an absolute delay time\n-\n    --------------------------\n    -- POSIX.1c  Section 13 --\n    --------------------------"}, {"sha": "b1d077be44cb6baf699b0e9eb8166a12c2eaf8a0", "filename": "gcc/ada/libgnarl/s-osinte__qnx.ads", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5865218e3bf9b40d90c210446fa06e04265ffda0/gcc%2Fada%2Flibgnarl%2Fs-osinte__qnx.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5865218e3bf9b40d90c210446fa06e04265ffda0/gcc%2Fada%2Flibgnarl%2Fs-osinte__qnx.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnarl%2Fs-osinte__qnx.ads?ref=5865218e3bf9b40d90c210446fa06e04265ffda0", "patch": "@@ -417,9 +417,6 @@ package System.OS_Interface is\n       abstime : access timespec) return int;\n    pragma Import (C, pthread_cond_timedwait, \"pthread_cond_timedwait\");\n \n-   Relative_Timed_Wait : constant Boolean := False;\n-   --  pthread_cond_timedwait requires an absolute delay time\n-\n    --------------------------\n    -- POSIX.1c  Section 13 --\n    --------------------------"}, {"sha": "c623c2e9cd1020b1b5c21de07a612f09e0421dc2", "filename": "gcc/ada/libgnarl/s-osinte__rtems.ads", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5865218e3bf9b40d90c210446fa06e04265ffda0/gcc%2Fada%2Flibgnarl%2Fs-osinte__rtems.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5865218e3bf9b40d90c210446fa06e04265ffda0/gcc%2Fada%2Flibgnarl%2Fs-osinte__rtems.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnarl%2Fs-osinte__rtems.ads?ref=5865218e3bf9b40d90c210446fa06e04265ffda0", "patch": "@@ -426,9 +426,6 @@ package System.OS_Interface is\n       abstime : access timespec) return int;\n    pragma Import (C, pthread_cond_timedwait, \"pthread_cond_timedwait\");\n \n-   Relative_Timed_Wait : constant Boolean := False;\n-   --  pthread_cond_timedwait requires an absolute delay time\n-\n    --------------------------\n    -- POSIX.1c  Section 13 --\n    --------------------------"}, {"sha": "00411b24f8d00a9fb8ba5e653c7a0e76df9c6c15", "filename": "gcc/ada/libgnarl/s-tpopmo.adb", "status": "modified", "additions": 103, "deletions": 60, "changes": 163, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5865218e3bf9b40d90c210446fa06e04265ffda0/gcc%2Fada%2Flibgnarl%2Fs-tpopmo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5865218e3bf9b40d90c210446fa06e04265ffda0/gcc%2Fada%2Flibgnarl%2Fs-tpopmo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnarl%2Fs-tpopmo.adb?ref=5865218e3bf9b40d90c210446fa06e04265ffda0", "patch": "@@ -42,11 +42,10 @@ package body Monotonic is\n      (Time       : Duration;\n       Mode       : ST.Delay_Modes;\n       Check_Time : out Duration;\n-      Abs_Time   : out Duration;\n-      Rel_Time   : out Duration);\n+      Abs_Time   : out Duration);\n    --  Helper for Timed_Sleep and Timed_Delay: given a deadline specified by\n    --  Time and Mode, compute the current clock reading (Check_Time), and the\n-   --  target absolute and relative clock readings (Abs_Time, Rel_Time). The\n+   --  target absolute and relative clock readings (Abs_Time). The\n    --  epoch for Time depends on Mode; the epoch for Check_Time and Abs_Time\n    --  is always that of CLOCK_RT_Ada.\n \n@@ -88,8 +87,7 @@ package body Monotonic is\n      (Time       : Duration;\n       Mode       : ST.Delay_Modes;\n       Check_Time : out Duration;\n-      Abs_Time   : out Duration;\n-      Rel_Time   : out Duration)\n+      Abs_Time   : out Duration)\n    is\n    begin\n       Check_Time := Monotonic_Clock;\n@@ -99,10 +97,6 @@ package body Monotonic is\n       if Mode = Relative then\n          Abs_Time := Duration'Min (Time, Max_Sensible_Delay) + Check_Time;\n \n-         if Relative_Timed_Wait then\n-            Rel_Time := Duration'Min (Max_Sensible_Delay, Time);\n-         end if;\n-\n          pragma Warnings (Off);\n          --  Comparison \"OSC.CLOCK_RT_Ada = OSC.CLOCK_REALTIME\" is compile\n          --  time known.\n@@ -115,10 +109,6 @@ package body Monotonic is\n          pragma Warnings (On);\n          Abs_Time := Duration'Min (Check_Time + Max_Sensible_Delay, Time);\n \n-         if Relative_Timed_Wait then\n-            Rel_Time := Duration'Min (Max_Sensible_Delay, Time - Check_Time);\n-         end if;\n-\n       --  Absolute deadline specified using the calendar clock, in the\n       --  case where it is not the same as the tasking clock: compensate for\n       --  difference between clock epochs (Base_Time - Base_Cal_Time).\n@@ -133,10 +123,6 @@ package body Monotonic is\n             Abs_Time :=\n               Duration'Min (Check_Time + Max_Sensible_Delay, RT_Time);\n \n-            if Relative_Timed_Wait then\n-               Rel_Time :=\n-                 Duration'Min (Max_Sensible_Delay, RT_Time - Check_Time);\n-            end if;\n          end;\n       end if;\n    end Compute_Deadline;\n@@ -162,10 +148,11 @@ package body Monotonic is\n       Base_Time  : Duration;\n       Check_Time : Duration;\n       Abs_Time   : Duration;\n-      Rel_Time   : Duration;\n+      P_Abs_Time : Duration;\n \n       Request    : aliased timespec;\n       Result     : Interfaces.C.int;\n+      Exit_Outer : Boolean := False;\n \n    begin\n       Timedout := True;\n@@ -175,38 +162,63 @@ package body Monotonic is\n         (Time       => Time,\n          Mode       => Mode,\n          Check_Time => Check_Time,\n-         Abs_Time   => Abs_Time,\n-         Rel_Time   => Rel_Time);\n+         Abs_Time   => Abs_Time);\n       Base_Time := Check_Time;\n \n+      --  To keep a sensible Max_Sensible_Delay on a target whose system\n+      --  maximum is less than sensible, we split the delay into manageable\n+      --  chunks of time less than or equal to the Max_System_Delay.\n+\n       if Abs_Time > Check_Time then\n-         Request :=\n-           To_Timespec (if Relative_Timed_Wait then Rel_Time else Abs_Time);\n \n-         loop\n-            exit when Self_ID.Pending_ATC_Level < Self_ID.ATC_Nesting_Level;\n+         Outer : loop\n \n-            Result :=\n-              pthread_cond_timedwait\n-                (cond    => Self_ID.Common.LL.CV'Access,\n-                 mutex   => (if Single_Lock\n-                             then Single_RTS_Lock'Access\n-                             else Self_ID.Common.LL.L'Access),\n-                 abstime => Request'Access);\n+            pragma Warnings (Off, \"condition is always *\");\n+            if Max_System_Delay < Max_Sensible_Delay and then\n+               Abs_Time > Check_Time + Max_System_Delay\n+            then\n+               P_Abs_Time := Check_Time + Max_System_Delay;\n+            else\n+               P_Abs_Time := Abs_Time;\n+               Exit_Outer := True;\n+            end if;\n+            pragma Warnings (On);\n \n-            Check_Time := Monotonic_Clock;\n-            exit when Abs_Time <= Check_Time or else Check_Time < Base_Time;\n+            Request := To_Timespec (P_Abs_Time);\n \n-            if Result in 0 | EINTR then\n+            Inner : loop\n+               exit Outer\n+                  when Self_ID.Pending_ATC_Level < Self_ID.ATC_Nesting_Level;\n \n-               --  Somebody may have called Wakeup for us\n+               Result :=\n+                 pthread_cond_timedwait\n+                   (cond    => Self_ID.Common.LL.CV'Access,\n+                    mutex   => (if Single_Lock\n+                                then Single_RTS_Lock'Access\n+                                else Self_ID.Common.LL.L'Access),\n+                    abstime => Request'Access);\n \n-               Timedout := False;\n-               exit;\n-            end if;\n+               case Result is\n+                  when 0 | EINTR =>\n+                     --  Somebody may have called Wakeup for us\n+                     Timedout := False;\n+                     exit Outer;\n \n-            pragma Assert (Result = ETIMEDOUT);\n-         end loop;\n+                  when ETIMEDOUT =>\n+                     exit Outer when Exit_Outer;\n+                     Check_Time := Monotonic_Clock;\n+                     exit Inner;\n+\n+                  when others =>\n+                     pragma Assert (False);\n+\n+               end case;\n+\n+               exit Outer\n+                 when Abs_Time <= Check_Time or else Check_Time < Base_Time;\n+\n+            end loop Inner;\n+         end loop Outer;\n       end if;\n    end Timed_Sleep;\n \n@@ -225,11 +237,11 @@ package body Monotonic is\n       Base_Time  : Duration;\n       Check_Time : Duration;\n       Abs_Time   : Duration;\n-      Rel_Time   : Duration;\n+      P_Abs_Time : Duration;\n       Request    : aliased timespec;\n \n-      Result : Interfaces.C.int;\n-      pragma Warnings (Off, Result);\n+      Result     : Interfaces.C.int;\n+      Exit_Outer : Boolean := False;\n \n    begin\n       if Single_Lock then\n@@ -242,31 +254,61 @@ package body Monotonic is\n         (Time       => Time,\n          Mode       => Mode,\n          Check_Time => Check_Time,\n-         Abs_Time   => Abs_Time,\n-         Rel_Time   => Rel_Time);\n+         Abs_Time   => Abs_Time);\n       Base_Time := Check_Time;\n \n+      --  To keep a sensible Max_Sensible_Delay on a target whose system\n+      --  maximum is less than sensible, we split the delay into manageable\n+      --  chunks of time less than or equal to the Max_System_Delay.\n+\n       if Abs_Time > Check_Time then\n-         Request :=\n-           To_Timespec (if Relative_Timed_Wait then Rel_Time else Abs_Time);\n          Self_ID.Common.State := Delay_Sleep;\n \n-         loop\n-            exit when Self_ID.Pending_ATC_Level < Self_ID.ATC_Nesting_Level;\n+         Outer : loop\n+\n+            pragma Warnings (Off, \"condition is always *\");\n+            if Max_System_Delay < Max_Sensible_Delay and then\n+              Abs_Time > Check_Time + Max_System_Delay\n+            then\n+               P_Abs_Time := Check_Time + Max_System_Delay;\n+            else\n+               P_Abs_Time := Abs_Time;\n+               Exit_Outer := True;\n+            end if;\n+            pragma Warnings (On);\n+\n+            Request := To_Timespec (P_Abs_Time);\n+\n+            Inner : loop\n+               exit Outer\n+                 when Self_ID.Pending_ATC_Level < Self_ID.ATC_Nesting_Level;\n+\n+               Result :=\n+                 pthread_cond_timedwait\n+                   (cond    => Self_ID.Common.LL.CV'Access,\n+                    mutex   => (if Single_Lock\n+                                then Single_RTS_Lock'Access\n+                                else Self_ID.Common.LL.L'Access),\n+                    abstime => Request'Access);\n+\n+               case Result is\n+                  when ETIMEDOUT =>\n+                     exit Outer when Exit_Outer;\n+                     Check_Time := Monotonic_Clock;\n+                     exit Inner;\n+\n+                  when 0 | EINTR => null;\n+\n+                  when others =>\n+                     pragma Assert (False);\n \n-            Result :=\n-              pthread_cond_timedwait\n-                (cond    => Self_ID.Common.LL.CV'Access,\n-                 mutex   => (if Single_Lock\n-                             then Single_RTS_Lock'Access\n-                             else Self_ID.Common.LL.L'Access),\n-                 abstime => Request'Access);\n+               end case;\n \n-            Check_Time := Monotonic_Clock;\n-            exit when Abs_Time <= Check_Time or else Check_Time < Base_Time;\n+               exit Outer\n+                  when Abs_Time <= Check_Time or else Check_Time < Base_Time;\n \n-            pragma Assert (Result in 0 | ETIMEDOUT | EINTR);\n-         end loop;\n+            end loop Inner;\n+         end loop Outer;\n \n          Self_ID.Common.State := Runnable;\n       end if;\n@@ -277,6 +319,7 @@ package body Monotonic is\n          Unlock_RTS;\n       end if;\n \n+      pragma Unreferenced (Result);\n       Result := sched_yield;\n    end Timed_Delay;\n "}, {"sha": "83245d63ae52f101f5e77c6f0b2ba936d108a0cb", "filename": "gcc/ada/libgnat/s-optide.adb", "status": "added", "additions": 84, "deletions": 0, "changes": 84, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5865218e3bf9b40d90c210446fa06e04265ffda0/gcc%2Fada%2Flibgnat%2Fs-optide.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5865218e3bf9b40d90c210446fa06e04265ffda0/gcc%2Fada%2Flibgnat%2Fs-optide.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-optide.adb?ref=5865218e3bf9b40d90c210446fa06e04265ffda0", "patch": "@@ -0,0 +1,84 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                         GNAT RUN-TIME COMPONENTS                         --\n+--                                                                          --\n+--     S Y S T E M . O S _ P R I M I T I V E S. T I M E D _ D E L A Y       --\n+--                                                                          --\n+--                                 B o d y                                  --\n+--                                                                          --\n+--                     Copyright (C) 2012-2018, AdaCore                     --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.                                     --\n+--                                                                          --\n+-- As a special exception under Section 7 of GPL version 3, you are granted --\n+-- additional permissions described in the GCC Runtime Library Exception,   --\n+-- version 3.1, as published by the Free Software Foundation.               --\n+--                                                                          --\n+-- You should have received a copy of the GNU General Public License and    --\n+-- a copy of the GCC Runtime Library Exception along with this program;     --\n+-- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n+-- <http://www.gnu.org/licenses/>.                                          --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+--  This is the Posix, Posix2008, and LynxOS version of this procedure.\n+\n+separate (System.OS_Primitives)\n+procedure Timed_Delay\n+  (Time : Duration;\n+   Mode : Integer)\n+is\n+   Request    : aliased timespec;\n+   Remaind    : aliased timespec;\n+   Rel_Time   : Duration;\n+   Abs_Time   : Duration;\n+   Base_Time  : constant Duration := Clock;\n+   Check_Time : Duration := Base_Time;\n+   Time_Chunk : Duration;\n+\n+   Result : Integer;\n+   pragma Unreferenced (Result);\n+\n+begin\n+   if Mode = Relative then\n+      Rel_Time := Time;\n+      Abs_Time := Time + Check_Time;\n+   else\n+      Rel_Time := Time - Check_Time;\n+      Abs_Time := Time;\n+   end if;\n+\n+   --  To keep a sensible Max_Sensible_Delay on a target whose system\n+   --  maximum is less than sensible, we split the delay into manageable\n+   --  chunks of time less than or equal to the Max_System_Delay.\n+\n+   if Rel_Time > 0.0 then\n+      Time_Chunk := Rel_Time;\n+      loop\n+         pragma Warnings (Off, \"condition is always *\");\n+         if Max_System_Delay < Max_Sensible_Delay and then\n+            Time_Chunk > Max_System_Delay\n+         then\n+            Time_Chunk := Max_System_Delay;\n+         end if;\n+         pragma Warnings (On);\n+\n+         Request := To_Timespec (Time_Chunk);\n+         Result := nanosleep (Request'Access, Remaind'Access);\n+\n+         Check_Time := Clock;\n+\n+         exit when Abs_Time <= Check_Time or else Check_Time < Base_Time;\n+\n+         Time_Chunk := Abs_Time - Check_Time;\n+      end loop;\n+   end if;\n+end Timed_Delay;"}, {"sha": "e3484d4eb6787b72e6692decffccae080ee208b6", "filename": "gcc/ada/libgnat/s-osprim.ads", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5865218e3bf9b40d90c210446fa06e04265ffda0/gcc%2Fada%2Flibgnat%2Fs-osprim.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5865218e3bf9b40d90c210446fa06e04265ffda0/gcc%2Fada%2Flibgnat%2Fs-osprim.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-osprim.ads?ref=5865218e3bf9b40d90c210446fa06e04265ffda0", "patch": "@@ -52,6 +52,10 @@ package System.OS_Primitives is\n    --  with 32-bit words, and possibly on some specific ports of GNAT),\n    --  Duration'Last is used instead.\n \n+   Max_System_Delay : constant Duration := Max_Sensible_Delay;\n+   --  If the Max_System_Delay is larger it doesn't matter. Setting it equal\n+   --  allows optimization of code in some targets delay functions.\n+\n    procedure Initialize;\n    --  Initialize global settings related to this package. This procedure\n    --  should be called before any other subprograms in this package. Note"}, {"sha": "51aa149982a0ce7eec0f1e72dd67c3de2823ce83", "filename": "gcc/ada/libgnat/s-osprim__lynxos.ads", "status": "modified", "additions": 18, "deletions": 6, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5865218e3bf9b40d90c210446fa06e04265ffda0/gcc%2Fada%2Flibgnat%2Fs-osprim__lynxos.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5865218e3bf9b40d90c210446fa06e04265ffda0/gcc%2Fada%2Flibgnat%2Fs-osprim__lynxos.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-osprim__lynxos.ads?ref=5865218e3bf9b40d90c210446fa06e04265ffda0", "patch": "@@ -40,12 +40,24 @@\n package System.OS_Primitives is\n    pragma Preelaborate;\n \n-   Max_Sensible_Delay : constant Duration := 16#10_0000.0#;\n-   --  LynxOS does not support delays as long as half a year, so we set this to\n-   --  a shorter, but still fairly long, duration. Experiments show that if\n-   --  pthread_cond_timedwait is passed an abstime much greater than about\n-   --  2**21, it fails, returning EAGAIN. The cutoff is somewhere between\n-   --  16#20_8000.0# and 16#20_F000.0#. This behavior is not documented.\n+   Max_Sensible_Delay : constant Duration :=\n+                          Duration'Min (183 * 24 * 60 * 60.0,\n+                                        Duration'Last);\n+   --  Max of half a year delay, needed to prevent exceptions for large delay\n+   --  values. It seems unlikely that any test will notice this restriction,\n+   --  except in the case of applications setting the clock at run time (see\n+   --  s-tastim.adb). Also note that a larger value might cause problems (e.g\n+   --  overflow, or more likely OS limitation in the primitives used). In the\n+   --  case where half a year is too long (which occurs in high integrity mode\n+   --  with 32-bit words, and possibly on some specific ports of GNAT),\n+   --  Duration'Last is used instead.\n+\n+   Max_System_Delay : constant Duration := 2147483.0;\n+   --  Note that Max_System_Delay is 2**31 / 1000 truncated.\n+   --  LynxOS does not support delays as long as half a year, only the\n+   --  number of seconds noted in Max_System_Delay, which is used to split\n+   --  delays into chunks no larger than what the system can handle. This\n+   --  maximum was found by experiment and is not documented.\n \n    procedure Initialize;\n    --  Initialize global settings related to this package. This procedure"}, {"sha": "6e1ad9a812f8cdaa040816084a12faa0157645a9", "filename": "gcc/ada/libgnat/s-osprim__posix.adb", "status": "modified", "additions": 1, "deletions": 32, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5865218e3bf9b40d90c210446fa06e04265ffda0/gcc%2Fada%2Flibgnat%2Fs-osprim__posix.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5865218e3bf9b40d90c210446fa06e04265ffda0/gcc%2Fada%2Flibgnat%2Fs-osprim__posix.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-osprim__posix.adb?ref=5865218e3bf9b40d90c210446fa06e04265ffda0", "patch": "@@ -127,38 +127,7 @@ package body System.OS_Primitives is\n    procedure Timed_Delay\n      (Time : Duration;\n       Mode : Integer)\n-   is\n-      Request    : aliased timespec;\n-      Remaind    : aliased timespec;\n-      Rel_Time   : Duration;\n-      Abs_Time   : Duration;\n-      Base_Time  : constant Duration := Clock;\n-      Check_Time : Duration := Base_Time;\n-\n-      Result : Integer;\n-      pragma Unreferenced (Result);\n-\n-   begin\n-      if Mode = Relative then\n-         Rel_Time := Time;\n-         Abs_Time := Time + Check_Time;\n-      else\n-         Rel_Time := Time - Check_Time;\n-         Abs_Time := Time;\n-      end if;\n-\n-      if Rel_Time > 0.0 then\n-         loop\n-            Request := To_Timespec (Rel_Time);\n-            Result := nanosleep (Request'Access, Remaind'Access);\n-            Check_Time := Clock;\n-\n-            exit when Abs_Time <= Check_Time or else Check_Time < Base_Time;\n-\n-            Rel_Time := Abs_Time - Check_Time;\n-         end loop;\n-      end if;\n-   end Timed_Delay;\n+   is separate;\n \n    ----------------\n    -- Initialize --"}, {"sha": "2e717a912a079ce72a231212e82a3aaab67055e4", "filename": "gcc/ada/libgnat/s-osprim__posix2008.adb", "status": "modified", "additions": 1, "deletions": 32, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5865218e3bf9b40d90c210446fa06e04265ffda0/gcc%2Fada%2Flibgnat%2Fs-osprim__posix2008.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5865218e3bf9b40d90c210446fa06e04265ffda0/gcc%2Fada%2Flibgnat%2Fs-osprim__posix2008.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-osprim__posix2008.adb?ref=5865218e3bf9b40d90c210446fa06e04265ffda0", "patch": "@@ -127,38 +127,7 @@ package body System.OS_Primitives is\n    procedure Timed_Delay\n      (Time : Duration;\n       Mode : Integer)\n-   is\n-      Request    : aliased timespec;\n-      Remaind    : aliased timespec;\n-      Rel_Time   : Duration;\n-      Abs_Time   : Duration;\n-      Base_Time  : constant Duration := Clock;\n-      Check_Time : Duration := Base_Time;\n-\n-      Result : Integer;\n-      pragma Unreferenced (Result);\n-\n-   begin\n-      if Mode = Relative then\n-         Rel_Time := Time;\n-         Abs_Time := Time + Check_Time;\n-      else\n-         Rel_Time := Time - Check_Time;\n-         Abs_Time := Time;\n-      end if;\n-\n-      if Rel_Time > 0.0 then\n-         loop\n-            Request := To_Timespec (Rel_Time);\n-            Result := nanosleep (Request'Access, Remaind'Access);\n-            Check_Time := Clock;\n-\n-            exit when Abs_Time <= Check_Time or else Check_Time < Base_Time;\n-\n-            Rel_Time := Abs_Time - Check_Time;\n-         end loop;\n-      end if;\n-   end Timed_Delay;\n+   is separate;\n \n    ----------------\n    -- Initialize --"}]}