{"sha": "52fbb073e9310d2e1f83a4124a24ec83db1b6fd1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTJmYmIwNzNlOTMxMGQyZTFmODNhNDEyNGEyNGVjODNkYjFiNmZkMQ==", "commit": {"author": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2016-04-14T15:25:40Z"}, "committer": {"name": "Martin Sebor", "email": "msebor@gcc.gnu.org", "date": "2016-04-14T15:25:40Z"}, "message": "g++.dg/cpp1y/vla11.C...\n\ng++.dg/cpp1y/vla11.C: Avoid using attribute aligned to increase type\n  size to prevent failures on targets with very low maximum alignment.\n\nFrom-SVN: r234976", "tree": {"sha": "3f5ea2d92140e0fc69236f8f38c346ec49308cd6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3f5ea2d92140e0fc69236f8f38c346ec49308cd6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/52fbb073e9310d2e1f83a4124a24ec83db1b6fd1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52fbb073e9310d2e1f83a4124a24ec83db1b6fd1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/52fbb073e9310d2e1f83a4124a24ec83db1b6fd1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52fbb073e9310d2e1f83a4124a24ec83db1b6fd1/comments", "author": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e387fc6494396c13f68458c7e3ed94d492aca54f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e387fc6494396c13f68458c7e3ed94d492aca54f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e387fc6494396c13f68458c7e3ed94d492aca54f"}], "stats": {"total": 9, "additions": 8, "deletions": 1}, "files": [{"sha": "b7c5d3c632ce9c69356cd24303c75ccafcf088b9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52fbb073e9310d2e1f83a4124a24ec83db1b6fd1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52fbb073e9310d2e1f83a4124a24ec83db1b6fd1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=52fbb073e9310d2e1f83a4124a24ec83db1b6fd1", "patch": "@@ -1,3 +1,9 @@\n+2016-04-14  Martin Sebor  <msebor@redhat.com>\n+\n+\t* g++.dg/cpp1y/vla11.C: Avoid using attribute aligned to increase\n+\ttype size to prevent failures on targets with very low maximum\n+\talignment.\n+\n 2016-04-14  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/70623"}, {"sha": "36609abe53bc5564a848b341f26736568666056d", "filename": "gcc/testsuite/g++.dg/cpp1y/vla11.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52fbb073e9310d2e1f83a4124a24ec83db1b6fd1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fvla11.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52fbb073e9310d2e1f83a4124a24ec83db1b6fd1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fvla11.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fvla11.C?ref=52fbb073e9310d2e1f83a4124a24ec83db1b6fd1", "patch": "@@ -86,9 +86,10 @@ sink (void *p, int line, bool expect, const char *expr)\n // that the checking code can deal with templates (i.e., completes\n // the element type of the VLA when necessary).\n template <unsigned TypeSize>\n-struct alignas (TypeSize) TestType\n+union TestType\n {\n   char data;\n+  char padding [TypeSize];\n };\n \n // Test function invoked with a pointer to each test case.  Must"}]}