{"sha": "3c022a4c732163549ee999fb0b1846215cf0a671", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2MwMjJhNGM3MzIxNjM1NDllZTk5OWZiMGIxODQ2MjE1Y2YwYTY3MQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-10-05T07:34:42Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-10-05T07:34:42Z"}, "message": "options: Save and restore opts_set for Optimization and Target options fallout\n\n> This breaks ia64:\n>\n> In file included from ./tm.h:23,\n>                  from ../../gcc/gencheck.c:23:\n> ./options.h:7816:40: error: ISO C++ forbids zero-size array 'explicit_mask' [-Werror=pedantic]\n>  7816 |   unsigned HOST_WIDE_INT explicit_mask[0];\n>       |                                        ^\n> ./options.h:7816:26: error: zero-size array member 'cl_target_option::explicit_mask' not at end of 'struct cl_target_option' [-Werror=pedantic]\n>  7816 |   unsigned HOST_WIDE_INT explicit_mask[0];\n>       |                          ^~~~~~~~~~~~~\n> ./options.h:7812:16: note: in the definition of 'struct cl_target_option'\n>  7812 | struct GTY(()) cl_target_option\n>       |                ^~~~~~~~~~~~~~~~\n\nOops, sorry.\n\nThe following patch should fix that and should also fix streaming of the\nnew explicit_mask_* members.\n\n2020-10-05  Jakub Jelinek  <jakub@redhat.com>\n\n\t* opth-gen.awk: Don't emit explicit_mask array if n_target_explicit\n\tis equal to n_target_explicit_mask.\n\t* optc-save-gen.awk: Compute has_target_explicit_mask and if false,\n\tdon't emit code iterating over explicit_mask array elements.  Stream\n\talso explicit_mask_* target members.", "tree": {"sha": "881c19f8fc7f85c8916384113a63ff44ca79a5d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/881c19f8fc7f85c8916384113a63ff44ca79a5d3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3c022a4c732163549ee999fb0b1846215cf0a671", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c022a4c732163549ee999fb0b1846215cf0a671", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c022a4c732163549ee999fb0b1846215cf0a671", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c022a4c732163549ee999fb0b1846215cf0a671/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "21f65995e068963d4ceaec5b6730223213e98af7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21f65995e068963d4ceaec5b6730223213e98af7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/21f65995e068963d4ceaec5b6730223213e98af7"}], "stats": {"total": 59, "additions": 49, "deletions": 10}, "files": [{"sha": "5169acd5f58f9b90c0c7cd0aa6a9451dbc3317e5", "filename": "gcc/optc-save-gen.awk", "status": "modified", "additions": 45, "deletions": 9, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c022a4c732163549ee999fb0b1846215cf0a671/gcc%2Foptc-save-gen.awk", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c022a4c732163549ee999fb0b1846215cf0a671/gcc%2Foptc-save-gen.awk", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptc-save-gen.awk?ref=3c022a4c732163549ee999fb0b1846215cf0a671", "patch": "@@ -689,6 +689,10 @@ for (i = 0; i < n_target_string; i++) {\n if (j != 0) {\n \tprint \"  ptr->explicit_mask[\" k \"] = mask;\";\n }\n+has_target_explicit_mask = 0;\n+if (j != 0 || k != 0) {\n+\thas_target_explicit_mask = 1;\n+}\n \n print \"}\";\n \n@@ -1075,9 +1079,11 @@ for (i = 0; i < n_target_val; i++) {\n \tprint \"    return false;\";\n }\n \n-print \"  for (size_t i = 0; i < sizeof (ptr1->explicit_mask) / sizeof (ptr1->explicit_mask[0]); i++)\";\n-print \"    if (ptr1->explicit_mask[i] != ptr2->explicit_mask[i])\";\n-print \"      return false;\"\n+if (has_target_explicit_mask) {\n+\tprint \"  for (size_t i = 0; i < sizeof (ptr1->explicit_mask) / sizeof (ptr1->explicit_mask[0]); i++)\";\n+\tprint \"    if (ptr1->explicit_mask[i] != ptr2->explicit_mask[i])\";\n+\tprint \"      return false;\"\n+}\n \n for (i = 0; i < n_target_other; i++) {\n \tif (var_target_other[i] in var_target_explicit_mask) {\n@@ -1121,8 +1127,10 @@ for (i = 0; i < n_target_val; i++) {\n \tname = var_target_val[i]\n \tprint \"  hstate.add_hwi (ptr->\" name\");\";\n }\n-print \"  for (size_t i = 0; i < sizeof (ptr->explicit_mask) / sizeof (ptr->explicit_mask[0]); i++)\";\n-print \"    hstate.add_hwi (ptr->explicit_mask[i]);\";\n+if (has_target_explicit_mask) {\n+\tprint \"  for (size_t i = 0; i < sizeof (ptr->explicit_mask) / sizeof (ptr->explicit_mask[0]); i++)\";\n+\tprint \"    hstate.add_hwi (ptr->explicit_mask[i]);\";\n+}\n \n for (i = 0; i < n_target_other; i++) {\n \tif (var_target_other[i] in var_target_explicit_mask)\n@@ -1159,8 +1167,22 @@ for (i = 0; i < n_target_val; i++) {\n \tprint \"  bp_pack_value (bp, ptr->\" name\", 64);\";\n }\n \n-print \"  for (size_t i = 0; i < sizeof (ptr->explicit_mask) / sizeof (ptr->explicit_mask[0]); i++)\";\n-print \"    bp_pack_value (bp, ptr->explicit_mask[i], 64);\";\n+if (has_target_explicit_mask) {\n+\tprint \"  for (size_t i = 0; i < sizeof (ptr->explicit_mask) / sizeof (ptr->explicit_mask[0]); i++)\";\n+\tprint \"    bp_pack_value (bp, ptr->explicit_mask[i], 64);\";\n+}\n+\n+for (i = 0; i < n_target_other; i++) {\n+\tif (var_target_other[i] in var_target_explicit_mask) {\n+\t\tprint \"  bp_pack_value (bp, ptr->explicit_mask_\" var_target_other[i] \", 64);\";\n+\t}\n+}\n+\n+for (i = 0; i < n_target_int; i++) {\n+\tif (var_target_int[i] in var_target_explicit_mask) {\n+\t\tprint \"  bp_pack_value (bp, ptr->explicit_mask_\" var_target_int[i] \", 64);\";\n+\t}\n+}\n \n print \"}\";\n \n@@ -1188,8 +1210,22 @@ for (i = 0; i < n_target_val; i++) {\n \tprint \"  ptr->\" name\" = (\" var_target_val_type[i] \") bp_unpack_value (bp, 64);\";\n }\n \n-print \"  for (size_t i = 0; i < sizeof (ptr->explicit_mask) / sizeof (ptr->explicit_mask[0]); i++)\";\n-print \"    ptr->explicit_mask[i] = bp_unpack_value (bp, 64);\";\n+if (has_target_explicit_mask) {\n+\tprint \"  for (size_t i = 0; i < sizeof (ptr->explicit_mask) / sizeof (ptr->explicit_mask[0]); i++)\";\n+\tprint \"    ptr->explicit_mask[i] = bp_unpack_value (bp, 64);\";\n+}\n+\n+for (i = 0; i < n_target_other; i++) {\n+\tif (var_target_other[i] in var_target_explicit_mask) {\n+\t\tprint \"  ptr->explicit_mask_\" var_target_other[i] \" = bp_unpack_value (bp, 64);\";\n+\t}\n+}\n+\n+for (i = 0; i < n_target_int; i++) {\n+\tif (var_target_int[i] in var_target_explicit_mask) {\n+\t\tprint \"  ptr->explicit_mask_\" var_target_int[i] \" = bp_unpack_value (bp, 64);\";\n+\t}\n+}\n \n print \"}\";\n "}, {"sha": "a456b51e893c55d32eaa82e2dc28a30475dc814a", "filename": "gcc/opth-gen.awk", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c022a4c732163549ee999fb0b1846215cf0a671/gcc%2Fopth-gen.awk", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c022a4c732163549ee999fb0b1846215cf0a671/gcc%2Fopth-gen.awk", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopth-gen.awk?ref=3c022a4c732163549ee999fb0b1846215cf0a671", "patch": "@@ -291,7 +291,10 @@ for (i = 0; i < n_target_char; i++) {\n }\n \n print \"  /* \" n_target_explicit - n_target_explicit_mask \" members */\";\n-print \"  unsigned HOST_WIDE_INT explicit_mask[\" int ((n_target_explicit - n_target_explicit_mask + 63) / 64) \"];\";\n+if (n_target_explicit > n_target_explicit_mask) {\n+\tprint \"  unsigned HOST_WIDE_INT explicit_mask[\" \\\n+\t  int ((n_target_explicit - n_target_explicit_mask + 63) / 64) \"];\";\n+}\n \n for (i = 0; i < n_target_explicit_mask; i++) {\n \tprint \"  \" var_target_explicit_mask[i] \";\";"}]}