{"sha": "ad277369b236a39fff13c87a51a8e67f7562a80a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWQyNzczNjliMjM2YTM5ZmZmMTNjODdhNTFhOGU2N2Y3NTYyYTgwYQ==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2019-07-22T13:58:27Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-07-22T13:58:27Z"}, "message": "[Ada] Remove misleading warning/suggestion in membership test\n\nThis patch removes a warning on a membership test whose right operand is\ngiven by a range. In many cases the check can be replaced by the use of\nattribute 'Valid, but if the bounds of range are type conversion this\nreplacement would be invorrect and the warning and suggestion are\nmisleading.\n\n2019-07-22  Ed Schonberg  <schonberg@adacore.com>\n\ngcc/ada/\n\n\t* exp_ch4.adb (Expand_N_In): Do not suggest the use of attribute\n\t'Valid as a replacement for a range check on a discrete type\n\twhen the bounds of the range are given by type conversions,\n\tbecause in such a case there are distinct types involved and the\n\tsubbested attribute replacement would be misplaced.\n\ngcc/testsuite/\n\n\t* gnat.dg/warn26.adb: New testcase.\n\nFrom-SVN: r273694", "tree": {"sha": "c1024ac2b531153bfb6a22989c8d9ff4e3dcfa63", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c1024ac2b531153bfb6a22989c8d9ff4e3dcfa63"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ad277369b236a39fff13c87a51a8e67f7562a80a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad277369b236a39fff13c87a51a8e67f7562a80a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad277369b236a39fff13c87a51a8e67f7562a80a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad277369b236a39fff13c87a51a8e67f7562a80a/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a211917585ca978a84123c4c934f2f68bb545bcd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a211917585ca978a84123c4c934f2f68bb545bcd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a211917585ca978a84123c4c934f2f68bb545bcd"}], "stats": {"total": 41, "additions": 41, "deletions": 0}, "files": [{"sha": "ef329453247bcaebed0566ece53245dc7ee33c36", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad277369b236a39fff13c87a51a8e67f7562a80a/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad277369b236a39fff13c87a51a8e67f7562a80a/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=ad277369b236a39fff13c87a51a8e67f7562a80a", "patch": "@@ -1,3 +1,11 @@\n+2019-07-22  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* exp_ch4.adb (Expand_N_In): Do not suggest the use of attribute\n+\t'Valid as a replacement for a range check on a discrete type\n+\twhen the bounds of the range are given by type conversions,\n+\tbecause in such a case there are distinct types involved and the\n+\tsubbested attribute replacement would be misplaced.\n+\n 2019-07-22  Yannick Moy  <moy@adacore.com>\n \n \t* sem_spark.adb (Get_Root_Object, Is_Path_Expression,"}, {"sha": "7ef75f602f40f95961693b214f41005c17fbb6fe", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad277369b236a39fff13c87a51a8e67f7562a80a/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad277369b236a39fff13c87a51a8e67f7562a80a/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=ad277369b236a39fff13c87a51a8e67f7562a80a", "patch": "@@ -6272,13 +6272,22 @@ package body Exp_Ch4 is\n               --  Similarly, do not rewrite membership as a validity check if\n               --  within the predicate function for the type.\n \n+              --  Finally, if the original bounds are type conversions, even\n+              --  if they have been folded into constants, there are different\n+              --  types involved and 'Valid is not appropriate.\n+\n             then\n                if In_Instance\n                  or else (Ekind (Current_Scope) = E_Function\n                            and then Is_Predicate_Function (Current_Scope))\n                then\n                   null;\n \n+               elsif Nkind (Lo_Orig) = N_Type_Conversion\n+                 or else Nkind (Hi_Orig) = N_Type_Conversion\n+               then\n+                  null;\n+\n                else\n                   Substitute_Valid_Check;\n                   goto Leave;"}, {"sha": "d8daa2dbddef441284c61ac24ae9546e1e0ddfa7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad277369b236a39fff13c87a51a8e67f7562a80a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad277369b236a39fff13c87a51a8e67f7562a80a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ad277369b236a39fff13c87a51a8e67f7562a80a", "patch": "@@ -1,3 +1,7 @@\n+2019-07-22  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* gnat.dg/warn26.adb: New testcase.\n+\n 2019-07-22  Javier Miranda  <miranda@adacore.com>\n \n \t* gnat.dg/class_wide5.adb: New testcase."}, {"sha": "08b681ffc1a918c6a992097339981eb09b20b86a", "filename": "gcc/testsuite/gnat.dg/warn26.adb", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad277369b236a39fff13c87a51a8e67f7562a80a/gcc%2Ftestsuite%2Fgnat.dg%2Fwarn26.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad277369b236a39fff13c87a51a8e67f7562a80a/gcc%2Ftestsuite%2Fgnat.dg%2Fwarn26.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fwarn26.adb?ref=ad277369b236a39fff13c87a51a8e67f7562a80a", "patch": "@@ -0,0 +1,20 @@\n+--  { dg-do compile }\n+\n+procedure Warn26 is\n+\n+   Monitor_Period_Min : constant := 5;\n+   Monitor_Period_Max : constant := 30;\n+\n+   type Monitor_Period is range Monitor_Period_Min .. Monitor_Period_Max;\n+\n+   subtype Period_T is Positive range 5 .. 30;\n+\n+   function Id (X : Period_T) return Period_T is (X);\n+   Input_Period : Period_T := Id (20);\n+begin\n+   if Input_Period in\n+      Integer (Monitor_Period'First) .. Integer ( Monitor_Period'Last)\n+   then\n+      null;\n+   end if;\n+end Warn26;"}]}