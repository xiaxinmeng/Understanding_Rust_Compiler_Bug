{"sha": "e50ab9ee27eb6252b7f47b7a7dce080d02db377a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTUwYWI5ZWUyN2ViNjI1MmI3ZjQ3YjdhN2RjZTA4MGQwMmRiMzc3YQ==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1997-07-02T13:52:15Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1997-07-02T13:52:15Z"}, "message": "Do not go beyond end of array\n\nFrom-SVN: r14384", "tree": {"sha": "fc544474ff60d4301b54c20fe41729425c86fc97", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fc544474ff60d4301b54c20fe41729425c86fc97"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e50ab9ee27eb6252b7f47b7a7dce080d02db377a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e50ab9ee27eb6252b7f47b7a7dce080d02db377a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e50ab9ee27eb6252b7f47b7a7dce080d02db377a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e50ab9ee27eb6252b7f47b7a7dce080d02db377a/comments", "author": null, "committer": null, "parents": [{"sha": "26ef0fc85ad606e4460192502175ee2c8e42abed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26ef0fc85ad606e4460192502175ee2c8e42abed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/26ef0fc85ad606e4460192502175ee2c8e42abed"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "1c67f1c51597a5d1ce19d9c5eb12964323214a50", "filename": "gcc/loop.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e50ab9ee27eb6252b7f47b7a7dce080d02db377a/gcc%2Floop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e50ab9ee27eb6252b7f47b7a7dce080d02db377a/gcc%2Floop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop.c?ref=e50ab9ee27eb6252b7f47b7a7dce080d02db377a", "patch": "@@ -3961,6 +3961,7 @@ strength_reduce (scan_start, end, loop_top, insn_count,\n \t\t\t      other_giv = tv;\n \t\t\t  }\n \t\t      if (! tv && other_giv\n+\t\t\t  && REGNO (other_giv->dest_reg) <= max_reg_before_loop\n \t\t\t  && (REGNO_LAST_UID (REGNO (other_giv->dest_reg))\n \t\t\t      == INSN_UID (v->insn))\n \t\t\t  && INSN_LUID (v->insn) < INSN_LUID (bl->biv->insn))"}]}