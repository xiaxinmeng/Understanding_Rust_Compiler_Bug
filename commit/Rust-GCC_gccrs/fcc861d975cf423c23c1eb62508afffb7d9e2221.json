{"sha": "fcc861d975cf423c23c1eb62508afffb7d9e2221", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmNjODYxZDk3NWNmNDIzYzIzYzFlYjYyNTA4YWZmZmI3ZDllMjIyMQ==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@gmail.com", "date": "2016-05-03T14:43:35Z"}, "committer": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2016-05-03T14:43:35Z"}, "message": "PR70890, stage2 miscompilation\n\n\tPR rtl-optimization/70890\n\t* ira.c (combine_and_move_insns): When moving def_insn, remove\n\tequivs on use_insn.\n\nFrom-SVN: r235825", "tree": {"sha": "b7e5fae121b10c3ecaa3f41fe7e34024ab63a9f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b7e5fae121b10c3ecaa3f41fe7e34024ab63a9f2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fcc861d975cf423c23c1eb62508afffb7d9e2221", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fcc861d975cf423c23c1eb62508afffb7d9e2221", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fcc861d975cf423c23c1eb62508afffb7d9e2221", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fcc861d975cf423c23c1eb62508afffb7d9e2221/comments", "author": {"login": "amodra", "id": 6006325, "node_id": "MDQ6VXNlcjYwMDYzMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amodra", "html_url": "https://github.com/amodra", "followers_url": "https://api.github.com/users/amodra/followers", "following_url": "https://api.github.com/users/amodra/following{/other_user}", "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}", "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amodra/subscriptions", "organizations_url": "https://api.github.com/users/amodra/orgs", "repos_url": "https://api.github.com/users/amodra/repos", "events_url": "https://api.github.com/users/amodra/events{/privacy}", "received_events_url": "https://api.github.com/users/amodra/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f3d9004571a9fa52f2aa2cbbee82a4e4c1e9e65b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3d9004571a9fa52f2aa2cbbee82a4e4c1e9e65b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f3d9004571a9fa52f2aa2cbbee82a4e4c1e9e65b"}], "stats": {"total": 22, "additions": 22, "deletions": 0}, "files": [{"sha": "7cd0bd4f73de1033539dc13b9e40d5b628c0db88", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fcc861d975cf423c23c1eb62508afffb7d9e2221/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fcc861d975cf423c23c1eb62508afffb7d9e2221/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fcc861d975cf423c23c1eb62508afffb7d9e2221", "patch": "@@ -1,3 +1,9 @@\n+2016-05-03  Alan Modra  <amodra@gmail.com>\n+\n+\tPR rtl-optimization/70890\n+\t* ira.c (combine_and_move_insns): When moving def_insn, remove\n+\tequivs on use_insn.\n+\n 2016-05-03  Dominik Vogt  <vogt@linux.vnet.ibm.com>\n \n \t* config/s390/s390.md (\"*r<noxa>sbg_<mode>_sll\")"}, {"sha": "55b4bd700be81dd9d7b5644db66ddec65a31da6c", "filename": "gcc/ira.c", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fcc861d975cf423c23c1eb62508afffb7d9e2221/gcc%2Fira.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fcc861d975cf423c23c1eb62508afffb7d9e2221/gcc%2Fira.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fira.c?ref=fcc861d975cf423c23c1eb62508afffb7d9e2221", "patch": "@@ -3742,6 +3742,22 @@ combine_and_move_insns (void)\n \t  if (use_insn == BB_HEAD (use_bb))\n \t    BB_HEAD (use_bb) = new_insn;\n \n+\t  /* We know regno dies in use_insn, but inside a loop\n+\t     REG_DEAD notes might be missing when def_insn was in\n+\t     another basic block.  However, when we move def_insn into\n+\t     this bb we'll definitely get a REG_DEAD note and reload\n+\t     will see the death.  It's possible that update_equiv_regs\n+\t     set up an equivalence referencing regno for a reg set by\n+\t     use_insn, when regno was seen as non-local.  Now that\n+\t     regno is local to this block, and dies, such an\n+\t     equivalence is invalid.  */\n+\t  if (find_reg_note (use_insn, REG_EQUIV, NULL_RTX))\n+\t    {\n+\t      rtx set = single_set (use_insn);\n+\t      if (set && REG_P (SET_DEST (set)))\n+\t\tno_equiv (SET_DEST (set), set, NULL);\n+\t    }\n+\n \t  ira_reg_equiv[regno].init_insns\n \t    = gen_rtx_INSN_LIST (VOIDmode, new_insn, NULL_RTX);\n \t  bitmap_set_bit (cleared_regs, regno);"}]}