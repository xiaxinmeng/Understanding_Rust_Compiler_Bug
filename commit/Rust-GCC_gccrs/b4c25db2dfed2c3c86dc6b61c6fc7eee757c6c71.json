{"sha": "b4c25db2dfed2c3c86dc6b61c6fc7eee757c6c71", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjRjMjVkYjJkZmVkMmMzYzg2ZGM2YjYxYzZmYzdlZWU3NTdjNmM3MQ==", "commit": {"author": {"name": "Neil Booth", "email": "neil@daikokuya.demon.co.uk", "date": "2001-07-08T19:55:57Z"}, "committer": {"name": "Neil Booth", "email": "neil@gcc.gnu.org", "date": "2001-07-08T19:55:57Z"}, "message": "final.c (no_asm_to_stream): New.\n\n\t* final.c (no_asm_to_stream): New.\n\t(final_scan_insn): Use target structures for prologue ends\n\tand epilogue starts.\n\t* output.h (no_asm_to_stream): New.\n\t* target-def.h (TARGET_ASM_FUNCTION_END_PROLOGUE,\n\tTARGET_ASM_FUNCTION_BEGIN_EPILOGUE): New.\n\t(TARGET_ASM_OUT): Update.\n\t* target.h (struct gcc_target): New members function_end_prologue\n\tand function_begin_epilogue.\nconfig:\n\t* 1750/1750.h (ASM_OUTPUT_FUNNAM): Delete as unused.\n\t* alpha/alpha-protos.h (output_end_prologue): Delete.\n\t* alpha/alpha.c (output_end_prologue): Rename to\n\talpha_output_function_end_prologue.  Use in target struct\n\tand make static.\n\t* alpha/alpha.h (FUNCTION_END_PROLOGUE): Delete.\n\t* ia64/ia64-protos.h (ia64_output_end_prologue): Delete.\n\t* ia64/ia64.c (ia64_output_end_prologue): Rename to\n\tia64_output_function_end_prologue.  Use in target struct\n\tand make static.\n\t(ia64_function_prologue, ia64_funciton_epilogue): Rename\n\tmistyped prototypes.\n\t* ia64/ia64.h (FUNCTION_END_PROLOGUE): Delete.\n\t* m88k/m88k-protos.h (m88k_end_prologue, m88k_begin_epilogue): Delete.\n\t* m88k/m88k.c (m88k_end_prologue, m88k_begin_epilogue): Rename\n\tan use in target struct, make static.\n\t* ia64/ia64.h (FUNCTION_END_PROLOGUE, FUNCTION_BEGIN_EPILOGUE): Delete.\n\nFrom-SVN: r43849", "tree": {"sha": "f1cd605c4fdd2d9ac8a6658db5b0993421ca3959", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f1cd605c4fdd2d9ac8a6658db5b0993421ca3959"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b4c25db2dfed2c3c86dc6b61c6fc7eee757c6c71", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4c25db2dfed2c3c86dc6b61c6fc7eee757c6c71", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b4c25db2dfed2c3c86dc6b61c6fc7eee757c6c71", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4c25db2dfed2c3c86dc6b61c6fc7eee757c6c71/comments", "author": null, "committer": null, "parents": [{"sha": "45c8268d06270cff703a2caf0d20eea043759bdc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45c8268d06270cff703a2caf0d20eea043759bdc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/45c8268d06270cff703a2caf0d20eea043759bdc"}], "stats": {"total": 117, "additions": 79, "deletions": 38}, "files": [{"sha": "066f66cde2a6ed92fb2201602dfa33fd00a00abc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c25db2dfed2c3c86dc6b61c6fc7eee757c6c71/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c25db2dfed2c3c86dc6b61c6fc7eee757c6c71/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b4c25db2dfed2c3c86dc6b61c6fc7eee757c6c71", "patch": "@@ -1,3 +1,34 @@\n+2001-07-08  Neil Booth  <neil@daikokuya.demon.co.uk>\n+\n+\t* final.c (no_asm_to_stream): New.\n+\t(final_scan_insn): Use target structures for prologue ends\n+\tand epilogue starts.\n+\t* output.h (no_asm_to_stream): New.\n+\t* target-def.h (TARGET_ASM_FUNCTION_END_PROLOGUE,\n+\tTARGET_ASM_FUNCTION_BEGIN_EPILOGUE): New.\n+\t(TARGET_ASM_OUT): Update.\n+\t* target.h (struct gcc_target): New members function_end_prologue\n+\tand function_begin_epilogue.\n+config:\n+\t* 1750/1750.h (ASM_OUTPUT_FUNNAM): Delete as unused.\n+\t* alpha/alpha-protos.h (output_end_prologue): Delete.\n+\t* alpha/alpha.c (output_end_prologue): Rename to\n+\talpha_output_function_end_prologue.  Use in target struct\n+\tand make static.\n+\t* alpha/alpha.h (FUNCTION_END_PROLOGUE): Delete.\n+\t* ia64/ia64-protos.h (ia64_output_end_prologue): Delete.\n+\t* ia64/ia64.c (ia64_output_end_prologue): Rename to\n+\tia64_output_function_end_prologue.  Use in target struct\n+\tand make static.\n+\t(ia64_function_prologue, ia64_funciton_epilogue): Rename\n+\tmistyped prototypes.\n+\t* ia64/ia64.h (FUNCTION_END_PROLOGUE): Delete.\n+\t* m88k/m88k-protos.h (m88k_end_prologue, m88k_begin_epilogue): Delete.\n+\t* m88k/m88k.c (m88k_end_prologue, m88k_begin_epilogue): Rename\n+\tan use in target struct, make static.\n+\t* ia64/ia64.h (FUNCTION_END_PROLOGUE, FUNCTION_BEGIN_EPILOGUE): Delete.\n+\n+\n 2001-07-08  Richard Henderson  <rth@redhat.com>\n \n \t* stmt.c (emit_case_nodes): Convert modes properly in low+high test."}, {"sha": "abaa74397135ba3bcf42c647630a4299201f51f7", "filename": "gcc/config/1750a/1750a.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c25db2dfed2c3c86dc6b61c6fc7eee757c6c71/gcc%2Fconfig%2F1750a%2F1750a.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c25db2dfed2c3c86dc6b61c6fc7eee757c6c71/gcc%2Fconfig%2F1750a%2F1750a.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2F1750a%2F1750a.h?ref=b4c25db2dfed2c3c86dc6b61c6fc7eee757c6c71", "patch": "@@ -973,9 +973,6 @@ enum reg_class { NO_REGS, R2, R0_1, INDEX_REGS, BASE_REGS, ALL_REGS, LIM_REG_CLA\n \n #define ASM_COMMENT_START  \";\"\n \n-#define ASM_OUTPUT_FUNNAM(FILE,NAME)\t\\\n-\tfprintf(FILE,\"%s\\n\",NAME)\n-\n #define ASM_OUTPUT_OPCODE(FILE,PTR)  do {\t\t\\\n \twhile (*(PTR) != '\\0' && *(PTR) != ' ') {\t\\\n \t    putc (*(PTR), FILE);\t\t\t\\"}, {"sha": "a625ece21affbc8e8e4ccc0d74ff0d4e7956286a", "filename": "gcc/config/alpha/alpha-protos.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c25db2dfed2c3c86dc6b61c6fc7eee757c6c71/gcc%2Fconfig%2Falpha%2Falpha-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c25db2dfed2c3c86dc6b61c6fc7eee757c6c71/gcc%2Fconfig%2Falpha%2Falpha-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha-protos.h?ref=b4c25db2dfed2c3c86dc6b61c6fc7eee757c6c71", "patch": "@@ -28,7 +28,6 @@ extern int alpha_pv_save_size PARAMS ((void));\n extern int alpha_using_fp PARAMS ((void));\n extern void alpha_write_verstamp PARAMS ((FILE *));\n extern void alpha_expand_prologue PARAMS ((void));\n-extern void output_end_prologue PARAMS ((FILE *));\n extern void alpha_expand_epilogue PARAMS ((void));\n extern void alpha_output_filename PARAMS ((FILE *, const char *));\n extern void alpha_output_lineno PARAMS ((FILE *, int));"}, {"sha": "ec70eb10bf0fc9c43d1a8ee0029b1518c6b3608b", "filename": "gcc/config/alpha/alpha.c", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c25db2dfed2c3c86dc6b61c6fc7eee757c6c71/gcc%2Fconfig%2Falpha%2Falpha.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c25db2dfed2c3c86dc6b61c6fc7eee757c6c71/gcc%2Fconfig%2Falpha%2Falpha.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.c?ref=b4c25db2dfed2c3c86dc6b61c6fc7eee757c6c71", "patch": "@@ -129,6 +129,8 @@ static void alpha_emit_xfloating_libcall\n   PARAMS ((const char *, rtx, rtx[], int, rtx));\n static rtx alpha_emit_xfloating_compare\n   PARAMS ((enum rtx_code, rtx, rtx));\n+static void alpha_output_function_end_prologue\n+  PARAMS ((FILE *));\n \n /* Get the number of args of a function in one of two ways.  */\n #ifdef OPEN_VMS\n@@ -147,6 +149,9 @@ static rtx alpha_emit_xfloating_compare\n #  define TARGET_VALID_DECL_ATTRIBUTE vms_valid_decl_attribute_p\n #endif\n \n+#undef TARGET_ASM_FUNCTION_END_PROLOGUE\n+#define TARGET_ASM_FUNCTION_END_PROLOGUE alpha_output_function_end_prologue\n+\n struct gcc_target targetm = TARGET_INITIALIZER;\n \f\n /* Parse target option strings. */\n@@ -5001,8 +5006,8 @@ alpha_start_function (file, fnname, decl)\n \n /* Emit the .prologue note at the scheduled end of the prologue.  */\n \n-void\n-output_end_prologue (file)\n+static void\n+alpha_output_function_end_prologue (file)\n      FILE *file;\n {\n   if (TARGET_OPEN_VMS)"}, {"sha": "832c8951c4081b370fc2401812d923d77249f613", "filename": "gcc/config/alpha/alpha.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c25db2dfed2c3c86dc6b61c6fc7eee757c6c71/gcc%2Fconfig%2Falpha%2Falpha.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c25db2dfed2c3c86dc6b61c6fc7eee757c6c71/gcc%2Fconfig%2Falpha%2Falpha.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.h?ref=b4c25db2dfed2c3c86dc6b61c6fc7eee757c6c71", "patch": "@@ -1202,10 +1202,6 @@ extern struct alpha_compare alpha_compare;\n #define ASM_DECLARE_FUNCTION_SIZE(FILE,NAME,DECL) \\\n   alpha_end_function(FILE,NAME,DECL)\n    \n-/* This macro notes the end of the prologue.  */\n-\n-#define FUNCTION_END_PROLOGUE(FILE)  output_end_prologue (FILE)\n-\n /* Output any profiling code before the prologue.  */\n \n #define PROFILE_BEFORE_PROLOGUE 1"}, {"sha": "80f7479a14836a473a5676cb7534232252e9da42", "filename": "gcc/config/ia64/ia64-protos.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c25db2dfed2c3c86dc6b61c6fc7eee757c6c71/gcc%2Fconfig%2Fia64%2Fia64-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c25db2dfed2c3c86dc6b61c6fc7eee757c6c71/gcc%2Fconfig%2Fia64%2Fia64-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64-protos.h?ref=b4c25db2dfed2c3c86dc6b61c6fc7eee757c6c71", "patch": "@@ -128,7 +128,6 @@ extern void ia64_encode_section_info PARAMS((tree));\n extern int ia64_register_move_cost PARAMS((enum reg_class, enum reg_class));\n extern int ia64_epilogue_uses PARAMS((int));\n extern void emit_safe_across_calls PARAMS((FILE *));\n-extern void ia64_output_end_prologue PARAMS((FILE *));\n extern void ia64_init_builtins PARAMS((void));\n extern void ia64_override_options PARAMS((void));\n extern int ia64_dbx_register_number PARAMS((int));"}, {"sha": "a09a7b7b471f1fb6d591685cd1ceb28d37dbe67b", "filename": "gcc/config/ia64/ia64.c", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c25db2dfed2c3c86dc6b61c6fc7eee757c6c71/gcc%2Fconfig%2Fia64%2Fia64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c25db2dfed2c3c86dc6b61c6fc7eee757c6c71/gcc%2Fconfig%2Fia64%2Fia64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.c?ref=b4c25db2dfed2c3c86dc6b61c6fc7eee757c6c71", "patch": "@@ -137,15 +137,18 @@ static rtx ia64_expand_lock_test_and_set PARAMS ((enum machine_mode,\n \t\t\t\t\t\t  tree, rtx));\n static rtx ia64_expand_lock_release PARAMS ((enum machine_mode, tree, rtx));\n static int ia64_valid_type_attribute PARAMS((tree, tree, tree, tree));\n-static void ia64_function_prologue PARAMS((FILE *, HOST_WIDE_INT));\n-static void ia64_function_epilogue PARAMS((FILE *, HOST_WIDE_INT));\n+static void ia64_output_function_prologue PARAMS ((FILE *, HOST_WIDE_INT));\n+static void ia64_output_function_epilogue PARAMS ((FILE *, HOST_WIDE_INT));\n+static void ia64_output_function_end_prologue PARAMS ((FILE *));\n \f\n /* Initialize the GCC target structure.  */\n #undef TARGET_VALID_TYPE_ATTRIBUTE\n #define TARGET_VALID_TYPE_ATTRIBUTE ia64_valid_type_attribute\n \n #undef TARGET_ASM_FUNCTION_PROLOGUE\n #define TARGET_ASM_FUNCTION_PROLOGUE ia64_output_function_prologue\n+#undef TARGET_ASM_FUNCTION_END_PROLOGUE\n+#define TARGET_ASM_FUNCTION_END_PROLOGUE ia64_output_function_end_prologue\n #undef TARGET_ASM_FUNCTION_EPILOGUE\n #define TARGET_ASM_FUNCTION_EPILOGUE ia64_output_function_epilogue\n \n@@ -2572,8 +2575,8 @@ ia64_output_function_prologue (file, size)\n \n /* Emit the .body directive at the scheduled end of the prologue.  */\n \n-void\n-ia64_output_end_prologue (file)\n+static void\n+ia64_output_function_end_prologue (file)\n      FILE *file;\n {\n   if (!flag_unwind_tables && (!flag_exceptions || USING_SJLJ_EXCEPTIONS))"}, {"sha": "0944daa548a0cfee05d81c094d8dd2af947635b1", "filename": "gcc/config/ia64/ia64.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c25db2dfed2c3c86dc6b61c6fc7eee757c6c71/gcc%2Fconfig%2Fia64%2Fia64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c25db2dfed2c3c86dc6b61c6fc7eee757c6c71/gcc%2Fconfig%2Fia64%2Fia64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.h?ref=b4c25db2dfed2c3c86dc6b61c6fc7eee757c6c71", "patch": "@@ -1458,10 +1458,6 @@ do {\t\t\t\t\t\t\t\t\t\\\n \f\n /* Function Entry and Exit */\n \n-/* This macro notes the end of the prologue.  */\n-\n-#define FUNCTION_END_PROLOGUE(FILE)  ia64_output_end_prologue (FILE)\n-\n /* Define this macro as a C expression that is nonzero if the return\n    instruction or the function epilogue ignores the value of the stack pointer;\n    in other words, if it is safe to delete an instruction to adjust the stack"}, {"sha": "93818aea10b8a9e077ae0e9e954c904ade24ebaf", "filename": "gcc/config/m88k/m88k-protos.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c25db2dfed2c3c86dc6b61c6fc7eee757c6c71/gcc%2Fconfig%2Fm88k%2Fm88k-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c25db2dfed2c3c86dc6b61c6fc7eee757c6c71/gcc%2Fconfig%2Fm88k%2Fm88k-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm88k%2Fm88k-protos.h?ref=b4c25db2dfed2c3c86dc6b61c6fc7eee757c6c71", "patch": "@@ -84,9 +84,7 @@ extern int null_prologue PARAMS ((void));\n extern int integer_ok_for_set PARAMS ((unsigned));\n extern void m88k_layout_frame PARAMS ((void));\n extern void m88k_expand_prologue PARAMS ((void));\n-extern void m88k_end_prologue PARAMS ((FILE *));\n extern void m88k_expand_epilogue PARAMS ((void));\n-extern void m88k_begin_epilogue PARAMS ((FILE *));\n extern void output_function_profiler PARAMS ((FILE *, int, const char *, int));\n extern void output_function_block_profiler PARAMS ((FILE *, int));\n extern void output_block_profiler PARAMS ((FILE *, int));"}, {"sha": "63e46448bfcb1ffb4b63451571b0ac3572b7289f", "filename": "gcc/config/m88k/m88k.c", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c25db2dfed2c3c86dc6b61c6fc7eee757c6c71/gcc%2Fconfig%2Fm88k%2Fm88k.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c25db2dfed2c3c86dc6b61c6fc7eee757c6c71/gcc%2Fconfig%2Fm88k%2Fm88k.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm88k%2Fm88k.c?ref=b4c25db2dfed2c3c86dc6b61c6fc7eee757c6c71", "patch": "@@ -65,10 +65,16 @@ enum processor_type m88k_cpu;\t/* target cpu */\n \n static void m88k_output_function_prologue PARAMS ((FILE *, HOST_WIDE_INT));\n static void m88k_output_function_epilogue PARAMS ((FILE *, HOST_WIDE_INT));\n+static void m88k_output_function_end_prologue PARAMS ((FILE *));\n+static void m88k_output_function_begin_epilogue PARAMS ((FILE *));\n \f\n /* Initialize the GCC target structure.  */\n #undef TARGET_ASM_FUNCTION_PROLOGUE\n #define TARGET_ASM_FUNCTION_PROLOGUE m88k_output_function_prologue\n+#undef TARGET_ASM_FUNCTION_END_PROLOGUE\n+#define TARGET_ASM_FUNCTION_END_PROLOGUE m88k_output_function_end_prologue\n+#undef TARGET_ASM_FUNCTION_BEGIN_EPILOGUE\n+#define TARGET_ASM_FUNCTION_BEGIN_EPILOGUE m88k_output_function_begin_epilogue\n #undef TARGET_ASM_FUNCTION_EPILOGUE\n #define TARGET_ASM_FUNCTION_EPILOGUE m88k_output_function_epilogue\n \n@@ -1954,8 +1960,8 @@ m88k_output_function_prologue (stream, size)\n   m88k_prologue_done = 1;\t/* it's ok now to put out ln directives */\n }\n \n-void\n-m88k_end_prologue (stream)\n+static void\n+m88k_output_function_end_prologue (stream)\n      FILE *stream;\n {\n   if (TARGET_OCS_DEBUG_INFO && !prologue_marked)\n@@ -2031,8 +2037,8 @@ m88k_expand_prologue ()\n    This is mandatory because of alloca; we also take advantage of it to\n    omit stack adjustments before returning.  */\n \n-void\n-m88k_begin_epilogue (stream)\n+static void\n+m88k_output_function_begin_epilogue (stream)\n      FILE *stream;\n {\n   if (TARGET_OCS_DEBUG_INFO && !epilogue_marked && prologue_marked)"}, {"sha": "9520aa8bd8ea92545a857638e5fd19befbc34f40", "filename": "gcc/config/m88k/m88k.h", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c25db2dfed2c3c86dc6b61c6fc7eee757c6c71/gcc%2Fconfig%2Fm88k%2Fm88k.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c25db2dfed2c3c86dc6b61c6fc7eee757c6c71/gcc%2Fconfig%2Fm88k%2Fm88k.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm88k%2Fm88k.h?ref=b4c25db2dfed2c3c86dc6b61c6fc7eee757c6c71", "patch": "@@ -1046,9 +1046,6 @@ enum reg_class { NO_REGS, AP_REG, XRF_REGS, GENERAL_REGS, AGRF_REGS,\n #define EXPAND_BUILTIN_VA_ARG(valist, type) \\\n   m88k_va_arg (valist, type)\n \n-/* Perform special actions at the point where the prologue ends.  */\n-#define FUNCTION_END_PROLOGUE(FILE) m88k_end_prologue(FILE)\n-\n /* Output assembler code to FILE to increment profiler label # LABELNO\n    for profiling a function entry.  Redefined in sysv3.h, sysv4.h and\n    dgux.h.  */\n@@ -1080,9 +1077,6 @@ enum reg_class { NO_REGS, AP_REG, XRF_REGS, GENERAL_REGS, AGRF_REGS,\n    No definition is equivalent to always zero.  */\n #define EXIT_IGNORE_STACK (1)\n \n-/* Perform special actions at the point where the epilogue begins.  */\n-#define FUNCTION_BEGIN_EPILOGUE(FILE) m88k_begin_epilogue(FILE)\n-\n /* Value should be nonzero if functions must have frame pointers.\n    Zero means the frame pointer need not be set up (and parms\n    may be accessed via the stack pointer) in functions that seem suitable."}, {"sha": "35fda053ae17b3072b4902964a0744eb9f4cb95b", "filename": "gcc/final.c", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c25db2dfed2c3c86dc6b61c6fc7eee757c6c71/gcc%2Ffinal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c25db2dfed2c3c86dc6b61c6fc7eee757c6c71/gcc%2Ffinal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffinal.c?ref=b4c25db2dfed2c3c86dc6b61c6fc7eee757c6c71", "patch": "@@ -546,6 +546,13 @@ default_function_pro_epilogue (file, size)\n {\n }\n \n+/* Default target hook that outputs nothing to a stream.  */\n+void\n+no_asm_to_stream (file)\n+     FILE *file ATTRIBUTE_UNUSED;\n+{\n+}\n+\n /* Enable APP processing of subsequent output.\n    Used before the output from an `asm' statement.  */\n \n@@ -2090,16 +2097,12 @@ final_scan_insn (insn, file, optimize, prescan, nopeepholes)\n \t  break;\n \n \tcase NOTE_INSN_PROLOGUE_END:\n-#ifdef FUNCTION_END_PROLOGUE\n-\t  FUNCTION_END_PROLOGUE (file);\n-#endif\n+\t  (*targetm.asm_out.function_end_prologue) (file);\t     \n \t  profile_after_prologue (file);\n \t  break;\n \n \tcase NOTE_INSN_EPILOGUE_BEG:\n-#ifdef FUNCTION_BEGIN_EPILOGUE\n-\t  FUNCTION_BEGIN_EPILOGUE (file);\n-#endif\n+\t  (*targetm.asm_out.function_begin_epilogue) (file);\t     \n \t  break;\n \n \tcase NOTE_INSN_FUNCTION_BEG:"}, {"sha": "db4894c54c0aff77500093aec6fa0a7054d65287", "filename": "gcc/output.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c25db2dfed2c3c86dc6b61c6fc7eee757c6c71/gcc%2Foutput.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c25db2dfed2c3c86dc6b61c6fc7eee757c6c71/gcc%2Foutput.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foutput.h?ref=b4c25db2dfed2c3c86dc6b61c6fc7eee757c6c71", "patch": "@@ -451,3 +451,6 @@ extern int profile_label_no;\n \n /* Default target function prologue and epilogue assembler output.  */\n extern void default_function_pro_epilogue PARAMS ((FILE *, HOST_WIDE_INT));\n+\n+/* Default target hook that outputs nothing to a stream.  */\n+extern void no_asm_to_stream PARAMS ((FILE *));"}, {"sha": "ec0b6606f04a49e5d965b098a6c8bf99fff43cc6", "filename": "gcc/target-def.h", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c25db2dfed2c3c86dc6b61c6fc7eee757c6c71/gcc%2Ftarget-def.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c25db2dfed2c3c86dc6b61c6fc7eee757c6c71/gcc%2Ftarget-def.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftarget-def.h?ref=b4c25db2dfed2c3c86dc6b61c6fc7eee757c6c71", "patch": "@@ -25,10 +25,15 @@ Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n    We want to have non-NULL default definitions of all hook functions,\n    even if they do nothing.  */\n \n+/* Assembler output.  */\n #define TARGET_ASM_FUNCTION_PROLOGUE default_function_pro_epilogue\n #define TARGET_ASM_FUNCTION_EPILOGUE default_function_pro_epilogue\n+#define TARGET_ASM_FUNCTION_END_PROLOGUE no_asm_to_stream\n+#define TARGET_ASM_FUNCTION_BEGIN_EPILOGUE no_asm_to_stream\n \n-#define TARGET_ASM_OUT {TARGET_ASM_FUNCTION_PROLOGUE,\t\\\n+#define TARGET_ASM_OUT {TARGET_ASM_FUNCTION_PROLOGUE,\t\t\\\n+\t\t\tTARGET_ASM_FUNCTION_END_PROLOGUE,\t\\\n+\t\t\tTARGET_ASM_FUNCTION_BEGIN_EPILOGUE,\t\\\n \t\t\tTARGET_ASM_FUNCTION_EPILOGUE}\n \n /* All in tree.c.  */"}, {"sha": "45143abb3de2aecacbf8fb92f3d78b0e0bd91844", "filename": "gcc/target.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4c25db2dfed2c3c86dc6b61c6fc7eee757c6c71/gcc%2Ftarget.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4c25db2dfed2c3c86dc6b61c6fc7eee757c6c71/gcc%2Ftarget.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftarget.h?ref=b4c25db2dfed2c3c86dc6b61c6fc7eee757c6c71", "patch": "@@ -52,6 +52,12 @@ struct gcc_target\n     /* Output the assembler code for entry to a function.  */\n     void (* function_prologue) PARAMS ((FILE *, HOST_WIDE_INT));\n \n+    /* Output the assembler code for end of prologue.  */\n+    void (* function_end_prologue) PARAMS ((FILE *));\n+\n+    /* Output the assembler code for start of epilogue.  */\n+    void (* function_begin_epilogue) PARAMS ((FILE *));\n+\n     /* Output the assembler code for function exit.  */\n     void (* function_epilogue) PARAMS ((FILE *, HOST_WIDE_INT));\n   } asm_out;"}]}