{"sha": "4a16e6813387edc211094a97a5366e272dfa6512", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGExNmU2ODEzMzg3ZWRjMjExMDk0YTk3YTUzNjZlMjcyZGZhNjUxMg==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2011-02-18T17:24:29Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2011-02-18T17:24:29Z"}, "message": "re PR c++/47795 (internal compiler error: tree check: expected record_type or union_type or qual_union_type, have error_mark in finish_non_static_data_member, at cp/semantics.c:1513)\n\n/cp\n2011-02-18  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/47795\n\t* semantics.c (finish_non_static_data_member): Early return if\n\tobject is error_mark_node.\n\n/testsuite\n2011-02-18  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/47795\n\t* g++.dg/cpp0x/lambda/lambda-ice3.C: New.\n\nFrom-SVN: r170276", "tree": {"sha": "00a6a1705b099096b8bb09ad6934917efec88dd8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/00a6a1705b099096b8bb09ad6934917efec88dd8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4a16e6813387edc211094a97a5366e272dfa6512", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a16e6813387edc211094a97a5366e272dfa6512", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a16e6813387edc211094a97a5366e272dfa6512", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a16e6813387edc211094a97a5366e272dfa6512/comments", "author": null, "committer": null, "parents": [{"sha": "1496e7d67b028d54ed7a2f0507d8c366057fa854", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1496e7d67b028d54ed7a2f0507d8c366057fa854", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1496e7d67b028d54ed7a2f0507d8c366057fa854"}], "stats": {"total": 37, "additions": 21, "deletions": 16}, "files": [{"sha": "8bc8cd2a6216962e178976a305ff16af016cbf5b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 21, "deletions": 16, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a16e6813387edc211094a97a5366e272dfa6512/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a16e6813387edc211094a97a5366e272dfa6512/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4a16e6813387edc211094a97a5366e272dfa6512", "patch": "@@ -1,4 +1,9 @@\n-2011-02-15  Tobias Burnus  <burnus@net-b.de>\n+2011-02-18  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/47795\n+\t* g++.dg/cpp0x/lambda/lambda-ice3.C: New.\n+\n+2011-02-18  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/47750\n \t* lib/gfortran.exp (gfortran_init): Set gcc_error_prefix and\n@@ -66,26 +71,26 @@\n \t* objc.dg/lookup-1.m: Same.\n \t* objc.dg/torture/strings/const-str-9.m\n \t* objc.dg/torture/strings/const-str-10.m: Same.\n-\t* objc.dg/torture/strings/const-str-11.m: Same. \n+\t* objc.dg/torture/strings/const-str-11.m: Same.\n \t* objc.dg/torture/forward-1.m: Same.\n-\t* objc.dg/zero-link-2.m: Same.  \n-\t* objc.dg/encode-7-next-64bit.m: Same. \n+\t* objc.dg/zero-link-2.m: Same.\n+\t* objc.dg/encode-7-next-64bit.m: Same.\n \t* objc.dg/method-4.m: Same.\n \t* objc.dg/next-runtime-1.m: Same.\n-\t* objc.dg/image-info.m: Same. \n+\t* objc.dg/image-info.m: Same.\n \t* objc.dg/pr23214.m: Same.\n \t* objc.dg/symtab-1.m: Same.\n-\t* obj-c++.dg/basic.m: Same.m\n-\t* obj-c++.dg/proto-lossage-3.m: Same.m\n-\t* obj-c++.dg/torture/strings/const-str-10.m: Same.m\n-\t* obj-c++.dg/torture/strings/const-str-11.m: Same.m \n-\t* obj-c++.dg/torture/strings/const-str-9.m: Same.m\n-\t* obj-c++.dg/method-11.m: Same.m\n+\t* obj-c++.dg/basic.m: Same.\n+\t* obj-c++.dg/proto-lossage-3.m: Same.\n+\t* obj-c++.dg/torture/strings/const-str-10.m: Same.\n+\t* obj-c++.dg/torture/strings/const-str-11.m: Same.\n+\t* obj-c++.dg/torture/strings/const-str-9.m: Same.\n+\t* obj-c++.dg/method-11.m: Same.\n \t* objc/execute/enumeration-1.m: Same.\n-\t* objc/execute/object_is_class.m: Same. \n+\t* objc/execute/object_is_class.m: Same.\n \t* objc/execute/formal_protocol-2.m: Same.\n-\t* objc/execute/formal_protocol-4.m: Same. \n-\t* objc/execute/formal_protocol-6.m: Same. \n+\t* objc/execute/formal_protocol-4.m: Same.\n+\t* objc/execute/formal_protocol-6.m: Same.\n \t* objc/execute/bycopy-3.m: Same.\n \t* objc/execute/exceptions/catchall-1.m: Same.\n \t* objc/execute/exceptions/finally-1.m: Same.\n@@ -94,7 +99,7 @@\n \t* objc/execute/bf-common.h\n \t* objc/execute/enumeration-2.m: Same.\n \t* objc/execute/formal_protocol-1.m: Same.\n-\t* objc/execute/formal_protocol-3.m: Same. \n+\t* objc/execute/formal_protocol-3.m: Same.\n \t* objc/execute/formal_protocol-5.m: Same.\n \t* objc/execute/accessing_ivars.m: Same.\n \t* objc/execute/bycopy-2.m: Same.\n@@ -108,7 +113,7 @@\n \t* obj-c++.dg/try-catch-9.mm: xfail-run the test with both\n \truntimes.\n \t* obj-c++.dg/try-catch-2.mm: Same.\n-\t\n+\n 2011-02-17  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/47783"}]}