{"sha": "047c1c922bc04add0a50710f9c2a816f61ccf8b2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDQ3YzFjOTIyYmMwNGFkZDBhNTA3MTBmOWMyYTgxNmY2MWNjZjhiMg==", "commit": {"author": {"name": "Hans-Peter Nilsson", "email": "hp@axis.com", "date": "2000-09-25T13:50:51Z"}, "committer": {"name": "Hans-Peter Nilsson", "email": "hp@gcc.gnu.org", "date": "2000-09-25T13:50:51Z"}, "message": "tm.texi: Make documented *_ASM.*_OP:s include spacing.\n\n\t* tm.texi: Make documented *_ASM.*_OP:s include spacing.\n\tFix typos in description for LONG_LONG_TYPE_SIZE and\n\tFINI_SECTION_ASM_OP.\n\nFrom-SVN: r36622", "tree": {"sha": "4952e8c2be26d8440e932a31159e9ca17ba2fc23", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4952e8c2be26d8440e932a31159e9ca17ba2fc23"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/047c1c922bc04add0a50710f9c2a816f61ccf8b2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/047c1c922bc04add0a50710f9c2a816f61ccf8b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/047c1c922bc04add0a50710f9c2a816f61ccf8b2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/047c1c922bc04add0a50710f9c2a816f61ccf8b2/comments", "author": {"login": "hpataxisdotcom", "id": 80339731, "node_id": "MDQ6VXNlcjgwMzM5NzMx", "avatar_url": "https://avatars.githubusercontent.com/u/80339731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hpataxisdotcom", "html_url": "https://github.com/hpataxisdotcom", "followers_url": "https://api.github.com/users/hpataxisdotcom/followers", "following_url": "https://api.github.com/users/hpataxisdotcom/following{/other_user}", "gists_url": "https://api.github.com/users/hpataxisdotcom/gists{/gist_id}", "starred_url": "https://api.github.com/users/hpataxisdotcom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hpataxisdotcom/subscriptions", "organizations_url": "https://api.github.com/users/hpataxisdotcom/orgs", "repos_url": "https://api.github.com/users/hpataxisdotcom/repos", "events_url": "https://api.github.com/users/hpataxisdotcom/events{/privacy}", "received_events_url": "https://api.github.com/users/hpataxisdotcom/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b9f7d63e774f11497a01d17a6e255ba49e0d4520", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9f7d63e774f11497a01d17a6e255ba49e0d4520", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b9f7d63e774f11497a01d17a6e255ba49e0d4520"}], "stats": {"total": 116, "additions": 63, "deletions": 53}, "files": [{"sha": "d8b446463e3a86abfbc3f2eee296d29bfd63fa22", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/047c1c922bc04add0a50710f9c2a816f61ccf8b2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/047c1c922bc04add0a50710f9c2a816f61ccf8b2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=047c1c922bc04add0a50710f9c2a816f61ccf8b2", "patch": "@@ -3,6 +3,13 @@\n \tChanges below marked \"here\" add TABs on either or both sides,\n \tcovering start of line, up to any operand for all noted .*ASM.*_OP\n \tdefinitions.  All callers changed.\n+\t* tm.texi: Make documented *_ASM.*_OP:s include spacing\n+\t(TEXT_SECTION_ASM_OP, DATA_SECTION_ASM_OP, SHARED_SECTION_ASM_OP,\n+\tBSS_SECTION_ASM_OP, SHARED_BSS_SECTION_ASM_OP, INIT_SECTION_ASM_OP,\n+\tASM_BYTE_OP, FINI_SECTION_ASM_OP, EH_FRAME_SECTION_ASM_OP,\n+\tASM_STABS_OP, ASM_STABD_OP, ASM_STABN_OP).\n+\tFix typos in description for LONG_LONG_TYPE_SIZE and\n+\tFINI_SECTION_ASM_OP.\n \t* crtstuff.c (CTORS_SECTION_ASM_OP, DTORS_SECTION_ASM_OP): Explain\n \twhy these defaults don't have leading spacing.\n \t* dbxout.c (ASM_STABS_OP, ASM_STABN_OP): Here."}, {"sha": "198b7fb833599dfd2fc319992783df725e09e04e", "filename": "gcc/tm.texi", "status": "modified", "additions": 56, "deletions": 53, "changes": 109, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/047c1c922bc04add0a50710f9c2a816f61ccf8b2/gcc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/047c1c922bc04add0a50710f9c2a816f61ccf8b2/gcc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftm.texi?ref=047c1c922bc04add0a50710f9c2a816f61ccf8b2", "patch": "@@ -1214,7 +1214,7 @@ used in @code{cpp}.\n @item LONG_LONG_TYPE_SIZE\n A C expression for the size in bits of the type @code{long long} on the\n target machine.  If you don't define this, the default is two\n-words.  If you want to support GNU Ada on your machine, the value of\n+words.  If you want to support GNU Ada on your machine, the value of this\n macro must be at least 64.\n \n @findex CHAR_TYPE_SIZE\n@@ -5064,50 +5064,52 @@ can also define additional sections.\n @table @code\n @findex TEXT_SECTION_ASM_OP\n @item TEXT_SECTION_ASM_OP\n-A C expression whose value is a string containing the assembler\n-operation that should precede instructions and read-only data.  Normally\n-@code{\".text\"} is right.\n+A C expression whose value is a string, including spacing, containing the\n+assembler operation that should precede instructions and read-only data.\n+Normally @code{\"\\t.text\"} is right.\n \n @findex DATA_SECTION_ASM_OP\n @item DATA_SECTION_ASM_OP\n-A C expression whose value is a string containing the assembler\n-operation to identify the following data as writable initialized data.\n-Normally @code{\".data\"} is right.\n+A C expression whose value is a string, including spacing, containing the\n+assembler operation to identify the following data as writable initialized\n+data.  Normally @code{\"\\t.data\"} is right.\n \n @findex SHARED_SECTION_ASM_OP\n @item SHARED_SECTION_ASM_OP\n-If defined, a C expression whose value is a string containing the\n-assembler operation to identify the following data as shared data.  If\n-not defined, @code{DATA_SECTION_ASM_OP} will be used.\n+If defined, a C expression whose value is a string, including spacing,\n+containing the assembler operation to identify the following data as\n+shared data.  If not defined, @code{DATA_SECTION_ASM_OP} will be used.\n \n @findex BSS_SECTION_ASM_OP\n @item BSS_SECTION_ASM_OP\n-If defined, a C expression whose value is a string containing the\n-assembler operation to identify the following data as uninitialized global\n-data.  If not defined, and neither @code{ASM_OUTPUT_BSS} nor\n-@code{ASM_OUTPUT_ALIGNED_BSS} are defined, uninitialized global data will be\n-output in the data section if @samp{-fno-common} is passed, otherwise\n-@code{ASM_OUTPUT_COMMON} will be used.\n+If defined, a C expression whose value is a string, including spacing,\n+containing the assembler operation to identify the following data as\n+uninitialized global data.  If not defined, and neither\n+@code{ASM_OUTPUT_BSS} nor @code{ASM_OUTPUT_ALIGNED_BSS} are defined,\n+uninitialized global data will be output in the data section if\n+@samp{-fno-common} is passed, otherwise @code{ASM_OUTPUT_COMMON} will be\n+used.\n \n @findex SHARED_BSS_SECTION_ASM_OP\n @item SHARED_BSS_SECTION_ASM_OP\n-If defined, a C expression whose value is a string containing the\n-assembler operation to identify the following data as uninitialized global\n-shared data.  If not defined, and @code{BSS_SECTION_ASM_OP} is, the latter\n-will be used.\n+If defined, a C expression whose value is a string, including spacing,\n+containing the assembler operation to identify the following data as\n+uninitialized global shared data.  If not defined, and\n+@code{BSS_SECTION_ASM_OP} is, the latter will be used.\n \n @findex INIT_SECTION_ASM_OP\n @item INIT_SECTION_ASM_OP\n-If defined, a C expression whose value is a string containing the\n-assembler operation to identify the following data as initialization\n-code.  If not defined, GCC will assume such a section does not\n-exist.\n+If defined, a C expression whose value is a string, including spacing,\n+containing the assembler operation to identify the following data as\n+initialization code.  If not defined, GCC will assume such a section does\n+not exist.\n \n @findex FINI_SECTION_ASM_OP\n @item FINI_SECTION_ASM_OP\n-If defined, a C expression whose value is a string containing the\n-assembler opration to identify the following data as finalization\n-code.  If not defined, GCC will assume such a section does not exist.\n+If defined, a C expression whose value is a string, including spacing,\n+containing the assembler operation to identify the following data as\n+finalization code.  If not defined, GCC will assume such a section does\n+not exist.\n \n @findex CRT_CALL_STATIC_FUNCTION\n @item CRT_CALL_STATIC_FUNCTION\n@@ -5483,9 +5485,9 @@ instruction to assemble a single byte containing the number @var{value}.\n \n @findex ASM_BYTE_OP\n @item ASM_BYTE_OP\n-A C string constant giving the pseudo-op to use for a sequence of\n-single-byte constants.  If this macro is not defined, the default is\n-@code{\"byte\"}.\n+A C string constant, including spacing, giving the pseudo-op to use for a\n+sequence of single-byte constants.  If this macro is not defined, the\n+default is @code{\"\\t.byte\\t\"}.\n \n @findex ASM_OUTPUT_ASCII\n @item ASM_OUTPUT_ASCII (@var{stream}, @var{ptr}, @var{len})\n@@ -6183,12 +6185,12 @@ and termination functions:\n @table @code\n @findex INIT_SECTION_ASM_OP\n @item INIT_SECTION_ASM_OP\n-If defined, a C string constant for the assembler operation to identify\n-the following data as initialization code.  If not defined, GCC will\n-assume such a section does not exist.  When you are using special\n-sections for initialization and termination functions, this macro also\n-controls how @file{crtstuff.c} and @file{libgcc2.c} arrange to run the\n-initialization functions.\n+If defined, a C string constant, including spacing, for the assembler\n+operation to identify the following data as initialization code.  If not\n+defined, GCC will assume such a section does not exist.  When you are\n+using special sections for initialization and termination functions, this\n+macro also controls how @file{crtstuff.c} and @file{libgcc2.c} arrange to\n+run the initialization functions.\n \n @item HAS_INIT_SECTION\n @findex HAS_INIT_SECTION\n@@ -6607,11 +6609,11 @@ or @samp{-fPIC} is in effect, the @code{data_section}, otherwise the\n \n @findex EH_FRAME_SECTION_ASM_OP\n @item EH_FRAME_SECTION_ASM_OP\n-If defined, a C string constant for the assembler operation to switch to\n-the section for exception handling frame unwind information.  If not\n-defined, GCC will provide a default definition if the target supports\n-named sections.  @file{crtstuff.c} uses this macro to switch to the\n-appropriate section.\n+If defined, a C string constant, including spacing, for the assembler\n+operation to switch to the section for exception handling frame unwind\n+information.  If not defined, GCC will provide a default definition if the\n+target supports named sections.  @file{crtstuff.c} uses this macro to\n+switch to the appropriate section.\n \n You should define this symbol if your target supports DWARF 2 frame\n unwind information and the default definition does not work.\n@@ -6862,24 +6864,25 @@ in the text section.\n \n @findex ASM_STABS_OP\n @item ASM_STABS_OP\n-A C string constant naming the assembler pseudo op to use instead of\n-@code{.stabs} to define an ordinary debugging symbol.  If you don't\n-define this macro, @code{.stabs} is used.  This macro applies only to\n-DBX debugging information format.\n+A C string constant, including spacing, naming the assembler pseudo op to\n+use instead of @code{\"\\t.stabs\\t\"} to define an ordinary debugging symbol.\n+If you don't define this macro, @code{\"\\t.stabs\\t\"} is used.  This macro\n+applies only to DBX debugging information format.\n \n @findex ASM_STABD_OP\n @item ASM_STABD_OP\n-A C string constant naming the assembler pseudo op to use instead of\n-@code{.stabd} to define a debugging symbol whose value is the current\n-location.  If you don't define this macro, @code{.stabd} is used.\n-This macro applies only to DBX debugging information format.\n+A C string constant, including spacing, naming the assembler pseudo op to\n+use instead of @code{\"\\t.stabd\\t\"} to define a debugging symbol whose\n+value is the current location.  If you don't define this macro,\n+@code{\"\\t.stabd\\t\"} is used.  This macro applies only to DBX debugging\n+information format.\n \n @findex ASM_STABN_OP\n @item ASM_STABN_OP\n-A C string constant naming the assembler pseudo op to use instead of\n-@code{.stabn} to define a debugging symbol with no name.  If you don't\n-define this macro, @code{.stabn} is used.  This macro applies only to\n-DBX debugging information format.\n+A C string constant, including spacing, naming the assembler pseudo op to\n+use instead of @code{\"\\t.stabn\\t\"} to define a debugging symbol with no\n+name.  If you don't define this macro, @code{\"\\t.stabn\\t\"} is used.  This\n+macro applies only to DBX debugging information format.\n \n @findex DBX_NO_XREFS\n @item DBX_NO_XREFS"}]}