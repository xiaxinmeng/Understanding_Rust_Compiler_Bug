{"sha": "f831807967c55f828ba7dfb304f12f086d943417", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjgzMTgwNzk2N2M1NWY4MjhiYTdkZmIzMDRmMTJmMDg2ZDk0MzQxNw==", "commit": {"author": {"name": "Roger Sayle", "email": "sayle@gcc.gnu.org", "date": "2006-03-13T23:47:47Z"}, "committer": {"name": "Roger Sayle", "email": "sayle@gcc.gnu.org", "date": "2006-03-13T23:47:47Z"}, "message": "re PR middle-end/26557 (ICE in simplify_subreg)\n\n\n\tPR middle-end/26557\n\t* stmt.c (emit_case_nodes): Handle the case where the index is a\n\tCONST_INT, where the comparison mode is specified by the index type.\n\n\t* gcc.c-torture/compile/switch-1.c: New test case.\n\nFrom-SVN: r112032", "tree": {"sha": "c4689c459a59af36095a53e46897d7983e27ada0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c4689c459a59af36095a53e46897d7983e27ada0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f831807967c55f828ba7dfb304f12f086d943417", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f831807967c55f828ba7dfb304f12f086d943417", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f831807967c55f828ba7dfb304f12f086d943417", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f831807967c55f828ba7dfb304f12f086d943417/comments", "author": null, "committer": null, "parents": [{"sha": "26a851b930f908e3dffa57a3dfa2597c6ed004d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26a851b930f908e3dffa57a3dfa2597c6ed004d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/26a851b930f908e3dffa57a3dfa2597c6ed004d7"}], "stats": {"total": 33, "additions": 29, "deletions": 4}, "files": [{"sha": "8d28b2f835c9c4ad9b1484c8e45ac26d9b8cfcac", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f831807967c55f828ba7dfb304f12f086d943417/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f831807967c55f828ba7dfb304f12f086d943417/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f831807967c55f828ba7dfb304f12f086d943417", "patch": "@@ -1,3 +1,9 @@\n+2006-03-13  Roger Sayle  <roger@eyesopen.com>\n+\n+\tPR middle-end/26557\n+\t* stmt.c (emit_case_nodes): Handle the case where the index is a\n+\tCONST_INT, where the comparison mode is specified by the index type.\n+\n 2006-03-13  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n \n \t* pa/pa32-linux.h (CRT_CALL_STATIC_FUNCTION): Define when CRTSTUFFS_O"}, {"sha": "a3e3db3b3b6b084bd17e36aa90a07f0cb83828ed", "filename": "gcc/stmt.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f831807967c55f828ba7dfb304f12f086d943417/gcc%2Fstmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f831807967c55f828ba7dfb304f12f086d943417/gcc%2Fstmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstmt.c?ref=f831807967c55f828ba7dfb304f12f086d943417", "patch": "@@ -2944,6 +2944,10 @@ emit_case_nodes (rtx index, case_node_ptr node, rtx default_label,\n   enum machine_mode mode = GET_MODE (index);\n   enum machine_mode imode = TYPE_MODE (index_type);\n \n+  /* Handle indices detected as constant during RTL expansion.  */\n+  if (mode == VOIDmode)\n+    mode = imode;\n+\n   /* See if our parents have already tested everything for us.\n      If they have, emit an unconditional jump for this node.  */\n   if (node_is_bounded (node, index_type))"}, {"sha": "b91ceeaadf3a967aa67482c6bc1225fe71bd552b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f831807967c55f828ba7dfb304f12f086d943417/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f831807967c55f828ba7dfb304f12f086d943417/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f831807967c55f828ba7dfb304f12f086d943417", "patch": "@@ -1,10 +1,16 @@\n+2006-03-13  Roger Sayle  <roger@eyesopen.com>\n+\n+\tPR middle-end/26557\n+\t* gcc.c-torture/compile/switch-1.c: New test case.\n+\n 2006-03-13  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/25378\n-\t* gfortran.fortran-torture/execute/intrinsic_mmloc_3.f90: Expand test to include more\n-\tpermuatations of mask and index.\n-\t* testsuite/gfortran.dg/scalar_mask_1.f90: Modify last test to respond to F2003 spec.\n-\tthat the position returned for an all false mask && condition is zero.\n+\t* gfortran.fortran-torture/execute/intrinsic_mmloc_3.f90: Expand\n+\ttest to include more permuatations of mask and index.\n+\t* testsuite/gfortran.dg/scalar_mask_1.f90: Modify last test to\n+\trespond to F2003 spec. that the position returned for an all false\n+\tmask && condition is zero.\n \n 2006-03-13  Jakub Jelinek  <jakub@redhat.com>\n "}, {"sha": "cc71d30bb3f515361a5970b7f43befa0e11a6d24", "filename": "gcc/testsuite/gcc.c-torture/compile/switch-1.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f831807967c55f828ba7dfb304f12f086d943417/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fswitch-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f831807967c55f828ba7dfb304f12f086d943417/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fswitch-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fswitch-1.c?ref=f831807967c55f828ba7dfb304f12f086d943417", "patch": "@@ -0,0 +1,9 @@\n+/* PR middle-end/26557.  */\n+const int struct_test[1] = {1};\n+void g();\n+void f() {\n+  switch(struct_test[0]) {\n+    case 1: g();\n+  }\n+}\n+"}]}