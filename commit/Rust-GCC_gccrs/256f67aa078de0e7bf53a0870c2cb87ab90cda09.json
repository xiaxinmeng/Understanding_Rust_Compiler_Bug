{"sha": "256f67aa078de0e7bf53a0870c2cb87ab90cda09", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjU2ZjY3YWEwNzhkZTBlN2JmNTNhMDg3MGMyY2I4N2FiOTBjZGEwOQ==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-02-19T21:45:59Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-02-19T21:49:24Z"}, "message": "libstdc++: Simplify std::three_way_comparable_with (LWG 3360)\n\nThis also removes a useless condition that was supposed to be removed by\nthe P1959R0 changes, but left in when that was implemented.\n\n\t* libsupc++/compare (three_way_comparable): Remove always-false check\n\tthat should have been removed with weak_equality (P1959R0).\n\t(three_way_comparable_with): Likewise. Reorder requirements (LWG 3360).", "tree": {"sha": "480cfbf5480476fba55fe91099be74e6493c0dbd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/480cfbf5480476fba55fe91099be74e6493c0dbd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/256f67aa078de0e7bf53a0870c2cb87ab90cda09", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/256f67aa078de0e7bf53a0870c2cb87ab90cda09", "html_url": "https://github.com/Rust-GCC/gccrs/commit/256f67aa078de0e7bf53a0870c2cb87ab90cda09", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/256f67aa078de0e7bf53a0870c2cb87ab90cda09/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0294dc5f4eec5a07d70fac48f75c498c3b1a339b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0294dc5f4eec5a07d70fac48f75c498c3b1a339b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0294dc5f4eec5a07d70fac48f75c498c3b1a339b"}], "stats": {"total": 14, "additions": 8, "deletions": 6}, "files": [{"sha": "622c2948eab8f43470c34def48b9f376e13e127c", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/256f67aa078de0e7bf53a0870c2cb87ab90cda09/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/256f67aa078de0e7bf53a0870c2cb87ab90cda09/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=256f67aa078de0e7bf53a0870c2cb87ab90cda09", "patch": "@@ -1,5 +1,9 @@\n 2020-02-19  Jonathan Wakely  <jwakely@redhat.com>\n \n+\t* libsupc++/compare (three_way_comparable): Remove always-false check\n+\tthat should have been removed with weak_equality (P1959R0).\n+\t(three_way_comparable_with): Likewise. Reorder requirements (LWG 3360).\n+\n \t* include/std/concepts (__detail::__partially_ordered_with): Move here\n \tfrom <compare>.\n \t(totally_ordered, totally_ordered_with): Use __partially_ordered_with"}, {"sha": "b88b691b9e11b93adaf32b11482c58c6ad2d93ee", "filename": "libstdc++-v3/libsupc++/compare", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/256f67aa078de0e7bf53a0870c2cb87ab90cda09/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fcompare", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/256f67aa078de0e7bf53a0870c2cb87ab90cda09/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fcompare", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2Fcompare?ref=256f67aa078de0e7bf53a0870c2cb87ab90cda09", "patch": "@@ -417,25 +417,23 @@ namespace std\n   template<typename _Tp, typename _Cat = partial_ordering>\n     concept three_way_comparable\n       = __detail::__weakly_eq_cmp_with<_Tp, _Tp>\n-      && (!convertible_to<_Cat, partial_ordering>\n-\t  || __detail::__partially_ordered_with<_Tp, _Tp>)\n+      && __detail::__partially_ordered_with<_Tp, _Tp>\n       && requires(const remove_reference_t<_Tp>& __a,\n \t\t  const remove_reference_t<_Tp>& __b) {\n \t{ __a <=> __b } -> __detail::__compares_as<_Cat>;\n       };\n \n   template<typename _Tp, typename _Up, typename _Cat = partial_ordering>\n     concept three_way_comparable_with\n-      = __detail::__weakly_eq_cmp_with<_Tp, _Up>\n-      && (!convertible_to<_Cat, partial_ordering>\n-\t  || __detail::__partially_ordered_with<_Tp, _Up>)\n-      && three_way_comparable<_Tp, _Cat>\n+      = three_way_comparable<_Tp, _Cat>\n       && three_way_comparable<_Up, _Cat>\n       && common_reference_with<const remove_reference_t<_Tp>&,\n \t\t\t       const remove_reference_t<_Up>&>\n       && three_way_comparable<\n \t  common_reference_t<const remove_reference_t<_Tp>&,\n \t\t\t     const remove_reference_t<_Up>&>, _Cat>\n+      && __detail::__weakly_eq_cmp_with<_Tp, _Up>\n+      && __detail::__partially_ordered_with<_Tp, _Up>\n       && requires(const remove_reference_t<_Tp>& __t,\n \t\t  const remove_reference_t<_Up>& __u) {\n \t{ __t <=> __u } -> __detail::__compares_as<_Cat>;"}]}