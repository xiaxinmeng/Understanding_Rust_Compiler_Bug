{"sha": "c001c194a2f73fb32461b597e91a35f9bbcf4414", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzAwMWMxOTRhMmY3M2ZiMzI0NjFiNTk3ZTkxYTM1ZjliYmNmNDQxNA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-03-31T08:46:01Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-03-31T08:46:01Z"}, "message": "aarch64: Fix up *add<mode>3_poly_1 [PR99813]\n\nAs mentioned in the PR, Uai constraint stands for\naarch64_sve_scalar_inc_dec_immediate\nwhile Uav for\naarch64_sve_addvl_addpl_immediate.\nBoth *add<mode>3_aarch64 and *add<mode>3_poly_1 patterns use\n  * return aarch64_output_sve_scalar_inc_dec (operands[2]);\n  * return aarch64_output_sve_addvl_addpl (operands[2]);\nin that order, but the former with Uai,Uav order, while the\nlatter with Uav,Uai instead.  This patch swaps the constraints\nso that they match the output.\n\nCo-authored-by: Richard Sandiford <richard.sandiford@arm.com>\n\n2021-03-31  Jakub Jelinek  <jakub@redhat.com>\n\t    Richard Sandiford  <richard.sandiford@arm.com>\n\n\tPR target/99813\n\t* config/aarch64/aarch64.md (*add<mode>3_poly_1): Swap Uai and Uav\n\tconstraints on operands[2] and similarly 0 and rk constraints\n\ton operands[1] corresponding to that.\n\n\t* g++.target/aarch64/sve/pr99813.C: New test.", "tree": {"sha": "32ccb59a39fc05d63562af45cac84bf6a888ba4e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/32ccb59a39fc05d63562af45cac84bf6a888ba4e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c001c194a2f73fb32461b597e91a35f9bbcf4414", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c001c194a2f73fb32461b597e91a35f9bbcf4414", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c001c194a2f73fb32461b597e91a35f9bbcf4414", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c001c194a2f73fb32461b597e91a35f9bbcf4414/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a49a96f681bf13c6e77644d4507e867f00f93fe6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a49a96f681bf13c6e77644d4507e867f00f93fe6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a49a96f681bf13c6e77644d4507e867f00f93fe6"}], "stats": {"total": 31, "additions": 29, "deletions": 2}, "files": [{"sha": "15bbc1014ef2683dbe87596c321d68394f67f553", "filename": "gcc/config/aarch64/aarch64.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c001c194a2f73fb32461b597e91a35f9bbcf4414/gcc%2Fconfig%2Faarch64%2Faarch64.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c001c194a2f73fb32461b597e91a35f9bbcf4414/gcc%2Fconfig%2Faarch64%2Faarch64.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.md?ref=c001c194a2f73fb32461b597e91a35f9bbcf4414", "patch": "@@ -2059,8 +2059,8 @@\n   [(set\n     (match_operand:GPI 0 \"register_operand\" \"=r,r,r,r,r,r,&r\")\n     (plus:GPI\n-     (match_operand:GPI 1 \"register_operand\" \"%rk,rk,rk,rk,rk,0,rk\")\n-     (match_operand:GPI 2 \"aarch64_pluslong_or_poly_operand\" \"I,r,J,Uaa,Uav,Uai,Uat\")))]\n+     (match_operand:GPI 1 \"register_operand\" \"%rk,rk,rk,rk,0,rk,rk\")\n+     (match_operand:GPI 2 \"aarch64_pluslong_or_poly_operand\" \"I,r,J,Uaa,Uai,Uav,Uat\")))]\n   \"TARGET_SVE && operands[0] != stack_pointer_rtx\"\n   \"@\n   add\\\\t%<w>0, %<w>1, %2"}, {"sha": "f98b17cda47bbf25abd648f99c72af590ef4df1e", "filename": "gcc/testsuite/g++.target/aarch64/sve/pr99813.C", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c001c194a2f73fb32461b597e91a35f9bbcf4414/gcc%2Ftestsuite%2Fg%2B%2B.target%2Faarch64%2Fsve%2Fpr99813.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c001c194a2f73fb32461b597e91a35f9bbcf4414/gcc%2Ftestsuite%2Fg%2B%2B.target%2Faarch64%2Fsve%2Fpr99813.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Faarch64%2Fsve%2Fpr99813.C?ref=c001c194a2f73fb32461b597e91a35f9bbcf4414", "patch": "@@ -0,0 +1,27 @@\n+// PR target/99813\n+/* { dg-do assemble { target aarch64_asm_sve_ok } } */\n+/* { dg-options \"-O3 -march=armv8.2-a+sve -fvect-cost-model=unlimited -fno-tree-dominator-opts -mtune=cortex-a72\" } */\n+\n+long a, b;\n+bool c[2][14][2][16], f[2][14][2][16];\n+bool d;\n+char e[2][4][2][6];\n+void g() {\n+  a = 0;\n+  for (int h = 0; h < 2; ++h)\n+    for (int i = 0; i < 14; ++i)\n+      for (int j = 0; j < 2; ++j)\n+        for (int k = 0; k < 16; ++k)\n+          c[h][i][j][k] = 0;\n+  d = 0;\n+  for (int h; h < 2; ++h)\n+    for (int i = 0; i < 4; ++i)\n+      for (int j = 0; j < 2; ++j)\n+        for (int k = 0; k < 6; ++k)\n+          e[h][i][j][k] = 6;\n+  for (int h = 0; h < 2; ++h)\n+    for (int i = 0; i < 14; ++i)\n+      for (int j = 0; j < 2; ++j)\n+        for (int k = 0; k < 16; ++k)\n+          f[h][i][j][k] = b = 9;\n+}"}]}