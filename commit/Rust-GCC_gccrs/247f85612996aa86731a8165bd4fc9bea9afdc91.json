{"sha": "247f85612996aa86731a8165bd4fc9bea9afdc91", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjQ3Zjg1NjEyOTk2YWE4NjczMWE4MTY1YmQ0ZmM5YmVhOWFmZGM5MQ==", "commit": {"author": {"name": "Philip Blundell", "email": "philb@gnu.org", "date": "2001-05-24T20:54:59Z"}, "committer": {"name": "Phil Blundell", "email": "pb@gcc.gnu.org", "date": "2001-05-24T20:54:59Z"}, "message": "invoke.texi (ARM Options): Improve wording slightly.\n\n2001-05-24  Philip Blundell  <philb@gnu.org>\n\n\t* invoke.texi (ARM Options): Improve wording slightly.  Add\n\tdocumentation for more options, including those for Thumb mode.\n\tDon't mention options that don't exist or are unimplemented.\n\t(Thumb Options): Delete; merged into above section.\n\nFrom-SVN: r42539", "tree": {"sha": "69bf5d62e8c85bbdec96fb946ee1ab148f315f87", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/69bf5d62e8c85bbdec96fb946ee1ab148f315f87"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/247f85612996aa86731a8165bd4fc9bea9afdc91", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/247f85612996aa86731a8165bd4fc9bea9afdc91", "html_url": "https://github.com/Rust-GCC/gccrs/commit/247f85612996aa86731a8165bd4fc9bea9afdc91", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/247f85612996aa86731a8165bd4fc9bea9afdc91/comments", "author": {"login": "philb", "id": 227468, "node_id": "MDQ6VXNlcjIyNzQ2OA==", "avatar_url": "https://avatars.githubusercontent.com/u/227468?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philb", "html_url": "https://github.com/philb", "followers_url": "https://api.github.com/users/philb/followers", "following_url": "https://api.github.com/users/philb/following{/other_user}", "gists_url": "https://api.github.com/users/philb/gists{/gist_id}", "starred_url": "https://api.github.com/users/philb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philb/subscriptions", "organizations_url": "https://api.github.com/users/philb/orgs", "repos_url": "https://api.github.com/users/philb/repos", "events_url": "https://api.github.com/users/philb/events{/privacy}", "received_events_url": "https://api.github.com/users/philb/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3e0105a41d387cbd41d5a6f2c9e27ac34c6c4a0a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e0105a41d387cbd41d5a6f2c9e27ac34c6c4a0a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e0105a41d387cbd41d5a6f2c9e27ac34c6c4a0a"}], "stats": {"total": 162, "additions": 67, "deletions": 95}, "files": [{"sha": "a4e66bce781b8bbbbd24092cf2e1c9e4f11ad32a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/247f85612996aa86731a8165bd4fc9bea9afdc91/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/247f85612996aa86731a8165bd4fc9bea9afdc91/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=247f85612996aa86731a8165bd4fc9bea9afdc91", "patch": "@@ -1,3 +1,10 @@\n+2001-05-24  Philip Blundell  <philb@gnu.org>\n+\n+\t* invoke.texi (ARM Options): Improve wording slightly.  Add\n+\tdocumentation for more options, including those for Thumb mode.\n+\tDon't mention options that don't exist or are unimplemented.\n+\t(Thumb Options): Delete; merged into above section.\n+\n 2001-05-24  Geoff Keating  <geoffk@redhat.com>\n \n \t* config/rs6000/linux.h (SIGNAL_FRAMESIZE): Define."}, {"sha": "537060eb55bacd39ba71d13e361bebe296f4d678", "filename": "gcc/invoke.texi", "status": "modified", "additions": 60, "deletions": 95, "changes": 155, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/247f85612996aa86731a8165bd4fc9bea9afdc91/gcc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/247f85612996aa86731a8165bd4fc9bea9afdc91/gcc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Finvoke.texi?ref=247f85612996aa86731a8165bd4fc9bea9afdc91", "patch": "@@ -369,27 +369,18 @@ in the following sections.\n -malignment-traps -mno-alignment-traps @gol\n -msoft-float -mhard-float -mfpe @gol\n -mthumb-interwork -mno-thumb-interwork @gol\n--mcpu= -march= -mfpe=  @gol\n--mstructure-size-boundary= @gol\n+-mcpu=@var{name} -march=@var{name} -mfpe=@var{name}  @gol\n+-mstructure-size-boundary=@var{n} @gol\n -mbsd -mxopen -mno-symrename @gol\n -mabort-on-noreturn @gol\n -mlong-calls -mno-long-calls @gol\n--mnop-fun-dllimport -mno-nop-fun-dllimport @gol\n -msingle-pic-base -mno-single-pic-base @gol\n--mpic-register=}\n-\n-@emph{Thumb Options}\n-@gccoptlist{\n--mtpcs-frame -mno-tpcs-frame @gol\n--mtpcs-leaf-frame -mno-tpcs-leaf-frame @gol\n--mlittle-endian  -mbig-endian @gol\n--mthumb-interwork -mno-thumb-interwork @gol\n--mstructure-size-boundary= @gol\n--mnop-fun-dllimport -mno-nop-fun-dllimport @gol\n--mcallee-super-interworking -mno-callee-super-interworking @gol\n--mcaller-super-interworking -mno-caller-super-interworking @gol\n--msingle-pic-base -mno-single-pic-base @gol\n--mpic-register=}\n+-mpic-register=@var{reg} @gol\n+-mnop-fun-dllimport @gol\n+-mpoke-function-name @gol\n+-mthumb -marm @gol\n+-mtpcs-frame -mtpcs-leaf-frame @gol\n+-mcaller-super-interworking -mcallee-super-interworking }\n \n @emph{MN10200 Options}\n @gccoptlist{\n@@ -4617,7 +4608,6 @@ that macro, which enables you to change the defaults.\n * Convex Options::\n * AMD29K Options::\n * ARM Options::\n-* Thumb Options::\n * MN10200 Options::\n * MN10300 Options::\n * M32R/D Options::\n@@ -5290,6 +5280,8 @@ and conforming to the function calling standards for the APCS 32-bit\n option.  This option replaces the @samp{-m6} option of previous releases\n of the compiler.\n \n+@ignore\n+@c not currently implemented\n @item -mapcs-stack-check\n @kindex -mapcs-stack-check\n @kindex -mno-apcs-stack-check\n@@ -5301,6 +5293,7 @@ called, depending upon the amount of stack space required.  The run time\n system is required to provide these functions.  The default is\n @samp{-mno-apcs-stack-check}, since this produces smaller code.\n \n+@c not currently implemented\n @item -mapcs-float\n @kindex -mapcs-float\n @kindex -mno-apcs-float\n@@ -5311,17 +5304,18 @@ arithmetic is going to be performed by the code.  The default is\n @samp{-mno-apcs-float}, since integer only code is slightly increased in\n size if @samp{-mapcs-float} is used.\n \n+@c not currently implemented\n @item -mapcs-reentrant\n @kindex -mapcs-reentrant\n @kindex -mno-apcs-reentrant\n-Generate reentrant, position independent code.  This is the equivalent\n-to specifying the @samp{-fpic} option.  The default is\n+Generate reentrant, position independent code.  The default is\n @samp{-mno-apcs-reentrant}.\n+@end ignore\n \n @item -mthumb-interwork\n @kindex -mthumb-interwork\n @kindex -mno-thumb-interwork\n-Generate code which supports calling between the ARM and THUMB\n+Generate code which supports calling between the ARM and Thumb\n instruction sets.  Without this option the two instruction sets cannot\n be reliably used inside one program.  The default is\n @samp{-mno-thumb-interwork}, since slightly larger code is generated\n@@ -5393,7 +5387,7 @@ objects in memory.\n @kindex -mno-alignment-traps\n Generate code that assumes that the MMU will not trap unaligned\n accesses.  This produces better code when the target instruction set\n-does not have half-word memory operations (implementations prior to\n+does not have half-word memory operations (i.e. implementations prior to\n ARMv4).\n \n Note that you cannot use this option to access unaligned word objects,\n@@ -5405,20 +5399,16 @@ this produces better code when there are no half-word memory\n instructions available.\n \n @item -mshort-load-bytes\n+@itemx -mno-short-load-words\n @kindex -mshort-load-bytes\n-This is a deprecated alias for @samp{-malignment-traps}.\n+@kindex -mno-short-load-words\n+These are deprecated aliases for @samp{-malignment-traps}.\n \n @item -mno-short-load-bytes\n+@itemx -mshort-load-words\n @kindex -mno-short-load-bytes\n-This is a deprecated alias for @samp{-mno-alignment-traps}.\n-\n-@item -mshort-load-words\n @kindex -mshort-load-words\n-This is a deprecated alias for @samp{-mno-alignment-traps}.\n-\n-@item -mno-short-load-words\n-@kindex -mno-short-load-words\n-This is a deprecated alias for @samp{-malignment-traps}.\n+This are deprecated aliases for @samp{-mno-alignment-traps}.\n \n @item -mbsd\n @kindex -mbsd\n@@ -5442,12 +5432,13 @@ compiler is built for cross-compilation.\n @item -mcpu=<name>\n @kindex -mcpu=\n This specifies the name of the target ARM processor.  GCC uses this name\n-to determine what kind of instructions it can use when generating\n+to determine what kind of instructions it can emit when generating\n assembly code.  Permissible names are: arm2, arm250, arm3, arm6, arm60,\n arm600, arm610, arm620, arm7, arm7m, arm7d, arm7dm, arm7di, arm7dmi,\n arm70, arm700, arm700i, arm710, arm710c, arm7100, arm7500, arm7500fe,\n arm7tdmi, arm8, strongarm, strongarm110, strongarm1100, arm8, arm810,\n-arm9, arm920, arm920t, arm9tdmi.\n+arm9, arm9e, arm920, arm920t, arm940t, arm9tdmi, arm10tdmi, arm1020t,\n+xscale.\n \n @itemx -mtune=<name>\n @kindex -mtune=\n@@ -5457,24 +5448,24 @@ restricting which instructions can be used, it specifies that GCC should\n tune the performance of the code as if the target were of the type\n specified in this option, but still choosing the instructions that it\n will generate based on the cpu specified by a @samp{-mcpu=} option.\n-For some arm implementations better performance can be obtained by using\n+For some ARM implementations better performance can be obtained by using\n this option.\n \n @item -march=<name>\n @kindex -march=\n This specifies the name of the target ARM architecture.  GCC uses this\n-name to determine what kind of instructions it can use when generating\n+name to determine what kind of instructions it can emit when generating\n assembly code.  This option can be used in conjunction with or instead\n of the @samp{-mcpu=} option.  Permissible names are: armv2, armv2a,\n-armv3, armv3m, armv4, armv4t, armv5.\n+armv3, armv3m, armv4, armv4t, armv5, armv5t, armv5te.\n \n @item -mfpe=<number>\n @itemx -mfp=<number>\n @kindex -mfpe=\n @kindex -mfp=\n This specifies the version of the floating point emulation available on\n the target.  Permissible values are 2 and 3.  @samp{-mfp=} is a synonym\n-for @samp{-mfpe=} to support older versions of GCC.\n+for @samp{-mfpe=}, for compatibility with older versions of GCC.\n \n @item -mstructure-size-boundary=<n>\n @kindex -mstructure-size-boundary\n@@ -5486,14 +5477,14 @@ can produce faster, more efficient code, but can also increase the size\n of the program.  The two values are potentially incompatible.  Code\n compiled with one value cannot necessarily expect to work with code or\n libraries compiled with the other value, if they exchange information\n-using structures or unions.  Programmers are encouraged to use the 32\n-value as future versions of the toolchain may default to this value.\n+using structures or unions.\n \n @item -mabort-on-noreturn\n @kindex -mabort-on-noreturn\n @kindex -mnoabort-on-noreturn\n-Generate a call to the function abort at the end of a noreturn function.\n-It will be executed if the function tries to return.\n+Generate a call to the function @code{abort} at the end of a\n+@code{noreturn} function.  It will be executed if the function tries to\n+return.\n \n @item -mlong-calls\n @itemx -mno-long-calls\n@@ -5515,15 +5506,15 @@ the scope of a @samp{#pragma long_calls} directive, will always be\n turned into long calls.\n \n This feature is not enabled by default.  Specifying\n-@samp{--no-long-calls} will restore the default behaviour, as will\n+@samp{-mno-long-calls} will restore the default behaviour, as will\n placing the function calls within the scope of a @samp{#pragma\n long_calls_off} directive.  Note these switches have no effect on how\n the compiler generates code to handle function calls via function\n pointers.\n \n @item -mnop-fun-dllimport\n @kindex -mnop-fun-dllimport\n-Disable the support for the @emph{dllimport} attribute.\n+Disable support for the @emph{dllimport} attribute.\n \n @item -msingle-pic-base\n @kindex -msingle-pic-base\n@@ -5537,62 +5528,47 @@ before execution begins.\n Specify the register to be used for PIC addressing.  The default is R10\n unless stack-checking is enabled, when R9 is used.\n \n-@end table\n+@item -mpoke-function-name\n+@kindex -mpoke-function-name\n+Write the name of each function into the text section, directly\n+preceding the function prologue.  The generated code is similar to this:\n \n-@node Thumb Options\n-@subsection Thumb Options\n-@cindex Thumb Options\n+@smallexample\n+     t0\n+         .ascii \"arm_poke_function_name\", 0\n+         .align\n+     t1\n+         .word 0xff000000 + (t1 - t0)\n+     arm_poke_function_name\n+         mov     ip, sp\n+         stmfd   sp!, @{fp, ip, lr, pc@}\n+         sub     fp, ip, #4\n+@end smallexample\n \n-@table @gcctabopt\n+When performing a stack backtrace, code can inspect the value of\n+@code{pc} stored at @code{fp + 0}.  If the trace function then looks at\n+location @code{pc - 12} and the top 8 bits are set, then we know that\n+there is a function name embedded immediately preceding this location\n+and has length @code{((pc[-3]) & 0xff000000)}.\n \n-@item -mthumb-interwork\n-@kindex -mthumb-interwork\n-@kindex -mno-thumb-interwork\n-Generate code which supports calling between the THUMB and ARM\n-instruction sets.  Without this option the two instruction sets cannot\n-be reliably used inside one program.  The default is\n-@samp{-mno-thumb-interwork}, since slightly smaller code is generated\n-with this option.\n+@item -mthumb\n+@kindex -mthumb\n+Generate code for the 16-bit Thumb instruction set.  The default is to\n+use the 32-bit ARM instruction set.\n \n @item -mtpcs-frame\n @kindex -mtpcs-frame\n @kindex -mno-tpcs-frame\n Generate a stack frame that is compliant with the Thumb Procedure Call\n Standard for all non-leaf functions.  (A leaf function is one that does\n-not call any other functions).  The default is @samp{-mno-apcs-frame}.\n+not call any other functions.)  The default is @samp{-mno-tpcs-frame}.\n \n @item -mtpcs-leaf-frame\n @kindex -mtpcs-leaf-frame\n @kindex -mno-tpcs-leaf-frame\n Generate a stack frame that is compliant with the Thumb Procedure Call\n Standard for all leaf functions.  (A leaf function is one that does\n-not call any other functions).  The default is @samp{-mno-apcs-leaf-frame}.\n-\n-@item -mlittle-endian\n-@kindex -mlittle-endian\n-Generate code for a processor running in little-endian mode.  This is\n-the default for all standard configurations.\n-\n-@item -mbig-endian\n-@kindex -mbig-endian\n-Generate code for a processor running in big-endian mode.\n-\n-@item -mstructure-size-boundary=<n>\n-@kindex -mstructure-size-boundary\n-The size of all structures and unions will be rounded up to a multiple\n-of the number of bits set by this option.  Permissible values are 8 and\n-32.  The default value varies for different toolchains.  For the COFF\n-targeted toolchain the default value is 8.  Specifying the larger number\n-can produced faster, more efficient code, but can also increase the size\n-of the program.  The two values are potentially incompatible.  Code\n-compiled with one value cannot necessarily expect to work with code or\n-libraries compiled with the other value, if they exchange information\n-using structures or unions.  Programmers are encouraged to use the 32\n-value as future versions of the toolchain may default to this value.\n-\n-@item -mnop-fun-dllimport\n-@kindex -mnop-fun-dllimport\n-Disable the support for the @emph{dllimport} attribute.\n+not call any other functions.)  The default is @samp{-mno-apcs-leaf-frame}.\n \n @item -mcallee-super-interworking\n @kindex -mcallee-super-interworking\n@@ -5608,17 +5584,6 @@ execute correctly regardless of whether the target code has been\n compiled for interworking or not.  There is a small overhead in the cost\n of executing a function pointer if this option is enabled.\n \n-@item -msingle-pic-base\n-@kindex -msingle-pic-base\n-Treat the register used for PIC addressing as read-only, rather than\n-loading it in the prologue for each function.  The run-time system is\n-responsible for initialising this register with an appropriate value\n-before execution begins.\n-\n-@item -mpic-register=<reg>\n-@kindex -mpic-register=\n-Specify the register to be used for PIC addressing.  The default is R10.\n-\n @end table\n \n @node MN10200 Options"}]}