{"sha": "7cea661c88ddced65b79e0fadebfa5bc9b412415", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2NlYTY2MWM4OGRkY2VkNjViNzllMGZhZGViZmE1YmM5YjQxMjQxNQ==", "commit": {"author": {"name": "Marc Glisse", "email": "marc.glisse@inria.fr", "date": "2012-09-19T20:45:03Z"}, "committer": {"name": "Marc Glisse", "email": "glisse@gcc.gnu.org", "date": "2012-09-19T20:45:03Z"}, "message": "re PR c++/54581 (decltype and opaque vector types)\n\n2012-09-19  Marc Glisse  <marc.glisse@inria.fr>\n\n\tPR c++/54581\n\ngcc/cp/\n\t* semantics.c (finish_decltype_type): Make vectors not opaque.\n\ngcc/testsuite/\n\t* g++.dg/cpp0x/decltype-54581.C: New testcase.\n\nFrom-SVN: r191500", "tree": {"sha": "1b8b62f4631c171d22b47c9a71ca142f712e2750", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1b8b62f4631c171d22b47c9a71ca142f712e2750"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7cea661c88ddced65b79e0fadebfa5bc9b412415", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7cea661c88ddced65b79e0fadebfa5bc9b412415", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7cea661c88ddced65b79e0fadebfa5bc9b412415", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7cea661c88ddced65b79e0fadebfa5bc9b412415/comments", "author": {"login": "mglisse", "id": 10097863, "node_id": "MDQ6VXNlcjEwMDk3ODYz", "avatar_url": "https://avatars.githubusercontent.com/u/10097863?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mglisse", "html_url": "https://github.com/mglisse", "followers_url": "https://api.github.com/users/mglisse/followers", "following_url": "https://api.github.com/users/mglisse/following{/other_user}", "gists_url": "https://api.github.com/users/mglisse/gists{/gist_id}", "starred_url": "https://api.github.com/users/mglisse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mglisse/subscriptions", "organizations_url": "https://api.github.com/users/mglisse/orgs", "repos_url": "https://api.github.com/users/mglisse/repos", "events_url": "https://api.github.com/users/mglisse/events{/privacy}", "received_events_url": "https://api.github.com/users/mglisse/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b7f401de87c6f396a1d44ac9754e9ec82fd5a028", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7f401de87c6f396a1d44ac9754e9ec82fd5a028", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b7f401de87c6f396a1d44ac9754e9ec82fd5a028"}], "stats": {"total": 43, "additions": 43, "deletions": 0}, "files": [{"sha": "0427a1975038851e196bc96e5bf17d0378e4182a", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7cea661c88ddced65b79e0fadebfa5bc9b412415/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7cea661c88ddced65b79e0fadebfa5bc9b412415/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=7cea661c88ddced65b79e0fadebfa5bc9b412415", "patch": "@@ -1,3 +1,8 @@\n+2012-09-19  Marc Glisse  <marc.glisse@inria.fr>\n+\n+\tPR c++/54581\n+\t* semantics.c (finish_decltype_type): Make vectors not opaque.\n+\n 2012-09-17  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/54575"}, {"sha": "1aa5a8b8b561a460f0317ad38c608e01c48d952e", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7cea661c88ddced65b79e0fadebfa5bc9b412415/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7cea661c88ddced65b79e0fadebfa5bc9b412415/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=7cea661c88ddced65b79e0fadebfa5bc9b412415", "patch": "@@ -5312,6 +5312,11 @@ finish_decltype_type (tree expr, bool id_expression_or_member_access_p,\n \t  cp_lvalue_kind clk = lvalue_kind (expr);\n \t  type = unlowered_expr_type (expr);\n \t  gcc_assert (TREE_CODE (type) != REFERENCE_TYPE);\n+\n+\t  /* For vector types, pick a non-opaque variant.  */\n+\t  if (TREE_CODE (type) == VECTOR_TYPE)\n+\t    type = strip_typedefs (type);\n+\n \t  if (clk != clk_none && !(clk & clk_class))\n \t    type = cp_build_reference_type (type, (clk & clk_rvalueref));\n \t}"}, {"sha": "09c1d3fee7dd545aa022d66a1dc14db52fc707ab", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7cea661c88ddced65b79e0fadebfa5bc9b412415/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7cea661c88ddced65b79e0fadebfa5bc9b412415/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7cea661c88ddced65b79e0fadebfa5bc9b412415", "patch": "@@ -1,3 +1,8 @@\n+2012-09-19  Marc Glisse  <marc.glisse@inria.fr>\n+\n+\tPR c++/54581\n+\t* g++.dg/cpp0x/decltype-54581.C: New testcase.\n+\n 2012-09-19  Steve Ellcey  <sellcey@mips.com>\n \n \t* gcc.target/mips/pr37362.c: Add mips*-mti-elf exception."}, {"sha": "5747e5c7ea6121d657ca1c5aa5868492fab9082a", "filename": "gcc/testsuite/g++.dg/cpp0x/decltype-54581.C", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7cea661c88ddced65b79e0fadebfa5bc9b412415/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdecltype-54581.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7cea661c88ddced65b79e0fadebfa5bc9b412415/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdecltype-54581.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdecltype-54581.C?ref=7cea661c88ddced65b79e0fadebfa5bc9b412415", "patch": "@@ -0,0 +1,28 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-std=gnu++11 -Wall\" } */\n+\n+typedef float v4f __attribute__((vector_size(4*sizeof(float))));\n+\n+template <class T> void eat (T&&) {}\n+\n+void test1 ()\n+{\n+  v4f x = {0,1,2,3};\n+  typedef decltype (x < x) v4i;\n+  v4i y = {4,5,6,7}; // v4i is not opaque\n+  eat (y);\n+}\n+\n+template<class V>\n+void test2 ()\n+{\n+  V x = {0,1,2,3};\n+  typedef decltype (x < x) v4i;\n+  v4i y = {4,5,6,7}; // v4i is not opaque\n+  eat (y);\n+}\n+\n+int main(){\n+  test1();\n+  test2<v4f>();\n+}"}]}