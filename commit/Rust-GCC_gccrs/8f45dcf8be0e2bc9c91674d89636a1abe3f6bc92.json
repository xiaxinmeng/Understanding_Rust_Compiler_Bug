{"sha": "8f45dcf8be0e2bc9c91674d89636a1abe3f6bc92", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGY0NWRjZjhiZTBlMmJjOWM5MTY3NGQ4OTYzNmExYWJlM2Y2YmM5Mg==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2008-08-04T18:29:08Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2008-08-04T18:29:08Z"}, "message": "re PR middle-end/36691 (wrong value left in induction variable)\n\n2008-08-04  Richard Guenther  <rguenther@suse.de>\n\n\tPR middle-end/36691\n\t* tree-ssa-loop-niter.c (number_of_iterations_lt_to_ne): Correctly\n\tcheck for no_overflow.\n\n\t* gcc.c-torture/execute/pr36691.c: New testcase.\n\nFrom-SVN: r138645", "tree": {"sha": "2841ad7e8a81f46f25e504c978974cc370a0a2ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2841ad7e8a81f46f25e504c978974cc370a0a2ec"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8f45dcf8be0e2bc9c91674d89636a1abe3f6bc92", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f45dcf8be0e2bc9c91674d89636a1abe3f6bc92", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f45dcf8be0e2bc9c91674d89636a1abe3f6bc92", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f45dcf8be0e2bc9c91674d89636a1abe3f6bc92/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "25385c279deed040fe5ed545bcf2f453fb3efc97", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25385c279deed040fe5ed545bcf2f453fb3efc97", "html_url": "https://github.com/Rust-GCC/gccrs/commit/25385c279deed040fe5ed545bcf2f453fb3efc97"}], "stats": {"total": 32, "additions": 30, "deletions": 2}, "files": [{"sha": "224764ef985ead6866094c1ba3cf87a03b147b31", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f45dcf8be0e2bc9c91674d89636a1abe3f6bc92/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f45dcf8be0e2bc9c91674d89636a1abe3f6bc92/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8f45dcf8be0e2bc9c91674d89636a1abe3f6bc92", "patch": "@@ -1,3 +1,9 @@\n+2008-08-04  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR middle-end/36691\n+\t* tree-ssa-loop-niter.c (number_of_iterations_lt_to_ne): Correctly\n+\tcheck for no_overflow.\n+\n 2008-08-04  Richard Guenther  <rguenther@suse.de>\n \n \t* tree-vect-transform.c (vectorizable_call): Fix tuplification."}, {"sha": "0041134e91b437125c20c7be3147477af963c975", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f45dcf8be0e2bc9c91674d89636a1abe3f6bc92/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f45dcf8be0e2bc9c91674d89636a1abe3f6bc92/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8f45dcf8be0e2bc9c91674d89636a1abe3f6bc92", "patch": "@@ -1,3 +1,8 @@\n+2008-08-04  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR middle-end/36691\n+\t* gcc.c-torture/execute/pr36691.c: New testcase.\n+\n 2008-08-04  Victor Kaplansky  <victork@il.ibm.com>\n \n \t* gcc.dg/vect/vect-complex-5.c: New test."}, {"sha": "81fe6fd55d984712e549896e144039ca2afb75ad", "filename": "gcc/testsuite/gcc.c-torture/execute/pr36691.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f45dcf8be0e2bc9c91674d89636a1abe3f6bc92/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr36691.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f45dcf8be0e2bc9c91674d89636a1abe3f6bc92/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr36691.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr36691.c?ref=8f45dcf8be0e2bc9c91674d89636a1abe3f6bc92", "patch": "@@ -0,0 +1,17 @@\n+unsigned char g_5;\n+\n+void func_1 (void)\n+{\n+  for (g_5 = 9; g_5 >= 4; g_5 -= 5)\n+    ;\n+}\n+\n+extern void abort (void);\n+int main (void)\n+{\n+  func_1 ();\n+  if (g_5 != 0)\n+    abort ();\n+  return 0;\n+}\n+"}, {"sha": "1d0605e68b506cbac662b062b7c6c78528db909e", "filename": "gcc/tree-ssa-loop-niter.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f45dcf8be0e2bc9c91674d89636a1abe3f6bc92/gcc%2Ftree-ssa-loop-niter.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f45dcf8be0e2bc9c91674d89636a1abe3f6bc92/gcc%2Ftree-ssa-loop-niter.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-niter.c?ref=8f45dcf8be0e2bc9c91674d89636a1abe3f6bc92", "patch": "@@ -697,7 +697,7 @@ number_of_iterations_lt_to_ne (tree type, affine_iv *iv0, affine_iv *iv1,\n       /* The final value of the iv is iv1->base + MOD, assuming that this\n \t computation does not overflow, and that\n \t iv0->base <= iv1->base + MOD.  */\n-      if (!iv1->no_overflow && !integer_zerop (mod))\n+      if (!iv0->no_overflow && !integer_zerop (mod))\n \t{\n \t  bound = fold_build2 (MINUS_EXPR, type,\n \t\t\t       TYPE_MAX_VALUE (type1), tmod);\n@@ -719,7 +719,7 @@ number_of_iterations_lt_to_ne (tree type, affine_iv *iv0, affine_iv *iv1,\n       /* The final value of the iv is iv0->base - MOD, assuming that this\n \t computation does not overflow, and that\n \t iv0->base - MOD <= iv1->base. */\n-      if (!iv0->no_overflow && !integer_zerop (mod))\n+      if (!iv1->no_overflow && !integer_zerop (mod))\n \t{\n \t  bound = fold_build2 (PLUS_EXPR, type1,\n \t\t\t       TYPE_MIN_VALUE (type1), tmod);"}]}