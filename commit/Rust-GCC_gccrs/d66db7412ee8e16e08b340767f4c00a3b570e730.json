{"sha": "d66db7412ee8e16e08b340767f4c00a3b570e730", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDY2ZGI3NDEyZWU4ZTE2ZTA4YjM0MDc2N2Y0YzAwYTNiNTcwZTczMA==", "commit": {"author": {"name": "Matthew Malcomson", "email": "matthew.malcomson@arm.com", "date": "2020-12-01T11:40:18Z"}, "committer": {"name": "Matthew Malcomson", "email": "matthew.malcomson@arm.com", "date": "2020-12-01T11:40:18Z"}, "message": "testsuite: Correct check_effective_target_hwaddress_exec\n\nThis test should ensure that we can compile with hwasan, that such a compiled\nbinary runs as expected, *and* that we're running on a kernel which implements\nthe capability to ignore the top bytes of pointers in syscalls.\n\nIt was expected that a basic test of `int main(void) { return 0; }` would check\nthis, since there is a check called during `__hwasan_init` in libhwasan to\nensure that the kernel we're running on provides a `prctl` to request the\nrelaxed ABI.\n\nUnfortunately, the check in libhwasan has a bug in it, and does not correctly\nfail when the kernel feature is not around.  This means that check is not\nautomatically provided by the runtime.\n\nThe sanitizer runtime will be fixed but would like to install this fix here in\ncase fixing the library is not quick enough for the release (and so that people\nrunning the testsuite do not see spurious errors in the meantime).\n\nTested by running testsuite on an AArch64 machine with and without the required\nkernel.\nObserved that the test does indeed fail when the kernel feature is unavailable\nand pass when the feature is available.\n\nNote that this test is directly targetting AArch64 by using `prctl` numbers\nspecific to it.  That's unfortunate, but once the runtime fix has gone in we\nwill be able to remove that requirement.\n\nOk for trunk?\n\ngcc/testsuite/ChangeLog:\n\n\t* lib/hwasan-dg.exp (check_effective_target_hwaddress_exec): Fix\n\tcheck for correct kernel version.", "tree": {"sha": "50cae150300cc4c15883b4d890a453529d1e06e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/50cae150300cc4c15883b4d890a453529d1e06e6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d66db7412ee8e16e08b340767f4c00a3b570e730", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d66db7412ee8e16e08b340767f4c00a3b570e730", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d66db7412ee8e16e08b340767f4c00a3b570e730", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d66db7412ee8e16e08b340767f4c00a3b570e730/comments", "author": {"login": "mmalcomson", "id": 57484298, "node_id": "MDQ6VXNlcjU3NDg0Mjk4", "avatar_url": "https://avatars.githubusercontent.com/u/57484298?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mmalcomson", "html_url": "https://github.com/mmalcomson", "followers_url": "https://api.github.com/users/mmalcomson/followers", "following_url": "https://api.github.com/users/mmalcomson/following{/other_user}", "gists_url": "https://api.github.com/users/mmalcomson/gists{/gist_id}", "starred_url": "https://api.github.com/users/mmalcomson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mmalcomson/subscriptions", "organizations_url": "https://api.github.com/users/mmalcomson/orgs", "repos_url": "https://api.github.com/users/mmalcomson/repos", "events_url": "https://api.github.com/users/mmalcomson/events{/privacy}", "received_events_url": "https://api.github.com/users/mmalcomson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mmalcomson", "id": 57484298, "node_id": "MDQ6VXNlcjU3NDg0Mjk4", "avatar_url": "https://avatars.githubusercontent.com/u/57484298?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mmalcomson", "html_url": "https://github.com/mmalcomson", "followers_url": "https://api.github.com/users/mmalcomson/followers", "following_url": "https://api.github.com/users/mmalcomson/following{/other_user}", "gists_url": "https://api.github.com/users/mmalcomson/gists{/gist_id}", "starred_url": "https://api.github.com/users/mmalcomson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mmalcomson/subscriptions", "organizations_url": "https://api.github.com/users/mmalcomson/orgs", "repos_url": "https://api.github.com/users/mmalcomson/repos", "events_url": "https://api.github.com/users/mmalcomson/events{/privacy}", "received_events_url": "https://api.github.com/users/mmalcomson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "31f76c9065b4579d263586b069cea2e79a2c4203", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31f76c9065b4579d263586b069cea2e79a2c4203", "html_url": "https://github.com/Rust-GCC/gccrs/commit/31f76c9065b4579d263586b069cea2e79a2c4203"}], "stats": {"total": 19, "additions": 18, "deletions": 1}, "files": [{"sha": "bd2a011947f9d3384ee32ffa9996a49429256af2", "filename": "gcc/testsuite/lib/hwasan-dg.exp", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d66db7412ee8e16e08b340767f4c00a3b570e730/gcc%2Ftestsuite%2Flib%2Fhwasan-dg.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d66db7412ee8e16e08b340767f4c00a3b570e730/gcc%2Ftestsuite%2Flib%2Fhwasan-dg.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fhwasan-dg.exp?ref=d66db7412ee8e16e08b340767f4c00a3b570e730", "patch": "@@ -41,7 +41,24 @@ proc check_effective_target_fsanitize_hwaddress {} {\n \n proc check_effective_target_hwaddress_exec {} {\n     if ![check_runtime hwaddress_exec {\n-\tint main (void) { return 0; }\n+\t#ifdef __cplusplus\n+\textern \"C\" {\n+\t#endif\n+\textern int prctl(int, unsigned long, unsigned long, unsigned long, unsigned long);\n+\t#ifdef __cplusplus\n+\t}\n+\t#endif\n+\tint main (void) {\n+\t#define PR_SET_TAGGED_ADDR_CTRL 55\n+\t#define PR_GET_TAGGED_ADDR_CTRL 56\n+\t#define PR_TAGGED_ADDR_ENABLE (1UL << 0)\n+\t  if (prctl (PR_GET_TAGGED_ADDR_CTRL, 0, 0, 0, 0) == -1)\n+\t    return 1;\n+\t  if (prctl(PR_SET_TAGGED_ADDR_CTRL, PR_TAGGED_ADDR_ENABLE, 0, 0, 0) == -1\n+\t      || !prctl(PR_GET_TAGGED_ADDR_CTRL, 0, 0, 0, 0))\n+\t    return 1;\n+\t  return 0;\n+\t}\n     }] {\n \treturn 0;\n     }"}]}