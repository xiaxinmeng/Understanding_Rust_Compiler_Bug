{"sha": "c2b2b2d7ab77e3c9ee9122b920c5c401151d0bca", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzJiMmIyZDdhYjc3ZTNjOWVlOTEyMmI5MjBjNWM0MDExNTFkMGJjYQ==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2015-05-22T10:32:15Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-05-22T10:32:15Z"}, "message": "exp_ch4.adb: Minor rewording.\n\n2015-05-22  Robert Dewar  <dewar@adacore.com>\n\n\t* exp_ch4.adb: Minor rewording.\n\t* exp_util.ads: Clarify that Find_Prim_Op is only for\n\ttagged types.\n\nFrom-SVN: r223539", "tree": {"sha": "150ab6c8a17cfe56baba4c532fe7680fdabba6eb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/150ab6c8a17cfe56baba4c532fe7680fdabba6eb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c2b2b2d7ab77e3c9ee9122b920c5c401151d0bca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2b2b2d7ab77e3c9ee9122b920c5c401151d0bca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c2b2b2d7ab77e3c9ee9122b920c5c401151d0bca", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2b2b2d7ab77e3c9ee9122b920c5c401151d0bca/comments", "author": null, "committer": null, "parents": [{"sha": "b502ba3c7b960e353e9226b69847adf368293009", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b502ba3c7b960e353e9226b69847adf368293009", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b502ba3c7b960e353e9226b69847adf368293009"}], "stats": {"total": 21, "additions": 13, "deletions": 8}, "files": [{"sha": "9e1d36fa58f4989536daec91d67c0b718c461736", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2b2b2d7ab77e3c9ee9122b920c5c401151d0bca/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2b2b2d7ab77e3c9ee9122b920c5c401151d0bca/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=c2b2b2d7ab77e3c9ee9122b920c5c401151d0bca", "patch": "@@ -1,3 +1,9 @@\n+2015-05-22  Robert Dewar  <dewar@adacore.com>\n+\n+\t* exp_ch4.adb: Minor rewording.\n+\t* exp_util.ads: Clarify that Find_Prim_Op is only for\n+\ttagged types.\n+\n 2015-05-22  Robert Dewar  <dewar@adacore.com>\n \n \t* atree.adb, atree.ads, treepr.adb: Change name Needs_Actuals_Check to"}, {"sha": "9cf4391798bcd325088a24d1c32ce0e0b15b6fa3", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2b2b2d7ab77e3c9ee9122b920c5c401151d0bca/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2b2b2d7ab77e3c9ee9122b920c5c401151d0bca/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=c2b2b2d7ab77e3c9ee9122b920c5c401151d0bca", "patch": "@@ -7662,7 +7662,7 @@ package body Exp_Ch4 is\n \n       if Is_Integer_Type (Rtyp)\n \n-        --  The base value must be safe, compile-time known, and exactly 2\n+        --  The base value must be \"safe compile-time known\", and exactly 2\n \n         and then Nkind (Base) = N_Integer_Literal\n         and then CRT_Safe_Compile_Time_Known_Value (Base)\n@@ -7674,7 +7674,7 @@ package body Exp_Ch4 is\n         and then Esize (Root_Type (Exptyp)) <= Esize (Standard_Integer)\n \n         --  This transformation is not applicable for a modular type with a\n-        --  nonbinary modulus because we do not handle modular reduction in\n+        --  non-binary modulus because we do not handle modular reduction in\n         --  a correct manner if we attempt this transformation in this case.\n \n         and then not Non_Binary_Modulus (Typ)"}, {"sha": "a7d8f4cca2a8a78b001ff872c8bd8bbcae23cff0", "filename": "gcc/ada/exp_util.ads", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2b2b2d7ab77e3c9ee9122b920c5c401151d0bca/gcc%2Fada%2Fexp_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2b2b2d7ab77e3c9ee9122b920c5c401151d0bca/gcc%2Fada%2Fexp_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.ads?ref=c2b2b2d7ab77e3c9ee9122b920c5c401151d0bca", "patch": "@@ -468,13 +468,12 @@ package Exp_Util is\n    --  return the record component containing the tag of Iface.\n \n    function Find_Prim_Op (T : Entity_Id; Name : Name_Id) return Entity_Id;\n-   --  Find the first primitive operation of type T whose name is 'Name'.\n+   --  Find the first primitive operation of a tagged type T with name Name.\n    --  This function allows the use of a primitive operation which is not\n-   --  directly visible. If T is a class wide type, then the reference is\n-   --  to an operation of the corresponding root type. Raises Program_Error\n-   --  exception if no primitive operation is found. This is normally an\n-   --  internal error, but in some cases is an expected consequence of\n-   --  illegalities elsewhere.\n+   --  directly visible. If T is a class wide type, then the reference is to an\n+   --  operation of the corresponding root type. Raises Program_Error exception\n+   --  if no primitive operation is found. This is normally an internal error,\n+   --  but in some cases is an expected consequence of illegalities elsewhere.\n \n    function Find_Prim_Op\n      (T    : Entity_Id;"}]}