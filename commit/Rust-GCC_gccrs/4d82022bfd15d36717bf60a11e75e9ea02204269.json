{"sha": "4d82022bfd15d36717bf60a11e75e9ea02204269", "node_id": "C_kwDOANBUbNoAKDRkODIwMjJiZmQxNWQzNjcxN2JmNjBhMTFlNzVlOWVhMDIyMDQyNjk", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2023-03-02T18:17:52Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2023-03-02T18:17:52Z"}, "message": "c++, debug: Fix up locus of DW_TAG_imported_module [PR108716]\n\nBefore IMPORTED_DECL has been introduced in PR37410, we used to emit correct\nDW_AT_decl_line on DW_TAG_imported_module on the testcase below, after that\nchange we haven't emitted it at all for a while and after some time\nstarted emitting incorrect locus, in particular the location of } closing\nthe function.\n\nThe problem is that while we have correct EXPR_LOCATION on the USING_STMT,\nwhen genericizing that USING_STMT into IMPORTED_DECL we don't copy the\nlocation to DECL_SOURCE_LOCATION, so it gets whatever input_location happens\nto be when it is created.\n\n2023-03-02  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR debug/108716\n\t* cp-gimplify.cc (cp_genericize_r) <case USING_STMT>: Set\n\tDECL_SOURCE_LOCATION on IMPORTED_DECL to expression location\n\tof USING_STMT or input_location.\n\n\t* g++.dg/debug/dwarf2/pr108716.C: New test.", "tree": {"sha": "1eb0dde4e38ad8a41fa9b77e28bbad16abc971c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1eb0dde4e38ad8a41fa9b77e28bbad16abc971c3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4d82022bfd15d36717bf60a11e75e9ea02204269", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d82022bfd15d36717bf60a11e75e9ea02204269", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d82022bfd15d36717bf60a11e75e9ea02204269", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d82022bfd15d36717bf60a11e75e9ea02204269/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "076d309e36c682176e9f85dc8593e6f2c9e6e75f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/076d309e36c682176e9f85dc8593e6f2c9e6e75f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/076d309e36c682176e9f85dc8593e6f2c9e6e75f"}], "stats": {"total": 16, "additions": 16, "deletions": 0}, "files": [{"sha": "921b0e4b120441aa8c769a29848413a9cbb1e7af", "filename": "gcc/cp/cp-gimplify.cc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d82022bfd15d36717bf60a11e75e9ea02204269/gcc%2Fcp%2Fcp-gimplify.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d82022bfd15d36717bf60a11e75e9ea02204269/gcc%2Fcp%2Fcp-gimplify.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-gimplify.cc?ref=4d82022bfd15d36717bf60a11e75e9ea02204269", "patch": "@@ -1530,6 +1530,8 @@ cp_genericize_r (tree *stmt_p, int *walk_subtrees, void *data)\n \t\ttree using_directive = make_node (IMPORTED_DECL);\n \t\tTREE_TYPE (using_directive) = void_type_node;\n \t\tDECL_CONTEXT (using_directive) = current_function_decl;\n+\t\tDECL_SOURCE_LOCATION (using_directive)\n+\t\t  = cp_expr_loc_or_input_loc (stmt);\n \n \t\tIMPORTED_DECL_ASSOCIATED_DECL (using_directive) = decl;\n \t\tDECL_CHAIN (using_directive) = BLOCK_VARS (block);"}, {"sha": "59ed52424dae5e0264eb3b8186a9520798f9fe6a", "filename": "gcc/testsuite/g++.dg/debug/dwarf2/pr108716.C", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d82022bfd15d36717bf60a11e75e9ea02204269/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Fpr108716.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d82022bfd15d36717bf60a11e75e9ea02204269/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Fpr108716.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Fpr108716.C?ref=4d82022bfd15d36717bf60a11e75e9ea02204269", "patch": "@@ -0,0 +1,14 @@\n+// PR debug/108716\n+// { dg-options \"-O0 -gdwarf-5 -dA -fno-merge-debug-strings\" }\n+// { dg-final { scan-assembler \"DIE \\\\(\\[^\\n\\r\\]*\\\\) DW_TAG_imported_module\\[^\\n\\r\\]*\\[\\n\\r]*\\[^\\n\\r\\]* DW_AT_decl_file\\[^\\n\\r\\]*\\[\\n\\r]*\\[^\\n\\r\\]*0xc\\[^\\n\\r\\]* DW_AT_decl_line\\[^\\n\\r\\]*\\[\\n\\r]*(\\[^\\n\\r\\]*0x13\\[^\\n\\r\\]* DW_AT_decl_column\\[^\\n\\r\\]*\\[\\n\\r]*)?\" } }\n+\n+namespace M {\n+  int x = 1;\n+}\n+\n+int\n+main ()\n+{\n+  using namespace M;\n+  return 0;\n+}"}]}