{"sha": "6fbfac9226aa91f37641f562f200cd6fa35b4611", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmZiZmFjOTIyNmFhOTFmMzc2NDFmNTYyZjIwMGNkNmZhMzViNDYxMQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1999-10-08T00:10:09Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1999-10-08T00:10:09Z"}, "message": "expr.c (expand_expr, [...]): Set TREE_USED sooner.\n\n\t* expr.c (expand_expr, TARGET_EXPR): Set TREE_USED sooner.\n\n\t* c-decl.c (finish_struct): Use simpler method of\n\tremoving elements of a singly-linked list.\n\nFrom-SVN: r29860", "tree": {"sha": "b1c3c499a16276b254e73a32086cb072d17359cb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b1c3c499a16276b254e73a32086cb072d17359cb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6fbfac9226aa91f37641f562f200cd6fa35b4611", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6fbfac9226aa91f37641f562f200cd6fa35b4611", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6fbfac9226aa91f37641f562f200cd6fa35b4611", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6fbfac9226aa91f37641f562f200cd6fa35b4611/comments", "author": null, "committer": null, "parents": [{"sha": "11028a5379153307e5eef4b71b836e41b11551c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11028a5379153307e5eef4b71b836e41b11551c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/11028a5379153307e5eef4b71b836e41b11551c6"}], "stats": {"total": 53, "additions": 27, "deletions": 26}, "files": [{"sha": "683e7e2c1a6cf0196bdd0e2998c2ddd844102a40", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6fbfac9226aa91f37641f562f200cd6fa35b4611/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6fbfac9226aa91f37641f562f200cd6fa35b4611/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6fbfac9226aa91f37641f562f200cd6fa35b4611", "patch": "@@ -1,3 +1,12 @@\n+Thu Oct  7 17:02:34 1999  Jason Merrill  <jason@yorick.cygnus.com>\n+\n+\t* expr.c (expand_expr, TARGET_EXPR): Set TREE_USED sooner.\n+\n+Thu Oct  7 17:01:58 1999  Greg McGary  <gkm@gnu.org>\n+\n+\t* c-decl.c (finish_struct): Use simpler method of\n+\tremoving elements of a singly-linked list.\n+\n Thu Oct  7 15:23:28 1999  Michael Meissner  <meissner@cygnus.com>\n \n \t* alpha.md (peephole2's): Comment out peephole2's that generate"}, {"sha": "37915a48e503647a53f00f000b12d058bb395e40", "filename": "gcc/c-decl.c", "status": "modified", "additions": 9, "deletions": 11, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6fbfac9226aa91f37641f562f200cd6fa35b4611/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6fbfac9226aa91f37641f562f200cd6fa35b4611/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=6fbfac9226aa91f37641f562f200cd6fa35b4611", "patch": "@@ -5526,17 +5526,15 @@ finish_struct (t, fieldlist, attributes)\n \n   layout_type (t);\n \n-  /* Delete all zero-width bit-fields from the front of the fieldlist */\n-  while (fieldlist\n-\t && DECL_INITIAL (fieldlist))\n-    fieldlist = TREE_CHAIN (fieldlist);\n-  /* Delete all such members from the rest of the fieldlist */\n-  for (x = fieldlist; x;)\n-    {\n-      if (TREE_CHAIN (x) && DECL_INITIAL (TREE_CHAIN (x)))\n-\tTREE_CHAIN (x) = TREE_CHAIN (TREE_CHAIN (x));\n-      else x = TREE_CHAIN (x);\n-    }\n+  /* Delete all zero-width bit-fields from the fieldlist */\n+  {\n+    tree *fieldlistp = &fieldlist;\n+    while (*fieldlistp && TREE_CODE (*fieldlistp) == FIELD_DECL)\n+      if (DECL_INITIAL (*fieldlistp))\n+\t*fieldlistp = TREE_CHAIN (*fieldlistp);\n+      else\n+\tfieldlistp = &TREE_CHAIN (*fieldlistp);\n+  }\n \n   /*  Now we have the truly final field list.\n       Store it in this type and in the variants.  */"}, {"sha": "79e651fc7f6b72c0406e4dac30856213894e7808", "filename": "gcc/expr.c", "status": "modified", "additions": 9, "deletions": 15, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6fbfac9226aa91f37641f562f200cd6fa35b4611/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6fbfac9226aa91f37641f562f200cd6fa35b4611/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=6fbfac9226aa91f37641f562f200cd6fa35b4611", "patch": "@@ -7128,21 +7128,11 @@ expand_expr (exp, target, tmode, modifier)\n \t  tree negated = fold (build1 (NEGATE_EXPR, type,\n \t\t\t\t       TREE_OPERAND (exp, 1)));\n \n-\t  /* Deal with the case where we can't negate the constant\n-\t     in TYPE.  */\n \t  if (TREE_UNSIGNED (type) || TREE_OVERFLOW (negated))\n-\t    {\n-\t      tree newtype = signed_type (type);\n-\t      tree newop0 = convert (newtype, TREE_OPERAND (exp, 0));\n-\t      tree newop1 = convert (newtype, TREE_OPERAND (exp, 1));\n-\t      tree newneg = fold (build1 (NEGATE_EXPR, newtype, newop1));\n-\n-\t      if (! TREE_OVERFLOW (newneg))\n-\t\treturn expand_expr (convert (type, \n-\t\t\t\t\t     build (PLUS_EXPR, newtype,\n-\t\t\t\t\t\t    newop0, newneg)),\n-\t\t\t\t    target, tmode, ro_modifier);\n-\t    }\n+\t    /* If we can't negate the constant in TYPE, leave it alone and\n+\t       expand_binop will negate it for us.  We used to try to do it\n+\t       here in the signed version of TYPE, but that doesn't work\n+\t       on POINTER_TYPEs.  */;\n \t  else\n \t    {\n \t      exp = build (PLUS_EXPR, type, TREE_OPERAND (exp, 0), negated);\n@@ -7845,6 +7835,11 @@ expand_expr (exp, target, tmode, modifier)\n \tif (! ignore)\n \t  target = original_target;\n \n+\t/* Set this here so that if we get a target that refers to a\n+\t   register variable that's already been used, put_reg_into_stack\n+\t   knows that it should fix up those uses.  */\t   \n+\tTREE_USED (slot) = 1;\n+\n \tif (target == 0)\n \t  {\n \t    if (DECL_RTL (slot) != 0)\n@@ -7914,7 +7909,6 @@ expand_expr (exp, target, tmode, modifier)\n \t/* Mark it as expanded.  */\n \tTREE_OPERAND (exp, 1) = NULL_TREE;\n \n-\tTREE_USED (slot) = 1;\n \tstore_expr (exp1, target, 0);\n \n \texpand_decl_cleanup (NULL_TREE, cleanups);"}]}