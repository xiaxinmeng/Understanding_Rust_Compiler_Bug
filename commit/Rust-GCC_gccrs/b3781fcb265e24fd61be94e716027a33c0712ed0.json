{"sha": "b3781fcb265e24fd61be94e716027a33c0712ed0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjM3ODFmY2IyNjVlMjRmZDYxYmU5NGU3MTYwMjdhMzNjMDcxMmVkMA==", "commit": {"author": {"name": "Bernhard Reutner-Fischer", "email": "aldot@gcc.gnu.org", "date": "2012-03-15T12:25:47Z"}, "committer": {"name": "Bernhard Reutner-Fischer", "email": "aldot@gcc.gnu.org", "date": "2012-03-15T12:25:47Z"}, "message": "gfortran testsuite: implicitly cleanup-modules\n\ngcc/ChangeLog:\n2012-03-15  Bernhard Reutner-Fischer  <aldot@gcc.gnu.org>\n\n\t* doc/sourcebuild.texi (cleanup-modules, keep-modules): Update\n\tdocumentation.\n\ngcc/testsuite/ChangeLog:\n\n2012-03-15  Bernhard Reutner-Fischer  <aldot@gcc.gnu.org>\n\n\t* gfortran.fortran-torture/compile/compile.exp: Simplify.\n\t* gfortran.fortran-torture/execute/execute.exp: Likewise.\n\t* lib/gcc-dg.exp (cleanup-modules): Move to ..\n\t* lib/fortran-modules.exp: .. this new file. Adjust users.\n\t* lib/gfortran-dg.exp (gfortran-dg-runtest,\n\tgfortran-dg-debug-runtest): Call cleanup-modules.\n\t* lib/fortran-torture.exp (fortran-torture-execute,\n\tfortran-torture): Likewise.\n\t* gfortran.dg/coarray/caf.exp: Likewise.\n\t* lib/lto.exp: Likewise.\n\t* gfortran.dg/class_4a.f03: Adjust cleanup-modules and keep-modules.\n\t* gfortran.dg/class_4b.f03: Likewise.\n\t* gfortran.dg/class_4c.f03: Likewise.\n\t* gfortran.dg/class_45a.f03: Likewise.\n\t* gfortran.dg/binding_label_tests_10.f03: Likewise.\n\t* gfortran.dg/binding_label_tests_10_main.f03: Likewise.\n\t* gfortran.dg/binding_label_tests_11.f03: Likewise.\n\t* gfortran.dg/binding_label_tests_11_main.f03: Likewise.\n\t* gfortran.dg/binding_label_tests_13.f03: Likewise.\n\t* gfortran.dg/binding_label_tests_13_main.f03: Likewise.\n\t* gfortran.dg/test_common_binding_labels_2.f03: Likewise.\n\t* gfortran.dg/test_common_binding_labels_2_main.f03: Likewise.\n\t* gfortran.dg/test_common_binding_labels_3.f03: Likewise.\n\t* gfortran.dg/test_common_binding_labels_3_main.f03: Likewise.\n\t* gfortran.dg/whole_file_28.f90: Likewise.\n\t* gfortran.dg/whole_file_29.f90: Likewise.\n\t* gfortran.dg/whole_file_30.f90: Likewise.\n\t* gfortran.dg/whole_file_31.f90: Likewise.\n\nFrom-SVN: r185430", "tree": {"sha": "a97cde0c3e26b8bb5fcf4214f390968b7294c543", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a97cde0c3e26b8bb5fcf4214f390968b7294c543"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b3781fcb265e24fd61be94e716027a33c0712ed0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3781fcb265e24fd61be94e716027a33c0712ed0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b3781fcb265e24fd61be94e716027a33c0712ed0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3781fcb265e24fd61be94e716027a33c0712ed0/comments", "author": null, "committer": null, "parents": [{"sha": "421836855b62225faac7f26ebff5d2794c96268d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/421836855b62225faac7f26ebff5d2794c96268d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/421836855b62225faac7f26ebff5d2794c96268d"}], "stats": {"total": 273, "additions": 113, "deletions": 160}, "files": [{"sha": "fbaaab3375c2d6621cb23c58467b195facdfae1b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3781fcb265e24fd61be94e716027a33c0712ed0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3781fcb265e24fd61be94e716027a33c0712ed0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b3781fcb265e24fd61be94e716027a33c0712ed0", "patch": "@@ -1,9 +1,14 @@\n+2012-03-15  Bernhard Reutner-Fischer  <aldot@gcc.gnu.org>\n+\n+\t* doc/sourcebuild.texi (cleanup-modules, keep-modules): Update\n+\tdocumentation.\n+\n 2012-03-15  Ramana Radhakrishnan  <ramana.radhakrishnan@linaro.org>\n \n \t* config.gcc (target_type_format_char): New. Document it. Set it for\n-        arm*-*-* .\n+\tarm*-*-* .\n \t* configure.ac (gnu_unique_option): Use target_type_format_char in test.\n-        Comment rationale.\n+\tComment rationale.\n \t* configure: Regenerate .\n \n 2012-03-15  Jakub Jelinek  <jakub@redhat.com>"}, {"sha": "fc6f3e621d8a168e53973beadad7e963b7efdd81", "filename": "gcc/doc/sourcebuild.texi", "status": "modified", "additions": 33, "deletions": 2, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3781fcb265e24fd61be94e716027a33c0712ed0/gcc%2Fdoc%2Fsourcebuild.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3781fcb265e24fd61be94e716027a33c0712ed0/gcc%2Fdoc%2Fsourcebuild.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fsourcebuild.texi?ref=b3781fcb265e24fd61be94e716027a33c0712ed0", "patch": "@@ -2107,8 +2107,39 @@ Removes coverage data files generated for this test.\n @item cleanup-ipa-dump @var{suffix}\n Removes IPA dump files generated for this test.\n \n-@item cleanup-modules\n-Removes Fortran module files generated for this test.\n+@item cleanup-modules \"@var{list-of-extra-modules}\"\n+Removes Fortran module files generated for this test, excluding the\n+module names listed in keep-modules.\n+Cleaning up module files is usually done automatically by the testsuite\n+by looking at the source files and removing the modules after the test\n+has been executed.\n+@smallexample\n+module MoD1\n+end module MoD1\n+module Mod2\n+end module Mod2\n+module moD3\n+end module moD3\n+module mod4\n+end module mod4\n+! @{ dg-final @{ cleanup-modules \"mod1 mod2\" @} @} ! redundant\n+! @{ dg-final @{ keep-modules \"mod3 mod4\" @} @}\n+@end smallexample\n+\n+@item keep-modules \"@var{list-of-modules-not-to-delete}\"\n+Whitespace separated list of module names that should not be deleted by\n+cleanup-modules.\n+If the list of modules is empty, all modules defined in this file are kept.\n+@smallexample\n+module maybe_unneeded\n+end module maybe_unneeded\n+module keep1\n+end module keep1\n+module keep2\n+end module keep2\n+! @{ dg-final @{ keep-modules \"keep1 keep2\" @} @} ! just keep these two\n+! @{ dg-final @{ keep-modules \"\" @} @} ! keep all\n+@end smallexample\n \n @item cleanup-profile-file\n Removes profiling files generated for this test."}, {"sha": "03fbf871a51d26fe940ce86c22d0893deb23887f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3781fcb265e24fd61be94e716027a33c0712ed0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3781fcb265e24fd61be94e716027a33c0712ed0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b3781fcb265e24fd61be94e716027a33c0712ed0", "patch": "@@ -1,3 +1,34 @@\n+2012-03-15  Bernhard Reutner-Fischer  <aldot@gcc.gnu.org>\n+\n+\t* gfortran.fortran-torture/compile/compile.exp: Simplify.\n+\t* gfortran.fortran-torture/execute/execute.exp: Likewise.\n+\t* lib/gcc-dg.exp (cleanup-modules): Move to ..\n+\t* lib/fortran-modules.exp: .. this new file. Adjust users.\n+\t* lib/gfortran-dg.exp (gfortran-dg-runtest,\n+\tgfortran-dg-debug-runtest): Call cleanup-modules.\n+\t* lib/fortran-torture.exp (fortran-torture-execute,\n+\tfortran-torture): Likewise.\n+\t* gfortran.dg/coarray/caf.exp: Likewise.\n+\t* lib/lto.exp: Likewise.\n+\t* gfortran.dg/class_4a.f03: Adjust cleanup-modules and keep-modules.\n+\t* gfortran.dg/class_4b.f03: Likewise.\n+\t* gfortran.dg/class_4c.f03: Likewise.\n+\t* gfortran.dg/class_45a.f03: Likewise.\n+\t* gfortran.dg/binding_label_tests_10.f03: Likewise.\n+\t* gfortran.dg/binding_label_tests_10_main.f03: Likewise.\n+\t* gfortran.dg/binding_label_tests_11.f03: Likewise.\n+\t* gfortran.dg/binding_label_tests_11_main.f03: Likewise.\n+\t* gfortran.dg/binding_label_tests_13.f03: Likewise.\n+\t* gfortran.dg/binding_label_tests_13_main.f03: Likewise.\n+\t* gfortran.dg/test_common_binding_labels_2.f03: Likewise.\n+\t* gfortran.dg/test_common_binding_labels_2_main.f03: Likewise.\n+\t* gfortran.dg/test_common_binding_labels_3.f03: Likewise.\n+\t* gfortran.dg/test_common_binding_labels_3_main.f03: Likewise.\n+\t* gfortran.dg/whole_file_28.f90: Likewise.\n+\t* gfortran.dg/whole_file_29.f90: Likewise.\n+\t* gfortran.dg/whole_file_30.f90: Likewise.\n+\t* gfortran.dg/whole_file_31.f90: Likewise.\n+\n 2012-03-15  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/52267"}, {"sha": "e609d34a520623a83ec3fb1a4ca21c03de7bd6e1", "filename": "gcc/testsuite/gfortran.dg/binding_label_tests_10.f03", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3781fcb265e24fd61be94e716027a33c0712ed0/gcc%2Ftestsuite%2Fgfortran.dg%2Fbinding_label_tests_10.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3781fcb265e24fd61be94e716027a33c0712ed0/gcc%2Ftestsuite%2Fgfortran.dg%2Fbinding_label_tests_10.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fbinding_label_tests_10.f03?ref=b3781fcb265e24fd61be94e716027a33c0712ed0", "patch": "@@ -6,5 +6,4 @@ module binding_label_tests_10\n   implicit none\n   integer(c_int), bind(c,name=\"c_one\") :: one\n end module binding_label_tests_10\n-\n-! Do not use dg-final to cleanup-modules\n+! { dg-final { keep-modules \"\" } }"}, {"sha": "48e8e5da9b1e02a1ee00dbf3f4005b32cdd33592", "filename": "gcc/testsuite/gfortran.dg/binding_label_tests_10_main.f03", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3781fcb265e24fd61be94e716027a33c0712ed0/gcc%2Ftestsuite%2Fgfortran.dg%2Fbinding_label_tests_10_main.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3781fcb265e24fd61be94e716027a33c0712ed0/gcc%2Ftestsuite%2Fgfortran.dg%2Fbinding_label_tests_10_main.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fbinding_label_tests_10_main.f03?ref=b3781fcb265e24fd61be94e716027a33c0712ed0", "patch": "@@ -11,5 +11,4 @@ program main\n   use binding_label_tests_10 ! { dg-error \"collides\" }\n   use binding_label_tests_10_main\n end program main\n-\n-! { dg-final { cleanup-modules \"binding_label_tests_10_main binding_label_tests_10\" } }\n+! { dg-final { cleanup-modules \"binding_label_tests_10\" } }"}, {"sha": "8dcf99869fcf6b87114f5318c656608307e634f8", "filename": "gcc/testsuite/gfortran.dg/binding_label_tests_11.f03", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3781fcb265e24fd61be94e716027a33c0712ed0/gcc%2Ftestsuite%2Fgfortran.dg%2Fbinding_label_tests_11.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3781fcb265e24fd61be94e716027a33c0712ed0/gcc%2Ftestsuite%2Fgfortran.dg%2Fbinding_label_tests_11.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fbinding_label_tests_11.f03?ref=b3781fcb265e24fd61be94e716027a33c0712ed0", "patch": "@@ -10,5 +10,4 @@ function one() bind(c, name=\"c_one\")\n     one = 1\n   end function one\n end module binding_label_tests_11\n-\n-! Do not use dg-final to cleanup-modules\n+! { dg-final { keep-modules \"\" } }"}, {"sha": "ef7cfce30eed63de765c2a787920e4c152fb8efb", "filename": "gcc/testsuite/gfortran.dg/binding_label_tests_11_main.f03", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3781fcb265e24fd61be94e716027a33c0712ed0/gcc%2Ftestsuite%2Fgfortran.dg%2Fbinding_label_tests_11_main.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3781fcb265e24fd61be94e716027a33c0712ed0/gcc%2Ftestsuite%2Fgfortran.dg%2Fbinding_label_tests_11_main.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fbinding_label_tests_11_main.f03?ref=b3781fcb265e24fd61be94e716027a33c0712ed0", "patch": "@@ -15,5 +15,4 @@ program main\n   use binding_label_tests_11 ! { dg-error \"collides\" }\n   use binding_label_tests_11_main\n end program main\n-\n-! { dg-final { cleanup-modules \"binding_label_tests_11_main binding_label_tests_11\" } }\n+! { dg-final { cleanup-modules \"binding_label_tests_11\" } }"}, {"sha": "a8e3179bf378d9f4691ddf9c63bd04aa69a93f1d", "filename": "gcc/testsuite/gfortran.dg/binding_label_tests_13.f03", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3781fcb265e24fd61be94e716027a33c0712ed0/gcc%2Ftestsuite%2Fgfortran.dg%2Fbinding_label_tests_13.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3781fcb265e24fd61be94e716027a33c0712ed0/gcc%2Ftestsuite%2Fgfortran.dg%2Fbinding_label_tests_13.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fbinding_label_tests_13.f03?ref=b3781fcb265e24fd61be94e716027a33c0712ed0", "patch": "@@ -6,3 +6,4 @@ module binding_label_tests_13\n   integer(c_int) :: c3\n   bind(c) c3\n end module binding_label_tests_13\n+! { dg-final { keep-modules \"\" } }"}, {"sha": "355f11a346b0a1efcb4e9eedafbbe666675f713d", "filename": "gcc/testsuite/gfortran.dg/binding_label_tests_13_main.f03", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3781fcb265e24fd61be94e716027a33c0712ed0/gcc%2Ftestsuite%2Fgfortran.dg%2Fbinding_label_tests_13_main.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3781fcb265e24fd61be94e716027a33c0712ed0/gcc%2Ftestsuite%2Fgfortran.dg%2Fbinding_label_tests_13_main.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fbinding_label_tests_13_main.f03?ref=b3781fcb265e24fd61be94e716027a33c0712ed0", "patch": "@@ -12,5 +12,4 @@ subroutine c_sub() BIND(c, name = \"C_Sub\")\n     use binding_label_tests_13 ! { dg-error \"collides\" }\n   end subroutine c_sub\n end module binding_label_tests_13_main\n-! { dg-final { cleanup-modules \"binding_label_tests_13 binding_label_tests_13_main\" } }\n-\n+! { dg-final { cleanup-modules \"binding_label_tests_13\" } }"}, {"sha": "c3c9ac20e803ff0422f882a24ca4dab78eb8ca4d", "filename": "gcc/testsuite/gfortran.dg/class_45a.f03", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3781fcb265e24fd61be94e716027a33c0712ed0/gcc%2Ftestsuite%2Fgfortran.dg%2Fclass_45a.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3781fcb265e24fd61be94e716027a33c0712ed0/gcc%2Ftestsuite%2Fgfortran.dg%2Fclass_45a.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fclass_45a.f03?ref=b3781fcb265e24fd61be94e716027a33c0712ed0", "patch": "@@ -26,3 +26,4 @@ function basicGet(self)\n   end function basicGet\n \n end module G_Nodes\n+! { dg-final { keep-modules \"\" } }"}, {"sha": "9441cc79ca8215748510dd794cf3a6dd758d845d", "filename": "gcc/testsuite/gfortran.dg/class_4a.f03", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3781fcb265e24fd61be94e716027a33c0712ed0/gcc%2Ftestsuite%2Fgfortran.dg%2Fclass_4a.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3781fcb265e24fd61be94e716027a33c0712ed0/gcc%2Ftestsuite%2Fgfortran.dg%2Fclass_4a.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fclass_4a.f03?ref=b3781fcb265e24fd61be94e716027a33c0712ed0", "patch": "@@ -12,3 +12,4 @@ module m\n   type t\n   end type t\n end module m\n+! { dg-final { keep-modules \"m\" } }"}, {"sha": "a5d914a523d3b1b4b3123c6d8e4deef896e554be", "filename": "gcc/testsuite/gfortran.dg/class_4b.f03", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3781fcb265e24fd61be94e716027a33c0712ed0/gcc%2Ftestsuite%2Fgfortran.dg%2Fclass_4b.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3781fcb265e24fd61be94e716027a33c0712ed0/gcc%2Ftestsuite%2Fgfortran.dg%2Fclass_4b.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fclass_4b.f03?ref=b3781fcb265e24fd61be94e716027a33c0712ed0", "patch": "@@ -13,3 +13,4 @@ module m2\n   type, extends(t) :: t2\n   end type t2\n end module m2\n+! { dg-final { keep-modules \"m2\" } }"}, {"sha": "088acae6b34192b8201e868431a746adb718d057", "filename": "gcc/testsuite/gfortran.dg/class_4c.f03", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3781fcb265e24fd61be94e716027a33c0712ed0/gcc%2Ftestsuite%2Fgfortran.dg%2Fclass_4c.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3781fcb265e24fd61be94e716027a33c0712ed0/gcc%2Ftestsuite%2Fgfortran.dg%2Fclass_4c.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fclass_4c.f03?ref=b3781fcb265e24fd61be94e716027a33c0712ed0", "patch": "@@ -27,5 +27,4 @@\n   end select\n   print *, i\n end\n-\n-! { dg-final { cleanup-modules \"m m2 m3\" } }\n+! { dg-final { cleanup-modules \"m m2\" } }"}, {"sha": "52dff75316041c018843814092549bc7c830e3e0", "filename": "gcc/testsuite/gfortran.dg/coarray/caf.exp", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3781fcb265e24fd61be94e716027a33c0712ed0/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray%2Fcaf.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3781fcb265e24fd61be94e716027a33c0712ed0/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray%2Fcaf.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray%2Fcaf.exp?ref=b3781fcb265e24fd61be94e716027a33c0712ed0", "patch": "@@ -61,15 +61,18 @@ foreach test [lsort [glob -nocomplain $srcdir/$subdir/*.\\[fF\\]{,90,95,03,08} ]]\n     set option_list [list { -O2 } ]\n \n     set nshort [file tail [file dirname $test]]/[file tail $test]\n+    list-module-names $test\n \n     foreach flags $option_list {\n \tverbose \"Testing $nshort (single), $flags\" 1\n \tdg-test $test \"-fcoarray=single $flags\" \"\" \n+\tcleanup-modules \"\"\n     }\n \n     foreach flags $option_list {\n \tverbose \"Testing $nshort (libcaf_single), $flags\" 1\n \tdg-test $test \"-fcoarray=lib $flags -lcaf_single\" \"\"\n+\tcleanup-modules \"\"\n     }\n }\n torture-finish"}, {"sha": "ad654b35db4613102917309cae5655de5812e0af", "filename": "gcc/testsuite/gfortran.dg/test_common_binding_labels_2.f03", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3781fcb265e24fd61be94e716027a33c0712ed0/gcc%2Ftestsuite%2Fgfortran.dg%2Ftest_common_binding_labels_2.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3781fcb265e24fd61be94e716027a33c0712ed0/gcc%2Ftestsuite%2Fgfortran.dg%2Ftest_common_binding_labels_2.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ftest_common_binding_labels_2.f03?ref=b3781fcb265e24fd61be94e716027a33c0712ed0", "patch": "@@ -12,4 +12,4 @@ module test_common_binding_labels_2\n   integer(c_int) :: i\n   bind(c, name=\"\") /com2/\n end module test_common_binding_labels_2\n-\n+! { dg-final { keep-modules \"\" } }"}, {"sha": "eeb981ec40d16d66a380c5595ecdfea501a4f122", "filename": "gcc/testsuite/gfortran.dg/test_common_binding_labels_2_main.f03", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3781fcb265e24fd61be94e716027a33c0712ed0/gcc%2Ftestsuite%2Fgfortran.dg%2Ftest_common_binding_labels_2_main.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3781fcb265e24fd61be94e716027a33c0712ed0/gcc%2Ftestsuite%2Fgfortran.dg%2Ftest_common_binding_labels_2_main.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ftest_common_binding_labels_2_main.f03?ref=b3781fcb265e24fd61be94e716027a33c0712ed0", "patch": "@@ -21,5 +21,4 @@ program main\n   use test_common_binding_labels_2 ! { dg-error \"does not match\" }\n   use test_common_binding_labels_2_main\n end program main\n-\n-! { dg-final { cleanup-modules \"test_common_binding_labels_2_main test_common_binding_labels_2\" } }\n+! { dg-final { cleanup-modules \"test_common_binding_labels_2\" } }"}, {"sha": "d851b5e727778f81262035a0e1cab474a52c2995", "filename": "gcc/testsuite/gfortran.dg/test_common_binding_labels_3.f03", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3781fcb265e24fd61be94e716027a33c0712ed0/gcc%2Ftestsuite%2Fgfortran.dg%2Ftest_common_binding_labels_3.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3781fcb265e24fd61be94e716027a33c0712ed0/gcc%2Ftestsuite%2Fgfortran.dg%2Ftest_common_binding_labels_3.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ftest_common_binding_labels_3.f03?ref=b3781fcb265e24fd61be94e716027a33c0712ed0", "patch": "@@ -8,3 +8,4 @@ module test_common_binding_labels_3\n   real(c_double) :: s\n   bind(c, name=\"my_common_block\") :: /mycom/\n end module test_common_binding_labels_3\n+! { dg-final { keep-modules \"\" } }"}, {"sha": "91fcff18245d252ea397fbfb8dbdc48125a13161", "filename": "gcc/testsuite/gfortran.dg/test_common_binding_labels_3_main.f03", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3781fcb265e24fd61be94e716027a33c0712ed0/gcc%2Ftestsuite%2Fgfortran.dg%2Ftest_common_binding_labels_3_main.f03", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3781fcb265e24fd61be94e716027a33c0712ed0/gcc%2Ftestsuite%2Fgfortran.dg%2Ftest_common_binding_labels_3_main.f03", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ftest_common_binding_labels_3_main.f03?ref=b3781fcb265e24fd61be94e716027a33c0712ed0", "patch": "@@ -10,5 +10,4 @@ program main\n   use test_common_binding_labels_3_main\n   use test_common_binding_labels_3 ! { dg-error \"collides\" }\n end program main\n-\n-! { dg-final { cleanup-modules \"test_common_binding_labels_3_main test_common_binding_labels_3\" } }\n+! { dg-final { cleanup-modules \"test_common_binding_labels_3\" } }"}, {"sha": "ec9efb2d4dcf7864d6172c03820208da35dec849", "filename": "gcc/testsuite/gfortran.dg/whole_file_28.f90", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3781fcb265e24fd61be94e716027a33c0712ed0/gcc%2Ftestsuite%2Fgfortran.dg%2Fwhole_file_28.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3781fcb265e24fd61be94e716027a33c0712ed0/gcc%2Ftestsuite%2Fgfortran.dg%2Fwhole_file_28.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fwhole_file_28.f90?ref=b3781fcb265e24fd61be94e716027a33c0712ed0", "patch": "@@ -10,3 +10,4 @@ module iso_red\n   end type varying_string\n end module iso_red\n ! DO NOT CLEAN UP THE MODULE FILE - whole_file_29.f90 does it.\n+! { dg-final { keep-modules \"\" } }"}, {"sha": "703754c649db3f14a029d42302301f6d2d8f5366", "filename": "gcc/testsuite/gfortran.dg/whole_file_29.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3781fcb265e24fd61be94e716027a33c0712ed0/gcc%2Ftestsuite%2Fgfortran.dg%2Fwhole_file_29.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3781fcb265e24fd61be94e716027a33c0712ed0/gcc%2Ftestsuite%2Fgfortran.dg%2Fwhole_file_29.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fwhole_file_29.f90?ref=b3781fcb265e24fd61be94e716027a33c0712ed0", "patch": "@@ -24,4 +24,4 @@ subroutine syntax_init_from_ifile ()\n   end subroutine syntax_init_from_ifile\n end module syntax_rules\n end\n-! { dg-final { cleanup-modules \"syntax_rules ifiles iso_red\" } }\n+! { dg-final { cleanup-modules \"iso_red\" } }"}, {"sha": "d8e401eeb209502368bcff1ee4b9a8e495ec2ff5", "filename": "gcc/testsuite/gfortran.dg/whole_file_30.f90", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3781fcb265e24fd61be94e716027a33c0712ed0/gcc%2Ftestsuite%2Fgfortran.dg%2Fwhole_file_30.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3781fcb265e24fd61be94e716027a33c0712ed0/gcc%2Ftestsuite%2Fgfortran.dg%2Fwhole_file_30.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fwhole_file_30.f90?ref=b3781fcb265e24fd61be94e716027a33c0712ed0", "patch": "@@ -13,3 +13,4 @@ module system_defs_m\n   end type sysvector_t\n end module system_defs_m\n ! DO NOT CLEAN UP THE MODULE FILE - whole_file_31.f90 does it.\n+! { dg-final { keep-modules \"\" } }"}, {"sha": "eb77055b91ffb204127a2e6149a5c530072aa368", "filename": "gcc/testsuite/gfortran.dg/whole_file_31.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3781fcb265e24fd61be94e716027a33c0712ed0/gcc%2Ftestsuite%2Fgfortran.dg%2Fwhole_file_31.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3781fcb265e24fd61be94e716027a33c0712ed0/gcc%2Ftestsuite%2Fgfortran.dg%2Fwhole_file_31.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fwhole_file_31.f90?ref=b3781fcb265e24fd61be94e716027a33c0712ed0", "patch": "@@ -18,4 +18,4 @@ program t\n   type(sysvector_t), target :: sol\n   solution => sol\n end program t\n-! { dg-final { cleanup-modules \"system_defs_m convecreac_m\" } }\n+! { dg-final { cleanup-modules \"system_defs_m\" } }"}, {"sha": "5bc8d7fb87605883ae3cd61a4b6154dbc3a9df41", "filename": "gcc/testsuite/gfortran.fortran-torture/compile/compile.exp", "status": "modified", "additions": 1, "deletions": 64, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3781fcb265e24fd61be94e716027a33c0712ed0/gcc%2Ftestsuite%2Fgfortran.fortran-torture%2Fcompile%2Fcompile.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3781fcb265e24fd61be94e716027a33c0712ed0/gcc%2Ftestsuite%2Fgfortran.fortran-torture%2Fcompile%2Fcompile.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.fortran-torture%2Fcompile%2Fcompile.exp?ref=b3781fcb265e24fd61be94e716027a33c0712ed0", "patch": "@@ -28,75 +28,12 @@ load_lib torture-options.exp\n torture-init\n set-torture-options [get-fortran-torture-options]\n \n-foreach testcase [lsort [glob -nocomplain $srcdir/$subdir/*.f]] {\n+foreach testcase [lsort [glob -nocomplain $srcdir/$subdir/*.\\[fF\\]{,90,95,03,08} ]] {\n     # If we're only testing specific files and this isn't one of them, skip it.\n     if ![runtest_file_p $runtests $testcase] then {\n \tcontinue\n     }\n     fortran-torture $testcase\n }\n \n-foreach testcase [lsort [glob -nocomplain $srcdir/$subdir/*.F]] {\n-    if ![runtest_file_p $runtests $testcase] then {\n-\tcontinue\n-    }\n-    fortran-torture $testcase\n-}\n-\n-foreach testcase [lsort [glob -nocomplain $srcdir/$subdir/*.f90]] {\n-    if ![runtest_file_p $runtests $testcase] then {\n-\tcontinue\n-    }\n-    fortran-torture $testcase\n-}\n-\n-foreach testcase [lsort [glob -nocomplain $srcdir/$subdir/*.F90]] {\n-    if ![runtest_file_p $runtests $testcase] then {\n-\tcontinue\n-    }\n-    fortran-torture $testcase\n-}\n-\n-foreach testcase [lsort [glob -nocomplain $srcdir/$subdir/*.f95]] {\n-    if ![runtest_file_p $runtests $testcase] then {\n-\tcontinue\n-    }\n-    fortran-torture $testcase\n-}\n-\n-foreach testcase [lsort [glob -nocomplain $srcdir/$subdir/*.F95]] {\n-    if ![runtest_file_p $runtests $testcase] then {\n-\tcontinue\n-    }\n-    fortran-torture $testcase\n-}\n-\n-foreach testcase [lsort [glob -nocomplain $srcdir/$subdir/*.f03]] {\n-    if ![runtest_file_p $runtests $testcase] then {\n-\tcontinue\n-    }\n-    fortran-torture $testcase\n-}\n-\n-foreach testcase [lsort [glob -nocomplain $srcdir/$subdir/*.F03]] {\n-    if ![runtest_file_p $runtests $testcase] then {\n-\tcontinue\n-    }\n-    fortran-torture $testcase\n-}\n-\n-foreach testcase [lsort [glob -nocomplain $srcdir/$subdir/*.f08]] {\n-    if ![runtest_file_p $runtests $testcase] then {\n-\tcontinue\n-    }\n-    fortran-torture $testcase\n-}\n-\n-foreach testcase [lsort [glob -nocomplain $srcdir/$subdir/*.F08]] {\n-    if ![runtest_file_p $runtests $testcase] then {\n-\tcontinue\n-    }\n-    fortran-torture $testcase\n-}\n-\n torture-finish"}, {"sha": "d9f0a1bedfd41d760da1b2a4feba28c41d3a57aa", "filename": "gcc/testsuite/gfortran.fortran-torture/execute/execute.exp", "status": "modified", "additions": 1, "deletions": 64, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3781fcb265e24fd61be94e716027a33c0712ed0/gcc%2Ftestsuite%2Fgfortran.fortran-torture%2Fexecute%2Fexecute.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3781fcb265e24fd61be94e716027a33c0712ed0/gcc%2Ftestsuite%2Fgfortran.fortran-torture%2Fexecute%2Fexecute.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.fortran-torture%2Fexecute%2Fexecute.exp?ref=b3781fcb265e24fd61be94e716027a33c0712ed0", "patch": "@@ -32,75 +32,12 @@ load_lib torture-options.exp\n torture-init\n set-torture-options [get-fortran-torture-options]\n \n-foreach testcase [lsort [glob -nocomplain $srcdir/$subdir/*.f]] {\n+foreach testcase [lsort [glob -nocomplain $srcdir/$subdir/*.\\[fF\\]{,90,95,03,08} ]] {\n     # If we're only testing specific files and this isn't one of them, skip it.\n     if ![runtest_file_p $runtests $testcase] then {\n \tcontinue\n     }\n     fortran-torture-execute $testcase\n }\n \n-foreach testcase [lsort [glob -nocomplain $srcdir/$subdir/*.F]] {\n-    if ![runtest_file_p $runtests $testcase] then {\n-\tcontinue\n-    }\n-    fortran-torture-execute $testcase\n-}\n-\n-foreach testcase [lsort [glob -nocomplain $srcdir/$subdir/*.f90]] {\n-    if ![runtest_file_p $runtests $testcase] then {\n-\tcontinue\n-    }\n-    fortran-torture-execute $testcase\n-}\n-\n-foreach testcase [lsort [glob -nocomplain $srcdir/$subdir/*.F90]] {\n-    if ![runtest_file_p $runtests $testcase] then {\n-\tcontinue\n-    }\n-    fortran-torture-execute $testcase\n-}\n-\n-foreach testcase [lsort [glob -nocomplain $srcdir/$subdir/*.f95]] {\n-    if ![runtest_file_p $runtests $testcase] then {\n-\tcontinue\n-    }\n-    fortran-torture-execute $testcase\n-}\n-\n-foreach testcase [lsort [glob -nocomplain $srcdir/$subdir/*.F95]] {\n-    if ![runtest_file_p $runtests $testcase] then {\n-\tcontinue\n-    }\n-    fortran-torture-execute $testcase\n-}\n-\n-foreach testcase [lsort [glob -nocomplain $srcdir/$subdir/*.f03]] {\n-    if ![runtest_file_p $runtests $testcase] then {\n-\tcontinue\n-    }\n-    fortran-torture-execute $testcase\n-}\n-\n-foreach testcase [lsort [glob -nocomplain $srcdir/$subdir/*.F03]] {\n-    if ![runtest_file_p $runtests $testcase] then {\n-\tcontinue\n-    }\n-    fortran-torture-execute $testcase\n-}\n-\n-foreach testcase [lsort [glob -nocomplain $srcdir/$subdir/*.f08]] {\n-    if ![runtest_file_p $runtests $testcase] then {\n-\tcontinue\n-    }\n-    fortran-torture-execute $testcase\n-}\n-\n-foreach testcase [lsort [glob -nocomplain $srcdir/$subdir/*.F08]] {\n-    if ![runtest_file_p $runtests $testcase] then {\n-\tcontinue\n-    }\n-    fortran-torture-execute $testcase\n-}\n-\n torture-finish"}, {"sha": "9d875a00bb5f69860b88fb06f98e4614c1637c96", "filename": "gcc/testsuite/lib/fortran-torture.exp", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3781fcb265e24fd61be94e716027a33c0712ed0/gcc%2Ftestsuite%2Flib%2Ffortran-torture.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3781fcb265e24fd61be94e716027a33c0712ed0/gcc%2Ftestsuite%2Flib%2Ffortran-torture.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ffortran-torture.exp?ref=b3781fcb265e24fd61be94e716027a33c0712ed0", "patch": "@@ -21,6 +21,7 @@\n # based on f-torture.exp, which was written by Rob Savoye.\n \n load_lib target-supports.exp\n+load_lib fortran-modules.exp\n \n # Return the list of options to use for fortran torture tests.\n # The default option list can be overridden by\n@@ -218,6 +219,7 @@ proc fortran-torture-execute { src } {\n     if [string match \"/*\" $testcase] {\n \tset testcase \"[file tail [file dirname $src]]/[file tail $src]\"\n     }\n+    list-module-names $src\n \n     # Walk the list of options and copmile and run the testcase for all\n     # options that are not explicitly disabled by the .x script (if present).\n@@ -332,6 +334,7 @@ proc fortran-torture-execute { src } {\n         }\n \t$status \"$testcase execution, $option\"\n     }\n+    cleanup-modules \"\"\n }\n \n \n@@ -390,7 +393,8 @@ proc fortran-torture { args } {\n \t    return\n \t}\n     }\n-   \n+    list-module-names $src\n+\n     # loop through all the options\n     set option_list $torture_with_loops\n     foreach option $option_list {\n@@ -406,6 +410,7 @@ proc fortran-torture { args } {\n \t}\n \n \tfortran-torture-compile $src \"$option $options\"\n+\tcleanup-modules \"\"\n     }\n }\n "}, {"sha": "4666edec8be6075b6c9bcd5840cedc2c13571cfa", "filename": "gcc/testsuite/lib/gcc-dg.exp", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3781fcb265e24fd61be94e716027a33c0712ed0/gcc%2Ftestsuite%2Flib%2Fgcc-dg.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3781fcb265e24fd61be94e716027a33c0712ed0/gcc%2Ftestsuite%2Flib%2Fgcc-dg.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fgcc-dg.exp?ref=b3781fcb265e24fd61be94e716027a33c0712ed0", "patch": "@@ -29,6 +29,7 @@ load_lib prune.exp\n load_lib libgloss.exp\n load_lib target-libpath.exp\n load_lib torture-options.exp\n+load_lib fortran-modules.exp\n \n # We set LC_ALL and LANG to C so that we get the same error messages as expected.\n setenv LC_ALL C\n@@ -573,13 +574,6 @@ proc cleanup-saved-temps { args } {\n     }\n }\n \n-# Remove files for specified Fortran modules.\n-proc cleanup-modules { modlist } {\n-    foreach modname $modlist {\n-\tremove-build-file [string tolower $modname].mod\n-    }\n-}\n-\n # Scan Fortran modules for a given regexp.\n #\n # Argument 0 is the module name"}, {"sha": "50753dff88c5657bbb79aa4eaa0f176dce367d95", "filename": "gcc/testsuite/lib/gfortran-dg.exp", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3781fcb265e24fd61be94e716027a33c0712ed0/gcc%2Ftestsuite%2Flib%2Fgfortran-dg.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3781fcb265e24fd61be94e716027a33c0712ed0/gcc%2Ftestsuite%2Flib%2Fgfortran-dg.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fgfortran-dg.exp?ref=b3781fcb265e24fd61be94e716027a33c0712ed0", "patch": "@@ -111,10 +111,12 @@ proc gfortran-dg-runtest { testcases default-extra-flags } {\n \t}\n \n \tset nshort [file tail [file dirname $test]]/[file tail $test]\n+\tlist-module-names $test\n \n \tforeach flags $option_list {\n \t    verbose \"Testing $nshort, $flags\" 1\n \t    dg-test $test $flags ${default-extra-flags}\n+\t    cleanup-modules \"\"\n \t}\n     }\n \n@@ -171,6 +173,7 @@ proc gfortran-dg-debug-runtest { target_compile trivial opt_opts testcases } {\n        }\n \n        set nshort [file tail [file dirname $test]]/[file tail $test]\n+\tlist-module-names $test\n \n        foreach flags $DEBUG_TORTURE_OPTIONS {\n            set doit 1\n@@ -179,6 +182,7 @@ proc gfortran-dg-debug-runtest { target_compile trivial opt_opts testcases } {\n            if { $doit } {\n                verbose -log \"Testing $nshort, $flags\" 1\n                dg-test $test $flags \"\"\n+\t\tcleanup-modules \"\"\n            }\n        }\n     }"}, {"sha": "536d629f9bb7a79b43b0e99cad5181f08aa455c8", "filename": "gcc/testsuite/lib/lto.exp", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3781fcb265e24fd61be94e716027a33c0712ed0/gcc%2Ftestsuite%2Flib%2Flto.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3781fcb265e24fd61be94e716027a33c0712ed0/gcc%2Ftestsuite%2Flib%2Flto.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Flto.exp?ref=b3781fcb265e24fd61be94e716027a33c0712ed0", "patch": "@@ -499,7 +499,10 @@ proc lto-execute { src1 sid } {\n \tverbose \"$testcase not supported on this target, skipping it\" 3\n \treturn\n     }\n-\n+    # Should be safe for non-fortran too but be paranoid..\n+    if {$sid eq \"f_lto\"} {\n+\tlist-module-names $src_list\n+    }\n     regsub \"_0.*\" $testcase \"\" testcase\n \n     # Set up the base name of executable files so they'll be unique.\n@@ -578,6 +581,10 @@ proc lto-execute { src1 sid } {\n \t     || ![string compare \"link\" $compile_type] } {\n \t    file_on_host delete $execname\n \t}\n+\t# Should be safe for non-fortran too but be paranoid..\n+\tif {$sid eq \"f_lto\"} {\n+\t    cleanup-modules \"\"\n+\t}\n     }\n }\n "}]}