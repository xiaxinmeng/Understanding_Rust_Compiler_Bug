{"sha": "34c6743caf207e4b0a8d6bb07c01d9c4d4376d70", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzRjNjc0M2NhZjIwN2U0YjBhOGQ2YmIwN2MwMWQ5YzRkNDM3NmQ3MA==", "commit": {"author": {"name": "Kai Tietz", "email": "kai.tietz@onevision.com", "date": "2009-09-08T15:26:50Z"}, "committer": {"name": "Kai Tietz", "email": "ktietz@gcc.gnu.org", "date": "2009-09-08T15:26:50Z"}, "message": "tree-ssa-reassoc.c (find_operand_rank): Cast pointer via intptr_t to long type.\n\n2009-09-08  Kai Tietz  <kai.tietz@onevision.com>\n\n        * tree-ssa-reassoc.c (find_operand_rank): Cast pointer\n        via intptr_t to long type.\n        (insert_operand_rank): Cast long type via intptr_t to\n        pointer type.\n        * genattrtab.c (RTL_HASH): Use intptr_t to cast from\n        pointer to scalar.\n        * c-pretty-print.c (pp_c_tree_decl_identifier): Cast\n        from pointer to unsigned via uintptr_t.\n\nFrom-SVN: r151515", "tree": {"sha": "7922f6a551d69f2137de1d9da63fcd43fe9d95e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7922f6a551d69f2137de1d9da63fcd43fe9d95e7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/34c6743caf207e4b0a8d6bb07c01d9c4d4376d70", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34c6743caf207e4b0a8d6bb07c01d9c4d4376d70", "html_url": "https://github.com/Rust-GCC/gccrs/commit/34c6743caf207e4b0a8d6bb07c01d9c4d4376d70", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34c6743caf207e4b0a8d6bb07c01d9c4d4376d70/comments", "author": null, "committer": null, "parents": [{"sha": "7c2a2dbf5018d6d79251c84d0ad0be3aee3e6204", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c2a2dbf5018d6d79251c84d0ad0be3aee3e6204", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c2a2dbf5018d6d79251c84d0ad0be3aee3e6204"}], "stats": {"total": 17, "additions": 13, "deletions": 4}, "files": [{"sha": "7ee2b11e715b6cd579aa222e0750c65ca22d2262", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34c6743caf207e4b0a8d6bb07c01d9c4d4376d70/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34c6743caf207e4b0a8d6bb07c01d9c4d4376d70/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=34c6743caf207e4b0a8d6bb07c01d9c4d4376d70", "patch": "@@ -1,5 +1,14 @@\n 2009-09-08  Kai Tietz  <kai.tietz@onevision.com>\n \n+\t* tree-ssa-reassoc.c (find_operand_rank): Cast pointer\n+\tvia intptr_t to long type.\n+\t(insert_operand_rank): Cast long type via intptr_t to\n+\tpointer type.\n+\t* genattrtab.c (RTL_HASH): Use intptr_t to cast from\n+\tpointer to scalar.\n+\t* c-pretty-print.c (pp_c_tree_decl_identifier): Cast\n+\tfrom pointer to unsigned via uintptr_t.\n+\n \t* configure.ac (GCC_STDINT_TYPES): Initialize intptr_t,\n \tuintptr_t, HAVE_INTTYPES_H, HAVE_STDINT_H, HAVE_UINTPTR_T,\n \tand HAVE_INTPTR_T."}, {"sha": "c4e6e96c296b0c0b6a7dc69026f5721b81139775", "filename": "gcc/c-pretty-print.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34c6743caf207e4b0a8d6bb07c01d9c4d4376d70/gcc%2Fc-pretty-print.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34c6743caf207e4b0a8d6bb07c01d9c4d4376d70/gcc%2Fc-pretty-print.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-pretty-print.c?ref=34c6743caf207e4b0a8d6bb07c01d9c4d4376d70", "patch": "@@ -2235,7 +2235,7 @@ pp_c_tree_decl_identifier (c_pretty_printer *pp, tree t)\n   else\n     {\n       static char xname[8];\n-      sprintf (xname, \"<U%4x>\", ((unsigned)((unsigned long)(t) & 0xffff)));\n+      sprintf (xname, \"<U%4x>\", ((unsigned)((uintptr_t)(t) & 0xffff)));\n       name = xname;\n     }\n "}, {"sha": "4d6295af604691e4fe3ef3ac751ab25ad8d0c5d1", "filename": "gcc/genattrtab.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34c6743caf207e4b0a8d6bb07c01d9c4d4376d70/gcc%2Fgenattrtab.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34c6743caf207e4b0a8d6bb07c01d9c4d4376d70/gcc%2Fgenattrtab.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenattrtab.c?ref=34c6743caf207e4b0a8d6bb07c01d9c4d4376d70", "patch": "@@ -319,7 +319,7 @@ static struct attr_hash *attr_hash_table[RTL_HASH_SIZE];\n \n /* Here is how primitive or already-shared RTL's hash\n    codes are made.  */\n-#define RTL_HASH(RTL) ((long) (RTL) & 0777777)\n+#define RTL_HASH(RTL) ((intptr_t) (RTL) & 0777777)\n \n /* Add an entry to the hash table for RTL with hash code HASHCODE.  */\n "}, {"sha": "55ce2f65a4f65ecb93340ece8844382d73948ce7", "filename": "gcc/tree-ssa-reassoc.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34c6743caf207e4b0a8d6bb07c01d9c4d4376d70/gcc%2Ftree-ssa-reassoc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34c6743caf207e4b0a8d6bb07c01d9c4d4376d70/gcc%2Ftree-ssa-reassoc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-reassoc.c?ref=34c6743caf207e4b0a8d6bb07c01d9c4d4376d70", "patch": "@@ -192,7 +192,7 @@ static inline long\n find_operand_rank (tree e)\n {\n   void **slot = pointer_map_contains (operand_rank, e);\n-  return slot ? (long) *slot : -1;\n+  return slot ? (long) (intptr_t) *slot : -1;\n }\n \n /* Insert {E,RANK} into the operand rank hashtable.  */\n@@ -204,7 +204,7 @@ insert_operand_rank (tree e, long rank)\n   gcc_assert (rank > 0);\n   slot = pointer_map_insert (operand_rank, e);\n   gcc_assert (!*slot);\n-  *slot = (void *) rank;\n+  *slot = (void *) (intptr_t) rank;\n }\n \n /* Given an expression E, return the rank of the expression.  */"}]}