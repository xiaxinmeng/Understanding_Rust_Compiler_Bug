{"sha": "16b0521384676b7f6e5dec4b0ebb16b398002858", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTZiMDUyMTM4NDY3NmI3ZjZlNWRlYzRiMGViYjE2YjM5ODAwMjg1OA==", "commit": {"author": {"name": "Ralf Wildenhues", "email": "Ralf.Wildenhues@gmx.de", "date": "2008-09-14T06:21:12Z"}, "committer": {"name": "Ralf Wildenhues", "email": "rwild@gcc.gnu.org", "date": "2008-09-14T06:21:12Z"}, "message": "a-crbtgk.adb, [...]: Fix typos in comments.\n\ngcc/ada/\n\t* a-crbtgk.adb, a-direct.ads, a-tasatt.adb, ali.ads,\n\tbindgen.adb, checks.adb, einfo.ads, exp_aggr.adb, exp_ch11.adb,\n\texp_ch3.adb, exp_ch4.adb, exp_ch6.adb, exp_ch7.adb, exp_ch9.adb,\n\texp_dbug.ads, exp_disp.adb, exp_dist.adb, exp_pakd.adb,\n\texp_util.adb, g-alveop.ads, g-comlin.adb, g-comlin.ads,\n\tg-diopit.adb, g-socket.ads, gcc-interface/decl.c,\n\tgcc-interface/gigi.h, gcc-interface/trans.c,\n\tlib-load.adb, lib-xref.ads, make.adb, mlib-prj.adb, nlists.ads,\n\topt.ads, par-ch10.adb, par-ch5.adb, par.adb, s-os_lib.ads,\n\ts-oscons-tmplt.c, s-parint.ads, s-regpat.ads, s-shasto.ads,\n\ts-stausa.ads, s-taprop-vms.adb, sem.adb, sem_ch10.adb,\n\tsem_ch11.adb, sem_ch12.adb, sem_ch13.adb, sem_ch3.adb,\n\tsem_ch3.ads, sem_ch4.adb, sem_ch6.adb, sem_ch7.adb, sem_ch8.adb,\n\tsem_elim.adb, sem_prag.adb, sem_util.adb, sem_util.ads,\n\tsem_warn.adb, sinfo.ads, styleg.adb, vms_data.ads: Fix typos in\n\tcomments.\n\t* gnathtml.pl: Fix typos.\n\nFrom-SVN: r140356", "tree": {"sha": "9fe2cc226a29d0bfa287d42cd8fd7d4d8038268a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9fe2cc226a29d0bfa287d42cd8fd7d4d8038268a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/16b0521384676b7f6e5dec4b0ebb16b398002858", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16b0521384676b7f6e5dec4b0ebb16b398002858", "html_url": "https://github.com/Rust-GCC/gccrs/commit/16b0521384676b7f6e5dec4b0ebb16b398002858", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16b0521384676b7f6e5dec4b0ebb16b398002858/comments", "author": null, "committer": null, "parents": [{"sha": "4549c47ceb3c65ed65967e8f05b3396be587c305", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4549c47ceb3c65ed65967e8f05b3396be587c305", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4549c47ceb3c65ed65967e8f05b3396be587c305"}], "stats": {"total": 203, "additions": 111, "deletions": 92}, "files": [{"sha": "747758b50ea0dd6faff63f976721ce2d2535087b", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=16b0521384676b7f6e5dec4b0ebb16b398002858", "patch": "@@ -1,3 +1,23 @@\n+2008-09-14  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n+\n+\t* a-crbtgk.adb, a-direct.ads, a-tasatt.adb, ali.ads,\n+\tbindgen.adb, checks.adb, einfo.ads, exp_aggr.adb, exp_ch11.adb,\n+\texp_ch3.adb, exp_ch4.adb, exp_ch6.adb, exp_ch7.adb, exp_ch9.adb,\n+\texp_dbug.ads, exp_disp.adb, exp_dist.adb, exp_pakd.adb,\n+\texp_util.adb, g-alveop.ads, g-comlin.adb, g-comlin.ads,\n+\tg-diopit.adb, g-socket.ads, gcc-interface/decl.c,\n+\tgcc-interface/gigi.h, gcc-interface/trans.c,\n+\tlib-load.adb, lib-xref.ads, make.adb, mlib-prj.adb, nlists.ads,\n+\topt.ads, par-ch10.adb, par-ch5.adb, par.adb, s-os_lib.ads,\n+\ts-oscons-tmplt.c, s-parint.ads, s-regpat.ads, s-shasto.ads,\n+\ts-stausa.ads, s-taprop-vms.adb, sem.adb, sem_ch10.adb,\n+\tsem_ch11.adb, sem_ch12.adb, sem_ch13.adb, sem_ch3.adb,\n+\tsem_ch3.ads, sem_ch4.adb, sem_ch6.adb, sem_ch7.adb, sem_ch8.adb,\n+\tsem_elim.adb, sem_prag.adb, sem_util.adb, sem_util.ads,\n+\tsem_warn.adb, sinfo.ads, styleg.adb, vms_data.ads: Fix typos in\n+\tcomments.\n+\t* gnathtml.pl: Fix typos.\n+\n 2008-09-10  Joel Sherrill <joel.sherrill@oarcorp.com>\n \n \t* gcc-interface/Makefile.in: Switch RTEMS to s-interr-hwint.adb."}, {"sha": "a8acc40c94dd710224b482c2b09366360c554392", "filename": "gcc/ada/a-crbtgk.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fa-crbtgk.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fa-crbtgk.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-crbtgk.adb?ref=16b0521384676b7f6e5dec4b0ebb16b398002858", "patch": "@@ -205,7 +205,7 @@ package body Ada.Containers.Red_Black_Trees.Generic_Keys is\n       pragma Assert (Tree.Length > 0);\n \n       --  A hint can either name the node that immediately follows Key,\n-      --  or immediately precedes Key. We first test whether Key is is\n+      --  or immediately precedes Key. We first test whether Key is\n       --  less than the hint, and if so we compare Key to the node that\n       --  precedes the hint. If Key is both less than the hint and\n       --  greater than the hint's preceding neighbor, then we're done;"}, {"sha": "40992e0228d928a3e8375acdfe0de919561b87e7", "filename": "gcc/ada/a-direct.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fa-direct.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fa-direct.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-direct.ads?ref=16b0521384676b7f6e5dec4b0ebb16b398002858", "patch": "@@ -317,7 +317,7 @@ package Ada.Directories is\n    procedure End_Search (Search : in out Search_Type);\n    --  Ends the search represented by Search. After a successful call on\n    --  End_Search, the object Search will have no entries available. Note\n-   --  that is is not necessary to call End_Search if the call to Start_Search\n+   --  that it is not necessary to call End_Search if the call to Start_Search\n    --  was unsuccessful and raised an exception (but it is harmless to make\n    --  the call in this case).\n "}, {"sha": "10d29b61e42b4edce3e4d3fb750c7909d6aeff2d", "filename": "gcc/ada/a-tasatt.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fa-tasatt.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fa-tasatt.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-tasatt.adb?ref=16b0521384676b7f6e5dec4b0ebb16b398002858", "patch": "@@ -719,7 +719,7 @@ begin\n                In_Use := In_Use or Two_To_J;\n                Local.Index := J;\n \n-               --  This unchecked conversions can give a warning when the the\n+               --  This unchecked conversions can give a warning when the\n                --  alignment is incorrect, but it will not be used in such a\n                --  case anyway, so the warning can be safely ignored.\n "}, {"sha": "c4be2ef9eec552e28ca23bf0c02c14f2d3155997", "filename": "gcc/ada/ali.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fali.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fali.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fali.ads?ref=16b0521384676b7f6e5dec4b0ebb16b398002858", "patch": "@@ -959,7 +959,7 @@ package ALI is\n    --    Ignore_Lines requests that Scan_ALI ignore any lines that start\n    --    with any given key character. The default value of X causes all\n    --    Xref lines to be ignored. The corresponding data in the ALI\n-   --    tables will not be filled in in this case. It is not possible\n+   --    tables will not be filled in this case. It is not possible\n    --    to ignore U (unit) lines, they are always read.\n    --\n    --    Read_Lines requests that Scan_ALI process only lines that start"}, {"sha": "a632dd4aa8607c624e0941a9a14443928f4b7b3a", "filename": "gcc/ada/bindgen.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fbindgen.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fbindgen.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindgen.adb?ref=16b0521384676b7f6e5dec4b0ebb16b398002858", "patch": "@@ -205,7 +205,7 @@ package body Bindgen is\n    --  value of 1 signals its presence in the partition.\n \n    --  Default_Stack_Size is the default stack size used when creating an Ada\n-   --  task with no explicit Storize_Size clause.\n+   --  task with no explicit Storage_Size clause.\n \n    --  Leap_Seconds_Support denotes whether leap seconds have been enabled or\n    --  disabled. A value of zero indicates that leap seconds are turned \"off\","}, {"sha": "92b66f32f765fda8c15e1292a4573cae09966f4f", "filename": "gcc/ada/checks.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fchecks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fchecks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.adb?ref=16b0521384676b7f6e5dec4b0ebb16b398002858", "patch": "@@ -502,7 +502,7 @@ package body Checks is\n          Type_Level :=\n            Make_Integer_Literal (Loc, Type_Access_Level (Typ));\n \n-         --  Raise Program_Error if the accessibility level of the the access\n+         --  Raise Program_Error if the accessibility level of the access\n          --  parameter is deeper than the level of the target access type.\n \n          Insert_Action (Insert_Node,\n@@ -1096,7 +1096,7 @@ package body Checks is\n             Apply_Discriminant_Check (N, Typ);\n          end if;\n \n-         --  Apply the the 2005 Null_Excluding check. Note that we do not apply\n+         --  Apply the 2005 Null_Excluding check. Note that we do not apply\n          --  this check if the constraint node is illegal, as shown by having\n          --  an error posted. This additional guard prevents cascaded errors\n          --  and compiler aborts on illegal programs involving Ada 2005 checks."}, {"sha": "409b001d39f36296fdbc0a4885ce93e555e07f16", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=16b0521384676b7f6e5dec4b0ebb16b398002858", "patch": "@@ -497,7 +497,7 @@ package Einfo is\n --    Checks_May_Be_Suppressed (Flag31)\n --       Present in all entities. Set if a pragma Suppress or Unsuppress\n --       mentions the entity specifically in the second argument. If this\n---       flag is set the the Global_Entity_Suppress and Local_Entity_Suppress\n+--       flag is set the Global_Entity_Suppress and Local_Entity_Suppress\n --       tables must be consulted to determine if the is actually an active\n --       Suppress or Unsuppress pragma that applies to the entity.\n \n@@ -588,7 +588,7 @@ package Einfo is\n --    Constant_Value (synthesized)\n --       Applies to variables, constants, named integers, and named reals.\n --       Obtains the initialization expression for the entity. Will return\n---       Empty for for a deferred constant whose full view is not available\n+--       Empty for a deferred constant whose full view is not available\n --       or in some other cases of internal entities, which cannot be treated\n --       as constants from the point of view of constant folding. Empty is\n --       also returned for variables with no initialization expression.\n@@ -1594,7 +1594,7 @@ package Einfo is\n \n --    Has_Pragma_Pack (Flag121) [implementation base type only]\n --       Present in all entities. If set, indicates that a valid pragma Pack\n---       was was given for the type. Note that this flag is not inherited by\n+--       was given for the type. Note that this flag is not inherited by\n --       derived type. See also the Is_Packed flag.\n \n --    Has_Pragma_Pure (Flag203)"}, {"sha": "21a0fd83aea07b99c990587144d49887bb71a0e7", "filename": "gcc/ada/exp_aggr.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fexp_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fexp_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_aggr.adb?ref=16b0521384676b7f6e5dec4b0ebb16b398002858", "patch": "@@ -326,7 +326,7 @@ package body Exp_Aggr is\n       --  The limit is applied to the total number of components that the\n       --  aggregate will have, which is the number of static expressions\n       --  that will appear in the flattened array. This requires a recursive\n-      --  computation of the the number of scalar components of the structure.\n+      --  computation of the number of scalar components of the structure.\n \n       ---------------------\n       -- Component_Count --"}, {"sha": "13da1ff83a99c1dd6a840067e01ae4d2dff25e3f", "filename": "gcc/ada/exp_ch11.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fexp_ch11.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fexp_ch11.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch11.adb?ref=16b0521384676b7f6e5dec4b0ebb16b398002858", "patch": "@@ -849,7 +849,7 @@ package body Exp_Ch11 is\n \n       begin\n          --  If we have no Entity, then we are probably in no run time mode\n-         --  or some weird error has occurred. In either case do do nothing!\n+         --  or some weird error has occurred. In either case do nothing!\n \n          if Present (Ent) then\n             declare"}, {"sha": "4f9df51c11d6c1da0f2c6a149e5f31f3b29a2e0f", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=16b0521384676b7f6e5dec4b0ebb16b398002858", "patch": "@@ -4428,8 +4428,8 @@ package body Exp_Ch3 is\n             --  unconstrained nominal subtype, then it acquired its constraints\n             --  from the expression in the first place, and not only does this\n             --  mean that the constraint check is not needed, but an attempt to\n-            --  perform the constraint check can cause order order of\n-            --  elaboration problems.\n+            --  perform the constraint check can cause order of elaboration\n+            --  problems.\n \n             if not Is_Constr_Subt_For_U_Nominal (Typ) then\n "}, {"sha": "9309c4850489519b9760c2e626e1a92735efa72d", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=16b0521384676b7f6e5dec4b0ebb16b398002858", "patch": "@@ -6552,7 +6552,7 @@ package body Exp_Ch4 is\n       Determine_Range (Right, ROK, Rlo, Rhi);\n       Determine_Range (Left, LOK, Llo, Lhi);\n \n-      --  The operand type may be private (e.g. in the expansion of an an\n+      --  The operand type may be private (e.g. in the expansion of an\n       --  intrinsic operation) so we must use the underlying type to get the\n       --  bounds, and convert the literals explicitly.\n "}, {"sha": "ae5b8d547d1de830d87b189974a25c19ff7a0179", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=16b0521384676b7f6e5dec4b0ebb16b398002858", "patch": "@@ -4492,7 +4492,7 @@ package body Exp_Ch6 is\n       --  which denotes the enclosing protected object. If the enclosing\n       --  operation is an entry, we are immediately within the protected body,\n       --  and we can retrieve the object from the service entries procedure. A\n-      --  barrier function has has the same signature as an entry. A barrier\n+      --  barrier function has the same signature as an entry. A barrier\n       --  function is compiled within the protected object, but unlike\n       --  protected operations its never needs locks, so that its protected\n       --  body subprogram points to itself."}, {"sha": "9b11ce7502f92afd7851219da58a8fd497b7e067", "filename": "gcc/ada/exp_ch7.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fexp_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fexp_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch7.adb?ref=16b0521384676b7f6e5dec4b0ebb16b398002858", "patch": "@@ -2716,7 +2716,7 @@ package body Exp_Ch7 is\n                 With_Attach  => Make_Identifier (Loc, Name_B)));\n \n             --  When the type is also a controlled type by itself,\n-            --  Initialize it and attach it to the finalization chain\n+            --  initialize it and attach it to the finalization chain.\n \n             if Is_Controlled (Typ) then\n                Append_To (Res,\n@@ -2739,7 +2739,7 @@ package body Exp_Ch7 is\n                 Make_Identifier (Loc, Name_B)));\n \n             --  When the type is also a controlled type by itself,\n-            --  Adjust it it and attach it to the finalization chain\n+            --  adjust it and attach it to the finalization chain.\n \n             if Is_Controlled (Typ) then\n                Append_To (Res,"}, {"sha": "de5877cc488e5045b668bd36ba81ea437e6438c9", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=16b0521384676b7f6e5dec4b0ebb16b398002858", "patch": "@@ -4124,7 +4124,7 @@ package body Exp_Ch9 is\n \n    --    objectR\n \n-   --  which is a renaming of the _object field of the current object object\n+   --  which is a renaming of the _object field of the current object\n    --  record, passed into protected operations as a parameter.\n \n    function Concurrent_Ref (N : Node_Id) return Node_Id is\n@@ -8721,7 +8721,7 @@ package body Exp_Ch9 is\n                Alt_Stats := New_List;\n             end if;\n \n-            --  After the call, if any, branch to to trailing statements. We\n+            --  After the call, if any, branch to trailing statements. We\n             --  create a label for each, as well as the corresponding label\n             --  declaration.\n \n@@ -12292,7 +12292,7 @@ package body Exp_Ch9 is\n          when ' ' =>\n             return True;\n \n-         --  FIFO_Within_Priorities certainly certainly does not permit this\n+         --  FIFO_Within_Priorities certainly does not permit this\n          --  optimization since the Rendezvous is a scheduling action that may\n          --  require some other task to be run.\n "}, {"sha": "71c2f79b14fd7e4d3c64813b817f7eafde72595c", "filename": "gcc/ada/exp_dbug.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fexp_dbug.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fexp_dbug.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_dbug.ads?ref=16b0521384676b7f6e5dec4b0ebb16b398002858", "patch": "@@ -1490,7 +1490,7 @@ package Exp_Dbug is\n    --\n    --  These are the external names generated for Case_1.Typ (note that\n    --  Pkg1.Typ is associated with the Primary Dispatch Table, because it\n-   --  is the the parent of this type, and hence no external name is\n+   --  is the parent of this type, and hence no external name is\n    --  generated for it).\n    --      case_1__typ0P   (associated with Pkg2.Typ)\n    --      case_1__typ1P   (associated with Pkg3.Typ)"}, {"sha": "b44ea2e3027c5cbf3ba4f8468f32c605643d9e72", "filename": "gcc/ada/exp_disp.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fexp_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fexp_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_disp.adb?ref=16b0521384676b7f6e5dec4b0ebb16b398002858", "patch": "@@ -767,7 +767,7 @@ package body Exp_Disp is\n       end if;\n \n       --  If the target type is a tagged synchronized type, the dispatch table\n-      --  info is in the correspondoing record type.\n+      --  info is in the corresponding record type.\n \n       if Is_Concurrent_Type (Iface_Typ) then\n          Iface_Typ := Corresponding_Record_Type (Iface_Typ);"}, {"sha": "546bbcc5797d9d058ec209f3a6c027ec3f1068bf", "filename": "gcc/ada/exp_dist.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fexp_dist.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fexp_dist.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_dist.adb?ref=16b0521384676b7f6e5dec4b0ebb16b398002858", "patch": "@@ -10353,7 +10353,7 @@ package body Exp_Dist is\n                      --  to the union parameter list.\n \n                      --  Ordering of declarations is a complete mess in this\n-                     --  area, it is supposed to be types/varibles, then\n+                     --  area, it is supposed to be types/variables, then\n                      --  subprogram specs, then subprogram bodies ???\n \n                      ---------------------------------------"}, {"sha": "d66ed0f7519cb0bf578250960efdd01a7f432eed", "filename": "gcc/ada/exp_pakd.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fexp_pakd.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fexp_pakd.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_pakd.adb?ref=16b0521384676b7f6e5dec4b0ebb16b398002858", "patch": "@@ -1541,7 +1541,7 @@ package body Exp_Pakd is\n \n                else\n                   --  We have to convert the right hand side to Etype (Obj).\n-                  --  A special case case arises if what we have now is a Val\n+                  --  A special case arises if what we have now is a Val\n                   --  attribute reference whose expression type is Etype (Obj).\n                   --  This happens for assignments of fields from the same\n                   --  array. In this case we get the required right hand side"}, {"sha": "b36f80d46cd32da0d4a872fd63bed5c613512cd0", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=16b0521384676b7f6e5dec4b0ebb16b398002858", "patch": "@@ -1895,7 +1895,7 @@ package body Exp_Util is\n \n                --  If the variable reference does not come from source, we\n                --  cannot reliably tell whether it appears in the else part.\n-               --  In particular, if if appears in generated code for a node\n+               --  In particular, if it appears in generated code for a node\n                --  that requires finalization, it may be attached to a list\n                --  that has not been yet inserted into the code. For now,\n                --  treat it as unknown."}, {"sha": "55a9fcf64713997480457927a81724edd2d97b63", "filename": "gcc/ada/g-alveop.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fg-alveop.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fg-alveop.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-alveop.ads?ref=16b0521384676b7f6e5dec4b0ebb16b398002858", "patch": "@@ -43,7 +43,7 @@ package GNAT.Altivec.Vector_Operations is\n    --  much smaller set of low level primitives with type conversions around.\n    --\n    --  In some cases, a direct binding without any intermediate body is\n-   --  possible or even even mandatory for technical reasons. What we provide\n+   --  possible or even mandatory for technical reasons. What we provide\n    --  here for such cases are renamings of straight imports exposed by\n    --  Altivec.Low_Level_Interface.  See the comments in the private part for\n    --  additional details."}, {"sha": "47f821d42713fb6752191cec046237594d872eeb", "filename": "gcc/ada/g-comlin.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fg-comlin.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fg-comlin.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-comlin.adb?ref=16b0521384676b7f6e5dec4b0ebb16b398002858", "patch": "@@ -114,10 +114,10 @@ package body GNAT.Command_Line is\n    --  the beginning, else it is appended.\n \n    function Can_Have_Parameter (S : String) return Boolean;\n-   --  True when S can have a parameter\n+   --  True if S can have a parameter.\n \n    function Require_Parameter (S : String) return Boolean;\n-   --  True when S requires a parameter\n+   --  True if S requires a parameter.\n \n    function Actual_Switch (S : String) return String;\n    --  Remove any possible trailing '!', ':', '?' and '='"}, {"sha": "1f393afd042e4f0e5ea2a7015fd9e8092d547886", "filename": "gcc/ada/g-comlin.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fg-comlin.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fg-comlin.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-comlin.ads?ref=16b0521384676b7f6e5dec4b0ebb16b398002858", "patch": "@@ -610,8 +610,8 @@ package GNAT.Command_Line is\n    --  added if not already present. For example, to add the -g switch into the\n    --  -cargs section, you need to call (Cmd, \"-g\", Section => \"-cargs\")\n    --\n-   --  Add_Before allows insertion of the switch at the begining of the command\n-   --  line.\n+   --  Add_Before allows insertion of the switch at the beginning of the\n+   --  command line.\n \n    procedure Add_Switch\n      (Cmd        : in out Command_Line;"}, {"sha": "4829bb43c7e3bb911ba8354c0ca719336f7da538", "filename": "gcc/ada/g-diopit.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fg-diopit.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fg-diopit.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-diopit.adb?ref=16b0521384676b7f6e5dec4b0ebb16b398002858", "patch": "@@ -376,7 +376,7 @@ package body GNAT.Directory_Operations.Iteration is\n                end;\n \n                --  Exit if Quit set by call to Action, either at this level\n-               --  or at at some lower recursive call to Next_Level.\n+               --  or at some lower recursive call to Next_Level.\n \n                exit Dir_Iterator when Quit;\n             end loop Dir_Iterator;"}, {"sha": "cd12b016975f42b60a88a880c01dad459197567a", "filename": "gcc/ada/g-socket.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fg-socket.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fg-socket.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socket.ads?ref=16b0521384676b7f6e5dec4b0ebb16b398002858", "patch": "@@ -370,7 +370,7 @@ package GNAT.Sockets is\n    --  end PingPong;\n \n    package SOSC renames System.OS_Constants;\n-   --  Renaming used to provide short-hand notations thoughout the sockets\n+   --  Renaming used to provide short-hand notations throughout the sockets\n    --  binding. Note that System.OS_Constants is an internal unit, and the\n    --  entities declared therein are not meant for direct access by users,\n    --  including through this renaming."}, {"sha": "c254990d45c47082b9c4e314a10dea9426f69718", "filename": "gcc/ada/gcc-interface/decl.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fdecl.c?ref=16b0521384676b7f6e5dec4b0ebb16b398002858", "patch": "@@ -1939,7 +1939,7 @@ gnat_to_gnu_entity (Entity_Id gnat_entity, tree gnu_expr, int definition)\n \t\t\t   true, Has_Component_Size_Clause (gnat_entity));\n \n \t/* If the component type is a RECORD_TYPE that has a self-referential\n-\t   size, use the maxium size.  */\n+\t   size, use the maximum size.  */\n \tif (!gnu_comp_size && TREE_CODE (tem) == RECORD_TYPE\n \t    && CONTAINS_PLACEHOLDER_P (TYPE_SIZE (tem)))\n \t  gnu_comp_size = max_size (TYPE_SIZE (tem), true);\n@@ -2304,7 +2304,7 @@ gnat_to_gnu_entity (Entity_Id gnat_entity, tree gnu_expr, int definition)\n \t\t\t\t Has_Component_Size_Clause (gnat_entity));\n \n \t      /* If the component type is a RECORD_TYPE that has a\n-\t\t self-referential size, use the maxium size.  */\n+\t\t self-referential size, use the maximum size.  */\n \t      if (!gnu_comp_size\n \t\t  && TREE_CODE (gnu_type) == RECORD_TYPE\n \t\t  && CONTAINS_PLACEHOLDER_P (TYPE_SIZE (gnu_type)))"}, {"sha": "7b08f8dad4ef5bfead3cf8c72f41068512b40cc7", "filename": "gcc/ada/gcc-interface/gigi.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fgcc-interface%2Fgigi.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fgcc-interface%2Fgigi.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fgigi.h?ref=16b0521384676b7f6e5dec4b0ebb16b398002858", "patch": "@@ -782,7 +782,7 @@ extern bool value_factor_p (tree value, HOST_WIDE_INT factor);\n    desired for the result.  Usually the operation is to be performed\n    in that type.  For MODIFY_EXPR and ARRAY_REF, RESULT_TYPE may be 0\n    in which case the type to be used will be derived from the operands.  */\n-extern tree build_binary_op (enum tree_code op_code, tree retult_type,\n+extern tree build_binary_op (enum tree_code op_code, tree result_type,\n                              tree left_operand, tree right_operand);\n \n /* Similar, but make unary operation.   */"}, {"sha": "f8265cc6dc7277c17a889830ae2f01558cea7c1f", "filename": "gcc/ada/gcc-interface/trans.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Ftrans.c?ref=16b0521384676b7f6e5dec4b0ebb16b398002858", "patch": "@@ -1621,7 +1621,7 @@ Case_Statement_to_gnu (Node_Id gnat_node)\n \n \t  /* If the case value is a subtype that raises Constraint_Error at\n \t     run-time because of a wrong bound, then gnu_low or gnu_high is\n-\t     not transtaleted into an INTEGER_CST.  In such a case, we need\n+\t     not translated into an INTEGER_CST.  In such a case, we need\n \t     to ensure that the when statement is not added in the tree,\n \t     otherwise it will crash the gimplifier.  */\n \t  if ((!gnu_low || TREE_CODE (gnu_low) == INTEGER_CST)"}, {"sha": "c72cecb02075f24b9573590a402f6614a230e743", "filename": "gcc/ada/gnathtml.pl", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fgnathtml.pl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fgnathtml.pl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnathtml.pl?ref=16b0521384676b7f6e5dec4b0ebb16b398002858", "patch": "@@ -65,7 +65,7 @@ sub print_usage\n   print \"                 command line\\n\";\n   print \"     -ext ext  : Choose the generated file names extension (default\\n\";\n   print \"                 is htm)\\n\";\n-  print \"This program attemps to generate an html file from an Ada file\\n\";\n+  print \"This program attempts to generate an html file from an Ada file\\n\";\n   exit;\n }\n \n@@ -351,7 +351,7 @@ sub to_type\n   # return 'generic package'                    if ($char eq 'K');\n   return 'block'                              if ($char eq 'L');\n   return 'modular integer'                    if ($char eq 'M');\n-  return 'enumeration litteral'               if ($char eq 'N');\n+  return 'enumeration literal'                if ($char eq 'N');\n   return 'ordinary fixed point'               if ($char eq 'O');\n   return 'access'                             if ($char eq 'P');\n   return 'label'                              if ($char eq 'Q');  "}, {"sha": "29a9090f90ec44797e226731a6882cce6e7d036b", "filename": "gcc/ada/lib-load.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Flib-load.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Flib-load.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-load.adb?ref=16b0521384676b7f6e5dec4b0ebb16b398002858", "patch": "@@ -711,7 +711,7 @@ package body Lib.Load is\n                   --  it may very likely be the case that there is also pragma\n                   --  Restriction forbidding its usage. This is typically the\n                   --  case when building a configurable run time, where the\n-                  --  usage of certain run-time units units is restricted by\n+                  --  usage of certain run-time units is restricted by\n                   --  means of both the corresponding pragma Restriction (such\n                   --  as No_Calendar), and by not including the unit. Hence,\n                   --  we check whether this predefined unit is forbidden, so"}, {"sha": "01e227c047f2f5d92dfcf6ab3f1d82faa713acd8", "filename": "gcc/ada/lib-xref.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Flib-xref.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Flib-xref.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-xref.ads?ref=16b0521384676b7f6e5dec4b0ebb16b398002858", "patch": "@@ -587,7 +587,7 @@ package Lib.Xref is\n    --  Node N is an operator node, whose entity has been set. If this entity\n    --  is a user defined operator (i.e. an operator not defined in package\n    --  Standard), then a reference to the operator is recorded at node N.\n-   --  T is the operand type of of the operator. A reference to the operator\n+   --  T is the operand type of the operator. A reference to the operator\n    --  is an implicit reference to the type, and that needs to be recorded\n    --  to avoid spurious warnings on unused entities, when the operator is\n    --  a renaming of a predefined operator."}, {"sha": "20813c07e4981bf7c37909a81bcdea3675e17e09", "filename": "gcc/ada/make.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.adb?ref=16b0521384676b7f6e5dec4b0ebb16b398002858", "patch": "@@ -4363,7 +4363,7 @@ package body Make is\n                --  directory information.\n \n                File_Name : constant String := Base_Name (Main);\n-               --  The simple file name of the current main main\n+               --  The simple file name of the current main\n \n             begin\n                exit when Main = \"\";\n@@ -7220,7 +7220,7 @@ package body Make is\n \n          elsif Sfile /= No_File then\n \n-            --  If Put_In_Q is False, we add the source as it it were specified\n+            --  If Put_In_Q is False, we add the source as if it were specified\n             --  on the command line, and we set Put_In_Q to True, so that the\n             --  following sources will be put directly in the queue. This will\n             --  allow parallel compilation processes if -jx switch is used."}, {"sha": "9b532be27d7ecddede35be3f98f6a47006b0744c", "filename": "gcc/ada/mlib-prj.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fmlib-prj.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fmlib-prj.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib-prj.adb?ref=16b0521384676b7f6e5dec4b0ebb16b398002858", "patch": "@@ -1163,7 +1163,7 @@ package body MLib.Prj is\n \n                   Close (FD);\n \n-                  --  And invoke gnatbind with this this response file\n+                  --  And invoke gnatbind with this response file\n \n                   Spawn (Gnatbind_Path.all, Args, Success);\n "}, {"sha": "77f2a2034a39aa106206ba1446acdfb4fd553c7f", "filename": "gcc/ada/nlists.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fnlists.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fnlists.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fnlists.ads?ref=16b0521384676b7f6e5dec4b0ebb16b398002858", "patch": "@@ -172,7 +172,7 @@ package Nlists is\n \n    function Prev (Node : Node_Id) return Node_Id;\n    pragma Inline (Prev);\n-   --  This function returns the previous node on a node list list, or Empty\n+   --  This function returns the previous node on a node list, or Empty\n    --  if Node is the first element of the node list. The argument must be\n    --  a member of a node list. Note: the implementation does maintain back\n    --  pointers, so this function executes quickly in constant time."}, {"sha": "12b6acefe7783dcf77d2f55e4b15adda4b68c9a0", "filename": "gcc/ada/opt.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fopt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fopt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.ads?ref=16b0521384676b7f6e5dec4b0ebb16b398002858", "patch": "@@ -161,7 +161,7 @@ package Opt is\n    Assume_No_Invalid_Values : Boolean := True;\n    --  ??? true for now, enable by setting to false later\n    --  GNAT\n-   --  Normallly, in accordance with (RM 13.9.1 (9-11)) the front end assumes\n+   --  Normally, in accordance with (RM 13.9.1 (9-11)) the front end assumes\n    --  that values could have invalid representations, unless it can clearly\n    --  prove that the values are valid. If this switch is set (by -gnatB or by\n    --  pragma Assume_No_Invalid_Values (Off)), then the compiler assumes values"}, {"sha": "d90d27bfc4ec34c01db9fcb827462df2262c51fe", "filename": "gcc/ada/par-ch10.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fpar-ch10.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fpar-ch10.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch10.adb?ref=16b0521384676b7f6e5dec4b0ebb16b398002858", "patch": "@@ -331,7 +331,7 @@ package body Ch10 is\n \n          --  A common error is to omit the body keyword after package. We can\n          --  often diagnose this early on (before getting loads of errors from\n-         --  contained subprogram bodies), by knowing that that the file we\n+         --  contained subprogram bodies), by knowing that the file we\n          --  are compiling has a name that requires a body to be found.\n \n          Save_Scan_State (Scan_State);"}, {"sha": "57c54449ac369de9ac88fc6eaf7c6adfb7b0cc37", "filename": "gcc/ada/par-ch5.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fpar-ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fpar-ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch5.adb?ref=16b0521384676b7f6e5dec4b0ebb16b398002858", "patch": "@@ -1067,7 +1067,7 @@ package body Ch5 is\n       --  scanned out and is in Prev_Token.\n \n       procedure Check_If_Column;\n-      --  An internal procedure used to check that THEN, ELSE ELSE, or ELSIF\n+      --  An internal procedure used to check that THEN, ELSE, or ELSIF\n       --  appear in the right place if column checking is enabled (i.e. if\n       --  they are the first token on the line, then they must appear in\n       --  the same column as the opening IF)."}, {"sha": "2f9edeb4256382c15f722e3ee17842a48a75a327", "filename": "gcc/ada/par.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fpar.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fpar.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar.adb?ref=16b0521384676b7f6e5dec4b0ebb16b398002858", "patch": "@@ -1105,7 +1105,7 @@ is\n       pragma Inline (Push_Scope_Stack);\n       --  Push a new entry onto the scope stack. Scope.Last (the stack pointer)\n       --  is incremented. The Junk field is preinitialized to False. The caller\n-      --  is expected to fill in all remaining entries of the new new top stack\n+      --  is expected to fill in all remaining entries of the new top stack\n       --  entry at Scope.Table (Scope.Last).\n \n       procedure Pop_Scope_Stack;"}, {"sha": "6d00925957842d6a887ebb84fb00ef8216a920f6", "filename": "gcc/ada/s-os_lib.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fs-os_lib.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fs-os_lib.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-os_lib.ads?ref=16b0521384676b7f6e5dec4b0ebb16b398002858", "patch": "@@ -307,7 +307,7 @@ package System.OS_Lib is\n       Append);\n       --  If the target file exists, the contents of the source file is\n       --  appended at the end. Otherwise the source file is just copied. The\n-      --  time stamps and other file attributes are are preserved if the\n+      --  time stamps and other file attributes are preserved if the\n       --  destination file does not exist.\n \n    type Attribute is"}, {"sha": "36a6b8eb1bc9ffb00f739544d27171259175375c", "filename": "gcc/ada/s-oscons-tmplt.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fs-oscons-tmplt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fs-oscons-tmplt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-oscons-tmplt.c?ref=16b0521384676b7f6e5dec4b0ebb16b398002858", "patch": "@@ -243,7 +243,7 @@ CND(FNDELAY, \"Nonblocking\")\n /*\n \n    ----------------------\n-   -- Ioctl operatings --\n+   -- Ioctl operations --\n    ----------------------\n \n */"}, {"sha": "99eda8ea511676f5a12ef97ed34eec655263e5df", "filename": "gcc/ada/s-parint.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fs-parint.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fs-parint.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-parint.ads?ref=16b0521384676b7f6e5dec4b0ebb16b398002858", "patch": "@@ -115,7 +115,7 @@ package System.Partition_Interface is\n       Version : String;\n       RCI     : Boolean := True);\n    --  Use by the main subprogram to check that a remote receiver\n-   --  unit has has the same version than the caller's one.\n+   --  unit has the same version than the caller's one.\n \n    function Same_Partition\n       (Left  : not null access RACW_Stub_Type;"}, {"sha": "0ab027ca9f242717e00f1b408245aae7f1432460", "filename": "gcc/ada/s-regpat.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fs-regpat.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fs-regpat.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-regpat.ads?ref=16b0521384676b7f6e5dec4b0ebb16b398002858", "patch": "@@ -404,7 +404,7 @@ package System.Regpat is\n       Expression      : String;\n       Final_Code_Size : out Program_Size;\n       Flags           : Regexp_Flags := No_Flags);\n-   --  Compile a regular expression into into internal code\n+   --  Compile a regular expression into internal code\n \n    --  This procedure is significantly faster than the Compile function since\n    --  it avoids the extra step of precomputing the required size."}, {"sha": "584e253c9331cafe8fdc6248550eeb99ae6fcc0d", "filename": "gcc/ada/s-shasto.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fs-shasto.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fs-shasto.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-shasto.ads?ref=16b0521384676b7f6e5dec4b0ebb16b398002858", "patch": "@@ -91,7 +91,7 @@\n --    set a new value to the shared variable and, according to the used\n --    implementation, propagate this value among processes referencing it.\n --    A call to this procedure is generated by the expander after each\n---    assignement of the shared varible.\n+--    assignment of the shared variable.\n \n --  Note: a special circuit allows the use of stream attributes Read and\n --  Write for limited types (using the corresponding attribute for the"}, {"sha": "165f82dcc0bd6c9199bd269d2405933debfa9f97", "filename": "gcc/ada/s-stausa.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fs-stausa.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fs-stausa.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-stausa.ads?ref=16b0521384676b7f6e5dec4b0ebb16b398002858", "patch": "@@ -107,7 +107,7 @@ package System.Stack_Usage is\n    --       appear as used in the final measure.\n \n    --     Strategy: As the user passes the value of the bottom of stack to\n-   --       the instrumentation to deal with the bottom offset error, and as as\n+   --       the instrumentation to deal with the bottom offset error, and as\n    --       the instrumentation procedure knows where the pattern filling start\n    --       on the stack, the difference between the two values is the minimum\n    --       stack usage that the method can measure. If, when the results are"}, {"sha": "a193501a9ca9f777204bc0847e3f5b26086d46a7", "filename": "gcc/ada/s-taprop-vms.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fs-taprop-vms.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fs-taprop-vms.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop-vms.adb?ref=16b0521384676b7f6e5dec4b0ebb16b398002858", "patch": "@@ -822,7 +822,7 @@ package body System.Task_Primitives.Operations is\n \n    begin\n       --  Since the initial signal mask of a thread is inherited from the\n-      --  creator, we need to set our local signal mask mask all signals\n+      --  creator, we need to set our local signal mask to mask all signals\n       --  during the creation operation, to make sure the new thread is\n       --  not disturbed by signals before it has set its own Task_Id.\n "}, {"sha": "32e9657e9da38af13ebdf256b7fb44dddc95e057", "filename": "gcc/ada/sem.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fsem.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fsem.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem.adb?ref=16b0521384676b7f6e5dec4b0ebb16b398002858", "patch": "@@ -1339,7 +1339,7 @@ package body Sem is\n       Current_Sem_Unit := Get_Cunit_Unit_Number (Comp_Unit);\n \n       --  Compile predefined units with GNAT_Mode set to True, to properly\n-      --  process the categorization stuff. However, do not set set GNAT_Mode\n+      --  process the categorization stuff. However, do not set GNAT_Mode\n       --  to True for the renamings units (Text_IO, IO_Exceptions, Direct_IO,\n       --  Sequential_IO) as this would prevent pragma Extend_System from being\n       --  taken into account, for example when Text_IO is renaming DEC.Text_IO."}, {"sha": "cbdda92aa17b6d47d0e055fbdffb9ebf9260cd08", "filename": "gcc/ada/sem_ch10.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fsem_ch10.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fsem_ch10.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch10.adb?ref=16b0521384676b7f6e5dec4b0ebb16b398002858", "patch": "@@ -1292,7 +1292,7 @@ package body Sem_Ch10 is\n          --  the implicit with's on parent units.\n \n          --  Skip use clauses at this stage, since we don't want to do any\n-         --  installing of potentially use visible entities until we we\n+         --  installing of potentially use visible entities until we\n          --  actually install the complete context (in Install_Context).\n          --  Otherwise things can get installed in the wrong context.\n "}, {"sha": "b4adf7078cd38c58d1a87cc385468f293aa7e984", "filename": "gcc/ada/sem_ch11.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fsem_ch11.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fsem_ch11.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch11.adb?ref=16b0521384676b7f6e5dec4b0ebb16b398002858", "patch": "@@ -185,8 +185,7 @@ package body Sem_Ch11 is\n             --  scope for visibility purposes. We create an entity to denote\n             --  the whole exception part, and use it as the scope of all the\n             --  choices, which may even have the same name without conflict.\n-            --  This scope plays no other role in expansion or or code\n-            --  generation.\n+            --  This scope plays no other role in expansion or code generation.\n \n             Choice := Choice_Parameter (Handler);\n "}, {"sha": "549d5b4ee3c0fea18cda6abcb150b8f2a6fa3511", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=16b0521384676b7f6e5dec4b0ebb16b398002858", "patch": "@@ -896,8 +896,8 @@ package body Sem_Ch12 is\n       Num_Actuals     : Int := 0;\n \n       Others_Present  : Boolean := False;\n-      --  In Ada 2005, indicates partial parametrization of of a formal\n-      --  package. As usual an others association must be last in the list.\n+      --  In Ada 2005, indicates partial parametrization of a formal\n+      --  package. As usual an other association must be last in the list.\n \n       function Matching_Actual\n         (F   : Entity_Id;\n@@ -9564,7 +9564,7 @@ package body Sem_Ch12 is\n                   Abandon_Instantiation (Actual);\n                end if;\n \n-            --  This case should be caught by the earlier check for for\n+            --  This case should be caught by the earlier check for\n             --  constrainedness, but the check here is added for completeness.\n \n             elsif Has_Discriminants (Act_T)"}, {"sha": "d9b626f898195bf7bf7690354642b9040a5c2359", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=16b0521384676b7f6e5dec4b0ebb16b398002858", "patch": "@@ -420,7 +420,7 @@ package body Sem_Ch13 is\n             --     1 .. 4       3 .. 6         1         3\n             --     4 .. 7       0 .. 3         4         0\n \n-            --  The general rule is that the first bit is is obtained by\n+            --  The general rule is that the first bit is obtained by\n             --  subtracting the old ending bit from machine scalar size - 1.\n \n             for C in Start .. Stop loop"}, {"sha": "9490c88addad046b9aad1baa5d53c7ac5ad55532", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=16b0521384676b7f6e5dec4b0ebb16b398002858", "patch": "@@ -765,7 +765,7 @@ package body Sem_Ch3 is\n          --  If the current scope is a protected type, the anonymous access\n          --  is associated with one of the protected operations, and must\n          --  be available in the scope that encloses the protected declaration.\n-         --  Otherwise the type is is in the scope enclosing the subprogram.\n+         --  Otherwise the type is in the scope enclosing the subprogram.\n \n          if Ekind (Current_Scope) = E_Protected_Type then\n             Anon_Scope := Scope (Scope (Defining_Entity (Related_Nod)));\n@@ -1121,7 +1121,7 @@ package body Sem_Ch3 is\n          --  A bit of a kludge here. These kludges will be removed when Itypes\n          --  have proper parent pointers to their declarations???\n \n-         --  Kludge 1) Link definining_identifier of formals. Required by\n+         --  Kludge 1) Link defining_identifier of formals. Required by\n          --  First_Formal to provide its functionality.\n \n          declare\n@@ -1993,7 +1993,7 @@ package body Sem_Ch3 is\n \n       End_Scope;\n \n-      --  If the type has discriminants, non-trivial subtypes may be be\n+      --  If the type has discriminants, non-trivial subtypes may be\n       --  declared before the full view of the type. The full views of those\n       --  subtypes will be built after the full view of the type.\n \n@@ -15724,7 +15724,7 @@ package body Sem_Ch3 is\n          --  Ada 2005 (AI-251): If the parent of the private type declaration\n          --  is an interface there is no need to check that it is an ancestor\n          --  of the associated full type declaration. The required tests for\n-         --  this case case are performed by Build_Derived_Record_Type.\n+         --  this case are performed by Build_Derived_Record_Type.\n \n          elsif not Is_Interface (Base_Type (Priv_Parent))\n            and then not Is_Ancestor (Base_Type (Priv_Parent), Full_Parent)\n@@ -15960,7 +15960,7 @@ package body Sem_Ch3 is\n                Prim_Elmt := First_Elmt (Priv_List);\n \n                --  In the case of a concurrent type completing a private tagged\n-               --  type, primivies may have been declared in between the two\n+               --  type, primitives may have been declared in between the two\n                --  views. These subprograms need to be wrapped the same way\n                --  entries and protected procedures are handled because they\n                --  cannot be directly shared by the two views."}, {"sha": "076966a0f174744c2f7b5c61e2334867b41fd80d", "filename": "gcc/ada/sem_ch3.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fsem_ch3.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fsem_ch3.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.ads?ref=16b0521384676b7f6e5dec4b0ebb16b398002858", "patch": "@@ -180,7 +180,7 @@ package Sem_Ch3 is\n    --  attributes of a class wide type are inherited from those of the type T.\n    --  If T is introduced by a private declaration, the corresponding class\n    --  wide type is created at the same time, and therefore there is a private\n-   --  and a full declaration for the class wide type type as well.\n+   --  and a full declaration for the class wide type as well.\n \n    function OK_For_Limited_Init_In_05 (Exp : Node_Id) return Boolean;\n    --  Presuming Exp is an expression of an inherently limited type, returns"}, {"sha": "47fd4e6aaf53d63e8c40d83c7610b1160f572b4f", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=16b0521384676b7f6e5dec4b0ebb16b398002858", "patch": "@@ -499,7 +499,7 @@ package body Sem_Ch4 is\n             Check_Fully_Declared (Type_Id, N);\n \n             --  Ada 2005 (AI-231): If the designated type is itself an access\n-            --  type that excludes null, it's default initializastion will\n+            --  type that excludes null, its default initialization will\n             --  be a null object, and we can insert an unconditional raise\n             --  before the allocator.\n "}, {"sha": "a2a5078d6a0e5645a33b46c70581bfcfa66426c8", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=16b0521384676b7f6e5dec4b0ebb16b398002858", "patch": "@@ -1602,7 +1602,7 @@ package body Sem_Ch6 is\n \n          --  Note that wrappers already have their corresponding specs and\n          --  bodies set during their creation, so if the candidate spec is\n-         --  a wrapper, then we definately need to swap all types to their\n+         --  a wrapper, then we definitely need to swap all types to their\n          --  original concurrent status.\n \n          if No (Spec_N)\n@@ -5098,7 +5098,7 @@ package body Sem_Ch6 is\n       end if;\n \n       --  If this is a derived subprogram then the subtypes of the parent\n-      --  subprogram's formal parameters will be used to to determine the need\n+      --  subprogram's formal parameters will be used to determine the need\n       --  for extra formals.\n \n       if Is_Overloadable (E) and then Present (Alias (E)) then"}, {"sha": "46cd938398729aabec577495262de4dc6d5645ce", "filename": "gcc/ada/sem_ch7.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fsem_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fsem_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch7.adb?ref=16b0521384676b7f6e5dec4b0ebb16b398002858", "patch": "@@ -2115,7 +2115,7 @@ package body Sem_Ch7 is\n          then\n             if not Has_Private_Declaration (Etype (Id)) then\n \n-               --  We assume that the user did not not intend a deferred\n+               --  We assume that the user did not intend a deferred\n                --  constant declaration, and the expression is just missing.\n \n                Error_Msg_N"}, {"sha": "3e231f612122ae703633032d9c38eb784fff2822", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=16b0521384676b7f6e5dec4b0ebb16b398002858", "patch": "@@ -2063,7 +2063,7 @@ package body Sem_Ch8 is\n             Check_Frozen_Renaming (N, Rename_Spec);\n \n             --  Check explicitly that renamed entity is not intrinsic, because\n-            --  in in a generic the renamed body is not built. In this case,\n+            --  in a generic the renamed body is not built. In this case,\n             --  the renaming_as_body is a completion.\n \n             if Inside_A_Generic then\n@@ -4803,7 +4803,7 @@ package body Sem_Ch8 is\n                end if;\n \n                --  Operator is visible if prefix of expanded name denotes\n-               --  scope of type, or else type type is defined in System_Aux\n+               --  scope of type, or else type is defined in System_Aux\n                --  and the prefix denotes System.\n \n                return Scope (Btyp) = Scop"}, {"sha": "2badebb051789b2d9dbaba950da805a8eb2cd50f", "filename": "gcc/ada/sem_elim.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fsem_elim.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fsem_elim.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_elim.adb?ref=16b0521384676b7f6e5dec4b0ebb16b398002858", "patch": "@@ -476,7 +476,7 @@ package body Sem_Elim is\n                         end loop;\n \n                         --  Find last non-space before this colon. If there\n-                        --  is no no space character before this colon, then\n+                        --  is no space character before this colon, then\n                         --  return False. Otherwise, End_Idx set to point to\n                         --  this non-space character.\n "}, {"sha": "065cb9701d444531f1c47bc9d3be13f985734d52", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=16b0521384676b7f6e5dec4b0ebb16b398002858", "patch": "@@ -3096,7 +3096,7 @@ package body Sem_Prag is\n             return;\n          end if;\n \n-         --  Import pragmas must be be for imported entities\n+         --  Import pragmas must be for imported entities\n \n          if Prag_Id = Pragma_Import_Function\n               or else\n@@ -3395,7 +3395,7 @@ package body Sem_Prag is\n                Process_Interface_Name (Def_Id, Arg3, Arg4);\n \n                --  Note that we do not set Is_Public here. That's because we\n-               --  only want to set if if there is no address clause, and we\n+               --  only want to set it if there is no address clause, and we\n                --  don't know that yet, so we delay that processing till\n                --  freeze time.\n "}, {"sha": "82dca5662a30dd4d25856a628d5169b577718301", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=16b0521384676b7f6e5dec4b0ebb16b398002858", "patch": "@@ -8053,7 +8053,7 @@ package body Sem_Util is\n          return Object_Access_Level (Expression (Obj));\n \n       --  Function results are objects, so we get either the access level of\n-      --  the function or, in the case of an indirect call, the level of of the\n+      --  the function or, in the case of an indirect call, the level of the\n       --  access-to-subprogram type.\n \n       elsif Nkind (Obj) = N_Function_Call then"}, {"sha": "ce6d4bd99d2203b2a9927019b4133a20367b9e95", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=16b0521384676b7f6e5dec4b0ebb16b398002858", "patch": "@@ -457,7 +457,7 @@ package Sem_Util is\n    --  Given an entity for an exception, package, subprogram or generic unit,\n    --  returns the ultimately renamed entity if this is a renaming. If this is\n    --  not a renamed entity, returns its argument. It is an error to call this\n-   --  with any any other kind of entity.\n+   --  with any other kind of entity.\n \n    function Get_Subprogram_Entity (Nod : Node_Id) return Entity_Id;\n    --  Nod is either a procedure call statement, or a function call, or"}, {"sha": "c29c6256e17e41f700fb09b78be2a968e76dbf71", "filename": "gcc/ada/sem_warn.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fsem_warn.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fsem_warn.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_warn.adb?ref=16b0521384676b7f6e5dec4b0ebb16b398002858", "patch": "@@ -1025,7 +1025,7 @@ package body Sem_Warn is\n                      --  Suppress warning if private type, and the procedure\n                      --  has a separate declaration in a different unit. This\n                      --  is the case where the client of a package sees only\n-                     --  the private type, and it it may be quite reasonable\n+                     --  the private type, and it may be quite reasonable\n                      --  for the logical view to be in out, even if the\n                      --  implementation ends up using access types or some\n                      --  other method to achieve the local effect of a"}, {"sha": "ddf5c1fd40b953ff04dd707ef5fd4e7601b57b52", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=16b0521384676b7f6e5dec4b0ebb16b398002858", "patch": "@@ -1392,7 +1392,7 @@ package Sinfo is\n    --    is undefined and should not be read).\n \n    --  No_Ctrl_Actions (Flag7-Sem)\n-   --    Present in N_Assignment_Statement to indicate that no finalize nor nor\n+   --    Present in N_Assignment_Statement to indicate that no finalize nor\n    --    adjust should take place on this assignment even though the rhs is\n    --    controlled. This is used in init procs and aggregate expansions where\n    --    the generated assignments are more initialisations than real\n@@ -1592,7 +1592,7 @@ package Sinfo is\n    --    and N_Extended_Return_Statement nodes. References the entity for the\n    --    storage pool to be used for the allocate or free call or for the\n    --    allocation of the returned value from function. Empty indicates that\n-   --    the global default default pool is to be used. Note that in the case\n+   --    the global default pool is to be used. Note that in the case\n    --    of a return statement, this field is set only if the function returns\n    --    value of a type whose size is not known at compile time on the\n    --    secondary stack."}, {"sha": "f54ab35baefb796bc6941d679ecb082f15ac6fb1", "filename": "gcc/ada/styleg.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fstyleg.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fstyleg.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fstyleg.adb?ref=16b0521384676b7f6e5dec4b0ebb16b398002858", "patch": "@@ -967,7 +967,7 @@ package body Styleg is\n    -- Non_Lower_Case_Keyword --\n    ----------------------------\n \n-   --  In check casing mode (-gnatyk), reserved keywords must be be spelled\n+   --  In check casing mode (-gnatyk), reserved keywords must be spelled\n    --  in all lower case (excluding keywords range, access, delta and digits\n    --  used as attribute designators).\n "}, {"sha": "446f7cba8b9b4e4c305614fde0ed4481719aa9a1", "filename": "gcc/ada/vms_data.ads", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fvms_data.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16b0521384676b7f6e5dec4b0ebb16b398002858/gcc%2Fada%2Fvms_data.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fvms_data.ads?ref=16b0521384676b7f6e5dec4b0ebb16b398002858", "patch": "@@ -780,7 +780,7 @@ package VMS_Data is\n    --        /ERROR_LIMIT=nnn\n    --\n    --   NNN is a decimal integer in the range of 1 to 1000 and limits the\n-   --   number of diagnostic messages to be generated into Stdoutto that\n+   --   number of diagnostic messages to be generated into Stdout to that\n    --   number.  Once that number has been reached, gnatcheck stops\n    --   to print out diagnoses into Stderr. If NNN is equal to 0, this means\n    --  that there is no limit on the number of diagnoses in Stdout\n@@ -4878,8 +4878,8 @@ package VMS_Data is\n    --\n    --   Specifies the syntax element metrics to be computed (if at least one\n    --   positive syntax element metric, line metric, complexity or coupling\n-   --   metric is specified then only explicitly specified specified syntax\n-   --   element metrics are computed and reported)\n+   --   metric is specified then only explicitly specified syntax element\n+   --   metrics are computed and reported)\n    --\n    --   option may be one of the following:\n    --\n@@ -5012,8 +5012,8 @@ package VMS_Data is\n \n    --   Specifies the line metrics to be computed (if at least one positive\n    --   syntax element metric, line metric, complexity or coupling metric is\n-   --   specified then only explicitly specified specified line metrics are\n-   --   computed and reported)\n+   --   specified then only explicitly specified line metrics are computed\n+   --   and reported)\n    --\n    --   option may be one of the following:\n    --\n@@ -5067,8 +5067,8 @@ package VMS_Data is\n \n    --   Specifies the complexity metrics to be computed (if at least one\n    --   positive syntax element metric, line metric, complexity or coupling\n-   --   metric is specified then only explicitly specified specified complexity\n-   --   metrics are computed and reported)\n+   --   metric is specified then only explicitly specified complexity metrics\n+   --   are computed and reported)\n    --\n    --   option may be one of the following:\n    --"}]}