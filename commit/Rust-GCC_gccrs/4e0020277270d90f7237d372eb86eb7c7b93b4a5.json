{"sha": "4e0020277270d90f7237d372eb86eb7c7b93b4a5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGUwMDIwMjc3MjcwZDkwZjcyMzdkMzcyZWI4NmViN2M3YjkzYjRhNQ==", "commit": {"author": {"name": "Adam Megacz", "email": "adam@xwt.org", "date": "2002-03-08T01:46:34Z"}, "committer": {"name": "Adam Megacz", "email": "megacz@gcc.gnu.org", "date": "2002-03-08T01:46:34Z"}, "message": "natPlainSocketImpl.cc: Changed USE_WINSOCK to WIN32, and added thunks for read(), write(), and close().\n\n2002-03-07  Adam Megacz  <adam@xwt.org>\n\n        * java/net/natPlainSocketImpl.cc: Changed USE_WINSOCK to\n        WIN32, and added thunks for read(), write(), and close().\n        * java/net/natPlainSocketImpl.cc (accept, read, read):\n        Disabled timeouts on WIN32 pending discussion.\n\nFrom-SVN: r50418", "tree": {"sha": "01fcfa04a840aa339f42e72d38cefe1acf04be94", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/01fcfa04a840aa339f42e72d38cefe1acf04be94"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4e0020277270d90f7237d372eb86eb7c7b93b4a5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e0020277270d90f7237d372eb86eb7c7b93b4a5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e0020277270d90f7237d372eb86eb7c7b93b4a5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e0020277270d90f7237d372eb86eb7c7b93b4a5/comments", "author": null, "committer": null, "parents": [{"sha": "8eeda6e0e760b631414f9272beedfb6c007c5ad4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8eeda6e0e760b631414f9272beedfb6c007c5ad4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8eeda6e0e760b631414f9272beedfb6c007c5ad4"}], "stats": {"total": 47, "additions": 44, "deletions": 3}, "files": [{"sha": "7483b4c4408f76ed5c387f43f0cb6d68d06f6a70", "filename": "libjava/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e0020277270d90f7237d372eb86eb7c7b93b4a5/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e0020277270d90f7237d372eb86eb7c7b93b4a5/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=4e0020277270d90f7237d372eb86eb7c7b93b4a5", "patch": "@@ -1,3 +1,10 @@\n+2002-03-07  Adam Megacz  <adam@xwt.org>\n+\n+        * java/net/natPlainSocketImpl.cc: Changed USE_WINSOCK to\n+        WIN32, and added thunks for read(), write(), and close().\n+        * java/net/natPlainSocketImpl.cc (accept, read, read):\n+        Disabled timeouts on WIN32 pending discussion.\n+\n 2002-03-07  Adam Megacz  <adam@xwt.org>\n \n         * win32.cc (_Jv_platform_gettimeofday): Now takes no args,"}, {"sha": "7090fcd64a40940f02ee47ac5c45ede0dbf2d4df", "filename": "libjava/java/net/natPlainSocketImpl.cc", "status": "modified", "additions": 37, "deletions": 3, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e0020277270d90f7237d372eb86eb7c7b93b4a5/libjava%2Fjava%2Fnet%2FnatPlainSocketImpl.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e0020277270d90f7237d372eb86eb7c7b93b4a5/libjava%2Fjava%2Fnet%2FnatPlainSocketImpl.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnet%2FnatPlainSocketImpl.cc?ref=4e0020277270d90f7237d372eb86eb7c7b93b4a5", "patch": "@@ -10,22 +10,45 @@ details.  */\n \n \n #ifndef DISABLE_JAVA_NET\n-#ifdef USE_WINSOCK\n+#ifdef WIN32\n #include <windows.h>\n #include <winsock.h>\n #include <errno.h>\n #include <string.h>\n+#undef STRICT\n+#undef MAX_PRIORITY\n+#undef MIN_PRIORITY\n+#undef FIONREAD\n+\n+// stuff to make Win32 look POSIXy\n+static inline int close(int s) {\n+  return closesocket(s);\n+}\n+\n+static inline int write(int s, void *buf, int len)\n+{\n+  return send(s, (char*)buf, len, 0);\n+}\n+\n+static inline int read(int s, void *buf, int len)\n+{\n+  return recv(s, (char*)buf, len, 0);\n+}\n+\n+// these errors cannot occur on Win32\n+#define ENOTCONN 0\n+#define ECONNRESET 0\n #ifndef ENOPROTOOPT\n #define ENOPROTOOPT 109\n #endif\n-#else /* USE_WINSOCK */\n+#else /* WIN32 */\n #include \"posix.h\"\n #include <sys/socket.h>\n #include <netinet/in.h>\n #include <netinet/tcp.h>\n #include <errno.h>\n #include <string.h>\n-#endif /* USE_WINSOCK */\n+#endif /* WIN32 */\n #endif /* DISABLE_JAVA_NET */\n \n #if HAVE_BSTRING_H\n@@ -325,6 +348,8 @@ java::net::PlainSocketImpl::accept (java::net::PlainSocketImpl *s)\n   socklen_t addrlen = sizeof(u);\n   int new_socket = 0; \n \n+// FIXME: implement timeout support for Win32\n+#ifndef WIN32\n   // Do timeouts via select since SO_RCVTIMEO is not always available.\n   if (timeout > 0)\n     {\n@@ -341,6 +366,7 @@ java::net::PlainSocketImpl::accept (java::net::PlainSocketImpl *s)\n \tthrow new java::io::InterruptedIOException (\n \t         JvNewStringUTF(\"Accept timed out\"));\n     }\n+#endif /* WIN32 */\n \n   new_socket = _Jv_accept (fnum, (sockaddr*) &u, &addrlen);\n   if (new_socket < 0)\n@@ -461,6 +487,8 @@ java::net::PlainSocketImpl::read(void)\n {\n   jbyte b;\n \n+// FIXME: implement timeout support for Win32\n+#ifndef WIN32\n   // Do timeouts via select.\n   if (timeout > 0)\n   {\n@@ -482,6 +510,8 @@ java::net::PlainSocketImpl::read(void)\n     // If select returns ok we know we either got signalled or read some data...\n     // either way we need to try to read.\n   }\n+#endif /* WIN32 */\n+\n   int r = ::read (fnum, &b, 1);\n \n   if (r == 0)\n@@ -516,6 +546,8 @@ java::net::PlainSocketImpl::read(jbyteArray buffer, jint offset, jint count)\n     throw new java::lang::ArrayIndexOutOfBoundsException;\n   jbyte *bytes = elements (buffer) + offset;\n \n+// FIXME: implement timeout support for Win32\n+#ifndef WIN32\n   // Do timeouts via select.\n   if (timeout > 0)\n   {\n@@ -541,6 +573,8 @@ java::net::PlainSocketImpl::read(jbyteArray buffer, jint offset, jint count)\n \tthrow iioe;\n       }\n   }\n+#endif\n+\n   // Read the socket.\n   int r = ::recv (fnum, (char *) bytes, count, 0);\n   if (r == 0)"}]}