{"sha": "d2c5dbf264631433ae44a208e69de8e1ad74f2a8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDJjNWRiZjI2NDYzMTQzM2FlNDRhMjA4ZTY5ZGU4ZTFhZDc0ZjJhOA==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2012-02-18T12:31:42Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2012-02-18T12:31:42Z"}, "message": "re PR fortran/52295 (Allow internal procedure in generic interfaces)\n\n2012-02-18  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/52295\n        * interface.c (check_interface0): Internal procs in\n        generic interfaces are allowed in Fortran 2008.\n\n2012-02-18  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/52295\n        * gfortran.dg/interface_35.f90: Use -std=f2003.\n        * gfortran.dg/proc_ptr_comp_20.f90: Remove dg-warning.\n        * gfortran.dg/interface_assignment_4.f90: Ditto.\n        * gfortran.dg/bessel_1.f90: Ditto.\n        * gfortran.dg/func_result_6.f90: Ditto.\n        * gfortran.dg/hypot_1.f90: Ditto.\n        * gfortran.dg/proc_ptr_comp_21.f90: Ditto.\n\nFrom-SVN: r184372", "tree": {"sha": "c18e46c14d2c62b59b5f706b2be9d3822961aaf2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c18e46c14d2c62b59b5f706b2be9d3822961aaf2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d2c5dbf264631433ae44a208e69de8e1ad74f2a8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2c5dbf264631433ae44a208e69de8e1ad74f2a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d2c5dbf264631433ae44a208e69de8e1ad74f2a8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2c5dbf264631433ae44a208e69de8e1ad74f2a8/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "141a25c268513da985b10d374df46f006412a0c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/141a25c268513da985b10d374df46f006412a0c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/141a25c268513da985b10d374df46f006412a0c7"}], "stats": {"total": 44, "additions": 31, "deletions": 13}, "files": [{"sha": "f6b54d7767f3c0a71b27cbc31b8e6fb35d0feec8", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2c5dbf264631433ae44a208e69de8e1ad74f2a8/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2c5dbf264631433ae44a208e69de8e1ad74f2a8/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=d2c5dbf264631433ae44a208e69de8e1ad74f2a8", "patch": "@@ -1,3 +1,9 @@\n+2012-02-18  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/52295\n+\t* interface.c (check_interface0): Internal procs in\n+\tgeneric interfaces are allowed in Fortran 2008.\n+\n 2012-02-17  Tobias Burnus  <burnus@net-b.de>\n \t    Roland Stigge  <stigge@antcom.de>\n "}, {"sha": "e1f0cb6b2f8f62e03c0ef5425b28ea3efbfe8d01", "filename": "gcc/fortran/interface.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2c5dbf264631433ae44a208e69de8e1ad74f2a8/gcc%2Ffortran%2Finterface.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2c5dbf264631433ae44a208e69de8e1ad74f2a8/gcc%2Ffortran%2Finterface.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Finterface.c?ref=d2c5dbf264631433ae44a208e69de8e1ad74f2a8", "patch": "@@ -1292,9 +1292,10 @@ check_interface0 (gfc_interface *p, const char *interface_name)\n \t  return 1;\n \t}\n \n+      /* F2003, C1207. F2008, C1207.  */\n       if (p->sym->attr.proc == PROC_INTERNAL\n-\t  && gfc_notify_std (GFC_STD_GNU, \"Extension: Internal procedure '%s' \"\n-\t\t\t     \"in %s at %L\", p->sym->name, interface_name,\n+\t  && gfc_notify_std (GFC_STD_F2008, \"Fortran 2008: Internal procedure \"\n+\t\t\t     \"'%s' in %s at %L\", p->sym->name, interface_name,\n \t\t\t     &p->sym->declared_at) == FAILURE)\n \treturn 1;\n     }"}, {"sha": "8c66e09ee7106c5bf528e0c00bbf2ca105d0c862", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2c5dbf264631433ae44a208e69de8e1ad74f2a8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2c5dbf264631433ae44a208e69de8e1ad74f2a8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d2c5dbf264631433ae44a208e69de8e1ad74f2a8", "patch": "@@ -1,3 +1,14 @@\n+2012-02-18  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/52295\n+\t* gfortran.dg/interface_35.f90: Use -std=f2003.\n+\t* gfortran.dg/proc_ptr_comp_20.f90: Remove dg-warning.\n+\t* gfortran.dg/interface_assignment_4.f90: Ditto.\n+\t* gfortran.dg/bessel_1.f90: Ditto.\n+\t* gfortran.dg/func_result_6.f90: Ditto.\n+\t* gfortran.dg/hypot_1.f90: Ditto.\n+\t* gfortran.dg/proc_ptr_comp_21.f90: Ditto.\n+\n 2012-02-17  Tobias Burnus  <burnus@net-b.de>\n \n \tPR translation/52232"}, {"sha": "728c5ce49caa8d88b702cea787a8fe0982c9c414", "filename": "gcc/testsuite/gfortran.dg/bessel_1.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2c5dbf264631433ae44a208e69de8e1ad74f2a8/gcc%2Ftestsuite%2Fgfortran.dg%2Fbessel_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2c5dbf264631433ae44a208e69de8e1ad74f2a8/gcc%2Ftestsuite%2Fgfortran.dg%2Fbessel_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fbessel_1.f90?ref=d2c5dbf264631433ae44a208e69de8e1ad74f2a8", "patch": "@@ -26,11 +26,11 @@ program test\n   call check(bessel_yn (3,x4), bessel_yn (3,1.9_4))\n \n contains\n-  subroutine check_r4 (a, b) ! { dg-warning \"Extension: Internal procedure\" }\n+  subroutine check_r4 (a, b)\n     real(kind=4), intent(in) :: a, b\n     if (abs(a - b) > 1.e-5 * abs(b)) call abort\n   end subroutine\n-  subroutine check_r8 (a, b) ! { dg-warning \"Extension: Internal procedure\" }\n+  subroutine check_r8 (a, b)\n     real(kind=8), intent(in) :: a, b\n     if (abs(a - b) > 1.e-7 * abs(b)) call abort\n   end subroutine"}, {"sha": "e64a2ef7abc83262b826ade5c4e5f7f50da55984", "filename": "gcc/testsuite/gfortran.dg/func_result_6.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2c5dbf264631433ae44a208e69de8e1ad74f2a8/gcc%2Ftestsuite%2Fgfortran.dg%2Ffunc_result_6.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2c5dbf264631433ae44a208e69de8e1ad74f2a8/gcc%2Ftestsuite%2Fgfortran.dg%2Ffunc_result_6.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ffunc_result_6.f90?ref=d2c5dbf264631433ae44a208e69de8e1ad74f2a8", "patch": "@@ -63,7 +63,7 @@ subroutine test\n bar = gen()\n if (ptr /= 77) call abort()\n contains\n-  function foo() ! { dg-warning \"Extension: Internal procedure .foo. in generic interface\" }\n+  function foo()\n     integer, allocatable :: foo(:)\n     allocate(foo(2))\n     foo = [33, 77]"}, {"sha": "59022fab93ca23150555d3e5ca882eded7add29b", "filename": "gcc/testsuite/gfortran.dg/hypot_1.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2c5dbf264631433ae44a208e69de8e1ad74f2a8/gcc%2Ftestsuite%2Fgfortran.dg%2Fhypot_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2c5dbf264631433ae44a208e69de8e1ad74f2a8/gcc%2Ftestsuite%2Fgfortran.dg%2Fhypot_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fhypot_1.f90?ref=d2c5dbf264631433ae44a208e69de8e1ad74f2a8", "patch": "@@ -18,11 +18,11 @@ program test\n   call check(hypot(x4,y4), hypot(1.9_4,-2.1_4))\n \n contains\n-  subroutine check_r4 (a, b) ! { dg-warning \"Extension: Internal procedure\" }\n+  subroutine check_r4 (a, b)\n     real(kind=4), intent(in) :: a, b\n     if (abs(a - b) > 1.e-5 * abs(b)) call abort\n   end subroutine\n-  subroutine check_r8 (a, b) ! { dg-warning \"Extension: Internal procedure\" }\n+  subroutine check_r8 (a, b)\n     real(kind=8), intent(in) :: a, b\n     if (abs(a - b) > 1.e-7 * abs(b)) call abort\n   end subroutine"}, {"sha": "eb4de12c1bd394cf8a02744563eef2e439257e3e", "filename": "gcc/testsuite/gfortran.dg/interface_35.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2c5dbf264631433ae44a208e69de8e1ad74f2a8/gcc%2Ftestsuite%2Fgfortran.dg%2Finterface_35.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2c5dbf264631433ae44a208e69de8e1ad74f2a8/gcc%2Ftestsuite%2Fgfortran.dg%2Finterface_35.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Finterface_35.f90?ref=d2c5dbf264631433ae44a208e69de8e1ad74f2a8", "patch": "@@ -1,5 +1,5 @@\n ! { dg-do compile }\n-! { dg-options \"-std=f2008\" }\n+! { dg-options \"-std=f2003\" }\n !\n ! PR fortran/48112 (module_m)\n ! PR fortran/48279 (sidl_string_array, s_Hard)\n@@ -70,7 +70,7 @@ subroutine set1 (a)\n     integer, intent(in) :: a\n   end subroutine\n \n-  integer function get1 (s) ! { dg-error \"Extension: Internal procedure .get1. in generic interface .get.\" }\n+  integer function get1 (s) ! { dg-error \"Fortran 2008: Internal procedure .get1. in generic interface .get.\" }\n     integer :: s\n   end function\n "}, {"sha": "535e88425498838c7d4a4acbd83a3558c4fea4ec", "filename": "gcc/testsuite/gfortran.dg/interface_assignment_4.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2c5dbf264631433ae44a208e69de8e1ad74f2a8/gcc%2Ftestsuite%2Fgfortran.dg%2Finterface_assignment_4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2c5dbf264631433ae44a208e69de8e1ad74f2a8/gcc%2Ftestsuite%2Fgfortran.dg%2Finterface_assignment_4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Finterface_assignment_4.f90?ref=d2c5dbf264631433ae44a208e69de8e1ad74f2a8", "patch": "@@ -16,7 +16,7 @@\n \n contains\n \n-  subroutine op_assign_VS_CH (var, exp) ! { dg-warning \"Extension: Internal procedure\" }\n+  subroutine op_assign_VS_CH (var, exp)\n     type(varying_string), intent(out) :: var\n     character(LEN=*), intent(in)      :: exp\n   end subroutine"}, {"sha": "3cad7dfa66b924272a7036eb1e4a5e425498b4be", "filename": "gcc/testsuite/gfortran.dg/proc_ptr_comp_20.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2c5dbf264631433ae44a208e69de8e1ad74f2a8/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_ptr_comp_20.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2c5dbf264631433ae44a208e69de8e1ad74f2a8/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_ptr_comp_20.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_ptr_comp_20.f90?ref=d2c5dbf264631433ae44a208e69de8e1ad74f2a8", "patch": "@@ -35,12 +35,12 @@\n \n contains\n \n-  real function f1(a,b) ! { dg-warning \"Extension: Internal procedure\" }\n+  real function f1(a,b)\n     real,intent(in) :: a,b\n     f1 = a + b\n   end function\n \n-  integer function f2(a,b) ! { dg-warning \"Extension: Internal procedure\" }\n+  integer function f2(a,b)\n     real,intent(in) :: a,b\n     f2 = a - b\n   end function"}, {"sha": "c000896d549ee5b995829836ef197990f3bb8593", "filename": "gcc/testsuite/gfortran.dg/proc_ptr_comp_21.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2c5dbf264631433ae44a208e69de8e1ad74f2a8/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_ptr_comp_21.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2c5dbf264631433ae44a208e69de8e1ad74f2a8/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_ptr_comp_21.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_ptr_comp_21.f90?ref=d2c5dbf264631433ae44a208e69de8e1ad74f2a8", "patch": "@@ -19,7 +19,7 @@\n \n contains\n \n-  elemental subroutine op_assign (str, ch) ! { dg-warning \"Extension: Internal procedure\" }\n+  elemental subroutine op_assign (str, ch)\n     type(nf_t), intent(out) :: str\n     character(len=*), intent(in) :: ch\n   end subroutine"}]}