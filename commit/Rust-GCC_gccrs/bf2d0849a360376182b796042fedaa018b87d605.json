{"sha": "bf2d0849a360376182b796042fedaa018b87d605", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmYyZDA4NDlhMzYwMzc2MTgyYjc5NjA0MmZlZGFhMDE4Yjg3ZDYwNQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2016-12-06T09:22:36Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-12-06T09:22:36Z"}, "message": "re PR c++/71537 (GCC rejects consetxpr boolean conversions and comparisons on the result of pointer arithmetic.)\n\n\tPR c++/71537\n\t* fold-const-call.c (fold_const_call): Handle\n\tCFN_BUILT_IN_{INDEX,STRCHR,RINDEX,STRRCHR}.\n\n\t* g++.dg/cpp0x/constexpr-strchr.C: New test.\n\nFrom-SVN: r243284", "tree": {"sha": "1e28303bb9807909476388958acd7617a39ca592", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1e28303bb9807909476388958acd7617a39ca592"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bf2d0849a360376182b796042fedaa018b87d605", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf2d0849a360376182b796042fedaa018b87d605", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf2d0849a360376182b796042fedaa018b87d605", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf2d0849a360376182b796042fedaa018b87d605/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0d3ce69b79ab7d7ea4a2fc4ed5e983ea6efcfa69", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d3ce69b79ab7d7ea4a2fc4ed5e983ea6efcfa69", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d3ce69b79ab7d7ea4a2fc4ed5e983ea6efcfa69"}], "stats": {"total": 59, "additions": 59, "deletions": 0}, "files": [{"sha": "029dbdca00ba4783aabe6f51b397cd9abec59608", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf2d0849a360376182b796042fedaa018b87d605/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf2d0849a360376182b796042fedaa018b87d605/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bf2d0849a360376182b796042fedaa018b87d605", "patch": "@@ -1,5 +1,9 @@\n 2016-12-06  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR c++/71537\n+\t* fold-const-call.c (fold_const_call): Handle\n+\tCFN_BUILT_IN_{INDEX,STRCHR,RINDEX,STRRCHR}.\n+\n \tPR tree-optimization/78675\n \t* tree-vect-loop.c (vectorizable_live_operation): For\n \tVECTOR_BOOLEAN_TYPE_P vectype use integral type with bitsize precision"}, {"sha": "439988d71704ab095caa0e3332ea17941da7c80e", "filename": "gcc/fold-const-call.c", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf2d0849a360376182b796042fedaa018b87d605/gcc%2Ffold-const-call.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf2d0849a360376182b796042fedaa018b87d605/gcc%2Ffold-const-call.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const-call.c?ref=bf2d0849a360376182b796042fedaa018b87d605", "patch": "@@ -1383,6 +1383,7 @@ tree\n fold_const_call (combined_fn fn, tree type, tree arg0, tree arg1)\n {\n   const char *p0, *p1;\n+  char c;\n   switch (fn)\n     {\n     case CFN_BUILT_IN_STRSPN:\n@@ -1409,6 +1410,30 @@ fold_const_call (combined_fn fn, tree type, tree arg0, tree arg1)\n \t}\n       return NULL_TREE;\n \n+    case CFN_BUILT_IN_INDEX:\n+    case CFN_BUILT_IN_STRCHR:\n+      if ((p0 = c_getstr (arg0)) && target_char_cst_p (arg1, &c))\n+\t{\n+\t  const char *r = strchr (p0, c);\n+\t  if (r == NULL)\n+\t    return build_int_cst (type, 0);\n+\t  return fold_convert (type,\n+\t\t\t       fold_build_pointer_plus_hwi (arg0, r - p0));\n+\t}\n+      return NULL_TREE;\n+\n+    case CFN_BUILT_IN_RINDEX:\n+    case CFN_BUILT_IN_STRRCHR:\n+      if ((p0 = c_getstr (arg0)) && target_char_cst_p (arg1, &c))\n+\t{\n+\t  const char *r = strrchr (p0, c);\n+\t  if (r == NULL)\n+\t    return build_int_cst (type, 0);\n+\t  return fold_convert (type,\n+\t\t\t       fold_build_pointer_plus_hwi (arg0, r - p0));\n+\t}\n+      return NULL_TREE;\n+\n     default:\n       return fold_const_call_1 (fn, type, arg0, arg1);\n     }"}, {"sha": "e6dfcdcf59969c23b6d822a263b3d943c70efa0a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf2d0849a360376182b796042fedaa018b87d605/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf2d0849a360376182b796042fedaa018b87d605/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=bf2d0849a360376182b796042fedaa018b87d605", "patch": "@@ -1,5 +1,8 @@\n 2016-12-06  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR c++/71537\n+\t* g++.dg/cpp0x/constexpr-strchr.C: New test.\n+\n \tPR tree-optimization/78675\n \t* gcc.c-torture/execute/pr78675.c: New test.\n \t* gcc.target/i386/pr78675-1.c: New test."}, {"sha": "c44d8a28b78433b5163ae0a49e8ed48b865d0566", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-strchr.C", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf2d0849a360376182b796042fedaa018b87d605/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-strchr.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf2d0849a360376182b796042fedaa018b87d605/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-strchr.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-strchr.C?ref=bf2d0849a360376182b796042fedaa018b87d605", "patch": "@@ -0,0 +1,27 @@\n+// { dg-do compile { target c++11 } }\n+\n+constexpr const char *f1 (const char *p, int q) { return __builtin_strchr (p, q); }\n+constexpr const char *f2 (const char *p, int q) { return __builtin_index (p, q); }\n+constexpr const char *f3 (const char *p, int q) { return __builtin_strrchr (p, q); }\n+constexpr const char *f4 (const char *p, int q) { return __builtin_rindex (p, q); }\n+constexpr const char a[] = \"abcdefedcba\";\n+static_assert (f1 (\"abcde\", 'f') == nullptr, \"\");\n+static_assert (f1 (a, 'g') == nullptr, \"\");\n+static_assert (f1 (a, 'f') == a + 5, \"\");\n+static_assert (f1 (a, 'c') == a + 2, \"\");\n+static_assert (f1 (a, '\\0') == a + 11, \"\");\n+static_assert (f2 (\"abcde\", 'f') == nullptr, \"\");\n+static_assert (f2 (a, 'g') == nullptr, \"\");\n+static_assert (f2 (a, 'f') == a + 5, \"\");\n+static_assert (f2 (a, 'c') == a + 2, \"\");\n+static_assert (f2 (a, '\\0') == a + 11, \"\");\n+static_assert (f3 (\"abcde\", 'f') == nullptr, \"\");\n+static_assert (f3 (a, 'g') == nullptr, \"\");\n+static_assert (f3 (a, 'f') == a + 5, \"\");\n+static_assert (f3 (a, 'c') == a + 8, \"\");\n+static_assert (f3 (a, '\\0') == a + 11, \"\");\n+static_assert (f4 (\"abcde\", 'f') == nullptr, \"\");\n+static_assert (f4 (a, 'g') == nullptr, \"\");\n+static_assert (f4 (a, 'f') == a + 5, \"\");\n+static_assert (f4 (a, 'c') == a + 8, \"\");\n+static_assert (f4 (a, '\\0') == a + 11, \"\");"}]}