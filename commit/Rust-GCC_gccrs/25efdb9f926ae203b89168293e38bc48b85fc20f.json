{"sha": "25efdb9f926ae203b89168293e38bc48b85fc20f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjVlZmRiOWY5MjZhZTIwM2I4OTE2ODI5M2UzOGJjNDhiODVmYzIwZg==", "commit": {"author": {"name": "Yaakov Selkowitz", "email": "yselkowi@redhat.com", "date": "2014-08-19T15:22:59Z"}, "committer": {"name": "Kai Tietz", "email": "ktietz@gcc.gnu.org", "date": "2014-08-19T15:22:59Z"}, "message": "cygming-crtend.c (register_frame_ctor): Move atexit call from here...\n\n2014-08-19  Yaakov Selkowitz  <yselkowi@redhat.com>\n\n\t* config/i386/cygming-crtend.c (register_frame_ctor): Move atexit\n\tcall from here...\n\t* config/i386/cygming-crtbegin.c (__gcc_register_frame): to here.\n\t(__dso_handle): Define on Cygwin.\n\t* config/i386/t-cygming (crtbeginS.o): New rule.\n\t* config.host (*-*-cygwin*): Add crtbeginS.o to extra_parts.\n\nFrom-SVN: r214162", "tree": {"sha": "ef3547031c0e3ad7bb00a76cbb7dfdb7fb40264d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ef3547031c0e3ad7bb00a76cbb7dfdb7fb40264d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/25efdb9f926ae203b89168293e38bc48b85fc20f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25efdb9f926ae203b89168293e38bc48b85fc20f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/25efdb9f926ae203b89168293e38bc48b85fc20f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25efdb9f926ae203b89168293e38bc48b85fc20f/comments", "author": {"login": "yselkowitz", "id": 13408495, "node_id": "MDQ6VXNlcjEzNDA4NDk1", "avatar_url": "https://avatars.githubusercontent.com/u/13408495?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yselkowitz", "html_url": "https://github.com/yselkowitz", "followers_url": "https://api.github.com/users/yselkowitz/followers", "following_url": "https://api.github.com/users/yselkowitz/following{/other_user}", "gists_url": "https://api.github.com/users/yselkowitz/gists{/gist_id}", "starred_url": "https://api.github.com/users/yselkowitz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yselkowitz/subscriptions", "organizations_url": "https://api.github.com/users/yselkowitz/orgs", "repos_url": "https://api.github.com/users/yselkowitz/repos", "events_url": "https://api.github.com/users/yselkowitz/events{/privacy}", "received_events_url": "https://api.github.com/users/yselkowitz/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "301f44023e0c46542329b5f77763685529a46267", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/301f44023e0c46542329b5f77763685529a46267", "html_url": "https://github.com/Rust-GCC/gccrs/commit/301f44023e0c46542329b5f77763685529a46267"}], "stats": {"total": 44, "additions": 36, "deletions": 8}, "files": [{"sha": "c9f4e12dd492e9006a64b8eab417e5e0ce442df7", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25efdb9f926ae203b89168293e38bc48b85fc20f/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25efdb9f926ae203b89168293e38bc48b85fc20f/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=25efdb9f926ae203b89168293e38bc48b85fc20f", "patch": "@@ -1,5 +1,12 @@\n 2014-08-19  Yaakov Selkowitz  <yselkowi@redhat.com>\n \n+\t* config/i386/cygming-crtend.c (register_frame_ctor): Move atexit\n+\tcall from here...\n+\t* config/i386/cygming-crtbegin.c (__gcc_register_frame): to here.\n+\t(__dso_handle): Define on Cygwin.\n+\t* config/i386/t-cygming (crtbeginS.o): New rule.\n+\t* config.host (*-*-cygwin*): Add crtbeginS.o to extra_parts.\n+\n \t* config/i386/cygming-crtbegin.c (deregister_frame_fn): Fix\n \tdeclaration syntax.\n "}, {"sha": "0550c3434452e547a2d1d05bc24d78002f54da7a", "filename": "libgcc/config.host", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25efdb9f926ae203b89168293e38bc48b85fc20f/libgcc%2Fconfig.host", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25efdb9f926ae203b89168293e38bc48b85fc20f/libgcc%2Fconfig.host", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig.host?ref=25efdb9f926ae203b89168293e38bc48b85fc20f", "patch": "@@ -614,7 +614,7 @@ i[34567]86-*-solaris2* | x86_64-*-solaris2.1[0-9]*)\n i[4567]86-wrs-vxworks|i[4567]86-wrs-vxworksae)\n \t;;\n i[34567]86-*-cygwin*)\n-\textra_parts=\"crtbegin.o crtend.o crtfastmath.o\"\n+\textra_parts=\"crtbegin.o crtbeginS.o crtend.o crtfastmath.o\"\n \t# This has to match the logic for DWARF2_UNWIND_INFO in gcc/config/i386/cygming.h\n \tif test x$enable_sjlj_exceptions = xyes; then\n \t\ttmake_eh_file=\"i386/t-sjlj-eh\"\n@@ -630,7 +630,7 @@ i[34567]86-*-cygwin*)\n \ttmake_file=\"${tmake_file} ${tmake_eh_file} ${tmake_dlldir_file} i386/t-slibgcc-cygming i386/t-cygming i386/t-cygwin i386/t-crtfm i386/t-chkstk t-dfprules\"\n \t;;\n x86_64-*-cygwin*)\n-\textra_parts=\"crtbegin.o crtend.o crtfastmath.o\"\n+\textra_parts=\"crtbegin.o crtbeginS.o crtend.o crtfastmath.o\"\n \t# This has to match the logic for DWARF2_UNWIND_INFO in gcc/config/i386/cygming.h\n \tif test x$enable_sjlj_exceptions = xyes; then\n \t\ttmake_eh_file=\"i386/t-sjlj-eh\""}, {"sha": "3e8ed2239e4233f01669f7c4c535e113d02d9bc3", "filename": "libgcc/config/i386/cygming-crtbegin.c", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25efdb9f926ae203b89168293e38bc48b85fc20f/libgcc%2Fconfig%2Fi386%2Fcygming-crtbegin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25efdb9f926ae203b89168293e38bc48b85fc20f/libgcc%2Fconfig%2Fi386%2Fcygming-crtbegin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fi386%2Fcygming-crtbegin.c?ref=25efdb9f926ae203b89168293e38bc48b85fc20f", "patch": "@@ -111,6 +111,23 @@ static void *__JCR_LIST__[]\n   = { };\n #endif\n \n+#ifdef __CYGWIN__\n+/* Declare the __dso_handle variable.  It should have a unique value\n+   in every shared-object; in a main program its value is zero.  The\n+   object should in any case be protected.  This means the instance\n+   in one DSO or the main program is not used in another object.  The\n+   dynamic linker takes care of this.  */\n+\n+#ifdef CRTSTUFFS_O\n+extern void *__ImageBase;\n+void *__dso_handle = &__ImageBase;\n+#else\n+void *__dso_handle = 0;\n+#endif\n+\n+#endif /* __CYGWIN__ */\n+\n+\n /* Pull in references from libgcc.a(unwind-dw2-fde.o) in the\n    startfile. These are referenced by a ctor and dtor in crtend.o.  */\n extern void __gcc_register_frame (void);\n@@ -161,6 +178,13 @@ __gcc_register_frame (void)\n \tregister_class_fn (__JCR_LIST__);\n     }\n #endif\n+\n+#if DEFAULT_USE_CXA_ATEXIT\n+  /* If we use the __cxa_atexit method to register C++ dtors\n+     at object construction,  also use atexit to register eh frame\n+     info cleanup.  */\n+  atexit(__gcc_deregister_frame);\n+#endif /* DEFAULT_USE_CXA_ATEXIT */\n }\n \n void"}, {"sha": "d3beaf96635bb05813d8c9f56c5c64fad02a9dfd", "filename": "libgcc/config/i386/cygming-crtend.c", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25efdb9f926ae203b89168293e38bc48b85fc20f/libgcc%2Fconfig%2Fi386%2Fcygming-crtend.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25efdb9f926ae203b89168293e38bc48b85fc20f/libgcc%2Fconfig%2Fi386%2Fcygming-crtend.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fi386%2Fcygming-crtend.c?ref=25efdb9f926ae203b89168293e38bc48b85fc20f", "patch": "@@ -70,12 +70,6 @@ static void\n register_frame_ctor (void)\n {\n   __gcc_register_frame ();\n-#if DEFAULT_USE_CXA_ATEXIT\n-  /* If we use the __cxa_atexit method to register C++ dtors\n-     at object construction,  also use atexit to register eh frame\n-     info cleanup.  */\n-  atexit (__gcc_deregister_frame);\n-#endif\n }\n \n #if !DEFAULT_USE_CXA_ATEXIT"}, {"sha": "4713b7f696ee0c4a669958d31c6c00b3f6b8e052", "filename": "libgcc/config/i386/t-cygming", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25efdb9f926ae203b89168293e38bc48b85fc20f/libgcc%2Fconfig%2Fi386%2Ft-cygming", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25efdb9f926ae203b89168293e38bc48b85fc20f/libgcc%2Fconfig%2Fi386%2Ft-cygming", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fi386%2Ft-cygming?ref=25efdb9f926ae203b89168293e38bc48b85fc20f", "patch": "@@ -8,6 +8,9 @@ CUSTOM_CRTSTUFF = yes\n crtbegin.o: $(srcdir)/config/i386/cygming-crtbegin.c\n \t$(crt_compile) -fno-omit-frame-pointer  -c $<\n \n+crtbeginS.o: $(srcdir)/config/i386/cygming-crtbegin.c\n+\t$(crt_compile) -fno-omit-frame-pointer  -c $< -DCRTSTUFFS_O\n+\n # We intentionally use a implementation-reserved init priority of 0,\n # so allow the warning.\n crtend.o: $(srcdir)/config/i386/cygming-crtend.c"}]}