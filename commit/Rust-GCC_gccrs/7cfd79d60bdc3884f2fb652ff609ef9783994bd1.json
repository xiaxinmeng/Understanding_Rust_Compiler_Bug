{"sha": "7cfd79d60bdc3884f2fb652ff609ef9783994bd1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2NmZDc5ZDYwYmRjMzg4NGYyZmI2NTJmZjYwOWVmOTc4Mzk5NGJkMQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2017-01-24T22:33:41Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2017-01-24T22:33:41Z"}, "message": "re PR c++/79205 (ICE in create_tmp_var, at gimple-expr.c:473)\n\n\tPR c++/79205\n\t* cp-gimplify.c (cp_genericize_r): Add result of\n\tconvert_from_reference on invisiref parm to p_set.\n\n\t* g++.dg/cpp1z/decomp22.C: New test.\n\t* g++.dg/cpp1z/decomp23.C: New test.\n\nFrom-SVN: r244885", "tree": {"sha": "4a05072535dadab35f17574aaabf486b9fd70688", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4a05072535dadab35f17574aaabf486b9fd70688"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7cfd79d60bdc3884f2fb652ff609ef9783994bd1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7cfd79d60bdc3884f2fb652ff609ef9783994bd1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7cfd79d60bdc3884f2fb652ff609ef9783994bd1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7cfd79d60bdc3884f2fb652ff609ef9783994bd1/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a8c9ef2a392330010eaeabe0b85403cf4146f7de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8c9ef2a392330010eaeabe0b85403cf4146f7de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a8c9ef2a392330010eaeabe0b85403cf4146f7de"}], "stats": {"total": 46, "additions": 46, "deletions": 0}, "files": [{"sha": "05c6b6098882f68cbb59c58e5b6733a5a4d19b8a", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7cfd79d60bdc3884f2fb652ff609ef9783994bd1/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7cfd79d60bdc3884f2fb652ff609ef9783994bd1/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=7cfd79d60bdc3884f2fb652ff609ef9783994bd1", "patch": "@@ -1,3 +1,9 @@\n+2017-01-24  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/79205\n+\t* cp-gimplify.c (cp_genericize_r): Add result of\n+\tconvert_from_reference on invisiref parm to p_set.\n+\n 2017-01-24  Nathan Sidwell  <nathan@acm.org>\n \n \tPR c++/78469 - defaulted ctor and inaccessible dtor"}, {"sha": "13647033f70fdab4959040e62885fb11dc025c2b", "filename": "gcc/cp/cp-gimplify.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7cfd79d60bdc3884f2fb652ff609ef9783994bd1/gcc%2Fcp%2Fcp-gimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7cfd79d60bdc3884f2fb652ff609ef9783994bd1/gcc%2Fcp%2Fcp-gimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-gimplify.c?ref=7cfd79d60bdc3884f2fb652ff609ef9783994bd1", "patch": "@@ -1107,6 +1107,7 @@ cp_genericize_r (tree *stmt_p, int *walk_subtrees, void *data)\n   if (wtd->handle_invisiref_parm_p && is_invisiref_parm (stmt))\n     {\n       *stmt_p = convert_from_reference (stmt);\n+      p_set->add (*stmt_p);\n       *walk_subtrees = 0;\n       return NULL;\n     }"}, {"sha": "f8a9536886a480c4e592e1d5b9a5d5d7759f478d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7cfd79d60bdc3884f2fb652ff609ef9783994bd1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7cfd79d60bdc3884f2fb652ff609ef9783994bd1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7cfd79d60bdc3884f2fb652ff609ef9783994bd1", "patch": "@@ -1,3 +1,9 @@\n+2017-01-24  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/79205\n+\t* g++.dg/cpp1z/decomp22.C: New test.\n+\t* g++.dg/cpp1z/decomp23.C: New test.\n+\n 2017-01-24  Nathan Sidwell  <nathan@acm.org>\n \n \tPR c++/78469"}, {"sha": "81d40c56931eafffa0104973f4220ede566e14ab", "filename": "gcc/testsuite/g++.dg/cpp1z/decomp22.C", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7cfd79d60bdc3884f2fb652ff609ef9783994bd1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp22.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7cfd79d60bdc3884f2fb652ff609ef9783994bd1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp22.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp22.C?ref=7cfd79d60bdc3884f2fb652ff609ef9783994bd1", "patch": "@@ -0,0 +1,21 @@\n+// PR c++/79205\n+// { dg-do compile { target c++11 } }\n+// { dg-options \"\" }\n+\n+template <unsigned long, typename...> struct B;\n+template <unsigned long I, typename H> struct B<I, H> { int b; };\n+template <typename... E> struct C { B<0, E...> c; C (C &) = default; C (C &&); };\n+template <typename> struct tuple_size;\n+template <> struct tuple_size<C<int>> { static constexpr int value = 1; };\n+template <int, typename> struct tuple_element;\n+template <typename H, typename... T>\n+struct tuple_element<0, C<H, T...>> { typedef int type; };\n+template <int, typename... E>\n+int &&get (C<E...> &&);\n+\n+int\n+foo (C<int> t)\n+{\n+  auto[x0] = t;\t// { dg-warning \"decomposition declaration only available with\" \"\" { target c++14_down } }\n+  return x0;\n+}"}, {"sha": "c682fa0026420e3eed3b3d2ce89c30a1220c673c", "filename": "gcc/testsuite/g++.dg/cpp1z/decomp23.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7cfd79d60bdc3884f2fb652ff609ef9783994bd1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp23.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7cfd79d60bdc3884f2fb652ff609ef9783994bd1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp23.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fdecomp23.C?ref=7cfd79d60bdc3884f2fb652ff609ef9783994bd1", "patch": "@@ -0,0 +1,12 @@\n+// PR c++/79205\n+// { dg-do compile { target c++11 } }\n+// { dg-options \"\" }\n+\n+#include <tuple>\n+\n+int\n+foo (std::tuple<int> t)\n+{\n+  auto [x0] = t;\t// { dg-warning \"decomposition declaration only available with\" \"\" { target c++14_down } }\n+  return x0;\n+}"}]}