{"sha": "013e9958f80bbba91f14dba7f1fa83ac9809ad7d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDEzZTk5NThmODBiYmJhOTFmMTRkYmE3ZjFmYTgzYWM5ODA5YWQ3ZA==", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2017-11-08T15:48:46Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2017-11-08T15:48:46Z"}, "message": "spark_xrefs.ads (SPARK_Xref_Record): Remove inessential components.\n\n2017-11-08  Piotr Trojanek  <trojanek@adacore.com>\n\n\t* spark_xrefs.ads (SPARK_Xref_Record): Remove inessential components.\n\t(SPARK_Scope_Record): Remove inessential components.\n\t* spark_xrefs.adb (dspark): Remove pretty-printing of removed record\n\tcomponents.\n\t* lib-xref-spark_specific.adb (Add_SPARK_Scope): Remove setting of\n\tremoved record components.\n\t(Add_SPARK_Xrefs): Remove setting of removed record components.\n\nFrom-SVN: r254538", "tree": {"sha": "b7d6351d17b56b3ae43f992d8e2a090ff681c10f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b7d6351d17b56b3ae43f992d8e2a090ff681c10f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/013e9958f80bbba91f14dba7f1fa83ac9809ad7d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/013e9958f80bbba91f14dba7f1fa83ac9809ad7d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/013e9958f80bbba91f14dba7f1fa83ac9809ad7d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/013e9958f80bbba91f14dba7f1fa83ac9809ad7d/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "388f3a645405a384eab6a20bad15a3264025c019", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/388f3a645405a384eab6a20bad15a3264025c019", "html_url": "https://github.com/Rust-GCC/gccrs/commit/388f3a645405a384eab6a20bad15a3264025c019"}], "stats": {"total": 119, "additions": 21, "deletions": 98}, "files": [{"sha": "b607ce6df99a6a13c023c559b4a2ff24a2bab1cb", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/013e9958f80bbba91f14dba7f1fa83ac9809ad7d/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/013e9958f80bbba91f14dba7f1fa83ac9809ad7d/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=013e9958f80bbba91f14dba7f1fa83ac9809ad7d", "patch": "@@ -1,3 +1,18 @@\n+2017-11-08  Piotr Trojanek  <trojanek@adacore.com>\n+\n+\t* spark_xrefs.ads (SPARK_Xref_Record): Remove inessential components.\n+\t(SPARK_Scope_Record): Remove inessential components.\n+\t* spark_xrefs.adb (dspark): Remove pretty-printing of removed record\n+\tcomponents.\n+\t* lib-xref-spark_specific.adb (Add_SPARK_Scope): Remove setting of\n+\tremoved record components.\n+\t(Add_SPARK_Xrefs): Remove setting of removed record components.\n+\n+2017-11-08  Piotr Trojanek  <trojanek@adacore.com>\n+\n+\t* lib-xref-spark_specific.adb (Add_SPARK_Xrefs): Remove dead check for\n+\tempty entities.\n+\n 2017-11-08  Javier Miranda  <miranda@adacore.com>\n \n \t* sem_disp.adb (Is_Inherited_Public_Operation): Extend the"}, {"sha": "395071976a0e4e66ac2b942dcc91fa944de4519e", "filename": "gcc/ada/lib-xref-spark_specific.adb", "status": "modified", "additions": 6, "deletions": 51, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/013e9958f80bbba91f14dba7f1fa83ac9809ad7d/gcc%2Fada%2Flib-xref-spark_specific.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/013e9958f80bbba91f14dba7f1fa83ac9809ad7d/gcc%2Fada%2Flib-xref-spark_specific.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-xref-spark_specific.adb?ref=013e9958f80bbba91f14dba7f1fa83ac9809ad7d", "patch": "@@ -120,14 +120,7 @@ package body SPARK_Specific is\n       ---------------------\n \n       procedure Add_SPARK_Scope (N : Node_Id) is\n-         E   : constant Entity_Id  := Defining_Entity (N);\n-         Loc : constant Source_Ptr := Sloc (E);\n-\n-         --  The character describing the kind of scope is chosen to be the\n-         --  same as the one describing the corresponding entity in cross\n-         --  references, see Xref_Entity_Letters in lib-xrefs.ads\n-\n-         Typ : Character;\n+         E : constant Entity_Id := Defining_Entity (N);\n \n       begin\n          --  Ignore scopes without a proper location\n@@ -144,18 +137,15 @@ package body SPARK_Specific is\n                | E_Generic_Package\n                | E_Generic_Procedure\n                | E_Package\n+               | E_Package_Body\n                | E_Procedure\n+               | E_Protected_Body\n                | E_Protected_Type\n+               | E_Task_Body\n                | E_Task_Type\n-            =>\n-               Typ := Xref_Entity_Letters (Ekind (E));\n-\n-            when E_Package_Body\n-               | E_Protected_Body\n                | E_Subprogram_Body\n-               | E_Task_Body\n             =>\n-               Typ := Xref_Entity_Letters (Ekind (Unique_Entity (E)));\n+               null;\n \n             when E_Void =>\n \n@@ -179,9 +169,6 @@ package body SPARK_Specific is\n              Scope_Num      => Scope_Id,\n              Spec_File_Num  => 0,\n              Spec_Scope_Num => 0,\n-             Line           => Nat (Get_Logical_Line_Number (Loc)),\n-             Stype          => Typ,\n-             Col            => Nat (Get_Column_Number (Loc)),\n              From_Xref      => 1,\n              To_Xref        => 0,\n              Scope_Entity   => E));\n@@ -290,9 +277,6 @@ package body SPARK_Specific is\n       function Entity_Of_Scope (S : Scope_Index) return Entity_Id;\n       --  Return the entity which maps to the input scope index\n \n-      function Get_Entity_Type (E : Entity_Id) return Character;\n-      --  Return a character representing the type of entity\n-\n       function Get_Scope_Num (E : Entity_Id) return Nat;\n       --  Return the scope number associated with the entity E\n \n@@ -370,20 +354,6 @@ package body SPARK_Specific is\n          return SPARK_Scope_Table.Table (S).Scope_Entity;\n       end Entity_Of_Scope;\n \n-      ---------------------\n-      -- Get_Entity_Type --\n-      ---------------------\n-\n-      function Get_Entity_Type (E : Entity_Id) return Character is\n-      begin\n-         case Ekind (E) is\n-            when E_Out_Parameter    => return '<';\n-            when E_In_Out_Parameter => return '=';\n-            when E_In_Parameter     => return '>';\n-            when others             => return '*';\n-         end case;\n-      end Get_Entity_Type;\n-\n       -------------------\n       -- Get_Scope_Num --\n       -------------------\n@@ -651,9 +621,7 @@ package body SPARK_Specific is\n \n       --  Local variables\n \n-      Col        : Nat;\n       From_Index : Xref_Index;\n-      Line       : Nat;\n       Prev_Loc   : Source_Ptr;\n       Prev_Typ   : Character;\n       Ref_Count  : Nat;\n@@ -817,14 +785,6 @@ package body SPARK_Specific is\n                pragma Assert (Scope_Id <= SPARK_Scope_Table.Last);\n             end loop;\n \n-            if Ref.Ent = Heap then\n-               Line := 0;\n-               Col  := 0;\n-            else\n-               Line := Nat (Get_Logical_Line_Number (Ref_Entry.Def));\n-               Col  := Nat (Get_Column_Number (Ref_Entry.Def));\n-            end if;\n-\n             --  References to constant objects without variable inputs (see\n             --  SPARK RM 3.3.1) are considered specially in SPARK section,\n             --  because these will be translated as constants in the\n@@ -841,14 +801,9 @@ package body SPARK_Specific is\n \n             SPARK_Xref_Table.Append (\n               (Entity_Name => new String'(Unique_Name (Ref.Ent)),\n-               Entity_Line => Line,\n-               Etype       => Get_Entity_Type (Ref.Ent),\n-               Entity_Col  => Col,\n                File_Num    => Dependency_Num (Ref.Lun),\n                Scope_Num   => Get_Scope_Num (Ref.Ref_Scope),\n-               Line        => Nat (Get_Logical_Line_Number (Ref.Loc)),\n-               Rtype       => Typ,\n-               Col         => Nat (Get_Column_Number (Ref.Loc))));\n+               Rtype       => Typ));\n          end;\n       end loop;\n "}, {"sha": "ebec6c480212f812137fbf113e1aa38528fbc5b0", "filename": "gcc/ada/spark_xrefs.adb", "status": "modified", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/013e9958f80bbba91f14dba7f1fa83ac9809ad7d/gcc%2Fada%2Fspark_xrefs.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/013e9958f80bbba91f14dba7f1fa83ac9809ad7d/gcc%2Fada%2Fspark_xrefs.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fspark_xrefs.adb?ref=013e9958f80bbba91f14dba7f1fa83ac9809ad7d", "patch": "@@ -86,12 +86,6 @@ package body SPARK_Xrefs is\n             end if;\n \n             Write_Char ('\"');\n-            Write_Str  (\"  Line = \");\n-            Write_Int  (Int (ASR.Line));\n-            Write_Str  (\"  Col = \");\n-            Write_Int  (Int (ASR.Col));\n-            Write_Str  (\"  Type = \");\n-            Write_Char (ASR.Stype);\n             Write_Str  (\"  From = \");\n             Write_Int  (Int (ASR.From_Xref));\n             Write_Str  (\"  To = \");\n@@ -122,18 +116,10 @@ package body SPARK_Xrefs is\n             end if;\n \n             Write_Char ('\"');\n-            Write_Str (\"  Entity_Line = \");\n-            Write_Int (Int (AXR.Entity_Line));\n-            Write_Str (\"  Entity_Col = \");\n-            Write_Int (Int (AXR.Entity_Col));\n             Write_Str (\"  File_Num = \");\n             Write_Int (Int (AXR.File_Num));\n             Write_Str (\"  Scope_Num = \");\n             Write_Int (Int (AXR.Scope_Num));\n-            Write_Str (\"  Line = \");\n-            Write_Int (Int (AXR.Line));\n-            Write_Str (\"  Col = \");\n-            Write_Int (Int (AXR.Col));\n             Write_Str (\"  Type = \");\n             Write_Char (AXR.Rtype);\n             Write_Eol;"}, {"sha": "962b7afe8d36e7f8f23241deab73000c83e772a1", "filename": "gcc/ada/spark_xrefs.ads", "status": "modified", "additions": 0, "deletions": 33, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/013e9958f80bbba91f14dba7f1fa83ac9809ad7d/gcc%2Fada%2Fspark_xrefs.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/013e9958f80bbba91f14dba7f1fa83ac9809ad7d/gcc%2Fada%2Fspark_xrefs.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fspark_xrefs.ads?ref=013e9958f80bbba91f14dba7f1fa83ac9809ad7d", "patch": "@@ -69,19 +69,6 @@ package SPARK_Xrefs is\n       Entity_Name : String_Ptr;\n       --  Pointer to entity name in ALI file\n \n-      Entity_Line : Nat;\n-      --  Line number for the entity referenced\n-\n-      Etype : Character;\n-      --  Indicates type of entity, using code used in ALI file:\n-      --    > = IN parameter\n-      --    < = OUT parameter\n-      --    = = IN OUT parameter\n-      --    * = all other cases\n-\n-      Entity_Col : Nat;\n-      --  Column number for the entity referenced\n-\n       File_Num : Nat;\n       --  File dependency number for the cross-reference. Note that if no file\n       --  entry is present explicitly, this is just a copy of the reference for\n@@ -92,18 +79,12 @@ package SPARK_Xrefs is\n       --  present explicitly, this is just a copy of the reference for the\n       --  current cross-reference section.\n \n-      Line : Nat;\n-      --  Line number for the reference\n-\n       Rtype : Character;\n       --  Indicates type of the reference, using code used in ALI file:\n       --    r = reference\n       --    c = reference to constant object\n       --    m = modification\n       --    s = call\n-\n-      Col : Nat;\n-      --  Column number for the reference\n    end record;\n \n    package SPARK_Xref_Table is new Table.Table (\n@@ -145,20 +126,6 @@ package SPARK_Xrefs is\n       --  Set to the scope number for the scope corresponding to the spec of\n       --  the current scope entity, if different, or else 0.\n \n-      Line : Nat;\n-      --  Line number for the scope\n-\n-      Stype : Character;\n-      --  Indicates type of scope, using code used in ALI file:\n-      --    K = package\n-      --    T = task\n-      --    U = procedure\n-      --    V = function\n-      --    Y = entry\n-\n-      Col : Nat;\n-      --  Column number for the scope\n-\n       From_Xref : Xref_Index;\n       --  Starting index in Xref table for this scope\n "}]}