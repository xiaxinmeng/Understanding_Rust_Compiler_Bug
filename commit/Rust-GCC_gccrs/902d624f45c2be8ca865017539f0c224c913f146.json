{"sha": "902d624f45c2be8ca865017539f0c224c913f146", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTAyZDYyNGY0NWMyYmU4Y2E4NjUwMTc1MzlmMGMyMjRjOTEzZjE0Ng==", "commit": {"author": {"name": "Louis Krupp", "email": "louis.krupp@zoho.com", "date": "2016-09-15T23:54:40Z"}, "committer": {"name": "Louis Krupp", "email": "lkrupp@gcc.gnu.org", "date": "2016-09-15T23:54:40Z"}, "message": "re PR fortran/69963 (ICE out of memory on displaced implicit character)\n\n2016-09-15  Louis Krupp  <louis.krupp@zoho.com>\n\tPR fortran/69963\n\t* parse.c (reject_statement): Clear charlen pointers in implicit\n\tcharacter typespecs before those charlen structures are freed.\n\n2016-09-15  Louis Krupp  <louis.krupp@zoho.com>\n\n\tPR fortran/69963\n\t* gfortran.dg/misplaced_implicit_character.f90: New test.\n\nFrom-SVN: r240168", "tree": {"sha": "003f7251ae57f2b83a725e28aadc9336f98c298e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/003f7251ae57f2b83a725e28aadc9336f98c298e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/902d624f45c2be8ca865017539f0c224c913f146", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/902d624f45c2be8ca865017539f0c224c913f146", "html_url": "https://github.com/Rust-GCC/gccrs/commit/902d624f45c2be8ca865017539f0c224c913f146", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/902d624f45c2be8ca865017539f0c224c913f146/comments", "author": null, "committer": null, "parents": [{"sha": "931388ce2da09aefdf573cfd79d41111ccc79eb1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/931388ce2da09aefdf573cfd79d41111ccc79eb1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/931388ce2da09aefdf573cfd79d41111ccc79eb1"}], "stats": {"total": 43, "additions": 43, "deletions": 0}, "files": [{"sha": "ffc859a41283aa04480a6d55f179ec7d55ee7ac9", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/902d624f45c2be8ca865017539f0c224c913f146/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/902d624f45c2be8ca865017539f0c224c913f146/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=902d624f45c2be8ca865017539f0c224c913f146", "patch": "@@ -1,3 +1,8 @@\n+2016-09-15  Louis Krupp  <louis.krupp@zoho.com>\n+\tPR fortran/69963\n+\t* parse.c (reject_statement): Clear charlen pointers in implicit\n+\tcharacter typespecs before those charlen structures are freed.\n+\n 2016-09-14  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n \n \t* simplify.c (gfc_simplify_repeat): Fix a misplaced closing ')'."}, {"sha": "d78a2c07eecfd4a17f959810d426207d174e3b40", "filename": "gcc/fortran/parse.c", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/902d624f45c2be8ca865017539f0c224c913f146/gcc%2Ffortran%2Fparse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/902d624f45c2be8ca865017539f0c224c913f146/gcc%2Ffortran%2Fparse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fparse.c?ref=902d624f45c2be8ca865017539f0c224c913f146", "patch": "@@ -2399,13 +2399,38 @@ accept_statement (gfc_statement st)\n }\n \n \n+/* Clear default character types with charlen pointers that are about\n+   to become invalid.  */\n+\n+static void\n+clear_default_charlen (gfc_namespace *ns, const gfc_charlen *cl,\n+\t\t       const gfc_charlen *end)\n+{\n+  gfc_typespec *ts;\n+\n+  for (ts = &ns->default_type[0]; ts < &ns->default_type[GFC_LETTERS]; ts++)\n+      if (ts->type == BT_CHARACTER)\n+\t{\n+\t  const gfc_charlen *cl2;\n+\t  for (cl2 = cl; cl2 != end; cl2 = cl2->next)\n+\t    if (ts->u.cl == cl2)\n+\t      {\n+\t\tts->u.cl = NULL;\n+\t\tts->type = BT_UNKNOWN;\n+\t\tbreak;\n+\t      }\n+\t }\n+}\n+\n /* Undo anything tentative that has been built for the current\n    statement.  */\n \n static void\n reject_statement (void)\n {\n   /* Revert to the previous charlen chain.  */\n+  clear_default_charlen (gfc_current_ns,\n+\t\t\t gfc_current_ns->cl_list, gfc_current_ns->old_cl_list);\n   gfc_free_charlen (gfc_current_ns->cl_list, gfc_current_ns->old_cl_list);\n   gfc_current_ns->cl_list = gfc_current_ns->old_cl_list;\n "}, {"sha": "3c2087528a9d7b4c2875909b86fbd360a5834ecf", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/902d624f45c2be8ca865017539f0c224c913f146/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/902d624f45c2be8ca865017539f0c224c913f146/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=902d624f45c2be8ca865017539f0c224c913f146", "patch": "@@ -1,3 +1,8 @@\n+2016-09-15  Louis Krupp  <louis.krupp@zoho.com>\n+\n+\tPR fortran/69963\n+\t* gfortran.dg/misplaced_implicit_character.f90: New test.\n+\n 2016-09-15  Bin Cheng  <bin.cheng@arm.com>\n \n \tPR tree-optimization/77503"}, {"sha": "8471d419eb01b93fb259f9917f8ab4de8ab4c40b", "filename": "gcc/testsuite/gfortran.dg/misplaced_implicit_character.f90", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/902d624f45c2be8ca865017539f0c224c913f146/gcc%2Ftestsuite%2Fgfortran.dg%2Fmisplaced_implicit_character.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/902d624f45c2be8ca865017539f0c224c913f146/gcc%2Ftestsuite%2Fgfortran.dg%2Fmisplaced_implicit_character.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fmisplaced_implicit_character.f90?ref=902d624f45c2be8ca865017539f0c224c913f146", "patch": "@@ -0,0 +1,8 @@\n+! { dg-do compile }\n+! PR fortran/69963\n+subroutine s\n+  real x ! { dg-error \"\" }\n+  implicit character (a) ! { dg-error \"IMPLICIT statement at .1. cannot follow data declaration statement at .2.\" }\n+\n+  a1 = 'z' ! { dg-error \"Symbol .a1. at .1. has no IMPLICIT type\" }\n+end subroutine s"}]}