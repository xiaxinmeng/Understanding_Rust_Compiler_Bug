{"sha": "bf5e8d0c6014617b4897e3f8e8ec3b0d3d85b889", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmY1ZThkMGM2MDE0NjE3YjQ4OTdlM2Y4ZThlYzNiMGQzZDg1Yjg4OQ==", "commit": {"author": {"name": "Andreas Jaeger", "email": "aj@suse.de", "date": "2000-03-20T23:42:47Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2000-03-20T23:42:47Z"}, "message": "sdbout.c (sdbout_one_type): Add braces to avoid \"ambigous else\" warning.\n\n        * sdbout.c (sdbout_one_type): Add braces to avoid \"ambigous else\"\n        warning.\n\nFrom-SVN: r32655", "tree": {"sha": "4a7512785fe4c195497287d6f79a3d991b37d072", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4a7512785fe4c195497287d6f79a3d991b37d072"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bf5e8d0c6014617b4897e3f8e8ec3b0d3d85b889", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf5e8d0c6014617b4897e3f8e8ec3b0d3d85b889", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf5e8d0c6014617b4897e3f8e8ec3b0d3d85b889", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf5e8d0c6014617b4897e3f8e8ec3b0d3d85b889/comments", "author": {"login": "ajaeger", "id": 16867, "node_id": "MDQ6VXNlcjE2ODY3", "avatar_url": "https://avatars.githubusercontent.com/u/16867?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ajaeger", "html_url": "https://github.com/ajaeger", "followers_url": "https://api.github.com/users/ajaeger/followers", "following_url": "https://api.github.com/users/ajaeger/following{/other_user}", "gists_url": "https://api.github.com/users/ajaeger/gists{/gist_id}", "starred_url": "https://api.github.com/users/ajaeger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ajaeger/subscriptions", "organizations_url": "https://api.github.com/users/ajaeger/orgs", "repos_url": "https://api.github.com/users/ajaeger/repos", "events_url": "https://api.github.com/users/ajaeger/events{/privacy}", "received_events_url": "https://api.github.com/users/ajaeger/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9e11785b7ca8a566d2caa154530d416bda7da2ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e11785b7ca8a566d2caa154530d416bda7da2ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e11785b7ca8a566d2caa154530d416bda7da2ec"}], "stats": {"total": 26, "additions": 16, "deletions": 10}, "files": [{"sha": "14826fb39f8942265b8e555a228bfac5b349f354", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf5e8d0c6014617b4897e3f8e8ec3b0d3d85b889/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf5e8d0c6014617b4897e3f8e8ec3b0d3d85b889/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bf5e8d0c6014617b4897e3f8e8ec3b0d3d85b889", "patch": "@@ -1,3 +1,8 @@\n+2000-03-20  Andreas Jaeger  <aj@suse.de>\n+\n+\t* sdbout.c (sdbout_one_type): Add braces to avoid \"ambigous else\"\n+\twarning.\n+\n 2000-03-20  Richard Henderson  <rth@cygnus.com>\n \n \t* regmove.c (stack_memref_p): Fix typo, reorg for readability."}, {"sha": "cb677520ec9572e94487bd7f73711f0c44b8ba2d", "filename": "gcc/sdbout.c", "status": "modified", "additions": 11, "deletions": 10, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf5e8d0c6014617b4897e3f8e8ec3b0d3d85b889/gcc%2Fsdbout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf5e8d0c6014617b4897e3f8e8ec3b0d3d85b889/gcc%2Fsdbout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsdbout.c?ref=bf5e8d0c6014617b4897e3f8e8ec3b0d3d85b889", "patch": "@@ -1251,16 +1251,17 @@ sdbout_one_type (type)\n \t/* output the individual fields */\n \n \tif (TREE_CODE (type) == ENUMERAL_TYPE)\n-\t  for (tem = TYPE_FIELDS (type); tem; tem = TREE_CHAIN (tem))\n-\t    if (host_integerp (TREE_VALUE (tem), 0))\n-\t      {\n-\t\tPUT_SDB_DEF (IDENTIFIER_POINTER (TREE_PURPOSE (tem)));\n-\t\tPUT_SDB_INT_VAL (tree_low_cst (TREE_VALUE (tem), 0));\n-\t\tPUT_SDB_SCL (C_MOE);\n-\t\tPUT_SDB_TYPE (T_MOE);\n-\t\tPUT_SDB_ENDEF;\n-\t      }\n-\n+\t  {\n+\t    for (tem = TYPE_FIELDS (type); tem; tem = TREE_CHAIN (tem))\n+\t      if (host_integerp (TREE_VALUE (tem), 0))\n+\t\t{\n+\t\t  PUT_SDB_DEF (IDENTIFIER_POINTER (TREE_PURPOSE (tem)));\n+\t\t  PUT_SDB_INT_VAL (tree_low_cst (TREE_VALUE (tem), 0));\n+\t\t  PUT_SDB_SCL (C_MOE);\n+\t\t  PUT_SDB_TYPE (T_MOE);\n+\t\t  PUT_SDB_ENDEF;\n+\t\t}\n+\t  }\n \telse\t\t\t/* record or union type */\n \t  for (tem = TYPE_FIELDS (type); tem; tem = TREE_CHAIN (tem))\n \t    /* Output the name, type, position (in bits), size (in bits)"}]}