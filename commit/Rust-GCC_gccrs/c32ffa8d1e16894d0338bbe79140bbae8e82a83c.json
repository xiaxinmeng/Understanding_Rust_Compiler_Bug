{"sha": "c32ffa8d1e16894d0338bbe79140bbae8e82a83c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzMyZmZhOGQxZTE2ODk0ZDAzMzhiYmU3OTE0MGJiYWU4ZTgyYTgzYw==", "commit": {"author": {"name": "Mihailo Stojanovic", "email": "mistojanovic@wavecomp.com", "date": "2019-10-16T15:14:17Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2019-10-16T15:14:17Z"}, "message": "mips.c (mips_expand_builtin_insn): Force the operands which correspond to the same input-output register to have...\n\n\t* config/mips/mips.c (mips_expand_builtin_insn): Force the\n\toperands which correspond to the same input-output register to\n\thave the same pseudo assigned to them.\n\n\t* gcc.target/mips/msa-dpadd-dpsub.c: New test.\n\nFrom-SVN: r277071", "tree": {"sha": "5ef8e4786cd90461d131e09c455b5f4fbbfec1a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5ef8e4786cd90461d131e09c455b5f4fbbfec1a4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c32ffa8d1e16894d0338bbe79140bbae8e82a83c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c32ffa8d1e16894d0338bbe79140bbae8e82a83c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c32ffa8d1e16894d0338bbe79140bbae8e82a83c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c32ffa8d1e16894d0338bbe79140bbae8e82a83c/comments", "author": null, "committer": null, "parents": [{"sha": "26e7516aa90b62a80f71c6c64040e448587d0e17", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26e7516aa90b62a80f71c6c64040e448587d0e17", "html_url": "https://github.com/Rust-GCC/gccrs/commit/26e7516aa90b62a80f71c6c64040e448587d0e17"}], "stats": {"total": 58, "additions": 58, "deletions": 0}, "files": [{"sha": "11d3f13a5135e727a5fd4f7609bc87e248b3f3a4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c32ffa8d1e16894d0338bbe79140bbae8e82a83c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c32ffa8d1e16894d0338bbe79140bbae8e82a83c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c32ffa8d1e16894d0338bbe79140bbae8e82a83c", "patch": "@@ -1,3 +1,9 @@\n+2019-10-16  Mihailo Stojanovic  <mistojanovic@wavecomp.com>\n+\n+\t* config/mips/mips.c (mips_expand_builtin_insn): Force the\n+\toperands which correspond to the same input-output register to\n+\thave the same pseudo assigned to them.\n+\n 2019-10-16  Ilya Leoshkevich  <iii@linux.ibm.com>\n \n \t* cfgrtl.c (find_partition_fixes): Remove bbs_in_cold_partition."}, {"sha": "3a77097766887e238b8d3da9f7758300ecfb30ba", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c32ffa8d1e16894d0338bbe79140bbae8e82a83c/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c32ffa8d1e16894d0338bbe79140bbae8e82a83c/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=c32ffa8d1e16894d0338bbe79140bbae8e82a83c", "patch": "@@ -16960,6 +16960,26 @@ mips_expand_builtin_insn (enum insn_code icode, unsigned int nops,\n       std::swap (ops[1], ops[3]);\n       break;\n \n+    case CODE_FOR_msa_dpadd_s_w:\n+    case CODE_FOR_msa_dpadd_s_h:\n+    case CODE_FOR_msa_dpadd_s_d:\n+    case CODE_FOR_msa_dpadd_u_w:\n+    case CODE_FOR_msa_dpadd_u_h:\n+    case CODE_FOR_msa_dpadd_u_d:\n+    case CODE_FOR_msa_dpsub_s_w:\n+    case CODE_FOR_msa_dpsub_s_h:\n+    case CODE_FOR_msa_dpsub_s_d:\n+    case CODE_FOR_msa_dpsub_u_w:\n+    case CODE_FOR_msa_dpsub_u_h:\n+    case CODE_FOR_msa_dpsub_u_d:\n+      /* Force the operands which correspond to the same in-out register\n+\t  to have the same pseudo assigned to them.  If the input operand\n+\t  is not REG, create one for it.  */\n+      if (!REG_P (ops[1].value))\n+\tops[1].value = copy_to_mode_reg (ops[1].mode, ops[1].value);\n+      create_output_operand (&ops[0], ops[1].value, ops[1].mode);\n+      break;\n+\n     default:\n       break;\n   }"}, {"sha": "2641821dad8e474fd0f738df67cc48419bcb672f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c32ffa8d1e16894d0338bbe79140bbae8e82a83c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c32ffa8d1e16894d0338bbe79140bbae8e82a83c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c32ffa8d1e16894d0338bbe79140bbae8e82a83c", "patch": "@@ -1,3 +1,7 @@\n+2019-10-16  Mihailo Stojanovic  <mistojanovic@wavecomp.com>\n+\n+\t* gcc.target/mips/msa-dpadd-dpsub.c: New test.\n+\n 2019-10-16  Wilco Dijkstra  <wdijkstr@arm.com>\n \n \t* gcc.target/aarch64/symbol-range.c: Improve testcase."}, {"sha": "c665bdfa0c5a43e95610173ccf03389f663069c0", "filename": "gcc/testsuite/gcc.target/mips/msa-dpadd-dpsub.c", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c32ffa8d1e16894d0338bbe79140bbae8e82a83c/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmsa-dpadd-dpsub.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c32ffa8d1e16894d0338bbe79140bbae8e82a83c/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmsa-dpadd-dpsub.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fmips%2Fmsa-dpadd-dpsub.c?ref=c32ffa8d1e16894d0338bbe79140bbae8e82a83c", "patch": "@@ -0,0 +1,28 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-mfp64 -mhard-float -mmsa\" } */\n+/* { dg-skip-if \"code quality test\" { *-*-* } { \"-O0\" } { \"\" } } */\n+\n+typedef short v8i16 __attribute__ ((vector_size (16)));\n+typedef int v4i32 __attribute__ ((vector_size (16)));\n+\n+void foo (int *x, v8i16 *y, v8i16 *z)\n+{\n+\tv4i32 acc[4];\n+\n+    acc[0] = __builtin_msa_ld_w(x, 0);\n+    acc[1] = __builtin_msa_ld_w(x, 16);\n+    acc[2] = __builtin_msa_ld_w(x, 32);\n+    acc[3] = __builtin_msa_ld_w(x, 48);\n+\t\t\n+    acc[0] = __builtin_msa_dpadd_s_w(acc[0], y[0], z[0]);\n+    acc[1] = __builtin_msa_dpadd_s_w(acc[1], y[1], z[0]);\n+    acc[2] = __builtin_msa_dpsub_s_w(acc[2], y[0], z[1]);\n+    acc[3] = __builtin_msa_dpsub_s_w(acc[3], y[1], z[1]);\n+\n+    __builtin_msa_st_w(acc[0], x, 0);\n+    __builtin_msa_st_w(acc[1], x, 16);\n+    __builtin_msa_st_w(acc[2], x, 32);\n+    __builtin_msa_st_w(acc[3], x, 48);\n+}\n+\n+/* { dg-final { scan-assembler-not \"move.v\" } } */"}]}