{"sha": "f03851e1a6dac72127e97629e259ad01a2b1e7b6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjAzODUxZTFhNmRhYzcyMTI3ZTk3NjI5ZTI1OWFkMDFhMmIxZTdiNg==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@linux.ibm.com", "date": "2020-10-30T22:36:25Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@linux.ibm.com", "date": "2020-10-30T22:36:25Z"}, "message": "PowerPC: Don't assume all targets have GLIBC.\n\ngcc/\n2020-10-30  Michael Meissner  <meissner@linux.ibm.com>\n\n\t* config/rs6000/rs6000.c (glibc_supports_ieee_128bit): New helper\n\tfunction.\n\t(rs6000_option_override_internal): Call it.", "tree": {"sha": "a80cb265b29e1aa0e3fac8829443601ac1be6b7f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a80cb265b29e1aa0e3fac8829443601ac1be6b7f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f03851e1a6dac72127e97629e259ad01a2b1e7b6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f03851e1a6dac72127e97629e259ad01a2b1e7b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f03851e1a6dac72127e97629e259ad01a2b1e7b6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f03851e1a6dac72127e97629e259ad01a2b1e7b6/comments", "author": null, "committer": null, "parents": [{"sha": "a1343e5c74093124d7fbce6052d838f47a8eeb20", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1343e5c74093124d7fbce6052d838f47a8eeb20", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a1343e5c74093124d7fbce6052d838f47a8eeb20"}], "stats": {"total": 19, "additions": 16, "deletions": 3}, "files": [{"sha": "1e506b83762f8c0263a5ed2dff2b08af9298df36", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 16, "deletions": 3, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f03851e1a6dac72127e97629e259ad01a2b1e7b6/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f03851e1a6dac72127e97629e259ad01a2b1e7b6/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=f03851e1a6dac72127e97629e259ad01a2b1e7b6", "patch": "@@ -3539,6 +3539,20 @@ rs6000_linux64_override_options ()\n }\n #endif\n \n+/* Return true if we are using GLIBC, and it supports IEEE 128-bit long double.\n+   This support is only in little endian GLIBC 2.32 or newer.  */\n+static bool\n+glibc_supports_ieee_128bit (void)\n+{\n+#ifdef OPTION_GLIBC\n+  if (OPTION_GLIBC && !BYTES_BIG_ENDIAN\n+      && ((TARGET_GLIBC_MAJOR * 1000) + TARGET_GLIBC_MINOR) >= 2032)\n+    return true;\n+#endif /* OPTION_GLIBC.  */\n+\n+  return false;\n+}\n+\n /* Override command line options.\n \n    Combine build-specific configuration information with options\n@@ -4164,9 +4178,8 @@ rs6000_option_override_internal (bool global_init_p)\n \t  static bool warned_change_long_double;\n \n \t  if (!warned_change_long_double\n-\t      && (!OPTION_GLIBC\n-\t\t  || (!lang_GNU_C () && !lang_GNU_CXX ())\n-\t\t  || ((TARGET_GLIBC_MAJOR * 1000) + TARGET_GLIBC_MINOR) < 2032))\n+\t      && (!glibc_supports_ieee_128bit ()\n+\t\t  || (!lang_GNU_C () && !lang_GNU_CXX ())))\n \t    {\n \t      warned_change_long_double = true;\n \t      if (TARGET_IEEEQUAD)"}]}