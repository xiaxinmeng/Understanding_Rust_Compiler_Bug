{"sha": "8e854b762f7f6b72891784c1b4a40665ebbcde75", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGU4NTRiNzYyZjdmNmI3Mjg5MTc4NGMxYjRhNDA2NjVlYmJjZGU3NQ==", "commit": {"author": {"name": "Kriang Lerdsuwanakij", "email": "lerdsuwa@users.sourceforge.net", "date": "2003-04-29T14:16:48Z"}, "committer": {"name": "Kriang Lerdsuwanakij", "email": "lerdsuwa@gcc.gnu.org", "date": "2003-04-29T14:16:48Z"}, "message": "c-pragma.c (maybe_apply_renaming_pragma): Fix typo.\n\n\t* c-pragma.c (maybe_apply_renaming_pragma): Fix typo.\n\t* gcc.c (display_help): Likewise.\n\t* toplev.c (f_options): Likewise.\n\t* params.def (PARAM_MAX_INLINE_SCOPE): Likewise.\n\t* config/c4x/c4x.h (TARGET_SWITCHES): Likewise.\n\t* config/mcore/mcore.h (TARGET_SWITCHES): Likewise.\n\t* config/s390/s390.h (TARGET_SWITCHES): Likewise.\n\t* config/v850/v850.h (TARGET_SWITCHES): Likewise.\n\n\t* call.c (build_operator_new_call): Fix typo.\n\t* lang-options.h: Likewise.\n\nFrom-SVN: r66228", "tree": {"sha": "4b529fc22b154cd30c59c6a41a28e5b12cd504b4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4b529fc22b154cd30c59c6a41a28e5b12cd504b4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8e854b762f7f6b72891784c1b4a40665ebbcde75", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e854b762f7f6b72891784c1b4a40665ebbcde75", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e854b762f7f6b72891784c1b4a40665ebbcde75", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e854b762f7f6b72891784c1b4a40665ebbcde75/comments", "author": null, "committer": null, "parents": [{"sha": "fbf17dab002ad0bf6b4d7164d09d103701533dcf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fbf17dab002ad0bf6b4d7164d09d103701533dcf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fbf17dab002ad0bf6b4d7164d09d103701533dcf"}], "stats": {"total": 44, "additions": 30, "deletions": 14}, "files": [{"sha": "2bd830bba185c7a0219120210d89d43be9897fef", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e854b762f7f6b72891784c1b4a40665ebbcde75/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e854b762f7f6b72891784c1b4a40665ebbcde75/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8e854b762f7f6b72891784c1b4a40665ebbcde75", "patch": "@@ -1,3 +1,14 @@\n+2003-04-29  Kriang Lerdsuwanakij  <lerdsuwa@users.sourceforge.net>\n+\n+\t* c-pragma.c (maybe_apply_renaming_pragma): Fix typo.\n+\t* gcc.c (display_help): Likewise.\n+\t* toplev.c (f_options): Likewise.\n+\t* params.def (PARAM_MAX_INLINE_SCOPE): Likewise.\n+\t* config/c4x/c4x.h (TARGET_SWITCHES): Likewise.\n+\t* config/mcore/mcore.h (TARGET_SWITCHES): Likewise.\n+\t* config/s390/s390.h (TARGET_SWITCHES): Likewise.\n+\t* config/v850/v850.h (TARGET_SWITCHES): Likewise.\n+\n 2003-04-29  J\"orn Rennecke <joern.rennecke@superh.com>\n \n \t* varasm.c (default_assemble_visibility): Use assemble_name."}, {"sha": "7f026d10b69935b2913ea8b4a8177165b747d0ff", "filename": "gcc/c-pragma.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e854b762f7f6b72891784c1b4a40665ebbcde75/gcc%2Fc-pragma.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e854b762f7f6b72891784c1b4a40665ebbcde75/gcc%2Fc-pragma.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-pragma.c?ref=8e854b762f7f6b72891784c1b4a40665ebbcde75", "patch": "@@ -449,7 +449,7 @@ maybe_apply_renaming_pragma (decl, asmname)\n     {\n       const char *oldasmname = IDENTIFIER_POINTER (oldname) + 1;\n       if (asmname && strcmp (TREE_STRING_POINTER (asmname), oldasmname) != 0)\n-\twarning (\"asm declaration conficts with previous rename\");\n+\twarning (\"asm declaration conflicts with previous rename\");\n       asmname = build_string (strlen (oldasmname), oldasmname);\n     }\n "}, {"sha": "8a703fac93cd168619c4fa9a6c8e1caf5468915f", "filename": "gcc/config/c4x/c4x.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e854b762f7f6b72891784c1b4a40665ebbcde75/gcc%2Fconfig%2Fc4x%2Fc4x.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e854b762f7f6b72891784c1b4a40665ebbcde75/gcc%2Fconfig%2Fc4x%2Fc4x.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fc4x%2Fc4x.h?ref=8e854b762f7f6b72891784c1b4a40665ebbcde75", "patch": "@@ -237,7 +237,7 @@\n   { \"no-force\", -FORCE_FLAG,\t\t\t\t\t\t\\\n     N_(\"Allow RTL generation to emit invalid 3 operand insns\") },\t\\\n   { \"loop-unsigned\", LOOP_UNSIGNED_FLAG,\t\t\t\t\\\n-    N_(\"Allow unsigned interation counts for RPTB/DB\") },\t\t\\\n+    N_(\"Allow unsigned iteration counts for RPTB/DB\") },\t\t\\\n   { \"no-loop-unsigned\", -LOOP_UNSIGNED_FLAG,\t\t\t\t\\\n     N_(\"Disallow unsigned iteration counts for RPTB/DB\") },\t\t\\\n   { \"preserve-float\", PRESERVE_FLOAT_FLAG,\t\t\t\t\\"}, {"sha": "fa8707e69b4dc2f0184121f624233f1a9579e6a0", "filename": "gcc/config/mcore/mcore.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e854b762f7f6b72891784c1b4a40665ebbcde75/gcc%2Fconfig%2Fmcore%2Fmcore.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e854b762f7f6b72891784c1b4a40665ebbcde75/gcc%2Fconfig%2Fmcore%2Fmcore.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmcore%2Fmcore.h?ref=8e854b762f7f6b72891784c1b4a40665ebbcde75", "patch": "@@ -138,7 +138,7 @@ extern int target_flags;\n   {\"relax-immediates\",      RELAX_IMM_BIT,\t\t\t\t\\\n      \"\" },\t\t\t\t\t\t\t\t\\\n   {\"no-relax-immediates\", - RELAX_IMM_BIT,\t\t\t\t\\\n-     N_(\"Do not arbitary sized immediates in bit operations\") },\t\\\n+     N_(\"Do not arbitrary sized immediates in bit operations\") },\t\\\n   {\"wide-bitfields\",        W_FIELD_BIT,\t\t\t\t\\\n      N_(\"Always treat bit-field as int-sized\") },\t\t\t\\\n   {\"no-wide-bitfields\",   - W_FIELD_BIT,\t\t\t\t\\"}, {"sha": "5bd0ab4405d656dd530ed443e9c9141d8ba2db67", "filename": "gcc/config/s390/s390.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e854b762f7f6b72891784c1b4a40665ebbcde75/gcc%2Fconfig%2Fs390%2Fs390.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e854b762f7f6b72891784c1b4a40665ebbcde75/gcc%2Fconfig%2Fs390%2Fs390.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.h?ref=8e854b762f7f6b72891784c1b4a40665ebbcde75", "patch": "@@ -100,7 +100,7 @@ extern int target_flags;\n   { \"soft-float\",   -1, N_(\"Don't use hardware fp\")},                  \\\n   { \"backchain\",     2, N_(\"Set backchain\")},                          \\\n   { \"no-backchain\", -2, N_(\"Don't set backchain (faster, but debug harder\")}, \\\n-  { \"small-exec\",    4, N_(\"Use bras for execucable < 64k\")},          \\\n+  { \"small-exec\",    4, N_(\"Use bras for executable < 64k\")},          \\\n   { \"no-small-exec\",-4, N_(\"Don't use bras\")},                         \\\n   { \"debug\",         8, N_(\"Additional debug prints\")},                \\\n   { \"no-debug\",     -8, N_(\"Don't print additional debug prints\")},    \\"}, {"sha": "5a6431dfd4f9337b760a8f2b2ce502d16ec9f5f6", "filename": "gcc/config/v850/v850.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e854b762f7f6b72891784c1b4a40665ebbcde75/gcc%2Fconfig%2Fv850%2Fv850.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e854b762f7f6b72891784c1b4a40665ebbcde75/gcc%2Fconfig%2Fv850%2Fv850.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fv850%2Fv850.h?ref=8e854b762f7f6b72891784c1b4a40665ebbcde75", "patch": "@@ -191,7 +191,7 @@ extern int target_flags;\n    { \"no-app-regs\",              MASK_NO_APP_REGS, \t\t\t\\\n        \t\t\t\tN_(\"Do not use registers r2 and r5\") }, \\\n    { \"strict-align\",             MASK_STRICT_ALIGN,\t\t\t\\\n-\t\t\t\tN_(\"Enfore strict alignment\") },        \\\n+\t\t\t\tN_(\"Enforce strict alignment\") },       \\\n    { \"no-strict-align\",         -MASK_STRICT_ALIGN, \"\" },\t\t\\\n    { \"big-switch\",\t\t MASK_BIG_SWITCH, \t\t\t\\\n        \t\t\t\tN_(\"Use 4 byte entries in switch tables\") },\\"}, {"sha": "97bcb2357783de66e79ddc985b51b7d993b7605c", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e854b762f7f6b72891784c1b4a40665ebbcde75/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e854b762f7f6b72891784c1b4a40665ebbcde75/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=8e854b762f7f6b72891784c1b4a40665ebbcde75", "patch": "@@ -1,3 +1,8 @@\n+2003-04-29  Kriang Lerdsuwanakij  <lerdsuwa@users.sourceforge.net>\n+\n+\t* call.c (build_operator_new_call): Fix typo.\n+\t* lang-options.h: Likewise.\n+\n 2003-04-29  Mark Mitchell  <mark@codesourcery.com>\n \n \t* decl.c (maybe_commonize_var): Further tweak support for systems"}, {"sha": "2340d41f6a056bca493caef42e02630a1a1448db", "filename": "gcc/cp/call.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e854b762f7f6b72891784c1b4a40665ebbcde75/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e854b762f7f6b72891784c1b4a40665ebbcde75/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=8e854b762f7f6b72891784c1b4a40665ebbcde75", "patch": "@@ -2959,7 +2959,7 @@ build_operator_new_call (tree fnname, tree args, tree *size, tree *cookie_size)\n \terror (\"no matching function for call to `%D(%A)'\",\n \t       DECL_NAME (OVL_CURRENT (fns)), args);\n       else\n-\terror (\"call of overlopaded `%D(%A)' is ambiguous\",\n+\terror (\"call of overloaded `%D(%A)' is ambiguous\",\n \t       DECL_NAME (OVL_CURRENT (fns)), args);\n       if (candidates)\n \tprint_z_candidates (candidates);"}, {"sha": "ede5a58f95aa7560a138ea5cdfa98ca7c2f83b7f", "filename": "gcc/cp/lang-options.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e854b762f7f6b72891784c1b4a40665ebbcde75/gcc%2Fcp%2Flang-options.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e854b762f7f6b72891784c1b4a40665ebbcde75/gcc%2Fcp%2Flang-options.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Flang-options.h?ref=8e854b762f7f6b72891784c1b4a40665ebbcde75", "patch": "@@ -72,10 +72,10 @@ DEFINE_LANG_NAME (\"C++\")\n     N_(\"Export functions even if they can be inlined\") },\n   { \"-fimplicit-templates\", \"\" },\n   { \"-fno-implicit-templates\", \n-    N_(\"Only emit explicit template instatiations\") },\n+    N_(\"Only emit explicit template instantiations\") },\n   { \"-fimplicit-inline-templates\", \"\" },\n   { \"-fno-implicit-inline-templates\", \n-    N_(\"Only emit explicit instatiations of inline templates\") },\n+    N_(\"Only emit explicit instantiations of inline templates\") },\n   { \"-finit-priority\", \"\" },\n   { \"-fno-init-priority\", \"\" },\n   { \"-fmemoize-lookups\", \"\" },"}, {"sha": "8bfc08463201d2b56208e7a39e94a961faf6cce1", "filename": "gcc/gcc.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e854b762f7f6b72891784c1b4a40665ebbcde75/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e854b762f7f6b72891784c1b4a40665ebbcde75/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=8e854b762f7f6b72891784c1b4a40665ebbcde75", "patch": "@@ -3022,7 +3022,7 @@ display_help ()\n   fputs (_(\"  -o <file>                Place the output into <file>\\n\"), stdout);\n   fputs (_(\"\\\n   -x <language>            Specify the language of the following input files\\n\\\n-                           Permissable languages include: c c++ assembler none\\n\\\n+                           Permissible languages include: c c++ assembler none\\n\\\n                            'none' means revert to the default behavior of\\n\\\n                            guessing the language based on the file's extension\\n\\\n \"), stdout);"}, {"sha": "cd68c03929f24eddd8ea4eb4baf6e53668e02f1e", "filename": "gcc/params.def", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e854b762f7f6b72891784c1b4a40665ebbcde75/gcc%2Fparams.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e854b762f7f6b72891784c1b4a40665ebbcde75/gcc%2Fparams.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fparams.def?ref=8e854b762f7f6b72891784c1b4a40665ebbcde75", "patch": "@@ -94,7 +94,7 @@ DEFPARAM (PARAM_MAX_INLINE_INSNS,\n    value specified by the \"min-inline-insns\" parameter.  */\n DEFPARAM (PARAM_MAX_INLINE_SLOPE,\n \t  \"max-inline-slope\",\n-\t  \"The slope of the linear funtion throttling inlining after the recursive inlining limit has been reached is given by the negative reciprocal value of this parameter\",\n+\t  \"The slope of the linear function throttling inlining after the recursive inlining limit has been reached is given by the negative reciprocal value of this parameter\",\n \t  32)\n \n /* When gcc has inlined so many instructions (by repeated"}, {"sha": "e48eff36a072d958ae96a4a2fca2862a231d0945", "filename": "gcc/toplev.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e854b762f7f6b72891784c1b4a40665ebbcde75/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e854b762f7f6b72891784c1b4a40665ebbcde75/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=8e854b762f7f6b72891784c1b4a40665ebbcde75", "patch": "@@ -1116,9 +1116,9 @@ static const lang_independent_options f_options[] =\n   {\"sched-spec-load-dangerous\",&flag_schedule_speculative_load_dangerous, 1,\n    N_(\"Allow speculative motion of more loads\") },\n   {\"sched2-use-superblocks\", &flag_sched2_use_superblocks, 1,\n-   N_(\"If scheduling post reload, do superblock sheduling\") },\n+   N_(\"If scheduling post reload, do superblock scheduling\") },\n   {\"sched2-use-traces\", &flag_sched2_use_traces, 1,\n-   N_(\"If scheduling post reload, do trace sheduling\") },\n+   N_(\"If scheduling post reload, do trace scheduling\") },\n   {\"branch-count-reg\",&flag_branch_on_count_reg, 1,\n    N_(\"Replace add,compare,branch with branch on count reg\") },\n   {\"pic\", &flag_pic, 1,\n@@ -1159,7 +1159,7 @@ static const lang_independent_options f_options[] =\n   {\"data-sections\", &flag_data_sections, 1,\n    N_(\"place data items into their own section\") },\n   {\"verbose-asm\", &flag_verbose_asm, 1,\n-   N_(\"Add extra commentry to assembler output\") },\n+   N_(\"Add extra commentary to assembler output\") },\n   {\"gnu-linker\", &flag_gnu_linker, 1,\n    N_(\"Output GNU ld formatted global initializers\") },\n   {\"regmove\", &flag_regmove, 1,\n@@ -1187,7 +1187,7 @@ static const lang_independent_options f_options[] =\n   {\"align-functions\", &align_functions, 0,\n    N_(\"Align the start of functions\") },\n   {\"merge-constants\", &flag_merge_constants, 1,\n-   N_(\"Attempt to merge identical constants accross compilation units\") },\n+   N_(\"Attempt to merge identical constants across compilation units\") },\n   {\"merge-all-constants\", &flag_merge_constants, 2,\n    N_(\"Attempt to merge identical constants and constant variables\") },\n   {\"dump-unnumbered\", &flag_dump_unnumbered, 1,"}]}