{"sha": "0f829a98d90105b8a117fac4869dfa0b2578cd6d", "node_id": "C_kwDOANBUbNoAKDBmODI5YTk4ZDkwMTA1YjhhMTE3ZmFjNDg2OWRmYTBiMjU3OGNkNmQ", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2022-09-05T12:59:30Z"}, "committer": {"name": "Marc Poulhi\u00e8s", "email": "poulhies@adacore.com", "date": "2022-09-12T08:16:52Z"}, "message": "[Ada] Cleanup routine for handling SPARK_Mode kinds\n\nCode cleanup; semantics is unaffected.\n\ngcc/ada/\n\n\t* sem_prag.adb (Get_SPARK_Mode_Type): Fix header box; replace\n\tchained IF with a CASE statement.", "tree": {"sha": "d3ff9b5976b945c58f9a4b3d96435b3bd4fa5bd5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d3ff9b5976b945c58f9a4b3d96435b3bd4fa5bd5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0f829a98d90105b8a117fac4869dfa0b2578cd6d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f829a98d90105b8a117fac4869dfa0b2578cd6d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f829a98d90105b8a117fac4869dfa0b2578cd6d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f829a98d90105b8a117fac4869dfa0b2578cd6d/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dkm", "id": 87603, "node_id": "MDQ6VXNlcjg3NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/87603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dkm", "html_url": "https://github.com/dkm", "followers_url": "https://api.github.com/users/dkm/followers", "following_url": "https://api.github.com/users/dkm/following{/other_user}", "gists_url": "https://api.github.com/users/dkm/gists{/gist_id}", "starred_url": "https://api.github.com/users/dkm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dkm/subscriptions", "organizations_url": "https://api.github.com/users/dkm/orgs", "repos_url": "https://api.github.com/users/dkm/repos", "events_url": "https://api.github.com/users/dkm/events{/privacy}", "received_events_url": "https://api.github.com/users/dkm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4caf4b5ef315a8e902471fe8797e504967f66a6b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4caf4b5ef315a8e902471fe8797e504967f66a6b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4caf4b5ef315a8e902471fe8797e504967f66a6b"}], "stats": {"total": 27, "additions": 14, "deletions": 13}, "files": [{"sha": "77ff68e23cb5cc47108084fba013360e891e32c8", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 14, "deletions": 13, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f829a98d90105b8a117fac4869dfa0b2578cd6d/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f829a98d90105b8a117fac4869dfa0b2578cd6d/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=0f829a98d90105b8a117fac4869dfa0b2578cd6d", "patch": "@@ -31172,25 +31172,26 @@ package body Sem_Prag is\n       end if;\n    end Get_Base_Subprogram;\n \n-   -----------------------\n+   -------------------------\n    -- Get_SPARK_Mode_Type --\n-   -----------------------\n+   -------------------------\n \n    function Get_SPARK_Mode_Type (N : Name_Id) return SPARK_Mode_Type is\n    begin\n-      if N = Name_Auto then\n-         return None;\n-      elsif N = Name_On then\n-         return On;\n-      elsif N = Name_Off then\n-         return Off;\n+      case N is\n+         when Name_Auto =>\n+            return None;\n+         when Name_On =>\n+            return On;\n+         when Name_Off =>\n+            return Off;\n \n-      --  Any other argument is illegal. Assume that no SPARK mode applies to\n-      --  avoid potential cascaded errors.\n+         --  Any other argument is illegal. Assume that no SPARK mode applies\n+         --  to avoid potential cascaded errors.\n \n-      else\n-         return None;\n-      end if;\n+         when others =>\n+            return None;\n+      end case;\n    end Get_SPARK_Mode_Type;\n \n    ------------------------------------"}]}