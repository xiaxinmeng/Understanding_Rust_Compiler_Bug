{"sha": "62c986afde031d141961d2619a860def836c8e9b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjJjOTg2YWZkZTAzMWQxNDE5NjFkMjYxOWE4NjBkZWY4MzZjOGU5Yg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2014-08-04T15:46:33Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2014-08-04T15:46:33Z"}, "message": "* runtime/memory.c (xmallocarray): Avoid division for the common case.\n\nFrom-SVN: r213593", "tree": {"sha": "5286463521855c483f9a00398080e73af7eda4fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5286463521855c483f9a00398080e73af7eda4fc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/62c986afde031d141961d2619a860def836c8e9b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62c986afde031d141961d2619a860def836c8e9b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62c986afde031d141961d2619a860def836c8e9b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62c986afde031d141961d2619a860def836c8e9b/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3696163cb43bdd7c3a22bef46a0e3f4576d0fc44", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3696163cb43bdd7c3a22bef46a0e3f4576d0fc44", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3696163cb43bdd7c3a22bef46a0e3f4576d0fc44"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "77afd166d075aadd615032e6515e47238312990b", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62c986afde031d141961d2619a860def836c8e9b/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62c986afde031d141961d2619a860def836c8e9b/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=62c986afde031d141961d2619a860def836c8e9b", "patch": "@@ -1,3 +1,7 @@\n+2014-08-04  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* runtime/memory.c (xmallocarray): Avoid division for the common case.\n+\n 2014-07-20  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR libgfortran/61632"}, {"sha": "16f06065e2b5f397f1f30ce3b8492dbb528721a3", "filename": "libgfortran/runtime/memory.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62c986afde031d141961d2619a860def836c8e9b/libgfortran%2Fruntime%2Fmemory.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62c986afde031d141961d2619a860def836c8e9b/libgfortran%2Fruntime%2Fmemory.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fruntime%2Fmemory.c?ref=62c986afde031d141961d2619a860def836c8e9b", "patch": "@@ -56,7 +56,9 @@ xmallocarray (size_t nmemb, size_t size)\n \n   if (!nmemb || !size)\n     size = nmemb = 1;\n-  else if (nmemb > SIZE_MAX / size)\n+#define HALF_SIZE_T (((size_t) 1) << (__CHAR_BIT__ * sizeof (size_t) / 2))\n+  else if (__builtin_expect ((nmemb | size) >= HALF_SIZE_T, 0)\n+\t   && nmemb > SIZE_MAX / size)\n     {\n       errno = ENOMEM;\n       os_error (\"Integer overflow in xmallocarray\");"}]}