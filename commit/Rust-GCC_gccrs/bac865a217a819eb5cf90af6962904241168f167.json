{"sha": "bac865a217a819eb5cf90af6962904241168f167", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmFjODY1YTIxN2E4MTllYjVjZjkwYWY2OTYyOTA0MjQxMTY4ZjE2Nw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-04-25T12:01:32Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-04-25T12:01:32Z"}, "message": "Code clenups.\n\nFrom-SVN: r247193", "tree": {"sha": "749056594c0f63c918c4588fddb18fca5ccd6e3b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/749056594c0f63c918c4588fddb18fca5ccd6e3b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bac865a217a819eb5cf90af6962904241168f167", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bac865a217a819eb5cf90af6962904241168f167", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bac865a217a819eb5cf90af6962904241168f167", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bac865a217a819eb5cf90af6962904241168f167/comments", "author": null, "committer": null, "parents": [{"sha": "321c24f75dde674402481f1df0025c8169aa9cdd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/321c24f75dde674402481f1df0025c8169aa9cdd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/321c24f75dde674402481f1df0025c8169aa9cdd"}], "stats": {"total": 32, "additions": 21, "deletions": 11}, "files": [{"sha": "fff65d2cb208f632b1b9743e3f80b86069bda4a4", "filename": "gcc/ada/bindgen.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bac865a217a819eb5cf90af6962904241168f167/gcc%2Fada%2Fbindgen.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bac865a217a819eb5cf90af6962904241168f167/gcc%2Fada%2Fbindgen.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindgen.adb?ref=bac865a217a819eb5cf90af6962904241168f167", "patch": "@@ -2717,7 +2717,7 @@ package body Bindgen is\n       --  every file, then we could use the encoding of the initial specified\n       --  file, but this information is passed only for potential main\n       --  programs. We could fix this sometime, but it is a very minor point\n-      --  (wide character default encoding for [Wide_[Wide_]Text_IO when there\n+      --  (wide character default encoding for [Wide_[Wide_]]Text_IO when there\n       --  is no main program).\n \n       elsif No_Main_Subprogram then"}, {"sha": "c6276021bfc678ff2e0687dbec2d7fc2f79973cc", "filename": "gcc/ada/gnatchop.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bac865a217a819eb5cf90af6962904241168f167/gcc%2Fada%2Fgnatchop.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bac865a217a819eb5cf90af6962904241168f167/gcc%2Fada%2Fgnatchop.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatchop.adb?ref=bac865a217a819eb5cf90af6962904241168f167", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1998-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1998-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1424,7 +1424,7 @@ procedure Gnatchop is\n \n       --  Test for presence of BOM\n \n-      Read_BOM (Buffer.all, BOM_Length, BOM, False);\n+      Read_BOM (Buffer.all, BOM_Length, BOM, XML_Support => False);\n       BOM_Present := BOM /= Unknown;\n \n       --  Only chop those units that come from this file"}, {"sha": "1b131c411abcd8bfbec557327c22462700cda504", "filename": "gcc/ada/s-dimmks.ads", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bac865a217a819eb5cf90af6962904241168f167/gcc%2Fada%2Fs-dimmks.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bac865a217a819eb5cf90af6962904241168f167/gcc%2Fada%2Fs-dimmks.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-dimmks.ads?ref=bac865a217a819eb5cf90af6962904241168f167", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  S p e c                                 --\n --                                                                          --\n---          Copyright (C) 2011-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2011-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -186,6 +186,11 @@ package System.Dim.Mks is\n         Ampere   => -1,\n         others   =>  0);\n \n+   --  Note the type punning below. The Symbol is a single \"ohm\" character\n+   --  encoded in UTF-8 (ce a9 in hexadecimal), but this file is not compiled\n+   --  with -gnatW8, so we're treating the string literal as a two-character\n+   --  String.\n+\n    subtype Electric_Resistance is Mks_Type\n      with\n       Dimension => (Symbol => \"\u03a9\","}, {"sha": "07ccc5cb3481733a7d30eb66f04baf0e07b4ddff", "filename": "gcc/ada/s-wchcnv.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bac865a217a819eb5cf90af6962904241168f167/gcc%2Fada%2Fs-wchcnv.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bac865a217a819eb5cf90af6962904241168f167/gcc%2Fada%2Fs-wchcnv.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-wchcnv.adb?ref=bac865a217a819eb5cf90af6962904241168f167", "patch": "@@ -406,7 +406,7 @@ package body System.WCh_Cnv is\n          when WCEM_Brackets =>\n \n             --  Values in the range 0-255 are directly output. Note that there\n-            --  is some issue with [ (16#5B#] since this will cause confusion\n+            --  is an issue with [ (16#5B#) since this will cause confusion\n             --  if the resulting string is interpreted using brackets encoding.\n \n             --  One possibility would be to always output [ as [\"5B\"] but in"}, {"sha": "4d0cbddec37294f4a27f5010180d72f3c6d6b1a8", "filename": "gcc/ada/sinput.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bac865a217a819eb5cf90af6962904241168f167/gcc%2Fada%2Fsinput.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bac865a217a819eb5cf90af6962904241168f167/gcc%2Fada%2Fsinput.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinput.adb?ref=bac865a217a819eb5cf90af6962904241168f167", "patch": "@@ -272,11 +272,13 @@ package body Sinput is\n          Tst (J) := C;\n       end loop;\n \n-      Read_BOM (Tst, Len, BOM, False);\n+      Read_BOM (Tst, Len, BOM, XML_Support => False);\n \n       case BOM is\n          when UTF8_All =>\n             Scan_Ptr := Scan_Ptr + Source_Ptr (Len);\n+            First_Non_Blank_Location := Scan_Ptr;\n+            Current_Line_Start := Scan_Ptr;\n             Wide_Character_Encoding_Method := WCEM_UTF8;\n             Upper_Half_Encoding := True;\n "}, {"sha": "ef7f3885cc2f08afc17620a7220183006e163f3c", "filename": "gcc/ada/sinput.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bac865a217a819eb5cf90af6962904241168f167/gcc%2Fada%2Fsinput.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bac865a217a819eb5cf90af6962904241168f167/gcc%2Fada%2Fsinput.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinput.ads?ref=bac865a217a819eb5cf90af6962904241168f167", "patch": "@@ -560,8 +560,8 @@ package Sinput is\n    --  the start of the current source. If the current source starts with a\n    --  recognized BOM, then some flags such as Wide_Character_Encoding_Method\n    --  are set accordingly, and the Scan_Ptr on return points past this BOM.\n-   --  An error message is output and Unrecoverable_Error raised if a non-\n-   --  recognized BOM is detected. The call has no effect if no BOM is found.\n+   --  An error message is output and Unrecoverable_Error raised if an\n+   --  unrecognized BOM is detected. The call has no effect if no BOM is found.\n \n    function Get_Column_Number (P : Source_Ptr) return Column_Number;\n    --  The ones-origin column number of the specified Source_Ptr value is"}, {"sha": "f785205fe104105b29f50256f0bab1a704d146d3", "filename": "gcc/ada/styleg.adb", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bac865a217a819eb5cf90af6962904241168f167/gcc%2Fada%2Fstyleg.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bac865a217a819eb5cf90af6962904241168f167/gcc%2Fada%2Fstyleg.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fstyleg.adb?ref=bac865a217a819eb5cf90af6962904241168f167", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -492,10 +492,13 @@ package body Styleg is\n    --  Start of processing for Check_Comment\n \n    begin\n-      --  Can never have a non-blank character preceding the first minus\n+      --  Can never have a non-blank character preceding the first minus.\n+      --  The \"+ 3\" is to leave room for a possible byte order mark (BOM);\n+      --  we want to avoid a warning for a comment at the start of the\n+      --  file just after the BOM.\n \n       if Style_Check_Comments then\n-         if Scan_Ptr > Source_First (Current_Source_File)\n+         if Scan_Ptr > Source_First (Current_Source_File) + 3\n            and then Source (Scan_Ptr - 1) > ' '\n          then\n             Error_Msg_S -- CODEFIX"}]}