{"sha": "3c8b06dcc68be1ba6dbb01fbbd32ba2a337dd3b8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2M4YjA2ZGNjNjhiZTFiYTZkYmIwMWZiYmQzMmJhMmEzMzdkZDNiOA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2019-02-22T08:36:30Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2019-02-22T08:36:30Z"}, "message": "re PR tree-optimization/87609 (miscompilation with restrict and loop)\n\n2019-02-22  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/87609\n\t* tree-core.h (tree_base): Document special clique values.\n\t* tree-inline.c (remap_dependence_clique): Do not use the\n\tspecial clique value of one.\n\t(maybe_set_dependence_info): Use clique one.\n\t(clear_dependence_clique): New callback.\n\t(compute_dependence_clique): Clear clique one from all refs\n\tbefore assigning it (again).\n\nFrom-SVN: r269097", "tree": {"sha": "bb1ea56d5a42df8b7bb28149592007fc6c94b08e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bb1ea56d5a42df8b7bb28149592007fc6c94b08e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3c8b06dcc68be1ba6dbb01fbbd32ba2a337dd3b8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c8b06dcc68be1ba6dbb01fbbd32ba2a337dd3b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c8b06dcc68be1ba6dbb01fbbd32ba2a337dd3b8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c8b06dcc68be1ba6dbb01fbbd32ba2a337dd3b8/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "406e490892c067d36969c664ae7fb7ac09fcfb62", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/406e490892c067d36969c664ae7fb7ac09fcfb62", "html_url": "https://github.com/Rust-GCC/gccrs/commit/406e490892c067d36969c664ae7fb7ac09fcfb62"}], "stats": {"total": 58, "additions": 55, "deletions": 3}, "files": [{"sha": "a35b0aa1a5197157b14521ccf2c74df7a0706e5e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c8b06dcc68be1ba6dbb01fbbd32ba2a337dd3b8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c8b06dcc68be1ba6dbb01fbbd32ba2a337dd3b8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3c8b06dcc68be1ba6dbb01fbbd32ba2a337dd3b8", "patch": "@@ -1,3 +1,14 @@\n+2019-02-22  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/87609\n+\t* tree-core.h (tree_base): Document special clique values.\n+\t* tree-inline.c (remap_dependence_clique): Do not use the\n+\tspecial clique value of one.\n+\t(maybe_set_dependence_info): Use clique one.\n+\t(clear_dependence_clique): New callback.\n+\t(compute_dependence_clique): Clear clique one from all refs\n+\tbefore assigning it (again).\n+\n 2019-02-21  Martin Sebor  <msebor@redhat.com>\n \n \t* doc/extend.texi (__clear_cache): Correct signature."}, {"sha": "552196b1b4264b167dc87bd8f545002126f31da6", "filename": "gcc/tree-core.h", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c8b06dcc68be1ba6dbb01fbbd32ba2a337dd3b8/gcc%2Ftree-core.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c8b06dcc68be1ba6dbb01fbbd32ba2a337dd3b8/gcc%2Ftree-core.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-core.h?ref=3c8b06dcc68be1ba6dbb01fbbd32ba2a337dd3b8", "patch": "@@ -1032,7 +1032,9 @@ struct GTY(()) tree_base {\n        expression trees and specify known data non-dependences.  For\n        two memory references in a function they are known to not\n        alias if dependence_info.clique are equal and dependence_info.base\n-       are distinct.  */\n+       are distinct.  Clique number zero means there is no information,\n+       clique number one is populated from function global information\n+       and thus needs no remapping on transforms like loop unrolling.  */\n     struct {\n       unsigned short clique;\n       unsigned short base;"}, {"sha": "9017da878b147c6edb3c91cb176a32a8fc063b75", "filename": "gcc/tree-inline.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c8b06dcc68be1ba6dbb01fbbd32ba2a337dd3b8/gcc%2Ftree-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c8b06dcc68be1ba6dbb01fbbd32ba2a337dd3b8/gcc%2Ftree-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.c?ref=3c8b06dcc68be1ba6dbb01fbbd32ba2a337dd3b8", "patch": "@@ -911,7 +911,12 @@ remap_dependence_clique (copy_body_data *id, unsigned short clique)\n   bool existed;\n   unsigned short &newc = id->dependence_map->get_or_insert (clique, &existed);\n   if (!existed)\n-    newc = ++cfun->last_clique;\n+    {\n+      /* Clique 1 is reserved for local ones set by PTA.  */\n+      if (cfun->last_clique == 0)\n+\tcfun->last_clique = 1;\n+      newc = ++cfun->last_clique;\n+    }\n   return newc;\n }\n "}, {"sha": "15f0872a2af4375bac61ea95609ea3546338cf4f", "filename": "gcc/tree-ssa-structalias.c", "status": "modified", "additions": 35, "deletions": 1, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c8b06dcc68be1ba6dbb01fbbd32ba2a337dd3b8/gcc%2Ftree-ssa-structalias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c8b06dcc68be1ba6dbb01fbbd32ba2a337dd3b8/gcc%2Ftree-ssa-structalias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-structalias.c?ref=3c8b06dcc68be1ba6dbb01fbbd32ba2a337dd3b8", "patch": "@@ -7495,7 +7495,11 @@ maybe_set_dependence_info (gimple *, tree base, tree, void *data)\n       if (MR_DEPENDENCE_CLIQUE (base) == 0)\n \t{\n \t  if (clique == 0)\n-\t    clique = ++cfun->last_clique;\n+\t    {\n+\t      if (cfun->last_clique == 0)\n+\t\tcfun->last_clique = 1;\n+\t      clique = 1;\n+\t    }\n \t  if (restrict_var->ruid == 0)\n \t    restrict_var->ruid = ++last_ruid;\n \t  MR_DEPENDENCE_CLIQUE (base) = clique;\n@@ -7506,12 +7510,42 @@ maybe_set_dependence_info (gimple *, tree base, tree, void *data)\n   return false;\n }\n \n+/* Clear dependence info for the clique DATA.  */\n+\n+static bool\n+clear_dependence_clique (gimple *, tree base, tree, void *data)\n+{\n+  unsigned short clique = (uintptr_t)data;\n+  if ((TREE_CODE (base) == MEM_REF\n+       || TREE_CODE (base) == TARGET_MEM_REF)\n+      && MR_DEPENDENCE_CLIQUE (base) == clique)\n+    {\n+      MR_DEPENDENCE_CLIQUE (base) = 0;\n+      MR_DEPENDENCE_BASE (base) = 0;\n+    }\n+\n+  return false;\n+}\n+\n /* Compute the set of independend memory references based on restrict\n    tags and their conservative propagation to the points-to sets.  */\n \n static void\n compute_dependence_clique (void)\n {\n+  /* First clear the special \"local\" clique.  */\n+  basic_block bb;\n+  if (cfun->last_clique != 0)\n+    FOR_EACH_BB_FN (bb, cfun)\n+      for (gimple_stmt_iterator gsi = gsi_start_bb (bb);\n+\t   !gsi_end_p (gsi); gsi_next (&gsi))\n+\t{\n+\t  gimple *stmt = gsi_stmt (gsi);\n+\t  walk_stmt_load_store_ops (stmt, (void *)(uintptr_t) 1,\n+\t\t\t\t    clear_dependence_clique,\n+\t\t\t\t    clear_dependence_clique);\n+\t}\n+\n   unsigned short clique = 0;\n   unsigned short last_ruid = 0;\n   bitmap rvars = BITMAP_ALLOC (NULL);"}]}