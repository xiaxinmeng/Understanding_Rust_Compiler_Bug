{"sha": "4b21c3ea03540ba1d89bca16561820f0911e17ce", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGIyMWMzZWEwMzU0MGJhMWQ4OWJjYTE2NTYxODIwZjA5MTFlMTdjZQ==", "commit": {"author": {"name": "Ville Voutilainen", "email": "ville.voutilainen@gmail.com", "date": "2016-12-19T12:55:33Z"}, "committer": {"name": "Ville Voutilainen", "email": "ville@gcc.gnu.org", "date": "2016-12-19T12:55:33Z"}, "message": "Make the perfect-forwarding constructor of a two-element tuple sfinae away when the first argument is an allocator_arg.\n\nMake the perfect-forwarding constructor of a two-element tuple\nsfinae away when the first argument is an allocator_arg.\n* include/std/tuple (tuple(_U1&&, _U2&&)): Constrain.\n* testsuite/20_util/tuple/cons/allocator_with_any.cc: New.\n* testsuite/20_util/tuple/element_access/get_neg.cc: Adjust.\n\nFrom-SVN: r243795", "tree": {"sha": "e5d7b3004bcfea8c1985fe2c6450e7e6c70b500e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e5d7b3004bcfea8c1985fe2c6450e7e6c70b500e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4b21c3ea03540ba1d89bca16561820f0911e17ce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b21c3ea03540ba1d89bca16561820f0911e17ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b21c3ea03540ba1d89bca16561820f0911e17ce", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b21c3ea03540ba1d89bca16561820f0911e17ce/comments", "author": {"login": "villevoutilainen", "id": 963599, "node_id": "MDQ6VXNlcjk2MzU5OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/963599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/villevoutilainen", "html_url": "https://github.com/villevoutilainen", "followers_url": "https://api.github.com/users/villevoutilainen/followers", "following_url": "https://api.github.com/users/villevoutilainen/following{/other_user}", "gists_url": "https://api.github.com/users/villevoutilainen/gists{/gist_id}", "starred_url": "https://api.github.com/users/villevoutilainen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/villevoutilainen/subscriptions", "organizations_url": "https://api.github.com/users/villevoutilainen/orgs", "repos_url": "https://api.github.com/users/villevoutilainen/repos", "events_url": "https://api.github.com/users/villevoutilainen/events{/privacy}", "received_events_url": "https://api.github.com/users/villevoutilainen/received_events", "type": "User", "site_admin": false}, "committer": {"login": "villevoutilainen", "id": 963599, "node_id": "MDQ6VXNlcjk2MzU5OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/963599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/villevoutilainen", "html_url": "https://github.com/villevoutilainen", "followers_url": "https://api.github.com/users/villevoutilainen/followers", "following_url": "https://api.github.com/users/villevoutilainen/following{/other_user}", "gists_url": "https://api.github.com/users/villevoutilainen/gists{/gist_id}", "starred_url": "https://api.github.com/users/villevoutilainen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/villevoutilainen/subscriptions", "organizations_url": "https://api.github.com/users/villevoutilainen/orgs", "repos_url": "https://api.github.com/users/villevoutilainen/repos", "events_url": "https://api.github.com/users/villevoutilainen/events{/privacy}", "received_events_url": "https://api.github.com/users/villevoutilainen/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "99eb50e806f51a37f8188fd268a6abbb7d292927", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99eb50e806f51a37f8188fd268a6abbb7d292927", "html_url": "https://github.com/Rust-GCC/gccrs/commit/99eb50e806f51a37f8188fd268a6abbb7d292927"}], "stats": {"total": 60, "additions": 57, "deletions": 3}, "files": [{"sha": "28f2f802d805d21ad168c1194c4475029ba664e8", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b21c3ea03540ba1d89bca16561820f0911e17ce/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b21c3ea03540ba1d89bca16561820f0911e17ce/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=4b21c3ea03540ba1d89bca16561820f0911e17ce", "patch": "@@ -1,3 +1,11 @@\n+2016-12-19  Ville Voutilainen  <ville.voutilainen@gmail.com>\n+\n+\tMake the perfect-forwarding constructor of a two-element tuple\n+\tsfinae away when the first argument is an allocator_arg.\n+\t* include/std/tuple (tuple(_U1&&, _U2&&)): Constrain.\n+\t* testsuite/20_util/tuple/cons/allocator_with_any.cc: New.\n+\t* testsuite/20_util/tuple/element_access/get_neg.cc: Adjust.\n+\n 2016-12-16  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* include/bits/stl_map.h (map::erase(iterator)): Add Doxygen markup"}, {"sha": "9dbdd8dc98f5583a3cd5e866ffebc7bad6657c63", "filename": "libstdc++-v3/include/std/tuple", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b21c3ea03540ba1d89bca16561820f0911e17ce/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftuple", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b21c3ea03540ba1d89bca16561820f0911e17ce/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftuple", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftuple?ref=4b21c3ea03540ba1d89bca16561820f0911e17ce", "patch": "@@ -951,7 +951,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n         enable_if<_TMC::template\n                     _MoveConstructibleTuple<_U1, _U2>()\n                   && _TMC::template\n-                    _ImplicitlyMoveConvertibleTuple<_U1, _U2>(),\n+                    _ImplicitlyMoveConvertibleTuple<_U1, _U2>()\n+\t          && !is_same<typename decay<_U1>::type,\n+\t\t\t      allocator_arg_t>::value,\n \tbool>::type = true>\n         constexpr tuple(_U1&& __a1, _U2&& __a2)\n \t: _Inherited(std::forward<_U1>(__a1), std::forward<_U2>(__a2)) { }\n@@ -960,7 +962,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n         enable_if<_TMC::template\n                     _MoveConstructibleTuple<_U1, _U2>()\n                   && !_TMC::template\n-                    _ImplicitlyMoveConvertibleTuple<_U1, _U2>(),\n+                    _ImplicitlyMoveConvertibleTuple<_U1, _U2>()\n+\t          && !is_same<typename decay<_U1>::type,\n+\t\t\t      allocator_arg_t>::value,\n \tbool>::type = false>\n         explicit constexpr tuple(_U1&& __a1, _U2&& __a2)\n \t: _Inherited(std::forward<_U1>(__a1), std::forward<_U2>(__a2)) { }"}, {"sha": "9f86c93e3782b4e7bebc66acd906d043c9b43364", "filename": "libstdc++-v3/testsuite/20_util/tuple/cons/allocator_with_any.cc", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b21c3ea03540ba1d89bca16561820f0911e17ce/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Fcons%2Fallocator_with_any.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b21c3ea03540ba1d89bca16561820f0911e17ce/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Fcons%2Fallocator_with_any.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Fcons%2Fallocator_with_any.cc?ref=4b21c3ea03540ba1d89bca16561820f0911e17ce", "patch": "@@ -0,0 +1,42 @@\n+// { dg-do run { target c++14 } }\n+\n+// Copyright (C) 2016 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+\n+// NOTE: This makes use of the fact that we know how moveable\n+// is implemented on tuple.  If the implementation changed\n+// this test may begin to fail.\n+\n+#include <tuple>\n+#include <experimental/any>\n+#include <testsuite_hooks.h>\n+\n+using std::experimental::any;\n+\n+void test01()\n+{\n+    std::tuple<any, any> t(std::allocator_arg,\n+\t\t\t   std::allocator<any>{});\n+    VERIFY(std::get<0>(t).empty());\n+    VERIFY(std::get<1>(t).empty());\n+}\n+\n+int main()\n+{\n+    test01();\n+}"}, {"sha": "7da61e589fea9e8dd6b7a9a1d8fedbfeb5307c07", "filename": "libstdc++-v3/testsuite/20_util/tuple/element_access/get_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b21c3ea03540ba1d89bca16561820f0911e17ce/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Felement_access%2Fget_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b21c3ea03540ba1d89bca16561820f0911e17ce/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Felement_access%2Fget_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Felement_access%2Fget_neg.cc?ref=4b21c3ea03540ba1d89bca16561820f0911e17ce", "patch": "@@ -17,7 +17,7 @@\n \n // { dg-options \"-fno-show-column\" }\n // { dg-do compile { target c++14 } }\n-// { dg-error \"in range\" \"\" { target *-*-* } 1280 }\n+// { dg-error \"in range\" \"\" { target *-*-* } 1284 }\n \n #include <tuple>\n "}]}