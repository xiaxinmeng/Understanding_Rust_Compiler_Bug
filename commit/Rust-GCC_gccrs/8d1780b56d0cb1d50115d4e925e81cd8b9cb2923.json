{"sha": "8d1780b56d0cb1d50115d4e925e81cd8b9cb2923", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGQxNzgwYjU2ZDBjYjFkNTAxMTVkNGU5MjVlODFjZDhiOWNiMjkyMw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-02-21T21:01:03Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-02-21T21:01:03Z"}, "message": "i18n: Fix translation of --help [PR93759]\n\nThe first two hunks make sure we actually translate what has been marked\nfor translation, i.e. the cl_options[...].help strings, rather than those\nstrings ammended in various ways, like:\n_(\"%s  Same as %s.\"), help, ...\nor\n\"%s  %s\", help, _(use_diagnosed_msg)\n\nThe exgettext changes attempt to make sure that the cl_options[...].help\nstrings are marked as no-c-format, because otherwise if they happen\nto contain a % character, such as the 90% substring, they will be marked\nas c-format, which they aren't.\n\n2020-02-21  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR translation/93759\n\t* opts.c (print_filtered_help): Translate help before appending\n\tmessages to it rather than after that.\n\n\t* exgettext: For *.opt help texts, use __opt_help_text(\"...\")\n\trather than _(\"...\") in the $emsg file and pass options that\n\tsay that this implies no-c-format.", "tree": {"sha": "487d93ee09d398aa138d6b5f04666899f474f8ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/487d93ee09d398aa138d6b5f04666899f474f8ca"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8d1780b56d0cb1d50115d4e925e81cd8b9cb2923", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d1780b56d0cb1d50115d4e925e81cd8b9cb2923", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d1780b56d0cb1d50115d4e925e81cd8b9cb2923", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d1780b56d0cb1d50115d4e925e81cd8b9cb2923/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d11676de2961d10c10b82f04da28254cb46ef645", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d11676de2961d10c10b82f04da28254cb46ef645", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d11676de2961d10c10b82f04da28254cb46ef645"}], "stats": {"total": 26, "additions": 20, "deletions": 6}, "files": [{"sha": "20e0b12927b00d560b3321dbfe55a767ae207b61", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d1780b56d0cb1d50115d4e925e81cd8b9cb2923/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d1780b56d0cb1d50115d4e925e81cd8b9cb2923/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8d1780b56d0cb1d50115d4e925e81cd8b9cb2923", "patch": "@@ -1,3 +1,9 @@\n+2020-02-21  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR translation/93759\n+\t* opts.c (print_filtered_help): Translate help before appending\n+\tmessages to it rather than after that.\n+\n 2020-02-19  Richard Sandiford  <richard.sandiford@arm.com>\n \n \tPR rtl-optimization/PR92989"}, {"sha": "ac160ed8404e6b02e616b81a90bc12c9a5a5008f", "filename": "gcc/opts.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d1780b56d0cb1d50115d4e925e81cd8b9cb2923/gcc%2Fopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d1780b56d0cb1d50115d4e925e81cd8b9cb2923/gcc%2Fopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.c?ref=8d1780b56d0cb1d50115d4e925e81cd8b9cb2923", "patch": "@@ -1309,10 +1309,13 @@ print_filtered_help (unsigned int include_flags,\n \t  help = undocumented_msg;\n \t}\n \n+      /* Get the translation.  */\n+      help = _(help);\n+\n       if (option->alias_target < N_OPTS\n \t  && cl_options [option->alias_target].help)\n \t{\n-\t  if (help == undocumented_msg)\n+\t  if (option->help == NULL)\n \t    {\n \t      /* For undocumented options that are aliases for other options\n \t\t that are documented, point the reader to the other option in\n@@ -1347,9 +1350,6 @@ print_filtered_help (unsigned int include_flags,\n \t  help = new_help;\n \t}\n \n-      /* Get the translation.  */\n-      help = _(help);\n-\n       /* Find the gap between the name of the\n \t option and its descriptive text.  */\n       tab = strchr (help, '\\t');"}, {"sha": "4fda0a4475b84f990e9e162347c3ab87631a5f69", "filename": "gcc/po/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d1780b56d0cb1d50115d4e925e81cd8b9cb2923/gcc%2Fpo%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d1780b56d0cb1d50115d4e925e81cd8b9cb2923/gcc%2Fpo%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpo%2FChangeLog?ref=8d1780b56d0cb1d50115d4e925e81cd8b9cb2923", "patch": "@@ -1,3 +1,10 @@\n+2020-02-21  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR translation/93759\n+\t* exgettext: For *.opt help texts, use __opt_help_text(\"...\")\n+\trather than _(\"...\") in the $emsg file and pass options that\n+\tsay that this implies no-c-format.\n+\n 2020-02-20  Joseph Myers  <joseph@codesourcery.com>\n \n \t* de.po: Update."}, {"sha": "d648bdb36eea3d5edde8500bc883fb8d966d305e", "filename": "gcc/po/exgettext", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d1780b56d0cb1d50115d4e925e81cd8b9cb2923/gcc%2Fpo%2Fexgettext", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d1780b56d0cb1d50115d4e925e81cd8b9cb2923/gcc%2Fpo%2Fexgettext", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpo%2Fexgettext?ref=8d1780b56d0cb1d50115d4e925e81cd8b9cb2923", "patch": "@@ -227,6 +227,7 @@ END {\n \t}\n     }\n     print emsg > posr\n+    print \"--keyword=__opt_help_text\\n--flag=__opt_help_text:1:no-c-format\" >> kopt\n }'\n ) || exit\n \n@@ -240,7 +241,7 @@ echo \"scanning option files...\" >&2\n     while (getline < file) {\n \tif (/^[ \\t]*(;|$)/ || !/^[^ \\t]/) {\n \t    if (field > 2)\n-\t\tprintf(\"_(\\\"%s\\\")\\n\", line)\n+\t\tprintf(\"__opt_help_text(\\\"%s\\\")\\n\", line)\n \t    field = 0\n \t} else {\n \t    if ((field == 1) && /MissingArgError/) {\n@@ -287,7 +288,7 @@ echo \"scanning option files...\" >&2\n \tlineno++;\n     }\n     if (field > 2)\n-\tprintf(\"_(\\\"%s\\\")\\n\", line)\n+\tprintf(\"__opt_help_text(\\\"%s\\\")\\n\", line)\n   }') >> $emsg\n \n # Run the xgettext commands, with temporary added as a file to scan."}]}