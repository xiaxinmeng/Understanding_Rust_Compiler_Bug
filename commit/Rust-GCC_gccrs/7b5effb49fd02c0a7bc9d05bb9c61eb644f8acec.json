{"sha": "7b5effb49fd02c0a7bc9d05bb9c61eb644f8acec", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2I1ZWZmYjQ5ZmQwMmMwYTdiYzlkMDViYjljNjFlYjY0NGY4YWNlYw==", "commit": {"author": {"name": "Roger Sayle", "email": "roger@eyesopen.com", "date": "2004-07-06T21:50:47Z"}, "committer": {"name": "Roger Sayle", "email": "sayle@gcc.gnu.org", "date": "2004-07-06T21:50:47Z"}, "message": "ifcvt.c (struct noce_if_info): Add a Boolean b_unconditional field.\n\n\n\t* ifcvt.c (struct noce_if_info): Add a Boolean b_unconditional field.\n\t(noce_try_sign_mask): Tweak rtx_cost check if t is evaluated anyway.\n\t(noce_process_if_block): Initialize if_info.b_unconditional if insn_b\n\tis currently executed unconditionally, i.e. not in \"else_bb\".\n\nFrom-SVN: r84172", "tree": {"sha": "002fe8f401ebeb12dbd0037128fbc763942657be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/002fe8f401ebeb12dbd0037128fbc763942657be"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7b5effb49fd02c0a7bc9d05bb9c61eb644f8acec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b5effb49fd02c0a7bc9d05bb9c61eb644f8acec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b5effb49fd02c0a7bc9d05bb9c61eb644f8acec", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b5effb49fd02c0a7bc9d05bb9c61eb644f8acec/comments", "author": null, "committer": null, "parents": [{"sha": "97b62d4781edb561dfc43fd79583026f11118982", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97b62d4781edb561dfc43fd79583026f11118982", "html_url": "https://github.com/Rust-GCC/gccrs/commit/97b62d4781edb561dfc43fd79583026f11118982"}], "stats": {"total": 17, "additions": 15, "deletions": 2}, "files": [{"sha": "eb2dc4e67d0978a55dd7232c63f41012d5681f0f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b5effb49fd02c0a7bc9d05bb9c61eb644f8acec/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b5effb49fd02c0a7bc9d05bb9c61eb644f8acec/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7b5effb49fd02c0a7bc9d05bb9c61eb644f8acec", "patch": "@@ -1,3 +1,10 @@\n+2004-07-06  Roger Sayle  <roger@eyesopen.com>\n+\n+\t* ifcvt.c (struct noce_if_info): Add a Boolean b_unconditional field.\n+\t(noce_try_sign_mask): Tweak rtx_cost check if t is evaluated anyway.\n+\t(noce_process_if_block): Initialize if_info.b_unconditional if insn_b\n+\tis currently executed unconditionally, i.e. not in \"else_bb\".\n+\n 2004-07-06  Steven Bosscher  <stevenb@suse.de>\n \n \t* config/alpha/alpha.c (alpha_use_dfa_pipeline_interface): Remove."}, {"sha": "03efaba2ebbcb3eb5870a028661274142e571929", "filename": "gcc/ifcvt.c", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b5effb49fd02c0a7bc9d05bb9c61eb644f8acec/gcc%2Fifcvt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b5effb49fd02c0a7bc9d05bb9c61eb644f8acec/gcc%2Fifcvt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fifcvt.c?ref=7b5effb49fd02c0a7bc9d05bb9c61eb644f8acec", "patch": "@@ -579,6 +579,8 @@ struct noce_if_info\n   rtx insn_a, insn_b;\n   rtx x, a, b;\n   rtx jump, cond, cond_earliest;\n+  /* True if \"b\" was originally evaluated unconditionally.  */\n+  bool b_unconditional;\n };\n \n static rtx noce_emit_store_flag (struct noce_if_info *, rtx, int, int);\n@@ -1730,8 +1732,11 @@ noce_try_sign_mask (struct noce_if_info *if_info)\n   if (GET_MODE (m) != mode)\n     return FALSE;\n \n-  /* This is only profitable if T is cheap.  */\n-  if (rtx_cost (t, SET) >= COSTS_N_INSNS (2))\n+  /* This is only profitable if T is cheap, or T is unconditionally\n+     executed/evaluated in the original insn sequence.  */\n+  if (rtx_cost (t, SET) >= COSTS_N_INSNS (2)\n+      && (!if_info->b_unconditional\n+          || t != if_info->b))\n     return FALSE;\n \n   start_sequence ();\n@@ -1983,6 +1988,7 @@ noce_process_if_block (struct ce_if_block * ce_info)\n   if_info.x = x;\n   if_info.a = a;\n   if_info.b = b;\n+  if_info.b_unconditional = else_bb == 0;\n \n   /* Try optimizations in some approximation of a useful order.  */\n   /* ??? Should first look to see if X is live incoming at all.  If it"}]}