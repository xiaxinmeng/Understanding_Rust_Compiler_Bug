{"sha": "d59858f6ee7f356f27ccc2d29129826781f9483f", "node_id": "C_kwDOANBUbNoAKGQ1OTg1OGY2ZWU3ZjM1NmYyN2NjYzJkMjkxMjk4MjY3ODFmOTQ4M2Y", "commit": {"author": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2022-11-16T07:58:44Z"}, "committer": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2022-11-16T07:58:44Z"}, "message": "nvptx/mkoffload.cc: Fix \"$nohost\" check\n\nIf lhd_set_decl_assembler_name is invoked - in particular if\n!TREE_PUBLIC (decl) && !DECL_FILE_SCOPE_P (decl) - the '.nohost' suffix\nmight change to '.nohost.2'. This happens for the existing reverse offload\ntestcases via cgraph_node::analyze and is a side effect of\nr13-3455-g178ac530fe67e4f2fc439cc4ce89bc19d571ca31 for some reason.\n\nThe solution is to not only check for a tailing '$nohost' but also for\n'$nohost$' in nvptx/mkoffload.cc.\n\ngcc/ChangeLog:\n\n\t* config/nvptx/mkoffload.cc (process): Recognize '$nohost$...'\n\tbesides tailing '$nohost' as being for reverse offload.", "tree": {"sha": "17e87a2709f7fd026ab3ef4070ae7812acc25c2d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/17e87a2709f7fd026ab3ef4070ae7812acc25c2d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d59858f6ee7f356f27ccc2d29129826781f9483f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d59858f6ee7f356f27ccc2d29129826781f9483f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d59858f6ee7f356f27ccc2d29129826781f9483f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d59858f6ee7f356f27ccc2d29129826781f9483f/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7f014022861b5b3f00be9bb32fe3fe772517ddac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f014022861b5b3f00be9bb32fe3fe772517ddac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7f014022861b5b3f00be9bb32fe3fe772517ddac"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "5d89ba8a78882564ed6241d6ab9841f48af1dc6b", "filename": "gcc/config/nvptx/mkoffload.cc", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d59858f6ee7f356f27ccc2d29129826781f9483f/gcc%2Fconfig%2Fnvptx%2Fmkoffload.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d59858f6ee7f356f27ccc2d29129826781f9483f/gcc%2Fconfig%2Fnvptx%2Fmkoffload.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnvptx%2Fmkoffload.cc?ref=d59858f6ee7f356f27ccc2d29129826781f9483f", "patch": "@@ -364,7 +364,8 @@ process (FILE *in, FILE *out, uint32_t omp_requires)\n \t     Alternatively, besides searching for 'BEGIN FUNCTION DECL',\n \t     checking for '.visible .entry ' + id->ptx_name would be\n \t     required.  */\n-\t  if (!endswith (id->ptx_name, \"$nohost\"))\n+\t  if (!endswith (id->ptx_name, \"$nohost\")\n+\t      && !strstr (id->ptx_name, \"$nohost$\"))\n \t    continue;\n \t  fprintf (out, \"\\t\\\".extern \");\n \t  const char *p = input + file_idx[fidx];\n@@ -402,7 +403,8 @@ process (FILE *in, FILE *out, uint32_t omp_requires)\n \t\t    \"$offload_func_table[] = {\");\n       for (comma = \"\", id = func_ids; id; comma = \",\", id = id->next)\n \tfprintf (out, \"%s\\\"\\n\\t\\t\\\"%s\", comma,\n-\t\t endswith (id->ptx_name, \"$nohost\") ? id->ptx_name : \"0\");\n+\t\t (endswith (id->ptx_name, \"$nohost\")\n+\t\t  || strstr (id->ptx_name, \"$nohost$\")) ? id->ptx_name : \"0\");\n       fprintf (out, \"};\\\\n\\\";\\n\\n\");\n     }\n "}]}