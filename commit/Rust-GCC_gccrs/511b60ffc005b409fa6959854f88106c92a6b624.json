{"sha": "511b60ffc005b409fa6959854f88106c92a6b624", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTExYjYwZmZjMDA1YjQwOWZhNjk1OTg1NGY4ODEwNmM5MmE2YjYyNA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1999-08-08T18:11:15Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1999-08-08T18:11:15Z"}, "message": "fix thinko in last change\n\nFrom-SVN: r28598", "tree": {"sha": "39a3e8268d5768a06497c640fffd2dba626f438e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/39a3e8268d5768a06497c640fffd2dba626f438e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/511b60ffc005b409fa6959854f88106c92a6b624", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/511b60ffc005b409fa6959854f88106c92a6b624", "html_url": "https://github.com/Rust-GCC/gccrs/commit/511b60ffc005b409fa6959854f88106c92a6b624", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/511b60ffc005b409fa6959854f88106c92a6b624/comments", "author": null, "committer": null, "parents": [{"sha": "58eb6e7cef1cea515f8da18d24341a4aa53ccb70", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58eb6e7cef1cea515f8da18d24341a4aa53ccb70", "html_url": "https://github.com/Rust-GCC/gccrs/commit/58eb6e7cef1cea515f8da18d24341a4aa53ccb70"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "c51aeec9cfe97b374e3a4000a95aea38f3d4dce8", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/511b60ffc005b409fa6959854f88106c92a6b624/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/511b60ffc005b409fa6959854f88106c92a6b624/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=511b60ffc005b409fa6959854f88106c92a6b624", "patch": "@@ -3616,6 +3616,7 @@ maybe_get_template_decl_from_type_decl (decl)\n   return (decl != NULL_TREE\n \t  && TREE_CODE (decl) == TYPE_DECL \n \t  && DECL_ARTIFICIAL (decl)\n+\t  && CLASS_TYPE_P (TREE_TYPE (decl))\n \t  && CLASSTYPE_TEMPLATE_INFO (TREE_TYPE (decl))) \n     ? CLASSTYPE_TI_TEMPLATE (TREE_TYPE (decl)) : decl;\n }"}]}