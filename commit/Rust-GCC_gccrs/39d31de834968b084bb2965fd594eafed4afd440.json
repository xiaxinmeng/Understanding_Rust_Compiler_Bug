{"sha": "39d31de834968b084bb2965fd594eafed4afd440", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzlkMzFkZTgzNDk2OGIwODRiYjI5NjVmZDU5NGVhZmVkNGFmZDQ0MA==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2002-06-09T22:45:01Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2002-06-09T22:45:01Z"}, "message": "Forgot to commit on Friday.\n\nFrom-SVN: r54416", "tree": {"sha": "373464c1058d6bd62a33303f554ac0ab9ca703fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/373464c1058d6bd62a33303f554ac0ab9ca703fc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/39d31de834968b084bb2965fd594eafed4afd440", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39d31de834968b084bb2965fd594eafed4afd440", "html_url": "https://github.com/Rust-GCC/gccrs/commit/39d31de834968b084bb2965fd594eafed4afd440", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39d31de834968b084bb2965fd594eafed4afd440/comments", "author": null, "committer": null, "parents": [{"sha": "b38b97c4392f9b2eca7a0edef7f10f1471b23ff0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b38b97c4392f9b2eca7a0edef7f10f1471b23ff0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b38b97c4392f9b2eca7a0edef7f10f1471b23ff0"}], "stats": {"total": 6, "additions": 2, "deletions": 4}, "files": [{"sha": "e5b19e9c31ce5e3be7bdcd7d2c538442ad8c926f", "filename": "gcc/reload1.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39d31de834968b084bb2965fd594eafed4afd440/gcc%2Freload1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39d31de834968b084bb2965fd594eafed4afd440/gcc%2Freload1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload1.c?ref=39d31de834968b084bb2965fd594eafed4afd440", "patch": "@@ -7163,8 +7163,7 @@ emit_reload_insns (chain)\n \t\t    for (k = 1; k < nnr; k++)\n \t\t      reg_last_reload_reg[nregno + k]\n \t\t\t= (nr == nnr\n-\t\t\t   ? gen_rtx_REG (reg_raw_mode[REGNO (rld[r].reg_rtx) + k],\n-\t\t\t\t\t  REGNO (rld[r].reg_rtx) + k)\n+\t\t\t   ? regno_reg_rtx[REGNO (rld[r].reg_rtx) + k]\n \t\t\t   : 0);\n \n \t\t  /* Now do the inverse operation.  */\n@@ -7213,8 +7212,7 @@ emit_reload_insns (chain)\n \t\t    for (k = 1; k < nnr; k++)\n \t\t      reg_last_reload_reg[nregno + k]\n \t\t\t= (nr == nnr\n-\t\t\t   ? gen_rtx_REG (reg_raw_mode[REGNO (rld[r].reg_rtx) + k],\n-\t\t\t\t\t  REGNO (rld[r].reg_rtx) + k)\n+\t\t\t   ? regno_reg_rtx[REGNO (rld[r].reg_rtx) + k]\n \t\t\t   : 0);\n \n \t\t  /* Unless we inherited this reload, show we haven't"}]}