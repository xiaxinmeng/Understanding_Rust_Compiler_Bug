{"sha": "133634de9862b748c03ea2d8605bce5c762b2c02", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTMzNjM0ZGU5ODYyYjc0OGMwM2VhMmQ4NjA1YmNlNWM3NjJiMmMwMg==", "commit": {"author": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2016-10-26T20:25:06Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2016-10-26T20:25:06Z"}, "message": "sh.c (output_branch): Add missing fallthru comments.\n\n\t* config/sh/sh.c (output_branch): Add missing fallthru comments.\n\t(gen_shl_and): Likewise.\n\t* config/sh/sh.md (movsicc): Add missing fallthru comments.\n\nFrom-SVN: r241600", "tree": {"sha": "e2dfdfd7a9cbb42f7a8cc2283a006c5dbdaa12ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e2dfdfd7a9cbb42f7a8cc2283a006c5dbdaa12ea"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/133634de9862b748c03ea2d8605bce5c762b2c02", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/133634de9862b748c03ea2d8605bce5c762b2c02", "html_url": "https://github.com/Rust-GCC/gccrs/commit/133634de9862b748c03ea2d8605bce5c762b2c02", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/133634de9862b748c03ea2d8605bce5c762b2c02/comments", "author": null, "committer": null, "parents": [{"sha": "7a83b391c734e5e64487ddd8813470a5814b4868", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a83b391c734e5e64487ddd8813470a5814b4868", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a83b391c734e5e64487ddd8813470a5814b4868"}], "stats": {"total": 13, "additions": 11, "deletions": 2}, "files": [{"sha": "d8bdeeea17b97d4c3d88a976c18915888d832d34", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/133634de9862b748c03ea2d8605bce5c762b2c02/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/133634de9862b748c03ea2d8605bce5c762b2c02/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=133634de9862b748c03ea2d8605bce5c762b2c02", "patch": "@@ -16,6 +16,10 @@\n \n 2016-10-26  Jeff Law  <law@redhat.com>\n \n+\t* config/sh/sh.c (output_branch): Add missing fallthru comments.\n+\t(gen_shl_and): Likewise.\n+\t* config/sh/sh.md (movsicc): Add missing fallthru comments.\n+\n \t* config/mips/mips.c (mips16_constant_cost): Add missing\n \tfallthru comments.\n \t(mips16_build_call_stub): Increase buffer size.  Adjust"}, {"sha": "4ca4b749ec16df523af8b8591ac530b47a02319c", "filename": "gcc/config/sh/sh.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/133634de9862b748c03ea2d8605bce5c762b2c02/gcc%2Fconfig%2Fsh%2Fsh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/133634de9862b748c03ea2d8605bce5c762b2c02/gcc%2Fconfig%2Fsh%2Fsh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.c?ref=133634de9862b748c03ea2d8605bce5c762b2c02", "patch": "@@ -2665,6 +2665,7 @@ output_branch (int logic, rtx_insn *insn, rtx *operands)\n \n \t  return \"\";\n \t}\n+      /* FALLTHRU */\n       /* When relaxing, handle this like a short branch.  The linker\n \t will fix it up if it still doesn't fit after relaxation.  */\n     case 2:\n@@ -2690,7 +2691,7 @@ output_branch (int logic, rtx_insn *insn, rtx *operands)\n \n \t  return \"\";\n \t}\n-      /* When relaxing, fall through.  */\n+      /* FALLTHRU */\n     case 4:\n       {\n \tchar buffer[10];\n@@ -3461,7 +3462,7 @@ sh_rtx_costs (rtx x, machine_mode mode ATTRIBUTE_UNUSED, int outer_code,\n \t  *total = COSTS_N_INSNS (1);\n \t  return true;\n \t}\n-      /* Fall through to shiftcosts.  */\n+      /* FALLTHRU */\n     case ASHIFT:\n     case ASHIFTRT:\n       {\n@@ -4069,12 +4070,14 @@ gen_shl_and (rtx dest, rtx left_rtx, rtx mask_rtx, rtx source)\n       }\n     case 4:\n       shift_gen_fun = gen_shifty_op;\n+      /* FALLTHRU */\n     case 3:\n       /* If the topmost bit that matters is set, set the topmost bits\n \t that don't matter.  This way, we might be able to get a shorter\n \t signed constant.  */\n       if (mask & ((HOST_WIDE_INT) 1 << (31 - total_shift)))\n \tmask |= (HOST_WIDE_INT) ((HOST_WIDE_INT_M1U) << (31 - total_shift));\n+      /* FALLTHRU */\n     case 2:\n       /* Don't expand fine-grained when combining, because that will\n          make the pattern fail.  */\n@@ -4647,6 +4650,7 @@ dump_table (rtx_insn *start, rtx_insn *barrier)\n \t\t  align_insn = scan;\n \t\t  need_align = false;\n \t\t}\n+\t      /* FALLTHRU */\n \t    case DImode:\n \t      for (lab = p->label; lab; lab = LABEL_REFS (lab))\n \t\tscan = emit_label_after (lab, scan);"}, {"sha": "e80ef581b2d0c2a434f3ab39d2f17ae538ad97d7", "filename": "gcc/config/sh/sh.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/133634de9862b748c03ea2d8605bce5c762b2c02/gcc%2Fconfig%2Fsh%2Fsh.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/133634de9862b748c03ea2d8605bce5c762b2c02/gcc%2Fconfig%2Fsh%2Fsh.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.md?ref=133634de9862b748c03ea2d8605bce5c762b2c02", "patch": "@@ -1509,6 +1509,7 @@\n       case LT: case LE: case LEU: case LTU:\n \tif (GET_MODE_CLASS (GET_MODE (op0)) != MODE_INT)\n \t  break;\n+\t/* FALLTHRU */\n       case NE:\n \tnew_code = reverse_condition (code);\n \tbreak;"}]}