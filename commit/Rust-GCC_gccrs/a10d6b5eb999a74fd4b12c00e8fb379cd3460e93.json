{"sha": "a10d6b5eb999a74fd4b12c00e8fb379cd3460e93", "node_id": "C_kwDOANBUbNoAKGExMGQ2YjVlYjk5OWE3NGZkNGIxMmMwMGU4ZmIzNzljZDM0NjBlOTM", "commit": {"author": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2022-10-19T17:03:25Z"}, "committer": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2022-10-19T17:03:25Z"}, "message": "libstdc++: Fix typo in stride_view's operator- [PR107313]\n\n\tPR libstdc++/107313\n\nlibstdc++-v3/ChangeLog:\n\n\t* include/std/ranges (stride_view::_Iterator::operator-): Fix typo.\n\t* testsuite/std/ranges/adaptors/stride/1.cc (test03): New test.", "tree": {"sha": "e303246ef08656fdbf52d0a9b49c2fda58020b6a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e303246ef08656fdbf52d0a9b49c2fda58020b6a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a10d6b5eb999a74fd4b12c00e8fb379cd3460e93", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a10d6b5eb999a74fd4b12c00e8fb379cd3460e93", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a10d6b5eb999a74fd4b12c00e8fb379cd3460e93", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a10d6b5eb999a74fd4b12c00e8fb379cd3460e93/comments", "author": null, "committer": null, "parents": [{"sha": "a01eae670600852f78e8df1b88259572f181d42e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a01eae670600852f78e8df1b88259572f181d42e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a01eae670600852f78e8df1b88259572f181d42e"}], "stats": {"total": 22, "additions": 21, "deletions": 1}, "files": [{"sha": "b29264931cc08e0d7f4d8ca6c9c11a6d4ba2ec08", "filename": "libstdc++-v3/include/std/ranges", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a10d6b5eb999a74fd4b12c00e8fb379cd3460e93/libstdc%2B%2B-v3%2Finclude%2Fstd%2Franges", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a10d6b5eb999a74fd4b12c00e8fb379cd3460e93/libstdc%2B%2B-v3%2Finclude%2Fstd%2Franges", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Franges?ref=a10d6b5eb999a74fd4b12c00e8fb379cd3460e93", "patch": "@@ -7874,7 +7874,7 @@ namespace views::__adaptor\n     friend constexpr difference_type\n     operator-(default_sentinel_t __y, const _Iterator& __x)\n       requires sized_sentinel_for<sentinel_t<_Base>, iterator_t<_Base>>\n-    { return __detail::__div_ceil(__x._M_end, __x._M_current, __x._M_stride); }\n+    { return __detail::__div_ceil(__x._M_end - __x._M_current, __x._M_stride); }\n \n     friend constexpr difference_type\n     operator-(const _Iterator& __x, default_sentinel_t __y)"}, {"sha": "37ae896014a5f526e2004d46483e4273dcbc0898", "filename": "libstdc++-v3/testsuite/std/ranges/adaptors/stride/1.cc", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a10d6b5eb999a74fd4b12c00e8fb379cd3460e93/libstdc%2B%2B-v3%2Ftestsuite%2Fstd%2Franges%2Fadaptors%2Fstride%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a10d6b5eb999a74fd4b12c00e8fb379cd3460e93/libstdc%2B%2B-v3%2Ftestsuite%2Fstd%2Franges%2Fadaptors%2Fstride%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fstd%2Franges%2Fadaptors%2Fstride%2F1.cc?ref=a10d6b5eb999a74fd4b12c00e8fb379cd3460e93", "patch": "@@ -64,10 +64,30 @@ test02()\n   VERIFY( ranges::equal(v, (int[]){1, 4, 7}) );\n }\n \n+void\n+test03()\n+{\n+  // PR libstdc++/107313\n+  int x[] = {1, 2, 3, 4, 5};\n+  __gnu_test::test_input_range<int> rx(x);\n+  auto r = views::counted(rx.begin(), 4) | views::stride(2);\n+  auto i = r.begin();\n+  std::default_sentinel_t s = r.end();\n+  VERIFY( s != i );\n+  VERIFY( s - i == 2 && i - s == -2 );\n+  ++i;\n+  VERIFY( s != i );\n+  VERIFY( s - i == 1 && i - s == -1 );\n+  ++i;\n+  VERIFY( s == i );\n+  VERIFY( s - i == 0 && i - s == 0 );\n+}\n+\n int\n main()\n {\n   static_assert(test01());\n   test02<__gnu_test::test_input_range<int>>();\n   test02<__gnu_test::test_forward_range<int>>();\n+  test03();\n }"}]}