{"sha": "771d55a31cea6a2791f8dad131681953f8a76845", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzcxZDU1YTMxY2VhNmEyNzkxZjhkYWQxMzE2ODE5NTNmOGE3Njg0NQ==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1995-11-29T18:56:28Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1995-11-29T18:56:28Z"}, "message": "(merge_attributes): New declaration.\n\nFrom-SVN: r10619", "tree": {"sha": "2cd7e3173ca0f14124ca5a9e97039154c55281fe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2cd7e3173ca0f14124ca5a9e97039154c55281fe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/771d55a31cea6a2791f8dad131681953f8a76845", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/771d55a31cea6a2791f8dad131681953f8a76845", "html_url": "https://github.com/Rust-GCC/gccrs/commit/771d55a31cea6a2791f8dad131681953f8a76845", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/771d55a31cea6a2791f8dad131681953f8a76845/comments", "author": null, "committer": null, "parents": [{"sha": "bf44f7de98853f60f55246c1c385c4c878a501b4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf44f7de98853f60f55246c1c385c4c878a501b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf44f7de98853f60f55246c1c385c4c878a501b4"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "b9040550fed76a9488699c3ea7c0649e4e3cf7fa", "filename": "gcc/c-tree.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/771d55a31cea6a2791f8dad131681953f8a76845/gcc%2Fc-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/771d55a31cea6a2791f8dad131681953f8a76845/gcc%2Fc-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-tree.h?ref=771d55a31cea6a2791f8dad131681953f8a76845", "patch": "@@ -315,6 +315,7 @@ extern tree xref_tag                            PROTO((enum tree_code, tree));\n /* in c-typeck.c */\n extern tree require_complete_type\t\tPROTO((tree));\n extern void incomplete_type_error\t\tPROTO((tree, tree));\n+extern tree merge_attributes\t\t\tPROTO((tree, tree));\n /* Given two integer or real types, return the type for their sum.\n    Given two compatible ANSI C types, returns the merged type.  */\n extern tree common_type                         PROTO((tree, tree));"}]}