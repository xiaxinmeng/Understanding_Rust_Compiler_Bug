{"sha": "85819f7c33a89e4ef17d6c31836cd3c22150ad6c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODU4MTlmN2MzM2E4OWU0ZWYxN2Q2YzMxODM2Y2QzYzIyMTUwYWQ2Yw==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@unitus.it", "date": "2003-05-04T22:12:18Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2003-05-04T22:12:18Z"}, "message": "3.cc: New file, testing basic_string<char>::find_first_not_of.\n\n2003-05-04  Paolo Carlini  <pcarlini@unitus.it>\n\n\t* testsuite/21_strings/basic_string/find/char/3.cc: New\n\tfile, testing basic_string<char>::find_first_not_of.\n\t* testsuite/21_strings/basic_string/find/wchar_t/3.cc:\n\tLikewise for basic_string<wchar_t>.\n\nFrom-SVN: r66466", "tree": {"sha": "76b5e6c0196ad68e42dc6a3e79cbe83c1f1a562f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/76b5e6c0196ad68e42dc6a3e79cbe83c1f1a562f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/85819f7c33a89e4ef17d6c31836cd3c22150ad6c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85819f7c33a89e4ef17d6c31836cd3c22150ad6c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/85819f7c33a89e4ef17d6c31836cd3c22150ad6c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85819f7c33a89e4ef17d6c31836cd3c22150ad6c/comments", "author": null, "committer": null, "parents": [{"sha": "c1853da7d396a05e6946b81051c18c8b5709b3c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1853da7d396a05e6946b81051c18c8b5709b3c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c1853da7d396a05e6946b81051c18c8b5709b3c2"}], "stats": {"total": 201, "additions": 201, "deletions": 0}, "files": [{"sha": "b9269e72e8220809a5a7094f2d3554b5eacfb9d5", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85819f7c33a89e4ef17d6c31836cd3c22150ad6c/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85819f7c33a89e4ef17d6c31836cd3c22150ad6c/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=85819f7c33a89e4ef17d6c31836cd3c22150ad6c", "patch": "@@ -1,3 +1,10 @@\n+2003-05-04  Paolo Carlini  <pcarlini@unitus.it>\n+\n+\t* testsuite/21_strings/basic_string/find/char/3.cc: New\n+\tfile, testing basic_string<char>::find_first_not_of.\n+\t* testsuite/21_strings/basic_string/find/wchar_t/3.cc:\n+\tLikewise for basic_string<wchar_t>.\n+\n 2003-05-03  Loren J. Rittle  <ljrittle@acm.org>\n \n \t* testsuite/thread/pthread1.cc: Remove special case for FreeBSD."}, {"sha": "02647cf6310679b4db28bbcac64693c4c0427717", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/find/char/3.cc", "status": "added", "additions": 97, "deletions": 0, "changes": 97, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85819f7c33a89e4ef17d6c31836cd3c22150ad6c/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Ffind%2Fchar%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85819f7c33a89e4ef17d6c31836cd3c22150ad6c/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Ffind%2Fchar%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Ffind%2Fchar%2F3.cc?ref=85819f7c33a89e4ef17d6c31836cd3c22150ad6c", "patch": "@@ -0,0 +1,97 @@\n+// 2003-05-04  Paolo Carlini  <pcarlini@unitus.it>\n+\n+// Copyright (C) 2003 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// 21.3.6.5 basic_string find_first_not_of\n+\n+#include <string>\n+#include <testsuite_hooks.h>\n+\n+bool test03(void)\n+{\n+  bool test = true;\n+  typedef std::string::size_type csize_type;\n+  csize_type npos = std::string::npos;\n+  csize_type csz01;\n+\n+  const std::string str01(\"Bob Rock, per me\");\n+  const char str_lit01[] = \"Bob Rock\";\n+  std::string str02(\"ovvero Trivi\");\n+  std::string str03(str_lit01);\n+  std::string str04;\n+\n+  // size_type find_first_not_of(const string&, size_type pos = 0) const;\n+  csz01 = str01.find_first_not_of(str01);\n+  VERIFY( csz01 == npos );\n+  csz01 = str01.find_first_not_of(str02, 0);\n+  VERIFY( csz01 == 0 );\n+  csz01 = str01.find_first_not_of(str02, 10);\n+  VERIFY( csz01 == 10 );\n+  csz01 = str01.find_first_not_of(str02, 12);\n+  VERIFY( csz01 == 14 );\n+  csz01 = str01.find_first_not_of(str03, 0);\n+  VERIFY( csz01 == 8 );\n+  csz01 = str01.find_first_not_of(str03, 15);\n+  VERIFY( csz01 == 15 );\n+  csz01 = str01.find_first_not_of(str03, 16);\n+  VERIFY( csz01 == npos );\n+  csz01 = str01.find_first_not_of(str04, 0);\n+  VERIFY( csz01 == 0 );\n+  csz01 = str01.find_first_not_of(str04, 12);\n+  VERIFY( csz01 == 12 );\n+  csz01 = str03.find_first_not_of(str01, 0);\n+  VERIFY( csz01 == npos );\n+  csz01 = str04.find_first_not_of(str02, 0);\n+  VERIFY( csz01 == npos );\n+\n+  // size_type find_first_not_of(const char* s, size_type pos, size_type n) const;\n+  csz01 = str01.find_first_not_of(str_lit01, 0, 0);\n+  VERIFY( csz01 == 0 );\n+  csz01 = str01.find_first_not_of(str_lit01, 0, 10);\n+  VERIFY( csz01 == 8 );\n+  csz01 = str01.find_first_not_of(str_lit01, 10, 0);\n+  VERIFY( csz01 == 10 );\n+\n+  // size_type find_first_not_of(const char* s, size_type pos = 0) const;\n+  csz01 = str01.find_first_not_of(str_lit01);\n+  VERIFY( csz01 == 8 );\n+  csz01 = str02.find_first_not_of(str_lit01, 2);\n+  VERIFY( csz01 == 2 );\n+\n+  // size_type find_first_not_of(char c, size_type pos = 0) const;\n+  csz01 = str01.find_first_not_of('B');\n+  VERIFY( csz01 == 1 );\n+  csz01 = str01.find_first_not_of('o', 1);\n+  VERIFY( csz01 == 2 );\n+  csz01 = str02.find_first_not_of('z');\n+  VERIFY( csz01 == 0 );\n+  csz01 = str04.find_first_not_of('S');\n+  VERIFY( csz01 == npos );\n+\n+#ifdef DEBUG_ASSERT\n+  VERIFY(test);\n+#endif\n+  return test;\n+}\n+\n+int main()\n+{ \n+  test03();\n+  return 0;\n+}"}, {"sha": "5d119ece9c2439a8bd5695bcb732a4acd28fd799", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/find/wchar_t/3.cc", "status": "added", "additions": 97, "deletions": 0, "changes": 97, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85819f7c33a89e4ef17d6c31836cd3c22150ad6c/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Ffind%2Fwchar_t%2F3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85819f7c33a89e4ef17d6c31836cd3c22150ad6c/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Ffind%2Fwchar_t%2F3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Ffind%2Fwchar_t%2F3.cc?ref=85819f7c33a89e4ef17d6c31836cd3c22150ad6c", "patch": "@@ -0,0 +1,97 @@\n+// 2003-05-04  Paolo Carlini  <pcarlini@unitus.it>\n+\n+// Copyright (C) 2003 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// 21.3.6.5 basic_string find_first_not_of\n+\n+#include <string>\n+#include <testsuite_hooks.h>\n+\n+bool test03(void)\n+{\n+  bool test = true;\n+  typedef std::wstring::size_type csize_type;\n+  csize_type npos = std::wstring::npos;\n+  csize_type csz01;\n+\n+  const std::wstring str01(L\"Bob Rock, per me\");\n+  const wchar_t str_lit01[] = L\"Bob Rock\";\n+  std::wstring str02(L\"ovvero Trivi\");\n+  std::wstring str03(str_lit01);\n+  std::wstring str04;\n+\n+  // size_type find_first_not_of(const string&, size_type pos = 0) const;\n+  csz01 = str01.find_first_not_of(str01);\n+  VERIFY( csz01 == npos );\n+  csz01 = str01.find_first_not_of(str02, 0);\n+  VERIFY( csz01 == 0 );\n+  csz01 = str01.find_first_not_of(str02, 10);\n+  VERIFY( csz01 == 10 );\n+  csz01 = str01.find_first_not_of(str02, 12);\n+  VERIFY( csz01 == 14 );\n+  csz01 = str01.find_first_not_of(str03, 0);\n+  VERIFY( csz01 == 8 );\n+  csz01 = str01.find_first_not_of(str03, 15);\n+  VERIFY( csz01 == 15 );\n+  csz01 = str01.find_first_not_of(str03, 16);\n+  VERIFY( csz01 == npos );\n+  csz01 = str01.find_first_not_of(str04, 0);\n+  VERIFY( csz01 == 0 );\n+  csz01 = str01.find_first_not_of(str04, 12);\n+  VERIFY( csz01 == 12 );\n+  csz01 = str03.find_first_not_of(str01, 0);\n+  VERIFY( csz01 == npos );\n+  csz01 = str04.find_first_not_of(str02, 0);\n+  VERIFY( csz01 == npos );\n+\n+  // size_type find_first_not_of(const char* s, size_type pos, size_type n) const;\n+  csz01 = str01.find_first_not_of(str_lit01, 0, 0);\n+  VERIFY( csz01 == 0 );\n+  csz01 = str01.find_first_not_of(str_lit01, 0, 10);\n+  VERIFY( csz01 == 8 );\n+  csz01 = str01.find_first_not_of(str_lit01, 10, 0);\n+  VERIFY( csz01 == 10 );\n+\n+  // size_type find_first_not_of(const char* s, size_type pos = 0) const;\n+  csz01 = str01.find_first_not_of(str_lit01);\n+  VERIFY( csz01 == 8 );\n+  csz01 = str02.find_first_not_of(str_lit01, 2);\n+  VERIFY( csz01 == 2 );\n+\n+  // size_type find_first_not_of(char c, size_type pos = 0) const;\n+  csz01 = str01.find_first_not_of(L'B');\n+  VERIFY( csz01 == 1 );\n+  csz01 = str01.find_first_not_of(L'o', 1);\n+  VERIFY( csz01 == 2 );\n+  csz01 = str02.find_first_not_of(L'z');\n+  VERIFY( csz01 == 0 );\n+  csz01 = str04.find_first_not_of(L'S');\n+  VERIFY( csz01 == npos );\n+\n+#ifdef DEBUG_ASSERT\n+  VERIFY(test);\n+#endif\n+  return test;\n+}\n+\n+int main()\n+{ \n+  test03();\n+  return 0;\n+}"}]}