{"sha": "b082276563252b8e0721f1f9ee84dfaa98bcc620", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjA4MjI3NjU2MzI1MmI4ZTA3MjFmMWY5ZWU4NGRmYWE5OGJjYzYyMA==", "commit": {"author": {"name": "Mark Wielaard", "email": "mark@klomp.org", "date": "2006-01-31T13:32:29Z"}, "committer": {"name": "Mark Wielaard", "email": "mark@gcc.gnu.org", "date": "2006-01-31T13:32:29Z"}, "message": "* NEWS: Add 4.1 updates.\n\nFrom-SVN: r110437", "tree": {"sha": "8322678096593b6019856aa2bdcf6b3c34ebd413", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8322678096593b6019856aa2bdcf6b3c34ebd413"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b082276563252b8e0721f1f9ee84dfaa98bcc620", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b082276563252b8e0721f1f9ee84dfaa98bcc620", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b082276563252b8e0721f1f9ee84dfaa98bcc620", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b082276563252b8e0721f1f9ee84dfaa98bcc620/comments", "author": null, "committer": null, "parents": [{"sha": "261828917dd2102907e9104be54a767405feafb1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/261828917dd2102907e9104be54a767405feafb1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/261828917dd2102907e9104be54a767405feafb1"}], "stats": {"total": 295, "additions": 295, "deletions": 0}, "files": [{"sha": "ec67fd7cb531267358ba51d6d952c69f59f4d5d3", "filename": "libjava/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b082276563252b8e0721f1f9ee84dfaa98bcc620/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b082276563252b8e0721f1f9ee84dfaa98bcc620/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=b082276563252b8e0721f1f9ee84dfaa98bcc620", "patch": "@@ -1,3 +1,7 @@\n+2006-01-31  Mark Wielaard  <mark@klomp.org>\n+ \n+ \t* NEWS: Add 4.1 updates.\n+ \n 2006-01-30  Keith Seitz  <keiths@redhat.com>\n \n \t* include/java-interp.h (insn_index): New declaration."}, {"sha": "f028b6fec569d06fc565e441e2409cdb25bc0737", "filename": "libjava/NEWS", "status": "modified", "additions": 291, "deletions": 0, "changes": 291, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b082276563252b8e0721f1f9ee84dfaa98bcc620/libjava%2FNEWS", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b082276563252b8e0721f1f9ee84dfaa98bcc620/libjava%2FNEWS", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FNEWS?ref=b082276563252b8e0721f1f9ee84dfaa98bcc620", "patch": "@@ -1,3 +1,294 @@\n+*** Changes in GCC 4.1:\n+\n+Core library (libgcj) updates based on GNU Classpath 0.15 - 0.19+\n+\n+- Networking\n+\n+* The java.net.HttpURLConnection implementation no longer buffers the\n+  entire response body in memory.  This means that response bodies\n+  larger than available memory can now be handled.\n+\n+- (N)IO\n+\n+* NIO FileChannel.map implementation, fast bulk put implementation for\n+  DirectByteBuffer (speeds up this method 10x).\n+\n+* FileChannel.lock() and FileChannel.force() implemented.\n+\n+- XML\n+\n+* gnu.xml fix for nodes created outside a namespace context.\n+\n+* Add support for output indenting and cdata-section-elements output\n+  instruction in xml.transform.\n+\n+* xml.xpath corrections for cases where elements/attributes might have\n+  been created in non-namespace-aware mode. Corrections to handling of\n+  XSL variables and minor conformance updates.\n+\n+- AWT\n+\n+* Qt4 configury switches for OS-X. Additional to the --enable-qt-peer, OS-X\n+  users with a Qt4 installation can build the qt-peers with the argument\n+  --with-qt4dir=<Qt4-installation-dir>.\n+\n+* GNU JAWT implementation, the AWT Native Interface, which allows direct\n+  access to native screen resources from within a Canvas's paint method.\n+  GNU Classpath Examples comes with a Demo,\n+  see libjava/classpath/examples/README.\n+\n+* awt.datatransfer updated to 1.5 with supports for FlavorEvents.\n+  The gtk+ awt peers now allow copy/paste of text, images, uris/files\n+  and serialized objects with other applications and tracking\n+  clipboard change events with gtk+ 2.6 (for gtk+ 2.4 only text and\n+  serialized objects are supported). A GNU Classpath Examples\n+  datatransfer Demo was added to show the new functionality.\n+\n+* Split gtk+ awt peers event handling in two threads and improve gdk lock\n+  handling (solves several AWT lock ups).\n+\n+* Speed up awt Image loading.\n+\n+* Better GTK scrollbar peer implementation when using GTK >= 2.6.\n+\n+* Handle image loading errors correctly for gdkpixbuf and MediaTracker.\n+\n+* Better handle GDK lock. Properly prefix gtkpeer native functions (cp_gtk).\n+\n+* GdkGraphics2D has been updated to use Cairo 0.5.x APIs.\n+\n+* BufferedImage and GtkImage rewrites. All image drawing operations\n+  should now work correctly (flipping requires gtk+ >= 2.6)\n+\n+* Future Graphics2D, Image and Text work is documented at:\n+  http://developer.classpath.org/mediation/ClasspathGraphicsImagesText\n+\n+* When gtk+ 2.6 or higher is installed the default log handler will produce\n+  stack traces whenever a WARNING, CRITICAL or ERROR message is produced.\n+\n+- Free Swing\n+\n+* The Swing RepaintManager has been reworked for more efficient painting,\n+  especially for large GUIs.\n+\n+* The Swing layout manager OverlayLayout has been implemented, the BoxLayout\n+  has been rewritten to make use of the SizeRequirements utility class and\n+  caching for more efficient layout.\n+\n+* Improved accessibility support for Swing.\n+\n+* Significant progress has been made in the implementation of the\n+  javax.swing.plaf.metal.* package, with most UI delegates in a working state\n+  now.  Please test this with your own applications and provide feedback that\n+  will help us to improve this package.\n+\n+* The GUI demo (gnu.classpath.examples.swing.Demo) has been extended to\n+  highlight various features in our free-swing implementation. And includes\n+  a look and feel switcher (Metal default, Ocean or GNU).\n+\n+* The javax.swing.plaf.multi.* package is now implemented.\n+\n+* Editing and several key actions for JTree and JTable were implemented.\n+\n+* Lots of icons and look and feel improvements for Free Swing basic and\n+  metal themes were added.  Try running the GNU Classpath Swing Demo in\n+  examples (gnu.classpath.examples.swing.Demo) with:\n+  -Dswing.defaultlaf=javax.swing.plaf.basic.BasicLookAndFeel\n+  -Dswing.defaultlaf=javax.swing.plaf.metal.MetalLookAndFeel\n+\n+* Start of styled text capabilites for java.swing.text.\n+\n+* DefaultMutableTreeNode preorder, postorder, depthFirst and breadthFirst\n+  traversal enumerations implemented.\n+\n+* JInternalFrame colors and titlebar draw properly.\n+\n+* JTree is working up to par (icons, selection and keyboard traversal).\n+\n+* JMenus were made more compatible in visual and programmatic behavior.\n+\n+* JTable changeSelection and multiple selections implemented.\n+\n+* JButton and JToggleButton change states work properly now.\n+\n+* JFileChooser fixes.\n+\n+* revalidate and repaint fixes which make Free Swing much more responsive.\n+\n+* MetalIconFactory implemented.\n+\n+* Free Swing Top-Level Compatibility. JFrame, JDialog, JApplet,\n+  JInternalFrame, and JWindow are now 1.5 compatible in the sense that you\n+  can call add() and setLayout() directly on them, which will have the same\n+  effect as calling getContentPane().add() and getContentPane().setLayout().\n+\n+* The JTree interface has been completed. JTrees now recognizes mouse clicks\n+  and selections work, but the visual implementation is not yet complete.\n+  Work on expansion and collapsing of the tree nodes is being implemented.\n+\n+* BoxLayout works properly now.\n+\n+* Fixed GrayFilter to actually work.\n+\n+* Metal SplitPane implemented.\n+\n+* Lots of free swing text and editor stuff work now.\n+\n+- Free RMI and Corba\n+\n+* The Andrew Watson, Vice President and Technical Director of the Object\n+  Management Group, has officially assigned us 20 bit Vendor Minor Code Id:\n+  0x47430 (\"GC\") that will mark remote Classpath - specific system exceptions.\n+  Obtaining the VMCID means that GNU Classpath now is a recogniseable type of\n+  node in a highly interoperable CORBA world.\n+\n+* Classpath now includes the first working draft to support the RMI over\n+  IIOP protocol. The current implementation is capable for remote invocations,\n+  transferring various Serializables and Externalizables via RMI-IIOP protocol.\n+  It can flatten graphs and, at least for the simple cases, is interoperable\n+  with Sun's jdk 1.5.\n+\n+* org.omg.PortableInterceptor and related functionality in other packages\n+  is now implemented:\n+    - The sever and client interceptors work as required since 1.4.\n+    - The IOR interceptor works as needed for 1.5.\n+\n+* The org.omg.DynamicAny package is completed and passes the prepared tests.\n+\n+* The Portable Object Adapter should now support the output of the\n+  recent IDL to java compilers. These compilers now generate servants and\n+  not CORBA objects as before, making the output depended on the existing\n+  POA implementation. Completing POA means that such code can already be\n+  tried to run on Classpath. Our POA is tested for the following usager\n+  scenarios:\n+    - POA converts servant to the CORBA object.\n+    - Servant provides to the CORBA object.\n+    - POA activates new CORBA object with the given Object Id (byte array)\n+      that is later accessible for the servant.\n+    - During the first call, the ServantActivator provides servant for this\n+      and all subsequent calls on the current object.\n+    - During each call, the ServantLocator provides servant for this call\n+      only.\n+    - ServantLocator or ServantActivator forwards call to another server.\n+    - POA has a single servant, responsible for all objects.\n+    - POA has a default servant, but some objects are explicitly connected\n+      to they specific servants.\n+  The POA is verified using tests from the former cost.omg.org.\n+\n+* The CORBA implementation is now a working prototype that should support\n+  features up till 1.3 inclusive.\n+  We would invite groups writing CORBA dependent applications to\n+  try Classpath implementation, reporting any possible bugs.\n+\n+  The CORBA prototype is interoperable with Sun's implementation v 1.4,\n+  transferring object references, primitive types, narrow and wide\n+  strings, arrays, structures, trees, abstract interfaces and\n+  value types (feature of CORBA 2.3) between these two platforms.\n+  The remote exceptions are transferred and handled correctly.\n+  The stringified object references (IORs) from various sources are\n+  parsed as required.\n+  The transient (for current session) and permanent (till jre restart)\n+  redirections work.\n+  Both Little and Big Endian encoded messages are accepted.\n+  The implementation is verified using tests from the former cost.omg.org.\n+  The current release includes working examples (see the examples directory),\n+  demonstrating the client-server communication, using either CORBA Request\n+  or IDL-based  stub (usually generated by a IDL to java compiler).\n+  These examples also show how to use the Classpath CORBA naming service.\n+  The IDL to java compiler is not yet written, but as our library must be\n+  compatible, it naturally accepts the output of other idlj implementations.\n+\n+- Misc\n+\n+* Updated TimeZone data against Olson tzdata2005l.\n+\n+* Make zip and jar UTF-8 \"clean\".\n+\n+* \"native\" code builds and compiles (warning free) on Darwin and Solaris.\n+\n+* java.util.logging.FileHandler now rotates files.\n+\n+* Start of a generic JDWP framework in gnu/classpath/jdwp.\n+  This is unfinished, but feedback (at classpath@gnu.org) from runtime\n+  hackers is greatly appreciated. Although most of the work is currently\n+  being done around gcj/gij we want this framework to be as VM neutral as\n+  possible. Early design is described in:\n+  http://gcc.gnu.org/ml/java/2005-05/msg00260.html\n+\n+* QT4 AWT peers, enable by giving configure --enable-qt-peer.\n+  Included, but not ready for production yet. They are explicitly\n+  disabled and not supported. But if you want to help with the\n+  development of these new features we are interested in feedback. You\n+  will have to explicitly enable them to try them out\n+  (and they will most likely contain bugs).\n+\n+* Documentation fixes all over the place.\n+  See http://developer.classpath.org/doc/\n+\n+Thanks! The following people helped with the above new features, bug\n+reports, testing and integration:\n+\n+Aaron Luchko (JDWP updates and documentation fixes) Andreas Jaeger\n+(mprec updates) Andreas Tobler (Darwin and Solaris testing and fixing,\n+Qt4 support for Darwin/OSX, Graphics2D support, gtk+ updates.)  Andrew\n+Haley (Serialization and URLClassLoader fixes, gcj build speedups)\n+Andrew John Hughes (Locale and net fixes, URI RFC2986 updates,\n+Serialization fixes, Properties XML support and generic branch work,\n+VMIntegration guide update) Andrew Overholt (File locking) Anthony\n+Balkissoon (JList, Free Swing 1.5 updates and mouse event fixes, Lots\n+of Free Swing work including JTable editing) Anthony Green (MIDI\n+framework, ALSA and DSSI providers) Archie Cobbs (Build fixes, VM\n+interface updates, URLClassLoader updates) Audrius Meskauskas (Lots of\n+Free Corba, RMI and HTML work plus testing and documenting) Bastiaan\n+Huisman (TimeZone bug fixing) Bryce McKinlay (RMI work) Casey Marshall\n+(Crypto algorithm fixes, FileChannel lock, SystemLogger and\n+FileHandler rotate impl, NIO FileChannel.map support, security and\n+policy updates) Chris Burdess (Lots of gnu.xml and http protocol\n+fixes, StAX and dom xml:id support) Christian Schlichtherle (Zip fixes\n+and cleanups) Christian Thalinger (64-bit cleanups, Configuration and\n+VM interface fixes and CACAO integration, fdlibm updates) Dalibor\n+Topic (Better DEBUG support, Build cleanups and Kaffe integration. Qt4\n+build infrastructure, SHA1PRNG and GdkPixbugDecoder updates) Daniel\n+Bonniot (Serialization fixes) David Daney (BitSet bugfixes,\n+HttpURLConnection rewrite and improvements) David Gilbert (Basic and\n+Metal icon and plaf and lots of documenting, Lots of Free Swing and\n+metal theme additions. MetalIconFactory implementation) David\n+Lichteblau (JCL support library global/local reference cleanups) Gael\n+Thomas (VMClassLoader boot packages support sugestions) Gary Benson\n+(MessageFormat fixes) Goffredo Baroncelli (HTTPURLConnection fixes)\n+Guilhem Lavaux (Configuration, thread and channel fixes and Kaffe\n+integration. JCL native Pointer updates. Logger bug fixes) Ingo\n+Proetel (Image, Logger and URLClassLoader updates) Ito Kazumitsu\n+(NetworkInterfaces implementation and updates) Jan Roehrich\n+(BasicTreeUI and JTree fixes) Jeroen Frijters (ClassLoader and nio\n+cleanups, Serialization fixes, better Proxy support, bug fixes and\n+IKVM integration) Julian Scheid (Documentation updates and gjdoc\n+support) Ka-Hing Cheung (TreePath and TreeSelection fixes) Kalle Olavi\n+Niemitalo (Build fixes) Keith Seitz (Lots of JDWP work) Kelley Cook\n+(Build fixes) Kim Ho (JFileChooser implementation) Lillian Angel\n+(JTree implementation and lots Free Swing additions and bug fixes)\n+Mark Wielaard (Bug fixes, packaging and release management, Clipboard\n+implementation, System call interrupts and network timeouts and\n+GdkPixpufDecoder fixes) Martin Cordova (Suggestions for better\n+SocketTimeoutException) Michael Koch (Configuration fixes. Locale\n+updates, bug and build fixes) Nicolas Geoffray (VMClassLoader and\n+AccessController improvements) Olga Rodimina (MenuSelectionManager)\n+Paul Jenner (Better -Werror support) Rainer Orth (Build fixes) Robert\n+Schuster (Documentation updates and beans fixes, TreeNode enumerations\n+and ActionCommand and various fixes, XML and URL, AWT and Free Swing\n+bug fixes) Roman Kennke (BoxLayout, GrayFilter and SplitPane, plus\n+bugfixes all over. Lots of Free Swing work including styled text)\n+Santiago Gala (AccessControlContext fixes) Simon Kitching (String\n+cleanups and optimization suggestions) Stuart Ballard (RMI constant\n+fixes) Sven de Marothy (BMP imageio support, CSS and TextLayout\n+fixes. GtkImage rewrite, 2D, awt, free swing and date/time fixes, Qt4\n+peers) Thomas Fitzsimmons (Lot of upgrades to the gtk+ AWT and cairo\n+2D support. Lots of imageio framework additions, lots of AWT and Free\n+Swing bug fixes) Tom Tromey (Eclipse integration, generics work, lots\n+of bug fixes and gcj integration including coordinating The Big Merge)\n+Wolfgang Baer (GapContent bug fixes) Ziga Mahkovec (Graphics2D\n+upgraded to cairo 0.5 and new regex features)\n+\n *** Changes in GCC 4.0:\n \n * Character encoders and decoders have been added for: iso-8859-6"}]}