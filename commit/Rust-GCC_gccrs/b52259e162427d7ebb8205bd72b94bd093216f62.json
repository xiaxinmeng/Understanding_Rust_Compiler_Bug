{"sha": "b52259e162427d7ebb8205bd72b94bd093216f62", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjUyMjU5ZTE2MjQyN2Q3ZWJiODIwNWJkNzJiOTRiZDA5MzIxNmY2Mg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2012-07-12T22:57:16Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2012-07-12T22:57:16Z"}, "message": "pt.c (instantiate_decl): Check typedefs access here.\n\n\t* pt.c (instantiate_decl): Check typedefs access here.\n\t(instantiate_template_1): Not here.\n\nFrom-SVN: r189444", "tree": {"sha": "562e195bb722152e8c22963f37e60d88db9436cb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/562e195bb722152e8c22963f37e60d88db9436cb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b52259e162427d7ebb8205bd72b94bd093216f62", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b52259e162427d7ebb8205bd72b94bd093216f62", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b52259e162427d7ebb8205bd72b94bd093216f62", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b52259e162427d7ebb8205bd72b94bd093216f62/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "77a24503cb343fb2fd59cdb7b360893e133bae44", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77a24503cb343fb2fd59cdb7b360893e133bae44", "html_url": "https://github.com/Rust-GCC/gccrs/commit/77a24503cb343fb2fd59cdb7b360893e133bae44"}], "stats": {"total": 26, "additions": 15, "deletions": 11}, "files": [{"sha": "c5f23123276fa79fa2dba591895236b64d99ebb1", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b52259e162427d7ebb8205bd72b94bd093216f62/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b52259e162427d7ebb8205bd72b94bd093216f62/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=b52259e162427d7ebb8205bd72b94bd093216f62", "patch": "@@ -1,5 +1,8 @@\n 2012-07-12  Jason Merrill  <jason@redhat.com>\n \n+\t* pt.c (instantiate_decl): Check typedefs access here.\n+\t(instantiate_template_1): Not here.\n+\n \t* pt.c (deduction_tsubst_fntype): Just suppress access checking.\n \t(instantiate_template_1): Set DECL_TI_TEMPLATE before access checking.\n \t(push_deduction_access_scope, pop_deduction_access_scope): Remove."}, {"sha": "95c6464e61b43cbdb3e034f7f3ce440b2014898e", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b52259e162427d7ebb8205bd72b94bd093216f62/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b52259e162427d7ebb8205bd72b94bd093216f62/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=b52259e162427d7ebb8205bd72b94bd093216f62", "patch": "@@ -8334,7 +8334,7 @@ apply_late_template_attributes (tree *decl_p, tree attributes, int attr_flags,\n \n /* Perform (or defer) access check for typedefs that were referenced\n    from within the template TMPL code.\n-   This is a subroutine of instantiate_template and instantiate_class_template.\n+   This is a subroutine of instantiate_decl and instantiate_class_template.\n    TMPL is the template to consider and TARGS is the list of arguments of\n    that template.  */\n \n@@ -14380,12 +14380,6 @@ instantiate_template_1 (tree tmpl, tree orig_args, tsubst_flags_t complain)\n   /* Now we know the specialization, compute access previously\n      deferred.  */\n   push_access_scope (fndecl);\n-\n-  /* Some typedefs referenced from within the template code need to be access\n-     checked at template instantiation time, i.e now. These types were\n-     added to the template at parsing time. Let's get those and perfom\n-     the acces checks then.  */\n-  perform_typedefs_access_check (DECL_TEMPLATE_RESULT (tmpl), targ_ptr);\n   perform_deferred_access_checks ();\n   pop_access_scope (fndecl);\n   pop_deferring_access_checks ();\n@@ -18395,6 +18389,13 @@ instantiate_decl (tree d, int defer_ok,\n       /* Set up context.  */\n       start_preparsed_function (d, NULL_TREE, SF_PRE_PARSED);\n \n+      /* Some typedefs referenced from within the template code need to be\n+\t access checked at template instantiation time, i.e now. These\n+\t types were added to the template at parsing time. Let's get those\n+\t and perform the access checks then.  */\n+      perform_typedefs_access_check (DECL_TEMPLATE_RESULT (gen_tmpl),\n+\t\t\t\t     gen_args);\n+\n       /* Create substitution entries for the parameters.  */\n       subst_decl = DECL_TEMPLATE_RESULT (template_for_substitution (d));\n       tmpl_parm = DECL_ARGUMENTS (subst_decl);"}, {"sha": "a32e48aa0499a590422b8d6315a80b402da87653", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b52259e162427d7ebb8205bd72b94bd093216f62/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b52259e162427d7ebb8205bd72b94bd093216f62/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=b52259e162427d7ebb8205bd72b94bd093216f62", "patch": "@@ -1625,7 +1625,7 @@ finish_non_static_data_member (tree decl, tree object, tree qualifying_scope)\n /* If we are currently parsing a template and we encountered a typedef\n    TYPEDEF_DECL that is being accessed though CONTEXT, this function\n    adds the typedef to a list tied to the current template.\n-   At tempate instantiatin time, that list is walked and access check\n+   At template instantiation time, that list is walked and access check\n    performed for each typedef.\n    LOCATION is the location of the usage point of TYPEDEF_DECL.  */\n "}, {"sha": "a08d7b3a939f98048735a5710d99b8b907a6932f", "filename": "gcc/testsuite/g++.dg/template/typedef11.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b52259e162427d7ebb8205bd72b94bd093216f62/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ftypedef11.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b52259e162427d7ebb8205bd72b94bd093216f62/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ftypedef11.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ftypedef11.C?ref=b52259e162427d7ebb8205bd72b94bd093216f62", "patch": "@@ -18,8 +18,8 @@ template <int>\n int\n bar ()\n {\n-  Beta<0>::Y i = 0;\n-  return Alpha::X ();\n+  Beta<0>::Y i = 0;\t\t// { dg-error \"within this context\" }\n+  return Alpha::X ();\t\t// { dg-error \"within this context\" }\n }\n \n-int i = bar<0> (); // { dg-error \"within this context\" }\n+int i = bar<0> ();"}]}