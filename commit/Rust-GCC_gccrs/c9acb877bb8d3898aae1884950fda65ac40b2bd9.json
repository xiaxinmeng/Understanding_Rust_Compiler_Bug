{"sha": "c9acb877bb8d3898aae1884950fda65ac40b2bd9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzlhY2I4NzdiYjhkMzg5OGFhZTE4ODQ5NTBmZGE2NWFjNDBiMmJkOQ==", "commit": {"author": {"name": "Matthew Gretton-Dann", "email": "matthew.gretton-dann@arm.com", "date": "2013-10-15T13:23:44Z"}, "committer": {"name": "Ramana Radhakrishnan", "email": "ramana@gcc.gnu.org", "date": "2013-10-15T13:23:44Z"}, "message": "Add A profile only multilib make file fragment.\n\n2013-10-15  Matthew Gretton-Dann  <matthew.gretton-dann@arm.com>\n\t    Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>\n\n\t* config/arm/t-aprofile: New file.\n\t* config.gcc: Handle --with-multilib-list option.\n\n\nCo-Authored-By: Ramana Radhakrishnan <ramana.radhakrishnan@arm.com>\n\nFrom-SVN: r203603", "tree": {"sha": "f88cb84bf2c7e5d452edc38d5bd0a0d26f4d43fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f88cb84bf2c7e5d452edc38d5bd0a0d26f4d43fa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c9acb877bb8d3898aae1884950fda65ac40b2bd9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9acb877bb8d3898aae1884950fda65ac40b2bd9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c9acb877bb8d3898aae1884950fda65ac40b2bd9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9acb877bb8d3898aae1884950fda65ac40b2bd9/comments", "author": {"login": "matt-gretton-dann", "id": 53790742, "node_id": "MDQ6VXNlcjUzNzkwNzQy", "avatar_url": "https://avatars.githubusercontent.com/u/53790742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matt-gretton-dann", "html_url": "https://github.com/matt-gretton-dann", "followers_url": "https://api.github.com/users/matt-gretton-dann/followers", "following_url": "https://api.github.com/users/matt-gretton-dann/following{/other_user}", "gists_url": "https://api.github.com/users/matt-gretton-dann/gists{/gist_id}", "starred_url": "https://api.github.com/users/matt-gretton-dann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matt-gretton-dann/subscriptions", "organizations_url": "https://api.github.com/users/matt-gretton-dann/orgs", "repos_url": "https://api.github.com/users/matt-gretton-dann/repos", "events_url": "https://api.github.com/users/matt-gretton-dann/events{/privacy}", "received_events_url": "https://api.github.com/users/matt-gretton-dann/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fffda8d7a38d84c5b5b5a1f2e6dd122e6d585901", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fffda8d7a38d84c5b5b5a1f2e6dd122e6d585901", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fffda8d7a38d84c5b5b5a1f2e6dd122e6d585901"}], "stats": {"total": 220, "additions": 220, "deletions": 0}, "files": [{"sha": "5e2fbcbffce62278f9aafdd14c0263dd8c81360b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9acb877bb8d3898aae1884950fda65ac40b2bd9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9acb877bb8d3898aae1884950fda65ac40b2bd9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c9acb877bb8d3898aae1884950fda65ac40b2bd9", "patch": "@@ -1,3 +1,9 @@\n+2013-10-15  Matthew Gretton-Dann  <matthew.gretton-dann@arm.com>\n+\t    Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>\n+\n+\t* config/arm/t-aprofile: New file.\n+\t* config.gcc: Handle --with-multilib-list option.\n+\n 2013-10-15  Bernd Schmidt  <bernds@codesourcery.com>\n \n \t* reload1.c (reloads_unique_chain_p): Ensure that r1 is the input for"}, {"sha": "022701df53fb39638e0ff9f62c1f9c9b1a3e9cf2", "filename": "gcc/config.gcc", "status": "modified", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9acb877bb8d3898aae1884950fda65ac40b2bd9/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9acb877bb8d3898aae1884950fda65ac40b2bd9/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=c9acb877bb8d3898aae1884950fda65ac40b2bd9", "patch": "@@ -3499,6 +3499,43 @@ case \"${target}\" in\n \t\tif test \"x$with_arch\" != x && test \"x$with_cpu\" != x; then\n \t\t\techo \"Warning: --with-arch overrides --with-cpu=$with_cpu\" 1>&2\n \t\tfi\n+\n+\t\t# Add extra multilibs\n+\t\tif test \"x$with_multilib_list\" != x; then\n+\t\t\tarm_multilibs=`echo $with_multilib_list | sed -e 's/,/ /g'`\n+\t\t\tfor arm_multilib in ${arm_multilibs}; do\n+\t\t\t\tcase ${arm_multilib} in\n+\t\t\t\taprofile)\n+\t\t\t\t# Note that arm/t-aprofile is a\n+\t\t\t\t# stand-alone make file fragment to be\n+\t\t\t\t# used only with itself.  We do not\n+\t\t\t\t# specifically use the\n+\t\t\t\t# TM_MULTILIB_OPTION framework because\n+\t\t\t\t# this shorthand is more\n+\t\t\t\t# pragmatic. Additionally it is only\n+\t\t\t\t# designed to work without any\n+\t\t\t\t# with-cpu, with-arch with-mode\n+\t\t\t\t# with-fpu or with-float options.\n+\t\t\t\t\tif test \"x$with_arch\" != x \\\n+\t\t\t\t\t    || test \"x$with_cpu\" != x \\\n+\t\t\t\t\t    || test \"x$with_float\" != x \\\n+\t\t\t\t\t    || test \"x$with_fpu\" != x \\\n+\t\t\t\t\t    || test \"x$with_mode\" != x ; then\n+\t\t\t\t\t    echo \"Error: You cannot use any of --with-arch/cpu/fpu/float/mode with --with-multilib-list=aprofile\" 1>&2\n+\t\t\t\t\t    exit 1\n+\t\t\t\t\tfi\n+\t\t\t\t\ttmake_file=\"${tmake_file} arm/t-aprofile\"\n+\t\t\t\t\tbreak\n+\t\t\t\t\t;;\n+\t\t\t\tdefault)\n+\t\t\t\t\t;;\n+\t\t\t\t*)\n+\t\t\t\t\techo \"Error: --with-multilib-list=${with_multilib_list} not supported.\" 1>&2\n+\t\t\t\t\texit 1\n+\t\t\t\t\t;;\n+\t\t\t\tesac\n+\t\t\tdone\n+\t\tfi\n \t\t;;\n \n \tfr*-*-*linux*)"}, {"sha": "ce45d4d210a8ab417765446630ae7588047b62dc", "filename": "gcc/config/arm/t-aprofile", "status": "added", "additions": 177, "deletions": 0, "changes": 177, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9acb877bb8d3898aae1884950fda65ac40b2bd9/gcc%2Fconfig%2Farm%2Ft-aprofile", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9acb877bb8d3898aae1884950fda65ac40b2bd9/gcc%2Fconfig%2Farm%2Ft-aprofile", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ft-aprofile?ref=c9acb877bb8d3898aae1884950fda65ac40b2bd9", "patch": "@@ -0,0 +1,177 @@\n+# Copyright (C) 2012-2013 Free Software Foundation, Inc.\n+#\n+# This file is part of GCC.\n+#\n+# GCC is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3, or (at your option)\n+# any later version.\n+#\n+# GCC is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with GCC; see the file COPYING3.  If not see\n+# <http://www.gnu.org/licenses/>.\n+\n+# This is a target makefile fragment that attempts to get\n+# multilibs built for the range of CPU's, FPU's and ABI's that\n+# are relevant for the A-profile architecture.  It should\n+# not be used in conjunction with another make file fragment and\n+# assumes --with-arch, --with-cpu, --with-fpu, --with-float, --with-mode\n+# have their default values during the configure step.  We enforce\n+# this during the top-level configury.\n+\n+MULTILIB_OPTIONS     =\n+MULTILIB_DIRNAMES    =\n+MULTILIB_EXCEPTIONS  =\n+MULTILIB_MATCHES     =\n+MULTILIB_REUSE\t     =\n+\n+# We have the following hierachy:\n+#   ISA: A32 (.) or T32 (thumb)\n+#   Architecture: ARMv7-A (v7-a), ARMv7VE (v7ve), or ARMv8-A (v8-a).\n+#   FPU: VFPv3-D16 (fpv3), NEONv1 (simdv1), VFPv4-D16 (fpv4),\n+#        NEON-VFPV4 (simdvfpv4), NEON for ARMv8 (simdv8), or None (.).\n+#   Float-abi: Soft (.), softfp (softfp), or hard (hardfp).\n+\n+# We use the option -mcpu=cortex-a7 because we do not yet have march=armv7ve\n+# or march=armv7a+virt as a command line option for the compiler.\n+MULTILIB_OPTIONS       += mthumb\n+MULTILIB_DIRNAMES      += thumb\n+\n+MULTILIB_OPTIONS       += march=armv7-a/mcpu=cortex-a7/march=armv8-a\n+MULTILIB_DIRNAMES      += v7-a v7ve v8-a\n+\n+MULTILIB_OPTIONS       += mfpu=vfpv3-d16/mfpu=neon/mfpu=vfpv4-d16/mfpu=neon-vfpv4/mfpu=neon-fp-armv8\n+MULTILIB_DIRNAMES      += fpv3 simdv1 fpv4 simdvfpv4 simdv8\n+\n+MULTILIB_OPTIONS       += mfloat-abi=softfp/mfloat-abi=hard\n+MULTILIB_DIRNAMES      += softfp hard\n+\n+# We don't build no-float libraries with an FPU.\n+MULTILIB_EXCEPTIONS    += *mfpu=vfpv3-d16\n+MULTILIB_EXCEPTIONS    += *mfpu=neon\n+MULTILIB_EXCEPTIONS    += *mfpu=vfpv4-d16\n+MULTILIB_EXCEPTIONS    += *mfpu=neon-vfpv4\n+MULTILIB_EXCEPTIONS    += *mfpu=neon-fp-armv8\n+\n+# We don't build libraries requiring an FPU at the CPU/Arch/ISA level.\n+MULTILIB_EXCEPTIONS    += mfloat-abi=*\n+MULTILIB_EXCEPTIONS    += mfpu=*\n+MULTILIB_EXCEPTIONS    += mthumb/mfloat-abi=*\n+MULTILIB_EXCEPTIONS    += mthumb/mfpu=*\n+MULTILIB_EXCEPTIONS    += *march=armv7-a/mfloat-abi=*\n+MULTILIB_EXCEPTIONS    += *mcpu=cortex-a7/mfloat-abi=*\n+MULTILIB_EXCEPTIONS    += *march=armv8-a/mfloat-abi=*\n+\n+# Ensure the correct FPU variants apply to the correct base architectures.\n+MULTILIB_EXCEPTIONS    += *mcpu=cortex-a7/*mfpu=vfpv3-d16*\n+MULTILIB_EXCEPTIONS    += *mcpu=cortex-a7/*mfpu=neon/*\n+MULTILIB_EXCEPTIONS    += *march=armv8-a/*mfpu=vfpv3-d16*\n+MULTILIB_EXCEPTIONS    += *march=armv8-a/*mfpu=neon/*\n+MULTILIB_EXCEPTIONS    += *march=armv7-a/*mfpu=vfpv4-d16*\n+MULTILIB_EXCEPTIONS    += *march=armv7-a/*mfpu=neon-vfpv4*\n+MULTILIB_EXCEPTIONS    += *march=armv8-a/*mfpu=vfpv4-d16*\n+MULTILIB_EXCEPTIONS    += *march=armv8-a/*mfpu=neon-vfpv4*\n+MULTILIB_EXCEPTIONS    += *march=armv7-a/*mfpu=neon-fp-armv8*\n+MULTILIB_EXCEPTIONS    += *mcpu=cortex-a7/*mfpu=neon-fp-armv8*\n+\n+# CPU Matches\n+MULTILIB_MATCHES       += march?armv7-a=mcpu?cortex-a8\n+MULTILIB_MATCHES       += march?armv7-a=mcpu?cortex-a9\n+MULTILIB_MATCHES       += march?armv7-a=mcpu?cortex-a5\n+MULTILIB_MATCHES       += mcpu?cortex-a7=mcpu?cortex-a15\n+MULTILIB_MATCHES       += march?armv8-a=mcpu?cortex-a53\n+\n+# FPU matches\n+MULTILIB_MATCHES       += mfpu?vfpv3-d16=mfpu?vfpv3\n+MULTILIB_MATCHES       += mfpu?vfpv3-d16=mfpu?vfpv3-fp16\n+MULTILIB_MATCHES       += mfpu?vfpv3-d16=mfpu?vfpv3-fp16-d16\n+MULTILIB_MATCHES       += mfpu?vfpv4-d16=mfpu?vfpv4\n+MULTILIB_MATCHES       += mfpu?neon-fp-armv8=mfpu?crypto-neon-fp-armv8\n+\n+\n+# Map all requests for vfpv3 with a later CPU to vfpv3-d16 v7-a.\n+# So if new CPUs are added above at the newer architecture levels,\n+# do something to map them below here.\n+# We take the approach of mapping down to v7-a regardless of what\n+# the fp option is if the integer architecture brings things down.\n+# This applies to any similar combination at the v7ve and v8-a arch\n+# levels.\n+\n+MULTILIB_REUSE\t      += march.armv7-a/mfpu.vfpv3-d16/mfloat-abi.hard=mcpu.cortex-a7/mfpu.vfpv3-d16/mfloat-abi.hard\n+MULTILIB_REUSE\t      += march.armv7-a/mfpu.vfpv3-d16/mfloat-abi.softfp=mcpu.cortex-a7/mfpu.vfpv3-d16/mfloat-abi.softfp\n+MULTILIB_REUSE\t      += march.armv7-a/mfpu.vfpv3-d16/mfloat-abi.hard=march.armv8-a/mfpu.vfpv3-d16/mfloat-abi.hard\n+MULTILIB_REUSE\t      += march.armv7-a/mfpu.vfpv3-d16/mfloat-abi.softfp=march.armv8-a/mfpu.vfpv3-d16/mfloat-abi.softfp\n+MULTILIB_REUSE\t      += march.armv7-a/mfpu.vfpv3-d16/mfloat-abi.hard=march.armv7-a/mfpu.vfpv4-d16/mfloat-abi.hard\n+MULTILIB_REUSE\t      += march.armv7-a/mfpu.vfpv3-d16/mfloat-abi.softfp=march.armv7-a/mfpu.vfpv4-d16/mfloat-abi.softfp\n+MULTILIB_REUSE\t      += march.armv7-a/mfpu.vfpv3-d16/mfloat-abi.hard=march.armv7-a/mfpu.fp-armv8/mfloat-abi.hard\n+MULTILIB_REUSE\t      += march.armv7-a/mfpu.vfpv3-d16/mfloat-abi.softfp=march.armv7-a/mfpu.fp-armv8/mfloat-abi.softfp\n+MULTILIB_REUSE\t      += march.armv7-a/mfpu.vfpv3-d16/mfloat-abi.hard=march.armv7-a/mfpu.vfpv4/mfloat-abi.hard\n+MULTILIB_REUSE\t      += march.armv7-a/mfpu.vfpv3-d16/mfloat-abi.softfp=march.armv7-a/mfpu.vfpv4/mfloat-abi.softfp\n+\n+\n+MULTILIB_REUSE\t      += march.armv7-a/mfpu.neon/mfloat-abi.hard=mcpu.cortex-a7/mfpu.neon/mfloat-abi.hard\n+MULTILIB_REUSE\t      += march.armv7-a/mfpu.neon/mfloat-abi.softfp=mcpu.cortex-a7/mfpu.neon/mfloat-abi.softfp\n+MULTILIB_REUSE\t      += march.armv7-a/mfpu.neon/mfloat-abi.hard=march.armv8-a/mfpu.neon/mfloat-abi.hard\n+MULTILIB_REUSE\t      += march.armv7-a/mfpu.neon/mfloat-abi.softfp=march.armv8-a/mfpu.neon/mfloat-abi.softfp\n+MULTILIB_REUSE\t      += march.armv7-a/mfpu.neon/mfloat-abi.hard=march.armv7-a/mfpu.neon-vfpv4/mfloat-abi.hard\n+MULTILIB_REUSE\t      += march.armv7-a/mfpu.neon/mfloat-abi.softfp=march.armv7-a/mfpu.neon-vfpv4/mfloat-abi.softfp\n+MULTILIB_REUSE\t      += march.armv7-a/mfpu.neon/mfloat-abi.hard=march.armv7-a/mfpu.neon-fp-armv8/mfloat-abi.hard\n+MULTILIB_REUSE\t      += march.armv7-a/mfpu.neon/mfloat-abi.softfp=march.armv7-a/mfpu.neon-fp-armv8/mfloat-abi.softfp\n+\n+\n+MULTILIB_REUSE\t      += mcpu.cortex-a7/mfpu.vfpv4-d16/mfloat-abi.hard=mcpu.cortex-a7/mfpu.fp-armv8/mfloat-abi.hard\n+MULTILIB_REUSE\t      += mcpu.cortex-a7/mfpu.vfpv4-d16/mfloat-abi.softfp=mcpu.cortex-a7/mfpu.fp-armv8/mfloat-abi.softfp\n+MULTILIB_REUSE\t      += mcpu.cortex-a7/mfpu.vfpv4-d16/mfloat-abi.hard=march.armv8-a/mfpu.vfpv4/mfloat-abi.hard\n+MULTILIB_REUSE\t      += mcpu.cortex-a7/mfpu.vfpv4-d16/mfloat-abi.softfp=march.armv8-a/mfpu.vfpv4/mfloat-abi.softfp\n+MULTILIB_REUSE\t      += mcpu.cortex-a7/mfpu.vfpv4-d16/mfloat-abi.hard=march.armv8-a/mfpu.vfpv4-d16/mfloat-abi.hard\n+MULTILIB_REUSE\t      += mcpu.cortex-a7/mfpu.vfpv4-d16/mfloat-abi.softfp=march.armv8-a/mfpu.vfpv4-d16/mfloat-abi.softfp\n+\n+\n+MULTILIB_REUSE\t      += mcpu.cortex-a7/mfpu.neon-vfpv4/mfloat-abi.hard=march.armv8-a/mfpu.neon-vfpv4/mfloat-abi.hard\n+MULTILIB_REUSE\t      += mcpu.cortex-a7/mfpu.neon-vfpv4/mfloat-abi.softfp=march.armv8-a/mfpu.neon-vfpv4/mfloat-abi.softfp\n+MULTILIB_REUSE\t      += mcpu.cortex-a7/mfpu.neon-vfpv4/mfloat-abi.hard=mcpu.cortex-a7/mfpu.neon-fp-armv8/mfloat-abi.hard\n+MULTILIB_REUSE\t      += mcpu.cortex-a7/mfpu.neon-vfpv4/mfloat-abi.softfp=mcpu.cortex-a7/mfpu.neon-fp-armv8/mfloat-abi.softfp\n+\n+\n+\n+# And again for mthumb.\n+\n+MULTILIB_REUSE\t      += mthumb/march.armv7-a/mfpu.vfpv3-d16/mfloat-abi.hard=mthumb/mcpu.cortex-a7/mfpu.vfpv3-d16/mfloat-abi.hard\n+MULTILIB_REUSE\t      += mthumb/march.armv7-a/mfpu.vfpv3-d16/mfloat-abi.softfp=mthumb/mcpu.cortex-a7/mfpu.vfpv3-d16/mfloat-abi.softfp\n+MULTILIB_REUSE\t      += mthumb/march.armv7-a/mfpu.vfpv3-d16/mfloat-abi.hard=mthumb/march.armv8-a/mfpu.vfpv3-d16/mfloat-abi.hard\n+MULTILIB_REUSE\t      += mthumb/march.armv7-a/mfpu.vfpv3-d16/mfloat-abi.softfp=mthumb/march.armv8-a/mfpu.vfpv3-d16/mfloat-abi.softfp\n+MULTILIB_REUSE\t      += mthumb/march.armv7-a/mfpu.vfpv3-d16/mfloat-abi.hard=mthumb/march.armv7-a/mfpu.vfpv4-d16/mfloat-abi.hard\n+MULTILIB_REUSE\t      += mthumb/march.armv7-a/mfpu.vfpv3-d16/mfloat-abi.softfp=mthumb/march.armv7-a/mfpu.vfpv4-d16/mfloat-abi.softfp\n+MULTILIB_REUSE\t      += mthumb/march.armv7-a/mfpu.vfpv3-d16/mfloat-abi.hard=mthumb/march.armv7-a/mfpu.fp-armv8/mfloat-abi.hard\n+MULTILIB_REUSE\t      += mthumb/march.armv7-a/mfpu.vfpv3-d16/mfloat-abi.softfp=mthumb/march.armv7-a/mfpu.fp-armv8/mfloat-abi.softfp\n+MULTILIB_REUSE\t      += mthumb/march.armv7-a/mfpu.vfpv3-d16/mfloat-abi.hard=mthumb/march.armv7-a/mfpu.vfpv4/mfloat-abi.hard\n+MULTILIB_REUSE\t      += mthumb/march.armv7-a/mfpu.vfpv3-d16/mfloat-abi.softfp=mthumb/march.armv7-a/mfpu.vfpv4/mfloat-abi.softfp\n+\n+\n+MULTILIB_REUSE\t      += mthumb/march.armv7-a/mfpu.neon/mfloat-abi.hard=mthumb/mcpu.cortex-a7/mfpu.neon/mfloat-abi.hard\n+MULTILIB_REUSE\t      += mthumb/march.armv7-a/mfpu.neon/mfloat-abi.softfp=mthumb/mcpu.cortex-a7/mfpu.neon/mfloat-abi.softfp\n+MULTILIB_REUSE\t      += mthumb/march.armv7-a/mfpu.neon/mfloat-abi.hard=mthumb/march.armv8-a/mfpu.neon/mfloat-abi.hard\n+MULTILIB_REUSE\t      += mthumb/march.armv7-a/mfpu.neon/mfloat-abi.softfp=mthumb/march.armv8-a/mfpu.neon/mfloat-abi.softfp\n+MULTILIB_REUSE\t      += mthumb/march.armv7-a/mfpu.neon/mfloat-abi.hard=mthumb/march.armv7-a/mfpu.neon-vfpv4/mfloat-abi.hard\n+MULTILIB_REUSE\t      += mthumb/march.armv7-a/mfpu.neon/mfloat-abi.softfp=mthumb/march.armv7-a/mfpu.neon-vfpv4/mfloat-abi.softfp\n+MULTILIB_REUSE\t      += mthumb/march.armv7-a/mfpu.neon/mfloat-abi.hard=mthumb/march.armv7-a/mfpu.neon-fp-armv8/mfloat-abi.hard\n+MULTILIB_REUSE\t      += mthumb/march.armv7-a/mfpu.neon/mfloat-abi.softfp=mthumb/march.armv7-a/mfpu.neon-fp-armv8/mfloat-abi.softfp\n+\n+\n+MULTILIB_REUSE\t      += mthumb/mcpu.cortex-a7/mfpu.vfpv4-d16/mfloat-abi.hard=mthumb/mcpu.cortex-a7/mfpu.fp-armv8/mfloat-abi.hard\n+MULTILIB_REUSE\t      += mthumb/mcpu.cortex-a7/mfpu.vfpv4-d16/mfloat-abi.softfp=mthumb/mcpu.cortex-a7/mfpu.fp-armv8/mfloat-abi.softfp\n+MULTILIB_REUSE\t      += mthumb/mcpu.cortex-a7/mfpu.vfpv4-d16/mfloat-abi.hard=mthumb/march.armv8-a/mfpu.vfpv4/mfloat-abi.hard\n+MULTILIB_REUSE\t      += mthumb/mcpu.cortex-a7/mfpu.vfpv4-d16/mfloat-abi.softfp=mthumb/march.armv8-a/mfpu.vfpv4/mfloat-abi.softfp\n+MULTILIB_REUSE\t      += mthumb/mcpu.cortex-a7/mfpu.vfpv4-d16/mfloat-abi.hard=mthumb/march.armv8-a/mfpu.vfpv4-d16/mfloat-abi.hard\n+MULTILIB_REUSE\t      += mthumb/mcpu.cortex-a7/mfpu.vfpv4-d16/mfloat-abi.softfp=mthumb/march.armv8-a/mfpu.vfpv4-d16/mfloat-abi.softfp\n+\n+\n+MULTILIB_REUSE\t      += mthumb/mcpu.cortex-a7/mfpu.neon-vfpv4/mfloat-abi.hard=mthumb/march.armv8-a/mfpu.neon-vfpv4/mfloat-abi.hard\n+MULTILIB_REUSE\t      += mthumb/mcpu.cortex-a7/mfpu.neon-vfpv4/mfloat-abi.softfp=mthumb/march.armv8-a/mfpu.neon-vfpv4/mfloat-abi.softfp\n+MULTILIB_REUSE\t      += mthumb/mcpu.cortex-a7/mfpu.neon-vfpv4/mfloat-abi.hard=mthumb/mcpu.cortex-a7/mfpu.neon-fp-armv8/mfloat-abi.hard\n+MULTILIB_REUSE\t      += mthumb/mcpu.cortex-a7/mfpu.neon-vfpv4/mfloat-abi.softfp=mthumb/mcpu.cortex-a7/mfpu.neon-fp-armv8/mfloat-abi.softfp"}]}