{"sha": "d144d602d768c2e9462b9b23a155119b4702c156", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDE0NGQ2MDJkNzY4YzJlOTQ2MmI5YjIzYTE1NTExOWI0NzAyYzE1Ng==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1993-01-04T21:58:36Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1993-01-04T21:58:36Z"}, "message": "Initial revision\n\nFrom-SVN: r3090", "tree": {"sha": "0e4ecadcfe66e852fcf6c8561448f449f4045370", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0e4ecadcfe66e852fcf6c8561448f449f4045370"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d144d602d768c2e9462b9b23a155119b4702c156", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d144d602d768c2e9462b9b23a155119b4702c156", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d144d602d768c2e9462b9b23a155119b4702c156", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d144d602d768c2e9462b9b23a155119b4702c156/comments", "author": null, "committer": null, "parents": [{"sha": "7ee5a2184c17208285d5b6bbc1ab318f10c780e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ee5a2184c17208285d5b6bbc1ab318f10c780e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ee5a2184c17208285d5b6bbc1ab318f10c780e9"}], "stats": {"total": 269, "additions": 269, "deletions": 0}, "files": [{"sha": "c28039d7065418cee7408bbe03776bb64f5e8bd1", "filename": "gcc/fixinc.sco", "status": "added", "additions": 269, "deletions": 0, "changes": 269, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d144d602d768c2e9462b9b23a155119b4702c156/gcc%2Ffixinc.sco", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d144d602d768c2e9462b9b23a155119b4702c156/gcc%2Ffixinc.sco", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc.sco?ref=d144d602d768c2e9462b9b23a155119b4702c156", "patch": "@@ -0,0 +1,269 @@\n+#! /bin/sh\n+#\n+#   fixinc.sco  --  Install modified versions of SCO system include\n+#   files.\n+#\n+#   Based on fixinc.svr4 script by Ron Guilmette (rfg@ncd.com) (SCO\n+#   modifications by Ian Lance Taylor (ian@airs.com)).\n+#\n+# This file is part of GNU CC.\n+# \n+# GNU CC is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 2, or (at your option)\n+# any later version.\n+# \n+# GNU CC is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+# \n+# You should have received a copy of the GNU General Public License\n+# along with GNU CC; see the file COPYING.  If not, write to\n+# the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.\n+#\n+#\tThis script munges the native include files provided with SCO\n+#\t3.2v4 systems so as to provide a reasonable namespace when\n+#\tcompiling with gcc.  The header files by default do not\n+#\tprovide many essential definitions and declarations if\n+#\t__STDC__ is 1.  This script modifies the header files to check\n+#\tfor __STRICT_ANSI__ being defined instead.  Once munged, the\n+#\tresulting new system include files are placed in a directory\n+#\tthat GNU C will search *before* searching the /usr/include\n+#\tdirectory.  This script should work properly for most SCO\n+#\t3.2v4 systems.  For other types of systems, you should use the\n+#\t`fixincludes' or the `fixinc.svr4' script instead.\n+#\n+#\tSee README-fixinc for more information.\n+\n+# Directory where gcc sources (and sometimes special include files) live.\n+SRCDIR=${3-${SRCDIR-.}}\n+\n+# Directory containing the original header files.\n+INPUT=${2-${INPUT-/usr/include}}\n+\n+# Fail if no arg to specify a directory for the output.\n+if [ x$1 = x ]\n+then echo fixincludes: no output directory specified\n+exit 1\n+fi\n+\n+# Directory in which to store the results.\n+LIB=${1?\"fixincludes: output directory not specified\"}\n+\n+# Make sure it exists.\n+if [ ! -d $LIB ]; then\n+  mkdir $LIB || exit 1\n+fi\n+\n+ORIG_DIR=`pwd`\n+\n+# Make LIB absolute.\n+cd $LIB; LIB=`pwd`\n+\n+echo 'Building fixincludes in ' ${LIB}\n+\n+# Determine whether this filesystem has symbolic links.\n+if ln -s X $LIB/ShouldNotExist 2>/dev/null; then\n+  rm -f $LIB/ShouldNotExist\n+  LINKS=true\n+else\n+  LINKS=false\n+fi\n+\n+echo 'Making directories:'\n+cd ${INPUT}\n+if $LINKS; then\n+  files=`ls -LR | sed -n s/:$//p`\n+else\n+  files=`find . -type d -print | sed '/^.$/d'`\n+fi\n+for file in $files; do\n+  rm -rf $LIB/$file\n+  if [ ! -d $LIB/$file ]\n+  then mkdir $LIB/$file\n+  fi\n+done\n+\n+# treetops gets an alternating list\n+# of old directories to copy\n+# and the new directories to copy to.\n+treetops=\"${INPUT} ${LIB}\"\n+\n+if $LINKS; then\n+  echo 'Making internal symbolic directory links'\n+  for file in $files; do\n+    dest=`ls -ld $file | sed -n 's/.*-> //p'`\n+    if [ \"$dest\" ]; then    \n+      cwd=`pwd`\n+      # In case $dest is relative, get to $file's dir first.\n+      cd ${INPUT}\n+      cd `echo ./$file | sed -n 's&[^/]*$&&p'`\n+      # Check that the target directory exists.\n+      # Redirections changed to avoid bug in sh on Ultrix.\n+      (cd $dest) > /dev/null 2>&1\n+      if [ $? = 0 ]; then\n+\tcd $dest\n+\t# X gets the dir that the link actually leads to.\n+\tx=`pwd`\n+\t# If link leads back into ${INPUT},\n+\t# make a similar link here.\n+\tif expr $x : \"${INPUT}/.*\" > /dev/null; then\n+\t  # Y gets the actual target dir name, relative to ${INPUT}.\n+\t  y=`echo $x | sed -n \"s&${INPUT}/&&p\"`\n+\t  echo $file '->' $y ': Making link'\n+\t  rm -fr ${LIB}/$file > /dev/null 2>&1\n+\t  ln -s ${LIB}/$y ${LIB}/$file > /dev/null 2>&1\n+\telse\n+\t  # If the link is to outside ${INPUT},\n+\t  # treat this directory as if it actually contained the files.\n+# This line used to have $dest instead of $x.\n+# $dest seemed to be wrong for links found in subdirectories\n+# of ${INPUT}.  Does this change break anything?\n+\t  treetops=\"$treetops $x ${LIB}/$file\"\n+\tfi\n+      fi\n+      cd $cwd\n+    fi\n+  done\n+fi\n+\n+set - $treetops\n+while [ $# != 0 ]; do\n+  # $1 is an old directory to copy, and $2 is the new directory to copy to.\n+  echo \"Finding header files in $1:\"\n+  cd ${INPUT}\n+  cd $1\n+  files=`find . -name '*.h' -type f -print`\n+  echo 'Checking header files:'\n+  for file in $files; do\n+    if egrep '!__STDC__' $file >/dev/null; then\n+      echo Fixing $file\n+      if [ -r $file ]; then\n+\tcp $file $2/$file >/dev/null 2>&1 || echo \"Can't copy $file\"\n+\tchmod +w $2/$file\n+\tchmod a+r $2/$file\n+\n+# The following have been removed from the sed command below\n+# because it is more useful to leave these things in.\n+# The only reason to remove them was for -pedantic,\n+# which isn't much of a reason. -- rms.\n+#\t  /^[ \t]*#[ \t]*ident/d\n+\n+\tsed -e '\n+\t  s/!__STDC__/!defined (__STRICT_ANSI__)/g\n+\t' $2/$file > $2/$file.sed\n+\tmv $2/$file.sed $2/$file\n+\tif cmp $file $2/$file >/dev/null 2>&1; then\n+\t   rm $2/$file\n+\tfi\n+      fi\n+    fi\n+  done\n+  shift; shift\n+done\n+\n+# Fix first broken decl of getcwd present on some svr4 systems.\n+\n+file=stdlib.h\n+base=`basename $file`\n+if [ -r ${LIB}/$file ]; then\n+  file_to_fix=${LIB}/$file\n+else\n+  if [ -r ${INPUT}/$file ]; then\n+    file_to_fix=${INPUT}/$file\n+  else\n+    file_to_fix=\"\"\n+  fi\n+fi\n+if [ \\! -z \"$file_to_fix\" ]; then\n+  echo Checking $file_to_fix\n+  sed -e 's/getcwd(char \\{0,\\}\\*, int)/getcwd(char *, size_t)/' $file_to_fix > /tmp/$base\n+  if cmp $file_to_fix /tmp/$base >/dev/null 2>&1; then \\\n+    true\n+  else\n+    echo Fixed $file_to_fix\n+    rm -f ${LIB}/$file\n+    cp /tmp/$base ${LIB}/$file\n+    chmod a+r ${LIB}/$file\n+  fi\n+  rm -f /tmp/$base\n+fi\n+\n+# Fix second broken decl of getcwd present on some svr4 systems.  Also\n+# fix the incorrect decl of profil present on some svr4 systems.\n+\n+file=unistd.h\n+base=`basename $file`\n+if [ -r ${LIB}/$file ]; then\n+  file_to_fix=${LIB}/$file\n+else\n+  if [ -r ${INPUT}/$file ]; then\n+    file_to_fix=${INPUT}/$file\n+  else\n+    file_to_fix=\"\"\n+  fi\n+fi\n+if [ \\! -z \"$file_to_fix\" ]; then\n+  echo Checking $file_to_fix\n+  sed -e 's/getcwd(char \\*, int)/getcwd(char *, size_t)/' $file_to_fix \\\n+    | sed -e 's/profil(unsigned short \\*, unsigned int, unsigned int, unsigned int)/profil(unsigned short *, size_t, int, unsigned)/' > /tmp/$base\n+  if cmp $file_to_fix /tmp/$base >/dev/null 2>&1; then \\\n+    true\n+  else\n+    echo Fixed $file_to_fix\n+    rm -f ${LIB}/$file\n+    cp /tmp/$base ${LIB}/$file\n+    chmod a+r ${LIB}/$file\n+  fi\n+  rm -f /tmp/$base\n+fi\n+\n+# Fix an error in this file: the #if says _cplusplus, not the double\n+# underscore __cplusplus that it should be\n+file=tinfo.h\n+if [ -r $file ] && [ ! -r ${LIB}/$file ]; then\n+  mkdir ${LIB}/rpcsvc 2>/dev/null\n+  cp $file ${LIB}/$file >/dev/null 2>&1 || echo \"Can't copy $file\"\n+  chmod +w ${LIB}/$file 2>/dev/null\n+  chmod a+r ${LIB}/$file 2>/dev/null\n+fi\n+\n+if [ -r ${LIB}/$file ]; then\n+  echo Fixing $file, __cplusplus macro\n+  sed -e 's/[ \t]_cplusplus/ __cplusplus/' ${LIB}/$file > ${LIB}/${file}.sed\n+  rm -f ${LIB}/$file; mv ${LIB}/${file}.sed ${LIB}/$file\n+  if cmp $file ${LIB}/$file >/dev/null 2>&1; then\n+    rm ${LIB}/$file\n+  fi\n+fi\n+\n+echo 'Removing unneeded directories:'\n+cd $LIB\n+files=`find . -type d -print | sort -r`\n+for file in $files; do\n+  rmdir $LIB/$file > /dev/null 2>&1\n+done\n+\n+if $LINKS; then\n+  echo 'Making internal symbolic non-directory links'\n+  cd ${INPUT}\n+  files=`find . -type l -print`\n+  for file in $files; do\n+    dest=`ls -ld $file | sed -n 's/.*-> //p'`\n+    if expr \"$dest\" : '[^/].*' > /dev/null; then    \n+      target=${LIB}/`echo file | sed \"s|[^/]*\\$|$dest|\"`\n+      if [ -f $target ]; then\n+        ln -s $dest ${LIB}/$file >/dev/null 2>&1\n+      fi\n+    fi\n+  done\n+fi\n+\n+cd ${ORIG_DIR}\n+\n+echo 'Replacing <sys/byteorder.h>'\n+rm -f ${LIB}/sys/byteorder.h\n+cp ${SRCDIR}/byteorder.h ${LIB}/sys/byteorder.h\n+\n+exit 0"}]}