{"sha": "6a5fd0f8c1ecdae5c74fd058c524efdc44f87b80", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmE1ZmQwZjhjMWVjZGFlNWM3NGZkMDU4YzUyNGVmZGM0NGY4N2I4MA==", "commit": {"author": {"name": "Thomas Preud'homme", "email": "thomas.preudhomme@arm.com", "date": "2015-02-04T01:54:47Z"}, "committer": {"name": "Thomas Preud'homme", "email": "thopre01@gcc.gnu.org", "date": "2015-02-04T01:54:47Z"}, "message": "re PR testsuite/64796 (effective target bswap64 globally caches target-specific use of lp64)\n\n2015-02-04  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n\n    PR testsuite/64796\n    * lib/target-supports.exp (check_effective_target_bswap64): Do not\n    cache result in a global variable.  Include all 32-bit targets for\n    bswap64 tests.\n\nFrom-SVN: r220388", "tree": {"sha": "69b860b7aedd53d0f689e9da648086476a333913", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/69b860b7aedd53d0f689e9da648086476a333913"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6a5fd0f8c1ecdae5c74fd058c524efdc44f87b80", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a5fd0f8c1ecdae5c74fd058c524efdc44f87b80", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a5fd0f8c1ecdae5c74fd058c524efdc44f87b80", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a5fd0f8c1ecdae5c74fd058c524efdc44f87b80/comments", "author": {"login": "RoboTux", "id": 272327, "node_id": "MDQ6VXNlcjI3MjMyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/272327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RoboTux", "html_url": "https://github.com/RoboTux", "followers_url": "https://api.github.com/users/RoboTux/followers", "following_url": "https://api.github.com/users/RoboTux/following{/other_user}", "gists_url": "https://api.github.com/users/RoboTux/gists{/gist_id}", "starred_url": "https://api.github.com/users/RoboTux/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RoboTux/subscriptions", "organizations_url": "https://api.github.com/users/RoboTux/orgs", "repos_url": "https://api.github.com/users/RoboTux/repos", "events_url": "https://api.github.com/users/RoboTux/events{/privacy}", "received_events_url": "https://api.github.com/users/RoboTux/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b70695c53000201bcd937378178ffaa3c2439d32", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b70695c53000201bcd937378178ffaa3c2439d32", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b70695c53000201bcd937378178ffaa3c2439d32"}], "stats": {"total": 22, "additions": 11, "deletions": 11}, "files": [{"sha": "ad2633b46fa2822e83d104f6bdba5e0c0d127f78", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a5fd0f8c1ecdae5c74fd058c524efdc44f87b80/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a5fd0f8c1ecdae5c74fd058c524efdc44f87b80/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6a5fd0f8c1ecdae5c74fd058c524efdc44f87b80", "patch": "@@ -1,3 +1,10 @@\n+2015-02-04  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n+\n+\tPR testsuite/64796\n+\t* lib/target-supports.exp (check_effective_target_bswap64): Do not\n+\tcache result in a global variable.  Include all 32-bit targets for\n+\tbswap64 tests.\n+\n 2015-02-03  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR rtl-optimization/64756"}, {"sha": "ce7043acac2d540602709543e7935cdd38d29b27", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 4, "deletions": 11, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a5fd0f8c1ecdae5c74fd058c524efdc44f87b80/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a5fd0f8c1ecdae5c74fd058c524efdc44f87b80/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=6a5fd0f8c1ecdae5c74fd058c524efdc44f87b80", "patch": "@@ -5049,18 +5049,11 @@ proc check_effective_target_bswap32 { } {\n proc check_effective_target_bswap64 { } {\n     global et_bswap64_saved\n \n-    if [info exists et_bswap64_saved] {\n-        verbose \"check_effective_target_bswap64: using cached result\" 2\n-    } else {\n-\tset et_bswap64_saved 0\n-\tif { [is-effective-target bswap]\n-\t     && [is-effective-target lp64] } {\n-\t   set et_bswap64_saved 1\n-\t}\n+    # expand_unop can expand 64-bit byte swap on 32-bit targets\n+    if { [is-effective-target bswap] && [is-effective-target int32plus] } {\n+\treturn 1\n     }\n-\n-    verbose \"check_effective_target_bswap64: returning $et_bswap64_saved\" 2\n-    return $et_bswap64_saved\n+    return 0\n }\n \n # Return 1 if the target supports atomic operations on \"int\" and \"long\"."}]}