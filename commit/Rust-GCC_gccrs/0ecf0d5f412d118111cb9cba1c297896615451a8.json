{"sha": "0ecf0d5f412d118111cb9cba1c297896615451a8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGVjZjBkNWY0MTJkMTE4MTExY2I5Y2JhMWMyOTc4OTY2MTU0NTFhOA==", "commit": {"author": {"name": "Devang Patel", "email": "dpatel@apple.com", "date": "2004-10-14T18:19:47Z"}, "committer": {"name": "Devang Patel", "email": "dpatel@gcc.gnu.org", "date": "2004-10-14T18:19:47Z"}, "message": "tree-if-conv.c (process_phi_nodes): Process latch block.\n\n       * tree-if-conv.c (process_phi_nodes): Process latch block.\n       (combine_blocks): Process latch block and update loop structure.\n\n       * gcc.dg/pr17635.c : New test.\n\nFrom-SVN: r89045", "tree": {"sha": "e261933f35d83b197a74e8a7cd7a25697a6aed21", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e261933f35d83b197a74e8a7cd7a25697a6aed21"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0ecf0d5f412d118111cb9cba1c297896615451a8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ecf0d5f412d118111cb9cba1c297896615451a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ecf0d5f412d118111cb9cba1c297896615451a8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ecf0d5f412d118111cb9cba1c297896615451a8/comments", "author": null, "committer": null, "parents": [{"sha": "1399eca1907b6fe3a191c586211bcfcc46f47b4d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1399eca1907b6fe3a191c586211bcfcc46f47b4d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1399eca1907b6fe3a191c586211bcfcc46f47b4d"}], "stats": {"total": 26, "additions": 21, "deletions": 5}, "files": [{"sha": "9762b14e370f10d9b402e8c81bd7d4a0ae5fd8ea", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ecf0d5f412d118111cb9cba1c297896615451a8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ecf0d5f412d118111cb9cba1c297896615451a8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0ecf0d5f412d118111cb9cba1c297896615451a8", "patch": "@@ -1,3 +1,9 @@\n+2004-10-14  Devang Patel  <dpatel@apple.com>\n+\n+\tPR 17635\n+\t* tree-if-conv.c (process_phi_nodes): Process latch block.\n+\t(combine_blocks): Process latch block and update loop structure.\n+\t\n 2004-10-14  Olga Golovanevsky  <olga@il.ibm.com>\n \n \t* tree-vectorizer.c (vect_generate_tmps_on_preheader):"}, {"sha": "0932934fd73bb6ab0a072c7ee72470df1f6f54d6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ecf0d5f412d118111cb9cba1c297896615451a8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ecf0d5f412d118111cb9cba1c297896615451a8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0ecf0d5f412d118111cb9cba1c297896615451a8", "patch": "@@ -1,3 +1,8 @@\n+2004-10-14  Devang Patel  <dpatel@apple.com>\n+\n+\tPR 17635\n+\t* gcc.dg/pr17635.c : New test.\n+\t\n 2004-10-14  Olga GOlovanevsky  <olga@il.ibm.com>\n \n \t* testsuite/gcc.dg/vect/vect-28.c : Remove xfail."}, {"sha": "bb2ab9cf1a8198d0f7b3c4ef38c056630d9839e1", "filename": "gcc/tree-if-conv.c", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ecf0d5f412d118111cb9cba1c297896615451a8/gcc%2Ftree-if-conv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ecf0d5f412d118111cb9cba1c297896615451a8/gcc%2Ftree-if-conv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-if-conv.c?ref=0ecf0d5f412d118111cb9cba1c297896615451a8", "patch": "@@ -815,7 +815,7 @@ process_phi_nodes (struct loop *loop)\n       basic_block true_bb = NULL;\n       bb = ifc_bbs[i];\n \n-      if (bb == loop->header || bb == loop->latch)\n+      if (bb == loop->header)\n \tcontinue;\n \n       phi = phi_nodes (bb);\n@@ -863,9 +863,6 @@ combine_blocks (struct loop *loop)\n \n       bb = ifc_bbs[i];\n \n-      if (bb == loop->latch)\n-\tcontinue;\n-\n       if (!exit_bb && bb_with_exit_edge_p (bb))\n \t  exit_bb = bb;\n \n@@ -891,6 +888,9 @@ combine_blocks (struct loop *loop)\n \t  continue;\n \t}\n \n+      if (bb == loop->latch && empty_block_p (bb))\n+\tcontinue;\n+\n       /* It is time to remove this basic block.\t First remove edges.  */\n       while (EDGE_COUNT (bb->succs) > 0)\n \tssa_remove_edge (EDGE_SUCC (bb, 0));\n@@ -921,14 +921,19 @@ combine_blocks (struct loop *loop)\n \tdelete_from_dominance_info (CDI_POST_DOMINATORS, bb);\n \n       /* Remove basic block.  */\n+      if (bb == loop->latch)\n+\tloop->latch = merge_target_bb;\n       remove_bb_from_loops (bb);\n       expunge_block (bb);\n     }\n \n   /* Now if possible, merge loop header and block with exit edge.\n      This reduces number of basic blocks to 2. Auto vectorizer addresses\n      loops with two nodes only.  FIXME: Use cleanup_tree_cfg().  */\n-  if (exit_bb != loop->latch && empty_block_p (loop->latch))\n+  if (exit_bb\n+      && loop->header != loop->latch\n+      && exit_bb != loop->latch \n+      && empty_block_p (loop->latch))\n     {\n       if (can_merge_blocks_p (loop->header, exit_bb))\n \t{"}]}