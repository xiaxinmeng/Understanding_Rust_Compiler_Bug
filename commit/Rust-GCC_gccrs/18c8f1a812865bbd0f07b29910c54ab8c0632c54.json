{"sha": "18c8f1a812865bbd0f07b29910c54ab8c0632c54", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MThjOGYxYTgxMjg2NWJiZDBmMDdiMjk5MTBjNTRhYjhjMDYzMmM1NA==", "commit": {"author": {"name": "Vladimir Makarov", "email": "vmakarov@redhat.com", "date": "2015-12-04T19:23:21Z"}, "committer": {"name": "Vladimir Makarov", "email": "vmakarov@gcc.gnu.org", "date": "2015-12-04T19:23:21Z"}, "message": "re PR rtl-optimization/68349 (ice in decompose_normal_address with -O2 at rtlanal.c:6086)\n\n2015-12-04  Vladimir Makarov  <vmakarov@redhat.com>\n\n\tPR rtl-optimization/68349\n\t* lra-eliminations.c (move_plus_up): New function.\n\t(lra_eliminate_regs_1): Use the function.\n\n2015-12-04  Vladimir Makarov  <vmakarov@redhat.com>\n\n\tPR rtl-optimization/68349\n\t* gcc.target/i386/pr68349.c: New test.\n\nFrom-SVN: r231300", "tree": {"sha": "9fa2dc2b4803b9e2a57fc353b8d1eeecee987348", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9fa2dc2b4803b9e2a57fc353b8d1eeecee987348"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/18c8f1a812865bbd0f07b29910c54ab8c0632c54", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18c8f1a812865bbd0f07b29910c54ab8c0632c54", "html_url": "https://github.com/Rust-GCC/gccrs/commit/18c8f1a812865bbd0f07b29910c54ab8c0632c54", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18c8f1a812865bbd0f07b29910c54ab8c0632c54/comments", "author": {"login": "vnmakarov", "id": 9855671, "node_id": "MDQ6VXNlcjk4NTU2NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/9855671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnmakarov", "html_url": "https://github.com/vnmakarov", "followers_url": "https://api.github.com/users/vnmakarov/followers", "following_url": "https://api.github.com/users/vnmakarov/following{/other_user}", "gists_url": "https://api.github.com/users/vnmakarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnmakarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnmakarov/subscriptions", "organizations_url": "https://api.github.com/users/vnmakarov/orgs", "repos_url": "https://api.github.com/users/vnmakarov/repos", "events_url": "https://api.github.com/users/vnmakarov/events{/privacy}", "received_events_url": "https://api.github.com/users/vnmakarov/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4ff3145ae198ae8f4e2c9c60e2df0267ac52329b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ff3145ae198ae8f4e2c9c60e2df0267ac52329b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ff3145ae198ae8f4e2c9c60e2df0267ac52329b"}], "stats": {"total": 67, "additions": 66, "deletions": 1}, "files": [{"sha": "81eb73fb893da300f2cd51e51a387f2b5825794c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18c8f1a812865bbd0f07b29910c54ab8c0632c54/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18c8f1a812865bbd0f07b29910c54ab8c0632c54/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=18c8f1a812865bbd0f07b29910c54ab8c0632c54", "patch": "@@ -1,3 +1,9 @@\n+2015-12-04  Vladimir Makarov  <vmakarov@redhat.com>\n+\n+\tPR rtl-optimization/68349\n+\t* lra-eliminations.c (move_plus_up): New function.\n+\t(lra_eliminate_regs_1): Use the function.\n+\n 2015-12-04  Nathan Sidwell  <nathan@acm.org>\n \n \t* config/nvptx/nvptx.c (nvptx_assemble_decl_begin): New,"}, {"sha": "c639d364fa195bfc40b67e5fb5eadddccad904cb", "filename": "gcc/lra-eliminations.c", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18c8f1a812865bbd0f07b29910c54ab8c0632c54/gcc%2Flra-eliminations.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18c8f1a812865bbd0f07b29910c54ab8c0632c54/gcc%2Flra-eliminations.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra-eliminations.c?ref=18c8f1a812865bbd0f07b29910c54ab8c0632c54", "patch": "@@ -279,6 +279,29 @@ get_elimination (rtx reg)\n   return &self_elim_table;\n }\n \n+/* Transform (subreg (plus reg const)) to (plus (subreg reg) const)\n+   when it is possible.  Return X or the transformation result if the\n+   transformation is done.  */\n+static rtx\n+move_plus_up (rtx x)\n+{\n+  rtx subreg_reg;\n+  enum machine_mode x_mode, subreg_reg_mode;\n+  \n+  if (GET_CODE (x) != SUBREG || !subreg_lowpart_p (x))\n+    return x;\n+  subreg_reg = SUBREG_REG (x);\n+  x_mode = GET_MODE (x);\n+  subreg_reg_mode = GET_MODE (subreg_reg);\n+  if (GET_CODE (x) == SUBREG && GET_CODE (subreg_reg) == PLUS\n+      && GET_MODE_SIZE (x_mode) <= GET_MODE_SIZE (subreg_reg_mode)\n+      && CONSTANT_P (XEXP (subreg_reg, 1)))\n+    return gen_rtx_PLUS (x_mode, lowpart_subreg (x_mode, subreg_reg,\n+\t\t\t\t\t\t subreg_reg_mode),\n+\t\t\t XEXP (subreg_reg, 1));\n+  return x;\n+}\n+\n /* Scan X and replace any eliminable registers (such as fp) with a\n    replacement (such as sp) if SUBST_P, plus an offset.  The offset is\n    a change in the offset between the eliminable register and its\n@@ -407,6 +430,8 @@ lra_eliminate_regs_1 (rtx_insn *insn, rtx x, machine_mode mem_mode,\n \t\t\t\t\t subst_p, update_p,\n \t\t\t\t\t update_sp_offset, full_p);\n \n+\tnew0 = move_plus_up (new0);\n+\tnew1 = move_plus_up (new1);\n \tif (new0 != XEXP (x, 0) || new1 != XEXP (x, 1))\n \t  return form_sum (new0, new1);\n       }"}, {"sha": "d5f0ce057a43d8eb6711e0f8fedca3db2ba0fa04", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18c8f1a812865bbd0f07b29910c54ab8c0632c54/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18c8f1a812865bbd0f07b29910c54ab8c0632c54/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=18c8f1a812865bbd0f07b29910c54ab8c0632c54", "patch": "@@ -1,3 +1,8 @@\n+2015-12-04  Vladimir Makarov  <vmakarov@redhat.com>\n+\n+\tPR rtl-optimization/68349\n+\t* gcc.target/i386/pr68349.c: New test.\n+\n 2015-12-04  Nathan Sidwell  <nathan@acm.org>\n \n \t* gcc.target/nvptx/ary-init.c: New.\n@@ -288,7 +293,6 @@\n \t* gfortran.dg/graphite/pr68550-1.f90: New.\n \t* gfortran.dg/graphite/pr68550-2.f90: New.\n \n->>>>>>> .r231221\n 2015-12-02  Marek Polacek  <polacek@redhat.com>\n \n \tPR c/68513"}, {"sha": "4eae0530f62774b882da3e8aec720d8907909d25", "filename": "gcc/testsuite/gcc.target/i386/pr68349.c", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18c8f1a812865bbd0f07b29910c54ab8c0632c54/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr68349.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18c8f1a812865bbd0f07b29910c54ab8c0632c54/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr68349.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr68349.c?ref=18c8f1a812865bbd0f07b29910c54ab8c0632c54", "patch": "@@ -0,0 +1,30 @@\n+/* PR target/68483 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+\n+int a, b;\n+unsigned long strlen();\n+typedef struct sHyphenNode {\n+  char sepcnts[0];\n+  struct sHyphenNode *Daughters[];\n+} * PHyphenNode;\n+int GetIndex();\n+PHyphenNode c;\n+void DoHyphens_Field_1() {\n+  char d[300], e[300];\n+  int z, f, l = strlen();\n+  for (; z;)\n+    ;\n+  for (; l; z++) {\n+    f = z;\n+    for (; f < l; f++) {\n+      c = c->Daughters[GetIndex(d[f])];\n+      a = 0;\n+      for (; a <= f - z; a++)\n+\tif (e[z + a])\n+\t  e[z] = c->sepcnts[a];\n+    }\n+  }\n+  if (e[z])\n+    b = 1;\n+}"}]}