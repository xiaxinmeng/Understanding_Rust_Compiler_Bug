{"sha": "73bfae68ebe09d58d650e458d507018f9633b440", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzNiZmFlNjhlYmUwOWQ1OGQ2NTBlNDU4ZDUwNzAxOGY5NjMzYjQ0MA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2016-01-20T23:55:38Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-01-20T23:55:38Z"}, "message": "omp-low.c (expand_omp_target): Avoid -Wmaybe-uninitialized warning.\n\n\t* omp-low.c (expand_omp_target): Avoid -Wmaybe-uninitialized\n\twarning.  Fix up formatting.\n\nFrom-SVN: r232641", "tree": {"sha": "bb73fcd5bd09cec1e0838665e21d8c705135da59", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bb73fcd5bd09cec1e0838665e21d8c705135da59"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/73bfae68ebe09d58d650e458d507018f9633b440", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73bfae68ebe09d58d650e458d507018f9633b440", "html_url": "https://github.com/Rust-GCC/gccrs/commit/73bfae68ebe09d58d650e458d507018f9633b440", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73bfae68ebe09d58d650e458d507018f9633b440/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bdd3aea68b3f6b83b48676aea4c38ac457e02fdf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bdd3aea68b3f6b83b48676aea4c38ac457e02fdf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bdd3aea68b3f6b83b48676aea4c38ac457e02fdf"}], "stats": {"total": 14, "additions": 8, "deletions": 6}, "files": [{"sha": "f20b9b632110a312a6513eac48f94c036235e3b3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73bfae68ebe09d58d650e458d507018f9633b440/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73bfae68ebe09d58d650e458d507018f9633b440/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=73bfae68ebe09d58d650e458d507018f9633b440", "patch": "@@ -1,5 +1,8 @@\n 2016-01-21  Jakub Jelinek  <jakub@redhat.com>\n \n+\t* omp-low.c (expand_omp_target): Avoid -Wmaybe-uninitialized\n+\twarning.  Fix up formatting.\n+\n \tPR middle-end/67653\n \t* gimplify.c (gimplify_asm_expr): Warn if it is too late to\n \tattempt to mark memory input operand addressable and"}, {"sha": "29770820a06b6f73147582868b809ebac9829410", "filename": "gcc/omp-low.c", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73bfae68ebe09d58d650e458d507018f9633b440/gcc%2Fomp-low.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73bfae68ebe09d58d650e458d507018f9633b440/gcc%2Fomp-low.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomp-low.c?ref=73bfae68ebe09d58d650e458d507018f9633b440", "patch": "@@ -13328,21 +13328,20 @@ expand_omp_target (struct omp_region *region)\n \t\t\t\t\t\t     GOMP_ASYNC_SYNC));\n \tif (tagging && t_async)\n \t  {\n-\t    unsigned HOST_WIDE_INT i_async;\n+\t    unsigned HOST_WIDE_INT i_async = GOMP_LAUNCH_OP_MAX;\n \n \t    if (TREE_CODE (t_async) == INTEGER_CST)\n \t      {\n \t\t/* See if we can pack the async arg in to the tag's\n \t\t   operand.  */\n \t\ti_async = TREE_INT_CST_LOW (t_async);\n-\n \t\tif (i_async < GOMP_LAUNCH_OP_MAX)\n \t\t  t_async = NULL_TREE;\n+\t\telse\n+\t\t  i_async = GOMP_LAUNCH_OP_MAX;\n \t      }\n-\t    if (t_async)\n-\t      i_async = GOMP_LAUNCH_OP_MAX;\n-\t    args.safe_push (oacc_launch_pack\n-\t\t\t    (GOMP_LAUNCH_ASYNC, NULL_TREE, i_async));\n+\t    args.safe_push (oacc_launch_pack (GOMP_LAUNCH_ASYNC, NULL_TREE,\n+\t\t\t\t\t      i_async));\n \t  }\n \tif (t_async)\n \t  args.safe_push (t_async);"}]}