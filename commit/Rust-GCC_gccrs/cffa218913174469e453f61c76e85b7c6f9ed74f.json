{"sha": "cffa218913174469e453f61c76e85b7c6f9ed74f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2ZmYTIxODkxMzE3NDQ2OWU0NTNmNjFjNzZlODViN2M2ZjllZDc0Zg==", "commit": {"author": {"name": "J\"orn Rennecke", "email": "joern.rennecke@superh.com", "date": "2002-07-16T10:59:15Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "2002-07-16T10:59:15Z"}, "message": "expr.c (emit_move_insn_1): Handle arbitrary moves that are the same size as a word.\n\n\t* expr.c (emit_move_insn_1): Handle arbitrary moves that are\n\tthe same size as a word.\n\n\t* regrename.c (find_oldest_value_reg): Take WORDS_BIG_ENDIAN /\n\tBYTES_BIG_ENDIAN into account.\n\nFrom-SVN: r55482", "tree": {"sha": "0b00a805101ffc0866f51c0f8db081dde5a27ea9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0b00a805101ffc0866f51c0f8db081dde5a27ea9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cffa218913174469e453f61c76e85b7c6f9ed74f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cffa218913174469e453f61c76e85b7c6f9ed74f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cffa218913174469e453f61c76e85b7c6f9ed74f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cffa218913174469e453f61c76e85b7c6f9ed74f/comments", "author": null, "committer": null, "parents": [{"sha": "052c96b1b05f5b170c38a927cf92c38e07d29791", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/052c96b1b05f5b170c38a927cf92c38e07d29791", "html_url": "https://github.com/Rust-GCC/gccrs/commit/052c96b1b05f5b170c38a927cf92c38e07d29791"}], "stats": {"total": 32, "additions": 26, "deletions": 6}, "files": [{"sha": "e463efd87e1b05aeae9c9da960b9fbba6d25b0ac", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cffa218913174469e453f61c76e85b7c6f9ed74f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cffa218913174469e453f61c76e85b7c6f9ed74f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cffa218913174469e453f61c76e85b7c6f9ed74f", "patch": "@@ -1,3 +1,11 @@\n+Tue Jul 16 11:57:45 2002  J\"orn Rennecke <joern.rennecke@superh.com>\n+\n+\t* expr.c (emit_move_insn_1): Handle arbitrary moves that are\n+\tthe same size as a word.\n+\n+\t* regrename.c (find_oldest_value_reg): Take WORDS_BIG_ENDIAN /\n+\tBYTES_BIG_ENDIAN into account.\n+\n Tue Jul 16 12:22:44 CEST 2002  Jan Hubicka  <jh@suse.cz>\n \n \t* i386.md (prefetch): Fix for 64bit mode."}, {"sha": "7b5810c617cd139fd0241dbe09b0e993132e02c3", "filename": "gcc/expr.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cffa218913174469e453f61c76e85b7c6f9ed74f/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cffa218913174469e453f61c76e85b7c6f9ed74f/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=cffa218913174469e453f61c76e85b7c6f9ed74f", "patch": "@@ -3058,10 +3058,10 @@ emit_move_insn_1 (x, y)\n       return get_last_insn ();\n     }\n \n-  /* This will handle any multi-word mode that lacks a move_insn pattern.\n-     However, you will get better code if you define such patterns,\n+  /* This will handle any multi-word or full-word mode that lacks a move_insn\n+     pattern.  However, you will get better code if you define such patterns,\n      even if they must turn into multiple assembler instructions.  */\n-  else if (GET_MODE_SIZE (mode) > UNITS_PER_WORD)\n+  else if (GET_MODE_SIZE (mode) >= UNITS_PER_WORD)\n     {\n       rtx last_insn = 0;\n       rtx seq, inner;"}, {"sha": "532d5753df3809a66332d2b44ce01ccee210e5af", "filename": "gcc/regrename.c", "status": "modified", "additions": 15, "deletions": 3, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cffa218913174469e453f61c76e85b7c6f9ed74f/gcc%2Fregrename.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cffa218913174469e453f61c76e85b7c6f9ed74f/gcc%2Fregrename.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fregrename.c?ref=cffa218913174469e453f61c76e85b7c6f9ed74f", "patch": "@@ -1335,14 +1335,26 @@ find_oldest_value_reg (class, reg, vd)\n     }\n \n   for (i = vd->e[regno].oldest_regno; i != regno; i = vd->e[i].next_regno)\n+    {\n+      enum machine_mode oldmode = vd->e[i].mode;\n+\n     if (TEST_HARD_REG_BIT (reg_class_contents[class], i)\n-\t&& (vd->e[i].mode == mode\n-\t    || mode_change_ok (vd->e[i].mode, mode, i)))\n+\t&& (oldmode == mode\n+\t    || mode_change_ok (oldmode, mode, i)))\n       {\n-\trtx new = gen_rtx_raw_REG (mode, i);\n+\tint offset = GET_MODE_SIZE (oldmode) - GET_MODE_SIZE (mode);\n+\tint byteoffset = offset % UNITS_PER_WORD;\n+\tint wordoffset = offset - byteoffset;\n+\trtx new;\n+\n+\toffset = ((WORDS_BIG_ENDIAN ? wordoffset : 0)\n+\t\t  + (BYTES_BIG_ENDIAN ? byteoffset : 0));\n+\tnew = (gen_rtx_raw_REG\n+\t       (mode, i + subreg_regno_offset (i, oldmode, offset, mode)));\n \tORIGINAL_REGNO (new) = ORIGINAL_REGNO (reg);\n \treturn new;\n       }\n+    }\n \n   return NULL_RTX;\n }"}]}